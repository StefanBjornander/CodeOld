1:	

stack_test:	; call header integral zero 0 stack zero 0
3:	

stack_test$1:	; parameter string_25i20#, offset 6
4:		mov word [bp + 12], string_25i20#
6:	

stack_test$2:	; £temporary5171 = i
7:		mov t2835, [@36$i]
9:	

stack_test$3:	; ++i
10:		inc word [@36$i]
12:	

stack_test$4:	; parameter £temporary5171, offset 8
13:		mov [bp + 14], t2835
15:	

stack_test$5:	; call function noellipse-ellipse printf, extra 0
16:		mov word [bp + 6], stack_test$6
17:		mov [bp + 8], bp
18:		add bp, 6
19:		mov di, bp
20:		add di, 2
21:		jmp printf
23:	

stack_test$6:	; post call
25:	

stack_test$7:	; call header integral zero 0 stack zero 0
27:	

stack_test$8:	; call function noellipse-noellipse stack_test
28:		mov word [bp + 6], stack_test$9
29:		mov [bp + 8], bp
30:		add bp, 6
31:		jmp stack_test
33:	

stack_test$9:	; post call
35:	

stack_test$10:	; return
36:		mov t2836, [bp]
37:		mov di, [bp + 4]
38:		mov bp, [bp + 2]
39:		jmp t2836
41:	

stack_test$11:	; function end stack_test
1:	

heap_test:	; count = 0
2:		mov word [bp + 6], 0
4:	

heap_test$1:	; call header integral zero 0 stack zero 0
6:	

heap_test$2:	; parameter 1024, offset 6
7:		mov word [bp + 16], 1024
9:	

heap_test$3:	; call function noellipse-noellipse malloc
10:		mov word [bp + 10], heap_test$4
11:		mov [bp + 12], bp
12:		add bp, 10
13:		jmp malloc
15:	

heap_test$4:	; post call
17:	

heap_test$5:	; £temporary5176 = return_value
22:	

heap_test$6:	; pointer = £temporary5176
23:		mov [bp + 8], t2838
25:	

heap_test$7:	; if pointer == 0 goto 17
26:		cmp word [bp + 8], 0
27:		je heap_test$17
29:	

heap_test$8:	; call header integral zero 0 stack zero 0
31:	

heap_test$9:	; parameter string_102420bytes2Dblock20number3A2025i0A#, offset 6
32:		mov word [bp + 16], string_102420bytes2Dblock20number3A2025i0A#
34:	

heap_test$10:	; £temporary5178 = count
35:		mov t2839, [bp + 6]
37:	

heap_test$11:	; ++count
38:		inc word [bp + 6]
40:	

heap_test$12:	; parameter £temporary5178, offset 8
41:		mov [bp + 18], t2839
43:	

heap_test$13:	; parameter pointer, offset 10
44:		mov a2840, [bp + 8]
45:		mov [bp + 20], a2840
47:	

heap_test$14:	; call function noellipse-ellipse printf, extra 0
48:		mov word [bp + 10], heap_test$15
49:		mov [bp + 12], bp
50:		add bp, 10
51:		mov di, bp
52:		add di, 4
53:		jmp printf
55:	

heap_test$15:	; post call
57:	

heap_test$16:	; goto 1
58:		jmp heap_test$1
60:	

heap_test$17:	; return
61:		mov t2841, [bp]
62:		mov di, [bp + 4]
63:		mov bp, [bp + 2]
64:		jmp t2841
66:	

heap_test$18:	; function end heap_test
