0: a$p = 0
1: a$q = 0
2: call header
3: parameter string_test12Etxt#, offset 6
4: parameter string_test22Etxt#, offset 8
5: call function noellipse-noellipse file_test
6: post call
7: empty
8: return
9: function end main2
0: s[0] = 72
1: s[1] = 101
2: s[2] = 108
3: s[3] = 108
4: s[4] = 111
5: s[5] = 0
6: t[0] = 87
7: t[1] = 111
8: t[2] = 114
9: t[3] = 108
10: t[4] = 100
11: t[5] = 0
12: call header
13: parameter string_3C25s3E203C25s3E0A#, offset 6
14: parameter s, offset 8
15: parameter t, offset 10
16: call function noellipse-ellipse printf, extra 0
17: post call
18: empty
19: return
20: function end main33
0: g_outDevice = stdout
1: call header
2: parameter 88, offset 6
3: call function noellipse-noellipse printChar
4: post call
5: call header
6: parameter 10, offset 6
7: call function noellipse-noellipse printChar
8: post call
9: empty
10: return
11: function end main34
0: call header
1: parameter string_Please20write20a20character3A20#, offset 6
2: call function noellipse-ellipse printf, extra 0
3: post call
4: call header
5: parameter string_25c#, offset 6
6: £temporary26 = &c
7: parameter £temporary26, offset 8
8: call function noellipse-ellipse scanf, extra 0
9: post call
10: call header
11: parameter string_You20wrote20the20character202725c272E0A#, offset 6
12: £temporary28 = int_to_int c (Signed_Char -> Signed_Int)
13: parameter £temporary28, offset 8
14: call function noellipse-ellipse printf, extra 0
15: post call
16: empty
17: return
18: function end mainc
0: call header
1: parameter string_Please20write20an20integer3A20#, offset 6
2: call function noellipse-ellipse printf, extra 0
3: post call
4: call header
5: parameter string_25i#, offset 6
6: £temporary37 = &i
7: parameter £temporary37, offset 8
8: call function noellipse-ellipse scanf, extra 0
9: post call
10: call header
11: parameter string_You20wrote20the20integer2025i2E0A#, offset 6
12: parameter i, offset 8
13: call function noellipse-ellipse printf, extra 0
14: post call
15: empty
16: return
17: function end maini
0: call header
1: parameter string_Please20write20a20string3A20#, offset 6
2: call function noellipse-ellipse printf, extra 0
3: post call
4: call header
5: parameter string_25s#, offset 6
6: parameter s, offset 8
7: call function noellipse-ellipse scanf, extra 0
8: post call
9: call header
10: parameter string_You20wrote20the20string202225s222E0A#, offset 6
11: parameter s, offset 8
12: call function noellipse-ellipse printf, extra 0
13: post call
14: empty
15: return
16: function end mains
0: call header
1: call function noellipse-noellipse limits_test
2: post call
3: call header
4: call function noellipse-noellipse time_test
5: post call
6: empty
7: return
8: function end maint
0: call header
1: call function noellipse-noellipse malloc_test
2: post call
3: call header
4: push float 10
5: parameter 10, offset 6
6: call function noellipse-noellipse setjmp_test
7: post call
8: call header
9: push 0
10: parameter 0, offset 6
11: call function noellipse-noellipse setjmp_test
12: post call
13: empty
14: return
15: function end mainY
0: index = 129
1: empty
2: if index < 255 goto 5
3: goto 21
4: check track map float stack
5: empty
6: £temporary63 = int_to_int index (Signed_Int -> Pointer)
7: £temporary64 -> £temporary63 = *£temporary63
8: c = £temporary64 -> £temporary63
9: call header
10: parameter string_25i3A2025i203C25c3E0A#, offset 6
11: parameter index, offset 8
12: £temporary65 = int_to_int c (Signed_Char -> Signed_Int)
13: parameter £temporary65, offset 10
14: £temporary66 = int_to_int c (Signed_Char -> Signed_Int)
15: parameter £temporary66, offset 12
16: call function noellipse-ellipse printf, extra 0
17: post call
18: empty
19: index = index + 1
20: goto 1
21: call header
22: parameter string_0Aargc3A2025i0A#, offset 6
23: parameter argc, offset 8
24: call function noellipse-ellipse printf, extra 0
25: post call
26: index = 0
27: empty
28: if index < argc goto 31
29: goto 44
30: check track map float stack
31: empty
32: call header
33: parameter string_25i3A203C25s3E0A#, offset 6
34: parameter index, offset 8
35: £temporary72 = index * 2
36: £temporary73 = argv + £temporary72
37: £temporary71 -> £temporary73 = *£temporary73
38: parameter £temporary71 -> £temporary73, offset 10
39: call function noellipse-ellipse printf, extra 0
40: post call
41: empty
42: index = index + 1
43: goto 27
44: call header
45: parameter string_0A#, offset 6
46: call function noellipse-ellipse printf, extra 0
47: post call
48: index = 0
49: empty
50: £temporary77 = index * 2
51: £temporary78 = argv + £temporary77
52: £temporary76 -> £temporary78 = *£temporary78
53: if £temporary76 -> £temporary78 != 0 goto 56
54: goto 69
55: check track map float stack
56: empty
57: call header
58: parameter string_25i3A203C25s3E0A#, offset 6
59: parameter index, offset 8
60: £temporary82 = index * 2
61: £temporary83 = argv + £temporary82
62: £temporary81 -> £temporary83 = *£temporary83
63: parameter £temporary81 -> £temporary83, offset 10
64: call function noellipse-ellipse printf, extra 0
65: post call
66: empty
67: index = index + 1
68: goto 49
69: empty
70: return
71: function end mainX
0: call header
1: parameter string_argc3A2025i0A#, offset 6
2: parameter argc, offset 8
3: call function noellipse-ellipse printf, extra 0
4: post call
5: index = 0
6: empty
7: if index < argc goto 10
8: goto 23
9: check track map float stack
10: empty
11: call header
12: parameter string_25i3A203C25s3E0A#, offset 6
13: parameter index, offset 8
14: £temporary102 = index * 2
15: £temporary103 = argv + £temporary102
16: £temporary101 -> £temporary103 = *£temporary103
17: parameter £temporary101 -> £temporary103, offset 10
18: call function noellipse-ellipse printf, extra 0
19: post call
20: empty
21: index = index + 1
22: goto 6
23: call header
24: parameter string_0A#, offset 6
25: call function noellipse-ellipse printf, extra 0
26: post call
27: index = 0
28: empty
29: £temporary107 = index * 2
30: £temporary108 = argv + £temporary107
31: £temporary106 -> £temporary108 = *£temporary108
32: if £temporary106 -> £temporary108 != 0 goto 35
33: goto 48
34: check track map float stack
35: empty
36: call header
37: parameter string_25i3A203C25s3E0A#, offset 6
38: parameter index, offset 8
39: £temporary112 = index * 2
40: £temporary113 = argv + £temporary112
41: £temporary111 -> £temporary113 = *£temporary113
42: parameter £temporary111 -> £temporary113, offset 10
43: call function noellipse-ellipse printf, extra 0
44: post call
45: empty
46: index = index + 1
47: goto 28
48: call header
49: parameter string_0A#, offset 6
50: call function noellipse-ellipse printf, extra 0
51: post call
52: call header
53: parameter 0, offset 6
54: call function noellipse-noellipse mktime
55: post call
56: call header
57: parameter string_Hello210A#, offset 6
58: call function noellipse-ellipse printf, extra 0
59: post call
60: call header
61: parameter string_Please20write20a20character2C20a20string2C20an20integer2C20and20a20double3A20#, offset 6
62: call function noellipse-ellipse printf, extra 0
63: post call
64: call header
65: parameter string_25c2025s2025i2025lf#, offset 6
66: £temporary119 = &c
67: parameter £temporary119, offset 8
68: parameter s, offset 10
69: £temporary120 = &i
70: parameter £temporary120, offset 12
71: push float d
72: pop float empty X
73: £temporary121 = &d
74: parameter £temporary121, offset 14
75: call function noellipse-ellipse scanf, extra 0
76: post call
77: call header
78: parameter string_You20wrote20the20character202725c272C20the20string202225s222C20the20integer2025i2C20and20the20double2025f2E0A#, offset 6
79: £temporary123 = int_to_int c (Signed_Char -> Signed_Int)
80: parameter £temporary123, offset 8
81: parameter s, offset 10
82: parameter i, offset 12
83: push float d
84: parameter d, offset 14
85: call function noellipse-ellipse printf, extra 0
86: post call
87: empty
88: return
89: function end main
0: call header
1: parameter string_3A20#, offset 6
2: call function noellipse-ellipse printf, extra 0
3: post call
4: call header
5: parameter string_25lf#, offset 6
6: push float x
7: pop float empty X
8: £temporary152 = &x
9: parameter £temporary152, offset 8
10: call function noellipse-ellipse scanf, extra 0
11: post call
12: call header
13: parameter string_3C25f3E#, offset 6
14: push float x
15: parameter x, offset 8
16: call function noellipse-ellipse printf, extra 0
17: post call
18: empty
19: return
20: function end main3
0: call header
1: push float 3.14
2: parameter 3.14, offset 6
3: call function noellipse-noellipse setjmp_test
4: post call
5: call header
6: parameter string_2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D0A#, offset 6
7: call function noellipse-ellipse printf, extra 0
8: post call
9: call header
10: push 0
11: parameter 0, offset 6
12: call function noellipse-noellipse setjmp_test
13: post call
14: call header
15: parameter string_2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D0A#, offset 6
16: call function noellipse-ellipse printf, extra 0
17: post call
18: call header
19: push float 2.71
20: parameter 2.71, offset 6
21: call function noellipse-noellipse setjmp_test
22: post call
23: call header
24: parameter string_2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D0A#, offset 6
25: call function noellipse-ellipse printf, extra 0
26: post call
27: call header
28: push 0
29: parameter 0, offset 6
30: call function noellipse-noellipse setjmp_test
31: post call
32: empty
33: return
34: function end mains2
0: call header
1: parameter 97, offset 6
2: call function noellipse-noellipse character_test
3: post call
4: call header
5: parameter 66, offset 6
6: call function noellipse-noellipse character_test
7: post call
8: call header
9: parameter 49, offset 6
10: call function noellipse-noellipse character_test
11: post call
12: call header
13: parameter 46, offset 6
14: call function noellipse-noellipse character_test
15: post call
16: call header
17: parameter 10, offset 6
18: call function noellipse-noellipse character_test
19: post call
20: call header
21: parameter 102, offset 6
22: call function noellipse-noellipse character_test
23: post call
24: call header
25: parameter 103, offset 6
26: call function noellipse-noellipse character_test
27: post call
28: empty
29: return
30: function end char_main
0: n = 0
1: call header
2: parameter string_Please20write20a20number2028not20620or207293A20#, offset 6
3: call function noellipse-ellipse printf, extra 0
4: post call
5: call header
6: parameter string_25i#, offset 6
7: £temporary190 = &n
8: parameter £temporary190, offset 8
9: call function noellipse-ellipse scanf, extra 0
10: post call
11: if n != 6 goto 26
12: goto 14
13: check track map float stack
14: call header
15: parameter stderr, offset 6
16: parameter string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#, offset 8
17: parameter string_n20213D206#, offset 10
18: parameter string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CMain2Ec#, offset 12
19: parameter 840, offset 14
20: call function noellipse-ellipse fprintf, extra 0
21: post call
22: call header
23: call function noellipse-noellipse abort
24: post call
25: goto 26
26: empty
27: call header
28: parameter n, offset 6
29: call function noellipse-noellipse assert_test2
30: post call
31: empty
32: return
33: function end assert_test
0: if n != 7 goto 15
1: goto 3
2: check track map float stack
3: call header
4: parameter stderr, offset 6
5: parameter string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#, offset 8
6: parameter string_n20213D207#, offset 10
7: parameter string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CMain2Ec#, offset 12
8: parameter 845, offset 14
9: call function noellipse-ellipse fprintf, extra 0
10: post call
11: call header
12: call function noellipse-noellipse abort
13: post call
14: goto 15
15: empty
16: empty
17: return
18: function end assert_test2
0: if memorySize >= 0 goto 15
1: goto 3
2: check track map float stack
3: call header
4: parameter stderr, offset 6
5: parameter string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#, offset 8
6: parameter string_memorySize203E3D200#, offset 10
7: parameter string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CMalloc2Ec#, offset 12
8: parameter 25, offset 14
9: call function noellipse-ellipse fprintf, extra 0
10: post call
11: call header
12: call function noellipse-noellipse abort
13: post call
14: goto 15
15: empty
16: if memorySize == 0 goto 19
17: goto 22
18: check track map float stack
19: return_value = 0
20: return
21: goto 22
22: £temporary221 = int_to_int memorySize (Signed_Int -> Unsigned_Int)
23: £temporary222 = 4 + £temporary221
24: newBlockSize = £temporary222
25: minGap = 0
26: lastAddress = 65528
27: minBlockPtr = 0
28: minPrevBlockPtr = 0
29: prevBlockPtr = 0
30: currBlockPtr = g_firstBlockPtr
31: if currBlockPtr != 0 goto 34
32: goto 57
33: check track map float stack
34: £temporary224 = int_to_int currBlockPtr (Pointer -> Unsigned_Int)
35: currAddress = £temporary224
36: £temporary225 -> currBlockPtr = *currBlockPtr
37: £temporary226 = currAddress + £temporary225 -> currBlockPtr
38: £temporary227 = £temporary226 + 4
39: £temporary228 = lastAddress - £temporary227
40: currGap = £temporary228
41: if newBlockSize <= currGap goto 43
42: goto 52
43: if minGap == 0 goto 48
44: goto 45
45: if currGap < minGap goto 48
46: goto 52
47: check track map float stack
48: minGap = currGap
49: minBlockPtr = currBlockPtr
50: minPrevBlockPtr = prevBlockPtr
51: goto 52
52: lastAddress = currAddress
53: prevBlockPtr = currBlockPtr
54: £temporary234 -> currBlockPtr = *currBlockPtr, offset 2
55: currBlockPtr = £temporary234 -> currBlockPtr
56: goto 31
57: if minBlockPtr != 0 goto 60
58: goto 84
59: check track map float stack
60: £temporary236 = int_to_int minBlockPtr (Pointer -> Unsigned_Int)
61: £temporary237 -> minBlockPtr = *minBlockPtr
62: £temporary238 = £temporary236 + £temporary237 -> minBlockPtr
63: £temporary239 = £temporary238 + 4
64: newAddress = £temporary239
65: £temporary240 = int_to_int newAddress (Unsigned_Int -> Pointer)
66: newBlockPtr = £temporary240
67: £temporary241 -> newBlockPtr = *newBlockPtr
68: £temporary241 -> newBlockPtr = memorySize
69: £temporary242 -> newBlockPtr = *newBlockPtr, offset 2
70: £temporary242 -> newBlockPtr = minBlockPtr
71: if minPrevBlockPtr != 0 goto 74
72: goto 77
73: check track map float stack
74: £temporary244 -> minPrevBlockPtr = *minPrevBlockPtr, offset 2
75: £temporary244 -> minPrevBlockPtr = newBlockPtr
76: goto 79
77: g_firstBlockPtr = newBlockPtr
78: goto 79
79: £temporary245 = newAddress + 4
80: £temporary246 = int_to_int £temporary245 (Unsigned_Int -> Pointer)
81: return_value = £temporary246
82: return
83: goto 111
84: £temporary247 = lastAddress - newBlockSize
85: newAddress = £temporary247
86: £temporary248 = bp
87: stackTop = £temporary248
88: if stackTop <= newAddress goto 91
89: goto 111
90: check track map float stack
91: £temporary250 = int_to_int newAddress (Unsigned_Int -> Pointer)
92: newBlockPtr = £temporary250
93: £temporary251 -> newBlockPtr = *newBlockPtr
94: £temporary251 -> newBlockPtr = memorySize
95: £temporary252 -> newBlockPtr = *newBlockPtr, offset 2
96: £temporary252 -> newBlockPtr = 0
97: if prevBlockPtr != 0 goto 100
98: goto 103
99: check track map float stack
100: £temporary254 -> prevBlockPtr = *prevBlockPtr, offset 2
101: £temporary254 -> prevBlockPtr = newBlockPtr
102: goto 105
103: g_firstBlockPtr = newBlockPtr
104: goto 105
105: £temporary255 = newAddress + 4
106: £temporary256 = int_to_int £temporary255 (Unsigned_Int -> Pointer)
107: return_value = £temporary256
108: return
109: goto 111
110: goto 111
111: return_value = 0
112: return
113: empty
114: return
115: function end malloc
0: call header
1: £temporary262 = number * size
2: parameter £temporary262, offset 6
3: call function noellipse-noellipse malloc
4: post call
5: £temporary263 = return_value
6: pointer = £temporary263
7: if pointer != 0 goto 10
8: goto 17
9: check track map float stack
10: call header
11: parameter pointer, offset 6
12: parameter 0, offset 8
13: parameter size, offset 10
14: call function noellipse-noellipse memset
15: post call
16: goto 17
17: return_value = pointer
18: return
19: empty
20: return
21: function end calloc
0: if freeMemoryPtr == 0 goto 3
1: goto 5
2: check track map float stack
3: return
4: goto 5
5: £temporary271 = int_to_int freeMemoryPtr (Pointer -> Unsigned_Int)
6: £temporary272 = £temporary271 - 4
7: £temporary273 = int_to_int £temporary272 (Unsigned_Int -> Pointer)
8: freeBlockPtr = £temporary273
9: prevBlockPtr = 0
10: currBlockPtr = g_firstBlockPtr
11: if currBlockPtr != 0 goto 14
12: goto 50
13: check track map float stack
14: if currBlockPtr == freeBlockPtr goto 17
15: goto 46
16: check track map float stack
17: if prevBlockPtr == 0 goto 19
18: goto 25
19: £temporary277 -> currBlockPtr = *currBlockPtr, offset 2
20: if £temporary277 -> currBlockPtr == 0 goto 23
21: goto 25
22: check track map float stack
23: g_firstBlockPtr = 0
24: goto 44
25: if prevBlockPtr == 0 goto 28
26: goto 31
27: check track map float stack
28: £temporary281 -> currBlockPtr = *currBlockPtr, offset 2
29: g_firstBlockPtr = £temporary281 -> currBlockPtr
30: goto 44
31: £temporary282 -> currBlockPtr = *currBlockPtr, offset 2
32: if £temporary282 -> currBlockPtr == 0 goto 35
33: goto 38
34: check track map float stack
35: £temporary284 -> prevBlockPtr = *prevBlockPtr, offset 2
36: £temporary284 -> prevBlockPtr = 0
37: goto 44
38: £temporary285 -> prevBlockPtr = *prevBlockPtr, offset 2
39: £temporary286 -> currBlockPtr = *currBlockPtr, offset 2
40: £temporary285 -> prevBlockPtr = £temporary286 -> currBlockPtr
41: goto 44
42: goto 44
43: goto 44
44: return
45: goto 46
46: prevBlockPtr = currBlockPtr
47: £temporary287 -> currBlockPtr = *currBlockPtr, offset 2
48: currBlockPtr = £temporary287 -> currBlockPtr
49: goto 11
50: empty
51: return
52: function end free
0: if newMemorySize >= 0 goto 15
1: goto 3
2: check track map float stack
3: call header
4: parameter stderr, offset 6
5: parameter string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#, offset 8
6: parameter string_newMemorySize203E3D200#, offset 10
7: parameter string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CMalloc2Ec#, offset 12
8: parameter 259, offset 14
9: call function noellipse-ellipse fprintf, extra 0
10: post call
11: call header
12: call function noellipse-noellipse abort
13: post call
14: goto 15
15: empty
16: if oldMemoryPtr != 0 goto 33
17: goto 18
18: if newMemorySize > 0 goto 33
19: goto 21
20: check track map float stack
21: call header
22: parameter stderr, offset 6
23: parameter string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#, offset 8
24: parameter string_2820oldMemoryPtr20213D20NULL2029207C7C202820newMemorySize203E2002029#, offset 10
25: parameter string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CMalloc2Ec#, offset 12
26: parameter 260, offset 14
27: call function noellipse-ellipse fprintf, extra 0
28: post call
29: call header
30: call function noellipse-noellipse abort
31: post call
32: goto 33
33: empty
34: if oldMemoryPtr == 0 goto 37
35: goto 45
36: check track map float stack
37: call header
38: parameter newMemorySize, offset 6
39: call function noellipse-noellipse malloc
40: post call
41: £temporary299 = return_value
42: return_value = £temporary299
43: return
44: goto 45
45: if newMemorySize == 0 goto 48
46: goto 55
47: check track map float stack
48: call header
49: parameter oldMemoryPtr, offset 6
50: call function noellipse-noellipse free
51: post call
52: return_value = 0
53: return
54: goto 55
55: £temporary302 = int_to_int newMemorySize (Signed_Int -> Unsigned_Int)
56: £temporary303 = £temporary302 + 4
57: newBlockSize = £temporary303
58: £temporary304 = int_to_int oldMemoryPtr (Pointer -> Unsigned_Int)
59: £temporary305 = £temporary304 - 4
60: £temporary306 = int_to_int £temporary305 (Unsigned_Int -> Pointer)
61: oldBlockPtr = £temporary306
62: £temporary307 -> oldBlockPtr = *oldBlockPtr
63: if newBlockSize <= £temporary307 -> oldBlockPtr goto 66
64: goto 71
65: check track map float stack
66: £temporary309 -> oldBlockPtr = *oldBlockPtr
67: £temporary309 -> oldBlockPtr = newBlockSize
68: return_value = oldMemoryPtr
69: return
70: goto 71
71: lastAddress = 65528
72: currBlockPtr = g_firstBlockPtr
73: if currBlockPtr != 0 goto 76
74: goto 98
75: check track map float stack
76: if currBlockPtr == oldBlockPtr goto 79
77: goto 93
78: check track map float stack
79: £temporary312 = int_to_int currBlockPtr (Pointer -> Unsigned_Int)
80: £temporary313 = lastAddress - £temporary312
81: availableSize = £temporary313
82: if availableSize >= newBlockSize goto 85
83: goto 90
84: check track map float stack
85: £temporary315 -> oldBlockPtr = *oldBlockPtr
86: £temporary315 -> oldBlockPtr = newBlockSize
87: return_value = oldMemoryPtr
88: return
89: goto 93
90: goto 98
91: goto 93
92: goto 93
93: £temporary316 = int_to_int currBlockPtr (Pointer -> Unsigned_Int)
94: lastAddress = £temporary316
95: £temporary317 -> currBlockPtr = *currBlockPtr, offset 2
96: currBlockPtr = £temporary317 -> currBlockPtr
97: goto 73
98: call header
99: parameter newMemorySize, offset 6
100: call function noellipse-noellipse malloc
101: post call
102: £temporary318 = return_value
103: newMemoryPtr = £temporary318
104: if newMemoryPtr != 0 goto 107
105: goto 120
106: check track map float stack
107: call header
108: parameter newMemoryPtr, offset 6
109: parameter oldMemoryPtr, offset 8
110: parameter newMemorySize, offset 10
111: call function noellipse-noellipse memcpy
112: post call
113: call header
114: parameter oldMemoryPtr, offset 6
115: call function noellipse-noellipse free
116: post call
117: return_value = newMemoryPtr
118: return
119: goto 120
120: return_value = 0
121: return
122: empty
123: return
124: function end realloc
0: currBlockPtr = g_firstBlockPtr
1: call header
2: parameter string_Heap3A0A#, offset 6
3: call function noellipse-ellipse printf, extra 0
4: post call
5: if currBlockPtr != 0 goto 8
6: goto 19
7: check track map float stack
8: call header
9: parameter string_2020Address2025u2C20Size2025u0A#, offset 6
10: £temporary341 = int_to_int currBlockPtr (Pointer -> Unsigned_Int)
11: parameter £temporary341, offset 8
12: £temporary342 -> currBlockPtr = *currBlockPtr
13: parameter £temporary342 -> currBlockPtr, offset 10
14: call function noellipse-ellipse printf, extra 0
15: post call
16: £temporary344 -> currBlockPtr = *currBlockPtr, offset 2
17: currBlockPtr = £temporary344 -> currBlockPtr
18: goto 5
19: call header
20: parameter string_0A#, offset 6
21: call function noellipse-ellipse printf, extra 0
22: post call
23: empty
24: return
25: function end print_heap
0: call header
1: call function noellipse-noellipse localeconv
2: post call
3: £temporary351 = return_value
4: localeConvPtr = £temporary351
5: if localeConvPtr != 0 goto 8
6: goto 24
7: check track map float stack
8: call header
9: £temporary353 -> localeConvPtr = *localeConvPtr, offset 12
10: parameter £temporary353 -> localeConvPtr, offset 6
11: parameter c, offset 8
12: call function noellipse-noellipse strchr
13: post call
14: £temporary354 = return_value
15: if £temporary354 != 0 goto 17
16: goto 19
17: £temporary356 = 1
18: goto 20
19: £temporary356 = 0
20: empty
21: return_value = £temporary356
22: return
23: goto 35
24: if c >= 97 goto 26
25: goto 30
26: if c <= 122 goto 28
27: goto 30
28: £temporary360 = 1
29: goto 31
30: £temporary360 = 0
31: empty
32: return_value = £temporary360
33: return
34: goto 35
35: empty
36: return
37: function end islower
0: if c >= 97 goto 2
1: goto 6
2: if c <= 122 goto 4
3: goto 6
4: £temporary366 = 1
5: goto 7
6: £temporary366 = 0
7: empty
8: return_value = £temporary366
9: return
10: empty
11: return
12: function end islowerX
0: if c >= 65 goto 2
1: goto 6
2: if c <= 90 goto 4
3: goto 6
4: £temporary370 = 1
5: goto 7
6: £temporary370 = 0
7: empty
8: return_value = £temporary370
9: return
10: empty
11: return
12: function end isupperX
0: call header
1: call function noellipse-noellipse localeconv
2: post call
3: £temporary371 = return_value
4: localeConvPtr = £temporary371
5: if localeConvPtr != 0 goto 8
6: goto 24
7: check track map float stack
8: call header
9: £temporary373 -> localeConvPtr = *localeConvPtr, offset 14
10: parameter £temporary373 -> localeConvPtr, offset 6
11: parameter c, offset 8
12: call function noellipse-noellipse strchr
13: post call
14: £temporary374 = return_value
15: if £temporary374 != 0 goto 17
16: goto 19
17: £temporary376 = 1
18: goto 20
19: £temporary376 = 0
20: empty
21: return_value = £temporary376
22: return
23: goto 35
24: if c >= 65 goto 26
25: goto 30
26: if c <= 90 goto 28
27: goto 30
28: £temporary380 = 1
29: goto 31
30: £temporary380 = 0
31: empty
32: return_value = £temporary380
33: return
34: goto 35
35: empty
36: return
37: function end isupper
0: call header
1: parameter c, offset 6
2: call function noellipse-noellipse islower
3: post call
4: £temporary383 = return_value
5: if £temporary383 != 0 goto 14
6: goto 7
7: call header
8: parameter c, offset 6
9: call function noellipse-noellipse isupper
10: post call
11: £temporary384 = return_value
12: if £temporary384 != 0 goto 14
13: goto 16
14: £temporary388 = 1
15: goto 17
16: £temporary388 = 0
17: empty
18: return_value = £temporary388
19: return
20: empty
21: return
22: function end isalpha
0: if c >= 48 goto 2
1: goto 6
2: if c <= 57 goto 4
3: goto 6
4: £temporary394 = 1
5: goto 7
6: £temporary394 = 0
7: empty
8: return_value = £temporary394
9: return
10: empty
11: return
12: function end isdigit
0: call header
1: parameter c, offset 6
2: call function noellipse-noellipse isalpha
3: post call
4: £temporary395 = return_value
5: if £temporary395 != 0 goto 14
6: goto 7
7: call header
8: parameter c, offset 6
9: call function noellipse-noellipse isdigit
10: post call
11: £temporary396 = return_value
12: if £temporary396 != 0 goto 14
13: goto 16
14: £temporary400 = 1
15: goto 17
16: £temporary400 = 0
17: empty
18: return_value = £temporary400
19: return
20: empty
21: return
22: function end isalnum
0: call header
1: parameter c, offset 6
2: call function noellipse-noellipse isdigit
3: post call
4: £temporary403 = return_value
5: if £temporary403 != 0 goto 15
6: goto 7
7: if c >= 97 goto 9
8: goto 11
9: if c <= 102 goto 15
10: goto 11
11: if c >= 65 goto 13
12: goto 17
13: if c <= 70 goto 15
14: goto 17
15: £temporary413 = 1
16: goto 18
17: £temporary413 = 0
18: empty
19: return_value = £temporary413
20: return
21: empty
22: return
23: function end isxdigit
0: if c >= 32 goto 2
1: goto 6
2: if c <= 126 goto 4
3: goto 6
4: £temporary418 = 1
5: goto 7
6: £temporary418 = 0
7: empty
8: return_value = £temporary418
9: return
10: empty
11: return
12: function end isgraph
0: call header
1: parameter c, offset 6
2: call function noellipse-noellipse isgraph
3: post call
4: £temporary419 = return_value
5: if £temporary419 != 0 goto 7
6: goto 11
7: if c != 32 goto 9
8: goto 11
9: £temporary423 = 1
10: goto 12
11: £temporary423 = 0
12: empty
13: return_value = £temporary423
14: return
15: empty
16: return
17: function end isprint
0: call header
1: parameter c, offset 6
2: call function noellipse-noellipse isgraph
3: post call
4: £temporary425 = return_value
5: if £temporary425 != 0 goto 7
6: goto 16
7: call header
8: parameter c, offset 6
9: call function noellipse-noellipse isalnum
10: post call
11: £temporary427 = return_value
12: if £temporary427 != 0 goto 16
13: goto 14
14: £temporary431 = 1
15: goto 17
16: £temporary431 = 0
17: empty
18: return_value = £temporary431
19: return
20: empty
21: return
22: function end ispunct
0: call header
1: parameter c, offset 6
2: call function noellipse-noellipse isprint
3: post call
4: £temporary434 = return_value
5: if £temporary434 != 0 goto 9
6: goto 7
7: £temporary437 = 1
8: goto 10
9: £temporary437 = 0
10: empty
11: return_value = £temporary437
12: return
13: empty
14: return
15: function end iscntrl
0: if c == 32 goto 12
1: goto 2
2: if c == 12 goto 12
3: goto 4
4: if c == 10 goto 12
5: goto 6
6: if c == 13 goto 12
7: goto 8
8: if c == 9 goto 12
9: goto 10
10: if c == 11 goto 12
11: goto 14
12: £temporary450 = 1
13: goto 15
14: £temporary450 = 0
15: empty
16: return_value = £temporary450
17: return
18: empty
19: return
20: function end isspace
0: call header
1: parameter c, offset 6
2: call function noellipse-noellipse isupper
3: post call
4: £temporary451 = return_value
5: if £temporary451 != 0 goto 7
6: goto 11
7: empty
8: £temporary452 = c + 32
9: £temporary457 = £temporary452
10: goto 13
11: empty
12: £temporary457 = c
13: empty
14: return_value = £temporary457
15: return
16: empty
17: return
18: function end tolowerX
0: call header
1: parameter c, offset 6
2: call function noellipse-noellipse isupper
3: post call
4: £temporary459 = return_value
5: if £temporary459 != 0 goto 8
6: goto 39
7: check track map float stack
8: call header
9: call function noellipse-noellipse localeconv
10: post call
11: £temporary460 = return_value
12: localeConvPtr = £temporary460
13: if localeConvPtr != 0 goto 16
14: goto 34
15: check track map float stack
16: £temporary462 -> localeConvPtr = *localeConvPtr, offset 12
17: lowerCase = £temporary462 -> localeConvPtr
18: £temporary463 -> localeConvPtr = *localeConvPtr, offset 14
19: upperCase = £temporary463 -> localeConvPtr
20: call header
21: parameter upperCase, offset 6
22: parameter c, offset 8
23: call function noellipse-noellipse strchr
24: post call
25: £temporary464 = return_value
26: £temporary465 = £temporary464 - upperCase
27: index = £temporary465
28: £temporary467 = lowerCase + index
29: £temporary466 -> £temporary467 = *£temporary467
30: £temporary468 = int_to_int £temporary466 -> £temporary467 (Signed_Char -> Signed_Int)
31: return_value = £temporary468
32: return
33: goto 42
34: £temporary469 = c + 32
35: return_value = £temporary469
36: return
37: goto 42
38: goto 42
39: return_value = c
40: return
41: goto 42
42: empty
43: return
44: function end tolower
0: call header
1: parameter c, offset 6
2: call function noellipse-noellipse islower
3: post call
4: £temporary474 = return_value
5: if £temporary474 != 0 goto 7
6: goto 11
7: empty
8: £temporary475 = c - 32
9: £temporary480 = £temporary475
10: goto 13
11: empty
12: £temporary480 = c
13: empty
14: return_value = £temporary480
15: return
16: empty
17: return
18: function end toupperX
0: call header
1: parameter c, offset 6
2: call function noellipse-noellipse islower
3: post call
4: £temporary482 = return_value
5: if £temporary482 != 0 goto 8
6: goto 39
7: check track map float stack
8: call header
9: call function noellipse-noellipse localeconv
10: post call
11: £temporary483 = return_value
12: localeConvPtr = £temporary483
13: if localeConvPtr != 0 goto 16
14: goto 34
15: check track map float stack
16: £temporary485 -> localeConvPtr = *localeConvPtr, offset 12
17: lowerCase = £temporary485 -> localeConvPtr
18: £temporary486 -> localeConvPtr = *localeConvPtr, offset 14
19: upperCase = £temporary486 -> localeConvPtr
20: call header
21: parameter lowerCase, offset 6
22: parameter c, offset 8
23: call function noellipse-noellipse strchr
24: post call
25: £temporary487 = return_value
26: £temporary488 = £temporary487 - lowerCase
27: index = £temporary488
28: £temporary490 = upperCase + index
29: £temporary489 -> £temporary490 = *£temporary490
30: £temporary491 = int_to_int £temporary489 -> £temporary490 (Signed_Char -> Signed_Int)
31: return_value = £temporary491
32: return
33: goto 42
34: £temporary492 = c - 32
35: return_value = £temporary492
36: return
37: goto 42
38: goto 42
39: return_value = c
40: return
41: goto 42
42: empty
43: return
44: function end toupper
0: if g_currStructPtr != 0 goto 2
1: goto 6
2: empty
3: £temporary500 -> g_currStructPtr = *g_currStructPtr
4: £temporary504 = £temporary500 -> g_currStructPtr
5: goto 8
6: empty
7: £temporary504 = 0
8: empty
9: oldName = £temporary504
10: g_currStructPtr = 0
11: if newName != 0 goto 14
12: goto 43
13: check track map float stack
14: index = 0
15: empty
16: if index < sSize goto 19
17: goto 43
18: check track map float stack
19: empty
20: call header
21: parameter newName, offset 6
22: £temporary509 = index * 4
23: £temporary510 = sArray + £temporary509
24: £temporary508 -> £temporary510 = *£temporary510
25: parameter £temporary508.name$0 -> £temporary510, offset 8
26: call function noellipse-noellipse strcmp
27: post call
28: £temporary511 = return_value
29: if £temporary511 == 0 goto 32
30: goto 39
31: check track map float stack
32: £temporary514 = index * 4
33: £temporary515 = sArray + £temporary514
34: £temporary513 -> £temporary515 = *£temporary515
35: £temporary516 = &£temporary513 -> £temporary515
36: g_currStructPtr = £temporary516
37: goto 43
38: goto 39
39: empty
40: index = index + 1
41: goto 15
42: goto 43
43: return_value = oldName
44: return
45: empty
46: return
47: function end setlocale
0: if g_currStructPtr != 0 goto 2
1: goto 6
2: empty
3: £temporary520 -> g_currStructPtr = *g_currStructPtr, offset 2
4: £temporary524 = £temporary520 -> g_currStructPtr
5: goto 8
6: empty
7: £temporary524 = 0
8: empty
9: return_value = £temporary524
10: return
11: empty
12: return
13: function end localeconv
0: push 0
1: pop float n
2: push 1
3: pop float faculty
4: push 1
5: pop float power
6: push 0
7: pop float sum
8: push float term
9: pop float empty X
10: push float power
11: push float faculty
12: £temporary525 = power / faculty
13: top float term
14: pop float empty X
15: push float sum
16: push float term
17: £temporary526 = sum + term
18: top float sum
19: pop float empty X
20: push float power
21: push float x
22: £temporary527 = power * x
23: top float power
24: pop float empty X
25: push float faculty
26: push float n
27: push 1
28: n = n + 1
29: top float n
30: £temporary529 = faculty * £temporary528
31: top float faculty
32: pop float empty X
33: call header
34: push float term
35: parameter term, offset 6
36: call function noellipse-noellipse fabs
37: post call
38: £temporary530 = return_value
39: push float 0.000000001
40: if £temporary530 >= 0.000000001 goto 8
41: goto 44
42: check track map float stack
43: goto 8
44: push float sum
45: return_value = sum
46: return
47: empty
48: return
49: function end exp
0: push float x_plus_1
1: push 0
2: if x_plus_1 > 0 goto 5
3: goto 92
4: check track map float stack
5: expo = 0
6: push float x_plus_1
7: push float 2.7182818284590452353
8: pop float empty X
9: push float 0.3678794411714423216036827922
10: if x_plus_1 < 0.3678794411714423216036827922 goto 13
11: goto 20
12: check track map float stack
13: push float x_plus_1
14: push float 2.7182818284590452353
15: £temporary535 = x_plus_1 * 2.7182818284590452353
16: top float x_plus_1
17: pop float empty X
18: expo = expo - 1
19: goto 6
20: push float x_plus_1
21: push float 2.7182818284590452353
22: pop float empty X
23: push float 0.7357588823428846432073655843
24: if x_plus_1 > 0.7357588823428846432073655843 goto 27
25: goto 34
26: check track map float stack
27: push float x_plus_1
28: push float 2.7182818284590452353
29: £temporary538 = x_plus_1 / 2.7182818284590452353
30: top float x_plus_1
31: pop float empty X
32: expo = expo + 1
33: goto 20
34: push 1
35: pop float n
36: push 1
37: pop float plusMinusOne
38: push float x_plus_1
39: push 1
40: £temporary540 = x_plus_1 - 1
41: pop float x
42: push 0
43: pop float sum
44: push float x
45: pop float power
46: push float term
47: pop float empty X
48: push float plusMinusOne
49: push float power
50: push float n
51: push 1
52: n = n + 1
53: top float n
54: push 1
55: n = n - 1
56: £temporary542 = power / £temporary541
57: £temporary543 = plusMinusOne * £temporary542
58: top float term
59: pop float empty X
60: push float sum
61: push float term
62: £temporary544 = sum + term
63: top float sum
64: pop float empty X
65: push float power
66: push float x
67: £temporary545 = power * x
68: top float power
69: pop float empty X
70: push float plusMinusOne
71: push float -1.0
72: £temporary546 = plusMinusOne * -1.0
73: top float plusMinusOne
74: pop float empty X
75: call header
76: push float term
77: parameter term, offset 6
78: call function noellipse-noellipse fabs
79: post call
80: £temporary547 = return_value
81: push float 0.000000001
82: if £temporary547 > 0.000000001 goto 46
83: goto 86
84: check track map float stack
85: goto 46
86: push float sum
87: £temporary549 = int_to_float expo (Signed_Int -> Double)
88: £temporary550 = sum + £temporary549
89: return_value = £temporary550
90: return
91: goto 97
92: errno = 6
93: push 0
94: return_value = 0
95: return
96: goto 97
97: empty
98: return
99: function end log
0: push float 0.4342944820
1: call header
2: push float x
3: parameter x, offset 6
4: call function noellipse-noellipse log
5: post call
6: £temporary552 = return_value
7: £temporary553 = 0.4342944820 * £temporary552
8: return_value = £temporary553
9: return
10: empty
11: return
12: function end log10
0: push float x
1: push 0
2: if x > 0 goto 5
3: goto 54
4: check track map float stack
5: push float x
6: push 1
7: if x == 1 goto 10
8: goto 13
9: check track map float stack
10: return_value = 0
11: return
12: goto 58
13: push float x
14: push 1
15: if x > 1 goto 18
16: goto 35
17: check track map float stack
18: count = 0
19: push float x
20: push 1
21: if x > 1 goto 24
22: goto 31
23: check track map float stack
24: push float x
25: push float 10
26: £temporary559 = x / 10
27: top float x
28: pop float empty X
29: count = count + 1
30: goto 19
31: £temporary561 = count - 1
32: return_value = £temporary561
33: return
34: goto 58
35: count = 0
36: push float x
37: push 1
38: if x < 1 goto 41
39: goto 48
40: check track map float stack
41: push float x
42: push float 10
43: £temporary563 = x * 10
44: top float x
45: pop float empty X
46: count = count + 1
47: goto 36
48: £temporary565 = -count
49: return_value = £temporary565
50: return
51: goto 58
52: goto 58
53: goto 58
54: errno = 6
55: return_value = 0
56: return
57: goto 58
58: empty
59: return
60: function end log10_int
0: minus = 0
1: if y < 0 goto 4
2: goto 8
3: check track map float stack
4: £temporary567 = -y
5: y = £temporary567
6: minus = 1
7: goto 8
8: push 1
9: pop float product
10: index = 0
11: empty
12: if index < y goto 15
13: goto 24
14: check track map float stack
15: empty
16: push float product
17: push float x
18: £temporary570 = product * x
19: top float product
20: pop float empty X
21: empty
22: index = index + 1
23: goto 11
24: if minus != 0 goto 26
25: goto 32
26: empty
27: push 1
28: push float product
29: £temporary571 = 1 / product
30: decrease stack
31: goto 34
32: empty
33: push float product
34: empty
35: return_value = £temporary576
36: return
37: empty
38: return
39: function end pow_int
0: push float x
1: push 0
2: if x > 0 goto 5
3: goto 21
4: check track map float stack
5: call header
6: push float y
7: call header
8: push float x
9: parameter x, offset 6
10: call function noellipse-noellipse log
11: post call
12: £temporary578 = return_value
13: £temporary579 = y * £temporary578
14: parameter £temporary579, offset 6
15: call function noellipse-noellipse exp
16: post call
17: £temporary580 = return_value
18: return_value = £temporary580
19: return
20: goto 26
21: errno = 6
22: push 0
23: return_value = 0
24: return
25: goto 26
26: empty
27: return
28: function end pow
0: push float x
1: call header
2: push float 2
3: parameter 2, offset 6
4: £temporary583 = int_to_float n (Signed_Int -> Double)
5: parameter £temporary583, offset 14
6: call function noellipse-noellipse pow
7: post call
8: £temporary584 = return_value
9: £temporary585 = x * £temporary584
10: return_value = £temporary585
11: return
12: empty
13: return
14: function end ldexp
0: if p != 0 goto 3
1: goto 69
2: check track map float stack
3: push float x
4: push 0
5: if x == 0 goto 8
6: goto 14
7: check track map float stack
8: £temporary590 -> p = *p
9: £temporary590 -> p = 0
10: push 0
11: return_value = 0
12: return
13: goto 131
14: £temporary591 -> p = *p
15: call header
16: call header
17: push float x
18: parameter x, offset 6
19: call function noellipse-noellipse fabs
20: post call
21: £temporary592 = return_value
22: parameter £temporary592, offset 6
23: call function noellipse-noellipse log
24: post call
25: £temporary593 = return_value
26: call header
27: push float 2
28: parameter 2, offset 6
29: call function noellipse-noellipse log
30: post call
31: £temporary594 = return_value
32: £temporary595 = £temporary593 / £temporary594
33: £temporary596 = float_to_int £temporary595 (Double -> Signed_Int)
34: £temporary597 = £temporary596 + 1
35: £temporary591 -> p = £temporary597
36: call header
37: push float x
38: parameter x, offset 6
39: call function noellipse-noellipse fabs
40: post call
41: £temporary598 = return_value
42: call header
43: push float 2
44: parameter 2, offset 6
45: £temporary599 -> p = *p
46: £temporary600 = int_to_float £temporary599 -> p (Signed_Int -> Double)
47: parameter £temporary600, offset 14
48: call function noellipse-noellipse pow
49: post call
50: £temporary601 = return_value
51: £temporary602 = £temporary598 / £temporary601
52: pop float quotient
53: push float x
54: push 0
55: if x < 0 goto 57
56: goto 62
57: empty
58: push float quotient
59: £temporary604 = -quotient
60: decrease stack
61: goto 64
62: empty
63: push float quotient
64: empty
65: return_value = £temporary608
66: return
67: goto 131
68: goto 131
69: push float x
70: push 0
71: if x == 0 goto 74
72: goto 78
73: check track map float stack
74: push 0
75: return_value = 0
76: return
77: goto 131
78: call header
79: call header
80: push float x
81: parameter x, offset 6
82: call function noellipse-noellipse fabs
83: post call
84: £temporary610 = return_value
85: parameter £temporary610, offset 6
86: call function noellipse-noellipse log
87: post call
88: £temporary611 = return_value
89: call header
90: push float 2
91: parameter 2, offset 6
92: call function noellipse-noellipse log
93: post call
94: £temporary612 = return_value
95: £temporary613 = £temporary611 / £temporary612
96: £temporary614 = float_to_int £temporary613 (Double -> Signed_Int)
97: £temporary615 = £temporary614 + 1
98: n = £temporary615
99: call header
100: push float x
101: parameter x, offset 6
102: call function noellipse-noellipse fabs
103: post call
104: £temporary616 = return_value
105: call header
106: push float 2
107: parameter 2, offset 6
108: £temporary617 = int_to_float n (Signed_Int -> Double)
109: parameter £temporary617, offset 14
110: call function noellipse-noellipse pow
111: post call
112: £temporary618 = return_value
113: £temporary619 = £temporary616 / £temporary618
114: pop float a
115: push float x
116: push 0
117: if x < 0 goto 119
118: goto 124
119: empty
120: push float a
121: £temporary621 = -a
122: decrease stack
123: goto 126
124: empty
125: push float a
126: empty
127: return_value = £temporary625
128: return
129: goto 131
130: goto 131
131: empty
132: return
133: function end frexp
0: push 0
1: pop float n
2: push 1
3: pop float plusMinusOne
4: push 1
5: pop float faculty
6: push float x
7: pop float power
8: push 0
9: pop float sum
10: push float term
11: pop float empty X
12: push float plusMinusOne
13: push float power
14: push float faculty
15: £temporary638 = power / faculty
16: £temporary639 = plusMinusOne * £temporary638
17: top float term
18: pop float empty X
19: push float sum
20: push float term
21: £temporary640 = sum + term
22: top float sum
23: pop float empty X
24: push float plusMinusOne
25: push float -1
26: £temporary641 = plusMinusOne * -1
27: top float plusMinusOne
28: pop float empty X
29: push float power
30: push float x
31: push float x
32: £temporary642 = x * x
33: £temporary643 = power * £temporary642
34: top float power
35: pop float empty X
36: push float faculty
37: push float n
38: push float 2
39: £temporary644 = n + 2
40: push float n
41: push float 3
42: £temporary645 = n + 3
43: £temporary646 = £temporary644 * £temporary645
44: £temporary647 = faculty * £temporary646
45: top float faculty
46: pop float empty X
47: push float n
48: push float 2
49: £temporary648 = n + 2
50: top float n
51: pop float empty X
52: call header
53: push float term
54: parameter term, offset 6
55: call function noellipse-noellipse fabs
56: post call
57: £temporary649 = return_value
58: push float 0.000000001
59: if £temporary649 >= 0.000000001 goto 10
60: goto 63
61: check track map float stack
62: goto 10
63: push float sum
64: return_value = sum
65: return
66: empty
67: return
68: function end sin
0: push 0
1: pop float n
2: push 1
3: pop float plusMinusOne
4: push 1
5: pop float faculty
6: push 1
7: pop float power
8: push 0
9: pop float sum
10: push float term
11: pop float empty X
12: push float plusMinusOne
13: push float power
14: push float faculty
15: £temporary652 = power / faculty
16: £temporary653 = plusMinusOne * £temporary652
17: top float term
18: pop float empty X
19: push float sum
20: push float term
21: £temporary654 = sum + term
22: top float sum
23: pop float empty X
24: push float plusMinusOne
25: push float -1
26: £temporary655 = plusMinusOne * -1
27: top float plusMinusOne
28: pop float empty X
29: push float power
30: push float x
31: push float x
32: £temporary656 = x * x
33: £temporary657 = power * £temporary656
34: top float power
35: pop float empty X
36: push float faculty
37: push float n
38: push 1
39: £temporary658 = n + 1
40: push float n
41: push float 2
42: £temporary659 = n + 2
43: £temporary660 = £temporary658 * £temporary659
44: £temporary661 = faculty * £temporary660
45: top float faculty
46: pop float empty X
47: push float n
48: push float 2
49: £temporary662 = n + 2
50: top float n
51: pop float empty X
52: call header
53: push float term
54: parameter term, offset 6
55: call function noellipse-noellipse fabs
56: post call
57: £temporary663 = return_value
58: push float 0.000000001
59: if £temporary663 >= 0.000000001 goto 10
60: goto 63
61: check track map float stack
62: goto 10
63: push float sum
64: return_value = sum
65: return
66: empty
67: return
68: function end cos
0: call header
1: push float x
2: parameter x, offset 6
3: call function noellipse-noellipse cos
4: post call
5: £temporary666 = return_value
6: pop float cos_value
7: push float cos_value
8: push 0
9: if cos_value != 0 goto 12
10: goto 23
11: check track map float stack
12: call header
13: push float x
14: parameter x, offset 6
15: call function noellipse-noellipse sin
16: post call
17: £temporary668 = return_value
18: push float cos_value
19: £temporary669 = £temporary668 / cos_value
20: return_value = £temporary669
21: return
22: goto 28
23: errno = 6
24: push 0
25: return_value = 0
26: return
27: goto 28
28: empty
29: return
30: function end tan
0: call header
1: push float x
2: parameter x, offset 6
3: call function noellipse-noellipse exp
4: post call
5: £temporary672 = return_value
6: call header
7: push float x
8: £temporary673 = -x
9: parameter £temporary673, offset 6
10: call function noellipse-noellipse exp
11: post call
12: £temporary674 = return_value
13: £temporary675 = £temporary672 - £temporary674
14: push float 2
15: £temporary676 = £temporary675 / 2
16: return_value = £temporary676
17: return
18: empty
19: return
20: function end sinh
0: call header
1: push float x
2: parameter x, offset 6
3: call function noellipse-noellipse exp
4: post call
5: £temporary679 = return_value
6: call header
7: push float x
8: £temporary680 = -x
9: parameter £temporary680, offset 6
10: call function noellipse-noellipse exp
11: post call
12: £temporary681 = return_value
13: £temporary682 = £temporary679 + £temporary681
14: push float 2
15: £temporary683 = £temporary682 / 2
16: return_value = £temporary683
17: return
18: empty
19: return
20: function end cosh
0: call header
1: push float x
2: parameter x, offset 6
3: call function noellipse-noellipse cosh
4: post call
5: £temporary686 = return_value
6: pop float coh
7: push float coh
8: push 0
9: if coh != 0 goto 12
10: goto 27
11: check track map float stack
12: call header
13: push float x
14: parameter x, offset 6
15: call function noellipse-noellipse sinh
16: post call
17: £temporary688 = return_value
18: pop float sh
19: push float sh
20: push float coh
21: £temporary689 = sh / coh
22: pop float y
23: push float y
24: return_value = y
25: return
26: goto 32
27: errno = 6
28: push 0
29: return_value = 0
30: return
31: goto 32
32: empty
33: return
34: function end tanh
0: push float v
1: push 0
2: if v >= 0 goto 5
3: goto 45
4: check track map float stack
5: push 1
6: pop float x_nplus1
7: count = 0
8: push float x
9: pop float empty X
10: push float x_nplus1
11: top float x
12: pop float empty X
13: push float x_nplus1
14: pop float empty X
15: push float x
16: push float v
17: push float x
18: £temporary693 = v / x
19: £temporary694 = x + £temporary693
20: push float 2
21: £temporary695 = £temporary694 / 2
22: top float x_nplus1
23: pop float empty X
24: count = count + 1
25: £temporary696 = count
26: if £temporary696 < 1000 goto 28
27: goto 41
28: call header
29: push float x_nplus1
30: push float x
31: £temporary698 = x_nplus1 - x
32: parameter £temporary698, offset 6
33: call function noellipse-noellipse fabs
34: post call
35: £temporary699 = return_value
36: push float 0.000000001
37: if £temporary699 >= 0.000000001 goto 8
38: goto 41
39: check track map float stack
40: goto 8
41: push float x_nplus1
42: return_value = x_nplus1
43: return
44: goto 50
45: errno = 6
46: push 0
47: return_value = 0
48: return
49: goto 50
50: empty
51: return
52: function end sqrt
0: call header
1: push float x
2: parameter x, offset 6
3: call function noellipse-noellipse fabs
4: post call
5: £temporary703 = return_value
6: push 1
7: if £temporary703 <= 1 goto 10
8: goto 32
9: check track map float stack
10: call header
11: push float x
12: parameter x, offset 6
13: call header
14: push 1
15: push float x
16: £temporary705 = 1 + x
17: push 1
18: push float x
19: £temporary706 = 1 - x
20: £temporary707 = £temporary705 * £temporary706
21: parameter £temporary707, offset 20
22: call function noellipse-noellipse sqrt
23: post call
24: £temporary708 = return_value
25: parameter £temporary708, offset 14
26: call function noellipse-noellipse atan2
27: post call
28: £temporary709 = return_value
29: return_value = £temporary709
30: return
31: goto 37
32: errno = 6
33: push 0
34: return_value = 0
35: return
36: goto 37
37: empty
38: return
39: function end asin
0: call header
1: push float x
2: parameter x, offset 6
3: call function noellipse-noellipse fabs
4: post call
5: £temporary714 = return_value
6: push 1
7: if £temporary714 <= 1 goto 10
8: goto 32
9: check track map float stack
10: call header
11: call header
12: push 1
13: push float x
14: £temporary716 = 1 + x
15: push 1
16: push float x
17: £temporary717 = 1 - x
18: £temporary718 = £temporary716 * £temporary717
19: parameter £temporary718, offset 6
20: call function noellipse-noellipse sqrt
21: post call
22: £temporary719 = return_value
23: parameter £temporary719, offset 6
24: push float x
25: parameter x, offset 14
26: call function noellipse-noellipse atan2
27: post call
28: £temporary720 = return_value
29: return_value = £temporary720
30: return
31: goto 37
32: errno = 6
33: push 0
34: return_value = 0
35: return
36: goto 37
37: empty
38: return
39: function end acos
0: push float v
1: push 1
2: if v == 1 goto 5
3: goto 11
4: check track map float stack
5: push float 3.1415926535897932384
6: pop float empty X
7: push float 1.5707963267948966192
8: return_value = 1.5707963267948966192
9: return
10: goto 91
11: push float v
12: push float -1
13: if v == -1 goto 16
14: goto 24
15: check track map float stack
16: push float 3.1415926535897932384
17: pop float empty X
18: push float -3.1415926535897932384
19: pop float empty X
20: push float -1.5707963267948966192
21: return_value = -1.5707963267948966192
22: return
23: goto 91
24: call header
25: push float v
26: parameter v, offset 6
27: call function noellipse-noellipse fabs
28: post call
29: £temporary727 = return_value
30: push 1
31: if £temporary727 < 1 goto 34
32: goto 84
33: check track map float stack
34: push 1
35: pop float x_nplus1
36: count = 0
37: push float x
38: pop float empty X
39: push float x_nplus1
40: top float x
41: pop float empty X
42: push float x_nplus1
43: pop float empty X
44: push float x
45: call header
46: push float x
47: parameter x, offset 6
48: call function noellipse-noellipse tan
49: post call
50: £temporary729 = return_value
51: £temporary730 = x - £temporary729
52: push float v
53: call header
54: push float x
55: parameter x, offset 6
56: call function noellipse-noellipse cos
57: post call
58: £temporary731 = return_value
59: £temporary732 = v / £temporary731
60: £temporary733 = £temporary730 + £temporary732
61: top float x_nplus1
62: pop float empty X
63: count = count + 1
64: £temporary734 = count
65: if £temporary734 < 1000 goto 67
66: goto 80
67: call header
68: push float x_nplus1
69: push float x
70: £temporary736 = x_nplus1 - x
71: parameter £temporary736, offset 6
72: call function noellipse-noellipse fabs
73: post call
74: £temporary737 = return_value
75: push float 0.000000001
76: if £temporary737 >= 0.000000001 goto 37
77: goto 80
78: check track map float stack
79: goto 37
80: push float x_nplus1
81: return_value = x_nplus1
82: return
83: goto 91
84: errno = 6
85: push 0
86: return_value = 0
87: return
88: goto 91
89: goto 91
90: goto 91
91: empty
92: return
93: function end asin2
0: push float v
1: push 1
2: if v == 1 goto 5
3: goto 9
4: check track map float stack
5: push 0
6: return_value = 0
7: return
8: goto 78
9: call header
10: push float v
11: parameter v, offset 6
12: call function noellipse-noellipse fabs
13: post call
14: £temporary745 = return_value
15: push 1
16: if £temporary745 <= 1 goto 19
17: goto 72
18: check track map float stack
19: push 1
20: pop float x_nplus1
21: push float x_n
22: pop float empty X
23: push float x_nplus1
24: top float x_n
25: pop float empty X
26: push float x_nplus1
27: pop float empty X
28: push float x_n
29: call header
30: push float x_n
31: parameter x_n, offset 6
32: call function noellipse-noellipse cos
33: post call
34: £temporary747 = return_value
35: push float v
36: £temporary748 = £temporary747 - v
37: call header
38: push float x_n
39: parameter x_n, offset 6
40: call function noellipse-noellipse sin
41: post call
42: £temporary749 = return_value
43: £temporary750 = £temporary748 / £temporary749
44: £temporary751 = x_n + £temporary750
45: top float x_nplus1
46: pop float empty X
47: call header
48: parameter string_x_n2025f2C20x_nplus12025f0A#, offset 6
49: push float x_n
50: parameter x_n, offset 8
51: push float x_nplus1
52: parameter x_nplus1, offset 16
53: call function noellipse-ellipse printf, extra 0
54: post call
55: call header
56: push float x_nplus1
57: push float x_n
58: £temporary753 = x_nplus1 - x_n
59: parameter £temporary753, offset 6
60: call function noellipse-noellipse fabs
61: post call
62: £temporary754 = return_value
63: push float 0.000000001
64: if £temporary754 >= 0.000000001 goto 21
65: goto 68
66: check track map float stack
67: goto 21
68: push float x_nplus1
69: return_value = x_nplus1
70: return
71: goto 78
72: errno = 6
73: push 0
74: return_value = 0
75: return
76: goto 78
77: goto 78
78: empty
79: return
80: function end acos2
0: push float x
1: push float x
2: £temporary763 = x * x
3: return_value = £temporary763
4: return
5: empty
6: return
7: function end square
0: push float x
1: push 0
2: if x == 0 goto 5
3: goto 9
4: check track map float stack
5: push 0
6: return_value = 0
7: return
8: goto 95
9: push float x
10: push 1
11: if x == 1 goto 14
12: goto 20
13: check track map float stack
14: push float 3.1415926535897932384
15: pop float empty X
16: push float 0.7853981633974483096
17: return_value = 0.7853981633974483096
18: return
19: goto 95
20: push float x
21: push float -1
22: if x == -1 goto 25
23: goto 33
24: check track map float stack
25: push float 3.1415926535897932384
26: pop float empty X
27: push float -3.1415926535897932384
28: pop float empty X
29: push float -0.7853981633974483096
30: return_value = -0.7853981633974483096
31: return
32: goto 95
33: push 1
34: pop float sign
35: push 1
36: pop float denominator
37: push float x
38: pop float product
39: push 0
40: pop float sum
41: count = 0
42: push float term
43: pop float empty X
44: push float sign
45: push float product
46: £temporary767 = sign * product
47: push float denominator
48: £temporary768 = £temporary767 / denominator
49: top float term
50: pop float empty X
51: push float sum
52: push float term
53: £temporary769 = sum + term
54: top float sum
55: pop float empty X
56: push float sign
57: pop float empty X
58: push float sign
59: £temporary770 = -sign
60: top float sign
61: pop float empty X
62: push float product
63: push float x
64: push float x
65: £temporary771 = x * x
66: £temporary772 = product * £temporary771
67: top float product
68: pop float empty X
69: push float denominator
70: push float 2
71: £temporary773 = denominator + 2
72: top float denominator
73: pop float empty X
74: count = count + 1
75: £temporary774 = count
76: if £temporary774 < 1000 goto 78
77: goto 89
78: call header
79: push float term
80: parameter term, offset 6
81: call function noellipse-noellipse fabs
82: post call
83: £temporary776 = return_value
84: push float 0.000000001
85: if £temporary776 >= 0.000000001 goto 42
86: goto 89
87: check track map float stack
88: goto 42
89: push float sum
90: return_value = sum
91: return
92: goto 95
93: goto 95
94: goto 95
95: empty
96: return
97: function end atan
0: push float v
1: push 0
2: if v == 0 goto 5
3: goto 9
4: check track map float stack
5: push 0
6: return_value = 0
7: return
8: goto 185
9: push float v
10: push 1
11: if v == 1 goto 14
12: goto 20
13: check track map float stack
14: push float 3.1415926535897932384
15: pop float empty X
16: push float 0.7853981633974483096
17: return_value = 0.7853981633974483096
18: return
19: goto 185
20: push float v
21: push float -1
22: if v == -1 goto 25
23: goto 33
24: check track map float stack
25: push float 3.1415926535897932384
26: pop float empty X
27: push float -3.1415926535897932384
28: pop float empty X
29: push float -0.7853981633974483096
30: return_value = -0.7853981633974483096
31: return
32: goto 185
33: call header
34: push float v
35: parameter v, offset 6
36: call function noellipse-noellipse fabs
37: post call
38: £temporary783 = return_value
39: push float 0.5
40: if £temporary783 < 0.5 goto 43
41: goto 94
42: check track map float stack
43: sign = 1
44: denominator = 1
45: count = 0
46: push float v
47: pop float product
48: push 0
49: pop float sum
50: push float term
51: pop float empty X
52: £temporary785 = int_to_float sign (Signed_Int -> Double)
53: push float product
54: £temporary786 = £temporary785 * product
55: £temporary787 = int_to_float denominator (Signed_Int -> Double)
56: £temporary788 = £temporary786 / £temporary787
57: top float term
58: pop float empty X
59: push float sum
60: push float term
61: £temporary789 = sum + term
62: top float sum
63: pop float empty X
64: £temporary790 = -sign
65: sign = £temporary790
66: push float product
67: push float v
68: push float v
69: £temporary791 = v * v
70: £temporary792 = product * £temporary791
71: top float product
72: pop float empty X
73: £temporary793 = denominator + 2
74: denominator = £temporary793
75: count = count + 1
76: £temporary794 = count
77: if £temporary794 < 1000 goto 79
78: goto 90
79: call header
80: push float term
81: parameter term, offset 6
82: call function noellipse-noellipse fabs
83: post call
84: £temporary796 = return_value
85: push float 0.000000001
86: if £temporary796 >= 0.000000001 goto 50
87: goto 90
88: check track map float stack
89: goto 50
90: push float sum
91: return_value = sum
92: return
93: goto 185
94: call header
95: push float v
96: parameter v, offset 6
97: call function noellipse-noellipse fabs
98: post call
99: £temporary799 = return_value
100: push 1
101: if £temporary799 < 1 goto 104
102: goto 176
103: check track map float stack
104: call header
105: parameter string_atan2050A#, offset 6
106: call function noellipse-ellipse printf, extra 0
107: post call
108: push 1
109: pop float x_nplus1
110: push float x
111: pop float empty X
112: push float x_nplus1
113: top float x
114: pop float empty X
115: push float x_nplus1
116: pop float empty X
117: push float x
118: call header
119: push float x
120: parameter x, offset 6
121: call function noellipse-noellipse tan
122: post call
123: £temporary802 = return_value
124: push float v
125: £temporary803 = £temporary802 - v
126: call header
127: call header
128: push float 2
129: push float x
130: £temporary804 = 2 * x
131: parameter £temporary804, offset 6
132: call function noellipse-noellipse cos
133: post call
134: £temporary805 = return_value
135: push 1
136: £temporary806 = £temporary805 + 1
137: parameter £temporary806, offset 6
138: call function noellipse-noellipse square
139: post call
140: £temporary807 = return_value
141: £temporary808 = £temporary803 * £temporary807
142: push float 2
143: £temporary809 = £temporary808 / 2
144: £temporary810 = x - £temporary809
145: top float x_nplus1
146: pop float empty X
147: call header
148: parameter string_atan20x2025f20x_nplus12025f0A#, offset 6
149: push float x
150: parameter x, offset 8
151: push float x_nplus1
152: parameter x_nplus1, offset 16
153: call function noellipse-ellipse printf, extra 0
154: post call
155: call header
156: push float x_nplus1
157: push float x
158: £temporary812 = x_nplus1 - x
159: parameter £temporary812, offset 6
160: call function noellipse-noellipse fabs
161: post call
162: £temporary813 = return_value
163: push float 0.000000001
164: if £temporary813 >= 0.000000001 goto 110
165: goto 168
166: check track map float stack
167: goto 110
168: call header
169: parameter string_atan2070A#, offset 6
170: call function noellipse-ellipse printf, extra 0
171: post call
172: push float x_nplus1
173: return_value = x_nplus1
174: return
175: goto 185
176: errno = 6
177: push 0
178: return_value = 0
179: return
180: goto 185
181: goto 185
182: goto 185
183: goto 185
184: goto 185
185: empty
186: return
187: function end atanY
0: push float v
1: push 0
2: if v == 0 goto 5
3: goto 9
4: check track map float stack
5: push 0
6: return_value = 0
7: return
8: goto 81
9: call header
10: push float v
11: parameter v, offset 6
12: call function noellipse-noellipse fabs
13: post call
14: £temporary829 = return_value
15: push 1
16: if £temporary829 <= 1 goto 19
17: goto 75
18: check track map float stack
19: push 1
20: pop float x_nplus1
21: push float x
22: pop float empty X
23: push float x_nplus1
24: top float x
25: pop float empty X
26: push float x_nplus1
27: pop float empty X
28: push float x
29: call header
30: push float x
31: parameter x, offset 6
32: call function noellipse-noellipse tan
33: post call
34: £temporary831 = return_value
35: push float v
36: £temporary832 = £temporary831 - v
37: call header
38: call header
39: push float 2
40: push float x
41: £temporary833 = 2 * x
42: parameter £temporary833, offset 6
43: call function noellipse-noellipse cos
44: post call
45: £temporary834 = return_value
46: push 1
47: £temporary835 = £temporary834 + 1
48: parameter £temporary835, offset 6
49: call function noellipse-noellipse square
50: post call
51: £temporary836 = return_value
52: £temporary837 = £temporary832 * £temporary836
53: push float 2
54: £temporary838 = £temporary837 / 2
55: £temporary839 = x - £temporary838
56: top float x_nplus1
57: pop float empty X
58: call header
59: push float x_nplus1
60: push float x
61: £temporary840 = x_nplus1 - x
62: parameter £temporary840, offset 6
63: call function noellipse-noellipse fabs
64: post call
65: £temporary841 = return_value
66: push float 0.000000001
67: if £temporary841 >= 0.000000001 goto 21
68: goto 71
69: check track map float stack
70: goto 21
71: push float x_nplus1
72: return_value = x_nplus1
73: return
74: goto 81
75: errno = 6
76: push 0
77: return_value = 0
78: return
79: goto 81
80: goto 81
81: empty
82: return
83: function end atanX
0: push float x
1: push 0
2: if x > 0 goto 5
3: goto 16
4: check track map float stack
5: call header
6: push float y
7: push float x
8: £temporary849 = y / x
9: parameter £temporary849, offset 6
10: call function noellipse-noellipse atan
11: post call
12: £temporary850 = return_value
13: return_value = £temporary850
14: return
15: goto 85
16: push float x
17: push 0
18: if x < 0 goto 21
19: goto 53
20: check track map float stack
21: push float y
22: push 0
23: if y >= 0 goto 26
24: goto 39
25: check track map float stack
26: call header
27: push float y
28: push float x
29: £temporary853 = y / x
30: parameter £temporary853, offset 6
31: call function noellipse-noellipse atan
32: post call
33: £temporary854 = return_value
34: push float 3.1415926535897932384
35: £temporary855 = £temporary854 + 3.1415926535897932384
36: return_value = £temporary855
37: return
38: goto 85
39: call header
40: push float y
41: push float x
42: £temporary856 = y / x
43: parameter £temporary856, offset 6
44: call function noellipse-noellipse atan
45: post call
46: £temporary857 = return_value
47: push float 3.1415926535897932384
48: £temporary858 = £temporary857 - 3.1415926535897932384
49: return_value = £temporary858
50: return
51: goto 85
52: goto 85
53: push float y
54: push 0
55: if y > 0 goto 58
56: goto 64
57: check track map float stack
58: push float 3.1415926535897932384
59: pop float empty X
60: push float 1.5707963267948966192
61: return_value = 1.5707963267948966192
62: return
63: goto 85
64: push float y
65: push 0
66: if y < 0 goto 69
67: goto 77
68: check track map float stack
69: push float 3.1415926535897932384
70: pop float empty X
71: push float -3.1415926535897932384
72: pop float empty X
73: push float -1.5707963267948966192
74: return_value = -1.5707963267948966192
75: return
76: goto 85
77: errno = 6
78: push 0
79: return_value = 0
80: return
81: goto 85
82: goto 85
83: goto 85
84: goto 85
85: empty
86: return
87: function end atan2
0: push float denum
1: push 0
2: if denum > 0 goto 5
3: goto 22
4: check track map float stack
5: call header
6: push float num
7: push float denum
8: £temporary865 = num / denum
9: parameter £temporary865, offset 6
10: call function noellipse-noellipse atan
11: post call
12: £temporary866 = return_value
13: pop float y
14: call header
15: parameter string_20A#, offset 6
16: call function noellipse-ellipse printf, extra 0
17: post call
18: push float y
19: return_value = y
20: return
21: goto 129
22: push float num
23: push 0
24: if num >= 0 goto 26
25: goto 48
26: push float denum
27: push 0
28: if denum < 0 goto 31
29: goto 48
30: check track map float stack
31: call header
32: parameter string_20A#, offset 6
33: call function noellipse-ellipse printf, extra 0
34: post call
35: push float 3.1415926535897932384
36: call header
37: push float num
38: push float denum
39: £temporary872 = num / denum
40: parameter £temporary872, offset 6
41: call function noellipse-noellipse atan
42: post call
43: £temporary873 = return_value
44: £temporary874 = 3.1415926535897932384 + £temporary873
45: return_value = £temporary874
46: return
47: goto 129
48: push float num
49: push 0
50: if num < 0 goto 52
51: goto 76
52: push float denum
53: push 0
54: if denum < 0 goto 57
55: goto 76
56: check track map float stack
57: call header
58: parameter string_30A#, offset 6
59: call function noellipse-ellipse printf, extra 0
60: post call
61: push float 3.1415926535897932384
62: pop float empty X
63: push float -3.1415926535897932384
64: call header
65: push float num
66: push float denum
67: £temporary879 = num / denum
68: parameter £temporary879, offset 6
69: call function noellipse-noellipse atan
70: post call
71: £temporary880 = return_value
72: £temporary881 = -3.1415926535897932384 + £temporary880
73: return_value = £temporary881
74: return
75: goto 129
76: push float num
77: push 0
78: if num > 0 goto 80
79: goto 95
80: push float denum
81: push 0
82: if denum == 0 goto 85
83: goto 95
84: check track map float stack
85: call header
86: parameter string_40A#, offset 6
87: call function noellipse-ellipse printf, extra 0
88: post call
89: push float 3.1415926535897932384
90: pop float empty X
91: push float 1.5707963267948966192
92: return_value = 1.5707963267948966192
93: return
94: goto 129
95: push float num
96: push 0
97: if num < 0 goto 99
98: goto 116
99: push float denum
100: push 0
101: if denum == 0 goto 104
102: goto 116
103: check track map float stack
104: call header
105: parameter string_50A#, offset 6
106: call function noellipse-ellipse printf, extra 0
107: post call
108: push float 3.1415926535897932384
109: pop float empty X
110: push float -3.1415926535897932384
111: pop float empty X
112: push float -1.5707963267948966192
113: return_value = -1.5707963267948966192
114: return
115: goto 129
116: call header
117: parameter string_60A#, offset 6
118: call function noellipse-ellipse printf, extra 0
119: post call
120: errno = 6
121: push 0
122: return_value = 0
123: return
124: goto 129
125: goto 129
126: goto 129
127: goto 129
128: goto 129
129: empty
130: return
131: function end atan2x
0: push float x
1: push 0
2: if x < 0 goto 5
3: goto 16
4: check track map float stack
5: call header
6: push float x
7: £temporary901 = -x
8: parameter £temporary901, offset 6
9: call function noellipse-noellipse ceil
10: post call
11: £temporary902 = return_value
12: £temporary903 = -£temporary902
13: return_value = £temporary903
14: return
15: goto 16
16: push float x
17: £temporary904 = float_to_int x (Double -> Signed_Long_Int)
18: £temporary905 = int_to_float £temporary904 (Signed_Long_Int -> Double)
19: return_value = £temporary905
20: return
21: empty
22: return
23: function end floor
0: push float x
1: push 0
2: if x < 0 goto 5
3: goto 16
4: check track map float stack
5: call header
6: push float x
7: £temporary908 = -x
8: parameter £temporary908, offset 6
9: call function noellipse-noellipse floor
10: post call
11: £temporary909 = return_value
12: £temporary910 = -£temporary909
13: return_value = £temporary910
14: return
15: goto 16
16: push float x
17: push float 0.999999999999
18: £temporary911 = x + 0.999999999999
19: £temporary912 = float_to_int £temporary911 (Double -> Signed_Long_Int)
20: £temporary913 = int_to_float £temporary912 (Signed_Long_Int -> Double)
21: return_value = £temporary913
22: return
23: empty
24: return
25: function end ceil
0: push float x
1: push 0
2: if x < 0 goto 4
3: goto 10
4: empty
5: push float x
6: push float 0.5
7: £temporary916 = x - 0.5
8: decrease stack
9: goto 14
10: empty
11: push float x
12: push float 0.5
13: £temporary917 = x + 0.5
14: empty
15: £temporary922 = float_to_int £temporary921 (Double -> Signed_Long_Int)
16: £temporary923 = int_to_float £temporary922 (Signed_Long_Int -> Double)
17: return_value = £temporary923
18: return
19: empty
20: return
21: function end round
0: push float x
1: push 0
2: if x < 0 goto 4
3: goto 9
4: empty
5: push float x
6: £temporary925 = -x
7: decrease stack
8: goto 11
9: empty
10: push float x
11: empty
12: return_value = £temporary929
13: return
14: empty
15: return
16: function end fabs
0: call header
1: push float x
2: parameter x, offset 6
3: call function noellipse-noellipse fabs
4: post call
5: £temporary930 = return_value
6: £temporary931 = float_to_int £temporary930 (Double -> Signed_Long_Int)
7: £temporary932 = int_to_float £temporary931 (Signed_Long_Int -> Double)
8: pop float integral
9: if p != 0 goto 12
10: goto 44
11: check track map float stack
12: £temporary934 -> p = *p
13: push float £temporary934 -> p
14: pop float empty X
15: push float x
16: push 0
17: if x > 0 goto 19
18: goto 30
19: empty
20: call header
21: push float x
22: parameter x, offset 6
23: call function noellipse-noellipse fabs
24: post call
25: £temporary936 = return_value
26: push float integral
27: £temporary937 = £temporary936 - integral
28: decrease stack
29: goto 40
30: empty
31: call header
32: push float x
33: parameter x, offset 6
34: call function noellipse-noellipse fabs
35: post call
36: £temporary938 = return_value
37: push float integral
38: £temporary939 = £temporary938 - integral
39: £temporary940 = -£temporary939
40: empty
41: top float £temporary934 -> p
42: pop float empty X
43: goto 44
44: push float x
45: push 0
46: if x > 0 goto 48
47: goto 52
48: empty
49: push float integral
50: decrease stack
51: goto 55
52: empty
53: push float integral
54: £temporary946 = -integral
55: empty
56: return_value = £temporary950
57: return
58: empty
59: return
60: function end modf
0: push float y
1: push 0
2: if y != 0 goto 5
3: goto 35
4: check track map float stack
5: push float x
6: push float y
7: £temporary955 = x / y
8: pop float quotient
9: call header
10: push float quotient
11: push float quotient
12: £temporary956 = float_to_int quotient (Double -> Signed_Long_Int)
13: £temporary957 = int_to_float £temporary956 (Signed_Long_Int -> Double)
14: £temporary958 = quotient - £temporary957
15: parameter £temporary958, offset 6
16: call function noellipse-noellipse fabs
17: post call
18: £temporary959 = return_value
19: pop float remainder
20: push float x
21: push 0
22: if x > 0 goto 24
23: goto 28
24: empty
25: push float remainder
26: decrease stack
27: goto 31
28: empty
29: push float remainder
30: £temporary961 = -remainder
31: empty
32: return_value = £temporary965
33: return
34: goto 40
35: errno = 6
36: push 0
37: return_value = 0
38: return
39: goto 40
40: empty
41: return
42: function end fmod
0: £temporary967 = bp
1: bp_pointer = £temporary967
2: £temporary968 -> buf = *buf
3: £temporary969 -> bp_pointer = *bp_pointer
4: £temporary968 -> buf = £temporary969 -> bp_pointer
5: £temporary970 -> buf = *buf, offset 2
6: £temporary971 -> bp_pointer = *bp_pointer, offset 2
7: £temporary970 -> buf = £temporary971 -> bp_pointer
8: £temporary972 -> buf = *buf, offset 4
9: £temporary973 -> bp_pointer = *bp_pointer, offset 4
10: £temporary972 -> buf = £temporary973 -> bp_pointer
11: return_value = 0
12: return
13: empty
14: return
15: function end setjmp
0: bx = return_value
1: £temporary976 -> buf = *buf
2: cx = £temporary976 -> buf
3: £temporary978 -> buf = *buf, offset 4
4: di = £temporary978 -> buf
5: £temporary980 -> buf = *buf, offset 2
6: bp = £temporary980 -> buf
7: jump to 
8: empty
9: return
10: function end longjmp
0: call header
1: parameter string_Signal2025i20function2025p0A#, offset 6
2: parameter sig, offset 8
3: parameter func, offset 10
4: call function noellipse-ellipse printf, extra 0
5: post call
6: £temporary983 = int_to_int sig (Signed_Int -> Signed_Short_Int)
7: al = £temporary983
8: ah = 37
9: dx = func
10: interrupt 33
11: call header
12: parameter string_Signal20done0A#, offset 6
13: call function noellipse-ellipse printf, extra 0
14: post call
15: empty
16: return
17: function end signal
0: call header
1: parameter string_0ARaise20signal2025i0A#, offset 6
2: parameter sig, offset 8
3: call function noellipse-ellipse printf, extra 0
4: post call
5: £temporary993 = int_to_int sig (Signed_Int -> Signed_Short_Int)
6: al = £temporary993
7: ah = 53
8: interrupt 33
9: £temporary995 = bx
10: func = £temporary995
11: call header
12: parameter string_Raise20function2025p0A#, offset 6
13: parameter func, offset 8
14: call function noellipse-ellipse printf, extra 0
15: post call
16: if func == 0 goto 19
17: goto 26
18: check track map float stack
19: call header
20: parameter string_Raise20default0A#, offset 6
21: call function noellipse-ellipse printf, extra 0
22: post call
23: return_value = 1
24: return
25: goto 50
26: if func == 0 goto 29
27: goto 36
28: check track map float stack
29: call header
30: parameter string_Raise20error0A#, offset 6
31: call function noellipse-ellipse printf, extra 0
32: post call
33: return_value = 0
34: return
35: goto 50
36: call header
37: parameter string_Raise20function2C20calling2025i20with2025i0A#, offset 6
38: parameter func, offset 8
39: parameter sig, offset 10
40: call function noellipse-ellipse printf, extra 0
41: post call
42: call header
43: parameter sig, offset 6
44: call function noellipse-noellipse func
45: post call
46: return_value = 1
47: return
48: goto 50
49: goto 50
50: empty
51: return
52: function end raise
0: ah = 60
1: cx = 0
2: dx = name
3: interrupt 33
4: £temporary1019 = ax
5: handle = £temporary1019
6: if carry goto 9
7: goto 13
8: check track map float stack
9: errno = 9
10: return_value = -1
11: return
12: goto 13
13: return_value = handle
14: return
15: empty
16: return
17: function end filecreate
0: ah = 67
1: al = 0
2: dx = name
3: interrupt 33
4: if carry goto 8
5: goto 6
6: £temporary1026 = 1
7: goto 9
8: £temporary1026 = 0
9: empty
10: return_value = £temporary1026
11: return
12: empty
13: return
14: function end fileexists
0: ah = 61
1: al = mode
2: dx = name
3: interrupt 33
4: if carry goto 7
5: goto 11
6: check track map float stack
7: errno = 9
8: return_value = -1
9: return
10: goto 15
11: £temporary1031 = ax
12: return_value = £temporary1031
13: return
14: goto 15
15: empty
16: return
17: function end fileopen
0: index = 0
1: empty
2: if index < 20 goto 5
3: goto 29
4: check track map float stack
5: empty
6: £temporary1035 = index * 29
7: £temporary1036 = g_fileArray + £temporary1035
8: £temporary1034 -> £temporary1036 = *£temporary1036
9: if £temporary1034.open$0 -> £temporary1036 != 0 goto 26
10: goto 12
11: check track map float stack
12: call header
13: parameter name, offset 6
14: parameter mode, offset 8
15: £temporary1040 = index * 29
16: £temporary1041 = g_fileArray + £temporary1040
17: £temporary1039 -> £temporary1041 = *£temporary1041
18: £temporary1042 = &£temporary1039 -> £temporary1041
19: parameter £temporary1042, offset 10
20: call function noellipse-noellipse freopen
21: post call
22: £temporary1043 = return_value
23: return_value = £temporary1043
24: return
25: goto 26
26: empty
27: index = index + 1
28: goto 1
29: return_value = 0
30: return
31: empty
32: return
33: function end fopen
0: handle = -1
1: call header
2: parameter mode, offset 6
3: parameter string_r#, offset 8
4: call function noellipse-noellipse strcmp
5: post call
6: £temporary1047 = return_value
7: if £temporary1047 == 0 goto 10
8: goto 18
9: check track map float stack
10: call header
11: parameter name, offset 6
12: parameter 64, offset 8
13: call function noellipse-noellipse fileopen
14: post call
15: £temporary1049 = return_value
16: handle = £temporary1049
17: goto 157
18: call header
19: parameter mode, offset 6
20: parameter string_w#, offset 8
21: call function noellipse-noellipse strcmp
22: post call
23: £temporary1050 = return_value
24: if £temporary1050 == 0 goto 27
25: goto 34
26: check track map float stack
27: call header
28: parameter name, offset 6
29: call function noellipse-noellipse filecreate
30: post call
31: £temporary1052 = return_value
32: handle = £temporary1052
33: goto 157
34: call header
35: parameter mode, offset 6
36: parameter string_a#, offset 8
37: call function noellipse-noellipse strcmp
38: post call
39: £temporary1053 = return_value
40: if £temporary1053 == 0 goto 43
41: goto 68
42: check track map float stack
43: call header
44: parameter name, offset 6
45: parameter 65, offset 8
46: call function noellipse-noellipse fileopen
47: post call
48: £temporary1055 = return_value
49: handle = £temporary1055
50: if handle != -1 goto 53
51: goto 60
52: check track map float stack
53: call header
54: parameter stream, offset 6
55: parameter 0, offset 8
56: parameter 2, offset 10
57: call function noellipse-noellipse fseek
58: post call
59: goto 157
60: call header
61: parameter name, offset 6
62: call function noellipse-noellipse filecreate
63: post call
64: £temporary1058 = return_value
65: handle = £temporary1058
66: goto 157
67: goto 157
68: call header
69: parameter mode, offset 6
70: parameter string_r2B#, offset 8
71: call function noellipse-noellipse strcmp
72: post call
73: £temporary1059 = return_value
74: if £temporary1059 == 0 goto 77
75: goto 85
76: check track map float stack
77: call header
78: parameter name, offset 6
79: parameter 66, offset 8
80: call function noellipse-noellipse fileopen
81: post call
82: £temporary1061 = return_value
83: handle = £temporary1061
84: goto 157
85: call header
86: parameter mode, offset 6
87: parameter string_w2B#, offset 8
88: call function noellipse-noellipse strcmp
89: post call
90: £temporary1062 = return_value
91: if £temporary1062 == 0 goto 94
92: goto 118
93: check track map float stack
94: call header
95: parameter name, offset 6
96: call function noellipse-noellipse fileexists
97: post call
98: £temporary1064 = return_value
99: if £temporary1064 != 0 goto 102
100: goto 110
101: check track map float stack
102: call header
103: parameter name, offset 6
104: parameter 66, offset 8
105: call function noellipse-noellipse fileopen
106: post call
107: £temporary1065 = return_value
108: handle = £temporary1065
109: goto 157
110: call header
111: parameter name, offset 6
112: call function noellipse-noellipse filecreate
113: post call
114: £temporary1066 = return_value
115: handle = £temporary1066
116: goto 157
117: goto 157
118: call header
119: parameter mode, offset 6
120: parameter string_a2B#, offset 8
121: call function noellipse-noellipse strcmp
122: post call
123: £temporary1068 = return_value
124: if £temporary1068 == 0 goto 127
125: goto 157
126: check track map float stack
127: call header
128: parameter name, offset 6
129: parameter 66, offset 8
130: call function noellipse-noellipse fileopen
131: post call
132: £temporary1070 = return_value
133: handle = £temporary1070
134: if handle != -1 goto 137
135: goto 144
136: check track map float stack
137: call header
138: parameter stream, offset 6
139: parameter 0, offset 8
140: parameter 2, offset 10
141: call function noellipse-noellipse fseek
142: post call
143: goto 157
144: call header
145: parameter name, offset 6
146: call function noellipse-noellipse filecreate
147: post call
148: £temporary1073 = return_value
149: handle = £temporary1073
150: goto 157
151: goto 157
152: goto 157
153: goto 157
154: goto 157
155: goto 157
156: goto 157
157: if handle != -1 goto 160
158: goto 177
159: check track map float stack
160: £temporary1075 -> stream = *stream
161: £temporary1075 -> stream = 1
162: £temporary1076 -> stream = *stream, offset 2
163: £temporary1076 -> stream = handle
164: £temporary1077 -> stream = *stream, offset 25
165: £temporary1077 -> stream = 0
166: call header
167: £temporary1078 -> stream = *stream, offset 4
168: parameter £temporary1078 -> stream, offset 6
169: parameter name, offset 8
170: call function noellipse-noellipse strcpy
171: post call
172: £temporary1080 -> stream = *stream, offset 27
173: £temporary1080 -> stream = 0
174: return_value = stream
175: return
176: goto 182
177: £temporary1081 -> stream = *stream
178: £temporary1081 -> stream = 0
179: return_value = 0
180: return
181: goto 182
182: empty
183: return
184: function end freopen
0: if stream == 0 goto 3
1: goto 35
2: check track map float stack
3: index = 0
4: empty
5: if index < 20 goto 8
6: goto 35
7: check track map float stack
8: empty
9: £temporary1121 = index * 29
10: £temporary1122 = g_fileArray + £temporary1121
11: £temporary1120 -> £temporary1122 = *£temporary1122
12: if £temporary1120.open$0 -> £temporary1122 != 0 goto 15
13: goto 31
14: check track map float stack
15: call header
16: £temporary1124 = index * 29
17: £temporary1125 = g_fileArray + £temporary1124
18: £temporary1123 -> £temporary1125 = *£temporary1125
19: £temporary1126 = &£temporary1123 -> £temporary1125
20: parameter £temporary1126, offset 6
21: call function noellipse-noellipse fflush
22: post call
23: £temporary1127 = return_value
24: if £temporary1127 == -1 goto 27
25: goto 31
26: check track map float stack
27: return_value = -1
28: return
29: goto 31
30: goto 31
31: empty
32: index = index + 1
33: goto 4
34: goto 35
35: return_value = 0
36: return
37: empty
38: return
39: function end fflush
0: if stream != 0 goto 3
1: goto 29
2: check track map float stack
3: ah = 62
4: £temporary1134 -> stream = *stream, offset 2
5: bx = £temporary1134 -> stream
6: interrupt 33
7: if carry goto 10
8: goto 14
9: check track map float stack
10: errno = 11
11: return_value = -1
12: return
13: goto 14
14: £temporary1136 -> stream = *stream, offset 27
15: if £temporary1136 -> stream != 0 goto 18
16: goto 24
17: check track map float stack
18: call header
19: £temporary1137 -> stream = *stream, offset 4
20: parameter £temporary1137 -> stream, offset 6
21: call function noellipse-noellipse remove
22: post call
23: goto 24
24: £temporary1140 -> stream = *stream
25: £temporary1140 -> stream = 0
26: return_value = 0
27: return
28: goto 63
29: index = 0
30: empty
31: if index < 20 goto 34
32: goto 60
33: check track map float stack
34: empty
35: £temporary1144 = index * 29
36: £temporary1145 = g_fileArray + £temporary1144
37: £temporary1143 -> £temporary1145 = *£temporary1145
38: if £temporary1143.open$0 -> £temporary1145 != 0 goto 41
39: goto 57
40: check track map float stack
41: call header
42: £temporary1147 = index * 29
43: £temporary1148 = g_fileArray + £temporary1147
44: £temporary1146 -> £temporary1148 = *£temporary1148
45: £temporary1149 = &£temporary1146 -> £temporary1148
46: parameter £temporary1149, offset 6
47: call function noellipse-noellipse fclose
48: post call
49: £temporary1150 = return_value
50: if £temporary1150 == -1 goto 53
51: goto 57
52: check track map float stack
53: return_value = -1
54: return
55: goto 57
56: goto 57
57: empty
58: index = index + 1
59: goto 30
60: return_value = 0
61: return
62: goto 63
63: empty
64: return
65: function end fclose
0: ah = 65
1: cl = 0
2: dx = name
3: interrupt 33
4: if carry goto 7
5: goto 11
6: check track map float stack
7: errno = 18
8: return_value = -1
9: return
10: goto 11
11: return_value = 0
12: return
13: empty
14: return
15: function end remove
0: ah = 86
1: cl = 0
2: dx = oldName
3: di = newName
4: interrupt 33
5: if carry goto 8
6: goto 12
7: check track map float stack
8: errno = 19
9: return_value = -1
10: return
11: goto 12
12: return_value = 0
13: return
14: empty
15: return
16: function end rename
0: return_value = 0
1: return
2: empty
3: return
4: function end setvbuf
0: empty
1: return
2: function end setbuf
0: c = 0
1: call header
2: £temporary1164 = &c
3: parameter £temporary1164, offset 6
4: parameter 1, offset 8
5: parameter 1, offset 10
6: parameter stream, offset 12
7: call function noellipse-noellipse fread
8: post call
9: £temporary1165 = return_value
10: if £temporary1165 > 0 goto 13
11: goto 17
12: check track map float stack
13: £temporary1167 = int_to_int c (Signed_Char -> Signed_Int)
14: return_value = £temporary1167
15: return
16: goto 17
17: return_value = -1
18: return
19: empty
20: return
21: function end fgetc
0: count = 0
1: prevChar = 0
2: £temporary1173 = size - 1
3: if count < £temporary1173 goto 6
4: goto 46
5: check track map float stack
6: currChar = 0
7: call header
8: parameter stream, offset 6
9: parameter string_25c#, offset 8
10: £temporary1175 = &currChar
11: parameter £temporary1175, offset 10
12: call function noellipse-ellipse fscanf, extra 0
13: post call
14: if prevChar == 13 goto 16
15: goto 24
16: if currChar == 10 goto 19
17: goto 24
18: check track map float stack
19: £temporary1181 = text + count
20: £temporary1180 -> £temporary1181 = *£temporary1181
21: £temporary1180 -> £temporary1181 = 0
22: goto 46
23: goto 24
24: £temporary1182 = int_to_int currChar (Signed_Char -> Signed_Int)
25: if £temporary1182 == -1 goto 28
26: goto 33
27: check track map float stack
28: £temporary1185 = text + count
29: £temporary1184 -> £temporary1185 = *£temporary1185
30: £temporary1184 -> £temporary1185 = 0
31: goto 46
32: goto 33
33: if currChar != 13 goto 35
34: goto 44
35: if currChar != 10 goto 38
36: goto 44
37: check track map float stack
38: £temporary1189 = count
39: count = count + 1
40: £temporary1191 = text + £temporary1189
41: £temporary1190 -> £temporary1191 = *£temporary1191
42: £temporary1190 -> £temporary1191 = currChar
43: goto 44
44: prevChar = currChar
45: goto 2
46: return_value = text
47: return
48: empty
49: return
50: function end fgets
0: call header
1: parameter s, offset 6
2: call function noellipse-noellipse strlen
3: post call
4: £temporary1196 = return_value
5: £temporary1197 = £temporary1196 + 1
6: £temporary1198 = £temporary1197 * 1
7: size = £temporary1198
8: call header
9: parameter s, offset 6
10: parameter size, offset 8
11: parameter 1, offset 10
12: parameter stream, offset 12
13: call function noellipse-noellipse fwrite
14: post call
15: £temporary1199 = return_value
16: if £temporary1199 == size goto 18
17: goto 21
18: empty
19: £temporary1204 = 0
20: goto 23
21: empty
22: £temporary1204 = -1
23: empty
24: return_value = £temporary1204
25: return
26: empty
27: return
28: function end fputs
0: call header
1: parameter stdin, offset 6
2: call function noellipse-noellipse fgetc
3: post call
4: £temporary1210 = return_value
5: return_value = £temporary1210
6: return
7: empty
8: return
9: function end getchar
0: call header
1: parameter s, offset 6
2: parameter -1, offset 8
3: parameter stdin, offset 10
4: call function noellipse-noellipse fgets
5: post call
6: £temporary1212 = return_value
7: if £temporary1212 != 0 goto 10
8: goto 27
9: check track map float stack
10: call header
11: parameter s, offset 6
12: call function noellipse-noellipse strlen
13: post call
14: £temporary1214 = return_value
15: size = £temporary1214
16: if size > 0 goto 19
17: goto 24
18: check track map float stack
19: £temporary1216 = size - 1
20: £temporary1218 = s + £temporary1216
21: £temporary1217 -> £temporary1218 = *£temporary1218
22: £temporary1217 -> £temporary1218 = 0
23: goto 24
24: return_value = s
25: return
26: goto 30
27: return_value = 0
28: return
29: goto 30
30: empty
31: return
32: function end gets
0: call header
1: parameter s, offset 6
2: parameter stdout, offset 8
3: call function noellipse-noellipse fputs
4: post call
5: £temporary1223 = return_value
6: if £temporary1223 != 0 goto 9
7: goto 18
8: check track map float stack
9: call header
10: parameter 10, offset 6
11: parameter stdout, offset 8
12: call function noellipse-noellipse fputc
13: post call
14: £temporary1225 = return_value
15: return_value = £temporary1225
16: return
17: goto 18
18: return_value = -1
19: return
20: empty
21: return
22: function end puts
0: £temporary1230 -> stream = *stream, offset 20
1: £temporary1231 = int_to_int £temporary1230 -> stream (Signed_Char -> Signed_Int)
2: if £temporary1231 != -1 goto 5
3: goto 9
4: check track map float stack
5: £temporary1233 -> stream = *stream, offset 20
6: £temporary1234 = int_to_int c (Signed_Int -> Signed_Char)
7: £temporary1233 -> stream = £temporary1234
8: goto 9
9: return_value = c
10: return
11: empty
12: return
13: function end ungetc
0: £temporary1236 -> stream = *stream, offset 2
1: bx = £temporary1236 -> stream
2: £temporary1238 = size * nobj
3: cx = £temporary1238
4: ah = 63
5: dx = ptr
6: interrupt 33
7: if carry goto 10
8: goto 16
9: check track map float stack
10: £temporary1242 -> stream = *stream, offset 21
11: errno = 14
12: £temporary1242 -> stream = errno
13: return_value = 0
14: return
15: goto 20
16: £temporary1243 = ax
17: return_value = £temporary1243
18: return
19: goto 20
20: empty
21: return
22: function end fread
0: £temporary1245 -> stream = *stream, offset 2
1: bx = £temporary1245 -> stream
2: £temporary1247 = size * nobj
3: cx = £temporary1247
4: ah = 64
5: dx = ptr
6: interrupt 33
7: if carry goto 10
8: goto 16
9: check track map float stack
10: £temporary1251 -> stream = *stream, offset 21
11: errno = 13
12: £temporary1251 -> stream = errno
13: return_value = 0
14: return
15: goto 20
16: £temporary1252 = ax
17: return_value = £temporary1252
18: return
19: goto 20
20: empty
21: return
22: function end fwrite
0: £temporary1254 = int_to_int origin (Signed_Int -> Signed_Short_Int)
1: al = £temporary1254
2: ah = 66
3: £temporary1257 -> stream = *stream, offset 2
4: bx = £temporary1257 -> stream
5: cx = 0
6: £temporary1260 = int_to_int offset (Signed_Int -> Signed_Int)
7: dx = £temporary1260
8: interrupt 33
9: if carry goto 19
10: goto 12
11: check track map float stack
12: £temporary1263 -> stream = *stream, offset 23
13: £temporary1264 = ax
14: £temporary1263 -> stream = £temporary1264
15: £temporary1265 -> stream = *stream, offset 23
16: return_value = £temporary1265 -> stream
17: return
18: goto 24
19: £temporary1266 -> stream = *stream, offset 21
20: £temporary1266 -> stream = 15
21: return_value = -1
22: return
23: goto 24
24: empty
25: return
26: function end fseek
0: call header
1: parameter stream, offset 6
2: parameter 0, offset 8
3: parameter 1, offset 10
4: call function noellipse-noellipse fseek
5: post call
6: £temporary1267 = return_value
7: return_value = £temporary1267
8: return
9: empty
10: return
11: function end ftell
0: call header
1: parameter stream, offset 6
2: parameter 0, offset 8
3: parameter 0, offset 10
4: call function noellipse-noellipse fseek
5: post call
6: empty
7: return
8: function end rewind
0: £temporary1276 -> ptr = *ptr
1: call header
2: parameter stream, offset 6
3: call function noellipse-noellipse ftell
4: post call
5: £temporary1277 = return_value
6: £temporary1278 = int_to_int £temporary1277 (Signed_Int -> Signed_Int)
7: £temporary1276 -> ptr = £temporary1278
8: return_value = 0
9: return
10: empty
11: return
12: function end fgetpos
0: call header
1: parameter stream, offset 6
2: £temporary1280 -> ptr = *ptr
3: parameter £temporary1280 -> ptr, offset 8
4: parameter 0, offset 10
5: call function noellipse-noellipse fseek
6: post call
7: £temporary1281 = return_value
8: £temporary1282 = int_to_int £temporary1281 (Signed_Int -> Signed_Int)
9: return_value = £temporary1282
10: return
11: empty
12: return
13: function end fsetpos
0: £temporary1286 -> stream = *stream, offset 21
1: errno = 0
2: £temporary1286 -> stream = errno
3: empty
4: return
5: function end clearerr
0: call header
1: parameter stream, offset 6
2: parameter 0, offset 8
3: parameter 1, offset 10
4: call function noellipse-noellipse fseek
5: post call
6: £temporary1287 = return_value
7: £temporary1288 = int_to_int £temporary1287 (Signed_Int -> Unsigned_Long_Int)
8: currPosition = £temporary1288
9: call header
10: parameter stream, offset 6
11: parameter 0, offset 8
12: parameter 2, offset 10
13: call function noellipse-noellipse fseek
14: post call
15: £temporary1289 = return_value
16: £temporary1290 = int_to_int £temporary1289 (Signed_Int -> Unsigned_Long_Int)
17: lastPosition = £temporary1290
18: call header
19: parameter stream, offset 6
20: £temporary1291 = int_to_int currPosition (Unsigned_Long_Int -> Signed_Int)
21: parameter £temporary1291, offset 8
22: parameter 0, offset 10
23: call function noellipse-noellipse fseek
24: post call
25: if currPosition == lastPosition goto 27
26: goto 29
27: £temporary1294 = 1
28: goto 30
29: £temporary1294 = 0
30: empty
31: endOfFile = £temporary1294
32: return_value = endOfFile
33: return
34: empty
35: return
36: function end feof
0: £temporary1304 -> stream = *stream, offset 21
1: return_value = £temporary1304 -> stream
2: return
3: empty
4: return
5: function end ferror
0: call header
1: parameter string_25s3A2025s2E0A#, offset 6
2: parameter s, offset 8
3: call header
4: parameter errno, offset 16
5: call function noellipse-noellipse strerror
6: post call
7: £temporary1305 = return_value
8: parameter £temporary1305, offset 10
9: call function noellipse-ellipse printf, extra 0
10: post call
11: empty
12: return
13: function end perror
0: index = 0
1: empty
2: if index < g_tempSize goto 5
3: goto 24
4: check track map float stack
5: empty
6: call header
7: parameter name, offset 6
8: £temporary1314 = index * 2
9: £temporary1315 = g_tempArray + £temporary1314
10: £temporary1313 -> £temporary1315 = *£temporary1315
11: parameter £temporary1313 -> £temporary1315, offset 8
12: call function noellipse-noellipse strcmp
13: post call
14: £temporary1316 = return_value
15: if £temporary1316 == 0 goto 18
16: goto 21
17: check track map float stack
18: return_value = 1
19: return
20: goto 21
21: empty
22: index = index + 1
23: goto 1
24: return_value = 0
25: return
26: empty
27: return
28: function end existsTempName
0: if size < 3 goto 3
1: goto 75
2: check track map float stack
3: c = 97
4: empty
5: if c <= 122 goto 8
6: goto 75
7: check track map float stack
8: empty
9: £temporary1324 = name + size
10: £temporary1323 -> £temporary1324 = *£temporary1324
11: £temporary1323 -> £temporary1324 = c
12: £temporary1325 = size + 1
13: £temporary1327 = name + £temporary1325
14: £temporary1326 -> £temporary1327 = *£temporary1327
15: £temporary1326 -> £temporary1327 = 0
16: call header
17: parameter name, offset 6
18: call function noellipse-noellipse fileexists
19: post call
20: £temporary1328 = return_value
21: if £temporary1328 != 0 goto 56
22: goto 24
23: check track map float stack
24: case status == 0 goto 28
25: case status == 1 goto 30
26: case end status
27: goto 56
28: return_value = name
29: return
30: call header
31: parameter name, offset 6
32: call function noellipse-noellipse existsTempName
33: post call
34: £temporary1331 = return_value
35: if £temporary1331 != 0 goto 54
36: goto 38
37: check track map float stack
38: call header
39: £temporary1335 = g_tempSize * 2
40: £temporary1336 = g_tempArray + £temporary1335
41: £temporary1334 -> £temporary1336 = *£temporary1336
42: parameter £temporary1334 -> £temporary1336, offset 6
43: parameter name, offset 8
44: call function noellipse-noellipse strcpy
45: post call
46: £temporary1338 = g_tempSize
47: g_tempSize = g_tempSize + 1
48: £temporary1340 = £temporary1338 * 2
49: £temporary1341 = g_tempArray + £temporary1340
50: £temporary1339 -> £temporary1341 = *£temporary1341
51: return_value = £temporary1339 -> £temporary1341
52: return
53: goto 54
54: goto 56
55: goto 56
56: call header
57: parameter name, offset 6
58: £temporary1342 = size + 1
59: parameter £temporary1342, offset 8
60: parameter status, offset 10
61: call function noellipse-noellipse generateTempName
62: post call
63: £temporary1343 = return_value
64: result = £temporary1343
65: if result != 0 goto 68
66: goto 71
67: check track map float stack
68: return_value = result
69: return
70: goto 71
71: empty
72: c = c + 1
73: goto 4
74: goto 75
75: return_value = 0
76: return
77: empty
78: return
79: function end generateTempName
0: call header
1: parameter name, offset 6
2: parameter 0, offset 8
3: parameter 0, offset 10
4: call function noellipse-noellipse generateTempName
5: post call
6: £temporary1352 = return_value
7: if £temporary1352 != 0 goto 9
8: goto 24
9: call header
10: parameter name, offset 6
11: parameter string_w#, offset 8
12: call function noellipse-noellipse fopen
13: post call
14: £temporary1353 = return_value
15: stream = £temporary1353
16: if stream != 0 goto 19
17: goto 24
18: check track map float stack
19: £temporary1357 -> stream = *stream, offset 27
20: £temporary1357 -> stream = 1
21: return_value = stream
22: return
23: goto 24
24: return_value = 0
25: return
26: empty
27: return
28: function end tmpfile
0: if g_tempSize < 16 goto 3
1: goto 13
2: check track map float stack
3: call header
4: parameter name, offset 6
5: parameter 0, offset 8
6: parameter 1, offset 10
7: call function noellipse-noellipse generateTempName
8: post call
9: £temporary1364 = return_value
10: return_value = £temporary1364
11: return
12: goto 13
13: return_value = 0
14: return
15: empty
16: return
17: function end tmpnam
0: c = 0
1: case g_inStatus == 0 goto 5
2: case g_inStatus == 1 goto 18
3: case end g_inStatus
4: goto 26
5: £temporary1368 = int_to_int g_inDevice (Pointer -> Pointer)
6: stream = £temporary1368
7: £temporary1369 -> stream = *stream, offset 2
8: handle = £temporary1369 -> stream
9: ah = 63
10: bx = handle
11: cx = 1
12: £temporary1374 = &c
13: dx = £temporary1374
14: interrupt 33
15: g_inChars = g_inChars + 1
16: return_value = c
17: return
18: £temporary1376 = int_to_int g_inDevice (Pointer -> Pointer)
19: inString = £temporary1376
20: £temporary1377 = g_inChars
21: g_inChars = g_inChars + 1
22: £temporary1379 = inString + £temporary1377
23: £temporary1378 -> £temporary1379 = *£temporary1379
24: return_value = £temporary1378 -> £temporary1379
25: return
26: return_value = 0
27: return
28: empty
29: return
30: function end scanChar
0: case g_inStatus == 0 goto 4
1: case g_inStatus == 1 goto 6
2: case end g_inStatus
3: goto 8
4: g_inChars = g_inChars - 1
5: goto 8
6: g_inChars = g_inChars - 1
7: goto 8
8: empty
9: return
10: function end unscanChar
0: index = 0
1: call header
2: call function noellipse-noellipse scanChar
3: post call
4: £temporary1383 = return_value
5: input = £temporary1383
6: call header
7: £temporary1384 = int_to_int input (Signed_Char -> Signed_Int)
8: parameter £temporary1384, offset 6
9: call function noellipse-noellipse isspace
10: post call
11: £temporary1385 = return_value
12: if £temporary1385 != 0 goto 15
13: goto 21
14: check track map float stack
15: call header
16: call function noellipse-noellipse scanChar
17: post call
18: £temporary1386 = return_value
19: input = £temporary1386
20: goto 6
21: if string != 0 goto 24
22: goto 62
23: check track map float stack
24: if not != 0 goto 35
25: goto 26
26: call header
27: parameter pattern, offset 6
28: £temporary1391 = int_to_int input (Signed_Char -> Signed_Int)
29: parameter £temporary1391, offset 8
30: call function noellipse-noellipse strchr
31: post call
32: £temporary1392 = return_value
33: if £temporary1392 != 0 goto 47
34: goto 35
35: if not != 0 goto 37
36: goto 58
37: call header
38: parameter pattern, offset 6
39: £temporary1395 = int_to_int input (Signed_Char -> Signed_Int)
40: parameter £temporary1395, offset 8
41: call function noellipse-noellipse strchr
42: post call
43: £temporary1396 = return_value
44: if £temporary1396 != 0 goto 58
45: goto 47
46: check track map float stack
47: £temporary1402 = index
48: index = index + 1
49: £temporary1404 = string + £temporary1402
50: £temporary1403 -> £temporary1404 = *£temporary1404
51: £temporary1403 -> £temporary1404 = input
52: call header
53: call function noellipse-noellipse scanChar
54: post call
55: £temporary1405 = return_value
56: input = £temporary1405
57: goto 24
58: £temporary1407 = string + index
59: £temporary1406 -> £temporary1407 = *£temporary1407
60: £temporary1406 -> £temporary1407 = 0
61: goto 92
62: if not != 0 goto 73
63: goto 64
64: call header
65: parameter pattern, offset 6
66: £temporary1410 = int_to_int input (Signed_Char -> Signed_Int)
67: parameter £temporary1410, offset 8
68: call function noellipse-noellipse strchr
69: post call
70: £temporary1411 = return_value
71: if £temporary1411 != 0 goto 85
72: goto 73
73: if not != 0 goto 75
74: goto 92
75: call header
76: parameter pattern, offset 6
77: £temporary1414 = int_to_int input (Signed_Char -> Signed_Int)
78: parameter £temporary1414, offset 8
79: call function noellipse-noellipse strchr
80: post call
81: £temporary1415 = return_value
82: if £temporary1415 != 0 goto 92
83: goto 85
84: check track map float stack
85: call header
86: call function noellipse-noellipse scanChar
87: post call
88: £temporary1421 = return_value
89: input = £temporary1421
90: goto 62
91: goto 92
92: empty
93: return
94: function end scanPattern
0: index = 0
1: call header
2: call function noellipse-noellipse scanChar
3: post call
4: £temporary1431 = return_value
5: input = £temporary1431
6: found = 0
7: call header
8: £temporary1432 = int_to_int input (Signed_Char -> Signed_Int)
9: parameter £temporary1432, offset 6
10: call function noellipse-noellipse isspace
11: post call
12: £temporary1433 = return_value
13: if £temporary1433 != 0 goto 16
14: goto 22
15: check track map float stack
16: call header
17: call function noellipse-noellipse scanChar
18: post call
19: £temporary1434 = return_value
20: input = £temporary1434
21: goto 7
22: if string != 0 goto 25
23: goto 101
24: check track map float stack
25: if precision == 0 goto 28
26: goto 60
27: check track map float stack
28: call header
29: £temporary1438 = int_to_int input (Signed_Char -> Signed_Int)
30: parameter £temporary1438, offset 6
31: call function noellipse-noellipse isspace
32: post call
33: £temporary1439 = return_value
34: if £temporary1439 != 0 goto 55
35: goto 36
36: £temporary1442 = int_to_int input (Signed_Char -> Signed_Int)
37: if £temporary1442 != -1 goto 39
38: goto 55
39: if input != 10 goto 42
40: goto 55
41: check track map float stack
42: £temporary1447 = index
43: index = index + 1
44: £temporary1449 = string + £temporary1447
45: £temporary1448 -> £temporary1449 = *£temporary1449
46: £temporary1448 -> £temporary1449 = input
47: call header
48: call function noellipse-noellipse scanChar
49: post call
50: £temporary1450 = return_value
51: input = £temporary1450
52: found = 1
53: g_inChars = g_inChars + 1
54: goto 28
55: £temporary1453 = string + index
56: £temporary1452 -> £temporary1453 = *£temporary1453
57: £temporary1452 -> £temporary1453 = 0
58: g_inChars = g_inChars + 1
59: goto 161
60: £temporary1455 = precision
61: precision = precision - 1
62: if £temporary1455 > 0 goto 64
63: goto 91
64: call header
65: £temporary1457 = int_to_int input (Signed_Char -> Signed_Int)
66: parameter £temporary1457, offset 6
67: call function noellipse-noellipse isspace
68: post call
69: £temporary1458 = return_value
70: if £temporary1458 != 0 goto 91
71: goto 72
72: £temporary1461 = int_to_int input (Signed_Char -> Signed_Int)
73: if £temporary1461 != -1 goto 75
74: goto 91
75: if input != 10 goto 78
76: goto 91
77: check track map float stack
78: £temporary1467 = index
79: index = index + 1
80: £temporary1469 = string + £temporary1467
81: £temporary1468 -> £temporary1469 = *£temporary1469
82: £temporary1468 -> £temporary1469 = input
83: call header
84: call function noellipse-noellipse scanChar
85: post call
86: £temporary1470 = return_value
87: input = £temporary1470
88: found = 1
89: g_inChars = g_inChars + 1
90: goto 60
91: if precision > 0 goto 94
92: goto 161
93: check track map float stack
94: £temporary1474 = string + index
95: £temporary1473 -> £temporary1474 = *£temporary1474
96: £temporary1473 -> £temporary1474 = 0
97: g_inChars = g_inChars + 1
98: goto 161
99: goto 161
100: goto 161
101: if precision == 0 goto 104
102: goto 128
103: check track map float stack
104: call header
105: £temporary1477 = int_to_int input (Signed_Char -> Signed_Int)
106: parameter £temporary1477, offset 6
107: call function noellipse-noellipse isspace
108: post call
109: £temporary1478 = return_value
110: if £temporary1478 != 0 goto 126
111: goto 112
112: £temporary1481 = int_to_int input (Signed_Char -> Signed_Int)
113: if £temporary1481 != -1 goto 115
114: goto 126
115: if input != 10 goto 118
116: goto 126
117: check track map float stack
118: call header
119: call function noellipse-noellipse scanChar
120: post call
121: £temporary1486 = return_value
122: input = £temporary1486
123: found = 1
124: g_inChars = g_inChars + 1
125: goto 104
126: g_inChars = g_inChars + 1
127: goto 161
128: £temporary1489 = precision
129: precision = precision - 1
130: if £temporary1489 > 0 goto 132
131: goto 154
132: call header
133: £temporary1491 = int_to_int input (Signed_Char -> Signed_Int)
134: parameter £temporary1491, offset 6
135: call function noellipse-noellipse isspace
136: post call
137: £temporary1492 = return_value
138: if £temporary1492 != 0 goto 154
139: goto 140
140: £temporary1495 = int_to_int input (Signed_Char -> Signed_Int)
141: if £temporary1495 != -1 goto 143
142: goto 154
143: if input != 10 goto 146
144: goto 154
145: check track map float stack
146: call header
147: call function noellipse-noellipse scanChar
148: post call
149: £temporary1501 = return_value
150: input = £temporary1501
151: found = 1
152: g_inChars = g_inChars + 1
153: goto 128
154: if precision > 0 goto 157
155: goto 161
156: check track map float stack
157: g_inChars = g_inChars + 1
158: goto 161
159: goto 161
160: goto 161
161: if found != 0 goto 164
162: goto 166
163: check track map float stack
164: g_inCount = g_inCount + 1
165: goto 166
166: empty
167: return
168: function end scanString
0: call header
1: £temporary1512 = int_to_int input (Signed_Char -> Signed_Int)
2: parameter £temporary1512, offset 6
3: call function noellipse-noellipse isdigit
4: post call
5: £temporary1513 = return_value
6: if £temporary1513 != 0 goto 9
7: goto 14
8: check track map float stack
9: £temporary1514 = input - 48
10: £temporary1515 = int_to_int £temporary1514 (Signed_Char -> Unsigned_Long_Int)
11: return_value = £temporary1515
12: return
13: goto 36
14: call header
15: £temporary1516 = int_to_int input (Signed_Char -> Signed_Int)
16: parameter £temporary1516, offset 6
17: call function noellipse-noellipse islower
18: post call
19: £temporary1517 = return_value
20: if £temporary1517 != 0 goto 23
21: goto 29
22: check track map float stack
23: £temporary1518 = input - 97
24: £temporary1519 = int_to_int £temporary1518 (Signed_Char -> Unsigned_Long_Int)
25: £temporary1520 = £temporary1519 + 10
26: return_value = £temporary1520
27: return
28: goto 36
29: £temporary1521 = input - 65
30: £temporary1522 = int_to_int £temporary1521 (Signed_Char -> Unsigned_Long_Int)
31: £temporary1523 = £temporary1522 + 10
32: return_value = £temporary1523
33: return
34: goto 36
35: goto 36
36: empty
37: return
38: function end digitToValue
0: longValue = 0
1: minus = 0
2: found = 0
3: call header
4: call function noellipse-noellipse scanChar
5: post call
6: £temporary1528 = return_value
7: input = £temporary1528
8: call header
9: £temporary1529 = int_to_int input (Signed_Char -> Signed_Int)
10: parameter £temporary1529, offset 6
11: call function noellipse-noellipse isspace
12: post call
13: £temporary1530 = return_value
14: if £temporary1530 != 0 goto 17
15: goto 23
16: check track map float stack
17: call header
18: call function noellipse-noellipse scanChar
19: post call
20: £temporary1531 = return_value
21: input = £temporary1531
22: goto 8
23: if input == 43 goto 26
24: goto 32
25: check track map float stack
26: call header
27: call function noellipse-noellipse scanChar
28: post call
29: £temporary1534 = return_value
30: input = £temporary1534
31: goto 43
32: if input == 45 goto 35
33: goto 43
34: check track map float stack
35: minus = 1
36: call header
37: call function noellipse-noellipse scanChar
38: post call
39: £temporary1536 = return_value
40: input = £temporary1536
41: goto 43
42: goto 43
43: call header
44: £temporary1537 = int_to_int input (Signed_Char -> Signed_Int)
45: parameter £temporary1537, offset 6
46: call function noellipse-noellipse isdigit
47: post call
48: £temporary1538 = return_value
49: if £temporary1538 != 0 goto 52
50: goto 64
51: check track map float stack
52: £temporary1539 = 10 * longValue
53: £temporary1540 = input - 48
54: £temporary1541 = int_to_int £temporary1540 (Signed_Char -> Signed_Long_Int)
55: £temporary1542 = £temporary1539 + £temporary1541
56: longValue = £temporary1542
57: call header
58: call function noellipse-noellipse scanChar
59: post call
60: £temporary1543 = return_value
61: input = £temporary1543
62: found = 1
63: goto 43
64: if minus != 0 goto 67
65: goto 70
66: check track map float stack
67: £temporary1545 = -longValue
68: longValue = £temporary1545
69: goto 70
70: if found != 0 goto 73
71: goto 75
72: check track map float stack
73: g_inCount = g_inCount + 1
74: goto 75
75: call header
76: parameter input, offset 6
77: call function noellipse-noellipse unscanChar
78: post call
79: return_value = longValue
80: return
81: empty
82: return
83: function end scanLongInt
0: unsignedLongValue = 0
1: call header
2: call function noellipse-noellipse scanChar
3: post call
4: £temporary1553 = return_value
5: input = £temporary1553
6: found = 1
7: call header
8: £temporary1554 = int_to_int input (Signed_Char -> Signed_Int)
9: parameter £temporary1554, offset 6
10: call function noellipse-noellipse isspace
11: post call
12: £temporary1555 = return_value
13: if £temporary1555 != 0 goto 16
14: goto 22
15: check track map float stack
16: call header
17: call function noellipse-noellipse scanChar
18: post call
19: £temporary1556 = return_value
20: input = £temporary1556
21: goto 7
22: if input == 48 goto 25
23: goto 65
24: check track map float stack
25: call header
26: call function noellipse-noellipse scanChar
27: post call
28: £temporary1559 = return_value
29: input = £temporary1559
30: call header
31: £temporary1560 = int_to_int input (Signed_Char -> Signed_Int)
32: parameter £temporary1560, offset 6
33: call function noellipse-noellipse tolower
34: post call
35: £temporary1561 = return_value
36: if £temporary1561 == 120 goto 39
37: goto 54
38: check track map float stack
39: if base == 0 goto 41
40: goto 44
41: empty
42: £temporary1567 = 16
43: goto 46
44: empty
45: £temporary1567 = base
46: empty
47: base = £temporary1567
48: call header
49: call function noellipse-noellipse scanChar
50: post call
51: £temporary1568 = return_value
52: input = £temporary1568
53: goto 65
54: if base == 0 goto 56
55: goto 59
56: empty
57: £temporary1573 = 8
58: goto 61
59: empty
60: £temporary1573 = base
61: empty
62: base = £temporary1573
63: goto 65
64: goto 65
65: if base == 0 goto 68
66: goto 70
67: check track map float stack
68: base = 10
69: goto 70
70: call header
71: £temporary1575 = int_to_int input (Signed_Char -> Signed_Int)
72: parameter £temporary1575, offset 6
73: call function noellipse-noellipse isxdigit
74: post call
75: £temporary1576 = return_value
76: if £temporary1576 != 0 goto 79
77: goto 100
78: check track map float stack
79: call header
80: parameter input, offset 6
81: call function noellipse-noellipse digitToValue
82: post call
83: £temporary1577 = return_value
84: digit = £temporary1577
85: if digit >= base goto 88
86: goto 90
87: check track map float stack
88: goto 100
89: goto 90
90: £temporary1579 = unsignedLongValue * base
91: £temporary1580 = £temporary1579 + digit
92: unsignedLongValue = £temporary1580
93: found = 1
94: call header
95: call function noellipse-noellipse scanChar
96: post call
97: £temporary1581 = return_value
98: input = £temporary1581
99: goto 70
100: if found != 0 goto 103
101: goto 105
102: check track map float stack
103: g_inCount = g_inCount + 1
104: goto 105
105: call header
106: parameter input, offset 6
107: call function noellipse-noellipse unscanChar
108: post call
109: return_value = unsignedLongValue
110: return
111: empty
112: return
113: function end scanUnsignedLongInt
0: minus = 0
1: found = 0
2: push float 0.0
3: pop float value
4: push float 1.0
5: pop float factor
6: call header
7: call function noellipse-noellipse scanChar
8: post call
9: £temporary1591 = return_value
10: input = £temporary1591
11: call header
12: £temporary1592 = int_to_int input (Signed_Char -> Signed_Int)
13: parameter £temporary1592, offset 6
14: call function noellipse-noellipse isspace
15: post call
16: £temporary1593 = return_value
17: if £temporary1593 != 0 goto 20
18: goto 26
19: check track map float stack
20: call header
21: call function noellipse-noellipse scanChar
22: post call
23: £temporary1594 = return_value
24: input = £temporary1594
25: goto 11
26: if input == 43 goto 29
27: goto 35
28: check track map float stack
29: call header
30: call function noellipse-noellipse scanChar
31: post call
32: £temporary1597 = return_value
33: input = £temporary1597
34: goto 46
35: if input == 45 goto 38
36: goto 46
37: check track map float stack
38: minus = 1
39: call header
40: call function noellipse-noellipse scanChar
41: post call
42: £temporary1599 = return_value
43: input = £temporary1599
44: goto 46
45: goto 46
46: call header
47: £temporary1600 = int_to_int input (Signed_Char -> Signed_Int)
48: parameter £temporary1600, offset 6
49: call function noellipse-noellipse isdigit
50: post call
51: £temporary1601 = return_value
52: if £temporary1601 != 0 goto 55
53: goto 73
54: check track map float stack
55: push float value
56: pop float empty X
57: push float 10.0
58: push float value
59: £temporary1602 = 10.0 * value
60: £temporary1603 = input - 48
61: £temporary1605 = int_to_int £temporary1603 (Signed_Char -> Signed_Int)
62: £temporary1604 = int_to_float £temporary1605 (Signed_Int -> Long_Double)
63: £temporary1606 = £temporary1602 + £temporary1604
64: top float value
65: pop float empty X
66: call header
67: call function noellipse-noellipse scanChar
68: post call
69: £temporary1607 = return_value
70: input = £temporary1607
71: found = 1
72: goto 46
73: if input == 46 goto 76
74: goto 112
75: check track map float stack
76: call header
77: call function noellipse-noellipse scanChar
78: post call
79: £temporary1610 = return_value
80: input = £temporary1610
81: call header
82: £temporary1611 = int_to_int input (Signed_Char -> Signed_Int)
83: parameter £temporary1611, offset 6
84: call function noellipse-noellipse isdigit
85: post call
86: £temporary1612 = return_value
87: if £temporary1612 != 0 goto 90
88: goto 112
89: check track map float stack
90: push float factor
91: push float 10.0
92: £temporary1613 = factor / 10.0
93: top float factor
94: pop float empty X
95: push float value
96: push float factor
97: £temporary1614 = input - 48
98: £temporary1616 = int_to_int £temporary1614 (Signed_Char -> Signed_Int)
99: £temporary1615 = int_to_float £temporary1616 (Signed_Int -> Long_Double)
100: £temporary1617 = factor * £temporary1615
101: £temporary1618 = value + £temporary1617
102: top float value
103: pop float empty X
104: call header
105: call function noellipse-noellipse scanChar
106: post call
107: £temporary1619 = return_value
108: input = £temporary1619
109: found = 1
110: goto 81
111: goto 112
112: call header
113: parameter input, offset 6
114: call function noellipse-noellipse unscanChar
115: post call
116: call header
117: £temporary1622 = int_to_int input (Signed_Char -> Signed_Int)
118: parameter £temporary1622, offset 6
119: call function noellipse-noellipse tolower
120: post call
121: £temporary1623 = return_value
122: if £temporary1623 == 101 goto 125
123: goto 144
124: check track map float stack
125: call header
126: call function noellipse-noellipse scanLongInt
127: post call
128: £temporary1625 = return_value
129: £temporary1626 = int_to_float £temporary1625 (Signed_Long_Int -> Double)
130: pop float exponent
131: push float value
132: call header
133: push float 10.0
134: parameter 10.0, offset 6
135: push float exponent
136: parameter exponent, offset 14
137: call function noellipse-noellipse pow
138: post call
139: £temporary1627 = return_value
140: £temporary1628 = value * £temporary1627
141: top float value
142: pop float empty X
143: goto 149
144: call header
145: parameter input, offset 6
146: call function noellipse-noellipse unscanChar
147: post call
148: goto 149
149: if minus != 0 goto 152
150: goto 159
151: check track map float stack
152: push float value
153: pop float empty X
154: push float value
155: £temporary1630 = -value
156: top float value
157: pop float empty X
158: goto 159
159: if found != 0 goto 162
160: goto 164
161: check track map float stack
162: g_inCount = g_inCount + 1
163: goto 164
164: push float value
165: return_value = value
166: return
167: empty
168: return
169: function end scanLongDouble
0: percent = 0
1: shortInt = 0
2: longIntOrDouble = 0
3: longDouble = 0
4: star = 0
5: g_inCount = 0
6: g_inChars = 0
7: index = 0
8: empty
9: £temporary1643 = format + index
10: £temporary1642 -> £temporary1643 = *£temporary1643
11: if £temporary1642 -> £temporary1643 != 0 goto 14
12: goto 432
13: check track map float stack
14: empty
15: £temporary1647 = format + index
16: £temporary1646 -> £temporary1647 = *£temporary1647
17: c = £temporary1646 -> £temporary1647
18: £temporary1648 = int_to_int c (Signed_Char -> Signed_Int)
19: £temporary1649 = £temporary1648 + 1
20: d = £temporary1649
21: if percent != 0 goto 24
22: goto 419
23: check track map float stack
24: £temporary1650 = d - 1
25: case £temporary1650 == 104 goto 43
26: case £temporary1650 == 108 goto 45
27: case £temporary1650 == 76 goto 47
28: case £temporary1650 == 42 goto 49
29: case £temporary1650 == 99 goto 51
30: case £temporary1650 == 115 goto 76
31: case £temporary1650 == 100 goto 99
32: case £temporary1650 == 105 goto 99
33: case £temporary1650 == 111 goto 146
34: case £temporary1650 == 120 goto 194
35: case £temporary1650 == 117 goto 242
36: case £temporary1650 == 103 goto 290
37: case £temporary1650 == 102 goto 290
38: case £temporary1650 == 101 goto 290
39: case £temporary1650 == 91 goto 350
40: case £temporary1650 == 110 goto 401
41: case end £temporary1650
42: goto 411
43: shortInt = 1
44: goto 429
45: longIntOrDouble = 1
46: goto 429
47: longDouble = 1
48: goto 429
49: star = 1
50: goto 429
51: call header
52: call function noellipse-noellipse scanChar
53: post call
54: £temporary1651 = return_value
55: charValue = £temporary1651
56: if star != 0 goto 68
57: goto 59
58: check track map float stack
59: £temporary1654 = arg_list + 2
60: arg_list = £temporary1654
61: £temporary1655 = arg_list - 2
62: £temporary1656 = int_to_int £temporary1655 (Signed_Int -> Pointer)
63: £temporary1657 -> £temporary1656 = *£temporary1656
64: charPtr = £temporary1657 -> £temporary1656
65: £temporary1658 -> charPtr = *charPtr
66: £temporary1658 -> charPtr = charValue
67: goto 68
68: percent = 0
69: £temporary1659 = int_to_int charValue (Signed_Char -> Signed_Int)
70: if £temporary1659 != -1 goto 73
71: goto 75
72: check track map float stack
73: g_inCount = g_inCount + 1
74: goto 75
75: goto 429
76: if star != 0 goto 91
77: goto 79
78: check track map float stack
79: £temporary1664 = arg_list + 2
80: arg_list = £temporary1664
81: £temporary1665 = arg_list - 2
82: £temporary1666 = int_to_int £temporary1665 (Signed_Int -> Pointer)
83: £temporary1667 -> £temporary1666 = *£temporary1666
84: charPtr = £temporary1667 -> £temporary1666
85: call header
86: parameter charPtr, offset 6
87: parameter 0, offset 8
88: call function noellipse-noellipse scanString
89: post call
90: goto 97
91: call header
92: parameter 0, offset 6
93: parameter 0, offset 8
94: call function noellipse-noellipse scanString
95: post call
96: goto 97
97: percent = 0
98: goto 429
99: call header
100: call function noellipse-noellipse scanLongInt
101: post call
102: £temporary1670 = return_value
103: longValue = £temporary1670
104: if star != 0 goto 144
105: goto 107
106: check track map float stack
107: if shortInt != 0 goto 110
108: goto 120
109: check track map float stack
110: £temporary1673 = arg_list + 2
111: arg_list = £temporary1673
112: £temporary1674 = arg_list - 2
113: £temporary1675 = int_to_int £temporary1674 (Signed_Int -> Pointer)
114: £temporary1676 -> £temporary1675 = *£temporary1675
115: shortPtr = £temporary1676 -> £temporary1675
116: £temporary1677 -> shortPtr = *shortPtr
117: £temporary1678 = int_to_int longValue (Signed_Long_Int -> Signed_Short_Int)
118: £temporary1677 -> shortPtr = £temporary1678
119: goto 144
120: if longIntOrDouble != 0 goto 133
121: goto 123
122: check track map float stack
123: £temporary1681 = arg_list + 2
124: arg_list = £temporary1681
125: £temporary1682 = arg_list - 2
126: £temporary1683 = int_to_int £temporary1682 (Signed_Int -> Pointer)
127: £temporary1684 -> £temporary1683 = *£temporary1683
128: intPtr = £temporary1684 -> £temporary1683
129: £temporary1685 -> intPtr = *intPtr
130: £temporary1686 = int_to_int longValue (Signed_Long_Int -> Signed_Int)
131: £temporary1685 -> intPtr = £temporary1686
132: goto 144
133: £temporary1687 = arg_list + 2
134: arg_list = £temporary1687
135: £temporary1688 = arg_list - 2
136: £temporary1689 = int_to_int £temporary1688 (Signed_Int -> Pointer)
137: £temporary1690 -> £temporary1689 = *£temporary1689
138: longPtr = £temporary1690 -> £temporary1689
139: £temporary1691 -> longPtr = *longPtr
140: £temporary1691 -> longPtr = longValue
141: goto 144
142: goto 144
143: goto 144
144: percent = 0
145: goto 429
146: call header
147: parameter 8, offset 6
148: call function noellipse-noellipse scanUnsignedLongInt
149: post call
150: £temporary1693 = return_value
151: unsignedLongValue = £temporary1693
152: if star != 0 goto 192
153: goto 155
154: check track map float stack
155: if shortInt != 0 goto 158
156: goto 168
157: check track map float stack
158: £temporary1696 = arg_list + 2
159: arg_list = £temporary1696
160: £temporary1697 = arg_list - 2
161: £temporary1698 = int_to_int £temporary1697 (Signed_Int -> Pointer)
162: £temporary1699 -> £temporary1698 = *£temporary1698
163: unsignedShortPtr = £temporary1699 -> £temporary1698
164: £temporary1700 -> unsignedShortPtr = *unsignedShortPtr
165: £temporary1701 = int_to_int unsignedLongValue (Unsigned_Long_Int -> Signed_Short_Int)
166: £temporary1700 -> unsignedShortPtr = £temporary1701
167: goto 192
168: if longIntOrDouble != 0 goto 181
169: goto 171
170: check track map float stack
171: £temporary1704 = arg_list + 2
172: arg_list = £temporary1704
173: £temporary1705 = arg_list - 2
174: £temporary1706 = int_to_int £temporary1705 (Signed_Int -> Pointer)
175: £temporary1707 -> £temporary1706 = *£temporary1706
176: unsignedIntPtr = £temporary1707 -> £temporary1706
177: £temporary1708 -> unsignedIntPtr = *unsignedIntPtr
178: £temporary1709 = int_to_int unsignedLongValue (Unsigned_Long_Int -> Signed_Int)
179: £temporary1708 -> unsignedIntPtr = £temporary1709
180: goto 192
181: £temporary1710 = arg_list + 2
182: arg_list = £temporary1710
183: £temporary1711 = arg_list - 2
184: £temporary1712 = int_to_int £temporary1711 (Signed_Int -> Pointer)
185: £temporary1713 -> £temporary1712 = *£temporary1712
186: unsignedLongPtr = £temporary1713 -> £temporary1712
187: £temporary1714 -> unsignedLongPtr = *unsignedLongPtr
188: £temporary1714 -> unsignedLongPtr = unsignedLongValue
189: goto 192
190: goto 192
191: goto 192
192: percent = 0
193: goto 429
194: call header
195: parameter 16, offset 6
196: call function noellipse-noellipse scanUnsignedLongInt
197: post call
198: £temporary1716 = return_value
199: unsignedLongValue = £temporary1716
200: if star != 0 goto 240
201: goto 203
202: check track map float stack
203: if shortInt != 0 goto 206
204: goto 216
205: check track map float stack
206: £temporary1719 = arg_list + 2
207: arg_list = £temporary1719
208: £temporary1720 = arg_list - 2
209: £temporary1721 = int_to_int £temporary1720 (Signed_Int -> Pointer)
210: £temporary1722 -> £temporary1721 = *£temporary1721
211: unsignedShortPtr = £temporary1722 -> £temporary1721
212: £temporary1723 -> unsignedShortPtr = *unsignedShortPtr
213: £temporary1724 = int_to_int unsignedLongValue (Unsigned_Long_Int -> Signed_Short_Int)
214: £temporary1723 -> unsignedShortPtr = £temporary1724
215: goto 240
216: if longIntOrDouble != 0 goto 229
217: goto 219
218: check track map float stack
219: £temporary1727 = arg_list + 2
220: arg_list = £temporary1727
221: £temporary1728 = arg_list - 2
222: £temporary1729 = int_to_int £temporary1728 (Signed_Int -> Pointer)
223: £temporary1730 -> £temporary1729 = *£temporary1729
224: unsignedIntPtr = £temporary1730 -> £temporary1729
225: £temporary1731 -> unsignedIntPtr = *unsignedIntPtr
226: £temporary1732 = int_to_int unsignedLongValue (Unsigned_Long_Int -> Signed_Int)
227: £temporary1731 -> unsignedIntPtr = £temporary1732
228: goto 240
229: £temporary1733 = arg_list + 2
230: arg_list = £temporary1733
231: £temporary1734 = arg_list - 2
232: £temporary1735 = int_to_int £temporary1734 (Signed_Int -> Pointer)
233: £temporary1736 -> £temporary1735 = *£temporary1735
234: unsignedLongPtr = £temporary1736 -> £temporary1735
235: £temporary1737 -> unsignedLongPtr = *unsignedLongPtr
236: £temporary1737 -> unsignedLongPtr = unsignedLongValue
237: goto 240
238: goto 240
239: goto 240
240: percent = 0
241: goto 429
242: call header
243: parameter 0, offset 6
244: call function noellipse-noellipse scanUnsignedLongInt
245: post call
246: £temporary1739 = return_value
247: unsignedLongValue = £temporary1739
248: if star != 0 goto 288
249: goto 251
250: check track map float stack
251: if shortInt != 0 goto 254
252: goto 264
253: check track map float stack
254: £temporary1742 = arg_list + 2
255: arg_list = £temporary1742
256: £temporary1743 = arg_list - 2
257: £temporary1744 = int_to_int £temporary1743 (Signed_Int -> Pointer)
258: £temporary1745 -> £temporary1744 = *£temporary1744
259: unsignedShortPtr = £temporary1745 -> £temporary1744
260: £temporary1746 -> unsignedShortPtr = *unsignedShortPtr
261: £temporary1747 = int_to_int unsignedLongValue (Unsigned_Long_Int -> Signed_Short_Int)
262: £temporary1746 -> unsignedShortPtr = £temporary1747
263: goto 288
264: if longIntOrDouble != 0 goto 277
265: goto 267
266: check track map float stack
267: £temporary1750 = arg_list + 2
268: arg_list = £temporary1750
269: £temporary1751 = arg_list - 2
270: £temporary1752 = int_to_int £temporary1751 (Signed_Int -> Pointer)
271: £temporary1753 -> £temporary1752 = *£temporary1752
272: unsignedIntPtr = £temporary1753 -> £temporary1752
273: £temporary1754 -> unsignedIntPtr = *unsignedIntPtr
274: £temporary1755 = int_to_int unsignedLongValue (Unsigned_Long_Int -> Signed_Int)
275: £temporary1754 -> unsignedIntPtr = £temporary1755
276: goto 288
277: £temporary1756 = arg_list + 2
278: arg_list = £temporary1756
279: £temporary1757 = arg_list - 2
280: £temporary1758 = int_to_int £temporary1757 (Signed_Int -> Pointer)
281: £temporary1759 -> £temporary1758 = *£temporary1758
282: unsignedLongPtr = £temporary1759 -> £temporary1758
283: £temporary1760 -> unsignedLongPtr = *unsignedLongPtr
284: £temporary1760 -> unsignedLongPtr = unsignedLongValue
285: goto 288
286: goto 288
287: goto 288
288: percent = 0
289: goto 429
290: push float longDoubleValue
291: pop float empty X
292: call header
293: call function noellipse-noellipse scanLongDouble
294: post call
295: £temporary1762 = return_value
296: top float longDoubleValue
297: pop float empty X
298: if star != 0 goto 348
299: goto 301
300: check track map float stack
301: if longIntOrDouble != 0 goto 304
302: goto 317
303: check track map float stack
304: £temporary1765 = arg_list + 2
305: arg_list = £temporary1765
306: £temporary1766 = arg_list - 2
307: £temporary1767 = int_to_int £temporary1766 (Signed_Int -> Pointer)
308: £temporary1768 -> £temporary1767 = *£temporary1767
309: doublePtr = £temporary1768 -> £temporary1767
310: £temporary1769 -> doublePtr = *doublePtr
311: push float £temporary1769 -> doublePtr
312: pop float empty X
313: push float longDoubleValue
314: top float £temporary1769 -> doublePtr
315: pop float empty X
316: goto 348
317: if longDouble != 0 goto 320
318: goto 333
319: check track map float stack
320: £temporary1771 = arg_list + 2
321: arg_list = £temporary1771
322: £temporary1772 = arg_list - 2
323: £temporary1773 = int_to_int £temporary1772 (Signed_Int -> Pointer)
324: £temporary1774 -> £temporary1773 = *£temporary1773
325: longDoublePtr = £temporary1774 -> £temporary1773
326: £temporary1775 -> longDoublePtr = *longDoublePtr
327: push float £temporary1775 -> longDoublePtr
328: pop float empty X
329: push float longDoubleValue
330: top float £temporary1775 -> longDoublePtr
331: pop float empty X
332: goto 348
333: £temporary1776 = arg_list + 2
334: arg_list = £temporary1776
335: £temporary1777 = arg_list - 2
336: £temporary1778 = int_to_int £temporary1777 (Signed_Int -> Pointer)
337: £temporary1779 -> £temporary1778 = *£temporary1778
338: floatPtr = £temporary1779 -> £temporary1778
339: £temporary1780 -> floatPtr = *floatPtr
340: push float £temporary1780 -> floatPtr
341: pop float empty X
342: push float longDoubleValue
343: top float £temporary1780 -> floatPtr
344: pop float empty X
345: goto 348
346: goto 348
347: goto 348
348: percent = 0
349: goto 429
350: not = 0
351: index = index + 1
352: £temporary1786 = format + index
353: £temporary1785 -> £temporary1786 = *£temporary1786
354: if £temporary1785 -> £temporary1786 == 94 goto 357
355: goto 360
356: check track map float stack
357: not = 1
358: index = index + 1
359: goto 360
360: startIndex = index
361: £temporary1790 = format + index
362: £temporary1789 -> £temporary1790 = *£temporary1790
363: if £temporary1789 -> £temporary1790 != 93 goto 366
364: goto 368
365: check track map float stack
366: index = index + 1
367: goto 361
368: £temporary1794 = format + index
369: £temporary1793 -> £temporary1794 = *£temporary1794
370: £temporary1793 -> £temporary1794 = 0
371: if star != 0 goto 390
372: goto 374
373: check track map float stack
374: £temporary1797 = arg_list + 2
375: arg_list = £temporary1797
376: £temporary1798 = arg_list - 2
377: £temporary1799 = int_to_int £temporary1798 (Signed_Int -> Pointer)
378: £temporary1800 -> £temporary1799 = *£temporary1799
379: string = £temporary1800 -> £temporary1799
380: call header
381: parameter string, offset 6
382: £temporary1802 = format + startIndex
383: £temporary1801 -> £temporary1802 = *£temporary1802
384: £temporary1803 = &£temporary1801 -> £temporary1802
385: parameter £temporary1803, offset 8
386: parameter not, offset 10
387: call function noellipse-noellipse scanPattern
388: post call
389: goto 400
390: call header
391: parameter 0, offset 6
392: £temporary1806 = format + startIndex
393: £temporary1805 -> £temporary1806 = *£temporary1806
394: £temporary1807 = &£temporary1805 -> £temporary1806
395: parameter £temporary1807, offset 8
396: parameter not, offset 10
397: call function noellipse-noellipse scanPattern
398: post call
399: goto 400
400: goto 429
401: £temporary1809 = arg_list + 2
402: arg_list = £temporary1809
403: £temporary1810 = arg_list - 2
404: £temporary1811 = int_to_int £temporary1810 (Signed_Int -> Pointer)
405: £temporary1812 -> £temporary1811 = *£temporary1811
406: charsPtr = £temporary1812 -> £temporary1811
407: £temporary1813 -> charsPtr = *charsPtr
408: £temporary1813 -> charsPtr = g_inChars
409: percent = 0
410: goto 429
411: call header
412: parameter string_scanFormat20c203D202725c270A#, offset 6
413: £temporary1814 = int_to_int c (Signed_Char -> Signed_Int)
414: parameter £temporary1814, offset 8
415: call function noellipse-ellipse printf, extra 0
416: post call
417: goto 429
418: goto 429
419: if c == 37 goto 422
420: goto 429
421: check track map float stack
422: percent = 1
423: shortInt = 0
424: longIntOrDouble = 0
425: longDouble = 0
426: star = 0
427: goto 429
428: goto 429
429: empty
430: index = index + 1
431: goto 8
432: return_value = g_inCount
433: return
434: empty
435: return
436: function end scanFormat
0: £temporary1833 = &format
1: £temporary1834 = int_to_int £temporary1833 (Pointer -> Pointer)
2: £temporary1835 = £temporary1834 + 2
3: arg_list = £temporary1835
4: call header
5: parameter format, offset 6
6: parameter arg_list, offset 8
7: call function ellipse-noellipse vscanf
8: post call
9: £temporary1836 = return_value
10: return_value = £temporary1836
11: return
12: empty
13: return
14: function end scanf
0: call header
1: parameter stdin, offset 6
2: parameter format, offset 8
3: parameter arg_list, offset 10
4: call function noellipse-noellipse vfscanf
5: post call
6: £temporary1840 = return_value
7: return_value = £temporary1840
8: return
9: empty
10: return
11: function end vscanf
0: £temporary1844 = &format
1: £temporary1845 = int_to_int £temporary1844 (Pointer -> Pointer)
2: £temporary1846 = £temporary1845 + 2
3: arg_list = £temporary1846
4: call header
5: parameter inStream, offset 6
6: parameter format, offset 8
7: parameter arg_list, offset 10
8: call function ellipse-noellipse vfscanf
9: post call
10: £temporary1847 = return_value
11: return_value = £temporary1847
12: return
13: empty
14: return
15: function end fscanf
0: g_inStatus = 0
1: £temporary1852 = int_to_int inStream (Pointer -> Pointer)
2: g_inDevice = £temporary1852
3: call header
4: parameter format, offset 6
5: parameter arg_list, offset 8
6: call function noellipse-noellipse scanFormat
7: post call
8: £temporary1853 = return_value
9: return_value = £temporary1853
10: return
11: empty
12: return
13: function end vfscanf
0: £temporary1856 = &format
1: £temporary1857 = int_to_int £temporary1856 (Pointer -> Pointer)
2: £temporary1858 = £temporary1857 + 2
3: arg_list = £temporary1858
4: call header
5: parameter inString, offset 6
6: parameter format, offset 8
7: parameter arg_list, offset 10
8: call function ellipse-noellipse vsscanf
9: post call
10: £temporary1859 = return_value
11: return_value = £temporary1859
12: return
13: empty
14: return
15: function end sscanf
0: g_inStatus = 1
1: £temporary1864 = int_to_int inString (Pointer -> Pointer)
2: g_inDevice = £temporary1864
3: call header
4: parameter format, offset 6
5: parameter arg_list, offset 8
6: call function noellipse-noellipse scanFormat
7: post call
8: £temporary1865 = return_value
9: return_value = £temporary1865
10: return
11: empty
12: return
13: function end vsscanf
0: g_outStatus = 0
1: £temporary1868 = int_to_int stream (Pointer -> Pointer)
2: g_outDevice = £temporary1868
3: call header
4: £temporary1869 = int_to_int i (Signed_Int -> Signed_Char)
5: parameter £temporary1869, offset 6
6: call function noellipse-noellipse printChar
7: post call
8: return_value = 1
9: return
10: empty
11: return
12: function end putc
0: g_outStatus = 0
1: £temporary1872 = int_to_int stream (Pointer -> Pointer)
2: g_outDevice = £temporary1872
3: call header
4: £temporary1873 = int_to_int i (Signed_Int -> Signed_Char)
5: parameter £temporary1873, offset 6
6: call function noellipse-noellipse printChar
7: post call
8: return_value = 1
9: return
10: empty
11: return
12: function end fputc
0: g_outStatus = 0
1: £temporary1876 = int_to_int stdout (Pointer -> Pointer)
2: g_outDevice = £temporary1876
3: call header
4: £temporary1877 = int_to_int i (Signed_Int -> Signed_Char)
5: parameter £temporary1877, offset 6
6: call function noellipse-noellipse printChar
7: post call
8: return_value = 1
9: return
10: empty
11: return
12: function end putchar
0: case g_outStatus == 0 goto 5
1: case g_outStatus == 1 goto 16
2: case g_outStatus == 2 goto 24
3: case end g_outStatus
4: goto 26
5: £temporary1880 = int_to_int g_outDevice (Pointer -> Pointer)
6: stream = £temporary1880
7: ah = 64
8: £temporary1883 -> stream = *stream, offset 2
9: bx = £temporary1883 -> stream
10: cx = 1
11: £temporary1886 = &c
12: dx = £temporary1886
13: interrupt 33
14: g_outChars = g_outChars + 1
15: goto 26
16: £temporary1888 = int_to_int g_outDevice (Pointer -> Pointer)
17: outString = £temporary1888
18: £temporary1889 = g_outChars
19: g_outChars = g_outChars + 1
20: £temporary1891 = outString + £temporary1889
21: £temporary1890 -> £temporary1891 = *£temporary1891
22: £temporary1890 -> £temporary1891 = c
23: goto 26
24: g_outChars = g_outChars + 1
25: goto 26
26: empty
27: return
28: function end printChar
0: if s != 0 goto 3
1: goto 47
2: check track map float stack
3: if precision == 0 goto 6
4: goto 24
5: check track map float stack
6: index = 0
7: empty
8: £temporary1897 = s + index
9: £temporary1896 -> £temporary1897 = *£temporary1897
10: if £temporary1896 -> £temporary1897 != 0 goto 13
11: goto 72
12: check track map float stack
13: empty
14: call header
15: £temporary1901 = s + index
16: £temporary1900 -> £temporary1901 = *£temporary1901
17: parameter £temporary1900 -> £temporary1901, offset 6
18: call function noellipse-noellipse printChar
19: post call
20: empty
21: index = index + 1
22: goto 7
23: goto 72
24: index = 0
25: empty
26: £temporary1903 = precision
27: precision = precision - 1
28: if £temporary1903 > 0 goto 30
29: goto 72
30: £temporary1906 = s + index
31: £temporary1905 -> £temporary1906 = *£temporary1906
32: if £temporary1905 -> £temporary1906 != 0 goto 35
33: goto 72
34: check track map float stack
35: empty
36: call header
37: £temporary1911 = s + index
38: £temporary1910 -> £temporary1911 = *£temporary1911
39: parameter £temporary1910 -> £temporary1911, offset 6
40: call function noellipse-noellipse printChar
41: post call
42: empty
43: index = index + 1
44: goto 25
45: goto 72
46: goto 72
47: call header
48: parameter 60, offset 6
49: call function noellipse-noellipse printChar
50: post call
51: call header
52: parameter 78, offset 6
53: call function noellipse-noellipse printChar
54: post call
55: call header
56: parameter 85, offset 6
57: call function noellipse-noellipse printChar
58: post call
59: call header
60: parameter 76, offset 6
61: call function noellipse-noellipse printChar
62: post call
63: call header
64: parameter 76, offset 6
65: call function noellipse-noellipse printChar
66: post call
67: call header
68: parameter 62, offset 6
69: call function noellipse-noellipse printChar
70: post call
71: goto 72
72: empty
73: return
74: function end printString
0: if longValue != 0 goto 3
1: goto 18
2: check track map float stack
3: £temporary1928 = longValue % 10
4: £temporary1929 = int_to_int £temporary1928 (Signed_Long_Int -> Signed_Int)
5: digit = £temporary1929
6: call header
7: £temporary1930 = longValue / 10
8: parameter £temporary1930, offset 6
9: call function noellipse-noellipse printLongIntRec
10: post call
11: call header
12: £temporary1932 = digit + 48
13: £temporary1933 = int_to_int £temporary1932 (Signed_Int -> Signed_Char)
14: parameter £temporary1933, offset 6
15: call function noellipse-noellipse printChar
16: post call
17: goto 18
18: empty
19: return
20: function end printLongIntRec
0: if longValue < 0 goto 3
1: goto 10
2: check track map float stack
3: £temporary1938 = -longValue
4: longValue = £temporary1938
5: call header
6: parameter 45, offset 6
7: call function noellipse-noellipse printChar
8: post call
9: goto 28
10: if space != 0 goto 13
11: goto 18
12: check track map float stack
13: call header
14: parameter 32, offset 6
15: call function noellipse-noellipse printChar
16: post call
17: goto 28
18: if plus != 0 goto 21
19: goto 28
20: check track map float stack
21: call header
22: parameter 43, offset 6
23: call function noellipse-noellipse printChar
24: post call
25: goto 28
26: goto 28
27: goto 28
28: if longValue == 0 goto 31
29: goto 36
30: check track map float stack
31: call header
32: parameter 48, offset 6
33: call function noellipse-noellipse printChar
34: post call
35: goto 41
36: call header
37: parameter longValue, offset 6
38: call function noellipse-noellipse printLongIntRec
39: post call
40: goto 41
41: empty
42: return
43: function end printLongInt
0: if digit < 10 goto 3
1: goto 8
2: check track map float stack
3: £temporary1953 = 48 + digit
4: £temporary1954 = int_to_int £temporary1953 (Signed_Int -> Signed_Char)
5: return_value = £temporary1954
6: return
7: goto 24
8: if capital != 0 goto 11
9: goto 17
10: check track map float stack
11: £temporary1955 = digit - 10
12: £temporary1956 = 65 + £temporary1955
13: £temporary1957 = int_to_int £temporary1956 (Signed_Int -> Signed_Char)
14: return_value = £temporary1957
15: return
16: goto 24
17: £temporary1958 = digit - 10
18: £temporary1959 = 97 + £temporary1958
19: £temporary1960 = int_to_int £temporary1959 (Signed_Int -> Signed_Char)
20: return_value = £temporary1960
21: return
22: goto 24
23: goto 24
24: empty
25: return
26: function end digitToChar
0: if unsignedValue > 0 goto 3
1: goto 25
2: check track map float stack
3: £temporary1963 = unsignedValue % base
4: £temporary1964 = int_to_int £temporary1963 (Unsigned_Long_Int -> Signed_Int)
5: digit = £temporary1964
6: call header
7: £temporary1965 = unsignedValue / base
8: parameter £temporary1965, offset 6
9: parameter base, offset 10
10: parameter capital, offset 14
11: call function noellipse-noellipse printUnsignedLongRec
12: post call
13: call header
14: parameter digit, offset 6
15: parameter capital, offset 8
16: call function noellipse-noellipse digitToChar
17: post call
18: £temporary1967 = return_value
19: c = £temporary1967
20: call header
21: parameter c, offset 6
22: call function noellipse-noellipse printChar
23: post call
24: goto 25
25: empty
26: return
27: function end printUnsignedLongRec
0: if plus != 0 goto 3
1: goto 8
2: check track map float stack
3: call header
4: parameter 43, offset 6
5: call function noellipse-noellipse printChar
6: post call
7: goto 8
8: if space != 0 goto 11
9: goto 16
10: check track map float stack
11: call header
12: parameter 32, offset 6
13: call function noellipse-noellipse printChar
14: post call
15: goto 16
16: if grid != 0 goto 19
17: goto 48
18: check track map float stack
19: if base == 8 goto 22
20: goto 27
21: check track map float stack
22: call header
23: parameter 48, offset 6
24: call function noellipse-noellipse printChar
25: post call
26: goto 27
27: if base == 16 goto 30
28: goto 48
29: check track map float stack
30: call header
31: parameter 48, offset 6
32: call function noellipse-noellipse printChar
33: post call
34: call header
35: if capital != 0 goto 37
36: goto 40
37: empty
38: £temporary1987 = 88
39: goto 42
40: empty
41: £temporary1987 = 120
42: empty
43: parameter £temporary1987, offset 6
44: call function noellipse-noellipse printChar
45: post call
46: goto 48
47: goto 48
48: if unsignedValue == 0 goto 51
49: goto 56
50: check track map float stack
51: call header
52: parameter 48, offset 6
53: call function noellipse-noellipse printChar
54: post call
55: goto 63
56: call header
57: parameter unsignedValue, offset 6
58: parameter base, offset 10
59: parameter capital, offset 14
60: call function noellipse-noellipse printUnsignedLongRec
61: post call
62: goto 63
63: empty
64: return
65: function end printUnsignedLong
0: push float longDoubleValue
1: push float longDoubleValue
2: £temporary2002 = float_to_int longDoubleValue (Long_Double -> Signed_Long_Int)
3: £temporary2003 = int_to_float £temporary2002 (Signed_Long_Int -> Long_Double)
4: £temporary2004 = longDoubleValue - £temporary2003
5: top float longDoubleValue
6: pop float empty X
7: if precision == 0 goto 10
8: goto 12
9: check track map float stack
10: precision = 9
11: goto 12
12: if grid != 0 goto 17
13: goto 14
14: if precision > 0 goto 17
15: goto 22
16: check track map float stack
17: call header
18: parameter 46, offset 6
19: call function noellipse-noellipse printChar
20: post call
21: goto 22
22: £temporary2010 = precision
23: precision = precision - 1
24: if £temporary2010 > 0 goto 27
25: goto 48
26: check track map float stack
27: push float 10.0
28: push float longDoubleValue
29: £temporary2012 = 10.0 * longDoubleValue
30: pop float longDoubleValue10
31: push float longDoubleValue10
32: £temporary2013 = float_to_int longDoubleValue10 (Long_Double -> Signed_Int)
33: digitValue = £temporary2013
34: call header
35: £temporary2014 = digitValue + 48
36: £temporary2015 = int_to_int £temporary2014 (Signed_Int -> Signed_Char)
37: parameter £temporary2015, offset 6
38: call function noellipse-noellipse printChar
39: post call
40: push float longDoubleValue
41: pop float empty X
42: push float longDoubleValue10
43: £temporary2017 = int_to_float digitValue (Signed_Int -> Long_Double)
44: £temporary2018 = longDoubleValue10 - £temporary2017
45: top float longDoubleValue
46: pop float empty X
47: goto 22
48: empty
49: return
50: function end printLongDoubleFraction
0: push float longDoubleValue
1: push float 0.0
2: if longDoubleValue < 0.0 goto 5
3: goto 18
4: check track map float stack
5: call header
6: parameter 45, offset 6
7: call function noellipse-noellipse printChar
8: post call
9: push float longDoubleValue
10: pop float empty X
11: push float longDoubleValue
12: £temporary2023 = -longDoubleValue
13: top float longDoubleValue
14: pop float empty X
15: plus = 0
16: space = 0
17: goto 18
18: push float longDoubleValue
19: £temporary2024 = float_to_int longDoubleValue (Long_Double -> Signed_Long_Int)
20: longValue = £temporary2024
21: call header
22: parameter longValue, offset 6
23: parameter plus, offset 10
24: parameter space, offset 12
25: call function noellipse-noellipse printLongInt
26: post call
27: push float longDoubleValue
28: £temporary2026 = int_to_float longValue (Signed_Long_Int -> Long_Double)
29: £temporary2027 = longDoubleValue - £temporary2026
30: top float longDoubleValue
31: pop float empty X
32: call header
33: push float longDoubleValue
34: parameter longDoubleValue, offset 6
35: parameter grid, offset 14
36: parameter precision, offset 16
37: call function noellipse-noellipse printLongDoubleFraction
38: post call
39: empty
40: return
41: function end printLongDoublePlain
0: push float value
1: push float 0.0
2: if value == 0.0 goto 5
3: goto 33
4: check track map float stack
5: call header
6: parameter 48, offset 6
7: call function noellipse-noellipse printChar
8: post call
9: call header
10: push float 0.0
11: parameter 0.0, offset 6
12: parameter precision, offset 14
13: parameter grid, offset 16
14: call function noellipse-noellipse printLongDoubleFraction
15: post call
16: call header
17: if capital != 0 goto 19
18: goto 22
19: empty
20: £temporary2043 = 69
21: goto 24
22: empty
23: £temporary2043 = 101
24: empty
25: parameter £temporary2043, offset 6
26: call function noellipse-noellipse printChar
27: post call
28: call header
29: parameter 48, offset 6
30: call function noellipse-noellipse printChar
31: post call
32: goto 98
33: push float value
34: push float 0.0
35: if value < 0.0 goto 38
36: goto 49
37: check track map float stack
38: call header
39: parameter 45, offset 6
40: call function noellipse-noellipse printChar
41: post call
42: push float value
43: pop float empty X
44: push float value
45: £temporary2048 = -value
46: top float value
47: pop float empty X
48: goto 49
49: call header
50: push float value
51: parameter value, offset 6
52: call function noellipse-noellipse log10
53: post call
54: £temporary2049 = return_value
55: £temporary2050 = float_to_int £temporary2049 (Double -> Signed_Int)
56: expo = £temporary2050
57: push float value
58: call header
59: push float 10.0
60: parameter 10.0, offset 6
61: £temporary2051 = int_to_float expo (Signed_Int -> Double)
62: parameter £temporary2051, offset 14
63: call function noellipse-noellipse pow
64: post call
65: £temporary2052 = return_value
66: £temporary2053 = value / £temporary2052
67: top float value
68: pop float empty X
69: call header
70: push float value
71: parameter value, offset 6
72: parameter plus, offset 14
73: parameter space, offset 16
74: parameter grid, offset 18
75: parameter precision, offset 20
76: call function noellipse-noellipse printLongDoublePlain
77: post call
78: call header
79: if capital != 0 goto 81
80: goto 84
81: empty
82: £temporary2059 = 69
83: goto 86
84: empty
85: £temporary2059 = 101
86: empty
87: parameter £temporary2059, offset 6
88: call function noellipse-noellipse printChar
89: post call
90: call header
91: £temporary2061 = int_to_int expo (Signed_Int -> Signed_Long_Int)
92: parameter £temporary2061, offset 6
93: parameter 1, offset 10
94: parameter 0, offset 12
95: call function noellipse-noellipse printLongInt
96: post call
97: goto 98
98: empty
99: return
100: function end printLongDoubleExpo
0: if widthPtr != 0 goto 2
1: goto 14
2: £temporary2083 -> widthPtr = *widthPtr
3: if £temporary2083 -> widthPtr == -1 goto 6
4: goto 14
5: check track map float stack
6: £temporary2086 -> widthPtr = *widthPtr
7: £temporary2087 = arg_list + 2
8: arg_list = £temporary2087
9: £temporary2088 = arg_list - 2
10: £temporary2089 = int_to_int £temporary2088 (Signed_Int -> Pointer)
11: £temporary2090 -> £temporary2089 = *£temporary2089
12: £temporary2086 -> widthPtr = £temporary2090 -> £temporary2089
13: goto 14
14: if precisionPtr != 0 goto 16
15: goto 28
16: £temporary2092 -> precisionPtr = *precisionPtr
17: if £temporary2092 -> precisionPtr == -1 goto 20
18: goto 28
19: check track map float stack
20: £temporary2095 -> precisionPtr = *precisionPtr
21: £temporary2096 = arg_list + 2
22: arg_list = £temporary2096
23: £temporary2097 = arg_list - 2
24: £temporary2098 = int_to_int £temporary2097 (Signed_Int -> Pointer)
25: £temporary2099 -> £temporary2098 = *£temporary2098
26: £temporary2095 -> precisionPtr = £temporary2099 -> £temporary2098
27: goto 28
28: return_value = arg_list
29: return
30: empty
31: return
32: function end checkWidthAndPrecision
0: empty
1: return
2: function end testY
0: if j == 1 goto 3
1: goto 5
2: check track map float stack
3: i = 1
4: goto 7
5: i = 2
6: goto 7
7: j = i
8: empty
9: return
10: function end testX
0: £temporary2101 -> format = *format
1: c = £temporary2101 -> format
2: case c == 100 goto 21
3: case c == 105 goto 21
4: case c == 99 goto 90
5: case c == 115 goto 111
6: case c == 88 goto 132
7: case c == 120 goto 132
8: case c == 98 goto 132
9: case c == 111 goto 132
10: case c == 117 goto 132
11: case c == 71 goto 213
12: case c == 103 goto 213
13: case c == 69 goto 213
14: case c == 101 goto 213
15: case c == 102 goto 213
16: case c == 112 goto 371
17: case c == 110 goto 397
18: case c == 37 goto 421
19: case end c
20: goto 435
21: if shortInt != 0 goto 24
22: goto 33
23: check track map float stack
24: £temporary2102 = arg_list + 2
25: arg_list = £temporary2102
26: £temporary2103 = arg_list - 2
27: £temporary2104 = int_to_int £temporary2103 (Signed_Int -> Pointer)
28: £temporary2105 -> £temporary2104 = *£temporary2104
29: £temporary2106 = int_to_int £temporary2105 -> £temporary2104 (Signed_Int -> Signed_Short_Int)
30: £temporary2107 = int_to_int £temporary2106 (Signed_Short_Int -> Signed_Long_Int)
31: longValue = £temporary2107
32: goto 52
33: if longInt != 0 goto 36
34: goto 43
35: check track map float stack
36: £temporary2108 = arg_list + 4
37: arg_list = £temporary2108
38: £temporary2109 = arg_list - 4
39: £temporary2110 = int_to_int £temporary2109 (Signed_Int -> Pointer)
40: £temporary2111 -> £temporary2110 = *£temporary2110
41: longValue = £temporary2111 -> £temporary2110
42: goto 52
43: £temporary2112 = arg_list + 2
44: arg_list = £temporary2112
45: £temporary2113 = arg_list - 2
46: £temporary2114 = int_to_int £temporary2113 (Signed_Int -> Pointer)
47: £temporary2115 -> £temporary2114 = *£temporary2114
48: £temporary2116 = int_to_int £temporary2115 -> £temporary2114 (Signed_Int -> Signed_Long_Int)
49: longValue = £temporary2116
50: goto 52
51: goto 52
52: if negativePtr != 0 goto 55
53: goto 64
54: check track map float stack
55: £temporary2120 -> negativePtr = *negativePtr
56: if longValue < 0 goto 58
57: goto 60
58: £temporary2122 = 1
59: goto 61
60: £temporary2122 = 0
61: empty
62: £temporary2120 -> negativePtr = £temporary2122
63: goto 64
64: if sign != 0 goto 74
65: goto 67
66: check track map float stack
67: call header
68: parameter longValue, offset 6
69: call function noellipse-noellipse labs
70: post call
71: £temporary2125 = return_value
72: longValue = £temporary2125
73: goto 74
74: call header
75: parameter arg_list, offset 6
76: parameter widthPtr, offset 8
77: £temporary2126 = &precision
78: parameter £temporary2126, offset 10
79: call function noellipse-noellipse checkWidthAndPrecision
80: post call
81: £temporary2127 = return_value
82: arg_list = £temporary2127
83: call header
84: parameter longValue, offset 6
85: parameter plus, offset 10
86: parameter space, offset 12
87: call function noellipse-noellipse printLongInt
88: post call
89: goto 435
90: £temporary2129 = arg_list + 2
91: arg_list = £temporary2129
92: £temporary2130 = arg_list - 2
93: £temporary2131 = int_to_int £temporary2130 (Signed_Int -> Pointer)
94: £temporary2132 -> £temporary2131 = *£temporary2131
95: £temporary2133 = int_to_int £temporary2132 -> £temporary2131 (Signed_Int -> Signed_Char)
96: charValue = £temporary2133
97: call header
98: parameter arg_list, offset 6
99: parameter widthPtr, offset 8
100: £temporary2134 = &precision
101: parameter £temporary2134, offset 10
102: call function noellipse-noellipse checkWidthAndPrecision
103: post call
104: £temporary2135 = return_value
105: arg_list = £temporary2135
106: call header
107: parameter charValue, offset 6
108: call function noellipse-noellipse printChar
109: post call
110: goto 435
111: £temporary2137 = arg_list + 2
112: arg_list = £temporary2137
113: £temporary2138 = arg_list - 2
114: £temporary2139 = int_to_int £temporary2138 (Signed_Int -> Pointer)
115: £temporary2140 -> £temporary2139 = *£temporary2139
116: stringValue = £temporary2140 -> £temporary2139
117: call header
118: parameter arg_list, offset 6
119: parameter widthPtr, offset 8
120: £temporary2141 = &precision
121: parameter £temporary2141, offset 10
122: call function noellipse-noellipse checkWidthAndPrecision
123: post call
124: £temporary2142 = return_value
125: arg_list = £temporary2142
126: call header
127: parameter stringValue, offset 6
128: parameter precision, offset 8
129: call function noellipse-noellipse printString
130: post call
131: goto 435
132: if c == 117 goto 134
133: goto 137
134: empty
135: £temporary2158 = 10
136: goto 155
137: empty
138: if c == 111 goto 140
139: goto 143
140: empty
141: £temporary2154 = 8
142: goto 153
143: empty
144: if c == 98 goto 146
145: goto 149
146: empty
147: £temporary2150 = 2
148: goto 151
149: empty
150: £temporary2150 = 16
151: empty
152: £temporary2154 = £temporary2150
153: empty
154: £temporary2158 = £temporary2154
155: empty
156: base = £temporary2158
157: if shortInt != 0 goto 160
158: goto 169
159: check track map float stack
160: £temporary2159 = arg_list + 2
161: arg_list = £temporary2159
162: £temporary2160 = arg_list - 2
163: £temporary2161 = int_to_int £temporary2160 (Signed_Int -> Pointer)
164: £temporary2162 -> £temporary2161 = *£temporary2161
165: £temporary2163 = int_to_int £temporary2162 -> £temporary2161 (Unsigned_Int -> Unsigned_Short_Int)
166: £temporary2164 = int_to_int £temporary2163 (Unsigned_Short_Int -> Unsigned_Long_Int)
167: value = £temporary2164
168: goto 188
169: if longInt != 0 goto 172
170: goto 179
171: check track map float stack
172: £temporary2165 = arg_list + 4
173: arg_list = £temporary2165
174: £temporary2166 = arg_list - 4
175: £temporary2167 = int_to_int £temporary2166 (Signed_Int -> Pointer)
176: £temporary2168 -> £temporary2167 = *£temporary2167
177: value = £temporary2168 -> £temporary2167
178: goto 188
179: £temporary2169 = arg_list + 2
180: arg_list = £temporary2169
181: £temporary2170 = arg_list - 2
182: £temporary2171 = int_to_int £temporary2170 (Signed_Int -> Pointer)
183: £temporary2172 -> £temporary2171 = *£temporary2171
184: £temporary2173 = int_to_int £temporary2172 -> £temporary2171 (Unsigned_Int -> Unsigned_Long_Int)
185: value = £temporary2173
186: goto 188
187: goto 188
188: call header
189: parameter arg_list, offset 6
190: parameter widthPtr, offset 8
191: £temporary2176 = &precision
192: parameter £temporary2176, offset 10
193: call function noellipse-noellipse checkWidthAndPrecision
194: post call
195: £temporary2177 = return_value
196: arg_list = £temporary2177
197: call header
198: parameter value, offset 6
199: parameter plus, offset 10
200: parameter space, offset 12
201: parameter grid, offset 14
202: parameter base, offset 16
203: call header
204: £temporary2178 = int_to_int c (Signed_Char -> Signed_Int)
205: parameter £temporary2178, offset 26
206: call function noellipse-noellipse isupper
207: post call
208: £temporary2179 = return_value
209: parameter £temporary2179, offset 20
210: call function noellipse-noellipse printUnsignedLong
211: post call
212: goto 435
213: if longDouble != 0 goto 216
214: goto 236
215: check track map float stack
216: push float longDoubleValue
217: pop float empty X
218: £temporary2181 = arg_list + 8
219: arg_list = £temporary2181
220: £temporary2182 = arg_list - 8
221: £temporary2183 = int_to_int £temporary2182 (Signed_Int -> Pointer)
222: £temporary2184 -> £temporary2183 = *£temporary2183
223: push float £temporary2184 -> £temporary2183
224: top float longDoubleValue
225: pop float empty X
226: call header
227: push float longDoubleValue
228: parameter longDoubleValue, offset 6
229: parameter 0, offset 14
230: parameter 0, offset 16
231: parameter 0, offset 18
232: parameter 3, offset 20
233: call function noellipse-noellipse printLongDoublePlain
234: post call
235: goto 247
236: push float longDoubleValue
237: pop float empty X
238: £temporary2186 = arg_list + 8
239: arg_list = £temporary2186
240: £temporary2187 = arg_list - 8
241: £temporary2188 = int_to_int £temporary2187 (Signed_Int -> Pointer)
242: £temporary2189 -> £temporary2188 = *£temporary2188
243: push float £temporary2189 -> £temporary2188
244: top float longDoubleValue
245: pop float empty X
246: goto 247
247: if negativePtr != 0 goto 250
248: goto 261
249: check track map float stack
250: £temporary2193 -> negativePtr = *negativePtr
251: push float longDoubleValue
252: push 0
253: if longDoubleValue < 0 goto 255
254: goto 257
255: £temporary2195 = 1
256: goto 258
257: £temporary2195 = 0
258: empty
259: £temporary2193 -> negativePtr = £temporary2195
260: goto 261
261: if sign != 0 goto 275
262: goto 264
263: check track map float stack
264: push float longDoubleValue
265: pop float empty X
266: call header
267: push float longDoubleValue
268: parameter longDoubleValue, offset 6
269: call function noellipse-noellipse fabs
270: post call
271: £temporary2198 = return_value
272: top float longDoubleValue
273: pop float empty X
274: goto 275
275: call header
276: parameter arg_list, offset 6
277: parameter widthPtr, offset 8
278: £temporary2199 = &precision
279: parameter £temporary2199, offset 10
280: call function noellipse-noellipse checkWidthAndPrecision
281: post call
282: £temporary2200 = return_value
283: arg_list = £temporary2200
284: if c == 102 goto 287
285: goto 297
286: check track map float stack
287: call header
288: push float longDoubleValue
289: parameter longDoubleValue, offset 6
290: parameter plus, offset 14
291: parameter space, offset 16
292: parameter grid, offset 18
293: parameter precision, offset 20
294: call function noellipse-noellipse printLongDoublePlain
295: post call
296: goto 370
297: call header
298: £temporary2203 = int_to_int c (Signed_Char -> Signed_Int)
299: parameter £temporary2203, offset 6
300: call function noellipse-noellipse tolower
301: post call
302: £temporary2204 = return_value
303: if £temporary2204 == 101 goto 306
304: goto 323
305: check track map float stack
306: call header
307: push float longDoubleValue
308: parameter longDoubleValue, offset 6
309: parameter plus, offset 14
310: parameter space, offset 16
311: parameter grid, offset 18
312: parameter precision, offset 20
313: call header
314: £temporary2206 = int_to_int c (Signed_Char -> Signed_Int)
315: parameter £temporary2206, offset 28
316: call function noellipse-noellipse isupper
317: post call
318: £temporary2207 = return_value
319: parameter £temporary2207, offset 22
320: call function noellipse-noellipse printLongDoubleExpo
321: post call
322: goto 370
323: call header
324: call header
325: push float longDoubleValue
326: parameter longDoubleValue, offset 6
327: call function noellipse-noellipse fabs
328: post call
329: £temporary2209 = return_value
330: parameter £temporary2209, offset 6
331: call function noellipse-noellipse log10
332: post call
333: £temporary2210 = return_value
334: £temporary2211 = float_to_int £temporary2210 (Double -> Signed_Int)
335: expo = £temporary2211
336: if expo >= -3 goto 338
337: goto 351
338: if expo <= 2 goto 341
339: goto 351
340: check track map float stack
341: call header
342: push float longDoubleValue
343: parameter longDoubleValue, offset 6
344: parameter plus, offset 14
345: parameter space, offset 16
346: parameter grid, offset 18
347: parameter precision, offset 20
348: call function noellipse-noellipse printLongDoublePlain
349: post call
350: goto 370
351: call header
352: push float longDoubleValue
353: parameter longDoubleValue, offset 6
354: parameter plus, offset 14
355: parameter space, offset 16
356: parameter grid, offset 18
357: parameter precision, offset 20
358: call header
359: £temporary2216 = int_to_int c (Signed_Char -> Signed_Int)
360: parameter £temporary2216, offset 28
361: call function noellipse-noellipse isupper
362: post call
363: £temporary2217 = return_value
364: parameter £temporary2217, offset 22
365: call function noellipse-noellipse printLongDoubleExpo
366: post call
367: goto 370
368: goto 370
369: goto 370
370: goto 435
371: £temporary2219 = arg_list + 2
372: arg_list = £temporary2219
373: £temporary2220 = arg_list - 2
374: £temporary2221 = int_to_int £temporary2220 (Signed_Int -> Pointer)
375: £temporary2222 -> £temporary2221 = *£temporary2221
376: ptrValue = £temporary2222 -> £temporary2221
377: call header
378: parameter arg_list, offset 6
379: parameter widthPtr, offset 8
380: £temporary2223 = &precision
381: parameter £temporary2223, offset 10
382: call function noellipse-noellipse checkWidthAndPrecision
383: post call
384: £temporary2224 = return_value
385: arg_list = £temporary2224
386: call header
387: £temporary2225 = int_to_int ptrValue (Pointer -> Unsigned_Long_Int)
388: parameter £temporary2225, offset 6
389: parameter 0, offset 10
390: parameter 0, offset 12
391: parameter 0, offset 14
392: parameter 10, offset 16
393: parameter 0, offset 20
394: call function noellipse-noellipse printUnsignedLong
395: post call
396: goto 435
397: £temporary2227 = arg_list + 2
398: arg_list = £temporary2227
399: £temporary2228 = arg_list - 2
400: £temporary2229 = int_to_int £temporary2228 (Signed_Int -> Pointer)
401: £temporary2230 -> £temporary2229 = *£temporary2229
402: ptrValue = £temporary2230 -> £temporary2229
403: £temporary2231 = arg_list + 2
404: arg_list = £temporary2231
405: £temporary2232 = arg_list - 2
406: £temporary2233 = int_to_int £temporary2232 (Signed_Int -> Pointer)
407: £temporary2234 -> £temporary2233 = *£temporary2233
408: intPtr = £temporary2234 -> £temporary2233
409: call header
410: parameter arg_list, offset 6
411: parameter widthPtr, offset 8
412: £temporary2235 = &precision
413: parameter £temporary2235, offset 10
414: call function noellipse-noellipse checkWidthAndPrecision
415: post call
416: £temporary2236 = return_value
417: arg_list = £temporary2236
418: £temporary2237 -> intPtr = *intPtr
419: £temporary2237 -> intPtr = g_outChars
420: goto 435
421: call header
422: parameter arg_list, offset 6
423: parameter widthPtr, offset 8
424: £temporary2238 = &precision
425: parameter £temporary2238, offset 10
426: call function noellipse-noellipse checkWidthAndPrecision
427: post call
428: £temporary2239 = return_value
429: arg_list = £temporary2239
430: call header
431: parameter 37, offset 6
432: call function noellipse-noellipse printChar
433: post call
434: goto 435
435: return_value = arg_list
436: return
437: empty
438: return
439: function end printArgument
0: width = 0
1: precision = 0
2: percent = 0
3: plus = 0
4: minus = 0
5: space = 0
6: zero = 0
7: grid = 0
8: widthStar = 0
9: period = 0
10: precisionStar = 0
11: shortInt = 0
12: longInt = 0
13: longDouble = 0
14: g_outChars = 0
15: index = 0
16: empty
17: £temporary2328 = format + index
18: £temporary2327 -> £temporary2328 = *£temporary2328
19: if £temporary2327 -> £temporary2328 != 0 goto 22
20: goto 331
21: check track map float stack
22: empty
23: £temporary2332 = format + index
24: £temporary2331 -> £temporary2332 = *£temporary2332
25: c = £temporary2331 -> £temporary2332
26: if percent != 0 goto 29
27: goto 304
28: check track map float stack
29: case c == 43 goto 58
30: case c == 45 goto 60
31: case c == 32 goto 62
32: case c == 48 goto 64
33: case c == 35 goto 66
34: case c == 46 goto 68
35: case c == 42 goto 70
36: case c == 104 goto 78
37: case c == 108 goto 80
38: case c == 76 goto 82
39: case c == 37 goto 84
40: case c == 110 goto 84
41: case c == 112 goto 84
42: case c == 71 goto 84
43: case c == 103 goto 84
44: case c == 69 goto 84
45: case c == 101 goto 84
46: case c == 102 goto 84
47: case c == 115 goto 84
48: case c == 99 goto 84
49: case c == 88 goto 84
50: case c == 120 goto 84
51: case c == 111 goto 84
52: case c == 98 goto 84
53: case c == 117 goto 84
54: case c == 100 goto 84
55: case c == 105 goto 84
56: case end c
57: goto 273
58: plus = 1
59: goto 328
60: minus = 1
61: goto 328
62: space = 1
63: goto 328
64: zero = 1
65: goto 328
66: grid = 1
67: goto 328
68: period = 1
69: goto 328
70: if period != 0 goto 75
71: goto 73
72: check track map float stack
73: width = -1
74: goto 77
75: precision = -1
76: goto 77
77: goto 328
78: shortInt = 1
79: goto 328
80: longInt = 1
81: goto 328
82: longDouble = 1
83: goto 328
84: if minus != 0 goto 87
85: goto 122
86: check track map float stack
87: startChars = g_outChars
88: call header
89: £temporary2336 = format + index
90: £temporary2335 -> £temporary2336 = *£temporary2336
91: £temporary2337 = &£temporary2335 -> £temporary2336
92: parameter £temporary2337, offset 6
93: parameter arg_list, offset 8
94: parameter plus, offset 10
95: parameter space, offset 12
96: parameter grid, offset 14
97: £temporary2338 = &width
98: parameter £temporary2338, offset 16
99: parameter precision, offset 18
100: parameter shortInt, offset 20
101: parameter longInt, offset 22
102: parameter longDouble, offset 24
103: parameter 1, offset 26
104: parameter 0, offset 28
105: call function noellipse-noellipse printArgument
106: post call
107: £temporary2339 = return_value
108: arg_list = £temporary2339
109: £temporary2340 = g_outChars - startChars
110: field = £temporary2340
111: £temporary2341 = field
112: field = field + 1
113: if £temporary2341 < width goto 116
114: goto 271
115: check track map float stack
116: call header
117: parameter 32, offset 6
118: call function noellipse-noellipse printChar
119: post call
120: goto 111
121: goto 271
122: if zero != 0 goto 125
123: goto 213
124: check track map float stack
125: startChars = g_outChars
126: oldOutStatus = g_outStatus
127: negative = 0
128: g_outStatus = 2
129: call header
130: £temporary2345 = format + index
131: £temporary2344 -> £temporary2345 = *£temporary2345
132: £temporary2346 = &£temporary2344 -> £temporary2345
133: parameter £temporary2346, offset 6
134: parameter arg_list, offset 8
135: parameter 0, offset 10
136: parameter 0, offset 12
137: parameter grid, offset 14
138: £temporary2347 = &width
139: parameter £temporary2347, offset 16
140: parameter precision, offset 18
141: parameter shortInt, offset 20
142: parameter longInt, offset 22
143: parameter longDouble, offset 24
144: parameter 0, offset 26
145: £temporary2348 = &negative
146: parameter £temporary2348, offset 28
147: call function noellipse-noellipse printArgument
148: post call
149: g_outStatus = oldOutStatus
150: £temporary2350 = g_outChars - startChars
151: field = £temporary2350
152: g_outChars = startChars
153: if negative != 0 goto 156
154: goto 162
155: check track map float stack
156: call header
157: parameter 45, offset 6
158: call function noellipse-noellipse printChar
159: post call
160: field = field + 1
161: goto 182
162: if plus != 0 goto 165
163: goto 171
164: check track map float stack
165: call header
166: parameter 43, offset 6
167: call function noellipse-noellipse printChar
168: post call
169: field = field + 1
170: goto 182
171: if space != 0 goto 174
172: goto 182
173: check track map float stack
174: call header
175: parameter 32, offset 6
176: call function noellipse-noellipse printChar
177: post call
178: field = field + 1
179: goto 182
180: goto 182
181: goto 182
182: £temporary2360 = field
183: field = field + 1
184: if £temporary2360 < width goto 187
185: goto 192
186: check track map float stack
187: call header
188: parameter 48, offset 6
189: call function noellipse-noellipse printChar
190: post call
191: goto 182
192: call header
193: £temporary2364 = format + index
194: £temporary2363 -> £temporary2364 = *£temporary2364
195: £temporary2365 = &£temporary2363 -> £temporary2364
196: parameter £temporary2365, offset 6
197: parameter arg_list, offset 8
198: parameter 0, offset 10
199: parameter 0, offset 12
200: parameter grid, offset 14
201: parameter 0, offset 16
202: parameter precision, offset 18
203: parameter shortInt, offset 20
204: parameter longInt, offset 22
205: parameter longDouble, offset 24
206: parameter 0, offset 26
207: parameter 0, offset 28
208: call function noellipse-noellipse printArgument
209: post call
210: £temporary2366 = return_value
211: arg_list = £temporary2366
212: goto 271
213: startChars = g_outChars
214: oldOutStatus = g_outStatus
215: g_outStatus = 2
216: call header
217: £temporary2368 = format + index
218: £temporary2367 -> £temporary2368 = *£temporary2368
219: £temporary2369 = &£temporary2367 -> £temporary2368
220: parameter £temporary2369, offset 6
221: parameter arg_list, offset 8
222: parameter plus, offset 10
223: parameter space, offset 12
224: parameter grid, offset 14
225: £temporary2370 = &width
226: parameter £temporary2370, offset 16
227: parameter precision, offset 18
228: parameter shortInt, offset 20
229: parameter longInt, offset 22
230: parameter longDouble, offset 24
231: parameter 1, offset 26
232: parameter 0, offset 28
233: call function noellipse-noellipse printArgument
234: post call
235: g_outStatus = oldOutStatus
236: £temporary2372 = g_outChars - startChars
237: field = £temporary2372
238: g_outChars = startChars
239: £temporary2373 = field
240: field = field + 1
241: if £temporary2373 < width goto 244
242: goto 249
243: check track map float stack
244: call header
245: parameter 32, offset 6
246: call function noellipse-noellipse printChar
247: post call
248: goto 239
249: call header
250: £temporary2377 = format + index
251: £temporary2376 -> £temporary2377 = *£temporary2377
252: £temporary2378 = &£temporary2376 -> £temporary2377
253: parameter £temporary2378, offset 6
254: parameter arg_list, offset 8
255: parameter plus, offset 10
256: parameter space, offset 12
257: parameter grid, offset 14
258: parameter 0, offset 16
259: parameter precision, offset 18
260: parameter shortInt, offset 20
261: parameter longInt, offset 22
262: parameter longDouble, offset 24
263: parameter 1, offset 26
264: parameter 0, offset 28
265: call function noellipse-noellipse printArgument
266: post call
267: £temporary2379 = return_value
268: arg_list = £temporary2379
269: goto 271
270: goto 271
271: percent = 0
272: goto 328
273: value = 0
274: call header
275: £temporary2382 = int_to_int c (Signed_Char -> Signed_Int)
276: parameter £temporary2382, offset 6
277: call function noellipse-noellipse isdigit
278: post call
279: £temporary2383 = return_value
280: if £temporary2383 != 0 goto 283
281: goto 294
282: check track map float stack
283: £temporary2384 = 10 * value
284: £temporary2385 = c - 48
285: £temporary2386 = int_to_int £temporary2385 (Signed_Char -> Signed_Int)
286: £temporary2387 = £temporary2384 + £temporary2386
287: value = £temporary2387
288: index = index + 1
289: £temporary2388 = index
290: £temporary2390 = format + £temporary2388
291: £temporary2389 -> £temporary2390 = *£temporary2390
292: c = £temporary2389 -> £temporary2390
293: goto 274
294: index = index - 1
295: if period != 0 goto 300
296: goto 298
297: check track map float stack
298: width = value
299: goto 302
300: precision = value
301: goto 302
302: goto 328
303: goto 328
304: if c == 37 goto 307
305: goto 322
306: check track map float stack
307: percent = 1
308: plus = 0
309: minus = 0
310: space = 0
311: zero = 0
312: grid = 0
313: widthStar = 0
314: period = 0
315: precisionStar = 0
316: shortInt = 0
317: longInt = 0
318: longDouble = 0
319: width = 0
320: precision = 0
321: goto 328
322: call header
323: parameter c, offset 6
324: call function noellipse-noellipse printChar
325: post call
326: goto 328
327: goto 328
328: empty
329: index = index + 1
330: goto 16
331: if g_outStatus == 1 goto 334
332: goto 340
333: check track map float stack
334: £temporary2399 = int_to_int g_outDevice (Pointer -> Pointer)
335: outString = £temporary2399
336: £temporary2401 = outString + g_outChars
337: £temporary2400 -> £temporary2401 = *£temporary2401
338: £temporary2400 -> £temporary2401 = 0
339: goto 340
340: return_value = g_outChars
341: return
342: empty
343: return
344: function end printFormat
0: £temporary2474 = &format
1: £temporary2475 = int_to_int £temporary2474 (Pointer -> Pointer)
2: £temporary2476 = £temporary2475 + 2
3: arg_list = £temporary2476
4: call header
5: parameter format, offset 6
6: parameter arg_list, offset 8
7: call function ellipse-noellipse vprintf
8: post call
9: £temporary2477 = return_value
10: return_value = £temporary2477
11: return
12: empty
13: return
14: function end printf
0: call header
1: parameter stdout, offset 6
2: parameter format, offset 8
3: parameter arg_list, offset 10
4: call function noellipse-noellipse vfprintf
5: post call
6: £temporary2481 = return_value
7: return_value = £temporary2481
8: return
9: empty
10: return
11: function end vprintf
0: £temporary2485 = &format
1: £temporary2486 = int_to_int £temporary2485 (Pointer -> Pointer)
2: £temporary2487 = £temporary2486 + 2
3: arg_list = £temporary2487
4: call header
5: parameter outStream, offset 6
6: parameter format, offset 8
7: parameter arg_list, offset 10
8: call function ellipse-noellipse vfprintf
9: post call
10: £temporary2488 = return_value
11: return_value = £temporary2488
12: return
13: empty
14: return
15: function end fprintf
0: g_outStatus = 0
1: £temporary2493 = int_to_int outStream (Pointer -> Pointer)
2: g_outDevice = £temporary2493
3: call header
4: parameter format, offset 6
5: parameter arg_list, offset 8
6: call function noellipse-noellipse printFormat
7: post call
8: £temporary2494 = return_value
9: return_value = £temporary2494
10: return
11: empty
12: return
13: function end vfprintf
0: £temporary2497 = &format
1: £temporary2498 = int_to_int £temporary2497 (Pointer -> Pointer)
2: £temporary2499 = £temporary2498 + 2
3: arg_list = £temporary2499
4: call header
5: parameter outString, offset 6
6: parameter format, offset 8
7: parameter arg_list, offset 10
8: call function ellipse-noellipse vsprintf
9: post call
10: £temporary2500 = return_value
11: return_value = £temporary2500
12: return
13: empty
14: return
15: function end sprintf
0: g_outStatus = 1
1: £temporary2505 = int_to_int outString (Pointer -> Pointer)
2: g_outDevice = £temporary2505
3: call header
4: parameter format, offset 6
5: parameter arg_list, offset 8
6: call function noellipse-noellipse printFormat
7: post call
8: £temporary2506 = return_value
9: return_value = £temporary2506
10: return
11: empty
12: return
13: function end vsprintf
0: call header
1: parameter s, offset 6
2: parameter 0, offset 8
3: parameter 10, offset 10
4: call function noellipse-noellipse strtol
5: post call
6: £temporary2509 = return_value
7: £temporary2510 = int_to_int £temporary2509 (Signed_Long_Int -> Signed_Int)
8: return_value = £temporary2510
9: return
10: empty
11: return
12: function end atoi
0: call header
1: parameter s, offset 6
2: parameter 0, offset 8
3: parameter 10, offset 10
4: call function noellipse-noellipse strtol
5: post call
6: £temporary2514 = return_value
7: return_value = £temporary2514
8: return
9: empty
10: return
11: function end atol
0: chars = 0
1: value = 0
2: call header
3: parameter s, offset 6
4: parameter string_25li25n#, offset 8
5: £temporary2518 = &value
6: parameter £temporary2518, offset 10
7: £temporary2519 = &chars
8: parameter £temporary2519, offset 12
9: call function noellipse-ellipse sscanf, extra 0
10: post call
11: if endp != 0 goto 14
12: goto 18
13: check track map float stack
14: £temporary2522 -> endp = *endp
15: £temporary2523 = s + chars
16: £temporary2522 -> endp = £temporary2523
17: goto 18
18: return_value = value
19: return
20: empty
21: return
22: function end strtol
0: chars = 0
1: value = 0
2: call header
3: parameter s, offset 6
4: parameter string_25lu25n#, offset 8
5: £temporary2530 = &value
6: parameter £temporary2530, offset 10
7: £temporary2531 = &chars
8: parameter £temporary2531, offset 12
9: call function noellipse-ellipse sscanf, extra 0
10: post call
11: if endp != 0 goto 14
12: goto 18
13: check track map float stack
14: £temporary2534 -> endp = *endp
15: £temporary2535 = s + chars
16: £temporary2534 -> endp = £temporary2535
17: goto 18
18: return_value = value
19: return
20: empty
21: return
22: function end strtoul
0: call header
1: parameter s, offset 6
2: parameter 0, offset 8
3: call function noellipse-noellipse strtod
4: post call
5: £temporary2542 = return_value
6: return_value = £temporary2542
7: return
8: empty
9: return
10: function end atof
0: chars = 0
1: push 0
2: pop float value
3: call header
4: parameter s, offset 6
5: parameter string_25lf25n#, offset 8
6: push float value
7: pop float empty X
8: £temporary2545 = &value
9: parameter £temporary2545, offset 10
10: £temporary2546 = &chars
11: parameter £temporary2546, offset 12
12: call function noellipse-ellipse sscanf, extra 0
13: post call
14: if endp != 0 goto 17
15: goto 21
16: check track map float stack
17: £temporary2549 -> endp = *endp
18: £temporary2550 = s + chars
19: £temporary2549 -> endp = £temporary2550
20: goto 21
21: push float value
22: return_value = value
23: return
24: empty
25: return
26: function end strtod
0: ah = 76
1: al = -1
2: interrupt 33
3: empty
4: return
5: function end abort
0: return_value = 0
1: return
2: empty
3: return
4: function end getenv
0: return_value = -1
1: return
2: empty
3: return
4: function end system
0: £temporary2559 = int_to_int value1 (Pointer -> Pointer)
1: charValue1 = £temporary2559
2: £temporary2560 = int_to_int value2 (Pointer -> Pointer)
3: charValue2 = £temporary2560
4: index = 0
5: empty
6: if index < valueSize goto 9
7: goto 24
8: check track map float stack
9: empty
10: £temporary2564 = charValue1 + index
11: £temporary2563 -> £temporary2564 = *£temporary2564
12: tempValue = £temporary2563 -> £temporary2564
13: £temporary2566 = charValue1 + index
14: £temporary2565 -> £temporary2566 = *£temporary2566
15: £temporary2568 = charValue2 + index
16: £temporary2567 -> £temporary2568 = *£temporary2568
17: £temporary2565 -> £temporary2566 = £temporary2567 -> £temporary2568
18: £temporary2570 = charValue2 + index
19: £temporary2569 -> £temporary2570 = *£temporary2570
20: £temporary2569 -> £temporary2570 = tempValue
21: empty
22: index = index + 1
23: goto 5
24: empty
25: return
26: function end memswp
0: firstIndex = 0
1: £temporary2571 = listSize - 1
2: lastIndex = £temporary2571
3: if listSize == 0 goto 6
4: goto 9
5: check track map float stack
6: return_value = 0
7: return
8: goto 9
9: goto 11
10: check track map float stack
11: £temporary2573 = int_to_int valueList (Pointer -> Pointer)
12: £temporary2574 = firstIndex * valueSize
13: £temporary2575 = £temporary2573 + £temporary2574
14: firstValuePtr = £temporary2575
15: call header
16: parameter keyPtr, offset 6
17: parameter firstValuePtr, offset 8
18: call function noellipse-noellipse compare
19: post call
20: £temporary2576 = return_value
21: firstCompare = £temporary2576
22: if firstCompare < 0 goto 25
23: goto 28
24: check track map float stack
25: return_value = 0
26: return
27: goto 35
28: if firstCompare == 0 goto 31
29: goto 35
30: check track map float stack
31: return_value = firstValuePtr
32: return
33: goto 35
34: goto 35
35: £temporary2579 = int_to_int valueList (Pointer -> Pointer)
36: £temporary2580 = lastIndex * valueSize
37: £temporary2581 = £temporary2579 + £temporary2580
38: lastValuePtr = £temporary2581
39: call header
40: parameter keyPtr, offset 6
41: parameter lastValuePtr, offset 8
42: call function noellipse-noellipse compare
43: post call
44: £temporary2582 = return_value
45: lastCompare = £temporary2582
46: if lastCompare > 0 goto 49
47: goto 52
48: check track map float stack
49: return_value = 0
50: return
51: goto 59
52: if lastCompare == 0 goto 55
53: goto 59
54: check track map float stack
55: return_value = lastValuePtr
56: return
57: goto 59
58: goto 59
59: £temporary2585 = firstIndex + lastIndex
60: £temporary2586 = £temporary2585 / 2
61: middleIndex = £temporary2586
62: £temporary2587 = int_to_int valueList (Pointer -> Pointer)
63: £temporary2588 = middleIndex * valueSize
64: £temporary2589 = £temporary2587 + £temporary2588
65: middleValuePtr = £temporary2589
66: call header
67: parameter keyPtr, offset 6
68: parameter middleValuePtr, offset 8
69: call function noellipse-noellipse compare
70: post call
71: £temporary2590 = return_value
72: middleCompare = £temporary2590
73: if middleCompare < 0 goto 76
74: goto 78
75: check track map float stack
76: lastIndex = middleIndex
77: goto 9
78: if middleCompare > 0 goto 81
79: goto 83
80: check track map float stack
81: firstIndex = middleIndex
82: goto 9
83: return_value = middleValuePtr
84: return
85: goto 9
86: goto 9
87: goto 9
88: empty
89: return
90: function end bsearch
0: £temporary2600 = 1664525 * g_randValue
1: £temporary2601 = £temporary2600 + 1013904223
2: £temporary2602 = £temporary2601 % 127
3: g_randValue = £temporary2602
4: £temporary2603 = int_to_int g_randValue (Signed_Long_Int -> Signed_Int)
5: return_value = £temporary2603
6: return
7: empty
8: return
9: function end rand
0: £temporary2604 = int_to_int seed (Unsigned_Int -> Signed_Long_Int)
1: g_randValue = £temporary2604
2: empty
3: return
4: function end srand
0: heapBottom = (int2$32764#,0)
1: topStack = (int2$32766#,0)
2: heapTop = (int2$32762#,0)
3: index = 0
4: call header
5: parameter string_stack20top2025u2C20heap20top2025u2C20heap20bottom2025u0A#, offset 6
6: parameter topStack, offset 8
7: parameter heapTop, offset 10
8: parameter heapBottom, offset 12
9: call function noellipse-ellipse printf, extra 0
10: post call
11: if heapTop != 0 goto 14
12: goto 31
13: check track map float stack
14: £temporary2610 = int_to_int heapTop (Unsigned_Int -> Pointer)
15: £temporary2611 = £temporary2610 + 2
16: £temporary2612 -> £temporary2611 = *£temporary2611
17: size = £temporary2612 -> £temporary2611
18: call header
19: parameter string_2020index2025u2C20address2025u2C20size2025u0A#, offset 6
20: £temporary2613 = index
21: index = index + 1
22: parameter £temporary2613, offset 8
23: parameter heapTop, offset 10
24: parameter size, offset 12
25: call function noellipse-ellipse printf, extra 0
26: post call
27: £temporary2615 = int_to_int heapTop (Unsigned_Int -> Pointer)
28: £temporary2616 -> £temporary2615 = *£temporary2615
29: heapTop = £temporary2616 -> £temporary2615
30: goto 11
31: call header
32: parameter string_0A#, offset 6
33: call function noellipse-ellipse printf, extra 0
34: post call
35: empty
36: return
37: function end print_heap2
0: call header
1: parameter string_0A#, offset 6
2: call function noellipse-ellipse printf, extra 0
3: post call
4: index = 0
5: empty
6: if index < 256 goto 9
7: goto 35
8: check track map float stack
9: empty
10: £temporary2631 = index * 2
11: £temporary2632 = g_funcArray + £temporary2631
12: £temporary2630 -> £temporary2632 = *£temporary2632
13: if £temporary2630 -> £temporary2632 == 0 goto 16
14: goto 32
15: check track map float stack
16: £temporary2635 = index * 2
17: £temporary2636 = g_funcArray + £temporary2635
18: £temporary2634 -> £temporary2636 = *£temporary2636
19: £temporary2634 -> £temporary2636 = fcn
20: call header
21: parameter string_Added20function20index2025i3A2025i0A#, offset 6
22: parameter index, offset 8
23: £temporary2638 = index * 2
24: £temporary2639 = g_funcArray + £temporary2638
25: £temporary2637 -> £temporary2639 = *£temporary2639
26: parameter £temporary2637 -> £temporary2639, offset 10
27: call function noellipse-ellipse printf, extra 0
28: post call
29: return_value = 0
30: return
31: goto 32
32: empty
33: index = index + 1
34: goto 5
35: return_value = -1
36: return
37: empty
38: return
39: function end atexit
0: call header
1: parameter string_0A#, offset 6
2: call function noellipse-ellipse printf, extra 0
3: post call
4: index = 255
5: empty
6: if index >= 0 goto 9
7: goto 35
8: check track map float stack
9: empty
10: £temporary2649 = index * 2
11: £temporary2650 = g_funcArray + £temporary2649
12: £temporary2648 -> £temporary2650 = *£temporary2650
13: if £temporary2648 -> £temporary2650 != 0 goto 16
14: goto 32
15: check track map float stack
16: call header
17: parameter string_Called20function20index2025i3A2025i0A#, offset 6
18: parameter index, offset 8
19: £temporary2653 = index * 2
20: £temporary2654 = g_funcArray + £temporary2653
21: £temporary2652 -> £temporary2654 = *£temporary2654
22: parameter £temporary2652 -> £temporary2654, offset 10
23: call function noellipse-ellipse printf, extra 0
24: post call
25: £temporary2657 = index * 2
26: £temporary2658 = g_funcArray + £temporary2657
27: £temporary2656 -> £temporary2658 = *£temporary2658
28: call header
29: call function noellipse-noellipse £temporary2656 -> £temporary2658
30: post call
31: goto 32
32: empty
33: index = index - 1
34: goto 5
35: £temporary2661 = int_to_int status (Signed_Int -> Signed_Short_Int)
36: al = £temporary2661
37: ah = 76
38: interrupt 33
39: empty
40: return
41: function end exit
0: index = 0
1: empty
2: if index < valueSize goto 5
3: goto 20
4: check track map float stack
5: empty
6: £temporary2670 = leftValuePtr + index
7: £temporary2669 -> £temporary2670 = *£temporary2670
8: tempValue = £temporary2669 -> £temporary2670
9: £temporary2672 = leftValuePtr + index
10: £temporary2671 -> £temporary2672 = *£temporary2672
11: £temporary2674 = rightValuePtr + index
12: £temporary2673 -> £temporary2674 = *£temporary2674
13: £temporary2671 -> £temporary2672 = £temporary2673 -> £temporary2674
14: £temporary2676 = rightValuePtr + index
15: £temporary2675 -> £temporary2676 = *£temporary2676
16: £temporary2675 -> £temporary2676 = tempValue
17: empty
18: index = index + 1
19: goto 1
20: empty
21: return
22: function end swap
0: £temporary2677 = int_to_int valueList (Pointer -> Pointer)
1: charList = £temporary2677
2: £temporary2678 = listSize - 1
3: index1 = £temporary2678
4: empty
5: if index1 > 0 goto 8
6: goto 51
7: check track map float stack
8: empty
9: update = 0
10: index2 = 0
11: empty
12: if index2 < index1 goto 15
13: goto 43
14: check track map float stack
15: empty
16: £temporary2683 = index2 * valueSize
17: £temporary2684 = charList + £temporary2683
18: valuePtr1 = £temporary2684
19: £temporary2685 = index2 + 1
20: £temporary2686 = £temporary2685 * valueSize
21: £temporary2687 = charList + £temporary2686
22: valuePtr2 = £temporary2687
23: call header
24: parameter valuePtr1, offset 6
25: parameter valuePtr2, offset 8
26: call function noellipse-noellipse compare
27: post call
28: £temporary2688 = return_value
29: if £temporary2688 > 0 goto 32
30: goto 40
31: check track map float stack
32: call header
33: parameter valuePtr1, offset 6
34: parameter valuePtr2, offset 8
35: parameter valueSize, offset 10
36: call function noellipse-noellipse swap
37: post call
38: update = 1
39: goto 40
40: empty
41: index2 = index2 + 1
42: goto 11
43: if update != 0 goto 48
44: goto 46
45: check track map float stack
46: empty
47: goto 48
48: empty
49: index1 = index1 - 1
50: goto 4
51: empty
52: return
53: function end qsort
0: if value < 0 goto 2
1: goto 6
2: empty
3: £temporary2699 = -value
4: £temporary2703 = £temporary2699
5: goto 8
6: empty
7: £temporary2703 = value
8: empty
9: return_value = £temporary2703
10: return
11: empty
12: return
13: function end abs
0: if value < 0 goto 2
1: goto 6
2: empty
3: £temporary2705 = -value
4: £temporary2709 = £temporary2705
5: goto 8
6: empty
7: £temporary2709 = value
8: empty
9: return_value = £temporary2709
10: return
11: empty
12: return
13: function end labs
0: result$quot = 0
1: result$rem = 0
2: if denum == 0 goto 5
3: goto 9
4: check track map float stack
5: errno = 6
6: return_value = result
7: return
8: goto 9
9: £temporary2714 = num / denum
10: result$quot = £temporary2714
11: £temporary2716 = num % denum
12: result$rem = £temporary2716
13: return_value = result
14: return
15: empty
16: return
17: function end div
0: result$quot = 0
1: result$rem = 0
2: if denum == 0 goto 5
3: goto 9
4: check track map float stack
5: errno = 6
6: return_value = result
7: return
8: goto 9
9: £temporary2723 = num / denum
10: result$quot = £temporary2723
11: £temporary2725 = num % denum
12: result$rem = £temporary2725
13: return_value = result
14: return
15: empty
16: return
17: function end ldiv
0: return_value = -1
1: return
2: empty
3: return
4: function end clock
0: ah = 42
1: interrupt 33
2: £temporary2729 = cx
3: £temporary2730 = £temporary2729 - 1900
4: year = £temporary2730
5: £temporary2731 = dh
6: £temporary2732 = £temporary2731 - 1
7: month = £temporary2732
8: £temporary2733 = dl
9: monthDay = £temporary2733
10: call header
11: parameter string_25i2D25i2D25i0A#, offset 6
12: parameter year, offset 8
13: £temporary2734 = int_to_int month (Signed_Short_Int -> Signed_Int)
14: parameter £temporary2734, offset 10
15: £temporary2735 = int_to_int monthDay (Signed_Short_Int -> Signed_Int)
16: parameter £temporary2735, offset 12
17: call function noellipse-ellipse printf, extra 0
18: post call
19: ah = 44
20: interrupt 33
21: £temporary2738 = ch
22: hour = £temporary2738
23: £temporary2739 = cl
24: min = £temporary2739
25: £temporary2740 = dh
26: sec = £temporary2740
27: £temporary2741 = year % 4
28: if £temporary2741 == 0 goto 30
29: goto 32
30: £temporary2743 = 1
31: goto 33
32: £temporary2743 = 0
33: empty
34: leapYear = £temporary2743
35: daysOfMonths[0] = 31
36: if leapYear != 0 goto 38
37: goto 41
38: empty
39: £temporary2748 = 29
40: goto 43
41: empty
42: £temporary2748 = 28
43: empty
44: daysOfMonths[1] = £temporary2748
45: daysOfMonths[2] = 31
46: daysOfMonths[3] = 30
47: daysOfMonths[4] = 31
48: daysOfMonths[5] = 30
49: daysOfMonths[6] = 30
50: daysOfMonths[7] = 31
51: daysOfMonths[8] = 30
52: daysOfMonths[9] = 31
53: daysOfMonths[10] = 30
54: daysOfMonths[11] = 31
55: £temporary2761 = int_to_int monthDay (Signed_Short_Int -> Signed_Int)
56: £temporary2762 = £temporary2761 - 1
57: yearDay = £temporary2762
58: mon = 0
59: empty
60: £temporary2763 = int_to_int month (Signed_Short_Int -> Signed_Int)
61: if mon < £temporary2763 goto 64
62: goto 73
63: check track map float stack
64: empty
65: £temporary2767 = mon * 2
66: £temporary2768 = daysOfMonths + £temporary2767
67: £temporary2766 -> £temporary2768 = *£temporary2768
68: £temporary2769 = yearDay + £temporary2766 -> £temporary2768
69: yearDay = £temporary2769
70: empty
71: mon = mon + 1
72: goto 59
73: call header
74: parameter string_25i2025i0A#, offset 6
75: parameter yearDay, offset 8
76: £temporary2770 = int_to_int month (Signed_Short_Int -> Signed_Int)
77: parameter £temporary2770, offset 10
78: call function noellipse-ellipse printf, extra 0
79: post call
80: £temporary2773 = int_to_int sec (Signed_Short_Int -> Signed_Int)
81: s$tm_sec = £temporary2773
82: £temporary2775 = int_to_int min (Signed_Short_Int -> Signed_Int)
83: s$tm_min = £temporary2775
84: £temporary2777 = int_to_int hour (Signed_Short_Int -> Signed_Int)
85: s$tm_hour = £temporary2777
86: £temporary2779 = int_to_int monthDay (Signed_Short_Int -> Signed_Int)
87: s$tm_mday = £temporary2779
88: £temporary2781 = int_to_int month (Signed_Short_Int -> Signed_Int)
89: s$tm_mon = £temporary2781
90: s$tm_year = year
91: s$tm_wday = 0
92: s$tm_yday = yearDay
93: s$tm_isdst = 0
94: call header
95: £temporary2786 = &s
96: parameter £temporary2786, offset 6
97: call function noellipse-noellipse mktime
98: post call
99: £temporary2787 = return_value
100: time = £temporary2787
101: if timePtr != 0 goto 104
102: goto 107
103: check track map float stack
104: £temporary2789 -> timePtr = *timePtr
105: £temporary2789 -> timePtr = time
106: goto 107
107: return_value = time
108: return
109: empty
110: return
111: function end time
0: if tp != 0 goto 3
1: goto 32
2: check track map float stack
3: £temporary2800 -> tp = *tp, offset 10
4: £temporary2801 = £temporary2800 -> tp - 69
5: £temporary2802 = £temporary2801 / 4
6: £temporary2803 = int_to_int £temporary2802 (Signed_Int -> Signed_Long_Int)
7: leapDays = £temporary2803
8: £temporary2804 -> tp = *tp, offset 10
9: £temporary2805 = £temporary2804 -> tp - 70
10: £temporary2806 = 365 * £temporary2805
11: £temporary2807 = int_to_int £temporary2806 (Signed_Int -> Signed_Long_Int)
12: £temporary2808 = £temporary2807 + leapDays
13: £temporary2809 -> tp = *tp, offset 14
14: £temporary2810 = int_to_int £temporary2809 -> tp (Signed_Int -> Signed_Long_Int)
15: £temporary2811 = £temporary2808 + £temporary2810
16: totalDays = £temporary2811
17: £temporary2812 = 86400 * totalDays
18: £temporary2813 -> tp = *tp, offset 4
19: £temporary2814 = int_to_int £temporary2813 -> tp (Signed_Int -> Signed_Long_Int)
20: £temporary2815 = 3600 * £temporary2814
21: £temporary2816 = £temporary2812 + £temporary2815
22: £temporary2817 -> tp = *tp, offset 2
23: £temporary2818 = int_to_int £temporary2817 -> tp (Signed_Int -> Signed_Long_Int)
24: £temporary2819 = 60 * £temporary2818
25: £temporary2820 = £temporary2816 + £temporary2819
26: £temporary2821 -> tp = *tp
27: £temporary2822 = int_to_int £temporary2821 -> tp (Signed_Int -> Signed_Long_Int)
28: £temporary2823 = £temporary2820 + £temporary2822
29: return_value = £temporary2823
30: return
31: goto 32
32: return_value = 0
33: return
34: empty
35: return
36: function end mktime
0: year = 1970
1: if timePtr != 0 goto 4
2: goto 116
3: check track map float stack
4: £temporary2825 -> timePtr = *timePtr
5: time = £temporary2825 -> timePtr
6: £temporary2826 = time % 86400
7: secondsOfDay = £temporary2826
8: £temporary2828 = secondsOfDay / 3600
9: £temporary2829 = int_to_int £temporary2828 (Signed_Long_Int -> Signed_Int)
10: g_timeStruct$tm_hour = £temporary2829
11: £temporary2831 = secondsOfDay % 3600
12: £temporary2832 = £temporary2831 / 60
13: £temporary2833 = int_to_int £temporary2832 (Signed_Long_Int -> Signed_Int)
14: g_timeStruct$tm_min = £temporary2833
15: £temporary2835 = secondsOfDay % 3600
16: £temporary2836 = £temporary2835 % 60
17: £temporary2837 = int_to_int £temporary2836 (Signed_Long_Int -> Signed_Int)
18: g_timeStruct$tm_sec = £temporary2837
19: £temporary2838 = time / 86400
20: totalDays = £temporary2838
21: if totalDays < 3 goto 24
22: goto 28
23: check track map float stack
24: £temporary2841 = totalDays + 4
25: £temporary2842 = int_to_int £temporary2841 (Signed_Long_Int -> Signed_Int)
26: g_timeStruct$tm_wday = £temporary2842
27: goto 33
28: £temporary2844 = totalDays - 3
29: £temporary2845 = £temporary2844 % 7
30: £temporary2846 = int_to_int £temporary2845 (Signed_Long_Int -> Signed_Int)
31: g_timeStruct$tm_wday = £temporary2846
32: goto 33
33: goto 35
34: check track map float stack
35: £temporary2847 = year % 4
36: if £temporary2847 == 0 goto 38
37: goto 41
38: £temporary2849 = year % 100
39: if £temporary2849 != 0 goto 44
40: goto 41
41: £temporary2852 = year % 400
42: if £temporary2852 == 0 goto 44
43: goto 46
44: £temporary2855 = 1
45: goto 47
46: £temporary2855 = 0
47: empty
48: leapYear = £temporary2855
49: if leapYear != 0 goto 51
50: goto 54
51: empty
52: £temporary2860 = 366
53: goto 56
54: empty
55: £temporary2860 = 365
56: empty
57: daysOfYear = £temporary2860
58: £temporary2861 = int_to_int daysOfYear (Signed_Int -> Signed_Long_Int)
59: if totalDays < £temporary2861 goto 62
60: goto 110
61: check track map float stack
62: £temporary2864 = year - 1900
63: g_timeStruct$tm_year = £temporary2864
64: £temporary2866 = int_to_int totalDays (Signed_Long_Int -> Signed_Int)
65: g_timeStruct$tm_yday = £temporary2866
66: daysOfMonths[0] = 31
67: if leapYear != 0 goto 69
68: goto 72
69: empty
70: £temporary2871 = 29
71: goto 74
72: empty
73: £temporary2871 = 28
74: empty
75: daysOfMonths[1] = £temporary2871
76: daysOfMonths[2] = 31
77: daysOfMonths[3] = 30
78: daysOfMonths[4] = 31
79: daysOfMonths[5] = 30
80: daysOfMonths[6] = 30
81: daysOfMonths[7] = 31
82: daysOfMonths[8] = 30
83: daysOfMonths[9] = 31
84: daysOfMonths[10] = 30
85: daysOfMonths[11] = 31
86: month = 0
87: £temporary2885 = month * 2
88: £temporary2886 = daysOfMonths + £temporary2885
89: £temporary2884 -> £temporary2886 = *£temporary2886
90: £temporary2887 = int_to_int £temporary2884 -> £temporary2886 (Signed_Int -> Signed_Long_Int)
91: if totalDays >= £temporary2887 goto 94
92: goto 102
93: check track map float stack
94: £temporary2890 = month * 2
95: £temporary2891 = daysOfMonths + £temporary2890
96: £temporary2889 -> £temporary2891 = *£temporary2891
97: £temporary2892 = int_to_int £temporary2889 -> £temporary2891 (Signed_Int -> Signed_Long_Int)
98: £temporary2893 = totalDays - £temporary2892
99: totalDays = £temporary2893
100: month = month + 1
101: goto 87
102: g_timeStruct$tm_mon = month
103: £temporary2897 = totalDays + 1
104: £temporary2898 = int_to_int £temporary2897 (Signed_Long_Int -> Signed_Int)
105: g_timeStruct$tm_mday = £temporary2898
106: g_timeStruct$tm_isdst = -1
107: return_value = (@30$g_timeStruct,0)
108: return
109: goto 110
110: year = year + 1
111: £temporary2901 = int_to_int daysOfYear (Signed_Int -> Signed_Long_Int)
112: £temporary2902 = totalDays - £temporary2901
113: totalDays = £temporary2902
114: goto 33
115: goto 116
116: return_value = 0
117: return
118: empty
119: return
120: function end gmtime
0: £temporary2904 = time2 - time1
1: £temporary2905 = int_to_float £temporary2904 (Unsigned_Long_Int -> Double)
2: return_value = £temporary2905
3: return
4: empty
5: return
6: function end difftime
0: empty
1: return
2: function end default_test
0: localeConvPtr = 0
1: if localeConvPtr != 0 goto 3
2: goto 7
3: empty
4: £temporary2907 -> localeConvPtr = *localeConvPtr, offset 4
5: £temporary2911 = £temporary2907 -> localeConvPtr
6: goto 9
7: empty
8: £temporary2911 = 0
9: empty
10: shortDayList = £temporary2911
11: if localeConvPtr != 0 goto 13
12: goto 17
13: empty
14: £temporary2913 -> localeConvPtr = *localeConvPtr, offset 8
15: £temporary2917 = £temporary2913 -> localeConvPtr
16: goto 19
17: empty
18: £temporary2917 = 0
19: empty
20: shortMonthList = £temporary2917
21: if shortDayList != 0 goto 23
22: goto 26
23: empty
24: £temporary2922 = shortDayList
25: goto 28
26: empty
27: £temporary2922 = g_defaultShortDayList
28: empty
29: shortDayList = £temporary2922
30: if shortMonthList != 0 goto 32
31: goto 35
32: empty
33: £temporary2927 = shortMonthList
34: goto 37
35: empty
36: £temporary2927 = g_defaultShortMonthList
37: empty
38: shortMonthList = £temporary2927
39: call header
40: parameter g_timeString, offset 6
41: parameter string_25s2025s20252i202502i3A2502i3A2502i202504i#, offset 8
42: £temporary2928 -> tp = *tp, offset 12
43: £temporary2930 = £temporary2928 -> tp * 2
44: £temporary2931 = shortDayList + £temporary2930
45: £temporary2929 -> £temporary2931 = *£temporary2931
46: parameter £temporary2929 -> £temporary2931, offset 10
47: £temporary2932 -> tp = *tp, offset 8
48: £temporary2934 = £temporary2932 -> tp * 2
49: £temporary2935 = shortMonthList + £temporary2934
50: £temporary2933 -> £temporary2935 = *£temporary2935
51: parameter £temporary2933 -> £temporary2935, offset 12
52: £temporary2936 -> tp = *tp, offset 6
53: parameter £temporary2936 -> tp, offset 14
54: £temporary2937 -> tp = *tp, offset 4
55: parameter £temporary2937 -> tp, offset 16
56: £temporary2938 -> tp = *tp, offset 2
57: parameter £temporary2938 -> tp, offset 18
58: £temporary2939 -> tp = *tp
59: parameter £temporary2939 -> tp, offset 20
60: £temporary2940 -> tp = *tp, offset 10
61: £temporary2941 = £temporary2940 -> tp + 1900
62: parameter £temporary2941, offset 22
63: call function noellipse-ellipse sprintf, extra 0
64: post call
65: return_value = g_timeString
66: return
67: empty
68: return
69: function end asctime
0: call header
1: call header
2: parameter time, offset 6
3: call function noellipse-noellipse localtime
4: post call
5: £temporary2952 = return_value
6: parameter £temporary2952, offset 6
7: call function noellipse-noellipse asctime
8: post call
9: £temporary2953 = return_value
10: return_value = £temporary2953
11: return
12: empty
13: return
14: function end ctime
0: call header
1: parameter timePtr, offset 6
2: call function noellipse-noellipse gmtime
3: post call
4: £temporary2956 = return_value
5: tmPtr = £temporary2956
6: call header
7: call function noellipse-noellipse localeconv
8: post call
9: £temporary2957 = return_value
10: localeConvPtr = £temporary2957
11: timeZone = 0
12: if localeConvPtr != 0 goto 15
13: goto 28
14: check track map float stack
15: £temporary2959 -> tmPtr = *tmPtr, offset 16
16: if £temporary2959 -> tmPtr != 0 goto 18
17: goto 22
18: empty
19: £temporary2960 -> localeConvPtr = *localeConvPtr
20: £temporary2966 = £temporary2960 -> localeConvPtr
21: goto 25
22: empty
23: £temporary2961 -> localeConvPtr = *localeConvPtr, offset 2
24: £temporary2966 = £temporary2961 -> localeConvPtr
25: empty
26: timeZone = £temporary2966
27: goto 28
28: £temporary2967 -> timePtr = *timePtr
29: £temporary2968 = 3600 * timeZone
30: £temporary2969 = int_to_int £temporary2968 (Signed_Int -> Unsigned_Long_Int)
31: £temporary2970 = £temporary2967 -> timePtr + £temporary2969
32: time = £temporary2970
33: call header
34: £temporary2971 = &time
35: parameter £temporary2971, offset 6
36: call function noellipse-noellipse gmtime
37: post call
38: £temporary2972 = return_value
39: return_value = £temporary2972
40: return
41: empty
42: return
43: function end localtime
0: call header
1: call function noellipse-noellipse localeconv
2: post call
3: £temporary2976 = return_value
4: localeConvPtr = £temporary2976
5: if localeConvPtr != 0 goto 7
6: goto 11
7: empty
8: £temporary2978 -> localeConvPtr = *localeConvPtr, offset 4
9: £temporary2982 = £temporary2978 -> localeConvPtr
10: goto 13
11: empty
12: £temporary2982 = 0
13: empty
14: shortDayList = £temporary2982
15: if localeConvPtr != 0 goto 17
16: goto 21
17: empty
18: £temporary2984 -> localeConvPtr = *localeConvPtr, offset 8
19: £temporary2988 = £temporary2984 -> localeConvPtr
20: goto 23
21: empty
22: £temporary2988 = 0
23: empty
24: shortMonthList = £temporary2988
25: if localeConvPtr != 0 goto 27
26: goto 31
27: empty
28: £temporary2990 -> localeConvPtr = *localeConvPtr, offset 6
29: £temporary2994 = £temporary2990 -> localeConvPtr
30: goto 33
31: empty
32: £temporary2994 = 0
33: empty
34: longDayList = £temporary2994
35: if localeConvPtr != 0 goto 37
36: goto 41
37: empty
38: £temporary2996 -> localeConvPtr = *localeConvPtr, offset 10
39: £temporary3000 = £temporary2996 -> localeConvPtr
40: goto 43
41: empty
42: £temporary3000 = 0
43: empty
44: longMonthList = £temporary3000
45: call header
46: parameter s, offset 6
47: parameter string_#, offset 8
48: call function noellipse-noellipse strcpy
49: post call
50: if shortDayList != 0 goto 52
51: goto 55
52: empty
53: £temporary3006 = shortDayList
54: goto 57
55: empty
56: £temporary3006 = g_defaultShortDayList
57: empty
58: shortDayList = £temporary3006
59: if longDayList != 0 goto 61
60: goto 64
61: empty
62: £temporary3011 = longDayList
63: goto 66
64: empty
65: £temporary3011 = g_defaultLongDayList
66: empty
67: longDayList = £temporary3011
68: if shortMonthList != 0 goto 70
69: goto 73
70: empty
71: £temporary3016 = shortMonthList
72: goto 75
73: empty
74: £temporary3016 = g_defaultShortMonthList
75: empty
76: shortMonthList = £temporary3016
77: if longMonthList != 0 goto 79
78: goto 82
79: empty
80: £temporary3021 = longMonthList
81: goto 84
82: empty
83: £temporary3021 = g_defaultLongMonthList
84: empty
85: longMonthList = £temporary3021
86: £temporary3022 -> tp = *tp, offset 10
87: £temporary3023 = £temporary3022 -> tp - 69
88: £temporary3024 = £temporary3023 / 4
89: leapDays = £temporary3024
90: £temporary3025 -> tp = *tp, offset 10
91: £temporary3026 = £temporary3025 -> tp - 70
92: £temporary3027 = 365 * £temporary3026
93: £temporary3028 = £temporary3027 + leapDays
94: £temporary3029 -> tp = *tp, offset 14
95: £temporary3030 = £temporary3028 + £temporary3029 -> tp
96: £temporary3031 = int_to_int £temporary3030 (Signed_Int -> Signed_Long_Int)
97: totalDays = £temporary3031
98: call header
99: parameter string_leap20days2025i2C20total20days2025lu0A#, offset 6
100: parameter leapDays, offset 8
101: parameter totalDays, offset 10
102: call function noellipse-ellipse printf, extra 0
103: post call
104: if totalDays < 3 goto 107
105: goto 111
106: check track map float stack
107: £temporary3034 = totalDays + 4
108: £temporary3035 = int_to_int £temporary3034 (Signed_Long_Int -> Signed_Int)
109: yearDaySunday = £temporary3035
110: goto 116
111: £temporary3036 = totalDays - 3
112: £temporary3037 = £temporary3036 % 7
113: £temporary3038 = int_to_int £temporary3037 (Signed_Long_Int -> Signed_Int)
114: yearDaySunday = £temporary3038
115: goto 116
116: call header
117: parameter string_yearDaySunday2025i0A#, offset 6
118: parameter yearDaySunday, offset 8
119: call function noellipse-ellipse printf, extra 0
120: post call
121: if totalDays < 4 goto 124
122: goto 128
123: check track map float stack
124: £temporary3041 = totalDays + 3
125: £temporary3042 = int_to_int £temporary3041 (Signed_Long_Int -> Signed_Int)
126: yearDayMonday = £temporary3042
127: goto 133
128: £temporary3043 = totalDays - 4
129: £temporary3044 = £temporary3043 % 7
130: £temporary3045 = int_to_int £temporary3044 (Signed_Long_Int -> Signed_Int)
131: yearDayMonday = £temporary3045
132: goto 133
133: call header
134: parameter string_yearDayMonday2025i0A#, offset 6
135: parameter yearDayMonday, offset 8
136: call function noellipse-ellipse printf, extra 0
137: post call
138: index = 0
139: empty
140: £temporary3048 = fmt + index
141: £temporary3047 -> £temporary3048 = *£temporary3048
142: if £temporary3047 -> £temporary3048 != 0 goto 145
143: goto 423
144: check track map float stack
145: empty
146: £temporary3052 = fmt + index
147: £temporary3051 -> £temporary3052 = *£temporary3052
148: if £temporary3051 -> £temporary3052 == 37 goto 151
149: goto 391
150: check track map float stack
151: index = index + 1
152: £temporary3054 = index
153: £temporary3056 = fmt + £temporary3054
154: £temporary3055 -> £temporary3056 = *£temporary3056
155: case £temporary3055 -> £temporary3056 == 97 goto 179
156: case £temporary3055 -> £temporary3056 == 65 goto 189
157: case £temporary3055 -> £temporary3056 == 98 goto 199
158: case £temporary3055 -> £temporary3056 == 66 goto 209
159: case £temporary3055 -> £temporary3056 == 99 goto 219
160: case £temporary3055 -> £temporary3056 == 100 goto 239
161: case £temporary3055 -> £temporary3056 == 72 goto 247
162: case £temporary3055 -> £temporary3056 == 73 goto 255
163: case £temporary3055 -> £temporary3056 == 106 goto 264
164: case £temporary3055 -> £temporary3056 == 109 goto 272
165: case £temporary3055 -> £temporary3056 == 77 goto 281
166: case £temporary3055 -> £temporary3056 == 112 goto 289
167: case £temporary3055 -> £temporary3056 == 83 goto 305
168: case £temporary3055 -> £temporary3056 == 85 goto 313
169: case £temporary3055 -> £temporary3056 == 119 goto 320
170: case £temporary3055 -> £temporary3056 == 87 goto 328
171: case £temporary3055 -> £temporary3056 == 120 goto 335
172: case £temporary3055 -> £temporary3056 == 88 goto 349
173: case £temporary3055 -> £temporary3056 == 121 goto 361
174: case £temporary3055 -> £temporary3056 == 89 goto 370
175: case £temporary3055 -> £temporary3056 == 90 goto 379
176: case £temporary3055 -> £temporary3056 == 37 goto 385
177: case end £temporary3055 -> £temporary3056
178: goto 398
179: call header
180: parameter add, offset 6
181: £temporary3057 -> tp = *tp, offset 12
182: £temporary3059 = £temporary3057 -> tp * 2
183: £temporary3060 = shortDayList + £temporary3059
184: £temporary3058 -> £temporary3060 = *£temporary3060
185: parameter £temporary3058 -> £temporary3060, offset 8
186: call function noellipse-noellipse strcpy
187: post call
188: goto 398
189: call header
190: parameter add, offset 6
191: £temporary3062 -> tp = *tp, offset 12
192: £temporary3064 = £temporary3062 -> tp * 2
193: £temporary3065 = longDayList + £temporary3064
194: £temporary3063 -> £temporary3065 = *£temporary3065
195: parameter £temporary3063 -> £temporary3065, offset 8
196: call function noellipse-noellipse strcpy
197: post call
198: goto 398
199: call header
200: parameter add, offset 6
201: £temporary3067 -> tp = *tp, offset 8
202: £temporary3069 = £temporary3067 -> tp * 2
203: £temporary3070 = shortMonthList + £temporary3069
204: £temporary3068 -> £temporary3070 = *£temporary3070
205: parameter £temporary3068 -> £temporary3070, offset 8
206: call function noellipse-noellipse strcpy
207: post call
208: goto 398
209: call header
210: parameter add, offset 6
211: £temporary3072 -> tp = *tp, offset 8
212: £temporary3074 = £temporary3072 -> tp * 2
213: £temporary3075 = longMonthList + £temporary3074
214: £temporary3073 -> £temporary3075 = *£temporary3075
215: parameter £temporary3073 -> £temporary3075, offset 8
216: call function noellipse-noellipse strcpy
217: post call
218: goto 398
219: call header
220: parameter add, offset 6
221: parameter string_2504d2D2502d2D2502d202502d3A2502d3A2502d#, offset 8
222: £temporary3077 -> tp = *tp, offset 10
223: £temporary3078 = 1900 + £temporary3077 -> tp
224: parameter £temporary3078, offset 10
225: £temporary3079 -> tp = *tp, offset 8
226: £temporary3080 = £temporary3079 -> tp + 1
227: parameter £temporary3080, offset 12
228: £temporary3081 -> tp = *tp, offset 6
229: parameter £temporary3081 -> tp, offset 14
230: £temporary3082 -> tp = *tp, offset 4
231: parameter £temporary3082 -> tp, offset 16
232: £temporary3083 -> tp = *tp, offset 2
233: parameter £temporary3083 -> tp, offset 18
234: £temporary3084 -> tp = *tp
235: parameter £temporary3084 -> tp, offset 20
236: call function noellipse-ellipse sprintf, extra 0
237: post call
238: goto 398
239: call header
240: parameter add, offset 6
241: parameter string_2502d#, offset 8
242: £temporary3086 -> tp = *tp, offset 6
243: parameter £temporary3086 -> tp, offset 10
244: call function noellipse-ellipse sprintf, extra 0
245: post call
246: goto 398
247: call header
248: parameter add, offset 6
249: parameter string_2502d#, offset 8
250: £temporary3088 -> tp = *tp, offset 4
251: parameter £temporary3088 -> tp, offset 10
252: call function noellipse-ellipse sprintf, extra 0
253: post call
254: goto 398
255: call header
256: parameter add, offset 6
257: parameter string_2502d#, offset 8
258: £temporary3090 -> tp = *tp, offset 4
259: £temporary3091 = £temporary3090 -> tp % 12
260: parameter £temporary3091, offset 10
261: call function noellipse-ellipse sprintf, extra 0
262: post call
263: goto 398
264: call header
265: parameter add, offset 6
266: parameter string_2503d#, offset 8
267: £temporary3093 -> tp = *tp, offset 14
268: parameter £temporary3093 -> tp, offset 10
269: call function noellipse-ellipse sprintf, extra 0
270: post call
271: goto 398
272: call header
273: parameter add, offset 6
274: parameter string_2502d#, offset 8
275: £temporary3095 -> tp = *tp, offset 8
276: £temporary3096 = £temporary3095 -> tp + 1
277: parameter £temporary3096, offset 10
278: call function noellipse-ellipse sprintf, extra 0
279: post call
280: goto 398
281: call header
282: parameter add, offset 6
283: parameter string_2502d#, offset 8
284: £temporary3098 -> tp = *tp, offset 2
285: parameter £temporary3098 -> tp, offset 10
286: call function noellipse-ellipse sprintf, extra 0
287: post call
288: goto 398
289: call header
290: parameter add, offset 6
291: parameter string_25s#, offset 8
292: £temporary3100 -> tp = *tp, offset 4
293: if £temporary3100 -> tp < 12 goto 295
294: goto 298
295: empty
296: £temporary3105 = string_AM#
297: goto 300
298: empty
299: £temporary3105 = string_PM#
300: empty
301: parameter £temporary3105, offset 10
302: call function noellipse-ellipse sprintf, extra 0
303: post call
304: goto 398
305: call header
306: parameter add, offset 6
307: parameter string_2502d#, offset 8
308: £temporary3107 -> tp = *tp
309: parameter £temporary3107 -> tp, offset 10
310: call function noellipse-ellipse sprintf, extra 0
311: post call
312: goto 398
313: call header
314: parameter add, offset 6
315: parameter string_2502d#, offset 8
316: parameter yearDaySunday, offset 10
317: call function noellipse-ellipse sprintf, extra 0
318: post call
319: goto 398
320: call header
321: parameter add, offset 6
322: parameter string_2502d#, offset 8
323: £temporary3110 -> tp = *tp, offset 12
324: parameter £temporary3110 -> tp, offset 10
325: call function noellipse-ellipse sprintf, extra 0
326: post call
327: goto 398
328: call header
329: parameter add, offset 6
330: parameter string_2502d#, offset 8
331: parameter yearDayMonday, offset 10
332: call function noellipse-ellipse sprintf, extra 0
333: post call
334: goto 398
335: call header
336: parameter add, offset 6
337: parameter string_2504d2D2502d2D2502d#, offset 8
338: £temporary3113 -> tp = *tp, offset 10
339: £temporary3114 = 1900 + £temporary3113 -> tp
340: parameter £temporary3114, offset 10
341: £temporary3115 -> tp = *tp, offset 8
342: £temporary3116 = £temporary3115 -> tp + 1
343: parameter £temporary3116, offset 12
344: £temporary3117 -> tp = *tp, offset 6
345: parameter £temporary3117 -> tp, offset 14
346: call function noellipse-ellipse sprintf, extra 0
347: post call
348: goto 398
349: call header
350: parameter add, offset 6
351: parameter string_2502d3A2502d3A2502d#, offset 8
352: £temporary3119 -> tp = *tp, offset 4
353: parameter £temporary3119 -> tp, offset 10
354: £temporary3120 -> tp = *tp, offset 2
355: parameter £temporary3120 -> tp, offset 12
356: £temporary3121 -> tp = *tp
357: parameter £temporary3121 -> tp, offset 14
358: call function noellipse-ellipse sprintf, extra 0
359: post call
360: goto 398
361: call header
362: parameter add, offset 6
363: parameter string_2502d#, offset 8
364: £temporary3123 -> tp = *tp, offset 10
365: £temporary3124 = £temporary3123 -> tp % 100
366: parameter £temporary3124, offset 10
367: call function noellipse-ellipse sprintf, extra 0
368: post call
369: goto 398
370: call header
371: parameter add, offset 6
372: parameter string_2504d#, offset 8
373: £temporary3126 -> tp = *tp, offset 10
374: £temporary3127 = 1900 + £temporary3126 -> tp
375: parameter £temporary3127, offset 10
376: call function noellipse-ellipse sprintf, extra 0
377: post call
378: goto 398
379: call header
380: parameter add, offset 6
381: parameter string_#, offset 8
382: call function noellipse-noellipse strcpy
383: post call
384: goto 398
385: call header
386: parameter add, offset 6
387: parameter string_25#, offset 8
388: call function noellipse-noellipse strcpy
389: post call
390: goto 398
391: £temporary3131 -> add = *add
392: £temporary3133 = fmt + index
393: £temporary3132 -> £temporary3133 = *£temporary3133
394: £temporary3131 -> add = £temporary3132 -> £temporary3133
395: £temporary3134 -> add = *add, offset 1
396: £temporary3134 -> add = 0
397: goto 398
398: call header
399: parameter s, offset 6
400: call function noellipse-noellipse strlen
401: post call
402: £temporary3135 = return_value
403: call header
404: parameter add, offset 6
405: call function noellipse-noellipse strlen
406: post call
407: £temporary3136 = return_value
408: £temporary3137 = £temporary3135 + £temporary3136
409: if £temporary3137 < smax goto 412
410: goto 418
411: check track map float stack
412: call header
413: parameter s, offset 6
414: parameter add, offset 8
415: call function noellipse-noellipse strcat
416: post call
417: goto 420
418: goto 423
419: goto 420
420: empty
421: index = index + 1
422: goto 139
423: call header
424: parameter s, offset 6
425: call function noellipse-noellipse strlen
426: post call
427: £temporary3140 = return_value
428: return_value = £temporary3140
429: return
430: empty
431: return
432: function end strftime
0: index = 0
1: empty
2: £temporary3225 = source + index
3: £temporary3224 -> £temporary3225 = *£temporary3225
4: if £temporary3224 -> £temporary3225 != 0 goto 7
5: goto 16
6: check track map float stack
7: empty
8: £temporary3229 = target + index
9: £temporary3228 -> £temporary3229 = *£temporary3229
10: £temporary3231 = source + index
11: £temporary3230 -> £temporary3231 = *£temporary3231
12: £temporary3228 -> £temporary3229 = £temporary3230 -> £temporary3231
13: empty
14: index = index + 1
15: goto 1
16: £temporary3233 = target + index
17: £temporary3232 -> £temporary3233 = *£temporary3233
18: £temporary3232 -> £temporary3233 = 0
19: return_value = target
20: return
21: empty
22: return
23: function end strcpy
0: index = 0
1: empty
2: if index < size goto 4
3: goto 18
4: £temporary3236 = source + index
5: £temporary3235 -> £temporary3236 = *£temporary3236
6: if £temporary3235 -> £temporary3236 != 0 goto 9
7: goto 18
8: check track map float stack
9: empty
10: £temporary3241 = target + index
11: £temporary3240 -> £temporary3241 = *£temporary3241
12: £temporary3243 = source + index
13: £temporary3242 -> £temporary3243 = *£temporary3243
14: £temporary3240 -> £temporary3241 = £temporary3242 -> £temporary3243
15: empty
16: index = index + 1
17: goto 1
18: empty
19: if index < size goto 22
20: goto 29
21: check track map float stack
22: empty
23: £temporary3247 = target + index
24: £temporary3246 -> £temporary3247 = *£temporary3247
25: £temporary3246 -> £temporary3247 = 0
26: empty
27: index = index + 1
28: goto 18
29: return_value = target
30: return
31: empty
32: return
33: function end strncpy
0: call header
1: parameter target, offset 6
2: call function noellipse-noellipse strlen
3: post call
4: £temporary3248 = return_value
5: targetLength = £temporary3248
6: index = 0
7: empty
8: £temporary3250 = source + index
9: £temporary3249 -> £temporary3250 = *£temporary3250
10: if £temporary3249 -> £temporary3250 != 0 goto 13
11: goto 23
12: check track map float stack
13: empty
14: £temporary3253 = targetLength + index
15: £temporary3255 = target + £temporary3253
16: £temporary3254 -> £temporary3255 = *£temporary3255
17: £temporary3257 = source + index
18: £temporary3256 -> £temporary3257 = *£temporary3257
19: £temporary3254 -> £temporary3255 = £temporary3256 -> £temporary3257
20: empty
21: index = index + 1
22: goto 7
23: £temporary3258 = targetLength + index
24: £temporary3260 = target + £temporary3258
25: £temporary3259 -> £temporary3260 = *£temporary3260
26: £temporary3259 -> £temporary3260 = 0
27: return_value = target
28: return
29: empty
30: return
31: function end strcat
0: call header
1: parameter target, offset 6
2: call function noellipse-noellipse strlen
3: post call
4: £temporary3262 = return_value
5: targetLength = £temporary3262
6: index = 0
7: empty
8: £temporary3263 = size - 1
9: if index < £temporary3263 goto 11
10: goto 26
11: £temporary3266 = source + index
12: £temporary3265 -> £temporary3266 = *£temporary3266
13: if £temporary3265 -> £temporary3266 != 0 goto 16
14: goto 26
15: check track map float stack
16: empty
17: £temporary3270 = targetLength + index
18: £temporary3272 = target + £temporary3270
19: £temporary3271 -> £temporary3272 = *£temporary3272
20: £temporary3274 = source + index
21: £temporary3273 -> £temporary3274 = *£temporary3274
22: £temporary3271 -> £temporary3272 = £temporary3273 -> £temporary3274
23: empty
24: index = index + 1
25: goto 7
26: £temporary3275 = targetLength + size
27: £temporary3276 = £temporary3275 - 1
28: £temporary3278 = target + £temporary3276
29: £temporary3277 -> £temporary3278 = *£temporary3278
30: £temporary3277 -> £temporary3278 = 0
31: return_value = target
32: return
33: empty
34: return
35: function end strncat
0: index = 0
1: empty
2: goto 4
3: check track map float stack
4: empty
5: £temporary3282 = left + index
6: £temporary3281 -> £temporary3282 = *£temporary3282
7: if £temporary3281 -> £temporary3282 == 0 goto 9
8: goto 17
9: £temporary3285 = right + index
10: £temporary3284 -> £temporary3285 = *£temporary3285
11: if £temporary3284 -> £temporary3285 == 0 goto 14
12: goto 17
13: check track map float stack
14: return_value = 0
15: return
16: goto 57
17: £temporary3289 = left + index
18: £temporary3288 -> £temporary3289 = *£temporary3289
19: if £temporary3288 -> £temporary3289 == 0 goto 22
20: goto 25
21: check track map float stack
22: return_value = -1
23: return
24: goto 57
25: £temporary3292 = right + index
26: £temporary3291 -> £temporary3292 = *£temporary3292
27: if £temporary3291 -> £temporary3292 == 0 goto 30
28: goto 33
29: check track map float stack
30: return_value = 1
31: return
32: goto 57
33: £temporary3295 = left + index
34: £temporary3294 -> £temporary3295 = *£temporary3295
35: £temporary3297 = right + index
36: £temporary3296 -> £temporary3297 = *£temporary3297
37: if £temporary3294 -> £temporary3295 < £temporary3296 -> £temporary3297 goto 40
38: goto 43
39: check track map float stack
40: return_value = -1
41: return
42: goto 57
43: £temporary3300 = left + index
44: £temporary3299 -> £temporary3300 = *£temporary3300
45: £temporary3302 = right + index
46: £temporary3301 -> £temporary3302 = *£temporary3302
47: if £temporary3299 -> £temporary3300 > £temporary3301 -> £temporary3302 goto 50
48: goto 57
49: check track map float stack
50: return_value = 1
51: return
52: goto 57
53: goto 57
54: goto 57
55: goto 57
56: goto 57
57: empty
58: index = index + 1
59: goto 1
60: empty
61: return
62: function end strcmp
0: index = 0
1: empty
2: if index < size goto 5
3: goto 61
4: check track map float stack
5: empty
6: £temporary3308 = left + index
7: £temporary3307 -> £temporary3308 = *£temporary3308
8: if £temporary3307 -> £temporary3308 == 0 goto 10
9: goto 18
10: £temporary3311 = right + index
11: £temporary3310 -> £temporary3311 = *£temporary3311
12: if £temporary3310 -> £temporary3311 == 0 goto 15
13: goto 18
14: check track map float stack
15: return_value = 0
16: return
17: goto 58
18: £temporary3315 = left + index
19: £temporary3314 -> £temporary3315 = *£temporary3315
20: if £temporary3314 -> £temporary3315 == 0 goto 23
21: goto 26
22: check track map float stack
23: return_value = -1
24: return
25: goto 58
26: £temporary3318 = right + index
27: £temporary3317 -> £temporary3318 = *£temporary3318
28: if £temporary3317 -> £temporary3318 == 0 goto 31
29: goto 34
30: check track map float stack
31: return_value = 1
32: return
33: goto 58
34: £temporary3321 = left + index
35: £temporary3320 -> £temporary3321 = *£temporary3321
36: £temporary3323 = right + index
37: £temporary3322 -> £temporary3323 = *£temporary3323
38: if £temporary3320 -> £temporary3321 < £temporary3322 -> £temporary3323 goto 41
39: goto 44
40: check track map float stack
41: return_value = -1
42: return
43: goto 58
44: £temporary3326 = left + index
45: £temporary3325 -> £temporary3326 = *£temporary3326
46: £temporary3328 = right + index
47: £temporary3327 -> £temporary3328 = *£temporary3328
48: if £temporary3325 -> £temporary3326 > £temporary3327 -> £temporary3328 goto 51
49: goto 58
50: check track map float stack
51: return_value = 1
52: return
53: goto 58
54: goto 58
55: goto 58
56: goto 58
57: goto 58
58: empty
59: index = index + 1
60: goto 1
61: return_value = 0
62: return
63: empty
64: return
65: function end strncmp
0: £temporary3330 = int_to_int i (Signed_Int -> Signed_Char)
1: c = £temporary3330
2: index = 0
3: empty
4: £temporary3332 = text + index
5: £temporary3331 -> £temporary3332 = *£temporary3332
6: if £temporary3331 -> £temporary3332 != 0 goto 9
7: goto 24
8: check track map float stack
9: empty
10: £temporary3336 = text + index
11: £temporary3335 -> £temporary3336 = *£temporary3336
12: if £temporary3335 -> £temporary3336 == c goto 15
13: goto 21
14: check track map float stack
15: £temporary3339 = text + index
16: £temporary3338 -> £temporary3339 = *£temporary3339
17: £temporary3340 = &£temporary3338 -> £temporary3339
18: return_value = £temporary3340
19: return
20: goto 21
21: empty
22: index = index + 1
23: goto 3
24: return_value = 0
25: return
26: empty
27: return
28: function end strchr
0: result = 0
1: £temporary3341 = int_to_int i (Signed_Int -> Signed_Char)
2: c = £temporary3341
3: index = 0
4: empty
5: £temporary3343 = text + index
6: £temporary3342 -> £temporary3343 = *£temporary3343
7: if £temporary3342 -> £temporary3343 != 0 goto 10
8: goto 24
9: check track map float stack
10: empty
11: £temporary3347 = text + index
12: £temporary3346 -> £temporary3347 = *£temporary3347
13: if £temporary3346 -> £temporary3347 == c goto 16
14: goto 21
15: check track map float stack
16: £temporary3350 = text + index
17: £temporary3349 -> £temporary3350 = *£temporary3350
18: £temporary3351 = &£temporary3349 -> £temporary3350
19: result = £temporary3351
20: goto 21
21: empty
22: index = index + 1
23: goto 4
24: return_value = result
25: return
26: empty
27: return
28: function end strrchr
0: index = 0
1: empty
2: £temporary3353 = mainString + index
3: £temporary3352 -> £temporary3353 = *£temporary3353
4: if £temporary3352 -> £temporary3353 != 0 goto 7
5: goto 26
6: check track map float stack
7: empty
8: call header
9: parameter charSet, offset 6
10: £temporary3357 = mainString + index
11: £temporary3356 -> £temporary3357 = *£temporary3357
12: £temporary3358 = int_to_int £temporary3356 -> £temporary3357 (Signed_Char -> Signed_Int)
13: parameter £temporary3358, offset 8
14: call function noellipse-noellipse strchr
15: post call
16: £temporary3359 = return_value
17: if £temporary3359 == 0 goto 20
18: goto 23
19: check track map float stack
20: return_value = index
21: return
22: goto 23
23: empty
24: index = index + 1
25: goto 1
26: return_value = -1
27: return
28: empty
29: return
30: function end strspn
0: index = 0
1: empty
2: £temporary3364 = mainString + index
3: £temporary3363 -> £temporary3364 = *£temporary3364
4: if £temporary3363 -> £temporary3364 != 0 goto 7
5: goto 26
6: check track map float stack
7: empty
8: call header
9: parameter charSet, offset 6
10: £temporary3368 = mainString + index
11: £temporary3367 -> £temporary3368 = *£temporary3368
12: £temporary3369 = int_to_int £temporary3367 -> £temporary3368 (Signed_Char -> Signed_Int)
13: parameter £temporary3369, offset 8
14: call function noellipse-noellipse strchr
15: post call
16: £temporary3370 = return_value
17: if £temporary3370 != 0 goto 20
18: goto 23
19: check track map float stack
20: return_value = index
21: return
22: goto 23
23: empty
24: index = index + 1
25: goto 1
26: return_value = -1
27: return
28: empty
29: return
30: function end strcspn
0: index = 0
1: empty
2: £temporary3375 = mainString + index
3: £temporary3374 -> £temporary3375 = *£temporary3375
4: if £temporary3374 -> £temporary3375 != 0 goto 7
5: goto 29
6: check track map float stack
7: empty
8: call header
9: parameter charSet, offset 6
10: £temporary3379 = mainString + index
11: £temporary3378 -> £temporary3379 = *£temporary3379
12: £temporary3380 = int_to_int £temporary3378 -> £temporary3379 (Signed_Char -> Signed_Int)
13: parameter £temporary3380, offset 8
14: call function noellipse-noellipse strchr
15: post call
16: £temporary3381 = return_value
17: if £temporary3381 != 0 goto 20
18: goto 26
19: check track map float stack
20: £temporary3384 = mainString + index
21: £temporary3383 -> £temporary3384 = *£temporary3384
22: £temporary3385 = &£temporary3383 -> £temporary3384
23: return_value = £temporary3385
24: return
25: goto 26
26: empty
27: index = index + 1
28: goto 1
29: return_value = 0
30: return
31: empty
32: return
33: function end strpbrk
0: index = 0
1: empty
2: £temporary3389 = mainString + index
3: £temporary3388 -> £temporary3389 = *£temporary3389
4: if £temporary3388 -> £temporary3389 != 0 goto 7
5: goto 27
6: check track map float stack
7: empty
8: call header
9: £temporary3392 = mainString + index
10: parameter £temporary3392, offset 6
11: parameter subString, offset 8
12: call function noellipse-noellipse strcmp
13: post call
14: £temporary3393 = return_value
15: if £temporary3393 == 0 goto 18
16: goto 24
17: check track map float stack
18: £temporary3396 = mainString + index
19: £temporary3395 -> £temporary3396 = *£temporary3396
20: £temporary3397 = &£temporary3395 -> £temporary3396
21: return_value = £temporary3397
22: return
23: goto 24
24: empty
25: index = index + 1
26: goto 1
27: return_value = 0
28: return
29: empty
30: return
31: function end strstr
0: index = 0
1: empty
2: £temporary3401 = string + index
3: £temporary3400 -> £temporary3401 = *£temporary3401
4: if £temporary3400 -> £temporary3401 != 0 goto 7
5: goto 11
6: check track map float stack
7: empty
8: empty
9: index = index + 1
10: goto 1
11: return_value = index
12: return
13: empty
14: return
15: function end strlen
0: call header
1: call function noellipse-noellipse localeconv
2: post call
3: £temporary3404 = return_value
4: localeConvPtr = £temporary3404
5: if localeConvPtr != 0 goto 7
6: goto 11
7: empty
8: £temporary3406 -> localeConvPtr = *localeConvPtr, offset 16
9: £temporary3410 = £temporary3406 -> localeConvPtr
10: goto 13
11: empty
12: £temporary3410 = 0
13: empty
14: messageList = £temporary3410
15: if messageList != 0 goto 17
16: goto 20
17: empty
18: £temporary3415 = messageList
19: goto 22
20: empty
21: £temporary3415 = enMessageList
22: empty
23: messageList = £temporary3415
24: £temporary3417 = errno * 2
25: £temporary3418 = messageList + £temporary3417
26: £temporary3416 -> £temporary3418 = *£temporary3418
27: return_value = £temporary3416 -> £temporary3418
28: return
29: empty
30: return
31: function end strerror
0: if string != 0 goto 3
1: goto 51
2: check track map float stack
3: £temporary3420 -> string = *string
4: if £temporary3420 -> string == 0 goto 7
5: goto 10
6: check track map float stack
7: return_value = 0
8: return
9: goto 10
10: index = 0
11: empty
12: £temporary3423 = string + index
13: £temporary3422 -> £temporary3423 = *£temporary3423
14: if £temporary3422 -> £temporary3423 != 0 goto 17
15: goto 44
16: check track map float stack
17: empty
18: call header
19: parameter charSet, offset 6
20: £temporary3427 = string + index
21: £temporary3426 -> £temporary3427 = *£temporary3427
22: £temporary3428 = int_to_int £temporary3426 -> £temporary3427 (Signed_Char -> Signed_Int)
23: parameter £temporary3428, offset 8
24: call function noellipse-noellipse strchr
25: post call
26: £temporary3429 = return_value
27: if £temporary3429 != 0 goto 30
28: goto 41
29: check track map float stack
30: £temporary3432 = string + index
31: £temporary3431 -> £temporary3432 = *£temporary3432
32: £temporary3431 -> £temporary3432 = 0
33: £temporary3433 = index + 1
34: £temporary3435 = string + £temporary3433
35: £temporary3434 -> £temporary3435 = *£temporary3435
36: £temporary3436 = &£temporary3434 -> £temporary3435
37: token = £temporary3436
38: return_value = string
39: return
40: goto 41
41: empty
42: index = index + 1
43: goto 11
44: £temporary3438 = string + index
45: £temporary3437 -> £temporary3438 = *£temporary3438
46: £temporary3439 = &£temporary3437 -> £temporary3438
47: token = £temporary3439
48: return_value = string
49: return
50: goto 107
51: if token == 0 goto 54
52: goto 57
53: check track map float stack
54: return_value = 0
55: return
56: goto 107
57: if (token,0) == 0 goto 60
58: goto 63
59: check track map float stack
60: return_value = 0
61: return
62: goto 63
63: index = 0
64: empty
65: £temporary3444 = token + index
66: £temporary3443 -> £temporary3444 = *£temporary3444
67: if £temporary3443 -> £temporary3444 != 0 goto 70
68: goto 98
69: check track map float stack
70: empty
71: call header
72: parameter charSet, offset 6
73: £temporary3448 = token + index
74: £temporary3447 -> £temporary3448 = *£temporary3448
75: £temporary3449 = int_to_int £temporary3447 -> £temporary3448 (Signed_Char -> Signed_Int)
76: parameter £temporary3449, offset 8
77: call function noellipse-noellipse strchr
78: post call
79: £temporary3450 = return_value
80: if £temporary3450 != 0 goto 83
81: goto 95
82: check track map float stack
83: tokenStart2 = token
84: £temporary3453 = token + index
85: £temporary3452 -> £temporary3453 = *£temporary3453
86: £temporary3452 -> £temporary3453 = 0
87: £temporary3454 = index + 1
88: £temporary3456 = token + £temporary3454
89: £temporary3455 -> £temporary3456 = *£temporary3456
90: £temporary3457 = &£temporary3455 -> £temporary3456
91: token = £temporary3457
92: return_value = tokenStart2
93: return
94: goto 95
95: empty
96: index = index + 1
97: goto 64
98: tokenStart = token
99: £temporary3459 = token + index
100: £temporary3458 -> £temporary3459 = *£temporary3459
101: £temporary3460 = &£temporary3458 -> £temporary3459
102: token = £temporary3460
103: return_value = tokenStart
104: return
105: goto 107
106: goto 107
107: empty
108: return
109: function end strtok
0: £temporary3465 = int_to_int target (Pointer -> Pointer)
1: charTarget = £temporary3465
2: £temporary3466 = int_to_int source (Pointer -> Pointer)
3: charSource = £temporary3466
4: index = 0
5: empty
6: if index < size goto 9
7: goto 18
8: check track map float stack
9: empty
10: £temporary3470 = charTarget + index
11: £temporary3469 -> £temporary3470 = *£temporary3470
12: £temporary3472 = charSource + index
13: £temporary3471 -> £temporary3472 = *£temporary3472
14: £temporary3469 -> £temporary3470 = £temporary3471 -> £temporary3472
15: empty
16: index = index + 1
17: goto 5
18: £temporary3473 = int_to_int target (Pointer -> Pointer)
19: return_value = £temporary3473
20: return
21: empty
22: return
23: function end memcpy
0: £temporary3474 = int_to_int target (Pointer -> Pointer)
1: charTarget = £temporary3474
2: £temporary3475 = int_to_int source (Pointer -> Pointer)
3: charSource = £temporary3475
4: if source < target goto 7
5: goto 23
6: check track map float stack
7: £temporary3477 = size - 1
8: index = £temporary3477
9: empty
10: if index >= 0 goto 13
11: goto 38
12: check track map float stack
13: empty
14: £temporary3481 = charTarget + index
15: £temporary3480 -> £temporary3481 = *£temporary3481
16: £temporary3483 = charSource + index
17: £temporary3482 -> £temporary3483 = *£temporary3483
18: £temporary3480 -> £temporary3481 = £temporary3482 -> £temporary3483
19: empty
20: index = index - 1
21: goto 9
22: goto 38
23: index = 0
24: empty
25: if index < size goto 28
26: goto 38
27: check track map float stack
28: empty
29: £temporary3487 = charTarget + index
30: £temporary3486 -> £temporary3487 = *£temporary3487
31: £temporary3489 = charSource + index
32: £temporary3488 -> £temporary3489 = *£temporary3489
33: £temporary3486 -> £temporary3487 = £temporary3488 -> £temporary3489
34: empty
35: index = index + 1
36: goto 24
37: goto 38
38: £temporary3490 = int_to_int target (Pointer -> Pointer)
39: return_value = £temporary3490
40: return
41: empty
42: return
43: function end memmove
0: £temporary3491 = int_to_int left (Pointer -> Pointer)
1: charLeft = £temporary3491
2: £temporary3492 = int_to_int right (Pointer -> Pointer)
3: charRight = £temporary3492
4: index = 0
5: empty
6: if index < size goto 9
7: goto 34
8: check track map float stack
9: empty
10: £temporary3496 = charLeft + index
11: £temporary3495 -> £temporary3496 = *£temporary3496
12: £temporary3498 = charRight + index
13: £temporary3497 -> £temporary3498 = *£temporary3498
14: if £temporary3495 -> £temporary3496 < £temporary3497 -> £temporary3498 goto 17
15: goto 20
16: check track map float stack
17: return_value = -1
18: return
19: goto 31
20: £temporary3501 = charLeft + index
21: £temporary3500 -> £temporary3501 = *£temporary3501
22: £temporary3503 = charRight + index
23: £temporary3502 -> £temporary3503 = *£temporary3503
24: if £temporary3500 -> £temporary3501 > £temporary3502 -> £temporary3503 goto 27
25: goto 31
26: check track map float stack
27: return_value = 1
28: return
29: goto 31
30: goto 31
31: empty
32: index = index + 1
33: goto 5
34: return_value = 0
35: return
36: empty
37: return
38: function end memcmp
0: £temporary3505 = int_to_int block (Pointer -> Pointer)
1: charBlock = £temporary3505
2: £temporary3506 = int_to_int i (Signed_Int -> Signed_Char)
3: c = £temporary3506
4: index = 0
5: empty
6: if index < size goto 9
7: goto 25
8: check track map float stack
9: empty
10: £temporary3510 = charBlock + index
11: £temporary3509 -> £temporary3510 = *£temporary3510
12: if £temporary3509 -> £temporary3510 == c goto 15
13: goto 22
14: check track map float stack
15: £temporary3513 = charBlock + index
16: £temporary3512 -> £temporary3513 = *£temporary3513
17: £temporary3514 = &£temporary3512 -> £temporary3513
18: £temporary3515 = int_to_int £temporary3514 (Pointer -> Pointer)
19: return_value = £temporary3515
20: return
21: goto 22
22: empty
23: index = index + 1
24: goto 5
25: return_value = 0
26: return
27: empty
28: return
29: function end memchr
0: £temporary3516 = int_to_int block (Pointer -> Pointer)
1: charBlock = £temporary3516
2: £temporary3517 = int_to_int i (Signed_Int -> Signed_Char)
3: c = £temporary3517
4: index = 0
5: empty
6: if index < size goto 9
7: goto 16
8: check track map float stack
9: empty
10: £temporary3521 = charBlock + index
11: £temporary3520 -> £temporary3521 = *£temporary3521
12: £temporary3520 -> £temporary3521 = c
13: empty
14: index = index + 1
15: goto 5
16: return_value = block
17: return
18: empty
19: return
20: function end memset
0: call header
1: parameter string_3C258i3E203C252B8i3E203C25208i3E203C252D8i3E203C252B2D8i3E203C252D2B8i3E203C25202D8i3E203C252D208i3E0A#, offset 6
2: parameter 123, offset 8
3: parameter 123, offset 10
4: parameter 123, offset 12
5: parameter 123, offset 14
6: parameter 123, offset 16
7: parameter 123, offset 18
8: parameter 123, offset 20
9: parameter 123, offset 22
10: call function noellipse-ellipse printf, extra 0
11: post call
12: call header
13: parameter string_3C258i3E203C252B8i3E203C25208i3E203C252D8i3E203C252B2D8i3E203C252D2B8i3E203C25202D8i3E203C252D208i3E0A#, offset 6
14: parameter -123, offset 8
15: parameter -123, offset 10
16: parameter -123, offset 12
17: parameter -123, offset 14
18: parameter -123, offset 16
19: parameter -123, offset 18
20: parameter -123, offset 20
21: parameter -123, offset 22
22: call function noellipse-ellipse printf, extra 0
23: post call
24: call header
25: parameter string_3C2508i3E203C252B08i3E203C252008i3E203C250208i3E0A#, offset 6
26: parameter 123, offset 8
27: parameter 123, offset 10
28: parameter 123, offset 12
29: parameter 123, offset 14
30: call function noellipse-ellipse printf, extra 0
31: post call
32: call header
33: parameter string_3C2508i3E203C252B08i3E203C252008i3E203C250208i3E0A#, offset 6
34: parameter -123, offset 8
35: parameter -123, offset 10
36: parameter -123, offset 12
37: parameter -123, offset 14
38: call function noellipse-ellipse printf, extra 0
39: post call
40: call header
41: parameter string_3C25122E3f3E203C252B122E3f3E203C2520122E3f3E203C252D122E3f3E203C252B2D122E3f3E203C252D2B122E3f3E203C25202D122E3f3E203C252D20122E3f3E0A#, offset 6
42: push float 123.456
43: parameter 123.456, offset 8
44: push float 123.456
45: parameter 123.456, offset 16
46: push float 123.456
47: parameter 123.456, offset 24
48: push float 123.456
49: parameter 123.456, offset 32
50: push float 123.456
51: parameter 123.456, offset 40
52: push float 123.456
53: parameter 123.456, offset 48
54: push float 123.456
55: parameter 123.456, offset 56
56: push float 123.456
57: parameter 123.456, offset 64
58: call function noellipse-ellipse printf, extra 0
59: post call
60: call header
61: parameter string_3C25122E3f3E203C252B122E3f3E203C2520122E3f3E203C252D122E3f3E203C252B2D122E3f3E203C252D2B122E3f3E203C25202D122E3f3E203C252D20122E3f3E0A#, offset 6
62: push float -123.456
63: parameter -123.456, offset 8
64: push float -123.456
65: parameter -123.456, offset 16
66: push float -123.456
67: parameter -123.456, offset 24
68: push float -123.456
69: parameter -123.456, offset 32
70: push float -123.456
71: parameter -123.456, offset 40
72: push float -123.456
73: parameter -123.456, offset 48
74: push float -123.456
75: parameter -123.456, offset 56
76: push float -123.456
77: parameter -123.456, offset 64
78: call function noellipse-ellipse printf, extra 0
79: post call
80: call header
81: parameter string_3C250122E3f3E203C252B0122E3f3E203C25200122E3f3E203C25020122E3f3E0A#, offset 6
82: push float 123.456
83: parameter 123.456, offset 8
84: push float 123.456
85: parameter 123.456, offset 16
86: push float 123.456
87: parameter 123.456, offset 24
88: push float 123.456
89: parameter 123.456, offset 32
90: call function noellipse-ellipse printf, extra 0
91: post call
92: call header
93: parameter string_3C250122E3f3E203C252B0122E3f3E203C25200122E3f3E203C25020122E3f3E0A#, offset 6
94: push float -123.456
95: parameter -123.456, offset 8
96: push float -123.456
97: parameter -123.456, offset 16
98: push float -123.456
99: parameter -123.456, offset 24
100: push float -123.456
101: parameter -123.456, offset 32
102: call function noellipse-ellipse printf, extra 0
103: post call
104: empty
105: return
106: function end print_test
0: call header
1: parameter string_ascii2025i0A#, offset 6
2: £temporary3586 = int_to_int c (Signed_Char -> Signed_Int)
3: parameter £temporary3586, offset 8
4: call function noellipse-ellipse printf, extra 0
5: post call
6: call header
7: parameter string_islower282725c2729203D2025s0A#, offset 6
8: £temporary3588 = int_to_int c (Signed_Char -> Signed_Int)
9: parameter £temporary3588, offset 8
10: call header
11: £temporary3589 = int_to_int c (Signed_Char -> Signed_Int)
12: parameter £temporary3589, offset 16
13: call function noellipse-noellipse islower
14: post call
15: £temporary3590 = return_value
16: if £temporary3590 != 0 goto 18
17: goto 21
18: empty
19: £temporary3595 = string_Yes#
20: goto 23
21: empty
22: £temporary3595 = string_No#
23: empty
24: parameter £temporary3595, offset 10
25: call function noellipse-ellipse printf, extra 0
26: post call
27: call header
28: parameter string_isupper282725c2729203D2025s0A#, offset 6
29: £temporary3597 = int_to_int c (Signed_Char -> Signed_Int)
30: parameter £temporary3597, offset 8
31: call header
32: £temporary3598 = int_to_int c (Signed_Char -> Signed_Int)
33: parameter £temporary3598, offset 16
34: call function noellipse-noellipse isupper
35: post call
36: £temporary3599 = return_value
37: if £temporary3599 != 0 goto 39
38: goto 42
39: empty
40: £temporary3604 = string_Yes#
41: goto 44
42: empty
43: £temporary3604 = string_No#
44: empty
45: parameter £temporary3604, offset 10
46: call function noellipse-ellipse printf, extra 0
47: post call
48: call header
49: parameter string_isalpha282725c2729203D2025s0A#, offset 6
50: £temporary3606 = int_to_int c (Signed_Char -> Signed_Int)
51: parameter £temporary3606, offset 8
52: call header
53: £temporary3607 = int_to_int c (Signed_Char -> Signed_Int)
54: parameter £temporary3607, offset 16
55: call function noellipse-noellipse isalpha
56: post call
57: £temporary3608 = return_value
58: if £temporary3608 != 0 goto 60
59: goto 63
60: empty
61: £temporary3613 = string_Yes#
62: goto 65
63: empty
64: £temporary3613 = string_No#
65: empty
66: parameter £temporary3613, offset 10
67: call function noellipse-ellipse printf, extra 0
68: post call
69: call header
70: parameter string_isdigit282725c2729203D2025s0A#, offset 6
71: £temporary3615 = int_to_int c (Signed_Char -> Signed_Int)
72: parameter £temporary3615, offset 8
73: call header
74: £temporary3616 = int_to_int c (Signed_Char -> Signed_Int)
75: parameter £temporary3616, offset 16
76: call function noellipse-noellipse isdigit
77: post call
78: £temporary3617 = return_value
79: if £temporary3617 != 0 goto 81
80: goto 84
81: empty
82: £temporary3622 = string_Yes#
83: goto 86
84: empty
85: £temporary3622 = string_No#
86: empty
87: parameter £temporary3622, offset 10
88: call function noellipse-ellipse printf, extra 0
89: post call
90: call header
91: parameter string_isalnum282725c2729203D2025s0A#, offset 6
92: £temporary3624 = int_to_int c (Signed_Char -> Signed_Int)
93: parameter £temporary3624, offset 8
94: call header
95: £temporary3625 = int_to_int c (Signed_Char -> Signed_Int)
96: parameter £temporary3625, offset 16
97: call function noellipse-noellipse isalnum
98: post call
99: £temporary3626 = return_value
100: if £temporary3626 != 0 goto 102
101: goto 105
102: empty
103: £temporary3631 = string_Yes#
104: goto 107
105: empty
106: £temporary3631 = string_No#
107: empty
108: parameter £temporary3631, offset 10
109: call function noellipse-ellipse printf, extra 0
110: post call
111: call header
112: parameter string_isxdigit282725c2729203D2025s0A#, offset 6
113: £temporary3633 = int_to_int c (Signed_Char -> Signed_Int)
114: parameter £temporary3633, offset 8
115: call header
116: £temporary3634 = int_to_int c (Signed_Char -> Signed_Int)
117: parameter £temporary3634, offset 16
118: call function noellipse-noellipse isxdigit
119: post call
120: £temporary3635 = return_value
121: if £temporary3635 != 0 goto 123
122: goto 126
123: empty
124: £temporary3640 = string_Yes#
125: goto 128
126: empty
127: £temporary3640 = string_No#
128: empty
129: parameter £temporary3640, offset 10
130: call function noellipse-ellipse printf, extra 0
131: post call
132: call header
133: parameter string_isgraph282725c2729203D2025s0A#, offset 6
134: £temporary3642 = int_to_int c (Signed_Char -> Signed_Int)
135: parameter £temporary3642, offset 8
136: call header
137: £temporary3643 = int_to_int c (Signed_Char -> Signed_Int)
138: parameter £temporary3643, offset 16
139: call function noellipse-noellipse isgraph
140: post call
141: £temporary3644 = return_value
142: if £temporary3644 != 0 goto 144
143: goto 147
144: empty
145: £temporary3649 = string_Yes#
146: goto 149
147: empty
148: £temporary3649 = string_No#
149: empty
150: parameter £temporary3649, offset 10
151: call function noellipse-ellipse printf, extra 0
152: post call
153: call header
154: parameter string_isprint282725c2729203D2025s0A#, offset 6
155: £temporary3651 = int_to_int c (Signed_Char -> Signed_Int)
156: parameter £temporary3651, offset 8
157: call header
158: £temporary3652 = int_to_int c (Signed_Char -> Signed_Int)
159: parameter £temporary3652, offset 16
160: call function noellipse-noellipse isprint
161: post call
162: £temporary3653 = return_value
163: if £temporary3653 != 0 goto 165
164: goto 168
165: empty
166: £temporary3658 = string_Yes#
167: goto 170
168: empty
169: £temporary3658 = string_No#
170: empty
171: parameter £temporary3658, offset 10
172: call function noellipse-ellipse printf, extra 0
173: post call
174: call header
175: parameter string_ispunct282725c2729203D2025s0A#, offset 6
176: £temporary3660 = int_to_int c (Signed_Char -> Signed_Int)
177: parameter £temporary3660, offset 8
178: call header
179: £temporary3661 = int_to_int c (Signed_Char -> Signed_Int)
180: parameter £temporary3661, offset 16
181: call function noellipse-noellipse ispunct
182: post call
183: £temporary3662 = return_value
184: if £temporary3662 != 0 goto 186
185: goto 189
186: empty
187: £temporary3667 = string_Yes#
188: goto 191
189: empty
190: £temporary3667 = string_No#
191: empty
192: parameter £temporary3667, offset 10
193: call function noellipse-ellipse printf, extra 0
194: post call
195: call header
196: parameter string_iscntrl282725c2729203D2025s0A#, offset 6
197: £temporary3669 = int_to_int c (Signed_Char -> Signed_Int)
198: parameter £temporary3669, offset 8
199: call header
200: £temporary3670 = int_to_int c (Signed_Char -> Signed_Int)
201: parameter £temporary3670, offset 16
202: call function noellipse-noellipse iscntrl
203: post call
204: £temporary3671 = return_value
205: if £temporary3671 != 0 goto 207
206: goto 210
207: empty
208: £temporary3676 = string_Yes#
209: goto 212
210: empty
211: £temporary3676 = string_No#
212: empty
213: parameter £temporary3676, offset 10
214: call function noellipse-ellipse printf, extra 0
215: post call
216: call header
217: parameter string_isspace282725c2729203D2025s0A#, offset 6
218: £temporary3678 = int_to_int c (Signed_Char -> Signed_Int)
219: parameter £temporary3678, offset 8
220: call header
221: £temporary3679 = int_to_int c (Signed_Char -> Signed_Int)
222: parameter £temporary3679, offset 16
223: call function noellipse-noellipse isspace
224: post call
225: £temporary3680 = return_value
226: if £temporary3680 != 0 goto 228
227: goto 231
228: empty
229: £temporary3685 = string_Yes#
230: goto 233
231: empty
232: £temporary3685 = string_No#
233: empty
234: parameter £temporary3685, offset 10
235: call function noellipse-ellipse printf, extra 0
236: post call
237: call header
238: parameter string_tolower282725c2729203D202725c270A#, offset 6
239: £temporary3687 = int_to_int c (Signed_Char -> Signed_Int)
240: parameter £temporary3687, offset 8
241: call header
242: £temporary3688 = int_to_int c (Signed_Char -> Signed_Int)
243: parameter £temporary3688, offset 16
244: call function noellipse-noellipse tolower
245: post call
246: £temporary3689 = return_value
247: £temporary3690 = int_to_int £temporary3689 (Signed_Int -> Signed_Char)
248: £temporary3691 = int_to_int £temporary3690 (Signed_Char -> Signed_Int)
249: parameter £temporary3691, offset 10
250: call function noellipse-ellipse printf, extra 0
251: post call
252: call header
253: parameter string_toupper282725c2729203D202725c270A0A#, offset 6
254: £temporary3693 = int_to_int c (Signed_Char -> Signed_Int)
255: parameter £temporary3693, offset 8
256: call header
257: £temporary3694 = int_to_int c (Signed_Char -> Signed_Int)
258: parameter £temporary3694, offset 16
259: call function noellipse-noellipse toupper
260: post call
261: £temporary3695 = return_value
262: £temporary3696 = int_to_int £temporary3695 (Signed_Int -> Signed_Char)
263: £temporary3697 = int_to_int £temporary3696 (Signed_Char -> Signed_Int)
264: parameter £temporary3697, offset 10
265: call function noellipse-ellipse printf, extra 0
266: post call
267: empty
268: return
269: function end character_test
0: empty
1: return
2: function end float_test
0: call header
1: parameter string_CHAR_BIT203D2025i0A#, offset 6
2: parameter 8, offset 8
3: call function noellipse-ellipse printf, extra 0
4: post call
5: call header
6: parameter string_CHAR_MIN203D2025i0A0A#, offset 6
7: parameter -128, offset 8
8: call function noellipse-ellipse printf, extra 0
9: post call
10: call header
11: parameter string_CHAR_MAX203D2025i0A#, offset 6
12: parameter 127, offset 8
13: call function noellipse-ellipse printf, extra 0
14: post call
15: call header
16: parameter string_UCHAR_MAX203D2025u0A0A#, offset 6
17: parameter 255, offset 8
18: call function noellipse-ellipse printf, extra 0
19: post call
20: call header
21: parameter string_SHRT_MIN203D2025i0A#, offset 6
22: parameter -128, offset 8
23: call function noellipse-ellipse printf, extra 0
24: post call
25: call header
26: parameter string_SHRT_MAX203D2025i0A#, offset 6
27: parameter 127, offset 8
28: call function noellipse-ellipse printf, extra 0
29: post call
30: call header
31: parameter string_USHRT_MAX203D2025u0A0A#, offset 6
32: parameter 255, offset 8
33: call function noellipse-ellipse printf, extra 0
34: post call
35: call header
36: parameter string_INT_MIN203D2025i0A#, offset 6
37: parameter -32768, offset 8
38: call function noellipse-ellipse printf, extra 0
39: post call
40: call header
41: parameter string_INT_MAX203D2025i0A#, offset 6
42: parameter 32767, offset 8
43: call function noellipse-ellipse printf, extra 0
44: post call
45: call header
46: parameter string_UINT_MAX203D2025u0A0A#, offset 6
47: parameter 65535, offset 8
48: call function noellipse-ellipse printf, extra 0
49: post call
50: call header
51: parameter string_LONG_MIN203D2025li0A#, offset 6
52: parameter -2147483648, offset 8
53: call function noellipse-ellipse printf, extra 0
54: post call
55: call header
56: parameter string_LONG_MAX203D2025li0A#, offset 6
57: parameter 2147483647, offset 8
58: call function noellipse-ellipse printf, extra 0
59: post call
60: call header
61: parameter string_ULONG_MAX203D2025lu0A#, offset 6
62: parameter 4294967295, offset 8
63: call function noellipse-ellipse printf, extra 0
64: post call
65: call header
66: parameter string_ULONG_MAX203D2025lx0A#, offset 6
67: parameter 4294967295, offset 8
68: call function noellipse-ellipse printf, extra 0
69: post call
70: call header
71: parameter string_ULONG_MAX203D2025lX0A#, offset 6
72: parameter 4294967295, offset 8
73: call function noellipse-ellipse printf, extra 0
74: post call
75: empty
76: return
77: function end limits_test
0: n = 0
1: call header
2: parameter string_Please20write20a20number2028not20620or207293A20#, offset 6
3: call function noellipse-ellipse printf, extra 0
4: post call
5: call header
6: parameter string_25i#, offset 6
7: £temporary3799 = &n
8: parameter £temporary3799, offset 8
9: call function noellipse-ellipse scanf, extra 0
10: post call
11: if n != 6 goto 26
12: goto 14
13: check track map float stack
14: call header
15: parameter stderr, offset 6
16: parameter string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#, offset 8
17: parameter string_n20213D206#, offset 10
18: parameter string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CAssertTest2Ec#, offset 12
19: parameter 10, offset 14
20: call function noellipse-ellipse fprintf, extra 0
21: post call
22: call header
23: call function noellipse-noellipse abort
24: post call
25: goto 26
26: empty
27: call header
28: parameter n, offset 6
29: call function noellipse-noellipse assert_test2
30: post call
31: empty
32: return
33: function end assert_testX
0: if n != 7 goto 15
1: goto 3
2: check track map float stack
3: call header
4: parameter stderr, offset 6
5: parameter string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#, offset 8
6: parameter string_n20213D207#, offset 10
7: parameter string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CAssertTest2Ec#, offset 12
8: parameter 15, offset 14
9: call function noellipse-ellipse fprintf, extra 0
10: post call
11: call header
12: call function noellipse-noellipse abort
13: post call
14: goto 15
15: empty
16: empty
17: return
18: function end assert_test2X
0: s = string_Hello2C20World21#
1: call header
2: parameter string_strlen282225s2229203D2025i0A#, offset 6
3: parameter s, offset 8
4: call header
5: parameter s, offset 16
6: call function noellipse-noellipse strlen
7: post call
8: £temporary3825 = return_value
9: parameter £temporary3825, offset 10
10: call function noellipse-ellipse printf, extra 0
11: post call
12: call header
13: parameter t, offset 6
14: parameter s, offset 8
15: call function noellipse-noellipse strcpy
16: post call
17: call header
18: parameter u, offset 6
19: parameter s, offset 8
20: parameter 5, offset 10
21: call function noellipse-noellipse strncpy
22: post call
23: £temporary3829 -> u = *u, offset 5
24: £temporary3829 -> u = 0
25: call header
26: parameter string_t203D202225s222C20u203D202225s220A#, offset 6
27: parameter t, offset 8
28: parameter u, offset 10
29: call function noellipse-ellipse printf, extra 0
30: post call
31: call header
32: parameter t, offset 6
33: parameter string_abc#, offset 8
34: call function noellipse-noellipse strcat
35: post call
36: call header
37: parameter u, offset 6
38: call function noellipse-noellipse strlen
39: post call
40: £temporary3832 = return_value
41: i = £temporary3832
42: call header
43: parameter u, offset 6
44: parameter string_abc#, offset 8
45: parameter 2, offset 10
46: call function noellipse-noellipse strncat
47: post call
48: £temporary3834 = i + 2
49: £temporary3836 = u + £temporary3834
50: £temporary3835 -> £temporary3836 = *£temporary3836
51: £temporary3835 -> £temporary3836 = 0
52: call header
53: parameter string_t203D202225s222C20u203D202225s220A#, offset 6
54: parameter t, offset 8
55: parameter u, offset 10
56: call function noellipse-ellipse printf, extra 0
57: post call
58: call header
59: parameter string_strcmp28s2C20u29203D2025i0A#, offset 6
60: call header
61: parameter s, offset 14
62: parameter u, offset 16
63: call function noellipse-noellipse strcmp
64: post call
65: £temporary3838 = return_value
66: parameter £temporary3838, offset 8
67: call function noellipse-ellipse printf, extra 0
68: post call
69: call header
70: parameter string_strncmp28s2C20u2C20229203D2025i0A#, offset 6
71: call header
72: parameter s, offset 14
73: parameter u, offset 16
74: parameter 2, offset 18
75: call function noellipse-noellipse strncmp
76: post call
77: £temporary3840 = return_value
78: parameter £temporary3840, offset 8
79: call function noellipse-ellipse printf, extra 0
80: post call
81: call header
82: parameter s, offset 6
83: parameter 108, offset 8
84: call function noellipse-noellipse strchr
85: post call
86: £temporary3842 = return_value
87: p = £temporary3842
88: call header
89: parameter string_strchr28s2C2027l2729203D2025i0A#, offset 6
90: if p != 0 goto 92
91: goto 96
92: empty
93: £temporary3844 = p - s
94: £temporary3848 = £temporary3844
95: goto 98
96: empty
97: £temporary3848 = -1
98: empty
99: parameter £temporary3848, offset 8
100: call function noellipse-ellipse printf, extra 0
101: post call
102: call header
103: parameter s, offset 6
104: parameter 108, offset 8
105: call function noellipse-noellipse strrchr
106: post call
107: £temporary3850 = return_value
108: p = £temporary3850
109: call header
110: parameter string_strrchr28s2C2027l2729203D2025i0A#, offset 6
111: if p != 0 goto 113
112: goto 117
113: empty
114: £temporary3852 = p - s
115: £temporary3856 = £temporary3852
116: goto 119
117: empty
118: £temporary3856 = -1
119: empty
120: parameter £temporary3856, offset 8
121: call function noellipse-ellipse printf, extra 0
122: post call
123: call header
124: parameter s, offset 6
125: parameter 120, offset 8
126: call function noellipse-noellipse strchr
127: post call
128: £temporary3858 = return_value
129: p = £temporary3858
130: call header
131: parameter string_strchr28s2C2027x2729203D2025i0A#, offset 6
132: if p != 0 goto 134
133: goto 138
134: empty
135: £temporary3860 = p - s
136: £temporary3864 = £temporary3860
137: goto 140
138: empty
139: £temporary3864 = -1
140: empty
141: parameter £temporary3864, offset 8
142: call function noellipse-ellipse printf, extra 0
143: post call
144: call header
145: parameter s, offset 6
146: parameter 120, offset 8
147: call function noellipse-noellipse strrchr
148: post call
149: £temporary3866 = return_value
150: p = £temporary3866
151: call header
152: parameter string_strrchr28s2C2027x2729203D2025i0A#, offset 6
153: if p != 0 goto 155
154: goto 159
155: empty
156: £temporary3868 = p - s
157: £temporary3872 = £temporary3868
158: goto 161
159: empty
160: £temporary3872 = -1
161: empty
162: parameter £temporary3872, offset 8
163: call function noellipse-ellipse printf, extra 0
164: post call
165: call header
166: parameter s, offset 6
167: parameter string_Hello2C20World21#, offset 8
168: parameter 20, offset 10
169: call function noellipse-noellipse memcpy
170: post call
171: call header
172: parameter t, offset 6
173: parameter string_Hello2C20World21#, offset 8
174: parameter 20, offset 10
175: call function noellipse-noellipse memmove
176: post call
177: call header
178: parameter u, offset 6
179: parameter 88, offset 8
180: parameter 20, offset 10
181: call function noellipse-noellipse memset
182: post call
183: £temporary3877 -> u = *u, offset 19
184: £temporary3877 -> u = 0
185: call header
186: parameter string_s203D202225s222C20t203D202225s222C20u203D202225s220A#, offset 6
187: parameter s, offset 8
188: parameter t, offset 10
189: parameter u, offset 12
190: call function noellipse-ellipse printf, extra 0
191: post call
192: call header
193: parameter s, offset 6
194: parameter 108, offset 8
195: parameter 20, offset 10
196: call function noellipse-noellipse memchr
197: post call
198: £temporary3879 = return_value
199: p = £temporary3879
200: call header
201: parameter string_memchr28s2C2027l272C20SIZE202A20sizeof28char2929203D2025i0A#, offset 6
202: if p != 0 goto 204
203: goto 208
204: empty
205: £temporary3881 = p - s
206: £temporary3885 = £temporary3881
207: goto 210
208: empty
209: £temporary3885 = -1
210: empty
211: parameter £temporary3885, offset 8
212: call function noellipse-ellipse printf, extra 0
213: post call
214: call header
215: parameter s, offset 6
216: parameter 120, offset 8
217: parameter 20, offset 10
218: call function noellipse-noellipse memchr
219: post call
220: £temporary3887 = return_value
221: p = £temporary3887
222: call header
223: parameter string_memchr28s2C2027x272C20SIZE202A20sizeof28char2929203D2025i0A#, offset 6
224: if p != 0 goto 226
225: goto 230
226: empty
227: £temporary3889 = p - s
228: £temporary3893 = £temporary3889
229: goto 232
230: empty
231: £temporary3893 = -1
232: empty
233: parameter £temporary3893, offset 8
234: call function noellipse-ellipse printf, extra 0
235: post call
236: call header
237: parameter string_memcmp28s2C20t2C20SIZE202A20sizeof28char2929203D2025i0A#, offset 6
238: call header
239: parameter s, offset 14
240: parameter t, offset 16
241: parameter 20, offset 18
242: call function noellipse-noellipse memcmp
243: post call
244: £temporary3895 = return_value
245: parameter £temporary3895, offset 8
246: call function noellipse-ellipse printf, extra 0
247: post call
248: call header
249: parameter string_strspn28s2C2022Hello2C20C2229203D2025i0A#, offset 6
250: call header
251: parameter s, offset 14
252: parameter string_Hello2C20C#, offset 16
253: call function noellipse-noellipse strspn
254: post call
255: £temporary3897 = return_value
256: parameter £temporary3897, offset 8
257: call function noellipse-ellipse printf, extra 0
258: post call
259: call header
260: parameter string_strcspn28s2C2022Hello2C20C2229203D2025i0A#, offset 6
261: call header
262: parameter s, offset 14
263: parameter string_Hello2C20C#, offset 16
264: call function noellipse-noellipse strcspn
265: post call
266: £temporary3899 = return_value
267: parameter £temporary3899, offset 8
268: call function noellipse-ellipse printf, extra 0
269: post call
270: call header
271: parameter string_strerror28errno29203D202225s220A#, offset 6
272: call header
273: parameter errno, offset 14
274: call function noellipse-noellipse strerror
275: post call
276: £temporary3901 = return_value
277: parameter £temporary3901, offset 8
278: call function noellipse-ellipse printf, extra 0
279: post call
280: call header
281: parameter s, offset 6
282: parameter string_2C#, offset 8
283: call function noellipse-noellipse strtok
284: post call
285: £temporary3903 = return_value
286: p = £temporary3903
287: if p != 0 goto 290
288: goto 303
289: check track map float stack
290: call header
291: parameter string_strtok28s2C20222C2229203D202225s220A#, offset 6
292: parameter p, offset 8
293: call function noellipse-ellipse printf, extra 0
294: post call
295: call header
296: parameter 0, offset 6
297: parameter string_2C#, offset 8
298: call function noellipse-noellipse strtok
299: post call
300: £temporary3906 = return_value
301: p = £temporary3906
302: goto 287
303: empty
304: return
305: function end string_test
0: empty
1: return
2: function end locale_test
0: push float y
1: push 0
2: if y != 0 goto 5
3: goto 11
4: check track map float stack
5: push float x
6: push float y
7: £temporary3999 = x / y
8: return_value = £temporary3999
9: return
10: goto 21
11: p = string_Division20by20Zero2E#
12: call header
13: parameter buffer, offset 6
14: parameter p, offset 8
15: call function noellipse-noellipse longjmp
16: post call
17: push 0
18: return_value = 0
19: return
20: goto 21
21: empty
22: return
23: function end divide
0: call header
1: push float 1.0
2: parameter 1.0, offset 6
3: push float x
4: parameter x, offset 14
5: call function noellipse-noellipse divide
6: post call
7: £temporary4003 = return_value
8: return_value = £temporary4003
9: return
10: empty
11: return
12: function end invers
0: call header
1: parameter buffer, offset 6
2: call function noellipse-noellipse setjmp
3: post call
4: £temporary4006 = return_value
5: p = £temporary4006
6: if p == 0 goto 9
7: goto 23
8: check track map float stack
9: call header
10: parameter string_12E0202F2025f203D2025f0A#, offset 6
11: push float x
12: parameter x, offset 8
13: call header
14: push float x
15: parameter x, offset 22
16: call function noellipse-noellipse invers
17: post call
18: £temporary4008 = return_value
19: parameter £temporary4008, offset 16
20: call function noellipse-ellipse printf, extra 0
21: post call
22: goto 30
23: call header
24: parameter string_p203D203C25s3E203C25u3E0A#, offset 6
25: parameter p, offset 8
26: parameter p, offset 10
27: call function noellipse-ellipse printf, extra 0
28: post call
29: goto 30
30: empty
31: return
32: function end setjmp_test
0: call header
1: push float 3.1415926535897932384
2: pop float empty X
3: push float -6.2831853071795864768
4: parameter -6.2831853071795864768, offset 6
5: call function noellipse-noellipse math_test_1
6: post call
7: call header
8: push float 3.1415926535897932384
9: pop float empty X
10: push float -3.1415926535897932384
11: parameter -3.1415926535897932384, offset 6
12: call function noellipse-noellipse math_test_1
13: post call
14: call header
15: push float 3.1415926535897932384
16: pop float empty X
17: push float -3.1415926535897932384
18: pop float empty X
19: push float -1.5707963267948966192
20: parameter -1.5707963267948966192, offset 6
21: call function noellipse-noellipse math_test_1
22: post call
23: call header
24: push float -1
25: parameter -1, offset 6
26: call function noellipse-noellipse math_test_1
27: post call
28: call header
29: push 0
30: parameter 0, offset 6
31: call function noellipse-noellipse math_test_1
32: post call
33: call header
34: push 1
35: parameter 1, offset 6
36: call function noellipse-noellipse math_test_1
37: post call
38: call header
39: push float 3.1415926535897932384
40: pop float empty X
41: push float 1.5707963267948966192
42: parameter 1.5707963267948966192, offset 6
43: call function noellipse-noellipse math_test_1
44: post call
45: call header
46: push float 3.1415926535897932384
47: parameter 3.1415926535897932384, offset 6
48: call function noellipse-noellipse math_test_1
49: post call
50: call header
51: push float 3.1415926535897932384
52: pop float empty X
53: push float 6.2831853071795864768
54: parameter 6.2831853071795864768, offset 6
55: call function noellipse-noellipse math_test_1
56: post call
57: empty
58: return
59: function end math_test_1x
0: call header
1: parameter string_2020acos2825f29203D2025f2C20errno203D2025i203C25s3E2C20#, offset 6
2: push float x
3: parameter x, offset 8
4: call header
5: push float x
6: parameter x, offset 22
7: call function noellipse-noellipse acos
8: post call
9: £temporary4037 = return_value
10: parameter £temporary4037, offset 16
11: parameter errno, offset 24
12: call header
13: parameter errno, offset 32
14: call function noellipse-noellipse strerror
15: post call
16: £temporary4038 = return_value
17: parameter £temporary4038, offset 26
18: call function noellipse-ellipse printf, extra 0
19: post call
20: call header
21: parameter string_Error20message#, offset 6
22: call function noellipse-noellipse perror
23: post call
24: errno = 0
25: empty
26: return
27: function end acos_test
0: call header
1: parameter string_2020atan2825f29203D2025f2C20errno203D2025i203C25s3E2C20#, offset 6
2: push float x
3: parameter x, offset 8
4: call header
5: push float x
6: parameter x, offset 22
7: call function noellipse-noellipse atan
8: post call
9: £temporary4049 = return_value
10: parameter £temporary4049, offset 16
11: parameter errno, offset 24
12: call header
13: parameter errno, offset 32
14: call function noellipse-noellipse strerror
15: post call
16: £temporary4050 = return_value
17: parameter £temporary4050, offset 26
18: call function noellipse-ellipse printf, extra 0
19: post call
20: call header
21: parameter string_Error20message#, offset 6
22: call function noellipse-noellipse perror
23: post call
24: errno = 0
25: empty
26: return
27: function end atan_test
0: call header
1: push float 1.000001
2: parameter 1.000001, offset 6
3: call function noellipse-noellipse math_test_1
4: post call
5: call header
6: push float 1.0
7: parameter 1.0, offset 6
8: call function noellipse-noellipse math_test_1
9: post call
10: call header
11: push float 0.999999
12: parameter 0.999999, offset 6
13: call function noellipse-noellipse math_test_1
14: post call
15: call header
16: push float 0.000001
17: parameter 0.000001, offset 6
18: call function noellipse-noellipse math_test_1
19: post call
20: call header
21: push 0
22: parameter 0, offset 6
23: call function noellipse-noellipse math_test_1
24: post call
25: call header
26: push float -0.000001
27: parameter -0.000001, offset 6
28: call function noellipse-noellipse math_test_1
29: post call
30: call header
31: push float -0.999999
32: parameter -0.999999, offset 6
33: call function noellipse-noellipse math_test_1
34: post call
35: call header
36: push float -1.0
37: parameter -1.0, offset 6
38: call function noellipse-noellipse math_test_1
39: post call
40: call header
41: push float -1.000001
42: parameter -1.000001, offset 6
43: call function noellipse-noellipse math_test_1
44: post call
45: call header
46: push float 3.1415926535897932384
47: pop float empty X
48: push float 6.2831853071795864768
49: parameter 6.2831853071795864768, offset 6
50: call function noellipse-noellipse math_test_1
51: post call
52: call header
53: push float 3.1415926535897932384
54: parameter 3.1415926535897932384, offset 6
55: call function noellipse-noellipse math_test_1
56: post call
57: call header
58: push float 3.1415926535897932384
59: pop float empty X
60: push float 1.5707963267948966192
61: parameter 1.5707963267948966192, offset 6
62: call function noellipse-noellipse math_test_1
63: post call
64: call header
65: push float 3.1415926535897932384
66: pop float empty X
67: push float -3.1415926535897932384
68: pop float empty X
69: push float -1.5707963267948966192
70: parameter -1.5707963267948966192, offset 6
71: call function noellipse-noellipse math_test_1
72: post call
73: call header
74: push float 3.1415926535897932384
75: pop float empty X
76: push float -3.1415926535897932384
77: parameter -3.1415926535897932384, offset 6
78: call function noellipse-noellipse math_test_1
79: post call
80: call header
81: push float 3.1415926535897932384
82: pop float empty X
83: push float -6.2831853071795864768
84: parameter -6.2831853071795864768, offset 6
85: call function noellipse-noellipse math_test_1
86: post call
87: call header
88: push float 1.0
89: parameter 1.0, offset 6
90: push float 2.0
91: parameter 2.0, offset 14
92: call function noellipse-noellipse math_test_2
93: post call
94: call header
95: push float 3.0
96: parameter 3.0, offset 6
97: push float 4.0
98: parameter 4.0, offset 14
99: call function noellipse-noellipse math_test_2
100: post call
101: call header
102: push 0
103: parameter 0, offset 6
104: push float 2.0
105: parameter 2.0, offset 14
106: call function noellipse-noellipse math_test_2
107: post call
108: call header
109: push 0
110: parameter 0, offset 6
111: push float -2.0
112: parameter -2.0, offset 14
113: call function noellipse-noellipse math_test_2
114: post call
115: call header
116: push 1
117: parameter 1, offset 6
118: push float 2.0
119: parameter 2.0, offset 14
120: call function noellipse-noellipse math_test_2
121: post call
122: call header
123: push 1
124: parameter 1, offset 6
125: push float -2.0
126: parameter -2.0, offset 14
127: call function noellipse-noellipse math_test_2
128: post call
129: call header
130: push 0
131: parameter 0, offset 6
132: push 0
133: parameter 0, offset 14
134: call function noellipse-noellipse math_test_2
135: post call
136: call header
137: push float 2
138: parameter 2, offset 6
139: push 0
140: parameter 0, offset 14
141: call function noellipse-noellipse math_test_2
142: post call
143: call header
144: push float -2
145: parameter -2, offset 6
146: push 0
147: parameter 0, offset 14
148: call function noellipse-noellipse math_test_2
149: post call
150: call header
151: push float -1.0
152: parameter -1.0, offset 6
153: push float -1.0
154: parameter -1.0, offset 14
155: call function noellipse-noellipse math_test_2
156: post call
157: call header
158: push float -2.0
159: parameter -2.0, offset 6
160: push float -4.0
161: parameter -4.0, offset 14
162: call function noellipse-noellipse math_test_2
163: post call
164: empty
165: return
166: function end main_math
0: call header
1: parameter string_3C25f3E0A#, offset 6
2: push float x
3: parameter x, offset 8
4: call function noellipse-ellipse printf, extra 0
5: post call
6: call header
7: parameter string_2020sin2825f29203D2025f2C20errno203D2025i203C25s3E2C20#, offset 6
8: push float x
9: parameter x, offset 8
10: call header
11: push float x
12: parameter x, offset 22
13: call function noellipse-noellipse sin
14: post call
15: £temporary4125 = return_value
16: parameter £temporary4125, offset 16
17: parameter errno, offset 24
18: call header
19: parameter errno, offset 32
20: call function noellipse-noellipse strerror
21: post call
22: £temporary4126 = return_value
23: parameter £temporary4126, offset 26
24: call function noellipse-ellipse printf, extra 0
25: post call
26: call header
27: parameter string_Error20message#, offset 6
28: call function noellipse-noellipse perror
29: post call
30: errno = 0
31: call header
32: parameter string_2020cos2825f29203D2025f2C20errno203D2025i203C25s3E2C20#, offset 6
33: push float x
34: parameter x, offset 8
35: call header
36: push float x
37: parameter x, offset 22
38: call function noellipse-noellipse cos
39: post call
40: £temporary4129 = return_value
41: parameter £temporary4129, offset 16
42: parameter errno, offset 24
43: call header
44: parameter errno, offset 32
45: call function noellipse-noellipse strerror
46: post call
47: £temporary4130 = return_value
48: parameter £temporary4130, offset 26
49: call function noellipse-ellipse printf, extra 0
50: post call
51: call header
52: parameter string_Error20message#, offset 6
53: call function noellipse-noellipse perror
54: post call
55: errno = 0
56: call header
57: parameter string_2020tan2825f29203D2025f2C20errno203D2025i203C25s3E2C20#, offset 6
58: push float x
59: parameter x, offset 8
60: call header
61: push float x
62: parameter x, offset 22
63: call function noellipse-noellipse tan
64: post call
65: £temporary4133 = return_value
66: parameter £temporary4133, offset 16
67: parameter errno, offset 24
68: call header
69: parameter errno, offset 32
70: call function noellipse-noellipse strerror
71: post call
72: £temporary4134 = return_value
73: parameter £temporary4134, offset 26
74: call function noellipse-ellipse printf, extra 0
75: post call
76: call header
77: parameter string_Error20message#, offset 6
78: call function noellipse-noellipse perror
79: post call
80: errno = 0
81: call header
82: parameter string_2020asin2825f29203D2025f2C20errno203D2025i203C25s3E2C20#, offset 6
83: push float x
84: parameter x, offset 8
85: call header
86: push float x
87: parameter x, offset 22
88: call function noellipse-noellipse asin
89: post call
90: £temporary4137 = return_value
91: parameter £temporary4137, offset 16
92: parameter errno, offset 24
93: call header
94: parameter errno, offset 32
95: call function noellipse-noellipse strerror
96: post call
97: £temporary4138 = return_value
98: parameter £temporary4138, offset 26
99: call function noellipse-ellipse printf, extra 0
100: post call
101: call header
102: parameter string_Error20message#, offset 6
103: call function noellipse-noellipse perror
104: post call
105: errno = 0
106: call header
107: parameter string_2020acos2825f29203D2025f2C20errno203D2025i203C25s3E2C20#, offset 6
108: push float x
109: parameter x, offset 8
110: call header
111: push float x
112: parameter x, offset 22
113: call function noellipse-noellipse acos
114: post call
115: £temporary4141 = return_value
116: parameter £temporary4141, offset 16
117: parameter errno, offset 24
118: call header
119: parameter errno, offset 32
120: call function noellipse-noellipse strerror
121: post call
122: £temporary4142 = return_value
123: parameter £temporary4142, offset 26
124: call function noellipse-ellipse printf, extra 0
125: post call
126: call header
127: parameter string_Error20message#, offset 6
128: call function noellipse-noellipse perror
129: post call
130: errno = 0
131: call header
132: parameter string_2020atan2825f29203D2025f2C20errno203D2025i203C25s3E2C20#, offset 6
133: push float x
134: parameter x, offset 8
135: call header
136: push float x
137: parameter x, offset 22
138: call function noellipse-noellipse atan
139: post call
140: £temporary4145 = return_value
141: parameter £temporary4145, offset 16
142: parameter errno, offset 24
143: call header
144: parameter errno, offset 32
145: call function noellipse-noellipse strerror
146: post call
147: £temporary4146 = return_value
148: parameter £temporary4146, offset 26
149: call function noellipse-ellipse printf, extra 0
150: post call
151: call header
152: parameter string_Error20message#, offset 6
153: call function noellipse-noellipse perror
154: post call
155: errno = 0
156: call header
157: parameter string_2020exp2825f29203D2025f2C20errno203D2025i203C25s3E2C20#, offset 6
158: push float x
159: parameter x, offset 8
160: call header
161: push float x
162: parameter x, offset 22
163: call function noellipse-noellipse exp
164: post call
165: £temporary4149 = return_value
166: parameter £temporary4149, offset 16
167: parameter errno, offset 24
168: call header
169: parameter errno, offset 32
170: call function noellipse-noellipse strerror
171: post call
172: £temporary4150 = return_value
173: parameter £temporary4150, offset 26
174: call function noellipse-ellipse printf, extra 0
175: post call
176: call header
177: parameter string_Error20message#, offset 6
178: call function noellipse-noellipse perror
179: post call
180: errno = 0
181: call header
182: parameter string_2020log2825f29203D2025f2C20errno203D2025i203C25s3E2C20#, offset 6
183: push float x
184: parameter x, offset 8
185: call header
186: push float x
187: parameter x, offset 22
188: call function noellipse-noellipse log
189: post call
190: £temporary4153 = return_value
191: parameter £temporary4153, offset 16
192: parameter errno, offset 24
193: call header
194: parameter errno, offset 32
195: call function noellipse-noellipse strerror
196: post call
197: £temporary4154 = return_value
198: parameter £temporary4154, offset 26
199: call function noellipse-ellipse printf, extra 0
200: post call
201: call header
202: parameter string_Error20message#, offset 6
203: call function noellipse-noellipse perror
204: post call
205: errno = 0
206: call header
207: parameter string_2020log102825f29203D2025f2C20errno203D2025i203C25s3E2C20#, offset 6
208: push float x
209: parameter x, offset 8
210: call header
211: push float x
212: parameter x, offset 22
213: call function noellipse-noellipse log10
214: post call
215: £temporary4157 = return_value
216: parameter £temporary4157, offset 16
217: parameter errno, offset 24
218: call header
219: parameter errno, offset 32
220: call function noellipse-noellipse strerror
221: post call
222: £temporary4158 = return_value
223: parameter £temporary4158, offset 26
224: call function noellipse-ellipse printf, extra 0
225: post call
226: call header
227: parameter string_Error20message#, offset 6
228: call function noellipse-noellipse perror
229: post call
230: errno = 0
231: call header
232: parameter string_2020sinh2825f29203D2025f2C20errno203D2025i203C25s3E2C20#, offset 6
233: push float x
234: parameter x, offset 8
235: call header
236: push float x
237: parameter x, offset 22
238: call function noellipse-noellipse sinh
239: post call
240: £temporary4161 = return_value
241: parameter £temporary4161, offset 16
242: parameter errno, offset 24
243: call header
244: parameter errno, offset 32
245: call function noellipse-noellipse strerror
246: post call
247: £temporary4162 = return_value
248: parameter £temporary4162, offset 26
249: call function noellipse-ellipse printf, extra 0
250: post call
251: call header
252: parameter string_Error20message#, offset 6
253: call function noellipse-noellipse perror
254: post call
255: errno = 0
256: call header
257: parameter string_2020cosh2825f29203D2025f2C20errno203D2025i203C25s3E2C20#, offset 6
258: push float x
259: parameter x, offset 8
260: call header
261: push float x
262: parameter x, offset 22
263: call function noellipse-noellipse cosh
264: post call
265: £temporary4165 = return_value
266: parameter £temporary4165, offset 16
267: parameter errno, offset 24
268: call header
269: parameter errno, offset 32
270: call function noellipse-noellipse strerror
271: post call
272: £temporary4166 = return_value
273: parameter £temporary4166, offset 26
274: call function noellipse-ellipse printf, extra 0
275: post call
276: call header
277: parameter string_Error20message#, offset 6
278: call function noellipse-noellipse perror
279: post call
280: errno = 0
281: call header
282: parameter string_2020tanh2825f29203D2025f2C20errno203D2025i203C25s3E2C20#, offset 6
283: push float x
284: parameter x, offset 8
285: call header
286: push float x
287: parameter x, offset 22
288: call function noellipse-noellipse tanh
289: post call
290: £temporary4169 = return_value
291: parameter £temporary4169, offset 16
292: parameter errno, offset 24
293: call header
294: parameter errno, offset 32
295: call function noellipse-noellipse strerror
296: post call
297: £temporary4170 = return_value
298: parameter £temporary4170, offset 26
299: call function noellipse-ellipse printf, extra 0
300: post call
301: call header
302: parameter string_Error20message#, offset 6
303: call function noellipse-noellipse perror
304: post call
305: errno = 0
306: call header
307: parameter string_2020sqrt2825f29203D2025f2C20errno203D2025i203C25s3E2C20#, offset 6
308: push float x
309: parameter x, offset 8
310: call header
311: push float x
312: parameter x, offset 22
313: call function noellipse-noellipse sqrt
314: post call
315: £temporary4173 = return_value
316: parameter £temporary4173, offset 16
317: parameter errno, offset 24
318: call header
319: parameter errno, offset 32
320: call function noellipse-noellipse strerror
321: post call
322: £temporary4174 = return_value
323: parameter £temporary4174, offset 26
324: call function noellipse-ellipse printf, extra 0
325: post call
326: call header
327: parameter string_Error20message#, offset 6
328: call function noellipse-noellipse perror
329: post call
330: errno = 0
331: call header
332: parameter string_2020floor2825f29203D2025f2C20errno203D2025i203C25s3E2C20#, offset 6
333: push float x
334: parameter x, offset 8
335: call header
336: push float x
337: parameter x, offset 22
338: call function noellipse-noellipse floor
339: post call
340: £temporary4177 = return_value
341: parameter £temporary4177, offset 16
342: parameter errno, offset 24
343: call header
344: parameter errno, offset 32
345: call function noellipse-noellipse strerror
346: post call
347: £temporary4178 = return_value
348: parameter £temporary4178, offset 26
349: call function noellipse-ellipse printf, extra 0
350: post call
351: call header
352: parameter string_Error20message#, offset 6
353: call function noellipse-noellipse perror
354: post call
355: errno = 0
356: call header
357: parameter string_2020ceil2825f29203D2025f2C20errno203D2025i203C25s3E2C20#, offset 6
358: push float x
359: parameter x, offset 8
360: call header
361: push float x
362: parameter x, offset 22
363: call function noellipse-noellipse ceil
364: post call
365: £temporary4181 = return_value
366: parameter £temporary4181, offset 16
367: parameter errno, offset 24
368: call header
369: parameter errno, offset 32
370: call function noellipse-noellipse strerror
371: post call
372: £temporary4182 = return_value
373: parameter £temporary4182, offset 26
374: call function noellipse-ellipse printf, extra 0
375: post call
376: call header
377: parameter string_Error20message#, offset 6
378: call function noellipse-noellipse perror
379: post call
380: errno = 0
381: call header
382: parameter string_2020fabs2825f29203D2025f2C20errno203D2025i203C25s3E2C20#, offset 6
383: push float x
384: parameter x, offset 8
385: call header
386: push float x
387: parameter x, offset 22
388: call function noellipse-noellipse fabs
389: post call
390: £temporary4185 = return_value
391: parameter £temporary4185, offset 16
392: parameter errno, offset 24
393: call header
394: parameter errno, offset 32
395: call function noellipse-noellipse strerror
396: post call
397: £temporary4186 = return_value
398: parameter £temporary4186, offset 26
399: call function noellipse-ellipse printf, extra 0
400: post call
401: call header
402: parameter string_Error20message#, offset 6
403: call function noellipse-noellipse perror
404: post call
405: errno = 0
406: j = 0
407: call header
408: push float x
409: parameter x, offset 6
410: £temporary4189 = &j
411: parameter £temporary4189, offset 14
412: call function noellipse-noellipse frexp
413: post call
414: £temporary4190 = return_value
415: pop float z
416: call header
417: parameter string_frexp2028z2C20j29203D202825f2C2025i292C20errno203D2025i203C25s3E0A#, offset 6
418: push float z
419: parameter z, offset 8
420: parameter j, offset 16
421: parameter errno, offset 18
422: call header
423: parameter errno, offset 26
424: call function noellipse-noellipse strerror
425: post call
426: £temporary4191 = return_value
427: parameter £temporary4191, offset 20
428: call function noellipse-ellipse printf, extra 0
429: post call
430: if errno != 0 goto 433
431: goto 439
432: check track map float stack
433: call header
434: parameter string_Error20message3A#, offset 6
435: call function noellipse-noellipse perror
436: post call
437: errno = 0
438: goto 439
439: push 0
440: pop float w
441: call header
442: push float x
443: parameter x, offset 6
444: push float w
445: pop float empty X
446: £temporary4195 = &w
447: parameter £temporary4195, offset 14
448: call function noellipse-noellipse modf
449: post call
450: £temporary4196 = return_value
451: pop float z
452: call header
453: parameter string_modf2028z2C20w29203D202825f2C2025f292C20errno203D2025i203C25s3E0A#, offset 6
454: push float z
455: parameter z, offset 8
456: push float w
457: parameter w, offset 16
458: parameter errno, offset 24
459: call header
460: parameter errno, offset 32
461: call function noellipse-noellipse strerror
462: post call
463: £temporary4197 = return_value
464: parameter £temporary4197, offset 26
465: call function noellipse-ellipse printf, extra 0
466: post call
467: if errno != 0 goto 470
468: goto 476
469: check track map float stack
470: call header
471: parameter string_Error20message3A#, offset 6
472: call function noellipse-noellipse perror
473: post call
474: errno = 0
475: goto 476
476: call header
477: parameter string_0A#, offset 6
478: call function noellipse-ellipse printf, extra 0
479: post call
480: empty
481: return
482: function end math_test_1
0: call header
1: parameter string_fmod2825f2C2025f29203D2025f2C20errno203D2025i203C25s3E2C20#, offset 6
2: push float x
3: parameter x, offset 8
4: push float y
5: parameter y, offset 16
6: call header
7: push float x
8: parameter x, offset 30
9: push float y
10: parameter y, offset 38
11: call function noellipse-noellipse fmod
12: post call
13: £temporary4353 = return_value
14: parameter £temporary4353, offset 24
15: parameter errno, offset 32
16: call header
17: parameter errno, offset 40
18: call function noellipse-noellipse strerror
19: post call
20: £temporary4354 = return_value
21: parameter £temporary4354, offset 34
22: call function noellipse-ellipse printf, extra 0
23: post call
24: call header
25: parameter string_Error20message#, offset 6
26: call function noellipse-noellipse perror
27: post call
28: errno = 0
29: call header
30: parameter string_atan22825f2C2025f29203D2025f2C20errno203D2025i203C25s3E2C20#, offset 6
31: push float x
32: parameter x, offset 8
33: push float y
34: parameter y, offset 16
35: call header
36: push float x
37: parameter x, offset 30
38: push float y
39: parameter y, offset 38
40: call function noellipse-noellipse atan2
41: post call
42: £temporary4357 = return_value
43: parameter £temporary4357, offset 24
44: parameter errno, offset 32
45: call header
46: parameter errno, offset 40
47: call function noellipse-noellipse strerror
48: post call
49: £temporary4358 = return_value
50: parameter £temporary4358, offset 34
51: call function noellipse-ellipse printf, extra 0
52: post call
53: call header
54: parameter string_Error20message#, offset 6
55: call function noellipse-noellipse perror
56: post call
57: errno = 0
58: call header
59: parameter string_pow2825f2C2025f29203D2025f2C20errno203D2025i203C25s3E2C20#, offset 6
60: push float x
61: parameter x, offset 8
62: push float y
63: parameter y, offset 16
64: call header
65: push float x
66: parameter x, offset 30
67: push float y
68: parameter y, offset 38
69: call function noellipse-noellipse pow
70: post call
71: £temporary4361 = return_value
72: parameter £temporary4361, offset 24
73: parameter errno, offset 32
74: call header
75: parameter errno, offset 40
76: call function noellipse-noellipse strerror
77: post call
78: £temporary4362 = return_value
79: parameter £temporary4362, offset 34
80: call function noellipse-ellipse printf, extra 0
81: post call
82: call header
83: parameter string_Error20message#, offset 6
84: call function noellipse-noellipse perror
85: post call
86: errno = 0
87: call header
88: parameter string_0A#, offset 6
89: call function noellipse-ellipse printf, extra 0
90: post call
91: call header
92: parameter string_ldexp2825f2C2025i29203D2025f0A0A#, offset 6
93: push float x
94: parameter x, offset 8
95: push float y
96: £temporary4366 = float_to_int y (Double -> Signed_Int)
97: parameter £temporary4366, offset 16
98: call header
99: push float x
100: parameter x, offset 24
101: push float y
102: £temporary4367 = float_to_int y (Double -> Signed_Int)
103: parameter £temporary4367, offset 32
104: call function noellipse-noellipse ldexp
105: post call
106: £temporary4368 = return_value
107: parameter £temporary4368, offset 18
108: call function noellipse-ellipse printf, extra 0
109: post call
110: empty
111: return
112: function end math_test_2
0: call header
1: parameter inFilePtrName, offset 6
2: parameter string_r#, offset 8
3: call function noellipse-noellipse fopen
4: post call
5: £temporary4407 = return_value
6: inFilePtrPtr = £temporary4407
7: if inFilePtrPtr != 0 goto 22
8: goto 10
9: check track map float stack
10: call header
11: parameter stderr, offset 6
12: parameter string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#, offset 8
13: parameter string_inFilePtrPtr20213D20NULL#, offset 10
14: parameter string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CFileTest2Ec#, offset 12
15: parameter 10, offset 14
16: call function noellipse-ellipse fprintf, extra 0
17: post call
18: call header
19: call function noellipse-noellipse abort
20: post call
21: goto 22
22: empty
23: call header
24: parameter outFilePtrName, offset 6
25: parameter string_w#, offset 8
26: call function noellipse-noellipse fopen
27: post call
28: £temporary4412 = return_value
29: outFilePtrPtr = £temporary4412
30: if outFilePtrPtr != 0 goto 45
31: goto 33
32: check track map float stack
33: call header
34: parameter stderr, offset 6
35: parameter string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#, offset 8
36: parameter string_outFilePtrPtr20213D20NULL#, offset 10
37: parameter string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CFileTest2Ec#, offset 12
38: parameter 12, offset 14
39: call function noellipse-ellipse fprintf, extra 0
40: post call
41: call header
42: call function noellipse-noellipse abort
43: post call
44: goto 45
45: empty
46: size = 0
47: call header
48: parameter inFilePtrPtr, offset 6
49: parameter string_25i#, offset 8
50: £temporary4417 = &size
51: parameter £temporary4417, offset 10
52: call function noellipse-ellipse fscanf, extra 0
53: post call
54: index = 0
55: empty
56: if index < size goto 59
57: goto 88
58: check track map float stack
59: empty
60: push 0
61: pop float inValue
62: call header
63: parameter inFilePtrPtr, offset 6
64: parameter string_25lf#, offset 8
65: push float inValue
66: pop float empty X
67: £temporary4421 = &inValue
68: parameter £temporary4421, offset 10
69: call function noellipse-ellipse fscanf, extra 0
70: post call
71: call header
72: push float inValue
73: parameter £temporary4423, offset 6
74: call function noellipse-noellipse sqrt
75: post call
76: £temporary4424 = return_value
77: pop float outValue
78: call header
79: parameter outFilePtrPtr, offset 6
80: parameter string_25f0A#, offset 8
81: push float outValue
82: parameter outValue, offset 10
83: call function noellipse-ellipse fprintf, extra 0
84: post call
85: empty
86: index = index + 1
87: goto 55
88: call header
89: parameter inFilePtrPtr, offset 6
90: call function noellipse-noellipse fclose
91: post call
92: call header
93: parameter outFilePtrPtr, offset 6
94: call function noellipse-noellipse fclose
95: post call
96: sourceFilePtr = string_X#
97: targetFilePtr = string_Y#
98: call header
99: parameter sourceFilePtr, offset 6
100: parameter targetFilePtr, offset 8
101: call function noellipse-noellipse rename
102: post call
103: £temporary4428 = return_value
104: if £temporary4428 == 0 goto 107
105: goto 114
106: check track map float stack
107: call header
108: parameter string_2225s2220has20been20renamed20to202225s222E0A#, offset 6
109: parameter sourceFilePtr, offset 8
110: parameter targetFilePtr, offset 10
111: call function noellipse-ellipse printf, extra 0
112: post call
113: goto 126
114: call header
115: parameter string_Error2025i3A2025s2E0A#, offset 6
116: parameter errno, offset 8
117: call header
118: parameter errno, offset 16
119: call function noellipse-noellipse strerror
120: post call
121: £temporary4431 = return_value
122: parameter £temporary4431, offset 10
123: call function noellipse-ellipse printf, extra 0
124: post call
125: goto 126
126: targetFilePtr = string_Z#
127: call header
128: parameter targetFilePtr, offset 6
129: call function noellipse-noellipse remove
130: post call
131: £temporary4433 = return_value
132: if £temporary4433 == 0 goto 135
133: goto 141
134: check track map float stack
135: call header
136: parameter string_2225s2220has20been20removed2E0A#, offset 6
137: parameter targetFilePtr, offset 8
138: call function noellipse-ellipse printf, extra 0
139: post call
140: goto 153
141: call header
142: parameter string_Error2025i3A2025s2E0A#, offset 6
143: parameter errno, offset 8
144: call header
145: parameter errno, offset 16
146: call function noellipse-noellipse strerror
147: post call
148: £temporary4436 = return_value
149: parameter £temporary4436, offset 10
150: call function noellipse-ellipse printf, extra 0
151: post call
152: goto 153
153: call header
154: parameter string_PBook2Etxt#, offset 6
155: parameter string_r#, offset 8
156: call function noellipse-noellipse fopen
157: post call
158: £temporary4438 = return_value
159: inFilePtr = £temporary4438
160: if inFilePtr != 0 goto 175
161: goto 163
162: check track map float stack
163: call header
164: parameter stderr, offset 6
165: parameter string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#, offset 8
166: parameter string_inFilePtr20213D20NULL#, offset 10
167: parameter string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CFileTest2Ec#, offset 12
168: parameter 50, offset 14
169: call function noellipse-ellipse fprintf, extra 0
170: post call
171: call header
172: call function noellipse-noellipse abort
173: post call
174: goto 175
175: empty
176: call header
177: parameter string_0A252D24s20252D24s0A#, offset 6
178: parameter string_Name#, offset 8
179: parameter string_Phone#, offset 10
180: call function noellipse-ellipse printf, extra 0
181: post call
182: call header
183: parameter string_252D24s20252D24s0A#, offset 6
184: parameter string_3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D#, offset 8
185: parameter string_3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D#, offset 10
186: call function noellipse-ellipse printf, extra 0
187: post call
188: call header
189: parameter inFilePtr, offset 6
190: parameter string_25i#, offset 8
191: £temporary4445 = &size
192: parameter £temporary4445, offset 10
193: call function noellipse-ellipse fscanf, extra 0
194: post call
195: count = 0
196: empty
197: if count < size goto 200
198: goto 217
199: check track map float stack
200: empty
201: call header
202: parameter inFilePtr, offset 6
203: parameter string_25s25s#, offset 8
204: parameter name, offset 10
205: parameter phone, offset 12
206: call function noellipse-ellipse fscanf, extra 0
207: post call
208: call header
209: parameter string_252D24s20252D24s0A#, offset 6
210: parameter name, offset 8
211: parameter phone, offset 10
212: call function noellipse-ellipse printf, extra 0
213: post call
214: empty
215: count = count + 1
216: goto 196
217: call header
218: parameter string_0A#, offset 6
219: call function noellipse-ellipse printf, extra 0
220: post call
221: call header
222: parameter inFilePtr, offset 6
223: call function noellipse-noellipse fclose
224: post call
225: sourceFilePtr = string_Flow12Etxt#
226: targetFilePtr = string_Flow22Etxt#
227: call header
228: parameter sourceFilePtr, offset 6
229: parameter string_r#, offset 8
230: call function noellipse-noellipse fopen
231: post call
232: £temporary4453 = return_value
233: inFilePtr = £temporary4453
234: if inFilePtr != 0 goto 249
235: goto 237
236: check track map float stack
237: call header
238: parameter stderr, offset 6
239: parameter string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#, offset 8
240: parameter string_inFilePtr20213D20NULL#, offset 10
241: parameter string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CFileTest2Ec#, offset 12
242: parameter 76, offset 14
243: call function noellipse-ellipse fprintf, extra 0
244: post call
245: call header
246: call function noellipse-noellipse abort
247: post call
248: goto 249
249: empty
250: call header
251: parameter targetFilePtr, offset 6
252: parameter string_w#, offset 8
253: call function noellipse-noellipse fopen
254: post call
255: £temporary4458 = return_value
256: outFilePtr = £temporary4458
257: if outFilePtr != 0 goto 272
258: goto 260
259: check track map float stack
260: call header
261: parameter stderr, offset 6
262: parameter string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#, offset 8
263: parameter string_outFilePtr20213D20NULL#, offset 10
264: parameter string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CFileTest2Ec#, offset 12
265: parameter 79, offset 14
266: call function noellipse-ellipse fprintf, extra 0
267: post call
268: call header
269: call function noellipse-noellipse abort
270: post call
271: goto 272
272: empty
273: goto 275
274: check track map float stack
275: call header
276: parameter inFilePtr, offset 6
277: call function noellipse-noellipse fgetc
278: post call
279: £temporary4463 = return_value
280: £temporary4464 = int_to_int £temporary4463 (Signed_Int -> Signed_Char)
281: c = £temporary4464
282: £temporary4465 = int_to_int c (Signed_Char -> Signed_Int)
283: if £temporary4465 == -1 goto 286
284: goto 288
285: check track map float stack
286: goto 304
287: goto 288
288: call header
289: £temporary4467 = int_to_int c (Signed_Char -> Signed_Int)
290: parameter £temporary4467, offset 6
291: parameter outFilePtr, offset 8
292: call function noellipse-noellipse putc
293: post call
294: if c == 10 goto 297
295: goto 273
296: check track map float stack
297: call header
298: parameter 10, offset 6
299: parameter outFilePtr, offset 8
300: call function noellipse-noellipse putc
301: post call
302: goto 273
303: goto 273
304: call header
305: parameter inFilePtr, offset 6
306: call function noellipse-noellipse fclose
307: post call
308: call header
309: parameter outFilePtr, offset 6
310: call function noellipse-noellipse fclose
311: post call
312: call header
313: parameter string_Test2Ebin#, offset 6
314: parameter string_w#, offset 8
315: call function noellipse-noellipse fopen
316: post call
317: £temporary4474 = return_value
318: outFilePtr = £temporary4474
319: if outFilePtr != 0 goto 334
320: goto 322
321: check track map float stack
322: call header
323: parameter stderr, offset 6
324: parameter string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#, offset 8
325: parameter string_outFilePtr20213D20NULL#, offset 10
326: parameter string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CFileTest2Ec#, offset 12
327: parameter 100, offset 14
328: call function noellipse-ellipse fprintf, extra 0
329: post call
330: call header
331: call function noellipse-noellipse abort
332: post call
333: goto 334
334: empty
335: size = 10
336: call header
337: £temporary4479 = &size
338: parameter £temporary4479, offset 6
339: parameter 2, offset 8
340: parameter 1, offset 10
341: parameter outFilePtr, offset 12
342: call function noellipse-noellipse fwrite
343: post call
344: index = 0
345: empty
346: if index < size goto 349
347: goto 366
348: check track map float stack
349: empty
350: £temporary4483 = index * index
351: £temporary4484 = int_to_float £temporary4483 (Signed_Int -> Double)
352: pop float value
353: call header
354: push float value
355: pop float empty X
356: £temporary4485 = &value
357: parameter £temporary4485, offset 6
358: parameter 8, offset 8
359: parameter 1, offset 10
360: parameter outFilePtr, offset 12
361: call function noellipse-noellipse fwrite
362: post call
363: empty
364: index = index + 1
365: goto 345
366: call header
367: parameter outFilePtr, offset 6
368: call function noellipse-noellipse fclose
369: post call
370: call header
371: parameter string_Test2Ebin#, offset 6
372: parameter string_r#, offset 8
373: call function noellipse-noellipse fopen
374: post call
375: £temporary4488 = return_value
376: inFilePtr = £temporary4488
377: if inFilePtr != 0 goto 392
378: goto 380
379: check track map float stack
380: call header
381: parameter stderr, offset 6
382: parameter string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#, offset 8
383: parameter string_inFilePtr20213D20NULL#, offset 10
384: parameter string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CFileTest2Ec#, offset 12
385: parameter 115, offset 14
386: call function noellipse-ellipse fprintf, extra 0
387: post call
388: call header
389: call function noellipse-noellipse abort
390: post call
391: goto 392
392: empty
393: call header
394: £temporary4493 = &size
395: parameter £temporary4493, offset 6
396: parameter 2, offset 8
397: parameter 1, offset 10
398: parameter inFilePtr, offset 12
399: call function noellipse-noellipse fread
400: post call
401: call header
402: parameter string_size12025i0A#, offset 6
403: parameter size, offset 8
404: call function noellipse-ellipse printf, extra 0
405: post call
406: call header
407: £temporary4496 = &arr
408: parameter £temporary4496, offset 6
409: parameter 80, offset 8
410: parameter 1, offset 10
411: parameter inFilePtr, offset 12
412: call function noellipse-noellipse fread
413: post call
414: call header
415: parameter inFilePtr, offset 6
416: call function noellipse-noellipse fclose
417: post call
418: index = 0
419: empty
420: if index < 10 goto 423
421: goto 437
422: check track map float stack
423: empty
424: call header
425: parameter string_index12025i3A20value2025f0A#, offset 6
426: parameter index, offset 8
427: £temporary4502 = index * 8
428: £temporary4503 = arr + £temporary4502
429: £temporary4501 -> £temporary4503 = *£temporary4503
430: push float £temporary4501 -> £temporary4503
431: parameter £temporary4501 -> £temporary4503, offset 10
432: call function noellipse-ellipse printf, extra 0
433: post call
434: empty
435: index = index + 1
436: goto 419
437: call header
438: parameter string_0A#, offset 6
439: call function noellipse-ellipse printf, extra 0
440: post call
441: call header
442: parameter string_Test2Ebin#, offset 6
443: parameter string_r#, offset 8
444: call function noellipse-noellipse fopen
445: post call
446: £temporary4506 = return_value
447: inFilePtr = £temporary4506
448: if inFilePtr != 0 goto 463
449: goto 451
450: check track map float stack
451: call header
452: parameter stderr, offset 6
453: parameter string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#, offset 8
454: parameter string_inFilePtr20213D20NULL#, offset 10
455: parameter string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CFileTest2Ec#, offset 12
456: parameter 133, offset 14
457: call function noellipse-ellipse fprintf, extra 0
458: post call
459: call header
460: call function noellipse-noellipse abort
461: post call
462: goto 463
463: empty
464: call header
465: £temporary4511 = &size
466: parameter £temporary4511, offset 6
467: parameter 2, offset 8
468: parameter 1, offset 10
469: parameter inFilePtr, offset 12
470: call function noellipse-noellipse fread
471: post call
472: call header
473: parameter string_size22025i0A#, offset 6
474: parameter size, offset 8
475: call function noellipse-ellipse printf, extra 0
476: post call
477: index = 0
478: empty
479: if index < size goto 482
480: goto 503
481: check track map float stack
482: empty
483: call header
484: push float value
485: pop float empty X
486: £temporary4516 = &value
487: parameter £temporary4516, offset 6
488: parameter 8, offset 8
489: parameter 1, offset 10
490: parameter inFilePtr, offset 12
491: call function noellipse-noellipse fread
492: post call
493: call header
494: parameter string_index22025i3A20value2025f0A#, offset 6
495: parameter index, offset 8
496: push float value
497: parameter value, offset 10
498: call function noellipse-ellipse printf, extra 0
499: post call
500: empty
501: index = index + 1
502: goto 478
503: call header
504: parameter string_0A#, offset 6
505: call function noellipse-ellipse printf, extra 0
506: post call
507: call header
508: parameter inFilePtr, offset 6
509: call function noellipse-noellipse fclose
510: post call
511: call header
512: parameter string_Test2Ebin#, offset 6
513: parameter string_r#, offset 8
514: call function noellipse-noellipse fopen
515: post call
516: £temporary4521 = return_value
517: inFilePtr = £temporary4521
518: if inFilePtr != 0 goto 533
519: goto 521
520: check track map float stack
521: call header
522: parameter stderr, offset 6
523: parameter string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#, offset 8
524: parameter string_inFilePtr20213D20NULL#, offset 10
525: parameter string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CFileTest2Ec#, offset 12
526: parameter 151, offset 14
527: call function noellipse-ellipse fprintf, extra 0
528: post call
529: call header
530: call function noellipse-noellipse abort
531: post call
532: goto 533
533: empty
534: call header
535: £temporary4526 = &size
536: parameter £temporary4526, offset 6
537: parameter 2, offset 8
538: parameter 1, offset 10
539: parameter inFilePtr, offset 12
540: call function noellipse-noellipse fread
541: post call
542: call header
543: parameter string_size32025i20total2025i0A#, offset 6
544: parameter size, offset 8
545: £temporary4528 = size * 8
546: parameter £temporary4528, offset 10
547: call function noellipse-ellipse printf, extra 0
548: post call
549: £temporary4530 = size * 8
550: total = £temporary4530
551: call header
552: parameter total, offset 6
553: call function noellipse-noellipse malloc
554: post call
555: £temporary4531 = return_value
556: p = £temporary4531
557: if p != 0 goto 572
558: goto 560
559: check track map float stack
560: call header
561: parameter stderr, offset 6
562: parameter string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#, offset 8
563: parameter string_p20213D20NULL#, offset 10
564: parameter string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CFileTest2Ec#, offset 12
565: parameter 159, offset 14
566: call function noellipse-ellipse fprintf, extra 0
567: post call
568: call header
569: call function noellipse-noellipse abort
570: post call
571: goto 572
572: empty
573: £temporary4536 = size * 8
574: £temporary4537 = p + £temporary4536
575: endPtr = £temporary4537
576: call header
577: parameter string_malloc2025u2025u2025u0A#, offset 6
578: parameter p, offset 8
579: parameter total, offset 10
580: parameter endPtr, offset 12
581: call function noellipse-ellipse printf, extra 0
582: post call
583: call header
584: parameter p, offset 6
585: parameter total, offset 8
586: parameter 1, offset 10
587: parameter inFilePtr, offset 12
588: call function noellipse-noellipse fread
589: post call
590: index = 0
591: empty
592: if index < size goto 595
593: goto 609
594: check track map float stack
595: empty
596: call header
597: parameter string_index32025i3A20value2025f0A#, offset 6
598: parameter index, offset 8
599: £temporary4543 = index * 8
600: £temporary4544 = p + £temporary4543
601: £temporary4542 -> £temporary4544 = *£temporary4544
602: push float £temporary4542 -> £temporary4544
603: parameter £temporary4542 -> £temporary4544, offset 10
604: call function noellipse-ellipse printf, extra 0
605: post call
606: empty
607: index = index + 1
608: goto 591
609: call header
610: parameter string_0A#, offset 6
611: call function noellipse-ellipse printf, extra 0
612: post call
613: call header
614: parameter p, offset 6
615: call function noellipse-noellipse free
616: post call
617: call header
618: parameter inFilePtr, offset 6
619: call function noellipse-noellipse fclose
620: post call
621: personVector[0]$name[0] = 65
622: personVector[0]$name[1] = 100
623: personVector[0]$name[2] = 97
624: personVector[0]$name[3] = 109
625: personVector[0]$name[4] = 32
626: personVector[0]$name[5] = 66
627: personVector[0]$name[6] = 101
628: personVector[0]$name[7] = 114
629: personVector[0]$name[8] = 116
630: personVector[0]$name[9] = 105
631: personVector[0]$name[10] = 108
632: personVector[0]$name[11] = 115
633: personVector[0]$name[12] = 115
634: personVector[0]$name[13] = 111
635: personVector[0]$name[14] = 110
636: personVector[0]$name[15] = 0
637: personVector[0]$phone = 12345
638: personVector[1]$name[0] = 66
639: personVector[1]$name[1] = 101
640: personVector[1]$name[2] = 114
641: personVector[1]$name[3] = 116
642: personVector[1]$name[4] = 105
643: personVector[1]$name[5] = 108
644: personVector[1]$name[6] = 32
645: personVector[1]$name[7] = 67
646: personVector[1]$name[8] = 101
647: personVector[1]$name[9] = 97
648: personVector[1]$name[10] = 115
649: personVector[1]$name[11] = 97
650: personVector[1]$name[12] = 114
651: personVector[1]$name[13] = 115
652: personVector[1]$name[14] = 115
653: personVector[1]$name[15] = 111
654: personVector[1]$name[16] = 110
655: personVector[1]$name[17] = 0
656: personVector[1]$phone = 23456
657: personVector[2]$name[0] = 67
658: personVector[2]$name[1] = 101
659: personVector[2]$name[2] = 97
660: personVector[2]$name[3] = 115
661: personVector[2]$name[4] = 97
662: personVector[2]$name[5] = 114
663: personVector[2]$name[6] = 32
664: personVector[2]$name[7] = 68
665: personVector[2]$name[8] = 97
666: personVector[2]$name[9] = 118
667: personVector[2]$name[10] = 105
668: personVector[2]$name[11] = 100
669: personVector[2]$name[12] = 115
670: personVector[2]$name[13] = 115
671: personVector[2]$name[14] = 111
672: personVector[2]$name[15] = 110
673: personVector[2]$name[16] = 0
674: personVector[2]$phone = 24567
675: call header
676: parameter string_Block2Ebin#, offset 6
677: parameter string_w#, offset 8
678: call function noellipse-noellipse fopen
679: post call
680: £temporary4609 = return_value
681: outFilePtr = £temporary4609
682: if outFilePtr != 0 goto 697
683: goto 685
684: check track map float stack
685: call header
686: parameter stderr, offset 6
687: parameter string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#, offset 8
688: parameter string_outFilePtr20213D20NULL#, offset 10
689: parameter string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CFileTest2Ec#, offset 12
690: parameter 185, offset 14
691: call function noellipse-ellipse fprintf, extra 0
692: post call
693: call header
694: call function noellipse-noellipse abort
695: post call
696: goto 697
697: empty
698: call header
699: parameter personVector, offset 6
700: parameter 150, offset 8
701: parameter 1, offset 10
702: parameter outFilePtr, offset 12
703: call function noellipse-noellipse fwrite
704: post call
705: call header
706: parameter outFilePtr, offset 6
707: call function noellipse-noellipse fclose
708: post call
709: call header
710: parameter string_Block2Ebin#, offset 6
711: parameter string_r#, offset 8
712: call function noellipse-noellipse fopen
713: post call
714: £temporary4616 = return_value
715: inFilePtr = £temporary4616
716: if inFilePtr != 0 goto 731
717: goto 719
718: check track map float stack
719: call header
720: parameter stderr, offset 6
721: parameter string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#, offset 8
722: parameter string_inFilePtr20213D20NULL#, offset 10
723: parameter string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CFileTest2Ec#, offset 12
724: parameter 191, offset 14
725: call function noellipse-ellipse fprintf, extra 0
726: post call
727: call header
728: call function noellipse-noellipse abort
729: post call
730: goto 731
731: empty
732: call header
733: parameter inFilePtr, offset 6
734: call function noellipse-noellipse feof
735: post call
736: £temporary4621 = return_value
737: if £temporary4621 != 0 goto 759
738: goto 740
739: check track map float stack
740: call header
741: £temporary4624 = &person
742: parameter £temporary4624, offset 6
743: parameter 50, offset 8
744: parameter 1, offset 10
745: parameter inFilePtr, offset 12
746: call function noellipse-noellipse fread
747: post call
748: call header
749: parameter string_Name20203A2025s0A#, offset 6
750: parameter person$name, offset 8
751: call function noellipse-ellipse printf, extra 0
752: post call
753: call header
754: parameter string_Phone203A2025d0A#, offset 6
755: parameter person$phone, offset 8
756: call function noellipse-ellipse printf, extra 0
757: post call
758: goto 732
759: call header
760: parameter inFilePtr, offset 6
761: call function noellipse-noellipse fclose
762: post call
763: call header
764: parameter string_Test12Etxt#, offset 6
765: parameter string_r#, offset 8
766: call function noellipse-noellipse fopen
767: post call
768: £temporary4631 = return_value
769: inFilePtr = £temporary4631
770: if inFilePtr != 0 goto 785
771: goto 773
772: check track map float stack
773: call header
774: parameter stderr, offset 6
775: parameter string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#, offset 8
776: parameter string_inFilePtr20213D20NULL#, offset 10
777: parameter string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CFileTest2Ec#, offset 12
778: parameter 204, offset 14
779: call function noellipse-ellipse fprintf, extra 0
780: post call
781: call header
782: call function noellipse-noellipse abort
783: post call
784: goto 785
785: empty
786: call header
787: parameter inFilePtr, offset 6
788: parameter -1, offset 8
789: parameter 2, offset 10
790: call function noellipse-noellipse fseek
791: post call
792: call header
793: parameter inFilePtr, offset 6
794: call function noellipse-noellipse ftell
795: post call
796: £temporary4637 = return_value
797: £temporary4638 = int_to_int £temporary4637 (Signed_Int -> Unsigned_Int)
798: u = £temporary4638
799: if u >= 0 goto 802
800: goto 826
801: check track map float stack
802: call header
803: parameter inFilePtr, offset 6
804: call function noellipse-noellipse fgetc
805: post call
806: £temporary4640 = return_value
807: £temporary4641 = int_to_int £temporary4640 (Signed_Int -> Signed_Char)
808: c = £temporary4641
809: call header
810: £temporary4642 = int_to_int c (Signed_Char -> Signed_Int)
811: parameter £temporary4642, offset 6
812: call function noellipse-noellipse putchar
813: post call
814: if u == 0 goto 817
815: goto 819
816: check track map float stack
817: goto 826
818: goto 819
819: call header
820: parameter inFilePtr, offset 6
821: parameter -2, offset 8
822: parameter 1, offset 10
823: call function noellipse-noellipse fseek
824: post call
825: goto 792
826: call header
827: parameter string_0A0A#, offset 6
828: call function noellipse-ellipse printf, extra 0
829: post call
830: call header
831: parameter inFilePtr, offset 6
832: call function noellipse-noellipse fclose
833: post call
834: call header
835: parameter string_fileexists20X2025s0A#, offset 6
836: call header
837: parameter string_X#, offset 14
838: call function noellipse-noellipse fileexists
839: post call
840: £temporary4648 = return_value
841: if £temporary4648 != 0 goto 843
842: goto 846
843: empty
844: £temporary4653 = string_Yes#
845: goto 848
846: empty
847: £temporary4653 = string_No#
848: empty
849: parameter £temporary4653, offset 8
850: call function noellipse-ellipse printf, extra 0
851: post call
852: call header
853: parameter string_fileexists20Y2025s0A0A#, offset 6
854: call header
855: parameter string_Y#, offset 14
856: call function noellipse-noellipse fileexists
857: post call
858: £temporary4655 = return_value
859: if £temporary4655 != 0 goto 861
860: goto 864
861: empty
862: £temporary4660 = string_Yes#
863: goto 866
864: empty
865: £temporary4660 = string_No#
866: empty
867: parameter £temporary4660, offset 8
868: call function noellipse-ellipse printf, extra 0
869: post call
870: call header
871: parameter string_PBookX2Etxt#, offset 6
872: parameter string_r2B#, offset 8
873: call function noellipse-noellipse fopen
874: post call
875: £temporary4662 = return_value
876: inOutFilePtr = £temporary4662
877: if inOutFilePtr != 0 goto 892
878: goto 880
879: check track map float stack
880: call header
881: parameter stderr, offset 6
882: parameter string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#, offset 8
883: parameter string_inOutFilePtr20213D20NULL#, offset 10
884: parameter string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CFileTest2Ec#, offset 12
885: parameter 228, offset 14
886: call function noellipse-ellipse fprintf, extra 0
887: post call
888: call header
889: call function noellipse-noellipse abort
890: post call
891: goto 892
892: empty
893: call header
894: call function noellipse-noellipse tmpfile
895: post call
896: £temporary4667 = return_value
897: tempFilePtr = £temporary4667
898: if tempFilePtr != 0 goto 913
899: goto 901
900: check track map float stack
901: call header
902: parameter stderr, offset 6
903: parameter string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#, offset 8
904: parameter string_tempFilePtr20213D20NULL#, offset 10
905: parameter string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CFileTest2Ec#, offset 12
906: parameter 231, offset 14
907: call function noellipse-ellipse fprintf, extra 0
908: post call
909: call header
910: call function noellipse-noellipse abort
911: post call
912: goto 913
913: empty
914: goto 916
915: check track map float stack
916: call header
917: parameter inOutFilePtr, offset 6
918: call function noellipse-noellipse fgetc
919: post call
920: £temporary4672 = return_value
921: £temporary4673 = int_to_int £temporary4672 (Signed_Int -> Signed_Char)
922: c = £temporary4673
923: £temporary4674 = int_to_int c (Signed_Char -> Signed_Int)
924: if £temporary4674 == -1 goto 927
925: goto 929
926: check track map float stack
927: goto 941
928: goto 929
929: call header
930: call header
931: £temporary4676 = int_to_int c (Signed_Char -> Signed_Int)
932: parameter £temporary4676, offset 6
933: call function noellipse-noellipse toupper
934: post call
935: £temporary4677 = return_value
936: parameter £temporary4677, offset 6
937: parameter tempFilePtr, offset 8
938: call function noellipse-noellipse putc
939: post call
940: goto 914
941: call header
942: parameter tempFilePtr, offset 6
943: call function noellipse-noellipse rewind
944: post call
945: call header
946: parameter inOutFilePtr, offset 6
947: parameter string_0A2D2D2D2D2D2D2D2D2D2D2D2D0A#, offset 8
948: call function noellipse-ellipse fprintf, extra 0
949: post call
950: goto 952
951: check track map float stack
952: call header
953: parameter tempFilePtr, offset 6
954: call function noellipse-noellipse fgetc
955: post call
956: £temporary4682 = return_value
957: £temporary4683 = int_to_int £temporary4682 (Signed_Int -> Signed_Char)
958: c = £temporary4683
959: £temporary4684 = int_to_int c (Signed_Char -> Signed_Int)
960: if £temporary4684 == -1 goto 963
961: goto 965
962: check track map float stack
963: goto 972
964: goto 965
965: call header
966: £temporary4686 = int_to_int c (Signed_Char -> Signed_Int)
967: parameter £temporary4686, offset 6
968: parameter inOutFilePtr, offset 8
969: call function noellipse-noellipse putc
970: post call
971: goto 950
972: call header
973: parameter inOutFilePtr, offset 6
974: call function noellipse-noellipse fclose
975: post call
976: call header
977: parameter tempFilePtr, offset 6
978: call function noellipse-noellipse fclose
979: post call
980: empty
981: return
982: function end file_test
0: n = 0
1: £temporary4961 = &n
2: p = £temporary4961
3: call header
4: parameter string_3C25i3E203C25i3E203C25li3E203C25li3E203C25u3E203C25lu3E0A0A#, offset 6
5: parameter 123, offset 8
6: parameter -123, offset 10
7: parameter 123, offset 12
8: parameter -123, offset 16
9: parameter 123, offset 20
10: parameter 123, offset 22
11: call function noellipse-ellipse printf, extra 0
12: post call
13: call header
14: parameter string_3C256i3E203C256i3E203C256li3E203C256li3E203C256u3E203C256lu3E0A#, offset 6
15: parameter 123, offset 8
16: parameter -123, offset 10
17: parameter 123, offset 12
18: parameter -123, offset 16
19: parameter 123, offset 20
20: parameter 123, offset 22
21: call function noellipse-ellipse printf, extra 0
22: post call
23: call header
24: parameter string_3C252B6i3E203C252B6i3E203C252B6li3E203C252B6li3E203C252B6u3E203C252B6lu3E0A#, offset 6
25: parameter 123, offset 8
26: parameter -123, offset 10
27: parameter 123, offset 12
28: parameter -123, offset 16
29: parameter 123, offset 20
30: parameter 123, offset 22
31: call function noellipse-ellipse printf, extra 0
32: post call
33: call header
34: parameter string_3C252D6i3E203C252D6i3E203C252D6li3E203C252D6li3E203C252D6u3E203C252D6lu3E0A#, offset 6
35: parameter 123, offset 8
36: parameter -123, offset 10
37: parameter 123, offset 12
38: parameter -123, offset 16
39: parameter 123, offset 20
40: parameter 123, offset 22
41: call function noellipse-ellipse printf, extra 0
42: post call
43: call header
44: parameter string_3C252B2D6i3E203C252B2D6i3E203C252B2D6li3E203C252B2D6li3E203C252B2D6u3E203C252B2D6lu3E0A0A#, offset 6
45: parameter 123, offset 8
46: parameter -123, offset 10
47: parameter 123, offset 12
48: parameter -123, offset 16
49: parameter 123, offset 20
50: parameter 123, offset 22
51: call function noellipse-ellipse printf, extra 0
52: post call
53: call header
54: parameter string_3C2506i3E203C2506i3E203C2506li3E203C2506li3E203C2506u3E203C2506lu3E0A#, offset 6
55: parameter 123, offset 8
56: parameter -123, offset 10
57: parameter 123, offset 12
58: parameter -123, offset 16
59: parameter 123, offset 20
60: parameter 123, offset 22
61: call function noellipse-ellipse printf, extra 0
62: post call
63: call header
64: parameter string_3C252B06i3E203C252B06i3E203C252B06li3E203C252B06li3E203C252B06u3E203C252B06lu3E0A#, offset 6
65: parameter 123, offset 8
66: parameter -123, offset 10
67: parameter 123, offset 12
68: parameter -123, offset 16
69: parameter 123, offset 20
70: parameter 123, offset 22
71: call function noellipse-ellipse printf, extra 0
72: post call
73: call header
74: parameter string_3C252D06i3E203C252D06i3E203C252D06li3E203C252D06li3E203C252D06u3E203C252D06lu3E0A#, offset 6
75: parameter 123, offset 8
76: parameter -123, offset 10
77: parameter 123, offset 12
78: parameter -123, offset 16
79: parameter 123, offset 20
80: parameter 123, offset 22
81: call function noellipse-ellipse printf, extra 0
82: post call
83: call header
84: parameter string_3C252B2D06i3E203C252B2D06i3E203C252B2D06li3E203C252B2D06li3E203C252B2D06u3E203C252B2D06lu3E0A0A#, offset 6
85: parameter 123, offset 8
86: parameter -123, offset 10
87: parameter 123, offset 12
88: parameter -123, offset 16
89: parameter 123, offset 20
90: parameter 123, offset 22
91: call function noellipse-ellipse printf, extra 0
92: post call
93: call header
94: parameter string_3C25206i3E203C25206i3E203C25206li3E203C25206li3E203C25206u3E203C25206lu3E0A#, offset 6
95: parameter 123, offset 8
96: parameter -123, offset 10
97: parameter 123, offset 12
98: parameter -123, offset 16
99: parameter 123, offset 20
100: parameter 123, offset 22
101: call function noellipse-ellipse printf, extra 0
102: post call
103: call header
104: parameter string_3C252B206i3E203C252B206i3E203C252B206li3E203C252B206li3E203C252B206u3E203C252B206lu3E0A#, offset 6
105: parameter 123, offset 8
106: parameter -123, offset 10
107: parameter 123, offset 12
108: parameter -123, offset 16
109: parameter 123, offset 20
110: parameter 123, offset 22
111: call function noellipse-ellipse printf, extra 0
112: post call
113: call header
114: parameter string_3C252D206i3E203C252D206i3E203C252D206li3E203C252D206li3E203C252D206u3E203C252D206lu3E0A#, offset 6
115: parameter 123, offset 8
116: parameter -123, offset 10
117: parameter 123, offset 12
118: parameter -123, offset 16
119: parameter 123, offset 20
120: parameter 123, offset 22
121: call function noellipse-ellipse printf, extra 0
122: post call
123: call header
124: parameter string_3C252B2D206i3E203C252B2D206i3E203C252B2D206li3E203C252B2D206li3E203C252B2D206u3E203C252B2D206lu3E0A0A#, offset 6
125: parameter 123, offset 8
126: parameter -123, offset 10
127: parameter 123, offset 12
128: parameter -123, offset 16
129: parameter 123, offset 20
130: parameter 123, offset 22
131: call function noellipse-ellipse printf, extra 0
132: post call
133: call header
134: parameter string_3C25x3E203C25X3E203C25o3E203C25lx3E203C25lX3E203C25lo3E0A#, offset 6
135: parameter 123, offset 8
136: parameter 123, offset 10
137: parameter 123, offset 12
138: parameter 123, offset 14
139: parameter 123, offset 18
140: parameter 123, offset 22
141: call function noellipse-ellipse printf, extra 0
142: post call
143: call header
144: parameter string_3C2523x3E203C2523X3E203C2523o3E203C2523lx3E203C2523lX3E203C2523lo3E0A#, offset 6
145: parameter 123, offset 8
146: parameter 123, offset 10
147: parameter 123, offset 12
148: parameter 123, offset 14
149: parameter 123, offset 18
150: parameter 123, offset 22
151: call function noellipse-ellipse printf, extra 0
152: post call
153: call header
154: parameter string_3C25253E203C25s3E203C25c3E203C25p3E0A0A#, offset 6
155: parameter string_Hello2C20World21#, offset 8
156: parameter 88, offset 10
157: parameter p, offset 12
158: call function noellipse-ellipse printf, extra 0
159: post call
160: call header
161: parameter string_3C25f3E203C25e3E203C25E3E203C25g3E203C25G3E0A#, offset 6
162: push float 123.456
163: parameter 123.456, offset 8
164: push float 123.456
165: parameter 123.456, offset 16
166: push float 123.456
167: parameter 123.456, offset 24
168: push float 123456.1
169: parameter 123456.1, offset 32
170: push float 123456.1
171: parameter 123456.1, offset 40
172: call function noellipse-ellipse printf, extra 0
173: post call
174: call header
175: parameter string_3C25lf3E203C25le3E203C25lE3E203C25lg3E203C25lG3E0A#, offset 6
176: push float 123.456
177: parameter 123.456, offset 8
178: push float 123.456
179: parameter 123.456, offset 16
180: push float 123.456
181: parameter 123.456, offset 24
182: push float 123456.1
183: parameter 123456.1, offset 32
184: push float 123456.1
185: parameter 123456.1, offset 40
186: call function noellipse-ellipse printf, extra 0
187: post call
188: call header
189: parameter string_3C2523f3E203C2523e3E203C2523E3E203C2523g3E203C2523G3E0A#, offset 6
190: push float 123.456
191: parameter 123.456, offset 8
192: push float 123.456
193: parameter 123.456, offset 16
194: push float 123.456
195: parameter 123.456, offset 24
196: push float 123.456
197: parameter 123.456, offset 32
198: push float 123.456
199: parameter 123.456, offset 40
200: call function noellipse-ellipse printf, extra 0
201: post call
202: call header
203: parameter string_3C2523lf3E203C2523le3E203C2523lE3E203C2523lg3E203C2523lG3E0A#, offset 6
204: push float 123.456
205: parameter 123.456, offset 8
206: push float 123.456
207: parameter 123.456, offset 16
208: push float 123.456
209: parameter 123.456, offset 24
210: push float 123.456
211: parameter 123.456, offset 32
212: push float 123.456
213: parameter 123.456, offset 40
214: call function noellipse-ellipse printf, extra 0
215: post call
216: call header
217: parameter string_3C2562E3f3E203C2562E3e3E203C2562E3E3E203C2562E3g3E203C2562E3G3E0A#, offset 6
218: push float 123.456
219: parameter 123.456, offset 8
220: push float 123.456
221: parameter 123.456, offset 16
222: push float 123.456
223: parameter 123.456, offset 24
224: push float 123.456
225: parameter 123.456, offset 32
226: push float 123.456
227: parameter 123.456, offset 40
228: call function noellipse-ellipse printf, extra 0
229: post call
230: call header
231: parameter string_3C2562E3lf3E203C2562E3le3E203C2562E3lE3E203C2562E3lg3E203C2562E3lG3E0A0A#, offset 6
232: push float 123.456
233: parameter 123.456, offset 8
234: push float 123.456
235: parameter 123.456, offset 16
236: push float 123.456
237: parameter 123.456, offset 24
238: push float 123.456
239: parameter 123.456, offset 32
240: push float 123.456
241: parameter 123.456, offset 40
242: call function noellipse-ellipse printf, extra 0
243: post call
244: call header
245: parameter string_3C25f3E203C25e3E203C25E3E203C25g3E203C25G3E0A#, offset 6
246: push float -123.456
247: parameter -123.456, offset 8
248: push float -123.456
249: parameter -123.456, offset 16
250: push float -123.456
251: parameter -123.456, offset 24
252: push float -0.000000123456
253: parameter -0.000000123456, offset 32
254: push float -0.000000123456
255: parameter -0.000000123456, offset 40
256: call function noellipse-ellipse printf, extra 0
257: post call
258: call header
259: parameter string_3C25lf3E203C25le3E203C25lE3E203C25lg3E203C25lG3E0A#, offset 6
260: push float -123.456
261: parameter -123.456, offset 8
262: push float -123.456
263: parameter -123.456, offset 16
264: push float -123.456
265: parameter -123.456, offset 24
266: push float -0.000000123456
267: parameter -0.000000123456, offset 32
268: push float -0.000000123456
269: parameter -0.000000123456, offset 40
270: call function noellipse-ellipse printf, extra 0
271: post call
272: call header
273: parameter string_3C2523f3E203C2523e3E203C2523E3E203C2523g3E203C2523G3E0A#, offset 6
274: push float -123.456
275: parameter -123.456, offset 8
276: push float -123.456
277: parameter -123.456, offset 16
278: push float -123.456
279: parameter -123.456, offset 24
280: push float -123.456
281: parameter -123.456, offset 32
282: push float -123.456
283: parameter -123.456, offset 40
284: call function noellipse-ellipse printf, extra 0
285: post call
286: call header
287: parameter string_3C2523lf3E203C2523le3E203C2523lE3E203C2523lg3E203C2523lG3E0A#, offset 6
288: push float -123.456
289: parameter -123.456, offset 8
290: push float -123.456
291: parameter -123.456, offset 16
292: push float -123.456
293: parameter -123.456, offset 24
294: push float -123.456
295: parameter -123.456, offset 32
296: push float -123.456
297: parameter -123.456, offset 40
298: call function noellipse-ellipse printf, extra 0
299: post call
300: call header
301: parameter string_3C2562E3f3E203C2562E3e3E203C2562E3E3E203C2562E3g3E203C2562E3G3E0A#, offset 6
302: push float -123.456
303: parameter -123.456, offset 8
304: push float -123.456
305: parameter -123.456, offset 16
306: push float -123.456
307: parameter -123.456, offset 24
308: push float -123.456
309: parameter -123.456, offset 32
310: push float -123.456
311: parameter -123.456, offset 40
312: call function noellipse-ellipse printf, extra 0
313: post call
314: call header
315: parameter string_3C2562E3lf3E203C2562E3le3E203C2562E3lE3E203C2562E3lg3E203C2562E3lG3E0A0A#, offset 6
316: push float -123.456
317: parameter -123.456, offset 8
318: push float -123.456
319: parameter -123.456, offset 16
320: push float -123.456
321: parameter -123.456, offset 24
322: push float -123.456
323: parameter -123.456, offset 32
324: push float -123.456
325: parameter -123.456, offset 40
326: call function noellipse-ellipse printf, extra 0
327: post call
328: call header
329: parameter string_Please20write20the20patterns205Babc5D3A20#, offset 6
330: call function noellipse-ellipse printf, extra 0
331: post call
332: call header
333: parameter string_255Babc5D#, offset 6
334: parameter s, offset 8
335: call function noellipse-ellipse scanf, extra 0
336: post call
337: call header
338: parameter string_0A3C25s3E0A#, offset 6
339: parameter s, offset 8
340: call function noellipse-ellipse printf, extra 0
341: post call
342: call header
343: parameter string_Please20write20the20patterns205B5Eabc5D3A20#, offset 6
344: call function noellipse-ellipse printf, extra 0
345: post call
346: call header
347: parameter string_255B5Eabc5D#, offset 6
348: parameter s, offset 8
349: call function noellipse-ellipse scanf, extra 0
350: post call
351: call header
352: parameter string_0A3C25s3E#, offset 6
353: parameter s, offset 8
354: call function noellipse-ellipse printf, extra 0
355: post call
356: empty
357: return
358: function end stdio_test
0: call header
1: parameter string_Floating20point20error3A2025i0A#, offset 6
2: parameter sig, offset 8
3: call function noellipse-ellipse printf, extra 0
4: post call
5: empty
6: return
7: function end floating_point_error
0: call header
1: parameter string_exit10A#, offset 6
2: call function noellipse-ellipse printf, extra 0
3: post call
4: empty
5: return
6: function end exit_handle1
0: call header
1: parameter string_exit20A#, offset 6
2: call function noellipse-ellipse printf, extra 0
3: post call
4: empty
5: return
6: function end exit_handle2
0: call header
1: parameter string_exit30A#, offset 6
2: call function noellipse-ellipse printf, extra 0
3: post call
4: empty
5: return
6: function end exit_handle3
0: a = 1
1: b = 1
2: £temporary5197 = a / b
3: c = £temporary5197
4: call header
5: parameter string_25i0A#, offset 6
6: parameter c, offset 8
7: call function noellipse-ellipse printf, extra 0
8: post call
9: call header
10: parameter exit_handle1, offset 6
11: call function noellipse-noellipse atexit
12: post call
13: call header
14: parameter exit_handle2, offset 6
15: call function noellipse-noellipse atexit
16: post call
17: call header
18: parameter exit_handle3, offset 6
19: call function noellipse-noellipse atexit
20: post call
21: call header
22: parameter 0, offset 6
23: call function noellipse-noellipse exit
24: post call
25: empty
26: return
27: function end signal_test
0: call header
1: parameter string_25i20#, offset 6
2: £temporary5209 = i
3: i = i + 1
4: parameter £temporary5209, offset 8
5: call function noellipse-ellipse printf, extra 0
6: post call
7: call header
8: call function noellipse-noellipse stack_test
9: post call
10: empty
11: return
12: function end stack_test
0: count = 0
1: call header
2: parameter 1024, offset 6
3: call function noellipse-noellipse malloc
4: post call
5: £temporary5214 = return_value
6: pointer = £temporary5214
7: if pointer != 0 goto 10
8: goto 19
9: check track map float stack
10: call header
11: parameter string_102420bytes2Dblock20number3A2025i0A#, offset 6
12: £temporary5216 = count
13: count = count + 1
14: parameter £temporary5216, offset 8
15: parameter pointer, offset 10
16: call function noellipse-ellipse printf, extra 0
17: post call
18: goto 1
19: empty
20: return
21: function end heap_test
0: p = 0
1: r = 0
2: call header
3: parameter 96, offset 6
4: call function noellipse-noellipse malloc
5: post call
6: £temporary5222 = return_value
7: q = £temporary5222
8: index = 0
9: empty
10: if index < 10 goto 13
11: goto 28
12: check track map float stack
13: empty
14: call header
15: parameter 96, offset 6
16: call function noellipse-noellipse malloc
17: post call
18: £temporary5225 = return_value
19: p = £temporary5225
20: if index == 5 goto 23
21: goto 25
22: check track map float stack
23: r = p
24: goto 25
25: empty
26: index = index + 1
27: goto 9
28: call header
29: call function noellipse-noellipse print_heap
30: post call
31: call header
32: parameter q, offset 6
33: parameter 50, offset 8
34: call function noellipse-noellipse realloc
35: post call
36: call header
37: call function noellipse-noellipse print_heap
38: post call
39: call header
40: parameter r, offset 6
41: parameter 50, offset 8
42: call function noellipse-noellipse realloc
43: post call
44: call header
45: call function noellipse-noellipse print_heap
46: post call
47: call header
48: parameter p, offset 6
49: parameter 50, offset 8
50: call function noellipse-noellipse realloc
51: post call
52: call header
53: call function noellipse-noellipse print_heap
54: post call
55: call header
56: parameter q, offset 6
57: parameter 200, offset 8
58: call function noellipse-noellipse realloc
59: post call
60: call header
61: call function noellipse-noellipse print_heap
62: post call
63: call header
64: parameter r, offset 6
65: parameter 200, offset 8
66: call function noellipse-noellipse realloc
67: post call
68: call header
69: call function noellipse-noellipse print_heap
70: post call
71: call header
72: parameter p, offset 6
73: parameter 200, offset 8
74: call function noellipse-noellipse realloc
75: post call
76: call header
77: call function noellipse-noellipse print_heap
78: post call
79: empty
80: return
81: function end malloc_test2
0: call header
1: parameter 96, offset 6
2: parameter 1, offset 8
3: call function noellipse-noellipse calloc
4: post call
5: £temporary5254 = return_value
6: a = £temporary5254
7: call header
8: parameter 96, offset 6
9: parameter 1, offset 8
10: call function noellipse-noellipse calloc
11: post call
12: £temporary5255 = return_value
13: b = £temporary5255
14: call header
15: parameter 96, offset 6
16: parameter 1, offset 8
17: call function noellipse-noellipse calloc
18: post call
19: £temporary5256 = return_value
20: c = £temporary5256
21: call header
22: parameter 96, offset 6
23: parameter 1, offset 8
24: call function noellipse-noellipse calloc
25: post call
26: £temporary5257 = return_value
27: d = £temporary5257
28: call header
29: parameter 96, offset 6
30: parameter 1, offset 8
31: call function noellipse-noellipse calloc
32: post call
33: £temporary5258 = return_value
34: e = £temporary5258
35: call header
36: call function noellipse-noellipse print_heap
37: post call
38: call header
39: parameter a, offset 6
40: call function noellipse-noellipse free
41: post call
42: call header
43: parameter b, offset 6
44: call function noellipse-noellipse free
45: post call
46: call header
47: parameter c, offset 6
48: call function noellipse-noellipse free
49: post call
50: call header
51: parameter d, offset 6
52: call function noellipse-noellipse free
53: post call
54: call header
55: parameter e, offset 6
56: call function noellipse-noellipse free
57: post call
58: call header
59: call function noellipse-noellipse print_heap
60: post call
61: empty
62: return
63: function end malloc_test3
0: £temporary5281 = bp
1: stackTop = £temporary5281
2: lowHeapPtr = 65534
3: call header
4: parameter string_Stack20Top3A2025u2C20Low20Heap3A2025u0A#, offset 6
5: parameter stackTop, offset 8
6: £temporary5282 -> lowHeapPtr = *lowHeapPtr
7: parameter £temporary5282 -> lowHeapPtr, offset 10
8: call function noellipse-ellipse printf, extra 0
9: post call
10: call header
11: call function noellipse-noellipse rec
12: post call
13: empty
14: return
15: function end rec
0: call header
1: call function noellipse-noellipse rec
2: post call
3: empty
4: return
5: function end malloc_test4
0: call header
1: parameter 96, offset 6
2: call function noellipse-noellipse malloc
3: post call
4: £temporary5289 = return_value
5: b = £temporary5289
6: call header
7: parameter 96, offset 6
8: call function noellipse-noellipse malloc
9: post call
10: £temporary5290 = return_value
11: c = £temporary5290
12: call header
13: parameter 96, offset 6
14: call function noellipse-noellipse malloc
15: post call
16: £temporary5291 = return_value
17: d = £temporary5291
18: call header
19: call function noellipse-noellipse print_heap
20: post call
21: call header
22: parameter c, offset 6
23: parameter 40, offset 8
24: call function noellipse-noellipse realloc
25: post call
26: call header
27: call function noellipse-noellipse print_heap
28: post call
29: call header
30: parameter 40, offset 6
31: call function noellipse-noellipse malloc
32: post call
33: call header
34: call function noellipse-noellipse print_heap
35: post call
36: call header
37: parameter b, offset 6
38: call function noellipse-noellipse free
39: post call
40: call header
41: call function noellipse-noellipse print_heap
42: post call
43: call header
44: parameter d, offset 6
45: call function noellipse-noellipse free
46: post call
47: call header
48: call function noellipse-noellipse print_heap
49: post call
50: empty
51: return
52: function end malloc_test
0: £temporary5309 = bp
1: stackTop = £temporary5309
2: lowHeapPtr = 65534
3: i = 0
4: empty
5: if i < 1000 goto 8
6: goto 27
7: check track map float stack
8: empty
9: call header
10: parameter 96, offset 6
11: call function noellipse-noellipse malloc
12: post call
13: £temporary5312 = return_value
14: p = £temporary5312
15: call header
16: parameter string_Index3A2025i2C20Pointer3A2025u2C20Stack20top3A2025u2C20Low20Heap3A2025u0A#, offset 6
17: parameter i, offset 8
18: parameter p, offset 10
19: parameter stackTop, offset 12
20: £temporary5313 -> lowHeapPtr = *lowHeapPtr
21: parameter £temporary5313 -> lowHeapPtr, offset 14
22: call function noellipse-ellipse printf, extra 0
23: post call
24: empty
25: i = i + 1
26: goto 4
27: empty
28: return
29: function end malloc_test6
0: £temporary5321 = int_to_int valuePtr1 (Pointer -> Pointer)
1: £temporary5322 -> £temporary5321 = *£temporary5321
2: intValue1 = £temporary5322 -> £temporary5321
3: £temporary5323 = int_to_int valuePtr2 (Pointer -> Pointer)
4: £temporary5324 -> £temporary5323 = *£temporary5323
5: intValue2 = £temporary5324 -> £temporary5323
6: if intValue1 < intValue2 goto 8
7: goto 11
8: empty
9: £temporary5334 = -1
10: goto 21
11: empty
12: if intValue1 == intValue2 goto 14
13: goto 17
14: empty
15: £temporary5330 = 0
16: goto 19
17: empty
18: £temporary5330 = 1
19: empty
20: £temporary5334 = £temporary5330
21: empty
22: return_value = £temporary5334
23: return
24: empty
25: return
26: function end compare
0: £temporary5335 = int_to_int valuePtr1 (Pointer -> Pointer)
1: £temporary5336 -> £temporary5335 = *£temporary5335
2: intValue1 = £temporary5336 -> £temporary5335
3: £temporary5337 = int_to_int valuePtr2 (Pointer -> Pointer)
4: £temporary5338 -> £temporary5337 = *£temporary5337
5: intValue2 = £temporary5338 -> £temporary5337
6: if intValue1 < intValue2 goto 8
7: goto 11
8: empty
9: £temporary5348 = 1
10: goto 21
11: empty
12: if intValue1 == intValue2 goto 14
13: goto 17
14: empty
15: £temporary5344 = 0
16: goto 19
17: empty
18: £temporary5344 = -1
19: empty
20: £temporary5348 = £temporary5344
21: empty
22: return_value = £temporary5348
23: return
24: empty
25: return
26: function end reverse_compare
0: call header
1: parameter string_div_t20quot2025i20rem2025i0A#, offset 6
2: parameter d$quot, offset 8
3: parameter d$rem, offset 10
4: call function noellipse-ellipse printf, extra 0
5: post call
6: empty
7: return
8: function end print_div
0: call header
1: parameter string_ldiv_t20quot2025li20rem2025li0A#, offset 6
2: parameter ld$quot, offset 8
3: parameter ld$rem, offset 12
4: call function noellipse-ellipse printf, extra 0
5: post call
6: empty
7: return
8: function end print_ldiv
0: call header
1: parameter string_exit10A#, offset 6
2: call function noellipse-ellipse printf, extra 0
3: post call
4: empty
5: return
6: function end exit_handle1x
0: call header
1: parameter string_exit20A#, offset 6
2: call function noellipse-ellipse printf, extra 0
3: post call
4: empty
5: return
6: function end exit_handle2x
0: call header
1: parameter string_exit30A#, offset 6
2: call function noellipse-ellipse printf, extra 0
3: post call
4: empty
5: return
6: function end exit_handle3x
0: p = s
1: q = t
2: r = w
3: call header
4: parameter string_1232E456abc#, offset 6
5: £temporary5367 = &p
6: parameter £temporary5367, offset 8
7: call function noellipse-noellipse strtod
8: post call
9: £temporary5368 = return_value
10: pop float x
11: call header
12: parameter string_1232E456#, offset 6
13: call function noellipse-noellipse atof
14: post call
15: £temporary5369 = return_value
16: pop float y
17: call header
18: parameter string_123abc#, offset 6
19: £temporary5370 = &q
20: parameter £temporary5370, offset 8
21: parameter 8, offset 10
22: call function noellipse-noellipse strtol
23: post call
24: £temporary5371 = return_value
25: l = £temporary5371
26: call header
27: parameter string_123abc#, offset 6
28: £temporary5372 = &r
29: parameter £temporary5372, offset 8
30: parameter 8, offset 10
31: call function noellipse-noellipse strtoul
32: post call
33: £temporary5373 = return_value
34: ul = £temporary5373
35: call header
36: parameter string_atof28221232E4562229203D2025f0A#, offset 6
37: push float y
38: parameter y, offset 8
39: call function noellipse-ellipse printf, extra 0
40: post call
41: call header
42: parameter string_atoi28221232229203D2025i0A#, offset 6
43: call header
44: parameter string_123#, offset 14
45: call function noellipse-noellipse atoi
46: post call
47: £temporary5375 = return_value
48: parameter £temporary5375, offset 8
49: call function noellipse-ellipse printf, extra 0
50: post call
51: call header
52: parameter string_atol28221232229203D2025li0A0A#, offset 6
53: call header
54: parameter string_123#, offset 14
55: call function noellipse-noellipse atol
56: post call
57: £temporary5377 = return_value
58: parameter £temporary5377, offset 8
59: call function noellipse-ellipse printf, extra 0
60: post call
61: call header
62: parameter string_strtod28221232E456abc222C2026endp29203D202825f2C2025s290A#, offset 6
63: push float x
64: parameter x, offset 8
65: parameter p, offset 16
66: call function noellipse-ellipse printf, extra 0
67: post call
68: call header
69: parameter string_strtol2822123abc222C2026endp29203D202825li2C2025s290A#, offset 6
70: parameter l, offset 8
71: parameter q, offset 12
72: call function noellipse-ellipse printf, extra 0
73: post call
74: call header
75: parameter string_strtoul2822123abc222C2026endp29203D202825lu2C2025s290A#, offset 6
76: parameter ul, offset 8
77: parameter r, offset 12
78: call function noellipse-ellipse printf, extra 0
79: post call
80: call header
81: parameter string_0Agetenv2822path2229203D2025s0A#, offset 6
82: call header
83: parameter string_path#, offset 14
84: call function noellipse-noellipse getenv
85: post call
86: £temporary5382 = return_value
87: parameter £temporary5382, offset 8
88: call function noellipse-ellipse printf, extra 0
89: post call
90: call header
91: parameter string_system2822dir22290A#, offset 6
92: call function noellipse-ellipse printf, extra 0
93: post call
94: call header
95: parameter string_dir#, offset 6
96: call function noellipse-noellipse system
97: post call
98: call header
99: parameter string_abs282D329203D2025i2C20abs28329203D2025i2C20labs282D3l29203D2025li2C20labs283l29203D2025li0A#, offset 6
100: call header
101: parameter -3, offset 14
102: call function noellipse-noellipse abs
103: post call
104: £temporary5386 = return_value
105: parameter £temporary5386, offset 8
106: call header
107: parameter 3, offset 16
108: call function noellipse-noellipse abs
109: post call
110: £temporary5387 = return_value
111: parameter £temporary5387, offset 10
112: call header
113: parameter -3, offset 18
114: call function noellipse-noellipse labs
115: post call
116: £temporary5388 = return_value
117: parameter £temporary5388, offset 12
118: call header
119: parameter 3, offset 22
120: call function noellipse-noellipse labs
121: post call
122: £temporary5389 = return_value
123: parameter £temporary5389, offset 16
124: call function noellipse-ellipse printf, extra 0
125: post call
126: call header
127: parameter 10, offset 6
128: parameter 3, offset 8
129: call function noellipse-noellipse div
130: post call
131: £temporary5391 -> £temporary5392 = return_value
132: i = £temporary5391 -> £temporary5392
133: call header
134: parameter string_div_t28102C20329203D202825i2C2025i292C0A#, offset 6
135: parameter i$quot, offset 8
136: parameter i$rem, offset 10
137: call function noellipse-ellipse printf, extra 0
138: post call
139: call header
140: parameter i, offset 6
141: call function noellipse-noellipse print_div
142: post call
143: call header
144: parameter 10, offset 6
145: parameter 3, offset 10
146: call function noellipse-noellipse ldiv
147: post call
148: £temporary5397 -> £temporary5398 = return_value
149: li = £temporary5397 -> £temporary5398
150: call header
151: parameter string_ldiv_t28102C20329203D202825li2C2025li290A#, offset 6
152: parameter li$quot, offset 8
153: parameter li$rem, offset 12
154: call function noellipse-ellipse printf, extra 0
155: post call
156: call header
157: parameter li, offset 6
158: call function noellipse-noellipse print_ldiv
159: post call
160: list[0] = 3
161: list[1] = 4
162: list[2] = 2
163: list[3] = 1
164: size = 4
165: call header
166: parameter string_0AA20List2013A20#, offset 6
167: call function noellipse-ellipse printf, extra 0
168: post call
169: index = 0
170: empty
171: if index < size goto 174
172: goto 186
173: check track map float stack
174: empty
175: call header
176: parameter string_25i20#, offset 6
177: £temporary5411 = index * 2
178: £temporary5412 = £temporary5411 + list
179: £temporary5413 -> £temporary5412 = *£temporary5412
180: parameter £temporary5413 -> £temporary5412, offset 8
181: call function noellipse-ellipse printf, extra 0
182: post call
183: empty
184: index = index + 1
185: goto 170
186: call header
187: parameter string_0AB20List2023A20#, offset 6
188: call function noellipse-ellipse printf, extra 0
189: post call
190: call header
191: parameter list, offset 6
192: parameter size, offset 8
193: parameter 2, offset 10
194: parameter reverse_compare, offset 12
195: call function noellipse-ellipse qsort, extra 0
196: post call
197: index = 0
198: empty
199: if index < size goto 202
200: goto 214
201: check track map float stack
202: empty
203: call header
204: parameter string_25i20#, offset 6
205: £temporary5420 = index * 2
206: £temporary5421 = list + £temporary5420
207: £temporary5422 -> £temporary5421 = *£temporary5421
208: parameter £temporary5422 -> £temporary5421, offset 8
209: call function noellipse-ellipse printf, extra 0
210: post call
211: empty
212: index = index + 1
213: goto 198
214: call header
215: parameter string_0AC20List2033A20#, offset 6
216: call function noellipse-ellipse printf, extra 0
217: post call
218: call header
219: parameter list, offset 6
220: parameter size, offset 8
221: parameter 2, offset 10
222: parameter compare, offset 12
223: call function noellipse-ellipse qsort, extra 0
224: post call
225: index = 0
226: empty
227: if index < size goto 230
228: goto 242
229: check track map float stack
230: empty
231: call header
232: parameter string_25i20#, offset 6
233: £temporary5429 = index * 2
234: £temporary5430 = list + £temporary5429
235: £temporary5431 -> £temporary5430 = *£temporary5430
236: parameter £temporary5431 -> £temporary5430, offset 8
237: call function noellipse-ellipse printf, extra 0
238: post call
239: empty
240: index = index + 1
241: goto 226
242: empty
243: call header
244: parameter string_0A0ASearch3A0A#, offset 6
245: call function noellipse-ellipse printf, extra 0
246: post call
247: key = 0
248: empty
249: if key < 6 goto 252
250: goto 285
251: check track map float stack
252: empty
253: call header
254: £temporary5436 = &key
255: parameter £temporary5436, offset 6
256: parameter list, offset 8
257: parameter size, offset 10
258: parameter 2, offset 12
259: parameter compare, offset 14
260: call function noellipse-noellipse bsearch
261: post call
262: £temporary5438 = return_value
263: £temporary5439 = int_to_int £temporary5438 (Pointer -> Pointer)
264: p = £temporary5439
265: if p != 0 goto 267
266: goto 272
267: empty
268: £temporary5441 = p - list
269: £temporary5442 = £temporary5441 / 2
270: £temporary5446 = £temporary5442
271: goto 274
272: empty
273: £temporary5446 = -1
274: empty
275: index = £temporary5446
276: call header
277: parameter string_20202825i2C2025i290A#, offset 6
278: parameter key, offset 8
279: parameter index, offset 10
280: call function noellipse-ellipse printf, extra 0
281: post call
282: empty
283: key = key + 1
284: goto 248
285: call header
286: parameter string_0A#, offset 6
287: call function noellipse-ellipse printf, extra 0
288: post call
289: empty
290: return
291: function end stdlib_test
0: weekdays[0] = string_Sun#
1: weekdays[1] = string_Mon#
2: weekdays[2] = string_Tue#
3: weekdays[3] = string_Wed#
4: weekdays[4] = string_Thu#
5: weekdays[5] = string_Fri#
6: weekdays[6] = string_Sat#
7: call header
8: parameter 0, offset 6
9: call function noellipse-noellipse time
10: post call
11: £temporary5545 = return_value
12: now = £temporary5545
13: call header
14: £temporary5546 = &now
15: parameter £temporary5546, offset 6
16: call function noellipse-noellipse gmtime
17: post call
18: £temporary5547 = return_value
19: p = £temporary5547
20: call header
21: parameter p, offset 6
22: call function noellipse-noellipse mktime
23: post call
24: £temporary5548 = return_value
25: now2 = £temporary5548
26: call header
27: parameter string_now2013A2025lu0A#, offset 6
28: parameter now, offset 8
29: call function noellipse-ellipse printf, extra 0
30: post call
31: call header
32: parameter string_now2023A2025lu0A#, offset 6
33: parameter now2, offset 8
34: call function noellipse-ellipse printf, extra 0
35: post call
36: £temporary5551 -> p = *p
37: s = £temporary5551 -> p
38: call header
39: parameter string_202020gm20time3A2025s202502i2D2502i2D2502i202502i3A2502i3A2502i2C20year20day2025i2C20week20day2025i2C20daylight20saving20time2025i0A#, offset 6
40: £temporary5554 = s$tm_wday * 2
41: £temporary5555 = weekdays + £temporary5554
42: £temporary5553 -> £temporary5555 = *£temporary5555
43: parameter £temporary5553 -> £temporary5555, offset 8
44: £temporary5557 = 1900 + s$tm_year
45: parameter £temporary5557, offset 10
46: £temporary5559 = s$tm_mon + 1
47: parameter £temporary5559, offset 12
48: parameter s$tm_mday, offset 14
49: parameter s$tm_hour, offset 16
50: parameter s$tm_min, offset 18
51: parameter s$tm_sec, offset 20
52: parameter s$tm_yday, offset 22
53: parameter s$tm_wday, offset 24
54: parameter s$tm_isdst, offset 26
55: call function noellipse-ellipse printf, extra 0
56: post call
57: call header
58: £temporary5568 = &now
59: parameter £temporary5568, offset 6
60: call function noellipse-noellipse localtime
61: post call
62: £temporary5569 = return_value
63: £temporary5570 -> £temporary5569 = *£temporary5569
64: s = £temporary5570 -> £temporary5569
65: call header
66: parameter string_local20time3A2025s202502i2D2502i2D2502i202502i3A2502i3A2502i2C20year20day2025i2C20week20day2025i2C20daylight20saving20time2025i0A#, offset 6
67: £temporary5573 = s$tm_wday * 2
68: £temporary5574 = weekdays + £temporary5573
69: £temporary5572 -> £temporary5574 = *£temporary5574
70: parameter £temporary5572 -> £temporary5574, offset 8
71: £temporary5576 = 1900 + s$tm_year
72: parameter £temporary5576, offset 10
73: £temporary5578 = s$tm_mon + 1
74: parameter £temporary5578, offset 12
75: parameter s$tm_mday, offset 14
76: parameter s$tm_hour, offset 16
77: parameter s$tm_min, offset 18
78: parameter s$tm_sec, offset 20
79: parameter s$tm_yday, offset 22
80: parameter s$tm_wday, offset 24
81: parameter s$tm_isdst, offset 26
82: call function noellipse-ellipse printf, extra 0
83: post call
84: call header
85: parameter buffer1, offset 6
86: call header
87: £temporary5587 = &s
88: parameter £temporary5587, offset 112
89: call function noellipse-noellipse asctime
90: post call
91: £temporary5588 = return_value
92: parameter £temporary5588, offset 8
93: call function noellipse-noellipse strcpy
94: post call
95: call header
96: parameter buffer2, offset 6
97: call header
98: £temporary5590 = &now
99: parameter £temporary5590, offset 112
100: call function noellipse-noellipse ctime
101: post call
102: £temporary5591 = return_value
103: parameter £temporary5591, offset 8
104: call function noellipse-noellipse strcpy
105: post call
106: call header
107: parameter string_asctime203C25s3E2C20ctime203C25s3E0A#, offset 6
108: parameter buffer1, offset 8
109: parameter buffer2, offset 10
110: call function noellipse-ellipse printf, extra 0
111: post call
112: call header
113: parameter buffer, offset 6
114: parameter 300, offset 8
115: parameter string_short20day2025a2C20long20day2025A2C20short20month2025b2C20long20month2025B2C20date2Dtime2025c2C20mday2025d2C20hour2025H2C20gm20hour2025I2C20yday2025j2C20month2025m2C20min2025M2C20am2Fpm2025p2C20sec2025S2C20week20number20sun2025U2C20week20day2025w2C20week20number20mon2025W2C20date2025x2C20time2025X2C20short20year2025y2C20long20year2025Y#, offset 10
116: £temporary5594 = &s
117: parameter £temporary5594, offset 12
118: call function noellipse-noellipse strftime
119: post call
120: £temporary5595 = return_value
121: i = £temporary5595
122: call header
123: parameter string_strftime203C25i3E203C25s3E0A#, offset 6
124: parameter i, offset 8
125: parameter buffer, offset 10
126: call function noellipse-ellipse printf, extra 0
127: post call
128: empty
129: return
130: function end time_test
