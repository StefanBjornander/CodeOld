0: a$p = 0
1: a$q = 0
2: call header
3: parameter string_test12Etxt#, offset 6
4: parameter string_test22Etxt#, offset 8
5: call function noellipse-noellipse file_test
6: post call
7: empty
8: return
9: function end main2
0: s[0] = 72
1: s[1] = 101
2: s[2] = 108
3: s[3] = 108
4: s[4] = 111
5: s[5] = 0
6: t[0] = 87
7: t[1] = 111
8: t[2] = 114
9: t[3] = 108
10: t[4] = 100
11: t[5] = 0
12: call header
13: parameter string_3C25s3E203C25s3E0A#, offset 6
14: parameter s, offset 8
15: parameter t, offset 10
16: call function noellipse-ellipse printf, extra 0
17: post call
18: empty
19: return
20: function end main33
0: g_outDevice = stdout
1: call header
2: parameter 88, offset 6
3: call function noellipse-noellipse printChar
4: post call
5: call header
6: parameter 10, offset 6
7: call function noellipse-noellipse printChar
8: post call
9: empty
10: return
11: function end main34
0: call header
1: parameter string_Please20write20a20character3A20#, offset 6
2: call function noellipse-ellipse printf, extra 0
3: post call
4: call header
5: parameter string_25c#, offset 6
6: £temporary26 = &c
7: parameter £temporary26, offset 8
8: call function noellipse-ellipse scanf, extra 0
9: post call
10: call header
11: parameter string_You20wrote20the20character202725c272E0A#, offset 6
12: £temporary28 = int_to_int c (Signed_Char -> Signed_Int)
13: parameter £temporary28, offset 8
14: call function noellipse-ellipse printf, extra 0
15: post call
16: empty
17: return
18: function end mainc
0: call header
1: parameter string_Please20write20an20integer3A20#, offset 6
2: call function noellipse-ellipse printf, extra 0
3: post call
4: call header
5: parameter string_25i#, offset 6
6: £temporary37 = &i
7: parameter £temporary37, offset 8
8: call function noellipse-ellipse scanf, extra 0
9: post call
10: call header
11: parameter string_You20wrote20the20integer2025i2E0A#, offset 6
12: parameter i, offset 8
13: call function noellipse-ellipse printf, extra 0
14: post call
15: empty
16: return
17: function end maini
0: call header
1: parameter string_Please20write20a20string3A20#, offset 6
2: call function noellipse-ellipse printf, extra 0
3: post call
4: call header
5: parameter string_25s#, offset 6
6: parameter s, offset 8
7: call function noellipse-ellipse scanf, extra 0
8: post call
9: call header
10: parameter string_You20wrote20the20string202225s222E0A#, offset 6
11: parameter s, offset 8
12: call function noellipse-ellipse printf, extra 0
13: post call
14: empty
15: return
16: function end mains
0: call header
1: call function noellipse-noellipse limits_test
2: post call
3: call header
4: call function noellipse-noellipse time_test
5: post call
6: empty
7: return
8: function end maint
0: call header
1: call function noellipse-noellipse malloc_test
2: post call
3: call header
4: push float 10
5: parameter 10, offset 6
6: call function noellipse-noellipse setjmp_test
7: post call
8: call header
9: push 0
10: parameter 0, offset 6
11: call function noellipse-noellipse setjmp_test
12: post call
13: empty
14: return
15: function end mainY
0: index = 129
1: empty
2: if index < 255 goto 5
3: goto 21
4: check track map float stack
5: empty
6: £temporary63 = int_to_int index (Signed_Int -> Pointer)
7: £temporary64 -> £temporary63 = *£temporary63
8: c = £temporary64 -> £temporary63
9: call header
10: parameter string_25i3A2025i203C25c3E0A#, offset 6
11: parameter index, offset 8
12: £temporary65 = int_to_int c (Signed_Char -> Signed_Int)
13: parameter £temporary65, offset 10
14: £temporary66 = int_to_int c (Signed_Char -> Signed_Int)
15: parameter £temporary66, offset 12
16: call function noellipse-ellipse printf, extra 0
17: post call
18: empty
19: index = index + 1
20: goto 1
21: call header
22: parameter string_0Aargc3A2025i0A#, offset 6
23: parameter argc, offset 8
24: call function noellipse-ellipse printf, extra 0
25: post call
26: index = 0
27: empty
28: if index < argc goto 31
29: goto 44
30: check track map float stack
31: empty
32: call header
33: parameter string_25i3A203C25s3E0A#, offset 6
34: parameter index, offset 8
35: £temporary72 = index * 2
36: £temporary73 = argv + £temporary72
37: £temporary71 -> £temporary73 = *£temporary73
38: parameter £temporary71 -> £temporary73, offset 10
39: call function noellipse-ellipse printf, extra 0
40: post call
41: empty
42: index = index + 1
43: goto 27
44: call header
45: parameter string_0A#, offset 6
46: call function noellipse-ellipse printf, extra 0
47: post call
48: index = 0
49: empty
50: £temporary77 = index * 2
51: £temporary78 = argv + £temporary77
52: £temporary76 -> £temporary78 = *£temporary78
53: if £temporary76 -> £temporary78 != 0 goto 56
54: goto 69
55: check track map float stack
56: empty
57: call header
58: parameter string_25i3A203C25s3E0A#, offset 6
59: parameter index, offset 8
60: £temporary82 = index * 2
61: £temporary83 = argv + £temporary82
62: £temporary81 -> £temporary83 = *£temporary83
63: parameter £temporary81 -> £temporary83, offset 10
64: call function noellipse-ellipse printf, extra 0
65: post call
66: empty
67: index = index + 1
68: goto 49
69: empty
70: return
71: function end mainX
0: call header
1: call function noellipse-noellipse main_math
2: post call
3: empty
4: return
5: function end mainm
0: if 1 < 2 goto 15
1: goto 3
2: check track map float stack
3: call header
4: parameter stderr, offset 6
5: parameter string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#, offset 8
6: parameter string_1203C202#, offset 10
7: parameter string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CMain2Ec#, offset 12
8: parameter 196, offset 14
9: call function noellipse-ellipse fprintf, extra 0
10: post call
11: call header
12: call function noellipse-noellipse abort
13: post call
14: goto 15
15: empty
16: if 1 > 2 goto 31
17: goto 19
18: check track map float stack
19: call header
20: parameter stderr, offset 6
21: parameter string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#, offset 8
22: parameter string_1203E202#, offset 10
23: parameter string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CMain2Ec#, offset 12
24: parameter 197, offset 14
25: call function noellipse-ellipse fprintf, extra 0
26: post call
27: call header
28: call function noellipse-noellipse abort
29: post call
30: goto 31
31: empty
32: empty
33: return
34: function end maina
0: call header
1: call function noellipse-noellipse stdlib_test
2: post call
3: empty
4: return
5: function end main
0: call header
1: parameter string_argc3A2025i0A#, offset 6
2: parameter argc, offset 8
3: call function noellipse-ellipse printf, extra 0
4: post call
5: index = 0
6: empty
7: if index < argc goto 10
8: goto 23
9: check track map float stack
10: empty
11: call header
12: parameter string_25i3A203C25s3E0A#, offset 6
13: parameter index, offset 8
14: £temporary122 = index * 2
15: £temporary123 = argv + £temporary122
16: £temporary121 -> £temporary123 = *£temporary123
17: parameter £temporary121 -> £temporary123, offset 10
18: call function noellipse-ellipse printf, extra 0
19: post call
20: empty
21: index = index + 1
22: goto 6
23: call header
24: parameter string_0A#, offset 6
25: call function noellipse-ellipse printf, extra 0
26: post call
27: index = 0
28: empty
29: £temporary127 = index * 2
30: £temporary128 = argv + £temporary127
31: £temporary126 -> £temporary128 = *£temporary128
32: if £temporary126 -> £temporary128 != 0 goto 35
33: goto 48
34: check track map float stack
35: empty
36: call header
37: parameter string_25i3A203C25s3E0A#, offset 6
38: parameter index, offset 8
39: £temporary132 = index * 2
40: £temporary133 = argv + £temporary132
41: £temporary131 -> £temporary133 = *£temporary133
42: parameter £temporary131 -> £temporary133, offset 10
43: call function noellipse-ellipse printf, extra 0
44: post call
45: empty
46: index = index + 1
47: goto 28
48: call header
49: parameter string_0A#, offset 6
50: call function noellipse-ellipse printf, extra 0
51: post call
52: call header
53: parameter 0, offset 6
54: call function noellipse-noellipse mktime
55: post call
56: call header
57: parameter string_Hello210A#, offset 6
58: call function noellipse-ellipse printf, extra 0
59: post call
60: call header
61: parameter string_Please20write20a20character2C20a20string2C20an20integer2C20and20a20double3A20#, offset 6
62: call function noellipse-ellipse printf, extra 0
63: post call
64: call header
65: parameter string_25c2025s2025i2025lf#, offset 6
66: £temporary139 = &c
67: parameter £temporary139, offset 8
68: parameter s, offset 10
69: £temporary140 = &i
70: parameter £temporary140, offset 12
71: push float d
72: pop float empty X
73: £temporary141 = &d
74: parameter £temporary141, offset 14
75: call function noellipse-ellipse scanf, extra 0
76: post call
77: call header
78: parameter string_You20wrote20the20character202725c272C20the20string202225s222C20the20integer2025i2C20and20the20double2025f2E0A#, offset 6
79: £temporary143 = int_to_int c (Signed_Char -> Signed_Int)
80: parameter £temporary143, offset 8
81: parameter s, offset 10
82: parameter i, offset 12
83: push float d
84: parameter d, offset 14
85: call function noellipse-ellipse printf, extra 0
86: post call
87: empty
88: return
89: function end mainX4
0: call header
1: parameter string_3A20#, offset 6
2: call function noellipse-ellipse printf, extra 0
3: post call
4: call header
5: parameter string_25lf#, offset 6
6: push float x
7: pop float empty X
8: £temporary172 = &x
9: parameter £temporary172, offset 8
10: call function noellipse-ellipse scanf, extra 0
11: post call
12: call header
13: parameter string_3C25f3E#, offset 6
14: push float x
15: parameter x, offset 8
16: call function noellipse-ellipse printf, extra 0
17: post call
18: empty
19: return
20: function end main3
0: call header
1: push float 3.14
2: parameter 3.14, offset 6
3: call function noellipse-noellipse setjmp_test
4: post call
5: call header
6: parameter string_2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D0A#, offset 6
7: call function noellipse-ellipse printf, extra 0
8: post call
9: call header
10: push 0
11: parameter 0, offset 6
12: call function noellipse-noellipse setjmp_test
13: post call
14: call header
15: parameter string_2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D0A#, offset 6
16: call function noellipse-ellipse printf, extra 0
17: post call
18: call header
19: push float 2.71
20: parameter 2.71, offset 6
21: call function noellipse-noellipse setjmp_test
22: post call
23: call header
24: parameter string_2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D0A#, offset 6
25: call function noellipse-ellipse printf, extra 0
26: post call
27: call header
28: push 0
29: parameter 0, offset 6
30: call function noellipse-noellipse setjmp_test
31: post call
32: empty
33: return
34: function end mains2
0: call header
1: parameter 97, offset 6
2: call function noellipse-noellipse character_test
3: post call
4: call header
5: parameter 66, offset 6
6: call function noellipse-noellipse character_test
7: post call
8: call header
9: parameter 49, offset 6
10: call function noellipse-noellipse character_test
11: post call
12: call header
13: parameter 46, offset 6
14: call function noellipse-noellipse character_test
15: post call
16: call header
17: parameter 10, offset 6
18: call function noellipse-noellipse character_test
19: post call
20: call header
21: parameter 102, offset 6
22: call function noellipse-noellipse character_test
23: post call
24: call header
25: parameter 103, offset 6
26: call function noellipse-noellipse character_test
27: post call
28: empty
29: return
30: function end char_main
0: n = 0
1: call header
2: parameter string_Please20write20a20number2028not20620or207293A20#, offset 6
3: call function noellipse-ellipse printf, extra 0
4: post call
5: call header
6: parameter string_25i#, offset 6
7: £temporary210 = &n
8: parameter £temporary210, offset 8
9: call function noellipse-ellipse scanf, extra 0
10: post call
11: if n != 6 goto 26
12: goto 14
13: check track map float stack
14: call header
15: parameter stderr, offset 6
16: parameter string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#, offset 8
17: parameter string_n20213D206#, offset 10
18: parameter string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CMain2Ec#, offset 12
19: parameter 862, offset 14
20: call function noellipse-ellipse fprintf, extra 0
21: post call
22: call header
23: call function noellipse-noellipse abort
24: post call
25: goto 26
26: empty
27: call header
28: parameter n, offset 6
29: call function noellipse-noellipse assert_test2
30: post call
31: empty
32: return
33: function end assert_test
0: if n != 7 goto 15
1: goto 3
2: check track map float stack
3: call header
4: parameter stderr, offset 6
5: parameter string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#, offset 8
6: parameter string_n20213D207#, offset 10
7: parameter string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CMain2Ec#, offset 12
8: parameter 867, offset 14
9: call function noellipse-ellipse fprintf, extra 0
10: post call
11: call header
12: call function noellipse-noellipse abort
13: post call
14: goto 15
15: empty
16: empty
17: return
18: function end assert_test2
0: £temporary236 = int_to_int memorySize (Signed_Int -> Unsigned_Int)
1: £temporary237 = 4 + £temporary236
2: newBlockSize = £temporary237
3: minGap = 0
4: lastAddress = 65528
5: minBlockPtr = 0
6: minPrevBlockPtr = 0
7: prevBlockPtr = 0
8: currBlockPtr = g_firstBlockPtr
9: if memorySize >= 0 goto 24
10: goto 12
11: check track map float stack
12: call header
13: parameter stderr, offset 6
14: parameter string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#, offset 8
15: parameter string_memorySize203E3D200#, offset 10
16: parameter string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CMalloc2Ec#, offset 12
17: parameter 41, offset 14
18: call function noellipse-ellipse fprintf, extra 0
19: post call
20: call header
21: call function noellipse-noellipse abort
22: post call
23: goto 24
24: empty
25: if memorySize == 0 goto 28
26: goto 31
27: check track map float stack
28: return_value = 0
29: return
30: goto 31
31: if currBlockPtr != 0 goto 34
32: goto 57
33: check track map float stack
34: £temporary244 = int_to_int currBlockPtr (Pointer -> Unsigned_Int)
35: currAddress = £temporary244
36: £temporary245 -> currBlockPtr = *currBlockPtr
37: £temporary246 = currAddress + £temporary245 -> currBlockPtr
38: £temporary247 = £temporary246 + 4
39: £temporary248 = lastAddress - £temporary247
40: currGap = £temporary248
41: if newBlockSize <= currGap goto 43
42: goto 52
43: if minGap == 0 goto 48
44: goto 45
45: if currGap < minGap goto 48
46: goto 52
47: check track map float stack
48: minGap = currGap
49: minBlockPtr = currBlockPtr
50: minPrevBlockPtr = prevBlockPtr
51: goto 52
52: lastAddress = currAddress
53: prevBlockPtr = currBlockPtr
54: £temporary254 -> currBlockPtr = *currBlockPtr, offset 2
55: currBlockPtr = £temporary254 -> currBlockPtr
56: goto 31
57: if minBlockPtr != 0 goto 60
58: goto 84
59: check track map float stack
60: £temporary256 = int_to_int minBlockPtr (Pointer -> Unsigned_Int)
61: £temporary257 -> minBlockPtr = *minBlockPtr
62: £temporary258 = £temporary256 + £temporary257 -> minBlockPtr
63: £temporary259 = £temporary258 + 4
64: newAddress = £temporary259
65: £temporary260 = int_to_int newAddress (Unsigned_Int -> Pointer)
66: newBlockPtr = £temporary260
67: £temporary261 -> newBlockPtr = *newBlockPtr
68: £temporary261 -> newBlockPtr = memorySize
69: £temporary262 -> newBlockPtr = *newBlockPtr, offset 2
70: £temporary262 -> newBlockPtr = minBlockPtr
71: if minPrevBlockPtr != 0 goto 74
72: goto 77
73: check track map float stack
74: £temporary264 -> minPrevBlockPtr = *minPrevBlockPtr, offset 2
75: £temporary264 -> minPrevBlockPtr = newBlockPtr
76: goto 79
77: g_firstBlockPtr = newBlockPtr
78: goto 79
79: £temporary265 = newAddress + 4
80: £temporary266 = int_to_int £temporary265 (Unsigned_Int -> Pointer)
81: return_value = £temporary266
82: return
83: goto 111
84: £temporary267 = lastAddress - newBlockSize
85: newAddress = £temporary267
86: £temporary268 = bp
87: stackTop = £temporary268
88: if stackTop <= newAddress goto 91
89: goto 111
90: check track map float stack
91: £temporary270 = int_to_int newAddress (Unsigned_Int -> Pointer)
92: newBlockPtr = £temporary270
93: £temporary271 -> newBlockPtr = *newBlockPtr
94: £temporary271 -> newBlockPtr = memorySize
95: £temporary272 -> newBlockPtr = *newBlockPtr, offset 2
96: £temporary272 -> newBlockPtr = 0
97: if prevBlockPtr != 0 goto 100
98: goto 103
99: check track map float stack
100: £temporary274 -> prevBlockPtr = *prevBlockPtr, offset 2
101: £temporary274 -> prevBlockPtr = newBlockPtr
102: goto 105
103: g_firstBlockPtr = newBlockPtr
104: goto 105
105: £temporary275 = newAddress + 4
106: £temporary276 = int_to_int £temporary275 (Unsigned_Int -> Pointer)
107: return_value = £temporary276
108: return
109: goto 111
110: goto 111
111: return_value = 0
112: return
113: empty
114: return
115: function end malloc
0: call header
1: £temporary282 = number * size
2: parameter £temporary282, offset 6
3: call function noellipse-noellipse malloc
4: post call
5: £temporary283 = return_value
6: pointer = £temporary283
7: if pointer != 0 goto 10
8: goto 17
9: check track map float stack
10: call header
11: parameter pointer, offset 6
12: parameter 0, offset 8
13: parameter size, offset 10
14: call function noellipse-noellipse memset
15: post call
16: goto 17
17: return_value = pointer
18: return
19: empty
20: return
21: function end calloc
0: £temporary290 = int_to_int freeMemoryPtr (Pointer -> Unsigned_Int)
1: £temporary291 = £temporary290 - 4
2: £temporary292 = int_to_int £temporary291 (Unsigned_Int -> Pointer)
3: freeBlockPtr = £temporary292
4: prevBlockPtr = 0
5: currBlockPtr = g_firstBlockPtr
6: if freeMemoryPtr == 0 goto 9
7: goto 11
8: check track map float stack
9: return
10: goto 11
11: if currBlockPtr != 0 goto 14
12: goto 50
13: check track map float stack
14: if currBlockPtr == freeBlockPtr goto 17
15: goto 46
16: check track map float stack
17: if prevBlockPtr == 0 goto 19
18: goto 25
19: £temporary297 -> currBlockPtr = *currBlockPtr, offset 2
20: if £temporary297 -> currBlockPtr == 0 goto 23
21: goto 25
22: check track map float stack
23: g_firstBlockPtr = 0
24: goto 44
25: if prevBlockPtr == 0 goto 28
26: goto 31
27: check track map float stack
28: £temporary301 -> currBlockPtr = *currBlockPtr, offset 2
29: g_firstBlockPtr = £temporary301 -> currBlockPtr
30: goto 44
31: £temporary302 -> currBlockPtr = *currBlockPtr, offset 2
32: if £temporary302 -> currBlockPtr == 0 goto 35
33: goto 38
34: check track map float stack
35: £temporary304 -> prevBlockPtr = *prevBlockPtr, offset 2
36: £temporary304 -> prevBlockPtr = 0
37: goto 44
38: £temporary305 -> prevBlockPtr = *prevBlockPtr, offset 2
39: £temporary306 -> currBlockPtr = *currBlockPtr, offset 2
40: £temporary305 -> prevBlockPtr = £temporary306 -> currBlockPtr
41: goto 44
42: goto 44
43: goto 44
44: return
45: goto 46
46: prevBlockPtr = currBlockPtr
47: £temporary307 -> currBlockPtr = *currBlockPtr, offset 2
48: currBlockPtr = £temporary307 -> currBlockPtr
49: goto 11
50: empty
51: return
52: function end free
0: if newMemorySize >= 0 goto 15
1: goto 3
2: check track map float stack
3: call header
4: parameter stderr, offset 6
5: parameter string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#, offset 8
6: parameter string_newMemorySize203E3D200#, offset 10
7: parameter string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CMalloc2Ec#, offset 12
8: parameter 259, offset 14
9: call function noellipse-ellipse fprintf, extra 0
10: post call
11: call header
12: call function noellipse-noellipse abort
13: post call
14: goto 15
15: empty
16: if oldMemoryPtr != 0 goto 33
17: goto 18
18: if newMemorySize > 0 goto 33
19: goto 21
20: check track map float stack
21: call header
22: parameter stderr, offset 6
23: parameter string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#, offset 8
24: parameter string_2820oldMemoryPtr20213D20NULL2029207C7C202820newMemorySize203E2002029#, offset 10
25: parameter string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CMalloc2Ec#, offset 12
26: parameter 260, offset 14
27: call function noellipse-ellipse fprintf, extra 0
28: post call
29: call header
30: call function noellipse-noellipse abort
31: post call
32: goto 33
33: empty
34: if oldMemoryPtr == 0 goto 37
35: goto 45
36: check track map float stack
37: call header
38: parameter newMemorySize, offset 6
39: call function noellipse-noellipse malloc
40: post call
41: £temporary319 = return_value
42: return_value = £temporary319
43: return
44: goto 45
45: if newMemorySize == 0 goto 48
46: goto 55
47: check track map float stack
48: call header
49: parameter oldMemoryPtr, offset 6
50: call function noellipse-noellipse free
51: post call
52: return_value = 0
53: return
54: goto 55
55: £temporary322 = int_to_int newMemorySize (Signed_Int -> Unsigned_Int)
56: £temporary323 = £temporary322 + 4
57: newBlockSize = £temporary323
58: £temporary324 = int_to_int oldMemoryPtr (Pointer -> Unsigned_Int)
59: £temporary325 = £temporary324 - 4
60: £temporary326 = int_to_int £temporary325 (Unsigned_Int -> Pointer)
61: oldBlockPtr = £temporary326
62: £temporary327 -> oldBlockPtr = *oldBlockPtr
63: if newBlockSize <= £temporary327 -> oldBlockPtr goto 66
64: goto 71
65: check track map float stack
66: £temporary329 -> oldBlockPtr = *oldBlockPtr
67: £temporary329 -> oldBlockPtr = newBlockSize
68: return_value = oldMemoryPtr
69: return
70: goto 71
71: lastAddress = 65528
72: currBlockPtr = g_firstBlockPtr
73: if currBlockPtr != 0 goto 76
74: goto 98
75: check track map float stack
76: if currBlockPtr == oldBlockPtr goto 79
77: goto 93
78: check track map float stack
79: £temporary332 = int_to_int currBlockPtr (Pointer -> Unsigned_Int)
80: £temporary333 = lastAddress - £temporary332
81: availableSize = £temporary333
82: if availableSize >= newBlockSize goto 85
83: goto 90
84: check track map float stack
85: £temporary335 -> oldBlockPtr = *oldBlockPtr
86: £temporary335 -> oldBlockPtr = newBlockSize
87: return_value = oldMemoryPtr
88: return
89: goto 93
90: goto 98
91: goto 93
92: goto 93
93: £temporary336 = int_to_int currBlockPtr (Pointer -> Unsigned_Int)
94: lastAddress = £temporary336
95: £temporary337 -> currBlockPtr = *currBlockPtr, offset 2
96: currBlockPtr = £temporary337 -> currBlockPtr
97: goto 73
98: call header
99: parameter newMemorySize, offset 6
100: call function noellipse-noellipse malloc
101: post call
102: £temporary338 = return_value
103: newMemoryPtr = £temporary338
104: if newMemoryPtr != 0 goto 107
105: goto 120
106: check track map float stack
107: call header
108: parameter newMemoryPtr, offset 6
109: parameter oldMemoryPtr, offset 8
110: parameter newMemorySize, offset 10
111: call function noellipse-noellipse memcpy
112: post call
113: call header
114: parameter oldMemoryPtr, offset 6
115: call function noellipse-noellipse free
116: post call
117: return_value = newMemoryPtr
118: return
119: goto 120
120: return_value = 0
121: return
122: empty
123: return
124: function end realloc
0: currBlockPtr = g_firstBlockPtr
1: call header
2: parameter string_Heap3A0A#, offset 6
3: call function noellipse-ellipse printf, extra 0
4: post call
5: if currBlockPtr != 0 goto 8
6: goto 19
7: check track map float stack
8: call header
9: parameter string_2020Address2025u2C20Size2025u0A#, offset 6
10: £temporary361 = int_to_int currBlockPtr (Pointer -> Unsigned_Int)
11: parameter £temporary361, offset 8
12: £temporary362 -> currBlockPtr = *currBlockPtr
13: parameter £temporary362 -> currBlockPtr, offset 10
14: call function noellipse-ellipse printf, extra 0
15: post call
16: £temporary364 -> currBlockPtr = *currBlockPtr, offset 2
17: currBlockPtr = £temporary364 -> currBlockPtr
18: goto 5
19: call header
20: parameter string_0A#, offset 6
21: call function noellipse-ellipse printf, extra 0
22: post call
23: empty
24: return
25: function end print_heap
0: call header
1: call function noellipse-noellipse localeconv
2: post call
3: £temporary371 = return_value
4: localeConvPtr = £temporary371
5: if localeConvPtr != 0 goto 8
6: goto 24
7: check track map float stack
8: call header
9: £temporary373 -> localeConvPtr = *localeConvPtr, offset 12
10: parameter £temporary373 -> localeConvPtr, offset 6
11: parameter c, offset 8
12: call function noellipse-noellipse strchr
13: post call
14: £temporary374 = return_value
15: if £temporary374 != 0 goto 17
16: goto 19
17: £temporary376 = 1
18: goto 20
19: £temporary376 = 0
20: empty
21: return_value = £temporary376
22: return
23: goto 35
24: if c >= 97 goto 26
25: goto 30
26: if c <= 122 goto 28
27: goto 30
28: £temporary380 = 1
29: goto 31
30: £temporary380 = 0
31: empty
32: return_value = £temporary380
33: return
34: goto 35
35: empty
36: return
37: function end islower
0: call header
1: call function noellipse-noellipse localeconv
2: post call
3: £temporary383 = return_value
4: localeConvPtr = £temporary383
5: if localeConvPtr != 0 goto 8
6: goto 24
7: check track map float stack
8: call header
9: £temporary385 -> localeConvPtr = *localeConvPtr, offset 14
10: parameter £temporary385 -> localeConvPtr, offset 6
11: parameter c, offset 8
12: call function noellipse-noellipse strchr
13: post call
14: £temporary386 = return_value
15: if £temporary386 != 0 goto 17
16: goto 19
17: £temporary388 = 1
18: goto 20
19: £temporary388 = 0
20: empty
21: return_value = £temporary388
22: return
23: goto 35
24: if c >= 65 goto 26
25: goto 30
26: if c <= 90 goto 28
27: goto 30
28: £temporary392 = 1
29: goto 31
30: £temporary392 = 0
31: empty
32: return_value = £temporary392
33: return
34: goto 35
35: empty
36: return
37: function end isupper
0: call header
1: parameter c, offset 6
2: call function noellipse-noellipse islower
3: post call
4: £temporary395 = return_value
5: if £temporary395 != 0 goto 14
6: goto 7
7: call header
8: parameter c, offset 6
9: call function noellipse-noellipse isupper
10: post call
11: £temporary396 = return_value
12: if £temporary396 != 0 goto 14
13: goto 16
14: £temporary400 = 1
15: goto 17
16: £temporary400 = 0
17: empty
18: return_value = £temporary400
19: return
20: empty
21: return
22: function end isalpha
0: if c >= 48 goto 2
1: goto 6
2: if c <= 57 goto 4
3: goto 6
4: £temporary406 = 1
5: goto 7
6: £temporary406 = 0
7: empty
8: return_value = £temporary406
9: return
10: empty
11: return
12: function end isdigit
0: call header
1: parameter c, offset 6
2: call function noellipse-noellipse isalpha
3: post call
4: £temporary407 = return_value
5: if £temporary407 != 0 goto 14
6: goto 7
7: call header
8: parameter c, offset 6
9: call function noellipse-noellipse isdigit
10: post call
11: £temporary408 = return_value
12: if £temporary408 != 0 goto 14
13: goto 16
14: £temporary412 = 1
15: goto 17
16: £temporary412 = 0
17: empty
18: return_value = £temporary412
19: return
20: empty
21: return
22: function end isalnum
0: call header
1: parameter c, offset 6
2: call function noellipse-noellipse isdigit
3: post call
4: £temporary415 = return_value
5: if £temporary415 != 0 goto 15
6: goto 7
7: if c >= 97 goto 9
8: goto 11
9: if c <= 102 goto 15
10: goto 11
11: if c >= 65 goto 13
12: goto 17
13: if c <= 70 goto 15
14: goto 17
15: £temporary425 = 1
16: goto 18
17: £temporary425 = 0
18: empty
19: return_value = £temporary425
20: return
21: empty
22: return
23: function end isxdigit
0: if c >= 32 goto 2
1: goto 6
2: if c <= 126 goto 4
3: goto 6
4: £temporary430 = 1
5: goto 7
6: £temporary430 = 0
7: empty
8: return_value = £temporary430
9: return
10: empty
11: return
12: function end isgraph
0: call header
1: parameter c, offset 6
2: call function noellipse-noellipse isgraph
3: post call
4: £temporary431 = return_value
5: if £temporary431 != 0 goto 7
6: goto 11
7: if c != 32 goto 9
8: goto 11
9: £temporary435 = 1
10: goto 12
11: £temporary435 = 0
12: empty
13: return_value = £temporary435
14: return
15: empty
16: return
17: function end isprint
0: call header
1: parameter c, offset 6
2: call function noellipse-noellipse isgraph
3: post call
4: £temporary437 = return_value
5: if £temporary437 != 0 goto 7
6: goto 16
7: call header
8: parameter c, offset 6
9: call function noellipse-noellipse isalnum
10: post call
11: £temporary438 = return_value
12: if £temporary438 != 0 goto 16
13: goto 14
14: £temporary443 = 1
15: goto 17
16: £temporary443 = 0
17: empty
18: return_value = £temporary443
19: return
20: empty
21: return
22: function end ispunct
0: call header
1: parameter c, offset 6
2: call function noellipse-noellipse isprint
3: post call
4: £temporary446 = return_value
5: if £temporary446 != 0 goto 9
6: goto 7
7: £temporary449 = 1
8: goto 10
9: £temporary449 = 0
10: empty
11: return_value = £temporary449
12: return
13: empty
14: return
15: function end iscntrl
0: if c == 32 goto 12
1: goto 2
2: if c == 12 goto 12
3: goto 4
4: if c == 10 goto 12
5: goto 6
6: if c == 13 goto 12
7: goto 8
8: if c == 9 goto 12
9: goto 10
10: if c == 11 goto 12
11: goto 14
12: £temporary462 = 1
13: goto 15
14: £temporary462 = 0
15: empty
16: return_value = £temporary462
17: return
18: empty
19: return
20: function end isspace
0: call header
1: parameter c, offset 6
2: call function noellipse-noellipse isupper
3: post call
4: £temporary463 = return_value
5: if £temporary463 != 0 goto 8
6: goto 39
7: check track map float stack
8: call header
9: call function noellipse-noellipse localeconv
10: post call
11: £temporary464 = return_value
12: localeConvPtr = £temporary464
13: if localeConvPtr != 0 goto 16
14: goto 34
15: check track map float stack
16: £temporary466 -> localeConvPtr = *localeConvPtr, offset 12
17: lowerCase = £temporary466 -> localeConvPtr
18: £temporary467 -> localeConvPtr = *localeConvPtr, offset 14
19: upperCase = £temporary467 -> localeConvPtr
20: call header
21: parameter upperCase, offset 6
22: parameter c, offset 8
23: call function noellipse-noellipse strchr
24: post call
25: £temporary468 = return_value
26: £temporary469 = £temporary468 - upperCase
27: index = £temporary469
28: £temporary471 = lowerCase + index
29: £temporary470 -> £temporary471 = *£temporary471
30: £temporary472 = int_to_int £temporary470 -> £temporary471 (Signed_Char -> Signed_Int)
31: return_value = £temporary472
32: return
33: goto 42
34: £temporary473 = c + 32
35: return_value = £temporary473
36: return
37: goto 42
38: goto 42
39: return_value = c
40: return
41: goto 42
42: empty
43: return
44: function end tolower
0: call header
1: parameter c, offset 6
2: call function noellipse-noellipse islower
3: post call
4: £temporary478 = return_value
5: if £temporary478 != 0 goto 8
6: goto 39
7: check track map float stack
8: call header
9: call function noellipse-noellipse localeconv
10: post call
11: £temporary479 = return_value
12: localeConvPtr = £temporary479
13: if localeConvPtr != 0 goto 16
14: goto 34
15: check track map float stack
16: £temporary481 -> localeConvPtr = *localeConvPtr, offset 12
17: lowerCase = £temporary481 -> localeConvPtr
18: £temporary482 -> localeConvPtr = *localeConvPtr, offset 14
19: upperCase = £temporary482 -> localeConvPtr
20: call header
21: parameter lowerCase, offset 6
22: parameter c, offset 8
23: call function noellipse-noellipse strchr
24: post call
25: £temporary483 = return_value
26: £temporary484 = £temporary483 - lowerCase
27: index = £temporary484
28: £temporary486 = upperCase + index
29: £temporary485 -> £temporary486 = *£temporary486
30: £temporary487 = int_to_int £temporary485 -> £temporary486 (Signed_Char -> Signed_Int)
31: return_value = £temporary487
32: return
33: goto 42
34: £temporary488 = c - 32
35: return_value = £temporary488
36: return
37: goto 42
38: goto 42
39: return_value = c
40: return
41: goto 42
42: empty
43: return
44: function end toupper
0: if g_currStructPtr != 0 goto 2
1: goto 6
2: empty
3: £temporary496 -> g_currStructPtr = *g_currStructPtr
4: £temporary500 = £temporary496 -> g_currStructPtr
5: goto 8
6: empty
7: £temporary500 = 0
8: empty
9: oldName = £temporary500
10: g_currStructPtr = 0
11: if newName != 0 goto 14
12: goto 43
13: check track map float stack
14: index = 0
15: empty
16: if index < sSize goto 19
17: goto 43
18: check track map float stack
19: empty
20: call header
21: parameter newName, offset 6
22: £temporary505 = index * 4
23: £temporary506 = sArray + £temporary505
24: £temporary504 -> £temporary506 = *£temporary506
25: parameter £temporary504.name$0 -> £temporary506, offset 8
26: call function noellipse-noellipse strcmp
27: post call
28: £temporary507 = return_value
29: if £temporary507 == 0 goto 32
30: goto 39
31: check track map float stack
32: £temporary510 = index * 4
33: £temporary511 = sArray + £temporary510
34: £temporary509 -> £temporary511 = *£temporary511
35: £temporary512 = &£temporary509 -> £temporary511
36: g_currStructPtr = £temporary512
37: goto 43
38: goto 39
39: empty
40: index = index + 1
41: goto 15
42: goto 43
43: return_value = oldName
44: return
45: empty
46: return
47: function end setlocale
0: if g_currStructPtr != 0 goto 2
1: goto 6
2: empty
3: £temporary516 -> g_currStructPtr = *g_currStructPtr, offset 2
4: £temporary520 = £temporary516 -> g_currStructPtr
5: goto 8
6: empty
7: £temporary520 = 0
8: empty
9: return_value = £temporary520
10: return
11: empty
12: return
13: function end localeconv
0: push 1
1: pop float index
2: push 1
3: pop float sum
4: push 1
5: pop float faculty
6: push float x
7: pop float power
8: push float term
9: pop float empty X
10: push float power
11: push float faculty
12: £temporary521 = power / faculty
13: top float term
14: pop float empty X
15: push float sum
16: push float term
17: £temporary522 = sum + term
18: top float sum
19: pop float empty X
20: push float power
21: push float x
22: £temporary523 = power * x
23: top float power
24: pop float empty X
25: push float faculty
26: push float index
27: push 1
28: index = index + 1
29: top float index
30: £temporary525 = faculty * £temporary524
31: top float faculty
32: pop float empty X
33: call header
34: push float term
35: parameter term, offset 6
36: call function noellipse-noellipse fabs
37: post call
38: £temporary526 = return_value
39: push float 0.000000001
40: if £temporary526 >= 0.000000001 goto 8
41: goto 44
42: check track map float stack
43: goto 8
44: push float sum
45: return_value = sum
46: return
47: empty
48: return
49: function end exp
0: push float x
1: push 0
2: if x > 0 goto 5
3: goto 105
4: check track map float stack
5: n = 0
6: push float x
7: push 1
8: if x > 1 goto 11
9: goto 24
10: check track map float stack
11: push float x
12: push 1
13: if x > 1 goto 16
14: goto 47
15: check track map float stack
16: push float x
17: push float 2.71
18: £temporary532 = x / 2.71
19: top float x
20: pop float empty X
21: n = n + 1
22: goto 11
23: goto 47
24: push float x
25: push float 2.71
26: pop float empty X
27: push float 0.3690036900369003690036900369
28: if x < 0.3690036900369003690036900369 goto 31
29: goto 47
30: check track map float stack
31: push float x
32: push float 2.71
33: pop float empty X
34: push float 0.3690036900369003690036900369
35: if x < 0.3690036900369003690036900369 goto 38
36: goto 47
37: check track map float stack
38: push float x
39: push float 2.71
40: £temporary536 = x * 2.71
41: top float x
42: pop float empty X
43: n = n - 1
44: goto 31
45: goto 47
46: goto 47
47: push 1
48: pop float index
49: push 0
50: pop float sum
51: push 1
52: pop float sign
53: push float x
54: push 1
55: £temporary538 = x - 1
56: pop float x_minus_1
57: push float x_minus_1
58: pop float power
59: push float term
60: pop float empty X
61: push float sign
62: push float power
63: £temporary539 = sign * power
64: push float index
65: push 1
66: index = index + 1
67: top float index
68: push 1
69: index = index - 1
70: £temporary541 = £temporary539 / £temporary540
71: top float term
72: pop float empty X
73: push float sum
74: push float term
75: £temporary542 = sum + term
76: top float sum
77: pop float empty X
78: push float power
79: push float x_minus_1
80: £temporary543 = power * x_minus_1
81: top float power
82: pop float empty X
83: push float sign
84: push float -1.0
85: £temporary544 = sign * -1.0
86: top float sign
87: pop float empty X
88: call header
89: push float term
90: parameter term, offset 6
91: call function noellipse-noellipse fabs
92: post call
93: £temporary545 = return_value
94: push float 0.000000001
95: if £temporary545 >= 0.000000001 goto 59
96: goto 99
97: check track map float stack
98: goto 59
99: push float sum
100: £temporary547 = int_to_float n (Signed_Int -> Double)
101: £temporary548 = sum + £temporary547
102: return_value = £temporary548
103: return
104: goto 110
105: errno = 6
106: push 0
107: return_value = 0
108: return
109: goto 110
110: empty
111: return
112: function end log
0: call header
1: push float x
2: parameter x, offset 6
3: call function noellipse-noellipse log
4: post call
5: £temporary550 = return_value
6: push float 2.30
7: £temporary551 = £temporary550 / 2.30
8: return_value = £temporary551
9: return
10: empty
11: return
12: function end log10
0: push float x
1: push 0
2: if x > 0 goto 5
3: goto 21
4: check track map float stack
5: call header
6: push float y
7: call header
8: push float x
9: parameter x, offset 6
10: call function noellipse-noellipse log
11: post call
12: £temporary554 = return_value
13: £temporary555 = y * £temporary554
14: parameter £temporary555, offset 6
15: call function noellipse-noellipse exp
16: post call
17: £temporary556 = return_value
18: return_value = £temporary556
19: return
20: goto 117
21: push float x
22: push 0
23: if x == 0 goto 25
24: goto 34
25: push float y
26: push 0
27: if y == 0 goto 30
28: goto 34
29: check track map float stack
30: push 1
31: return_value = 1
32: return
33: goto 117
34: push float x
35: push 0
36: if x == 0 goto 38
37: goto 47
38: push float y
39: push 0
40: if y > 0 goto 43
41: goto 47
42: check track map float stack
43: push 0
44: return_value = 0
45: return
46: goto 117
47: push float x
48: push 0
49: if x < 0 goto 51
50: goto 109
51: call header
52: push float y
53: parameter y, offset 6
54: call function noellipse-noellipse floor
55: post call
56: £temporary564 = return_value
57: call header
58: push float y
59: parameter y, offset 6
60: call function noellipse-noellipse ceil
61: post call
62: £temporary565 = return_value
63: if £temporary564 == £temporary565 goto 66
64: goto 109
65: check track map float stack
66: push float y
67: £temporary568 = float_to_int y (Double -> Signed_Long_Int)
68: long_y = £temporary568
69: £temporary569 = long_y % 2
70: if £temporary569 == 0 goto 73
71: goto 90
72: check track map float stack
73: call header
74: push float y
75: call header
76: push float x
77: £temporary571 = -x
78: parameter £temporary571, offset 6
79: call function noellipse-noellipse log
80: post call
81: £temporary572 = return_value
82: £temporary573 = y * £temporary572
83: parameter £temporary573, offset 6
84: call function noellipse-noellipse exp
85: post call
86: £temporary574 = return_value
87: return_value = £temporary574
88: return
89: goto 117
90: call header
91: push float y
92: call header
93: push float x
94: £temporary575 = -x
95: parameter £temporary575, offset 6
96: call function noellipse-noellipse log
97: post call
98: £temporary576 = return_value
99: £temporary577 = y * £temporary576
100: parameter £temporary577, offset 6
101: call function noellipse-noellipse exp
102: post call
103: £temporary578 = return_value
104: £temporary579 = -£temporary578
105: return_value = £temporary579
106: return
107: goto 117
108: goto 117
109: errno = 6
110: push 0
111: return_value = 0
112: return
113: goto 117
114: goto 117
115: goto 117
116: goto 117
117: empty
118: return
119: function end pow
0: push float x
1: call header
2: push float 2
3: parameter 2, offset 6
4: £temporary588 = int_to_float n (Signed_Int -> Double)
5: parameter £temporary588, offset 14
6: call function noellipse-noellipse pow
7: post call
8: £temporary589 = return_value
9: £temporary590 = x * £temporary589
10: return_value = £temporary590
11: return
12: empty
13: return
14: function end ldexp
0: call header
1: push float x
2: parameter x, offset 6
3: call function noellipse-noellipse log
4: post call
5: £temporary593 = return_value
6: push float 0.6931471805599453094172321
7: £temporary594 = £temporary593 / 0.6931471805599453094172321
8: £temporary595 = float_to_int £temporary594 (Double -> Signed_Int)
9: return_value = £temporary595
10: return
11: empty
12: return
13: function end log2
0: push float x
1: push 0
2: if x != 0 goto 5
3: goto 51
4: check track map float stack
5: call header
6: call header
7: push float x
8: parameter x, offset 6
9: call function noellipse-noellipse fabs
10: post call
11: £temporary598 = return_value
12: parameter £temporary598, offset 6
13: call function noellipse-noellipse log2
14: post call
15: £temporary599 = return_value
16: £temporary600 = int_to_int £temporary599 (Signed_Int -> Signed_Int)
17: exponent = £temporary600
18: call header
19: push float 2
20: parameter 2, offset 6
21: £temporary601 = int_to_float exponent (Signed_Int -> Double)
22: parameter £temporary601, offset 14
23: call function noellipse-noellipse pow
24: post call
25: £temporary602 = return_value
26: push float x
27: if £temporary602 < x goto 30
28: goto 32
29: check track map float stack
30: exponent = exponent + 1
31: goto 32
32: if p != 0 goto 35
33: goto 38
34: check track map float stack
35: £temporary606 -> p = *p
36: £temporary606 -> p = exponent
37: goto 38
38: push float x
39: call header
40: push float 2
41: parameter 2, offset 6
42: £temporary607 = int_to_float exponent (Signed_Int -> Double)
43: parameter £temporary607, offset 14
44: call function noellipse-noellipse pow
45: post call
46: £temporary608 = return_value
47: £temporary609 = x / £temporary608
48: return_value = £temporary609
49: return
50: goto 61
51: if p != 0 goto 54
52: goto 57
53: check track map float stack
54: £temporary611 -> p = *p
55: £temporary611 -> p = 0
56: goto 57
57: push 0
58: return_value = 0
59: return
60: goto 61
61: empty
62: return
63: function end frexp
0: push float x
1: push 0
2: if x >= 0 goto 5
3: goto 40
4: check track map float stack
5: push 1
6: pop float root_i_plus_1
7: push float root_i
8: pop float empty X
9: push float root_i_plus_1
10: top float root_i
11: pop float empty X
12: push float root_i_plus_1
13: pop float empty X
14: push float root_i
15: push float x
16: push float root_i
17: £temporary619 = x / root_i
18: £temporary620 = root_i + £temporary619
19: push float 2
20: £temporary621 = £temporary620 / 2
21: top float root_i_plus_1
22: pop float empty X
23: call header
24: push float root_i_plus_1
25: push float root_i
26: £temporary622 = root_i_plus_1 - root_i
27: parameter £temporary622, offset 6
28: call function noellipse-noellipse fabs
29: post call
30: £temporary623 = return_value
31: push float 0.000000001
32: if £temporary623 >= 0.000000001 goto 7
33: goto 36
34: check track map float stack
35: goto 7
36: push float root_i_plus_1
37: return_value = root_i_plus_1
38: return
39: goto 45
40: errno = 6
41: push 0
42: return_value = 0
43: return
44: goto 45
45: empty
46: return
47: function end sqrt
0: call header
1: push float x
2: parameter x, offset 6
3: call function noellipse-noellipse fabs
4: post call
5: £temporary626 = return_value
6: pop float abs_x
7: push float abs_x
8: £temporary627 = float_to_int abs_x (Double -> Signed_Long_Int)
9: £temporary628 = int_to_float £temporary627 (Signed_Long_Int -> Double)
10: pop float integral
11: push float abs_x
12: push float integral
13: £temporary629 = abs_x - integral
14: pop float fractional
15: if p != 0 goto 18
16: goto 36
17: check track map float stack
18: £temporary631 -> p = *p
19: push float £temporary631 -> p
20: pop float empty X
21: push float x
22: push 0
23: if x > 0 goto 25
24: goto 29
25: empty
26: push float integral
27: decrease stack
28: goto 32
29: empty
30: push float integral
31: £temporary633 = -integral
32: empty
33: top float £temporary631 -> p
34: pop float empty X
35: goto 36
36: push float x
37: push 0
38: if x > 0 goto 40
39: goto 44
40: empty
41: push float fractional
42: decrease stack
43: goto 47
44: empty
45: push float fractional
46: £temporary639 = -fractional
47: empty
48: return_value = £temporary643
49: return
50: empty
51: return
52: function end modf
0: push float y
1: push 0
2: if y != 0 goto 5
3: goto 35
4: check track map float stack
5: call header
6: push float x
7: push float y
8: push float x
9: push float y
10: £temporary646 = x / y
11: £temporary647 = float_to_int £temporary646 (Double -> Signed_Int)
12: £temporary648 = int_to_float £temporary647 (Signed_Int -> Double)
13: £temporary649 = y * £temporary648
14: £temporary650 = x - £temporary649
15: parameter £temporary650, offset 6
16: call function noellipse-noellipse fabs
17: post call
18: £temporary651 = return_value
19: pop float remainder
20: push float x
21: push 0
22: if x > 0 goto 24
23: goto 28
24: empty
25: push float remainder
26: decrease stack
27: goto 31
28: empty
29: push float remainder
30: £temporary653 = -remainder
31: empty
32: return_value = £temporary657
33: return
34: goto 40
35: errno = 6
36: push 0
37: return_value = 0
38: return
39: goto 40
40: empty
41: return
42: function end fmod
0: call header
1: push float x
2: parameter x, offset 6
3: call function noellipse-noellipse fabs
4: post call
5: £temporary659 = return_value
6: push float 3.1415926535897932384626433
7: pop float empty X
8: push float 6.2831853071795864769252866
9: if £temporary659 > 6.2831853071795864769252866 goto 12
10: goto 27
11: check track map float stack
12: push float x
13: pop float empty X
14: call header
15: push float x
16: parameter x, offset 6
17: push float 3.1415926535897932384626433
18: pop float empty X
19: push float 6.2831853071795864769252866
20: parameter 6.2831853071795864769252866, offset 14
21: call function noellipse-noellipse fmod
22: post call
23: £temporary661 = return_value
24: top float x
25: pop float empty X
26: goto 27
27: push 1
28: pop float index
29: push 0
30: pop float sum
31: push 1
32: pop float sign
33: push float x
34: pop float power
35: push 1
36: pop float faculty
37: push float term
38: pop float empty X
39: push float sign
40: push float power
41: £temporary662 = sign * power
42: push float faculty
43: £temporary663 = £temporary662 / faculty
44: top float term
45: pop float empty X
46: push float sum
47: push float term
48: £temporary664 = sum + term
49: top float sum
50: pop float empty X
51: push float sign
52: push float -1
53: £temporary665 = sign * -1
54: top float sign
55: pop float empty X
56: push float power
57: push float x
58: push float x
59: £temporary666 = x * x
60: £temporary667 = power * £temporary666
61: top float power
62: pop float empty X
63: push float faculty
64: push float index
65: push 1
66: index = index + 1
67: top float index
68: push float index
69: push 1
70: index = index + 1
71: top float index
72: £temporary670 = £temporary668 * £temporary669
73: £temporary671 = faculty * £temporary670
74: top float faculty
75: pop float empty X
76: call header
77: push float term
78: parameter term, offset 6
79: call function noellipse-noellipse fabs
80: post call
81: £temporary672 = return_value
82: push float 0.000000001
83: if £temporary672 >= 0.000000001 goto 37
84: goto 87
85: check track map float stack
86: goto 37
87: push float sum
88: return_value = sum
89: return
90: empty
91: return
92: function end sin
0: call header
1: push float x
2: parameter x, offset 6
3: call function noellipse-noellipse fabs
4: post call
5: £temporary678 = return_value
6: push float 3.1415926535897932384626433
7: pop float empty X
8: push float 6.2831853071795864769252866
9: if £temporary678 > 6.2831853071795864769252866 goto 12
10: goto 27
11: check track map float stack
12: push float x
13: pop float empty X
14: call header
15: push float x
16: parameter x, offset 6
17: push float 3.1415926535897932384626433
18: pop float empty X
19: push float 6.2831853071795864769252866
20: parameter 6.2831853071795864769252866, offset 14
21: call function noellipse-noellipse fmod
22: post call
23: £temporary680 = return_value
24: top float x
25: pop float empty X
26: goto 27
27: push 0
28: pop float index
29: push 0
30: pop float sum
31: push 1
32: pop float sign
33: push 1
34: pop float power
35: push 1
36: pop float faculty
37: push float term
38: pop float empty X
39: push float sign
40: push float power
41: £temporary681 = sign * power
42: push float faculty
43: £temporary682 = £temporary681 / faculty
44: top float term
45: pop float empty X
46: push float sum
47: push float term
48: £temporary683 = sum + term
49: top float sum
50: pop float empty X
51: push float sign
52: push float -1
53: £temporary684 = sign * -1
54: top float sign
55: pop float empty X
56: push float power
57: push float x
58: push float x
59: £temporary685 = x * x
60: £temporary686 = power * £temporary685
61: top float power
62: pop float empty X
63: push float faculty
64: push float index
65: push 1
66: index = index + 1
67: top float index
68: push float index
69: push 1
70: index = index + 1
71: top float index
72: £temporary689 = £temporary687 * £temporary688
73: £temporary690 = faculty * £temporary689
74: top float faculty
75: pop float empty X
76: call header
77: push float term
78: parameter term, offset 6
79: call function noellipse-noellipse fabs
80: post call
81: £temporary691 = return_value
82: push float 0.000000001
83: if £temporary691 >= 0.000000001 goto 37
84: goto 87
85: check track map float stack
86: goto 37
87: push float sum
88: return_value = sum
89: return
90: empty
91: return
92: function end cos
0: call header
1: push float x
2: parameter x, offset 6
3: call function noellipse-noellipse cos
4: post call
5: £temporary697 = return_value
6: pop float cos_of_x
7: push float cos_of_x
8: push 0
9: if cos_of_x != 0 goto 12
10: goto 23
11: check track map float stack
12: call header
13: push float x
14: parameter x, offset 6
15: call function noellipse-noellipse sin
16: post call
17: £temporary699 = return_value
18: push float cos_of_x
19: £temporary700 = £temporary699 / cos_of_x
20: return_value = £temporary700
21: return
22: goto 28
23: errno = 6
24: push 0
25: return_value = 0
26: return
27: goto 28
28: empty
29: return
30: function end tan
0: push float x
1: push 1
2: if x == 1 goto 5
3: goto 11
4: check track map float stack
5: push float 3.1415926535897932384626433
6: pop float empty X
7: push float 1.57079632679489661923132165
8: return_value = 1.57079632679489661923132165
9: return
10: goto 59
11: push float x
12: push 0
13: if x < 0 goto 16
14: goto 27
15: check track map float stack
16: call header
17: push float x
18: £temporary705 = -x
19: parameter £temporary705, offset 6
20: call function noellipse-noellipse asin
21: post call
22: £temporary706 = return_value
23: £temporary707 = -£temporary706
24: return_value = £temporary707
25: return
26: goto 59
27: push float x
28: push 1
29: if x < 1 goto 32
30: goto 52
31: check track map float stack
32: call header
33: push float x
34: call header
35: push 1
36: push float x
37: push float x
38: £temporary709 = x * x
39: £temporary710 = 1 - £temporary709
40: parameter £temporary710, offset 6
41: call function noellipse-noellipse sqrt
42: post call
43: £temporary711 = return_value
44: £temporary712 = x / £temporary711
45: parameter £temporary712, offset 6
46: call function noellipse-noellipse atan
47: post call
48: £temporary713 = return_value
49: return_value = £temporary713
50: return
51: goto 59
52: errno = 6
53: push 0
54: return_value = 0
55: return
56: goto 59
57: goto 59
58: goto 59
59: empty
60: return
61: function end asin
0: push float x
1: push 0
2: if x == 0 goto 5
3: goto 11
4: check track map float stack
5: push float 3.1415926535897932384626433
6: pop float empty X
7: push float 1.57079632679489661923132165
8: return_value = 1.57079632679489661923132165
9: return
10: goto 60
11: push float x
12: push 0
13: if x < 0 goto 16
14: goto 28
15: check track map float stack
16: push float 3.1415926535897932384626433
17: call header
18: push float x
19: £temporary719 = -x
20: parameter £temporary719, offset 6
21: call function noellipse-noellipse acos
22: post call
23: £temporary720 = return_value
24: £temporary721 = 3.1415926535897932384626433 - £temporary720
25: return_value = £temporary721
26: return
27: goto 60
28: push float x
29: push 1
30: if x <= 1 goto 33
31: goto 53
32: check track map float stack
33: call header
34: call header
35: push 1
36: push float x
37: push float x
38: £temporary723 = x * x
39: £temporary724 = 1 - £temporary723
40: parameter £temporary724, offset 6
41: call function noellipse-noellipse sqrt
42: post call
43: £temporary725 = return_value
44: push float x
45: £temporary726 = £temporary725 / x
46: parameter £temporary726, offset 6
47: call function noellipse-noellipse atan
48: post call
49: £temporary727 = return_value
50: return_value = £temporary727
51: return
52: goto 60
53: errno = 6
54: push 0
55: return_value = 0
56: return
57: goto 60
58: goto 60
59: goto 60
60: empty
61: return
62: function end acos
0: push float x
1: push 0
2: if x < 0 goto 5
3: goto 16
4: check track map float stack
5: call header
6: push float x
7: £temporary732 = -x
8: parameter £temporary732, offset 6
9: call function noellipse-noellipse atan
10: post call
11: £temporary733 = return_value
12: £temporary734 = -£temporary733
13: return_value = £temporary734
14: return
15: goto 122
16: push float x
17: push 1
18: if x > 1 goto 21
19: goto 36
20: check track map float stack
21: push float 3.1415926535897932384626433
22: pop float empty X
23: push float 1.57079632679489661923132165
24: call header
25: push 1
26: push float x
27: £temporary736 = 1 / x
28: parameter £temporary736, offset 6
29: call function noellipse-noellipse atan
30: post call
31: £temporary737 = return_value
32: £temporary738 = 1.57079632679489661923132165 - £temporary737
33: return_value = £temporary738
34: return
35: goto 122
36: push float x
37: push float 0.5
38: if x > 0.5 goto 41
39: goto 65
40: check track map float stack
41: push float 2
42: call header
43: push float x
44: push 1
45: call header
46: push 1
47: push float x
48: push float x
49: £temporary740 = x * x
50: £temporary741 = 1 + £temporary740
51: parameter £temporary741, offset 6
52: call function noellipse-noellipse sqrt
53: post call
54: £temporary742 = return_value
55: £temporary743 = 1 + £temporary742
56: £temporary744 = x / £temporary743
57: parameter £temporary744, offset 6
58: call function noellipse-noellipse atan
59: post call
60: £temporary745 = return_value
61: £temporary746 = 2 * £temporary745
62: return_value = £temporary746
63: return
64: goto 122
65: push 0
66: pop float sum
67: push 1
68: pop float sign
69: push 1
70: pop float denominator
71: push float x
72: pop float product
73: push float term
74: pop float empty X
75: push float sign
76: push float product
77: £temporary747 = sign * product
78: push float denominator
79: £temporary748 = £temporary747 / denominator
80: top float term
81: pop float empty X
82: push float sum
83: push float term
84: £temporary749 = sum + term
85: top float sum
86: pop float empty X
87: push float sign
88: pop float empty X
89: push float sign
90: £temporary750 = -sign
91: top float sign
92: pop float empty X
93: push float product
94: push float x
95: push float x
96: £temporary751 = x * x
97: £temporary752 = product * £temporary751
98: top float product
99: pop float empty X
100: push float denominator
101: push float 2
102: £temporary753 = denominator + 2
103: top float denominator
104: pop float empty X
105: call header
106: push float term
107: parameter term, offset 6
108: call function noellipse-noellipse fabs
109: post call
110: £temporary754 = return_value
111: push float 0.000000001
112: if £temporary754 >= 0.000000001 goto 73
113: goto 116
114: check track map float stack
115: goto 73
116: push float sum
117: return_value = sum
118: return
119: goto 122
120: goto 122
121: goto 122
122: empty
123: return
124: function end atan
0: push float y
1: push 0
2: if y > 0 goto 5
3: goto 16
4: check track map float stack
5: call header
6: push float x
7: push float y
8: £temporary762 = x / y
9: parameter £temporary762, offset 6
10: call function noellipse-noellipse atan
11: post call
12: £temporary763 = return_value
13: return_value = £temporary763
14: return
15: goto 103
16: push float x
17: push 0
18: if x >= 0 goto 20
19: goto 38
20: push float y
21: push 0
22: if y < 0 goto 25
23: goto 38
24: check track map float stack
25: push float 3.1415926535897932384626433
26: call header
27: push float x
28: push float y
29: £temporary767 = x / y
30: parameter £temporary767, offset 6
31: call function noellipse-noellipse atan
32: post call
33: £temporary768 = return_value
34: £temporary769 = 3.1415926535897932384626433 + £temporary768
35: return_value = £temporary769
36: return
37: goto 103
38: push float x
39: push 0
40: if x < 0 goto 42
41: goto 62
42: push float y
43: push 0
44: if y < 0 goto 47
45: goto 62
46: check track map float stack
47: push float 3.1415926535897932384626433
48: pop float empty X
49: push float -3.1415926535897932384626433
50: call header
51: push float x
52: push float y
53: £temporary773 = x / y
54: parameter £temporary773, offset 6
55: call function noellipse-noellipse atan
56: post call
57: £temporary774 = return_value
58: £temporary775 = -3.1415926535897932384626433 + £temporary774
59: return_value = £temporary775
60: return
61: goto 103
62: push float x
63: push 0
64: if x > 0 goto 66
65: goto 77
66: push float y
67: push 0
68: if y == 0 goto 71
69: goto 77
70: check track map float stack
71: push float 3.1415926535897932384626433
72: pop float empty X
73: push float 1.57079632679489661923132165
74: return_value = 1.57079632679489661923132165
75: return
76: goto 103
77: push float x
78: push 0
79: if x < 0 goto 81
80: goto 94
81: push float y
82: push 0
83: if y == 0 goto 86
84: goto 94
85: check track map float stack
86: push float 3.1415926535897932384626433
87: pop float empty X
88: push float -3.1415926535897932384626433
89: pop float empty X
90: push float -1.57079632679489661923132165
91: return_value = -1.57079632679489661923132165
92: return
93: goto 103
94: errno = 6
95: push 0
96: return_value = 0
97: return
98: goto 103
99: goto 103
100: goto 103
101: goto 103
102: goto 103
103: empty
104: return
105: function end atan2
0: call header
1: push float x
2: parameter x, offset 6
3: call function noellipse-noellipse exp
4: post call
5: £temporary785 = return_value
6: call header
7: push float x
8: £temporary786 = -x
9: parameter £temporary786, offset 6
10: call function noellipse-noellipse exp
11: post call
12: £temporary787 = return_value
13: £temporary788 = £temporary785 - £temporary787
14: push float 2
15: £temporary789 = £temporary788 / 2
16: return_value = £temporary789
17: return
18: empty
19: return
20: function end sinh
0: call header
1: push float x
2: parameter x, offset 6
3: call function noellipse-noellipse exp
4: post call
5: £temporary792 = return_value
6: call header
7: push float x
8: £temporary793 = -x
9: parameter £temporary793, offset 6
10: call function noellipse-noellipse exp
11: post call
12: £temporary794 = return_value
13: £temporary795 = £temporary792 + £temporary794
14: push float 2
15: £temporary796 = £temporary795 / 2
16: return_value = £temporary796
17: return
18: empty
19: return
20: function end cosh
0: call header
1: push float x
2: parameter x, offset 6
3: call function noellipse-noellipse sinh
4: post call
5: £temporary799 = return_value
6: call header
7: push float x
8: parameter x, offset 6
9: call function noellipse-noellipse cosh
10: post call
11: £temporary800 = return_value
12: £temporary801 = £temporary799 / £temporary800
13: return_value = £temporary801
14: return
15: empty
16: return
17: function end tanh
0: push float x
1: push 0
2: if x < 0 goto 5
3: goto 16
4: check track map float stack
5: call header
6: push float x
7: £temporary805 = -x
8: parameter £temporary805, offset 6
9: call function noellipse-noellipse ceil
10: post call
11: £temporary806 = return_value
12: £temporary807 = -£temporary806
13: return_value = £temporary807
14: return
15: goto 16
16: push float x
17: £temporary808 = float_to_int x (Double -> Signed_Long_Int)
18: £temporary809 = int_to_float £temporary808 (Signed_Long_Int -> Double)
19: return_value = £temporary809
20: return
21: empty
22: return
23: function end floor
0: push float x
1: push 0
2: if x < 0 goto 5
3: goto 16
4: check track map float stack
5: call header
6: push float x
7: £temporary812 = -x
8: parameter £temporary812, offset 6
9: call function noellipse-noellipse floor
10: post call
11: £temporary813 = return_value
12: £temporary814 = -£temporary813
13: return_value = £temporary814
14: return
15: goto 16
16: push float x
17: push float 0.999999999999
18: £temporary815 = x + 0.999999999999
19: £temporary816 = float_to_int £temporary815 (Double -> Signed_Long_Int)
20: £temporary817 = int_to_float £temporary816 (Signed_Long_Int -> Double)
21: return_value = £temporary817
22: return
23: empty
24: return
25: function end ceil
0: push float x
1: push 0
2: if x < 0 goto 4
3: goto 10
4: empty
5: push float x
6: push float 0.5
7: £temporary820 = x - 0.5
8: decrease stack
9: goto 14
10: empty
11: push float x
12: push float 0.5
13: £temporary821 = x + 0.5
14: empty
15: £temporary826 = float_to_int £temporary825 (Double -> Signed_Long_Int)
16: £temporary827 = int_to_float £temporary826 (Signed_Long_Int -> Double)
17: return_value = £temporary827
18: return
19: empty
20: return
21: function end round
0: push float x
1: push 0
2: if x < 0 goto 4
3: goto 9
4: empty
5: push float x
6: £temporary829 = -x
7: decrease stack
8: goto 11
9: empty
10: push float x
11: empty
12: return_value = £temporary833
13: return
14: empty
15: return
16: function end fabs
0: £temporary834 = bp
1: bp_pointer = £temporary834
2: £temporary835 -> buf = *buf
3: £temporary836 -> bp_pointer = *bp_pointer
4: £temporary835 -> buf = £temporary836 -> bp_pointer
5: £temporary837 -> buf = *buf, offset 2
6: £temporary838 -> bp_pointer = *bp_pointer, offset 2
7: £temporary837 -> buf = £temporary838 -> bp_pointer
8: £temporary839 -> buf = *buf, offset 4
9: £temporary840 -> bp_pointer = *bp_pointer, offset 4
10: £temporary839 -> buf = £temporary840 -> bp_pointer
11: return_value = 0
12: return
13: empty
14: return
15: function end setjmp
0: bx = return_value
1: £temporary843 -> buf = *buf
2: cx = £temporary843 -> buf
3: £temporary845 -> buf = *buf, offset 4
4: di = £temporary845 -> buf
5: £temporary847 -> buf = *buf, offset 2
6: bp = £temporary847 -> buf
7: jump to 
8: empty
9: return
10: function end longjmp
0: call header
1: parameter string_Signal2025i20function2025p0A#, offset 6
2: parameter sig, offset 8
3: parameter func, offset 10
4: call function noellipse-ellipse printf, extra 0
5: post call
6: £temporary850 = int_to_int sig (Signed_Int -> Signed_Short_Int)
7: al = £temporary850
8: ah = 37
9: dx = func
10: interrupt 33
11: call header
12: parameter string_Signal20done0A#, offset 6
13: call function noellipse-ellipse printf, extra 0
14: post call
15: empty
16: return
17: function end signal
0: call header
1: parameter string_0ARaise20signal2025i0A#, offset 6
2: parameter sig, offset 8
3: call function noellipse-ellipse printf, extra 0
4: post call
5: £temporary860 = int_to_int sig (Signed_Int -> Signed_Short_Int)
6: al = £temporary860
7: ah = 53
8: interrupt 33
9: £temporary862 = bx
10: func = £temporary862
11: call header
12: parameter string_Raise20function2025p0A#, offset 6
13: parameter func, offset 8
14: call function noellipse-ellipse printf, extra 0
15: post call
16: if func == 0 goto 19
17: goto 26
18: check track map float stack
19: call header
20: parameter string_Raise20default0A#, offset 6
21: call function noellipse-ellipse printf, extra 0
22: post call
23: return_value = 1
24: return
25: goto 50
26: if func == 0 goto 29
27: goto 36
28: check track map float stack
29: call header
30: parameter string_Raise20error0A#, offset 6
31: call function noellipse-ellipse printf, extra 0
32: post call
33: return_value = 0
34: return
35: goto 50
36: call header
37: parameter string_Raise20function2C20calling2025i20with2025i0A#, offset 6
38: parameter func, offset 8
39: parameter sig, offset 10
40: call function noellipse-ellipse printf, extra 0
41: post call
42: call header
43: parameter sig, offset 6
44: call function noellipse-noellipse func
45: post call
46: return_value = 1
47: return
48: goto 50
49: goto 50
50: empty
51: return
52: function end raise
0: ah = 60
1: cx = 0
2: dx = name
3: interrupt 33
4: £temporary886 = ax
5: handle = £temporary886
6: if carry goto 9
7: goto 13
8: check track map float stack
9: errno = 9
10: return_value = -1
11: return
12: goto 13
13: return_value = handle
14: return
15: empty
16: return
17: function end filecreate
0: ah = 67
1: al = 0
2: dx = name
3: interrupt 33
4: if carry goto 8
5: goto 6
6: £temporary893 = 1
7: goto 9
8: £temporary893 = 0
9: empty
10: return_value = £temporary893
11: return
12: empty
13: return
14: function end fileexists
0: ah = 61
1: al = mode
2: dx = name
3: interrupt 33
4: if carry goto 7
5: goto 11
6: check track map float stack
7: errno = 9
8: return_value = -1
9: return
10: goto 15
11: £temporary898 = ax
12: return_value = £temporary898
13: return
14: goto 15
15: empty
16: return
17: function end fileopen
0: index = 0
1: empty
2: if index < 20 goto 5
3: goto 29
4: check track map float stack
5: empty
6: £temporary902 = index * 29
7: £temporary903 = g_fileArray + £temporary902
8: £temporary901 -> £temporary903 = *£temporary903
9: if £temporary901.open$0 -> £temporary903 != 0 goto 26
10: goto 12
11: check track map float stack
12: call header
13: parameter name, offset 6
14: parameter mode, offset 8
15: £temporary907 = index * 29
16: £temporary908 = g_fileArray + £temporary907
17: £temporary906 -> £temporary908 = *£temporary908
18: £temporary909 = &£temporary906 -> £temporary908
19: parameter £temporary909, offset 10
20: call function noellipse-noellipse freopen
21: post call
22: £temporary910 = return_value
23: return_value = £temporary910
24: return
25: goto 26
26: empty
27: index = index + 1
28: goto 1
29: return_value = 0
30: return
31: empty
32: return
33: function end fopen
0: handle = -1
1: call header
2: parameter mode, offset 6
3: parameter string_r#, offset 8
4: call function noellipse-noellipse strcmp
5: post call
6: £temporary914 = return_value
7: if £temporary914 == 0 goto 10
8: goto 18
9: check track map float stack
10: call header
11: parameter name, offset 6
12: parameter 64, offset 8
13: call function noellipse-noellipse fileopen
14: post call
15: £temporary916 = return_value
16: handle = £temporary916
17: goto 157
18: call header
19: parameter mode, offset 6
20: parameter string_w#, offset 8
21: call function noellipse-noellipse strcmp
22: post call
23: £temporary917 = return_value
24: if £temporary917 == 0 goto 27
25: goto 34
26: check track map float stack
27: call header
28: parameter name, offset 6
29: call function noellipse-noellipse filecreate
30: post call
31: £temporary919 = return_value
32: handle = £temporary919
33: goto 157
34: call header
35: parameter mode, offset 6
36: parameter string_a#, offset 8
37: call function noellipse-noellipse strcmp
38: post call
39: £temporary920 = return_value
40: if £temporary920 == 0 goto 43
41: goto 68
42: check track map float stack
43: call header
44: parameter name, offset 6
45: parameter 65, offset 8
46: call function noellipse-noellipse fileopen
47: post call
48: £temporary922 = return_value
49: handle = £temporary922
50: if handle != -1 goto 53
51: goto 60
52: check track map float stack
53: call header
54: parameter stream, offset 6
55: parameter 0, offset 8
56: parameter 2, offset 10
57: call function noellipse-noellipse fseek
58: post call
59: goto 157
60: call header
61: parameter name, offset 6
62: call function noellipse-noellipse filecreate
63: post call
64: £temporary925 = return_value
65: handle = £temporary925
66: goto 157
67: goto 157
68: call header
69: parameter mode, offset 6
70: parameter string_r2B#, offset 8
71: call function noellipse-noellipse strcmp
72: post call
73: £temporary926 = return_value
74: if £temporary926 == 0 goto 77
75: goto 85
76: check track map float stack
77: call header
78: parameter name, offset 6
79: parameter 66, offset 8
80: call function noellipse-noellipse fileopen
81: post call
82: £temporary928 = return_value
83: handle = £temporary928
84: goto 157
85: call header
86: parameter mode, offset 6
87: parameter string_w2B#, offset 8
88: call function noellipse-noellipse strcmp
89: post call
90: £temporary929 = return_value
91: if £temporary929 == 0 goto 94
92: goto 118
93: check track map float stack
94: call header
95: parameter name, offset 6
96: call function noellipse-noellipse fileexists
97: post call
98: £temporary931 = return_value
99: if £temporary931 != 0 goto 102
100: goto 110
101: check track map float stack
102: call header
103: parameter name, offset 6
104: parameter 66, offset 8
105: call function noellipse-noellipse fileopen
106: post call
107: £temporary932 = return_value
108: handle = £temporary932
109: goto 157
110: call header
111: parameter name, offset 6
112: call function noellipse-noellipse filecreate
113: post call
114: £temporary933 = return_value
115: handle = £temporary933
116: goto 157
117: goto 157
118: call header
119: parameter mode, offset 6
120: parameter string_a2B#, offset 8
121: call function noellipse-noellipse strcmp
122: post call
123: £temporary935 = return_value
124: if £temporary935 == 0 goto 127
125: goto 157
126: check track map float stack
127: call header
128: parameter name, offset 6
129: parameter 66, offset 8
130: call function noellipse-noellipse fileopen
131: post call
132: £temporary937 = return_value
133: handle = £temporary937
134: if handle != -1 goto 137
135: goto 144
136: check track map float stack
137: call header
138: parameter stream, offset 6
139: parameter 0, offset 8
140: parameter 2, offset 10
141: call function noellipse-noellipse fseek
142: post call
143: goto 157
144: call header
145: parameter name, offset 6
146: call function noellipse-noellipse filecreate
147: post call
148: £temporary940 = return_value
149: handle = £temporary940
150: goto 157
151: goto 157
152: goto 157
153: goto 157
154: goto 157
155: goto 157
156: goto 157
157: if handle != -1 goto 160
158: goto 177
159: check track map float stack
160: £temporary942 -> stream = *stream
161: £temporary942 -> stream = 1
162: £temporary943 -> stream = *stream, offset 2
163: £temporary943 -> stream = handle
164: £temporary944 -> stream = *stream, offset 25
165: £temporary944 -> stream = 0
166: call header
167: £temporary945 -> stream = *stream, offset 4
168: parameter £temporary945 -> stream, offset 6
169: parameter name, offset 8
170: call function noellipse-noellipse strcpy
171: post call
172: £temporary947 -> stream = *stream, offset 27
173: £temporary947 -> stream = 0
174: return_value = stream
175: return
176: goto 182
177: £temporary948 -> stream = *stream
178: £temporary948 -> stream = 0
179: return_value = 0
180: return
181: goto 182
182: empty
183: return
184: function end freopen
0: if stream == 0 goto 3
1: goto 35
2: check track map float stack
3: index = 0
4: empty
5: if index < 20 goto 8
6: goto 35
7: check track map float stack
8: empty
9: £temporary988 = index * 29
10: £temporary989 = g_fileArray + £temporary988
11: £temporary987 -> £temporary989 = *£temporary989
12: if £temporary987.open$0 -> £temporary989 != 0 goto 15
13: goto 31
14: check track map float stack
15: call header
16: £temporary991 = index * 29
17: £temporary992 = g_fileArray + £temporary991
18: £temporary990 -> £temporary992 = *£temporary992
19: £temporary993 = &£temporary990 -> £temporary992
20: parameter £temporary993, offset 6
21: call function noellipse-noellipse fflush
22: post call
23: £temporary994 = return_value
24: if £temporary994 == -1 goto 27
25: goto 31
26: check track map float stack
27: return_value = -1
28: return
29: goto 31
30: goto 31
31: empty
32: index = index + 1
33: goto 4
34: goto 35
35: return_value = 0
36: return
37: empty
38: return
39: function end fflush
0: if stream != 0 goto 3
1: goto 29
2: check track map float stack
3: ah = 62
4: £temporary1001 -> stream = *stream, offset 2
5: bx = £temporary1001 -> stream
6: interrupt 33
7: if carry goto 10
8: goto 14
9: check track map float stack
10: errno = 11
11: return_value = -1
12: return
13: goto 14
14: £temporary1003 -> stream = *stream, offset 27
15: if £temporary1003 -> stream != 0 goto 18
16: goto 24
17: check track map float stack
18: call header
19: £temporary1004 -> stream = *stream, offset 4
20: parameter £temporary1004 -> stream, offset 6
21: call function noellipse-noellipse remove
22: post call
23: goto 24
24: £temporary1007 -> stream = *stream
25: £temporary1007 -> stream = 0
26: return_value = 0
27: return
28: goto 63
29: index = 0
30: empty
31: if index < 20 goto 34
32: goto 60
33: check track map float stack
34: empty
35: £temporary1011 = index * 29
36: £temporary1012 = g_fileArray + £temporary1011
37: £temporary1010 -> £temporary1012 = *£temporary1012
38: if £temporary1010.open$0 -> £temporary1012 != 0 goto 41
39: goto 57
40: check track map float stack
41: call header
42: £temporary1014 = index * 29
43: £temporary1015 = g_fileArray + £temporary1014
44: £temporary1013 -> £temporary1015 = *£temporary1015
45: £temporary1016 = &£temporary1013 -> £temporary1015
46: parameter £temporary1016, offset 6
47: call function noellipse-noellipse fclose
48: post call
49: £temporary1017 = return_value
50: if £temporary1017 == -1 goto 53
51: goto 57
52: check track map float stack
53: return_value = -1
54: return
55: goto 57
56: goto 57
57: empty
58: index = index + 1
59: goto 30
60: return_value = 0
61: return
62: goto 63
63: empty
64: return
65: function end fclose
0: ah = 65
1: cl = 0
2: dx = name
3: interrupt 33
4: if carry goto 7
5: goto 11
6: check track map float stack
7: errno = 18
8: return_value = -1
9: return
10: goto 11
11: return_value = 0
12: return
13: empty
14: return
15: function end remove
0: ah = 86
1: cl = 0
2: dx = oldName
3: di = newName
4: interrupt 33
5: if carry goto 8
6: goto 12
7: check track map float stack
8: errno = 19
9: return_value = -1
10: return
11: goto 12
12: return_value = 0
13: return
14: empty
15: return
16: function end rename
0: return_value = 0
1: return
2: empty
3: return
4: function end setvbuf
0: empty
1: return
2: function end setbuf
0: c = 0
1: call header
2: £temporary1031 = &c
3: parameter £temporary1031, offset 6
4: parameter 1, offset 8
5: parameter 1, offset 10
6: parameter stream, offset 12
7: call function noellipse-noellipse fread
8: post call
9: £temporary1032 = return_value
10: if £temporary1032 > 0 goto 13
11: goto 17
12: check track map float stack
13: £temporary1034 = int_to_int c (Signed_Char -> Signed_Int)
14: return_value = £temporary1034
15: return
16: goto 17
17: return_value = -1
18: return
19: empty
20: return
21: function end fgetc
0: count = 0
1: prevChar = 0
2: £temporary1040 = size - 1
3: if count < £temporary1040 goto 6
4: goto 46
5: check track map float stack
6: currChar = 0
7: call header
8: parameter stream, offset 6
9: parameter string_25c#, offset 8
10: £temporary1042 = &currChar
11: parameter £temporary1042, offset 10
12: call function noellipse-ellipse fscanf, extra 0
13: post call
14: if prevChar == 13 goto 16
15: goto 24
16: if currChar == 10 goto 19
17: goto 24
18: check track map float stack
19: £temporary1048 = text + count
20: £temporary1047 -> £temporary1048 = *£temporary1048
21: £temporary1047 -> £temporary1048 = 0
22: goto 46
23: goto 24
24: £temporary1049 = int_to_int currChar (Signed_Char -> Signed_Int)
25: if £temporary1049 == -1 goto 28
26: goto 33
27: check track map float stack
28: £temporary1052 = text + count
29: £temporary1051 -> £temporary1052 = *£temporary1052
30: £temporary1051 -> £temporary1052 = 0
31: goto 46
32: goto 33
33: if currChar != 13 goto 35
34: goto 44
35: if currChar != 10 goto 38
36: goto 44
37: check track map float stack
38: £temporary1056 = count
39: count = count + 1
40: £temporary1058 = text + £temporary1056
41: £temporary1057 -> £temporary1058 = *£temporary1058
42: £temporary1057 -> £temporary1058 = currChar
43: goto 44
44: prevChar = currChar
45: goto 2
46: return_value = text
47: return
48: empty
49: return
50: function end fgets
0: call header
1: parameter s, offset 6
2: call function noellipse-noellipse strlen
3: post call
4: £temporary1063 = return_value
5: £temporary1064 = £temporary1063 + 1
6: £temporary1065 = £temporary1064 * 1
7: size = £temporary1065
8: call header
9: parameter s, offset 6
10: parameter size, offset 8
11: parameter 1, offset 10
12: parameter stream, offset 12
13: call function noellipse-noellipse fwrite
14: post call
15: £temporary1066 = return_value
16: if £temporary1066 == size goto 18
17: goto 21
18: empty
19: £temporary1071 = 0
20: goto 23
21: empty
22: £temporary1071 = -1
23: empty
24: return_value = £temporary1071
25: return
26: empty
27: return
28: function end fputs
0: call header
1: parameter stdin, offset 6
2: call function noellipse-noellipse fgetc
3: post call
4: £temporary1077 = return_value
5: return_value = £temporary1077
6: return
7: empty
8: return
9: function end getchar
0: call header
1: parameter s, offset 6
2: parameter -1, offset 8
3: parameter stdin, offset 10
4: call function noellipse-noellipse fgets
5: post call
6: £temporary1079 = return_value
7: if £temporary1079 != 0 goto 10
8: goto 27
9: check track map float stack
10: call header
11: parameter s, offset 6
12: call function noellipse-noellipse strlen
13: post call
14: £temporary1081 = return_value
15: size = £temporary1081
16: if size > 0 goto 19
17: goto 24
18: check track map float stack
19: £temporary1083 = size - 1
20: £temporary1085 = s + £temporary1083
21: £temporary1084 -> £temporary1085 = *£temporary1085
22: £temporary1084 -> £temporary1085 = 0
23: goto 24
24: return_value = s
25: return
26: goto 30
27: return_value = 0
28: return
29: goto 30
30: empty
31: return
32: function end gets
0: call header
1: parameter s, offset 6
2: parameter stdout, offset 8
3: call function noellipse-noellipse fputs
4: post call
5: £temporary1090 = return_value
6: if £temporary1090 != 0 goto 9
7: goto 18
8: check track map float stack
9: call header
10: parameter 10, offset 6
11: parameter stdout, offset 8
12: call function noellipse-noellipse fputc
13: post call
14: £temporary1092 = return_value
15: return_value = £temporary1092
16: return
17: goto 18
18: return_value = -1
19: return
20: empty
21: return
22: function end puts
0: £temporary1097 -> stream = *stream, offset 20
1: £temporary1098 = int_to_int £temporary1097 -> stream (Signed_Char -> Signed_Int)
2: if £temporary1098 != -1 goto 5
3: goto 9
4: check track map float stack
5: £temporary1100 -> stream = *stream, offset 20
6: £temporary1101 = int_to_int c (Signed_Int -> Signed_Char)
7: £temporary1100 -> stream = £temporary1101
8: goto 9
9: return_value = c
10: return
11: empty
12: return
13: function end ungetc
0: £temporary1103 -> stream = *stream, offset 2
1: bx = £temporary1103 -> stream
2: £temporary1105 = size * nobj
3: cx = £temporary1105
4: ah = 63
5: dx = ptr
6: interrupt 33
7: if carry goto 10
8: goto 16
9: check track map float stack
10: £temporary1109 -> stream = *stream, offset 21
11: errno = 14
12: £temporary1109 -> stream = errno
13: return_value = 0
14: return
15: goto 20
16: £temporary1110 = ax
17: return_value = £temporary1110
18: return
19: goto 20
20: empty
21: return
22: function end fread
0: £temporary1112 -> stream = *stream, offset 2
1: bx = £temporary1112 -> stream
2: £temporary1114 = size * nobj
3: cx = £temporary1114
4: ah = 64
5: dx = ptr
6: interrupt 33
7: if carry goto 10
8: goto 16
9: check track map float stack
10: £temporary1118 -> stream = *stream, offset 21
11: errno = 13
12: £temporary1118 -> stream = errno
13: return_value = 0
14: return
15: goto 20
16: £temporary1119 = ax
17: return_value = £temporary1119
18: return
19: goto 20
20: empty
21: return
22: function end fwrite
0: £temporary1121 = int_to_int origin (Signed_Int -> Signed_Short_Int)
1: al = £temporary1121
2: ah = 66
3: £temporary1124 -> stream = *stream, offset 2
4: bx = £temporary1124 -> stream
5: cx = 0
6: £temporary1127 = int_to_int offset (Signed_Int -> Signed_Int)
7: dx = £temporary1127
8: interrupt 33
9: if carry goto 19
10: goto 12
11: check track map float stack
12: £temporary1130 -> stream = *stream, offset 23
13: £temporary1131 = ax
14: £temporary1130 -> stream = £temporary1131
15: £temporary1132 -> stream = *stream, offset 23
16: return_value = £temporary1132 -> stream
17: return
18: goto 24
19: £temporary1133 -> stream = *stream, offset 21
20: £temporary1133 -> stream = 15
21: return_value = -1
22: return
23: goto 24
24: empty
25: return
26: function end fseek
0: call header
1: parameter stream, offset 6
2: parameter 0, offset 8
3: parameter 1, offset 10
4: call function noellipse-noellipse fseek
5: post call
6: £temporary1134 = return_value
7: return_value = £temporary1134
8: return
9: empty
10: return
11: function end ftell
0: call header
1: parameter stream, offset 6
2: parameter 0, offset 8
3: parameter 0, offset 10
4: call function noellipse-noellipse fseek
5: post call
6: empty
7: return
8: function end rewind
0: £temporary1143 -> ptr = *ptr
1: call header
2: parameter stream, offset 6
3: call function noellipse-noellipse ftell
4: post call
5: £temporary1144 = return_value
6: £temporary1145 = int_to_int £temporary1144 (Signed_Int -> Signed_Int)
7: £temporary1143 -> ptr = £temporary1145
8: return_value = 0
9: return
10: empty
11: return
12: function end fgetpos
0: call header
1: parameter stream, offset 6
2: £temporary1147 -> ptr = *ptr
3: parameter £temporary1147 -> ptr, offset 8
4: parameter 0, offset 10
5: call function noellipse-noellipse fseek
6: post call
7: £temporary1148 = return_value
8: £temporary1149 = int_to_int £temporary1148 (Signed_Int -> Signed_Int)
9: return_value = £temporary1149
10: return
11: empty
12: return
13: function end fsetpos
0: £temporary1153 -> stream = *stream, offset 21
1: errno = 0
2: £temporary1153 -> stream = errno
3: empty
4: return
5: function end clearerr
0: call header
1: parameter stream, offset 6
2: parameter 0, offset 8
3: parameter 1, offset 10
4: call function noellipse-noellipse fseek
5: post call
6: £temporary1154 = return_value
7: £temporary1155 = int_to_int £temporary1154 (Signed_Int -> Unsigned_Long_Int)
8: currPosition = £temporary1155
9: call header
10: parameter stream, offset 6
11: parameter 0, offset 8
12: parameter 2, offset 10
13: call function noellipse-noellipse fseek
14: post call
15: £temporary1156 = return_value
16: £temporary1157 = int_to_int £temporary1156 (Signed_Int -> Unsigned_Long_Int)
17: lastPosition = £temporary1157
18: call header
19: parameter stream, offset 6
20: £temporary1158 = int_to_int currPosition (Unsigned_Long_Int -> Signed_Int)
21: parameter £temporary1158, offset 8
22: parameter 0, offset 10
23: call function noellipse-noellipse fseek
24: post call
25: if currPosition == lastPosition goto 27
26: goto 29
27: £temporary1161 = 1
28: goto 30
29: £temporary1161 = 0
30: empty
31: endOfFile = £temporary1161
32: return_value = endOfFile
33: return
34: empty
35: return
36: function end feof
0: £temporary1171 -> stream = *stream, offset 21
1: return_value = £temporary1171 -> stream
2: return
3: empty
4: return
5: function end ferror
0: call header
1: parameter string_25s3A2025s2E0A#, offset 6
2: parameter s, offset 8
3: call header
4: parameter errno, offset 16
5: call function noellipse-noellipse strerror
6: post call
7: £temporary1172 = return_value
8: parameter £temporary1172, offset 10
9: call function noellipse-ellipse printf, extra 0
10: post call
11: empty
12: return
13: function end perror
0: index = 0
1: empty
2: if index < g_tempSize goto 5
3: goto 24
4: check track map float stack
5: empty
6: call header
7: parameter name, offset 6
8: £temporary1181 = index * 2
9: £temporary1182 = g_tempArray + £temporary1181
10: £temporary1180 -> £temporary1182 = *£temporary1182
11: parameter £temporary1180 -> £temporary1182, offset 8
12: call function noellipse-noellipse strcmp
13: post call
14: £temporary1183 = return_value
15: if £temporary1183 == 0 goto 18
16: goto 21
17: check track map float stack
18: return_value = 1
19: return
20: goto 21
21: empty
22: index = index + 1
23: goto 1
24: return_value = 0
25: return
26: empty
27: return
28: function end existsTempName
0: if size < 3 goto 3
1: goto 75
2: check track map float stack
3: c = 97
4: empty
5: if c <= 122 goto 8
6: goto 75
7: check track map float stack
8: empty
9: £temporary1191 = name + size
10: £temporary1190 -> £temporary1191 = *£temporary1191
11: £temporary1190 -> £temporary1191 = c
12: £temporary1192 = size + 1
13: £temporary1194 = name + £temporary1192
14: £temporary1193 -> £temporary1194 = *£temporary1194
15: £temporary1193 -> £temporary1194 = 0
16: call header
17: parameter name, offset 6
18: call function noellipse-noellipse fileexists
19: post call
20: £temporary1195 = return_value
21: if £temporary1195 != 0 goto 56
22: goto 24
23: check track map float stack
24: case status == 0 goto 28
25: case status == 1 goto 30
26: case end status
27: goto 56
28: return_value = name
29: return
30: call header
31: parameter name, offset 6
32: call function noellipse-noellipse existsTempName
33: post call
34: £temporary1198 = return_value
35: if £temporary1198 != 0 goto 54
36: goto 38
37: check track map float stack
38: call header
39: £temporary1202 = g_tempSize * 2
40: £temporary1203 = g_tempArray + £temporary1202
41: £temporary1201 -> £temporary1203 = *£temporary1203
42: parameter £temporary1201 -> £temporary1203, offset 6
43: parameter name, offset 8
44: call function noellipse-noellipse strcpy
45: post call
46: £temporary1205 = g_tempSize
47: g_tempSize = g_tempSize + 1
48: £temporary1207 = £temporary1205 * 2
49: £temporary1208 = g_tempArray + £temporary1207
50: £temporary1206 -> £temporary1208 = *£temporary1208
51: return_value = £temporary1206 -> £temporary1208
52: return
53: goto 54
54: goto 56
55: goto 56
56: call header
57: parameter name, offset 6
58: £temporary1209 = size + 1
59: parameter £temporary1209, offset 8
60: parameter status, offset 10
61: call function noellipse-noellipse generateTempName
62: post call
63: £temporary1210 = return_value
64: result = £temporary1210
65: if result != 0 goto 68
66: goto 71
67: check track map float stack
68: return_value = result
69: return
70: goto 71
71: empty
72: c = c + 1
73: goto 4
74: goto 75
75: return_value = 0
76: return
77: empty
78: return
79: function end generateTempName
0: call header
1: parameter name, offset 6
2: parameter 0, offset 8
3: parameter 0, offset 10
4: call function noellipse-noellipse generateTempName
5: post call
6: £temporary1219 = return_value
7: if £temporary1219 != 0 goto 9
8: goto 24
9: call header
10: parameter name, offset 6
11: parameter string_w#, offset 8
12: call function noellipse-noellipse fopen
13: post call
14: £temporary1220 = return_value
15: stream = £temporary1220
16: if stream != 0 goto 19
17: goto 24
18: check track map float stack
19: £temporary1224 -> stream = *stream, offset 27
20: £temporary1224 -> stream = 1
21: return_value = stream
22: return
23: goto 24
24: return_value = 0
25: return
26: empty
27: return
28: function end tmpfile
0: if g_tempSize < 16 goto 3
1: goto 13
2: check track map float stack
3: call header
4: parameter name, offset 6
5: parameter 0, offset 8
6: parameter 1, offset 10
7: call function noellipse-noellipse generateTempName
8: post call
9: £temporary1231 = return_value
10: return_value = £temporary1231
11: return
12: goto 13
13: return_value = 0
14: return
15: empty
16: return
17: function end tmpnam
0: c = 0
1: case g_inStatus == 0 goto 5
2: case g_inStatus == 1 goto 18
3: case end g_inStatus
4: goto 26
5: £temporary1235 = int_to_int g_inDevice (Pointer -> Pointer)
6: stream = £temporary1235
7: £temporary1236 -> stream = *stream, offset 2
8: handle = £temporary1236 -> stream
9: ah = 63
10: bx = handle
11: cx = 1
12: £temporary1241 = &c
13: dx = £temporary1241
14: interrupt 33
15: g_inChars = g_inChars + 1
16: return_value = c
17: return
18: £temporary1243 = int_to_int g_inDevice (Pointer -> Pointer)
19: inString = £temporary1243
20: £temporary1244 = g_inChars
21: g_inChars = g_inChars + 1
22: £temporary1246 = inString + £temporary1244
23: £temporary1245 -> £temporary1246 = *£temporary1246
24: return_value = £temporary1245 -> £temporary1246
25: return
26: return_value = 0
27: return
28: empty
29: return
30: function end scanChar
0: case g_inStatus == 0 goto 4
1: case g_inStatus == 1 goto 6
2: case end g_inStatus
3: goto 8
4: g_inChars = g_inChars - 1
5: goto 8
6: g_inChars = g_inChars - 1
7: goto 8
8: empty
9: return
10: function end unscanChar
0: index = 0
1: call header
2: call function noellipse-noellipse scanChar
3: post call
4: £temporary1250 = return_value
5: input = £temporary1250
6: call header
7: £temporary1251 = int_to_int input (Signed_Char -> Signed_Int)
8: parameter £temporary1251, offset 6
9: call function noellipse-noellipse isspace
10: post call
11: £temporary1252 = return_value
12: if £temporary1252 != 0 goto 15
13: goto 21
14: check track map float stack
15: call header
16: call function noellipse-noellipse scanChar
17: post call
18: £temporary1253 = return_value
19: input = £temporary1253
20: goto 6
21: if string != 0 goto 24
22: goto 62
23: check track map float stack
24: if not != 0 goto 35
25: goto 26
26: call header
27: parameter pattern, offset 6
28: £temporary1258 = int_to_int input (Signed_Char -> Signed_Int)
29: parameter £temporary1258, offset 8
30: call function noellipse-noellipse strchr
31: post call
32: £temporary1259 = return_value
33: if £temporary1259 != 0 goto 47
34: goto 35
35: if not != 0 goto 37
36: goto 58
37: call header
38: parameter pattern, offset 6
39: £temporary1262 = int_to_int input (Signed_Char -> Signed_Int)
40: parameter £temporary1262, offset 8
41: call function noellipse-noellipse strchr
42: post call
43: £temporary1263 = return_value
44: if £temporary1263 != 0 goto 58
45: goto 47
46: check track map float stack
47: £temporary1269 = index
48: index = index + 1
49: £temporary1271 = string + £temporary1269
50: £temporary1270 -> £temporary1271 = *£temporary1271
51: £temporary1270 -> £temporary1271 = input
52: call header
53: call function noellipse-noellipse scanChar
54: post call
55: £temporary1272 = return_value
56: input = £temporary1272
57: goto 24
58: £temporary1274 = string + index
59: £temporary1273 -> £temporary1274 = *£temporary1274
60: £temporary1273 -> £temporary1274 = 0
61: goto 92
62: if not != 0 goto 73
63: goto 64
64: call header
65: parameter pattern, offset 6
66: £temporary1277 = int_to_int input (Signed_Char -> Signed_Int)
67: parameter £temporary1277, offset 8
68: call function noellipse-noellipse strchr
69: post call
70: £temporary1278 = return_value
71: if £temporary1278 != 0 goto 85
72: goto 73
73: if not != 0 goto 75
74: goto 92
75: call header
76: parameter pattern, offset 6
77: £temporary1281 = int_to_int input (Signed_Char -> Signed_Int)
78: parameter £temporary1281, offset 8
79: call function noellipse-noellipse strchr
80: post call
81: £temporary1282 = return_value
82: if £temporary1282 != 0 goto 92
83: goto 85
84: check track map float stack
85: call header
86: call function noellipse-noellipse scanChar
87: post call
88: £temporary1288 = return_value
89: input = £temporary1288
90: goto 62
91: goto 92
92: empty
93: return
94: function end scanPattern
0: index = 0
1: call header
2: call function noellipse-noellipse scanChar
3: post call
4: £temporary1298 = return_value
5: input = £temporary1298
6: found = 0
7: call header
8: £temporary1299 = int_to_int input (Signed_Char -> Signed_Int)
9: parameter £temporary1299, offset 6
10: call function noellipse-noellipse isspace
11: post call
12: £temporary1300 = return_value
13: if £temporary1300 != 0 goto 16
14: goto 22
15: check track map float stack
16: call header
17: call function noellipse-noellipse scanChar
18: post call
19: £temporary1301 = return_value
20: input = £temporary1301
21: goto 7
22: if string != 0 goto 25
23: goto 101
24: check track map float stack
25: if precision == 0 goto 28
26: goto 60
27: check track map float stack
28: call header
29: £temporary1305 = int_to_int input (Signed_Char -> Signed_Int)
30: parameter £temporary1305, offset 6
31: call function noellipse-noellipse isspace
32: post call
33: £temporary1306 = return_value
34: if £temporary1306 != 0 goto 55
35: goto 36
36: £temporary1309 = int_to_int input (Signed_Char -> Signed_Int)
37: if £temporary1309 != -1 goto 39
38: goto 55
39: if input != 10 goto 42
40: goto 55
41: check track map float stack
42: £temporary1314 = index
43: index = index + 1
44: £temporary1316 = string + £temporary1314
45: £temporary1315 -> £temporary1316 = *£temporary1316
46: £temporary1315 -> £temporary1316 = input
47: call header
48: call function noellipse-noellipse scanChar
49: post call
50: £temporary1317 = return_value
51: input = £temporary1317
52: found = 1
53: g_inChars = g_inChars + 1
54: goto 28
55: £temporary1320 = string + index
56: £temporary1319 -> £temporary1320 = *£temporary1320
57: £temporary1319 -> £temporary1320 = 0
58: g_inChars = g_inChars + 1
59: goto 161
60: £temporary1322 = precision
61: precision = precision - 1
62: if £temporary1322 > 0 goto 64
63: goto 91
64: call header
65: £temporary1324 = int_to_int input (Signed_Char -> Signed_Int)
66: parameter £temporary1324, offset 6
67: call function noellipse-noellipse isspace
68: post call
69: £temporary1325 = return_value
70: if £temporary1325 != 0 goto 91
71: goto 72
72: £temporary1328 = int_to_int input (Signed_Char -> Signed_Int)
73: if £temporary1328 != -1 goto 75
74: goto 91
75: if input != 10 goto 78
76: goto 91
77: check track map float stack
78: £temporary1334 = index
79: index = index + 1
80: £temporary1336 = string + £temporary1334
81: £temporary1335 -> £temporary1336 = *£temporary1336
82: £temporary1335 -> £temporary1336 = input
83: call header
84: call function noellipse-noellipse scanChar
85: post call
86: £temporary1337 = return_value
87: input = £temporary1337
88: found = 1
89: g_inChars = g_inChars + 1
90: goto 60
91: if precision > 0 goto 94
92: goto 161
93: check track map float stack
94: £temporary1341 = string + index
95: £temporary1340 -> £temporary1341 = *£temporary1341
96: £temporary1340 -> £temporary1341 = 0
97: g_inChars = g_inChars + 1
98: goto 161
99: goto 161
100: goto 161
101: if precision == 0 goto 104
102: goto 128
103: check track map float stack
104: call header
105: £temporary1344 = int_to_int input (Signed_Char -> Signed_Int)
106: parameter £temporary1344, offset 6
107: call function noellipse-noellipse isspace
108: post call
109: £temporary1345 = return_value
110: if £temporary1345 != 0 goto 126
111: goto 112
112: £temporary1348 = int_to_int input (Signed_Char -> Signed_Int)
113: if £temporary1348 != -1 goto 115
114: goto 126
115: if input != 10 goto 118
116: goto 126
117: check track map float stack
118: call header
119: call function noellipse-noellipse scanChar
120: post call
121: £temporary1353 = return_value
122: input = £temporary1353
123: found = 1
124: g_inChars = g_inChars + 1
125: goto 104
126: g_inChars = g_inChars + 1
127: goto 161
128: £temporary1356 = precision
129: precision = precision - 1
130: if £temporary1356 > 0 goto 132
131: goto 154
132: call header
133: £temporary1358 = int_to_int input (Signed_Char -> Signed_Int)
134: parameter £temporary1358, offset 6
135: call function noellipse-noellipse isspace
136: post call
137: £temporary1359 = return_value
138: if £temporary1359 != 0 goto 154
139: goto 140
140: £temporary1362 = int_to_int input (Signed_Char -> Signed_Int)
141: if £temporary1362 != -1 goto 143
142: goto 154
143: if input != 10 goto 146
144: goto 154
145: check track map float stack
146: call header
147: call function noellipse-noellipse scanChar
148: post call
149: £temporary1368 = return_value
150: input = £temporary1368
151: found = 1
152: g_inChars = g_inChars + 1
153: goto 128
154: if precision > 0 goto 157
155: goto 161
156: check track map float stack
157: g_inChars = g_inChars + 1
158: goto 161
159: goto 161
160: goto 161
161: if found != 0 goto 164
162: goto 166
163: check track map float stack
164: g_inCount = g_inCount + 1
165: goto 166
166: empty
167: return
168: function end scanString
0: call header
1: £temporary1379 = int_to_int c (Signed_Char -> Signed_Int)
2: parameter £temporary1379, offset 6
3: call function noellipse-noellipse isdigit
4: post call
5: £temporary1380 = return_value
6: if £temporary1380 != 0 goto 9
7: goto 23
8: check track map float stack
9: £temporary1381 = c - 48
10: £temporary1382 = int_to_int £temporary1381 (Signed_Char -> Signed_Int)
11: value = £temporary1382
12: if value >= 0 goto 14
13: goto 18
14: if value < base goto 16
15: goto 18
16: £temporary1386 = 1
17: goto 19
18: £temporary1386 = 0
19: empty
20: return_value = £temporary1386
21: return
22: goto 76
23: call header
24: £temporary1387 = int_to_int c (Signed_Char -> Signed_Int)
25: parameter £temporary1387, offset 6
26: call function noellipse-noellipse islower
27: post call
28: £temporary1388 = return_value
29: if £temporary1388 != 0 goto 32
30: goto 47
31: check track map float stack
32: £temporary1389 = c - 97
33: £temporary1390 = int_to_int £temporary1389 (Signed_Char -> Signed_Int)
34: £temporary1391 = £temporary1390 + 10
35: value = £temporary1391
36: if value >= 0 goto 38
37: goto 42
38: if value < base goto 40
39: goto 42
40: £temporary1395 = 1
41: goto 43
42: £temporary1395 = 0
43: empty
44: return_value = £temporary1395
45: return
46: goto 76
47: call header
48: £temporary1396 = int_to_int c (Signed_Char -> Signed_Int)
49: parameter £temporary1396, offset 6
50: call function noellipse-noellipse isupper
51: post call
52: £temporary1397 = return_value
53: if £temporary1397 != 0 goto 56
54: goto 71
55: check track map float stack
56: £temporary1398 = c - 65
57: £temporary1399 = int_to_int £temporary1398 (Signed_Char -> Signed_Int)
58: £temporary1400 = £temporary1399 + 10
59: value = £temporary1400
60: if value >= 0 goto 62
61: goto 66
62: if value < base goto 64
63: goto 66
64: £temporary1404 = 1
65: goto 67
66: £temporary1404 = 0
67: empty
68: return_value = £temporary1404
69: return
70: goto 76
71: return_value = 0
72: return
73: goto 76
74: goto 76
75: goto 76
76: empty
77: return
78: function end isDigitInBase
0: call header
1: £temporary1411 = int_to_int c (Signed_Char -> Signed_Int)
2: parameter £temporary1411, offset 6
3: call function noellipse-noellipse isdigit
4: post call
5: £temporary1412 = return_value
6: if £temporary1412 != 0 goto 9
7: goto 14
8: check track map float stack
9: £temporary1413 = c - 48
10: £temporary1414 = int_to_int £temporary1413 (Signed_Char -> Signed_Int)
11: return_value = £temporary1414
12: return
13: goto 49
14: call header
15: £temporary1415 = int_to_int c (Signed_Char -> Signed_Int)
16: parameter £temporary1415, offset 6
17: call function noellipse-noellipse islower
18: post call
19: £temporary1416 = return_value
20: if £temporary1416 != 0 goto 23
21: goto 29
22: check track map float stack
23: £temporary1417 = c - 97
24: £temporary1418 = int_to_int £temporary1417 (Signed_Char -> Signed_Int)
25: £temporary1419 = £temporary1418 + 10
26: return_value = £temporary1419
27: return
28: goto 49
29: call header
30: £temporary1420 = int_to_int c (Signed_Char -> Signed_Int)
31: parameter £temporary1420, offset 6
32: call function noellipse-noellipse isupper
33: post call
34: £temporary1421 = return_value
35: if £temporary1421 != 0 goto 38
36: goto 44
37: check track map float stack
38: £temporary1422 = c - 65
39: £temporary1423 = int_to_int £temporary1422 (Signed_Char -> Signed_Int)
40: £temporary1424 = £temporary1423 + 10
41: return_value = £temporary1424
42: return
43: goto 49
44: return_value = 0
45: return
46: goto 49
47: goto 49
48: goto 49
49: empty
50: return
51: function end digitToValue
0: longValue = 0
1: minus = 0
2: found = 0
3: call header
4: call function noellipse-noellipse scanChar
5: post call
6: £temporary1431 = return_value
7: input = £temporary1431
8: call header
9: £temporary1432 = int_to_int input (Signed_Char -> Signed_Int)
10: parameter £temporary1432, offset 6
11: call function noellipse-noellipse isspace
12: post call
13: £temporary1433 = return_value
14: if £temporary1433 != 0 goto 17
15: goto 23
16: check track map float stack
17: call header
18: call function noellipse-noellipse scanChar
19: post call
20: £temporary1434 = return_value
21: input = £temporary1434
22: goto 8
23: if input == 43 goto 26
24: goto 32
25: check track map float stack
26: call header
27: call function noellipse-noellipse scanChar
28: post call
29: £temporary1437 = return_value
30: input = £temporary1437
31: goto 43
32: if input == 45 goto 35
33: goto 43
34: check track map float stack
35: minus = 1
36: call header
37: call function noellipse-noellipse scanChar
38: post call
39: £temporary1439 = return_value
40: input = £temporary1439
41: goto 43
42: goto 43
43: if base == 0 goto 46
44: goto 76
45: check track map float stack
46: if input == 48 goto 49
47: goto 73
48: check track map float stack
49: call header
50: call function noellipse-noellipse scanChar
51: post call
52: £temporary1442 = return_value
53: input = £temporary1442
54: call header
55: £temporary1443 = int_to_int input (Signed_Char -> Signed_Int)
56: parameter £temporary1443, offset 6
57: call function noellipse-noellipse tolower
58: post call
59: £temporary1444 = return_value
60: if £temporary1444 == 120 goto 63
61: goto 70
62: check track map float stack
63: base = 16
64: call header
65: call function noellipse-noellipse scanChar
66: post call
67: £temporary1446 = return_value
68: input = £temporary1446
69: goto 76
70: base = 8
71: goto 76
72: goto 76
73: base = 10
74: goto 76
75: goto 76
76: call header
77: parameter input, offset 6
78: parameter base, offset 7
79: call function noellipse-noellipse isDigitInBase
80: post call
81: £temporary1447 = return_value
82: if £temporary1447 != 0 goto 85
83: goto 103
84: check track map float stack
85: £temporary1448 = int_to_int base (Signed_Int -> Signed_Long_Int)
86: £temporary1449 = longValue * £temporary1448
87: longValue = £temporary1449
88: call header
89: parameter input, offset 6
90: call function noellipse-noellipse digitToValue
91: post call
92: £temporary1450 = return_value
93: £temporary1451 = int_to_int £temporary1450 (Signed_Int -> Signed_Long_Int)
94: £temporary1452 = longValue + £temporary1451
95: longValue = £temporary1452
96: call header
97: call function noellipse-noellipse scanChar
98: post call
99: £temporary1453 = return_value
100: input = £temporary1453
101: found = 1
102: goto 76
103: if minus != 0 goto 106
104: goto 109
105: check track map float stack
106: £temporary1455 = -longValue
107: longValue = £temporary1455
108: goto 109
109: if found != 0 goto 112
110: goto 114
111: check track map float stack
112: g_inCount = g_inCount + 1
113: goto 114
114: call header
115: parameter input, offset 6
116: call function noellipse-noellipse unscanChar
117: post call
118: return_value = longValue
119: return
120: empty
121: return
122: function end scanLongInt
0: unsignedLongValue = 0
1: call header
2: call function noellipse-noellipse scanChar
3: post call
4: £temporary1466 = return_value
5: input = £temporary1466
6: found = 1
7: call header
8: £temporary1467 = int_to_int input (Signed_Char -> Signed_Int)
9: parameter £temporary1467, offset 6
10: call function noellipse-noellipse isspace
11: post call
12: £temporary1468 = return_value
13: if £temporary1468 != 0 goto 16
14: goto 22
15: check track map float stack
16: call header
17: call function noellipse-noellipse scanChar
18: post call
19: £temporary1469 = return_value
20: input = £temporary1469
21: goto 7
22: if input == 43 goto 25
23: goto 31
24: check track map float stack
25: call header
26: call function noellipse-noellipse scanChar
27: post call
28: £temporary1472 = return_value
29: input = £temporary1472
30: goto 31
31: if base == 0 goto 34
32: goto 64
33: check track map float stack
34: if input == 48 goto 37
35: goto 61
36: check track map float stack
37: call header
38: call function noellipse-noellipse scanChar
39: post call
40: £temporary1475 = return_value
41: input = £temporary1475
42: call header
43: £temporary1476 = int_to_int input (Signed_Char -> Signed_Int)
44: parameter £temporary1476, offset 6
45: call function noellipse-noellipse tolower
46: post call
47: £temporary1477 = return_value
48: if £temporary1477 == 120 goto 51
49: goto 58
50: check track map float stack
51: base = 16
52: call header
53: call function noellipse-noellipse scanChar
54: post call
55: £temporary1479 = return_value
56: input = £temporary1479
57: goto 64
58: base = 8
59: goto 64
60: goto 64
61: base = 10
62: goto 64
63: goto 64
64: call header
65: parameter input, offset 6
66: parameter base, offset 7
67: call function noellipse-noellipse isDigitInBase
68: post call
69: £temporary1480 = return_value
70: if £temporary1480 != 0 goto 73
71: goto 91
72: check track map float stack
73: £temporary1481 = int_to_int base (Signed_Int -> Unsigned_Long_Int)
74: £temporary1482 = unsignedLongValue * £temporary1481
75: unsignedLongValue = £temporary1482
76: call header
77: parameter input, offset 6
78: call function noellipse-noellipse digitToValue
79: post call
80: £temporary1483 = return_value
81: £temporary1484 = int_to_int £temporary1483 (Signed_Int -> Unsigned_Long_Int)
82: £temporary1485 = unsignedLongValue + £temporary1484
83: unsignedLongValue = £temporary1485
84: found = 1
85: call header
86: call function noellipse-noellipse scanChar
87: post call
88: £temporary1486 = return_value
89: input = £temporary1486
90: goto 64
91: if found != 0 goto 94
92: goto 96
93: check track map float stack
94: g_inCount = g_inCount + 1
95: goto 96
96: call header
97: parameter input, offset 6
98: call function noellipse-noellipse unscanChar
99: post call
100: return_value = unsignedLongValue
101: return
102: empty
103: return
104: function end scanUnsignedLongInt
0: minus = 0
1: found = 0
2: push float 0.0
3: pop float value
4: push float 1.0
5: pop float factor
6: call header
7: call function noellipse-noellipse scanChar
8: post call
9: £temporary1497 = return_value
10: input = £temporary1497
11: call header
12: £temporary1498 = int_to_int input (Signed_Char -> Signed_Int)
13: parameter £temporary1498, offset 6
14: call function noellipse-noellipse isspace
15: post call
16: £temporary1499 = return_value
17: if £temporary1499 != 0 goto 20
18: goto 26
19: check track map float stack
20: call header
21: call function noellipse-noellipse scanChar
22: post call
23: £temporary1500 = return_value
24: input = £temporary1500
25: goto 11
26: if input == 43 goto 29
27: goto 35
28: check track map float stack
29: call header
30: call function noellipse-noellipse scanChar
31: post call
32: £temporary1503 = return_value
33: input = £temporary1503
34: goto 46
35: if input == 45 goto 38
36: goto 46
37: check track map float stack
38: minus = 1
39: call header
40: call function noellipse-noellipse scanChar
41: post call
42: £temporary1505 = return_value
43: input = £temporary1505
44: goto 46
45: goto 46
46: call header
47: £temporary1506 = int_to_int input (Signed_Char -> Signed_Int)
48: parameter £temporary1506, offset 6
49: call function noellipse-noellipse isdigit
50: post call
51: £temporary1507 = return_value
52: if £temporary1507 != 0 goto 55
53: goto 73
54: check track map float stack
55: push float value
56: pop float empty X
57: push float 10.0
58: push float value
59: £temporary1508 = 10.0 * value
60: £temporary1509 = input - 48
61: £temporary1511 = int_to_int £temporary1509 (Signed_Char -> Signed_Int)
62: £temporary1510 = int_to_float £temporary1511 (Signed_Int -> Long_Double)
63: £temporary1512 = £temporary1508 + £temporary1510
64: top float value
65: pop float empty X
66: call header
67: call function noellipse-noellipse scanChar
68: post call
69: £temporary1513 = return_value
70: input = £temporary1513
71: found = 1
72: goto 46
73: if input == 46 goto 76
74: goto 112
75: check track map float stack
76: call header
77: call function noellipse-noellipse scanChar
78: post call
79: £temporary1516 = return_value
80: input = £temporary1516
81: call header
82: £temporary1517 = int_to_int input (Signed_Char -> Signed_Int)
83: parameter £temporary1517, offset 6
84: call function noellipse-noellipse isdigit
85: post call
86: £temporary1518 = return_value
87: if £temporary1518 != 0 goto 90
88: goto 112
89: check track map float stack
90: push float factor
91: push float 10.0
92: £temporary1519 = factor / 10.0
93: top float factor
94: pop float empty X
95: push float value
96: push float factor
97: £temporary1520 = input - 48
98: £temporary1522 = int_to_int £temporary1520 (Signed_Char -> Signed_Int)
99: £temporary1521 = int_to_float £temporary1522 (Signed_Int -> Long_Double)
100: £temporary1523 = factor * £temporary1521
101: £temporary1524 = value + £temporary1523
102: top float value
103: pop float empty X
104: call header
105: call function noellipse-noellipse scanChar
106: post call
107: £temporary1525 = return_value
108: input = £temporary1525
109: found = 1
110: goto 81
111: goto 112
112: call header
113: £temporary1527 = int_to_int input (Signed_Char -> Signed_Int)
114: parameter £temporary1527, offset 6
115: call function noellipse-noellipse tolower
116: post call
117: £temporary1528 = return_value
118: if £temporary1528 == 101 goto 121
119: goto 141
120: check track map float stack
121: call header
122: parameter 10, offset 6
123: call function noellipse-noellipse scanLongInt
124: post call
125: £temporary1530 = return_value
126: £temporary1531 = int_to_float £temporary1530 (Signed_Long_Int -> Double)
127: pop float exponent
128: push float value
129: call header
130: push float 10.0
131: parameter 10.0, offset 6
132: push float exponent
133: parameter exponent, offset 14
134: call function noellipse-noellipse pow
135: post call
136: £temporary1532 = return_value
137: £temporary1533 = value * £temporary1532
138: top float value
139: pop float empty X
140: goto 146
141: call header
142: parameter input, offset 6
143: call function noellipse-noellipse unscanChar
144: post call
145: goto 146
146: if minus != 0 goto 149
147: goto 156
148: check track map float stack
149: push float value
150: pop float empty X
151: push float value
152: £temporary1535 = -value
153: top float value
154: pop float empty X
155: goto 156
156: if found != 0 goto 159
157: goto 161
158: check track map float stack
159: g_inCount = g_inCount + 1
160: goto 161
161: push float value
162: return_value = value
163: return
164: empty
165: return
166: function end scanLongDouble
0: percent = 0
1: shortInt = 0
2: longIntOrDouble = 0
3: longDouble = 0
4: star = 0
5: g_inCount = 0
6: g_inChars = 0
7: index = 0
8: empty
9: £temporary1548 = format + index
10: £temporary1547 -> £temporary1548 = *£temporary1548
11: if £temporary1547 -> £temporary1548 != 0 goto 14
12: goto 433
13: check track map float stack
14: empty
15: £temporary1552 = format + index
16: £temporary1551 -> £temporary1552 = *£temporary1552
17: c = £temporary1551 -> £temporary1552
18: £temporary1553 = int_to_int c (Signed_Char -> Signed_Int)
19: £temporary1554 = £temporary1553 + 1
20: d = £temporary1554
21: if percent != 0 goto 24
22: goto 420
23: check track map float stack
24: £temporary1555 = d - 1
25: case £temporary1555 == 104 goto 43
26: case £temporary1555 == 108 goto 45
27: case £temporary1555 == 76 goto 47
28: case £temporary1555 == 42 goto 49
29: case £temporary1555 == 99 goto 51
30: case £temporary1555 == 115 goto 76
31: case £temporary1555 == 100 goto 99
32: case £temporary1555 == 105 goto 99
33: case £temporary1555 == 111 goto 147
34: case £temporary1555 == 120 goto 195
35: case £temporary1555 == 117 goto 243
36: case £temporary1555 == 103 goto 291
37: case £temporary1555 == 102 goto 291
38: case £temporary1555 == 101 goto 291
39: case £temporary1555 == 91 goto 351
40: case £temporary1555 == 110 goto 402
41: case end £temporary1555
42: goto 412
43: shortInt = 1
44: goto 430
45: longIntOrDouble = 1
46: goto 430
47: longDouble = 1
48: goto 430
49: star = 1
50: goto 430
51: call header
52: call function noellipse-noellipse scanChar
53: post call
54: £temporary1556 = return_value
55: charValue = £temporary1556
56: if star != 0 goto 68
57: goto 59
58: check track map float stack
59: £temporary1559 = arg_list + 2
60: arg_list = £temporary1559
61: £temporary1560 = arg_list - 2
62: £temporary1561 = int_to_int £temporary1560 (Signed_Int -> Pointer)
63: £temporary1562 -> £temporary1561 = *£temporary1561
64: charPtr = £temporary1562 -> £temporary1561
65: £temporary1563 -> charPtr = *charPtr
66: £temporary1563 -> charPtr = charValue
67: goto 68
68: percent = 0
69: £temporary1564 = int_to_int charValue (Signed_Char -> Signed_Int)
70: if £temporary1564 != -1 goto 73
71: goto 75
72: check track map float stack
73: g_inCount = g_inCount + 1
74: goto 75
75: goto 430
76: if star != 0 goto 91
77: goto 79
78: check track map float stack
79: £temporary1569 = arg_list + 2
80: arg_list = £temporary1569
81: £temporary1570 = arg_list - 2
82: £temporary1571 = int_to_int £temporary1570 (Signed_Int -> Pointer)
83: £temporary1572 -> £temporary1571 = *£temporary1571
84: charPtr = £temporary1572 -> £temporary1571
85: call header
86: parameter charPtr, offset 6
87: parameter 0, offset 8
88: call function noellipse-noellipse scanString
89: post call
90: goto 97
91: call header
92: parameter 0, offset 6
93: parameter 0, offset 8
94: call function noellipse-noellipse scanString
95: post call
96: goto 97
97: percent = 0
98: goto 430
99: call header
100: parameter 10, offset 6
101: call function noellipse-noellipse scanLongInt
102: post call
103: £temporary1575 = return_value
104: longValue = £temporary1575
105: if star != 0 goto 145
106: goto 108
107: check track map float stack
108: if shortInt != 0 goto 111
109: goto 121
110: check track map float stack
111: £temporary1578 = arg_list + 2
112: arg_list = £temporary1578
113: £temporary1579 = arg_list - 2
114: £temporary1580 = int_to_int £temporary1579 (Signed_Int -> Pointer)
115: £temporary1581 -> £temporary1580 = *£temporary1580
116: shortPtr = £temporary1581 -> £temporary1580
117: £temporary1582 -> shortPtr = *shortPtr
118: £temporary1583 = int_to_int longValue (Signed_Long_Int -> Signed_Short_Int)
119: £temporary1582 -> shortPtr = £temporary1583
120: goto 145
121: if longIntOrDouble != 0 goto 134
122: goto 124
123: check track map float stack
124: £temporary1586 = arg_list + 2
125: arg_list = £temporary1586
126: £temporary1587 = arg_list - 2
127: £temporary1588 = int_to_int £temporary1587 (Signed_Int -> Pointer)
128: £temporary1589 -> £temporary1588 = *£temporary1588
129: intPtr = £temporary1589 -> £temporary1588
130: £temporary1590 -> intPtr = *intPtr
131: £temporary1591 = int_to_int longValue (Signed_Long_Int -> Signed_Int)
132: £temporary1590 -> intPtr = £temporary1591
133: goto 145
134: £temporary1592 = arg_list + 2
135: arg_list = £temporary1592
136: £temporary1593 = arg_list - 2
137: £temporary1594 = int_to_int £temporary1593 (Signed_Int -> Pointer)
138: £temporary1595 -> £temporary1594 = *£temporary1594
139: longPtr = £temporary1595 -> £temporary1594
140: £temporary1596 -> longPtr = *longPtr
141: £temporary1596 -> longPtr = longValue
142: goto 145
143: goto 145
144: goto 145
145: percent = 0
146: goto 430
147: call header
148: parameter 8, offset 6
149: call function noellipse-noellipse scanUnsignedLongInt
150: post call
151: £temporary1598 = return_value
152: unsignedLongValue = £temporary1598
153: if star != 0 goto 193
154: goto 156
155: check track map float stack
156: if shortInt != 0 goto 159
157: goto 169
158: check track map float stack
159: £temporary1601 = arg_list + 2
160: arg_list = £temporary1601
161: £temporary1602 = arg_list - 2
162: £temporary1603 = int_to_int £temporary1602 (Signed_Int -> Pointer)
163: £temporary1604 -> £temporary1603 = *£temporary1603
164: unsignedShortPtr = £temporary1604 -> £temporary1603
165: £temporary1605 -> unsignedShortPtr = *unsignedShortPtr
166: £temporary1606 = int_to_int unsignedLongValue (Unsigned_Long_Int -> Signed_Short_Int)
167: £temporary1605 -> unsignedShortPtr = £temporary1606
168: goto 193
169: if longIntOrDouble != 0 goto 182
170: goto 172
171: check track map float stack
172: £temporary1609 = arg_list + 2
173: arg_list = £temporary1609
174: £temporary1610 = arg_list - 2
175: £temporary1611 = int_to_int £temporary1610 (Signed_Int -> Pointer)
176: £temporary1612 -> £temporary1611 = *£temporary1611
177: unsignedIntPtr = £temporary1612 -> £temporary1611
178: £temporary1613 -> unsignedIntPtr = *unsignedIntPtr
179: £temporary1614 = int_to_int unsignedLongValue (Unsigned_Long_Int -> Signed_Int)
180: £temporary1613 -> unsignedIntPtr = £temporary1614
181: goto 193
182: £temporary1615 = arg_list + 2
183: arg_list = £temporary1615
184: £temporary1616 = arg_list - 2
185: £temporary1617 = int_to_int £temporary1616 (Signed_Int -> Pointer)
186: £temporary1618 -> £temporary1617 = *£temporary1617
187: unsignedLongPtr = £temporary1618 -> £temporary1617
188: £temporary1619 -> unsignedLongPtr = *unsignedLongPtr
189: £temporary1619 -> unsignedLongPtr = unsignedLongValue
190: goto 193
191: goto 193
192: goto 193
193: percent = 0
194: goto 430
195: call header
196: parameter 16, offset 6
197: call function noellipse-noellipse scanUnsignedLongInt
198: post call
199: £temporary1621 = return_value
200: unsignedLongValue = £temporary1621
201: if star != 0 goto 241
202: goto 204
203: check track map float stack
204: if shortInt != 0 goto 207
205: goto 217
206: check track map float stack
207: £temporary1624 = arg_list + 2
208: arg_list = £temporary1624
209: £temporary1625 = arg_list - 2
210: £temporary1626 = int_to_int £temporary1625 (Signed_Int -> Pointer)
211: £temporary1627 -> £temporary1626 = *£temporary1626
212: unsignedShortPtr = £temporary1627 -> £temporary1626
213: £temporary1628 -> unsignedShortPtr = *unsignedShortPtr
214: £temporary1629 = int_to_int unsignedLongValue (Unsigned_Long_Int -> Signed_Short_Int)
215: £temporary1628 -> unsignedShortPtr = £temporary1629
216: goto 241
217: if longIntOrDouble != 0 goto 230
218: goto 220
219: check track map float stack
220: £temporary1632 = arg_list + 2
221: arg_list = £temporary1632
222: £temporary1633 = arg_list - 2
223: £temporary1634 = int_to_int £temporary1633 (Signed_Int -> Pointer)
224: £temporary1635 -> £temporary1634 = *£temporary1634
225: unsignedIntPtr = £temporary1635 -> £temporary1634
226: £temporary1636 -> unsignedIntPtr = *unsignedIntPtr
227: £temporary1637 = int_to_int unsignedLongValue (Unsigned_Long_Int -> Signed_Int)
228: £temporary1636 -> unsignedIntPtr = £temporary1637
229: goto 241
230: £temporary1638 = arg_list + 2
231: arg_list = £temporary1638
232: £temporary1639 = arg_list - 2
233: £temporary1640 = int_to_int £temporary1639 (Signed_Int -> Pointer)
234: £temporary1641 -> £temporary1640 = *£temporary1640
235: unsignedLongPtr = £temporary1641 -> £temporary1640
236: £temporary1642 -> unsignedLongPtr = *unsignedLongPtr
237: £temporary1642 -> unsignedLongPtr = unsignedLongValue
238: goto 241
239: goto 241
240: goto 241
241: percent = 0
242: goto 430
243: call header
244: parameter 0, offset 6
245: call function noellipse-noellipse scanUnsignedLongInt
246: post call
247: £temporary1644 = return_value
248: unsignedLongValue = £temporary1644
249: if star != 0 goto 289
250: goto 252
251: check track map float stack
252: if shortInt != 0 goto 255
253: goto 265
254: check track map float stack
255: £temporary1647 = arg_list + 2
256: arg_list = £temporary1647
257: £temporary1648 = arg_list - 2
258: £temporary1649 = int_to_int £temporary1648 (Signed_Int -> Pointer)
259: £temporary1650 -> £temporary1649 = *£temporary1649
260: unsignedShortPtr = £temporary1650 -> £temporary1649
261: £temporary1651 -> unsignedShortPtr = *unsignedShortPtr
262: £temporary1652 = int_to_int unsignedLongValue (Unsigned_Long_Int -> Signed_Short_Int)
263: £temporary1651 -> unsignedShortPtr = £temporary1652
264: goto 289
265: if longIntOrDouble != 0 goto 278
266: goto 268
267: check track map float stack
268: £temporary1655 = arg_list + 2
269: arg_list = £temporary1655
270: £temporary1656 = arg_list - 2
271: £temporary1657 = int_to_int £temporary1656 (Signed_Int -> Pointer)
272: £temporary1658 -> £temporary1657 = *£temporary1657
273: unsignedIntPtr = £temporary1658 -> £temporary1657
274: £temporary1659 -> unsignedIntPtr = *unsignedIntPtr
275: £temporary1660 = int_to_int unsignedLongValue (Unsigned_Long_Int -> Signed_Int)
276: £temporary1659 -> unsignedIntPtr = £temporary1660
277: goto 289
278: £temporary1661 = arg_list + 2
279: arg_list = £temporary1661
280: £temporary1662 = arg_list - 2
281: £temporary1663 = int_to_int £temporary1662 (Signed_Int -> Pointer)
282: £temporary1664 -> £temporary1663 = *£temporary1663
283: unsignedLongPtr = £temporary1664 -> £temporary1663
284: £temporary1665 -> unsignedLongPtr = *unsignedLongPtr
285: £temporary1665 -> unsignedLongPtr = unsignedLongValue
286: goto 289
287: goto 289
288: goto 289
289: percent = 0
290: goto 430
291: push float longDoubleValue
292: pop float empty X
293: call header
294: call function noellipse-noellipse scanLongDouble
295: post call
296: £temporary1667 = return_value
297: top float longDoubleValue
298: pop float empty X
299: if star != 0 goto 349
300: goto 302
301: check track map float stack
302: if longIntOrDouble != 0 goto 305
303: goto 318
304: check track map float stack
305: £temporary1670 = arg_list + 2
306: arg_list = £temporary1670
307: £temporary1671 = arg_list - 2
308: £temporary1672 = int_to_int £temporary1671 (Signed_Int -> Pointer)
309: £temporary1673 -> £temporary1672 = *£temporary1672
310: doublePtr = £temporary1673 -> £temporary1672
311: £temporary1674 -> doublePtr = *doublePtr
312: push float £temporary1674 -> doublePtr
313: pop float empty X
314: push float longDoubleValue
315: top float £temporary1674 -> doublePtr
316: pop float empty X
317: goto 349
318: if longDouble != 0 goto 321
319: goto 334
320: check track map float stack
321: £temporary1676 = arg_list + 2
322: arg_list = £temporary1676
323: £temporary1677 = arg_list - 2
324: £temporary1678 = int_to_int £temporary1677 (Signed_Int -> Pointer)
325: £temporary1679 -> £temporary1678 = *£temporary1678
326: longDoublePtr = £temporary1679 -> £temporary1678
327: £temporary1680 -> longDoublePtr = *longDoublePtr
328: push float £temporary1680 -> longDoublePtr
329: pop float empty X
330: push float longDoubleValue
331: top float £temporary1680 -> longDoublePtr
332: pop float empty X
333: goto 349
334: £temporary1681 = arg_list + 2
335: arg_list = £temporary1681
336: £temporary1682 = arg_list - 2
337: £temporary1683 = int_to_int £temporary1682 (Signed_Int -> Pointer)
338: £temporary1684 -> £temporary1683 = *£temporary1683
339: floatPtr = £temporary1684 -> £temporary1683
340: £temporary1685 -> floatPtr = *floatPtr
341: push float £temporary1685 -> floatPtr
342: pop float empty X
343: push float longDoubleValue
344: top float £temporary1685 -> floatPtr
345: pop float empty X
346: goto 349
347: goto 349
348: goto 349
349: percent = 0
350: goto 430
351: not = 0
352: index = index + 1
353: £temporary1691 = format + index
354: £temporary1690 -> £temporary1691 = *£temporary1691
355: if £temporary1690 -> £temporary1691 == 94 goto 358
356: goto 361
357: check track map float stack
358: not = 1
359: index = index + 1
360: goto 361
361: startIndex = index
362: £temporary1695 = format + index
363: £temporary1694 -> £temporary1695 = *£temporary1695
364: if £temporary1694 -> £temporary1695 != 93 goto 367
365: goto 369
366: check track map float stack
367: index = index + 1
368: goto 362
369: £temporary1699 = format + index
370: £temporary1698 -> £temporary1699 = *£temporary1699
371: £temporary1698 -> £temporary1699 = 0
372: if star != 0 goto 391
373: goto 375
374: check track map float stack
375: £temporary1702 = arg_list + 2
376: arg_list = £temporary1702
377: £temporary1703 = arg_list - 2
378: £temporary1704 = int_to_int £temporary1703 (Signed_Int -> Pointer)
379: £temporary1705 -> £temporary1704 = *£temporary1704
380: string = £temporary1705 -> £temporary1704
381: call header
382: parameter string, offset 6
383: £temporary1707 = format + startIndex
384: £temporary1706 -> £temporary1707 = *£temporary1707
385: £temporary1708 = &£temporary1706 -> £temporary1707
386: parameter £temporary1708, offset 8
387: parameter not, offset 10
388: call function noellipse-noellipse scanPattern
389: post call
390: goto 401
391: call header
392: parameter 0, offset 6
393: £temporary1711 = format + startIndex
394: £temporary1710 -> £temporary1711 = *£temporary1711
395: £temporary1712 = &£temporary1710 -> £temporary1711
396: parameter £temporary1712, offset 8
397: parameter not, offset 10
398: call function noellipse-noellipse scanPattern
399: post call
400: goto 401
401: goto 430
402: £temporary1714 = arg_list + 2
403: arg_list = £temporary1714
404: £temporary1715 = arg_list - 2
405: £temporary1716 = int_to_int £temporary1715 (Signed_Int -> Pointer)
406: £temporary1717 -> £temporary1716 = *£temporary1716
407: charsPtr = £temporary1717 -> £temporary1716
408: £temporary1718 -> charsPtr = *charsPtr
409: £temporary1718 -> charsPtr = g_inChars
410: percent = 0
411: goto 430
412: call header
413: parameter string_scanFormat20c203D202725c270A#, offset 6
414: £temporary1719 = int_to_int c (Signed_Char -> Signed_Int)
415: parameter £temporary1719, offset 8
416: call function noellipse-ellipse printf, extra 0
417: post call
418: goto 430
419: goto 430
420: if c == 37 goto 423
421: goto 430
422: check track map float stack
423: percent = 1
424: shortInt = 0
425: longIntOrDouble = 0
426: longDouble = 0
427: star = 0
428: goto 430
429: goto 430
430: empty
431: index = index + 1
432: goto 8
433: return_value = g_inCount
434: return
435: empty
436: return
437: function end scanFormat
0: £temporary1739 = &format
1: £temporary1740 = int_to_int £temporary1739 (Pointer -> Pointer)
2: £temporary1741 = £temporary1740 + 2
3: arg_list = £temporary1741
4: call header
5: parameter format, offset 6
6: parameter arg_list, offset 8
7: call function ellipse-noellipse vscanf
8: post call
9: £temporary1742 = return_value
10: return_value = £temporary1742
11: return
12: empty
13: return
14: function end scanf
0: call header
1: parameter stdin, offset 6
2: parameter format, offset 8
3: parameter arg_list, offset 10
4: call function noellipse-noellipse vfscanf
5: post call
6: £temporary1746 = return_value
7: return_value = £temporary1746
8: return
9: empty
10: return
11: function end vscanf
0: £temporary1750 = &format
1: £temporary1751 = int_to_int £temporary1750 (Pointer -> Pointer)
2: £temporary1752 = £temporary1751 + 2
3: arg_list = £temporary1752
4: call header
5: parameter inStream, offset 6
6: parameter format, offset 8
7: parameter arg_list, offset 10
8: call function ellipse-noellipse vfscanf
9: post call
10: £temporary1753 = return_value
11: return_value = £temporary1753
12: return
13: empty
14: return
15: function end fscanf
0: g_inStatus = 0
1: £temporary1758 = int_to_int inStream (Pointer -> Pointer)
2: g_inDevice = £temporary1758
3: call header
4: parameter format, offset 6
5: parameter arg_list, offset 8
6: call function noellipse-noellipse scanFormat
7: post call
8: £temporary1759 = return_value
9: return_value = £temporary1759
10: return
11: empty
12: return
13: function end vfscanf
0: £temporary1762 = &format
1: £temporary1763 = int_to_int £temporary1762 (Pointer -> Pointer)
2: £temporary1764 = £temporary1763 + 2
3: arg_list = £temporary1764
4: call header
5: parameter inString, offset 6
6: parameter format, offset 8
7: parameter arg_list, offset 10
8: call function ellipse-noellipse vsscanf
9: post call
10: £temporary1765 = return_value
11: return_value = £temporary1765
12: return
13: empty
14: return
15: function end sscanf
0: g_inStatus = 1
1: £temporary1770 = int_to_int inString (Pointer -> Pointer)
2: g_inDevice = £temporary1770
3: call header
4: parameter format, offset 6
5: parameter arg_list, offset 8
6: call function noellipse-noellipse scanFormat
7: post call
8: £temporary1771 = return_value
9: return_value = £temporary1771
10: return
11: empty
12: return
13: function end vsscanf
0: g_outStatus = 0
1: £temporary1774 = int_to_int stream (Pointer -> Pointer)
2: g_outDevice = £temporary1774
3: call header
4: £temporary1775 = int_to_int i (Signed_Int -> Signed_Char)
5: parameter £temporary1775, offset 6
6: call function noellipse-noellipse printChar
7: post call
8: return_value = 1
9: return
10: empty
11: return
12: function end putc
0: g_outStatus = 0
1: £temporary1778 = int_to_int stream (Pointer -> Pointer)
2: g_outDevice = £temporary1778
3: call header
4: £temporary1779 = int_to_int i (Signed_Int -> Signed_Char)
5: parameter £temporary1779, offset 6
6: call function noellipse-noellipse printChar
7: post call
8: return_value = 1
9: return
10: empty
11: return
12: function end fputc
0: g_outStatus = 0
1: £temporary1782 = int_to_int stdout (Pointer -> Pointer)
2: g_outDevice = £temporary1782
3: call header
4: £temporary1783 = int_to_int i (Signed_Int -> Signed_Char)
5: parameter £temporary1783, offset 6
6: call function noellipse-noellipse printChar
7: post call
8: return_value = 1
9: return
10: empty
11: return
12: function end putchar
0: case g_outStatus == 0 goto 5
1: case g_outStatus == 1 goto 16
2: case g_outStatus == 2 goto 24
3: case end g_outStatus
4: goto 26
5: £temporary1786 = int_to_int g_outDevice (Pointer -> Pointer)
6: stream = £temporary1786
7: ah = 64
8: £temporary1789 -> stream = *stream, offset 2
9: bx = £temporary1789 -> stream
10: cx = 1
11: £temporary1792 = &c
12: dx = £temporary1792
13: interrupt 33
14: g_outChars = g_outChars + 1
15: goto 26
16: £temporary1794 = int_to_int g_outDevice (Pointer -> Pointer)
17: outString = £temporary1794
18: £temporary1795 = g_outChars
19: g_outChars = g_outChars + 1
20: £temporary1797 = outString + £temporary1795
21: £temporary1796 -> £temporary1797 = *£temporary1797
22: £temporary1796 -> £temporary1797 = c
23: goto 26
24: g_outChars = g_outChars + 1
25: goto 26
26: empty
27: return
28: function end printChar
0: if s != 0 goto 3
1: goto 47
2: check track map float stack
3: if precision == 0 goto 6
4: goto 24
5: check track map float stack
6: index = 0
7: empty
8: £temporary1803 = s + index
9: £temporary1802 -> £temporary1803 = *£temporary1803
10: if £temporary1802 -> £temporary1803 != 0 goto 13
11: goto 72
12: check track map float stack
13: empty
14: call header
15: £temporary1807 = s + index
16: £temporary1806 -> £temporary1807 = *£temporary1807
17: parameter £temporary1806 -> £temporary1807, offset 6
18: call function noellipse-noellipse printChar
19: post call
20: empty
21: index = index + 1
22: goto 7
23: goto 72
24: index = 0
25: empty
26: £temporary1809 = precision
27: precision = precision - 1
28: if £temporary1809 > 0 goto 30
29: goto 72
30: £temporary1812 = s + index
31: £temporary1811 -> £temporary1812 = *£temporary1812
32: if £temporary1811 -> £temporary1812 != 0 goto 35
33: goto 72
34: check track map float stack
35: empty
36: call header
37: £temporary1817 = s + index
38: £temporary1816 -> £temporary1817 = *£temporary1817
39: parameter £temporary1816 -> £temporary1817, offset 6
40: call function noellipse-noellipse printChar
41: post call
42: empty
43: index = index + 1
44: goto 25
45: goto 72
46: goto 72
47: call header
48: parameter 60, offset 6
49: call function noellipse-noellipse printChar
50: post call
51: call header
52: parameter 78, offset 6
53: call function noellipse-noellipse printChar
54: post call
55: call header
56: parameter 85, offset 6
57: call function noellipse-noellipse printChar
58: post call
59: call header
60: parameter 76, offset 6
61: call function noellipse-noellipse printChar
62: post call
63: call header
64: parameter 76, offset 6
65: call function noellipse-noellipse printChar
66: post call
67: call header
68: parameter 62, offset 6
69: call function noellipse-noellipse printChar
70: post call
71: goto 72
72: empty
73: return
74: function end printString
0: if longValue != 0 goto 3
1: goto 18
2: check track map float stack
3: £temporary1834 = longValue % 10
4: £temporary1835 = int_to_int £temporary1834 (Signed_Long_Int -> Signed_Int)
5: digit = £temporary1835
6: call header
7: £temporary1836 = longValue / 10
8: parameter £temporary1836, offset 6
9: call function noellipse-noellipse printLongIntRec
10: post call
11: call header
12: £temporary1838 = digit + 48
13: £temporary1839 = int_to_int £temporary1838 (Signed_Int -> Signed_Char)
14: parameter £temporary1839, offset 6
15: call function noellipse-noellipse printChar
16: post call
17: goto 18
18: empty
19: return
20: function end printLongIntRec
0: if longValue < 0 goto 3
1: goto 10
2: check track map float stack
3: £temporary1844 = -longValue
4: longValue = £temporary1844
5: call header
6: parameter 45, offset 6
7: call function noellipse-noellipse printChar
8: post call
9: goto 28
10: if space != 0 goto 13
11: goto 18
12: check track map float stack
13: call header
14: parameter 32, offset 6
15: call function noellipse-noellipse printChar
16: post call
17: goto 28
18: if plus != 0 goto 21
19: goto 28
20: check track map float stack
21: call header
22: parameter 43, offset 6
23: call function noellipse-noellipse printChar
24: post call
25: goto 28
26: goto 28
27: goto 28
28: if longValue == 0 goto 31
29: goto 36
30: check track map float stack
31: call header
32: parameter 48, offset 6
33: call function noellipse-noellipse printChar
34: post call
35: goto 41
36: call header
37: parameter longValue, offset 6
38: call function noellipse-noellipse printLongIntRec
39: post call
40: goto 41
41: empty
42: return
43: function end printLongInt
0: if digit < 10 goto 3
1: goto 8
2: check track map float stack
3: £temporary1859 = 48 + digit
4: £temporary1860 = int_to_int £temporary1859 (Signed_Int -> Signed_Char)
5: return_value = £temporary1860
6: return
7: goto 24
8: if capital != 0 goto 11
9: goto 17
10: check track map float stack
11: £temporary1861 = digit - 10
12: £temporary1862 = 65 + £temporary1861
13: £temporary1863 = int_to_int £temporary1862 (Signed_Int -> Signed_Char)
14: return_value = £temporary1863
15: return
16: goto 24
17: £temporary1864 = digit - 10
18: £temporary1865 = 97 + £temporary1864
19: £temporary1866 = int_to_int £temporary1865 (Signed_Int -> Signed_Char)
20: return_value = £temporary1866
21: return
22: goto 24
23: goto 24
24: empty
25: return
26: function end digitToChar
0: if unsignedValue > 0 goto 3
1: goto 25
2: check track map float stack
3: £temporary1869 = unsignedValue % base
4: £temporary1870 = int_to_int £temporary1869 (Unsigned_Long_Int -> Signed_Int)
5: digit = £temporary1870
6: call header
7: £temporary1871 = unsignedValue / base
8: parameter £temporary1871, offset 6
9: parameter base, offset 10
10: parameter capital, offset 14
11: call function noellipse-noellipse printUnsignedLongRec
12: post call
13: call header
14: parameter digit, offset 6
15: parameter capital, offset 8
16: call function noellipse-noellipse digitToChar
17: post call
18: £temporary1873 = return_value
19: c = £temporary1873
20: call header
21: parameter c, offset 6
22: call function noellipse-noellipse printChar
23: post call
24: goto 25
25: empty
26: return
27: function end printUnsignedLongRec
0: if plus != 0 goto 3
1: goto 8
2: check track map float stack
3: call header
4: parameter 43, offset 6
5: call function noellipse-noellipse printChar
6: post call
7: goto 8
8: if space != 0 goto 11
9: goto 16
10: check track map float stack
11: call header
12: parameter 32, offset 6
13: call function noellipse-noellipse printChar
14: post call
15: goto 16
16: if grid != 0 goto 19
17: goto 48
18: check track map float stack
19: if base == 8 goto 22
20: goto 27
21: check track map float stack
22: call header
23: parameter 48, offset 6
24: call function noellipse-noellipse printChar
25: post call
26: goto 27
27: if base == 16 goto 30
28: goto 48
29: check track map float stack
30: call header
31: parameter 48, offset 6
32: call function noellipse-noellipse printChar
33: post call
34: call header
35: if capital != 0 goto 37
36: goto 40
37: empty
38: £temporary1893 = 88
39: goto 42
40: empty
41: £temporary1893 = 120
42: empty
43: parameter £temporary1893, offset 6
44: call function noellipse-noellipse printChar
45: post call
46: goto 48
47: goto 48
48: if unsignedValue == 0 goto 51
49: goto 56
50: check track map float stack
51: call header
52: parameter 48, offset 6
53: call function noellipse-noellipse printChar
54: post call
55: goto 63
56: call header
57: parameter unsignedValue, offset 6
58: parameter base, offset 10
59: parameter capital, offset 14
60: call function noellipse-noellipse printUnsignedLongRec
61: post call
62: goto 63
63: empty
64: return
65: function end printUnsignedLong
0: push float longDoubleValue
1: push float longDoubleValue
2: £temporary1908 = float_to_int longDoubleValue (Long_Double -> Signed_Long_Int)
3: £temporary1909 = int_to_float £temporary1908 (Signed_Long_Int -> Long_Double)
4: £temporary1910 = longDoubleValue - £temporary1909
5: top float longDoubleValue
6: pop float empty X
7: if precision == 0 goto 10
8: goto 12
9: check track map float stack
10: precision = 6
11: goto 12
12: if grid != 0 goto 17
13: goto 14
14: if precision > 0 goto 17
15: goto 22
16: check track map float stack
17: call header
18: parameter 46, offset 6
19: call function noellipse-noellipse printChar
20: post call
21: goto 22
22: £temporary1916 = precision
23: precision = precision - 1
24: if £temporary1916 > 0 goto 27
25: goto 48
26: check track map float stack
27: push float 10.0
28: push float longDoubleValue
29: £temporary1918 = 10.0 * longDoubleValue
30: pop float longDoubleValue10
31: push float longDoubleValue10
32: £temporary1919 = float_to_int longDoubleValue10 (Long_Double -> Signed_Int)
33: digitValue = £temporary1919
34: call header
35: £temporary1920 = digitValue + 48
36: £temporary1921 = int_to_int £temporary1920 (Signed_Int -> Signed_Char)
37: parameter £temporary1921, offset 6
38: call function noellipse-noellipse printChar
39: post call
40: push float longDoubleValue
41: pop float empty X
42: push float longDoubleValue10
43: £temporary1923 = int_to_float digitValue (Signed_Int -> Long_Double)
44: £temporary1924 = longDoubleValue10 - £temporary1923
45: top float longDoubleValue
46: pop float empty X
47: goto 22
48: empty
49: return
50: function end printLongDoubleFraction
0: push float longDoubleValue
1: push float 0.0
2: if longDoubleValue < 0.0 goto 5
3: goto 18
4: check track map float stack
5: call header
6: parameter 45, offset 6
7: call function noellipse-noellipse printChar
8: post call
9: push float longDoubleValue
10: pop float empty X
11: push float longDoubleValue
12: £temporary1929 = -longDoubleValue
13: top float longDoubleValue
14: pop float empty X
15: plus = 0
16: space = 0
17: goto 18
18: push float longDoubleValue
19: £temporary1930 = float_to_int longDoubleValue (Long_Double -> Signed_Long_Int)
20: longValue = £temporary1930
21: call header
22: parameter longValue, offset 6
23: parameter plus, offset 10
24: parameter space, offset 12
25: call function noellipse-noellipse printLongInt
26: post call
27: push float longDoubleValue
28: £temporary1932 = int_to_float longValue (Signed_Long_Int -> Long_Double)
29: £temporary1933 = longDoubleValue - £temporary1932
30: top float longDoubleValue
31: pop float empty X
32: call header
33: push float longDoubleValue
34: parameter longDoubleValue, offset 6
35: parameter grid, offset 14
36: parameter precision, offset 16
37: call function noellipse-noellipse printLongDoubleFraction
38: post call
39: empty
40: return
41: function end printLongDoublePlain
0: push float value
1: push float 0.0
2: if value == 0.0 goto 5
3: goto 33
4: check track map float stack
5: call header
6: parameter 48, offset 6
7: call function noellipse-noellipse printChar
8: post call
9: call header
10: push float 0.0
11: parameter 0.0, offset 6
12: parameter precision, offset 14
13: parameter grid, offset 16
14: call function noellipse-noellipse printLongDoubleFraction
15: post call
16: call header
17: if capital != 0 goto 19
18: goto 22
19: empty
20: £temporary1949 = 69
21: goto 24
22: empty
23: £temporary1949 = 101
24: empty
25: parameter £temporary1949, offset 6
26: call function noellipse-noellipse printChar
27: post call
28: call header
29: parameter 48, offset 6
30: call function noellipse-noellipse printChar
31: post call
32: goto 98
33: push float value
34: push float 0.0
35: if value < 0.0 goto 38
36: goto 49
37: check track map float stack
38: call header
39: parameter 45, offset 6
40: call function noellipse-noellipse printChar
41: post call
42: push float value
43: pop float empty X
44: push float value
45: £temporary1954 = -value
46: top float value
47: pop float empty X
48: goto 49
49: call header
50: push float value
51: parameter value, offset 6
52: call function noellipse-noellipse log10
53: post call
54: £temporary1955 = return_value
55: £temporary1956 = float_to_int £temporary1955 (Double -> Signed_Int)
56: expo = £temporary1956
57: push float value
58: call header
59: push float 10.0
60: parameter 10.0, offset 6
61: £temporary1957 = int_to_float expo (Signed_Int -> Double)
62: parameter £temporary1957, offset 14
63: call function noellipse-noellipse pow
64: post call
65: £temporary1958 = return_value
66: £temporary1959 = value / £temporary1958
67: top float value
68: pop float empty X
69: call header
70: push float value
71: parameter value, offset 6
72: parameter plus, offset 14
73: parameter space, offset 16
74: parameter grid, offset 18
75: parameter precision, offset 20
76: call function noellipse-noellipse printLongDoublePlain
77: post call
78: call header
79: if capital != 0 goto 81
80: goto 84
81: empty
82: £temporary1965 = 69
83: goto 86
84: empty
85: £temporary1965 = 101
86: empty
87: parameter £temporary1965, offset 6
88: call function noellipse-noellipse printChar
89: post call
90: call header
91: £temporary1967 = int_to_int expo (Signed_Int -> Signed_Long_Int)
92: parameter £temporary1967, offset 6
93: parameter 1, offset 10
94: parameter 0, offset 12
95: call function noellipse-noellipse printLongInt
96: post call
97: goto 98
98: empty
99: return
100: function end printLongDoubleExpo
0: if widthPtr != 0 goto 2
1: goto 14
2: £temporary1989 -> widthPtr = *widthPtr
3: if £temporary1989 -> widthPtr == -1 goto 6
4: goto 14
5: check track map float stack
6: £temporary1992 -> widthPtr = *widthPtr
7: £temporary1993 = arg_list + 2
8: arg_list = £temporary1993
9: £temporary1994 = arg_list - 2
10: £temporary1995 = int_to_int £temporary1994 (Signed_Int -> Pointer)
11: £temporary1996 -> £temporary1995 = *£temporary1995
12: £temporary1992 -> widthPtr = £temporary1996 -> £temporary1995
13: goto 14
14: if precisionPtr != 0 goto 16
15: goto 28
16: £temporary1998 -> precisionPtr = *precisionPtr
17: if £temporary1998 -> precisionPtr == -1 goto 20
18: goto 28
19: check track map float stack
20: £temporary2001 -> precisionPtr = *precisionPtr
21: £temporary2002 = arg_list + 2
22: arg_list = £temporary2002
23: £temporary2003 = arg_list - 2
24: £temporary2004 = int_to_int £temporary2003 (Signed_Int -> Pointer)
25: £temporary2005 -> £temporary2004 = *£temporary2004
26: £temporary2001 -> precisionPtr = £temporary2005 -> £temporary2004
27: goto 28
28: return_value = arg_list
29: return
30: empty
31: return
32: function end checkWidthAndPrecision
0: £temporary2006 -> format = *format
1: c = £temporary2006 -> format
2: case c == 100 goto 21
3: case c == 105 goto 21
4: case c == 99 goto 90
5: case c == 115 goto 111
6: case c == 88 goto 132
7: case c == 120 goto 132
8: case c == 98 goto 132
9: case c == 111 goto 132
10: case c == 117 goto 132
11: case c == 71 goto 213
12: case c == 103 goto 213
13: case c == 69 goto 213
14: case c == 101 goto 213
15: case c == 102 goto 213
16: case c == 112 goto 371
17: case c == 110 goto 397
18: case c == 37 goto 421
19: case end c
20: goto 435
21: if shortInt != 0 goto 24
22: goto 33
23: check track map float stack
24: £temporary2007 = arg_list + 2
25: arg_list = £temporary2007
26: £temporary2008 = arg_list - 2
27: £temporary2009 = int_to_int £temporary2008 (Signed_Int -> Pointer)
28: £temporary2010 -> £temporary2009 = *£temporary2009
29: £temporary2011 = int_to_int £temporary2010 -> £temporary2009 (Signed_Int -> Signed_Short_Int)
30: £temporary2012 = int_to_int £temporary2011 (Signed_Short_Int -> Signed_Long_Int)
31: longValue = £temporary2012
32: goto 52
33: if longInt != 0 goto 36
34: goto 43
35: check track map float stack
36: £temporary2013 = arg_list + 4
37: arg_list = £temporary2013
38: £temporary2014 = arg_list - 4
39: £temporary2015 = int_to_int £temporary2014 (Signed_Int -> Pointer)
40: £temporary2016 -> £temporary2015 = *£temporary2015
41: longValue = £temporary2016 -> £temporary2015
42: goto 52
43: £temporary2017 = arg_list + 2
44: arg_list = £temporary2017
45: £temporary2018 = arg_list - 2
46: £temporary2019 = int_to_int £temporary2018 (Signed_Int -> Pointer)
47: £temporary2020 -> £temporary2019 = *£temporary2019
48: £temporary2021 = int_to_int £temporary2020 -> £temporary2019 (Signed_Int -> Signed_Long_Int)
49: longValue = £temporary2021
50: goto 52
51: goto 52
52: if negativePtr != 0 goto 55
53: goto 64
54: check track map float stack
55: £temporary2025 -> negativePtr = *negativePtr
56: if longValue < 0 goto 58
57: goto 60
58: £temporary2027 = 1
59: goto 61
60: £temporary2027 = 0
61: empty
62: £temporary2025 -> negativePtr = £temporary2027
63: goto 64
64: if sign != 0 goto 74
65: goto 67
66: check track map float stack
67: call header
68: parameter longValue, offset 6
69: call function noellipse-noellipse labs
70: post call
71: £temporary2030 = return_value
72: longValue = £temporary2030
73: goto 74
74: call header
75: parameter arg_list, offset 6
76: parameter widthPtr, offset 8
77: £temporary2031 = &precision
78: parameter £temporary2031, offset 10
79: call function noellipse-noellipse checkWidthAndPrecision
80: post call
81: £temporary2032 = return_value
82: arg_list = £temporary2032
83: call header
84: parameter longValue, offset 6
85: parameter plus, offset 10
86: parameter space, offset 12
87: call function noellipse-noellipse printLongInt
88: post call
89: goto 435
90: £temporary2034 = arg_list + 2
91: arg_list = £temporary2034
92: £temporary2035 = arg_list - 2
93: £temporary2036 = int_to_int £temporary2035 (Signed_Int -> Pointer)
94: £temporary2037 -> £temporary2036 = *£temporary2036
95: £temporary2038 = int_to_int £temporary2037 -> £temporary2036 (Signed_Int -> Signed_Char)
96: charValue = £temporary2038
97: call header
98: parameter arg_list, offset 6
99: parameter widthPtr, offset 8
100: £temporary2039 = &precision
101: parameter £temporary2039, offset 10
102: call function noellipse-noellipse checkWidthAndPrecision
103: post call
104: £temporary2040 = return_value
105: arg_list = £temporary2040
106: call header
107: parameter charValue, offset 6
108: call function noellipse-noellipse printChar
109: post call
110: goto 435
111: £temporary2042 = arg_list + 2
112: arg_list = £temporary2042
113: £temporary2043 = arg_list - 2
114: £temporary2044 = int_to_int £temporary2043 (Signed_Int -> Pointer)
115: £temporary2045 -> £temporary2044 = *£temporary2044
116: stringValue = £temporary2045 -> £temporary2044
117: call header
118: parameter arg_list, offset 6
119: parameter widthPtr, offset 8
120: £temporary2046 = &precision
121: parameter £temporary2046, offset 10
122: call function noellipse-noellipse checkWidthAndPrecision
123: post call
124: £temporary2047 = return_value
125: arg_list = £temporary2047
126: call header
127: parameter stringValue, offset 6
128: parameter precision, offset 8
129: call function noellipse-noellipse printString
130: post call
131: goto 435
132: if c == 117 goto 134
133: goto 137
134: empty
135: £temporary2063 = 10
136: goto 155
137: empty
138: if c == 111 goto 140
139: goto 143
140: empty
141: £temporary2059 = 8
142: goto 153
143: empty
144: if c == 98 goto 146
145: goto 149
146: empty
147: £temporary2055 = 2
148: goto 151
149: empty
150: £temporary2055 = 16
151: empty
152: £temporary2059 = £temporary2055
153: empty
154: £temporary2063 = £temporary2059
155: empty
156: base = £temporary2063
157: if shortInt != 0 goto 160
158: goto 169
159: check track map float stack
160: £temporary2064 = arg_list + 2
161: arg_list = £temporary2064
162: £temporary2065 = arg_list - 2
163: £temporary2066 = int_to_int £temporary2065 (Signed_Int -> Pointer)
164: £temporary2067 -> £temporary2066 = *£temporary2066
165: £temporary2068 = int_to_int £temporary2067 -> £temporary2066 (Unsigned_Int -> Unsigned_Short_Int)
166: £temporary2069 = int_to_int £temporary2068 (Unsigned_Short_Int -> Unsigned_Long_Int)
167: value = £temporary2069
168: goto 188
169: if longInt != 0 goto 172
170: goto 179
171: check track map float stack
172: £temporary2070 = arg_list + 4
173: arg_list = £temporary2070
174: £temporary2071 = arg_list - 4
175: £temporary2072 = int_to_int £temporary2071 (Signed_Int -> Pointer)
176: £temporary2073 -> £temporary2072 = *£temporary2072
177: value = £temporary2073 -> £temporary2072
178: goto 188
179: £temporary2074 = arg_list + 2
180: arg_list = £temporary2074
181: £temporary2075 = arg_list - 2
182: £temporary2076 = int_to_int £temporary2075 (Signed_Int -> Pointer)
183: £temporary2077 -> £temporary2076 = *£temporary2076
184: £temporary2078 = int_to_int £temporary2077 -> £temporary2076 (Unsigned_Int -> Unsigned_Long_Int)
185: value = £temporary2078
186: goto 188
187: goto 188
188: call header
189: parameter arg_list, offset 6
190: parameter widthPtr, offset 8
191: £temporary2081 = &precision
192: parameter £temporary2081, offset 10
193: call function noellipse-noellipse checkWidthAndPrecision
194: post call
195: £temporary2082 = return_value
196: arg_list = £temporary2082
197: call header
198: parameter value, offset 6
199: parameter plus, offset 10
200: parameter space, offset 12
201: parameter grid, offset 14
202: parameter base, offset 16
203: call header
204: £temporary2083 = int_to_int c (Signed_Char -> Signed_Int)
205: parameter £temporary2083, offset 26
206: call function noellipse-noellipse isupper
207: post call
208: £temporary2084 = return_value
209: parameter £temporary2084, offset 20
210: call function noellipse-noellipse printUnsignedLong
211: post call
212: goto 435
213: if longDouble != 0 goto 216
214: goto 236
215: check track map float stack
216: push float longDoubleValue
217: pop float empty X
218: £temporary2086 = arg_list + 8
219: arg_list = £temporary2086
220: £temporary2087 = arg_list - 8
221: £temporary2088 = int_to_int £temporary2087 (Signed_Int -> Pointer)
222: £temporary2089 -> £temporary2088 = *£temporary2088
223: push float £temporary2089 -> £temporary2088
224: top float longDoubleValue
225: pop float empty X
226: call header
227: push float longDoubleValue
228: parameter longDoubleValue, offset 6
229: parameter 0, offset 14
230: parameter 0, offset 16
231: parameter 0, offset 18
232: parameter 3, offset 20
233: call function noellipse-noellipse printLongDoublePlain
234: post call
235: goto 247
236: push float longDoubleValue
237: pop float empty X
238: £temporary2091 = arg_list + 8
239: arg_list = £temporary2091
240: £temporary2092 = arg_list - 8
241: £temporary2093 = int_to_int £temporary2092 (Signed_Int -> Pointer)
242: £temporary2094 -> £temporary2093 = *£temporary2093
243: push float £temporary2094 -> £temporary2093
244: top float longDoubleValue
245: pop float empty X
246: goto 247
247: if negativePtr != 0 goto 250
248: goto 261
249: check track map float stack
250: £temporary2098 -> negativePtr = *negativePtr
251: push float longDoubleValue
252: push 0
253: if longDoubleValue < 0 goto 255
254: goto 257
255: £temporary2100 = 1
256: goto 258
257: £temporary2100 = 0
258: empty
259: £temporary2098 -> negativePtr = £temporary2100
260: goto 261
261: if sign != 0 goto 275
262: goto 264
263: check track map float stack
264: push float longDoubleValue
265: pop float empty X
266: call header
267: push float longDoubleValue
268: parameter longDoubleValue, offset 6
269: call function noellipse-noellipse fabs
270: post call
271: £temporary2103 = return_value
272: top float longDoubleValue
273: pop float empty X
274: goto 275
275: call header
276: parameter arg_list, offset 6
277: parameter widthPtr, offset 8
278: £temporary2104 = &precision
279: parameter £temporary2104, offset 10
280: call function noellipse-noellipse checkWidthAndPrecision
281: post call
282: £temporary2105 = return_value
283: arg_list = £temporary2105
284: if c == 102 goto 287
285: goto 297
286: check track map float stack
287: call header
288: push float longDoubleValue
289: parameter longDoubleValue, offset 6
290: parameter plus, offset 14
291: parameter space, offset 16
292: parameter grid, offset 18
293: parameter precision, offset 20
294: call function noellipse-noellipse printLongDoublePlain
295: post call
296: goto 370
297: call header
298: £temporary2108 = int_to_int c (Signed_Char -> Signed_Int)
299: parameter £temporary2108, offset 6
300: call function noellipse-noellipse tolower
301: post call
302: £temporary2109 = return_value
303: if £temporary2109 == 101 goto 306
304: goto 323
305: check track map float stack
306: call header
307: push float longDoubleValue
308: parameter longDoubleValue, offset 6
309: parameter plus, offset 14
310: parameter space, offset 16
311: parameter grid, offset 18
312: parameter precision, offset 20
313: call header
314: £temporary2111 = int_to_int c (Signed_Char -> Signed_Int)
315: parameter £temporary2111, offset 28
316: call function noellipse-noellipse isupper
317: post call
318: £temporary2112 = return_value
319: parameter £temporary2112, offset 22
320: call function noellipse-noellipse printLongDoubleExpo
321: post call
322: goto 370
323: call header
324: call header
325: push float longDoubleValue
326: parameter longDoubleValue, offset 6
327: call function noellipse-noellipse fabs
328: post call
329: £temporary2114 = return_value
330: parameter £temporary2114, offset 6
331: call function noellipse-noellipse log10
332: post call
333: £temporary2115 = return_value
334: £temporary2116 = float_to_int £temporary2115 (Double -> Signed_Int)
335: expo = £temporary2116
336: if expo >= -3 goto 338
337: goto 351
338: if expo <= 2 goto 341
339: goto 351
340: check track map float stack
341: call header
342: push float longDoubleValue
343: parameter longDoubleValue, offset 6
344: parameter plus, offset 14
345: parameter space, offset 16
346: parameter grid, offset 18
347: parameter precision, offset 20
348: call function noellipse-noellipse printLongDoublePlain
349: post call
350: goto 370
351: call header
352: push float longDoubleValue
353: parameter longDoubleValue, offset 6
354: parameter plus, offset 14
355: parameter space, offset 16
356: parameter grid, offset 18
357: parameter precision, offset 20
358: call header
359: £temporary2121 = int_to_int c (Signed_Char -> Signed_Int)
360: parameter £temporary2121, offset 28
361: call function noellipse-noellipse isupper
362: post call
363: £temporary2122 = return_value
364: parameter £temporary2122, offset 22
365: call function noellipse-noellipse printLongDoubleExpo
366: post call
367: goto 370
368: goto 370
369: goto 370
370: goto 435
371: £temporary2124 = arg_list + 2
372: arg_list = £temporary2124
373: £temporary2125 = arg_list - 2
374: £temporary2126 = int_to_int £temporary2125 (Signed_Int -> Pointer)
375: £temporary2127 -> £temporary2126 = *£temporary2126
376: ptrValue = £temporary2127 -> £temporary2126
377: call header
378: parameter arg_list, offset 6
379: parameter widthPtr, offset 8
380: £temporary2128 = &precision
381: parameter £temporary2128, offset 10
382: call function noellipse-noellipse checkWidthAndPrecision
383: post call
384: £temporary2129 = return_value
385: arg_list = £temporary2129
386: call header
387: £temporary2130 = int_to_int ptrValue (Pointer -> Unsigned_Long_Int)
388: parameter £temporary2130, offset 6
389: parameter 0, offset 10
390: parameter 0, offset 12
391: parameter 0, offset 14
392: parameter 10, offset 16
393: parameter 0, offset 20
394: call function noellipse-noellipse printUnsignedLong
395: post call
396: goto 435
397: £temporary2132 = arg_list + 2
398: arg_list = £temporary2132
399: £temporary2133 = arg_list - 2
400: £temporary2134 = int_to_int £temporary2133 (Signed_Int -> Pointer)
401: £temporary2135 -> £temporary2134 = *£temporary2134
402: ptrValue = £temporary2135 -> £temporary2134
403: £temporary2136 = arg_list + 2
404: arg_list = £temporary2136
405: £temporary2137 = arg_list - 2
406: £temporary2138 = int_to_int £temporary2137 (Signed_Int -> Pointer)
407: £temporary2139 -> £temporary2138 = *£temporary2138
408: intPtr = £temporary2139 -> £temporary2138
409: call header
410: parameter arg_list, offset 6
411: parameter widthPtr, offset 8
412: £temporary2140 = &precision
413: parameter £temporary2140, offset 10
414: call function noellipse-noellipse checkWidthAndPrecision
415: post call
416: £temporary2141 = return_value
417: arg_list = £temporary2141
418: £temporary2142 -> intPtr = *intPtr
419: £temporary2142 -> intPtr = g_outChars
420: goto 435
421: call header
422: parameter arg_list, offset 6
423: parameter widthPtr, offset 8
424: £temporary2143 = &precision
425: parameter £temporary2143, offset 10
426: call function noellipse-noellipse checkWidthAndPrecision
427: post call
428: £temporary2144 = return_value
429: arg_list = £temporary2144
430: call header
431: parameter 37, offset 6
432: call function noellipse-noellipse printChar
433: post call
434: goto 435
435: return_value = arg_list
436: return
437: empty
438: return
439: function end printArgument
0: width = 0
1: precision = 0
2: percent = 0
3: plus = 0
4: minus = 0
5: space = 0
6: zero = 0
7: grid = 0
8: widthStar = 0
9: period = 0
10: precisionStar = 0
11: shortInt = 0
12: longInt = 0
13: longDouble = 0
14: g_outChars = 0
15: index = 0
16: empty
17: £temporary2233 = format + index
18: £temporary2232 -> £temporary2233 = *£temporary2233
19: if £temporary2232 -> £temporary2233 != 0 goto 22
20: goto 335
21: check track map float stack
22: empty
23: £temporary2237 = format + index
24: £temporary2236 -> £temporary2237 = *£temporary2237
25: c = £temporary2236 -> £temporary2237
26: if percent != 0 goto 29
27: goto 308
28: check track map float stack
29: case c == 43 goto 58
30: case c == 45 goto 60
31: case c == 32 goto 62
32: case c == 48 goto 64
33: case c == 35 goto 66
34: case c == 46 goto 68
35: case c == 42 goto 70
36: case c == 104 goto 78
37: case c == 108 goto 80
38: case c == 76 goto 82
39: case c == 37 goto 84
40: case c == 110 goto 84
41: case c == 112 goto 84
42: case c == 71 goto 84
43: case c == 103 goto 84
44: case c == 69 goto 84
45: case c == 101 goto 84
46: case c == 102 goto 84
47: case c == 115 goto 84
48: case c == 99 goto 84
49: case c == 88 goto 84
50: case c == 120 goto 84
51: case c == 111 goto 84
52: case c == 98 goto 84
53: case c == 117 goto 84
54: case c == 100 goto 84
55: case c == 105 goto 84
56: case end c
57: goto 277
58: plus = 1
59: goto 332
60: minus = 1
61: goto 332
62: space = 1
63: goto 332
64: zero = 1
65: goto 332
66: grid = 1
67: goto 332
68: period = 1
69: goto 332
70: if period != 0 goto 75
71: goto 73
72: check track map float stack
73: width = -1
74: goto 77
75: precision = -1
76: goto 77
77: goto 332
78: shortInt = 1
79: goto 332
80: longInt = 1
81: goto 332
82: longDouble = 1
83: goto 332
84: if minus != 0 goto 87
85: goto 122
86: check track map float stack
87: startChars = g_outChars
88: call header
89: £temporary2241 = format + index
90: £temporary2240 -> £temporary2241 = *£temporary2241
91: £temporary2242 = &£temporary2240 -> £temporary2241
92: parameter £temporary2242, offset 6
93: parameter arg_list, offset 8
94: parameter plus, offset 10
95: parameter space, offset 12
96: parameter grid, offset 14
97: £temporary2243 = &width
98: parameter £temporary2243, offset 16
99: parameter precision, offset 18
100: parameter shortInt, offset 20
101: parameter longInt, offset 22
102: parameter longDouble, offset 24
103: parameter 1, offset 26
104: parameter 0, offset 28
105: call function noellipse-noellipse printArgument
106: post call
107: £temporary2244 = return_value
108: arg_list = £temporary2244
109: £temporary2245 = g_outChars - startChars
110: field = £temporary2245
111: £temporary2246 = field
112: field = field + 1
113: if £temporary2246 < width goto 116
114: goto 275
115: check track map float stack
116: call header
117: parameter 32, offset 6
118: call function noellipse-noellipse printChar
119: post call
120: goto 111
121: goto 275
122: if zero != 0 goto 125
123: goto 217
124: check track map float stack
125: startChars = g_outChars
126: oldOutStatus = g_outStatus
127: negative = 0
128: g_outStatus = 2
129: call header
130: £temporary2250 = format + index
131: £temporary2249 -> £temporary2250 = *£temporary2250
132: £temporary2251 = &£temporary2249 -> £temporary2250
133: parameter £temporary2251, offset 6
134: parameter arg_list, offset 8
135: parameter 0, offset 10
136: parameter 0, offset 12
137: parameter grid, offset 14
138: £temporary2252 = &width
139: parameter £temporary2252, offset 16
140: parameter precision, offset 18
141: parameter shortInt, offset 20
142: parameter longInt, offset 22
143: parameter longDouble, offset 24
144: parameter 0, offset 26
145: £temporary2253 = &negative
146: parameter £temporary2253, offset 28
147: call function noellipse-noellipse printArgument
148: post call
149: g_outStatus = oldOutStatus
150: £temporary2255 = g_outChars - startChars
151: field = £temporary2255
152: g_outChars = startChars
153: if negative != 0 goto 156
154: goto 166
155: check track map float stack
156: call header
157: parameter 88, offset 6
158: call function noellipse-noellipse printChar
159: post call
160: call header
161: parameter 45, offset 6
162: call function noellipse-noellipse printChar
163: post call
164: field = field + 1
165: goto 186
166: if plus != 0 goto 169
167: goto 175
168: check track map float stack
169: call header
170: parameter 43, offset 6
171: call function noellipse-noellipse printChar
172: post call
173: field = field + 1
174: goto 186
175: if space != 0 goto 178
176: goto 186
177: check track map float stack
178: call header
179: parameter 32, offset 6
180: call function noellipse-noellipse printChar
181: post call
182: field = field + 1
183: goto 186
184: goto 186
185: goto 186
186: £temporary2266 = field
187: field = field + 1
188: if £temporary2266 < width goto 191
189: goto 196
190: check track map float stack
191: call header
192: parameter 48, offset 6
193: call function noellipse-noellipse printChar
194: post call
195: goto 186
196: call header
197: £temporary2270 = format + index
198: £temporary2269 -> £temporary2270 = *£temporary2270
199: £temporary2271 = &£temporary2269 -> £temporary2270
200: parameter £temporary2271, offset 6
201: parameter arg_list, offset 8
202: parameter 0, offset 10
203: parameter 0, offset 12
204: parameter grid, offset 14
205: parameter 0, offset 16
206: parameter precision, offset 18
207: parameter shortInt, offset 20
208: parameter longInt, offset 22
209: parameter longDouble, offset 24
210: parameter 0, offset 26
211: parameter 0, offset 28
212: call function noellipse-noellipse printArgument
213: post call
214: £temporary2272 = return_value
215: arg_list = £temporary2272
216: goto 275
217: startChars = g_outChars
218: oldOutStatus = g_outStatus
219: g_outStatus = 2
220: call header
221: £temporary2274 = format + index
222: £temporary2273 -> £temporary2274 = *£temporary2274
223: £temporary2275 = &£temporary2273 -> £temporary2274
224: parameter £temporary2275, offset 6
225: parameter arg_list, offset 8
226: parameter plus, offset 10
227: parameter space, offset 12
228: parameter grid, offset 14
229: £temporary2276 = &width
230: parameter £temporary2276, offset 16
231: parameter precision, offset 18
232: parameter shortInt, offset 20
233: parameter longInt, offset 22
234: parameter longDouble, offset 24
235: parameter 1, offset 26
236: parameter 0, offset 28
237: call function noellipse-noellipse printArgument
238: post call
239: g_outStatus = oldOutStatus
240: £temporary2278 = g_outChars - startChars
241: field = £temporary2278
242: g_outChars = startChars
243: £temporary2279 = field
244: field = field + 1
245: if £temporary2279 < width goto 248
246: goto 253
247: check track map float stack
248: call header
249: parameter 32, offset 6
250: call function noellipse-noellipse printChar
251: post call
252: goto 243
253: call header
254: £temporary2283 = format + index
255: £temporary2282 -> £temporary2283 = *£temporary2283
256: £temporary2284 = &£temporary2282 -> £temporary2283
257: parameter £temporary2284, offset 6
258: parameter arg_list, offset 8
259: parameter plus, offset 10
260: parameter space, offset 12
261: parameter grid, offset 14
262: parameter 0, offset 16
263: parameter precision, offset 18
264: parameter shortInt, offset 20
265: parameter longInt, offset 22
266: parameter longDouble, offset 24
267: parameter 1, offset 26
268: parameter 0, offset 28
269: call function noellipse-noellipse printArgument
270: post call
271: £temporary2285 = return_value
272: arg_list = £temporary2285
273: goto 275
274: goto 275
275: percent = 0
276: goto 332
277: value = 0
278: call header
279: £temporary2288 = int_to_int c (Signed_Char -> Signed_Int)
280: parameter £temporary2288, offset 6
281: call function noellipse-noellipse isdigit
282: post call
283: £temporary2289 = return_value
284: if £temporary2289 != 0 goto 287
285: goto 298
286: check track map float stack
287: £temporary2290 = 10 * value
288: £temporary2291 = c - 48
289: £temporary2292 = int_to_int £temporary2291 (Signed_Char -> Signed_Int)
290: £temporary2293 = £temporary2290 + £temporary2292
291: value = £temporary2293
292: index = index + 1
293: £temporary2294 = index
294: £temporary2296 = format + £temporary2294
295: £temporary2295 -> £temporary2296 = *£temporary2296
296: c = £temporary2295 -> £temporary2296
297: goto 278
298: index = index - 1
299: if period != 0 goto 304
300: goto 302
301: check track map float stack
302: width = value
303: goto 306
304: precision = value
305: goto 306
306: goto 332
307: goto 332
308: if c == 37 goto 311
309: goto 326
310: check track map float stack
311: percent = 1
312: plus = 0
313: minus = 0
314: space = 0
315: zero = 0
316: grid = 0
317: widthStar = 0
318: period = 0
319: precisionStar = 0
320: shortInt = 0
321: longInt = 0
322: longDouble = 0
323: width = 0
324: precision = 0
325: goto 332
326: call header
327: parameter c, offset 6
328: call function noellipse-noellipse printChar
329: post call
330: goto 332
331: goto 332
332: empty
333: index = index + 1
334: goto 16
335: if g_outStatus == 1 goto 338
336: goto 344
337: check track map float stack
338: £temporary2305 = int_to_int g_outDevice (Pointer -> Pointer)
339: outString = £temporary2305
340: £temporary2307 = outString + g_outChars
341: £temporary2306 -> £temporary2307 = *£temporary2307
342: £temporary2306 -> £temporary2307 = 0
343: goto 344
344: return_value = g_outChars
345: return
346: empty
347: return
348: function end printFormat
0: £temporary2381 = &format
1: £temporary2382 = int_to_int £temporary2381 (Pointer -> Pointer)
2: £temporary2383 = £temporary2382 + 2
3: arg_list = £temporary2383
4: call header
5: parameter format, offset 6
6: parameter arg_list, offset 8
7: call function ellipse-noellipse vprintf
8: post call
9: £temporary2384 = return_value
10: return_value = £temporary2384
11: return
12: empty
13: return
14: function end printf
0: call header
1: parameter stdout, offset 6
2: parameter format, offset 8
3: parameter arg_list, offset 10
4: call function noellipse-noellipse vfprintf
5: post call
6: £temporary2388 = return_value
7: return_value = £temporary2388
8: return
9: empty
10: return
11: function end vprintf
0: £temporary2392 = &format
1: £temporary2393 = int_to_int £temporary2392 (Pointer -> Pointer)
2: £temporary2394 = £temporary2393 + 2
3: arg_list = £temporary2394
4: call header
5: parameter outStream, offset 6
6: parameter format, offset 8
7: parameter arg_list, offset 10
8: call function ellipse-noellipse vfprintf
9: post call
10: £temporary2395 = return_value
11: return_value = £temporary2395
12: return
13: empty
14: return
15: function end fprintf
0: g_outStatus = 0
1: £temporary2400 = int_to_int outStream (Pointer -> Pointer)
2: g_outDevice = £temporary2400
3: call header
4: parameter format, offset 6
5: parameter arg_list, offset 8
6: call function noellipse-noellipse printFormat
7: post call
8: £temporary2401 = return_value
9: return_value = £temporary2401
10: return
11: empty
12: return
13: function end vfprintf
0: £temporary2404 = &format
1: £temporary2405 = int_to_int £temporary2404 (Pointer -> Pointer)
2: £temporary2406 = £temporary2405 + 2
3: arg_list = £temporary2406
4: call header
5: parameter outString, offset 6
6: parameter format, offset 8
7: parameter arg_list, offset 10
8: call function ellipse-noellipse vsprintf
9: post call
10: £temporary2407 = return_value
11: return_value = £temporary2407
12: return
13: empty
14: return
15: function end sprintf
0: g_outStatus = 1
1: £temporary2412 = int_to_int outString (Pointer -> Pointer)
2: g_outDevice = £temporary2412
3: call header
4: parameter format, offset 6
5: parameter arg_list, offset 8
6: call function noellipse-noellipse printFormat
7: post call
8: £temporary2413 = return_value
9: return_value = £temporary2413
10: return
11: empty
12: return
13: function end vsprintf
0: call header
1: parameter s, offset 6
2: parameter 0, offset 8
3: parameter 10, offset 10
4: call function noellipse-noellipse strtol
5: post call
6: £temporary2416 = return_value
7: £temporary2417 = int_to_int £temporary2416 (Signed_Long_Int -> Signed_Int)
8: return_value = £temporary2417
9: return
10: empty
11: return
12: function end atoi
0: call header
1: parameter s, offset 6
2: parameter 0, offset 8
3: parameter 10, offset 10
4: call function noellipse-noellipse strtol
5: post call
6: £temporary2421 = return_value
7: return_value = £temporary2421
8: return
9: empty
10: return
11: function end atol
0: g_inStatus = 1
1: g_inDevice = s
2: g_inChars = 0
3: call header
4: parameter base, offset 6
5: call function noellipse-noellipse scanLongInt
6: post call
7: £temporary2425 = return_value
8: longValue = £temporary2425
9: if endp != 0 goto 12
10: goto 16
11: check track map float stack
12: £temporary2427 -> endp = *endp
13: £temporary2428 = s + g_inChars
14: £temporary2427 -> endp = £temporary2428
15: goto 16
16: return_value = longValue
17: return
18: empty
19: return
20: function end strtol
0: base = 0
1: text[0] = 32
2: text[1] = 32
3: text[2] = 32
4: text[3] = 43
5: text[4] = 49
6: text[5] = 50
7: text[6] = 51
8: text[7] = 97
9: text[8] = 98
10: text[9] = 99
11: text[10] = 0
12: call header
13: parameter text, offset 6
14: £temporary2441 = &pointer
15: parameter £temporary2441, offset 8
16: parameter base, offset 10
17: call function noellipse-noellipse strtol
18: post call
19: £temporary2442 = return_value
20: value = £temporary2442
21: call header
22: parameter string_3C25s3E203C25li3E203C25s3E203C25i3E0A#, offset 6
23: parameter text, offset 8
24: parameter value, offset 10
25: parameter pointer, offset 14
26: parameter base, offset 16
27: call function noellipse-ellipse printf, extra 0
28: post call
29: base = 0
30: text[0] = 32
31: text[1] = 32
32: text[2] = 32
33: text[3] = 43
34: text[4] = 48
35: text[5] = 49
36: text[6] = 50
37: text[7] = 51
38: text[8] = 97
39: text[9] = 98
40: text[10] = 99
41: text[11] = 0
42: call header
43: parameter text, offset 6
44: £temporary2456 = &pointer
45: parameter £temporary2456, offset 8
46: parameter base, offset 10
47: call function noellipse-noellipse strtol
48: post call
49: £temporary2457 = return_value
50: value = £temporary2457
51: call header
52: parameter string_3C25s3E203C25li3E203C25s3E203C25i3E0A#, offset 6
53: parameter text, offset 8
54: parameter value, offset 10
55: parameter pointer, offset 14
56: parameter base, offset 16
57: call function noellipse-ellipse printf, extra 0
58: post call
59: base = 0
60: text[0] = 32
61: text[1] = 32
62: text[2] = 32
63: text[3] = 43
64: text[4] = 48
65: text[5] = 120
66: text[6] = 49
67: text[7] = 50
68: text[8] = 51
69: text[9] = 65
70: text[10] = 66
71: text[11] = 67
72: text[12] = 0
73: call header
74: parameter text, offset 6
75: £temporary2472 = &pointer
76: parameter £temporary2472, offset 8
77: parameter base, offset 10
78: call function noellipse-noellipse strtol
79: post call
80: £temporary2473 = return_value
81: value = £temporary2473
82: call header
83: parameter string_3C25s3E203C25li3E203C25s3E203C25i3E0A#, offset 6
84: parameter text, offset 8
85: parameter value, offset 10
86: parameter pointer, offset 14
87: parameter base, offset 16
88: call function noellipse-ellipse printf, extra 0
89: post call
90: base = 0
91: text[0] = 32
92: text[1] = 32
93: text[2] = 32
94: text[3] = 43
95: text[4] = 48
96: text[5] = 88
97: text[6] = 49
98: text[7] = 50
99: text[8] = 51
100: text[9] = 97
101: text[10] = 98
102: text[11] = 99
103: text[12] = 0
104: call header
105: parameter text, offset 6
106: £temporary2488 = &pointer
107: parameter £temporary2488, offset 8
108: parameter base, offset 10
109: call function noellipse-noellipse strtol
110: post call
111: £temporary2489 = return_value
112: value = £temporary2489
113: call header
114: parameter string_3C25s3E203C25li3E203C25s3E203C25i3E0A#, offset 6
115: parameter text, offset 8
116: parameter value, offset 10
117: parameter pointer, offset 14
118: parameter base, offset 16
119: call function noellipse-ellipse printf, extra 0
120: post call
121: base = 0
122: text[0] = 32
123: text[1] = 32
124: text[2] = 32
125: text[3] = 45
126: text[4] = 49
127: text[5] = 50
128: text[6] = 51
129: text[7] = 97
130: text[8] = 98
131: text[9] = 99
132: text[10] = 0
133: call header
134: parameter text, offset 6
135: £temporary2502 = &pointer
136: parameter £temporary2502, offset 8
137: parameter base, offset 10
138: call function noellipse-noellipse strtol
139: post call
140: £temporary2503 = return_value
141: value = £temporary2503
142: call header
143: parameter string_3C25s3E203C25li3E203C25s3E203C25i3E0A#, offset 6
144: parameter text, offset 8
145: parameter value, offset 10
146: parameter pointer, offset 14
147: parameter base, offset 16
148: call function noellipse-ellipse printf, extra 0
149: post call
150: base = 0
151: text[0] = 32
152: text[1] = 32
153: text[2] = 32
154: text[3] = 45
155: text[4] = 48
156: text[5] = 49
157: text[6] = 50
158: text[7] = 51
159: text[8] = 97
160: text[9] = 98
161: text[10] = 99
162: text[11] = 0
163: call header
164: parameter text, offset 6
165: £temporary2517 = &pointer
166: parameter £temporary2517, offset 8
167: parameter base, offset 10
168: call function noellipse-noellipse strtol
169: post call
170: £temporary2518 = return_value
171: value = £temporary2518
172: call header
173: parameter string_3C25s3E203C25li3E203C25s3E203C25i3E0A#, offset 6
174: parameter text, offset 8
175: parameter value, offset 10
176: parameter pointer, offset 14
177: parameter base, offset 16
178: call function noellipse-ellipse printf, extra 0
179: post call
180: base = 0
181: text[0] = 32
182: text[1] = 32
183: text[2] = 32
184: text[3] = 45
185: text[4] = 48
186: text[5] = 120
187: text[6] = 49
188: text[7] = 50
189: text[8] = 51
190: text[9] = 65
191: text[10] = 66
192: text[11] = 67
193: text[12] = 0
194: call header
195: parameter text, offset 6
196: £temporary2533 = &pointer
197: parameter £temporary2533, offset 8
198: parameter base, offset 10
199: call function noellipse-noellipse strtol
200: post call
201: £temporary2534 = return_value
202: value = £temporary2534
203: call header
204: parameter string_3C25s3E203C25li3E203C25s3E203C25i3E0A#, offset 6
205: parameter text, offset 8
206: parameter value, offset 10
207: parameter pointer, offset 14
208: parameter base, offset 16
209: call function noellipse-ellipse printf, extra 0
210: post call
211: base = 0
212: text[0] = 32
213: text[1] = 32
214: text[2] = 32
215: text[3] = 45
216: text[4] = 48
217: text[5] = 88
218: text[6] = 49
219: text[7] = 50
220: text[8] = 51
221: text[9] = 97
222: text[10] = 98
223: text[11] = 99
224: text[12] = 0
225: call header
226: parameter text, offset 6
227: £temporary2549 = &pointer
228: parameter £temporary2549, offset 8
229: parameter base, offset 10
230: call function noellipse-noellipse strtol
231: post call
232: £temporary2550 = return_value
233: value = £temporary2550
234: call header
235: parameter string_3C25s3E203C25li3E203C25s3E203C25i3E0A#, offset 6
236: parameter text, offset 8
237: parameter value, offset 10
238: parameter pointer, offset 14
239: parameter base, offset 16
240: call function noellipse-ellipse printf, extra 0
241: post call
242: base = 9
243: text[0] = 32
244: text[1] = 32
245: text[2] = 32
246: text[3] = 43
247: text[4] = 49
248: text[5] = 50
249: text[6] = 51
250: text[7] = 97
251: text[8] = 98
252: text[9] = 99
253: text[10] = 0
254: call header
255: parameter text, offset 6
256: £temporary2563 = &pointer
257: parameter £temporary2563, offset 8
258: parameter base, offset 10
259: call function noellipse-noellipse strtol
260: post call
261: £temporary2564 = return_value
262: value = £temporary2564
263: call header
264: parameter string_3C25s3E203C25li3E203C25s3E203C25i3E0A#, offset 6
265: parameter text, offset 8
266: parameter value, offset 10
267: parameter pointer, offset 14
268: parameter base, offset 16
269: call function noellipse-ellipse printf, extra 0
270: post call
271: base = 10
272: text[0] = 32
273: text[1] = 32
274: text[2] = 32
275: text[3] = 43
276: text[4] = 49
277: text[5] = 50
278: text[6] = 51
279: text[7] = 97
280: text[8] = 98
281: text[9] = 99
282: text[10] = 0
283: call header
284: parameter text, offset 6
285: £temporary2577 = &pointer
286: parameter £temporary2577, offset 8
287: parameter base, offset 10
288: call function noellipse-noellipse strtol
289: post call
290: £temporary2578 = return_value
291: value = £temporary2578
292: call header
293: parameter string_3C25s3E203C25li3E203C25s3E203C25i3E0A#, offset 6
294: parameter text, offset 8
295: parameter value, offset 10
296: parameter pointer, offset 14
297: parameter base, offset 16
298: call function noellipse-ellipse printf, extra 0
299: post call
300: base = 11
301: text[0] = 32
302: text[1] = 32
303: text[2] = 32
304: text[3] = 43
305: text[4] = 49
306: text[5] = 50
307: text[6] = 51
308: text[7] = 97
309: text[8] = 98
310: text[9] = 99
311: text[10] = 0
312: call header
313: parameter text, offset 6
314: £temporary2591 = &pointer
315: parameter £temporary2591, offset 8
316: parameter base, offset 10
317: call function noellipse-noellipse strtol
318: post call
319: £temporary2592 = return_value
320: value = £temporary2592
321: call header
322: parameter string_3C25s3E203C25li3E203C25s3E203C25i3E0A#, offset 6
323: parameter text, offset 8
324: parameter value, offset 10
325: parameter pointer, offset 14
326: parameter base, offset 16
327: call function noellipse-ellipse printf, extra 0
328: post call
329: base = 12
330: text[0] = 32
331: text[1] = 32
332: text[2] = 32
333: text[3] = 43
334: text[4] = 49
335: text[5] = 50
336: text[6] = 51
337: text[7] = 65
338: text[8] = 66
339: text[9] = 67
340: text[10] = 0
341: call header
342: parameter text, offset 6
343: £temporary2605 = &pointer
344: parameter £temporary2605, offset 8
345: parameter base, offset 10
346: call function noellipse-noellipse strtol
347: post call
348: £temporary2606 = return_value
349: value = £temporary2606
350: call header
351: parameter string_3C25s3E203C25li3E203C25s3E203C25i3E0A#, offset 6
352: parameter text, offset 8
353: parameter value, offset 10
354: parameter pointer, offset 14
355: parameter base, offset 16
356: call function noellipse-ellipse printf, extra 0
357: post call
358: base = 13
359: text[0] = 32
360: text[1] = 32
361: text[2] = 32
362: text[3] = 43
363: text[4] = 49
364: text[5] = 50
365: text[6] = 51
366: text[7] = 97
367: text[8] = 98
368: text[9] = 99
369: text[10] = 0
370: call header
371: parameter text, offset 6
372: £temporary2619 = &pointer
373: parameter £temporary2619, offset 8
374: parameter base, offset 10
375: call function noellipse-noellipse strtol
376: post call
377: £temporary2620 = return_value
378: value = £temporary2620
379: call header
380: parameter string_3C25s3E203C25li3E203C25s3E203C25i3E0A#, offset 6
381: parameter text, offset 8
382: parameter value, offset 10
383: parameter pointer, offset 14
384: parameter base, offset 16
385: call function noellipse-ellipse printf, extra 0
386: post call
387: base = 9
388: text[0] = 32
389: text[1] = 32
390: text[2] = 32
391: text[3] = 45
392: text[4] = 49
393: text[5] = 50
394: text[6] = 51
395: text[7] = 97
396: text[8] = 98
397: text[9] = 99
398: text[10] = 0
399: call header
400: parameter text, offset 6
401: £temporary2633 = &pointer
402: parameter £temporary2633, offset 8
403: parameter base, offset 10
404: call function noellipse-noellipse strtol
405: post call
406: £temporary2634 = return_value
407: value = £temporary2634
408: call header
409: parameter string_3C25s3E203C25li3E203C25s3E203C25i3E0A#, offset 6
410: parameter text, offset 8
411: parameter value, offset 10
412: parameter pointer, offset 14
413: parameter base, offset 16
414: call function noellipse-ellipse printf, extra 0
415: post call
416: base = 10
417: text[0] = 32
418: text[1] = 32
419: text[2] = 32
420: text[3] = 45
421: text[4] = 49
422: text[5] = 50
423: text[6] = 51
424: text[7] = 97
425: text[8] = 98
426: text[9] = 99
427: text[10] = 0
428: call header
429: parameter text, offset 6
430: £temporary2647 = &pointer
431: parameter £temporary2647, offset 8
432: parameter base, offset 10
433: call function noellipse-noellipse strtol
434: post call
435: £temporary2648 = return_value
436: value = £temporary2648
437: call header
438: parameter string_3C25s3E203C25li3E203C25s3E203C25i3E0A#, offset 6
439: parameter text, offset 8
440: parameter value, offset 10
441: parameter pointer, offset 14
442: parameter base, offset 16
443: call function noellipse-ellipse printf, extra 0
444: post call
445: base = 11
446: text[0] = 32
447: text[1] = 32
448: text[2] = 32
449: text[3] = 45
450: text[4] = 49
451: text[5] = 50
452: text[6] = 51
453: text[7] = 97
454: text[8] = 98
455: text[9] = 99
456: text[10] = 0
457: call header
458: parameter text, offset 6
459: £temporary2661 = &pointer
460: parameter £temporary2661, offset 8
461: parameter base, offset 10
462: call function noellipse-noellipse strtol
463: post call
464: £temporary2662 = return_value
465: value = £temporary2662
466: call header
467: parameter string_3C25s3E203C25li3E203C25s3E203C25i3E0A#, offset 6
468: parameter text, offset 8
469: parameter value, offset 10
470: parameter pointer, offset 14
471: parameter base, offset 16
472: call function noellipse-ellipse printf, extra 0
473: post call
474: base = 12
475: text[0] = 32
476: text[1] = 32
477: text[2] = 32
478: text[3] = 45
479: text[4] = 49
480: text[5] = 50
481: text[6] = 51
482: text[7] = 65
483: text[8] = 66
484: text[9] = 67
485: text[10] = 0
486: call header
487: parameter text, offset 6
488: £temporary2675 = &pointer
489: parameter £temporary2675, offset 8
490: parameter base, offset 10
491: call function noellipse-noellipse strtol
492: post call
493: £temporary2676 = return_value
494: value = £temporary2676
495: call header
496: parameter string_3C25s3E203C25li3E203C25s3E203C25i3E0A#, offset 6
497: parameter text, offset 8
498: parameter value, offset 10
499: parameter pointer, offset 14
500: parameter base, offset 16
501: call function noellipse-ellipse printf, extra 0
502: post call
503: base = 13
504: text[0] = 32
505: text[1] = 32
506: text[2] = 32
507: text[3] = 45
508: text[4] = 49
509: text[5] = 50
510: text[6] = 51
511: text[7] = 97
512: text[8] = 98
513: text[9] = 99
514: text[10] = 0
515: call header
516: parameter text, offset 6
517: £temporary2689 = &pointer
518: parameter £temporary2689, offset 8
519: parameter base, offset 10
520: call function noellipse-noellipse strtol
521: post call
522: £temporary2690 = return_value
523: value = £temporary2690
524: call header
525: parameter string_3C25s3E203C25li3E203C25s3E203C25i3E0A#, offset 6
526: parameter text, offset 8
527: parameter value, offset 10
528: parameter pointer, offset 14
529: parameter base, offset 16
530: call function noellipse-ellipse printf, extra 0
531: post call
532: empty
533: return
534: function end strtol_test
0: g_inStatus = 1
1: g_inDevice = s
2: g_inChars = 0
3: call header
4: parameter base, offset 6
5: call function noellipse-noellipse scanUnsignedLongInt
6: post call
7: £temporary2854 = return_value
8: unsignedLongValue = £temporary2854
9: if endp != 0 goto 12
10: goto 16
11: check track map float stack
12: £temporary2856 -> endp = *endp
13: £temporary2857 = s + g_inChars
14: £temporary2856 -> endp = £temporary2857
15: goto 16
16: return_value = unsignedLongValue
17: return
18: empty
19: return
20: function end strtoul
0: base = 0
1: text[0] = 32
2: text[1] = 32
3: text[2] = 32
4: text[3] = 43
5: text[4] = 49
6: text[5] = 50
7: text[6] = 51
8: text[7] = 97
9: text[8] = 98
10: text[9] = 99
11: text[10] = 0
12: call header
13: parameter text, offset 6
14: £temporary2870 = &pointer
15: parameter £temporary2870, offset 8
16: parameter base, offset 10
17: call function noellipse-noellipse strtoul
18: post call
19: £temporary2871 = return_value
20: value = £temporary2871
21: call header
22: parameter string_3C25s3E203C25li3E203C25s3E203C25i3E0A#, offset 6
23: parameter text, offset 8
24: parameter value, offset 10
25: parameter pointer, offset 14
26: parameter base, offset 16
27: call function noellipse-ellipse printf, extra 0
28: post call
29: base = 0
30: text[0] = 32
31: text[1] = 32
32: text[2] = 32
33: text[3] = 43
34: text[4] = 48
35: text[5] = 49
36: text[6] = 50
37: text[7] = 51
38: text[8] = 97
39: text[9] = 98
40: text[10] = 99
41: text[11] = 0
42: call header
43: parameter text, offset 6
44: £temporary2885 = &pointer
45: parameter £temporary2885, offset 8
46: parameter base, offset 10
47: call function noellipse-noellipse strtoul
48: post call
49: £temporary2886 = return_value
50: value = £temporary2886
51: call header
52: parameter string_3C25s3E203C25li3E203C25s3E203C25i3E0A#, offset 6
53: parameter text, offset 8
54: parameter value, offset 10
55: parameter pointer, offset 14
56: parameter base, offset 16
57: call function noellipse-ellipse printf, extra 0
58: post call
59: base = 0
60: text[0] = 32
61: text[1] = 32
62: text[2] = 32
63: text[3] = 43
64: text[4] = 48
65: text[5] = 120
66: text[6] = 49
67: text[7] = 50
68: text[8] = 51
69: text[9] = 65
70: text[10] = 66
71: text[11] = 67
72: text[12] = 0
73: call header
74: parameter text, offset 6
75: £temporary2901 = &pointer
76: parameter £temporary2901, offset 8
77: parameter base, offset 10
78: call function noellipse-noellipse strtoul
79: post call
80: £temporary2902 = return_value
81: value = £temporary2902
82: call header
83: parameter string_3C25s3E203C25li3E203C25s3E203C25i3E0A#, offset 6
84: parameter text, offset 8
85: parameter value, offset 10
86: parameter pointer, offset 14
87: parameter base, offset 16
88: call function noellipse-ellipse printf, extra 0
89: post call
90: base = 0
91: text[0] = 32
92: text[1] = 32
93: text[2] = 32
94: text[3] = 43
95: text[4] = 48
96: text[5] = 88
97: text[6] = 49
98: text[7] = 50
99: text[8] = 51
100: text[9] = 97
101: text[10] = 98
102: text[11] = 99
103: text[12] = 0
104: call header
105: parameter text, offset 6
106: £temporary2917 = &pointer
107: parameter £temporary2917, offset 8
108: parameter base, offset 10
109: call function noellipse-noellipse strtoul
110: post call
111: £temporary2918 = return_value
112: value = £temporary2918
113: call header
114: parameter string_3C25s3E203C25li3E203C25s3E203C25i3E0A#, offset 6
115: parameter text, offset 8
116: parameter value, offset 10
117: parameter pointer, offset 14
118: parameter base, offset 16
119: call function noellipse-ellipse printf, extra 0
120: post call
121: base = 0
122: text[0] = 32
123: text[1] = 32
124: text[2] = 32
125: text[3] = 45
126: text[4] = 49
127: text[5] = 50
128: text[6] = 51
129: text[7] = 97
130: text[8] = 98
131: text[9] = 99
132: text[10] = 0
133: call header
134: parameter text, offset 6
135: £temporary2931 = &pointer
136: parameter £temporary2931, offset 8
137: parameter base, offset 10
138: call function noellipse-noellipse strtoul
139: post call
140: £temporary2932 = return_value
141: value = £temporary2932
142: call header
143: parameter string_3C25s3E203C25li3E203C25s3E203C25i3E0A#, offset 6
144: parameter text, offset 8
145: parameter value, offset 10
146: parameter pointer, offset 14
147: parameter base, offset 16
148: call function noellipse-ellipse printf, extra 0
149: post call
150: base = 0
151: text[0] = 32
152: text[1] = 32
153: text[2] = 32
154: text[3] = 45
155: text[4] = 48
156: text[5] = 49
157: text[6] = 50
158: text[7] = 51
159: text[8] = 97
160: text[9] = 98
161: text[10] = 99
162: text[11] = 0
163: call header
164: parameter text, offset 6
165: £temporary2946 = &pointer
166: parameter £temporary2946, offset 8
167: parameter base, offset 10
168: call function noellipse-noellipse strtoul
169: post call
170: £temporary2947 = return_value
171: value = £temporary2947
172: call header
173: parameter string_3C25s3E203C25li3E203C25s3E203C25i3E0A#, offset 6
174: parameter text, offset 8
175: parameter value, offset 10
176: parameter pointer, offset 14
177: parameter base, offset 16
178: call function noellipse-ellipse printf, extra 0
179: post call
180: base = 0
181: text[0] = 32
182: text[1] = 32
183: text[2] = 32
184: text[3] = 45
185: text[4] = 48
186: text[5] = 120
187: text[6] = 49
188: text[7] = 50
189: text[8] = 51
190: text[9] = 65
191: text[10] = 66
192: text[11] = 67
193: text[12] = 0
194: call header
195: parameter text, offset 6
196: £temporary2962 = &pointer
197: parameter £temporary2962, offset 8
198: parameter base, offset 10
199: call function noellipse-noellipse strtoul
200: post call
201: £temporary2963 = return_value
202: value = £temporary2963
203: call header
204: parameter string_3C25s3E203C25li3E203C25s3E203C25i3E0A#, offset 6
205: parameter text, offset 8
206: parameter value, offset 10
207: parameter pointer, offset 14
208: parameter base, offset 16
209: call function noellipse-ellipse printf, extra 0
210: post call
211: base = 0
212: text[0] = 32
213: text[1] = 32
214: text[2] = 32
215: text[3] = 45
216: text[4] = 48
217: text[5] = 88
218: text[6] = 49
219: text[7] = 50
220: text[8] = 51
221: text[9] = 97
222: text[10] = 98
223: text[11] = 99
224: text[12] = 0
225: call header
226: parameter text, offset 6
227: £temporary2978 = &pointer
228: parameter £temporary2978, offset 8
229: parameter base, offset 10
230: call function noellipse-noellipse strtoul
231: post call
232: £temporary2979 = return_value
233: value = £temporary2979
234: call header
235: parameter string_3C25s3E203C25li3E203C25s3E203C25i3E0A#, offset 6
236: parameter text, offset 8
237: parameter value, offset 10
238: parameter pointer, offset 14
239: parameter base, offset 16
240: call function noellipse-ellipse printf, extra 0
241: post call
242: base = 9
243: text[0] = 32
244: text[1] = 32
245: text[2] = 32
246: text[3] = 43
247: text[4] = 49
248: text[5] = 50
249: text[6] = 51
250: text[7] = 97
251: text[8] = 98
252: text[9] = 99
253: text[10] = 0
254: call header
255: parameter text, offset 6
256: £temporary2992 = &pointer
257: parameter £temporary2992, offset 8
258: parameter base, offset 10
259: call function noellipse-noellipse strtoul
260: post call
261: £temporary2993 = return_value
262: value = £temporary2993
263: call header
264: parameter string_3C25s3E203C25li3E203C25s3E203C25i3E0A#, offset 6
265: parameter text, offset 8
266: parameter value, offset 10
267: parameter pointer, offset 14
268: parameter base, offset 16
269: call function noellipse-ellipse printf, extra 0
270: post call
271: base = 10
272: text[0] = 32
273: text[1] = 32
274: text[2] = 32
275: text[3] = 43
276: text[4] = 49
277: text[5] = 50
278: text[6] = 51
279: text[7] = 97
280: text[8] = 98
281: text[9] = 99
282: text[10] = 0
283: call header
284: parameter text, offset 6
285: £temporary3006 = &pointer
286: parameter £temporary3006, offset 8
287: parameter base, offset 10
288: call function noellipse-noellipse strtoul
289: post call
290: £temporary3007 = return_value
291: value = £temporary3007
292: call header
293: parameter string_3C25s3E203C25li3E203C25s3E203C25i3E0A#, offset 6
294: parameter text, offset 8
295: parameter value, offset 10
296: parameter pointer, offset 14
297: parameter base, offset 16
298: call function noellipse-ellipse printf, extra 0
299: post call
300: base = 11
301: text[0] = 32
302: text[1] = 32
303: text[2] = 32
304: text[3] = 43
305: text[4] = 49
306: text[5] = 50
307: text[6] = 51
308: text[7] = 97
309: text[8] = 98
310: text[9] = 99
311: text[10] = 0
312: call header
313: parameter text, offset 6
314: £temporary3020 = &pointer
315: parameter £temporary3020, offset 8
316: parameter base, offset 10
317: call function noellipse-noellipse strtoul
318: post call
319: £temporary3021 = return_value
320: value = £temporary3021
321: call header
322: parameter string_3C25s3E203C25li3E203C25s3E203C25i3E0A#, offset 6
323: parameter text, offset 8
324: parameter value, offset 10
325: parameter pointer, offset 14
326: parameter base, offset 16
327: call function noellipse-ellipse printf, extra 0
328: post call
329: base = 12
330: text[0] = 32
331: text[1] = 32
332: text[2] = 32
333: text[3] = 43
334: text[4] = 49
335: text[5] = 50
336: text[6] = 51
337: text[7] = 65
338: text[8] = 66
339: text[9] = 67
340: text[10] = 0
341: call header
342: parameter text, offset 6
343: £temporary3034 = &pointer
344: parameter £temporary3034, offset 8
345: parameter base, offset 10
346: call function noellipse-noellipse strtoul
347: post call
348: £temporary3035 = return_value
349: value = £temporary3035
350: call header
351: parameter string_3C25s3E203C25li3E203C25s3E203C25i3E0A#, offset 6
352: parameter text, offset 8
353: parameter value, offset 10
354: parameter pointer, offset 14
355: parameter base, offset 16
356: call function noellipse-ellipse printf, extra 0
357: post call
358: base = 13
359: text[0] = 32
360: text[1] = 32
361: text[2] = 32
362: text[3] = 43
363: text[4] = 49
364: text[5] = 50
365: text[6] = 51
366: text[7] = 97
367: text[8] = 98
368: text[9] = 99
369: text[10] = 0
370: call header
371: parameter text, offset 6
372: £temporary3048 = &pointer
373: parameter £temporary3048, offset 8
374: parameter base, offset 10
375: call function noellipse-noellipse strtoul
376: post call
377: £temporary3049 = return_value
378: value = £temporary3049
379: call header
380: parameter string_3C25s3E203C25li3E203C25s3E203C25i3E0A#, offset 6
381: parameter text, offset 8
382: parameter value, offset 10
383: parameter pointer, offset 14
384: parameter base, offset 16
385: call function noellipse-ellipse printf, extra 0
386: post call
387: base = 9
388: text[0] = 32
389: text[1] = 32
390: text[2] = 32
391: text[3] = 45
392: text[4] = 49
393: text[5] = 50
394: text[6] = 51
395: text[7] = 97
396: text[8] = 98
397: text[9] = 99
398: text[10] = 0
399: call header
400: parameter text, offset 6
401: £temporary3062 = &pointer
402: parameter £temporary3062, offset 8
403: parameter base, offset 10
404: call function noellipse-noellipse strtoul
405: post call
406: £temporary3063 = return_value
407: value = £temporary3063
408: call header
409: parameter string_3C25s3E203C25li3E203C25s3E203C25i3E0A#, offset 6
410: parameter text, offset 8
411: parameter value, offset 10
412: parameter pointer, offset 14
413: parameter base, offset 16
414: call function noellipse-ellipse printf, extra 0
415: post call
416: base = 10
417: text[0] = 32
418: text[1] = 32
419: text[2] = 32
420: text[3] = 45
421: text[4] = 49
422: text[5] = 50
423: text[6] = 51
424: text[7] = 97
425: text[8] = 98
426: text[9] = 99
427: text[10] = 0
428: call header
429: parameter text, offset 6
430: £temporary3076 = &pointer
431: parameter £temporary3076, offset 8
432: parameter base, offset 10
433: call function noellipse-noellipse strtoul
434: post call
435: £temporary3077 = return_value
436: value = £temporary3077
437: call header
438: parameter string_3C25s3E203C25li3E203C25s3E203C25i3E0A#, offset 6
439: parameter text, offset 8
440: parameter value, offset 10
441: parameter pointer, offset 14
442: parameter base, offset 16
443: call function noellipse-ellipse printf, extra 0
444: post call
445: base = 11
446: text[0] = 32
447: text[1] = 32
448: text[2] = 32
449: text[3] = 45
450: text[4] = 49
451: text[5] = 50
452: text[6] = 51
453: text[7] = 97
454: text[8] = 98
455: text[9] = 99
456: text[10] = 0
457: call header
458: parameter text, offset 6
459: £temporary3090 = &pointer
460: parameter £temporary3090, offset 8
461: parameter base, offset 10
462: call function noellipse-noellipse strtoul
463: post call
464: £temporary3091 = return_value
465: value = £temporary3091
466: call header
467: parameter string_3C25s3E203C25li3E203C25s3E203C25i3E0A#, offset 6
468: parameter text, offset 8
469: parameter value, offset 10
470: parameter pointer, offset 14
471: parameter base, offset 16
472: call function noellipse-ellipse printf, extra 0
473: post call
474: base = 12
475: text[0] = 32
476: text[1] = 32
477: text[2] = 32
478: text[3] = 45
479: text[4] = 49
480: text[5] = 50
481: text[6] = 51
482: text[7] = 65
483: text[8] = 66
484: text[9] = 67
485: text[10] = 0
486: call header
487: parameter text, offset 6
488: £temporary3104 = &pointer
489: parameter £temporary3104, offset 8
490: parameter base, offset 10
491: call function noellipse-noellipse strtoul
492: post call
493: £temporary3105 = return_value
494: value = £temporary3105
495: call header
496: parameter string_3C25s3E203C25li3E203C25s3E203C25i3E0A#, offset 6
497: parameter text, offset 8
498: parameter value, offset 10
499: parameter pointer, offset 14
500: parameter base, offset 16
501: call function noellipse-ellipse printf, extra 0
502: post call
503: base = 13
504: text[0] = 32
505: text[1] = 32
506: text[2] = 32
507: text[3] = 45
508: text[4] = 49
509: text[5] = 50
510: text[6] = 51
511: text[7] = 97
512: text[8] = 98
513: text[9] = 99
514: text[10] = 0
515: call header
516: parameter text, offset 6
517: £temporary3118 = &pointer
518: parameter £temporary3118, offset 8
519: parameter base, offset 10
520: call function noellipse-noellipse strtoul
521: post call
522: £temporary3119 = return_value
523: value = £temporary3119
524: call header
525: parameter string_3C25s3E203C25li3E203C25s3E203C25i3E0A#, offset 6
526: parameter text, offset 8
527: parameter value, offset 10
528: parameter pointer, offset 14
529: parameter base, offset 16
530: call function noellipse-ellipse printf, extra 0
531: post call
532: empty
533: return
534: function end strtoul_test
0: call header
1: parameter s, offset 6
2: parameter 0, offset 8
3: call function noellipse-noellipse strtod
4: post call
5: £temporary3283 = return_value
6: return_value = £temporary3283
7: return
8: empty
9: return
10: function end atof
0: chars = 0
1: push 0
2: pop float value
3: call header
4: parameter s, offset 6
5: parameter string_25lf25n#, offset 8
6: push float value
7: pop float empty X
8: £temporary3286 = &value
9: parameter £temporary3286, offset 10
10: £temporary3287 = &chars
11: parameter £temporary3287, offset 12
12: call function noellipse-ellipse sscanf, extra 0
13: post call
14: if endp != 0 goto 17
15: goto 21
16: check track map float stack
17: £temporary3290 -> endp = *endp
18: £temporary3291 = s + chars
19: £temporary3290 -> endp = £temporary3291
20: goto 21
21: push float value
22: return_value = value
23: return
24: empty
25: return
26: function end strtod
0: ah = 76
1: al = -1
2: interrupt 33
3: empty
4: return
5: function end abort
0: return_value = 0
1: return
2: empty
3: return
4: function end getenv
0: return_value = -1
1: return
2: empty
3: return
4: function end system
0: firstIndex = 0
1: £temporary3300 = listSize - 1
2: lastIndex = £temporary3300
3: if listSize == 0 goto 6
4: goto 9
5: check track map float stack
6: return_value = 0
7: return
8: goto 9
9: goto 11
10: check track map float stack
11: £temporary3302 = int_to_int valueList (Pointer -> Pointer)
12: £temporary3303 = firstIndex * valueSize
13: £temporary3304 = £temporary3302 + £temporary3303
14: firstValuePtr = £temporary3304
15: call header
16: parameter keyPtr, offset 6
17: parameter firstValuePtr, offset 8
18: call function noellipse-noellipse compare
19: post call
20: £temporary3305 = return_value
21: firstCompare = £temporary3305
22: if firstCompare < 0 goto 25
23: goto 28
24: check track map float stack
25: return_value = 0
26: return
27: goto 35
28: if firstCompare == 0 goto 31
29: goto 35
30: check track map float stack
31: return_value = firstValuePtr
32: return
33: goto 35
34: goto 35
35: £temporary3308 = int_to_int valueList (Pointer -> Pointer)
36: £temporary3309 = lastIndex * valueSize
37: £temporary3310 = £temporary3308 + £temporary3309
38: lastValuePtr = £temporary3310
39: call header
40: parameter keyPtr, offset 6
41: parameter lastValuePtr, offset 8
42: call function noellipse-noellipse compare
43: post call
44: £temporary3311 = return_value
45: lastCompare = £temporary3311
46: if lastCompare > 0 goto 49
47: goto 52
48: check track map float stack
49: return_value = 0
50: return
51: goto 59
52: if lastCompare == 0 goto 55
53: goto 59
54: check track map float stack
55: return_value = lastValuePtr
56: return
57: goto 59
58: goto 59
59: £temporary3314 = firstIndex + lastIndex
60: £temporary3315 = £temporary3314 / 2
61: middleIndex = £temporary3315
62: £temporary3316 = int_to_int valueList (Pointer -> Pointer)
63: £temporary3317 = middleIndex * valueSize
64: £temporary3318 = £temporary3316 + £temporary3317
65: middleValuePtr = £temporary3318
66: call header
67: parameter keyPtr, offset 6
68: parameter middleValuePtr, offset 8
69: call function noellipse-noellipse compare
70: post call
71: £temporary3319 = return_value
72: middleCompare = £temporary3319
73: if middleCompare < 0 goto 76
74: goto 78
75: check track map float stack
76: lastIndex = middleIndex
77: goto 9
78: if middleCompare > 0 goto 81
79: goto 83
80: check track map float stack
81: firstIndex = middleIndex
82: goto 9
83: return_value = middleValuePtr
84: return
85: goto 9
86: goto 9
87: goto 9
88: empty
89: return
90: function end bsearch
0: £temporary3329 = 1664525 * g_randValue
1: £temporary3330 = £temporary3329 + 1013904223
2: £temporary3331 = £temporary3330 % 127
3: g_randValue = £temporary3331
4: £temporary3332 = int_to_int g_randValue (Signed_Long_Int -> Signed_Int)
5: return_value = £temporary3332
6: return
7: empty
8: return
9: function end rand
0: £temporary3333 = int_to_int seed (Unsigned_Int -> Signed_Long_Int)
1: g_randValue = £temporary3333
2: empty
3: return
4: function end srand
0: index = 0
1: empty
2: if index < 256 goto 5
3: goto 22
4: check track map float stack
5: empty
6: £temporary3337 = index * 2
7: £temporary3338 = g_funcArray + £temporary3337
8: £temporary3336 -> £temporary3338 = *£temporary3338
9: if £temporary3336 -> £temporary3338 == 0 goto 12
10: goto 19
11: check track map float stack
12: £temporary3341 = index * 2
13: £temporary3342 = g_funcArray + £temporary3341
14: £temporary3340 -> £temporary3342 = *£temporary3342
15: £temporary3340 -> £temporary3342 = fcn
16: return_value = 0
17: return
18: goto 19
19: empty
20: index = index + 1
21: goto 1
22: return_value = -1
23: return
24: empty
25: return
26: function end atexit
0: index = 255
1: empty
2: if index >= 0 goto 5
3: goto 22
4: check track map float stack
5: empty
6: £temporary3346 = index * 2
7: £temporary3347 = g_funcArray + £temporary3346
8: £temporary3345 -> £temporary3347 = *£temporary3347
9: if £temporary3345 -> £temporary3347 != 0 goto 12
10: goto 19
11: check track map float stack
12: £temporary3350 = index * 2
13: £temporary3351 = g_funcArray + £temporary3350
14: £temporary3349 -> £temporary3351 = *£temporary3351
15: call header
16: call function noellipse-noellipse £temporary3349 -> £temporary3351
17: post call
18: goto 19
19: empty
20: index = index - 1
21: goto 1
22: £temporary3354 = int_to_int status (Signed_Int -> Signed_Short_Int)
23: al = £temporary3354
24: ah = 76
25: interrupt 33
26: empty
27: return
28: function end exit
0: index = 0
1: empty
2: if index < valueSize goto 5
3: goto 20
4: check track map float stack
5: empty
6: £temporary3359 = value1 + index
7: £temporary3358 -> £temporary3359 = *£temporary3359
8: tempValue = £temporary3358 -> £temporary3359
9: £temporary3361 = value1 + index
10: £temporary3360 -> £temporary3361 = *£temporary3361
11: £temporary3363 = value2 + index
12: £temporary3362 -> £temporary3363 = *£temporary3363
13: £temporary3360 -> £temporary3361 = £temporary3362 -> £temporary3363
14: £temporary3365 = value2 + index
15: £temporary3364 -> £temporary3365 = *£temporary3365
16: £temporary3364 -> £temporary3365 = tempValue
17: empty
18: index = index + 1
19: goto 1
20: empty
21: return
22: function end memswap
0: £temporary3366 = int_to_int valueList (Pointer -> Pointer)
1: charList = £temporary3366
2: £temporary3367 = listSize - 1
3: size = £temporary3367
4: empty
5: if size > 0 goto 8
6: goto 51
7: check track map float stack
8: empty
9: update = 0
10: index = 0
11: empty
12: if index < size goto 15
13: goto 43
14: check track map float stack
15: empty
16: £temporary3372 = index * valueSize
17: £temporary3373 = charList + £temporary3372
18: valuePtr1 = £temporary3373
19: £temporary3374 = index + 1
20: £temporary3375 = £temporary3374 * valueSize
21: £temporary3376 = charList + £temporary3375
22: valuePtr2 = £temporary3376
23: call header
24: parameter valuePtr1, offset 6
25: parameter valuePtr2, offset 8
26: call function noellipse-noellipse compare
27: post call
28: £temporary3377 = return_value
29: if £temporary3377 > 0 goto 32
30: goto 40
31: check track map float stack
32: call header
33: parameter valuePtr1, offset 6
34: parameter valuePtr2, offset 8
35: parameter valueSize, offset 10
36: call function noellipse-noellipse memswap
37: post call
38: update = 1
39: goto 40
40: empty
41: index = index + 1
42: goto 11
43: if update != 0 goto 48
44: goto 46
45: check track map float stack
46: goto 51
47: goto 48
48: empty
49: size = size - 1
50: goto 4
51: empty
52: return
53: function end qsort
0: if value < 0 goto 2
1: goto 6
2: empty
3: £temporary3388 = -value
4: £temporary3392 = £temporary3388
5: goto 8
6: empty
7: £temporary3392 = value
8: empty
9: return_value = £temporary3392
10: return
11: empty
12: return
13: function end _abs
0: if value < 0 goto 2
1: goto 6
2: empty
3: £temporary3394 = -value
4: £temporary3398 = £temporary3394
5: goto 8
6: empty
7: £temporary3398 = value
8: empty
9: return_value = £temporary3398
10: return
11: empty
12: return
13: function end labs
0: result$quot = 0
1: result$rem = 0
2: if denum == 0 goto 5
3: goto 9
4: check track map float stack
5: errno = 6
6: return_value = result
7: return
8: goto 9
9: £temporary3403 = num / denum
10: result$quot = £temporary3403
11: £temporary3405 = num % denum
12: result$rem = £temporary3405
13: return_value = result
14: return
15: empty
16: return
17: function end div
0: result$quot = 0
1: result$rem = 0
2: if denum == 0 goto 5
3: goto 9
4: check track map float stack
5: errno = 6
6: return_value = result
7: return
8: goto 9
9: £temporary3412 = num / denum
10: result$quot = £temporary3412
11: £temporary3414 = num % denum
12: result$rem = £temporary3414
13: return_value = result
14: return
15: empty
16: return
17: function end ldiv
0: return_value = -1
1: return
2: empty
3: return
4: function end clock
0: ah = 42
1: interrupt 33
2: £temporary3418 = cx
3: £temporary3419 = £temporary3418 - 1900
4: year = £temporary3419
5: £temporary3420 = dh
6: £temporary3421 = £temporary3420 - 1
7: month = £temporary3421
8: £temporary3422 = dl
9: monthDay = £temporary3422
10: ah = 44
11: interrupt 33
12: £temporary3424 = ch
13: hour = £temporary3424
14: £temporary3425 = cl
15: min = £temporary3425
16: £temporary3426 = dh
17: sec = £temporary3426
18: £temporary3427 = year % 4
19: if £temporary3427 == 0 goto 21
20: goto 23
21: £temporary3429 = 1
22: goto 24
23: £temporary3429 = 0
24: empty
25: leapYear = £temporary3429
26: daysOfMonths[0] = 31
27: if leapYear != 0 goto 29
28: goto 32
29: empty
30: £temporary3434 = 29
31: goto 34
32: empty
33: £temporary3434 = 28
34: empty
35: daysOfMonths[1] = £temporary3434
36: daysOfMonths[2] = 31
37: daysOfMonths[3] = 30
38: daysOfMonths[4] = 31
39: daysOfMonths[5] = 30
40: daysOfMonths[6] = 30
41: daysOfMonths[7] = 31
42: daysOfMonths[8] = 30
43: daysOfMonths[9] = 31
44: daysOfMonths[10] = 30
45: daysOfMonths[11] = 31
46: £temporary3447 = int_to_int monthDay (Signed_Short_Int -> Signed_Int)
47: £temporary3448 = £temporary3447 - 1
48: yearDay = £temporary3448
49: mon = 0
50: empty
51: £temporary3449 = int_to_int month (Signed_Short_Int -> Signed_Int)
52: if mon < £temporary3449 goto 55
53: goto 64
54: check track map float stack
55: empty
56: £temporary3453 = mon * 2
57: £temporary3454 = daysOfMonths + £temporary3453
58: £temporary3452 -> £temporary3454 = *£temporary3454
59: £temporary3455 = yearDay + £temporary3452 -> £temporary3454
60: yearDay = £temporary3455
61: empty
62: mon = mon + 1
63: goto 50
64: £temporary3457 = int_to_int sec (Signed_Short_Int -> Signed_Int)
65: s$tm_sec = £temporary3457
66: £temporary3459 = int_to_int min (Signed_Short_Int -> Signed_Int)
67: s$tm_min = £temporary3459
68: £temporary3461 = int_to_int hour (Signed_Short_Int -> Signed_Int)
69: s$tm_hour = £temporary3461
70: £temporary3463 = int_to_int monthDay (Signed_Short_Int -> Signed_Int)
71: s$tm_mday = £temporary3463
72: £temporary3465 = int_to_int month (Signed_Short_Int -> Signed_Int)
73: s$tm_mon = £temporary3465
74: s$tm_year = year
75: s$tm_wday = 0
76: s$tm_yday = yearDay
77: s$tm_isdst = 0
78: call header
79: £temporary3470 = &s
80: parameter £temporary3470, offset 6
81: call function noellipse-noellipse mktime
82: post call
83: £temporary3471 = return_value
84: time = £temporary3471
85: if timePtr != 0 goto 88
86: goto 91
87: check track map float stack
88: £temporary3473 -> timePtr = *timePtr
89: £temporary3473 -> timePtr = time
90: goto 91
91: return_value = time
92: return
93: empty
94: return
95: function end time
0: if tp != 0 goto 3
1: goto 32
2: check track map float stack
3: £temporary3477 -> tp = *tp, offset 10
4: £temporary3478 = £temporary3477 -> tp - 69
5: £temporary3479 = £temporary3478 / 4
6: £temporary3480 = int_to_int £temporary3479 (Signed_Int -> Signed_Long_Int)
7: leapDays = £temporary3480
8: £temporary3481 -> tp = *tp, offset 10
9: £temporary3482 = £temporary3481 -> tp - 70
10: £temporary3483 = 365 * £temporary3482
11: £temporary3484 = int_to_int £temporary3483 (Signed_Int -> Signed_Long_Int)
12: £temporary3485 = £temporary3484 + leapDays
13: £temporary3486 -> tp = *tp, offset 14
14: £temporary3487 = int_to_int £temporary3486 -> tp (Signed_Int -> Signed_Long_Int)
15: £temporary3488 = £temporary3485 + £temporary3487
16: totalDays = £temporary3488
17: £temporary3489 = 86400 * totalDays
18: £temporary3490 -> tp = *tp, offset 4
19: £temporary3491 = int_to_int £temporary3490 -> tp (Signed_Int -> Signed_Long_Int)
20: £temporary3492 = 3600 * £temporary3491
21: £temporary3493 = £temporary3489 + £temporary3492
22: £temporary3494 -> tp = *tp, offset 2
23: £temporary3495 = int_to_int £temporary3494 -> tp (Signed_Int -> Signed_Long_Int)
24: £temporary3496 = 60 * £temporary3495
25: £temporary3497 = £temporary3493 + £temporary3496
26: £temporary3498 -> tp = *tp
27: £temporary3499 = int_to_int £temporary3498 -> tp (Signed_Int -> Signed_Long_Int)
28: £temporary3500 = £temporary3497 + £temporary3499
29: return_value = £temporary3500
30: return
31: goto 32
32: return_value = 0
33: return
34: empty
35: return
36: function end mktime
0: year = 1970
1: if timePtr != 0 goto 4
2: goto 116
3: check track map float stack
4: £temporary3502 -> timePtr = *timePtr
5: time = £temporary3502 -> timePtr
6: £temporary3503 = time % 86400
7: secondsOfDay = £temporary3503
8: £temporary3504 = time / 86400
9: totalDays = £temporary3504
10: £temporary3506 = secondsOfDay / 3600
11: £temporary3507 = int_to_int £temporary3506 (Signed_Long_Int -> Signed_Int)
12: g_timeStruct$tm_hour = £temporary3507
13: £temporary3509 = secondsOfDay % 3600
14: £temporary3510 = £temporary3509 / 60
15: £temporary3511 = int_to_int £temporary3510 (Signed_Long_Int -> Signed_Int)
16: g_timeStruct$tm_min = £temporary3511
17: £temporary3513 = secondsOfDay % 3600
18: £temporary3514 = £temporary3513 % 60
19: £temporary3515 = int_to_int £temporary3514 (Signed_Long_Int -> Signed_Int)
20: g_timeStruct$tm_sec = £temporary3515
21: if totalDays < 3 goto 24
22: goto 28
23: check track map float stack
24: £temporary3518 = totalDays + 4
25: £temporary3519 = int_to_int £temporary3518 (Signed_Long_Int -> Signed_Int)
26: g_timeStruct$tm_wday = £temporary3519
27: goto 33
28: £temporary3521 = totalDays - 3
29: £temporary3522 = £temporary3521 % 7
30: £temporary3523 = int_to_int £temporary3522 (Signed_Long_Int -> Signed_Int)
31: g_timeStruct$tm_wday = £temporary3523
32: goto 33
33: goto 35
34: check track map float stack
35: £temporary3524 = year % 4
36: if £temporary3524 == 0 goto 38
37: goto 41
38: £temporary3526 = year % 100
39: if £temporary3526 != 0 goto 44
40: goto 41
41: £temporary3529 = year % 400
42: if £temporary3529 == 0 goto 44
43: goto 46
44: £temporary3532 = 1
45: goto 47
46: £temporary3532 = 0
47: empty
48: leapYear = £temporary3532
49: if leapYear != 0 goto 51
50: goto 54
51: empty
52: £temporary3537 = 366
53: goto 56
54: empty
55: £temporary3537 = 365
56: empty
57: daysOfYear = £temporary3537
58: £temporary3538 = int_to_int daysOfYear (Signed_Int -> Signed_Long_Int)
59: if totalDays < £temporary3538 goto 62
60: goto 110
61: check track map float stack
62: daysOfMonths[0] = 31
63: if leapYear != 0 goto 65
64: goto 68
65: empty
66: £temporary3544 = 29
67: goto 70
68: empty
69: £temporary3544 = 28
70: empty
71: daysOfMonths[1] = £temporary3544
72: daysOfMonths[2] = 31
73: daysOfMonths[3] = 30
74: daysOfMonths[4] = 31
75: daysOfMonths[5] = 30
76: daysOfMonths[6] = 30
77: daysOfMonths[7] = 31
78: daysOfMonths[8] = 30
79: daysOfMonths[9] = 31
80: daysOfMonths[10] = 30
81: daysOfMonths[11] = 31
82: month = 0
83: £temporary3558 = year - 1900
84: g_timeStruct$tm_year = £temporary3558
85: £temporary3560 = int_to_int totalDays (Signed_Long_Int -> Signed_Int)
86: g_timeStruct$tm_yday = £temporary3560
87: £temporary3562 = month * 2
88: £temporary3563 = daysOfMonths + £temporary3562
89: £temporary3561 -> £temporary3563 = *£temporary3563
90: £temporary3564 = int_to_int £temporary3561 -> £temporary3563 (Signed_Int -> Signed_Long_Int)
91: if totalDays >= £temporary3564 goto 94
92: goto 102
93: check track map float stack
94: £temporary3567 = month * 2
95: £temporary3568 = daysOfMonths + £temporary3567
96: £temporary3566 -> £temporary3568 = *£temporary3568
97: £temporary3569 = int_to_int £temporary3566 -> £temporary3568 (Signed_Int -> Signed_Long_Int)
98: £temporary3570 = totalDays - £temporary3569
99: totalDays = £temporary3570
100: month = month + 1
101: goto 87
102: g_timeStruct$tm_mon = month
103: £temporary3574 = totalDays + 1
104: £temporary3575 = int_to_int £temporary3574 (Signed_Long_Int -> Signed_Int)
105: g_timeStruct$tm_mday = £temporary3575
106: g_timeStruct$tm_isdst = -1
107: return_value = (@27$g_timeStruct,0)
108: return
109: goto 110
110: year = year + 1
111: £temporary3578 = int_to_int daysOfYear (Signed_Int -> Signed_Long_Int)
112: £temporary3579 = totalDays - £temporary3578
113: totalDays = £temporary3579
114: goto 33
115: goto 116
116: return_value = 0
117: return
118: empty
119: return
120: function end gmtime
0: £temporary3581 = time2 - time1
1: £temporary3582 = int_to_float £temporary3581 (Unsigned_Long_Int -> Double)
2: return_value = £temporary3582
3: return
4: empty
5: return
6: function end difftime
0: localeConvPtr = 0
1: if localeConvPtr != 0 goto 3
2: goto 7
3: empty
4: £temporary3584 -> localeConvPtr = *localeConvPtr, offset 4
5: £temporary3588 = £temporary3584 -> localeConvPtr
6: goto 9
7: empty
8: £temporary3588 = 0
9: empty
10: shortDayList = £temporary3588
11: if localeConvPtr != 0 goto 13
12: goto 17
13: empty
14: £temporary3590 -> localeConvPtr = *localeConvPtr, offset 8
15: £temporary3594 = £temporary3590 -> localeConvPtr
16: goto 19
17: empty
18: £temporary3594 = 0
19: empty
20: shortMonthList = £temporary3594
21: if shortDayList != 0 goto 23
22: goto 26
23: empty
24: £temporary3599 = shortDayList
25: goto 28
26: empty
27: £temporary3599 = g_defaultShortDayList
28: empty
29: shortDayList = £temporary3599
30: if shortMonthList != 0 goto 32
31: goto 35
32: empty
33: £temporary3604 = shortMonthList
34: goto 37
35: empty
36: £temporary3604 = g_defaultShortMonthList
37: empty
38: shortMonthList = £temporary3604
39: call header
40: parameter g_timeString, offset 6
41: parameter string_25s2025s20252i202502i3A2502i3A2502i202504i#, offset 8
42: £temporary3605 -> tp = *tp, offset 12
43: £temporary3607 = £temporary3605 -> tp * 2
44: £temporary3608 = shortDayList + £temporary3607
45: £temporary3606 -> £temporary3608 = *£temporary3608
46: parameter £temporary3606 -> £temporary3608, offset 10
47: £temporary3609 -> tp = *tp, offset 8
48: £temporary3611 = £temporary3609 -> tp * 2
49: £temporary3612 = shortMonthList + £temporary3611
50: £temporary3610 -> £temporary3612 = *£temporary3612
51: parameter £temporary3610 -> £temporary3612, offset 12
52: £temporary3613 -> tp = *tp, offset 6
53: parameter £temporary3613 -> tp, offset 14
54: £temporary3614 -> tp = *tp, offset 4
55: parameter £temporary3614 -> tp, offset 16
56: £temporary3615 -> tp = *tp, offset 2
57: parameter £temporary3615 -> tp, offset 18
58: £temporary3616 -> tp = *tp
59: parameter £temporary3616 -> tp, offset 20
60: £temporary3617 -> tp = *tp, offset 10
61: £temporary3618 = £temporary3617 -> tp + 1900
62: parameter £temporary3618, offset 22
63: call function noellipse-ellipse sprintf, extra 0
64: post call
65: return_value = g_timeString
66: return
67: empty
68: return
69: function end asctime
0: call header
1: call header
2: parameter time, offset 6
3: call function noellipse-noellipse localtime
4: post call
5: £temporary3629 = return_value
6: parameter £temporary3629, offset 6
7: call function noellipse-noellipse asctime
8: post call
9: £temporary3630 = return_value
10: return_value = £temporary3630
11: return
12: empty
13: return
14: function end ctime
0: call header
1: parameter timePtr, offset 6
2: call function noellipse-noellipse gmtime
3: post call
4: £temporary3633 = return_value
5: tmPtr = £temporary3633
6: call header
7: call function noellipse-noellipse localeconv
8: post call
9: £temporary3634 = return_value
10: localeConvPtr = £temporary3634
11: timeZone = 0
12: if localeConvPtr != 0 goto 15
13: goto 28
14: check track map float stack
15: £temporary3636 -> tmPtr = *tmPtr, offset 16
16: if £temporary3636 -> tmPtr != 0 goto 18
17: goto 22
18: empty
19: £temporary3637 -> localeConvPtr = *localeConvPtr
20: £temporary3643 = £temporary3637 -> localeConvPtr
21: goto 25
22: empty
23: £temporary3638 -> localeConvPtr = *localeConvPtr, offset 2
24: £temporary3643 = £temporary3638 -> localeConvPtr
25: empty
26: timeZone = £temporary3643
27: goto 28
28: £temporary3644 -> timePtr = *timePtr
29: £temporary3645 = 3600 * timeZone
30: £temporary3646 = int_to_int £temporary3645 (Signed_Int -> Unsigned_Long_Int)
31: £temporary3647 = £temporary3644 -> timePtr + £temporary3646
32: time = £temporary3647
33: call header
34: £temporary3648 = &time
35: parameter £temporary3648, offset 6
36: call function noellipse-noellipse gmtime
37: post call
38: £temporary3649 = return_value
39: return_value = £temporary3649
40: return
41: empty
42: return
43: function end localtime
0: call header
1: call function noellipse-noellipse localeconv
2: post call
3: £temporary3653 = return_value
4: localeConvPtr = £temporary3653
5: if localeConvPtr != 0 goto 7
6: goto 11
7: empty
8: £temporary3655 -> localeConvPtr = *localeConvPtr, offset 4
9: £temporary3659 = £temporary3655 -> localeConvPtr
10: goto 13
11: empty
12: £temporary3659 = 0
13: empty
14: shortDayList = £temporary3659
15: if localeConvPtr != 0 goto 17
16: goto 21
17: empty
18: £temporary3661 -> localeConvPtr = *localeConvPtr, offset 8
19: £temporary3665 = £temporary3661 -> localeConvPtr
20: goto 23
21: empty
22: £temporary3665 = 0
23: empty
24: shortMonthList = £temporary3665
25: if localeConvPtr != 0 goto 27
26: goto 31
27: empty
28: £temporary3667 -> localeConvPtr = *localeConvPtr, offset 6
29: £temporary3671 = £temporary3667 -> localeConvPtr
30: goto 33
31: empty
32: £temporary3671 = 0
33: empty
34: longDayList = £temporary3671
35: if localeConvPtr != 0 goto 37
36: goto 41
37: empty
38: £temporary3673 -> localeConvPtr = *localeConvPtr, offset 10
39: £temporary3677 = £temporary3673 -> localeConvPtr
40: goto 43
41: empty
42: £temporary3677 = 0
43: empty
44: longMonthList = £temporary3677
45: £temporary3678 -> tp = *tp, offset 10
46: £temporary3679 = £temporary3678 -> tp - 69
47: £temporary3680 = £temporary3679 / 4
48: leapDays = £temporary3680
49: £temporary3681 -> tp = *tp, offset 10
50: £temporary3682 = £temporary3681 -> tp - 70
51: £temporary3683 = 365 * £temporary3682
52: £temporary3684 = £temporary3683 + leapDays
53: £temporary3685 -> tp = *tp, offset 14
54: £temporary3686 = £temporary3684 + £temporary3685 -> tp
55: £temporary3687 = int_to_int £temporary3686 (Signed_Int -> Signed_Long_Int)
56: totalDays = £temporary3687
57: call header
58: parameter s, offset 6
59: parameter string_#, offset 8
60: call function noellipse-noellipse strcpy
61: post call
62: if shortDayList != 0 goto 64
63: goto 67
64: empty
65: £temporary3693 = shortDayList
66: goto 69
67: empty
68: £temporary3693 = g_defaultShortDayList
69: empty
70: shortDayList = £temporary3693
71: if longDayList != 0 goto 73
72: goto 76
73: empty
74: £temporary3698 = longDayList
75: goto 78
76: empty
77: £temporary3698 = g_defaultLongDayList
78: empty
79: longDayList = £temporary3698
80: if shortMonthList != 0 goto 82
81: goto 85
82: empty
83: £temporary3703 = shortMonthList
84: goto 87
85: empty
86: £temporary3703 = g_defaultShortMonthList
87: empty
88: shortMonthList = £temporary3703
89: if longMonthList != 0 goto 91
90: goto 94
91: empty
92: £temporary3708 = longMonthList
93: goto 96
94: empty
95: £temporary3708 = g_defaultLongMonthList
96: empty
97: longMonthList = £temporary3708
98: if totalDays < 3 goto 101
99: goto 105
100: check track map float stack
101: £temporary3710 = totalDays + 4
102: £temporary3711 = int_to_int £temporary3710 (Signed_Long_Int -> Signed_Int)
103: yearDaySunday = £temporary3711
104: goto 110
105: £temporary3712 = totalDays - 3
106: £temporary3713 = £temporary3712 % 7
107: £temporary3714 = int_to_int £temporary3713 (Signed_Long_Int -> Signed_Int)
108: yearDaySunday = £temporary3714
109: goto 110
110: if totalDays < 4 goto 113
111: goto 117
112: check track map float stack
113: £temporary3716 = totalDays + 3
114: £temporary3717 = int_to_int £temporary3716 (Signed_Long_Int -> Signed_Int)
115: yearDayMonday = £temporary3717
116: goto 122
117: £temporary3718 = totalDays - 4
118: £temporary3719 = £temporary3718 % 7
119: £temporary3720 = int_to_int £temporary3719 (Signed_Long_Int -> Signed_Int)
120: yearDayMonday = £temporary3720
121: goto 122
122: index = 0
123: empty
124: £temporary3722 = fmt + index
125: £temporary3721 -> £temporary3722 = *£temporary3722
126: if £temporary3721 -> £temporary3722 != 0 goto 129
127: goto 407
128: check track map float stack
129: empty
130: £temporary3726 = fmt + index
131: £temporary3725 -> £temporary3726 = *£temporary3726
132: if £temporary3725 -> £temporary3726 == 37 goto 135
133: goto 375
134: check track map float stack
135: index = index + 1
136: £temporary3728 = index
137: £temporary3730 = fmt + £temporary3728
138: £temporary3729 -> £temporary3730 = *£temporary3730
139: case £temporary3729 -> £temporary3730 == 97 goto 163
140: case £temporary3729 -> £temporary3730 == 65 goto 173
141: case £temporary3729 -> £temporary3730 == 98 goto 183
142: case £temporary3729 -> £temporary3730 == 66 goto 193
143: case £temporary3729 -> £temporary3730 == 99 goto 203
144: case £temporary3729 -> £temporary3730 == 100 goto 223
145: case £temporary3729 -> £temporary3730 == 72 goto 231
146: case £temporary3729 -> £temporary3730 == 73 goto 239
147: case £temporary3729 -> £temporary3730 == 106 goto 248
148: case £temporary3729 -> £temporary3730 == 109 goto 256
149: case £temporary3729 -> £temporary3730 == 77 goto 265
150: case £temporary3729 -> £temporary3730 == 112 goto 273
151: case £temporary3729 -> £temporary3730 == 83 goto 289
152: case £temporary3729 -> £temporary3730 == 85 goto 297
153: case £temporary3729 -> £temporary3730 == 119 goto 304
154: case £temporary3729 -> £temporary3730 == 87 goto 312
155: case £temporary3729 -> £temporary3730 == 120 goto 319
156: case £temporary3729 -> £temporary3730 == 88 goto 333
157: case £temporary3729 -> £temporary3730 == 121 goto 345
158: case £temporary3729 -> £temporary3730 == 89 goto 354
159: case £temporary3729 -> £temporary3730 == 90 goto 363
160: case £temporary3729 -> £temporary3730 == 37 goto 369
161: case end £temporary3729 -> £temporary3730
162: goto 382
163: call header
164: parameter add, offset 6
165: £temporary3731 -> tp = *tp, offset 12
166: £temporary3733 = £temporary3731 -> tp * 2
167: £temporary3734 = shortDayList + £temporary3733
168: £temporary3732 -> £temporary3734 = *£temporary3734
169: parameter £temporary3732 -> £temporary3734, offset 8
170: call function noellipse-noellipse strcpy
171: post call
172: goto 382
173: call header
174: parameter add, offset 6
175: £temporary3736 -> tp = *tp, offset 12
176: £temporary3738 = £temporary3736 -> tp * 2
177: £temporary3739 = longDayList + £temporary3738
178: £temporary3737 -> £temporary3739 = *£temporary3739
179: parameter £temporary3737 -> £temporary3739, offset 8
180: call function noellipse-noellipse strcpy
181: post call
182: goto 382
183: call header
184: parameter add, offset 6
185: £temporary3741 -> tp = *tp, offset 8
186: £temporary3743 = £temporary3741 -> tp * 2
187: £temporary3744 = shortMonthList + £temporary3743
188: £temporary3742 -> £temporary3744 = *£temporary3744
189: parameter £temporary3742 -> £temporary3744, offset 8
190: call function noellipse-noellipse strcpy
191: post call
192: goto 382
193: call header
194: parameter add, offset 6
195: £temporary3746 -> tp = *tp, offset 8
196: £temporary3748 = £temporary3746 -> tp * 2
197: £temporary3749 = longMonthList + £temporary3748
198: £temporary3747 -> £temporary3749 = *£temporary3749
199: parameter £temporary3747 -> £temporary3749, offset 8
200: call function noellipse-noellipse strcpy
201: post call
202: goto 382
203: call header
204: parameter add, offset 6
205: parameter string_2504d2D2502d2D2502d202502d3A2502d3A2502d#, offset 8
206: £temporary3751 -> tp = *tp, offset 10
207: £temporary3752 = 1900 + £temporary3751 -> tp
208: parameter £temporary3752, offset 10
209: £temporary3753 -> tp = *tp, offset 8
210: £temporary3754 = £temporary3753 -> tp + 1
211: parameter £temporary3754, offset 12
212: £temporary3755 -> tp = *tp, offset 6
213: parameter £temporary3755 -> tp, offset 14
214: £temporary3756 -> tp = *tp, offset 4
215: parameter £temporary3756 -> tp, offset 16
216: £temporary3757 -> tp = *tp, offset 2
217: parameter £temporary3757 -> tp, offset 18
218: £temporary3758 -> tp = *tp
219: parameter £temporary3758 -> tp, offset 20
220: call function noellipse-ellipse sprintf, extra 0
221: post call
222: goto 382
223: call header
224: parameter add, offset 6
225: parameter string_2502d#, offset 8
226: £temporary3760 -> tp = *tp, offset 6
227: parameter £temporary3760 -> tp, offset 10
228: call function noellipse-ellipse sprintf, extra 0
229: post call
230: goto 382
231: call header
232: parameter add, offset 6
233: parameter string_2502d#, offset 8
234: £temporary3762 -> tp = *tp, offset 4
235: parameter £temporary3762 -> tp, offset 10
236: call function noellipse-ellipse sprintf, extra 0
237: post call
238: goto 382
239: call header
240: parameter add, offset 6
241: parameter string_2502d#, offset 8
242: £temporary3764 -> tp = *tp, offset 4
243: £temporary3765 = £temporary3764 -> tp % 12
244: parameter £temporary3765, offset 10
245: call function noellipse-ellipse sprintf, extra 0
246: post call
247: goto 382
248: call header
249: parameter add, offset 6
250: parameter string_2503d#, offset 8
251: £temporary3767 -> tp = *tp, offset 14
252: parameter £temporary3767 -> tp, offset 10
253: call function noellipse-ellipse sprintf, extra 0
254: post call
255: goto 382
256: call header
257: parameter add, offset 6
258: parameter string_2502d#, offset 8
259: £temporary3769 -> tp = *tp, offset 8
260: £temporary3770 = £temporary3769 -> tp + 1
261: parameter £temporary3770, offset 10
262: call function noellipse-ellipse sprintf, extra 0
263: post call
264: goto 382
265: call header
266: parameter add, offset 6
267: parameter string_2502d#, offset 8
268: £temporary3772 -> tp = *tp, offset 2
269: parameter £temporary3772 -> tp, offset 10
270: call function noellipse-ellipse sprintf, extra 0
271: post call
272: goto 382
273: call header
274: parameter add, offset 6
275: parameter string_25s#, offset 8
276: £temporary3774 -> tp = *tp, offset 4
277: if £temporary3774 -> tp < 12 goto 279
278: goto 282
279: empty
280: £temporary3779 = string_AM#
281: goto 284
282: empty
283: £temporary3779 = string_PM#
284: empty
285: parameter £temporary3779, offset 10
286: call function noellipse-ellipse sprintf, extra 0
287: post call
288: goto 382
289: call header
290: parameter add, offset 6
291: parameter string_2502d#, offset 8
292: £temporary3781 -> tp = *tp
293: parameter £temporary3781 -> tp, offset 10
294: call function noellipse-ellipse sprintf, extra 0
295: post call
296: goto 382
297: call header
298: parameter add, offset 6
299: parameter string_2502d#, offset 8
300: parameter yearDaySunday, offset 10
301: call function noellipse-ellipse sprintf, extra 0
302: post call
303: goto 382
304: call header
305: parameter add, offset 6
306: parameter string_2502d#, offset 8
307: £temporary3784 -> tp = *tp, offset 12
308: parameter £temporary3784 -> tp, offset 10
309: call function noellipse-ellipse sprintf, extra 0
310: post call
311: goto 382
312: call header
313: parameter add, offset 6
314: parameter string_2502d#, offset 8
315: parameter yearDayMonday, offset 10
316: call function noellipse-ellipse sprintf, extra 0
317: post call
318: goto 382
319: call header
320: parameter add, offset 6
321: parameter string_2504d2D2502d2D2502d#, offset 8
322: £temporary3787 -> tp = *tp, offset 10
323: £temporary3788 = 1900 + £temporary3787 -> tp
324: parameter £temporary3788, offset 10
325: £temporary3789 -> tp = *tp, offset 8
326: £temporary3790 = £temporary3789 -> tp + 1
327: parameter £temporary3790, offset 12
328: £temporary3791 -> tp = *tp, offset 6
329: parameter £temporary3791 -> tp, offset 14
330: call function noellipse-ellipse sprintf, extra 0
331: post call
332: goto 382
333: call header
334: parameter add, offset 6
335: parameter string_2502d3A2502d3A2502d#, offset 8
336: £temporary3793 -> tp = *tp, offset 4
337: parameter £temporary3793 -> tp, offset 10
338: £temporary3794 -> tp = *tp, offset 2
339: parameter £temporary3794 -> tp, offset 12
340: £temporary3795 -> tp = *tp
341: parameter £temporary3795 -> tp, offset 14
342: call function noellipse-ellipse sprintf, extra 0
343: post call
344: goto 382
345: call header
346: parameter add, offset 6
347: parameter string_2502d#, offset 8
348: £temporary3797 -> tp = *tp, offset 10
349: £temporary3798 = £temporary3797 -> tp % 100
350: parameter £temporary3798, offset 10
351: call function noellipse-ellipse sprintf, extra 0
352: post call
353: goto 382
354: call header
355: parameter add, offset 6
356: parameter string_2504d#, offset 8
357: £temporary3800 -> tp = *tp, offset 10
358: £temporary3801 = 1900 + £temporary3800 -> tp
359: parameter £temporary3801, offset 10
360: call function noellipse-ellipse sprintf, extra 0
361: post call
362: goto 382
363: call header
364: parameter add, offset 6
365: parameter string_#, offset 8
366: call function noellipse-noellipse strcpy
367: post call
368: goto 382
369: call header
370: parameter add, offset 6
371: parameter string_25#, offset 8
372: call function noellipse-noellipse strcpy
373: post call
374: goto 382
375: £temporary3805 -> add = *add
376: £temporary3807 = fmt + index
377: £temporary3806 -> £temporary3807 = *£temporary3807
378: £temporary3805 -> add = £temporary3806 -> £temporary3807
379: £temporary3808 -> add = *add, offset 1
380: £temporary3808 -> add = 0
381: goto 382
382: call header
383: parameter s, offset 6
384: call function noellipse-noellipse strlen
385: post call
386: £temporary3809 = return_value
387: call header
388: parameter add, offset 6
389: call function noellipse-noellipse strlen
390: post call
391: £temporary3810 = return_value
392: £temporary3811 = £temporary3809 + £temporary3810
393: if £temporary3811 < smax goto 396
394: goto 402
395: check track map float stack
396: call header
397: parameter s, offset 6
398: parameter add, offset 8
399: call function noellipse-noellipse strcat
400: post call
401: goto 404
402: goto 407
403: goto 404
404: empty
405: index = index + 1
406: goto 123
407: call header
408: parameter s, offset 6
409: call function noellipse-noellipse strlen
410: post call
411: £temporary3814 = return_value
412: return_value = £temporary3814
413: return
414: empty
415: return
416: function end strftime
0: index = 0
1: empty
2: £temporary3892 = source + index
3: £temporary3891 -> £temporary3892 = *£temporary3892
4: if £temporary3891 -> £temporary3892 != 0 goto 7
5: goto 16
6: check track map float stack
7: empty
8: £temporary3896 = target + index
9: £temporary3895 -> £temporary3896 = *£temporary3896
10: £temporary3898 = source + index
11: £temporary3897 -> £temporary3898 = *£temporary3898
12: £temporary3895 -> £temporary3896 = £temporary3897 -> £temporary3898
13: empty
14: index = index + 1
15: goto 1
16: £temporary3900 = target + index
17: £temporary3899 -> £temporary3900 = *£temporary3900
18: £temporary3899 -> £temporary3900 = 0
19: return_value = target
20: return
21: empty
22: return
23: function end strcpy
0: index = 0
1: empty
2: if index < size goto 4
3: goto 18
4: £temporary3903 = source + index
5: £temporary3902 -> £temporary3903 = *£temporary3903
6: if £temporary3902 -> £temporary3903 != 0 goto 9
7: goto 18
8: check track map float stack
9: empty
10: £temporary3908 = target + index
11: £temporary3907 -> £temporary3908 = *£temporary3908
12: £temporary3910 = source + index
13: £temporary3909 -> £temporary3910 = *£temporary3910
14: £temporary3907 -> £temporary3908 = £temporary3909 -> £temporary3910
15: empty
16: index = index + 1
17: goto 1
18: empty
19: if index < size goto 22
20: goto 29
21: check track map float stack
22: empty
23: £temporary3914 = target + index
24: £temporary3913 -> £temporary3914 = *£temporary3914
25: £temporary3913 -> £temporary3914 = 0
26: empty
27: index = index + 1
28: goto 18
29: return_value = target
30: return
31: empty
32: return
33: function end strncpy
0: call header
1: parameter target, offset 6
2: call function noellipse-noellipse strlen
3: post call
4: £temporary3915 = return_value
5: targetLength = £temporary3915
6: index = 0
7: empty
8: £temporary3917 = source + index
9: £temporary3916 -> £temporary3917 = *£temporary3917
10: if £temporary3916 -> £temporary3917 != 0 goto 13
11: goto 23
12: check track map float stack
13: empty
14: £temporary3920 = targetLength + index
15: £temporary3922 = target + £temporary3920
16: £temporary3921 -> £temporary3922 = *£temporary3922
17: £temporary3924 = source + index
18: £temporary3923 -> £temporary3924 = *£temporary3924
19: £temporary3921 -> £temporary3922 = £temporary3923 -> £temporary3924
20: empty
21: index = index + 1
22: goto 7
23: £temporary3925 = targetLength + index
24: £temporary3927 = target + £temporary3925
25: £temporary3926 -> £temporary3927 = *£temporary3927
26: £temporary3926 -> £temporary3927 = 0
27: return_value = target
28: return
29: empty
30: return
31: function end strcat
0: call header
1: parameter target, offset 6
2: call function noellipse-noellipse strlen
3: post call
4: £temporary3929 = return_value
5: targetLength = £temporary3929
6: index = 0
7: empty
8: £temporary3930 = size - 1
9: if index < £temporary3930 goto 11
10: goto 26
11: £temporary3933 = source + index
12: £temporary3932 -> £temporary3933 = *£temporary3933
13: if £temporary3932 -> £temporary3933 != 0 goto 16
14: goto 26
15: check track map float stack
16: empty
17: £temporary3937 = targetLength + index
18: £temporary3939 = target + £temporary3937
19: £temporary3938 -> £temporary3939 = *£temporary3939
20: £temporary3941 = source + index
21: £temporary3940 -> £temporary3941 = *£temporary3941
22: £temporary3938 -> £temporary3939 = £temporary3940 -> £temporary3941
23: empty
24: index = index + 1
25: goto 7
26: £temporary3942 = targetLength + size
27: £temporary3943 = £temporary3942 - 1
28: £temporary3945 = target + £temporary3943
29: £temporary3944 -> £temporary3945 = *£temporary3945
30: £temporary3944 -> £temporary3945 = 0
31: return_value = target
32: return
33: empty
34: return
35: function end strncat
0: index = 0
1: empty
2: goto 4
3: check track map float stack
4: empty
5: £temporary3949 = left + index
6: £temporary3948 -> £temporary3949 = *£temporary3949
7: if £temporary3948 -> £temporary3949 == 0 goto 9
8: goto 17
9: £temporary3952 = right + index
10: £temporary3951 -> £temporary3952 = *£temporary3952
11: if £temporary3951 -> £temporary3952 == 0 goto 14
12: goto 17
13: check track map float stack
14: return_value = 0
15: return
16: goto 57
17: £temporary3956 = left + index
18: £temporary3955 -> £temporary3956 = *£temporary3956
19: if £temporary3955 -> £temporary3956 == 0 goto 22
20: goto 25
21: check track map float stack
22: return_value = -1
23: return
24: goto 57
25: £temporary3959 = right + index
26: £temporary3958 -> £temporary3959 = *£temporary3959
27: if £temporary3958 -> £temporary3959 == 0 goto 30
28: goto 33
29: check track map float stack
30: return_value = 1
31: return
32: goto 57
33: £temporary3962 = left + index
34: £temporary3961 -> £temporary3962 = *£temporary3962
35: £temporary3964 = right + index
36: £temporary3963 -> £temporary3964 = *£temporary3964
37: if £temporary3961 -> £temporary3962 < £temporary3963 -> £temporary3964 goto 40
38: goto 43
39: check track map float stack
40: return_value = -1
41: return
42: goto 57
43: £temporary3967 = left + index
44: £temporary3966 -> £temporary3967 = *£temporary3967
45: £temporary3969 = right + index
46: £temporary3968 -> £temporary3969 = *£temporary3969
47: if £temporary3966 -> £temporary3967 > £temporary3968 -> £temporary3969 goto 50
48: goto 57
49: check track map float stack
50: return_value = 1
51: return
52: goto 57
53: goto 57
54: goto 57
55: goto 57
56: goto 57
57: empty
58: index = index + 1
59: goto 1
60: empty
61: return
62: function end strcmp
0: index = 0
1: empty
2: if index < size goto 5
3: goto 61
4: check track map float stack
5: empty
6: £temporary3975 = left + index
7: £temporary3974 -> £temporary3975 = *£temporary3975
8: if £temporary3974 -> £temporary3975 == 0 goto 10
9: goto 18
10: £temporary3978 = right + index
11: £temporary3977 -> £temporary3978 = *£temporary3978
12: if £temporary3977 -> £temporary3978 == 0 goto 15
13: goto 18
14: check track map float stack
15: return_value = 0
16: return
17: goto 58
18: £temporary3982 = left + index
19: £temporary3981 -> £temporary3982 = *£temporary3982
20: if £temporary3981 -> £temporary3982 == 0 goto 23
21: goto 26
22: check track map float stack
23: return_value = -1
24: return
25: goto 58
26: £temporary3985 = right + index
27: £temporary3984 -> £temporary3985 = *£temporary3985
28: if £temporary3984 -> £temporary3985 == 0 goto 31
29: goto 34
30: check track map float stack
31: return_value = 1
32: return
33: goto 58
34: £temporary3988 = left + index
35: £temporary3987 -> £temporary3988 = *£temporary3988
36: £temporary3990 = right + index
37: £temporary3989 -> £temporary3990 = *£temporary3990
38: if £temporary3987 -> £temporary3988 < £temporary3989 -> £temporary3990 goto 41
39: goto 44
40: check track map float stack
41: return_value = -1
42: return
43: goto 58
44: £temporary3993 = left + index
45: £temporary3992 -> £temporary3993 = *£temporary3993
46: £temporary3995 = right + index
47: £temporary3994 -> £temporary3995 = *£temporary3995
48: if £temporary3992 -> £temporary3993 > £temporary3994 -> £temporary3995 goto 51
49: goto 58
50: check track map float stack
51: return_value = 1
52: return
53: goto 58
54: goto 58
55: goto 58
56: goto 58
57: goto 58
58: empty
59: index = index + 1
60: goto 1
61: return_value = 0
62: return
63: empty
64: return
65: function end strncmp
0: £temporary3997 = int_to_int i (Signed_Int -> Signed_Char)
1: c = £temporary3997
2: index = 0
3: empty
4: £temporary3999 = text + index
5: £temporary3998 -> £temporary3999 = *£temporary3999
6: if £temporary3998 -> £temporary3999 != 0 goto 9
7: goto 24
8: check track map float stack
9: empty
10: £temporary4003 = text + index
11: £temporary4002 -> £temporary4003 = *£temporary4003
12: if £temporary4002 -> £temporary4003 == c goto 15
13: goto 21
14: check track map float stack
15: £temporary4006 = text + index
16: £temporary4005 -> £temporary4006 = *£temporary4006
17: £temporary4007 = &£temporary4005 -> £temporary4006
18: return_value = £temporary4007
19: return
20: goto 21
21: empty
22: index = index + 1
23: goto 3
24: return_value = 0
25: return
26: empty
27: return
28: function end strchr
0: result = 0
1: £temporary4008 = int_to_int i (Signed_Int -> Signed_Char)
2: c = £temporary4008
3: index = 0
4: empty
5: £temporary4010 = text + index
6: £temporary4009 -> £temporary4010 = *£temporary4010
7: if £temporary4009 -> £temporary4010 != 0 goto 10
8: goto 24
9: check track map float stack
10: empty
11: £temporary4014 = text + index
12: £temporary4013 -> £temporary4014 = *£temporary4014
13: if £temporary4013 -> £temporary4014 == c goto 16
14: goto 21
15: check track map float stack
16: £temporary4017 = text + index
17: £temporary4016 -> £temporary4017 = *£temporary4017
18: £temporary4018 = &£temporary4016 -> £temporary4017
19: result = £temporary4018
20: goto 21
21: empty
22: index = index + 1
23: goto 4
24: return_value = result
25: return
26: empty
27: return
28: function end strrchr
0: index = 0
1: empty
2: £temporary4020 = mainString + index
3: £temporary4019 -> £temporary4020 = *£temporary4020
4: if £temporary4019 -> £temporary4020 != 0 goto 7
5: goto 26
6: check track map float stack
7: empty
8: call header
9: parameter charSet, offset 6
10: £temporary4024 = mainString + index
11: £temporary4023 -> £temporary4024 = *£temporary4024
12: £temporary4025 = int_to_int £temporary4023 -> £temporary4024 (Signed_Char -> Signed_Int)
13: parameter £temporary4025, offset 8
14: call function noellipse-noellipse strchr
15: post call
16: £temporary4026 = return_value
17: if £temporary4026 == 0 goto 20
18: goto 23
19: check track map float stack
20: return_value = index
21: return
22: goto 23
23: empty
24: index = index + 1
25: goto 1
26: return_value = -1
27: return
28: empty
29: return
30: function end strspn
0: index = 0
1: empty
2: £temporary4031 = mainString + index
3: £temporary4030 -> £temporary4031 = *£temporary4031
4: if £temporary4030 -> £temporary4031 != 0 goto 7
5: goto 26
6: check track map float stack
7: empty
8: call header
9: parameter charSet, offset 6
10: £temporary4035 = mainString + index
11: £temporary4034 -> £temporary4035 = *£temporary4035
12: £temporary4036 = int_to_int £temporary4034 -> £temporary4035 (Signed_Char -> Signed_Int)
13: parameter £temporary4036, offset 8
14: call function noellipse-noellipse strchr
15: post call
16: £temporary4037 = return_value
17: if £temporary4037 != 0 goto 20
18: goto 23
19: check track map float stack
20: return_value = index
21: return
22: goto 23
23: empty
24: index = index + 1
25: goto 1
26: return_value = -1
27: return
28: empty
29: return
30: function end strcspn
0: index = 0
1: empty
2: £temporary4042 = mainString + index
3: £temporary4041 -> £temporary4042 = *£temporary4042
4: if £temporary4041 -> £temporary4042 != 0 goto 7
5: goto 29
6: check track map float stack
7: empty
8: call header
9: parameter charSet, offset 6
10: £temporary4046 = mainString + index
11: £temporary4045 -> £temporary4046 = *£temporary4046
12: £temporary4047 = int_to_int £temporary4045 -> £temporary4046 (Signed_Char -> Signed_Int)
13: parameter £temporary4047, offset 8
14: call function noellipse-noellipse strchr
15: post call
16: £temporary4048 = return_value
17: if £temporary4048 != 0 goto 20
18: goto 26
19: check track map float stack
20: £temporary4051 = mainString + index
21: £temporary4050 -> £temporary4051 = *£temporary4051
22: £temporary4052 = &£temporary4050 -> £temporary4051
23: return_value = £temporary4052
24: return
25: goto 26
26: empty
27: index = index + 1
28: goto 1
29: return_value = 0
30: return
31: empty
32: return
33: function end strpbrk
0: index = 0
1: empty
2: £temporary4056 = mainString + index
3: £temporary4055 -> £temporary4056 = *£temporary4056
4: if £temporary4055 -> £temporary4056 != 0 goto 7
5: goto 27
6: check track map float stack
7: empty
8: call header
9: £temporary4059 = mainString + index
10: parameter £temporary4059, offset 6
11: parameter subString, offset 8
12: call function noellipse-noellipse strcmp
13: post call
14: £temporary4060 = return_value
15: if £temporary4060 == 0 goto 18
16: goto 24
17: check track map float stack
18: £temporary4063 = mainString + index
19: £temporary4062 -> £temporary4063 = *£temporary4063
20: £temporary4064 = &£temporary4062 -> £temporary4063
21: return_value = £temporary4064
22: return
23: goto 24
24: empty
25: index = index + 1
26: goto 1
27: return_value = 0
28: return
29: empty
30: return
31: function end strstr
0: index = 0
1: empty
2: £temporary4068 = string + index
3: £temporary4067 -> £temporary4068 = *£temporary4068
4: if £temporary4067 -> £temporary4068 != 0 goto 7
5: goto 11
6: check track map float stack
7: empty
8: empty
9: index = index + 1
10: goto 1
11: return_value = index
12: return
13: empty
14: return
15: function end strlen
0: call header
1: call function noellipse-noellipse localeconv
2: post call
3: £temporary4071 = return_value
4: localeConvPtr = £temporary4071
5: if localeConvPtr != 0 goto 7
6: goto 11
7: empty
8: £temporary4073 -> localeConvPtr = *localeConvPtr, offset 16
9: £temporary4077 = £temporary4073 -> localeConvPtr
10: goto 13
11: empty
12: £temporary4077 = 0
13: empty
14: messageList = £temporary4077
15: if messageList != 0 goto 17
16: goto 20
17: empty
18: £temporary4082 = messageList
19: goto 22
20: empty
21: £temporary4082 = enMessageList
22: empty
23: messageList = £temporary4082
24: £temporary4084 = errno * 2
25: £temporary4085 = messageList + £temporary4084
26: £temporary4083 -> £temporary4085 = *£temporary4085
27: return_value = £temporary4083 -> £temporary4085
28: return
29: empty
30: return
31: function end strerror
0: if string != 0 goto 3
1: goto 51
2: check track map float stack
3: £temporary4087 -> string = *string
4: if £temporary4087 -> string == 0 goto 7
5: goto 10
6: check track map float stack
7: return_value = 0
8: return
9: goto 10
10: index = 0
11: empty
12: £temporary4090 = string + index
13: £temporary4089 -> £temporary4090 = *£temporary4090
14: if £temporary4089 -> £temporary4090 != 0 goto 17
15: goto 44
16: check track map float stack
17: empty
18: call header
19: parameter charSet, offset 6
20: £temporary4094 = string + index
21: £temporary4093 -> £temporary4094 = *£temporary4094
22: £temporary4095 = int_to_int £temporary4093 -> £temporary4094 (Signed_Char -> Signed_Int)
23: parameter £temporary4095, offset 8
24: call function noellipse-noellipse strchr
25: post call
26: £temporary4096 = return_value
27: if £temporary4096 != 0 goto 30
28: goto 41
29: check track map float stack
30: £temporary4099 = string + index
31: £temporary4098 -> £temporary4099 = *£temporary4099
32: £temporary4098 -> £temporary4099 = 0
33: £temporary4100 = index + 1
34: £temporary4102 = string + £temporary4100
35: £temporary4101 -> £temporary4102 = *£temporary4102
36: £temporary4103 = &£temporary4101 -> £temporary4102
37: token = £temporary4103
38: return_value = string
39: return
40: goto 41
41: empty
42: index = index + 1
43: goto 11
44: £temporary4105 = string + index
45: £temporary4104 -> £temporary4105 = *£temporary4105
46: £temporary4106 = &£temporary4104 -> £temporary4105
47: token = £temporary4106
48: return_value = string
49: return
50: goto 107
51: if token == 0 goto 54
52: goto 57
53: check track map float stack
54: return_value = 0
55: return
56: goto 107
57: if (token,0) == 0 goto 60
58: goto 63
59: check track map float stack
60: return_value = 0
61: return
62: goto 63
63: index = 0
64: empty
65: £temporary4111 = token + index
66: £temporary4110 -> £temporary4111 = *£temporary4111
67: if £temporary4110 -> £temporary4111 != 0 goto 70
68: goto 98
69: check track map float stack
70: empty
71: call header
72: parameter charSet, offset 6
73: £temporary4115 = token + index
74: £temporary4114 -> £temporary4115 = *£temporary4115
75: £temporary4116 = int_to_int £temporary4114 -> £temporary4115 (Signed_Char -> Signed_Int)
76: parameter £temporary4116, offset 8
77: call function noellipse-noellipse strchr
78: post call
79: £temporary4117 = return_value
80: if £temporary4117 != 0 goto 83
81: goto 95
82: check track map float stack
83: tokenStart2 = token
84: £temporary4120 = token + index
85: £temporary4119 -> £temporary4120 = *£temporary4120
86: £temporary4119 -> £temporary4120 = 0
87: £temporary4121 = index + 1
88: £temporary4123 = token + £temporary4121
89: £temporary4122 -> £temporary4123 = *£temporary4123
90: £temporary4124 = &£temporary4122 -> £temporary4123
91: token = £temporary4124
92: return_value = tokenStart2
93: return
94: goto 95
95: empty
96: index = index + 1
97: goto 64
98: tokenStart = token
99: £temporary4126 = token + index
100: £temporary4125 -> £temporary4126 = *£temporary4126
101: £temporary4127 = &£temporary4125 -> £temporary4126
102: token = £temporary4127
103: return_value = tokenStart
104: return
105: goto 107
106: goto 107
107: empty
108: return
109: function end strtok
0: £temporary4132 = int_to_int target (Pointer -> Pointer)
1: charTarget = £temporary4132
2: £temporary4133 = int_to_int source (Pointer -> Pointer)
3: charSource = £temporary4133
4: index = 0
5: empty
6: if index < size goto 9
7: goto 18
8: check track map float stack
9: empty
10: £temporary4137 = charTarget + index
11: £temporary4136 -> £temporary4137 = *£temporary4137
12: £temporary4139 = charSource + index
13: £temporary4138 -> £temporary4139 = *£temporary4139
14: £temporary4136 -> £temporary4137 = £temporary4138 -> £temporary4139
15: empty
16: index = index + 1
17: goto 5
18: £temporary4140 = int_to_int target (Pointer -> Pointer)
19: return_value = £temporary4140
20: return
21: empty
22: return
23: function end memcpy
0: £temporary4141 = int_to_int target (Pointer -> Pointer)
1: charTarget = £temporary4141
2: £temporary4142 = int_to_int source (Pointer -> Pointer)
3: charSource = £temporary4142
4: if source < target goto 7
5: goto 23
6: check track map float stack
7: £temporary4144 = size - 1
8: index = £temporary4144
9: empty
10: if index >= 0 goto 13
11: goto 38
12: check track map float stack
13: empty
14: £temporary4148 = charTarget + index
15: £temporary4147 -> £temporary4148 = *£temporary4148
16: £temporary4150 = charSource + index
17: £temporary4149 -> £temporary4150 = *£temporary4150
18: £temporary4147 -> £temporary4148 = £temporary4149 -> £temporary4150
19: empty
20: index = index - 1
21: goto 9
22: goto 38
23: index = 0
24: empty
25: if index < size goto 28
26: goto 38
27: check track map float stack
28: empty
29: £temporary4154 = charTarget + index
30: £temporary4153 -> £temporary4154 = *£temporary4154
31: £temporary4156 = charSource + index
32: £temporary4155 -> £temporary4156 = *£temporary4156
33: £temporary4153 -> £temporary4154 = £temporary4155 -> £temporary4156
34: empty
35: index = index + 1
36: goto 24
37: goto 38
38: £temporary4157 = int_to_int target (Pointer -> Pointer)
39: return_value = £temporary4157
40: return
41: empty
42: return
43: function end memmove
0: £temporary4158 = int_to_int left (Pointer -> Pointer)
1: charLeft = £temporary4158
2: £temporary4159 = int_to_int right (Pointer -> Pointer)
3: charRight = £temporary4159
4: index = 0
5: empty
6: if index < size goto 9
7: goto 34
8: check track map float stack
9: empty
10: £temporary4163 = charLeft + index
11: £temporary4162 -> £temporary4163 = *£temporary4163
12: £temporary4165 = charRight + index
13: £temporary4164 -> £temporary4165 = *£temporary4165
14: if £temporary4162 -> £temporary4163 < £temporary4164 -> £temporary4165 goto 17
15: goto 20
16: check track map float stack
17: return_value = -1
18: return
19: goto 31
20: £temporary4168 = charLeft + index
21: £temporary4167 -> £temporary4168 = *£temporary4168
22: £temporary4170 = charRight + index
23: £temporary4169 -> £temporary4170 = *£temporary4170
24: if £temporary4167 -> £temporary4168 > £temporary4169 -> £temporary4170 goto 27
25: goto 31
26: check track map float stack
27: return_value = 1
28: return
29: goto 31
30: goto 31
31: empty
32: index = index + 1
33: goto 5
34: return_value = 0
35: return
36: empty
37: return
38: function end memcmp
0: £temporary4172 = int_to_int block (Pointer -> Pointer)
1: charBlock = £temporary4172
2: £temporary4173 = int_to_int i (Signed_Int -> Signed_Char)
3: c = £temporary4173
4: index = 0
5: empty
6: if index < size goto 9
7: goto 25
8: check track map float stack
9: empty
10: £temporary4177 = charBlock + index
11: £temporary4176 -> £temporary4177 = *£temporary4177
12: if £temporary4176 -> £temporary4177 == c goto 15
13: goto 22
14: check track map float stack
15: £temporary4180 = charBlock + index
16: £temporary4179 -> £temporary4180 = *£temporary4180
17: £temporary4181 = &£temporary4179 -> £temporary4180
18: £temporary4182 = int_to_int £temporary4181 (Pointer -> Pointer)
19: return_value = £temporary4182
20: return
21: goto 22
22: empty
23: index = index + 1
24: goto 5
25: return_value = 0
26: return
27: empty
28: return
29: function end memchr
0: £temporary4183 = int_to_int block (Pointer -> Pointer)
1: charBlock = £temporary4183
2: £temporary4184 = int_to_int i (Signed_Int -> Signed_Char)
3: c = £temporary4184
4: index = 0
5: empty
6: if index < size goto 9
7: goto 16
8: check track map float stack
9: empty
10: £temporary4188 = charBlock + index
11: £temporary4187 -> £temporary4188 = *£temporary4188
12: £temporary4187 -> £temporary4188 = c
13: empty
14: index = index + 1
15: goto 5
16: return_value = block
17: return
18: empty
19: return
20: function end memset
0: call header
1: parameter string_3C258i3E203C252B8i3E203C25208i3E203C252D8i3E203C252B2D8i3E203C252D2B8i3E203C25202D8i3E203C252D208i3E0A#, offset 6
2: parameter 123, offset 8
3: parameter 123, offset 10
4: parameter 123, offset 12
5: parameter 123, offset 14
6: parameter 123, offset 16
7: parameter 123, offset 18
8: parameter 123, offset 20
9: parameter 123, offset 22
10: call function noellipse-ellipse printf, extra 0
11: post call
12: call header
13: parameter string_3C258i3E203C252B8i3E203C25208i3E203C252D8i3E203C252B2D8i3E203C252D2B8i3E203C25202D8i3E203C252D208i3E0A#, offset 6
14: parameter -123, offset 8
15: parameter -123, offset 10
16: parameter -123, offset 12
17: parameter -123, offset 14
18: parameter -123, offset 16
19: parameter -123, offset 18
20: parameter -123, offset 20
21: parameter -123, offset 22
22: call function noellipse-ellipse printf, extra 0
23: post call
24: call header
25: parameter string_3C2508i3E203C252B08i3E203C252008i3E203C250208i3E0A#, offset 6
26: parameter 123, offset 8
27: parameter 123, offset 10
28: parameter 123, offset 12
29: parameter 123, offset 14
30: call function noellipse-ellipse printf, extra 0
31: post call
32: call header
33: parameter string_3C2508i3E203C252B08i3E203C252008i3E203C250208i3E0A#, offset 6
34: parameter -123, offset 8
35: parameter -123, offset 10
36: parameter -123, offset 12
37: parameter -123, offset 14
38: call function noellipse-ellipse printf, extra 0
39: post call
40: call header
41: parameter string_3C25122E3f3E203C252B122E3f3E203C2520122E3f3E203C252D122E3f3E203C252B2D122E3f3E203C252D2B122E3f3E203C25202D122E3f3E203C252D20122E3f3E0A#, offset 6
42: push float 123.456
43: parameter 123.456, offset 8
44: push float 123.456
45: parameter 123.456, offset 16
46: push float 123.456
47: parameter 123.456, offset 24
48: push float 123.456
49: parameter 123.456, offset 32
50: push float 123.456
51: parameter 123.456, offset 40
52: push float 123.456
53: parameter 123.456, offset 48
54: push float 123.456
55: parameter 123.456, offset 56
56: push float 123.456
57: parameter 123.456, offset 64
58: call function noellipse-ellipse printf, extra 0
59: post call
60: call header
61: parameter string_3C25122E3f3E203C252B122E3f3E203C2520122E3f3E203C252D122E3f3E203C252B2D122E3f3E203C252D2B122E3f3E203C25202D122E3f3E203C252D20122E3f3E0A#, offset 6
62: push float -123.456
63: parameter -123.456, offset 8
64: push float -123.456
65: parameter -123.456, offset 16
66: push float -123.456
67: parameter -123.456, offset 24
68: push float -123.456
69: parameter -123.456, offset 32
70: push float -123.456
71: parameter -123.456, offset 40
72: push float -123.456
73: parameter -123.456, offset 48
74: push float -123.456
75: parameter -123.456, offset 56
76: push float -123.456
77: parameter -123.456, offset 64
78: call function noellipse-ellipse printf, extra 0
79: post call
80: call header
81: parameter string_3C250122E3f3E203C252B0122E3f3E203C25200122E3f3E203C25020122E3f3E0A#, offset 6
82: push float 123.456
83: parameter 123.456, offset 8
84: push float 123.456
85: parameter 123.456, offset 16
86: push float 123.456
87: parameter 123.456, offset 24
88: push float 123.456
89: parameter 123.456, offset 32
90: call function noellipse-ellipse printf, extra 0
91: post call
92: call header
93: parameter string_3C250122E3f3E203C252B0122E3f3E203C25200122E3f3E203C25020122E3f3E0A#, offset 6
94: push float -123.456
95: parameter -123.456, offset 8
96: push float -123.456
97: parameter -123.456, offset 16
98: push float -123.456
99: parameter -123.456, offset 24
100: push float -123.456
101: parameter -123.456, offset 32
102: call function noellipse-ellipse printf, extra 0
103: post call
104: empty
105: return
106: function end print_test
0: call header
1: parameter string_ascii2025i0A#, offset 6
2: £temporary4253 = int_to_int c (Signed_Char -> Signed_Int)
3: parameter £temporary4253, offset 8
4: call function noellipse-ellipse printf, extra 0
5: post call
6: call header
7: parameter string_islower282725c2729203D2025s0A#, offset 6
8: £temporary4255 = int_to_int c (Signed_Char -> Signed_Int)
9: parameter £temporary4255, offset 8
10: call header
11: £temporary4256 = int_to_int c (Signed_Char -> Signed_Int)
12: parameter £temporary4256, offset 16
13: call function noellipse-noellipse islower
14: post call
15: £temporary4257 = return_value
16: if £temporary4257 != 0 goto 18
17: goto 21
18: empty
19: £temporary4262 = string_Yes#
20: goto 23
21: empty
22: £temporary4262 = string_No#
23: empty
24: parameter £temporary4262, offset 10
25: call function noellipse-ellipse printf, extra 0
26: post call
27: call header
28: parameter string_isupper282725c2729203D2025s0A#, offset 6
29: £temporary4264 = int_to_int c (Signed_Char -> Signed_Int)
30: parameter £temporary4264, offset 8
31: call header
32: £temporary4265 = int_to_int c (Signed_Char -> Signed_Int)
33: parameter £temporary4265, offset 16
34: call function noellipse-noellipse isupper
35: post call
36: £temporary4266 = return_value
37: if £temporary4266 != 0 goto 39
38: goto 42
39: empty
40: £temporary4271 = string_Yes#
41: goto 44
42: empty
43: £temporary4271 = string_No#
44: empty
45: parameter £temporary4271, offset 10
46: call function noellipse-ellipse printf, extra 0
47: post call
48: call header
49: parameter string_isalpha282725c2729203D2025s0A#, offset 6
50: £temporary4273 = int_to_int c (Signed_Char -> Signed_Int)
51: parameter £temporary4273, offset 8
52: call header
53: £temporary4274 = int_to_int c (Signed_Char -> Signed_Int)
54: parameter £temporary4274, offset 16
55: call function noellipse-noellipse isalpha
56: post call
57: £temporary4275 = return_value
58: if £temporary4275 != 0 goto 60
59: goto 63
60: empty
61: £temporary4280 = string_Yes#
62: goto 65
63: empty
64: £temporary4280 = string_No#
65: empty
66: parameter £temporary4280, offset 10
67: call function noellipse-ellipse printf, extra 0
68: post call
69: call header
70: parameter string_isdigit282725c2729203D2025s0A#, offset 6
71: £temporary4282 = int_to_int c (Signed_Char -> Signed_Int)
72: parameter £temporary4282, offset 8
73: call header
74: £temporary4283 = int_to_int c (Signed_Char -> Signed_Int)
75: parameter £temporary4283, offset 16
76: call function noellipse-noellipse isdigit
77: post call
78: £temporary4284 = return_value
79: if £temporary4284 != 0 goto 81
80: goto 84
81: empty
82: £temporary4289 = string_Yes#
83: goto 86
84: empty
85: £temporary4289 = string_No#
86: empty
87: parameter £temporary4289, offset 10
88: call function noellipse-ellipse printf, extra 0
89: post call
90: call header
91: parameter string_isalnum282725c2729203D2025s0A#, offset 6
92: £temporary4291 = int_to_int c (Signed_Char -> Signed_Int)
93: parameter £temporary4291, offset 8
94: call header
95: £temporary4292 = int_to_int c (Signed_Char -> Signed_Int)
96: parameter £temporary4292, offset 16
97: call function noellipse-noellipse isalnum
98: post call
99: £temporary4293 = return_value
100: if £temporary4293 != 0 goto 102
101: goto 105
102: empty
103: £temporary4298 = string_Yes#
104: goto 107
105: empty
106: £temporary4298 = string_No#
107: empty
108: parameter £temporary4298, offset 10
109: call function noellipse-ellipse printf, extra 0
110: post call
111: call header
112: parameter string_isxdigit282725c2729203D2025s0A#, offset 6
113: £temporary4300 = int_to_int c (Signed_Char -> Signed_Int)
114: parameter £temporary4300, offset 8
115: call header
116: £temporary4301 = int_to_int c (Signed_Char -> Signed_Int)
117: parameter £temporary4301, offset 16
118: call function noellipse-noellipse isxdigit
119: post call
120: £temporary4302 = return_value
121: if £temporary4302 != 0 goto 123
122: goto 126
123: empty
124: £temporary4307 = string_Yes#
125: goto 128
126: empty
127: £temporary4307 = string_No#
128: empty
129: parameter £temporary4307, offset 10
130: call function noellipse-ellipse printf, extra 0
131: post call
132: call header
133: parameter string_isgraph282725c2729203D2025s0A#, offset 6
134: £temporary4309 = int_to_int c (Signed_Char -> Signed_Int)
135: parameter £temporary4309, offset 8
136: call header
137: £temporary4310 = int_to_int c (Signed_Char -> Signed_Int)
138: parameter £temporary4310, offset 16
139: call function noellipse-noellipse isgraph
140: post call
141: £temporary4311 = return_value
142: if £temporary4311 != 0 goto 144
143: goto 147
144: empty
145: £temporary4316 = string_Yes#
146: goto 149
147: empty
148: £temporary4316 = string_No#
149: empty
150: parameter £temporary4316, offset 10
151: call function noellipse-ellipse printf, extra 0
152: post call
153: call header
154: parameter string_isprint282725c2729203D2025s0A#, offset 6
155: £temporary4318 = int_to_int c (Signed_Char -> Signed_Int)
156: parameter £temporary4318, offset 8
157: call header
158: £temporary4319 = int_to_int c (Signed_Char -> Signed_Int)
159: parameter £temporary4319, offset 16
160: call function noellipse-noellipse isprint
161: post call
162: £temporary4320 = return_value
163: if £temporary4320 != 0 goto 165
164: goto 168
165: empty
166: £temporary4325 = string_Yes#
167: goto 170
168: empty
169: £temporary4325 = string_No#
170: empty
171: parameter £temporary4325, offset 10
172: call function noellipse-ellipse printf, extra 0
173: post call
174: call header
175: parameter string_ispunct282725c2729203D2025s0A#, offset 6
176: £temporary4327 = int_to_int c (Signed_Char -> Signed_Int)
177: parameter £temporary4327, offset 8
178: call header
179: £temporary4328 = int_to_int c (Signed_Char -> Signed_Int)
180: parameter £temporary4328, offset 16
181: call function noellipse-noellipse ispunct
182: post call
183: £temporary4329 = return_value
184: if £temporary4329 != 0 goto 186
185: goto 189
186: empty
187: £temporary4334 = string_Yes#
188: goto 191
189: empty
190: £temporary4334 = string_No#
191: empty
192: parameter £temporary4334, offset 10
193: call function noellipse-ellipse printf, extra 0
194: post call
195: call header
196: parameter string_iscntrl282725c2729203D2025s0A#, offset 6
197: £temporary4336 = int_to_int c (Signed_Char -> Signed_Int)
198: parameter £temporary4336, offset 8
199: call header
200: £temporary4337 = int_to_int c (Signed_Char -> Signed_Int)
201: parameter £temporary4337, offset 16
202: call function noellipse-noellipse iscntrl
203: post call
204: £temporary4338 = return_value
205: if £temporary4338 != 0 goto 207
206: goto 210
207: empty
208: £temporary4343 = string_Yes#
209: goto 212
210: empty
211: £temporary4343 = string_No#
212: empty
213: parameter £temporary4343, offset 10
214: call function noellipse-ellipse printf, extra 0
215: post call
216: call header
217: parameter string_isspace282725c2729203D2025s0A#, offset 6
218: £temporary4345 = int_to_int c (Signed_Char -> Signed_Int)
219: parameter £temporary4345, offset 8
220: call header
221: £temporary4346 = int_to_int c (Signed_Char -> Signed_Int)
222: parameter £temporary4346, offset 16
223: call function noellipse-noellipse isspace
224: post call
225: £temporary4347 = return_value
226: if £temporary4347 != 0 goto 228
227: goto 231
228: empty
229: £temporary4352 = string_Yes#
230: goto 233
231: empty
232: £temporary4352 = string_No#
233: empty
234: parameter £temporary4352, offset 10
235: call function noellipse-ellipse printf, extra 0
236: post call
237: call header
238: parameter string_tolower282725c2729203D202725c270A#, offset 6
239: £temporary4354 = int_to_int c (Signed_Char -> Signed_Int)
240: parameter £temporary4354, offset 8
241: call header
242: £temporary4355 = int_to_int c (Signed_Char -> Signed_Int)
243: parameter £temporary4355, offset 16
244: call function noellipse-noellipse tolower
245: post call
246: £temporary4356 = return_value
247: £temporary4357 = int_to_int £temporary4356 (Signed_Int -> Signed_Char)
248: £temporary4358 = int_to_int £temporary4357 (Signed_Char -> Signed_Int)
249: parameter £temporary4358, offset 10
250: call function noellipse-ellipse printf, extra 0
251: post call
252: call header
253: parameter string_toupper282725c2729203D202725c270A0A#, offset 6
254: £temporary4360 = int_to_int c (Signed_Char -> Signed_Int)
255: parameter £temporary4360, offset 8
256: call header
257: £temporary4361 = int_to_int c (Signed_Char -> Signed_Int)
258: parameter £temporary4361, offset 16
259: call function noellipse-noellipse toupper
260: post call
261: £temporary4362 = return_value
262: £temporary4363 = int_to_int £temporary4362 (Signed_Int -> Signed_Char)
263: £temporary4364 = int_to_int £temporary4363 (Signed_Char -> Signed_Int)
264: parameter £temporary4364, offset 10
265: call function noellipse-ellipse printf, extra 0
266: post call
267: empty
268: return
269: function end character_test
0: empty
1: return
2: function end float_test
0: call header
1: parameter string_CHAR_BIT203D2025i0A#, offset 6
2: parameter 8, offset 8
3: call function noellipse-ellipse printf, extra 0
4: post call
5: call header
6: parameter string_CHAR_MIN203D2025i0A0A#, offset 6
7: parameter -128, offset 8
8: call function noellipse-ellipse printf, extra 0
9: post call
10: call header
11: parameter string_CHAR_MAX203D2025i0A#, offset 6
12: parameter 127, offset 8
13: call function noellipse-ellipse printf, extra 0
14: post call
15: call header
16: parameter string_UCHAR_MAX203D2025u0A0A#, offset 6
17: parameter 255, offset 8
18: call function noellipse-ellipse printf, extra 0
19: post call
20: call header
21: parameter string_SHRT_MIN203D2025i0A#, offset 6
22: parameter -128, offset 8
23: call function noellipse-ellipse printf, extra 0
24: post call
25: call header
26: parameter string_SHRT_MAX203D2025i0A#, offset 6
27: parameter 127, offset 8
28: call function noellipse-ellipse printf, extra 0
29: post call
30: call header
31: parameter string_USHRT_MAX203D2025u0A0A#, offset 6
32: parameter 255, offset 8
33: call function noellipse-ellipse printf, extra 0
34: post call
35: call header
36: parameter string_INT_MIN203D2025i0A#, offset 6
37: parameter -32768, offset 8
38: call function noellipse-ellipse printf, extra 0
39: post call
40: call header
41: parameter string_INT_MAX203D2025i0A#, offset 6
42: parameter 32767, offset 8
43: call function noellipse-ellipse printf, extra 0
44: post call
45: call header
46: parameter string_UINT_MAX203D2025u0A0A#, offset 6
47: parameter 65535, offset 8
48: call function noellipse-ellipse printf, extra 0
49: post call
50: call header
51: parameter string_LONG_MIN203D2025li0A#, offset 6
52: parameter -2147483648, offset 8
53: call function noellipse-ellipse printf, extra 0
54: post call
55: call header
56: parameter string_LONG_MAX203D2025li0A#, offset 6
57: parameter 2147483647, offset 8
58: call function noellipse-ellipse printf, extra 0
59: post call
60: call header
61: parameter string_ULONG_MAX203D2025lu0A#, offset 6
62: parameter 4294967295, offset 8
63: call function noellipse-ellipse printf, extra 0
64: post call
65: call header
66: parameter string_ULONG_MAX203D2025lx0A#, offset 6
67: parameter 4294967295, offset 8
68: call function noellipse-ellipse printf, extra 0
69: post call
70: call header
71: parameter string_ULONG_MAX203D2025lX0A#, offset 6
72: parameter 4294967295, offset 8
73: call function noellipse-ellipse printf, extra 0
74: post call
75: empty
76: return
77: function end limits_test
0: n = 0
1: call header
2: parameter string_Please20write20a20number2028not20620or207293A20#, offset 6
3: call function noellipse-ellipse printf, extra 0
4: post call
5: call header
6: parameter string_25i#, offset 6
7: £temporary4466 = &n
8: parameter £temporary4466, offset 8
9: call function noellipse-ellipse scanf, extra 0
10: post call
11: if n != 6 goto 26
12: goto 14
13: check track map float stack
14: call header
15: parameter stderr, offset 6
16: parameter string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#, offset 8
17: parameter string_n20213D206#, offset 10
18: parameter string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CAssertTest2Ec#, offset 12
19: parameter 10, offset 14
20: call function noellipse-ellipse fprintf, extra 0
21: post call
22: call header
23: call function noellipse-noellipse abort
24: post call
25: goto 26
26: empty
27: call header
28: parameter n, offset 6
29: call function noellipse-noellipse assert_test2
30: post call
31: empty
32: return
33: function end assert_testX
0: if n != 7 goto 15
1: goto 3
2: check track map float stack
3: call header
4: parameter stderr, offset 6
5: parameter string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#, offset 8
6: parameter string_n20213D207#, offset 10
7: parameter string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CAssertTest2Ec#, offset 12
8: parameter 15, offset 14
9: call function noellipse-ellipse fprintf, extra 0
10: post call
11: call header
12: call function noellipse-noellipse abort
13: post call
14: goto 15
15: empty
16: empty
17: return
18: function end assert_test2X
0: s = string_Hello2C20World21#
1: call header
2: parameter string_strlen282225s2229203D2025i0A#, offset 6
3: parameter s, offset 8
4: call header
5: parameter s, offset 16
6: call function noellipse-noellipse strlen
7: post call
8: £temporary4492 = return_value
9: parameter £temporary4492, offset 10
10: call function noellipse-ellipse printf, extra 0
11: post call
12: call header
13: parameter t, offset 6
14: parameter s, offset 8
15: call function noellipse-noellipse strcpy
16: post call
17: call header
18: parameter u, offset 6
19: parameter s, offset 8
20: parameter 5, offset 10
21: call function noellipse-noellipse strncpy
22: post call
23: £temporary4496 -> u = *u, offset 5
24: £temporary4496 -> u = 0
25: call header
26: parameter string_t203D202225s222C20u203D202225s220A#, offset 6
27: parameter t, offset 8
28: parameter u, offset 10
29: call function noellipse-ellipse printf, extra 0
30: post call
31: call header
32: parameter t, offset 6
33: parameter string_abc#, offset 8
34: call function noellipse-noellipse strcat
35: post call
36: call header
37: parameter u, offset 6
38: call function noellipse-noellipse strlen
39: post call
40: £temporary4499 = return_value
41: i = £temporary4499
42: call header
43: parameter u, offset 6
44: parameter string_abc#, offset 8
45: parameter 2, offset 10
46: call function noellipse-noellipse strncat
47: post call
48: £temporary4501 = i + 2
49: £temporary4503 = u + £temporary4501
50: £temporary4502 -> £temporary4503 = *£temporary4503
51: £temporary4502 -> £temporary4503 = 0
52: call header
53: parameter string_t203D202225s222C20u203D202225s220A#, offset 6
54: parameter t, offset 8
55: parameter u, offset 10
56: call function noellipse-ellipse printf, extra 0
57: post call
58: call header
59: parameter string_strcmp28s2C20u29203D2025i0A#, offset 6
60: call header
61: parameter s, offset 14
62: parameter u, offset 16
63: call function noellipse-noellipse strcmp
64: post call
65: £temporary4505 = return_value
66: parameter £temporary4505, offset 8
67: call function noellipse-ellipse printf, extra 0
68: post call
69: call header
70: parameter string_strncmp28s2C20u2C20229203D2025i0A#, offset 6
71: call header
72: parameter s, offset 14
73: parameter u, offset 16
74: parameter 2, offset 18
75: call function noellipse-noellipse strncmp
76: post call
77: £temporary4507 = return_value
78: parameter £temporary4507, offset 8
79: call function noellipse-ellipse printf, extra 0
80: post call
81: call header
82: parameter s, offset 6
83: parameter 108, offset 8
84: call function noellipse-noellipse strchr
85: post call
86: £temporary4509 = return_value
87: p = £temporary4509
88: call header
89: parameter string_strchr28s2C2027l2729203D2025i0A#, offset 6
90: if p != 0 goto 92
91: goto 96
92: empty
93: £temporary4511 = p - s
94: £temporary4515 = £temporary4511
95: goto 98
96: empty
97: £temporary4515 = -1
98: empty
99: parameter £temporary4515, offset 8
100: call function noellipse-ellipse printf, extra 0
101: post call
102: call header
103: parameter s, offset 6
104: parameter 108, offset 8
105: call function noellipse-noellipse strrchr
106: post call
107: £temporary4517 = return_value
108: p = £temporary4517
109: call header
110: parameter string_strrchr28s2C2027l2729203D2025i0A#, offset 6
111: if p != 0 goto 113
112: goto 117
113: empty
114: £temporary4519 = p - s
115: £temporary4523 = £temporary4519
116: goto 119
117: empty
118: £temporary4523 = -1
119: empty
120: parameter £temporary4523, offset 8
121: call function noellipse-ellipse printf, extra 0
122: post call
123: call header
124: parameter s, offset 6
125: parameter 120, offset 8
126: call function noellipse-noellipse strchr
127: post call
128: £temporary4525 = return_value
129: p = £temporary4525
130: call header
131: parameter string_strchr28s2C2027x2729203D2025i0A#, offset 6
132: if p != 0 goto 134
133: goto 138
134: empty
135: £temporary4527 = p - s
136: £temporary4531 = £temporary4527
137: goto 140
138: empty
139: £temporary4531 = -1
140: empty
141: parameter £temporary4531, offset 8
142: call function noellipse-ellipse printf, extra 0
143: post call
144: call header
145: parameter s, offset 6
146: parameter 120, offset 8
147: call function noellipse-noellipse strrchr
148: post call
149: £temporary4533 = return_value
150: p = £temporary4533
151: call header
152: parameter string_strrchr28s2C2027x2729203D2025i0A#, offset 6
153: if p != 0 goto 155
154: goto 159
155: empty
156: £temporary4535 = p - s
157: £temporary4539 = £temporary4535
158: goto 161
159: empty
160: £temporary4539 = -1
161: empty
162: parameter £temporary4539, offset 8
163: call function noellipse-ellipse printf, extra 0
164: post call
165: call header
166: parameter s, offset 6
167: parameter string_Hello2C20World21#, offset 8
168: parameter 20, offset 10
169: call function noellipse-noellipse memcpy
170: post call
171: call header
172: parameter t, offset 6
173: parameter string_Hello2C20World21#, offset 8
174: parameter 20, offset 10
175: call function noellipse-noellipse memmove
176: post call
177: call header
178: parameter u, offset 6
179: parameter 88, offset 8
180: parameter 20, offset 10
181: call function noellipse-noellipse memset
182: post call
183: £temporary4544 -> u = *u, offset 19
184: £temporary4544 -> u = 0
185: call header
186: parameter string_s203D202225s222C20t203D202225s222C20u203D202225s220A#, offset 6
187: parameter s, offset 8
188: parameter t, offset 10
189: parameter u, offset 12
190: call function noellipse-ellipse printf, extra 0
191: post call
192: call header
193: parameter s, offset 6
194: parameter 108, offset 8
195: parameter 20, offset 10
196: call function noellipse-noellipse memchr
197: post call
198: £temporary4546 = return_value
199: p = £temporary4546
200: call header
201: parameter string_memchr28s2C2027l272C20SIZE202A20sizeof28char2929203D2025i0A#, offset 6
202: if p != 0 goto 204
203: goto 208
204: empty
205: £temporary4548 = p - s
206: £temporary4552 = £temporary4548
207: goto 210
208: empty
209: £temporary4552 = -1
210: empty
211: parameter £temporary4552, offset 8
212: call function noellipse-ellipse printf, extra 0
213: post call
214: call header
215: parameter s, offset 6
216: parameter 120, offset 8
217: parameter 20, offset 10
218: call function noellipse-noellipse memchr
219: post call
220: £temporary4554 = return_value
221: p = £temporary4554
222: call header
223: parameter string_memchr28s2C2027x272C20SIZE202A20sizeof28char2929203D2025i0A#, offset 6
224: if p != 0 goto 226
225: goto 230
226: empty
227: £temporary4556 = p - s
228: £temporary4560 = £temporary4556
229: goto 232
230: empty
231: £temporary4560 = -1
232: empty
233: parameter £temporary4560, offset 8
234: call function noellipse-ellipse printf, extra 0
235: post call
236: call header
237: parameter string_memcmp28s2C20t2C20SIZE202A20sizeof28char2929203D2025i0A#, offset 6
238: call header
239: parameter s, offset 14
240: parameter t, offset 16
241: parameter 20, offset 18
242: call function noellipse-noellipse memcmp
243: post call
244: £temporary4562 = return_value
245: parameter £temporary4562, offset 8
246: call function noellipse-ellipse printf, extra 0
247: post call
248: call header
249: parameter string_strspn28s2C2022Hello2C20C2229203D2025i0A#, offset 6
250: call header
251: parameter s, offset 14
252: parameter string_Hello2C20C#, offset 16
253: call function noellipse-noellipse strspn
254: post call
255: £temporary4564 = return_value
256: parameter £temporary4564, offset 8
257: call function noellipse-ellipse printf, extra 0
258: post call
259: call header
260: parameter string_strcspn28s2C2022Hello2C20C2229203D2025i0A#, offset 6
261: call header
262: parameter s, offset 14
263: parameter string_Hello2C20C#, offset 16
264: call function noellipse-noellipse strcspn
265: post call
266: £temporary4566 = return_value
267: parameter £temporary4566, offset 8
268: call function noellipse-ellipse printf, extra 0
269: post call
270: call header
271: parameter string_strerror28errno29203D202225s220A#, offset 6
272: call header
273: parameter errno, offset 14
274: call function noellipse-noellipse strerror
275: post call
276: £temporary4568 = return_value
277: parameter £temporary4568, offset 8
278: call function noellipse-ellipse printf, extra 0
279: post call
280: call header
281: parameter s, offset 6
282: parameter string_2C#, offset 8
283: call function noellipse-noellipse strtok
284: post call
285: £temporary4570 = return_value
286: p = £temporary4570
287: if p != 0 goto 290
288: goto 303
289: check track map float stack
290: call header
291: parameter string_strtok28s2C20222C2229203D202225s220A#, offset 6
292: parameter p, offset 8
293: call function noellipse-ellipse printf, extra 0
294: post call
295: call header
296: parameter 0, offset 6
297: parameter string_2C#, offset 8
298: call function noellipse-noellipse strtok
299: post call
300: £temporary4573 = return_value
301: p = £temporary4573
302: goto 287
303: empty
304: return
305: function end string_test
0: empty
1: return
2: function end locale_test
0: call header
1: parameter string_Please20input20a20value3A20#, offset 6
2: call function noellipse-ellipse printf, extra 0
3: post call
4: call header
5: parameter string_25lf#, offset 6
6: push float x
7: pop float empty X
8: £temporary4666 = &x
9: parameter £temporary4666, offset 8
10: call function noellipse-ellipse scanf, extra 0
11: post call
12: call header
13: parameter buffer, offset 6
14: call function noellipse-noellipse setjmp
15: post call
16: £temporary4668 = return_value
17: message = £temporary4668
18: if message == 0 goto 21
19: goto 35
20: check track map float stack
21: call header
22: parameter string_12E0202F2025f203D2025f0A#, offset 6
23: push float x
24: parameter x, offset 8
25: call header
26: push float x
27: parameter x, offset 22
28: call function noellipse-noellipse inverse
29: post call
30: £temporary4670 = return_value
31: parameter £temporary4670, offset 16
32: call function noellipse-ellipse printf, extra 0
33: post call
34: goto 41
35: call header
36: parameter string_25s0A#, offset 6
37: parameter message, offset 8
38: call function noellipse-ellipse printf, extra 0
39: post call
40: goto 41
41: empty
42: return
43: function end main
0: call header
1: push 1
2: parameter 1, offset 6
3: push float x
4: parameter x, offset 14
5: call function noellipse-noellipse divide
6: post call
7: £temporary4684 = return_value
8: return_value = £temporary4684
9: return
10: empty
11: return
12: function end inverse
0: push float y
1: push 0
2: if y != 0 goto 5
3: goto 11
4: check track map float stack
5: push float x
6: push float y
7: £temporary4688 = x / y
8: return_value = £temporary4688
9: return
10: goto 20
11: call header
12: parameter buffer, offset 6
13: parameter string_Division20by20Zero2E#, offset 8
14: call function noellipse-noellipse longjmp
15: post call
16: push 0
17: return_value = 0
18: return
19: goto 20
20: empty
21: return
22: function end divide
0: empty
1: return
2: function end setjmp_test
0: call header
1: push float 3.1415926535897932384626433
2: pop float empty X
3: push float -6.2831853071795864769252866
4: parameter -6.2831853071795864769252866, offset 6
5: call function noellipse-noellipse math_test_1
6: post call
7: call header
8: push float 3.1415926535897932384626433
9: pop float empty X
10: push float -3.1415926535897932384626433
11: parameter -3.1415926535897932384626433, offset 6
12: call function noellipse-noellipse math_test_1
13: post call
14: call header
15: push float 3.1415926535897932384626433
16: pop float empty X
17: push float -3.1415926535897932384626433
18: pop float empty X
19: push float -1.57079632679489661923132165
20: parameter -1.57079632679489661923132165, offset 6
21: call function noellipse-noellipse math_test_1
22: post call
23: call header
24: push float -1
25: parameter -1, offset 6
26: call function noellipse-noellipse math_test_1
27: post call
28: call header
29: push 0
30: parameter 0, offset 6
31: call function noellipse-noellipse math_test_1
32: post call
33: call header
34: push 1
35: parameter 1, offset 6
36: call function noellipse-noellipse math_test_1
37: post call
38: call header
39: push float 3.1415926535897932384626433
40: pop float empty X
41: push float 1.57079632679489661923132165
42: parameter 1.57079632679489661923132165, offset 6
43: call function noellipse-noellipse math_test_1
44: post call
45: call header
46: push float 3.1415926535897932384626433
47: parameter 3.1415926535897932384626433, offset 6
48: call function noellipse-noellipse math_test_1
49: post call
50: call header
51: push float 3.1415926535897932384626433
52: pop float empty X
53: push float 6.2831853071795864769252866
54: parameter 6.2831853071795864769252866, offset 6
55: call function noellipse-noellipse math_test_1
56: post call
57: empty
58: return
59: function end math_test_1x
0: call header
1: parameter string_2020acos2825f29203D2025f2C20errno203D2025i0A#, offset 6
2: push float x
3: parameter x, offset 8
4: call header
5: push float x
6: parameter x, offset 22
7: call function noellipse-noellipse acos
8: post call
9: £temporary4710 = return_value
10: parameter £temporary4710, offset 16
11: parameter errno, offset 24
12: call function noellipse-ellipse printf, extra 0
13: post call
14: errno = 0
15: empty
16: return
17: function end acos_test
0: call header
1: parameter string_2020atan2825f29203D2025f2C20errno203D2025i0A#, offset 6
2: push float x
3: parameter x, offset 8
4: call header
5: push float x
6: parameter x, offset 22
7: call function noellipse-noellipse atan
8: post call
9: £temporary4717 = return_value
10: parameter £temporary4717, offset 16
11: parameter errno, offset 24
12: call function noellipse-ellipse printf, extra 0
13: post call
14: errno = 0
15: empty
16: return
17: function end atan_test
0: call header
1: push float 0.333333333
2: parameter 0.333333333, offset 6
3: call function noellipse-noellipse math_test_1
4: post call
5: call header
6: push float 0.75
7: parameter 0.75, offset 6
8: call function noellipse-noellipse math_test_1
9: post call
10: call header
11: push float 1.000010
12: parameter 1.000010, offset 6
13: call function noellipse-noellipse math_test_1
14: post call
15: call header
16: push float 1.0
17: parameter 1.0, offset 6
18: call function noellipse-noellipse math_test_1
19: post call
20: call header
21: push float 0.999999
22: parameter 0.999999, offset 6
23: call function noellipse-noellipse math_test_1
24: post call
25: call header
26: push float 0.000010
27: parameter 0.000010, offset 6
28: call function noellipse-noellipse math_test_1
29: post call
30: call header
31: push 0
32: parameter 0, offset 6
33: call function noellipse-noellipse math_test_1
34: post call
35: call header
36: push float -0.000010
37: parameter -0.000010, offset 6
38: call function noellipse-noellipse math_test_1
39: post call
40: call header
41: push float -0.999999
42: parameter -0.999999, offset 6
43: call function noellipse-noellipse math_test_1
44: post call
45: call header
46: push float -1.0
47: parameter -1.0, offset 6
48: call function noellipse-noellipse math_test_1
49: post call
50: call header
51: push float -1.000010
52: parameter -1.000010, offset 6
53: call function noellipse-noellipse math_test_1
54: post call
55: call header
56: push float 3.1415926535897932384626433
57: pop float empty X
58: push float 6.2831853071795864769252866
59: parameter 6.2831853071795864769252866, offset 6
60: call function noellipse-noellipse math_test_1
61: post call
62: call header
63: push float 3.1415926535897932384626433
64: parameter 3.1415926535897932384626433, offset 6
65: call function noellipse-noellipse math_test_1
66: post call
67: call header
68: push float 3.1415926535897932384626433
69: pop float empty X
70: push float 1.57079632679489661923132165
71: parameter 1.57079632679489661923132165, offset 6
72: call function noellipse-noellipse math_test_1
73: post call
74: call header
75: push float 3.1415926535897932384626433
76: pop float empty X
77: push float -3.1415926535897932384626433
78: pop float empty X
79: push float -1.57079632679489661923132165
80: parameter -1.57079632679489661923132165, offset 6
81: call function noellipse-noellipse math_test_1
82: post call
83: call header
84: push float 3.1415926535897932384626433
85: pop float empty X
86: push float -3.1415926535897932384626433
87: parameter -3.1415926535897932384626433, offset 6
88: call function noellipse-noellipse math_test_1
89: post call
90: call header
91: push float 3.1415926535897932384626433
92: pop float empty X
93: push float -6.2831853071795864769252866
94: parameter -6.2831853071795864769252866, offset 6
95: call function noellipse-noellipse math_test_1
96: post call
97: call header
98: push float 1.0
99: parameter 1.0, offset 6
100: push float 2.0
101: parameter 2.0, offset 14
102: call function noellipse-noellipse math_test_2
103: post call
104: call header
105: push float 3.0
106: parameter 3.0, offset 6
107: push float 4.0
108: parameter 4.0, offset 14
109: call function noellipse-noellipse math_test_2
110: post call
111: call header
112: push 0
113: parameter 0, offset 6
114: push float 2.0
115: parameter 2.0, offset 14
116: call function noellipse-noellipse math_test_2
117: post call
118: call header
119: push 0
120: parameter 0, offset 6
121: push float -2.0
122: parameter -2.0, offset 14
123: call function noellipse-noellipse math_test_2
124: post call
125: call header
126: push 1
127: parameter 1, offset 6
128: push float 2.0
129: parameter 2.0, offset 14
130: call function noellipse-noellipse math_test_2
131: post call
132: call header
133: push 1
134: parameter 1, offset 6
135: push float -2.0
136: parameter -2.0, offset 14
137: call function noellipse-noellipse math_test_2
138: post call
139: call header
140: push 0
141: parameter 0, offset 6
142: push 0
143: parameter 0, offset 14
144: call function noellipse-noellipse math_test_2
145: post call
146: call header
147: push float 2
148: parameter 2, offset 6
149: push 0
150: parameter 0, offset 14
151: call function noellipse-noellipse math_test_2
152: post call
153: call header
154: push float -2
155: parameter -2, offset 6
156: push 0
157: parameter 0, offset 14
158: call function noellipse-noellipse math_test_2
159: post call
160: call header
161: push float -1.0
162: parameter -1.0, offset 6
163: push float -1.0
164: parameter -1.0, offset 14
165: call function noellipse-noellipse math_test_2
166: post call
167: call header
168: push float -2.0
169: parameter -2.0, offset 6
170: push float -4.0
171: parameter -4.0, offset 14
172: call function noellipse-noellipse math_test_2
173: post call
174: empty
175: return
176: function end main_math
0: call header
1: parameter string_3C25f3E0A#, offset 6
2: push float x
3: parameter x, offset 8
4: call function noellipse-ellipse printf, extra 0
5: post call
6: call header
7: parameter string_2020sin2825f29203D2025f2C20errno203D2025i0A#, offset 6
8: push float x
9: parameter x, offset 8
10: call header
11: push float x
12: parameter x, offset 22
13: call function noellipse-noellipse sin
14: post call
15: £temporary4792 = return_value
16: parameter £temporary4792, offset 16
17: parameter errno, offset 24
18: call function noellipse-ellipse printf, extra 0
19: post call
20: errno = 0
21: call header
22: parameter string_2020cos2825f29203D2025f2C20errno203D2025i0A#, offset 6
23: push float x
24: parameter x, offset 8
25: call header
26: push float x
27: parameter x, offset 22
28: call function noellipse-noellipse cos
29: post call
30: £temporary4794 = return_value
31: parameter £temporary4794, offset 16
32: parameter errno, offset 24
33: call function noellipse-ellipse printf, extra 0
34: post call
35: errno = 0
36: call header
37: parameter string_2020tan2825f29203D2025f2C20errno203D2025i0A#, offset 6
38: push float x
39: parameter x, offset 8
40: call header
41: push float x
42: parameter x, offset 22
43: call function noellipse-noellipse tan
44: post call
45: £temporary4796 = return_value
46: parameter £temporary4796, offset 16
47: parameter errno, offset 24
48: call function noellipse-ellipse printf, extra 0
49: post call
50: errno = 0
51: call header
52: parameter string_2020asin2825f29203D2025f2C20errno203D2025i0A#, offset 6
53: push float x
54: parameter x, offset 8
55: call header
56: push float x
57: parameter x, offset 22
58: call function noellipse-noellipse asin
59: post call
60: £temporary4798 = return_value
61: parameter £temporary4798, offset 16
62: parameter errno, offset 24
63: call function noellipse-ellipse printf, extra 0
64: post call
65: errno = 0
66: call header
67: parameter string_2020acos2825f29203D2025f2C20errno203D2025i0A#, offset 6
68: push float x
69: parameter x, offset 8
70: call header
71: push float x
72: parameter x, offset 22
73: call function noellipse-noellipse acos
74: post call
75: £temporary4800 = return_value
76: parameter £temporary4800, offset 16
77: parameter errno, offset 24
78: call function noellipse-ellipse printf, extra 0
79: post call
80: errno = 0
81: call header
82: parameter string_2020atan2825f29203D2025f2C20errno203D2025i0A#, offset 6
83: push float x
84: parameter x, offset 8
85: call header
86: push float x
87: parameter x, offset 22
88: call function noellipse-noellipse atan
89: post call
90: £temporary4802 = return_value
91: parameter £temporary4802, offset 16
92: parameter errno, offset 24
93: call function noellipse-ellipse printf, extra 0
94: post call
95: errno = 0
96: call header
97: parameter string_2020exp2825f29203D2025f2C20errno203D2025i0A#, offset 6
98: push float x
99: parameter x, offset 8
100: call header
101: push float x
102: parameter x, offset 22
103: call function noellipse-noellipse exp
104: post call
105: £temporary4804 = return_value
106: parameter £temporary4804, offset 16
107: parameter errno, offset 24
108: call function noellipse-ellipse printf, extra 0
109: post call
110: errno = 0
111: call header
112: parameter string_2020log2825f29203D2025f2C20errno203D2025i0A#, offset 6
113: push float x
114: parameter x, offset 8
115: call header
116: push float x
117: parameter x, offset 22
118: call function noellipse-noellipse log
119: post call
120: £temporary4806 = return_value
121: parameter £temporary4806, offset 16
122: parameter errno, offset 24
123: call function noellipse-ellipse printf, extra 0
124: post call
125: errno = 0
126: call header
127: parameter string_2020log102825f29203D2025f2C20errno203D2025i0A#, offset 6
128: push float x
129: parameter x, offset 8
130: call header
131: push float x
132: parameter x, offset 22
133: call function noellipse-noellipse log10
134: post call
135: £temporary4808 = return_value
136: parameter £temporary4808, offset 16
137: parameter errno, offset 24
138: call function noellipse-ellipse printf, extra 0
139: post call
140: errno = 0
141: call header
142: parameter string_2020sinh2825f29203D2025f2C20errno203D2025i0A#, offset 6
143: push float x
144: parameter x, offset 8
145: call header
146: push float x
147: parameter x, offset 22
148: call function noellipse-noellipse sinh
149: post call
150: £temporary4810 = return_value
151: parameter £temporary4810, offset 16
152: parameter errno, offset 24
153: call function noellipse-ellipse printf, extra 0
154: post call
155: errno = 0
156: call header
157: parameter string_2020cosh2825f29203D2025f2C20errno203D2025i0A#, offset 6
158: push float x
159: parameter x, offset 8
160: call header
161: push float x
162: parameter x, offset 22
163: call function noellipse-noellipse cosh
164: post call
165: £temporary4812 = return_value
166: parameter £temporary4812, offset 16
167: parameter errno, offset 24
168: call function noellipse-ellipse printf, extra 0
169: post call
170: errno = 0
171: call header
172: parameter string_2020tanh2825f29203D2025f2C20errno203D2025i0A#, offset 6
173: push float x
174: parameter x, offset 8
175: call header
176: push float x
177: parameter x, offset 22
178: call function noellipse-noellipse tanh
179: post call
180: £temporary4814 = return_value
181: parameter £temporary4814, offset 16
182: parameter errno, offset 24
183: call function noellipse-ellipse printf, extra 0
184: post call
185: errno = 0
186: call header
187: parameter string_2020sqrt2825f29203D2025f2C20errno203D2025i0A#, offset 6
188: push float x
189: parameter x, offset 8
190: call header
191: push float x
192: parameter x, offset 22
193: call function noellipse-noellipse sqrt
194: post call
195: £temporary4816 = return_value
196: parameter £temporary4816, offset 16
197: parameter errno, offset 24
198: call function noellipse-ellipse printf, extra 0
199: post call
200: errno = 0
201: call header
202: parameter string_2020floor2825f29203D2025f2C20errno203D2025i0A#, offset 6
203: push float x
204: parameter x, offset 8
205: call header
206: push float x
207: parameter x, offset 22
208: call function noellipse-noellipse floor
209: post call
210: £temporary4818 = return_value
211: parameter £temporary4818, offset 16
212: parameter errno, offset 24
213: call function noellipse-ellipse printf, extra 0
214: post call
215: errno = 0
216: call header
217: parameter string_2020ceil2825f29203D2025f2C20errno203D2025i0A#, offset 6
218: push float x
219: parameter x, offset 8
220: call header
221: push float x
222: parameter x, offset 22
223: call function noellipse-noellipse ceil
224: post call
225: £temporary4820 = return_value
226: parameter £temporary4820, offset 16
227: parameter errno, offset 24
228: call function noellipse-ellipse printf, extra 0
229: post call
230: errno = 0
231: call header
232: parameter string_2020fabs2825f29203D2025f2C20errno203D2025i0A#, offset 6
233: push float x
234: parameter x, offset 8
235: call header
236: push float x
237: parameter x, offset 22
238: call function noellipse-noellipse fabs
239: post call
240: £temporary4822 = return_value
241: parameter £temporary4822, offset 16
242: parameter errno, offset 24
243: call function noellipse-ellipse printf, extra 0
244: post call
245: errno = 0
246: j = 0
247: call header
248: push float x
249: parameter x, offset 6
250: £temporary4824 = &j
251: parameter £temporary4824, offset 14
252: call function noellipse-noellipse frexp
253: post call
254: £temporary4825 = return_value
255: pop float z
256: call header
257: parameter string_frexp202825f2C20p29203D202825f2C2025i292C20errno203D2025i0A#, offset 6
258: push float x
259: parameter x, offset 8
260: push float z
261: parameter z, offset 16
262: parameter j, offset 24
263: parameter errno, offset 26
264: call function noellipse-ellipse printf, extra 0
265: post call
266: if errno != 0 goto 269
267: goto 275
268: check track map float stack
269: call header
270: parameter string_Error20message3A#, offset 6
271: call function noellipse-noellipse perror
272: post call
273: errno = 0
274: goto 275
275: push 0
276: pop float w
277: call header
278: push float x
279: parameter x, offset 6
280: push float w
281: pop float empty X
282: £temporary4829 = &w
283: parameter £temporary4829, offset 14
284: call function noellipse-noellipse modf
285: post call
286: £temporary4830 = return_value
287: pop float z
288: call header
289: parameter string_modf202825f2C20p29203D202825f2C2025f292C20errno203D2025i0A#, offset 6
290: push float x
291: parameter x, offset 8
292: push float z
293: parameter z, offset 16
294: push float w
295: parameter w, offset 24
296: parameter errno, offset 32
297: call function noellipse-ellipse printf, extra 0
298: post call
299: if errno != 0 goto 302
300: goto 308
301: check track map float stack
302: call header
303: parameter string_Error20message3A#, offset 6
304: call function noellipse-noellipse perror
305: post call
306: errno = 0
307: goto 308
308: call header
309: parameter string_0A#, offset 6
310: call function noellipse-ellipse printf, extra 0
311: post call
312: empty
313: return
314: function end math_test_1
0: call header
1: parameter string_fmod2825f2C2025f29203D2025f2C20errno203D2025i0A#, offset 6
2: push float x
3: parameter x, offset 8
4: push float y
5: parameter y, offset 16
6: call header
7: push float x
8: parameter x, offset 30
9: push float y
10: parameter y, offset 38
11: call function noellipse-noellipse fmod
12: post call
13: £temporary4936 = return_value
14: parameter £temporary4936, offset 24
15: parameter errno, offset 32
16: call function noellipse-ellipse printf, extra 0
17: post call
18: errno = 0
19: call header
20: parameter string_atan22825f2C2025f29203D2025f2C20errno203D2025i0A#, offset 6
21: push float x
22: parameter x, offset 8
23: push float y
24: parameter y, offset 16
25: call header
26: push float x
27: parameter x, offset 30
28: push float y
29: parameter y, offset 38
30: call function noellipse-noellipse atan2
31: post call
32: £temporary4938 = return_value
33: parameter £temporary4938, offset 24
34: parameter errno, offset 32
35: call function noellipse-ellipse printf, extra 0
36: post call
37: errno = 0
38: call header
39: parameter string_pow2825f2C2025f29203D2025f2C20errno203D2025i0A#, offset 6
40: push float x
41: parameter x, offset 8
42: push float y
43: parameter y, offset 16
44: call header
45: push float x
46: parameter x, offset 30
47: push float y
48: parameter y, offset 38
49: call function noellipse-noellipse pow
50: post call
51: £temporary4940 = return_value
52: parameter £temporary4940, offset 24
53: parameter errno, offset 32
54: call function noellipse-ellipse printf, extra 0
55: post call
56: errno = 0
57: call header
58: parameter string_0A#, offset 6
59: call function noellipse-ellipse printf, extra 0
60: post call
61: call header
62: parameter string_ldexp2825f2C2025i29203D2025f0A0A#, offset 6
63: push float x
64: parameter x, offset 8
65: push float y
66: £temporary4943 = float_to_int y (Double -> Signed_Int)
67: parameter £temporary4943, offset 16
68: call header
69: push float x
70: parameter x, offset 24
71: push float y
72: £temporary4944 = float_to_int y (Double -> Signed_Int)
73: parameter £temporary4944, offset 32
74: call function noellipse-noellipse ldexp
75: post call
76: £temporary4945 = return_value
77: parameter £temporary4945, offset 18
78: call function noellipse-ellipse printf, extra 0
79: post call
80: empty
81: return
82: function end math_test_2
0: call header
1: parameter inFilePtrName, offset 6
2: parameter string_r#, offset 8
3: call function noellipse-noellipse fopen
4: post call
5: £temporary4975 = return_value
6: inFilePtrPtr = £temporary4975
7: call header
8: parameter outFilePtrName, offset 6
9: parameter string_w#, offset 8
10: call function noellipse-noellipse fopen
11: post call
12: £temporary4976 = return_value
13: outFilePtrPtr = £temporary4976
14: if inFilePtrPtr != 0 goto 29
15: goto 17
16: check track map float stack
17: call header
18: parameter stderr, offset 6
19: parameter string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#, offset 8
20: parameter string_inFilePtrPtr20213D20NULL#, offset 10
21: parameter string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CFileTest2Ec#, offset 12
22: parameter 11, offset 14
23: call function noellipse-ellipse fprintf, extra 0
24: post call
25: call header
26: call function noellipse-noellipse abort
27: post call
28: goto 29
29: empty
30: if outFilePtrPtr != 0 goto 45
31: goto 33
32: check track map float stack
33: call header
34: parameter stderr, offset 6
35: parameter string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#, offset 8
36: parameter string_outFilePtrPtr20213D20NULL#, offset 10
37: parameter string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CFileTest2Ec#, offset 12
38: parameter 12, offset 14
39: call function noellipse-ellipse fprintf, extra 0
40: post call
41: call header
42: call function noellipse-noellipse abort
43: post call
44: goto 45
45: empty
46: size = 0
47: call header
48: parameter inFilePtrPtr, offset 6
49: parameter string_25i#, offset 8
50: £temporary4985 = &size
51: parameter £temporary4985, offset 10
52: call function noellipse-ellipse fscanf, extra 0
53: post call
54: index = 0
55: empty
56: if index < size goto 59
57: goto 88
58: check track map float stack
59: empty
60: push 0
61: pop float inValue
62: call header
63: parameter inFilePtrPtr, offset 6
64: parameter string_25lf#, offset 8
65: push float inValue
66: pop float empty X
67: £temporary4989 = &inValue
68: parameter £temporary4989, offset 10
69: call function noellipse-ellipse fscanf, extra 0
70: post call
71: call header
72: push float inValue
73: parameter £temporary4991, offset 6
74: call function noellipse-noellipse sqrt
75: post call
76: £temporary4992 = return_value
77: pop float outValue
78: call header
79: parameter outFilePtrPtr, offset 6
80: parameter string_25f0A#, offset 8
81: push float outValue
82: parameter outValue, offset 10
83: call function noellipse-ellipse fprintf, extra 0
84: post call
85: empty
86: index = index + 1
87: goto 55
88: call header
89: parameter inFilePtrPtr, offset 6
90: call function noellipse-noellipse fclose
91: post call
92: call header
93: parameter outFilePtrPtr, offset 6
94: call function noellipse-noellipse fclose
95: post call
96: sourceFilePtr = string_X#
97: targetFilePtr = string_Y#
98: call header
99: parameter sourceFilePtr, offset 6
100: parameter targetFilePtr, offset 8
101: call function noellipse-noellipse rename
102: post call
103: £temporary4996 = return_value
104: if £temporary4996 == 0 goto 107
105: goto 114
106: check track map float stack
107: call header
108: parameter string_2225s2220has20been20renamed20to202225s222E0A#, offset 6
109: parameter sourceFilePtr, offset 8
110: parameter targetFilePtr, offset 10
111: call function noellipse-ellipse printf, extra 0
112: post call
113: goto 126
114: call header
115: parameter string_Error2025i3A2025s2E0A#, offset 6
116: parameter errno, offset 8
117: call header
118: parameter errno, offset 16
119: call function noellipse-noellipse strerror
120: post call
121: £temporary4999 = return_value
122: parameter £temporary4999, offset 10
123: call function noellipse-ellipse printf, extra 0
124: post call
125: goto 126
126: targetFilePtr = string_Z#
127: call header
128: parameter targetFilePtr, offset 6
129: call function noellipse-noellipse remove
130: post call
131: £temporary5001 = return_value
132: if £temporary5001 == 0 goto 135
133: goto 141
134: check track map float stack
135: call header
136: parameter string_2225s2220has20been20removed2E0A#, offset 6
137: parameter targetFilePtr, offset 8
138: call function noellipse-ellipse printf, extra 0
139: post call
140: goto 153
141: call header
142: parameter string_Error2025i3A2025s2E0A#, offset 6
143: parameter errno, offset 8
144: call header
145: parameter errno, offset 16
146: call function noellipse-noellipse strerror
147: post call
148: £temporary5004 = return_value
149: parameter £temporary5004, offset 10
150: call function noellipse-ellipse printf, extra 0
151: post call
152: goto 153
153: call header
154: parameter string_PBook2Etxt#, offset 6
155: parameter string_r#, offset 8
156: call function noellipse-noellipse fopen
157: post call
158: £temporary5006 = return_value
159: inFilePtr = £temporary5006
160: if inFilePtr != 0 goto 175
161: goto 163
162: check track map float stack
163: call header
164: parameter stderr, offset 6
165: parameter string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#, offset 8
166: parameter string_inFilePtr20213D20NULL#, offset 10
167: parameter string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CFileTest2Ec#, offset 12
168: parameter 51, offset 14
169: call function noellipse-ellipse fprintf, extra 0
170: post call
171: call header
172: call function noellipse-noellipse abort
173: post call
174: goto 175
175: empty
176: call header
177: parameter string_0A252D24s20252D24s0A#, offset 6
178: parameter string_Name#, offset 8
179: parameter string_Phone#, offset 10
180: call function noellipse-ellipse printf, extra 0
181: post call
182: call header
183: parameter string_252D24s20252D24s0A#, offset 6
184: parameter string_3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D#, offset 8
185: parameter string_3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D#, offset 10
186: call function noellipse-ellipse printf, extra 0
187: post call
188: call header
189: parameter inFilePtr, offset 6
190: parameter string_25i#, offset 8
191: £temporary5013 = &size
192: parameter £temporary5013, offset 10
193: call function noellipse-ellipse fscanf, extra 0
194: post call
195: count = 0
196: empty
197: if count < size goto 200
198: goto 217
199: check track map float stack
200: empty
201: call header
202: parameter inFilePtr, offset 6
203: parameter string_25s25s#, offset 8
204: parameter name, offset 10
205: parameter phone, offset 12
206: call function noellipse-ellipse fscanf, extra 0
207: post call
208: call header
209: parameter string_252D24s20252D24s0A#, offset 6
210: parameter name, offset 8
211: parameter phone, offset 10
212: call function noellipse-ellipse printf, extra 0
213: post call
214: empty
215: count = count + 1
216: goto 196
217: call header
218: parameter string_0A#, offset 6
219: call function noellipse-ellipse printf, extra 0
220: post call
221: call header
222: parameter inFilePtr, offset 6
223: call function noellipse-noellipse fclose
224: post call
225: sourceFilePtr = string_Flow12Etxt#
226: targetFilePtr = string_Flow22Etxt#
227: call header
228: parameter sourceFilePtr, offset 6
229: parameter string_r#, offset 8
230: call function noellipse-noellipse fopen
231: post call
232: £temporary5021 = return_value
233: inFilePtr = £temporary5021
234: call header
235: parameter targetFilePtr, offset 6
236: parameter string_w#, offset 8
237: call function noellipse-noellipse fopen
238: post call
239: £temporary5022 = return_value
240: outFilePtr = £temporary5022
241: if inFilePtr != 0 goto 256
242: goto 244
243: check track map float stack
244: call header
245: parameter stderr, offset 6
246: parameter string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#, offset 8
247: parameter string_inFilePtr20213D20NULL#, offset 10
248: parameter string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CFileTest2Ec#, offset 12
249: parameter 80, offset 14
250: call function noellipse-ellipse fprintf, extra 0
251: post call
252: call header
253: call function noellipse-noellipse abort
254: post call
255: goto 256
256: empty
257: if outFilePtr != 0 goto 272
258: goto 260
259: check track map float stack
260: call header
261: parameter stderr, offset 6
262: parameter string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#, offset 8
263: parameter string_outFilePtr20213D20NULL#, offset 10
264: parameter string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CFileTest2Ec#, offset 12
265: parameter 81, offset 14
266: call function noellipse-ellipse fprintf, extra 0
267: post call
268: call header
269: call function noellipse-noellipse abort
270: post call
271: goto 272
272: empty
273: goto 275
274: check track map float stack
275: call header
276: parameter inFilePtr, offset 6
277: call function noellipse-noellipse fgetc
278: post call
279: £temporary5031 = return_value
280: £temporary5032 = int_to_int £temporary5031 (Signed_Int -> Signed_Char)
281: c = £temporary5032
282: £temporary5033 = int_to_int c (Signed_Char -> Signed_Int)
283: if £temporary5033 == -1 goto 286
284: goto 288
285: check track map float stack
286: goto 304
287: goto 288
288: call header
289: £temporary5035 = int_to_int c (Signed_Char -> Signed_Int)
290: parameter £temporary5035, offset 6
291: parameter outFilePtr, offset 8
292: call function noellipse-noellipse putc
293: post call
294: if c == 10 goto 297
295: goto 273
296: check track map float stack
297: call header
298: parameter 10, offset 6
299: parameter outFilePtr, offset 8
300: call function noellipse-noellipse putc
301: post call
302: goto 273
303: goto 273
304: call header
305: parameter inFilePtr, offset 6
306: call function noellipse-noellipse fclose
307: post call
308: call header
309: parameter outFilePtr, offset 6
310: call function noellipse-noellipse fclose
311: post call
312: call header
313: parameter string_Test2Ebin#, offset 6
314: parameter string_w#, offset 8
315: call function noellipse-noellipse fopen
316: post call
317: £temporary5042 = return_value
318: outFilePtr = £temporary5042
319: if outFilePtr != 0 goto 334
320: goto 322
321: check track map float stack
322: call header
323: parameter stderr, offset 6
324: parameter string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#, offset 8
325: parameter string_outFilePtr20213D20NULL#, offset 10
326: parameter string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CFileTest2Ec#, offset 12
327: parameter 102, offset 14
328: call function noellipse-ellipse fprintf, extra 0
329: post call
330: call header
331: call function noellipse-noellipse abort
332: post call
333: goto 334
334: empty
335: size = 10
336: call header
337: £temporary5047 = &size
338: parameter £temporary5047, offset 6
339: parameter 2, offset 8
340: parameter 1, offset 10
341: parameter outFilePtr, offset 12
342: call function noellipse-noellipse fwrite
343: post call
344: index = 0
345: empty
346: if index < size goto 349
347: goto 366
348: check track map float stack
349: empty
350: £temporary5051 = index * index
351: £temporary5052 = int_to_float £temporary5051 (Signed_Int -> Double)
352: pop float value
353: call header
354: push float value
355: pop float empty X
356: £temporary5053 = &value
357: parameter £temporary5053, offset 6
358: parameter 8, offset 8
359: parameter 1, offset 10
360: parameter outFilePtr, offset 12
361: call function noellipse-noellipse fwrite
362: post call
363: empty
364: index = index + 1
365: goto 345
366: call header
367: parameter outFilePtr, offset 6
368: call function noellipse-noellipse fclose
369: post call
370: call header
371: parameter string_Test2Ebin#, offset 6
372: parameter string_r#, offset 8
373: call function noellipse-noellipse fopen
374: post call
375: £temporary5056 = return_value
376: inFilePtr = £temporary5056
377: if inFilePtr != 0 goto 392
378: goto 380
379: check track map float stack
380: call header
381: parameter stderr, offset 6
382: parameter string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#, offset 8
383: parameter string_inFilePtr20213D20NULL#, offset 10
384: parameter string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CFileTest2Ec#, offset 12
385: parameter 118, offset 14
386: call function noellipse-ellipse fprintf, extra 0
387: post call
388: call header
389: call function noellipse-noellipse abort
390: post call
391: goto 392
392: empty
393: call header
394: £temporary5061 = &size
395: parameter £temporary5061, offset 6
396: parameter 2, offset 8
397: parameter 1, offset 10
398: parameter inFilePtr, offset 12
399: call function noellipse-noellipse fread
400: post call
401: call header
402: parameter string_size12025i0A#, offset 6
403: parameter size, offset 8
404: call function noellipse-ellipse printf, extra 0
405: post call
406: call header
407: £temporary5064 = &arr
408: parameter £temporary5064, offset 6
409: parameter 80, offset 8
410: parameter 1, offset 10
411: parameter inFilePtr, offset 12
412: call function noellipse-noellipse fread
413: post call
414: call header
415: parameter inFilePtr, offset 6
416: call function noellipse-noellipse fclose
417: post call
418: index = 0
419: empty
420: if index < 10 goto 423
421: goto 437
422: check track map float stack
423: empty
424: call header
425: parameter string_index12025i3A20value2025f0A#, offset 6
426: parameter index, offset 8
427: £temporary5070 = index * 8
428: £temporary5071 = arr + £temporary5070
429: £temporary5069 -> £temporary5071 = *£temporary5071
430: push float £temporary5069 -> £temporary5071
431: parameter £temporary5069 -> £temporary5071, offset 10
432: call function noellipse-ellipse printf, extra 0
433: post call
434: empty
435: index = index + 1
436: goto 419
437: call header
438: parameter string_0A#, offset 6
439: call function noellipse-ellipse printf, extra 0
440: post call
441: call header
442: parameter string_Test2Ebin#, offset 6
443: parameter string_r#, offset 8
444: call function noellipse-noellipse fopen
445: post call
446: £temporary5074 = return_value
447: inFilePtr = £temporary5074
448: if inFilePtr != 0 goto 463
449: goto 451
450: check track map float stack
451: call header
452: parameter stderr, offset 6
453: parameter string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#, offset 8
454: parameter string_inFilePtr20213D20NULL#, offset 10
455: parameter string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CFileTest2Ec#, offset 12
456: parameter 139, offset 14
457: call function noellipse-ellipse fprintf, extra 0
458: post call
459: call header
460: call function noellipse-noellipse abort
461: post call
462: goto 463
463: empty
464: call header
465: £temporary5079 = &size
466: parameter £temporary5079, offset 6
467: parameter 2, offset 8
468: parameter 1, offset 10
469: parameter inFilePtr, offset 12
470: call function noellipse-noellipse fread
471: post call
472: call header
473: parameter string_size22025i0A#, offset 6
474: parameter size, offset 8
475: call function noellipse-ellipse printf, extra 0
476: post call
477: index = 0
478: empty
479: if index < size goto 482
480: goto 503
481: check track map float stack
482: empty
483: call header
484: push float value
485: pop float empty X
486: £temporary5084 = &value
487: parameter £temporary5084, offset 6
488: parameter 8, offset 8
489: parameter 1, offset 10
490: parameter inFilePtr, offset 12
491: call function noellipse-noellipse fread
492: post call
493: call header
494: parameter string_index22025i3A20value2025f0A#, offset 6
495: parameter index, offset 8
496: push float value
497: parameter value, offset 10
498: call function noellipse-ellipse printf, extra 0
499: post call
500: empty
501: index = index + 1
502: goto 478
503: call header
504: parameter string_0A#, offset 6
505: call function noellipse-ellipse printf, extra 0
506: post call
507: call header
508: parameter inFilePtr, offset 6
509: call function noellipse-noellipse fclose
510: post call
511: call header
512: parameter string_Test2Ebin#, offset 6
513: parameter string_r#, offset 8
514: call function noellipse-noellipse fopen
515: post call
516: £temporary5089 = return_value
517: inFilePtr = £temporary5089
518: if inFilePtr != 0 goto 533
519: goto 521
520: check track map float stack
521: call header
522: parameter stderr, offset 6
523: parameter string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#, offset 8
524: parameter string_inFilePtr20213D20NULL#, offset 10
525: parameter string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CFileTest2Ec#, offset 12
526: parameter 156, offset 14
527: call function noellipse-ellipse fprintf, extra 0
528: post call
529: call header
530: call function noellipse-noellipse abort
531: post call
532: goto 533
533: empty
534: call header
535: £temporary5094 = &size
536: parameter £temporary5094, offset 6
537: parameter 2, offset 8
538: parameter 1, offset 10
539: parameter inFilePtr, offset 12
540: call function noellipse-noellipse fread
541: post call
542: call header
543: parameter string_size32025i20total2025i0A#, offset 6
544: parameter size, offset 8
545: £temporary5096 = size * 8
546: parameter £temporary5096, offset 10
547: call function noellipse-ellipse printf, extra 0
548: post call
549: £temporary5098 = size * 8
550: total = £temporary5098
551: call header
552: parameter total, offset 6
553: call function noellipse-noellipse malloc
554: post call
555: £temporary5099 = return_value
556: p = £temporary5099
557: £temporary5100 = size * 8
558: £temporary5101 = p + £temporary5100
559: endPtr = £temporary5101
560: if p != 0 goto 575
561: goto 563
562: check track map float stack
563: call header
564: parameter stderr, offset 6
565: parameter string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#, offset 8
566: parameter string_p20213D20NULL#, offset 10
567: parameter string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CFileTest2Ec#, offset 12
568: parameter 163, offset 14
569: call function noellipse-ellipse fprintf, extra 0
570: post call
571: call header
572: call function noellipse-noellipse abort
573: post call
574: goto 575
575: empty
576: call header
577: parameter string_malloc2025u2025u2025u0A#, offset 6
578: parameter p, offset 8
579: parameter total, offset 10
580: parameter endPtr, offset 12
581: call function noellipse-ellipse printf, extra 0
582: post call
583: call header
584: parameter p, offset 6
585: parameter total, offset 8
586: parameter 1, offset 10
587: parameter inFilePtr, offset 12
588: call function noellipse-noellipse fread
589: post call
590: index = 0
591: empty
592: if index < size goto 595
593: goto 609
594: check track map float stack
595: empty
596: call header
597: parameter string_index32025i3A20value2025f0A#, offset 6
598: parameter index, offset 8
599: £temporary5111 = index * 8
600: £temporary5112 = p + £temporary5111
601: £temporary5110 -> £temporary5112 = *£temporary5112
602: push float £temporary5110 -> £temporary5112
603: parameter £temporary5110 -> £temporary5112, offset 10
604: call function noellipse-ellipse printf, extra 0
605: post call
606: empty
607: index = index + 1
608: goto 591
609: call header
610: parameter string_0A#, offset 6
611: call function noellipse-ellipse printf, extra 0
612: post call
613: call header
614: parameter p, offset 6
615: call function noellipse-noellipse free
616: post call
617: call header
618: parameter inFilePtr, offset 6
619: call function noellipse-noellipse fclose
620: post call
621: personVector[0]$name[0] = 65
622: personVector[0]$name[1] = 100
623: personVector[0]$name[2] = 97
624: personVector[0]$name[3] = 109
625: personVector[0]$name[4] = 32
626: personVector[0]$name[5] = 66
627: personVector[0]$name[6] = 101
628: personVector[0]$name[7] = 114
629: personVector[0]$name[8] = 116
630: personVector[0]$name[9] = 105
631: personVector[0]$name[10] = 108
632: personVector[0]$name[11] = 115
633: personVector[0]$name[12] = 115
634: personVector[0]$name[13] = 111
635: personVector[0]$name[14] = 110
636: personVector[0]$name[15] = 0
637: personVector[0]$phone = 12345
638: personVector[1]$name[0] = 66
639: personVector[1]$name[1] = 101
640: personVector[1]$name[2] = 114
641: personVector[1]$name[3] = 116
642: personVector[1]$name[4] = 105
643: personVector[1]$name[5] = 108
644: personVector[1]$name[6] = 32
645: personVector[1]$name[7] = 67
646: personVector[1]$name[8] = 101
647: personVector[1]$name[9] = 97
648: personVector[1]$name[10] = 115
649: personVector[1]$name[11] = 97
650: personVector[1]$name[12] = 114
651: personVector[1]$name[13] = 115
652: personVector[1]$name[14] = 115
653: personVector[1]$name[15] = 111
654: personVector[1]$name[16] = 110
655: personVector[1]$name[17] = 0
656: personVector[1]$phone = 23456
657: personVector[2]$name[0] = 67
658: personVector[2]$name[1] = 101
659: personVector[2]$name[2] = 97
660: personVector[2]$name[3] = 115
661: personVector[2]$name[4] = 97
662: personVector[2]$name[5] = 114
663: personVector[2]$name[6] = 32
664: personVector[2]$name[7] = 68
665: personVector[2]$name[8] = 97
666: personVector[2]$name[9] = 118
667: personVector[2]$name[10] = 105
668: personVector[2]$name[11] = 100
669: personVector[2]$name[12] = 115
670: personVector[2]$name[13] = 115
671: personVector[2]$name[14] = 111
672: personVector[2]$name[15] = 110
673: personVector[2]$name[16] = 0
674: personVector[2]$phone = 24567
675: call header
676: parameter string_Block2Ebin#, offset 6
677: parameter string_w#, offset 8
678: call function noellipse-noellipse fopen
679: post call
680: £temporary5177 = return_value
681: outFilePtr = £temporary5177
682: call header
683: parameter string_Block2Ebin#, offset 6
684: parameter string_r#, offset 8
685: call function noellipse-noellipse fopen
686: post call
687: £temporary5178 = return_value
688: inFilePtr = £temporary5178
689: if outFilePtr != 0 goto 704
690: goto 692
691: check track map float stack
692: call header
693: parameter stderr, offset 6
694: parameter string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#, offset 8
695: parameter string_outFilePtr20213D20NULL#, offset 10
696: parameter string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CFileTest2Ec#, offset 12
697: parameter 190, offset 14
698: call function noellipse-ellipse fprintf, extra 0
699: post call
700: call header
701: call function noellipse-noellipse abort
702: post call
703: goto 704
704: empty
705: if inFilePtr != 0 goto 720
706: goto 708
707: check track map float stack
708: call header
709: parameter stderr, offset 6
710: parameter string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#, offset 8
711: parameter string_inFilePtr20213D20NULL#, offset 10
712: parameter string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CFileTest2Ec#, offset 12
713: parameter 191, offset 14
714: call function noellipse-ellipse fprintf, extra 0
715: post call
716: call header
717: call function noellipse-noellipse abort
718: post call
719: goto 720
720: empty
721: call header
722: parameter personVector, offset 6
723: parameter 150, offset 8
724: parameter 1, offset 10
725: parameter outFilePtr, offset 12
726: call function noellipse-noellipse fwrite
727: post call
728: call header
729: parameter outFilePtr, offset 6
730: call function noellipse-noellipse fclose
731: post call
732: call header
733: parameter inFilePtr, offset 6
734: call function noellipse-noellipse feof
735: post call
736: £temporary5189 = return_value
737: if £temporary5189 != 0 goto 759
738: goto 740
739: check track map float stack
740: call header
741: £temporary5192 = &person
742: parameter £temporary5192, offset 6
743: parameter 50, offset 8
744: parameter 1, offset 10
745: parameter inFilePtr, offset 12
746: call function noellipse-noellipse fread
747: post call
748: call header
749: parameter string_Name20203A2025s0A#, offset 6
750: parameter person$name, offset 8
751: call function noellipse-ellipse printf, extra 0
752: post call
753: call header
754: parameter string_Phone203A2025d0A#, offset 6
755: parameter person$phone, offset 8
756: call function noellipse-ellipse printf, extra 0
757: post call
758: goto 732
759: call header
760: parameter inFilePtr, offset 6
761: call function noellipse-noellipse fclose
762: post call
763: call header
764: parameter string_Test12Etxt#, offset 6
765: parameter string_r#, offset 8
766: call function noellipse-noellipse fopen
767: post call
768: £temporary5199 = return_value
769: inFilePtr = £temporary5199
770: if inFilePtr != 0 goto 785
771: goto 773
772: check track map float stack
773: call header
774: parameter stderr, offset 6
775: parameter string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#, offset 8
776: parameter string_inFilePtr20213D20NULL#, offset 10
777: parameter string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CFileTest2Ec#, offset 12
778: parameter 207, offset 14
779: call function noellipse-ellipse fprintf, extra 0
780: post call
781: call header
782: call function noellipse-noellipse abort
783: post call
784: goto 785
785: empty
786: call header
787: parameter inFilePtr, offset 6
788: parameter -1, offset 8
789: parameter 2, offset 10
790: call function noellipse-noellipse fseek
791: post call
792: call header
793: parameter inFilePtr, offset 6
794: call function noellipse-noellipse ftell
795: post call
796: £temporary5205 = return_value
797: £temporary5206 = int_to_int £temporary5205 (Signed_Int -> Unsigned_Int)
798: u = £temporary5206
799: if u >= 0 goto 802
800: goto 826
801: check track map float stack
802: call header
803: parameter inFilePtr, offset 6
804: call function noellipse-noellipse fgetc
805: post call
806: £temporary5208 = return_value
807: £temporary5209 = int_to_int £temporary5208 (Signed_Int -> Signed_Char)
808: c = £temporary5209
809: call header
810: £temporary5210 = int_to_int c (Signed_Char -> Signed_Int)
811: parameter £temporary5210, offset 6
812: call function noellipse-noellipse putchar
813: post call
814: if u == 0 goto 817
815: goto 819
816: check track map float stack
817: goto 826
818: goto 819
819: call header
820: parameter inFilePtr, offset 6
821: parameter -2, offset 8
822: parameter 1, offset 10
823: call function noellipse-noellipse fseek
824: post call
825: goto 792
826: call header
827: parameter string_0A0A#, offset 6
828: call function noellipse-ellipse printf, extra 0
829: post call
830: call header
831: parameter inFilePtr, offset 6
832: call function noellipse-noellipse fclose
833: post call
834: call header
835: parameter string_fileexists20X2025s0A#, offset 6
836: call header
837: parameter string_X#, offset 14
838: call function noellipse-noellipse fileexists
839: post call
840: £temporary5216 = return_value
841: if £temporary5216 != 0 goto 843
842: goto 846
843: empty
844: £temporary5221 = string_Yes#
845: goto 848
846: empty
847: £temporary5221 = string_No#
848: empty
849: parameter £temporary5221, offset 8
850: call function noellipse-ellipse printf, extra 0
851: post call
852: call header
853: parameter string_fileexists20Y2025s0A0A#, offset 6
854: call header
855: parameter string_Y#, offset 14
856: call function noellipse-noellipse fileexists
857: post call
858: £temporary5223 = return_value
859: if £temporary5223 != 0 goto 861
860: goto 864
861: empty
862: £temporary5228 = string_Yes#
863: goto 866
864: empty
865: £temporary5228 = string_No#
866: empty
867: parameter £temporary5228, offset 8
868: call function noellipse-ellipse printf, extra 0
869: post call
870: call header
871: parameter string_PBookX2Etxt#, offset 6
872: parameter string_r2B#, offset 8
873: call function noellipse-noellipse fopen
874: post call
875: £temporary5230 = return_value
876: inOutFilePtr = £temporary5230
877: if inOutFilePtr != 0 goto 892
878: goto 880
879: check track map float stack
880: call header
881: parameter stderr, offset 6
882: parameter string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#, offset 8
883: parameter string_inOutFilePtr20213D20NULL#, offset 10
884: parameter string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CFileTest2Ec#, offset 12
885: parameter 231, offset 14
886: call function noellipse-ellipse fprintf, extra 0
887: post call
888: call header
889: call function noellipse-noellipse abort
890: post call
891: goto 892
892: empty
893: call header
894: call function noellipse-noellipse tmpfile
895: post call
896: £temporary5235 = return_value
897: tempFilePtr = £temporary5235
898: if tempFilePtr != 0 goto 913
899: goto 901
900: check track map float stack
901: call header
902: parameter stderr, offset 6
903: parameter string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#, offset 8
904: parameter string_tempFilePtr20213D20NULL#, offset 10
905: parameter string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CFileTest2Ec#, offset 12
906: parameter 234, offset 14
907: call function noellipse-ellipse fprintf, extra 0
908: post call
909: call header
910: call function noellipse-noellipse abort
911: post call
912: goto 913
913: empty
914: goto 916
915: check track map float stack
916: call header
917: parameter inOutFilePtr, offset 6
918: call function noellipse-noellipse fgetc
919: post call
920: £temporary5240 = return_value
921: £temporary5241 = int_to_int £temporary5240 (Signed_Int -> Signed_Char)
922: c = £temporary5241
923: £temporary5242 = int_to_int c (Signed_Char -> Signed_Int)
924: if £temporary5242 == -1 goto 927
925: goto 929
926: check track map float stack
927: goto 941
928: goto 929
929: call header
930: call header
931: £temporary5244 = int_to_int c (Signed_Char -> Signed_Int)
932: parameter £temporary5244, offset 6
933: call function noellipse-noellipse toupper
934: post call
935: £temporary5245 = return_value
936: parameter £temporary5245, offset 6
937: parameter tempFilePtr, offset 8
938: call function noellipse-noellipse putc
939: post call
940: goto 914
941: call header
942: parameter tempFilePtr, offset 6
943: call function noellipse-noellipse rewind
944: post call
945: call header
946: parameter inOutFilePtr, offset 6
947: parameter string_0A2D2D2D2D2D2D2D2D2D2D2D2D0A#, offset 8
948: call function noellipse-ellipse fprintf, extra 0
949: post call
950: goto 952
951: check track map float stack
952: call header
953: parameter tempFilePtr, offset 6
954: call function noellipse-noellipse fgetc
955: post call
956: £temporary5250 = return_value
957: £temporary5251 = int_to_int £temporary5250 (Signed_Int -> Signed_Char)
958: c = £temporary5251
959: £temporary5252 = int_to_int c (Signed_Char -> Signed_Int)
960: if £temporary5252 == -1 goto 963
961: goto 965
962: check track map float stack
963: goto 972
964: goto 965
965: call header
966: £temporary5254 = int_to_int c (Signed_Char -> Signed_Int)
967: parameter £temporary5254, offset 6
968: parameter inOutFilePtr, offset 8
969: call function noellipse-noellipse putc
970: post call
971: goto 950
972: call header
973: parameter inOutFilePtr, offset 6
974: call function noellipse-noellipse fclose
975: post call
976: call header
977: parameter tempFilePtr, offset 6
978: call function noellipse-noellipse fclose
979: post call
980: empty
981: return
982: function end file_test
0: n = 0
1: £temporary5529 = &n
2: p = £temporary5529
3: call header
4: parameter string_3C25i3E203C25i3E203C25li3E203C25li3E203C25u3E203C25lu3E0A0A#, offset 6
5: parameter 123, offset 8
6: parameter -123, offset 10
7: parameter 123, offset 12
8: parameter -123, offset 16
9: parameter 123, offset 20
10: parameter 123, offset 22
11: call function noellipse-ellipse printf, extra 0
12: post call
13: call header
14: parameter string_3C256i3E203C256i3E203C256li3E203C256li3E203C256u3E203C256lu3E0A#, offset 6
15: parameter 123, offset 8
16: parameter -123, offset 10
17: parameter 123, offset 12
18: parameter -123, offset 16
19: parameter 123, offset 20
20: parameter 123, offset 22
21: call function noellipse-ellipse printf, extra 0
22: post call
23: call header
24: parameter string_3C252B6i3E203C252B6i3E203C252B6li3E203C252B6li3E203C252B6u3E203C252B6lu3E0A#, offset 6
25: parameter 123, offset 8
26: parameter -123, offset 10
27: parameter 123, offset 12
28: parameter -123, offset 16
29: parameter 123, offset 20
30: parameter 123, offset 22
31: call function noellipse-ellipse printf, extra 0
32: post call
33: call header
34: parameter string_3C252D6i3E203C252D6i3E203C252D6li3E203C252D6li3E203C252D6u3E203C252D6lu3E0A#, offset 6
35: parameter 123, offset 8
36: parameter -123, offset 10
37: parameter 123, offset 12
38: parameter -123, offset 16
39: parameter 123, offset 20
40: parameter 123, offset 22
41: call function noellipse-ellipse printf, extra 0
42: post call
43: call header
44: parameter string_3C252B2D6i3E203C252B2D6i3E203C252B2D6li3E203C252B2D6li3E203C252B2D6u3E203C252B2D6lu3E0A0A#, offset 6
45: parameter 123, offset 8
46: parameter -123, offset 10
47: parameter 123, offset 12
48: parameter -123, offset 16
49: parameter 123, offset 20
50: parameter 123, offset 22
51: call function noellipse-ellipse printf, extra 0
52: post call
53: call header
54: parameter string_3C2506i3E203C2506i3E203C2506li3E203C2506li3E203C2506u3E203C2506lu3E0A#, offset 6
55: parameter 123, offset 8
56: parameter -123, offset 10
57: parameter 123, offset 12
58: parameter -123, offset 16
59: parameter 123, offset 20
60: parameter 123, offset 22
61: call function noellipse-ellipse printf, extra 0
62: post call
63: call header
64: parameter string_3C252B06i3E203C252B06i3E203C252B06li3E203C252B06li3E203C252B06u3E203C252B06lu3E0A#, offset 6
65: parameter 123, offset 8
66: parameter -123, offset 10
67: parameter 123, offset 12
68: parameter -123, offset 16
69: parameter 123, offset 20
70: parameter 123, offset 22
71: call function noellipse-ellipse printf, extra 0
72: post call
73: call header
74: parameter string_3C252D06i3E203C252D06i3E203C252D06li3E203C252D06li3E203C252D06u3E203C252D06lu3E0A#, offset 6
75: parameter 123, offset 8
76: parameter -123, offset 10
77: parameter 123, offset 12
78: parameter -123, offset 16
79: parameter 123, offset 20
80: parameter 123, offset 22
81: call function noellipse-ellipse printf, extra 0
82: post call
83: call header
84: parameter string_3C252B2D06i3E203C252B2D06i3E203C252B2D06li3E203C252B2D06li3E203C252B2D06u3E203C252B2D06lu3E0A0A#, offset 6
85: parameter 123, offset 8
86: parameter -123, offset 10
87: parameter 123, offset 12
88: parameter -123, offset 16
89: parameter 123, offset 20
90: parameter 123, offset 22
91: call function noellipse-ellipse printf, extra 0
92: post call
93: call header
94: parameter string_3C25206i3E203C25206i3E203C25206li3E203C25206li3E203C25206u3E203C25206lu3E0A#, offset 6
95: parameter 123, offset 8
96: parameter -123, offset 10
97: parameter 123, offset 12
98: parameter -123, offset 16
99: parameter 123, offset 20
100: parameter 123, offset 22
101: call function noellipse-ellipse printf, extra 0
102: post call
103: call header
104: parameter string_3C252B206i3E203C252B206i3E203C252B206li3E203C252B206li3E203C252B206u3E203C252B206lu3E0A#, offset 6
105: parameter 123, offset 8
106: parameter -123, offset 10
107: parameter 123, offset 12
108: parameter -123, offset 16
109: parameter 123, offset 20
110: parameter 123, offset 22
111: call function noellipse-ellipse printf, extra 0
112: post call
113: call header
114: parameter string_3C252D206i3E203C252D206i3E203C252D206li3E203C252D206li3E203C252D206u3E203C252D206lu3E0A#, offset 6
115: parameter 123, offset 8
116: parameter -123, offset 10
117: parameter 123, offset 12
118: parameter -123, offset 16
119: parameter 123, offset 20
120: parameter 123, offset 22
121: call function noellipse-ellipse printf, extra 0
122: post call
123: call header
124: parameter string_3C252B2D206i3E203C252B2D206i3E203C252B2D206li3E203C252B2D206li3E203C252B2D206u3E203C252B2D206lu3E0A0A#, offset 6
125: parameter 123, offset 8
126: parameter -123, offset 10
127: parameter 123, offset 12
128: parameter -123, offset 16
129: parameter 123, offset 20
130: parameter 123, offset 22
131: call function noellipse-ellipse printf, extra 0
132: post call
133: call header
134: parameter string_3C25x3E203C25X3E203C25o3E203C25lx3E203C25lX3E203C25lo3E0A#, offset 6
135: parameter 123, offset 8
136: parameter 123, offset 10
137: parameter 123, offset 12
138: parameter 123, offset 14
139: parameter 123, offset 18
140: parameter 123, offset 22
141: call function noellipse-ellipse printf, extra 0
142: post call
143: call header
144: parameter string_3C2523x3E203C2523X3E203C2523o3E203C2523lx3E203C2523lX3E203C2523lo3E0A#, offset 6
145: parameter 123, offset 8
146: parameter 123, offset 10
147: parameter 123, offset 12
148: parameter 123, offset 14
149: parameter 123, offset 18
150: parameter 123, offset 22
151: call function noellipse-ellipse printf, extra 0
152: post call
153: call header
154: parameter string_3C25253E203C25s3E203C25c3E203C25p3E0A0A#, offset 6
155: parameter string_Hello2C20World21#, offset 8
156: parameter 88, offset 10
157: parameter p, offset 12
158: call function noellipse-ellipse printf, extra 0
159: post call
160: call header
161: parameter string_3C25f3E203C25e3E203C25E3E203C25g3E203C25G3E0A#, offset 6
162: push float 123.456
163: parameter 123.456, offset 8
164: push float 123.456
165: parameter 123.456, offset 16
166: push float 123.456
167: parameter 123.456, offset 24
168: push float 123456.1
169: parameter 123456.1, offset 32
170: push float 123456.1
171: parameter 123456.1, offset 40
172: call function noellipse-ellipse printf, extra 0
173: post call
174: call header
175: parameter string_3C25lf3E203C25le3E203C25lE3E203C25lg3E203C25lG3E0A#, offset 6
176: push float 123.456
177: parameter 123.456, offset 8
178: push float 123.456
179: parameter 123.456, offset 16
180: push float 123.456
181: parameter 123.456, offset 24
182: push float 123456.1
183: parameter 123456.1, offset 32
184: push float 123456.1
185: parameter 123456.1, offset 40
186: call function noellipse-ellipse printf, extra 0
187: post call
188: call header
189: parameter string_3C2523f3E203C2523e3E203C2523E3E203C2523g3E203C2523G3E0A#, offset 6
190: push float 123.456
191: parameter 123.456, offset 8
192: push float 123.456
193: parameter 123.456, offset 16
194: push float 123.456
195: parameter 123.456, offset 24
196: push float 123.456
197: parameter 123.456, offset 32
198: push float 123.456
199: parameter 123.456, offset 40
200: call function noellipse-ellipse printf, extra 0
201: post call
202: call header
203: parameter string_3C2523lf3E203C2523le3E203C2523lE3E203C2523lg3E203C2523lG3E0A#, offset 6
204: push float 123.456
205: parameter 123.456, offset 8
206: push float 123.456
207: parameter 123.456, offset 16
208: push float 123.456
209: parameter 123.456, offset 24
210: push float 123.456
211: parameter 123.456, offset 32
212: push float 123.456
213: parameter 123.456, offset 40
214: call function noellipse-ellipse printf, extra 0
215: post call
216: call header
217: parameter string_3C2562E3f3E203C2562E3e3E203C2562E3E3E203C2562E3g3E203C2562E3G3E0A#, offset 6
218: push float 123.456
219: parameter 123.456, offset 8
220: push float 123.456
221: parameter 123.456, offset 16
222: push float 123.456
223: parameter 123.456, offset 24
224: push float 123.456
225: parameter 123.456, offset 32
226: push float 123.456
227: parameter 123.456, offset 40
228: call function noellipse-ellipse printf, extra 0
229: post call
230: call header
231: parameter string_3C2562E3lf3E203C2562E3le3E203C2562E3lE3E203C2562E3lg3E203C2562E3lG3E0A0A#, offset 6
232: push float 123.456
233: parameter 123.456, offset 8
234: push float 123.456
235: parameter 123.456, offset 16
236: push float 123.456
237: parameter 123.456, offset 24
238: push float 123.456
239: parameter 123.456, offset 32
240: push float 123.456
241: parameter 123.456, offset 40
242: call function noellipse-ellipse printf, extra 0
243: post call
244: call header
245: parameter string_3C25f3E203C25e3E203C25E3E203C25g3E203C25G3E0A#, offset 6
246: push float -123.456
247: parameter -123.456, offset 8
248: push float -123.456
249: parameter -123.456, offset 16
250: push float -123.456
251: parameter -123.456, offset 24
252: push float -0.000000123456
253: parameter -0.000000123456, offset 32
254: push float -0.000000123456
255: parameter -0.000000123456, offset 40
256: call function noellipse-ellipse printf, extra 0
257: post call
258: call header
259: parameter string_3C25lf3E203C25le3E203C25lE3E203C25lg3E203C25lG3E0A#, offset 6
260: push float -123.456
261: parameter -123.456, offset 8
262: push float -123.456
263: parameter -123.456, offset 16
264: push float -123.456
265: parameter -123.456, offset 24
266: push float -0.000000123456
267: parameter -0.000000123456, offset 32
268: push float -0.000000123456
269: parameter -0.000000123456, offset 40
270: call function noellipse-ellipse printf, extra 0
271: post call
272: call header
273: parameter string_3C2523f3E203C2523e3E203C2523E3E203C2523g3E203C2523G3E0A#, offset 6
274: push float -123.456
275: parameter -123.456, offset 8
276: push float -123.456
277: parameter -123.456, offset 16
278: push float -123.456
279: parameter -123.456, offset 24
280: push float -123.456
281: parameter -123.456, offset 32
282: push float -123.456
283: parameter -123.456, offset 40
284: call function noellipse-ellipse printf, extra 0
285: post call
286: call header
287: parameter string_3C2523lf3E203C2523le3E203C2523lE3E203C2523lg3E203C2523lG3E0A#, offset 6
288: push float -123.456
289: parameter -123.456, offset 8
290: push float -123.456
291: parameter -123.456, offset 16
292: push float -123.456
293: parameter -123.456, offset 24
294: push float -123.456
295: parameter -123.456, offset 32
296: push float -123.456
297: parameter -123.456, offset 40
298: call function noellipse-ellipse printf, extra 0
299: post call
300: call header
301: parameter string_3C2562E3f3E203C2562E3e3E203C2562E3E3E203C2562E3g3E203C2562E3G3E0A#, offset 6
302: push float -123.456
303: parameter -123.456, offset 8
304: push float -123.456
305: parameter -123.456, offset 16
306: push float -123.456
307: parameter -123.456, offset 24
308: push float -123.456
309: parameter -123.456, offset 32
310: push float -123.456
311: parameter -123.456, offset 40
312: call function noellipse-ellipse printf, extra 0
313: post call
314: call header
315: parameter string_3C2562E3lf3E203C2562E3le3E203C2562E3lE3E203C2562E3lg3E203C2562E3lG3E0A0A#, offset 6
316: push float -123.456
317: parameter -123.456, offset 8
318: push float -123.456
319: parameter -123.456, offset 16
320: push float -123.456
321: parameter -123.456, offset 24
322: push float -123.456
323: parameter -123.456, offset 32
324: push float -123.456
325: parameter -123.456, offset 40
326: call function noellipse-ellipse printf, extra 0
327: post call
328: call header
329: parameter string_Please20write20the20patterns205Babc5D3A20#, offset 6
330: call function noellipse-ellipse printf, extra 0
331: post call
332: call header
333: parameter string_255Babc5D#, offset 6
334: parameter s, offset 8
335: call function noellipse-ellipse scanf, extra 0
336: post call
337: call header
338: parameter string_0A3C25s3E0A#, offset 6
339: parameter s, offset 8
340: call function noellipse-ellipse printf, extra 0
341: post call
342: call header
343: parameter string_Please20write20the20patterns205B5Eabc5D3A20#, offset 6
344: call function noellipse-ellipse printf, extra 0
345: post call
346: call header
347: parameter string_255B5Eabc5D#, offset 6
348: parameter s, offset 8
349: call function noellipse-ellipse scanf, extra 0
350: post call
351: call header
352: parameter string_0A3C25s3E#, offset 6
353: parameter s, offset 8
354: call function noellipse-ellipse printf, extra 0
355: post call
356: empty
357: return
358: function end stdio_test
0: call header
1: parameter string_Floating20point20error3A2025i0A#, offset 6
2: parameter sig, offset 8
3: call function noellipse-ellipse printf, extra 0
4: post call
5: empty
6: return
7: function end floating_point_error
0: call header
1: parameter string_exit10A#, offset 6
2: call function noellipse-ellipse printf, extra 0
3: post call
4: empty
5: return
6: function end exit_handle1
0: call header
1: parameter string_exit20A#, offset 6
2: call function noellipse-ellipse printf, extra 0
3: post call
4: empty
5: return
6: function end exit_handle2
0: call header
1: parameter string_exit30A#, offset 6
2: call function noellipse-ellipse printf, extra 0
3: post call
4: empty
5: return
6: function end exit_handle3
0: a = 1
1: b = 1
2: £temporary5765 = a / b
3: c = £temporary5765
4: call header
5: parameter string_25i0A#, offset 6
6: parameter c, offset 8
7: call function noellipse-ellipse printf, extra 0
8: post call
9: call header
10: parameter exit_handle1, offset 6
11: call function noellipse-noellipse atexit
12: post call
13: call header
14: parameter exit_handle2, offset 6
15: call function noellipse-noellipse atexit
16: post call
17: call header
18: parameter exit_handle3, offset 6
19: call function noellipse-noellipse atexit
20: post call
21: call header
22: parameter 0, offset 6
23: call function noellipse-noellipse exit
24: post call
25: empty
26: return
27: function end signal_test
0: call header
1: parameter string_25i20#, offset 6
2: £temporary5777 = i
3: i = i + 1
4: parameter £temporary5777, offset 8
5: call function noellipse-ellipse printf, extra 0
6: post call
7: call header
8: call function noellipse-noellipse stack_test
9: post call
10: empty
11: return
12: function end stack_test
0: count = 0
1: call header
2: parameter 1024, offset 6
3: call function noellipse-noellipse malloc
4: post call
5: £temporary5782 = return_value
6: pointer = £temporary5782
7: if pointer != 0 goto 10
8: goto 19
9: check track map float stack
10: call header
11: parameter string_102420bytes2Dblock20number3A2025i0A#, offset 6
12: £temporary5784 = count
13: count = count + 1
14: parameter £temporary5784, offset 8
15: parameter pointer, offset 10
16: call function noellipse-ellipse printf, extra 0
17: post call
18: goto 1
19: empty
20: return
21: function end heap_test
0: p = 0
1: r = 0
2: call header
3: parameter 96, offset 6
4: call function noellipse-noellipse malloc
5: post call
6: £temporary5790 = return_value
7: q = £temporary5790
8: index = 0
9: empty
10: if index < 10 goto 13
11: goto 28
12: check track map float stack
13: empty
14: call header
15: parameter 96, offset 6
16: call function noellipse-noellipse malloc
17: post call
18: £temporary5793 = return_value
19: p = £temporary5793
20: if index == 5 goto 23
21: goto 25
22: check track map float stack
23: r = p
24: goto 25
25: empty
26: index = index + 1
27: goto 9
28: call header
29: call function noellipse-noellipse print_heap
30: post call
31: call header
32: parameter q, offset 6
33: parameter 50, offset 8
34: call function noellipse-noellipse realloc
35: post call
36: call header
37: call function noellipse-noellipse print_heap
38: post call
39: call header
40: parameter r, offset 6
41: parameter 50, offset 8
42: call function noellipse-noellipse realloc
43: post call
44: call header
45: call function noellipse-noellipse print_heap
46: post call
47: call header
48: parameter p, offset 6
49: parameter 50, offset 8
50: call function noellipse-noellipse realloc
51: post call
52: call header
53: call function noellipse-noellipse print_heap
54: post call
55: call header
56: parameter q, offset 6
57: parameter 200, offset 8
58: call function noellipse-noellipse realloc
59: post call
60: call header
61: call function noellipse-noellipse print_heap
62: post call
63: call header
64: parameter r, offset 6
65: parameter 200, offset 8
66: call function noellipse-noellipse realloc
67: post call
68: call header
69: call function noellipse-noellipse print_heap
70: post call
71: call header
72: parameter p, offset 6
73: parameter 200, offset 8
74: call function noellipse-noellipse realloc
75: post call
76: call header
77: call function noellipse-noellipse print_heap
78: post call
79: empty
80: return
81: function end malloc_test2
0: call header
1: parameter 96, offset 6
2: parameter 1, offset 8
3: call function noellipse-noellipse calloc
4: post call
5: £temporary5822 = return_value
6: a = £temporary5822
7: call header
8: parameter 96, offset 6
9: parameter 1, offset 8
10: call function noellipse-noellipse calloc
11: post call
12: £temporary5823 = return_value
13: b = £temporary5823
14: call header
15: parameter 96, offset 6
16: parameter 1, offset 8
17: call function noellipse-noellipse calloc
18: post call
19: £temporary5824 = return_value
20: c = £temporary5824
21: call header
22: parameter 96, offset 6
23: parameter 1, offset 8
24: call function noellipse-noellipse calloc
25: post call
26: £temporary5825 = return_value
27: d = £temporary5825
28: call header
29: parameter 96, offset 6
30: parameter 1, offset 8
31: call function noellipse-noellipse calloc
32: post call
33: £temporary5826 = return_value
34: e = £temporary5826
35: call header
36: call function noellipse-noellipse print_heap
37: post call
38: call header
39: parameter a, offset 6
40: call function noellipse-noellipse free
41: post call
42: call header
43: parameter b, offset 6
44: call function noellipse-noellipse free
45: post call
46: call header
47: parameter c, offset 6
48: call function noellipse-noellipse free
49: post call
50: call header
51: parameter d, offset 6
52: call function noellipse-noellipse free
53: post call
54: call header
55: parameter e, offset 6
56: call function noellipse-noellipse free
57: post call
58: call header
59: call function noellipse-noellipse print_heap
60: post call
61: empty
62: return
63: function end malloc_test3
0: £temporary5849 = bp
1: stackTop = £temporary5849
2: lowHeapPtr = 65534
3: call header
4: parameter string_Stack20Top3A2025u2C20Low20Heap3A2025u0A#, offset 6
5: parameter stackTop, offset 8
6: £temporary5850 -> lowHeapPtr = *lowHeapPtr
7: parameter £temporary5850 -> lowHeapPtr, offset 10
8: call function noellipse-ellipse printf, extra 0
9: post call
10: call header
11: call function noellipse-noellipse rec
12: post call
13: empty
14: return
15: function end rec
0: call header
1: call function noellipse-noellipse rec
2: post call
3: empty
4: return
5: function end malloc_test4
0: call header
1: parameter 96, offset 6
2: call function noellipse-noellipse malloc
3: post call
4: £temporary5857 = return_value
5: b = £temporary5857
6: call header
7: parameter 96, offset 6
8: call function noellipse-noellipse malloc
9: post call
10: £temporary5858 = return_value
11: c = £temporary5858
12: call header
13: parameter 96, offset 6
14: call function noellipse-noellipse malloc
15: post call
16: £temporary5859 = return_value
17: d = £temporary5859
18: call header
19: call function noellipse-noellipse print_heap
20: post call
21: call header
22: parameter c, offset 6
23: parameter 40, offset 8
24: call function noellipse-noellipse realloc
25: post call
26: call header
27: call function noellipse-noellipse print_heap
28: post call
29: call header
30: parameter 40, offset 6
31: call function noellipse-noellipse malloc
32: post call
33: call header
34: call function noellipse-noellipse print_heap
35: post call
36: call header
37: parameter b, offset 6
38: call function noellipse-noellipse free
39: post call
40: call header
41: call function noellipse-noellipse print_heap
42: post call
43: call header
44: parameter d, offset 6
45: call function noellipse-noellipse free
46: post call
47: call header
48: call function noellipse-noellipse print_heap
49: post call
50: empty
51: return
52: function end malloc_test
0: £temporary5877 = bp
1: stackTop = £temporary5877
2: lowHeapPtr = 65534
3: i = 0
4: empty
5: if i < 1000 goto 8
6: goto 27
7: check track map float stack
8: empty
9: call header
10: parameter 96, offset 6
11: call function noellipse-noellipse malloc
12: post call
13: £temporary5880 = return_value
14: p = £temporary5880
15: call header
16: parameter string_Index3A2025i2C20Pointer3A2025u2C20Stack20top3A2025u2C20Low20Heap3A2025u0A#, offset 6
17: parameter i, offset 8
18: parameter p, offset 10
19: parameter stackTop, offset 12
20: £temporary5881 -> lowHeapPtr = *lowHeapPtr
21: parameter £temporary5881 -> lowHeapPtr, offset 14
22: call function noellipse-ellipse printf, extra 0
23: post call
24: empty
25: i = i + 1
26: goto 4
27: empty
28: return
29: function end malloc_test6
0: £temporary5889 = int_to_int valuePtr1 (Pointer -> Pointer)
1: £temporary5890 -> £temporary5889 = *£temporary5889
2: intValue1 = £temporary5890 -> £temporary5889
3: £temporary5891 = int_to_int valuePtr2 (Pointer -> Pointer)
4: £temporary5892 -> £temporary5891 = *£temporary5891
5: intValue2 = £temporary5892 -> £temporary5891
6: if intValue1 < intValue2 goto 8
7: goto 11
8: empty
9: £temporary5902 = -1
10: goto 21
11: empty
12: if intValue1 == intValue2 goto 14
13: goto 17
14: empty
15: £temporary5898 = 0
16: goto 19
17: empty
18: £temporary5898 = 1
19: empty
20: £temporary5902 = £temporary5898
21: empty
22: return_value = £temporary5902
23: return
24: empty
25: return
26: function end compare
0: £temporary5903 = int_to_int valuePtr1 (Pointer -> Pointer)
1: £temporary5904 -> £temporary5903 = *£temporary5903
2: intValue1 = £temporary5904 -> £temporary5903
3: £temporary5905 = int_to_int valuePtr2 (Pointer -> Pointer)
4: £temporary5906 -> £temporary5905 = *£temporary5905
5: intValue2 = £temporary5906 -> £temporary5905
6: if intValue1 < intValue2 goto 8
7: goto 11
8: empty
9: £temporary5916 = 1
10: goto 21
11: empty
12: if intValue1 == intValue2 goto 14
13: goto 17
14: empty
15: £temporary5912 = 0
16: goto 19
17: empty
18: £temporary5912 = -1
19: empty
20: £temporary5916 = £temporary5912
21: empty
22: return_value = £temporary5916
23: return
24: empty
25: return
26: function end reverse_compare
0: call header
1: parameter string_div_t20quot2025i20rem2025i0A#, offset 6
2: parameter d$quot, offset 8
3: parameter d$rem, offset 10
4: call function noellipse-ellipse printf, extra 0
5: post call
6: d$quot = d$quot + 1
7: d$rem = d$rem + 1
8: return_value = d
9: return
10: empty
11: return
12: function end print_div
0: call header
1: parameter string_ldiv_t20quot2025li20rem2025li0A#, offset 6
2: parameter ld$quot, offset 8
3: parameter ld$rem, offset 12
4: call function noellipse-ellipse printf, extra 0
5: post call
6: ld$quot = ld$quot - 1
7: ld$rem = ld$rem - 1
8: return_value = ld
9: return
10: empty
11: return
12: function end print_ldiv
0: call header
1: parameter string_exit10A#, offset 6
2: call function noellipse-ellipse printf, extra 0
3: post call
4: empty
5: return
6: function end exit_handle1x
0: call header
1: parameter string_exit20A#, offset 6
2: call function noellipse-ellipse printf, extra 0
3: post call
4: empty
5: return
6: function end exit_handle2x
0: call header
1: parameter string_exit30A#, offset 6
2: call function noellipse-ellipse printf, extra 0
3: post call
4: empty
5: return
6: function end exit_handle3x
0: call header
1: parameter string_HelloFFF#, offset 6
2: call function noellipse-ellipse printf, extra 0
3: post call
4: empty
5: return
6: function end hello
0: call header
1: parameter string_f3A2025u0A#, offset 6
2: £temporary5947 = int_to_int f (Pointer -> Unsigned_Int)
3: parameter £temporary5947, offset 8
4: call function noellipse-ellipse printf, extra 0
5: post call
6: call header
7: call function noellipse-noellipse f
8: post call
9: empty
10: return
11: function end qtest
0: call header
1: parameter string_hello3A2025u0A#, offset 6
2: £temporary5952 = int_to_int hello (Function -> Unsigned_Int)
3: parameter £temporary5952, offset 8
4: call function noellipse-ellipse printf, extra 0
5: post call
6: call header
7: parameter hello, offset 6
8: call function noellipse-noellipse qtest
9: post call
10: call header
11: parameter string_Y#, offset 6
12: call function noellipse-ellipse printf, extra 0
13: post call
14: empty
15: return
16: function end stdlib_testZ
0: call header
1: parameter string_atof28221232E4562229203D2025f0A#, offset 6
2: call header
3: parameter string_1232E456#, offset 14
4: call function noellipse-noellipse atof
5: post call
6: £temporary5960 = return_value
7: parameter £temporary5960, offset 8
8: call function noellipse-ellipse printf, extra 0
9: post call
10: call header
11: parameter string_strtod28221232E456789abc222C2026p29203D202825f2C2025s290A#, offset 6
12: call header
13: parameter string_1232E456789abc#, offset 14
14: £temporary5962 = &p
15: parameter £temporary5962, offset 16
16: call function noellipse-noellipse strtod
17: post call
18: £temporary5963 = return_value
19: parameter £temporary5963, offset 8
20: parameter p, offset 16
21: call function noellipse-ellipse printf, extra 0
22: post call
23: call header
24: parameter string_0Agetenv2822path2229203D2025s0A#, offset 6
25: call header
26: parameter string_path#, offset 14
27: call function noellipse-noellipse getenv
28: post call
29: £temporary5965 = return_value
30: parameter £temporary5965, offset 8
31: call function noellipse-ellipse printf, extra 0
32: post call
33: call header
34: parameter string_system2822dir22290A#, offset 6
35: call function noellipse-ellipse printf, extra 0
36: post call
37: call header
38: parameter string_dir#, offset 6
39: call function noellipse-noellipse system
40: post call
41: call header
42: parameter string_0Aabs282D329203D2025i2C20abs28329203D2025i0A#, offset 6
43: call header
44: parameter -3, offset 14
45: call function noellipse-noellipse _abs
46: post call
47: £temporary5969 = return_value
48: parameter £temporary5969, offset 8
49: call header
50: parameter 3, offset 16
51: call function noellipse-noellipse _abs
52: post call
53: £temporary5970 = return_value
54: parameter £temporary5970, offset 10
55: call function noellipse-ellipse printf, extra 0
56: post call
57: call header
58: parameter string_labs282D3l29203D2025li2C20labs283l29203D2025li0A0A#, offset 6
59: call header
60: parameter -3, offset 14
61: call function noellipse-noellipse labs
62: post call
63: £temporary5972 = return_value
64: parameter £temporary5972, offset 8
65: call header
66: parameter 3, offset 18
67: call function noellipse-noellipse labs
68: post call
69: £temporary5973 = return_value
70: parameter £temporary5973, offset 12
71: call function noellipse-ellipse printf, extra 0
72: post call
73: call header
74: parameter 10, offset 6
75: parameter 3, offset 8
76: call function noellipse-noellipse div
77: post call
78: £temporary5975 -> £temporary5976 = return_value
79: i = £temporary5975 -> £temporary5976
80: call header
81: parameter string_div_t28102C20329203D202825i2C2025i290A#, offset 6
82: parameter i$quot, offset 8
83: parameter i$rem, offset 10
84: call function noellipse-ellipse printf, extra 0
85: post call
86: call header
87: parameter i, offset 6
88: call function noellipse-noellipse print_div
89: post call
90: £temporary5980 -> £temporary5981 = return_value
91: j = £temporary5980 -> £temporary5981
92: call header
93: parameter string_div_t28102C20329203D202825i2C2025i290A0A#, offset 6
94: parameter j$quot, offset 8
95: parameter j$rem, offset 10
96: call function noellipse-ellipse printf, extra 0
97: post call
98: call header
99: parameter 10, offset 6
100: parameter 3, offset 10
101: call function noellipse-noellipse ldiv
102: post call
103: £temporary5985 -> £temporary5986 = return_value
104: li = £temporary5985 -> £temporary5986
105: call header
106: parameter string_ldiv_t28102C20329203D202825li2C2025li290A#, offset 6
107: parameter li$quot, offset 8
108: parameter li$rem, offset 12
109: call function noellipse-ellipse printf, extra 0
110: post call
111: call header
112: parameter li, offset 6
113: call function noellipse-noellipse print_ldiv
114: post call
115: £temporary5990 -> £temporary5991 = return_value
116: lj = £temporary5990 -> £temporary5991
117: call header
118: parameter string_ldiv_t28102C20329203D202825li2C2025li290A0A#, offset 6
119: parameter lj$quot, offset 8
120: parameter lj$rem, offset 12
121: call function noellipse-ellipse printf, extra 0
122: post call
123: list[0] = 3
124: list[1] = 4
125: list[2] = 2
126: list[3] = 1
127: size = 4
128: call header
129: parameter string_0AA20List2013A20#, offset 6
130: call function noellipse-ellipse printf, extra 0
131: post call
132: index = 0
133: empty
134: if index < size goto 137
135: goto 149
136: check track map float stack
137: empty
138: call header
139: parameter string_25i20#, offset 6
140: £temporary6003 = index * 2
141: £temporary6004 = list + £temporary6003
142: £temporary6005 -> £temporary6004 = *£temporary6004
143: parameter £temporary6005 -> £temporary6004, offset 8
144: call function noellipse-ellipse printf, extra 0
145: post call
146: empty
147: index = index + 1
148: goto 133
149: call header
150: parameter string_0AB20List2023A20#, offset 6
151: call function noellipse-ellipse printf, extra 0
152: post call
153: call header
154: parameter list, offset 6
155: parameter size, offset 8
156: parameter 2, offset 10
157: parameter compare, offset 12
158: call function noellipse-ellipse qsort, extra 0
159: post call
160: index = 0
161: empty
162: if index < size goto 165
163: goto 177
164: check track map float stack
165: empty
166: call header
167: parameter string_25i20#, offset 6
168: £temporary6012 = index * 2
169: £temporary6013 = list + £temporary6012
170: £temporary6014 -> £temporary6013 = *£temporary6013
171: parameter £temporary6014 -> £temporary6013, offset 8
172: call function noellipse-ellipse printf, extra 0
173: post call
174: empty
175: index = index + 1
176: goto 161
177: call header
178: parameter string_0AC20List2033A20#, offset 6
179: call function noellipse-ellipse printf, extra 0
180: post call
181: call header
182: parameter list, offset 6
183: parameter size, offset 8
184: parameter 2, offset 10
185: parameter reverse_compare, offset 12
186: call function noellipse-ellipse qsort, extra 0
187: post call
188: index = 0
189: empty
190: if index < size goto 193
191: goto 205
192: check track map float stack
193: empty
194: call header
195: parameter string_25i20#, offset 6
196: £temporary6021 = index * 2
197: £temporary6022 = list + £temporary6021
198: £temporary6023 -> £temporary6022 = *£temporary6022
199: parameter £temporary6023 -> £temporary6022, offset 8
200: call function noellipse-ellipse printf, extra 0
201: post call
202: empty
203: index = index + 1
204: goto 189
205: call header
206: parameter string_0A0ASearch3A0A#, offset 6
207: call function noellipse-ellipse printf, extra 0
208: post call
209: key = 0
210: empty
211: if key < 6 goto 214
212: goto 247
213: check track map float stack
214: empty
215: call header
216: £temporary6028 = &key
217: parameter £temporary6028, offset 6
218: parameter list, offset 8
219: parameter size, offset 10
220: parameter 2, offset 12
221: parameter compare, offset 14
222: call function noellipse-noellipse bsearch
223: post call
224: £temporary6030 = return_value
225: £temporary6031 = int_to_int £temporary6030 (Pointer -> Pointer)
226: p = £temporary6031
227: if p != 0 goto 229
228: goto 234
229: empty
230: £temporary6033 = p - list
231: £temporary6034 = £temporary6033 / 2
232: £temporary6038 = £temporary6034
233: goto 236
234: empty
235: £temporary6038 = -1
236: empty
237: index = £temporary6038
238: call header
239: parameter string_20202825i2C2025i290A#, offset 6
240: parameter key, offset 8
241: parameter index, offset 10
242: call function noellipse-ellipse printf, extra 0
243: post call
244: empty
245: key = key + 1
246: goto 210
247: call header
248: parameter string_0A#, offset 6
249: call function noellipse-ellipse printf, extra 0
250: post call
251: empty
252: return
253: function end stdlib_test
0: weekdays[0] = string_Sun#
1: weekdays[1] = string_Mon#
2: weekdays[2] = string_Tue#
3: weekdays[3] = string_Wed#
4: weekdays[4] = string_Thu#
5: weekdays[5] = string_Fri#
6: weekdays[6] = string_Sat#
7: call header
8: parameter 0, offset 6
9: call function noellipse-noellipse time
10: post call
11: £temporary6126 = return_value
12: now = £temporary6126
13: call header
14: £temporary6127 = &now
15: parameter £temporary6127, offset 6
16: call function noellipse-noellipse gmtime
17: post call
18: £temporary6128 = return_value
19: p = £temporary6128
20: call header
21: parameter p, offset 6
22: call function noellipse-noellipse mktime
23: post call
24: £temporary6129 = return_value
25: now2 = £temporary6129
26: £temporary6130 -> p = *p
27: s = £temporary6130 -> p
28: call header
29: parameter string_now2013A2025lu0A#, offset 6
30: parameter now, offset 8
31: call function noellipse-ellipse printf, extra 0
32: post call
33: call header
34: parameter string_now2023A2025lu0A#, offset 6
35: parameter now2, offset 8
36: call function noellipse-ellipse printf, extra 0
37: post call
38: call header
39: parameter string_202020gm20time3A2025s202502i2D2502i2D2502i202502i3A2502i3A2502i2C20year20day2025i2C20week20day2025i2C20daylight20saving20time2025i0A#, offset 6
40: £temporary6135 = s$tm_wday * 2
41: £temporary6136 = weekdays + £temporary6135
42: £temporary6134 -> £temporary6136 = *£temporary6136
43: parameter £temporary6134 -> £temporary6136, offset 8
44: £temporary6138 = 1900 + s$tm_year
45: parameter £temporary6138, offset 10
46: £temporary6140 = s$tm_mon + 1
47: parameter £temporary6140, offset 12
48: parameter s$tm_mday, offset 14
49: parameter s$tm_hour, offset 16
50: parameter s$tm_min, offset 18
51: parameter s$tm_sec, offset 20
52: parameter s$tm_yday, offset 22
53: parameter s$tm_wday, offset 24
54: parameter s$tm_isdst, offset 26
55: call function noellipse-ellipse printf, extra 0
56: post call
57: call header
58: £temporary6149 = &now
59: parameter £temporary6149, offset 6
60: call function noellipse-noellipse localtime
61: post call
62: £temporary6150 = return_value
63: £temporary6151 -> £temporary6150 = *£temporary6150
64: s = £temporary6151 -> £temporary6150
65: call header
66: parameter string_local20time3A2025s202502i2D2502i2D2502i202502i3A2502i3A2502i2C20year20day2025i2C20week20day2025i2C20daylight20saving20time2025i0A#, offset 6
67: £temporary6154 = s$tm_wday * 2
68: £temporary6155 = weekdays + £temporary6154
69: £temporary6153 -> £temporary6155 = *£temporary6155
70: parameter £temporary6153 -> £temporary6155, offset 8
71: £temporary6157 = 1900 + s$tm_year
72: parameter £temporary6157, offset 10
73: £temporary6159 = s$tm_mon + 1
74: parameter £temporary6159, offset 12
75: parameter s$tm_mday, offset 14
76: parameter s$tm_hour, offset 16
77: parameter s$tm_min, offset 18
78: parameter s$tm_sec, offset 20
79: parameter s$tm_yday, offset 22
80: parameter s$tm_wday, offset 24
81: parameter s$tm_isdst, offset 26
82: call function noellipse-ellipse printf, extra 0
83: post call
84: call header
85: parameter buffer1, offset 6
86: call header
87: £temporary6168 = &s
88: parameter £temporary6168, offset 112
89: call function noellipse-noellipse asctime
90: post call
91: £temporary6169 = return_value
92: parameter £temporary6169, offset 8
93: call function noellipse-noellipse strcpy
94: post call
95: call header
96: parameter buffer2, offset 6
97: call header
98: £temporary6171 = &now
99: parameter £temporary6171, offset 112
100: call function noellipse-noellipse ctime
101: post call
102: £temporary6172 = return_value
103: parameter £temporary6172, offset 8
104: call function noellipse-noellipse strcpy
105: post call
106: call header
107: parameter string_asctime203C25s3E2C20ctime203C25s3E0A#, offset 6
108: parameter buffer1, offset 8
109: parameter buffer2, offset 10
110: call function noellipse-ellipse printf, extra 0
111: post call
112: call header
113: parameter buffer, offset 6
114: parameter 300, offset 8
115: parameter string_short20day2025a2C20long20day2025A2C20short20month2025b2C20long20month2025B2C20date2Dtime2025c2C20mday2025d2C20hour2025H2C20gm20hour2025I2C20yday2025j2C20month2025m2C20min2025M2C20am2Fpm2025p2C20sec2025S2C20week20number20sun2025U2C20week20day2025w2C20week20number20mon2025W2C20date2025x2C20time2025X2C20short20year2025y2C20long20year2025Y#, offset 10
116: £temporary6175 = &s
117: parameter £temporary6175, offset 12
118: call function noellipse-noellipse strftime
119: post call
120: £temporary6176 = return_value
121: i = £temporary6176
122: call header
123: parameter string_strftime203C25i3E203C25s3E0A#, offset 6
124: parameter i, offset 8
125: parameter buffer, offset 10
126: call function noellipse-ellipse printf, extra 0
127: post call
128: empty
129: return
130: function end time_test
