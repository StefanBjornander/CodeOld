1:	

main2:	; Assign a$p 0
2:		mov word [a], 0
4:	

main2$1:	; Assign a$q 0
5:		mov word [a + 2], 0
7:	

main2$2:	; CallHeader 6 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
9:	

main2$3:	; Parameter 6 string_test12Etxt# 6
10:		mov word [bp + 12], string_test12Etxt#
12:	

main2$4:	; Parameter 6 string_test22Etxt# 8
13:		mov word [bp + 14], string_test22Etxt#
15:	

main2$5:	; Call 6 file_test 0
16:		mov word [bp + 6], main2$6
17:		mov [bp + 8], bp
18:		add bp, 6
19:		jmp file_test
21:	

main2$6:	; PostCall 6
23:	

main2$7:	; Return 0
24:		mov ax, [bp]
25:		mov di, [bp + 4]
26:		mov bp, [bp + 2]
27:		jmp ax
29:	

main2$8:	; FunctionEnd main2
1:	

main33:	; Assign s[0] 72
2:		mov byte [bp + 6], 72
4:	

main33$1:	; Assign s[1] 101
5:		mov byte [bp + 7], 101
7:	

main33$2:	; Assign s[2] 108
8:		mov byte [bp + 8], 108
10:	

main33$3:	; Assign s[3] 108
11:		mov byte [bp + 9], 108
13:	

main33$4:	; Assign s[4] 111
14:		mov byte [bp + 10], 111
16:	

main33$5:	; Assign s[5] 0
17:		mov byte [bp + 11], 0
19:	

main33$6:	; Assign t[0] 87
20:		mov byte [bp + 26], 87
22:	

main33$7:	; Assign t[1] 111
23:		mov byte [bp + 27], 111
25:	

main33$8:	; Assign t[2] 114
26:		mov byte [bp + 28], 114
28:	

main33$9:	; Assign t[3] 108
29:		mov byte [bp + 29], 108
31:	

main33$10:	; Assign t[4] 100
32:		mov byte [bp + 30], 100
34:	

main33$11:	; Assign t[5] 0
35:		mov byte [bp + 31], 0
37:	

main33$12:	; CallHeader 46 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
39:	

main33$13:	; Parameter 46 string_3C25s3E203C25s3E0A# 6
40:		mov word [bp + 52], string_3C25s3E203C25s3E0A#
42:	

main33$14:	; Parameter 46 s 8
43:		mov [bp + 54], bp
44:		add word [bp + 54], 6
46:	

main33$15:	; Parameter 46 t 10
47:		mov [bp + 56], bp
48:		add word [bp + 56], 26
50:	

main33$16:	; Call 46 printf 0
51:		mov word [bp + 46], main33$17
52:		mov [bp + 48], bp
53:		add bp, 46
54:		mov di, bp
55:		add di, 4
56:		jmp printf
58:	

main33$17:	; PostCall 46
60:	

main33$18:	; Return 0
61:		mov ax, [bp]
62:		mov di, [bp + 4]
63:		mov bp, [bp + 2]
64:		jmp ax
66:	

main33$19:	; FunctionEnd main33
1:	

main34:	; Assign g_outDevice stdout
2:		mov ax, [stdout]
3:		mov [g_outDevice], ax
5:	

main34$1:	; CallHeader 6 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
7:	

main34$2:	; Parameter 6 88 6
8:		mov byte [bp + 12], 88
10:	

main34$3:	; Call 6 printChar 0
11:		mov word [bp + 6], main34$4
12:		mov [bp + 8], bp
13:		add bp, 6
14:		jmp printChar
16:	

main34$4:	; PostCall 6
18:	

main34$5:	; CallHeader 6 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
20:	

main34$6:	; Parameter 6 10 6
21:		mov byte [bp + 12], 10
23:	

main34$7:	; Call 6 printChar 0
24:		mov word [bp + 6], main34$8
25:		mov [bp + 8], bp
26:		add bp, 6
27:		jmp printChar
29:	

main34$8:	; PostCall 6
31:	

main34$9:	; Return 0
32:		mov ax, [bp]
33:		mov di, [bp + 4]
34:		mov bp, [bp + 2]
35:		jmp ax
37:	

main34$10:	; FunctionEnd main34
1:	

mainc:	; CallHeader 7 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
3:	

mainc$1:	; Parameter 7 string_Please20write20a20character3A20# 6
4:		mov word [bp + 13], string_Please20write20a20character3A20#
6:	

mainc$2:	; Call 7 printf 0
7:		mov word [bp + 7], mainc$3
8:		mov [bp + 9], bp
9:		add bp, 7
10:		mov di, bp
11:		jmp printf
13:	

mainc$3:	; PostCall 7
15:	

mainc$4:	; CallHeader 7 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
17:	

mainc$5:	; Parameter 7 string_25c# 6
18:		mov word [bp + 13], string_25c#
20:	

mainc$6:	; address £temporary26 c
21:		mov si, bp
22:		add si, 6
24:	

mainc$7:	; Parameter 7 £temporary26 8
25:		mov [bp + 15], si
27:	

mainc$8:	; Call 7 scanf 0
28:		mov word [bp + 7], mainc$9
29:		mov [bp + 9], bp
30:		add bp, 7
31:		mov di, bp
32:		add di, 2
33:		jmp scanf
35:	

mainc$9:	; PostCall 7
37:	

mainc$10:	; CallHeader 7 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
39:	

mainc$11:	; Parameter 7 string_You20wrote20the20character202725c272E0A# 6
40:		mov word [bp + 13], string_You20wrote20the20character202725c272E0A#
42:	

mainc$12:	; IntegralToIntegral £temporary28 c
43:		mov al, [bp + 6]
45:		and ax, 255
47:		cmp al, 0
48:		jge mainc$13
49:		neg al
51:		neg ax
53:	

mainc$13:	; Parameter 7 £temporary28 8
54:		mov [bp + 15], ax
56:	

mainc$14:	; Call 7 printf 0
57:		mov word [bp + 7], mainc$15
58:		mov [bp + 9], bp
59:		add bp, 7
60:		mov di, bp
61:		add di, 2
62:		jmp printf
64:	

mainc$15:	; PostCall 7
66:	

mainc$16:	; Return 0
67:		mov ax, [bp]
68:		mov di, [bp + 4]
69:		mov bp, [bp + 2]
70:		jmp ax
72:	

mainc$17:	; FunctionEnd mainc
1:	

maini:	; CallHeader 8 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
3:	

maini$1:	; Parameter 8 string_Please20write20an20integer3A20# 6
4:		mov word [bp + 14], string_Please20write20an20integer3A20#
6:	

maini$2:	; Call 8 printf 0
7:		mov word [bp + 8], maini$3
8:		mov [bp + 10], bp
9:		add bp, 8
10:		mov di, bp
11:		jmp printf
13:	

maini$3:	; PostCall 8
15:	

maini$4:	; CallHeader 8 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
17:	

maini$5:	; Parameter 8 string_25i# 6
18:		mov word [bp + 14], string_25i#
20:	

maini$6:	; address £temporary37 i
21:		mov si, bp
22:		add si, 6
24:	

maini$7:	; Parameter 8 £temporary37 8
25:		mov [bp + 16], si
27:	

maini$8:	; Call 8 scanf 0
28:		mov word [bp + 8], maini$9
29:		mov [bp + 10], bp
30:		add bp, 8
31:		mov di, bp
32:		add di, 2
33:		jmp scanf
35:	

maini$9:	; PostCall 8
37:	

maini$10:	; CallHeader 8 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
39:	

maini$11:	; Parameter 8 string_You20wrote20the20integer2025i2E0A# 6
40:		mov word [bp + 14], string_You20wrote20the20integer2025i2E0A#
42:	

maini$12:	; Parameter 8 i 8
43:		mov ax, [bp + 6]
44:		mov [bp + 16], ax
46:	

maini$13:	; Call 8 printf 0
47:		mov word [bp + 8], maini$14
48:		mov [bp + 10], bp
49:		add bp, 8
50:		mov di, bp
51:		add di, 2
52:		jmp printf
54:	

maini$14:	; PostCall 8
56:	

maini$15:	; Return 0
57:		mov ax, [bp]
58:		mov di, [bp + 4]
59:		mov bp, [bp + 2]
60:		jmp ax
62:	

maini$16:	; FunctionEnd maini
1:	

mains:	; CallHeader 26 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
3:	

mains$1:	; Parameter 26 string_Please20write20a20string3A20# 6
4:		mov word [bp + 32], string_Please20write20a20string3A20#
6:	

mains$2:	; Call 26 printf 0
7:		mov word [bp + 26], mains$3
8:		mov [bp + 28], bp
9:		add bp, 26
10:		mov di, bp
11:		jmp printf
13:	

mains$3:	; PostCall 26
15:	

mains$4:	; CallHeader 26 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
17:	

mains$5:	; Parameter 26 string_25s# 6
18:		mov word [bp + 32], string_25s#
20:	

mains$6:	; Parameter 26 s 8
21:		mov [bp + 34], bp
22:		add word [bp + 34], 6
24:	

mains$7:	; Call 26 scanf 0
25:		mov word [bp + 26], mains$8
26:		mov [bp + 28], bp
27:		add bp, 26
28:		mov di, bp
29:		add di, 2
30:		jmp scanf
32:	

mains$8:	; PostCall 26
34:	

mains$9:	; CallHeader 26 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
36:	

mains$10:	; Parameter 26 string_You20wrote20the20string202225s222E0A# 6
37:		mov word [bp + 32], string_You20wrote20the20string202225s222E0A#
39:	

mains$11:	; Parameter 26 s 8
40:		mov [bp + 34], bp
41:		add word [bp + 34], 6
43:	

mains$12:	; Call 26 printf 0
44:		mov word [bp + 26], mains$13
45:		mov [bp + 28], bp
46:		add bp, 26
47:		mov di, bp
48:		add di, 2
49:		jmp printf
51:	

mains$13:	; PostCall 26
53:	

mains$14:	; Return 0
54:		mov ax, [bp]
55:		mov di, [bp + 4]
56:		mov bp, [bp + 2]
57:		jmp ax
59:	

mains$15:	; FunctionEnd mains
1:	

maint:	; CallHeader 6 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
3:	

maint$1:	; Call 6 limits_test 0
4:		mov word [bp + 6], maint$2
5:		mov [bp + 8], bp
6:		add bp, 6
7:		jmp limits_test
9:	

maint$2:	; PostCall 6
11:	

maint$3:	; CallHeader 6 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
13:	

maint$4:	; Call 6 time_test 0
14:		mov word [bp + 6], maint$5
15:		mov [bp + 8], bp
16:		add bp, 6
17:		jmp time_test
19:	

maint$5:	; PostCall 6
21:	

maint$6:	; Return 0
22:		mov ax, [bp]
23:		mov di, [bp + 4]
24:		mov bp, [bp + 2]
25:		jmp ax
27:	

maint$7:	; FunctionEnd maint
1:	

mainY:	; CallHeader 6 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
3:	

mainY$1:	; Call 6 malloc_test 0
4:		mov word [bp + 6], mainY$2
5:		mov [bp + 8], bp
6:		add bp, 6
7:		jmp malloc_test
9:	

mainY$2:	; PostCall 6
11:	

mainY$3:	; CallHeader 6 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
13:	

mainY$4:	; PushFloat 10
14:		fld qword [float8$10#]
16:	

mainY$5:	; Parameter 6 10 6
17:		fstp qword [bp + 12]
19:	

mainY$6:	; Call 6 setjmp_test 0
20:		mov word [bp + 6], mainY$7
21:		mov [bp + 8], bp
22:		add bp, 6
23:		jmp setjmp_test
25:	

mainY$7:	; PostCall 6
27:	

mainY$8:	; CallHeader 6 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
29:	

mainY$9:	; PushZero
30:		fldz
32:	

mainY$10:	; Parameter 6 0 6
33:		fstp qword [bp + 12]
35:	

mainY$11:	; Call 6 setjmp_test 0
36:		mov word [bp + 6], mainY$12
37:		mov [bp + 8], bp
38:		add bp, 6
39:		jmp setjmp_test
41:	

mainY$12:	; PostCall 6
43:	

mainY$13:	; Return 0
44:		mov ax, [bp]
45:		mov di, [bp + 4]
46:		mov bp, [bp + 2]
47:		jmp ax
49:	

mainY$14:	; FunctionEnd mainY
1:	

mainX:	; Assign index 129
2:		mov word [bp + 10], 129
4:	

mainX$1:	; SignedGreaterThanEqual 16 index 255
5:		cmp word [bp + 10], 255
6:		jge mainX$16
8:	

mainX$2:	; IntegralToIntegral £temporary63 index
9:		mov si, [bp + 10]
12:	

mainX$3:	; Deref £temporary64 -> £temporary63 £temporary63 0
14:	

mainX$4:	; Assign c £temporary64 -> £temporary63
15:		mov al, [si]
16:		mov [bp + 12], al
18:	

mainX$5:	; CallHeader 13 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
20:	

mainX$6:	; Parameter 13 string_25i3A2025i203C25c3E0A# 6
21:		mov word [bp + 19], string_25i3A2025i203C25c3E0A#
23:	

mainX$7:	; Parameter 13 index 8
24:		mov ax, [bp + 10]
25:		mov [bp + 21], ax
27:	

mainX$8:	; IntegralToIntegral £temporary65 c
28:		mov al, [bp + 12]
30:		and ax, 255
32:		cmp al, 0
33:		jge mainX$9
34:		neg al
36:		neg ax
38:	

mainX$9:	; Parameter 13 £temporary65 10
39:		mov [bp + 23], ax
41:	

mainX$10:	; IntegralToIntegral £temporary66 c
42:		mov al, [bp + 12]
44:		and ax, 255
46:		cmp al, 0
47:		jge mainX$11
48:		neg al
50:		neg ax
52:	

mainX$11:	; Parameter 13 £temporary66 12
53:		mov [bp + 25], ax
55:	

mainX$12:	; Call 13 printf 0
56:		mov word [bp + 13], mainX$13
57:		mov [bp + 15], bp
58:		add bp, 13
59:		mov di, bp
60:		add di, 6
61:		jmp printf
63:	

mainX$13:	; PostCall 13
65:	

mainX$14:	; Increment index
66:		inc word [bp + 10]
68:	

mainX$15:	; Goto 1
69:		jmp mainX$1
71:	

mainX$16:	; CallHeader 12 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
73:	

mainX$17:	; Parameter 12 string_0Aargc3A2025i0A# 6
74:		mov word [bp + 18], string_0Aargc3A2025i0A#
76:	

mainX$18:	; Parameter 12 argc 8
77:		mov ax, [bp + 6]
78:		mov [bp + 20], ax
80:	

mainX$19:	; Call 12 printf 0
81:		mov word [bp + 12], mainX$20
82:		mov [bp + 14], bp
83:		add bp, 12
84:		mov di, bp
85:		add di, 2
86:		jmp printf
88:	

mainX$20:	; PostCall 12
90:	

mainX$21:	; Assign index 0
91:		mov word [bp + 10], 0
93:	

mainX$22:	; SignedGreaterThanEqual 34 index argc
94:		mov ax, [bp + 6]
95:		cmp [bp + 10], ax
96:		jge mainX$34
98:	

mainX$23:	; CallHeader 12 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
100:	

mainX$24:	; Parameter 12 string_25i3A203C25s3E0A# 6
101:		mov word [bp + 18], string_25i3A203C25s3E0A#
103:	

mainX$25:	; Parameter 12 index 8
104:		mov ax, [bp + 10]
105:		mov [bp + 20], ax
107:	

mainX$26:	; UnsignedMultiply £temporary72 index 2
108:		mov ax, [bp + 10]
110:		xor dx, dx
111:		mul word [int2$2#]
117:	

mainX$27:	; BinaryAdd £temporary73 argv £temporary72
118:		mov si, [bp + 8]
119:		add si, ax
121:	

mainX$28:	; Deref £temporary71 -> £temporary73 £temporary73 0
123:	

mainX$29:	; Parameter 12 £temporary71 -> £temporary73 10
124:		mov ax, [si]
125:		mov [bp + 22], ax
127:	

mainX$30:	; Call 12 printf 0
128:		mov word [bp + 12], mainX$31
129:		mov [bp + 14], bp
130:		add bp, 12
131:		mov di, bp
132:		add di, 4
133:		jmp printf
135:	

mainX$31:	; PostCall 12
137:	

mainX$32:	; Increment index
138:		inc word [bp + 10]
140:	

mainX$33:	; Goto 22
141:		jmp mainX$22
143:	

mainX$34:	; CallHeader 12 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
145:	

mainX$35:	; Parameter 12 string_0A# 6
146:		mov word [bp + 18], string_0A#
148:	

mainX$36:	; Call 12 printf 0
149:		mov word [bp + 12], mainX$37
150:		mov [bp + 14], bp
151:		add bp, 12
152:		mov di, bp
153:		jmp printf
155:	

mainX$37:	; PostCall 12
157:	

mainX$38:	; Assign index 0
158:		mov word [bp + 10], 0
160:	

mainX$39:	; UnsignedMultiply £temporary77 index 2
161:		mov ax, [bp + 10]
163:		xor dx, dx
164:		mul word [int2$2#]
170:	

mainX$40:	; BinaryAdd £temporary78 argv £temporary77
171:		mov si, [bp + 8]
172:		add si, ax
174:	

mainX$41:	; Deref £temporary76 -> £temporary78 £temporary78 0
176:	

mainX$42:	; Equal 54 £temporary76 -> £temporary78 0
177:		cmp word [si], 0
178:		je mainX$54
180:	

mainX$43:	; CallHeader 12 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
182:	

mainX$44:	; Parameter 12 string_25i3A203C25s3E0A# 6
183:		mov word [bp + 18], string_25i3A203C25s3E0A#
185:	

mainX$45:	; Parameter 12 index 8
186:		mov ax, [bp + 10]
187:		mov [bp + 20], ax
189:	

mainX$46:	; UnsignedMultiply £temporary82 index 2
190:		mov ax, [bp + 10]
192:		xor dx, dx
193:		mul word [int2$2#]
199:	

mainX$47:	; BinaryAdd £temporary83 argv £temporary82
200:		mov si, [bp + 8]
201:		add si, ax
203:	

mainX$48:	; Deref £temporary81 -> £temporary83 £temporary83 0
205:	

mainX$49:	; Parameter 12 £temporary81 -> £temporary83 10
206:		mov ax, [si]
207:		mov [bp + 22], ax
209:	

mainX$50:	; Call 12 printf 0
210:		mov word [bp + 12], mainX$51
211:		mov [bp + 14], bp
212:		add bp, 12
213:		mov di, bp
214:		add di, 4
215:		jmp printf
217:	

mainX$51:	; PostCall 12
219:	

mainX$52:	; Increment index
220:		inc word [bp + 10]
222:	

mainX$53:	; Goto 39
223:		jmp mainX$39
225:	

mainX$54:	; Return 0
226:		mov ax, [bp]
227:		mov di, [bp + 4]
228:		mov bp, [bp + 2]
229:		jmp ax
231:	

mainX$55:	; FunctionEnd mainX
1:	

mainm:	; CallHeader 10 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
3:	

mainm$1:	; Call 10 main_math 0
4:		mov word [bp + 10], mainm$2
5:		mov [bp + 12], bp
6:		add bp, 10
7:		jmp main_math
9:	

mainm$2:	; PostCall 10
11:	

mainm$3:	; Return 0
12:		mov ax, [bp]
13:		mov di, [bp + 4]
14:		mov bp, [bp + 2]
15:		jmp ax
17:	

mainm$4:	; FunctionEnd mainm
1:	

maina:	; SignedLessThan 12 1 2
2:		cmp word [int2$1#], 2
3:		jl maina$12
5:	

maina$1:	; CallHeader 6 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
7:	

maina$2:	; Parameter 6 stderr 6
8:		mov ax, [stderr]
9:		mov [bp + 12], ax
11:	

maina$3:	; Parameter 6 string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A# 8
12:		mov word [bp + 14], string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#
14:	

maina$4:	; Parameter 6 string_1203C202# 10
15:		mov word [bp + 16], string_1203C202#
17:	

maina$5:	; Parameter 6 string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CMain2Ec# 12
18:		mov word [bp + 18], string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CMain2Ec#
20:	

maina$6:	; Parameter 6 196 14
21:		mov word [bp + 20], 196
23:	

maina$7:	; Call 6 fprintf 0
24:		mov word [bp + 6], maina$8
25:		mov [bp + 8], bp
26:		add bp, 6
27:		mov di, bp
28:		add di, 6
29:		jmp fprintf
31:	

maina$8:	; PostCall 6
33:	

maina$9:	; CallHeader 6 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
35:	

maina$10:	; Call 6 abort 0
36:		mov word [bp + 6], maina$11
37:		mov [bp + 8], bp
38:		add bp, 6
39:		jmp abort
41:	

maina$11:	; PostCall 6
43:	

maina$12:	; SignedGreaterThan 24 1 2
44:		cmp word [int2$1#], 2
45:		jg maina$24
47:	

maina$13:	; CallHeader 6 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
49:	

maina$14:	; Parameter 6 stderr 6
50:		mov ax, [stderr]
51:		mov [bp + 12], ax
53:	

maina$15:	; Parameter 6 string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A# 8
54:		mov word [bp + 14], string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#
56:	

maina$16:	; Parameter 6 string_1203E202# 10
57:		mov word [bp + 16], string_1203E202#
59:	

maina$17:	; Parameter 6 string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CMain2Ec# 12
60:		mov word [bp + 18], string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CMain2Ec#
62:	

maina$18:	; Parameter 6 197 14
63:		mov word [bp + 20], 197
65:	

maina$19:	; Call 6 fprintf 0
66:		mov word [bp + 6], maina$20
67:		mov [bp + 8], bp
68:		add bp, 6
69:		mov di, bp
70:		add di, 6
71:		jmp fprintf
73:	

maina$20:	; PostCall 6
75:	

maina$21:	; CallHeader 6 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
77:	

maina$22:	; Call 6 abort 0
78:		mov word [bp + 6], maina$23
79:		mov [bp + 8], bp
80:		add bp, 6
81:		jmp abort
83:	

maina$23:	; PostCall 6
85:	

maina$24:	; Return 0
86:		mov ax, [bp]
87:		mov di, [bp + 4]
88:		mov bp, [bp + 2]
89:		jmp ax
91:	

maina$25:	; FunctionEnd maina
0:		; Initialize Stack Pointer
1:		mov bp, $StackTop
2:		; Initialize Heap Pointer
3:		mov word [65534], 65534
4:		; Initialize FPU Control Word, truncate mode => set bit 10 and 11.
5:		fstcw [bp]
6:		or word [bp], 3072
7:		fldcw [bp]
8:		mov word [$StackTop], 0
10:	

main:	; CallHeader 6 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
12:	

main$1:	; Call 6 string_test 0
13:		mov word [bp + 6], main$2
14:		mov [bp + 8], bp
15:		add bp, 6
16:		jmp string_test
18:	

main$2:	; PostCall 6
20:	

main$3:	; Return 0
21:		cmp word [bp], 0
22:		je return_label$0
23:		mov ax, [bp]
24:		mov di, [bp + 4]
25:		mov bp, [bp + 2]
26:		jmp ax
27:	

return_label$0:
28:		mov al, 0
29:		mov ah, 76
30:		int 33
32:	

main$4:	; FunctionEnd main
1:	

mainX4:	; CallHeader 10 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
3:	

mainX4$1:	; Parameter 10 string_argc3A2025i0A# 6
4:		mov word [bp + 16], string_argc3A2025i0A#
6:	

mainX4$2:	; Parameter 10 argc 8
7:		mov ax, [bp + 6]
8:		mov [bp + 18], ax
10:	

mainX4$3:	; Call 10 printf 0
11:		mov word [bp + 10], mainX4$4
12:		mov [bp + 12], bp
13:		add bp, 10
14:		mov di, bp
15:		add di, 2
16:		jmp printf
18:	

mainX4$4:	; PostCall 10
20:	

mainX4$5:	; Assign index 0
21:		mov word [bp + 10], 0
23:	

mainX4$6:	; SignedGreaterThanEqual 18 index argc
24:		mov ax, [bp + 6]
25:		cmp [bp + 10], ax
26:		jge mainX4$18
28:	

mainX4$7:	; CallHeader 12 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
30:	

mainX4$8:	; Parameter 12 string_25i3A203C25s3E0A# 6
31:		mov word [bp + 18], string_25i3A203C25s3E0A#
33:	

mainX4$9:	; Parameter 12 index 8
34:		mov ax, [bp + 10]
35:		mov [bp + 20], ax
37:	

mainX4$10:	; UnsignedMultiply £temporary122 index 2
38:		mov ax, [bp + 10]
40:		xor dx, dx
41:		mul word [int2$2#]
47:	

mainX4$11:	; BinaryAdd £temporary123 argv £temporary122
48:		mov si, [bp + 8]
49:		add si, ax
51:	

mainX4$12:	; Deref £temporary121 -> £temporary123 £temporary123 0
53:	

mainX4$13:	; Parameter 12 £temporary121 -> £temporary123 10
54:		mov ax, [si]
55:		mov [bp + 22], ax
57:	

mainX4$14:	; Call 12 printf 0
58:		mov word [bp + 12], mainX4$15
59:		mov [bp + 14], bp
60:		add bp, 12
61:		mov di, bp
62:		add di, 4
63:		jmp printf
65:	

mainX4$15:	; PostCall 12
67:	

mainX4$16:	; Increment index
68:		inc word [bp + 10]
70:	

mainX4$17:	; Goto 6
71:		jmp mainX4$6
73:	

mainX4$18:	; CallHeader 12 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
75:	

mainX4$19:	; Parameter 12 string_0A# 6
76:		mov word [bp + 18], string_0A#
78:	

mainX4$20:	; Call 12 printf 0
79:		mov word [bp + 12], mainX4$21
80:		mov [bp + 14], bp
81:		add bp, 12
82:		mov di, bp
83:		jmp printf
85:	

mainX4$21:	; PostCall 12
87:	

mainX4$22:	; Assign index 0
88:		mov word [bp + 10], 0
90:	

mainX4$23:	; UnsignedMultiply £temporary127 index 2
91:		mov ax, [bp + 10]
93:		xor dx, dx
94:		mul word [int2$2#]
100:	

mainX4$24:	; BinaryAdd £temporary128 argv £temporary127
101:		mov si, [bp + 8]
102:		add si, ax
104:	

mainX4$25:	; Deref £temporary126 -> £temporary128 £temporary128 0
106:	

mainX4$26:	; Equal 38 £temporary126 -> £temporary128 0
107:		cmp word [si], 0
108:		je mainX4$38
110:	

mainX4$27:	; CallHeader 12 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
112:	

mainX4$28:	; Parameter 12 string_25i3A203C25s3E0A# 6
113:		mov word [bp + 18], string_25i3A203C25s3E0A#
115:	

mainX4$29:	; Parameter 12 index 8
116:		mov ax, [bp + 10]
117:		mov [bp + 20], ax
119:	

mainX4$30:	; UnsignedMultiply £temporary132 index 2
120:		mov ax, [bp + 10]
122:		xor dx, dx
123:		mul word [int2$2#]
129:	

mainX4$31:	; BinaryAdd £temporary133 argv £temporary132
130:		mov si, [bp + 8]
131:		add si, ax
133:	

mainX4$32:	; Deref £temporary131 -> £temporary133 £temporary133 0
135:	

mainX4$33:	; Parameter 12 £temporary131 -> £temporary133 10
136:		mov ax, [si]
137:		mov [bp + 22], ax
139:	

mainX4$34:	; Call 12 printf 0
140:		mov word [bp + 12], mainX4$35
141:		mov [bp + 14], bp
142:		add bp, 12
143:		mov di, bp
144:		add di, 4
145:		jmp printf
147:	

mainX4$35:	; PostCall 12
149:	

mainX4$36:	; Increment index
150:		inc word [bp + 10]
152:	

mainX4$37:	; Goto 23
153:		jmp mainX4$23
155:	

mainX4$38:	; CallHeader 12 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
157:	

mainX4$39:	; Parameter 12 string_0A# 6
158:		mov word [bp + 18], string_0A#
160:	

mainX4$40:	; Call 12 printf 0
161:		mov word [bp + 12], mainX4$41
162:		mov [bp + 14], bp
163:		add bp, 12
164:		mov di, bp
165:		jmp printf
167:	

mainX4$41:	; PostCall 12
169:	

mainX4$42:	; CallHeader 41 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
171:	

mainX4$43:	; Parameter 41 0 6
172:		mov word [bp + 47], 0
174:	

mainX4$44:	; Call 41 mktime 0
175:		mov word [bp + 41], mainX4$45
176:		mov [bp + 43], bp
177:		add bp, 41
178:		jmp mktime
180:	

mainX4$45:	; PostCall 41
182:	

mainX4$46:	; CallHeader 41 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
184:	

mainX4$47:	; Parameter 41 string_Hello210A# 6
185:		mov word [bp + 47], string_Hello210A#
187:	

mainX4$48:	; Call 41 printf 0
188:		mov word [bp + 41], mainX4$49
189:		mov [bp + 43], bp
190:		add bp, 41
191:		mov di, bp
192:		jmp printf
194:	

mainX4$49:	; PostCall 41
196:	

mainX4$50:	; CallHeader 41 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
198:	

mainX4$51:	; Parameter 41 string_Please20write20a20character2C20a20string2C20an20integer2C20and20a20double3A20# 6
199:		mov word [bp + 47], string_Please20write20a20character2C20a20string2C20an20integer2C20and20a20double3A20#
201:	

mainX4$52:	; Call 41 printf 0
202:		mov word [bp + 41], mainX4$53
203:		mov [bp + 43], bp
204:		add bp, 41
205:		mov di, bp
206:		jmp printf
208:	

mainX4$53:	; PostCall 41
210:	

mainX4$54:	; CallHeader 41 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
212:	

mainX4$55:	; Parameter 41 string_25c2025s2025i2025lf# 6
213:		mov word [bp + 47], string_25c2025s2025i2025lf#
215:	

mainX4$56:	; address £temporary139 c
216:		mov si, bp
217:		add si, 20
219:	

mainX4$57:	; Parameter 41 £temporary139 8
220:		mov [bp + 49], si
222:	

mainX4$58:	; Parameter 41 s 10
223:		mov [bp + 51], bp
224:		add word [bp + 51], 21
226:	

mainX4$59:	; address £temporary140 i
227:		mov si, bp
228:		add si, 10
230:	

mainX4$60:	; Parameter 41 £temporary140 12
231:		mov [bp + 53], si
233:	

mainX4$61:	; address £temporary141 d
234:		mov si, bp
235:		add si, 12
237:	

mainX4$62:	; Parameter 41 £temporary141 14
238:		mov [bp + 55], si
240:	

mainX4$63:	; Call 41 scanf 0
241:		mov word [bp + 41], mainX4$64
242:		mov [bp + 43], bp
243:		add bp, 41
244:		mov di, bp
245:		add di, 8
246:		jmp scanf
248:	

mainX4$64:	; PostCall 41
250:	

mainX4$65:	; CallHeader 41 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
252:	

mainX4$66:	; Parameter 41 string_You20wrote20the20character202725c272C20the20string202225s222C20the20integer2025i2C20and20the20double2025f2E0A# 6
253:		mov word [bp + 47], string_You20wrote20the20character202725c272C20the20string202225s222C20the20integer2025i2C20and20the20double2025f2E0A#
255:	

mainX4$67:	; IntegralToIntegral £temporary143 c
256:		mov al, [bp + 20]
258:		and ax, 255
260:		cmp al, 0
261:		jge mainX4$68
262:		neg al
264:		neg ax
266:	

mainX4$68:	; Parameter 41 £temporary143 8
267:		mov [bp + 49], ax
269:	

mainX4$69:	; Parameter 41 s 10
270:		mov [bp + 51], bp
271:		add word [bp + 51], 21
273:	

mainX4$70:	; Parameter 41 i 12
274:		mov ax, [bp + 10]
275:		mov [bp + 53], ax
277:	

mainX4$71:	; PushFloat d
278:		fld qword [bp + 12]
280:	

mainX4$72:	; Parameter 41 d 14
281:		fstp qword [bp + 55]
283:	

mainX4$73:	; Call 41 printf 0
284:		mov word [bp + 41], mainX4$74
285:		mov [bp + 43], bp
286:		add bp, 41
287:		mov di, bp
288:		add di, 14
289:		jmp printf
291:	

mainX4$74:	; PostCall 41
293:	

mainX4$75:	; Return 0
294:		mov ax, [bp]
295:		mov di, [bp + 4]
296:		mov bp, [bp + 2]
297:		jmp ax
299:	

mainX4$76:	; FunctionEnd mainX4
1:	

main3:	; CallHeader 14 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
3:	

main3$1:	; Parameter 14 string_3A20# 6
4:		mov word [bp + 20], string_3A20#
6:	

main3$2:	; Call 14 printf 0
7:		mov word [bp + 14], main3$3
8:		mov [bp + 16], bp
9:		add bp, 14
10:		mov di, bp
11:		jmp printf
13:	

main3$3:	; PostCall 14
15:	

main3$4:	; CallHeader 14 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
17:	

main3$5:	; Parameter 14 string_25lf# 6
18:		mov word [bp + 20], string_25lf#
20:	

main3$6:	; address £temporary172 x
21:		mov si, bp
22:		add si, 6
24:	

main3$7:	; Parameter 14 £temporary172 8
25:		mov [bp + 22], si
27:	

main3$8:	; Call 14 scanf 0
28:		mov word [bp + 14], main3$9
29:		mov [bp + 16], bp
30:		add bp, 14
31:		mov di, bp
32:		add di, 2
33:		jmp scanf
35:	

main3$9:	; PostCall 14
37:	

main3$10:	; CallHeader 14 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
39:	

main3$11:	; Parameter 14 string_3C25f3E# 6
40:		mov word [bp + 20], string_3C25f3E#
42:	

main3$12:	; PushFloat x
43:		fld qword [bp + 6]
45:	

main3$13:	; Parameter 14 x 8
46:		fstp qword [bp + 22]
48:	

main3$14:	; Call 14 printf 0
49:		mov word [bp + 14], main3$15
50:		mov [bp + 16], bp
51:		add bp, 14
52:		mov di, bp
53:		add di, 8
54:		jmp printf
56:	

main3$15:	; PostCall 14
58:	

main3$16:	; Return 0
59:		mov ax, [bp]
60:		mov di, [bp + 4]
61:		mov bp, [bp + 2]
62:		jmp ax
64:	

main3$17:	; FunctionEnd main3
1:	

mains2:	; CallHeader 6 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
3:	

mains2$1:	; PushFloat 3.14
4:		fld qword [float8$3.14#]
6:	

mains2$2:	; Parameter 6 3.14 6
7:		fstp qword [bp + 12]
9:	

mains2$3:	; Call 6 setjmp_test 0
10:		mov word [bp + 6], mains2$4
11:		mov [bp + 8], bp
12:		add bp, 6
13:		jmp setjmp_test
15:	

mains2$4:	; PostCall 6
17:	

mains2$5:	; CallHeader 6 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
19:	

mains2$6:	; Parameter 6 string_2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D0A# 6
20:		mov word [bp + 12], string_2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D0A#
22:	

mains2$7:	; Call 6 printf 0
23:		mov word [bp + 6], mains2$8
24:		mov [bp + 8], bp
25:		add bp, 6
26:		mov di, bp
27:		jmp printf
29:	

mains2$8:	; PostCall 6
31:	

mains2$9:	; CallHeader 6 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
33:	

mains2$10:	; PushZero
34:		fldz
36:	

mains2$11:	; Parameter 6 0 6
37:		fstp qword [bp + 12]
39:	

mains2$12:	; Call 6 setjmp_test 0
40:		mov word [bp + 6], mains2$13
41:		mov [bp + 8], bp
42:		add bp, 6
43:		jmp setjmp_test
45:	

mains2$13:	; PostCall 6
47:	

mains2$14:	; CallHeader 6 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
49:	

mains2$15:	; Parameter 6 string_2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D0A# 6
50:		mov word [bp + 12], string_2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D0A#
52:	

mains2$16:	; Call 6 printf 0
53:		mov word [bp + 6], mains2$17
54:		mov [bp + 8], bp
55:		add bp, 6
56:		mov di, bp
57:		jmp printf
59:	

mains2$17:	; PostCall 6
61:	

mains2$18:	; CallHeader 6 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
63:	

mains2$19:	; PushFloat 2.71
64:		fld qword [float8$2.71#]
66:	

mains2$20:	; Parameter 6 2.71 6
67:		fstp qword [bp + 12]
69:	

mains2$21:	; Call 6 setjmp_test 0
70:		mov word [bp + 6], mains2$22
71:		mov [bp + 8], bp
72:		add bp, 6
73:		jmp setjmp_test
75:	

mains2$22:	; PostCall 6
77:	

mains2$23:	; CallHeader 6 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
79:	

mains2$24:	; Parameter 6 string_2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D0A# 6
80:		mov word [bp + 12], string_2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D0A#
82:	

mains2$25:	; Call 6 printf 0
83:		mov word [bp + 6], mains2$26
84:		mov [bp + 8], bp
85:		add bp, 6
86:		mov di, bp
87:		jmp printf
89:	

mains2$26:	; PostCall 6
91:	

mains2$27:	; CallHeader 6 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
93:	

mains2$28:	; PushZero
94:		fldz
96:	

mains2$29:	; Parameter 6 0 6
97:		fstp qword [bp + 12]
99:	

mains2$30:	; Call 6 setjmp_test 0
100:		mov word [bp + 6], mains2$31
101:		mov [bp + 8], bp
102:		add bp, 6
103:		jmp setjmp_test
105:	

mains2$31:	; PostCall 6
107:	

mains2$32:	; Return 0
108:		mov ax, [bp]
109:		mov di, [bp + 4]
110:		mov bp, [bp + 2]
111:		jmp ax
113:	

mains2$33:	; FunctionEnd mains2
1:	

char_main:	; CallHeader 6 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
3:	

char_main$1:	; Parameter 6 97 6
4:		mov byte [bp + 12], 97
6:	

char_main$2:	; Call 6 character_test 0
7:		mov word [bp + 6], char_main$3
8:		mov [bp + 8], bp
9:		add bp, 6
10:		jmp character_test
12:	

char_main$3:	; PostCall 6
14:	

char_main$4:	; CallHeader 6 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
16:	

char_main$5:	; Parameter 6 66 6
17:		mov byte [bp + 12], 66
19:	

char_main$6:	; Call 6 character_test 0
20:		mov word [bp + 6], char_main$7
21:		mov [bp + 8], bp
22:		add bp, 6
23:		jmp character_test
25:	

char_main$7:	; PostCall 6
27:	

char_main$8:	; CallHeader 6 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
29:	

char_main$9:	; Parameter 6 49 6
30:		mov byte [bp + 12], 49
32:	

char_main$10:	; Call 6 character_test 0
33:		mov word [bp + 6], char_main$11
34:		mov [bp + 8], bp
35:		add bp, 6
36:		jmp character_test
38:	

char_main$11:	; PostCall 6
40:	

char_main$12:	; CallHeader 6 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
42:	

char_main$13:	; Parameter 6 46 6
43:		mov byte [bp + 12], 46
45:	

char_main$14:	; Call 6 character_test 0
46:		mov word [bp + 6], char_main$15
47:		mov [bp + 8], bp
48:		add bp, 6
49:		jmp character_test
51:	

char_main$15:	; PostCall 6
53:	

char_main$16:	; CallHeader 6 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
55:	

char_main$17:	; Parameter 6 10 6
56:		mov byte [bp + 12], 10
58:	

char_main$18:	; Call 6 character_test 0
59:		mov word [bp + 6], char_main$19
60:		mov [bp + 8], bp
61:		add bp, 6
62:		jmp character_test
64:	

char_main$19:	; PostCall 6
66:	

char_main$20:	; CallHeader 6 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
68:	

char_main$21:	; Parameter 6 102 6
69:		mov byte [bp + 12], 102
71:	

char_main$22:	; Call 6 character_test 0
72:		mov word [bp + 6], char_main$23
73:		mov [bp + 8], bp
74:		add bp, 6
75:		jmp character_test
77:	

char_main$23:	; PostCall 6
79:	

char_main$24:	; CallHeader 6 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
81:	

char_main$25:	; Parameter 6 103 6
82:		mov byte [bp + 12], 103
84:	

char_main$26:	; Call 6 character_test 0
85:		mov word [bp + 6], char_main$27
86:		mov [bp + 8], bp
87:		add bp, 6
88:		jmp character_test
90:	

char_main$27:	; PostCall 6
92:	

char_main$28:	; Return 0
93:		mov ax, [bp]
94:		mov di, [bp + 4]
95:		mov bp, [bp + 2]
96:		jmp ax
98:	

char_main$29:	; FunctionEnd char_main
1:	

assert_test:	; Assign n 0
2:		mov word [bp + 6], 0
4:	

assert_test$1:	; CallHeader 8 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
6:	

assert_test$2:	; Parameter 8 string_Please20write20a20number2028not20620or207293A20# 6
7:		mov word [bp + 14], string_Please20write20a20number2028not20620or207293A20#
9:	

assert_test$3:	; Call 8 printf 0
10:		mov word [bp + 8], assert_test$4
11:		mov [bp + 10], bp
12:		add bp, 8
13:		mov di, bp
14:		jmp printf
16:	

assert_test$4:	; PostCall 8
18:	

assert_test$5:	; CallHeader 8 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
20:	

assert_test$6:	; Parameter 8 string_25i# 6
21:		mov word [bp + 14], string_25i#
23:	

assert_test$7:	; address £temporary210 n
24:		mov si, bp
25:		add si, 6
27:	

assert_test$8:	; Parameter 8 £temporary210 8
28:		mov [bp + 16], si
30:	

assert_test$9:	; Call 8 scanf 0
31:		mov word [bp + 8], assert_test$10
32:		mov [bp + 10], bp
33:		add bp, 8
34:		mov di, bp
35:		add di, 2
36:		jmp scanf
38:	

assert_test$10:	; PostCall 8
40:	

assert_test$11:	; NotEqual 23 n 6
41:		cmp word [bp + 6], 6
42:		jne assert_test$23
44:	

assert_test$12:	; CallHeader 8 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
46:	

assert_test$13:	; Parameter 8 stderr 6
47:		mov ax, [stderr]
48:		mov [bp + 14], ax
50:	

assert_test$14:	; Parameter 8 string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A# 8
51:		mov word [bp + 16], string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#
53:	

assert_test$15:	; Parameter 8 string_n20213D206# 10
54:		mov word [bp + 18], string_n20213D206#
56:	

assert_test$16:	; Parameter 8 string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CMain2Ec# 12
57:		mov word [bp + 20], string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CMain2Ec#
59:	

assert_test$17:	; Parameter 8 873 14
60:		mov word [bp + 22], 873
62:	

assert_test$18:	; Call 8 fprintf 0
63:		mov word [bp + 8], assert_test$19
64:		mov [bp + 10], bp
65:		add bp, 8
66:		mov di, bp
67:		add di, 6
68:		jmp fprintf
70:	

assert_test$19:	; PostCall 8
72:	

assert_test$20:	; CallHeader 8 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
74:	

assert_test$21:	; Call 8 abort 0
75:		mov word [bp + 8], assert_test$22
76:		mov [bp + 10], bp
77:		add bp, 8
78:		jmp abort
80:	

assert_test$22:	; PostCall 8
82:	

assert_test$23:	; CallHeader 8 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
84:	

assert_test$24:	; Parameter 8 n 6
85:		mov ax, [bp + 6]
86:		mov [bp + 14], ax
88:	

assert_test$25:	; Call 8 assert_test2 0
89:		mov word [bp + 8], assert_test$26
90:		mov [bp + 10], bp
91:		add bp, 8
92:		jmp assert_test2
94:	

assert_test$26:	; PostCall 8
96:	

assert_test$27:	; Return 0
97:		mov ax, [bp]
98:		mov di, [bp + 4]
99:		mov bp, [bp + 2]
100:		jmp ax
102:	

assert_test$28:	; FunctionEnd assert_test
1:	

assert_test2:	; NotEqual 12 n 7
2:		cmp word [bp + 6], 7
3:		jne assert_test2$12
5:	

assert_test2$1:	; CallHeader 8 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
7:	

assert_test2$2:	; Parameter 8 stderr 6
8:		mov ax, [stderr]
9:		mov [bp + 14], ax
11:	

assert_test2$3:	; Parameter 8 string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A# 8
12:		mov word [bp + 16], string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#
14:	

assert_test2$4:	; Parameter 8 string_n20213D207# 10
15:		mov word [bp + 18], string_n20213D207#
17:	

assert_test2$5:	; Parameter 8 string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CMain2Ec# 12
18:		mov word [bp + 20], string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CMain2Ec#
20:	

assert_test2$6:	; Parameter 8 878 14
21:		mov word [bp + 22], 878
23:	

assert_test2$7:	; Call 8 fprintf 0
24:		mov word [bp + 8], assert_test2$8
25:		mov [bp + 10], bp
26:		add bp, 8
27:		mov di, bp
28:		add di, 6
29:		jmp fprintf
31:	

assert_test2$8:	; PostCall 8
33:	

assert_test2$9:	; CallHeader 8 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
35:	

assert_test2$10:	; Call 8 abort 0
36:		mov word [bp + 8], assert_test2$11
37:		mov [bp + 10], bp
38:		add bp, 8
39:		jmp abort
41:	

assert_test2$11:	; PostCall 8
43:	

assert_test2$12:	; Return 0
44:		mov ax, [bp]
45:		mov di, [bp + 4]
46:		mov bp, [bp + 2]
47:		jmp ax
49:	

assert_test2$13:	; FunctionEnd assert_test2
