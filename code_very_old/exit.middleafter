0: call header integral zero 0 stack zero 0
1: parameter string_0A#, offset 16
2: call function noellipse-ellipse printf, extra 0
3: post call
4: index = int2$0#
5: if index < int2$0# goto 27
6: £temporary2513 = index * int2$2#
7: £temporary2514 = g_funcArray + £temporary2513
8: £temporary2512 -> £temporary2514 = *£temporary2514
9: if £temporary2512 -> £temporary2514 == int2$0# goto 25
10: call header integral zero 0 stack zero 0
11: parameter string_Called20function20index2025i3A2025i0A#, offset 16
12: parameter index, offset 18
13: £temporary2517 = index * int2$2#
14: £temporary2518 = g_funcArray + £temporary2517
15: £temporary2516 -> £temporary2518 = *£temporary2518
16: parameter £temporary2516 -> £temporary2518, offset 20
17: call function noellipse-ellipse printf, extra 4
18: post call
19: £temporary2521 = index * int2$2#
20: £temporary2522 = g_funcArray + £temporary2521
21: £temporary2520 -> £temporary2522 = *£temporary2522
22: call header integral no zero 1 stack zero 0
23: call function noellipse-noellipse £temporary2520 -> £temporary2522
24: post call
25: --index
26: goto 5
27: £temporary2525 = int_to_int status (Signed_Int -> Signed_Short_Int)
28: al = £temporary2525
29: ah = int1$76#
30: interrupt 33
31: return
32: function end exit
