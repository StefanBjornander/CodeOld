1:	

@1421$existsTempName:	; Assign index 0
2:		mov word [bp + 8], 0
4:	

@1421$existsTempName$1:	; SignedGreaterThanEqual 16 index g_tempSize
5:		mov a767, [@1420$g_tempSize]
6:		cmp [bp + 8], a767
7:		jge @1421$existsTempName$16
9:	

@1421$existsTempName$2:	; CallHeader 10 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
11:	

@1421$existsTempName$3:	; Parameter 10 name 6
12:		mov a768, [bp + 6]
13:		mov [bp + 16], a768
15:	

@1421$existsTempName$4:	; UnsignedMultiply £temporary1181 index 2
16:		mov a769, [bp + 8]
18:		xor dx, dx
19:		mul word [int2$2#]
25:	

@1421$existsTempName$5:	; BinaryAdd £temporary1182 g_tempArray £temporary1181
26:		mov a773, @1419$g_tempArray
27:		add a773, t772
29:	

@1421$existsTempName$6:	; Deref £temporary1180 -> £temporary1182 £temporary1182 0
31:	

@1421$existsTempName$7:	; Parameter 10 £temporary1180 -> £temporary1182 8
32:		mov t774, [a773]
33:		mov [bp + 18], t774
35:	

@1421$existsTempName$8:	; Call 10 strcmp 0
36:		mov word [bp + 10], @1421$existsTempName$9
37:		mov [bp + 12], bp
38:		add bp, 10
39:		jmp strcmp
41:	

@1421$existsTempName$9:	; PostCall 10
43:	

@1421$existsTempName$10:	; GetReturnValue £temporary1183
48:	

@1421$existsTempName$11:	; NotEqual 14 £temporary1183 0
49:		cmp t776, 0
50:		jne @1421$existsTempName$14
52:	

@1421$existsTempName$12:	; SetReturnValue 1
53:		mov a777, 1
55:	

@1421$existsTempName$13:	; Return 1
56:		mov t778, [bp]
57:		mov di, [bp + 4]
58:		mov bp, [bp + 2]
59:		jmp t778
61:	

@1421$existsTempName$14:	; Increment index
62:		inc word [bp + 8]
64:	

@1421$existsTempName$15:	; Goto 1
65:		jmp @1421$existsTempName$1
67:	

@1421$existsTempName$16:	; SetReturnValue 0
68:		mov a779, 0
70:	

@1421$existsTempName$17:	; Return 0
71:		mov t780, [bp]
72:		mov di, [bp + 4]
73:		mov bp, [bp + 2]
74:		jmp t780
76:	

@1421$existsTempName$18:	; FunctionEnd existsTempName
1:	

@1432$generateTempName:	; SignedGreaterThanEqual 57 size 3
2:		cmp word [bp + 8], 3
3:		jge @1432$generateTempName$57
5:	

@1432$generateTempName$1:	; Assign c 97
6:		mov byte [bp + 12], 97
8:	

@1432$generateTempName$2:	; SignedGreaterThan 57 c 122
9:		cmp byte [bp + 12], 122
10:		jg @1432$generateTempName$57
12:	

@1432$generateTempName$3:	; BinaryAdd £temporary1191 name size
13:		mov a781, [bp + 6]
14:		add a781, [bp + 8]
16:	

@1432$generateTempName$4:	; Deref £temporary1190 -> £temporary1191 £temporary1191 0
18:	

@1432$generateTempName$5:	; Assign £temporary1190 -> £temporary1191 c
19:		mov a782, [bp + 12]
20:		mov [a781], a782
22:	

@1432$generateTempName$6:	; BinaryAdd £temporary1192 size 1
23:		mov a783, [bp + 8]
24:		add a783, 1
26:	

@1432$generateTempName$7:	; BinaryAdd £temporary1194 name £temporary1192
27:		mov a784, [bp + 6]
28:		add a784, a783
30:	

@1432$generateTempName$8:	; Deref £temporary1193 -> £temporary1194 £temporary1194 0
32:	

@1432$generateTempName$9:	; Assign £temporary1193 -> £temporary1194 0
33:		mov byte [a784], 0
35:	

@1432$generateTempName$10:	; CallHeader 13 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
37:	

@1432$generateTempName$11:	; Parameter 13 name 6
38:		mov a785, [bp + 6]
39:		mov [bp + 19], a785
41:	

@1432$generateTempName$12:	; Call 13 fileexists 0
42:		mov word [bp + 13], @1432$generateTempName$13
43:		mov [bp + 15], bp
44:		add bp, 13
45:		jmp fileexists
47:	

@1432$generateTempName$13:	; PostCall 13
49:	

@1432$generateTempName$14:	; GetReturnValue £temporary1195
54:	

@1432$generateTempName$15:	; NotEqual 43 £temporary1195 0
55:		cmp t787, 0
56:		jne @1432$generateTempName$43
58:	

@1432$generateTempName$16:	; Case 20 status 0
59:		mov a788, [bp + 10]
60:		cmp a788, 0
61:		je @1432$generateTempName$20
63:	

@1432$generateTempName$17:	; Case 22 status 1
64:		cmp a788, 1
65:		je @1432$generateTempName$22
67:	

@1432$generateTempName$18:	; CaseEnd status
69:	

@1432$generateTempName$19:	; Goto 43
70:		jmp @1432$generateTempName$43
72:	

@1432$generateTempName$20:	; SetReturnValue name
73:		mov a789, [bp + 6]
75:	

@1432$generateTempName$21:	; Return name
76:		mov t790, [bp]
77:		mov di, [bp + 4]
78:		mov bp, [bp + 2]
79:		jmp t790
81:	

@1432$generateTempName$22:	; CallHeader 13 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
83:	

@1432$generateTempName$23:	; Parameter 13 name 6
84:		mov a791, [bp + 6]
85:		mov [bp + 19], a791
87:	

@1432$generateTempName$24:	; Call 13 existsTempName 0
88:		mov word [bp + 13], @1432$generateTempName$25
89:		mov [bp + 15], bp
90:		add bp, 13
91:		jmp @1421$existsTempName
93:	

@1432$generateTempName$25:	; PostCall 13
95:	

@1432$generateTempName$26:	; GetReturnValue £temporary1198
100:	

@1432$generateTempName$27:	; NotEqual 43 £temporary1198 0
101:		cmp t793, 0
102:		jne @1432$generateTempName$43
104:	

@1432$generateTempName$28:	; CallHeader 13 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
106:	

@1432$generateTempName$29:	; UnsignedMultiply £temporary1202 g_tempSize 2
107:		mov a794, [@1420$g_tempSize]
109:		xor dx, dx
110:		mul word [int2$2#]
116:	

@1432$generateTempName$30:	; BinaryAdd £temporary1203 g_tempArray £temporary1202
117:		mov a798, @1419$g_tempArray
118:		add a798, t797
120:	

@1432$generateTempName$31:	; Deref £temporary1201 -> £temporary1203 £temporary1203 0
122:	

@1432$generateTempName$32:	; Parameter 13 £temporary1201 -> £temporary1203 6
123:		mov t799, [a798]
124:		mov [bp + 19], t799
126:	

@1432$generateTempName$33:	; Parameter 13 name 8
127:		mov a800, [bp + 6]
128:		mov [bp + 21], a800
130:	

@1432$generateTempName$34:	; Call 13 strcpy 0
131:		mov word [bp + 13], @1432$generateTempName$35
132:		mov [bp + 15], bp
133:		add bp, 13
134:		jmp strcpy
136:	

@1432$generateTempName$35:	; PostCall 13
138:	

@1432$generateTempName$36:	; Assign £temporary1205 g_tempSize
139:		mov t801, [@1420$g_tempSize]
141:	

@1432$generateTempName$37:	; Increment g_tempSize
142:		inc word [@1420$g_tempSize]
144:	

@1432$generateTempName$38:	; UnsignedMultiply £temporary1207 £temporary1205 2
146:		xor dx, dx
147:		mul word [int2$2#]
153:	

@1432$generateTempName$39:	; BinaryAdd £temporary1208 g_tempArray £temporary1207
154:		mov a805, @1419$g_tempArray
155:		add a805, t804
157:	

@1432$generateTempName$40:	; Deref £temporary1206 -> £temporary1208 £temporary1208 0
159:	

@1432$generateTempName$41:	; SetReturnValue £temporary1206 -> £temporary1208
160:		mov t806, [a805]
162:	

@1432$generateTempName$42:	; Return £temporary1206 -> £temporary1208
163:		mov t807, [bp]
164:		mov di, [bp + 4]
165:		mov bp, [bp + 2]
166:		jmp t807
168:	

@1432$generateTempName$43:	; CallHeader 13 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
170:	

@1432$generateTempName$44:	; Parameter 13 name 6
171:		mov a808, [bp + 6]
172:		mov [bp + 19], a808
174:	

@1432$generateTempName$45:	; BinaryAdd £temporary1209 size 1
175:		mov a809, [bp + 8]
176:		add a809, 1
178:	

@1432$generateTempName$46:	; Parameter 13 £temporary1209 8
179:		mov [bp + 21], a809
181:	

@1432$generateTempName$47:	; Parameter 13 status 10
182:		mov a810, [bp + 10]
183:		mov [bp + 23], a810
185:	

@1432$generateTempName$48:	; Call 13 generateTempName 0
186:		mov word [bp + 13], @1432$generateTempName$49
187:		mov [bp + 15], bp
188:		add bp, 13
189:		jmp @1432$generateTempName
191:	

@1432$generateTempName$49:	; PostCall 13
193:	

@1432$generateTempName$50:	; GetReturnValue £temporary1210
198:	

@1432$generateTempName$51:	; Assign result £temporary1210
199:		mov [bp + 13], t812
201:	

@1432$generateTempName$52:	; Equal 55 result 0
202:		cmp word [bp + 13], 0
203:		je @1432$generateTempName$55
205:	

@1432$generateTempName$53:	; SetReturnValue result
206:		mov a813, [bp + 13]
208:	

@1432$generateTempName$54:	; Return result
209:		mov t814, [bp]
210:		mov di, [bp + 4]
211:		mov bp, [bp + 2]
212:		jmp t814
214:	

@1432$generateTempName$55:	; Increment c
215:		inc byte [bp + 12]
217:	

@1432$generateTempName$56:	; Goto 2
218:		jmp @1432$generateTempName$2
220:	

@1432$generateTempName$57:	; SetReturnValue 0
221:		mov a815, 0
223:	

@1432$generateTempName$58:	; Return 0
224:		mov t816, [bp]
225:		mov di, [bp + 4]
226:		mov bp, [bp + 2]
227:		jmp t816
229:	

@1432$generateTempName$59:	; FunctionEnd generateTempName
1:	

tmpfile:	; CallHeader 12 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
3:	

tmpfile$1:	; Parameter 12 name 6
4:		mov [bp + 18], bp
5:		add word [bp + 18], 8
7:	

tmpfile$2:	; Parameter 12 0 8
8:		mov word [bp + 20], 0
10:	

tmpfile$3:	; Parameter 12 0 10
11:		mov word [bp + 22], 0
13:	

tmpfile$4:	; Call 12 generateTempName 0
14:		mov word [bp + 12], tmpfile$5
15:		mov [bp + 14], bp
16:		add bp, 12
17:		jmp @1432$generateTempName
19:	

tmpfile$5:	; PostCall 12
21:	

tmpfile$6:	; GetReturnValue £temporary1219
26:	

tmpfile$7:	; Equal 20 £temporary1219 0
27:		cmp t818, 0
28:		je tmpfile$20
30:	

tmpfile$8:	; CallHeader 12 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
32:	

tmpfile$9:	; Parameter 12 name 6
33:		mov [bp + 18], bp
34:		add word [bp + 18], 8
36:	

tmpfile$10:	; Parameter 12 string_w# 8
37:		mov word [bp + 20], string_w#
39:	

tmpfile$11:	; Call 12 fopen 0
40:		mov word [bp + 12], tmpfile$12
41:		mov [bp + 14], bp
42:		add bp, 12
43:		jmp fopen
45:	

tmpfile$12:	; PostCall 12
47:	

tmpfile$13:	; GetReturnValue £temporary1220
52:	

tmpfile$14:	; Assign stream £temporary1220
53:		mov [bp + 6], t820
55:	

tmpfile$15:	; Equal 20 stream 0
56:		cmp word [bp + 6], 0
57:		je tmpfile$20
59:	

tmpfile$16:	; Deref £temporary1224 -> stream stream 27
60:		mov a821, [bp + 6]
62:	

tmpfile$17:	; Assign £temporary1224 -> stream 1
63:		mov word [a821 + 27], 1
65:	

tmpfile$18:	; SetReturnValue stream
66:		mov a822, [bp + 6]
68:	

tmpfile$19:	; Return stream
69:		mov t823, [bp]
70:		mov di, [bp + 4]
71:		mov bp, [bp + 2]
72:		jmp t823
74:	

tmpfile$20:	; SetReturnValue 0
75:		mov a824, 0
77:	

tmpfile$21:	; Return 0
78:		mov t825, [bp]
79:		mov di, [bp + 4]
80:		mov bp, [bp + 2]
81:		jmp t825
83:	

tmpfile$22:	; FunctionEnd tmpfile
1:	

tmpnam:	; SignedGreaterThanEqual 10 g_tempSize 16
2:		cmp word [@1420$g_tempSize], 16
3:		jge tmpnam$10
5:	

tmpnam$1:	; CallHeader 8 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
7:	

tmpnam$2:	; Parameter 8 name 6
8:		mov a826, [bp + 6]
9:		mov [bp + 14], a826
11:	

tmpnam$3:	; Parameter 8 0 8
12:		mov word [bp + 16], 0
14:	

tmpnam$4:	; Parameter 8 1 10
15:		mov word [bp + 18], 1
17:	

tmpnam$5:	; Call 8 generateTempName 0
18:		mov word [bp + 8], tmpnam$6
19:		mov [bp + 10], bp
20:		add bp, 8
21:		jmp @1432$generateTempName
23:	

tmpnam$6:	; PostCall 8
25:	

tmpnam$7:	; GetReturnValue £temporary1231
30:	

tmpnam$8:	; SetReturnValue £temporary1231
32:	

tmpnam$9:	; Return £temporary1231
33:		mov t829, [bp]
34:		mov di, [bp + 4]
35:		mov bp, [bp + 2]
36:		jmp t829
38:	

tmpnam$10:	; SetReturnValue 0
39:		mov a830, 0
41:	

tmpnam$11:	; Return 0
42:		mov t831, [bp]
43:		mov di, [bp + 4]
44:		mov bp, [bp + 2]
45:		jmp t831
47:	

tmpnam$12:	; FunctionEnd tmpnam
