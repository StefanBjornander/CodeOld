0: £temporary1973 -> format = *format
1: c = £temporary1973 -> format
2: case c == int1$100# goto 21
3: case c == int1$105# goto 21
4: case c == int1$99# goto 76
5: case c == int1$115# goto 97
6: case c == int1$88# goto 118
7: case c == int1$120# goto 118
8: case c == int1$98# goto 118
9: case c == int1$111# goto 118
10: case c == int1$117# goto 118
11: case c == int1$71# goto 181
12: case c == int1$103# goto 181
13: case c == int1$69# goto 181
14: case c == int1$101# goto 181
15: case c == int1$102# goto 181
16: case c == int1$112# goto 309
17: case c == int1$110# goto 335
18: case c == int1$37# goto 359
19: case end c
20: goto 372
21: if shortInt == int1$0# goto 31
22: £temporary1974 = arg_list + int2$2#
23: arg_list = £temporary1974
24: £temporary1975 = arg_list - int2$2#
25: £temporary1976 = int_to_int £temporary1975 (Pointer -> Pointer)
26: £temporary1977 -> £temporary1976 = *£temporary1976
27: £temporary1978 = int_to_int £temporary1977 -> £temporary1976 (Signed_Int -> Signed_Short_Int)
28: £temporary1979 = int_to_int £temporary1978 (Signed_Short_Int -> Signed_Long_Int)
29: longValue = £temporary1979
30: goto 46
31: if longInt == int1$0# goto 39
32: £temporary1980 = arg_list + int2$4#
33: arg_list = £temporary1980
34: £temporary1981 = arg_list - int2$4#
35: £temporary1982 = int_to_int £temporary1981 (Pointer -> Pointer)
36: £temporary1983 -> £temporary1982 = *£temporary1982
37: longValue = £temporary1983 -> £temporary1982
38: goto 46
39: £temporary1984 = arg_list + int2$2#
40: arg_list = £temporary1984
41: £temporary1985 = arg_list - int2$2#
42: £temporary1986 = int_to_int £temporary1985 (Pointer -> Pointer)
43: £temporary1987 -> £temporary1986 = *£temporary1986
44: £temporary1988 = int_to_int £temporary1987 -> £temporary1986 (Signed_Int -> Signed_Long_Int)
45: longValue = £temporary1988
46: if negativePtr == int2$0# goto 53
47: £temporary1992 -> negativePtr = *negativePtr
48: if longValue >= int4$0# goto 51
49: £temporary1994 = int2$1#
50: goto 52
51: £temporary1994 = int2$0#
52: £temporary1992 -> negativePtr = £temporary1994
53: if sign != int1$0# goto 60
54: call header integral zero 0 stack zero 0
55: parameter longValue, offset 54
56: call function noellipse-noellipse labs
57: post call
58: £temporary1997 = return_value
59: longValue = £temporary1997
60: call header integral zero 0 stack zero 0
61: parameter arg_list, offset 54
62: parameter widthPtr, offset 56
63: £temporary1998 = &precision
64: parameter £temporary1998, offset 58
65: call function noellipse-noellipse checkWidthAndPrecision
66: post call
67: £temporary1999 = return_value
68: arg_list = £temporary1999
69: call header integral zero 0 stack zero 0
70: parameter longValue, offset 54
71: parameter plus, offset 58
72: parameter space, offset 60
73: call function noellipse-noellipse printLongInt
74: post call
75: goto 372
76: £temporary2001 = arg_list + int2$2#
77: arg_list = £temporary2001
78: £temporary2002 = arg_list - int2$2#
79: £temporary2003 = int_to_int £temporary2002 (Pointer -> Pointer)
80: £temporary2004 -> £temporary2003 = *£temporary2003
81: £temporary2005 = int_to_int £temporary2004 -> £temporary2003 (Signed_Int -> Signed_Char)
82: charValue = £temporary2005
83: call header integral zero 0 stack zero 0
84: parameter arg_list, offset 50
85: parameter widthPtr, offset 52
86: £temporary2006 = &precision
87: parameter £temporary2006, offset 54
88: call function noellipse-noellipse checkWidthAndPrecision
89: post call
90: £temporary2007 = return_value
91: arg_list = £temporary2007
92: call header integral zero 0 stack zero 0
93: parameter charValue, offset 50
94: call function noellipse-noellipse printChar
95: post call
96: goto 372
97: £temporary2009 = arg_list + int2$2#
98: arg_list = £temporary2009
99: £temporary2010 = arg_list - int2$2#
100: £temporary2011 = int_to_int £temporary2010 (Pointer -> Pointer)
101: £temporary2012 -> £temporary2011 = *£temporary2011
102: stringValue = £temporary2012 -> £temporary2011
103: call header integral zero 0 stack zero 0
104: parameter arg_list, offset 52
105: parameter widthPtr, offset 54
106: £temporary2013 = &precision
107: parameter £temporary2013, offset 56
108: call function noellipse-noellipse checkWidthAndPrecision
109: post call
110: £temporary2014 = return_value
111: arg_list = £temporary2014
112: call header integral zero 0 stack zero 0
113: parameter stringValue, offset 52
114: parameter precision, offset 54
115: call function noellipse-noellipse printString
116: post call
117: goto 372
118: if c != int1$117# goto 121
119: £temporary2021 = int4$10#
120: goto 130
121: if c != int1$111# goto 124
122: £temporary2020 = int4$8#
123: goto 129
124: if c != int1$98# goto 127
125: £temporary2019 = int4$2#
126: goto 128
127: £temporary2019 = int4$16#
128: £temporary2020 = £temporary2019
129: £temporary2021 = £temporary2020
130: base = £temporary2021
131: if shortInt == int1$0# goto 141
132: £temporary2022 = arg_list + int2$2#
133: arg_list = £temporary2022
134: £temporary2023 = arg_list - int2$2#
135: £temporary2024 = int_to_int £temporary2023 (Pointer -> Pointer)
136: £temporary2025 -> £temporary2024 = *£temporary2024
137: £temporary2026 = int_to_int £temporary2025 -> £temporary2024 (Unsigned_Int -> Unsigned_Short_Int)
138: £temporary2027 = int_to_int £temporary2026 (Unsigned_Short_Int -> Unsigned_Long_Int)
139: value = £temporary2027
140: goto 156
141: if longInt == int1$0# goto 149
142: £temporary2028 = arg_list + int2$4#
143: arg_list = £temporary2028
144: £temporary2029 = arg_list - int2$4#
145: £temporary2030 = int_to_int £temporary2029 (Pointer -> Pointer)
146: £temporary2031 -> £temporary2030 = *£temporary2030
147: value = £temporary2031 -> £temporary2030
148: goto 156
149: £temporary2032 = arg_list + int2$2#
150: arg_list = £temporary2032
151: £temporary2033 = arg_list - int2$2#
152: £temporary2034 = int_to_int £temporary2033 (Pointer -> Pointer)
153: £temporary2035 -> £temporary2034 = *£temporary2034
154: £temporary2036 = int_to_int £temporary2035 -> £temporary2034 (Unsigned_Int -> Unsigned_Long_Int)
155: value = £temporary2036
156: call header integral zero 0 stack zero 0
157: parameter arg_list, offset 58
158: parameter widthPtr, offset 60
159: £temporary2039 = &precision
160: parameter £temporary2039, offset 62
161: call function noellipse-noellipse checkWidthAndPrecision
162: post call
163: £temporary2040 = return_value
164: arg_list = £temporary2040
165: call header integral zero 0 stack zero 0
166: parameter value, offset 58
167: parameter plus, offset 62
168: parameter space, offset 64
169: parameter grid, offset 66
170: parameter base, offset 68
171: call header integral zero 0 stack zero 0
172: £temporary2041 = int_to_int c (Signed_Char -> Signed_Int)
173: parameter £temporary2041, offset 78
174: call function noellipse-noellipse isupper
175: post call
176: £temporary2042 = return_value
177: parameter £temporary2042, offset 72
178: call function noellipse-noellipse printUnsignedLong
179: post call
180: goto 372
181: if longDouble == int1$0# goto 199
182: £temporary2044 = arg_list + int2$8#
183: arg_list = £temporary2044
184: £temporary2045 = arg_list - int2$8#
185: £temporary2046 = int_to_int £temporary2045 (Pointer -> Pointer)
186: £temporary2047 -> £temporary2046 = *£temporary2046
187: push float £temporary2047 -> £temporary2046
188: pop float longDoubleValue
189: call header integral zero 0 stack zero 0
190: push float longDoubleValue
191: parameter longDoubleValue, offset 50
192: parameter int2$0#, offset 58
193: parameter int2$0#, offset 60
194: parameter int2$0#, offset 62
195: parameter int2$3#, offset 64
196: call function noellipse-noellipse printLongDoublePlain
197: post call
198: goto 206
199: £temporary2049 = arg_list + int2$8#
200: arg_list = £temporary2049
201: £temporary2050 = arg_list - int2$8#
202: £temporary2051 = int_to_int £temporary2050 (Pointer -> Pointer)
203: £temporary2052 -> £temporary2051 = *£temporary2051
204: push float £temporary2052 -> £temporary2051
205: pop float longDoubleValue
206: if negativePtr == int2$0# goto 215
207: £temporary2056 -> negativePtr = *negativePtr
208: push float longDoubleValue
209: push float float8$0#
210: if longDoubleValue >= float8$0# goto 213
211: £temporary2058 = int2$1#
212: goto 214
213: £temporary2058 = int2$0#
214: £temporary2056 -> negativePtr = £temporary2058
215: if sign != int1$0# goto 223
216: call header integral zero 0 stack zero 0
217: push float longDoubleValue
218: parameter longDoubleValue, offset 50
219: call function noellipse-noellipse fabs
220: post call
221: £temporary2061 = return_value
222: pop float longDoubleValue
223: call header integral zero 0 stack zero 0
224: parameter arg_list, offset 50
225: parameter widthPtr, offset 52
226: £temporary2062 = &precision
227: parameter £temporary2062, offset 54
228: call function noellipse-noellipse checkWidthAndPrecision
229: post call
230: £temporary2063 = return_value
231: arg_list = £temporary2063
232: if c != int1$102# goto 243
233: call header integral zero 0 stack zero 0
234: push float longDoubleValue
235: parameter longDoubleValue, offset 50
236: parameter plus, offset 58
237: parameter space, offset 60
238: parameter grid, offset 62
239: parameter precision, offset 64
240: call function noellipse-noellipse printLongDoublePlain
241: post call
242: goto 372
243: call header integral zero 0 stack zero 0
244: £temporary2066 = int_to_int c (Signed_Char -> Signed_Int)
245: parameter £temporary2066, offset 50
246: call function noellipse-noellipse tolower
247: post call
248: £temporary2067 = return_value
249: if £temporary2067 != int2$101# goto 267
250: call header integral zero 0 stack zero 0
251: push float longDoubleValue
252: parameter longDoubleValue, offset 50
253: parameter plus, offset 58
254: parameter space, offset 60
255: parameter grid, offset 62
256: parameter precision, offset 64
257: call header integral zero 0 stack zero 0
258: £temporary2069 = int_to_int c (Signed_Char -> Signed_Int)
259: parameter £temporary2069, offset 72
260: call function noellipse-noellipse isupper
261: post call
262: £temporary2070 = return_value
263: parameter £temporary2070, offset 66
264: call function noellipse-noellipse printLongDoubleExpo
265: post call
266: goto 372
267: call header integral zero 0 stack zero 0
268: call header integral zero 0 stack zero 0
269: push float longDoubleValue
270: parameter longDoubleValue, offset 50
271: call function noellipse-noellipse fabs
272: post call
273: £temporary2072 = return_value
274: parameter £temporary2072, offset 50
275: call function noellipse-noellipse log10
276: post call
277: £temporary2073 = return_value
278: £temporary2074 = float_to_int £temporary2073 (Double -> Signed_Int)
279: expo = £temporary2074
280: if expo < int2$minus3# goto 292
281: if expo > int2$2# goto 292
282: call header integral zero 0 stack zero 0
283: push float longDoubleValue
284: parameter longDoubleValue, offset 52
285: parameter plus, offset 60
286: parameter space, offset 62
287: parameter grid, offset 64
288: parameter precision, offset 66
289: call function noellipse-noellipse printLongDoublePlain
290: post call
291: goto 372
292: call header integral zero 0 stack zero 0
293: push float longDoubleValue
294: parameter longDoubleValue, offset 52
295: parameter plus, offset 60
296: parameter space, offset 62
297: parameter grid, offset 64
298: parameter precision, offset 66
299: call header integral zero 0 stack zero 0
300: £temporary2079 = int_to_int c (Signed_Char -> Signed_Int)
301: parameter £temporary2079, offset 74
302: call function noellipse-noellipse isupper
303: post call
304: £temporary2080 = return_value
305: parameter £temporary2080, offset 68
306: call function noellipse-noellipse printLongDoubleExpo
307: post call
308: goto 372
309: £temporary2082 = arg_list + int2$2#
310: arg_list = £temporary2082
311: £temporary2083 = arg_list - int2$2#
312: £temporary2084 = int_to_int £temporary2083 (Pointer -> Pointer)
313: £temporary2085 -> £temporary2084 = *£temporary2084
314: ptrValue = £temporary2085 -> £temporary2084
315: call header integral zero 0 stack zero 0
316: parameter arg_list, offset 50
317: parameter widthPtr, offset 52
318: £temporary2086 = &precision
319: parameter £temporary2086, offset 54
320: call function noellipse-noellipse checkWidthAndPrecision
321: post call
322: £temporary2087 = return_value
323: arg_list = £temporary2087
324: call header integral zero 0 stack zero 0
325: £temporary2088 = int_to_int ptrValue (Pointer -> Unsigned_Long_Int)
326: parameter £temporary2088, offset 50
327: parameter int2$0#, offset 54
328: parameter int2$0#, offset 56
329: parameter int2$0#, offset 58
330: parameter int4$10#, offset 60
331: parameter int2$0#, offset 64
332: call function noellipse-noellipse printUnsignedLong
333: post call
334: goto 372
335: £temporary2090 = arg_list + int2$2#
336: arg_list = £temporary2090
337: £temporary2091 = arg_list - int2$2#
338: £temporary2092 = int_to_int £temporary2091 (Pointer -> Pointer)
339: £temporary2093 -> £temporary2092 = *£temporary2092
340: ptrValue = £temporary2093 -> £temporary2092
341: £temporary2094 = arg_list + int2$2#
342: arg_list = £temporary2094
343: £temporary2095 = arg_list - int2$2#
344: £temporary2096 = int_to_int £temporary2095 (Pointer -> Pointer)
345: £temporary2097 -> £temporary2096 = *£temporary2096
346: intPtr = £temporary2097 -> £temporary2096
347: call header integral zero 0 stack zero 0
348: parameter arg_list, offset 50
349: parameter widthPtr, offset 52
350: £temporary2098 = &precision
351: parameter £temporary2098, offset 54
352: call function noellipse-noellipse checkWidthAndPrecision
353: post call
354: £temporary2099 = return_value
355: arg_list = £temporary2099
356: £temporary2100 -> intPtr = *intPtr
357: £temporary2100 -> intPtr = g_outChars
358: goto 372
359: call header integral zero 0 stack zero 0
360: parameter arg_list, offset 50
361: parameter widthPtr, offset 52
362: £temporary2101 = &precision
363: parameter £temporary2101, offset 54
364: call function noellipse-noellipse checkWidthAndPrecision
365: post call
366: £temporary2102 = return_value
367: arg_list = £temporary2102
368: call header integral zero 0 stack zero 0
369: parameter int1$37#, offset 50
370: call function noellipse-noellipse printChar
371: post call
372: return_value = arg_list
373: return
374: function end printArgument
