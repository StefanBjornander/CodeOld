Main.asm
35:
old  <	extern string_test>
new  <	extern mktime>

36:
old  <	extern mktime>
new  <	extern character_test>

37:
old  <	extern character_test>
new  <	global _start>

38:
old  <	global _start>
new  <	global $StackTop>

39:
old  <	global $StackTop>
new  <>

41:
old  <>
new  <section .data>

42:
old  <section .data>
new  <>

43:
old  <>
new  <a:>

44:
old  <a:>
new  <	; InitializerZero 16>

45:
old  <	; InitializerZero 16>
new  <	times 16 db 0>

46:
old  <	times 16 db 0>
new  <>

47:
old  <>
new  <section .data>

48:
old  <section .data>
new  <>

49:
old  <>
new  <string_test12Etxt#:>

50:
old  <string_test12Etxt#:>
new  <	; Initializer String test1.txt>

51:
old  <	; Initializer String test1.txt>
new  <	db "test1.txt", 0>

52:
old  <	db "test1.txt", 0>
new  <>

53:
old  <>
new  <section .data>

54:
old  <section .data>
new  <>

55:
old  <>
new  <string_test22Etxt#:>

56:
old  <string_test22Etxt#:>
new  <	; Initializer String test2.txt>

57:
old  <	; Initializer String test2.txt>
new  <	db "test2.txt", 0>

58:
old  <	db "test2.txt", 0>
new  <>

59:
old  <>
new  <section .text>

60:
old  <section .text>
new  <>

61:
old  <>
new  < main2:>

62:
old  < main2:>
new  <	; Assign a.p 0>

63:
old  <	; Assign a.p 0>
new  <	mov qword [a], 0>

64:
old  <	mov qword [a], 0>
new  <>

65:
old  <>
new  < main2$1:>

66:
old  < main2$1:>
new  <	; Assign a.q 0>

67:
old  <	; Assign a.q 0>
new  <	mov qword [a + 8], 0>

68:
old  <	mov qword [a + 8], 0>
new  <>

69:
old  <>
new  < main2$2:>

70:
old  < main2$2:>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

71:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

72:
old  <>
new  < main2$3:>

73:
old  < main2$3:>
new  <	; Parameter pointer "test1.txt" 48>

74:
old  <	; Parameter pointer "test1.txt" 48>
new  <	mov qword [rbp + 48], string_test12Etxt#>

75:
old  <	mov qword [rbp + 48], string_test12Etxt#>
new  <>

76:
old  <>
new  < main2$4:>

77:
old  < main2$4:>
new  <	; Parameter pointer "test2.txt" 56>

78:
old  <	; Parameter pointer "test2.txt" 56>
new  <	mov qword [rbp + 56], string_test22Etxt#>

79:
old  <	mov qword [rbp + 56], string_test22Etxt#>
new  <>

80:
old  <>
new  < main2$5:>

81:
old  < main2$5:>
new  <	; Call file_test 24 0>

82:
old  <	; Call file_test 24 0>
new  <	mov qword [rbp + 24], main2$6>

83:
old  <	mov qword [rbp + 24], main2$6>
new  <	mov [rbp + 32], rbp>

84:
old  <	mov [rbp + 32], rbp>
new  <	add rbp, 24>

85:
old  <	add rbp, 24>
new  <	jmp file_test>

86:
old  <	jmp file_test>
new  <>

87:
old  <>
new  < main2$6:>

88:
old  < main2$6:>
new  <	; PostCall 24>

89:
old  <	; PostCall 24>
new  <>

90:
old  <>
new  < main2$7:>

91:
old  < main2$7:>
new  <	; Return>

92:
old  <	; Return>
new  <	mov rax, [rbp]>

93:
old  <	mov rax, [rbp]>
new  <	mov rdi, [rbp + 16]>

94:
old  <	mov rdi, [rbp + 16]>
new  <	mov rbp, [rbp + 8]>

95:
old  <	mov rbp, [rbp + 8]>
new  <	jmp rax>

96:
old  <	jmp rax>
new  <>

97:
old  <>
new  < main2$8:>

98:
old  < main2$8:>
new  <	; FunctionEnd main2>

99:
old  <	; FunctionEnd main2>
new  <>

100:
old  <>
new  <section .data>

101:
old  <section .data>
new  <>

102:
old  <>
new  <string_Hello#:>

103:
old  <string_Hello#:>
new  <	; Initializer String Hello>

104:
old  <	; Initializer String Hello>
new  <	db "Hello", 0>

105:
old  <	db "Hello", 0>
new  <>

106:
old  <>
new  <section .data>

107:
old  <section .data>
new  <>

108:
old  <>
new  <string_World#:>

109:
old  <string_World#:>
new  <	; Initializer String World>

110:
old  <	; Initializer String World>
new  <	db "World", 0>

111:
old  <	db "World", 0>
new  <>

112:
old  <>
new  <section .data>

113:
old  <section .data>
new  <>

114:
old  <>
new  <string_3C25s3E203C25s3E0A#:>

115:
old  <string_3C25s3E203C25s3E0A#:>
new  <	; Initializer String <%s> <%s>\n>

116:
old  <	; Initializer String <%s> <%s>\n>
new  <	db "<%s> <%s>", 10, 0>

117:
old  <	db "<%s> <%s>", 10, 0>
new  <>

118:
old  <>
new  <section .text>

119:
old  <section .text>
new  <>

120:
old  <>
new  < main33:>

121:
old  < main33:>
new  <	; Assign s[0] 72>

122:
old  <	; Assign s[0] 72>
new  <	mov byte [rbp + 24], 72>

123:
old  <	mov byte [rbp + 24], 72>
new  <>

124:
old  <>
new  < main33$1:>

125:
old  < main33$1:>
new  <	; Assign s[1] 101>

126:
old  <	; Assign s[1] 101>
new  <	mov byte [rbp + 25], 101>

127:
old  <	mov byte [rbp + 25], 101>
new  <>

128:
old  <>
new  < main33$2:>

129:
old  < main33$2:>
new  <	; Assign s[2] 108>

130:
old  <	; Assign s[2] 108>
new  <	mov byte [rbp + 26], 108>

131:
old  <	mov byte [rbp + 26], 108>
new  <>

132:
old  <>
new  < main33$3:>

133:
old  < main33$3:>
new  <	; Assign s[3] 108>

134:
old  <	; Assign s[3] 108>
new  <	mov byte [rbp + 27], 108>

135:
old  <	mov byte [rbp + 27], 108>
new  <>

136:
old  <>
new  < main33$4:>

137:
old  < main33$4:>
new  <	; Assign s[4] 111>

138:
old  <	; Assign s[4] 111>
new  <	mov byte [rbp + 28], 111>

139:
old  <	mov byte [rbp + 28], 111>
new  <>

140:
old  <>
new  < main33$5:>

141:
old  < main33$5:>
new  <	; Assign s[5] 0>

142:
old  <	; Assign s[5] 0>
new  <	mov byte [rbp + 29], 0>

143:
old  <	mov byte [rbp + 29], 0>
new  <>

144:
old  <>
new  < main33$6:>

145:
old  < main33$6:>
new  <	; Assign t[0] 87>

146:
old  <	; Assign t[0] 87>
new  <	mov byte [rbp + 44], 87>

147:
old  <	mov byte [rbp + 44], 87>
new  <>

148:
old  <>
new  < main33$7:>

149:
old  < main33$7:>
new  <	; Assign t[1] 111>

150:
old  <	; Assign t[1] 111>
new  <	mov byte [rbp + 45], 111>

151:
old  <	mov byte [rbp + 45], 111>
new  <>

152:
old  <>
new  < main33$8:>

153:
old  < main33$8:>
new  <	; Assign t[2] 114>

154:
old  <	; Assign t[2] 114>
new  <	mov byte [rbp + 46], 114>

155:
old  <	mov byte [rbp + 46], 114>
new  <>

156:
old  <>
new  < main33$9:>

157:
old  < main33$9:>
new  <	; Assign t[3] 108>

158:
old  <	; Assign t[3] 108>
new  <	mov byte [rbp + 47], 108>

159:
old  <	mov byte [rbp + 47], 108>
new  <>

160:
old  <>
new  < main33$10:>

161:
old  < main33$10:>
new  <	; Assign t[4] 100>

162:
old  <	; Assign t[4] 100>
new  <	mov byte [rbp + 48], 100>

163:
old  <	mov byte [rbp + 48], 100>
new  <>

164:
old  <>
new  < main33$11:>

165:
old  < main33$11:>
new  <	; Assign t[5] 0>

166:
old  <	; Assign t[5] 0>
new  <	mov byte [rbp + 49], 0>

167:
old  <	mov byte [rbp + 49], 0>
new  <>

168:
old  <>
new  < main33$12:>

169:
old  < main33$12:>
new  <	; PreCall 64 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

170:
old  <	; PreCall 64 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

171:
old  <>
new  < main33$13:>

172:
old  < main33$13:>
new  <	; Parameter pointer "<%s> <%s>\n" 88>

173:
old  <	; Parameter pointer "<%s> <%s>\n" 88>
new  <	mov qword [rbp + 88], string_3C25s3E203C25s3E0A#>

174:
old  <	mov qword [rbp + 88], string_3C25s3E203C25s3E0A#>
new  <>

175:
old  <>
new  < main33$14:>

176:
old  < main33$14:>
new  <	; Parameter pointer s 96>

177:
old  <	; Parameter pointer s 96>
new  <	mov [rbp + 96], rbp>

178:
old  <	mov [rbp + 96], rbp>
new  <	add qword [rbp + 96], 24>

179:
old  <	add qword [rbp + 96], 24>
new  <>

180:
old  <>
new  < main33$15:>

181:
old  < main33$15:>
new  <	; Parameter pointer t 104>

182:
old  <	; Parameter pointer t 104>
new  <	mov [rbp + 104], rbp>

183:
old  <	mov [rbp + 104], rbp>
new  <	add qword [rbp + 104], 44>

184:
old  <	add qword [rbp + 104], 44>
new  <>

185:
old  <>
new  < main33$16:>

186:
old  < main33$16:>
new  <	; Call printf 64 16>

187:
old  <	; Call printf 64 16>
new  <	mov qword [rbp + 64], main33$17>

188:
old  <	mov qword [rbp + 64], main33$17>
new  <	mov [rbp + 72], rbp>

189:
old  <	mov [rbp + 72], rbp>
new  <	add rbp, 64>

190:
old  <	add rbp, 64>
new  <	mov rdi, rbp>

191:
old  <	mov rdi, rbp>
new  <	add rdi, 16>

192:
old  <	add rdi, 16>
new  <	jmp printf>

193:
old  <	jmp printf>
new  <>

194:
old  <>
new  < main33$17:>

195:
old  < main33$17:>
new  <	; PostCall 64>

196:
old  <	; PostCall 64>
new  <>

197:
old  <>
new  < main33$18:>

198:
old  < main33$18:>
new  <	; Return>

199:
old  <	; Return>
new  <	mov rax, [rbp]>

200:
old  <	mov rax, [rbp]>
new  <	mov rdi, [rbp + 16]>

201:
old  <	mov rdi, [rbp + 16]>
new  <	mov rbp, [rbp + 8]>

202:
old  <	mov rbp, [rbp + 8]>
new  <	jmp rax>

203:
old  <	jmp rax>
new  <>

204:
old  <>
new  < main33$19:>

205:
old  < main33$19:>
new  <	; FunctionEnd main33>

206:
old  <	; FunctionEnd main33>
new  <>

207:
old  <>
new  <section .text>

208:
old  <section .text>
new  <>

209:
old  <>
new  < main34:>

210:
old  < main34:>
new  <	; Assign g_outDevice stdout>

211:
old  <	; Assign g_outDevice stdout>
new  <	mov rax, [stdout]>

212:
old  <	mov rax, [stdout]>
new  <	mov [g_outDevice], rax>

213:
old  <	mov [g_outDevice], rax>
new  <>

214:
old  <>
new  < main34$1:>

215:
old  < main34$1:>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

216:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

217:
old  <>
new  < main34$2:>

218:
old  < main34$2:>
new  <	; Parameter signedchar 88 48>

219:
old  <	; Parameter signedchar 88 48>
new  <	mov byte [rbp + 48], 88>

220:
old  <	mov byte [rbp + 48], 88>
new  <>

221:
old  <>
new  < main34$3:>

222:
old  < main34$3:>
new  <	; Call printChar 24 0>

223:
old  <	; Call printChar 24 0>
new  <	mov qword [rbp + 24], main34$4>

224:
old  <	mov qword [rbp + 24], main34$4>
new  <	mov [rbp + 32], rbp>

225:
old  <	mov [rbp + 32], rbp>
new  <	add rbp, 24>

226:
old  <	add rbp, 24>
new  <	jmp printChar>

227:
old  <	jmp printChar>
new  <>

228:
old  <>
new  < main34$4:>

229:
old  < main34$4:>
new  <	; PostCall 24>

230:
old  <	; PostCall 24>
new  <>

231:
old  <>
new  < main34$5:>

232:
old  < main34$5:>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

233:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

234:
old  <>
new  < main34$6:>

235:
old  < main34$6:>
new  <	; Parameter signedchar 10 48>

236:
old  <	; Parameter signedchar 10 48>
new  <	mov byte [rbp + 48], 10>

237:
old  <	mov byte [rbp + 48], 10>
new  <>

238:
old  <>
new  < main34$7:>

239:
old  < main34$7:>
new  <	; Call printChar 24 0>

240:
old  <	; Call printChar 24 0>
new  <	mov qword [rbp + 24], main34$8>

241:
old  <	mov qword [rbp + 24], main34$8>
new  <	mov [rbp + 32], rbp>

242:
old  <	mov [rbp + 32], rbp>
new  <	add rbp, 24>

243:
old  <	add rbp, 24>
new  <	jmp printChar>

244:
old  <	jmp printChar>
new  <>

245:
old  <>
new  < main34$8:>

246:
old  < main34$8:>
new  <	; PostCall 24>

247:
old  <	; PostCall 24>
new  <>

248:
old  <>
new  < main34$9:>

249:
old  < main34$9:>
new  <	; Return>

250:
old  <	; Return>
new  <	mov rax, [rbp]>

251:
old  <	mov rax, [rbp]>
new  <	mov rdi, [rbp + 16]>

252:
old  <	mov rdi, [rbp + 16]>
new  <	mov rbp, [rbp + 8]>

253:
old  <	mov rbp, [rbp + 8]>
new  <	jmp rax>

254:
old  <	jmp rax>
new  <>

255:
old  <>
new  < main34$10:>

256:
old  < main34$10:>
new  <	; FunctionEnd main34>

257:
old  <	; FunctionEnd main34>
new  <>

258:
old  <>
new  <section .data>

259:
old  <section .data>
new  <>

260:
old  <>
new  <string_Please20write20a20character3A20#:>

261:
old  <string_Please20write20a20character3A20#:>
new  <	; Initializer String Please write a character: >

262:
old  <	; Initializer String Please write a character: >
new  <	db "Please write a character: ", 0>

263:
old  <	db "Please write a character: ", 0>
new  <>

264:
old  <>
new  <section .data>

265:
old  <section .data>
new  <>

266:
old  <>
new  <string_25c#:>

267:
old  <string_25c#:>
new  <	; Initializer String %c>

268:
old  <	; Initializer String %c>
new  <	db "%c", 0>

269:
old  <	db "%c", 0>
new  <>

270:
old  <>
new  <section .data>

271:
old  <section .data>
new  <>

272:
old  <>
new  <string_You20wrote20the20character202725c272E0A#:>

273:
old  <string_You20wrote20the20character202725c272E0A#:>
new  <	; Initializer String You wrote the character '%c'.\n>

274:
old  <	; Initializer String You wrote the character '%c'.\n>
new  <	db "You wrote the character ", 39, "%c", 39, ".", 10, 0>

275:
old  <	db "You wrote the character ", 39, "%c", 39, ".", 10, 0>
new  <>

276:
old  <>
new  <section .text>

277:
old  <section .text>
new  <>

278:
old  <>
new  < mainc:>

279:
old  < mainc:>
new  <	; PreCall 25 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

280:
old  <	; PreCall 25 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

281:
old  <>
new  < mainc$1:>

282:
old  < mainc$1:>
new  <	; Parameter pointer "Please write a character: " 49>

283:
old  <	; Parameter pointer "Please write a character: " 49>
new  <	mov qword [rbp + 49], string_Please20write20a20character3A20#>

284:
old  <	mov qword [rbp + 49], string_Please20write20a20character3A20#>
new  <>

285:
old  <>
new  < mainc$2:>

286:
old  < mainc$2:>
new  <	; Call printf 25 0>

287:
old  <	; Call printf 25 0>
new  <	mov qword [rbp + 25], mainc$3>

288:
old  <	mov qword [rbp + 25], mainc$3>
new  <	mov [rbp + 33], rbp>

289:
old  <	mov [rbp + 33], rbp>
new  <	add rbp, 25>

290:
old  <	add rbp, 25>
new  <	mov rdi, rbp>

291:
old  <	mov rdi, rbp>
new  <	jmp printf>

292:
old  <	jmp printf>
new  <>

293:
old  <>
new  < mainc$3:>

294:
old  < mainc$3:>
new  <	; PostCall 25>

295:
old  <	; PostCall 25>
new  <>

296:
old  <>
new  < mainc$4:>

297:
old  < mainc$4:>
new  <	; PreCall 25 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

298:
old  <	; PreCall 25 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

299:
old  <>
new  < mainc$5:>

300:
old  < mainc$5:>
new  <	; Parameter pointer "%c" 49>

301:
old  <	; Parameter pointer "%c" 49>
new  <	mov qword [rbp + 49], string_25c#>

302:
old  <	mov qword [rbp + 49], string_25c#>
new  <>

303:
old  <>
new  < mainc$6:>

304:
old  < mainc$6:>
new  <	; Address Â£temporary19 c>

305:
old  <	; Address Â£temporary19 c>
new  <	mov rsi, rbp>

306:
old  <	mov rsi, rbp>
new  <	add rsi, 24>

307:
old  <	add rsi, 24>
new  <>

308:
old  <>
new  < mainc$7:>

309:
old  < mainc$7:>
new  <	; Parameter pointer Â£temporary19 57>

310:
old  <	; Parameter pointer Â£temporary19 57>
new  <	mov [rbp + 57], rsi>

311:
old  <	mov [rbp + 57], rsi>
new  <>

312:
old  <>
new  < mainc$8:>

313:
old  < mainc$8:>
new  <	; Call scanf 25 8>

314:
old  <	; Call scanf 25 8>
new  <	mov qword [rbp + 25], mainc$9>

315:
old  <	mov qword [rbp + 25], mainc$9>
new  <	mov [rbp + 33], rbp>

316:
old  <	mov [rbp + 33], rbp>
new  <	add rbp, 25>

317:
old  <	add rbp, 25>
new  <	mov rdi, rbp>

318:
old  <	mov rdi, rbp>
new  <	add rdi, 8>

319:
old  <	add rdi, 8>
new  <	jmp scanf>

320:
old  <	jmp scanf>
new  <>

321:
old  <>
new  < mainc$9:>

322:
old  < mainc$9:>
new  <	; PostCall 25>

323:
old  <	; PostCall 25>
new  <>

324:
old  <>
new  < mainc$10:>

325:
old  < mainc$10:>
new  <	; PreCall 25 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

326:
old  <	; PreCall 25 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

327:
old  <>
new  < mainc$11:>

328:
old  < mainc$11:>
new  <	; Parameter pointer "You wrote the character '%c'.\n" 49>

329:
old  <	; Parameter pointer "You wrote the character '%c'.\n" 49>
new  <	mov qword [rbp + 49], string_You20wrote20the20character202725c272E0A#>

330:
old  <	mov qword [rbp + 49], string_You20wrote20the20character202725c272E0A#>
new  <>

331:
old  <>
new  < mainc$12:>

332:
old  < mainc$12:>
new  <	; IntegralToIntegral Â£temporary21 c>

333:
old  <	; IntegralToIntegral Â£temporary21 c>
new  <	mov al, [rbp + 24]>

334:
old  <	mov al, [rbp + 24]>
new  <	and eax, 255>

335:
old  <	and eax, 255>
new  <	cmp al, 0>

336:
old  <	cmp al, 0>
new  <	jge mainc$13>

337:
old  <	jge mainc$13>
new  <	neg al>

338:
old  <	neg al>
new  <	neg eax>

339:
old  <	neg eax>
new  <>

340:
old  <>
new  < mainc$13:>

341:
old  < mainc$13:>
new  <	; Parameter signedint Â£temporary21 57>

342:
old  <	; Parameter signedint Â£temporary21 57>
new  <	mov [rbp + 57], eax>

343:
old  <	mov [rbp + 57], eax>
new  <>

344:
old  <>
new  < mainc$14:>

345:
old  < mainc$14:>
new  <	; Call printf 25 4>

346:
old  <	; Call printf 25 4>
new  <	mov qword [rbp + 25], mainc$15>

347:
old  <	mov qword [rbp + 25], mainc$15>
new  <	mov [rbp + 33], rbp>

348:
old  <	mov [rbp + 33], rbp>
new  <	add rbp, 25>

349:
old  <	add rbp, 25>
new  <	mov rdi, rbp>

350:
old  <	mov rdi, rbp>
new  <	add rdi, 4>

351:
old  <	add rdi, 4>
new  <	jmp printf>

352:
old  <	jmp printf>
new  <>

353:
old  <>
new  < mainc$15:>

354:
old  < mainc$15:>
new  <	; PostCall 25>

355:
old  <	; PostCall 25>
new  <>

356:
old  <>
new  < mainc$16:>

357:
old  < mainc$16:>
new  <	; Return>

358:
old  <	; Return>
new  <	mov rax, [rbp]>

359:
old  <	mov rax, [rbp]>
new  <	mov rdi, [rbp + 16]>

360:
old  <	mov rdi, [rbp + 16]>
new  <	mov rbp, [rbp + 8]>

361:
old  <	mov rbp, [rbp + 8]>
new  <	jmp rax>

362:
old  <	jmp rax>
new  <>

363:
old  <>
new  < mainc$17:>

364:
old  < mainc$17:>
new  <	; FunctionEnd mainc>

365:
old  <	; FunctionEnd mainc>
new  <>

366:
old  <>
new  <section .data>

367:
old  <section .data>
new  <>

368:
old  <>
new  <string_Please20write20an20integer3A20#:>

369:
old  <string_Please20write20an20integer3A20#:>
new  <	; Initializer String Please write an integer: >

370:
old  <	; Initializer String Please write an integer: >
new  <	db "Please write an integer: ", 0>

371:
old  <	db "Please write an integer: ", 0>
new  <>

372:
old  <>
new  <section .data>

373:
old  <section .data>
new  <>

374:
old  <>
new  <string_25i#:>

375:
old  <string_25i#:>
new  <	; Initializer String %i>

376:
old  <	; Initializer String %i>
new  <	db "%i", 0>

377:
old  <	db "%i", 0>
new  <>

378:
old  <>
new  <section .data>

379:
old  <section .data>
new  <>

380:
old  <>
new  <string_You20wrote20the20integer2025i2E0A#:>

381:
old  <string_You20wrote20the20integer2025i2E0A#:>
new  <	; Initializer String You wrote the integer %i.\n>

382:
old  <	; Initializer String You wrote the integer %i.\n>
new  <	db "You wrote the integer %i.", 10, 0>

383:
old  <	db "You wrote the integer %i.", 10, 0>
new  <>

384:
old  <>
new  <section .text>

385:
old  <section .text>
new  <>

386:
old  <>
new  < maini:>

387:
old  < maini:>
new  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

388:
old  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

389:
old  <>
new  < maini$1:>

390:
old  < maini$1:>
new  <	; Parameter pointer "Please write an integer: " 52>

391:
old  <	; Parameter pointer "Please write an integer: " 52>
new  <	mov qword [rbp + 52], string_Please20write20an20integer3A20#>

392:
old  <	mov qword [rbp + 52], string_Please20write20an20integer3A20#>
new  <>

393:
old  <>
new  < maini$2:>

394:
old  < maini$2:>
new  <	; Call printf 28 0>

395:
old  <	; Call printf 28 0>
new  <	mov qword [rbp + 28], maini$3>

396:
old  <	mov qword [rbp + 28], maini$3>
new  <	mov [rbp + 36], rbp>

397:
old  <	mov [rbp + 36], rbp>
new  <	add rbp, 28>

398:
old  <	add rbp, 28>
new  <	mov rdi, rbp>

399:
old  <	mov rdi, rbp>
new  <	jmp printf>

400:
old  <	jmp printf>
new  <>

401:
old  <>
new  < maini$3:>

402:
old  < maini$3:>
new  <	; PostCall 28>

403:
old  <	; PostCall 28>
new  <>

404:
old  <>
new  < maini$4:>

405:
old  < maini$4:>
new  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

406:
old  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

407:
old  <>
new  < maini$5:>

408:
old  < maini$5:>
new  <	; Parameter pointer "%i" 52>

409:
old  <	; Parameter pointer "%i" 52>
new  <	mov qword [rbp + 52], string_25i#>

410:
old  <	mov qword [rbp + 52], string_25i#>
new  <>

411:
old  <>
new  < maini$6:>

412:
old  < maini$6:>
new  <	; Address Â£temporary25 i>

413:
old  <	; Address Â£temporary25 i>
new  <	mov rsi, rbp>

414:
old  <	mov rsi, rbp>
new  <	add rsi, 24>

415:
old  <	add rsi, 24>
new  <>

416:
old  <>
new  < maini$7:>

417:
old  < maini$7:>
new  <	; Parameter pointer Â£temporary25 60>

418:
old  <	; Parameter pointer Â£temporary25 60>
new  <	mov [rbp + 60], rsi>

419:
old  <	mov [rbp + 60], rsi>
new  <>

420:
old  <>
new  < maini$8:>

421:
old  < maini$8:>
new  <	; Call scanf 28 8>

422:
old  <	; Call scanf 28 8>
new  <	mov qword [rbp + 28], maini$9>

423:
old  <	mov qword [rbp + 28], maini$9>
new  <	mov [rbp + 36], rbp>

424:
old  <	mov [rbp + 36], rbp>
new  <	add rbp, 28>

425:
old  <	add rbp, 28>
new  <	mov rdi, rbp>

426:
old  <	mov rdi, rbp>
new  <	add rdi, 8>

427:
old  <	add rdi, 8>
new  <	jmp scanf>

428:
old  <	jmp scanf>
new  <>

429:
old  <>
new  < maini$9:>

430:
old  < maini$9:>
new  <	; PostCall 28>

431:
old  <	; PostCall 28>
new  <>

432:
old  <>
new  < maini$10:>

433:
old  < maini$10:>
new  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

434:
old  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

435:
old  <>
new  < maini$11:>

436:
old  < maini$11:>
new  <	; Parameter pointer "You wrote the integer %i.\n" 52>

437:
old  <	; Parameter pointer "You wrote the integer %i.\n" 52>
new  <	mov qword [rbp + 52], string_You20wrote20the20integer2025i2E0A#>

438:
old  <	mov qword [rbp + 52], string_You20wrote20the20integer2025i2E0A#>
new  <>

439:
old  <>
new  < maini$12:>

440:
old  < maini$12:>
new  <	; Parameter signedint i 60>

441:
old  <	; Parameter signedint i 60>
new  <	mov eax, [rbp + 24]>

442:
old  <	mov eax, [rbp + 24]>
new  <	mov [rbp + 60], eax>

443:
old  <	mov [rbp + 60], eax>
new  <>

444:
old  <>
new  < maini$13:>

445:
old  < maini$13:>
new  <	; Call printf 28 4>

446:
old  <	; Call printf 28 4>
new  <	mov qword [rbp + 28], maini$14>

447:
old  <	mov qword [rbp + 28], maini$14>
new  <	mov [rbp + 36], rbp>

448:
old  <	mov [rbp + 36], rbp>
new  <	add rbp, 28>

449:
old  <	add rbp, 28>
new  <	mov rdi, rbp>

450:
old  <	mov rdi, rbp>
new  <	add rdi, 4>

451:
old  <	add rdi, 4>
new  <	jmp printf>

452:
old  <	jmp printf>
new  <>

453:
old  <>
new  < maini$14:>

454:
old  < maini$14:>
new  <	; PostCall 28>

455:
old  <	; PostCall 28>
new  <>

456:
old  <>
new  < maini$15:>

457:
old  < maini$15:>
new  <	; Return>

458:
old  <	; Return>
new  <	mov rax, [rbp]>

459:
old  <	mov rax, [rbp]>
new  <	mov rdi, [rbp + 16]>

460:
old  <	mov rdi, [rbp + 16]>
new  <	mov rbp, [rbp + 8]>

461:
old  <	mov rbp, [rbp + 8]>
new  <	jmp rax>

462:
old  <	jmp rax>
new  <>

463:
old  <>
new  < maini$16:>

464:
old  < maini$16:>
new  <	; FunctionEnd maini>

465:
old  <	; FunctionEnd maini>
new  <>

466:
old  <>
new  <section .data>

467:
old  <section .data>
new  <>

468:
old  <>
new  <string_Please20write20a20string3A20#:>

469:
old  <string_Please20write20a20string3A20#:>
new  <	; Initializer String Please write a string: >

470:
old  <	; Initializer String Please write a string: >
new  <	db "Please write a string: ", 0>

471:
old  <	db "Please write a string: ", 0>
new  <>

472:
old  <>
new  <section .data>

473:
old  <section .data>
new  <>

474:
old  <>
new  <string_25s#:>

475:
old  <string_25s#:>
new  <	; Initializer String %s>

476:
old  <	; Initializer String %s>
new  <	db "%s", 0>

477:
old  <	db "%s", 0>
new  <>

478:
old  <>
new  <section .data>

479:
old  <section .data>
new  <>

480:
old  <>
new  <string_You20wrote20the20string202225s222E0A#:>

481:
old  <string_You20wrote20the20string202225s222E0A#:>
new  <	; Initializer String You wrote the string "%s".\n>

482:
old  <	; Initializer String You wrote the string "%s".\n>
new  <	db "You wrote the string ", 34, "%s", 34, ".", 10, 0>

483:
old  <	db "You wrote the string ", 34, "%s", 34, ".", 10, 0>
new  <>

484:
old  <>
new  <section .text>

485:
old  <section .text>
new  <>

486:
old  <>
new  < mains:>

487:
old  < mains:>
new  <	; PreCall 44 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

488:
old  <	; PreCall 44 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

489:
old  <>
new  < mains$1:>

490:
old  < mains$1:>
new  <	; Parameter pointer "Please write a string: " 68>

491:
old  <	; Parameter pointer "Please write a string: " 68>
new  <	mov qword [rbp + 68], string_Please20write20a20string3A20#>

492:
old  <	mov qword [rbp + 68], string_Please20write20a20string3A20#>
new  <>

493:
old  <>
new  < mains$2:>

494:
old  < mains$2:>
new  <	; Call printf 44 0>

495:
old  <	; Call printf 44 0>
new  <	mov qword [rbp + 44], mains$3>

496:
old  <	mov qword [rbp + 44], mains$3>
new  <	mov [rbp + 52], rbp>

497:
old  <	mov [rbp + 52], rbp>
new  <	add rbp, 44>

498:
old  <	add rbp, 44>
new  <	mov rdi, rbp>

499:
old  <	mov rdi, rbp>
new  <	jmp printf>

500:
old  <	jmp printf>
new  <>

501:
old  <>
new  < mains$3:>

502:
old  < mains$3:>
new  <	; PostCall 44>

503:
old  <	; PostCall 44>
new  <>

504:
old  <>
new  < mains$4:>

505:
old  < mains$4:>
new  <	; PreCall 44 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

506:
old  <	; PreCall 44 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

507:
old  <>
new  < mains$5:>

508:
old  < mains$5:>
new  <	; Parameter pointer "%s" 68>

509:
old  <	; Parameter pointer "%s" 68>
new  <	mov qword [rbp + 68], string_25s#>

510:
old  <	mov qword [rbp + 68], string_25s#>
new  <>

511:
old  <>
new  < mains$6:>

512:
old  < mains$6:>
new  <	; Parameter pointer s 76>

513:
old  <	; Parameter pointer s 76>
new  <	mov [rbp + 76], rbp>

514:
old  <	mov [rbp + 76], rbp>
new  <	add qword [rbp + 76], 24>

515:
old  <	add qword [rbp + 76], 24>
new  <>

516:
old  <>
new  < mains$7:>

517:
old  < mains$7:>
new  <	; Call scanf 44 8>

518:
old  <	; Call scanf 44 8>
new  <	mov qword [rbp + 44], mains$8>

519:
old  <	mov qword [rbp + 44], mains$8>
new  <	mov [rbp + 52], rbp>

520:
old  <	mov [rbp + 52], rbp>
new  <	add rbp, 44>

521:
old  <	add rbp, 44>
new  <	mov rdi, rbp>

522:
old  <	mov rdi, rbp>
new  <	add rdi, 8>

523:
old  <	add rdi, 8>
new  <	jmp scanf>

524:
old  <	jmp scanf>
new  <>

525:
old  <>
new  < mains$8:>

526:
old  < mains$8:>
new  <	; PostCall 44>

527:
old  <	; PostCall 44>
new  <>

528:
old  <>
new  < mains$9:>

529:
old  < mains$9:>
new  <	; PreCall 44 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

530:
old  <	; PreCall 44 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

531:
old  <>
new  < mains$10:>

532:
old  < mains$10:>
new  <	; Parameter pointer "You wrote the string "%s".\n" 68>

533:
old  <	; Parameter pointer "You wrote the string "%s".\n" 68>
new  <	mov qword [rbp + 68], string_You20wrote20the20string202225s222E0A#>

534:
old  <	mov qword [rbp + 68], string_You20wrote20the20string202225s222E0A#>
new  <>

535:
old  <>
new  < mains$11:>

536:
old  < mains$11:>
new  <	; Parameter pointer s 76>

537:
old  <	; Parameter pointer s 76>
new  <	mov [rbp + 76], rbp>

538:
old  <	mov [rbp + 76], rbp>
new  <	add qword [rbp + 76], 24>

539:
old  <	add qword [rbp + 76], 24>
new  <>

540:
old  <>
new  < mains$12:>

541:
old  < mains$12:>
new  <	; Call printf 44 8>

542:
old  <	; Call printf 44 8>
new  <	mov qword [rbp + 44], mains$13>

543:
old  <	mov qword [rbp + 44], mains$13>
new  <	mov [rbp + 52], rbp>

544:
old  <	mov [rbp + 52], rbp>
new  <	add rbp, 44>

545:
old  <	add rbp, 44>
new  <	mov rdi, rbp>

546:
old  <	mov rdi, rbp>
new  <	add rdi, 8>

547:
old  <	add rdi, 8>
new  <	jmp printf>

548:
old  <	jmp printf>
new  <>

549:
old  <>
new  < mains$13:>

550:
old  < mains$13:>
new  <	; PostCall 44>

551:
old  <	; PostCall 44>
new  <>

552:
old  <>
new  < mains$14:>

553:
old  < mains$14:>
new  <	; Return>

554:
old  <	; Return>
new  <	mov rax, [rbp]>

555:
old  <	mov rax, [rbp]>
new  <	mov rdi, [rbp + 16]>

556:
old  <	mov rdi, [rbp + 16]>
new  <	mov rbp, [rbp + 8]>

557:
old  <	mov rbp, [rbp + 8]>
new  <	jmp rax>

558:
old  <	jmp rax>
new  <>

559:
old  <>
new  < mains$15:>

560:
old  < mains$15:>
new  <	; FunctionEnd mains>

561:
old  <	; FunctionEnd mains>
new  <>

562:
old  <>
new  <section .text>

563:
old  <section .text>
new  <>

564:
old  <>
new  < maint:>

565:
old  < maint:>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

566:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

567:
old  <>
new  < maint$1:>

568:
old  < maint$1:>
new  <	; Call limits_test 24 0>

569:
old  <	; Call limits_test 24 0>
new  <	mov qword [rbp + 24], maint$2>

570:
old  <	mov qword [rbp + 24], maint$2>
new  <	mov [rbp + 32], rbp>

571:
old  <	mov [rbp + 32], rbp>
new  <	add rbp, 24>

572:
old  <	add rbp, 24>
new  <	jmp limits_test>

573:
old  <	jmp limits_test>
new  <>

574:
old  <>
new  < maint$2:>

575:
old  < maint$2:>
new  <	; PostCall 24>

576:
old  <	; PostCall 24>
new  <>

577:
old  <>
new  < maint$3:>

578:
old  < maint$3:>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

579:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

580:
old  <>
new  < maint$4:>

581:
old  < maint$4:>
new  <	; Call time_test 24 0>

582:
old  <	; Call time_test 24 0>
new  <	mov qword [rbp + 24], maint$5>

583:
old  <	mov qword [rbp + 24], maint$5>
new  <	mov [rbp + 32], rbp>

584:
old  <	mov [rbp + 32], rbp>
new  <	add rbp, 24>

585:
old  <	add rbp, 24>
new  <	jmp time_test>

586:
old  <	jmp time_test>
new  <>

587:
old  <>
new  < maint$5:>

588:
old  < maint$5:>
new  <	; PostCall 24>

589:
old  <	; PostCall 24>
new  <>

590:
old  <>
new  < maint$6:>

591:
old  < maint$6:>
new  <	; Return>

592:
old  <	; Return>
new  <	mov rax, [rbp]>

593:
old  <	mov rax, [rbp]>
new  <	mov rdi, [rbp + 16]>

594:
old  <	mov rdi, [rbp + 16]>
new  <	mov rbp, [rbp + 8]>

595:
old  <	mov rbp, [rbp + 8]>
new  <	jmp rax>

596:
old  <	jmp rax>
new  <>

597:
old  <>
new  < maint$7:>

598:
old  < maint$7:>
new  <	; FunctionEnd maint>

599:
old  <	; FunctionEnd maint>
new  <>

600:
old  <>
new  <section .data>

601:
old  <section .data>
new  <>

602:
old  <>
new  <float8$10#:>

603:
old  <float8$10#:>
new  <	; Initializer Double 10>

604:
old  <	; Initializer Double 10>
new  <	dq 10.0>

605:
old  <	dq 10.0>
new  <>

606:
old  <>
new  <section .text>

607:
old  <section .text>
new  <>

608:
old  <>
new  < mainY:>

609:
old  < mainY:>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

610:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

611:
old  <>
new  < mainY$1:>

612:
old  < mainY$1:>
new  <	; Call malloc_test 24 0>

613:
old  <	; Call malloc_test 24 0>
new  <	mov qword [rbp + 24], mainY$2>

614:
old  <	mov qword [rbp + 24], mainY$2>
new  <	mov [rbp + 32], rbp>

615:
old  <	mov [rbp + 32], rbp>
new  <	add rbp, 24>

616:
old  <	add rbp, 24>
new  <	jmp malloc_test>

617:
old  <	jmp malloc_test>
new  <>

618:
old  <>
new  < mainY$2:>

619:
old  < mainY$2:>
new  <	; PostCall 24>

620:
old  <	; PostCall 24>
new  <>

621:
old  <>
new  < mainY$3:>

622:
old  < mainY$3:>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

623:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

624:
old  <>
new  < mainY$4:>

625:
old  < mainY$4:>
new  <	; PushFloat 10>

626:
old  <	; PushFloat 10>
new  <	fld qword [float8$10#]>

627:
old  <	fld qword [float8$10#]>
new  <>

628:
old  <>
new  < mainY$5:>

629:
old  < mainY$5:>
new  <	; Parameter double 10 48>

630:
old  <	; Parameter double 10 48>
new  <	fstp qword [rbp + 48]>

631:
old  <	fstp qword [rbp + 48]>
new  <>

632:
old  <>
new  < mainY$6:>

633:
old  < mainY$6:>
new  <	; Call setjmp_test 24 0>

634:
old  <	; Call setjmp_test 24 0>
new  <	mov qword [rbp + 24], mainY$7>

635:
old  <	mov qword [rbp + 24], mainY$7>
new  <	mov [rbp + 32], rbp>

636:
old  <	mov [rbp + 32], rbp>
new  <	add rbp, 24>

637:
old  <	add rbp, 24>
new  <	jmp setjmp_test>

638:
old  <	jmp setjmp_test>
new  <>

639:
old  <>
new  < mainY$7:>

640:
old  < mainY$7:>
new  <	; PostCall 24>

641:
old  <	; PostCall 24>
new  <>

642:
old  <>
new  < mainY$8:>

643:
old  < mainY$8:>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

644:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

645:
old  <>
new  < mainY$9:>

646:
old  < mainY$9:>
new  <	; PushFloat 0>

647:
old  <	; PushFloat 0>
new  <	fldz>

648:
old  <	fldz>
new  <>

649:
old  <>
new  < mainY$10:>

650:
old  < mainY$10:>
new  <	; Parameter double 0 48>

651:
old  <	; Parameter double 0 48>
new  <	fstp qword [rbp + 48]>

652:
old  <	fstp qword [rbp + 48]>
new  <>

653:
old  <>
new  < mainY$11:>

654:
old  < mainY$11:>
new  <	; Call setjmp_test 24 0>

655:
old  <	; Call setjmp_test 24 0>
new  <	mov qword [rbp + 24], mainY$12>

656:
old  <	mov qword [rbp + 24], mainY$12>
new  <	mov [rbp + 32], rbp>

657:
old  <	mov [rbp + 32], rbp>
new  <	add rbp, 24>

658:
old  <	add rbp, 24>
new  <	jmp setjmp_test>

659:
old  <	jmp setjmp_test>
new  <>

660:
old  <>
new  < mainY$12:>

661:
old  < mainY$12:>
new  <	; PostCall 24>

662:
old  <	; PostCall 24>
new  <>

663:
old  <>
new  < mainY$13:>

664:
old  < mainY$13:>
new  <	; Return>

665:
old  <	; Return>
new  <	mov rax, [rbp]>

666:
old  <	mov rax, [rbp]>
new  <	mov rdi, [rbp + 16]>

667:
old  <	mov rdi, [rbp + 16]>
new  <	mov rbp, [rbp + 8]>

668:
old  <	mov rbp, [rbp + 8]>
new  <	jmp rax>

669:
old  <	jmp rax>
new  <>

670:
old  <>
new  < mainY$14:>

671:
old  < mainY$14:>
new  <	; FunctionEnd mainY>

672:
old  <	; FunctionEnd mainY>
new  <>

673:
old  <>
new  <section .data>

674:
old  <section .data>
new  <>

675:
old  <>
new  <string_25i3A2025i203C25c3E0A#:>

676:
old  <string_25i3A2025i203C25c3E0A#:>
new  <	; Initializer String %i: %i <%c>\n>

677:
old  <	; Initializer String %i: %i <%c>\n>
new  <	db "%i: %i <%c>", 10, 0>

678:
old  <	db "%i: %i <%c>", 10, 0>
new  <>

679:
old  <>
new  <section .data>

680:
old  <section .data>
new  <>

681:
old  <>
new  <string_0Aargc3A2025i0A#:>

682:
old  <string_0Aargc3A2025i0A#:>
new  <	; Initializer String \nargc: %i\n>

683:
old  <	; Initializer String \nargc: %i\n>
new  <	db 10, "argc: %i", 10, 0>

684:
old  <	db 10, "argc: %i", 10, 0>
new  <>

685:
old  <>
new  <section .data>

686:
old  <section .data>
new  <>

687:
old  <>
new  <string_25i3A203C25s3E0A#:>

688:
old  <string_25i3A203C25s3E0A#:>
new  <	; Initializer String %i: <%s>\n>

689:
old  <	; Initializer String %i: <%s>\n>
new  <	db "%i: <%s>", 10, 0>

690:
old  <	db "%i: <%s>", 10, 0>
new  <>

691:
old  <>
new  <section .data>

692:
old  <section .data>
new  <>

693:
old  <>
new  <string_0A#:>

694:
old  <string_0A#:>
new  <	; Initializer String \n>

695:
old  <	; Initializer String \n>
new  <	db 10, 0>

696:
old  <	db 10, 0>
new  <>

697:
old  <>
new  <section .data>

698:
old  <section .data>
new  <>

699:
old  <>
new  <int8$8#:>

700:
old  <int8$8#:>
new  <	; Initializer Pointer 8>

701:
old  <	; Initializer Pointer 8>
new  <	dq 8>

702:
old  <	dq 8>
new  <>

703:
old  <>
new  <section .text>

704:
old  <section .text>
new  <>

705:
old  <>
new  < mainX:>

706:
old  < mainX:>
new  <	; Assign index 129>

707:
old  <	; Assign index 129>
new  <	mov dword [rbp + 36], 129>

708:
old  <	mov dword [rbp + 36], 129>
new  <>

709:
old  <>
new  < mainX$1:>

710:
old  < mainX$1:>
new  <	; SignedGreaterThanEqual 16 index 255>

711:
old  <	; SignedGreaterThanEqual 16 index 255>
new  <	cmp dword [rbp + 36], 255>

712:
old  <	cmp dword [rbp + 36], 255>
new  <	jge mainX$16>

713:
old  <	jge mainX$16>
new  <>

714:
old  <>
new  < mainX$2:>

715:
old  < mainX$2:>
new  <	; IntegralToIntegral Â£temporary41 index>

716:
old  <	; IntegralToIntegral Â£temporary41 index>
new  <	mov esi, [rbp + 36]>

717:
old  <	mov esi, [rbp + 36]>
new  <	mov rax, 4294967295>

718:
old  <	mov rax, 4294967295>
new  <	and rsi, rax>

719:
old  <	and rsi, rax>
new  <>

720:
old  <>
new  < mainX$3:>

721:
old  < mainX$3:>
new  <	; Dereference Â£temporary42 -> Â£temporary41 Â£temporary41 0>

722:
old  <	; Dereference Â£temporary42 -> Â£temporary41 Â£temporary41 0>
new  <>

723:
old  <>
new  < mainX$4:>

724:
old  < mainX$4:>
new  <	; Assign c Â£temporary42 -> Â£temporary41>

725:
old  <	; Assign c Â£temporary42 -> Â£temporary41>
new  <	mov al, [rsi]>

726:
old  <	mov al, [rsi]>
new  <	mov [rbp + 40], al>

727:
old  <	mov [rbp + 40], al>
new  <>

728:
old  <>
new  < mainX$5:>

729:
old  < mainX$5:>
new  <	; PreCall 41 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

730:
old  <	; PreCall 41 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

731:
old  <>
new  < mainX$6:>

732:
old  < mainX$6:>
new  <	; Parameter pointer "%i: %i <%c>\n" 65>

733:
old  <	; Parameter pointer "%i: %i <%c>\n" 65>
new  <	mov qword [rbp + 65], string_25i3A2025i203C25c3E0A#>

734:
old  <	mov qword [rbp + 65], string_25i3A2025i203C25c3E0A#>
new  <>

735:
old  <>
new  < mainX$7:>

736:
old  < mainX$7:>
new  <	; Parameter signedint index 73>

737:
old  <	; Parameter signedint index 73>
new  <	mov eax, [rbp + 36]>

738:
old  <	mov eax, [rbp + 36]>
new  <	mov [rbp + 73], eax>

739:
old  <	mov [rbp + 73], eax>
new  <>

740:
old  <>
new  < mainX$8:>

741:
old  < mainX$8:>
new  <	; IntegralToIntegral Â£temporary43 c>

742:
old  <	; IntegralToIntegral Â£temporary43 c>
new  <	mov al, [rbp + 40]>

743:
old  <	mov al, [rbp + 40]>
new  <	and eax, 255>

744:
old  <	and eax, 255>
new  <	cmp al, 0>

745:
old  <	cmp al, 0>
new  <	jge mainX$9>

746:
old  <	jge mainX$9>
new  <	neg al>

747:
old  <	neg al>
new  <	neg eax>

748:
old  <	neg eax>
new  <>

749:
old  <>
new  < mainX$9:>

750:
old  < mainX$9:>
new  <	; Parameter signedint Â£temporary43 77>

751:
old  <	; Parameter signedint Â£temporary43 77>
new  <	mov [rbp + 77], eax>

752:
old  <	mov [rbp + 77], eax>
new  <>

753:
old  <>
new  < mainX$10:>

754:
old  < mainX$10:>
new  <	; IntegralToIntegral Â£temporary44 c>

755:
old  <	; IntegralToIntegral Â£temporary44 c>
new  <	mov al, [rbp + 40]>

756:
old  <	mov al, [rbp + 40]>
new  <	and eax, 255>

757:
old  <	and eax, 255>
new  <	cmp al, 0>

758:
old  <	cmp al, 0>
new  <	jge mainX$11>

759:
old  <	jge mainX$11>
new  <	neg al>

760:
old  <	neg al>
new  <	neg eax>

761:
old  <	neg eax>
new  <>

762:
old  <>
new  < mainX$11:>

763:
old  < mainX$11:>
new  <	; Parameter signedint Â£temporary44 81>

764:
old  <	; Parameter signedint Â£temporary44 81>
new  <	mov [rbp + 81], eax>

765:
old  <	mov [rbp + 81], eax>
new  <>

766:
old  <>
new  < mainX$12:>

767:
old  < mainX$12:>
new  <	; Call printf 41 12>

768:
old  <	; Call printf 41 12>
new  <	mov qword [rbp + 41], mainX$13>

769:
old  <	mov qword [rbp + 41], mainX$13>
new  <	mov [rbp + 49], rbp>

770:
old  <	mov [rbp + 49], rbp>
new  <	add rbp, 41>

771:
old  <	add rbp, 41>
new  <	mov rdi, rbp>

772:
old  <	mov rdi, rbp>
new  <	add rdi, 12>

773:
old  <	add rdi, 12>
new  <	jmp printf>

774:
old  <	jmp printf>
new  <>

775:
old  <>
new  < mainX$13:>

776:
old  < mainX$13:>
new  <	; PostCall 41>

777:
old  <	; PostCall 41>
new  <>

778:
old  <>
new  < mainX$14:>

779:
old  < mainX$14:>
new  <	; BinaryAdd index index 1>

780:
old  <	; BinaryAdd index index 1>
new  <	inc dword [rbp + 36]>

781:
old  <	inc dword [rbp + 36]>
new  <>

782:
old  <>
new  < mainX$15:>

783:
old  < mainX$15:>
new  <	; Goto 1>

784:
old  <	; Goto 1>
new  <	jmp mainX$1>

785:
old  <	jmp mainX$1>
new  <>

786:
old  <>
new  < mainX$16:>

787:
old  < mainX$16:>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

788:
old  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

789:
old  <>
new  < mainX$17:>

790:
old  < mainX$17:>
new  <	; Parameter pointer "\nargc: %i\n" 64>

791:
old  <	; Parameter pointer "\nargc: %i\n" 64>
new  <	mov qword [rbp + 64], string_0Aargc3A2025i0A#>

792:
old  <	mov qword [rbp + 64], string_0Aargc3A2025i0A#>
new  <>

793:
old  <>
new  < mainX$18:>

794:
old  < mainX$18:>
new  <	; Parameter signedint argc 72>

795:
old  <	; Parameter signedint argc 72>
new  <	mov eax, [rbp + 24]>

796:
old  <	mov eax, [rbp + 24]>
new  <	mov [rbp + 72], eax>

797:
old  <	mov [rbp + 72], eax>
new  <>

798:
old  <>
new  < mainX$19:>

799:
old  < mainX$19:>
new  <	; Call printf 40 4>

800:
old  <	; Call printf 40 4>
new  <	mov qword [rbp + 40], mainX$20>

801:
old  <	mov qword [rbp + 40], mainX$20>
new  <	mov [rbp + 48], rbp>

802:
old  <	mov [rbp + 48], rbp>
new  <	add rbp, 40>

803:
old  <	add rbp, 40>
new  <	mov rdi, rbp>

804:
old  <	mov rdi, rbp>
new  <	add rdi, 4>

805:
old  <	add rdi, 4>
new  <	jmp printf>

806:
old  <	jmp printf>
new  <>

807:
old  <>
new  < mainX$20:>

808:
old  < mainX$20:>
new  <	; PostCall 40>

809:
old  <	; PostCall 40>
new  <>

810:
old  <>
new  < mainX$21:>

811:
old  < mainX$21:>
new  <	; Assign index 0>

812:
old  <	; Assign index 0>
new  <	mov dword [rbp + 36], 0>

813:
old  <	mov dword [rbp + 36], 0>
new  <>

814:
old  <>
new  < mainX$22:>

815:
old  < mainX$22:>
new  <	; SignedGreaterThanEqual 35 index argc>

816:
old  <	; SignedGreaterThanEqual 35 index argc>
new  <	mov eax, [rbp + 24]>

817:
old  <	mov eax, [rbp + 24]>
new  <	cmp [rbp + 36], eax>

818:
old  <	cmp [rbp + 36], eax>
new  <	jge mainX$35>

819:
old  <	jge mainX$35>
new  <>

820:
old  <>
new  < mainX$23:>

821:
old  < mainX$23:>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

822:
old  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

823:
old  <>
new  < mainX$24:>

824:
old  < mainX$24:>
new  <	; Parameter pointer "%i: <%s>\n" 64>

825:
old  <	; Parameter pointer "%i: <%s>\n" 64>
new  <	mov qword [rbp + 64], string_25i3A203C25s3E0A#>

826:
old  <	mov qword [rbp + 64], string_25i3A203C25s3E0A#>
new  <>

827:
old  <>
new  < mainX$25:>

828:
old  < mainX$25:>
new  <	; Parameter signedint index 72>

829:
old  <	; Parameter signedint index 72>
new  <	mov eax, [rbp + 36]>

830:
old  <	mov eax, [rbp + 36]>
new  <	mov [rbp + 72], eax>

831:
old  <	mov [rbp + 72], eax>
new  <>

832:
old  <>
new  < mainX$26:>

833:
old  < mainX$26:>
new  <	; IntegralToIntegral Â£temporary50 index>

834:
old  <	; IntegralToIntegral Â£temporary50 index>
new  <	mov eax, [rbp + 36]>

835:
old  <	mov eax, [rbp + 36]>
new  <	mov rbx, 4294967295>

836:
old  <	mov rbx, 4294967295>
new  <	and rax, rbx>

837:
old  <	and rax, rbx>
new  <>

838:
old  <>
new  < mainX$27:>

839:
old  < mainX$27:>
new  <	; UnsignedMultiply Â£temporary51 Â£temporary50 8>

840:
old  <	; UnsignedMultiply Â£temporary51 Â£temporary50 8>
new  <	xor rdx, rdx>

841:
old  <	xor rdx, rdx>
new  <	mul qword [int8$8#]>

842:
old  <	mul qword [int8$8#]>
new  <>

843:
old  <>
new  < mainX$28:>

844:
old  < mainX$28:>
new  <	; BinaryAdd Â£temporary52 argv Â£temporary51>

845:
old  <	; BinaryAdd Â£temporary52 argv Â£temporary51>
new  <	mov rsi, [rbp + 28]>

846:
old  <	mov rsi, [rbp + 28]>
new  <	add rsi, rax>

847:
old  <	add rsi, rax>
new  <>

848:
old  <>
new  < mainX$29:>

849:
old  < mainX$29:>
new  <	; Dereference Â£temporary49 -> Â£temporary52 Â£temporary52 0>

850:
old  <	; Dereference Â£temporary49 -> Â£temporary52 Â£temporary52 0>
new  <>

851:
old  <>
new  < mainX$30:>

852:
old  < mainX$30:>
new  <	; Parameter pointer Â£temporary49 -> Â£temporary52 76>

853:
old  <	; Parameter pointer Â£temporary49 -> Â£temporary52 76>
new  <	mov rax, [rsi]>

854:
old  <	mov rax, [rsi]>
new  <	mov [rbp + 76], rax>

855:
old  <	mov [rbp + 76], rax>
new  <>

856:
old  <>
new  < mainX$31:>

857:
old  < mainX$31:>
new  <	; Call printf 40 12>

858:
old  <	; Call printf 40 12>
new  <	mov qword [rbp + 40], mainX$32>

859:
old  <	mov qword [rbp + 40], mainX$32>
new  <	mov [rbp + 48], rbp>

860:
old  <	mov [rbp + 48], rbp>
new  <	add rbp, 40>

861:
old  <	add rbp, 40>
new  <	mov rdi, rbp>

862:
old  <	mov rdi, rbp>
new  <	add rdi, 12>

863:
old  <	add rdi, 12>
new  <	jmp printf>

864:
old  <	jmp printf>
new  <>

865:
old  <>
new  < mainX$32:>

866:
old  < mainX$32:>
new  <	; PostCall 40>

867:
old  <	; PostCall 40>
new  <>

868:
old  <>
new  < mainX$33:>

869:
old  < mainX$33:>
new  <	; BinaryAdd index index 1>

870:
old  <	; BinaryAdd index index 1>
new  <	inc dword [rbp + 36]>

871:
old  <	inc dword [rbp + 36]>
new  <>

872:
old  <>
new  < mainX$34:>

873:
old  < mainX$34:>
new  <	; Goto 22>

874:
old  <	; Goto 22>
new  <	jmp mainX$22>

875:
old  <	jmp mainX$22>
new  <>

876:
old  <>
new  < mainX$35:>

877:
old  < mainX$35:>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

878:
old  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

879:
old  <>
new  < mainX$36:>

880:
old  < mainX$36:>
new  <	; Parameter pointer "\n" 64>

881:
old  <	; Parameter pointer "\n" 64>
new  <	mov qword [rbp + 64], string_0A#>

882:
old  <	mov qword [rbp + 64], string_0A#>
new  <>

883:
old  <>
new  < mainX$37:>

884:
old  < mainX$37:>
new  <	; Call printf 40 0>

885:
old  <	; Call printf 40 0>
new  <	mov qword [rbp + 40], mainX$38>

886:
old  <	mov qword [rbp + 40], mainX$38>
new  <	mov [rbp + 48], rbp>

887:
old  <	mov [rbp + 48], rbp>
new  <	add rbp, 40>

888:
old  <	add rbp, 40>
new  <	mov rdi, rbp>

889:
old  <	mov rdi, rbp>
new  <	jmp printf>

890:
old  <	jmp printf>
new  <>

891:
old  <>
new  < mainX$38:>

892:
old  < mainX$38:>
new  <	; PostCall 40>

893:
old  <	; PostCall 40>
new  <>

894:
old  <>
new  < mainX$39:>

895:
old  < mainX$39:>
new  <	; Assign index 0>

896:
old  <	; Assign index 0>
new  <	mov dword [rbp + 36], 0>

897:
old  <	mov dword [rbp + 36], 0>
new  <>

898:
old  <>
new  < mainX$40:>

899:
old  < mainX$40:>
new  <	; IntegralToIntegral Â£temporary56 index>

900:
old  <	; IntegralToIntegral Â£temporary56 index>
new  <	mov eax, [rbp + 36]>

901:
old  <	mov eax, [rbp + 36]>
new  <	mov rbx, 4294967295>

902:
old  <	mov rbx, 4294967295>
new  <	and rax, rbx>

903:
old  <	and rax, rbx>
new  <>

904:
old  <>
new  < mainX$41:>

905:
old  < mainX$41:>
new  <	; UnsignedMultiply Â£temporary57 Â£temporary56 8>

906:
old  <	; UnsignedMultiply Â£temporary57 Â£temporary56 8>
new  <	xor rdx, rdx>

907:
old  <	xor rdx, rdx>
new  <	mul qword [int8$8#]>

908:
old  <	mul qword [int8$8#]>
new  <>

909:
old  <>
new  < mainX$42:>

910:
old  < mainX$42:>
new  <	; BinaryAdd Â£temporary58 argv Â£temporary57>

911:
old  <	; BinaryAdd Â£temporary58 argv Â£temporary57>
new  <	mov rsi, [rbp + 28]>

912:
old  <	mov rsi, [rbp + 28]>
new  <	add rsi, rax>

913:
old  <	add rsi, rax>
new  <>

914:
old  <>
new  < mainX$43:>

915:
old  < mainX$43:>
new  <	; Dereference Â£temporary55 -> Â£temporary58 Â£temporary58 0>

916:
old  <	; Dereference Â£temporary55 -> Â£temporary58 Â£temporary58 0>
new  <>

917:
old  <>
new  < mainX$44:>

918:
old  < mainX$44:>
new  <	; Equal 57 Â£temporary55 -> Â£temporary58 0>

919:
old  <	; Equal 57 Â£temporary55 -> Â£temporary58 0>
new  <	cmp qword [rsi], 0>

920:
old  <	cmp qword [rsi], 0>
new  <	je mainX$57>

921:
old  <	je mainX$57>
new  <>

922:
old  <>
new  < mainX$45:>

923:
old  < mainX$45:>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

924:
old  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

925:
old  <>
new  < mainX$46:>

926:
old  < mainX$46:>
new  <	; Parameter pointer "%i: <%s>\n" 64>

927:
old  <	; Parameter pointer "%i: <%s>\n" 64>
new  <	mov qword [rbp + 64], string_25i3A203C25s3E0A#>

928:
old  <	mov qword [rbp + 64], string_25i3A203C25s3E0A#>
new  <>

929:
old  <>
new  < mainX$47:>

930:
old  < mainX$47:>
new  <	; Parameter signedint index 72>

931:
old  <	; Parameter signedint index 72>
new  <	mov eax, [rbp + 36]>

932:
old  <	mov eax, [rbp + 36]>
new  <	mov [rbp + 72], eax>

933:
old  <	mov [rbp + 72], eax>
new  <>

934:
old  <>
new  < mainX$48:>

935:
old  < mainX$48:>
new  <	; IntegralToIntegral Â£temporary62 index>

936:
old  <	; IntegralToIntegral Â£temporary62 index>
new  <	mov eax, [rbp + 36]>

937:
old  <	mov eax, [rbp + 36]>
new  <	mov rbx, 4294967295>

938:
old  <	mov rbx, 4294967295>
new  <	and rax, rbx>

939:
old  <	and rax, rbx>
new  <>

940:
old  <>
new  < mainX$49:>

941:
old  < mainX$49:>
new  <	; UnsignedMultiply Â£temporary63 Â£temporary62 8>

942:
old  <	; UnsignedMultiply Â£temporary63 Â£temporary62 8>
new  <	xor rdx, rdx>

943:
old  <	xor rdx, rdx>
new  <	mul qword [int8$8#]>

944:
old  <	mul qword [int8$8#]>
new  <>

945:
old  <>
new  < mainX$50:>

946:
old  < mainX$50:>
new  <	; BinaryAdd Â£temporary64 argv Â£temporary63>

947:
old  <	; BinaryAdd Â£temporary64 argv Â£temporary63>
new  <	mov rsi, [rbp + 28]>

948:
old  <	mov rsi, [rbp + 28]>
new  <	add rsi, rax>

949:
old  <	add rsi, rax>
new  <>

950:
old  <>
new  < mainX$51:>

951:
old  < mainX$51:>
new  <	; Dereference Â£temporary61 -> Â£temporary64 Â£temporary64 0>

952:
old  <	; Dereference Â£temporary61 -> Â£temporary64 Â£temporary64 0>
new  <>

953:
old  <>
new  < mainX$52:>

954:
old  < mainX$52:>
new  <	; Parameter pointer Â£temporary61 -> Â£temporary64 76>

955:
old  <	; Parameter pointer Â£temporary61 -> Â£temporary64 76>
new  <	mov rax, [rsi]>

956:
old  <	mov rax, [rsi]>
new  <	mov [rbp + 76], rax>

957:
old  <	mov [rbp + 76], rax>
new  <>

958:
old  <>
new  < mainX$53:>

959:
old  < mainX$53:>
new  <	; Call printf 40 12>

960:
old  <	; Call printf 40 12>
new  <	mov qword [rbp + 40], mainX$54>

961:
old  <	mov qword [rbp + 40], mainX$54>
new  <	mov [rbp + 48], rbp>

962:
old  <	mov [rbp + 48], rbp>
new  <	add rbp, 40>

963:
old  <	add rbp, 40>
new  <	mov rdi, rbp>

964:
old  <	mov rdi, rbp>
new  <	add rdi, 12>

965:
old  <	add rdi, 12>
new  <	jmp printf>

966:
old  <	jmp printf>
new  <>

967:
old  <>
new  < mainX$54:>

968:
old  < mainX$54:>
new  <	; PostCall 40>

969:
old  <	; PostCall 40>
new  <>

970:
old  <>
new  < mainX$55:>

971:
old  < mainX$55:>
new  <	; BinaryAdd index index 1>

972:
old  <	; BinaryAdd index index 1>
new  <	inc dword [rbp + 36]>

973:
old  <	inc dword [rbp + 36]>
new  <>

974:
old  <>
new  < mainX$56:>

975:
old  < mainX$56:>
new  <	; Goto 40>

976:
old  <	; Goto 40>
new  <	jmp mainX$40>

977:
old  <	jmp mainX$40>
new  <>

978:
old  <>
new  < mainX$57:>

979:
old  < mainX$57:>
new  <	; Return>

980:
old  <	; Return>
new  <	mov rax, [rbp]>

981:
old  <	mov rax, [rbp]>
new  <	mov rdi, [rbp + 16]>

982:
old  <	mov rdi, [rbp + 16]>
new  <	mov rbp, [rbp + 8]>

983:
old  <	mov rbp, [rbp + 8]>
new  <	jmp rax>

984:
old  <	jmp rax>
new  <>

985:
old  <>
new  < mainX$58:>

986:
old  < mainX$58:>
new  <	; FunctionEnd mainX>

987:
old  <	; FunctionEnd mainX>
new  <>

988:
old  <>
new  <section .text>

989:
old  <section .text>
new  <>

990:
old  <>
new  < mainm:>

991:
old  < mainm:>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

992:
old  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

993:
old  <>
new  < mainm$1:>

994:
old  < mainm$1:>
new  <	; Call main_math 36 0>

995:
old  <	; Call main_math 36 0>
new  <	mov qword [rbp + 36], mainm$2>

996:
old  <	mov qword [rbp + 36], mainm$2>
new  <	mov [rbp + 44], rbp>

997:
old  <	mov [rbp + 44], rbp>
new  <	add rbp, 36>

998:
old  <	add rbp, 36>
new  <	jmp main_math>

999:
old  <	jmp main_math>
new  <>

1000:
old  <>
new  < mainm$2:>

1001:
old  < mainm$2:>
new  <	; PostCall 36>

1002:
old  <	; PostCall 36>
new  <>

1003:
old  <>
new  < mainm$3:>

1004:
old  < mainm$3:>
new  <	; Return>

1005:
old  <	; Return>
new  <	mov rax, [rbp]>

1006:
old  <	mov rax, [rbp]>
new  <	mov rdi, [rbp + 16]>

1007:
old  <	mov rdi, [rbp + 16]>
new  <	mov rbp, [rbp + 8]>

1008:
old  <	mov rbp, [rbp + 8]>
new  <	jmp rax>

1009:
old  <	jmp rax>
new  <>

1010:
old  <>
new  < mainm$4:>

1011:
old  < mainm$4:>
new  <	; FunctionEnd mainm>

1012:
old  <	; FunctionEnd mainm>
new  <>

1013:
old  <>
new  <section .data>

1014:
old  <section .data>
new  <>

1015:
old  <>
new  <string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#:>

1016:
old  <string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#:>
new  <	; Initializer String Assertion failed: "%s" in file %s at line %i\n>

1017:
old  <	; Initializer String Assertion failed: "%s" in file %s at line %i\n>
new  <	db "Assertion failed: ", 34, "%s", 34, " in file %s at line %i", 10, 0>

1018:
old  <	db "Assertion failed: ", 34, "%s", 34, " in file %s at line %i", 10, 0>
new  <>

1019:
old  <>
new  <section .data>

1020:
old  <section .data>
new  <>

1021:
old  <>
new  <string_1203C202#:>

1022:
old  <string_1203C202#:>
new  <	; Initializer String 1 < 2>

1023:
old  <	; Initializer String 1 < 2>
new  <	db "1 < 2", 0>

1024:
old  <	db "1 < 2", 0>
new  <>

1025:
old  <>
new  <section .data>

1026:
old  <section .data>
new  <>

1027:
old  <>
new  <string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CMain2Ec#:>

1028:
old  <string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CMain2Ec#:>
new  <	; Initializer String C:\Users\Stefan\Documents\vagrant\homestead\code\code\Main.c>

1029:
old  <	; Initializer String C:\Users\Stefan\Documents\vagrant\homestead\code\code\Main.c>
new  <	db "C:\Users\Stefan\Documents\vagrant\homestead\code\code\Main.c", 0>

1030:
old  <	db "C:\Users\Stefan\Documents\vagrant\homestead\code\code\Main.c", 0>
new  <>

1031:
old  <>
new  <section .data>

1032:
old  <section .data>
new  <>

1033:
old  <>
new  <string_1203E202#:>

1034:
old  <string_1203E202#:>
new  <	; Initializer String 1 > 2>

1035:
old  <	; Initializer String 1 > 2>
new  <	db "1 > 2", 0>

1036:
old  <	db "1 > 2", 0>
new  <>

1037:
old  <>
new  <section .text>

1038:
old  <section .text>
new  <>

1039:
old  <>
new  < maina:>

1040:
old  < maina:>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1041:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1042:
old  <>
new  < maina$1:>

1043:
old  < maina$1:>
new  <	; Parameter pointer stderr 48>

1044:
old  <	; Parameter pointer stderr 48>
new  <	mov rax, [stderr]>

1045:
old  <	mov rax, [stderr]>
new  <	mov [rbp + 48], rax>

1046:
old  <	mov [rbp + 48], rax>
new  <>

1047:
old  <>
new  < maina$2:>

1048:
old  < maina$2:>
new  <	; Parameter pointer "Assertion failed: "%s" in file %s at line %i\n" 56>

1049:
old  <	; Parameter pointer "Assertion failed: "%s" in file %s at line %i\n" 56>
new  <	mov qword [rbp + 56], string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#>

1050:
old  <	mov qword [rbp + 56], string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#>
new  <>

1051:
old  <>
new  < maina$3:>

1052:
old  < maina$3:>
new  <	; Parameter pointer "1 > 2" 64>

1053:
old  <	; Parameter pointer "1 > 2" 64>
new  <	mov qword [rbp + 64], string_1203E202#>

1054:
old  <	mov qword [rbp + 64], string_1203E202#>
new  <>

1055:
old  <>
new  < maina$4:>

1056:
old  < maina$4:>
new  <	; Parameter pointer "C:\Users\Stefan\Documents\vagrant\homestead\code\code\Main.c" 72>

1057:
old  <	; Parameter pointer "C:\Users\Stefan\Documents\vagrant\homestead\code\code\Main.c" 72>
new  <	mov qword [rbp + 72], string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CMain2Ec#>

1058:
old  <	mov qword [rbp + 72], string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CMain2Ec#>
new  <>

1059:
old  <>
new  < maina$5:>

1060:
old  < maina$5:>
new  <	; Parameter signedint 197 80>

1061:
old  <	; Parameter signedint 197 80>
new  <	mov dword [rbp + 80], 197>

1062:
old  <	mov dword [rbp + 80], 197>
new  <>

1063:
old  <>
new  < maina$6:>

1064:
old  < maina$6:>
new  <	; Call fprintf 24 20>

1065:
old  <	; Call fprintf 24 20>
new  <	mov qword [rbp + 24], maina$7>

1066:
old  <	mov qword [rbp + 24], maina$7>
new  <	mov [rbp + 32], rbp>

1067:
old  <	mov [rbp + 32], rbp>
new  <	add rbp, 24>

1068:
old  <	add rbp, 24>
new  <	mov rdi, rbp>

1069:
old  <	mov rdi, rbp>
new  <	add rdi, 20>

1070:
old  <	add rdi, 20>
new  <	jmp fprintf>

1071:
old  <	jmp fprintf>
new  <>

1072:
old  <>
new  < maina$7:>

1073:
old  < maina$7:>
new  <	; PostCall 24>

1074:
old  <	; PostCall 24>
new  <>

1075:
old  <>
new  < maina$8:>

1076:
old  < maina$8:>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1077:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1078:
old  <>
new  < maina$9:>

1079:
old  < maina$9:>
new  <	; Call abort 24 0>

1080:
old  <	; Call abort 24 0>
new  <	mov qword [rbp + 24], maina$10>

1081:
old  <	mov qword [rbp + 24], maina$10>
new  <	mov [rbp + 32], rbp>

1082:
old  <	mov [rbp + 32], rbp>
new  <	add rbp, 24>

1083:
old  <	add rbp, 24>
new  <	jmp abort>

1084:
old  <	jmp abort>
new  <>

1085:
old  <>
new  < maina$10:>

1086:
old  < maina$10:>
new  <	; PostCall 24>

1087:
old  <	; PostCall 24>
new  <>

1088:
old  <>
new  < maina$11:>

1089:
old  < maina$11:>
new  <	; Return>

1090:
old  <	; Return>
new  <	mov rax, [rbp]>

1091:
old  <	mov rax, [rbp]>
new  <	mov rdi, [rbp + 16]>

1092:
old  <	mov rdi, [rbp + 16]>
new  <	mov rbp, [rbp + 8]>

1093:
old  <	mov rbp, [rbp + 8]>
new  <	jmp rax>

1094:
old  <	jmp rax>
new  <>

1095:
old  <>
new  < maina$12:>

1096:
old  < maina$12:>
new  <	; FunctionEnd maina>

1097:
old  <	; FunctionEnd maina>
new  <>

1098:
old  <>
new  <section .text>

1099:
old  <section .text>
new  <>

1100:
old  <>
new  < _start:>

1101:
old  < _start:>
new  <	; Initializerialize Stack Pointer>

1102:
old  <	; Initializerialize Stack Pointer>
new  <	mov rbp, $StackTop>

1103:
old  <	mov rbp, $StackTop>
new  <	; Initializerialize Heap Pointer>

1104:
old  <	; Initializerialize Heap Pointer>
new  <	mov dword [$StackTop + 65534], $StackTop>

1105:
old  <	mov dword [$StackTop + 65534], $StackTop>
new  <	add dword [$StackTop + 65534], 65534>

1106:
old  <	add dword [$StackTop + 65534], 65534>
new  <	; Initializerialize FPU Control Word, truncate mode => set bit 10 and 11.>

1107:
old  <	; Initializerialize FPU Control Word, truncate mode => set bit 10 and 11.>
new  <	fstcw [rbp]>

1108:
old  <	fstcw [rbp]>
new  <	or word [rbp], 3072>

1109:
old  <	or word [rbp], 3072>
new  <	fldcw [rbp]>

1110:
old  <	fldcw [rbp]>
new  <	mov qword [$StackTop], 0>

1111:
old  <	mov qword [$StackTop], 0>
new  <>

1112:
old  <>
new  < main:>

1113:
old  < main:>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1114:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1115:
old  <>
new  < main$1:>

1116:
old  < main$1:>
new  <	; Call time_test 24 0>

1117:
old  <	; Call string_test 24 0>
new  <	mov qword [rbp + 24], main$2>

1118:
old  <	mov qword [rbp + 24], main$2>
new  <	mov [rbp + 32], rbp>

1119:
old  <	mov [rbp + 32], rbp>
new  <	add rbp, 24>

1120:
old  <	add rbp, 24>
new  <	jmp time_test>

1121:
old  <	jmp string_test>
new  <>

1122:
old  <>
new  < main$2:>

1123:
old  < main$2:>
new  <	; PostCall 24>

1124:
old  <	; PostCall 24>
new  <>

1125:
old  <>
new  < main$3:>

1126:
old  < main$3:>
new  <	; Return>

1127:
old  <	; Return>
new  <	cmp qword [rbp], 0>

1128:
old  <	cmp qword [rbp], 0>
new  <	je main$4>

1129:
old  <	je main$4>
new  <	mov rax, [rbp]>

1130:
old  <	mov rax, [rbp]>
new  <	mov rdi, [rbp + 16]>

1131:
old  <	mov rdi, [rbp + 16]>
new  <	mov rbp, [rbp + 8]>

1132:
old  <	mov rbp, [rbp + 8]>
new  <	jmp rax>

1133:
old  <	jmp rax>
new  <>

1134:
old  <>
new  < main$4:>

1135:
old  < main$4:>
new  <	; Exit>

1136:
old  <	; Exit>
new  <	mov rdi, 0>

1137:
old  <	mov rdi, 0>
new  <	mov rax, 60>

1138:
old  <	mov rax, 60>
new  <	syscall>

1139:
old  <	syscall>
new  <>

1140:
old  <>
new  < main$5:>

1141:
old  < main$5:>
new  <	; FunctionEnd main>

1142:
old  <	; FunctionEnd main>
new  <>

1143:
old  <>
new  <section .data>

1144:
old  <section .data>
new  <>

1145:
old  <>
new  <@423$ZERO:>

1146:
old  <@423$ZERO:>
new  <	; Initializer SignedInt 0>

1147:
old  <	; Initializer SignedInt 0>
new  <	dd 0>

1148:
old  <	dd 0>
new  <>

1149:
old  <>
new  <section .data>

1150:
old  <section .data>
new  <>

1151:
old  <>
new  <@424$ONE:>

1152:
old  <@424$ONE:>
new  <	; Initializer SignedInt 1>

1153:
old  <	; Initializer SignedInt 1>
new  <	dd 1>

1154:
old  <	dd 1>
new  <>

1155:
old  <>
new  <section .data>

1156:
old  <section .data>
new  <>

1157:
old  <>
new  <@427$TWO:>

1158:
old  <@427$TWO:>
new  <	; Initializer SignedInt 2>

1159:
old  <	; Initializer SignedInt 2>
new  <	dd 2>

1160:
old  <	dd 2>
new  <>

1161:
old  <>
new  <section .data>

1162:
old  <section .data>
new  <>

1163:
old  <>
new  <@428$THREE:>

1164:
old  <@428$THREE:>
new  <	; Initializer SignedInt 3>

1165:
old  <	; Initializer SignedInt 3>
new  <	dd 3>

1166:
old  <	dd 3>
new  <>

1167:
old  <>
new  <section .data>

1168:
old  <section .data>
new  <>

1169:
old  <>
new  <string_argc3A2025i0A#:>

1170:
old  <string_argc3A2025i0A#:>
new  <	; Initializer String argc: %i\n>

1171:
old  <	; Initializer String argc: %i\n>
new  <	db "argc: %i", 10, 0>

1172:
old  <	db "argc: %i", 10, 0>
new  <>

1173:
old  <>
new  <section .data>

1174:
old  <section .data>
new  <>

1175:
old  <>
new  <string_Hello210A#:>

1176:
old  <string_Hello210A#:>
new  <	; Initializer String Hello!\n>

1177:
old  <	; Initializer String Hello!\n>
new  <	db "Hello!", 10, 0>

1178:
old  <	db "Hello!", 10, 0>
new  <>

1179:
old  <>
new  <section .data>

1180:
old  <section .data>
new  <>

1181:
old  <>
new  <string_Please20write20a20character2C20a20string2C20an20integer2C20and20a20double3A20#:>

1182:
old  <string_Please20write20a20character2C20a20string2C20an20integer2C20and20a20double3A20#:>
new  <	; Initializer String Please write a character, a string, an integer, and a double: >

1183:
old  <	; Initializer String Please write a character, a string, an integer, and a double: >
new  <	db "Please write a character, a string, an integer, and a double: ", 0>

1184:
old  <	db "Please write a character, a string, an integer, and a double: ", 0>
new  <>

1185:
old  <>
new  <section .data>

1186:
old  <section .data>
new  <>

1187:
old  <>
new  <string_25c2025s2025i2025lf#:>

1188:
old  <string_25c2025s2025i2025lf#:>
new  <	; Initializer String %c %s %i %lf>

1189:
old  <	; Initializer String %c %s %i %lf>
new  <	db "%c %s %i %lf", 0>

1190:
old  <	db "%c %s %i %lf", 0>
new  <>

1191:
old  <>
new  <section .data>

1192:
old  <section .data>
new  <>

1193:
old  <>
new  <string_You20wrote20the20character202725c272C20the20string202225s222C20the20integer2025i2C20and20the20double2025f2E0A#:>

1194:
old  <string_You20wrote20the20character202725c272C20the20string202225s222C20the20integer2025i2C20and20the20double2025f2E0A#:>
new  <	; Initializer String You wrote the character '%c', the string "%s", the integer %i, and the double %f.\n>

1195:
old  <	; Initializer String You wrote the character '%c', the string "%s", the integer %i, and the double %f.\n>
new  <	db "You wrote the character ", 39, "%c", 39, ", the string ", 34, "%s", 34, ", the integer %i, and the double %f.", 10, 0>

1196:
old  <	db "You wrote the character ", 39, "%c", 39, ", the string ", 34, "%s", 34, ", the integer %i, and the double %f.", 10, 0>
new  <>

1197:
old  <>
new  <section .text>

1198:
old  <section .text>
new  <>

1199:
old  <>
new  < mainX4:>

1200:
old  < mainX4:>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1201:
old  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1202:
old  <>
new  < mainX4$1:>

1203:
old  < mainX4$1:>
new  <	; Parameter pointer "argc: %i\n" 60>

1204:
old  <	; Parameter pointer "argc: %i\n" 60>
new  <	mov qword [rbp + 60], string_argc3A2025i0A#>

1205:
old  <	mov qword [rbp + 60], string_argc3A2025i0A#>
new  <>

1206:
old  <>
new  < mainX4$2:>

1207:
old  < mainX4$2:>
new  <	; Parameter signedint argc 68>

1208:
old  <	; Parameter signedint argc 68>
new  <	mov eax, [rbp + 24]>

1209:
old  <	mov eax, [rbp + 24]>
new  <	mov [rbp + 68], eax>

1210:
old  <	mov [rbp + 68], eax>
new  <>

1211:
old  <>
new  < mainX4$3:>

1212:
old  < mainX4$3:>
new  <	; Call printf 36 4>

1213:
old  <	; Call printf 36 4>
new  <	mov qword [rbp + 36], mainX4$4>

1214:
old  <	mov qword [rbp + 36], mainX4$4>
new  <	mov [rbp + 44], rbp>

1215:
old  <	mov [rbp + 44], rbp>
new  <	add rbp, 36>

1216:
old  <	add rbp, 36>
new  <	mov rdi, rbp>

1217:
old  <	mov rdi, rbp>
new  <	add rdi, 4>

1218:
old  <	add rdi, 4>
new  <	jmp printf>

1219:
old  <	jmp printf>
new  <>

1220:
old  <>
new  < mainX4$4:>

1221:
old  < mainX4$4:>
new  <	; PostCall 36>

1222:
old  <	; PostCall 36>
new  <>

1223:
old  <>
new  < mainX4$5:>

1224:
old  < mainX4$5:>
new  <	; Assign index 0>

1225:
old  <	; Assign index 0>
new  <	mov dword [rbp + 36], 0>

1226:
old  <	mov dword [rbp + 36], 0>
new  <>

1227:
old  <>
new  < mainX4$6:>

1228:
old  < mainX4$6:>
new  <	; SignedGreaterThanEqual 19 index argc>

1229:
old  <	; SignedGreaterThanEqual 19 index argc>
new  <	mov eax, [rbp + 24]>

1230:
old  <	mov eax, [rbp + 24]>
new  <	cmp [rbp + 36], eax>

1231:
old  <	cmp [rbp + 36], eax>
new  <	jge mainX4$19>

1232:
old  <	jge mainX4$19>
new  <>

1233:
old  <>
new  < mainX4$7:>

1234:
old  < mainX4$7:>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1235:
old  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1236:
old  <>
new  < mainX4$8:>

1237:
old  < mainX4$8:>
new  <	; Parameter pointer "%i: <%s>\n" 64>

1238:
old  <	; Parameter pointer "%i: <%s>\n" 64>
new  <	mov qword [rbp + 64], string_25i3A203C25s3E0A#>

1239:
old  <	mov qword [rbp + 64], string_25i3A203C25s3E0A#>
new  <>

1240:
old  <>
new  < mainX4$9:>

1241:
old  < mainX4$9:>
new  <	; Parameter signedint index 72>

1242:
old  <	; Parameter signedint index 72>
new  <	mov eax, [rbp + 36]>

1243:
old  <	mov eax, [rbp + 36]>
new  <	mov [rbp + 72], eax>

1244:
old  <	mov [rbp + 72], eax>
new  <>

1245:
old  <>
new  < mainX4$10:>

1246:
old  < mainX4$10:>
new  <	; IntegralToIntegral Â£temporary80 index>

1247:
old  <	; IntegralToIntegral Â£temporary80 index>
new  <	mov eax, [rbp + 36]>

1248:
old  <	mov eax, [rbp + 36]>
new  <	mov rbx, 4294967295>

1249:
old  <	mov rbx, 4294967295>
new  <	and rax, rbx>

1250:
old  <	and rax, rbx>
new  <>

1251:
old  <>
new  < mainX4$11:>

1252:
old  < mainX4$11:>
new  <	; UnsignedMultiply Â£temporary81 Â£temporary80 8>

1253:
old  <	; UnsignedMultiply Â£temporary81 Â£temporary80 8>
new  <	xor rdx, rdx>

1254:
old  <	xor rdx, rdx>
new  <	mul qword [int8$8#]>

1255:
old  <	mul qword [int8$8#]>
new  <>

1256:
old  <>
new  < mainX4$12:>

1257:
old  < mainX4$12:>
new  <	; BinaryAdd Â£temporary82 argv Â£temporary81>

1258:
old  <	; BinaryAdd Â£temporary82 argv Â£temporary81>
new  <	mov rsi, [rbp + 28]>

1259:
old  <	mov rsi, [rbp + 28]>
new  <	add rsi, rax>

1260:
old  <	add rsi, rax>
new  <>

1261:
old  <>
new  < mainX4$13:>

1262:
old  < mainX4$13:>
new  <	; Dereference Â£temporary79 -> Â£temporary82 Â£temporary82 0>

1263:
old  <	; Dereference Â£temporary79 -> Â£temporary82 Â£temporary82 0>
new  <>

1264:
old  <>
new  < mainX4$14:>

1265:
old  < mainX4$14:>
new  <	; Parameter pointer Â£temporary79 -> Â£temporary82 76>

1266:
old  <	; Parameter pointer Â£temporary79 -> Â£temporary82 76>
new  <	mov rax, [rsi]>

1267:
old  <	mov rax, [rsi]>
new  <	mov [rbp + 76], rax>

1268:
old  <	mov [rbp + 76], rax>
new  <>

1269:
old  <>
new  < mainX4$15:>

1270:
old  < mainX4$15:>
new  <	; Call printf 40 12>

1271:
old  <	; Call printf 40 12>
new  <	mov qword [rbp + 40], mainX4$16>

1272:
old  <	mov qword [rbp + 40], mainX4$16>
new  <	mov [rbp + 48], rbp>

1273:
old  <	mov [rbp + 48], rbp>
new  <	add rbp, 40>

1274:
old  <	add rbp, 40>
new  <	mov rdi, rbp>

1275:
old  <	mov rdi, rbp>
new  <	add rdi, 12>

1276:
old  <	add rdi, 12>
new  <	jmp printf>

1277:
old  <	jmp printf>
new  <>

1278:
old  <>
new  < mainX4$16:>

1279:
old  < mainX4$16:>
new  <	; PostCall 40>

1280:
old  <	; PostCall 40>
new  <>

1281:
old  <>
new  < mainX4$17:>

1282:
old  < mainX4$17:>
new  <	; BinaryAdd index index 1>

1283:
old  <	; BinaryAdd index index 1>
new  <	inc dword [rbp + 36]>

1284:
old  <	inc dword [rbp + 36]>
new  <>

1285:
old  <>
new  < mainX4$18:>

1286:
old  < mainX4$18:>
new  <	; Goto 6>

1287:
old  <	; Goto 6>
new  <	jmp mainX4$6>

1288:
old  <	jmp mainX4$6>
new  <>

1289:
old  <>
new  < mainX4$19:>

1290:
old  < mainX4$19:>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1291:
old  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1292:
old  <>
new  < mainX4$20:>

1293:
old  < mainX4$20:>
new  <	; Parameter pointer "\n" 64>

1294:
old  <	; Parameter pointer "\n" 64>
new  <	mov qword [rbp + 64], string_0A#>

1295:
old  <	mov qword [rbp + 64], string_0A#>
new  <>

1296:
old  <>
new  < mainX4$21:>

1297:
old  < mainX4$21:>
new  <	; Call printf 40 0>

1298:
old  <	; Call printf 40 0>
new  <	mov qword [rbp + 40], mainX4$22>

1299:
old  <	mov qword [rbp + 40], mainX4$22>
new  <	mov [rbp + 48], rbp>

1300:
old  <	mov [rbp + 48], rbp>
new  <	add rbp, 40>

1301:
old  <	add rbp, 40>
new  <	mov rdi, rbp>

1302:
old  <	mov rdi, rbp>
new  <	jmp printf>

1303:
old  <	jmp printf>
new  <>

1304:
old  <>
new  < mainX4$22:>

1305:
old  < mainX4$22:>
new  <	; PostCall 40>

1306:
old  <	; PostCall 40>
new  <>

1307:
old  <>
new  < mainX4$23:>

1308:
old  < mainX4$23:>
new  <	; Assign index 0>

1309:
old  <	; Assign index 0>
new  <	mov dword [rbp + 36], 0>

1310:
old  <	mov dword [rbp + 36], 0>
new  <>

1311:
old  <>
new  < mainX4$24:>

1312:
old  < mainX4$24:>
new  <	; IntegralToIntegral Â£temporary86 index>

1313:
old  <	; IntegralToIntegral Â£temporary86 index>
new  <	mov eax, [rbp + 36]>

1314:
old  <	mov eax, [rbp + 36]>
new  <	mov rbx, 4294967295>

1315:
old  <	mov rbx, 4294967295>
new  <	and rax, rbx>

1316:
old  <	and rax, rbx>
new  <>

1317:
old  <>
new  < mainX4$25:>

1318:
old  < mainX4$25:>
new  <	; UnsignedMultiply Â£temporary87 Â£temporary86 8>

1319:
old  <	; UnsignedMultiply Â£temporary87 Â£temporary86 8>
new  <	xor rdx, rdx>

1320:
old  <	xor rdx, rdx>
new  <	mul qword [int8$8#]>

1321:
old  <	mul qword [int8$8#]>
new  <>

1322:
old  <>
new  < mainX4$26:>

1323:
old  < mainX4$26:>
new  <	; BinaryAdd Â£temporary88 argv Â£temporary87>

1324:
old  <	; BinaryAdd Â£temporary88 argv Â£temporary87>
new  <	mov rsi, [rbp + 28]>

1325:
old  <	mov rsi, [rbp + 28]>
new  <	add rsi, rax>

1326:
old  <	add rsi, rax>
new  <>

1327:
old  <>
new  < mainX4$27:>

1328:
old  < mainX4$27:>
new  <	; Dereference Â£temporary85 -> Â£temporary88 Â£temporary88 0>

1329:
old  <	; Dereference Â£temporary85 -> Â£temporary88 Â£temporary88 0>
new  <>

1330:
old  <>
new  < mainX4$28:>

1331:
old  < mainX4$28:>
new  <	; Equal 41 Â£temporary85 -> Â£temporary88 0>

1332:
old  <	; Equal 41 Â£temporary85 -> Â£temporary88 0>
new  <	cmp qword [rsi], 0>

1333:
old  <	cmp qword [rsi], 0>
new  <	je mainX4$41>

1334:
old  <	je mainX4$41>
new  <>

1335:
old  <>
new  < mainX4$29:>

1336:
old  < mainX4$29:>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1337:
old  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1338:
old  <>
new  < mainX4$30:>

1339:
old  < mainX4$30:>
new  <	; Parameter pointer "%i: <%s>\n" 64>

1340:
old  <	; Parameter pointer "%i: <%s>\n" 64>
new  <	mov qword [rbp + 64], string_25i3A203C25s3E0A#>

1341:
old  <	mov qword [rbp + 64], string_25i3A203C25s3E0A#>
new  <>

1342:
old  <>
new  < mainX4$31:>

1343:
old  < mainX4$31:>
new  <	; Parameter signedint index 72>

1344:
old  <	; Parameter signedint index 72>
new  <	mov eax, [rbp + 36]>

1345:
old  <	mov eax, [rbp + 36]>
new  <	mov [rbp + 72], eax>

1346:
old  <	mov [rbp + 72], eax>
new  <>

1347:
old  <>
new  < mainX4$32:>

1348:
old  < mainX4$32:>
new  <	; IntegralToIntegral Â£temporary92 index>

1349:
old  <	; IntegralToIntegral Â£temporary92 index>
new  <	mov eax, [rbp + 36]>

1350:
old  <	mov eax, [rbp + 36]>
new  <	mov rbx, 4294967295>

1351:
old  <	mov rbx, 4294967295>
new  <	and rax, rbx>

1352:
old  <	and rax, rbx>
new  <>

1353:
old  <>
new  < mainX4$33:>

1354:
old  < mainX4$33:>
new  <	; UnsignedMultiply Â£temporary93 Â£temporary92 8>

1355:
old  <	; UnsignedMultiply Â£temporary93 Â£temporary92 8>
new  <	xor rdx, rdx>

1356:
old  <	xor rdx, rdx>
new  <	mul qword [int8$8#]>

1357:
old  <	mul qword [int8$8#]>
new  <>

1358:
old  <>
new  < mainX4$34:>

1359:
old  < mainX4$34:>
new  <	; BinaryAdd Â£temporary94 argv Â£temporary93>

1360:
old  <	; BinaryAdd Â£temporary94 argv Â£temporary93>
new  <	mov rsi, [rbp + 28]>

1361:
old  <	mov rsi, [rbp + 28]>
new  <	add rsi, rax>

1362:
old  <	add rsi, rax>
new  <>

1363:
old  <>
new  < mainX4$35:>

1364:
old  < mainX4$35:>
new  <	; Dereference Â£temporary91 -> Â£temporary94 Â£temporary94 0>

1365:
old  <	; Dereference Â£temporary91 -> Â£temporary94 Â£temporary94 0>
new  <>

1366:
old  <>
new  < mainX4$36:>

1367:
old  < mainX4$36:>
new  <	; Parameter pointer Â£temporary91 -> Â£temporary94 76>

1368:
old  <	; Parameter pointer Â£temporary91 -> Â£temporary94 76>
new  <	mov rax, [rsi]>

1369:
old  <	mov rax, [rsi]>
new  <	mov [rbp + 76], rax>

1370:
old  <	mov [rbp + 76], rax>
new  <>

1371:
old  <>
new  < mainX4$37:>

1372:
old  < mainX4$37:>
new  <	; Call printf 40 12>

1373:
old  <	; Call printf 40 12>
new  <	mov qword [rbp + 40], mainX4$38>

1374:
old  <	mov qword [rbp + 40], mainX4$38>
new  <	mov [rbp + 48], rbp>

1375:
old  <	mov [rbp + 48], rbp>
new  <	add rbp, 40>

1376:
old  <	add rbp, 40>
new  <	mov rdi, rbp>

1377:
old  <	mov rdi, rbp>
new  <	add rdi, 12>

1378:
old  <	add rdi, 12>
new  <	jmp printf>

1379:
old  <	jmp printf>
new  <>

1380:
old  <>
new  < mainX4$38:>

1381:
old  < mainX4$38:>
new  <	; PostCall 40>

1382:
old  <	; PostCall 40>
new  <>

1383:
old  <>
new  < mainX4$39:>

1384:
old  < mainX4$39:>
new  <	; BinaryAdd index index 1>

1385:
old  <	; BinaryAdd index index 1>
new  <	inc dword [rbp + 36]>

1386:
old  <	inc dword [rbp + 36]>
new  <>

1387:
old  <>
new  < mainX4$40:>

1388:
old  < mainX4$40:>
new  <	; Goto 24>

1389:
old  <	; Goto 24>
new  <	jmp mainX4$24>

1390:
old  <	jmp mainX4$24>
new  <>

1391:
old  <>
new  < mainX4$41:>

1392:
old  < mainX4$41:>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1393:
old  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1394:
old  <>
new  < mainX4$42:>

1395:
old  < mainX4$42:>
new  <	; Parameter pointer "\n" 64>

1396:
old  <	; Parameter pointer "\n" 64>
new  <	mov qword [rbp + 64], string_0A#>

1397:
old  <	mov qword [rbp + 64], string_0A#>
new  <>

1398:
old  <>
new  < mainX4$43:>

1399:
old  < mainX4$43:>
new  <	; Call printf 40 0>

1400:
old  <	; Call printf 40 0>
new  <	mov qword [rbp + 40], mainX4$44>

1401:
old  <	mov qword [rbp + 40], mainX4$44>
new  <	mov [rbp + 48], rbp>

1402:
old  <	mov [rbp + 48], rbp>
new  <	add rbp, 40>

1403:
old  <	add rbp, 40>
new  <	mov rdi, rbp>

1404:
old  <	mov rdi, rbp>
new  <	jmp printf>

1405:
old  <	jmp printf>
new  <>

1406:
old  <>
new  < mainX4$44:>

1407:
old  < mainX4$44:>
new  <	; PostCall 40>

1408:
old  <	; PostCall 40>
new  <>

1409:
old  <>
new  < mainX4$45:>

1410:
old  < mainX4$45:>
new  <	; PreCall 69 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1411:
old  <	; PreCall 69 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1412:
old  <>
new  < mainX4$46:>

1413:
old  < mainX4$46:>
new  <	; Parameter pointer 0 93>

1414:
old  <	; Parameter pointer 0 93>
new  <	mov qword [rbp + 93], 0>

1415:
old  <	mov qword [rbp + 93], 0>
new  <>

1416:
old  <>
new  < mainX4$47:>

1417:
old  < mainX4$47:>
new  <	; Call mktime 69 0>

1418:
old  <	; Call mktime 69 0>
new  <	mov qword [rbp + 69], mainX4$48>

1419:
old  <	mov qword [rbp + 69], mainX4$48>
new  <	mov [rbp + 77], rbp>

1420:
old  <	mov [rbp + 77], rbp>
new  <	add rbp, 69>

1421:
old  <	add rbp, 69>
new  <	jmp mktime>

1422:
old  <	jmp mktime>
new  <>

1423:
old  <>
new  < mainX4$48:>

1424:
old  < mainX4$48:>
new  <	; PostCall 69>

1425:
old  <	; PostCall 69>
new  <>

1426:
old  <>
new  < mainX4$49:>

1427:
old  < mainX4$49:>
new  <	; PreCall 69 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1428:
old  <	; PreCall 69 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1429:
old  <>
new  < mainX4$50:>

1430:
old  < mainX4$50:>
new  <	; Parameter pointer "Hello!\n" 93>

1431:
old  <	; Parameter pointer "Hello!\n" 93>
new  <	mov qword [rbp + 93], string_Hello210A#>

1432:
old  <	mov qword [rbp + 93], string_Hello210A#>
new  <>

1433:
old  <>
new  < mainX4$51:>

1434:
old  < mainX4$51:>
new  <	; Call printf 69 0>

1435:
old  <	; Call printf 69 0>
new  <	mov qword [rbp + 69], mainX4$52>

1436:
old  <	mov qword [rbp + 69], mainX4$52>
new  <	mov [rbp + 77], rbp>

1437:
old  <	mov [rbp + 77], rbp>
new  <	add rbp, 69>

1438:
old  <	add rbp, 69>
new  <	mov rdi, rbp>

1439:
old  <	mov rdi, rbp>
new  <	jmp printf>

1440:
old  <	jmp printf>
new  <>

1441:
old  <>
new  < mainX4$52:>

1442:
old  < mainX4$52:>
new  <	; PostCall 69>

1443:
old  <	; PostCall 69>
new  <>

1444:
old  <>
new  < mainX4$53:>

1445:
old  < mainX4$53:>
new  <	; PreCall 69 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1446:
old  <	; PreCall 69 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1447:
old  <>
new  < mainX4$54:>

1448:
old  < mainX4$54:>
new  <	; Parameter pointer "Please write a character, a string, an integer, and a double: " 93>

1449:
old  <	; Parameter pointer "Please write a character, a string, an integer, and a double: " 93>
new  <	mov qword [rbp + 93], string_Please20write20a20character2C20a20string2C20an20integer2C20and20a20double3A20#>

1450:
old  <	mov qword [rbp + 93], string_Please20write20a20character2C20a20string2C20an20integer2C20and20a20double3A20#>
new  <>

1451:
old  <>
new  < mainX4$55:>

1452:
old  < mainX4$55:>
new  <	; Call printf 69 0>

1453:
old  <	; Call printf 69 0>
new  <	mov qword [rbp + 69], mainX4$56>

1454:
old  <	mov qword [rbp + 69], mainX4$56>
new  <	mov [rbp + 77], rbp>

1455:
old  <	mov [rbp + 77], rbp>
new  <	add rbp, 69>

1456:
old  <	add rbp, 69>
new  <	mov rdi, rbp>

1457:
old  <	mov rdi, rbp>
new  <	jmp printf>

1458:
old  <	jmp printf>
new  <>

1459:
old  <>
new  < mainX4$56:>

1460:
old  < mainX4$56:>
new  <	; PostCall 69>

1461:
old  <	; PostCall 69>
new  <>

1462:
old  <>
new  < mainX4$57:>

1463:
old  < mainX4$57:>
new  <	; PreCall 69 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1464:
old  <	; PreCall 69 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1465:
old  <>
new  < mainX4$58:>

1466:
old  < mainX4$58:>
new  <	; Parameter pointer "%c %s %i %lf" 93>

1467:
old  <	; Parameter pointer "%c %s %i %lf" 93>
new  <	mov qword [rbp + 93], string_25c2025s2025i2025lf#>

1468:
old  <	mov qword [rbp + 93], string_25c2025s2025i2025lf#>
new  <>

1469:
old  <>
new  < mainX4$59:>

1470:
old  < mainX4$59:>
new  <	; Address Â£temporary100 c>

1471:
old  <	; Address Â£temporary100 c>
new  <	mov rsi, rbp>

1472:
old  <	mov rsi, rbp>
new  <	add rsi, 48>

1473:
old  <	add rsi, 48>
new  <>

1474:
old  <>
new  < mainX4$60:>

1475:
old  < mainX4$60:>
new  <	; Parameter pointer Â£temporary100 101>

1476:
old  <	; Parameter pointer Â£temporary100 101>
new  <	mov [rbp + 101], rsi>

1477:
old  <	mov [rbp + 101], rsi>
new  <>

1478:
old  <>
new  < mainX4$61:>

1479:
old  < mainX4$61:>
new  <	; Parameter pointer s 109>

1480:
old  <	; Parameter pointer s 109>
new  <	mov [rbp + 109], rbp>

1481:
old  <	mov [rbp + 109], rbp>
new  <	add qword [rbp + 109], 49>

1482:
old  <	add qword [rbp + 109], 49>
new  <>

1483:
old  <>
new  < mainX4$62:>

1484:
old  < mainX4$62:>
new  <	; Address Â£temporary101 i>

1485:
old  <	; Address Â£temporary101 i>
new  <	mov rsi, rbp>

1486:
old  <	mov rsi, rbp>
new  <	add rsi, 36>

1487:
old  <	add rsi, 36>
new  <>

1488:
old  <>
new  < mainX4$63:>

1489:
old  < mainX4$63:>
new  <	; Parameter pointer Â£temporary101 117>

1490:
old  <	; Parameter pointer Â£temporary101 117>
new  <	mov [rbp + 117], rsi>

1491:
old  <	mov [rbp + 117], rsi>
new  <>

1492:
old  <>
new  < mainX4$64:>

1493:
old  < mainX4$64:>
new  <	; Address Â£temporary102 d>

1494:
old  <	; Address Â£temporary102 d>
new  <	mov rsi, rbp>

1495:
old  <	mov rsi, rbp>
new  <	add rsi, 40>

1496:
old  <	add rsi, 40>
new  <>

1497:
old  <>
new  < mainX4$65:>

1498:
old  < mainX4$65:>
new  <	; Parameter pointer Â£temporary102 125>

1499:
old  <	; Parameter pointer Â£temporary102 125>
new  <	mov [rbp + 125], rsi>

1500:
old  <	mov [rbp + 125], rsi>
new  <>

1501:
old  <>
new  < mainX4$66:>

1502:
old  < mainX4$66:>
new  <	; Call scanf 69 32>

1503:
old  <	; Call scanf 69 32>
new  <	mov qword [rbp + 69], mainX4$67>

1504:
old  <	mov qword [rbp + 69], mainX4$67>
new  <	mov [rbp + 77], rbp>

1505:
old  <	mov [rbp + 77], rbp>
new  <	add rbp, 69>

1506:
old  <	add rbp, 69>
new  <	mov rdi, rbp>

1507:
old  <	mov rdi, rbp>
new  <	add rdi, 32>

1508:
old  <	add rdi, 32>
new  <	jmp scanf>

1509:
old  <	jmp scanf>
new  <>

1510:
old  <>
new  < mainX4$67:>

1511:
old  < mainX4$67:>
new  <	; PostCall 69>

1512:
old  <	; PostCall 69>
new  <>

1513:
old  <>
new  < mainX4$68:>

1514:
old  < mainX4$68:>
new  <	; PreCall 69 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1515:
old  <	; PreCall 69 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1516:
old  <>
new  < mainX4$69:>

1517:
old  < mainX4$69:>
new  <	; Parameter pointer "You wrote the character '%c', the string "%s", the integer %i, and the double %f.\n" 93>

1518:
old  <	; Parameter pointer "You wrote the character '%c', the string "%s", the integer %i, and the double %f.\n" 93>
new  <	mov qword [rbp + 93], string_You20wrote20the20character202725c272C20the20string202225s222C20the20integer2025i2C20and20the20double2025f2E0A#>

1519:
old  <	mov qword [rbp + 93], string_You20wrote20the20character202725c272C20the20string202225s222C20the20integer2025i2C20and20the20double2025f2E0A#>
new  <>

1520:
old  <>
new  < mainX4$70:>

1521:
old  < mainX4$70:>
new  <	; IntegralToIntegral Â£temporary104 c>

1522:
old  <	; IntegralToIntegral Â£temporary104 c>
new  <	mov al, [rbp + 48]>

1523:
old  <	mov al, [rbp + 48]>
new  <	and eax, 255>

1524:
old  <	and eax, 255>
new  <	cmp al, 0>

1525:
old  <	cmp al, 0>
new  <	jge mainX4$71>

1526:
old  <	jge mainX4$71>
new  <	neg al>

1527:
old  <	neg al>
new  <	neg eax>

1528:
old  <	neg eax>
new  <>

1529:
old  <>
new  < mainX4$71:>

1530:
old  < mainX4$71:>
new  <	; Parameter signedint Â£temporary104 101>

1531:
old  <	; Parameter signedint Â£temporary104 101>
new  <	mov [rbp + 101], eax>

1532:
old  <	mov [rbp + 101], eax>
new  <>

1533:
old  <>
new  < mainX4$72:>

1534:
old  < mainX4$72:>
new  <	; Parameter pointer s 105>

1535:
old  <	; Parameter pointer s 105>
new  <	mov [rbp + 105], rbp>

1536:
old  <	mov [rbp + 105], rbp>
new  <	add qword [rbp + 105], 49>

1537:
old  <	add qword [rbp + 105], 49>
new  <>

1538:
old  <>
new  < mainX4$73:>

1539:
old  < mainX4$73:>
new  <	; Parameter signedint i 113>

1540:
old  <	; Parameter signedint i 113>
new  <	mov eax, [rbp + 36]>

1541:
old  <	mov eax, [rbp + 36]>
new  <	mov [rbp + 113], eax>

1542:
old  <	mov [rbp + 113], eax>
new  <>

1543:
old  <>
new  < mainX4$74:>

1544:
old  < mainX4$74:>
new  <	; PushFloat d>

1545:
old  <	; PushFloat d>
new  <	fld qword [rbp + 40]>

1546:
old  <	fld qword [rbp + 40]>
new  <>

1547:
old  <>
new  < mainX4$75:>

1548:
old  < mainX4$75:>
new  <	; Parameter double d 117>

1549:
old  <	; Parameter double d 117>
new  <	fstp qword [rbp + 117]>

1550:
old  <	fstp qword [rbp + 117]>
new  <>

1551:
old  <>
new  < mainX4$76:>

1552:
old  < mainX4$76:>
new  <	; Call printf 69 24>

1553:
old  <	; Call printf 69 24>
new  <	mov qword [rbp + 69], mainX4$77>

1554:
old  <	mov qword [rbp + 69], mainX4$77>
new  <	mov [rbp + 77], rbp>

1555:
old  <	mov [rbp + 77], rbp>
new  <	add rbp, 69>

1556:
old  <	add rbp, 69>
new  <	mov rdi, rbp>

1557:
old  <	mov rdi, rbp>
new  <	add rdi, 24>

1558:
old  <	add rdi, 24>
new  <	jmp printf>

1559:
old  <	jmp printf>
new  <>

1560:
old  <>
new  < mainX4$77:>

1561:
old  < mainX4$77:>
new  <	; PostCall 69>

1562:
old  <	; PostCall 69>
new  <>

1563:
old  <>
new  < mainX4$78:>

1564:
old  < mainX4$78:>
new  <	; Return>

1565:
old  <	; Return>
new  <	mov rax, [rbp]>

1566:
old  <	mov rax, [rbp]>
new  <	mov rdi, [rbp + 16]>

1567:
old  <	mov rdi, [rbp + 16]>
new  <	mov rbp, [rbp + 8]>

1568:
old  <	mov rbp, [rbp + 8]>
new  <	jmp rax>

1569:
old  <	jmp rax>
new  <>

1570:
old  <>
new  < mainX4$79:>

1571:
old  < mainX4$79:>
new  <	; FunctionEnd mainX4>

1572:
old  <	; FunctionEnd mainX4>
new  <>

1573:
old  <>
new  <section .data>

1574:
old  <section .data>
new  <>

1575:
old  <>
new  <string_3A20#:>

1576:
old  <string_3A20#:>
new  <	; Initializer String : >

1577:
old  <	; Initializer String : >
new  <	db ": ", 0>

1578:
old  <	db ": ", 0>
new  <>

1579:
old  <>
new  <section .data>

1580:
old  <section .data>
new  <>

1581:
old  <>
new  <string_25lf#:>

1582:
old  <string_25lf#:>
new  <	; Initializer String %lf>

1583:
old  <	; Initializer String %lf>
new  <	db "%lf", 0>

1584:
old  <	db "%lf", 0>
new  <>

1585:
old  <>
new  <section .data>

1586:
old  <section .data>
new  <>

1587:
old  <>
new  <string_3C25f3E#:>

1588:
old  <string_3C25f3E#:>
new  <	; Initializer String <%f>>

1589:
old  <	; Initializer String <%f>>
new  <	db "<%f>", 0>

1590:
old  <	db "<%f>", 0>
new  <>

1591:
old  <>
new  <section .text>

1592:
old  <section .text>
new  <>

1593:
old  <>
new  < main3:>

1594:
old  < main3:>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1595:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1596:
old  <>
new  < main3$1:>

1597:
old  < main3$1:>
new  <	; Parameter pointer ": " 56>

1598:
old  <	; Parameter pointer ": " 56>
new  <	mov qword [rbp + 56], string_3A20#>

1599:
old  <	mov qword [rbp + 56], string_3A20#>
new  <>

1600:
old  <>
new  < main3$2:>

1601:
old  < main3$2:>
new  <	; Call printf 32 0>

1602:
old  <	; Call printf 32 0>
new  <	mov qword [rbp + 32], main3$3>

1603:
old  <	mov qword [rbp + 32], main3$3>
new  <	mov [rbp + 40], rbp>

1604:
old  <	mov [rbp + 40], rbp>
new  <	add rbp, 32>

1605:
old  <	add rbp, 32>
new  <	mov rdi, rbp>

1606:
old  <	mov rdi, rbp>
new  <	jmp printf>

1607:
old  <	jmp printf>
new  <>

1608:
old  <>
new  < main3$3:>

1609:
old  < main3$3:>
new  <	; PostCall 32>

1610:
old  <	; PostCall 32>
new  <>

1611:
old  <>
new  < main3$4:>

1612:
old  < main3$4:>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1613:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1614:
old  <>
new  < main3$5:>

1615:
old  < main3$5:>
new  <	; Parameter pointer "%lf" 56>

1616:
old  <	; Parameter pointer "%lf" 56>
new  <	mov qword [rbp + 56], string_25lf#>

1617:
old  <	mov qword [rbp + 56], string_25lf#>
new  <>

1618:
old  <>
new  < main3$6:>

1619:
old  < main3$6:>
new  <	; Address Â£temporary111 x>

1620:
old  <	; Address Â£temporary111 x>
new  <	mov rsi, rbp>

1621:
old  <	mov rsi, rbp>
new  <	add rsi, 24>

1622:
old  <	add rsi, 24>
new  <>

1623:
old  <>
new  < main3$7:>

1624:
old  < main3$7:>
new  <	; Parameter pointer Â£temporary111 64>

1625:
old  <	; Parameter pointer Â£temporary111 64>
new  <	mov [rbp + 64], rsi>

1626:
old  <	mov [rbp + 64], rsi>
new  <>

1627:
old  <>
new  < main3$8:>

1628:
old  < main3$8:>
new  <	; Call scanf 32 8>

1629:
old  <	; Call scanf 32 8>
new  <	mov qword [rbp + 32], main3$9>

1630:
old  <	mov qword [rbp + 32], main3$9>
new  <	mov [rbp + 40], rbp>

1631:
old  <	mov [rbp + 40], rbp>
new  <	add rbp, 32>

1632:
old  <	add rbp, 32>
new  <	mov rdi, rbp>

1633:
old  <	mov rdi, rbp>
new  <	add rdi, 8>

1634:
old  <	add rdi, 8>
new  <	jmp scanf>

1635:
old  <	jmp scanf>
new  <>

1636:
old  <>
new  < main3$9:>

1637:
old  < main3$9:>
new  <	; PostCall 32>

1638:
old  <	; PostCall 32>
new  <>

1639:
old  <>
new  < main3$10:>

1640:
old  < main3$10:>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1641:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1642:
old  <>
new  < main3$11:>

1643:
old  < main3$11:>
new  <	; Parameter pointer "<%f>" 56>

1644:
old  <	; Parameter pointer "<%f>" 56>
new  <	mov qword [rbp + 56], string_3C25f3E#>

1645:
old  <	mov qword [rbp + 56], string_3C25f3E#>
new  <>

1646:
old  <>
new  < main3$12:>

1647:
old  < main3$12:>
new  <	; PushFloat x>

1648:
old  <	; PushFloat x>
new  <	fld qword [rbp + 24]>

1649:
old  <	fld qword [rbp + 24]>
new  <>

1650:
old  <>
new  < main3$13:>

1651:
old  < main3$13:>
new  <	; Parameter double x 64>

1652:
old  <	; Parameter double x 64>
new  <	fstp qword [rbp + 64]>

1653:
old  <	fstp qword [rbp + 64]>
new  <>

1654:
old  <>
new  < main3$14:>

1655:
old  < main3$14:>
new  <	; Call printf 32 8>

1656:
old  <	; Call printf 32 8>
new  <	mov qword [rbp + 32], main3$15>

1657:
old  <	mov qword [rbp + 32], main3$15>
new  <	mov [rbp + 40], rbp>

1658:
old  <	mov [rbp + 40], rbp>
new  <	add rbp, 32>

1659:
old  <	add rbp, 32>
new  <	mov rdi, rbp>

1660:
old  <	mov rdi, rbp>
new  <	add rdi, 8>

1661:
old  <	add rdi, 8>
new  <	jmp printf>

1662:
old  <	jmp printf>
new  <>

1663:
old  <>
new  < main3$15:>

1664:
old  < main3$15:>
new  <	; PostCall 32>

1665:
old  <	; PostCall 32>
new  <>

1666:
old  <>
new  < main3$16:>

1667:
old  < main3$16:>
new  <	; Return>

1668:
old  <	; Return>
new  <	mov rax, [rbp]>

1669:
old  <	mov rax, [rbp]>
new  <	mov rdi, [rbp + 16]>

1670:
old  <	mov rdi, [rbp + 16]>
new  <	mov rbp, [rbp + 8]>

1671:
old  <	mov rbp, [rbp + 8]>
new  <	jmp rax>

1672:
old  <	jmp rax>
new  <>

1673:
old  <>
new  < main3$17:>

1674:
old  < main3$17:>
new  <	; FunctionEnd main3>

1675:
old  <	; FunctionEnd main3>
new  <>

1676:
old  <>
new  <section .data>

1677:
old  <section .data>
new  <>

1678:
old  <>
new  <string_2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D0A#:>

1679:
old  <string_2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D0A#:>
new  <	; Initializer String ---------------------------------------------\n>

1680:
old  <	; Initializer String ---------------------------------------------\n>
new  <	db "---------------------------------------------", 10, 0>

1681:
old  <	db "---------------------------------------------", 10, 0>
new  <>

1682:
old  <>
new  <section .data>

1683:
old  <section .data>
new  <>

1684:
old  <>
new  <float8$3.14#:>

1685:
old  <float8$3.14#:>
new  <	; Initializer Double 3.14>

1686:
old  <	; Initializer Double 3.14>
new  <	dq 3.14>

1687:
old  <	dq 3.14>
new  <>

1688:
old  <>
new  <section .data>

1689:
old  <section .data>
new  <>

1690:
old  <>
new  <float8$2.71#:>

1691:
old  <float8$2.71#:>
new  <	; Initializer Double 2.71>

1692:
old  <	; Initializer Double 2.71>
new  <	dq 2.71>

1693:
old  <	dq 2.71>
new  <>

1694:
old  <>
new  <section .text>

1695:
old  <section .text>
new  <>

1696:
old  <>
new  < mains2:>

1697:
old  < mains2:>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1698:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1699:
old  <>
new  < mains2$1:>

1700:
old  < mains2$1:>
new  <	; PushFloat 3.14>

1701:
old  <	; PushFloat 3.14>
new  <	fld qword [float8$3.14#]>

1702:
old  <	fld qword [float8$3.14#]>
new  <>

1703:
old  <>
new  < mains2$2:>

1704:
old  < mains2$2:>
new  <	; Parameter double 3.14 48>

1705:
old  <	; Parameter double 3.14 48>
new  <	fstp qword [rbp + 48]>

1706:
old  <	fstp qword [rbp + 48]>
new  <>

1707:
old  <>
new  < mains2$3:>

1708:
old  < mains2$3:>
new  <	; Call setjmp_test 24 0>

1709:
old  <	; Call setjmp_test 24 0>
new  <	mov qword [rbp + 24], mains2$4>

1710:
old  <	mov qword [rbp + 24], mains2$4>
new  <	mov [rbp + 32], rbp>

1711:
old  <	mov [rbp + 32], rbp>
new  <	add rbp, 24>

1712:
old  <	add rbp, 24>
new  <	jmp setjmp_test>

1713:
old  <	jmp setjmp_test>
new  <>

1714:
old  <>
new  < mains2$4:>

1715:
old  < mains2$4:>
new  <	; PostCall 24>

1716:
old  <	; PostCall 24>
new  <>

1717:
old  <>
new  < mains2$5:>

1718:
old  < mains2$5:>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1719:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1720:
old  <>
new  < mains2$6:>

1721:
old  < mains2$6:>
new  <	; Parameter pointer "---------------------------------------------\n" 48>

1722:
old  <	; Parameter pointer "---------------------------------------------\n" 48>
new  <	mov qword [rbp + 48], string_2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D0A#>

1723:
old  <	mov qword [rbp + 48], string_2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D0A#>
new  <>

1724:
old  <>
new  < mains2$7:>

1725:
old  < mains2$7:>
new  <	; Call printf 24 0>

1726:
old  <	; Call printf 24 0>
new  <	mov qword [rbp + 24], mains2$8>

1727:
old  <	mov qword [rbp + 24], mains2$8>
new  <	mov [rbp + 32], rbp>

1728:
old  <	mov [rbp + 32], rbp>
new  <	add rbp, 24>

1729:
old  <	add rbp, 24>
new  <	mov rdi, rbp>

1730:
old  <	mov rdi, rbp>
new  <	jmp printf>

1731:
old  <	jmp printf>
new  <>

1732:
old  <>
new  < mains2$8:>

1733:
old  < mains2$8:>
new  <	; PostCall 24>

1734:
old  <	; PostCall 24>
new  <>

1735:
old  <>
new  < mains2$9:>

1736:
old  < mains2$9:>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1737:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1738:
old  <>
new  < mains2$10:>

1739:
old  < mains2$10:>
new  <	; PushFloat 0>

1740:
old  <	; PushFloat 0>
new  <	fldz>

1741:
old  <	fldz>
new  <>

1742:
old  <>
new  < mains2$11:>

1743:
old  < mains2$11:>
new  <	; Parameter double 0 48>

1744:
old  <	; Parameter double 0 48>
new  <	fstp qword [rbp + 48]>

1745:
old  <	fstp qword [rbp + 48]>
new  <>

1746:
old  <>
new  < mains2$12:>

1747:
old  < mains2$12:>
new  <	; Call setjmp_test 24 0>

1748:
old  <	; Call setjmp_test 24 0>
new  <	mov qword [rbp + 24], mains2$13>

1749:
old  <	mov qword [rbp + 24], mains2$13>
new  <	mov [rbp + 32], rbp>

1750:
old  <	mov [rbp + 32], rbp>
new  <	add rbp, 24>

1751:
old  <	add rbp, 24>
new  <	jmp setjmp_test>

1752:
old  <	jmp setjmp_test>
new  <>

1753:
old  <>
new  < mains2$13:>

1754:
old  < mains2$13:>
new  <	; PostCall 24>

1755:
old  <	; PostCall 24>
new  <>

1756:
old  <>
new  < mains2$14:>

1757:
old  < mains2$14:>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1758:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1759:
old  <>
new  < mains2$15:>

1760:
old  < mains2$15:>
new  <	; Parameter pointer "---------------------------------------------\n" 48>

1761:
old  <	; Parameter pointer "---------------------------------------------\n" 48>
new  <	mov qword [rbp + 48], string_2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D0A#>

1762:
old  <	mov qword [rbp + 48], string_2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D0A#>
new  <>

1763:
old  <>
new  < mains2$16:>

1764:
old  < mains2$16:>
new  <	; Call printf 24 0>

1765:
old  <	; Call printf 24 0>
new  <	mov qword [rbp + 24], mains2$17>

1766:
old  <	mov qword [rbp + 24], mains2$17>
new  <	mov [rbp + 32], rbp>

1767:
old  <	mov [rbp + 32], rbp>
new  <	add rbp, 24>

1768:
old  <	add rbp, 24>
new  <	mov rdi, rbp>

1769:
old  <	mov rdi, rbp>
new  <	jmp printf>

1770:
old  <	jmp printf>
new  <>

1771:
old  <>
new  < mains2$17:>

1772:
old  < mains2$17:>
new  <	; PostCall 24>

1773:
old  <	; PostCall 24>
new  <>

1774:
old  <>
new  < mains2$18:>

1775:
old  < mains2$18:>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1776:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1777:
old  <>
new  < mains2$19:>

1778:
old  < mains2$19:>
new  <	; PushFloat 2.71>

1779:
old  <	; PushFloat 2.71>
new  <	fld qword [float8$2.71#]>

1780:
old  <	fld qword [float8$2.71#]>
new  <>

1781:
old  <>
new  < mains2$20:>

1782:
old  < mains2$20:>
new  <	; Parameter double 2.71 48>

1783:
old  <	; Parameter double 2.71 48>
new  <	fstp qword [rbp + 48]>

1784:
old  <	fstp qword [rbp + 48]>
new  <>

1785:
old  <>
new  < mains2$21:>

1786:
old  < mains2$21:>
new  <	; Call setjmp_test 24 0>

1787:
old  <	; Call setjmp_test 24 0>
new  <	mov qword [rbp + 24], mains2$22>

1788:
old  <	mov qword [rbp + 24], mains2$22>
new  <	mov [rbp + 32], rbp>

1789:
old  <	mov [rbp + 32], rbp>
new  <	add rbp, 24>

1790:
old  <	add rbp, 24>
new  <	jmp setjmp_test>

1791:
old  <	jmp setjmp_test>
new  <>

1792:
old  <>
new  < mains2$22:>

1793:
old  < mains2$22:>
new  <	; PostCall 24>

1794:
old  <	; PostCall 24>
new  <>

1795:
old  <>
new  < mains2$23:>

1796:
old  < mains2$23:>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1797:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1798:
old  <>
new  < mains2$24:>

1799:
old  < mains2$24:>
new  <	; Parameter pointer "---------------------------------------------\n" 48>

1800:
old  <	; Parameter pointer "---------------------------------------------\n" 48>
new  <	mov qword [rbp + 48], string_2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D0A#>

1801:
old  <	mov qword [rbp + 48], string_2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D0A#>
new  <>

1802:
old  <>
new  < mains2$25:>

1803:
old  < mains2$25:>
new  <	; Call printf 24 0>

1804:
old  <	; Call printf 24 0>
new  <	mov qword [rbp + 24], mains2$26>

1805:
old  <	mov qword [rbp + 24], mains2$26>
new  <	mov [rbp + 32], rbp>

1806:
old  <	mov [rbp + 32], rbp>
new  <	add rbp, 24>

1807:
old  <	add rbp, 24>
new  <	mov rdi, rbp>

1808:
old  <	mov rdi, rbp>
new  <	jmp printf>

1809:
old  <	jmp printf>
new  <>

1810:
old  <>
new  < mains2$26:>

1811:
old  < mains2$26:>
new  <	; PostCall 24>

1812:
old  <	; PostCall 24>
new  <>

1813:
old  <>
new  < mains2$27:>

1814:
old  < mains2$27:>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1815:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1816:
old  <>
new  < mains2$28:>

1817:
old  < mains2$28:>
new  <	; PushFloat 0>

1818:
old  <	; PushFloat 0>
new  <	fldz>

1819:
old  <	fldz>
new  <>

1820:
old  <>
new  < mains2$29:>

1821:
old  < mains2$29:>
new  <	; Parameter double 0 48>

1822:
old  <	; Parameter double 0 48>
new  <	fstp qword [rbp + 48]>

1823:
old  <	fstp qword [rbp + 48]>
new  <>

1824:
old  <>
new  < mains2$30:>

1825:
old  < mains2$30:>
new  <	; Call setjmp_test 24 0>

1826:
old  <	; Call setjmp_test 24 0>
new  <	mov qword [rbp + 24], mains2$31>

1827:
old  <	mov qword [rbp + 24], mains2$31>
new  <	mov [rbp + 32], rbp>

1828:
old  <	mov [rbp + 32], rbp>
new  <	add rbp, 24>

1829:
old  <	add rbp, 24>
new  <	jmp setjmp_test>

1830:
old  <	jmp setjmp_test>
new  <>

1831:
old  <>
new  < mains2$31:>

1832:
old  < mains2$31:>
new  <	; PostCall 24>

1833:
old  <	; PostCall 24>
new  <>

1834:
old  <>
new  < mains2$32:>

1835:
old  < mains2$32:>
new  <	; Return>

1836:
old  <	; Return>
new  <	mov rax, [rbp]>

1837:
old  <	mov rax, [rbp]>
new  <	mov rdi, [rbp + 16]>

1838:
old  <	mov rdi, [rbp + 16]>
new  <	mov rbp, [rbp + 8]>

1839:
old  <	mov rbp, [rbp + 8]>
new  <	jmp rax>

1840:
old  <	jmp rax>
new  <>

1841:
old  <>
new  < mains2$33:>

1842:
old  < mains2$33:>
new  <	; FunctionEnd mains2>

1843:
old  <	; FunctionEnd mains2>
new  <>

1844:
old  <>
new  <section .text>

1845:
old  <section .text>
new  <>

1846:
old  <>
new  < char_main:>

1847:
old  < char_main:>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1848:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1849:
old  <>
new  < char_main$1:>

1850:
old  < char_main$1:>
new  <	; Parameter signedchar 97 48>

1851:
old  <	; Parameter signedchar 97 48>
new  <	mov byte [rbp + 48], 97>

1852:
old  <	mov byte [rbp + 48], 97>
new  <>

1853:
old  <>
new  < char_main$2:>

1854:
old  < char_main$2:>
new  <	; Call character_test 24 0>

1855:
old  <	; Call character_test 24 0>
new  <	mov qword [rbp + 24], char_main$3>

1856:
old  <	mov qword [rbp + 24], char_main$3>
new  <	mov [rbp + 32], rbp>

1857:
old  <	mov [rbp + 32], rbp>
new  <	add rbp, 24>

1858:
old  <	add rbp, 24>
new  <	jmp character_test>

1859:
old  <	jmp character_test>
new  <>

1860:
old  <>
new  < char_main$3:>

1861:
old  < char_main$3:>
new  <	; PostCall 24>

1862:
old  <	; PostCall 24>
new  <>

1863:
old  <>
new  < char_main$4:>

1864:
old  < char_main$4:>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1865:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1866:
old  <>
new  < char_main$5:>

1867:
old  < char_main$5:>
new  <	; Parameter signedchar 66 48>

1868:
old  <	; Parameter signedchar 66 48>
new  <	mov byte [rbp + 48], 66>

1869:
old  <	mov byte [rbp + 48], 66>
new  <>

1870:
old  <>
new  < char_main$6:>

1871:
old  < char_main$6:>
new  <	; Call character_test 24 0>

1872:
old  <	; Call character_test 24 0>
new  <	mov qword [rbp + 24], char_main$7>

1873:
old  <	mov qword [rbp + 24], char_main$7>
new  <	mov [rbp + 32], rbp>

1874:
old  <	mov [rbp + 32], rbp>
new  <	add rbp, 24>

1875:
old  <	add rbp, 24>
new  <	jmp character_test>

1876:
old  <	jmp character_test>
new  <>

1877:
old  <>
new  < char_main$7:>

1878:
old  < char_main$7:>
new  <	; PostCall 24>

1879:
old  <	; PostCall 24>
new  <>

1880:
old  <>
new  < char_main$8:>

1881:
old  < char_main$8:>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1882:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1883:
old  <>
new  < char_main$9:>

1884:
old  < char_main$9:>
new  <	; Parameter signedchar 49 48>

1885:
old  <	; Parameter signedchar 49 48>
new  <	mov byte [rbp + 48], 49>

1886:
old  <	mov byte [rbp + 48], 49>
new  <>

1887:
old  <>
new  < char_main$10:>

1888:
old  < char_main$10:>
new  <	; Call character_test 24 0>

1889:
old  <	; Call character_test 24 0>
new  <	mov qword [rbp + 24], char_main$11>

1890:
old  <	mov qword [rbp + 24], char_main$11>
new  <	mov [rbp + 32], rbp>

1891:
old  <	mov [rbp + 32], rbp>
new  <	add rbp, 24>

1892:
old  <	add rbp, 24>
new  <	jmp character_test>

1893:
old  <	jmp character_test>
new  <>

1894:
old  <>
new  < char_main$11:>

1895:
old  < char_main$11:>
new  <	; PostCall 24>

1896:
old  <	; PostCall 24>
new  <>

1897:
old  <>
new  < char_main$12:>

1898:
old  < char_main$12:>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1899:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1900:
old  <>
new  < char_main$13:>

1901:
old  < char_main$13:>
new  <	; Parameter signedchar 46 48>

1902:
old  <	; Parameter signedchar 46 48>
new  <	mov byte [rbp + 48], 46>

1903:
old  <	mov byte [rbp + 48], 46>
new  <>

1904:
old  <>
new  < char_main$14:>

1905:
old  < char_main$14:>
new  <	; Call character_test 24 0>

1906:
old  <	; Call character_test 24 0>
new  <	mov qword [rbp + 24], char_main$15>

1907:
old  <	mov qword [rbp + 24], char_main$15>
new  <	mov [rbp + 32], rbp>

1908:
old  <	mov [rbp + 32], rbp>
new  <	add rbp, 24>

1909:
old  <	add rbp, 24>
new  <	jmp character_test>

1910:
old  <	jmp character_test>
new  <>

1911:
old  <>
new  < char_main$15:>

1912:
old  < char_main$15:>
new  <	; PostCall 24>

1913:
old  <	; PostCall 24>
new  <>

1914:
old  <>
new  < char_main$16:>

1915:
old  < char_main$16:>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1916:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1917:
old  <>
new  < char_main$17:>

1918:
old  < char_main$17:>
new  <	; Parameter signedchar 10 48>

1919:
old  <	; Parameter signedchar 10 48>
new  <	mov byte [rbp + 48], 10>

1920:
old  <	mov byte [rbp + 48], 10>
new  <>

1921:
old  <>
new  < char_main$18:>

1922:
old  < char_main$18:>
new  <	; Call character_test 24 0>

1923:
old  <	; Call character_test 24 0>
new  <	mov qword [rbp + 24], char_main$19>

1924:
old  <	mov qword [rbp + 24], char_main$19>
new  <	mov [rbp + 32], rbp>

1925:
old  <	mov [rbp + 32], rbp>
new  <	add rbp, 24>

1926:
old  <	add rbp, 24>
new  <	jmp character_test>

1927:
old  <	jmp character_test>
new  <>

1928:
old  <>
new  < char_main$19:>

1929:
old  < char_main$19:>
new  <	; PostCall 24>

1930:
old  <	; PostCall 24>
new  <>

1931:
old  <>
new  < char_main$20:>

1932:
old  < char_main$20:>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1933:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1934:
old  <>
new  < char_main$21:>

1935:
old  < char_main$21:>
new  <	; Parameter signedchar 102 48>

1936:
old  <	; Parameter signedchar 102 48>
new  <	mov byte [rbp + 48], 102>

1937:
old  <	mov byte [rbp + 48], 102>
new  <>

1938:
old  <>
new  < char_main$22:>

1939:
old  < char_main$22:>
new  <	; Call character_test 24 0>

1940:
old  <	; Call character_test 24 0>
new  <	mov qword [rbp + 24], char_main$23>

1941:
old  <	mov qword [rbp + 24], char_main$23>
new  <	mov [rbp + 32], rbp>

1942:
old  <	mov [rbp + 32], rbp>
new  <	add rbp, 24>

1943:
old  <	add rbp, 24>
new  <	jmp character_test>

1944:
old  <	jmp character_test>
new  <>

1945:
old  <>
new  < char_main$23:>

1946:
old  < char_main$23:>
new  <	; PostCall 24>

1947:
old  <	; PostCall 24>
new  <>

1948:
old  <>
new  < char_main$24:>

1949:
old  < char_main$24:>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1950:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1951:
old  <>
new  < char_main$25:>

1952:
old  < char_main$25:>
new  <	; Parameter signedchar 103 48>

1953:
old  <	; Parameter signedchar 103 48>
new  <	mov byte [rbp + 48], 103>

1954:
old  <	mov byte [rbp + 48], 103>
new  <>

1955:
old  <>
new  < char_main$26:>

1956:
old  < char_main$26:>
new  <	; Call character_test 24 0>

1957:
old  <	; Call character_test 24 0>
new  <	mov qword [rbp + 24], char_main$27>

1958:
old  <	mov qword [rbp + 24], char_main$27>
new  <	mov [rbp + 32], rbp>

1959:
old  <	mov [rbp + 32], rbp>
new  <	add rbp, 24>

1960:
old  <	add rbp, 24>
new  <	jmp character_test>

1961:
old  <	jmp character_test>
new  <>

1962:
old  <>
new  < char_main$27:>

1963:
old  < char_main$27:>
new  <	; PostCall 24>

1964:
old  <	; PostCall 24>
new  <>

1965:
old  <>
new  < char_main$28:>

1966:
old  < char_main$28:>
new  <	; Return>

1967:
old  <	; Return>
new  <	mov rax, [rbp]>

1968:
old  <	mov rax, [rbp]>
new  <	mov rdi, [rbp + 16]>

1969:
old  <	mov rdi, [rbp + 16]>
new  <	mov rbp, [rbp + 8]>

1970:
old  <	mov rbp, [rbp + 8]>
new  <	jmp rax>

1971:
old  <	jmp rax>
new  <>

1972:
old  <>
new  < char_main$29:>

1973:
old  < char_main$29:>
new  <	; FunctionEnd char_main>

1974:
old  <	; FunctionEnd char_main>
new  <>

1975:
old  <>
new  <section .data>

1976:
old  <section .data>
new  <>

1977:
old  <>
new  <string_Please20write20a20number2028not20620or207293A20#:>

1978:
old  <string_Please20write20a20number2028not20620or207293A20#:>
new  <	; Initializer String Please write a number (not 6 or 7): >

1979:
old  <	; Initializer String Please write a number (not 6 or 7): >
new  <	db "Please write a number (not 6 or 7): ", 0>

1980:
old  <	db "Please write a number (not 6 or 7): ", 0>
new  <>

1981:
old  <>
new  <section .data>

1982:
old  <section .data>
new  <>

1983:
old  <>
new  <string_n20213D206#:>

1984:
old  <string_n20213D206#:>
new  <	; Initializer String n != 6>

1985:
old  <	; Initializer String n != 6>
new  <	db "n != 6", 0>

1986:
old  <	db "n != 6", 0>
new  <>

1987:
old  <>
new  <section .text>

1988:
old  <section .text>
new  <>

1989:
old  <>
new  < assert_test:>

1990:
old  < assert_test:>
new  <	; Assign n 0>

1991:
old  <	; Assign n 0>
new  <	mov dword [rbp + 24], 0>

1992:
old  <	mov dword [rbp + 24], 0>
new  <>

1993:
old  <>
new  < assert_test$1:>

1994:
old  < assert_test$1:>
new  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1995:
old  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1996:
old  <>
new  < assert_test$2:>

1997:
old  < assert_test$2:>
new  <	; Parameter pointer "Please write a number (not 6 or 7): " 52>

1998:
old  <	; Parameter pointer "Please write a number (not 6 or 7): " 52>
new  <	mov qword [rbp + 52], string_Please20write20a20number2028not20620or207293A20#>

1999:
old  <	mov qword [rbp + 52], string_Please20write20a20number2028not20620or207293A20#>
new  <>

2000:
old  <>
new  < assert_test$3:>

2001:
old  < assert_test$3:>
new  <	; Call printf 28 0>

2002:
old  <	; Call printf 28 0>
new  <	mov qword [rbp + 28], assert_test$4>

2003:
old  <	mov qword [rbp + 28], assert_test$4>
new  <	mov [rbp + 36], rbp>

2004:
old  <	mov [rbp + 36], rbp>
new  <	add rbp, 28>

2005:
old  <	add rbp, 28>
new  <	mov rdi, rbp>

2006:
old  <	mov rdi, rbp>
new  <	jmp printf>

2007:
old  <	jmp printf>
new  <>

2008:
old  <>
new  < assert_test$4:>

2009:
old  < assert_test$4:>
new  <	; PostCall 28>

2010:
old  <	; PostCall 28>
new  <>

2011:
old  <>
new  < assert_test$5:>

2012:
old  < assert_test$5:>
new  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2013:
old  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

2014:
old  <>
new  < assert_test$6:>

2015:
old  < assert_test$6:>
new  <	; Parameter pointer "%i" 52>

2016:
old  <	; Parameter pointer "%i" 52>
new  <	mov qword [rbp + 52], string_25i#>

2017:
old  <	mov qword [rbp + 52], string_25i#>
new  <>

2018:
old  <>
new  < assert_test$7:>

2019:
old  < assert_test$7:>
new  <	; Address Â£temporary135 n>

2020:
old  <	; Address Â£temporary135 n>
new  <	mov rsi, rbp>

2021:
old  <	mov rsi, rbp>
new  <	add rsi, 24>

2022:
old  <	add rsi, 24>
new  <>

2023:
old  <>
new  < assert_test$8:>

2024:
old  < assert_test$8:>
new  <	; Parameter pointer Â£temporary135 60>

2025:
old  <	; Parameter pointer Â£temporary135 60>
new  <	mov [rbp + 60], rsi>

2026:
old  <	mov [rbp + 60], rsi>
new  <>

2027:
old  <>
new  < assert_test$9:>

2028:
old  < assert_test$9:>
new  <	; Call scanf 28 8>

2029:
old  <	; Call scanf 28 8>
new  <	mov qword [rbp + 28], assert_test$10>

2030:
old  <	mov qword [rbp + 28], assert_test$10>
new  <	mov [rbp + 36], rbp>

2031:
old  <	mov [rbp + 36], rbp>
new  <	add rbp, 28>

2032:
old  <	add rbp, 28>
new  <	mov rdi, rbp>

2033:
old  <	mov rdi, rbp>
new  <	add rdi, 8>

2034:
old  <	add rdi, 8>
new  <	jmp scanf>

2035:
old  <	jmp scanf>
new  <>

2036:
old  <>
new  < assert_test$10:>

2037:
old  < assert_test$10:>
new  <	; PostCall 28>

2038:
old  <	; PostCall 28>
new  <>

2039:
old  <>
new  < assert_test$11:>

2040:
old  < assert_test$11:>
new  <	; NotEqual 23 n 6>

2041:
old  <	; NotEqual 23 n 6>
new  <	cmp dword [rbp + 24], 6>

2042:
old  <	cmp dword [rbp + 24], 6>
new  <	jne assert_test$23>

2043:
old  <	jne assert_test$23>
new  <>

2044:
old  <>
new  < assert_test$12:>

2045:
old  < assert_test$12:>
new  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2046:
old  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

2047:
old  <>
new  < assert_test$13:>

2048:
old  < assert_test$13:>
new  <	; Parameter pointer stderr 52>

2049:
old  <	; Parameter pointer stderr 52>
new  <	mov rax, [stderr]>

2050:
old  <	mov rax, [stderr]>
new  <	mov [rbp + 52], rax>

2051:
old  <	mov [rbp + 52], rax>
new  <>

2052:
old  <>
new  < assert_test$14:>

2053:
old  < assert_test$14:>
new  <	; Parameter pointer "Assertion failed: "%s" in file %s at line %i\n" 60>

2054:
old  <	; Parameter pointer "Assertion failed: "%s" in file %s at line %i\n" 60>
new  <	mov qword [rbp + 60], string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#>

2055:
old  <	mov qword [rbp + 60], string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#>
new  <>

2056:
old  <>
new  < assert_test$15:>

2057:
old  < assert_test$15:>
new  <	; Parameter pointer "n != 6" 68>

2058:
old  <	; Parameter pointer "n != 6" 68>
new  <	mov qword [rbp + 68], string_n20213D206#>

2059:
old  <	mov qword [rbp + 68], string_n20213D206#>
new  <>

2060:
old  <>
new  < assert_test$16:>

2061:
old  < assert_test$16:>
new  <	; Parameter pointer "C:\Users\Stefan\Documents\vagrant\homestead\code\code\Main.c" 76>

2062:
old  <	; Parameter pointer "C:\Users\Stefan\Documents\vagrant\homestead\code\code\Main.c" 76>
new  <	mov qword [rbp + 76], string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CMain2Ec#>

2063:
old  <	mov qword [rbp + 76], string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CMain2Ec#>
new  <>

2064:
old  <>
new  < assert_test$17:>

2065:
old  < assert_test$17:>
new  <	; Parameter signedint 867 84>

2066:
old  <	; Parameter signedint 867 84>
new  <	mov dword [rbp + 84], 867>

2067:
old  <	mov dword [rbp + 84], 867>
new  <>

2068:
old  <>
new  < assert_test$18:>

2069:
old  < assert_test$18:>
new  <	; Call fprintf 28 20>

2070:
old  <	; Call fprintf 28 20>
new  <	mov qword [rbp + 28], assert_test$19>

2071:
old  <	mov qword [rbp + 28], assert_test$19>
new  <	mov [rbp + 36], rbp>

2072:
old  <	mov [rbp + 36], rbp>
new  <	add rbp, 28>

2073:
old  <	add rbp, 28>
new  <	mov rdi, rbp>

2074:
old  <	mov rdi, rbp>
new  <	add rdi, 20>

2075:
old  <	add rdi, 20>
new  <	jmp fprintf>

2076:
old  <	jmp fprintf>
new  <>

2077:
old  <>
new  < assert_test$19:>

2078:
old  < assert_test$19:>
new  <	; PostCall 28>

2079:
old  <	; PostCall 28>
new  <>

2080:
old  <>
new  < assert_test$20:>

2081:
old  < assert_test$20:>
new  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2082:
old  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

2083:
old  <>
new  < assert_test$21:>

2084:
old  < assert_test$21:>
new  <	; Call abort 28 0>

2085:
old  <	; Call abort 28 0>
new  <	mov qword [rbp + 28], assert_test$22>

2086:
old  <	mov qword [rbp + 28], assert_test$22>
new  <	mov [rbp + 36], rbp>

2087:
old  <	mov [rbp + 36], rbp>
new  <	add rbp, 28>

2088:
old  <	add rbp, 28>
new  <	jmp abort>

2089:
old  <	jmp abort>
new  <>

2090:
old  <>
new  < assert_test$22:>

2091:
old  < assert_test$22:>
new  <	; PostCall 28>

2092:
old  <	; PostCall 28>
new  <>

2093:
old  <>
new  < assert_test$23:>

2094:
old  < assert_test$23:>
new  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2095:
old  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

2096:
old  <>
new  < assert_test$24:>

2097:
old  < assert_test$24:>
new  <	; Parameter signedint n 52>

2098:
old  <	; Parameter signedint n 52>
new  <	mov eax, [rbp + 24]>

2099:
old  <	mov eax, [rbp + 24]>
new  <	mov [rbp + 52], eax>

2100:
old  <	mov [rbp + 52], eax>
new  <>

2101:
old  <>
new  < assert_test$25:>

2102:
old  < assert_test$25:>
new  <	; Call assert_test2 28 0>

2103:
old  <	; Call assert_test2 28 0>
new  <	mov qword [rbp + 28], assert_test$26>

2104:
old  <	mov qword [rbp + 28], assert_test$26>
new  <	mov [rbp + 36], rbp>

2105:
old  <	mov [rbp + 36], rbp>
new  <	add rbp, 28>

2106:
old  <	add rbp, 28>
new  <	jmp assert_test2>

2107:
old  <	jmp assert_test2>
new  <>

2108:
old  <>
new  < assert_test$26:>

2109:
old  < assert_test$26:>
new  <	; PostCall 28>

2110:
old  <	; PostCall 28>
new  <>

2111:
old  <>
new  < assert_test$27:>

2112:
old  < assert_test$27:>
new  <	; Return>

2113:
old  <	; Return>
new  <	mov rax, [rbp]>

2114:
old  <	mov rax, [rbp]>
new  <	mov rdi, [rbp + 16]>

2115:
old  <	mov rdi, [rbp + 16]>
new  <	mov rbp, [rbp + 8]>

2116:
old  <	mov rbp, [rbp + 8]>
new  <	jmp rax>

2117:
old  <	jmp rax>
new  <>

2118:
old  <>
new  < assert_test$28:>

2119:
old  < assert_test$28:>
new  <	; FunctionEnd assert_test>

2120:
old  <	; FunctionEnd assert_test>
new  <>

2121:
old  <>
new  <section .data>

2122:
old  <section .data>
new  <>

2123:
old  <>
new  <string_n20213D207#:>

2124:
old  <string_n20213D207#:>
new  <	; Initializer String n != 7>

2125:
old  <	; Initializer String n != 7>
new  <	db "n != 7", 0>

2126:
old  <	db "n != 7", 0>
new  <>

2127:
old  <>
new  <section .text>

2128:
old  <section .text>
new  <>

2129:
old  <>
new  < assert_test2:>

2130:
old  < assert_test2:>
new  <	; NotEqual 12 n 7>

2131:
old  <	; NotEqual 12 n 7>
new  <	cmp dword [rbp + 24], 7>

2132:
old  <	cmp dword [rbp + 24], 7>
new  <	jne assert_test2$12>

2133:
old  <	jne assert_test2$12>
new  <>

2134:
old  <>
new  < assert_test2$1:>

2135:
old  < assert_test2$1:>
new  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2136:
old  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

2137:
old  <>
new  < assert_test2$2:>

2138:
old  < assert_test2$2:>
new  <	; Parameter pointer stderr 52>

2139:
old  <	; Parameter pointer stderr 52>
new  <	mov rax, [stderr]>

2140:
old  <	mov rax, [stderr]>
new  <	mov [rbp + 52], rax>

2141:
old  <	mov [rbp + 52], rax>
new  <>

2142:
old  <>
new  < assert_test2$3:>

2143:
old  < assert_test2$3:>
new  <	; Parameter pointer "Assertion failed: "%s" in file %s at line %i\n" 60>

2144:
old  <	; Parameter pointer "Assertion failed: "%s" in file %s at line %i\n" 60>
new  <	mov qword [rbp + 60], string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#>

2145:
old  <	mov qword [rbp + 60], string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#>
new  <>

2146:
old  <>
new  < assert_test2$4:>

2147:
old  < assert_test2$4:>
new  <	; Parameter pointer "n != 7" 68>

2148:
old  <	; Parameter pointer "n != 7" 68>
new  <	mov qword [rbp + 68], string_n20213D207#>

2149:
old  <	mov qword [rbp + 68], string_n20213D207#>
new  <>

2150:
old  <>
new  < assert_test2$5:>

2151:
old  < assert_test2$5:>
new  <	; Parameter pointer "C:\Users\Stefan\Documents\vagrant\homestead\code\code\Main.c" 76>

2152:
old  <	; Parameter pointer "C:\Users\Stefan\Documents\vagrant\homestead\code\code\Main.c" 76>
new  <	mov qword [rbp + 76], string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CMain2Ec#>

2153:
old  <	mov qword [rbp + 76], string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CMain2Ec#>
new  <>

2154:
old  <>
new  < assert_test2$6:>

2155:
old  < assert_test2$6:>
new  <	; Parameter signedint 872 84>

2156:
old  <	; Parameter signedint 872 84>
new  <	mov dword [rbp + 84], 872>

2157:
old  <	mov dword [rbp + 84], 872>
new  <>

2158:
old  <>
new  < assert_test2$7:>

2159:
old  < assert_test2$7:>
new  <	; Call fprintf 28 20>

2160:
old  <	; Call fprintf 28 20>
new  <	mov qword [rbp + 28], assert_test2$8>

2161:
old  <	mov qword [rbp + 28], assert_test2$8>
new  <	mov [rbp + 36], rbp>

2162:
old  <	mov [rbp + 36], rbp>
new  <	add rbp, 28>

2163:
old  <	add rbp, 28>
new  <	mov rdi, rbp>

2164:
old  <	mov rdi, rbp>
new  <	add rdi, 20>

2165:
old  <	add rdi, 20>
new  <	jmp fprintf>

2166:
old  <	jmp fprintf>
new  <>

2167:
old  <>
new  < assert_test2$8:>

2168:
old  < assert_test2$8:>
new  <	; PostCall 28>

2169:
old  <	; PostCall 28>
new  <>

2170:
old  <>
new  < assert_test2$9:>

2171:
old  < assert_test2$9:>
new  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2172:
old  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

2173:
old  <>
new  < assert_test2$10:>

2174:
old  < assert_test2$10:>
new  <	; Call abort 28 0>

2175:
old  <	; Call abort 28 0>
new  <	mov qword [rbp + 28], assert_test2$11>

2176:
old  <	mov qword [rbp + 28], assert_test2$11>
new  <	mov [rbp + 36], rbp>

2177:
old  <	mov [rbp + 36], rbp>
new  <	add rbp, 28>

2178:
old  <	add rbp, 28>
new  <	jmp abort>

2179:
old  <	jmp abort>
new  <>

2180:
old  <>
new  < assert_test2$11:>

2181:
old  < assert_test2$11:>
new  <	; PostCall 28>

2182:
old  <	; PostCall 28>
new  <>

2183:
old  <>
new  < assert_test2$12:>

2184:
old  < assert_test2$12:>
new  <	; Return>

2185:
old  <	; Return>
new  <	mov rax, [rbp]>

2186:
old  <	mov rax, [rbp]>
new  <	mov rdi, [rbp + 16]>

2187:
old  <	mov rdi, [rbp + 16]>
new  <	mov rbp, [rbp + 8]>

2188:
old  <	mov rbp, [rbp + 8]>
new  <	jmp rax>

2189:
old  <	jmp rax>
new  <>

2190:
old  <>
new  < assert_test2$13:>

2191:
old  < assert_test2$13:>
new  <	; FunctionEnd assert_test2>

2192:
old  <	; FunctionEnd assert_test2>
new  <>

2193:
old  <>
new  <section .data>

2194:
old  <section .data>
new  <$StackTop:	times 1048576 db 0>

Malloc.asm
CType.asm
ErrNo.asm
Locale.asm
502:
old  <	; Initializer SignedInt -5>
new  <	; Initializer SignedInt 1>

503:
old  <	dd -5>
new  <	dd 1>

504:
old  <	; Initializer SignedInt -4>
new  <	; Initializer SignedInt 2>

505:
old  <	dd -4>
new  <	dd 2>

Math.asm
SetJmp.asm
Signal.asm
File.asm
Temp.asm
Scanf.asm
Printf.asm
StdLib.asm
Time.asm
285:
old  <int8$7#:>
new  <@4743$leapList:>

286:
old  <	; Initializer Signed_Long_Int 7>
new  <	; Initializer SignedInt 72>

287:
old  <	dq 7>
new  <	dd 72>

288:
old  <>
new  <	; Initializer SignedInt 7>

289:
old  <section .data>
new  <	dd 7>

290:
old  <>
new  <	; Initializer SignedInt 1>

291:
old  <int4$100#:>
new  <	dd 1>

292:
old  <	; Initializer SignedInt 100>
new  <	; InitializerZero 24>

293:
old  <	dd 100>
new  <	times 24 db 0>

294:
old  <>
new  <	; Initializer SignedInt 72>

295:
old  <section .data>
new  <	dd 72>

296:
old  <>
new  <	; Initializer SignedInt 7>

297:
old  <int4$400#:>
new  <	dd 7>

298:
old  <	; Initializer SignedInt 400>
new  <	; Initializer SignedInt 1>

299:
old  <	dd 400>
new  <	dd 1>

300:
old  <>
new  <	; InitializerZero 24>

301:
old  <section .data>
new  <	times 24 db 0>

302:
old  <>
new  <	; Initializer SignedInt 72>

303:
old  <Array_4#:>
new  <	dd 72>

304:
old  <	; Initializer Array 4>
new  <	; Initializer SignedInt 7>

305:
old  <	dq 4>
new  <	dd 7>

306:
old  <>
new  <	; Initializer SignedInt 1>

307:
old  <section .text>
new  <	dd 1>

308:
old  <>
new  <	; InitializerZero 24>

309:
old  < gmtime:>
new  <	times 24 db 0>

310:
old  <	; Assign year 1970>
new  <	; Initializer SignedInt 72>

311:
old  <	mov dword [rbp + 32], 1970>
new  <	dd 72>

312:
old  <>
new  <	; Initializer SignedInt 7>

313:
old  < gmtime$1:>
new  <	dd 7>

314:
old  <	; Equal 87 timePtr 0>
new  <	; Initializer SignedInt 1>

315:
old  <	cmp qword [rbp + 24], 0>
new  <	dd 1>

316:
old  <	je gmtime$87>
new  <	; InitializerZero 24>

317:
old  <>
new  <	times 24 db 0>

318:
old  < gmtime$2:>
new  <	; Initializer SignedInt 72>

319:
old  <	; Dereference Â£temporary2723 -> timePtr timePtr 0>
new  <	dd 72>

320:
old  <	mov rsi, [rbp + 24]>
new  <	; Initializer SignedInt 7>

321:
old  <>
new  <	dd 7>

322:
old  < gmtime$3:>
new  <	; Initializer SignedInt 1>

323:
old  <	; Assign time Â£temporary2723 -> timePtr>
new  <	dd 1>

324:
old  <	mov rax, [rsi]>
new  <	; InitializerZero 24>

325:
old  <	mov [rbp + 36], rax>
new  <	times 24 db 0>

326:
old  <>
new  <	; Initializer SignedInt 72>

327:
old  < gmtime$4:>
new  <	dd 72>

328:
old  <	; SignedModulo secondsOfDay time 86400>
new  <	; Initializer SignedInt 7>

329:
old  <	mov rax, [rbp + 36]>
new  <	dd 7>

330:
old  <	xor rdx, rdx>
new  <	; Initializer SignedInt 1>

331:
old  <	idiv qword [int8$86400#]>
new  <	dd 1>

332:
old  <	mov [rbp + 44], rdx>
new  <	; InitializerZero 24>

333:
old  <>
new  <	times 24 db 0>

334:
old  < gmtime$5:>
new  <	; Initializer SignedInt 72>

335:
old  <	; SignedDivide totalDays time 86400>
new  <	dd 72>

336:
old  <	mov rax, [rbp + 36]>
new  <	; Initializer SignedInt 7>

337:
old  <	xor rdx, rdx>
new  <	dd 7>

338:
old  <	idiv qword [int8$86400#]>
new  <	; Initializer SignedInt 1>

339:
old  <	mov [rbp + 52], rax>
new  <	dd 1>

340:
old  <>
new  <	; InitializerZero 24>

341:
old  < gmtime$6:>
new  <	times 24 db 0>

342:
old  <	; SignedDivide Â£temporary2727 secondsOfDay 3600>
new  <	; Initializer SignedInt 72>

343:
old  <	mov rax, [rbp + 44]>
new  <	dd 72>

344:
old  <	xor rdx, rdx>
new  <	; Initializer SignedInt 7>

345:
old  <	idiv qword [int8$3600#]>
new  <	dd 7>

346:
old  <>
new  <	; Initializer SignedInt 1>

347:
old  < gmtime$7:>
new  <	dd 1>

348:
old  <	; IntegralToIntegral Â£temporary2728 Â£temporary2727>
new  <	; InitializerZero 24>

349:
old  <	cmp rax, 0>
new  <	times 24 db 0>

350:
old  <	jge gmtime$8>
new  <	; Initializer SignedInt 72>

351:
old  <	neg rax>
new  <	dd 72>

352:
old  <	neg eax>
new  <	; Initializer SignedInt 7>

353:
old  <>
new  <	dd 7>

354:
old  < gmtime$8:>
new  <	; Initializer SignedInt 1>

355:
old  <	; Assign g_timeStruct.tm_hour Â£temporary2728>
new  <	dd 1>

356:
old  <	mov [@4742$g_timeStruct + 8], eax>
new  <	; InitializerZero 24>

357:
old  <>
new  <	times 24 db 0>

358:
old  < gmtime$9:>
new  <	; Initializer SignedInt 72>

359:
old  <	; SignedModulo Â£temporary2730 secondsOfDay 3600>
new  <	dd 72>

360:
old  <	mov rax, [rbp + 44]>
new  <	; Initializer SignedInt 7>

361:
old  <	xor rdx, rdx>
new  <	dd 7>

362:
old  <	idiv qword [int8$3600#]>
new  <	; Initializer SignedInt 1>

363:
old  <>
new  <	dd 1>

364:
old  < gmtime$10:>
new  <	; InitializerZero 24>

365:
old  <	; SignedDivide Â£temporary2731 Â£temporary2730 60>
new  <	times 24 db 0>

366:
old  <	mov rax, rdx>
new  <	; Initializer SignedInt 72>

367:
old  <	xor rdx, rdx>
new  <	dd 72>

368:
old  <	idiv qword [int8$60#]>
new  <	; Initializer SignedInt 7>

369:
old  <>
new  <	dd 7>

370:
old  < gmtime$11:>
new  <	; Initializer SignedInt 1>

371:
old  <	; IntegralToIntegral Â£temporary2732 Â£temporary2731>
new  <	dd 1>

372:
old  <	cmp rax, 0>
new  <	; InitializerZero 24>

373:
old  <	jge gmtime$12>
new  <	times 24 db 0>

374:
old  <	neg rax>
new  <	; Initializer SignedInt 72>

375:
old  <	neg eax>
new  <	dd 72>

376:
old  <>
new  <	; Initializer SignedInt 7>

377:
old  < gmtime$12:>
new  <	dd 7>

378:
old  <	; Assign g_timeStruct.tm_min Â£temporary2732>
new  <	; Initializer SignedInt 1>

379:
old  <	mov [@4742$g_timeStruct + 4], eax>
new  <	dd 1>

380:
old  <>
new  <	; InitializerZero 24>

381:
old  < gmtime$13:>
new  <	times 24 db 0>

382:
old  <	; SignedModulo Â£temporary2734 secondsOfDay 3600>
new  <	; Initializer SignedInt 72>

383:
old  <	mov rax, [rbp + 44]>
new  <	dd 72>

384:
old  <	xor rdx, rdx>
new  <	; Initializer SignedInt 7>

385:
old  <	idiv qword [int8$3600#]>
new  <	dd 7>

386:
old  <>
new  <	; Initializer SignedInt 1>

387:
old  < gmtime$14:>
new  <	dd 1>

388:
old  <	; SignedModulo Â£temporary2735 Â£temporary2734 60>
new  <	; InitializerZero 24>

389:
old  <	mov rax, rdx>
new  <	times 24 db 0>

390:
old  <	xor rdx, rdx>
new  <	; Initializer SignedInt 72>

391:
old  <	idiv qword [int8$60#]>
new  <	dd 72>

392:
old  <>
new  <	; Initializer SignedInt 7>

393:
old  < gmtime$15:>
new  <	dd 7>

394:
old  <	; IntegralToIntegral Â£temporary2736 Â£temporary2735>
new  <	; Initializer SignedInt 1>

395:
old  <	cmp rdx, 0>
new  <	dd 1>

396:
old  <	jge gmtime$16>
new  <	; InitializerZero 24>

397:
old  <	neg rdx>
new  <	times 24 db 0>

398:
old  <	neg edx>
new  <>

399:
old  <>
new  <section .data>

400:
old  < gmtime$16:>
new  <>

401:
old  <	; Assign g_timeStruct.tm_sec Â£temporary2736>
new  <@4744$leapSize:>

402:
old  <	mov [@4742$g_timeStruct], edx>
new  <	; Initializer SignedInt 1>

403:
old  <>
new  <	dd 1>

404:
old  < gmtime$17:>
new  <>

405:
old  <	; SignedGreaterThanEqual 22 totalDays 3>
new  <section .data>

406:
old  <	cmp qword [rbp + 52], 3>
new  <>

407:
old  <	jge gmtime$22>
new  <Array_36#:>

408:
old  <>
new  <	; Initializer Array 36>

409:
old  < gmtime$18:>
new  <	dq 36>

410:
old  <	; BinaryAdd Â£temporary2739 totalDays 4>
new  <>

411:
old  <	mov rax, [rbp + 52]>
new  <section .text>

412:
old  <	add rax, 4>
new  <>

413:
old  <>
new  < @4746$leapSeconds:>

414:
old  < gmtime$19:>
new  <	; Assign seconds 0>

415:
old  <	; IntegralToIntegral Â£temporary2740 Â£temporary2739>
new  <	mov dword [rbp + 32], 0>

416:
old  <	cmp rax, 0>
new  <>

417:
old  <	jge gmtime$20>
new  < @4746$leapSeconds$1:>

418:
old  <	neg rax>
new  <	; Assign index 0>

419:
old  <	neg eax>
new  <	mov dword [rbp + 36], 0>

421:
old  < gmtime$20:>
new  < @4746$leapSeconds$2:>

422:
old  <	; Assign g_timeStruct.tm_wday Â£temporary2740>
new  <	; SignedGreaterThanEqual 24 index leapSize>

423:
old  <	mov [@4742$g_timeStruct + 24], eax>
new  <	mov eax, [@4744$leapSize]>

424:
old  <>
new  <	cmp [rbp + 36], eax>

425:
old  < gmtime$21:>
new  <	jge @4746$leapSeconds$24>

426:
old  <	; Goto 26>
new  <>

427:
old  <	jmp gmtime$26>
new  < @4746$leapSeconds$3:>

428:
old  <>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

429:
old  < gmtime$22:>
new  <>

430:
old  <	; BinarySubtract Â£temporary2742 totalDays 3>
new  < @4746$leapSeconds$4:>

431:
old  <	mov rax, [rbp + 52]>
new  <	; Parameter signed long int t 64>

432:
old  <	sub rax, 3>
new  <	mov rax, [rbp + 24]>

433:
old  <>
new  <	mov [rbp + 64], rax>

434:
old  < gmtime$23:>
new  <>

435:
old  <	; SignedModulo Â£temporary2743 Â£temporary2742 7>
new  < @4746$leapSeconds$5:>

436:
old  <	xor rdx, rdx>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

437:
old  <	idiv qword [int8$7#]>
new  <>

438:
old  <>
new  < @4746$leapSeconds$6:>

439:
old  < gmtime$24:>
new  <	; IntegralToIntegral Â£temporary2725 index>

440:
old  <	; IntegralToIntegral Â£temporary2744 Â£temporary2743>
new  <	mov eax, [rbp + 36]>

441:
old  <	cmp rdx, 0>
new  <	mov rbx, 4294967295>

442:
old  <	jge gmtime$25>
new  <	and rax, rbx>

443:
old  <	neg rdx>
new  <>

444:
old  <	neg edx>
new  < @4746$leapSeconds$7:>

445:
old  <>
new  <	; UnsignedMultiply Â£temporary2726 Â£temporary2725 36>

446:
old  < gmtime$25:>
new  <	xor rdx, rdx>

447:
old  <	; Assign g_timeStruct.tm_wday Â£temporary2744>
new  <	mul qword [Array_36#]>

448:
old  <	mov [@4742$g_timeStruct + 24], edx>
new  <>

449:
old  <>
new  < @4746$leapSeconds$8:>

450:
old  < gmtime$26:>
new  <	; BinaryAdd Â£temporary2727 leapList Â£temporary2726>

451:
old  <	; SignedModulo Â£temporary2745 year 4>
new  <	mov rsi, @4743$leapList>

452:
old  <	mov eax, [rbp + 32]>
new  <	add rsi, rax>

453:
old  <	xor edx, edx>
new  <>

454:
old  <	idiv dword [int4$4#]>
new  < @4746$leapSeconds$9:>

455:
old  <>
new  <	; Dereference Â£temporary2724 -> Â£temporary2727 Â£temporary2727 0>

456:
old  < gmtime$27:>
new  <>

457:
old  <	; NotEqual 30 Â£temporary2745 0>
new  < @4746$leapSeconds$10:>

458:
old  <	cmp edx, 0>
new  <	; Address Â£temporary2728 Â£temporary2724 -> Â£temporary2727>

459:
old  <	jne gmtime$30>
new  <>

460:
old  <>
new  < @4746$leapSeconds$11:>

461:
old  < gmtime$28:>
new  <	; Parameter pointer Â£temporary2728 96>

462:
old  <	; SignedModulo Â£temporary2747 year 100>
new  <	mov [rbp + 96], rsi>

463:
old  <	mov eax, [rbp + 32]>
new  <>

464:
old  <	xor edx, edx>
new  < @4746$leapSeconds$12:>

465:
old  <	idiv dword [int4$100#]>
new  <	; Call mktime 72 0>

466:
old  <>
new  <	mov qword [rbp + 72], @4746$leapSeconds$13>

467:
old  < gmtime$29:>
new  <	mov [rbp + 80], rbp>

468:
old  <	; NotEqual 32 Â£temporary2747 0>
new  <	add rbp, 72>

469:
old  <	cmp edx, 0>
new  <	jmp mktime>

470:
old  <	jne gmtime$32>
new  <>

471:
old  <>
new  < @4746$leapSeconds$13:>

472:
old  < gmtime$30:>
new  <	; PostCall 72>

473:
old  <	; SignedModulo Â£temporary2750 year 400>
new  <>

474:
old  <	mov eax, [rbp + 32]>
new  < @4746$leapSeconds$14:>

475:
old  <	xor edx, edx>
new  <	; GetReturnValue Â£temporary2729>

476:
old  <	idiv dword [int4$400#]>
new  <>

477:
old  <>
new  < @4746$leapSeconds$15:>

478:
old  < gmtime$31:>
new  <	; Parameter signed long int Â£temporary2729 72>

479:
old  <	; NotEqual 34 Â£temporary2750 0>
new  <	mov [rbp + 72], rbx>

480:
old  <	cmp edx, 0>
new  <>

481:
old  <	jne gmtime$34>
new  < @4746$leapSeconds$16:>

482:
old  <>
new  <	; Call difftime 40 0>

483:
old  < gmtime$32:>
new  <	mov qword [rbp + 40], @4746$leapSeconds$17>

484:
old  <	; Assign Â£temporary2753 1>
new  <	mov [rbp + 48], rbp>

485:
old  <	mov eax, 1>
new  <	add rbp, 40>

486:
old  <>
new  <	jmp difftime>

487:
old  < gmtime$33:>
new  <>

488:
old  <	; Goto 35>
new  < @4746$leapSeconds$17:>

489:
old  <	jmp gmtime$35>
new  <	; PostCall 40>

491:
old  < gmtime$34:>
new  < @4746$leapSeconds$18:>

492:
old  <	; Assign Â£temporary2753 0>
new  <	; GetReturnValue Â£temporary2730>

493:
old  <	mov eax, 0>
new  <>

494:
old  <>
new  < @4746$leapSeconds$19:>

495:
old  < gmtime$35:>
new  <	; PushFloat 0>

496:
old  <	; Assign leapYear Â£temporary2753>
new  <	fldz>

497:
old  <	mov [rbp + 60], eax>
new  <>

498:
old  <>
new  < @4746$leapSeconds$20:>

499:
old  < gmtime$36:>
new  <	; SignedLessThan 22 Â£temporary2730 0>

500:
old  <	; Equal 39 leapYear 0>
new  <	fcompp>

501:
old  <	cmp dword [rbp + 60], 0>
new  <	fstsw ax>

502:
old  <	je gmtime$39>
new  <	sahf>

503:
old  <>
new  <	ja @4746$leapSeconds$22>

504:
old  < gmtime$37:>
new  <>

505:
old  <	; Assign Â£temporary2755 366>
new  < @4746$leapSeconds$21:>

506:
old  <	mov eax, 366>
new  <	; BinaryAdd seconds seconds 1>

507:
old  <>
new  <	inc dword [rbp + 32]>

508:
old  < gmtime$38:>
new  <>

509:
old  <	; Goto 40>
new  < @4746$leapSeconds$22:>

510:
old  <	jmp gmtime$40>
new  <	; BinaryAdd index index 1>

511:
old  <>
new  <	inc dword [rbp + 36]>

512:
old  < gmtime$39:>
new  <>

513:
old  <	; Assign Â£temporary2755 365>
new  < @4746$leapSeconds$23:>

514:
old  <	mov eax, 365>
new  <	; Goto 2>

515:
old  <>
new  <	jmp @4746$leapSeconds$2>

516:
old  < gmtime$40:>
new  <>

517:
old  <	; Assign daysOfYear Â£temporary2755>
new  < @4746$leapSeconds$24:>

518:
old  <	mov [rbp + 64], eax>
new  <	; Return seconds>

519:
old  <>
new  <	mov ebx, [rbp + 32]>

520:
old  < gmtime$41:>
new  <	mov rax, [rbp]>

521:
old  <	; IntegralToIntegral Â£temporary2756 daysOfYear>
new  <	mov rdi, [rbp + 16]>

522:
old  <	mov eax, [rbp + 64]>
new  <	mov rbp, [rbp + 8]>

523:
old  <	mov rbx, 4294967295>
new  <	jmp rax>

524:
old  <	and rax, rbx>
new  <>

525:
old  <	cmp eax, 0>
new  < @4746$leapSeconds$25:>

526:
old  <	jge gmtime$42>
new  <	; FunctionEnd leapSeconds>

527:
old  <	neg eax>
new  <>

528:
old  <	neg rax>
new  <section .data>

530:
old  < gmtime$42:>
new  <int8$7#:>

531:
old  <	; SignedGreaterThanEqual 83 totalDays Â£temporary2756>
new  <	; Initializer Signed_Long_Int 7>

532:
old  <	cmp [rbp + 52], rax>
new  <	dq 7>

533:
old  <	jge gmtime$83>
new  <>

534:
old  <>
new  <section .data>

535:
old  < gmtime$43:>
new  <>

536:
old  <	; Assign daysOfMonths[0] 31>
new  <int4$100#:>

537:
old  <	mov dword [rbp + 68], 31>
new  <	; Initializer SignedInt 100>

538:
old  <>
new  <	dd 100>

539:
old  < gmtime$44:>
new  <>

540:
old  <	; Equal 47 leapYear 0>
new  <section .data>

541:
old  <	cmp dword [rbp + 60], 0>
new  <>

542:
old  <	je gmtime$47>
new  <int4$400#:>

543:
old  <>
new  <	; Initializer SignedInt 400>

544:
old  < gmtime$45:>
new  <	dd 400>

545:
old  <	; Assign Â£temporary2759 29>
new  <>

546:
old  <	mov eax, 29>
new  <section .data>

548:
old  < gmtime$46:>
new  <Array_4#:>

549:
old  <	; Goto 48>
new  <	; Initializer Array 4>

550:
old  <	jmp gmtime$48>
new  <	dq 4>

552:
old  < gmtime$47:>
new  <section .text>

553:
old  <	; Assign Â£temporary2759 28>
new  <>

554:
old  <	mov eax, 28>
new  < gmtime:>

555:
old  <>
new  <	; Assign year 1970>

556:
old  < gmtime$48:>
new  <	mov dword [rbp + 32], 1970>

557:
old  <	; Assign daysOfMonths[1] Â£temporary2759>
new  <>

558:
old  <	mov [rbp + 72], eax>
new  < gmtime$1:>

559:
old  <>
new  <	; Equal 86 timePtr 0>

560:
old  < gmtime$49:>
new  <	cmp qword [rbp + 24], 0>

561:
old  <	; Assign daysOfMonths[2] 31>
new  <	je gmtime$86>

562:
old  <	mov dword [rbp + 76], 31>
new  <>

563:
old  <>
new  < gmtime$2:>

564:
old  < gmtime$50:>
new  <	; Dereference Â£temporary2734 -> timePtr timePtr 0>

565:
old  <	; Assign daysOfMonths[3] 30>
new  <	mov rsi, [rbp + 24]>

566:
old  <	mov dword [rbp + 80], 30>
new  <>

567:
old  <>
new  < gmtime$3:>

568:
old  < gmtime$51:>
new  <	; Assign time Â£temporary2734 -> timePtr>

569:
old  <	; Assign daysOfMonths[4] 31>
new  <	mov rax, [rsi]>

570:
old  <	mov dword [rbp + 84], 31>
new  <	mov [rbp + 36], rax>

572:
old  < gmtime$52:>
new  < gmtime$4:>

573:
old  <	; Assign daysOfMonths[5] 30>
new  <	; SignedDivide totalDays time 86400>

574:
old  <	mov dword [rbp + 88], 30>
new  <	mov rax, [rbp + 36]>

575:
old  <>
new  <	xor rdx, rdx>

576:
old  < gmtime$53:>
new  <	idiv qword [int8$86400#]>

577:
old  <	; Assign daysOfMonths[6] 30>
new  <	mov [rbp + 44], rax>

578:
old  <	mov dword [rbp + 92], 30>
new  <>

579:
old  <>
new  < gmtime$5:>

580:
old  < gmtime$54:>
new  <	; SignedModulo secondsOfDay time 86400>

581:
old  <	; Assign daysOfMonths[7] 31>
new  <	mov rax, [rbp + 36]>

582:
old  <	mov dword [rbp + 96], 31>
new  <	xor rdx, rdx>

583:
old  <>
new  <	idiv qword [int8$86400#]>

584:
old  < gmtime$55:>
new  <	mov [rbp + 52], rdx>

585:
old  <	; Assign daysOfMonths[8] 30>
new  <>

586:
old  <	mov dword [rbp + 100], 30>
new  < gmtime$6:>

587:
old  <>
new  <	; SignedModulo secondsOfHour secondsOfDay 3600>

588:
old  < gmtime$56:>
new  <	mov rax, [rbp + 52]>

589:
old  <	; Assign daysOfMonths[9] 31>
new  <	xor rdx, rdx>

590:
old  <	mov dword [rbp + 104], 31>
new  <	idiv qword [int8$3600#]>

591:
old  <>
new  <	mov [rbp + 60], rdx>

592:
old  < gmtime$57:>
new  <>

593:
old  <	; Assign daysOfMonths[10] 30>
new  < gmtime$7:>

594:
old  <	mov dword [rbp + 108], 30>
new  <	; SignedDivide Â£temporary2739 secondsOfDay 3600>

595:
old  <>
new  <	mov rax, [rbp + 52]>

596:
old  < gmtime$58:>
new  <	xor rdx, rdx>

597:
old  <	; Assign daysOfMonths[11] 31>
new  <	idiv qword [int8$3600#]>

598:
old  <	mov dword [rbp + 112], 31>
new  <>

599:
old  <>
new  < gmtime$8:>

600:
old  < gmtime$59:>
new  <	; IntegralToIntegral Â£temporary2740 Â£temporary2739>

601:
old  <	; Assign month 0>
new  <	cmp rax, 0>

602:
old  <	mov dword [rbp + 116], 0>
new  <	jge gmtime$9>

603:
old  <>
new  <	neg rax>

604:
old  < gmtime$60:>
new  <	neg eax>

605:
old  <	; BinarySubtract g_timeStruct.tm_year year 1900>
new  <>

606:
old  <	mov eax, [rbp + 32]>
new  < gmtime$9:>

607:
old  <	sub eax, 1900>
new  <	; Assign g_timeStruct.tm_hour Â£temporary2740>

608:
old  <	mov [@4742$g_timeStruct + 20], eax>
new  <	mov [@4742$g_timeStruct + 8], eax>

610:
old  < gmtime$61:>
new  < gmtime$10:>

611:
old  <	; IntegralToIntegral Â£temporary2775 totalDays>
new  <	; SignedDivide Â£temporary2742 secondsOfHour 60>

612:
old  <	mov rax, [rbp + 52]>
new  <	mov rax, [rbp + 60]>

613:
old  <	cmp rax, 0>
new  <	xor rdx, rdx>

614:
old  <	jge gmtime$62>
new  <	idiv qword [int8$60#]>

615:
old  <	neg rax>
new  <>

616:
old  <	neg eax>
new  < gmtime$11:>

617:
old  <>
new  <	; IntegralToIntegral Â£temporary2743 Â£temporary2742>

618:
old  < gmtime$62:>
new  <	cmp rax, 0>

619:
old  <	; Assign g_timeStruct.tm_yday Â£temporary2775>
new  <	jge gmtime$12>

620:
old  <	mov [@4742$g_timeStruct + 28], eax>
new  <	neg rax>

621:
old  <>
new  <	neg eax>

622:
old  < gmtime$63:>
new  <>

623:
old  <	; IntegralToIntegral Â£temporary2777 month>
new  < gmtime$12:>

624:
old  <	mov eax, [rbp + 116]>
new  <	; Assign g_timeStruct.tm_min Â£temporary2743>

625:
old  <	mov rbx, 4294967295>
new  <	mov [@4742$g_timeStruct + 4], eax>

626:
old  <	and rax, rbx>
new  <>

627:
old  <>
new  < gmtime$13:>

628:
old  < gmtime$64:>
new  <	; SignedModulo Â£temporary2745 secondsOfHour 60>

629:
old  <	; UnsignedMultiply Â£temporary2778 Â£temporary2777 4>
new  <	mov rax, [rbp + 60]>

631:
old  <	mul qword [Array_4#]>
new  <	idiv qword [int8$60#]>

633:
old  < gmtime$65:>
new  < gmtime$14:>

634:
old  <	; BinaryAdd Â£temporary2779 daysOfMonths Â£temporary2778>
new  <	; IntegralToIntegral Â£temporary2746 Â£temporary2745>

635:
old  <	mov rsi, rbp>
new  <	cmp rdx, 0>

636:
old  <	add rsi, 68>
new  <	jge gmtime$15>

637:
old  <	add rsi, rax>
new  <	neg rdx>

638:
old  <>
new  <	neg edx>

639:
old  < gmtime$66:>
new  <>

640:
old  <	; Dereference Â£temporary2776 -> Â£temporary2779 Â£temporary2779 0>
new  < gmtime$15:>

641:
old  <>
new  <	; Assign g_timeStruct.tm_sec Â£temporary2746>

642:
old  < gmtime$67:>
new  <	mov [@4742$g_timeStruct], edx>

643:
old  <	; IntegralToIntegral Â£temporary2780 Â£temporary2776 -> Â£temporary2779>
new  <>

644:
old  <	mov eax, [rsi]>
new  < gmtime$16:>

645:
old  <	mov rbx, 4294967295>
new  <	; SignedGreaterThanEqual 21 totalDays 3>

646:
old  <	and rax, rbx>
new  <	cmp qword [rbp + 44], 3>

647:
old  <	cmp eax, 0>
new  <	jge gmtime$21>

648:
old  <	jge gmtime$68>
new  <>

649:
old  <	neg eax>
new  < gmtime$17:>

650:
old  <	neg rax>
new  <	; BinaryAdd Â£temporary2749 totalDays 4>

651:
old  <>
new  <	mov rax, [rbp + 44]>

652:
old  < gmtime$68:>
new  <	add rax, 4>

653:
old  <	; SignedLessThan 77 totalDays Â£temporary2780>
new  <>

654:
old  <	cmp [rbp + 52], rax>
new  < gmtime$18:>

655:
old  <	jl gmtime$77>
new  <	; IntegralToIntegral Â£temporary2750 Â£temporary2749>

656:
old  <>
new  <	cmp rax, 0>

657:
old  < gmtime$69:>
new  <	jge gmtime$19>

658:
old  <	; IntegralToIntegral Â£temporary2783 month>
new  <	neg rax>

659:
old  <	mov eax, [rbp + 116]>
new  <	neg eax>

660:
old  <	mov rbx, 4294967295>
new  <>

661:
old  <	and rax, rbx>
new  < gmtime$19:>

662:
old  <>
new  <	; Assign g_timeStruct.tm_wday Â£temporary2750>

663:
old  < gmtime$70:>
new  <	mov [@4742$g_timeStruct + 24], eax>

664:
old  <	; UnsignedMultiply Â£temporary2784 Â£temporary2783 4>
new  <>

665:
old  <	xor rdx, rdx>
new  < gmtime$20:>

666:
old  <	mul qword [Array_4#]>
new  <	; Goto 25>

667:
old  <>
new  <	jmp gmtime$25>

668:
old  < gmtime$71:>
new  <>

669:
old  <	; BinaryAdd Â£temporary2785 daysOfMonths Â£temporary2784>
new  < gmtime$21:>

670:
old  <	mov rsi, rbp>
new  <	; BinarySubtract Â£temporary2752 totalDays 3>

671:
old  <	add rsi, 68>
new  <	mov rax, [rbp + 44]>

672:
old  <	add rsi, rax>
new  <	sub rax, 3>

674:
old  < gmtime$72:>
new  < gmtime$22:>

675:
old  <	; Dereference Â£temporary2782 -> Â£temporary2785 Â£temporary2785 0>
new  <	; SignedModulo Â£temporary2753 Â£temporary2752 7>

676:
old  <>
new  <	xor rdx, rdx>

677:
old  < gmtime$73:>
new  <	idiv qword [int8$7#]>

678:
old  <	; IntegralToIntegral Â£temporary2786 Â£temporary2782 -> Â£temporary2785>
new  <>

679:
old  <	mov eax, [rsi]>
new  < gmtime$23:>

680:
old  <	mov rbx, 4294967295>
new  <	; IntegralToIntegral Â£temporary2754 Â£temporary2753>

681:
old  <	and rax, rbx>
new  <	cmp rdx, 0>

682:
old  <	cmp eax, 0>
new  <	jge gmtime$24>

683:
old  <	jge gmtime$74>
new  <	neg rdx>

684:
old  <	neg eax>
new  <	neg edx>

685:
old  <	neg rax>
new  <>

686:
old  <>
new  < gmtime$24:>

687:
old  < gmtime$74:>
new  <	; Assign g_timeStruct.tm_wday Â£temporary2754>

688:
old  <	; BinarySubtract totalDays totalDays Â£temporary2786>
new  <	mov [@4742$g_timeStruct + 24], edx>

689:
old  <	sub [rbp + 52], rax>
new  <>

690:
old  <>
new  < gmtime$25:>

691:
old  < gmtime$75:>
new  <	; SignedModulo Â£temporary2755 year 4>

692:
old  <	; BinaryAdd month month 1>
new  <	mov eax, [rbp + 32]>

693:
old  <	inc dword [rbp + 116]>
new  <	xor edx, edx>

694:
old  <>
new  <	idiv dword [int4$4#]>

695:
old  < gmtime$76:>
new  <>

696:
old  <	; Goto 63>
new  < gmtime$26:>

697:
old  <	jmp gmtime$63>
new  <	; NotEqual 29 Â£temporary2755 0>

698:
old  <>
new  <	cmp edx, 0>

699:
old  < gmtime$77:>
new  <	jne gmtime$29>

700:
old  <	; Assign g_timeStruct.tm_mon month>
new  <>

701:
old  <	mov eax, [rbp + 116]>
new  < gmtime$27:>

702:
old  <	mov [@4742$g_timeStruct + 16], eax>
new  <	; SignedModulo Â£temporary2757 year 100>

703:
old  <>
new  <	mov eax, [rbp + 32]>

704:
old  < gmtime$78:>
new  <	xor edx, edx>

705:
old  <	; BinaryAdd Â£temporary2791 totalDays 1>
new  <	idiv dword [int4$100#]>

706:
old  <	mov rax, [rbp + 52]>
new  <>

707:
old  <	inc rax>
new  < gmtime$28:>

708:
old  <>
new  <	; NotEqual 31 Â£temporary2757 0>

709:
old  < gmtime$79:>
new  <	cmp edx, 0>

710:
old  <	; IntegralToIntegral Â£temporary2792 Â£temporary2791>
new  <	jne gmtime$31>

711:
old  <	cmp rax, 0>
new  <>

712:
old  <	jge gmtime$80>
new  < gmtime$29:>

713:
old  <	neg rax>
new  <	; SignedModulo Â£temporary2760 year 400>

714:
old  <	neg eax>
new  <	mov eax, [rbp + 32]>

715:
old  <>
new  <	xor edx, edx>

716:
old  < gmtime$80:>
new  <	idiv dword [int4$400#]>

717:
old  <	; Assign g_timeStruct.tm_mday Â£temporary2792>
new  <>

718:
old  <	mov [@4742$g_timeStruct + 12], eax>
new  < gmtime$30:>

719:
old  <>
new  <	; NotEqual 33 Â£temporary2760 0>

720:
old  < gmtime$81:>
new  <	cmp edx, 0>

721:
old  <	; Assign g_timeStruct.tm_isdst -1>
new  <	jne gmtime$33>

722:
old  <	mov dword [@4742$g_timeStruct + 32], -1>
new  <>

723:
old  <>
new  < gmtime$31:>

724:
old  < gmtime$82:>
new  <	; Assign Â£temporary2763 1>

725:
old  <	; Return @4742$g_timeStruct>
new  <	mov eax, 1>

726:
old  <	mov rbx, @4742$g_timeStruct>
new  <>

727:
old  <	mov rax, [rbp]>
new  < gmtime$32:>

728:
old  <	mov rdi, [rbp + 16]>
new  <	; Goto 34>

729:
old  <	mov rbp, [rbp + 8]>
new  <	jmp gmtime$34>

730:
old  <	jmp rax>
new  <>

731:
old  <>
new  < gmtime$33:>

732:
old  < gmtime$83:>
new  <	; Assign Â£temporary2763 0>

733:
old  <	; BinaryAdd year year 1>
new  <	mov eax, 0>

734:
old  <	inc dword [rbp + 32]>
new  <>

735:
old  <>
new  < gmtime$34:>

736:
old  < gmtime$84:>
new  <	; Assign leapYear Â£temporary2763>

737:
old  <	; IntegralToIntegral Â£temporary2795 daysOfYear>
new  <	mov [rbp + 68], eax>

738:
old  <	mov eax, [rbp + 64]>
new  <>

739:
old  <	mov rbx, 4294967295>
new  < gmtime$35:>

740:
old  <	and rax, rbx>
new  <	; Equal 38 leapYear 0>

741:
old  <	cmp eax, 0>
new  <	cmp dword [rbp + 68], 0>

742:
old  <	jge gmtime$85>
new  <	je gmtime$38>

743:
old  <	neg eax>
new  <>

744:
old  <	neg rax>
new  < gmtime$36:>

745:
old  <>
new  <	; Assign Â£temporary2765 366>

746:
old  < gmtime$85:>
new  <	mov eax, 366>

747:
old  <	; BinarySubtract totalDays totalDays Â£temporary2795>
new  <>

748:
old  <	sub [rbp + 52], rax>
new  < gmtime$37:>

749:
old  <>
new  <	; Goto 39>

750:
old  < gmtime$86:>
new  <	jmp gmtime$39>

751:
old  <	; Goto 26>
new  <>

752:
old  <	jmp gmtime$26>
new  < gmtime$38:>

753:
old  <>
new  <	; Assign Â£temporary2765 365>

754:
old  < gmtime$87:>
new  <	mov eax, 365>

755:
old  <	; Return 0>
new  <>

756:
old  <	mov rbx, 0>
new  < gmtime$39:>

757:
old  <	mov rax, [rbp]>
new  <	; Assign daysOfYear Â£temporary2765>

758:
old  <	mov rdi, [rbp + 16]>
new  <	mov [rbp + 72], eax>

759:
old  <	mov rbp, [rbp + 8]>
new  <>

760:
old  <	jmp rax>
new  < gmtime$40:>

761:
old  <>
new  <	; IntegralToIntegral Â£temporary2766 daysOfYear>

762:
old  < gmtime$88:>
new  <	mov eax, [rbp + 72]>

763:
old  <	; FunctionEnd gmtime>
new  <	mov rbx, 4294967295>

764:
old  <>
new  <	and rax, rbx>

765:
old  <section .data>
new  <	cmp eax, 0>

766:
old  <>
new  <	jge gmtime$41>

767:
old  <container8bytes#:>
new  <	neg eax>

768:
old  <	; InitializerZero 8>
new  <	neg rax>

769:
old  <	times 8 db 0>
new  <>

770:
old  <>
new  < gmtime$41:>

771:
old  <section .text>
new  <	; SignedGreaterThanEqual 82 totalDays Â£temporary2766>

772:
old  <>
new  <	cmp [rbp + 44], rax>

773:
old  < difftime:>
new  <	jge gmtime$82>

774:
old  <	; BinarySubtract Â£temporary2798 time2 time1>
new  <>

775:
old  <	mov rax, [rbp + 32]>
new  < gmtime$42:>

776:
old  <	sub rax, [rbp + 24]>
new  <	; Assign daysOfMonths[0] 31>

777:
old  <>
new  <	mov dword [rbp + 76], 31>

778:
old  < difftime$1:>
new  <>

779:
old  <	; IntegralToFloating Â£temporary2799 Â£temporary2798>
new  < gmtime$43:>

780:
old  <	mov [container8bytes#], rax>
new  <	; Equal 46 leapYear 0>

781:
old  <	fild qword [container8bytes#]>
new  <	cmp dword [rbp + 68], 0>

782:
old  <>
new  <	je gmtime$46>

783:
old  < difftime$2:>
new  <>

784:
old  <	; Return Â£temporary2799>
new  < gmtime$44:>

785:
old  <	mov rax, [rbp]>
new  <	; Assign Â£temporary2769 29>

786:
old  <	mov rdi, [rbp + 16]>
new  <	mov eax, 29>

787:
old  <	mov rbp, [rbp + 8]>
new  <>

788:
old  <	jmp rax>
new  < gmtime$45:>

789:
old  <>
new  <	; Goto 47>

790:
old  < difftime$3:>
new  <	jmp gmtime$47>

791:
old  <	; FunctionEnd difftime>
new  <>

792:
old  <>
new  < gmtime$46:>

793:
old  <section .data>
new  <	; Assign Â£temporary2769 28>

794:
old  <>
new  <	mov eax, 28>

795:
old  <@4754$g_timeString:>
new  <>

796:
old  <	; InitializerZero 256>
new  < gmtime$47:>

797:
old  <	times 256 db 0>
new  <	; Assign daysOfMonths[1] Â£temporary2769>

798:
old  <>
new  <	mov [rbp + 80], eax>

799:
old  <section .data>
new  <>

800:
old  <>
new  < gmtime$48:>

801:
old  <string_Sun#:>
new  <	; Assign daysOfMonths[2] 31>

802:
old  <	; Initializer String Sun>
new  <	mov dword [rbp + 84], 31>

803:
old  <	db "Sun", 0>
new  <>

804:
old  <>
new  < gmtime$49:>

805:
old  <section .data>
new  <	; Assign daysOfMonths[3] 30>

806:
old  <>
new  <	mov dword [rbp + 88], 30>

807:
old  <string_Mon#:>
new  <>

808:
old  <	; Initializer String Mon>
new  < gmtime$50:>

809:
old  <	db "Mon", 0>
new  <	; Assign daysOfMonths[4] 31>

810:
old  <>
new  <	mov dword [rbp + 92], 31>

811:
old  <section .data>
new  <>

812:
old  <>
new  < gmtime$51:>

813:
old  <string_Tue#:>
new  <	; Assign daysOfMonths[5] 30>

814:
old  <	; Initializer String Tue>
new  <	mov dword [rbp + 96], 30>

815:
old  <	db "Tue", 0>
new  <>

816:
old  <>
new  < gmtime$52:>

817:
old  <section .data>
new  <	; Assign daysOfMonths[6] 31>

818:
old  <>
new  <	mov dword [rbp + 100], 31>

819:
old  <string_Wed#:>
new  <>

820:
old  <	; Initializer String Wed>
new  < gmtime$53:>

821:
old  <	db "Wed", 0>
new  <	; Assign daysOfMonths[7] 31>

822:
old  <>
new  <	mov dword [rbp + 104], 31>

823:
old  <section .data>
new  <>

824:
old  <>
new  < gmtime$54:>

825:
old  <string_Thu#:>
new  <	; Assign daysOfMonths[8] 30>

826:
old  <	; Initializer String Thu>
new  <	mov dword [rbp + 108], 30>

827:
old  <	db "Thu", 0>
new  <>

828:
old  <>
new  < gmtime$55:>

829:
old  <section .data>
new  <	; Assign daysOfMonths[9] 31>

830:
old  <>
new  <	mov dword [rbp + 112], 31>

831:
old  <string_Fri#:>
new  <>

832:
old  <	; Initializer String Fri>
new  < gmtime$56:>

833:
old  <	db "Fri", 0>
new  <	; Assign daysOfMonths[10] 30>

834:
old  <>
new  <	mov dword [rbp + 116], 30>

835:
old  <section .data>
new  <>

836:
old  <>
new  < gmtime$57:>

837:
old  <string_Sat#:>
new  <	; Assign daysOfMonths[11] 31>

838:
old  <	; Initializer String Sat>
new  <	mov dword [rbp + 120], 31>

839:
old  <	db "Sat", 0>
new  <>

840:
old  <>
new  < gmtime$58:>

841:
old  <section .data>
new  <	; Assign month 0>

842:
old  <>
new  <	mov dword [rbp + 124], 0>

843:
old  <@4755$g_defaultShortDayList:>
new  <>

844:
old  <	; Initializer Pointer string_Sun#>
new  < gmtime$59:>

845:
old  <	dq string_Sun#>
new  <	; BinarySubtract g_timeStruct.tm_year year 1900>

846:
old  <	; Initializer Pointer string_Mon#>
new  <	mov eax, [rbp + 32]>

847:
old  <	dq string_Mon#>
new  <	sub eax, 1900>

848:
old  <	; Initializer Pointer string_Tue#>
new  <	mov [@4742$g_timeStruct + 20], eax>

849:
old  <	dq string_Tue#>
new  <>

850:
old  <	; Initializer Pointer string_Wed#>
new  < gmtime$60:>

851:
old  <	dq string_Wed#>
new  <	; IntegralToIntegral Â£temporary2785 totalDays>

852:
old  <	; Initializer Pointer string_Thu#>
new  <	mov rax, [rbp + 44]>

853:
old  <	dq string_Thu#>
new  <	cmp rax, 0>

854:
old  <	; Initializer Pointer string_Fri#>
new  <	jge gmtime$61>

855:
old  <	dq string_Fri#>
new  <	neg rax>

856:
old  <	; Initializer Pointer string_Sat#>
new  <	neg eax>

857:
old  <	dq string_Sat#>
new  <>

858:
old  <>
new  < gmtime$61:>

859:
old  <section .data>
new  <	; Assign g_timeStruct.tm_yday Â£temporary2785>

860:
old  <>
new  <	mov [@4742$g_timeStruct + 28], eax>

861:
old  <string_Sunday#:>
new  <>

862:
old  <	; Initializer String Sunday>
new  < gmtime$62:>

863:
old  <	db "Sunday", 0>
new  <	; IntegralToIntegral Â£temporary2787 month>

864:
old  <>
new  <	mov eax, [rbp + 124]>

865:
old  <section .data>
new  <	mov rbx, 4294967295>

866:
old  <>
new  <	and rax, rbx>

867:
old  <string_Monday#:>
new  <>

868:
old  <	; Initializer String Monday>
new  < gmtime$63:>

869:
old  <	db "Monday", 0>
new  <	; UnsignedMultiply Â£temporary2788 Â£temporary2787 4>

870:
old  <>
new  <	xor rdx, rdx>

871:
old  <section .data>
new  <	mul qword [Array_4#]>

873:
old  <string_Tuesday#:>
new  < gmtime$64:>

874:
old  <	; Initializer String Tuesday>
new  <	; BinaryAdd Â£temporary2789 daysOfMonths Â£temporary2788>

875:
old  <	db "Tuesday", 0>
new  <	mov rsi, rbp>

876:
old  <>
new  <	add rsi, 76>

877:
old  <section .data>
new  <	add rsi, rax>

879:
old  <string_Wednesday#:>
new  < gmtime$65:>

880:
old  <	; Initializer String Wednesday>
new  <	; Dereference Â£temporary2786 -> Â£temporary2789 Â£temporary2789 0>

881:
old  <	db "Wednesday", 0>
new  <>

882:
old  <>
new  < gmtime$66:>

883:
old  <section .data>
new  <	; IntegralToIntegral Â£temporary2790 Â£temporary2786 -> Â£temporary2789>

884:
old  <>
new  <	mov eax, [rsi]>

885:
old  <string_Thursday#:>
new  <	mov rbx, 4294967295>

886:
old  <	; Initializer String Thursday>
new  <	and rax, rbx>

887:
old  <	db "Thursday", 0>
new  <	cmp eax, 0>

888:
old  <>
new  <	jge gmtime$67>

889:
old  <section .data>
new  <	neg eax>

890:
old  <>
new  <	neg rax>

891:
old  <string_Friday#:>
new  <>

892:
old  <	; Initializer String Friday>
new  < gmtime$67:>

893:
old  <	db "Friday", 0>
new  <	; SignedLessThan 76 totalDays Â£temporary2790>

894:
old  <>
new  <	cmp [rbp + 44], rax>

895:
old  <section .data>
new  <	jl gmtime$76>

897:
old  <string_Saturday#:>
new  < gmtime$68:>

898:
old  <	; Initializer String Saturday>
new  <	; IntegralToIntegral Â£temporary2793 month>

899:
old  <	db "Saturday", 0>
new  <	mov eax, [rbp + 124]>

900:
old  <>
new  <	mov rbx, 4294967295>

901:
old  <section .data>
new  <	and rax, rbx>

903:
old  <@4756$g_defaultLongDayList:>
new  < gmtime$69:>

904:
old  <	; Initializer Pointer string_Sunday#>
new  <	; UnsignedMultiply Â£temporary2794 Â£temporary2793 4>

905:
old  <	dq string_Sunday#>
new  <	xor rdx, rdx>

906:
old  <	; Initializer Pointer string_Monday#>
new  <	mul qword [Array_4#]>

907:
old  <	dq string_Monday#>
new  <>

908:
old  <	; Initializer Pointer string_Tuesday#>
new  < gmtime$70:>

909:
old  <	dq string_Tuesday#>
new  <	; BinaryAdd Â£temporary2795 daysOfMonths Â£temporary2794>

910:
old  <	; Initializer Pointer string_Wednesday#>
new  <	mov rsi, rbp>

911:
old  <	dq string_Wednesday#>
new  <	add rsi, 76>

912:
old  <	; Initializer Pointer string_Thursday#>
new  <	add rsi, rax>

913:
old  <	dq string_Thursday#>
new  <>

914:
old  <	; Initializer Pointer string_Friday#>
new  < gmtime$71:>

915:
old  <	dq string_Friday#>
new  <	; Dereference Â£temporary2792 -> Â£temporary2795 Â£temporary2795 0>

916:
old  <	; Initializer Pointer string_Saturday#>
new  <>

917:
old  <	dq string_Saturday#>
new  < gmtime$72:>

918:
old  <>
new  <	; IntegralToIntegral Â£temporary2796 Â£temporary2792 -> Â£temporary2795>

919:
old  <section .data>
new  <	mov eax, [rsi]>

920:
old  <>
new  <	mov rbx, 4294967295>

921:
old  <string_Jan#:>
new  <	and rax, rbx>

922:
old  <	; Initializer String Jan>
new  <	cmp eax, 0>

923:
old  <	db "Jan", 0>
new  <	jge gmtime$73>

924:
old  <>
new  <	neg eax>

925:
old  <section .data>
new  <	neg rax>

927:
old  <string_Feb#:>
new  < gmtime$73:>

928:
old  <	; Initializer String Feb>
new  <	; BinarySubtract totalDays totalDays Â£temporary2796>

929:
old  <	db "Feb", 0>
new  <	sub [rbp + 44], rax>

931:
old  <section .data>
new  < gmtime$74:>

932:
old  <>
new  <	; BinaryAdd month month 1>

933:
old  <string_Mar#:>
new  <	inc dword [rbp + 124]>

934:
old  <	; Initializer String Mar>
new  <>

935:
old  <	db "Mar", 0>
new  < gmtime$75:>

936:
old  <>
new  <	; Goto 62>

937:
old  <section .data>
new  <	jmp gmtime$62>

939:
old  <string_Apr#:>
new  < gmtime$76:>

940:
old  <	; Initializer String Apr>
new  <	; Assign g_timeStruct.tm_mon month>

941:
old  <	db "Apr", 0>
new  <	mov eax, [rbp + 124]>

942:
old  <>
new  <	mov [@4742$g_timeStruct + 16], eax>

943:
old  <section .data>
new  <>

944:
old  <>
new  < gmtime$77:>

945:
old  <string_May#:>
new  <	; BinaryAdd Â£temporary2801 totalDays 1>

946:
old  <	; Initializer String May>
new  <	mov rax, [rbp + 44]>

947:
old  <	db "May", 0>
new  <	inc rax>

949:
old  <section .data>
new  < gmtime$78:>

950:
old  <>
new  <	; IntegralToIntegral Â£temporary2802 Â£temporary2801>

951:
old  <string_Jun#:>
new  <	cmp rax, 0>

952:
old  <	; Initializer String Jun>
new  <	jge gmtime$79>

953:
old  <	db "Jun", 0>
new  <	neg rax>

954:
old  <>
new  <	neg eax>

955:
old  <section .data>
new  <>

956:
old  <>
new  < gmtime$79:>

957:
old  <string_Jul#:>
new  <	; Assign g_timeStruct.tm_mday Â£temporary2802>

958:
old  <	; Initializer String Jul>
new  <	mov [@4742$g_timeStruct + 12], eax>

959:
old  <	db "Jul", 0>
new  <>

960:
old  <>
new  < gmtime$80:>

961:
old  <section .data>
new  <	; Assign g_timeStruct.tm_isdst -1>

962:
old  <>
new  <	mov dword [@4742$g_timeStruct + 32], -1>

963:
old  <string_Aug#:>
new  <>

964:
old  <	; Initializer String Aug>
new  < gmtime$81:>

965:
old  <	db "Aug", 0>
new  <	; Return @4742$g_timeStruct>

966:
old  <>
new  <	mov rbx, @4742$g_timeStruct>

967:
old  <section .data>
new  <	mov rax, [rbp]>

968:
old  <>
new  <	mov rdi, [rbp + 16]>

969:
old  <string_Sep#:>
new  <	mov rbp, [rbp + 8]>

970:
old  <	; Initializer String Sep>
new  <	jmp rax>

971:
old  <	db "Sep", 0>
new  <>

972:
old  <>
new  < gmtime$82:>

973:
old  <section .data>
new  <	; BinaryAdd year year 1>

974:
old  <>
new  <	inc dword [rbp + 32]>

975:
old  <string_Oct#:>
new  <>

976:
old  <	; Initializer String Oct>
new  < gmtime$83:>

977:
old  <	db "Oct", 0>
new  <	; IntegralToIntegral Â£temporary2805 daysOfYear>

978:
old  <>
new  <	mov eax, [rbp + 72]>

979:
old  <section .data>
new  <	mov rbx, 4294967295>

980:
old  <>
new  <	and rax, rbx>

981:
old  <string_Nov#:>
new  <	cmp eax, 0>

982:
old  <	; Initializer String Nov>
new  <	jge gmtime$84>

983:
old  <	db "Nov", 0>
new  <	neg eax>

984:
old  <>
new  <	neg rax>

985:
old  <section .data>
new  <>

986:
old  <>
new  < gmtime$84:>

987:
old  <string_Dec#:>
new  <	; BinarySubtract totalDays totalDays Â£temporary2805>

988:
old  <	; Initializer String Dec>
new  <	sub [rbp + 44], rax>

989:
old  <	db "Dec", 0>
new  <>

990:
old  <>
new  < gmtime$85:>

991:
old  <section .data>
new  <	; Goto 25>

992:
old  <>
new  <	jmp gmtime$25>

993:
old  <@4757$g_defaultShortMonthList:>
new  <>

994:
old  <	; Initializer Pointer string_Jan#>
new  < gmtime$86:>

995:
old  <	dq string_Jan#>
new  <	; Return 0>

996:
old  <	; Initializer Pointer string_Feb#>
new  <	mov rbx, 0>

997:
old  <	dq string_Feb#>
new  <	mov rax, [rbp]>

998:
old  <	; Initializer Pointer string_Mar#>
new  <	mov rdi, [rbp + 16]>

999:
old  <	dq string_Mar#>
new  <	mov rbp, [rbp + 8]>

1000:
old  <	; Initializer Pointer string_Apr#>
new  <	jmp rax>

1001:
old  <	dq string_Apr#>
new  <>

1002:
old  <	; Initializer Pointer string_May#>
new  < gmtime$87:>

1003:
old  <	dq string_May#>
new  <	; FunctionEnd gmtime>

1004:
old  <	; Initializer Pointer string_Jun#>
new  <>

1005:
old  <	dq string_Jun#>
new  <section .data>

1006:
old  <	; Initializer Pointer string_Jul#>
new  <>

1007:
old  <	dq string_Jul#>
new  <container8bytes#:>

1008:
old  <	; Initializer Pointer string_Aug#>
new  <	; InitializerZero 8>

1009:
old  <	dq string_Aug#>
new  <	times 8 db 0>

1010:
old  <	; Initializer Pointer string_Sep#>
new  <>

1011:
old  <	dq string_Sep#>
new  <section .text>

1012:
old  <	; Initializer Pointer string_Oct#>
new  <>

1013:
old  <	dq string_Oct#>
new  < difftime:>

1014:
old  <	; Initializer Pointer string_Nov#>
new  <	; BinarySubtract Â£temporary2808 time2 time1>

1015:
old  <	dq string_Nov#>
new  <	mov rax, [rbp + 32]>

1016:
old  <	; Initializer Pointer string_Dec#>
new  <	sub rax, [rbp + 24]>

1017:
old  <	dq string_Dec#>
new  <>

1018:
old  <>
new  < difftime$1:>

1019:
old  <section .data>
new  <	; IntegralToFloating Â£temporary2809 Â£temporary2808>

1020:
old  <>
new  <	mov [container8bytes#], rax>

1021:
old  <string_January#:>
new  <	fild qword [container8bytes#]>

1022:
old  <	; Initializer String January>
new  <>

1023:
old  <	db "January", 0>
new  < difftime$2:>

1024:
old  <>
new  <	; Return Â£temporary2809>

1025:
old  <section .data>
new  <	mov rax, [rbp]>

1026:
old  <>
new  <	mov rdi, [rbp + 16]>

1027:
old  <string_February#:>
new  <	mov rbp, [rbp + 8]>

1028:
old  <	; Initializer String February>
new  <	jmp rax>

1029:
old  <	db "February", 0>
new  <>

1030:
old  <>
new  < difftime$3:>

1031:
old  <section .data>
new  <	; FunctionEnd difftime>

1033:
old  <string_March#:>
new  <section .data>

1034:
old  <	; Initializer String March>
new  <>

1035:
old  <	db "March", 0>
new  <@4764$g_timeString:>

1036:
old  <>
new  <	; InitializerZero 256>

1037:
old  <section .data>
new  <	times 256 db 0>

1039:
old  <string_April#:>
new  <section .data>

1040:
old  <	; Initializer String April>
new  <>

1041:
old  <	db "April", 0>
new  <string_Sun#:>

1042:
old  <>
new  <	; Initializer String Sun>

1043:
old  <section .data>
new  <	db "Sun", 0>

1045:
old  <string_June#:>
new  <section .data>

1046:
old  <	; Initializer String June>
new  <>

1047:
old  <	db "June", 0>
new  <string_Mon#:>

1048:
old  <>
new  <	; Initializer String Mon>

1049:
old  <section .data>
new  <	db "Mon", 0>

1051:
old  <string_July#:>
new  <section .data>

1052:
old  <	; Initializer String July>
new  <>

1053:
old  <	db "July", 0>
new  <string_Tue#:>

1054:
old  <>
new  <	; Initializer String Tue>

1055:
old  <section .data>
new  <	db "Tue", 0>

1057:
old  <string_August#:>
new  <section .data>

1058:
old  <	; Initializer String August>
new  <>

1059:
old  <	db "August", 0>
new  <string_Wed#:>

1060:
old  <>
new  <	; Initializer String Wed>

1061:
old  <section .data>
new  <	db "Wed", 0>

1063:
old  <string_September#:>
new  <section .data>

1064:
old  <	; Initializer String September>
new  <>

1065:
old  <	db "September", 0>
new  <string_Thu#:>

1066:
old  <>
new  <	; Initializer String Thu>

1067:
old  <section .data>
new  <	db "Thu", 0>

1069:
old  <string_October#:>
new  <section .data>

1070:
old  <	; Initializer String October>
new  <>

1071:
old  <	db "October", 0>
new  <string_Fri#:>

1072:
old  <>
new  <	; Initializer String Fri>

1073:
old  <section .data>
new  <	db "Fri", 0>

1075:
old  <string_November#:>
new  <section .data>

1076:
old  <	; Initializer String November>
new  <>

1077:
old  <	db "November", 0>
new  <string_Sat#:>

1078:
old  <>
new  <	; Initializer String Sat>

1079:
old  <section .data>
new  <	db "Sat", 0>

1081:
old  <string_December#:>
new  <section .data>

1082:
old  <	; Initializer String December>
new  <>

1083:
old  <	db "December", 0>
new  <@4765$g_defaultShortDayList:>

1084:
old  <>
new  <	; Initializer Pointer string_Sun#>

1085:
old  <section .data>
new  <	dq string_Sun#>

1086:
old  <>
new  <	; Initializer Pointer string_Mon#>

1087:
old  <@4758$g_defaultLongMonthList:>
new  <	dq string_Mon#>

1088:
old  <	; Initializer Pointer string_January#>
new  <	; Initializer Pointer string_Tue#>

1089:
old  <	dq string_January#>
new  <	dq string_Tue#>

1090:
old  <	; Initializer Pointer string_February#>
new  <	; Initializer Pointer string_Wed#>

1091:
old  <	dq string_February#>
new  <	dq string_Wed#>

1092:
old  <	; Initializer Pointer string_March#>
new  <	; Initializer Pointer string_Thu#>

1093:
old  <	dq string_March#>
new  <	dq string_Thu#>

1094:
old  <	; Initializer Pointer string_April#>
new  <	; Initializer Pointer string_Fri#>

1095:
old  <	dq string_April#>
new  <	dq string_Fri#>

1096:
old  <	; Initializer Pointer string_May#>
new  <	; Initializer Pointer string_Sat#>

1097:
old  <	dq string_May#>
new  <	dq string_Sat#>

1098:
old  <	; Initializer Pointer string_June#>
new  <>

1099:
old  <	dq string_June#>
new  <section .data>

1100:
old  <	; Initializer Pointer string_July#>
new  <>

1101:
old  <	dq string_July#>
new  <string_Sunday#:>

1102:
old  <	; Initializer Pointer string_August#>
new  <	; Initializer String Sunday>

1103:
old  <	dq string_August#>
new  <	db "Sunday", 0>

1104:
old  <	; Initializer Pointer string_September#>
new  <>

1105:
old  <	dq string_September#>
new  <section .data>

1106:
old  <	; Initializer Pointer string_October#>
new  <>

1107:
old  <	dq string_October#>
new  <string_Monday#:>

1108:
old  <	; Initializer Pointer string_November#>
new  <	; Initializer String Monday>

1109:
old  <	dq string_November#>
new  <	db "Monday", 0>

1110:
old  <	; Initializer Pointer string_December#>
new  <>

1111:
old  <	dq string_December#>
new  <section .data>

1113:
old  <section .data>
new  <string_Tuesday#:>

1114:
old  <>
new  <	; Initializer String Tuesday>

1115:
old  <string_25s2025s20252i202502i3A2502i3A2502i202504i#:>
new  <	db "Tuesday", 0>

1116:
old  <	; Initializer String %s %s %2i %02i:%02i:%02i %04i>
new  <>

1117:
old  <	db "%s %s %2i %02i:%02i:%02i %04i", 0>
new  <section .data>

1119:
old  <section .data>
new  <string_Wednesday#:>

1120:
old  <>
new  <	; Initializer String Wednesday>

1121:
old  <int8$8#:>
new  <	db "Wednesday", 0>

1122:
old  <	; Initializer Pointer 8>
new  <>

1123:
old  <	dq 8>
new  <section .data>

1125:
old  <section .text>
new  <string_Thursday#:>

1126:
old  <>
new  <	; Initializer String Thursday>

1127:
old  < asctime:>
new  <	db "Thursday", 0>

1128:
old  <	; Assign localeConvPtr 0>
new  <>

1129:
old  <	mov qword [rbp + 32], 0>
new  <section .data>

1131:
old  < asctime$1:>
new  <string_Friday#:>

1132:
old  <	; Equal 5 localeConvPtr 0>
new  <	; Initializer String Friday>

1133:
old  <	cmp qword [rbp + 32], 0>
new  <	db "Friday", 0>

1134:
old  <	je asctime$5>
new  <>

1135:
old  <>
new  <section .data>

1136:
old  < asctime$2:>
new  <>

1137:
old  <	; Dereference Â£temporary2801 -> localeConvPtr localeConvPtr 0>
new  <string_Saturday#:>

1138:
old  <	mov rsi, [rbp + 32]>
new  <	; Initializer String Saturday>

1139:
old  <>
new  <	db "Saturday", 0>

1140:
old  < asctime$3:>
new  <>

1141:
old  <	; Assign Â£temporary2802 Â£temporary2801 -> localeConvPtr>
new  <section .data>

1142:
old  <	mov rax, [rsi + 8]>
new  <>

1143:
old  <>
new  <@4766$g_defaultLongDayList:>

1144:
old  < asctime$4:>
new  <	; Initializer Pointer string_Sunday#>

1145:
old  <	; Goto 6>
new  <	dq string_Sunday#>

1146:
old  <	jmp asctime$6>
new  <	; Initializer Pointer string_Monday#>

1147:
old  <>
new  <	dq string_Monday#>

1148:
old  < asctime$5:>
new  <	; Initializer Pointer string_Tuesday#>

1149:
old  <	; Assign Â£temporary2802 0>
new  <	dq string_Tuesday#>

1150:
old  <	mov rax, 0>
new  <	; Initializer Pointer string_Wednesday#>

1151:
old  <>
new  <	dq string_Wednesday#>

1152:
old  < asctime$6:>
new  <	; Initializer Pointer string_Thursday#>

1153:
old  <	; Assign shortDayList Â£temporary2802>
new  <	dq string_Thursday#>

1154:
old  <	mov [rbp + 40], rax>
new  <	; Initializer Pointer string_Friday#>

1155:
old  <>
new  <	dq string_Friday#>

1156:
old  < asctime$7:>
new  <	; Initializer Pointer string_Saturday#>

1157:
old  <	; Equal 11 localeConvPtr 0>
new  <	dq string_Saturday#>

1158:
old  <	cmp qword [rbp + 32], 0>
new  <>

1159:
old  <	je asctime$11>
new  <section .data>

1161:
old  < asctime$8:>
new  <string_Jan#:>

1162:
old  <	; Dereference Â£temporary2804 -> localeConvPtr localeConvPtr 0>
new  <	; Initializer String Jan>

1163:
old  <	mov rsi, [rbp + 32]>
new  <	db "Jan", 0>

1165:
old  < asctime$9:>
new  <section .data>

1166:
old  <	; Assign Â£temporary2805 Â£temporary2804 -> localeConvPtr>
new  <>

1167:
old  <	mov rax, [rsi + 24]>
new  <string_Feb#:>

1168:
old  <>
new  <	; Initializer String Feb>

1169:
old  < asctime$10:>
new  <	db "Feb", 0>

1170:
old  <	; Goto 12>
new  <>

1171:
old  <	jmp asctime$12>
new  <section .data>

1173:
old  < asctime$11:>
new  <string_Mar#:>

1174:
old  <	; Assign Â£temporary2805 0>
new  <	; Initializer String Mar>

1175:
old  <	mov rax, 0>
new  <	db "Mar", 0>

1177:
old  < asctime$12:>
new  <section .data>

1178:
old  <	; Assign shortMonthList Â£temporary2805>
new  <>

1179:
old  <	mov [rbp + 48], rax>
new  <string_Apr#:>

1180:
old  <>
new  <	; Initializer String Apr>

1181:
old  < asctime$13:>
new  <	db "Apr", 0>

1182:
old  <	; Equal 16 shortDayList 0>
new  <>

1183:
old  <	cmp qword [rbp + 40], 0>
new  <section .data>

1184:
old  <	je asctime$16>
new  <>

1185:
old  <>
new  <string_May#:>

1186:
old  < asctime$14:>
new  <	; Initializer String May>

1187:
old  <	; Assign Â£temporary2807 shortDayList>
new  <	db "May", 0>

1188:
old  <	mov rax, [rbp + 40]>
new  <>

1189:
old  <>
new  <section .data>

1190:
old  < asctime$15:>
new  <>

1191:
old  <	; Goto 17>
new  <string_Jun#:>

1192:
old  <	jmp asctime$17>
new  <	; Initializer String Jun>

1193:
old  <>
new  <	db "Jun", 0>

1194:
old  < asctime$16:>
new  <>

1195:
old  <	; Assign Â£temporary2807 g_defaultShortDayList>
new  <section .data>

1196:
old  <	mov rax, @4755$g_defaultShortDayList>
new  <>

1197:
old  <>
new  <string_Jul#:>

1198:
old  < asctime$17:>
new  <	; Initializer String Jul>

1199:
old  <	; Assign shortDayList Â£temporary2807>
new  <	db "Jul", 0>

1200:
old  <	mov [rbp + 40], rax>
new  <>

1201:
old  <>
new  <section .data>

1202:
old  < asctime$18:>
new  <>

1203:
old  <	; Equal 21 shortMonthList 0>
new  <string_Aug#:>

1204:
old  <	cmp qword [rbp + 48], 0>
new  <	; Initializer String Aug>

1205:
old  <	je asctime$21>
new  <	db "Aug", 0>

1207:
old  < asctime$19:>
new  <section .data>

1208:
old  <	; Assign Â£temporary2809 shortMonthList>
new  <>

1209:
old  <	mov rax, [rbp + 48]>
new  <string_Sep#:>

1210:
old  <>
new  <	; Initializer String Sep>

1211:
old  < asctime$20:>
new  <	db "Sep", 0>

1212:
old  <	; Goto 22>
new  <>

1213:
old  <	jmp asctime$22>
new  <section .data>

1215:
old  < asctime$21:>
new  <string_Oct#:>

1216:
old  <	; Assign Â£temporary2809 g_defaultShortMonthList>
new  <	; Initializer String Oct>

1217:
old  <	mov rax, @4757$g_defaultShortMonthList>
new  <	db "Oct", 0>

1219:
old  < asctime$22:>
new  <section .data>

1220:
old  <	; Assign shortMonthList Â£temporary2809>
new  <>

1221:
old  <	mov [rbp + 48], rax>
new  <string_Nov#:>

1222:
old  <>
new  <	; Initializer String Nov>

1223:
old  < asctime$23:>
new  <	db "Nov", 0>

1224:
old  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1225:
old  <>
new  <section .data>

1226:
old  < asctime$24:>
new  <>

1227:
old  <	; Parameter pointer g_timeString 80>
new  <string_Dec#:>

1228:
old  <	mov qword [rbp + 80], @4754$g_timeString>
new  <	; Initializer String Dec>

1229:
old  <>
new  <	db "Dec", 0>

1230:
old  < asctime$25:>
new  <>

1231:
old  <	; Parameter pointer "%s %s %2i %02i:%02i:%02i %04i" 88>
new  <section .data>

1232:
old  <	mov qword [rbp + 88], string_25s2025s20252i202502i3A2502i3A2502i202504i#>
new  <>

1233:
old  <>
new  <@4767$g_defaultShortMonthList:>

1234:
old  < asctime$26:>
new  <	; Initializer Pointer string_Jan#>

1235:
old  <	; Dereference Â£temporary2810 -> tp tp 0>
new  <	dq string_Jan#>

1236:
old  <	mov rsi, [rbp + 24]>
new  <	; Initializer Pointer string_Feb#>

1237:
old  <>
new  <	dq string_Feb#>

1238:
old  < asctime$27:>
new  <	; Initializer Pointer string_Mar#>

1239:
old  <	; IntegralToIntegral Â£temporary2812 Â£temporary2810 -> tp>
new  <	dq string_Mar#>

1240:
old  <	mov eax, [rsi + 24]>
new  <	; Initializer Pointer string_Apr#>

1241:
old  <	mov rbx, 4294967295>
new  <	dq string_Apr#>

1242:
old  <	and rax, rbx>
new  <	; Initializer Pointer string_May#>

1243:
old  <>
new  <	dq string_May#>

1244:
old  < asctime$28:>
new  <	; Initializer Pointer string_Jun#>

1245:
old  <	; UnsignedMultiply Â£temporary2813 Â£temporary2812 8>
new  <	dq string_Jun#>

1246:
old  <	xor rdx, rdx>
new  <	; Initializer Pointer string_Jul#>

1247:
old  <	mul qword [int8$8#]>
new  <	dq string_Jul#>

1248:
old  <>
new  <	; Initializer Pointer string_Aug#>

1249:
old  < asctime$29:>
new  <	dq string_Aug#>

1250:
old  <	; BinaryAdd Â£temporary2814 shortDayList Â£temporary2813>
new  <	; Initializer Pointer string_Sep#>

1251:
old  <	mov rsi, [rbp + 40]>
new  <	dq string_Sep#>

1252:
old  <	add rsi, rax>
new  <	; Initializer Pointer string_Oct#>

1253:
old  <>
new  <	dq string_Oct#>

1254:
old  < asctime$30:>
new  <	; Initializer Pointer string_Nov#>

1255:
old  <	; Dereference Â£temporary2811 -> Â£temporary2814 Â£temporary2814 0>
new  <	dq string_Nov#>

1256:
old  <>
new  <	; Initializer Pointer string_Dec#>

1257:
old  < asctime$31:>
new  <	dq string_Dec#>

1258:
old  <	; Parameter pointer Â£temporary2811 -> Â£temporary2814 96>
new  <>

1259:
old  <	mov rax, [rsi]>
new  <section .data>

1260:
old  <	mov [rbp + 96], rax>
new  <>

1261:
old  <>
new  <string_January#:>

1262:
old  < asctime$32:>
new  <	; Initializer String January>

1263:
old  <	; Dereference Â£temporary2815 -> tp tp 0>
new  <	db "January", 0>

1264:
old  <	mov rsi, [rbp + 24]>
new  <>

1265:
old  <>
new  <section .data>

1266:
old  < asctime$33:>
new  <>

1267:
old  <	; IntegralToIntegral Â£temporary2817 Â£temporary2815 -> tp>
new  <string_February#:>

1268:
old  <	mov eax, [rsi + 16]>
new  <	; Initializer String February>

1269:
old  <	mov rbx, 4294967295>
new  <	db "February", 0>

1270:
old  <	and rax, rbx>
new  <>

1271:
old  <>
new  <section .data>

1272:
old  < asctime$34:>
new  <>

1273:
old  <	; UnsignedMultiply Â£temporary2818 Â£temporary2817 8>
new  <string_March#:>

1274:
old  <	xor rdx, rdx>
new  <	; Initializer String March>

1275:
old  <	mul qword [int8$8#]>
new  <	db "March", 0>

1277:
old  < asctime$35:>
new  <section .data>

1278:
old  <	; BinaryAdd Â£temporary2819 shortMonthList Â£temporary2818>
new  <>

1279:
old  <	mov rsi, [rbp + 48]>
new  <string_April#:>

1280:
old  <	add rsi, rax>
new  <	; Initializer String April>

1281:
old  <>
new  <	db "April", 0>

1282:
old  < asctime$36:>
new  <>

1283:
old  <	; Dereference Â£temporary2816 -> Â£temporary2819 Â£temporary2819 0>
new  <section .data>

1285:
old  < asctime$37:>
new  <string_June#:>

1286:
old  <	; Parameter pointer Â£temporary2816 -> Â£temporary2819 104>
new  <	; Initializer String June>

1287:
old  <	mov rax, [rsi]>
new  <	db "June", 0>

1288:
old  <	mov [rbp + 104], rax>
new  <>

1289:
old  <>
new  <section .data>

1290:
old  < asctime$38:>
new  <>

1291:
old  <	; Dereference Â£temporary2820 -> tp tp 0>
new  <string_July#:>

1292:
old  <	mov rsi, [rbp + 24]>
new  <	; Initializer String July>

1293:
old  <>
new  <	db "July", 0>

1294:
old  < asctime$39:>
new  <>

1295:
old  <	; Parameter signedint Â£temporary2820 -> tp 112>
new  <section .data>

1296:
old  <	mov eax, [rsi + 12]>
new  <>

1297:
old  <	mov [rbp + 112], eax>
new  <string_August#:>

1298:
old  <>
new  <	; Initializer String August>

1299:
old  < asctime$40:>
new  <	db "August", 0>

1300:
old  <	; Dereference Â£temporary2821 -> tp tp 0>
new  <>

1301:
old  <	mov rsi, [rbp + 24]>
new  <section .data>

1303:
old  < asctime$41:>
new  <string_September#:>

1304:
old  <	; Parameter signedint Â£temporary2821 -> tp 116>
new  <	; Initializer String September>

1305:
old  <	mov eax, [rsi + 8]>
new  <	db "September", 0>

1306:
old  <	mov [rbp + 116], eax>
new  <>

1307:
old  <>
new  <section .data>

1308:
old  < asctime$42:>
new  <>

1309:
old  <	; Dereference Â£temporary2822 -> tp tp 0>
new  <string_October#:>

1310:
old  <	mov rsi, [rbp + 24]>
new  <	; Initializer String October>

1311:
old  <>
new  <	db "October", 0>

1312:
old  < asctime$43:>
new  <>

1313:
old  <	; Parameter signedint Â£temporary2822 -> tp 120>
new  <section .data>

1314:
old  <	mov eax, [rsi + 4]>
new  <>

1315:
old  <	mov [rbp + 120], eax>
new  <string_November#:>

1316:
old  <>
new  <	; Initializer String November>

1317:
old  < asctime$44:>
new  <	db "November", 0>

1318:
old  <	; Dereference Â£temporary2823 -> tp tp 0>
new  <>

1319:
old  <	mov rsi, [rbp + 24]>
new  <section .data>

1321:
old  < asctime$45:>
new  <string_December#:>

1322:
old  <	; Parameter signedint Â£temporary2823 -> tp 124>
new  <	; Initializer String December>

1323:
old  <	mov eax, [rsi]>
new  <	db "December", 0>

1324:
old  <	mov [rbp + 124], eax>
new  <>

1325:
old  <>
new  <section .data>

1326:
old  < asctime$46:>
new  <>

1327:
old  <	; Dereference Â£temporary2824 -> tp tp 0>
new  <@4768$g_defaultLongMonthList:>

1328:
old  <	mov rsi, [rbp + 24]>
new  <	; Initializer Pointer string_January#>

1329:
old  <>
new  <	dq string_January#>

1330:
old  < asctime$47:>
new  <	; Initializer Pointer string_February#>

1331:
old  <	; BinaryAdd Â£temporary2825 Â£temporary2824 -> tp 1900>
new  <	dq string_February#>

1332:
old  <	mov eax, [rsi + 20]>
new  <	; Initializer Pointer string_March#>

1333:
old  <	add eax, 1900>
new  <	dq string_March#>

1334:
old  <>
new  <	; Initializer Pointer string_April#>

1335:
old  < asctime$48:>
new  <	dq string_April#>

1336:
old  <	; Parameter signedint Â£temporary2825 128>
new  <	; Initializer Pointer string_May#>

1337:
old  <	mov [rbp + 128], eax>
new  <	dq string_May#>

1338:
old  <>
new  <	; Initializer Pointer string_June#>

1339:
old  < asctime$49:>
new  <	dq string_June#>

1340:
old  <	; Call sprintf 56 36>
new  <	; Initializer Pointer string_July#>

1341:
old  <	mov qword [rbp + 56], asctime$50>
new  <	dq string_July#>

1342:
old  <	mov [rbp + 64], rbp>
new  <	; Initializer Pointer string_August#>

1343:
old  <	add rbp, 56>
new  <	dq string_August#>

1344:
old  <	mov rdi, rbp>
new  <	; Initializer Pointer string_September#>

1345:
old  <	add rdi, 36>
new  <	dq string_September#>

1346:
old  <	jmp sprintf>
new  <	; Initializer Pointer string_October#>

1347:
old  <>
new  <	dq string_October#>

1348:
old  < asctime$50:>
new  <	; Initializer Pointer string_November#>

1349:
old  <	; PostCall 56>
new  <	dq string_November#>

1350:
old  <>
new  <	; Initializer Pointer string_December#>

1351:
old  < asctime$51:>
new  <	dq string_December#>

1352:
old  <	; Return g_timeString>
new  <>

1353:
old  <	mov rbx, @4754$g_timeString>
new  <section .data>

1354:
old  <	mov rax, [rbp]>
new  <>

1355:
old  <	mov rdi, [rbp + 16]>
new  <string_25s2025s2025i2025i3A25i3A25i2025i#:>

1356:
old  <	mov rbp, [rbp + 8]>
new  <	; Initializer String %s %s %i %i:%i:%i %i>

1357:
old  <	jmp rax>
new  <	db "%s %s %i %i:%i:%i %i", 0>

1359:
old  < asctime$52:>
new  <section .data>

1360:
old  <	; FunctionEnd asctime>
new  <>

1361:
old  <>
new  <int8$8#:>

1362:
old  <section .text>
new  <	; Initializer Pointer 8>

1363:
old  <>
new  <	dq 8>

1364:
old  < ctime:>
new  <>

1365:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <section .text>

1367:
old  < ctime$1:>
new  < asctime:>

1368:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Assign localeConvPtr 0>

1369:
old  <>
new  <	mov qword [rbp + 32], 0>

1370:
old  < ctime$2:>
new  <>

1371:
old  <	; Parameter pointer time 56>
new  < asctime$1:>

1372:
old  <	mov rax, [rbp + 24]>
new  <	; Equal 5 localeConvPtr 0>

1373:
old  <	mov [rbp + 56], rax>
new  <	cmp qword [rbp + 32], 0>

1374:
old  <>
new  <	je asctime$5>

1375:
old  < ctime$3:>
new  <>

1376:
old  <	; Call localtime 32 0>
new  < asctime$2:>

1377:
old  <	mov qword [rbp + 32], ctime$4>
new  <	; Dereference Â£temporary2811 -> localeConvPtr localeConvPtr 0>

1378:
old  <	mov [rbp + 40], rbp>
new  <	mov rsi, [rbp + 32]>

1379:
old  <	add rbp, 32>
new  <>

1380:
old  <	jmp localtime>
new  < asctime$3:>

1381:
old  <>
new  <	; Assign Â£temporary2812 Â£temporary2811 -> localeConvPtr>

1382:
old  < ctime$4:>
new  <	mov rax, [rsi + 8]>

1383:
old  <	; PostCall 32>
new  <>

1384:
old  <>
new  < asctime$4:>

1385:
old  < ctime$5:>
new  <	; Goto 6>

1386:
old  <	; GetReturnValue Â£temporary2827>
new  <	jmp asctime$6>

1388:
old  < ctime$6:>
new  < asctime$5:>

1389:
old  <	; Parameter pointer Â£temporary2827 56>
new  <	; Assign Â£temporary2812 0>

1390:
old  <	mov [rbp + 56], rbx>
new  <	mov rax, 0>

1392:
old  < ctime$7:>
new  < asctime$6:>

1393:
old  <	; Call asctime 32 0>
new  <	; Assign shortDayList Â£temporary2812>

1394:
old  <	mov qword [rbp + 32], ctime$8>
new  <	mov [rbp + 40], rax>

1395:
old  <	mov [rbp + 40], rbp>
new  <>

1396:
old  <	add rbp, 32>
new  < asctime$7:>

1397:
old  <	jmp asctime>
new  <	; Equal 11 localeConvPtr 0>

1398:
old  <>
new  <	cmp qword [rbp + 32], 0>

1399:
old  < ctime$8:>
new  <	je asctime$11>

1400:
old  <	; PostCall 32>
new  <>

1401:
old  <>
new  < asctime$8:>

1402:
old  < ctime$9:>
new  <	; Dereference Â£temporary2814 -> localeConvPtr localeConvPtr 0>

1403:
old  <	; GetReturnValue Â£temporary2828>
new  <	mov rsi, [rbp + 32]>

1405:
old  < ctime$10:>
new  < asctime$9:>

1406:
old  <	; Return Â£temporary2828>
new  <	; Assign Â£temporary2815 Â£temporary2814 -> localeConvPtr>

1407:
old  <	mov rax, [rbp]>
new  <	mov rax, [rsi + 24]>

1408:
old  <	mov rdi, [rbp + 16]>
new  <>

1409:
old  <	mov rbp, [rbp + 8]>
new  < asctime$10:>

1410:
old  <	jmp rax>
new  <	; Goto 12>

1411:
old  <>
new  <	jmp asctime$12>

1412:
old  < ctime$11:>
new  <>

1413:
old  <	; FunctionEnd ctime>
new  < asctime$11:>

1414:
old  <>
new  <	; Assign Â£temporary2815 0>

1415:
old  <section .data>
new  <	mov rax, 0>

1417:
old  <int4$3600#:>
new  < asctime$12:>

1418:
old  <	; Initializer SignedInt 3600>
new  <	; Assign shortMonthList Â£temporary2815>

1419:
old  <	dd 3600>
new  <	mov [rbp + 48], rax>

1421:
old  <section .text>
new  < asctime$13:>

1422:
old  <>
new  <	; Equal 16 shortDayList 0>

1423:
old  < localtime:>
new  <	cmp qword [rbp + 40], 0>

1424:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	je asctime$16>

1426:
old  < localtime$1:>
new  < asctime$14:>

1427:
old  <	; Parameter pointer timePtr 56>
new  <	; Assign Â£temporary2817 shortDayList>

1428:
old  <	mov rax, [rbp + 24]>
new  <	mov rax, [rbp + 40]>

1429:
old  <	mov [rbp + 56], rax>
new  <>

1430:
old  <>
new  < asctime$15:>

1431:
old  < localtime$2:>
new  <	; Goto 17>

1432:
old  <	; Call gmtime 32 0>
new  <	jmp asctime$17>

1433:
old  <	mov qword [rbp + 32], localtime$3>
new  <>

1434:
old  <	mov [rbp + 40], rbp>
new  < asctime$16:>

1435:
old  <	add rbp, 32>
new  <	; Assign Â£temporary2817 g_defaultShortDayList>

1436:
old  <	jmp gmtime>
new  <	mov rax, @4765$g_defaultShortDayList>

1438:
old  < localtime$3:>
new  < asctime$17:>

1439:
old  <	; PostCall 32>
new  <	; Assign shortDayList Â£temporary2817>

1440:
old  <>
new  <	mov [rbp + 40], rax>

1441:
old  < localtime$4:>
new  <>

1442:
old  <	; GetReturnValue Â£temporary2829>
new  < asctime$18:>

1443:
old  <>
new  <	; Equal 21 shortMonthList 0>

1444:
old  < localtime$5:>
new  <	cmp qword [rbp + 48], 0>

1445:
old  <	; Assign tmPtr Â£temporary2829>
new  <	je asctime$21>

1446:
old  <	mov [rbp + 32], rbx>
new  <>

1447:
old  <>
new  < asctime$19:>

1448:
old  < localtime$6:>
new  <	; Assign Â£temporary2819 shortMonthList>

1449:
old  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov rax, [rbp + 48]>

1451:
old  < localtime$7:>
new  < asctime$20:>

1452:
old  <	; Call localeconv 40 0>
new  <	; Goto 22>

1453:
old  <	mov qword [rbp + 40], localtime$8>
new  <	jmp asctime$22>

1454:
old  <	mov [rbp + 48], rbp>
new  <>

1455:
old  <	add rbp, 40>
new  < asctime$21:>

1456:
old  <	jmp localeconv>
new  <	; Assign Â£temporary2819 g_defaultShortMonthList>

1457:
old  <>
new  <	mov rax, @4767$g_defaultShortMonthList>

1458:
old  < localtime$8:>
new  <>

1459:
old  <	; PostCall 40>
new  < asctime$22:>

1460:
old  <>
new  <	; Assign shortMonthList Â£temporary2819>

1461:
old  < localtime$9:>
new  <	mov [rbp + 48], rax>

1462:
old  <	; GetReturnValue Â£temporary2830>
new  <>

1463:
old  <>
new  < asctime$23:>

1464:
old  < localtime$10:>
new  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1465:
old  <	; Assign localeConvPtr Â£temporary2830>
new  <>

1466:
old  <	mov [rbp + 40], rbx>
new  < asctime$24:>

1467:
old  <>
new  <	; Parameter pointer g_timeString 80>

1468:
old  < localtime$11:>
new  <	mov qword [rbp + 80], @4764$g_timeString>

1469:
old  <	; Assign timeZone 0>
new  <>

1470:
old  <	mov dword [rbp + 48], 0>
new  < asctime$25:>

1471:
old  <>
new  <	; Parameter pointer "%s %s %i %i:%i:%i %i" 88>

1472:
old  < localtime$12:>
new  <	mov qword [rbp + 88], string_25s2025s2025i2025i3A25i3A25i2025i#>

1473:
old  <	; Equal 21 localeConvPtr 0>
new  <>

1474:
old  <	cmp qword [rbp + 40], 0>
new  < asctime$26:>

1475:
old  <	je localtime$21>
new  <	; Dereference Â£temporary2820 -> tp tp 0>

1476:
old  <>
new  <	mov rsi, [rbp + 24]>

1477:
old  < localtime$13:>
new  <>

1478:
old  <	; Dereference Â£temporary2832 -> tmPtr tmPtr 0>
new  < asctime$27:>

1479:
old  <	mov rsi, [rbp + 32]>
new  <	; IntegralToIntegral Â£temporary2822 Â£temporary2820 -> tp>

1480:
old  <>
new  <	mov eax, [rsi + 24]>

1481:
old  < localtime$14:>
new  <	mov rbx, 4294967295>

1482:
old  <	; Equal 18 Â£temporary2832 -> tmPtr 0>
new  <	and rax, rbx>

1483:
old  <	cmp dword [rsi + 32], 0>
new  <>

1484:
old  <	je localtime$18>
new  < asctime$28:>

1485:
old  <>
new  <	; UnsignedMultiply Â£temporary2823 Â£temporary2822 8>

1486:
old  < localtime$15:>
new  <	xor rdx, rdx>

1487:
old  <	; Dereference Â£temporary2833 -> localeConvPtr localeConvPtr 0>
new  <	mul qword [int8$8#]>

1488:
old  <	mov rsi, [rbp + 40]>
new  <>

1489:
old  <>
new  < asctime$29:>

1490:
old  < localtime$16:>
new  <	; BinaryAdd Â£temporary2824 shortDayList Â£temporary2823>

1491:
old  <	; Assign Â£temporary2836 Â£temporary2833 -> localeConvPtr>
new  <	mov rsi, [rbp + 40]>

1492:
old  <	mov eax, [rsi]>
new  <	add rsi, rax>

1494:
old  < localtime$17:>
new  < asctime$30:>

1495:
old  <	; Goto 20>
new  <	; Dereference Â£temporary2821 -> Â£temporary2824 Â£temporary2824 0>

1496:
old  <	jmp localtime$20>
new  <>

1497:
old  <>
new  < asctime$31:>

1498:
old  < localtime$18:>
new  <	; Parameter pointer Â£temporary2821 -> Â£temporary2824 96>

1499:
old  <	; Dereference Â£temporary2834 -> localeConvPtr localeConvPtr 0>
new  <	mov rax, [rsi]>

1500:
old  <	mov rsi, [rbp + 40]>
new  <	mov [rbp + 96], rax>

1502:
old  < localtime$19:>
new  < asctime$32:>

1503:
old  <	; Assign Â£temporary2836 Â£temporary2834 -> localeConvPtr>
new  <	; Dereference Â£temporary2825 -> tp tp 0>

1504:
old  <	mov eax, [rsi + 4]>
new  <	mov rsi, [rbp + 24]>

1506:
old  < localtime$20:>
new  < asctime$33:>

1507:
old  <	; Assign timeZone Â£temporary2836>
new  <	; IntegralToIntegral Â£temporary2827 Â£temporary2825 -> tp>

1508:
old  <	mov [rbp + 48], eax>
new  <	mov eax, [rsi + 16]>

1509:
old  <>
new  <	mov rbx, 4294967295>

1510:
old  < localtime$21:>
new  <	and rax, rbx>

1511:
old  <	; Dereference Â£temporary2837 -> timePtr timePtr 0>
new  <>

1512:
old  <	mov rsi, [rbp + 24]>
new  < asctime$34:>

1513:
old  <>
new  <	; UnsignedMultiply Â£temporary2828 Â£temporary2827 8>

1514:
old  < localtime$22:>
new  <	xor rdx, rdx>

1515:
old  <	; SignedMultiply Â£temporary2838 timeZone 3600>
new  <	mul qword [int8$8#]>

1516:
old  <	mov eax, [rbp + 48]>
new  <>

1517:
old  <	xor edx, edx>
new  < asctime$35:>

1518:
old  <	imul dword [int4$3600#]>
new  <	; BinaryAdd Â£temporary2829 shortMonthList Â£temporary2828>

1519:
old  <>
new  <	mov rsi, [rbp + 48]>

1520:
old  < localtime$23:>
new  <	add rsi, rax>

1521:
old  <	; IntegralToIntegral Â£temporary2839 Â£temporary2838>
new  <>

1522:
old  <	mov rbx, 4294967295>
new  < asctime$36:>

1523:
old  <	and rax, rbx>
new  <	; Dereference Â£temporary2826 -> Â£temporary2829 Â£temporary2829 0>

1525:
old  < localtime$24:>
new  < asctime$37:>

1526:
old  <	; BinaryAdd time Â£temporary2837 -> timePtr Â£temporary2839>
new  <	; Parameter pointer Â£temporary2826 -> Â£temporary2829 104>

1527:
old  <	mov rbx, [rsi]>
new  <	mov rax, [rsi]>

1528:
old  <	add rbx, rax>
new  <	mov [rbp + 104], rax>

1529:
old  <	mov [rbp + 52], rbx>
new  <>

1530:
old  <>
new  < asctime$38:>

1531:
old  < localtime$25:>
new  <	; Dereference Â£temporary2830 -> tp tp 0>

1532:
old  <	; PreCall 60 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov rsi, [rbp + 24]>

1534:
old  < localtime$26:>
new  < asctime$39:>

1535:
old  <	; Address Â£temporary2841 time>
new  <	; Parameter signedint Â£temporary2830 -> tp 112>

1536:
old  <	mov rsi, rbp>
new  <	mov eax, [rsi + 12]>

1537:
old  <	add rsi, 52>
new  <	mov [rbp + 112], eax>

1539:
old  < localtime$27:>
new  < asctime$40:>

1540:
old  <	; Parameter pointer Â£temporary2841 84>
new  <	; Dereference Â£temporary2831 -> tp tp 0>

1541:
old  <	mov [rbp + 84], rsi>
new  <	mov rsi, [rbp + 24]>

1543:
old  < localtime$28:>
new  < asctime$41:>

1544:
old  <	; Call gmtime 60 0>
new  <	; Parameter signedint Â£temporary2831 -> tp 116>

1545:
old  <	mov qword [rbp + 60], localtime$29>
new  <	mov eax, [rsi + 8]>

1546:
old  <	mov [rbp + 68], rbp>
new  <	mov [rbp + 116], eax>

1547:
old  <	add rbp, 60>
new  <>

1548:
old  <	jmp gmtime>
new  < asctime$42:>

1549:
old  <>
new  <	; Dereference Â£temporary2832 -> tp tp 0>

1550:
old  < localtime$29:>
new  <	mov rsi, [rbp + 24]>

1551:
old  <	; PostCall 60>
new  <>

1552:
old  <>
new  < asctime$43:>

1553:
old  < localtime$30:>
new  <	; Parameter signedint Â£temporary2832 -> tp 120>

1554:
old  <	; GetReturnValue Â£temporary2842>
new  <	mov eax, [rsi + 4]>

1555:
old  <>
new  <	mov [rbp + 120], eax>

1556:
old  < localtime$31:>
new  <>

1557:
old  <	; Return Â£temporary2842>
new  < asctime$44:>

1558:
old  <	mov rax, [rbp]>
new  <	; Dereference Â£temporary2833 -> tp tp 0>

1559:
old  <	mov rdi, [rbp + 16]>
new  <	mov rsi, [rbp + 24]>

1560:
old  <	mov rbp, [rbp + 8]>
new  <>

1561:
old  <	jmp rax>
new  < asctime$45:>

1562:
old  <>
new  <	; Parameter signedint Â£temporary2833 -> tp 124>

1563:
old  < localtime$32:>
new  <	mov eax, [rsi]>

1564:
old  <	; FunctionEnd localtime>
new  <	mov [rbp + 124], eax>

1566:
old  <section .data>
new  < asctime$46:>

1567:
old  <>
new  <	; Dereference Â£temporary2834 -> tp tp 0>

1568:
old  <string_#:>
new  <	mov rsi, [rbp + 24]>

1569:
old  <	; Initializer String >
new  <>

1570:
old  <	db 0>
new  < asctime$47:>

1571:
old  <>
new  <	; BinaryAdd Â£temporary2835 Â£temporary2834 -> tp 1900>

1572:
old  <section .data>
new  <	mov eax, [rsi + 20]>

1573:
old  <>
new  <	add eax, 1900>

1574:
old  <string_2504d2D2502d2D2502d202502d3A2502d3A2502d#:>
new  <>

1575:
old  <	; Initializer String %04d-%02d-%02d %02d:%02d:%02d>
new  < asctime$48:>

1576:
old  <	db "%04d-%02d-%02d %02d:%02d:%02d", 0>
new  <	; Parameter signedint Â£temporary2835 128>

1577:
old  <>
new  <	mov [rbp + 128], eax>

1578:
old  <section .data>
new  <>

1579:
old  <>
new  < asctime$49:>

1580:
old  <string_2502d#:>
new  <	; Call sprintf 56 36>

1581:
old  <	; Initializer String %02d>
new  <	mov qword [rbp + 56], asctime$50>

1582:
old  <	db "%02d", 0>
new  <	mov [rbp + 64], rbp>

1583:
old  <>
new  <	add rbp, 56>

1584:
old  <section .data>
new  <	mov rdi, rbp>

1585:
old  <>
new  <	add rdi, 36>

1586:
old  <string_2503d#:>
new  <	jmp sprintf>

1587:
old  <	; Initializer String %03d>
new  <>

1588:
old  <	db "%03d", 0>
new  < asctime$50:>

1589:
old  <>
new  <	; PostCall 56>

1590:
old  <section .data>
new  <>

1591:
old  <>
new  < asctime$51:>

1592:
old  <string_25s#:>
new  <	; Return g_timeString>

1593:
old  <	; Initializer String %s>
new  <	mov rbx, @4764$g_timeString>

1594:
old  <	db "%s", 0>
new  <	mov rax, [rbp]>

1595:
old  <>
new  <	mov rdi, [rbp + 16]>

1596:
old  <section .data>
new  <	mov rbp, [rbp + 8]>

1597:
old  <>
new  <	jmp rax>

1598:
old  <string_AM#:>
new  <>

1599:
old  <	; Initializer String AM>
new  < asctime$52:>

1600:
old  <	db "AM", 0>
new  <	; FunctionEnd asctime>

1602:
old  <section .data>
new  <section .text>

1604:
old  <string_PM#:>
new  < ctime:>

1605:
old  <	; Initializer String PM>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1606:
old  <	db "PM", 0>
new  <>

1607:
old  <>
new  < ctime$1:>

1608:
old  <section .data>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1610:
old  <string_2504d2D2502d2D2502d#:>
new  < ctime$2:>

1611:
old  <	; Initializer String %04d-%02d-%02d>
new  <	; Parameter pointer time 56>

1612:
old  <	db "%04d-%02d-%02d", 0>
new  <	mov rax, [rbp + 24]>

1613:
old  <>
new  <	mov [rbp + 56], rax>

1614:
old  <section .data>
new  <>

1615:
old  <>
new  < ctime$3:>

1616:
old  <string_2502d3A2502d3A2502d#:>
new  <	; Call localtime 32 0>

1617:
old  <	; Initializer String %02d:%02d:%02d>
new  <	mov qword [rbp + 32], ctime$4>

1618:
old  <	db "%02d:%02d:%02d", 0>
new  <	mov [rbp + 40], rbp>

1619:
old  <>
new  <	add rbp, 32>

1620:
old  <section .data>
new  <	jmp localtime>

1622:
old  <string_2504d#:>
new  < ctime$4:>

1623:
old  <	; Initializer String %04d>
new  <	; PostCall 32>

1624:
old  <	db "%04d", 0>
new  <>

1625:
old  <>
new  < ctime$5:>

1626:
old  <section .data>
new  <	; GetReturnValue Â£temporary2837>

1628:
old  <string_25#:>
new  < ctime$6:>

1629:
old  <	; Initializer String %>
new  <	; Parameter pointer Â£temporary2837 56>

1630:
old  <	db "%", 0>
new  <	mov [rbp + 56], rbx>

1632:
old  <section .data>
new  < ctime$7:>

1633:
old  <>
new  <	; Call asctime 32 0>

1634:
old  <int4$12#:>
new  <	mov qword [rbp + 32], ctime$8>

1635:
old  <	; Initializer SignedInt 12>
new  <	mov [rbp + 40], rbp>

1636:
old  <	dd 12>
new  <	add rbp, 32>

1637:
old  <>
new  <	jmp asctime>

1638:
old  <section .text>
new  <>

1639:
old  <>
new  < ctime$8:>

1640:
old  < strftime:>
new  <	; PostCall 32>

1641:
old  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1642:
old  <>
new  < ctime$9:>

1643:
old  < strftime$1:>
new  <	; GetReturnValue Â£temporary2838>

1644:
old  <	; Call localeconv 52 0>
new  <>

1645:
old  <	mov qword [rbp + 52], strftime$2>
new  < ctime$10:>

1646:
old  <	mov [rbp + 60], rbp>
new  <	; Return Â£temporary2838>

1647:
old  <	add rbp, 52>
new  <	mov rax, [rbp]>

1648:
old  <	jmp localeconv>
new  <	mov rdi, [rbp + 16]>

1649:
old  <>
new  <	mov rbp, [rbp + 8]>

1650:
old  < strftime$2:>
new  <	jmp rax>

1651:
old  <	; PostCall 52>
new  <>

1652:
old  <>
new  < ctime$11:>

1653:
old  < strftime$3:>
new  <	; FunctionEnd ctime>

1654:
old  <	; GetReturnValue Â£temporary2844>
new  <>

1655:
old  <>
new  <section .text>

1656:
old  < strftime$4:>
new  <>

1657:
old  <	; Assign localeConvPtr Â£temporary2844>
new  < localtime:>

1658:
old  <	mov [rbp + 52], rbx>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1660:
old  < strftime$5:>
new  < localtime$1:>

1661:
old  <	; Equal 9 localeConvPtr 0>
new  <	; Parameter pointer timePtr 56>

1662:
old  <	cmp qword [rbp + 52], 0>
new  <	mov rax, [rbp + 24]>

1663:
old  <	je strftime$9>
new  <	mov [rbp + 56], rax>

1665:
old  < strftime$6:>
new  < localtime$2:>

1666:
old  <	; Dereference Â£temporary2846 -> localeConvPtr localeConvPtr 0>
new  <	; Call gmtime 32 0>

1667:
old  <	mov rsi, [rbp + 52]>
new  <	mov qword [rbp + 32], localtime$3>

1668:
old  <>
new  <	mov [rbp + 40], rbp>

1669:
old  < strftime$7:>
new  <	add rbp, 32>

1670:
old  <	; Assign Â£temporary2847 Â£temporary2846 -> localeConvPtr>
new  <	jmp gmtime>

1671:
old  <	mov rax, [rsi + 8]>
new  <>

1672:
old  <>
new  < localtime$3:>

1673:
old  < strftime$8:>
new  <	; PostCall 32>

1674:
old  <	; Goto 10>
new  <>

1675:
old  <	jmp strftime$10>
new  < localtime$4:>

1676:
old  <>
new  <	; GetReturnValue Â£temporary2839>

1677:
old  < strftime$9:>
new  <>

1678:
old  <	; Assign Â£temporary2847 0>
new  < localtime$5:>

1679:
old  <	mov rax, 0>
new  <	; Assign tmPtr Â£temporary2839>

1680:
old  <>
new  <	mov [rbp + 32], rbx>

1681:
old  < strftime$10:>
new  <>

1682:
old  <	; Assign shortDayList Â£temporary2847>
new  < localtime$6:>

1683:
old  <	mov [rbp + 60], rax>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1685:
old  < strftime$11:>
new  < localtime$7:>

1686:
old  <	; Equal 15 localeConvPtr 0>
new  <	; Call localeconv 40 0>

1687:
old  <	cmp qword [rbp + 52], 0>
new  <	mov qword [rbp + 40], localtime$8>

1688:
old  <	je strftime$15>
new  <	mov [rbp + 48], rbp>

1689:
old  <>
new  <	add rbp, 40>

1690:
old  < strftime$12:>
new  <	jmp localeconv>

1691:
old  <	; Dereference Â£temporary2849 -> localeConvPtr localeConvPtr 0>
new  <>

1692:
old  <	mov rsi, [rbp + 52]>
new  < localtime$8:>

1693:
old  <>
new  <	; PostCall 40>

1694:
old  < strftime$13:>
new  <>

1695:
old  <	; Assign Â£temporary2850 Â£temporary2849 -> localeConvPtr>
new  < localtime$9:>

1696:
old  <	mov rax, [rsi + 24]>
new  <	; GetReturnValue Â£temporary2840>

1698:
old  < strftime$14:>
new  < localtime$10:>

1699:
old  <	; Goto 16>
new  <	; Assign localeConvPtr Â£temporary2840>

1700:
old  <	jmp strftime$16>
new  <	mov [rbp + 40], rbx>

1702:
old  < strftime$15:>
new  < localtime$11:>

1703:
old  <	; Assign Â£temporary2850 0>
new  <	; Assign timeZone 0>

1704:
old  <	mov rax, 0>
new  <	mov dword [rbp + 48], 0>

1706:
old  < strftime$16:>
new  < localtime$12:>

1707:
old  <	; Assign shortMonthList Â£temporary2850>
new  <	; Equal 21 localeConvPtr 0>

1708:
old  <	mov [rbp + 68], rax>
new  <	cmp qword [rbp + 40], 0>

1709:
old  <>
new  <	je localtime$21>

1710:
old  < strftime$17:>
new  <>

1711:
old  <	; Equal 21 localeConvPtr 0>
new  < localtime$13:>

1712:
old  <	cmp qword [rbp + 52], 0>
new  <	; Dereference Â£temporary2842 -> tmPtr tmPtr 0>

1713:
old  <	je strftime$21>
new  <	mov rsi, [rbp + 32]>

1715:
old  < strftime$18:>
new  < localtime$14:>

1716:
old  <	; Dereference Â£temporary2852 -> localeConvPtr localeConvPtr 0>
new  <	; Equal 18 Â£temporary2842 -> tmPtr 0>

1717:
old  <	mov rsi, [rbp + 52]>
new  <	cmp dword [rsi + 32], 0>

1718:
old  <>
new  <	je localtime$18>

1719:
old  < strftime$19:>
new  <>

1720:
old  <	; Assign Â£temporary2853 Â£temporary2852 -> localeConvPtr>
new  < localtime$15:>

1721:
old  <	mov rax, [rsi + 16]>
new  <	; Dereference Â£temporary2843 -> localeConvPtr localeConvPtr 0>

1722:
old  <>
new  <	mov rsi, [rbp + 40]>

1723:
old  < strftime$20:>
new  <>

1724:
old  <	; Goto 22>
new  < localtime$16:>

1725:
old  <	jmp strftime$22>
new  <	; Assign Â£temporary2846 Â£temporary2843 -> localeConvPtr>

1726:
old  <>
new  <	mov eax, [rsi]>

1727:
old  < strftime$21:>
new  <>

1728:
old  <	; Assign Â£temporary2853 0>
new  < localtime$17:>

1729:
old  <	mov rax, 0>
new  <	; Goto 20>

1730:
old  <>
new  <	jmp localtime$20>

1731:
old  < strftime$22:>
new  <>

1732:
old  <	; Assign longDayList Â£temporary2853>
new  < localtime$18:>

1733:
old  <	mov [rbp + 76], rax>
new  <	; Dereference Â£temporary2844 -> localeConvPtr localeConvPtr 0>

1734:
old  <>
new  <	mov rsi, [rbp + 40]>

1735:
old  < strftime$23:>
new  <>

1736:
old  <	; Equal 27 localeConvPtr 0>
new  < localtime$19:>

1737:
old  <	cmp qword [rbp + 52], 0>
new  <	; Assign Â£temporary2846 Â£temporary2844 -> localeConvPtr>

1738:
old  <	je strftime$27>
new  <	mov eax, [rsi + 4]>

1740:
old  < strftime$24:>
new  < localtime$20:>

1741:
old  <	; Dereference Â£temporary2855 -> localeConvPtr localeConvPtr 0>
new  <	; Assign timeZone Â£temporary2846>

1742:
old  <	mov rsi, [rbp + 52]>
new  <	mov [rbp + 48], eax>

1744:
old  < strftime$25:>
new  < localtime$21:>

1745:
old  <	; Assign Â£temporary2856 Â£temporary2855 -> localeConvPtr>
new  <	; Dereference Â£temporary2847 -> timePtr timePtr 0>

1746:
old  <	mov rax, [rsi + 32]>
new  <	mov rsi, [rbp + 24]>

1748:
old  < strftime$26:>
new  < localtime$22:>

1749:
old  <	; Goto 28>
new  <	; IntegralToIntegral Â£temporary2848 timeZone>

1750:
old  <	jmp strftime$28>
new  <	mov eax, [rbp + 48]>

1751:
old  <>
new  <	mov rbx, 4294967295>

1752:
old  < strftime$27:>
new  <	and rax, rbx>

1753:
old  <	; Assign Â£temporary2856 0>
new  <	cmp eax, 0>

1754:
old  <	mov rax, 0>
new  <	jge localtime$23>

1755:
old  <>
new  <	neg eax>

1756:
old  < strftime$28:>
new  <	neg rax>

1757:
old  <	; Assign longMonthList Â£temporary2856>
new  <>

1758:
old  <	mov [rbp + 84], rax>
new  < localtime$23:>

1759:
old  <>
new  <	; SignedMultiply Â£temporary2849 Â£temporary2848 3600>

1760:
old  < strftime$29:>
new  <	xor rdx, rdx>

1761:
old  <	; Dereference Â£temporary2857 -> tp tp 0>
new  <	imul qword [int8$3600#]>

1762:
old  <	mov rsi, [rbp + 44]>
new  <>

1763:
old  <>
new  < localtime$24:>

1764:
old  < strftime$30:>
new  <	; BinaryAdd timeXXX Â£temporary2847 -> timePtr Â£temporary2849>

1765:
old  <	; BinarySubtract Â£temporary2858 Â£temporary2857 -> tp 69>
new  <	mov rbx, [rsi]>

1766:
old  <	mov eax, [rsi + 20]>
new  <	add rbx, rax>

1767:
old  <	sub eax, 69>
new  <	mov [rbp + 52], rbx>

1769:
old  < strftime$31:>
new  < localtime$25:>

1770:
old  <	; SignedDivide leapDays Â£temporary2858 4>
new  <	; PreCall 60 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1771:
old  <	xor edx, edx>
new  <>

1772:
old  <	idiv dword [int4$4#]>
new  < localtime$26:>

1773:
old  <	mov [rbp + 92], eax>
new  <	; Address Â£temporary2851 timeXXX>

1774:
old  <>
new  <	mov rsi, rbp>

1775:
old  < strftime$32:>
new  <	add rsi, 52>

1776:
old  <	; Dereference Â£temporary2860 -> tp tp 0>
new  <>

1777:
old  <	mov rsi, [rbp + 44]>
new  < localtime$27:>

1778:
old  <>
new  <	; Parameter pointer Â£temporary2851 84>

1779:
old  < strftime$33:>
new  <	mov [rbp + 84], rsi>

1780:
old  <	; BinarySubtract Â£temporary2861 Â£temporary2860 -> tp 70>
new  <>

1781:
old  <	mov eax, [rsi + 20]>
new  < localtime$28:>

1782:
old  <	sub eax, 70>
new  <	; Call gmtime 60 0>

1783:
old  <>
new  <	mov qword [rbp + 60], localtime$29>

1784:
old  < strftime$34:>
new  <	mov [rbp + 68], rbp>

1785:
old  <	; SignedMultiply Â£temporary2862 Â£temporary2861 365>
new  <	add rbp, 60>

1786:
old  <	xor edx, edx>
new  <	jmp gmtime>

1787:
old  <	imul dword [int4$365#]>
new  <>

1788:
old  <>
new  < localtime$29:>

1789:
old  < strftime$35:>
new  <	; PostCall 60>

1790:
old  <	; BinaryAdd Â£temporary2863 Â£temporary2862 leapDays>
new  <>

1791:
old  <	add eax, [rbp + 92]>
new  < localtime$30:>

1792:
old  <>
new  <	; GetReturnValue Â£temporary2852>

1793:
old  < strftime$36:>
new  <>

1794:
old  <	; Dereference Â£temporary2864 -> tp tp 0>
new  < localtime$31:>

1795:
old  <	mov rsi, [rbp + 44]>
new  <	; Return Â£temporary2852>

1796:
old  <>
new  <	mov rax, [rbp]>

1797:
old  < strftime$37:>
new  <	mov rdi, [rbp + 16]>

1798:
old  <	; BinaryAdd Â£temporary2865 Â£temporary2863 Â£temporary2864 -> tp>
new  <	mov rbp, [rbp + 8]>

1799:
old  <	add eax, [rsi + 28]>
new  <	jmp rax>

1801:
old  < strftime$38:>
new  < localtime$32:>

1802:
old  <	; IntegralToIntegral Â£temporary2866 Â£temporary2865>
new  <	; FunctionEnd localtime>

1803:
old  <	mov rbx, 4294967295>
new  <>

1804:
old  <	and rax, rbx>
new  <section .data>

1805:
old  <	cmp eax, 0>
new  <>

1806:
old  <	jge strftime$39>
new  <string_#:>

1807:
old  <	neg eax>
new  <	; Initializer String >

1808:
old  <	neg rax>
new  <	db 0>

1810:
old  < strftime$39:>
new  <section .data>

1811:
old  <	; Assign totalDays Â£temporary2866>
new  <>

1812:
old  <	mov [rbp + 96], rax>
new  <string_25d2D25d2D25d2025d3A25d3A25d#:>

1813:
old  <>
new  <	; Initializer String %d-%d-%d %d:%d:%d>

1814:
old  < strftime$40:>
new  <	db "%d-%d-%d %d:%d:%d", 0>

1815:
old  <	; PreCall 112 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1816:
old  <>
new  <section .data>

1817:
old  < strftime$41:>
new  <>

1818:
old  <	; Parameter pointer s 136>
new  <string_25d#:>

1819:
old  <	mov rax, [rbp + 24]>
new  <	; Initializer String %d>

1820:
old  <	mov [rbp + 136], rax>
new  <	db "%d", 0>

1822:
old  < strftime$42:>
new  <section .data>

1823:
old  <	; Parameter pointer "" 144>
new  <>

1824:
old  <	mov qword [rbp + 144], string_#>
new  <string_25s#:>

1825:
old  <>
new  <	; Initializer String %s>

1826:
old  < strftime$43:>
new  <	db "%s", 0>

1827:
old  <	; Call strcpy 112 0>
new  <>

1828:
old  <	mov qword [rbp + 112], strftime$44>
new  <section .data>

1829:
old  <	mov [rbp + 120], rbp>
new  <>

1830:
old  <	add rbp, 112>
new  <string_AM#:>

1831:
old  <	jmp strcpy>
new  <	; Initializer String AM>

1832:
old  <>
new  <	db "AM", 0>

1833:
old  < strftime$44:>
new  <>

1834:
old  <	; PostCall 112>
new  <section .data>

1836:
old  < strftime$45:>
new  <string_PM#:>

1837:
old  <	; Equal 48 shortDayList 0>
new  <	; Initializer String PM>

1838:
old  <	cmp qword [rbp + 60], 0>
new  <	db "PM", 0>

1839:
old  <	je strftime$48>
new  <>

1840:
old  <>
new  <section .data>

1841:
old  < strftime$46:>
new  <>

1842:
old  <	; Assign Â£temporary2869 shortDayList>
new  <string_25d3A25d3A25d#:>

1843:
old  <	mov rax, [rbp + 60]>
new  <	; Initializer String %d:%d:%d>

1844:
old  <>
new  <	db "%d:%d:%d", 0>

1845:
old  < strftime$47:>
new  <>

1846:
old  <	; Goto 49>
new  <section .data>

1847:
old  <	jmp strftime$49>
new  <>

1848:
old  <>
new  <string_25#:>

1849:
old  < strftime$48:>
new  <	; Initializer String %>

1850:
old  <	; Assign Â£temporary2869 g_defaultShortDayList>
new  <	db "%", 0>

1851:
old  <	mov rax, @4755$g_defaultShortDayList>
new  <>

1852:
old  <>
new  <section .data>

1853:
old  < strftime$49:>
new  <>

1854:
old  <	; Assign shortDayList Â£temporary2869>
new  <int4$12#:>

1855:
old  <	mov [rbp + 60], rax>
new  <	; Initializer SignedInt 12>

1856:
old  <>
new  <	dd 12>

1857:
old  < strftime$50:>
new  <>

1858:
old  <	; Equal 53 longDayList 0>
new  <section .text>

1859:
old  <	cmp qword [rbp + 76], 0>
new  <>

1860:
old  <	je strftime$53>
new  < strftime:>

1861:
old  <>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1862:
old  < strftime$51:>
new  <>

1863:
old  <	; Assign Â£temporary2871 longDayList>
new  < strftime$1:>

1864:
old  <	mov rax, [rbp + 76]>
new  <	; Call localeconv 52 0>

1865:
old  <>
new  <	mov qword [rbp + 52], strftime$2>

1866:
old  < strftime$52:>
new  <	mov [rbp + 60], rbp>

1867:
old  <	; Goto 54>
new  <	add rbp, 52>

1868:
old  <	jmp strftime$54>
new  <	jmp localeconv>

1870:
old  < strftime$53:>
new  < strftime$2:>

1871:
old  <	; Assign Â£temporary2871 g_defaultLongDayList>
new  <	; PostCall 52>

1872:
old  <	mov rax, @4756$g_defaultLongDayList>
new  <>

1873:
old  <>
new  < strftime$3:>

1874:
old  < strftime$54:>
new  <	; GetReturnValue Â£temporary2854>

1875:
old  <	; Assign longDayList Â£temporary2871>
new  <>

1876:
old  <	mov [rbp + 76], rax>
new  < strftime$4:>

1877:
old  <>
new  <	; Assign localeConvPtr Â£temporary2854>

1878:
old  < strftime$55:>
new  <	mov [rbp + 52], rbx>

1879:
old  <	; Equal 58 shortMonthList 0>
new  <>

1880:
old  <	cmp qword [rbp + 68], 0>
new  < strftime$5:>

1881:
old  <	je strftime$58>
new  <	; Equal 9 localeConvPtr 0>

1882:
old  <>
new  <	cmp qword [rbp + 52], 0>

1883:
old  < strftime$56:>
new  <	je strftime$9>

1884:
old  <	; Assign Â£temporary2873 shortMonthList>
new  <>

1885:
old  <	mov rax, [rbp + 68]>
new  < strftime$6:>

1886:
old  <>
new  <	; Dereference Â£temporary2856 -> localeConvPtr localeConvPtr 0>

1887:
old  < strftime$57:>
new  <	mov rsi, [rbp + 52]>

1888:
old  <	; Goto 59>
new  <>

1889:
old  <	jmp strftime$59>
new  < strftime$7:>

1890:
old  <>
new  <	; Assign Â£temporary2857 Â£temporary2856 -> localeConvPtr>

1891:
old  < strftime$58:>
new  <	mov rax, [rsi + 8]>

1892:
old  <	; Assign Â£temporary2873 g_defaultShortMonthList>
new  <>

1893:
old  <	mov rax, @4757$g_defaultShortMonthList>
new  < strftime$8:>

1894:
old  <>
new  <	; Goto 10>

1895:
old  < strftime$59:>
new  <	jmp strftime$10>

1896:
old  <	; Assign shortMonthList Â£temporary2873>
new  <>

1897:
old  <	mov [rbp + 68], rax>
new  < strftime$9:>

1898:
old  <>
new  <	; Assign Â£temporary2857 0>

1899:
old  < strftime$60:>
new  <	mov rax, 0>

1900:
old  <	; Equal 63 longMonthList 0>
new  <>

1901:
old  <	cmp qword [rbp + 84], 0>
new  < strftime$10:>

1902:
old  <	je strftime$63>
new  <	; Assign shortDayList Â£temporary2857>

1903:
old  <>
new  <	mov [rbp + 60], rax>

1904:
old  < strftime$61:>
new  <>

1905:
old  <	; Assign Â£temporary2875 longMonthList>
new  < strftime$11:>

1906:
old  <	mov rax, [rbp + 84]>
new  <	; Equal 15 localeConvPtr 0>

1907:
old  <>
new  <	cmp qword [rbp + 52], 0>

1908:
old  < strftime$62:>
new  <	je strftime$15>

1909:
old  <	; Goto 64>
new  <>

1910:
old  <	jmp strftime$64>
new  < strftime$12:>

1911:
old  <>
new  <	; Dereference Â£temporary2859 -> localeConvPtr localeConvPtr 0>

1912:
old  < strftime$63:>
new  <	mov rsi, [rbp + 52]>

1913:
old  <	; Assign Â£temporary2875 g_defaultLongMonthList>
new  <>

1914:
old  <	mov rax, @4758$g_defaultLongMonthList>
new  < strftime$13:>

1915:
old  <>
new  <	; Assign Â£temporary2860 Â£temporary2859 -> localeConvPtr>

1916:
old  < strftime$64:>
new  <	mov rax, [rsi + 24]>

1917:
old  <	; Assign longMonthList Â£temporary2875>
new  <>

1918:
old  <	mov [rbp + 84], rax>
new  < strftime$14:>

1919:
old  <>
new  <	; Goto 16>

1920:
old  < strftime$65:>
new  <	jmp strftime$16>

1921:
old  <	; SignedGreaterThanEqual 70 totalDays 3>
new  <>

1922:
old  <	cmp qword [rbp + 96], 3>
new  < strftime$15:>

1923:
old  <	jge strftime$70>
new  <	; Assign Â£temporary2860 0>

1924:
old  <>
new  <	mov rax, 0>

1925:
old  < strftime$66:>
new  <>

1926:
old  <	; BinaryAdd Â£temporary2877 totalDays 4>
new  < strftime$16:>

1927:
old  <	mov rax, [rbp + 96]>
new  <	; Assign shortMonthList Â£temporary2860>

1928:
old  <	add rax, 4>
new  <	mov [rbp + 68], rax>

1930:
old  < strftime$67:>
new  < strftime$17:>

1931:
old  <	; IntegralToIntegral Â£temporary2878 Â£temporary2877>
new  <	; Equal 21 localeConvPtr 0>

1932:
old  <	cmp rax, 0>
new  <	cmp qword [rbp + 52], 0>

1933:
old  <	jge strftime$68>
new  <	je strftime$21>

1934:
old  <	neg rax>
new  <>

1935:
old  <	neg eax>
new  < strftime$18:>

1936:
old  <>
new  <	; Dereference Â£temporary2862 -> localeConvPtr localeConvPtr 0>

1937:
old  < strftime$68:>
new  <	mov rsi, [rbp + 52]>

1938:
old  <	; Assign yearDaySunday Â£temporary2878>
new  <>

1939:
old  <	mov [rbp + 104], eax>
new  < strftime$19:>

1940:
old  <>
new  <	; Assign Â£temporary2863 Â£temporary2862 -> localeConvPtr>

1941:
old  < strftime$69:>
new  <	mov rax, [rsi + 16]>

1942:
old  <	; Goto 74>
new  <>

1943:
old  <	jmp strftime$74>
new  < strftime$20:>

1944:
old  <>
new  <	; Goto 22>

1945:
old  < strftime$70:>
new  <	jmp strftime$22>

1946:
old  <	; BinarySubtract Â£temporary2879 totalDays 3>
new  <>

1947:
old  <	mov rax, [rbp + 96]>
new  < strftime$21:>

1948:
old  <	sub rax, 3>
new  <	; Assign Â£temporary2863 0>

1949:
old  <>
new  <	mov rax, 0>

1950:
old  < strftime$71:>
new  <>

1951:
old  <	; SignedModulo Â£temporary2880 Â£temporary2879 7>
new  < strftime$22:>

1952:
old  <	xor rdx, rdx>
new  <	; Assign longDayList Â£temporary2863>

1953:
old  <	idiv qword [int8$7#]>
new  <	mov [rbp + 76], rax>

1955:
old  < strftime$72:>
new  < strftime$23:>

1956:
old  <	; IntegralToIntegral Â£temporary2881 Â£temporary2880>
new  <	; Equal 27 localeConvPtr 0>

1957:
old  <	cmp rdx, 0>
new  <	cmp qword [rbp + 52], 0>

1958:
old  <	jge strftime$73>
new  <	je strftime$27>

1959:
old  <	neg rdx>
new  <>

1960:
old  <	neg edx>
new  < strftime$24:>

1961:
old  <>
new  <	; Dereference Â£temporary2865 -> localeConvPtr localeConvPtr 0>

1962:
old  < strftime$73:>
new  <	mov rsi, [rbp + 52]>

1963:
old  <	; Assign yearDaySunday Â£temporary2881>
new  <>

1964:
old  <	mov [rbp + 104], edx>
new  < strftime$25:>

1965:
old  <>
new  <	; Assign Â£temporary2866 Â£temporary2865 -> localeConvPtr>

1966:
old  < strftime$74:>
new  <	mov rax, [rsi + 32]>

1967:
old  <	; SignedGreaterThanEqual 79 totalDays 4>
new  <>

1968:
old  <	cmp qword [rbp + 96], 4>
new  < strftime$26:>

1969:
old  <	jge strftime$79>
new  <	; Goto 28>

1970:
old  <>
new  <	jmp strftime$28>

1971:
old  < strftime$75:>
new  <>

1972:
old  <	; BinaryAdd Â£temporary2883 totalDays 3>
new  < strftime$27:>

1973:
old  <	mov rax, [rbp + 96]>
new  <	; Assign Â£temporary2866 0>

1974:
old  <	add rax, 3>
new  <	mov rax, 0>

1976:
old  < strftime$76:>
new  < strftime$28:>

1977:
old  <	; IntegralToIntegral Â£temporary2884 Â£temporary2883>
new  <	; Assign longMonthList Â£temporary2866>

1978:
old  <	cmp rax, 0>
new  <	mov [rbp + 84], rax>

1979:
old  <	jge strftime$77>
new  <>

1980:
old  <	neg rax>
new  < strftime$29:>

1981:
old  <	neg eax>
new  <	; Dereference Â£temporary2867 -> tp tp 0>

1982:
old  <>
new  <	mov rsi, [rbp + 44]>

1983:
old  < strftime$77:>
new  <>

1984:
old  <	; Assign yearDayMonday Â£temporary2884>
new  < strftime$30:>

1985:
old  <	mov [rbp + 108], eax>
new  <	; BinarySubtract Â£temporary2868 Â£temporary2867 -> tp 69>

1986:
old  <>
new  <	mov eax, [rsi + 20]>

1987:
old  < strftime$78:>
new  <	sub eax, 69>

1988:
old  <	; Goto 83>
new  <>

1989:
old  <	jmp strftime$83>
new  < strftime$31:>

1990:
old  <>
new  <	; SignedDivide leapDays Â£temporary2868 4>

1991:
old  < strftime$79:>
new  <	xor edx, edx>

1992:
old  <	; BinarySubtract Â£temporary2885 totalDays 4>
new  <	idiv dword [int4$4#]>

1993:
old  <	mov rax, [rbp + 96]>
new  <	mov [rbp + 92], eax>

1994:
old  <	sub rax, 4>
new  <>

1995:
old  <>
new  < strftime$32:>

1996:
old  < strftime$80:>
new  <	; Dereference Â£temporary2870 -> tp tp 0>

1997:
old  <	; SignedModulo Â£temporary2886 Â£temporary2885 7>
new  <	mov rsi, [rbp + 44]>

1998:
old  <	xor rdx, rdx>
new  <>

1999:
old  <	idiv qword [int8$7#]>
new  < strftime$33:>

2000:
old  <>
new  <	; BinarySubtract Â£temporary2871 Â£temporary2870 -> tp 70>

2001:
old  < strftime$81:>
new  <	mov eax, [rsi + 20]>

2002:
old  <	; IntegralToIntegral Â£temporary2887 Â£temporary2886>
new  <	sub eax, 70>

2003:
old  <	cmp rdx, 0>
new  <>

2004:
old  <	jge strftime$82>
new  < strftime$34:>

2005:
old  <	neg rdx>
new  <	; SignedMultiply Â£temporary2872 Â£temporary2871 365>

2006:
old  <	neg edx>
new  <	xor edx, edx>

2007:
old  <>
new  <	imul dword [int4$365#]>

2008:
old  < strftime$82:>
new  <>

2009:
old  <	; Assign yearDayMonday Â£temporary2887>
new  < strftime$35:>

2010:
old  <	mov [rbp + 108], edx>
new  <	; BinaryAdd Â£temporary2873 Â£temporary2872 leapDays>

2011:
old  <>
new  <	add eax, [rbp + 92]>

2012:
old  < strftime$83:>
new  <>

2013:
old  <	; Assign index 0>
new  < strftime$36:>

2014:
old  <	mov dword [rbp + 112], 0>
new  <	; Dereference Â£temporary2874 -> tp tp 0>

2015:
old  <>
new  <	mov rsi, [rbp + 44]>

2016:
old  < strftime$84:>
new  <>

2017:
old  <	; IntegralToIntegral Â£temporary2889 index>
new  < strftime$37:>

2018:
old  <	mov eax, [rbp + 112]>
new  <	; BinaryAdd Â£temporary2875 Â£temporary2873 Â£temporary2874 -> tp>

2019:
old  <	mov rbx, 4294967295>
new  <	add eax, [rsi + 28]>

2020:
old  <	and rax, rbx>
new  <>

2021:
old  <>
new  < strftime$38:>

2022:
old  < strftime$85:>
new  <	; IntegralToIntegral Â£temporary2876 Â£temporary2875>

2023:
old  <	; BinaryAdd Â£temporary2891 fmt Â£temporary2889>
new  <	mov rbx, 4294967295>

2024:
old  <	mov rsi, [rbp + 36]>
new  <	and rax, rbx>

2025:
old  <	add rsi, rax>
new  <	cmp eax, 0>

2026:
old  <>
new  <	jge strftime$39>

2027:
old  < strftime$86:>
new  <	neg eax>

2028:
old  <	; Dereference Â£temporary2888 -> Â£temporary2891 Â£temporary2891 0>
new  <	neg rax>

2030:
old  < strftime$87:>
new  < strftime$39:>

2031:
old  <	; Equal 358 Â£temporary2888 -> Â£temporary2891 0>
new  <	; Assign totalDays Â£temporary2876>

2032:
old  <	cmp byte [rsi], 0>
new  <	mov [rbp + 96], rax>

2033:
old  <	je strftime$358>
new  <>

2034:
old  <>
new  < strftime$40:>

2035:
old  < strftime$88:>
new  <	; PreCall 112 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2036:
old  <	; IntegralToIntegral Â£temporary2895 index>
new  <>

2037:
old  <	mov eax, [rbp + 112]>
new  < strftime$41:>

2038:
old  <	mov rbx, 4294967295>
new  <	; Parameter pointer s 136>

2039:
old  <	and rax, rbx>
new  <	mov rax, [rbp + 24]>

2040:
old  <>
new  <	mov [rbp + 136], rax>

2041:
old  < strftime$89:>
new  <>

2042:
old  <	; BinaryAdd Â£temporary2897 fmt Â£temporary2895>
new  < strftime$42:>

2043:
old  <	mov rsi, [rbp + 36]>
new  <	; Parameter pointer "" 144>

2044:
old  <	add rsi, rax>
new  <	mov qword [rbp + 144], string_#>

2046:
old  < strftime$90:>
new  < strftime$43:>

2047:
old  <	; Dereference Â£temporary2894 -> Â£temporary2897 Â£temporary2897 0>
new  <	; Call strcpy 112 0>

2048:
old  <>
new  <	mov qword [rbp + 112], strftime$44>

2049:
old  < strftime$91:>
new  <	mov [rbp + 120], rbp>

2050:
old  <	; NotEqual 332 Â£temporary2894 -> Â£temporary2897 37>
new  <	add rbp, 112>

2051:
old  <	cmp byte [rsi], 37>
new  <	jmp strcpy>

2052:
old  <	jne strftime$332>
new  <>

2053:
old  <>
new  < strftime$44:>

2054:
old  < strftime$92:>
new  <	; PostCall 112>

2055:
old  <	; BinaryAdd Â£temporary2899 index 1>
new  <>

2056:
old  <	mov eax, [rbp + 112]>
new  < strftime$45:>

2057:
old  <	inc eax>
new  <	; Equal 48 shortDayList 0>

2058:
old  <>
new  <	cmp qword [rbp + 60], 0>

2059:
old  < strftime$93:>
new  <	je strftime$48>

2060:
old  <	; IntegralToIntegral Â£temporary2901 Â£temporary2899>
new  <>

2061:
old  <	mov rbx, 4294967295>
new  < strftime$46:>

2062:
old  <	and rax, rbx>
new  <	; Assign Â£temporary2879 shortDayList>

2063:
old  <>
new  <	mov rax, [rbp + 60]>

2064:
old  < strftime$94:>
new  <>

2065:
old  <	; BinaryAdd Â£temporary2903 fmt Â£temporary2901>
new  < strftime$47:>

2066:
old  <	mov rsi, [rbp + 36]>
new  <	; Goto 49>

2067:
old  <	add rsi, rax>
new  <	jmp strftime$49>

2069:
old  < strftime$95:>
new  < strftime$48:>

2070:
old  <	; Dereference Â£temporary2900 -> Â£temporary2903 Â£temporary2903 0>
new  <	; Assign Â£temporary2879 g_defaultShortDayList>

2071:
old  <>
new  <	mov rax, @4765$g_defaultShortDayList>

2072:
old  < strftime$96:>
new  <>

2073:
old  <	; Case 120 Â£temporary2900 -> Â£temporary2903 97>
new  < strftime$49:>

2074:
old  <	mov al, [rsi]>
new  <	; Assign shortDayList Â£temporary2879>

2075:
old  <	cmp al, 97>
new  <	mov [rbp + 60], rax>

2076:
old  <	je strftime$120>
new  <>

2077:
old  <>
new  < strftime$50:>

2078:
old  < strftime$97:>
new  <	; Equal 53 longDayList 0>

2079:
old  <	; Case 131 Â£temporary2900 -> Â£temporary2903 65>
new  <	cmp qword [rbp + 76], 0>

2080:
old  <	cmp al, 65>
new  <	je strftime$53>

2081:
old  <	je strftime$131>
new  <>

2082:
old  <>
new  < strftime$51:>

2083:
old  < strftime$98:>
new  <	; Assign Â£temporary2881 longDayList>

2084:
old  <	; Case 142 Â£temporary2900 -> Â£temporary2903 98>
new  <	mov rax, [rbp + 76]>

2085:
old  <	cmp al, 98>
new  <>

2086:
old  <	je strftime$142>
new  < strftime$52:>

2087:
old  <>
new  <	; Goto 54>

2088:
old  < strftime$99:>
new  <	jmp strftime$54>

2089:
old  <	; Case 153 Â£temporary2900 -> Â£temporary2903 66>
new  <>

2090:
old  <	cmp al, 66>
new  < strftime$53:>

2091:
old  <	je strftime$153>
new  <	; Assign Â£temporary2881 g_defaultLongDayList>

2092:
old  <>
new  <	mov rax, @4766$g_defaultLongDayList>

2093:
old  < strftime$100:>
new  <>

2094:
old  <	; Case 164 Â£temporary2900 -> Â£temporary2903 99>
new  < strftime$54:>

2095:
old  <	cmp al, 99>
new  <	; Assign longDayList Â£temporary2881>

2096:
old  <	je strftime$164>
new  <	mov [rbp + 76], rax>

2098:
old  < strftime$101:>
new  < strftime$55:>

2099:
old  <	; Case 184 Â£temporary2900 -> Â£temporary2903 100>
new  <	; Equal 58 shortMonthList 0>

2100:
old  <	cmp al, 100>
new  <	cmp qword [rbp + 68], 0>

2101:
old  <	je strftime$184>
new  <	je strftime$58>

2103:
old  < strftime$102:>
new  < strftime$56:>

2104:
old  <	; Case 192 Â£temporary2900 -> Â£temporary2903 72>
new  <	; Assign Â£temporary2883 shortMonthList>

2105:
old  <	cmp al, 72>
new  <	mov rax, [rbp + 68]>

2106:
old  <	je strftime$192>
new  <>

2107:
old  <>
new  < strftime$57:>

2108:
old  < strftime$103:>
new  <	; Goto 59>

2109:
old  <	; Case 200 Â£temporary2900 -> Â£temporary2903 73>
new  <	jmp strftime$59>

2110:
old  <	cmp al, 73>
new  <>

2111:
old  <	je strftime$200>
new  < strftime$58:>

2112:
old  <>
new  <	; Assign Â£temporary2883 g_defaultShortMonthList>

2113:
old  < strftime$104:>
new  <	mov rax, @4767$g_defaultShortMonthList>

2114:
old  <	; Case 209 Â£temporary2900 -> Â£temporary2903 106>
new  <>

2115:
old  <	cmp al, 106>
new  < strftime$59:>

2116:
old  <	je strftime$209>
new  <	; Assign shortMonthList Â£temporary2883>

2117:
old  <>
new  <	mov [rbp + 68], rax>

2118:
old  < strftime$105:>
new  <>

2119:
old  <	; Case 217 Â£temporary2900 -> Â£temporary2903 109>
new  < strftime$60:>

2120:
old  <	cmp al, 109>
new  <	; Equal 63 longMonthList 0>

2121:
old  <	je strftime$217>
new  <	cmp qword [rbp + 84], 0>

2122:
old  <>
new  <	je strftime$63>

2123:
old  < strftime$106:>
new  <>

2124:
old  <	; Case 226 Â£temporary2900 -> Â£temporary2903 77>
new  < strftime$61:>

2125:
old  <	cmp al, 77>
new  <	; Assign Â£temporary2885 longMonthList>

2126:
old  <	je strftime$226>
new  <	mov rax, [rbp + 84]>

2128:
old  < strftime$107:>
new  < strftime$62:>

2129:
old  <	; Case 234 Â£temporary2900 -> Â£temporary2903 112>
new  <	; Goto 64>

2130:
old  <	cmp al, 112>
new  <	jmp strftime$64>

2131:
old  <	je strftime$234>
new  <>

2132:
old  <>
new  < strftime$63:>

2133:
old  < strftime$108:>
new  <	; Assign Â£temporary2885 g_defaultLongMonthList>

2134:
old  <	; Case 246 Â£temporary2900 -> Â£temporary2903 83>
new  <	mov rax, @4768$g_defaultLongMonthList>

2135:
old  <	cmp al, 83>
new  <>

2136:
old  <	je strftime$246>
new  < strftime$64:>

2137:
old  <>
new  <	; Assign longMonthList Â£temporary2885>

2138:
old  < strftime$109:>
new  <	mov [rbp + 84], rax>

2139:
old  <	; Case 254 Â£temporary2900 -> Â£temporary2903 85>
new  <>

2140:
old  <	cmp al, 85>
new  < strftime$65:>

2141:
old  <	je strftime$254>
new  <	; SignedGreaterThanEqual 70 totalDays 3>

2142:
old  <>
new  <	cmp qword [rbp + 96], 3>

2143:
old  < strftime$110:>
new  <	jge strftime$70>

2144:
old  <	; Case 261 Â£temporary2900 -> Â£temporary2903 119>
new  <>

2145:
old  <	cmp al, 119>
new  < strftime$66:>

2146:
old  <	je strftime$261>
new  <	; BinaryAdd Â£temporary2887 totalDays 4>

2147:
old  <>
new  <	mov rax, [rbp + 96]>

2148:
old  < strftime$111:>
new  <	add rax, 4>

2149:
old  <	; Case 269 Â£temporary2900 -> Â£temporary2903 87>
new  <>

2150:
old  <	cmp al, 87>
new  < strftime$67:>

2151:
old  <	je strftime$269>
new  <	; IntegralToIntegral Â£temporary2888 Â£temporary2887>

2152:
old  <>
new  <	cmp rax, 0>

2153:
old  < strftime$112:>
new  <	jge strftime$68>

2154:
old  <	; Case 276 Â£temporary2900 -> Â£temporary2903 120>
new  <	neg rax>

2155:
old  <	cmp al, 120>
new  <	neg eax>

2156:
old  <	je strftime$276>
new  <>

2157:
old  <>
new  < strftime$68:>

2158:
old  < strftime$113:>
new  <	; Assign yearDaySunday Â£temporary2888>

2159:
old  <	; Case 290 Â£temporary2900 -> Â£temporary2903 88>
new  <	mov [rbp + 104], eax>

2160:
old  <	cmp al, 88>
new  <>

2161:
old  <	je strftime$290>
new  < strftime$69:>

2162:
old  <>
new  <	; Goto 74>

2163:
old  < strftime$114:>
new  <	jmp strftime$74>

2164:
old  <	; Case 302 Â£temporary2900 -> Â£temporary2903 121>
new  <>

2165:
old  <	cmp al, 121>
new  < strftime$70:>

2166:
old  <	je strftime$302>
new  <	; BinarySubtract Â£temporary2889 totalDays 3>

2167:
old  <>
new  <	mov rax, [rbp + 96]>

2168:
old  < strftime$115:>
new  <	sub rax, 3>

2169:
old  <	; Case 311 Â£temporary2900 -> Â£temporary2903 89>
new  <>

2170:
old  <	cmp al, 89>
new  < strftime$71:>

2171:
old  <	je strftime$311>
new  <	; SignedModulo Â£temporary2890 Â£temporary2889 7>

2172:
old  <>
new  <	xor rdx, rdx>

2173:
old  < strftime$116:>
new  <	idiv qword [int8$7#]>

2174:
old  <	; Case 320 Â£temporary2900 -> Â£temporary2903 90>
new  <>

2175:
old  <	cmp al, 90>
new  < strftime$72:>

2176:
old  <	je strftime$320>
new  <	; IntegralToIntegral Â£temporary2891 Â£temporary2890>

2177:
old  <>
new  <	cmp rdx, 0>

2178:
old  < strftime$117:>
new  <	jge strftime$73>

2179:
old  <	; Case 326 Â£temporary2900 -> Â£temporary2903 37>
new  <	neg rdx>

2180:
old  <	cmp al, 37>
new  <	neg edx>

2181:
old  <	je strftime$326>
new  <>

2182:
old  <>
new  < strftime$73:>

2183:
old  < strftime$118:>
new  <	; Assign yearDaySunday Â£temporary2891>

2184:
old  <	; CaseEnd Â£temporary2900 -> Â£temporary2903>
new  <	mov [rbp + 104], edx>

2186:
old  < strftime$119:>
new  < strftime$74:>

2187:
old  <	; Goto 339>
new  <	; SignedGreaterThanEqual 79 totalDays 4>

2188:
old  <	jmp strftime$339>
new  <	cmp qword [rbp + 96], 4>

2189:
old  <>
new  <	jge strftime$79>

2190:
old  < strftime$120:>
new  <>

2191:
old  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < strftime$75:>

2192:
old  <>
new  <	; BinaryAdd Â£temporary2893 totalDays 3>

2193:
old  < strftime$121:>
new  <	mov rax, [rbp + 96]>

2194:
old  <	; Parameter pointer add 160>
new  <	add rax, 3>

2195:
old  <	mov [rbp + 160], rbp>
new  <>

2196:
old  <	add qword [rbp + 160], 116>
new  < strftime$76:>

2197:
old  <>
new  <	; IntegralToIntegral Â£temporary2894 Â£temporary2893>

2198:
old  < strftime$122:>
new  <	cmp rax, 0>

2199:
old  <	; Dereference Â£temporary2904 -> tp tp 0>
new  <	jge strftime$77>

2200:
old  <	mov rsi, [rbp + 44]>
new  <	neg rax>

2201:
old  <>
new  <	neg eax>

2202:
old  < strftime$123:>
new  <>

2203:
old  <	; IntegralToIntegral Â£temporary2906 Â£temporary2904 -> tp>
new  < strftime$77:>

2204:
old  <	mov eax, [rsi + 24]>
new  <	; Assign yearDayMonday Â£temporary2894>

2205:
old  <	mov rbx, 4294967295>
new  <	mov [rbp + 108], eax>

2206:
old  <	and rax, rbx>
new  <>

2207:
old  <>
new  < strftime$78:>

2208:
old  < strftime$124:>
new  <	; Goto 83>

2209:
old  <	; UnsignedMultiply Â£temporary2907 Â£temporary2906 8>
new  <	jmp strftime$83>

2210:
old  <	xor rdx, rdx>
new  <>

2211:
old  <	mul qword [int8$8#]>
new  < strftime$79:>

2212:
old  <>
new  <	; BinarySubtract Â£temporary2895 totalDays 4>

2213:
old  < strftime$125:>
new  <	mov rax, [rbp + 96]>

2214:
old  <	; BinaryAdd Â£temporary2908 shortDayList Â£temporary2907>
new  <	sub rax, 4>

2215:
old  <	mov rsi, [rbp + 60]>
new  <>

2216:
old  <	add rsi, rax>
new  < strftime$80:>

2217:
old  <>
new  <	; SignedModulo Â£temporary2896 Â£temporary2895 7>

2218:
old  < strftime$126:>
new  <	xor rdx, rdx>

2219:
old  <	; Dereference Â£temporary2905 -> Â£temporary2908 Â£temporary2908 0>
new  <	idiv qword [int8$7#]>

2221:
old  < strftime$127:>
new  < strftime$81:>

2222:
old  <	; Parameter pointer Â£temporary2905 -> Â£temporary2908 168>
new  <	; IntegralToIntegral Â£temporary2897 Â£temporary2896>

2223:
old  <	mov rax, [rsi]>
new  <	cmp rdx, 0>

2224:
old  <	mov [rbp + 168], rax>
new  <	jge strftime$82>

2225:
old  <>
new  <	neg rdx>

2226:
old  < strftime$128:>
new  <	neg edx>

2227:
old  <	; Call strcpy 136 0>
new  <>

2228:
old  <	mov qword [rbp + 136], strftime$129>
new  < strftime$82:>

2229:
old  <	mov [rbp + 144], rbp>
new  <	; Assign yearDayMonday Â£temporary2897>

2230:
old  <	add rbp, 136>
new  <	mov [rbp + 108], edx>

2231:
old  <	jmp strcpy>
new  <>

2232:
old  <>
new  < strftime$83:>

2233:
old  < strftime$129:>
new  <	; Assign index 0>

2234:
old  <	; PostCall 136>
new  <	mov dword [rbp + 112], 0>

2236:
old  < strftime$130:>
new  < strftime$84:>

2237:
old  <	; Goto 339>
new  <	; IntegralToIntegral Â£temporary2899 index>

2238:
old  <	jmp strftime$339>
new  <	mov eax, [rbp + 112]>

2239:
old  <>
new  <	mov rbx, 4294967295>

2240:
old  < strftime$131:>
new  <	and rax, rbx>

2241:
old  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

2242:
old  <>
new  < strftime$85:>

2243:
old  < strftime$132:>
new  <	; BinaryAdd Â£temporary2901 fmt Â£temporary2899>

2244:
old  <	; Parameter pointer add 160>
new  <	mov rsi, [rbp + 36]>

2245:
old  <	mov [rbp + 160], rbp>
new  <	add rsi, rax>

2246:
old  <	add qword [rbp + 160], 116>
new  <>

2247:
old  <>
new  < strftime$86:>

2248:
old  < strftime$133:>
new  <	; Dereference Â£temporary2898 -> Â£temporary2901 Â£temporary2901 0>

2249:
old  <	; Dereference Â£temporary2910 -> tp tp 0>
new  <>

2250:
old  <	mov rsi, [rbp + 44]>
new  < strftime$87:>

2251:
old  <>
new  <	; Equal 364 Â£temporary2898 -> Â£temporary2901 0>

2252:
old  < strftime$134:>
new  <	cmp byte [rsi], 0>

2253:
old  <	; IntegralToIntegral Â£temporary2912 Â£temporary2910 -> tp>
new  <	je strftime$364>

2254:
old  <	mov eax, [rsi + 24]>
new  <>

2255:
old  <	mov rbx, 4294967295>
new  < strftime$88:>

2256:
old  <	and rax, rbx>
new  <	; IntegralToIntegral Â£temporary2905 index>

2257:
old  <>
new  <	mov eax, [rbp + 112]>

2258:
old  < strftime$135:>
new  <	mov rbx, 4294967295>

2259:
old  <	; UnsignedMultiply Â£temporary2913 Â£temporary2912 8>
new  <	and rax, rbx>

2260:
old  <	xor rdx, rdx>
new  <>

2261:
old  <	mul qword [int8$8#]>
new  < strftime$89:>

2262:
old  <>
new  <	; BinaryAdd Â£temporary2907 fmt Â£temporary2905>

2263:
old  < strftime$136:>
new  <	mov rsi, [rbp + 36]>

2264:
old  <	; BinaryAdd Â£temporary2914 longDayList Â£temporary2913>
new  <	add rsi, rax>

2265:
old  <	mov rsi, [rbp + 76]>
new  <>

2266:
old  <	add rsi, rax>
new  < strftime$90:>

2267:
old  <>
new  <	; Dereference Â£temporary2904 -> Â£temporary2907 Â£temporary2907 0>

2268:
old  < strftime$137:>
new  <>

2269:
old  <	; Dereference Â£temporary2911 -> Â£temporary2914 Â£temporary2914 0>
new  < strftime$91:>

2270:
old  <>
new  <	; NotEqual 336 Â£temporary2904 -> Â£temporary2907 37>

2271:
old  < strftime$138:>
new  <	cmp byte [rsi], 37>

2272:
old  <	; Parameter pointer Â£temporary2911 -> Â£temporary2914 168>
new  <	jne strftime$336>

2273:
old  <	mov rax, [rsi]>
new  <>

2274:
old  <	mov [rbp + 168], rax>
new  < strftime$92:>

2275:
old  <>
new  <	; BinaryAdd Â£temporary2909 index 1>

2276:
old  < strftime$139:>
new  <	mov eax, [rbp + 112]>

2277:
old  <	; Call strcpy 136 0>
new  <	inc eax>

2278:
old  <	mov qword [rbp + 136], strftime$140>
new  <>

2279:
old  <	mov [rbp + 144], rbp>
new  < strftime$93:>

2280:
old  <	add rbp, 136>
new  <	; IntegralToIntegral Â£temporary2911 Â£temporary2909>

2281:
old  <	jmp strcpy>
new  <	mov rbx, 4294967295>

2282:
old  <>
new  <	and rax, rbx>

2283:
old  < strftime$140:>
new  <>

2284:
old  <	; PostCall 136>
new  < strftime$94:>

2285:
old  <>
new  <	; BinaryAdd Â£temporary2913 fmt Â£temporary2911>

2286:
old  < strftime$141:>
new  <	mov rsi, [rbp + 36]>

2287:
old  <	; Goto 339>
new  <	add rsi, rax>

2288:
old  <	jmp strftime$339>
new  <>

2289:
old  <>
new  < strftime$95:>

2290:
old  < strftime$142:>
new  <	; Dereference Â£temporary2910 -> Â£temporary2913 Â£temporary2913 0>

2291:
old  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

2292:
old  <>
new  < strftime$96:>

2293:
old  < strftime$143:>
new  <	; Case 120 Â£temporary2910 -> Â£temporary2913 97>

2294:
old  <	; Parameter pointer add 160>
new  <	mov al, [rsi]>

2295:
old  <	mov [rbp + 160], rbp>
new  <	cmp al, 97>

2296:
old  <	add qword [rbp + 160], 116>
new  <	je strftime$120>

2298:
old  < strftime$144:>
new  < strftime$97:>

2299:
old  <	; Dereference Â£temporary2916 -> tp tp 0>
new  <	; Case 131 Â£temporary2910 -> Â£temporary2913 65>

2300:
old  <	mov rsi, [rbp + 44]>
new  <	cmp al, 65>

2301:
old  <>
new  <	je strftime$131>

2302:
old  < strftime$145:>
new  <>

2303:
old  <	; IntegralToIntegral Â£temporary2918 Â£temporary2916 -> tp>
new  < strftime$98:>

2304:
old  <	mov eax, [rsi + 16]>
new  <	; Case 142 Â£temporary2910 -> Â£temporary2913 98>

2305:
old  <	mov rbx, 4294967295>
new  <	cmp al, 98>

2306:
old  <	and rax, rbx>
new  <	je strftime$142>

2308:
old  < strftime$146:>
new  < strftime$99:>

2309:
old  <	; UnsignedMultiply Â£temporary2919 Â£temporary2918 8>
new  <	; Case 153 Â£temporary2910 -> Â£temporary2913 66>

2310:
old  <	xor rdx, rdx>
new  <	cmp al, 66>

2311:
old  <	mul qword [int8$8#]>
new  <	je strftime$153>

2313:
old  < strftime$147:>
new  < strftime$100:>

2314:
old  <	; BinaryAdd Â£temporary2920 shortMonthList Â£temporary2919>
new  <	; Case 164 Â£temporary2910 -> Â£temporary2913 99>

2315:
old  <	mov rsi, [rbp + 68]>
new  <	cmp al, 99>

2316:
old  <	add rsi, rax>
new  <	je strftime$164>

2318:
old  < strftime$148:>
new  < strftime$101:>

2319:
old  <	; Dereference Â£temporary2917 -> Â£temporary2920 Â£temporary2920 0>
new  <	; Case 184 Â£temporary2910 -> Â£temporary2913 100>

2320:
old  <>
new  <	cmp al, 100>

2321:
old  < strftime$149:>
new  <	je strftime$184>

2322:
old  <	; Parameter pointer Â£temporary2917 -> Â£temporary2920 168>
new  <>

2323:
old  <	mov rax, [rsi]>
new  < strftime$102:>

2324:
old  <	mov [rbp + 168], rax>
new  <	; Case 192 Â£temporary2910 -> Â£temporary2913 72>

2325:
old  <>
new  <	cmp al, 72>

2326:
old  < strftime$150:>
new  <	je strftime$192>

2327:
old  <	; Call strcpy 136 0>
new  <>

2328:
old  <	mov qword [rbp + 136], strftime$151>
new  < strftime$103:>

2329:
old  <	mov [rbp + 144], rbp>
new  <	; Case 200 Â£temporary2910 -> Â£temporary2913 73>

2330:
old  <	add rbp, 136>
new  <	cmp al, 73>

2331:
old  <	jmp strcpy>
new  <	je strftime$200>

2333:
old  < strftime$151:>
new  < strftime$104:>

2334:
old  <	; PostCall 136>
new  <	; Case 209 Â£temporary2910 -> Â£temporary2913 106>

2335:
old  <>
new  <	cmp al, 106>

2336:
old  < strftime$152:>
new  <	je strftime$209>

2337:
old  <	; Goto 339>
new  <>

2338:
old  <	jmp strftime$339>
new  < strftime$105:>

2339:
old  <>
new  <	; Case 217 Â£temporary2910 -> Â£temporary2913 109>

2340:
old  < strftime$153:>
new  <	cmp al, 109>

2341:
old  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	je strftime$217>

2343:
old  < strftime$154:>
new  < strftime$106:>

2344:
old  <	; Parameter pointer add 160>
new  <	; Case 226 Â£temporary2910 -> Â£temporary2913 77>

2345:
old  <	mov [rbp + 160], rbp>
new  <	cmp al, 77>

2346:
old  <	add qword [rbp + 160], 116>
new  <	je strftime$226>

2348:
old  < strftime$155:>
new  < strftime$107:>

2349:
old  <	; Dereference Â£temporary2922 -> tp tp 0>
new  <	; Case 234 Â£temporary2910 -> Â£temporary2913 112>

2350:
old  <	mov rsi, [rbp + 44]>
new  <	cmp al, 112>

2351:
old  <>
new  <	je strftime$234>

2352:
old  < strftime$156:>
new  <>

2353:
old  <	; IntegralToIntegral Â£temporary2924 Â£temporary2922 -> tp>
new  < strftime$108:>

2354:
old  <	mov eax, [rsi + 16]>
new  <	; Case 246 Â£temporary2910 -> Â£temporary2913 83>

2355:
old  <	mov rbx, 4294967295>
new  <	cmp al, 83>

2356:
old  <	and rax, rbx>
new  <	je strftime$246>

2358:
old  < strftime$157:>
new  < strftime$109:>

2359:
old  <	; UnsignedMultiply Â£temporary2925 Â£temporary2924 8>
new  <	; Case 254 Â£temporary2910 -> Â£temporary2913 85>

2360:
old  <	xor rdx, rdx>
new  <	cmp al, 85>

2361:
old  <	mul qword [int8$8#]>
new  <	je strftime$254>

2363:
old  < strftime$158:>
new  < strftime$110:>

2364:
old  <	; BinaryAdd Â£temporary2926 longMonthList Â£temporary2925>
new  <	; Case 261 Â£temporary2910 -> Â£temporary2913 119>

2365:
old  <	mov rsi, [rbp + 84]>
new  <	cmp al, 119>

2366:
old  <	add rsi, rax>
new  <	je strftime$261>

2368:
old  < strftime$159:>
new  < strftime$111:>

2369:
old  <	; Dereference Â£temporary2923 -> Â£temporary2926 Â£temporary2926 0>
new  <	; Case 269 Â£temporary2910 -> Â£temporary2913 87>

2370:
old  <>
new  <	cmp al, 87>

2371:
old  < strftime$160:>
new  <	je strftime$269>

2372:
old  <	; Parameter pointer Â£temporary2923 -> Â£temporary2926 168>
new  <>

2373:
old  <	mov rax, [rsi]>
new  < strftime$112:>

2374:
old  <	mov [rbp + 168], rax>
new  <	; Case 276 Â£temporary2910 -> Â£temporary2913 120>

2375:
old  <>
new  <	cmp al, 120>

2376:
old  < strftime$161:>
new  <	je strftime$276>

2377:
old  <	; Call strcpy 136 0>
new  <>

2378:
old  <	mov qword [rbp + 136], strftime$162>
new  < strftime$113:>

2379:
old  <	mov [rbp + 144], rbp>
new  <	; Case 288 Â£temporary2910 -> Â£temporary2913 88>

2380:
old  <	add rbp, 136>
new  <	cmp al, 88>

2381:
old  <	jmp strcpy>
new  <	je strftime$288>

2383:
old  < strftime$162:>
new  < strftime$114:>

2384:
old  <	; PostCall 136>
new  <	; Case 300 Â£temporary2910 -> Â£temporary2913 121>

2385:
old  <>
new  <	cmp al, 121>

2386:
old  < strftime$163:>
new  <	je strftime$300>

2387:
old  <	; Goto 339>
new  <>

2388:
old  <	jmp strftime$339>
new  < strftime$115:>

2389:
old  <>
new  <	; Case 309 Â£temporary2910 -> Â£temporary2913 89>

2390:
old  < strftime$164:>
new  <	cmp al, 89>

2391:
old  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	je strftime$309>

2393:
old  < strftime$165:>
new  < strftime$116:>

2394:
old  <	; Parameter pointer add 160>
new  <	; Case 318 Â£temporary2910 -> Â£temporary2913 90>

2395:
old  <	mov [rbp + 160], rbp>
new  <	cmp al, 90>

2396:
old  <	add qword [rbp + 160], 116>
new  <	je strftime$318>

2398:
old  < strftime$166:>
new  < strftime$117:>

2399:
old  <	; Parameter pointer "%04d-%02d-%02d %02d:%02d:%02d" 168>
new  <	; Case 324 Â£temporary2910 -> Â£temporary2913 37>

2400:
old  <	mov qword [rbp + 168], string_2504d2D2502d2D2502d202502d3A2502d3A2502d#>
new  <	cmp al, 37>

2401:
old  <>
new  <	je strftime$324>

2402:
old  < strftime$167:>
new  <>

2403:
old  <	; Dereference Â£temporary2928 -> tp tp 0>
new  < strftime$118:>

2404:
old  <	mov rsi, [rbp + 44]>
new  <	; CaseEnd Â£temporary2910 -> Â£temporary2913>

2406:
old  < strftime$168:>
new  < strftime$119:>

2407:
old  <	; BinaryAdd Â£temporary2929 Â£temporary2928 -> tp 1900>
new  <	; Goto 329>

2408:
old  <	mov eax, [rsi + 20]>
new  <	jmp strftime$329>

2409:
old  <	add eax, 1900>
new  <>

2410:
old  <>
new  < strftime$120:>

2411:
old  < strftime$169:>
new  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2412:
old  <	; Parameter signedint Â£temporary2929 176>
new  <>

2413:
old  <	mov [rbp + 176], eax>
new  < strftime$121:>

2414:
old  <>
new  <	; Parameter pointer add 160>

2415:
old  < strftime$170:>
new  <	mov [rbp + 160], rbp>

2416:
old  <	; Dereference Â£temporary2930 -> tp tp 0>
new  <	add qword [rbp + 160], 116>

2417:
old  <	mov rsi, [rbp + 44]>
new  <>

2418:
old  <>
new  < strftime$122:>

2419:
old  < strftime$171:>
new  <	; Dereference Â£temporary2914 -> tp tp 0>

2420:
old  <	; BinaryAdd Â£temporary2931 Â£temporary2930 -> tp 1>
new  <	mov rsi, [rbp + 44]>

2421:
old  <	mov eax, [rsi + 16]>
new  <>

2422:
old  <	inc eax>
new  < strftime$123:>

2423:
old  <>
new  <	; IntegralToIntegral Â£temporary2916 Â£temporary2914 -> tp>

2424:
old  < strftime$172:>
new  <	mov eax, [rsi + 24]>

2425:
old  <	; Parameter signedint Â£temporary2931 180>
new  <	mov rbx, 4294967295>

2426:
old  <	mov [rbp + 180], eax>
new  <	and rax, rbx>

2428:
old  < strftime$173:>
new  < strftime$124:>

2429:
old  <	; Dereference Â£temporary2932 -> tp tp 0>
new  <	; UnsignedMultiply Â£temporary2917 Â£temporary2916 8>

2430:
old  <	mov rsi, [rbp + 44]>
new  <	xor rdx, rdx>

2431:
old  <>
new  <	mul qword [int8$8#]>

2432:
old  < strftime$174:>
new  <>

2433:
old  <	; Parameter signedint Â£temporary2932 -> tp 184>
new  < strftime$125:>

2434:
old  <	mov eax, [rsi + 12]>
new  <	; BinaryAdd Â£temporary2918 shortDayList Â£temporary2917>

2435:
old  <	mov [rbp + 184], eax>
new  <	mov rsi, [rbp + 60]>

2436:
old  <>
new  <	add rsi, rax>

2437:
old  < strftime$175:>
new  <>

2438:
old  <	; Dereference Â£temporary2933 -> tp tp 0>
new  < strftime$126:>

2439:
old  <	mov rsi, [rbp + 44]>
new  <	; Dereference Â£temporary2915 -> Â£temporary2918 Â£temporary2918 0>

2441:
old  < strftime$176:>
new  < strftime$127:>

2442:
old  <	; Parameter signedint Â£temporary2933 -> tp 188>
new  <	; Parameter pointer Â£temporary2915 -> Â£temporary2918 168>

2443:
old  <	mov eax, [rsi + 8]>
new  <	mov rax, [rsi]>

2444:
old  <	mov [rbp + 188], eax>
new  <	mov [rbp + 168], rax>

2446:
old  < strftime$177:>
new  < strftime$128:>

2447:
old  <	; Dereference Â£temporary2934 -> tp tp 0>
new  <	; Call strcpy 136 0>

2448:
old  <	mov rsi, [rbp + 44]>
new  <	mov qword [rbp + 136], strftime$129>

2449:
old  <>
new  <	mov [rbp + 144], rbp>

2450:
old  < strftime$178:>
new  <	add rbp, 136>

2451:
old  <	; Parameter signedint Â£temporary2934 -> tp 192>
new  <	jmp strcpy>

2452:
old  <	mov eax, [rsi + 4]>
new  <>

2453:
old  <	mov [rbp + 192], eax>
new  < strftime$129:>

2454:
old  <>
new  <	; PostCall 136>

2455:
old  < strftime$179:>
new  <>

2456:
old  <	; Dereference Â£temporary2935 -> tp tp 0>
new  < strftime$130:>

2457:
old  <	mov rsi, [rbp + 44]>
new  <	; Goto 334>

2458:
old  <>
new  <	jmp strftime$334>

2459:
old  < strftime$180:>
new  <>

2460:
old  <	; Parameter signedint Â£temporary2935 -> tp 196>
new  < strftime$131:>

2461:
old  <	mov eax, [rsi]>
new  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2462:
old  <	mov [rbp + 196], eax>
new  <>

2463:
old  <>
new  < strftime$132:>

2464:
old  < strftime$181:>
new  <	; Parameter pointer add 160>

2465:
old  <	; Call sprintf 136 24>
new  <	mov [rbp + 160], rbp>

2466:
old  <	mov qword [rbp + 136], strftime$182>
new  <	add qword [rbp + 160], 116>

2467:
old  <	mov [rbp + 144], rbp>
new  <>

2468:
old  <	add rbp, 136>
new  < strftime$133:>

2469:
old  <	mov rdi, rbp>
new  <	; Dereference Â£temporary2920 -> tp tp 0>

2470:
old  <	add rdi, 24>
new  <	mov rsi, [rbp + 44]>

2471:
old  <	jmp sprintf>
new  <>

2472:
old  <>
new  < strftime$134:>

2473:
old  < strftime$182:>
new  <	; IntegralToIntegral Â£temporary2922 Â£temporary2920 -> tp>

2474:
old  <	; PostCall 136>
new  <	mov eax, [rsi + 24]>

2475:
old  <>
new  <	mov rbx, 4294967295>

2476:
old  < strftime$183:>
new  <	and rax, rbx>

2477:
old  <	; Goto 339>
new  <>

2478:
old  <	jmp strftime$339>
new  < strftime$135:>

2479:
old  <>
new  <	; UnsignedMultiply Â£temporary2923 Â£temporary2922 8>

2480:
old  < strftime$184:>
new  <	xor rdx, rdx>

2481:
old  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mul qword [int8$8#]>

2483:
old  < strftime$185:>
new  < strftime$136:>

2484:
old  <	; Parameter pointer add 160>
new  <	; BinaryAdd Â£temporary2924 longDayList Â£temporary2923>

2485:
old  <	mov [rbp + 160], rbp>
new  <	mov rsi, [rbp + 76]>

2486:
old  <	add qword [rbp + 160], 116>
new  <	add rsi, rax>

2488:
old  < strftime$186:>
new  < strftime$137:>

2489:
old  <	; Parameter pointer "%02d" 168>
new  <	; Dereference Â£temporary2921 -> Â£temporary2924 Â£temporary2924 0>

2490:
old  <	mov qword [rbp + 168], string_2502d#>
new  <>

2491:
old  <>
new  < strftime$138:>

2492:
old  < strftime$187:>
new  <	; Parameter pointer Â£temporary2921 -> Â£temporary2924 168>

2493:
old  <	; Dereference Â£temporary2937 -> tp tp 0>
new  <	mov rax, [rsi]>

2494:
old  <	mov rsi, [rbp + 44]>
new  <	mov [rbp + 168], rax>

2496:
old  < strftime$188:>
new  < strftime$139:>

2497:
old  <	; Parameter signedint Â£temporary2937 -> tp 176>
new  <	; Call strcpy 136 0>

2498:
old  <	mov eax, [rsi + 12]>
new  <	mov qword [rbp + 136], strftime$140>

2499:
old  <	mov [rbp + 176], eax>
new  <	mov [rbp + 144], rbp>

2500:
old  <>
new  <	add rbp, 136>

2501:
old  < strftime$189:>
new  <	jmp strcpy>

2502:
old  <	; Call sprintf 136 4>
new  <>

2503:
old  <	mov qword [rbp + 136], strftime$190>
new  < strftime$140:>

2504:
old  <	mov [rbp + 144], rbp>
new  <	; PostCall 136>

2505:
old  <	add rbp, 136>
new  <>

2506:
old  <	mov rdi, rbp>
new  < strftime$141:>

2507:
old  <	add rdi, 4>
new  <	; Goto 334>

2508:
old  <	jmp sprintf>
new  <	jmp strftime$334>

2510:
old  < strftime$190:>
new  < strftime$142:>

2511:
old  <	; PostCall 136>
new  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2513:
old  < strftime$191:>
new  < strftime$143:>

2514:
old  <	; Goto 339>
new  <	; Parameter pointer add 160>

2515:
old  <	jmp strftime$339>
new  <	mov [rbp + 160], rbp>

2516:
old  <>
new  <	add qword [rbp + 160], 116>

2517:
old  < strftime$192:>
new  <>

2518:
old  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < strftime$144:>

2519:
old  <>
new  <	; Dereference Â£temporary2926 -> tp tp 0>

2520:
old  < strftime$193:>
new  <	mov rsi, [rbp + 44]>

2521:
old  <	; Parameter pointer add 160>
new  <>

2522:
old  <	mov [rbp + 160], rbp>
new  < strftime$145:>

2523:
old  <	add qword [rbp + 160], 116>
new  <	; IntegralToIntegral Â£temporary2928 Â£temporary2926 -> tp>

2524:
old  <>
new  <	mov eax, [rsi + 16]>

2525:
old  < strftime$194:>
new  <	mov rbx, 4294967295>

2526:
old  <	; Parameter pointer "%02d" 168>
new  <	and rax, rbx>

2527:
old  <	mov qword [rbp + 168], string_2502d#>
new  <>

2528:
old  <>
new  < strftime$146:>

2529:
old  < strftime$195:>
new  <	; UnsignedMultiply Â£temporary2929 Â£temporary2928 8>

2530:
old  <	; Dereference Â£temporary2939 -> tp tp 0>
new  <	xor rdx, rdx>

2531:
old  <	mov rsi, [rbp + 44]>
new  <	mul qword [int8$8#]>

2533:
old  < strftime$196:>
new  < strftime$147:>

2534:
old  <	; Parameter signedint Â£temporary2939 -> tp 176>
new  <	; BinaryAdd Â£temporary2930 shortMonthList Â£temporary2929>

2535:
old  <	mov eax, [rsi + 8]>
new  <	mov rsi, [rbp + 68]>

2536:
old  <	mov [rbp + 176], eax>
new  <	add rsi, rax>

2538:
old  < strftime$197:>
new  < strftime$148:>

2539:
old  <	; Call sprintf 136 4>
new  <	; Dereference Â£temporary2927 -> Â£temporary2930 Â£temporary2930 0>

2540:
old  <	mov qword [rbp + 136], strftime$198>
new  <>

2541:
old  <	mov [rbp + 144], rbp>
new  < strftime$149:>

2542:
old  <	add rbp, 136>
new  <	; Parameter pointer Â£temporary2927 -> Â£temporary2930 168>

2543:
old  <	mov rdi, rbp>
new  <	mov rax, [rsi]>

2544:
old  <	add rdi, 4>
new  <	mov [rbp + 168], rax>

2545:
old  <	jmp sprintf>
new  <>

2546:
old  <>
new  < strftime$150:>

2547:
old  < strftime$198:>
new  <	; Call strcpy 136 0>

2548:
old  <	; PostCall 136>
new  <	mov qword [rbp + 136], strftime$151>

2549:
old  <>
new  <	mov [rbp + 144], rbp>

2550:
old  < strftime$199:>
new  <	add rbp, 136>

2551:
old  <	; Goto 339>
new  <	jmp strcpy>

2552:
old  <	jmp strftime$339>
new  <>

2553:
old  <>
new  < strftime$151:>

2554:
old  < strftime$200:>
new  <	; PostCall 136>

2555:
old  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

2556:
old  <>
new  < strftime$152:>

2557:
old  < strftime$201:>
new  <	; Goto 334>

2558:
old  <	; Parameter pointer add 160>
new  <	jmp strftime$334>

2559:
old  <	mov [rbp + 160], rbp>
new  <>

2560:
old  <	add qword [rbp + 160], 116>
new  < strftime$153:>

2561:
old  <>
new  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2562:
old  < strftime$202:>
new  <>

2563:
old  <	; Parameter pointer "%02d" 168>
new  < strftime$154:>

2564:
old  <	mov qword [rbp + 168], string_2502d#>
new  <	; Parameter pointer add 160>

2565:
old  <>
new  <	mov [rbp + 160], rbp>

2566:
old  < strftime$203:>
new  <	add qword [rbp + 160], 116>

2567:
old  <	; Dereference Â£temporary2941 -> tp tp 0>
new  <>

2568:
old  <	mov rsi, [rbp + 44]>
new  < strftime$155:>

2569:
old  <>
new  <	; Dereference Â£temporary2932 -> tp tp 0>

2570:
old  < strftime$204:>
new  <	mov rsi, [rbp + 44]>

2571:
old  <	; SignedModulo Â£temporary2942 Â£temporary2941 -> tp 12>
new  <>

2572:
old  <	mov eax, [rsi + 8]>
new  < strftime$156:>

2573:
old  <	xor edx, edx>
new  <	; IntegralToIntegral Â£temporary2934 Â£temporary2932 -> tp>

2574:
old  <	idiv dword [int4$12#]>
new  <	mov eax, [rsi + 16]>

2575:
old  <>
new  <	mov rbx, 4294967295>

2576:
old  < strftime$205:>
new  <	and rax, rbx>

2577:
old  <	; Parameter signedint Â£temporary2942 176>
new  <>

2578:
old  <	mov [rbp + 176], edx>
new  < strftime$157:>

2579:
old  <>
new  <	; UnsignedMultiply Â£temporary2935 Â£temporary2934 8>

2580:
old  < strftime$206:>
new  <	xor rdx, rdx>

2581:
old  <	; Call sprintf 136 4>
new  <	mul qword [int8$8#]>

2582:
old  <	mov qword [rbp + 136], strftime$207>
new  <>

2583:
old  <	mov [rbp + 144], rbp>
new  < strftime$158:>

2584:
old  <	add rbp, 136>
new  <	; BinaryAdd Â£temporary2936 longMonthList Â£temporary2935>

2585:
old  <	mov rdi, rbp>
new  <	mov rsi, [rbp + 84]>

2586:
old  <	add rdi, 4>
new  <	add rsi, rax>

2587:
old  <	jmp sprintf>
new  <>

2588:
old  <>
new  < strftime$159:>

2589:
old  < strftime$207:>
new  <	; Dereference Â£temporary2933 -> Â£temporary2936 Â£temporary2936 0>

2590:
old  <	; PostCall 136>
new  <>

2591:
old  <>
new  < strftime$160:>

2592:
old  < strftime$208:>
new  <	; Parameter pointer Â£temporary2933 -> Â£temporary2936 168>

2593:
old  <	; Goto 339>
new  <	mov rax, [rsi]>

2594:
old  <	jmp strftime$339>
new  <	mov [rbp + 168], rax>

2596:
old  < strftime$209:>
new  < strftime$161:>

2597:
old  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Call strcpy 136 0>

2598:
old  <>
new  <	mov qword [rbp + 136], strftime$162>

2599:
old  < strftime$210:>
new  <	mov [rbp + 144], rbp>

2600:
old  <	; Parameter pointer add 160>
new  <	add rbp, 136>

2601:
old  <	mov [rbp + 160], rbp>
new  <	jmp strcpy>

2602:
old  <	add qword [rbp + 160], 116>
new  <>

2603:
old  <>
new  < strftime$162:>

2604:
old  < strftime$211:>
new  <	; PostCall 136>

2605:
old  <	; Parameter pointer "%03d" 168>
new  <>

2606:
old  <	mov qword [rbp + 168], string_2503d#>
new  < strftime$163:>

2607:
old  <>
new  <	; Goto 334>

2608:
old  < strftime$212:>
new  <	jmp strftime$334>

2609:
old  <	; Dereference Â£temporary2944 -> tp tp 0>
new  <>

2610:
old  <	mov rsi, [rbp + 44]>
new  < strftime$164:>

2611:
old  <>
new  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2612:
old  < strftime$213:>
new  <>

2613:
old  <	; Parameter signedint Â£temporary2944 -> tp 176>
new  < strftime$165:>

2614:
old  <	mov eax, [rsi + 28]>
new  <	; Parameter pointer add 160>

2615:
old  <	mov [rbp + 176], eax>
new  <	mov [rbp + 160], rbp>

2616:
old  <>
new  <	add qword [rbp + 160], 116>

2617:
old  < strftime$214:>
new  <>

2618:
old  <	; Call sprintf 136 4>
new  < strftime$166:>

2619:
old  <	mov qword [rbp + 136], strftime$215>
new  <	; Parameter pointer "%d-%d-%d %d:%d:%d" 168>

2620:
old  <	mov [rbp + 144], rbp>
new  <	mov qword [rbp + 168], string_25d2D25d2D25d2025d3A25d3A25d#>

2621:
old  <	add rbp, 136>
new  <>

2622:
old  <	mov rdi, rbp>
new  < strftime$167:>

2623:
old  <	add rdi, 4>
new  <	; Dereference Â£temporary2938 -> tp tp 0>

2624:
old  <	jmp sprintf>
new  <	mov rsi, [rbp + 44]>

2626:
old  < strftime$215:>
new  < strftime$168:>

2627:
old  <	; PostCall 136>
new  <	; BinaryAdd Â£temporary2939 Â£temporary2938 -> tp 1900>

2628:
old  <>
new  <	mov eax, [rsi + 20]>

2629:
old  < strftime$216:>
new  <	add eax, 1900>

2630:
old  <	; Goto 339>
new  <>

2631:
old  <	jmp strftime$339>
new  < strftime$169:>

2632:
old  <>
new  <	; Parameter signedint Â£temporary2939 176>

2633:
old  < strftime$217:>
new  <	mov [rbp + 176], eax>

2634:
old  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

2635:
old  <>
new  < strftime$170:>

2636:
old  < strftime$218:>
new  <	; Dereference Â£temporary2940 -> tp tp 0>

2637:
old  <	; Parameter pointer add 160>
new  <	mov rsi, [rbp + 44]>

2638:
old  <	mov [rbp + 160], rbp>
new  <>

2639:
old  <	add qword [rbp + 160], 116>
new  < strftime$171:>

2640:
old  <>
new  <	; BinaryAdd Â£temporary2941 Â£temporary2940 -> tp 1>

2641:
old  < strftime$219:>
new  <	mov eax, [rsi + 16]>

2642:
old  <	; Parameter pointer "%02d" 168>
new  <	inc eax>

2643:
old  <	mov qword [rbp + 168], string_2502d#>
new  <>

2644:
old  <>
new  < strftime$172:>

2645:
old  < strftime$220:>
new  <	; Parameter signedint Â£temporary2941 180>

2646:
old  <	; Dereference Â£temporary2946 -> tp tp 0>
new  <	mov [rbp + 180], eax>

2647:
old  <	mov rsi, [rbp + 44]>
new  <>

2648:
old  <>
new  < strftime$173:>

2649:
old  < strftime$221:>
new  <	; Dereference Â£temporary2942 -> tp tp 0>

2650:
old  <	; BinaryAdd Â£temporary2947 Â£temporary2946 -> tp 1>
new  <	mov rsi, [rbp + 44]>

2651:
old  <	mov eax, [rsi + 16]>
new  <>

2652:
old  <	inc eax>
new  < strftime$174:>

2653:
old  <>
new  <	; Parameter signedint Â£temporary2942 -> tp 184>

2654:
old  < strftime$222:>
new  <	mov eax, [rsi + 12]>

2655:
old  <	; Parameter signedint Â£temporary2947 176>
new  <	mov [rbp + 184], eax>

2656:
old  <	mov [rbp + 176], eax>
new  <>

2657:
old  <>
new  < strftime$175:>

2658:
old  < strftime$223:>
new  <	; Dereference Â£temporary2943 -> tp tp 0>

2659:
old  <	; Call sprintf 136 4>
new  <	mov rsi, [rbp + 44]>

2660:
old  <	mov qword [rbp + 136], strftime$224>
new  <>

2661:
old  <	mov [rbp + 144], rbp>
new  < strftime$176:>

2662:
old  <	add rbp, 136>
new  <	; Parameter signedint Â£temporary2943 -> tp 188>

2663:
old  <	mov rdi, rbp>
new  <	mov eax, [rsi + 8]>

2664:
old  <	add rdi, 4>
new  <	mov [rbp + 188], eax>

2665:
old  <	jmp sprintf>
new  <>

2666:
old  <>
new  < strftime$177:>

2667:
old  < strftime$224:>
new  <	; Dereference Â£temporary2944 -> tp tp 0>

2668:
old  <	; PostCall 136>
new  <	mov rsi, [rbp + 44]>

2670:
old  < strftime$225:>
new  < strftime$178:>

2671:
old  <	; Goto 339>
new  <	; Parameter signedint Â£temporary2944 -> tp 192>

2672:
old  <	jmp strftime$339>
new  <	mov eax, [rsi + 4]>

2673:
old  <>
new  <	mov [rbp + 192], eax>

2674:
old  < strftime$226:>
new  <>

2675:
old  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < strftime$179:>

2676:
old  <>
new  <	; Dereference Â£temporary2945 -> tp tp 0>

2677:
old  < strftime$227:>
new  <	mov rsi, [rbp + 44]>

2678:
old  <	; Parameter pointer add 160>
new  <>

2679:
old  <	mov [rbp + 160], rbp>
new  < strftime$180:>

2680:
old  <	add qword [rbp + 160], 116>
new  <	; Parameter signedint Â£temporary2945 -> tp 196>

2681:
old  <>
new  <	mov eax, [rsi]>

2682:
old  < strftime$228:>
new  <	mov [rbp + 196], eax>

2683:
old  <	; Parameter pointer "%02d" 168>
new  <>

2684:
old  <	mov qword [rbp + 168], string_2502d#>
new  < strftime$181:>

2685:
old  <>
new  <	; Call sprintf 136 24>

2686:
old  < strftime$229:>
new  <	mov qword [rbp + 136], strftime$182>

2687:
old  <	; Dereference Â£temporary2949 -> tp tp 0>
new  <	mov [rbp + 144], rbp>

2688:
old  <	mov rsi, [rbp + 44]>
new  <	add rbp, 136>

2689:
old  <>
new  <	mov rdi, rbp>

2690:
old  < strftime$230:>
new  <	add rdi, 24>

2691:
old  <	; Parameter signedint Â£temporary2949 -> tp 176>
new  <	jmp sprintf>

2692:
old  <	mov eax, [rsi + 4]>
new  <>

2693:
old  <	mov [rbp + 176], eax>
new  < strftime$182:>

2694:
old  <>
new  <	; PostCall 136>

2695:
old  < strftime$231:>
new  <>

2696:
old  <	; Call sprintf 136 4>
new  < strftime$183:>

2697:
old  <	mov qword [rbp + 136], strftime$232>
new  <	; Goto 334>

2698:
old  <	mov [rbp + 144], rbp>
new  <	jmp strftime$334>

2699:
old  <	add rbp, 136>
new  <>

2700:
old  <	mov rdi, rbp>
new  < strftime$184:>

2701:
old  <	add rdi, 4>
new  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2702:
old  <	jmp sprintf>
new  <>

2703:
old  <>
new  < strftime$185:>

2704:
old  < strftime$232:>
new  <	; Parameter pointer add 160>

2705:
old  <	; PostCall 136>
new  <	mov [rbp + 160], rbp>

2706:
old  <>
new  <	add qword [rbp + 160], 116>

2707:
old  < strftime$233:>
new  <>

2708:
old  <	; Goto 339>
new  < strftime$186:>

2709:
old  <	jmp strftime$339>
new  <	; Parameter pointer "%d" 168>

2710:
old  <>
new  <	mov qword [rbp + 168], string_25d#>

2711:
old  < strftime$234:>
new  <>

2712:
old  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < strftime$187:>

2713:
old  <>
new  <	; Dereference Â£temporary2947 -> tp tp 0>

2714:
old  < strftime$235:>
new  <	mov rsi, [rbp + 44]>

2715:
old  <	; Parameter pointer add 160>
new  <>

2716:
old  <	mov [rbp + 160], rbp>
new  < strftime$188:>

2717:
old  <	add qword [rbp + 160], 116>
new  <	; Parameter signedint Â£temporary2947 -> tp 176>

2718:
old  <>
new  <	mov eax, [rsi + 12]>

2719:
old  < strftime$236:>
new  <	mov [rbp + 176], eax>

2720:
old  <	; Parameter pointer "%s" 168>
new  <>

2721:
old  <	mov qword [rbp + 168], string_25s#>
new  < strftime$189:>

2722:
old  <>
new  <	; Call sprintf 136 4>

2723:
old  < strftime$237:>
new  <	mov qword [rbp + 136], strftime$190>

2724:
old  <	; Dereference Â£temporary2951 -> tp tp 0>
new  <	mov [rbp + 144], rbp>

2725:
old  <	mov rsi, [rbp + 44]>
new  <	add rbp, 136>

2726:
old  <>
new  <	mov rdi, rbp>

2727:
old  < strftime$238:>
new  <	add rdi, 4>

2728:
old  <	; SignedGreaterThanEqual 241 Â£temporary2951 -> tp 12>
new  <	jmp sprintf>

2729:
old  <	cmp dword [rsi + 8], 12>
new  <>

2730:
old  <	jge strftime$241>
new  < strftime$190:>

2731:
old  <>
new  <	; PostCall 136>

2732:
old  < strftime$239:>
new  <>

2733:
old  <	; Assign Â£temporary2953 "AM">
new  < strftime$191:>

2734:
old  <	mov rax, string_AM#>
new  <	; Goto 334>

2735:
old  <>
new  <	jmp strftime$334>

2736:
old  < strftime$240:>
new  <>

2737:
old  <	; Goto 242>
new  < strftime$192:>

2738:
old  <	jmp strftime$242>
new  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2740:
old  < strftime$241:>
new  < strftime$193:>

2741:
old  <	; Assign Â£temporary2953 "PM">
new  <	; Parameter pointer add 160>

2742:
old  <	mov rax, string_PM#>
new  <	mov [rbp + 160], rbp>

2743:
old  <>
new  <	add qword [rbp + 160], 116>

2744:
old  < strftime$242:>
new  <>

2745:
old  <	; Parameter pointer Â£temporary2953 176>
new  < strftime$194:>

2746:
old  <	mov [rbp + 176], rax>
new  <	; Parameter pointer "%d" 168>

2747:
old  <>
new  <	mov qword [rbp + 168], string_25d#>

2748:
old  < strftime$243:>
new  <>

2749:
old  <	; Call sprintf 136 8>
new  < strftime$195:>

2750:
old  <	mov qword [rbp + 136], strftime$244>
new  <	; Dereference Â£temporary2949 -> tp tp 0>

2751:
old  <	mov [rbp + 144], rbp>
new  <	mov rsi, [rbp + 44]>

2752:
old  <	add rbp, 136>
new  <>

2753:
old  <	mov rdi, rbp>
new  < strftime$196:>

2754:
old  <	add rdi, 8>
new  <	; Parameter signedint Â£temporary2949 -> tp 176>

2755:
old  <	jmp sprintf>
new  <	mov eax, [rsi + 8]>

2756:
old  <>
new  <	mov [rbp + 176], eax>

2757:
old  < strftime$244:>
new  <>

2758:
old  <	; PostCall 136>
new  < strftime$197:>

2759:
old  <>
new  <	; Call sprintf 136 4>

2760:
old  < strftime$245:>
new  <	mov qword [rbp + 136], strftime$198>

2761:
old  <	; Goto 339>
new  <	mov [rbp + 144], rbp>

2762:
old  <	jmp strftime$339>
new  <	add rbp, 136>

2763:
old  <>
new  <	mov rdi, rbp>

2764:
old  < strftime$246:>
new  <	add rdi, 4>

2765:
old  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	jmp sprintf>

2767:
old  < strftime$247:>
new  < strftime$198:>

2768:
old  <	; Parameter pointer add 160>
new  <	; PostCall 136>

2769:
old  <	mov [rbp + 160], rbp>
new  <>

2770:
old  <	add qword [rbp + 160], 116>
new  < strftime$199:>

2771:
old  <>
new  <	; Goto 334>

2772:
old  < strftime$248:>
new  <	jmp strftime$334>

2773:
old  <	; Parameter pointer "%02d" 168>
new  <>

2774:
old  <	mov qword [rbp + 168], string_2502d#>
new  < strftime$200:>

2775:
old  <>
new  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2776:
old  < strftime$249:>
new  <>

2777:
old  <	; Dereference Â£temporary2955 -> tp tp 0>
new  < strftime$201:>

2778:
old  <	mov rsi, [rbp + 44]>
new  <	; Parameter pointer add 160>

2779:
old  <>
new  <	mov [rbp + 160], rbp>

2780:
old  < strftime$250:>
new  <	add qword [rbp + 160], 116>

2781:
old  <	; Parameter signedint Â£temporary2955 -> tp 176>
new  <>

2782:
old  <	mov eax, [rsi]>
new  < strftime$202:>

2783:
old  <	mov [rbp + 176], eax>
new  <	; Parameter pointer "%d" 168>

2784:
old  <>
new  <	mov qword [rbp + 168], string_25d#>

2785:
old  < strftime$251:>
new  <>

2786:
old  <	; Call sprintf 136 4>
new  < strftime$203:>

2787:
old  <	mov qword [rbp + 136], strftime$252>
new  <	; Dereference Â£temporary2951 -> tp tp 0>

2788:
old  <	mov [rbp + 144], rbp>
new  <	mov rsi, [rbp + 44]>

2789:
old  <	add rbp, 136>
new  <>

2790:
old  <	mov rdi, rbp>
new  < strftime$204:>

2791:
old  <	add rdi, 4>
new  <	; SignedModulo Â£temporary2952 Â£temporary2951 -> tp 12>

2792:
old  <	jmp sprintf>
new  <	mov eax, [rsi + 8]>

2793:
old  <>
new  <	xor edx, edx>

2794:
old  < strftime$252:>
new  <	idiv dword [int4$12#]>

2795:
old  <	; PostCall 136>
new  <>

2796:
old  <>
new  < strftime$205:>

2797:
old  < strftime$253:>
new  <	; Parameter signedint Â£temporary2952 176>

2798:
old  <	; Goto 339>
new  <	mov [rbp + 176], edx>

2799:
old  <	jmp strftime$339>
new  <>

2800:
old  <>
new  < strftime$206:>

2801:
old  < strftime$254:>
new  <	; Call sprintf 136 4>

2802:
old  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov qword [rbp + 136], strftime$207>

2803:
old  <>
new  <	mov [rbp + 144], rbp>

2804:
old  < strftime$255:>
new  <	add rbp, 136>

2805:
old  <	; Parameter pointer add 160>
new  <	mov rdi, rbp>

2806:
old  <	mov [rbp + 160], rbp>
new  <	add rdi, 4>

2807:
old  <	add qword [rbp + 160], 116>
new  <	jmp sprintf>

2809:
old  < strftime$256:>
new  < strftime$207:>

2810:
old  <	; Parameter pointer "%02d" 168>
new  <	; PostCall 136>

2811:
old  <	mov qword [rbp + 168], string_2502d#>
new  <>

2812:
old  <>
new  < strftime$208:>

2813:
old  < strftime$257:>
new  <	; Goto 334>

2814:
old  <	; Parameter signedint yearDaySunday 176>
new  <	jmp strftime$334>

2815:
old  <	mov eax, [rbp + 104]>
new  <>

2816:
old  <	mov [rbp + 176], eax>
new  < strftime$209:>

2817:
old  <>
new  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2818:
old  < strftime$258:>
new  <>

2819:
old  <	; Call sprintf 136 4>
new  < strftime$210:>

2820:
old  <	mov qword [rbp + 136], strftime$259>
new  <	; Parameter pointer add 160>

2821:
old  <	mov [rbp + 144], rbp>
new  <	mov [rbp + 160], rbp>

2822:
old  <	add rbp, 136>
new  <	add qword [rbp + 160], 116>

2823:
old  <	mov rdi, rbp>
new  <>

2824:
old  <	add rdi, 4>
new  < strftime$211:>

2825:
old  <	jmp sprintf>
new  <	; Parameter pointer "%d" 168>

2826:
old  <>
new  <	mov qword [rbp + 168], string_25d#>

2827:
old  < strftime$259:>
new  <>

2828:
old  <	; PostCall 136>
new  < strftime$212:>

2829:
old  <>
new  <	; Dereference Â£temporary2954 -> tp tp 0>

2830:
old  < strftime$260:>
new  <	mov rsi, [rbp + 44]>

2831:
old  <	; Goto 339>
new  <>

2832:
old  <	jmp strftime$339>
new  < strftime$213:>

2833:
old  <>
new  <	; Parameter signedint Â£temporary2954 -> tp 176>

2834:
old  < strftime$261:>
new  <	mov eax, [rsi + 28]>

2835:
old  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov [rbp + 176], eax>

2837:
old  < strftime$262:>
new  < strftime$214:>

2838:
old  <	; Parameter pointer add 160>
new  <	; Call sprintf 136 4>

2839:
old  <	mov [rbp + 160], rbp>
new  <	mov qword [rbp + 136], strftime$215>

2840:
old  <	add qword [rbp + 160], 116>
new  <	mov [rbp + 144], rbp>

2841:
old  <>
new  <	add rbp, 136>

2842:
old  < strftime$263:>
new  <	mov rdi, rbp>

2843:
old  <	; Parameter pointer "%02d" 168>
new  <	add rdi, 4>

2844:
old  <	mov qword [rbp + 168], string_2502d#>
new  <	jmp sprintf>

2846:
old  < strftime$264:>
new  < strftime$215:>

2847:
old  <	; Dereference Â£temporary2958 -> tp tp 0>
new  <	; PostCall 136>

2848:
old  <	mov rsi, [rbp + 44]>
new  <>

2849:
old  <>
new  < strftime$216:>

2850:
old  < strftime$265:>
new  <	; Goto 334>

2851:
old  <	; Parameter signedint Â£temporary2958 -> tp 176>
new  <	jmp strftime$334>

2852:
old  <	mov eax, [rsi + 24]>
new  <>

2853:
old  <	mov [rbp + 176], eax>
new  < strftime$217:>

2854:
old  <>
new  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2855:
old  < strftime$266:>
new  <>

2856:
old  <	; Call sprintf 136 4>
new  < strftime$218:>

2857:
old  <	mov qword [rbp + 136], strftime$267>
new  <	; Parameter pointer add 160>

2858:
old  <	mov [rbp + 144], rbp>
new  <	mov [rbp + 160], rbp>

2859:
old  <	add rbp, 136>
new  <	add qword [rbp + 160], 116>

2860:
old  <	mov rdi, rbp>
new  <>

2861:
old  <	add rdi, 4>
new  < strftime$219:>

2862:
old  <	jmp sprintf>
new  <	; Parameter pointer "%d" 168>

2863:
old  <>
new  <	mov qword [rbp + 168], string_25d#>

2864:
old  < strftime$267:>
new  <>

2865:
old  <	; PostCall 136>
new  < strftime$220:>

2866:
old  <>
new  <	; Dereference Â£temporary2956 -> tp tp 0>

2867:
old  < strftime$268:>
new  <	mov rsi, [rbp + 44]>

2868:
old  <	; Goto 339>
new  <>

2869:
old  <	jmp strftime$339>
new  < strftime$221:>

2870:
old  <>
new  <	; BinaryAdd Â£temporary2957 Â£temporary2956 -> tp 1>

2871:
old  < strftime$269:>
new  <	mov eax, [rsi + 16]>

2872:
old  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	inc eax>

2874:
old  < strftime$270:>
new  < strftime$222:>

2875:
old  <	; Parameter pointer add 160>
new  <	; Parameter signedint Â£temporary2957 176>

2876:
old  <	mov [rbp + 160], rbp>
new  <	mov [rbp + 176], eax>

2877:
old  <	add qword [rbp + 160], 116>
new  <>

2878:
old  <>
new  < strftime$223:>

2879:
old  < strftime$271:>
new  <	; Call sprintf 136 4>

2880:
old  <	; Parameter pointer "%02d" 168>
new  <	mov qword [rbp + 136], strftime$224>

2881:
old  <	mov qword [rbp + 168], string_2502d#>
new  <	mov [rbp + 144], rbp>

2882:
old  <>
new  <	add rbp, 136>

2883:
old  < strftime$272:>
new  <	mov rdi, rbp>

2884:
old  <	; Parameter signedint yearDayMonday 176>
new  <	add rdi, 4>

2885:
old  <	mov eax, [rbp + 108]>
new  <	jmp sprintf>

2886:
old  <	mov [rbp + 176], eax>
new  <>

2887:
old  <>
new  < strftime$224:>

2888:
old  < strftime$273:>
new  <	; PostCall 136>

2889:
old  <	; Call sprintf 136 4>
new  <>

2890:
old  <	mov qword [rbp + 136], strftime$274>
new  < strftime$225:>

2891:
old  <	mov [rbp + 144], rbp>
new  <	; Goto 334>

2892:
old  <	add rbp, 136>
new  <	jmp strftime$334>

2893:
old  <	mov rdi, rbp>
new  <>

2894:
old  <	add rdi, 4>
new  < strftime$226:>

2895:
old  <	jmp sprintf>
new  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2897:
old  < strftime$274:>
new  < strftime$227:>

2898:
old  <	; PostCall 136>
new  <	; Parameter pointer add 160>

2899:
old  <>
new  <	mov [rbp + 160], rbp>

2900:
old  < strftime$275:>
new  <	add qword [rbp + 160], 116>

2901:
old  <	; Goto 339>
new  <>

2902:
old  <	jmp strftime$339>
new  < strftime$228:>

2903:
old  <>
new  <	; Parameter pointer "%d" 168>

2904:
old  < strftime$276:>
new  <	mov qword [rbp + 168], string_25d#>

2905:
old  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

2906:
old  <>
new  < strftime$229:>

2907:
old  < strftime$277:>
new  <	; Dereference Â£temporary2959 -> tp tp 0>

2908:
old  <	; Parameter pointer add 160>
new  <	mov rsi, [rbp + 44]>

2909:
old  <	mov [rbp + 160], rbp>
new  <>

2910:
old  <	add qword [rbp + 160], 116>
new  < strftime$230:>

2911:
old  <>
new  <	; Parameter signedint Â£temporary2959 -> tp 176>

2912:
old  < strftime$278:>
new  <	mov eax, [rsi + 4]>

2913:
old  <	; Parameter pointer "%04d-%02d-%02d" 168>
new  <	mov [rbp + 176], eax>

2914:
old  <	mov qword [rbp + 168], string_2504d2D2502d2D2502d#>
new  <>

2915:
old  <>
new  < strftime$231:>

2916:
old  < strftime$279:>
new  <	; Call sprintf 136 4>

2917:
old  <	; Dereference Â£temporary2961 -> tp tp 0>
new  <	mov qword [rbp + 136], strftime$232>

2918:
old  <	mov rsi, [rbp + 44]>
new  <	mov [rbp + 144], rbp>

2919:
old  <>
new  <	add rbp, 136>

2920:
old  < strftime$280:>
new  <	mov rdi, rbp>

2921:
old  <	; BinaryAdd Â£temporary2962 Â£temporary2961 -> tp 1900>
new  <	add rdi, 4>

2922:
old  <	mov eax, [rsi + 20]>
new  <	jmp sprintf>

2923:
old  <	add eax, 1900>
new  <>

2924:
old  <>
new  < strftime$232:>

2925:
old  < strftime$281:>
new  <	; PostCall 136>

2926:
old  <	; Parameter signedint Â£temporary2962 176>
new  <>

2927:
old  <	mov [rbp + 176], eax>
new  < strftime$233:>

2928:
old  <>
new  <	; Goto 334>

2929:
old  < strftime$282:>
new  <	jmp strftime$334>

2930:
old  <	; Dereference Â£temporary2963 -> tp tp 0>
new  <>

2931:
old  <	mov rsi, [rbp + 44]>
new  < strftime$234:>

2932:
old  <>
new  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2933:
old  < strftime$283:>
new  <>

2934:
old  <	; BinaryAdd Â£temporary2964 Â£temporary2963 -> tp 1>
new  < strftime$235:>

2935:
old  <	mov eax, [rsi + 16]>
new  <	; Parameter pointer add 160>

2936:
old  <	inc eax>
new  <	mov [rbp + 160], rbp>

2937:
old  <>
new  <	add qword [rbp + 160], 116>

2938:
old  < strftime$284:>
new  <>

2939:
old  <	; Parameter signedint Â£temporary2964 180>
new  < strftime$236:>

2940:
old  <	mov [rbp + 180], eax>
new  <	; Parameter pointer "%s" 168>

2941:
old  <>
new  <	mov qword [rbp + 168], string_25s#>

2942:
old  < strftime$285:>
new  <>

2943:
old  <	; Dereference Â£temporary2965 -> tp tp 0>
new  < strftime$237:>

2944:
old  <	mov rsi, [rbp + 44]>
new  <	; Dereference Â£temporary2961 -> tp tp 0>

2945:
old  <>
new  <	mov rsi, [rbp + 44]>

2946:
old  < strftime$286:>
new  <>

2947:
old  <	; Parameter signedint Â£temporary2965 -> tp 184>
new  < strftime$238:>

2948:
old  <	mov eax, [rsi + 12]>
new  <	; SignedGreaterThanEqual 241 Â£temporary2961 -> tp 12>

2949:
old  <	mov [rbp + 184], eax>
new  <	cmp dword [rsi + 8], 12>

2950:
old  <>
new  <	jge strftime$241>

2951:
old  < strftime$287:>
new  <>

2952:
old  <	; Call sprintf 136 12>
new  < strftime$239:>

2953:
old  <	mov qword [rbp + 136], strftime$288>
new  <	; Assign Â£temporary2963 "AM">

2954:
old  <	mov [rbp + 144], rbp>
new  <	mov rax, string_AM#>

2955:
old  <	add rbp, 136>
new  <>

2956:
old  <	mov rdi, rbp>
new  < strftime$240:>

2957:
old  <	add rdi, 12>
new  <	; Goto 242>

2958:
old  <	jmp sprintf>
new  <	jmp strftime$242>

2960:
old  < strftime$288:>
new  < strftime$241:>

2961:
old  <	; PostCall 136>
new  <	; Assign Â£temporary2963 "PM">

2962:
old  <>
new  <	mov rax, string_PM#>

2963:
old  < strftime$289:>
new  <>

2964:
old  <	; Goto 339>
new  < strftime$242:>

2965:
old  <	jmp strftime$339>
new  <	; Parameter pointer Â£temporary2963 176>

2966:
old  <>
new  <	mov [rbp + 176], rax>

2967:
old  < strftime$290:>
new  <>

2968:
old  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < strftime$243:>

2969:
old  <>
new  <	; Call sprintf 136 8>

2970:
old  < strftime$291:>
new  <	mov qword [rbp + 136], strftime$244>

2971:
old  <	; Parameter pointer add 160>
new  <	mov [rbp + 144], rbp>

2972:
old  <	mov [rbp + 160], rbp>
new  <	add rbp, 136>

2973:
old  <	add qword [rbp + 160], 116>
new  <	mov rdi, rbp>

2974:
old  <>
new  <	add rdi, 8>

2975:
old  < strftime$292:>
new  <	jmp sprintf>

2976:
old  <	; Parameter pointer "%02d:%02d:%02d" 168>
new  <>

2977:
old  <	mov qword [rbp + 168], string_2502d3A2502d3A2502d#>
new  < strftime$244:>

2978:
old  <>
new  <	; PostCall 136>

2979:
old  < strftime$293:>
new  <>

2980:
old  <	; Dereference Â£temporary2967 -> tp tp 0>
new  < strftime$245:>

2981:
old  <	mov rsi, [rbp + 44]>
new  <	; Goto 334>

2982:
old  <>
new  <	jmp strftime$334>

2983:
old  < strftime$294:>
new  <>

2984:
old  <	; Parameter signedint Â£temporary2967 -> tp 176>
new  < strftime$246:>

2985:
old  <	mov eax, [rsi + 8]>
new  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2986:
old  <	mov [rbp + 176], eax>
new  <>

2987:
old  <>
new  < strftime$247:>

2988:
old  < strftime$295:>
new  <	; Parameter pointer add 160>

2989:
old  <	; Dereference Â£temporary2968 -> tp tp 0>
new  <	mov [rbp + 160], rbp>

2990:
old  <	mov rsi, [rbp + 44]>
new  <	add qword [rbp + 160], 116>

2992:
old  < strftime$296:>
new  < strftime$248:>

2993:
old  <	; Parameter signedint Â£temporary2968 -> tp 180>
new  <	; Parameter pointer "%d" 168>

2994:
old  <	mov eax, [rsi + 4]>
new  <	mov qword [rbp + 168], string_25d#>

2995:
old  <	mov [rbp + 180], eax>
new  <>

2996:
old  <>
new  < strftime$249:>

2997:
old  < strftime$297:>
new  <	; Dereference Â£temporary2965 -> tp tp 0>

2998:
old  <	; Dereference Â£temporary2969 -> tp tp 0>
new  <	mov rsi, [rbp + 44]>

2999:
old  <	mov rsi, [rbp + 44]>
new  <>

3000:
old  <>
new  < strftime$250:>

3001:
old  < strftime$298:>
new  <	; Parameter signedint Â£temporary2965 -> tp 176>

3002:
old  <	; Parameter signedint Â£temporary2969 -> tp 184>
new  <	mov eax, [rsi]>

3003:
old  <	mov eax, [rsi]>
new  <	mov [rbp + 176], eax>

3004:
old  <	mov [rbp + 184], eax>
new  <>

3005:
old  <>
new  < strftime$251:>

3006:
old  < strftime$299:>
new  <	; Call sprintf 136 4>

3007:
old  <	; Call sprintf 136 12>
new  <	mov qword [rbp + 136], strftime$252>

3008:
old  <	mov qword [rbp + 136], strftime$300>
new  <	mov [rbp + 144], rbp>

3009:
old  <	mov [rbp + 144], rbp>
new  <	add rbp, 136>

3010:
old  <	add rbp, 136>
new  <	mov rdi, rbp>

3011:
old  <	mov rdi, rbp>
new  <	add rdi, 4>

3012:
old  <	add rdi, 12>
new  <	jmp sprintf>

3013:
old  <	jmp sprintf>
new  <>

3014:
old  <>
new  < strftime$252:>

3015:
old  < strftime$300:>
new  <	; PostCall 136>

3016:
old  <	; PostCall 136>
new  <>

3017:
old  <>
new  < strftime$253:>

3018:
old  < strftime$301:>
new  <	; Goto 334>

3019:
old  <	; Goto 339>
new  <	jmp strftime$334>

3020:
old  <	jmp strftime$339>
new  <>

3021:
old  <>
new  < strftime$254:>

3022:
old  < strftime$302:>
new  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3023:
old  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

3024:
old  <>
new  < strftime$255:>

3025:
old  < strftime$303:>
new  <	; Parameter pointer add 160>

3026:
old  <	; Parameter pointer add 160>
new  <	mov [rbp + 160], rbp>

3027:
old  <	mov [rbp + 160], rbp>
new  <	add qword [rbp + 160], 116>

3028:
old  <	add qword [rbp + 160], 116>
new  <>

3029:
old  <>
new  < strftime$256:>

3030:
old  < strftime$304:>
new  <	; Parameter pointer "%d" 168>

3031:
old  <	; Parameter pointer "%02d" 168>
new  <	mov qword [rbp + 168], string_25d#>

3032:
old  <	mov qword [rbp + 168], string_2502d#>
new  <>

3033:
old  <>
new  < strftime$257:>

3034:
old  < strftime$305:>
new  <	; Parameter signedint yearDaySunday 176>

3035:
old  <	; Dereference Â£temporary2971 -> tp tp 0>
new  <	mov eax, [rbp + 104]>

3036:
old  <	mov rsi, [rbp + 44]>
new  <	mov [rbp + 176], eax>

3038:
old  < strftime$306:>
new  < strftime$258:>

3039:
old  <	; SignedModulo Â£temporary2972 Â£temporary2971 -> tp 100>
new  <	; Call sprintf 136 4>

3040:
old  <	mov eax, [rsi + 20]>
new  <	mov qword [rbp + 136], strftime$259>

3041:
old  <	xor edx, edx>
new  <	mov [rbp + 144], rbp>

3042:
old  <	idiv dword [int4$100#]>
new  <	add rbp, 136>

3043:
old  <>
new  <	mov rdi, rbp>

3044:
old  < strftime$307:>
new  <	add rdi, 4>

3045:
old  <	; Parameter signedint Â£temporary2972 176>
new  <	jmp sprintf>

3046:
old  <	mov [rbp + 176], edx>
new  <>

3047:
old  <>
new  < strftime$259:>

3048:
old  < strftime$308:>
new  <	; PostCall 136>

3049:
old  <	; Call sprintf 136 4>
new  <>

3050:
old  <	mov qword [rbp + 136], strftime$309>
new  < strftime$260:>

3051:
old  <	mov [rbp + 144], rbp>
new  <	; Goto 334>

3052:
old  <	add rbp, 136>
new  <	jmp strftime$334>

3053:
old  <	mov rdi, rbp>
new  <>

3054:
old  <	add rdi, 4>
new  < strftime$261:>

3055:
old  <	jmp sprintf>
new  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3057:
old  < strftime$309:>
new  < strftime$262:>

3058:
old  <	; PostCall 136>
new  <	; Parameter pointer add 160>

3059:
old  <>
new  <	mov [rbp + 160], rbp>

3060:
old  < strftime$310:>
new  <	add qword [rbp + 160], 116>

3061:
old  <	; Goto 339>
new  <>

3062:
old  <	jmp strftime$339>
new  < strftime$263:>

3063:
old  <>
new  <	; Parameter pointer "%d" 168>

3064:
old  < strftime$311:>
new  <	mov qword [rbp + 168], string_25d#>

3065:
old  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

3066:
old  <>
new  < strftime$264:>

3067:
old  < strftime$312:>
new  <	; Dereference Â£temporary2968 -> tp tp 0>

3068:
old  <	; Parameter pointer add 160>
new  <	mov rsi, [rbp + 44]>

3069:
old  <	mov [rbp + 160], rbp>
new  <>

3070:
old  <	add qword [rbp + 160], 116>
new  < strftime$265:>

3071:
old  <>
new  <	; Parameter signedint Â£temporary2968 -> tp 176>

3072:
old  < strftime$313:>
new  <	mov eax, [rsi + 24]>

3073:
old  <	; Parameter pointer "%04d" 168>
new  <	mov [rbp + 176], eax>

3074:
old  <	mov qword [rbp + 168], string_2504d#>
new  <>

3075:
old  <>
new  < strftime$266:>

3076:
old  < strftime$314:>
new  <	; Call sprintf 136 4>

3077:
old  <	; Dereference Â£temporary2974 -> tp tp 0>
new  <	mov qword [rbp + 136], strftime$267>

3078:
old  <	mov rsi, [rbp + 44]>
new  <	mov [rbp + 144], rbp>

3079:
old  <>
new  <	add rbp, 136>

3080:
old  < strftime$315:>
new  <	mov rdi, rbp>

3081:
old  <	; BinaryAdd Â£temporary2975 Â£temporary2974 -> tp 1900>
new  <	add rdi, 4>

3082:
old  <	mov eax, [rsi + 20]>
new  <	jmp sprintf>

3083:
old  <	add eax, 1900>
new  <>

3084:
old  <>
new  < strftime$267:>

3085:
old  < strftime$316:>
new  <	; PostCall 136>

3086:
old  <	; Parameter signedint Â£temporary2975 176>
new  <>

3087:
old  <	mov [rbp + 176], eax>
new  < strftime$268:>

3088:
old  <>
new  <	; Goto 334>

3089:
old  < strftime$317:>
new  <	jmp strftime$334>

3090:
old  <	; Call sprintf 136 4>
new  <>

3091:
old  <	mov qword [rbp + 136], strftime$318>
new  < strftime$269:>

3092:
old  <	mov [rbp + 144], rbp>
new  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3093:
old  <	add rbp, 136>
new  <>

3094:
old  <	mov rdi, rbp>
new  < strftime$270:>

3095:
old  <	add rdi, 4>
new  <	; Parameter pointer add 160>

3096:
old  <	jmp sprintf>
new  <	mov [rbp + 160], rbp>

3097:
old  <>
new  <	add qword [rbp + 160], 116>

3098:
old  < strftime$318:>
new  <>

3099:
old  <	; PostCall 136>
new  < strftime$271:>

3100:
old  <>
new  <	; Parameter pointer "%d" 168>

3101:
old  < strftime$319:>
new  <	mov qword [rbp + 168], string_25d#>

3102:
old  <	; Goto 339>
new  <>

3103:
old  <	jmp strftime$339>
new  < strftime$272:>

3104:
old  <>
new  <	; Parameter signedint yearDayMonday 176>

3105:
old  < strftime$320:>
new  <	mov eax, [rbp + 108]>

3106:
old  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov [rbp + 176], eax>

3108:
old  < strftime$321:>
new  < strftime$273:>

3109:
old  <	; Parameter pointer add 160>
new  <	; Call sprintf 136 4>

3110:
old  <	mov [rbp + 160], rbp>
new  <	mov qword [rbp + 136], strftime$274>

3111:
old  <	add qword [rbp + 160], 116>
new  <	mov [rbp + 144], rbp>

3112:
old  <>
new  <	add rbp, 136>

3113:
old  < strftime$322:>
new  <	mov rdi, rbp>

3114:
old  <	; Parameter pointer "" 168>
new  <	add rdi, 4>

3115:
old  <	mov qword [rbp + 168], string_#>
new  <	jmp sprintf>

3117:
old  < strftime$323:>
new  < strftime$274:>

3118:
old  <	; Call strcpy 136 0>
new  <	; PostCall 136>

3119:
old  <	mov qword [rbp + 136], strftime$324>
new  <>

3120:
old  <	mov [rbp + 144], rbp>
new  < strftime$275:>

3121:
old  <	add rbp, 136>
new  <	; Goto 334>

3122:
old  <	jmp strcpy>
new  <	jmp strftime$334>

3124:
old  < strftime$324:>
new  < strftime$276:>

3125:
old  <	; PostCall 136>
new  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3127:
old  < strftime$325:>
new  < strftime$277:>

3128:
old  <	; Goto 339>
new  <	; Parameter pointer add 160>

3129:
old  <	jmp strftime$339>
new  <	mov [rbp + 160], rbp>

3130:
old  <>
new  <	add qword [rbp + 160], 116>

3131:
old  < strftime$326:>
new  <>

3132:
old  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < strftime$278:>

3133:
old  <>
new  <	; Parameter pointer "%d:%d:%d" 168>

3134:
old  < strftime$327:>
new  <	mov qword [rbp + 168], string_25d3A25d3A25d#>

3135:
old  <	; Parameter pointer add 160>
new  <>

3136:
old  <	mov [rbp + 160], rbp>
new  < strftime$279:>

3137:
old  <	add qword [rbp + 160], 116>
new  <	; Dereference Â£temporary2971 -> tp tp 0>

3138:
old  <>
new  <	mov rsi, [rbp + 44]>

3139:
old  < strftime$328:>
new  <>

3140:
old  <	; Parameter pointer "%" 168>
new  < strftime$280:>

3141:
old  <	mov qword [rbp + 168], string_25#>
new  <	; Parameter signedint Â£temporary2971 -> tp 176>

3142:
old  <>
new  <	mov eax, [rsi + 8]>

3143:
old  < strftime$329:>
new  <	mov [rbp + 176], eax>

3144:
old  <	; Call strcpy 136 0>
new  <>

3145:
old  <	mov qword [rbp + 136], strftime$330>
new  < strftime$281:>

3146:
old  <	mov [rbp + 144], rbp>
new  <	; Dereference Â£temporary2972 -> tp tp 0>

3147:
old  <	add rbp, 136>
new  <	mov rsi, [rbp + 44]>

3148:
old  <	jmp strcpy>
new  <>

3149:
old  <>
new  < strftime$282:>

3150:
old  < strftime$330:>
new  <	; Parameter signedint Â£temporary2972 -> tp 180>

3151:
old  <	; PostCall 136>
new  <	mov eax, [rsi + 4]>

3152:
old  <>
new  <	mov [rbp + 180], eax>

3153:
old  < strftime$331:>
new  <>

3154:
old  <	; Goto 339>
new  < strftime$283:>

3155:
old  <	jmp strftime$339>
new  <	; Dereference Â£temporary2973 -> tp tp 0>

3156:
old  <>
new  <	mov rsi, [rbp + 44]>

3157:
old  < strftime$332:>
new  <>

3158:
old  <	; Dereference Â£temporary2979 -> add add 0>
new  < strftime$284:>

3159:
old  <	mov rsi, rbp>
new  <	; Parameter signedint Â£temporary2973 -> tp 184>

3160:
old  <	add rsi, 116>
new  <	mov eax, [rsi]>

3161:
old  <>
new  <	mov [rbp + 184], eax>

3162:
old  < strftime$333:>
new  <>

3163:
old  <	; IntegralToIntegral Â£temporary2981 index>
new  < strftime$285:>

3164:
old  <	mov eax, [rbp + 112]>
new  <	; Call sprintf 136 12>

3165:
old  <	mov rbx, 4294967295>
new  <	mov qword [rbp + 136], strftime$286>

3166:
old  <	and rax, rbx>
new  <	mov [rbp + 144], rbp>

3167:
old  <>
new  <	add rbp, 136>

3168:
old  < strftime$334:>
new  <	mov rdi, rbp>

3169:
old  <	; BinaryAdd Â£temporary2983 fmt Â£temporary2981>
new  <	add rdi, 12>

3170:
old  <	mov rdi, [rbp + 36]>
new  <	jmp sprintf>

3171:
old  <	add rdi, rax>
new  <>

3172:
old  <>
new  < strftime$286:>

3173:
old  < strftime$335:>
new  <	; PostCall 136>

3174:
old  <	; Dereference Â£temporary2980 -> Â£temporary2983 Â£temporary2983 0>
new  <>

3175:
old  <>
new  < strftime$287:>

3176:
old  < strftime$336:>
new  <	; Goto 334>

3177:
old  <	; Assign Â£temporary2979 -> add Â£temporary2980 -> Â£temporary2983>
new  <	jmp strftime$334>

3178:
old  <	mov al, [rdi]>
new  <>

3179:
old  <	mov [rsi], al>
new  < strftime$288:>

3180:
old  <>
new  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3181:
old  < strftime$337:>
new  <>

3182:
old  <	; Dereference Â£temporary2984 -> add add 0>
new  < strftime$289:>

3183:
old  <	mov rsi, rbp>
new  <	; Parameter pointer add 160>

3184:
old  <	add rsi, 116>
new  <	mov [rbp + 160], rbp>

3185:
old  <>
new  <	add qword [rbp + 160], 116>

3186:
old  < strftime$338:>
new  <>

3187:
old  <	; Assign Â£temporary2984 -> add 0>
new  < strftime$290:>

3188:
old  <	mov byte [rsi + 1], 0>
new  <	; Parameter pointer "%d:%d:%d" 168>

3189:
old  <>
new  <	mov qword [rbp + 168], string_25d3A25d3A25d#>

3190:
old  < strftime$339:>
new  <>

3191:
old  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < strftime$291:>

3192:
old  <>
new  <	; Dereference Â£temporary2975 -> tp tp 0>

3193:
old  < strftime$340:>
new  <	mov rsi, [rbp + 44]>

3194:
old  <	; Parameter pointer s 160>
new  <>

3195:
old  <	mov rax, [rbp + 24]>
new  < strftime$292:>

3196:
old  <	mov [rbp + 160], rax>
new  <	; Parameter signedint Â£temporary2975 -> tp 176>

3197:
old  <>
new  <	mov eax, [rsi + 8]>

3198:
old  < strftime$341:>
new  <	mov [rbp + 176], eax>

3199:
old  <	; Call strlen 136 0>
new  <>

3200:
old  <	mov qword [rbp + 136], strftime$342>
new  < strftime$293:>

3201:
old  <	mov [rbp + 144], rbp>
new  <	; Dereference Â£temporary2976 -> tp tp 0>

3202:
old  <	add rbp, 136>
new  <	mov rsi, [rbp + 44]>

3203:
old  <	jmp strlen>
new  <>

3204:
old  <>
new  < strftime$294:>

3205:
old  < strftime$342:>
new  <	; Parameter signedint Â£temporary2976 -> tp 180>

3206:
old  <	; PostCall 136>
new  <	mov eax, [rsi + 4]>

3207:
old  <>
new  <	mov [rbp + 180], eax>

3208:
old  < strftime$343:>
new  <>

3209:
old  <	; GetReturnValue Â£temporary2985>
new  < strftime$295:>

3210:
old  <>
new  <	; Dereference Â£temporary2977 -> tp tp 0>

3211:
old  < strftime$344:>
new  <	mov rsi, [rbp + 44]>

3212:
old  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

3213:
old  <	mov [rbp + 136], ebx>
new  < strftime$296:>

3214:
old  <>
new  <	; Parameter signedint Â£temporary2977 -> tp 184>

3215:
old  < strftime$345:>
new  <	mov eax, [rsi]>

3216:
old  <	; Parameter pointer add 160>
new  <	mov [rbp + 184], eax>

3217:
old  <	mov [rbp + 164], rbp>
new  <>

3218:
old  <	add qword [rbp + 164], 116>
new  < strftime$297:>

3219:
old  <>
new  <	; Call sprintf 136 12>

3220:
old  < strftime$346:>
new  <	mov qword [rbp + 136], strftime$298>

3221:
old  <	; Call strlen 136 0>
new  <	mov [rbp + 144], rbp>

3222:
old  <	mov qword [rbp + 140], strftime$347>
new  <	add rbp, 136>

3223:
old  <	mov [rbp + 148], rbp>
new  <	mov rdi, rbp>

3224:
old  <	add rbp, 140>
new  <	add rdi, 12>

3225:
old  <	jmp strlen>
new  <	jmp sprintf>

3227:
old  < strftime$347:>
new  < strftime$298:>

3229:
old  <	mov ebx, [rbp + 136]>
new  <>

3230:
old  <	mov eax, ebx>
new  < strftime$299:>

3231:
old  <>
new  <	; Goto 334>

3232:
old  < strftime$348:>
new  <	jmp strftime$334>

3233:
old  <	; GetReturnValue Â£temporary2986>
new  <>

3234:
old  <>
new  < strftime$300:>

3235:
old  < strftime$349:>
new  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3236:
old  <	; BinaryAdd Â£temporary2987 Â£temporary2985 Â£temporary2986>
new  <>

3237:
old  <	add eax, ebx>
new  < strftime$301:>

3238:
old  <>
new  <	; Parameter pointer add 160>

3239:
old  < strftime$350:>
new  <	mov [rbp + 160], rbp>

3240:
old  <	; SignedGreaterThanEqual 358 Â£temporary2987 smax>
new  <	add qword [rbp + 160], 116>

3241:
old  <	cmp eax, [rbp + 32]>
new  <>

3242:
old  <	jge strftime$358>
new  < strftime$302:>

3243:
old  <>
new  <	; Parameter pointer "%d" 168>

3244:
old  < strftime$351:>
new  <	mov qword [rbp + 168], string_25d#>

3245:
old  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

3246:
old  <>
new  < strftime$303:>

3247:
old  < strftime$352:>
new  <	; Dereference Â£temporary2979 -> tp tp 0>

3248:
old  <	; Parameter pointer s 160>
new  <	mov rsi, [rbp + 44]>

3249:
old  <	mov rax, [rbp + 24]>
new  <>

3250:
old  <	mov [rbp + 160], rax>
new  < strftime$304:>

3251:
old  <>
new  <	; SignedModulo Â£temporary2980 Â£temporary2979 -> tp 100>

3252:
old  < strftime$353:>
new  <	mov eax, [rsi + 20]>

3253:
old  <	; Parameter pointer add 168>
new  <	xor edx, edx>

3254:
old  <	mov [rbp + 168], rbp>
new  <	idiv dword [int4$100#]>

3255:
old  <	add qword [rbp + 168], 116>
new  <>

3256:
old  <>
new  < strftime$305:>

3257:
old  < strftime$354:>
new  <	; Parameter signedint Â£temporary2980 176>

3258:
old  <	; Call strcat 136 0>
new  <	mov [rbp + 176], edx>

3259:
old  <	mov qword [rbp + 136], strftime$355>
new  <>

3260:
old  <	mov [rbp + 144], rbp>
new  < strftime$306:>

3261:
old  <	add rbp, 136>
new  <	; Call sprintf 136 4>

3262:
old  <	jmp strcat>
new  <	mov qword [rbp + 136], strftime$307>

3263:
old  <>
new  <	mov [rbp + 144], rbp>

3264:
old  < strftime$355:>
new  <	add rbp, 136>

3265:
old  <	; PostCall 136>
new  <	mov rdi, rbp>

3266:
old  <>
new  <	add rdi, 4>

3267:
old  < strftime$356:>
new  <	jmp sprintf>

3268:
old  <	; BinaryAdd index index 1>
new  <>

3269:
old  <	inc dword [rbp + 112]>
new  < strftime$307:>

3270:
old  <>
new  <	; PostCall 136>

3271:
old  < strftime$357:>
new  <>

3272:
old  <	; Goto 84>
new  < strftime$308:>

3273:
old  <	jmp strftime$84>
new  <	; Goto 334>

3274:
old  <>
new  <	jmp strftime$334>

3275:
old  < strftime$358:>
new  <>

3276:
old  <	; PreCall 112 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < strftime$309:>

3277:
old  <>
new  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3278:
old  < strftime$359:>
new  <>

3279:
old  <	; Parameter pointer s 136>
new  < strftime$310:>

3280:
old  <	mov rax, [rbp + 24]>
new  <	; Parameter pointer add 160>

3281:
old  <	mov [rbp + 136], rax>
new  <	mov [rbp + 160], rbp>

3282:
old  <>
new  <	add qword [rbp + 160], 116>

3283:
old  < strftime$360:>
new  <>

3284:
old  <	; Call strlen 112 0>
new  < strftime$311:>

3285:
old  <	mov qword [rbp + 112], strftime$361>
new  <	; Parameter pointer "%d" 168>

3286:
old  <	mov [rbp + 120], rbp>
new  <	mov qword [rbp + 168], string_25d#>

3287:
old  <	add rbp, 112>
new  <>

3288:
old  <	jmp strlen>
new  < strftime$312:>

3289:
old  <>
new  <	; Dereference Â£temporary2982 -> tp tp 0>

3290:
old  < strftime$361:>
new  <	mov rsi, [rbp + 44]>

3291:
old  <	; PostCall 112>
new  <>

3292:
old  <>
new  < strftime$313:>

3293:
old  < strftime$362:>
new  <	; BinaryAdd Â£temporary2983 Â£temporary2982 -> tp 1900>

3294:
old  <	; GetReturnValue Â£temporary2990>
new  <	mov eax, [rsi + 20]>

3295:
old  <>
new  <	add eax, 1900>

3296:
old  < strftime$363:>
new  <>

3297:
old  <	; Return Â£temporary2990>
new  < strftime$314:>

3298:
old  <	mov rax, [rbp]>
new  <	; Parameter signedint Â£temporary2983 176>

3299:
old  <	mov rdi, [rbp + 16]>
new  <	mov [rbp + 176], eax>

3300:
old  <	mov rbp, [rbp + 8]>
new  <>

3301:
old  <	jmp rax>
new  < strftime$315:>

3302:
old  <>
new  <	; Call sprintf 136 4>

3303:
old  < strftime$364:>
new  <	mov qword [rbp + 136], strftime$316>

3304:
old  <	; FunctionEnd strftime>
new  <	mov [rbp + 144], rbp>

String.asm
35:
old  <	; IntegralToIntegral Â£temporary2992 index>
new  <	; IntegralToIntegral Â£temporary3002 index>

41:
old  <	; BinaryAdd Â£temporary2994 source Â£temporary2992>
new  <	; BinaryAdd Â£temporary3004 source Â£temporary3002>

46:
old  <	; Dereference Â£temporary2991 -> Â£temporary2994 Â£temporary2994 0>
new  <	; Dereference Â£temporary3001 -> Â£temporary3004 Â£temporary3004 0>

49:
old  <	; Equal 14 Â£temporary2991 -> Â£temporary2994 0>
new  <	; Equal 14 Â£temporary3001 -> Â£temporary3004 0>

54:
old  <	; IntegralToIntegral Â£temporary2998 index>
new  <	; IntegralToIntegral Â£temporary3008 index>

60:
old  <	; BinaryAdd Â£temporary3000 target Â£temporary2998>
new  <	; BinaryAdd Â£temporary3010 target Â£temporary3008>

65:
old  <	; Dereference Â£temporary2997 -> Â£temporary3000 Â£temporary3000 0>
new  <	; Dereference Â£temporary3007 -> Â£temporary3010 Â£temporary3010 0>

68:
old  <	; IntegralToIntegral Â£temporary3002 index>
new  <	; IntegralToIntegral Â£temporary3012 index>

74:
old  <	; BinaryAdd Â£temporary3004 source Â£temporary3002>
new  <	; BinaryAdd Â£temporary3014 source Â£temporary3012>

79:
old  <	; Dereference Â£temporary3001 -> Â£temporary3004 Â£temporary3004 0>
new  <	; Dereference Â£temporary3011 -> Â£temporary3014 Â£temporary3014 0>

82:
old  <	; Assign Â£temporary2997 -> Â£temporary3000 Â£temporary3001 -> Â£temporary3004>
new  <	; Assign Â£temporary3007 -> Â£temporary3010 Â£temporary3011 -> Â£temporary3014>

95:
old  <	; IntegralToIntegral Â£temporary3006 index>
new  <	; IntegralToIntegral Â£temporary3016 index>

101:
old  <	; BinaryAdd Â£temporary3008 target Â£temporary3006>
new  <	; BinaryAdd Â£temporary3018 target Â£temporary3016>

106:
old  <	; Dereference Â£temporary3005 -> Â£temporary3008 Â£temporary3008 0>
new  <	; Dereference Â£temporary3015 -> Â£temporary3018 Â£temporary3018 0>

109:
old  <	; Assign Â£temporary3005 -> Â£temporary3008 0>
new  <	; Assign Â£temporary3015 -> Â£temporary3018 0>

136:
old  <	; IntegralToIntegral Â£temporary3011 index>
new  <	; IntegralToIntegral Â£temporary3021 index>

142:
old  <	; BinaryAdd Â£temporary3013 source Â£temporary3011>
new  <	; BinaryAdd Â£temporary3023 source Â£temporary3021>

147:
old  <	; Dereference Â£temporary3010 -> Â£temporary3013 Â£temporary3013 0>
new  <	; Dereference Â£temporary3020 -> Â£temporary3023 Â£temporary3023 0>

150:
old  <	; Equal 15 Â£temporary3010 -> Â£temporary3013 0>
new  <	; Equal 15 Â£temporary3020 -> Â£temporary3023 0>

155:
old  <	; IntegralToIntegral Â£temporary3018 index>
new  <	; IntegralToIntegral Â£temporary3028 index>

161:
old  <	; BinaryAdd Â£temporary3020 target Â£temporary3018>
new  <	; BinaryAdd Â£temporary3030 target Â£temporary3028>

166:
old  <	; Dereference Â£temporary3017 -> Â£temporary3020 Â£temporary3020 0>
new  <	; Dereference Â£temporary3027 -> Â£temporary3030 Â£temporary3030 0>

169:
old  <	; IntegralToIntegral Â£temporary3022 index>
new  <	; IntegralToIntegral Â£temporary3032 index>

175:
old  <	; BinaryAdd Â£temporary3024 source Â£temporary3022>
new  <	; BinaryAdd Â£temporary3034 source Â£temporary3032>

180:
old  <	; Dereference Â£temporary3021 -> Â£temporary3024 Â£temporary3024 0>
new  <	; Dereference Â£temporary3031 -> Â£temporary3034 Â£temporary3034 0>

183:
old  <	; Assign Â£temporary3017 -> Â£temporary3020 Â£temporary3021 -> Â£temporary3024>
new  <	; Assign Â£temporary3027 -> Â£temporary3030 Â£temporary3031 -> Â£temporary3034>

202:
old  <	; IntegralToIntegral Â£temporary3028 index>
new  <	; IntegralToIntegral Â£temporary3038 index>

208:
old  <	; BinaryAdd Â£temporary3030 target Â£temporary3028>
new  <	; BinaryAdd Â£temporary3040 target Â£temporary3038>

213:
old  <	; Dereference Â£temporary3027 -> Â£temporary3030 Â£temporary3030 0>
new  <	; Dereference Â£temporary3037 -> Â£temporary3040 Â£temporary3040 0>

216:
old  <	; Assign Â£temporary3027 -> Â£temporary3030 0>
new  <	; Assign Â£temporary3037 -> Â£temporary3040 0>

259:
old  <	; GetReturnValue Â£temporary3031>
new  <	; GetReturnValue Â£temporary3041>

262:
old  <	; Assign targetLength Â£temporary3031>
new  <	; Assign targetLength Â£temporary3041>

270:
old  <	; IntegralToIntegral Â£temporary3033 index>
new  <	; IntegralToIntegral Â£temporary3043 index>

276:
old  <	; BinaryAdd Â£temporary3035 source Â£temporary3033>
new  <	; BinaryAdd Â£temporary3045 source Â£temporary3043>

281:
old  <	; Dereference Â£temporary3032 -> Â£temporary3035 Â£temporary3035 0>
new  <	; Dereference Â£temporary3042 -> Â£temporary3045 Â£temporary3045 0>

284:
old  <	; Equal 21 Â£temporary3032 -> Â£temporary3035 0>
new  <	; Equal 21 Â£temporary3042 -> Â£temporary3045 0>

289:
old  <	; BinaryAdd Â£temporary3038 targetLength index>
new  <	; BinaryAdd Â£temporary3048 targetLength index>

294:
old  <	; IntegralToIntegral Â£temporary3040 Â£temporary3038>
new  <	; IntegralToIntegral Â£temporary3050 Â£temporary3048>

299:
old  <	; BinaryAdd Â£temporary3042 target Â£temporary3040>
new  <	; BinaryAdd Â£temporary3052 target Â£temporary3050>

304:
old  <	; Dereference Â£temporary3039 -> Â£temporary3042 Â£temporary3042 0>
new  <	; Dereference Â£temporary3049 -> Â£temporary3052 Â£temporary3052 0>

307:
old  <	; IntegralToIntegral Â£temporary3044 index>
new  <	; IntegralToIntegral Â£temporary3054 index>

313:
old  <	; BinaryAdd Â£temporary3046 source Â£temporary3044>
new  <	; BinaryAdd Â£temporary3056 source Â£temporary3054>

318:
old  <	; Dereference Â£temporary3043 -> Â£temporary3046 Â£temporary3046 0>
new  <	; Dereference Â£temporary3053 -> Â£temporary3056 Â£temporary3056 0>

321:
old  <	; Assign Â£temporary3039 -> Â£temporary3042 Â£temporary3043 -> Â£temporary3046>
new  <	; Assign Â£temporary3049 -> Â£temporary3052 Â£temporary3053 -> Â£temporary3056>

334:
old  <	; BinaryAdd Â£temporary3047 targetLength index>
new  <	; BinaryAdd Â£temporary3057 targetLength index>

339:
old  <	; IntegralToIntegral Â£temporary3049 Â£temporary3047>
new  <	; IntegralToIntegral Â£temporary3059 Â£temporary3057>

344:
old  <	; BinaryAdd Â£temporary3051 target Â£temporary3049>
new  <	; BinaryAdd Â£temporary3061 target Â£temporary3059>

349:
old  <	; Dereference Â£temporary3048 -> Â£temporary3051 Â£temporary3051 0>
new  <	; Dereference Â£temporary3058 -> Â£temporary3061 Â£temporary3061 0>

352:
old  <	; Assign Â£temporary3048 -> Â£temporary3051 0>
new  <	; Assign Â£temporary3058 -> Â£temporary3061 0>

387:
old  <	; GetReturnValue Â£temporary3052>
new  <	; GetReturnValue Â£temporary3062>

390:
old  <	; Assign targetLength Â£temporary3052>
new  <	; Assign targetLength Â£temporary3062>

398:
old  <	; BinarySubtract Â£temporary3053 size 1>
new  <	; BinarySubtract Â£temporary3063 size 1>

403:
old  <	; SignedGreaterThanEqual 23 index Â£temporary3053>
new  <	; SignedGreaterThanEqual 23 index Â£temporary3063>

408:
old  <	; IntegralToIntegral Â£temporary3056 index>
new  <	; IntegralToIntegral Â£temporary3066 index>

414:
old  <	; BinaryAdd Â£temporary3058 source Â£temporary3056>
new  <	; BinaryAdd Â£temporary3068 source Â£temporary3066>

419:
old  <	; Dereference Â£temporary3055 -> Â£temporary3058 Â£temporary3058 0>
new  <	; Dereference Â£temporary3065 -> Â£temporary3068 Â£temporary3068 0>

422:
old  <	; Equal 23 Â£temporary3055 -> Â£temporary3058 0>
new  <	; Equal 23 Â£temporary3065 -> Â£temporary3068 0>

427:
old  <	; BinaryAdd Â£temporary3062 targetLength index>
new  <	; BinaryAdd Â£temporary3072 targetLength index>

432:
old  <	; IntegralToIntegral Â£temporary3064 Â£temporary3062>
new  <	; IntegralToIntegral Â£temporary3074 Â£temporary3072>

437:
old  <	; BinaryAdd Â£temporary3066 target Â£temporary3064>
new  <	; BinaryAdd Â£temporary3076 target Â£temporary3074>

442:
old  <	; Dereference Â£temporary3063 -> Â£temporary3066 Â£temporary3066 0>
new  <	; Dereference Â£temporary3073 -> Â£temporary3076 Â£temporary3076 0>

445:
old  <	; IntegralToIntegral Â£temporary3068 index>
new  <	; IntegralToIntegral Â£temporary3078 index>

451:
old  <	; BinaryAdd Â£temporary3070 source Â£temporary3068>
new  <	; BinaryAdd Â£temporary3080 source Â£temporary3078>

456:
old  <	; Dereference Â£temporary3067 -> Â£temporary3070 Â£temporary3070 0>
new  <	; Dereference Â£temporary3077 -> Â£temporary3080 Â£temporary3080 0>

459:
old  <	; Assign Â£temporary3063 -> Â£temporary3066 Â£temporary3067 -> Â£temporary3070>
new  <	; Assign Â£temporary3073 -> Â£temporary3076 Â£temporary3077 -> Â£temporary3080>

472:
old  <	; BinaryAdd Â£temporary3071 targetLength size>
new  <	; BinaryAdd Â£temporary3081 targetLength size>

477:
old  <	; BinarySubtract Â£temporary3072 Â£temporary3071 1>
new  <	; BinarySubtract Â£temporary3082 Â£temporary3081 1>

481:
old  <	; IntegralToIntegral Â£temporary3074 Â£temporary3072>
new  <	; IntegralToIntegral Â£temporary3084 Â£temporary3082>

486:
old  <	; BinaryAdd Â£temporary3076 target Â£temporary3074>
new  <	; BinaryAdd Â£temporary3086 target Â£temporary3084>

491:
old  <	; Dereference Â£temporary3073 -> Â£temporary3076 Â£temporary3076 0>
new  <	; Dereference Â£temporary3083 -> Â£temporary3086 Â£temporary3086 0>

494:
old  <	; Assign Â£temporary3073 -> Â£temporary3076 0>
new  <	; Assign Â£temporary3083 -> Â£temporary3086 0>

515:
old  <	; IntegralToIntegral Â£temporary3079 index>
new  <	; IntegralToIntegral Â£temporary3089 index>

521:
old  <	; BinaryAdd Â£temporary3081 left Â£temporary3079>
new  <	; BinaryAdd Â£temporary3091 left Â£temporary3089>

526:
old  <	; Dereference Â£temporary3078 -> Â£temporary3081 Â£temporary3081 0>
new  <	; Dereference Â£temporary3088 -> Â£temporary3091 Â£temporary3091 0>

529:
old  <	; NotEqual 10 Â£temporary3078 -> Â£temporary3081 0>
new  <	; NotEqual 10 Â£temporary3088 -> Â£temporary3091 0>

534:
old  <	; IntegralToIntegral Â£temporary3084 index>
new  <	; IntegralToIntegral Â£temporary3094 index>

540:
old  <	; BinaryAdd Â£temporary3086 right Â£temporary3084>
new  <	; BinaryAdd Â£temporary3096 right Â£temporary3094>

545:
old  <	; Dereference Â£temporary3083 -> Â£temporary3086 Â£temporary3086 0>
new  <	; Dereference Â£temporary3093 -> Â£temporary3096 Â£temporary3096 0>

548:
old  <	; NotEqual 10 Â£temporary3083 -> Â£temporary3086 0>
new  <	; NotEqual 10 Â£temporary3093 -> Â£temporary3096 0>

561:
old  <	; IntegralToIntegral Â£temporary3090 index>
new  <	; IntegralToIntegral Â£temporary3100 index>

567:
old  <	; BinaryAdd Â£temporary3092 left Â£temporary3090>
new  <	; BinaryAdd Â£temporary3102 left Â£temporary3100>

572:
old  <	; Dereference Â£temporary3089 -> Â£temporary3092 Â£temporary3092 0>
new  <	; Dereference Â£temporary3099 -> Â£temporary3102 Â£temporary3102 0>

575:
old  <	; NotEqual 15 Â£temporary3089 -> Â£temporary3092 0>
new  <	; NotEqual 15 Â£temporary3099 -> Â£temporary3102 0>

588:
old  <	; IntegralToIntegral Â£temporary3095 index>
new  <	; IntegralToIntegral Â£temporary3105 index>

594:
old  <	; BinaryAdd Â£temporary3097 right Â£temporary3095>
new  <	; BinaryAdd Â£temporary3107 right Â£temporary3105>

599:
old  <	; Dereference Â£temporary3094 -> Â£temporary3097 Â£temporary3097 0>
new  <	; Dereference Â£temporary3104 -> Â£temporary3107 Â£temporary3107 0>

602:
old  <	; NotEqual 20 Â£temporary3094 -> Â£temporary3097 0>
new  <	; NotEqual 20 Â£temporary3104 -> Â£temporary3107 0>

615:
old  <	; IntegralToIntegral Â£temporary3100 index>
new  <	; IntegralToIntegral Â£temporary3110 index>

621:
old  <	; BinaryAdd Â£temporary3102 left Â£temporary3100>
new  <	; BinaryAdd Â£temporary3112 left Â£temporary3110>

626:
old  <	; Dereference Â£temporary3099 -> Â£temporary3102 Â£temporary3102 0>
new  <	; Dereference Â£temporary3109 -> Â£temporary3112 Â£temporary3112 0>

629:
old  <	; IntegralToIntegral Â£temporary3104 index>
new  <	; IntegralToIntegral Â£temporary3114 index>

635:
old  <	; BinaryAdd Â£temporary3106 right Â£temporary3104>
new  <	; BinaryAdd Â£temporary3116 right Â£temporary3114>

640:
old  <	; Dereference Â£temporary3103 -> Â£temporary3106 Â£temporary3106 0>
new  <	; Dereference Â£temporary3113 -> Â£temporary3116 Â£temporary3116 0>

643:
old  <	; SignedGreaterThanEqual 28 Â£temporary3099 -> Â£temporary3102 Â£temporary3103 -> Â£temporary3106>
new  <	; SignedGreaterThanEqual 28 Â£temporary3109 -> Â£temporary3112 Â£temporary3113 -> Â£temporary3116>

657:
old  <	; IntegralToIntegral Â£temporary3109 index>
new  <	; IntegralToIntegral Â£temporary3119 index>

663:
old  <	; BinaryAdd Â£temporary3111 left Â£temporary3109>
new  <	; BinaryAdd Â£temporary3121 left Â£temporary3119>

668:
old  <	; Dereference Â£temporary3108 -> Â£temporary3111 Â£temporary3111 0>
new  <	; Dereference Â£temporary3118 -> Â£temporary3121 Â£temporary3121 0>

671:
old  <	; IntegralToIntegral Â£temporary3113 index>
new  <	; IntegralToIntegral Â£temporary3123 index>

677:
old  <	; BinaryAdd Â£temporary3115 right Â£temporary3113>
new  <	; BinaryAdd Â£temporary3125 right Â£temporary3123>

682:
old  <	; Dereference Â£temporary3112 -> Â£temporary3115 Â£temporary3115 0>
new  <	; Dereference Â£temporary3122 -> Â£temporary3125 Â£temporary3125 0>

685:
old  <	; SignedLessThanEqual 36 Â£temporary3108 -> Â£temporary3111 Â£temporary3112 -> Â£temporary3115>
new  <	; SignedLessThanEqual 36 Â£temporary3118 -> Â£temporary3121 Â£temporary3122 -> Â£temporary3125>

722:
old  <	; IntegralToIntegral Â£temporary3121 index>
new  <	; IntegralToIntegral Â£temporary3131 index>

728:
old  <	; BinaryAdd Â£temporary3123 left Â£temporary3121>
new  <	; BinaryAdd Â£temporary3133 left Â£temporary3131>

733:
old  <	; Dereference Â£temporary3120 -> Â£temporary3123 Â£temporary3123 0>
new  <	; Dereference Â£temporary3130 -> Â£temporary3133 Â£temporary3133 0>

736:
old  <	; NotEqual 11 Â£temporary3120 -> Â£temporary3123 0>
new  <	; NotEqual 11 Â£temporary3130 -> Â£temporary3133 0>

741:
old  <	; IntegralToIntegral Â£temporary3126 index>
new  <	; IntegralToIntegral Â£temporary3136 index>

747:
old  <	; BinaryAdd Â£temporary3128 right Â£temporary3126>
new  <	; BinaryAdd Â£temporary3138 right Â£temporary3136>

752:
old  <	; Dereference Â£temporary3125 -> Â£temporary3128 Â£temporary3128 0>
new  <	; Dereference Â£temporary3135 -> Â£temporary3138 Â£temporary3138 0>

755:
old  <	; NotEqual 11 Â£temporary3125 -> Â£temporary3128 0>
new  <	; NotEqual 11 Â£temporary3135 -> Â£temporary3138 0>

768:
old  <	; IntegralToIntegral Â£temporary3132 index>
new  <	; IntegralToIntegral Â£temporary3142 index>

774:
old  <	; BinaryAdd Â£temporary3134 left Â£temporary3132>
new  <	; BinaryAdd Â£temporary3144 left Â£temporary3142>

779:
old  <	; Dereference Â£temporary3131 -> Â£temporary3134 Â£temporary3134 0>
new  <	; Dereference Â£temporary3141 -> Â£temporary3144 Â£temporary3144 0>

782:
old  <	; NotEqual 16 Â£temporary3131 -> Â£temporary3134 0>
new  <	; NotEqual 16 Â£temporary3141 -> Â£temporary3144 0>

795:
old  <	; IntegralToIntegral Â£temporary3137 index>
new  <	; IntegralToIntegral Â£temporary3147 index>

801:
old  <	; BinaryAdd Â£temporary3139 right Â£temporary3137>
new  <	; BinaryAdd Â£temporary3149 right Â£temporary3147>

806:
old  <	; Dereference Â£temporary3136 -> Â£temporary3139 Â£temporary3139 0>
new  <	; Dereference Â£temporary3146 -> Â£temporary3149 Â£temporary3149 0>

809:
old  <	; NotEqual 21 Â£temporary3136 -> Â£temporary3139 0>
new  <	; NotEqual 21 Â£temporary3146 -> Â£temporary3149 0>

822:
old  <	; IntegralToIntegral Â£temporary3142 index>
new  <	; IntegralToIntegral Â£temporary3152 index>

828:
old  <	; BinaryAdd Â£temporary3144 left Â£temporary3142>
new  <	; BinaryAdd Â£temporary3154 left Â£temporary3152>

833:
old  <	; Dereference Â£temporary3141 -> Â£temporary3144 Â£temporary3144 0>
new  <	; Dereference Â£temporary3151 -> Â£temporary3154 Â£temporary3154 0>

836:
old  <	; IntegralToIntegral Â£temporary3146 index>
new  <	; IntegralToIntegral Â£temporary3156 index>

842:
old  <	; BinaryAdd Â£temporary3148 right Â£temporary3146>
new  <	; BinaryAdd Â£temporary3158 right Â£temporary3156>

847:
old  <	; Dereference Â£temporary3145 -> Â£temporary3148 Â£temporary3148 0>
new  <	; Dereference Â£temporary3155 -> Â£temporary3158 Â£temporary3158 0>

850:
old  <	; SignedGreaterThanEqual 29 Â£temporary3141 -> Â£temporary3144 Â£temporary3145 -> Â£temporary3148>
new  <	; SignedGreaterThanEqual 29 Â£temporary3151 -> Â£temporary3154 Â£temporary3155 -> Â£temporary3158>

864:
old  <	; IntegralToIntegral Â£temporary3151 index>
new  <	; IntegralToIntegral Â£temporary3161 index>

870:
old  <	; BinaryAdd Â£temporary3153 left Â£temporary3151>
new  <	; BinaryAdd Â£temporary3163 left Â£temporary3161>

875:
old  <	; Dereference Â£temporary3150 -> Â£temporary3153 Â£temporary3153 0>
new  <	; Dereference Â£temporary3160 -> Â£temporary3163 Â£temporary3163 0>

878:
old  <	; IntegralToIntegral Â£temporary3155 index>
new  <	; IntegralToIntegral Â£temporary3165 index>

884:
old  <	; BinaryAdd Â£temporary3157 right Â£temporary3155>
new  <	; BinaryAdd Â£temporary3167 right Â£temporary3165>

889:
old  <	; Dereference Â£temporary3154 -> Â£temporary3157 Â£temporary3157 0>
new  <	; Dereference Â£temporary3164 -> Â£temporary3167 Â£temporary3167 0>

892:
old  <	; SignedLessThanEqual 37 Â£temporary3150 -> Â£temporary3153 Â£temporary3154 -> Â£temporary3157>
new  <	; SignedLessThanEqual 37 Â£temporary3160 -> Â£temporary3163 Â£temporary3164 -> Â£temporary3167>

927:
old  <	; IntegralToIntegral Â£temporary3159 i>
new  <	; IntegralToIntegral Â£temporary3169 i>

935:
old  <	; Assign c Â£temporary3159>
new  <	; Assign c Â£temporary3169>

943:
old  <	; IntegralToIntegral Â£temporary3161 index>
new  <	; IntegralToIntegral Â£temporary3171 index>

949:
old  <	; BinaryAdd Â£temporary3163 text Â£temporary3161>
new  <	; BinaryAdd Â£temporary3173 text Â£temporary3171>

954:
old  <	; Dereference Â£temporary3160 -> Â£temporary3163 Â£temporary3163 0>
new  <	; Dereference Â£temporary3170 -> Â£temporary3173 Â£temporary3173 0>

957:
old  <	; Equal 18 Â£temporary3160 -> Â£temporary3163 0>
new  <	; Equal 18 Â£temporary3170 -> Â£temporary3173 0>

962:
old  <	; IntegralToIntegral Â£temporary3167 index>
new  <	; IntegralToIntegral Â£temporary3177 index>

968:
old  <	; BinaryAdd Â£temporary3169 text Â£temporary3167>
new  <	; BinaryAdd Â£temporary3179 text Â£temporary3177>

973:
old  <	; Dereference Â£temporary3166 -> Â£temporary3169 Â£temporary3169 0>
new  <	; Dereference Â£temporary3176 -> Â£temporary3179 Â£temporary3179 0>

976:
old  <	; NotEqual 16 Â£temporary3166 -> Â£temporary3169 c>
new  <	; NotEqual 16 Â£temporary3176 -> Â£temporary3179 c>

982:
old  <	; IntegralToIntegral Â£temporary3172 index>
new  <	; IntegralToIntegral Â£temporary3182 index>

988:
old  <	; BinaryAdd Â£temporary3174 text Â£temporary3172>
new  <	; BinaryAdd Â£temporary3184 text Â£temporary3182>

993:
old  <	; Dereference Â£temporary3171 -> Â£temporary3174 Â£temporary3174 0>
new  <	; Dereference Â£temporary3181 -> Â£temporary3184 Â£temporary3184 0>

996:
old  <	; Address Â£temporary3175 Â£temporary3171 -> Â£temporary3174>
new  <	; Address Â£temporary3185 Â£temporary3181 -> Â£temporary3184>

999:
old  <	; Return Â£temporary3175>
new  <	; Return Â£temporary3185>

1031:
old  <	; IntegralToIntegral Â£temporary3176 i>
new  <	; IntegralToIntegral Â£temporary3186 i>

1039:
old  <	; Assign c Â£temporary3176>
new  <	; Assign c Â£temporary3186>

1047:
old  <	; IntegralToIntegral Â£temporary3178 index>
new  <	; IntegralToIntegral Â£temporary3188 index>

1053:
old  <	; BinaryAdd Â£temporary3180 text Â£temporary3178>
new  <	; BinaryAdd Â£temporary3190 text Â£temporary3188>

1058:
old  <	; Dereference Â£temporary3177 -> Â£temporary3180 Â£temporary3180 0>
new  <	; Dereference Â£temporary3187 -> Â£temporary3190 Â£temporary3190 0>

1061:
old  <	; Equal 19 Â£temporary3177 -> Â£temporary3180 0>
new  <	; Equal 19 Â£temporary3187 -> Â£temporary3190 0>

1066:
old  <	; IntegralToIntegral Â£temporary3184 index>
new  <	; IntegralToIntegral Â£temporary3194 index>

1072:
old  <	; BinaryAdd Â£temporary3186 text Â£temporary3184>
new  <	; BinaryAdd Â£temporary3196 text Â£temporary3194>

1077:
old  <	; Dereference Â£temporary3183 -> Â£temporary3186 Â£temporary3186 0>
new  <	; Dereference Â£temporary3193 -> Â£temporary3196 Â£temporary3196 0>

1080:
old  <	; NotEqual 17 Â£temporary3183 -> Â£temporary3186 c>
new  <	; NotEqual 17 Â£temporary3193 -> Â£temporary3196 c>

1086:
old  <	; IntegralToIntegral Â£temporary3189 index>
new  <	; IntegralToIntegral Â£temporary3199 index>

1092:
old  <	; BinaryAdd Â£temporary3191 text Â£temporary3189>
new  <	; BinaryAdd Â£temporary3201 text Â£temporary3199>

1097:
old  <	; Dereference Â£temporary3188 -> Â£temporary3191 Â£temporary3191 0>
new  <	; Dereference Â£temporary3198 -> Â£temporary3201 Â£temporary3201 0>

1100:
old  <	; Address Â£temporary3192 Â£temporary3188 -> Â£temporary3191>
new  <	; Address Â£temporary3202 Â£temporary3198 -> Â£temporary3201>

1103:
old  <	; Assign result Â£temporary3192>
new  <	; Assign result Â£temporary3202>

1132:
old  <	; IntegralToIntegral Â£temporary3194 index>
new  <	; IntegralToIntegral Â£temporary3204 index>

1138:
old  <	; BinaryAdd Â£temporary3196 mainString Â£temporary3194>
new  <	; BinaryAdd Â£temporary3206 mainString Â£temporary3204>

1143:
old  <	; Dereference Â£temporary3193 -> Â£temporary3196 Â£temporary3196 0>
new  <	; Dereference Â£temporary3203 -> Â£temporary3206 Â£temporary3206 0>

1146:
old  <	; Equal 19 Â£temporary3193 -> Â£temporary3196 0>
new  <	; Equal 19 Â£temporary3203 -> Â£temporary3206 0>

1159:
old  <	; IntegralToIntegral Â£temporary3200 index>
new  <	; IntegralToIntegral Â£temporary3210 index>

1165:
old  <	; BinaryAdd Â£temporary3202 mainString Â£temporary3200>
new  <	; BinaryAdd Â£temporary3212 mainString Â£temporary3210>

1170:
old  <	; Dereference Â£temporary3199 -> Â£temporary3202 Â£temporary3202 0>
new  <	; Dereference Â£temporary3209 -> Â£temporary3212 Â£temporary3212 0>

1173:
old  <	; IntegralToIntegral Â£temporary3203 Â£temporary3199 -> Â£temporary3202>
new  <	; IntegralToIntegral Â£temporary3213 Â£temporary3209 -> Â£temporary3212>

1182:
old  <	; Parameter signedint Â£temporary3203 76>
new  <	; Parameter signedint Â£temporary3213 76>

1196:
old  <	; GetReturnValue Â£temporary3204>
new  <	; GetReturnValue Â£temporary3214>

1199:
old  <	; NotEqual 17 Â£temporary3204 0>
new  <	; NotEqual 17 Â£temporary3214 0>

1237:
old  <	; IntegralToIntegral Â£temporary3207 index>
new  <	; IntegralToIntegral Â£temporary3217 index>

1243:
old  <	; BinaryAdd Â£temporary3209 mainString Â£temporary3207>
new  <	; BinaryAdd Â£temporary3219 mainString Â£temporary3217>

1248:
old  <	; Dereference Â£temporary3206 -> Â£temporary3209 Â£temporary3209 0>
new  <	; Dereference Â£temporary3216 -> Â£temporary3219 Â£temporary3219 0>

1251:
old  <	; Equal 19 Â£temporary3206 -> Â£temporary3209 0>
new  <	; Equal 19 Â£temporary3216 -> Â£temporary3219 0>

1264:
old  <	; IntegralToIntegral Â£temporary3213 index>
new  <	; IntegralToIntegral Â£temporary3223 index>

1270:
old  <	; BinaryAdd Â£temporary3215 mainString Â£temporary3213>
new  <	; BinaryAdd Â£temporary3225 mainString Â£temporary3223>

1275:
old  <	; Dereference Â£temporary3212 -> Â£temporary3215 Â£temporary3215 0>
new  <	; Dereference Â£temporary3222 -> Â£temporary3225 Â£temporary3225 0>

1278:
old  <	; IntegralToIntegral Â£temporary3216 Â£temporary3212 -> Â£temporary3215>
new  <	; IntegralToIntegral Â£temporary3226 Â£temporary3222 -> Â£temporary3225>

1287:
old  <	; Parameter signedint Â£temporary3216 76>
new  <	; Parameter signedint Â£temporary3226 76>

1301:
old  <	; GetReturnValue Â£temporary3217>
new  <	; GetReturnValue Â£temporary3227>

1304:
old  <	; Equal 17 Â£temporary3217 0>
new  <	; Equal 17 Â£temporary3227 0>

1342:
old  <	; IntegralToIntegral Â£temporary3220 index>
new  <	; IntegralToIntegral Â£temporary3230 index>

1348:
old  <	; BinaryAdd Â£temporary3222 mainString Â£temporary3220>
new  <	; BinaryAdd Â£temporary3232 mainString Â£temporary3230>

1353:
old  <	; Dereference Â£temporary3219 -> Â£temporary3222 Â£temporary3222 0>
new  <	; Dereference Â£temporary3229 -> Â£temporary3232 Â£temporary3232 0>

1356:
old  <	; Equal 23 Â£temporary3219 -> Â£temporary3222 0>
new  <	; Equal 23 Â£temporary3229 -> Â£temporary3232 0>

1369:
old  <	; IntegralToIntegral Â£temporary3226 index>
new  <	; IntegralToIntegral Â£temporary3236 index>

1375:
old  <	; BinaryAdd Â£temporary3228 mainString Â£temporary3226>
new  <	; BinaryAdd Â£temporary3238 mainString Â£temporary3236>

1380:
old  <	; Dereference Â£temporary3225 -> Â£temporary3228 Â£temporary3228 0>
new  <	; Dereference Â£temporary3235 -> Â£temporary3238 Â£temporary3238 0>

1383:
old  <	; IntegralToIntegral Â£temporary3229 Â£temporary3225 -> Â£temporary3228>
new  <	; IntegralToIntegral Â£temporary3239 Â£temporary3235 -> Â£temporary3238>

1392:
old  <	; Parameter signedint Â£temporary3229 76>
new  <	; Parameter signedint Â£temporary3239 76>

1406:
old  <	; GetReturnValue Â£temporary3230>
new  <	; GetReturnValue Â£temporary3240>

1409:
old  <	; Equal 21 Â£temporary3230 0>
new  <	; Equal 21 Â£temporary3240 0>

1414:
old  <	; IntegralToIntegral Â£temporary3233 index>
new  <	; IntegralToIntegral Â£temporary3243 index>

1420:
old  <	; BinaryAdd Â£temporary3235 mainString Â£temporary3233>
new  <	; BinaryAdd Â£temporary3245 mainString Â£temporary3243>

1425:
old  <	; Dereference Â£temporary3232 -> Â£temporary3235 Â£temporary3235 0>
new  <	; Dereference Â£temporary3242 -> Â£temporary3245 Â£temporary3245 0>

1428:
old  <	; Address Â£temporary3236 Â£temporary3232 -> Â£temporary3235>
new  <	; Address Â£temporary3246 Â£temporary3242 -> Â£temporary3245>

1431:
old  <	; Return Â£temporary3236>
new  <	; Return Â£temporary3246>

1463:
old  <	; IntegralToIntegral Â£temporary3238 index>
new  <	; IntegralToIntegral Â£temporary3248 index>

1469:
old  <	; BinaryAdd Â£temporary3240 mainString Â£temporary3238>
new  <	; BinaryAdd Â£temporary3250 mainString Â£temporary3248>

1474:
old  <	; Dereference Â£temporary3237 -> Â£temporary3240 Â£temporary3240 0>
new  <	; Dereference Â£temporary3247 -> Â£temporary3250 Â£temporary3250 0>

1477:
old  <	; Equal 21 Â£temporary3237 -> Â£temporary3240 0>
new  <	; Equal 21 Â£temporary3247 -> Â£temporary3250 0>

1485:
old  <	; IntegralToIntegral Â£temporary3243 index>
new  <	; IntegralToIntegral Â£temporary3253 index>

1491:
old  <	; BinaryAdd Â£temporary3244 mainString Â£temporary3243>
new  <	; BinaryAdd Â£temporary3254 mainString Â£temporary3253>

1496:
old  <	; Parameter pointer Â£temporary3244 68>
new  <	; Parameter pointer Â£temporary3254 68>

1515:
old  <	; GetReturnValue Â£temporary3246>
new  <	; GetReturnValue Â£temporary3256>

1518:
old  <	; NotEqual 19 Â£temporary3246 0>
new  <	; NotEqual 19 Â£temporary3256 0>

1523:
old  <	; IntegralToIntegral Â£temporary3249 index>
new  <	; IntegralToIntegral Â£temporary3259 index>

1529:
old  <	; BinaryAdd Â£temporary3251 mainString Â£temporary3249>
new  <	; BinaryAdd Â£temporary3261 mainString Â£temporary3259>

1534:
old  <	; Dereference Â£temporary3248 -> Â£temporary3251 Â£temporary3251 0>
new  <	; Dereference Â£temporary3258 -> Â£temporary3261 Â£temporary3261 0>

1537:
old  <	; Address Â£temporary3252 Â£temporary3248 -> Â£temporary3251>
new  <	; Address Â£temporary3262 Â£temporary3258 -> Â£temporary3261>

1540:
old  <	; Return Â£temporary3252>
new  <	; Return Â£temporary3262>

1572:
old  <	; IntegralToIntegral Â£temporary3254 index>
new  <	; IntegralToIntegral Â£temporary3264 index>

1578:
old  <	; BinaryAdd Â£temporary3256 string Â£temporary3254>
new  <	; BinaryAdd Â£temporary3266 string Â£temporary3264>

1583:
old  <	; Dereference Â£temporary3253 -> Â£temporary3256 Â£temporary3256 0>
new  <	; Dereference Â£temporary3263 -> Â£temporary3266 Â£temporary3266 0>

1586:
old  <	; Equal 7 Â£temporary3253 -> Â£temporary3256 0>
new  <	; Equal 7 Â£temporary3263 -> Â£temporary3266 0>

1631:
old  <	; GetReturnValue Â£temporary3259>
new  <	; GetReturnValue Â£temporary3269>

1634:
old  <	; Assign localeConvPtr Â£temporary3259>
new  <	; Assign localeConvPtr Â£temporary3269>

1643:
old  <	; Dereference Â£temporary3261 -> localeConvPtr localeConvPtr 0>
new  <	; Dereference Â£temporary3271 -> localeConvPtr localeConvPtr 0>

1647:
old  <	; Assign Â£temporary3262 Â£temporary3261 -> localeConvPtr>
new  <	; Assign Â£temporary3272 Â£temporary3271 -> localeConvPtr>

1655:
old  <	; Assign Â£temporary3262 0>
new  <	; Assign Â£temporary3272 0>

1659:
old  <	; Assign messageList Â£temporary3262>
new  <	; Assign messageList Â£temporary3272>

1668:
old  <	; Assign Â£temporary3264 messageList>
new  <	; Assign Â£temporary3274 messageList>

1676:
old  <	; Assign Â£temporary3264 enMessageList>
new  <	; Assign Â£temporary3274 enMessageList>

1680:
old  <	; Assign messageList Â£temporary3264>
new  <	; Assign messageList Â£temporary3274>

1684:
old  <	; IntegralToIntegral Â£temporary3266 errno>
new  <	; IntegralToIntegral Â£temporary3276 errno>

1690:
old  <	; UnsignedMultiply Â£temporary3267 Â£temporary3266 8>
new  <	; UnsignedMultiply Â£temporary3277 Â£temporary3276 8>

1695:
old  <	; BinaryAdd Â£temporary3268 messageList Â£temporary3267>
new  <	; BinaryAdd Â£temporary3278 messageList Â£temporary3277>

1700:
old  <	; Dereference Â£temporary3265 -> Â£temporary3268 Â£temporary3268 0>
new  <	; Dereference Â£temporary3275 -> Â£temporary3278 Â£temporary3278 0>

1703:
old  <	; Return Â£temporary3265 -> Â£temporary3268>
new  <	; Return Â£temporary3275 -> Â£temporary3278>

1727:
old  <	; Dereference Â£temporary3270 -> string string 0>
new  <	; Dereference Â£temporary3280 -> string string 0>

1731:
old  <	; NotEqual 4 Â£temporary3270 -> string 0>
new  <	; NotEqual 4 Â£temporary3280 -> string 0>

1748:
old  <	; IntegralToIntegral Â£temporary3273 index>
new  <	; IntegralToIntegral Â£temporary3283 index>

1754:
old  <	; BinaryAdd Â£temporary3275 string Â£temporary3273>
new  <	; BinaryAdd Â£temporary3285 string Â£temporary3283>

1759:
old  <	; Dereference Â£temporary3272 -> Â£temporary3275 Â£temporary3275 0>
new  <	; Dereference Â£temporary3282 -> Â£temporary3285 Â£temporary3285 0>

1762:
old  <	; Equal 33 Â£temporary3272 -> Â£temporary3275 0>
new  <	; Equal 33 Â£temporary3282 -> Â£temporary3285 0>

1775:
old  <	; IntegralToIntegral Â£temporary3279 index>
new  <	; IntegralToIntegral Â£temporary3289 index>

1781:
old  <	; BinaryAdd Â£temporary3281 string Â£temporary3279>
new  <	; BinaryAdd Â£temporary3291 string Â£temporary3289>

1786:
old  <	; Dereference Â£temporary3278 -> Â£temporary3281 Â£temporary3281 0>
new  <	; Dereference Â£temporary3288 -> Â£temporary3291 Â£temporary3291 0>

1789:
old  <	; IntegralToIntegral Â£temporary3282 Â£temporary3278 -> Â£temporary3281>
new  <	; IntegralToIntegral Â£temporary3292 Â£temporary3288 -> Â£temporary3291>

1798:
old  <	; Parameter signedint Â£temporary3282 84>
new  <	; Parameter signedint Â£temporary3292 84>

1812:
old  <	; GetReturnValue Â£temporary3283>
new  <	; GetReturnValue Â£temporary3293>

1815:
old  <	; Equal 31 Â£temporary3283 0>
new  <	; Equal 31 Â£temporary3293 0>

1820:
old  <	; IntegralToIntegral Â£temporary3286 index>
new  <	; IntegralToIntegral Â£temporary3296 index>

1826:
old  <	; BinaryAdd Â£temporary3288 string Â£temporary3286>
new  <	; BinaryAdd Â£temporary3298 string Â£temporary3296>

1831:
old  <	; Dereference Â£temporary3285 -> Â£temporary3288 Â£temporary3288 0>
new  <	; Dereference Â£temporary3295 -> Â£temporary3298 Â£temporary3298 0>

1834:
old  <	; Assign Â£temporary3285 -> Â£temporary3288 0>
new  <	; Assign Â£temporary3295 -> Â£temporary3298 0>

1838:
old  <	; BinaryAdd Â£temporary3289 index 1>
new  <	; BinaryAdd Â£temporary3299 index 1>

1843:
old  <	; IntegralToIntegral Â£temporary3291 Â£temporary3289>
new  <	; IntegralToIntegral Â£temporary3301 Â£temporary3299>

1848:
old  <	; BinaryAdd Â£temporary3293 string Â£temporary3291>
new  <	; BinaryAdd Â£temporary3303 string Â£temporary3301>

1853:
old  <	; Dereference Â£temporary3290 -> Â£temporary3293 Â£temporary3293 0>
new  <	; Dereference Â£temporary3300 -> Â£temporary3303 Â£temporary3303 0>

1856:
old  <	; Address Â£temporary3294 Â£temporary3290 -> Â£temporary3293>
new  <	; Address Â£temporary3304 Â£temporary3300 -> Â£temporary3303>

1859:
old  <	; Assign token Â£temporary3294>
new  <	; Assign token Â£temporary3304>

1879:
old  <	; IntegralToIntegral Â£temporary3296 index>
new  <	; IntegralToIntegral Â£temporary3306 index>

1885:
old  <	; BinaryAdd Â£temporary3298 string Â£temporary3296>
new  <	; BinaryAdd Â£temporary3308 string Â£temporary3306>

1890:
old  <	; Dereference Â£temporary3295 -> Â£temporary3298 Â£temporary3298 0>
new  <	; Dereference Â£temporary3305 -> Â£temporary3308 Â£temporary3308 0>

1893:
old  <	; Address Â£temporary3299 Â£temporary3295 -> Â£temporary3298>
new  <	; Address Â£temporary3309 Â£temporary3305 -> Â£temporary3308>

1896:
old  <	; Assign token Â£temporary3299>
new  <	; Assign token Â£temporary3309>

1921:
old  <	; Dereference Â£temporary3301 -> token token 0>
new  <	; Dereference Â£temporary3311 -> token token 0>

1925:
old  <	; NotEqual 44 Â£temporary3301 -> token 0>
new  <	; NotEqual 44 Â£temporary3311 -> token 0>

1942:
old  <	; IntegralToIntegral Â£temporary3304 index>
new  <	; IntegralToIntegral Â£temporary3314 index>

1948:
old  <	; BinaryAdd Â£temporary3306 token Â£temporary3304>
new  <	; BinaryAdd Â£temporary3316 token Â£temporary3314>

1953:
old  <	; Dereference Â£temporary3303 -> Â£temporary3306 Â£temporary3306 0>
new  <	; Dereference Â£temporary3313 -> Â£temporary3316 Â£temporary3316 0>

1956:
old  <	; Equal 74 Â£temporary3303 -> Â£temporary3306 0>
new  <	; Equal 74 Â£temporary3313 -> Â£temporary3316 0>

1969:
old  <	; IntegralToIntegral Â£temporary3310 index>
new  <	; IntegralToIntegral Â£temporary3320 index>

1975:
old  <	; BinaryAdd Â£temporary3312 token Â£temporary3310>
new  <	; BinaryAdd Â£temporary3322 token Â£temporary3320>

1980:
old  <	; Dereference Â£temporary3309 -> Â£temporary3312 Â£temporary3312 0>
new  <	; Dereference Â£temporary3319 -> Â£temporary3322 Â£temporary3322 0>

1983:
old  <	; IntegralToIntegral Â£temporary3313 Â£temporary3309 -> Â£temporary3312>
new  <	; IntegralToIntegral Â£temporary3323 Â£temporary3319 -> Â£temporary3322>

1992:
old  <	; Parameter signedint Â£temporary3313 84>
new  <	; Parameter signedint Â£temporary3323 84>

2006:
old  <	; GetReturnValue Â£temporary3314>
new  <	; GetReturnValue Â£temporary3324>

2009:
old  <	; Equal 72 Â£temporary3314 0>
new  <	; Equal 72 Â£temporary3324 0>

2019:
old  <	; IntegralToIntegral Â£temporary3317 index>
new  <	; IntegralToIntegral Â£temporary3327 index>

2025:
old  <	; BinaryAdd Â£temporary3319 token Â£temporary3317>
new  <	; BinaryAdd Â£temporary3329 token Â£temporary3327>

2030:
old  <	; Dereference Â£temporary3316 -> Â£temporary3319 Â£temporary3319 0>
new  <	; Dereference Â£temporary3326 -> Â£temporary3329 Â£temporary3329 0>

2033:
old  <	; Assign Â£temporary3316 -> Â£temporary3319 0>
new  <	; Assign Â£temporary3326 -> Â£temporary3329 0>

2037:
old  <	; BinaryAdd Â£temporary3320 index 1>
new  <	; BinaryAdd Â£temporary3330 index 1>

2042:
old  <	; IntegralToIntegral Â£temporary3322 Â£temporary3320>
new  <	; IntegralToIntegral Â£temporary3332 Â£temporary3330>

2047:
old  <	; BinaryAdd Â£temporary3324 token Â£temporary3322>
new  <	; BinaryAdd Â£temporary3334 token Â£temporary3332>

2052:
old  <	; Dereference Â£temporary3321 -> Â£temporary3324 Â£temporary3324 0>
new  <	; Dereference Â£temporary3331 -> Â£temporary3334 Â£temporary3334 0>

2055:
old  <	; Address Â£temporary3325 Â£temporary3321 -> Â£temporary3324>
new  <	; Address Â£temporary3335 Â£temporary3331 -> Â£temporary3334>

2058:
old  <	; Assign token Â£temporary3325>
new  <	; Assign token Â£temporary3335>

2083:
old  <	; IntegralToIntegral Â£temporary3327 index>
new  <	; IntegralToIntegral Â£temporary3337 index>

2089:
old  <	; BinaryAdd Â£temporary3329 token Â£temporary3327>
new  <	; BinaryAdd Â£temporary3339 token Â£temporary3337>

2094:
old  <	; Dereference Â£temporary3326 -> Â£temporary3329 Â£temporary3329 0>
new  <	; Dereference Â£temporary3336 -> Â£temporary3339 Â£temporary3339 0>

2097:
old  <	; Address Â£temporary3330 Â£temporary3326 -> Â£temporary3329>
new  <	; Address Â£temporary3340 Â£temporary3336 -> Â£temporary3339>

2100:
old  <	; Assign token Â£temporary3330>
new  <	; Assign token Â£temporary3340>

2117:
old  <	; IntegralToIntegral Â£temporary3331 target>
new  <	; IntegralToIntegral Â£temporary3341 target>

2121:
old  <	; Assign charTarget Â£temporary3331>
new  <	; Assign charTarget Â£temporary3341>

2125:
old  <	; IntegralToIntegral Â£temporary3332 source>
new  <	; IntegralToIntegral Â£temporary3342 source>

2129:
old  <	; Assign charSource Â£temporary3332>
new  <	; Assign charSource Â£temporary3342>

2143:
old  <	; IntegralToIntegral Â£temporary3336 index>
new  <	; IntegralToIntegral Â£temporary3346 index>

2149:
old  <	; BinaryAdd Â£temporary3338 charTarget Â£temporary3336>
new  <	; BinaryAdd Â£temporary3348 charTarget Â£temporary3346>

2154:
old  <	; Dereference Â£temporary3335 -> Â£temporary3338 Â£temporary3338 0>
new  <	; Dereference Â£temporary3345 -> Â£temporary3348 Â£temporary3348 0>

2157:
old  <	; IntegralToIntegral Â£temporary3340 index>
new  <	; IntegralToIntegral Â£temporary3350 index>

2163:
old  <	; BinaryAdd Â£temporary3342 charSource Â£temporary3340>
new  <	; BinaryAdd Â£temporary3352 charSource Â£temporary3350>

2168:
old  <	; Dereference Â£temporary3339 -> Â£temporary3342 Â£temporary3342 0>
new  <	; Dereference Â£temporary3349 -> Â£temporary3352 Â£temporary3352 0>

2171:
old  <	; Assign Â£temporary3335 -> Â£temporary3338 Â£temporary3339 -> Â£temporary3342>
new  <	; Assign Â£temporary3345 -> Â£temporary3348 Â£temporary3349 -> Â£temporary3352>

2184:
old  <	; IntegralToIntegral Â£temporary3343 target>
new  <	; IntegralToIntegral Â£temporary3353 target>

2188:
old  <	; Return Â£temporary3343>
new  <	; Return Â£temporary3353>

2200:
old  <	; IntegralToIntegral Â£temporary3344 target>
new  <	; IntegralToIntegral Â£temporary3354 target>

2204:
old  <	; Assign charTarget Â£temporary3344>
new  <	; Assign charTarget Â£temporary3354>

2208:
old  <	; IntegralToIntegral Â£temporary3345 source>
new  <	; IntegralToIntegral Â£temporary3355 source>

2212:
old  <	; Assign charSource Â£temporary3345>
new  <	; Assign charSource Â£temporary3355>

2233:
old  <	; IntegralToIntegral Â£temporary3351 index>
new  <	; IntegralToIntegral Â£temporary3361 index>

2239:
old  <	; BinaryAdd Â£temporary3353 charTarget Â£temporary3351>
new  <	; BinaryAdd Â£temporary3363 charTarget Â£temporary3361>

2244:
old  <	; Dereference Â£temporary3350 -> Â£temporary3353 Â£temporary3353 0>
new  <	; Dereference Â£temporary3360 -> Â£temporary3363 Â£temporary3363 0>

2247:
old  <	; IntegralToIntegral Â£temporary3355 index>
new  <	; IntegralToIntegral Â£temporary3365 index>

2253:
old  <	; BinaryAdd Â£temporary3357 charSource Â£temporary3355>
new  <	; BinaryAdd Â£temporary3367 charSource Â£temporary3365>

2258:
old  <	; Dereference Â£temporary3354 -> Â£temporary3357 Â£temporary3357 0>
new  <	; Dereference Â£temporary3364 -> Â£temporary3367 Â£temporary3367 0>

2261:
old  <	; Assign Â£temporary3350 -> Â£temporary3353 Â£temporary3354 -> Â£temporary3357>
new  <	; Assign Â£temporary3360 -> Â£temporary3363 Â£temporary3364 -> Â£temporary3367>

2284:
old  <	; IntegralToIntegral Â£temporary3361 index>
new  <	; IntegralToIntegral Â£temporary3371 index>

2290:
old  <	; BinaryAdd Â£temporary3363 charTarget Â£temporary3361>
new  <	; BinaryAdd Â£temporary3373 charTarget Â£temporary3371>

2295:
old  <	; Dereference Â£temporary3360 -> Â£temporary3363 Â£temporary3363 0>
new  <	; Dereference Â£temporary3370 -> Â£temporary3373 Â£temporary3373 0>

2298:
old  <	; IntegralToIntegral Â£temporary3365 index>
new  <	; IntegralToIntegral Â£temporary3375 index>

2304:
old  <	; BinaryAdd Â£temporary3367 charSource Â£temporary3365>
new  <	; BinaryAdd Â£temporary3377 charSource Â£temporary3375>

2309:
old  <	; Dereference Â£temporary3364 -> Â£temporary3367 Â£temporary3367 0>
new  <	; Dereference Â£temporary3374 -> Â£temporary3377 Â£temporary3377 0>

2312:
old  <	; Assign Â£temporary3360 -> Â£temporary3363 Â£temporary3364 -> Â£temporary3367>
new  <	; Assign Â£temporary3370 -> Â£temporary3373 Â£temporary3374 -> Â£temporary3377>

2325:
old  <	; IntegralToIntegral Â£temporary3368 target>
new  <	; IntegralToIntegral Â£temporary3378 target>

2329:
old  <	; Return Â£temporary3368>
new  <	; Return Â£temporary3378>

2341:
old  <	; IntegralToIntegral Â£temporary3369 left>
new  <	; IntegralToIntegral Â£temporary3379 left>

2345:
old  <	; Assign charLeft Â£temporary3369>
new  <	; Assign charLeft Â£temporary3379>

2349:
old  <	; IntegralToIntegral Â£temporary3370 right>
new  <	; IntegralToIntegral Â£temporary3380 right>

2353:
old  <	; Assign charRight Â£temporary3370>
new  <	; Assign charRight Â£temporary3380>

2367:
old  <	; IntegralToIntegral Â£temporary3374 index>
new  <	; IntegralToIntegral Â£temporary3384 index>

2373:
old  <	; BinaryAdd Â£temporary3376 charLeft Â£temporary3374>
new  <	; BinaryAdd Â£temporary3386 charLeft Â£temporary3384>

2378:
old  <	; Dereference Â£temporary3373 -> Â£temporary3376 Â£temporary3376 0>
new  <	; Dereference Â£temporary3383 -> Â£temporary3386 Â£temporary3386 0>

2381:
old  <	; IntegralToIntegral Â£temporary3378 index>
new  <	; IntegralToIntegral Â£temporary3388 index>

2387:
old  <	; BinaryAdd Â£temporary3380 charRight Â£temporary3378>
new  <	; BinaryAdd Â£temporary3390 charRight Â£temporary3388>

2392:
old  <	; Dereference Â£temporary3377 -> Â£temporary3380 Â£temporary3380 0>
new  <	; Dereference Â£temporary3387 -> Â£temporary3390 Â£temporary3390 0>

2395:
old  <	; SignedGreaterThanEqual 14 Â£temporary3373 -> Â£temporary3376 Â£temporary3377 -> Â£temporary3380>
new  <	; SignedGreaterThanEqual 14 Â£temporary3383 -> Â£temporary3386 Â£temporary3387 -> Â£temporary3390>

2409:
old  <	; IntegralToIntegral Â£temporary3383 index>
new  <	; IntegralToIntegral Â£temporary3393 index>

2415:
old  <	; BinaryAdd Â£temporary3385 charLeft Â£temporary3383>
new  <	; BinaryAdd Â£temporary3395 charLeft Â£temporary3393>

2420:
old  <	; Dereference Â£temporary3382 -> Â£temporary3385 Â£temporary3385 0>
new  <	; Dereference Â£temporary3392 -> Â£temporary3395 Â£temporary3395 0>

2423:
old  <	; IntegralToIntegral Â£temporary3387 index>
new  <	; IntegralToIntegral Â£temporary3397 index>

2429:
old  <	; BinaryAdd Â£temporary3389 charRight Â£temporary3387>
new  <	; BinaryAdd Â£temporary3399 charRight Â£temporary3397>

2434:
old  <	; Dereference Â£temporary3386 -> Â£temporary3389 Â£temporary3389 0>
new  <	; Dereference Â£temporary3396 -> Â£temporary3399 Â£temporary3399 0>

2437:
old  <	; SignedLessThanEqual 22 Â£temporary3382 -> Â£temporary3385 Â£temporary3386 -> Â£temporary3389>
new  <	; SignedLessThanEqual 22 Â£temporary3392 -> Â£temporary3395 Â£temporary3396 -> Â£temporary3399>

2472:
old  <	; IntegralToIntegral Â£temporary3391 block>
new  <	; IntegralToIntegral Â£temporary3401 block>

2476:
old  <	; Assign charBlock Â£temporary3391>
new  <	; Assign charBlock Â£temporary3401>

2480:
old  <	; IntegralToIntegral Â£temporary3392 i>
new  <	; IntegralToIntegral Â£temporary3402 i>

2488:
old  <	; Assign c Â£temporary3392>
new  <	; Assign c Â£temporary3402>

2502:
old  <	; IntegralToIntegral Â£temporary3396 index>
new  <	; IntegralToIntegral Â£temporary3406 index>

2508:
old  <	; BinaryAdd Â£temporary3398 charBlock Â£temporary3396>
new  <	; BinaryAdd Â£temporary3408 charBlock Â£temporary3406>

2513:
old  <	; Dereference Â£temporary3395 -> Â£temporary3398 Â£temporary3398 0>
new  <	; Dereference Â£temporary3405 -> Â£temporary3408 Â£temporary3408 0>

2516:
old  <	; NotEqual 16 Â£temporary3395 -> Â£temporary3398 c>
new  <	; NotEqual 16 Â£temporary3405 -> Â£temporary3408 c>

2522:
old  <	; IntegralToIntegral Â£temporary3401 index>
new  <	; IntegralToIntegral Â£temporary3411 index>

2528:
old  <	; BinaryAdd Â£temporary3403 charBlock Â£temporary3401>
new  <	; BinaryAdd Â£temporary3413 charBlock Â£temporary3411>

2533:
old  <	; Dereference Â£temporary3400 -> Â£temporary3403 Â£temporary3403 0>
new  <	; Dereference Â£temporary3410 -> Â£temporary3413 Â£temporary3413 0>

2536:
old  <	; Address Â£temporary3404 Â£temporary3400 -> Â£temporary3403>
new  <	; Address Â£temporary3414 Â£temporary3410 -> Â£temporary3413>

2539:
old  <	; IntegralToIntegral Â£temporary3405 Â£temporary3404>
new  <	; IntegralToIntegral Â£temporary3415 Â£temporary3414>

2542:
old  <	; Return Â£temporary3405>
new  <	; Return Â£temporary3415>

2570:
old  <	; IntegralToIntegral Â£temporary3406 block>
new  <	; IntegralToIntegral Â£temporary3416 block>

2574:
old  <	; Assign charBlock Â£temporary3406>
new  <	; Assign charBlock Â£temporary3416>

2578:
old  <	; IntegralToIntegral Â£temporary3407 i>
new  <	; IntegralToIntegral Â£temporary3417 i>

2586:
old  <	; Assign c Â£temporary3407>
new  <	; Assign c Â£temporary3417>

2600:
old  <	; IntegralToIntegral Â£temporary3411 index>
new  <	; IntegralToIntegral Â£temporary3421 index>

2606:
old  <	; BinaryAdd Â£temporary3413 charBlock Â£temporary3411>
new  <	; BinaryAdd Â£temporary3423 charBlock Â£temporary3421>

2611:
old  <	; Dereference Â£temporary3410 -> Â£temporary3413 Â£temporary3413 0>
new  <	; Dereference Â£temporary3420 -> Â£temporary3423 Â£temporary3423 0>

2614:
old  <	; Assign Â£temporary3410 -> Â£temporary3413 c>
new  <	; Assign Â£temporary3420 -> Â£temporary3423 c>

PrintTest.asm
CharacterTest.asm
126:
old  <	; IntegralToIntegral Â£temporary3446 c>
new  <	; IntegralToIntegral Â£temporary3456 c>

135:
old  <	; Parameter signedint Â£temporary3446 57>
new  <	; Parameter signedint Â£temporary3456 57>

158:
old  <	; IntegralToIntegral Â£temporary3448 c>
new  <	; IntegralToIntegral Â£temporary3458 c>

167:
old  <	; Parameter signedint Â£temporary3448 57>
new  <	; Parameter signedint Â£temporary3458 57>

174:
old  <	; IntegralToIntegral Â£temporary3449 c>
new  <	; IntegralToIntegral Â£temporary3459 c>

183:
old  <	; Parameter signedint Â£temporary3449 85>
new  <	; Parameter signedint Â£temporary3459 85>

197:
old  <	; GetReturnValue Â£temporary3450>
new  <	; GetReturnValue Â£temporary3460>

200:
old  <	; Equal 19 Â£temporary3450 0>
new  <	; Equal 19 Â£temporary3460 0>

205:
old  <	; Assign Â£temporary3452 "Yes">
new  <	; Assign Â£temporary3462 "Yes">

213:
old  <	; Assign Â£temporary3452 "No">
new  <	; Assign Â£temporary3462 "No">

217:
old  <	; Parameter pointer Â£temporary3452 61>
new  <	; Parameter pointer Â£temporary3462 61>

240:
old  <	; IntegralToIntegral Â£temporary3454 c>
new  <	; IntegralToIntegral Â£temporary3464 c>

249:
old  <	; Parameter signedint Â£temporary3454 57>
new  <	; Parameter signedint Â£temporary3464 57>

256:
old  <	; IntegralToIntegral Â£temporary3455 c>
new  <	; IntegralToIntegral Â£temporary3465 c>

265:
old  <	; Parameter signedint Â£temporary3455 85>
new  <	; Parameter signedint Â£temporary3465 85>

279:
old  <	; GetReturnValue Â£temporary3456>
new  <	; GetReturnValue Â£temporary3466>

282:
old  <	; Equal 36 Â£temporary3456 0>
new  <	; Equal 36 Â£temporary3466 0>

287:
old  <	; Assign Â£temporary3458 "Yes">
new  <	; Assign Â£temporary3468 "Yes">

295:
old  <	; Assign Â£temporary3458 "No">
new  <	; Assign Â£temporary3468 "No">

299:
old  <	; Parameter pointer Â£temporary3458 61>
new  <	; Parameter pointer Â£temporary3468 61>

322:
old  <	; IntegralToIntegral Â£temporary3460 c>
new  <	; IntegralToIntegral Â£temporary3470 c>

331:
old  <	; Parameter signedint Â£temporary3460 57>
new  <	; Parameter signedint Â£temporary3470 57>

338:
old  <	; IntegralToIntegral Â£temporary3461 c>
new  <	; IntegralToIntegral Â£temporary3471 c>

347:
old  <	; Parameter signedint Â£temporary3461 85>
new  <	; Parameter signedint Â£temporary3471 85>

361:
old  <	; GetReturnValue Â£temporary3462>
new  <	; GetReturnValue Â£temporary3472>

364:
old  <	; Equal 53 Â£temporary3462 0>
new  <	; Equal 53 Â£temporary3472 0>

369:
old  <	; Assign Â£temporary3464 "Yes">
new  <	; Assign Â£temporary3474 "Yes">

377:
old  <	; Assign Â£temporary3464 "No">
new  <	; Assign Â£temporary3474 "No">

381:
old  <	; Parameter pointer Â£temporary3464 61>
new  <	; Parameter pointer Â£temporary3474 61>

404:
old  <	; IntegralToIntegral Â£temporary3466 c>
new  <	; IntegralToIntegral Â£temporary3476 c>

413:
old  <	; Parameter signedint Â£temporary3466 57>
new  <	; Parameter signedint Â£temporary3476 57>

420:
old  <	; IntegralToIntegral Â£temporary3467 c>
new  <	; IntegralToIntegral Â£temporary3477 c>

429:
old  <	; Parameter signedint Â£temporary3467 85>
new  <	; Parameter signedint Â£temporary3477 85>

443:
old  <	; GetReturnValue Â£temporary3468>
new  <	; GetReturnValue Â£temporary3478>

446:
old  <	; Equal 70 Â£temporary3468 0>
new  <	; Equal 70 Â£temporary3478 0>

451:
old  <	; Assign Â£temporary3470 "Yes">
new  <	; Assign Â£temporary3480 "Yes">

459:
old  <	; Assign Â£temporary3470 "No">
new  <	; Assign Â£temporary3480 "No">

463:
old  <	; Parameter pointer Â£temporary3470 61>
new  <	; Parameter pointer Â£temporary3480 61>

486:
old  <	; IntegralToIntegral Â£temporary3472 c>
new  <	; IntegralToIntegral Â£temporary3482 c>

495:
old  <	; Parameter signedint Â£temporary3472 57>
new  <	; Parameter signedint Â£temporary3482 57>

502:
old  <	; IntegralToIntegral Â£temporary3473 c>
new  <	; IntegralToIntegral Â£temporary3483 c>

511:
old  <	; Parameter signedint Â£temporary3473 85>
new  <	; Parameter signedint Â£temporary3483 85>

525:
old  <	; GetReturnValue Â£temporary3474>
new  <	; GetReturnValue Â£temporary3484>

528:
old  <	; Equal 87 Â£temporary3474 0>
new  <	; Equal 87 Â£temporary3484 0>

533:
old  <	; Assign Â£temporary3476 "Yes">
new  <	; Assign Â£temporary3486 "Yes">

541:
old  <	; Assign Â£temporary3476 "No">
new  <	; Assign Â£temporary3486 "No">

545:
old  <	; Parameter pointer Â£temporary3476 61>
new  <	; Parameter pointer Â£temporary3486 61>

568:
old  <	; IntegralToIntegral Â£temporary3478 c>
new  <	; IntegralToIntegral Â£temporary3488 c>

577:
old  <	; Parameter signedint Â£temporary3478 57>
new  <	; Parameter signedint Â£temporary3488 57>

584:
old  <	; IntegralToIntegral Â£temporary3479 c>
new  <	; IntegralToIntegral Â£temporary3489 c>

593:
old  <	; Parameter signedint Â£temporary3479 85>
new  <	; Parameter signedint Â£temporary3489 85>

607:
old  <	; GetReturnValue Â£temporary3480>
new  <	; GetReturnValue Â£temporary3490>

610:
old  <	; Equal 104 Â£temporary3480 0>
new  <	; Equal 104 Â£temporary3490 0>

615:
old  <	; Assign Â£temporary3482 "Yes">
new  <	; Assign Â£temporary3492 "Yes">

623:
old  <	; Assign Â£temporary3482 "No">
new  <	; Assign Â£temporary3492 "No">

627:
old  <	; Parameter pointer Â£temporary3482 61>
new  <	; Parameter pointer Â£temporary3492 61>

650:
old  <	; IntegralToIntegral Â£temporary3484 c>
new  <	; IntegralToIntegral Â£temporary3494 c>

659:
old  <	; Parameter signedint Â£temporary3484 57>
new  <	; Parameter signedint Â£temporary3494 57>

666:
old  <	; IntegralToIntegral Â£temporary3485 c>
new  <	; IntegralToIntegral Â£temporary3495 c>

675:
old  <	; Parameter signedint Â£temporary3485 85>
new  <	; Parameter signedint Â£temporary3495 85>

689:
old  <	; GetReturnValue Â£temporary3486>
new  <	; GetReturnValue Â£temporary3496>

692:
old  <	; Equal 121 Â£temporary3486 0>
new  <	; Equal 121 Â£temporary3496 0>

697:
old  <	; Assign Â£temporary3488 "Yes">
new  <	; Assign Â£temporary3498 "Yes">

705:
old  <	; Assign Â£temporary3488 "No">
new  <	; Assign Â£temporary3498 "No">

709:
old  <	; Parameter pointer Â£temporary3488 61>
new  <	; Parameter pointer Â£temporary3498 61>

732:
old  <	; IntegralToIntegral Â£temporary3490 c>
new  <	; IntegralToIntegral Â£temporary3500 c>

741:
old  <	; Parameter signedint Â£temporary3490 57>
new  <	; Parameter signedint Â£temporary3500 57>

748:
old  <	; IntegralToIntegral Â£temporary3491 c>
new  <	; IntegralToIntegral Â£temporary3501 c>

757:
old  <	; Parameter signedint Â£temporary3491 85>
new  <	; Parameter signedint Â£temporary3501 85>

771:
old  <	; GetReturnValue Â£temporary3492>
new  <	; GetReturnValue Â£temporary3502>

774:
old  <	; Equal 138 Â£temporary3492 0>
new  <	; Equal 138 Â£temporary3502 0>

779:
old  <	; Assign Â£temporary3494 "Yes">
new  <	; Assign Â£temporary3504 "Yes">

787:
old  <	; Assign Â£temporary3494 "No">
new  <	; Assign Â£temporary3504 "No">

791:
old  <	; Parameter pointer Â£temporary3494 61>
new  <	; Parameter pointer Â£temporary3504 61>

814:
old  <	; IntegralToIntegral Â£temporary3496 c>
new  <	; IntegralToIntegral Â£temporary3506 c>

823:
old  <	; Parameter signedint Â£temporary3496 57>
new  <	; Parameter signedint Â£temporary3506 57>

830:
old  <	; IntegralToIntegral Â£temporary3497 c>
new  <	; IntegralToIntegral Â£temporary3507 c>

839:
old  <	; Parameter signedint Â£temporary3497 85>
new  <	; Parameter signedint Â£temporary3507 85>

853:
old  <	; GetReturnValue Â£temporary3498>
new  <	; GetReturnValue Â£temporary3508>

856:
old  <	; Equal 155 Â£temporary3498 0>
new  <	; Equal 155 Â£temporary3508 0>

861:
old  <	; Assign Â£temporary3500 "Yes">
new  <	; Assign Â£temporary3510 "Yes">

869:
old  <	; Assign Â£temporary3500 "No">
new  <	; Assign Â£temporary3510 "No">

873:
old  <	; Parameter pointer Â£temporary3500 61>
new  <	; Parameter pointer Â£temporary3510 61>

896:
old  <	; IntegralToIntegral Â£temporary3502 c>
new  <	; IntegralToIntegral Â£temporary3512 c>

905:
old  <	; Parameter signedint Â£temporary3502 57>
new  <	; Parameter signedint Â£temporary3512 57>

912:
old  <	; IntegralToIntegral Â£temporary3503 c>
new  <	; IntegralToIntegral Â£temporary3513 c>

921:
old  <	; Parameter signedint Â£temporary3503 85>
new  <	; Parameter signedint Â£temporary3513 85>

935:
old  <	; GetReturnValue Â£temporary3504>
new  <	; GetReturnValue Â£temporary3514>

938:
old  <	; Equal 172 Â£temporary3504 0>
new  <	; Equal 172 Â£temporary3514 0>

943:
old  <	; Assign Â£temporary3506 "Yes">
new  <	; Assign Â£temporary3516 "Yes">

951:
old  <	; Assign Â£temporary3506 "No">
new  <	; Assign Â£temporary3516 "No">

955:
old  <	; Parameter pointer Â£temporary3506 61>
new  <	; Parameter pointer Â£temporary3516 61>

978:
old  <	; IntegralToIntegral Â£temporary3508 c>
new  <	; IntegralToIntegral Â£temporary3518 c>

987:
old  <	; Parameter signedint Â£temporary3508 57>
new  <	; Parameter signedint Â£temporary3518 57>

994:
old  <	; IntegralToIntegral Â£temporary3509 c>
new  <	; IntegralToIntegral Â£temporary3519 c>

1003:
old  <	; Parameter signedint Â£temporary3509 85>
new  <	; Parameter signedint Â£temporary3519 85>

1017:
old  <	; GetReturnValue Â£temporary3510>
new  <	; GetReturnValue Â£temporary3520>

1020:
old  <	; Equal 189 Â£temporary3510 0>
new  <	; Equal 189 Â£temporary3520 0>

1025:
old  <	; Assign Â£temporary3512 "Yes">
new  <	; Assign Â£temporary3522 "Yes">

1033:
old  <	; Assign Â£temporary3512 "No">
new  <	; Assign Â£temporary3522 "No">

1037:
old  <	; Parameter pointer Â£temporary3512 61>
new  <	; Parameter pointer Â£temporary3522 61>

1060:
old  <	; IntegralToIntegral Â£temporary3514 c>
new  <	; IntegralToIntegral Â£temporary3524 c>

1069:
old  <	; Parameter signedint Â£temporary3514 57>
new  <	; Parameter signedint Â£temporary3524 57>

1076:
old  <	; IntegralToIntegral Â£temporary3515 c>
new  <	; IntegralToIntegral Â£temporary3525 c>

1085:
old  <	; Parameter signedint Â£temporary3515 85>
new  <	; Parameter signedint Â£temporary3525 85>

1099:
old  <	; GetReturnValue Â£temporary3516>
new  <	; GetReturnValue Â£temporary3526>

1102:
old  <	; IntegralToIntegral Â£temporary3517 Â£temporary3516>
new  <	; IntegralToIntegral Â£temporary3527 Â£temporary3526>

1109:
old  <	; IntegralToIntegral Â£temporary3518 Â£temporary3517>
new  <	; IntegralToIntegral Â£temporary3528 Â£temporary3527>

1117:
old  <	; Parameter signedint Â£temporary3518 61>
new  <	; Parameter signedint Â£temporary3528 61>

1140:
old  <	; IntegralToIntegral Â£temporary3520 c>
new  <	; IntegralToIntegral Â£temporary3530 c>

1149:
old  <	; Parameter signedint Â£temporary3520 57>
new  <	; Parameter signedint Â£temporary3530 57>

1156:
old  <	; IntegralToIntegral Â£temporary3521 c>
new  <	; IntegralToIntegral Â£temporary3531 c>

1165:
old  <	; Parameter signedint Â£temporary3521 85>
new  <	; Parameter signedint Â£temporary3531 85>

1179:
old  <	; GetReturnValue Â£temporary3522>
new  <	; GetReturnValue Â£temporary3532>

1182:
old  <	; IntegralToIntegral Â£temporary3523 Â£temporary3522>
new  <	; IntegralToIntegral Â£temporary3533 Â£temporary3532>

1189:
old  <	; IntegralToIntegral Â£temporary3524 Â£temporary3523>
new  <	; IntegralToIntegral Â£temporary3534 Â£temporary3533>

1197:
old  <	; Parameter signedint Â£temporary3524 61>
new  <	; Parameter signedint Â£temporary3534 61>

FloatTest.asm
LimitsTest.asm
AssertTest.asm
75:
old  <	; Address Â£temporary3542 n>
new  <	; Address Â£temporary3552 n>

80:
old  <	; Parameter pointer Â£temporary3542 60>
new  <	; Parameter pointer Â£temporary3552 60>

StringTest.asm
183:
old  <	; GetReturnValue Â£temporary3554>
new  <	; GetReturnValue Â£temporary3564>

186:
old  <	; Parameter signedint Â£temporary3554 284>
new  <	; Parameter signedint Â£temporary3564 284>

252:
old  <	; Dereference Â£temporary3558 -> u u 0>
new  <	; Dereference Â£temporary3568 -> u u 0>

257:
old  <	; Assign Â£temporary3558 -> u 0>
new  <	; Assign Â£temporary3568 -> u 0>

330:
old  <	; GetReturnValue Â£temporary3561>
new  <	; GetReturnValue Â£temporary3571>

333:
old  <	; Assign i Â£temporary3561>
new  <	; Assign i Â£temporary3571>

363:
old  <	; BinaryAdd Â£temporary3563 i 2>
new  <	; BinaryAdd Â£temporary3573 i 2>

368:
old  <	; IntegralToIntegral Â£temporary3565 Â£temporary3563>
new  <	; IntegralToIntegral Â£temporary3575 Â£temporary3573>

373:
old  <	; BinaryAdd Â£temporary3567 u Â£temporary3565>
new  <	; BinaryAdd Â£temporary3577 u Â£temporary3575>

379:
old  <	; Dereference Â£temporary3564 -> Â£temporary3567 Â£temporary3567 0>
new  <	; Dereference Â£temporary3574 -> Â£temporary3577 Â£temporary3577 0>

382:
old  <	; Assign Â£temporary3564 -> Â£temporary3567 0>
new  <	; Assign Â£temporary3574 -> Â£temporary3577 0>

445:
old  <	; GetReturnValue Â£temporary3569>
new  <	; GetReturnValue Â£temporary3579>

448:
old  <	; Parameter signedint Â£temporary3569 276>
new  <	; Parameter signedint Â£temporary3579 276>

498:
old  <	; GetReturnValue Â£temporary3571>
new  <	; GetReturnValue Â£temporary3581>

501:
old  <	; Parameter signedint Â£temporary3571 276>
new  <	; Parameter signedint Â£temporary3581 276>

539:
old  <	; GetReturnValue Â£temporary3573>
new  <	; GetReturnValue Â£temporary3583>

542:
old  <	; Assign p Â£temporary3573>
new  <	; Assign p Â£temporary3583>

558:
old  <	; BinarySubtract Â£temporary3576 p s>
new  <	; BinarySubtract Â£temporary3586 p s>

563:
old  <	; IntegralToIntegral Â£temporary3578 Â£temporary3576>
new  <	; IntegralToIntegral Â£temporary3588 Â£temporary3586>

570:
old  <	; Assign Â£temporary3578 -1>
new  <	; Assign Â£temporary3588 -1>

574:
old  <	; Parameter signedint Â£temporary3578 276>
new  <	; Parameter signedint Â£temporary3588 276>

612:
old  <	; GetReturnValue Â£temporary3580>
new  <	; GetReturnValue Â£temporary3590>

615:
old  <	; Assign p Â£temporary3580>
new  <	; Assign p Â£temporary3590>

631:
old  <	; BinarySubtract Â£temporary3583 p s>
new  <	; BinarySubtract Â£temporary3593 p s>

636:
old  <	; IntegralToIntegral Â£temporary3585 Â£temporary3583>
new  <	; IntegralToIntegral Â£temporary3595 Â£temporary3593>

643:
old  <	; Assign Â£temporary3585 -1>
new  <	; Assign Â£temporary3595 -1>

647:
old  <	; Parameter signedint Â£temporary3585 276>
new  <	; Parameter signedint Â£temporary3595 276>

685:
old  <	; GetReturnValue Â£temporary3587>
new  <	; GetReturnValue Â£temporary3597>

688:
old  <	; Assign p Â£temporary3587>
new  <	; Assign p Â£temporary3597>

704:
old  <	; BinarySubtract Â£temporary3590 p s>
new  <	; BinarySubtract Â£temporary3600 p s>

709:
old  <	; IntegralToIntegral Â£temporary3592 Â£temporary3590>
new  <	; IntegralToIntegral Â£temporary3602 Â£temporary3600>

716:
old  <	; Assign Â£temporary3592 -1>
new  <	; Assign Â£temporary3602 -1>

720:
old  <	; Parameter signedint Â£temporary3592 276>
new  <	; Parameter signedint Â£temporary3602 276>

758:
old  <	; GetReturnValue Â£temporary3594>
new  <	; GetReturnValue Â£temporary3604>

761:
old  <	; Assign p Â£temporary3594>
new  <	; Assign p Â£temporary3604>

777:
old  <	; BinarySubtract Â£temporary3597 p s>
new  <	; BinarySubtract Â£temporary3607 p s>

782:
old  <	; IntegralToIntegral Â£temporary3599 Â£temporary3597>
new  <	; IntegralToIntegral Â£temporary3609 Â£temporary3607>

789:
old  <	; Assign Â£temporary3599 -1>
new  <	; Assign Â£temporary3609 -1>

793:
old  <	; Parameter signedint Â£temporary3599 276>
new  <	; Parameter signedint Â£temporary3609 276>

887:
old  <	; Dereference Â£temporary3604 -> u u 0>
new  <	; Dereference Â£temporary3614 -> u u 0>

892:
old  <	; Assign Â£temporary3604 -> u 0>
new  <	; Assign Â£temporary3614 -> u 0>

956:
old  <	; GetReturnValue Â£temporary3606>
new  <	; GetReturnValue Â£temporary3616>

959:
old  <	; Assign p Â£temporary3606>
new  <	; Assign p Â£temporary3616>

975:
old  <	; BinarySubtract Â£temporary3609 p s>
new  <	; BinarySubtract Â£temporary3619 p s>

980:
old  <	; IntegralToIntegral Â£temporary3611 Â£temporary3609>
new  <	; IntegralToIntegral Â£temporary3621 Â£temporary3619>

987:
old  <	; Assign Â£temporary3611 -1>
new  <	; Assign Â£temporary3621 -1>

991:
old  <	; Parameter signedint Â£temporary3611 276>
new  <	; Parameter signedint Â£temporary3621 276>

1033:
old  <	; GetReturnValue Â£temporary3613>
new  <	; GetReturnValue Â£temporary3623>

1036:
old  <	; Assign p Â£temporary3613>
new  <	; Assign p Â£temporary3623>

1052:
old  <	; BinarySubtract Â£temporary3616 p s>
new  <	; BinarySubtract Â£temporary3626 p s>

1057:
old  <	; IntegralToIntegral Â£temporary3618 Â£temporary3616>
new  <	; IntegralToIntegral Â£temporary3628 Â£temporary3626>

1064:
old  <	; Assign Â£temporary3618 -1>
new  <	; Assign Â£temporary3628 -1>

1068:
old  <	; Parameter signedint Â£temporary3618 276>
new  <	; Parameter signedint Â£temporary3628 276>

1118:
old  <	; GetReturnValue Â£temporary3620>
new  <	; GetReturnValue Â£temporary3630>

1121:
old  <	; Parameter signedint Â£temporary3620 276>
new  <	; Parameter signedint Â£temporary3630 276>

1166:
old  <	; GetReturnValue Â£temporary3622>
new  <	; GetReturnValue Â£temporary3632>

1169:
old  <	; Parameter signedint Â£temporary3622 276>
new  <	; Parameter signedint Â£temporary3632 276>

1214:
old  <	; GetReturnValue Â£temporary3624>
new  <	; GetReturnValue Â£temporary3634>

1217:
old  <	; Parameter signedint Â£temporary3624 276>
new  <	; Parameter signedint Â£temporary3634 276>

1258:
old  <	; GetReturnValue Â£temporary3626>
new  <	; GetReturnValue Â£temporary3636>

1261:
old  <	; Parameter pointer Â£temporary3626 276>
new  <	; Parameter pointer Â£temporary3636 276>

1299:
old  <	; GetReturnValue Â£temporary3628>
new  <	; GetReturnValue Â£temporary3638>

1302:
old  <	; Assign p Â£temporary3628>
new  <	; Assign p Â£temporary3638>

1356:
old  <	; GetReturnValue Â£temporary3631>
new  <	; GetReturnValue Â£temporary3641>

1359:
old  <	; Assign p Â£temporary3631>
new  <	; Assign p Â£temporary3641>

SetJmpTest.asm
45:
old  < @6927$main:>
new  < @6941$main:>

48:
old  < @6927$main$1:>
new  < @6941$main$1:>

52:
old  < @6927$main$2:>
new  < @6941$main$2:>

54:
old  <	mov qword [rbp + 40], @6927$main$3>
new  <	mov qword [rbp + 40], @6941$main$3>

60:
old  < @6927$main$3:>
new  < @6941$main$3:>

63:
old  < @6927$main$4:>
new  < @6941$main$4:>

66:
old  < @6927$main$5:>
new  < @6941$main$5:>

70:
old  < @6927$main$6:>
new  < @6941$main$6:>

71:
old  <	; Address Â£temporary3633 x>
new  <	; Address Â£temporary3643 x>

75:
old  < @6927$main$7:>
new  < @6941$main$7:>

76:
old  <	; Parameter pointer Â£temporary3633 72>
new  <	; Parameter pointer Â£temporary3643 72>

79:
old  < @6927$main$8:>
new  < @6941$main$8:>

81:
old  <	mov qword [rbp + 40], @6927$main$9>
new  <	mov qword [rbp + 40], @6941$main$9>

88:
old  < @6927$main$9:>
new  < @6941$main$9:>

91:
old  < @6927$main$10:>
new  < @6941$main$10:>

94:
old  < @6927$main$11:>
new  < @6941$main$11:>

98:
old  < @6927$main$12:>
new  < @6941$main$12:>

100:
old  <	mov qword [rbp + 40], @6927$main$13>
new  <	mov qword [rbp + 40], @6941$main$13>

105:
old  < @6927$main$13:>
new  < @6941$main$13:>

108:
old  < @6927$main$14:>
new  < @6941$main$14:>

109:
old  <	; GetReturnValue Â£temporary3635>
new  <	; GetReturnValue Â£temporary3645>

111:
old  < @6927$main$15:>
new  < @6941$main$15:>

112:
old  <	; IntegralToIntegral Â£temporary3636 Â£temporary3635>
new  <	; IntegralToIntegral Â£temporary3646 Â£temporary3645>

116:
old  < @6927$main$16:>
new  < @6941$main$16:>

117:
old  <	; Assign message Â£temporary3636>
new  <	; Assign message Â£temporary3646>

120:
old  < @6927$main$17:>
new  < @6941$main$17:>

123:
old  <	jne @6927$main$32>
new  <	jne @6941$main$32>

125:
old  < @6927$main$18:>
new  < @6941$main$18:>

128:
old  < @6927$main$19:>
new  < @6941$main$19:>

132:
old  < @6927$main$20:>
new  < @6941$main$20:>

136:
old  < @6927$main$21:>
new  < @6941$main$21:>

140:
old  < @6927$main$22:>
new  < @6941$main$22:>

143:
old  < @6927$main$23:>
new  < @6941$main$23:>

147:
old  < @6927$main$24:>
new  < @6941$main$24:>

151:
old  < @6927$main$25:>
new  < @6941$main$25:>

153:
old  <	mov qword [rbp + 80], @6927$main$26>
new  <	mov qword [rbp + 80], @6941$main$26>

158:
old  < @6927$main$26:>
new  < @6941$main$26:>

161:
old  < @6927$main$27:>
new  < @6941$main$27:>

162:
old  <	; GetReturnValue Â£temporary3638>
new  <	; GetReturnValue Â£temporary3648>

164:
old  < @6927$main$28:>
new  < @6941$main$28:>

165:
old  <	; Parameter double Â£temporary3638 80>
new  <	; Parameter double Â£temporary3648 80>

168:
old  < @6927$main$29:>
new  < @6941$main$29:>

170:
old  <	mov qword [rbp + 40], @6927$main$30>
new  <	mov qword [rbp + 40], @6941$main$30>

177:
old  < @6927$main$30:>
new  < @6941$main$30:>

180:
old  < @6927$main$31:>
new  < @6941$main$31:>

182:
old  <	jmp @6927$main$37>
new  <	jmp @6941$main$37>

184:
old  < @6927$main$32:>
new  < @6941$main$32:>

187:
old  < @6927$main$33:>
new  < @6941$main$33:>

191:
old  < @6927$main$34:>
new  < @6941$main$34:>

196:
old  < @6927$main$35:>
new  < @6941$main$35:>

198:
old  <	mov qword [rbp + 40], @6927$main$36>
new  <	mov qword [rbp + 40], @6941$main$36>

205:
old  < @6927$main$36:>
new  < @6941$main$36:>

208:
old  < @6927$main$37:>
new  < @6941$main$37:>

215:
old  < @6927$main$38:>
new  < @6941$main$38:>

250:
old  <	; GetReturnValue Â£temporary3645>
new  <	; GetReturnValue Â£temporary3655>

253:
old  <	; Return Â£temporary3645>
new  <	; Return Â£temporary3655>

294:
old  <	; SignedDivide Â£temporary3649 x y>
new  <	; SignedDivide Â£temporary3659 x y>

298:
old  <	; Return Â£temporary3649>
new  <	; Return Â£temporary3659>

312:
old  <	; IntegralToIntegral Â£temporary3650 "Division by Zero.">
new  <	; IntegralToIntegral Â£temporary3660 "Division by Zero.">

316:
old  <	; Parameter signedint Â£temporary3650 72>
new  <	; Parameter signedint Â£temporary3660 72>

MathTest.asm
324:
old  <	; GetReturnValue Â£temporary3670>
new  <	; GetReturnValue Â£temporary3680>

327:
old  <	; Parameter double Â£temporary3670 72>
new  <	; Parameter double Â£temporary3680 72>

406:
old  <	; GetReturnValue Â£temporary3675>
new  <	; GetReturnValue Â£temporary3685>

409:
old  <	; Parameter double Â£temporary3675 72>
new  <	; Parameter double Â£temporary3685 72>

1407:
old  <	; GetReturnValue Â£temporary3748>
new  <	; GetReturnValue Â£temporary3758>

1410:
old  <	; Parameter double Â£temporary3748 72>
new  <	; Parameter double Â£temporary3758 72>

1471:
old  <	; GetReturnValue Â£temporary3750>
new  <	; GetReturnValue Â£temporary3760>

1474:
old  <	; Parameter double Â£temporary3750 72>
new  <	; Parameter double Â£temporary3760 72>

1535:
old  <	; GetReturnValue Â£temporary3752>
new  <	; GetReturnValue Â£temporary3762>

1538:
old  <	; Parameter double Â£temporary3752 72>
new  <	; Parameter double Â£temporary3762 72>

1599:
old  <	; GetReturnValue Â£temporary3754>
new  <	; GetReturnValue Â£temporary3764>

1602:
old  <	; Parameter double Â£temporary3754 72>
new  <	; Parameter double Â£temporary3764 72>

1663:
old  <	; GetReturnValue Â£temporary3756>
new  <	; GetReturnValue Â£temporary3766>

1666:
old  <	; Parameter double Â£temporary3756 72>
new  <	; Parameter double Â£temporary3766 72>

1727:
old  <	; GetReturnValue Â£temporary3758>
new  <	; GetReturnValue Â£temporary3768>

1730:
old  <	; Parameter double Â£temporary3758 72>
new  <	; Parameter double Â£temporary3768 72>

1791:
old  <	; GetReturnValue Â£temporary3760>
new  <	; GetReturnValue Â£temporary3770>

1794:
old  <	; Parameter double Â£temporary3760 72>
new  <	; Parameter double Â£temporary3770 72>

1855:
old  <	; GetReturnValue Â£temporary3762>
new  <	; GetReturnValue Â£temporary3772>

1858:
old  <	; Parameter double Â£temporary3762 72>
new  <	; Parameter double Â£temporary3772 72>

1919:
old  <	; GetReturnValue Â£temporary3764>
new  <	; GetReturnValue Â£temporary3774>

1922:
old  <	; Parameter double Â£temporary3764 72>
new  <	; Parameter double Â£temporary3774 72>

1983:
old  <	; GetReturnValue Â£temporary3766>
new  <	; GetReturnValue Â£temporary3776>

1986:
old  <	; Parameter double Â£temporary3766 72>
new  <	; Parameter double Â£temporary3776 72>

2047:
old  <	; GetReturnValue Â£temporary3768>
new  <	; GetReturnValue Â£temporary3778>

2050:
old  <	; Parameter double Â£temporary3768 72>
new  <	; Parameter double Â£temporary3778 72>

2111:
old  <	; GetReturnValue Â£temporary3770>
new  <	; GetReturnValue Â£temporary3780>

2114:
old  <	; Parameter double Â£temporary3770 72>
new  <	; Parameter double Â£temporary3780 72>

2175:
old  <	; GetReturnValue Â£temporary3772>
new  <	; GetReturnValue Â£temporary3782>

2178:
old  <	; Parameter double Â£temporary3772 72>
new  <	; Parameter double Â£temporary3782 72>

2239:
old  <	; GetReturnValue Â£temporary3774>
new  <	; GetReturnValue Â£temporary3784>

2242:
old  <	; Parameter double Â£temporary3774 72>
new  <	; Parameter double Â£temporary3784 72>

2303:
old  <	; GetReturnValue Â£temporary3776>
new  <	; GetReturnValue Â£temporary3786>

2306:
old  <	; Parameter double Â£temporary3776 72>
new  <	; Parameter double Â£temporary3786 72>

2367:
old  <	; GetReturnValue Â£temporary3778>
new  <	; GetReturnValue Â£temporary3788>

2370:
old  <	; Parameter double Â£temporary3778 72>
new  <	; Parameter double Â£temporary3788 72>

2410:
old  <	; Address Â£temporary3780 j>
new  <	; Address Â£temporary3790 j>

2415:
old  <	; Parameter pointer Â£temporary3780 68>
new  <	; Parameter pointer Â£temporary3790 68>

2429:
old  <	; GetReturnValue Â£temporary3781>
new  <	; GetReturnValue Â£temporary3791>

2526:
old  <	; Address Â£temporary3785 w>
new  <	; Address Â£temporary3795 w>

2531:
old  <	; Parameter pointer Â£temporary3785 72>
new  <	; Parameter pointer Â£temporary3795 72>

2545:
old  <	; GetReturnValue Â£temporary3786>
new  <	; GetReturnValue Â£temporary3796>

2738:
old  <	; GetReturnValue Â£temporary3849>
new  <	; GetReturnValue Â£temporary3859>

2741:
old  <	; Parameter double Â£temporary3849 88>
new  <	; Parameter double Â£temporary3859 88>

2818:
old  <	; GetReturnValue Â£temporary3851>
new  <	; GetReturnValue Â£temporary3861>

2821:
old  <	; Parameter double Â£temporary3851 88>
new  <	; Parameter double Â£temporary3861 88>

2898:
old  <	; GetReturnValue Â£temporary3853>
new  <	; GetReturnValue Â£temporary3863>

2901:
old  <	; Parameter double Â£temporary3853 88>
new  <	; Parameter double Â£temporary3863 88>

2963:
old  <	; FloatingToIntegral Â£temporary3856 y>
new  <	; FloatingToIntegral Â£temporary3866 y>

2968:
old  <	; Parameter signedint Â£temporary3856 80>
new  <	; Parameter signedint Â£temporary3866 80>

2987:
old  <	; FloatingToIntegral Â£temporary3857 y>
new  <	; FloatingToIntegral Â£temporary3867 y>

2992:
old  <	; Parameter signedint Â£temporary3857 116>
new  <	; Parameter signedint Â£temporary3867 116>

3006:
old  <	; GetReturnValue Â£temporary3858>
new  <	; GetReturnValue Â£temporary3868>

3009:
old  <	; Parameter double Â£temporary3858 84>
new  <	; Parameter double Â£temporary3868 84>

FileTest.asm
399:
old  <	; GetReturnValue Â£temporary3878>
new  <	; GetReturnValue Â£temporary3888>

402:
old  <	; Assign inFilePtrPtr Â£temporary3878>
new  <	; Assign inFilePtrPtr Â£temporary3888>

428:
old  <	; GetReturnValue Â£temporary3879>
new  <	; GetReturnValue Â£temporary3889>

431:
old  <	; Assign outFilePtrPtr Â£temporary3879>
new  <	; Assign outFilePtrPtr Â£temporary3889>

559:
old  <	; Address Â£temporary3888 size>
new  <	; Address Â£temporary3898 size>

564:
old  <	; Parameter pointer Â£temporary3888 104>
new  <	; Parameter pointer Â£temporary3898 104>

605:
old  <	; Parameter double Â£temporary3892 96>
new  <	; Parameter double Â£temporary3902 96>

619:
old  <	; GetReturnValue Â£temporary3893>
new  <	; GetReturnValue Â£temporary3903>

638:
old  <	; Address Â£temporary3894 inValue>
new  <	; Address Â£temporary3904 inValue>

643:
old  <	; Parameter pointer Â£temporary3894 120>
new  <	; Parameter pointer Â£temporary3904 120>

766:
old  <	; GetReturnValue Â£temporary3899>
new  <	; GetReturnValue Â£temporary3909>

769:
old  <	; NotEqual 97 Â£temporary3899 0>
new  <	; NotEqual 97 Â£temporary3909 0>

837:
old  <	; GetReturnValue Â£temporary3902>
new  <	; GetReturnValue Â£temporary3912>

840:
old  <	; Parameter pointer Â£temporary3902 92>
new  <	; Parameter pointer Â£temporary3912 92>

878:
old  <	; GetReturnValue Â£temporary3904>
new  <	; GetReturnValue Â£temporary3914>

881:
old  <	; NotEqual 121 Â£temporary3904 0>
new  <	; NotEqual 121 Â£temporary3914 0>

944:
old  <	; GetReturnValue Â£temporary3907>
new  <	; GetReturnValue Â£temporary3917>

947:
old  <	; Parameter pointer Â£temporary3907 84>
new  <	; Parameter pointer Â£temporary3917 84>

984:
old  <	; GetReturnValue Â£temporary3909>
new  <	; GetReturnValue Â£temporary3919>

987:
old  <	; Assign inFilePtr Â£temporary3909>
new  <	; Assign inFilePtr Â£temporary3919>

1111:
old  <	; Address Â£temporary3916 size>
new  <	; Address Â£temporary3926 size>

1116:
old  <	; Parameter pointer Â£temporary3916 96>
new  <	; Parameter pointer Â£temporary3926 96>

1279:
old  <	; GetReturnValue Â£temporary3924>
new  <	; GetReturnValue Â£temporary3934>

1282:
old  <	; Assign inFilePtr Â£temporary3924>
new  <	; Assign inFilePtr Â£temporary3934>

1308:
old  <	; GetReturnValue Â£temporary3925>
new  <	; GetReturnValue Â£temporary3935>

1311:
old  <	; Assign outFilePtr Â£temporary3925>
new  <	; Assign outFilePtr Â£temporary3935>

1441:
old  <	; GetReturnValue Â£temporary3934>
new  <	; GetReturnValue Â£temporary3944>

1444:
old  <	; IntegralToIntegral Â£temporary3935 Â£temporary3934>
new  <	; IntegralToIntegral Â£temporary3945 Â£temporary3944>

1451:
old  <	; Assign c Â£temporary3935>
new  <	; Assign c Â£temporary3945>

1455:
old  <	; IntegralToIntegral Â£temporary3936 c>
new  <	; IntegralToIntegral Â£temporary3946 c>

1464:
old  <	; Equal 257 Â£temporary3936 -1>
new  <	; Equal 257 Â£temporary3946 -1>

1472:
old  <	; IntegralToIntegral Â£temporary3938 c>
new  <	; IntegralToIntegral Â£temporary3948 c>

1481:
old  <	; Parameter signedint Â£temporary3938 97>
new  <	; Parameter signedint Â£temporary3948 97>

1588:
old  <	; GetReturnValue Â£temporary3945>
new  <	; GetReturnValue Â£temporary3955>

1591:
old  <	; Assign outFilePtr Â£temporary3945>
new  <	; Assign outFilePtr Â£temporary3955>

1656:
old  <	; Address Â£temporary3950 size>
new  <	; Address Â£temporary3960 size>

1661:
old  <	; Parameter pointer Â£temporary3950 80>
new  <	; Parameter pointer Â£temporary3960 80>

1698:
old  <	; SignedMultiply Â£temporary3954 index index>
new  <	; SignedMultiply Â£temporary3964 index index>

1704:
old  <	; IntegralToFloating Â£temporary3955 Â£temporary3954>
new  <	; IntegralToFloating Â£temporary3965 Â£temporary3964>

1716:
old  <	; Address Â£temporary3956 value>
new  <	; Address Â£temporary3966 value>

1721:
old  <	; Parameter pointer Â£temporary3956 88>
new  <	; Parameter pointer Â£temporary3966 88>

1795:
old  <	; GetReturnValue Â£temporary3959>
new  <	; GetReturnValue Â£temporary3969>

1798:
old  <	; Assign inFilePtr Â£temporary3959>
new  <	; Assign inFilePtr Â£temporary3969>

1859:
old  <	; Address Â£temporary3964 size>
new  <	; Address Â£temporary3974 size>

1864:
old  <	; Parameter pointer Â£temporary3964 160>
new  <	; Parameter pointer Â£temporary3974 160>

1918:
old  <	; Address Â£temporary3967 arr>
new  <	; Address Â£temporary3977 arr>

1923:
old  <	; Parameter pointer Â£temporary3967 160>
new  <	; Parameter pointer Â£temporary3977 160>

1989:
old  <	; IntegralToIntegral Â£temporary3973 index>
new  <	; IntegralToIntegral Â£temporary3983 index>

1995:
old  <	; UnsignedMultiply Â£temporary3974 Â£temporary3973 8>
new  <	; UnsignedMultiply Â£temporary3984 Â£temporary3983 8>

2000:
old  <	; BinaryAdd Â£temporary3975 arr Â£temporary3974>
new  <	; BinaryAdd Â£temporary3985 arr Â£temporary3984>

2006:
old  <	; Dereference Â£temporary3972 -> Â£temporary3975 Â£temporary3975 0>
new  <	; Dereference Â£temporary3982 -> Â£temporary3985 Â£temporary3985 0>

2009:
old  <	; PushFloat Â£temporary3972 -> Â£temporary3975>
new  <	; PushFloat Â£temporary3982 -> Â£temporary3985>

2013:
old  <	; Parameter double Â£temporary3972 -> Â£temporary3975 172>
new  <	; Parameter double Â£temporary3982 -> Â£temporary3985 172>

2076:
old  <	; GetReturnValue Â£temporary3978>
new  <	; GetReturnValue Â£temporary3988>

2079:
old  <	; Assign inFilePtr Â£temporary3978>
new  <	; Assign inFilePtr Â£temporary3988>

2140:
old  <	; Address Â£temporary3983 size>
new  <	; Address Â£temporary3993 size>

2145:
old  <	; Parameter pointer Â£temporary3983 80>
new  <	; Parameter pointer Â£temporary3993 80>

2209:
old  <	; Address Â£temporary3988 value>
new  <	; Address Â£temporary3998 value>

2214:
old  <	; Parameter pointer Â£temporary3988 88>
new  <	; Parameter pointer Â£temporary3998 88>

2338:
old  <	; GetReturnValue Â£temporary3993>
new  <	; GetReturnValue Â£temporary4003>

2341:
old  <	; Assign inFilePtr Â£temporary3993>
new  <	; Assign inFilePtr Â£temporary4003>

2402:
old  <	; Address Â£temporary3998 size>
new  <	; Address Â£temporary4008 size>

2407:
old  <	; Parameter pointer Â£temporary3998 76>
new  <	; Parameter pointer Â£temporary4008 76>

2446:
old  <	; SignedMultiply Â£temporary4000 size 8>
new  <	; SignedMultiply Â£temporary4010 size 8>

2452:
old  <	; Parameter signedint Â£temporary4000 88>
new  <	; Parameter signedint Â£temporary4010 88>

2493:
old  <	; GetReturnValue Â£temporary4003>
new  <	; GetReturnValue Â£temporary4013>

2496:
old  <	; Assign p Â£temporary4003>
new  <	; Assign p Â£temporary4013>

2500:
old  <	; IntegralToIntegral Â£temporary4004 size>
new  <	; IntegralToIntegral Â£temporary4014 size>

2506:
old  <	; UnsignedMultiply Â£temporary4006 Â£temporary4004 8>
new  <	; UnsignedMultiply Â£temporary4016 Â£temporary4014 8>

2511:
old  <	; BinaryAdd endPtr p Â£temporary4006>
new  <	; BinaryAdd endPtr p Â£temporary4016>

2659:
old  <	; IntegralToIntegral Â£temporary4016 index>
new  <	; IntegralToIntegral Â£temporary4026 index>

2665:
old  <	; UnsignedMultiply Â£temporary4017 Â£temporary4016 8>
new  <	; UnsignedMultiply Â£temporary4027 Â£temporary4026 8>

2670:
old  <	; BinaryAdd Â£temporary4018 p Â£temporary4017>
new  <	; BinaryAdd Â£temporary4028 p Â£temporary4027>

2675:
old  <	; Dereference Â£temporary4015 -> Â£temporary4018 Â£temporary4018 0>
new  <	; Dereference Â£temporary4025 -> Â£temporary4028 Â£temporary4028 0>

2678:
old  <	; PushFloat Â£temporary4015 -> Â£temporary4018>
new  <	; PushFloat Â£temporary4025 -> Â£temporary4028>

2682:
old  <	; Parameter double Â£temporary4015 -> Â£temporary4018 112>
new  <	; Parameter double Â£temporary4025 -> Â£temporary4028 112>

2997:
old  <	; GetReturnValue Â£temporary4083>
new  <	; GetReturnValue Â£temporary4093>

3000:
old  <	; Assign outFilePtr Â£temporary4083>
new  <	; Assign outFilePtr Â£temporary4093>

3025:
old  <	; GetReturnValue Â£temporary4084>
new  <	; GetReturnValue Â£temporary4094>

3028:
old  <	; Assign inFilePtr Â£temporary4084>
new  <	; Assign inFilePtr Â£temporary4094>

3207:
old  <	; GetReturnValue Â£temporary4095>
new  <	; GetReturnValue Â£temporary4105>

3210:
old  <	; NotEqual 659 Â£temporary4095 0>
new  <	; NotEqual 659 Â£temporary4105 0>

3218:
old  <	; Address Â£temporary4098 person>
new  <	; Address Â£temporary4108 person>

3223:
old  <	; Parameter pointer Â£temporary4098 288>
new  <	; Parameter pointer Â£temporary4108 288>

3341:
old  <	; GetReturnValue Â£temporary4105>
new  <	; GetReturnValue Â£temporary4115>

3344:
old  <	; Assign inFilePtr Â£temporary4105>
new  <	; Assign inFilePtr Â£temporary4115>

3446:
old  <	; GetReturnValue Â£temporary4111>
new  <	; GetReturnValue Â£temporary4121>

3449:
old  <	; IntegralToIntegral Â£temporary4112 Â£temporary4111>
new  <	; IntegralToIntegral Â£temporary4122 Â£temporary4121>

3452:
old  <	; Assign u Â£temporary4112>
new  <	; Assign u Â£temporary4122>

3479:
old  <	; GetReturnValue Â£temporary4114>
new  <	; GetReturnValue Â£temporary4124>

3482:
old  <	; IntegralToIntegral Â£temporary4115 Â£temporary4114>
new  <	; IntegralToIntegral Â£temporary4125 Â£temporary4124>

3489:
old  <	; Assign c Â£temporary4115>
new  <	; Assign c Â£temporary4125>

3496:
old  <	; IntegralToIntegral Â£temporary4116 c>
new  <	; IntegralToIntegral Â£temporary4126 c>

3505:
old  <	; Parameter signedint Â£temporary4116 77>
new  <	; Parameter signedint Â£temporary4126 77>

3614:
old  <	; GetReturnValue Â£temporary4122>
new  <	; GetReturnValue Â£temporary4132>

3617:
old  <	; Equal 734 Â£temporary4122 0>
new  <	; Equal 734 Â£temporary4132 0>

3622:
old  <	; Assign Â£temporary4124 "Yes">
new  <	; Assign Â£temporary4134 "Yes">

3630:
old  <	; Assign Â£temporary4124 "No">
new  <	; Assign Â£temporary4134 "No">

3634:
old  <	; Parameter pointer Â£temporary4124 72>
new  <	; Parameter pointer Â£temporary4134 72>

3674:
old  <	; GetReturnValue Â£temporary4126>
new  <	; GetReturnValue Â£temporary4136>

3677:
old  <	; Equal 748 Â£temporary4126 0>
new  <	; Equal 748 Â£temporary4136 0>

3682:
old  <	; Assign Â£temporary4128 "Yes">
new  <	; Assign Â£temporary4138 "Yes">

3690:
old  <	; Assign Â£temporary4128 "No">
new  <	; Assign Â£temporary4138 "No">

3694:
old  <	; Parameter pointer Â£temporary4128 72>
new  <	; Parameter pointer Â£temporary4138 72>

3731:
old  <	; GetReturnValue Â£temporary4130>
new  <	; GetReturnValue Â£temporary4140>

3734:
old  <	; Assign inOutFilePtr Â£temporary4130>
new  <	; Assign inOutFilePtr Â£temporary4140>

3805:
old  <	; GetReturnValue Â£temporary4135>
new  <	; GetReturnValue Â£temporary4145>

3808:
old  <	; Assign tempFilePtr Â£temporary4135>
new  <	; Assign tempFilePtr Â£temporary4145>

3884:
old  <	; GetReturnValue Â£temporary4140>
new  <	; GetReturnValue Â£temporary4150>

3887:
old  <	; IntegralToIntegral Â£temporary4141 Â£temporary4140>
new  <	; IntegralToIntegral Â£temporary4151 Â£temporary4150>

3894:
old  <	; Assign c Â£temporary4141>
new  <	; Assign c Â£temporary4151>

3898:
old  <	; IntegralToIntegral Â£temporary4142 c>
new  <	; IntegralToIntegral Â£temporary4152 c>

3907:
old  <	; Equal 809 Â£temporary4142 -1>
new  <	; Equal 809 Â£temporary4152 -1>

3918:
old  <	; IntegralToIntegral Â£temporary4144 c>
new  <	; IntegralToIntegral Â£temporary4154 c>

3927:
old  <	; Parameter signedint Â£temporary4144 81>
new  <	; Parameter signedint Â£temporary4154 81>

3941:
old  <	; GetReturnValue Â£temporary4145>
new  <	; GetReturnValue Â£temporary4155>

3944:
old  <	; Parameter signedint Â£temporary4145 81>
new  <	; Parameter signedint Â£temporary4155 81>

4026:
old  <	; GetReturnValue Â£temporary4150>
new  <	; GetReturnValue Â£temporary4160>

4029:
old  <	; IntegralToIntegral Â£temporary4151 Â£temporary4150>
new  <	; IntegralToIntegral Â£temporary4161 Â£temporary4160>

4036:
old  <	; Assign c Â£temporary4151>
new  <	; Assign c Â£temporary4161>

4040:
old  <	; IntegralToIntegral Â£temporary4152 c>
new  <	; IntegralToIntegral Â£temporary4162 c>

4049:
old  <	; Equal 834 Â£temporary4152 -1>
new  <	; Equal 834 Â£temporary4162 -1>

4057:
old  <	; IntegralToIntegral Â£temporary4154 c>
new  <	; IntegralToIntegral Â£temporary4164 c>

4066:
old  <	; Parameter signedint Â£temporary4154 81>
new  <	; Parameter signedint Â£temporary4164 81>

StdIOTest.asm
213:
old  <	; Address Â£temporary4175 n>
new  <	; Address Â£temporary4185 n>

218:
old  <	; Assign p Â£temporary4175>
new  <	; Assign p Â£temporary4185>

SignalTest.asm
StackTest.asm
11:
old  <@8720$i:>
new  <@8734$i:>

31:
old  <	; Assign Â£temporary4281 i>
new  <	; Assign Â£temporary4291 i>

32:
old  <	mov eax, [@8720$i]>
new  <	mov eax, [@8734$i]>

36:
old  <	inc dword [@8720$i]>
new  <	inc dword [@8734$i]>

39:
old  <	; Parameter signedint Â£temporary4281 56>
new  <	; Parameter signedint Â£temporary4291 56>

107:
old  <	; GetReturnValue Â£temporary4284>
new  <	; GetReturnValue Â£temporary4294>

110:
old  <	; Assign pointer Â£temporary4284>
new  <	; Assign pointer Â£temporary4294>

126:
old  <	; Assign Â£temporary4286 count>
new  <	; Assign Â£temporary4296 count>

134:
old  <	; Parameter signedint Â£temporary4286 68>
new  <	; Parameter signedint Â£temporary4296 68>

MallocTest.asm
45:
old  <	; GetReturnValue Â£temporary4288>
new  <	; GetReturnValue Â£temporary4298>

48:
old  <	; Assign q Â£temporary4288>
new  <	; Assign q Â£temporary4298>

78:
old  <	; GetReturnValue Â£temporary4291>
new  <	; GetReturnValue Â£temporary4301>

81:
old  <	; Assign p Â£temporary4291>
new  <	; Assign p Â£temporary4301>

359:
old  <	; GetReturnValue Â£temporary4306>
new  <	; GetReturnValue Â£temporary4316>

362:
old  <	; Assign a Â£temporary4306>
new  <	; Assign a Â£temporary4316>

387:
old  <	; GetReturnValue Â£temporary4307>
new  <	; GetReturnValue Â£temporary4317>

390:
old  <	; Assign b Â£temporary4307>
new  <	; Assign b Â£temporary4317>

415:
old  <	; GetReturnValue Â£temporary4308>
new  <	; GetReturnValue Â£temporary4318>

418:
old  <	; Assign c Â£temporary4308>
new  <	; Assign c Â£temporary4318>

443:
old  <	; GetReturnValue Â£temporary4309>
new  <	; GetReturnValue Â£temporary4319>

446:
old  <	; Assign d Â£temporary4309>
new  <	; Assign d Â£temporary4319>

471:
old  <	; GetReturnValue Â£temporary4310>
new  <	; GetReturnValue Â£temporary4320>

474:
old  <	; Assign e Â£temporary4310>
new  <	; Assign e Â£temporary4320>

616:
old  <	; InspectRegister Â£temporary4318 bp>
new  <	; InspectRegister Â£temporary4328 bp>

619:
old  <	; IntegralToIntegral Â£temporary4319 Â£temporary4318>
new  <	; IntegralToIntegral Â£temporary4329 Â£temporary4328>

623:
old  <	; Assign stackTop Â£temporary4319>
new  <	; Assign stackTop Â£temporary4329>

639:
old  <	; Dereference Â£temporary4320 -> lowHeapPtr lowHeapPtr 0>
new  <	; Dereference Â£temporary4330 -> lowHeapPtr lowHeapPtr 0>

643:
old  <	; Parameter unsigned int Â£temporary4320 -> lowHeapPtr 72>
new  <	; Parameter unsigned int Â£temporary4330 -> lowHeapPtr 72>

727:
old  <	; GetReturnValue Â£temporary4324>
new  <	; GetReturnValue Â£temporary4334>

730:
old  <	; Assign b Â£temporary4324>
new  <	; Assign b Â£temporary4334>

751:
old  <	; GetReturnValue Â£temporary4325>
new  <	; GetReturnValue Â£temporary4335>

754:
old  <	; Assign c Â£temporary4325>
new  <	; Assign c Â£temporary4335>

775:
old  <	; GetReturnValue Â£temporary4326>
new  <	; GetReturnValue Â£temporary4336>

778:
old  <	; Assign d Â£temporary4326>
new  <	; Assign d Â£temporary4336>

944:
old  <	; InspectRegister Â£temporary4336 bp>
new  <	; InspectRegister Â£temporary4346 bp>

947:
old  <	; IntegralToIntegral Â£temporary4337 Â£temporary4336>
new  <	; IntegralToIntegral Â£temporary4347 Â£temporary4346>

951:
old  <	; Assign stackTop Â£temporary4337>
new  <	; Assign stackTop Â£temporary4347>

981:
old  <	; GetReturnValue Â£temporary4340>
new  <	; GetReturnValue Â£temporary4350>

984:
old  <	; Assign p Â£temporary4340>
new  <	; Assign p Â£temporary4350>

1010:
old  <	; Dereference Â£temporary4341 -> lowHeapPtr lowHeapPtr 0>
new  <	; Dereference Â£temporary4351 -> lowHeapPtr lowHeapPtr 0>

1014:
old  <	; Parameter unsigned int Â£temporary4341 -> lowHeapPtr 96>
new  <	; Parameter unsigned int Â£temporary4351 -> lowHeapPtr 96>

StdLibTest.asm
30:
old  <	; IntegralToIntegral Â£temporary4343 valuePtr1>
new  <	; IntegralToIntegral Â£temporary4353 valuePtr1>

34:
old  <	; Dereference Â£temporary4344 -> Â£temporary4343 Â£temporary4343 0>
new  <	; Dereference Â£temporary4354 -> Â£temporary4353 Â£temporary4353 0>

37:
old  <	; Assign intValue1 Â£temporary4344 -> Â£temporary4343>
new  <	; Assign intValue1 Â£temporary4354 -> Â£temporary4353>

42:
old  <	; IntegralToIntegral Â£temporary4345 valuePtr2>
new  <	; IntegralToIntegral Â£temporary4355 valuePtr2>

46:
old  <	; Dereference Â£temporary4346 -> Â£temporary4345 Â£temporary4345 0>
new  <	; Dereference Â£temporary4356 -> Â£temporary4355 Â£temporary4355 0>

49:
old  <	; Assign intValue2 Â£temporary4346 -> Â£temporary4345>
new  <	; Assign intValue2 Â£temporary4356 -> Â£temporary4355>

60:
old  <	; Assign Â£temporary4350 -1>
new  <	; Assign Â£temporary4360 -1>

74:
old  <	; Assign Â£temporary4350 0>
new  <	; Assign Â£temporary4360 0>

82:
old  <	; Assign Â£temporary4350 1>
new  <	; Assign Â£temporary4360 1>

86:
old  <	; Return Â£temporary4350>
new  <	; Return Â£temporary4360>

98:
old  <	; IntegralToIntegral Â£temporary4351 valuePtr1>
new  <	; IntegralToIntegral Â£temporary4361 valuePtr1>

102:
old  <	; Dereference Â£temporary4352 -> Â£temporary4351 Â£temporary4351 0>
new  <	; Dereference Â£temporary4362 -> Â£temporary4361 Â£temporary4361 0>

105:
old  <	; Assign intValue1 Â£temporary4352 -> Â£temporary4351>
new  <	; Assign intValue1 Â£temporary4362 -> Â£temporary4361>

110:
old  <	; IntegralToIntegral Â£temporary4353 valuePtr2>
new  <	; IntegralToIntegral Â£temporary4363 valuePtr2>

114:
old  <	; Dereference Â£temporary4354 -> Â£temporary4353 Â£temporary4353 0>
new  <	; Dereference Â£temporary4364 -> Â£temporary4363 Â£temporary4363 0>

117:
old  <	; Assign intValue2 Â£temporary4354 -> Â£temporary4353>
new  <	; Assign intValue2 Â£temporary4364 -> Â£temporary4363>

128:
old  <	; Assign Â£temporary4358 1>
new  <	; Assign Â£temporary4368 1>

142:
old  <	; Assign Â£temporary4358 0>
new  <	; Assign Â£temporary4368 0>

150:
old  <	; Assign Â£temporary4358 -1>
new  <	; Assign Â£temporary4368 -1>

154:
old  <	; Return Â£temporary4358>
new  <	; Return Â£temporary4368>

437:
old  <	; IntegralToIntegral Â£temporary4379 f>
new  <	; IntegralToIntegral Â£temporary4389 f>

441:
old  <	; Parameter unsigned int Â£temporary4379 64>
new  <	; Parameter unsigned int Â£temporary4389 64>

502:
old  <	; IntegralToIntegral Â£temporary4382 hello>
new  <	; IntegralToIntegral Â£temporary4392 hello>

506:
old  <	; Parameter unsigned int Â£temporary4382 56>
new  <	; Parameter unsigned int Â£temporary4392 56>

725:
old  <	; GetReturnValue Â£temporary4386>
new  <	; GetReturnValue Â£temporary4396>

728:
old  <	; Parameter double Â£temporary4386 64>
new  <	; Parameter double Â£temporary4396 64>

758:
old  <	; Address Â£temporary4388 p>
new  <	; Address Â£temporary4398 p>

763:
old  <	; Parameter pointer Â£temporary4388 96>
new  <	; Parameter pointer Â£temporary4398 96>

777:
old  <	; GetReturnValue Â£temporary4389>
new  <	; GetReturnValue Â£temporary4399>

780:
old  <	; Parameter double Â£temporary4389 64>
new  <	; Parameter double Â£temporary4399 64>

825:
old  <	; GetReturnValue Â£temporary4391>
new  <	; GetReturnValue Â£temporary4401>

828:
old  <	; Parameter pointer Â£temporary4391 56>
new  <	; Parameter pointer Â£temporary4401 56>

903:
old  <	; GetReturnValue Â£temporary4395>
new  <	; GetReturnValue Â£temporary4405>

906:
old  <	; Parameter signedint Â£temporary4395 56>
new  <	; Parameter signedint Â£temporary4405 56>

927:
old  <	; GetReturnValue Â£temporary4396>
new  <	; GetReturnValue Â£temporary4406>

930:
old  <	; Parameter signedint Â£temporary4396 60>
new  <	; Parameter signedint Â£temporary4406 60>

970:
old  <	; GetReturnValue Â£temporary4398>
new  <	; GetReturnValue Â£temporary4408>

973:
old  <	; Parameter signed long int Â£temporary4398 56>
new  <	; Parameter signed long int Â£temporary4408 56>

994:
old  <	; GetReturnValue Â£temporary4399>
new  <	; GetReturnValue Â£temporary4409>

997:
old  <	; Parameter signed long int Â£temporary4399 64>
new  <	; Parameter signed long int Â£temporary4409 64>

1034:
old  <	; GetReturnValue Â£temporary4401 -> Â£temporary4402>
new  <	; GetReturnValue Â£temporary4411 -> Â£temporary4412>

1037:
old  <	; AssignInitSize i Â£temporary4401 -> Â£temporary4402>
new  <	; AssignInitSize i Â£temporary4411 -> Â£temporary4412>

1043:
old  <	; Assign i Â£temporary4401 -> Â£temporary4402>
new  <	; Assign i Â£temporary4411 -> Â£temporary4412>

1113:
old  <	; GetReturnValue Â£temporary4406 -> Â£temporary4407>
new  <	; GetReturnValue Â£temporary4416 -> Â£temporary4417>

1116:
old  <	; AssignInitSize j Â£temporary4406 -> Â£temporary4407>
new  <	; AssignInitSize j Â£temporary4416 -> Â£temporary4417>

1122:
old  <	; Assign j Â£temporary4406 -> Â£temporary4407>
new  <	; Assign j Â£temporary4416 -> Â£temporary4417>

1182:
old  <	; GetReturnValue Â£temporary4411 -> Â£temporary4412>
new  <	; GetReturnValue Â£temporary4421 -> Â£temporary4422>

1185:
old  <	; AssignInitSize li Â£temporary4411 -> Â£temporary4412>
new  <	; AssignInitSize li Â£temporary4421 -> Â£temporary4422>

1191:
old  <	; Assign li Â£temporary4411 -> Â£temporary4412>
new  <	; Assign li Â£temporary4421 -> Â£temporary4422>

1261:
old  <	; GetReturnValue Â£temporary4416 -> Â£temporary4417>
new  <	; GetReturnValue Â£temporary4426 -> Â£temporary4427>

1264:
old  <	; AssignInitSize lj Â£temporary4416 -> Â£temporary4417>
new  <	; AssignInitSize lj Â£temporary4426 -> Â£temporary4427>

1270:
old  <	; Assign lj Â£temporary4416 -> Â£temporary4417>
new  <	; Assign lj Â£temporary4426 -> Â£temporary4427>

1364:
old  <	; IntegralToIntegral Â£temporary4429 index>
new  <	; IntegralToIntegral Â£temporary4439 index>

1370:
old  <	; UnsignedMultiply Â£temporary4431 Â£temporary4429 4>
new  <	; UnsignedMultiply Â£temporary4441 Â£temporary4439 4>

1375:
old  <	; BinaryAdd Â£temporary4430 list Â£temporary4431>
new  <	; BinaryAdd Â£temporary4440 list Â£temporary4441>

1381:
old  <	; Dereference Â£temporary4432 -> Â£temporary4430 Â£temporary4430 0>
new  <	; Dereference Â£temporary4442 -> Â£temporary4440 Â£temporary4440 0>

1384:
old  <	; Parameter signedint Â£temporary4432 -> Â£temporary4430 80>
new  <	; Parameter signedint Â£temporary4442 -> Â£temporary4440 80>

1452:
old  <	mov rdi, rbp>
new  <	jmp qsort>

1453:
old  <	jmp qsort>
new  <>

1454:
old  <>
new  < stdlib_test$161:>

1455:
old  < stdlib_test$161:>
new  <	; PostCall 48>

1456:
old  <	; PostCall 48>
new  <>

1457:
old  <>
new  < stdlib_test$162:>

1458:
old  < stdlib_test$162:>
new  <	; Assign index 0>

1459:
old  <	; Assign index 0>
new  <	mov dword [rbp + 44], 0>

1460:
old  <	mov dword [rbp + 44], 0>
new  <>

1461:
old  <>
new  < stdlib_test$163:>

1462:
old  < stdlib_test$163:>
new  <	; SignedGreaterThanEqual 175 index size>

1463:
old  <	; SignedGreaterThanEqual 175 index size>
new  <	mov eax, [rbp + 40]>

1464:
old  <	mov eax, [rbp + 40]>
new  <	cmp [rbp + 44], eax>

1465:
old  <	cmp [rbp + 44], eax>
new  <	jge stdlib_test$175>

1466:
old  <	jge stdlib_test$175>
new  <>

1467:
old  <>
new  < stdlib_test$164:>

1468:
old  < stdlib_test$164:>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1469:
old  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1470:
old  <>
new  < stdlib_test$165:>

1471:
old  < stdlib_test$165:>
new  <	; Parameter pointer "%i " 72>

1472:
old  <	; Parameter pointer "%i " 72>
new  <	mov qword [rbp + 72], string_25i20#>

1473:
old  <	mov qword [rbp + 72], string_25i20#>
new  <>

1474:
old  <>
new  < stdlib_test$166:>

1475:
old  < stdlib_test$166:>
new  <	; IntegralToIntegral Â£temporary4449 index>

1476:
old  <	; IntegralToIntegral Â£temporary4439 index>
new  <	mov eax, [rbp + 44]>

1477:
old  <	mov eax, [rbp + 44]>
new  <	mov rbx, 4294967295>

1478:
old  <	mov rbx, 4294967295>
new  <	and rax, rbx>

1479:
old  <	and rax, rbx>
new  <>

1480:
old  <>
new  < stdlib_test$167:>

1481:
old  < stdlib_test$167:>
new  <	; UnsignedMultiply Â£temporary4451 Â£temporary4449 4>

1482:
old  <	; UnsignedMultiply Â£temporary4441 Â£temporary4439 4>
new  <	xor rdx, rdx>

1483:
old  <	xor rdx, rdx>
new  <	mul qword [int8$4#]>

1484:
old  <	mul qword [int8$4#]>
new  <>

1485:
old  <>
new  < stdlib_test$168:>

1486:
old  < stdlib_test$168:>
new  <	; BinaryAdd Â£temporary4450 list Â£temporary4451>

1487:
old  <	; BinaryAdd Â£temporary4440 list Â£temporary4441>
new  <	mov rsi, rbp>

1488:
old  <	mov rsi, rbp>
new  <	add rsi, 24>

1489:
old  <	add rsi, 24>
new  <	add rsi, rax>

1490:
old  <	add rsi, rax>
new  <>

1491:
old  <>
new  < stdlib_test$169:>

1492:
old  < stdlib_test$169:>
new  <	; Dereference Â£temporary4452 -> Â£temporary4450 Â£temporary4450 0>

1493:
old  <	; Dereference Â£temporary4442 -> Â£temporary4440 Â£temporary4440 0>
new  <>

1494:
old  <>
new  < stdlib_test$170:>

1495:
old  < stdlib_test$170:>
new  <	; Parameter signedint Â£temporary4452 -> Â£temporary4450 80>

1496:
old  <	; Parameter signedint Â£temporary4442 -> Â£temporary4440 80>
new  <	mov eax, [rsi]>

1497:
old  <	mov eax, [rsi]>
new  <	mov [rbp + 80], eax>

1498:
old  <	mov [rbp + 80], eax>
new  <>

1499:
old  <>
new  < stdlib_test$171:>

1500:
old  < stdlib_test$171:>
new  <	; Call printf 48 4>

1501:
old  <	; Call printf 48 4>
new  <	mov qword [rbp + 48], stdlib_test$172>

1502:
old  <	mov qword [rbp + 48], stdlib_test$172>
new  <	mov [rbp + 56], rbp>

1503:
old  <	mov [rbp + 56], rbp>
new  <	add rbp, 48>

1504:
old  <	add rbp, 48>
new  <	mov rdi, rbp>

1505:
old  <	mov rdi, rbp>
new  <	add rdi, 4>

1506:
old  <	add rdi, 4>
new  <	jmp printf>

1507:
old  <	jmp printf>
new  <>

1508:
old  <>
new  < stdlib_test$172:>

1509:
old  < stdlib_test$172:>
new  <	; PostCall 48>

1510:
old  <	; PostCall 48>
new  <>

1511:
old  <>
new  < stdlib_test$173:>

1512:
old  < stdlib_test$173:>
new  <	; BinaryAdd index index 1>

1513:
old  <	; BinaryAdd index index 1>
new  <	inc dword [rbp + 44]>

1514:
old  <	inc dword [rbp + 44]>
new  <>

1515:
old  <>
new  < stdlib_test$174:>

1516:
old  < stdlib_test$174:>
new  <	; Goto 163>

1517:
old  <	; Goto 163>
new  <	jmp stdlib_test$163>

1518:
old  <	jmp stdlib_test$163>
new  <>

1519:
old  <>
new  < stdlib_test$175:>

1520:
old  < stdlib_test$175:>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1521:
old  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1522:
old  <>
new  < stdlib_test$176:>

1523:
old  < stdlib_test$176:>
new  <	; Parameter pointer "\nC List 3: " 72>

1524:
old  <	; Parameter pointer "\nC List 3: " 72>
new  <	mov qword [rbp + 72], string_0AC20List2033A20#>

1525:
old  <	mov qword [rbp + 72], string_0AC20List2033A20#>
new  <>

1526:
old  <>
new  < stdlib_test$177:>

1527:
old  < stdlib_test$177:>
new  <	; Call printf 48 0>

1528:
old  <	; Call printf 48 0>
new  <	mov qword [rbp + 48], stdlib_test$178>

1529:
old  <	mov qword [rbp + 48], stdlib_test$178>
new  <	mov [rbp + 56], rbp>

1530:
old  <	mov [rbp + 56], rbp>
new  <	add rbp, 48>

1531:
old  <	add rbp, 48>
new  <	mov rdi, rbp>

1532:
old  <	mov rdi, rbp>
new  <	jmp printf>

1533:
old  <	jmp printf>
new  <>

1534:
old  <>
new  < stdlib_test$178:>

1535:
old  < stdlib_test$178:>
new  <	; PostCall 48>

1536:
old  <	; PostCall 48>
new  <>

1537:
old  <>
new  < stdlib_test$179:>

1538:
old  < stdlib_test$179:>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1539:
old  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1540:
old  <>
new  < stdlib_test$180:>

1541:
old  < stdlib_test$180:>
new  <	; Parameter pointer list 72>

1542:
old  <	; Parameter pointer list 72>
new  <	mov [rbp + 72], rbp>

1543:
old  <	mov [rbp + 72], rbp>
new  <	add qword [rbp + 72], 24>

1544:
old  <	add qword [rbp + 72], 24>
new  <>

1545:
old  <>
new  < stdlib_test$181:>

1546:
old  < stdlib_test$181:>
new  <	; Parameter signedint size 80>

1547:
old  <	; Parameter signedint size 80>
new  <	mov eax, [rbp + 40]>

1548:
old  <	mov eax, [rbp + 40]>
new  <	mov [rbp + 80], eax>

1549:
old  <	mov [rbp + 80], eax>
new  <>

1550:
old  <>
new  < stdlib_test$182:>

1551:
old  < stdlib_test$182:>
new  <	; Parameter signedint 4 84>

1552:
old  <	; Parameter signedint 4 84>
new  <	mov dword [rbp + 84], 4>

1553:
old  <	mov dword [rbp + 84], 4>
new  <>

1554:
old  <>
new  < stdlib_test$183:>

1555:
old  < stdlib_test$183:>
new  <	; Parameter pointer reverse_compare 88>

1556:
old  <	; Parameter pointer reverse_compare 88>
new  <	mov qword [rbp + 88], reverse_compare>

1557:
old  <	mov qword [rbp + 88], reverse_compare>
new  <>

1558:
old  <>
new  < stdlib_test$184:>

1559:
old  < stdlib_test$184:>
new  <	; Call qsort 48 0>

1560:
old  <	; Call qsort 48 0>
new  <	mov qword [rbp + 48], stdlib_test$185>

1561:
old  <	mov qword [rbp + 48], stdlib_test$185>
new  <	mov [rbp + 56], rbp>

1562:
old  <	mov [rbp + 56], rbp>
new  <	add rbp, 48>

1563:
old  <	add rbp, 48>
new  <	jmp qsort>

1564:
old  <	mov rdi, rbp>
new  <>

1565:
old  <	jmp qsort>
new  < stdlib_test$185:>

1566:
old  <>
new  <	; PostCall 48>

1567:
old  < stdlib_test$185:>
new  <>

1568:
old  <	; PostCall 48>
new  < stdlib_test$186:>

1569:
old  <>
new  <	; Assign index 0>

1570:
old  < stdlib_test$186:>
new  <	mov dword [rbp + 44], 0>

1571:
old  <	; Assign index 0>
new  <>

1572:
old  <	mov dword [rbp + 44], 0>
new  < stdlib_test$187:>

1573:
old  <>
new  <	; SignedGreaterThanEqual 199 index size>

1574:
old  < stdlib_test$187:>
new  <	mov eax, [rbp + 40]>

1575:
old  <	; SignedGreaterThanEqual 199 index size>
new  <	cmp [rbp + 44], eax>

1576:
old  <	mov eax, [rbp + 40]>
new  <	jge stdlib_test$199>

1577:
old  <	cmp [rbp + 44], eax>
new  <>

1578:
old  <	jge stdlib_test$199>
new  < stdlib_test$188:>

1579:
old  <>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1580:
old  < stdlib_test$188:>
new  <>

1581:
old  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < stdlib_test$189:>

1582:
old  <>
new  <	; Parameter pointer "%i " 72>

1583:
old  < stdlib_test$189:>
new  <	mov qword [rbp + 72], string_25i20#>

1584:
old  <	; Parameter pointer "%i " 72>
new  <>

1585:
old  <	mov qword [rbp + 72], string_25i20#>
new  < stdlib_test$190:>

1586:
old  <>
new  <	; IntegralToIntegral Â£temporary4459 index>

1587:
old  < stdlib_test$190:>
new  <	mov eax, [rbp + 44]>

1588:
old  <	; IntegralToIntegral Â£temporary4449 index>
new  <	mov rbx, 4294967295>

1589:
old  <	mov eax, [rbp + 44]>
new  <	and rax, rbx>

1590:
old  <	mov rbx, 4294967295>
new  <>

1591:
old  <	and rax, rbx>
new  < stdlib_test$191:>

1592:
old  <>
new  <	; UnsignedMultiply Â£temporary4461 Â£temporary4459 4>

1593:
old  < stdlib_test$191:>
new  <	xor rdx, rdx>

1594:
old  <	; UnsignedMultiply Â£temporary4451 Â£temporary4449 4>
new  <	mul qword [int8$4#]>

1595:
old  <	xor rdx, rdx>
new  <>

1596:
old  <	mul qword [int8$4#]>
new  < stdlib_test$192:>

1597:
old  <>
new  <	; BinaryAdd Â£temporary4460 list Â£temporary4461>

1598:
old  < stdlib_test$192:>
new  <	mov rsi, rbp>

1599:
old  <	; BinaryAdd Â£temporary4450 list Â£temporary4451>
new  <	add rsi, 24>

1600:
old  <	mov rsi, rbp>
new  <	add rsi, rax>

1601:
old  <	add rsi, 24>
new  <>

1602:
old  <	add rsi, rax>
new  < stdlib_test$193:>

1603:
old  <>
new  <	; Dereference Â£temporary4462 -> Â£temporary4460 Â£temporary4460 0>

1604:
old  < stdlib_test$193:>
new  <>

1605:
old  <	; Dereference Â£temporary4452 -> Â£temporary4450 Â£temporary4450 0>
new  < stdlib_test$194:>

1606:
old  <>
new  <	; Parameter signedint Â£temporary4462 -> Â£temporary4460 80>

1607:
old  < stdlib_test$194:>
new  <	mov eax, [rsi]>

1608:
old  <	; Parameter signedint Â£temporary4452 -> Â£temporary4450 80>
new  <	mov [rbp + 80], eax>

1609:
old  <	mov eax, [rsi]>
new  <>

1610:
old  <	mov [rbp + 80], eax>
new  < stdlib_test$195:>

1611:
old  <>
new  <	; Call printf 48 4>

1612:
old  < stdlib_test$195:>
new  <	mov qword [rbp + 48], stdlib_test$196>

1613:
old  <	; Call printf 48 4>
new  <	mov [rbp + 56], rbp>

1614:
old  <	mov qword [rbp + 48], stdlib_test$196>
new  <	add rbp, 48>

1615:
old  <	mov [rbp + 56], rbp>
new  <	mov rdi, rbp>

1616:
old  <	add rbp, 48>
new  <	add rdi, 4>

1617:
old  <	mov rdi, rbp>
new  <	jmp printf>

1618:
old  <	add rdi, 4>
new  <>

1619:
old  <	jmp printf>
new  < stdlib_test$196:>

1620:
old  <>
new  <	; PostCall 48>

1621:
old  < stdlib_test$196:>
new  <>

1622:
old  <	; PostCall 48>
new  < stdlib_test$197:>

1623:
old  <>
new  <	; BinaryAdd index index 1>

1624:
old  < stdlib_test$197:>
new  <	inc dword [rbp + 44]>

1625:
old  <	; BinaryAdd index index 1>
new  <>

1626:
old  <	inc dword [rbp + 44]>
new  < stdlib_test$198:>

1627:
old  <>
new  <	; Goto 187>

1628:
old  < stdlib_test$198:>
new  <	jmp stdlib_test$187>

1629:
old  <	; Goto 187>
new  <>

1630:
old  <	jmp stdlib_test$187>
new  < stdlib_test$199:>

1631:
old  <>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1632:
old  < stdlib_test$199:>
new  <>

1633:
old  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < stdlib_test$200:>

1634:
old  <>
new  <	; Parameter pointer "\n\nSearch:\n" 72>

1635:
old  < stdlib_test$200:>
new  <	mov qword [rbp + 72], string_0A0ASearch3A0A#>

1636:
old  <	; Parameter pointer "\n\nSearch:\n" 72>
new  <>

1637:
old  <	mov qword [rbp + 72], string_0A0ASearch3A0A#>
new  < stdlib_test$201:>

1638:
old  <>
new  <	; Call printf 48 0>

1639:
old  < stdlib_test$201:>
new  <	mov qword [rbp + 48], stdlib_test$202>

1640:
old  <	; Call printf 48 0>
new  <	mov [rbp + 56], rbp>

1641:
old  <	mov qword [rbp + 48], stdlib_test$202>
new  <	add rbp, 48>

1642:
old  <	mov [rbp + 56], rbp>
new  <	mov rdi, rbp>

1643:
old  <	add rbp, 48>
new  <	jmp printf>

1644:
old  <	mov rdi, rbp>
new  <>

1645:
old  <	jmp printf>
new  < stdlib_test$202:>

1646:
old  <>
new  <	; PostCall 48>

1647:
old  < stdlib_test$202:>
new  <>

1648:
old  <	; PostCall 48>
new  < stdlib_test$203:>

1649:
old  <>
new  <	; Assign key 0>

1650:
old  < stdlib_test$203:>
new  <	mov dword [rbp + 44], 0>

1651:
old  <	; Assign key 0>
new  <>

1652:
old  <	mov dword [rbp + 44], 0>
new  < stdlib_test$204:>

1653:
old  <>
new  <	; SignedGreaterThanEqual 232 key 6>

1654:
old  < stdlib_test$204:>
new  <	cmp dword [rbp + 44], 6>

1655:
old  <	; SignedGreaterThanEqual 232 key 6>
new  <	jge stdlib_test$232>

1656:
old  <	cmp dword [rbp + 44], 6>
new  <>

1657:
old  <	jge stdlib_test$232>
new  < stdlib_test$205:>

1658:
old  <>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1659:
old  < stdlib_test$205:>
new  <>

1660:
old  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < stdlib_test$206:>

1661:
old  <>
new  <	; Address Â£temporary4467 key>

1662:
old  < stdlib_test$206:>
new  <	mov rsi, rbp>

1663:
old  <	; Address Â£temporary4457 key>
new  <	add rsi, 44>

1664:
old  <	mov rsi, rbp>
new  <>

1665:
old  <	add rsi, 44>
new  < stdlib_test$207:>

1666:
old  <>
new  <	; Parameter pointer Â£temporary4467 72>

1667:
old  < stdlib_test$207:>
new  <	mov [rbp + 72], rsi>

1668:
old  <	; Parameter pointer Â£temporary4457 72>
new  <>

1669:
old  <	mov [rbp + 72], rsi>
new  < stdlib_test$208:>

1670:
old  <>
new  <	; Parameter pointer list 80>

1671:
old  < stdlib_test$208:>
new  <	mov [rbp + 80], rbp>

1672:
old  <	; Parameter pointer list 80>
new  <	add qword [rbp + 80], 24>

1673:
old  <	mov [rbp + 80], rbp>
new  <>

1674:
old  <	add qword [rbp + 80], 24>
new  < stdlib_test$209:>

1675:
old  <>
new  <	; Parameter signedint size 88>

1676:
old  < stdlib_test$209:>
new  <	mov eax, [rbp + 40]>

1677:
old  <	; Parameter signedint size 88>
new  <	mov [rbp + 88], eax>

1678:
old  <	mov eax, [rbp + 40]>
new  <>

1679:
old  <	mov [rbp + 88], eax>
new  < stdlib_test$210:>

1680:
old  <>
new  <	; Parameter signedint 4 92>

1681:
old  < stdlib_test$210:>
new  <	mov dword [rbp + 92], 4>

1682:
old  <	; Parameter signedint 4 92>
new  <>

1683:
old  <	mov dword [rbp + 92], 4>
new  < stdlib_test$211:>

1684:
old  <>
new  <	; Parameter pointer compare 96>

1685:
old  < stdlib_test$211:>
new  <	mov qword [rbp + 96], compare>

1686:
old  <	; Parameter pointer compare 96>
new  <>

1687:
old  <	mov qword [rbp + 96], compare>
new  < stdlib_test$212:>

1688:
old  <>
new  <	; Call bsearch 48 0>

1689:
old  < stdlib_test$212:>
new  <	mov qword [rbp + 48], stdlib_test$213>

1690:
old  <	; Call bsearch 48 0>
new  <	mov [rbp + 56], rbp>

1691:
old  <	mov qword [rbp + 48], stdlib_test$213>
new  <	add rbp, 48>

1692:
old  <	mov [rbp + 56], rbp>
new  <	jmp bsearch>

1693:
old  <	add rbp, 48>
new  <>

1694:
old  <	jmp bsearch>
new  < stdlib_test$213:>

1695:
old  <>
new  <	; PostCall 48>

1696:
old  < stdlib_test$213:>
new  <>

1697:
old  <	; PostCall 48>
new  < stdlib_test$214:>

1698:
old  <>
new  <	; GetReturnValue Â£temporary4469>

1699:
old  < stdlib_test$214:>
new  <>

1700:
old  <	; GetReturnValue Â£temporary4459>
new  < stdlib_test$215:>

1701:
old  <>
new  <	; IntegralToIntegral Â£temporary4470 Â£temporary4469>

1702:
old  < stdlib_test$215:>
new  <>

1703:
old  <	; IntegralToIntegral Â£temporary4460 Â£temporary4459>
new  < stdlib_test$216:>

1704:
old  <>
new  <	; Assign p Â£temporary4470>

1705:
old  < stdlib_test$216:>
new  <	mov [rbp + 48], rbx>

1706:
old  <	; Assign p Â£temporary4460>
new  <>

1707:
old  <	mov [rbp + 48], rbx>
new  < stdlib_test$217:>

1708:
old  <>
new  <	; Equal 222 p 0>

1709:
old  < stdlib_test$217:>
new  <	cmp qword [rbp + 48], 0>

1710:
old  <	; Equal 222 p 0>
new  <	je stdlib_test$222>

1711:
old  <	cmp qword [rbp + 48], 0>
new  <>

1712:
old  <	je stdlib_test$222>
new  < stdlib_test$218:>

1713:
old  <>
new  <	; BinarySubtract Â£temporary4473 p list>

1714:
old  < stdlib_test$218:>
new  <	mov rax, [rbp + 48]>

1715:
old  <	; BinarySubtract Â£temporary4463 p list>
new  <	mov rbx, rbp>

1716:
old  <	mov rax, [rbp + 48]>
new  <	add rbx, 24>

1717:
old  <	mov rbx, rbp>
new  <	sub rax, rbx>

1718:
old  <	add rbx, 24>
new  <>

1719:
old  <	sub rax, rbx>
new  < stdlib_test$219:>

1720:
old  <>
new  <	; UnsignedDivide Â£temporary4472 Â£temporary4473 4>

1721:
old  < stdlib_test$219:>
new  <	xor rdx, rdx>

1722:
old  <	; UnsignedDivide Â£temporary4462 Â£temporary4463 4>
new  <	div qword [int8$4#]>

1723:
old  <	xor rdx, rdx>
new  <>

1724:
old  <	div qword [int8$4#]>
new  < stdlib_test$220:>

1725:
old  <>
new  <	; IntegralToIntegral Â£temporary4475 Â£temporary4472>

1726:
old  < stdlib_test$220:>
new  <>

1727:
old  <	; IntegralToIntegral Â£temporary4465 Â£temporary4462>
new  < stdlib_test$221:>

1728:
old  <>
new  <	; Goto 223>

1729:
old  < stdlib_test$221:>
new  <	jmp stdlib_test$223>

1730:
old  <	; Goto 223>
new  <>

1731:
old  <	jmp stdlib_test$223>
new  < stdlib_test$222:>

1732:
old  <>
new  <	; Assign Â£temporary4475 -1>

1733:
old  < stdlib_test$222:>
new  <	mov eax, -1>

1734:
old  <	; Assign Â£temporary4465 -1>
new  <>

1735:
old  <	mov eax, -1>
new  < stdlib_test$223:>

1736:
old  <>
new  <	; Assign index Â£temporary4475>

1737:
old  < stdlib_test$223:>
new  <	mov [rbp + 56], eax>

1738:
old  <	; Assign index Â£temporary4465>
new  <>

1739:
old  <	mov [rbp + 56], eax>
new  < stdlib_test$224:>

1740:
old  <>
new  <	; PreCall 60 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1741:
old  < stdlib_test$224:>
new  <>

1742:
old  <	; PreCall 60 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < stdlib_test$225:>

1743:
old  <>
new  <	; Parameter pointer "  (%i, %i)\n" 84>

1744:
old  < stdlib_test$225:>
new  <	mov qword [rbp + 84], string_20202825i2C2025i290A#>

1745:
old  <	; Parameter pointer "  (%i, %i)\n" 84>
new  <>

1746:
old  <	mov qword [rbp + 84], string_20202825i2C2025i290A#>
new  < stdlib_test$226:>

1747:
old  <>
new  <	; Parameter signedint key 92>

1748:
old  < stdlib_test$226:>
new  <	mov eax, [rbp + 44]>

1749:
old  <	; Parameter signedint key 92>
new  <	mov [rbp + 92], eax>

1750:
old  <	mov eax, [rbp + 44]>
new  <>

1751:
old  <	mov [rbp + 92], eax>
new  < stdlib_test$227:>

1752:
old  <>
new  <	; Parameter signedint index 96>

1753:
old  < stdlib_test$227:>
new  <	mov eax, [rbp + 56]>

1754:
old  <	; Parameter signedint index 96>
new  <	mov [rbp + 96], eax>

1755:
old  <	mov eax, [rbp + 56]>
new  <>

1756:
old  <	mov [rbp + 96], eax>
new  < stdlib_test$228:>

1757:
old  <>
new  <	; Call printf 60 8>

1758:
old  < stdlib_test$228:>
new  <	mov qword [rbp + 60], stdlib_test$229>

1759:
old  <	; Call printf 60 8>
new  <	mov [rbp + 68], rbp>

1760:
old  <	mov qword [rbp + 60], stdlib_test$229>
new  <	add rbp, 60>

1761:
old  <	mov [rbp + 68], rbp>
new  <	mov rdi, rbp>

1762:
old  <	add rbp, 60>
new  <	add rdi, 8>

1763:
old  <	mov rdi, rbp>
new  <	jmp printf>

1764:
old  <	add rdi, 8>
new  <>

1765:
old  <	jmp printf>
new  < stdlib_test$229:>

1766:
old  <>
new  <	; PostCall 60>

1767:
old  < stdlib_test$229:>
new  <>

1768:
old  <	; PostCall 60>
new  < stdlib_test$230:>

1769:
old  <>
new  <	; BinaryAdd key key 1>

1770:
old  < stdlib_test$230:>
new  <	inc dword [rbp + 44]>

1771:
old  <	; BinaryAdd key key 1>
new  <>

1772:
old  <	inc dword [rbp + 44]>
new  < stdlib_test$231:>

1773:
old  <>
new  <	; Goto 204>

1774:
old  < stdlib_test$231:>
new  <	jmp stdlib_test$204>

1775:
old  <	; Goto 204>
new  <>

1776:
old  <	jmp stdlib_test$204>
new  < stdlib_test$232:>

1777:
old  <>
new  <	; PreCall 44 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1778:
old  < stdlib_test$232:>
new  <>

1779:
old  <	; PreCall 44 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < stdlib_test$233:>

1780:
old  <>
new  <	; Parameter pointer "\n" 68>

1781:
old  < stdlib_test$233:>
new  <	mov qword [rbp + 68], string_0A#>

1782:
old  <	; Parameter pointer "\n" 68>
new  <>

1783:
old  <	mov qword [rbp + 68], string_0A#>
new  < stdlib_test$234:>

1784:
old  <>
new  <	; Call printf 44 0>

1785:
old  < stdlib_test$234:>
new  <	mov qword [rbp + 44], stdlib_test$235>

1786:
old  <	; Call printf 44 0>
new  <	mov [rbp + 52], rbp>

1787:
old  <	mov qword [rbp + 44], stdlib_test$235>
new  <	add rbp, 44>

1788:
old  <	mov [rbp + 52], rbp>
new  <	mov rdi, rbp>

1789:
old  <	add rbp, 44>
new  <	jmp printf>

1790:
old  <	mov rdi, rbp>
new  <>

1791:
old  <	jmp printf>
new  < stdlib_test$235:>

1792:
old  <>
new  <	; PostCall 44>

1793:
old  < stdlib_test$235:>
new  <>

1794:
old  <	; PostCall 44>
new  < stdlib_test$236:>

1795:
old  <>
new  <	; Return>

1796:
old  < stdlib_test$236:>
new  <	mov rax, [rbp]>

1797:
old  <	; Return>
new  <	mov rdi, [rbp + 16]>

1798:
old  <	mov rax, [rbp]>
new  <	mov rbp, [rbp + 8]>

1799:
old  <	mov rdi, [rbp + 16]>
new  <	jmp rax>

1800:
old  <	mov rbp, [rbp + 8]>
new  <>

1801:
old  <	jmp rax>
new  < stdlib_test$237:>

1802:
old  <>
new  <	; FunctionEnd stdlib_test>

TimeTest.asm
5:
old  <	extern mktime>
new  <	extern localtime>

6:
old  <	extern printf>
new  <	extern mktime>

7:
old  <	extern localtime>
new  <	extern printf>

12:
old  <	extern $StackTop>
new  <	extern strlen>

13:
old  <>
new  <	extern $StackTop>

15:
old  <section .data>
new  <>

16:
old  <>
new  <section .data>

17:
old  <string_Sun#:>
new  <>

18:
old  <	; Initializer String Sun>
new  <string_Sun#:>

19:
old  <	db "Sun", 0>
new  <	; Initializer String Sun>

20:
old  <>
new  <	db "Sun", 0>

21:
old  <section .data>
new  <>

22:
old  <>
new  <section .data>

23:
old  <string_Mon#:>
new  <>

24:
old  <	; Initializer String Mon>
new  <string_Mon#:>

25:
old  <	db "Mon", 0>
new  <	; Initializer String Mon>

26:
old  <>
new  <	db "Mon", 0>

27:
old  <section .data>
new  <>

28:
old  <>
new  <section .data>

29:
old  <string_Tue#:>
new  <>

30:
old  <	; Initializer String Tue>
new  <string_Tue#:>

31:
old  <	db "Tue", 0>
new  <	; Initializer String Tue>

32:
old  <>
new  <	db "Tue", 0>

33:
old  <section .data>
new  <>

34:
old  <>
new  <section .data>

35:
old  <string_Wed#:>
new  <>

36:
old  <	; Initializer String Wed>
new  <string_Wed#:>

37:
old  <	db "Wed", 0>
new  <	; Initializer String Wed>

38:
old  <>
new  <	db "Wed", 0>

39:
old  <section .data>
new  <>

40:
old  <>
new  <section .data>

41:
old  <string_Thu#:>
new  <>

42:
old  <	; Initializer String Thu>
new  <string_Thu#:>

43:
old  <	db "Thu", 0>
new  <	; Initializer String Thu>

44:
old  <>
new  <	db "Thu", 0>

45:
old  <section .data>
new  <>

46:
old  <>
new  <section .data>

47:
old  <string_Fri#:>
new  <>

48:
old  <	; Initializer String Fri>
new  <string_Fri#:>

49:
old  <	db "Fri", 0>
new  <	; Initializer String Fri>

50:
old  <>
new  <	db "Fri", 0>

51:
old  <section .data>
new  <>

52:
old  <>
new  <section .data>

53:
old  <string_Sat#:>
new  <>

54:
old  <	; Initializer String Sat>
new  <string_Sat#:>

55:
old  <	db "Sat", 0>
new  <	; Initializer String Sat>

56:
old  <>
new  <	db "Sat", 0>

57:
old  <section .data>
new  <>

58:
old  <>
new  <section .data>

59:
old  <string_now2013A2025lu0A#:>
new  <>

60:
old  <	; Initializer String now 1: %lu\n>
new  <string_now2013A2025lu0A#:>

61:
old  <	db "now 1: %lu", 10, 0>
new  <	; Initializer String now 1: %lu\n>

62:
old  <>
new  <	db "now 1: %lu", 10, 0>

63:
old  <section .data>
new  <>

64:
old  <>
new  <section .data>

65:
old  <string_now2023A2025lu0A#:>
new  <>

66:
old  <	; Initializer String now 2: %lu\n>
new  <string_now2023A2025lu0A#:>

67:
old  <	db "now 2: %lu", 10, 0>
new  <	; Initializer String now 2: %lu\n>

68:
old  <>
new  <	db "now 2: %lu", 10, 0>

69:
old  <section .data>
new  <>

70:
old  <>
new  <section .data>

71:
old  <string_202020gm20time3A2025s202502i2D2502i2D2502i202502i3A2502i3A2502i2C20year20day2025i2C20week20day2025i2C20daylight20saving20time2025i0A#:>
new  <>

72:
old  <	; Initializer String    gm time: %s %02i-%02i-%02i %02i:%02i:%02i, year day %i, week day %i, daylight saving time %i\n>
new  <string_202020gm20time3A2025s2025i2D25i2D25i2025i3A25i3A25i2C20year20day2025i2C20week20day2025i2C20daylight20saving20time2025i0A#:>

73:
old  <	db "   gm time: %s %02i-%02i-%02i %02i:%02i:%02i, year day %i, week day %i, daylight saving time %i", 10, 0>
new  <	; Initializer String    gm time: %s %i-%i-%i %i:%i:%i, year day %i, week day %i, daylight saving time %i\n>

74:
old  <>
new  <	db "   gm time: %s %i-%i-%i %i:%i:%i, year day %i, week day %i, daylight saving time %i", 10, 0>

75:
old  <section .data>
new  <>

76:
old  <>
new  <section .data>

77:
old  <string_local20time3A2025s202502i2D2502i2D2502i202502i3A2502i3A2502i2C20year20day2025i2C20week20day2025i2C20daylight20saving20time2025i0A#:>
new  <>

78:
old  <	; Initializer String local time: %s %02i-%02i-%02i %02i:%02i:%02i, year day %i, week day %i, daylight saving time %i\n>
new  <string_local20time3A2025s2025i2D25i2D25i2025i3A25i3A25i2C20year20day2025i2C20week20day2025i2C20daylight20saving20time2025i0A#:>

79:
old  <	db "local time: %s %02i-%02i-%02i %02i:%02i:%02i, year day %i, week day %i, daylight saving time %i", 10, 0>
new  <	; Initializer String local time: %s %i-%i-%i %i:%i:%i, year day %i, week day %i, daylight saving time %i\n>

80:
old  <>
new  <	db "local time: %s %i-%i-%i %i:%i:%i, year day %i, week day %i, daylight saving time %i", 10, 0>

81:
old  <section .data>
new  <>

82:
old  <>
new  <section .data>

83:
old  <string_asctime203C25s3E2C20ctime203C25s3E0A#:>
new  <>

84:
old  <	; Initializer String asctime <%s>, ctime <%s>\n>
new  <string_asctime203C25s3E2C20ctime203C25s3E0A#:>

85:
old  <	db "asctime <%s>, ctime <%s>", 10, 0>
new  <	; Initializer String asctime <%s>, ctime <%s>\n>

86:
old  <>
new  <	db "asctime <%s>, ctime <%s>", 10, 0>

87:
old  <section .data>
new  <>

88:
old  <>
new  <section .data>

89:
old  <string_short20day2025a2C20long20day2025A2C20short20month2025b2C20long20month2025B2C20date2Dtime2025c2C20mday2025d2C20hour2025H2C20gm20hour2025I2C20yday2025j2C20month2025m2C20min2025M2C20am2Fpm2025p2C20sec2025S2C20week20number20sun2025U2C20week20day2025w2C20week20number20mon2025W2C20date2025x2C20time2025X2C20short20year2025y2C20long20year2025Y#:>
new  <>

90:
old  <	; Initializer String short day %a, long day %A, short month %b, long month %B, date-time %c, mday %d, hour %H, gm hour %I, yday %j, month %m, min %M, am/pm %p, sec %S, week number sun %U, week day %w, week number mon %W, date %x, time %X, short year %y, long year %Y>
new  <string_short20day2025a2C20long20day2025A2C20short20month2025b2C20long20month2025B2C20date2Dtime2025c2C20mday2025d2C20hour2025H2C20gm20hour2025I2C20yday2025j2C20month2025m2C20min2025M2C20am2Fpm2025p2C20sec2025S2C20week20number20sun2025U2C20week20day2025w2C20week20number20mon2025W2C20date2025x2C20time2025X2C20short20year2025y2C20long20year2025Y#:>

91:
old  <	db "short day %a, long day %A, short month %b, long month %B, date-time %c, mday %d, hour %H, gm hour %I, yday %j, month %m, min %M, am/pm %p, sec %S, week number sun %U, week day %w, week number mon %W, date %x, time %X, short year %y, long year %Y", 0>
new  <	; Initializer String short day %a, long day %A, short month %b, long month %B, date-time %c, mday %d, hour %H, gm hour %I, yday %j, month %m, min %M, am/pm %p, sec %S, week number sun %U, week day %w, week number mon %W, date %x, time %X, short year %y, long year %Y>

92:
old  <>
new  <	db "short day %a, long day %A, short month %b, long month %B, date-time %c, mday %d, hour %H, gm hour %I, yday %j, month %m, min %M, am/pm %p, sec %S, week number sun %U, week day %w, week number mon %W, date %x, time %X, short year %y, long year %Y", 0>

93:
old  <section .data>
new  <>

94:
old  <>
new  <section .data>

95:
old  <string_strftime203C25i3E203C25s3E0A#:>
new  <>

96:
old  <	; Initializer String strftime <%i> <%s>\n>
new  <string_strftime2025i2025i203C25s3E0A#:>

97:
old  <	db "strftime <%i> <%s>", 10, 0>
new  <	; Initializer String strftime %i %i <%s>\n>

98:
old  <>
new  <	db "strftime %i %i <%s>", 10, 0>

99:
old  <section .data>
new  <>

100:
old  <>
new  <section .data>

101:
old  <Array_8#:>
new  <>

102:
old  <	; Initializer Array 8>
new  <Array_8#:>

103:
old  <	dq 8>
new  <	; Initializer Array 8>

104:
old  <>
new  <	dq 8>

105:
old  <section .text>
new  <>

106:
old  <>
new  <section .text>

107:
old  < time_test:>
new  <>

108:
old  <	; Assign weekdays[0] "Sun">
new  < time_test:>

109:
old  <	mov qword [rbp + 24], string_Sun#>
new  <	; Assign weekdays[0] "Sun">

110:
old  <>
new  <	mov qword [rbp + 24], string_Sun#>

111:
old  < time_test$1:>
new  <>

112:
old  <	; Assign weekdays[1] "Mon">
new  < time_test$1:>

113:
old  <	mov qword [rbp + 32], string_Mon#>
new  <	; Assign weekdays[1] "Mon">

114:
old  <>
new  <	mov qword [rbp + 32], string_Mon#>

115:
old  < time_test$2:>
new  <>

116:
old  <	; Assign weekdays[2] "Tue">
new  < time_test$2:>

117:
old  <	mov qword [rbp + 40], string_Tue#>
new  <	; Assign weekdays[2] "Tue">

118:
old  <>
new  <	mov qword [rbp + 40], string_Tue#>

119:
old  < time_test$3:>
new  <>

120:
old  <	; Assign weekdays[3] "Wed">
new  < time_test$3:>

121:
old  <	mov qword [rbp + 48], string_Wed#>
new  <	; Assign weekdays[3] "Wed">

122:
old  <>
new  <	mov qword [rbp + 48], string_Wed#>

123:
old  < time_test$4:>
new  <>

124:
old  <	; Assign weekdays[4] "Thu">
new  < time_test$4:>

125:
old  <	mov qword [rbp + 56], string_Thu#>
new  <	; Assign weekdays[4] "Thu">

126:
old  <>
new  <	mov qword [rbp + 56], string_Thu#>

127:
old  < time_test$5:>
new  <>

128:
old  <	; Assign weekdays[5] "Fri">
new  < time_test$5:>

129:
old  <	mov qword [rbp + 64], string_Fri#>
new  <	; Assign weekdays[5] "Fri">

130:
old  <>
new  <	mov qword [rbp + 64], string_Fri#>

131:
old  < time_test$6:>
new  <>

132:
old  <	; Assign weekdays[6] "Sat">
new  < time_test$6:>

133:
old  <	mov qword [rbp + 72], string_Sat#>
new  <	; Assign weekdays[6] "Sat">

134:
old  <>
new  <	mov qword [rbp + 72], string_Sat#>

135:
old  < time_test$7:>
new  <>

136:
old  <	; PreCall 80 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < time_test$7:>

137:
old  <>
new  <	; PreCall 80 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

138:
old  < time_test$8:>
new  <>

139:
old  <	; Parameter pointer 0 104>
new  < time_test$8:>

140:
old  <	mov qword [rbp + 104], 0>
new  <	; Parameter pointer 0 104>

141:
old  <>
new  <	mov qword [rbp + 104], 0>

142:
old  < time_test$9:>
new  <>

143:
old  <	; Call time 80 0>
new  < time_test$9:>

144:
old  <	mov qword [rbp + 80], time_test$10>
new  <	; Call time 80 0>

145:
old  <	mov [rbp + 88], rbp>
new  <	mov qword [rbp + 80], time_test$10>

146:
old  <	add rbp, 80>
new  <	mov [rbp + 88], rbp>

147:
old  <	jmp time>
new  <	add rbp, 80>

148:
old  <>
new  <	jmp time>

149:
old  < time_test$10:>
new  <>

150:
old  <	; PostCall 80>
new  < time_test$10:>

151:
old  <>
new  <	; PostCall 80>

152:
old  < time_test$11:>
new  <>

153:
old  <	; GetReturnValue Â£temporary4489>
new  < time_test$11:>

154:
old  <>
new  <	; GetReturnValue Â£temporary4499>

155:
old  < time_test$12:>
new  <>

156:
old  <	; Assign now Â£temporary4489>
new  < time_test$12:>

157:
old  <	mov [rbp + 80], rbx>
new  <	; Assign now1 Â£temporary4499>

158:
old  <>
new  <	mov [rbp + 80], rbx>

159:
old  < time_test$13:>
new  <>

160:
old  <	; PreCall 88 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < time_test$13:>

161:
old  <>
new  <	; PreCall 88 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

162:
old  < time_test$14:>
new  <>

163:
old  <	; Address Â£temporary4490 now>
new  < time_test$14:>

164:
old  <	mov rsi, rbp>
new  <	; Address Â£temporary4500 now1>

165:
old  <	add rsi, 80>
new  <	mov rsi, rbp>

166:
old  <>
new  <	add rsi, 80>

167:
old  < time_test$15:>
new  <>

168:
old  <	; Parameter pointer Â£temporary4490 112>
new  < time_test$15:>

169:
old  <	mov [rbp + 112], rsi>
new  <	; Parameter pointer Â£temporary4500 112>

170:
old  <>
new  <	mov [rbp + 112], rsi>

171:
old  < time_test$16:>
new  <>

172:
old  <	; Call gmtime 88 0>
new  < time_test$16:>

173:
old  <	mov qword [rbp + 88], time_test$17>
new  <	; Call gmtime 88 0>

174:
old  <	mov [rbp + 96], rbp>
new  <	mov qword [rbp + 88], time_test$17>

175:
old  <	add rbp, 88>
new  <	mov [rbp + 96], rbp>

176:
old  <	jmp gmtime>
new  <	add rbp, 88>

177:
old  <>
new  <	jmp gmtime>

178:
old  < time_test$17:>
new  <>

179:
old  <	; PostCall 88>
new  < time_test$17:>

180:
old  <>
new  <	; PostCall 88>

181:
old  < time_test$18:>
new  <>

182:
old  <	; GetReturnValue Â£temporary4491>
new  < time_test$18:>

183:
old  <>
new  <	; GetReturnValue Â£temporary4501>

184:
old  < time_test$19:>
new  <>

185:
old  <	; Assign p Â£temporary4491>
new  < time_test$19:>

186:
old  <	mov [rbp + 88], rbx>
new  <	; Dereference Â£temporary4502 -> Â£temporary4501 Â£temporary4501 0>

189:
old  <	; PreCall 96 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; AssignInitSize s Â£temporary4502 -> Â£temporary4501>

190:
old  <>
new  <	mov rsi, rbp>

191:
old  < time_test$21:>
new  <	add rsi, 88>

192:
old  <	; Parameter pointer p 120>
new  <	mov al, 36>

193:
old  <	mov rax, [rbp + 88]>
new  <>

194:
old  <	mov [rbp + 120], rax>
new  < time_test$21:>

195:
old  <>
new  <	; Assign s Â£temporary4502 -> Â£temporary4501>

196:
old  < time_test$22:>
new  <	mov ah, [rbx]>

197:
old  <	; Call mktime 96 0>
new  <	mov [rsi], ah>

198:
old  <	mov qword [rbp + 96], time_test$23>
new  <	inc rbx>

199:
old  <	mov [rbp + 104], rbp>
new  <	inc rsi>

200:
old  <	add rbp, 96>
new  <	dec al>

201:
old  <	jmp mktime>
new  <	cmp al, 0>

202:
old  <>
new  <	jne time_test$21>

203:
old  < time_test$23:>
new  <>

204:
old  <	; PostCall 96>
new  < time_test$22:>

205:
old  <>
new  <	; PreCall 124 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

206:
old  < time_test$24:>
new  <>

207:
old  <	; GetReturnValue Â£temporary4492>
new  < time_test$23:>

208:
old  <>
new  <	; Address Â£temporary4503 now1>

209:
old  < time_test$25:>
new  <	mov rsi, rbp>

210:
old  <	; Assign now2 Â£temporary4492>
new  <	add rsi, 80>

211:
old  <	mov [rbp + 96], rbx>
new  <>

212:
old  <>
new  < time_test$24:>

213:
old  < time_test$26:>
new  <	; Parameter pointer Â£temporary4503 148>

214:
old  <	; Dereference Â£temporary4493 -> p p 0>
new  <	mov [rbp + 148], rsi>

215:
old  <	mov rsi, [rbp + 88]>
new  <>

216:
old  <>
new  < time_test$25:>

217:
old  < time_test$27:>
new  <	; Call localtime 124 0>

218:
old  <	; AssignInitSize s Â£temporary4493 -> p>
new  <	mov qword [rbp + 124], time_test$26>

219:
old  <	mov rdi, rbp>
new  <	mov [rbp + 132], rbp>

220:
old  <	add rdi, 104>
new  <	add rbp, 124>

221:
old  <	mov al, 36>
new  <	jmp localtime>

223:
old  < time_test$28:>
new  < time_test$26:>

224:
old  <	; Assign s Â£temporary4493 -> p>
new  <	; PostCall 124>

225:
old  <	mov ah, [rsi]>
new  <>

226:
old  <	mov [rdi], ah>
new  < time_test$27:>

227:
old  <	inc rsi>
new  <	; GetReturnValue Â£temporary4504>

228:
old  <	inc rdi>
new  <>

229:
old  <	dec al>
new  < time_test$28:>

230:
old  <	cmp al, 0>
new  <	; Dereference Â£temporary4505 -> Â£temporary4504 Â£temporary4504 0>

231:
old  <	jne time_test$28>
new  <>

232:
old  <>
new  < time_test$29:>

233:
old  < time_test$29:>
new  <	; AssignInitSize t Â£temporary4505 -> Â£temporary4504>

234:
old  <	; PreCall 140 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov rsi, rbp>

235:
old  <>
new  <	add rsi, 124>

236:
old  < time_test$30:>
new  <	mov al, 36>

237:
old  <	; Parameter pointer "now 1: %lu\n" 164>
new  <>

238:
old  <	mov qword [rbp + 164], string_now2013A2025lu0A#>
new  < time_test$30:>

239:
old  <>
new  <	; Assign t Â£temporary4505 -> Â£temporary4504>

240:
old  < time_test$31:>
new  <	mov ah, [rbx]>

241:
old  <	; Parameter unsignedlongint now 172>
new  <	mov [rsi], ah>

242:
old  <	mov rax, [rbp + 80]>
new  <	inc rbx>

243:
old  <	mov [rbp + 172], rax>
new  <	inc rsi>

244:
old  <>
new  <	dec al>

245:
old  < time_test$32:>
new  <	cmp al, 0>

246:
old  <	; Call printf 140 8>
new  <	jne time_test$30>

247:
old  <	mov qword [rbp + 140], time_test$33>
new  <>

248:
old  <	mov [rbp + 148], rbp>
new  < time_test$31:>

249:
old  <	add rbp, 140>
new  <	; PreCall 160 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

250:
old  <	mov rdi, rbp>
new  <>

251:
old  <	add rdi, 8>
new  < time_test$32:>

252:
old  <	jmp printf>
new  <	; Address Â£temporary4506 s>

253:
old  <>
new  <	mov rsi, rbp>

254:
old  < time_test$33:>
new  <	add rsi, 88>

255:
old  <	; PostCall 140>
new  <>

256:
old  <>
new  < time_test$33:>

257:
old  < time_test$34:>
new  <	; Parameter pointer Â£temporary4506 184>

258:
old  <	; PreCall 140 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov [rbp + 184], rsi>

260:
old  < time_test$35:>
new  < time_test$34:>

261:
old  <	; Parameter pointer "now 2: %lu\n" 164>
new  <	; Call mktime 160 0>

262:
old  <	mov qword [rbp + 164], string_now2023A2025lu0A#>
new  <	mov qword [rbp + 160], time_test$35>

263:
old  <>
new  <	mov [rbp + 168], rbp>

264:
old  < time_test$36:>
new  <	add rbp, 160>

265:
old  <	; Parameter unsignedlongint now2 172>
new  <	jmp mktime>

266:
old  <	mov rax, [rbp + 96]>
new  <>

267:
old  <	mov [rbp + 172], rax>
new  < time_test$35:>

268:
old  <>
new  <	; PostCall 160>

269:
old  < time_test$37:>
new  <>

270:
old  <	; Call printf 140 8>
new  < time_test$36:>

271:
old  <	mov qword [rbp + 140], time_test$38>
new  <	; GetReturnValue Â£temporary4507>

272:
old  <	mov [rbp + 148], rbp>
new  <>

273:
old  <	add rbp, 140>
new  < time_test$37:>

274:
old  <	mov rdi, rbp>
new  <	; Assign now2 Â£temporary4507>

275:
old  <	add rdi, 8>
new  <	mov [rbp + 160], rbx>

276:
old  <	jmp printf>
new  <>

277:
old  <>
new  < time_test$38:>

278:
old  < time_test$38:>
new  <	; PreCall 168 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

279:
old  <	; PostCall 140>
new  <>

280:
old  <>
new  < time_test$39:>

281:
old  < time_test$39:>
new  <	; Parameter pointer "now 1: %lu\n" 192>

282:
old  <	; PreCall 140 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov qword [rbp + 192], string_now2013A2025lu0A#>

285:
old  <	; Parameter pointer "   gm time: %s %02i-%02i-%02i %02i:%02i:%02i, year day %i, week day %i, daylight saving time %i\n" 164>
new  <	; Parameter signed long int now1 200>

286:
old  <	mov qword [rbp + 164], string_202020gm20time3A2025s202502i2D2502i2D2502i202502i3A2502i3A2502i2C20year20day2025i2C20week20day2025i2C20daylight20saving20time2025i0A#>
new  <	mov rax, [rbp + 80]>

287:
old  <>
new  <	mov [rbp + 200], rax>

288:
old  < time_test$41:>
new  <>

289:
old  <	; IntegralToIntegral Â£temporary4498 s.tm_wday>
new  < time_test$41:>

290:
old  <	mov eax, [rbp + 128]>
new  <	; Call printf 168 8>

291:
old  <	mov rbx, 4294967295>
new  <	mov qword [rbp + 168], time_test$42>

292:
old  <	and rax, rbx>
new  <	mov [rbp + 176], rbp>

293:
old  <>
new  <	add rbp, 168>

294:
old  < time_test$42:>
new  <	mov rdi, rbp>

295:
old  <	; UnsignedMultiply Â£temporary4499 Â£temporary4498 8>
new  <	add rdi, 8>

296:
old  <	xor rdx, rdx>
new  <	jmp printf>

297:
old  <	mul qword [Array_8#]>
new  <>

298:
old  <>
new  < time_test$42:>

299:
old  < time_test$43:>
new  <	; PostCall 168>

300:
old  <	; BinaryAdd Â£temporary4500 weekdays Â£temporary4499>
new  <>

301:
old  <	mov rsi, rbp>
new  < time_test$43:>

302:
old  <	add rsi, 24>
new  <	; PreCall 168 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

303:
old  <	add rsi, rax>
new  <>

304:
old  <>
new  < time_test$44:>

305:
old  < time_test$44:>
new  <	; Parameter pointer "now 2: %lu\n" 192>

306:
old  <	; Dereference Â£temporary4497 -> Â£temporary4500 Â£temporary4500 0>
new  <	mov qword [rbp + 192], string_now2023A2025lu0A#>

309:
old  <	; Parameter pointer Â£temporary4497 -> Â£temporary4500 172>
new  <	; Parameter signed long int now2 200>

310:
old  <	mov rax, [rsi]>
new  <	mov rax, [rbp + 160]>

311:
old  <	mov [rbp + 172], rax>
new  <	mov [rbp + 200], rax>

314:
old  <	; BinaryAdd Â£temporary4502 s.tm_year 1900>
new  <	; Call printf 168 8>

315:
old  <	mov eax, [rbp + 124]>
new  <	mov qword [rbp + 168], time_test$47>

316:
old  <	add eax, 1900>
new  <	mov [rbp + 176], rbp>

317:
old  <>
new  <	add rbp, 168>

318:
old  < time_test$47:>
new  <	mov rdi, rbp>

319:
old  <	; Parameter signedint Â£temporary4502 180>
new  <	add rdi, 8>

320:
old  <	mov [rbp + 180], eax>
new  <	jmp printf>

322:
old  < time_test$48:>
new  < time_test$47:>

323:
old  <	; BinaryAdd Â£temporary4504 s.tm_mon 1>
new  <	; PostCall 168>

324:
old  <	mov eax, [rbp + 120]>
new  <>

325:
old  <	inc eax>
new  < time_test$48:>

326:
old  <>
new  <	; PreCall 168 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

327:
old  < time_test$49:>
new  <>

328:
old  <	; Parameter signedint Â£temporary4504 184>
new  < time_test$49:>

329:
old  <	mov [rbp + 184], eax>
new  <	; Parameter pointer "   gm time: %s %i-%i-%i %i:%i:%i, year day %i, week day %i, daylight saving time %i\n" 192>

330:
old  <>
new  <	mov qword [rbp + 192], string_202020gm20time3A2025s2025i2D25i2D25i2025i3A25i3A25i2C20year20day2025i2C20week20day2025i2C20daylight20saving20time2025i0A#>

331:
old  < time_test$50:>
new  <>

332:
old  <	; Parameter signedint s.tm_mday 188>
new  < time_test$50:>

333:
old  <	mov eax, [rbp + 116]>
new  <	; IntegralToIntegral Â£temporary4512 s.tm_wday>

334:
old  <	mov [rbp + 188], eax>
new  <	mov eax, [rbp + 112]>

335:
old  <>
new  <	mov rbx, 4294967295>

336:
old  < time_test$51:>
new  <	and rax, rbx>

337:
old  <	; Parameter signedint s.tm_hour 192>
new  <>

338:
old  <	mov eax, [rbp + 112]>
new  < time_test$51:>

339:
old  <	mov [rbp + 192], eax>
new  <	; UnsignedMultiply Â£temporary4513 Â£temporary4512 8>

340:
old  <>
new  <	xor rdx, rdx>

341:
old  < time_test$52:>
new  <	mul qword [Array_8#]>

342:
old  <	; Parameter signedint s.tm_min 196>
new  <>

343:
old  <	mov eax, [rbp + 108]>
new  < time_test$52:>

344:
old  <	mov [rbp + 196], eax>
new  <	; BinaryAdd Â£temporary4514 weekdays Â£temporary4513>

345:
old  <>
new  <	mov rsi, rbp>

346:
old  < time_test$53:>
new  <	add rsi, 24>

347:
old  <	; Parameter signedint s.tm_sec 200>
new  <	add rsi, rax>

348:
old  <	mov eax, [rbp + 104]>
new  <>

349:
old  <	mov [rbp + 200], eax>
new  < time_test$53:>

350:
old  <>
new  <	; Dereference Â£temporary4511 -> Â£temporary4514 Â£temporary4514 0>

351:
old  < time_test$54:>
new  <>

352:
old  <	; Parameter signedint s.tm_yday 204>
new  < time_test$54:>

353:
old  <	mov eax, [rbp + 132]>
new  <	; Parameter pointer Â£temporary4511 -> Â£temporary4514 200>

354:
old  <	mov [rbp + 204], eax>
new  <	mov rax, [rsi]>

355:
old  <>
new  <	mov [rbp + 200], rax>

356:
old  < time_test$55:>
new  <>

357:
old  <	; Parameter signedint s.tm_wday 208>
new  < time_test$55:>

358:
old  <	mov eax, [rbp + 128]>
new  <	; BinaryAdd Â£temporary4516 s.tm_year 1900>

359:
old  <	mov [rbp + 208], eax>
new  <	mov eax, [rbp + 108]>

360:
old  <>
new  <	add eax, 1900>

361:
old  < time_test$56:>
new  <>

362:
old  <	; Parameter signedint s.tm_isdst 212>
new  < time_test$56:>

363:
old  <	mov eax, [rbp + 136]>
new  <	; Parameter signedint Â£temporary4516 208>

364:
old  <	mov [rbp + 212], eax>
new  <	mov [rbp + 208], eax>

367:
old  <	; Call printf 140 44>
new  <	; BinaryAdd Â£temporary4518 s.tm_mon 1>

368:
old  <	mov qword [rbp + 140], time_test$58>
new  <	mov eax, [rbp + 104]>

369:
old  <	mov [rbp + 148], rbp>
new  <	inc eax>

370:
old  <	add rbp, 140>
new  <>

371:
old  <	mov rdi, rbp>
new  < time_test$58:>

372:
old  <	add rdi, 44>
new  <	; Parameter signedint Â£temporary4518 212>

373:
old  <	jmp printf>
new  <	mov [rbp + 212], eax>

375:
old  < time_test$58:>
new  < time_test$59:>

376:
old  <	; PostCall 140>
new  <	; Parameter signedint s.tm_mday 216>

377:
old  <>
new  <	mov eax, [rbp + 100]>

378:
old  < time_test$59:>
new  <	mov [rbp + 216], eax>

379:
old  <	; PreCall 140 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

380:
old  <>
new  < time_test$60:>

381:
old  < time_test$60:>
new  <	; Parameter signedint s.tm_hour 220>

382:
old  <	; Address Â£temporary4513 now>
new  <	mov eax, [rbp + 96]>

383:
old  <	mov rsi, rbp>
new  <	mov [rbp + 220], eax>

384:
old  <	add rsi, 80>
new  <>

385:
old  <>
new  < time_test$61:>

386:
old  < time_test$61:>
new  <	; Parameter signedint s.tm_min 224>

387:
old  <	; Parameter pointer Â£temporary4513 164>
new  <	mov eax, [rbp + 92]>

388:
old  <	mov [rbp + 164], rsi>
new  <	mov [rbp + 224], eax>

391:
old  <	; Call localtime 140 0>
new  <	; Parameter signedint s.tm_sec 228>

392:
old  <	mov qword [rbp + 140], time_test$63>
new  <	mov eax, [rbp + 88]>

393:
old  <	mov [rbp + 148], rbp>
new  <	mov [rbp + 228], eax>

394:
old  <	add rbp, 140>
new  <>

395:
old  <	jmp localtime>
new  < time_test$63:>

396:
old  <>
new  <	; Parameter signedint s.tm_yday 232>

397:
old  < time_test$63:>
new  <	mov eax, [rbp + 116]>

398:
old  <	; PostCall 140>
new  <	mov [rbp + 232], eax>

401:
old  <	; GetReturnValue Â£temporary4514>
new  <	; Parameter signedint s.tm_wday 236>

402:
old  <>
new  <	mov eax, [rbp + 112]>

403:
old  < time_test$65:>
new  <	mov [rbp + 236], eax>

404:
old  <	; Dereference Â£temporary4515 -> Â£temporary4514 Â£temporary4514 0>
new  <>

405:
old  <>
new  < time_test$65:>

406:
old  < time_test$66:>
new  <	; Parameter signedint s.tm_isdst 240>

407:
old  <	; AssignInitSize s Â£temporary4515 -> Â£temporary4514>
new  <	mov eax, [rbp + 120]>

408:
old  <	mov rsi, rbp>
new  <	mov [rbp + 240], eax>

409:
old  <	add rsi, 104>
new  <>

410:
old  <	mov al, 36>
new  < time_test$66:>

411:
old  <>
new  <	; Call printf 168 44>

412:
old  < time_test$67:>
new  <	mov qword [rbp + 168], time_test$67>

413:
old  <	; Assign s Â£temporary4515 -> Â£temporary4514>
new  <	mov [rbp + 176], rbp>

414:
old  <	mov ah, [rbx]>
new  <	add rbp, 168>

415:
old  <	mov [rsi], ah>
new  <	mov rdi, rbp>

416:
old  <	inc rbx>
new  <	add rdi, 44>

417:
old  <	inc rsi>
new  <	jmp printf>

418:
old  <	dec al>
new  <>

419:
old  <	cmp al, 0>
new  < time_test$67:>

420:
old  <	jne time_test$67>
new  <	; PostCall 168>

423:
old  <	; PreCall 140 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; PreCall 168 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

426:
old  <	; Parameter pointer "local time: %s %02i-%02i-%02i %02i:%02i:%02i, year day %i, week day %i, daylight saving time %i\n" 164>
new  <	; Parameter pointer "local time: %s %i-%i-%i %i:%i:%i, year day %i, week day %i, daylight saving time %i\n" 192>

427:
old  <	mov qword [rbp + 164], string_local20time3A2025s202502i2D2502i2D2502i202502i3A2502i3A2502i2C20year20day2025i2C20week20day2025i2C20daylight20saving20time2025i0A#>
new  <	mov qword [rbp + 192], string_local20time3A2025s2025i2D25i2D25i2025i3A25i3A25i2C20year20day2025i2C20week20day2025i2C20daylight20saving20time2025i0A#>

430:
old  <	; IntegralToIntegral Â£temporary4518 s.tm_wday>
new  <	; IntegralToIntegral Â£temporary4529 t.tm_wday>

431:
old  <	mov eax, [rbp + 128]>
new  <	mov eax, [rbp + 148]>

436:
old  <	; UnsignedMultiply Â£temporary4519 Â£temporary4518 8>
new  <	; UnsignedMultiply Â£temporary4530 Â£temporary4529 8>

441:
old  <	; BinaryAdd Â£temporary4520 weekdays Â£temporary4519>
new  <	; BinaryAdd Â£temporary4531 weekdays Â£temporary4530>

447:
old  <	; Dereference Â£temporary4517 -> Â£temporary4520 Â£temporary4520 0>
new  <	; Dereference Â£temporary4528 -> Â£temporary4531 Â£temporary4531 0>

450:
old  <	; Parameter pointer Â£temporary4517 -> Â£temporary4520 172>
new  <	; Parameter pointer Â£temporary4528 -> Â£temporary4531 200>

452:
old  <	mov [rbp + 172], rax>
new  <	mov [rbp + 200], rax>

455:
old  <	; BinaryAdd Â£temporary4522 s.tm_year 1900>
new  <	; BinaryAdd Â£temporary4533 t.tm_year 1900>

456:
old  <	mov eax, [rbp + 124]>
new  <	mov eax, [rbp + 144]>

460:
old  <	; Parameter signedint Â£temporary4522 180>
new  <	; Parameter signedint Â£temporary4533 208>

461:
old  <	mov [rbp + 180], eax>
new  <	mov [rbp + 208], eax>

464:
old  <	; BinaryAdd Â£temporary4524 s.tm_mon 1>
new  <	; BinaryAdd Â£temporary4535 t.tm_mon 1>

465:
old  <	mov eax, [rbp + 120]>
new  <	mov eax, [rbp + 140]>

469:
old  <	; Parameter signedint Â£temporary4524 184>
new  <	; Parameter signedint Â£temporary4535 212>

470:
old  <	mov [rbp + 184], eax>
new  <	mov [rbp + 212], eax>

473:
old  <	; Parameter signedint s.tm_mday 188>
new  <	; Parameter signedint t.tm_mday 216>

474:
old  <	mov eax, [rbp + 116]>
new  <	mov eax, [rbp + 136]>

475:
old  <	mov [rbp + 188], eax>
new  <	mov [rbp + 216], eax>

478:
old  <	; Parameter signedint s.tm_hour 192>
new  <	; Parameter signedint t.tm_hour 220>

479:
old  <	mov eax, [rbp + 112]>
new  <	mov eax, [rbp + 132]>

480:
old  <	mov [rbp + 192], eax>
new  <	mov [rbp + 220], eax>

483:
old  <	; Parameter signedint s.tm_min 196>
new  <	; Parameter signedint t.tm_min 224>

484:
old  <	mov eax, [rbp + 108]>
new  <	mov eax, [rbp + 128]>

485:
old  <	mov [rbp + 196], eax>
new  <	mov [rbp + 224], eax>

488:
old  <	; Parameter signedint s.tm_sec 200>
new  <	; Parameter signedint t.tm_sec 228>

489:
old  <	mov eax, [rbp + 104]>
new  <	mov eax, [rbp + 124]>

490:
old  <	mov [rbp + 200], eax>
new  <	mov [rbp + 228], eax>

493:
old  <	; Parameter signedint s.tm_yday 204>
new  <	; Parameter signedint t.tm_yday 232>

494:
old  <	mov eax, [rbp + 132]>
new  <	mov eax, [rbp + 152]>

495:
old  <	mov [rbp + 204], eax>
new  <	mov [rbp + 232], eax>

498:
old  <	; Parameter signedint s.tm_wday 208>
new  <	; Parameter signedint t.tm_wday 236>

499:
old  <	mov eax, [rbp + 128]>
new  <	mov eax, [rbp + 148]>

500:
old  <	mov [rbp + 208], eax>
new  <	mov [rbp + 236], eax>

503:
old  <	; Parameter signedint s.tm_isdst 212>
new  <	; Parameter signedint t.tm_isdst 240>

504:
old  <	mov eax, [rbp + 136]>
new  <	mov eax, [rbp + 156]>

505:
old  <	mov [rbp + 212], eax>
new  <	mov [rbp + 240], eax>

508:
old  <	; Call printf 140 44>
new  <	; Call printf 168 44>

509:
old  <	mov qword [rbp + 140], time_test$87>
new  <	mov qword [rbp + 168], time_test$87>

510:
old  <	mov [rbp + 148], rbp>
new  <	mov [rbp + 176], rbp>

511:
old  <	add rbp, 140>
new  <	add rbp, 168>

517:
old  <	; PostCall 140>
new  <	; PostCall 168>

520:
old  <	; PreCall 644 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; PreCall 672 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

523:
old  <	; Parameter pointer buffer1 668>
new  <	; Parameter pointer buffer1 696>

524:
old  <	mov [rbp + 668], rbp>
new  <	mov [rbp + 696], rbp>

525:
old  <	add qword [rbp + 668], 140>
new  <	add qword [rbp + 696], 168>

528:
old  <	; PreCall 644 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; PreCall 672 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

531:
old  <	; Address Â£temporary4533 s>
new  <	; Address Â£temporary4544 s>

533:
old  <	add rsi, 104>
new  <	add rsi, 88>

536:
old  <	; Parameter pointer Â£temporary4533 700>
new  <	; Parameter pointer Â£temporary4544 728>

537:
old  <	mov [rbp + 700], rsi>
new  <	mov [rbp + 728], rsi>

540:
old  <	; Call asctime 676 0>
new  <	; Call asctime 704 0>

541:
old  <	mov qword [rbp + 676], time_test$94>
new  <	mov qword [rbp + 704], time_test$94>

542:
old  <	mov [rbp + 684], rbp>
new  <	mov [rbp + 712], rbp>

543:
old  <	add rbp, 676>
new  <	add rbp, 704>

547:
old  <	; PostCall 676>
new  <	; PostCall 704>

550:
old  <	; GetReturnValue Â£temporary4534>
new  <	; GetReturnValue Â£temporary4545>

553:
old  <	; Parameter pointer Â£temporary4534 676>
new  <	; Parameter pointer Â£temporary4545 704>

554:
old  <	mov [rbp + 676], rbx>
new  <	mov [rbp + 704], rbx>

557:
old  <	; Call strcpy 644 0>
new  <	; Call strcpy 672 0>

558:
old  <	mov qword [rbp + 644], time_test$98>
new  <	mov qword [rbp + 672], time_test$98>

559:
old  <	mov [rbp + 652], rbp>
new  <	mov [rbp + 680], rbp>

560:
old  <	add rbp, 644>
new  <	add rbp, 672>

564:
old  <	; PostCall 644>
new  <	; PostCall 672>

567:
old  <	; PreCall 644 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; PreCall 672 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

570:
old  <	; Parameter pointer buffer2 668>
new  <	; Parameter pointer buffer2 696>

571:
old  <	mov [rbp + 668], rbp>
new  <	mov [rbp + 696], rbp>

572:
old  <	add qword [rbp + 668], 240>
new  <	add qword [rbp + 696], 268>

575:
old  <	; PreCall 644 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; PreCall 672 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

578:
old  <	; Address Â£temporary4536 now>
new  <	; Address Â£temporary4547 now1>

583:
old  <	; Parameter pointer Â£temporary4536 700>
new  <	; Parameter pointer Â£temporary4547 728>

584:
old  <	mov [rbp + 700], rsi>
new  <	mov [rbp + 728], rsi>

587:
old  <	; Call ctime 676 0>
new  <	; Call ctime 704 0>

588:
old  <	mov qword [rbp + 676], time_test$105>
new  <	mov qword [rbp + 704], time_test$105>

589:
old  <	mov [rbp + 684], rbp>
new  <	mov [rbp + 712], rbp>

590:
old  <	add rbp, 676>
new  <	add rbp, 704>

594:
old  <	; PostCall 676>
new  <	; PostCall 704>

597:
old  <	; GetReturnValue Â£temporary4537>
new  <	; GetReturnValue Â£temporary4548>

600:
old  <	; Parameter pointer Â£temporary4537 676>
new  <	; Parameter pointer Â£temporary4548 704>

601:
old  <	mov [rbp + 676], rbx>
new  <	mov [rbp + 704], rbx>

604:
old  <	; Call strcpy 644 0>
new  <	; Call strcpy 672 0>

605:
old  <	mov qword [rbp + 644], time_test$109>
new  <	mov qword [rbp + 672], time_test$109>

606:
old  <	mov [rbp + 652], rbp>
new  <	mov [rbp + 680], rbp>

607:
old  <	add rbp, 644>
new  <	add rbp, 672>

611:
old  <	; PostCall 644>
new  <	; PostCall 672>

614:
old  <	; PreCall 644 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; PreCall 672 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

617:
old  <	; Parameter pointer "asctime <%s>, ctime <%s>\n" 668>
new  <	; Parameter pointer "asctime <%s>, ctime <%s>\n" 696>

618:
old  <	mov qword [rbp + 668], string_asctime203C25s3E2C20ctime203C25s3E0A#>
new  <	mov qword [rbp + 696], string_asctime203C25s3E2C20ctime203C25s3E0A#>

621:
old  <	; Parameter pointer buffer1 676>
new  <	; Parameter pointer buffer1 704>

622:
old  <	mov [rbp + 676], rbp>
new  <	mov [rbp + 704], rbp>

623:
old  <	add qword [rbp + 676], 140>
new  <	add qword [rbp + 704], 168>

626:
old  <	; Parameter pointer buffer2 684>
new  <	; Parameter pointer buffer2 712>

627:
old  <	mov [rbp + 684], rbp>
new  <	mov [rbp + 712], rbp>

628:
old  <	add qword [rbp + 684], 240>
new  <	add qword [rbp + 712], 268>

631:
old  <	; Call printf 644 16>
new  <	; Call printf 672 16>

632:
old  <	mov qword [rbp + 644], time_test$115>
new  <	mov qword [rbp + 672], time_test$115>

633:
old  <	mov [rbp + 652], rbp>
new  <	mov [rbp + 680], rbp>

634:
old  <	add rbp, 644>
new  <	add rbp, 672>

640:
old  <	; PostCall 644>
new  <	; PostCall 672>

643:
old  <	; PreCall 644 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; PreCall 672 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

646:
old  <	; Parameter pointer buffer 668>
new  <	; Parameter pointer buffer 696>

647:
old  <	mov [rbp + 668], rbp>
new  <	mov [rbp + 696], rbp>

648:
old  <	add qword [rbp + 668], 340>
new  <	add qword [rbp + 696], 368>

651:
old  <	; Parameter signedint 300 676>
new  <	; Parameter signedint 300 704>

652:
old  <	mov dword [rbp + 676], 300>
new  <	mov dword [rbp + 704], 300>

655:
old  <	; Parameter pointer "short day %a, long day %A, short month %b, long month %B, date-time %c, mday %d, hour %H, gm hour %I, yday %j, month %m, min %M, am/pm %p, sec %S, week number sun %U, week day %w, week number mon %W, date %x, time %X, short year %y, long year %Y" 680>
new  <	; Parameter pointer "short day %a, long day %A, short month %b, long month %B, date-time %c, mday %d, hour %H, gm hour %I, yday %j, month %m, min %M, am/pm %p, sec %S, week number sun %U, week day %w, week number mon %W, date %x, time %X, short year %y, long year %Y" 708>

656:
old  <	mov qword [rbp + 680], string_short20day2025a2C20long20day2025A2C20short20month2025b2C20long20month2025B2C20date2Dtime2025c2C20mday2025d2C20hour2025H2C20gm20hour2025I2C20yday2025j2C20month2025m2C20min2025M2C20am2Fpm2025p2C20sec2025S2C20week20number20sun2025U2C20week20day2025w2C20week20number20mon2025W2C20date2025x2C20time2025X2C20short20year2025y2C20long20year2025Y#>
new  <	mov qword [rbp + 708], string_short20day2025a2C20long20day2025A2C20short20month2025b2C20long20month2025B2C20date2Dtime2025c2C20mday2025d2C20hour2025H2C20gm20hour2025I2C20yday2025j2C20month2025m2C20min2025M2C20am2Fpm2025p2C20sec2025S2C20week20number20sun2025U2C20week20day2025w2C20week20number20mon2025W2C20date2025x2C20time2025X2C20short20year2025y2C20long20year2025Y#>

659:
old  <	; Address Â£temporary4540 s>
new  <	; Address Â£temporary4551 t>

661:
old  <	add rsi, 104>
new  <	add rsi, 124>

664:
old  <	; Parameter pointer Â£temporary4540 688>
new  <	; Parameter pointer Â£temporary4551 716>

665:
old  <	mov [rbp + 688], rsi>
new  <	mov [rbp + 716], rsi>

668:
old  <	; Call strftime 644 0>
new  <	; Call strftime 672 0>

669:
old  <	mov qword [rbp + 644], time_test$123>
new  <	mov qword [rbp + 672], time_test$123>

670:
old  <	mov [rbp + 652], rbp>
new  <	mov [rbp + 680], rbp>

671:
old  <	add rbp, 644>
new  <	add rbp, 672>

675:
old  <	; PostCall 644>
new  <	; PostCall 672>

678:
old  <	; GetReturnValue Â£temporary4541>
new  <	; GetReturnValue Â£temporary4552>

681:
old  <	; Assign i Â£temporary4541>
new  <	; Assign i Â£temporary4552>

682:
old  <	mov [rbp + 640], ebx>
new  <	mov [rbp + 668], ebx>

685:
old  <	; PreCall 644 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; PreCall 672 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

688:
old  <	; Parameter pointer "strftime <%i> <%s>\n" 668>
new  <	; Parameter pointer "strftime %i %i <%s>\n" 696>

689:
old  <	mov qword [rbp + 668], string_strftime203C25i3E203C25s3E0A#>
new  <	mov qword [rbp + 696], string_strftime2025i2025i203C25s3E0A#>

692:
old  <	; Parameter signedint i 676>
new  <	; Parameter signedint i 704>

693:
old  <	mov eax, [rbp + 640]>
new  <	mov eax, [rbp + 668]>

694:
old  <	mov [rbp + 676], eax>
new  <	mov [rbp + 704], eax>

697:
old  <	; Parameter pointer buffer 680>
new  <	; PreCall 672 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

698:
old  <	mov [rbp + 680], rbp>
new  <>

699:
old  <	add qword [rbp + 680], 340>
new  < time_test$130:>

700:
old  <>
new  <	; Parameter pointer buffer 732>

701:
old  < time_test$130:>
new  <	mov [rbp + 732], rbp>

702:
old  <	; Call printf 644 12>
new  <	add qword [rbp + 732], 368>

703:
old  <	mov qword [rbp + 644], time_test$131>
new  <>

704:
old  <	mov [rbp + 652], rbp>
new  < time_test$131:>

705:
old  <	add rbp, 644>
new  <	; Call strlen 708 0>

706:
old  <	mov rdi, rbp>
new  <	mov qword [rbp + 708], time_test$132>

707:
old  <	add rdi, 12>
new  <	mov [rbp + 716], rbp>

708:
old  <	jmp printf>
new  <	add rbp, 708>

709:
old  <>
new  <	jmp strlen>

710:
old  < time_test$131:>
new  <>

711:
old  <	; PostCall 644>
new  < time_test$132:>

712:
old  <>
new  <	; PostCall 708>

713:
old  < time_test$132:>
new  <>

714:
old  <	; Return>
new  < time_test$133:>

715:
old  <	mov rax, [rbp]>
new  <	; GetReturnValue Â£temporary4553>

716:
old  <	mov rdi, [rbp + 16]>
new  <>

717:
old  <	mov rbp, [rbp + 8]>
new  < time_test$134:>

718:
old  <	jmp rax>
new  <	; Parameter signedint Â£temporary4553 708>

719:
old  <>
new  <	mov [rbp + 708], ebx>

720:
old  < time_test$133:>
new  <>

721:
old  <	; FunctionEnd time_test>
new  < time_test$135:>

