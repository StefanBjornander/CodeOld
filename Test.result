14:
old  <	global main3>
new  <	global mainX4>

15:
old  <	global mains2>
new  <	global main3>

16:
old  <	global char_main>
new  <	global mains2>

17:
old  <	global assert_test>
new  <	global char_main>

18:
old  <	global assert_test2>
new  <	global assert_test>

19:
old  <>
new  <	global assert_test2>

20:
old  <	extern file_test>
new  <>

21:
old  <	extern printf>
new  <	extern file_test>

22:
old  <	extern stdout>
new  <	extern printf>

23:
old  <	extern g_outDevice>
new  <	extern stdout>

24:
old  <	extern printChar>
new  <	extern g_outDevice>

25:
old  <	extern scanf>
new  <	extern printChar>

26:
old  <	extern limits_test>
new  <	extern scanf>

27:
old  <	extern time_test>
new  <	extern limits_test>

28:
old  <	extern malloc_test>
new  <	extern time_test>

29:
old  <	extern setjmp_test>
new  <	extern malloc_test>

30:
old  <	extern main_math>
new  <	extern setjmp_test>

31:
old  <	extern stderr>
new  <	extern main_math>

32:
old  <	extern fprintf>
new  <	extern stderr>

33:
old  <	extern abort>
new  <	extern fprintf>

34:
old  <	extern mktime>
new  <	extern abort>

35:
old  <	extern character_test>
new  <	extern stdlib_test>

36:
old  <	global _start>
new  <	extern mktime>

37:
old  <	global $StackTop>
new  <	extern character_test>

38:
old  <>
new  <	global _start>

39:
old  <>
new  <	global $StackTop>

40:
old  <section .text>
new  <>

42:
old  < @334$malloc:>
new  <section .text>

43:
old  <	; Return 0>
new  <>

44:
old  <	mov rbx, 0>
new  < @334$malloc:>

45:
old  <	mov rax, [rbp]>
new  <	; Return 0>

46:
old  <	mov rdi, [rbp + 16]>
new  <	mov rbx, 0>

47:
old  <	mov rbp, [rbp + 8]>
new  <	mov rax, [rbp]>

48:
old  <	jmp rax>
new  <	mov rdi, [rbp + 16]>

49:
old  <>
new  <	mov rbp, [rbp + 8]>

50:
old  < @334$malloc$1:>
new  <	jmp rax>

51:
old  <	; FunctionEnd malloc>
new  <>

52:
old  <>
new  < @334$malloc$1:>

53:
old  <section .data>
new  <	; FunctionEnd malloc>

55:
old  <a:>
new  <section .data>

56:
old  <	; InitializerZero 16>
new  <>

57:
old  <	times 16 db 0>
new  <a:>

58:
old  <>
new  <	; InitializerZero 16>

59:
old  <section .data>
new  <	times 16 db 0>

61:
old  <string_test12Etxt#:>
new  <section .data>

62:
old  <	; Initializer String test1.txt>
new  <>

63:
old  <	db "test1.txt", 0>
new  <string_test12Etxt#:>

64:
old  <>
new  <	; Initializer String test1.txt>

65:
old  <section .data>
new  <	db "test1.txt", 0>

67:
old  <string_test22Etxt#:>
new  <section .data>

68:
old  <	; Initializer String test2.txt>
new  <>

69:
old  <	db "test2.txt", 0>
new  <string_test22Etxt#:>

70:
old  <>
new  <	; Initializer String test2.txt>

71:
old  <section .text>
new  <	db "test2.txt", 0>

73:
old  < main2:>
new  <section .text>

74:
old  <	; Assign a.p 0>
new  <>

75:
old  <	mov qword [a], 0>
new  < main2:>

76:
old  <>
new  <	; Assign a.p 0>

77:
old  < main2$1:>
new  <	mov qword [a], 0>

78:
old  <	; Assign a.q 0>
new  <>

79:
old  <	mov qword [a + 8], 0>
new  < main2$1:>

80:
old  <>
new  <	; Assign a.q 0>

81:
old  < main2$2:>
new  <	mov qword [a + 8], 0>

82:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

83:
old  <>
new  < main2$2:>

84:
old  < main2$3:>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

85:
old  <	; Parameter pointer "test1.txt" 48>
new  <>

86:
old  <	mov qword [rbp + 48], string_test12Etxt#>
new  < main2$3:>

87:
old  <>
new  <	; Parameter pointer "test1.txt" 48>

88:
old  < main2$4:>
new  <	mov qword [rbp + 48], string_test12Etxt#>

89:
old  <	; Parameter pointer "test2.txt" 56>
new  <>

90:
old  <	mov qword [rbp + 56], string_test22Etxt#>
new  < main2$4:>

91:
old  <>
new  <	; Parameter pointer "test2.txt" 56>

92:
old  < main2$5:>
new  <	mov qword [rbp + 56], string_test22Etxt#>

93:
old  <	; Call file_test 24 0>
new  <>

94:
old  <	mov qword [rbp + 24], main2$6>
new  < main2$5:>

95:
old  <	mov [rbp + 32], rbp>
new  <	; Call file_test 24 0>

96:
old  <	add rbp, 24>
new  <	mov qword [rbp + 24], main2$6>

97:
old  <	jmp file_test>
new  <	mov [rbp + 32], rbp>

98:
old  <>
new  <	add rbp, 24>

99:
old  < main2$6:>
new  <	jmp file_test>

100:
old  <	; PostCall 24>
new  <>

101:
old  <>
new  < main2$6:>

102:
old  < main2$7:>
new  <	; PostCall 24>

103:
old  <	; Return>
new  <>

104:
old  <	mov rax, [rbp]>
new  < main2$7:>

105:
old  <	mov rdi, [rbp + 16]>
new  <	; Return>

106:
old  <	mov rbp, [rbp + 8]>
new  <	mov rax, [rbp]>

107:
old  <	jmp rax>
new  <	mov rdi, [rbp + 16]>

108:
old  <>
new  <	mov rbp, [rbp + 8]>

109:
old  < main2$8:>
new  <	jmp rax>

110:
old  <	; FunctionEnd main2>
new  <>

111:
old  <>
new  < main2$8:>

112:
old  <section .data>
new  <	; FunctionEnd main2>

114:
old  <string_Hello#:>
new  <section .data>

115:
old  <	; Initializer String Hello>
new  <>

116:
old  <	db "Hello", 0>
new  <string_Hello#:>

117:
old  <>
new  <	; Initializer String Hello>

118:
old  <section .data>
new  <	db "Hello", 0>

120:
old  <string_World#:>
new  <section .data>

121:
old  <	; Initializer String World>
new  <>

122:
old  <	db "World", 0>
new  <string_World#:>

123:
old  <>
new  <	; Initializer String World>

124:
old  <section .data>
new  <	db "World", 0>

126:
old  <string_3C25s3E203C25s3E0A#:>
new  <section .data>

127:
old  <	; Initializer String <%s> <%s>\n>
new  <>

128:
old  <	db "<%s> <%s>", 10, 0>
new  <string_3C25s3E203C25s3E0A#:>

129:
old  <>
new  <	; Initializer String <%s> <%s>\n>

130:
old  <section .text>
new  <	db "<%s> <%s>", 10, 0>

132:
old  < main33:>
new  <section .text>

133:
old  <	; Assign s[0] 72>
new  <>

134:
old  <	mov byte [rbp + 24], 72>
new  < main33:>

135:
old  <>
new  <	; Assign s[0] 72>

136:
old  < main33$1:>
new  <	mov byte [rbp + 24], 72>

137:
old  <	; Assign s[1] 101>
new  <>

138:
old  <	mov byte [rbp + 25], 101>
new  < main33$1:>

139:
old  <>
new  <	; Assign s[1] 101>

140:
old  < main33$2:>
new  <	mov byte [rbp + 25], 101>

141:
old  <	; Assign s[2] 108>
new  <>

142:
old  <	mov byte [rbp + 26], 108>
new  < main33$2:>

143:
old  <>
new  <	; Assign s[2] 108>

144:
old  < main33$3:>
new  <	mov byte [rbp + 26], 108>

145:
old  <	; Assign s[3] 108>
new  <>

146:
old  <	mov byte [rbp + 27], 108>
new  < main33$3:>

147:
old  <>
new  <	; Assign s[3] 108>

148:
old  < main33$4:>
new  <	mov byte [rbp + 27], 108>

149:
old  <	; Assign s[4] 111>
new  <>

150:
old  <	mov byte [rbp + 28], 111>
new  < main33$4:>

151:
old  <>
new  <	; Assign s[4] 111>

152:
old  < main33$5:>
new  <	mov byte [rbp + 28], 111>

153:
old  <	; Assign s[5] 48>
new  <>

154:
old  <	mov byte [rbp + 29], 48>
new  < main33$5:>

155:
old  <>
new  <	; Assign s[5] 0>

156:
old  < main33$6:>
new  <	mov byte [rbp + 29], 0>

157:
old  <	; Assign t[0] 87>
new  <>

158:
old  <	mov byte [rbp + 44], 87>
new  < main33$6:>

159:
old  <>
new  <	; Assign t[0] 87>

160:
old  < main33$7:>
new  <	mov byte [rbp + 44], 87>

161:
old  <	; Assign t[1] 111>
new  <>

162:
old  <	mov byte [rbp + 45], 111>
new  < main33$7:>

163:
old  <>
new  <	; Assign t[1] 111>

164:
old  < main33$8:>
new  <	mov byte [rbp + 45], 111>

165:
old  <	; Assign t[2] 114>
new  <>

166:
old  <	mov byte [rbp + 46], 114>
new  < main33$8:>

167:
old  <>
new  <	; Assign t[2] 114>

168:
old  < main33$9:>
new  <	mov byte [rbp + 46], 114>

169:
old  <	; Assign t[3] 108>
new  <>

170:
old  <	mov byte [rbp + 47], 108>
new  < main33$9:>

171:
old  <>
new  <	; Assign t[3] 108>

172:
old  < main33$10:>
new  <	mov byte [rbp + 47], 108>

173:
old  <	; Assign t[4] 100>
new  <>

174:
old  <	mov byte [rbp + 48], 100>
new  < main33$10:>

175:
old  <>
new  <	; Assign t[4] 100>

176:
old  < main33$11:>
new  <	mov byte [rbp + 48], 100>

177:
old  <	; Assign t[5] 48>
new  <>

178:
old  <	mov byte [rbp + 49], 48>
new  < main33$11:>

179:
old  <>
new  <	; Assign t[5] 0>

180:
old  < main33$12:>
new  <	mov byte [rbp + 49], 0>

181:
old  <	; PreCall 64 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

182:
old  <>
new  < main33$12:>

183:
old  < main33$13:>
new  <	; PreCall 64 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

184:
old  <	; Parameter pointer "<%s> <%s>\n" 88>
new  <>

185:
old  <	mov qword [rbp + 88], string_3C25s3E203C25s3E0A#>
new  < main33$13:>

186:
old  <>
new  <	; Parameter pointer "<%s> <%s>\n" 88>

187:
old  < main33$14:>
new  <	mov qword [rbp + 88], string_3C25s3E203C25s3E0A#>

188:
old  <	; Parameter pointer s 96>
new  <>

189:
old  <	mov [rbp + 96], rbp>
new  < main33$14:>

190:
old  <	add qword [rbp + 96], 24>
new  <	; Parameter pointer s 96>

191:
old  <>
new  <	mov [rbp + 96], rbp>

192:
old  < main33$15:>
new  <	add qword [rbp + 96], 24>

193:
old  <	; Parameter pointer t 104>
new  <>

194:
old  <	mov [rbp + 104], rbp>
new  < main33$15:>

195:
old  <	add qword [rbp + 104], 44>
new  <	; Parameter pointer t 104>

196:
old  <>
new  <	mov [rbp + 104], rbp>

197:
old  < main33$16:>
new  <	add qword [rbp + 104], 44>

198:
old  <	; Call printf 64 16>
new  <>

199:
old  <	mov qword [rbp + 64], main33$17>
new  < main33$16:>

200:
old  <	mov [rbp + 72], rbp>
new  <	; Call printf 64 16>

201:
old  <	add rbp, 64>
new  <	mov qword [rbp + 64], main33$17>

202:
old  <	mov rdi, rbp>
new  <	mov [rbp + 72], rbp>

203:
old  <	add rdi, 16>
new  <	add rbp, 64>

204:
old  <	jmp printf>
new  <	mov rdi, rbp>

205:
old  <>
new  <	add rdi, 16>

206:
old  < main33$17:>
new  <	jmp printf>

207:
old  <	; PostCall 64>
new  <>

208:
old  <>
new  < main33$17:>

209:
old  < main33$18:>
new  <	; PostCall 64>

210:
old  <	; Return>
new  <>

211:
old  <	mov rax, [rbp]>
new  < main33$18:>

212:
old  <	mov rdi, [rbp + 16]>
new  <	; Return>

213:
old  <	mov rbp, [rbp + 8]>
new  <	mov rax, [rbp]>

214:
old  <	jmp rax>
new  <	mov rdi, [rbp + 16]>

215:
old  <>
new  <	mov rbp, [rbp + 8]>

216:
old  < main33$19:>
new  <	jmp rax>

217:
old  <	; FunctionEnd main33>
new  <>

218:
old  <>
new  < main33$19:>

219:
old  <section .text>
new  <	; FunctionEnd main33>

221:
old  < main34:>
new  <section .text>

222:
old  <	; Assign g_outDevice stdout>
new  <>

223:
old  <	mov rax, [stdout]>
new  < main34:>

224:
old  <	mov [g_outDevice], rax>
new  <	; Assign g_outDevice stdout>

225:
old  <>
new  <	mov rax, [stdout]>

226:
old  < main34$1:>
new  <	mov [g_outDevice], rax>

227:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

228:
old  <>
new  < main34$1:>

229:
old  < main34$2:>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

230:
old  <	; Parameter signedchar 88 48>
new  <>

231:
old  <	mov byte [rbp + 48], 88>
new  < main34$2:>

232:
old  <>
new  <	; Parameter signedchar 88 48>

233:
old  < main34$3:>
new  <	mov byte [rbp + 48], 88>

234:
old  <	; Call printChar 24 0>
new  <>

235:
old  <	mov qword [rbp + 24], main34$4>
new  < main34$3:>

236:
old  <	mov [rbp + 32], rbp>
new  <	; Call printChar 24 0>

237:
old  <	add rbp, 24>
new  <	mov qword [rbp + 24], main34$4>

238:
old  <	jmp printChar>
new  <	mov [rbp + 32], rbp>

239:
old  <>
new  <	add rbp, 24>

240:
old  < main34$4:>
new  <	jmp printChar>

241:
old  <	; PostCall 24>
new  <>

242:
old  <>
new  < main34$4:>

243:
old  < main34$5:>
new  <	; PostCall 24>

244:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

245:
old  <>
new  < main34$5:>

246:
old  < main34$6:>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

247:
old  <	; Parameter signedchar 10 48>
new  <>

248:
old  <	mov byte [rbp + 48], 10>
new  < main34$6:>

249:
old  <>
new  <	; Parameter signedchar 10 48>

250:
old  < main34$7:>
new  <	mov byte [rbp + 48], 10>

251:
old  <	; Call printChar 24 0>
new  <>

252:
old  <	mov qword [rbp + 24], main34$8>
new  < main34$7:>

253:
old  <	mov [rbp + 32], rbp>
new  <	; Call printChar 24 0>

254:
old  <	add rbp, 24>
new  <	mov qword [rbp + 24], main34$8>

255:
old  <	jmp printChar>
new  <	mov [rbp + 32], rbp>

256:
old  <>
new  <	add rbp, 24>

257:
old  < main34$8:>
new  <	jmp printChar>

258:
old  <	; PostCall 24>
new  <>

259:
old  <>
new  < main34$8:>

260:
old  < main34$9:>
new  <	; PostCall 24>

261:
old  <	; Return>
new  <>

262:
old  <	mov rax, [rbp]>
new  < main34$9:>

263:
old  <	mov rdi, [rbp + 16]>
new  <	; Return>

264:
old  <	mov rbp, [rbp + 8]>
new  <	mov rax, [rbp]>

265:
old  <	jmp rax>
new  <	mov rdi, [rbp + 16]>

266:
old  <>
new  <	mov rbp, [rbp + 8]>

267:
old  < main34$10:>
new  <	jmp rax>

268:
old  <	; FunctionEnd main34>
new  <>

269:
old  <>
new  < main34$10:>

270:
old  <section .data>
new  <	; FunctionEnd main34>

272:
old  <string_Please20write20a20character3A20#:>
new  <section .data>

273:
old  <	; Initializer String Please write a character: >
new  <>

274:
old  <	db "Please write a character: ", 0>
new  <string_Please20write20a20character3A20#:>

275:
old  <>
new  <	; Initializer String Please write a character: >

276:
old  <section .data>
new  <	db "Please write a character: ", 0>

278:
old  <string_25c#:>
new  <section .data>

279:
old  <	; Initializer String %c>
new  <>

280:
old  <	db "%c", 0>
new  <string_25c#:>

281:
old  <>
new  <	; Initializer String %c>

282:
old  <section .data>
new  <	db "%c", 0>

284:
old  <string_You20wrote20the20character202725c272E0A#:>
new  <section .data>

285:
old  <	; Initializer String You wrote the character '%c'.\n>
new  <>

286:
old  <	db "You wrote the character ", 39, "%c", 39, ".", 10, 0>
new  <string_You20wrote20the20character202725c272E0A#:>

287:
old  <>
new  <	; Initializer String You wrote the character '%c'.\n>

288:
old  <section .text>
new  <	db "You wrote the character ", 39, "%c", 39, ".", 10, 0>

290:
old  < mainc:>
new  <section .text>

291:
old  <	; PreCall 25 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

292:
old  <>
new  < mainc:>

293:
old  < mainc$1:>
new  <	; PreCall 25 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

294:
old  <	; Parameter pointer "Please write a character: " 49>
new  <>

295:
old  <	mov qword [rbp + 49], string_Please20write20a20character3A20#>
new  < mainc$1:>

296:
old  <>
new  <	; Parameter pointer "Please write a character: " 49>

297:
old  < mainc$2:>
new  <	mov qword [rbp + 49], string_Please20write20a20character3A20#>

298:
old  <	; Call printf 25 0>
new  <>

299:
old  <	mov qword [rbp + 25], mainc$3>
new  < mainc$2:>

300:
old  <	mov [rbp + 33], rbp>
new  <	; Call printf 25 0>

301:
old  <	add rbp, 25>
new  <	mov qword [rbp + 25], mainc$3>

302:
old  <	mov rdi, rbp>
new  <	mov [rbp + 33], rbp>

303:
old  <	jmp printf>
new  <	add rbp, 25>

304:
old  <>
new  <	mov rdi, rbp>

305:
old  < mainc$3:>
new  <	jmp printf>

306:
old  <	; PostCall 25>
new  <>

307:
old  <>
new  < mainc$3:>

308:
old  < mainc$4:>
new  <	; PostCall 25>

309:
old  <	; PreCall 25 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

310:
old  <>
new  < mainc$4:>

311:
old  < mainc$5:>
new  <	; PreCall 25 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

312:
old  <	; Parameter pointer "%c" 49>
new  <>

313:
old  <	mov qword [rbp + 49], string_25c#>
new  < mainc$5:>

314:
old  <>
new  <	; Parameter pointer "%c" 49>

315:
old  < mainc$6:>
new  <	mov qword [rbp + 49], string_25c#>

316:
old  <	; Address Â£temporary19 c>
new  <>

317:
old  <	mov rsi, rbp>
new  < mainc$6:>

318:
old  <	add rsi, 24>
new  <	; Address Â£temporary19 c>

319:
old  <>
new  <	mov rsi, rbp>

320:
old  < mainc$7:>
new  <	add rsi, 24>

321:
old  <	; Parameter pointer Â£temporary19 57>
new  <>

322:
old  <	mov [rbp + 57], rsi>
new  < mainc$7:>

323:
old  <>
new  <	; Parameter pointer Â£temporary19 57>

324:
old  < mainc$8:>
new  <	mov [rbp + 57], rsi>

325:
old  <	; Call scanf 25 8>
new  <>

326:
old  <	mov qword [rbp + 25], mainc$9>
new  < mainc$8:>

327:
old  <	mov [rbp + 33], rbp>
new  <	; Call scanf 25 8>

328:
old  <	add rbp, 25>
new  <	mov qword [rbp + 25], mainc$9>

329:
old  <	mov rdi, rbp>
new  <	mov [rbp + 33], rbp>

330:
old  <	add rdi, 8>
new  <	add rbp, 25>

331:
old  <	jmp scanf>
new  <	mov rdi, rbp>

332:
old  <>
new  <	add rdi, 8>

333:
old  < mainc$9:>
new  <	jmp scanf>

334:
old  <	; PostCall 25>
new  <>

335:
old  <>
new  < mainc$9:>

336:
old  < mainc$10:>
new  <	; PostCall 25>

337:
old  <	; PreCall 25 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

338:
old  <>
new  < mainc$10:>

339:
old  < mainc$11:>
new  <	; PreCall 25 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

340:
old  <	; Parameter pointer "You wrote the character '%c'.\n" 49>
new  <>

341:
old  <	mov qword [rbp + 49], string_You20wrote20the20character202725c272E0A#>
new  < mainc$11:>

342:
old  <>
new  <	; Parameter pointer "You wrote the character '%c'.\n" 49>

343:
old  < mainc$12:>
new  <	mov qword [rbp + 49], string_You20wrote20the20character202725c272E0A#>

344:
old  <	; IntegralToIntegral Â£temporary21 c>
new  <>

345:
old  <	mov al, [rbp + 24]>
new  < mainc$12:>

346:
old  <	and eax, 255>
new  <	; IntegralToIntegral Â£temporary21 c>

347:
old  <	cmp al, 0>
new  <	mov al, [rbp + 24]>

348:
old  <	jge mainc$13>
new  <	and eax, 255>

349:
old  <	neg al>
new  <	cmp al, 0>

350:
old  <	neg eax>
new  <	jge mainc$13>

351:
old  <>
new  <	neg al>

352:
old  < mainc$13:>
new  <	neg eax>

353:
old  <	; Parameter signedint Â£temporary21 57>
new  <>

354:
old  <	mov [rbp + 57], eax>
new  < mainc$13:>

355:
old  <>
new  <	; Parameter signedint Â£temporary21 57>

356:
old  < mainc$14:>
new  <	mov [rbp + 57], eax>

357:
old  <	; Call printf 25 4>
new  <>

358:
old  <	mov qword [rbp + 25], mainc$15>
new  < mainc$14:>

359:
old  <	mov [rbp + 33], rbp>
new  <	; Call printf 25 4>

360:
old  <	add rbp, 25>
new  <	mov qword [rbp + 25], mainc$15>

361:
old  <	mov rdi, rbp>
new  <	mov [rbp + 33], rbp>

362:
old  <	add rdi, 4>
new  <	add rbp, 25>

363:
old  <	jmp printf>
new  <	mov rdi, rbp>

364:
old  <>
new  <	add rdi, 4>

365:
old  < mainc$15:>
new  <	jmp printf>

366:
old  <	; PostCall 25>
new  <>

367:
old  <>
new  < mainc$15:>

368:
old  < mainc$16:>
new  <	; PostCall 25>

369:
old  <	; Return>
new  <>

370:
old  <	mov rax, [rbp]>
new  < mainc$16:>

371:
old  <	mov rdi, [rbp + 16]>
new  <	; Return>

372:
old  <	mov rbp, [rbp + 8]>
new  <	mov rax, [rbp]>

373:
old  <	jmp rax>
new  <	mov rdi, [rbp + 16]>

374:
old  <>
new  <	mov rbp, [rbp + 8]>

375:
old  < mainc$17:>
new  <	jmp rax>

376:
old  <	; FunctionEnd mainc>
new  <>

377:
old  <>
new  < mainc$17:>

378:
old  <section .data>
new  <	; FunctionEnd mainc>

380:
old  <string_Please20write20an20integer3A20#:>
new  <section .data>

381:
old  <	; Initializer String Please write an integer: >
new  <>

382:
old  <	db "Please write an integer: ", 0>
new  <string_Please20write20an20integer3A20#:>

383:
old  <>
new  <	; Initializer String Please write an integer: >

384:
old  <section .data>
new  <	db "Please write an integer: ", 0>

386:
old  <string_25i#:>
new  <section .data>

387:
old  <	; Initializer String %i>
new  <>

388:
old  <	db "%i", 0>
new  <string_25i#:>

389:
old  <>
new  <	; Initializer String %i>

390:
old  <section .data>
new  <	db "%i", 0>

392:
old  <string_You20wrote20the20integer2025i2E0A#:>
new  <section .data>

393:
old  <	; Initializer String You wrote the integer %i.\n>
new  <>

394:
old  <	db "You wrote the integer %i.", 10, 0>
new  <string_You20wrote20the20integer2025i2E0A#:>

395:
old  <>
new  <	; Initializer String You wrote the integer %i.\n>

396:
old  <section .text>
new  <	db "You wrote the integer %i.", 10, 0>

398:
old  < maini:>
new  <section .text>

399:
old  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

400:
old  <>
new  < maini:>

401:
old  < maini$1:>
new  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

402:
old  <	; Parameter pointer "Please write an integer: " 52>
new  <>

403:
old  <	mov qword [rbp + 52], string_Please20write20an20integer3A20#>
new  < maini$1:>

404:
old  <>
new  <	; Parameter pointer "Please write an integer: " 52>

405:
old  < maini$2:>
new  <	mov qword [rbp + 52], string_Please20write20an20integer3A20#>

406:
old  <	; Call printf 28 0>
new  <>

407:
old  <	mov qword [rbp + 28], maini$3>
new  < maini$2:>

408:
old  <	mov [rbp + 36], rbp>
new  <	; Call printf 28 0>

409:
old  <	add rbp, 28>
new  <	mov qword [rbp + 28], maini$3>

410:
old  <	mov rdi, rbp>
new  <	mov [rbp + 36], rbp>

411:
old  <	jmp printf>
new  <	add rbp, 28>

412:
old  <>
new  <	mov rdi, rbp>

413:
old  < maini$3:>
new  <	jmp printf>

414:
old  <	; PostCall 28>
new  <>

415:
old  <>
new  < maini$3:>

416:
old  < maini$4:>
new  <	; PostCall 28>

417:
old  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

418:
old  <>
new  < maini$4:>

419:
old  < maini$5:>
new  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

420:
old  <	; Parameter pointer "%i" 52>
new  <>

421:
old  <	mov qword [rbp + 52], string_25i#>
new  < maini$5:>

422:
old  <>
new  <	; Parameter pointer "%i" 52>

423:
old  < maini$6:>
new  <	mov qword [rbp + 52], string_25i#>

424:
old  <	; Address Â£temporary25 i>
new  <>

425:
old  <	mov rsi, rbp>
new  < maini$6:>

426:
old  <	add rsi, 24>
new  <	; Address Â£temporary25 i>

427:
old  <>
new  <	mov rsi, rbp>

428:
old  < maini$7:>
new  <	add rsi, 24>

429:
old  <	; Parameter pointer Â£temporary25 60>
new  <>

430:
old  <	mov [rbp + 60], rsi>
new  < maini$7:>

431:
old  <>
new  <	; Parameter pointer Â£temporary25 60>

432:
old  < maini$8:>
new  <	mov [rbp + 60], rsi>

433:
old  <	; Call scanf 28 8>
new  <>

434:
old  <	mov qword [rbp + 28], maini$9>
new  < maini$8:>

435:
old  <	mov [rbp + 36], rbp>
new  <	; Call scanf 28 8>

436:
old  <	add rbp, 28>
new  <	mov qword [rbp + 28], maini$9>

437:
old  <	mov rdi, rbp>
new  <	mov [rbp + 36], rbp>

438:
old  <	add rdi, 8>
new  <	add rbp, 28>

439:
old  <	jmp scanf>
new  <	mov rdi, rbp>

440:
old  <>
new  <	add rdi, 8>

441:
old  < maini$9:>
new  <	jmp scanf>

442:
old  <	; PostCall 28>
new  <>

443:
old  <>
new  < maini$9:>

444:
old  < maini$10:>
new  <	; PostCall 28>

445:
old  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

446:
old  <>
new  < maini$10:>

447:
old  < maini$11:>
new  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

448:
old  <	; Parameter pointer "You wrote the integer %i.\n" 52>
new  <>

449:
old  <	mov qword [rbp + 52], string_You20wrote20the20integer2025i2E0A#>
new  < maini$11:>

450:
old  <>
new  <	; Parameter pointer "You wrote the integer %i.\n" 52>

451:
old  < maini$12:>
new  <	mov qword [rbp + 52], string_You20wrote20the20integer2025i2E0A#>

452:
old  <	; Parameter signedint i 60>
new  <>

453:
old  <	mov eax, [rbp + 24]>
new  < maini$12:>

454:
old  <	mov [rbp + 60], eax>
new  <	; Parameter signedint i 60>

455:
old  <>
new  <	mov eax, [rbp + 24]>

456:
old  < maini$13:>
new  <	mov [rbp + 60], eax>

457:
old  <	; Call printf 28 4>
new  <>

458:
old  <	mov qword [rbp + 28], maini$14>
new  < maini$13:>

459:
old  <	mov [rbp + 36], rbp>
new  <	; Call printf 28 4>

460:
old  <	add rbp, 28>
new  <	mov qword [rbp + 28], maini$14>

461:
old  <	mov rdi, rbp>
new  <	mov [rbp + 36], rbp>

462:
old  <	add rdi, 4>
new  <	add rbp, 28>

463:
old  <	jmp printf>
new  <	mov rdi, rbp>

464:
old  <>
new  <	add rdi, 4>

465:
old  < maini$14:>
new  <	jmp printf>

466:
old  <	; PostCall 28>
new  <>

467:
old  <>
new  < maini$14:>

468:
old  < maini$15:>
new  <	; PostCall 28>

469:
old  <	; Return>
new  <>

470:
old  <	mov rax, [rbp]>
new  < maini$15:>

471:
old  <	mov rdi, [rbp + 16]>
new  <	; Return>

472:
old  <	mov rbp, [rbp + 8]>
new  <	mov rax, [rbp]>

473:
old  <	jmp rax>
new  <	mov rdi, [rbp + 16]>

474:
old  <>
new  <	mov rbp, [rbp + 8]>

475:
old  < maini$16:>
new  <	jmp rax>

476:
old  <	; FunctionEnd maini>
new  <>

477:
old  <>
new  < maini$16:>

478:
old  <section .data>
new  <	; FunctionEnd maini>

480:
old  <string_Please20write20a20string3A20#:>
new  <section .data>

481:
old  <	; Initializer String Please write a string: >
new  <>

482:
old  <	db "Please write a string: ", 0>
new  <string_Please20write20a20string3A20#:>

483:
old  <>
new  <	; Initializer String Please write a string: >

484:
old  <section .data>
new  <	db "Please write a string: ", 0>

486:
old  <string_25s#:>
new  <section .data>

487:
old  <	; Initializer String %s>
new  <>

488:
old  <	db "%s", 0>
new  <string_25s#:>

489:
old  <>
new  <	; Initializer String %s>

490:
old  <section .data>
new  <	db "%s", 0>

492:
old  <string_You20wrote20the20string202225s222E0A#:>
new  <section .data>

493:
old  <	; Initializer String You wrote the string "%s".\n>
new  <>

494:
old  <	db "You wrote the string ", 34, "%s", 34, ".", 10, 0>
new  <string_You20wrote20the20string202225s222E0A#:>

495:
old  <>
new  <	; Initializer String You wrote the string "%s".\n>

496:
old  <section .text>
new  <	db "You wrote the string ", 34, "%s", 34, ".", 10, 0>

498:
old  < mains:>
new  <section .text>

499:
old  <	; PreCall 44 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

500:
old  <>
new  < mains:>

501:
old  < mains$1:>
new  <	; PreCall 44 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

502:
old  <	; Parameter pointer "Please write a string: " 68>
new  <>

503:
old  <	mov qword [rbp + 68], string_Please20write20a20string3A20#>
new  < mains$1:>

504:
old  <>
new  <	; Parameter pointer "Please write a string: " 68>

505:
old  < mains$2:>
new  <	mov qword [rbp + 68], string_Please20write20a20string3A20#>

506:
old  <	; Call printf 44 0>
new  <>

507:
old  <	mov qword [rbp + 44], mains$3>
new  < mains$2:>

508:
old  <	mov [rbp + 52], rbp>
new  <	; Call printf 44 0>

509:
old  <	add rbp, 44>
new  <	mov qword [rbp + 44], mains$3>

510:
old  <	mov rdi, rbp>
new  <	mov [rbp + 52], rbp>

511:
old  <	jmp printf>
new  <	add rbp, 44>

512:
old  <>
new  <	mov rdi, rbp>

513:
old  < mains$3:>
new  <	jmp printf>

514:
old  <	; PostCall 44>
new  <>

515:
old  <>
new  < mains$3:>

516:
old  < mains$4:>
new  <	; PostCall 44>

517:
old  <	; PreCall 44 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

518:
old  <>
new  < mains$4:>

519:
old  < mains$5:>
new  <	; PreCall 44 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

520:
old  <	; Parameter pointer "%s" 68>
new  <>

521:
old  <	mov qword [rbp + 68], string_25s#>
new  < mains$5:>

522:
old  <>
new  <	; Parameter pointer "%s" 68>

523:
old  < mains$6:>
new  <	mov qword [rbp + 68], string_25s#>

524:
old  <	; Parameter pointer s 76>
new  <>

525:
old  <	mov [rbp + 76], rbp>
new  < mains$6:>

526:
old  <	add qword [rbp + 76], 24>
new  <	; Parameter pointer s 76>

527:
old  <>
new  <	mov [rbp + 76], rbp>

528:
old  < mains$7:>
new  <	add qword [rbp + 76], 24>

529:
old  <	; Call scanf 44 8>
new  <>

530:
old  <	mov qword [rbp + 44], mains$8>
new  < mains$7:>

531:
old  <	mov [rbp + 52], rbp>
new  <	; Call scanf 44 8>

532:
old  <	add rbp, 44>
new  <	mov qword [rbp + 44], mains$8>

533:
old  <	mov rdi, rbp>
new  <	mov [rbp + 52], rbp>

534:
old  <	add rdi, 8>
new  <	add rbp, 44>

535:
old  <	jmp scanf>
new  <	mov rdi, rbp>

536:
old  <>
new  <	add rdi, 8>

537:
old  < mains$8:>
new  <	jmp scanf>

538:
old  <	; PostCall 44>
new  <>

539:
old  <>
new  < mains$8:>

540:
old  < mains$9:>
new  <	; PostCall 44>

541:
old  <	; PreCall 44 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

542:
old  <>
new  < mains$9:>

543:
old  < mains$10:>
new  <	; PreCall 44 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

544:
old  <	; Parameter pointer "You wrote the string "%s".\n" 68>
new  <>

545:
old  <	mov qword [rbp + 68], string_You20wrote20the20string202225s222E0A#>
new  < mains$10:>

546:
old  <>
new  <	; Parameter pointer "You wrote the string "%s".\n" 68>

547:
old  < mains$11:>
new  <	mov qword [rbp + 68], string_You20wrote20the20string202225s222E0A#>

548:
old  <	; Parameter pointer s 76>
new  <>

549:
old  <	mov [rbp + 76], rbp>
new  < mains$11:>

550:
old  <	add qword [rbp + 76], 24>
new  <	; Parameter pointer s 76>

551:
old  <>
new  <	mov [rbp + 76], rbp>

552:
old  < mains$12:>
new  <	add qword [rbp + 76], 24>

553:
old  <	; Call printf 44 8>
new  <>

554:
old  <	mov qword [rbp + 44], mains$13>
new  < mains$12:>

555:
old  <	mov [rbp + 52], rbp>
new  <	; Call printf 44 8>

556:
old  <	add rbp, 44>
new  <	mov qword [rbp + 44], mains$13>

557:
old  <	mov rdi, rbp>
new  <	mov [rbp + 52], rbp>

558:
old  <	add rdi, 8>
new  <	add rbp, 44>

559:
old  <	jmp printf>
new  <	mov rdi, rbp>

560:
old  <>
new  <	add rdi, 8>

561:
old  < mains$13:>
new  <	jmp printf>

562:
old  <	; PostCall 44>
new  <>

563:
old  <>
new  < mains$13:>

564:
old  < mains$14:>
new  <	; PostCall 44>

565:
old  <	; Return>
new  <>

566:
old  <	mov rax, [rbp]>
new  < mains$14:>

567:
old  <	mov rdi, [rbp + 16]>
new  <	; Return>

568:
old  <	mov rbp, [rbp + 8]>
new  <	mov rax, [rbp]>

569:
old  <	jmp rax>
new  <	mov rdi, [rbp + 16]>

570:
old  <>
new  <	mov rbp, [rbp + 8]>

571:
old  < mains$15:>
new  <	jmp rax>

572:
old  <	; FunctionEnd mains>
new  <>

573:
old  <>
new  < mains$15:>

574:
old  <section .text>
new  <	; FunctionEnd mains>

576:
old  < maint:>
new  <section .text>

577:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

578:
old  <>
new  < maint:>

579:
old  < maint$1:>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

580:
old  <	; Call limits_test 24 0>
new  <>

581:
old  <	mov qword [rbp + 24], maint$2>
new  < maint$1:>

582:
old  <	mov [rbp + 32], rbp>
new  <	; Call limits_test 24 0>

583:
old  <	add rbp, 24>
new  <	mov qword [rbp + 24], maint$2>

584:
old  <	jmp limits_test>
new  <	mov [rbp + 32], rbp>

585:
old  <>
new  <	add rbp, 24>

586:
old  < maint$2:>
new  <	jmp limits_test>

587:
old  <	; PostCall 24>
new  <>

588:
old  <>
new  < maint$2:>

589:
old  < maint$3:>
new  <	; PostCall 24>

590:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

591:
old  <>
new  < maint$3:>

592:
old  < maint$4:>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

593:
old  <	; Call time_test 24 0>
new  <>

594:
old  <	mov qword [rbp + 24], maint$5>
new  < maint$4:>

595:
old  <	mov [rbp + 32], rbp>
new  <	; Call time_test 24 0>

596:
old  <	add rbp, 24>
new  <	mov qword [rbp + 24], maint$5>

597:
old  <	jmp time_test>
new  <	mov [rbp + 32], rbp>

598:
old  <>
new  <	add rbp, 24>

599:
old  < maint$5:>
new  <	jmp time_test>

600:
old  <	; PostCall 24>
new  <>

601:
old  <>
new  < maint$5:>

602:
old  < maint$6:>
new  <	; PostCall 24>

603:
old  <	; Return>
new  <>

604:
old  <	mov rax, [rbp]>
new  < maint$6:>

605:
old  <	mov rdi, [rbp + 16]>
new  <	; Return>

606:
old  <	mov rbp, [rbp + 8]>
new  <	mov rax, [rbp]>

607:
old  <	jmp rax>
new  <	mov rdi, [rbp + 16]>

608:
old  <>
new  <	mov rbp, [rbp + 8]>

609:
old  < maint$7:>
new  <	jmp rax>

610:
old  <	; FunctionEnd maint>
new  <>

611:
old  <>
new  < maint$7:>

612:
old  <section .data>
new  <	; FunctionEnd maint>

614:
old  <float8$10#:>
new  <section .data>

615:
old  <	; Initializer Double 10>
new  <>

616:
old  <	dq 10.0>
new  <float8$10#:>

617:
old  <>
new  <	; Initializer Double 10>

618:
old  <section .text>
new  <	dq 10.0>

620:
old  < mainY:>
new  <section .text>

621:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

622:
old  <>
new  < mainY:>

623:
old  < mainY$1:>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

624:
old  <	; Call malloc_test 24 0>
new  <>

625:
old  <	mov qword [rbp + 24], mainY$2>
new  < mainY$1:>

626:
old  <	mov [rbp + 32], rbp>
new  <	; Call malloc_test 24 0>

627:
old  <	add rbp, 24>
new  <	mov qword [rbp + 24], mainY$2>

628:
old  <	jmp malloc_test>
new  <	mov [rbp + 32], rbp>

629:
old  <>
new  <	add rbp, 24>

630:
old  < mainY$2:>
new  <	jmp malloc_test>

631:
old  <	; PostCall 24>
new  <>

632:
old  <>
new  < mainY$2:>

633:
old  < mainY$3:>
new  <	; PostCall 24>

634:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

635:
old  <>
new  < mainY$3:>

636:
old  < mainY$4:>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

637:
old  <	; PushFloat 10>
new  <>

638:
old  <	fld qword [float8$10#]>
new  < mainY$4:>

639:
old  <>
new  <	; PushFloat 10>

640:
old  < mainY$5:>
new  <	fld qword [float8$10#]>

641:
old  <	; Parameter double 10 48>
new  <>

642:
old  <	fstp qword [rbp + 48]>
new  < mainY$5:>

643:
old  <>
new  <	; Parameter double 10 48>

644:
old  < mainY$6:>
new  <	fstp qword [rbp + 48]>

645:
old  <	; Call setjmp_test 24 0>
new  <>

646:
old  <	mov qword [rbp + 24], mainY$7>
new  < mainY$6:>

647:
old  <	mov [rbp + 32], rbp>
new  <	; Call setjmp_test 24 0>

648:
old  <	add rbp, 24>
new  <	mov qword [rbp + 24], mainY$7>

649:
old  <	jmp setjmp_test>
new  <	mov [rbp + 32], rbp>

650:
old  <>
new  <	add rbp, 24>

651:
old  < mainY$7:>
new  <	jmp setjmp_test>

652:
old  <	; PostCall 24>
new  <>

653:
old  <>
new  < mainY$7:>

654:
old  < mainY$8:>
new  <	; PostCall 24>

655:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

656:
old  <>
new  < mainY$8:>

657:
old  < mainY$9:>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

658:
old  <	; PushFloat 0>
new  <>

659:
old  <	fldz>
new  < mainY$9:>

660:
old  <>
new  <	; PushFloat 0>

661:
old  < mainY$10:>
new  <	fldz>

662:
old  <	; Parameter double 0 48>
new  <>

663:
old  <	fstp qword [rbp + 48]>
new  < mainY$10:>

664:
old  <>
new  <	; Parameter double 0 48>

665:
old  < mainY$11:>
new  <	fstp qword [rbp + 48]>

666:
old  <	; Call setjmp_test 24 0>
new  <>

667:
old  <	mov qword [rbp + 24], mainY$12>
new  < mainY$11:>

668:
old  <	mov [rbp + 32], rbp>
new  <	; Call setjmp_test 24 0>

669:
old  <	add rbp, 24>
new  <	mov qword [rbp + 24], mainY$12>

670:
old  <	jmp setjmp_test>
new  <	mov [rbp + 32], rbp>

671:
old  <>
new  <	add rbp, 24>

672:
old  < mainY$12:>
new  <	jmp setjmp_test>

673:
old  <	; PostCall 24>
new  <>

674:
old  <>
new  < mainY$12:>

675:
old  < mainY$13:>
new  <	; PostCall 24>

676:
old  <	; Return>
new  <>

677:
old  <	mov rax, [rbp]>
new  < mainY$13:>

678:
old  <	mov rdi, [rbp + 16]>
new  <	; Return>

679:
old  <	mov rbp, [rbp + 8]>
new  <	mov rax, [rbp]>

680:
old  <	jmp rax>
new  <	mov rdi, [rbp + 16]>

681:
old  <>
new  <	mov rbp, [rbp + 8]>

682:
old  < mainY$14:>
new  <	jmp rax>

683:
old  <	; FunctionEnd mainY>
new  <>

684:
old  <>
new  < mainY$14:>

685:
old  <section .data>
new  <	; FunctionEnd mainY>

687:
old  <string_25i3A2025i203C25c3E0A#:>
new  <section .data>

688:
old  <	; Initializer String %i: %i <%c>\n>
new  <>

689:
old  <	db "%i: %i <%c>", 10, 0>
new  <string_25i3A2025i203C25c3E0A#:>

690:
old  <>
new  <	; Initializer String %i: %i <%c>\n>

691:
old  <section .data>
new  <	db "%i: %i <%c>", 10, 0>

693:
old  <string_0Aargc3A2025i0A#:>
new  <section .data>

694:
old  <	; Initializer String \nargc: %i\n>
new  <>

695:
old  <	db 10, "argc: %i", 10, 0>
new  <string_0Aargc3A2025i0A#:>

696:
old  <>
new  <	; Initializer String \nargc: %i\n>

697:
old  <section .data>
new  <	db 10, "argc: %i", 10, 0>

699:
old  <string_25i3A203C25s3E0A#:>
new  <section .data>

700:
old  <	; Initializer String %i: <%s>\n>
new  <>

701:
old  <	db "%i: <%s>", 10, 0>
new  <string_25i3A203C25s3E0A#:>

702:
old  <>
new  <	; Initializer String %i: <%s>\n>

703:
old  <section .data>
new  <	db "%i: <%s>", 10, 0>

705:
old  <string_0A#:>
new  <section .data>

706:
old  <	; Initializer String \n>
new  <>

707:
old  <	db 10, 0>
new  <string_0A#:>

708:
old  <>
new  <	; Initializer String \n>

709:
old  <section .data>
new  <	db 10, 0>

711:
old  <int8$8#:>
new  <section .data>

712:
old  <	; Initializer Pointer 8>
new  <>

713:
old  <	dq 8>
new  <int8$8#:>

714:
old  <>
new  <	; Initializer Pointer 8>

715:
old  <section .text>
new  <	dq 8>

717:
old  < mainX:>
new  <section .text>

718:
old  <	; Assign index 129>
new  <>

719:
old  <	mov dword [rbp + 36], 129>
new  < mainX:>

720:
old  <>
new  <	; Assign index 129>

721:
old  < mainX$1:>
new  <	mov dword [rbp + 36], 129>

722:
old  <	; SignedGreaterThanEqual 16 index 255>
new  <>

723:
old  <	cmp dword [rbp + 36], 255>
new  < mainX$1:>

724:
old  <	jge mainX$16>
new  <	; SignedGreaterThanEqual 16 index 255>

725:
old  <>
new  <	cmp dword [rbp + 36], 255>

726:
old  < mainX$2:>
new  <	jge mainX$16>

727:
old  <	; IntegralToIntegral Â£temporary41 index>
new  <>

728:
old  <	mov esi, [rbp + 36]>
new  < mainX$2:>

729:
old  <	mov rax, 4294967295>
new  <	; IntegralToIntegral Â£temporary41 index>

730:
old  <	and rsi, rax>
new  <	mov esi, [rbp + 36]>

731:
old  <>
new  <	mov rax, 4294967295>

732:
old  < mainX$3:>
new  <	and rsi, rax>

733:
old  <	; Dereference Â£temporary42 -> Â£temporary41 Â£temporary41 0>
new  <>

734:
old  <>
new  < mainX$3:>

735:
old  < mainX$4:>
new  <	; Dereference Â£temporary42 -> Â£temporary41 Â£temporary41 0>

736:
old  <	; Assign c Â£temporary42 -> Â£temporary41>
new  <>

737:
old  <	mov al, [rsi]>
new  < mainX$4:>

738:
old  <	mov [rbp + 40], al>
new  <	; Assign c Â£temporary42 -> Â£temporary41>

739:
old  <>
new  <	mov al, [rsi]>

740:
old  < mainX$5:>
new  <	mov [rbp + 40], al>

741:
old  <	; PreCall 41 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

742:
old  <>
new  < mainX$5:>

743:
old  < mainX$6:>
new  <	; PreCall 41 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

744:
old  <	; Parameter pointer "%i: %i <%c>\n" 65>
new  <>

745:
old  <	mov qword [rbp + 65], string_25i3A2025i203C25c3E0A#>
new  < mainX$6:>

746:
old  <>
new  <	; Parameter pointer "%i: %i <%c>\n" 65>

747:
old  < mainX$7:>
new  <	mov qword [rbp + 65], string_25i3A2025i203C25c3E0A#>

748:
old  <	; Parameter signedint index 73>
new  <>

749:
old  <	mov eax, [rbp + 36]>
new  < mainX$7:>

750:
old  <	mov [rbp + 73], eax>
new  <	; Parameter signedint index 73>

751:
old  <>
new  <	mov eax, [rbp + 36]>

752:
old  < mainX$8:>
new  <	mov [rbp + 73], eax>

753:
old  <	; IntegralToIntegral Â£temporary43 c>
new  <>

754:
old  <	mov al, [rbp + 40]>
new  < mainX$8:>

755:
old  <	and eax, 255>
new  <	; IntegralToIntegral Â£temporary43 c>

756:
old  <	cmp al, 0>
new  <	mov al, [rbp + 40]>

757:
old  <	jge mainX$9>
new  <	and eax, 255>

758:
old  <	neg al>
new  <	cmp al, 0>

759:
old  <	neg eax>
new  <	jge mainX$9>

760:
old  <>
new  <	neg al>

761:
old  < mainX$9:>
new  <	neg eax>

762:
old  <	; Parameter signedint Â£temporary43 77>
new  <>

763:
old  <	mov [rbp + 77], eax>
new  < mainX$9:>

764:
old  <>
new  <	; Parameter signedint Â£temporary43 77>

765:
old  < mainX$10:>
new  <	mov [rbp + 77], eax>

766:
old  <	; IntegralToIntegral Â£temporary44 c>
new  <>

767:
old  <	mov al, [rbp + 40]>
new  < mainX$10:>

768:
old  <	and eax, 255>
new  <	; IntegralToIntegral Â£temporary44 c>

769:
old  <	cmp al, 0>
new  <	mov al, [rbp + 40]>

770:
old  <	jge mainX$11>
new  <	and eax, 255>

771:
old  <	neg al>
new  <	cmp al, 0>

772:
old  <	neg eax>
new  <	jge mainX$11>

773:
old  <>
new  <	neg al>

774:
old  < mainX$11:>
new  <	neg eax>

775:
old  <	; Parameter signedint Â£temporary44 81>
new  <>

776:
old  <	mov [rbp + 81], eax>
new  < mainX$11:>

777:
old  <>
new  <	; Parameter signedint Â£temporary44 81>

778:
old  < mainX$12:>
new  <	mov [rbp + 81], eax>

779:
old  <	; Call printf 41 12>
new  <>

780:
old  <	mov qword [rbp + 41], mainX$13>
new  < mainX$12:>

781:
old  <	mov [rbp + 49], rbp>
new  <	; Call printf 41 12>

782:
old  <	add rbp, 41>
new  <	mov qword [rbp + 41], mainX$13>

783:
old  <	mov rdi, rbp>
new  <	mov [rbp + 49], rbp>

784:
old  <	add rdi, 12>
new  <	add rbp, 41>

785:
old  <	jmp printf>
new  <	mov rdi, rbp>

786:
old  <>
new  <	add rdi, 12>

787:
old  < mainX$13:>
new  <	jmp printf>

788:
old  <	; PostCall 41>
new  <>

789:
old  <>
new  < mainX$13:>

790:
old  < mainX$14:>
new  <	; PostCall 41>

791:
old  <	; BinaryAdd index index 1>
new  <>

792:
old  <	inc dword [rbp + 36]>
new  < mainX$14:>

793:
old  <>
new  <	; BinaryAdd index index 1>

794:
old  < mainX$15:>
new  <	inc dword [rbp + 36]>

795:
old  <	; Goto 1>
new  <>

796:
old  <	jmp mainX$1>
new  < mainX$15:>

797:
old  <>
new  <	; Goto 1>

798:
old  < mainX$16:>
new  <	jmp mainX$1>

799:
old  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

800:
old  <>
new  < mainX$16:>

801:
old  < mainX$17:>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

802:
old  <	; Parameter pointer "\nargc: %i\n" 64>
new  <>

803:
old  <	mov qword [rbp + 64], string_0Aargc3A2025i0A#>
new  < mainX$17:>

804:
old  <>
new  <	; Parameter pointer "\nargc: %i\n" 64>

805:
old  < mainX$18:>
new  <	mov qword [rbp + 64], string_0Aargc3A2025i0A#>

806:
old  <	; Parameter signedint argc 72>
new  <>

807:
old  <	mov eax, [rbp + 24]>
new  < mainX$18:>

808:
old  <	mov [rbp + 72], eax>
new  <	; Parameter signedint argc 72>

809:
old  <>
new  <	mov eax, [rbp + 24]>

810:
old  < mainX$19:>
new  <	mov [rbp + 72], eax>

811:
old  <	; Call printf 40 4>
new  <>

812:
old  <	mov qword [rbp + 40], mainX$20>
new  < mainX$19:>

813:
old  <	mov [rbp + 48], rbp>
new  <	; Call printf 40 4>

814:
old  <	add rbp, 40>
new  <	mov qword [rbp + 40], mainX$20>

815:
old  <	mov rdi, rbp>
new  <	mov [rbp + 48], rbp>

816:
old  <	add rdi, 4>
new  <	add rbp, 40>

817:
old  <	jmp printf>
new  <	mov rdi, rbp>

818:
old  <>
new  <	add rdi, 4>

819:
old  < mainX$20:>
new  <	jmp printf>

820:
old  <	; PostCall 40>
new  <>

821:
old  <>
new  < mainX$20:>

822:
old  < mainX$21:>
new  <	; PostCall 40>

823:
old  <	; Assign index 0>
new  <>

824:
old  <	mov dword [rbp + 36], 0>
new  < mainX$21:>

825:
old  <>
new  <	; Assign index 0>

826:
old  < mainX$22:>
new  <	mov dword [rbp + 36], 0>

827:
old  <	; SignedGreaterThanEqual 35 index argc>
new  <>

828:
old  <	mov eax, [rbp + 24]>
new  < mainX$22:>

829:
old  <	cmp [rbp + 36], eax>
new  <	; SignedGreaterThanEqual 35 index argc>

830:
old  <	jge mainX$35>
new  <	mov eax, [rbp + 24]>

831:
old  <>
new  <	cmp [rbp + 36], eax>

832:
old  < mainX$23:>
new  <	jge mainX$35>

833:
old  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

834:
old  <>
new  < mainX$23:>

835:
old  < mainX$24:>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

836:
old  <	; Parameter pointer "%i: <%s>\n" 64>
new  <>

837:
old  <	mov qword [rbp + 64], string_25i3A203C25s3E0A#>
new  < mainX$24:>

838:
old  <>
new  <	; Parameter pointer "%i: <%s>\n" 64>

839:
old  < mainX$25:>
new  <	mov qword [rbp + 64], string_25i3A203C25s3E0A#>

840:
old  <	; Parameter signedint index 72>
new  <>

841:
old  <	mov eax, [rbp + 36]>
new  < mainX$25:>

842:
old  <	mov [rbp + 72], eax>
new  <	; Parameter signedint index 72>

843:
old  <>
new  <	mov eax, [rbp + 36]>

844:
old  < mainX$26:>
new  <	mov [rbp + 72], eax>

845:
old  <	; IntegralToIntegral Â£temporary50 index>
new  <>

846:
old  <	mov eax, [rbp + 36]>
new  < mainX$26:>

847:
old  <	mov rbx, 4294967295>
new  <	; IntegralToIntegral Â£temporary50 index>

848:
old  <	and rax, rbx>
new  <	mov eax, [rbp + 36]>

849:
old  <>
new  <	mov rbx, 4294967295>

850:
old  < mainX$27:>
new  <	and rax, rbx>

851:
old  <	; UnsignedMultiply Â£temporary51 Â£temporary50 8>
new  <>

852:
old  <	xor rdx, rdx>
new  < mainX$27:>

853:
old  <	mul qword [int8$8#]>
new  <	; UnsignedMultiply Â£temporary51 Â£temporary50 8>

854:
old  <>
new  <	xor rdx, rdx>

855:
old  < mainX$28:>
new  <	mul qword [int8$8#]>

856:
old  <	; BinaryAdd Â£temporary52 argv Â£temporary51>
new  <>

857:
old  <	mov rsi, [rbp + 28]>
new  < mainX$28:>

858:
old  <	add rsi, rax>
new  <	; BinaryAdd Â£temporary52 argv Â£temporary51>

859:
old  <>
new  <	mov rsi, [rbp + 28]>

860:
old  < mainX$29:>
new  <	add rsi, rax>

861:
old  <	; Dereference Â£temporary49 -> Â£temporary52 Â£temporary52 0>
new  <>

862:
old  <>
new  < mainX$29:>

863:
old  < mainX$30:>
new  <	; Dereference Â£temporary49 -> Â£temporary52 Â£temporary52 0>

864:
old  <	; Parameter pointer Â£temporary49 -> Â£temporary52 76>
new  <>

865:
old  <	mov rax, [rsi]>
new  < mainX$30:>

866:
old  <	mov [rbp + 76], rax>
new  <	; Parameter pointer Â£temporary49 -> Â£temporary52 76>

867:
old  <>
new  <	mov rax, [rsi]>

868:
old  < mainX$31:>
new  <	mov [rbp + 76], rax>

869:
old  <	; Call printf 40 12>
new  <>

870:
old  <	mov qword [rbp + 40], mainX$32>
new  < mainX$31:>

871:
old  <	mov [rbp + 48], rbp>
new  <	; Call printf 40 12>

872:
old  <	add rbp, 40>
new  <	mov qword [rbp + 40], mainX$32>

873:
old  <	mov rdi, rbp>
new  <	mov [rbp + 48], rbp>

874:
old  <	add rdi, 12>
new  <	add rbp, 40>

875:
old  <	jmp printf>
new  <	mov rdi, rbp>

876:
old  <>
new  <	add rdi, 12>

877:
old  < mainX$32:>
new  <	jmp printf>

878:
old  <	; PostCall 40>
new  <>

879:
old  <>
new  < mainX$32:>

880:
old  < mainX$33:>
new  <	; PostCall 40>

881:
old  <	; BinaryAdd index index 1>
new  <>

882:
old  <	inc dword [rbp + 36]>
new  < mainX$33:>

883:
old  <>
new  <	; BinaryAdd index index 1>

884:
old  < mainX$34:>
new  <	inc dword [rbp + 36]>

885:
old  <	; Goto 22>
new  <>

886:
old  <	jmp mainX$22>
new  < mainX$34:>

887:
old  <>
new  <	; Goto 22>

888:
old  < mainX$35:>
new  <	jmp mainX$22>

889:
old  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

890:
old  <>
new  < mainX$35:>

891:
old  < mainX$36:>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

892:
old  <	; Parameter pointer "\n" 64>
new  <>

893:
old  <	mov qword [rbp + 64], string_0A#>
new  < mainX$36:>

894:
old  <>
new  <	; Parameter pointer "\n" 64>

895:
old  < mainX$37:>
new  <	mov qword [rbp + 64], string_0A#>

896:
old  <	; Call printf 40 0>
new  <>

897:
old  <	mov qword [rbp + 40], mainX$38>
new  < mainX$37:>

898:
old  <	mov [rbp + 48], rbp>
new  <	; Call printf 40 0>

899:
old  <	add rbp, 40>
new  <	mov qword [rbp + 40], mainX$38>

900:
old  <	mov rdi, rbp>
new  <	mov [rbp + 48], rbp>

901:
old  <	jmp printf>
new  <	add rbp, 40>

902:
old  <>
new  <	mov rdi, rbp>

903:
old  < mainX$38:>
new  <	jmp printf>

904:
old  <	; PostCall 40>
new  <>

905:
old  <>
new  < mainX$38:>

906:
old  < mainX$39:>
new  <	; PostCall 40>

907:
old  <	; Assign index 0>
new  <>

908:
old  <	mov dword [rbp + 36], 0>
new  < mainX$39:>

909:
old  <>
new  <	; Assign index 0>

910:
old  < mainX$40:>
new  <	mov dword [rbp + 36], 0>

911:
old  <	; IntegralToIntegral Â£temporary56 index>
new  <>

912:
old  <	mov eax, [rbp + 36]>
new  < mainX$40:>

913:
old  <	mov rbx, 4294967295>
new  <	; IntegralToIntegral Â£temporary56 index>

914:
old  <	and rax, rbx>
new  <	mov eax, [rbp + 36]>

915:
old  <>
new  <	mov rbx, 4294967295>

916:
old  < mainX$41:>
new  <	and rax, rbx>

917:
old  <	; UnsignedMultiply Â£temporary57 Â£temporary56 8>
new  <>

918:
old  <	xor rdx, rdx>
new  < mainX$41:>

919:
old  <	mul qword [int8$8#]>
new  <	; UnsignedMultiply Â£temporary57 Â£temporary56 8>

920:
old  <>
new  <	xor rdx, rdx>

921:
old  < mainX$42:>
new  <	mul qword [int8$8#]>

922:
old  <	; BinaryAdd Â£temporary58 argv Â£temporary57>
new  <>

923:
old  <	mov rsi, [rbp + 28]>
new  < mainX$42:>

924:
old  <	add rsi, rax>
new  <	; BinaryAdd Â£temporary58 argv Â£temporary57>

925:
old  <>
new  <	mov rsi, [rbp + 28]>

926:
old  < mainX$43:>
new  <	add rsi, rax>

927:
old  <	; Dereference Â£temporary55 -> Â£temporary58 Â£temporary58 0>
new  <>

928:
old  <>
new  < mainX$43:>

929:
old  < mainX$44:>
new  <	; Dereference Â£temporary55 -> Â£temporary58 Â£temporary58 0>

930:
old  <	; Equal 57 Â£temporary55 -> Â£temporary58 0>
new  <>

931:
old  <	cmp qword [rsi], 0>
new  < mainX$44:>

932:
old  <	je mainX$57>
new  <	; Equal 57 Â£temporary55 -> Â£temporary58 0>

933:
old  <>
new  <	cmp qword [rsi], 0>

934:
old  < mainX$45:>
new  <	je mainX$57>

935:
old  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

936:
old  <>
new  < mainX$45:>

937:
old  < mainX$46:>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

938:
old  <	; Parameter pointer "%i: <%s>\n" 64>
new  <>

939:
old  <	mov qword [rbp + 64], string_25i3A203C25s3E0A#>
new  < mainX$46:>

940:
old  <>
new  <	; Parameter pointer "%i: <%s>\n" 64>

941:
old  < mainX$47:>
new  <	mov qword [rbp + 64], string_25i3A203C25s3E0A#>

942:
old  <	; Parameter signedint index 72>
new  <>

943:
old  <	mov eax, [rbp + 36]>
new  < mainX$47:>

944:
old  <	mov [rbp + 72], eax>
new  <	; Parameter signedint index 72>

945:
old  <>
new  <	mov eax, [rbp + 36]>

946:
old  < mainX$48:>
new  <	mov [rbp + 72], eax>

947:
old  <	; IntegralToIntegral Â£temporary62 index>
new  <>

948:
old  <	mov eax, [rbp + 36]>
new  < mainX$48:>

949:
old  <	mov rbx, 4294967295>
new  <	; IntegralToIntegral Â£temporary62 index>

950:
old  <	and rax, rbx>
new  <	mov eax, [rbp + 36]>

951:
old  <>
new  <	mov rbx, 4294967295>

952:
old  < mainX$49:>
new  <	and rax, rbx>

953:
old  <	; UnsignedMultiply Â£temporary63 Â£temporary62 8>
new  <>

954:
old  <	xor rdx, rdx>
new  < mainX$49:>

955:
old  <	mul qword [int8$8#]>
new  <	; UnsignedMultiply Â£temporary63 Â£temporary62 8>

956:
old  <>
new  <	xor rdx, rdx>

957:
old  < mainX$50:>
new  <	mul qword [int8$8#]>

958:
old  <	; BinaryAdd Â£temporary64 argv Â£temporary63>
new  <>

959:
old  <	mov rsi, [rbp + 28]>
new  < mainX$50:>

960:
old  <	add rsi, rax>
new  <	; BinaryAdd Â£temporary64 argv Â£temporary63>

961:
old  <>
new  <	mov rsi, [rbp + 28]>

962:
old  < mainX$51:>
new  <	add rsi, rax>

963:
old  <	; Dereference Â£temporary61 -> Â£temporary64 Â£temporary64 0>
new  <>

964:
old  <>
new  < mainX$51:>

965:
old  < mainX$52:>
new  <	; Dereference Â£temporary61 -> Â£temporary64 Â£temporary64 0>

966:
old  <	; Parameter pointer Â£temporary61 -> Â£temporary64 76>
new  <>

967:
old  <	mov rax, [rsi]>
new  < mainX$52:>

968:
old  <	mov [rbp + 76], rax>
new  <	; Parameter pointer Â£temporary61 -> Â£temporary64 76>

969:
old  <>
new  <	mov rax, [rsi]>

970:
old  < mainX$53:>
new  <	mov [rbp + 76], rax>

971:
old  <	; Call printf 40 12>
new  <>

972:
old  <	mov qword [rbp + 40], mainX$54>
new  < mainX$53:>

973:
old  <	mov [rbp + 48], rbp>
new  <	; Call printf 40 12>

974:
old  <	add rbp, 40>
new  <	mov qword [rbp + 40], mainX$54>

975:
old  <	mov rdi, rbp>
new  <	mov [rbp + 48], rbp>

976:
old  <	add rdi, 12>
new  <	add rbp, 40>

977:
old  <	jmp printf>
new  <	mov rdi, rbp>

978:
old  <>
new  <	add rdi, 12>

979:
old  < mainX$54:>
new  <	jmp printf>

980:
old  <	; PostCall 40>
new  <>

981:
old  <>
new  < mainX$54:>

982:
old  < mainX$55:>
new  <	; PostCall 40>

983:
old  <	; BinaryAdd index index 1>
new  <>

984:
old  <	inc dword [rbp + 36]>
new  < mainX$55:>

985:
old  <>
new  <	; BinaryAdd index index 1>

986:
old  < mainX$56:>
new  <	inc dword [rbp + 36]>

987:
old  <	; Goto 40>
new  <>

988:
old  <	jmp mainX$40>
new  < mainX$56:>

989:
old  <>
new  <	; Goto 40>

990:
old  < mainX$57:>
new  <	jmp mainX$40>

991:
old  <	; Return>
new  <>

992:
old  <	mov rax, [rbp]>
new  < mainX$57:>

993:
old  <	mov rdi, [rbp + 16]>
new  <	; Return>

994:
old  <	mov rbp, [rbp + 8]>
new  <	mov rax, [rbp]>

995:
old  <	jmp rax>
new  <	mov rdi, [rbp + 16]>

996:
old  <>
new  <	mov rbp, [rbp + 8]>

997:
old  < mainX$58:>
new  <	jmp rax>

998:
old  <	; FunctionEnd mainX>
new  <>

999:
old  <>
new  < mainX$58:>

1000:
old  <section .text>
new  <	; FunctionEnd mainX>

1002:
old  < mainm:>
new  <section .text>

1003:
old  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1004:
old  <>
new  < mainm:>

1005:
old  < mainm$1:>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1006:
old  <	; Call main_math 36 0>
new  <>

1007:
old  <	mov qword [rbp + 36], mainm$2>
new  < mainm$1:>

1008:
old  <	mov [rbp + 44], rbp>
new  <	; Call main_math 36 0>

1009:
old  <	add rbp, 36>
new  <	mov qword [rbp + 36], mainm$2>

1010:
old  <	jmp main_math>
new  <	mov [rbp + 44], rbp>

1011:
old  <>
new  <	add rbp, 36>

1012:
old  < mainm$2:>
new  <	jmp main_math>

1013:
old  <	; PostCall 36>
new  <>

1014:
old  <>
new  < mainm$2:>

1015:
old  < mainm$3:>
new  <	; PostCall 36>

1016:
old  <	; Return>
new  <>

1017:
old  <	mov rax, [rbp]>
new  < mainm$3:>

1018:
old  <	mov rdi, [rbp + 16]>
new  <	; Return>

1019:
old  <	mov rbp, [rbp + 8]>
new  <	mov rax, [rbp]>

1020:
old  <	jmp rax>
new  <	mov rdi, [rbp + 16]>

1021:
old  <>
new  <	mov rbp, [rbp + 8]>

1022:
old  < mainm$4:>
new  <	jmp rax>

1023:
old  <	; FunctionEnd mainm>
new  <>

1024:
old  <>
new  < mainm$4:>

1025:
old  <section .data>
new  <	; FunctionEnd mainm>

1027:
old  <string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#:>
new  <section .data>

1028:
old  <	; Initializer String Assertion failed: "%s" in file %s at line %i\n>
new  <>

1029:
old  <	db "Assertion failed: ", 34, "%s", 34, " in file %s at line %i", 10, 0>
new  <string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#:>

1030:
old  <>
new  <	; Initializer String Assertion failed: "%s" in file %s at line %i\n>

1031:
old  <section .data>
new  <	db "Assertion failed: ", 34, "%s", 34, " in file %s at line %i", 10, 0>

1033:
old  <string_1203C202#:>
new  <section .data>

1034:
old  <	; Initializer String 1 < 2>
new  <>

1035:
old  <	db "1 < 2", 0>
new  <string_1203C202#:>

1036:
old  <>
new  <	; Initializer String 1 < 2>

1037:
old  <section .data>
new  <	db "1 < 2", 0>

1039:
old  <string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CMain2Ec#:>
new  <section .data>

1040:
old  <	; Initializer String C:\Users\Stefan\Documents\vagrant\homestead\code\code\Main.c>
new  <>

1041:
old  <	db "C:\Users\Stefan\Documents\vagrant\homestead\code\code\Main.c", 0>
new  <string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CMain2Ec#:>

1042:
old  <>
new  <	; Initializer String C:\Users\Stefan\Documents\vagrant\homestead\code\code\Main.c>

1043:
old  <section .data>
new  <	db "C:\Users\Stefan\Documents\vagrant\homestead\code\code\Main.c", 0>

1045:
old  <string_1203E202#:>
new  <section .data>

1046:
old  <	; Initializer String 1 > 2>
new  <>

1047:
old  <	db "1 > 2", 0>
new  <string_1203E202#:>

1048:
old  <>
new  <	; Initializer String 1 > 2>

1049:
old  <section .text>
new  <	db "1 > 2", 0>

1051:
old  < maina:>
new  <section .text>

1052:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1053:
old  <>
new  < maina:>

1054:
old  < maina$1:>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1055:
old  <	; Parameter pointer stderr 48>
new  <>

1056:
old  <	mov rax, [stderr]>
new  < maina$1:>

1057:
old  <	mov [rbp + 48], rax>
new  <	; Parameter pointer stderr 48>

1058:
old  <>
new  <	mov rax, [stderr]>

1059:
old  < maina$2:>
new  <	mov [rbp + 48], rax>

1060:
old  <	; Parameter pointer "Assertion failed: "%s" in file %s at line %i\n" 56>
new  <>

1061:
old  <	mov qword [rbp + 56], string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#>
new  < maina$2:>

1062:
old  <>
new  <	; Parameter pointer "Assertion failed: "%s" in file %s at line %i\n" 56>

1063:
old  < maina$3:>
new  <	mov qword [rbp + 56], string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#>

1064:
old  <	; Parameter pointer "1 > 2" 64>
new  <>

1065:
old  <	mov qword [rbp + 64], string_1203E202#>
new  < maina$3:>

1066:
old  <>
new  <	; Parameter pointer "1 > 2" 64>

1067:
old  < maina$4:>
new  <	mov qword [rbp + 64], string_1203E202#>

1068:
old  <	; Parameter pointer "C:\Users\Stefan\Documents\vagrant\homestead\code\code\Main.c" 72>
new  <>

1069:
old  <	mov qword [rbp + 72], string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CMain2Ec#>
new  < maina$4:>

1070:
old  <>
new  <	; Parameter pointer "C:\Users\Stefan\Documents\vagrant\homestead\code\code\Main.c" 72>

1071:
old  < maina$5:>
new  <	mov qword [rbp + 72], string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CMain2Ec#>

1072:
old  <	; Parameter signedint 199 80>
new  <>

1073:
old  <	mov dword [rbp + 80], 199>
new  < maina$5:>

1074:
old  <>
new  <	; Parameter signedint 201 80>

1075:
old  < maina$6:>
new  <	mov dword [rbp + 80], 201>

1076:
old  <	; Call fprintf 24 20>
new  <>

1077:
old  <	mov qword [rbp + 24], maina$7>
new  < maina$6:>

1078:
old  <	mov [rbp + 32], rbp>
new  <	; Call fprintf 24 20>

1079:
old  <	add rbp, 24>
new  <	mov qword [rbp + 24], maina$7>

1080:
old  <	mov rdi, rbp>
new  <	mov [rbp + 32], rbp>

1081:
old  <	add rdi, 20>
new  <	add rbp, 24>

1082:
old  <	jmp fprintf>
new  <	mov rdi, rbp>

1083:
old  <>
new  <	add rdi, 20>

1084:
old  < maina$7:>
new  <	jmp fprintf>

1085:
old  <	; PostCall 24>
new  <>

1086:
old  <>
new  < maina$7:>

1087:
old  < maina$8:>
new  <	; PostCall 24>

1088:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1089:
old  <>
new  < maina$8:>

1090:
old  < maina$9:>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1091:
old  <	; Call abort 24 0>
new  <>

1092:
old  <	mov qword [rbp + 24], maina$10>
new  < maina$9:>

1093:
old  <	mov [rbp + 32], rbp>
new  <	; Call abort 24 0>

1094:
old  <	add rbp, 24>
new  <	mov qword [rbp + 24], maina$10>

1095:
old  <	jmp abort>
new  <	mov [rbp + 32], rbp>

1096:
old  <>
new  <	add rbp, 24>

1097:
old  < maina$10:>
new  <	jmp abort>

1098:
old  <	; PostCall 24>
new  <>

1099:
old  <>
new  < maina$10:>

1100:
old  < maina$11:>
new  <	; PostCall 24>

1101:
old  <	; Return>
new  <>

1102:
old  <	mov rax, [rbp]>
new  < maina$11:>

1103:
old  <	mov rdi, [rbp + 16]>
new  <	; Return>

1104:
old  <	mov rbp, [rbp + 8]>
new  <	mov rax, [rbp]>

1105:
old  <	jmp rax>
new  <	mov rdi, [rbp + 16]>

1106:
old  <>
new  <	mov rbp, [rbp + 8]>

1107:
old  < maina$12:>
new  <	jmp rax>

1108:
old  <	; FunctionEnd maina>
new  <>

1109:
old  <>
new  < maina$12:>

1110:
old  <section .data>
new  <	; FunctionEnd maina>

1112:
old  <@423$ZERO:>
new  <section .text>

1113:
old  <	; Initializer SignedInt 0>
new  <>

1114:
old  <	dd 0>
new  < _start:>

1115:
old  <>
new  <	; Initializerialize Stack Pointer>

1116:
old  <section .data>
new  <	mov rbp, $StackTop>

1117:
old  <>
new  <	; Initializerialize Heap Pointer>

1118:
old  <@424$ONE:>
new  <	mov dword [$StackTop + 65534], $StackTop>

1119:
old  <	; Initializer SignedInt 1>
new  <	add dword [$StackTop + 65534], 65534>

1120:
old  <	dd 1>
new  <	; Initializerialize FPU Control Word, truncate mode => set bit 10 and 11.>

1121:
old  <>
new  <	fstcw [rbp]>

1122:
old  <section .data>
new  <	or word [rbp], 3072>

1123:
old  <>
new  <	fldcw [rbp]>

1124:
old  <@427$TWO:>
new  <	mov qword [$StackTop], 0>

1125:
old  <	; Initializer SignedInt 2>
new  <>

1126:
old  <	dd 2>
new  < main:>

1127:
old  <>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1128:
old  <section .data>
new  <>

1129:
old  <>
new  < main$1:>

1130:
old  <@428$THREE:>
new  <	; Call stdlib_test 24 0>

1131:
old  <	; Initializer SignedInt 3>
new  <	mov qword [rbp + 24], main$2>

1132:
old  <	dd 3>
new  <	mov [rbp + 32], rbp>

1133:
old  <>
new  <	add rbp, 24>

1134:
old  <section .data>
new  <	jmp stdlib_test>

1136:
old  <string_argc3A2025i0A#:>
new  < main$2:>

1137:
old  <	; Initializer String argc: %i\n>
new  <	; PostCall 24>

1138:
old  <	db "argc: %i", 10, 0>
new  <>

1139:
old  <>
new  < main$3:>

1140:
old  <section .data>
new  <	; Return>

1141:
old  <>
new  <	cmp qword [rbp], 0>

1142:
old  <string_Hello210A#:>
new  <	je label$0>

1143:
old  <	; Initializer String Hello!\n>
new  <	mov rax, [rbp]>

1144:
old  <	db "Hello!", 10, 0>
new  <	mov rdi, [rbp + 16]>

1145:
old  <>
new  <	mov rbp, [rbp + 8]>

1146:
old  <section .data>
new  <	jmp rax>

1148:
old  <string_Please20write20a20character2C20a20string2C20an20integer2C20and20a20double3A20#:>
new  < label$0:>

1149:
old  <	; Initializer String Please write a character, a string, an integer, and a double: >
new  <	mov rdi, 0>

1150:
old  <	db "Please write a character, a string, an integer, and a double: ", 0>
new  <	mov rax, 60>

1151:
old  <>
new  <	syscall>

1152:
old  <section .data>
new  <>

1153:
old  <>
new  < main$4:>

1154:
old  <string_25c2025s2025i2025lf#:>
new  <	; FunctionEnd main>

1155:
old  <	; Initializer String %c %s %i %lf>
new  <>

1156:
old  <	db "%c %s %i %lf", 0>
new  <section .data>

1158:
old  <section .data>
new  <@425$ZERO:>

1159:
old  <>
new  <	; Initializer SignedInt 0>

1160:
old  <string_You20wrote20the20character202725c272C20the20string202225s222C20the20integer2025i2C20and20the20double2025f2E0A#:>
new  <	dd 0>

1161:
old  <	; Initializer String You wrote the character '%c', the string "%s", the integer %i, and the double %f.\n>
new  <>

1162:
old  <	db "You wrote the character ", 39, "%c", 39, ", the string ", 34, "%s", 34, ", the integer %i, and the double %f.", 10, 0>
new  <section .data>

1164:
old  <section .text>
new  <@426$ONE:>

1165:
old  <>
new  <	; Initializer SignedInt 1>

1166:
old  < _start:>
new  <	dd 1>

1167:
old  <	; Initializerialize Stack Pointer>
new  <>

1168:
old  <	mov rbp, $StackTop>
new  <section .data>

1169:
old  <	; Initializerialize Heap Pointer>
new  <>

1170:
old  <	mov dword [$StackTop + 65534], $StackTop>
new  <@429$TWO:>

1171:
old  <	add dword [$StackTop + 65534], 65534>
new  <	; Initializer SignedInt 2>

1172:
old  <	; Initializerialize FPU Control Word, truncate mode => set bit 10 and 11.>
new  <	dd 2>

1173:
old  <	fstcw [rbp]>
new  <>

1174:
old  <	or word [rbp], 3072>
new  <section .data>

1175:
old  <	fldcw [rbp]>
new  <>

1176:
old  <	mov qword [$StackTop], 0>
new  <@430$THREE:>

1177:
old  <	; Initialize Command Line Arguments>
new  <	; Initializer SignedInt 3>

1178:
old  <	pop rbx>
new  <	dd 3>

1179:
old  <	mov rax, rbx>
new  <>

1180:
old  <	mov rdx, rbp>
new  <section .data>

1182:
old  < $args$loop:>
new  <string_argc3A2025i0A#:>

1183:
old  <	cmp rbx, 0>
new  <	; Initializer String argc: %i\n>

1184:
old  <	je $args$exit>
new  <	db "argc: %i", 10, 0>

1185:
old  <	pop rsi>
new  <>

1186:
old  <	mov [rbp], rsi>
new  <section .data>

1187:
old  <	add rbp, 8>
new  <>

1188:
old  <	dec rbx>
new  <string_Hello210A#:>

1189:
old  <	jmp $args$loop>
new  <	; Initializer String Hello!\n>

1190:
old  <>
new  <	db "Hello!", 10, 0>

1191:
old  < $args$exit:>
new  <>

1192:
old  <	mov qword [rbp], 0>
new  <section .data>

1193:
old  <	add rbp, 8>
new  <>

1194:
old  <	mov qword [rbp], 0>
new  <string_Please20write20a20character2C20a20string2C20an20integer2C20and20a20double3A20#:>

1195:
old  <	mov [rbp + 24], eax>
new  <	; Initializer String Please write a character, a string, an integer, and a double: >

1196:
old  <	mov [rbp + 28], rdx>
new  <	db "Please write a character, a string, an integer, and a double: ", 0>

1198:
old  < main:>
new  <section .data>

1199:
old  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1200:
old  <>
new  <string_25c2025s2025i2025lf#:>

1201:
old  < main$1:>
new  <	; Initializer String %c %s %i %lf>

1202:
old  <	; Parameter pointer "argc: %i\n" 60>
new  <	db "%c %s %i %lf", 0>

1203:
old  <	mov qword [rbp + 60], string_argc3A2025i0A#>
new  <>

1204:
old  <>
new  <section .data>

1205:
old  < main$2:>
new  <>

1206:
old  <	; Parameter signedint argc 68>
new  <string_You20wrote20the20character202725c272C20the20string202225s222C20the20integer2025i2C20and20the20double2025f2E0A#:>

1207:
old  <	mov eax, [rbp + 24]>
new  <	; Initializer String You wrote the character '%c', the string "%s", the integer %i, and the double %f.\n>

1208:
old  <	mov [rbp + 68], eax>
new  <	db "You wrote the character ", 39, "%c", 39, ", the string ", 34, "%s", 34, ", the integer %i, and the double %f.", 10, 0>

1210:
old  < main$3:>
new  <section .text>

1211:
old  <	; Call printf 36 4>
new  <>

1212:
old  <	mov qword [rbp + 36], main$4>
new  < mainX4:>

1213:
old  <	mov [rbp + 44], rbp>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1214:
old  <	add rbp, 36>
new  <>

1215:
old  <	mov rdi, rbp>
new  < mainX4$1:>

1216:
old  <	add rdi, 4>
new  <	; Parameter pointer "argc: %i\n" 60>

1217:
old  <	jmp printf>
new  <	mov qword [rbp + 60], string_argc3A2025i0A#>

1219:
old  < main$4:>
new  < mainX4$2:>

1220:
old  <	; PostCall 36>
new  <	; Parameter signedint argc 68>

1221:
old  <>
new  <	mov eax, [rbp + 24]>

1222:
old  < main$5:>
new  <	mov [rbp + 68], eax>

1223:
old  <	; Assign index 0>
new  <>

1224:
old  <	mov dword [rbp + 36], 0>
new  < mainX4$3:>

1225:
old  <>
new  <	; Call printf 36 4>

1226:
old  < main$6:>
new  <	mov qword [rbp + 36], mainX4$4>

1227:
old  <	; SignedGreaterThanEqual 19 index argc>
new  <	mov [rbp + 44], rbp>

1228:
old  <	mov eax, [rbp + 24]>
new  <	add rbp, 36>

1229:
old  <	cmp [rbp + 36], eax>
new  <	mov rdi, rbp>

1230:
old  <	jge main$19>
new  <	add rdi, 4>

1231:
old  <>
new  <	jmp printf>

1232:
old  < main$7:>
new  <>

1233:
old  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < mainX4$4:>

1234:
old  <>
new  <	; PostCall 36>

1235:
old  < main$8:>
new  <>

1236:
old  <	; Parameter pointer "%i: <%s>\n" 64>
new  < mainX4$5:>

1237:
old  <	mov qword [rbp + 64], string_25i3A203C25s3E0A#>
new  <	; Assign index 0>

1238:
old  <>
new  <	mov dword [rbp + 36], 0>

1239:
old  < main$9:>
new  <>

1240:
old  <	; Parameter signedint index 72>
new  < mainX4$6:>

1241:
old  <	mov eax, [rbp + 36]>
new  <	; SignedGreaterThanEqual 19 index argc>

1242:
old  <	mov [rbp + 72], eax>
new  <	mov eax, [rbp + 24]>

1243:
old  <>
new  <	cmp [rbp + 36], eax>

1244:
old  < main$10:>
new  <	jge mainX4$19>

1245:
old  <	; IntegralToIntegral Â£temporary79 index>
new  <>

1246:
old  <	mov eax, [rbp + 36]>
new  < mainX4$7:>

1247:
old  <	mov rbx, 4294967295>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1248:
old  <	and rax, rbx>
new  <>

1249:
old  <>
new  < mainX4$8:>

1250:
old  < main$11:>
new  <	; Parameter pointer "%i: <%s>\n" 64>

1251:
old  <	; UnsignedMultiply Â£temporary80 Â£temporary79 8>
new  <	mov qword [rbp + 64], string_25i3A203C25s3E0A#>

1252:
old  <	xor rdx, rdx>
new  <>

1253:
old  <	mul qword [int8$8#]>
new  < mainX4$9:>

1254:
old  <>
new  <	; Parameter signedint index 72>

1255:
old  < main$12:>
new  <	mov eax, [rbp + 36]>

1256:
old  <	; BinaryAdd Â£temporary81 argv Â£temporary80>
new  <	mov [rbp + 72], eax>

1257:
old  <	mov rsi, [rbp + 28]>
new  <>

1258:
old  <	add rsi, rax>
new  < mainX4$10:>

1259:
old  <>
new  <	; IntegralToIntegral Â£temporary80 index>

1260:
old  < main$13:>
new  <	mov eax, [rbp + 36]>

1261:
old  <	; Dereference Â£temporary78 -> Â£temporary81 Â£temporary81 0>
new  <	mov rbx, 4294967295>

1262:
old  <>
new  <	and rax, rbx>

1263:
old  < main$14:>
new  <>

1264:
old  <	; Parameter pointer Â£temporary78 -> Â£temporary81 76>
new  < mainX4$11:>

1265:
old  <	mov rax, [rsi]>
new  <	; UnsignedMultiply Â£temporary81 Â£temporary80 8>

1266:
old  <	mov [rbp + 76], rax>
new  <	xor rdx, rdx>

1267:
old  <>
new  <	mul qword [int8$8#]>

1268:
old  < main$15:>
new  <>

1269:
old  <	; Call printf 40 12>
new  < mainX4$12:>

1270:
old  <	mov qword [rbp + 40], main$16>
new  <	; BinaryAdd Â£temporary82 argv Â£temporary81>

1271:
old  <	mov [rbp + 48], rbp>
new  <	mov rsi, [rbp + 28]>

1272:
old  <	add rbp, 40>
new  <	add rsi, rax>

1273:
old  <	mov rdi, rbp>
new  <>

1274:
old  <	add rdi, 12>
new  < mainX4$13:>

1275:
old  <	jmp printf>
new  <	; Dereference Â£temporary79 -> Â£temporary82 Â£temporary82 0>

1277:
old  < main$16:>
new  < mainX4$14:>

1278:
old  <	; PostCall 40>
new  <	; Parameter pointer Â£temporary79 -> Â£temporary82 76>

1279:
old  <>
new  <	mov rax, [rsi]>

1280:
old  < main$17:>
new  <	mov [rbp + 76], rax>

1281:
old  <	; BinaryAdd index index 1>
new  <>

1282:
old  <	inc dword [rbp + 36]>
new  < mainX4$15:>

1283:
old  <>
new  <	; Call printf 40 12>

1284:
old  < main$18:>
new  <	mov qword [rbp + 40], mainX4$16>

1285:
old  <	; Goto 6>
new  <	mov [rbp + 48], rbp>

1286:
old  <	jmp main$6>
new  <	add rbp, 40>

1287:
old  <>
new  <	mov rdi, rbp>

1288:
old  < main$19:>
new  <	add rdi, 12>

1289:
old  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	jmp printf>

1291:
old  < main$20:>
new  < mainX4$16:>

1292:
old  <	; Parameter pointer "\n" 64>
new  <	; PostCall 40>

1293:
old  <	mov qword [rbp + 64], string_0A#>
new  <>

1294:
old  <>
new  < mainX4$17:>

1295:
old  < main$21:>
new  <	; BinaryAdd index index 1>

1296:
old  <	; Call printf 40 0>
new  <	inc dword [rbp + 36]>

1297:
old  <	mov qword [rbp + 40], main$22>
new  <>

1298:
old  <	mov [rbp + 48], rbp>
new  < mainX4$18:>

1299:
old  <	add rbp, 40>
new  <	; Goto 6>

1300:
old  <	mov rdi, rbp>
new  <	jmp mainX4$6>

1301:
old  <	jmp printf>
new  <>

1302:
old  <>
new  < mainX4$19:>

1303:
old  < main$22:>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1304:
old  <	; PostCall 40>
new  <>

1305:
old  <>
new  < mainX4$20:>

1306:
old  < main$23:>
new  <	; Parameter pointer "\n" 64>

1307:
old  <	; Assign index 0>
new  <	mov qword [rbp + 64], string_0A#>

1308:
old  <	mov dword [rbp + 36], 0>
new  <>

1309:
old  <>
new  < mainX4$21:>

1310:
old  < main$24:>
new  <	; Call printf 40 0>

1311:
old  <	; IntegralToIntegral Â£temporary85 index>
new  <	mov qword [rbp + 40], mainX4$22>

1312:
old  <	mov eax, [rbp + 36]>
new  <	mov [rbp + 48], rbp>

1313:
old  <	mov rbx, 4294967295>
new  <	add rbp, 40>

1314:
old  <	and rax, rbx>
new  <	mov rdi, rbp>

1315:
old  <>
new  <	jmp printf>

1316:
old  < main$25:>
new  <>

1317:
old  <	; UnsignedMultiply Â£temporary86 Â£temporary85 8>
new  < mainX4$22:>

1318:
old  <	xor rdx, rdx>
new  <	; PostCall 40>

1319:
old  <	mul qword [int8$8#]>
new  <>

1320:
old  <>
new  < mainX4$23:>

1321:
old  < main$26:>
new  <	; Assign index 0>

1322:
old  <	; BinaryAdd Â£temporary87 argv Â£temporary86>
new  <	mov dword [rbp + 36], 0>

1323:
old  <	mov rsi, [rbp + 28]>
new  <>

1324:
old  <	add rsi, rax>
new  < mainX4$24:>

1325:
old  <>
new  <	; IntegralToIntegral Â£temporary86 index>

1326:
old  < main$27:>
new  <	mov eax, [rbp + 36]>

1327:
old  <	; Dereference Â£temporary84 -> Â£temporary87 Â£temporary87 0>
new  <	mov rbx, 4294967295>

1328:
old  <>
new  <	and rax, rbx>

1329:
old  < main$28:>
new  <>

1330:
old  <	; Equal 41 Â£temporary84 -> Â£temporary87 0>
new  < mainX4$25:>

1331:
old  <	cmp qword [rsi], 0>
new  <	; UnsignedMultiply Â£temporary87 Â£temporary86 8>

1332:
old  <	je main$41>
new  <	xor rdx, rdx>

1333:
old  <>
new  <	mul qword [int8$8#]>

1334:
old  < main$29:>
new  <>

1335:
old  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < mainX4$26:>

1336:
old  <>
new  <	; BinaryAdd Â£temporary88 argv Â£temporary87>

1337:
old  < main$30:>
new  <	mov rsi, [rbp + 28]>

1338:
old  <	; Parameter pointer "%i: <%s>\n" 64>
new  <	add rsi, rax>

1339:
old  <	mov qword [rbp + 64], string_25i3A203C25s3E0A#>
new  <>

1340:
old  <>
new  < mainX4$27:>

1341:
old  < main$31:>
new  <	; Dereference Â£temporary85 -> Â£temporary88 Â£temporary88 0>

1342:
old  <	; Parameter signedint index 72>
new  <>

1343:
old  <	mov eax, [rbp + 36]>
new  < mainX4$28:>

1344:
old  <	mov [rbp + 72], eax>
new  <	; Equal 41 Â£temporary85 -> Â£temporary88 0>

1345:
old  <>
new  <	cmp qword [rsi], 0>

1346:
old  < main$32:>
new  <	je mainX4$41>

1347:
old  <	; IntegralToIntegral Â£temporary91 index>
new  <>

1348:
old  <	mov eax, [rbp + 36]>
new  < mainX4$29:>

1349:
old  <	mov rbx, 4294967295>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1350:
old  <	and rax, rbx>
new  <>

1351:
old  <>
new  < mainX4$30:>

1352:
old  < main$33:>
new  <	; Parameter pointer "%i: <%s>\n" 64>

1353:
old  <	; UnsignedMultiply Â£temporary92 Â£temporary91 8>
new  <	mov qword [rbp + 64], string_25i3A203C25s3E0A#>

1354:
old  <	xor rdx, rdx>
new  <>

1355:
old  <	mul qword [int8$8#]>
new  < mainX4$31:>

1356:
old  <>
new  <	; Parameter signedint index 72>

1357:
old  < main$34:>
new  <	mov eax, [rbp + 36]>

1358:
old  <	; BinaryAdd Â£temporary93 argv Â£temporary92>
new  <	mov [rbp + 72], eax>

1359:
old  <	mov rsi, [rbp + 28]>
new  <>

1360:
old  <	add rsi, rax>
new  < mainX4$32:>

1361:
old  <>
new  <	; IntegralToIntegral Â£temporary92 index>

1362:
old  < main$35:>
new  <	mov eax, [rbp + 36]>

1363:
old  <	; Dereference Â£temporary90 -> Â£temporary93 Â£temporary93 0>
new  <	mov rbx, 4294967295>

1364:
old  <>
new  <	and rax, rbx>

1365:
old  < main$36:>
new  <>

1366:
old  <	; Parameter pointer Â£temporary90 -> Â£temporary93 76>
new  < mainX4$33:>

1367:
old  <	mov rax, [rsi]>
new  <	; UnsignedMultiply Â£temporary93 Â£temporary92 8>

1368:
old  <	mov [rbp + 76], rax>
new  <	xor rdx, rdx>

1369:
old  <>
new  <	mul qword [int8$8#]>

1370:
old  < main$37:>
new  <>

1371:
old  <	; Call printf 40 12>
new  < mainX4$34:>

1372:
old  <	mov qword [rbp + 40], main$38>
new  <	; BinaryAdd Â£temporary94 argv Â£temporary93>

1373:
old  <	mov [rbp + 48], rbp>
new  <	mov rsi, [rbp + 28]>

1374:
old  <	add rbp, 40>
new  <	add rsi, rax>

1375:
old  <	mov rdi, rbp>
new  <>

1376:
old  <	add rdi, 12>
new  < mainX4$35:>

1377:
old  <	jmp printf>
new  <	; Dereference Â£temporary91 -> Â£temporary94 Â£temporary94 0>

1379:
old  < main$38:>
new  < mainX4$36:>

1380:
old  <	; PostCall 40>
new  <	; Parameter pointer Â£temporary91 -> Â£temporary94 76>

1381:
old  <>
new  <	mov rax, [rsi]>

1382:
old  < main$39:>
new  <	mov [rbp + 76], rax>

1383:
old  <	; BinaryAdd index index 1>
new  <>

1384:
old  <	inc dword [rbp + 36]>
new  < mainX4$37:>

1385:
old  <>
new  <	; Call printf 40 12>

1386:
old  < main$40:>
new  <	mov qword [rbp + 40], mainX4$38>

1387:
old  <	; Goto 24>
new  <	mov [rbp + 48], rbp>

1388:
old  <	jmp main$24>
new  <	add rbp, 40>

1389:
old  <>
new  <	mov rdi, rbp>

1390:
old  < main$41:>
new  <	add rdi, 12>

1391:
old  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	jmp printf>

1393:
old  < main$42:>
new  < mainX4$38:>

1394:
old  <	; Parameter pointer "\n" 64>
new  <	; PostCall 40>

1395:
old  <	mov qword [rbp + 64], string_0A#>
new  <>

1396:
old  <>
new  < mainX4$39:>

1397:
old  < main$43:>
new  <	; BinaryAdd index index 1>

1398:
old  <	; Call printf 40 0>
new  <	inc dword [rbp + 36]>

1399:
old  <	mov qword [rbp + 40], main$44>
new  <>

1400:
old  <	mov [rbp + 48], rbp>
new  < mainX4$40:>

1401:
old  <	add rbp, 40>
new  <	; Goto 24>

1402:
old  <	mov rdi, rbp>
new  <	jmp mainX4$24>

1403:
old  <	jmp printf>
new  <>

1404:
old  <>
new  < mainX4$41:>

1405:
old  < main$44:>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1406:
old  <	; PostCall 40>
new  <>

1407:
old  <>
new  < mainX4$42:>

1408:
old  < main$45:>
new  <	; Parameter pointer "\n" 64>

1409:
old  <	; PreCall 73 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov qword [rbp + 64], string_0A#>

1411:
old  < main$46:>
new  < mainX4$43:>

1412:
old  <	; Parameter pointer 0 97>
new  <	; Call printf 40 0>

1413:
old  <	mov qword [rbp + 97], 0>
new  <	mov qword [rbp + 40], mainX4$44>

1414:
old  <>
new  <	mov [rbp + 48], rbp>

1415:
old  < main$47:>
new  <	add rbp, 40>

1416:
old  <	; Call mktime 73 0>
new  <	mov rdi, rbp>

1417:
old  <	mov qword [rbp + 73], main$48>
new  <	jmp printf>

1418:
old  <	mov [rbp + 81], rbp>
new  <>

1419:
old  <	add rbp, 73>
new  < mainX4$44:>

1420:
old  <	jmp mktime>
new  <	; PostCall 40>

1422:
old  < main$48:>
new  < mainX4$45:>

1423:
old  <	; PostCall 73>
new  <	; PreCall 73 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1425:
old  < main$49:>
new  < mainX4$46:>

1426:
old  <	; PreCall 73 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter pointer 0 97>

1427:
old  <>
new  <	mov qword [rbp + 97], 0>

1428:
old  < main$50:>
new  <>

1429:
old  <	; Parameter pointer "Hello!\n" 97>
new  < mainX4$47:>

1430:
old  <	mov qword [rbp + 97], string_Hello210A#>
new  <	; Call mktime 73 0>

1431:
old  <>
new  <	mov qword [rbp + 73], mainX4$48>

1432:
old  < main$51:>
new  <	mov [rbp + 81], rbp>

1433:
old  <	; Call printf 73 0>
new  <	add rbp, 73>

1434:
old  <	mov qword [rbp + 73], main$52>
new  <	jmp mktime>

1435:
old  <	mov [rbp + 81], rbp>
new  <>

1436:
old  <	add rbp, 73>
new  < mainX4$48:>

1437:
old  <	mov rdi, rbp>
new  <	; PostCall 73>

1438:
old  <	jmp printf>
new  <>

1439:
old  <>
new  < mainX4$49:>

1440:
old  < main$52:>
new  <	; PreCall 73 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1441:
old  <	; PostCall 73>
new  <>

1442:
old  <>
new  < mainX4$50:>

1443:
old  < main$53:>
new  <	; Parameter pointer "Hello!\n" 97>

1444:
old  <	; PreCall 73 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov qword [rbp + 97], string_Hello210A#>

1446:
old  < main$54:>
new  < mainX4$51:>

1447:
old  <	; Parameter pointer "Please write a character, a string, an integer, and a double: " 97>
new  <	; Call printf 73 0>

1448:
old  <	mov qword [rbp + 97], string_Please20write20a20character2C20a20string2C20an20integer2C20and20a20double3A20#>
new  <	mov qword [rbp + 73], mainX4$52>

1449:
old  <>
new  <	mov [rbp + 81], rbp>

1450:
old  < main$55:>
new  <	add rbp, 73>

1451:
old  <	; Call printf 73 0>
new  <	mov rdi, rbp>

1452:
old  <	mov qword [rbp + 73], main$56>
new  <	jmp printf>

1453:
old  <	mov [rbp + 81], rbp>
new  <>

1454:
old  <	add rbp, 73>
new  < mainX4$52:>

1455:
old  <	mov rdi, rbp>
new  <	; PostCall 73>

1456:
old  <	jmp printf>
new  <>

1457:
old  <>
new  < mainX4$53:>

1458:
old  < main$56:>
new  <	; PreCall 73 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1459:
old  <	; PostCall 73>
new  <>

1460:
old  <>
new  < mainX4$54:>

1461:
old  < main$57:>
new  <	; Parameter pointer "Please write a character, a string, an integer, and a double: " 97>

1462:
old  <	; PreCall 73 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov qword [rbp + 97], string_Please20write20a20character2C20a20string2C20an20integer2C20and20a20double3A20#>

1464:
old  < main$58:>
new  < mainX4$55:>

1465:
old  <	; Parameter pointer "%c %s %i %lf" 97>
new  <	; Call printf 73 0>

1466:
old  <	mov qword [rbp + 97], string_25c2025s2025i2025lf#>
new  <	mov qword [rbp + 73], mainX4$56>

1467:
old  <>
new  <	mov [rbp + 81], rbp>

1468:
old  < main$59:>
new  <	add rbp, 73>

1469:
old  <	; Address Â£temporary99 c>
new  <	mov rdi, rbp>

1470:
old  <	mov rsi, rbp>
new  <	jmp printf>

1471:
old  <	add rsi, 52>
new  <>

1472:
old  <>
new  < mainX4$56:>

1473:
old  < main$60:>
new  <	; PostCall 73>

1474:
old  <	; Parameter pointer Â£temporary99 105>
new  <>

1475:
old  <	mov [rbp + 105], rsi>
new  < mainX4$57:>

1476:
old  <>
new  <	; PreCall 73 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1477:
old  < main$61:>
new  <>

1478:
old  <	; Parameter pointer s 113>
new  < mainX4$58:>

1479:
old  <	mov [rbp + 113], rbp>
new  <	; Parameter pointer "%c %s %i %lf" 97>

1480:
old  <	add qword [rbp + 113], 53>
new  <	mov qword [rbp + 97], string_25c2025s2025i2025lf#>

1482:
old  < main$62:>
new  < mainX4$59:>

1483:
old  <	; Address Â£temporary100 i>
new  <	; Address Â£temporary100 c>

1485:
old  <	add rsi, 40>
new  <	add rsi, 52>

1487:
old  < main$63:>
new  < mainX4$60:>

1488:
old  <	; Parameter pointer Â£temporary100 121>
new  <	; Parameter pointer Â£temporary100 105>

1489:
old  <	mov [rbp + 121], rsi>
new  <	mov [rbp + 105], rsi>

1491:
old  < main$64:>
new  < mainX4$61:>

1492:
old  <	; Address Â£temporary101 d>
new  <	; Parameter pointer s 113>

1493:
old  <	mov rsi, rbp>
new  <	mov [rbp + 113], rbp>

1494:
old  <	add rsi, 44>
new  <	add qword [rbp + 113], 53>

1496:
old  < main$65:>
new  < mainX4$62:>

1497:
old  <	; Parameter pointer Â£temporary101 129>
new  <	; Address Â£temporary101 i>

1498:
old  <	mov [rbp + 129], rsi>
new  <	mov rsi, rbp>

1499:
old  <>
new  <	add rsi, 40>

1500:
old  < main$66:>
new  <>

1501:
old  <	; Call scanf 73 32>
new  < mainX4$63:>

1502:
old  <	mov qword [rbp + 73], main$67>
new  <	; Parameter pointer Â£temporary101 121>

1503:
old  <	mov [rbp + 81], rbp>
new  <	mov [rbp + 121], rsi>

1504:
old  <	add rbp, 73>
new  <>

1505:
old  <	mov rdi, rbp>
new  < mainX4$64:>

1506:
old  <	add rdi, 32>
new  <	; Address Â£temporary102 d>

1507:
old  <	jmp scanf>
new  <	mov rsi, rbp>

1508:
old  <>
new  <	add rsi, 44>

1509:
old  < main$67:>
new  <>

1510:
old  <	; PostCall 73>
new  < mainX4$65:>

1511:
old  <>
new  <	; Parameter pointer Â£temporary102 129>

1512:
old  < main$68:>
new  <	mov [rbp + 129], rsi>

1513:
old  <	; PreCall 73 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1514:
old  <>
new  < mainX4$66:>

1515:
old  < main$69:>
new  <	; Call scanf 73 32>

1516:
old  <	; Parameter pointer "You wrote the character '%c', the string "%s", the integer %i, and the double %f.\n" 97>
new  <	mov qword [rbp + 73], mainX4$67>

1517:
old  <	mov qword [rbp + 97], string_You20wrote20the20character202725c272C20the20string202225s222C20the20integer2025i2C20and20the20double2025f2E0A#>
new  <	mov [rbp + 81], rbp>

1518:
old  <>
new  <	add rbp, 73>

1519:
old  < main$70:>
new  <	mov rdi, rbp>

1520:
old  <	; IntegralToIntegral Â£temporary103 c>
new  <	add rdi, 32>

1521:
old  <	mov al, [rbp + 52]>
new  <	jmp scanf>

1522:
old  <	and eax, 255>
new  <>

1523:
old  <	cmp al, 0>
new  < mainX4$67:>

1524:
old  <	jge main$71>
new  <	; PostCall 73>

1525:
old  <	neg al>
new  <>

1526:
old  <	neg eax>
new  < mainX4$68:>

1527:
old  <>
new  <	; PreCall 73 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1528:
old  < main$71:>
new  <>

1529:
old  <	; Parameter signedint Â£temporary103 105>
new  < mainX4$69:>

1530:
old  <	mov [rbp + 105], eax>
new  <	; Parameter pointer "You wrote the character '%c', the string "%s", the integer %i, and the double %f.\n" 97>

1531:
old  <>
new  <	mov qword [rbp + 97], string_You20wrote20the20character202725c272C20the20string202225s222C20the20integer2025i2C20and20the20double2025f2E0A#>

1532:
old  < main$72:>
new  <>

1533:
old  <	; Parameter pointer s 109>
new  < mainX4$70:>

1534:
old  <	mov [rbp + 109], rbp>
new  <	; IntegralToIntegral Â£temporary104 c>

1535:
old  <	add qword [rbp + 109], 53>
new  <	mov al, [rbp + 52]>

1536:
old  <>
new  <	and eax, 255>

1537:
old  < main$73:>
new  <	cmp al, 0>

1538:
old  <	; Parameter signedint i 117>
new  <	jge mainX4$71>

1539:
old  <	mov eax, [rbp + 40]>
new  <	neg al>

1540:
old  <	mov [rbp + 117], eax>
new  <	neg eax>

1542:
old  < main$74:>
new  < mainX4$71:>

1543:
old  <	; PushFloat d>
new  <	; Parameter signedint Â£temporary104 105>

1544:
old  <	fld qword [rbp + 44]>
new  <	mov [rbp + 105], eax>

1546:
old  < main$75:>
new  < mainX4$72:>

1547:
old  <	; Parameter double d 121>
new  <	; Parameter pointer s 109>

1548:
old  <	fstp qword [rbp + 121]>
new  <	mov [rbp + 109], rbp>

1549:
old  <>
new  <	add qword [rbp + 109], 53>

1550:
old  < main$76:>
new  <>

1551:
old  <	; Call printf 73 24>
new  < mainX4$73:>

1552:
old  <	mov qword [rbp + 73], main$77>
new  <	; Parameter signedint i 117>

1553:
old  <	mov [rbp + 81], rbp>
new  <	mov eax, [rbp + 40]>

1554:
old  <	add rbp, 73>
new  <	mov [rbp + 117], eax>

1555:
old  <	mov rdi, rbp>
new  <>

1556:
old  <	add rdi, 24>
new  < mainX4$74:>

1557:
old  <	jmp printf>
new  <	; PushFloat d>

1558:
old  <>
new  <	fld qword [rbp + 44]>

1559:
old  < main$77:>
new  <>

1560:
old  <	; PostCall 73>
new  < mainX4$75:>

1561:
old  <>
new  <	; Parameter double d 121>

1562:
old  < main$78:>
new  <	fstp qword [rbp + 121]>

1563:
old  <	; Return>
new  <>

1564:
old  <	cmp qword [rbp], 0>
new  < mainX4$76:>

1565:
old  <	je label$0>
new  <	; Call printf 73 24>

1566:
old  <	mov rax, [rbp]>
new  <	mov qword [rbp + 73], mainX4$77>

1567:
old  <	mov rdi, [rbp + 16]>
new  <	mov [rbp + 81], rbp>

1568:
old  <	mov rbp, [rbp + 8]>
new  <	add rbp, 73>

1569:
old  <	jmp rax>
new  <	mov rdi, rbp>

1570:
old  <>
new  <	add rdi, 24>

1571:
old  < label$0:>
new  <	jmp printf>

1572:
old  <	mov rdi, 0>
new  <>

1573:
old  <	mov rax, 60>
new  < mainX4$77:>

1574:
old  <	syscall>
new  <	; PostCall 73>

1576:
old  < main$79:>
new  < mainX4$78:>

1577:
old  <	; FunctionEnd main>
new  <	; Return>

1578:
old  <>
new  <	mov rax, [rbp]>

1579:
old  <section .data>
new  <	mov rdi, [rbp + 16]>

1580:
old  <>
new  <	mov rbp, [rbp + 8]>

1581:
old  <string_3A20#:>
new  <	jmp rax>

1582:
old  <	; Initializer String : >
new  <>

1583:
old  <	db ": ", 0>
new  < mainX4$79:>

1584:
old  <>
new  <	; FunctionEnd mainX4>

1585:
old  <section .data>
new  <>

1586:
old  <>
new  <section .data>

1587:
old  <string_25lf#:>
new  <>

1588:
old  <	; Initializer String %lf>
new  <string_3A20#:>

1589:
old  <	db "%lf", 0>
new  <	; Initializer String : >

1590:
old  <>
new  <	db ": ", 0>

1591:
old  <section .data>
new  <>

1592:
old  <>
new  <section .data>

1593:
old  <string_3C25f3E#:>
new  <>

1594:
old  <	; Initializer String <%f>>
new  <string_25lf#:>

1595:
old  <	db "<%f>", 0>
new  <	; Initializer String %lf>

1596:
old  <>
new  <	db "%lf", 0>

1597:
old  <section .text>
new  <>

1598:
old  <>
new  <section .data>

1599:
old  < main3:>
new  <>

1600:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <string_3C25f3E#:>

1601:
old  <>
new  <	; Initializer String <%f>>

1602:
old  < main3$1:>
new  <	db "<%f>", 0>

1603:
old  <	; Parameter pointer ": " 56>
new  <>

1604:
old  <	mov qword [rbp + 56], string_3A20#>
new  <section .text>

1606:
old  < main3$2:>
new  < main3:>

1607:
old  <	; Call printf 32 0>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1608:
old  <	mov qword [rbp + 32], main3$3>
new  <>

1609:
old  <	mov [rbp + 40], rbp>
new  < main3$1:>

1610:
old  <	add rbp, 32>
new  <	; Parameter pointer ": " 56>

1611:
old  <	mov rdi, rbp>
new  <	mov qword [rbp + 56], string_3A20#>

1612:
old  <	jmp printf>
new  <>

1613:
old  <>
new  < main3$2:>

1614:
old  < main3$3:>
new  <	; Call printf 32 0>

1615:
old  <	; PostCall 32>
new  <	mov qword [rbp + 32], main3$3>

1616:
old  <>
new  <	mov [rbp + 40], rbp>

1617:
old  < main3$4:>
new  <	add rbp, 32>

1618:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov rdi, rbp>

1619:
old  <>
new  <	jmp printf>

1620:
old  < main3$5:>
new  <>

1621:
old  <	; Parameter pointer "%lf" 56>
new  < main3$3:>

1622:
old  <	mov qword [rbp + 56], string_25lf#>
new  <	; PostCall 32>

1624:
old  < main3$6:>
new  < main3$4:>

1625:
old  <	; Address Â£temporary110 x>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1626:
old  <	mov rsi, rbp>
new  <>

1627:
old  <	add rsi, 24>
new  < main3$5:>

1628:
old  <>
new  <	; Parameter pointer "%lf" 56>

1629:
old  < main3$7:>
new  <	mov qword [rbp + 56], string_25lf#>

1630:
old  <	; Parameter pointer Â£temporary110 64>
new  <>

1631:
old  <	mov [rbp + 64], rsi>
new  < main3$6:>

1632:
old  <>
new  <	; Address Â£temporary111 x>

1633:
old  < main3$8:>
new  <	mov rsi, rbp>

1634:
old  <	; Call scanf 32 8>
new  <	add rsi, 24>

1635:
old  <	mov qword [rbp + 32], main3$9>
new  <>

1636:
old  <	mov [rbp + 40], rbp>
new  < main3$7:>

1637:
old  <	add rbp, 32>
new  <	; Parameter pointer Â£temporary111 64>

1638:
old  <	mov rdi, rbp>
new  <	mov [rbp + 64], rsi>

1639:
old  <	add rdi, 8>
new  <>

1640:
old  <	jmp scanf>
new  < main3$8:>

1641:
old  <>
new  <	; Call scanf 32 8>

1642:
old  < main3$9:>
new  <	mov qword [rbp + 32], main3$9>

1643:
old  <	; PostCall 32>
new  <	mov [rbp + 40], rbp>

1644:
old  <>
new  <	add rbp, 32>

1645:
old  < main3$10:>
new  <	mov rdi, rbp>

1646:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	add rdi, 8>

1647:
old  <>
new  <	jmp scanf>

1648:
old  < main3$11:>
new  <>

1649:
old  <	; Parameter pointer "<%f>" 56>
new  < main3$9:>

1650:
old  <	mov qword [rbp + 56], string_3C25f3E#>
new  <	; PostCall 32>

1652:
old  < main3$12:>
new  < main3$10:>

1653:
old  <	; PushFloat x>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1654:
old  <	fld qword [rbp + 24]>
new  <>

1655:
old  <>
new  < main3$11:>

1656:
old  < main3$13:>
new  <	; Parameter pointer "<%f>" 56>

1657:
old  <	; Parameter double x 64>
new  <	mov qword [rbp + 56], string_3C25f3E#>

1658:
old  <	fstp qword [rbp + 64]>
new  <>

1659:
old  <>
new  < main3$12:>

1660:
old  < main3$14:>
new  <	; PushFloat x>

1661:
old  <	; Call printf 32 8>
new  <	fld qword [rbp + 24]>

1662:
old  <	mov qword [rbp + 32], main3$15>
new  <>

1663:
old  <	mov [rbp + 40], rbp>
new  < main3$13:>

1664:
old  <	add rbp, 32>
new  <	; Parameter double x 64>

1665:
old  <	mov rdi, rbp>
new  <	fstp qword [rbp + 64]>

1666:
old  <	add rdi, 8>
new  <>

1667:
old  <	jmp printf>
new  < main3$14:>

1668:
old  <>
new  <	; Call printf 32 8>

1669:
old  < main3$15:>
new  <	mov qword [rbp + 32], main3$15>

1670:
old  <	; PostCall 32>
new  <	mov [rbp + 40], rbp>

1671:
old  <>
new  <	add rbp, 32>

1672:
old  < main3$16:>
new  <	mov rdi, rbp>

1673:
old  <	; Return>
new  <	add rdi, 8>

1674:
old  <	mov rax, [rbp]>
new  <	jmp printf>

1675:
old  <	mov rdi, [rbp + 16]>
new  <>

1676:
old  <	mov rbp, [rbp + 8]>
new  < main3$15:>

1677:
old  <	jmp rax>
new  <	; PostCall 32>

1679:
old  < main3$17:>
new  < main3$16:>

1680:
old  <	; FunctionEnd main3>
new  <	; Return>

1681:
old  <>
new  <	mov rax, [rbp]>

1682:
old  <section .data>
new  <	mov rdi, [rbp + 16]>

1683:
old  <>
new  <	mov rbp, [rbp + 8]>

1684:
old  <string_2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D0A#:>
new  <	jmp rax>

1685:
old  <	; Initializer String ---------------------------------------------\n>
new  <>

1686:
old  <	db "---------------------------------------------", 10, 0>
new  < main3$17:>

1687:
old  <>
new  <	; FunctionEnd main3>

1688:
old  <section .data>
new  <>

1689:
old  <>
new  <section .data>

1690:
old  <float8$3.14#:>
new  <>

1691:
old  <	; Initializer Double 3.14>
new  <string_2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D0A#:>

1692:
old  <	dq 3.14>
new  <	; Initializer String ---------------------------------------------\n>

1693:
old  <>
new  <	db "---------------------------------------------", 10, 0>

1694:
old  <section .data>
new  <>

1695:
old  <>
new  <section .data>

1696:
old  <float8$2.71#:>
new  <>

1697:
old  <	; Initializer Double 2.71>
new  <float8$3.14#:>

1698:
old  <	dq 2.71>
new  <	; Initializer Double 3.14>

1699:
old  <>
new  <	dq 3.14>

1700:
old  <section .text>
new  <>

1701:
old  <>
new  <section .data>

1702:
old  < mains2:>
new  <>

1703:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <float8$2.71#:>

1704:
old  <>
new  <	; Initializer Double 2.71>

1705:
old  < mains2$1:>
new  <	dq 2.71>

1706:
old  <	; PushFloat 3.14>
new  <>

1707:
old  <	fld qword [float8$3.14#]>
new  <section .text>

1709:
old  < mains2$2:>
new  < mains2:>

1710:
old  <	; Parameter double 3.14 48>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1711:
old  <	fstp qword [rbp + 48]>
new  <>

1712:
old  <>
new  < mains2$1:>

1713:
old  < mains2$3:>
new  <	; PushFloat 3.14>

1714:
old  <	; Call setjmp_test 24 0>
new  <	fld qword [float8$3.14#]>

1715:
old  <	mov qword [rbp + 24], mains2$4>
new  <>

1716:
old  <	mov [rbp + 32], rbp>
new  < mains2$2:>

1717:
old  <	add rbp, 24>
new  <	; Parameter double 3.14 48>

1718:
old  <	jmp setjmp_test>
new  <	fstp qword [rbp + 48]>

1720:
old  < mains2$4:>
new  < mains2$3:>

1721:
old  <	; PostCall 24>
new  <	; Call setjmp_test 24 0>

1722:
old  <>
new  <	mov qword [rbp + 24], mains2$4>

1723:
old  < mains2$5:>
new  <	mov [rbp + 32], rbp>

1724:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	add rbp, 24>

1725:
old  <>
new  <	jmp setjmp_test>

1726:
old  < mains2$6:>
new  <>

1727:
old  <	; Parameter pointer "---------------------------------------------\n" 48>
new  < mains2$4:>

1728:
old  <	mov qword [rbp + 48], string_2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D0A#>
new  <	; PostCall 24>

1730:
old  < mains2$7:>
new  < mains2$5:>

1731:
old  <	; Call printf 24 0>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1732:
old  <	mov qword [rbp + 24], mains2$8>
new  <>

1733:
old  <	mov [rbp + 32], rbp>
new  < mains2$6:>

1734:
old  <	add rbp, 24>
new  <	; Parameter pointer "---------------------------------------------\n" 48>

1735:
old  <	mov rdi, rbp>
new  <	mov qword [rbp + 48], string_2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D0A#>

1736:
old  <	jmp printf>
new  <>

1737:
old  <>
new  < mains2$7:>

1738:
old  < mains2$8:>
new  <	; Call printf 24 0>

1739:
old  <	; PostCall 24>
new  <	mov qword [rbp + 24], mains2$8>

1740:
old  <>
new  <	mov [rbp + 32], rbp>

1741:
old  < mains2$9:>
new  <	add rbp, 24>

1742:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov rdi, rbp>

1743:
old  <>
new  <	jmp printf>

1744:
old  < mains2$10:>
new  <>

1745:
old  <	; PushFloat 0>
new  < mains2$8:>

1746:
old  <	fldz>
new  <	; PostCall 24>

1748:
old  < mains2$11:>
new  < mains2$9:>

1749:
old  <	; Parameter double 0 48>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1750:
old  <	fstp qword [rbp + 48]>
new  <>

1751:
old  <>
new  < mains2$10:>

1752:
old  < mains2$12:>
new  <	; PushFloat 0>

1753:
old  <	; Call setjmp_test 24 0>
new  <	fldz>

1754:
old  <	mov qword [rbp + 24], mains2$13>
new  <>

1755:
old  <	mov [rbp + 32], rbp>
new  < mains2$11:>

1756:
old  <	add rbp, 24>
new  <	; Parameter double 0 48>

1757:
old  <	jmp setjmp_test>
new  <	fstp qword [rbp + 48]>

1759:
old  < mains2$13:>
new  < mains2$12:>

1760:
old  <	; PostCall 24>
new  <	; Call setjmp_test 24 0>

1761:
old  <>
new  <	mov qword [rbp + 24], mains2$13>

1762:
old  < mains2$14:>
new  <	mov [rbp + 32], rbp>

1763:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	add rbp, 24>

1764:
old  <>
new  <	jmp setjmp_test>

1765:
old  < mains2$15:>
new  <>

1766:
old  <	; Parameter pointer "---------------------------------------------\n" 48>
new  < mains2$13:>

1767:
old  <	mov qword [rbp + 48], string_2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D0A#>
new  <	; PostCall 24>

1769:
old  < mains2$16:>
new  < mains2$14:>

1770:
old  <	; Call printf 24 0>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1771:
old  <	mov qword [rbp + 24], mains2$17>
new  <>

1772:
old  <	mov [rbp + 32], rbp>
new  < mains2$15:>

1773:
old  <	add rbp, 24>
new  <	; Parameter pointer "---------------------------------------------\n" 48>

1774:
old  <	mov rdi, rbp>
new  <	mov qword [rbp + 48], string_2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D0A#>

1775:
old  <	jmp printf>
new  <>

1776:
old  <>
new  < mains2$16:>

1777:
old  < mains2$17:>
new  <	; Call printf 24 0>

1778:
old  <	; PostCall 24>
new  <	mov qword [rbp + 24], mains2$17>

1779:
old  <>
new  <	mov [rbp + 32], rbp>

1780:
old  < mains2$18:>
new  <	add rbp, 24>

1781:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov rdi, rbp>

1782:
old  <>
new  <	jmp printf>

1783:
old  < mains2$19:>
new  <>

1784:
old  <	; PushFloat 2.71>
new  < mains2$17:>

1785:
old  <	fld qword [float8$2.71#]>
new  <	; PostCall 24>

1787:
old  < mains2$20:>
new  < mains2$18:>

1788:
old  <	; Parameter double 2.71 48>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1789:
old  <	fstp qword [rbp + 48]>
new  <>

1790:
old  <>
new  < mains2$19:>

1791:
old  < mains2$21:>
new  <	; PushFloat 2.71>

1792:
old  <	; Call setjmp_test 24 0>
new  <	fld qword [float8$2.71#]>

1793:
old  <	mov qword [rbp + 24], mains2$22>
new  <>

1794:
old  <	mov [rbp + 32], rbp>
new  < mains2$20:>

1795:
old  <	add rbp, 24>
new  <	; Parameter double 2.71 48>

1796:
old  <	jmp setjmp_test>
new  <	fstp qword [rbp + 48]>

1798:
old  < mains2$22:>
new  < mains2$21:>

1799:
old  <	; PostCall 24>
new  <	; Call setjmp_test 24 0>

1800:
old  <>
new  <	mov qword [rbp + 24], mains2$22>

1801:
old  < mains2$23:>
new  <	mov [rbp + 32], rbp>

1802:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	add rbp, 24>

1803:
old  <>
new  <	jmp setjmp_test>

1804:
old  < mains2$24:>
new  <>

1805:
old  <	; Parameter pointer "---------------------------------------------\n" 48>
new  < mains2$22:>

1806:
old  <	mov qword [rbp + 48], string_2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D0A#>
new  <	; PostCall 24>

1808:
old  < mains2$25:>
new  < mains2$23:>

1809:
old  <	; Call printf 24 0>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1810:
old  <	mov qword [rbp + 24], mains2$26>
new  <>

1811:
old  <	mov [rbp + 32], rbp>
new  < mains2$24:>

1812:
old  <	add rbp, 24>
new  <	; Parameter pointer "---------------------------------------------\n" 48>

1813:
old  <	mov rdi, rbp>
new  <	mov qword [rbp + 48], string_2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D0A#>

1814:
old  <	jmp printf>
new  <>

1815:
old  <>
new  < mains2$25:>

1816:
old  < mains2$26:>
new  <	; Call printf 24 0>

1817:
old  <	; PostCall 24>
new  <	mov qword [rbp + 24], mains2$26>

1818:
old  <>
new  <	mov [rbp + 32], rbp>

1819:
old  < mains2$27:>
new  <	add rbp, 24>

1820:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov rdi, rbp>

1821:
old  <>
new  <	jmp printf>

1822:
old  < mains2$28:>
new  <>

1823:
old  <	; PushFloat 0>
new  < mains2$26:>

1824:
old  <	fldz>
new  <	; PostCall 24>

1826:
old  < mains2$29:>
new  < mains2$27:>

1827:
old  <	; Parameter double 0 48>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1828:
old  <	fstp qword [rbp + 48]>
new  <>

1829:
old  <>
new  < mains2$28:>

1830:
old  < mains2$30:>
new  <	; PushFloat 0>

1831:
old  <	; Call setjmp_test 24 0>
new  <	fldz>

1832:
old  <	mov qword [rbp + 24], mains2$31>
new  <>

1833:
old  <	mov [rbp + 32], rbp>
new  < mains2$29:>

1834:
old  <	add rbp, 24>
new  <	; Parameter double 0 48>

1835:
old  <	jmp setjmp_test>
new  <	fstp qword [rbp + 48]>

1837:
old  < mains2$31:>
new  < mains2$30:>

1838:
old  <	; PostCall 24>
new  <	; Call setjmp_test 24 0>

1839:
old  <>
new  <	mov qword [rbp + 24], mains2$31>

1840:
old  < mains2$32:>
new  <	mov [rbp + 32], rbp>

1841:
old  <	; Return>
new  <	add rbp, 24>

1842:
old  <	mov rax, [rbp]>
new  <	jmp setjmp_test>

1843:
old  <	mov rdi, [rbp + 16]>
new  <>

1844:
old  <	mov rbp, [rbp + 8]>
new  < mains2$31:>

1845:
old  <	jmp rax>
new  <	; PostCall 24>

1847:
old  < mains2$33:>
new  < mains2$32:>

1848:
old  <	; FunctionEnd mains2>
new  <	; Return>

1849:
old  <>
new  <	mov rax, [rbp]>

1850:
old  <section .text>
new  <	mov rdi, [rbp + 16]>

1851:
old  <>
new  <	mov rbp, [rbp + 8]>

1852:
old  < char_main:>
new  <	jmp rax>

1853:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1854:
old  <>
new  < mains2$33:>

1855:
old  < char_main$1:>
new  <	; FunctionEnd mains2>

1856:
old  <	; Parameter signedchar 97 48>
new  <>

1857:
old  <	mov byte [rbp + 48], 97>
new  <section .text>

1859:
old  < char_main$2:>
new  < char_main:>

1860:
old  <	; Call character_test 24 0>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1861:
old  <	mov qword [rbp + 24], char_main$3>
new  <>

1862:
old  <	mov [rbp + 32], rbp>
new  < char_main$1:>

1863:
old  <	add rbp, 24>
new  <	; Parameter signedchar 97 48>

1864:
old  <	jmp character_test>
new  <	mov byte [rbp + 48], 97>

1866:
old  < char_main$3:>
new  < char_main$2:>

1867:
old  <	; PostCall 24>
new  <	; Call character_test 24 0>

1868:
old  <>
new  <	mov qword [rbp + 24], char_main$3>

1869:
old  < char_main$4:>
new  <	mov [rbp + 32], rbp>

1870:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	add rbp, 24>

1871:
old  <>
new  <	jmp character_test>

1872:
old  < char_main$5:>
new  <>

1873:
old  <	; Parameter signedchar 66 48>
new  < char_main$3:>

1874:
old  <	mov byte [rbp + 48], 66>
new  <	; PostCall 24>

1876:
old  < char_main$6:>
new  < char_main$4:>

1877:
old  <	; Call character_test 24 0>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1878:
old  <	mov qword [rbp + 24], char_main$7>
new  <>

1879:
old  <	mov [rbp + 32], rbp>
new  < char_main$5:>

1880:
old  <	add rbp, 24>
new  <	; Parameter signedchar 66 48>

1881:
old  <	jmp character_test>
new  <	mov byte [rbp + 48], 66>

1883:
old  < char_main$7:>
new  < char_main$6:>

1884:
old  <	; PostCall 24>
new  <	; Call character_test 24 0>

1885:
old  <>
new  <	mov qword [rbp + 24], char_main$7>

1886:
old  < char_main$8:>
new  <	mov [rbp + 32], rbp>

1887:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	add rbp, 24>

1888:
old  <>
new  <	jmp character_test>

1889:
old  < char_main$9:>
new  <>

1890:
old  <	; Parameter signedchar 49 48>
new  < char_main$7:>

1891:
old  <	mov byte [rbp + 48], 49>
new  <	; PostCall 24>

1893:
old  < char_main$10:>
new  < char_main$8:>

1894:
old  <	; Call character_test 24 0>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1895:
old  <	mov qword [rbp + 24], char_main$11>
new  <>

1896:
old  <	mov [rbp + 32], rbp>
new  < char_main$9:>

1897:
old  <	add rbp, 24>
new  <	; Parameter signedchar 49 48>

1898:
old  <	jmp character_test>
new  <	mov byte [rbp + 48], 49>

1900:
old  < char_main$11:>
new  < char_main$10:>

1901:
old  <	; PostCall 24>
new  <	; Call character_test 24 0>

1902:
old  <>
new  <	mov qword [rbp + 24], char_main$11>

1903:
old  < char_main$12:>
new  <	mov [rbp + 32], rbp>

1904:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	add rbp, 24>

1905:
old  <>
new  <	jmp character_test>

1906:
old  < char_main$13:>
new  <>

1907:
old  <	; Parameter signedchar 46 48>
new  < char_main$11:>

1908:
old  <	mov byte [rbp + 48], 46>
new  <	; PostCall 24>

1910:
old  < char_main$14:>
new  < char_main$12:>

1911:
old  <	; Call character_test 24 0>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1912:
old  <	mov qword [rbp + 24], char_main$15>
new  <>

1913:
old  <	mov [rbp + 32], rbp>
new  < char_main$13:>

1914:
old  <	add rbp, 24>
new  <	; Parameter signedchar 46 48>

1915:
old  <	jmp character_test>
new  <	mov byte [rbp + 48], 46>

1917:
old  < char_main$15:>
new  < char_main$14:>

1918:
old  <	; PostCall 24>
new  <	; Call character_test 24 0>

1919:
old  <>
new  <	mov qword [rbp + 24], char_main$15>

1920:
old  < char_main$16:>
new  <	mov [rbp + 32], rbp>

1921:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	add rbp, 24>

1922:
old  <>
new  <	jmp character_test>

1923:
old  < char_main$17:>
new  <>

1924:
old  <	; Parameter signedchar 10 48>
new  < char_main$15:>

1925:
old  <	mov byte [rbp + 48], 10>
new  <	; PostCall 24>

1927:
old  < char_main$18:>
new  < char_main$16:>

1928:
old  <	; Call character_test 24 0>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1929:
old  <	mov qword [rbp + 24], char_main$19>
new  <>

1930:
old  <	mov [rbp + 32], rbp>
new  < char_main$17:>

1931:
old  <	add rbp, 24>
new  <	; Parameter signedchar 10 48>

1932:
old  <	jmp character_test>
new  <	mov byte [rbp + 48], 10>

1934:
old  < char_main$19:>
new  < char_main$18:>

1935:
old  <	; PostCall 24>
new  <	; Call character_test 24 0>

1936:
old  <>
new  <	mov qword [rbp + 24], char_main$19>

1937:
old  < char_main$20:>
new  <	mov [rbp + 32], rbp>

1938:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	add rbp, 24>

1939:
old  <>
new  <	jmp character_test>

1940:
old  < char_main$21:>
new  <>

1941:
old  <	; Parameter signedchar 102 48>
new  < char_main$19:>

1942:
old  <	mov byte [rbp + 48], 102>
new  <	; PostCall 24>

1944:
old  < char_main$22:>
new  < char_main$20:>

1945:
old  <	; Call character_test 24 0>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1946:
old  <	mov qword [rbp + 24], char_main$23>
new  <>

1947:
old  <	mov [rbp + 32], rbp>
new  < char_main$21:>

1948:
old  <	add rbp, 24>
new  <	; Parameter signedchar 102 48>

1949:
old  <	jmp character_test>
new  <	mov byte [rbp + 48], 102>

1951:
old  < char_main$23:>
new  < char_main$22:>

1952:
old  <	; PostCall 24>
new  <	; Call character_test 24 0>

1953:
old  <>
new  <	mov qword [rbp + 24], char_main$23>

1954:
old  < char_main$24:>
new  <	mov [rbp + 32], rbp>

1955:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	add rbp, 24>

1956:
old  <>
new  <	jmp character_test>

1957:
old  < char_main$25:>
new  <>

1958:
old  <	; Parameter signedchar 103 48>
new  < char_main$23:>

1959:
old  <	mov byte [rbp + 48], 103>
new  <	; PostCall 24>

1961:
old  < char_main$26:>
new  < char_main$24:>

1962:
old  <	; Call character_test 24 0>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1963:
old  <	mov qword [rbp + 24], char_main$27>
new  <>

1964:
old  <	mov [rbp + 32], rbp>
new  < char_main$25:>

1965:
old  <	add rbp, 24>
new  <	; Parameter signedchar 103 48>

1966:
old  <	jmp character_test>
new  <	mov byte [rbp + 48], 103>

1968:
old  < char_main$27:>
new  < char_main$26:>

1969:
old  <	; PostCall 24>
new  <	; Call character_test 24 0>

1970:
old  <>
new  <	mov qword [rbp + 24], char_main$27>

1971:
old  < char_main$28:>
new  <	mov [rbp + 32], rbp>

1972:
old  <	; Return>
new  <	add rbp, 24>

1973:
old  <	mov rax, [rbp]>
new  <	jmp character_test>

1974:
old  <	mov rdi, [rbp + 16]>
new  <>

1975:
old  <	mov rbp, [rbp + 8]>
new  < char_main$27:>

1976:
old  <	jmp rax>
new  <	; PostCall 24>

1978:
old  < char_main$29:>
new  < char_main$28:>

1979:
old  <	; FunctionEnd char_main>
new  <	; Return>

1980:
old  <>
new  <	mov rax, [rbp]>

1981:
old  <section .data>
new  <	mov rdi, [rbp + 16]>

1982:
old  <>
new  <	mov rbp, [rbp + 8]>

1983:
old  <string_Please20write20a20number2028not20620or207293A20#:>
new  <	jmp rax>

1984:
old  <	; Initializer String Please write a number (not 6 or 7): >
new  <>

1985:
old  <	db "Please write a number (not 6 or 7): ", 0>
new  < char_main$29:>

1986:
old  <>
new  <	; FunctionEnd char_main>

1987:
old  <section .data>
new  <>

1988:
old  <>
new  <section .data>

1989:
old  <string_n20213D206#:>
new  <>

1990:
old  <	; Initializer String n != 6>
new  <string_Please20write20a20number2028not20620or207293A20#:>

1991:
old  <	db "n != 6", 0>
new  <	; Initializer String Please write a number (not 6 or 7): >

1992:
old  <>
new  <	db "Please write a number (not 6 or 7): ", 0>

1993:
old  <section .text>
new  <>

1994:
old  <>
new  <section .data>

1995:
old  < assert_test:>
new  <>

1996:
old  <	; Assign n 0>
new  <string_n20213D206#:>

1997:
old  <	mov dword [rbp + 24], 0>
new  <	; Initializer String n != 6>

1998:
old  <>
new  <	db "n != 6", 0>

1999:
old  < assert_test$1:>
new  <>

2000:
old  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <section .text>

2002:
old  < assert_test$2:>
new  < assert_test:>

2003:
old  <	; Parameter pointer "Please write a number (not 6 or 7): " 52>
new  <	; Assign n 0>

2004:
old  <	mov qword [rbp + 52], string_Please20write20a20number2028not20620or207293A20#>
new  <	mov dword [rbp + 24], 0>

2006:
old  < assert_test$3:>
new  < assert_test$1:>

2007:
old  <	; Call printf 28 0>
new  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2008:
old  <	mov qword [rbp + 28], assert_test$4>
new  <>

2009:
old  <	mov [rbp + 36], rbp>
new  < assert_test$2:>

2010:
old  <	add rbp, 28>
new  <	; Parameter pointer "Please write a number (not 6 or 7): " 52>

2011:
old  <	mov rdi, rbp>
new  <	mov qword [rbp + 52], string_Please20write20a20number2028not20620or207293A20#>

2012:
old  <	jmp printf>
new  <>

2013:
old  <>
new  < assert_test$3:>

2014:
old  < assert_test$4:>
new  <	; Call printf 28 0>

2015:
old  <	; PostCall 28>
new  <	mov qword [rbp + 28], assert_test$4>

2016:
old  <>
new  <	mov [rbp + 36], rbp>

2017:
old  < assert_test$5:>
new  <	add rbp, 28>

2018:
old  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov rdi, rbp>

2019:
old  <>
new  <	jmp printf>

2020:
old  < assert_test$6:>
new  <>

2021:
old  <	; Parameter pointer "%i" 52>
new  < assert_test$4:>

2022:
old  <	mov qword [rbp + 52], string_25i#>
new  <	; PostCall 28>

2024:
old  < assert_test$7:>
new  < assert_test$5:>

2025:
old  <	; Address Â£temporary134 n>
new  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2026:
old  <	mov rsi, rbp>
new  <>

2027:
old  <	add rsi, 24>
new  < assert_test$6:>

2028:
old  <>
new  <	; Parameter pointer "%i" 52>

2029:
old  < assert_test$8:>
new  <	mov qword [rbp + 52], string_25i#>

2030:
old  <	; Parameter pointer Â£temporary134 60>
new  <>

2031:
old  <	mov [rbp + 60], rsi>
new  < assert_test$7:>

2032:
old  <>
new  <	; Address Â£temporary135 n>

2033:
old  < assert_test$9:>
new  <	mov rsi, rbp>

2034:
old  <	; Call scanf 28 8>
new  <	add rsi, 24>

2035:
old  <	mov qword [rbp + 28], assert_test$10>
new  <>

2036:
old  <	mov [rbp + 36], rbp>
new  < assert_test$8:>

2037:
old  <	add rbp, 28>
new  <	; Parameter pointer Â£temporary135 60>

2038:
old  <	mov rdi, rbp>
new  <	mov [rbp + 60], rsi>

2039:
old  <	add rdi, 8>
new  <>

2040:
old  <	jmp scanf>
new  < assert_test$9:>

2041:
old  <>
new  <	; Call scanf 28 8>

2042:
old  < assert_test$10:>
new  <	mov qword [rbp + 28], assert_test$10>

2043:
old  <	; PostCall 28>
new  <	mov [rbp + 36], rbp>

2044:
old  <>
new  <	add rbp, 28>

2045:
old  < assert_test$11:>
new  <	mov rdi, rbp>

2046:
old  <	; NotEqual 23 n 6>
new  <	add rdi, 8>

2047:
old  <	cmp dword [rbp + 24], 6>
new  <	jmp scanf>

2048:
old  <	jne assert_test$23>
new  <>

2049:
old  <>
new  < assert_test$10:>

2050:
old  < assert_test$12:>
new  <	; PostCall 28>

2051:
old  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

2052:
old  <>
new  < assert_test$11:>

2053:
old  < assert_test$13:>
new  <	; NotEqual 23 n 6>

2054:
old  <	; Parameter pointer stderr 52>
new  <	cmp dword [rbp + 24], 6>

2055:
old  <	mov rax, [stderr]>
new  <	jne assert_test$23>

2056:
old  <	mov [rbp + 52], rax>
new  <>

2057:
old  <>
new  < assert_test$12:>

2058:
old  < assert_test$14:>
new  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2059:
old  <	; Parameter pointer "Assertion failed: "%s" in file %s at line %i\n" 60>
new  <>

2060:
old  <	mov qword [rbp + 60], string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#>
new  < assert_test$13:>

2061:
old  <>
new  <	; Parameter pointer stderr 52>

2062:
old  < assert_test$15:>
new  <	mov rax, [stderr]>

2063:
old  <	; Parameter pointer "n != 6" 68>
new  <	mov [rbp + 52], rax>

2064:
old  <	mov qword [rbp + 68], string_n20213D206#>
new  <>

2065:
old  <>
new  < assert_test$14:>

2066:
old  < assert_test$16:>
new  <	; Parameter pointer "Assertion failed: "%s" in file %s at line %i\n" 60>

2067:
old  <	; Parameter pointer "C:\Users\Stefan\Documents\vagrant\homestead\code\code\Main.c" 76>
new  <	mov qword [rbp + 60], string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#>

2068:
old  <	mov qword [rbp + 76], string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CMain2Ec#>
new  <>

2069:
old  <>
new  < assert_test$15:>

2070:
old  < assert_test$17:>
new  <	; Parameter pointer "n != 6" 68>

2071:
old  <	; Parameter signedint 858 84>
new  <	mov qword [rbp + 68], string_n20213D206#>

2072:
old  <	mov dword [rbp + 84], 858>
new  <>

2073:
old  <>
new  < assert_test$16:>

2074:
old  < assert_test$18:>
new  <	; Parameter pointer "C:\Users\Stefan\Documents\vagrant\homestead\code\code\Main.c" 76>

2075:
old  <	; Call fprintf 28 20>
new  <	mov qword [rbp + 76], string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CMain2Ec#>

2076:
old  <	mov qword [rbp + 28], assert_test$19>
new  <>

2077:
old  <	mov [rbp + 36], rbp>
new  < assert_test$17:>

2078:
old  <	add rbp, 28>
new  <	; Parameter signedint 867 84>

2079:
old  <	mov rdi, rbp>
new  <	mov dword [rbp + 84], 867>

2080:
old  <	add rdi, 20>
new  <>

2081:
old  <	jmp fprintf>
new  < assert_test$18:>

2082:
old  <>
new  <	; Call fprintf 28 20>

2083:
old  < assert_test$19:>
new  <	mov qword [rbp + 28], assert_test$19>

2084:
old  <	; PostCall 28>
new  <	mov [rbp + 36], rbp>

2085:
old  <>
new  <	add rbp, 28>

2086:
old  < assert_test$20:>
new  <	mov rdi, rbp>

2087:
old  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	add rdi, 20>

2088:
old  <>
new  <	jmp fprintf>

2089:
old  < assert_test$21:>
new  <>

2090:
old  <	; Call abort 28 0>
new  < assert_test$19:>

2091:
old  <	mov qword [rbp + 28], assert_test$22>
new  <	; PostCall 28>

2092:
old  <	mov [rbp + 36], rbp>
new  <>

2093:
old  <	add rbp, 28>
new  < assert_test$20:>

2094:
old  <	jmp abort>
new  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2096:
old  < assert_test$22:>
new  < assert_test$21:>

2097:
old  <	; PostCall 28>
new  <	; Call abort 28 0>

2098:
old  <>
new  <	mov qword [rbp + 28], assert_test$22>

2099:
old  < assert_test$23:>
new  <	mov [rbp + 36], rbp>

2100:
old  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	add rbp, 28>

2101:
old  <>
new  <	jmp abort>

2102:
old  < assert_test$24:>
new  <>

2103:
old  <	; Parameter signedint n 52>
new  < assert_test$22:>

2104:
old  <	mov eax, [rbp + 24]>
new  <	; PostCall 28>

2105:
old  <	mov [rbp + 52], eax>
new  <>

2106:
old  <>
new  < assert_test$23:>

2107:
old  < assert_test$25:>
new  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2108:
old  <	; Call assert_test2 28 0>
new  <>

2109:
old  <	mov qword [rbp + 28], assert_test$26>
new  < assert_test$24:>

2110:
old  <	mov [rbp + 36], rbp>
new  <	; Parameter signedint n 52>

2111:
old  <	add rbp, 28>
new  <	mov eax, [rbp + 24]>

2112:
old  <	jmp assert_test2>
new  <	mov [rbp + 52], eax>

2114:
old  < assert_test$26:>
new  < assert_test$25:>

2115:
old  <	; PostCall 28>
new  <	; Call assert_test2 28 0>

2116:
old  <>
new  <	mov qword [rbp + 28], assert_test$26>

2117:
old  < assert_test$27:>
new  <	mov [rbp + 36], rbp>

2118:
old  <	; Return>
new  <	add rbp, 28>

2119:
old  <	mov rax, [rbp]>
new  <	jmp assert_test2>

2120:
old  <	mov rdi, [rbp + 16]>
new  <>

2121:
old  <	mov rbp, [rbp + 8]>
new  < assert_test$26:>

2122:
old  <	jmp rax>
new  <	; PostCall 28>

2124:
old  < assert_test$28:>
new  < assert_test$27:>

2125:
old  <	; FunctionEnd assert_test>
new  <	; Return>

2126:
old  <>
new  <	mov rax, [rbp]>

2127:
old  <section .data>
new  <	mov rdi, [rbp + 16]>

2128:
old  <>
new  <	mov rbp, [rbp + 8]>

2129:
old  <string_n20213D207#:>
new  <	jmp rax>

2130:
old  <	; Initializer String n != 7>
new  <>

2131:
old  <	db "n != 7", 0>
new  < assert_test$28:>

2132:
old  <>
new  <	; FunctionEnd assert_test>

2133:
old  <section .text>
new  <>

2134:
old  <>
new  <section .data>

2135:
old  < assert_test2:>
new  <>

2136:
old  <	; NotEqual 12 n 7>
new  <string_n20213D207#:>

2137:
old  <	cmp dword [rbp + 24], 7>
new  <	; Initializer String n != 7>

2138:
old  <	jne assert_test2$12>
new  <	db "n != 7", 0>

2140:
old  < assert_test2$1:>
new  <section .text>

2141:
old  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

2142:
old  <>
new  < assert_test2:>

2143:
old  < assert_test2$2:>
new  <	; NotEqual 12 n 7>

2144:
old  <	; Parameter pointer stderr 52>
new  <	cmp dword [rbp + 24], 7>

2145:
old  <	mov rax, [stderr]>
new  <	jne assert_test2$12>

2146:
old  <	mov [rbp + 52], rax>
new  <>

2147:
old  <>
new  < assert_test2$1:>

2148:
old  < assert_test2$3:>
new  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2149:
old  <	; Parameter pointer "Assertion failed: "%s" in file %s at line %i\n" 60>
new  <>

2150:
old  <	mov qword [rbp + 60], string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#>
new  < assert_test2$2:>

2151:
old  <>
new  <	; Parameter pointer stderr 52>

2152:
old  < assert_test2$4:>
new  <	mov rax, [stderr]>

2153:
old  <	; Parameter pointer "n != 7" 68>
new  <	mov [rbp + 52], rax>

2154:
old  <	mov qword [rbp + 68], string_n20213D207#>
new  <>

2155:
old  <>
new  < assert_test2$3:>

2156:
old  < assert_test2$5:>
new  <	; Parameter pointer "Assertion failed: "%s" in file %s at line %i\n" 60>

2157:
old  <	; Parameter pointer "C:\Users\Stefan\Documents\vagrant\homestead\code\code\Main.c" 76>
new  <	mov qword [rbp + 60], string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#>

2158:
old  <	mov qword [rbp + 76], string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CMain2Ec#>
new  <>

2159:
old  <>
new  < assert_test2$4:>

2160:
old  < assert_test2$6:>
new  <	; Parameter pointer "n != 7" 68>

2161:
old  <	; Parameter signedint 863 84>
new  <	mov qword [rbp + 68], string_n20213D207#>

2162:
old  <	mov dword [rbp + 84], 863>
new  <>

2163:
old  <>
new  < assert_test2$5:>

2164:
old  < assert_test2$7:>
new  <	; Parameter pointer "C:\Users\Stefan\Documents\vagrant\homestead\code\code\Main.c" 76>

2165:
old  <	; Call fprintf 28 20>
new  <	mov qword [rbp + 76], string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CMain2Ec#>

2166:
old  <	mov qword [rbp + 28], assert_test2$8>
new  <>

2167:
old  <	mov [rbp + 36], rbp>
new  < assert_test2$6:>

2168:
old  <	add rbp, 28>
new  <	; Parameter signedint 872 84>

2169:
old  <	mov rdi, rbp>
new  <	mov dword [rbp + 84], 872>

2170:
old  <	add rdi, 20>
new  <>

2171:
old  <	jmp fprintf>
new  < assert_test2$7:>

2172:
old  <>
new  <	; Call fprintf 28 20>

2173:
old  < assert_test2$8:>
new  <	mov qword [rbp + 28], assert_test2$8>

2174:
old  <	; PostCall 28>
new  <	mov [rbp + 36], rbp>

2175:
old  <>
new  <	add rbp, 28>

2176:
old  < assert_test2$9:>
new  <	mov rdi, rbp>

2177:
old  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	add rdi, 20>

2178:
old  <>
new  <	jmp fprintf>

2179:
old  < assert_test2$10:>
new  <>

2180:
old  <	; Call abort 28 0>
new  < assert_test2$8:>

2181:
old  <	mov qword [rbp + 28], assert_test2$11>
new  <	; PostCall 28>

2182:
old  <	mov [rbp + 36], rbp>
new  <>

2183:
old  <	add rbp, 28>
new  < assert_test2$9:>

2184:
old  <	jmp abort>
new  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2186:
old  < assert_test2$11:>
new  < assert_test2$10:>

2187:
old  <	; PostCall 28>
new  <	; Call abort 28 0>

2188:
old  <>
new  <	mov qword [rbp + 28], assert_test2$11>

2189:
old  < assert_test2$12:>
new  <	mov [rbp + 36], rbp>

2190:
old  <	; Return>
new  <	add rbp, 28>

2191:
old  <	mov rax, [rbp]>
new  <	jmp abort>

2192:
old  <	mov rdi, [rbp + 16]>
new  <>

2193:
old  <	mov rbp, [rbp + 8]>
new  < assert_test2$11:>

2194:
old  <	jmp rax>
new  <	; PostCall 28>

2196:
old  < assert_test2$13:>
new  < assert_test2$12:>

2197:
old  <	; FunctionEnd assert_test2>
new  <	; Return>

2198:
old  <>
new  <	mov rax, [rbp]>

2199:
old  <section .data>
new  <	mov rdi, [rbp + 16]>

2200:
old  <$StackTop:	times 1048576 db 0>
new  <	mov rbp, [rbp + 8]>

111:
old  <	; IntegralToIntegral Â£temporary151 memorySize>
new  <	; IntegralToIntegral Â£temporary152 memorySize>

115:
old  <	; BinaryAdd newBlockSize Â£temporary151 12>
new  <	; BinaryAdd newBlockSize Â£temporary152 12>

124:
old  <	; StackTop Â£temporary153>
new  <	; StackTop Â£temporary154>

128:
old  <	; BinaryAdd Â£temporary154 Â£temporary153 1048572>
new  <	; BinaryAdd Â£temporary155 Â£temporary154 1048572>

132:
old  <	; IntegralToIntegral Â£temporary156 Â£temporary154>
new  <	; IntegralToIntegral Â£temporary157 Â£temporary155>

135:
old  <	; Assign lastAddress Â£temporary156>
new  <	; Assign lastAddress Â£temporary157>

161:
old  <	; IntegralToIntegral Â£temporary158 currBlockPtr>
new  <	; IntegralToIntegral Â£temporary159 currBlockPtr>

165:
old  <	; Assign currAddress Â£temporary158>
new  <	; Assign currAddress Â£temporary159>

169:
old  <	; Dereference Â£temporary159 -> currBlockPtr currBlockPtr 0>
new  <	; Dereference Â£temporary160 -> currBlockPtr currBlockPtr 0>

173:
old  <	; BinaryAdd Â£temporary160 currAddress Â£temporary159 -> currBlockPtr>
new  <	; BinaryAdd Â£temporary161 currAddress Â£temporary160 -> currBlockPtr>

178:
old  <	; BinaryAdd Â£temporary161 Â£temporary160 12>
new  <	; BinaryAdd Â£temporary162 Â£temporary161 12>

182:
old  <	; BinarySubtract currGap lastAddress Â£temporary161>
new  <	; BinarySubtract currGap lastAddress Â£temporary162>

230:
old  <	; Dereference Â£temporary168 -> currBlockPtr currBlockPtr 0>
new  <	; Dereference Â£temporary169 -> currBlockPtr currBlockPtr 0>

234:
old  <	; Assign currBlockPtr Â£temporary168 -> currBlockPtr>
new  <	; Assign currBlockPtr Â£temporary169 -> currBlockPtr>

248:
old  <	; IntegralToIntegral Â£temporary170 minBlockPtr>
new  <	; IntegralToIntegral Â£temporary171 minBlockPtr>

252:
old  <	; Dereference Â£temporary171 -> minBlockPtr minBlockPtr 0>
new  <	; Dereference Â£temporary172 -> minBlockPtr minBlockPtr 0>

256:
old  <	; BinaryAdd Â£temporary172 Â£temporary170 Â£temporary171 -> minBlockPtr>
new  <	; BinaryAdd Â£temporary173 Â£temporary171 Â£temporary172 -> minBlockPtr>

260:
old  <	; BinaryAdd newAddress Â£temporary172 12>
new  <	; BinaryAdd newAddress Â£temporary173 12>

265:
old  <	; IntegralToIntegral Â£temporary174 newAddress>
new  <	; IntegralToIntegral Â£temporary175 newAddress>

271:
old  <	; Assign newBlockPtr Â£temporary174>
new  <	; Assign newBlockPtr Â£temporary175>

275:
old  <	; Dereference Â£temporary175 -> newBlockPtr newBlockPtr 0>
new  <	; Dereference Â£temporary176 -> newBlockPtr newBlockPtr 0>

279:
old  <	; Assign Â£temporary175 -> newBlockPtr memorySize>
new  <	; Assign Â£temporary176 -> newBlockPtr memorySize>

284:
old  <	; Dereference Â£temporary176 -> newBlockPtr newBlockPtr 0>
new  <	; Dereference Â£temporary177 -> newBlockPtr newBlockPtr 0>

288:
old  <	; Assign Â£temporary176 -> newBlockPtr minBlockPtr>
new  <	; Assign Â£temporary177 -> newBlockPtr minBlockPtr>

298:
old  <	; Dereference Â£temporary178 -> minPrevBlockPtr minPrevBlockPtr 0>
new  <	; Dereference Â£temporary179 -> minPrevBlockPtr minPrevBlockPtr 0>

302:
old  <	; Assign Â£temporary178 -> minPrevBlockPtr newBlockPtr>
new  <	; Assign Â£temporary179 -> minPrevBlockPtr newBlockPtr>

316:
old  <	; BinaryAdd Â£temporary179 newAddress 12>
new  <	; BinaryAdd Â£temporary180 newAddress 12>

321:
old  <	; IntegralToIntegral Â£temporary180 Â£temporary179>
new  <	; IntegralToIntegral Â£temporary181 Â£temporary180>

326:
old  <	; Return Â£temporary180>
new  <	; Return Â£temporary181>

339:
old  <	; InspectRegister Â£temporary182 rbp>
new  <	; InspectRegister Â£temporary183 rbp>

342:
old  <	; IntegralToIntegral Â£temporary183 Â£temporary182>
new  <	; IntegralToIntegral Â£temporary184 Â£temporary183>

345:
old  <	; Assign stackTop Â£temporary183>
new  <	; Assign stackTop Â£temporary184>

355:
old  <	; IntegralToIntegral Â£temporary185 newAddress>
new  <	; IntegralToIntegral Â£temporary186 newAddress>

361:
old  <	; Assign newBlockPtr Â£temporary185>
new  <	; Assign newBlockPtr Â£temporary186>

365:
old  <	; Dereference Â£temporary186 -> newBlockPtr newBlockPtr 0>
new  <	; Dereference Â£temporary187 -> newBlockPtr newBlockPtr 0>

369:
old  <	; Assign Â£temporary186 -> newBlockPtr memorySize>
new  <	; Assign Â£temporary187 -> newBlockPtr memorySize>

374:
old  <	; Dereference Â£temporary187 -> newBlockPtr newBlockPtr 0>
new  <	; Dereference Â£temporary188 -> newBlockPtr newBlockPtr 0>

378:
old  <	; Assign Â£temporary187 -> newBlockPtr 0>
new  <	; Assign Â£temporary188 -> newBlockPtr 0>

387:
old  <	; Dereference Â£temporary189 -> prevBlockPtr prevBlockPtr 0>
new  <	; Dereference Â£temporary190 -> prevBlockPtr prevBlockPtr 0>

391:
old  <	; Assign Â£temporary189 -> prevBlockPtr newBlockPtr>
new  <	; Assign Â£temporary190 -> prevBlockPtr newBlockPtr>

405:
old  <	; BinaryAdd Â£temporary190 newAddress 12>
new  <	; BinaryAdd Â£temporary191 newAddress 12>

410:
old  <	; IntegralToIntegral Â£temporary191 Â£temporary190>
new  <	; IntegralToIntegral Â£temporary192 Â£temporary191>

415:
old  <	; Return Â£temporary191>
new  <	; Return Â£temporary192>

438:
old  <	; SignedMultiply Â£temporary192 number size>
new  <	; SignedMultiply Â£temporary193 number size>

444:
old  <	; Parameter signedint Â£temporary192 56>
new  <	; Parameter signedint Â£temporary193 56>

458:
old  <	; GetReturnValue Â£temporary193>
new  <	; GetReturnValue Â£temporary194>

461:
old  <	; Assign pointer Â£temporary193>
new  <	; Assign pointer Â£temporary194>

522:
old  <	; IntegralToIntegral Â£temporary197 freeMemoryPtr>
new  <	; IntegralToIntegral Â£temporary198 freeMemoryPtr>

526:
old  <	; BinarySubtract Â£temporary198 Â£temporary197 12>
new  <	; BinarySubtract Â£temporary199 Â£temporary198 12>

530:
old  <	; IntegralToIntegral Â£temporary199 Â£temporary198>
new  <	; IntegralToIntegral Â£temporary200 Â£temporary199>

535:
old  <	; Assign freeBlockPtr Â£temporary199>
new  <	; Assign freeBlockPtr Â£temporary200>

564:
old  <	; Dereference Â£temporary203 -> currBlockPtr currBlockPtr 0>
new  <	; Dereference Â£temporary204 -> currBlockPtr currBlockPtr 0>

568:
old  <	; NotEqual 15 Â£temporary203 -> currBlockPtr 0>
new  <	; NotEqual 15 Â£temporary204 -> currBlockPtr 0>

586:
old  <	; Dereference Â£temporary207 -> currBlockPtr currBlockPtr 0>
new  <	; Dereference Â£temporary208 -> currBlockPtr currBlockPtr 0>

590:
old  <	; Assign g_firstBlockPtr Â£temporary207 -> currBlockPtr>
new  <	; Assign g_firstBlockPtr Â£temporary208 -> currBlockPtr>

599:
old  <	; Dereference Â£temporary208 -> currBlockPtr currBlockPtr 0>
new  <	; Dereference Â£temporary209 -> currBlockPtr currBlockPtr 0>

603:
old  <	; NotEqual 24 Â£temporary208 -> currBlockPtr 0>
new  <	; NotEqual 24 Â£temporary209 -> currBlockPtr 0>

608:
old  <	; Dereference Â£temporary210 -> prevBlockPtr prevBlockPtr 0>
new  <	; Dereference Â£temporary211 -> prevBlockPtr prevBlockPtr 0>

612:
old  <	; Assign Â£temporary210 -> prevBlockPtr 0>
new  <	; Assign Â£temporary211 -> prevBlockPtr 0>

620:
old  <	; Dereference Â£temporary211 -> prevBlockPtr prevBlockPtr 0>
new  <	; Dereference Â£temporary212 -> prevBlockPtr prevBlockPtr 0>

624:
old  <	; Dereference Â£temporary212 -> currBlockPtr currBlockPtr 0>
new  <	; Dereference Â£temporary213 -> currBlockPtr currBlockPtr 0>

628:
old  <	; Assign Â£temporary211 -> prevBlockPtr Â£temporary212 -> currBlockPtr>
new  <	; Assign Â£temporary212 -> prevBlockPtr Â£temporary213 -> currBlockPtr>

645:
old  <	; Dereference Â£temporary213 -> currBlockPtr currBlockPtr 0>
new  <	; Dereference Â£temporary214 -> currBlockPtr currBlockPtr 0>

649:
old  <	; Assign currBlockPtr Â£temporary213 -> currBlockPtr>
new  <	; Assign currBlockPtr Â£temporary214 -> currBlockPtr>

818:
old  <	; GetReturnValue Â£temporary225>
new  <	; GetReturnValue Â£temporary226>

821:
old  <	; Return Â£temporary225>
new  <	; Return Â£temporary226>

859:
old  <	; IntegralToIntegral Â£temporary228 newMemorySize>
new  <	; IntegralToIntegral Â£temporary229 newMemorySize>

863:
old  <	; BinaryAdd newBlockSize Â£temporary228 12>
new  <	; BinaryAdd newBlockSize Â£temporary229 12>

868:
old  <	; IntegralToIntegral Â£temporary230 oldMemoryPtr>
new  <	; IntegralToIntegral Â£temporary231 oldMemoryPtr>

872:
old  <	; BinarySubtract Â£temporary231 Â£temporary230 12>
new  <	; BinarySubtract Â£temporary232 Â£temporary231 12>

876:
old  <	; IntegralToIntegral Â£temporary232 Â£temporary231>
new  <	; IntegralToIntegral Â£temporary233 Â£temporary232>

881:
old  <	; Assign oldBlockPtr Â£temporary232>
new  <	; Assign oldBlockPtr Â£temporary233>

885:
old  <	; Dereference Â£temporary233 -> oldBlockPtr oldBlockPtr 0>
new  <	; Dereference Â£temporary234 -> oldBlockPtr oldBlockPtr 0>

889:
old  <	; UnsignedGreaterThan 49 newBlockSize Â£temporary233 -> oldBlockPtr>
new  <	; UnsignedGreaterThan 49 newBlockSize Â£temporary234 -> oldBlockPtr>

895:
old  <	; Dereference Â£temporary235 -> oldBlockPtr oldBlockPtr 0>
new  <	; Dereference Â£temporary236 -> oldBlockPtr oldBlockPtr 0>

899:
old  <	; Assign Â£temporary235 -> oldBlockPtr newBlockSize>
new  <	; Assign Â£temporary236 -> oldBlockPtr newBlockSize>

912:
old  <	; StackTop Â£temporary236>
new  <	; StackTop Â£temporary237>

916:
old  <	; BinaryAdd Â£temporary237 Â£temporary236 1048572>
new  <	; BinaryAdd Â£temporary238 Â£temporary237 1048572>

920:
old  <	; IntegralToIntegral Â£temporary239 Â£temporary237>
new  <	; IntegralToIntegral Â£temporary240 Â£temporary238>

923:
old  <	; Assign lastAddress Â£temporary239>
new  <	; Assign lastAddress Â£temporary240>

943:
old  <	; IntegralToIntegral Â£temporary242 currBlockPtr>
new  <	; IntegralToIntegral Â£temporary243 currBlockPtr>

947:
old  <	; BinarySubtract availableSize lastAddress Â£temporary242>
new  <	; BinarySubtract availableSize lastAddress Â£temporary243>

959:
old  <	; Dereference Â£temporary245 -> oldBlockPtr oldBlockPtr 0>
new  <	; Dereference Â£temporary246 -> oldBlockPtr oldBlockPtr 0>

963:
old  <	; Assign Â£temporary245 -> oldBlockPtr newBlockSize>
new  <	; Assign Â£temporary246 -> oldBlockPtr newBlockSize>

976:
old  <	; IntegralToIntegral Â£temporary246 currBlockPtr>
new  <	; IntegralToIntegral Â£temporary247 currBlockPtr>

980:
old  <	; Assign lastAddress Â£temporary246>
new  <	; Assign lastAddress Â£temporary247>

984:
old  <	; Dereference Â£temporary247 -> currBlockPtr currBlockPtr 0>
new  <	; Dereference Â£temporary248 -> currBlockPtr currBlockPtr 0>

988:
old  <	; Assign currBlockPtr Â£temporary247 -> currBlockPtr>
new  <	; Assign currBlockPtr Â£temporary248 -> currBlockPtr>

1015:
old  <	; GetReturnValue Â£temporary248>
new  <	; GetReturnValue Â£temporary249>

1018:
old  <	; Assign newMemoryPtr Â£temporary248>
new  <	; Assign newMemoryPtr Â£temporary249>

1147:
old  <	; IntegralToIntegral Â£temporary254 currBlockPtr>
new  <	; IntegralToIntegral Â£temporary255 currBlockPtr>

1151:
old  <	; Parameter unsigned int Â£temporary254 64>
new  <	; Parameter unsigned int Â£temporary255 64>

1155:
old  <	; Dereference Â£temporary255 -> currBlockPtr currBlockPtr 0>
new  <	; Dereference Â£temporary256 -> currBlockPtr currBlockPtr 0>

1159:
old  <	; Parameter unsigned int Â£temporary255 -> currBlockPtr 68>
new  <	; Parameter unsigned int Â£temporary256 -> currBlockPtr 68>

1176:
old  <	; Dereference Â£temporary257 -> currBlockPtr currBlockPtr 0>
new  <	; Dereference Â£temporary258 -> currBlockPtr currBlockPtr 0>

1180:
old  <	; Assign currBlockPtr Â£temporary257 -> currBlockPtr>
new  <	; Assign currBlockPtr Â£temporary258 -> currBlockPtr>

36:
old  <	; GetReturnValue Â£temporary259>
new  <	; GetReturnValue Â£temporary260>

39:
old  <	; Assign localeConvPtr Â£temporary259>
new  <	; Assign localeConvPtr Â£temporary260>

51:
old  <	; Dereference Â£temporary261 -> localeConvPtr localeConvPtr 0>
new  <	; Dereference Â£temporary262 -> localeConvPtr localeConvPtr 0>

55:
old  <	; Parameter pointer Â£temporary261 -> localeConvPtr 60>
new  <	; Parameter pointer Â£temporary262 -> localeConvPtr 60>

75:
old  <	; GetReturnValue Â£temporary262>
new  <	; GetReturnValue Â£temporary263>

78:
old  <	; Equal 16 Â£temporary262 0>
new  <	; Equal 16 Â£temporary263 0>

83:
old  <	; Assign Â£temporary264 1>
new  <	; Assign Â£temporary265 1>

91:
old  <	; Assign Â£temporary264 0>
new  <	; Assign Â£temporary265 0>

95:
old  <	; Return Â£temporary264>
new  <	; Return Â£temporary265>

112:
old  <	; Assign Â£temporary268 1>
new  <	; Assign Â£temporary269 1>

120:
old  <	; Assign Â£temporary268 0>
new  <	; Assign Â£temporary269 0>

124:
old  <	; Return Â£temporary268>
new  <	; Return Â£temporary269>

149:
old  <	; GetReturnValue Â£temporary269>
new  <	; GetReturnValue Â£temporary270>

152:
old  <	; Assign localeConvPtr Â£temporary269>
new  <	; Assign localeConvPtr Â£temporary270>

164:
old  <	; Dereference Â£temporary271 -> localeConvPtr localeConvPtr 0>
new  <	; Dereference Â£temporary272 -> localeConvPtr localeConvPtr 0>

168:
old  <	; Parameter pointer Â£temporary271 -> localeConvPtr 60>
new  <	; Parameter pointer Â£temporary272 -> localeConvPtr 60>

188:
old  <	; GetReturnValue Â£temporary272>
new  <	; GetReturnValue Â£temporary273>

191:
old  <	; Equal 16 Â£temporary272 0>
new  <	; Equal 16 Â£temporary273 0>

196:
old  <	; Assign Â£temporary274 1>
new  <	; Assign Â£temporary275 1>

204:
old  <	; Assign Â£temporary274 0>
new  <	; Assign Â£temporary275 0>

208:
old  <	; Return Â£temporary274>
new  <	; Return Â£temporary275>

225:
old  <	; Assign Â£temporary278 1>
new  <	; Assign Â£temporary279 1>

233:
old  <	; Assign Â£temporary278 0>
new  <	; Assign Â£temporary279 0>

237:
old  <	; Return Â£temporary278>
new  <	; Return Â£temporary279>

267:
old  <	; GetReturnValue Â£temporary279>
new  <	; GetReturnValue Â£temporary280>

270:
old  <	; NotEqual 12 Â£temporary279 0>
new  <	; NotEqual 12 Â£temporary280 0>

293:
old  <	; GetReturnValue Â£temporary280>
new  <	; GetReturnValue Â£temporary281>

296:
old  <	; Equal 14 Â£temporary280 0>
new  <	; Equal 14 Â£temporary281 0>

301:
old  <	; Assign Â£temporary284 1>
new  <	; Assign Â£temporary285 1>

309:
old  <	; Assign Â£temporary284 0>
new  <	; Assign Â£temporary285 0>

313:
old  <	; Return Â£temporary284>
new  <	; Return Â£temporary285>

335:
old  <	; Assign Â£temporary288 1>
new  <	; Assign Â£temporary289 1>

343:
old  <	; Assign Â£temporary288 0>
new  <	; Assign Â£temporary289 0>

347:
old  <	; Return Â£temporary288>
new  <	; Return Â£temporary289>

377:
old  <	; GetReturnValue Â£temporary289>
new  <	; GetReturnValue Â£temporary290>

380:
old  <	; NotEqual 12 Â£temporary289 0>
new  <	; NotEqual 12 Â£temporary290 0>

403:
old  <	; GetReturnValue Â£temporary290>
new  <	; GetReturnValue Â£temporary291>

406:
old  <	; Equal 14 Â£temporary290 0>
new  <	; Equal 14 Â£temporary291 0>

411:
old  <	; Assign Â£temporary294 1>
new  <	; Assign Â£temporary295 1>

419:
old  <	; Assign Â£temporary294 0>
new  <	; Assign Â£temporary295 0>

423:
old  <	; Return Â£temporary294>
new  <	; Return Â£temporary295>

453:
old  <	; GetReturnValue Â£temporary295>
new  <	; GetReturnValue Â£temporary296>

456:
old  <	; NotEqual 10 Â£temporary295 0>
new  <	; NotEqual 10 Â£temporary296 0>

481:
old  <	; Assign Â£temporary305 1>
new  <	; Assign Â£temporary306 1>

489:
old  <	; Assign Â£temporary305 0>
new  <	; Assign Â£temporary306 0>

493:
old  <	; Return Â£temporary305>
new  <	; Return Â£temporary306>

515:
old  <	; Assign Â£temporary309 1>
new  <	; Assign Â£temporary310 1>

523:
old  <	; Assign Â£temporary309 0>
new  <	; Assign Â£temporary310 0>

527:
old  <	; Return Â£temporary309>
new  <	; Return Â£temporary310>

557:
old  <	; GetReturnValue Â£temporary310>
new  <	; GetReturnValue Â£temporary311>

560:
old  <	; Equal 9 Â£temporary310 0>
new  <	; Equal 9 Â£temporary311 0>

570:
old  <	; Assign Â£temporary314 1>
new  <	; Assign Â£temporary315 1>

578:
old  <	; Assign Â£temporary314 0>
new  <	; Assign Â£temporary315 0>

582:
old  <	; Return Â£temporary314>
new  <	; Return Â£temporary315>

612:
old  <	; GetReturnValue Â£temporary315>
new  <	; GetReturnValue Â£temporary316>

615:
old  <	; Equal 14 Â£temporary315 0>
new  <	; Equal 14 Â£temporary316 0>

646:
old  <	; Assign Â£temporary321 1>
new  <	; Assign Â£temporary322 1>

654:
old  <	; Assign Â£temporary321 0>
new  <	; Assign Â£temporary322 0>

658:
old  <	; Return Â£temporary321>
new  <	; Return Â£temporary322>

688:
old  <	; GetReturnValue Â£temporary322>
new  <	; GetReturnValue Â£temporary323>

691:
old  <	; NotEqual 8 Â£temporary322 0>
new  <	; NotEqual 8 Â£temporary323 0>

696:
old  <	; Assign Â£temporary325 1>
new  <	; Assign Â£temporary326 1>

704:
old  <	; Assign Â£temporary325 0>
new  <	; Assign Â£temporary326 0>

708:
old  <	; Return Â£temporary325>
new  <	; Return Â£temporary326>

750:
old  <	; Assign Â£temporary337 1>
new  <	; Assign Â£temporary338 1>

758:
old  <	; Assign Â£temporary337 0>
new  <	; Assign Â£temporary338 0>

762:
old  <	; Return Â£temporary337>
new  <	; Return Â£temporary338>

792:
old  <	; GetReturnValue Â£temporary338>
new  <	; GetReturnValue Â£temporary339>

795:
old  <	; Equal 32 Â£temporary338 0>
new  <	; Equal 32 Â£temporary339 0>

813:
old  <	; GetReturnValue Â£temporary339>
new  <	; GetReturnValue Â£temporary340>

816:
old  <	; Assign localeConvPtr Â£temporary339>
new  <	; Assign localeConvPtr Â£temporary340>

825:
old  <	; Dereference Â£temporary341 -> localeConvPtr localeConvPtr 0>
new  <	; Dereference Â£temporary342 -> localeConvPtr localeConvPtr 0>

829:
old  <	; Assign lowerCase Â£temporary341 -> localeConvPtr>
new  <	; Assign lowerCase Â£temporary342 -> localeConvPtr>

834:
old  <	; Dereference Â£temporary342 -> localeConvPtr localeConvPtr 0>
new  <	; Dereference Â£temporary343 -> localeConvPtr localeConvPtr 0>

838:
old  <	; Assign upperCase Â£temporary342 -> localeConvPtr>
new  <	; Assign upperCase Â£temporary343 -> localeConvPtr>

866:
old  <	; GetReturnValue Â£temporary343>
new  <	; GetReturnValue Â£temporary344>

869:
old  <	; BinarySubtract Â£temporary345 Â£temporary343 upperCase>
new  <	; BinarySubtract Â£temporary346 Â£temporary344 upperCase>

873:
old  <	; IntegralToIntegral Â£temporary346 Â£temporary345>
new  <	; IntegralToIntegral Â£temporary347 Â£temporary346>

876:
old  <	; Assign index Â£temporary346>
new  <	; Assign index Â£temporary347>

880:
old  <	; IntegralToIntegral Â£temporary348 index>
new  <	; IntegralToIntegral Â£temporary349 index>

886:
old  <	; BinaryAdd Â£temporary350 lowerCase Â£temporary348>
new  <	; BinaryAdd Â£temporary351 lowerCase Â£temporary349>

891:
old  <	; Dereference Â£temporary347 -> Â£temporary350 Â£temporary350 0>
new  <	; Dereference Â£temporary348 -> Â£temporary351 Â£temporary351 0>

894:
old  <	; IntegralToIntegral Â£temporary351 Â£temporary347 -> Â£temporary350>
new  <	; IntegralToIntegral Â£temporary352 Â£temporary348 -> Â£temporary351>

903:
old  <	; Return Â£temporary351>
new  <	; Return Â£temporary352>

910:
old  <	; BinaryAdd Â£temporary352 c 32>
new  <	; BinaryAdd Â£temporary353 c 32>

915:
old  <	; Return Â£temporary352>
new  <	; Return Â£temporary353>

953:
old  <	; GetReturnValue Â£temporary354>
new  <	; GetReturnValue Â£temporary355>

956:
old  <	; Equal 32 Â£temporary354 0>
new  <	; Equal 32 Â£temporary355 0>

974:
old  <	; GetReturnValue Â£temporary355>
new  <	; GetReturnValue Â£temporary356>

977:
old  <	; Assign localeConvPtr Â£temporary355>
new  <	; Assign localeConvPtr Â£temporary356>

986:
old  <	; Dereference Â£temporary357 -> localeConvPtr localeConvPtr 0>
new  <	; Dereference Â£temporary358 -> localeConvPtr localeConvPtr 0>

990:
old  <	; Assign lowerCase Â£temporary357 -> localeConvPtr>
new  <	; Assign lowerCase Â£temporary358 -> localeConvPtr>

995:
old  <	; Dereference Â£temporary358 -> localeConvPtr localeConvPtr 0>
new  <	; Dereference Â£temporary359 -> localeConvPtr localeConvPtr 0>

999:
old  <	; Assign upperCase Â£temporary358 -> localeConvPtr>
new  <	; Assign upperCase Â£temporary359 -> localeConvPtr>

1027:
old  <	; GetReturnValue Â£temporary359>
new  <	; GetReturnValue Â£temporary360>

1030:
old  <	; BinarySubtract Â£temporary361 Â£temporary359 lowerCase>
new  <	; BinarySubtract Â£temporary362 Â£temporary360 lowerCase>

1034:
old  <	; IntegralToIntegral Â£temporary362 Â£temporary361>
new  <	; IntegralToIntegral Â£temporary363 Â£temporary362>

1037:
old  <	; Assign index Â£temporary362>
new  <	; Assign index Â£temporary363>

1041:
old  <	; IntegralToIntegral Â£temporary364 index>
new  <	; IntegralToIntegral Â£temporary365 index>

1047:
old  <	; BinaryAdd Â£temporary366 upperCase Â£temporary364>
new  <	; BinaryAdd Â£temporary367 upperCase Â£temporary365>

1052:
old  <	; Dereference Â£temporary363 -> Â£temporary366 Â£temporary366 0>
new  <	; Dereference Â£temporary364 -> Â£temporary367 Â£temporary367 0>

1055:
old  <	; IntegralToIntegral Â£temporary367 Â£temporary363 -> Â£temporary366>
new  <	; IntegralToIntegral Â£temporary368 Â£temporary364 -> Â£temporary367>

1064:
old  <	; Return Â£temporary367>
new  <	; Return Â£temporary368>

1071:
old  <	; BinarySubtract Â£temporary368 c 32>
new  <	; BinarySubtract Â£temporary369 c 32>

1076:
old  <	; Return Â£temporary368>
new  <	; Return Â£temporary369>

8:
old  <@1176$NO_ERROR:>
new  <@1178$NO_ERROR:>

14:
old  <@1177$NO_FUNCTION:>
new  <@1179$NO_FUNCTION:>

20:
old  <@1178$NO_FILE:>
new  <@1180$NO_FILE:>

26:
old  <@1179$NO_PATH:>
new  <@1181$NO_PATH:>

32:
old  <@1180$NO_HANDLE:>
new  <@1182$NO_HANDLE:>

38:
old  <@1181$NO_ACCESS:>
new  <@1183$NO_ACCESS:>

44:
old  <@1182$EDOM:>
new  <@1184$EDOM:>

50:
old  <@1183$ERANGE:>
new  <@1185$ERANGE:>

56:
old  <@1184$EILSEQ:>
new  <@1186$EILSEQ:>

62:
old  <@1185$FOPEN:>
new  <@1187$FOPEN:>

68:
old  <@1186$FFLUSH:>
new  <@1188$FFLUSH:>

74:
old  <@1187$FCLOSE:>
new  <@1189$FCLOSE:>

80:
old  <@1188$NO_MODE:>
new  <@1190$NO_MODE:>

86:
old  <@1189$FWRITE:>
new  <@1191$FWRITE:>

92:
old  <@1190$FREAD:>
new  <@1192$FREAD:>

98:
old  <@1191$FSEEK:>
new  <@1193$FSEEK:>

104:
old  <@1192$FTELL:>
new  <@1194$FTELL:>

110:
old  <@1193$FSIZE:>
new  <@1195$FSIZE:>

116:
old  <@1194$FREMOVE:>
new  <@1196$FREMOVE:>

122:
old  <@1195$FRENAME:>
new  <@1197$FRENAME:>

128:
old  <@1196$FTEMPNAME:>
new  <@1198$FTEMPNAME:>

134:
old  <@1197$FTEMPFILE:>
new  <@1199$FTEMPFILE:>

53:
old  <@1498$enShortDayList:>
new  <@1500$enShortDayList:>

113:
old  <@1499$enLongDayList:>
new  <@1501$enLongDayList:>

203:
old  <@1500$enShortMonthList:>
new  <@1502$enShortMonthList:>

297:
old  <@1501$enLongMonthList:>
new  <@1503$enLongMonthList:>

501:
old  <@1524$en_US_utf8:>
new  <@1526$en_US_utf8:>

506:
old  <	; Initializer Pointer @1498$enShortDayList>
new  <	; Initializer Pointer @1500$enShortDayList>

507:
old  <	dq @1498$enShortDayList>
new  <	dq @1500$enShortDayList>

508:
old  <	; Initializer Pointer @1499$enLongDayList>
new  <	; Initializer Pointer @1501$enLongDayList>

509:
old  <	dq @1499$enLongDayList>
new  <	dq @1501$enLongDayList>

510:
old  <	; Initializer Pointer @1500$enShortMonthList>
new  <	; Initializer Pointer @1502$enShortMonthList>

511:
old  <	dq @1500$enShortMonthList>
new  <	dq @1502$enShortMonthList>

512:
old  <	; Initializer Pointer @1501$enLongMonthList>
new  <	; Initializer Pointer @1503$enLongMonthList>

513:
old  <	dq @1501$enLongMonthList>
new  <	dq @1503$enLongMonthList>

523:
old  <string_Son#:>
new  <string_#:>

524:
old  <	; Initializer String Son>
new  <	; Initializer String >

525:
old  <	db "Son", 0>
new  <	db 0>

529:
old  <string_Man#:>
new  <string_C#:>

530:
old  <	; Initializer String Man>
new  <	; Initializer String C>

531:
old  <	db "Man", 0>
new  <	db "C", 0>

535:
old  <string_Tis#:>
new  <string_US#:>

536:
old  <	; Initializer String Tis>
new  <	; Initializer String US>

537:
old  <	db "Tis", 0>
new  <	db "US", 0>

541:
old  <string_Ons#:>
new  <@1529$sArray:>

542:
old  <	; Initializer String Ons>
new  <	; Initializer Pointer string_#>

543:
old  <	db "Ons", 0>
new  <	dq string_#>

544:
old  <>
new  <	; Initializer Pointer @1526$en_US_utf8>

545:
old  <section .data>
new  <	dq @1526$en_US_utf8>

546:
old  <>
new  <	; Initializer Pointer string_C#>

547:
old  <string_Tor#:>
new  <	dq string_C#>

548:
old  <	; Initializer String Tor>
new  <	; Initializer Pointer @1526$en_US_utf8>

549:
old  <	db "Tor", 0>
new  <	dq @1526$en_US_utf8>

550:
old  <>
new  <	; Initializer Pointer string_US#>

551:
old  <section .data>
new  <	dq string_US#>

552:
old  <>
new  <	; Initializer Pointer @1526$en_US_utf8>

553:
old  <string_Fre#:>
new  <	dq @1526$en_US_utf8>

554:
old  <	; Initializer String Fre>
new  <>

555:
old  <	db "Fre", 0>
new  <section .data>

557:
old  <section .data>
new  <@1530$sSize:>

558:
old  <>
new  <	; Initializer SignedInt 1>

559:
old  <string_Lor#:>
new  <	dd 1>

560:
old  <	; Initializer String Lor>
new  <>

561:
old  <	db "Lor", 0>
new  <section .data>

563:
old  <section .data>
new  <@1531$g_currStructPtr:>

564:
old  <>
new  <	; Initializer Pointer @1529$sArray>

565:
old  <@1525$swShortDayList:>
new  <	dq @1529$sArray>

566:
old  <	; Initializer Pointer string_Son#>
new  <>

567:
old  <	dq string_Son#>
new  <section .data>

568:
old  <	; Initializer Pointer string_Man#>
new  <>

569:
old  <	dq string_Man#>
new  <Array_16#:>

570:
old  <	; Initializer Pointer string_Tis#>
new  <	; Initializer Array 16>

571:
old  <	dq string_Tis#>
new  <	dq 16>

572:
old  <	; Initializer Pointer string_Ons#>
new  <>

573:
old  <	dq string_Ons#>
new  <section .text>

574:
old  <	; Initializer Pointer string_Tor#>
new  <>

575:
old  <	dq string_Tor#>
new  < setlocale:>

576:
old  <	; Initializer Pointer string_Fre#>
new  <	; Equal 4 g_currStructPtr 0>

577:
old  <	dq string_Fre#>
new  <	cmp qword [@1531$g_currStructPtr], 0>

578:
old  <	; Initializer Pointer string_Lor#>
new  <	je setlocale$4>

579:
old  <	dq string_Lor#>
new  <>

580:
old  <>
new  < setlocale$1:>

581:
old  <section .data>
new  <	; Dereference Â£temporary372 -> g_currStructPtr g_currStructPtr 0>

582:
old  <>
new  <	mov rsi, [@1531$g_currStructPtr]>

583:
old  <string_Sondag#:>
new  <>

584:
old  <	; Initializer String Sondag>
new  < setlocale$2:>

585:
old  <	db "Sondag", 0>
new  <	; Assign Â£temporary373 Â£temporary372 -> g_currStructPtr>

586:
old  <>
new  <	mov rax, [rsi]>

587:
old  <section .data>
new  <>

588:
old  <>
new  < setlocale$3:>

589:
old  <string_Mandag#:>
new  <	; Goto 5>

590:
old  <	; Initializer String Mandag>
new  <	jmp setlocale$5>

591:
old  <	db "Mandag", 0>
new  <>

592:
old  <>
new  < setlocale$4:>

593:
old  <section .data>
new  <	; Assign Â£temporary373 0>

594:
old  <>
new  <	mov rax, 0>

595:
old  <string_Tisdag#:>
new  <>

596:
old  <	; Initializer String Tisdag>
new  < setlocale$5:>

597:
old  <	db "Tisdag", 0>
new  <	; Assign oldName Â£temporary373>

598:
old  <>
new  <	mov [rbp + 40], rax>

599:
old  <section .data>
new  <>

600:
old  <>
new  < setlocale$6:>

601:
old  <string_Onsdag#:>
new  <	; Assign g_currStructPtr 0>

602:
old  <	; Initializer String Onsdag>
new  <	mov qword [@1531$g_currStructPtr], 0>

603:
old  <	db "Onsdag", 0>
new  <>

604:
old  <>
new  < setlocale$7:>

605:
old  <section .data>
new  <	; Equal 30 newName 0>

606:
old  <>
new  <	cmp qword [rbp + 28], 0>

607:
old  <string_Torsdag#:>
new  <	je setlocale$30>

608:
old  <	; Initializer String Torsdag>
new  <>

609:
old  <	db "Torsdag", 0>
new  < setlocale$8:>

610:
old  <>
new  <	; Assign index 0>

611:
old  <section .data>
new  <	mov dword [rbp + 36], 0>

613:
old  <string_Fredag#:>
new  < setlocale$9:>

614:
old  <	; Initializer String Fredag>
new  <	; SignedGreaterThanEqual 30 index sSize>

615:
old  <	db "Fredag", 0>
new  <	mov eax, [@1530$sSize]>

616:
old  <>
new  <	cmp [rbp + 36], eax>

617:
old  <section .data>
new  <	jge setlocale$30>

619:
old  <string_Lordag#:>
new  < setlocale$10:>

620:
old  <	; Initializer String Lordag>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

621:
old  <	db "Lordag", 0>
new  <>

622:
old  <>
new  < setlocale$11:>

623:
old  <section .data>
new  <	; Parameter pointer newName 72>

624:
old  <>
new  <	mov rax, [rbp + 28]>

625:
old  <@1526$swLongDayList:>
new  <	mov [rbp + 72], rax>

626:
old  <	; Initializer Pointer string_Sondag#>
new  <>

627:
old  <	dq string_Sondag#>
new  < setlocale$12:>

628:
old  <	; Initializer Pointer string_Mandag#>
new  <	; IntegralToIntegral Â£temporary378 index>

629:
old  <	dq string_Mandag#>
new  <	mov eax, [rbp + 36]>

630:
old  <	; Initializer Pointer string_Tisdag#>
new  <	mov rbx, 4294967295>

631:
old  <	dq string_Tisdag#>
new  <	and rax, rbx>

632:
old  <	; Initializer Pointer string_Onsdag#>
new  <>

633:
old  <	dq string_Onsdag#>
new  < setlocale$13:>

634:
old  <	; Initializer Pointer string_Torsdag#>
new  <	; UnsignedMultiply Â£temporary379 Â£temporary378 16>

635:
old  <	dq string_Torsdag#>
new  <	xor rdx, rdx>

636:
old  <	; Initializer Pointer string_Fredag#>
new  <	mul qword [Array_16#]>

637:
old  <	dq string_Fredag#>
new  <>

638:
old  <	; Initializer Pointer string_Lordag#>
new  < setlocale$14:>

639:
old  <	dq string_Lordag#>
new  <	; BinaryAdd Â£temporary380 sArray Â£temporary379>

640:
old  <>
new  <	mov rsi, @1529$sArray>

641:
old  <section .data>
new  <	add rsi, rax>

643:
old  <string_Maj#:>
new  < setlocale$15:>

644:
old  <	; Initializer String Maj>
new  <	; Dereference Â£temporary377 -> Â£temporary380 Â£temporary380 0>

645:
old  <	db "Maj", 0>
new  <>

646:
old  <>
new  < setlocale$16:>

647:
old  <section .data>
new  <	; Parameter pointer Â£temporary377.name -> Â£temporary380 80>

648:
old  <>
new  <	mov rax, [rsi]>

649:
old  <string_Okt#:>
new  <	mov [rbp + 80], rax>

650:
old  <	; Initializer String Okt>
new  <>

651:
old  <	db "Okt", 0>
new  < setlocale$17:>

652:
old  <>
new  <	; Call strcmp 48 0>

653:
old  <section .data>
new  <	mov qword [rbp + 48], setlocale$18>

654:
old  <>
new  <	mov [rbp + 56], rbp>

655:
old  <@1527$swShortMonthList:>
new  <	add rbp, 48>

656:
old  <	; Initializer Pointer string_Jan#>
new  <	jmp strcmp>

657:
old  <	dq string_Jan#>
new  <>

658:
old  <	; Initializer Pointer string_Feb#>
new  < setlocale$18:>

659:
old  <	dq string_Feb#>
new  <	; PostCall 48>

660:
old  <	; Initializer Pointer string_Mar#>
new  <>

661:
old  <	dq string_Mar#>
new  < setlocale$19:>

662:
old  <	; Initializer Pointer string_Apr#>
new  <	; GetReturnValue Â£temporary381>

663:
old  <	dq string_Apr#>
new  <>

664:
old  <	; Initializer Pointer string_Maj#>
new  < setlocale$20:>

665:
old  <	dq string_Maj#>
new  <	; NotEqual 28 Â£temporary381 0>

666:
old  <	; Initializer Pointer string_Jun#>
new  <	cmp ebx, 0>

667:
old  <	dq string_Jun#>
new  <	jne setlocale$28>

668:
old  <	; Initializer Pointer string_Jul#>
new  <>

669:
old  <	dq string_Jul#>
new  < setlocale$21:>

670:
old  <	; Initializer Pointer string_Aug#>
new  <	; IntegralToIntegral Â£temporary384 index>

671:
old  <	dq string_Aug#>
new  <	mov eax, [rbp + 36]>

672:
old  <	; Initializer Pointer string_Sep#>
new  <	mov rbx, 4294967295>

673:
old  <	dq string_Sep#>
new  <	and rax, rbx>

674:
old  <	; Initializer Pointer string_Okt#>
new  <>

675:
old  <	dq string_Okt#>
new  < setlocale$22:>

676:
old  <	; Initializer Pointer string_Nov#>
new  <	; UnsignedMultiply Â£temporary385 Â£temporary384 16>

677:
old  <	dq string_Nov#>
new  <	xor rdx, rdx>

678:
old  <	; Initializer Pointer string_Dec#>
new  <	mul qword [Array_16#]>

679:
old  <	dq string_Dec#>
new  <>

680:
old  <>
new  < setlocale$23:>

681:
old  <section .data>
new  <	; BinaryAdd Â£temporary386 sArray Â£temporary385>

682:
old  <>
new  <	mov rsi, @1529$sArray>

683:
old  <string_Januari#:>
new  <	add rsi, rax>

684:
old  <	; Initializer String Januari>
new  <>

685:
old  <	db "Januari", 0>
new  < setlocale$24:>

686:
old  <>
new  <	; Dereference Â£temporary383 -> Â£temporary386 Â£temporary386 0>

687:
old  <section .data>
new  <>

688:
old  <>
new  < setlocale$25:>

689:
old  <string_Februari#:>
new  <	; Address Â£temporary387 Â£temporary383 -> Â£temporary386>

690:
old  <	; Initializer String Februari>
new  <>

691:
old  <	db "Februari", 0>
new  < setlocale$26:>

692:
old  <>
new  <	; Assign g_currStructPtr Â£temporary387>

693:
old  <section .data>
new  <	mov [@1531$g_currStructPtr], rsi>

695:
old  <string_Mars#:>
new  < setlocale$27:>

696:
old  <	; Initializer String Mars>
new  <	; Goto 30>

697:
old  <	db "Mars", 0>
new  <	jmp setlocale$30>

699:
old  <section .data>
new  < setlocale$28:>

700:
old  <>
new  <	; BinaryAdd index index 1>

701:
old  <string_Juni#:>
new  <	inc dword [rbp + 36]>

702:
old  <	; Initializer String Juni>
new  <>

703:
old  <	db "Juni", 0>
new  < setlocale$29:>

704:
old  <>
new  <	; Goto 9>

705:
old  <section .data>
new  <	jmp setlocale$9>

707:
old  <string_Juli#:>
new  < setlocale$30:>

708:
old  <	; Initializer String Juli>
new  <	; Return oldName>

709:
old  <	db "Juli", 0>
new  <	mov rbx, [rbp + 40]>

710:
old  <>
new  <	mov rax, [rbp]>

711:
old  <section .data>
new  <	mov rdi, [rbp + 16]>

712:
old  <>
new  <	mov rbp, [rbp + 8]>

713:
old  <string_Augusit#:>
new  <	jmp rax>

714:
old  <	; Initializer String Augusit>
new  <>

715:
old  <	db "Augusit", 0>
new  < setlocale$31:>

716:
old  <>
new  <	; FunctionEnd setlocale>

717:
old  <section .data>
new  <>

718:
old  <>
new  <section .text>

719:
old  <string_Oktober#:>
new  <>

720:
old  <	; Initializer String Oktober>
new  < localeconv:>

721:
old  <	db "Oktober", 0>
new  <	; Equal 4 g_currStructPtr 0>

722:
old  <>
new  <	cmp qword [@1531$g_currStructPtr], 0>

723:
old  <section .data>
new  <	je localeconv$4>

725:
old  <@1528$swLongMonthList:>
new  < localeconv$1:>

726:
old  <	; Initializer Pointer string_Januari#>
new  <	; Dereference Â£temporary389 -> g_currStructPtr g_currStructPtr 0>

727:
old  <	dq string_Januari#>
new  <	mov rsi, [@1531$g_currStructPtr]>

728:
old  <	; Initializer Pointer string_Februari#>
new  <>

729:
old  <	dq string_Februari#>
new  < localeconv$2:>

730:
old  <	; Initializer Pointer string_Mars#>
new  <	; Assign Â£temporary390 Â£temporary389 -> g_currStructPtr>

731:
old  <	dq string_Mars#>
new  <	mov rbx, [rsi + 8]>

732:
old  <	; Initializer Pointer string_April#>
new  <>

733:
old  <	dq string_April#>
new  < localeconv$3:>

734:
old  <	; Initializer Pointer string_Maj#>
new  <	; Goto 5>

735:
old  <	dq string_Maj#>
new  <	jmp localeconv$5>

736:
old  <	; Initializer Pointer string_Juni#>
new  <>

737:
old  <	dq string_Juni#>
new  < localeconv$4:>

738:
old  <	; Initializer Pointer string_Juli#>
new  <	; Assign Â£temporary390 0>

739:
old  <	dq string_Juli#>
new  <	mov rbx, 0>

740:
old  <	; Initializer Pointer string_Augusit#>
new  <>

741:
old  <	dq string_Augusit#>
new  < localeconv$5:>

742:
old  <	; Initializer Pointer string_September#>
new  <	; Return Â£temporary390>

743:
old  <	dq string_September#>
new  <	mov rax, [rbp]>

744:
old  <	; Initializer Pointer string_Oktober#>
new  <	mov rdi, [rbp + 16]>

745:
old  <	dq string_Oktober#>
new  <	mov rbp, [rbp + 8]>

746:
old  <	; Initializer Pointer string_November#>
new  <	jmp rax>

747:
old  <	dq string_November#>
new  <>

748:
old  <	; Initializer Pointer string_December#>
new  < localeconv$6:>

749:
old  <	dq string_December#>
new  <	; FunctionEnd localeconv>

78:
old  <	; SignedDivide Â£temporary390 power faculty>
new  <	; SignedDivide Â£temporary391 power faculty>

94:
old  <	; BinaryAdd Â£temporary391 sum term>
new  <	; BinaryAdd Â£temporary392 sum term>

110:
old  <	; SignedMultiply Â£temporary392 power x>
new  <	; SignedMultiply Â£temporary393 power x>

138:
old  <	; SignedMultiply Â£temporary394 faculty Â£temporary393>
new  <	; SignedMultiply Â£temporary395 faculty Â£temporary394>

170:
old  <	; GetReturnValue Â£temporary395>
new  <	; GetReturnValue Â£temporary396>

177:
old  <	; SignedGreaterThanEqual 8 Â£temporary395 0.000000001>
new  <	; SignedGreaterThanEqual 8 Â£temporary396 0.000000001>

199:
old  <float8$2.7182818284590452353602874#:>
new  <float8$2.71#:>

200:
old  <	; Initializer Double 2.7182818284590452353602874>
new  <	; Initializer Double 2.71>

201:
old  <	dq 2.7182818284590452353602874>
new  <	dq 2.71>

205:
old  <float8$0.3678794411714423215955237798#:>
new  <float8$0.3690036900369003690036900369#:>

206:
old  <	; Initializer Double 0.3678794411714423215955237798>
new  <	; Initializer Double 0.3690036900369003690036900369>

207:
old  <	dq 0.3678794411714423215955237798>
new  <	dq 0.3690036900369003690036900369>

271:
old  <	; PushFloat 2.7182818284590452353602874>
new  <	; PushFloat 2.71>

272:
old  <	fld qword [float8$2.7182818284590452353602874#]>
new  <	fld qword [float8$2.71#]>

275:
old  <	; SignedDivide Â£temporary401 x 2.7182818284590452353602874>
new  <	; SignedDivide Â£temporary402 x 2.71>

295:
old  <	; PushFloat 0.3678794411714423215955237798>
new  <	; PushFloat 0.3690036900369003690036900369>

296:
old  <	fld qword [float8$0.3678794411714423215955237798#]>
new  <	fld qword [float8$0.3690036900369003690036900369#]>

299:
old  <	; SignedGreaterThanEqual 28 x 0.3678794411714423215955237798>
new  <	; SignedGreaterThanEqual 28 x 0.3690036900369003690036900369>

310:
old  <	; PushFloat 0.3678794411714423215955237798>
new  <	; PushFloat 0.3690036900369003690036900369>

311:
old  <	fld qword [float8$0.3678794411714423215955237798#]>
new  <	fld qword [float8$0.3690036900369003690036900369#]>

314:
old  <	; SignedGreaterThanEqual 28 x 0.3678794411714423215955237798>
new  <	; SignedGreaterThanEqual 28 x 0.3690036900369003690036900369>

325:
old  <	; PushFloat 2.7182818284590452353602874>
new  <	; PushFloat 2.71>

326:
old  <	fld qword [float8$2.7182818284590452353602874#]>
new  <	fld qword [float8$2.71#]>

329:
old  <	; SignedMultiply Â£temporary405 x 2.7182818284590452353602874>
new  <	; SignedMultiply Â£temporary406 x 2.71>

377:
old  <	; BinarySubtract Â£temporary407 x 1>
new  <	; BinarySubtract Â£temporary408 x 1>

401:
old  <	; SignedMultiply Â£temporary408 sign power>
new  <	; SignedMultiply Â£temporary409 sign power>

429:
old  <	; SignedDivide Â£temporary410 Â£temporary408 Â£temporary409>
new  <	; SignedDivide Â£temporary411 Â£temporary409 Â£temporary410>

445:
old  <	; BinaryAdd Â£temporary411 sum term>
new  <	; BinaryAdd Â£temporary412 sum term>

461:
old  <	; SignedMultiply Â£temporary412 power x_minus_1>
new  <	; SignedMultiply Â£temporary413 power x_minus_1>

477:
old  <	; SignedMultiply Â£temporary413 sign -1.0>
new  <	; SignedMultiply Â£temporary414 sign -1.0>

509:
old  <	; GetReturnValue Â£temporary414>
new  <	; GetReturnValue Â£temporary415>

516:
old  <	; SignedGreaterThanEqual 40 Â£temporary414 0.000000001>
new  <	; SignedGreaterThanEqual 40 Â£temporary415 0.000000001>

527:
old  <	; IntegralToFloating Â£temporary416 n>
new  <	; IntegralToFloating Â£temporary417 n>

531:
old  <	; BinaryAdd Â£temporary417 sum Â£temporary416>
new  <	; BinaryAdd Â£temporary418 sum Â£temporary417>

535:
old  <	; Return Â£temporary417>
new  <	; Return Â£temporary418>

561:
old  <float8$2.3025850929940456840179914#:>
new  <float8$2.30#:>

562:
old  <	; Initializer Double 2.3025850929940456840179914>
new  <	; Initializer Double 2.30>

563:
old  <	dq 2.3025850929940456840179914>
new  <	dq 2.30>

589:
old  <	; GetReturnValue Â£temporary419>
new  <	; GetReturnValue Â£temporary420>

592:
old  <	; PushFloat 2.3025850929940456840179914>
new  <	; PushFloat 2.30>

593:
old  <	fld qword [float8$2.3025850929940456840179914#]>
new  <	fld qword [float8$2.30#]>

596:
old  <	; SignedDivide Â£temporary420 Â£temporary419 2.3025850929940456840179914>
new  <	; SignedDivide Â£temporary421 Â£temporary420 2.30>

600:
old  <	; Return Â£temporary420>
new  <	; Return Â£temporary421>

671:
old  <	; GetReturnValue Â£temporary423>
new  <	; GetReturnValue Â£temporary424>

674:
old  <	; SignedMultiply Â£temporary424 y Â£temporary423>
new  <	; SignedMultiply Â£temporary425 y Â£temporary424>

678:
old  <	; Parameter double Â£temporary424 64>
new  <	; Parameter double Â£temporary425 64>

692:
old  <	; GetReturnValue Â£temporary425>
new  <	; GetReturnValue Â£temporary426>

695:
old  <	; Return Â£temporary425>
new  <	; Return Â£temporary426>

820:
old  <	; GetReturnValue Â£temporary433>
new  <	; GetReturnValue Â£temporary434>

848:
old  <	; GetReturnValue Â£temporary434>
new  <	; GetReturnValue Â£temporary435>

851:
old  <	; NotEqual 85 Â£temporary433 Â£temporary434>
new  <	; NotEqual 85 Â£temporary434 Â£temporary435>

862:
old  <	; FloatingToIntegral Â£temporary437 y>
new  <	; FloatingToIntegral Â£temporary438 y>

867:
old  <	; Assign long_y Â£temporary437>
new  <	; Assign long_y Â£temporary438>

871:
old  <	; SignedModulo Â£temporary438 long_y 2>
new  <	; SignedModulo Â£temporary439 long_y 2>

877:
old  <	; NotEqual 69 Â£temporary438 0>
new  <	; NotEqual 69 Â£temporary439 0>

897:
old  <	; UnarySubtract Â£temporary440 x>
new  <	; UnarySubtract Â£temporary441 x>

901:
old  <	; Parameter double Â£temporary440 72>
new  <	; Parameter double Â£temporary441 72>

918:
old  <	; GetReturnValue Â£temporary441>
new  <	; GetReturnValue Â£temporary442>

921:
old  <	; SignedMultiply Â£temporary442 y Â£temporary441>
new  <	; SignedMultiply Â£temporary443 y Â£temporary442>

925:
old  <	; Parameter double Â£temporary442 72>
new  <	; Parameter double Â£temporary443 72>

939:
old  <	; GetReturnValue Â£temporary443>
new  <	; GetReturnValue Â£temporary444>

942:
old  <	; Return Â£temporary443>
new  <	; Return Â£temporary444>

964:
old  <	; UnarySubtract Â£temporary444 x>
new  <	; UnarySubtract Â£temporary445 x>

968:
old  <	; Parameter double Â£temporary444 72>
new  <	; Parameter double Â£temporary445 72>

985:
old  <	; GetReturnValue Â£temporary445>
new  <	; GetReturnValue Â£temporary446>

988:
old  <	; SignedMultiply Â£temporary446 y Â£temporary445>
new  <	; SignedMultiply Â£temporary447 y Â£temporary446>

992:
old  <	; Parameter double Â£temporary446 72>
new  <	; Parameter double Â£temporary447 72>

1006:
old  <	; GetReturnValue Â£temporary447>
new  <	; GetReturnValue Â£temporary448>

1009:
old  <	; UnarySubtract Â£temporary448 Â£temporary447>
new  <	; UnarySubtract Â£temporary449 Â£temporary448>

1013:
old  <	; Return Â£temporary448>
new  <	; Return Â£temporary449>

1062:
old  <	; IntegralToFloating Â£temporary457 n>
new  <	; IntegralToFloating Â£temporary458 n>

1066:
old  <	; Parameter double Â£temporary457 68>
new  <	; Parameter double Â£temporary458 68>

1083:
old  <	; GetReturnValue Â£temporary458>
new  <	; GetReturnValue Â£temporary459>

1086:
old  <	; SignedMultiply Â£temporary459 x Â£temporary458>
new  <	; SignedMultiply Â£temporary460 x Â£temporary459>

1090:
old  <	; Return Â£temporary459>
new  <	; Return Â£temporary460>

1113:
old  < @1669$log2:>
new  < @1665$log2:>

1116:
old  < @1669$log2$1:>
new  < @1665$log2$1:>

1120:
old  < @1669$log2$2:>
new  < @1665$log2$2:>

1124:
old  < @1669$log2$3:>
new  < @1665$log2$3:>

1126:
old  <	mov qword [rbp + 32], @1669$log2$4>
new  <	mov qword [rbp + 32], @1665$log2$4>

1131:
old  < @1669$log2$4:>
new  < @1665$log2$4:>

1134:
old  < @1669$log2$5:>
new  < @1665$log2$5:>

1135:
old  <	; GetReturnValue Â£temporary462>
new  <	; GetReturnValue Â£temporary463>

1137:
old  < @1669$log2$6:>
new  < @1665$log2$6:>

1141:
old  < @1669$log2$7:>
new  < @1665$log2$7:>

1142:
old  <	; SignedDivide Â£temporary463 Â£temporary462 0.6931471805599453094172321>
new  <	; SignedDivide Â£temporary464 Â£temporary463 0.6931471805599453094172321>

1145:
old  < @1669$log2$8:>
new  < @1665$log2$8:>

1146:
old  <	; FloatingToIntegral Â£temporary464 Â£temporary463>
new  <	; FloatingToIntegral Â£temporary465 Â£temporary464>

1150:
old  < @1669$log2$9:>
new  < @1665$log2$9:>

1151:
old  <	; Return Â£temporary464>
new  <	; Return Â£temporary465>

1157:
old  < @1669$log2$10:>
new  < @1665$log2$10:>

1202:
old  <	; GetReturnValue Â£temporary467>
new  <	; GetReturnValue Â£temporary468>

1205:
old  <	; Parameter double Â£temporary467 64>
new  <	; Parameter double Â£temporary468 64>

1213:
old  <	jmp @1669$log2>
new  <	jmp @1665$log2>

1219:
old  <	; GetReturnValue Â£temporary468>
new  <	; GetReturnValue Â£temporary469>

1222:
old  <	; IntegralToIntegral Â£temporary469 Â£temporary468>
new  <	; IntegralToIntegral Â£temporary470 Â£temporary469>

1225:
old  <	; Assign exponent Â£temporary469>
new  <	; Assign exponent Â£temporary470>

1240:
old  <	; IntegralToFloating Â£temporary470 exponent>
new  <	; IntegralToFloating Â£temporary471 exponent>

1244:
old  <	; Parameter double Â£temporary470 76>
new  <	; Parameter double Â£temporary471 76>

1258:
old  <	; GetReturnValue Â£temporary471>
new  <	; GetReturnValue Â£temporary472>

1265:
old  <	; SignedGreaterThanEqual 27 Â£temporary471 x>
new  <	; SignedGreaterThanEqual 27 Â£temporary472 x>

1281:
old  <	; Dereference Â£temporary475 -> p p 0>
new  <	; Dereference Â£temporary476 -> p p 0>

1285:
old  <	; Assign Â£temporary475 -> p exponent>
new  <	; Assign Â£temporary476 -> p exponent>

1306:
old  <	; IntegralToFloating Â£temporary476 exponent>
new  <	; IntegralToFloating Â£temporary477 exponent>

1310:
old  <	; Parameter double Â£temporary476 76>
new  <	; Parameter double Â£temporary477 76>

1327:
old  <	; GetReturnValue Â£temporary477>
new  <	; GetReturnValue Â£temporary478>

1330:
old  <	; SignedDivide Â£temporary478 x Â£temporary477>
new  <	; SignedDivide Â£temporary479 x Â£temporary478>

1334:
old  <	; Return Â£temporary478>
new  <	; Return Â£temporary479>

1346:
old  <	; Dereference Â£temporary480 -> p p 0>
new  <	; Dereference Â£temporary481 -> p p 0>

1350:
old  <	; Assign Â£temporary480 -> p 0>
new  <	; Assign Â£temporary481 -> p 0>

1413:
old  <	; SignedDivide Â£temporary488 x root_i>
new  <	; SignedDivide Â£temporary489 x root_i>

1417:
old  <	; BinaryAdd Â£temporary489 root_i Â£temporary488>
new  <	; BinaryAdd Â£temporary490 root_i Â£temporary489>

1425:
old  <	; SignedDivide Â£temporary490 Â£temporary489 2>
new  <	; SignedDivide Â£temporary491 Â£temporary490 2>

1447:
old  <	; BinarySubtract Â£temporary491 root_i_plus_1 root_i>
new  <	; BinarySubtract Â£temporary492 root_i_plus_1 root_i>

1451:
old  <	; Parameter double Â£temporary491 72>
new  <	; Parameter double Â£temporary492 72>

1465:
old  <	; GetReturnValue Â£temporary492>
new  <	; GetReturnValue Â£temporary493>

1472:
old  <	; SignedGreaterThanEqual 5 Â£temporary492 0.000000001>
new  <	; SignedGreaterThanEqual 5 Â£temporary493 0.000000001>

1531:
old  <	; GetReturnValue Â£temporary495>
new  <	; GetReturnValue Â£temporary496>

1542:
old  <	; FloatingToIntegral Â£temporary496 abs_x>
new  <	; FloatingToIntegral Â£temporary497 abs_x>

1547:
old  <	; IntegralToFloating Â£temporary497 Â£temporary496>
new  <	; IntegralToFloating Â£temporary498 Â£temporary497>

1564:
old  <	; BinarySubtract Â£temporary498 abs_x integral>
new  <	; BinarySubtract Â£temporary499 abs_x integral>

1577:
old  <	; Dereference Â£temporary500 -> p p 0>
new  <	; Dereference Â£temporary501 -> p p 0>

1611:
old  <	; UnarySubtract Â£temporary502 integral>
new  <	; UnarySubtract Â£temporary503 integral>

1615:
old  <	; PopFloat Â£temporary500 -> p>
new  <	; PopFloat Â£temporary501 -> p>

1649:
old  <	; UnarySubtract Â£temporary505 fractional>
new  <	; UnarySubtract Â£temporary506 fractional>

1653:
old  <	; Return Â£temporary506>
new  <	; Return Â£temporary507>

1699:
old  <	; SignedDivide Â£temporary509 x y>
new  <	; SignedDivide Â£temporary510 x y>

1703:
old  <	; FloatingToIntegral Â£temporary510 Â£temporary509>
new  <	; FloatingToIntegral Â£temporary511 Â£temporary510>

1708:
old  <	; IntegralToFloating Â£temporary511 Â£temporary510>
new  <	; IntegralToFloating Â£temporary512 Â£temporary511>

1713:
old  <	; SignedMultiply Â£temporary512 y Â£temporary511>
new  <	; SignedMultiply Â£temporary513 y Â£temporary512>

1717:
old  <	; BinarySubtract Â£temporary513 x Â£temporary512>
new  <	; BinarySubtract Â£temporary514 x Â£temporary513>

1721:
old  <	; Parameter double Â£temporary513 64>
new  <	; Parameter double Â£temporary514 64>

1735:
old  <	; GetReturnValue Â£temporary514>
new  <	; GetReturnValue Â£temporary515>

1772:
old  <	; UnarySubtract Â£temporary516 remainder>
new  <	; UnarySubtract Â£temporary517 remainder>

1776:
old  <	; Return Â£temporary517>
new  <	; Return Â£temporary518>

1836:
old  <	; GetReturnValue Â£temporary519>
new  <	; GetReturnValue Â£temporary520>

1843:
old  <	; SignedLessThanEqual 17 Â£temporary519 6.2831853071795864769252866>
new  <	; SignedLessThanEqual 17 Â£temporary520 6.2831853071795864769252866>

1879:
old  <	; GetReturnValue Â£temporary521>
new  <	; GetReturnValue Â£temporary522>

1934:
old  <	; SignedMultiply Â£temporary522 sign power>
new  <	; SignedMultiply Â£temporary523 sign power>

1942:
old  <	; SignedDivide Â£temporary523 Â£temporary522 faculty>
new  <	; SignedDivide Â£temporary524 Â£temporary523 faculty>

1958:
old  <	; BinaryAdd Â£temporary524 sum term>
new  <	; BinaryAdd Â£temporary525 sum term>

1974:
old  <	; SignedMultiply Â£temporary525 sign -1>
new  <	; SignedMultiply Â£temporary526 sign -1>

1994:
old  <	; SignedMultiply Â£temporary526 x x>
new  <	; SignedMultiply Â£temporary527 x x>

1998:
old  <	; SignedMultiply Â£temporary527 power Â£temporary526>
new  <	; SignedMultiply Â£temporary528 power Â£temporary527>

2042:
old  <	; SignedMultiply Â£temporary530 Â£temporary528 Â£temporary529>
new  <	; SignedMultiply Â£temporary531 Â£temporary529 Â£temporary530>

2046:
old  <	; SignedMultiply Â£temporary531 faculty Â£temporary530>
new  <	; SignedMultiply Â£temporary532 faculty Â£temporary531>

2078:
old  <	; GetReturnValue Â£temporary532>
new  <	; GetReturnValue Â£temporary533>

2085:
old  <	; SignedGreaterThanEqual 27 Â£temporary532 0.000000001>
new  <	; SignedGreaterThanEqual 27 Â£temporary533 0.000000001>

2129:
old  <	; GetReturnValue Â£temporary538>
new  <	; GetReturnValue Â£temporary539>

2136:
old  <	; SignedLessThanEqual 17 Â£temporary538 6.2831853071795864769252866>
new  <	; SignedLessThanEqual 17 Â£temporary539 6.2831853071795864769252866>

2172:
old  <	; GetReturnValue Â£temporary540>
new  <	; GetReturnValue Â£temporary541>

2227:
old  <	; SignedMultiply Â£temporary541 sign power>
new  <	; SignedMultiply Â£temporary542 sign power>

2235:
old  <	; SignedDivide Â£temporary542 Â£temporary541 faculty>
new  <	; SignedDivide Â£temporary543 Â£temporary542 faculty>

2251:
old  <	; BinaryAdd Â£temporary543 sum term>
new  <	; BinaryAdd Â£temporary544 sum term>

2267:
old  <	; SignedMultiply Â£temporary544 sign -1>
new  <	; SignedMultiply Â£temporary545 sign -1>

2287:
old  <	; SignedMultiply Â£temporary545 x x>
new  <	; SignedMultiply Â£temporary546 x x>

2291:
old  <	; SignedMultiply Â£temporary546 power Â£temporary545>
new  <	; SignedMultiply Â£temporary547 power Â£temporary546>

2335:
old  <	; SignedMultiply Â£temporary549 Â£temporary547 Â£temporary548>
new  <	; SignedMultiply Â£temporary550 Â£temporary548 Â£temporary549>

2339:
old  <	; SignedMultiply Â£temporary550 faculty Â£temporary549>
new  <	; SignedMultiply Â£temporary551 faculty Â£temporary550>

2371:
old  <	; GetReturnValue Â£temporary551>
new  <	; GetReturnValue Â£temporary552>

2378:
old  <	; SignedGreaterThanEqual 27 Â£temporary551 0.000000001>
new  <	; SignedGreaterThanEqual 27 Â£temporary552 0.000000001>

2422:
old  <	; GetReturnValue Â£temporary557>
new  <	; GetReturnValue Â£temporary558>

2465:
old  <	; GetReturnValue Â£temporary559>
new  <	; GetReturnValue Â£temporary560>

2472:
old  <	; SignedDivide Â£temporary560 Â£temporary559 cos_of_x>
new  <	; SignedDivide Â£temporary561 Â£temporary560 cos_of_x>

2476:
old  <	; Return Â£temporary560>
new  <	; Return Â£temporary561>

2557:
old  <	; UnarySubtract Â£temporary565 x>
new  <	; UnarySubtract Â£temporary566 x>

2561:
old  <	; Parameter double Â£temporary565 56>
new  <	; Parameter double Â£temporary566 56>

2575:
old  <	; GetReturnValue Â£temporary566>
new  <	; GetReturnValue Â£temporary567>

2578:
old  <	; UnarySubtract Â£temporary567 Â£temporary566>
new  <	; UnarySubtract Â£temporary568 Â£temporary567>

2582:
old  <	; Return Â£temporary567>
new  <	; Return Â£temporary568>

2627:
old  <	; SignedMultiply Â£temporary569 x x>
new  <	; SignedMultiply Â£temporary570 x x>

2631:
old  <	; BinarySubtract Â£temporary570 1 Â£temporary569>
new  <	; BinarySubtract Â£temporary571 1 Â£temporary570>

2635:
old  <	; Parameter double Â£temporary570 56>
new  <	; Parameter double Â£temporary571 56>

2652:
old  <	; GetReturnValue Â£temporary571>
new  <	; GetReturnValue Â£temporary572>

2655:
old  <	; SignedDivide Â£temporary572 x Â£temporary571>
new  <	; SignedDivide Â£temporary573 x Â£temporary572>

2659:
old  <	; Parameter double Â£temporary572 56>
new  <	; Parameter double Â£temporary573 56>

2673:
old  <	; GetReturnValue Â£temporary573>
new  <	; GetReturnValue Â£temporary574>

2676:
old  <	; Return Â£temporary573>
new  <	; Return Â£temporary574>

2762:
old  <	; UnarySubtract Â£temporary579 x>
new  <	; UnarySubtract Â£temporary580 x>

2766:
old  <	; Parameter double Â£temporary579 56>
new  <	; Parameter double Â£temporary580 56>

2783:
old  <	; GetReturnValue Â£temporary580>
new  <	; GetReturnValue Â£temporary581>

2786:
old  <	; BinarySubtract Â£temporary581 3.1415926535897932384626433 Â£temporary580>
new  <	; BinarySubtract Â£temporary582 3.1415926535897932384626433 Â£temporary581>

2790:
old  <	; Return Â£temporary581>
new  <	; Return Â£temporary582>

2830:
old  <	; SignedMultiply Â£temporary583 x x>
new  <	; SignedMultiply Â£temporary584 x x>

2834:
old  <	; BinarySubtract Â£temporary584 1 Â£temporary583>
new  <	; BinarySubtract Â£temporary585 1 Â£temporary584>

2838:
old  <	; Parameter double Â£temporary584 56>
new  <	; Parameter double Â£temporary585 56>

2852:
old  <	; GetReturnValue Â£temporary585>
new  <	; GetReturnValue Â£temporary586>

2859:
old  <	; SignedDivide Â£temporary586 Â£temporary585 x>
new  <	; SignedDivide Â£temporary587 Â£temporary586 x>

2863:
old  <	; Parameter double Â£temporary586 56>
new  <	; Parameter double Â£temporary587 56>

2877:
old  <	; GetReturnValue Â£temporary587>
new  <	; GetReturnValue Â£temporary588>

2880:
old  <	; Return Â£temporary587>
new  <	; Return Â£temporary588>

2935:
old  <	; UnarySubtract Â£temporary592 x>
new  <	; UnarySubtract Â£temporary593 x>

2939:
old  <	; Parameter double Â£temporary592 56>
new  <	; Parameter double Â£temporary593 56>

2953:
old  <	; GetReturnValue Â£temporary593>
new  <	; GetReturnValue Â£temporary594>

2956:
old  <	; UnarySubtract Â£temporary594 Â£temporary593>
new  <	; UnarySubtract Â£temporary595 Â£temporary594>

2960:
old  <	; Return Â£temporary594>
new  <	; Return Â£temporary595>

2998:
old  <	; SignedDivide Â£temporary596 1 x>
new  <	; SignedDivide Â£temporary597 1 x>

3002:
old  <	; Parameter double Â£temporary596 56>
new  <	; Parameter double Â£temporary597 56>

3019:
old  <	; GetReturnValue Â£temporary597>
new  <	; GetReturnValue Â£temporary598>

3022:
old  <	; BinarySubtract Â£temporary598 1.57079632679489661923132165 Â£temporary597>
new  <	; BinarySubtract Â£temporary599 1.57079632679489661923132165 Â£temporary598>

3026:
old  <	; Return Â£temporary598>
new  <	; Return Â£temporary599>

3081:
old  <	; SignedMultiply Â£temporary600 x x>
new  <	; SignedMultiply Â£temporary601 x x>

3085:
old  <	; BinaryAdd Â£temporary601 1 Â£temporary600>
new  <	; BinaryAdd Â£temporary602 1 Â£temporary601>

3089:
old  <	; Parameter double Â£temporary601 56>
new  <	; Parameter double Â£temporary602 56>

3107:
old  <	; GetReturnValue Â£temporary602>
new  <	; GetReturnValue Â£temporary603>

3110:
old  <	; BinaryAdd Â£temporary603 1 Â£temporary602>
new  <	; BinaryAdd Â£temporary604 1 Â£temporary603>

3114:
old  <	; SignedDivide Â£temporary604 x Â£temporary603>
new  <	; SignedDivide Â£temporary605 x Â£temporary604>

3118:
old  <	; Parameter double Â£temporary604 56>
new  <	; Parameter double Â£temporary605 56>

3135:
old  <	; GetReturnValue Â£temporary605>
new  <	; GetReturnValue Â£temporary606>

3138:
old  <	; SignedMultiply Â£temporary606 2 Â£temporary605>
new  <	; SignedMultiply Â£temporary607 2 Â£temporary606>

3142:
old  <	; Return Â£temporary606>
new  <	; Return Â£temporary607>

3189:
old  <	; SignedMultiply Â£temporary607 sign product>
new  <	; SignedMultiply Â£temporary608 sign product>

3197:
old  <	; SignedDivide Â£temporary608 Â£temporary607 denominator>
new  <	; SignedDivide Â£temporary609 Â£temporary608 denominator>

3213:
old  <	; BinaryAdd Â£temporary609 sum term>
new  <	; BinaryAdd Â£temporary610 sum term>

3225:
old  <	; UnarySubtract Â£temporary610 sign>
new  <	; UnarySubtract Â£temporary611 sign>

3245:
old  <	; SignedMultiply Â£temporary611 x x>
new  <	; SignedMultiply Â£temporary612 x x>

3249:
old  <	; SignedMultiply Â£temporary612 product Â£temporary611>
new  <	; SignedMultiply Â£temporary613 product Â£temporary612>

3265:
old  <	; BinaryAdd Â£temporary613 denominator 2>
new  <	; BinaryAdd Â£temporary614 denominator 2>

3297:
old  <	; GetReturnValue Â£temporary614>
new  <	; GetReturnValue Â£temporary615>

3304:
old  <	; SignedGreaterThanEqual 59 Â£temporary614 0.000000001>
new  <	; SignedGreaterThanEqual 59 Â£temporary615 0.000000001>

3365:
old  <	; SignedDivide Â£temporary622 x y>
new  <	; SignedDivide Â£temporary623 x y>

3369:
old  <	; Parameter double Â£temporary622 64>
new  <	; Parameter double Â£temporary623 64>

3383:
old  <	; GetReturnValue Â£temporary623>
new  <	; GetReturnValue Â£temporary624>

3386:
old  <	; Return Â£temporary623>
new  <	; Return Â£temporary624>

3439:
old  <	; SignedDivide Â£temporary627 x y>
new  <	; SignedDivide Â£temporary628 x y>

3443:
old  <	; Parameter double Â£temporary627 64>
new  <	; Parameter double Â£temporary628 64>

3460:
old  <	; GetReturnValue Â£temporary628>
new  <	; GetReturnValue Â£temporary629>

3463:
old  <	; BinaryAdd Â£temporary629 3.1415926535897932384626433 Â£temporary628>
new  <	; BinaryAdd Â£temporary630 3.1415926535897932384626433 Â£temporary629>

3467:
old  <	; Return Â£temporary629>
new  <	; Return Â£temporary630>

3520:
old  <	; SignedDivide Â£temporary633 x y>
new  <	; SignedDivide Â£temporary634 x y>

3524:
old  <	; Parameter double Â£temporary633 64>
new  <	; Parameter double Â£temporary634 64>

3541:
old  <	; GetReturnValue Â£temporary634>
new  <	; GetReturnValue Â£temporary635>

3544:
old  <	; BinaryAdd Â£temporary635 -3.1415926535897932384626433 Â£temporary634>
new  <	; BinaryAdd Â£temporary636 -3.1415926535897932384626433 Â£temporary635>

3548:
old  <	; Return Â£temporary635>
new  <	; Return Â£temporary636>

3678:
old  <	; GetReturnValue Â£temporary645>
new  <	; GetReturnValue Â£temporary646>

3689:
old  <	; UnarySubtract Â£temporary646 x>
new  <	; UnarySubtract Â£temporary647 x>

3693:
old  <	; Parameter double Â£temporary646 56>
new  <	; Parameter double Â£temporary647 56>

3710:
old  <	; GetReturnValue Â£temporary647>
new  <	; GetReturnValue Â£temporary648>

3713:
old  <	; BinarySubtract Â£temporary648 Â£temporary645 Â£temporary647>
new  <	; BinarySubtract Â£temporary649 Â£temporary646 Â£temporary648>

3721:
old  <	; SignedDivide Â£temporary649 Â£temporary648 2>
new  <	; SignedDivide Â£temporary650 Â£temporary649 2>

3725:
old  <	; Return Â£temporary649>
new  <	; Return Â£temporary650>

3758:
old  <	; GetReturnValue Â£temporary652>
new  <	; GetReturnValue Â£temporary653>

3769:
old  <	; UnarySubtract Â£temporary653 x>
new  <	; UnarySubtract Â£temporary654 x>

3773:
old  <	; Parameter double Â£temporary653 56>
new  <	; Parameter double Â£temporary654 56>

3790:
old  <	; GetReturnValue Â£temporary654>
new  <	; GetReturnValue Â£temporary655>

3793:
old  <	; BinaryAdd Â£temporary655 Â£temporary652 Â£temporary654>
new  <	; BinaryAdd Â£temporary656 Â£temporary653 Â£temporary655>

3801:
old  <	; SignedDivide Â£temporary656 Â£temporary655 2>
new  <	; SignedDivide Â£temporary657 Â£temporary656 2>

3805:
old  <	; Return Â£temporary656>
new  <	; Return Â£temporary657>

3838:
old  <	; GetReturnValue Â£temporary659>
new  <	; GetReturnValue Â£temporary660>

3866:
old  <	; GetReturnValue Â£temporary660>
new  <	; GetReturnValue Â£temporary661>

3869:
old  <	; SignedDivide Â£temporary661 Â£temporary659 Â£temporary660>
new  <	; SignedDivide Â£temporary662 Â£temporary660 Â£temporary661>

3873:
old  <	; Return Â£temporary661>
new  <	; Return Â£temporary662>

3907:
old  <	; UnarySubtract Â£temporary665 x>
new  <	; UnarySubtract Â£temporary666 x>

3911:
old  <	; Parameter double Â£temporary665 56>
new  <	; Parameter double Â£temporary666 56>

3925:
old  <	; GetReturnValue Â£temporary666>
new  <	; GetReturnValue Â£temporary667>

3928:
old  <	; UnarySubtract Â£temporary667 Â£temporary666>
new  <	; UnarySubtract Â£temporary668 Â£temporary667>

3932:
old  <	; Return Â£temporary667>
new  <	; Return Â£temporary668>

3943:
old  <	; FloatingToIntegral Â£temporary668 x>
new  <	; FloatingToIntegral Â£temporary669 x>

3948:
old  <	; IntegralToFloating Â£temporary669 Â£temporary668>
new  <	; IntegralToFloating Â£temporary670 Â£temporary669>

3953:
old  <	; Return Â£temporary669>
new  <	; Return Â£temporary670>

3993:
old  <	; UnarySubtract Â£temporary672 x>
new  <	; UnarySubtract Â£temporary673 x>

3997:
old  <	; Parameter double Â£temporary672 56>
new  <	; Parameter double Â£temporary673 56>

4011:
old  <	; GetReturnValue Â£temporary673>
new  <	; GetReturnValue Â£temporary674>

4014:
old  <	; UnarySubtract Â£temporary674 Â£temporary673>
new  <	; UnarySubtract Â£temporary675 Â£temporary674>

4018:
old  <	; Return Â£temporary674>
new  <	; Return Â£temporary675>

4033:
old  <	; BinaryAdd Â£temporary675 x 0.999999999999>
new  <	; BinaryAdd Â£temporary676 x 0.999999999999>

4037:
old  <	; FloatingToIntegral Â£temporary676 Â£temporary675>
new  <	; FloatingToIntegral Â£temporary677 Â£temporary676>

4042:
old  <	; IntegralToFloating Â£temporary677 Â£temporary676>
new  <	; IntegralToFloating Â£temporary678 Â£temporary677>

4047:
old  <	; Return Â£temporary677>
new  <	; Return Â£temporary678>

4082:
old  <	; BinarySubtract Â£temporary680 x 0.5>
new  <	; BinarySubtract Â£temporary681 x 0.5>

4101:
old  <	; BinaryAdd Â£temporary681 x 0.5>
new  <	; BinaryAdd Â£temporary682 x 0.5>

4105:
old  <	; FloatingToIntegral Â£temporary683 Â£temporary682>
new  <	; FloatingToIntegral Â£temporary684 Â£temporary683>

4110:
old  <	; IntegralToFloating Â£temporary684 Â£temporary683>
new  <	; IntegralToFloating Â£temporary685 Â£temporary684>

4115:
old  <	; Return Â£temporary684>
new  <	; Return Â£temporary685>

4146:
old  <	; UnarySubtract Â£temporary686 x>
new  <	; UnarySubtract Â£temporary687 x>

4161:
old  <	; Return Â£temporary687>
new  <	; Return Â£temporary688>

10:
old  <	; InspectRegister Â£temporary688 rbp>
new  <	; InspectRegister Â£temporary689 rbp>

13:
old  <	; Assign rbp_pointer Â£temporary688>
new  <	; Assign rbp_pointer Â£temporary689>

17:
old  <	; Dereference Â£temporary689 -> buf buf 0>
new  <	; Dereference Â£temporary690 -> buf buf 0>

21:
old  <	; Dereference Â£temporary690 -> rbp_pointer rbp_pointer 0>
new  <	; Dereference Â£temporary691 -> rbp_pointer rbp_pointer 0>

25:
old  <	; Assign Â£temporary689 -> buf Â£temporary690 -> rbp_pointer>
new  <	; Assign Â£temporary690 -> buf Â£temporary691 -> rbp_pointer>

30:
old  <	; Dereference Â£temporary691 -> buf buf 0>
new  <	; Dereference Â£temporary692 -> buf buf 0>

34:
old  <	; Dereference Â£temporary692 -> rbp_pointer rbp_pointer 0>
new  <	; Dereference Â£temporary693 -> rbp_pointer rbp_pointer 0>

38:
old  <	; Assign Â£temporary691 -> buf Â£temporary692 -> rbp_pointer>
new  <	; Assign Â£temporary692 -> buf Â£temporary693 -> rbp_pointer>

43:
old  <	; Dereference Â£temporary693 -> buf buf 0>
new  <	; Dereference Â£temporary694 -> buf buf 0>

47:
old  <	; Dereference Â£temporary694 -> rbp_pointer rbp_pointer 0>
new  <	; Dereference Â£temporary695 -> rbp_pointer rbp_pointer 0>

51:
old  <	; Assign Â£temporary693 -> buf Â£temporary694 -> rbp_pointer>
new  <	; Assign Â£temporary694 -> buf Â£temporary695 -> rbp_pointer>

73:
old  <	; Dereference Â£temporary697 -> buf buf 0>
new  <	; Dereference Â£temporary698 -> buf buf 0>

77:
old  <	; AssignRegister rcx Â£temporary697 -> buf>
new  <	; AssignRegister rcx Â£temporary698 -> buf>

81:
old  <	; Dereference Â£temporary699 -> buf buf 0>
new  <	; Dereference Â£temporary700 -> buf buf 0>

85:
old  <	; AssignRegister rdi Â£temporary699 -> buf>
new  <	; AssignRegister rdi Â£temporary700 -> buf>

89:
old  <	; Dereference Â£temporary701 -> buf buf 0>
new  <	; Dereference Â£temporary702 -> buf buf 0>

93:
old  <	; AssignRegister rbp Â£temporary701 -> buf>
new  <	; AssignRegister rbp Â£temporary702 -> buf>

147:
old  <	add rbp, 36>
new  <	mov rax, [rbp + 28]>

148:
old  <	mov rax, [rbp + 28]>
new  <	add rbp, 36>

88:
old  <@2198$EEXIST:>
new  <@2194$EEXIST:>

94:
old  <@2199$ENOENT:>
new  <@2195$ENOENT:>

100:
old  <@2200$EACCES:>
new  <@2196$EACCES:>

106:
old  <@2201$SEEK_SET:>
new  <@2197$SEEK_SET:>

112:
old  <@2202$SEEK_CUR:>
new  <@2198$SEEK_CUR:>

118:
old  <@2203$SEEK_END:>
new  <@2199$SEEK_END:>

124:
old  <@2204$READ:>
new  <@2200$READ:>

130:
old  <@2205$WRITE:>
new  <@2201$WRITE:>

136:
old  <@2206$READ_WRITE:>
new  <@2202$READ_WRITE:>

142:
old  < @2208$filecreate:>
new  < @2204$filecreate:>

146:
old  < @2208$filecreate$1:>
new  < @2204$filecreate$1:>

147:
old  <	; IntegralToIntegral Â£temporary710 name>
new  <	; IntegralToIntegral Â£temporary711 name>

150:
old  < @2208$filecreate$2:>
new  < @2204$filecreate$2:>

151:
old  <	; AssignRegister rdi Â£temporary710>
new  <	; AssignRegister rdi Â£temporary711>

153:
old  < @2208$filecreate$3:>
new  < @2204$filecreate$3:>

157:
old  < @2208$filecreate$4:>
new  < @2204$filecreate$4:>

161:
old  < @2208$filecreate$5:>
new  < @2204$filecreate$5:>

169:
old  < @2208$filecreate$6:>
new  < @2204$filecreate$6:>

187:
old  < @2212$fileopen:>
new  < @2208$fileopen:>

191:
old  < @2212$fileopen$1:>
new  < @2208$fileopen$1:>

192:
old  <	; IntegralToIntegral Â£temporary714 name>
new  <	; IntegralToIntegral Â£temporary715 name>

195:
old  < @2212$fileopen$2:>
new  < @2208$fileopen$2:>

196:
old  <	; AssignRegister rdi Â£temporary714>
new  <	; AssignRegister rdi Â£temporary715>

198:
old  < @2212$fileopen$3:>
new  < @2208$fileopen$3:>

199:
old  <	; IntegralToIntegral Â£temporary716 mode>
new  <	; IntegralToIntegral Â£temporary717 mode>

204:
old  < @2212$fileopen$4:>
new  < @2208$fileopen$4:>

205:
old  <	; AssignRegister rsi Â£temporary716>
new  <	; AssignRegister rsi Â£temporary717>

207:
old  < @2212$fileopen$5:>
new  < @2208$fileopen$5:>

211:
old  < @2212$fileopen$6:>
new  < @2208$fileopen$6:>

212:
old  <	; InspectRegister Â£temporary717 rax>
new  <	; InspectRegister Â£temporary718 rax>

214:
old  < @2212$fileopen$7:>
new  < @2208$fileopen$7:>

215:
old  <	; IntegralToIntegral Â£temporary718 Â£temporary717>
new  <	; IntegralToIntegral Â£temporary719 Â£temporary718>

217:
old  < @2212$fileopen$8:>
new  < @2208$fileopen$8:>

218:
old  <	; Return Â£temporary718>
new  <	; Return Â£temporary719>

225:
old  < @2212$fileopen$9:>
new  < @2208$fileopen$9:>

246:
old  <	; IntegralToIntegral Â£temporary722 index>
new  <	; IntegralToIntegral Â£temporary723 index>

252:
old  <	; UnsignedMultiply Â£temporary723 Â£temporary722 41>
new  <	; UnsignedMultiply Â£temporary724 Â£temporary723 41>

257:
old  <	; BinaryAdd Â£temporary724 g_fileArray Â£temporary723>
new  <	; BinaryAdd Â£temporary725 g_fileArray Â£temporary724>

262:
old  <	; Dereference Â£temporary721 -> Â£temporary724 Â£temporary724 0>
new  <	; Dereference Â£temporary722 -> Â£temporary725 Â£temporary725 0>

265:
old  <	; NotEqual 20 Â£temporary721.open -> Â£temporary724 0>
new  <	; NotEqual 20 Â£temporary722.open -> Â£temporary725 0>

283:
old  <	; IntegralToIntegral Â£temporary728 index>
new  <	; IntegralToIntegral Â£temporary729 index>

289:
old  <	; UnsignedMultiply Â£temporary729 Â£temporary728 41>
new  <	; UnsignedMultiply Â£temporary730 Â£temporary729 41>

294:
old  <	; BinaryAdd Â£temporary730 g_fileArray Â£temporary729>
new  <	; BinaryAdd Â£temporary731 g_fileArray Â£temporary730>

299:
old  <	; Dereference Â£temporary727 -> Â£temporary730 Â£temporary730 0>
new  <	; Dereference Â£temporary728 -> Â£temporary731 Â£temporary731 0>

302:
old  <	; Address Â£temporary731 Â£temporary727 -> Â£temporary730>
new  <	; Address Â£temporary732 Â£temporary728 -> Â£temporary731>

305:
old  <	; Parameter pointer Â£temporary731 84>
new  <	; Parameter pointer Â£temporary732 84>

319:
old  <	; GetReturnValue Â£temporary732>
new  <	; GetReturnValue Â£temporary733>

322:
old  <	; Return Â£temporary732>
new  <	; Return Â£temporary733>

412:
old  <	; GetReturnValue Â£temporary733>
new  <	; GetReturnValue Â£temporary734>

415:
old  <	; NotEqual 16 Â£temporary733 0>
new  <	; NotEqual 16 Â£temporary734 0>

436:
old  <	jmp @2212$fileopen>
new  <	jmp @2208$fileopen>

442:
old  <	; GetReturnValue Â£temporary735>
new  <	; GetReturnValue Â£temporary736>

445:
old  <	; Assign handle Â£temporary735>
new  <	; Assign handle Â£temporary736>

475:
old  <	; GetReturnValue Â£temporary736>
new  <	; GetReturnValue Â£temporary737>

478:
old  <	; NotEqual 30 Â£temporary736 0>
new  <	; NotEqual 30 Â£temporary737 0>

495:
old  <	jmp @2208$filecreate>
new  <	jmp @2204$filecreate>

501:
old  <	; GetReturnValue Â£temporary738>
new  <	; GetReturnValue Â£temporary739>

504:
old  <	; Assign handle Â£temporary738>
new  <	; Assign handle Â£temporary739>

534:
old  <	; GetReturnValue Â£temporary739>
new  <	; GetReturnValue Â£temporary740>

537:
old  <	; NotEqual 59 Â£temporary739 0>
new  <	; NotEqual 59 Â£temporary740 0>

558:
old  <	jmp @2212$fileopen>
new  <	jmp @2208$fileopen>

564:
old  <	; GetReturnValue Â£temporary741>
new  <	; GetReturnValue Â£temporary742>

567:
old  <	; Assign handle Â£temporary741>
new  <	; Assign handle Â£temporary742>

618:
old  <	jmp @2208$filecreate>
new  <	jmp @2204$filecreate>

624:
old  <	; GetReturnValue Â£temporary744>
new  <	; GetReturnValue Â£temporary745>

627:
old  <	; Assign handle Â£temporary744>
new  <	; Assign handle Â£temporary745>

657:
old  <	; GetReturnValue Â£temporary745>
new  <	; GetReturnValue Â£temporary746>

660:
old  <	; NotEqual 74 Â£temporary745 0>
new  <	; NotEqual 74 Â£temporary746 0>

681:
old  <	jmp @2212$fileopen>
new  <	jmp @2208$fileopen>

687:
old  <	; GetReturnValue Â£temporary747>
new  <	; GetReturnValue Â£temporary748>

690:
old  <	; Assign handle Â£temporary747>
new  <	; Assign handle Â£temporary748>

720:
old  <	; GetReturnValue Â£temporary748>
new  <	; GetReturnValue Â£temporary749>

723:
old  <	; NotEqual 102 Â£temporary748 0>
new  <	; NotEqual 102 Â£temporary749 0>

746:
old  <	; GetReturnValue Â£temporary750>
new  <	; GetReturnValue Â£temporary751>

749:
old  <	; Equal 95 Â£temporary750 0>
new  <	; Equal 95 Â£temporary751 0>

770:
old  <	jmp @2212$fileopen>
new  <	jmp @2208$fileopen>

776:
old  <	; GetReturnValue Â£temporary751>
new  <	; GetReturnValue Â£temporary752>

779:
old  <	; Assign handle Â£temporary751>
new  <	; Assign handle Â£temporary752>

799:
old  <	jmp @2208$filecreate>
new  <	jmp @2204$filecreate>

805:
old  <	; GetReturnValue Â£temporary752>
new  <	; GetReturnValue Â£temporary753>

808:
old  <	; Assign handle Â£temporary752>
new  <	; Assign handle Â£temporary753>

838:
old  <	; GetReturnValue Â£temporary754>
new  <	; GetReturnValue Â£temporary755>

841:
old  <	; NotEqual 130 Â£temporary754 0>
new  <	; NotEqual 130 Â£temporary755 0>

862:
old  <	jmp @2212$fileopen>
new  <	jmp @2208$fileopen>

868:
old  <	; GetReturnValue Â£temporary756>
new  <	; GetReturnValue Â£temporary757>

871:
old  <	; Assign handle Â£temporary756>
new  <	; Assign handle Â£temporary757>

922:
old  <	jmp @2208$filecreate>
new  <	jmp @2204$filecreate>

928:
old  <	; GetReturnValue Â£temporary759>
new  <	; GetReturnValue Â£temporary760>

931:
old  <	; Assign handle Â£temporary759>
new  <	; Assign handle Â£temporary760>

940:
old  <	; Dereference Â£temporary761 -> stream stream 0>
new  <	; Dereference Â£temporary762 -> stream stream 0>

944:
old  <	; Assign Â£temporary761 -> stream 1>
new  <	; Assign Â£temporary762 -> stream 1>

948:
old  <	; Dereference Â£temporary762 -> stream stream 0>
new  <	; Dereference Â£temporary763 -> stream stream 0>

952:
old  <	; Assign Â£temporary762 -> stream handle>
new  <	; Assign Â£temporary763 -> stream handle>

957:
old  <	; Dereference Â£temporary763 -> stream stream 0>
new  <	; Dereference Â£temporary764 -> stream stream 0>

961:
old  <	; Assign Â£temporary763 -> stream 0>
new  <	; Assign Â£temporary764 -> stream 0>

968:
old  <	; Dereference Â£temporary764 -> stream stream 0>
new  <	; Dereference Â£temporary765 -> stream stream 0>

972:
old  <	; Parameter pointer Â£temporary764 -> stream 76>
new  <	; Parameter pointer Â£temporary765 -> stream 76>

992:
old  <	; Dereference Â£temporary766 -> stream stream 0>
new  <	; Dereference Â£temporary767 -> stream stream 0>

996:
old  <	; Assign Â£temporary766 -> stream 0>
new  <	; Assign Â£temporary767 -> stream 0>

1008:
old  <	; Dereference Â£temporary767 -> stream stream 0>
new  <	; Dereference Â£temporary768 -> stream stream 0>

1012:
old  <	; Assign Â£temporary767 -> stream 0>
new  <	; Assign Â£temporary768 -> stream 0>

1043:
old  <	; IntegralToIntegral Â£temporary772 index>
new  <	; IntegralToIntegral Â£temporary773 index>

1049:
old  <	; UnsignedMultiply Â£temporary773 Â£temporary772 41>
new  <	; UnsignedMultiply Â£temporary774 Â£temporary773 41>

1054:
old  <	; BinaryAdd Â£temporary774 g_fileArray Â£temporary773>
new  <	; BinaryAdd Â£temporary775 g_fileArray Â£temporary774>

1059:
old  <	; Dereference Â£temporary771 -> Â£temporary774 Â£temporary774 0>
new  <	; Dereference Â£temporary772 -> Â£temporary775 Â£temporary775 0>

1062:
old  <	; Equal 20 Â£temporary771.open -> Â£temporary774 0>
new  <	; Equal 20 Â£temporary772.open -> Â£temporary775 0>

1070:
old  <	; IntegralToIntegral Â£temporary776 index>
new  <	; IntegralToIntegral Â£temporary777 index>

1076:
old  <	; UnsignedMultiply Â£temporary777 Â£temporary776 41>
new  <	; UnsignedMultiply Â£temporary778 Â£temporary777 41>

1081:
old  <	; BinaryAdd Â£temporary778 g_fileArray Â£temporary777>
new  <	; BinaryAdd Â£temporary779 g_fileArray Â£temporary778>

1086:
old  <	; Dereference Â£temporary775 -> Â£temporary778 Â£temporary778 0>
new  <	; Dereference Â£temporary776 -> Â£temporary779 Â£temporary779 0>

1089:
old  <	; Address Â£temporary779 Â£temporary775 -> Â£temporary778>
new  <	; Address Â£temporary780 Â£temporary776 -> Â£temporary779>

1092:
old  <	; Parameter pointer Â£temporary779 60>
new  <	; Parameter pointer Â£temporary780 60>

1106:
old  <	; GetReturnValue Â£temporary780>
new  <	; GetReturnValue Â£temporary781>

1109:
old  <	; NotEqual 20 Â£temporary780 -1>
new  <	; NotEqual 20 Â£temporary781 -1>

1152:
old  <	; Dereference Â£temporary786 -> stream stream 0>
new  <	; Dereference Â£temporary787 -> stream stream 0>

1156:
old  <	; IntegralToIntegral Â£temporary787 Â£temporary786 -> stream>
new  <	; IntegralToIntegral Â£temporary788 Â£temporary787 -> stream>

1162:
old  <	; AssignRegister rdi Â£temporary787>
new  <	; AssignRegister rdi Â£temporary788>

1186:
old  <	; IntegralToIntegral Â£temporary791 index>
new  <	; IntegralToIntegral Â£temporary792 index>

1192:
old  <	; UnsignedMultiply Â£temporary792 Â£temporary791 41>
new  <	; UnsignedMultiply Â£temporary793 Â£temporary792 41>

1197:
old  <	; BinaryAdd Â£temporary793 g_fileArray Â£temporary792>
new  <	; BinaryAdd Â£temporary794 g_fileArray Â£temporary793>

1202:
old  <	; Dereference Â£temporary790 -> Â£temporary793 Â£temporary793 0>
new  <	; Dereference Â£temporary791 -> Â£temporary794 Â£temporary794 0>

1205:
old  <	; Equal 26 Â£temporary790.open -> Â£temporary793 0>
new  <	; Equal 26 Â£temporary791.open -> Â£temporary794 0>

1213:
old  <	; IntegralToIntegral Â£temporary795 index>
new  <	; IntegralToIntegral Â£temporary796 index>

1219:
old  <	; UnsignedMultiply Â£temporary796 Â£temporary795 41>
new  <	; UnsignedMultiply Â£temporary797 Â£temporary796 41>

1224:
old  <	; BinaryAdd Â£temporary797 g_fileArray Â£temporary796>
new  <	; BinaryAdd Â£temporary798 g_fileArray Â£temporary797>

1229:
old  <	; Dereference Â£temporary794 -> Â£temporary797 Â£temporary797 0>
new  <	; Dereference Â£temporary795 -> Â£temporary798 Â£temporary798 0>

1232:
old  <	; Address Â£temporary798 Â£temporary794 -> Â£temporary797>
new  <	; Address Â£temporary799 Â£temporary795 -> Â£temporary798>

1235:
old  <	; Parameter pointer Â£temporary798 60>
new  <	; Parameter pointer Â£temporary799 60>

1249:
old  <	; GetReturnValue Â£temporary799>
new  <	; GetReturnValue Â£temporary800>

1252:
old  <	; NotEqual 26 Â£temporary799 -1>
new  <	; NotEqual 26 Â£temporary800 -1>

1290:
old  <	; IntegralToIntegral Â£temporary804 name>
new  <	; IntegralToIntegral Â£temporary805 name>

1294:
old  <	; AssignRegister rdi Â£temporary804>
new  <	; AssignRegister rdi Â£temporary805>

1318:
old  <	; IntegralToIntegral Â£temporary807 oldName>
new  <	; IntegralToIntegral Â£temporary808 oldName>

1322:
old  <	; AssignRegister rdi Â£temporary807>
new  <	; AssignRegister rdi Â£temporary808>

1325:
old  <	; IntegralToIntegral Â£temporary809 newName>
new  <	; IntegralToIntegral Â£temporary810 newName>

1329:
old  <	; AssignRegister rsi Â£temporary809>
new  <	; AssignRegister rsi Â£temporary810>

1381:
old  <	; Address Â£temporary810 c>
new  <	; Address Â£temporary811 c>

1386:
old  <	; Parameter pointer Â£temporary810 57>
new  <	; Parameter pointer Â£temporary811 57>

1413:
old  <	; GetReturnValue Â£temporary811>
new  <	; GetReturnValue Â£temporary812>

1416:
old  <	; SignedLessThanEqual 13 Â£temporary811 0>
new  <	; SignedLessThanEqual 13 Â£temporary812 0>

1421:
old  <	; IntegralToIntegral Â£temporary813 c>
new  <	; IntegralToIntegral Â£temporary814 c>

1430:
old  <	; Return Â£temporary813>
new  <	; Return Â£temporary814>

1464:
old  <	; BinarySubtract Â£temporary815 size 1>
new  <	; BinarySubtract Â£temporary816 size 1>

1469:
old  <	; SignedGreaterThanEqual 36 count Â£temporary815>
new  <	; SignedGreaterThanEqual 36 count Â£temporary816>

1490:
old  <	; Address Â£temporary817 currChar>
new  <	; Address Â£temporary818 currChar>

1495:
old  <	; Parameter pointer Â£temporary817 90>
new  <	; Parameter pointer Â£temporary818 90>

1521:
old  <	; IntegralToIntegral Â£temporary823 count>
new  <	; IntegralToIntegral Â£temporary824 count>

1527:
old  <	; BinaryAdd Â£temporary825 text Â£temporary823>
new  <	; BinaryAdd Â£temporary826 text Â£temporary824>

1532:
old  <	; Dereference Â£temporary822 -> Â£temporary825 Â£temporary825 0>
new  <	; Dereference Â£temporary823 -> Â£temporary826 Â£temporary826 0>

1535:
old  <	; Assign Â£temporary822 -> Â£temporary825 0>
new  <	; Assign Â£temporary823 -> Â£temporary826 0>

1543:
old  <	; IntegralToIntegral Â£temporary826 currChar>
new  <	; IntegralToIntegral Â£temporary827 currChar>

1552:
old  <	; NotEqual 26 Â£temporary826 -1>
new  <	; NotEqual 26 Â£temporary827 -1>

1557:
old  <	; IntegralToIntegral Â£temporary829 count>
new  <	; IntegralToIntegral Â£temporary830 count>

1563:
old  <	; BinaryAdd Â£temporary831 text Â£temporary829>
new  <	; BinaryAdd Â£temporary832 text Â£temporary830>

1568:
old  <	; Dereference Â£temporary828 -> Â£temporary831 Â£temporary831 0>
new  <	; Dereference Â£temporary829 -> Â£temporary832 Â£temporary832 0>

1571:
old  <	; Assign Â£temporary828 -> Â£temporary831 0>
new  <	; Assign Â£temporary829 -> Â£temporary832 0>

1589:
old  <	; Assign Â£temporary835 count>
new  <	; Assign Â£temporary836 count>

1597:
old  <	; IntegralToIntegral Â£temporary837 Â£temporary835>
new  <	; IntegralToIntegral Â£temporary838 Â£temporary836>

1602:
old  <	; BinaryAdd Â£temporary839 text Â£temporary837>
new  <	; BinaryAdd Â£temporary840 text Â£temporary838>

1607:
old  <	; Dereference Â£temporary836 -> Â£temporary839 Â£temporary839 0>
new  <	; Dereference Â£temporary837 -> Â£temporary840 Â£temporary840 0>

1610:
old  <	; Assign Â£temporary836 -> Â£temporary839 currChar>
new  <	; Assign Â£temporary837 -> Â£temporary840 currChar>

1655:
old  <	; GetReturnValue Â£temporary841>
new  <	; GetReturnValue Â£temporary842>

1658:
old  <	; BinaryAdd size Â£temporary841 1>
new  <	; BinaryAdd size Â£temporary842 1>

1695:
old  <	; GetReturnValue Â£temporary844>
new  <	; GetReturnValue Â£temporary845>

1698:
old  <	; NotEqual 17 Â£temporary844 size>
new  <	; NotEqual 17 Â£temporary845 size>

1703:
old  <	; Assign Â£temporary846 0>
new  <	; Assign Â£temporary847 0>

1711:
old  <	; Assign Â£temporary846 -1>
new  <	; Assign Â£temporary847 -1>

1715:
old  <	; Return Â£temporary846>
new  <	; Return Â£temporary847>

1745:
old  <	; GetReturnValue Â£temporary847>
new  <	; GetReturnValue Â£temporary848>

1748:
old  <	; Return Â£temporary847>
new  <	; Return Â£temporary848>

1787:
old  <	; GetReturnValue Â£temporary848>
new  <	; GetReturnValue Â£temporary849>

1790:
old  <	; Equal 21 Â£temporary848 0>
new  <	; Equal 21 Â£temporary849 0>

1813:
old  <	; GetReturnValue Â£temporary850>
new  <	; GetReturnValue Â£temporary851>

1816:
old  <	; Assign size Â£temporary850>
new  <	; Assign size Â£temporary851>

1825:
old  <	; BinarySubtract Â£temporary852 size 1>
new  <	; BinarySubtract Â£temporary853 size 1>

1830:
old  <	; IntegralToIntegral Â£temporary854 Â£temporary852>
new  <	; IntegralToIntegral Â£temporary855 Â£temporary853>

1835:
old  <	; BinaryAdd Â£temporary856 s Â£temporary854>
new  <	; BinaryAdd Â£temporary857 s Â£temporary855>

1840:
old  <	; Dereference Â£temporary853 -> Â£temporary856 Â£temporary856 0>
new  <	; Dereference Â£temporary854 -> Â£temporary857 Â£temporary857 0>

1843:
old  <	; Assign Â£temporary853 -> Â£temporary856 0>
new  <	; Assign Â£temporary854 -> Â£temporary857 0>

1891:
old  <	; GetReturnValue Â£temporary857>
new  <	; GetReturnValue Â£temporary858>

1894:
old  <	; Equal 14 Â£temporary857 0>
new  <	; Equal 14 Â£temporary858 0>

1921:
old  <	; GetReturnValue Â£temporary859>
new  <	; GetReturnValue Â£temporary860>

1924:
old  <	; Return Â£temporary859>
new  <	; Return Â£temporary860>

1944:
old  <	; Dereference Â£temporary860 -> stream stream 0>
new  <	; Dereference Â£temporary861 -> stream stream 0>

1948:
old  <	; IntegralToIntegral Â£temporary861 Â£temporary860 -> stream>
new  <	; IntegralToIntegral Â£temporary862 Â£temporary861 -> stream>

1957:
old  <	; Equal 6 Â£temporary861 -1>
new  <	; Equal 6 Â£temporary862 -1>

1962:
old  <	; Dereference Â£temporary863 -> stream stream 0>
new  <	; Dereference Â£temporary864 -> stream stream 0>

1966:
old  <	; IntegralToIntegral Â£temporary864 c>
new  <	; IntegralToIntegral Â£temporary865 c>

1974:
old  <	; Assign Â£temporary863 -> stream Â£temporary864>
new  <	; Assign Â£temporary864 -> stream Â£temporary865>

1995:
old  <	; Dereference Â£temporary867 -> stream stream 0>
new  <	; Dereference Â£temporary868 -> stream stream 0>

1999:
old  <	; IntegralToIntegral Â£temporary868 Â£temporary867 -> stream>
new  <	; IntegralToIntegral Â£temporary869 Â£temporary868 -> stream>

2005:
old  <	; AssignRegister rdi Â£temporary868>
new  <	; AssignRegister rdi Â£temporary869>

2008:
old  <	; IntegralToIntegral Â£temporary870 ptr>
new  <	; IntegralToIntegral Â£temporary871 ptr>

2012:
old  <	; AssignRegister rsi Â£temporary870>
new  <	; AssignRegister rsi Â£temporary871>

2015:
old  <	; SignedMultiply Â£temporary872 size nobj>
new  <	; SignedMultiply Â£temporary873 size nobj>

2021:
old  <	; IntegralToIntegral Â£temporary873 Â£temporary872>
new  <	; IntegralToIntegral Â£temporary874 Â£temporary873>

2026:
old  <	; AssignRegister rdx Â£temporary873>
new  <	; AssignRegister rdx Â£temporary874>

2051:
old  <	; Dereference Â£temporary876 -> stream stream 0>
new  <	; Dereference Â£temporary877 -> stream stream 0>

2055:
old  <	; IntegralToIntegral Â£temporary877 Â£temporary876 -> stream>
new  <	; IntegralToIntegral Â£temporary878 Â£temporary877 -> stream>

2061:
old  <	; AssignRegister rdi Â£temporary877>
new  <	; AssignRegister rdi Â£temporary878>

2064:
old  <	; IntegralToIntegral Â£temporary879 ptr>
new  <	; IntegralToIntegral Â£temporary880 ptr>

2068:
old  <	; AssignRegister rsi Â£temporary879>
new  <	; AssignRegister rsi Â£temporary880>

2071:
old  <	; SignedMultiply Â£temporary881 size nobj>
new  <	; SignedMultiply Â£temporary882 size nobj>

2077:
old  <	; IntegralToIntegral Â£temporary882 Â£temporary881>
new  <	; IntegralToIntegral Â£temporary883 Â£temporary882>

2082:
old  <	; AssignRegister rdx Â£temporary882>
new  <	; AssignRegister rdx Â£temporary883>

2107:
old  <	; Dereference Â£temporary885 -> stream stream 0>
new  <	; Dereference Â£temporary886 -> stream stream 0>

2111:
old  <	; IntegralToIntegral Â£temporary886 Â£temporary885 -> stream>
new  <	; IntegralToIntegral Â£temporary887 Â£temporary886 -> stream>

2117:
old  <	; AssignRegister rdi Â£temporary886>
new  <	; AssignRegister rdi Â£temporary887>

2120:
old  <	; IntegralToIntegral Â£temporary888 offset>
new  <	; IntegralToIntegral Â£temporary889 offset>

2126:
old  <	; AssignRegister rsi Â£temporary888>
new  <	; AssignRegister rsi Â£temporary889>

2129:
old  <	; IntegralToIntegral Â£temporary890 origin>
new  <	; IntegralToIntegral Â£temporary891 origin>

2135:
old  <	; AssignRegister rdx Â£temporary890>
new  <	; AssignRegister rdx Â£temporary891>

2181:
old  <	; GetReturnValue Â£temporary891>
new  <	; GetReturnValue Â£temporary892>

2184:
old  <	; Return Â£temporary891>
new  <	; Return Â£temporary892>

2208:
old  <	; Dereference Â£temporary894 -> ptr ptr 0>
new  <	; Dereference Â£temporary895 -> ptr ptr 0>

2232:
old  <	; GetReturnValue Â£temporary895>
new  <	; GetReturnValue Â£temporary896>

2235:
old  <	; IntegralToIntegral Â£temporary896 Â£temporary895>
new  <	; IntegralToIntegral Â£temporary897 Â£temporary896>

2238:
old  <	; Assign Â£temporary894 -> ptr Â£temporary896>
new  <	; Assign Â£temporary895 -> ptr Â£temporary897>

2263:
old  <	; Dereference Â£temporary897 -> ptr ptr 0>
new  <	; Dereference Â£temporary898 -> ptr ptr 0>

2267:
old  <	; Parameter signedint Â£temporary897 -> ptr 72>
new  <	; Parameter signedint Â£temporary898 -> ptr 72>

2286:
old  <	; GetReturnValue Â£temporary898>
new  <	; GetReturnValue Â£temporary899>

2289:
old  <	; IntegralToIntegral Â£temporary899 Â£temporary898>
new  <	; IntegralToIntegral Â£temporary900 Â£temporary899>

2292:
old  <	; Return Â£temporary899>
new  <	; Return Â£temporary900>

2304:
old  <	; Dereference Â£temporary900 -> stream stream 0>
new  <	; Dereference Â£temporary901 -> stream stream 0>

2312:
old  <	; Assign Â£temporary900 -> stream errno>
new  <	; Assign Â£temporary901 -> stream errno>

2355:
old  <	; GetReturnValue Â£temporary901>
new  <	; GetReturnValue Â£temporary902>

2358:
old  <	; IntegralToIntegral Â£temporary902 Â£temporary901>
new  <	; IntegralToIntegral Â£temporary903 Â£temporary902>

2363:
old  <	; Assign currPosition Â£temporary902>
new  <	; Assign currPosition Â£temporary903>

2393:
old  <	; GetReturnValue Â£temporary903>
new  <	; GetReturnValue Â£temporary904>

2396:
old  <	; IntegralToIntegral Â£temporary904 Â£temporary903>
new  <	; IntegralToIntegral Â£temporary905 Â£temporary904>

2401:
old  <	; Assign lastPosition Â£temporary904>
new  <	; Assign lastPosition Â£temporary905>

2413:
old  <	; IntegralToIntegral Â£temporary905 currPosition>
new  <	; IntegralToIntegral Â£temporary906 currPosition>

2417:
old  <	; Parameter signedint Â£temporary905 80>
new  <	; Parameter signedint Â£temporary906 80>

2441:
old  <	; Assign Â£temporary908 1>
new  <	; Assign Â£temporary909 1>

2449:
old  <	; Assign Â£temporary908 0>
new  <	; Assign Â£temporary909 0>

2453:
old  <	; Assign endOfFile Â£temporary908>
new  <	; Assign endOfFile Â£temporary909>

2470:
old  <	; Dereference Â£temporary909 -> stream stream 0>
new  <	; Dereference Â£temporary910 -> stream stream 0>

2474:
old  <	; Return Â£temporary909 -> stream>
new  <	; Return Â£temporary910 -> stream>

2523:
old  <	; GetReturnValue Â£temporary910>
new  <	; GetReturnValue Â£temporary911>

2526:
old  <	; Parameter pointer Â£temporary910 72>
new  <	; Parameter pointer Â£temporary911 72>

13:
old  <@2593$g_tempArray:>
new  <@2589$g_tempArray:>

19:
old  <@2594$g_tempSize:>
new  <@2590$g_tempSize:>

31:
old  < @2596$existsTempName:>
new  < @2592$existsTempName:>

35:
old  < @2596$existsTempName$1:>
new  < @2592$existsTempName$1:>

37:
old  <	mov eax, [@2594$g_tempSize]>
new  <	mov eax, [@2590$g_tempSize]>

39:
old  <	jge @2596$existsTempName$16>
new  <	jge @2592$existsTempName$16>

41:
old  < @2596$existsTempName$2:>
new  < @2592$existsTempName$2:>

44:
old  < @2596$existsTempName$3:>
new  < @2592$existsTempName$3:>

49:
old  < @2596$existsTempName$4:>
new  < @2592$existsTempName$4:>

50:
old  <	; IntegralToIntegral Â£temporary915 index>
new  <	; IntegralToIntegral Â£temporary916 index>

55:
old  < @2596$existsTempName$5:>
new  < @2592$existsTempName$5:>

56:
old  <	; UnsignedMultiply Â£temporary916 Â£temporary915 4>
new  <	; UnsignedMultiply Â£temporary917 Â£temporary916 4>

60:
old  < @2596$existsTempName$6:>
new  < @2592$existsTempName$6:>

61:
old  <	; BinaryAdd Â£temporary917 g_tempArray Â£temporary916>
new  <	; BinaryAdd Â£temporary918 g_tempArray Â£temporary917>

62:
old  <	mov rsi, @2593$g_tempArray>
new  <	mov rsi, @2589$g_tempArray>

65:
old  < @2596$existsTempName$7:>
new  < @2592$existsTempName$7:>

66:
old  <	; Dereference Â£temporary914 -> Â£temporary917 Â£temporary917 0>
new  <	; Dereference Â£temporary915 -> Â£temporary918 Â£temporary918 0>

68:
old  < @2596$existsTempName$8:>
new  < @2592$existsTempName$8:>

69:
old  <	; Parameter pointer Â£temporary914 -> Â£temporary917 68>
new  <	; Parameter pointer Â£temporary915 -> Â£temporary918 68>

72:
old  < @2596$existsTempName$9:>
new  < @2592$existsTempName$9:>

74:
old  <	mov qword [rbp + 36], @2596$existsTempName$10>
new  <	mov qword [rbp + 36], @2592$existsTempName$10>

79:
old  < @2596$existsTempName$10:>
new  < @2592$existsTempName$10:>

82:
old  < @2596$existsTempName$11:>
new  < @2592$existsTempName$11:>

83:
old  <	; GetReturnValue Â£temporary918>
new  <	; GetReturnValue Â£temporary919>

85:
old  < @2596$existsTempName$12:>
new  < @2592$existsTempName$12:>

86:
old  <	; NotEqual 14 Â£temporary918 0>
new  <	; NotEqual 14 Â£temporary919 0>

88:
old  <	jne @2596$existsTempName$14>
new  <	jne @2592$existsTempName$14>

90:
old  < @2596$existsTempName$13:>
new  < @2592$existsTempName$13:>

98:
old  < @2596$existsTempName$14:>
new  < @2592$existsTempName$14:>

102:
old  < @2596$existsTempName$15:>
new  < @2592$existsTempName$15:>

104:
old  <	jmp @2596$existsTempName$1>
new  <	jmp @2592$existsTempName$1>

106:
old  < @2596$existsTempName$16:>
new  < @2592$existsTempName$16:>

114:
old  < @2596$existsTempName$17:>
new  < @2592$existsTempName$17:>

119:
old  < @2603$generateTempName:>
new  < @2599$generateTempName:>

122:
old  <	jge @2603$generateTempName$58>
new  <	jge @2599$generateTempName$58>

124:
old  < @2603$generateTempName$1:>
new  < @2599$generateTempName$1:>

128:
old  < @2603$generateTempName$2:>
new  < @2599$generateTempName$2:>

131:
old  <	jg @2603$generateTempName$58>
new  <	jg @2599$generateTempName$58>

133:
old  < @2603$generateTempName$3:>
new  < @2599$generateTempName$3:>

134:
old  <	; IntegralToIntegral Â£temporary924 size>
new  <	; IntegralToIntegral Â£temporary925 size>

139:
old  < @2603$generateTempName$4:>
new  < @2599$generateTempName$4:>

140:
old  <	; BinaryAdd Â£temporary926 name Â£temporary924>
new  <	; BinaryAdd Â£temporary927 name Â£temporary925>

144:
old  < @2603$generateTempName$5:>
new  < @2599$generateTempName$5:>

145:
old  <	; Dereference Â£temporary923 -> Â£temporary926 Â£temporary926 0>
new  <	; Dereference Â£temporary924 -> Â£temporary927 Â£temporary927 0>

147:
old  < @2603$generateTempName$6:>
new  < @2599$generateTempName$6:>

148:
old  <	; Assign Â£temporary923 -> Â£temporary926 c>
new  <	; Assign Â£temporary924 -> Â£temporary927 c>

152:
old  < @2603$generateTempName$7:>
new  < @2599$generateTempName$7:>

153:
old  <	; BinaryAdd Â£temporary927 size 1>
new  <	; BinaryAdd Â£temporary928 size 1>

157:
old  < @2603$generateTempName$8:>
new  < @2599$generateTempName$8:>

158:
old  <	; IntegralToIntegral Â£temporary929 Â£temporary927>
new  <	; IntegralToIntegral Â£temporary930 Â£temporary928>

162:
old  < @2603$generateTempName$9:>
new  < @2599$generateTempName$9:>

163:
old  <	; BinaryAdd Â£temporary931 name Â£temporary929>
new  <	; BinaryAdd Â£temporary932 name Â£temporary930>

167:
old  < @2603$generateTempName$10:>
new  < @2599$generateTempName$10:>

168:
old  <	; Dereference Â£temporary928 -> Â£temporary931 Â£temporary931 0>
new  <	; Dereference Â£temporary929 -> Â£temporary932 Â£temporary932 0>

170:
old  < @2603$generateTempName$11:>
new  < @2599$generateTempName$11:>

171:
old  <	; Assign Â£temporary928 -> Â£temporary931 0>
new  <	; Assign Â£temporary929 -> Â£temporary932 0>

174:
old  < @2603$generateTempName$12:>
new  < @2599$generateTempName$12:>

177:
old  < @2603$generateTempName$13:>
new  < @2599$generateTempName$13:>

182:
old  < @2603$generateTempName$14:>
new  < @2599$generateTempName$14:>

184:
old  <	mov qword [rbp + 41], @2603$generateTempName$15>
new  <	mov qword [rbp + 41], @2599$generateTempName$15>

189:
old  < @2603$generateTempName$15:>
new  < @2599$generateTempName$15:>

192:
old  < @2603$generateTempName$16:>
new  < @2599$generateTempName$16:>

193:
old  <	; GetReturnValue Â£temporary932>
new  <	; GetReturnValue Â£temporary933>

195:
old  < @2603$generateTempName$17:>
new  < @2599$generateTempName$17:>

196:
old  <	; NotEqual 45 Â£temporary932 0>
new  <	; NotEqual 45 Â£temporary933 0>

198:
old  <	jne @2603$generateTempName$45>
new  <	jne @2599$generateTempName$45>

200:
old  < @2603$generateTempName$18:>
new  < @2599$generateTempName$18:>

204:
old  <	je @2603$generateTempName$22>
new  <	je @2599$generateTempName$22>

206:
old  < @2603$generateTempName$19:>
new  < @2599$generateTempName$19:>

209:
old  <	je @2603$generateTempName$23>
new  <	je @2599$generateTempName$23>

211:
old  < @2603$generateTempName$20:>
new  < @2599$generateTempName$20:>

214:
old  < @2603$generateTempName$21:>
new  < @2599$generateTempName$21:>

216:
old  <	jmp @2603$generateTempName$45>
new  <	jmp @2599$generateTempName$45>

218:
old  < @2603$generateTempName$22:>
new  < @2599$generateTempName$22:>

226:
old  < @2603$generateTempName$23:>
new  < @2599$generateTempName$23:>

229:
old  < @2603$generateTempName$24:>
new  < @2599$generateTempName$24:>

234:
old  < @2603$generateTempName$25:>
new  < @2599$generateTempName$25:>

236:
old  <	mov qword [rbp + 41], @2603$generateTempName$26>
new  <	mov qword [rbp + 41], @2599$generateTempName$26>

239:
old  <	jmp @2596$existsTempName>
new  <	jmp @2592$existsTempName>

241:
old  < @2603$generateTempName$26:>
new  < @2599$generateTempName$26:>

244:
old  < @2603$generateTempName$27:>
new  < @2599$generateTempName$27:>

245:
old  <	; GetReturnValue Â£temporary935>
new  <	; GetReturnValue Â£temporary936>

247:
old  < @2603$generateTempName$28:>
new  < @2599$generateTempName$28:>

248:
old  <	; NotEqual 45 Â£temporary935 0>
new  <	; NotEqual 45 Â£temporary936 0>

250:
old  <	jne @2603$generateTempName$45>
new  <	jne @2599$generateTempName$45>

252:
old  < @2603$generateTempName$29:>
new  < @2599$generateTempName$29:>

255:
old  < @2603$generateTempName$30:>
new  < @2599$generateTempName$30:>

256:
old  <	; IntegralToIntegral Â£temporary939 g_tempSize>
new  <	; IntegralToIntegral Â£temporary940 g_tempSize>

257:
old  <	mov eax, [@2594$g_tempSize]>
new  <	mov eax, [@2590$g_tempSize]>

261:
old  < @2603$generateTempName$31:>
new  < @2599$generateTempName$31:>

262:
old  <	; UnsignedMultiply Â£temporary940 Â£temporary939 4>
new  <	; UnsignedMultiply Â£temporary941 Â£temporary940 4>

266:
old  < @2603$generateTempName$32:>
new  < @2599$generateTempName$32:>

267:
old  <	; BinaryAdd Â£temporary941 g_tempArray Â£temporary940>
new  <	; BinaryAdd Â£temporary942 g_tempArray Â£temporary941>

268:
old  <	mov rsi, @2593$g_tempArray>
new  <	mov rsi, @2589$g_tempArray>

271:
old  < @2603$generateTempName$33:>
new  < @2599$generateTempName$33:>

272:
old  <	; Dereference Â£temporary938 -> Â£temporary941 Â£temporary941 0>
new  <	; Dereference Â£temporary939 -> Â£temporary942 Â£temporary942 0>

274:
old  < @2603$generateTempName$34:>
new  < @2599$generateTempName$34:>

275:
old  <	; Parameter pointer Â£temporary938 -> Â£temporary941 65>
new  <	; Parameter pointer Â£temporary939 -> Â£temporary942 65>

278:
old  < @2603$generateTempName$35:>
new  < @2599$generateTempName$35:>

283:
old  < @2603$generateTempName$36:>
new  < @2599$generateTempName$36:>

285:
old  <	mov qword [rbp + 41], @2603$generateTempName$37>
new  <	mov qword [rbp + 41], @2599$generateTempName$37>

290:
old  < @2603$generateTempName$37:>
new  < @2599$generateTempName$37:>

293:
old  < @2603$generateTempName$38:>
new  < @2599$generateTempName$38:>

294:
old  <	; Assign Â£temporary943 g_tempSize>
new  <	; Assign Â£temporary944 g_tempSize>

295:
old  <	mov eax, [@2594$g_tempSize]>
new  <	mov eax, [@2590$g_tempSize]>

297:
old  < @2603$generateTempName$39:>
new  < @2599$generateTempName$39:>

299:
old  <	inc dword [@2594$g_tempSize]>
new  <	inc dword [@2590$g_tempSize]>

301:
old  < @2603$generateTempName$40:>
new  < @2599$generateTempName$40:>

302:
old  <	; IntegralToIntegral Â£temporary945 Â£temporary943>
new  <	; IntegralToIntegral Â£temporary946 Â£temporary944>

306:
old  < @2603$generateTempName$41:>
new  < @2599$generateTempName$41:>

307:
old  <	; UnsignedMultiply Â£temporary946 Â£temporary945 4>
new  <	; UnsignedMultiply Â£temporary947 Â£temporary946 4>

311:
old  < @2603$generateTempName$42:>
new  < @2599$generateTempName$42:>

312:
old  <	; BinaryAdd Â£temporary947 g_tempArray Â£temporary946>
new  <	; BinaryAdd Â£temporary948 g_tempArray Â£temporary947>

313:
old  <	mov rsi, @2593$g_tempArray>
new  <	mov rsi, @2589$g_tempArray>

316:
old  < @2603$generateTempName$43:>
new  < @2599$generateTempName$43:>

317:
old  <	; Dereference Â£temporary944 -> Â£temporary947 Â£temporary947 0>
new  <	; Dereference Â£temporary945 -> Â£temporary948 Â£temporary948 0>

319:
old  < @2603$generateTempName$44:>
new  < @2599$generateTempName$44:>

320:
old  <	; Return Â£temporary944 -> Â£temporary947>
new  <	; Return Â£temporary945 -> Â£temporary948>

327:
old  < @2603$generateTempName$45:>
new  < @2599$generateTempName$45:>

330:
old  < @2603$generateTempName$46:>
new  < @2599$generateTempName$46:>

335:
old  < @2603$generateTempName$47:>
new  < @2599$generateTempName$47:>

336:
old  <	; BinaryAdd Â£temporary948 size 1>
new  <	; BinaryAdd Â£temporary949 size 1>

340:
old  < @2603$generateTempName$48:>
new  < @2599$generateTempName$48:>

341:
old  <	; Parameter signedint Â£temporary948 73>
new  <	; Parameter signedint Â£temporary949 73>

344:
old  < @2603$generateTempName$49:>
new  < @2599$generateTempName$49:>

349:
old  < @2603$generateTempName$50:>
new  < @2599$generateTempName$50:>

351:
old  <	mov qword [rbp + 41], @2603$generateTempName$51>
new  <	mov qword [rbp + 41], @2599$generateTempName$51>

354:
old  <	jmp @2603$generateTempName>
new  <	jmp @2599$generateTempName>

356:
old  < @2603$generateTempName$51:>
new  < @2599$generateTempName$51:>

359:
old  < @2603$generateTempName$52:>
new  < @2599$generateTempName$52:>

360:
old  <	; GetReturnValue Â£temporary949>
new  <	; GetReturnValue Â£temporary950>

362:
old  < @2603$generateTempName$53:>
new  < @2599$generateTempName$53:>

363:
old  <	; Assign result Â£temporary949>
new  <	; Assign result Â£temporary950>

366:
old  < @2603$generateTempName$54:>
new  < @2599$generateTempName$54:>

369:
old  <	je @2603$generateTempName$56>
new  <	je @2599$generateTempName$56>

371:
old  < @2603$generateTempName$55:>
new  < @2599$generateTempName$55:>

379:
old  < @2603$generateTempName$56:>
new  < @2599$generateTempName$56:>

383:
old  < @2603$generateTempName$57:>
new  < @2599$generateTempName$57:>

385:
old  <	jmp @2603$generateTempName$2>
new  <	jmp @2599$generateTempName$2>

387:
old  < @2603$generateTempName$58:>
new  < @2599$generateTempName$58:>

395:
old  < @2603$generateTempName$59:>
new  < @2599$generateTempName$59:>

427:
old  <	jmp @2603$generateTempName>
new  <	jmp @2599$generateTempName>

433:
old  <	; GetReturnValue Â£temporary951>
new  <	; GetReturnValue Â£temporary952>

436:
old  <	; Equal 19 Â£temporary951 0>
new  <	; Equal 19 Â£temporary952 0>

463:
old  <	; GetReturnValue Â£temporary952>
new  <	; GetReturnValue Â£temporary953>

466:
old  <	; Assign stream Â£temporary952>
new  <	; Assign stream Â£temporary953>

475:
old  <	; Dereference Â£temporary956 -> stream stream 0>
new  <	; Dereference Â£temporary957 -> stream stream 0>

479:
old  <	; Assign Â£temporary956 -> stream 1>
new  <	; Assign Â£temporary957 -> stream 1>

505:
old  <	cmp dword [@2594$g_tempSize], 16>
new  <	cmp dword [@2590$g_tempSize], 16>

529:
old  <	jmp @2603$generateTempName>
new  <	jmp @2599$generateTempName>

535:
old  <	; GetReturnValue Â£temporary958>
new  <	; GetReturnValue Â£temporary959>

538:
old  <	; Return Â£temporary958>
new  <	; Return Â£temporary959>

9:
old  <	global digitToValue>
new  <	global scanLongInt>

10:
old  <	global scanLongInt>
new  <	global scanUnsignedLongInt>

11:
old  <	global scanUnsignedLongInt>
new  <	global scanLongDouble>

12:
old  <	global scanLongDouble>
new  <	global scanFormat>

13:
old  <	global scanFormat>
new  <	global scanf>

14:
old  <	global scanf>
new  <	global vscanf>

15:
old  <	global vscanf>
new  <	global fscanf>

16:
old  <	global fscanf>
new  <	global vfscanf>

17:
old  <	global vfscanf>
new  <	global sscanf>

18:
old  <	global sscanf>
new  <	global vsscanf>

19:
old  <	global vsscanf>
new  <>

20:
old  <>
new  <	extern isspace>

21:
old  <	extern isspace>
new  <	extern strchr>

22:
old  <	extern strchr>
new  <	extern isdigit>

23:
old  <	extern isdigit>
new  <	extern islower>

24:
old  <	extern islower>
new  <	extern isupper>

26:
old  <	extern isxdigit>
new  <	extern pow>

27:
old  <	extern pow>
new  <	extern printf>

28:
old  <	extern printf>
new  <	extern stdin>

29:
old  <	extern stdin>
new  <	extern $StackTop>

30:
old  <	extern $StackTop>
new  <>

32:
old  <>
new  <section .data>

33:
old  <section .data>
new  <>

34:
old  <>
new  <g_inStatus:>

35:
old  <g_inStatus:>
new  <	; InitializerZero 4>

36:
old  <	; InitializerZero 4>
new  <	times 4 db 0>

37:
old  <	times 4 db 0>
new  <>

38:
old  <>
new  <section .data>

39:
old  <section .data>
new  <>

40:
old  <>
new  <g_inChars:>

41:
old  <g_inChars:>
new  <	; InitializerZero 4>

42:
old  <	; InitializerZero 4>
new  <	times 4 db 0>

43:
old  <	times 4 db 0>
new  <>

44:
old  <>
new  <section .data>

45:
old  <section .data>
new  <>

46:
old  <>
new  <g_inDevice:>

47:
old  <g_inDevice:>
new  <	; InitializerZero 8>

48:
old  <	; InitializerZero 8>
new  <	times 8 db 0>

49:
old  <	times 8 db 0>
new  <>

50:
old  <>
new  <section .data>

51:
old  <section .data>
new  <>

52:
old  <>
new  <g_inCount:>

53:
old  <g_inCount:>
new  <	; InitializerZero 4>

54:
old  <	; InitializerZero 4>
new  <	times 4 db 0>

55:
old  <	times 4 db 0>
new  <>

56:
old  <>
new  <section .text>

57:
old  <section .text>
new  <>

58:
old  <>
new  < scanChar:>

59:
old  < scanChar:>
new  <	; Assign c 0>

60:
old  <	; Assign c 0>
new  <	mov byte [rbp + 24], 0>

61:
old  <	mov byte [rbp + 24], 0>
new  <>

62:
old  <>
new  < scanChar$1:>

63:
old  < scanChar$1:>
new  <	; Case 5 g_inStatus 0>

64:
old  <	; Case 5 g_inStatus 0>
new  <	mov eax, [g_inStatus]>

65:
old  <	mov eax, [g_inStatus]>
new  <	cmp eax, 0>

66:
old  <	cmp eax, 0>
new  <	je scanChar$5>

67:
old  <	je scanChar$5>
new  <>

68:
old  <>
new  < scanChar$2:>

69:
old  < scanChar$2:>
new  <	; Case 20 g_inStatus 1>

70:
old  <	; Case 20 g_inStatus 1>
new  <	cmp eax, 1>

71:
old  <	cmp eax, 1>
new  <	je scanChar$20>

72:
old  <	je scanChar$20>
new  <>

73:
old  <>
new  < scanChar$3:>

74:
old  < scanChar$3:>
new  <	; CaseEnd g_inStatus>

75:
old  <	; CaseEnd g_inStatus>
new  <>

76:
old  <>
new  < scanChar$4:>

77:
old  < scanChar$4:>
new  <	; Goto 28>

78:
old  <	; Goto 28>
new  <	jmp scanChar$28>

79:
old  <	jmp scanChar$28>
new  <>

80:
old  <>
new  < scanChar$5:>

81:
old  < scanChar$5:>
new  <	; IntegralToIntegral Â£temporary960 g_inDevice>

82:
old  <	; IntegralToIntegral Â£temporary959 g_inDevice>
new  <	mov rax, [g_inDevice]>

83:
old  <	mov rax, [g_inDevice]>
new  <>

84:
old  <>
new  < scanChar$6:>

85:
old  < scanChar$6:>
new  <	; Assign stream Â£temporary960>

86:
old  <	; Assign stream Â£temporary959>
new  <	mov [rbp + 25], rax>

87:
old  <	mov [rbp + 25], rax>
new  <>

88:
old  <>
new  < scanChar$7:>

89:
old  < scanChar$7:>
new  <	; Dereference Â£temporary961 -> stream stream 0>

90:
old  <	; Dereference Â£temporary960 -> stream stream 0>
new  <	mov rsi, [rbp + 25]>

91:
old  <	mov rsi, [rbp + 25]>
new  <>

92:
old  <>
new  < scanChar$8:>

93:
old  < scanChar$8:>
new  <	; Assign handle Â£temporary961 -> stream>

94:
old  <	; Assign handle Â£temporary960 -> stream>
new  <	mov eax, [rsi + 4]>

95:
old  <	mov eax, [rsi + 4]>
new  <	mov [rbp + 33], eax>

96:
old  <	mov [rbp + 33], eax>
new  <>

97:
old  <>
new  < scanChar$9:>

98:
old  < scanChar$9:>
new  <	; AssignRegister rax 0>

99:
old  <	; AssignRegister rax 0>
new  <	mov rax, 0>

100:
old  <	mov rax, 0>
new  <>

101:
old  <>
new  < scanChar$10:>

102:
old  < scanChar$10:>
new  <	; Dereference Â£temporary964 -> stream stream 0>

103:
old  <	; Dereference Â£temporary963 -> stream stream 0>
new  <	mov rsi, [rbp + 25]>

104:
old  <	mov rsi, [rbp + 25]>
new  <>

105:
old  <>
new  < scanChar$11:>

106:
old  < scanChar$11:>
new  <	; IntegralToIntegral Â£temporary965 Â£temporary964 -> stream>

107:
old  <	; IntegralToIntegral Â£temporary964 Â£temporary963 -> stream>
new  <	mov edi, [rsi + 4]>

108:
old  <	mov edi, [rsi + 4]>
new  <	mov rbx, 4294967295>

109:
old  <	mov rbx, 4294967295>
new  <	and rdi, rbx>

110:
old  <	and rdi, rbx>
new  <>

111:
old  <>
new  < scanChar$12:>

112:
old  < scanChar$12:>
new  <	; AssignRegister rdi Â£temporary965>

113:
old  <	; AssignRegister rdi Â£temporary964>
new  <>

114:
old  <>
new  < scanChar$13:>

115:
old  < scanChar$13:>
new  <	; Address Â£temporary967 c>

116:
old  <	; Address Â£temporary966 c>
new  <	mov rsi, rbp>

117:
old  <	mov rsi, rbp>
new  <	add rsi, 24>

118:
old  <	add rsi, 24>
new  <>

119:
old  <>
new  < scanChar$14:>

120:
old  < scanChar$14:>
new  <	; IntegralToIntegral Â£temporary968 Â£temporary967>

121:
old  <	; IntegralToIntegral Â£temporary967 Â£temporary966>
new  <>

122:
old  <>
new  < scanChar$15:>

123:
old  < scanChar$15:>
new  <	; AssignRegister rsi Â£temporary968>

124:
old  <	; AssignRegister rsi Â£temporary967>
new  <>

125:
old  <>
new  < scanChar$16:>

126:
old  < scanChar$16:>
new  <	; AssignRegister rdx 1>

127:
old  <	; AssignRegister rdx 1>
new  <	mov rdx, 1>

128:
old  <	mov rdx, 1>
new  <>

129:
old  <>
new  < scanChar$17:>

130:
old  < scanChar$17:>
new  <	; SysCall>

131:
old  <	; SysCall>
new  <	syscall>

132:
old  <	syscall>
new  <>

133:
old  <>
new  < scanChar$18:>

134:
old  < scanChar$18:>
new  <	; BinaryAdd g_inChars g_inChars 1>

135:
old  <	; BinaryAdd g_inChars g_inChars 1>
new  <	inc dword [g_inChars]>

136:
old  <	inc dword [g_inChars]>
new  <>

137:
old  <>
new  < scanChar$19:>

138:
old  < scanChar$19:>
new  <	; Return c>

139:
old  <	; Return c>
new  <	mov bl, [rbp + 24]>

140:
old  <	mov bl, [rbp + 24]>
new  <	mov rax, [rbp]>

141:
old  <	mov rax, [rbp]>
new  <	mov rdi, [rbp + 16]>

142:
old  <	mov rdi, [rbp + 16]>
new  <	mov rbp, [rbp + 8]>

143:
old  <	mov rbp, [rbp + 8]>
new  <	jmp rax>

144:
old  <	jmp rax>
new  <>

145:
old  <>
new  < scanChar$20:>

146:
old  < scanChar$20:>
new  <	; IntegralToIntegral Â£temporary971 g_inDevice>

147:
old  <	; IntegralToIntegral Â£temporary970 g_inDevice>
new  <	mov rax, [g_inDevice]>

148:
old  <	mov rax, [g_inDevice]>
new  <>

149:
old  <>
new  < scanChar$21:>

150:
old  < scanChar$21:>
new  <	; Assign inString Â£temporary971>

151:
old  <	; Assign inString Â£temporary970>
new  <	mov [rbp + 37], rax>

152:
old  <	mov [rbp + 37], rax>
new  <>

153:
old  <>
new  < scanChar$22:>

154:
old  < scanChar$22:>
new  <	; Assign Â£temporary972 g_inChars>

155:
old  <	; Assign Â£temporary971 g_inChars>
new  <	mov eax, [g_inChars]>

156:
old  <	mov eax, [g_inChars]>
new  <>

157:
old  <>
new  < scanChar$23:>

158:
old  < scanChar$23:>
new  <	; BinaryAdd g_inChars g_inChars 1>

159:
old  <	; BinaryAdd g_inChars g_inChars 1>
new  <	inc dword [g_inChars]>

160:
old  <	inc dword [g_inChars]>
new  <>

161:
old  <>
new  < scanChar$24:>

162:
old  < scanChar$24:>
new  <	; IntegralToIntegral Â£temporary974 Â£temporary972>

163:
old  <	; IntegralToIntegral Â£temporary973 Â£temporary971>
new  <	mov rbx, 4294967295>

164:
old  <	mov rbx, 4294967295>
new  <	and rax, rbx>

165:
old  <	and rax, rbx>
new  <>

166:
old  <>
new  < scanChar$25:>

167:
old  < scanChar$25:>
new  <	; BinaryAdd Â£temporary976 inString Â£temporary974>

168:
old  <	; BinaryAdd Â£temporary975 inString Â£temporary973>
new  <	mov rsi, [rbp + 37]>

169:
old  <	mov rsi, [rbp + 37]>
new  <	add rsi, rax>

170:
old  <	add rsi, rax>
new  <>

171:
old  <>
new  < scanChar$26:>

172:
old  < scanChar$26:>
new  <	; Dereference Â£temporary973 -> Â£temporary976 Â£temporary976 0>

173:
old  <	; Dereference Â£temporary972 -> Â£temporary975 Â£temporary975 0>
new  <>

174:
old  <>
new  < scanChar$27:>

175:
old  < scanChar$27:>
new  <	; Return Â£temporary973 -> Â£temporary976>

176:
old  <	; Return Â£temporary972 -> Â£temporary975>
new  <	mov bl, [rsi]>

177:
old  <	mov bl, [rsi]>
new  <	mov rax, [rbp]>

178:
old  <	mov rax, [rbp]>
new  <	mov rdi, [rbp + 16]>

179:
old  <	mov rdi, [rbp + 16]>
new  <	mov rbp, [rbp + 8]>

180:
old  <	mov rbp, [rbp + 8]>
new  <	jmp rax>

181:
old  <	jmp rax>
new  <>

182:
old  <>
new  < scanChar$28:>

183:
old  < scanChar$28:>
new  <	; Return 0>

184:
old  <	; Return 0>
new  <	mov bl, 0>

185:
old  <	mov bl, 0>
new  <	mov rax, [rbp]>

186:
old  <	mov rax, [rbp]>
new  <	mov rdi, [rbp + 16]>

187:
old  <	mov rdi, [rbp + 16]>
new  <	mov rbp, [rbp + 8]>

188:
old  <	mov rbp, [rbp + 8]>
new  <	jmp rax>

189:
old  <	jmp rax>
new  <>

190:
old  <>
new  < scanChar$29:>

191:
old  < scanChar$29:>
new  <	; FunctionEnd scanChar>

192:
old  <	; FunctionEnd scanChar>
new  <>

193:
old  <>
new  <section .text>

194:
old  <section .text>
new  <>

195:
old  <>
new  < unscanChar:>

196:
old  < unscanChar:>
new  <	; Case 4 g_inStatus 0>

197:
old  <	; Case 4 g_inStatus 0>
new  <	mov eax, [g_inStatus]>

198:
old  <	mov eax, [g_inStatus]>
new  <	cmp eax, 0>

199:
old  <	cmp eax, 0>
new  <	je unscanChar$4>

200:
old  <	je unscanChar$4>
new  <>

201:
old  <>
new  < unscanChar$1:>

202:
old  < unscanChar$1:>
new  <	; Case 6 g_inStatus 1>

203:
old  <	; Case 6 g_inStatus 1>
new  <	cmp eax, 1>

204:
old  <	cmp eax, 1>
new  <	je unscanChar$6>

205:
old  <	je unscanChar$6>
new  <>

206:
old  <>
new  < unscanChar$2:>

207:
old  < unscanChar$2:>
new  <	; CaseEnd g_inStatus>

208:
old  <	; CaseEnd g_inStatus>
new  <>

209:
old  <>
new  < unscanChar$3:>

210:
old  < unscanChar$3:>
new  <	; Goto 7>

211:
old  <	; Goto 7>
new  <	jmp unscanChar$7>

212:
old  <	jmp unscanChar$7>
new  <>

213:
old  <>
new  < unscanChar$4:>

214:
old  < unscanChar$4:>
new  <	; BinarySubtract g_inChars g_inChars 1>

215:
old  <	; BinarySubtract g_inChars g_inChars 1>
new  <	dec dword [g_inChars]>

216:
old  <	dec dword [g_inChars]>
new  <>

217:
old  <>
new  < unscanChar$5:>

218:
old  < unscanChar$5:>
new  <	; Goto 7>

219:
old  <	; Goto 7>
new  <	jmp unscanChar$7>

220:
old  <	jmp unscanChar$7>
new  <>

221:
old  <>
new  < unscanChar$6:>

222:
old  < unscanChar$6:>
new  <	; BinarySubtract g_inChars g_inChars 1>

223:
old  <	; BinarySubtract g_inChars g_inChars 1>
new  <	dec dword [g_inChars]>

224:
old  <	dec dword [g_inChars]>
new  <>

225:
old  <>
new  < unscanChar$7:>

226:
old  < unscanChar$7:>
new  <	; Return>

227:
old  <	; Return>
new  <	mov rax, [rbp]>

228:
old  <	mov rax, [rbp]>
new  <	mov rdi, [rbp + 16]>

229:
old  <	mov rdi, [rbp + 16]>
new  <	mov rbp, [rbp + 8]>

230:
old  <	mov rbp, [rbp + 8]>
new  <	jmp rax>

231:
old  <	jmp rax>
new  <>

232:
old  <>
new  < unscanChar$8:>

233:
old  < unscanChar$8:>
new  <	; FunctionEnd unscanChar>

234:
old  <	; FunctionEnd unscanChar>
new  <>

235:
old  <>
new  <section .text>

236:
old  <section .text>
new  <>

237:
old  <>
new  < scanPattern:>

238:
old  < scanPattern:>
new  <	; Assign index 0>

239:
old  <	; Assign index 0>
new  <	mov dword [rbp + 44], 0>

240:
old  <	mov dword [rbp + 44], 0>
new  <>

241:
old  <>
new  < scanPattern$1:>

242:
old  < scanPattern$1:>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

243:
old  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

244:
old  <>
new  < scanPattern$2:>

245:
old  < scanPattern$2:>
new  <	; Call scanChar 48 0>

246:
old  <	; Call scanChar 48 0>
new  <	mov qword [rbp + 48], scanPattern$3>

247:
old  <	mov qword [rbp + 48], scanPattern$3>
new  <	mov [rbp + 56], rbp>

248:
old  <	mov [rbp + 56], rbp>
new  <	add rbp, 48>

249:
old  <	add rbp, 48>
new  <	jmp scanChar>

250:
old  <	jmp scanChar>
new  <>

251:
old  <>
new  < scanPattern$3:>

252:
old  < scanPattern$3:>
new  <	; PostCall 48>

253:
old  <	; PostCall 48>
new  <>

254:
old  <>
new  < scanPattern$4:>

255:
old  < scanPattern$4:>
new  <	; GetReturnValue Â£temporary980>

256:
old  <	; GetReturnValue Â£temporary979>
new  <>

257:
old  <>
new  < scanPattern$5:>

258:
old  < scanPattern$5:>
new  <	; Assign input Â£temporary980>

259:
old  <	; Assign input Â£temporary979>
new  <	mov [rbp + 48], bl>

260:
old  <	mov [rbp + 48], bl>
new  <>

261:
old  <>
new  < scanPattern$6:>

262:
old  < scanPattern$6:>
new  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

263:
old  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

264:
old  <>
new  < scanPattern$7:>

265:
old  < scanPattern$7:>
new  <	; IntegralToIntegral Â£temporary981 input>

266:
old  <	; IntegralToIntegral Â£temporary980 input>
new  <	mov al, [rbp + 48]>

267:
old  <	mov al, [rbp + 48]>
new  <	and eax, 255>

268:
old  <	and eax, 255>
new  <	cmp al, 0>

269:
old  <	cmp al, 0>
new  <	jge scanPattern$8>

270:
old  <	jge scanPattern$8>
new  <	neg al>

271:
old  <	neg al>
new  <	neg eax>

272:
old  <	neg eax>
new  <>

273:
old  <>
new  < scanPattern$8:>

274:
old  < scanPattern$8:>
new  <	; Parameter signedint Â£temporary981 73>

275:
old  <	; Parameter signedint Â£temporary980 73>
new  <	mov [rbp + 73], eax>

276:
old  <	mov [rbp + 73], eax>
new  <>

277:
old  <>
new  < scanPattern$9:>

278:
old  < scanPattern$9:>
new  <	; Call isspace 49 0>

279:
old  <	; Call isspace 49 0>
new  <	mov qword [rbp + 49], scanPattern$10>

280:
old  <	mov qword [rbp + 49], scanPattern$10>
new  <	mov [rbp + 57], rbp>

281:
old  <	mov [rbp + 57], rbp>
new  <	add rbp, 49>

282:
old  <	add rbp, 49>
new  <	jmp isspace>

283:
old  <	jmp isspace>
new  <>

284:
old  <>
new  < scanPattern$10:>

285:
old  < scanPattern$10:>
new  <	; PostCall 49>

286:
old  <	; PostCall 49>
new  <>

287:
old  <>
new  < scanPattern$11:>

288:
old  < scanPattern$11:>
new  <	; GetReturnValue Â£temporary982>

289:
old  <	; GetReturnValue Â£temporary981>
new  <>

290:
old  <>
new  < scanPattern$12:>

291:
old  < scanPattern$12:>
new  <	; Equal 19 Â£temporary982 0>

292:
old  <	; Equal 19 Â£temporary981 0>
new  <	cmp ebx, 0>

293:
old  <	cmp ebx, 0>
new  <	je scanPattern$19>

294:
old  <	je scanPattern$19>
new  <>

295:
old  <>
new  < scanPattern$13:>

296:
old  < scanPattern$13:>
new  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

297:
old  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

298:
old  <>
new  < scanPattern$14:>

299:
old  < scanPattern$14:>
new  <	; Call scanChar 49 0>

300:
old  <	; Call scanChar 49 0>
new  <	mov qword [rbp + 49], scanPattern$15>

301:
old  <	mov qword [rbp + 49], scanPattern$15>
new  <	mov [rbp + 57], rbp>

302:
old  <	mov [rbp + 57], rbp>
new  <	add rbp, 49>

303:
old  <	add rbp, 49>
new  <	jmp scanChar>

304:
old  <	jmp scanChar>
new  <>

305:
old  <>
new  < scanPattern$15:>

306:
old  < scanPattern$15:>
new  <	; PostCall 49>

307:
old  <	; PostCall 49>
new  <>

308:
old  <>
new  < scanPattern$16:>

309:
old  < scanPattern$16:>
new  <	; GetReturnValue Â£temporary983>

310:
old  <	; GetReturnValue Â£temporary982>
new  <>

311:
old  <>
new  < scanPattern$17:>

312:
old  < scanPattern$17:>
new  <	; Assign input Â£temporary983>

313:
old  <	; Assign input Â£temporary982>
new  <	mov [rbp + 48], bl>

314:
old  <	mov [rbp + 48], bl>
new  <>

315:
old  <>
new  < scanPattern$18:>

316:
old  < scanPattern$18:>
new  <	; Goto 6>

317:
old  <	; Goto 6>
new  <	jmp scanPattern$6>

318:
old  <	jmp scanPattern$6>
new  <>

319:
old  <>
new  < scanPattern$19:>

320:
old  < scanPattern$19:>
new  <	; Equal 55 string 0>

321:
old  <	; Equal 55 string 0>
new  <	cmp qword [rbp + 24], 0>

322:
old  <	cmp qword [rbp + 24], 0>
new  <	je scanPattern$55>

323:
old  <	je scanPattern$55>
new  <>

324:
old  <>
new  < scanPattern$20:>

325:
old  < scanPattern$20:>
new  <	; NotEqual 29 not 0>

326:
old  <	; NotEqual 29 not 0>
new  <	cmp dword [rbp + 40], 0>

327:
old  <	cmp dword [rbp + 40], 0>
new  <	jne scanPattern$29>

328:
old  <	jne scanPattern$29>
new  <>

329:
old  <>
new  < scanPattern$21:>

330:
old  < scanPattern$21:>
new  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

331:
old  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

332:
old  <>
new  < scanPattern$22:>

333:
old  < scanPattern$22:>
new  <	; Parameter pointer pattern 73>

334:
old  <	; Parameter pointer pattern 73>
new  <	mov rax, [rbp + 32]>

335:
old  <	mov rax, [rbp + 32]>
new  <	mov [rbp + 73], rax>

336:
old  <	mov [rbp + 73], rax>
new  <>

337:
old  <>
new  < scanPattern$23:>

338:
old  < scanPattern$23:>
new  <	; IntegralToIntegral Â£temporary988 input>

339:
old  <	; IntegralToIntegral Â£temporary987 input>
new  <	mov al, [rbp + 48]>

340:
old  <	mov al, [rbp + 48]>
new  <	and eax, 255>

341:
old  <	and eax, 255>
new  <	cmp al, 0>

342:
old  <	cmp al, 0>
new  <	jge scanPattern$24>

343:
old  <	jge scanPattern$24>
new  <	neg al>

344:
old  <	neg al>
new  <	neg eax>

345:
old  <	neg eax>
new  <>

346:
old  <>
new  < scanPattern$24:>

347:
old  < scanPattern$24:>
new  <	; Parameter signedint Â£temporary988 81>

348:
old  <	; Parameter signedint Â£temporary987 81>
new  <	mov [rbp + 81], eax>

349:
old  <	mov [rbp + 81], eax>
new  <>

350:
old  <>
new  < scanPattern$25:>

351:
old  < scanPattern$25:>
new  <	; Call strchr 49 0>

352:
old  <	; Call strchr 49 0>
new  <	mov qword [rbp + 49], scanPattern$26>

353:
old  <	mov qword [rbp + 49], scanPattern$26>
new  <	mov [rbp + 57], rbp>

354:
old  <	mov [rbp + 57], rbp>
new  <	add rbp, 49>

355:
old  <	add rbp, 49>
new  <	jmp strchr>

356:
old  <	jmp strchr>
new  <>

357:
old  <>
new  < scanPattern$26:>

358:
old  < scanPattern$26:>
new  <	; PostCall 49>

359:
old  <	; PostCall 49>
new  <>

360:
old  <>
new  < scanPattern$27:>

361:
old  < scanPattern$27:>
new  <	; GetReturnValue Â£temporary989>

362:
old  <	; GetReturnValue Â£temporary988>
new  <>

363:
old  <>
new  < scanPattern$28:>

364:
old  < scanPattern$28:>
new  <	; NotEqual 38 Â£temporary989 0>

365:
old  <	; NotEqual 38 Â£temporary988 0>
new  <	cmp rbx, 0>

366:
old  <	cmp rbx, 0>
new  <	jne scanPattern$38>

367:
old  <	jne scanPattern$38>
new  <>

368:
old  <>
new  < scanPattern$29:>

369:
old  < scanPattern$29:>
new  <	; Equal 50 not 0>

370:
old  <	; Equal 50 not 0>
new  <	cmp dword [rbp + 40], 0>

371:
old  <	cmp dword [rbp + 40], 0>
new  <	je scanPattern$50>

372:
old  <	je scanPattern$50>
new  <>

373:
old  <>
new  < scanPattern$30:>

374:
old  < scanPattern$30:>
new  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

375:
old  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

376:
old  <>
new  < scanPattern$31:>

377:
old  < scanPattern$31:>
new  <	; Parameter pointer pattern 73>

378:
old  <	; Parameter pointer pattern 73>
new  <	mov rax, [rbp + 32]>

379:
old  <	mov rax, [rbp + 32]>
new  <	mov [rbp + 73], rax>

380:
old  <	mov [rbp + 73], rax>
new  <>

381:
old  <>
new  < scanPattern$32:>

382:
old  < scanPattern$32:>
new  <	; IntegralToIntegral Â£temporary992 input>

383:
old  <	; IntegralToIntegral Â£temporary991 input>
new  <	mov al, [rbp + 48]>

384:
old  <	mov al, [rbp + 48]>
new  <	and eax, 255>

385:
old  <	and eax, 255>
new  <	cmp al, 0>

386:
old  <	cmp al, 0>
new  <	jge scanPattern$33>

387:
old  <	jge scanPattern$33>
new  <	neg al>

388:
old  <	neg al>
new  <	neg eax>

389:
old  <	neg eax>
new  <>

390:
old  <>
new  < scanPattern$33:>

391:
old  < scanPattern$33:>
new  <	; Parameter signedint Â£temporary992 81>

392:
old  <	; Parameter signedint Â£temporary991 81>
new  <	mov [rbp + 81], eax>

393:
old  <	mov [rbp + 81], eax>
new  <>

394:
old  <>
new  < scanPattern$34:>

395:
old  < scanPattern$34:>
new  <	; Call strchr 49 0>

396:
old  <	; Call strchr 49 0>
new  <	mov qword [rbp + 49], scanPattern$35>

397:
old  <	mov qword [rbp + 49], scanPattern$35>
new  <	mov [rbp + 57], rbp>

398:
old  <	mov [rbp + 57], rbp>
new  <	add rbp, 49>

399:
old  <	add rbp, 49>
new  <	jmp strchr>

400:
old  <	jmp strchr>
new  <>

401:
old  <>
new  < scanPattern$35:>

402:
old  < scanPattern$35:>
new  <	; PostCall 49>

403:
old  <	; PostCall 49>
new  <>

404:
old  <>
new  < scanPattern$36:>

405:
old  < scanPattern$36:>
new  <	; GetReturnValue Â£temporary993>

406:
old  <	; GetReturnValue Â£temporary992>
new  <>

407:
old  <>
new  < scanPattern$37:>

408:
old  < scanPattern$37:>
new  <	; NotEqual 50 Â£temporary993 0>

409:
old  <	; NotEqual 50 Â£temporary992 0>
new  <	cmp rbx, 0>

410:
old  <	cmp rbx, 0>
new  <	jne scanPattern$50>

411:
old  <	jne scanPattern$50>
new  <>

412:
old  <>
new  < scanPattern$38:>

413:
old  < scanPattern$38:>
new  <	; Assign Â£temporary999 index>

414:
old  <	; Assign Â£temporary998 index>
new  <	mov eax, [rbp + 44]>

415:
old  <	mov eax, [rbp + 44]>
new  <>

416:
old  <>
new  < scanPattern$39:>

417:
old  < scanPattern$39:>
new  <	; BinaryAdd index index 1>

418:
old  <	; BinaryAdd index index 1>
new  <	inc dword [rbp + 44]>

419:
old  <	inc dword [rbp + 44]>
new  <>

420:
old  <>
new  < scanPattern$40:>

421:
old  < scanPattern$40:>
new  <	; IntegralToIntegral Â£temporary1001 Â£temporary999>

422:
old  <	; IntegralToIntegral Â£temporary1000 Â£temporary998>
new  <	mov rbx, 4294967295>

423:
old  <	mov rbx, 4294967295>
new  <	and rax, rbx>

424:
old  <	and rax, rbx>
new  <>

425:
old  <>
new  < scanPattern$41:>

426:
old  < scanPattern$41:>
new  <	; BinaryAdd Â£temporary1003 string Â£temporary1001>

427:
old  <	; BinaryAdd Â£temporary1002 string Â£temporary1000>
new  <	mov rsi, [rbp + 24]>

428:
old  <	mov rsi, [rbp + 24]>
new  <	add rsi, rax>

429:
old  <	add rsi, rax>
new  <>

430:
old  <>
new  < scanPattern$42:>

431:
old  < scanPattern$42:>
new  <	; Dereference Â£temporary1000 -> Â£temporary1003 Â£temporary1003 0>

432:
old  <	; Dereference Â£temporary999 -> Â£temporary1002 Â£temporary1002 0>
new  <>

433:
old  <>
new  < scanPattern$43:>

434:
old  < scanPattern$43:>
new  <	; Assign Â£temporary1000 -> Â£temporary1003 input>

435:
old  <	; Assign Â£temporary999 -> Â£temporary1002 input>
new  <	mov al, [rbp + 48]>

436:
old  <	mov al, [rbp + 48]>
new  <	mov [rsi], al>

437:
old  <	mov [rsi], al>
new  <>

438:
old  <>
new  < scanPattern$44:>

439:
old  < scanPattern$44:>
new  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

440:
old  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

441:
old  <>
new  < scanPattern$45:>

442:
old  < scanPattern$45:>
new  <	; Call scanChar 49 0>

443:
old  <	; Call scanChar 49 0>
new  <	mov qword [rbp + 49], scanPattern$46>

444:
old  <	mov qword [rbp + 49], scanPattern$46>
new  <	mov [rbp + 57], rbp>

445:
old  <	mov [rbp + 57], rbp>
new  <	add rbp, 49>

446:
old  <	add rbp, 49>
new  <	jmp scanChar>

447:
old  <	jmp scanChar>
new  <>

448:
old  <>
new  < scanPattern$46:>

449:
old  < scanPattern$46:>
new  <	; PostCall 49>

450:
old  <	; PostCall 49>
new  <>

451:
old  <>
new  < scanPattern$47:>

452:
old  < scanPattern$47:>
new  <	; GetReturnValue Â£temporary1004>

453:
old  <	; GetReturnValue Â£temporary1003>
new  <>

454:
old  <>
new  < scanPattern$48:>

455:
old  < scanPattern$48:>
new  <	; Assign input Â£temporary1004>

456:
old  <	; Assign input Â£temporary1003>
new  <	mov [rbp + 48], bl>

457:
old  <	mov [rbp + 48], bl>
new  <>

458:
old  <>
new  < scanPattern$49:>

459:
old  < scanPattern$49:>
new  <	; Goto 20>

460:
old  <	; Goto 20>
new  <	jmp scanPattern$20>

461:
old  <	jmp scanPattern$20>
new  <>

462:
old  <>
new  < scanPattern$50:>

463:
old  < scanPattern$50:>
new  <	; IntegralToIntegral Â£temporary1006 index>

464:
old  <	; IntegralToIntegral Â£temporary1005 index>
new  <	mov eax, [rbp + 44]>

465:
old  <	mov eax, [rbp + 44]>
new  <	mov rbx, 4294967295>

466:
old  <	mov rbx, 4294967295>
new  <	and rax, rbx>

467:
old  <	and rax, rbx>
new  <>

468:
old  <>
new  < scanPattern$51:>

469:
old  < scanPattern$51:>
new  <	; BinaryAdd Â£temporary1008 string Â£temporary1006>

470:
old  <	; BinaryAdd Â£temporary1007 string Â£temporary1005>
new  <	mov rsi, [rbp + 24]>

471:
old  <	mov rsi, [rbp + 24]>
new  <	add rsi, rax>

472:
old  <	add rsi, rax>
new  <>

473:
old  <>
new  < scanPattern$52:>

474:
old  < scanPattern$52:>
new  <	; Dereference Â£temporary1005 -> Â£temporary1008 Â£temporary1008 0>

475:
old  <	; Dereference Â£temporary1004 -> Â£temporary1007 Â£temporary1007 0>
new  <>

476:
old  <>
new  < scanPattern$53:>

477:
old  < scanPattern$53:>
new  <	; Assign Â£temporary1005 -> Â£temporary1008 0>

478:
old  <	; Assign Â£temporary1004 -> Â£temporary1007 0>
new  <	mov byte [rsi], 0>

479:
old  <	mov byte [rsi], 0>
new  <>

480:
old  <>
new  < scanPattern$54:>

481:
old  < scanPattern$54:>
new  <	; Goto 79>

482:
old  <	; Goto 79>
new  <	jmp scanPattern$79>

483:
old  <	jmp scanPattern$79>
new  <>

484:
old  <>
new  < scanPattern$55:>

485:
old  < scanPattern$55:>
new  <	; NotEqual 64 not 0>

486:
old  <	; NotEqual 64 not 0>
new  <	cmp dword [rbp + 40], 0>

487:
old  <	cmp dword [rbp + 40], 0>
new  <	jne scanPattern$64>

488:
old  <	jne scanPattern$64>
new  <>

489:
old  <>
new  < scanPattern$56:>

490:
old  < scanPattern$56:>
new  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

491:
old  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

492:
old  <>
new  < scanPattern$57:>

493:
old  < scanPattern$57:>
new  <	; Parameter pointer pattern 73>

494:
old  <	; Parameter pointer pattern 73>
new  <	mov rax, [rbp + 32]>

495:
old  <	mov rax, [rbp + 32]>
new  <	mov [rbp + 73], rax>

496:
old  <	mov [rbp + 73], rax>
new  <>

497:
old  <>
new  < scanPattern$58:>

498:
old  < scanPattern$58:>
new  <	; IntegralToIntegral Â£temporary1011 input>

499:
old  <	; IntegralToIntegral Â£temporary1010 input>
new  <	mov al, [rbp + 48]>

500:
old  <	mov al, [rbp + 48]>
new  <	and eax, 255>

501:
old  <	and eax, 255>
new  <	cmp al, 0>

502:
old  <	cmp al, 0>
new  <	jge scanPattern$59>

503:
old  <	jge scanPattern$59>
new  <	neg al>

504:
old  <	neg al>
new  <	neg eax>

505:
old  <	neg eax>
new  <>

506:
old  <>
new  < scanPattern$59:>

507:
old  < scanPattern$59:>
new  <	; Parameter signedint Â£temporary1011 81>

508:
old  <	; Parameter signedint Â£temporary1010 81>
new  <	mov [rbp + 81], eax>

509:
old  <	mov [rbp + 81], eax>
new  <>

510:
old  <>
new  < scanPattern$60:>

511:
old  < scanPattern$60:>
new  <	; Call strchr 49 0>

512:
old  <	; Call strchr 49 0>
new  <	mov qword [rbp + 49], scanPattern$61>

513:
old  <	mov qword [rbp + 49], scanPattern$61>
new  <	mov [rbp + 57], rbp>

514:
old  <	mov [rbp + 57], rbp>
new  <	add rbp, 49>

515:
old  <	add rbp, 49>
new  <	jmp strchr>

516:
old  <	jmp strchr>
new  <>

517:
old  <>
new  < scanPattern$61:>

518:
old  < scanPattern$61:>
new  <	; PostCall 49>

519:
old  <	; PostCall 49>
new  <>

520:
old  <>
new  < scanPattern$62:>

521:
old  < scanPattern$62:>
new  <	; GetReturnValue Â£temporary1012>

522:
old  <	; GetReturnValue Â£temporary1011>
new  <>

523:
old  <>
new  < scanPattern$63:>

524:
old  < scanPattern$63:>
new  <	; NotEqual 73 Â£temporary1012 0>

525:
old  <	; NotEqual 73 Â£temporary1011 0>
new  <	cmp rbx, 0>

526:
old  <	cmp rbx, 0>
new  <	jne scanPattern$73>

527:
old  <	jne scanPattern$73>
new  <>

528:
old  <>
new  < scanPattern$64:>

529:
old  < scanPattern$64:>
new  <	; Equal 79 not 0>

530:
old  <	; Equal 79 not 0>
new  <	cmp dword [rbp + 40], 0>

531:
old  <	cmp dword [rbp + 40], 0>
new  <	je scanPattern$79>

532:
old  <	je scanPattern$79>
new  <>

533:
old  <>
new  < scanPattern$65:>

534:
old  < scanPattern$65:>
new  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

535:
old  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

536:
old  <>
new  < scanPattern$66:>

537:
old  < scanPattern$66:>
new  <	; Parameter pointer pattern 73>

538:
old  <	; Parameter pointer pattern 73>
new  <	mov rax, [rbp + 32]>

539:
old  <	mov rax, [rbp + 32]>
new  <	mov [rbp + 73], rax>

540:
old  <	mov [rbp + 73], rax>
new  <>

541:
old  <>
new  < scanPattern$67:>

542:
old  < scanPattern$67:>
new  <	; IntegralToIntegral Â£temporary1015 input>

543:
old  <	; IntegralToIntegral Â£temporary1014 input>
new  <	mov al, [rbp + 48]>

544:
old  <	mov al, [rbp + 48]>
new  <	and eax, 255>

545:
old  <	and eax, 255>
new  <	cmp al, 0>

546:
old  <	cmp al, 0>
new  <	jge scanPattern$68>

547:
old  <	jge scanPattern$68>
new  <	neg al>

548:
old  <	neg al>
new  <	neg eax>

549:
old  <	neg eax>
new  <>

550:
old  <>
new  < scanPattern$68:>

551:
old  < scanPattern$68:>
new  <	; Parameter signedint Â£temporary1015 81>

552:
old  <	; Parameter signedint Â£temporary1014 81>
new  <	mov [rbp + 81], eax>

553:
old  <	mov [rbp + 81], eax>
new  <>

554:
old  <>
new  < scanPattern$69:>

555:
old  < scanPattern$69:>
new  <	; Call strchr 49 0>

556:
old  <	; Call strchr 49 0>
new  <	mov qword [rbp + 49], scanPattern$70>

557:
old  <	mov qword [rbp + 49], scanPattern$70>
new  <	mov [rbp + 57], rbp>

558:
old  <	mov [rbp + 57], rbp>
new  <	add rbp, 49>

559:
old  <	add rbp, 49>
new  <	jmp strchr>

560:
old  <	jmp strchr>
new  <>

561:
old  <>
new  < scanPattern$70:>

562:
old  < scanPattern$70:>
new  <	; PostCall 49>

563:
old  <	; PostCall 49>
new  <>

564:
old  <>
new  < scanPattern$71:>

565:
old  < scanPattern$71:>
new  <	; GetReturnValue Â£temporary1016>

566:
old  <	; GetReturnValue Â£temporary1015>
new  <>

567:
old  <>
new  < scanPattern$72:>

568:
old  < scanPattern$72:>
new  <	; NotEqual 79 Â£temporary1016 0>

569:
old  <	; NotEqual 79 Â£temporary1015 0>
new  <	cmp rbx, 0>

570:
old  <	cmp rbx, 0>
new  <	jne scanPattern$79>

571:
old  <	jne scanPattern$79>
new  <>

572:
old  <>
new  < scanPattern$73:>

573:
old  < scanPattern$73:>
new  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

574:
old  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

575:
old  <>
new  < scanPattern$74:>

576:
old  < scanPattern$74:>
new  <	; Call scanChar 49 0>

577:
old  <	; Call scanChar 49 0>
new  <	mov qword [rbp + 49], scanPattern$75>

578:
old  <	mov qword [rbp + 49], scanPattern$75>
new  <	mov [rbp + 57], rbp>

579:
old  <	mov [rbp + 57], rbp>
new  <	add rbp, 49>

580:
old  <	add rbp, 49>
new  <	jmp scanChar>

581:
old  <	jmp scanChar>
new  <>

582:
old  <>
new  < scanPattern$75:>

583:
old  < scanPattern$75:>
new  <	; PostCall 49>

584:
old  <	; PostCall 49>
new  <>

585:
old  <>
new  < scanPattern$76:>

586:
old  < scanPattern$76:>
new  <	; GetReturnValue Â£temporary1022>

587:
old  <	; GetReturnValue Â£temporary1021>
new  <>

588:
old  <>
new  < scanPattern$77:>

589:
old  < scanPattern$77:>
new  <	; Assign input Â£temporary1022>

590:
old  <	; Assign input Â£temporary1021>
new  <	mov [rbp + 48], bl>

591:
old  <	mov [rbp + 48], bl>
new  <>

592:
old  <>
new  < scanPattern$78:>

593:
old  < scanPattern$78:>
new  <	; Goto 55>

594:
old  <	; Goto 55>
new  <	jmp scanPattern$55>

595:
old  <	jmp scanPattern$55>
new  <>

596:
old  <>
new  < scanPattern$79:>

597:
old  < scanPattern$79:>
new  <	; Return>

598:
old  <	; Return>
new  <	mov rax, [rbp]>

599:
old  <	mov rax, [rbp]>
new  <	mov rdi, [rbp + 16]>

600:
old  <	mov rdi, [rbp + 16]>
new  <	mov rbp, [rbp + 8]>

601:
old  <	mov rbp, [rbp + 8]>
new  <	jmp rax>

602:
old  <	jmp rax>
new  <>

603:
old  <>
new  < scanPattern$80:>

604:
old  < scanPattern$80:>
new  <	; FunctionEnd scanPattern>

605:
old  <	; FunctionEnd scanPattern>
new  <>

606:
old  <>
new  <section .text>

607:
old  <section .text>
new  <>

608:
old  <>
new  < scanString:>

609:
old  < scanString:>
new  <	; Assign index 0>

610:
old  <	; Assign index 0>
new  <	mov dword [rbp + 36], 0>

611:
old  <	mov dword [rbp + 36], 0>
new  <>

612:
old  <>
new  < scanString$1:>

613:
old  < scanString$1:>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

614:
old  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

615:
old  <>
new  < scanString$2:>

616:
old  < scanString$2:>
new  <	; Call scanChar 40 0>

617:
old  <	; Call scanChar 40 0>
new  <	mov qword [rbp + 40], scanString$3>

618:
old  <	mov qword [rbp + 40], scanString$3>
new  <	mov [rbp + 48], rbp>

619:
old  <	mov [rbp + 48], rbp>
new  <	add rbp, 40>

620:
old  <	add rbp, 40>
new  <	jmp scanChar>

621:
old  <	jmp scanChar>
new  <>

622:
old  <>
new  < scanString$3:>

623:
old  < scanString$3:>
new  <	; PostCall 40>

624:
old  <	; PostCall 40>
new  <>

625:
old  <>
new  < scanString$4:>

626:
old  < scanString$4:>
new  <	; GetReturnValue Â£temporary1023>

627:
old  <	; GetReturnValue Â£temporary1022>
new  <>

628:
old  <>
new  < scanString$5:>

629:
old  < scanString$5:>
new  <	; Assign input Â£temporary1023>

630:
old  <	; Assign input Â£temporary1022>
new  <	mov [rbp + 40], bl>

631:
old  <	mov [rbp + 40], bl>
new  <>

632:
old  <>
new  < scanString$6:>

633:
old  < scanString$6:>
new  <	; Assign found 0>

634:
old  <	; Assign found 0>
new  <	mov dword [rbp + 41], 0>

635:
old  <	mov dword [rbp + 41], 0>
new  <>

636:
old  <>
new  < scanString$7:>

637:
old  < scanString$7:>
new  <	; PreCall 45 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

638:
old  <	; PreCall 45 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

639:
old  <>
new  < scanString$8:>

640:
old  < scanString$8:>
new  <	; IntegralToIntegral Â£temporary1024 input>

641:
old  <	; IntegralToIntegral Â£temporary1023 input>
new  <	mov al, [rbp + 40]>

642:
old  <	mov al, [rbp + 40]>
new  <	and eax, 255>

643:
old  <	and eax, 255>
new  <	cmp al, 0>

644:
old  <	cmp al, 0>
new  <	jge scanString$9>

645:
old  <	jge scanString$9>
new  <	neg al>

646:
old  <	neg al>
new  <	neg eax>

647:
old  <	neg eax>
new  <>

648:
old  <>
new  < scanString$9:>

649:
old  < scanString$9:>
new  <	; Parameter signedint Â£temporary1024 69>

650:
old  <	; Parameter signedint Â£temporary1023 69>
new  <	mov [rbp + 69], eax>

651:
old  <	mov [rbp + 69], eax>
new  <>

652:
old  <>
new  < scanString$10:>

653:
old  < scanString$10:>
new  <	; Call isspace 45 0>

654:
old  <	; Call isspace 45 0>
new  <	mov qword [rbp + 45], scanString$11>

655:
old  <	mov qword [rbp + 45], scanString$11>
new  <	mov [rbp + 53], rbp>

656:
old  <	mov [rbp + 53], rbp>
new  <	add rbp, 45>

657:
old  <	add rbp, 45>
new  <	jmp isspace>

658:
old  <	jmp isspace>
new  <>

659:
old  <>
new  < scanString$11:>

660:
old  < scanString$11:>
new  <	; PostCall 45>

661:
old  <	; PostCall 45>
new  <>

662:
old  <>
new  < scanString$12:>

663:
old  < scanString$12:>
new  <	; GetReturnValue Â£temporary1025>

664:
old  <	; GetReturnValue Â£temporary1024>
new  <>

665:
old  <>
new  < scanString$13:>

666:
old  < scanString$13:>
new  <	; Equal 20 Â£temporary1025 0>

667:
old  <	; Equal 20 Â£temporary1024 0>
new  <	cmp ebx, 0>

668:
old  <	cmp ebx, 0>
new  <	je scanString$20>

669:
old  <	je scanString$20>
new  <>

670:
old  <>
new  < scanString$14:>

671:
old  < scanString$14:>
new  <	; PreCall 45 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

672:
old  <	; PreCall 45 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

673:
old  <>
new  < scanString$15:>

674:
old  < scanString$15:>
new  <	; Call scanChar 45 0>

675:
old  <	; Call scanChar 45 0>
new  <	mov qword [rbp + 45], scanString$16>

676:
old  <	mov qword [rbp + 45], scanString$16>
new  <	mov [rbp + 53], rbp>

677:
old  <	mov [rbp + 53], rbp>
new  <	add rbp, 45>

678:
old  <	add rbp, 45>
new  <	jmp scanChar>

679:
old  <	jmp scanChar>
new  <>

680:
old  <>
new  < scanString$16:>

681:
old  < scanString$16:>
new  <	; PostCall 45>

682:
old  <	; PostCall 45>
new  <>

683:
old  <>
new  < scanString$17:>

684:
old  < scanString$17:>
new  <	; GetReturnValue Â£temporary1026>

685:
old  <	; GetReturnValue Â£temporary1025>
new  <>

686:
old  <>
new  < scanString$18:>

687:
old  < scanString$18:>
new  <	; Assign input Â£temporary1026>

688:
old  <	; Assign input Â£temporary1025>
new  <	mov [rbp + 40], bl>

689:
old  <	mov [rbp + 40], bl>
new  <>

690:
old  <>
new  < scanString$19:>

691:
old  < scanString$19:>
new  <	; Goto 7>

692:
old  <	; Goto 7>
new  <	jmp scanString$7>

693:
old  <	jmp scanString$7>
new  <>

694:
old  <>
new  < scanString$20:>

695:
old  < scanString$20:>
new  <	; Equal 86 string 0>

696:
old  <	; Equal 86 string 0>
new  <	cmp qword [rbp + 24], 0>

697:
old  <	cmp qword [rbp + 24], 0>
new  <	je scanString$86>

698:
old  <	je scanString$86>
new  <>

699:
old  <>
new  < scanString$21:>

700:
old  < scanString$21:>
new  <	; NotEqual 52 precision 0>

701:
old  <	; NotEqual 52 precision 0>
new  <	cmp dword [rbp + 32], 0>

702:
old  <	cmp dword [rbp + 32], 0>
new  <	jne scanString$52>

703:
old  <	jne scanString$52>
new  <>

704:
old  <>
new  < scanString$22:>

705:
old  < scanString$22:>
new  <	; PreCall 45 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

706:
old  <	; PreCall 45 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

707:
old  <>
new  < scanString$23:>

708:
old  < scanString$23:>
new  <	; IntegralToIntegral Â£temporary1030 input>

709:
old  <	; IntegralToIntegral Â£temporary1029 input>
new  <	mov al, [rbp + 40]>

710:
old  <	mov al, [rbp + 40]>
new  <	and eax, 255>

711:
old  <	and eax, 255>
new  <	cmp al, 0>

712:
old  <	cmp al, 0>
new  <	jge scanString$24>

713:
old  <	jge scanString$24>
new  <	neg al>

714:
old  <	neg al>
new  <	neg eax>

715:
old  <	neg eax>
new  <>

716:
old  <>
new  < scanString$24:>

717:
old  < scanString$24:>
new  <	; Parameter signedint Â£temporary1030 69>

718:
old  <	; Parameter signedint Â£temporary1029 69>
new  <	mov [rbp + 69], eax>

719:
old  <	mov [rbp + 69], eax>
new  <>

720:
old  <>
new  < scanString$25:>

721:
old  < scanString$25:>
new  <	; Call isspace 45 0>

722:
old  <	; Call isspace 45 0>
new  <	mov qword [rbp + 45], scanString$26>

723:
old  <	mov qword [rbp + 45], scanString$26>
new  <	mov [rbp + 53], rbp>

724:
old  <	mov [rbp + 53], rbp>
new  <	add rbp, 45>

725:
old  <	add rbp, 45>
new  <	jmp isspace>

726:
old  <	jmp isspace>
new  <>

727:
old  <>
new  < scanString$26:>

728:
old  < scanString$26:>
new  <	; PostCall 45>

729:
old  <	; PostCall 45>
new  <>

730:
old  <>
new  < scanString$27:>

731:
old  < scanString$27:>
new  <	; GetReturnValue Â£temporary1031>

732:
old  <	; GetReturnValue Â£temporary1030>
new  <>

733:
old  <>
new  < scanString$28:>

734:
old  < scanString$28:>
new  <	; NotEqual 46 Â£temporary1031 0>

735:
old  <	; NotEqual 46 Â£temporary1030 0>
new  <	cmp ebx, 0>

736:
old  <	cmp ebx, 0>
new  <	jne scanString$46>

737:
old  <	jne scanString$46>
new  <>

738:
old  <>
new  < scanString$29:>

739:
old  < scanString$29:>
new  <	; IntegralToIntegral Â£temporary1034 input>

740:
old  <	; IntegralToIntegral Â£temporary1033 input>
new  <	mov al, [rbp + 40]>

741:
old  <	mov al, [rbp + 40]>
new  <	and eax, 255>

742:
old  <	and eax, 255>
new  <	cmp al, 0>

743:
old  <	cmp al, 0>
new  <	jge scanString$30>

744:
old  <	jge scanString$30>
new  <	neg al>

745:
old  <	neg al>
new  <	neg eax>

746:
old  <	neg eax>
new  <>

747:
old  <>
new  < scanString$30:>

748:
old  < scanString$30:>
new  <	; Equal 46 Â£temporary1034 -1>

749:
old  <	; Equal 46 Â£temporary1033 -1>
new  <	cmp eax, -1>

750:
old  <	cmp eax, -1>
new  <	je scanString$46>

751:
old  <	je scanString$46>
new  <>

752:
old  <>
new  < scanString$31:>

753:
old  < scanString$31:>
new  <	; Equal 46 input 10>

754:
old  <	; Equal 46 input 10>
new  <	cmp byte [rbp + 40], 10>

755:
old  <	cmp byte [rbp + 40], 10>
new  <	je scanString$46>

756:
old  <	je scanString$46>
new  <>

757:
old  <>
new  < scanString$32:>

758:
old  < scanString$32:>
new  <	; Assign Â£temporary1039 index>

759:
old  <	; Assign Â£temporary1038 index>
new  <	mov eax, [rbp + 36]>

760:
old  <	mov eax, [rbp + 36]>
new  <>

761:
old  <>
new  < scanString$33:>

762:
old  < scanString$33:>
new  <	; BinaryAdd index index 1>

763:
old  <	; BinaryAdd index index 1>
new  <	inc dword [rbp + 36]>

764:
old  <	inc dword [rbp + 36]>
new  <>

765:
old  <>
new  < scanString$34:>

766:
old  < scanString$34:>
new  <	; IntegralToIntegral Â£temporary1041 Â£temporary1039>

767:
old  <	; IntegralToIntegral Â£temporary1040 Â£temporary1038>
new  <	mov rbx, 4294967295>

768:
old  <	mov rbx, 4294967295>
new  <	and rax, rbx>

769:
old  <	and rax, rbx>
new  <>

770:
old  <>
new  < scanString$35:>

771:
old  < scanString$35:>
new  <	; BinaryAdd Â£temporary1043 string Â£temporary1041>

772:
old  <	; BinaryAdd Â£temporary1042 string Â£temporary1040>
new  <	mov rsi, [rbp + 24]>

773:
old  <	mov rsi, [rbp + 24]>
new  <	add rsi, rax>

774:
old  <	add rsi, rax>
new  <>

775:
old  <>
new  < scanString$36:>

776:
old  < scanString$36:>
new  <	; Dereference Â£temporary1040 -> Â£temporary1043 Â£temporary1043 0>

777:
old  <	; Dereference Â£temporary1039 -> Â£temporary1042 Â£temporary1042 0>
new  <>

778:
old  <>
new  < scanString$37:>

779:
old  < scanString$37:>
new  <	; Assign Â£temporary1040 -> Â£temporary1043 input>

780:
old  <	; Assign Â£temporary1039 -> Â£temporary1042 input>
new  <	mov al, [rbp + 40]>

781:
old  <	mov al, [rbp + 40]>
new  <	mov [rsi], al>

782:
old  <	mov [rsi], al>
new  <>

783:
old  <>
new  < scanString$38:>

784:
old  < scanString$38:>
new  <	; PreCall 45 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

785:
old  <	; PreCall 45 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

786:
old  <>
new  < scanString$39:>

787:
old  < scanString$39:>
new  <	; Call scanChar 45 0>

788:
old  <	; Call scanChar 45 0>
new  <	mov qword [rbp + 45], scanString$40>

789:
old  <	mov qword [rbp + 45], scanString$40>
new  <	mov [rbp + 53], rbp>

790:
old  <	mov [rbp + 53], rbp>
new  <	add rbp, 45>

791:
old  <	add rbp, 45>
new  <	jmp scanChar>

792:
old  <	jmp scanChar>
new  <>

793:
old  <>
new  < scanString$40:>

794:
old  < scanString$40:>
new  <	; PostCall 45>

795:
old  <	; PostCall 45>
new  <>

796:
old  <>
new  < scanString$41:>

797:
old  < scanString$41:>
new  <	; GetReturnValue Â£temporary1044>

798:
old  <	; GetReturnValue Â£temporary1043>
new  <>

799:
old  <>
new  < scanString$42:>

800:
old  < scanString$42:>
new  <	; Assign input Â£temporary1044>

801:
old  <	; Assign input Â£temporary1043>
new  <	mov [rbp + 40], bl>

802:
old  <	mov [rbp + 40], bl>
new  <>

803:
old  <>
new  < scanString$43:>

804:
old  < scanString$43:>
new  <	; Assign found 1>

805:
old  <	; Assign found 1>
new  <	mov dword [rbp + 41], 1>

806:
old  <	mov dword [rbp + 41], 1>
new  <>

807:
old  <>
new  < scanString$44:>

808:
old  < scanString$44:>
new  <	; BinaryAdd g_inChars g_inChars 1>

809:
old  <	; BinaryAdd g_inChars g_inChars 1>
new  <	inc dword [g_inChars]>

810:
old  <	inc dword [g_inChars]>
new  <>

811:
old  <>
new  < scanString$45:>

812:
old  < scanString$45:>
new  <	; Goto 22>

813:
old  <	; Goto 22>
new  <	jmp scanString$22>

814:
old  <	jmp scanString$22>
new  <>

815:
old  <>
new  < scanString$46:>

816:
old  < scanString$46:>
new  <	; IntegralToIntegral Â£temporary1047 index>

817:
old  <	; IntegralToIntegral Â£temporary1046 index>
new  <	mov eax, [rbp + 36]>

818:
old  <	mov eax, [rbp + 36]>
new  <	mov rbx, 4294967295>

819:
old  <	mov rbx, 4294967295>
new  <	and rax, rbx>

820:
old  <	and rax, rbx>
new  <>

821:
old  <>
new  < scanString$47:>

822:
old  < scanString$47:>
new  <	; BinaryAdd Â£temporary1049 string Â£temporary1047>

823:
old  <	; BinaryAdd Â£temporary1048 string Â£temporary1046>
new  <	mov rsi, [rbp + 24]>

824:
old  <	mov rsi, [rbp + 24]>
new  <	add rsi, rax>

825:
old  <	add rsi, rax>
new  <>

826:
old  <>
new  < scanString$48:>

827:
old  < scanString$48:>
new  <	; Dereference Â£temporary1046 -> Â£temporary1049 Â£temporary1049 0>

828:
old  <	; Dereference Â£temporary1045 -> Â£temporary1048 Â£temporary1048 0>
new  <>

829:
old  <>
new  < scanString$49:>

830:
old  < scanString$49:>
new  <	; Assign Â£temporary1046 -> Â£temporary1049 0>

831:
old  <	; Assign Â£temporary1045 -> Â£temporary1048 0>
new  <	mov byte [rsi], 0>

832:
old  <	mov byte [rsi], 0>
new  <>

833:
old  <>
new  < scanString$50:>

834:
old  < scanString$50:>
new  <	; BinaryAdd g_inChars g_inChars 1>

835:
old  <	; BinaryAdd g_inChars g_inChars 1>
new  <	inc dword [g_inChars]>

836:
old  <	inc dword [g_inChars]>
new  <>

837:
old  <>
new  < scanString$51:>

838:
old  < scanString$51:>
new  <	; Goto 130>

839:
old  <	; Goto 130>
new  <	jmp scanString$130>

840:
old  <	jmp scanString$130>
new  <>

841:
old  <>
new  < scanString$52:>

842:
old  < scanString$52:>
new  <	; Assign Â£temporary1051 precision>

843:
old  <	; Assign Â£temporary1050 precision>
new  <	mov eax, [rbp + 32]>

844:
old  <	mov eax, [rbp + 32]>
new  <>

845:
old  <>
new  < scanString$53:>

846:
old  < scanString$53:>
new  <	; BinarySubtract precision precision 1>

847:
old  <	; BinarySubtract precision precision 1>
new  <	dec dword [rbp + 32]>

848:
old  <	dec dword [rbp + 32]>
new  <>

849:
old  <>
new  < scanString$54:>

850:
old  < scanString$54:>
new  <	; SignedLessThanEqual 79 Â£temporary1051 0>

851:
old  <	; SignedLessThanEqual 79 Â£temporary1050 0>
new  <	cmp eax, 0>

852:
old  <	cmp eax, 0>
new  <	jle scanString$79>

853:
old  <	jle scanString$79>
new  <>

854:
old  <>
new  < scanString$55:>

855:
old  < scanString$55:>
new  <	; PreCall 45 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

856:
old  <	; PreCall 45 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

857:
old  <>
new  < scanString$56:>

858:
old  < scanString$56:>
new  <	; IntegralToIntegral Â£temporary1053 input>

859:
old  <	; IntegralToIntegral Â£temporary1052 input>
new  <	mov al, [rbp + 40]>

860:
old  <	mov al, [rbp + 40]>
new  <	and eax, 255>

861:
old  <	and eax, 255>
new  <	cmp al, 0>

862:
old  <	cmp al, 0>
new  <	jge scanString$57>

863:
old  <	jge scanString$57>
new  <	neg al>

864:
old  <	neg al>
new  <	neg eax>

865:
old  <	neg eax>
new  <>

866:
old  <>
new  < scanString$57:>

867:
old  < scanString$57:>
new  <	; Parameter signedint Â£temporary1053 69>

868:
old  <	; Parameter signedint Â£temporary1052 69>
new  <	mov [rbp + 69], eax>

869:
old  <	mov [rbp + 69], eax>
new  <>

870:
old  <>
new  < scanString$58:>

871:
old  < scanString$58:>
new  <	; Call isspace 45 0>

872:
old  <	; Call isspace 45 0>
new  <	mov qword [rbp + 45], scanString$59>

873:
old  <	mov qword [rbp + 45], scanString$59>
new  <	mov [rbp + 53], rbp>

874:
old  <	mov [rbp + 53], rbp>
new  <	add rbp, 45>

875:
old  <	add rbp, 45>
new  <	jmp isspace>

876:
old  <	jmp isspace>
new  <>

877:
old  <>
new  < scanString$59:>

878:
old  < scanString$59:>
new  <	; PostCall 45>

879:
old  <	; PostCall 45>
new  <>

880:
old  <>
new  < scanString$60:>

881:
old  < scanString$60:>
new  <	; GetReturnValue Â£temporary1054>

882:
old  <	; GetReturnValue Â£temporary1053>
new  <>

883:
old  <>
new  < scanString$61:>

884:
old  < scanString$61:>
new  <	; NotEqual 79 Â£temporary1054 0>

885:
old  <	; NotEqual 79 Â£temporary1053 0>
new  <	cmp ebx, 0>

886:
old  <	cmp ebx, 0>
new  <	jne scanString$79>

887:
old  <	jne scanString$79>
new  <>

888:
old  <>
new  < scanString$62:>

889:
old  < scanString$62:>
new  <	; IntegralToIntegral Â£temporary1057 input>

890:
old  <	; IntegralToIntegral Â£temporary1056 input>
new  <	mov al, [rbp + 40]>

891:
old  <	mov al, [rbp + 40]>
new  <	and eax, 255>

892:
old  <	and eax, 255>
new  <	cmp al, 0>

893:
old  <	cmp al, 0>
new  <	jge scanString$63>

894:
old  <	jge scanString$63>
new  <	neg al>

895:
old  <	neg al>
new  <	neg eax>

896:
old  <	neg eax>
new  <>

897:
old  <>
new  < scanString$63:>

898:
old  < scanString$63:>
new  <	; Equal 79 Â£temporary1057 -1>

899:
old  <	; Equal 79 Â£temporary1056 -1>
new  <	cmp eax, -1>

900:
old  <	cmp eax, -1>
new  <	je scanString$79>

901:
old  <	je scanString$79>
new  <>

902:
old  <>
new  < scanString$64:>

903:
old  < scanString$64:>
new  <	; Equal 79 input 10>

904:
old  <	; Equal 79 input 10>
new  <	cmp byte [rbp + 40], 10>

905:
old  <	cmp byte [rbp + 40], 10>
new  <	je scanString$79>

906:
old  <	je scanString$79>
new  <>

907:
old  <>
new  < scanString$65:>

908:
old  < scanString$65:>
new  <	; Assign Â£temporary1063 index>

909:
old  <	; Assign Â£temporary1062 index>
new  <	mov eax, [rbp + 36]>

910:
old  <	mov eax, [rbp + 36]>
new  <>

911:
old  <>
new  < scanString$66:>

912:
old  < scanString$66:>
new  <	; BinaryAdd index index 1>

913:
old  <	; BinaryAdd index index 1>
new  <	inc dword [rbp + 36]>

914:
old  <	inc dword [rbp + 36]>
new  <>

915:
old  <>
new  < scanString$67:>

916:
old  < scanString$67:>
new  <	; IntegralToIntegral Â£temporary1065 Â£temporary1063>

917:
old  <	; IntegralToIntegral Â£temporary1064 Â£temporary1062>
new  <	mov rbx, 4294967295>

918:
old  <	mov rbx, 4294967295>
new  <	and rax, rbx>

919:
old  <	and rax, rbx>
new  <>

920:
old  <>
new  < scanString$68:>

921:
old  < scanString$68:>
new  <	; BinaryAdd Â£temporary1067 string Â£temporary1065>

922:
old  <	; BinaryAdd Â£temporary1066 string Â£temporary1064>
new  <	mov rsi, [rbp + 24]>

923:
old  <	mov rsi, [rbp + 24]>
new  <	add rsi, rax>

924:
old  <	add rsi, rax>
new  <>

925:
old  <>
new  < scanString$69:>

926:
old  < scanString$69:>
new  <	; Dereference Â£temporary1064 -> Â£temporary1067 Â£temporary1067 0>

927:
old  <	; Dereference Â£temporary1063 -> Â£temporary1066 Â£temporary1066 0>
new  <>

928:
old  <>
new  < scanString$70:>

929:
old  < scanString$70:>
new  <	; Assign Â£temporary1064 -> Â£temporary1067 input>

930:
old  <	; Assign Â£temporary1063 -> Â£temporary1066 input>
new  <	mov al, [rbp + 40]>

931:
old  <	mov al, [rbp + 40]>
new  <	mov [rsi], al>

932:
old  <	mov [rsi], al>
new  <>

933:
old  <>
new  < scanString$71:>

934:
old  < scanString$71:>
new  <	; PreCall 45 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

935:
old  <	; PreCall 45 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

936:
old  <>
new  < scanString$72:>

937:
old  < scanString$72:>
new  <	; Call scanChar 45 0>

938:
old  <	; Call scanChar 45 0>
new  <	mov qword [rbp + 45], scanString$73>

939:
old  <	mov qword [rbp + 45], scanString$73>
new  <	mov [rbp + 53], rbp>

940:
old  <	mov [rbp + 53], rbp>
new  <	add rbp, 45>

941:
old  <	add rbp, 45>
new  <	jmp scanChar>

942:
old  <	jmp scanChar>
new  <>

943:
old  <>
new  < scanString$73:>

944:
old  < scanString$73:>
new  <	; PostCall 45>

945:
old  <	; PostCall 45>
new  <>

946:
old  <>
new  < scanString$74:>

947:
old  < scanString$74:>
new  <	; GetReturnValue Â£temporary1068>

948:
old  <	; GetReturnValue Â£temporary1067>
new  <>

949:
old  <>
new  < scanString$75:>

950:
old  < scanString$75:>
new  <	; Assign input Â£temporary1068>

951:
old  <	; Assign input Â£temporary1067>
new  <	mov [rbp + 40], bl>

952:
old  <	mov [rbp + 40], bl>
new  <>

953:
old  <>
new  < scanString$76:>

954:
old  < scanString$76:>
new  <	; Assign found 1>

955:
old  <	; Assign found 1>
new  <	mov dword [rbp + 41], 1>

956:
old  <	mov dword [rbp + 41], 1>
new  <>

957:
old  <>
new  < scanString$77:>

958:
old  < scanString$77:>
new  <	; BinaryAdd g_inChars g_inChars 1>

959:
old  <	; BinaryAdd g_inChars g_inChars 1>
new  <	inc dword [g_inChars]>

960:
old  <	inc dword [g_inChars]>
new  <>

961:
old  <>
new  < scanString$78:>

962:
old  < scanString$78:>
new  <	; Goto 52>

963:
old  <	; Goto 52>
new  <	jmp scanString$52>

964:
old  <	jmp scanString$52>
new  <>

965:
old  <>
new  < scanString$79:>

966:
old  < scanString$79:>
new  <	; SignedLessThanEqual 130 precision 0>

967:
old  <	; SignedLessThanEqual 130 precision 0>
new  <	cmp dword [rbp + 32], 0>

968:
old  <	cmp dword [rbp + 32], 0>
new  <	jle scanString$130>

969:
old  <	jle scanString$130>
new  <>

970:
old  <>
new  < scanString$80:>

971:
old  < scanString$80:>
new  <	; IntegralToIntegral Â£temporary1072 index>

972:
old  <	; IntegralToIntegral Â£temporary1071 index>
new  <	mov eax, [rbp + 36]>

973:
old  <	mov eax, [rbp + 36]>
new  <	mov rbx, 4294967295>

974:
old  <	mov rbx, 4294967295>
new  <	and rax, rbx>

975:
old  <	and rax, rbx>
new  <>

976:
old  <>
new  < scanString$81:>

977:
old  < scanString$81:>
new  <	; BinaryAdd Â£temporary1074 string Â£temporary1072>

978:
old  <	; BinaryAdd Â£temporary1073 string Â£temporary1071>
new  <	mov rsi, [rbp + 24]>

979:
old  <	mov rsi, [rbp + 24]>
new  <	add rsi, rax>

980:
old  <	add rsi, rax>
new  <>

981:
old  <>
new  < scanString$82:>

982:
old  < scanString$82:>
new  <	; Dereference Â£temporary1071 -> Â£temporary1074 Â£temporary1074 0>

983:
old  <	; Dereference Â£temporary1070 -> Â£temporary1073 Â£temporary1073 0>
new  <>

984:
old  <>
new  < scanString$83:>

985:
old  < scanString$83:>
new  <	; Assign Â£temporary1071 -> Â£temporary1074 0>

986:
old  <	; Assign Â£temporary1070 -> Â£temporary1073 0>
new  <	mov byte [rsi], 0>

987:
old  <	mov byte [rsi], 0>
new  <>

988:
old  <>
new  < scanString$84:>

989:
old  < scanString$84:>
new  <	; BinaryAdd g_inChars g_inChars 1>

990:
old  <	; BinaryAdd g_inChars g_inChars 1>
new  <	inc dword [g_inChars]>

991:
old  <	inc dword [g_inChars]>
new  <>

992:
old  <>
new  < scanString$85:>

993:
old  < scanString$85:>
new  <	; Goto 130>

994:
old  <	; Goto 130>
new  <	jmp scanString$130>

995:
old  <	jmp scanString$130>
new  <>

996:
old  <>
new  < scanString$86:>

997:
old  < scanString$86:>
new  <	; NotEqual 107 precision 0>

998:
old  <	; NotEqual 107 precision 0>
new  <	cmp dword [rbp + 32], 0>

999:
old  <	cmp dword [rbp + 32], 0>
new  <	jne scanString$107>

1000:
old  <	jne scanString$107>
new  <>

1001:
old  <>
new  < scanString$87:>

1002:
old  < scanString$87:>
new  <	; PreCall 45 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1003:
old  <	; PreCall 45 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1004:
old  <>
new  < scanString$88:>

1005:
old  < scanString$88:>
new  <	; IntegralToIntegral Â£temporary1077 input>

1006:
old  <	; IntegralToIntegral Â£temporary1076 input>
new  <	mov al, [rbp + 40]>

1007:
old  <	mov al, [rbp + 40]>
new  <	and eax, 255>

1008:
old  <	and eax, 255>
new  <	cmp al, 0>

1009:
old  <	cmp al, 0>
new  <	jge scanString$89>

1010:
old  <	jge scanString$89>
new  <	neg al>

1011:
old  <	neg al>
new  <	neg eax>

1012:
old  <	neg eax>
new  <>

1013:
old  <>
new  < scanString$89:>

1014:
old  < scanString$89:>
new  <	; Parameter signedint Â£temporary1077 69>

1015:
old  <	; Parameter signedint Â£temporary1076 69>
new  <	mov [rbp + 69], eax>

1016:
old  <	mov [rbp + 69], eax>
new  <>

1017:
old  <>
new  < scanString$90:>

1018:
old  < scanString$90:>
new  <	; Call isspace 45 0>

1019:
old  <	; Call isspace 45 0>
new  <	mov qword [rbp + 45], scanString$91>

1020:
old  <	mov qword [rbp + 45], scanString$91>
new  <	mov [rbp + 53], rbp>

1021:
old  <	mov [rbp + 53], rbp>
new  <	add rbp, 45>

1022:
old  <	add rbp, 45>
new  <	jmp isspace>

1023:
old  <	jmp isspace>
new  <>

1024:
old  <>
new  < scanString$91:>

1025:
old  < scanString$91:>
new  <	; PostCall 45>

1026:
old  <	; PostCall 45>
new  <>

1027:
old  <>
new  < scanString$92:>

1028:
old  < scanString$92:>
new  <	; GetReturnValue Â£temporary1078>

1029:
old  <	; GetReturnValue Â£temporary1077>
new  <>

1030:
old  <>
new  < scanString$93:>

1031:
old  < scanString$93:>
new  <	; NotEqual 105 Â£temporary1078 0>

1032:
old  <	; NotEqual 105 Â£temporary1077 0>
new  <	cmp ebx, 0>

1033:
old  <	cmp ebx, 0>
new  <	jne scanString$105>

1034:
old  <	jne scanString$105>
new  <>

1035:
old  <>
new  < scanString$94:>

1036:
old  < scanString$94:>
new  <	; IntegralToIntegral Â£temporary1081 input>

1037:
old  <	; IntegralToIntegral Â£temporary1080 input>
new  <	mov al, [rbp + 40]>

1038:
old  <	mov al, [rbp + 40]>
new  <	and eax, 255>

1039:
old  <	and eax, 255>
new  <	cmp al, 0>

1040:
old  <	cmp al, 0>
new  <	jge scanString$95>

1041:
old  <	jge scanString$95>
new  <	neg al>

1042:
old  <	neg al>
new  <	neg eax>

1043:
old  <	neg eax>
new  <>

1044:
old  <>
new  < scanString$95:>

1045:
old  < scanString$95:>
new  <	; Equal 105 Â£temporary1081 -1>

1046:
old  <	; Equal 105 Â£temporary1080 -1>
new  <	cmp eax, -1>

1047:
old  <	cmp eax, -1>
new  <	je scanString$105>

1048:
old  <	je scanString$105>
new  <>

1049:
old  <>
new  < scanString$96:>

1050:
old  < scanString$96:>
new  <	; Equal 105 input 10>

1051:
old  <	; Equal 105 input 10>
new  <	cmp byte [rbp + 40], 10>

1052:
old  <	cmp byte [rbp + 40], 10>
new  <	je scanString$105>

1053:
old  <	je scanString$105>
new  <>

1054:
old  <>
new  < scanString$97:>

1055:
old  < scanString$97:>
new  <	; PreCall 45 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1056:
old  <	; PreCall 45 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1057:
old  <>
new  < scanString$98:>

1058:
old  < scanString$98:>
new  <	; Call scanChar 45 0>

1059:
old  <	; Call scanChar 45 0>
new  <	mov qword [rbp + 45], scanString$99>

1060:
old  <	mov qword [rbp + 45], scanString$99>
new  <	mov [rbp + 53], rbp>

1061:
old  <	mov [rbp + 53], rbp>
new  <	add rbp, 45>

1062:
old  <	add rbp, 45>
new  <	jmp scanChar>

1063:
old  <	jmp scanChar>
new  <>

1064:
old  <>
new  < scanString$99:>

1065:
old  < scanString$99:>
new  <	; PostCall 45>

1066:
old  <	; PostCall 45>
new  <>

1067:
old  <>
new  < scanString$100:>

1068:
old  < scanString$100:>
new  <	; GetReturnValue Â£temporary1086>

1069:
old  <	; GetReturnValue Â£temporary1085>
new  <>

1070:
old  <>
new  < scanString$101:>

1071:
old  < scanString$101:>
new  <	; Assign input Â£temporary1086>

1072:
old  <	; Assign input Â£temporary1085>
new  <	mov [rbp + 40], bl>

1073:
old  <	mov [rbp + 40], bl>
new  <>

1074:
old  <>
new  < scanString$102:>

1075:
old  < scanString$102:>
new  <	; Assign found 1>

1076:
old  <	; Assign found 1>
new  <	mov dword [rbp + 41], 1>

1077:
old  <	mov dword [rbp + 41], 1>
new  <>

1078:
old  <>
new  < scanString$103:>

1079:
old  < scanString$103:>
new  <	; BinaryAdd g_inChars g_inChars 1>

1080:
old  <	; BinaryAdd g_inChars g_inChars 1>
new  <	inc dword [g_inChars]>

1081:
old  <	inc dword [g_inChars]>
new  <>

1082:
old  <>
new  < scanString$104:>

1083:
old  < scanString$104:>
new  <	; Goto 87>

1084:
old  <	; Goto 87>
new  <	jmp scanString$87>

1085:
old  <	jmp scanString$87>
new  <>

1086:
old  <>
new  < scanString$105:>

1087:
old  < scanString$105:>
new  <	; BinaryAdd g_inChars g_inChars 1>

1088:
old  <	; BinaryAdd g_inChars g_inChars 1>
new  <	inc dword [g_inChars]>

1089:
old  <	inc dword [g_inChars]>
new  <>

1090:
old  <>
new  < scanString$106:>

1091:
old  < scanString$106:>
new  <	; Goto 130>

1092:
old  <	; Goto 130>
new  <	jmp scanString$130>

1093:
old  <	jmp scanString$130>
new  <>

1094:
old  <>
new  < scanString$107:>

1095:
old  < scanString$107:>
new  <	; Assign Â£temporary1089 precision>

1096:
old  <	; Assign Â£temporary1088 precision>
new  <	mov eax, [rbp + 32]>

1097:
old  <	mov eax, [rbp + 32]>
new  <>

1098:
old  <>
new  < scanString$108:>

1099:
old  < scanString$108:>
new  <	; BinarySubtract precision precision 1>

1100:
old  <	; BinarySubtract precision precision 1>
new  <	dec dword [rbp + 32]>

1101:
old  <	dec dword [rbp + 32]>
new  <>

1102:
old  <>
new  < scanString$109:>

1103:
old  < scanString$109:>
new  <	; SignedLessThanEqual 128 Â£temporary1089 0>

1104:
old  <	; SignedLessThanEqual 128 Â£temporary1088 0>
new  <	cmp eax, 0>

1105:
old  <	cmp eax, 0>
new  <	jle scanString$128>

1106:
old  <	jle scanString$128>
new  <>

1107:
old  <>
new  < scanString$110:>

1108:
old  < scanString$110:>
new  <	; PreCall 45 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1109:
old  <	; PreCall 45 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1110:
old  <>
new  < scanString$111:>

1111:
old  < scanString$111:>
new  <	; IntegralToIntegral Â£temporary1091 input>

1112:
old  <	; IntegralToIntegral Â£temporary1090 input>
new  <	mov al, [rbp + 40]>

1113:
old  <	mov al, [rbp + 40]>
new  <	and eax, 255>

1114:
old  <	and eax, 255>
new  <	cmp al, 0>

1115:
old  <	cmp al, 0>
new  <	jge scanString$112>

1116:
old  <	jge scanString$112>
new  <	neg al>

1117:
old  <	neg al>
new  <	neg eax>

1118:
old  <	neg eax>
new  <>

1119:
old  <>
new  < scanString$112:>

1120:
old  < scanString$112:>
new  <	; Parameter signedint Â£temporary1091 69>

1121:
old  <	; Parameter signedint Â£temporary1090 69>
new  <	mov [rbp + 69], eax>

1122:
old  <	mov [rbp + 69], eax>
new  <>

1123:
old  <>
new  < scanString$113:>

1124:
old  < scanString$113:>
new  <	; Call isspace 45 0>

1125:
old  <	; Call isspace 45 0>
new  <	mov qword [rbp + 45], scanString$114>

1126:
old  <	mov qword [rbp + 45], scanString$114>
new  <	mov [rbp + 53], rbp>

1127:
old  <	mov [rbp + 53], rbp>
new  <	add rbp, 45>

1128:
old  <	add rbp, 45>
new  <	jmp isspace>

1129:
old  <	jmp isspace>
new  <>

1130:
old  <>
new  < scanString$114:>

1131:
old  < scanString$114:>
new  <	; PostCall 45>

1132:
old  <	; PostCall 45>
new  <>

1133:
old  <>
new  < scanString$115:>

1134:
old  < scanString$115:>
new  <	; GetReturnValue Â£temporary1092>

1135:
old  <	; GetReturnValue Â£temporary1091>
new  <>

1136:
old  <>
new  < scanString$116:>

1137:
old  < scanString$116:>
new  <	; NotEqual 128 Â£temporary1092 0>

1138:
old  <	; NotEqual 128 Â£temporary1091 0>
new  <	cmp ebx, 0>

1139:
old  <	cmp ebx, 0>
new  <	jne scanString$128>

1140:
old  <	jne scanString$128>
new  <>

1141:
old  <>
new  < scanString$117:>

1142:
old  < scanString$117:>
new  <	; IntegralToIntegral Â£temporary1095 input>

1143:
old  <	; IntegralToIntegral Â£temporary1094 input>
new  <	mov al, [rbp + 40]>

1144:
old  <	mov al, [rbp + 40]>
new  <	and eax, 255>

1145:
old  <	and eax, 255>
new  <	cmp al, 0>

1146:
old  <	cmp al, 0>
new  <	jge scanString$118>

1147:
old  <	jge scanString$118>
new  <	neg al>

1148:
old  <	neg al>
new  <	neg eax>

1149:
old  <	neg eax>
new  <>

1150:
old  <>
new  < scanString$118:>

1151:
old  < scanString$118:>
new  <	; Equal 128 Â£temporary1095 -1>

1152:
old  <	; Equal 128 Â£temporary1094 -1>
new  <	cmp eax, -1>

1153:
old  <	cmp eax, -1>
new  <	je scanString$128>

1154:
old  <	je scanString$128>
new  <>

1155:
old  <>
new  < scanString$119:>

1156:
old  < scanString$119:>
new  <	; Equal 128 input 10>

1157:
old  <	; Equal 128 input 10>
new  <	cmp byte [rbp + 40], 10>

1158:
old  <	cmp byte [rbp + 40], 10>
new  <	je scanString$128>

1159:
old  <	je scanString$128>
new  <>

1160:
old  <>
new  < scanString$120:>

1161:
old  < scanString$120:>
new  <	; PreCall 45 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1162:
old  <	; PreCall 45 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1163:
old  <>
new  < scanString$121:>

1164:
old  < scanString$121:>
new  <	; Call scanChar 45 0>

1165:
old  <	; Call scanChar 45 0>
new  <	mov qword [rbp + 45], scanString$122>

1166:
old  <	mov qword [rbp + 45], scanString$122>
new  <	mov [rbp + 53], rbp>

1167:
old  <	mov [rbp + 53], rbp>
new  <	add rbp, 45>

1168:
old  <	add rbp, 45>
new  <	jmp scanChar>

1169:
old  <	jmp scanChar>
new  <>

1170:
old  <>
new  < scanString$122:>

1171:
old  < scanString$122:>
new  <	; PostCall 45>

1172:
old  <	; PostCall 45>
new  <>

1173:
old  <>
new  < scanString$123:>

1174:
old  < scanString$123:>
new  <	; GetReturnValue Â£temporary1101>

1175:
old  <	; GetReturnValue Â£temporary1100>
new  <>

1176:
old  <>
new  < scanString$124:>

1177:
old  < scanString$124:>
new  <	; Assign input Â£temporary1101>

1178:
old  <	; Assign input Â£temporary1100>
new  <	mov [rbp + 40], bl>

1179:
old  <	mov [rbp + 40], bl>
new  <>

1180:
old  <>
new  < scanString$125:>

1181:
old  < scanString$125:>
new  <	; Assign found 1>

1182:
old  <	; Assign found 1>
new  <	mov dword [rbp + 41], 1>

1183:
old  <	mov dword [rbp + 41], 1>
new  <>

1184:
old  <>
new  < scanString$126:>

1185:
old  < scanString$126:>
new  <	; BinaryAdd g_inChars g_inChars 1>

1186:
old  <	; BinaryAdd g_inChars g_inChars 1>
new  <	inc dword [g_inChars]>

1187:
old  <	inc dword [g_inChars]>
new  <>

1188:
old  <>
new  < scanString$127:>

1189:
old  < scanString$127:>
new  <	; Goto 107>

1190:
old  <	; Goto 107>
new  <	jmp scanString$107>

1191:
old  <	jmp scanString$107>
new  <>

1192:
old  <>
new  < scanString$128:>

1193:
old  < scanString$128:>
new  <	; SignedLessThanEqual 130 precision 0>

1194:
old  <	; SignedLessThanEqual 130 precision 0>
new  <	cmp dword [rbp + 32], 0>

1195:
old  <	cmp dword [rbp + 32], 0>
new  <	jle scanString$130>

1196:
old  <	jle scanString$130>
new  <>

1197:
old  <>
new  < scanString$129:>

1198:
old  < scanString$129:>
new  <	; BinaryAdd g_inChars g_inChars 1>

1199:
old  <	; BinaryAdd g_inChars g_inChars 1>
new  <	inc dword [g_inChars]>

1200:
old  <	inc dword [g_inChars]>
new  <>

1201:
old  <>
new  < scanString$130:>

1202:
old  < scanString$130:>
new  <	; Equal 132 found 0>

1203:
old  <	; Equal 132 found 0>
new  <	cmp dword [rbp + 41], 0>

1204:
old  <	cmp dword [rbp + 41], 0>
new  <	je scanString$132>

1205:
old  <	je scanString$132>
new  <>

1206:
old  <>
new  < scanString$131:>

1207:
old  < scanString$131:>
new  <	; BinaryAdd g_inCount g_inCount 1>

1208:
old  <	; BinaryAdd g_inCount g_inCount 1>
new  <	inc dword [g_inCount]>

1209:
old  <	inc dword [g_inCount]>
new  <>

1210:
old  <>
new  < scanString$132:>

1211:
old  < scanString$132:>
new  <	; Return>

1212:
old  <	; Return>
new  <	mov rax, [rbp]>

1213:
old  <	mov rax, [rbp]>
new  <	mov rdi, [rbp + 16]>

1214:
old  <	mov rdi, [rbp + 16]>
new  <	mov rbp, [rbp + 8]>

1215:
old  <	mov rbp, [rbp + 8]>
new  <	jmp rax>

1216:
old  <	jmp rax>
new  <>

1217:
old  <>
new  < scanString$133:>

1218:
old  < scanString$133:>
new  <	; FunctionEnd scanString>

1219:
old  <	; FunctionEnd scanString>
new  <>

1220:
old  <>
new  <section .text>

1221:
old  <section .text>
new  <>

1222:
old  <>
new  < @2888$isDigitInBase:>

1223:
old  < digitToValue:>
new  <	; PreCall 29 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1224:
old  <	; PreCall 25 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1225:
old  <>
new  < @2888$isDigitInBase$1:>

1226:
old  < digitToValue$1:>
new  <	; IntegralToIntegral Â£temporary1107 c>

1227:
old  <	; IntegralToIntegral Â£temporary1106 input>
new  <	mov al, [rbp + 24]>

1228:
old  <	mov al, [rbp + 24]>
new  <	and eax, 255>

1229:
old  <	and eax, 255>
new  <	cmp al, 0>

1230:
old  <	cmp al, 0>
new  <	jge @2888$isDigitInBase$2>

1231:
old  <	jge digitToValue$2>
new  <	neg al>

1232:
old  <	neg al>
new  <	neg eax>

1233:
old  <	neg eax>
new  <>

1234:
old  <>
new  < @2888$isDigitInBase$2:>

1235:
old  < digitToValue$2:>
new  <	; Parameter signedint Â£temporary1107 53>

1236:
old  <	; Parameter signedint Â£temporary1106 49>
new  <	mov [rbp + 53], eax>

1237:
old  <	mov [rbp + 49], eax>
new  <>

1238:
old  <>
new  < @2888$isDigitInBase$3:>

1239:
old  < digitToValue$3:>
new  <	; Call isdigit 29 0>

1240:
old  <	; Call isdigit 25 0>
new  <	mov qword [rbp + 29], @2888$isDigitInBase$4>

1241:
old  <	mov qword [rbp + 25], digitToValue$4>
new  <	mov [rbp + 37], rbp>

1242:
old  <	mov [rbp + 33], rbp>
new  <	add rbp, 29>

1243:
old  <	add rbp, 25>
new  <	jmp isdigit>

1244:
old  <	jmp isdigit>
new  <>

1245:
old  <>
new  < @2888$isDigitInBase$4:>

1246:
old  < digitToValue$4:>
new  <	; PostCall 29>

1247:
old  <	; PostCall 25>
new  <>

1248:
old  <>
new  < @2888$isDigitInBase$5:>

1249:
old  < digitToValue$5:>
new  <	; GetReturnValue Â£temporary1108>

1250:
old  <	; GetReturnValue Â£temporary1107>
new  <>

1251:
old  <>
new  < @2888$isDigitInBase$6:>

1252:
old  < digitToValue$6:>
new  <	; Equal 16 Â£temporary1108 0>

1253:
old  <	; Equal 10 Â£temporary1107 0>
new  <	cmp ebx, 0>

1254:
old  <	cmp ebx, 0>
new  <	je @2888$isDigitInBase$16>

1255:
old  <	je digitToValue$10>
new  <>

1256:
old  <>
new  < @2888$isDigitInBase$7:>

1257:
old  < digitToValue$7:>
new  <	; BinarySubtract Â£temporary1109 c 48>

1258:
old  <	; BinarySubtract Â£temporary1108 input 48>
new  <	mov al, [rbp + 24]>

1259:
old  <	mov bl, [rbp + 24]>
new  <	sub al, 48>

1260:
old  <	sub bl, 48>
new  <>

1261:
old  <>
new  < @2888$isDigitInBase$8:>

1262:
old  < digitToValue$8:>
new  <	; IntegralToIntegral Â£temporary1110 Â£temporary1109>

1263:
old  <	; IntegralToIntegral Â£temporary1109 Â£temporary1108>
new  <	and eax, 255>

1264:
old  <	mov rax, 255>
new  <	cmp al, 0>

1265:
old  <	and rbx, rax>
new  <	jge @2888$isDigitInBase$9>

1266:
old  <>
new  <	neg al>

1267:
old  < digitToValue$9:>
new  <	neg eax>

1268:
old  <	; Return Â£temporary1109>
new  <>

1269:
old  <	mov rax, [rbp]>
new  < @2888$isDigitInBase$9:>

1270:
old  <	mov rdi, [rbp + 16]>
new  <	; Assign value Â£temporary1110>

1271:
old  <	mov rbp, [rbp + 8]>
new  <	mov [rbp + 29], eax>

1272:
old  <	jmp rax>
new  <>

1273:
old  <>
new  < @2888$isDigitInBase$10:>

1274:
old  < digitToValue$10:>
new  <	; SignedLessThan 14 value 0>

1275:
old  <	; PreCall 25 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	cmp dword [rbp + 29], 0>

1276:
old  <>
new  <	jl @2888$isDigitInBase$14>

1277:
old  < digitToValue$11:>
new  <>

1278:
old  <	; IntegralToIntegral Â£temporary1110 input>
new  < @2888$isDigitInBase$11:>

1279:
old  <	mov al, [rbp + 24]>
new  <	; SignedGreaterThanEqual 14 value base>

1280:
old  <	and eax, 255>
new  <	mov eax, [rbp + 25]>

1281:
old  <	cmp al, 0>
new  <	cmp [rbp + 29], eax>

1282:
old  <	jge digitToValue$12>
new  <	jge @2888$isDigitInBase$14>

1283:
old  <	neg al>
new  <>

1284:
old  <	neg eax>
new  < @2888$isDigitInBase$12:>

1285:
old  <>
new  <	; Assign Â£temporary1114 1>

1286:
old  < digitToValue$12:>
new  <	mov ebx, 1>

1287:
old  <	; Parameter signedint Â£temporary1110 49>
new  <>

1288:
old  <	mov [rbp + 49], eax>
new  < @2888$isDigitInBase$13:>

1289:
old  <>
new  <	; Goto 15>

1290:
old  < digitToValue$13:>
new  <	jmp @2888$isDigitInBase$15>

1291:
old  <	; Call islower 25 0>
new  <>

1292:
old  <	mov qword [rbp + 25], digitToValue$14>
new  < @2888$isDigitInBase$14:>

1293:
old  <	mov [rbp + 33], rbp>
new  <	; Assign Â£temporary1114 0>

1294:
old  <	add rbp, 25>
new  <	mov ebx, 0>

1295:
old  <	jmp islower>
new  <>

1296:
old  <>
new  < @2888$isDigitInBase$15:>

1297:
old  < digitToValue$14:>
new  <	; Return Â£temporary1114>

1298:
old  <	; PostCall 25>
new  <	mov rax, [rbp]>

1299:
old  <>
new  <	mov rdi, [rbp + 16]>

1300:
old  < digitToValue$15:>
new  <	mov rbp, [rbp + 8]>

1301:
old  <	; GetReturnValue Â£temporary1111>
new  <	jmp rax>

1303:
old  < digitToValue$16:>
new  < @2888$isDigitInBase$16:>

1304:
old  <	; Equal 21 Â£temporary1111 0>
new  <	; PreCall 29 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1305:
old  <	cmp ebx, 0>
new  <>

1306:
old  <	je digitToValue$21>
new  < @2888$isDigitInBase$17:>

1307:
old  <>
new  <	; IntegralToIntegral Â£temporary1115 c>

1308:
old  < digitToValue$17:>
new  <	mov al, [rbp + 24]>

1309:
old  <	; BinarySubtract Â£temporary1112 input 97>
new  <	and eax, 255>

1310:
old  <	mov bl, [rbp + 24]>
new  <	cmp al, 0>

1311:
old  <	sub bl, 97>
new  <	jge @2888$isDigitInBase$18>

1312:
old  <>
new  <	neg al>

1313:
old  < digitToValue$18:>
new  <	neg eax>

1314:
old  <	; IntegralToIntegral Â£temporary1113 Â£temporary1112>
new  <>

1315:
old  <	mov rax, 255>
new  < @2888$isDigitInBase$18:>

1316:
old  <	and rbx, rax>
new  <	; Parameter signedint Â£temporary1115 53>

1317:
old  <>
new  <	mov [rbp + 53], eax>

1318:
old  < digitToValue$19:>
new  <>

1319:
old  <	; BinaryAdd Â£temporary1114 Â£temporary1113 10>
new  < @2888$isDigitInBase$19:>

1320:
old  <	add rbx, 10>
new  <	; Call islower 29 0>

1321:
old  <>
new  <	mov qword [rbp + 29], @2888$isDigitInBase$20>

1322:
old  < digitToValue$20:>
new  <	mov [rbp + 37], rbp>

1323:
old  <	; Return Â£temporary1114>
new  <	add rbp, 29>

1324:
old  <	mov rax, [rbp]>
new  <	jmp islower>

1325:
old  <	mov rdi, [rbp + 16]>
new  <>

1326:
old  <	mov rbp, [rbp + 8]>
new  < @2888$isDigitInBase$20:>

1327:
old  <	jmp rax>
new  <	; PostCall 29>

1329:
old  < digitToValue$21:>
new  < @2888$isDigitInBase$21:>

1330:
old  <	; BinarySubtract Â£temporary1115 input 65>
new  <	; GetReturnValue Â£temporary1116>

1331:
old  <	mov bl, [rbp + 24]>
new  <>

1332:
old  <	sub bl, 65>
new  < @2888$isDigitInBase$22:>

1333:
old  <>
new  <	; Equal 32 Â£temporary1116 0>

1334:
old  < digitToValue$22:>
new  <	cmp ebx, 0>

1335:
old  <	; IntegralToIntegral Â£temporary1116 Â£temporary1115>
new  <	je @2888$isDigitInBase$32>

1336:
old  <	mov rax, 255>
new  <>

1337:
old  <	and rbx, rax>
new  < @2888$isDigitInBase$23:>

1338:
old  <>
new  <	; BinarySubtract Â£temporary1117 c 97>

1339:
old  < digitToValue$23:>
new  <	mov al, [rbp + 24]>

1340:
old  <	; BinaryAdd Â£temporary1117 Â£temporary1116 10>
new  <	sub al, 97>

1341:
old  <	add rbx, 10>
new  <>

1342:
old  <>
new  < @2888$isDigitInBase$24:>

1343:
old  < digitToValue$24:>
new  <	; IntegralToIntegral Â£temporary1118 Â£temporary1117>

1344:
old  <	; Return Â£temporary1117>
new  <	and eax, 255>

1345:
old  <	mov rax, [rbp]>
new  <	cmp al, 0>

1346:
old  <	mov rdi, [rbp + 16]>
new  <	jge @2888$isDigitInBase$25>

1347:
old  <	mov rbp, [rbp + 8]>
new  <	neg al>

1348:
old  <	jmp rax>
new  <	neg eax>

1350:
old  < digitToValue$25:>
new  < @2888$isDigitInBase$25:>

1351:
old  <	; FunctionEnd digitToValue>
new  <	; BinaryAdd value Â£temporary1118 10>

1352:
old  <>
new  <	add eax, 10>

1353:
old  <section .data>
new  <	mov [rbp + 29], eax>

1355:
old  <int8$10#:>
new  < @2888$isDigitInBase$26:>

1356:
old  <	; Initializer Signed_Long_Int 10>
new  <	; SignedLessThan 30 value 0>

1357:
old  <	dq 10>
new  <	cmp dword [rbp + 29], 0>

1358:
old  <>
new  <	jl @2888$isDigitInBase$30>

1359:
old  <section .text>
new  <>

1360:
old  <>
new  < @2888$isDigitInBase$27:>

1361:
old  < scanLongInt:>
new  <	; SignedGreaterThanEqual 30 value base>

1362:
old  <	; Assign longValue 0>
new  <	mov eax, [rbp + 25]>

1363:
old  <	mov qword [rbp + 24], 0>
new  <	cmp [rbp + 29], eax>

1364:
old  <>
new  <	jge @2888$isDigitInBase$30>

1365:
old  < scanLongInt$1:>
new  <>

1366:
old  <	; Assign minus 0>
new  < @2888$isDigitInBase$28:>

1367:
old  <	mov dword [rbp + 32], 0>
new  <	; Assign Â£temporary1123 1>

1368:
old  <>
new  <	mov ebx, 1>

1369:
old  < scanLongInt$2:>
new  <>

1370:
old  <	; Assign found 0>
new  < @2888$isDigitInBase$29:>

1371:
old  <	mov dword [rbp + 36], 0>
new  <	; Goto 31>

1372:
old  <>
new  <	jmp @2888$isDigitInBase$31>

1373:
old  < scanLongInt$3:>
new  <>

1374:
old  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < @2888$isDigitInBase$30:>

1375:
old  <>
new  <	; Assign Â£temporary1123 0>

1376:
old  < scanLongInt$4:>
new  <	mov ebx, 0>

1377:
old  <	; Call scanChar 40 0>
new  <>

1378:
old  <	mov qword [rbp + 40], scanLongInt$5>
new  < @2888$isDigitInBase$31:>

1379:
old  <	mov [rbp + 48], rbp>
new  <	; Return Â£temporary1123>

1380:
old  <	add rbp, 40>
new  <	mov rax, [rbp]>

1381:
old  <	jmp scanChar>
new  <	mov rdi, [rbp + 16]>

1382:
old  <>
new  <	mov rbp, [rbp + 8]>

1383:
old  < scanLongInt$5:>
new  <	jmp rax>

1384:
old  <	; PostCall 40>
new  <>

1385:
old  <>
new  < @2888$isDigitInBase$32:>

1386:
old  < scanLongInt$6:>
new  <	; PreCall 29 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1387:
old  <	; GetReturnValue Â£temporary1120>
new  <>

1388:
old  <>
new  < @2888$isDigitInBase$33:>

1389:
old  < scanLongInt$7:>
new  <	; IntegralToIntegral Â£temporary1124 c>

1390:
old  <	; Assign input Â£temporary1120>
new  <	mov al, [rbp + 24]>

1391:
old  <	mov [rbp + 40], bl>
new  <	and eax, 255>

1392:
old  <>
new  <	cmp al, 0>

1393:
old  < scanLongInt$8:>
new  <	jge @2888$isDigitInBase$34>

1394:
old  <	; PreCall 41 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	neg al>

1395:
old  <>
new  <	neg eax>

1396:
old  < scanLongInt$9:>
new  <>

1397:
old  <	; IntegralToIntegral Â£temporary1121 input>
new  < @2888$isDigitInBase$34:>

1398:
old  <	mov al, [rbp + 40]>
new  <	; Parameter signedint Â£temporary1124 53>

1399:
old  <	and eax, 255>
new  <	mov [rbp + 53], eax>

1400:
old  <	cmp al, 0>
new  <>

1401:
old  <	jge scanLongInt$10>
new  < @2888$isDigitInBase$35:>

1402:
old  <	neg al>
new  <	; Call isupper 29 0>

1403:
old  <	neg eax>
new  <	mov qword [rbp + 29], @2888$isDigitInBase$36>

1404:
old  <>
new  <	mov [rbp + 37], rbp>

1405:
old  < scanLongInt$10:>
new  <	add rbp, 29>

1406:
old  <	; Parameter signedint Â£temporary1121 65>
new  <	jmp isupper>

1407:
old  <	mov [rbp + 65], eax>
new  <>

1408:
old  <>
new  < @2888$isDigitInBase$36:>

1409:
old  < scanLongInt$11:>
new  <	; PostCall 29>

1410:
old  <	; Call isspace 41 0>
new  <>

1411:
old  <	mov qword [rbp + 41], scanLongInt$12>
new  < @2888$isDigitInBase$37:>

1412:
old  <	mov [rbp + 49], rbp>
new  <	; GetReturnValue Â£temporary1125>

1413:
old  <	add rbp, 41>
new  <>

1414:
old  <	jmp isspace>
new  < @2888$isDigitInBase$38:>

1415:
old  <>
new  <	; Equal 48 Â£temporary1125 0>

1416:
old  < scanLongInt$12:>
new  <	cmp ebx, 0>

1417:
old  <	; PostCall 41>
new  <	je @2888$isDigitInBase$48>

1419:
old  < scanLongInt$13:>
new  < @2888$isDigitInBase$39:>

1420:
old  <	; GetReturnValue Â£temporary1122>
new  <	; BinarySubtract Â£temporary1126 c 65>

1421:
old  <>
new  <	mov al, [rbp + 24]>

1422:
old  < scanLongInt$14:>
new  <	sub al, 65>

1423:
old  <	; Equal 21 Â£temporary1122 0>
new  <>

1424:
old  <	cmp ebx, 0>
new  < @2888$isDigitInBase$40:>

1425:
old  <	je scanLongInt$21>
new  <	; IntegralToIntegral Â£temporary1127 Â£temporary1126>

1426:
old  <>
new  <	and eax, 255>

1427:
old  < scanLongInt$15:>
new  <	cmp al, 0>

1428:
old  <	; PreCall 41 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	jge @2888$isDigitInBase$41>

1429:
old  <>
new  <	neg al>

1430:
old  < scanLongInt$16:>
new  <	neg eax>

1431:
old  <	; Call scanChar 41 0>
new  <>

1432:
old  <	mov qword [rbp + 41], scanLongInt$17>
new  < @2888$isDigitInBase$41:>

1433:
old  <	mov [rbp + 49], rbp>
new  <	; BinaryAdd value Â£temporary1127 10>

1434:
old  <	add rbp, 41>
new  <	add eax, 10>

1435:
old  <	jmp scanChar>
new  <	mov [rbp + 29], eax>

1437:
old  < scanLongInt$17:>
new  < @2888$isDigitInBase$42:>

1438:
old  <	; PostCall 41>
new  <	; SignedLessThan 46 value 0>

1439:
old  <>
new  <	cmp dword [rbp + 29], 0>

1440:
old  < scanLongInt$18:>
new  <	jl @2888$isDigitInBase$46>

1441:
old  <	; GetReturnValue Â£temporary1123>
new  <>

1442:
old  <>
new  < @2888$isDigitInBase$43:>

1443:
old  < scanLongInt$19:>
new  <	; SignedGreaterThanEqual 46 value base>

1444:
old  <	; Assign input Â£temporary1123>
new  <	mov eax, [rbp + 25]>

1445:
old  <	mov [rbp + 40], bl>
new  <	cmp [rbp + 29], eax>

1446:
old  <>
new  <	jge @2888$isDigitInBase$46>

1447:
old  < scanLongInt$20:>
new  <>

1448:
old  <	; Goto 8>
new  < @2888$isDigitInBase$44:>

1449:
old  <	jmp scanLongInt$8>
new  <	; Assign Â£temporary1132 1>

1450:
old  <>
new  <	mov ebx, 1>

1451:
old  < scanLongInt$21:>
new  <>

1452:
old  <	; NotEqual 28 input 43>
new  < @2888$isDigitInBase$45:>

1453:
old  <	cmp byte [rbp + 40], 43>
new  <	; Goto 47>

1454:
old  <	jne scanLongInt$28>
new  <	jmp @2888$isDigitInBase$47>

1456:
old  < scanLongInt$22:>
new  < @2888$isDigitInBase$46:>

1457:
old  <	; PreCall 41 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Assign Â£temporary1132 0>

1458:
old  <>
new  <	mov ebx, 0>

1459:
old  < scanLongInt$23:>
new  <>

1460:
old  <	; Call scanChar 41 0>
new  < @2888$isDigitInBase$47:>

1461:
old  <	mov qword [rbp + 41], scanLongInt$24>
new  <	; Return Â£temporary1132>

1462:
old  <	mov [rbp + 49], rbp>
new  <	mov rax, [rbp]>

1463:
old  <	add rbp, 41>
new  <	mov rdi, [rbp + 16]>

1464:
old  <	jmp scanChar>
new  <	mov rbp, [rbp + 8]>

1465:
old  <>
new  <	jmp rax>

1466:
old  < scanLongInt$24:>
new  <>

1467:
old  <	; PostCall 41>
new  < @2888$isDigitInBase$48:>

1468:
old  <>
new  <	; Return 0>

1469:
old  < scanLongInt$25:>
new  <	mov ebx, 0>

1470:
old  <	; GetReturnValue Â£temporary1126>
new  <	mov rax, [rbp]>

1471:
old  <>
new  <	mov rdi, [rbp + 16]>

1472:
old  < scanLongInt$26:>
new  <	mov rbp, [rbp + 8]>

1473:
old  <	; Assign input Â£temporary1126>
new  <	jmp rax>

1474:
old  <	mov [rbp + 40], bl>
new  <>

1475:
old  <>
new  < @2888$isDigitInBase$49:>

1476:
old  < scanLongInt$27:>
new  <	; FunctionEnd isDigitInBase>

1477:
old  <	; Goto 35>
new  <>

1478:
old  <	jmp scanLongInt$35>
new  <section .text>

1480:
old  < scanLongInt$28:>
new  < @2896$digitToValue:>

1481:
old  <	; NotEqual 35 input 45>
new  <	; PreCall 25 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1482:
old  <	cmp byte [rbp + 40], 45>
new  <>

1483:
old  <	jne scanLongInt$35>
new  < @2896$digitToValue$1:>

1484:
old  <>
new  <	; IntegralToIntegral Â£temporary1136 c>

1485:
old  < scanLongInt$29:>
new  <	mov al, [rbp + 24]>

1486:
old  <	; Assign minus 1>
new  <	and eax, 255>

1487:
old  <	mov dword [rbp + 32], 1>
new  <	cmp al, 0>

1488:
old  <>
new  <	jge @2896$digitToValue$2>

1489:
old  < scanLongInt$30:>
new  <	neg al>

1490:
old  <	; PreCall 41 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	neg eax>

1492:
old  < scanLongInt$31:>
new  < @2896$digitToValue$2:>

1493:
old  <	; Call scanChar 41 0>
new  <	; Parameter signedint Â£temporary1136 49>

1494:
old  <	mov qword [rbp + 41], scanLongInt$32>
new  <	mov [rbp + 49], eax>

1495:
old  <	mov [rbp + 49], rbp>
new  <>

1496:
old  <	add rbp, 41>
new  < @2896$digitToValue$3:>

1497:
old  <	jmp scanChar>
new  <	; Call isdigit 25 0>

1498:
old  <>
new  <	mov qword [rbp + 25], @2896$digitToValue$4>

1499:
old  < scanLongInt$32:>
new  <	mov [rbp + 33], rbp>

1500:
old  <	; PostCall 41>
new  <	add rbp, 25>

1501:
old  <>
new  <	jmp isdigit>

1502:
old  < scanLongInt$33:>
new  <>

1503:
old  <	; GetReturnValue Â£temporary1128>
new  < @2896$digitToValue$4:>

1504:
old  <>
new  <	; PostCall 25>

1505:
old  < scanLongInt$34:>
new  <>

1506:
old  <	; Assign input Â£temporary1128>
new  < @2896$digitToValue$5:>

1507:
old  <	mov [rbp + 40], bl>
new  <	; GetReturnValue Â£temporary1137>

1509:
old  < scanLongInt$35:>
new  < @2896$digitToValue$6:>

1510:
old  <	; PreCall 41 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Equal 10 Â£temporary1137 0>

1511:
old  <>
new  <	cmp ebx, 0>

1512:
old  < scanLongInt$36:>
new  <	je @2896$digitToValue$10>

1513:
old  <	; IntegralToIntegral Â£temporary1129 input>
new  <>

1514:
old  <	mov al, [rbp + 40]>
new  < @2896$digitToValue$7:>

1515:
old  <	and eax, 255>
new  <	; BinarySubtract Â£temporary1138 c 48>

1516:
old  <	cmp al, 0>
new  <	mov bl, [rbp + 24]>

1517:
old  <	jge scanLongInt$37>
new  <	sub bl, 48>

1518:
old  <	neg al>
new  <>

1519:
old  <	neg eax>
new  < @2896$digitToValue$8:>

1520:
old  <>
new  <	; IntegralToIntegral Â£temporary1139 Â£temporary1138>

1521:
old  < scanLongInt$37:>
new  <	and ebx, 255>

1522:
old  <	; Parameter signedint Â£temporary1129 65>
new  <	cmp bl, 0>

1523:
old  <	mov [rbp + 65], eax>
new  <	jge @2896$digitToValue$9>

1524:
old  <>
new  <	neg bl>

1525:
old  < scanLongInt$38:>
new  <	neg ebx>

1526:
old  <	; Call isdigit 41 0>
new  <>

1527:
old  <	mov qword [rbp + 41], scanLongInt$39>
new  < @2896$digitToValue$9:>

1528:
old  <	mov [rbp + 49], rbp>
new  <	; Return Â£temporary1139>

1529:
old  <	add rbp, 41>
new  <	mov rax, [rbp]>

1530:
old  <	jmp isdigit>
new  <	mov rdi, [rbp + 16]>

1531:
old  <>
new  <	mov rbp, [rbp + 8]>

1532:
old  < scanLongInt$39:>
new  <	jmp rax>

1533:
old  <	; PostCall 41>
new  <>

1534:
old  <>
new  < @2896$digitToValue$10:>

1535:
old  < scanLongInt$40:>
new  <	; PreCall 25 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1536:
old  <	; GetReturnValue Â£temporary1130>
new  <>

1537:
old  <>
new  < @2896$digitToValue$11:>

1538:
old  < scanLongInt$41:>
new  <	; IntegralToIntegral Â£temporary1140 c>

1539:
old  <	; Equal 53 Â£temporary1130 0>
new  <	mov al, [rbp + 24]>

1540:
old  <	cmp ebx, 0>
new  <	and eax, 255>

1541:
old  <	je scanLongInt$53>
new  <	cmp al, 0>

1542:
old  <>
new  <	jge @2896$digitToValue$12>

1543:
old  < scanLongInt$42:>
new  <	neg al>

1544:
old  <	; SignedMultiply Â£temporary1131 longValue 10>
new  <	neg eax>

1545:
old  <	mov rax, [rbp + 24]>
new  <>

1546:
old  <	xor rdx, rdx>
new  < @2896$digitToValue$12:>

1547:
old  <	imul qword [int8$10#]>
new  <	; Parameter signedint Â£temporary1140 49>

1548:
old  <>
new  <	mov [rbp + 49], eax>

1549:
old  < scanLongInt$43:>
new  <>

1550:
old  <	; BinarySubtract Â£temporary1132 input 48>
new  < @2896$digitToValue$13:>

1551:
old  <	mov bl, [rbp + 40]>
new  <	; Call islower 25 0>

1552:
old  <	sub bl, 48>
new  <	mov qword [rbp + 25], @2896$digitToValue$14>

1553:
old  <>
new  <	mov [rbp + 33], rbp>

1554:
old  < scanLongInt$44:>
new  <	add rbp, 25>

1555:
old  <	; IntegralToIntegral Â£temporary1133 Â£temporary1132>
new  <	jmp islower>

1556:
old  <	mov rcx, 255>
new  <>

1557:
old  <	and rbx, rcx>
new  < @2896$digitToValue$14:>

1558:
old  <	cmp bl, 0>
new  <	; PostCall 25>

1559:
old  <	jge scanLongInt$45>
new  <>

1560:
old  <	neg bl>
new  < @2896$digitToValue$15:>

1561:
old  <	neg rbx>
new  <	; GetReturnValue Â£temporary1141>

1563:
old  < scanLongInt$45:>
new  < @2896$digitToValue$16:>

1564:
old  <	; BinaryAdd longValue Â£temporary1131 Â£temporary1133>
new  <	; Equal 21 Â£temporary1141 0>

1565:
old  <	add rax, rbx>
new  <	cmp ebx, 0>

1566:
old  <	mov [rbp + 24], rax>
new  <	je @2896$digitToValue$21>

1568:
old  < scanLongInt$46:>
new  < @2896$digitToValue$17:>

1569:
old  <	; PreCall 41 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; BinarySubtract Â£temporary1142 c 97>

1570:
old  <>
new  <	mov bl, [rbp + 24]>

1571:
old  < scanLongInt$47:>
new  <	sub bl, 97>

1572:
old  <	; Call scanChar 41 0>
new  <>

1573:
old  <	mov qword [rbp + 41], scanLongInt$48>
new  < @2896$digitToValue$18:>

1574:
old  <	mov [rbp + 49], rbp>
new  <	; IntegralToIntegral Â£temporary1143 Â£temporary1142>

1575:
old  <	add rbp, 41>
new  <	and ebx, 255>

1576:
old  <	jmp scanChar>
new  <	cmp bl, 0>

1577:
old  <>
new  <	jge @2896$digitToValue$19>

1578:
old  < scanLongInt$48:>
new  <	neg bl>

1579:
old  <	; PostCall 41>
new  <	neg ebx>

1581:
old  < scanLongInt$49:>
new  < @2896$digitToValue$19:>

1582:
old  <	; GetReturnValue Â£temporary1135>
new  <	; BinaryAdd Â£temporary1144 Â£temporary1143 10>

1583:
old  <>
new  <	add ebx, 10>

1584:
old  < scanLongInt$50:>
new  <>

1585:
old  <	; Assign input Â£temporary1135>
new  < @2896$digitToValue$20:>

1586:
old  <	mov [rbp + 40], bl>
new  <	; Return Â£temporary1144>

1587:
old  <>
new  <	mov rax, [rbp]>

1588:
old  < scanLongInt$51:>
new  <	mov rdi, [rbp + 16]>

1589:
old  <	; Assign found 1>
new  <	mov rbp, [rbp + 8]>

1590:
old  <	mov dword [rbp + 36], 1>
new  <	jmp rax>

1592:
old  < scanLongInt$52:>
new  < @2896$digitToValue$21:>

1593:
old  <	; Goto 35>
new  <	; PreCall 25 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1594:
old  <	jmp scanLongInt$35>
new  <>

1595:
old  <>
new  < @2896$digitToValue$22:>

1596:
old  < scanLongInt$53:>
new  <	; IntegralToIntegral Â£temporary1145 c>

1597:
old  <	; Equal 56 minus 0>
new  <	mov al, [rbp + 24]>

1598:
old  <	cmp dword [rbp + 32], 0>
new  <	and eax, 255>

1599:
old  <	je scanLongInt$56>
new  <	cmp al, 0>

1600:
old  <>
new  <	jge @2896$digitToValue$23>

1601:
old  < scanLongInt$54:>
new  <	neg al>

1602:
old  <	; UnarySubtract Â£temporary1137 longValue>
new  <	neg eax>

1603:
old  <	mov rax, [rbp + 24]>
new  <>

1604:
old  <	neg rax>
new  < @2896$digitToValue$23:>

1605:
old  <>
new  <	; Parameter signedint Â£temporary1145 49>

1606:
old  < scanLongInt$55:>
new  <	mov [rbp + 49], eax>

1607:
old  <	; Assign longValue Â£temporary1137>
new  <>

1608:
old  <	mov [rbp + 24], rax>
new  < @2896$digitToValue$24:>

1609:
old  <>
new  <	; Call isupper 25 0>

1610:
old  < scanLongInt$56:>
new  <	mov qword [rbp + 25], @2896$digitToValue$25>

1611:
old  <	; Equal 58 found 0>
new  <	mov [rbp + 33], rbp>

1612:
old  <	cmp dword [rbp + 36], 0>
new  <	add rbp, 25>

1613:
old  <	je scanLongInt$58>
new  <	jmp isupper>

1615:
old  < scanLongInt$57:>
new  < @2896$digitToValue$25:>

1616:
old  <	; BinaryAdd g_inCount g_inCount 1>
new  <	; PostCall 25>

1617:
old  <	inc dword [g_inCount]>
new  <>

1618:
old  <>
new  < @2896$digitToValue$26:>

1619:
old  < scanLongInt$58:>
new  <	; GetReturnValue Â£temporary1146>

1620:
old  <	; PreCall 41 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1621:
old  <>
new  < @2896$digitToValue$27:>

1622:
old  < scanLongInt$59:>
new  <	; Equal 32 Â£temporary1146 0>

1623:
old  <	; Parameter signedchar input 65>
new  <	cmp ebx, 0>

1624:
old  <	mov al, [rbp + 40]>
new  <	je @2896$digitToValue$32>

1625:
old  <	mov [rbp + 65], al>
new  <>

1626:
old  <>
new  < @2896$digitToValue$28:>

1627:
old  < scanLongInt$60:>
new  <	; BinarySubtract Â£temporary1147 c 65>

1628:
old  <	; Call unscanChar 41 0>
new  <	mov bl, [rbp + 24]>

1629:
old  <	mov qword [rbp + 41], scanLongInt$61>
new  <	sub bl, 65>

1630:
old  <	mov [rbp + 49], rbp>
new  <>

1631:
old  <	add rbp, 41>
new  < @2896$digitToValue$29:>

1632:
old  <	jmp unscanChar>
new  <	; IntegralToIntegral Â£temporary1148 Â£temporary1147>

1633:
old  <>
new  <	and ebx, 255>

1634:
old  < scanLongInt$61:>
new  <	cmp bl, 0>

1635:
old  <	; PostCall 41>
new  <	jge @2896$digitToValue$30>

1636:
old  <>
new  <	neg bl>

1637:
old  < scanLongInt$62:>
new  <	neg ebx>

1638:
old  <	; Return longValue>
new  <>

1639:
old  <	mov rbx, [rbp + 24]>
new  < @2896$digitToValue$30:>

1640:
old  <	mov rax, [rbp]>
new  <	; BinaryAdd Â£temporary1149 Â£temporary1148 10>

1641:
old  <	mov rdi, [rbp + 16]>
new  <	add ebx, 10>

1642:
old  <	mov rbp, [rbp + 8]>
new  <>

1643:
old  <	jmp rax>
new  < @2896$digitToValue$31:>

1644:
old  <>
new  <	; Return Â£temporary1149>

1645:
old  < scanLongInt$63:>
new  <	mov rax, [rbp]>

1646:
old  <	; FunctionEnd scanLongInt>
new  <	mov rdi, [rbp + 16]>

1647:
old  <>
new  <	mov rbp, [rbp + 8]>

1648:
old  <section .text>
new  <	jmp rax>

1650:
old  < scanUnsignedLongInt:>
new  < @2896$digitToValue$32:>

1651:
old  <	; Assign unsignedLongValue 0>
new  <	; Return 0>

1652:
old  <	mov qword [rbp + 32], 0>
new  <	mov ebx, 0>

1653:
old  <>
new  <	mov rax, [rbp]>

1654:
old  < scanUnsignedLongInt$1:>
new  <	mov rdi, [rbp + 16]>

1655:
old  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov rbp, [rbp + 8]>

1656:
old  <>
new  <	jmp rax>

1657:
old  < scanUnsignedLongInt$2:>
new  <>

1658:
old  <	; Call scanChar 48 0>
new  < @2896$digitToValue$33:>

1659:
old  <	mov qword [rbp + 48], scanUnsignedLongInt$3>
new  <	; FunctionEnd digitToValue>

1660:
old  <	mov [rbp + 56], rbp>
new  <>

1661:
old  <	add rbp, 48>
new  <section .text>

1662:
old  <	jmp scanChar>
new  <>

1663:
old  <>
new  < scanLongInt:>

1664:
old  < scanUnsignedLongInt$3:>
new  <	; Assign longValue 0>

1665:
old  <	; PostCall 48>
new  <	mov qword [rbp + 28], 0>

1667:
old  < scanUnsignedLongInt$4:>
new  < scanLongInt$1:>

1668:
old  <	; GetReturnValue Â£temporary1142>
new  <	; Assign minus 0>

1669:
old  <>
new  <	mov dword [rbp + 36], 0>

1670:
old  < scanUnsignedLongInt$5:>
new  <>

1671:
old  <	; Assign input Â£temporary1142>
new  < scanLongInt$2:>

1672:
old  <	mov [rbp + 48], bl>
new  <	; Assign found 0>

1673:
old  <>
new  <	mov dword [rbp + 40], 0>

1674:
old  < scanUnsignedLongInt$6:>
new  <>

1675:
old  <	; Assign found 1>
new  < scanLongInt$3:>

1676:
old  <	mov dword [rbp + 49], 1>
new  <	; PreCall 44 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1678:
old  < scanUnsignedLongInt$7:>
new  < scanLongInt$4:>

1679:
old  <	; PreCall 53 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Call scanChar 44 0>

1680:
old  <>
new  <	mov qword [rbp + 44], scanLongInt$5>

1681:
old  < scanUnsignedLongInt$8:>
new  <	mov [rbp + 52], rbp>

1682:
old  <	; IntegralToIntegral Â£temporary1143 input>
new  <	add rbp, 44>

1683:
old  <	mov al, [rbp + 48]>
new  <	jmp scanChar>

1684:
old  <	and eax, 255>
new  <>

1685:
old  <	cmp al, 0>
new  < scanLongInt$5:>

1686:
old  <	jge scanUnsignedLongInt$9>
new  <	; PostCall 44>

1687:
old  <	neg al>
new  <>

1688:
old  <	neg eax>
new  < scanLongInt$6:>

1689:
old  <>
new  <	; GetReturnValue Â£temporary1153>

1690:
old  < scanUnsignedLongInt$9:>
new  <>

1691:
old  <	; Parameter signedint Â£temporary1143 77>
new  < scanLongInt$7:>

1692:
old  <	mov [rbp + 77], eax>
new  <	; Assign input Â£temporary1153>

1693:
old  <>
new  <	mov [rbp + 44], bl>

1694:
old  < scanUnsignedLongInt$10:>
new  <>

1695:
old  <	; Call isspace 53 0>
new  < scanLongInt$8:>

1696:
old  <	mov qword [rbp + 53], scanUnsignedLongInt$11>
new  <	; PreCall 45 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1697:
old  <	mov [rbp + 61], rbp>
new  <>

1698:
old  <	add rbp, 53>
new  < scanLongInt$9:>

1699:
old  <	jmp isspace>
new  <	; IntegralToIntegral Â£temporary1154 input>

1700:
old  <>
new  <	mov al, [rbp + 44]>

1701:
old  < scanUnsignedLongInt$11:>
new  <	and eax, 255>

1702:
old  <	; PostCall 53>
new  <	cmp al, 0>

1703:
old  <>
new  <	jge scanLongInt$10>

1704:
old  < scanUnsignedLongInt$12:>
new  <	neg al>

1705:
old  <	; GetReturnValue Â£temporary1144>
new  <	neg eax>

1707:
old  < scanUnsignedLongInt$13:>
new  < scanLongInt$10:>

1708:
old  <	; Equal 20 Â£temporary1144 0>
new  <	; Parameter signedint Â£temporary1154 69>

1709:
old  <	cmp ebx, 0>
new  <	mov [rbp + 69], eax>

1710:
old  <	je scanUnsignedLongInt$20>
new  <>

1711:
old  <>
new  < scanLongInt$11:>

1712:
old  < scanUnsignedLongInt$14:>
new  <	; Call isspace 45 0>

1713:
old  <	; PreCall 53 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov qword [rbp + 45], scanLongInt$12>

1714:
old  <>
new  <	mov [rbp + 53], rbp>

1715:
old  < scanUnsignedLongInt$15:>
new  <	add rbp, 45>

1716:
old  <	; Call scanChar 53 0>
new  <	jmp isspace>

1717:
old  <	mov qword [rbp + 53], scanUnsignedLongInt$16>
new  <>

1718:
old  <	mov [rbp + 61], rbp>
new  < scanLongInt$12:>

1719:
old  <	add rbp, 53>
new  <	; PostCall 45>

1720:
old  <	jmp scanChar>
new  <>

1721:
old  <>
new  < scanLongInt$13:>

1722:
old  < scanUnsignedLongInt$16:>
new  <	; GetReturnValue Â£temporary1155>

1723:
old  <	; PostCall 53>
new  <>

1724:
old  <>
new  < scanLongInt$14:>

1725:
old  < scanUnsignedLongInt$17:>
new  <	; Equal 21 Â£temporary1155 0>

1726:
old  <	; GetReturnValue Â£temporary1145>
new  <	cmp ebx, 0>

1727:
old  <>
new  <	je scanLongInt$21>

1728:
old  < scanUnsignedLongInt$18:>
new  <>

1729:
old  <	; Assign input Â£temporary1145>
new  < scanLongInt$15:>

1730:
old  <	mov [rbp + 48], bl>
new  <	; PreCall 45 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1732:
old  < scanUnsignedLongInt$19:>
new  < scanLongInt$16:>

1733:
old  <	; Goto 7>
new  <	; Call scanChar 45 0>

1734:
old  <	jmp scanUnsignedLongInt$7>
new  <	mov qword [rbp + 45], scanLongInt$17>

1735:
old  <>
new  <	mov [rbp + 53], rbp>

1736:
old  < scanUnsignedLongInt$20:>
new  <	add rbp, 45>

1737:
old  <	; NotEqual 49 input 48>
new  <	jmp scanChar>

1738:
old  <	cmp byte [rbp + 48], 48>
new  <>

1739:
old  <	jne scanUnsignedLongInt$49>
new  < scanLongInt$17:>

1740:
old  <>
new  <	; PostCall 45>

1741:
old  < scanUnsignedLongInt$21:>
new  <>

1742:
old  <	; PreCall 53 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < scanLongInt$18:>

1743:
old  <>
new  <	; GetReturnValue Â£temporary1156>

1744:
old  < scanUnsignedLongInt$22:>
new  <>

1745:
old  <	; Call scanChar 53 0>
new  < scanLongInt$19:>

1746:
old  <	mov qword [rbp + 53], scanUnsignedLongInt$23>
new  <	; Assign input Â£temporary1156>

1747:
old  <	mov [rbp + 61], rbp>
new  <	mov [rbp + 44], bl>

1748:
old  <	add rbp, 53>
new  <>

1749:
old  <	jmp scanChar>
new  < scanLongInt$20:>

1750:
old  <>
new  <	; Goto 8>

1751:
old  < scanUnsignedLongInt$23:>
new  <	jmp scanLongInt$8>

1752:
old  <	; PostCall 53>
new  <>

1753:
old  <>
new  < scanLongInt$21:>

1754:
old  < scanUnsignedLongInt$24:>
new  <	; NotEqual 28 input 43>

1755:
old  <	; GetReturnValue Â£temporary1148>
new  <	cmp byte [rbp + 44], 43>

1756:
old  <>
new  <	jne scanLongInt$28>

1757:
old  < scanUnsignedLongInt$25:>
new  <>

1758:
old  <	; Assign input Â£temporary1148>
new  < scanLongInt$22:>

1759:
old  <	mov [rbp + 48], bl>
new  <	; PreCall 45 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1761:
old  < scanUnsignedLongInt$26:>
new  < scanLongInt$23:>

1762:
old  <	; PreCall 53 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Call scanChar 45 0>

1763:
old  <>
new  <	mov qword [rbp + 45], scanLongInt$24>

1764:
old  < scanUnsignedLongInt$27:>
new  <	mov [rbp + 53], rbp>

1765:
old  <	; IntegralToIntegral Â£temporary1149 input>
new  <	add rbp, 45>

1766:
old  <	mov al, [rbp + 48]>
new  <	jmp scanChar>

1767:
old  <	and eax, 255>
new  <>

1768:
old  <	cmp al, 0>
new  < scanLongInt$24:>

1769:
old  <	jge scanUnsignedLongInt$28>
new  <	; PostCall 45>

1770:
old  <	neg al>
new  <>

1771:
old  <	neg eax>
new  < scanLongInt$25:>

1772:
old  <>
new  <	; GetReturnValue Â£temporary1159>

1773:
old  < scanUnsignedLongInt$28:>
new  <>

1774:
old  <	; Parameter signedint Â£temporary1149 77>
new  < scanLongInt$26:>

1775:
old  <	mov [rbp + 77], eax>
new  <	; Assign input Â£temporary1159>

1776:
old  <>
new  <	mov [rbp + 44], bl>

1777:
old  < scanUnsignedLongInt$29:>
new  <>

1778:
old  <	; Call tolower 53 0>
new  < scanLongInt$27:>

1779:
old  <	mov qword [rbp + 53], scanUnsignedLongInt$30>
new  <	; Goto 35>

1780:
old  <	mov [rbp + 61], rbp>
new  <	jmp scanLongInt$35>

1781:
old  <	add rbp, 53>
new  <>

1782:
old  <	jmp tolower>
new  < scanLongInt$28:>

1783:
old  <>
new  <	; NotEqual 35 input 45>

1784:
old  < scanUnsignedLongInt$30:>
new  <	cmp byte [rbp + 44], 45>

1785:
old  <	; PostCall 53>
new  <	jne scanLongInt$35>

1787:
old  < scanUnsignedLongInt$31:>
new  < scanLongInt$29:>

1788:
old  <	; GetReturnValue Â£temporary1150>
new  <	; Assign minus 1>

1789:
old  <>
new  <	mov dword [rbp + 36], 1>

1790:
old  < scanUnsignedLongInt$32:>
new  <>

1791:
old  <	; NotEqual 44 Â£temporary1150 120>
new  < scanLongInt$30:>

1792:
old  <	cmp ebx, 120>
new  <	; PreCall 45 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1793:
old  <	jne scanUnsignedLongInt$44>
new  <>

1794:
old  <>
new  < scanLongInt$31:>

1795:
old  < scanUnsignedLongInt$33:>
new  <	; Call scanChar 45 0>

1796:
old  <	; NotEqual 36 base 0>
new  <	mov qword [rbp + 45], scanLongInt$32>

1797:
old  <	cmp qword [rbp + 24], 0>
new  <	mov [rbp + 53], rbp>

1798:
old  <	jne scanUnsignedLongInt$36>
new  <	add rbp, 45>

1799:
old  <>
new  <	jmp scanChar>

1800:
old  < scanUnsignedLongInt$34:>
new  <>

1801:
old  <	; Assign Â£temporary1153 16>
new  < scanLongInt$32:>

1802:
old  <	mov rax, 16>
new  <	; PostCall 45>

1804:
old  < scanUnsignedLongInt$35:>
new  < scanLongInt$33:>

1805:
old  <	; Goto 37>
new  <	; GetReturnValue Â£temporary1161>

1806:
old  <	jmp scanUnsignedLongInt$37>
new  <>

1807:
old  <>
new  < scanLongInt$34:>

1808:
old  < scanUnsignedLongInt$36:>
new  <	; Assign input Â£temporary1161>

1809:
old  <	; Assign Â£temporary1153 base>
new  <	mov [rbp + 44], bl>

1810:
old  <	mov rax, [rbp + 24]>
new  <>

1811:
old  <>
new  < scanLongInt$35:>

1812:
old  < scanUnsignedLongInt$37:>
new  <	; NotEqual 59 base 0>

1813:
old  <	; Assign base Â£temporary1153>
new  <	cmp dword [rbp + 24], 0>

1814:
old  <	mov [rbp + 24], rax>
new  <	jne scanLongInt$59>

1816:
old  < scanUnsignedLongInt$38:>
new  < scanLongInt$36:>

1817:
old  <	; PreCall 53 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; NotEqual 58 input 48>

1818:
old  <>
new  <	cmp byte [rbp + 44], 48>

1819:
old  < scanUnsignedLongInt$39:>
new  <	jne scanLongInt$58>

1820:
old  <	; Call scanChar 53 0>
new  <>

1821:
old  <	mov qword [rbp + 53], scanUnsignedLongInt$40>
new  < scanLongInt$37:>

1822:
old  <	mov [rbp + 61], rbp>
new  <	; PreCall 45 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1823:
old  <	add rbp, 53>
new  <>

1824:
old  <	jmp scanChar>
new  < scanLongInt$38:>

1825:
old  <>
new  <	; Call scanChar 45 0>

1826:
old  < scanUnsignedLongInt$40:>
new  <	mov qword [rbp + 45], scanLongInt$39>

1827:
old  <	; PostCall 53>
new  <	mov [rbp + 53], rbp>

1828:
old  <>
new  <	add rbp, 45>

1829:
old  < scanUnsignedLongInt$41:>
new  <	jmp scanChar>

1830:
old  <	; GetReturnValue Â£temporary1154>
new  <>

1831:
old  <>
new  < scanLongInt$39:>

1832:
old  < scanUnsignedLongInt$42:>
new  <	; PostCall 45>

1833:
old  <	; Assign input Â£temporary1154>
new  <>

1834:
old  <	mov [rbp + 48], bl>
new  < scanLongInt$40:>

1835:
old  <>
new  <	; GetReturnValue Â£temporary1164>

1836:
old  < scanUnsignedLongInt$43:>
new  <>

1837:
old  <	; Goto 49>
new  < scanLongInt$41:>

1838:
old  <	jmp scanUnsignedLongInt$49>
new  <	; Assign input Â£temporary1164>

1839:
old  <>
new  <	mov [rbp + 44], bl>

1840:
old  < scanUnsignedLongInt$44:>
new  <>

1841:
old  <	; NotEqual 47 base 0>
new  < scanLongInt$42:>

1842:
old  <	cmp qword [rbp + 24], 0>
new  <	; PreCall 45 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1843:
old  <	jne scanUnsignedLongInt$47>
new  <>

1844:
old  <>
new  < scanLongInt$43:>

1845:
old  < scanUnsignedLongInt$45:>
new  <	; IntegralToIntegral Â£temporary1165 input>

1846:
old  <	; Assign Â£temporary1156 8>
new  <	mov al, [rbp + 44]>

1847:
old  <	mov rax, 8>
new  <	and eax, 255>

1848:
old  <>
new  <	cmp al, 0>

1849:
old  < scanUnsignedLongInt$46:>
new  <	jge scanLongInt$44>

1850:
old  <	; Goto 48>
new  <	neg al>

1851:
old  <	jmp scanUnsignedLongInt$48>
new  <	neg eax>

1853:
old  < scanUnsignedLongInt$47:>
new  < scanLongInt$44:>

1854:
old  <	; Assign Â£temporary1156 base>
new  <	; Parameter signedint Â£temporary1165 69>

1855:
old  <	mov rax, [rbp + 24]>
new  <	mov [rbp + 69], eax>

1857:
old  < scanUnsignedLongInt$48:>
new  < scanLongInt$45:>

1858:
old  <	; Assign base Â£temporary1156>
new  <	; Call tolower 45 0>

1859:
old  <	mov [rbp + 24], rax>
new  <	mov qword [rbp + 45], scanLongInt$46>

1860:
old  <>
new  <	mov [rbp + 53], rbp>

1861:
old  < scanUnsignedLongInt$49:>
new  <	add rbp, 45>

1862:
old  <	; NotEqual 51 base 0>
new  <	jmp tolower>

1863:
old  <	cmp qword [rbp + 24], 0>
new  <>

1864:
old  <	jne scanUnsignedLongInt$51>
new  < scanLongInt$46:>

1865:
old  <>
new  <	; PostCall 45>

1866:
old  < scanUnsignedLongInt$50:>
new  <>

1867:
old  <	; Assign base 10>
new  < scanLongInt$47:>

1868:
old  <	mov qword [rbp + 24], 10>
new  <	; GetReturnValue Â£temporary1166>

1870:
old  < scanUnsignedLongInt$51:>
new  < scanLongInt$48:>

1871:
old  <	; PreCall 53 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; NotEqual 56 Â£temporary1166 120>

1872:
old  <>
new  <	cmp ebx, 120>

1873:
old  < scanUnsignedLongInt$52:>
new  <	jne scanLongInt$56>

1874:
old  <	; IntegralToIntegral Â£temporary1158 input>
new  <>

1875:
old  <	mov al, [rbp + 48]>
new  < scanLongInt$49:>

1876:
old  <	and eax, 255>
new  <	; Assign base 16>

1877:
old  <	cmp al, 0>
new  <	mov dword [rbp + 24], 16>

1878:
old  <	jge scanUnsignedLongInt$53>
new  <>

1879:
old  <	neg al>
new  < scanLongInt$50:>

1880:
old  <	neg eax>
new  <	; PreCall 45 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1882:
old  < scanUnsignedLongInt$53:>
new  < scanLongInt$51:>

1883:
old  <	; Parameter signedint Â£temporary1158 77>
new  <	; Call scanChar 45 0>

1884:
old  <	mov [rbp + 77], eax>
new  <	mov qword [rbp + 45], scanLongInt$52>

1885:
old  <>
new  <	mov [rbp + 53], rbp>

1886:
old  < scanUnsignedLongInt$54:>
new  <	add rbp, 45>

1887:
old  <	; Call isxdigit 53 0>
new  <	jmp scanChar>

1888:
old  <	mov qword [rbp + 53], scanUnsignedLongInt$55>
new  <>

1889:
old  <	mov [rbp + 61], rbp>
new  < scanLongInt$52:>

1890:
old  <	add rbp, 53>
new  <	; PostCall 45>

1891:
old  <	jmp isxdigit>
new  <>

1892:
old  <>
new  < scanLongInt$53:>

1893:
old  < scanUnsignedLongInt$55:>
new  <	; GetReturnValue Â£temporary1168>

1894:
old  <	; PostCall 53>
new  <>

1895:
old  <>
new  < scanLongInt$54:>

1896:
old  < scanUnsignedLongInt$56:>
new  <	; Assign input Â£temporary1168>

1897:
old  <	; GetReturnValue Â£temporary1159>
new  <	mov [rbp + 44], bl>

1899:
old  < scanUnsignedLongInt$57:>
new  < scanLongInt$55:>

1900:
old  <	; Equal 74 Â£temporary1159 0>
new  <	; Goto 59>

1901:
old  <	cmp ebx, 0>
new  <	jmp scanLongInt$59>

1902:
old  <	je scanUnsignedLongInt$74>
new  <>

1903:
old  <>
new  < scanLongInt$56:>

1904:
old  < scanUnsignedLongInt$58:>
new  <	; Assign base 8>

1905:
old  <	; PreCall 53 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov dword [rbp + 24], 8>

1907:
old  < scanUnsignedLongInt$59:>
new  < scanLongInt$57:>

1908:
old  <	; Parameter signedchar input 77>
new  <	; Goto 59>

1909:
old  <	mov al, [rbp + 48]>
new  <	jmp scanLongInt$59>

1910:
old  <	mov [rbp + 77], al>
new  <>

1911:
old  <>
new  < scanLongInt$58:>

1912:
old  < scanUnsignedLongInt$60:>
new  <	; Assign base 10>

1913:
old  <	; Call digitToValue 53 0>
new  <	mov dword [rbp + 24], 10>

1914:
old  <	mov qword [rbp + 53], scanUnsignedLongInt$61>
new  <>

1915:
old  <	mov [rbp + 61], rbp>
new  < scanLongInt$59:>

1916:
old  <	add rbp, 53>
new  <	; PreCall 45 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1917:
old  <	jmp digitToValue>
new  <>

1918:
old  <>
new  < scanLongInt$60:>

1919:
old  < scanUnsignedLongInt$61:>
new  <	; Parameter signedchar input 69>

1920:
old  <	; PostCall 53>
new  <	mov al, [rbp + 44]>

1921:
old  <>
new  <	mov [rbp + 69], al>

1922:
old  < scanUnsignedLongInt$62:>
new  <>

1923:
old  <	; GetReturnValue Â£temporary1160>
new  < scanLongInt$61:>

1924:
old  <>
new  <	; Parameter signedint base 70>

1925:
old  < scanUnsignedLongInt$63:>
new  <	mov eax, [rbp + 24]>

1926:
old  <	; Assign digit Â£temporary1160>
new  <	mov [rbp + 70], eax>

1927:
old  <	mov [rbp + 40], rbx>
new  <>

1928:
old  <>
new  < scanLongInt$62:>

1929:
old  < scanUnsignedLongInt$64:>
new  <	; Call isDigitInBase 45 0>

1930:
old  <	; UnsignedGreaterThanEqual 74 digit base>
new  <	mov qword [rbp + 45], scanLongInt$63>

1931:
old  <	mov rax, [rbp + 24]>
new  <	mov [rbp + 53], rbp>

1932:
old  <	cmp [rbp + 40], rax>
new  <	add rbp, 45>

1933:
old  <	jae scanUnsignedLongInt$74>
new  <	jmp @2888$isDigitInBase>

1935:
old  < scanUnsignedLongInt$65:>
new  < scanLongInt$63:>

1936:
old  <	; UnsignedMultiply Â£temporary1162 unsignedLongValue base>
new  <	; PostCall 45>

1937:
old  <	mov rax, [rbp + 32]>
new  <>

1938:
old  <	xor rdx, rdx>
new  < scanLongInt$64:>

1939:
old  <	mul qword [rbp + 24]>
new  <	; GetReturnValue Â£temporary1169>

1941:
old  < scanUnsignedLongInt$66:>
new  < scanLongInt$65:>

1942:
old  <	; BinaryAdd unsignedLongValue Â£temporary1162 digit>
new  <	; Equal 82 Â£temporary1169 0>

1943:
old  <	add rax, [rbp + 40]>
new  <	cmp ebx, 0>

1944:
old  <	mov [rbp + 32], rax>
new  <	je scanLongInt$82>

1946:
old  < scanUnsignedLongInt$67:>
new  < scanLongInt$66:>

1947:
old  <	; Assign found 1>
new  <	; IntegralToIntegral Â£temporary1170 base>

1948:
old  <	mov dword [rbp + 49], 1>
new  <	mov ebx, [rbp + 24]>

1949:
old  <>
new  <	mov rax, 4294967295>

1950:
old  < scanUnsignedLongInt$68:>
new  <	and rbx, rax>

1951:
old  <	; PreCall 53 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	cmp ebx, 0>

1952:
old  <>
new  <	jge scanLongInt$67>

1953:
old  < scanUnsignedLongInt$69:>
new  <	neg ebx>

1954:
old  <	; Call scanChar 53 0>
new  <	neg rbx>

1955:
old  <	mov qword [rbp + 53], scanUnsignedLongInt$70>
new  <>

1956:
old  <	mov [rbp + 61], rbp>
new  < scanLongInt$67:>

1957:
old  <	add rbp, 53>
new  <	; SignedMultiply longValue longValue Â£temporary1170>

1958:
old  <	jmp scanChar>
new  <	mov rax, [rbp + 28]>

1959:
old  <>
new  <	xor rdx, rdx>

1960:
old  < scanUnsignedLongInt$70:>
new  <	imul rbx>

1961:
old  <	; PostCall 53>
new  <	mov [rbp + 28], rax>

1963:
old  < scanUnsignedLongInt$71:>
new  < scanLongInt$68:>

1964:
old  <	; GetReturnValue Â£temporary1164>
new  <	; PreCall 45 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1966:
old  < scanUnsignedLongInt$72:>
new  < scanLongInt$69:>

1967:
old  <	; Assign input Â£temporary1164>
new  <	; Parameter signedchar input 69>

1968:
old  <	mov [rbp + 48], bl>
new  <	mov al, [rbp + 44]>

1969:
old  <>
new  <	mov [rbp + 69], al>

1970:
old  < scanUnsignedLongInt$73:>
new  <>

1971:
old  <	; Goto 51>
new  < scanLongInt$70:>

1972:
old  <	jmp scanUnsignedLongInt$51>
new  <	; Call digitToValue 45 0>

1973:
old  <>
new  <	mov qword [rbp + 45], scanLongInt$71>

1974:
old  < scanUnsignedLongInt$74:>
new  <	mov [rbp + 53], rbp>

1975:
old  <	; Equal 76 found 0>
new  <	add rbp, 45>

1976:
old  <	cmp dword [rbp + 49], 0>
new  <	jmp @2896$digitToValue>

1977:
old  <	je scanUnsignedLongInt$76>
new  <>

1978:
old  <>
new  < scanLongInt$71:>

1979:
old  < scanUnsignedLongInt$75:>
new  <	; PostCall 45>

1980:
old  <	; BinaryAdd g_inCount g_inCount 1>
new  <>

1981:
old  <	inc dword [g_inCount]>
new  < scanLongInt$72:>

1982:
old  <>
new  <	; GetReturnValue Â£temporary1172>

1983:
old  < scanUnsignedLongInt$76:>
new  <>

1984:
old  <	; PreCall 53 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < scanLongInt$73:>

1985:
old  <>
new  <	; IntegralToIntegral Â£temporary1173 Â£temporary1172>

1986:
old  < scanUnsignedLongInt$77:>
new  <	mov rax, 4294967295>

1987:
old  <	; Parameter signedchar input 77>
new  <	and rbx, rax>

1988:
old  <	mov al, [rbp + 48]>
new  <	cmp ebx, 0>

1989:
old  <	mov [rbp + 77], al>
new  <	jge scanLongInt$74>

1990:
old  <>
new  <	neg ebx>

1991:
old  < scanUnsignedLongInt$78:>
new  <	neg rbx>

1992:
old  <	; Call unscanChar 53 0>
new  <>

1993:
old  <	mov qword [rbp + 53], scanUnsignedLongInt$79>
new  < scanLongInt$74:>

1994:
old  <	mov [rbp + 61], rbp>
new  <	; BinaryAdd longValue longValue Â£temporary1173>

1995:
old  <	add rbp, 53>
new  <	add [rbp + 28], rbx>

1996:
old  <	jmp unscanChar>
new  <>

1997:
old  <>
new  < scanLongInt$75:>

1998:
old  < scanUnsignedLongInt$79:>
new  <	; PreCall 45 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1999:
old  <	; PostCall 53>
new  <>

2000:
old  <>
new  < scanLongInt$76:>

2001:
old  < scanUnsignedLongInt$80:>
new  <	; Call scanChar 45 0>

2002:
old  <	; Return unsignedLongValue>
new  <	mov qword [rbp + 45], scanLongInt$77>

2003:
old  <	mov rbx, [rbp + 32]>
new  <	mov [rbp + 53], rbp>

2004:
old  <	mov rax, [rbp]>
new  <	add rbp, 45>

2005:
old  <	mov rdi, [rbp + 16]>
new  <	jmp scanChar>

2006:
old  <	mov rbp, [rbp + 8]>
new  <>

2007:
old  <	jmp rax>
new  < scanLongInt$77:>

2008:
old  <>
new  <	; PostCall 45>

2009:
old  < scanUnsignedLongInt$81:>
new  <>

2010:
old  <	; FunctionEnd scanUnsignedLongInt>
new  < scanLongInt$78:>

2011:
old  <>
new  <	; GetReturnValue Â£temporary1175>

2012:
old  <section .data>
new  <>

2013:
old  <>
new  < scanLongInt$79:>

2014:
old  <float8$10.0#:>
new  <	; Assign input Â£temporary1175>

2015:
old  <	; Initializer LongDouble 10.0>
new  <	mov [rbp + 44], bl>

2016:
old  <	dq 10.0>
new  <>

2017:
old  <>
new  < scanLongInt$80:>

2018:
old  <section .data>
new  <	; Assign found 1>

2019:
old  <>
new  <	mov dword [rbp + 40], 1>

2020:
old  <container4bytes#:>
new  <>

2021:
old  <	; InitializerZero 4>
new  < scanLongInt$81:>

2022:
old  <	times 4 db 0>
new  <	; Goto 59>

2023:
old  <>
new  <	jmp scanLongInt$59>

2024:
old  <section .data>
new  <>

2025:
old  <>
new  < scanLongInt$82:>

2026:
old  <container8bytes#:>
new  <	; Equal 85 minus 0>

2027:
old  <	; InitializerZero 8>
new  <	cmp dword [rbp + 36], 0>

2028:
old  <	times 8 db 0>
new  <	je scanLongInt$85>

2030:
old  <section .text>
new  < scanLongInt$83:>

2031:
old  <>
new  <	; UnarySubtract Â£temporary1177 longValue>

2032:
old  < scanLongDouble:>
new  <	mov rax, [rbp + 28]>

2033:
old  <	; Assign minus 0>
new  <	neg rax>

2034:
old  <	mov dword [rbp + 24], 0>
new  <>

2035:
old  <>
new  < scanLongInt$84:>

2036:
old  < scanLongDouble$1:>
new  <	; Assign longValue Â£temporary1177>

2037:
old  <	; Assign found 0>
new  <	mov [rbp + 28], rax>

2038:
old  <	mov dword [rbp + 28], 0>
new  <>

2039:
old  <>
new  < scanLongInt$85:>

2040:
old  < scanLongDouble$2:>
new  <	; Equal 87 found 0>

2041:
old  <	; PushFloat 0.0>
new  <	cmp dword [rbp + 40], 0>

2042:
old  <	fldz>
new  <	je scanLongInt$87>

2044:
old  < scanLongDouble$3:>
new  < scanLongInt$86:>

2045:
old  <	; PopFloat value>
new  <	; BinaryAdd g_inCount g_inCount 1>

2046:
old  <	fstp qword [rbp + 32]>
new  <	inc dword [g_inCount]>

2048:
old  < scanLongDouble$4:>
new  < scanLongInt$87:>

2049:
old  <	; PushFloat 1.0>
new  <	; PreCall 45 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2050:
old  <	fld1>
new  <>

2051:
old  <>
new  < scanLongInt$88:>

2052:
old  < scanLongDouble$5:>
new  <	; Parameter signedchar input 69>

2053:
old  <	; PopFloat factor>
new  <	mov al, [rbp + 44]>

2054:
old  <	fstp qword [rbp + 40]>
new  <	mov [rbp + 69], al>

2056:
old  < scanLongDouble$6:>
new  < scanLongInt$89:>

2057:
old  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Call unscanChar 45 0>

2058:
old  <>
new  <	mov qword [rbp + 45], scanLongInt$90>

2059:
old  < scanLongDouble$7:>
new  <	mov [rbp + 53], rbp>

2060:
old  <	; Call scanChar 48 0>
new  <	add rbp, 45>

2061:
old  <	mov qword [rbp + 48], scanLongDouble$8>
new  <	jmp unscanChar>

2062:
old  <	mov [rbp + 56], rbp>
new  <>

2063:
old  <	add rbp, 48>
new  < scanLongInt$90:>

2064:
old  <	jmp scanChar>
new  <	; PostCall 45>

2066:
old  < scanLongDouble$8:>
new  < scanLongInt$91:>

2067:
old  <	; PostCall 48>
new  <	; Return longValue>

2068:
old  <>
new  <	mov rbx, [rbp + 28]>

2069:
old  < scanLongDouble$9:>
new  <	mov rax, [rbp]>

2070:
old  <	; GetReturnValue Â£temporary1169>
new  <	mov rdi, [rbp + 16]>

2071:
old  <>
new  <	mov rbp, [rbp + 8]>

2072:
old  < scanLongDouble$10:>
new  <	jmp rax>

2073:
old  <	; Assign input Â£temporary1169>
new  <>

2074:
old  <	mov [rbp + 48], bl>
new  < scanLongInt$92:>

2075:
old  <>
new  <	; FunctionEnd scanLongInt>

2076:
old  < scanLongDouble$11:>
new  <>

2077:
old  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <section .text>

2079:
old  < scanLongDouble$12:>
new  < scanUnsignedLongInt:>

2080:
old  <	; IntegralToIntegral Â£temporary1170 input>
new  <	; Assign unsignedLongValue 0>

2081:
old  <	mov al, [rbp + 48]>
new  <	mov qword [rbp + 28], 0>

2082:
old  <	and eax, 255>
new  <>

2083:
old  <	cmp al, 0>
new  < scanUnsignedLongInt$1:>

2084:
old  <	jge scanLongDouble$13>
new  <	; PreCall 44 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2085:
old  <	neg al>
new  <>

2086:
old  <	neg eax>
new  < scanUnsignedLongInt$2:>

2087:
old  <>
new  <	; Call scanChar 44 0>

2088:
old  < scanLongDouble$13:>
new  <	mov qword [rbp + 44], scanUnsignedLongInt$3>

2089:
old  <	; Parameter signedint Â£temporary1170 73>
new  <	mov [rbp + 52], rbp>

2090:
old  <	mov [rbp + 73], eax>
new  <	add rbp, 44>

2091:
old  <>
new  <	jmp scanChar>

2092:
old  < scanLongDouble$14:>
new  <>

2093:
old  <	; Call isspace 49 0>
new  < scanUnsignedLongInt$3:>

2094:
old  <	mov qword [rbp + 49], scanLongDouble$15>
new  <	; PostCall 44>

2095:
old  <	mov [rbp + 57], rbp>
new  <>

2096:
old  <	add rbp, 49>
new  < scanUnsignedLongInt$4:>

2097:
old  <	jmp isspace>
new  <	; GetReturnValue Â£temporary1182>

2099:
old  < scanLongDouble$15:>
new  < scanUnsignedLongInt$5:>

2100:
old  <	; PostCall 49>
new  <	; Assign input Â£temporary1182>

2101:
old  <>
new  <	mov [rbp + 44], bl>

2102:
old  < scanLongDouble$16:>
new  <>

2103:
old  <	; GetReturnValue Â£temporary1171>
new  < scanUnsignedLongInt$6:>

2104:
old  <>
new  <	; Assign found 1>

2105:
old  < scanLongDouble$17:>
new  <	mov dword [rbp + 45], 1>

2106:
old  <	; Equal 24 Â£temporary1171 0>
new  <>

2107:
old  <	cmp ebx, 0>
new  < scanUnsignedLongInt$7:>

2108:
old  <	je scanLongDouble$24>
new  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2110:
old  < scanLongDouble$18:>
new  < scanUnsignedLongInt$8:>

2111:
old  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; IntegralToIntegral Â£temporary1183 input>

2112:
old  <>
new  <	mov al, [rbp + 44]>

2113:
old  < scanLongDouble$19:>
new  <	and eax, 255>

2114:
old  <	; Call scanChar 49 0>
new  <	cmp al, 0>

2115:
old  <	mov qword [rbp + 49], scanLongDouble$20>
new  <	jge scanUnsignedLongInt$9>

2116:
old  <	mov [rbp + 57], rbp>
new  <	neg al>

2117:
old  <	add rbp, 49>
new  <	neg eax>

2118:
old  <	jmp scanChar>
new  <>

2119:
old  <>
new  < scanUnsignedLongInt$9:>

2120:
old  < scanLongDouble$20:>
new  <	; Parameter signedint Â£temporary1183 73>

2121:
old  <	; PostCall 49>
new  <	mov [rbp + 73], eax>

2123:
old  < scanLongDouble$21:>
new  < scanUnsignedLongInt$10:>

2124:
old  <	; GetReturnValue Â£temporary1172>
new  <	; Call isspace 49 0>

2125:
old  <>
new  <	mov qword [rbp + 49], scanUnsignedLongInt$11>

2126:
old  < scanLongDouble$22:>
new  <	mov [rbp + 57], rbp>

2127:
old  <	; Assign input Â£temporary1172>
new  <	add rbp, 49>

2128:
old  <	mov [rbp + 48], bl>
new  <	jmp isspace>

2130:
old  < scanLongDouble$23:>
new  < scanUnsignedLongInt$11:>

2131:
old  <	; Goto 11>
new  <	; PostCall 49>

2132:
old  <	jmp scanLongDouble$11>
new  <>

2133:
old  <>
new  < scanUnsignedLongInt$12:>

2134:
old  < scanLongDouble$24:>
new  <	; GetReturnValue Â£temporary1184>

2135:
old  <	; NotEqual 31 input 43>
new  <>

2136:
old  <	cmp byte [rbp + 48], 43>
new  < scanUnsignedLongInt$13:>

2137:
old  <	jne scanLongDouble$31>
new  <	; Equal 20 Â£temporary1184 0>

2138:
old  <>
new  <	cmp ebx, 0>

2139:
old  < scanLongDouble$25:>
new  <	je scanUnsignedLongInt$20>

2140:
old  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

2141:
old  <>
new  < scanUnsignedLongInt$14:>

2142:
old  < scanLongDouble$26:>
new  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2143:
old  <	; Call scanChar 49 0>
new  <>

2144:
old  <	mov qword [rbp + 49], scanLongDouble$27>
new  < scanUnsignedLongInt$15:>

2145:
old  <	mov [rbp + 57], rbp>
new  <	; Call scanChar 49 0>

2146:
old  <	add rbp, 49>
new  <	mov qword [rbp + 49], scanUnsignedLongInt$16>

2147:
old  <	jmp scanChar>
new  <	mov [rbp + 57], rbp>

2148:
old  <>
new  <	add rbp, 49>

2149:
old  < scanLongDouble$27:>
new  <	jmp scanChar>

2150:
old  <	; PostCall 49>
new  <>

2151:
old  <>
new  < scanUnsignedLongInt$16:>

2152:
old  < scanLongDouble$28:>
new  <	; PostCall 49>

2153:
old  <	; GetReturnValue Â£temporary1175>
new  <>

2154:
old  <>
new  < scanUnsignedLongInt$17:>

2155:
old  < scanLongDouble$29:>
new  <	; GetReturnValue Â£temporary1185>

2156:
old  <	; Assign input Â£temporary1175>
new  <>

2157:
old  <	mov [rbp + 48], bl>
new  < scanUnsignedLongInt$18:>

2158:
old  <>
new  <	; Assign input Â£temporary1185>

2159:
old  < scanLongDouble$30:>
new  <	mov [rbp + 44], bl>

2160:
old  <	; Goto 38>
new  <>

2161:
old  <	jmp scanLongDouble$38>
new  < scanUnsignedLongInt$19:>

2162:
old  <>
new  <	; Goto 7>

2163:
old  < scanLongDouble$31:>
new  <	jmp scanUnsignedLongInt$7>

2164:
old  <	; NotEqual 38 input 45>
new  <>

2165:
old  <	cmp byte [rbp + 48], 45>
new  < scanUnsignedLongInt$20:>

2166:
old  <	jne scanLongDouble$38>
new  <	; NotEqual 26 input 43>

2167:
old  <>
new  <	cmp byte [rbp + 44], 43>

2168:
old  < scanLongDouble$32:>
new  <	jne scanUnsignedLongInt$26>

2169:
old  <	; Assign minus 1>
new  <>

2170:
old  <	mov dword [rbp + 24], 1>
new  < scanUnsignedLongInt$21:>

2171:
old  <>
new  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2172:
old  < scanLongDouble$33:>
new  <>

2173:
old  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < scanUnsignedLongInt$22:>

2174:
old  <>
new  <	; Call scanChar 49 0>

2175:
old  < scanLongDouble$34:>
new  <	mov qword [rbp + 49], scanUnsignedLongInt$23>

2176:
old  <	; Call scanChar 49 0>
new  <	mov [rbp + 57], rbp>

2177:
old  <	mov qword [rbp + 49], scanLongDouble$35>
new  <	add rbp, 49>

2178:
old  <	mov [rbp + 57], rbp>
new  <	jmp scanChar>

2179:
old  <	add rbp, 49>
new  <>

2180:
old  <	jmp scanChar>
new  < scanUnsignedLongInt$23:>

2181:
old  <>
new  <	; PostCall 49>

2182:
old  < scanLongDouble$35:>
new  <>

2183:
old  <	; PostCall 49>
new  < scanUnsignedLongInt$24:>

2184:
old  <>
new  <	; GetReturnValue Â£temporary1188>

2185:
old  < scanLongDouble$36:>
new  <>

2186:
old  <	; GetReturnValue Â£temporary1177>
new  < scanUnsignedLongInt$25:>

2187:
old  <>
new  <	; Assign input Â£temporary1188>

2188:
old  < scanLongDouble$37:>
new  <	mov [rbp + 44], bl>

2189:
old  <	; Assign input Â£temporary1177>
new  <>

2190:
old  <	mov [rbp + 48], bl>
new  < scanUnsignedLongInt$26:>

2191:
old  <>
new  <	; NotEqual 50 base 0>

2192:
old  < scanLongDouble$38:>
new  <	cmp dword [rbp + 24], 0>

2193:
old  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	jne scanUnsignedLongInt$50>

2195:
old  < scanLongDouble$39:>
new  < scanUnsignedLongInt$27:>

2196:
old  <	; IntegralToIntegral Â£temporary1178 input>
new  <	; NotEqual 49 input 48>

2197:
old  <	mov al, [rbp + 48]>
new  <	cmp byte [rbp + 44], 48>

2198:
old  <	and eax, 255>
new  <	jne scanUnsignedLongInt$49>

2199:
old  <	cmp al, 0>
new  <>

2200:
old  <	jge scanLongDouble$40>
new  < scanUnsignedLongInt$28:>

2201:
old  <	neg al>
new  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2202:
old  <	neg eax>
new  <>

2203:
old  <>
new  < scanUnsignedLongInt$29:>

2204:
old  < scanLongDouble$40:>
new  <	; Call scanChar 49 0>

2205:
old  <	; Parameter signedint Â£temporary1178 73>
new  <	mov qword [rbp + 49], scanUnsignedLongInt$30>

2206:
old  <	mov [rbp + 73], eax>
new  <	mov [rbp + 57], rbp>

2207:
old  <>
new  <	add rbp, 49>

2208:
old  < scanLongDouble$41:>
new  <	jmp scanChar>

2209:
old  <	; Call isdigit 49 0>
new  <>

2210:
old  <	mov qword [rbp + 49], scanLongDouble$42>
new  < scanUnsignedLongInt$30:>

2211:
old  <	mov [rbp + 57], rbp>
new  <	; PostCall 49>

2212:
old  <	add rbp, 49>
new  <>

2213:
old  <	jmp isdigit>
new  < scanUnsignedLongInt$31:>

2214:
old  <>
new  <	; GetReturnValue Â£temporary1191>

2215:
old  < scanLongDouble$42:>
new  <>

2216:
old  <	; PostCall 49>
new  < scanUnsignedLongInt$32:>

2217:
old  <>
new  <	; Assign input Â£temporary1191>

2218:
old  < scanLongDouble$43:>
new  <	mov [rbp + 44], bl>

2219:
old  <	; GetReturnValue Â£temporary1179>
new  <>

2220:
old  <>
new  < scanUnsignedLongInt$33:>

2221:
old  < scanLongDouble$44:>
new  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2222:
old  <	; Equal 60 Â£temporary1179 0>
new  <>

2223:
old  <	cmp ebx, 0>
new  < scanUnsignedLongInt$34:>

2224:
old  <	je scanLongDouble$60>
new  <	; IntegralToIntegral Â£temporary1192 input>

2225:
old  <>
new  <	mov al, [rbp + 44]>

2226:
old  < scanLongDouble$45:>
new  <	and eax, 255>

2227:
old  <	; PushFloat 10.0>
new  <	cmp al, 0>

2228:
old  <	fld qword [float8$10.0#]>
new  <	jge scanUnsignedLongInt$35>

2229:
old  <>
new  <	neg al>

2230:
old  < scanLongDouble$46:>
new  <	neg eax>

2231:
old  <	; PushFloat value>
new  <>

2232:
old  <	fld qword [rbp + 32]>
new  < scanUnsignedLongInt$35:>

2233:
old  <>
new  <	; Parameter signedint Â£temporary1192 73>

2234:
old  < scanLongDouble$47:>
new  <	mov [rbp + 73], eax>

2235:
old  <	; SignedMultiply Â£temporary1180 10.0 value>
new  <>

2236:
old  <	fmul>
new  < scanUnsignedLongInt$36:>

2237:
old  <>
new  <	; Call tolower 49 0>

2238:
old  < scanLongDouble$48:>
new  <	mov qword [rbp + 49], scanUnsignedLongInt$37>

2239:
old  <	; BinarySubtract Â£temporary1181 input 48>
new  <	mov [rbp + 57], rbp>

2240:
old  <	mov al, [rbp + 48]>
new  <	add rbp, 49>

2241:
old  <	sub al, 48>
new  <	jmp tolower>

2243:
old  < scanLongDouble$49:>
new  < scanUnsignedLongInt$37:>

2244:
old  <	; IntegralToIntegral Â£temporary1183 Â£temporary1181>
new  <	; PostCall 49>

2245:
old  <	and eax, 255>
new  <>

2246:
old  <	cmp al, 0>
new  < scanUnsignedLongInt$38:>

2247:
old  <	jge scanLongDouble$50>
new  <	; GetReturnValue Â£temporary1193>

2248:
old  <	neg al>
new  <>

2249:
old  <	neg eax>
new  < scanUnsignedLongInt$39:>

2250:
old  <>
new  <	; NotEqual 47 Â£temporary1193 120>

2251:
old  < scanLongDouble$50:>
new  <	cmp ebx, 120>

2252:
old  <	; IntegralToFloating Â£temporary1182 Â£temporary1183>
new  <	jne scanUnsignedLongInt$47>

2253:
old  <	mov [container4bytes#], eax>
new  <>

2254:
old  <	fild dword [container4bytes#]>
new  < scanUnsignedLongInt$40:>

2255:
old  <>
new  <	; Assign base 16>

2256:
old  < scanLongDouble$51:>
new  <	mov dword [rbp + 24], 16>

2257:
old  <	; BinaryAdd Â£temporary1184 Â£temporary1180 Â£temporary1182>
new  <>

2258:
old  <	fadd>
new  < scanUnsignedLongInt$41:>

2259:
old  <>
new  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2260:
old  < scanLongDouble$52:>
new  <>

2261:
old  <	; PopFloat value>
new  < scanUnsignedLongInt$42:>

2262:
old  <	fstp qword [rbp + 32]>
new  <	; Call scanChar 49 0>

2263:
old  <>
new  <	mov qword [rbp + 49], scanUnsignedLongInt$43>

2264:
old  < scanLongDouble$53:>
new  <	mov [rbp + 57], rbp>

2265:
old  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	add rbp, 49>

2266:
old  <>
new  <	jmp scanChar>

2267:
old  < scanLongDouble$54:>
new  <>

2268:
old  <	; Call scanChar 49 0>
new  < scanUnsignedLongInt$43:>

2269:
old  <	mov qword [rbp + 49], scanLongDouble$55>
new  <	; PostCall 49>

2270:
old  <	mov [rbp + 57], rbp>
new  <>

2271:
old  <	add rbp, 49>
new  < scanUnsignedLongInt$44:>

2272:
old  <	jmp scanChar>
new  <	; GetReturnValue Â£temporary1195>

2274:
old  < scanLongDouble$55:>
new  < scanUnsignedLongInt$45:>

2275:
old  <	; PostCall 49>
new  <	; Assign input Â£temporary1195>

2276:
old  <>
new  <	mov [rbp + 44], bl>

2277:
old  < scanLongDouble$56:>
new  <>

2278:
old  <	; GetReturnValue Â£temporary1185>
new  < scanUnsignedLongInt$46:>

2279:
old  <>
new  <	; Goto 50>

2280:
old  < scanLongDouble$57:>
new  <	jmp scanUnsignedLongInt$50>

2281:
old  <	; Assign input Â£temporary1185>
new  <>

2282:
old  <	mov [rbp + 48], bl>
new  < scanUnsignedLongInt$47:>

2283:
old  <>
new  <	; Assign base 8>

2284:
old  < scanLongDouble$58:>
new  <	mov dword [rbp + 24], 8>

2285:
old  <	; Assign found 1>
new  <>

2286:
old  <	mov dword [rbp + 28], 1>
new  < scanUnsignedLongInt$48:>

2287:
old  <>
new  <	; Goto 50>

2288:
old  < scanLongDouble$59:>
new  <	jmp scanUnsignedLongInt$50>

2289:
old  <	; Goto 38>
new  <>

2290:
old  <	jmp scanLongDouble$38>
new  < scanUnsignedLongInt$49:>

2291:
old  <>
new  <	; Assign base 10>

2292:
old  < scanLongDouble$60:>
new  <	mov dword [rbp + 24], 10>

2293:
old  <	; NotEqual 92 input 46>
new  <>

2294:
old  <	cmp byte [rbp + 48], 46>
new  < scanUnsignedLongInt$50:>

2295:
old  <	jne scanLongDouble$92>
new  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2297:
old  < scanLongDouble$61:>
new  < scanUnsignedLongInt$51:>

2298:
old  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter signedchar input 73>

2299:
old  <>
new  <	mov al, [rbp + 44]>

2300:
old  < scanLongDouble$62:>
new  <	mov [rbp + 73], al>

2301:
old  <	; Call scanChar 49 0>
new  <>

2302:
old  <	mov qword [rbp + 49], scanLongDouble$63>
new  < scanUnsignedLongInt$52:>

2303:
old  <	mov [rbp + 57], rbp>
new  <	; Parameter signedint base 74>

2304:
old  <	add rbp, 49>
new  <	mov eax, [rbp + 24]>

2305:
old  <	jmp scanChar>
new  <	mov [rbp + 74], eax>

2307:
old  < scanLongDouble$63:>
new  < scanUnsignedLongInt$53:>

2308:
old  <	; PostCall 49>
new  <	; Call isDigitInBase 49 0>

2309:
old  <>
new  <	mov qword [rbp + 49], scanUnsignedLongInt$54>

2310:
old  < scanLongDouble$64:>
new  <	mov [rbp + 57], rbp>

2311:
old  <	; GetReturnValue Â£temporary1188>
new  <	add rbp, 49>

2312:
old  <>
new  <	jmp @2888$isDigitInBase>

2313:
old  < scanLongDouble$65:>
new  <>

2314:
old  <	; Assign input Â£temporary1188>
new  < scanUnsignedLongInt$54:>

2315:
old  <	mov [rbp + 48], bl>
new  <	; PostCall 49>

2317:
old  < scanLongDouble$66:>
new  < scanUnsignedLongInt$55:>

2318:
old  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; GetReturnValue Â£temporary1196>

2320:
old  < scanLongDouble$67:>
new  < scanUnsignedLongInt$56:>

2321:
old  <	; IntegralToIntegral Â£temporary1189 input>
new  <	; Equal 73 Â£temporary1196 0>

2322:
old  <	mov al, [rbp + 48]>
new  <	cmp ebx, 0>

2323:
old  <	and eax, 255>
new  <	je scanUnsignedLongInt$73>

2324:
old  <	cmp al, 0>
new  <>

2325:
old  <	jge scanLongDouble$68>
new  < scanUnsignedLongInt$57:>

2326:
old  <	neg al>
new  <	; IntegralToIntegral Â£temporary1197 base>

2327:
old  <	neg eax>
new  <	mov ebx, [rbp + 24]>

2328:
old  <>
new  <	mov rax, 4294967295>

2329:
old  < scanLongDouble$68:>
new  <	and rbx, rax>

2330:
old  <	; Parameter signedint Â£temporary1189 73>
new  <>

2331:
old  <	mov [rbp + 73], eax>
new  < scanUnsignedLongInt$58:>

2332:
old  <>
new  <	; UnsignedMultiply unsignedLongValue unsignedLongValue Â£temporary1197>

2333:
old  < scanLongDouble$69:>
new  <	mov rax, [rbp + 28]>

2334:
old  <	; Call isdigit 49 0>
new  <	xor rdx, rdx>

2335:
old  <	mov qword [rbp + 49], scanLongDouble$70>
new  <	mul rbx>

2336:
old  <	mov [rbp + 57], rbp>
new  <	mov [rbp + 28], rax>

2337:
old  <	add rbp, 49>
new  <>

2338:
old  <	jmp isdigit>
new  < scanUnsignedLongInt$59:>

2339:
old  <>
new  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2340:
old  < scanLongDouble$70:>
new  <>

2341:
old  <	; PostCall 49>
new  < scanUnsignedLongInt$60:>

2342:
old  <>
new  <	; Parameter signedchar input 73>

2343:
old  < scanLongDouble$71:>
new  <	mov al, [rbp + 44]>

2344:
old  <	; GetReturnValue Â£temporary1190>
new  <	mov [rbp + 73], al>

2346:
old  < scanLongDouble$72:>
new  < scanUnsignedLongInt$61:>

2347:
old  <	; Equal 92 Â£temporary1190 0>
new  <	; Call digitToValue 49 0>

2348:
old  <	cmp ebx, 0>
new  <	mov qword [rbp + 49], scanUnsignedLongInt$62>

2349:
old  <	je scanLongDouble$92>
new  <	mov [rbp + 57], rbp>

2350:
old  <>
new  <	add rbp, 49>

2351:
old  < scanLongDouble$73:>
new  <	jmp @2896$digitToValue>

2352:
old  <	; PushFloat factor>
new  <>

2353:
old  <	fld qword [rbp + 40]>
new  < scanUnsignedLongInt$62:>

2354:
old  <>
new  <	; PostCall 49>

2355:
old  < scanLongDouble$74:>
new  <>

2356:
old  <	; PushFloat 10.0>
new  < scanUnsignedLongInt$63:>

2357:
old  <	fld qword [float8$10.0#]>
new  <	; GetReturnValue Â£temporary1199>

2359:
old  < scanLongDouble$75:>
new  < scanUnsignedLongInt$64:>

2360:
old  <	; SignedDivide Â£temporary1191 factor 10.0>
new  <	; IntegralToIntegral Â£temporary1200 Â£temporary1199>

2361:
old  <	fdiv>
new  <	mov rax, 4294967295>

2362:
old  <>
new  <	and rbx, rax>

2363:
old  < scanLongDouble$76:>
new  <>

2364:
old  <	; PopFloat factor>
new  < scanUnsignedLongInt$65:>

2365:
old  <	fstp qword [rbp + 40]>
new  <	; BinaryAdd unsignedLongValue unsignedLongValue Â£temporary1200>

2366:
old  <>
new  <	add [rbp + 28], rbx>

2367:
old  < scanLongDouble$77:>
new  <>

2368:
old  <	; PushFloat value>
new  < scanUnsignedLongInt$66:>

2369:
old  <	fld qword [rbp + 32]>
new  <	; Assign found 1>

2370:
old  <>
new  <	mov dword [rbp + 45], 1>

2371:
old  < scanLongDouble$78:>
new  <>

2372:
old  <	; PushFloat factor>
new  < scanUnsignedLongInt$67:>

2373:
old  <	fld qword [rbp + 40]>
new  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2375:
old  < scanLongDouble$79:>
new  < scanUnsignedLongInt$68:>

2376:
old  <	; BinarySubtract Â£temporary1192 input 48>
new  <	; Call scanChar 49 0>

2377:
old  <	mov al, [rbp + 48]>
new  <	mov qword [rbp + 49], scanUnsignedLongInt$69>

2378:
old  <	sub al, 48>
new  <	mov [rbp + 57], rbp>

2379:
old  <>
new  <	add rbp, 49>

2380:
old  < scanLongDouble$80:>
new  <	jmp scanChar>

2381:
old  <	; IntegralToIntegral Â£temporary1194 Â£temporary1192>
new  <>

2382:
old  <	and eax, 255>
new  < scanUnsignedLongInt$69:>

2383:
old  <	cmp al, 0>
new  <	; PostCall 49>

2384:
old  <	jge scanLongDouble$81>
new  <>

2385:
old  <	neg al>
new  < scanUnsignedLongInt$70:>

2386:
old  <	neg eax>
new  <	; GetReturnValue Â£temporary1202>

2388:
old  < scanLongDouble$81:>
new  < scanUnsignedLongInt$71:>

2389:
old  <	; IntegralToFloating Â£temporary1193 Â£temporary1194>
new  <	; Assign input Â£temporary1202>

2390:
old  <	mov [container4bytes#], eax>
new  <	mov [rbp + 44], bl>

2391:
old  <	fild dword [container4bytes#]>
new  <>

2392:
old  <>
new  < scanUnsignedLongInt$72:>

2393:
old  < scanLongDouble$82:>
new  <	; Goto 50>

2394:
old  <	; SignedMultiply Â£temporary1195 factor Â£temporary1193>
new  <	jmp scanUnsignedLongInt$50>

2395:
old  <	fmul>
new  <>

2396:
old  <>
new  < scanUnsignedLongInt$73:>

2397:
old  < scanLongDouble$83:>
new  <	; Equal 75 found 0>

2398:
old  <	; BinaryAdd Â£temporary1196 value Â£temporary1195>
new  <	cmp dword [rbp + 45], 0>

2399:
old  <	fadd>
new  <	je scanUnsignedLongInt$75>

2401:
old  < scanLongDouble$84:>
new  < scanUnsignedLongInt$74:>

2402:
old  <	; PopFloat value>
new  <	; BinaryAdd g_inCount g_inCount 1>

2403:
old  <	fstp qword [rbp + 32]>
new  <	inc dword [g_inCount]>

2405:
old  < scanLongDouble$85:>
new  < scanUnsignedLongInt$75:>

2408:
old  < scanLongDouble$86:>
new  < scanUnsignedLongInt$76:>

2409:
old  <	; Call scanChar 49 0>
new  <	; Parameter signedchar input 73>

2410:
old  <	mov qword [rbp + 49], scanLongDouble$87>
new  <	mov al, [rbp + 44]>

2411:
old  <	mov [rbp + 57], rbp>
new  <	mov [rbp + 73], al>

2412:
old  <	add rbp, 49>
new  <>

2413:
old  <	jmp scanChar>
new  < scanUnsignedLongInt$77:>

2414:
old  <>
new  <	; Call unscanChar 49 0>

2415:
old  < scanLongDouble$87:>
new  <	mov qword [rbp + 49], scanUnsignedLongInt$78>

2416:
old  <	; PostCall 49>
new  <	mov [rbp + 57], rbp>

2417:
old  <>
new  <	add rbp, 49>

2418:
old  < scanLongDouble$88:>
new  <	jmp unscanChar>

2419:
old  <	; GetReturnValue Â£temporary1197>
new  <>

2420:
old  <>
new  < scanUnsignedLongInt$78:>

2421:
old  < scanLongDouble$89:>
new  <	; PostCall 49>

2422:
old  <	; Assign input Â£temporary1197>
new  <>

2423:
old  <	mov [rbp + 48], bl>
new  < scanUnsignedLongInt$79:>

2424:
old  <>
new  <	; Return unsignedLongValue>

2425:
old  < scanLongDouble$90:>
new  <	mov rbx, [rbp + 28]>

2426:
old  <	; Assign found 1>
new  <	mov rax, [rbp]>

2427:
old  <	mov dword [rbp + 28], 1>
new  <	mov rdi, [rbp + 16]>

2428:
old  <>
new  <	mov rbp, [rbp + 8]>

2429:
old  < scanLongDouble$91:>
new  <	jmp rax>

2430:
old  <	; Goto 66>
new  <>

2431:
old  <	jmp scanLongDouble$66>
new  < scanUnsignedLongInt$80:>

2432:
old  <>
new  <	; FunctionEnd scanUnsignedLongInt>

2433:
old  < scanLongDouble$92:>
new  <>

2434:
old  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <section .data>

2436:
old  < scanLongDouble$93:>
new  <float8$10.0#:>

2437:
old  <	; Parameter signedchar input 73>
new  <	; Initializer LongDouble 10.0>

2438:
old  <	mov al, [rbp + 48]>
new  <	dq 10.0>

2439:
old  <	mov [rbp + 73], al>
new  <>

2440:
old  <>
new  <section .data>

2441:
old  < scanLongDouble$94:>
new  <>

2442:
old  <	; Call unscanChar 49 0>
new  <container4bytes#:>

2443:
old  <	mov qword [rbp + 49], scanLongDouble$95>
new  <	; InitializerZero 4>

2444:
old  <	mov [rbp + 57], rbp>
new  <	times 4 db 0>

2445:
old  <	add rbp, 49>
new  <>

2446:
old  <	jmp unscanChar>
new  <section .data>

2448:
old  < scanLongDouble$95:>
new  <container8bytes#:>

2449:
old  <	; PostCall 49>
new  <	; InitializerZero 8>

2450:
old  <>
new  <	times 8 db 0>

2451:
old  < scanLongDouble$96:>
new  <>

2452:
old  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <section .text>

2454:
old  < scanLongDouble$97:>
new  < scanLongDouble:>

2455:
old  <	; IntegralToIntegral Â£temporary1200 input>
new  <	; Assign minus 0>

2456:
old  <	mov al, [rbp + 48]>
new  <	mov dword [rbp + 24], 0>

2457:
old  <	and eax, 255>
new  <>

2458:
old  <	cmp al, 0>
new  < scanLongDouble$1:>

2459:
old  <	jge scanLongDouble$98>
new  <	; Assign found 0>

2460:
old  <	neg al>
new  <	mov dword [rbp + 28], 0>

2461:
old  <	neg eax>
new  <>

2462:
old  <>
new  < scanLongDouble$2:>

2463:
old  < scanLongDouble$98:>
new  <	; PushFloat 0.0>

2464:
old  <	; Parameter signedint Â£temporary1200 73>
new  <	fldz>

2465:
old  <	mov [rbp + 73], eax>
new  <>

2466:
old  <>
new  < scanLongDouble$3:>

2467:
old  < scanLongDouble$99:>
new  <	; PopFloat value>

2468:
old  <	; Call tolower 49 0>
new  <	fstp qword [rbp + 32]>

2469:
old  <	mov qword [rbp + 49], scanLongDouble$100>
new  <>

2470:
old  <	mov [rbp + 57], rbp>
new  < scanLongDouble$4:>

2471:
old  <	add rbp, 49>
new  <	; PushFloat 1.0>

2472:
old  <	jmp tolower>
new  <	fld1>

2474:
old  < scanLongDouble$100:>
new  < scanLongDouble$5:>

2475:
old  <	; PostCall 49>
new  <	; PopFloat factor>

2476:
old  <>
new  <	fstp qword [rbp + 40]>

2477:
old  < scanLongDouble$101:>
new  <>

2478:
old  <	; GetReturnValue Â£temporary1201>
new  < scanLongDouble$6:>

2479:
old  <>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2480:
old  < scanLongDouble$102:>
new  <>

2481:
old  <	; NotEqual 121 Â£temporary1201 101>
new  < scanLongDouble$7:>

2482:
old  <	cmp ebx, 101>
new  <	; Call scanChar 48 0>

2483:
old  <	jne scanLongDouble$121>
new  <	mov qword [rbp + 48], scanLongDouble$8>

2484:
old  <>
new  <	mov [rbp + 56], rbp>

2485:
old  < scanLongDouble$103:>
new  <	add rbp, 48>

2486:
old  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	jmp scanChar>

2488:
old  < scanLongDouble$104:>
new  < scanLongDouble$8:>

2489:
old  <	; Call scanLongInt 49 0>
new  <	; PostCall 48>

2490:
old  <	mov qword [rbp + 49], scanLongDouble$105>
new  <>

2491:
old  <	mov [rbp + 57], rbp>
new  < scanLongDouble$9:>

2492:
old  <	add rbp, 49>
new  <	; GetReturnValue Â£temporary1207>

2493:
old  <	jmp scanLongInt>
new  <>

2494:
old  <>
new  < scanLongDouble$10:>

2495:
old  < scanLongDouble$105:>
new  <	; Assign input Â£temporary1207>

2496:
old  <	; PostCall 49>
new  <	mov [rbp + 48], bl>

2498:
old  < scanLongDouble$106:>
new  < scanLongDouble$11:>

2499:
old  <	; GetReturnValue Â£temporary1203>
new  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2501:
old  < scanLongDouble$107:>
new  < scanLongDouble$12:>

2502:
old  <	; IntegralToFloating Â£temporary1204 Â£temporary1203>
new  <	; IntegralToIntegral Â£temporary1208 input>

2503:
old  <	mov [container8bytes#], rbx>
new  <	mov al, [rbp + 48]>

2504:
old  <	fild qword [container8bytes#]>
new  <	and eax, 255>

2505:
old  <>
new  <	cmp al, 0>

2506:
old  < scanLongDouble$108:>
new  <	jge scanLongDouble$13>

2507:
old  <	; PopFloat exponent>
new  <	neg al>

2508:
old  <	fstp qword [rbp + 49]>
new  <	neg eax>

2510:
old  < scanLongDouble$109:>
new  < scanLongDouble$13:>

2511:
old  <	; PushFloat value>
new  <	; Parameter signedint Â£temporary1208 73>

2512:
old  <	fld qword [rbp + 32]>
new  <	mov [rbp + 73], eax>

2514:
old  < scanLongDouble$110:>
new  < scanLongDouble$14:>

2515:
old  <	; PreCall 57 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 1>
new  <	; Call isspace 49 0>

2516:
old  <	fstp qword [rbp + 57]>
new  <	mov qword [rbp + 49], scanLongDouble$15>

2517:
old  <>
new  <	mov [rbp + 57], rbp>

2518:
old  < scanLongDouble$111:>
new  <	add rbp, 49>

2519:
old  <	; PushFloat 10.0>
new  <	jmp isspace>

2520:
old  <	fld qword [float8$10.0#]>
new  <>

2521:
old  <>
new  < scanLongDouble$15:>

2522:
old  < scanLongDouble$112:>
new  <	; PostCall 49>

2523:
old  <	; Parameter double 10.0 81>
new  <>

2524:
old  <	fstp qword [rbp + 89]>
new  < scanLongDouble$16:>

2525:
old  <>
new  <	; GetReturnValue Â£temporary1209>

2526:
old  < scanLongDouble$113:>
new  <>

2527:
old  <	; PushFloat exponent>
new  < scanLongDouble$17:>

2528:
old  <	fld qword [rbp + 49]>
new  <	; Equal 24 Â£temporary1209 0>

2529:
old  <>
new  <	cmp ebx, 0>

2530:
old  < scanLongDouble$114:>
new  <	je scanLongDouble$24>

2531:
old  <	; Parameter double exponent 89>
new  <>

2532:
old  <	fstp qword [rbp + 97]>
new  < scanLongDouble$18:>

2533:
old  <>
new  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2534:
old  < scanLongDouble$115:>
new  <>

2535:
old  <	; Call pow 57 0>
new  < scanLongDouble$19:>

2536:
old  <	mov qword [rbp + 65], scanLongDouble$116>
new  <	; Call scanChar 49 0>

2537:
old  <	mov [rbp + 73], rbp>
new  <	mov qword [rbp + 49], scanLongDouble$20>

2538:
old  <	add rbp, 65>
new  <	mov [rbp + 57], rbp>

2539:
old  <	jmp pow>
new  <	add rbp, 49>

2540:
old  <>
new  <	jmp scanChar>

2541:
old  < scanLongDouble$116:>
new  <>

2542:
old  <	; PostCall 57>
new  < scanLongDouble$20:>

2543:
old  <	fstp qword [rbp + 65]>
new  <	; PostCall 49>

2544:
old  <	fld qword [rbp + 57]>
new  <>

2545:
old  <	fld qword [rbp + 65]>
new  < scanLongDouble$21:>

2546:
old  <>
new  <	; GetReturnValue Â£temporary1210>

2547:
old  < scanLongDouble$117:>
new  <>

2548:
old  <	; GetReturnValue Â£temporary1205>
new  < scanLongDouble$22:>

2549:
old  <>
new  <	; Assign input Â£temporary1210>

2550:
old  < scanLongDouble$118:>
new  <	mov [rbp + 48], bl>

2551:
old  <	; SignedMultiply Â£temporary1206 value Â£temporary1205>
new  <>

2552:
old  <	fmul>
new  < scanLongDouble$23:>

2553:
old  <>
new  <	; Goto 11>

2554:
old  < scanLongDouble$119:>
new  <	jmp scanLongDouble$11>

2555:
old  <	; PopFloat value>
new  <>

2556:
old  <	fstp qword [rbp + 32]>
new  < scanLongDouble$24:>

2557:
old  <>
new  <	; NotEqual 31 input 43>

2558:
old  < scanLongDouble$120:>
new  <	cmp byte [rbp + 48], 43>

2559:
old  <	; Goto 125>
new  <	jne scanLongDouble$31>

2560:
old  <	jmp scanLongDouble$125>
new  <>

2561:
old  <>
new  < scanLongDouble$25:>

2562:
old  < scanLongDouble$121:>
new  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2563:
old  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

2564:
old  <>
new  < scanLongDouble$26:>

2565:
old  < scanLongDouble$122:>
new  <	; Call scanChar 49 0>

2566:
old  <	; Parameter signedchar input 73>
new  <	mov qword [rbp + 49], scanLongDouble$27>

2567:
old  <	mov al, [rbp + 48]>
new  <	mov [rbp + 57], rbp>

2568:
old  <	mov [rbp + 73], al>
new  <	add rbp, 49>

2569:
old  <>
new  <	jmp scanChar>

2570:
old  < scanLongDouble$123:>
new  <>

2571:
old  <	; Call unscanChar 49 0>
new  < scanLongDouble$27:>

2572:
old  <	mov qword [rbp + 49], scanLongDouble$124>
new  <	; PostCall 49>

2573:
old  <	mov [rbp + 57], rbp>
new  <>

2574:
old  <	add rbp, 49>
new  < scanLongDouble$28:>

2575:
old  <	jmp unscanChar>
new  <	; GetReturnValue Â£temporary1213>

2577:
old  < scanLongDouble$124:>
new  < scanLongDouble$29:>

2578:
old  <	; PostCall 49>
new  <	; Assign input Â£temporary1213>

2579:
old  <>
new  <	mov [rbp + 48], bl>

2580:
old  < scanLongDouble$125:>
new  <>

2581:
old  <	; Equal 129 minus 0>
new  < scanLongDouble$30:>

2582:
old  <	cmp dword [rbp + 24], 0>
new  <	; Goto 38>

2583:
old  <	je scanLongDouble$129>
new  <	jmp scanLongDouble$38>

2585:
old  < scanLongDouble$126:>
new  < scanLongDouble$31:>

2586:
old  <	; PushFloat value>
new  <	; NotEqual 38 input 45>

2587:
old  <	fld qword [rbp + 32]>
new  <	cmp byte [rbp + 48], 45>

2588:
old  <>
new  <	jne scanLongDouble$38>

2589:
old  < scanLongDouble$127:>
new  <>

2590:
old  <	; UnarySubtract Â£temporary1208 value>
new  < scanLongDouble$32:>

2591:
old  <	fchs>
new  <	; Assign minus 1>

2592:
old  <>
new  <	mov dword [rbp + 24], 1>

2593:
old  < scanLongDouble$128:>
new  <>

2594:
old  <	; PopFloat value>
new  < scanLongDouble$33:>

2595:
old  <	fstp qword [rbp + 32]>
new  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2597:
old  < scanLongDouble$129:>
new  < scanLongDouble$34:>

2598:
old  <	; Equal 131 found 0>
new  <	; Call scanChar 49 0>

2599:
old  <	cmp dword [rbp + 28], 0>
new  <	mov qword [rbp + 49], scanLongDouble$35>

2600:
old  <	je scanLongDouble$131>
new  <	mov [rbp + 57], rbp>

2601:
old  <>
new  <	add rbp, 49>

2602:
old  < scanLongDouble$130:>
new  <	jmp scanChar>

2603:
old  <	; BinaryAdd g_inCount g_inCount 1>
new  <>

2604:
old  <	inc dword [g_inCount]>
new  < scanLongDouble$35:>

2605:
old  <>
new  <	; PostCall 49>

2606:
old  < scanLongDouble$131:>
new  <>

2607:
old  <	; PushFloat value>
new  < scanLongDouble$36:>

2608:
old  <	fld qword [rbp + 32]>
new  <	; GetReturnValue Â£temporary1215>

2610:
old  < scanLongDouble$132:>
new  < scanLongDouble$37:>

2611:
old  <	; Return value>
new  <	; Assign input Â£temporary1215>

2612:
old  <	mov rax, [rbp]>
new  <	mov [rbp + 48], bl>

2613:
old  <	mov rdi, [rbp + 16]>
new  <>

2614:
old  <	mov rbp, [rbp + 8]>
new  < scanLongDouble$38:>

2615:
old  <	jmp rax>
new  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2617:
old  < scanLongDouble$133:>
new  < scanLongDouble$39:>

2618:
old  <	; FunctionEnd scanLongDouble>
new  <	; IntegralToIntegral Â£temporary1216 input>

2619:
old  <>
new  <	mov al, [rbp + 48]>

2620:
old  <section .data>
new  <	and eax, 255>

2621:
old  <>
new  <	cmp al, 0>

2622:
old  <string_scanFormat20c203D202725c270A#:>
new  <	jge scanLongDouble$40>

2623:
old  <	; Initializer String scanFormat c = '%c'\n>
new  <	neg al>

2624:
old  <	db "scanFormat c = ", 39, "%c", 39, 10, 0>
new  <	neg eax>

2626:
old  <section .text>
new  < scanLongDouble$40:>

2627:
old  <>
new  <	; Parameter signedint Â£temporary1216 73>

2628:
old  < scanFormat:>
new  <	mov [rbp + 73], eax>

2629:
old  <	; Assign percent 0>
new  <>

2630:
old  <	mov dword [rbp + 49], 0>
new  < scanLongDouble$41:>

2631:
old  <>
new  <	; Call isdigit 49 0>

2632:
old  < scanFormat$1:>
new  <	mov qword [rbp + 49], scanLongDouble$42>

2633:
old  <	; Assign shortInt 0>
new  <	mov [rbp + 57], rbp>

2634:
old  <	mov dword [rbp + 53], 0>
new  <	add rbp, 49>

2635:
old  <>
new  <	jmp isdigit>

2636:
old  < scanFormat$2:>
new  <>

2637:
old  <	; Assign longIntOrDouble 0>
new  < scanLongDouble$42:>

2638:
old  <	mov dword [rbp + 57], 0>
new  <	; PostCall 49>

2640:
old  < scanFormat$3:>
new  < scanLongDouble$43:>

2641:
old  <	; Assign longDouble 0>
new  <	; GetReturnValue Â£temporary1217>

2642:
old  <	mov dword [rbp + 61], 0>
new  <>

2643:
old  <>
new  < scanLongDouble$44:>

2644:
old  < scanFormat$4:>
new  <	; Equal 60 Â£temporary1217 0>

2645:
old  <	; Assign star 0>
new  <	cmp ebx, 0>

2646:
old  <	mov dword [rbp + 65], 0>
new  <	je scanLongDouble$60>

2648:
old  < scanFormat$5:>
new  < scanLongDouble$45:>

2649:
old  <	; Assign g_inCount 0>
new  <	; PushFloat 10.0>

2650:
old  <	mov dword [g_inCount], 0>
new  <	fld qword [float8$10.0#]>

2652:
old  < scanFormat$6:>
new  < scanLongDouble$46:>

2653:
old  <	; Assign g_inChars 0>
new  <	; PushFloat value>

2654:
old  <	mov dword [g_inChars], 0>
new  <	fld qword [rbp + 32]>

2656:
old  < scanFormat$7:>
new  < scanLongDouble$47:>

2657:
old  <	; Assign index 0>
new  <	; SignedMultiply Â£temporary1218 10.0 value>

2658:
old  <	mov dword [rbp + 93], 0>
new  <	fmul>

2660:
old  < scanFormat$8:>
new  < scanLongDouble$48:>

2661:
old  <	; IntegralToIntegral Â£temporary1215 index>
new  <	; BinarySubtract Â£temporary1219 input 48>

2662:
old  <	mov eax, [rbp + 93]>
new  <	mov al, [rbp + 48]>

2663:
old  <	mov rbx, 4294967295>
new  <	sub al, 48>

2664:
old  <	and rax, rbx>
new  <>

2665:
old  <>
new  < scanLongDouble$49:>

2666:
old  < scanFormat$9:>
new  <	; IntegralToIntegral Â£temporary1221 Â£temporary1219>

2667:
old  <	; BinaryAdd Â£temporary1217 format Â£temporary1215>
new  <	and eax, 255>

2668:
old  <	mov rsi, [rbp + 24]>
new  <	cmp al, 0>

2669:
old  <	add rsi, rax>
new  <	jge scanLongDouble$50>

2670:
old  <>
new  <	neg al>

2671:
old  < scanFormat$10:>
new  <	neg eax>

2672:
old  <	; Dereference Â£temporary1214 -> Â£temporary1217 Â£temporary1217 0>
new  <>

2673:
old  <>
new  < scanLongDouble$50:>

2674:
old  < scanFormat$11:>
new  <	; IntegralToFloating Â£temporary1220 Â£temporary1221>

2675:
old  <	; Equal 332 Â£temporary1214 -> Â£temporary1217 0>
new  <	mov [container4bytes#], eax>

2676:
old  <	cmp byte [rsi], 0>
new  <	fild dword [container4bytes#]>

2677:
old  <	je scanFormat$332>
new  <>

2678:
old  <>
new  < scanLongDouble$51:>

2679:
old  < scanFormat$12:>
new  <	; BinaryAdd Â£temporary1222 Â£temporary1218 Â£temporary1220>

2680:
old  <	; IntegralToIntegral Â£temporary1221 index>
new  <	fadd>

2681:
old  <	mov eax, [rbp + 93]>
new  <>

2682:
old  <	mov rbx, 4294967295>
new  < scanLongDouble$52:>

2683:
old  <	and rax, rbx>
new  <	; PopFloat value>

2684:
old  <>
new  <	fstp qword [rbp + 32]>

2685:
old  < scanFormat$13:>
new  <>

2686:
old  <	; BinaryAdd Â£temporary1223 format Â£temporary1221>
new  < scanLongDouble$53:>

2687:
old  <	mov rsi, [rbp + 24]>
new  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2688:
old  <	add rsi, rax>
new  <>

2689:
old  <>
new  < scanLongDouble$54:>

2690:
old  < scanFormat$14:>
new  <	; Call scanChar 49 0>

2691:
old  <	; Dereference Â£temporary1220 -> Â£temporary1223 Â£temporary1223 0>
new  <	mov qword [rbp + 49], scanLongDouble$55>

2692:
old  <>
new  <	mov [rbp + 57], rbp>

2693:
old  < scanFormat$15:>
new  <	add rbp, 49>

2694:
old  <	; Assign c Â£temporary1220 -> Â£temporary1223>
new  <	jmp scanChar>

2695:
old  <	mov al, [rsi]>
new  <>

2696:
old  <	mov [rbp + 40], al>
new  < scanLongDouble$55:>

2697:
old  <>
new  <	; PostCall 49>

2698:
old  < scanFormat$16:>
new  <>

2699:
old  <	; IntegralToIntegral Â£temporary1224 c>
new  < scanLongDouble$56:>

2700:
old  <	mov al, [rbp + 40]>
new  <	; GetReturnValue Â£temporary1223>

2701:
old  <	and eax, 255>
new  <>

2702:
old  <	cmp al, 0>
new  < scanLongDouble$57:>

2703:
old  <	jge scanFormat$17>
new  <	; Assign input Â£temporary1223>

2704:
old  <	neg al>
new  <	mov [rbp + 48], bl>

2705:
old  <	neg eax>
new  <>

2706:
old  <>
new  < scanLongDouble$58:>

2707:
old  < scanFormat$17:>
new  <	; Assign found 1>

2708:
old  <	; BinaryAdd d Â£temporary1224 1>
new  <	mov dword [rbp + 28], 1>

2709:
old  <	inc eax>
new  <>

2710:
old  <	mov [rbp + 153], eax>
new  < scanLongDouble$59:>

2711:
old  <>
new  <	; Goto 38>

2712:
old  < scanFormat$18:>
new  <	jmp scanLongDouble$38>

2713:
old  <	; Equal 324 percent 0>
new  <>

2714:
old  <	cmp dword [rbp + 49], 0>
new  < scanLongDouble$60:>

2715:
old  <	je scanFormat$324>
new  <	; NotEqual 92 input 46>

2716:
old  <>
new  <	cmp byte [rbp + 48], 46>

2717:
old  < scanFormat$19:>
new  <	jne scanLongDouble$92>

2718:
old  <	; BinarySubtract Â£temporary1226 d 1>
new  <>

2719:
old  <	mov eax, [rbp + 153]>
new  < scanLongDouble$61:>

2720:
old  <	dec eax>
new  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2722:
old  < scanFormat$20:>
new  < scanLongDouble$62:>

2723:
old  <	; Case 38 Â£temporary1226 104>
new  <	; Call scanChar 49 0>

2724:
old  <	cmp eax, 104>
new  <	mov qword [rbp + 49], scanLongDouble$63>

2725:
old  <	je scanFormat$38>
new  <	mov [rbp + 57], rbp>

2726:
old  <>
new  <	add rbp, 49>

2727:
old  < scanFormat$21:>
new  <	jmp scanChar>

2728:
old  <	; Case 40 Â£temporary1226 108>
new  <>

2729:
old  <	cmp eax, 108>
new  < scanLongDouble$63:>

2730:
old  <	je scanFormat$40>
new  <	; PostCall 49>

2732:
old  < scanFormat$22:>
new  < scanLongDouble$64:>

2733:
old  <	; Case 42 Â£temporary1226 76>
new  <	; GetReturnValue Â£temporary1226>

2734:
old  <	cmp eax, 76>
new  <>

2735:
old  <	je scanFormat$42>
new  < scanLongDouble$65:>

2736:
old  <>
new  <	; Assign input Â£temporary1226>

2737:
old  < scanFormat$23:>
new  <	mov [rbp + 48], bl>

2738:
old  <	; Case 44 Â£temporary1226 42>
new  <>

2739:
old  <	cmp eax, 42>
new  < scanLongDouble$66:>

2740:
old  <	je scanFormat$44>
new  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2742:
old  < scanFormat$24:>
new  < scanLongDouble$67:>

2743:
old  <	; Case 46 Â£temporary1226 99>
new  <	; IntegralToIntegral Â£temporary1227 input>

2744:
old  <	cmp eax, 99>
new  <	mov al, [rbp + 48]>

2745:
old  <	je scanFormat$46>
new  <	and eax, 255>

2746:
old  <>
new  <	cmp al, 0>

2747:
old  < scanFormat$25:>
new  <	jge scanLongDouble$68>

2748:
old  <	; Case 64 Â£temporary1226 115>
new  <	neg al>

2749:
old  <	cmp eax, 115>
new  <	neg eax>

2750:
old  <	je scanFormat$64>
new  <>

2751:
old  <>
new  < scanLongDouble$68:>

2752:
old  < scanFormat$26:>
new  <	; Parameter signedint Â£temporary1227 73>

2753:
old  <	; Case 83 Â£temporary1226 100>
new  <	mov [rbp + 73], eax>

2754:
old  <	cmp eax, 100>
new  <>

2755:
old  <	je scanFormat$83>
new  < scanLongDouble$69:>

2756:
old  <>
new  <	; Call isdigit 49 0>

2757:
old  < scanFormat$27:>
new  <	mov qword [rbp + 49], scanLongDouble$70>

2758:
old  <	; Case 83 Â£temporary1226 105>
new  <	mov [rbp + 57], rbp>

2759:
old  <	cmp eax, 105>
new  <	add rbp, 49>

2760:
old  <	je scanFormat$83>
new  <	jmp isdigit>

2762:
old  < scanFormat$28:>
new  < scanLongDouble$70:>

2763:
old  <	; Case 118 Â£temporary1226 111>
new  <	; PostCall 49>

2764:
old  <	cmp eax, 111>
new  <>

2765:
old  <	je scanFormat$118>
new  < scanLongDouble$71:>

2766:
old  <>
new  <	; GetReturnValue Â£temporary1228>

2767:
old  < scanFormat$29:>
new  <>

2768:
old  <	; Case 154 Â£temporary1226 120>
new  < scanLongDouble$72:>

2769:
old  <	cmp eax, 120>
new  <	; Equal 92 Â£temporary1228 0>

2770:
old  <	je scanFormat$154>
new  <	cmp ebx, 0>

2771:
old  <>
new  <	je scanLongDouble$92>

2772:
old  < scanFormat$30:>
new  <>

2773:
old  <	; Case 190 Â£temporary1226 117>
new  < scanLongDouble$73:>

2774:
old  <	cmp eax, 117>
new  <	; PushFloat factor>

2775:
old  <	je scanFormat$190>
new  <	fld qword [rbp + 40]>

2777:
old  < scanFormat$31:>
new  < scanLongDouble$74:>

2778:
old  <	; Case 226 Â£temporary1226 103>
new  <	; PushFloat 10.0>

2779:
old  <	cmp eax, 103>
new  <	fld qword [float8$10.0#]>

2780:
old  <	je scanFormat$226>
new  <>

2781:
old  <>
new  < scanLongDouble$75:>

2782:
old  < scanFormat$32:>
new  <	; SignedDivide Â£temporary1229 factor 10.0>

2783:
old  <	; Case 226 Â£temporary1226 102>
new  <	fdiv>

2784:
old  <	cmp eax, 102>
new  <>

2785:
old  <	je scanFormat$226>
new  < scanLongDouble$76:>

2786:
old  <>
new  <	; PopFloat factor>

2787:
old  < scanFormat$33:>
new  <	fstp qword [rbp + 40]>

2788:
old  <	; Case 226 Â£temporary1226 101>
new  <>

2789:
old  <	cmp eax, 101>
new  < scanLongDouble$77:>

2790:
old  <	je scanFormat$226>
new  <	; PushFloat value>

2791:
old  <>
new  <	fld qword [rbp + 32]>

2792:
old  < scanFormat$34:>
new  <>

2793:
old  <	; Case 262 Â£temporary1226 91>
new  < scanLongDouble$78:>

2794:
old  <	cmp eax, 91>
new  <	; PushFloat factor>

2795:
old  <	je scanFormat$262>
new  <	fld qword [rbp + 40]>

2797:
old  < scanFormat$35:>
new  < scanLongDouble$79:>

2798:
old  <	; Case 308 Â£temporary1226 110>
new  <	; BinarySubtract Â£temporary1230 input 48>

2799:
old  <	cmp eax, 110>
new  <	mov al, [rbp + 48]>

2800:
old  <	je scanFormat$308>
new  <	sub al, 48>

2802:
old  < scanFormat$36:>
new  < scanLongDouble$80:>

2803:
old  <	; CaseEnd Â£temporary1226>
new  <	; IntegralToIntegral Â£temporary1232 Â£temporary1230>

2804:
old  <>
new  <	and eax, 255>

2805:
old  < scanFormat$37:>
new  <	cmp al, 0>

2806:
old  <	; Goto 317>
new  <	jge scanLongDouble$81>

2807:
old  <	jmp scanFormat$317>
new  <	neg al>

2808:
old  <>
new  <	neg eax>

2809:
old  < scanFormat$38:>
new  <>

2810:
old  <	; Assign shortInt 1>
new  < scanLongDouble$81:>

2811:
old  <	mov dword [rbp + 53], 1>
new  <	; IntegralToFloating Â£temporary1231 Â£temporary1232>

2812:
old  <>
new  <	mov [container4bytes#], eax>

2813:
old  < scanFormat$39:>
new  <	fild dword [container4bytes#]>

2814:
old  <	; Goto 330>
new  <>

2815:
old  <	jmp scanFormat$330>
new  < scanLongDouble$82:>

2816:
old  <>
new  <	; SignedMultiply Â£temporary1233 factor Â£temporary1231>

2817:
old  < scanFormat$40:>
new  <	fmul>

2818:
old  <	; Assign longIntOrDouble 1>
new  <>

2819:
old  <	mov dword [rbp + 57], 1>
new  < scanLongDouble$83:>

2820:
old  <>
new  <	; BinaryAdd Â£temporary1234 value Â£temporary1233>

2821:
old  < scanFormat$41:>
new  <	fadd>

2822:
old  <	; Goto 330>
new  <>

2823:
old  <	jmp scanFormat$330>
new  < scanLongDouble$84:>

2824:
old  <>
new  <	; PopFloat value>

2825:
old  < scanFormat$42:>
new  <	fstp qword [rbp + 32]>

2826:
old  <	; Assign longDouble 1>
new  <>

2827:
old  <	mov dword [rbp + 61], 1>
new  < scanLongDouble$85:>

2828:
old  <>
new  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2829:
old  < scanFormat$43:>
new  <>

2830:
old  <	; Goto 330>
new  < scanLongDouble$86:>

2831:
old  <	jmp scanFormat$330>
new  <	; Call scanChar 49 0>

2832:
old  <>
new  <	mov qword [rbp + 49], scanLongDouble$87>

2833:
old  < scanFormat$44:>
new  <	mov [rbp + 57], rbp>

2834:
old  <	; Assign star 1>
new  <	add rbp, 49>

2835:
old  <	mov dword [rbp + 65], 1>
new  <	jmp scanChar>

2837:
old  < scanFormat$45:>
new  < scanLongDouble$87:>

2838:
old  <	; Goto 330>
new  <	; PostCall 49>

2839:
old  <	jmp scanFormat$330>
new  <>

2840:
old  <>
new  < scanLongDouble$88:>

2841:
old  < scanFormat$46:>
new  <	; GetReturnValue Â£temporary1235>

2842:
old  <	; PreCall 157 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

2843:
old  <>
new  < scanLongDouble$89:>

2844:
old  < scanFormat$47:>
new  <	; Assign input Â£temporary1235>

2845:
old  <	; Call scanChar 157 0>
new  <	mov [rbp + 48], bl>

2846:
old  <	mov qword [rbp + 157], scanFormat$48>
new  <>

2847:
old  <	mov [rbp + 165], rbp>
new  < scanLongDouble$90:>

2848:
old  <	add rbp, 157>
new  <	; Assign found 1>

2849:
old  <	jmp scanChar>
new  <	mov dword [rbp + 28], 1>

2851:
old  < scanFormat$48:>
new  < scanLongDouble$91:>

2852:
old  <	; PostCall 157>
new  <	; Goto 66>

2853:
old  <>
new  <	jmp scanLongDouble$66>

2854:
old  < scanFormat$49:>
new  <>

2855:
old  <	; GetReturnValue Â£temporary1227>
new  < scanLongDouble$92:>

2856:
old  <>
new  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2857:
old  < scanFormat$50:>
new  <>

2858:
old  <	; Assign charValue Â£temporary1227>
new  < scanLongDouble$93:>

2859:
old  <	mov [rbp + 157], bl>
new  <	; IntegralToIntegral Â£temporary1237 input>

2860:
old  <>
new  <	mov al, [rbp + 48]>

2861:
old  < scanFormat$51:>
new  <	and eax, 255>

2862:
old  <	; NotEqual 59 star 0>
new  <	cmp al, 0>

2863:
old  <	cmp dword [rbp + 65], 0>
new  <	jge scanLongDouble$94>

2864:
old  <	jne scanFormat$59>
new  <	neg al>

2865:
old  <>
new  <	neg eax>

2866:
old  < scanFormat$52:>
new  <>

2867:
old  <	; BinaryAdd arg_list arg_list 8>
new  < scanLongDouble$94:>

2868:
old  <	add qword [rbp + 32], 8>
new  <	; Parameter signedint Â£temporary1237 73>

2869:
old  <>
new  <	mov [rbp + 73], eax>

2870:
old  < scanFormat$53:>
new  <>

2871:
old  <	; BinarySubtract Â£temporary1232 arg_list 8>
new  < scanLongDouble$95:>

2872:
old  <	mov rsi, [rbp + 32]>
new  <	; Call tolower 49 0>

2873:
old  <	sub rsi, 8>
new  <	mov qword [rbp + 49], scanLongDouble$96>

2874:
old  <>
new  <	mov [rbp + 57], rbp>

2875:
old  < scanFormat$54:>
new  <	add rbp, 49>

2876:
old  <	; IntegralToIntegral Â£temporary1234 Â£temporary1232>
new  <	jmp tolower>

2878:
old  < scanFormat$55:>
new  < scanLongDouble$96:>

2879:
old  <	; Dereference Â£temporary1235 -> Â£temporary1234 Â£temporary1234 0>
new  <	; PostCall 49>

2881:
old  < scanFormat$56:>
new  < scanLongDouble$97:>

2882:
old  <	; Assign charPtr Â£temporary1235 -> Â£temporary1234>
new  <	; GetReturnValue Â£temporary1238>

2883:
old  <	mov rax, [rsi]>
new  <>

2884:
old  <	mov [rbp + 41], rax>
new  < scanLongDouble$98:>

2885:
old  <>
new  <	; NotEqual 118 Â£temporary1238 101>

2886:
old  < scanFormat$57:>
new  <	cmp ebx, 101>

2887:
old  <	; Dereference Â£temporary1236 -> charPtr charPtr 0>
new  <	jne scanLongDouble$118>

2888:
old  <	mov rsi, [rbp + 41]>
new  <>

2889:
old  <>
new  < scanLongDouble$99:>

2890:
old  < scanFormat$58:>
new  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2891:
old  <	; Assign Â£temporary1236 -> charPtr charValue>
new  <>

2892:
old  <	mov al, [rbp + 157]>
new  < scanLongDouble$100:>

2893:
old  <	mov [rsi], al>
new  <	; Parameter signedint 10 73>

2894:
old  <>
new  <	mov dword [rbp + 73], 10>

2895:
old  < scanFormat$59:>
new  <>

2896:
old  <	; Assign percent 0>
new  < scanLongDouble$101:>

2897:
old  <	mov dword [rbp + 49], 0>
new  <	; Call scanLongInt 49 0>

2898:
old  <>
new  <	mov qword [rbp + 49], scanLongDouble$102>

2899:
old  < scanFormat$60:>
new  <	mov [rbp + 57], rbp>

2900:
old  <	; IntegralToIntegral Â£temporary1237 charValue>
new  <	add rbp, 49>

2901:
old  <	mov al, [rbp + 157]>
new  <	jmp scanLongInt>

2902:
old  <	and eax, 255>
new  <>

2903:
old  <	cmp al, 0>
new  < scanLongDouble$102:>

2904:
old  <	jge scanFormat$61>
new  <	; PostCall 49>

2905:
old  <	neg al>
new  <>

2906:
old  <	neg eax>
new  < scanLongDouble$103:>

2907:
old  <>
new  <	; GetReturnValue Â£temporary1240>

2908:
old  < scanFormat$61:>
new  <>

2909:
old  <	; Equal 330 Â£temporary1237 -1>
new  < scanLongDouble$104:>

2910:
old  <	cmp eax, -1>
new  <	; IntegralToFloating Â£temporary1241 Â£temporary1240>

2911:
old  <	je scanFormat$330>
new  <	mov [container8bytes#], rbx>

2912:
old  <>
new  <	fild qword [container8bytes#]>

2913:
old  < scanFormat$62:>
new  <>

2914:
old  <	; BinaryAdd g_inCount g_inCount 1>
new  < scanLongDouble$105:>

2915:
old  <	inc dword [g_inCount]>
new  <	; PopFloat exponent>

2916:
old  <>
new  <	fstp qword [rbp + 49]>

2917:
old  < scanFormat$63:>
new  <>

2918:
old  <	; Goto 330>
new  < scanLongDouble$106:>

2919:
old  <	jmp scanFormat$330>
new  <	; PushFloat value>

2920:
old  <>
new  <	fld qword [rbp + 32]>

2921:
old  < scanFormat$64:>
new  <>

2922:
old  <	; NotEqual 76 star 0>
new  < scanLongDouble$107:>

2923:
old  <	cmp dword [rbp + 65], 0>
new  <	; PreCall 57 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 1>

2924:
old  <	jne scanFormat$76>
new  <	fstp qword [rbp + 57]>

2926:
old  < scanFormat$65:>
new  < scanLongDouble$108:>

2927:
old  <	; BinaryAdd arg_list arg_list 8>
new  <	; PushFloat 10.0>

2928:
old  <	add qword [rbp + 32], 8>
new  <	fld qword [float8$10.0#]>

2930:
old  < scanFormat$66:>
new  < scanLongDouble$109:>

2931:
old  <	; BinarySubtract Â£temporary1244 arg_list 8>
new  <	; Parameter double 10.0 81>

2932:
old  <	mov rsi, [rbp + 32]>
new  <	fstp qword [rbp + 89]>

2933:
old  <	sub rsi, 8>
new  <>

2934:
old  <>
new  < scanLongDouble$110:>

2935:
old  < scanFormat$67:>
new  <	; PushFloat exponent>

2936:
old  <	; IntegralToIntegral Â£temporary1246 Â£temporary1244>
new  <	fld qword [rbp + 49]>

2938:
old  < scanFormat$68:>
new  < scanLongDouble$111:>

2939:
old  <	; Dereference Â£temporary1247 -> Â£temporary1246 Â£temporary1246 0>
new  <	; Parameter double exponent 89>

2940:
old  <>
new  <	fstp qword [rbp + 97]>

2941:
old  < scanFormat$69:>
new  <>

2942:
old  <	; Assign charPtr Â£temporary1247 -> Â£temporary1246>
new  < scanLongDouble$112:>

2943:
old  <	mov rax, [rsi]>
new  <	; Call pow 57 0>

2944:
old  <	mov [rbp + 41], rax>
new  <	mov qword [rbp + 65], scanLongDouble$113>

2945:
old  <>
new  <	mov [rbp + 73], rbp>

2946:
old  < scanFormat$70:>
new  <	add rbp, 65>

2947:
old  <	; PreCall 157 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	jmp pow>

2949:
old  < scanFormat$71:>
new  < scanLongDouble$113:>

2950:
old  <	; Parameter pointer charPtr 181>
new  <	; PostCall 57>

2951:
old  <	mov rax, [rbp + 41]>
new  <	fstp qword [rbp + 65]>

2952:
old  <	mov [rbp + 181], rax>
new  <	fld qword [rbp + 57]>

2953:
old  <>
new  <	fld qword [rbp + 65]>

2954:
old  < scanFormat$72:>
new  <>

2955:
old  <	; Parameter signedint 0 189>
new  < scanLongDouble$114:>

2956:
old  <	mov dword [rbp + 189], 0>
new  <	; GetReturnValue Â£temporary1242>

2958:
old  < scanFormat$73:>
new  < scanLongDouble$115:>

2959:
old  <	; Call scanString 157 0>
new  <	; SignedMultiply Â£temporary1243 value Â£temporary1242>

2960:
old  <	mov qword [rbp + 157], scanFormat$74>
new  <	fmul>

2961:
old  <	mov [rbp + 165], rbp>
new  <>

2962:
old  <	add rbp, 157>
new  < scanLongDouble$116:>

2963:
old  <	jmp scanString>
new  <	; PopFloat value>

2964:
old  <>
new  <	fstp qword [rbp + 32]>

2965:
old  < scanFormat$74:>
new  <>

2966:
old  <	; PostCall 157>
new  < scanLongDouble$117:>

2967:
old  <>
new  <	; Goto 122>

2968:
old  < scanFormat$75:>
new  <	jmp scanLongDouble$122>

2969:
old  <	; Goto 81>
new  <>

2970:
old  <	jmp scanFormat$81>
new  < scanLongDouble$118:>

2971:
old  <>
new  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2972:
old  < scanFormat$76:>
new  <>

2973:
old  <	; PreCall 157 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < scanLongDouble$119:>

2974:
old  <>
new  <	; Parameter signedchar input 73>

2975:
old  < scanFormat$77:>
new  <	mov al, [rbp + 48]>

2976:
old  <	; Parameter pointer 0 181>
new  <	mov [rbp + 73], al>

2977:
old  <	mov qword [rbp + 181], 0>
new  <>

2978:
old  <>
new  < scanLongDouble$120:>

2979:
old  < scanFormat$78:>
new  <	; Call unscanChar 49 0>

2980:
old  <	; Parameter signedint 0 189>
new  <	mov qword [rbp + 49], scanLongDouble$121>

2981:
old  <	mov dword [rbp + 189], 0>
new  <	mov [rbp + 57], rbp>

2982:
old  <>
new  <	add rbp, 49>

2983:
old  < scanFormat$79:>
new  <	jmp unscanChar>

2984:
old  <	; Call scanString 157 0>
new  <>

2985:
old  <	mov qword [rbp + 157], scanFormat$80>
new  < scanLongDouble$121:>

2986:
old  <	mov [rbp + 165], rbp>
new  <	; PostCall 49>

2987:
old  <	add rbp, 157>
new  <>

2988:
old  <	jmp scanString>
new  < scanLongDouble$122:>

2989:
old  <>
new  <	; Equal 126 minus 0>

2990:
old  < scanFormat$80:>
new  <	cmp dword [rbp + 24], 0>

2991:
old  <	; PostCall 157>
new  <	je scanLongDouble$126>

2993:
old  < scanFormat$81:>
new  < scanLongDouble$123:>

2994:
old  <	; Assign percent 0>
new  <	; PushFloat value>

2995:
old  <	mov dword [rbp + 49], 0>
new  <	fld qword [rbp + 32]>

2997:
old  < scanFormat$82:>
new  < scanLongDouble$124:>

2998:
old  <	; Goto 330>
new  <	; UnarySubtract Â£temporary1245 value>

2999:
old  <	jmp scanFormat$330>
new  <	fchs>

3001:
old  < scanFormat$83:>
new  < scanLongDouble$125:>

3002:
old  <	; PreCall 157 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; PopFloat value>

3003:
old  <>
new  <	fstp qword [rbp + 32]>

3004:
old  < scanFormat$84:>
new  <>

3005:
old  <	; Call scanLongInt 157 0>
new  < scanLongDouble$126:>

3006:
old  <	mov qword [rbp + 157], scanFormat$85>
new  <	; Equal 128 found 0>

3007:
old  <	mov [rbp + 165], rbp>
new  <	cmp dword [rbp + 28], 0>

3008:
old  <	add rbp, 157>
new  <	je scanLongDouble$128>

3009:
old  <	jmp scanLongInt>
new  <>

3010:
old  <>
new  < scanLongDouble$127:>

3011:
old  < scanFormat$85:>
new  <	; BinaryAdd g_inCount g_inCount 1>

3012:
old  <	; PostCall 157>
new  <	inc dword [g_inCount]>

3014:
old  < scanFormat$86:>
new  < scanLongDouble$128:>

3015:
old  <	; GetReturnValue Â£temporary1250>
new  <	; PushFloat value>

3016:
old  <>
new  <	fld qword [rbp + 32]>

3017:
old  < scanFormat$87:>
new  <>

3018:
old  <	; Assign longValue Â£temporary1250>
new  < scanLongDouble$129:>

3019:
old  <	mov [rbp + 69], rbx>
new  <	; Return value>

3020:
old  <>
new  <	mov rax, [rbp]>

3021:
old  < scanFormat$88:>
new  <	mov rdi, [rbp + 16]>

3022:
old  <	; NotEqual 116 star 0>
new  <	mov rbp, [rbp + 8]>

3023:
old  <	cmp dword [rbp + 65], 0>
new  <	jmp rax>

3024:
old  <	jne scanFormat$116>
new  <>

3025:
old  <>
new  < scanLongDouble$130:>

3026:
old  < scanFormat$89:>
new  <	; FunctionEnd scanLongDouble>

3027:
old  <	; Equal 99 shortInt 0>
new  <>

3028:
old  <	cmp dword [rbp + 53], 0>
new  <section .data>

3029:
old  <	je scanFormat$99>
new  <>

3030:
old  <>
new  <string_scanFormat20c203D202725c270A#:>

3031:
old  < scanFormat$90:>
new  <	; Initializer String scanFormat c = '%c'\n>

3032:
old  <	; BinaryAdd arg_list arg_list 8>
new  <	db "scanFormat c = ", 39, "%c", 39, 10, 0>

3033:
old  <	add qword [rbp + 32], 8>
new  <>

3034:
old  <>
new  <section .text>

3035:
old  < scanFormat$91:>
new  <>

3036:
old  <	; BinarySubtract Â£temporary1255 arg_list 8>
new  < scanFormat:>

3037:
old  <	mov rsi, [rbp + 32]>
new  <	; Assign percent 0>

3038:
old  <	sub rsi, 8>
new  <	mov dword [rbp + 49], 0>

3040:
old  < scanFormat$92:>
new  < scanFormat$1:>

3041:
old  <	; IntegralToIntegral Â£temporary1257 Â£temporary1255>
new  <	; Assign shortInt 0>

3042:
old  <>
new  <	mov dword [rbp + 53], 0>

3043:
old  < scanFormat$93:>
new  <>

3044:
old  <	; Dereference Â£temporary1258 -> Â£temporary1257 Â£temporary1257 0>
new  < scanFormat$2:>

3045:
old  <>
new  <	; Assign longIntOrDouble 0>

3046:
old  < scanFormat$94:>
new  <	mov dword [rbp + 57], 0>

3047:
old  <	; Assign shortPtr Â£temporary1258 -> Â£temporary1257>
new  <>

3048:
old  <	mov rax, [rsi]>
new  < scanFormat$3:>

3049:
old  <	mov [rbp + 85], rax>
new  <	; Assign longDouble 0>

3050:
old  <>
new  <	mov dword [rbp + 61], 0>

3051:
old  < scanFormat$95:>
new  <>

3052:
old  <	; Dereference Â£temporary1259 -> shortPtr shortPtr 0>
new  < scanFormat$4:>

3053:
old  <	mov rsi, [rbp + 85]>
new  <	; Assign star 0>

3054:
old  <>
new  <	mov dword [rbp + 65], 0>

3055:
old  < scanFormat$96:>
new  <>

3056:
old  <	; IntegralToIntegral Â£temporary1260 longValue>
new  < scanFormat$5:>

3057:
old  <	mov rax, [rbp + 69]>
new  <	; Assign g_inCount 0>

3058:
old  <	cmp rax, 0>
new  <	mov dword [g_inCount], 0>

3059:
old  <	jge scanFormat$97>
new  <>

3060:
old  <	neg rax>
new  < scanFormat$6:>

3061:
old  <	neg ax>
new  <	; Assign g_inChars 0>

3062:
old  <>
new  <	mov dword [g_inChars], 0>

3063:
old  < scanFormat$97:>
new  <>

3064:
old  <	; Assign Â£temporary1259 -> shortPtr Â£temporary1260>
new  < scanFormat$7:>

3065:
old  <	mov [rsi], ax>
new  <	; Assign index 0>

3066:
old  <>
new  <	mov dword [rbp + 93], 0>

3067:
old  < scanFormat$98:>
new  <>

3068:
old  <	; Goto 116>
new  < scanFormat$8:>

3069:
old  <	jmp scanFormat$116>
new  <	; IntegralToIntegral Â£temporary1252 index>

3070:
old  <>
new  <	mov eax, [rbp + 93]>

3071:
old  < scanFormat$99:>
new  <	mov rbx, 4294967295>

3072:
old  <	; NotEqual 109 longIntOrDouble 0>
new  <	and rax, rbx>

3073:
old  <	cmp dword [rbp + 57], 0>
new  <>

3074:
old  <	jne scanFormat$109>
new  < scanFormat$9:>

3075:
old  <>
new  <	; BinaryAdd Â£temporary1254 format Â£temporary1252>

3076:
old  < scanFormat$100:>
new  <	mov rsi, [rbp + 24]>

3077:
old  <	; BinaryAdd arg_list arg_list 8>
new  <	add rsi, rax>

3078:
old  <	add qword [rbp + 32], 8>
new  <>

3079:
old  <>
new  < scanFormat$10:>

3080:
old  < scanFormat$101:>
new  <	; Dereference Â£temporary1251 -> Â£temporary1254 Â£temporary1254 0>

3081:
old  <	; BinarySubtract Â£temporary1265 arg_list 8>
new  <>

3082:
old  <	mov rsi, [rbp + 32]>
new  < scanFormat$11:>

3083:
old  <	sub rsi, 8>
new  <	; Equal 333 Â£temporary1251 -> Â£temporary1254 0>

3084:
old  <>
new  <	cmp byte [rsi], 0>

3085:
old  < scanFormat$102:>
new  <	je scanFormat$333>

3086:
old  <	; IntegralToIntegral Â£temporary1267 Â£temporary1265>
new  <>

3087:
old  <>
new  < scanFormat$12:>

3088:
old  < scanFormat$103:>
new  <	; IntegralToIntegral Â£temporary1258 index>

3089:
old  <	; Dereference Â£temporary1268 -> Â£temporary1267 Â£temporary1267 0>
new  <	mov eax, [rbp + 93]>

3090:
old  <>
new  <	mov rbx, 4294967295>

3091:
old  < scanFormat$104:>
new  <	and rax, rbx>

3092:
old  <	; Assign intPtr Â£temporary1268 -> Â£temporary1267>
new  <>

3093:
old  <	mov rax, [rsi]>
new  < scanFormat$13:>

3094:
old  <	mov [rbp + 97], rax>
new  <	; BinaryAdd Â£temporary1260 format Â£temporary1258>

3095:
old  <>
new  <	mov rsi, [rbp + 24]>

3096:
old  < scanFormat$105:>
new  <	add rsi, rax>

3097:
old  <	; Dereference Â£temporary1269 -> intPtr intPtr 0>
new  <>

3098:
old  <	mov rsi, [rbp + 97]>
new  < scanFormat$14:>

3099:
old  <>
new  <	; Dereference Â£temporary1257 -> Â£temporary1260 Â£temporary1260 0>

3100:
old  < scanFormat$106:>
new  <>

3101:
old  <	; IntegralToIntegral Â£temporary1270 longValue>
new  < scanFormat$15:>

3102:
old  <	mov rax, [rbp + 69]>
new  <	; Assign c Â£temporary1257 -> Â£temporary1260>

3103:
old  <	cmp rax, 0>
new  <	mov al, [rsi]>

3104:
old  <	jge scanFormat$107>
new  <	mov [rbp + 40], al>

3105:
old  <	neg rax>
new  <>

3106:
old  <	neg eax>
new  < scanFormat$16:>

3107:
old  <>
new  <	; IntegralToIntegral Â£temporary1261 c>

3108:
old  < scanFormat$107:>
new  <	mov al, [rbp + 40]>

3109:
old  <	; Assign Â£temporary1269 -> intPtr Â£temporary1270>
new  <	and eax, 255>

3110:
old  <	mov [rsi], eax>
new  <	cmp al, 0>

3111:
old  <>
new  <	jge scanFormat$17>

3112:
old  < scanFormat$108:>
new  <	neg al>

3113:
old  <	; Goto 116>
new  <	neg eax>

3114:
old  <	jmp scanFormat$116>
new  <>

3115:
old  <>
new  < scanFormat$17:>

3116:
old  < scanFormat$109:>
new  <	; BinaryAdd d Â£temporary1261 1>

3117:
old  <	; BinaryAdd arg_list arg_list 8>
new  <	inc eax>

3118:
old  <	add qword [rbp + 32], 8>
new  <	mov [rbp + 153], eax>

3120:
old  < scanFormat$110:>
new  < scanFormat$18:>

3121:
old  <	; BinarySubtract Â£temporary1273 arg_list 8>
new  <	; Equal 325 percent 0>

3122:
old  <	mov rsi, [rbp + 32]>
new  <	cmp dword [rbp + 49], 0>

3123:
old  <	sub rsi, 8>
new  <	je scanFormat$325>

3125:
old  < scanFormat$111:>
new  < scanFormat$19:>

3126:
old  <	; IntegralToIntegral Â£temporary1275 Â£temporary1273>
new  <	; BinarySubtract Â£temporary1263 d 1>

3127:
old  <>
new  <	mov eax, [rbp + 153]>

3128:
old  < scanFormat$112:>
new  <	dec eax>

3129:
old  <	; Dereference Â£temporary1276 -> Â£temporary1275 Â£temporary1275 0>
new  <>

3130:
old  <>
new  < scanFormat$20:>

3131:
old  < scanFormat$113:>
new  <	; Case 38 Â£temporary1263 104>

3132:
old  <	; Assign longPtr Â£temporary1276 -> Â£temporary1275>
new  <	cmp eax, 104>

3133:
old  <	mov rax, [rsi]>
new  <	je scanFormat$38>

3134:
old  <	mov [rbp + 77], rax>
new  <>

3135:
old  <>
new  < scanFormat$21:>

3136:
old  < scanFormat$114:>
new  <	; Case 40 Â£temporary1263 108>

3137:
old  <	; Dereference Â£temporary1277 -> longPtr longPtr 0>
new  <	cmp eax, 108>

3138:
old  <	mov rsi, [rbp + 77]>
new  <	je scanFormat$40>

3140:
old  < scanFormat$115:>
new  < scanFormat$22:>

3141:
old  <	; Assign Â£temporary1277 -> longPtr longValue>
new  <	; Case 42 Â£temporary1263 76>

3142:
old  <	mov rax, [rbp + 69]>
new  <	cmp eax, 76>

3143:
old  <	mov [rsi], rax>
new  <	je scanFormat$42>

3145:
old  < scanFormat$116:>
new  < scanFormat$23:>

3146:
old  <	; Assign percent 0>
new  <	; Case 44 Â£temporary1263 42>

3147:
old  <	mov dword [rbp + 49], 0>
new  <	cmp eax, 42>

3148:
old  <>
new  <	je scanFormat$44>

3149:
old  < scanFormat$117:>
new  <>

3150:
old  <	; Goto 330>
new  < scanFormat$24:>

3151:
old  <	jmp scanFormat$330>
new  <	; Case 46 Â£temporary1263 99>

3152:
old  <>
new  <	cmp eax, 99>

3153:
old  < scanFormat$118:>
new  <	je scanFormat$46>

3154:
old  <	; PreCall 157 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

3155:
old  <>
new  < scanFormat$25:>

3156:
old  < scanFormat$119:>
new  <	; Case 64 Â£temporary1263 115>

3157:
old  <	; Parameter unsignedlongint 8 181>
new  <	cmp eax, 115>

3158:
old  <	mov qword [rbp + 181], 8>
new  <	je scanFormat$64>

3160:
old  < scanFormat$120:>
new  < scanFormat$26:>

3161:
old  <	; Call scanUnsignedLongInt 157 0>
new  <	; Case 83 Â£temporary1263 100>

3162:
old  <	mov qword [rbp + 157], scanFormat$121>
new  <	cmp eax, 100>

3163:
old  <	mov [rbp + 165], rbp>
new  <	je scanFormat$83>

3164:
old  <	add rbp, 157>
new  <>

3165:
old  <	jmp scanUnsignedLongInt>
new  < scanFormat$27:>

3166:
old  <>
new  <	; Case 83 Â£temporary1263 105>

3167:
old  < scanFormat$121:>
new  <	cmp eax, 105>

3168:
old  <	; PostCall 157>
new  <	je scanFormat$83>

3170:
old  < scanFormat$122:>
new  < scanFormat$28:>

3171:
old  <	; GetReturnValue Â£temporary1279>
new  <	; Case 119 Â£temporary1263 111>

3172:
old  <>
new  <	cmp eax, 111>

3173:
old  < scanFormat$123:>
new  <	je scanFormat$119>

3174:
old  <	; Assign unsignedLongValue Â£temporary1279>
new  <>

3175:
old  <	mov [rbp + 113], rbx>
new  < scanFormat$29:>

3176:
old  <>
new  <	; Case 155 Â£temporary1263 120>

3177:
old  < scanFormat$124:>
new  <	cmp eax, 120>

3178:
old  <	; NotEqual 152 star 0>
new  <	je scanFormat$155>

3179:
old  <	cmp dword [rbp + 65], 0>
new  <>

3180:
old  <	jne scanFormat$152>
new  < scanFormat$30:>

3181:
old  <>
new  <	; Case 191 Â£temporary1263 117>

3182:
old  < scanFormat$125:>
new  <	cmp eax, 117>

3183:
old  <	; Equal 135 shortInt 0>
new  <	je scanFormat$191>

3184:
old  <	cmp dword [rbp + 53], 0>
new  <>

3185:
old  <	je scanFormat$135>
new  < scanFormat$31:>

3186:
old  <>
new  <	; Case 227 Â£temporary1263 103>

3187:
old  < scanFormat$126:>
new  <	cmp eax, 103>

3188:
old  <	; BinaryAdd arg_list arg_list 8>
new  <	je scanFormat$227>

3189:
old  <	add qword [rbp + 32], 8>
new  <>

3190:
old  <>
new  < scanFormat$32:>

3191:
old  < scanFormat$127:>
new  <	; Case 227 Â£temporary1263 102>

3192:
old  <	; BinarySubtract Â£temporary1284 arg_list 8>
new  <	cmp eax, 102>

3193:
old  <	mov rsi, [rbp + 32]>
new  <	je scanFormat$227>

3194:
old  <	sub rsi, 8>
new  <>

3195:
old  <>
new  < scanFormat$33:>

3196:
old  < scanFormat$128:>
new  <	; Case 227 Â£temporary1263 101>

3197:
old  <	; IntegralToIntegral Â£temporary1286 Â£temporary1284>
new  <	cmp eax, 101>

3198:
old  <>
new  <	je scanFormat$227>

3199:
old  < scanFormat$129:>
new  <>

3200:
old  <	; Dereference Â£temporary1287 -> Â£temporary1286 Â£temporary1286 0>
new  < scanFormat$34:>

3201:
old  <>
new  <	; Case 263 Â£temporary1263 91>

3202:
old  < scanFormat$130:>
new  <	cmp eax, 91>

3203:
old  <	; Assign unsignedShortPtr Â£temporary1287 -> Â£temporary1286>
new  <	je scanFormat$263>

3204:
old  <	mov rax, [rsi]>
new  <>

3205:
old  <	mov [rbp + 129], rax>
new  < scanFormat$35:>

3206:
old  <>
new  <	; Case 309 Â£temporary1263 110>

3207:
old  < scanFormat$131:>
new  <	cmp eax, 110>

3208:
old  <	; Dereference Â£temporary1288 -> unsignedShortPtr unsignedShortPtr 0>
new  <	je scanFormat$309>

3209:
old  <	mov rsi, [rbp + 129]>
new  <>

3210:
old  <>
new  < scanFormat$36:>

3211:
old  < scanFormat$132:>
new  <	; CaseEnd Â£temporary1263>

3212:
old  <	; IntegralToIntegral Â£temporary1289 unsignedLongValue>
new  <>

3213:
old  <	mov rax, [rbp + 113]>
new  < scanFormat$37:>

3214:
old  <>
new  <	; Goto 318>

3215:
old  < scanFormat$133:>
new  <	jmp scanFormat$318>

3216:
old  <	; Assign Â£temporary1288 -> unsignedShortPtr Â£temporary1289>
new  <>

3217:
old  <	mov [rsi], ax>
new  < scanFormat$38:>

3218:
old  <>
new  <	; Assign shortInt 1>

3219:
old  < scanFormat$134:>
new  <	mov dword [rbp + 53], 1>

3220:
old  <	; Goto 152>
new  <>

3221:
old  <	jmp scanFormat$152>
new  < scanFormat$39:>

3222:
old  <>
new  <	; Goto 331>

3223:
old  < scanFormat$135:>
new  <	jmp scanFormat$331>

3224:
old  <	; NotEqual 145 longIntOrDouble 0>
new  <>

3225:
old  <	cmp dword [rbp + 57], 0>
new  < scanFormat$40:>

3226:
old  <	jne scanFormat$145>
new  <	; Assign longIntOrDouble 1>

3227:
old  <>
new  <	mov dword [rbp + 57], 1>

3228:
old  < scanFormat$136:>
new  <>

3229:
old  <	; BinaryAdd arg_list arg_list 8>
new  < scanFormat$41:>

3230:
old  <	add qword [rbp + 32], 8>
new  <	; Goto 331>

3231:
old  <>
new  <	jmp scanFormat$331>

3232:
old  < scanFormat$137:>
new  <>

3233:
old  <	; BinarySubtract Â£temporary1294 arg_list 8>
new  < scanFormat$42:>

3234:
old  <	mov rsi, [rbp + 32]>
new  <	; Assign longDouble 1>

3235:
old  <	sub rsi, 8>
new  <	mov dword [rbp + 61], 1>

3237:
old  < scanFormat$138:>
new  < scanFormat$43:>

3238:
old  <	; IntegralToIntegral Â£temporary1296 Â£temporary1294>
new  <	; Goto 331>

3239:
old  <>
new  <	jmp scanFormat$331>

3240:
old  < scanFormat$139:>
new  <>

3241:
old  <	; Dereference Â£temporary1297 -> Â£temporary1296 Â£temporary1296 0>
new  < scanFormat$44:>

3242:
old  <>
new  <	; Assign star 1>

3243:
old  < scanFormat$140:>
new  <	mov dword [rbp + 65], 1>

3244:
old  <	; Assign unsignedIntPtr Â£temporary1297 -> Â£temporary1296>
new  <>

3245:
old  <	mov rax, [rsi]>
new  < scanFormat$45:>

3246:
old  <	mov [rbp + 137], rax>
new  <	; Goto 331>

3247:
old  <>
new  <	jmp scanFormat$331>

3248:
old  < scanFormat$141:>
new  <>

3249:
old  <	; Dereference Â£temporary1298 -> unsignedIntPtr unsignedIntPtr 0>
new  < scanFormat$46:>

3250:
old  <	mov rsi, [rbp + 137]>
new  <	; PreCall 157 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3252:
old  < scanFormat$142:>
new  < scanFormat$47:>

3253:
old  <	; IntegralToIntegral Â£temporary1299 unsignedLongValue>
new  <	; Call scanChar 157 0>

3254:
old  <	mov rax, [rbp + 113]>
new  <	mov qword [rbp + 157], scanFormat$48>

3255:
old  <>
new  <	mov [rbp + 165], rbp>

3256:
old  < scanFormat$143:>
new  <	add rbp, 157>

3257:
old  <	; Assign Â£temporary1298 -> unsignedIntPtr Â£temporary1299>
new  <	jmp scanChar>

3258:
old  <	mov [rsi], eax>
new  <>

3259:
old  <>
new  < scanFormat$48:>

3260:
old  < scanFormat$144:>
new  <	; PostCall 157>

3261:
old  <	; Goto 152>
new  <>

3262:
old  <	jmp scanFormat$152>
new  < scanFormat$49:>

3263:
old  <>
new  <	; GetReturnValue Â£temporary1264>

3264:
old  < scanFormat$145:>
new  <>

3265:
old  <	; BinaryAdd arg_list arg_list 8>
new  < scanFormat$50:>

3266:
old  <	add qword [rbp + 32], 8>
new  <	; Assign charValue Â£temporary1264>

3267:
old  <>
new  <	mov [rbp + 157], bl>

3268:
old  < scanFormat$146:>
new  <>

3269:
old  <	; BinarySubtract Â£temporary1302 arg_list 8>
new  < scanFormat$51:>

3270:
old  <	mov rsi, [rbp + 32]>
new  <	; NotEqual 59 star 0>

3271:
old  <	sub rsi, 8>
new  <	cmp dword [rbp + 65], 0>

3272:
old  <>
new  <	jne scanFormat$59>

3273:
old  < scanFormat$147:>
new  <>

3274:
old  <	; IntegralToIntegral Â£temporary1304 Â£temporary1302>
new  < scanFormat$52:>

3275:
old  <>
new  <	; BinaryAdd arg_list arg_list 8>

3276:
old  < scanFormat$148:>
new  <	add qword [rbp + 32], 8>

3277:
old  <	; Dereference Â£temporary1305 -> Â£temporary1304 Â£temporary1304 0>
new  <>

3278:
old  <>
new  < scanFormat$53:>

3279:
old  < scanFormat$149:>
new  <	; BinarySubtract Â£temporary1269 arg_list 8>

3280:
old  <	; Assign unsignedLongPtr Â£temporary1305 -> Â£temporary1304>
new  <	mov rsi, [rbp + 32]>

3281:
old  <	mov rax, [rsi]>
new  <	sub rsi, 8>

3282:
old  <	mov [rbp + 121], rax>
new  <>

3283:
old  <>
new  < scanFormat$54:>

3284:
old  < scanFormat$150:>
new  <	; IntegralToIntegral Â£temporary1271 Â£temporary1269>

3285:
old  <	; Dereference Â£temporary1306 -> unsignedLongPtr unsignedLongPtr 0>
new  <>

3286:
old  <	mov rsi, [rbp + 121]>
new  < scanFormat$55:>

3287:
old  <>
new  <	; Dereference Â£temporary1272 -> Â£temporary1271 Â£temporary1271 0>

3288:
old  < scanFormat$151:>
new  <>

3289:
old  <	; Assign Â£temporary1306 -> unsignedLongPtr unsignedLongValue>
new  < scanFormat$56:>

3290:
old  <	mov rax, [rbp + 113]>
new  <	; Assign charPtr Â£temporary1272 -> Â£temporary1271>

3291:
old  <	mov [rsi], rax>
new  <	mov rax, [rsi]>

3292:
old  <>
new  <	mov [rbp + 41], rax>

3293:
old  < scanFormat$152:>
new  <>

3294:
old  <	; Assign percent 0>
new  < scanFormat$57:>

3295:
old  <	mov dword [rbp + 49], 0>
new  <	; Dereference Â£temporary1273 -> charPtr charPtr 0>

3296:
old  <>
new  <	mov rsi, [rbp + 41]>

3297:
old  < scanFormat$153:>
new  <>

3298:
old  <	; Goto 330>
new  < scanFormat$58:>

3299:
old  <	jmp scanFormat$330>
new  <	; Assign Â£temporary1273 -> charPtr charValue>

3300:
old  <>
new  <	mov al, [rbp + 157]>

3301:
old  < scanFormat$154:>
new  <	mov [rsi], al>

3302:
old  <	; PreCall 157 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

3303:
old  <>
new  < scanFormat$59:>

3304:
old  < scanFormat$155:>
new  <	; Assign percent 0>

3305:
old  <	; Parameter unsignedlongint 16 181>
new  <	mov dword [rbp + 49], 0>

3306:
old  <	mov qword [rbp + 181], 16>
new  <>

3307:
old  <>
new  < scanFormat$60:>

3308:
old  < scanFormat$156:>
new  <	; IntegralToIntegral Â£temporary1274 charValue>

3309:
old  <	; Call scanUnsignedLongInt 157 0>
new  <	mov al, [rbp + 157]>

3310:
old  <	mov qword [rbp + 157], scanFormat$157>
new  <	and eax, 255>

3311:
old  <	mov [rbp + 165], rbp>
new  <	cmp al, 0>

3312:
old  <	add rbp, 157>
new  <	jge scanFormat$61>

3313:
old  <	jmp scanUnsignedLongInt>
new  <	neg al>

3314:
old  <>
new  <	neg eax>

3315:
old  < scanFormat$157:>
new  <>

3316:
old  <	; PostCall 157>
new  < scanFormat$61:>

3317:
old  <>
new  <	; Equal 331 Â£temporary1274 -1>

3318:
old  < scanFormat$158:>
new  <	cmp eax, -1>

3319:
old  <	; GetReturnValue Â£temporary1308>
new  <	je scanFormat$331>

3321:
old  < scanFormat$159:>
new  < scanFormat$62:>

3322:
old  <	; Assign unsignedLongValue Â£temporary1308>
new  <	; BinaryAdd g_inCount g_inCount 1>

3323:
old  <	mov [rbp + 113], rbx>
new  <	inc dword [g_inCount]>

3325:
old  < scanFormat$160:>
new  < scanFormat$63:>

3326:
old  <	; NotEqual 188 star 0>
new  <	; Goto 331>

3327:
old  <	cmp dword [rbp + 65], 0>
new  <	jmp scanFormat$331>

3328:
old  <	jne scanFormat$188>
new  <>

3329:
old  <>
new  < scanFormat$64:>

3330:
old  < scanFormat$161:>
new  <	; NotEqual 76 star 0>

3331:
old  <	; Equal 171 shortInt 0>
new  <	cmp dword [rbp + 65], 0>

3332:
old  <	cmp dword [rbp + 53], 0>
new  <	jne scanFormat$76>

3333:
old  <	je scanFormat$171>
new  <>

3334:
old  <>
new  < scanFormat$65:>

3335:
old  < scanFormat$162:>
new  <	; BinaryAdd arg_list arg_list 8>

3336:
old  <	; BinaryAdd arg_list arg_list 8>
new  <	add qword [rbp + 32], 8>

3337:
old  <	add qword [rbp + 32], 8>
new  <>

3338:
old  <>
new  < scanFormat$66:>

3339:
old  < scanFormat$163:>
new  <	; BinarySubtract Â£temporary1281 arg_list 8>

3340:
old  <	; BinarySubtract Â£temporary1313 arg_list 8>
new  <	mov rsi, [rbp + 32]>

3341:
old  <	mov rsi, [rbp + 32]>
new  <	sub rsi, 8>

3342:
old  <	sub rsi, 8>
new  <>

3343:
old  <>
new  < scanFormat$67:>

3344:
old  < scanFormat$164:>
new  <	; IntegralToIntegral Â£temporary1283 Â£temporary1281>

3345:
old  <	; IntegralToIntegral Â£temporary1315 Â£temporary1313>
new  <>

3346:
old  <>
new  < scanFormat$68:>

3347:
old  < scanFormat$165:>
new  <	; Dereference Â£temporary1284 -> Â£temporary1283 Â£temporary1283 0>

3348:
old  <	; Dereference Â£temporary1316 -> Â£temporary1315 Â£temporary1315 0>
new  <>

3349:
old  <>
new  < scanFormat$69:>

3350:
old  < scanFormat$166:>
new  <	; Assign charPtr Â£temporary1284 -> Â£temporary1283>

3351:
old  <	; Assign unsignedShortPtr Â£temporary1316 -> Â£temporary1315>
new  <	mov rax, [rsi]>

3352:
old  <	mov rax, [rsi]>
new  <	mov [rbp + 41], rax>

3353:
old  <	mov [rbp + 129], rax>
new  <>

3354:
old  <>
new  < scanFormat$70:>

3355:
old  < scanFormat$167:>
new  <	; PreCall 157 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3356:
old  <	; Dereference Â£temporary1317 -> unsignedShortPtr unsignedShortPtr 0>
new  <>

3357:
old  <	mov rsi, [rbp + 129]>
new  < scanFormat$71:>

3358:
old  <>
new  <	; Parameter pointer charPtr 181>

3359:
old  < scanFormat$168:>
new  <	mov rax, [rbp + 41]>

3360:
old  <	; IntegralToIntegral Â£temporary1318 unsignedLongValue>
new  <	mov [rbp + 181], rax>

3361:
old  <	mov rax, [rbp + 113]>
new  <>

3362:
old  <>
new  < scanFormat$72:>

3363:
old  < scanFormat$169:>
new  <	; Parameter signedint 0 189>

3364:
old  <	; Assign Â£temporary1317 -> unsignedShortPtr Â£temporary1318>
new  <	mov dword [rbp + 189], 0>

3365:
old  <	mov [rsi], ax>
new  <>

3366:
old  <>
new  < scanFormat$73:>

3367:
old  < scanFormat$170:>
new  <	; Call scanString 157 0>

3368:
old  <	; Goto 188>
new  <	mov qword [rbp + 157], scanFormat$74>

3369:
old  <	jmp scanFormat$188>
new  <	mov [rbp + 165], rbp>

3370:
old  <>
new  <	add rbp, 157>

3371:
old  < scanFormat$171:>
new  <	jmp scanString>

3372:
old  <	; NotEqual 181 longIntOrDouble 0>
new  <>

3373:
old  <	cmp dword [rbp + 57], 0>
new  < scanFormat$74:>

3374:
old  <	jne scanFormat$181>
new  <	; PostCall 157>

3376:
old  < scanFormat$172:>
new  < scanFormat$75:>

3377:
old  <	; BinaryAdd arg_list arg_list 8>
new  <	; Goto 81>

3378:
old  <	add qword [rbp + 32], 8>
new  <	jmp scanFormat$81>

3380:
old  < scanFormat$173:>
new  < scanFormat$76:>

3381:
old  <	; BinarySubtract Â£temporary1323 arg_list 8>
new  <	; PreCall 157 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3382:
old  <	mov rsi, [rbp + 32]>
new  <>

3383:
old  <	sub rsi, 8>
new  < scanFormat$77:>

3384:
old  <>
new  <	; Parameter pointer 0 181>

3385:
old  < scanFormat$174:>
new  <	mov qword [rbp + 181], 0>

3386:
old  <	; IntegralToIntegral Â£temporary1325 Â£temporary1323>
new  <>

3387:
old  <>
new  < scanFormat$78:>

3388:
old  < scanFormat$175:>
new  <	; Parameter signedint 0 189>

3389:
old  <	; Dereference Â£temporary1326 -> Â£temporary1325 Â£temporary1325 0>
new  <	mov dword [rbp + 189], 0>

3391:
old  < scanFormat$176:>
new  < scanFormat$79:>

3392:
old  <	; Assign unsignedIntPtr Â£temporary1326 -> Â£temporary1325>
new  <	; Call scanString 157 0>

3393:
old  <	mov rax, [rsi]>
new  <	mov qword [rbp + 157], scanFormat$80>

3394:
old  <	mov [rbp + 137], rax>
new  <	mov [rbp + 165], rbp>

3395:
old  <>
new  <	add rbp, 157>

3396:
old  < scanFormat$177:>
new  <	jmp scanString>

3397:
old  <	; Dereference Â£temporary1327 -> unsignedIntPtr unsignedIntPtr 0>
new  <>

3398:
old  <	mov rsi, [rbp + 137]>
new  < scanFormat$80:>

3399:
old  <>
new  <	; PostCall 157>

3400:
old  < scanFormat$178:>
new  <>

3401:
old  <	; IntegralToIntegral Â£temporary1328 unsignedLongValue>
new  < scanFormat$81:>

3402:
old  <	mov rax, [rbp + 113]>
new  <	; Assign percent 0>

3403:
old  <>
new  <	mov dword [rbp + 49], 0>

3404:
old  < scanFormat$179:>
new  <>

3405:
old  <	; Assign Â£temporary1327 -> unsignedIntPtr Â£temporary1328>
new  < scanFormat$82:>

3406:
old  <	mov [rsi], eax>
new  <	; Goto 331>

3407:
old  <>
new  <	jmp scanFormat$331>

3408:
old  < scanFormat$180:>
new  <>

3409:
old  <	; Goto 188>
new  < scanFormat$83:>

3410:
old  <	jmp scanFormat$188>
new  <	; PreCall 157 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3412:
old  < scanFormat$181:>
new  < scanFormat$84:>

3413:
old  <	; BinaryAdd arg_list arg_list 8>
new  <	; Parameter signedint 10 181>

3414:
old  <	add qword [rbp + 32], 8>
new  <	mov dword [rbp + 181], 10>

3416:
old  < scanFormat$182:>
new  < scanFormat$85:>

3417:
old  <	; BinarySubtract Â£temporary1331 arg_list 8>
new  <	; Call scanLongInt 157 0>

3418:
old  <	mov rsi, [rbp + 32]>
new  <	mov qword [rbp + 157], scanFormat$86>

3419:
old  <	sub rsi, 8>
new  <	mov [rbp + 165], rbp>

3420:
old  <>
new  <	add rbp, 157>

3421:
old  < scanFormat$183:>
new  <	jmp scanLongInt>

3422:
old  <	; IntegralToIntegral Â£temporary1333 Â£temporary1331>
new  <>

3423:
old  <>
new  < scanFormat$86:>

3424:
old  < scanFormat$184:>
new  <	; PostCall 157>

3425:
old  <	; Dereference Â£temporary1334 -> Â£temporary1333 Â£temporary1333 0>
new  <>

3426:
old  <>
new  < scanFormat$87:>

3427:
old  < scanFormat$185:>
new  <	; GetReturnValue Â£temporary1287>

3428:
old  <	; Assign unsignedLongPtr Â£temporary1334 -> Â£temporary1333>
new  <>

3429:
old  <	mov rax, [rsi]>
new  < scanFormat$88:>

3430:
old  <	mov [rbp + 121], rax>
new  <	; Assign longValue Â£temporary1287>

3431:
old  <>
new  <	mov [rbp + 69], rbx>

3432:
old  < scanFormat$186:>
new  <>

3433:
old  <	; Dereference Â£temporary1335 -> unsignedLongPtr unsignedLongPtr 0>
new  < scanFormat$89:>

3434:
old  <	mov rsi, [rbp + 121]>
new  <	; NotEqual 117 star 0>

3435:
old  <>
new  <	cmp dword [rbp + 65], 0>

3436:
old  < scanFormat$187:>
new  <	jne scanFormat$117>

3437:
old  <	; Assign Â£temporary1335 -> unsignedLongPtr unsignedLongValue>
new  <>

3438:
old  <	mov rax, [rbp + 113]>
new  < scanFormat$90:>

3439:
old  <	mov [rsi], rax>
new  <	; Equal 100 shortInt 0>

3440:
old  <>
new  <	cmp dword [rbp + 53], 0>

3441:
old  < scanFormat$188:>
new  <	je scanFormat$100>

3442:
old  <	; Assign percent 0>
new  <>

3443:
old  <	mov dword [rbp + 49], 0>
new  < scanFormat$91:>

3444:
old  <>
new  <	; BinaryAdd arg_list arg_list 8>

3445:
old  < scanFormat$189:>
new  <	add qword [rbp + 32], 8>

3446:
old  <	; Goto 330>
new  <>

3447:
old  <	jmp scanFormat$330>
new  < scanFormat$92:>

3448:
old  <>
new  <	; BinarySubtract Â£temporary1292 arg_list 8>

3449:
old  < scanFormat$190:>
new  <	mov rsi, [rbp + 32]>

3450:
old  <	; PreCall 157 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	sub rsi, 8>

3452:
old  < scanFormat$191:>
new  < scanFormat$93:>

3453:
old  <	; Parameter unsignedlongint 0 181>
new  <	; IntegralToIntegral Â£temporary1294 Â£temporary1292>

3454:
old  <	mov qword [rbp + 181], 0>
new  <>

3455:
old  <>
new  < scanFormat$94:>

3456:
old  < scanFormat$192:>
new  <	; Dereference Â£temporary1295 -> Â£temporary1294 Â£temporary1294 0>

3457:
old  <	; Call scanUnsignedLongInt 157 0>
new  <>

3458:
old  <	mov qword [rbp + 157], scanFormat$193>
new  < scanFormat$95:>

3459:
old  <	mov [rbp + 165], rbp>
new  <	; Assign shortPtr Â£temporary1295 -> Â£temporary1294>

3460:
old  <	add rbp, 157>
new  <	mov rax, [rsi]>

3461:
old  <	jmp scanUnsignedLongInt>
new  <	mov [rbp + 85], rax>

3463:
old  < scanFormat$193:>
new  < scanFormat$96:>

3464:
old  <	; PostCall 157>
new  <	; Dereference Â£temporary1296 -> shortPtr shortPtr 0>

3465:
old  <>
new  <	mov rsi, [rbp + 85]>

3466:
old  < scanFormat$194:>
new  <>

3467:
old  <	; GetReturnValue Â£temporary1337>
new  < scanFormat$97:>

3468:
old  <>
new  <	; IntegralToIntegral Â£temporary1297 longValue>

3469:
old  < scanFormat$195:>
new  <	mov rax, [rbp + 69]>

3470:
old  <	; Assign unsignedLongValue Â£temporary1337>
new  <	cmp rax, 0>

3471:
old  <	mov [rbp + 113], rbx>
new  <	jge scanFormat$98>

3472:
old  <>
new  <	neg rax>

3473:
old  < scanFormat$196:>
new  <	neg ax>

3474:
old  <	; NotEqual 224 star 0>
new  <>

3475:
old  <	cmp dword [rbp + 65], 0>
new  < scanFormat$98:>

3476:
old  <	jne scanFormat$224>
new  <	; Assign Â£temporary1296 -> shortPtr Â£temporary1297>

3477:
old  <>
new  <	mov [rsi], ax>

3478:
old  < scanFormat$197:>
new  <>

3479:
old  <	; Equal 207 shortInt 0>
new  < scanFormat$99:>

3480:
old  <	cmp dword [rbp + 53], 0>
new  <	; Goto 117>

3481:
old  <	je scanFormat$207>
new  <	jmp scanFormat$117>

3483:
old  < scanFormat$198:>
new  < scanFormat$100:>

3484:
old  <	; BinaryAdd arg_list arg_list 8>
new  <	; NotEqual 110 longIntOrDouble 0>

3485:
old  <	add qword [rbp + 32], 8>
new  <	cmp dword [rbp + 57], 0>

3486:
old  <>
new  <	jne scanFormat$110>

3487:
old  < scanFormat$199:>
new  <>

3488:
old  <	; BinarySubtract Â£temporary1342 arg_list 8>
new  < scanFormat$101:>

3489:
old  <	mov rsi, [rbp + 32]>
new  <	; BinaryAdd arg_list arg_list 8>

3490:
old  <	sub rsi, 8>
new  <	add qword [rbp + 32], 8>

3492:
old  < scanFormat$200:>
new  < scanFormat$102:>

3493:
old  <	; IntegralToIntegral Â£temporary1344 Â£temporary1342>
new  <	; BinarySubtract Â£temporary1302 arg_list 8>

3494:
old  <>
new  <	mov rsi, [rbp + 32]>

3495:
old  < scanFormat$201:>
new  <	sub rsi, 8>

3496:
old  <	; Dereference Â£temporary1345 -> Â£temporary1344 Â£temporary1344 0>
new  <>

3497:
old  <>
new  < scanFormat$103:>

3498:
old  < scanFormat$202:>
new  <	; IntegralToIntegral Â£temporary1304 Â£temporary1302>

3499:
old  <	; Assign unsignedShortPtr Â£temporary1345 -> Â£temporary1344>
new  <>

3500:
old  <	mov rax, [rsi]>
new  < scanFormat$104:>

3501:
old  <	mov [rbp + 129], rax>
new  <	; Dereference Â£temporary1305 -> Â£temporary1304 Â£temporary1304 0>

3503:
old  < scanFormat$203:>
new  < scanFormat$105:>

3504:
old  <	; Dereference Â£temporary1346 -> unsignedShortPtr unsignedShortPtr 0>
new  <	; Assign intPtr Â£temporary1305 -> Â£temporary1304>

3505:
old  <	mov rsi, [rbp + 129]>
new  <	mov rax, [rsi]>

3506:
old  <>
new  <	mov [rbp + 97], rax>

3507:
old  < scanFormat$204:>
new  <>

3508:
old  <	; IntegralToIntegral Â£temporary1347 unsignedLongValue>
new  < scanFormat$106:>

3509:
old  <	mov rax, [rbp + 113]>
new  <	; Dereference Â£temporary1306 -> intPtr intPtr 0>

3510:
old  <>
new  <	mov rsi, [rbp + 97]>

3511:
old  < scanFormat$205:>
new  <>

3512:
old  <	; Assign Â£temporary1346 -> unsignedShortPtr Â£temporary1347>
new  < scanFormat$107:>

3513:
old  <	mov [rsi], ax>
new  <	; IntegralToIntegral Â£temporary1307 longValue>

3514:
old  <>
new  <	mov rax, [rbp + 69]>

3515:
old  < scanFormat$206:>
new  <	cmp rax, 0>

3516:
old  <	; Goto 224>
new  <	jge scanFormat$108>

3517:
old  <	jmp scanFormat$224>
new  <	neg rax>

3518:
old  <>
new  <	neg eax>

3519:
old  < scanFormat$207:>
new  <>

3520:
old  <	; NotEqual 217 longIntOrDouble 0>
new  < scanFormat$108:>

3521:
old  <	cmp dword [rbp + 57], 0>
new  <	; Assign Â£temporary1306 -> intPtr Â£temporary1307>

3522:
old  <	jne scanFormat$217>
new  <	mov [rsi], eax>

3524:
old  < scanFormat$208:>
new  < scanFormat$109:>

3525:
old  <	; BinaryAdd arg_list arg_list 8>
new  <	; Goto 117>

3526:
old  <	add qword [rbp + 32], 8>
new  <	jmp scanFormat$117>

3528:
old  < scanFormat$209:>
new  < scanFormat$110:>

3529:
old  <	; BinarySubtract Â£temporary1352 arg_list 8>
new  <	; BinaryAdd arg_list arg_list 8>

3530:
old  <	mov rsi, [rbp + 32]>
new  <	add qword [rbp + 32], 8>

3531:
old  <	sub rsi, 8>
new  <>

3532:
old  <>
new  < scanFormat$111:>

3533:
old  < scanFormat$210:>
new  <	; BinarySubtract Â£temporary1310 arg_list 8>

3534:
old  <	; IntegralToIntegral Â£temporary1354 Â£temporary1352>
new  <	mov rsi, [rbp + 32]>

3535:
old  <>
new  <	sub rsi, 8>

3536:
old  < scanFormat$211:>
new  <>

3537:
old  <	; Dereference Â£temporary1355 -> Â£temporary1354 Â£temporary1354 0>
new  < scanFormat$112:>

3538:
old  <>
new  <	; IntegralToIntegral Â£temporary1312 Â£temporary1310>

3539:
old  < scanFormat$212:>
new  <>

3540:
old  <	; Assign unsignedIntPtr Â£temporary1355 -> Â£temporary1354>
new  < scanFormat$113:>

3541:
old  <	mov rax, [rsi]>
new  <	; Dereference Â£temporary1313 -> Â£temporary1312 Â£temporary1312 0>

3542:
old  <	mov [rbp + 137], rax>
new  <>

3543:
old  <>
new  < scanFormat$114:>

3544:
old  < scanFormat$213:>
new  <	; Assign longPtr Â£temporary1313 -> Â£temporary1312>

3545:
old  <	; Dereference Â£temporary1356 -> unsignedIntPtr unsignedIntPtr 0>
new  <	mov rax, [rsi]>

3546:
old  <	mov rsi, [rbp + 137]>
new  <	mov [rbp + 77], rax>

3548:
old  < scanFormat$214:>
new  < scanFormat$115:>

3549:
old  <	; IntegralToIntegral Â£temporary1357 unsignedLongValue>
new  <	; Dereference Â£temporary1314 -> longPtr longPtr 0>

3550:
old  <	mov rax, [rbp + 113]>
new  <	mov rsi, [rbp + 77]>

3552:
old  < scanFormat$215:>
new  < scanFormat$116:>

3553:
old  <	; Assign Â£temporary1356 -> unsignedIntPtr Â£temporary1357>
new  <	; Assign Â£temporary1314 -> longPtr longValue>

3554:
old  <	mov [rsi], eax>
new  <	mov rax, [rbp + 69]>

3555:
old  <>
new  <	mov [rsi], rax>

3556:
old  < scanFormat$216:>
new  <>

3557:
old  <	; Goto 224>
new  < scanFormat$117:>

3558:
old  <	jmp scanFormat$224>
new  <	; Assign percent 0>

3559:
old  <>
new  <	mov dword [rbp + 49], 0>

3560:
old  < scanFormat$217:>
new  <>

3561:
old  <	; BinaryAdd arg_list arg_list 8>
new  < scanFormat$118:>

3562:
old  <	add qword [rbp + 32], 8>
new  <	; Goto 331>

3563:
old  <>
new  <	jmp scanFormat$331>

3564:
old  < scanFormat$218:>
new  <>

3565:
old  <	; BinarySubtract Â£temporary1360 arg_list 8>
new  < scanFormat$119:>

3566:
old  <	mov rsi, [rbp + 32]>
new  <	; PreCall 157 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3567:
old  <	sub rsi, 8>
new  <>

3568:
old  <>
new  < scanFormat$120:>

3569:
old  < scanFormat$219:>
new  <	; Parameter signedint 8 181>

3570:
old  <	; IntegralToIntegral Â£temporary1362 Â£temporary1360>
new  <	mov dword [rbp + 181], 8>

3572:
old  < scanFormat$220:>
new  < scanFormat$121:>

3573:
old  <	; Dereference Â£temporary1363 -> Â£temporary1362 Â£temporary1362 0>
new  <	; Call scanUnsignedLongInt 157 0>

3574:
old  <>
new  <	mov qword [rbp + 157], scanFormat$122>

3575:
old  < scanFormat$221:>
new  <	mov [rbp + 165], rbp>

3576:
old  <	; Assign unsignedLongPtr Â£temporary1363 -> Â£temporary1362>
new  <	add rbp, 157>

3577:
old  <	mov rax, [rsi]>
new  <	jmp scanUnsignedLongInt>

3578:
old  <	mov [rbp + 121], rax>
new  <>

3579:
old  <>
new  < scanFormat$122:>

3580:
old  < scanFormat$222:>
new  <	; PostCall 157>

3581:
old  <	; Dereference Â£temporary1364 -> unsignedLongPtr unsignedLongPtr 0>
new  <>

3582:
old  <	mov rsi, [rbp + 121]>
new  < scanFormat$123:>

3583:
old  <>
new  <	; GetReturnValue Â£temporary1316>

3584:
old  < scanFormat$223:>
new  <>

3585:
old  <	; Assign Â£temporary1364 -> unsignedLongPtr unsignedLongValue>
new  < scanFormat$124:>

3586:
old  <	mov rax, [rbp + 113]>
new  <	; Assign unsignedLongValue Â£temporary1316>

3587:
old  <	mov [rsi], rax>
new  <	mov [rbp + 113], rbx>

3589:
old  < scanFormat$224:>
new  < scanFormat$125:>

3590:
old  <	; Assign percent 0>
new  <	; NotEqual 153 star 0>

3591:
old  <	mov dword [rbp + 49], 0>
new  <	cmp dword [rbp + 65], 0>

3592:
old  <>
new  <	jne scanFormat$153>

3593:
old  < scanFormat$225:>
new  <>

3594:
old  <	; Goto 330>
new  < scanFormat$126:>

3595:
old  <	jmp scanFormat$330>
new  <	; Equal 136 shortInt 0>

3596:
old  <>
new  <	cmp dword [rbp + 53], 0>

3597:
old  < scanFormat$226:>
new  <	je scanFormat$136>

3598:
old  <	; PreCall 157 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

3599:
old  <>
new  < scanFormat$127:>

3600:
old  < scanFormat$227:>
new  <	; BinaryAdd arg_list arg_list 8>

3601:
old  <	; Call scanLongDouble 157 0>
new  <	add qword [rbp + 32], 8>

3602:
old  <	mov qword [rbp + 157], scanFormat$228>
new  <>

3603:
old  <	mov [rbp + 165], rbp>
new  < scanFormat$128:>

3604:
old  <	add rbp, 157>
new  <	; BinarySubtract Â£temporary1321 arg_list 8>

3605:
old  <	jmp scanLongDouble>
new  <	mov rsi, [rbp + 32]>

3606:
old  <>
new  <	sub rsi, 8>

3607:
old  < scanFormat$228:>
new  <>

3608:
old  <	; PostCall 157>
new  < scanFormat$129:>

3609:
old  <>
new  <	; IntegralToIntegral Â£temporary1323 Â£temporary1321>

3610:
old  < scanFormat$229:>
new  <>

3611:
old  <	; GetReturnValue Â£temporary1366>
new  < scanFormat$130:>

3612:
old  <>
new  <	; Dereference Â£temporary1324 -> Â£temporary1323 Â£temporary1323 0>

3613:
old  < scanFormat$230:>
new  <>

3614:
old  <	; PopFloat longDoubleValue>
new  < scanFormat$131:>

3615:
old  <	fstp qword [rbp + 145]>
new  <	; Assign unsignedShortPtr Â£temporary1324 -> Â£temporary1323>

3616:
old  <>
new  <	mov rax, [rsi]>

3617:
old  < scanFormat$231:>
new  <	mov [rbp + 129], rax>

3618:
old  <	; NotEqual 260 star 0>
new  <>

3619:
old  <	cmp dword [rbp + 65], 0>
new  < scanFormat$132:>

3620:
old  <	jne scanFormat$260>
new  <	; Dereference Â£temporary1325 -> unsignedShortPtr unsignedShortPtr 0>

3621:
old  <>
new  <	mov rsi, [rbp + 129]>

3622:
old  < scanFormat$232:>
new  <>

3623:
old  <	; Equal 242 longIntOrDouble 0>
new  < scanFormat$133:>

3624:
old  <	cmp dword [rbp + 57], 0>
new  <	; IntegralToIntegral Â£temporary1326 unsignedLongValue>

3625:
old  <	je scanFormat$242>
new  <	mov rax, [rbp + 113]>

3627:
old  < scanFormat$233:>
new  < scanFormat$134:>

3628:
old  <	; BinaryAdd arg_list arg_list 8>
new  <	; Assign Â£temporary1325 -> unsignedShortPtr Â£temporary1326>

3629:
old  <	add qword [rbp + 32], 8>
new  <	mov [rsi], ax>

3631:
old  < scanFormat$234:>
new  < scanFormat$135:>

3632:
old  <	; BinarySubtract Â£temporary1371 arg_list 8>
new  <	; Goto 153>

3633:
old  <	mov rsi, [rbp + 32]>
new  <	jmp scanFormat$153>

3634:
old  <	sub rsi, 8>
new  <>

3635:
old  <>
new  < scanFormat$136:>

3636:
old  < scanFormat$235:>
new  <	; NotEqual 146 longIntOrDouble 0>

3637:
old  <	; IntegralToIntegral Â£temporary1373 Â£temporary1371>
new  <	cmp dword [rbp + 57], 0>

3638:
old  <>
new  <	jne scanFormat$146>

3639:
old  < scanFormat$236:>
new  <>

3640:
old  <	; Dereference Â£temporary1374 -> Â£temporary1373 Â£temporary1373 0>
new  < scanFormat$137:>

3641:
old  <>
new  <	; BinaryAdd arg_list arg_list 8>

3642:
old  < scanFormat$237:>
new  <	add qword [rbp + 32], 8>

3643:
old  <	; Assign doublePtr Â£temporary1374 -> Â£temporary1373>
new  <>

3644:
old  <	mov rax, [rsi]>
new  < scanFormat$138:>

3645:
old  <	mov [rbp + 157], rax>
new  <	; BinarySubtract Â£temporary1331 arg_list 8>

3646:
old  <>
new  <	mov rsi, [rbp + 32]>

3647:
old  < scanFormat$238:>
new  <	sub rsi, 8>

3648:
old  <	; Dereference Â£temporary1375 -> doublePtr doublePtr 0>
new  <>

3649:
old  <	mov rsi, [rbp + 157]>
new  < scanFormat$139:>

3650:
old  <>
new  <	; IntegralToIntegral Â£temporary1333 Â£temporary1331>

3651:
old  < scanFormat$239:>
new  <>

3652:
old  <	; PushFloat longDoubleValue>
new  < scanFormat$140:>

3653:
old  <	fld qword [rbp + 145]>
new  <	; Dereference Â£temporary1334 -> Â£temporary1333 Â£temporary1333 0>

3655:
old  < scanFormat$240:>
new  < scanFormat$141:>

3656:
old  <	; PopFloat Â£temporary1375 -> doublePtr>
new  <	; Assign unsignedIntPtr Â£temporary1334 -> Â£temporary1333>

3657:
old  <	fstp qword [rsi]>
new  <	mov rax, [rsi]>

3658:
old  <>
new  <	mov [rbp + 137], rax>

3659:
old  < scanFormat$241:>
new  <>

3660:
old  <	; Goto 260>
new  < scanFormat$142:>

3661:
old  <	jmp scanFormat$260>
new  <	; Dereference Â£temporary1335 -> unsignedIntPtr unsignedIntPtr 0>

3662:
old  <>
new  <	mov rsi, [rbp + 137]>

3663:
old  < scanFormat$242:>
new  <>

3664:
old  <	; Equal 252 longDouble 0>
new  < scanFormat$143:>

3665:
old  <	cmp dword [rbp + 61], 0>
new  <	; IntegralToIntegral Â£temporary1336 unsignedLongValue>

3666:
old  <	je scanFormat$252>
new  <	mov rax, [rbp + 113]>

3668:
old  < scanFormat$243:>
new  < scanFormat$144:>

3669:
old  <	; BinaryAdd arg_list arg_list 8>
new  <	; Assign Â£temporary1335 -> unsignedIntPtr Â£temporary1336>

3670:
old  <	add qword [rbp + 32], 8>
new  <	mov [rsi], eax>

3672:
old  < scanFormat$244:>
new  < scanFormat$145:>

3673:
old  <	; BinarySubtract Â£temporary1379 arg_list 8>
new  <	; Goto 153>

3674:
old  <	mov rsi, [rbp + 32]>
new  <	jmp scanFormat$153>

3675:
old  <	sub rsi, 8>
new  <>

3676:
old  <>
new  < scanFormat$146:>

3677:
old  < scanFormat$245:>
new  <	; BinaryAdd arg_list arg_list 8>

3678:
old  <	; IntegralToIntegral Â£temporary1381 Â£temporary1379>
new  <	add qword [rbp + 32], 8>

3680:
old  < scanFormat$246:>
new  < scanFormat$147:>

3681:
old  <	; Dereference Â£temporary1382 -> Â£temporary1381 Â£temporary1381 0>
new  <	; BinarySubtract Â£temporary1339 arg_list 8>

3682:
old  <>
new  <	mov rsi, [rbp + 32]>

3683:
old  < scanFormat$247:>
new  <	sub rsi, 8>

3684:
old  <	; Assign longDoublePtr Â£temporary1382 -> Â£temporary1381>
new  <>

3685:
old  <	mov rax, [rsi]>
new  < scanFormat$148:>

3686:
old  <	mov [rbp + 157], rax>
new  <	; IntegralToIntegral Â£temporary1341 Â£temporary1339>

3688:
old  < scanFormat$248:>
new  < scanFormat$149:>

3689:
old  <	; Dereference Â£temporary1383 -> longDoublePtr longDoublePtr 0>
new  <	; Dereference Â£temporary1342 -> Â£temporary1341 Â£temporary1341 0>

3690:
old  <	mov rsi, [rbp + 157]>
new  <>

3691:
old  <>
new  < scanFormat$150:>

3692:
old  < scanFormat$249:>
new  <	; Assign unsignedLongPtr Â£temporary1342 -> Â£temporary1341>

3693:
old  <	; PushFloat longDoubleValue>
new  <	mov rax, [rsi]>

3694:
old  <	fld qword [rbp + 145]>
new  <	mov [rbp + 121], rax>

3696:
old  < scanFormat$250:>
new  < scanFormat$151:>

3697:
old  <	; PopFloat Â£temporary1383 -> longDoublePtr>
new  <	; Dereference Â£temporary1343 -> unsignedLongPtr unsignedLongPtr 0>

3698:
old  <	fstp qword [rsi]>
new  <	mov rsi, [rbp + 121]>

3700:
old  < scanFormat$251:>
new  < scanFormat$152:>

3701:
old  <	; Goto 260>
new  <	; Assign Â£temporary1343 -> unsignedLongPtr unsignedLongValue>

3702:
old  <	jmp scanFormat$260>
new  <	mov rax, [rbp + 113]>

3703:
old  <>
new  <	mov [rsi], rax>

3704:
old  < scanFormat$252:>
new  <>

3705:
old  <	; BinaryAdd arg_list arg_list 8>
new  < scanFormat$153:>

3706:
old  <	add qword [rbp + 32], 8>
new  <	; Assign percent 0>

3707:
old  <>
new  <	mov dword [rbp + 49], 0>

3708:
old  < scanFormat$253:>
new  <>

3709:
old  <	; BinarySubtract Â£temporary1386 arg_list 8>
new  < scanFormat$154:>

3710:
old  <	mov rsi, [rbp + 32]>
new  <	; Goto 331>

3711:
old  <	sub rsi, 8>
new  <	jmp scanFormat$331>

3713:
old  < scanFormat$254:>
new  < scanFormat$155:>

3714:
old  <	; IntegralToIntegral Â£temporary1388 Â£temporary1386>
new  <	; PreCall 157 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3716:
old  < scanFormat$255:>
new  < scanFormat$156:>

3717:
old  <	; Dereference Â£temporary1389 -> Â£temporary1388 Â£temporary1388 0>
new  <	; Parameter signedint 16 181>

3718:
old  <>
new  <	mov dword [rbp + 181], 16>

3719:
old  < scanFormat$256:>
new  <>

3720:
old  <	; Assign floatPtr Â£temporary1389 -> Â£temporary1388>
new  < scanFormat$157:>

3721:
old  <	mov rax, [rsi]>
new  <	; Call scanUnsignedLongInt 157 0>

3722:
old  <	mov [rbp + 157], rax>
new  <	mov qword [rbp + 157], scanFormat$158>

3723:
old  <>
new  <	mov [rbp + 165], rbp>

3724:
old  < scanFormat$257:>
new  <	add rbp, 157>

3725:
old  <	; Dereference Â£temporary1390 -> floatPtr floatPtr 0>
new  <	jmp scanUnsignedLongInt>

3726:
old  <	mov rsi, [rbp + 157]>
new  <>

3727:
old  <>
new  < scanFormat$158:>

3728:
old  < scanFormat$258:>
new  <	; PostCall 157>

3729:
old  <	; PushFloat longDoubleValue>
new  <>

3730:
old  <	fld qword [rbp + 145]>
new  < scanFormat$159:>

3731:
old  <>
new  <	; GetReturnValue Â£temporary1345>

3732:
old  < scanFormat$259:>
new  <>

3733:
old  <	; PopFloat Â£temporary1390 -> floatPtr>
new  < scanFormat$160:>

3734:
old  <	fstp dword [rsi]>
new  <	; Assign unsignedLongValue Â£temporary1345>

3735:
old  <>
new  <	mov [rbp + 113], rbx>

3736:
old  < scanFormat$260:>
new  <>

3737:
old  <	; Assign percent 0>
new  < scanFormat$161:>

3738:
old  <	mov dword [rbp + 49], 0>
new  <	; NotEqual 189 star 0>

3739:
old  <>
new  <	cmp dword [rbp + 65], 0>

3740:
old  < scanFormat$261:>
new  <	jne scanFormat$189>

3741:
old  <	; Goto 330>
new  <>

3742:
old  <	jmp scanFormat$330>
new  < scanFormat$162:>

3743:
old  <>
new  <	; Equal 172 shortInt 0>

3744:
old  < scanFormat$262:>
new  <	cmp dword [rbp + 53], 0>

3745:
old  <	; Assign not 0>
new  <	je scanFormat$172>

3746:
old  <	mov dword [rbp + 157], 0>
new  <>

3747:
old  <>
new  < scanFormat$163:>

3748:
old  < scanFormat$263:>
new  <	; BinaryAdd arg_list arg_list 8>

3749:
old  <	; BinaryAdd index index 1>
new  <	add qword [rbp + 32], 8>

3750:
old  <	inc dword [rbp + 93]>
new  <>

3751:
old  <>
new  < scanFormat$164:>

3752:
old  < scanFormat$264:>
new  <	; BinarySubtract Â£temporary1350 arg_list 8>

3753:
old  <	; IntegralToIntegral Â£temporary1396 index>
new  <	mov rsi, [rbp + 32]>

3754:
old  <	mov eax, [rbp + 93]>
new  <	sub rsi, 8>

3755:
old  <	mov rbx, 4294967295>
new  <>

3756:
old  <	and rax, rbx>
new  < scanFormat$165:>

3757:
old  <>
new  <	; IntegralToIntegral Â£temporary1352 Â£temporary1350>

3758:
old  < scanFormat$265:>
new  <>

3759:
old  <	; BinaryAdd Â£temporary1398 format Â£temporary1396>
new  < scanFormat$166:>

3760:
old  <	mov rsi, [rbp + 24]>
new  <	; Dereference Â£temporary1353 -> Â£temporary1352 Â£temporary1352 0>

3761:
old  <	add rsi, rax>
new  <>

3762:
old  <>
new  < scanFormat$167:>

3763:
old  < scanFormat$266:>
new  <	; Assign unsignedShortPtr Â£temporary1353 -> Â£temporary1352>

3764:
old  <	; Dereference Â£temporary1395 -> Â£temporary1398 Â£temporary1398 0>
new  <	mov rax, [rsi]>

3765:
old  <>
new  <	mov [rbp + 129], rax>

3766:
old  < scanFormat$267:>
new  <>

3767:
old  <	; NotEqual 270 Â£temporary1395 -> Â£temporary1398 94>
new  < scanFormat$168:>

3768:
old  <	cmp byte [rsi], 94>
new  <	; Dereference Â£temporary1354 -> unsignedShortPtr unsignedShortPtr 0>

3769:
old  <	jne scanFormat$270>
new  <	mov rsi, [rbp + 129]>

3771:
old  < scanFormat$268:>
new  < scanFormat$169:>

3772:
old  <	; Assign not 1>
new  <	; IntegralToIntegral Â£temporary1355 unsignedLongValue>

3773:
old  <	mov dword [rbp + 157], 1>
new  <	mov rax, [rbp + 113]>

3775:
old  < scanFormat$269:>
new  < scanFormat$170:>

3776:
old  <	; BinaryAdd startIndex index 1>
new  <	; Assign Â£temporary1354 -> unsignedShortPtr Â£temporary1355>

3777:
old  <	mov eax, [rbp + 93]>
new  <	mov [rsi], ax>

3778:
old  <	inc eax>
new  <>

3779:
old  <	mov [rbp + 161], eax>
new  < scanFormat$171:>

3780:
old  <>
new  <	; Goto 189>

3781:
old  < scanFormat$270:>
new  <	jmp scanFormat$189>

3782:
old  <	; IntegralToIntegral Â£temporary1402 index>
new  <>

3783:
old  <	mov eax, [rbp + 93]>
new  < scanFormat$172:>

3784:
old  <	mov rbx, 4294967295>
new  <	; NotEqual 182 longIntOrDouble 0>

3785:
old  <	and rax, rbx>
new  <	cmp dword [rbp + 57], 0>

3786:
old  <>
new  <	jne scanFormat$182>

3787:
old  < scanFormat$271:>
new  <>

3788:
old  <	; BinaryAdd Â£temporary1404 format Â£temporary1402>
new  < scanFormat$173:>

3789:
old  <	mov rsi, [rbp + 24]>
new  <	; BinaryAdd arg_list arg_list 8>

3790:
old  <	add rsi, rax>
new  <	add qword [rbp + 32], 8>

3792:
old  < scanFormat$272:>
new  < scanFormat$174:>

3793:
old  <	; Dereference Â£temporary1401 -> Â£temporary1404 Â£temporary1404 0>
new  <	; BinarySubtract Â£temporary1360 arg_list 8>

3794:
old  <>
new  <	mov rsi, [rbp + 32]>

3795:
old  < scanFormat$273:>
new  <	sub rsi, 8>

3796:
old  <	; Equal 276 Â£temporary1401 -> Â£temporary1404 93>
new  <>

3797:
old  <	cmp byte [rsi], 93>
new  < scanFormat$175:>

3798:
old  <	je scanFormat$276>
new  <	; IntegralToIntegral Â£temporary1362 Â£temporary1360>

3800:
old  < scanFormat$274:>
new  < scanFormat$176:>

3801:
old  <	; BinaryAdd index index 1>
new  <	; Dereference Â£temporary1363 -> Â£temporary1362 Â£temporary1362 0>

3802:
old  <	inc dword [rbp + 93]>
new  <>

3803:
old  <>
new  < scanFormat$177:>

3804:
old  < scanFormat$275:>
new  <	; Assign unsignedIntPtr Â£temporary1363 -> Â£temporary1362>

3805:
old  <	; Goto 270>
new  <	mov rax, [rsi]>

3806:
old  <	jmp scanFormat$270>
new  <	mov [rbp + 137], rax>

3808:
old  < scanFormat$276:>
new  < scanFormat$178:>

3809:
old  <	; IntegralToIntegral Â£temporary1408 index>
new  <	; Dereference Â£temporary1364 -> unsignedIntPtr unsignedIntPtr 0>

3810:
old  <	mov eax, [rbp + 93]>
new  <	mov rsi, [rbp + 137]>

3811:
old  <	mov rbx, 4294967295>
new  <>

3812:
old  <	and rax, rbx>
new  < scanFormat$179:>

3813:
old  <>
new  <	; IntegralToIntegral Â£temporary1365 unsignedLongValue>

3814:
old  < scanFormat$277:>
new  <	mov rax, [rbp + 113]>

3815:
old  <	; BinaryAdd Â£temporary1410 format Â£temporary1408>
new  <>

3816:
old  <	mov rsi, [rbp + 24]>
new  < scanFormat$180:>

3817:
old  <	add rsi, rax>
new  <	; Assign Â£temporary1364 -> unsignedIntPtr Â£temporary1365>

3818:
old  <>
new  <	mov [rsi], eax>

3819:
old  < scanFormat$278:>
new  <>

3820:
old  <	; Dereference Â£temporary1407 -> Â£temporary1410 Â£temporary1410 0>
new  < scanFormat$181:>

3821:
old  <>
new  <	; Goto 189>

3822:
old  < scanFormat$279:>
new  <	jmp scanFormat$189>

3823:
old  <	; Assign Â£temporary1407 -> Â£temporary1410 0>
new  <>

3824:
old  <	mov byte [rsi], 0>
new  < scanFormat$182:>

3825:
old  <>
new  <	; BinaryAdd arg_list arg_list 8>

3826:
old  < scanFormat$280:>
new  <	add qword [rbp + 32], 8>

3827:
old  <	; NotEqual 297 star 0>
new  <>

3828:
old  <	cmp dword [rbp + 65], 0>
new  < scanFormat$183:>

3829:
old  <	jne scanFormat$297>
new  <	; BinarySubtract Â£temporary1368 arg_list 8>

3830:
old  <>
new  <	mov rsi, [rbp + 32]>

3831:
old  < scanFormat$281:>
new  <	sub rsi, 8>

3832:
old  <	; BinaryAdd arg_list arg_list 8>
new  <>

3833:
old  <	add qword [rbp + 32], 8>
new  < scanFormat$184:>

3834:
old  <>
new  <	; IntegralToIntegral Â£temporary1370 Â£temporary1368>

3835:
old  < scanFormat$282:>
new  <>

3836:
old  <	; BinarySubtract Â£temporary1415 arg_list 8>
new  < scanFormat$185:>

3837:
old  <	mov rsi, [rbp + 32]>
new  <	; Dereference Â£temporary1371 -> Â£temporary1370 Â£temporary1370 0>

3838:
old  <	sub rsi, 8>
new  <>

3839:
old  <>
new  < scanFormat$186:>

3840:
old  < scanFormat$283:>
new  <	; Assign unsignedLongPtr Â£temporary1371 -> Â£temporary1370>

3841:
old  <	; IntegralToIntegral Â£temporary1417 Â£temporary1415>
new  <	mov rax, [rsi]>

3842:
old  <>
new  <	mov [rbp + 121], rax>

3843:
old  < scanFormat$284:>
new  <>

3844:
old  <	; Dereference Â£temporary1418 -> Â£temporary1417 Â£temporary1417 0>
new  < scanFormat$187:>

3845:
old  <>
new  <	; Dereference Â£temporary1372 -> unsignedLongPtr unsignedLongPtr 0>

3846:
old  < scanFormat$285:>
new  <	mov rsi, [rbp + 121]>

3847:
old  <	; Assign string Â£temporary1418 -> Â£temporary1417>
new  <>

3848:
old  <	mov rax, [rsi]>
new  < scanFormat$188:>

3849:
old  <	mov [rbp + 165], rax>
new  <	; Assign Â£temporary1372 -> unsignedLongPtr unsignedLongValue>

3850:
old  <>
new  <	mov rax, [rbp + 113]>

3851:
old  < scanFormat$286:>
new  <	mov [rsi], rax>

3852:
old  <	; PreCall 173 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

3853:
old  <>
new  < scanFormat$189:>

3854:
old  < scanFormat$287:>
new  <	; Assign percent 0>

3855:
old  <	; Parameter pointer string 197>
new  <	mov dword [rbp + 49], 0>

3856:
old  <	mov rax, [rbp + 165]>
new  <>

3857:
old  <	mov [rbp + 197], rax>
new  < scanFormat$190:>

3858:
old  <>
new  <	; Goto 331>

3859:
old  < scanFormat$288:>
new  <	jmp scanFormat$331>

3860:
old  <	; IntegralToIntegral Â£temporary1420 startIndex>
new  <>

3861:
old  <	mov eax, [rbp + 161]>
new  < scanFormat$191:>

3862:
old  <	mov rbx, 4294967295>
new  <	; PreCall 157 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3863:
old  <	and rax, rbx>
new  <>

3864:
old  <>
new  < scanFormat$192:>

3865:
old  < scanFormat$289:>
new  <	; Parameter signedint 0 181>

3866:
old  <	; BinaryAdd Â£temporary1422 format Â£temporary1420>
new  <	mov dword [rbp + 181], 0>

3867:
old  <	mov rsi, [rbp + 24]>
new  <>

3868:
old  <	add rsi, rax>
new  < scanFormat$193:>

3869:
old  <>
new  <	; Call scanUnsignedLongInt 157 0>

3870:
old  < scanFormat$290:>
new  <	mov qword [rbp + 157], scanFormat$194>

3871:
old  <	; Dereference Â£temporary1419 -> Â£temporary1422 Â£temporary1422 0>
new  <	mov [rbp + 165], rbp>

3872:
old  <>
new  <	add rbp, 157>

3873:
old  < scanFormat$291:>
new  <	jmp scanUnsignedLongInt>

3874:
old  <	; Address Â£temporary1423 Â£temporary1419 -> Â£temporary1422>
new  <>

3875:
old  <>
new  < scanFormat$194:>

3876:
old  < scanFormat$292:>
new  <	; PostCall 157>

3877:
old  <	; Parameter pointer Â£temporary1423 205>
new  <>

3878:
old  <	mov [rbp + 205], rsi>
new  < scanFormat$195:>

3879:
old  <>
new  <	; GetReturnValue Â£temporary1374>

3880:
old  < scanFormat$293:>
new  <>

3881:
old  <	; Parameter signedint not 213>
new  < scanFormat$196:>

3882:
old  <	mov eax, [rbp + 157]>
new  <	; Assign unsignedLongValue Â£temporary1374>

3883:
old  <	mov [rbp + 213], eax>
new  <	mov [rbp + 113], rbx>

3885:
old  < scanFormat$294:>
new  < scanFormat$197:>

3886:
old  <	; Call scanPattern 173 0>
new  <	; NotEqual 225 star 0>

3887:
old  <	mov qword [rbp + 173], scanFormat$295>
new  <	cmp dword [rbp + 65], 0>

3888:
old  <	mov [rbp + 181], rbp>
new  <	jne scanFormat$225>

3889:
old  <	add rbp, 173>
new  <>

3890:
old  <	jmp scanPattern>
new  < scanFormat$198:>

3891:
old  <>
new  <	; Equal 208 shortInt 0>

3892:
old  < scanFormat$295:>
new  <	cmp dword [rbp + 53], 0>

3893:
old  <	; PostCall 173>
new  <	je scanFormat$208>

3895:
old  < scanFormat$296:>
new  < scanFormat$199:>

3896:
old  <	; Goto 330>
new  <	; BinaryAdd arg_list arg_list 8>

3897:
old  <	jmp scanFormat$330>
new  <	add qword [rbp + 32], 8>

3899:
old  < scanFormat$297:>
new  < scanFormat$200:>

3900:
old  <	; PreCall 165 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; BinarySubtract Â£temporary1379 arg_list 8>

3901:
old  <>
new  <	mov rsi, [rbp + 32]>

3902:
old  < scanFormat$298:>
new  <	sub rsi, 8>

3903:
old  <	; Parameter pointer 0 189>
new  <>

3904:
old  <	mov qword [rbp + 189], 0>
new  < scanFormat$201:>

3905:
old  <>
new  <	; IntegralToIntegral Â£temporary1381 Â£temporary1379>

3906:
old  < scanFormat$299:>
new  <>

3907:
old  <	; IntegralToIntegral Â£temporary1426 startIndex>
new  < scanFormat$202:>

3908:
old  <	mov eax, [rbp + 161]>
new  <	; Dereference Â£temporary1382 -> Â£temporary1381 Â£temporary1381 0>

3909:
old  <	mov rbx, 4294967295>
new  <>

3910:
old  <	and rax, rbx>
new  < scanFormat$203:>

3911:
old  <>
new  <	; Assign unsignedShortPtr Â£temporary1382 -> Â£temporary1381>

3912:
old  < scanFormat$300:>
new  <	mov rax, [rsi]>

3913:
old  <	; BinaryAdd Â£temporary1428 format Â£temporary1426>
new  <	mov [rbp + 129], rax>

3914:
old  <	mov rsi, [rbp + 24]>
new  <>

3915:
old  <	add rsi, rax>
new  < scanFormat$204:>

3916:
old  <>
new  <	; Dereference Â£temporary1383 -> unsignedShortPtr unsignedShortPtr 0>

3917:
old  < scanFormat$301:>
new  <	mov rsi, [rbp + 129]>

3918:
old  <	; Dereference Â£temporary1425 -> Â£temporary1428 Â£temporary1428 0>
new  <>

3919:
old  <>
new  < scanFormat$205:>

3920:
old  < scanFormat$302:>
new  <	; IntegralToIntegral Â£temporary1384 unsignedLongValue>

3921:
old  <	; Address Â£temporary1429 Â£temporary1425 -> Â£temporary1428>
new  <	mov rax, [rbp + 113]>

3923:
old  < scanFormat$303:>
new  < scanFormat$206:>

3924:
old  <	; Parameter pointer Â£temporary1429 197>
new  <	; Assign Â£temporary1383 -> unsignedShortPtr Â£temporary1384>

3925:
old  <	mov [rbp + 197], rsi>
new  <	mov [rsi], ax>

3927:
old  < scanFormat$304:>
new  < scanFormat$207:>

3928:
old  <	; Parameter signedint not 205>
new  <	; Goto 225>

3929:
old  <	mov eax, [rbp + 157]>
new  <	jmp scanFormat$225>

3930:
old  <	mov [rbp + 205], eax>
new  <>

3931:
old  <>
new  < scanFormat$208:>

3932:
old  < scanFormat$305:>
new  <	; NotEqual 218 longIntOrDouble 0>

3933:
old  <	; Call scanPattern 165 0>
new  <	cmp dword [rbp + 57], 0>

3934:
old  <	mov qword [rbp + 165], scanFormat$306>
new  <	jne scanFormat$218>

3935:
old  <	mov [rbp + 173], rbp>
new  <>

3936:
old  <	add rbp, 165>
new  < scanFormat$209:>

3937:
old  <	jmp scanPattern>
new  <	; BinaryAdd arg_list arg_list 8>

3938:
old  <>
new  <	add qword [rbp + 32], 8>

3939:
old  < scanFormat$306:>
new  <>

3940:
old  <	; PostCall 165>
new  < scanFormat$210:>

3941:
old  <>
new  <	; BinarySubtract Â£temporary1389 arg_list 8>

3942:
old  < scanFormat$307:>
new  <	mov rsi, [rbp + 32]>

3943:
old  <	; Goto 330>
new  <	sub rsi, 8>

3944:
old  <	jmp scanFormat$330>
new  <>

3945:
old  <>
new  < scanFormat$211:>

3946:
old  < scanFormat$308:>
new  <	; IntegralToIntegral Â£temporary1391 Â£temporary1389>

3947:
old  <	; BinaryAdd arg_list arg_list 8>
new  <>

3948:
old  <	add qword [rbp + 32], 8>
new  < scanFormat$212:>

3949:
old  <>
new  <	; Dereference Â£temporary1392 -> Â£temporary1391 Â£temporary1391 0>

3950:
old  < scanFormat$309:>
new  <>

3951:
old  <	; BinarySubtract Â£temporary1433 arg_list 8>
new  < scanFormat$213:>

3952:
old  <	mov rsi, [rbp + 32]>
new  <	; Assign unsignedIntPtr Â£temporary1392 -> Â£temporary1391>

3953:
old  <	sub rsi, 8>
new  <	mov rax, [rsi]>

3954:
old  <>
new  <	mov [rbp + 137], rax>

3955:
old  < scanFormat$310:>
new  <>

3956:
old  <	; IntegralToIntegral Â£temporary1435 Â£temporary1433>
new  < scanFormat$214:>

3957:
old  <>
new  <	; Dereference Â£temporary1393 -> unsignedIntPtr unsignedIntPtr 0>

3958:
old  < scanFormat$311:>
new  <	mov rsi, [rbp + 137]>

3959:
old  <	; Dereference Â£temporary1436 -> Â£temporary1435 Â£temporary1435 0>
new  <>

3960:
old  <>
new  < scanFormat$215:>

3961:
old  < scanFormat$312:>
new  <	; IntegralToIntegral Â£temporary1394 unsignedLongValue>

3962:
old  <	; Assign charsPtr Â£temporary1436 -> Â£temporary1435>
new  <	mov rax, [rbp + 113]>

3963:
old  <	mov rax, [rsi]>
new  <>

3964:
old  <	mov [rbp + 105], rax>
new  < scanFormat$216:>

3965:
old  <>
new  <	; Assign Â£temporary1393 -> unsignedIntPtr Â£temporary1394>

3966:
old  < scanFormat$313:>
new  <	mov [rsi], eax>

3967:
old  <	; Dereference Â£temporary1437 -> charsPtr charsPtr 0>
new  <>

3968:
old  <	mov rsi, [rbp + 105]>
new  < scanFormat$217:>

3969:
old  <>
new  <	; Goto 225>

3970:
old  < scanFormat$314:>
new  <	jmp scanFormat$225>

3971:
old  <	; Assign Â£temporary1437 -> charsPtr g_inChars>
new  <>

3972:
old  <	mov eax, [g_inChars]>
new  < scanFormat$218:>

3973:
old  <	mov [rsi], eax>
new  <	; BinaryAdd arg_list arg_list 8>

3974:
old  <>
new  <	add qword [rbp + 32], 8>

3975:
old  < scanFormat$315:>
new  <>

3976:
old  <	; Assign percent 0>
new  < scanFormat$219:>

3977:
old  <	mov dword [rbp + 49], 0>
new  <	; BinarySubtract Â£temporary1397 arg_list 8>

3978:
old  <>
new  <	mov rsi, [rbp + 32]>

3979:
old  < scanFormat$316:>
new  <	sub rsi, 8>

3980:
old  <	; Goto 330>
new  <>

3981:
old  <	jmp scanFormat$330>
new  < scanFormat$220:>

3982:
old  <>
new  <	; IntegralToIntegral Â£temporary1399 Â£temporary1397>

3983:
old  < scanFormat$317:>
new  <>

3984:
old  <	; PreCall 157 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < scanFormat$221:>

3985:
old  <>
new  <	; Dereference Â£temporary1400 -> Â£temporary1399 Â£temporary1399 0>

3986:
old  < scanFormat$318:>
new  <>

3987:
old  <	; Parameter pointer "scanFormat c = '%c'\n" 181>
new  < scanFormat$222:>

3988:
old  <	mov qword [rbp + 181], string_scanFormat20c203D202725c270A#>
new  <	; Assign unsignedLongPtr Â£temporary1400 -> Â£temporary1399>

3989:
old  <>
new  <	mov rax, [rsi]>

3990:
old  < scanFormat$319:>
new  <	mov [rbp + 121], rax>

3991:
old  <	; IntegralToIntegral Â£temporary1438 c>
new  <>

3992:
old  <	mov al, [rbp + 40]>
new  < scanFormat$223:>

3993:
old  <	and eax, 255>
new  <	; Dereference Â£temporary1401 -> unsignedLongPtr unsignedLongPtr 0>

3994:
old  <	cmp al, 0>
new  <	mov rsi, [rbp + 121]>

3995:
old  <	jge scanFormat$320>
new  <>

3996:
old  <	neg al>
new  < scanFormat$224:>

3997:
old  <	neg eax>
new  <	; Assign Â£temporary1401 -> unsignedLongPtr unsignedLongValue>

3998:
old  <>
new  <	mov rax, [rbp + 113]>

3999:
old  < scanFormat$320:>
new  <	mov [rsi], rax>

4000:
old  <	; Parameter signedint Â£temporary1438 189>
new  <>

4001:
old  <	mov [rbp + 189], eax>
new  < scanFormat$225:>

4002:
old  <>
new  <	; Assign percent 0>

4003:
old  < scanFormat$321:>
new  <	mov dword [rbp + 49], 0>

4004:
old  <	; Call printf 157 4>
new  <>

4005:
old  <	mov qword [rbp + 157], scanFormat$322>
new  < scanFormat$226:>

4006:
old  <	mov [rbp + 165], rbp>
new  <	; Goto 331>

4007:
old  <	add rbp, 157>
new  <	jmp scanFormat$331>

4008:
old  <	mov rdi, rbp>
new  <>

4009:
old  <	add rdi, 4>
new  < scanFormat$227:>

4010:
old  <	jmp printf>
new  <	; PreCall 157 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

4012:
old  < scanFormat$322:>
new  < scanFormat$228:>

4013:
old  <	; PostCall 157>
new  <	; Call scanLongDouble 157 0>

4014:
old  <>
new  <	mov qword [rbp + 157], scanFormat$229>

4015:
old  < scanFormat$323:>
new  <	mov [rbp + 165], rbp>

4016:
old  <	; Goto 330>
new  <	add rbp, 157>

4017:
old  <	jmp scanFormat$330>
new  <	jmp scanLongDouble>

4019:
old  < scanFormat$324:>
new  < scanFormat$229:>

4020:
old  <	; NotEqual 330 c 37>
new  <	; PostCall 157>

4021:
old  <	cmp byte [rbp + 40], 37>
new  <>

4022:
old  <	jne scanFormat$330>
new  < scanFormat$230:>

4023:
old  <>
new  <	; GetReturnValue Â£temporary1403>

4024:
old  < scanFormat$325:>
new  <>

4025:
old  <	; Assign percent 1>
new  < scanFormat$231:>

4026:
old  <	mov dword [rbp + 49], 1>
new  <	; PopFloat longDoubleValue>

4027:
old  <>
new  <	fstp qword [rbp + 145]>

4028:
old  < scanFormat$326:>
new  <>

4029:
old  <	; Assign shortInt 0>
new  < scanFormat$232:>

4030:
old  <	mov dword [rbp + 53], 0>
new  <	; NotEqual 261 star 0>

4031:
old  <>
new  <	cmp dword [rbp + 65], 0>

4032:
old  < scanFormat$327:>
new  <	jne scanFormat$261>

4033:
old  <	; Assign longIntOrDouble 0>
new  <>

4034:
old  <	mov dword [rbp + 57], 0>
new  < scanFormat$233:>

4035:
old  <>
new  <	; Equal 243 longIntOrDouble 0>

4036:
old  < scanFormat$328:>
new  <	cmp dword [rbp + 57], 0>

4037:
old  <	; Assign longDouble 0>
new  <	je scanFormat$243>

4038:
old  <	mov dword [rbp + 61], 0>
new  <>

4039:
old  <>
new  < scanFormat$234:>

4040:
old  < scanFormat$329:>
new  <	; BinaryAdd arg_list arg_list 8>

4041:
old  <	; Assign star 0>
new  <	add qword [rbp + 32], 8>

4042:
old  <	mov dword [rbp + 65], 0>
new  <>

4043:
old  <>
new  < scanFormat$235:>

4044:
old  < scanFormat$330:>
new  <	; BinarySubtract Â£temporary1408 arg_list 8>

4045:
old  <	; BinaryAdd index index 1>
new  <	mov rsi, [rbp + 32]>

4046:
old  <	inc dword [rbp + 93]>
new  <	sub rsi, 8>

4048:
old  < scanFormat$331:>
new  < scanFormat$236:>

4049:
old  <	; Goto 8>
new  <	; IntegralToIntegral Â£temporary1410 Â£temporary1408>

4050:
old  <	jmp scanFormat$8>
new  <>

4051:
old  <>
new  < scanFormat$237:>

4052:
old  < scanFormat$332:>
new  <	; Dereference Â£temporary1411 -> Â£temporary1410 Â£temporary1410 0>

4053:
old  <	; Return g_inCount>
new  <>

4054:
old  <	mov ebx, [g_inCount]>
new  < scanFormat$238:>

4055:
old  <	mov rax, [rbp]>
new  <	; Assign doublePtr Â£temporary1411 -> Â£temporary1410>

4056:
old  <	mov rdi, [rbp + 16]>
new  <	mov rax, [rsi]>

4057:
old  <	mov rbp, [rbp + 8]>
new  <	mov [rbp + 157], rax>

4058:
old  <	jmp rax>
new  <>

4059:
old  <>
new  < scanFormat$239:>

4060:
old  < scanFormat$333:>
new  <	; Dereference Â£temporary1412 -> doublePtr doublePtr 0>

4061:
old  <	; FunctionEnd scanFormat>
new  <	mov rsi, [rbp + 157]>

4063:
old  <section .text>
new  < scanFormat$240:>

4064:
old  <>
new  <	; PushFloat longDoubleValue>

4065:
old  < scanf:>
new  <	fld qword [rbp + 145]>

4066:
old  <	; Address Â£temporary1442 format>
new  <>

4067:
old  <	mov rsi, rbp>
new  < scanFormat$241:>

4068:
old  <	add rsi, 24>
new  <	; PopFloat Â£temporary1412 -> doublePtr>

4069:
old  <>
new  <	fstp qword [rsi]>

4070:
old  < scanf$1:>
new  <>

4071:
old  <	; IntegralToIntegral Â£temporary1443 Â£temporary1442>
new  < scanFormat$242:>

4072:
old  <>
new  <	; Goto 261>

4073:
old  < scanf$2:>
new  <	jmp scanFormat$261>

4074:
old  <	; BinaryAdd arg_list Â£temporary1443 8>
new  <>

4075:
old  <	add rsi, 8>
new  < scanFormat$243:>

4076:
old  <	mov [rdi + 32], rsi>
new  <	; Equal 253 longDouble 0>

4077:
old  <>
new  <	cmp dword [rbp + 61], 0>

4078:
old  < scanf$3:>
new  <	je scanFormat$253>

4079:
old  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

4080:
old  <>
new  < scanFormat$244:>

4081:
old  < scanf$4:>
new  <	; BinaryAdd arg_list arg_list 8>

4082:
old  <	; Parameter pointer format 64>
new  <	add qword [rbp + 32], 8>

4083:
old  <	mov rax, [rbp + 24]>
new  <>

4084:
old  <	mov [rdi + 64], rax>
new  < scanFormat$245:>

4085:
old  <>
new  <	; BinarySubtract Â£temporary1416 arg_list 8>

4086:
old  < scanf$5:>
new  <	mov rsi, [rbp + 32]>

4087:
old  <	; Parameter pointer arg_list 72>
new  <	sub rsi, 8>

4088:
old  <	mov rax, [rdi + 32]>
new  <>

4089:
old  <	mov [rdi + 72], rax>
new  < scanFormat$246:>

4090:
old  <>
new  <	; IntegralToIntegral Â£temporary1418 Â£temporary1416>

4091:
old  < scanf$6:>
new  <>

4092:
old  <	; Call vscanf 40 0>
new  < scanFormat$247:>

4093:
old  <	mov qword [rdi + 40], scanf$7>
new  <	; Dereference Â£temporary1419 -> Â£temporary1418 Â£temporary1418 0>

4094:
old  <	mov [rdi + 48], rbp>
new  <>

4095:
old  <	mov [rdi + 56], rdi>
new  < scanFormat$248:>

4096:
old  <	add rdi, 40>
new  <	; Assign longDoublePtr Â£temporary1419 -> Â£temporary1418>

4097:
old  <	mov rbp, rdi>
new  <	mov rax, [rsi]>

4098:
old  <	jmp vscanf>
new  <	mov [rbp + 157], rax>

4100:
old  < scanf$7:>
new  < scanFormat$249:>

4101:
old  <	; PostCall 40>
new  <	; Dereference Â£temporary1420 -> longDoublePtr longDoublePtr 0>

4102:
old  <>
new  <	mov rsi, [rbp + 157]>

4103:
old  < scanf$8:>
new  <>

4104:
old  <	; GetReturnValue Â£temporary1446>
new  < scanFormat$250:>

4105:
old  <>
new  <	; PushFloat longDoubleValue>

4106:
old  < scanf$9:>
new  <	fld qword [rbp + 145]>

4107:
old  <	; Return Â£temporary1446>
new  <>

4108:
old  <	mov rax, [rbp]>
new  < scanFormat$251:>

4109:
old  <	mov rdi, [rbp + 16]>
new  <	; PopFloat Â£temporary1420 -> longDoublePtr>

4110:
old  <	mov rbp, [rbp + 8]>
new  <	fstp qword [rsi]>

4111:
old  <	jmp rax>
new  <>

4112:
old  <>
new  < scanFormat$252:>

4113:
old  < scanf$10:>
new  <	; Goto 261>

4114:
old  <	; FunctionEnd scanf>
new  <	jmp scanFormat$261>

4116:
old  <section .text>
new  < scanFormat$253:>

4117:
old  <>
new  <	; BinaryAdd arg_list arg_list 8>

4118:
old  < vscanf:>
new  <	add qword [rbp + 32], 8>

4119:
old  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

4120:
old  <>
new  < scanFormat$254:>

4121:
old  < vscanf$1:>
new  <	; BinarySubtract Â£temporary1423 arg_list 8>

4122:
old  <	; Parameter pointer stdin 64>
new  <	mov rsi, [rbp + 32]>

4123:
old  <	mov rax, [stdin]>
new  <	sub rsi, 8>

4124:
old  <	mov [rbp + 64], rax>
new  <>

4125:
old  <>
new  < scanFormat$255:>

4126:
old  < vscanf$2:>
new  <	; IntegralToIntegral Â£temporary1425 Â£temporary1423>

4127:
old  <	; Parameter pointer format 72>
new  <>

4128:
old  <	mov rax, [rbp + 24]>
new  < scanFormat$256:>

4129:
old  <	mov [rbp + 72], rax>
new  <	; Dereference Â£temporary1426 -> Â£temporary1425 Â£temporary1425 0>

4131:
old  < vscanf$3:>
new  < scanFormat$257:>

4132:
old  <	; Parameter pointer arg_list 80>
new  <	; Assign floatPtr Â£temporary1426 -> Â£temporary1425>

4133:
old  <	mov rax, [rbp + 32]>
new  <	mov rax, [rsi]>

4134:
old  <	mov [rbp + 80], rax>
new  <	mov [rbp + 157], rax>

4136:
old  < vscanf$4:>
new  < scanFormat$258:>

4137:
old  <	; Call vfscanf 40 0>
new  <	; Dereference Â£temporary1427 -> floatPtr floatPtr 0>

4138:
old  <	mov qword [rbp + 40], vscanf$5>
new  <	mov rsi, [rbp + 157]>

4139:
old  <	mov [rbp + 48], rbp>
new  <>

4140:
old  <	add rbp, 40>
new  < scanFormat$259:>

4141:
old  <	jmp vfscanf>
new  <	; PushFloat longDoubleValue>

4142:
old  <>
new  <	fld qword [rbp + 145]>

4143:
old  < vscanf$5:>
new  <>

4144:
old  <	; PostCall 40>
new  < scanFormat$260:>

4145:
old  <>
new  <	; PopFloat Â£temporary1427 -> floatPtr>

4146:
old  < vscanf$6:>
new  <	fstp dword [rsi]>

4147:
old  <	; GetReturnValue Â£temporary1448>
new  <>

4148:
old  <>
new  < scanFormat$261:>

4149:
old  < vscanf$7:>
new  <	; Assign percent 0>

4150:
old  <	; Return Â£temporary1448>
new  <	mov dword [rbp + 49], 0>

4151:
old  <	mov rax, [rbp]>
new  <>

4152:
old  <	mov rdi, [rbp + 16]>
new  < scanFormat$262:>

4153:
old  <	mov rbp, [rbp + 8]>
new  <	; Goto 331>

4154:
old  <	jmp rax>
new  <	jmp scanFormat$331>

4156:
old  < vscanf$8:>
new  < scanFormat$263:>

4157:
old  <	; FunctionEnd vscanf>
new  <	; Assign not 0>

4158:
old  <>
new  <	mov dword [rbp + 157], 0>

4159:
old  <section .text>
new  <>

4160:
old  <>
new  < scanFormat$264:>

4161:
old  < fscanf:>
new  <	; BinaryAdd index index 1>

4162:
old  <	; Address Â£temporary1449 format>
new  <	inc dword [rbp + 93]>

4163:
old  <	mov rsi, rbp>
new  <>

4164:
old  <	add rsi, 32>
new  < scanFormat$265:>

4165:
old  <>
new  <	; IntegralToIntegral Â£temporary1433 index>

4166:
old  < fscanf$1:>
new  <	mov eax, [rbp + 93]>

4167:
old  <	; IntegralToIntegral Â£temporary1450 Â£temporary1449>
new  <	mov rbx, 4294967295>

4168:
old  <>
new  <	and rax, rbx>

4169:
old  < fscanf$2:>
new  <>

4170:
old  <	; BinaryAdd arg_list Â£temporary1450 8>
new  < scanFormat$266:>

4171:
old  <	add rsi, 8>
new  <	; BinaryAdd Â£temporary1435 format Â£temporary1433>

4172:
old  <	mov [rdi + 40], rsi>
new  <	mov rsi, [rbp + 24]>

4173:
old  <>
new  <	add rsi, rax>

4174:
old  < fscanf$3:>
new  <>

4175:
old  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < scanFormat$267:>

4176:
old  <>
new  <	; Dereference Â£temporary1432 -> Â£temporary1435 Â£temporary1435 0>

4177:
old  < fscanf$4:>
new  <>

4178:
old  <	; Parameter pointer inStream 72>
new  < scanFormat$268:>

4179:
old  <	mov rax, [rbp + 24]>
new  <	; NotEqual 271 Â£temporary1432 -> Â£temporary1435 94>

4180:
old  <	mov [rdi + 72], rax>
new  <	cmp byte [rsi], 94>

4181:
old  <>
new  <	jne scanFormat$271>

4182:
old  < fscanf$5:>
new  <>

4183:
old  <	; Parameter pointer format 80>
new  < scanFormat$269:>

4184:
old  <	mov rax, [rbp + 32]>
new  <	; Assign not 1>

4185:
old  <	mov [rdi + 80], rax>
new  <	mov dword [rbp + 157], 1>

4187:
old  < fscanf$6:>
new  < scanFormat$270:>

4188:
old  <	; Parameter pointer arg_list 88>
new  <	; BinaryAdd startIndex index 1>

4189:
old  <	mov rax, [rdi + 40]>
new  <	mov eax, [rbp + 93]>

4190:
old  <	mov [rdi + 88], rax>
new  <	inc eax>

4191:
old  <>
new  <	mov [rbp + 161], eax>

4192:
old  < fscanf$7:>
new  <>

4193:
old  <	; Call vfscanf 48 0>
new  < scanFormat$271:>

4194:
old  <	mov qword [rdi + 48], fscanf$8>
new  <	; IntegralToIntegral Â£temporary1439 index>

4195:
old  <	mov [rdi + 56], rbp>
new  <	mov eax, [rbp + 93]>

4196:
old  <	mov [rdi + 64], rdi>
new  <	mov rbx, 4294967295>

4197:
old  <	add rdi, 48>
new  <	and rax, rbx>

4198:
old  <	mov rbp, rdi>
new  <>

4199:
old  <	jmp vfscanf>
new  < scanFormat$272:>

4200:
old  <>
new  <	; BinaryAdd Â£temporary1441 format Â£temporary1439>

4201:
old  < fscanf$8:>
new  <	mov rsi, [rbp + 24]>

4202:
old  <	; PostCall 48>
new  <	add rsi, rax>

4204:
old  < fscanf$9:>
new  < scanFormat$273:>

4205:
old  <	; GetReturnValue Â£temporary1453>
new  <	; Dereference Â£temporary1438 -> Â£temporary1441 Â£temporary1441 0>

4207:
old  < fscanf$10:>
new  < scanFormat$274:>

4208:
old  <	; Return Â£temporary1453>
new  <	; Equal 277 Â£temporary1438 -> Â£temporary1441 93>

4209:
old  <	mov rax, [rbp]>
new  <	cmp byte [rsi], 93>

4210:
old  <	mov rdi, [rbp + 16]>
new  <	je scanFormat$277>

4211:
old  <	mov rbp, [rbp + 8]>
new  <>

4212:
old  <	jmp rax>
new  < scanFormat$275:>

4213:
old  <>
new  <	; BinaryAdd index index 1>

4214:
old  < fscanf$11:>
new  <	inc dword [rbp + 93]>

4215:
old  <	; FunctionEnd fscanf>
new  <>

4216:
old  <>
new  < scanFormat$276:>

4217:
old  <section .text>
new  <	; Goto 271>

4218:
old  <>
new  <	jmp scanFormat$271>

4219:
old  < vfscanf:>
new  <>

4220:
old  <	; Assign g_inStatus 0>
new  < scanFormat$277:>

4221:
old  <	mov dword [g_inStatus], 0>
new  <	; IntegralToIntegral Â£temporary1445 index>

4222:
old  <>
new  <	mov eax, [rbp + 93]>

4223:
old  < vfscanf$1:>
new  <	mov rbx, 4294967295>

4224:
old  <	; IntegralToIntegral Â£temporary1455 inStream>
new  <	and rax, rbx>

4225:
old  <	mov rax, [rbp + 24]>
new  <>

4226:
old  <>
new  < scanFormat$278:>

4227:
old  < vfscanf$2:>
new  <	; BinaryAdd Â£temporary1447 format Â£temporary1445>

4228:
old  <	; Assign g_inDevice Â£temporary1455>
new  <	mov rsi, [rbp + 24]>

4229:
old  <	mov [g_inDevice], rax>
new  <	add rsi, rax>

4231:
old  < vfscanf$3:>
new  < scanFormat$279:>

4232:
old  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Dereference Â£temporary1444 -> Â£temporary1447 Â£temporary1447 0>

4234:
old  < vfscanf$4:>
new  < scanFormat$280:>

4235:
old  <	; Parameter pointer format 72>
new  <	; Assign Â£temporary1444 -> Â£temporary1447 0>

4236:
old  <	mov rax, [rbp + 32]>
new  <	mov byte [rsi], 0>

4237:
old  <	mov [rbp + 72], rax>
new  <>

4238:
old  <>
new  < scanFormat$281:>

4239:
old  < vfscanf$5:>
new  <	; NotEqual 298 star 0>

4240:
old  <	; Parameter pointer arg_list 80>
new  <	cmp dword [rbp + 65], 0>

4241:
old  <	mov rax, [rbp + 40]>
new  <	jne scanFormat$298>

4242:
old  <	mov [rbp + 80], rax>
new  <>

4243:
old  <>
new  < scanFormat$282:>

4244:
old  < vfscanf$6:>
new  <	; BinaryAdd arg_list arg_list 8>

4245:
old  <	; Call scanFormat 48 0>
new  <	add qword [rbp + 32], 8>

4246:
old  <	mov qword [rbp + 48], vfscanf$7>
new  <>

4247:
old  <	mov [rbp + 56], rbp>
new  < scanFormat$283:>

4248:
old  <	add rbp, 48>
new  <	; BinarySubtract Â£temporary1452 arg_list 8>

4249:
old  <	jmp scanFormat>
new  <	mov rsi, [rbp + 32]>

4250:
old  <>
new  <	sub rsi, 8>

4251:
old  < vfscanf$7:>
new  <>

4252:
old  <	; PostCall 48>
new  < scanFormat$284:>

4253:
old  <>
new  <	; IntegralToIntegral Â£temporary1454 Â£temporary1452>

4254:
old  < vfscanf$8:>
new  <>

4255:
old  <	; GetReturnValue Â£temporary1456>
new  < scanFormat$285:>

4256:
old  <>
new  <	; Dereference Â£temporary1455 -> Â£temporary1454 Â£temporary1454 0>

4257:
old  < vfscanf$9:>
new  <>

4258:
old  <	; Return Â£temporary1456>
new  < scanFormat$286:>

4259:
old  <	mov rax, [rbp]>
new  <	; Assign string Â£temporary1455 -> Â£temporary1454>

4260:
old  <	mov rdi, [rbp + 16]>
new  <	mov rax, [rsi]>

4261:
old  <	mov rbp, [rbp + 8]>
new  <	mov [rbp + 165], rax>

4262:
old  <	jmp rax>
new  <>

4263:
old  <>
new  < scanFormat$287:>

4264:
old  < vfscanf$10:>
new  <	; PreCall 173 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

4265:
old  <	; FunctionEnd vfscanf>
new  <>

4266:
old  <>
new  < scanFormat$288:>

4267:
old  <section .text>
new  <	; Parameter pointer string 197>

4268:
old  <>
new  <	mov rax, [rbp + 165]>

4269:
old  < sscanf:>
new  <	mov [rbp + 197], rax>

4270:
old  <	; Address Â£temporary1457 format>
new  <>

4271:
old  <	mov rsi, rbp>
new  < scanFormat$289:>

4272:
old  <	add rsi, 32>
new  <	; IntegralToIntegral Â£temporary1457 startIndex>

4273:
old  <>
new  <	mov eax, [rbp + 161]>

4274:
old  < sscanf$1:>
new  <	mov rbx, 4294967295>

4275:
old  <	; IntegralToIntegral Â£temporary1458 Â£temporary1457>
new  <	and rax, rbx>

4277:
old  < sscanf$2:>
new  < scanFormat$290:>

4278:
old  <	; BinaryAdd arg_list Â£temporary1458 8>
new  <	; BinaryAdd Â£temporary1459 format Â£temporary1457>

4279:
old  <	add rsi, 8>
new  <	mov rsi, [rbp + 24]>

4280:
old  <	mov [rdi + 40], rsi>
new  <	add rsi, rax>

4282:
old  < sscanf$3:>
new  < scanFormat$291:>

4283:
old  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Dereference Â£temporary1456 -> Â£temporary1459 Â£temporary1459 0>

4285:
old  < sscanf$4:>
new  < scanFormat$292:>

4286:
old  <	; Parameter pointer inString 72>
new  <	; Address Â£temporary1460 Â£temporary1456 -> Â£temporary1459>

4287:
old  <	mov rax, [rbp + 24]>
new  <>

4288:
old  <	mov [rdi + 72], rax>
new  < scanFormat$293:>

4289:
old  <>
new  <	; Parameter pointer Â£temporary1460 205>

4290:
old  < sscanf$5:>
new  <	mov [rbp + 205], rsi>

4291:
old  <	; Parameter pointer format 80>
new  <>

4292:
old  <	mov rax, [rbp + 32]>
new  < scanFormat$294:>

4293:
old  <	mov [rdi + 80], rax>
new  <	; Parameter signedint not 213>

4294:
old  <>
new  <	mov eax, [rbp + 157]>

4295:
old  < sscanf$6:>
new  <	mov [rbp + 213], eax>

4296:
old  <	; Parameter pointer arg_list 88>
new  <>

4297:
old  <	mov rax, [rdi + 40]>
new  < scanFormat$295:>

4298:
old  <	mov [rdi + 88], rax>
new  <	; Call scanPattern 173 0>

4299:
old  <>
new  <	mov qword [rbp + 173], scanFormat$296>

4300:
old  < sscanf$7:>
new  <	mov [rbp + 181], rbp>

4301:
old  <	; Call vsscanf 48 0>
new  <	add rbp, 173>

4302:
old  <	mov qword [rdi + 48], sscanf$8>
new  <	jmp scanPattern>

4303:
old  <	mov [rdi + 56], rbp>
new  <>

4304:
old  <	mov [rdi + 64], rdi>
new  < scanFormat$296:>

4305:
old  <	add rdi, 48>
new  <	; PostCall 173>

4306:
old  <	mov rbp, rdi>
new  <>

4307:
old  <	jmp vsscanf>
new  < scanFormat$297:>

4308:
old  <>
new  <	; Goto 331>

4309:
old  < sscanf$8:>
new  <	jmp scanFormat$331>

4310:
old  <	; PostCall 48>
new  <>

4311:
old  <>
new  < scanFormat$298:>

4312:
old  < sscanf$9:>
new  <	; PreCall 165 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

4313:
old  <	; GetReturnValue Â£temporary1461>
new  <>

4314:
old  <>
new  < scanFormat$299:>

4315:
old  < sscanf$10:>
new  <	; Parameter pointer 0 189>

4316:
old  <	; Return Â£temporary1461>
new  <	mov qword [rbp + 189], 0>

4317:
old  <	mov rax, [rbp]>
new  <>

4318:
old  <	mov rdi, [rbp + 16]>
new  < scanFormat$300:>

4319:
old  <	mov rbp, [rbp + 8]>
new  <	; IntegralToIntegral Â£temporary1463 startIndex>

4320:
old  <	jmp rax>
new  <	mov eax, [rbp + 161]>

4321:
old  <>
new  <	mov rbx, 4294967295>

4322:
old  < sscanf$11:>
new  <	and rax, rbx>

4323:
old  <	; FunctionEnd sscanf>
new  <>

4324:
old  <>
new  < scanFormat$301:>

4325:
old  <section .text>
new  <	; BinaryAdd Â£temporary1465 format Â£temporary1463>

4326:
old  <>
new  <	mov rsi, [rbp + 24]>

4327:
old  < vsscanf:>
new  <	add rsi, rax>

4328:
old  <	; Assign g_inStatus 1>
new  <>

4329:
old  <	mov dword [g_inStatus], 1>
new  < scanFormat$302:>

4330:
old  <>
new  <	; Dereference Â£temporary1462 -> Â£temporary1465 Â£temporary1465 0>

4331:
old  < vsscanf$1:>
new  <>

4332:
old  <	; IntegralToIntegral Â£temporary1463 inString>
new  < scanFormat$303:>

4333:
old  <	mov rax, [rbp + 24]>
new  <	; Address Â£temporary1466 Â£temporary1462 -> Â£temporary1465>

4335:
old  < vsscanf$2:>
new  < scanFormat$304:>

4336:
old  <	; Assign g_inDevice Â£temporary1463>
new  <	; Parameter pointer Â£temporary1466 197>

4337:
old  <	mov [g_inDevice], rax>
new  <	mov [rbp + 197], rsi>

4339:
old  < vsscanf$3:>
new  < scanFormat$305:>

4340:
old  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter signedint not 205>

4341:
old  <>
new  <	mov eax, [rbp + 157]>

4342:
old  < vsscanf$4:>
new  <	mov [rbp + 205], eax>

4343:
old  <	; Parameter pointer format 72>
new  <>

4344:
old  <	mov rax, [rbp + 32]>
new  < scanFormat$306:>

4345:
old  <	mov [rbp + 72], rax>
new  <	; Call scanPattern 165 0>

4346:
old  <>
new  <	mov qword [rbp + 165], scanFormat$307>

4347:
old  < vsscanf$5:>
new  <	mov [rbp + 173], rbp>

4348:
old  <	; Parameter pointer arg_list 80>
new  <	add rbp, 165>

4349:
old  <	mov rax, [rbp + 40]>
new  <	jmp scanPattern>

4350:
old  <	mov [rbp + 80], rax>
new  <>

4351:
old  <>
new  < scanFormat$307:>

4352:
old  < vsscanf$6:>
new  <	; PostCall 165>

4353:
old  <	; Call scanFormat 48 0>
new  <>

4354:
old  <	mov qword [rbp + 48], vsscanf$7>
new  < scanFormat$308:>

4355:
old  <	mov [rbp + 56], rbp>
new  <	; Goto 331>

4356:
old  <	add rbp, 48>
new  <	jmp scanFormat$331>

4357:
old  <	jmp scanFormat>
new  <>

4358:
old  <>
new  < scanFormat$309:>

4359:
old  < vsscanf$7:>
new  <	; BinaryAdd arg_list arg_list 8>

4360:
old  <	; PostCall 48>
new  <	add qword [rbp + 32], 8>

4362:
old  < vsscanf$8:>
new  < scanFormat$310:>

4363:
old  <	; GetReturnValue Â£temporary1464>
new  <	; BinarySubtract Â£temporary1470 arg_list 8>

4364:
old  <>
new  <	mov rsi, [rbp + 32]>

4365:
old  < vsscanf$9:>
new  <	sub rsi, 8>

4366:
old  <	; Return Â£temporary1464>
new  <>

4367:
old  <	mov rax, [rbp]>
new  < scanFormat$311:>

4368:
old  <	mov rdi, [rbp + 16]>
new  <	; IntegralToIntegral Â£temporary1472 Â£temporary1470>

4369:
old  <	mov rbp, [rbp + 8]>
new  <>

4370:
old  <	jmp rax>
new  < scanFormat$312:>

4371:
old  <>
new  <	; Dereference Â£temporary1473 -> Â£temporary1472 Â£temporary1472 0>

4372:
old  < vsscanf$10:>
new  <>

4373:
old  <	; FunctionEnd vsscanf>
new  < scanFormat$313:>

63:
old  <	; IntegralToIntegral Â£temporary1465 stream>
new  <	; IntegralToIntegral Â£temporary1502 stream>

67:
old  <	; Assign g_outDevice Â£temporary1465>
new  <	; Assign g_outDevice Â£temporary1502>

74:
old  <	; IntegralToIntegral Â£temporary1466 i>
new  <	; IntegralToIntegral Â£temporary1503 i>

82:
old  <	; Parameter signedchar Â£temporary1466 60>
new  <	; Parameter signedchar Â£temporary1503 60>

113:
old  <	; IntegralToIntegral Â£temporary1468 stream>
new  <	; IntegralToIntegral Â£temporary1505 stream>

117:
old  <	; Assign g_outDevice Â£temporary1468>
new  <	; Assign g_outDevice Â£temporary1505>

124:
old  <	; IntegralToIntegral Â£temporary1469 i>
new  <	; IntegralToIntegral Â£temporary1506 i>

132:
old  <	; Parameter signedchar Â£temporary1469 60>
new  <	; Parameter signedchar Â£temporary1506 60>

163:
old  <	; IntegralToIntegral Â£temporary1471 stdout>
new  <	; IntegralToIntegral Â£temporary1508 stdout>

167:
old  <	; Assign g_outDevice Â£temporary1471>
new  <	; Assign g_outDevice Â£temporary1508>

174:
old  <	; IntegralToIntegral Â£temporary1472 i>
new  <	; IntegralToIntegral Â£temporary1509 i>

182:
old  <	; Parameter signedchar Â£temporary1472 52>
new  <	; Parameter signedchar Â£temporary1509 52>

232:
old  <	; IntegralToIntegral Â£temporary1474 g_outDevice>
new  <	; IntegralToIntegral Â£temporary1511 g_outDevice>

236:
old  <	; Assign stream Â£temporary1474>
new  <	; Assign stream Â£temporary1511>

244:
old  <	; Dereference Â£temporary1477 -> stream stream 0>
new  <	; Dereference Â£temporary1514 -> stream stream 0>

248:
old  <	; IntegralToIntegral Â£temporary1478 Â£temporary1477 -> stream>
new  <	; IntegralToIntegral Â£temporary1515 Â£temporary1514 -> stream>

254:
old  <	; AssignRegister rdi Â£temporary1478>
new  <	; AssignRegister rdi Â£temporary1515>

257:
old  <	; Address Â£temporary1480 c>
new  <	; Address Â£temporary1517 c>

262:
old  <	; IntegralToIntegral Â£temporary1481 Â£temporary1480>
new  <	; IntegralToIntegral Â£temporary1518 Â£temporary1517>

265:
old  <	; AssignRegister rsi Â£temporary1481>
new  <	; AssignRegister rsi Â£temporary1518>

284:
old  <	; IntegralToIntegral Â£temporary1484 g_outDevice>
new  <	; IntegralToIntegral Â£temporary1521 g_outDevice>

288:
old  <	; Assign outString Â£temporary1484>
new  <	; Assign outString Â£temporary1521>

292:
old  <	; Assign Â£temporary1485 g_outChars>
new  <	; Assign Â£temporary1522 g_outChars>

300:
old  <	; IntegralToIntegral Â£temporary1487 Â£temporary1485>
new  <	; IntegralToIntegral Â£temporary1524 Â£temporary1522>

305:
old  <	; BinaryAdd Â£temporary1489 outString Â£temporary1487>
new  <	; BinaryAdd Â£temporary1526 outString Â£temporary1524>

310:
old  <	; Dereference Â£temporary1486 -> Â£temporary1489 Â£temporary1489 0>
new  <	; Dereference Â£temporary1523 -> Â£temporary1526 Â£temporary1526 0>

313:
old  <	; Assign Â£temporary1486 -> Â£temporary1489 c>
new  <	; Assign Â£temporary1523 -> Â£temporary1526 c>

352:
old  <	; IntegralToIntegral Â£temporary1495 index>
new  <	; IntegralToIntegral Â£temporary1532 index>

358:
old  <	; BinaryAdd Â£temporary1497 s Â£temporary1495>
new  <	; BinaryAdd Â£temporary1534 s Â£temporary1532>

363:
old  <	; Dereference Â£temporary1494 -> Â£temporary1497 Â£temporary1497 0>
new  <	; Dereference Â£temporary1531 -> Â£temporary1534 Â£temporary1534 0>

366:
old  <	; Equal 57 Â£temporary1494 -> Â£temporary1497 0>
new  <	; Equal 57 Â£temporary1531 -> Â£temporary1534 0>

374:
old  <	; IntegralToIntegral Â£temporary1501 index>
new  <	; IntegralToIntegral Â£temporary1538 index>

380:
old  <	; BinaryAdd Â£temporary1503 s Â£temporary1501>
new  <	; BinaryAdd Â£temporary1540 s Â£temporary1538>

385:
old  <	; Dereference Â£temporary1500 -> Â£temporary1503 Â£temporary1503 0>
new  <	; Dereference Â£temporary1537 -> Â£temporary1540 Â£temporary1540 0>

388:
old  <	; Parameter signedchar Â£temporary1500 -> Â£temporary1503 64>
new  <	; Parameter signedchar Â£temporary1537 -> Â£temporary1540 64>

415:
old  <	; Assign Â£temporary1505 precision>
new  <	; Assign Â£temporary1542 precision>

423:
old  <	; SignedLessThanEqual 57 Â£temporary1505 0>
new  <	; SignedLessThanEqual 57 Â£temporary1542 0>

428:
old  <	; IntegralToIntegral Â£temporary1508 index>
new  <	; IntegralToIntegral Â£temporary1545 index>

434:
old  <	; BinaryAdd Â£temporary1510 s Â£temporary1508>
new  <	; BinaryAdd Â£temporary1547 s Â£temporary1545>

439:
old  <	; Dereference Â£temporary1507 -> Â£temporary1510 Â£temporary1510 0>
new  <	; Dereference Â£temporary1544 -> Â£temporary1547 Â£temporary1547 0>

442:
old  <	; Equal 57 Â£temporary1507 -> Â£temporary1510 0>
new  <	; Equal 57 Â£temporary1544 -> Â£temporary1547 0>

450:
old  <	; IntegralToIntegral Â£temporary1515 index>
new  <	; IntegralToIntegral Â£temporary1552 index>

456:
old  <	; BinaryAdd Â£temporary1517 s Â£temporary1515>
new  <	; BinaryAdd Â£temporary1554 s Â£temporary1552>

461:
old  <	; Dereference Â£temporary1514 -> Â£temporary1517 Â£temporary1517 0>
new  <	; Dereference Â£temporary1551 -> Â£temporary1554 Â£temporary1554 0>

464:
old  <	; Parameter signedchar Â£temporary1514 -> Â£temporary1517 64>
new  <	; Parameter signedchar Â£temporary1551 -> Â£temporary1554 64>

612:
old  <	; SignedModulo Â£temporary1526 longValue 10>
new  <	; SignedModulo Â£temporary1563 longValue 10>

618:
old  <	; IntegralToIntegral Â£temporary1527 Â£temporary1526>
new  <	; IntegralToIntegral Â£temporary1564 Â£temporary1563>

625:
old  <	; Assign digit Â£temporary1527>
new  <	; Assign digit Â£temporary1564>

632:
old  <	; SignedDivide Â£temporary1528 longValue 10>
new  <	; SignedDivide Â£temporary1565 longValue 10>

638:
old  <	; Parameter signed long int Â£temporary1528 60>
new  <	; Parameter signed long int Â£temporary1565 60>

655:
old  <	; BinaryAdd Â£temporary1530 digit 48>
new  <	; BinaryAdd Â£temporary1567 digit 48>

660:
old  <	; IntegralToIntegral Â£temporary1531 Â£temporary1530>
new  <	; IntegralToIntegral Â£temporary1568 Â£temporary1567>

667:
old  <	; Parameter signedchar Â£temporary1531 60>
new  <	; Parameter signedchar Â£temporary1568 60>

698:
old  <	; UnarySubtract Â£temporary1534 longValue>
new  <	; UnarySubtract Â£temporary1571 longValue>

703:
old  <	; Assign longValue Â£temporary1534>
new  <	; Assign longValue Â£temporary1571>

837:
old  <	; BinaryAdd Â£temporary1544 digit 48>
new  <	; BinaryAdd Â£temporary1581 digit 48>

842:
old  <	; IntegralToIntegral Â£temporary1545 Â£temporary1544>
new  <	; IntegralToIntegral Â£temporary1582 Â£temporary1581>

849:
old  <	; Return Â£temporary1545>
new  <	; Return Â£temporary1582>

861:
old  <	; BinarySubtract Â£temporary1546 digit 10>
new  <	; BinarySubtract Â£temporary1583 digit 10>

866:
old  <	; BinaryAdd Â£temporary1547 Â£temporary1546 65>
new  <	; BinaryAdd Â£temporary1584 Â£temporary1583 65>

870:
old  <	; IntegralToIntegral Â£temporary1548 Â£temporary1547>
new  <	; IntegralToIntegral Â£temporary1585 Â£temporary1584>

877:
old  <	; Return Â£temporary1548>
new  <	; Return Â£temporary1585>

884:
old  <	; BinarySubtract Â£temporary1549 digit 10>
new  <	; BinarySubtract Â£temporary1586 digit 10>

889:
old  <	; BinaryAdd Â£temporary1550 Â£temporary1549 97>
new  <	; BinaryAdd Â£temporary1587 Â£temporary1586 97>

893:
old  <	; IntegralToIntegral Â£temporary1551 Â£temporary1550>
new  <	; IntegralToIntegral Â£temporary1588 Â£temporary1587>

900:
old  <	; Return Â£temporary1551>
new  <	; Return Â£temporary1588>

917:
old  <	; UnsignedModulo Â£temporary1554 unsignedValue base>
new  <	; UnsignedModulo Â£temporary1591 unsignedValue base>

923:
old  <	; IntegralToIntegral Â£temporary1555 Â£temporary1554>
new  <	; IntegralToIntegral Â£temporary1592 Â£temporary1591>

926:
old  <	; Assign digit Â£temporary1555>
new  <	; Assign digit Â£temporary1592>

933:
old  <	; UnsignedDivide Â£temporary1556 unsignedValue base>
new  <	; UnsignedDivide Â£temporary1593 unsignedValue base>

939:
old  <	; Parameter unsignedlongint Â£temporary1556 72>
new  <	; Parameter unsignedlongint Â£temporary1593 72>

986:
old  <	; GetReturnValue Â£temporary1558>
new  <	; GetReturnValue Â£temporary1595>

989:
old  <	; Assign c Â£temporary1558>
new  <	; Assign c Â£temporary1595>

1124:
old  <	; Assign Â£temporary1569 88>
new  <	; Assign Â£temporary1606 88>

1132:
old  <	; Assign Â£temporary1569 120>
new  <	; Assign Â£temporary1606 120>

1136:
old  <	; Parameter signedchar Â£temporary1569 80>
new  <	; Parameter signedchar Â£temporary1606 80>

1242:
old  <	; FloatingToIntegral Â£temporary1575 longDoubleValue>
new  <	; FloatingToIntegral Â£temporary1612 longDoubleValue>

1247:
old  <	; IntegralToFloating Â£temporary1576 Â£temporary1575>
new  <	; IntegralToFloating Â£temporary1613 Â£temporary1612>

1252:
old  <	; BinarySubtract Â£temporary1577 longDoubleValue Â£temporary1576>
new  <	; BinarySubtract Â£temporary1614 longDoubleValue Â£temporary1613>

1296:
old  <	; Assign Â£temporary1583 precision>
new  <	; Assign Â£temporary1620 precision>

1304:
old  <	; SignedLessThanEqual 35 Â£temporary1583 0>
new  <	; SignedLessThanEqual 35 Â£temporary1620 0>

1317:
old  <	; SignedMultiply Â£temporary1585 10.0 longDoubleValue>
new  <	; SignedMultiply Â£temporary1622 10.0 longDoubleValue>

1329:
old  <	; FloatingToIntegral Â£temporary1586 longDoubleValue10>
new  <	; FloatingToIntegral Â£temporary1623 longDoubleValue10>

1334:
old  <	; Assign digitValue Â£temporary1586>
new  <	; Assign digitValue Â£temporary1623>

1341:
old  <	; BinaryAdd Â£temporary1587 digitValue 48>
new  <	; BinaryAdd Â£temporary1624 digitValue 48>

1346:
old  <	; IntegralToIntegral Â£temporary1588 Â£temporary1587>
new  <	; IntegralToIntegral Â£temporary1625 Â£temporary1624>

1353:
old  <	; Parameter signedchar Â£temporary1588 76>
new  <	; Parameter signedchar Â£temporary1625 76>

1371:
old  <	; IntegralToFloating Â£temporary1590 digitValue>
new  <	; IntegralToFloating Â£temporary1627 digitValue>

1375:
old  <	; BinarySubtract Â£temporary1591 longDoubleValue10 Â£temporary1590>
new  <	; BinarySubtract Â£temporary1628 longDoubleValue10 Â£temporary1627>

1435:
old  <	; UnarySubtract Â£temporary1594 longDoubleValue>
new  <	; UnarySubtract Â£temporary1631 longDoubleValue>

1455:
old  <	; FloatingToIntegral Â£temporary1595 longDoubleValue>
new  <	; FloatingToIntegral Â£temporary1632 longDoubleValue>

1460:
old  <	; Assign longValue Â£temporary1595>
new  <	; Assign longValue Â£temporary1632>

1496:
old  <	; IntegralToFloating Â£temporary1597 longValue>
new  <	; IntegralToFloating Â£temporary1634 longValue>

1500:
old  <	; BinarySubtract Â£temporary1598 longDoubleValue Â£temporary1597>
new  <	; BinarySubtract Â£temporary1635 longDoubleValue Â£temporary1634>

1622:
old  <	; Assign Â£temporary1605 69>
new  <	; Assign Â£temporary1642 69>

1630:
old  <	; Assign Â£temporary1605 101>
new  <	; Assign Â£temporary1642 101>

1634:
old  <	; Parameter signedchar Â£temporary1605 76>
new  <	; Parameter signedchar Â£temporary1642 76>

1705:
old  <	; UnarySubtract Â£temporary1610 value>
new  <	; UnarySubtract Â£temporary1647 value>

1734:
old  <	; GetReturnValue Â£temporary1611>
new  <	; GetReturnValue Â£temporary1648>

1737:
old  <	; FloatingToIntegral Â£temporary1612 Â£temporary1611>
new  <	; FloatingToIntegral Â£temporary1649 Â£temporary1648>

1742:
old  <	; Assign expo Â£temporary1612>
new  <	; Assign expo Â£temporary1649>

1762:
old  <	; IntegralToFloating Â£temporary1613 expo>
new  <	; IntegralToFloating Â£temporary1650 expo>

1766:
old  <	; Parameter double Â£temporary1613 88>
new  <	; Parameter double Â£temporary1650 88>

1783:
old  <	; GetReturnValue Â£temporary1614>
new  <	; GetReturnValue Â£temporary1651>

1786:
old  <	; SignedDivide Â£temporary1615 value Â£temporary1614>
new  <	; SignedDivide Â£temporary1652 value Â£temporary1651>

1843:
old  <	; Assign Â£temporary1618 69>
new  <	; Assign Â£temporary1655 69>

1851:
old  <	; Assign Â£temporary1618 101>
new  <	; Assign Â£temporary1655 101>

1855:
old  <	; Parameter signedchar Â£temporary1618 80>
new  <	; Parameter signedchar Â£temporary1655 80>

1872:
old  <	; IntegralToIntegral Â£temporary1620 expo>
new  <	; IntegralToIntegral Â£temporary1657 expo>

1882:
old  <	; Parameter signed long int Â£temporary1620 80>
new  <	; Parameter signed long int Â£temporary1657 80>

1921:
old  <	; Dereference Â£temporary1628 -> widthPtr widthPtr 0>
new  <	; Dereference Â£temporary1665 -> widthPtr widthPtr 0>

1925:
old  <	; NotEqual 9 Â£temporary1628 -> widthPtr -1>
new  <	; NotEqual 9 Â£temporary1665 -> widthPtr -1>

1930:
old  <	; Dereference Â£temporary1631 -> widthPtr widthPtr 0>
new  <	; Dereference Â£temporary1668 -> widthPtr widthPtr 0>

1938:
old  <	; BinarySubtract Â£temporary1634 arg_list 4>
new  <	; BinarySubtract Â£temporary1671 arg_list 4>

1943:
old  <	; IntegralToIntegral Â£temporary1636 Â£temporary1634>
new  <	; IntegralToIntegral Â£temporary1673 Â£temporary1671>

1946:
old  <	; Dereference Â£temporary1637 -> Â£temporary1636 Â£temporary1636 0>
new  <	; Dereference Â£temporary1674 -> Â£temporary1673 Â£temporary1673 0>

1949:
old  <	; Assign Â£temporary1631 -> widthPtr Â£temporary1637 -> Â£temporary1636>
new  <	; Assign Â£temporary1668 -> widthPtr Â£temporary1674 -> Â£temporary1673>

1959:
old  <	; Dereference Â£temporary1639 -> precisionPtr precisionPtr 0>
new  <	; Dereference Â£temporary1676 -> precisionPtr precisionPtr 0>

1963:
old  <	; NotEqual 18 Â£temporary1639 -> precisionPtr -1>
new  <	; NotEqual 18 Â£temporary1676 -> precisionPtr -1>

1968:
old  <	; Dereference Â£temporary1642 -> precisionPtr precisionPtr 0>
new  <	; Dereference Â£temporary1679 -> precisionPtr precisionPtr 0>

1976:
old  <	; BinarySubtract Â£temporary1645 arg_list 4>
new  <	; BinarySubtract Â£temporary1682 arg_list 4>

1981:
old  <	; IntegralToIntegral Â£temporary1647 Â£temporary1645>
new  <	; IntegralToIntegral Â£temporary1684 Â£temporary1682>

1984:
old  <	; Dereference Â£temporary1648 -> Â£temporary1647 Â£temporary1647 0>
new  <	; Dereference Â£temporary1685 -> Â£temporary1684 Â£temporary1684 0>

1987:
old  <	; Assign Â£temporary1642 -> precisionPtr Â£temporary1648 -> Â£temporary1647>
new  <	; Assign Â£temporary1679 -> precisionPtr Â£temporary1685 -> Â£temporary1684>

2005:
old  <	; Dereference Â£temporary1649 -> format format 0>
new  <	; Dereference Â£temporary1686 -> format format 0>

2009:
old  <	; Assign c Â£temporary1649 -> format>
new  <	; Assign c Â£temporary1686 -> format>

2116:
old  <	; BinarySubtract Â£temporary1652 arg_list 4>
new  <	; BinarySubtract Â£temporary1689 arg_list 4>

2121:
old  <	; IntegralToIntegral Â£temporary1654 Â£temporary1652>
new  <	; IntegralToIntegral Â£temporary1691 Â£temporary1689>

2124:
old  <	; Dereference Â£temporary1655 -> Â£temporary1654 Â£temporary1654 0>
new  <	; Dereference Â£temporary1692 -> Â£temporary1691 Â£temporary1691 0>

2127:
old  <	; IntegralToIntegral Â£temporary1656 Â£temporary1655 -> Â£temporary1654>
new  <	; IntegralToIntegral Â£temporary1693 Â£temporary1692 -> Â£temporary1691>

2135:
old  <	; IntegralToIntegral Â£temporary1657 Â£temporary1656>
new  <	; IntegralToIntegral Â£temporary1694 Â£temporary1693>

2144:
old  <	; Assign longValue Â£temporary1657>
new  <	; Assign longValue Â£temporary1694>

2161:
old  <	; BinarySubtract Â£temporary1660 arg_list 8>
new  <	; BinarySubtract Â£temporary1697 arg_list 8>

2166:
old  <	; IntegralToIntegral Â£temporary1662 Â£temporary1660>
new  <	; IntegralToIntegral Â£temporary1699 Â£temporary1697>

2169:
old  <	; Dereference Â£temporary1663 -> Â£temporary1662 Â£temporary1662 0>
new  <	; Dereference Â£temporary1700 -> Â£temporary1699 Â£temporary1699 0>

2172:
old  <	; Assign longValue Â£temporary1663 -> Â£temporary1662>
new  <	; Assign longValue Â£temporary1700 -> Â£temporary1699>

2185:
old  <	; BinarySubtract Â£temporary1666 arg_list 4>
new  <	; BinarySubtract Â£temporary1703 arg_list 4>

2190:
old  <	; IntegralToIntegral Â£temporary1668 Â£temporary1666>
new  <	; IntegralToIntegral Â£temporary1705 Â£temporary1703>

2193:
old  <	; Dereference Â£temporary1669 -> Â£temporary1668 Â£temporary1668 0>
new  <	; Dereference Â£temporary1706 -> Â£temporary1705 Â£temporary1705 0>

2196:
old  <	; IntegralToIntegral Â£temporary1670 Â£temporary1669 -> Â£temporary1668>
new  <	; IntegralToIntegral Â£temporary1707 Â£temporary1706 -> Â£temporary1705>

2206:
old  <	; Assign longValue Â£temporary1670>
new  <	; Assign longValue Â£temporary1707>

2215:
old  <	; Dereference Â£temporary1674 -> negativePtr negativePtr 0>
new  <	; Dereference Â£temporary1711 -> negativePtr negativePtr 0>

2224:
old  <	; Assign Â£temporary1676 1>
new  <	; Assign Â£temporary1713 1>

2232:
old  <	; Assign Â£temporary1676 0>
new  <	; Assign Â£temporary1713 0>

2236:
old  <	; Assign Â£temporary1674 -> negativePtr Â£temporary1676>
new  <	; Assign Â£temporary1711 -> negativePtr Â£temporary1713>

2263:
old  <	; GetReturnValue Â£temporary1679>
new  <	; GetReturnValue Â£temporary1716>

2266:
old  <	; Assign longValue Â£temporary1679>
new  <	; Assign longValue Â£temporary1716>

2283:
old  <	; Address Â£temporary1680 precision>
new  <	; Address Â£temporary1717 precision>

2288:
old  <	; Parameter pointer Â£temporary1680 162>
new  <	; Parameter pointer Â£temporary1717 162>

2302:
old  <	; GetReturnValue Â£temporary1681>
new  <	; GetReturnValue Â£temporary1718>

2305:
old  <	; Assign arg_list Â£temporary1681>
new  <	; Assign arg_list Â£temporary1718>

2345:
old  <	; BinarySubtract Â£temporary1685 arg_list 4>
new  <	; BinarySubtract Â£temporary1722 arg_list 4>

2350:
old  <	; IntegralToIntegral Â£temporary1687 Â£temporary1685>
new  <	; IntegralToIntegral Â£temporary1724 Â£temporary1722>

2353:
old  <	; Dereference Â£temporary1688 -> Â£temporary1687 Â£temporary1687 0>
new  <	; Dereference Â£temporary1725 -> Â£temporary1724 Â£temporary1724 0>

2356:
old  <	; IntegralToIntegral Â£temporary1689 Â£temporary1688 -> Â£temporary1687>
new  <	; IntegralToIntegral Â£temporary1726 Â£temporary1725 -> Â£temporary1724>

2364:
old  <	; Assign charValue Â£temporary1689>
new  <	; Assign charValue Â£temporary1726>

2381:
old  <	; Address Â£temporary1690 precision>
new  <	; Address Â£temporary1727 precision>

2386:
old  <	; Parameter pointer Â£temporary1690 154>
new  <	; Parameter pointer Â£temporary1727 154>

2400:
old  <	; GetReturnValue Â£temporary1691>
new  <	; GetReturnValue Â£temporary1728>

2403:
old  <	; Assign arg_list Â£temporary1691>
new  <	; Assign arg_list Â£temporary1728>

2433:
old  <	; BinarySubtract Â£temporary1695 arg_list 8>
new  <	; BinarySubtract Â£temporary1732 arg_list 8>

2438:
old  <	; IntegralToIntegral Â£temporary1697 Â£temporary1695>
new  <	; IntegralToIntegral Â£temporary1734 Â£temporary1732>

2441:
old  <	; Dereference Â£temporary1698 -> Â£temporary1697 Â£temporary1697 0>
new  <	; Dereference Â£temporary1735 -> Â£temporary1734 Â£temporary1734 0>

2444:
old  <	; Assign stringValue Â£temporary1698 -> Â£temporary1697>
new  <	; Assign stringValue Â£temporary1735 -> Â£temporary1734>

2462:
old  <	; Address Â£temporary1699 precision>
new  <	; Address Â£temporary1736 precision>

2467:
old  <	; Parameter pointer Â£temporary1699 162>
new  <	; Parameter pointer Â£temporary1736 162>

2481:
old  <	; GetReturnValue Â£temporary1700>
new  <	; GetReturnValue Â£temporary1737>

2484:
old  <	; Assign arg_list Â£temporary1700>
new  <	; Assign arg_list Â£temporary1737>

2520:
old  <	; Assign Â£temporary1707 10>
new  <	; Assign Â£temporary1744 10>

2533:
old  <	; Assign Â£temporary1706 8>
new  <	; Assign Â£temporary1743 8>

2546:
old  <	; Assign Â£temporary1705 2>
new  <	; Assign Â£temporary1742 2>

2554:
old  <	; Assign Â£temporary1705 16>
new  <	; Assign Â£temporary1742 16>

2558:
old  <	; Assign Â£temporary1706 Â£temporary1705>
new  <	; Assign Â£temporary1743 Â£temporary1742>

2561:
old  <	; Assign Â£temporary1707 Â£temporary1706>
new  <	; Assign Â£temporary1744 Â£temporary1743>

2564:
old  <	; Assign base Â£temporary1707>
new  <	; Assign base Â£temporary1744>

2577:
old  <	; BinarySubtract Â£temporary1710 arg_list 4>
new  <	; BinarySubtract Â£temporary1747 arg_list 4>

2582:
old  <	; IntegralToIntegral Â£temporary1712 Â£temporary1710>
new  <	; IntegralToIntegral Â£temporary1749 Â£temporary1747>

2585:
old  <	; Dereference Â£temporary1713 -> Â£temporary1712 Â£temporary1712 0>
new  <	; Dereference Â£temporary1750 -> Â£temporary1749 Â£temporary1749 0>

2588:
old  <	; IntegralToIntegral Â£temporary1714 Â£temporary1713 -> Â£temporary1712>
new  <	; IntegralToIntegral Â£temporary1751 Â£temporary1750 -> Â£temporary1749>

2592:
old  <	; IntegralToIntegral Â£temporary1715 Â£temporary1714>
new  <	; IntegralToIntegral Â£temporary1752 Â£temporary1751>

2597:
old  <	; Assign value Â£temporary1715>
new  <	; Assign value Â£temporary1752>

2614:
old  <	; BinarySubtract Â£temporary1718 arg_list 8>
new  <	; BinarySubtract Â£temporary1755 arg_list 8>

2619:
old  <	; IntegralToIntegral Â£temporary1720 Â£temporary1718>
new  <	; IntegralToIntegral Â£temporary1757 Â£temporary1755>

2622:
old  <	; Dereference Â£temporary1721 -> Â£temporary1720 Â£temporary1720 0>
new  <	; Dereference Â£temporary1758 -> Â£temporary1757 Â£temporary1757 0>

2625:
old  <	; Assign value Â£temporary1721 -> Â£temporary1720>
new  <	; Assign value Â£temporary1758 -> Â£temporary1757>

2638:
old  <	; BinarySubtract Â£temporary1724 arg_list 4>
new  <	; BinarySubtract Â£temporary1761 arg_list 4>

2643:
old  <	; IntegralToIntegral Â£temporary1726 Â£temporary1724>
new  <	; IntegralToIntegral Â£temporary1763 Â£temporary1761>

2646:
old  <	; Dereference Â£temporary1727 -> Â£temporary1726 Â£temporary1726 0>
new  <	; Dereference Â£temporary1764 -> Â£temporary1763 Â£temporary1763 0>

2649:
old  <	; IntegralToIntegral Â£temporary1728 Â£temporary1727 -> Â£temporary1726>
new  <	; IntegralToIntegral Â£temporary1765 Â£temporary1764 -> Â£temporary1763>

2655:
old  <	; Assign value Â£temporary1728>
new  <	; Assign value Â£temporary1765>

2672:
old  <	; Address Â£temporary1731 precision>
new  <	; Address Â£temporary1768 precision>

2677:
old  <	; Parameter pointer Â£temporary1731 170>
new  <	; Parameter pointer Â£temporary1768 170>

2691:
old  <	; GetReturnValue Â£temporary1732>
new  <	; GetReturnValue Â£temporary1769>

2694:
old  <	; Assign arg_list Â£temporary1732>
new  <	; Assign arg_list Â£temporary1769>

2729:
old  <	; IntegralToIntegral Â£temporary1733 c>
new  <	; IntegralToIntegral Â£temporary1770 c>

2738:
old  <	; Parameter signedint Â£temporary1733 206>
new  <	; Parameter signedint Â£temporary1770 206>

2752:
old  <	; GetReturnValue Â£temporary1734>
new  <	; GetReturnValue Â£temporary1771>

2755:
old  <	; Parameter signedint Â£temporary1734 182>
new  <	; Parameter signedint Â£temporary1771 182>

2782:
old  <	; BinarySubtract Â£temporary1738 arg_list 8>
new  <	; BinarySubtract Â£temporary1775 arg_list 8>

2787:
old  <	; IntegralToIntegral Â£temporary1740 Â£temporary1738>
new  <	; IntegralToIntegral Â£temporary1777 Â£temporary1775>

2790:
old  <	; Dereference Â£temporary1741 -> Â£temporary1740 Â£temporary1740 0>
new  <	; Dereference Â£temporary1778 -> Â£temporary1777 Â£temporary1777 0>

2793:
old  <	; PushFloat Â£temporary1741 -> Â£temporary1740>
new  <	; PushFloat Â£temporary1778 -> Â£temporary1777>

2846:
old  <	; BinarySubtract Â£temporary1745 arg_list 8>
new  <	; BinarySubtract Â£temporary1782 arg_list 8>

2851:
old  <	; IntegralToIntegral Â£temporary1747 Â£temporary1745>
new  <	; IntegralToIntegral Â£temporary1784 Â£temporary1782>

2854:
old  <	; Dereference Â£temporary1748 -> Â£temporary1747 Â£temporary1747 0>
new  <	; Dereference Â£temporary1785 -> Â£temporary1784 Â£temporary1784 0>

2857:
old  <	; PushFloat Â£temporary1748 -> Â£temporary1747>
new  <	; PushFloat Â£temporary1785 -> Â£temporary1784>

2870:
old  <	; Dereference Â£temporary1752 -> negativePtr negativePtr 0>
new  <	; Dereference Â£temporary1789 -> negativePtr negativePtr 0>

2889:
old  <	; Assign Â£temporary1754 1>
new  <	; Assign Â£temporary1791 1>

2897:
old  <	; Assign Â£temporary1754 0>
new  <	; Assign Â£temporary1791 0>

2901:
old  <	; Assign Â£temporary1752 -> negativePtr Â£temporary1754>
new  <	; Assign Â£temporary1789 -> negativePtr Â£temporary1791>

2931:
old  <	; GetReturnValue Â£temporary1757>
new  <	; GetReturnValue Â£temporary1794>

2951:
old  <	; Address Â£temporary1758 precision>
new  <	; Address Â£temporary1795 precision>

2956:
old  <	; Parameter pointer Â£temporary1758 154>
new  <	; Parameter pointer Â£temporary1795 154>

2970:
old  <	; GetReturnValue Â£temporary1759>
new  <	; GetReturnValue Â£temporary1796>

2973:
old  <	; Assign arg_list Â£temporary1759>
new  <	; Assign arg_list Â£temporary1796>

3030:
old  <	; IntegralToIntegral Â£temporary1762 c>
new  <	; IntegralToIntegral Â£temporary1799 c>

3039:
old  <	; Parameter signedint Â£temporary1762 138>
new  <	; Parameter signedint Â£temporary1799 138>

3053:
old  <	; GetReturnValue Â£temporary1763>
new  <	; GetReturnValue Â£temporary1800>

3056:
old  <	; NotEqual 257 Â£temporary1763 101>
new  <	; NotEqual 257 Â£temporary1800 101>

3095:
old  <	; IntegralToIntegral Â£temporary1765 c>
new  <	; IntegralToIntegral Â£temporary1802 c>

3104:
old  <	; Parameter signedint Â£temporary1765 186>
new  <	; Parameter signedint Â£temporary1802 186>

3118:
old  <	; GetReturnValue Â£temporary1766>
new  <	; GetReturnValue Â£temporary1803>

3121:
old  <	; Parameter signedint Â£temporary1766 162>
new  <	; Parameter signedint Â£temporary1803 162>

3163:
old  <	; GetReturnValue Â£temporary1768>
new  <	; GetReturnValue Â£temporary1805>

3166:
old  <	; Parameter double Â£temporary1768 138>
new  <	; Parameter double Â£temporary1805 138>

3180:
old  <	; GetReturnValue Â£temporary1769>
new  <	; GetReturnValue Â£temporary1806>

3183:
old  <	; FloatingToIntegral Â£temporary1770 Â£temporary1769>
new  <	; FloatingToIntegral Â£temporary1807 Â£temporary1806>

3188:
old  <	; Assign expo Â£temporary1770>
new  <	; Assign expo Â£temporary1807>

3281:
old  <	; IntegralToIntegral Â£temporary1775 c>
new  <	; IntegralToIntegral Â£temporary1812 c>

3290:
old  <	; Parameter signedint Â£temporary1775 190>
new  <	; Parameter signedint Â£temporary1812 190>

3304:
old  <	; GetReturnValue Â£temporary1776>
new  <	; GetReturnValue Â£temporary1813>

3307:
old  <	; Parameter signedint Â£temporary1776 166>
new  <	; Parameter signedint Â£temporary1813 166>

3329:
old  <	; BinarySubtract Â£temporary1780 arg_list 8>
new  <	; BinarySubtract Â£temporary1817 arg_list 8>

3334:
old  <	; IntegralToIntegral Â£temporary1782 Â£temporary1780>
new  <	; IntegralToIntegral Â£temporary1819 Â£temporary1817>

3337:
old  <	; Dereference Â£temporary1783 -> Â£temporary1782 Â£temporary1782 0>
new  <	; Dereference Â£temporary1820 -> Â£temporary1819 Â£temporary1819 0>

3340:
old  <	; Assign ptrValue Â£temporary1783 -> Â£temporary1782>
new  <	; Assign ptrValue Â£temporary1820 -> Â£temporary1819>

3358:
old  <	; Address Â£temporary1784 precision>
new  <	; Address Â£temporary1821 precision>

3363:
old  <	; Parameter pointer Â£temporary1784 154>
new  <	; Parameter pointer Â£temporary1821 154>

3377:
old  <	; GetReturnValue Â£temporary1785>
new  <	; GetReturnValue Â£temporary1822>

3380:
old  <	; Assign arg_list Â£temporary1785>
new  <	; Assign arg_list Â£temporary1822>

3387:
old  <	; IntegralToIntegral Â£temporary1786 ptrValue>
new  <	; IntegralToIntegral Â£temporary1823 ptrValue>

3391:
old  <	; Parameter unsignedlongint Â£temporary1786 138>
new  <	; Parameter unsignedlongint Â£temporary1823 138>

3433:
old  <	; BinarySubtract Â£temporary1790 arg_list 8>
new  <	; BinarySubtract Â£temporary1827 arg_list 8>

3438:
old  <	; IntegralToIntegral Â£temporary1792 Â£temporary1790>
new  <	; IntegralToIntegral Â£temporary1829 Â£temporary1827>

3441:
old  <	; Dereference Â£temporary1793 -> Â£temporary1792 Â£temporary1792 0>
new  <	; Dereference Â£temporary1830 -> Â£temporary1829 Â£temporary1829 0>

3444:
old  <	; Assign ptrValue Â£temporary1793 -> Â£temporary1792>
new  <	; Assign ptrValue Â£temporary1830 -> Â£temporary1829>

3453:
old  <	; BinarySubtract Â£temporary1796 arg_list 8>
new  <	; BinarySubtract Â£temporary1833 arg_list 8>

3458:
old  <	; IntegralToIntegral Â£temporary1798 Â£temporary1796>
new  <	; IntegralToIntegral Â£temporary1835 Â£temporary1833>

3461:
old  <	; Dereference Â£temporary1799 -> Â£temporary1798 Â£temporary1798 0>
new  <	; Dereference Â£temporary1836 -> Â£temporary1835 Â£temporary1835 0>

3464:
old  <	; Assign intPtr Â£temporary1799 -> Â£temporary1798>
new  <	; Assign intPtr Â£temporary1836 -> Â£temporary1835>

3482:
old  <	; Address Â£temporary1800 precision>
new  <	; Address Â£temporary1837 precision>

3487:
old  <	; Parameter pointer Â£temporary1800 154>
new  <	; Parameter pointer Â£temporary1837 154>

3501:
old  <	; GetReturnValue Â£temporary1801>
new  <	; GetReturnValue Â£temporary1838>

3504:
old  <	; Assign arg_list Â£temporary1801>
new  <	; Assign arg_list Â£temporary1838>

3508:
old  <	; Dereference Â£temporary1802 -> intPtr intPtr 0>
new  <	; Dereference Â£temporary1839 -> intPtr intPtr 0>

3512:
old  <	; Assign Â£temporary1802 -> intPtr g_outChars>
new  <	; Assign Â£temporary1839 -> intPtr g_outChars>

3534:
old  <	; Address Â£temporary1803 precision>
new  <	; Address Â£temporary1840 precision>

3539:
old  <	; Parameter pointer Â£temporary1803 154>
new  <	; Parameter pointer Â£temporary1840 154>

3553:
old  <	; GetReturnValue Â£temporary1804>
new  <	; GetReturnValue Â£temporary1841>

3556:
old  <	; Assign arg_list Â£temporary1804>
new  <	; Assign arg_list Â£temporary1841>

3660:
old  <	; IntegralToIntegral Â£temporary1823 index>
new  <	; IntegralToIntegral Â£temporary1860 index>

3666:
old  <	; BinaryAdd Â£temporary1825 format Â£temporary1823>
new  <	; BinaryAdd Â£temporary1862 format Â£temporary1860>

3671:
old  <	; Dereference Â£temporary1822 -> Â£temporary1825 Â£temporary1825 0>
new  <	; Dereference Â£temporary1859 -> Â£temporary1862 Â£temporary1862 0>

3674:
old  <	; Equal 294 Â£temporary1822 -> Â£temporary1825 0>
new  <	; Equal 294 Â£temporary1859 -> Â£temporary1862 0>

3679:
old  <	; IntegralToIntegral Â£temporary1829 index>
new  <	; IntegralToIntegral Â£temporary1866 index>

3685:
old  <	; BinaryAdd Â£temporary1831 format Â£temporary1829>
new  <	; BinaryAdd Â£temporary1868 format Â£temporary1866>

3690:
old  <	; Dereference Â£temporary1828 -> Â£temporary1831 Â£temporary1831 0>
new  <	; Dereference Â£temporary1865 -> Â£temporary1868 Â£temporary1868 0>

3693:
old  <	; Assign c Â£temporary1828 -> Â£temporary1831>
new  <	; Assign c Â£temporary1865 -> Â£temporary1868>

3952:
old  <	; IntegralToIntegral Â£temporary1835 index>
new  <	; IntegralToIntegral Â£temporary1872 index>

3958:
old  <	; BinaryAdd Â£temporary1837 format Â£temporary1835>
new  <	; BinaryAdd Â£temporary1874 format Â£temporary1872>

3963:
old  <	; Dereference Â£temporary1834 -> Â£temporary1837 Â£temporary1837 0>
new  <	; Dereference Â£temporary1871 -> Â£temporary1874 Â£temporary1874 0>

3966:
old  <	; Address Â£temporary1838 Â£temporary1834 -> Â£temporary1837>
new  <	; Address Â£temporary1875 Â£temporary1871 -> Â£temporary1874>

3969:
old  <	; Parameter pointer Â£temporary1838 129>
new  <	; Parameter pointer Â£temporary1875 129>

3993:
old  <	; Address Â£temporary1839 width>
new  <	; Address Â£temporary1876 width>

3998:
old  <	; Parameter pointer Â£temporary1839 157>
new  <	; Parameter pointer Â£temporary1876 157>

4040:
old  <	; GetReturnValue Â£temporary1840>
new  <	; GetReturnValue Â£temporary1877>

4043:
old  <	; Assign arg_list Â£temporary1840>
new  <	; Assign arg_list Â£temporary1877>

4047:
old  <	; BinarySubtract Â£temporary1842 g_outChars startChars>
new  <	; BinarySubtract Â£temporary1879 g_outChars startChars>

4056:
old  <	; SignedGreaterThanEqual 246 Â£temporary1842 width>
new  <	; SignedGreaterThanEqual 246 Â£temporary1879 width>

4108:
old  <	; IntegralToIntegral Â£temporary1846 index>
new  <	; IntegralToIntegral Â£temporary1883 index>

4114:
old  <	; BinaryAdd Â£temporary1848 format Â£temporary1846>
new  <	; BinaryAdd Â£temporary1885 format Â£temporary1883>

4119:
old  <	; Dereference Â£temporary1845 -> Â£temporary1848 Â£temporary1848 0>
new  <	; Dereference Â£temporary1882 -> Â£temporary1885 Â£temporary1885 0>

4122:
old  <	; Address Â£temporary1849 Â£temporary1845 -> Â£temporary1848>
new  <	; Address Â£temporary1886 Â£temporary1882 -> Â£temporary1885>

4125:
old  <	; Parameter pointer Â£temporary1849 137>
new  <	; Parameter pointer Â£temporary1886 137>

4147:
old  <	; Address Â£temporary1850 width>
new  <	; Address Â£temporary1887 width>

4152:
old  <	; Parameter pointer Â£temporary1850 165>
new  <	; Parameter pointer Â£temporary1887 165>

4180:
old  <	; Address Â£temporary1851 negative>
new  <	; Address Â£temporary1888 negative>

4185:
old  <	; Parameter pointer Â£temporary1851 193>
new  <	; Parameter pointer Â£temporary1888 193>

4314:
old  <	; BinaryAdd Â£temporary1864 field 1>
new  <	; BinaryAdd Â£temporary1901 field 1>

4323:
old  <	; SignedGreaterThanEqual 169 Â£temporary1864 width>
new  <	; SignedGreaterThanEqual 169 Â£temporary1901 width>

4352:
old  <	; IntegralToIntegral Â£temporary1868 index>
new  <	; IntegralToIntegral Â£temporary1905 index>

4358:
old  <	; BinaryAdd Â£temporary1870 format Â£temporary1868>
new  <	; BinaryAdd Â£temporary1907 format Â£temporary1905>

4363:
old  <	; Dereference Â£temporary1867 -> Â£temporary1870 Â£temporary1870 0>
new  <	; Dereference Â£temporary1904 -> Â£temporary1907 Â£temporary1907 0>

4366:
old  <	; Address Â£temporary1871 Â£temporary1867 -> Â£temporary1870>
new  <	; Address Â£temporary1908 Â£temporary1904 -> Â£temporary1907>

4369:
old  <	; Parameter pointer Â£temporary1871 141>
new  <	; Parameter pointer Â£temporary1908 141>

4433:
old  <	; GetReturnValue Â£temporary1872>
new  <	; GetReturnValue Â£temporary1909>

4436:
old  <	; Assign arg_list Â£temporary1872>
new  <	; Assign arg_list Â£temporary1909>

4461:
old  <	; IntegralToIntegral Â£temporary1874 index>
new  <	; IntegralToIntegral Â£temporary1911 index>

4467:
old  <	; BinaryAdd Â£temporary1876 format Â£temporary1874>
new  <	; BinaryAdd Â£temporary1913 format Â£temporary1911>

4472:
old  <	; Dereference Â£temporary1873 -> Â£temporary1876 Â£temporary1876 0>
new  <	; Dereference Â£temporary1910 -> Â£temporary1913 Â£temporary1913 0>

4475:
old  <	; Address Â£temporary1877 Â£temporary1873 -> Â£temporary1876>
new  <	; Address Â£temporary1914 Â£temporary1910 -> Â£temporary1913>

4478:
old  <	; Parameter pointer Â£temporary1877 133>
new  <	; Parameter pointer Â£temporary1914 133>

4502:
old  <	; Address Â£temporary1878 width>
new  <	; Address Â£temporary1915 width>

4507:
old  <	; Parameter pointer Â£temporary1878 161>
new  <	; Parameter pointer Â£temporary1915 161>

4565:
old  <	; Assign Â£temporary1881 field>
new  <	; Assign Â£temporary1918 field>

4573:
old  <	; SignedGreaterThanEqual 225 Â£temporary1881 width>
new  <	; SignedGreaterThanEqual 225 Â£temporary1918 width>

4602:
old  <	; IntegralToIntegral Â£temporary1885 index>
new  <	; IntegralToIntegral Â£temporary1922 index>

4608:
old  <	; BinaryAdd Â£temporary1887 format Â£temporary1885>
new  <	; BinaryAdd Â£temporary1924 format Â£temporary1922>

4613:
old  <	; Dereference Â£temporary1884 -> Â£temporary1887 Â£temporary1887 0>
new  <	; Dereference Â£temporary1921 -> Â£temporary1924 Â£temporary1924 0>

4616:
old  <	; Address Â£temporary1888 Â£temporary1884 -> Â£temporary1887>
new  <	; Address Â£temporary1925 Â£temporary1921 -> Â£temporary1924>

4619:
old  <	; Parameter pointer Â£temporary1888 137>
new  <	; Parameter pointer Â£temporary1925 137>

4685:
old  <	; GetReturnValue Â£temporary1889>
new  <	; GetReturnValue Â£temporary1926>

4688:
old  <	; Assign arg_list Â£temporary1889>
new  <	; Assign arg_list Â£temporary1926>

4707:
old  <	; IntegralToIntegral Â£temporary1892 c>
new  <	; IntegralToIntegral Â£temporary1929 c>

4716:
old  <	; Parameter signedint Â£temporary1892 129>
new  <	; Parameter signedint Â£temporary1929 129>

4730:
old  <	; GetReturnValue Â£temporary1893>
new  <	; GetReturnValue Â£temporary1930>

4733:
old  <	; Equal 266 Â£temporary1893 0>
new  <	; Equal 266 Â£temporary1930 0>

4738:
old  <	; SignedMultiply Â£temporary1894 value 10>
new  <	; SignedMultiply Â£temporary1931 value 10>

4744:
old  <	; BinarySubtract Â£temporary1895 c 48>
new  <	; BinarySubtract Â£temporary1932 c 48>

4749:
old  <	; IntegralToIntegral Â£temporary1896 Â£temporary1895>
new  <	; IntegralToIntegral Â£temporary1933 Â£temporary1932>

4757:
old  <	; BinaryAdd value Â£temporary1894 Â£temporary1896>
new  <	; BinaryAdd value Â£temporary1931 Â£temporary1933>

4762:
old  <	; BinaryAdd Â£temporary1898 index 1>
new  <	; BinaryAdd Â£temporary1935 index 1>

4767:
old  <	; IntegralToIntegral Â£temporary1900 Â£temporary1898>
new  <	; IntegralToIntegral Â£temporary1937 Â£temporary1935>

4772:
old  <	; BinaryAdd Â£temporary1902 format Â£temporary1900>
new  <	; BinaryAdd Â£temporary1939 format Â£temporary1937>

4777:
old  <	; Dereference Â£temporary1899 -> Â£temporary1902 Â£temporary1902 0>
new  <	; Dereference Â£temporary1936 -> Â£temporary1939 Â£temporary1939 0>

4780:
old  <	; Assign c Â£temporary1899 -> Â£temporary1902>
new  <	; Assign c Â£temporary1936 -> Â£temporary1939>

4912:
old  <	; IntegralToIntegral Â£temporary1911 g_outDevice>
new  <	; IntegralToIntegral Â£temporary1948 g_outDevice>

4916:
old  <	; Assign outString Â£temporary1911>
new  <	; Assign outString Â£temporary1948>

4920:
old  <	; IntegralToIntegral Â£temporary1913 g_outChars>
new  <	; IntegralToIntegral Â£temporary1950 g_outChars>

4926:
old  <	; BinaryAdd Â£temporary1915 outString Â£temporary1913>
new  <	; BinaryAdd Â£temporary1952 outString Â£temporary1950>

4931:
old  <	; Dereference Â£temporary1912 -> Â£temporary1915 Â£temporary1915 0>
new  <	; Dereference Â£temporary1949 -> Â£temporary1952 Â£temporary1952 0>

4934:
old  <	; Assign Â£temporary1912 -> Â£temporary1915 0>
new  <	; Assign Â£temporary1949 -> Â£temporary1952 0>

4951:
old  <	; Address Â£temporary1920 format>
new  <	; Address Â£temporary1957 format>

4956:
old  <	; IntegralToIntegral Â£temporary1921 Â£temporary1920>
new  <	; IntegralToIntegral Â£temporary1958 Â£temporary1957>

4959:
old  <	; BinaryAdd arg_list Â£temporary1921 8>
new  <	; BinaryAdd arg_list Â£temporary1958 8>

4989:
old  <	; GetReturnValue Â£temporary1924>
new  <	; GetReturnValue Â£temporary1961>

4992:
old  <	; Return Â£temporary1924>
new  <	; Return Â£temporary1961>

5032:
old  <	; GetReturnValue Â£temporary1926>
new  <	; GetReturnValue Â£temporary1963>

5035:
old  <	; Return Â£temporary1926>
new  <	; Return Â£temporary1963>

5047:
old  <	; Address Â£temporary1927 format>
new  <	; Address Â£temporary1964 format>

5052:
old  <	; IntegralToIntegral Â£temporary1928 Â£temporary1927>
new  <	; IntegralToIntegral Â£temporary1965 Â£temporary1964>

5055:
old  <	; BinaryAdd arg_list Â£temporary1928 8>
new  <	; BinaryAdd arg_list Â£temporary1965 8>

5090:
old  <	; GetReturnValue Â£temporary1931>
new  <	; GetReturnValue Â£temporary1968>

5093:
old  <	; Return Â£temporary1931>
new  <	; Return Â£temporary1968>

5109:
old  <	; IntegralToIntegral Â£temporary1933 outStream>
new  <	; IntegralToIntegral Â£temporary1970 outStream>

5113:
old  <	; Assign g_outDevice Â£temporary1933>
new  <	; Assign g_outDevice Â£temporary1970>

5140:
old  <	; GetReturnValue Â£temporary1934>
new  <	; GetReturnValue Â£temporary1971>

5143:
old  <	; Return Â£temporary1934>
new  <	; Return Â£temporary1971>

5155:
old  <	; Address Â£temporary1935 format>
new  <	; Address Â£temporary1972 format>

5160:
old  <	; IntegralToIntegral Â£temporary1936 Â£temporary1935>
new  <	; IntegralToIntegral Â£temporary1973 Â£temporary1972>

5163:
old  <	; BinaryAdd arg_list Â£temporary1936 8>
new  <	; BinaryAdd arg_list Â£temporary1973 8>

5198:
old  <	; GetReturnValue Â£temporary1939>
new  <	; GetReturnValue Â£temporary1976>

5201:
old  <	; Return Â£temporary1939>
new  <	; Return Â£temporary1976>

5217:
old  <	; IntegralToIntegral Â£temporary1941 outString>
new  <	; IntegralToIntegral Â£temporary1978 outString>

5221:
old  <	; Assign g_outDevice Â£temporary1941>
new  <	; Assign g_outDevice Â£temporary1978>

5248:
old  <	; GetReturnValue Â£temporary1942>
new  <	; GetReturnValue Â£temporary1979>

5251:
old  <	; Return Â£temporary1942>
new  <	; Return Â£temporary1979>

4:
old  <	global strtoul>
new  <	global strtol_test>

5:
old  <	global atof>
new  <	global strtoul>

6:
old  <	global strtod>
new  <	global strtoul_test>

7:
old  <	global abort>
new  <	global atof>

8:
old  <	global getenv>
new  <	global strtod>

9:
old  <	global system>
new  <	global abort>

10:
old  <	global memswp>
new  <	global getenv>

11:
old  <	global bsearch>
new  <	global system>

12:
old  <	global rand>
new  <	global bsearch>

13:
old  <	global srand>
new  <	global rand>

14:
old  <	global g_funcArray>
new  <	global srand>

15:
old  <	global atexit>
new  <	global g_funcArray>

16:
old  <	global exit>
new  <	global atexit>

17:
old  <	global swap>
new  <	global exit>

19:
old  <	global @abs>
new  <	global qsortX>

20:
old  <	global labs>
new  <	global @abs>

21:
old  <	global div>
new  <	global labs>

22:
old  <	global ldiv>
new  <	global div>

23:
old  <>
new  <	global ldiv>

24:
old  <	extern sscanf>
new  <>

25:
old  <	extern errno>
new  <	extern g_inStatus>

26:
old  <	extern $StackTop>
new  <	extern g_inDevice>

27:
old  <>
new  <	extern g_inChars>

28:
old  <>
new  <	extern scanLongInt>

29:
old  <section .text>
new  <	extern printf>

30:
old  <>
new  <	extern scanUnsignedLongInt>

31:
old  < atoi:>
new  <	extern sscanf>

32:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	extern errno>

33:
old  <>
new  <	extern $StackTop>

34:
old  < atoi$1:>
new  <>

35:
old  <	; Parameter pointer s 56>
new  <>

36:
old  <	mov rax, [rbp + 24]>
new  <section .text>

37:
old  <	mov [rbp + 56], rax>
new  <>

38:
old  <>
new  < atoi:>

39:
old  < atoi$2:>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

40:
old  <	; Parameter pointer 0 64>
new  <>

41:
old  <	mov qword [rbp + 64], 0>
new  < atoi$1:>

42:
old  <>
new  <	; Parameter pointer s 56>

43:
old  < atoi$3:>
new  <	mov rax, [rbp + 24]>

44:
old  <	; Parameter signedint 10 72>
new  <	mov [rbp + 56], rax>

45:
old  <	mov dword [rbp + 72], 10>
new  <>

46:
old  <>
new  < atoi$2:>

47:
old  < atoi$4:>
new  <	; Parameter pointer 0 64>

48:
old  <	; Call strtol 32 0>
new  <	mov qword [rbp + 64], 0>

49:
old  <	mov qword [rbp + 32], atoi$5>
new  <>

50:
old  <	mov [rbp + 40], rbp>
new  < atoi$3:>

51:
old  <	add rbp, 32>
new  <	; Parameter signedint 10 72>

52:
old  <	jmp strtol>
new  <	mov dword [rbp + 72], 10>

54:
old  < atoi$5:>
new  < atoi$4:>

55:
old  <	; PostCall 32>
new  <	; Call strtol 32 0>

56:
old  <>
new  <	mov qword [rbp + 32], atoi$5>

57:
old  < atoi$6:>
new  <	mov [rbp + 40], rbp>

58:
old  <	; GetReturnValue Â£temporary1943>
new  <	add rbp, 32>

59:
old  <>
new  <	jmp strtol>

60:
old  < atoi$7:>
new  <>

61:
old  <	; IntegralToIntegral Â£temporary1944 Â£temporary1943>
new  < atoi$5:>

62:
old  <	cmp rbx, 0>
new  <	; PostCall 32>

63:
old  <	jge atoi$8>
new  <>

64:
old  <	neg rbx>
new  < atoi$6:>

65:
old  <	neg ebx>
new  <	; GetReturnValue Â£temporary1980>

67:
old  < atoi$8:>
new  < atoi$7:>

68:
old  <	; Return Â£temporary1944>
new  <	; IntegralToIntegral Â£temporary1981 Â£temporary1980>

69:
old  <	mov rax, [rbp]>
new  <	cmp rbx, 0>

70:
old  <	mov rdi, [rbp + 16]>
new  <	jge atoi$8>

71:
old  <	mov rbp, [rbp + 8]>
new  <	neg rbx>

72:
old  <	jmp rax>
new  <	neg ebx>

74:
old  < atoi$9:>
new  < atoi$8:>

75:
old  <	; FunctionEnd atoi>
new  <	; Return Â£temporary1981>

76:
old  <>
new  <	mov rax, [rbp]>

77:
old  <section .text>
new  <	mov rdi, [rbp + 16]>

78:
old  <>
new  <	mov rbp, [rbp + 8]>

79:
old  < atol:>
new  <	jmp rax>

80:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

81:
old  <>
new  < atoi$9:>

82:
old  < atol$1:>
new  <	; FunctionEnd atoi>

83:
old  <	; Parameter pointer s 56>
new  <>

84:
old  <	mov rax, [rbp + 24]>
new  <section .text>

85:
old  <	mov [rbp + 56], rax>
new  <>

86:
old  <>
new  < atol:>

87:
old  < atol$2:>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

88:
old  <	; Parameter pointer 0 64>
new  <>

89:
old  <	mov qword [rbp + 64], 0>
new  < atol$1:>

90:
old  <>
new  <	; Parameter pointer s 56>

91:
old  < atol$3:>
new  <	mov rax, [rbp + 24]>

92:
old  <	; Parameter signedint 10 72>
new  <	mov [rbp + 56], rax>

93:
old  <	mov dword [rbp + 72], 10>
new  <>

94:
old  <>
new  < atol$2:>

95:
old  < atol$4:>
new  <	; Parameter pointer 0 64>

96:
old  <	; Call strtol 32 0>
new  <	mov qword [rbp + 64], 0>

97:
old  <	mov qword [rbp + 32], atol$5>
new  <>

98:
old  <	mov [rbp + 40], rbp>
new  < atol$3:>

99:
old  <	add rbp, 32>
new  <	; Parameter signedint 10 72>

100:
old  <	jmp strtol>
new  <	mov dword [rbp + 72], 10>

102:
old  < atol$5:>
new  < atol$4:>

103:
old  <	; PostCall 32>
new  <	; Call strtol 32 0>

104:
old  <>
new  <	mov qword [rbp + 32], atol$5>

105:
old  < atol$6:>
new  <	mov [rbp + 40], rbp>

106:
old  <	; GetReturnValue Â£temporary1945>
new  <	add rbp, 32>

107:
old  <>
new  <	jmp strtol>

108:
old  < atol$7:>
new  <>

109:
old  <	; Return Â£temporary1945>
new  < atol$5:>

110:
old  <	mov rax, [rbp]>
new  <	; PostCall 32>

111:
old  <	mov rdi, [rbp + 16]>
new  <>

112:
old  <	mov rbp, [rbp + 8]>
new  < atol$6:>

113:
old  <	jmp rax>
new  <	; GetReturnValue Â£temporary1982>

115:
old  < atol$8:>
new  < atol$7:>

116:
old  <	; FunctionEnd atol>
new  <	; Return Â£temporary1982>

117:
old  <>
new  <	mov rax, [rbp]>

118:
old  <section .data>
new  <	mov rdi, [rbp + 16]>

119:
old  <>
new  <	mov rbp, [rbp + 8]>

120:
old  <string_25li25n#:>
new  <	jmp rax>

121:
old  <	; Initializer String %li%n>
new  <>

122:
old  <	db "%li%n", 0>
new  < atol$8:>

123:
old  <>
new  <	; FunctionEnd atol>

124:
old  <section .text>
new  <>

125:
old  <>
new  <section .text>

126:
old  < strtol:>
new  <>

127:
old  <	; Assign chars 0>
new  < strtol:>

128:
old  <	mov dword [rbp + 44], 0>
new  <	; Assign g_inStatus 1>

129:
old  <>
new  <	mov dword [g_inStatus], 1>

130:
old  < strtol$1:>
new  <>

131:
old  <	; Assign value 0>
new  < strtol$1:>

132:
old  <	mov qword [rbp + 48], 0>
new  <	; Assign g_inDevice s>

133:
old  <>
new  <	mov rax, [rbp + 24]>

134:
old  < strtol$2:>
new  <	mov [g_inDevice], rax>

135:
old  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

136:
old  <>
new  < strtol$2:>

137:
old  < strtol$3:>
new  <	; Assign g_inChars 0>

138:
old  <	; Parameter pointer s 80>
new  <	mov dword [g_inChars], 0>

139:
old  <	mov rax, [rbp + 24]>
new  <>

140:
old  <	mov [rbp + 80], rax>
new  < strtol$3:>

141:
old  <>
new  <	; PreCall 44 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

142:
old  < strtol$4:>
new  <>

143:
old  <	; Parameter pointer "%li%n" 88>
new  < strtol$4:>

144:
old  <	mov qword [rbp + 88], string_25li25n#>
new  <	; Parameter signedint base 68>

145:
old  <>
new  <	mov eax, [rbp + 40]>

146:
old  < strtol$5:>
new  <	mov [rbp + 68], eax>

147:
old  <	; Address Â£temporary1946 value>
new  <>

148:
old  <	mov rsi, rbp>
new  < strtol$5:>

149:
old  <	add rsi, 48>
new  <	; Call scanLongInt 44 0>

150:
old  <>
new  <	mov qword [rbp + 44], strtol$6>

151:
old  < strtol$6:>
new  <	mov [rbp + 52], rbp>

152:
old  <	; Parameter pointer Â£temporary1946 96>
new  <	add rbp, 44>

153:
old  <	mov [rbp + 96], rsi>
new  <	jmp scanLongInt>

155:
old  < strtol$7:>
new  < strtol$6:>

156:
old  <	; Address Â£temporary1947 chars>
new  <	; PostCall 44>

157:
old  <	mov rsi, rbp>
new  <>

158:
old  <	add rsi, 44>
new  < strtol$7:>

159:
old  <>
new  <	; GetReturnValue Â£temporary1983>

160:
old  < strtol$8:>
new  <>

161:
old  <	; Parameter pointer Â£temporary1947 104>
new  < strtol$8:>

162:
old  <	mov [rbp + 104], rsi>
new  <	; Assign longValue Â£temporary1983>

163:
old  <>
new  <	mov [rbp + 44], rbx>

164:
old  < strtol$9:>
new  <>

165:
old  <	; Call sscanf 56 16>
new  < strtol$9:>

166:
old  <	mov qword [rbp + 56], strtol$10>
new  <	; Equal 13 endp 0>

167:
old  <	mov [rbp + 64], rbp>
new  <	cmp qword [rbp + 32], 0>

168:
old  <	add rbp, 56>
new  <	je strtol$13>

169:
old  <	mov rdi, rbp>
new  <>

170:
old  <	add rdi, 16>
new  < strtol$10:>

171:
old  <	jmp sscanf>
new  <	; Dereference Â£temporary1985 -> endp endp 0>

172:
old  <>
new  <	mov rsi, [rbp + 32]>

173:
old  < strtol$10:>
new  <>

174:
old  <	; PostCall 56>
new  < strtol$11:>

175:
old  <>
new  <	; IntegralToIntegral Â£temporary1986 g_inChars>

176:
old  < strtol$11:>
new  <	mov eax, [g_inChars]>

177:
old  <	; Equal 15 endp 0>
new  <	mov rbx, 4294967295>

178:
old  <	cmp qword [rbp + 32], 0>
new  <	and rax, rbx>

179:
old  <	je strtol$15>
new  <>

180:
old  <>
new  < strtol$12:>

181:
old  < strtol$12:>
new  <	; BinaryAdd Â£temporary1985 -> endp s Â£temporary1986>

182:
old  <	; Dereference Â£temporary1950 -> endp endp 0>
new  <	mov rbx, [rbp + 24]>

183:
old  <	mov rsi, [rbp + 32]>
new  <	add rbx, rax>

184:
old  <>
new  <	mov [rsi], rbx>

185:
old  < strtol$13:>
new  <>

186:
old  <	; IntegralToIntegral Â£temporary1951 chars>
new  < strtol$13:>

187:
old  <	mov eax, [rbp + 44]>
new  <	; Return longValue>

188:
old  <	mov rbx, 4294967295>
new  <	mov rbx, [rbp + 44]>

189:
old  <	and rax, rbx>
new  <	mov rax, [rbp]>

190:
old  <>
new  <	mov rdi, [rbp + 16]>

191:
old  < strtol$14:>
new  <	mov rbp, [rbp + 8]>

192:
old  <	; BinaryAdd Â£temporary1950 -> endp s Â£temporary1951>
new  <	jmp rax>

193:
old  <	mov rbx, [rbp + 24]>
new  <>

194:
old  <	add rbx, rax>
new  < strtol$14:>

195:
old  <	mov [rsi], rbx>
new  <	; FunctionEnd strtol>

197:
old  < strtol$15:>
new  <section .data>

198:
old  <	; Return value>
new  <>

199:
old  <	mov rbx, [rbp + 48]>
new  <string_2020202B123abc#:>

200:
old  <	mov rax, [rbp]>
new  <	; Initializer String    +123abc>

201:
old  <	mov rdi, [rbp + 16]>
new  <	db "   +123abc", 0>

202:
old  <	mov rbp, [rbp + 8]>
new  <>

203:
old  <	jmp rax>
new  <section .data>

205:
old  < strtol$16:>
new  <string_3C25s3E203C25li3E203C25s3E203C25i3E0A#:>

206:
old  <	; FunctionEnd strtol>
new  <	; Initializer String <%s> <%li> <%s> <%i>\n>

207:
old  <>
new  <	db "<%s> <%li> <%s> <%i>", 10, 0>

208:
old  <section .data>
new  <>

209:
old  <>
new  <section .data>

210:
old  <string_25lu25n#:>
new  <>

211:
old  <	; Initializer String %lu%n>
new  <string_2020202B0123abc#:>

212:
old  <	db "%lu%n", 0>
new  <	; Initializer String    +0123abc>

213:
old  <>
new  <	db "   +0123abc", 0>

214:
old  <section .text>
new  <>

215:
old  <>
new  <section .data>

216:
old  < strtoul:>
new  <>

217:
old  <	; Assign chars 0>
new  <string_2020202B0x123ABC#:>

218:
old  <	mov dword [rbp + 44], 0>
new  <	; Initializer String    +0x123ABC>

219:
old  <>
new  <	db "   +0x123ABC", 0>

220:
old  < strtoul$1:>
new  <>

221:
old  <	; Assign value 0>
new  <section .data>

222:
old  <	mov qword [rbp + 48], 0>
new  <>

223:
old  <>
new  <string_2020202B0X123abc#:>

224:
old  < strtoul$2:>
new  <	; Initializer String    +0X123abc>

225:
old  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	db "   +0X123abc", 0>

227:
old  < strtoul$3:>
new  <section .data>

228:
old  <	; Parameter pointer s 80>
new  <>

229:
old  <	mov rax, [rbp + 24]>
new  <string_2020202D123abc#:>

230:
old  <	mov [rbp + 80], rax>
new  <	; Initializer String    -123abc>

231:
old  <>
new  <	db "   -123abc", 0>

232:
old  < strtoul$4:>
new  <>

233:
old  <	; Parameter pointer "%lu%n" 88>
new  <section .data>

234:
old  <	mov qword [rbp + 88], string_25lu25n#>
new  <>

235:
old  <>
new  <string_2020202D0123abc#:>

236:
old  < strtoul$5:>
new  <	; Initializer String    -0123abc>

237:
old  <	; Address Â£temporary1956 value>
new  <	db "   -0123abc", 0>

238:
old  <	mov rsi, rbp>
new  <>

239:
old  <	add rsi, 48>
new  <section .data>

241:
old  < strtoul$6:>
new  <string_2020202D0x123ABC#:>

242:
old  <	; Parameter pointer Â£temporary1956 96>
new  <	; Initializer String    -0x123ABC>

243:
old  <	mov [rbp + 96], rsi>
new  <	db "   -0x123ABC", 0>

245:
old  < strtoul$7:>
new  <section .data>

246:
old  <	; Address Â£temporary1957 chars>
new  <>

247:
old  <	mov rsi, rbp>
new  <string_2020202D0X123abc#:>

248:
old  <	add rsi, 44>
new  <	; Initializer String    -0X123abc>

249:
old  <>
new  <	db "   -0X123abc", 0>

250:
old  < strtoul$8:>
new  <>

251:
old  <	; Parameter pointer Â£temporary1957 104>
new  <section .data>

252:
old  <	mov [rbp + 104], rsi>
new  <>

253:
old  <>
new  <string_2020202B123ABC#:>

254:
old  < strtoul$9:>
new  <	; Initializer String    +123ABC>

255:
old  <	; Call sscanf 56 16>
new  <	db "   +123ABC", 0>

256:
old  <	mov qword [rbp + 56], strtoul$10>
new  <>

257:
old  <	mov [rbp + 64], rbp>
new  <section .data>

258:
old  <	add rbp, 56>
new  <>

259:
old  <	mov rdi, rbp>
new  <string_2020202D123ABC#:>

260:
old  <	add rdi, 16>
new  <	; Initializer String    -123ABC>

261:
old  <	jmp sscanf>
new  <	db "   -123ABC", 0>

263:
old  < strtoul$10:>
new  <section .text>

264:
old  <	; PostCall 56>
new  <>

265:
old  <>
new  < strtol_test:>

266:
old  < strtoul$11:>
new  <	; Assign base 0>

267:
old  <	; Equal 15 endp 0>
new  <	mov dword [rbp + 24], 0>

268:
old  <	cmp qword [rbp + 32], 0>
new  <>

269:
old  <	je strtoul$15>
new  < strtol_test$1:>

270:
old  <>
new  <	; Assign text[0] 32>

271:
old  < strtoul$12:>
new  <	mov byte [rbp + 28], 32>

272:
old  <	; Dereference Â£temporary1960 -> endp endp 0>
new  <>

273:
old  <	mov rsi, [rbp + 32]>
new  < strtol_test$2:>

274:
old  <>
new  <	; Assign text[1] 32>

275:
old  < strtoul$13:>
new  <	mov byte [rbp + 29], 32>

276:
old  <	; IntegralToIntegral Â£temporary1961 chars>
new  <>

277:
old  <	mov eax, [rbp + 44]>
new  < strtol_test$3:>

278:
old  <	mov rbx, 4294967295>
new  <	; Assign text[2] 32>

279:
old  <	and rax, rbx>
new  <	mov byte [rbp + 30], 32>

281:
old  < strtoul$14:>
new  < strtol_test$4:>

282:
old  <	; BinaryAdd Â£temporary1960 -> endp s Â£temporary1961>
new  <	; Assign text[3] 43>

283:
old  <	mov rbx, [rbp + 24]>
new  <	mov byte [rbp + 31], 43>

284:
old  <	add rbx, rax>
new  <>

285:
old  <	mov [rsi], rbx>
new  < strtol_test$5:>

286:
old  <>
new  <	; Assign text[4] 49>

287:
old  < strtoul$15:>
new  <	mov byte [rbp + 32], 49>

288:
old  <	; Return value>
new  <>

289:
old  <	mov rbx, [rbp + 48]>
new  < strtol_test$6:>

290:
old  <	mov rax, [rbp]>
new  <	; Assign text[5] 50>

291:
old  <	mov rdi, [rbp + 16]>
new  <	mov byte [rbp + 33], 50>

292:
old  <	mov rbp, [rbp + 8]>
new  <>

293:
old  <	jmp rax>
new  < strtol_test$7:>

294:
old  <>
new  <	; Assign text[6] 51>

295:
old  < strtoul$16:>
new  <	mov byte [rbp + 34], 51>

296:
old  <	; FunctionEnd strtoul>
new  <>

297:
old  <>
new  < strtol_test$8:>

298:
old  <section .text>
new  <	; Assign text[7] 97>

299:
old  <>
new  <	mov byte [rbp + 35], 97>

300:
old  < atof:>
new  <>

301:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < strtol_test$9:>

302:
old  <>
new  <	; Assign text[8] 98>

303:
old  < atof$1:>
new  <	mov byte [rbp + 36], 98>

304:
old  <	; Parameter pointer s 56>
new  <>

305:
old  <	mov rax, [rbp + 24]>
new  < strtol_test$10:>

306:
old  <	mov [rbp + 56], rax>
new  <	; Assign text[9] 99>

307:
old  <>
new  <	mov byte [rbp + 37], 99>

308:
old  < atof$2:>
new  <>

309:
old  <	; Parameter pointer 0 64>
new  < strtol_test$11:>

310:
old  <	mov qword [rbp + 64], 0>
new  <	; Assign text[10] 0>

311:
old  <>
new  <	mov byte [rbp + 38], 0>

312:
old  < atof$3:>
new  <>

313:
old  <	; Call strtod 32 0>
new  < strtol_test$12:>

314:
old  <	mov qword [rbp + 32], atof$4>
new  <	; PreCall 47 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

315:
old  <	mov [rbp + 40], rbp>
new  <>

316:
old  <	add rbp, 32>
new  < strtol_test$13:>

317:
old  <	jmp strtod>
new  <	; Parameter pointer text 71>

318:
old  <>
new  <	mov [rbp + 71], rbp>

319:
old  < atof$4:>
new  <	add qword [rbp + 71], 28>

320:
old  <	; PostCall 32>
new  <>

321:
old  <>
new  < strtol_test$14:>

322:
old  < atof$5:>
new  <	; Address Â£temporary2000 pointer>

323:
old  <	; GetReturnValue Â£temporary1966>
new  <	mov rsi, rbp>

324:
old  <>
new  <	add rsi, 39>

325:
old  < atof$6:>
new  <>

326:
old  <	; Return Â£temporary1966>
new  < strtol_test$15:>

327:
old  <	mov rax, [rbp]>
new  <	; Parameter pointer Â£temporary2000 79>

328:
old  <	mov rdi, [rbp + 16]>
new  <	mov [rbp + 79], rsi>

329:
old  <	mov rbp, [rbp + 8]>
new  <>

330:
old  <	jmp rax>
new  < strtol_test$16:>

331:
old  <>
new  <	; Parameter signedint base 87>

332:
old  < atof$7:>
new  <	mov eax, [rbp + 24]>

333:
old  <	; FunctionEnd atof>
new  <	mov [rbp + 87], eax>

335:
old  <section .data>
new  < strtol_test$17:>

336:
old  <>
new  <	; Call strtol 47 0>

337:
old  <string_25lf25n#:>
new  <	mov qword [rbp + 47], strtol_test$18>

338:
old  <	; Initializer String %lf%n>
new  <	mov [rbp + 55], rbp>

339:
old  <	db "%lf%n", 0>
new  <	add rbp, 47>

340:
old  <>
new  <	jmp strtol>

341:
old  <section .text>
new  <>

342:
old  <>
new  < strtol_test$18:>

343:
old  < strtod:>
new  <	; PostCall 47>

344:
old  <	; Assign chars 0>
new  <>

345:
old  <	mov dword [rbp + 40], 0>
new  < strtol_test$19:>

346:
old  <>
new  <	; GetReturnValue Â£temporary2001>

347:
old  < strtod$1:>
new  <>

348:
old  <	; PushFloat 0>
new  < strtol_test$20:>

349:
old  <	fldz>
new  <	; Assign value Â£temporary2001>

350:
old  <>
new  <	mov [rbp + 47], rbx>

351:
old  < strtod$2:>
new  <>

352:
old  <	; PopFloat value>
new  < strtol_test$21:>

353:
old  <	fstp qword [rbp + 44]>
new  <	; PreCall 55 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

355:
old  < strtod$3:>
new  < strtol_test$22:>

356:
old  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter pointer "<%s> <%li> <%s> <%i>\n" 79>

357:
old  <>
new  <	mov qword [rbp + 79], string_3C25s3E203C25li3E203C25s3E203C25i3E0A#>

358:
old  < strtod$4:>
new  <>

359:
old  <	; Parameter pointer s 76>
new  < strtol_test$23:>

360:
old  <	mov rax, [rbp + 24]>
new  <	; Parameter pointer text 87>

361:
old  <	mov [rbp + 76], rax>
new  <	mov [rbp + 87], rbp>

362:
old  <>
new  <	add qword [rbp + 87], 28>

363:
old  < strtod$5:>
new  <>

364:
old  <	; Parameter pointer "%lf%n" 84>
new  < strtol_test$24:>

365:
old  <	mov qword [rbp + 84], string_25lf25n#>
new  <	; Parameter signed long int value 95>

366:
old  <>
new  <	mov rax, [rbp + 47]>

367:
old  < strtod$6:>
new  <	mov [rbp + 95], rax>

368:
old  <	; Address Â£temporary1967 value>
new  <>

369:
old  <	mov rsi, rbp>
new  < strtol_test$25:>

370:
old  <	add rsi, 44>
new  <	; Parameter pointer pointer 103>

371:
old  <>
new  <	mov rax, [rbp + 39]>

372:
old  < strtod$7:>
new  <	mov [rbp + 103], rax>

373:
old  <	; Parameter pointer Â£temporary1967 92>
new  <>

374:
old  <	mov [rbp + 92], rsi>
new  < strtol_test$26:>

375:
old  <>
new  <	; Parameter signedint base 111>

376:
old  < strtod$8:>
new  <	mov eax, [rbp + 24]>

377:
old  <	; Address Â£temporary1968 chars>
new  <	mov [rbp + 111], eax>

378:
old  <	mov rsi, rbp>
new  <>

379:
old  <	add rsi, 40>
new  < strtol_test$27:>

380:
old  <>
new  <	; Call printf 55 28>

381:
old  < strtod$9:>
new  <	mov qword [rbp + 55], strtol_test$28>

382:
old  <	; Parameter pointer Â£temporary1968 100>
new  <	mov [rbp + 63], rbp>

383:
old  <	mov [rbp + 100], rsi>
new  <	add rbp, 55>

384:
old  <>
new  <	mov rdi, rbp>

385:
old  < strtod$10:>
new  <	add rdi, 28>

386:
old  <	; Call sscanf 52 16>
new  <	jmp printf>

387:
old  <	mov qword [rbp + 52], strtod$11>
new  <>

388:
old  <	mov [rbp + 60], rbp>
new  < strtol_test$28:>

389:
old  <	add rbp, 52>
new  <	; PostCall 55>

390:
old  <	mov rdi, rbp>
new  <>

391:
old  <	add rdi, 16>
new  < strtol_test$29:>

392:
old  <	jmp sscanf>
new  <	; Assign base 0>

393:
old  <>
new  <	mov dword [rbp + 24], 0>

394:
old  < strtod$11:>
new  <>

395:
old  <	; PostCall 52>
new  < strtol_test$30:>

396:
old  <>
new  <	; Assign text[0] 32>

397:
old  < strtod$12:>
new  <	mov byte [rbp + 28], 32>

398:
old  <	; Equal 16 endp 0>
new  <>

399:
old  <	cmp qword [rbp + 32], 0>
new  < strtol_test$31:>

400:
old  <	je strtod$16>
new  <	; Assign text[1] 32>

401:
old  <>
new  <	mov byte [rbp + 29], 32>

402:
old  < strtod$13:>
new  <>

403:
old  <	; Dereference Â£temporary1971 -> endp endp 0>
new  < strtol_test$32:>

404:
old  <	mov rsi, [rbp + 32]>
new  <	; Assign text[2] 32>

405:
old  <>
new  <	mov byte [rbp + 30], 32>

406:
old  < strtod$14:>
new  <>

407:
old  <	; IntegralToIntegral Â£temporary1972 chars>
new  < strtol_test$33:>

408:
old  <	mov eax, [rbp + 40]>
new  <	; Assign text[3] 43>

409:
old  <	mov rbx, 4294967295>
new  <	mov byte [rbp + 31], 43>

410:
old  <	and rax, rbx>
new  <>

411:
old  <>
new  < strtol_test$34:>

412:
old  < strtod$15:>
new  <	; Assign text[4] 48>

413:
old  <	; BinaryAdd Â£temporary1971 -> endp s Â£temporary1972>
new  <	mov byte [rbp + 32], 48>

414:
old  <	mov rbx, [rbp + 24]>
new  <>

415:
old  <	add rbx, rax>
new  < strtol_test$35:>

416:
old  <	mov [rsi], rbx>
new  <	; Assign text[5] 49>

417:
old  <>
new  <	mov byte [rbp + 33], 49>

418:
old  < strtod$16:>
new  <>

419:
old  <	; PushFloat value>
new  < strtol_test$36:>

420:
old  <	fld qword [rbp + 44]>
new  <	; Assign text[6] 50>

421:
old  <>
new  <	mov byte [rbp + 34], 50>

422:
old  < strtod$17:>
new  <>

423:
old  <	; Return value>
new  < strtol_test$37:>

424:
old  <	mov rax, [rbp]>
new  <	; Assign text[7] 51>

425:
old  <	mov rdi, [rbp + 16]>
new  <	mov byte [rbp + 35], 51>

426:
old  <	mov rbp, [rbp + 8]>
new  <>

427:
old  <	jmp rax>
new  < strtol_test$38:>

428:
old  <>
new  <	; Assign text[8] 97>

429:
old  < strtod$18:>
new  <	mov byte [rbp + 36], 97>

430:
old  <	; FunctionEnd strtod>
new  <>

431:
old  <>
new  < strtol_test$39:>

432:
old  <section .text>
new  <	; Assign text[9] 98>

433:
old  <>
new  <	mov byte [rbp + 37], 98>

434:
old  < abort:>
new  <>

435:
old  <	; AssignRegister rax 60>
new  < strtol_test$40:>

436:
old  <	mov rax, 60>
new  <	; Assign text[10] 99>

437:
old  <>
new  <	mov byte [rbp + 38], 99>

438:
old  < abort$1:>
new  <>

439:
old  <	; AssignRegister rdi -1>
new  < strtol_test$41:>

440:
old  <	mov rdi, -1>
new  <	; Assign text[11] 0>

441:
old  <>
new  <	mov byte [rbp + 39], 0>

442:
old  < abort$2:>
new  <>

443:
old  <	; SysCall>
new  < strtol_test$42:>

444:
old  <	syscall>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

446:
old  < abort$3:>
new  < strtol_test$43:>

447:
old  <	; Return>
new  <	; Parameter pointer text 72>

448:
old  <	mov rax, [rbp]>
new  <	mov [rbp + 72], rbp>

449:
old  <	mov rdi, [rbp + 16]>
new  <	add qword [rbp + 72], 28>

450:
old  <	mov rbp, [rbp + 8]>
new  <>

451:
old  <	jmp rax>
new  < strtol_test$44:>

452:
old  <>
new  <	; Address Â£temporary2015 pointer>

453:
old  < abort$4:>
new  <	mov rsi, rbp>

454:
old  <	; FunctionEnd abort>
new  <	add rsi, 40>

456:
old  <section .text>
new  < strtol_test$45:>

457:
old  <>
new  <	; Parameter pointer Â£temporary2015 80>

458:
old  < getenv:>
new  <	mov [rbp + 80], rsi>

459:
old  <	; Return 0>
new  <>

460:
old  <	mov rbx, 0>
new  < strtol_test$46:>

461:
old  <	mov rax, [rbp]>
new  <	; Parameter signedint base 88>

462:
old  <	mov rdi, [rbp + 16]>
new  <	mov eax, [rbp + 24]>

463:
old  <	mov rbp, [rbp + 8]>
new  <	mov [rbp + 88], eax>

464:
old  <	jmp rax>
new  <>

465:
old  <>
new  < strtol_test$47:>

466:
old  < getenv$1:>
new  <	; Call strtol 48 0>

467:
old  <	; FunctionEnd getenv>
new  <	mov qword [rbp + 48], strtol_test$48>

468:
old  <>
new  <	mov [rbp + 56], rbp>

469:
old  <section .text>
new  <	add rbp, 48>

470:
old  <>
new  <	jmp strtol>

471:
old  < system:>
new  <>

472:
old  <	; Return -1>
new  < strtol_test$48:>

473:
old  <	mov ebx, -1>
new  <	; PostCall 48>

474:
old  <	mov rax, [rbp]>
new  <>

475:
old  <	mov rdi, [rbp + 16]>
new  < strtol_test$49:>

476:
old  <	mov rbp, [rbp + 8]>
new  <	; GetReturnValue Â£temporary2016>

477:
old  <	jmp rax>
new  <>

478:
old  <>
new  < strtol_test$50:>

479:
old  < system$1:>
new  <	; Assign value Â£temporary2016>

480:
old  <	; FunctionEnd system>
new  <	mov [rbp + 48], rbx>

482:
old  <section .text>
new  < strtol_test$51:>

483:
old  <>
new  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

484:
old  < memswp:>
new  <>

485:
old  <	; IntegralToIntegral Â£temporary1979 value1>
new  < strtol_test$52:>

486:
old  <	mov rax, [rbp + 24]>
new  <	; Parameter pointer "<%s> <%li> <%s> <%i>\n" 80>

487:
old  <>
new  <	mov qword [rbp + 80], string_3C25s3E203C25li3E203C25s3E203C25i3E0A#>

488:
old  < memswp$1:>
new  <>

489:
old  <	; Assign charValue1 Â£temporary1979>
new  < strtol_test$53:>

490:
old  <	mov [rbp + 44], rax>
new  <	; Parameter pointer text 88>

491:
old  <>
new  <	mov [rbp + 88], rbp>

492:
old  < memswp$2:>
new  <	add qword [rbp + 88], 28>

493:
old  <	; IntegralToIntegral Â£temporary1980 value2>
new  <>

494:
old  <	mov rax, [rbp + 32]>
new  < strtol_test$54:>

495:
old  <>
new  <	; Parameter signed long int value 96>

496:
old  < memswp$3:>
new  <	mov rax, [rbp + 48]>

497:
old  <	; Assign charValue2 Â£temporary1980>
new  <	mov [rbp + 96], rax>

498:
old  <	mov [rbp + 52], rax>
new  <>

499:
old  <>
new  < strtol_test$55:>

500:
old  < memswp$4:>
new  <	; Parameter pointer pointer 104>

501:
old  <	; Assign index 0>
new  <	mov rax, [rbp + 40]>

502:
old  <	mov dword [rbp + 60], 0>
new  <	mov [rbp + 104], rax>

504:
old  < memswp$5:>
new  < strtol_test$56:>

505:
old  <	; SignedGreaterThanEqual 23 index valueSize>
new  <	; Parameter signedint base 112>

506:
old  <	mov eax, [rbp + 40]>
new  <	mov eax, [rbp + 24]>

507:
old  <	cmp [rbp + 60], eax>
new  <	mov [rbp + 112], eax>

508:
old  <	jge memswp$23>
new  <>

509:
old  <>
new  < strtol_test$57:>

510:
old  < memswp$6:>
new  <	; Call printf 56 28>

511:
old  <	; IntegralToIntegral Â£temporary1984 index>
new  <	mov qword [rbp + 56], strtol_test$58>

512:
old  <	mov eax, [rbp + 60]>
new  <	mov [rbp + 64], rbp>

513:
old  <	mov rbx, 4294967295>
new  <	add rbp, 56>

514:
old  <	and rax, rbx>
new  <	mov rdi, rbp>

515:
old  <>
new  <	add rdi, 28>

516:
old  < memswp$7:>
new  <	jmp printf>

517:
old  <	; BinaryAdd Â£temporary1986 charValue1 Â£temporary1984>
new  <>

518:
old  <	mov rsi, [rbp + 44]>
new  < strtol_test$58:>

519:
old  <	add rsi, rax>
new  <	; PostCall 56>

521:
old  < memswp$8:>
new  < strtol_test$59:>

522:
old  <	; Dereference Â£temporary1983 -> Â£temporary1986 Â£temporary1986 0>
new  <	; Assign base 0>

523:
old  <>
new  <	mov dword [rbp + 24], 0>

524:
old  < memswp$9:>
new  <>

525:
old  <	; Assign tempValue Â£temporary1983 -> Â£temporary1986>
new  < strtol_test$60:>

526:
old  <	mov al, [rsi]>
new  <	; Assign text[0] 32>

527:
old  <	mov [rbp + 64], al>
new  <	mov byte [rbp + 28], 32>

529:
old  < memswp$10:>
new  < strtol_test$61:>

530:
old  <	; IntegralToIntegral Â£temporary1988 index>
new  <	; Assign text[1] 32>

531:
old  <	mov eax, [rbp + 60]>
new  <	mov byte [rbp + 29], 32>

532:
old  <	mov rbx, 4294967295>
new  <>

533:
old  <	and rax, rbx>
new  < strtol_test$62:>

534:
old  <>
new  <	; Assign text[2] 32>

535:
old  < memswp$11:>
new  <	mov byte [rbp + 30], 32>

536:
old  <	; BinaryAdd Â£temporary1990 charValue1 Â£temporary1988>
new  <>

537:
old  <	mov rsi, [rbp + 44]>
new  < strtol_test$63:>

538:
old  <	add rsi, rax>
new  <	; Assign text[3] 43>

539:
old  <>
new  <	mov byte [rbp + 31], 43>

540:
old  < memswp$12:>
new  <>

541:
old  <	; Dereference Â£temporary1987 -> Â£temporary1990 Â£temporary1990 0>
new  < strtol_test$64:>

542:
old  <>
new  <	; Assign text[4] 48>

543:
old  < memswp$13:>
new  <	mov byte [rbp + 32], 48>

544:
old  <	; IntegralToIntegral Â£temporary1992 index>
new  <>

545:
old  <	mov eax, [rbp + 60]>
new  < strtol_test$65:>

546:
old  <	mov rbx, 4294967295>
new  <	; Assign text[5] 120>

547:
old  <	and rax, rbx>
new  <	mov byte [rbp + 33], 120>

549:
old  < memswp$14:>
new  < strtol_test$66:>

550:
old  <	; BinaryAdd Â£temporary1994 charValue2 Â£temporary1992>
new  <	; Assign text[6] 49>

551:
old  <	mov rdi, [rbp + 52]>
new  <	mov byte [rbp + 34], 49>

552:
old  <	add rdi, rax>
new  <>

553:
old  <>
new  < strtol_test$67:>

554:
old  < memswp$15:>
new  <	; Assign text[7] 50>

555:
old  <	; Dereference Â£temporary1991 -> Â£temporary1994 Â£temporary1994 0>
new  <	mov byte [rbp + 35], 50>

557:
old  < memswp$16:>
new  < strtol_test$68:>

558:
old  <	; Assign Â£temporary1987 -> Â£temporary1990 Â£temporary1991 -> Â£temporary1994>
new  <	; Assign text[8] 51>

559:
old  <	mov al, [rdi]>
new  <	mov byte [rbp + 36], 51>

560:
old  <	mov [rsi], al>
new  <>

561:
old  <>
new  < strtol_test$69:>

562:
old  < memswp$17:>
new  <	; Assign text[9] 65>

563:
old  <	; IntegralToIntegral Â£temporary1996 index>
new  <	mov byte [rbp + 37], 65>

564:
old  <	mov eax, [rbp + 60]>
new  <>

565:
old  <	mov rbx, 4294967295>
new  < strtol_test$70:>

566:
old  <	and rax, rbx>
new  <	; Assign text[10] 66>

567:
old  <>
new  <	mov byte [rbp + 38], 66>

568:
old  < memswp$18:>
new  <>

569:
old  <	; BinaryAdd Â£temporary1998 charValue2 Â£temporary1996>
new  < strtol_test$71:>

570:
old  <	mov rsi, [rbp + 52]>
new  <	; Assign text[11] 67>

571:
old  <	add rsi, rax>
new  <	mov byte [rbp + 39], 67>

573:
old  < memswp$19:>
new  < strtol_test$72:>

574:
old  <	; Dereference Â£temporary1995 -> Â£temporary1998 Â£temporary1998 0>
new  <	; Assign text[12] 0>

575:
old  <>
new  <	mov byte [rbp + 40], 0>

576:
old  < memswp$20:>
new  <>

577:
old  <	; Assign Â£temporary1995 -> Â£temporary1998 tempValue>
new  < strtol_test$73:>

578:
old  <	mov al, [rbp + 64]>
new  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

579:
old  <	mov [rsi], al>
new  <>

580:
old  <>
new  < strtol_test$74:>

581:
old  < memswp$21:>
new  <	; Parameter pointer text 73>

582:
old  <	; BinaryAdd index index 1>
new  <	mov [rbp + 73], rbp>

583:
old  <	inc dword [rbp + 60]>
new  <	add qword [rbp + 73], 28>

585:
old  < memswp$22:>
new  < strtol_test$75:>

586:
old  <	; Goto 5>
new  <	; Address Â£temporary2031 pointer>

587:
old  <	jmp memswp$5>
new  <	mov rsi, rbp>

588:
old  <>
new  <	add rsi, 41>

589:
old  < memswp$23:>
new  <>

590:
old  <	; Return>
new  < strtol_test$76:>

591:
old  <	mov rax, [rbp]>
new  <	; Parameter pointer Â£temporary2031 81>

592:
old  <	mov rdi, [rbp + 16]>
new  <	mov [rbp + 81], rsi>

593:
old  <	mov rbp, [rbp + 8]>
new  <>

594:
old  <	jmp rax>
new  < strtol_test$77:>

595:
old  <>
new  <	; Parameter signedint base 89>

596:
old  < memswp$24:>
new  <	mov eax, [rbp + 24]>

597:
old  <	; FunctionEnd memswp>
new  <	mov [rbp + 89], eax>

599:
old  <section .data>
new  < strtol_test$78:>

600:
old  <>
new  <	; Call strtol 49 0>

601:
old  <int4$2#:>
new  <	mov qword [rbp + 49], strtol_test$79>

602:
old  <	; Initializer SignedInt 2>
new  <	mov [rbp + 57], rbp>

603:
old  <	dd 2>
new  <	add rbp, 49>

604:
old  <>
new  <	jmp strtol>

605:
old  <section .text>
new  <>

606:
old  <>
new  < strtol_test$79:>

607:
old  < bsearch:>
new  <	; PostCall 49>

608:
old  <	; Assign firstIndex 0>
new  <>

609:
old  <	mov dword [rbp + 56], 0>
new  < strtol_test$80:>

610:
old  <>
new  <	; GetReturnValue Â£temporary2032>

611:
old  < bsearch$1:>
new  <>

612:
old  <	; BinarySubtract lastIndex listSize 1>
new  < strtol_test$81:>

613:
old  <	mov eax, [rbp + 40]>
new  <	; Assign value Â£temporary2032>

614:
old  <	dec eax>
new  <	mov [rbp + 49], rbx>

615:
old  <	mov [rbp + 60], eax>
new  <>

616:
old  <>
new  < strtol_test$82:>

617:
old  < bsearch$2:>
new  <	; PreCall 57 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

618:
old  <	; NotEqual 4 listSize 0>
new  <>

619:
old  <	cmp dword [rbp + 40], 0>
new  < strtol_test$83:>

620:
old  <	jne bsearch$4>
new  <	; Parameter pointer "<%s> <%li> <%s> <%i>\n" 81>

621:
old  <>
new  <	mov qword [rbp + 81], string_3C25s3E203C25li3E203C25s3E203C25i3E0A#>

622:
old  < bsearch$3:>
new  <>

623:
old  <	; Return 0>
new  < strtol_test$84:>

624:
old  <	mov rbx, 0>
new  <	; Parameter pointer text 89>

625:
old  <	mov rax, [rbp]>
new  <	mov [rbp + 89], rbp>

626:
old  <	mov rdi, [rbp + 16]>
new  <	add qword [rbp + 89], 28>

627:
old  <	mov rbp, [rbp + 8]>
new  <>

628:
old  <	jmp rax>
new  < strtol_test$85:>

629:
old  <>
new  <	; Parameter signed long int value 97>

630:
old  < bsearch$4:>
new  <	mov rax, [rbp + 49]>

631:
old  <	; IntegralToIntegral Â£temporary2001 valueList>
new  <	mov [rbp + 97], rax>

632:
old  <	mov rbx, [rbp + 32]>
new  <>

633:
old  <>
new  < strtol_test$86:>

634:
old  < bsearch$5:>
new  <	; Parameter pointer pointer 105>

635:
old  <	; SignedMultiply Â£temporary2002 firstIndex valueSize>
new  <	mov rax, [rbp + 41]>

636:
old  <	mov eax, [rbp + 56]>
new  <	mov [rbp + 105], rax>

637:
old  <	xor edx, edx>
new  <>

638:
old  <	imul dword [rbp + 44]>
new  < strtol_test$87:>

639:
old  <>
new  <	; Parameter signedint base 113>

640:
old  < bsearch$6:>
new  <	mov eax, [rbp + 24]>

641:
old  <	; IntegralToIntegral Â£temporary2003 Â£temporary2002>
new  <	mov [rbp + 113], eax>

642:
old  <	mov rcx, 4294967295>
new  <>

643:
old  <	and rax, rcx>
new  < strtol_test$88:>

644:
old  <>
new  <	; Call printf 57 28>

645:
old  < bsearch$7:>
new  <	mov qword [rbp + 57], strtol_test$89>

646:
old  <	; BinaryAdd firstValuePtr Â£temporary2001 Â£temporary2003>
new  <	mov [rbp + 65], rbp>

647:
old  <	add rbx, rax>
new  <	add rbp, 57>

648:
old  <	mov [rbp + 64], rbx>
new  <	mov rdi, rbp>

649:
old  <>
new  <	add rdi, 28>

650:
old  < bsearch$8:>
new  <	jmp printf>

651:
old  <	; PreCall 72 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

652:
old  <>
new  < strtol_test$89:>

653:
old  < bsearch$9:>
new  <	; PostCall 57>

654:
old  <	; Parameter pointer keyPtr 96>
new  <>

655:
old  <	mov rax, [rbp + 24]>
new  < strtol_test$90:>

656:
old  <	mov [rbp + 96], rax>
new  <	; Assign base 0>

657:
old  <>
new  <	mov dword [rbp + 24], 0>

658:
old  < bsearch$10:>
new  <>

659:
old  <	; Parameter pointer firstValuePtr 104>
new  < strtol_test$91:>

660:
old  <	mov rax, [rbp + 64]>
new  <	; Assign text[0] 32>

661:
old  <	mov [rbp + 104], rax>
new  <	mov byte [rbp + 28], 32>

663:
old  < bsearch$11:>
new  < strtol_test$92:>

664:
old  <	; Call compare 72 0>
new  <	; Assign text[1] 32>

665:
old  <	mov qword [rbp + 72], bsearch$12>
new  <	mov byte [rbp + 29], 32>

666:
old  <	mov [rbp + 80], rbp>
new  <>

667:
old  <	add rbp, 72>
new  < strtol_test$93:>

668:
old  <	mov rax, [rbp + 48]>
new  <	; Assign text[2] 32>

669:
old  <	jmp rax>
new  <	mov byte [rbp + 30], 32>

671:
old  < bsearch$12:>
new  < strtol_test$94:>

672:
old  <	; PostCall 72>
new  <	; Assign text[3] 43>

673:
old  <>
new  <	mov byte [rbp + 31], 43>

674:
old  < bsearch$13:>
new  <>

675:
old  <	; GetReturnValue Â£temporary2006>
new  < strtol_test$95:>

676:
old  <>
new  <	; Assign text[4] 48>

677:
old  < bsearch$14:>
new  <	mov byte [rbp + 32], 48>

678:
old  <	; Assign firstCompare Â£temporary2006>
new  <>

679:
old  <	mov [rbp + 72], ebx>
new  < strtol_test$96:>

680:
old  <>
new  <	; Assign text[5] 88>

681:
old  < bsearch$15:>
new  <	mov byte [rbp + 33], 88>

682:
old  <	; SignedGreaterThanEqual 17 firstCompare 0>
new  <>

683:
old  <	cmp dword [rbp + 72], 0>
new  < strtol_test$97:>

684:
old  <	jge bsearch$17>
new  <	; Assign text[6] 49>

685:
old  <>
new  <	mov byte [rbp + 34], 49>

686:
old  < bsearch$16:>
new  <>

687:
old  <	; Return 0>
new  < strtol_test$98:>

688:
old  <	mov rbx, 0>
new  <	; Assign text[7] 50>

689:
old  <	mov rax, [rbp]>
new  <	mov byte [rbp + 35], 50>

690:
old  <	mov rdi, [rbp + 16]>
new  <>

691:
old  <	mov rbp, [rbp + 8]>
new  < strtol_test$99:>

692:
old  <	jmp rax>
new  <	; Assign text[8] 51>

693:
old  <>
new  <	mov byte [rbp + 36], 51>

694:
old  < bsearch$17:>
new  <>

695:
old  <	; NotEqual 19 firstCompare 0>
new  < strtol_test$100:>

696:
old  <	cmp dword [rbp + 72], 0>
new  <	; Assign text[9] 97>

697:
old  <	jne bsearch$19>
new  <	mov byte [rbp + 37], 97>

699:
old  < bsearch$18:>
new  < strtol_test$101:>

700:
old  <	; Return firstValuePtr>
new  <	; Assign text[10] 98>

701:
old  <	mov rbx, [rbp + 64]>
new  <	mov byte [rbp + 38], 98>

702:
old  <	mov rax, [rbp]>
new  <>

703:
old  <	mov rdi, [rbp + 16]>
new  < strtol_test$102:>

704:
old  <	mov rbp, [rbp + 8]>
new  <	; Assign text[11] 99>

705:
old  <	jmp rax>
new  <	mov byte [rbp + 39], 99>

707:
old  < bsearch$19:>
new  < strtol_test$103:>

708:
old  <	; IntegralToIntegral Â£temporary2009 valueList>
new  <	; Assign text[12] 0>

709:
old  <	mov rbx, [rbp + 32]>
new  <	mov byte [rbp + 40], 0>

711:
old  < bsearch$20:>
new  < strtol_test$104:>

712:
old  <	; SignedMultiply Â£temporary2010 lastIndex valueSize>
new  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

713:
old  <	mov eax, [rbp + 60]>
new  <>

714:
old  <	xor edx, edx>
new  < strtol_test$105:>

715:
old  <	imul dword [rbp + 44]>
new  <	; Parameter pointer text 73>

716:
old  <>
new  <	mov [rbp + 73], rbp>

717:
old  < bsearch$21:>
new  <	add qword [rbp + 73], 28>

718:
old  <	; IntegralToIntegral Â£temporary2011 Â£temporary2010>
new  <>

719:
old  <	mov rcx, 4294967295>
new  < strtol_test$106:>

720:
old  <	and rax, rcx>
new  <	; Address Â£temporary2047 pointer>

721:
old  <>
new  <	mov rsi, rbp>

722:
old  < bsearch$22:>
new  <	add rsi, 41>

723:
old  <	; BinaryAdd lastValuePtr Â£temporary2009 Â£temporary2011>
new  <>

724:
old  <	add rbx, rax>
new  < strtol_test$107:>

725:
old  <	mov [rbp + 64], rbx>
new  <	; Parameter pointer Â£temporary2047 81>

726:
old  <>
new  <	mov [rbp + 81], rsi>

727:
old  < bsearch$23:>
new  <>

728:
old  <	; PreCall 72 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < strtol_test$108:>

729:
old  <>
new  <	; Parameter signedint base 89>

730:
old  < bsearch$24:>
new  <	mov eax, [rbp + 24]>

731:
old  <	; Parameter pointer keyPtr 96>
new  <	mov [rbp + 89], eax>

732:
old  <	mov rax, [rbp + 24]>
new  <>

733:
old  <	mov [rbp + 96], rax>
new  < strtol_test$109:>

734:
old  <>
new  <	; Call strtol 49 0>

735:
old  < bsearch$25:>
new  <	mov qword [rbp + 49], strtol_test$110>

736:
old  <	; Parameter pointer lastValuePtr 104>
new  <	mov [rbp + 57], rbp>

737:
old  <	mov rax, [rbp + 64]>
new  <	add rbp, 49>

738:
old  <	mov [rbp + 104], rax>
new  <	jmp strtol>

740:
old  < bsearch$26:>
new  < strtol_test$110:>

741:
old  <	; Call compare 72 0>
new  <	; PostCall 49>

742:
old  <	mov qword [rbp + 72], bsearch$27>
new  <>

743:
old  <	mov [rbp + 80], rbp>
new  < strtol_test$111:>

744:
old  <	add rbp, 72>
new  <	; GetReturnValue Â£temporary2048>

745:
old  <	mov rax, [rbp + 48]>
new  <>

746:
old  <	jmp rax>
new  < strtol_test$112:>

747:
old  <>
new  <	; Assign value Â£temporary2048>

748:
old  < bsearch$27:>
new  <	mov [rbp + 49], rbx>

749:
old  <	; PostCall 72>
new  <>

750:
old  <>
new  < strtol_test$113:>

751:
old  < bsearch$28:>
new  <	; PreCall 57 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

752:
old  <	; GetReturnValue Â£temporary2014>
new  <>

753:
old  <>
new  < strtol_test$114:>

754:
old  < bsearch$29:>
new  <	; Parameter pointer "<%s> <%li> <%s> <%i>\n" 81>

755:
old  <	; Assign lastCompare Â£temporary2014>
new  <	mov qword [rbp + 81], string_3C25s3E203C25li3E203C25s3E203C25i3E0A#>

756:
old  <	mov [rbp + 72], ebx>
new  <>

757:
old  <>
new  < strtol_test$115:>

758:
old  < bsearch$30:>
new  <	; Parameter pointer text 89>

759:
old  <	; SignedLessThanEqual 32 lastCompare 0>
new  <	mov [rbp + 89], rbp>

760:
old  <	cmp dword [rbp + 72], 0>
new  <	add qword [rbp + 89], 28>

761:
old  <	jle bsearch$32>
new  <>

762:
old  <>
new  < strtol_test$116:>

763:
old  < bsearch$31:>
new  <	; Parameter signed long int value 97>

764:
old  <	; Return 0>
new  <	mov rax, [rbp + 49]>

765:
old  <	mov rbx, 0>
new  <	mov [rbp + 97], rax>

766:
old  <	mov rax, [rbp]>
new  <>

767:
old  <	mov rdi, [rbp + 16]>
new  < strtol_test$117:>

768:
old  <	mov rbp, [rbp + 8]>
new  <	; Parameter pointer pointer 105>

769:
old  <	jmp rax>
new  <	mov rax, [rbp + 41]>

770:
old  <>
new  <	mov [rbp + 105], rax>

771:
old  < bsearch$32:>
new  <>

772:
old  <	; NotEqual 34 lastCompare 0>
new  < strtol_test$118:>

773:
old  <	cmp dword [rbp + 72], 0>
new  <	; Parameter signedint base 113>

774:
old  <	jne bsearch$34>
new  <	mov eax, [rbp + 24]>

775:
old  <>
new  <	mov [rbp + 113], eax>

776:
old  < bsearch$33:>
new  <>

777:
old  <	; Return lastValuePtr>
new  < strtol_test$119:>

778:
old  <	mov rbx, [rbp + 64]>
new  <	; Call printf 57 28>

779:
old  <	mov rax, [rbp]>
new  <	mov qword [rbp + 57], strtol_test$120>

780:
old  <	mov rdi, [rbp + 16]>
new  <	mov [rbp + 65], rbp>

781:
old  <	mov rbp, [rbp + 8]>
new  <	add rbp, 57>

782:
old  <	jmp rax>
new  <	mov rdi, rbp>

783:
old  <>
new  <	add rdi, 28>

784:
old  < bsearch$34:>
new  <	jmp printf>

785:
old  <	; BinaryAdd Â£temporary2017 firstIndex lastIndex>
new  <>

786:
old  <	mov eax, [rbp + 56]>
new  < strtol_test$120:>

787:
old  <	add eax, [rbp + 60]>
new  <	; PostCall 57>

789:
old  < bsearch$35:>
new  < strtol_test$121:>

790:
old  <	; SignedDivide middleIndex Â£temporary2017 2>
new  <	; Assign base 0>

791:
old  <	xor edx, edx>
new  <	mov dword [rbp + 24], 0>

792:
old  <	idiv dword [int4$2#]>
new  <>

793:
old  <	mov [rbp + 64], eax>
new  < strtol_test$122:>

794:
old  <>
new  <	; Assign text[0] 32>

795:
old  < bsearch$36:>
new  <	mov byte [rbp + 28], 32>

796:
old  <	; IntegralToIntegral Â£temporary2019 valueList>
new  <>

797:
old  <	mov rbx, [rbp + 32]>
new  < strtol_test$123:>

798:
old  <>
new  <	; Assign text[1] 32>

799:
old  < bsearch$37:>
new  <	mov byte [rbp + 29], 32>

800:
old  <	; SignedMultiply Â£temporary2020 middleIndex valueSize>
new  <>

801:
old  <	mov eax, [rbp + 64]>
new  < strtol_test$124:>

802:
old  <	xor edx, edx>
new  <	; Assign text[2] 32>

803:
old  <	imul dword [rbp + 44]>
new  <	mov byte [rbp + 30], 32>

805:
old  < bsearch$38:>
new  < strtol_test$125:>

806:
old  <	; IntegralToIntegral Â£temporary2021 Â£temporary2020>
new  <	; Assign text[3] 45>

807:
old  <	mov rcx, 4294967295>
new  <	mov byte [rbp + 31], 45>

808:
old  <	and rax, rcx>
new  <>

809:
old  <>
new  < strtol_test$126:>

810:
old  < bsearch$39:>
new  <	; Assign text[4] 49>

811:
old  <	; BinaryAdd middleValuePtr Â£temporary2019 Â£temporary2021>
new  <	mov byte [rbp + 32], 49>

812:
old  <	add rbx, rax>
new  <>

813:
old  <	mov [rbp + 68], rbx>
new  < strtol_test$127:>

814:
old  <>
new  <	; Assign text[5] 50>

815:
old  < bsearch$40:>
new  <	mov byte [rbp + 33], 50>

816:
old  <	; PreCall 76 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

817:
old  <>
new  < strtol_test$128:>

818:
old  < bsearch$41:>
new  <	; Assign text[6] 51>

819:
old  <	; Parameter pointer keyPtr 100>
new  <	mov byte [rbp + 34], 51>

820:
old  <	mov rax, [rbp + 24]>
new  <>

821:
old  <	mov [rbp + 100], rax>
new  < strtol_test$129:>

822:
old  <>
new  <	; Assign text[7] 97>

823:
old  < bsearch$42:>
new  <	mov byte [rbp + 35], 97>

824:
old  <	; Parameter pointer middleValuePtr 108>
new  <>

825:
old  <	mov rax, [rbp + 68]>
new  < strtol_test$130:>

826:
old  <	mov [rbp + 108], rax>
new  <	; Assign text[8] 98>

827:
old  <>
new  <	mov byte [rbp + 36], 98>

828:
old  < bsearch$43:>
new  <>

829:
old  <	; Call compare 76 0>
new  < strtol_test$131:>

830:
old  <	mov qword [rbp + 76], bsearch$44>
new  <	; Assign text[9] 99>

831:
old  <	mov [rbp + 84], rbp>
new  <	mov byte [rbp + 37], 99>

832:
old  <	add rbp, 76>
new  <>

833:
old  <	mov rax, [rbp + 48]>
new  < strtol_test$132:>

834:
old  <	jmp rax>
new  <	; Assign text[10] 0>

835:
old  <>
new  <	mov byte [rbp + 38], 0>

836:
old  < bsearch$44:>
new  <>

837:
old  <	; PostCall 76>
new  < strtol_test$133:>

838:
old  <>
new  <	; PreCall 47 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

839:
old  < bsearch$45:>
new  <>

840:
old  <	; GetReturnValue Â£temporary2024>
new  < strtol_test$134:>

841:
old  <>
new  <	; Parameter pointer text 71>

842:
old  < bsearch$46:>
new  <	mov [rbp + 71], rbp>

843:
old  <	; Assign middleCompare Â£temporary2024>
new  <	add qword [rbp + 71], 28>

844:
old  <	mov [rbp + 76], ebx>
new  <>

845:
old  <>
new  < strtol_test$135:>

846:
old  < bsearch$47:>
new  <	; Address Â£temporary2061 pointer>

847:
old  <	; SignedGreaterThanEqual 50 middleCompare 0>
new  <	mov rsi, rbp>

848:
old  <	cmp dword [rbp + 76], 0>
new  <	add rsi, 39>

849:
old  <	jge bsearch$50>
new  <>

850:
old  <>
new  < strtol_test$136:>

851:
old  < bsearch$48:>
new  <	; Parameter pointer Â£temporary2061 79>

852:
old  <	; Assign lastIndex middleIndex>
new  <	mov [rbp + 79], rsi>

853:
old  <	mov eax, [rbp + 64]>
new  <>

854:
old  <	mov [rbp + 60], eax>
new  < strtol_test$137:>

855:
old  <>
new  <	; Parameter signedint base 87>

856:
old  < bsearch$49:>
new  <	mov eax, [rbp + 24]>

857:
old  <	; Goto 4>
new  <	mov [rbp + 87], eax>

858:
old  <	jmp bsearch$4>
new  <>

859:
old  <>
new  < strtol_test$138:>

860:
old  < bsearch$50:>
new  <	; Call strtol 47 0>

861:
old  <	; SignedLessThanEqual 53 middleCompare 0>
new  <	mov qword [rbp + 47], strtol_test$139>

862:
old  <	cmp dword [rbp + 76], 0>
new  <	mov [rbp + 55], rbp>

863:
old  <	jle bsearch$53>
new  <	add rbp, 47>

864:
old  <>
new  <	jmp strtol>

865:
old  < bsearch$51:>
new  <>

866:
old  <	; Assign firstIndex middleIndex>
new  < strtol_test$139:>

867:
old  <	mov eax, [rbp + 64]>
new  <	; PostCall 47>

868:
old  <	mov [rbp + 56], eax>
new  <>

869:
old  <>
new  < strtol_test$140:>

870:
old  < bsearch$52:>
new  <	; GetReturnValue Â£temporary2062>

871:
old  <	; Goto 4>
new  <>

872:
old  <	jmp bsearch$4>
new  < strtol_test$141:>

873:
old  <>
new  <	; Assign value Â£temporary2062>

874:
old  < bsearch$53:>
new  <	mov [rbp + 47], rbx>

875:
old  <	; Return middleValuePtr>
new  <>

876:
old  <	mov rbx, [rbp + 68]>
new  < strtol_test$142:>

877:
old  <	mov rax, [rbp]>
new  <	; PreCall 55 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

878:
old  <	mov rdi, [rbp + 16]>
new  <>

879:
old  <	mov rbp, [rbp + 8]>
new  < strtol_test$143:>

880:
old  <	jmp rax>
new  <	; Parameter pointer "<%s> <%li> <%s> <%i>\n" 79>

881:
old  <>
new  <	mov qword [rbp + 79], string_3C25s3E203C25li3E203C25s3E203C25i3E0A#>

882:
old  < bsearch$54:>
new  <>

883:
old  <	; FunctionEnd bsearch>
new  < strtol_test$144:>

884:
old  <>
new  <	; Parameter pointer text 87>

885:
old  <section .data>
new  <	mov [rbp + 87], rbp>

886:
old  <>
new  <	add qword [rbp + 87], 28>

887:
old  <@3946$g_randValue:>
new  <>

888:
old  <	; InitializerZero 8>
new  < strtol_test$145:>

889:
old  <	times 8 db 0>
new  <	; Parameter signed long int value 95>

890:
old  <>
new  <	mov rax, [rbp + 47]>

891:
old  <section .data>
new  <	mov [rbp + 95], rax>

893:
old  <int8$1664525#:>
new  < strtol_test$146:>

894:
old  <	; Initializer Signed_Long_Int 1664525>
new  <	; Parameter pointer pointer 103>

895:
old  <	dq 1664525>
new  <	mov rax, [rbp + 39]>

896:
old  <>
new  <	mov [rbp + 103], rax>

897:
old  <section .data>
new  <>

898:
old  <>
new  < strtol_test$147:>

899:
old  <int8$127#:>
new  <	; Parameter signedint base 111>

900:
old  <	; Initializer Signed_Long_Int 127>
new  <	mov eax, [rbp + 24]>

901:
old  <	dq 127>
new  <	mov [rbp + 111], eax>

903:
old  <section .text>
new  < strtol_test$148:>

904:
old  <>
new  <	; Call printf 55 28>

905:
old  < rand:>
new  <	mov qword [rbp + 55], strtol_test$149>

906:
old  <	; SignedMultiply Â£temporary2028 g_randValue 1664525>
new  <	mov [rbp + 63], rbp>

907:
old  <	mov rax, [@3946$g_randValue]>
new  <	add rbp, 55>

908:
old  <	xor rdx, rdx>
new  <	mov rdi, rbp>

909:
old  <	imul qword [int8$1664525#]>
new  <	add rdi, 28>

910:
old  <>
new  <	jmp printf>

911:
old  < rand$1:>
new  <>

912:
old  <	; BinaryAdd Â£temporary2029 Â£temporary2028 1013904223>
new  < strtol_test$149:>

913:
old  <	add rax, 1013904223>
new  <	; PostCall 55>

915:
old  < rand$2:>
new  < strtol_test$150:>

916:
old  <	; SignedModulo g_randValue Â£temporary2029 127>
new  <	; Assign base 0>

917:
old  <	xor rdx, rdx>
new  <	mov dword [rbp + 24], 0>

918:
old  <	idiv qword [int8$127#]>
new  <>

919:
old  <	mov [@3946$g_randValue], rdx>
new  < strtol_test$151:>

920:
old  <>
new  <	; Assign text[0] 32>

921:
old  < rand$3:>
new  <	mov byte [rbp + 28], 32>

922:
old  <	; IntegralToIntegral Â£temporary2031 g_randValue>
new  <>

923:
old  <	mov rbx, [@3946$g_randValue]>
new  < strtol_test$152:>

924:
old  <	cmp rbx, 0>
new  <	; Assign text[1] 32>

925:
old  <	jge rand$4>
new  <	mov byte [rbp + 29], 32>

926:
old  <	neg rbx>
new  <>

927:
old  <	neg ebx>
new  < strtol_test$153:>

928:
old  <>
new  <	; Assign text[2] 32>

929:
old  < rand$4:>
new  <	mov byte [rbp + 30], 32>

930:
old  <	; Return Â£temporary2031>
new  <>

931:
old  <	mov rax, [rbp]>
new  < strtol_test$154:>

932:
old  <	mov rdi, [rbp + 16]>
new  <	; Assign text[3] 45>

933:
old  <	mov rbp, [rbp + 8]>
new  <	mov byte [rbp + 31], 45>

934:
old  <	jmp rax>
new  <>

935:
old  <>
new  < strtol_test$155:>

936:
old  < rand$5:>
new  <	; Assign text[4] 48>

937:
old  <	; FunctionEnd rand>
new  <	mov byte [rbp + 32], 48>

939:
old  <section .text>
new  < strtol_test$156:>

940:
old  <>
new  <	; Assign text[5] 49>

941:
old  < srand:>
new  <	mov byte [rbp + 33], 49>

942:
old  <	; IntegralToIntegral Â£temporary2032 seed>
new  <>

943:
old  <	mov eax, [rbp + 24]>
new  < strtol_test$157:>

944:
old  <	mov rbx, 4294967295>
new  <	; Assign text[6] 50>

945:
old  <	and rax, rbx>
new  <	mov byte [rbp + 34], 50>

947:
old  < srand$1:>
new  < strtol_test$158:>

948:
old  <	; Assign g_randValue Â£temporary2032>
new  <	; Assign text[7] 51>

949:
old  <	mov [@3946$g_randValue], rax>
new  <	mov byte [rbp + 35], 51>

951:
old  < srand$2:>
new  < strtol_test$159:>

952:
old  <	; Return>
new  <	; Assign text[8] 97>

953:
old  <	mov rax, [rbp]>
new  <	mov byte [rbp + 36], 97>

954:
old  <	mov rdi, [rbp + 16]>
new  <>

955:
old  <	mov rbp, [rbp + 8]>
new  < strtol_test$160:>

956:
old  <	jmp rax>
new  <	; Assign text[9] 98>

957:
old  <>
new  <	mov byte [rbp + 37], 98>

958:
old  < srand$3:>
new  <>

959:
old  <	; FunctionEnd srand>
new  < strtol_test$161:>

960:
old  <>
new  <	; Assign text[10] 99>

961:
old  <section .data>
new  <	mov byte [rbp + 38], 99>

963:
old  <g_funcArray:>
new  < strtol_test$162:>

964:
old  <	; Initializer Pointer 0>
new  <	; Assign text[11] 0>

965:
old  <	dq 0>
new  <	mov byte [rbp + 39], 0>

966:
old  <	; InitializerZero 2040>
new  <>

967:
old  <	times 2040 db 0>
new  < strtol_test$163:>

968:
old  <>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

969:
old  <section .data>
new  <>

970:
old  <>
new  < strtol_test$164:>

971:
old  <Array_8#:>
new  <	; Parameter pointer text 72>

972:
old  <	; Initializer Array 8>
new  <	mov [rbp + 72], rbp>

973:
old  <	dq 8>
new  <	add qword [rbp + 72], 28>

975:
old  <section .text>
new  < strtol_test$165:>

976:
old  <>
new  <	; Address Â£temporary2076 pointer>

977:
old  < atexit:>
new  <	mov rsi, rbp>

978:
old  <	; Assign index 0>
new  <	add rsi, 40>

979:
old  <	mov dword [rbp + 32], 0>
new  <>

980:
old  <>
new  < strtol_test$166:>

981:
old  < atexit$1:>
new  <	; Parameter pointer Â£temporary2076 80>

982:
old  <	; SignedGreaterThanEqual 15 index 256>
new  <	mov [rbp + 80], rsi>

983:
old  <	cmp dword [rbp + 32], 256>
new  <>

984:
old  <	jge atexit$15>
new  < strtol_test$167:>

985:
old  <>
new  <	; Parameter signedint base 88>

986:
old  < atexit$2:>
new  <	mov eax, [rbp + 24]>

987:
old  <	; IntegralToIntegral Â£temporary2036 index>
new  <	mov [rbp + 88], eax>

988:
old  <	mov eax, [rbp + 32]>
new  <>

989:
old  <	mov rbx, 4294967295>
new  < strtol_test$168:>

990:
old  <	and rax, rbx>
new  <	; Call strtol 48 0>

991:
old  <>
new  <	mov qword [rbp + 48], strtol_test$169>

992:
old  < atexit$3:>
new  <	mov [rbp + 56], rbp>

993:
old  <	; UnsignedMultiply Â£temporary2037 Â£temporary2036 8>
new  <	add rbp, 48>

994:
old  <	xor rdx, rdx>
new  <	jmp strtol>

995:
old  <	mul qword [Array_8#]>
new  <>

996:
old  <>
new  < strtol_test$169:>

997:
old  < atexit$4:>
new  <	; PostCall 48>

998:
old  <	; BinaryAdd Â£temporary2038 g_funcArray Â£temporary2037>
new  <>

999:
old  <	mov rsi, g_funcArray>
new  < strtol_test$170:>

1000:
old  <	add rsi, rax>
new  <	; GetReturnValue Â£temporary2077>

1002:
old  < atexit$5:>
new  < strtol_test$171:>

1003:
old  <	; Dereference Â£temporary2035 -> Â£temporary2038 Â£temporary2038 0>
new  <	; Assign value Â£temporary2077>

1004:
old  <>
new  <	mov [rbp + 48], rbx>

1005:
old  < atexit$6:>
new  <>

1006:
old  <	; NotEqual 13 Â£temporary2035 -> Â£temporary2038 0>
new  < strtol_test$172:>

1007:
old  <	cmp qword [rsi], 0>
new  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1008:
old  <	jne atexit$13>
new  <>

1009:
old  <>
new  < strtol_test$173:>

1010:
old  < atexit$7:>
new  <	; Parameter pointer "<%s> <%li> <%s> <%i>\n" 80>

1011:
old  <	; IntegralToIntegral Â£temporary2041 index>
new  <	mov qword [rbp + 80], string_3C25s3E203C25li3E203C25s3E203C25i3E0A#>

1012:
old  <	mov eax, [rbp + 32]>
new  <>

1013:
old  <	mov rbx, 4294967295>
new  < strtol_test$174:>

1014:
old  <	and rax, rbx>
new  <	; Parameter pointer text 88>

1015:
old  <>
new  <	mov [rbp + 88], rbp>

1016:
old  < atexit$8:>
new  <	add qword [rbp + 88], 28>

1017:
old  <	; UnsignedMultiply Â£temporary2042 Â£temporary2041 8>
new  <>

1018:
old  <	xor rdx, rdx>
new  < strtol_test$175:>

1019:
old  <	mul qword [Array_8#]>
new  <	; Parameter signed long int value 96>

1020:
old  <>
new  <	mov rax, [rbp + 48]>

1021:
old  < atexit$9:>
new  <	mov [rbp + 96], rax>

1022:
old  <	; BinaryAdd Â£temporary2043 g_funcArray Â£temporary2042>
new  <>

1023:
old  <	mov rsi, g_funcArray>
new  < strtol_test$176:>

1024:
old  <	add rsi, rax>
new  <	; Parameter pointer pointer 104>

1025:
old  <>
new  <	mov rax, [rbp + 40]>

1026:
old  < atexit$10:>
new  <	mov [rbp + 104], rax>

1027:
old  <	; Dereference Â£temporary2040 -> Â£temporary2043 Â£temporary2043 0>
new  <>

1028:
old  <>
new  < strtol_test$177:>

1029:
old  < atexit$11:>
new  <	; Parameter signedint base 112>

1030:
old  <	; Assign Â£temporary2040 -> Â£temporary2043 fcn>
new  <	mov eax, [rbp + 24]>

1031:
old  <	mov rax, [rbp + 24]>
new  <	mov [rbp + 112], eax>

1032:
old  <	mov [rsi], rax>
new  <>

1033:
old  <>
new  < strtol_test$178:>

1034:
old  < atexit$12:>
new  <	; Call printf 56 28>

1035:
old  <	; Return 0>
new  <	mov qword [rbp + 56], strtol_test$179>

1036:
old  <	mov ebx, 0>
new  <	mov [rbp + 64], rbp>

1037:
old  <	mov rax, [rbp]>
new  <	add rbp, 56>

1038:
old  <	mov rdi, [rbp + 16]>
new  <	mov rdi, rbp>

1039:
old  <	mov rbp, [rbp + 8]>
new  <	add rdi, 28>

1040:
old  <	jmp rax>
new  <	jmp printf>

1042:
old  < atexit$13:>
new  < strtol_test$179:>

1043:
old  <	; BinaryAdd index index 1>
new  <	; PostCall 56>

1044:
old  <	inc dword [rbp + 32]>
new  <>

1045:
old  <>
new  < strtol_test$180:>

1046:
old  < atexit$14:>
new  <	; Assign base 0>

1047:
old  <	; Goto 1>
new  <	mov dword [rbp + 24], 0>

1048:
old  <	jmp atexit$1>
new  <>

1049:
old  <>
new  < strtol_test$181:>

1050:
old  < atexit$15:>
new  <	; Assign text[0] 32>

1051:
old  <	; Return -1>
new  <	mov byte [rbp + 28], 32>

1052:
old  <	mov ebx, -1>
new  <>

1053:
old  <	mov rax, [rbp]>
new  < strtol_test$182:>

1054:
old  <	mov rdi, [rbp + 16]>
new  <	; Assign text[1] 32>

1055:
old  <	mov rbp, [rbp + 8]>
new  <	mov byte [rbp + 29], 32>

1056:
old  <	jmp rax>
new  <>

1057:
old  <>
new  < strtol_test$183:>

1058:
old  < atexit$16:>
new  <	; Assign text[2] 32>

1059:
old  <	; FunctionEnd atexit>
new  <	mov byte [rbp + 30], 32>

1061:
old  <section .text>
new  < strtol_test$184:>

1062:
old  <>
new  <	; Assign text[3] 45>

1063:
old  < exit:>
new  <	mov byte [rbp + 31], 45>

1064:
old  <	; Assign index 257>
new  <>

1065:
old  <	mov dword [rbp + 28], 257>
new  < strtol_test$185:>

1066:
old  <>
new  <	; Assign text[4] 48>

1067:
old  < exit$1:>
new  <	mov byte [rbp + 32], 48>

1068:
old  <	; SignedLessThan 16 index 0>
new  <>

1069:
old  <	cmp dword [rbp + 28], 0>
new  < strtol_test$186:>

1070:
old  <	jl exit$16>
new  <	; Assign text[5] 120>

1071:
old  <>
new  <	mov byte [rbp + 33], 120>

1072:
old  < exit$2:>
new  <>

1073:
old  <	; IntegralToIntegral Â£temporary2047 index>
new  < strtol_test$187:>

1074:
old  <	mov eax, [rbp + 28]>
new  <	; Assign text[6] 49>

1075:
old  <	mov rbx, 4294967295>
new  <	mov byte [rbp + 34], 49>

1076:
old  <	and rax, rbx>
new  <>

1077:
old  <>
new  < strtol_test$188:>

1078:
old  < exit$3:>
new  <	; Assign text[7] 50>

1079:
old  <	; UnsignedMultiply Â£temporary2048 Â£temporary2047 8>
new  <	mov byte [rbp + 35], 50>

1080:
old  <	xor rdx, rdx>
new  <>

1081:
old  <	mul qword [Array_8#]>
new  < strtol_test$189:>

1082:
old  <>
new  <	; Assign text[8] 51>

1083:
old  < exit$4:>
new  <	mov byte [rbp + 36], 51>

1084:
old  <	; BinaryAdd Â£temporary2049 g_funcArray Â£temporary2048>
new  <>

1085:
old  <	mov rsi, g_funcArray>
new  < strtol_test$190:>

1086:
old  <	add rsi, rax>
new  <	; Assign text[9] 65>

1087:
old  <>
new  <	mov byte [rbp + 37], 65>

1088:
old  < exit$5:>
new  <>

1089:
old  <	; Dereference Â£temporary2046 -> Â£temporary2049 Â£temporary2049 0>
new  < strtol_test$191:>

1090:
old  <>
new  <	; Assign text[10] 66>

1091:
old  < exit$6:>
new  <	mov byte [rbp + 38], 66>

1092:
old  <	; Equal 14 Â£temporary2046 -> Â£temporary2049 0>
new  <>

1093:
old  <	cmp qword [rsi], 0>
new  < strtol_test$192:>

1094:
old  <	je exit$14>
new  <	; Assign text[11] 67>

1095:
old  <>
new  <	mov byte [rbp + 39], 67>

1096:
old  < exit$7:>
new  <>

1097:
old  <	; IntegralToIntegral Â£temporary2052 index>
new  < strtol_test$193:>

1098:
old  <	mov eax, [rbp + 28]>
new  <	; Assign text[12] 0>

1099:
old  <	mov rbx, 4294967295>
new  <	mov byte [rbp + 40], 0>

1100:
old  <	and rax, rbx>
new  <>

1101:
old  <>
new  < strtol_test$194:>

1102:
old  < exit$8:>
new  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1103:
old  <	; UnsignedMultiply Â£temporary2053 Â£temporary2052 8>
new  <>

1104:
old  <	xor rdx, rdx>
new  < strtol_test$195:>

1105:
old  <	mul qword [Array_8#]>
new  <	; Parameter pointer text 73>

1106:
old  <>
new  <	mov [rbp + 73], rbp>

1107:
old  < exit$9:>
new  <	add qword [rbp + 73], 28>

1108:
old  <	; BinaryAdd Â£temporary2054 g_funcArray Â£temporary2053>
new  <>

1109:
old  <	mov rbx, g_funcArray>
new  < strtol_test$196:>

1110:
old  <	add rbx, rax>
new  <	; Address Â£temporary2092 pointer>

1111:
old  <>
new  <	mov rsi, rbp>

1112:
old  < exit$10:>
new  <	add rsi, 41>

1113:
old  <	; Dereference Â£temporary2051 -> Â£temporary2054 Â£temporary2054 0>
new  <>

1114:
old  <>
new  < strtol_test$197:>

1115:
old  < exit$11:>
new  <	; Parameter pointer Â£temporary2092 81>

1116:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov [rbp + 81], rsi>

1117:
old  <	mov [rbp + 32], rbx>
new  <>

1118:
old  <>
new  < strtol_test$198:>

1119:
old  < exit$12:>
new  <	; Parameter signedint base 89>

1120:
old  <	; Call Â£temporary2051 -> Â£temporary2054 32 0>
new  <	mov eax, [rbp + 24]>

1121:
old  <	mov qword [rbp + 2080], exit$13>
new  <	mov [rbp + 89], eax>

1122:
old  <	mov [rbp + 2088], rbp>
new  <>

1123:
old  <	add rbp, 2080>
new  < strtol_test$199:>

1124:
old  <	mov rsi, rbp>
new  <	; Call strtol 49 0>

1125:
old  <	mov rax, [rsi]>
new  <	mov qword [rbp + 49], strtol_test$200>

1126:
old  <	jmp rax>
new  <	mov [rbp + 57], rbp>

1127:
old  <>
new  <	add rbp, 49>

1128:
old  < exit$13:>
new  <	jmp strtol>

1129:
old  <	; PostCall 32>
new  <>

1130:
old  <	mov rbx, [rbp + 32]>
new  < strtol_test$200:>

1131:
old  <>
new  <	; PostCall 49>

1132:
old  < exit$14:>
new  <>

1133:
old  <	; BinarySubtract index index 1>
new  < strtol_test$201:>

1134:
old  <	dec dword [rbp + 28]>
new  <	; GetReturnValue Â£temporary2093>

1136:
old  < exit$15:>
new  < strtol_test$202:>

1137:
old  <	; Goto 1>
new  <	; Assign value Â£temporary2093>

1138:
old  <	jmp exit$1>
new  <	mov [rbp + 49], rbx>

1140:
old  < exit$16:>
new  < strtol_test$203:>

1141:
old  <	; AssignRegister rax 60>
new  <	; PreCall 57 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1142:
old  <	mov rax, 60>
new  <>

1143:
old  <>
new  < strtol_test$204:>

1144:
old  < exit$17:>
new  <	; Parameter pointer "<%s> <%li> <%s> <%i>\n" 81>

1145:
old  <	; IntegralToIntegral Â£temporary2058 status>
new  <	mov qword [rbp + 81], string_3C25s3E203C25li3E203C25s3E203C25i3E0A#>

1146:
old  <	mov edi, [rbp + 24]>
new  <>

1147:
old  <	mov rbx, 4294967295>
new  < strtol_test$205:>

1148:
old  <	and rdi, rbx>
new  <	; Parameter pointer text 89>

1149:
old  <>
new  <	mov [rbp + 89], rbp>

1150:
old  < exit$18:>
new  <	add qword [rbp + 89], 28>

1151:
old  <	; AssignRegister rdi Â£temporary2058>
new  <>

1152:
old  <>
new  < strtol_test$206:>

1153:
old  < exit$19:>
new  <	; Parameter signed long int value 97>

1154:
old  <	; SysCall>
new  <	mov rax, [rbp + 49]>

1155:
old  <	syscall>
new  <	mov [rbp + 97], rax>

1157:
old  < exit$20:>
new  < strtol_test$207:>

1158:
old  <	; Return>
new  <	; Parameter pointer pointer 105>

1159:
old  <	mov rax, [rbp]>
new  <	mov rax, [rbp + 41]>

1160:
old  <	mov rdi, [rbp + 16]>
new  <	mov [rbp + 105], rax>

1161:
old  <	mov rbp, [rbp + 8]>
new  <>

1162:
old  <	jmp rax>
new  < strtol_test$208:>

1163:
old  <>
new  <	; Parameter signedint base 113>

1164:
old  < exit$21:>
new  <	mov eax, [rbp + 24]>

1165:
old  <	; FunctionEnd exit>
new  <	mov [rbp + 113], eax>

1167:
old  <section .text>
new  < strtol_test$209:>

1168:
old  <>
new  <	; Call printf 57 28>

1169:
old  < swap:>
new  <	mov qword [rbp + 57], strtol_test$210>

1170:
old  <	; Assign index 0>
new  <	mov [rbp + 65], rbp>

1171:
old  <	mov dword [rbp + 44], 0>
new  <	add rbp, 57>

1172:
old  <>
new  <	mov rdi, rbp>

1173:
old  < swap$1:>
new  <	add rdi, 28>

1174:
old  <	; SignedGreaterThanEqual 19 index valueSize>
new  <	jmp printf>

1175:
old  <	mov eax, [rbp + 40]>
new  <>

1176:
old  <	cmp [rbp + 44], eax>
new  < strtol_test$210:>

1177:
old  <	jge swap$19>
new  <	; PostCall 57>

1179:
old  < swap$2:>
new  < strtol_test$211:>

1180:
old  <	; IntegralToIntegral Â£temporary2062 index>
new  <	; Assign base 0>

1181:
old  <	mov eax, [rbp + 44]>
new  <	mov dword [rbp + 24], 0>

1182:
old  <	mov rbx, 4294967295>
new  <>

1183:
old  <	and rax, rbx>
new  < strtol_test$212:>

1184:
old  <>
new  <	; Assign text[0] 32>

1185:
old  < swap$3:>
new  <	mov byte [rbp + 28], 32>

1186:
old  <	; BinaryAdd Â£temporary2064 leftValuePtr Â£temporary2062>
new  <>

1187:
old  <	mov rsi, [rbp + 24]>
new  < strtol_test$213:>

1188:
old  <	add rsi, rax>
new  <	; Assign text[1] 32>

1189:
old  <>
new  <	mov byte [rbp + 29], 32>

1190:
old  < swap$4:>
new  <>

1191:
old  <	; Dereference Â£temporary2061 -> Â£temporary2064 Â£temporary2064 0>
new  < strtol_test$214:>

1192:
old  <>
new  <	; Assign text[2] 32>

1193:
old  < swap$5:>
new  <	mov byte [rbp + 30], 32>

1194:
old  <	; Assign tempValue Â£temporary2061 -> Â£temporary2064>
new  <>

1195:
old  <	mov al, [rsi]>
new  < strtol_test$215:>

1196:
old  <	mov [rbp + 48], al>
new  <	; Assign text[3] 45>

1197:
old  <>
new  <	mov byte [rbp + 31], 45>

1198:
old  < swap$6:>
new  <>

1199:
old  <	; IntegralToIntegral Â£temporary2066 index>
new  < strtol_test$216:>

1200:
old  <	mov eax, [rbp + 44]>
new  <	; Assign text[4] 48>

1201:
old  <	mov rbx, 4294967295>
new  <	mov byte [rbp + 32], 48>

1202:
old  <	and rax, rbx>
new  <>

1203:
old  <>
new  < strtol_test$217:>

1204:
old  < swap$7:>
new  <	; Assign text[5] 88>

1205:
old  <	; BinaryAdd Â£temporary2068 leftValuePtr Â£temporary2066>
new  <	mov byte [rbp + 33], 88>

1206:
old  <	mov rsi, [rbp + 24]>
new  <>

1207:
old  <	add rsi, rax>
new  < strtol_test$218:>

1208:
old  <>
new  <	; Assign text[6] 49>

1209:
old  < swap$8:>
new  <	mov byte [rbp + 34], 49>

1210:
old  <	; Dereference Â£temporary2065 -> Â£temporary2068 Â£temporary2068 0>
new  <>

1211:
old  <>
new  < strtol_test$219:>

1212:
old  < swap$9:>
new  <	; Assign text[7] 50>

1213:
old  <	; IntegralToIntegral Â£temporary2070 index>
new  <	mov byte [rbp + 35], 50>

1214:
old  <	mov eax, [rbp + 44]>
new  <>

1215:
old  <	mov rbx, 4294967295>
new  < strtol_test$220:>

1216:
old  <	and rax, rbx>
new  <	; Assign text[8] 51>

1217:
old  <>
new  <	mov byte [rbp + 36], 51>

1218:
old  < swap$10:>
new  <>

1219:
old  <	; BinaryAdd Â£temporary2072 rightValuePtr Â£temporary2070>
new  < strtol_test$221:>

1220:
old  <	mov rdi, [rbp + 32]>
new  <	; Assign text[9] 97>

1221:
old  <	add rdi, rax>
new  <	mov byte [rbp + 37], 97>

1223:
old  < swap$11:>
new  < strtol_test$222:>

1224:
old  <	; Dereference Â£temporary2069 -> Â£temporary2072 Â£temporary2072 0>
new  <	; Assign text[10] 98>

1225:
old  <>
new  <	mov byte [rbp + 38], 98>

1226:
old  < swap$12:>
new  <>

1227:
old  <	; Assign Â£temporary2065 -> Â£temporary2068 Â£temporary2069 -> Â£temporary2072>
new  < strtol_test$223:>

1228:
old  <	mov al, [rdi]>
new  <	; Assign text[11] 99>

1229:
old  <	mov [rsi], al>
new  <	mov byte [rbp + 39], 99>

1231:
old  < swap$13:>
new  < strtol_test$224:>

1232:
old  <	; IntegralToIntegral Â£temporary2074 index>
new  <	; Assign text[12] 0>

1233:
old  <	mov eax, [rbp + 44]>
new  <	mov byte [rbp + 40], 0>

1234:
old  <	mov rbx, 4294967295>
new  <>

1235:
old  <	and rax, rbx>
new  < strtol_test$225:>

1236:
old  <>
new  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1237:
old  < swap$14:>
new  <>

1238:
old  <	; BinaryAdd Â£temporary2076 rightValuePtr Â£temporary2074>
new  < strtol_test$226:>

1239:
old  <	mov rsi, [rbp + 32]>
new  <	; Parameter pointer text 73>

1240:
old  <	add rsi, rax>
new  <	mov [rbp + 73], rbp>

1241:
old  <>
new  <	add qword [rbp + 73], 28>

1242:
old  < swap$15:>
new  <>

1243:
old  <	; Dereference Â£temporary2073 -> Â£temporary2076 Â£temporary2076 0>
new  < strtol_test$227:>

1244:
old  <>
new  <	; Address Â£temporary2108 pointer>

1245:
old  < swap$16:>
new  <	mov rsi, rbp>

1246:
old  <	; Assign Â£temporary2073 -> Â£temporary2076 tempValue>
new  <	add rsi, 41>

1247:
old  <	mov al, [rbp + 48]>
new  <>

1248:
old  <	mov [rsi], al>
new  < strtol_test$228:>

1249:
old  <>
new  <	; Parameter pointer Â£temporary2108 81>

1250:
old  < swap$17:>
new  <	mov [rbp + 81], rsi>

1251:
old  <	; BinaryAdd index index 1>
new  <>

1252:
old  <	inc dword [rbp + 44]>
new  < strtol_test$229:>

1253:
old  <>
new  <	; Parameter signedint base 89>

1254:
old  < swap$18:>
new  <	mov eax, [rbp + 24]>

1255:
old  <	; Goto 1>
new  <	mov [rbp + 89], eax>

1256:
old  <	jmp swap$1>
new  <>

1257:
old  <>
new  < strtol_test$230:>

1258:
old  < swap$19:>
new  <	; Call strtol 49 0>

1259:
old  <	; Return>
new  <	mov qword [rbp + 49], strtol_test$231>

1260:
old  <	mov rax, [rbp]>
new  <	mov [rbp + 57], rbp>

1261:
old  <	mov rdi, [rbp + 16]>
new  <	add rbp, 49>

1262:
old  <	mov rbp, [rbp + 8]>
new  <	jmp strtol>

1263:
old  <	jmp rax>
new  <>

1264:
old  <>
new  < strtol_test$231:>

1265:
old  < swap$20:>
new  <	; PostCall 49>

1266:
old  <	; FunctionEnd swap>
new  <>

1267:
old  <>
new  < strtol_test$232:>

1268:
old  <section .text>
new  <	; GetReturnValue Â£temporary2109>

1270:
old  < qsort:>
new  < strtol_test$233:>

1271:
old  <	; IntegralToIntegral Â£temporary2077 valueList>
new  <	; Assign value Â£temporary2109>

1272:
old  <	mov rax, [rbp + 24]>
new  <	mov [rbp + 49], rbx>

1274:
old  < qsort$1:>
new  < strtol_test$234:>

1275:
old  <	; Assign charList Â£temporary2077>
new  <	; PreCall 57 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1276:
old  <	mov [rbp + 52], rax>
new  <>

1277:
old  <>
new  < strtol_test$235:>

1278:
old  < qsort$2:>
new  <	; Parameter pointer "<%s> <%li> <%s> <%i>\n" 81>

1279:
old  <	; BinarySubtract index1 listSize 1>
new  <	mov qword [rbp + 81], string_3C25s3E203C25li3E203C25s3E203C25i3E0A#>

1280:
old  <	mov eax, [rbp + 32]>
new  <>

1281:
old  <	dec eax>
new  < strtol_test$236:>

1282:
old  <	mov [rbp + 60], eax>
new  <	; Parameter pointer text 89>

1283:
old  <>
new  <	mov [rbp + 89], rbp>

1284:
old  < qsort$3:>
new  <	add qword [rbp + 89], 28>

1285:
old  <	; SignedLessThanEqual 33 index1 0>
new  <>

1286:
old  <	cmp dword [rbp + 60], 0>
new  < strtol_test$237:>

1287:
old  <	jle qsort$33>
new  <	; Parameter signed long int value 97>

1288:
old  <>
new  <	mov rax, [rbp + 49]>

1289:
old  < qsort$4:>
new  <	mov [rbp + 97], rax>

1290:
old  <	; Assign update 0>
new  <>

1291:
old  <	mov dword [rbp + 48], 0>
new  < strtol_test$238:>

1292:
old  <>
new  <	; Parameter pointer pointer 105>

1293:
old  < qsort$5:>
new  <	mov rax, [rbp + 41]>

1294:
old  <	; Assign index2 0>
new  <	mov [rbp + 105], rax>

1295:
old  <	mov dword [rbp + 64], 0>
new  <>

1296:
old  <>
new  < strtol_test$239:>

1297:
old  < qsort$6:>
new  <	; Parameter signedint base 113>

1298:
old  <	; SignedGreaterThanEqual 30 index2 index1>
new  <	mov eax, [rbp + 24]>

1299:
old  <	mov eax, [rbp + 60]>
new  <	mov [rbp + 113], eax>

1300:
old  <	cmp [rbp + 64], eax>
new  <>

1301:
old  <	jge qsort$30>
new  < strtol_test$240:>

1302:
old  <>
new  <	; Call printf 57 28>

1303:
old  < qsort$7:>
new  <	mov qword [rbp + 57], strtol_test$241>

1304:
old  <	; SignedMultiply Â£temporary2083 index2 valueSize>
new  <	mov [rbp + 65], rbp>

1305:
old  <	mov eax, [rbp + 64]>
new  <	add rbp, 57>

1306:
old  <	xor edx, edx>
new  <	mov rdi, rbp>

1307:
old  <	imul dword [rbp + 36]>
new  <	add rdi, 28>

1308:
old  <>
new  <	jmp printf>

1309:
old  < qsort$8:>
new  <>

1310:
old  <	; IntegralToIntegral Â£temporary2084 Â£temporary2083>
new  < strtol_test$241:>

1311:
old  <	mov rbx, 4294967295>
new  <	; PostCall 57>

1312:
old  <	and rax, rbx>
new  <>

1313:
old  <>
new  < strtol_test$242:>

1314:
old  < qsort$9:>
new  <	; Assign base 9>

1315:
old  <	; BinaryAdd valuePtr1 charList Â£temporary2084>
new  <	mov dword [rbp + 24], 9>

1316:
old  <	mov rbx, [rbp + 52]>
new  <>

1317:
old  <	add rbx, rax>
new  < strtol_test$243:>

1318:
old  <	mov [rbp + 68], rbx>
new  <	; Assign text[0] 32>

1319:
old  <>
new  <	mov byte [rbp + 28], 32>

1320:
old  < qsort$10:>
new  <>

1321:
old  <	; BinaryAdd Â£temporary2087 index2 1>
new  < strtol_test$244:>

1322:
old  <	mov eax, [rbp + 64]>
new  <	; Assign text[1] 32>

1323:
old  <	inc eax>
new  <	mov byte [rbp + 29], 32>

1325:
old  < qsort$11:>
new  < strtol_test$245:>

1326:
old  <	; SignedMultiply Â£temporary2088 Â£temporary2087 valueSize>
new  <	; Assign text[2] 32>

1327:
old  <	xor edx, edx>
new  <	mov byte [rbp + 30], 32>

1328:
old  <	imul dword [rbp + 36]>
new  <>

1329:
old  <>
new  < strtol_test$246:>

1330:
old  < qsort$12:>
new  <	; Assign text[3] 43>

1331:
old  <	; IntegralToIntegral Â£temporary2089 Â£temporary2088>
new  <	mov byte [rbp + 31], 43>

1332:
old  <	mov rbx, 4294967295>
new  <>

1333:
old  <	and rax, rbx>
new  < strtol_test$247:>

1334:
old  <>
new  <	; Assign text[4] 49>

1335:
old  < qsort$13:>
new  <	mov byte [rbp + 32], 49>

1336:
old  <	; BinaryAdd valuePtr2 charList Â£temporary2089>
new  <>

1337:
old  <	mov rbx, [rbp + 52]>
new  < strtol_test$248:>

1338:
old  <	add rbx, rax>
new  <	; Assign text[5] 50>

1339:
old  <	mov [rbp + 76], rbx>
new  <	mov byte [rbp + 33], 50>

1341:
old  < qsort$14:>
new  < strtol_test$249:>

1342:
old  <	; PreCall 84 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Assign text[6] 51>

1343:
old  <>
new  <	mov byte [rbp + 34], 51>

1344:
old  < qsort$15:>
new  <>

1345:
old  <	; Parameter pointer valuePtr1 108>
new  < strtol_test$250:>

1346:
old  <	mov rax, [rbp + 68]>
new  <	; Assign text[7] 97>

1347:
old  <	mov [rbp + 108], rax>
new  <	mov byte [rbp + 35], 97>

1349:
old  < qsort$16:>
new  < strtol_test$251:>

1350:
old  <	; Parameter pointer valuePtr2 116>
new  <	; Assign text[8] 98>

1351:
old  <	mov rax, [rbp + 76]>
new  <	mov byte [rbp + 36], 98>

1352:
old  <	mov [rbp + 116], rax>
new  <>

1353:
old  <>
new  < strtol_test$252:>

1354:
old  < qsort$17:>
new  <	; Assign text[9] 99>

1355:
old  <	; Call compare 84 0>
new  <	mov byte [rbp + 37], 99>

1356:
old  <	mov qword [rbp + 84], qsort$18>
new  <>

1357:
old  <	mov [rbp + 92], rbp>
new  < strtol_test$253:>

1358:
old  <	add rbp, 84>
new  <	; Assign text[10] 0>

1359:
old  <	mov rax, [rbp + 40]>
new  <	mov byte [rbp + 38], 0>

1360:
old  <	jmp rax>
new  <>

1361:
old  <>
new  < strtol_test$254:>

1362:
old  < qsort$18:>
new  <	; PreCall 47 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1363:
old  <	; PostCall 84>
new  <>

1364:
old  <>
new  < strtol_test$255:>

1365:
old  < qsort$19:>
new  <	; Parameter pointer text 71>

1366:
old  <	; GetReturnValue Â£temporary2092>
new  <	mov [rbp + 71], rbp>

1367:
old  <>
new  <	add qword [rbp + 71], 28>

1368:
old  < qsort$20:>
new  <>

1369:
old  <	; SignedLessThanEqual 28 Â£temporary2092 0>
new  < strtol_test$256:>

1370:
old  <	cmp ebx, 0>
new  <	; Address Â£temporary2122 pointer>

1371:
old  <	jle qsort$28>
new  <	mov rsi, rbp>

1372:
old  <>
new  <	add rsi, 39>

1373:
old  < qsort$21:>
new  <>

1374:
old  <	; PreCall 84 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < strtol_test$257:>

1375:
old  <>
new  <	; Parameter pointer Â£temporary2122 79>

1376:
old  < qsort$22:>
new  <	mov [rbp + 79], rsi>

1377:
old  <	; Parameter pointer valuePtr1 108>
new  <>

1378:
old  <	mov rax, [rbp + 68]>
new  < strtol_test$258:>

1379:
old  <	mov [rbp + 108], rax>
new  <	; Parameter signedint base 87>

1380:
old  <>
new  <	mov eax, [rbp + 24]>

1381:
old  < qsort$23:>
new  <	mov [rbp + 87], eax>

1382:
old  <	; Parameter pointer valuePtr2 116>
new  <>

1383:
old  <	mov rax, [rbp + 76]>
new  < strtol_test$259:>

1384:
old  <	mov [rbp + 116], rax>
new  <	; Call strtol 47 0>

1385:
old  <>
new  <	mov qword [rbp + 47], strtol_test$260>

1386:
old  < qsort$24:>
new  <	mov [rbp + 55], rbp>

1387:
old  <	; Parameter signedint valueSize 124>
new  <	add rbp, 47>

1388:
old  <	mov eax, [rbp + 36]>
new  <	jmp strtol>

1389:
old  <	mov [rbp + 124], eax>
new  <>

1390:
old  <>
new  < strtol_test$260:>

1391:
old  < qsort$25:>
new  <	; PostCall 47>

1392:
old  <	; Call swap 84 0>
new  <>

1393:
old  <	mov qword [rbp + 84], qsort$26>
new  < strtol_test$261:>

1394:
old  <	mov [rbp + 92], rbp>
new  <	; GetReturnValue Â£temporary2123>

1395:
old  <	add rbp, 84>
new  <>

1396:
old  <	jmp swap>
new  < strtol_test$262:>

1397:
old  <>
new  <	; Assign value Â£temporary2123>

1398:
old  < qsort$26:>
new  <	mov [rbp + 47], rbx>

1399:
old  <	; PostCall 84>
new  <>

1400:
old  <>
new  < strtol_test$263:>

1401:
old  < qsort$27:>
new  <	; PreCall 55 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1402:
old  <	; Assign update 1>
new  <>

1403:
old  <	mov dword [rbp + 48], 1>
new  < strtol_test$264:>

1404:
old  <>
new  <	; Parameter pointer "<%s> <%li> <%s> <%i>\n" 79>

1405:
old  < qsort$28:>
new  <	mov qword [rbp + 79], string_3C25s3E203C25li3E203C25s3E203C25i3E0A#>

1406:
old  <	; BinaryAdd index2 index2 1>
new  <>

1407:
old  <	inc dword [rbp + 64]>
new  < strtol_test$265:>

1408:
old  <>
new  <	; Parameter pointer text 87>

1409:
old  < qsort$29:>
new  <	mov [rbp + 87], rbp>

1410:
old  <	; Goto 6>
new  <	add qword [rbp + 87], 28>

1411:
old  <	jmp qsort$6>
new  <>

1412:
old  <>
new  < strtol_test$266:>

1413:
old  < qsort$30:>
new  <	; Parameter signed long int value 95>

1414:
old  <	; Equal 33 update 0>
new  <	mov rax, [rbp + 47]>

1415:
old  <	cmp dword [rbp + 48], 0>
new  <	mov [rbp + 95], rax>

1416:
old  <	je qsort$33>
new  <>

1417:
old  <>
new  < strtol_test$267:>

1418:
old  < qsort$31:>
new  <	; Parameter pointer pointer 103>

1419:
old  <	; BinarySubtract index1 index1 1>
new  <	mov rax, [rbp + 39]>

1420:
old  <	dec dword [rbp + 60]>
new  <	mov [rbp + 103], rax>

1422:
old  < qsort$32:>
new  < strtol_test$268:>

1423:
old  <	; Goto 3>
new  <	; Parameter signedint base 111>

1424:
old  <	jmp qsort$3>
new  <	mov eax, [rbp + 24]>

1425:
old  <>
new  <	mov [rbp + 111], eax>

1426:
old  < qsort$33:>
new  <>

1427:
old  <	; Return>
new  < strtol_test$269:>

1428:
old  <	mov rax, [rbp]>
new  <	; Call printf 55 28>

1429:
old  <	mov rdi, [rbp + 16]>
new  <	mov qword [rbp + 55], strtol_test$270>

1430:
old  <	mov rbp, [rbp + 8]>
new  <	mov [rbp + 63], rbp>

1431:
old  <	jmp rax>
new  <	add rbp, 55>

1432:
old  <>
new  <	mov rdi, rbp>

1433:
old  < qsort$34:>
new  <	add rdi, 28>

1434:
old  <	; FunctionEnd qsort>
new  <	jmp printf>

1436:
old  <section .text>
new  < strtol_test$270:>

1437:
old  <>
new  <	; PostCall 55>

1438:
old  < @abs:>
new  <>

1439:
old  <	; SignedGreaterThanEqual 4 value 0>
new  < strtol_test$271:>

1440:
old  <	cmp dword [rbp + 24], 0>
new  <	; Assign base 10>

1441:
old  <	jge @abs$4>
new  <	mov dword [rbp + 24], 10>

1443:
old  < @abs$1:>
new  < strtol_test$272:>

1444:
old  <	; UnarySubtract Â£temporary2098 value>
new  <	; Assign text[0] 32>

1445:
old  <	mov ebx, [rbp + 24]>
new  <	mov byte [rbp + 28], 32>

1446:
old  <	neg ebx>
new  <>

1447:
old  <>
new  < strtol_test$273:>

1448:
old  < @abs$2:>
new  <	; Assign text[1] 32>

1449:
old  <	; Assign Â£temporary2099 Â£temporary2098>
new  <	mov byte [rbp + 29], 32>

1451:
old  < @abs$3:>
new  < strtol_test$274:>

1452:
old  <	; Goto 5>
new  <	; Assign text[2] 32>

1453:
old  <	jmp @abs$5>
new  <	mov byte [rbp + 30], 32>

1455:
old  < @abs$4:>
new  < strtol_test$275:>

1456:
old  <	; Assign Â£temporary2099 value>
new  <	; Assign text[3] 43>

1457:
old  <	mov ebx, [rbp + 24]>
new  <	mov byte [rbp + 31], 43>

1459:
old  < @abs$5:>
new  < strtol_test$276:>

1460:
old  <	; Return Â£temporary2099>
new  <	; Assign text[4] 49>

1461:
old  <	mov rax, [rbp]>
new  <	mov byte [rbp + 32], 49>

1462:
old  <	mov rdi, [rbp + 16]>
new  <>

1463:
old  <	mov rbp, [rbp + 8]>
new  < strtol_test$277:>

1464:
old  <	jmp rax>
new  <	; Assign text[5] 50>

1465:
old  <>
new  <	mov byte [rbp + 33], 50>

1466:
old  < @abs$6:>
new  <>

1467:
old  <	; FunctionEnd @abs>
new  < strtol_test$278:>

1468:
old  <>
new  <	; Assign text[6] 51>

1469:
old  <section .text>
new  <	mov byte [rbp + 34], 51>

1471:
old  < labs:>
new  < strtol_test$279:>

1472:
old  <	; SignedGreaterThanEqual 4 value 0>
new  <	; Assign text[7] 97>

1473:
old  <	cmp qword [rbp + 24], 0>
new  <	mov byte [rbp + 35], 97>

1474:
old  <	jge labs$4>
new  <>

1475:
old  <>
new  < strtol_test$280:>

1476:
old  < labs$1:>
new  <	; Assign text[8] 98>

1477:
old  <	; UnarySubtract Â£temporary2101 value>
new  <	mov byte [rbp + 36], 98>

1478:
old  <	mov rbx, [rbp + 24]>
new  <>

1479:
old  <	neg rbx>
new  < strtol_test$281:>

1480:
old  <>
new  <	; Assign text[9] 99>

1481:
old  < labs$2:>
new  <	mov byte [rbp + 37], 99>

1482:
old  <	; Assign Â£temporary2102 Â£temporary2101>
new  <>

1483:
old  <>
new  < strtol_test$282:>

1484:
old  < labs$3:>
new  <	; Assign text[10] 0>

1485:
old  <	; Goto 5>
new  <	mov byte [rbp + 38], 0>

1486:
old  <	jmp labs$5>
new  <>

1487:
old  <>
new  < strtol_test$283:>

1488:
old  < labs$4:>
new  <	; PreCall 47 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1489:
old  <	; Assign Â£temporary2102 value>
new  <>

1490:
old  <	mov rbx, [rbp + 24]>
new  < strtol_test$284:>

1491:
old  <>
new  <	; Parameter pointer text 71>

1492:
old  < labs$5:>
new  <	mov [rbp + 71], rbp>

1493:
old  <	; Return Â£temporary2102>
new  <	add qword [rbp + 71], 28>

1494:
old  <	mov rax, [rbp]>
new  <>

1495:
old  <	mov rdi, [rbp + 16]>
new  < strtol_test$285:>

1496:
old  <	mov rbp, [rbp + 8]>
new  <	; Address Â£temporary2136 pointer>

1497:
old  <	jmp rax>
new  <	mov rsi, rbp>

1498:
old  <>
new  <	add rsi, 39>

1499:
old  < labs$6:>
new  <>

1500:
old  <	; FunctionEnd labs>
new  < strtol_test$286:>

1501:
old  <>
new  <	; Parameter pointer Â£temporary2136 79>

1502:
old  <section .text>
new  <	mov [rbp + 79], rsi>

1504:
old  < div:>
new  < strtol_test$287:>

1505:
old  <	; Assign result.quot 0>
new  <	; Parameter signedint base 87>

1506:
old  <	mov dword [rbp + 32], 0>
new  <	mov eax, [rbp + 24]>

1507:
old  <>
new  <	mov [rbp + 87], eax>

1508:
old  < div$1:>
new  <>

1509:
old  <	; Assign result.rem 0>
new  < strtol_test$288:>

1510:
old  <	mov dword [rbp + 36], 0>
new  <	; Call strtol 47 0>

1511:
old  <>
new  <	mov qword [rbp + 47], strtol_test$289>

1512:
old  < div$2:>
new  <	mov [rbp + 55], rbp>

1513:
old  <	; NotEqual 5 denum 0>
new  <	add rbp, 47>

1514:
old  <	cmp dword [rbp + 28], 0>
new  <	jmp strtol>

1515:
old  <	jne div$5>
new  <>

1516:
old  <>
new  < strtol_test$289:>

1517:
old  < div$3:>
new  <	; PostCall 47>

1518:
old  <	; Assign errno 6>
new  <>

1519:
old  <	mov dword [errno], 6>
new  < strtol_test$290:>

1520:
old  <>
new  <	; GetReturnValue Â£temporary2137>

1521:
old  < div$4:>
new  <>

1522:
old  <	; Return result>
new  < strtol_test$291:>

1523:
old  <	mov rbx, rbp>
new  <	; Assign value Â£temporary2137>

1524:
old  <	add rbx, 32>
new  <	mov [rbp + 47], rbx>

1525:
old  <	mov rax, [rbp]>
new  <>

1526:
old  <	mov rdi, [rbp + 16]>
new  < strtol_test$292:>

1527:
old  <	mov rbp, [rbp + 8]>
new  <	; PreCall 55 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1528:
old  <	jmp rax>
new  <>

1529:
old  <>
new  < strtol_test$293:>

1530:
old  < div$5:>
new  <	; Parameter pointer "<%s> <%li> <%s> <%i>\n" 79>

1531:
old  <	; SignedDivide result.quot num denum>
new  <	mov qword [rbp + 79], string_3C25s3E203C25li3E203C25s3E203C25i3E0A#>

1532:
old  <	mov eax, [rbp + 24]>
new  <>

1533:
old  <	xor edx, edx>
new  < strtol_test$294:>

1534:
old  <	idiv dword [rbp + 28]>
new  <	; Parameter pointer text 87>

1535:
old  <	mov [rbp + 32], eax>
new  <	mov [rbp + 87], rbp>

1536:
old  <>
new  <	add qword [rbp + 87], 28>

1537:
old  < div$6:>
new  <>

1538:
old  <	; SignedModulo result.rem num denum>
new  < strtol_test$295:>

1539:
old  <	mov eax, [rbp + 24]>
new  <	; Parameter signed long int value 95>

1540:
old  <	xor edx, edx>
new  <	mov rax, [rbp + 47]>

1541:
old  <	idiv dword [rbp + 28]>
new  <	mov [rbp + 95], rax>

1542:
old  <	mov [rbp + 36], edx>
new  <>

1543:
old  <>
new  < strtol_test$296:>

1544:
old  < div$7:>
new  <	; Parameter pointer pointer 103>

1545:
old  <	; Return result>
new  <	mov rax, [rbp + 39]>

1546:
old  <	mov rbx, rbp>
new  <	mov [rbp + 103], rax>

1547:
old  <	add rbx, 32>
new  <>

1548:
old  <	mov rax, [rbp]>
new  < strtol_test$297:>

1549:
old  <	mov rdi, [rbp + 16]>
new  <	; Parameter signedint base 111>

1550:
old  <	mov rbp, [rbp + 8]>
new  <	mov eax, [rbp + 24]>

1551:
old  <	jmp rax>
new  <	mov [rbp + 111], eax>

1553:
old  < div$8:>
new  < strtol_test$298:>

1554:
old  <	; FunctionEnd div>
new  <	; Call printf 55 28>

1555:
old  <>
new  <	mov qword [rbp + 55], strtol_test$299>

1556:
old  <section .text>
new  <	mov [rbp + 63], rbp>

1557:
old  <>
new  <	add rbp, 55>

1558:
old  < ldiv:>
new  <	mov rdi, rbp>

1559:
old  <	; Assign result.quot 0>
new  <	add rdi, 28>

1560:
old  <	mov qword [rbp + 40], 0>
new  <	jmp printf>

1562:
old  < ldiv$1:>
new  < strtol_test$299:>

1563:
old  <	; Assign result.rem 0>
new  <	; PostCall 55>

1564:
old  <	mov qword [rbp + 48], 0>
new  <>

1565:
old  <>
new  < strtol_test$300:>

1566:
old  < ldiv$2:>
new  <	; Assign base 11>

1567:
old  <	; NotEqual 5 denum 0>
new  <	mov dword [rbp + 24], 11>

1568:
old  <	cmp qword [rbp + 32], 0>
new  <>

1569:
old  <	jne ldiv$5>
new  < strtol_test$301:>

1570:
old  <>
new  <	; Assign text[0] 32>

1571:
old  < ldiv$3:>
new  <	mov byte [rbp + 28], 32>

1572:
old  <	; Assign errno 6>
new  <>

1573:
old  <	mov dword [errno], 6>
new  < strtol_test$302:>

1574:
old  <>
new  <	; Assign text[1] 32>

1575:
old  < ldiv$4:>
new  <	mov byte [rbp + 29], 32>

1576:
old  <	; Return result>
new  <>

1577:
old  <	mov rbx, rbp>
new  < strtol_test$303:>

1578:
old  <	add rbx, 40>
new  <	; Assign text[2] 32>

1579:
old  <	mov rax, [rbp]>
new  <	mov byte [rbp + 30], 32>

1580:
old  <	mov rdi, [rbp + 16]>
new  <>

1581:
old  <	mov rbp, [rbp + 8]>
new  < strtol_test$304:>

1582:
old  <	jmp rax>
new  <	; Assign text[3] 43>

1583:
old  <>
new  <	mov byte [rbp + 31], 43>

1584:
old  < ldiv$5:>
new  <>

1585:
old  <	; SignedDivide result.quot num denum>
new  < strtol_test$305:>

1586:
old  <	mov rax, [rbp + 24]>
new  <	; Assign text[4] 49>

1587:
old  <	xor rdx, rdx>
new  <	mov byte [rbp + 32], 49>

1588:
old  <	idiv qword [rbp + 32]>
new  <>

1589:
old  <	mov [rbp + 40], rax>
new  < strtol_test$306:>

1590:
old  <>
new  <	; Assign text[5] 50>

1591:
old  < ldiv$6:>
new  <	mov byte [rbp + 33], 50>

1592:
old  <	; SignedModulo result.rem num denum>
new  <>

1593:
old  <	mov rax, [rbp + 24]>
new  < strtol_test$307:>

1594:
old  <	xor rdx, rdx>
new  <	; Assign text[6] 51>

1595:
old  <	idiv qword [rbp + 32]>
new  <	mov byte [rbp + 34], 51>

1596:
old  <	mov [rbp + 48], rdx>
new  <>

1597:
old  <>
new  < strtol_test$308:>

1598:
old  < ldiv$7:>
new  <	; Assign text[7] 97>

1599:
old  <	; Return result>
new  <	mov byte [rbp + 35], 97>

1600:
old  <	mov rbx, rbp>
new  <>

1601:
old  <	add rbx, 40>
new  < strtol_test$309:>

1602:
old  <	mov rax, [rbp]>
new  <	; Assign text[8] 98>

1603:
old  <	mov rdi, [rbp + 16]>
new  <	mov byte [rbp + 36], 98>

1604:
old  <	mov rbp, [rbp + 8]>
new  <>

1605:
old  <	jmp rax>
new  < strtol_test$310:>

1606:
old  <>
new  <	; Assign text[9] 99>

1607:
old  < ldiv$8:>
new  <	mov byte [rbp + 37], 99>

1608:
old  <	; FunctionEnd ldiv>
new  <>

39:
old  <	; Address Â£temporary2123 time>
new  <	; Address Â£temporary2740 time>

44:
old  <	; IntegralToIntegral Â£temporary2124 Â£temporary2123>
new  <	; IntegralToIntegral Â£temporary2741 Â£temporary2740>

47:
old  <	; AssignRegister rdi Â£temporary2124>
new  <	; AssignRegister rdi Â£temporary2741>

59:
old  <	; Dereference Â£temporary2126 -> timePtr timePtr 0>
new  <	; Dereference Â£temporary2743 -> timePtr timePtr 0>

63:
old  <	; Assign Â£temporary2126 -> timePtr time>
new  <	; Assign Â£temporary2743 -> timePtr time>

116:
old  <	; Dereference Â£temporary2129 -> tp tp 0>
new  <	; Dereference Â£temporary2746 -> tp tp 0>

120:
old  <	; BinarySubtract Â£temporary2130 Â£temporary2129 -> tp 69>
new  <	; BinarySubtract Â£temporary2747 Â£temporary2746 -> tp 69>

125:
old  <	; SignedDivide Â£temporary2131 Â£temporary2130 4>
new  <	; SignedDivide Â£temporary2748 Â£temporary2747 4>

130:
old  <	; IntegralToIntegral Â£temporary2132 Â£temporary2131>
new  <	; IntegralToIntegral Â£temporary2749 Â£temporary2748>

139:
old  <	; Assign leapDays Â£temporary2132>
new  <	; Assign leapDays Â£temporary2749>

143:
old  <	; Dereference Â£temporary2133 -> tp tp 0>
new  <	; Dereference Â£temporary2750 -> tp tp 0>

147:
old  <	; BinarySubtract Â£temporary2134 Â£temporary2133 -> tp 70>
new  <	; BinarySubtract Â£temporary2751 Â£temporary2750 -> tp 70>

152:
old  <	; SignedMultiply Â£temporary2135 Â£temporary2134 365>
new  <	; SignedMultiply Â£temporary2752 Â£temporary2751 365>

157:
old  <	; IntegralToIntegral Â£temporary2136 Â£temporary2135>
new  <	; IntegralToIntegral Â£temporary2753 Â£temporary2752>

166:
old  <	; BinaryAdd Â£temporary2137 Â£temporary2136 leapDays>
new  <	; BinaryAdd Â£temporary2754 Â£temporary2753 leapDays>

170:
old  <	; Dereference Â£temporary2138 -> tp tp 0>
new  <	; Dereference Â£temporary2755 -> tp tp 0>

174:
old  <	; IntegralToIntegral Â£temporary2139 Â£temporary2138 -> tp>
new  <	; IntegralToIntegral Â£temporary2756 Â£temporary2755 -> tp>

184:
old  <	; BinaryAdd totalDays Â£temporary2137 Â£temporary2139>
new  <	; BinaryAdd totalDays Â£temporary2754 Â£temporary2756>

189:
old  <	; SignedMultiply Â£temporary2141 totalDays 86400>
new  <	; SignedMultiply Â£temporary2758 totalDays 86400>

196:
old  <	; Dereference Â£temporary2142 -> tp tp 0>
new  <	; Dereference Â£temporary2759 -> tp tp 0>

200:
old  <	; IntegralToIntegral Â£temporary2143 Â£temporary2142 -> tp>
new  <	; IntegralToIntegral Â£temporary2760 Â£temporary2759 -> tp>

210:
old  <	; SignedMultiply Â£temporary2144 Â£temporary2143 3600>
new  <	; SignedMultiply Â£temporary2761 Â£temporary2760 3600>

215:
old  <	; BinaryAdd Â£temporary2145 Â£temporary2141 Â£temporary2144>
new  <	; BinaryAdd Â£temporary2762 Â£temporary2758 Â£temporary2761>

219:
old  <	; Dereference Â£temporary2146 -> tp tp 0>
new  <	; Dereference Â£temporary2763 -> tp tp 0>

223:
old  <	; IntegralToIntegral Â£temporary2147 Â£temporary2146 -> tp>
new  <	; IntegralToIntegral Â£temporary2764 Â£temporary2763 -> tp>

233:
old  <	; SignedMultiply Â£temporary2148 Â£temporary2147 60>
new  <	; SignedMultiply Â£temporary2765 Â£temporary2764 60>

238:
old  <	; BinaryAdd Â£temporary2149 Â£temporary2145 Â£temporary2148>
new  <	; BinaryAdd Â£temporary2766 Â£temporary2762 Â£temporary2765>

242:
old  <	; Dereference Â£temporary2150 -> tp tp 0>
new  <	; Dereference Â£temporary2767 -> tp tp 0>

246:
old  <	; IntegralToIntegral Â£temporary2151 Â£temporary2150 -> tp>
new  <	; IntegralToIntegral Â£temporary2768 Â£temporary2767 -> tp>

256:
old  <	; BinaryAdd Â£temporary2152 Â£temporary2149 Â£temporary2151>
new  <	; BinaryAdd Â£temporary2769 Â£temporary2766 Â£temporary2768>

260:
old  <	; Return Â£temporary2152>
new  <	; Return Â£temporary2769>

279:
old  <@4312$g_timeStruct:>
new  <@4779$g_timeStruct:>

319:
old  <	; Dereference Â£temporary2154 -> timePtr timePtr 0>
new  <	; Dereference Â£temporary2771 -> timePtr timePtr 0>

323:
old  <	; Assign time Â£temporary2154 -> timePtr>
new  <	; Assign time Â£temporary2771 -> timePtr>

335:
old  <	; SignedDivide Â£temporary2157 secondsOfDay 3600>
new  <	; SignedDivide Â£temporary2774 secondsOfDay 3600>

341:
old  <	; IntegralToIntegral Â£temporary2158 Â£temporary2157>
new  <	; IntegralToIntegral Â£temporary2775 Â£temporary2774>

348:
old  <	; Assign g_timeStruct.tm_hour Â£temporary2158>
new  <	; Assign g_timeStruct.tm_hour Â£temporary2775>

349:
old  <	mov [@4312$g_timeStruct + 8], eax>
new  <	mov [@4779$g_timeStruct + 8], eax>

352:
old  <	; SignedModulo Â£temporary2160 secondsOfDay 3600>
new  <	; SignedModulo Â£temporary2777 secondsOfDay 3600>

358:
old  <	; SignedDivide Â£temporary2161 Â£temporary2160 60>
new  <	; SignedDivide Â£temporary2778 Â£temporary2777 60>

364:
old  <	; IntegralToIntegral Â£temporary2162 Â£temporary2161>
new  <	; IntegralToIntegral Â£temporary2779 Â£temporary2778>

371:
old  <	; Assign g_timeStruct.tm_min Â£temporary2162>
new  <	; Assign g_timeStruct.tm_min Â£temporary2779>

372:
old  <	mov [@4312$g_timeStruct + 4], eax>
new  <	mov [@4779$g_timeStruct + 4], eax>

375:
old  <	; SignedModulo Â£temporary2164 secondsOfDay 3600>
new  <	; SignedModulo Â£temporary2781 secondsOfDay 3600>

381:
old  <	; SignedModulo Â£temporary2165 Â£temporary2164 60>
new  <	; SignedModulo Â£temporary2782 Â£temporary2781 60>

387:
old  <	; IntegralToIntegral Â£temporary2166 Â£temporary2165>
new  <	; IntegralToIntegral Â£temporary2783 Â£temporary2782>

394:
old  <	; Assign g_timeStruct.tm_sec Â£temporary2166>
new  <	; Assign g_timeStruct.tm_sec Â£temporary2783>

395:
old  <	mov [@4312$g_timeStruct], edx>
new  <	mov [@4779$g_timeStruct], edx>

410:
old  <	; BinaryAdd Â£temporary2170 totalDays 4>
new  <	; BinaryAdd Â£temporary2787 totalDays 4>

415:
old  <	; IntegralToIntegral Â£temporary2171 Â£temporary2170>
new  <	; IntegralToIntegral Â£temporary2788 Â£temporary2787>

422:
old  <	; Assign g_timeStruct.tm_wday Â£temporary2171>
new  <	; Assign g_timeStruct.tm_wday Â£temporary2788>

423:
old  <	mov [@4312$g_timeStruct + 24], eax>
new  <	mov [@4779$g_timeStruct + 24], eax>

430:
old  <	; BinarySubtract Â£temporary2173 totalDays 3>
new  <	; BinarySubtract Â£temporary2790 totalDays 3>

435:
old  <	; SignedModulo Â£temporary2174 Â£temporary2173 7>
new  <	; SignedModulo Â£temporary2791 Â£temporary2790 7>

440:
old  <	; IntegralToIntegral Â£temporary2175 Â£temporary2174>
new  <	; IntegralToIntegral Â£temporary2792 Â£temporary2791>

447:
old  <	; Assign g_timeStruct.tm_wday Â£temporary2175>
new  <	; Assign g_timeStruct.tm_wday Â£temporary2792>

448:
old  <	mov [@4312$g_timeStruct + 24], edx>
new  <	mov [@4779$g_timeStruct + 24], edx>

451:
old  <	; SignedModulo Â£temporary2176 year 4>
new  <	; SignedModulo Â£temporary2793 year 4>

457:
old  <	; NotEqual 30 Â£temporary2176 0>
new  <	; NotEqual 30 Â£temporary2793 0>

462:
old  <	; SignedModulo Â£temporary2178 year 100>
new  <	; SignedModulo Â£temporary2795 year 100>

468:
old  <	; NotEqual 32 Â£temporary2178 0>
new  <	; NotEqual 32 Â£temporary2795 0>

473:
old  <	; SignedModulo Â£temporary2181 year 400>
new  <	; SignedModulo Â£temporary2798 year 400>

479:
old  <	; NotEqual 34 Â£temporary2181 0>
new  <	; NotEqual 34 Â£temporary2798 0>

484:
old  <	; Assign Â£temporary2184 1>
new  <	; Assign Â£temporary2801 1>

492:
old  <	; Assign Â£temporary2184 0>
new  <	; Assign Â£temporary2801 0>

496:
old  <	; Assign leapYear Â£temporary2184>
new  <	; Assign leapYear Â£temporary2801>

505:
old  <	; Assign Â£temporary2186 366>
new  <	; Assign Â£temporary2803 366>

513:
old  <	; Assign Â£temporary2186 365>
new  <	; Assign Â£temporary2803 365>

517:
old  <	; Assign daysOfYear Â£temporary2186>
new  <	; Assign daysOfYear Â£temporary2803>

521:
old  <	; IntegralToIntegral Â£temporary2187 daysOfYear>
new  <	; IntegralToIntegral Â£temporary2804 daysOfYear>

531:
old  <	; SignedGreaterThanEqual 83 totalDays Â£temporary2187>
new  <	; SignedGreaterThanEqual 83 totalDays Â£temporary2804>

539:
old  <	mov [@4312$g_timeStruct + 20], eax>
new  <	mov [@4779$g_timeStruct + 20], eax>

542:
old  <	; IntegralToIntegral Â£temporary2192 totalDays>
new  <	; IntegralToIntegral Â£temporary2809 totalDays>

550:
old  <	; Assign g_timeStruct.tm_yday Â£temporary2192>
new  <	; Assign g_timeStruct.tm_yday Â£temporary2809>

551:
old  <	mov [@4312$g_timeStruct + 28], eax>
new  <	mov [@4779$g_timeStruct + 28], eax>

563:
old  <	; Assign Â£temporary2194 29>
new  <	; Assign Â£temporary2811 29>

571:
old  <	; Assign Â£temporary2194 28>
new  <	; Assign Â£temporary2811 28>

575:
old  <	; Assign daysOfMonths[1] Â£temporary2194>
new  <	; Assign daysOfMonths[1] Â£temporary2811>

623:
old  <	; IntegralToIntegral Â£temporary2208 month>
new  <	; IntegralToIntegral Â£temporary2825 month>

629:
old  <	; UnsignedMultiply Â£temporary2209 Â£temporary2208 4>
new  <	; UnsignedMultiply Â£temporary2826 Â£temporary2825 4>

634:
old  <	; BinaryAdd Â£temporary2210 daysOfMonths Â£temporary2209>
new  <	; BinaryAdd Â£temporary2827 daysOfMonths Â£temporary2826>

640:
old  <	; Dereference Â£temporary2207 -> Â£temporary2210 Â£temporary2210 0>
new  <	; Dereference Â£temporary2824 -> Â£temporary2827 Â£temporary2827 0>

643:
old  <	; IntegralToIntegral Â£temporary2211 Â£temporary2207 -> Â£temporary2210>
new  <	; IntegralToIntegral Â£temporary2828 Â£temporary2824 -> Â£temporary2827>

653:
old  <	; SignedLessThan 77 totalDays Â£temporary2211>
new  <	; SignedLessThan 77 totalDays Â£temporary2828>

658:
old  <	; IntegralToIntegral Â£temporary2214 month>
new  <	; IntegralToIntegral Â£temporary2831 month>

664:
old  <	; UnsignedMultiply Â£temporary2215 Â£temporary2214 4>
new  <	; UnsignedMultiply Â£temporary2832 Â£temporary2831 4>

669:
old  <	; BinaryAdd Â£temporary2216 daysOfMonths Â£temporary2215>
new  <	; BinaryAdd Â£temporary2833 daysOfMonths Â£temporary2832>

675:
old  <	; Dereference Â£temporary2213 -> Â£temporary2216 Â£temporary2216 0>
new  <	; Dereference Â£temporary2830 -> Â£temporary2833 Â£temporary2833 0>

678:
old  <	; IntegralToIntegral Â£temporary2217 Â£temporary2213 -> Â£temporary2216>
new  <	; IntegralToIntegral Â£temporary2834 Â£temporary2830 -> Â£temporary2833>

688:
old  <	; BinarySubtract totalDays totalDays Â£temporary2217>
new  <	; BinarySubtract totalDays totalDays Â£temporary2834>

702:
old  <	mov [@4312$g_timeStruct + 16], eax>
new  <	mov [@4779$g_timeStruct + 16], eax>

705:
old  <	; BinaryAdd Â£temporary2222 totalDays 1>
new  <	; BinaryAdd Â£temporary2839 totalDays 1>

710:
old  <	; IntegralToIntegral Â£temporary2223 Â£temporary2222>
new  <	; IntegralToIntegral Â£temporary2840 Â£temporary2839>

717:
old  <	; Assign g_timeStruct.tm_mday Â£temporary2223>
new  <	; Assign g_timeStruct.tm_mday Â£temporary2840>

718:
old  <	mov [@4312$g_timeStruct + 12], eax>
new  <	mov [@4779$g_timeStruct + 12], eax>

722:
old  <	mov dword [@4312$g_timeStruct + 32], -1>
new  <	mov dword [@4779$g_timeStruct + 32], -1>

725:
old  <	; Return @4312$g_timeStruct>
new  <	; Return @4779$g_timeStruct>

726:
old  <	mov rbx, @4312$g_timeStruct>
new  <	mov rbx, @4779$g_timeStruct>

737:
old  <	; IntegralToIntegral Â£temporary2226 daysOfYear>
new  <	; IntegralToIntegral Â£temporary2843 daysOfYear>

747:
old  <	; BinarySubtract totalDays totalDays Â£temporary2226>
new  <	; BinarySubtract totalDays totalDays Â£temporary2843>

774:
old  <	; BinarySubtract Â£temporary2229 time2 time1>
new  <	; BinarySubtract Â£temporary2846 time2 time1>

779:
old  <	; IntegralToFloating Â£temporary2230 Â£temporary2229>
new  <	; IntegralToFloating Â£temporary2847 Â£temporary2846>

784:
old  <	; Return Â£temporary2230>
new  <	; Return Â£temporary2847>

795:
old  <@4324$g_timeString:>
new  <@4791$g_timeString:>

843:
old  <@4325$g_defaultShortDayList:>
new  <@4792$g_defaultShortDayList:>

903:
old  <@4326$g_defaultLongDayList:>
new  <@4793$g_defaultLongDayList:>

993:
old  <@4327$g_defaultShortMonthList:>
new  <@4794$g_defaultShortMonthList:>

1087:
old  <@4328$g_defaultLongMonthList:>
new  <@4795$g_defaultLongMonthList:>

1137:
old  <	; Dereference Â£temporary2232 -> localeConvPtr localeConvPtr 0>
new  <	; Dereference Â£temporary2849 -> localeConvPtr localeConvPtr 0>

1141:
old  <	; Assign Â£temporary2233 Â£temporary2232 -> localeConvPtr>
new  <	; Assign Â£temporary2850 Â£temporary2849 -> localeConvPtr>

1149:
old  <	; Assign Â£temporary2233 0>
new  <	; Assign Â£temporary2850 0>

1153:
old  <	; Assign shortDayList Â£temporary2233>
new  <	; Assign shortDayList Â£temporary2850>

1162:
old  <	; Dereference Â£temporary2235 -> localeConvPtr localeConvPtr 0>
new  <	; Dereference Â£temporary2852 -> localeConvPtr localeConvPtr 0>

1166:
old  <	; Assign Â£temporary2236 Â£temporary2235 -> localeConvPtr>
new  <	; Assign Â£temporary2853 Â£temporary2852 -> localeConvPtr>

1174:
old  <	; Assign Â£temporary2236 0>
new  <	; Assign Â£temporary2853 0>

1178:
old  <	; Assign shortMonthList Â£temporary2236>
new  <	; Assign shortMonthList Â£temporary2853>

1187:
old  <	; Assign Â£temporary2238 shortDayList>
new  <	; Assign Â£temporary2855 shortDayList>

1195:
old  <	; Assign Â£temporary2238 g_defaultShortDayList>
new  <	; Assign Â£temporary2855 g_defaultShortDayList>

1196:
old  <	mov rax, @4325$g_defaultShortDayList>
new  <	mov rax, @4792$g_defaultShortDayList>

1199:
old  <	; Assign shortDayList Â£temporary2238>
new  <	; Assign shortDayList Â£temporary2855>

1208:
old  <	; Assign Â£temporary2240 shortMonthList>
new  <	; Assign Â£temporary2857 shortMonthList>

1216:
old  <	; Assign Â£temporary2240 g_defaultShortMonthList>
new  <	; Assign Â£temporary2857 g_defaultShortMonthList>

1217:
old  <	mov rax, @4327$g_defaultShortMonthList>
new  <	mov rax, @4794$g_defaultShortMonthList>

1220:
old  <	; Assign shortMonthList Â£temporary2240>
new  <	; Assign shortMonthList Â£temporary2857>

1228:
old  <	mov qword [rbp + 80], @4324$g_timeString>
new  <	mov qword [rbp + 80], @4791$g_timeString>

1235:
old  <	; Dereference Â£temporary2241 -> tp tp 0>
new  <	; Dereference Â£temporary2858 -> tp tp 0>

1239:
old  <	; IntegralToIntegral Â£temporary2243 Â£temporary2241 -> tp>
new  <	; IntegralToIntegral Â£temporary2860 Â£temporary2858 -> tp>

1245:
old  <	; UnsignedMultiply Â£temporary2244 Â£temporary2243 8>
new  <	; UnsignedMultiply Â£temporary2861 Â£temporary2860 8>

1250:
old  <	; BinaryAdd Â£temporary2245 shortDayList Â£temporary2244>
new  <	; BinaryAdd Â£temporary2862 shortDayList Â£temporary2861>

1255:
old  <	; Dereference Â£temporary2242 -> Â£temporary2245 Â£temporary2245 0>
new  <	; Dereference Â£temporary2859 -> Â£temporary2862 Â£temporary2862 0>

1258:
old  <	; Parameter pointer Â£temporary2242 -> Â£temporary2245 96>
new  <	; Parameter pointer Â£temporary2859 -> Â£temporary2862 96>

1263:
old  <	; Dereference Â£temporary2246 -> tp tp 0>
new  <	; Dereference Â£temporary2863 -> tp tp 0>

1267:
old  <	; IntegralToIntegral Â£temporary2248 Â£temporary2246 -> tp>
new  <	; IntegralToIntegral Â£temporary2865 Â£temporary2863 -> tp>

1273:
old  <	; UnsignedMultiply Â£temporary2249 Â£temporary2248 8>
new  <	; UnsignedMultiply Â£temporary2866 Â£temporary2865 8>

1278:
old  <	; BinaryAdd Â£temporary2250 shortMonthList Â£temporary2249>
new  <	; BinaryAdd Â£temporary2867 shortMonthList Â£temporary2866>

1283:
old  <	; Dereference Â£temporary2247 -> Â£temporary2250 Â£temporary2250 0>
new  <	; Dereference Â£temporary2864 -> Â£temporary2867 Â£temporary2867 0>

1286:
old  <	; Parameter pointer Â£temporary2247 -> Â£temporary2250 104>
new  <	; Parameter pointer Â£temporary2864 -> Â£temporary2867 104>

1291:
old  <	; Dereference Â£temporary2251 -> tp tp 0>
new  <	; Dereference Â£temporary2868 -> tp tp 0>

1295:
old  <	; Parameter signedint Â£temporary2251 -> tp 112>
new  <	; Parameter signedint Â£temporary2868 -> tp 112>

1300:
old  <	; Dereference Â£temporary2252 -> tp tp 0>
new  <	; Dereference Â£temporary2869 -> tp tp 0>

1304:
old  <	; Parameter signedint Â£temporary2252 -> tp 116>
new  <	; Parameter signedint Â£temporary2869 -> tp 116>

1309:
old  <	; Dereference Â£temporary2253 -> tp tp 0>
new  <	; Dereference Â£temporary2870 -> tp tp 0>

1313:
old  <	; Parameter signedint Â£temporary2253 -> tp 120>
new  <	; Parameter signedint Â£temporary2870 -> tp 120>

1318:
old  <	; Dereference Â£temporary2254 -> tp tp 0>
new  <	; Dereference Â£temporary2871 -> tp tp 0>

1322:
old  <	; Parameter signedint Â£temporary2254 -> tp 124>
new  <	; Parameter signedint Â£temporary2871 -> tp 124>

1327:
old  <	; Dereference Â£temporary2255 -> tp tp 0>
new  <	; Dereference Â£temporary2872 -> tp tp 0>

1331:
old  <	; BinaryAdd Â£temporary2256 Â£temporary2255 -> tp 1900>
new  <	; BinaryAdd Â£temporary2873 Â£temporary2872 -> tp 1900>

1336:
old  <	; Parameter signedint Â£temporary2256 128>
new  <	; Parameter signedint Â£temporary2873 128>

1353:
old  <	mov rbx, @4324$g_timeString>
new  <	mov rbx, @4791$g_timeString>

1386:
old  <	; GetReturnValue Â£temporary2258>
new  <	; GetReturnValue Â£temporary2875>

1389:
old  <	; Parameter pointer Â£temporary2258 56>
new  <	; Parameter pointer Â£temporary2875 56>

1403:
old  <	; GetReturnValue Â£temporary2259>
new  <	; GetReturnValue Â£temporary2876>

1406:
old  <	; Return Â£temporary2259>
new  <	; Return Â£temporary2876>

1442:
old  <	; GetReturnValue Â£temporary2260>
new  <	; GetReturnValue Â£temporary2877>

1445:
old  <	; Assign tmPtr Â£temporary2260>
new  <	; Assign tmPtr Â£temporary2877>

1462:
old  <	; GetReturnValue Â£temporary2261>
new  <	; GetReturnValue Â£temporary2878>

1465:
old  <	; Assign localeConvPtr Â£temporary2261>
new  <	; Assign localeConvPtr Â£temporary2878>

1478:
old  <	; Dereference Â£temporary2263 -> tmPtr tmPtr 0>
new  <	; Dereference Â£temporary2880 -> tmPtr tmPtr 0>

1482:
old  <	; Equal 18 Â£temporary2263 -> tmPtr 0>
new  <	; Equal 18 Â£temporary2880 -> tmPtr 0>

1487:
old  <	; Dereference Â£temporary2264 -> localeConvPtr localeConvPtr 0>
new  <	; Dereference Â£temporary2881 -> localeConvPtr localeConvPtr 0>

1491:
old  <	; Assign Â£temporary2267 Â£temporary2264 -> localeConvPtr>
new  <	; Assign Â£temporary2884 Â£temporary2881 -> localeConvPtr>

1499:
old  <	; Dereference Â£temporary2265 -> localeConvPtr localeConvPtr 0>
new  <	; Dereference Â£temporary2882 -> localeConvPtr localeConvPtr 0>

1503:
old  <	; Assign Â£temporary2267 Â£temporary2265 -> localeConvPtr>
new  <	; Assign Â£temporary2884 Â£temporary2882 -> localeConvPtr>

1507:
old  <	; Assign timeZone Â£temporary2267>
new  <	; Assign timeZone Â£temporary2884>

1511:
old  <	; Dereference Â£temporary2268 -> timePtr timePtr 0>
new  <	; Dereference Â£temporary2885 -> timePtr timePtr 0>

1515:
old  <	; SignedMultiply Â£temporary2269 timeZone 3600>
new  <	; SignedMultiply Â£temporary2886 timeZone 3600>

1521:
old  <	; IntegralToIntegral Â£temporary2270 Â£temporary2269>
new  <	; IntegralToIntegral Â£temporary2887 Â£temporary2886>

1526:
old  <	; BinaryAdd time Â£temporary2268 -> timePtr Â£temporary2270>
new  <	; BinaryAdd time Â£temporary2885 -> timePtr Â£temporary2887>

1535:
old  <	; Address Â£temporary2272 time>
new  <	; Address Â£temporary2889 time>

1540:
old  <	; Parameter pointer Â£temporary2272 84>
new  <	; Parameter pointer Â£temporary2889 84>

1554:
old  <	; GetReturnValue Â£temporary2273>
new  <	; GetReturnValue Â£temporary2890>

1557:
old  <	; Return Â£temporary2273>
new  <	; Return Â£temporary2890>

1654:
old  <	; GetReturnValue Â£temporary2275>
new  <	; GetReturnValue Â£temporary2892>

1657:
old  <	; Assign localeConvPtr Â£temporary2275>
new  <	; Assign localeConvPtr Â£temporary2892>

1666:
old  <	; Dereference Â£temporary2277 -> localeConvPtr localeConvPtr 0>
new  <	; Dereference Â£temporary2894 -> localeConvPtr localeConvPtr 0>

1670:
old  <	; Assign Â£temporary2278 Â£temporary2277 -> localeConvPtr>
new  <	; Assign Â£temporary2895 Â£temporary2894 -> localeConvPtr>

1678:
old  <	; Assign Â£temporary2278 0>
new  <	; Assign Â£temporary2895 0>

1682:
old  <	; Assign shortDayList Â£temporary2278>
new  <	; Assign shortDayList Â£temporary2895>

1691:
old  <	; Dereference Â£temporary2280 -> localeConvPtr localeConvPtr 0>
new  <	; Dereference Â£temporary2897 -> localeConvPtr localeConvPtr 0>

1695:
old  <	; Assign Â£temporary2281 Â£temporary2280 -> localeConvPtr>
new  <	; Assign Â£temporary2898 Â£temporary2897 -> localeConvPtr>

1703:
old  <	; Assign Â£temporary2281 0>
new  <	; Assign Â£temporary2898 0>

1707:
old  <	; Assign shortMonthList Â£temporary2281>
new  <	; Assign shortMonthList Â£temporary2898>

1716:
old  <	; Dereference Â£temporary2283 -> localeConvPtr localeConvPtr 0>
new  <	; Dereference Â£temporary2900 -> localeConvPtr localeConvPtr 0>

1720:
old  <	; Assign Â£temporary2284 Â£temporary2283 -> localeConvPtr>
new  <	; Assign Â£temporary2901 Â£temporary2900 -> localeConvPtr>

1728:
old  <	; Assign Â£temporary2284 0>
new  <	; Assign Â£temporary2901 0>

1732:
old  <	; Assign longDayList Â£temporary2284>
new  <	; Assign longDayList Â£temporary2901>

1741:
old  <	; Dereference Â£temporary2286 -> localeConvPtr localeConvPtr 0>
new  <	; Dereference Â£temporary2903 -> localeConvPtr localeConvPtr 0>

1745:
old  <	; Assign Â£temporary2287 Â£temporary2286 -> localeConvPtr>
new  <	; Assign Â£temporary2904 Â£temporary2903 -> localeConvPtr>

1753:
old  <	; Assign Â£temporary2287 0>
new  <	; Assign Â£temporary2904 0>

1757:
old  <	; Assign longMonthList Â£temporary2287>
new  <	; Assign longMonthList Â£temporary2904>

1788:
old  <	; Assign Â£temporary2290 shortDayList>
new  <	; Assign Â£temporary2907 shortDayList>

1796:
old  <	; Assign Â£temporary2290 g_defaultShortDayList>
new  <	; Assign Â£temporary2907 g_defaultShortDayList>

1797:
old  <	mov rax, @4325$g_defaultShortDayList>
new  <	mov rax, @4792$g_defaultShortDayList>

1800:
old  <	; Assign shortDayList Â£temporary2290>
new  <	; Assign shortDayList Â£temporary2907>

1809:
old  <	; Assign Â£temporary2292 longDayList>
new  <	; Assign Â£temporary2909 longDayList>

1817:
old  <	; Assign Â£temporary2292 g_defaultLongDayList>
new  <	; Assign Â£temporary2909 g_defaultLongDayList>

1818:
old  <	mov rax, @4326$g_defaultLongDayList>
new  <	mov rax, @4793$g_defaultLongDayList>

1821:
old  <	; Assign longDayList Â£temporary2292>
new  <	; Assign longDayList Â£temporary2909>

1830:
old  <	; Assign Â£temporary2294 shortMonthList>
new  <	; Assign Â£temporary2911 shortMonthList>

1838:
old  <	; Assign Â£temporary2294 g_defaultShortMonthList>
new  <	; Assign Â£temporary2911 g_defaultShortMonthList>

1839:
old  <	mov rax, @4327$g_defaultShortMonthList>
new  <	mov rax, @4794$g_defaultShortMonthList>

1842:
old  <	; Assign shortMonthList Â£temporary2294>
new  <	; Assign shortMonthList Â£temporary2911>

1851:
old  <	; Assign Â£temporary2296 longMonthList>
new  <	; Assign Â£temporary2913 longMonthList>

1859:
old  <	; Assign Â£temporary2296 g_defaultLongMonthList>
new  <	; Assign Â£temporary2913 g_defaultLongMonthList>

1860:
old  <	mov rax, @4328$g_defaultLongMonthList>
new  <	mov rax, @4795$g_defaultLongMonthList>

1863:
old  <	; Assign longMonthList Â£temporary2296>
new  <	; Assign longMonthList Â£temporary2913>

1867:
old  <	; Dereference Â£temporary2297 -> tp tp 0>
new  <	; Dereference Â£temporary2914 -> tp tp 0>

1871:
old  <	; BinarySubtract Â£temporary2298 Â£temporary2297 -> tp 69>
new  <	; BinarySubtract Â£temporary2915 Â£temporary2914 -> tp 69>

1876:
old  <	; SignedDivide leapDays Â£temporary2298 4>
new  <	; SignedDivide leapDays Â£temporary2915 4>

1882:
old  <	; Dereference Â£temporary2300 -> tp tp 0>
new  <	; Dereference Â£temporary2917 -> tp tp 0>

1886:
old  <	; BinarySubtract Â£temporary2301 Â£temporary2300 -> tp 70>
new  <	; BinarySubtract Â£temporary2918 Â£temporary2917 -> tp 70>

1891:
old  <	; SignedMultiply Â£temporary2302 Â£temporary2301 365>
new  <	; SignedMultiply Â£temporary2919 Â£temporary2918 365>

1896:
old  <	; BinaryAdd Â£temporary2303 Â£temporary2302 leapDays>
new  <	; BinaryAdd Â£temporary2920 Â£temporary2919 leapDays>

1900:
old  <	; Dereference Â£temporary2304 -> tp tp 0>
new  <	; Dereference Â£temporary2921 -> tp tp 0>

1904:
old  <	; BinaryAdd Â£temporary2305 Â£temporary2303 Â£temporary2304 -> tp>
new  <	; BinaryAdd Â£temporary2922 Â£temporary2920 Â£temporary2921 -> tp>

1908:
old  <	; IntegralToIntegral Â£temporary2306 Â£temporary2305>
new  <	; IntegralToIntegral Â£temporary2923 Â£temporary2922>

1917:
old  <	; Assign totalDays Â£temporary2306>
new  <	; Assign totalDays Â£temporary2923>

1926:
old  <	; BinaryAdd Â£temporary2308 totalDays 4>
new  <	; BinaryAdd Â£temporary2925 totalDays 4>

1931:
old  <	; IntegralToIntegral Â£temporary2309 Â£temporary2308>
new  <	; IntegralToIntegral Â£temporary2926 Â£temporary2925>

1938:
old  <	; Assign yearDaySunday Â£temporary2309>
new  <	; Assign yearDaySunday Â£temporary2926>

1946:
old  <	; BinarySubtract Â£temporary2310 totalDays 3>
new  <	; BinarySubtract Â£temporary2927 totalDays 3>

1951:
old  <	; SignedModulo Â£temporary2311 Â£temporary2310 7>
new  <	; SignedModulo Â£temporary2928 Â£temporary2927 7>

1956:
old  <	; IntegralToIntegral Â£temporary2312 Â£temporary2311>
new  <	; IntegralToIntegral Â£temporary2929 Â£temporary2928>

1963:
old  <	; Assign yearDaySunday Â£temporary2312>
new  <	; Assign yearDaySunday Â£temporary2929>

1972:
old  <	; BinaryAdd Â£temporary2314 totalDays 3>
new  <	; BinaryAdd Â£temporary2931 totalDays 3>

1977:
old  <	; IntegralToIntegral Â£temporary2315 Â£temporary2314>
new  <	; IntegralToIntegral Â£temporary2932 Â£temporary2931>

1984:
old  <	; Assign yearDayMonday Â£temporary2315>
new  <	; Assign yearDayMonday Â£temporary2932>

1992:
old  <	; BinarySubtract Â£temporary2316 totalDays 4>
new  <	; BinarySubtract Â£temporary2933 totalDays 4>

1997:
old  <	; SignedModulo Â£temporary2317 Â£temporary2316 7>
new  <	; SignedModulo Â£temporary2934 Â£temporary2933 7>

2002:
old  <	; IntegralToIntegral Â£temporary2318 Â£temporary2317>
new  <	; IntegralToIntegral Â£temporary2935 Â£temporary2934>

2009:
old  <	; Assign yearDayMonday Â£temporary2318>
new  <	; Assign yearDayMonday Â£temporary2935>

2017:
old  <	; IntegralToIntegral Â£temporary2320 index>
new  <	; IntegralToIntegral Â£temporary2937 index>

2023:
old  <	; BinaryAdd Â£temporary2322 fmt Â£temporary2320>
new  <	; BinaryAdd Â£temporary2939 fmt Â£temporary2937>

2028:
old  <	; Dereference Â£temporary2319 -> Â£temporary2322 Â£temporary2322 0>
new  <	; Dereference Â£temporary2936 -> Â£temporary2939 Â£temporary2939 0>

2031:
old  <	; Equal 358 Â£temporary2319 -> Â£temporary2322 0>
new  <	; Equal 358 Â£temporary2936 -> Â£temporary2939 0>

2036:
old  <	; IntegralToIntegral Â£temporary2326 index>
new  <	; IntegralToIntegral Â£temporary2943 index>

2042:
old  <	; BinaryAdd Â£temporary2328 fmt Â£temporary2326>
new  <	; BinaryAdd Â£temporary2945 fmt Â£temporary2943>

2047:
old  <	; Dereference Â£temporary2325 -> Â£temporary2328 Â£temporary2328 0>
new  <	; Dereference Â£temporary2942 -> Â£temporary2945 Â£temporary2945 0>

2050:
old  <	; NotEqual 332 Â£temporary2325 -> Â£temporary2328 37>
new  <	; NotEqual 332 Â£temporary2942 -> Â£temporary2945 37>

2055:
old  <	; BinaryAdd Â£temporary2330 index 1>
new  <	; BinaryAdd Â£temporary2947 index 1>

2060:
old  <	; IntegralToIntegral Â£temporary2332 Â£temporary2330>
new  <	; IntegralToIntegral Â£temporary2949 Â£temporary2947>

2065:
old  <	; BinaryAdd Â£temporary2334 fmt Â£temporary2332>
new  <	; BinaryAdd Â£temporary2951 fmt Â£temporary2949>

2070:
old  <	; Dereference Â£temporary2331 -> Â£temporary2334 Â£temporary2334 0>
new  <	; Dereference Â£temporary2948 -> Â£temporary2951 Â£temporary2951 0>

2073:
old  <	; Case 120 Â£temporary2331 -> Â£temporary2334 97>
new  <	; Case 120 Â£temporary2948 -> Â£temporary2951 97>

2079:
old  <	; Case 131 Â£temporary2331 -> Â£temporary2334 65>
new  <	; Case 131 Â£temporary2948 -> Â£temporary2951 65>

2084:
old  <	; Case 142 Â£temporary2331 -> Â£temporary2334 98>
new  <	; Case 142 Â£temporary2948 -> Â£temporary2951 98>

2089:
old  <	; Case 153 Â£temporary2331 -> Â£temporary2334 66>
new  <	; Case 153 Â£temporary2948 -> Â£temporary2951 66>

2094:
old  <	; Case 164 Â£temporary2331 -> Â£temporary2334 99>
new  <	; Case 164 Â£temporary2948 -> Â£temporary2951 99>

2099:
old  <	; Case 184 Â£temporary2331 -> Â£temporary2334 100>
new  <	; Case 184 Â£temporary2948 -> Â£temporary2951 100>

2104:
old  <	; Case 192 Â£temporary2331 -> Â£temporary2334 72>
new  <	; Case 192 Â£temporary2948 -> Â£temporary2951 72>

2109:
old  <	; Case 200 Â£temporary2331 -> Â£temporary2334 73>
new  <	; Case 200 Â£temporary2948 -> Â£temporary2951 73>

2114:
old  <	; Case 209 Â£temporary2331 -> Â£temporary2334 106>
new  <	; Case 209 Â£temporary2948 -> Â£temporary2951 106>

2119:
old  <	; Case 217 Â£temporary2331 -> Â£temporary2334 109>
new  <	; Case 217 Â£temporary2948 -> Â£temporary2951 109>

2124:
old  <	; Case 226 Â£temporary2331 -> Â£temporary2334 77>
new  <	; Case 226 Â£temporary2948 -> Â£temporary2951 77>

2129:
old  <	; Case 234 Â£temporary2331 -> Â£temporary2334 112>
new  <	; Case 234 Â£temporary2948 -> Â£temporary2951 112>

2134:
old  <	; Case 246 Â£temporary2331 -> Â£temporary2334 83>
new  <	; Case 246 Â£temporary2948 -> Â£temporary2951 83>

2139:
old  <	; Case 254 Â£temporary2331 -> Â£temporary2334 85>
new  <	; Case 254 Â£temporary2948 -> Â£temporary2951 85>

2144:
old  <	; Case 261 Â£temporary2331 -> Â£temporary2334 119>
new  <	; Case 261 Â£temporary2948 -> Â£temporary2951 119>

2149:
old  <	; Case 269 Â£temporary2331 -> Â£temporary2334 87>
new  <	; Case 269 Â£temporary2948 -> Â£temporary2951 87>

2154:
old  <	; Case 276 Â£temporary2331 -> Â£temporary2334 120>
new  <	; Case 276 Â£temporary2948 -> Â£temporary2951 120>

2159:
old  <	; Case 290 Â£temporary2331 -> Â£temporary2334 88>
new  <	; Case 290 Â£temporary2948 -> Â£temporary2951 88>

2164:
old  <	; Case 302 Â£temporary2331 -> Â£temporary2334 121>
new  <	; Case 302 Â£temporary2948 -> Â£temporary2951 121>

2169:
old  <	; Case 311 Â£temporary2331 -> Â£temporary2334 89>
new  <	; Case 311 Â£temporary2948 -> Â£temporary2951 89>

2174:
old  <	; Case 320 Â£temporary2331 -> Â£temporary2334 90>
new  <	; Case 320 Â£temporary2948 -> Â£temporary2951 90>

2179:
old  <	; Case 326 Â£temporary2331 -> Â£temporary2334 37>
new  <	; Case 326 Â£temporary2948 -> Â£temporary2951 37>

2184:
old  <	; CaseEnd Â£temporary2331 -> Â£temporary2334>
new  <	; CaseEnd Â£temporary2948 -> Â£temporary2951>

2199:
old  <	; Dereference Â£temporary2335 -> tp tp 0>
new  <	; Dereference Â£temporary2952 -> tp tp 0>

2203:
old  <	; IntegralToIntegral Â£temporary2337 Â£temporary2335 -> tp>
new  <	; IntegralToIntegral Â£temporary2954 Â£temporary2952 -> tp>

2209:
old  <	; UnsignedMultiply Â£temporary2338 Â£temporary2337 8>
new  <	; UnsignedMultiply Â£temporary2955 Â£temporary2954 8>

2214:
old  <	; BinaryAdd Â£temporary2339 shortDayList Â£temporary2338>
new  <	; BinaryAdd Â£temporary2956 shortDayList Â£temporary2955>

2219:
old  <	; Dereference Â£temporary2336 -> Â£temporary2339 Â£temporary2339 0>
new  <	; Dereference Â£temporary2953 -> Â£temporary2956 Â£temporary2956 0>

2222:
old  <	; Parameter pointer Â£temporary2336 -> Â£temporary2339 168>
new  <	; Parameter pointer Â£temporary2953 -> Â£temporary2956 168>

2249:
old  <	; Dereference Â£temporary2341 -> tp tp 0>
new  <	; Dereference Â£temporary2958 -> tp tp 0>

2253:
old  <	; IntegralToIntegral Â£temporary2343 Â£temporary2341 -> tp>
new  <	; IntegralToIntegral Â£temporary2960 Â£temporary2958 -> tp>

2259:
old  <	; UnsignedMultiply Â£temporary2344 Â£temporary2343 8>
new  <	; UnsignedMultiply Â£temporary2961 Â£temporary2960 8>

2264:
old  <	; BinaryAdd Â£temporary2345 longDayList Â£temporary2344>
new  <	; BinaryAdd Â£temporary2962 longDayList Â£temporary2961>

2269:
old  <	; Dereference Â£temporary2342 -> Â£temporary2345 Â£temporary2345 0>
new  <	; Dereference Â£temporary2959 -> Â£temporary2962 Â£temporary2962 0>

2272:
old  <	; Parameter pointer Â£temporary2342 -> Â£temporary2345 168>
new  <	; Parameter pointer Â£temporary2959 -> Â£temporary2962 168>

2299:
old  <	; Dereference Â£temporary2347 -> tp tp 0>
new  <	; Dereference Â£temporary2964 -> tp tp 0>

2303:
old  <	; IntegralToIntegral Â£temporary2349 Â£temporary2347 -> tp>
new  <	; IntegralToIntegral Â£temporary2966 Â£temporary2964 -> tp>

2309:
old  <	; UnsignedMultiply Â£temporary2350 Â£temporary2349 8>
new  <	; UnsignedMultiply Â£temporary2967 Â£temporary2966 8>

2314:
old  <	; BinaryAdd Â£temporary2351 shortMonthList Â£temporary2350>
new  <	; BinaryAdd Â£temporary2968 shortMonthList Â£temporary2967>

2319:
old  <	; Dereference Â£temporary2348 -> Â£temporary2351 Â£temporary2351 0>
new  <	; Dereference Â£temporary2965 -> Â£temporary2968 Â£temporary2968 0>

2322:
old  <	; Parameter pointer Â£temporary2348 -> Â£temporary2351 168>
new  <	; Parameter pointer Â£temporary2965 -> Â£temporary2968 168>

2349:
old  <	; Dereference Â£temporary2353 -> tp tp 0>
new  <	; Dereference Â£temporary2970 -> tp tp 0>

2353:
old  <	; IntegralToIntegral Â£temporary2355 Â£temporary2353 -> tp>
new  <	; IntegralToIntegral Â£temporary2972 Â£temporary2970 -> tp>

2359:
old  <	; UnsignedMultiply Â£temporary2356 Â£temporary2355 8>
new  <	; UnsignedMultiply Â£temporary2973 Â£temporary2972 8>

2364:
old  <	; BinaryAdd Â£temporary2357 longMonthList Â£temporary2356>
new  <	; BinaryAdd Â£temporary2974 longMonthList Â£temporary2973>

2369:
old  <	; Dereference Â£temporary2354 -> Â£temporary2357 Â£temporary2357 0>
new  <	; Dereference Â£temporary2971 -> Â£temporary2974 Â£temporary2974 0>

2372:
old  <	; Parameter pointer Â£temporary2354 -> Â£temporary2357 168>
new  <	; Parameter pointer Â£temporary2971 -> Â£temporary2974 168>

2403:
old  <	; Dereference Â£temporary2359 -> tp tp 0>
new  <	; Dereference Â£temporary2976 -> tp tp 0>

2407:
old  <	; BinaryAdd Â£temporary2360 Â£temporary2359 -> tp 1900>
new  <	; BinaryAdd Â£temporary2977 Â£temporary2976 -> tp 1900>

2412:
old  <	; Parameter signedint Â£temporary2360 176>
new  <	; Parameter signedint Â£temporary2977 176>

2416:
old  <	; Dereference Â£temporary2361 -> tp tp 0>
new  <	; Dereference Â£temporary2978 -> tp tp 0>

2420:
old  <	; BinaryAdd Â£temporary2362 Â£temporary2361 -> tp 1>
new  <	; BinaryAdd Â£temporary2979 Â£temporary2978 -> tp 1>

2425:
old  <	; Parameter signedint Â£temporary2362 180>
new  <	; Parameter signedint Â£temporary2979 180>

2429:
old  <	; Dereference Â£temporary2363 -> tp tp 0>
new  <	; Dereference Â£temporary2980 -> tp tp 0>

2433:
old  <	; Parameter signedint Â£temporary2363 -> tp 184>
new  <	; Parameter signedint Â£temporary2980 -> tp 184>

2438:
old  <	; Dereference Â£temporary2364 -> tp tp 0>
new  <	; Dereference Â£temporary2981 -> tp tp 0>

2442:
old  <	; Parameter signedint Â£temporary2364 -> tp 188>
new  <	; Parameter signedint Â£temporary2981 -> tp 188>

2447:
old  <	; Dereference Â£temporary2365 -> tp tp 0>
new  <	; Dereference Â£temporary2982 -> tp tp 0>

2451:
old  <	; Parameter signedint Â£temporary2365 -> tp 192>
new  <	; Parameter signedint Â£temporary2982 -> tp 192>

2456:
old  <	; Dereference Â£temporary2366 -> tp tp 0>
new  <	; Dereference Â£temporary2983 -> tp tp 0>

2460:
old  <	; Parameter signedint Â£temporary2366 -> tp 196>
new  <	; Parameter signedint Â£temporary2983 -> tp 196>

2493:
old  <	; Dereference Â£temporary2368 -> tp tp 0>
new  <	; Dereference Â£temporary2985 -> tp tp 0>

2497:
old  <	; Parameter signedint Â£temporary2368 -> tp 176>
new  <	; Parameter signedint Â£temporary2985 -> tp 176>

2530:
old  <	; Dereference Â£temporary2370 -> tp tp 0>
new  <	; Dereference Â£temporary2987 -> tp tp 0>

2534:
old  <	; Parameter signedint Â£temporary2370 -> tp 176>
new  <	; Parameter signedint Â£temporary2987 -> tp 176>

2567:
old  <	; Dereference Â£temporary2372 -> tp tp 0>
new  <	; Dereference Â£temporary2989 -> tp tp 0>

2571:
old  <	; SignedModulo Â£temporary2373 Â£temporary2372 -> tp 12>
new  <	; SignedModulo Â£temporary2990 Â£temporary2989 -> tp 12>

2577:
old  <	; Parameter signedint Â£temporary2373 176>
new  <	; Parameter signedint Â£temporary2990 176>

2609:
old  <	; Dereference Â£temporary2375 -> tp tp 0>
new  <	; Dereference Â£temporary2992 -> tp tp 0>

2613:
old  <	; Parameter signedint Â£temporary2375 -> tp 176>
new  <	; Parameter signedint Â£temporary2992 -> tp 176>

2646:
old  <	; Dereference Â£temporary2377 -> tp tp 0>
new  <	; Dereference Â£temporary2994 -> tp tp 0>

2650:
old  <	; BinaryAdd Â£temporary2378 Â£temporary2377 -> tp 1>
new  <	; BinaryAdd Â£temporary2995 Â£temporary2994 -> tp 1>

2655:
old  <	; Parameter signedint Â£temporary2378 176>
new  <	; Parameter signedint Â£temporary2995 176>

2687:
old  <	; Dereference Â£temporary2380 -> tp tp 0>
new  <	; Dereference Â£temporary2997 -> tp tp 0>

2691:
old  <	; Parameter signedint Â£temporary2380 -> tp 176>
new  <	; Parameter signedint Â£temporary2997 -> tp 176>

2724:
old  <	; Dereference Â£temporary2382 -> tp tp 0>
new  <	; Dereference Â£temporary2999 -> tp tp 0>

2728:
old  <	; SignedGreaterThanEqual 241 Â£temporary2382 -> tp 12>
new  <	; SignedGreaterThanEqual 241 Â£temporary2999 -> tp 12>

2733:
old  <	; Assign Â£temporary2384 "AM">
new  <	; Assign Â£temporary3001 "AM">

2741:
old  <	; Assign Â£temporary2384 "PM">
new  <	; Assign Â£temporary3001 "PM">

2745:
old  <	; Parameter pointer Â£temporary2384 176>
new  <	; Parameter pointer Â£temporary3001 176>

2777:
old  <	; Dereference Â£temporary2386 -> tp tp 0>
new  <	; Dereference Â£temporary3003 -> tp tp 0>

2781:
old  <	; Parameter signedint Â£temporary2386 -> tp 176>
new  <	; Parameter signedint Â£temporary3003 -> tp 176>

2847:
old  <	; Dereference Â£temporary2389 -> tp tp 0>
new  <	; Dereference Â£temporary3006 -> tp tp 0>

2851:
old  <	; Parameter signedint Â£temporary2389 -> tp 176>
new  <	; Parameter signedint Â£temporary3006 -> tp 176>

2917:
old  <	; Dereference Â£temporary2392 -> tp tp 0>
new  <	; Dereference Â£temporary3009 -> tp tp 0>

2921:
old  <	; BinaryAdd Â£temporary2393 Â£temporary2392 -> tp 1900>
new  <	; BinaryAdd Â£temporary3010 Â£temporary3009 -> tp 1900>

2926:
old  <	; Parameter signedint Â£temporary2393 176>
new  <	; Parameter signedint Â£temporary3010 176>

2930:
old  <	; Dereference Â£temporary2394 -> tp tp 0>
new  <	; Dereference Â£temporary3011 -> tp tp 0>

2934:
old  <	; BinaryAdd Â£temporary2395 Â£temporary2394 -> tp 1>
new  <	; BinaryAdd Â£temporary3012 Â£temporary3011 -> tp 1>

2939:
old  <	; Parameter signedint Â£temporary2395 180>
new  <	; Parameter signedint Â£temporary3012 180>

2943:
old  <	; Dereference Â£temporary2396 -> tp tp 0>
new  <	; Dereference Â£temporary3013 -> tp tp 0>

2947:
old  <	; Parameter signedint Â£temporary2396 -> tp 184>
new  <	; Parameter signedint Â£temporary3013 -> tp 184>

2980:
old  <	; Dereference Â£temporary2398 -> tp tp 0>
new  <	; Dereference Â£temporary3015 -> tp tp 0>

2984:
old  <	; Parameter signedint Â£temporary2398 -> tp 176>
new  <	; Parameter signedint Â£temporary3015 -> tp 176>

2989:
old  <	; Dereference Â£temporary2399 -> tp tp 0>
new  <	; Dereference Â£temporary3016 -> tp tp 0>

2993:
old  <	; Parameter signedint Â£temporary2399 -> tp 180>
new  <	; Parameter signedint Â£temporary3016 -> tp 180>

2998:
old  <	; Dereference Â£temporary2400 -> tp tp 0>
new  <	; Dereference Â£temporary3017 -> tp tp 0>

3002:
old  <	; Parameter signedint Â£temporary2400 -> tp 184>
new  <	; Parameter signedint Â£temporary3017 -> tp 184>

3035:
old  <	; Dereference Â£temporary2402 -> tp tp 0>
new  <	; Dereference Â£temporary3019 -> tp tp 0>

3039:
old  <	; SignedModulo Â£temporary2403 Â£temporary2402 -> tp 100>
new  <	; SignedModulo Â£temporary3020 Â£temporary3019 -> tp 100>

3045:
old  <	; Parameter signedint Â£temporary2403 176>
new  <	; Parameter signedint Â£temporary3020 176>

3077:
old  <	; Dereference Â£temporary2405 -> tp tp 0>
new  <	; Dereference Â£temporary3022 -> tp tp 0>

3081:
old  <	; BinaryAdd Â£temporary2406 Â£temporary2405 -> tp 1900>
new  <	; BinaryAdd Â£temporary3023 Â£temporary3022 -> tp 1900>

3086:
old  <	; Parameter signedint Â£temporary2406 176>
new  <	; Parameter signedint Â£temporary3023 176>

3158:
old  <	; Dereference Â£temporary2410 -> add add 0>
new  <	; Dereference Â£temporary3027 -> add add 0>

3163:
old  <	; IntegralToIntegral Â£temporary2412 index>
new  <	; IntegralToIntegral Â£temporary3029 index>

3169:
old  <	; BinaryAdd Â£temporary2414 fmt Â£temporary2412>
new  <	; BinaryAdd Â£temporary3031 fmt Â£temporary3029>

3174:
old  <	; Dereference Â£temporary2411 -> Â£temporary2414 Â£temporary2414 0>
new  <	; Dereference Â£temporary3028 -> Â£temporary3031 Â£temporary3031 0>

3177:
old  <	; Assign Â£temporary2410 -> add Â£temporary2411 -> Â£temporary2414>
new  <	; Assign Â£temporary3027 -> add Â£temporary3028 -> Â£temporary3031>

3182:
old  <	; Dereference Â£temporary2415 -> add add 0>
new  <	; Dereference Â£temporary3032 -> add add 0>

3187:
old  <	; Assign Â£temporary2415 -> add 0>
new  <	; Assign Â£temporary3032 -> add 0>

3209:
old  <	; GetReturnValue Â£temporary2416>
new  <	; GetReturnValue Â£temporary3033>

3233:
old  <	; GetReturnValue Â£temporary2417>
new  <	; GetReturnValue Â£temporary3034>

3236:
old  <	; BinaryAdd Â£temporary2418 Â£temporary2416 Â£temporary2417>
new  <	; BinaryAdd Â£temporary3035 Â£temporary3033 Â£temporary3034>

3240:
old  <	; SignedGreaterThanEqual 358 Â£temporary2418 smax>
new  <	; SignedGreaterThanEqual 358 Â£temporary3035 smax>

3294:
old  <	; GetReturnValue Â£temporary2421>
new  <	; GetReturnValue Â£temporary3038>

3297:
old  <	; Return Â£temporary2421>
new  <	; Return Â£temporary3038>

35:
old  <	; IntegralToIntegral Â£temporary2423 index>
new  <	; IntegralToIntegral Â£temporary3040 index>

41:
old  <	; BinaryAdd Â£temporary2425 source Â£temporary2423>
new  <	; BinaryAdd Â£temporary3042 source Â£temporary3040>

46:
old  <	; Dereference Â£temporary2422 -> Â£temporary2425 Â£temporary2425 0>
new  <	; Dereference Â£temporary3039 -> Â£temporary3042 Â£temporary3042 0>

49:
old  <	; Equal 14 Â£temporary2422 -> Â£temporary2425 0>
new  <	; Equal 14 Â£temporary3039 -> Â£temporary3042 0>

54:
old  <	; IntegralToIntegral Â£temporary2429 index>
new  <	; IntegralToIntegral Â£temporary3046 index>

60:
old  <	; BinaryAdd Â£temporary2431 target Â£temporary2429>
new  <	; BinaryAdd Â£temporary3048 target Â£temporary3046>

65:
old  <	; Dereference Â£temporary2428 -> Â£temporary2431 Â£temporary2431 0>
new  <	; Dereference Â£temporary3045 -> Â£temporary3048 Â£temporary3048 0>

68:
old  <	; IntegralToIntegral Â£temporary2433 index>
new  <	; IntegralToIntegral Â£temporary3050 index>

74:
old  <	; BinaryAdd Â£temporary2435 source Â£temporary2433>
new  <	; BinaryAdd Â£temporary3052 source Â£temporary3050>

79:
old  <	; Dereference Â£temporary2432 -> Â£temporary2435 Â£temporary2435 0>
new  <	; Dereference Â£temporary3049 -> Â£temporary3052 Â£temporary3052 0>

82:
old  <	; Assign Â£temporary2428 -> Â£temporary2431 Â£temporary2432 -> Â£temporary2435>
new  <	; Assign Â£temporary3045 -> Â£temporary3048 Â£temporary3049 -> Â£temporary3052>

95:
old  <	; IntegralToIntegral Â£temporary2437 index>
new  <	; IntegralToIntegral Â£temporary3054 index>

101:
old  <	; BinaryAdd Â£temporary2439 target Â£temporary2437>
new  <	; BinaryAdd Â£temporary3056 target Â£temporary3054>

106:
old  <	; Dereference Â£temporary2436 -> Â£temporary2439 Â£temporary2439 0>
new  <	; Dereference Â£temporary3053 -> Â£temporary3056 Â£temporary3056 0>

109:
old  <	; Assign Â£temporary2436 -> Â£temporary2439 0>
new  <	; Assign Â£temporary3053 -> Â£temporary3056 0>

136:
old  <	; IntegralToIntegral Â£temporary2442 index>
new  <	; IntegralToIntegral Â£temporary3059 index>

142:
old  <	; BinaryAdd Â£temporary2444 source Â£temporary2442>
new  <	; BinaryAdd Â£temporary3061 source Â£temporary3059>

147:
old  <	; Dereference Â£temporary2441 -> Â£temporary2444 Â£temporary2444 0>
new  <	; Dereference Â£temporary3058 -> Â£temporary3061 Â£temporary3061 0>

150:
old  <	; Equal 15 Â£temporary2441 -> Â£temporary2444 0>
new  <	; Equal 15 Â£temporary3058 -> Â£temporary3061 0>

155:
old  <	; IntegralToIntegral Â£temporary2449 index>
new  <	; IntegralToIntegral Â£temporary3066 index>

161:
old  <	; BinaryAdd Â£temporary2451 target Â£temporary2449>
new  <	; BinaryAdd Â£temporary3068 target Â£temporary3066>

166:
old  <	; Dereference Â£temporary2448 -> Â£temporary2451 Â£temporary2451 0>
new  <	; Dereference Â£temporary3065 -> Â£temporary3068 Â£temporary3068 0>

169:
old  <	; IntegralToIntegral Â£temporary2453 index>
new  <	; IntegralToIntegral Â£temporary3070 index>

175:
old  <	; BinaryAdd Â£temporary2455 source Â£temporary2453>
new  <	; BinaryAdd Â£temporary3072 source Â£temporary3070>

180:
old  <	; Dereference Â£temporary2452 -> Â£temporary2455 Â£temporary2455 0>
new  <	; Dereference Â£temporary3069 -> Â£temporary3072 Â£temporary3072 0>

183:
old  <	; Assign Â£temporary2448 -> Â£temporary2451 Â£temporary2452 -> Â£temporary2455>
new  <	; Assign Â£temporary3065 -> Â£temporary3068 Â£temporary3069 -> Â£temporary3072>

202:
old  <	; IntegralToIntegral Â£temporary2459 index>
new  <	; IntegralToIntegral Â£temporary3076 index>

208:
old  <	; BinaryAdd Â£temporary2461 target Â£temporary2459>
new  <	; BinaryAdd Â£temporary3078 target Â£temporary3076>

213:
old  <	; Dereference Â£temporary2458 -> Â£temporary2461 Â£temporary2461 0>
new  <	; Dereference Â£temporary3075 -> Â£temporary3078 Â£temporary3078 0>

216:
old  <	; Assign Â£temporary2458 -> Â£temporary2461 0>
new  <	; Assign Â£temporary3075 -> Â£temporary3078 0>

259:
old  <	; GetReturnValue Â£temporary2462>
new  <	; GetReturnValue Â£temporary3079>

262:
old  <	; Assign targetLength Â£temporary2462>
new  <	; Assign targetLength Â£temporary3079>

270:
old  <	; IntegralToIntegral Â£temporary2464 index>
new  <	; IntegralToIntegral Â£temporary3081 index>

276:
old  <	; BinaryAdd Â£temporary2466 source Â£temporary2464>
new  <	; BinaryAdd Â£temporary3083 source Â£temporary3081>

281:
old  <	; Dereference Â£temporary2463 -> Â£temporary2466 Â£temporary2466 0>
new  <	; Dereference Â£temporary3080 -> Â£temporary3083 Â£temporary3083 0>

284:
old  <	; Equal 21 Â£temporary2463 -> Â£temporary2466 0>
new  <	; Equal 21 Â£temporary3080 -> Â£temporary3083 0>

289:
old  <	; BinaryAdd Â£temporary2469 targetLength index>
new  <	; BinaryAdd Â£temporary3086 targetLength index>

294:
old  <	; IntegralToIntegral Â£temporary2471 Â£temporary2469>
new  <	; IntegralToIntegral Â£temporary3088 Â£temporary3086>

299:
old  <	; BinaryAdd Â£temporary2473 target Â£temporary2471>
new  <	; BinaryAdd Â£temporary3090 target Â£temporary3088>

304:
old  <	; Dereference Â£temporary2470 -> Â£temporary2473 Â£temporary2473 0>
new  <	; Dereference Â£temporary3087 -> Â£temporary3090 Â£temporary3090 0>

307:
old  <	; IntegralToIntegral Â£temporary2475 index>
new  <	; IntegralToIntegral Â£temporary3092 index>

313:
old  <	; BinaryAdd Â£temporary2477 source Â£temporary2475>
new  <	; BinaryAdd Â£temporary3094 source Â£temporary3092>

318:
old  <	; Dereference Â£temporary2474 -> Â£temporary2477 Â£temporary2477 0>
new  <	; Dereference Â£temporary3091 -> Â£temporary3094 Â£temporary3094 0>

321:
old  <	; Assign Â£temporary2470 -> Â£temporary2473 Â£temporary2474 -> Â£temporary2477>
new  <	; Assign Â£temporary3087 -> Â£temporary3090 Â£temporary3091 -> Â£temporary3094>

334:
old  <	; BinaryAdd Â£temporary2478 targetLength index>
new  <	; BinaryAdd Â£temporary3095 targetLength index>

339:
old  <	; IntegralToIntegral Â£temporary2480 Â£temporary2478>
new  <	; IntegralToIntegral Â£temporary3097 Â£temporary3095>

344:
old  <	; BinaryAdd Â£temporary2482 target Â£temporary2480>
new  <	; BinaryAdd Â£temporary3099 target Â£temporary3097>

349:
old  <	; Dereference Â£temporary2479 -> Â£temporary2482 Â£temporary2482 0>
new  <	; Dereference Â£temporary3096 -> Â£temporary3099 Â£temporary3099 0>

352:
old  <	; Assign Â£temporary2479 -> Â£temporary2482 0>
new  <	; Assign Â£temporary3096 -> Â£temporary3099 0>

387:
old  <	; GetReturnValue Â£temporary2483>
new  <	; GetReturnValue Â£temporary3100>

390:
old  <	; Assign targetLength Â£temporary2483>
new  <	; Assign targetLength Â£temporary3100>

398:
old  <	; BinarySubtract Â£temporary2484 size 1>
new  <	; BinarySubtract Â£temporary3101 size 1>

403:
old  <	; SignedGreaterThanEqual 23 index Â£temporary2484>
new  <	; SignedGreaterThanEqual 23 index Â£temporary3101>

408:
old  <	; IntegralToIntegral Â£temporary2487 index>
new  <	; IntegralToIntegral Â£temporary3104 index>

414:
old  <	; BinaryAdd Â£temporary2489 source Â£temporary2487>
new  <	; BinaryAdd Â£temporary3106 source Â£temporary3104>

419:
old  <	; Dereference Â£temporary2486 -> Â£temporary2489 Â£temporary2489 0>
new  <	; Dereference Â£temporary3103 -> Â£temporary3106 Â£temporary3106 0>

422:
old  <	; Equal 23 Â£temporary2486 -> Â£temporary2489 0>
new  <	; Equal 23 Â£temporary3103 -> Â£temporary3106 0>

427:
old  <	; BinaryAdd Â£temporary2493 targetLength index>
new  <	; BinaryAdd Â£temporary3110 targetLength index>

432:
old  <	; IntegralToIntegral Â£temporary2495 Â£temporary2493>
new  <	; IntegralToIntegral Â£temporary3112 Â£temporary3110>

437:
old  <	; BinaryAdd Â£temporary2497 target Â£temporary2495>
new  <	; BinaryAdd Â£temporary3114 target Â£temporary3112>

442:
old  <	; Dereference Â£temporary2494 -> Â£temporary2497 Â£temporary2497 0>
new  <	; Dereference Â£temporary3111 -> Â£temporary3114 Â£temporary3114 0>

445:
old  <	; IntegralToIntegral Â£temporary2499 index>
new  <	; IntegralToIntegral Â£temporary3116 index>

451:
old  <	; BinaryAdd Â£temporary2501 source Â£temporary2499>
new  <	; BinaryAdd Â£temporary3118 source Â£temporary3116>

456:
old  <	; Dereference Â£temporary2498 -> Â£temporary2501 Â£temporary2501 0>
new  <	; Dereference Â£temporary3115 -> Â£temporary3118 Â£temporary3118 0>

459:
old  <	; Assign Â£temporary2494 -> Â£temporary2497 Â£temporary2498 -> Â£temporary2501>
new  <	; Assign Â£temporary3111 -> Â£temporary3114 Â£temporary3115 -> Â£temporary3118>

472:
old  <	; BinaryAdd Â£temporary2502 targetLength size>
new  <	; BinaryAdd Â£temporary3119 targetLength size>

477:
old  <	; BinarySubtract Â£temporary2503 Â£temporary2502 1>
new  <	; BinarySubtract Â£temporary3120 Â£temporary3119 1>

481:
old  <	; IntegralToIntegral Â£temporary2505 Â£temporary2503>
new  <	; IntegralToIntegral Â£temporary3122 Â£temporary3120>

486:
old  <	; BinaryAdd Â£temporary2507 target Â£temporary2505>
new  <	; BinaryAdd Â£temporary3124 target Â£temporary3122>

491:
old  <	; Dereference Â£temporary2504 -> Â£temporary2507 Â£temporary2507 0>
new  <	; Dereference Â£temporary3121 -> Â£temporary3124 Â£temporary3124 0>

494:
old  <	; Assign Â£temporary2504 -> Â£temporary2507 0>
new  <	; Assign Â£temporary3121 -> Â£temporary3124 0>

515:
old  <	; IntegralToIntegral Â£temporary2510 index>
new  <	; IntegralToIntegral Â£temporary3127 index>

521:
old  <	; BinaryAdd Â£temporary2512 left Â£temporary2510>
new  <	; BinaryAdd Â£temporary3129 left Â£temporary3127>

526:
old  <	; Dereference Â£temporary2509 -> Â£temporary2512 Â£temporary2512 0>
new  <	; Dereference Â£temporary3126 -> Â£temporary3129 Â£temporary3129 0>

529:
old  <	; NotEqual 10 Â£temporary2509 -> Â£temporary2512 0>
new  <	; NotEqual 10 Â£temporary3126 -> Â£temporary3129 0>

534:
old  <	; IntegralToIntegral Â£temporary2515 index>
new  <	; IntegralToIntegral Â£temporary3132 index>

540:
old  <	; BinaryAdd Â£temporary2517 right Â£temporary2515>
new  <	; BinaryAdd Â£temporary3134 right Â£temporary3132>

545:
old  <	; Dereference Â£temporary2514 -> Â£temporary2517 Â£temporary2517 0>
new  <	; Dereference Â£temporary3131 -> Â£temporary3134 Â£temporary3134 0>

548:
old  <	; NotEqual 10 Â£temporary2514 -> Â£temporary2517 0>
new  <	; NotEqual 10 Â£temporary3131 -> Â£temporary3134 0>

561:
old  <	; IntegralToIntegral Â£temporary2521 index>
new  <	; IntegralToIntegral Â£temporary3138 index>

567:
old  <	; BinaryAdd Â£temporary2523 left Â£temporary2521>
new  <	; BinaryAdd Â£temporary3140 left Â£temporary3138>

572:
old  <	; Dereference Â£temporary2520 -> Â£temporary2523 Â£temporary2523 0>
new  <	; Dereference Â£temporary3137 -> Â£temporary3140 Â£temporary3140 0>

575:
old  <	; NotEqual 15 Â£temporary2520 -> Â£temporary2523 0>
new  <	; NotEqual 15 Â£temporary3137 -> Â£temporary3140 0>

588:
old  <	; IntegralToIntegral Â£temporary2526 index>
new  <	; IntegralToIntegral Â£temporary3143 index>

594:
old  <	; BinaryAdd Â£temporary2528 right Â£temporary2526>
new  <	; BinaryAdd Â£temporary3145 right Â£temporary3143>

599:
old  <	; Dereference Â£temporary2525 -> Â£temporary2528 Â£temporary2528 0>
new  <	; Dereference Â£temporary3142 -> Â£temporary3145 Â£temporary3145 0>

602:
old  <	; NotEqual 20 Â£temporary2525 -> Â£temporary2528 0>
new  <	; NotEqual 20 Â£temporary3142 -> Â£temporary3145 0>

615:
old  <	; IntegralToIntegral Â£temporary2531 index>
new  <	; IntegralToIntegral Â£temporary3148 index>

621:
old  <	; BinaryAdd Â£temporary2533 left Â£temporary2531>
new  <	; BinaryAdd Â£temporary3150 left Â£temporary3148>

626:
old  <	; Dereference Â£temporary2530 -> Â£temporary2533 Â£temporary2533 0>
new  <	; Dereference Â£temporary3147 -> Â£temporary3150 Â£temporary3150 0>

629:
old  <	; IntegralToIntegral Â£temporary2535 index>
new  <	; IntegralToIntegral Â£temporary3152 index>

635:
old  <	; BinaryAdd Â£temporary2537 right Â£temporary2535>
new  <	; BinaryAdd Â£temporary3154 right Â£temporary3152>

640:
old  <	; Dereference Â£temporary2534 -> Â£temporary2537 Â£temporary2537 0>
new  <	; Dereference Â£temporary3151 -> Â£temporary3154 Â£temporary3154 0>

643:
old  <	; SignedGreaterThanEqual 28 Â£temporary2530 -> Â£temporary2533 Â£temporary2534 -> Â£temporary2537>
new  <	; SignedGreaterThanEqual 28 Â£temporary3147 -> Â£temporary3150 Â£temporary3151 -> Â£temporary3154>

657:
old  <	; IntegralToIntegral Â£temporary2540 index>
new  <	; IntegralToIntegral Â£temporary3157 index>

663:
old  <	; BinaryAdd Â£temporary2542 left Â£temporary2540>
new  <	; BinaryAdd Â£temporary3159 left Â£temporary3157>

668:
old  <	; Dereference Â£temporary2539 -> Â£temporary2542 Â£temporary2542 0>
new  <	; Dereference Â£temporary3156 -> Â£temporary3159 Â£temporary3159 0>

671:
old  <	; IntegralToIntegral Â£temporary2544 index>
new  <	; IntegralToIntegral Â£temporary3161 index>

677:
old  <	; BinaryAdd Â£temporary2546 right Â£temporary2544>
new  <	; BinaryAdd Â£temporary3163 right Â£temporary3161>

682:
old  <	; Dereference Â£temporary2543 -> Â£temporary2546 Â£temporary2546 0>
new  <	; Dereference Â£temporary3160 -> Â£temporary3163 Â£temporary3163 0>

685:
old  <	; SignedLessThanEqual 36 Â£temporary2539 -> Â£temporary2542 Â£temporary2543 -> Â£temporary2546>
new  <	; SignedLessThanEqual 36 Â£temporary3156 -> Â£temporary3159 Â£temporary3160 -> Â£temporary3163>

722:
old  <	; IntegralToIntegral Â£temporary2552 index>
new  <	; IntegralToIntegral Â£temporary3169 index>

728:
old  <	; BinaryAdd Â£temporary2554 left Â£temporary2552>
new  <	; BinaryAdd Â£temporary3171 left Â£temporary3169>

733:
old  <	; Dereference Â£temporary2551 -> Â£temporary2554 Â£temporary2554 0>
new  <	; Dereference Â£temporary3168 -> Â£temporary3171 Â£temporary3171 0>

736:
old  <	; NotEqual 11 Â£temporary2551 -> Â£temporary2554 0>
new  <	; NotEqual 11 Â£temporary3168 -> Â£temporary3171 0>

741:
old  <	; IntegralToIntegral Â£temporary2557 index>
new  <	; IntegralToIntegral Â£temporary3174 index>

747:
old  <	; BinaryAdd Â£temporary2559 right Â£temporary2557>
new  <	; BinaryAdd Â£temporary3176 right Â£temporary3174>

752:
old  <	; Dereference Â£temporary2556 -> Â£temporary2559 Â£temporary2559 0>
new  <	; Dereference Â£temporary3173 -> Â£temporary3176 Â£temporary3176 0>

755:
old  <	; NotEqual 11 Â£temporary2556 -> Â£temporary2559 0>
new  <	; NotEqual 11 Â£temporary3173 -> Â£temporary3176 0>

768:
old  <	; IntegralToIntegral Â£temporary2563 index>
new  <	; IntegralToIntegral Â£temporary3180 index>

774:
old  <	; BinaryAdd Â£temporary2565 left Â£temporary2563>
new  <	; BinaryAdd Â£temporary3182 left Â£temporary3180>

779:
old  <	; Dereference Â£temporary2562 -> Â£temporary2565 Â£temporary2565 0>
new  <	; Dereference Â£temporary3179 -> Â£temporary3182 Â£temporary3182 0>

782:
old  <	; NotEqual 16 Â£temporary2562 -> Â£temporary2565 0>
new  <	; NotEqual 16 Â£temporary3179 -> Â£temporary3182 0>

795:
old  <	; IntegralToIntegral Â£temporary2568 index>
new  <	; IntegralToIntegral Â£temporary3185 index>

801:
old  <	; BinaryAdd Â£temporary2570 right Â£temporary2568>
new  <	; BinaryAdd Â£temporary3187 right Â£temporary3185>

806:
old  <	; Dereference Â£temporary2567 -> Â£temporary2570 Â£temporary2570 0>
new  <	; Dereference Â£temporary3184 -> Â£temporary3187 Â£temporary3187 0>

809:
old  <	; NotEqual 21 Â£temporary2567 -> Â£temporary2570 0>
new  <	; NotEqual 21 Â£temporary3184 -> Â£temporary3187 0>

822:
old  <	; IntegralToIntegral Â£temporary2573 index>
new  <	; IntegralToIntegral Â£temporary3190 index>

828:
old  <	; BinaryAdd Â£temporary2575 left Â£temporary2573>
new  <	; BinaryAdd Â£temporary3192 left Â£temporary3190>

833:
old  <	; Dereference Â£temporary2572 -> Â£temporary2575 Â£temporary2575 0>
new  <	; Dereference Â£temporary3189 -> Â£temporary3192 Â£temporary3192 0>

836:
old  <	; IntegralToIntegral Â£temporary2577 index>
new  <	; IntegralToIntegral Â£temporary3194 index>

842:
old  <	; BinaryAdd Â£temporary2579 right Â£temporary2577>
new  <	; BinaryAdd Â£temporary3196 right Â£temporary3194>

847:
old  <	; Dereference Â£temporary2576 -> Â£temporary2579 Â£temporary2579 0>
new  <	; Dereference Â£temporary3193 -> Â£temporary3196 Â£temporary3196 0>

850:
old  <	; SignedGreaterThanEqual 29 Â£temporary2572 -> Â£temporary2575 Â£temporary2576 -> Â£temporary2579>
new  <	; SignedGreaterThanEqual 29 Â£temporary3189 -> Â£temporary3192 Â£temporary3193 -> Â£temporary3196>

864:
old  <	; IntegralToIntegral Â£temporary2582 index>
new  <	; IntegralToIntegral Â£temporary3199 index>

870:
old  <	; BinaryAdd Â£temporary2584 left Â£temporary2582>
new  <	; BinaryAdd Â£temporary3201 left Â£temporary3199>

875:
old  <	; Dereference Â£temporary2581 -> Â£temporary2584 Â£temporary2584 0>
new  <	; Dereference Â£temporary3198 -> Â£temporary3201 Â£temporary3201 0>

878:
old  <	; IntegralToIntegral Â£temporary2586 index>
new  <	; IntegralToIntegral Â£temporary3203 index>

884:
old  <	; BinaryAdd Â£temporary2588 right Â£temporary2586>
new  <	; BinaryAdd Â£temporary3205 right Â£temporary3203>

889:
old  <	; Dereference Â£temporary2585 -> Â£temporary2588 Â£temporary2588 0>
new  <	; Dereference Â£temporary3202 -> Â£temporary3205 Â£temporary3205 0>

892:
old  <	; SignedLessThanEqual 37 Â£temporary2581 -> Â£temporary2584 Â£temporary2585 -> Â£temporary2588>
new  <	; SignedLessThanEqual 37 Â£temporary3198 -> Â£temporary3201 Â£temporary3202 -> Â£temporary3205>

927:
old  <	; IntegralToIntegral Â£temporary2590 i>
new  <	; IntegralToIntegral Â£temporary3207 i>

935:
old  <	; Assign c Â£temporary2590>
new  <	; Assign c Â£temporary3207>

943:
old  <	; IntegralToIntegral Â£temporary2592 index>
new  <	; IntegralToIntegral Â£temporary3209 index>

949:
old  <	; BinaryAdd Â£temporary2594 text Â£temporary2592>
new  <	; BinaryAdd Â£temporary3211 text Â£temporary3209>

954:
old  <	; Dereference Â£temporary2591 -> Â£temporary2594 Â£temporary2594 0>
new  <	; Dereference Â£temporary3208 -> Â£temporary3211 Â£temporary3211 0>

957:
old  <	; Equal 18 Â£temporary2591 -> Â£temporary2594 0>
new  <	; Equal 18 Â£temporary3208 -> Â£temporary3211 0>

962:
old  <	; IntegralToIntegral Â£temporary2598 index>
new  <	; IntegralToIntegral Â£temporary3215 index>

968:
old  <	; BinaryAdd Â£temporary2600 text Â£temporary2598>
new  <	; BinaryAdd Â£temporary3217 text Â£temporary3215>

973:
old  <	; Dereference Â£temporary2597 -> Â£temporary2600 Â£temporary2600 0>
new  <	; Dereference Â£temporary3214 -> Â£temporary3217 Â£temporary3217 0>

976:
old  <	; NotEqual 16 Â£temporary2597 -> Â£temporary2600 c>
new  <	; NotEqual 16 Â£temporary3214 -> Â£temporary3217 c>

982:
old  <	; IntegralToIntegral Â£temporary2603 index>
new  <	; IntegralToIntegral Â£temporary3220 index>

988:
old  <	; BinaryAdd Â£temporary2605 text Â£temporary2603>
new  <	; BinaryAdd Â£temporary3222 text Â£temporary3220>

993:
old  <	; Dereference Â£temporary2602 -> Â£temporary2605 Â£temporary2605 0>
new  <	; Dereference Â£temporary3219 -> Â£temporary3222 Â£temporary3222 0>

996:
old  <	; Address Â£temporary2606 Â£temporary2602 -> Â£temporary2605>
new  <	; Address Â£temporary3223 Â£temporary3219 -> Â£temporary3222>

999:
old  <	; Return Â£temporary2606>
new  <	; Return Â£temporary3223>

1031:
old  <	; IntegralToIntegral Â£temporary2607 i>
new  <	; IntegralToIntegral Â£temporary3224 i>

1039:
old  <	; Assign c Â£temporary2607>
new  <	; Assign c Â£temporary3224>

1047:
old  <	; IntegralToIntegral Â£temporary2609 index>
new  <	; IntegralToIntegral Â£temporary3226 index>

1053:
old  <	; BinaryAdd Â£temporary2611 text Â£temporary2609>
new  <	; BinaryAdd Â£temporary3228 text Â£temporary3226>

1058:
old  <	; Dereference Â£temporary2608 -> Â£temporary2611 Â£temporary2611 0>
new  <	; Dereference Â£temporary3225 -> Â£temporary3228 Â£temporary3228 0>

1061:
old  <	; Equal 19 Â£temporary2608 -> Â£temporary2611 0>
new  <	; Equal 19 Â£temporary3225 -> Â£temporary3228 0>

1066:
old  <	; IntegralToIntegral Â£temporary2615 index>
new  <	; IntegralToIntegral Â£temporary3232 index>

1072:
old  <	; BinaryAdd Â£temporary2617 text Â£temporary2615>
new  <	; BinaryAdd Â£temporary3234 text Â£temporary3232>

1077:
old  <	; Dereference Â£temporary2614 -> Â£temporary2617 Â£temporary2617 0>
new  <	; Dereference Â£temporary3231 -> Â£temporary3234 Â£temporary3234 0>

1080:
old  <	; NotEqual 17 Â£temporary2614 -> Â£temporary2617 c>
new  <	; NotEqual 17 Â£temporary3231 -> Â£temporary3234 c>

1086:
old  <	; IntegralToIntegral Â£temporary2620 index>
new  <	; IntegralToIntegral Â£temporary3237 index>

1092:
old  <	; BinaryAdd Â£temporary2622 text Â£temporary2620>
new  <	; BinaryAdd Â£temporary3239 text Â£temporary3237>

1097:
old  <	; Dereference Â£temporary2619 -> Â£temporary2622 Â£temporary2622 0>
new  <	; Dereference Â£temporary3236 -> Â£temporary3239 Â£temporary3239 0>

1100:
old  <	; Address Â£temporary2623 Â£temporary2619 -> Â£temporary2622>
new  <	; Address Â£temporary3240 Â£temporary3236 -> Â£temporary3239>

1103:
old  <	; Assign result Â£temporary2623>
new  <	; Assign result Â£temporary3240>

1132:
old  <	; IntegralToIntegral Â£temporary2625 index>
new  <	; IntegralToIntegral Â£temporary3242 index>

1138:
old  <	; BinaryAdd Â£temporary2627 mainString Â£temporary2625>
new  <	; BinaryAdd Â£temporary3244 mainString Â£temporary3242>

1143:
old  <	; Dereference Â£temporary2624 -> Â£temporary2627 Â£temporary2627 0>
new  <	; Dereference Â£temporary3241 -> Â£temporary3244 Â£temporary3244 0>

1146:
old  <	; Equal 19 Â£temporary2624 -> Â£temporary2627 0>
new  <	; Equal 19 Â£temporary3241 -> Â£temporary3244 0>

1159:
old  <	; IntegralToIntegral Â£temporary2631 index>
new  <	; IntegralToIntegral Â£temporary3248 index>

1165:
old  <	; BinaryAdd Â£temporary2633 mainString Â£temporary2631>
new  <	; BinaryAdd Â£temporary3250 mainString Â£temporary3248>

1170:
old  <	; Dereference Â£temporary2630 -> Â£temporary2633 Â£temporary2633 0>
new  <	; Dereference Â£temporary3247 -> Â£temporary3250 Â£temporary3250 0>

1173:
old  <	; IntegralToIntegral Â£temporary2634 Â£temporary2630 -> Â£temporary2633>
new  <	; IntegralToIntegral Â£temporary3251 Â£temporary3247 -> Â£temporary3250>

1182:
old  <	; Parameter signedint Â£temporary2634 76>
new  <	; Parameter signedint Â£temporary3251 76>

1196:
old  <	; GetReturnValue Â£temporary2635>
new  <	; GetReturnValue Â£temporary3252>

1199:
old  <	; NotEqual 17 Â£temporary2635 0>
new  <	; NotEqual 17 Â£temporary3252 0>

1237:
old  <	; IntegralToIntegral Â£temporary2638 index>
new  <	; IntegralToIntegral Â£temporary3255 index>

1243:
old  <	; BinaryAdd Â£temporary2640 mainString Â£temporary2638>
new  <	; BinaryAdd Â£temporary3257 mainString Â£temporary3255>

1248:
old  <	; Dereference Â£temporary2637 -> Â£temporary2640 Â£temporary2640 0>
new  <	; Dereference Â£temporary3254 -> Â£temporary3257 Â£temporary3257 0>

1251:
old  <	; Equal 19 Â£temporary2637 -> Â£temporary2640 0>
new  <	; Equal 19 Â£temporary3254 -> Â£temporary3257 0>

1264:
old  <	; IntegralToIntegral Â£temporary2644 index>
new  <	; IntegralToIntegral Â£temporary3261 index>

1270:
old  <	; BinaryAdd Â£temporary2646 mainString Â£temporary2644>
new  <	; BinaryAdd Â£temporary3263 mainString Â£temporary3261>

1275:
old  <	; Dereference Â£temporary2643 -> Â£temporary2646 Â£temporary2646 0>
new  <	; Dereference Â£temporary3260 -> Â£temporary3263 Â£temporary3263 0>

1278:
old  <	; IntegralToIntegral Â£temporary2647 Â£temporary2643 -> Â£temporary2646>
new  <	; IntegralToIntegral Â£temporary3264 Â£temporary3260 -> Â£temporary3263>

1287:
old  <	; Parameter signedint Â£temporary2647 76>
new  <	; Parameter signedint Â£temporary3264 76>

1301:
old  <	; GetReturnValue Â£temporary2648>
new  <	; GetReturnValue Â£temporary3265>

1304:
old  <	; Equal 17 Â£temporary2648 0>
new  <	; Equal 17 Â£temporary3265 0>

1342:
old  <	; IntegralToIntegral Â£temporary2651 index>
new  <	; IntegralToIntegral Â£temporary3268 index>

1348:
old  <	; BinaryAdd Â£temporary2653 mainString Â£temporary2651>
new  <	; BinaryAdd Â£temporary3270 mainString Â£temporary3268>

1353:
old  <	; Dereference Â£temporary2650 -> Â£temporary2653 Â£temporary2653 0>
new  <	; Dereference Â£temporary3267 -> Â£temporary3270 Â£temporary3270 0>

1356:
old  <	; Equal 23 Â£temporary2650 -> Â£temporary2653 0>
new  <	; Equal 23 Â£temporary3267 -> Â£temporary3270 0>

1369:
old  <	; IntegralToIntegral Â£temporary2657 index>
new  <	; IntegralToIntegral Â£temporary3274 index>

1375:
old  <	; BinaryAdd Â£temporary2659 mainString Â£temporary2657>
new  <	; BinaryAdd Â£temporary3276 mainString Â£temporary3274>

1380:
old  <	; Dereference Â£temporary2656 -> Â£temporary2659 Â£temporary2659 0>
new  <	; Dereference Â£temporary3273 -> Â£temporary3276 Â£temporary3276 0>

1383:
old  <	; IntegralToIntegral Â£temporary2660 Â£temporary2656 -> Â£temporary2659>
new  <	; IntegralToIntegral Â£temporary3277 Â£temporary3273 -> Â£temporary3276>

1392:
old  <	; Parameter signedint Â£temporary2660 76>
new  <	; Parameter signedint Â£temporary3277 76>

1406:
old  <	; GetReturnValue Â£temporary2661>
new  <	; GetReturnValue Â£temporary3278>

1409:
old  <	; Equal 21 Â£temporary2661 0>
new  <	; Equal 21 Â£temporary3278 0>

1414:
old  <	; IntegralToIntegral Â£temporary2664 index>
new  <	; IntegralToIntegral Â£temporary3281 index>

1420:
old  <	; BinaryAdd Â£temporary2666 mainString Â£temporary2664>
new  <	; BinaryAdd Â£temporary3283 mainString Â£temporary3281>

1425:
old  <	; Dereference Â£temporary2663 -> Â£temporary2666 Â£temporary2666 0>
new  <	; Dereference Â£temporary3280 -> Â£temporary3283 Â£temporary3283 0>

1428:
old  <	; Address Â£temporary2667 Â£temporary2663 -> Â£temporary2666>
new  <	; Address Â£temporary3284 Â£temporary3280 -> Â£temporary3283>

1431:
old  <	; Return Â£temporary2667>
new  <	; Return Â£temporary3284>

1463:
old  <	; IntegralToIntegral Â£temporary2669 index>
new  <	; IntegralToIntegral Â£temporary3286 index>

1469:
old  <	; BinaryAdd Â£temporary2671 mainString Â£temporary2669>
new  <	; BinaryAdd Â£temporary3288 mainString Â£temporary3286>

1474:
old  <	; Dereference Â£temporary2668 -> Â£temporary2671 Â£temporary2671 0>
new  <	; Dereference Â£temporary3285 -> Â£temporary3288 Â£temporary3288 0>

1477:
old  <	; Equal 21 Â£temporary2668 -> Â£temporary2671 0>
new  <	; Equal 21 Â£temporary3285 -> Â£temporary3288 0>

1485:
old  <	; IntegralToIntegral Â£temporary2674 index>
new  <	; IntegralToIntegral Â£temporary3291 index>

1491:
old  <	; BinaryAdd Â£temporary2675 mainString Â£temporary2674>
new  <	; BinaryAdd Â£temporary3292 mainString Â£temporary3291>

1496:
old  <	; Parameter pointer Â£temporary2675 68>
new  <	; Parameter pointer Â£temporary3292 68>

1515:
old  <	; GetReturnValue Â£temporary2677>
new  <	; GetReturnValue Â£temporary3294>

1518:
old  <	; NotEqual 19 Â£temporary2677 0>
new  <	; NotEqual 19 Â£temporary3294 0>

1523:
old  <	; IntegralToIntegral Â£temporary2680 index>
new  <	; IntegralToIntegral Â£temporary3297 index>

1529:
old  <	; BinaryAdd Â£temporary2682 mainString Â£temporary2680>
new  <	; BinaryAdd Â£temporary3299 mainString Â£temporary3297>

1534:
old  <	; Dereference Â£temporary2679 -> Â£temporary2682 Â£temporary2682 0>
new  <	; Dereference Â£temporary3296 -> Â£temporary3299 Â£temporary3299 0>

1537:
old  <	; Address Â£temporary2683 Â£temporary2679 -> Â£temporary2682>
new  <	; Address Â£temporary3300 Â£temporary3296 -> Â£temporary3299>

1540:
old  <	; Return Â£temporary2683>
new  <	; Return Â£temporary3300>

1572:
old  <	; IntegralToIntegral Â£temporary2685 index>
new  <	; IntegralToIntegral Â£temporary3302 index>

1578:
old  <	; BinaryAdd Â£temporary2687 string Â£temporary2685>
new  <	; BinaryAdd Â£temporary3304 string Â£temporary3302>

1583:
old  <	; Dereference Â£temporary2684 -> Â£temporary2687 Â£temporary2687 0>
new  <	; Dereference Â£temporary3301 -> Â£temporary3304 Â£temporary3304 0>

1586:
old  <	; Equal 7 Â£temporary2684 -> Â£temporary2687 0>
new  <	; Equal 7 Â£temporary3301 -> Â£temporary3304 0>

1631:
old  <	; GetReturnValue Â£temporary2690>
new  <	; GetReturnValue Â£temporary3307>

1634:
old  <	; Assign localeConvPtr Â£temporary2690>
new  <	; Assign localeConvPtr Â£temporary3307>

1643:
old  <	; Dereference Â£temporary2692 -> localeConvPtr localeConvPtr 0>
new  <	; Dereference Â£temporary3309 -> localeConvPtr localeConvPtr 0>

1647:
old  <	; Assign Â£temporary2693 Â£temporary2692 -> localeConvPtr>
new  <	; Assign Â£temporary3310 Â£temporary3309 -> localeConvPtr>

1655:
old  <	; Assign Â£temporary2693 0>
new  <	; Assign Â£temporary3310 0>

1659:
old  <	; Assign messageList Â£temporary2693>
new  <	; Assign messageList Â£temporary3310>

1668:
old  <	; Assign Â£temporary2695 messageList>
new  <	; Assign Â£temporary3312 messageList>

1676:
old  <	; Assign Â£temporary2695 enMessageList>
new  <	; Assign Â£temporary3312 enMessageList>

1680:
old  <	; Assign messageList Â£temporary2695>
new  <	; Assign messageList Â£temporary3312>

1684:
old  <	; IntegralToIntegral Â£temporary2697 errno>
new  <	; IntegralToIntegral Â£temporary3314 errno>

1690:
old  <	; UnsignedMultiply Â£temporary2698 Â£temporary2697 8>
new  <	; UnsignedMultiply Â£temporary3315 Â£temporary3314 8>

1695:
old  <	; BinaryAdd Â£temporary2699 messageList Â£temporary2698>
new  <	; BinaryAdd Â£temporary3316 messageList Â£temporary3315>

1700:
old  <	; Dereference Â£temporary2696 -> Â£temporary2699 Â£temporary2699 0>
new  <	; Dereference Â£temporary3313 -> Â£temporary3316 Â£temporary3316 0>

1703:
old  <	; Return Â£temporary2696 -> Â£temporary2699>
new  <	; Return Â£temporary3313 -> Â£temporary3316>

1727:
old  <	; Dereference Â£temporary2701 -> string string 0>
new  <	; Dereference Â£temporary3318 -> string string 0>

1731:
old  <	; NotEqual 4 Â£temporary2701 -> string 0>
new  <	; NotEqual 4 Â£temporary3318 -> string 0>

1748:
old  <	; IntegralToIntegral Â£temporary2704 index>
new  <	; IntegralToIntegral Â£temporary3321 index>

1754:
old  <	; BinaryAdd Â£temporary2706 string Â£temporary2704>
new  <	; BinaryAdd Â£temporary3323 string Â£temporary3321>

1759:
old  <	; Dereference Â£temporary2703 -> Â£temporary2706 Â£temporary2706 0>
new  <	; Dereference Â£temporary3320 -> Â£temporary3323 Â£temporary3323 0>

1762:
old  <	; Equal 33 Â£temporary2703 -> Â£temporary2706 0>
new  <	; Equal 33 Â£temporary3320 -> Â£temporary3323 0>

1775:
old  <	; IntegralToIntegral Â£temporary2710 index>
new  <	; IntegralToIntegral Â£temporary3327 index>

1781:
old  <	; BinaryAdd Â£temporary2712 string Â£temporary2710>
new  <	; BinaryAdd Â£temporary3329 string Â£temporary3327>

1786:
old  <	; Dereference Â£temporary2709 -> Â£temporary2712 Â£temporary2712 0>
new  <	; Dereference Â£temporary3326 -> Â£temporary3329 Â£temporary3329 0>

1789:
old  <	; IntegralToIntegral Â£temporary2713 Â£temporary2709 -> Â£temporary2712>
new  <	; IntegralToIntegral Â£temporary3330 Â£temporary3326 -> Â£temporary3329>

1798:
old  <	; Parameter signedint Â£temporary2713 84>
new  <	; Parameter signedint Â£temporary3330 84>

1812:
old  <	; GetReturnValue Â£temporary2714>
new  <	; GetReturnValue Â£temporary3331>

1815:
old  <	; Equal 31 Â£temporary2714 0>
new  <	; Equal 31 Â£temporary3331 0>

1820:
old  <	; IntegralToIntegral Â£temporary2717 index>
new  <	; IntegralToIntegral Â£temporary3334 index>

1826:
old  <	; BinaryAdd Â£temporary2719 string Â£temporary2717>
new  <	; BinaryAdd Â£temporary3336 string Â£temporary3334>

1831:
old  <	; Dereference Â£temporary2716 -> Â£temporary2719 Â£temporary2719 0>
new  <	; Dereference Â£temporary3333 -> Â£temporary3336 Â£temporary3336 0>

1834:
old  <	; Assign Â£temporary2716 -> Â£temporary2719 0>
new  <	; Assign Â£temporary3333 -> Â£temporary3336 0>

1838:
old  <	; BinaryAdd Â£temporary2720 index 1>
new  <	; BinaryAdd Â£temporary3337 index 1>

1843:
old  <	; IntegralToIntegral Â£temporary2722 Â£temporary2720>
new  <	; IntegralToIntegral Â£temporary3339 Â£temporary3337>

1848:
old  <	; BinaryAdd Â£temporary2724 string Â£temporary2722>
new  <	; BinaryAdd Â£temporary3341 string Â£temporary3339>

1853:
old  <	; Dereference Â£temporary2721 -> Â£temporary2724 Â£temporary2724 0>
new  <	; Dereference Â£temporary3338 -> Â£temporary3341 Â£temporary3341 0>

1856:
old  <	; Address Â£temporary2725 Â£temporary2721 -> Â£temporary2724>
new  <	; Address Â£temporary3342 Â£temporary3338 -> Â£temporary3341>

1859:
old  <	; Assign token Â£temporary2725>
new  <	; Assign token Â£temporary3342>

1879:
old  <	; IntegralToIntegral Â£temporary2727 index>
new  <	; IntegralToIntegral Â£temporary3344 index>

1885:
old  <	; BinaryAdd Â£temporary2729 string Â£temporary2727>
new  <	; BinaryAdd Â£temporary3346 string Â£temporary3344>

1890:
old  <	; Dereference Â£temporary2726 -> Â£temporary2729 Â£temporary2729 0>
new  <	; Dereference Â£temporary3343 -> Â£temporary3346 Â£temporary3346 0>

1893:
old  <	; Address Â£temporary2730 Â£temporary2726 -> Â£temporary2729>
new  <	; Address Â£temporary3347 Â£temporary3343 -> Â£temporary3346>

1896:
old  <	; Assign token Â£temporary2730>
new  <	; Assign token Â£temporary3347>

1921:
old  <	; Dereference Â£temporary2732 -> token token 0>
new  <	; Dereference Â£temporary3349 -> token token 0>

1925:
old  <	; NotEqual 44 Â£temporary2732 -> token 0>
new  <	; NotEqual 44 Â£temporary3349 -> token 0>

1942:
old  <	; IntegralToIntegral Â£temporary2735 index>
new  <	; IntegralToIntegral Â£temporary3352 index>

1948:
old  <	; BinaryAdd Â£temporary2737 token Â£temporary2735>
new  <	; BinaryAdd Â£temporary3354 token Â£temporary3352>

1953:
old  <	; Dereference Â£temporary2734 -> Â£temporary2737 Â£temporary2737 0>
new  <	; Dereference Â£temporary3351 -> Â£temporary3354 Â£temporary3354 0>

1956:
old  <	; Equal 74 Â£temporary2734 -> Â£temporary2737 0>
new  <	; Equal 74 Â£temporary3351 -> Â£temporary3354 0>

1969:
old  <	; IntegralToIntegral Â£temporary2741 index>
new  <	; IntegralToIntegral Â£temporary3358 index>

1975:
old  <	; BinaryAdd Â£temporary2743 token Â£temporary2741>
new  <	; BinaryAdd Â£temporary3360 token Â£temporary3358>

1980:
old  <	; Dereference Â£temporary2740 -> Â£temporary2743 Â£temporary2743 0>
new  <	; Dereference Â£temporary3357 -> Â£temporary3360 Â£temporary3360 0>

1983:
old  <	; IntegralToIntegral Â£temporary2744 Â£temporary2740 -> Â£temporary2743>
new  <	; IntegralToIntegral Â£temporary3361 Â£temporary3357 -> Â£temporary3360>

1992:
old  <	; Parameter signedint Â£temporary2744 84>
new  <	; Parameter signedint Â£temporary3361 84>

2006:
old  <	; GetReturnValue Â£temporary2745>
new  <	; GetReturnValue Â£temporary3362>

2009:
old  <	; Equal 72 Â£temporary2745 0>
new  <	; Equal 72 Â£temporary3362 0>

2019:
old  <	; IntegralToIntegral Â£temporary2748 index>
new  <	; IntegralToIntegral Â£temporary3365 index>

2025:
old  <	; BinaryAdd Â£temporary2750 token Â£temporary2748>
new  <	; BinaryAdd Â£temporary3367 token Â£temporary3365>

2030:
old  <	; Dereference Â£temporary2747 -> Â£temporary2750 Â£temporary2750 0>
new  <	; Dereference Â£temporary3364 -> Â£temporary3367 Â£temporary3367 0>

2033:
old  <	; Assign Â£temporary2747 -> Â£temporary2750 0>
new  <	; Assign Â£temporary3364 -> Â£temporary3367 0>

2037:
old  <	; BinaryAdd Â£temporary2751 index 1>
new  <	; BinaryAdd Â£temporary3368 index 1>

2042:
old  <	; IntegralToIntegral Â£temporary2753 Â£temporary2751>
new  <	; IntegralToIntegral Â£temporary3370 Â£temporary3368>

2047:
old  <	; BinaryAdd Â£temporary2755 token Â£temporary2753>
new  <	; BinaryAdd Â£temporary3372 token Â£temporary3370>

2052:
old  <	; Dereference Â£temporary2752 -> Â£temporary2755 Â£temporary2755 0>
new  <	; Dereference Â£temporary3369 -> Â£temporary3372 Â£temporary3372 0>

2055:
old  <	; Address Â£temporary2756 Â£temporary2752 -> Â£temporary2755>
new  <	; Address Â£temporary3373 Â£temporary3369 -> Â£temporary3372>

2058:
old  <	; Assign token Â£temporary2756>
new  <	; Assign token Â£temporary3373>

2083:
old  <	; IntegralToIntegral Â£temporary2758 index>
new  <	; IntegralToIntegral Â£temporary3375 index>

2089:
old  <	; BinaryAdd Â£temporary2760 token Â£temporary2758>
new  <	; BinaryAdd Â£temporary3377 token Â£temporary3375>

2094:
old  <	; Dereference Â£temporary2757 -> Â£temporary2760 Â£temporary2760 0>
new  <	; Dereference Â£temporary3374 -> Â£temporary3377 Â£temporary3377 0>

2097:
old  <	; Address Â£temporary2761 Â£temporary2757 -> Â£temporary2760>
new  <	; Address Â£temporary3378 Â£temporary3374 -> Â£temporary3377>

2100:
old  <	; Assign token Â£temporary2761>
new  <	; Assign token Â£temporary3378>

2117:
old  <	; IntegralToIntegral Â£temporary2762 target>
new  <	; IntegralToIntegral Â£temporary3379 target>

2121:
old  <	; Assign charTarget Â£temporary2762>
new  <	; Assign charTarget Â£temporary3379>

2125:
old  <	; IntegralToIntegral Â£temporary2763 source>
new  <	; IntegralToIntegral Â£temporary3380 source>

2129:
old  <	; Assign charSource Â£temporary2763>
new  <	; Assign charSource Â£temporary3380>

2143:
old  <	; IntegralToIntegral Â£temporary2767 index>
new  <	; IntegralToIntegral Â£temporary3384 index>

2149:
old  <	; BinaryAdd Â£temporary2769 charTarget Â£temporary2767>
new  <	; BinaryAdd Â£temporary3386 charTarget Â£temporary3384>

2154:
old  <	; Dereference Â£temporary2766 -> Â£temporary2769 Â£temporary2769 0>
new  <	; Dereference Â£temporary3383 -> Â£temporary3386 Â£temporary3386 0>

2157:
old  <	; IntegralToIntegral Â£temporary2771 index>
new  <	; IntegralToIntegral Â£temporary3388 index>

2163:
old  <	; BinaryAdd Â£temporary2773 charSource Â£temporary2771>
new  <	; BinaryAdd Â£temporary3390 charSource Â£temporary3388>

2168:
old  <	; Dereference Â£temporary2770 -> Â£temporary2773 Â£temporary2773 0>
new  <	; Dereference Â£temporary3387 -> Â£temporary3390 Â£temporary3390 0>

2171:
old  <	; Assign Â£temporary2766 -> Â£temporary2769 Â£temporary2770 -> Â£temporary2773>
new  <	; Assign Â£temporary3383 -> Â£temporary3386 Â£temporary3387 -> Â£temporary3390>

2184:
old  <	; IntegralToIntegral Â£temporary2774 target>
new  <	; IntegralToIntegral Â£temporary3391 target>

2188:
old  <	; Return Â£temporary2774>
new  <	; Return Â£temporary3391>

2200:
old  <	; IntegralToIntegral Â£temporary2775 target>
new  <	; IntegralToIntegral Â£temporary3392 target>

2204:
old  <	; Assign charTarget Â£temporary2775>
new  <	; Assign charTarget Â£temporary3392>

2208:
old  <	; IntegralToIntegral Â£temporary2776 source>
new  <	; IntegralToIntegral Â£temporary3393 source>

2212:
old  <	; Assign charSource Â£temporary2776>
new  <	; Assign charSource Â£temporary3393>

2233:
old  <	; IntegralToIntegral Â£temporary2782 index>
new  <	; IntegralToIntegral Â£temporary3399 index>

2239:
old  <	; BinaryAdd Â£temporary2784 charTarget Â£temporary2782>
new  <	; BinaryAdd Â£temporary3401 charTarget Â£temporary3399>

2244:
old  <	; Dereference Â£temporary2781 -> Â£temporary2784 Â£temporary2784 0>
new  <	; Dereference Â£temporary3398 -> Â£temporary3401 Â£temporary3401 0>

2247:
old  <	; IntegralToIntegral Â£temporary2786 index>
new  <	; IntegralToIntegral Â£temporary3403 index>

2253:
old  <	; BinaryAdd Â£temporary2788 charSource Â£temporary2786>
new  <	; BinaryAdd Â£temporary3405 charSource Â£temporary3403>

2258:
old  <	; Dereference Â£temporary2785 -> Â£temporary2788 Â£temporary2788 0>
new  <	; Dereference Â£temporary3402 -> Â£temporary3405 Â£temporary3405 0>

2261:
old  <	; Assign Â£temporary2781 -> Â£temporary2784 Â£temporary2785 -> Â£temporary2788>
new  <	; Assign Â£temporary3398 -> Â£temporary3401 Â£temporary3402 -> Â£temporary3405>

2284:
old  <	; IntegralToIntegral Â£temporary2792 index>
new  <	; IntegralToIntegral Â£temporary3409 index>

2290:
old  <	; BinaryAdd Â£temporary2794 charTarget Â£temporary2792>
new  <	; BinaryAdd Â£temporary3411 charTarget Â£temporary3409>

2295:
old  <	; Dereference Â£temporary2791 -> Â£temporary2794 Â£temporary2794 0>
new  <	; Dereference Â£temporary3408 -> Â£temporary3411 Â£temporary3411 0>

2298:
old  <	; IntegralToIntegral Â£temporary2796 index>
new  <	; IntegralToIntegral Â£temporary3413 index>

2304:
old  <	; BinaryAdd Â£temporary2798 charSource Â£temporary2796>
new  <	; BinaryAdd Â£temporary3415 charSource Â£temporary3413>

2309:
old  <	; Dereference Â£temporary2795 -> Â£temporary2798 Â£temporary2798 0>
new  <	; Dereference Â£temporary3412 -> Â£temporary3415 Â£temporary3415 0>

2312:
old  <	; Assign Â£temporary2791 -> Â£temporary2794 Â£temporary2795 -> Â£temporary2798>
new  <	; Assign Â£temporary3408 -> Â£temporary3411 Â£temporary3412 -> Â£temporary3415>

2325:
old  <	; IntegralToIntegral Â£temporary2799 target>
new  <	; IntegralToIntegral Â£temporary3416 target>

2329:
old  <	; Return Â£temporary2799>
new  <	; Return Â£temporary3416>

2341:
old  <	; IntegralToIntegral Â£temporary2800 left>
new  <	; IntegralToIntegral Â£temporary3417 left>

2345:
old  <	; Assign charLeft Â£temporary2800>
new  <	; Assign charLeft Â£temporary3417>

2349:
old  <	; IntegralToIntegral Â£temporary2801 right>
new  <	; IntegralToIntegral Â£temporary3418 right>

2353:
old  <	; Assign charRight Â£temporary2801>
new  <	; Assign charRight Â£temporary3418>

2367:
old  <	; IntegralToIntegral Â£temporary2805 index>
new  <	; IntegralToIntegral Â£temporary3422 index>

2373:
old  <	; BinaryAdd Â£temporary2807 charLeft Â£temporary2805>
new  <	; BinaryAdd Â£temporary3424 charLeft Â£temporary3422>

2378:
old  <	; Dereference Â£temporary2804 -> Â£temporary2807 Â£temporary2807 0>
new  <	; Dereference Â£temporary3421 -> Â£temporary3424 Â£temporary3424 0>

2381:
old  <	; IntegralToIntegral Â£temporary2809 index>
new  <	; IntegralToIntegral Â£temporary3426 index>

2387:
old  <	; BinaryAdd Â£temporary2811 charRight Â£temporary2809>
new  <	; BinaryAdd Â£temporary3428 charRight Â£temporary3426>

2392:
old  <	; Dereference Â£temporary2808 -> Â£temporary2811 Â£temporary2811 0>
new  <	; Dereference Â£temporary3425 -> Â£temporary3428 Â£temporary3428 0>

2395:
old  <	; SignedGreaterThanEqual 14 Â£temporary2804 -> Â£temporary2807 Â£temporary2808 -> Â£temporary2811>
new  <	; SignedGreaterThanEqual 14 Â£temporary3421 -> Â£temporary3424 Â£temporary3425 -> Â£temporary3428>

2409:
old  <	; IntegralToIntegral Â£temporary2814 index>
new  <	; IntegralToIntegral Â£temporary3431 index>

2415:
old  <	; BinaryAdd Â£temporary2816 charLeft Â£temporary2814>
new  <	; BinaryAdd Â£temporary3433 charLeft Â£temporary3431>

2420:
old  <	; Dereference Â£temporary2813 -> Â£temporary2816 Â£temporary2816 0>
new  <	; Dereference Â£temporary3430 -> Â£temporary3433 Â£temporary3433 0>

2423:
old  <	; IntegralToIntegral Â£temporary2818 index>
new  <	; IntegralToIntegral Â£temporary3435 index>

2429:
old  <	; BinaryAdd Â£temporary2820 charRight Â£temporary2818>
new  <	; BinaryAdd Â£temporary3437 charRight Â£temporary3435>

2434:
old  <	; Dereference Â£temporary2817 -> Â£temporary2820 Â£temporary2820 0>
new  <	; Dereference Â£temporary3434 -> Â£temporary3437 Â£temporary3437 0>

2437:
old  <	; SignedLessThanEqual 22 Â£temporary2813 -> Â£temporary2816 Â£temporary2817 -> Â£temporary2820>
new  <	; SignedLessThanEqual 22 Â£temporary3430 -> Â£temporary3433 Â£temporary3434 -> Â£temporary3437>

2472:
old  <	; IntegralToIntegral Â£temporary2822 block>
new  <	; IntegralToIntegral Â£temporary3439 block>

2476:
old  <	; Assign charBlock Â£temporary2822>
new  <	; Assign charBlock Â£temporary3439>

2480:
old  <	; IntegralToIntegral Â£temporary2823 i>
new  <	; IntegralToIntegral Â£temporary3440 i>

2488:
old  <	; Assign c Â£temporary2823>
new  <	; Assign c Â£temporary3440>

2502:
old  <	; IntegralToIntegral Â£temporary2827 index>
new  <	; IntegralToIntegral Â£temporary3444 index>

2508:
old  <	; BinaryAdd Â£temporary2829 charBlock Â£temporary2827>
new  <	; BinaryAdd Â£temporary3446 charBlock Â£temporary3444>

2513:
old  <	; Dereference Â£temporary2826 -> Â£temporary2829 Â£temporary2829 0>
new  <	; Dereference Â£temporary3443 -> Â£temporary3446 Â£temporary3446 0>

2516:
old  <	; NotEqual 16 Â£temporary2826 -> Â£temporary2829 c>
new  <	; NotEqual 16 Â£temporary3443 -> Â£temporary3446 c>

2522:
old  <	; IntegralToIntegral Â£temporary2832 index>
new  <	; IntegralToIntegral Â£temporary3449 index>

2528:
old  <	; BinaryAdd Â£temporary2834 charBlock Â£temporary2832>
new  <	; BinaryAdd Â£temporary3451 charBlock Â£temporary3449>

2533:
old  <	; Dereference Â£temporary2831 -> Â£temporary2834 Â£temporary2834 0>
new  <	; Dereference Â£temporary3448 -> Â£temporary3451 Â£temporary3451 0>

2536:
old  <	; Address Â£temporary2835 Â£temporary2831 -> Â£temporary2834>
new  <	; Address Â£temporary3452 Â£temporary3448 -> Â£temporary3451>

2539:
old  <	; IntegralToIntegral Â£temporary2836 Â£temporary2835>
new  <	; IntegralToIntegral Â£temporary3453 Â£temporary3452>

2542:
old  <	; Return Â£temporary2836>
new  <	; Return Â£temporary3453>

2570:
old  <	; IntegralToIntegral Â£temporary2837 block>
new  <	; IntegralToIntegral Â£temporary3454 block>

2574:
old  <	; Assign charBlock Â£temporary2837>
new  <	; Assign charBlock Â£temporary3454>

2578:
old  <	; IntegralToIntegral Â£temporary2838 i>
new  <	; IntegralToIntegral Â£temporary3455 i>

2586:
old  <	; Assign c Â£temporary2838>
new  <	; Assign c Â£temporary3455>

2600:
old  <	; IntegralToIntegral Â£temporary2842 index>
new  <	; IntegralToIntegral Â£temporary3459 index>

2606:
old  <	; BinaryAdd Â£temporary2844 charBlock Â£temporary2842>
new  <	; BinaryAdd Â£temporary3461 charBlock Â£temporary3459>

2611:
old  <	; Dereference Â£temporary2841 -> Â£temporary2844 Â£temporary2844 0>
new  <	; Dereference Â£temporary3458 -> Â£temporary3461 Â£temporary3461 0>

2614:
old  <	; Assign Â£temporary2841 -> Â£temporary2844 c>
new  <	; Assign Â£temporary3458 -> Â£temporary3461 c>

126:
old  <	; IntegralToIntegral Â£temporary2877 c>
new  <	; IntegralToIntegral Â£temporary3494 c>

135:
old  <	; Parameter signedint Â£temporary2877 57>
new  <	; Parameter signedint Â£temporary3494 57>

158:
old  <	; IntegralToIntegral Â£temporary2879 c>
new  <	; IntegralToIntegral Â£temporary3496 c>

167:
old  <	; Parameter signedint Â£temporary2879 57>
new  <	; Parameter signedint Â£temporary3496 57>

174:
old  <	; IntegralToIntegral Â£temporary2880 c>
new  <	; IntegralToIntegral Â£temporary3497 c>

183:
old  <	; Parameter signedint Â£temporary2880 85>
new  <	; Parameter signedint Â£temporary3497 85>

197:
old  <	; GetReturnValue Â£temporary2881>
new  <	; GetReturnValue Â£temporary3498>

200:
old  <	; Equal 19 Â£temporary2881 0>
new  <	; Equal 19 Â£temporary3498 0>

205:
old  <	; Assign Â£temporary2883 "Yes">
new  <	; Assign Â£temporary3500 "Yes">

213:
old  <	; Assign Â£temporary2883 "No">
new  <	; Assign Â£temporary3500 "No">

217:
old  <	; Parameter pointer Â£temporary2883 61>
new  <	; Parameter pointer Â£temporary3500 61>

240:
old  <	; IntegralToIntegral Â£temporary2885 c>
new  <	; IntegralToIntegral Â£temporary3502 c>

249:
old  <	; Parameter signedint Â£temporary2885 57>
new  <	; Parameter signedint Â£temporary3502 57>

256:
old  <	; IntegralToIntegral Â£temporary2886 c>
new  <	; IntegralToIntegral Â£temporary3503 c>

265:
old  <	; Parameter signedint Â£temporary2886 85>
new  <	; Parameter signedint Â£temporary3503 85>

279:
old  <	; GetReturnValue Â£temporary2887>
new  <	; GetReturnValue Â£temporary3504>

282:
old  <	; Equal 36 Â£temporary2887 0>
new  <	; Equal 36 Â£temporary3504 0>

287:
old  <	; Assign Â£temporary2889 "Yes">
new  <	; Assign Â£temporary3506 "Yes">

295:
old  <	; Assign Â£temporary2889 "No">
new  <	; Assign Â£temporary3506 "No">

299:
old  <	; Parameter pointer Â£temporary2889 61>
new  <	; Parameter pointer Â£temporary3506 61>

322:
old  <	; IntegralToIntegral Â£temporary2891 c>
new  <	; IntegralToIntegral Â£temporary3508 c>

331:
old  <	; Parameter signedint Â£temporary2891 57>
new  <	; Parameter signedint Â£temporary3508 57>

338:
old  <	; IntegralToIntegral Â£temporary2892 c>
new  <	; IntegralToIntegral Â£temporary3509 c>

347:
old  <	; Parameter signedint Â£temporary2892 85>
new  <	; Parameter signedint Â£temporary3509 85>

361:
old  <	; GetReturnValue Â£temporary2893>
new  <	; GetReturnValue Â£temporary3510>

364:
old  <	; Equal 53 Â£temporary2893 0>
new  <	; Equal 53 Â£temporary3510 0>

369:
old  <	; Assign Â£temporary2895 "Yes">
new  <	; Assign Â£temporary3512 "Yes">

377:
old  <	; Assign Â£temporary2895 "No">
new  <	; Assign Â£temporary3512 "No">

381:
old  <	; Parameter pointer Â£temporary2895 61>
new  <	; Parameter pointer Â£temporary3512 61>

404:
old  <	; IntegralToIntegral Â£temporary2897 c>
new  <	; IntegralToIntegral Â£temporary3514 c>

413:
old  <	; Parameter signedint Â£temporary2897 57>
new  <	; Parameter signedint Â£temporary3514 57>

420:
old  <	; IntegralToIntegral Â£temporary2898 c>
new  <	; IntegralToIntegral Â£temporary3515 c>

429:
old  <	; Parameter signedint Â£temporary2898 85>
new  <	; Parameter signedint Â£temporary3515 85>

443:
old  <	; GetReturnValue Â£temporary2899>
new  <	; GetReturnValue Â£temporary3516>

446:
old  <	; Equal 70 Â£temporary2899 0>
new  <	; Equal 70 Â£temporary3516 0>

451:
old  <	; Assign Â£temporary2901 "Yes">
new  <	; Assign Â£temporary3518 "Yes">

459:
old  <	; Assign Â£temporary2901 "No">
new  <	; Assign Â£temporary3518 "No">

463:
old  <	; Parameter pointer Â£temporary2901 61>
new  <	; Parameter pointer Â£temporary3518 61>

486:
old  <	; IntegralToIntegral Â£temporary2903 c>
new  <	; IntegralToIntegral Â£temporary3520 c>

495:
old  <	; Parameter signedint Â£temporary2903 57>
new  <	; Parameter signedint Â£temporary3520 57>

502:
old  <	; IntegralToIntegral Â£temporary2904 c>
new  <	; IntegralToIntegral Â£temporary3521 c>

511:
old  <	; Parameter signedint Â£temporary2904 85>
new  <	; Parameter signedint Â£temporary3521 85>

525:
old  <	; GetReturnValue Â£temporary2905>
new  <	; GetReturnValue Â£temporary3522>

528:
old  <	; Equal 87 Â£temporary2905 0>
new  <	; Equal 87 Â£temporary3522 0>

533:
old  <	; Assign Â£temporary2907 "Yes">
new  <	; Assign Â£temporary3524 "Yes">

541:
old  <	; Assign Â£temporary2907 "No">
new  <	; Assign Â£temporary3524 "No">

545:
old  <	; Parameter pointer Â£temporary2907 61>
new  <	; Parameter pointer Â£temporary3524 61>

568:
old  <	; IntegralToIntegral Â£temporary2909 c>
new  <	; IntegralToIntegral Â£temporary3526 c>

577:
old  <	; Parameter signedint Â£temporary2909 57>
new  <	; Parameter signedint Â£temporary3526 57>

584:
old  <	; IntegralToIntegral Â£temporary2910 c>
new  <	; IntegralToIntegral Â£temporary3527 c>

593:
old  <	; Parameter signedint Â£temporary2910 85>
new  <	; Parameter signedint Â£temporary3527 85>

607:
old  <	; GetReturnValue Â£temporary2911>
new  <	; GetReturnValue Â£temporary3528>

610:
old  <	; Equal 104 Â£temporary2911 0>
new  <	; Equal 104 Â£temporary3528 0>

615:
old  <	; Assign Â£temporary2913 "Yes">
new  <	; Assign Â£temporary3530 "Yes">

623:
old  <	; Assign Â£temporary2913 "No">
new  <	; Assign Â£temporary3530 "No">

627:
old  <	; Parameter pointer Â£temporary2913 61>
new  <	; Parameter pointer Â£temporary3530 61>

650:
old  <	; IntegralToIntegral Â£temporary2915 c>
new  <	; IntegralToIntegral Â£temporary3532 c>

659:
old  <	; Parameter signedint Â£temporary2915 57>
new  <	; Parameter signedint Â£temporary3532 57>

666:
old  <	; IntegralToIntegral Â£temporary2916 c>
new  <	; IntegralToIntegral Â£temporary3533 c>

675:
old  <	; Parameter signedint Â£temporary2916 85>
new  <	; Parameter signedint Â£temporary3533 85>

689:
old  <	; GetReturnValue Â£temporary2917>
new  <	; GetReturnValue Â£temporary3534>

692:
old  <	; Equal 121 Â£temporary2917 0>
new  <	; Equal 121 Â£temporary3534 0>

697:
old  <	; Assign Â£temporary2919 "Yes">
new  <	; Assign Â£temporary3536 "Yes">

705:
old  <	; Assign Â£temporary2919 "No">
new  <	; Assign Â£temporary3536 "No">

709:
old  <	; Parameter pointer Â£temporary2919 61>
new  <	; Parameter pointer Â£temporary3536 61>

732:
old  <	; IntegralToIntegral Â£temporary2921 c>
new  <	; IntegralToIntegral Â£temporary3538 c>

741:
old  <	; Parameter signedint Â£temporary2921 57>
new  <	; Parameter signedint Â£temporary3538 57>

748:
old  <	; IntegralToIntegral Â£temporary2922 c>
new  <	; IntegralToIntegral Â£temporary3539 c>

757:
old  <	; Parameter signedint Â£temporary2922 85>
new  <	; Parameter signedint Â£temporary3539 85>

771:
old  <	; GetReturnValue Â£temporary2923>
new  <	; GetReturnValue Â£temporary3540>

774:
old  <	; Equal 138 Â£temporary2923 0>
new  <	; Equal 138 Â£temporary3540 0>

779:
old  <	; Assign Â£temporary2925 "Yes">
new  <	; Assign Â£temporary3542 "Yes">

787:
old  <	; Assign Â£temporary2925 "No">
new  <	; Assign Â£temporary3542 "No">

791:
old  <	; Parameter pointer Â£temporary2925 61>
new  <	; Parameter pointer Â£temporary3542 61>

814:
old  <	; IntegralToIntegral Â£temporary2927 c>
new  <	; IntegralToIntegral Â£temporary3544 c>

823:
old  <	; Parameter signedint Â£temporary2927 57>
new  <	; Parameter signedint Â£temporary3544 57>

830:
old  <	; IntegralToIntegral Â£temporary2928 c>
new  <	; IntegralToIntegral Â£temporary3545 c>

839:
old  <	; Parameter signedint Â£temporary2928 85>
new  <	; Parameter signedint Â£temporary3545 85>

853:
old  <	; GetReturnValue Â£temporary2929>
new  <	; GetReturnValue Â£temporary3546>

856:
old  <	; Equal 155 Â£temporary2929 0>
new  <	; Equal 155 Â£temporary3546 0>

861:
old  <	; Assign Â£temporary2931 "Yes">
new  <	; Assign Â£temporary3548 "Yes">

869:
old  <	; Assign Â£temporary2931 "No">
new  <	; Assign Â£temporary3548 "No">

873:
old  <	; Parameter pointer Â£temporary2931 61>
new  <	; Parameter pointer Â£temporary3548 61>

896:
old  <	; IntegralToIntegral Â£temporary2933 c>
new  <	; IntegralToIntegral Â£temporary3550 c>

905:
old  <	; Parameter signedint Â£temporary2933 57>
new  <	; Parameter signedint Â£temporary3550 57>

912:
old  <	; IntegralToIntegral Â£temporary2934 c>
new  <	; IntegralToIntegral Â£temporary3551 c>

921:
old  <	; Parameter signedint Â£temporary2934 85>
new  <	; Parameter signedint Â£temporary3551 85>

935:
old  <	; GetReturnValue Â£temporary2935>
new  <	; GetReturnValue Â£temporary3552>

938:
old  <	; Equal 172 Â£temporary2935 0>
new  <	; Equal 172 Â£temporary3552 0>

943:
old  <	; Assign Â£temporary2937 "Yes">
new  <	; Assign Â£temporary3554 "Yes">

951:
old  <	; Assign Â£temporary2937 "No">
new  <	; Assign Â£temporary3554 "No">

955:
old  <	; Parameter pointer Â£temporary2937 61>
new  <	; Parameter pointer Â£temporary3554 61>

978:
old  <	; IntegralToIntegral Â£temporary2939 c>
new  <	; IntegralToIntegral Â£temporary3556 c>

987:
old  <	; Parameter signedint Â£temporary2939 57>
new  <	; Parameter signedint Â£temporary3556 57>

994:
old  <	; IntegralToIntegral Â£temporary2940 c>
new  <	; IntegralToIntegral Â£temporary3557 c>

1003:
old  <	; Parameter signedint Â£temporary2940 85>
new  <	; Parameter signedint Â£temporary3557 85>

1017:
old  <	; GetReturnValue Â£temporary2941>
new  <	; GetReturnValue Â£temporary3558>

1020:
old  <	; Equal 189 Â£temporary2941 0>
new  <	; Equal 189 Â£temporary3558 0>

1025:
old  <	; Assign Â£temporary2943 "Yes">
new  <	; Assign Â£temporary3560 "Yes">

1033:
old  <	; Assign Â£temporary2943 "No">
new  <	; Assign Â£temporary3560 "No">

1037:
old  <	; Parameter pointer Â£temporary2943 61>
new  <	; Parameter pointer Â£temporary3560 61>

1060:
old  <	; IntegralToIntegral Â£temporary2945 c>
new  <	; IntegralToIntegral Â£temporary3562 c>

1069:
old  <	; Parameter signedint Â£temporary2945 57>
new  <	; Parameter signedint Â£temporary3562 57>

1076:
old  <	; IntegralToIntegral Â£temporary2946 c>
new  <	; IntegralToIntegral Â£temporary3563 c>

1085:
old  <	; Parameter signedint Â£temporary2946 85>
new  <	; Parameter signedint Â£temporary3563 85>

1099:
old  <	; GetReturnValue Â£temporary2947>
new  <	; GetReturnValue Â£temporary3564>

1102:
old  <	; IntegralToIntegral Â£temporary2948 Â£temporary2947>
new  <	; IntegralToIntegral Â£temporary3565 Â£temporary3564>

1109:
old  <	; IntegralToIntegral Â£temporary2949 Â£temporary2948>
new  <	; IntegralToIntegral Â£temporary3566 Â£temporary3565>

1117:
old  <	; Parameter signedint Â£temporary2949 61>
new  <	; Parameter signedint Â£temporary3566 61>

1140:
old  <	; IntegralToIntegral Â£temporary2951 c>
new  <	; IntegralToIntegral Â£temporary3568 c>

1149:
old  <	; Parameter signedint Â£temporary2951 57>
new  <	; Parameter signedint Â£temporary3568 57>

1156:
old  <	; IntegralToIntegral Â£temporary2952 c>
new  <	; IntegralToIntegral Â£temporary3569 c>

1165:
old  <	; Parameter signedint Â£temporary2952 85>
new  <	; Parameter signedint Â£temporary3569 85>

1179:
old  <	; GetReturnValue Â£temporary2953>
new  <	; GetReturnValue Â£temporary3570>

1182:
old  <	; IntegralToIntegral Â£temporary2954 Â£temporary2953>
new  <	; IntegralToIntegral Â£temporary3571 Â£temporary3570>

1189:
old  <	; IntegralToIntegral Â£temporary2955 Â£temporary2954>
new  <	; IntegralToIntegral Â£temporary3572 Â£temporary3571>

1197:
old  <	; Parameter signedint Â£temporary2955 61>
new  <	; Parameter signedint Â£temporary3572 61>

75:
old  <	; Address Â£temporary2973 n>
new  <	; Address Â£temporary3590 n>

80:
old  <	; Parameter pointer Â£temporary2973 60>
new  <	; Parameter pointer Â£temporary3590 60>

183:
old  <	; GetReturnValue Â£temporary2985>
new  <	; GetReturnValue Â£temporary3602>

186:
old  <	; Parameter signedint Â£temporary2985 284>
new  <	; Parameter signedint Â£temporary3602 284>

252:
old  <	; Dereference Â£temporary2989 -> u u 0>
new  <	; Dereference Â£temporary3606 -> u u 0>

257:
old  <	; Assign Â£temporary2989 -> u 0>
new  <	; Assign Â£temporary3606 -> u 0>

330:
old  <	; GetReturnValue Â£temporary2992>
new  <	; GetReturnValue Â£temporary3609>

333:
old  <	; Assign i Â£temporary2992>
new  <	; Assign i Â£temporary3609>

363:
old  <	; BinaryAdd Â£temporary2994 i 2>
new  <	; BinaryAdd Â£temporary3611 i 2>

368:
old  <	; IntegralToIntegral Â£temporary2996 Â£temporary2994>
new  <	; IntegralToIntegral Â£temporary3613 Â£temporary3611>

373:
old  <	; BinaryAdd Â£temporary2998 u Â£temporary2996>
new  <	; BinaryAdd Â£temporary3615 u Â£temporary3613>

379:
old  <	; Dereference Â£temporary2995 -> Â£temporary2998 Â£temporary2998 0>
new  <	; Dereference Â£temporary3612 -> Â£temporary3615 Â£temporary3615 0>

382:
old  <	; Assign Â£temporary2995 -> Â£temporary2998 0>
new  <	; Assign Â£temporary3612 -> Â£temporary3615 0>

445:
old  <	; GetReturnValue Â£temporary3000>
new  <	; GetReturnValue Â£temporary3617>

448:
old  <	; Parameter signedint Â£temporary3000 276>
new  <	; Parameter signedint Â£temporary3617 276>

498:
old  <	; GetReturnValue Â£temporary3002>
new  <	; GetReturnValue Â£temporary3619>

501:
old  <	; Parameter signedint Â£temporary3002 276>
new  <	; Parameter signedint Â£temporary3619 276>

539:
old  <	; GetReturnValue Â£temporary3004>
new  <	; GetReturnValue Â£temporary3621>

542:
old  <	; Assign p Â£temporary3004>
new  <	; Assign p Â£temporary3621>

558:
old  <	; BinarySubtract Â£temporary3007 p s>
new  <	; BinarySubtract Â£temporary3624 p s>

563:
old  <	; IntegralToIntegral Â£temporary3008 Â£temporary3007>
new  <	; IntegralToIntegral Â£temporary3625 Â£temporary3624>

566:
old  <	; Assign Â£temporary3009 Â£temporary3008>
new  <	; Assign Â£temporary3626 Â£temporary3625>

573:
old  <	; Assign Â£temporary3009 -1>
new  <	; Assign Â£temporary3626 -1>

577:
old  <	; Parameter signedint Â£temporary3009 276>
new  <	; Parameter signedint Â£temporary3626 276>

615:
old  <	; GetReturnValue Â£temporary3011>
new  <	; GetReturnValue Â£temporary3628>

618:
old  <	; Assign p Â£temporary3011>
new  <	; Assign p Â£temporary3628>

634:
old  <	; BinarySubtract Â£temporary3014 p s>
new  <	; BinarySubtract Â£temporary3631 p s>

639:
old  <	; IntegralToIntegral Â£temporary3015 Â£temporary3014>
new  <	; IntegralToIntegral Â£temporary3632 Â£temporary3631>

642:
old  <	; Assign Â£temporary3016 Â£temporary3015>
new  <	; Assign Â£temporary3633 Â£temporary3632>

649:
old  <	; Assign Â£temporary3016 -1>
new  <	; Assign Â£temporary3633 -1>

653:
old  <	; Parameter signedint Â£temporary3016 276>
new  <	; Parameter signedint Â£temporary3633 276>

691:
old  <	; GetReturnValue Â£temporary3018>
new  <	; GetReturnValue Â£temporary3635>

694:
old  <	; Assign p Â£temporary3018>
new  <	; Assign p Â£temporary3635>

710:
old  <	; BinarySubtract Â£temporary3021 p s>
new  <	; BinarySubtract Â£temporary3638 p s>

715:
old  <	; IntegralToIntegral Â£temporary3022 Â£temporary3021>
new  <	; IntegralToIntegral Â£temporary3639 Â£temporary3638>

718:
old  <	; Assign Â£temporary3023 Â£temporary3022>
new  <	; Assign Â£temporary3640 Â£temporary3639>

725:
old  <	; Assign Â£temporary3023 -1>
new  <	; Assign Â£temporary3640 -1>

729:
old  <	; Parameter signedint Â£temporary3023 276>
new  <	; Parameter signedint Â£temporary3640 276>

767:
old  <	; GetReturnValue Â£temporary3025>
new  <	; GetReturnValue Â£temporary3642>

770:
old  <	; Assign p Â£temporary3025>
new  <	; Assign p Â£temporary3642>

786:
old  <	; BinarySubtract Â£temporary3028 p s>
new  <	; BinarySubtract Â£temporary3645 p s>

791:
old  <	; IntegralToIntegral Â£temporary3029 Â£temporary3028>
new  <	; IntegralToIntegral Â£temporary3646 Â£temporary3645>

794:
old  <	; Assign Â£temporary3030 Â£temporary3029>
new  <	; Assign Â£temporary3647 Â£temporary3646>

801:
old  <	; Assign Â£temporary3030 -1>
new  <	; Assign Â£temporary3647 -1>

805:
old  <	; Parameter signedint Â£temporary3030 276>
new  <	; Parameter signedint Â£temporary3647 276>

899:
old  <	; Dereference Â£temporary3035 -> u u 0>
new  <	; Dereference Â£temporary3652 -> u u 0>

904:
old  <	; Assign Â£temporary3035 -> u 0>
new  <	; Assign Â£temporary3652 -> u 0>

968:
old  <	; GetReturnValue Â£temporary3037>
new  <	; GetReturnValue Â£temporary3654>

971:
old  <	; Assign p Â£temporary3037>
new  <	; Assign p Â£temporary3654>

987:
old  <	; BinarySubtract Â£temporary3040 p s>
new  <	; BinarySubtract Â£temporary3657 p s>

992:
old  <	; IntegralToIntegral Â£temporary3041 Â£temporary3040>
new  <	; IntegralToIntegral Â£temporary3658 Â£temporary3657>

995:
old  <	; Assign Â£temporary3042 Â£temporary3041>
new  <	; Assign Â£temporary3659 Â£temporary3658>

1002:
old  <	; Assign Â£temporary3042 -1>
new  <	; Assign Â£temporary3659 -1>

1006:
old  <	; Parameter signedint Â£temporary3042 276>
new  <	; Parameter signedint Â£temporary3659 276>

1048:
old  <	; GetReturnValue Â£temporary3044>
new  <	; GetReturnValue Â£temporary3661>

1051:
old  <	; Assign p Â£temporary3044>
new  <	; Assign p Â£temporary3661>

1067:
old  <	; BinarySubtract Â£temporary3047 p s>
new  <	; BinarySubtract Â£temporary3664 p s>

1072:
old  <	; IntegralToIntegral Â£temporary3048 Â£temporary3047>
new  <	; IntegralToIntegral Â£temporary3665 Â£temporary3664>

1075:
old  <	; Assign Â£temporary3049 Â£temporary3048>
new  <	; Assign Â£temporary3666 Â£temporary3665>

1082:
old  <	; Assign Â£temporary3049 -1>
new  <	; Assign Â£temporary3666 -1>

1086:
old  <	; Parameter signedint Â£temporary3049 276>
new  <	; Parameter signedint Â£temporary3666 276>

1136:
old  <	; GetReturnValue Â£temporary3051>
new  <	; GetReturnValue Â£temporary3668>

1139:
old  <	; Parameter signedint Â£temporary3051 276>
new  <	; Parameter signedint Â£temporary3668 276>

1184:
old  <	; GetReturnValue Â£temporary3053>
new  <	; GetReturnValue Â£temporary3670>

1187:
old  <	; Parameter signedint Â£temporary3053 276>
new  <	; Parameter signedint Â£temporary3670 276>

1232:
old  <	; GetReturnValue Â£temporary3055>
new  <	; GetReturnValue Â£temporary3672>

1235:
old  <	; Parameter signedint Â£temporary3055 276>
new  <	; Parameter signedint Â£temporary3672 276>

1276:
old  <	; GetReturnValue Â£temporary3057>
new  <	; GetReturnValue Â£temporary3674>

1279:
old  <	; Parameter pointer Â£temporary3057 276>
new  <	; Parameter pointer Â£temporary3674 276>

1317:
old  <	; GetReturnValue Â£temporary3059>
new  <	; GetReturnValue Â£temporary3676>

1320:
old  <	; Assign p Â£temporary3059>
new  <	; Assign p Â£temporary3676>

1374:
old  <	; GetReturnValue Â£temporary3062>
new  <	; GetReturnValue Â£temporary3679>

1377:
old  <	; Assign p Â£temporary3062>
new  <	; Assign p Â£temporary3679>

2:
old  <	global divide>
new  <	global inverse>

3:
old  <	global invers>
new  <	global divide>

6:
old  <	extern longjmp>
new  <	extern printf>

7:
old  <	extern setjmp>
new  <	extern scanf>

8:
old  <	extern printf>
new  <	extern setjmp>

9:
old  <	extern $StackTop>
new  <	extern longjmp>

10:
old  <>
new  <	extern $StackTop>

12:
old  <section .data>
new  <>

13:
old  <>
new  <section .data>

14:
old  <buffer:>
new  <>

15:
old  <	; InitializerZero 24>
new  <buffer:>

16:
old  <	times 24 db 0>
new  <	; InitializerZero 24>

17:
old  <>
new  <	times 24 db 0>

18:
old  <section .data>
new  <>

19:
old  <>
new  <section .data>

20:
old  <string_Division20by20Zero2E#:>
new  <>

21:
old  <	; Initializer String Division by Zero.>
new  <string_Please20input20a20value3A20#:>

22:
old  <	db "Division by Zero.", 0>
new  <	; Initializer String Please input a value: >

23:
old  <>
new  <	db "Please input a value: ", 0>

24:
old  <section .text>
new  <>

25:
old  <>
new  <section .data>

26:
old  < divide:>
new  <>

27:
old  <	; PushFloat y>
new  <string_25lf#:>

28:
old  <	fld qword [rbp + 32]>
new  <	; Initializer String %lf>

29:
old  <>
new  <	db "%lf", 0>

30:
old  < divide$1:>
new  <>

31:
old  <	; PushFloat 0>
new  <section .data>

32:
old  <	fldz>
new  <>

33:
old  <>
new  <string_12E0202F2025f203D2025f0A#:>

34:
old  < divide$2:>
new  <	; Initializer String 1.0 / %f = %f\n>

35:
old  <	; Equal 7 y 0>
new  <	db "1.0 / %f = %f", 10, 0>

36:
old  <	fcompp>
new  <>

37:
old  <	fstsw ax>
new  <section .data>

38:
old  <	sahf>
new  <>

39:
old  <	je divide$7>
new  <string_25s0A#:>

40:
old  <>
new  <	; Initializer String %s\n>

41:
old  < divide$3:>
new  <	db "%s", 10, 0>

42:
old  <	; PushFloat x>
new  <>

43:
old  <	fld qword [rbp + 24]>
new  <section .text>

45:
old  < divide$4:>
new  < @6964$main:>

46:
old  <	; PushFloat y>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

47:
old  <	fld qword [rbp + 32]>
new  <>

48:
old  <>
new  < @6964$main$1:>

49:
old  < divide$5:>
new  <	; Parameter pointer "Please input a value: " 64>

50:
old  <	; SignedDivide Â£temporary3064 x y>
new  <	mov qword [rbp + 64], string_Please20input20a20value3A20#>

51:
old  <	fdiv>
new  <>

52:
old  <>
new  < @6964$main$2:>

53:
old  < divide$6:>
new  <	; Call printf 40 0>

54:
old  <	; Return Â£temporary3064>
new  <	mov qword [rbp + 40], @6964$main$3>

55:
old  <	mov rax, [rbp]>
new  <	mov [rbp + 48], rbp>

56:
old  <	mov rdi, [rbp + 16]>
new  <	add rbp, 40>

57:
old  <	mov rbp, [rbp + 8]>
new  <	mov rdi, rbp>

58:
old  <	jmp rax>
new  <	jmp printf>

60:
old  < divide$7:>
new  < @6964$main$3:>

61:
old  <	; Assign p "Division by Zero.">
new  <	; PostCall 40>

62:
old  <	mov qword [rbp + 40], string_Division20by20Zero2E#>
new  <>

63:
old  <>
new  < @6964$main$4:>

64:
old  < divide$8:>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

65:
old  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

66:
old  <>
new  < @6964$main$5:>

67:
old  < divide$9:>
new  <	; Parameter pointer "%lf" 64>

68:
old  <	; Parameter pointer buffer 72>
new  <	mov qword [rbp + 64], string_25lf#>

69:
old  <	mov qword [rbp + 72], buffer>
new  <>

70:
old  <>
new  < @6964$main$6:>

71:
old  < divide$10:>
new  <	; Address Â£temporary3681 x>

72:
old  <	; IntegralToIntegral Â£temporary3065 p>
new  <	mov rsi, rbp>

73:
old  <	mov rax, [rbp + 40]>
new  <	add rsi, 32>

75:
old  < divide$11:>
new  < @6964$main$7:>

76:
old  <	; Parameter signedint Â£temporary3065 80>
new  <	; Parameter pointer Â£temporary3681 72>

77:
old  <	mov [rbp + 80], eax>
new  <	mov [rbp + 72], rsi>

79:
old  < divide$12:>
new  < @6964$main$8:>

80:
old  <	; Call longjmp 48 0>
new  <	; Call scanf 40 8>

81:
old  <	mov qword [rbp + 48], divide$13>
new  <	mov qword [rbp + 40], @6964$main$9>

82:
old  <	mov [rbp + 56], rbp>
new  <	mov [rbp + 48], rbp>

83:
old  <	add rbp, 48>
new  <	add rbp, 40>

84:
old  <	jmp longjmp>
new  <	mov rdi, rbp>

85:
old  <>
new  <	add rdi, 8>

86:
old  < divide$13:>
new  <	jmp scanf>

87:
old  <	; PostCall 48>
new  <>

88:
old  <>
new  < @6964$main$9:>

89:
old  < divide$14:>
new  <	; PostCall 40>

90:
old  <	; PushFloat 0>
new  <>

91:
old  <	fldz>
new  < @6964$main$10:>

92:
old  <>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

93:
old  < divide$15:>
new  <>

94:
old  <	; Return 0>
new  < @6964$main$11:>

95:
old  <	mov rax, [rbp]>
new  <	; Parameter pointer buffer 64>

96:
old  <	mov rdi, [rbp + 16]>
new  <	mov qword [rbp + 64], buffer>

97:
old  <	mov rbp, [rbp + 8]>
new  <>

98:
old  <	jmp rax>
new  < @6964$main$12:>

99:
old  <>
new  <	; Call setjmp 40 0>

100:
old  < divide$16:>
new  <	mov qword [rbp + 40], @6964$main$13>

101:
old  <	; FunctionEnd divide>
new  <	mov [rbp + 48], rbp>

102:
old  <>
new  <	add rbp, 40>

103:
old  <section .text>
new  <	jmp setjmp>

105:
old  < invers:>
new  < @6964$main$13:>

106:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; PostCall 40>

108:
old  < invers$1:>
new  < @6964$main$14:>

109:
old  <	; PushFloat 1.0>
new  <	; GetReturnValue Â£temporary3683>

110:
old  <	fld1>
new  <>

111:
old  <>
new  < @6964$main$15:>

112:
old  < invers$2:>
new  <	; IntegralToIntegral Â£temporary3684 Â£temporary3683>

113:
old  <	; Parameter double 1.0 56>
new  <	mov rax, 4294967295>

114:
old  <	fstp qword [rbp + 56]>
new  <	and rbx, rax>

116:
old  < invers$3:>
new  < @6964$main$16:>

117:
old  <	; PushFloat x>
new  <	; Assign message Â£temporary3684>

118:
old  <	fld qword [rbp + 24]>
new  <	mov [rbp + 24], rbx>

120:
old  < invers$4:>
new  < @6964$main$17:>

121:
old  <	; Parameter double x 64>
new  <	; NotEqual 32 message 0>

122:
old  <	fstp qword [rbp + 64]>
new  <	cmp qword [rbp + 24], 0>

123:
old  <>
new  <	jne @6964$main$32>

124:
old  < invers$5:>
new  <>

125:
old  <	; Call divide 32 0>
new  < @6964$main$18:>

126:
old  <	mov qword [rbp + 32], invers$6>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

127:
old  <	mov [rbp + 40], rbp>
new  <>

128:
old  <	add rbp, 32>
new  < @6964$main$19:>

129:
old  <	jmp divide>
new  <	; Parameter pointer "1.0 / %f = %f\n" 64>

130:
old  <>
new  <	mov qword [rbp + 64], string_12E0202F2025f203D2025f0A#>

131:
old  < invers$6:>
new  <>

132:
old  <	; PostCall 32>
new  < @6964$main$20:>

133:
old  <>
new  <	; PushFloat x>

134:
old  < invers$7:>
new  <	fld qword [rbp + 32]>

135:
old  <	; GetReturnValue Â£temporary3067>
new  <>

136:
old  <>
new  < @6964$main$21:>

137:
old  < invers$8:>
new  <	; Parameter double x 72>

138:
old  <	; Return Â£temporary3067>
new  <	fstp qword [rbp + 72]>

139:
old  <	mov rax, [rbp]>
new  <>

140:
old  <	mov rdi, [rbp + 16]>
new  < @6964$main$22:>

141:
old  <	mov rbp, [rbp + 8]>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

142:
old  <	jmp rax>
new  <>

143:
old  <>
new  < @6964$main$23:>

144:
old  < invers$9:>
new  <	; PushFloat x>

145:
old  <	; FunctionEnd invers>
new  <	fld qword [rbp + 32]>

147:
old  <section .data>
new  < @6964$main$24:>

148:
old  <>
new  <	; Parameter double x 104>

149:
old  <string_12E0202F2025f203D2025f0A#:>
new  <	fstp qword [rbp + 104]>

150:
old  <	; Initializer String 1.0 / %f = %f\n>
new  <>

151:
old  <	db "1.0 / %f = %f", 10, 0>
new  < @6964$main$25:>

152:
old  <>
new  <	; Call inverse 80 0>

153:
old  <section .data>
new  <	mov qword [rbp + 80], @6964$main$26>

154:
old  <>
new  <	mov [rbp + 88], rbp>

155:
old  <string_p203D203C25s3E203C25u3E0A#:>
new  <	add rbp, 80>

156:
old  <	; Initializer String p = <%s> <%u>\n>
new  <	jmp inverse>

157:
old  <	db "p = <%s> <%u>", 10, 0>
new  <>

158:
old  <>
new  < @6964$main$26:>

159:
old  <section .text>
new  <	; PostCall 80>

161:
old  < setjmp_test:>
new  < @6964$main$27:>

162:
old  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; GetReturnValue Â£temporary3686>

164:
old  < setjmp_test$1:>
new  < @6964$main$28:>

165:
old  <	; Parameter pointer buffer 64>
new  <	; Parameter double Â£temporary3686 80>

166:
old  <	mov qword [rbp + 64], buffer>
new  <	fstp qword [rbp + 80]>

168:
old  < setjmp_test$2:>
new  < @6964$main$29:>

169:
old  <	; Call setjmp 40 0>
new  <	; Call printf 40 16>

170:
old  <	mov qword [rbp + 40], setjmp_test$3>
new  <	mov qword [rbp + 40], @6964$main$30>

173:
old  <	jmp setjmp>
new  <	mov rdi, rbp>

174:
old  <>
new  <	add rdi, 16>

175:
old  < setjmp_test$3:>
new  <	jmp printf>

176:
old  <	; PostCall 40>
new  <>

177:
old  <>
new  < @6964$main$30:>

178:
old  < setjmp_test$4:>
new  <	; PostCall 40>

179:
old  <	; GetReturnValue Â£temporary3070>
new  <>

180:
old  <>
new  < @6964$main$31:>

181:
old  < setjmp_test$5:>
new  <	; Goto 37>

182:
old  <	; IntegralToIntegral Â£temporary3071 Â£temporary3070>
new  <	jmp @6964$main$37>

183:
old  <	mov rax, 4294967295>
new  <>

184:
old  <	and rbx, rax>
new  < @6964$main$32:>

185:
old  <>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

186:
old  < setjmp_test$6:>
new  <>

187:
old  <	; Assign p Â£temporary3071>
new  < @6964$main$33:>

188:
old  <	mov [rbp + 32], rbx>
new  <	; Parameter pointer "%s\n" 64>

189:
old  <>
new  <	mov qword [rbp + 64], string_25s0A#>

190:
old  < setjmp_test$7:>
new  <>

191:
old  <	; NotEqual 22 p 0>
new  < @6964$main$34:>

192:
old  <	cmp qword [rbp + 32], 0>
new  <	; Parameter pointer message 72>

193:
old  <	jne setjmp_test$22>
new  <	mov rax, [rbp + 24]>

194:
old  <>
new  <	mov [rbp + 72], rax>

195:
old  < setjmp_test$8:>
new  <>

196:
old  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < @6964$main$35:>

197:
old  <>
new  <	; Call printf 40 8>

198:
old  < setjmp_test$9:>
new  <	mov qword [rbp + 40], @6964$main$36>

199:
old  <	; Parameter pointer "1.0 / %f = %f\n" 64>
new  <	mov [rbp + 48], rbp>

200:
old  <	mov qword [rbp + 64], string_12E0202F2025f203D2025f0A#>
new  <	add rbp, 40>

201:
old  <>
new  <	mov rdi, rbp>

202:
old  < setjmp_test$10:>
new  <	add rdi, 8>

203:
old  <	; PushFloat x>
new  <	jmp printf>

204:
old  <	fld qword [rbp + 24]>
new  <>

205:
old  <>
new  < @6964$main$36:>

206:
old  < setjmp_test$11:>
new  <	; PostCall 40>

207:
old  <	; Parameter double x 72>
new  <>

208:
old  <	fstp qword [rbp + 72]>
new  < @6964$main$37:>

209:
old  <>
new  <	; Return>

210:
old  < setjmp_test$12:>
new  <	mov rax, [rbp]>

211:
old  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov rdi, [rbp + 16]>

212:
old  <>
new  <	mov rbp, [rbp + 8]>

213:
old  < setjmp_test$13:>
new  <	jmp rax>

214:
old  <	; PushFloat x>
new  <>

215:
old  <	fld qword [rbp + 24]>
new  < @6964$main$38:>

216:
old  <>
new  <	; FunctionEnd main>

217:
old  < setjmp_test$14:>
new  <>

218:
old  <	; Parameter double x 104>
new  <section .text>

219:
old  <	fstp qword [rbp + 104]>
new  <>

220:
old  <>
new  < inverse:>

221:
old  < setjmp_test$15:>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

222:
old  <	; Call invers 80 0>
new  <>

223:
old  <	mov qword [rbp + 80], setjmp_test$16>
new  < inverse$1:>

224:
old  <	mov [rbp + 88], rbp>
new  <	; PushFloat 1>

225:
old  <	add rbp, 80>
new  <	fld1>

226:
old  <	jmp invers>
new  <>

227:
old  <>
new  < inverse$2:>

228:
old  < setjmp_test$16:>
new  <	; Parameter double 1 56>

229:
old  <	; PostCall 80>
new  <	fstp qword [rbp + 56]>

231:
old  < setjmp_test$17:>
new  < inverse$3:>

232:
old  <	; GetReturnValue Â£temporary3073>
new  <	; PushFloat x>

233:
old  <>
new  <	fld qword [rbp + 24]>

234:
old  < setjmp_test$18:>
new  <>

235:
old  <	; Parameter double Â£temporary3073 80>
new  < inverse$4:>

236:
old  <	fstp qword [rbp + 80]>
new  <	; Parameter double x 64>

237:
old  <>
new  <	fstp qword [rbp + 64]>

238:
old  < setjmp_test$19:>
new  <>

239:
old  <	; Call printf 40 16>
new  < inverse$5:>

240:
old  <	mov qword [rbp + 40], setjmp_test$20>
new  <	; Call divide 32 0>

241:
old  <	mov [rbp + 48], rbp>
new  <	mov qword [rbp + 32], inverse$6>

242:
old  <	add rbp, 40>
new  <	mov [rbp + 40], rbp>

243:
old  <	mov rdi, rbp>
new  <	add rbp, 32>

244:
old  <	add rdi, 16>
new  <	jmp divide>

245:
old  <	jmp printf>
new  <>

246:
old  <>
new  < inverse$6:>

247:
old  < setjmp_test$20:>
new  <	; PostCall 32>

248:
old  <	; PostCall 40>
new  <>

249:
old  <>
new  < inverse$7:>

250:
old  < setjmp_test$21:>
new  <	; GetReturnValue Â£temporary3693>

251:
old  <	; Goto 28>
new  <>

252:
old  <	jmp setjmp_test$28>
new  < inverse$8:>

253:
old  <>
new  <	; Return Â£temporary3693>

254:
old  < setjmp_test$22:>
new  <	mov rax, [rbp]>

255:
old  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov rdi, [rbp + 16]>

256:
old  <>
new  <	mov rbp, [rbp + 8]>

257:
old  < setjmp_test$23:>
new  <	jmp rax>

258:
old  <	; Parameter pointer "p = <%s> <%u>\n" 64>
new  <>

259:
old  <	mov qword [rbp + 64], string_p203D203C25s3E203C25u3E0A#>
new  < inverse$9:>

260:
old  <>
new  <	; FunctionEnd inverse>

261:
old  < setjmp_test$24:>
new  <>

262:
old  <	; Parameter pointer p 72>
new  <section .data>

263:
old  <	mov rax, [rbp + 32]>
new  <>

264:
old  <	mov [rbp + 72], rax>
new  <string_Division20by20Zero2E#:>

265:
old  <>
new  <	; Initializer String Division by Zero.>

266:
old  < setjmp_test$25:>
new  <	db "Division by Zero.", 0>

267:
old  <	; Parameter pointer p 80>
new  <>

268:
old  <	mov rax, [rbp + 32]>
new  <section .text>

269:
old  <	mov [rbp + 80], rax>
new  <>

270:
old  <>
new  < divide:>

271:
old  < setjmp_test$26:>
new  <	; PushFloat y>

272:
old  <	; Call printf 40 16>
new  <	fld qword [rbp + 32]>

273:
old  <	mov qword [rbp + 40], setjmp_test$27>
new  <>

274:
old  <	mov [rbp + 48], rbp>
new  < divide$1:>

275:
old  <	add rbp, 40>
new  <	; PushFloat 0>

276:
old  <	mov rdi, rbp>
new  <	fldz>

277:
old  <	add rdi, 16>
new  <>

278:
old  <	jmp printf>
new  < divide$2:>

279:
old  <>
new  <	; Equal 7 y 0>

280:
old  < setjmp_test$27:>
new  <	fcompp>

281:
old  <	; PostCall 40>
new  <	fstsw ax>

282:
old  <>
new  <	sahf>

283:
old  < setjmp_test$28:>
new  <	je divide$7>

284:
old  <	; Return>
new  <>

285:
old  <	mov rax, [rbp]>
new  < divide$3:>

286:
old  <	mov rdi, [rbp + 16]>
new  <	; PushFloat x>

287:
old  <	mov rbp, [rbp + 8]>
new  <	fld qword [rbp + 24]>

288:
old  <	jmp rax>
new  <>

289:
old  <>
new  < divide$4:>

290:
old  < setjmp_test$29:>
new  <	; PushFloat y>

291:
old  <	; FunctionEnd setjmp_test>
new  <	fld qword [rbp + 32]>

324:
old  <	; GetReturnValue Â£temporary3097>
new  <	; GetReturnValue Â£temporary3718>

327:
old  <	; Parameter double Â£temporary3097 72>
new  <	; Parameter double Â£temporary3718 72>

406:
old  <	; GetReturnValue Â£temporary3102>
new  <	; GetReturnValue Â£temporary3723>

409:
old  <	; Parameter double Â£temporary3102 72>
new  <	; Parameter double Â£temporary3723 72>

1407:
old  <	; GetReturnValue Â£temporary3175>
new  <	; GetReturnValue Â£temporary3796>

1410:
old  <	; Parameter double Â£temporary3175 72>
new  <	; Parameter double Â£temporary3796 72>

1471:
old  <	; GetReturnValue Â£temporary3177>
new  <	; GetReturnValue Â£temporary3798>

1474:
old  <	; Parameter double Â£temporary3177 72>
new  <	; Parameter double Â£temporary3798 72>

1535:
old  <	; GetReturnValue Â£temporary3179>
new  <	; GetReturnValue Â£temporary3800>

1538:
old  <	; Parameter double Â£temporary3179 72>
new  <	; Parameter double Â£temporary3800 72>

1599:
old  <	; GetReturnValue Â£temporary3181>
new  <	; GetReturnValue Â£temporary3802>

1602:
old  <	; Parameter double Â£temporary3181 72>
new  <	; Parameter double Â£temporary3802 72>

1663:
old  <	; GetReturnValue Â£temporary3183>
new  <	; GetReturnValue Â£temporary3804>

1666:
old  <	; Parameter double Â£temporary3183 72>
new  <	; Parameter double Â£temporary3804 72>

1727:
old  <	; GetReturnValue Â£temporary3185>
new  <	; GetReturnValue Â£temporary3806>

1730:
old  <	; Parameter double Â£temporary3185 72>
new  <	; Parameter double Â£temporary3806 72>

1791:
old  <	; GetReturnValue Â£temporary3187>
new  <	; GetReturnValue Â£temporary3808>

1794:
old  <	; Parameter double Â£temporary3187 72>
new  <	; Parameter double Â£temporary3808 72>

1855:
old  <	; GetReturnValue Â£temporary3189>
new  <	; GetReturnValue Â£temporary3810>

1858:
old  <	; Parameter double Â£temporary3189 72>
new  <	; Parameter double Â£temporary3810 72>

1919:
old  <	; GetReturnValue Â£temporary3191>
new  <	; GetReturnValue Â£temporary3812>

1922:
old  <	; Parameter double Â£temporary3191 72>
new  <	; Parameter double Â£temporary3812 72>

1983:
old  <	; GetReturnValue Â£temporary3193>
new  <	; GetReturnValue Â£temporary3814>

1986:
old  <	; Parameter double Â£temporary3193 72>
new  <	; Parameter double Â£temporary3814 72>

2047:
old  <	; GetReturnValue Â£temporary3195>
new  <	; GetReturnValue Â£temporary3816>

2050:
old  <	; Parameter double Â£temporary3195 72>
new  <	; Parameter double Â£temporary3816 72>

2111:
old  <	; GetReturnValue Â£temporary3197>
new  <	; GetReturnValue Â£temporary3818>

2114:
old  <	; Parameter double Â£temporary3197 72>
new  <	; Parameter double Â£temporary3818 72>

2175:
old  <	; GetReturnValue Â£temporary3199>
new  <	; GetReturnValue Â£temporary3820>

2178:
old  <	; Parameter double Â£temporary3199 72>
new  <	; Parameter double Â£temporary3820 72>

2239:
old  <	; GetReturnValue Â£temporary3201>
new  <	; GetReturnValue Â£temporary3822>

2242:
old  <	; Parameter double Â£temporary3201 72>
new  <	; Parameter double Â£temporary3822 72>

2303:
old  <	; GetReturnValue Â£temporary3203>
new  <	; GetReturnValue Â£temporary3824>

2306:
old  <	; Parameter double Â£temporary3203 72>
new  <	; Parameter double Â£temporary3824 72>

2367:
old  <	; GetReturnValue Â£temporary3205>
new  <	; GetReturnValue Â£temporary3826>

2370:
old  <	; Parameter double Â£temporary3205 72>
new  <	; Parameter double Â£temporary3826 72>

2410:
old  <	; Address Â£temporary3207 j>
new  <	; Address Â£temporary3828 j>

2415:
old  <	; Parameter pointer Â£temporary3207 68>
new  <	; Parameter pointer Â£temporary3828 68>

2429:
old  <	; GetReturnValue Â£temporary3208>
new  <	; GetReturnValue Â£temporary3829>

2526:
old  <	; Address Â£temporary3212 w>
new  <	; Address Â£temporary3833 w>

2531:
old  <	; Parameter pointer Â£temporary3212 72>
new  <	; Parameter pointer Â£temporary3833 72>

2545:
old  <	; GetReturnValue Â£temporary3213>
new  <	; GetReturnValue Â£temporary3834>

2738:
old  <	; GetReturnValue Â£temporary3276>
new  <	; GetReturnValue Â£temporary3897>

2741:
old  <	; Parameter double Â£temporary3276 88>
new  <	; Parameter double Â£temporary3897 88>

2818:
old  <	; GetReturnValue Â£temporary3278>
new  <	; GetReturnValue Â£temporary3899>

2821:
old  <	; Parameter double Â£temporary3278 88>
new  <	; Parameter double Â£temporary3899 88>

2898:
old  <	; GetReturnValue Â£temporary3280>
new  <	; GetReturnValue Â£temporary3901>

2901:
old  <	; Parameter double Â£temporary3280 88>
new  <	; Parameter double Â£temporary3901 88>

2963:
old  <	; FloatingToIntegral Â£temporary3283 y>
new  <	; FloatingToIntegral Â£temporary3904 y>

2968:
old  <	; Parameter signedint Â£temporary3283 80>
new  <	; Parameter signedint Â£temporary3904 80>

2987:
old  <	; FloatingToIntegral Â£temporary3284 y>
new  <	; FloatingToIntegral Â£temporary3905 y>

2992:
old  <	; Parameter signedint Â£temporary3284 116>
new  <	; Parameter signedint Â£temporary3905 116>

3006:
old  <	; GetReturnValue Â£temporary3285>
new  <	; GetReturnValue Â£temporary3906>

3009:
old  <	; Parameter double Â£temporary3285 84>
new  <	; Parameter double Â£temporary3906 84>

399:
old  <	; GetReturnValue Â£temporary3305>
new  <	; GetReturnValue Â£temporary3926>

402:
old  <	; Assign inFilePtrPtr Â£temporary3305>
new  <	; Assign inFilePtrPtr Â£temporary3926>

482:
old  <	; GetReturnValue Â£temporary3310>
new  <	; GetReturnValue Â£temporary3931>

485:
old  <	; Assign outFilePtrPtr Â£temporary3310>
new  <	; Assign outFilePtrPtr Â£temporary3931>

559:
old  <	; Address Â£temporary3315 size>
new  <	; Address Â£temporary3936 size>

564:
old  <	; Parameter pointer Â£temporary3315 104>
new  <	; Parameter pointer Â£temporary3936 104>

610:
old  <	; Address Â£temporary3319 inValue>
new  <	; Address Â£temporary3940 inValue>

615:
old  <	; Parameter pointer Â£temporary3319 112>
new  <	; Parameter pointer Â£temporary3940 112>

638:
old  <	; Parameter double Â£temporary3321 96>
new  <	; Parameter double Â£temporary3942 96>

652:
old  <	; GetReturnValue Â£temporary3322>
new  <	; GetReturnValue Â£temporary3943>

766:
old  <	; GetReturnValue Â£temporary3326>
new  <	; GetReturnValue Â£temporary3947>

769:
old  <	; NotEqual 97 Â£temporary3326 0>
new  <	; NotEqual 97 Â£temporary3947 0>

837:
old  <	; GetReturnValue Â£temporary3329>
new  <	; GetReturnValue Â£temporary3950>

840:
old  <	; Parameter pointer Â£temporary3329 92>
new  <	; Parameter pointer Â£temporary3950 92>

878:
old  <	; GetReturnValue Â£temporary3331>
new  <	; GetReturnValue Â£temporary3952>

881:
old  <	; NotEqual 121 Â£temporary3331 0>
new  <	; NotEqual 121 Â£temporary3952 0>

944:
old  <	; GetReturnValue Â£temporary3334>
new  <	; GetReturnValue Â£temporary3955>

947:
old  <	; Parameter pointer Â£temporary3334 84>
new  <	; Parameter pointer Â£temporary3955 84>

984:
old  <	; GetReturnValue Â£temporary3336>
new  <	; GetReturnValue Â£temporary3957>

987:
old  <	; Assign inFilePtr Â£temporary3336>
new  <	; Assign inFilePtr Â£temporary3957>

1111:
old  <	; Address Â£temporary3343 size>
new  <	; Address Â£temporary3964 size>

1116:
old  <	; Parameter pointer Â£temporary3343 96>
new  <	; Parameter pointer Â£temporary3964 96>

1279:
old  <	; GetReturnValue Â£temporary3351>
new  <	; GetReturnValue Â£temporary3972>

1282:
old  <	; Assign inFilePtr Â£temporary3351>
new  <	; Assign inFilePtr Â£temporary3972>

1362:
old  <	; GetReturnValue Â£temporary3356>
new  <	; GetReturnValue Â£temporary3977>

1365:
old  <	; Assign outFilePtr Â£temporary3356>
new  <	; Assign outFilePtr Â£temporary3977>

1441:
old  <	; GetReturnValue Â£temporary3361>
new  <	; GetReturnValue Â£temporary3982>

1444:
old  <	; IntegralToIntegral Â£temporary3362 Â£temporary3361>
new  <	; IntegralToIntegral Â£temporary3983 Â£temporary3982>

1451:
old  <	; Assign c Â£temporary3362>
new  <	; Assign c Â£temporary3983>

1455:
old  <	; IntegralToIntegral Â£temporary3363 c>
new  <	; IntegralToIntegral Â£temporary3984 c>

1464:
old  <	; Equal 257 Â£temporary3363 -1>
new  <	; Equal 257 Â£temporary3984 -1>

1472:
old  <	; IntegralToIntegral Â£temporary3365 c>
new  <	; IntegralToIntegral Â£temporary3986 c>

1481:
old  <	; Parameter signedint Â£temporary3365 97>
new  <	; Parameter signedint Â£temporary3986 97>

1588:
old  <	; GetReturnValue Â£temporary3372>
new  <	; GetReturnValue Â£temporary3993>

1591:
old  <	; Assign outFilePtr Â£temporary3372>
new  <	; Assign outFilePtr Â£temporary3993>

1656:
old  <	; Address Â£temporary3377 size>
new  <	; Address Â£temporary3998 size>

1661:
old  <	; Parameter pointer Â£temporary3377 76>
new  <	; Parameter pointer Â£temporary3998 76>

1698:
old  <	; SignedMultiply Â£temporary3381 index index>
new  <	; SignedMultiply Â£temporary4002 index index>

1704:
old  <	; IntegralToFloating Â£temporary3382 Â£temporary3381>
new  <	; IntegralToFloating Â£temporary4003 Â£temporary4002>

1716:
old  <	; Address Â£temporary3383 value>
new  <	; Address Â£temporary4004 value>

1721:
old  <	; Parameter pointer Â£temporary3383 88>
new  <	; Parameter pointer Â£temporary4004 88>

1795:
old  <	; GetReturnValue Â£temporary3386>
new  <	; GetReturnValue Â£temporary4007>

1798:
old  <	; Assign inFilePtr Â£temporary3386>
new  <	; Assign inFilePtr Â£temporary4007>

1859:
old  <	; Address Â£temporary3391 size>
new  <	; Address Â£temporary4012 size>

1864:
old  <	; Parameter pointer Â£temporary3391 76>
new  <	; Parameter pointer Â£temporary4012 76>

1918:
old  <	; Address Â£temporary3394 arr>
new  <	; Address Â£temporary4015 arr>

1923:
old  <	; Parameter pointer Â£temporary3394 156>
new  <	; Parameter pointer Â£temporary4015 156>

1989:
old  <	; IntegralToIntegral Â£temporary3400 index>
new  <	; IntegralToIntegral Â£temporary4021 index>

1995:
old  <	; UnsignedMultiply Â£temporary3401 Â£temporary3400 8>
new  <	; UnsignedMultiply Â£temporary4022 Â£temporary4021 8>

2000:
old  <	; BinaryAdd Â£temporary3402 arr Â£temporary3401>
new  <	; BinaryAdd Â£temporary4023 arr Â£temporary4022>

2006:
old  <	; Dereference Â£temporary3399 -> Â£temporary3402 Â£temporary3402 0>
new  <	; Dereference Â£temporary4020 -> Â£temporary4023 Â£temporary4023 0>

2009:
old  <	; PushFloat Â£temporary3399 -> Â£temporary3402>
new  <	; PushFloat Â£temporary4020 -> Â£temporary4023>

2013:
old  <	; Parameter double Â£temporary3399 -> Â£temporary3402 172>
new  <	; Parameter double Â£temporary4020 -> Â£temporary4023 172>

2076:
old  <	; GetReturnValue Â£temporary3405>
new  <	; GetReturnValue Â£temporary4026>

2079:
old  <	; Assign inFilePtr Â£temporary3405>
new  <	; Assign inFilePtr Â£temporary4026>

2140:
old  <	; Address Â£temporary3410 size>
new  <	; Address Â£temporary4031 size>

2145:
old  <	; Parameter pointer Â£temporary3410 76>
new  <	; Parameter pointer Â£temporary4031 76>

2209:
old  <	; Address Â£temporary3415 value>
new  <	; Address Â£temporary4036 value>

2214:
old  <	; Parameter pointer Â£temporary3415 88>
new  <	; Parameter pointer Â£temporary4036 88>

2338:
old  <	; GetReturnValue Â£temporary3420>
new  <	; GetReturnValue Â£temporary4041>

2341:
old  <	; Assign inFilePtr Â£temporary3420>
new  <	; Assign inFilePtr Â£temporary4041>

2402:
old  <	; Address Â£temporary3425 size>
new  <	; Address Â£temporary4046 size>

2407:
old  <	; Parameter pointer Â£temporary3425 76>
new  <	; Parameter pointer Â£temporary4046 76>

2446:
old  <	; SignedMultiply Â£temporary3427 size 8>
new  <	; SignedMultiply Â£temporary4048 size 8>

2452:
old  <	; Parameter signedint Â£temporary3427 88>
new  <	; Parameter signedint Â£temporary4048 88>

2493:
old  <	; GetReturnValue Â£temporary3430>
new  <	; GetReturnValue Â£temporary4051>

2496:
old  <	; Assign p Â£temporary3430>
new  <	; Assign p Â£temporary4051>

2554:
old  <	; IntegralToIntegral Â£temporary3435 size>
new  <	; IntegralToIntegral Â£temporary4056 size>

2560:
old  <	; UnsignedMultiply Â£temporary3437 Â£temporary3435 8>
new  <	; UnsignedMultiply Â£temporary4058 Â£temporary4056 8>

2565:
old  <	; BinaryAdd endPtr p Â£temporary3437>
new  <	; BinaryAdd endPtr p Â£temporary4058>

2659:
old  <	; IntegralToIntegral Â£temporary3443 index>
new  <	; IntegralToIntegral Â£temporary4064 index>

2665:
old  <	; UnsignedMultiply Â£temporary3444 Â£temporary3443 8>
new  <	; UnsignedMultiply Â£temporary4065 Â£temporary4064 8>

2670:
old  <	; BinaryAdd Â£temporary3445 p Â£temporary3444>
new  <	; BinaryAdd Â£temporary4066 p Â£temporary4065>

2675:
old  <	; Dereference Â£temporary3442 -> Â£temporary3445 Â£temporary3445 0>
new  <	; Dereference Â£temporary4063 -> Â£temporary4066 Â£temporary4066 0>

2678:
old  <	; PushFloat Â£temporary3442 -> Â£temporary3445>
new  <	; PushFloat Â£temporary4063 -> Â£temporary4066>

2682:
old  <	; Parameter double Â£temporary3442 -> Â£temporary3445 112>
new  <	; Parameter double Â£temporary4063 -> Â£temporary4066 112>

2820:
old  <	; Assign personVector[0].name[15] 48>
new  <	; Assign personVector[0].name[15] 0>

2821:
old  <	mov byte [rbp + 55], 48>
new  <	mov byte [rbp + 55], 0>

2896:
old  <	; Assign personVector[1].name[17] 48>
new  <	; Assign personVector[1].name[17] 0>

2897:
old  <	mov byte [rbp + 109], 48>
new  <	mov byte [rbp + 109], 0>

2968:
old  <	; Assign personVector[2].name[16] 48>
new  <	; Assign personVector[2].name[16] 0>

2969:
old  <	mov byte [rbp + 160], 48>
new  <	mov byte [rbp + 160], 0>

2997:
old  <	; GetReturnValue Â£temporary3510>
new  <	; GetReturnValue Â£temporary4131>

3000:
old  <	; Assign outFilePtr Â£temporary3510>
new  <	; Assign outFilePtr Â£temporary4131>

3128:
old  <	; GetReturnValue Â£temporary3517>
new  <	; GetReturnValue Â£temporary4138>

3131:
old  <	; Assign inFilePtr Â£temporary3517>
new  <	; Assign inFilePtr Â£temporary4138>

3207:
old  <	; GetReturnValue Â£temporary3522>
new  <	; GetReturnValue Â£temporary4143>

3210:
old  <	; NotEqual 659 Â£temporary3522 0>
new  <	; NotEqual 659 Â£temporary4143 0>

3218:
old  <	; Address Â£temporary3525 person>
new  <	; Address Â£temporary4146 person>

3223:
old  <	; Parameter pointer Â£temporary3525 288>
new  <	; Parameter pointer Â£temporary4146 288>

3341:
old  <	; GetReturnValue Â£temporary3532>
new  <	; GetReturnValue Â£temporary4153>

3344:
old  <	; Assign inFilePtr Â£temporary3532>
new  <	; Assign inFilePtr Â£temporary4153>

3446:
old  <	; GetReturnValue Â£temporary3538>
new  <	; GetReturnValue Â£temporary4159>

3449:
old  <	; IntegralToIntegral Â£temporary3539 Â£temporary3538>
new  <	; IntegralToIntegral Â£temporary4160 Â£temporary4159>

3452:
old  <	; Assign u Â£temporary3539>
new  <	; Assign u Â£temporary4160>

3479:
old  <	; GetReturnValue Â£temporary3541>
new  <	; GetReturnValue Â£temporary4162>

3482:
old  <	; IntegralToIntegral Â£temporary3542 Â£temporary3541>
new  <	; IntegralToIntegral Â£temporary4163 Â£temporary4162>

3489:
old  <	; Assign c Â£temporary3542>
new  <	; Assign c Â£temporary4163>

3496:
old  <	; IntegralToIntegral Â£temporary3543 c>
new  <	; IntegralToIntegral Â£temporary4164 c>

3505:
old  <	; Parameter signedint Â£temporary3543 77>
new  <	; Parameter signedint Â£temporary4164 77>

3614:
old  <	; GetReturnValue Â£temporary3549>
new  <	; GetReturnValue Â£temporary4170>

3617:
old  <	; Equal 734 Â£temporary3549 0>
new  <	; Equal 734 Â£temporary4170 0>

3622:
old  <	; Assign Â£temporary3551 "Yes">
new  <	; Assign Â£temporary4172 "Yes">

3630:
old  <	; Assign Â£temporary3551 "No">
new  <	; Assign Â£temporary4172 "No">

3634:
old  <	; Parameter pointer Â£temporary3551 72>
new  <	; Parameter pointer Â£temporary4172 72>

3674:
old  <	; GetReturnValue Â£temporary3553>
new  <	; GetReturnValue Â£temporary4174>

3677:
old  <	; Equal 748 Â£temporary3553 0>
new  <	; Equal 748 Â£temporary4174 0>

3682:
old  <	; Assign Â£temporary3555 "Yes">
new  <	; Assign Â£temporary4176 "Yes">

3690:
old  <	; Assign Â£temporary3555 "No">
new  <	; Assign Â£temporary4176 "No">

3694:
old  <	; Parameter pointer Â£temporary3555 72>
new  <	; Parameter pointer Â£temporary4176 72>

3731:
old  <	; GetReturnValue Â£temporary3557>
new  <	; GetReturnValue Â£temporary4178>

3734:
old  <	; Assign inOutFilePtr Â£temporary3557>
new  <	; Assign inOutFilePtr Â£temporary4178>

3805:
old  <	; GetReturnValue Â£temporary3562>
new  <	; GetReturnValue Â£temporary4183>

3808:
old  <	; Assign tempFilePtr Â£temporary3562>
new  <	; Assign tempFilePtr Â£temporary4183>

3884:
old  <	; GetReturnValue Â£temporary3567>
new  <	; GetReturnValue Â£temporary4188>

3887:
old  <	; IntegralToIntegral Â£temporary3568 Â£temporary3567>
new  <	; IntegralToIntegral Â£temporary4189 Â£temporary4188>

3894:
old  <	; Assign c Â£temporary3568>
new  <	; Assign c Â£temporary4189>

3898:
old  <	; IntegralToIntegral Â£temporary3569 c>
new  <	; IntegralToIntegral Â£temporary4190 c>

3907:
old  <	; Equal 809 Â£temporary3569 -1>
new  <	; Equal 809 Â£temporary4190 -1>

3918:
old  <	; IntegralToIntegral Â£temporary3571 c>
new  <	; IntegralToIntegral Â£temporary4192 c>

3927:
old  <	; Parameter signedint Â£temporary3571 81>
new  <	; Parameter signedint Â£temporary4192 81>

3941:
old  <	; GetReturnValue Â£temporary3572>
new  <	; GetReturnValue Â£temporary4193>

3944:
old  <	; Parameter signedint Â£temporary3572 81>
new  <	; Parameter signedint Â£temporary4193 81>

4026:
old  <	; GetReturnValue Â£temporary3577>
new  <	; GetReturnValue Â£temporary4198>

4029:
old  <	; IntegralToIntegral Â£temporary3578 Â£temporary3577>
new  <	; IntegralToIntegral Â£temporary4199 Â£temporary4198>

4036:
old  <	; Assign c Â£temporary3578>
new  <	; Assign c Â£temporary4199>

4040:
old  <	; IntegralToIntegral Â£temporary3579 c>
new  <	; IntegralToIntegral Â£temporary4200 c>

4049:
old  <	; Equal 834 Â£temporary3579 -1>
new  <	; Equal 834 Â£temporary4200 -1>

4057:
old  <	; IntegralToIntegral Â£temporary3581 c>
new  <	; IntegralToIntegral Â£temporary4202 c>

4066:
old  <	; Parameter signedint Â£temporary3581 81>
new  <	; Parameter signedint Â£temporary4202 81>

213:
old  <	; Address Â£temporary3602 n>
new  <	; Address Â£temporary4223 n>

218:
old  <	; Assign p Â£temporary3602>
new  <	; Assign p Â£temporary4223>

11:
old  <@8284$i:>
new  <@8757$i:>

31:
old  <	; Assign Â£temporary3708 i>
new  <	; Assign Â£temporary4329 i>

32:
old  <	mov eax, [@8284$i]>
new  <	mov eax, [@8757$i]>

36:
old  <	inc dword [@8284$i]>
new  <	inc dword [@8757$i]>

39:
old  <	; Parameter signedint Â£temporary3708 56>
new  <	; Parameter signedint Â£temporary4329 56>

107:
old  <	; GetReturnValue Â£temporary3711>
new  <	; GetReturnValue Â£temporary4332>

110:
old  <	; Assign pointer Â£temporary3711>
new  <	; Assign pointer Â£temporary4332>

126:
old  <	; Assign Â£temporary3713 count>
new  <	; Assign Â£temporary4334 count>

134:
old  <	; Parameter signedint Â£temporary3713 68>
new  <	; Parameter signedint Â£temporary4334 68>

45:
old  <	; GetReturnValue Â£temporary3715>
new  <	; GetReturnValue Â£temporary4336>

48:
old  <	; Assign q Â£temporary3715>
new  <	; Assign q Â£temporary4336>

78:
old  <	; GetReturnValue Â£temporary3718>
new  <	; GetReturnValue Â£temporary4339>

81:
old  <	; Assign p Â£temporary3718>
new  <	; Assign p Â£temporary4339>

359:
old  <	; GetReturnValue Â£temporary3733>
new  <	; GetReturnValue Â£temporary4354>

362:
old  <	; Assign a Â£temporary3733>
new  <	; Assign a Â£temporary4354>

387:
old  <	; GetReturnValue Â£temporary3734>
new  <	; GetReturnValue Â£temporary4355>

390:
old  <	; Assign b Â£temporary3734>
new  <	; Assign b Â£temporary4355>

415:
old  <	; GetReturnValue Â£temporary3735>
new  <	; GetReturnValue Â£temporary4356>

418:
old  <	; Assign c Â£temporary3735>
new  <	; Assign c Â£temporary4356>

443:
old  <	; GetReturnValue Â£temporary3736>
new  <	; GetReturnValue Â£temporary4357>

446:
old  <	; Assign d Â£temporary3736>
new  <	; Assign d Â£temporary4357>

471:
old  <	; GetReturnValue Â£temporary3737>
new  <	; GetReturnValue Â£temporary4358>

474:
old  <	; Assign e Â£temporary3737>
new  <	; Assign e Â£temporary4358>

612:
old  <	; InspectRegister Â£temporary3745 bp>
new  <	; InspectRegister Â£temporary4366 bp>

615:
old  <	; IntegralToIntegral Â£temporary3746 Â£temporary3745>
new  <	; IntegralToIntegral Â£temporary4367 Â£temporary4366>

619:
old  <	; Assign stackTop Â£temporary3746>
new  <	; Assign stackTop Â£temporary4367>

639:
old  <	; Dereference Â£temporary3747 -> lowHeapPtr lowHeapPtr 0>
new  <	; Dereference Â£temporary4368 -> lowHeapPtr lowHeapPtr 0>

643:
old  <	; Parameter unsigned int Â£temporary3747 -> lowHeapPtr 72>
new  <	; Parameter unsigned int Â£temporary4368 -> lowHeapPtr 72>

727:
old  <	; GetReturnValue Â£temporary3751>
new  <	; GetReturnValue Â£temporary4372>

730:
old  <	; Assign b Â£temporary3751>
new  <	; Assign b Â£temporary4372>

751:
old  <	; GetReturnValue Â£temporary3752>
new  <	; GetReturnValue Â£temporary4373>

754:
old  <	; Assign c Â£temporary3752>
new  <	; Assign c Â£temporary4373>

775:
old  <	; GetReturnValue Â£temporary3753>
new  <	; GetReturnValue Â£temporary4374>

778:
old  <	; Assign d Â£temporary3753>
new  <	; Assign d Â£temporary4374>

940:
old  <	; InspectRegister Â£temporary3763 bp>
new  <	; InspectRegister Â£temporary4384 bp>

943:
old  <	; IntegralToIntegral Â£temporary3764 Â£temporary3763>
new  <	; IntegralToIntegral Â£temporary4385 Â£temporary4384>

947:
old  <	; Assign stackTop Â£temporary3764>
new  <	; Assign stackTop Â£temporary4385>

981:
old  <	; GetReturnValue Â£temporary3767>
new  <	; GetReturnValue Â£temporary4388>

984:
old  <	; Assign p Â£temporary3767>
new  <	; Assign p Â£temporary4388>

1010:
old  <	; Dereference Â£temporary3768 -> lowHeapPtr lowHeapPtr 0>
new  <	; Dereference Â£temporary4389 -> lowHeapPtr lowHeapPtr 0>

1014:
old  <	; Parameter unsigned int Â£temporary3768 -> lowHeapPtr 96>
new  <	; Parameter unsigned int Â£temporary4389 -> lowHeapPtr 96>

8:
old  <	global stdlib_test>
new  <	global hello>

9:
old  <>
new  <	global qtest>

10:
old  <	extern printf>
new  <	global stdlib_testZ>

11:
old  <	extern strtod>
new  <	global stdlib_test>

12:
old  <	extern atof>
new  <>

13:
old  <	extern strtol>
new  <	extern printf>

14:
old  <	extern strtoul>
new  <	extern atof>

15:
old  <	extern atoi>
new  <	extern strtod>

16:
old  <	extern atol>
new  <	extern getenv>

17:
old  <	extern getenv>
new  <	extern system>

18:
old  <	extern system>
new  <	extern @abs>

19:
old  <	extern @abs>
new  <	extern labs>

20:
old  <	extern labs>
new  <	extern div>

21:
old  <	extern div>
new  <	extern ldiv>

22:
old  <	extern ldiv>
new  <	extern qsort>

23:
old  <	extern qsort>
new  <	extern bsearch>

24:
old  <	extern bsearch>
new  <	extern $StackTop>

25:
old  <	extern $StackTop>
new  <>

27:
old  <>
new  <section .text>

28:
old  <section .text>
new  <>

29:
old  <>
new  < compare:>

30:
old  < compare:>
new  <	; IntegralToIntegral Â£temporary4391 valuePtr1>

31:
old  <	; IntegralToIntegral Â£temporary3770 valuePtr1>
new  <	mov rsi, [rbp + 24]>

32:
old  <	mov rsi, [rbp + 24]>
new  <>

33:
old  <>
new  < compare$1:>

34:
old  < compare$1:>
new  <	; Dereference Â£temporary4392 -> Â£temporary4391 Â£temporary4391 0>

35:
old  <	; Dereference Â£temporary3771 -> Â£temporary3770 Â£temporary3770 0>
new  <>

36:
old  <>
new  < compare$2:>

37:
old  < compare$2:>
new  <	; Assign intValue1 Â£temporary4392 -> Â£temporary4391>

38:
old  <	; Assign intValue1 Â£temporary3771 -> Â£temporary3770>
new  <	mov eax, [rsi]>

39:
old  <	mov eax, [rsi]>
new  <	mov [rbp + 40], eax>

40:
old  <	mov [rbp + 40], eax>
new  <>

41:
old  <>
new  < compare$3:>

42:
old  < compare$3:>
new  <	; IntegralToIntegral Â£temporary4393 valuePtr2>

43:
old  <	; IntegralToIntegral Â£temporary3772 valuePtr2>
new  <	mov rsi, [rbp + 32]>

44:
old  <	mov rsi, [rbp + 32]>
new  <>

45:
old  <>
new  < compare$4:>

46:
old  < compare$4:>
new  <	; Dereference Â£temporary4394 -> Â£temporary4393 Â£temporary4393 0>

47:
old  <	; Dereference Â£temporary3773 -> Â£temporary3772 Â£temporary3772 0>
new  <>

48:
old  <>
new  < compare$5:>

49:
old  < compare$5:>
new  <	; Assign intValue2 Â£temporary4394 -> Â£temporary4393>

50:
old  <	; Assign intValue2 Â£temporary3773 -> Â£temporary3772>
new  <	mov eax, [rsi]>

51:
old  <	mov eax, [rsi]>
new  <	mov [rbp + 44], eax>

52:
old  <	mov [rbp + 44], eax>
new  <>

53:
old  <>
new  < compare$6:>

54:
old  < compare$6:>
new  <	; SignedGreaterThanEqual 9 intValue1 intValue2>

55:
old  <	; SignedGreaterThanEqual 9 intValue1 intValue2>
new  <	mov eax, [rbp + 44]>

56:
old  <	mov eax, [rbp + 44]>
new  <	cmp [rbp + 40], eax>

57:
old  <	cmp [rbp + 40], eax>
new  <	jge compare$9>

58:
old  <	jge compare$9>
new  <>

59:
old  <>
new  < compare$7:>

60:
old  < compare$7:>
new  <	; Assign Â£temporary4398 -1>

61:
old  <	; Assign Â£temporary3777 -1>
new  <	mov ebx, -1>

62:
old  <	mov eax, -1>
new  <>

63:
old  <>
new  < compare$8:>

64:
old  < compare$8:>
new  <	; Goto 14>

65:
old  <	; Goto 14>
new  <	jmp compare$14>

66:
old  <	jmp compare$14>
new  <>

67:
old  <>
new  < compare$9:>

68:
old  < compare$9:>
new  <	; NotEqual 12 intValue1 intValue2>

69:
old  <	; NotEqual 12 intValue1 intValue2>
new  <	mov eax, [rbp + 44]>

70:
old  <	mov eax, [rbp + 44]>
new  <	cmp [rbp + 40], eax>

71:
old  <	cmp [rbp + 40], eax>
new  <	jne compare$12>

72:
old  <	jne compare$12>
new  <>

73:
old  <>
new  < compare$10:>

74:
old  < compare$10:>
new  <	; Assign Â£temporary4397 0>

75:
old  <	; Assign Â£temporary3776 0>
new  <	mov ebx, 0>

76:
old  <	mov ebx, 0>
new  <>

77:
old  <>
new  < compare$11:>

78:
old  < compare$11:>
new  <	; Goto 13>

79:
old  <	; Goto 13>
new  <	jmp compare$13>

80:
old  <	jmp compare$13>
new  <>

81:
old  <>
new  < compare$12:>

82:
old  < compare$12:>
new  <	; Assign Â£temporary4397 1>

83:
old  <	; Assign Â£temporary3776 1>
new  <	mov ebx, 1>

84:
old  <	mov ebx, 1>
new  <>

85:
old  <>
new  < compare$13:>

86:
old  < compare$13:>
new  <	; Assign Â£temporary4398 Â£temporary4397>

87:
old  <	; Assign Â£temporary3777 Â£temporary3776>
new  <>

88:
old  <>
new  < compare$14:>

89:
old  < compare$14:>
new  <	; Return Â£temporary4398>

90:
old  <	; Return Â£temporary3777>
new  <	mov rax, [rbp]>

91:
old  <	mov rax, [rbp]>
new  <	mov rdi, [rbp + 16]>

92:
old  <	mov rdi, [rbp + 16]>
new  <	mov rbp, [rbp + 8]>

93:
old  <	mov rbp, [rbp + 8]>
new  <	jmp rax>

94:
old  <	jmp rax>
new  <>

95:
old  <>
new  < compare$15:>

96:
old  < compare$15:>
new  <	; FunctionEnd compare>

97:
old  <	; FunctionEnd compare>
new  <>

98:
old  <>
new  <section .text>

99:
old  <section .text>
new  <>

100:
old  <>
new  < reverse_compare:>

101:
old  < reverse_compare:>
new  <	; IntegralToIntegral Â£temporary4399 valuePtr1>

102:
old  <	; IntegralToIntegral Â£temporary3778 valuePtr1>
new  <	mov rsi, [rbp + 24]>

103:
old  <	mov rsi, [rbp + 24]>
new  <>

104:
old  <>
new  < reverse_compare$1:>

105:
old  < reverse_compare$1:>
new  <	; Dereference Â£temporary4400 -> Â£temporary4399 Â£temporary4399 0>

106:
old  <	; Dereference Â£temporary3779 -> Â£temporary3778 Â£temporary3778 0>
new  <>

107:
old  <>
new  < reverse_compare$2:>

108:
old  < reverse_compare$2:>
new  <	; Assign intValue1 Â£temporary4400 -> Â£temporary4399>

109:
old  <	; Assign intValue1 Â£temporary3779 -> Â£temporary3778>
new  <	mov eax, [rsi]>

110:
old  <	mov eax, [rsi]>
new  <	mov [rbp + 40], eax>

111:
old  <	mov [rbp + 40], eax>
new  <>

112:
old  <>
new  < reverse_compare$3:>

113:
old  < reverse_compare$3:>
new  <	; IntegralToIntegral Â£temporary4401 valuePtr2>

114:
old  <	; IntegralToIntegral Â£temporary3780 valuePtr2>
new  <	mov rsi, [rbp + 32]>

115:
old  <	mov rsi, [rbp + 32]>
new  <>

116:
old  <>
new  < reverse_compare$4:>

117:
old  < reverse_compare$4:>
new  <	; Dereference Â£temporary4402 -> Â£temporary4401 Â£temporary4401 0>

118:
old  <	; Dereference Â£temporary3781 -> Â£temporary3780 Â£temporary3780 0>
new  <>

119:
old  <>
new  < reverse_compare$5:>

120:
old  < reverse_compare$5:>
new  <	; Assign intValue2 Â£temporary4402 -> Â£temporary4401>

121:
old  <	; Assign intValue2 Â£temporary3781 -> Â£temporary3780>
new  <	mov eax, [rsi]>

122:
old  <	mov eax, [rsi]>
new  <	mov [rbp + 44], eax>

123:
old  <	mov [rbp + 44], eax>
new  <>

124:
old  <>
new  < reverse_compare$6:>

125:
old  < reverse_compare$6:>
new  <	; SignedGreaterThanEqual 9 intValue1 intValue2>

126:
old  <	; SignedGreaterThanEqual 9 intValue1 intValue2>
new  <	mov eax, [rbp + 44]>

127:
old  <	mov eax, [rbp + 44]>
new  <	cmp [rbp + 40], eax>

128:
old  <	cmp [rbp + 40], eax>
new  <	jge reverse_compare$9>

129:
old  <	jge reverse_compare$9>
new  <>

130:
old  <>
new  < reverse_compare$7:>

131:
old  < reverse_compare$7:>
new  <	; Assign Â£temporary4406 1>

132:
old  <	; Assign Â£temporary3785 1>
new  <	mov ebx, 1>

133:
old  <	mov eax, 1>
new  <>

134:
old  <>
new  < reverse_compare$8:>

135:
old  < reverse_compare$8:>
new  <	; Goto 14>

136:
old  <	; Goto 14>
new  <	jmp reverse_compare$14>

137:
old  <	jmp reverse_compare$14>
new  <>

138:
old  <>
new  < reverse_compare$9:>

139:
old  < reverse_compare$9:>
new  <	; NotEqual 12 intValue1 intValue2>

140:
old  <	; NotEqual 12 intValue1 intValue2>
new  <	mov eax, [rbp + 44]>

141:
old  <	mov eax, [rbp + 44]>
new  <	cmp [rbp + 40], eax>

142:
old  <	cmp [rbp + 40], eax>
new  <	jne reverse_compare$12>

143:
old  <	jne reverse_compare$12>
new  <>

144:
old  <>
new  < reverse_compare$10:>

145:
old  < reverse_compare$10:>
new  <	; Assign Â£temporary4405 0>

146:
old  <	; Assign Â£temporary3784 0>
new  <	mov ebx, 0>

147:
old  <	mov ebx, 0>
new  <>

148:
old  <>
new  < reverse_compare$11:>

149:
old  < reverse_compare$11:>
new  <	; Goto 13>

150:
old  <	; Goto 13>
new  <	jmp reverse_compare$13>

151:
old  <	jmp reverse_compare$13>
new  <>

152:
old  <>
new  < reverse_compare$12:>

153:
old  < reverse_compare$12:>
new  <	; Assign Â£temporary4405 -1>

154:
old  <	; Assign Â£temporary3784 -1>
new  <	mov ebx, -1>

155:
old  <	mov ebx, -1>
new  <>

156:
old  <>
new  < reverse_compare$13:>

157:
old  < reverse_compare$13:>
new  <	; Assign Â£temporary4406 Â£temporary4405>

158:
old  <	; Assign Â£temporary3785 Â£temporary3784>
new  <>

159:
old  <>
new  < reverse_compare$14:>

160:
old  < reverse_compare$14:>
new  <	; Return Â£temporary4406>

161:
old  <	; Return Â£temporary3785>
new  <	mov rax, [rbp]>

162:
old  <	mov rax, [rbp]>
new  <	mov rdi, [rbp + 16]>

163:
old  <	mov rdi, [rbp + 16]>
new  <	mov rbp, [rbp + 8]>

164:
old  <	mov rbp, [rbp + 8]>
new  <	jmp rax>

165:
old  <	jmp rax>
new  <>

166:
old  <>
new  < reverse_compare$15:>

167:
old  < reverse_compare$15:>
new  <	; FunctionEnd reverse_compare>

168:
old  <	; FunctionEnd reverse_compare>
new  <>

169:
old  <>
new  <section .data>

170:
old  <section .data>
new  <>

171:
old  <>
new  <string_div_t20quot2025i20rem2025i0A#:>

172:
old  <string_div_t20quot2025i20rem2025i0A#:>
new  <	; Initializer String div_t quot %i rem %i\n>

173:
old  <	; Initializer String div_t quot %i rem %i\n>
new  <	db "div_t quot %i rem %i", 10, 0>

174:
old  <	db "div_t quot %i rem %i", 10, 0>
new  <>

175:
old  <>
new  <section .text>

176:
old  <section .text>
new  <>

177:
old  <>
new  < print_div:>

178:
old  < print_div:>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

179:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

180:
old  <>
new  < print_div$1:>

181:
old  < print_div$1:>
new  <	; Parameter pointer "div_t quot %i rem %i\n" 56>

182:
old  <	; Parameter pointer "div_t quot %i rem %i\n" 56>
new  <	mov qword [rbp + 56], string_div_t20quot2025i20rem2025i0A#>

183:
old  <	mov qword [rbp + 56], string_div_t20quot2025i20rem2025i0A#>
new  <>

184:
old  <>
new  < print_div$2:>

185:
old  < print_div$2:>
new  <	; Parameter signedint d.quot 64>

186:
old  <	; Parameter signedint d.quot 64>
new  <	mov eax, [rbp + 24]>

187:
old  <	mov eax, [rbp + 24]>
new  <	mov [rbp + 64], eax>

188:
old  <	mov [rbp + 64], eax>
new  <>

189:
old  <>
new  < print_div$3:>

190:
old  < print_div$3:>
new  <	; Parameter signedint d.rem 68>

191:
old  <	; Parameter signedint d.rem 68>
new  <	mov eax, [rbp + 28]>

192:
old  <	mov eax, [rbp + 28]>
new  <	mov [rbp + 68], eax>

193:
old  <	mov [rbp + 68], eax>
new  <>

194:
old  <>
new  < print_div$4:>

195:
old  < print_div$4:>
new  <	; Call printf 32 8>

196:
old  <	; Call printf 32 8>
new  <	mov qword [rbp + 32], print_div$5>

197:
old  <	mov qword [rbp + 32], print_div$5>
new  <	mov [rbp + 40], rbp>

198:
old  <	mov [rbp + 40], rbp>
new  <	add rbp, 32>

199:
old  <	add rbp, 32>
new  <	mov rdi, rbp>

200:
old  <	mov rdi, rbp>
new  <	add rdi, 8>

201:
old  <	add rdi, 8>
new  <	jmp printf>

202:
old  <	jmp printf>
new  <>

203:
old  <>
new  < print_div$5:>

204:
old  < print_div$5:>
new  <	; PostCall 32>

205:
old  <	; PostCall 32>
new  <>

206:
old  <>
new  < print_div$6:>

207:
old  < print_div$6:>
new  <	; Return>

208:
old  <	; Return>
new  <	mov rax, [rbp]>

209:
old  <	mov rax, [rbp]>
new  <	mov rdi, [rbp + 16]>

210:
old  <	mov rdi, [rbp + 16]>
new  <	mov rbp, [rbp + 8]>

211:
old  <	mov rbp, [rbp + 8]>
new  <	jmp rax>

212:
old  <	jmp rax>
new  <>

213:
old  <>
new  < print_div$7:>

214:
old  < print_div$7:>
new  <	; FunctionEnd print_div>

215:
old  <	; FunctionEnd print_div>
new  <>

216:
old  <>
new  <section .data>

217:
old  <section .data>
new  <>

218:
old  <>
new  <string_ldiv_t20quot2025li20rem2025li0A#:>

219:
old  <string_ldiv_t20quot2025li20rem2025li0A#:>
new  <	; Initializer String ldiv_t quot %li rem %li\n>

220:
old  <	; Initializer String ldiv_t quot %li rem %li\n>
new  <	db "ldiv_t quot %li rem %li", 10, 0>

221:
old  <	db "ldiv_t quot %li rem %li", 10, 0>
new  <>

222:
old  <>
new  <section .text>

223:
old  <section .text>
new  <>

224:
old  <>
new  < print_ldiv:>

225:
old  < print_ldiv:>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

226:
old  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

227:
old  <>
new  < print_ldiv$1:>

228:
old  < print_ldiv$1:>
new  <	; Parameter pointer "ldiv_t quot %li rem %li\n" 64>

229:
old  <	; Parameter pointer "ldiv_t quot %li rem %li\n" 64>
new  <	mov qword [rbp + 64], string_ldiv_t20quot2025li20rem2025li0A#>

230:
old  <	mov qword [rbp + 64], string_ldiv_t20quot2025li20rem2025li0A#>
new  <>

231:
old  <>
new  < print_ldiv$2:>

232:
old  < print_ldiv$2:>
new  <	; Parameter signed long int ld.quot 72>

233:
old  <	; Parameter signed long int ld.quot 72>
new  <	mov rax, [rbp + 24]>

234:
old  <	mov rax, [rbp + 24]>
new  <	mov [rbp + 72], rax>

235:
old  <	mov [rbp + 72], rax>
new  <>

236:
old  <>
new  < print_ldiv$3:>

237:
old  < print_ldiv$3:>
new  <	; Parameter signed long int ld.rem 80>

238:
old  <	; Parameter signed long int ld.rem 80>
new  <	mov rax, [rbp + 32]>

239:
old  <	mov rax, [rbp + 32]>
new  <	mov [rbp + 80], rax>

240:
old  <	mov [rbp + 80], rax>
new  <>

241:
old  <>
new  < print_ldiv$4:>

242:
old  < print_ldiv$4:>
new  <	; Call printf 40 16>

243:
old  <	; Call printf 40 16>
new  <	mov qword [rbp + 40], print_ldiv$5>

244:
old  <	mov qword [rbp + 40], print_ldiv$5>
new  <	mov [rbp + 48], rbp>

245:
old  <	mov [rbp + 48], rbp>
new  <	add rbp, 40>

246:
old  <	add rbp, 40>
new  <	mov rdi, rbp>

247:
old  <	mov rdi, rbp>
new  <	add rdi, 16>

248:
old  <	add rdi, 16>
new  <	jmp printf>

249:
old  <	jmp printf>
new  <>

250:
old  <>
new  < print_ldiv$5:>

251:
old  < print_ldiv$5:>
new  <	; PostCall 40>

252:
old  <	; PostCall 40>
new  <>

253:
old  <>
new  < print_ldiv$6:>

254:
old  < print_ldiv$6:>
new  <	; Return>

255:
old  <	; Return>
new  <	mov rax, [rbp]>

256:
old  <	mov rax, [rbp]>
new  <	mov rdi, [rbp + 16]>

257:
old  <	mov rdi, [rbp + 16]>
new  <	mov rbp, [rbp + 8]>

258:
old  <	mov rbp, [rbp + 8]>
new  <	jmp rax>

259:
old  <	jmp rax>
new  <>

260:
old  <>
new  < print_ldiv$7:>

261:
old  < print_ldiv$7:>
new  <	; FunctionEnd print_ldiv>

262:
old  <	; FunctionEnd print_ldiv>
new  <>

263:
old  <>
new  <section .data>

264:
old  <section .data>
new  <>

265:
old  <>
new  <string_exit10A#:>

266:
old  <string_exit10A#:>
new  <	; Initializer String exit1\n>

267:
old  <	; Initializer String exit1\n>
new  <	db "exit1", 10, 0>

268:
old  <	db "exit1", 10, 0>
new  <>

269:
old  <>
new  <section .text>

270:
old  <section .text>
new  <>

271:
old  <>
new  < exit_handle1x:>

272:
old  < exit_handle1x:>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

273:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

274:
old  <>
new  < exit_handle1x$1:>

275:
old  < exit_handle1x$1:>
new  <	; Parameter pointer "exit1\n" 48>

276:
old  <	; Parameter pointer "exit1\n" 48>
new  <	mov qword [rbp + 48], string_exit10A#>

277:
old  <	mov qword [rbp + 48], string_exit10A#>
new  <>

278:
old  <>
new  < exit_handle1x$2:>

279:
old  < exit_handle1x$2:>
new  <	; Call printf 24 0>

280:
old  <	; Call printf 24 0>
new  <	mov qword [rbp + 24], exit_handle1x$3>

281:
old  <	mov qword [rbp + 24], exit_handle1x$3>
new  <	mov [rbp + 32], rbp>

282:
old  <	mov [rbp + 32], rbp>
new  <	add rbp, 24>

283:
old  <	add rbp, 24>
new  <	mov rdi, rbp>

284:
old  <	mov rdi, rbp>
new  <	jmp printf>

285:
old  <	jmp printf>
new  <>

286:
old  <>
new  < exit_handle1x$3:>

287:
old  < exit_handle1x$3:>
new  <	; PostCall 24>

288:
old  <	; PostCall 24>
new  <>

289:
old  <>
new  < exit_handle1x$4:>

290:
old  < exit_handle1x$4:>
new  <	; Return>

291:
old  <	; Return>
new  <	mov rax, [rbp]>

292:
old  <	mov rax, [rbp]>
new  <	mov rdi, [rbp + 16]>

293:
old  <	mov rdi, [rbp + 16]>
new  <	mov rbp, [rbp + 8]>

294:
old  <	mov rbp, [rbp + 8]>
new  <	jmp rax>

295:
old  <	jmp rax>
new  <>

296:
old  <>
new  < exit_handle1x$5:>

297:
old  < exit_handle1x$5:>
new  <	; FunctionEnd exit_handle1x>

298:
old  <	; FunctionEnd exit_handle1x>
new  <>

299:
old  <>
new  <section .data>

300:
old  <section .data>
new  <>

301:
old  <>
new  <string_exit20A#:>

302:
old  <string_exit20A#:>
new  <	; Initializer String exit2\n>

303:
old  <	; Initializer String exit2\n>
new  <	db "exit2", 10, 0>

304:
old  <	db "exit2", 10, 0>
new  <>

305:
old  <>
new  <section .text>

306:
old  <section .text>
new  <>

307:
old  <>
new  < exit_handle2x:>

308:
old  < exit_handle2x:>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

309:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

310:
old  <>
new  < exit_handle2x$1:>

311:
old  < exit_handle2x$1:>
new  <	; Parameter pointer "exit2\n" 48>

312:
old  <	; Parameter pointer "exit2\n" 48>
new  <	mov qword [rbp + 48], string_exit20A#>

313:
old  <	mov qword [rbp + 48], string_exit20A#>
new  <>

314:
old  <>
new  < exit_handle2x$2:>

315:
old  < exit_handle2x$2:>
new  <	; Call printf 24 0>

316:
old  <	; Call printf 24 0>
new  <	mov qword [rbp + 24], exit_handle2x$3>

317:
old  <	mov qword [rbp + 24], exit_handle2x$3>
new  <	mov [rbp + 32], rbp>

318:
old  <	mov [rbp + 32], rbp>
new  <	add rbp, 24>

319:
old  <	add rbp, 24>
new  <	mov rdi, rbp>

320:
old  <	mov rdi, rbp>
new  <	jmp printf>

321:
old  <	jmp printf>
new  <>

322:
old  <>
new  < exit_handle2x$3:>

323:
old  < exit_handle2x$3:>
new  <	; PostCall 24>

324:
old  <	; PostCall 24>
new  <>

325:
old  <>
new  < exit_handle2x$4:>

326:
old  < exit_handle2x$4:>
new  <	; Return>

327:
old  <	; Return>
new  <	mov rax, [rbp]>

328:
old  <	mov rax, [rbp]>
new  <	mov rdi, [rbp + 16]>

329:
old  <	mov rdi, [rbp + 16]>
new  <	mov rbp, [rbp + 8]>

330:
old  <	mov rbp, [rbp + 8]>
new  <	jmp rax>

331:
old  <	jmp rax>
new  <>

332:
old  <>
new  < exit_handle2x$5:>

333:
old  < exit_handle2x$5:>
new  <	; FunctionEnd exit_handle2x>

334:
old  <	; FunctionEnd exit_handle2x>
new  <>

335:
old  <>
new  <section .data>

336:
old  <section .data>
new  <>

337:
old  <>
new  <string_exit30A#:>

338:
old  <string_exit30A#:>
new  <	; Initializer String exit3\n>

339:
old  <	; Initializer String exit3\n>
new  <	db "exit3", 10, 0>

340:
old  <	db "exit3", 10, 0>
new  <>

341:
old  <>
new  <section .text>

342:
old  <section .text>
new  <>

343:
old  <>
new  < exit_handle3x:>

344:
old  < exit_handle3x:>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

345:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

346:
old  <>
new  < exit_handle3x$1:>

347:
old  < exit_handle3x$1:>
new  <	; Parameter pointer "exit3\n" 48>

348:
old  <	; Parameter pointer "exit3\n" 48>
new  <	mov qword [rbp + 48], string_exit30A#>

349:
old  <	mov qword [rbp + 48], string_exit30A#>
new  <>

350:
old  <>
new  < exit_handle3x$2:>

351:
old  < exit_handle3x$2:>
new  <	; Call printf 24 0>

352:
old  <	; Call printf 24 0>
new  <	mov qword [rbp + 24], exit_handle3x$3>

353:
old  <	mov qword [rbp + 24], exit_handle3x$3>
new  <	mov [rbp + 32], rbp>

354:
old  <	mov [rbp + 32], rbp>
new  <	add rbp, 24>

355:
old  <	add rbp, 24>
new  <	mov rdi, rbp>

356:
old  <	mov rdi, rbp>
new  <	jmp printf>

357:
old  <	jmp printf>
new  <>

358:
old  <>
new  < exit_handle3x$3:>

359:
old  < exit_handle3x$3:>
new  <	; PostCall 24>

360:
old  <	; PostCall 24>
new  <>

361:
old  <>
new  < exit_handle3x$4:>

362:
old  < exit_handle3x$4:>
new  <	; Return>

363:
old  <	; Return>
new  <	mov rax, [rbp]>

364:
old  <	mov rax, [rbp]>
new  <	mov rdi, [rbp + 16]>

365:
old  <	mov rdi, [rbp + 16]>
new  <	mov rbp, [rbp + 8]>

366:
old  <	mov rbp, [rbp + 8]>
new  <	jmp rax>

367:
old  <	jmp rax>
new  <>

368:
old  <>
new  < exit_handle3x$5:>

369:
old  < exit_handle3x$5:>
new  <	; FunctionEnd exit_handle3x>

370:
old  <	; FunctionEnd exit_handle3x>
new  <>

371:
old  <>
new  <section .data>

372:
old  <section .data>
new  <>

373:
old  <>
new  <string_HelloFFF#:>

374:
old  <string_1232E456abc#:>
new  <	; Initializer String HelloFFF>

375:
old  <	; Initializer String 123.456abc>
new  <	db "HelloFFF", 0>

376:
old  <	db "123.456abc", 0>
new  <>

377:
old  <>
new  <section .text>

378:
old  <section .data>
new  <>

379:
old  <>
new  < hello:>

380:
old  <string_1232E456#:>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

381:
old  <	; Initializer String 123.456>
new  <>

382:
old  <	db "123.456", 0>
new  < hello$1:>

383:
old  <>
new  <	; Parameter pointer "HelloFFF" 48>

384:
old  <section .data>
new  <	mov qword [rbp + 48], string_HelloFFF#>

386:
old  <string_123abc#:>
new  < hello$2:>

387:
old  <	; Initializer String 123abc>
new  <	; Call printf 24 0>

388:
old  <	db "123abc", 0>
new  <	mov qword [rbp + 24], hello$3>

389:
old  <>
new  <	mov [rbp + 32], rbp>

390:
old  <section .data>
new  <	add rbp, 24>

391:
old  <>
new  <	mov rdi, rbp>

392:
old  <string_atof28221232E4562229203D2025f0A#:>
new  <	jmp printf>

393:
old  <	; Initializer String atof("123.456") = %f\n>
new  <>

394:
old  <	db "atof(", 34, "123.456", 34, ") = %f", 10, 0>
new  < hello$3:>

395:
old  <>
new  <	; PostCall 24>

396:
old  <section .data>
new  <>

397:
old  <>
new  < hello$4:>

398:
old  <string_atoi28221232229203D2025i0A#:>
new  <	; Return>

399:
old  <	; Initializer String atoi("123") = %i\n>
new  <	mov rax, [rbp]>

400:
old  <	db "atoi(", 34, "123", 34, ") = %i", 10, 0>
new  <	mov rdi, [rbp + 16]>

401:
old  <>
new  <	mov rbp, [rbp + 8]>

402:
old  <section .data>
new  <	jmp rax>

404:
old  <string_123#:>
new  < hello$5:>

405:
old  <	; Initializer String 123>
new  <	; FunctionEnd hello>

406:
old  <	db "123", 0>
new  <>

407:
old  <>
new  <section .data>

408:
old  <section .data>
new  <>

409:
old  <>
new  <string_f3A2025u0A#:>

410:
old  <string_atol28221232229203D2025li0A0A#:>
new  <	; Initializer String f: %u\n>

411:
old  <	; Initializer String atol("123") = %li\n\n>
new  <	db "f: %u", 10, 0>

412:
old  <	db "atol(", 34, "123", 34, ") = %li", 10, 10, 0>
new  <>

413:
old  <>
new  <section .text>

414:
old  <section .data>
new  <>

415:
old  <>
new  < qtest:>

416:
old  <string_strtod28221232E456abc222C2026endp29203D202825f2C2025s290A#:>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

417:
old  <	; Initializer String strtod("123.456abc", &endp) = (%f, %s)\n>
new  <>

418:
old  <	db "strtod(", 34, "123.456abc", 34, ", &endp) = (%f, %s)", 10, 0>
new  < qtest$1:>

419:
old  <>
new  <	; Parameter pointer "f: %u\n" 56>

420:
old  <section .data>
new  <	mov qword [rbp + 56], string_f3A2025u0A#>

422:
old  <string_strtol2822123abc222C2026endp29203D202825li2C2025s290A#:>
new  < qtest$2:>

423:
old  <	; Initializer String strtol("123abc", &endp) = (%li, %s)\n>
new  <	; IntegralToIntegral Â£temporary4417 f>

424:
old  <	db "strtol(", 34, "123abc", 34, ", &endp) = (%li, %s)", 10, 0>
new  <	mov rax, [rbp + 24]>

426:
old  <section .data>
new  < qtest$3:>

427:
old  <>
new  <	; Parameter unsigned int Â£temporary4417 64>

428:
old  <string_strtoul2822123abc222C2026endp29203D202825lu2C2025s290A#:>
new  <	mov [rbp + 64], eax>

429:
old  <	; Initializer String strtoul("123abc", &endp) = (%lu, %s)\n>
new  <>

430:
old  <	db "strtoul(", 34, "123abc", 34, ", &endp) = (%lu, %s)", 10, 0>
new  < qtest$4:>

431:
old  <>
new  <	; Call printf 32 4>

432:
old  <section .data>
new  <	mov qword [rbp + 32], qtest$5>

433:
old  <>
new  <	mov [rbp + 40], rbp>

434:
old  <string_0Agetenv2822path2229203D2025s0A#:>
new  <	add rbp, 32>

435:
old  <	; Initializer String \ngetenv("path") = %s\n>
new  <	mov rdi, rbp>

436:
old  <	db 10, "getenv(", 34, "path", 34, ") = %s", 10, 0>
new  <	add rdi, 4>

437:
old  <>
new  <	jmp printf>

438:
old  <section .data>
new  <>

439:
old  <>
new  < qtest$5:>

440:
old  <string_path#:>
new  <	; PostCall 32>

441:
old  <	; Initializer String path>
new  <>

442:
old  <	db "path", 0>
new  < qtest$6:>

443:
old  <>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

444:
old  <section .data>
new  <>

445:
old  <>
new  < qtest$7:>

446:
old  <string_system2822dir22290A#:>
new  <	; Call f 32 0>

447:
old  <	; Initializer String system("dir")\n>
new  <	mov qword [rbp + 32], qtest$8>

448:
old  <	db "system(", 34, "dir", 34, ")", 10, 0>
new  <	mov [rbp + 40], rbp>

449:
old  <>
new  <	mov rax, [rbp + 24]>

450:
old  <section .data>
new  <	add rbp, 32>

451:
old  <>
new  <	jmp rax>

452:
old  <string_dir#:>
new  <>

453:
old  <	; Initializer String dir>
new  < qtest$8:>

454:
old  <	db "dir", 0>
new  <	; PostCall 32>

456:
old  <section .data>
new  < qtest$9:>

457:
old  <>
new  <	; Return>

458:
old  <string_abs282D329203D2025i2C20abs28329203D2025i2C20labs282D3l29203D2025li2C20labs283l29203D2025li0A#:>
new  <	mov rax, [rbp]>

459:
old  <	; Initializer String abs(-3) = %i, abs(3) = %i, labs(-3l) = %li, labs(3l) = %li\n>
new  <	mov rdi, [rbp + 16]>

460:
old  <	db "abs(-3) = %i, abs(3) = %i, labs(-3l) = %li, labs(3l) = %li", 10, 0>
new  <	mov rbp, [rbp + 8]>

461:
old  <>
new  <	jmp rax>

462:
old  <section .data>
new  <>

463:
old  <>
new  < qtest$10:>

464:
old  <string_div_t28102C20329203D202825i2C2025i292C0A#:>
new  <	; FunctionEnd qtest>

465:
old  <	; Initializer String div_t(10, 3) = (%i, %i),\n>
new  <>

466:
old  <	db "div_t(10, 3) = (%i, %i),", 10, 0>
new  <section .data>

468:
old  <section .data>
new  <string_hello3A2025u0A#:>

469:
old  <>
new  <	; Initializer String hello: %u\n>

470:
old  <string_ldiv_t28102C20329203D202825li2C2025li290A#:>
new  <	db "hello: %u", 10, 0>

471:
old  <	; Initializer String ldiv_t(10, 3) = (%li, %li)\n>
new  <>

472:
old  <	db "ldiv_t(10, 3) = (%li, %li)", 10, 0>
new  <section .data>

474:
old  <section .data>
new  <string_Y#:>

475:
old  <>
new  <	; Initializer String Y>

476:
old  <string_0AA20List2013A20#:>
new  <	db "Y", 0>

477:
old  <	; Initializer String \nA List 1: >
new  <>

478:
old  <	db 10, "A List 1: ", 0>
new  <section .text>

480:
old  <section .data>
new  < stdlib_testZ:>

481:
old  <>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

482:
old  <string_25i20#:>
new  <>

483:
old  <	; Initializer String %i >
new  < stdlib_testZ$1:>

484:
old  <	db "%i ", 0>
new  <	; Parameter pointer "hello: %u\n" 48>

485:
old  <>
new  <	mov qword [rbp + 48], string_hello3A2025u0A#>

486:
old  <section .data>
new  <>

487:
old  <>
new  < stdlib_testZ$2:>

488:
old  <string_0AB20List2023A20#:>
new  <	; IntegralToIntegral Â£temporary4420 hello>

489:
old  <	; Initializer String \nB List 2: >
new  <	mov rax, hello>

490:
old  <	db 10, "B List 2: ", 0>
new  <>

491:
old  <>
new  < stdlib_testZ$3:>

492:
old  <section .data>
new  <	; Parameter unsigned int Â£temporary4420 56>

493:
old  <>
new  <	mov [rbp + 56], eax>

494:
old  <string_0AC20List2033A20#:>
new  <>

495:
old  <	; Initializer String \nC List 3: >
new  < stdlib_testZ$4:>

496:
old  <	db 10, "C List 3: ", 0>
new  <	; Call printf 24 4>

497:
old  <>
new  <	mov qword [rbp + 24], stdlib_testZ$5>

498:
old  <section .data>
new  <	mov [rbp + 32], rbp>

499:
old  <>
new  <	add rbp, 24>

500:
old  <string_0A0ASearch3A0A#:>
new  <	mov rdi, rbp>

501:
old  <	; Initializer String \n\nSearch:\n>
new  <	add rdi, 4>

502:
old  <	db 10, 10, "Search:", 10, 0>
new  <	jmp printf>

504:
old  <section .data>
new  < stdlib_testZ$5:>

505:
old  <>
new  <	; PostCall 24>

506:
old  <string_20202825i2C2025i290A#:>
new  <>

507:
old  <	; Initializer String   (%i, %i)\n>
new  < stdlib_testZ$6:>

508:
old  <	db "  (%i, %i)", 10, 0>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

510:
old  <section .data>
new  < stdlib_testZ$7:>

511:
old  <>
new  <	; Parameter pointer hello 48>

512:
old  <string_0A#:>
new  <	mov qword [rbp + 48], hello>

513:
old  <	; Initializer String \n>
new  <>

514:
old  <	db 10, 0>
new  < stdlib_testZ$8:>

515:
old  <>
new  <	; Call qtest 24 0>

516:
old  <section .data>
new  <	mov qword [rbp + 24], stdlib_testZ$9>

517:
old  <>
new  <	mov [rbp + 32], rbp>

518:
old  <int8$4#:>
new  <	add rbp, 24>

519:
old  <	; Initializer Pointer 4>
new  <	jmp qtest>

520:
old  <	dq 4>
new  <>

521:
old  <>
new  < stdlib_testZ$9:>

522:
old  <section .text>
new  <	; PostCall 24>

524:
old  < stdlib_test:>
new  < stdlib_testZ$10:>

525:
old  <	; Assign p s>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

526:
old  <	mov [rbp + 324], rbp>
new  <>

527:
old  <	add qword [rbp + 324], 24>
new  < stdlib_testZ$11:>

528:
old  <>
new  <	; Parameter pointer "Y" 48>

529:
old  < stdlib_test$1:>
new  <	mov qword [rbp + 48], string_Y#>

530:
old  <	; Assign q t>
new  <>

531:
old  <	mov [rbp + 332], rbp>
new  < stdlib_testZ$12:>

532:
old  <	add qword [rbp + 332], 124>
new  <	; Call printf 24 0>

533:
old  <>
new  <	mov qword [rbp + 24], stdlib_testZ$13>

534:
old  < stdlib_test$2:>
new  <	mov [rbp + 32], rbp>

535:
old  <	; Assign r w>
new  <	add rbp, 24>

536:
old  <	mov [rbp + 340], rbp>
new  <	mov rdi, rbp>

537:
old  <	add qword [rbp + 340], 224>
new  <	jmp printf>

539:
old  < stdlib_test$3:>
new  < stdlib_testZ$13:>

540:
old  <	; PreCall 348 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; PostCall 24>

542:
old  < stdlib_test$4:>
new  < stdlib_testZ$14:>

543:
old  <	; Parameter pointer "123.456abc" 372>
new  <	; Return>

544:
old  <	mov qword [rbp + 372], string_1232E456abc#>
new  <	mov rax, [rbp]>

545:
old  <>
new  <	mov rdi, [rbp + 16]>

546:
old  < stdlib_test$5:>
new  <	mov rbp, [rbp + 8]>

547:
old  <	; Address Â£temporary3795 p>
new  <	jmp rax>

548:
old  <	mov rsi, rbp>
new  <>

549:
old  <	add rsi, 324>
new  < stdlib_testZ$15:>

550:
old  <>
new  <	; FunctionEnd stdlib_testZ>

551:
old  < stdlib_test$6:>
new  <>

552:
old  <	; Parameter pointer Â£temporary3795 380>
new  <section .data>

553:
old  <	mov [rbp + 380], rsi>
new  <>

554:
old  <>
new  <string_atof28221232E4562229203D2025f0A#:>

555:
old  < stdlib_test$7:>
new  <	; Initializer String atof("123.456") = %f\n>

556:
old  <	; Call strtod 348 0>
new  <	db "atof(", 34, "123.456", 34, ") = %f", 10, 0>

557:
old  <	mov qword [rbp + 348], stdlib_test$8>
new  <>

558:
old  <	mov [rbp + 356], rbp>
new  <section .data>

559:
old  <	add rbp, 348>
new  <>

560:
old  <	jmp strtod>
new  <string_1232E456#:>

561:
old  <>
new  <	; Initializer String 123.456>

562:
old  < stdlib_test$8:>
new  <	db "123.456", 0>

563:
old  <	; PostCall 348>
new  <>

564:
old  <>
new  <section .data>

565:
old  < stdlib_test$9:>
new  <>

566:
old  <	; GetReturnValue Â£temporary3796>
new  <string_strtod28221232E456789abc222C2026p29203D202825f2C2025s290A#:>

567:
old  <>
new  <	; Initializer String strtod("123.456789abc", &p) = (%f, %s)\n>

568:
old  < stdlib_test$10:>
new  <	db "strtod(", 34, "123.456789abc", 34, ", &p) = (%f, %s)", 10, 0>

569:
old  <	; PopFloat x>
new  <>

570:
old  <	fstp qword [rbp + 348]>
new  <section .data>

572:
old  < stdlib_test$11:>
new  <string_1232E456789abc#:>

573:
old  <	; PreCall 356 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Initializer String 123.456789abc>

574:
old  <>
new  <	db "123.456789abc", 0>

575:
old  < stdlib_test$12:>
new  <>

576:
old  <	; Parameter pointer "123.456" 380>
new  <section .data>

577:
old  <	mov qword [rbp + 380], string_1232E456#>
new  <>

578:
old  <>
new  <string_0Agetenv2822path2229203D2025s0A#:>

579:
old  < stdlib_test$13:>
new  <	; Initializer String \ngetenv("path") = %s\n>

580:
old  <	; Call atof 356 0>
new  <	db 10, "getenv(", 34, "path", 34, ") = %s", 10, 0>

581:
old  <	mov qword [rbp + 356], stdlib_test$14>
new  <>

582:
old  <	mov [rbp + 364], rbp>
new  <section .data>

583:
old  <	add rbp, 356>
new  <>

584:
old  <	jmp atof>
new  <string_path#:>

585:
old  <>
new  <	; Initializer String path>

586:
old  < stdlib_test$14:>
new  <	db "path", 0>

587:
old  <	; PostCall 356>
new  <>

588:
old  <>
new  <section .data>

589:
old  < stdlib_test$15:>
new  <>

590:
old  <	; GetReturnValue Â£temporary3797>
new  <string_system2822dir22290A#:>

591:
old  <>
new  <	; Initializer String system("dir")\n>

592:
old  < stdlib_test$16:>
new  <	db "system(", 34, "dir", 34, ")", 10, 0>

593:
old  <	; PopFloat y>
new  <>

594:
old  <	fstp qword [rbp + 356]>
new  <section .data>

596:
old  < stdlib_test$17:>
new  <string_dir#:>

597:
old  <	; PreCall 364 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Initializer String dir>

598:
old  <>
new  <	db "dir", 0>

599:
old  < stdlib_test$18:>
new  <>

600:
old  <	; Parameter pointer "123abc" 388>
new  <section .data>

601:
old  <	mov qword [rbp + 388], string_123abc#>
new  <>

602:
old  <>
new  <string_0Aabs282D329203D2025i2C20abs28329203D2025i0A#:>

603:
old  < stdlib_test$19:>
new  <	; Initializer String \nabs(-3) = %i, abs(3) = %i\n>

604:
old  <	; Address Â£temporary3798 q>
new  <	db 10, "abs(-3) = %i, abs(3) = %i", 10, 0>

605:
old  <	mov rsi, rbp>
new  <>

606:
old  <	add rsi, 332>
new  <section .data>

608:
old  < stdlib_test$20:>
new  <string_labs282D3l29203D2025li2C20labs283l29203D2025li0A0A#:>

609:
old  <	; Parameter pointer Â£temporary3798 396>
new  <	; Initializer String labs(-3l) = %li, labs(3l) = %li\n\n>

610:
old  <	mov [rbp + 396], rsi>
new  <	db "labs(-3l) = %li, labs(3l) = %li", 10, 10, 0>

612:
old  < stdlib_test$21:>
new  <section .data>

613:
old  <	; Parameter signedint 8 404>
new  <>

614:
old  <	mov dword [rbp + 404], 8>
new  <string_div_t28102C20329203D202825i2C2025i292C0A#:>

615:
old  <>
new  <	; Initializer String div_t(10, 3) = (%i, %i),\n>

616:
old  < stdlib_test$22:>
new  <	db "div_t(10, 3) = (%i, %i),", 10, 0>

617:
old  <	; Call strtol 364 0>
new  <>

618:
old  <	mov qword [rbp + 364], stdlib_test$23>
new  <section .data>

619:
old  <	mov [rbp + 372], rbp>
new  <>

620:
old  <	add rbp, 364>
new  <string_ldiv_t28102C20329203D202825li2C2025li290A#:>

621:
old  <	jmp strtol>
new  <	; Initializer String ldiv_t(10, 3) = (%li, %li)\n>

622:
old  <>
new  <	db "ldiv_t(10, 3) = (%li, %li)", 10, 0>

623:
old  < stdlib_test$23:>
new  <>

624:
old  <	; PostCall 364>
new  <section .data>

626:
old  < stdlib_test$24:>
new  <string_0AA20List2013A20#:>

627:
old  <	; GetReturnValue Â£temporary3799>
new  <	; Initializer String \nA List 1: >

628:
old  <>
new  <	db 10, "A List 1: ", 0>

629:
old  < stdlib_test$25:>
new  <>

630:
old  <	; Assign l Â£temporary3799>
new  <section .data>

631:
old  <	mov [rbp + 364], rbx>
new  <>

632:
old  <>
new  <string_25i20#:>

633:
old  < stdlib_test$26:>
new  <	; Initializer String %i >

634:
old  <	; PreCall 372 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	db "%i ", 0>

636:
old  < stdlib_test$27:>
new  <section .data>

637:
old  <	; Parameter pointer "123abc" 396>
new  <>

638:
old  <	mov qword [rbp + 396], string_123abc#>
new  <string_0AB20List2023A20#:>

639:
old  <>
new  <	; Initializer String \nB List 2: >

640:
old  < stdlib_test$28:>
new  <	db 10, "B List 2: ", 0>

641:
old  <	; Address Â£temporary3800 r>
new  <>

642:
old  <	mov rsi, rbp>
new  <section .data>

643:
old  <	add rsi, 340>
new  <>

644:
old  <>
new  <string_0AC20List2033A20#:>

645:
old  < stdlib_test$29:>
new  <	; Initializer String \nC List 3: >

646:
old  <	; Parameter pointer Â£temporary3800 404>
new  <	db 10, "C List 3: ", 0>

647:
old  <	mov [rbp + 404], rsi>
new  <>

648:
old  <>
new  <section .data>

649:
old  < stdlib_test$30:>
new  <>

650:
old  <	; Parameter signedint 8 412>
new  <string_0A0ASearch3A0A#:>

651:
old  <	mov dword [rbp + 412], 8>
new  <	; Initializer String \n\nSearch:\n>

652:
old  <>
new  <	db 10, 10, "Search:", 10, 0>

653:
old  < stdlib_test$31:>
new  <>

654:
old  <	; Call strtoul 372 0>
new  <section .data>

655:
old  <	mov qword [rbp + 372], stdlib_test$32>
new  <>

656:
old  <	mov [rbp + 380], rbp>
new  <string_20202825i2C2025i290A#:>

657:
old  <	add rbp, 372>
new  <	; Initializer String   (%i, %i)\n>

658:
old  <	jmp strtoul>
new  <	db "  (%i, %i)", 10, 0>

660:
old  < stdlib_test$32:>
new  <section .data>

661:
old  <	; PostCall 372>
new  <>

662:
old  <>
new  <string_0A#:>

663:
old  < stdlib_test$33:>
new  <	; Initializer String \n>

664:
old  <	; GetReturnValue Â£temporary3801>
new  <	db 10, 0>

666:
old  < stdlib_test$34:>
new  <section .data>

667:
old  <	; Assign ul Â£temporary3801>
new  <>

668:
old  <	mov [rbp + 372], rbx>
new  <int8$4#:>

669:
old  <>
new  <	; Initializer Pointer 4>

670:
old  < stdlib_test$35:>
new  <	dq 4>

671:
old  <	; PreCall 380 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

672:
old  <>
new  <section .text>

673:
old  < stdlib_test$36:>
new  <>

674:
old  <	; Parameter pointer "atof("123.456") = %f\n" 404>
new  < stdlib_test:>

675:
old  <	mov qword [rbp + 404], string_atof28221232E4562229203D2025f0A#>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

677:
old  < stdlib_test$37:>
new  < stdlib_test$1:>

678:
old  <	; PushFloat y>
new  <	; Parameter pointer "atof("123.456") = %f\n" 56>

679:
old  <	fld qword [rbp + 356]>
new  <	mov qword [rbp + 56], string_atof28221232E4562229203D2025f0A#>

681:
old  < stdlib_test$38:>
new  < stdlib_test$2:>

682:
old  <	; Parameter double y 412>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

683:
old  <	fstp qword [rbp + 412]>
new  <>

684:
old  <>
new  < stdlib_test$3:>

685:
old  < stdlib_test$39:>
new  <	; Parameter pointer "123.456" 88>

686:
old  <	; Call printf 380 8>
new  <	mov qword [rbp + 88], string_1232E456#>

687:
old  <	mov qword [rbp + 380], stdlib_test$40>
new  <>

688:
old  <	mov [rbp + 388], rbp>
new  < stdlib_test$4:>

689:
old  <	add rbp, 380>
new  <	; Call atof 64 0>

690:
old  <	mov rdi, rbp>
new  <	mov qword [rbp + 64], stdlib_test$5>

691:
old  <	add rdi, 8>
new  <	mov [rbp + 72], rbp>

692:
old  <	jmp printf>
new  <	add rbp, 64>

693:
old  <>
new  <	jmp atof>

694:
old  < stdlib_test$40:>
new  <>

695:
old  <	; PostCall 380>
new  < stdlib_test$5:>

696:
old  <>
new  <	; PostCall 64>

697:
old  < stdlib_test$41:>
new  <>

698:
old  <	; PreCall 380 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < stdlib_test$6:>

699:
old  <>
new  <	; GetReturnValue Â£temporary4424>

700:
old  < stdlib_test$42:>
new  <>

701:
old  <	; Parameter pointer "atoi("123") = %i\n" 404>
new  < stdlib_test$7:>

702:
old  <	mov qword [rbp + 404], string_atoi28221232229203D2025i0A#>
new  <	; Parameter double Â£temporary4424 64>

703:
old  <>
new  <	fstp qword [rbp + 64]>

704:
old  < stdlib_test$43:>
new  <>

705:
old  <	; PreCall 380 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < stdlib_test$8:>

706:
old  <>
new  <	; Call printf 32 8>

707:
old  < stdlib_test$44:>
new  <	mov qword [rbp + 32], stdlib_test$9>

708:
old  <	; Parameter pointer "123" 436>
new  <	mov [rbp + 40], rbp>

709:
old  <	mov qword [rbp + 436], string_123#>
new  <	add rbp, 32>

710:
old  <>
new  <	mov rdi, rbp>

711:
old  < stdlib_test$45:>
new  <	add rdi, 8>

712:
old  <	; Call atoi 412 0>
new  <	jmp printf>

713:
old  <	mov qword [rbp + 412], stdlib_test$46>
new  <>

714:
old  <	mov [rbp + 420], rbp>
new  < stdlib_test$9:>

715:
old  <	add rbp, 412>
new  <	; PostCall 32>

716:
old  <	jmp atoi>
new  <>

717:
old  <>
new  < stdlib_test$10:>

718:
old  < stdlib_test$46:>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

719:
old  <	; PostCall 412>
new  <>

720:
old  <>
new  < stdlib_test$11:>

721:
old  < stdlib_test$47:>
new  <	; Parameter pointer "strtod("123.456789abc", &p) = (%f, %s)\n" 56>

722:
old  <	; GetReturnValue Â£temporary3803>
new  <	mov qword [rbp + 56], string_strtod28221232E456789abc222C2026p29203D202825f2C2025s290A#>

724:
old  < stdlib_test$48:>
new  < stdlib_test$12:>

725:
old  <	; Parameter signedint Â£temporary3803 412>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

726:
old  <	mov [rbp + 412], ebx>
new  <>

727:
old  <>
new  < stdlib_test$13:>

728:
old  < stdlib_test$49:>
new  <	; Parameter pointer "123.456789abc" 88>

729:
old  <	; Call printf 380 4>
new  <	mov qword [rbp + 88], string_1232E456789abc#>

730:
old  <	mov qword [rbp + 380], stdlib_test$50>
new  <>

731:
old  <	mov [rbp + 388], rbp>
new  < stdlib_test$14:>

732:
old  <	add rbp, 380>
new  <	; Address Â£temporary4426 p>

733:
old  <	mov rdi, rbp>
new  <	mov rsi, rbp>

734:
old  <	add rdi, 4>
new  <	add rsi, 24>

735:
old  <	jmp printf>
new  <>

736:
old  <>
new  < stdlib_test$15:>

737:
old  < stdlib_test$50:>
new  <	; Parameter pointer Â£temporary4426 96>

738:
old  <	; PostCall 380>
new  <	mov [rbp + 96], rsi>

740:
old  < stdlib_test$51:>
new  < stdlib_test$16:>

741:
old  <	; PreCall 380 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Call strtod 64 0>

742:
old  <>
new  <	mov qword [rbp + 64], stdlib_test$17>

743:
old  < stdlib_test$52:>
new  <	mov [rbp + 72], rbp>

744:
old  <	; Parameter pointer "atol("123") = %li\n\n" 404>
new  <	add rbp, 64>

745:
old  <	mov qword [rbp + 404], string_atol28221232229203D2025li0A0A#>
new  <	jmp strtod>

747:
old  < stdlib_test$53:>
new  < stdlib_test$17:>

748:
old  <	; PreCall 380 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; PostCall 64>

750:
old  < stdlib_test$54:>
new  < stdlib_test$18:>

751:
old  <	; Parameter pointer "123" 436>
new  <	; GetReturnValue Â£temporary4427>

752:
old  <	mov qword [rbp + 436], string_123#>
new  <>

753:
old  <>
new  < stdlib_test$19:>

754:
old  < stdlib_test$55:>
new  <	; Parameter double Â£temporary4427 64>

755:
old  <	; Call atol 412 0>
new  <	fstp qword [rbp + 64]>

756:
old  <	mov qword [rbp + 412], stdlib_test$56>
new  <>

757:
old  <	mov [rbp + 420], rbp>
new  < stdlib_test$20:>

758:
old  <	add rbp, 412>
new  <	; Parameter pointer p 72>

759:
old  <	jmp atol>
new  <	mov rax, [rbp + 24]>

760:
old  <>
new  <	mov [rbp + 72], rax>

761:
old  < stdlib_test$56:>
new  <>

762:
old  <	; PostCall 412>
new  < stdlib_test$21:>

763:
old  <>
new  <	; Call printf 32 16>

764:
old  < stdlib_test$57:>
new  <	mov qword [rbp + 32], stdlib_test$22>

765:
old  <	; GetReturnValue Â£temporary3805>
new  <	mov [rbp + 40], rbp>

766:
old  <>
new  <	add rbp, 32>

767:
old  < stdlib_test$58:>
new  <	mov rdi, rbp>

768:
old  <	; Parameter signed long int Â£temporary3805 412>
new  <	add rdi, 16>

769:
old  <	mov [rbp + 412], rbx>
new  <	jmp printf>

771:
old  < stdlib_test$59:>
new  < stdlib_test$22:>

772:
old  <	; Call printf 380 8>
new  <	; PostCall 32>

773:
old  <	mov qword [rbp + 380], stdlib_test$60>
new  <>

774:
old  <	mov [rbp + 388], rbp>
new  < stdlib_test$23:>

775:
old  <	add rbp, 380>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

776:
old  <	mov rdi, rbp>
new  <>

777:
old  <	add rdi, 8>
new  < stdlib_test$24:>

778:
old  <	jmp printf>
new  <	; Parameter pointer "\ngetenv("path") = %s\n" 48>

779:
old  <>
new  <	mov qword [rbp + 48], string_0Agetenv2822path2229203D2025s0A#>

780:
old  < stdlib_test$60:>
new  <>

781:
old  <	; PostCall 380>
new  < stdlib_test$25:>

782:
old  <>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

783:
old  < stdlib_test$61:>
new  <>

784:
old  <	; PreCall 380 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < stdlib_test$26:>

785:
old  <>
new  <	; Parameter pointer "path" 80>

786:
old  < stdlib_test$62:>
new  <	mov qword [rbp + 80], string_path#>

787:
old  <	; Parameter pointer "strtod("123.456abc", &endp) = (%f, %s)\n" 404>
new  <>

788:
old  <	mov qword [rbp + 404], string_strtod28221232E456abc222C2026endp29203D202825f2C2025s290A#>
new  < stdlib_test$27:>

789:
old  <>
new  <	; Call getenv 56 0>

790:
old  < stdlib_test$63:>
new  <	mov qword [rbp + 56], stdlib_test$28>

791:
old  <	; PushFloat x>
new  <	mov [rbp + 64], rbp>

792:
old  <	fld qword [rbp + 348]>
new  <	add rbp, 56>

793:
old  <>
new  <	jmp getenv>

794:
old  < stdlib_test$64:>
new  <>

795:
old  <	; Parameter double x 412>
new  < stdlib_test$28:>

796:
old  <	fstp qword [rbp + 412]>
new  <	; PostCall 56>

798:
old  < stdlib_test$65:>
new  < stdlib_test$29:>

799:
old  <	; Parameter pointer p 420>
new  <	; GetReturnValue Â£temporary4429>

800:
old  <	mov rax, [rbp + 324]>
new  <>

801:
old  <	mov [rbp + 420], rax>
new  < stdlib_test$30:>

802:
old  <>
new  <	; Parameter pointer Â£temporary4429 56>

803:
old  < stdlib_test$66:>
new  <	mov [rbp + 56], rbx>

804:
old  <	; Call printf 380 16>
new  <>

805:
old  <	mov qword [rbp + 380], stdlib_test$67>
new  < stdlib_test$31:>

806:
old  <	mov [rbp + 388], rbp>
new  <	; Call printf 24 8>

807:
old  <	add rbp, 380>
new  <	mov qword [rbp + 24], stdlib_test$32>

808:
old  <	mov rdi, rbp>
new  <	mov [rbp + 32], rbp>

809:
old  <	add rdi, 16>
new  <	add rbp, 24>

810:
old  <	jmp printf>
new  <	mov rdi, rbp>

811:
old  <>
new  <	add rdi, 8>

812:
old  < stdlib_test$67:>
new  <	jmp printf>

813:
old  <	; PostCall 380>
new  <>

814:
old  <>
new  < stdlib_test$32:>

815:
old  < stdlib_test$68:>
new  <	; PostCall 24>

816:
old  <	; PreCall 380 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

817:
old  <>
new  < stdlib_test$33:>

818:
old  < stdlib_test$69:>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

819:
old  <	; Parameter pointer "strtol("123abc", &endp) = (%li, %s)\n" 404>
new  <>

820:
old  <	mov qword [rbp + 404], string_strtol2822123abc222C2026endp29203D202825li2C2025s290A#>
new  < stdlib_test$34:>

821:
old  <>
new  <	; Parameter pointer "system("dir")\n" 48>

822:
old  < stdlib_test$70:>
new  <	mov qword [rbp + 48], string_system2822dir22290A#>

823:
old  <	; Parameter signed long int l 412>
new  <>

824:
old  <	mov rax, [rbp + 364]>
new  < stdlib_test$35:>

825:
old  <	mov [rbp + 412], rax>
new  <	; Call printf 24 0>

826:
old  <>
new  <	mov qword [rbp + 24], stdlib_test$36>

827:
old  < stdlib_test$71:>
new  <	mov [rbp + 32], rbp>

828:
old  <	; Parameter pointer q 420>
new  <	add rbp, 24>

829:
old  <	mov rax, [rbp + 332]>
new  <	mov rdi, rbp>

830:
old  <	mov [rbp + 420], rax>
new  <	jmp printf>

832:
old  < stdlib_test$72:>
new  < stdlib_test$36:>

833:
old  <	; Call printf 380 16>
new  <	; PostCall 24>

834:
old  <	mov qword [rbp + 380], stdlib_test$73>
new  <>

835:
old  <	mov [rbp + 388], rbp>
new  < stdlib_test$37:>

836:
old  <	add rbp, 380>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

837:
old  <	mov rdi, rbp>
new  <>

838:
old  <	add rdi, 16>
new  < stdlib_test$38:>

839:
old  <	jmp printf>
new  <	; Parameter pointer "dir" 48>

840:
old  <>
new  <	mov qword [rbp + 48], string_dir#>

841:
old  < stdlib_test$73:>
new  <>

842:
old  <	; PostCall 380>
new  < stdlib_test$39:>

843:
old  <>
new  <	; Call system 24 0>

844:
old  < stdlib_test$74:>
new  <	mov qword [rbp + 24], stdlib_test$40>

845:
old  <	; PreCall 380 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov [rbp + 32], rbp>

846:
old  <>
new  <	add rbp, 24>

847:
old  < stdlib_test$75:>
new  <	jmp system>

848:
old  <	; Parameter pointer "strtoul("123abc", &endp) = (%lu, %s)\n" 404>
new  <>

849:
old  <	mov qword [rbp + 404], string_strtoul2822123abc222C2026endp29203D202825lu2C2025s290A#>
new  < stdlib_test$40:>

850:
old  <>
new  <	; PostCall 24>

851:
old  < stdlib_test$76:>
new  <>

852:
old  <	; Parameter unsignedlongint ul 412>
new  < stdlib_test$41:>

853:
old  <	mov rax, [rbp + 372]>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

854:
old  <	mov [rbp + 412], rax>
new  <>

855:
old  <>
new  < stdlib_test$42:>

856:
old  < stdlib_test$77:>
new  <	; Parameter pointer "\nabs(-3) = %i, abs(3) = %i\n" 48>

857:
old  <	; Parameter pointer r 420>
new  <	mov qword [rbp + 48], string_0Aabs282D329203D2025i2C20abs28329203D2025i0A#>

858:
old  <	mov rax, [rbp + 340]>
new  <>

859:
old  <	mov [rbp + 420], rax>
new  < stdlib_test$43:>

860:
old  <>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

861:
old  < stdlib_test$78:>
new  <>

862:
old  <	; Call printf 380 16>
new  < stdlib_test$44:>

863:
old  <	mov qword [rbp + 380], stdlib_test$79>
new  <	; Parameter signedint -3 80>

864:
old  <	mov [rbp + 388], rbp>
new  <	mov dword [rbp + 80], -3>

865:
old  <	add rbp, 380>
new  <>

866:
old  <	mov rdi, rbp>
new  < stdlib_test$45:>

867:
old  <	add rdi, 16>
new  <	; Call @abs 56 0>

868:
old  <	jmp printf>
new  <	mov qword [rbp + 56], stdlib_test$46>

869:
old  <>
new  <	mov [rbp + 64], rbp>

870:
old  < stdlib_test$79:>
new  <	add rbp, 56>

871:
old  <	; PostCall 380>
new  <	jmp @abs>

873:
old  < stdlib_test$80:>
new  < stdlib_test$46:>

874:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; PostCall 56>

876:
old  < stdlib_test$81:>
new  < stdlib_test$47:>

877:
old  <	; Parameter pointer "\ngetenv("path") = %s\n" 48>
new  <	; GetReturnValue Â£temporary4433>

878:
old  <	mov qword [rbp + 48], string_0Agetenv2822path2229203D2025s0A#>
new  <>

879:
old  <>
new  < stdlib_test$48:>

880:
old  < stdlib_test$82:>
new  <	; Parameter signedint Â£temporary4433 56>

881:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov [rbp + 56], ebx>

883:
old  < stdlib_test$83:>
new  < stdlib_test$49:>

884:
old  <	; Parameter pointer "path" 80>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

885:
old  <	mov qword [rbp + 80], string_path#>
new  <>

886:
old  <>
new  < stdlib_test$50:>

887:
old  < stdlib_test$84:>
new  <	; Parameter signedint 3 84>

888:
old  <	; Call getenv 56 0>
new  <	mov dword [rbp + 84], 3>

889:
old  <	mov qword [rbp + 56], stdlib_test$85>
new  <>

890:
old  <	mov [rbp + 64], rbp>
new  < stdlib_test$51:>

891:
old  <	add rbp, 56>
new  <	; Call @abs 60 0>

892:
old  <	jmp getenv>
new  <	mov qword [rbp + 60], stdlib_test$52>

893:
old  <>
new  <	mov [rbp + 68], rbp>

894:
old  < stdlib_test$85:>
new  <	add rbp, 60>

895:
old  <	; PostCall 56>
new  <	jmp @abs>

897:
old  < stdlib_test$86:>
new  < stdlib_test$52:>

898:
old  <	; GetReturnValue Â£temporary3810>
new  <	; PostCall 60>

900:
old  < stdlib_test$87:>
new  < stdlib_test$53:>

901:
old  <	; Parameter pointer Â£temporary3810 56>
new  <	; GetReturnValue Â£temporary4434>

902:
old  <	mov [rbp + 56], rbx>
new  <>

903:
old  <>
new  < stdlib_test$54:>

904:
old  < stdlib_test$88:>
new  <	; Parameter signedint Â£temporary4434 60>

905:
old  <	; Call printf 24 8>
new  <	mov [rbp + 60], ebx>

906:
old  <	mov qword [rbp + 24], stdlib_test$89>
new  <>

907:
old  <	mov [rbp + 32], rbp>
new  < stdlib_test$55:>

908:
old  <	add rbp, 24>
new  <	; Call printf 24 8>

909:
old  <	mov rdi, rbp>
new  <	mov qword [rbp + 24], stdlib_test$56>

910:
old  <	add rdi, 8>
new  <	mov [rbp + 32], rbp>

911:
old  <	jmp printf>
new  <	add rbp, 24>

912:
old  <>
new  <	mov rdi, rbp>

913:
old  < stdlib_test$89:>
new  <	add rdi, 8>

914:
old  <	; PostCall 24>
new  <	jmp printf>

916:
old  < stdlib_test$90:>
new  < stdlib_test$56:>

917:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; PostCall 24>

919:
old  < stdlib_test$91:>
new  < stdlib_test$57:>

920:
old  <	; Parameter pointer "system("dir")\n" 48>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

921:
old  <	mov qword [rbp + 48], string_system2822dir22290A#>
new  <>

922:
old  <>
new  < stdlib_test$58:>

923:
old  < stdlib_test$92:>
new  <	; Parameter pointer "labs(-3l) = %li, labs(3l) = %li\n\n" 48>

924:
old  <	; Call printf 24 0>
new  <	mov qword [rbp + 48], string_labs282D3l29203D2025li2C20labs283l29203D2025li0A0A#>

925:
old  <	mov qword [rbp + 24], stdlib_test$93>
new  <>

926:
old  <	mov [rbp + 32], rbp>
new  < stdlib_test$59:>

927:
old  <	add rbp, 24>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

928:
old  <	mov rdi, rbp>
new  <>

929:
old  <	jmp printf>
new  < stdlib_test$60:>

930:
old  <>
new  <	; Parameter signed long int -3 80>

931:
old  < stdlib_test$93:>
new  <	mov qword [rbp + 80], -3>

932:
old  <	; PostCall 24>
new  <>

933:
old  <>
new  < stdlib_test$61:>

934:
old  < stdlib_test$94:>
new  <	; Call labs 56 0>

935:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov qword [rbp + 56], stdlib_test$62>

936:
old  <>
new  <	mov [rbp + 64], rbp>

937:
old  < stdlib_test$95:>
new  <	add rbp, 56>

938:
old  <	; Parameter pointer "dir" 48>
new  <	jmp labs>

939:
old  <	mov qword [rbp + 48], string_dir#>
new  <>

940:
old  <>
new  < stdlib_test$62:>

941:
old  < stdlib_test$96:>
new  <	; PostCall 56>

942:
old  <	; Call system 24 0>
new  <>

943:
old  <	mov qword [rbp + 24], stdlib_test$97>
new  < stdlib_test$63:>

944:
old  <	mov [rbp + 32], rbp>
new  <	; GetReturnValue Â£temporary4436>

945:
old  <	add rbp, 24>
new  <>

946:
old  <	jmp system>
new  < stdlib_test$64:>

947:
old  <>
new  <	; Parameter signed long int Â£temporary4436 56>

948:
old  < stdlib_test$97:>
new  <	mov [rbp + 56], rbx>

949:
old  <	; PostCall 24>
new  <>

950:
old  <>
new  < stdlib_test$65:>

951:
old  < stdlib_test$98:>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

952:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

953:
old  <>
new  < stdlib_test$66:>

954:
old  < stdlib_test$99:>
new  <	; Parameter signed long int 3 88>

955:
old  <	; Parameter pointer "abs(-3) = %i, abs(3) = %i, labs(-3l) = %li, labs(3l) = %li\n" 48>
new  <	mov qword [rbp + 88], 3>

956:
old  <	mov qword [rbp + 48], string_abs282D329203D2025i2C20abs28329203D2025i2C20labs282D3l29203D2025li2C20labs283l29203D2025li0A#>
new  <>

957:
old  <>
new  < stdlib_test$67:>

958:
old  < stdlib_test$100:>
new  <	; Call labs 64 0>

959:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov qword [rbp + 64], stdlib_test$68>

960:
old  <>
new  <	mov [rbp + 72], rbp>

961:
old  < stdlib_test$101:>
new  <	add rbp, 64>

962:
old  <	; Parameter signedint -3 80>
new  <	jmp labs>

963:
old  <	mov dword [rbp + 80], -3>
new  <>

964:
old  <>
new  < stdlib_test$68:>

965:
old  < stdlib_test$102:>
new  <	; PostCall 64>

966:
old  <	; Call @abs 56 0>
new  <>

967:
old  <	mov qword [rbp + 56], stdlib_test$103>
new  < stdlib_test$69:>

968:
old  <	mov [rbp + 64], rbp>
new  <	; GetReturnValue Â£temporary4437>

969:
old  <	add rbp, 56>
new  <>

970:
old  <	jmp @abs>
new  < stdlib_test$70:>

971:
old  <>
new  <	; Parameter signed long int Â£temporary4437 64>

972:
old  < stdlib_test$103:>
new  <	mov [rbp + 64], rbx>

973:
old  <	; PostCall 56>
new  <>

974:
old  <>
new  < stdlib_test$71:>

975:
old  < stdlib_test$104:>
new  <	; Call printf 24 16>

976:
old  <	; GetReturnValue Â£temporary3814>
new  <	mov qword [rbp + 24], stdlib_test$72>

977:
old  <>
new  <	mov [rbp + 32], rbp>

978:
old  < stdlib_test$105:>
new  <	add rbp, 24>

979:
old  <	; Parameter signedint Â£temporary3814 56>
new  <	mov rdi, rbp>

980:
old  <	mov [rbp + 56], ebx>
new  <	add rdi, 16>

981:
old  <>
new  <	jmp printf>

982:
old  < stdlib_test$106:>
new  <>

983:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < stdlib_test$72:>

984:
old  <>
new  <	; PostCall 24>

985:
old  < stdlib_test$107:>
new  <>

986:
old  <	; Parameter signedint 3 84>
new  < stdlib_test$73:>

987:
old  <	mov dword [rbp + 84], 3>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

989:
old  < stdlib_test$108:>
new  < stdlib_test$74:>

990:
old  <	; Call @abs 60 0>
new  <	; Parameter signedint 10 48>

991:
old  <	mov qword [rbp + 60], stdlib_test$109>
new  <	mov dword [rbp + 48], 10>

992:
old  <	mov [rbp + 68], rbp>
new  <>

993:
old  <	add rbp, 60>
new  < stdlib_test$75:>

994:
old  <	jmp @abs>
new  <	; Parameter signedint 3 52>

995:
old  <>
new  <	mov dword [rbp + 52], 3>

996:
old  < stdlib_test$109:>
new  <>

997:
old  <	; PostCall 60>
new  < stdlib_test$76:>

998:
old  <>
new  <	; Call div 24 0>

999:
old  < stdlib_test$110:>
new  <	mov qword [rbp + 24], stdlib_test$77>

1000:
old  <	; GetReturnValue Â£temporary3815>
new  <	mov [rbp + 32], rbp>

1001:
old  <>
new  <	add rbp, 24>

1002:
old  < stdlib_test$111:>
new  <	jmp div>

1003:
old  <	; Parameter signedint Â£temporary3815 60>
new  <>

1004:
old  <	mov [rbp + 60], ebx>
new  < stdlib_test$77:>

1005:
old  <>
new  <	; PostCall 24>

1006:
old  < stdlib_test$112:>
new  <>

1007:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < stdlib_test$78:>

1008:
old  <>
new  <	; GetReturnValue Â£temporary4439 -> Â£temporary4440>

1009:
old  < stdlib_test$113:>
new  <>

1010:
old  <	; Parameter signed long int -3 88>
new  < stdlib_test$79:>

1011:
old  <	mov qword [rbp + 88], -3>
new  <	; AssignInitSize i Â£temporary4439 -> Â£temporary4440>

1012:
old  <>
new  <	mov rsi, rbp>

1013:
old  < stdlib_test$114:>
new  <	add rsi, 24>

1014:
old  <	; Call labs 64 0>
new  <	mov al, 8>

1015:
old  <	mov qword [rbp + 64], stdlib_test$115>
new  <>

1016:
old  <	mov [rbp + 72], rbp>
new  < stdlib_test$80:>

1017:
old  <	add rbp, 64>
new  <	; Assign i Â£temporary4439 -> Â£temporary4440>

1018:
old  <	jmp labs>
new  <	mov ah, [rbx]>

1019:
old  <>
new  <	mov [rsi], ah>

1020:
old  < stdlib_test$115:>
new  <	inc rbx>

1021:
old  <	; PostCall 64>
new  <	inc rsi>

1022:
old  <>
new  <	dec al>

1023:
old  < stdlib_test$116:>
new  <	cmp al, 0>

1024:
old  <	; GetReturnValue Â£temporary3816>
new  <	jne stdlib_test$80>

1026:
old  < stdlib_test$117:>
new  < stdlib_test$81:>

1027:
old  <	; Parameter signed long int Â£temporary3816 64>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1028:
old  <	mov [rbp + 64], rbx>
new  <>

1029:
old  <>
new  < stdlib_test$82:>

1030:
old  < stdlib_test$118:>
new  <	; Parameter pointer "div_t(10, 3) = (%i, %i),\n" 56>

1031:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov qword [rbp + 56], string_div_t28102C20329203D202825i2C2025i292C0A#>

1033:
old  < stdlib_test$119:>
new  < stdlib_test$83:>

1034:
old  <	; Parameter signed long int 3 96>
new  <	; Parameter signedint i.quot 64>

1035:
old  <	mov qword [rbp + 96], 3>
new  <	mov eax, [rbp + 24]>

1036:
old  <>
new  <	mov [rbp + 64], eax>

1037:
old  < stdlib_test$120:>
new  <>

1038:
old  <	; Call labs 72 0>
new  < stdlib_test$84:>

1039:
old  <	mov qword [rbp + 72], stdlib_test$121>
new  <	; Parameter signedint i.rem 68>

1040:
old  <	mov [rbp + 80], rbp>
new  <	mov eax, [rbp + 28]>

1041:
old  <	add rbp, 72>
new  <	mov [rbp + 68], eax>

1042:
old  <	jmp labs>
new  <>

1043:
old  <>
new  < stdlib_test$85:>

1044:
old  < stdlib_test$121:>
new  <	; Call printf 32 8>

1045:
old  <	; PostCall 72>
new  <	mov qword [rbp + 32], stdlib_test$86>

1046:
old  <>
new  <	mov [rbp + 40], rbp>

1047:
old  < stdlib_test$122:>
new  <	add rbp, 32>

1048:
old  <	; GetReturnValue Â£temporary3817>
new  <	mov rdi, rbp>

1049:
old  <>
new  <	add rdi, 8>

1050:
old  < stdlib_test$123:>
new  <	jmp printf>

1051:
old  <	; Parameter signed long int Â£temporary3817 72>
new  <>

1052:
old  <	mov [rbp + 72], rbx>
new  < stdlib_test$86:>

1053:
old  <>
new  <	; PostCall 32>

1054:
old  < stdlib_test$124:>
new  <>

1055:
old  <	; Call printf 24 24>
new  < stdlib_test$87:>

1056:
old  <	mov qword [rbp + 24], stdlib_test$125>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1057:
old  <	mov [rbp + 32], rbp>
new  <>

1058:
old  <	add rbp, 24>
new  < stdlib_test$88:>

1059:
old  <	mov rdi, rbp>
new  <	; ParameterInitSize struct i 56>

1060:
old  <	add rdi, 24>
new  <	mov rsi, rbp>

1061:
old  <	jmp printf>
new  <	add rsi, 24>

1062:
old  <>
new  <	mov rdi, rbp>

1063:
old  < stdlib_test$125:>
new  <	add rdi, 56>

1064:
old  <	; PostCall 24>
new  <	mov al, 8>

1066:
old  < stdlib_test$126:>
new  < stdlib_test$89:>

1067:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter struct i 56>

1068:
old  <>
new  <	mov ah, [rsi]>

1069:
old  < stdlib_test$127:>
new  <	mov [rdi], ah>

1070:
old  <	; Parameter signedint 10 48>
new  <	inc rsi>

1071:
old  <	mov dword [rbp + 48], 10>
new  <	inc rdi>

1072:
old  <>
new  <	dec al>

1073:
old  < stdlib_test$128:>
new  <	cmp al, 0>

1074:
old  <	; Parameter signedint 3 52>
new  <	jne stdlib_test$89>

1075:
old  <	mov dword [rbp + 52], 3>
new  <>

1076:
old  <>
new  < stdlib_test$90:>

1077:
old  < stdlib_test$129:>
new  <	; Call print_div 32 0>

1078:
old  <	; Call div 24 0>
new  <	mov qword [rbp + 32], stdlib_test$91>

1079:
old  <	mov qword [rbp + 24], stdlib_test$130>
new  <	mov [rbp + 40], rbp>

1080:
old  <	mov [rbp + 32], rbp>
new  <	add rbp, 32>

1081:
old  <	add rbp, 24>
new  <	jmp print_div>

1082:
old  <	jmp div>
new  <>

1083:
old  <>
new  < stdlib_test$91:>

1084:
old  < stdlib_test$130:>
new  <	; PostCall 32>

1085:
old  <	; PostCall 24>
new  <>

1086:
old  <>
new  < stdlib_test$92:>

1087:
old  < stdlib_test$131:>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1088:
old  <	; GetReturnValue Â£temporary3819 -> Â£temporary3820>
new  <>

1089:
old  <>
new  < stdlib_test$93:>

1090:
old  < stdlib_test$132:>
new  <	; Parameter signed long int 10 48>

1091:
old  <	; Assign i Â£temporary3819 -> Â£temporary3820>
new  <	mov qword [rbp + 48], 10>

1092:
old  <	mov rsi, rbp>
new  <>

1093:
old  <	add rsi, 24>
new  < stdlib_test$94:>

1094:
old  <	mov al, 8>
new  <	; Parameter signed long int 3 56>

1095:
old  <>
new  <	mov qword [rbp + 56], 3>

1096:
old  < label$1:>
new  <>

1097:
old  <	mov ah, [rbx]>
new  < stdlib_test$95:>

1098:
old  <	mov [rsi], ah>
new  <	; Call ldiv 24 0>

1099:
old  <	inc rbx>
new  <	mov qword [rbp + 24], stdlib_test$96>

1100:
old  <	inc rsi>
new  <	mov [rbp + 32], rbp>

1101:
old  <	dec al>
new  <	add rbp, 24>

1102:
old  <	cmp al, 0>
new  <	jmp ldiv>

1103:
old  <	jne label$1>
new  <>

1104:
old  <>
new  < stdlib_test$96:>

1105:
old  < stdlib_test$133:>
new  <	; PostCall 24>

1106:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1107:
old  <>
new  < stdlib_test$97:>

1108:
old  < stdlib_test$134:>
new  <	; GetReturnValue Â£temporary4445 -> Â£temporary4446>

1109:
old  <	; Parameter pointer "div_t(10, 3) = (%i, %i),\n" 56>
new  <>

1110:
old  <	mov qword [rbp + 56], string_div_t28102C20329203D202825i2C2025i292C0A#>
new  < stdlib_test$98:>

1111:
old  <>
new  <	; AssignInitSize li Â£temporary4445 -> Â£temporary4446>

1112:
old  < stdlib_test$135:>
new  <	mov rsi, rbp>

1113:
old  <	; Parameter signedint i.quot 64>
new  <	add rsi, 24>

1114:
old  <	mov eax, [rbp + 24]>
new  <	mov al, 16>

1115:
old  <	mov [rbp + 64], eax>
new  <>

1116:
old  <>
new  < stdlib_test$99:>

1117:
old  < stdlib_test$136:>
new  <	; Assign li Â£temporary4445 -> Â£temporary4446>

1118:
old  <	; Parameter signedint i.rem 68>
new  <	mov ah, [rbx]>

1119:
old  <	mov eax, [rbp + 28]>
new  <	mov [rsi], ah>

1120:
old  <	mov [rbp + 68], eax>
new  <	inc rbx>

1121:
old  <>
new  <	inc rsi>

1122:
old  < stdlib_test$137:>
new  <	dec al>

1123:
old  <	; Call printf 32 8>
new  <	cmp al, 0>

1124:
old  <	mov qword [rbp + 32], stdlib_test$138>
new  <	jne stdlib_test$99>

1125:
old  <	mov [rbp + 40], rbp>
new  <>

1126:
old  <	add rbp, 32>
new  < stdlib_test$100:>

1127:
old  <	mov rdi, rbp>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1128:
old  <	add rdi, 8>
new  <>

1129:
old  <	jmp printf>
new  < stdlib_test$101:>

1130:
old  <>
new  <	; Parameter pointer "ldiv_t(10, 3) = (%li, %li)\n" 64>

1131:
old  < stdlib_test$138:>
new  <	mov qword [rbp + 64], string_ldiv_t28102C20329203D202825li2C2025li290A#>

1132:
old  <	; PostCall 32>
new  <>

1133:
old  <>
new  < stdlib_test$102:>

1134:
old  < stdlib_test$139:>
new  <	; Parameter signed long int li.quot 72>

1135:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov rax, [rbp + 24]>

1136:
old  <>
new  <	mov [rbp + 72], rax>

1137:
old  < stdlib_test$140:>
new  <>

1138:
old  <	; Parameter struct i 56>
new  < stdlib_test$103:>

1139:
old  <	mov rsi, rbp>
new  <	; Parameter signed long int li.rem 80>

1140:
old  <	add rsi, 24>
new  <	mov rax, [rbp + 32]>

1141:
old  <	mov rdi, rbp>
new  <	mov [rbp + 80], rax>

1142:
old  <	add rdi, 56>
new  <>

1143:
old  <	mov al, 8>
new  < stdlib_test$104:>

1144:
old  <>
new  <	; Call printf 40 16>

1145:
old  < label$2:>
new  <	mov qword [rbp + 40], stdlib_test$105>

1146:
old  <	mov ah, [rsi]>
new  <	mov [rbp + 48], rbp>

1147:
old  <	mov [rdi], ah>
new  <	add rbp, 40>

1148:
old  <	inc rsi>
new  <	mov rdi, rbp>

1149:
old  <	inc rdi>
new  <	add rdi, 16>

1150:
old  <	dec al>
new  <	jmp printf>

1151:
old  <	cmp al, 0>
new  <>

1152:
old  <	jne label$2>
new  < stdlib_test$105:>

1153:
old  <>
new  <	; PostCall 40>

1154:
old  < stdlib_test$141:>
new  <>

1155:
old  <	; Call print_div 32 0>
new  < stdlib_test$106:>

1156:
old  <	mov qword [rbp + 32], stdlib_test$142>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1157:
old  <	mov [rbp + 40], rbp>
new  <>

1158:
old  <	add rbp, 32>
new  < stdlib_test$107:>

1159:
old  <	jmp print_div>
new  <	; ParameterInitSize struct li 64>

1160:
old  <>
new  <	mov rsi, rbp>

1161:
old  < stdlib_test$142:>
new  <	add rsi, 24>

1162:
old  <	; PostCall 32>
new  <	mov rdi, rbp>

1163:
old  <>
new  <	add rdi, 64>

1164:
old  < stdlib_test$143:>
new  <	mov al, 16>

1165:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1166:
old  <>
new  < stdlib_test$108:>

1167:
old  < stdlib_test$144:>
new  <	; Parameter struct li 64>

1168:
old  <	; Parameter signed long int 10 48>
new  <	mov ah, [rsi]>

1169:
old  <	mov qword [rbp + 48], 10>
new  <	mov [rdi], ah>

1170:
old  <>
new  <	inc rsi>

1171:
old  < stdlib_test$145:>
new  <	inc rdi>

1172:
old  <	; Parameter signed long int 3 56>
new  <	dec al>

1173:
old  <	mov qword [rbp + 56], 3>
new  <	cmp al, 0>

1174:
old  <>
new  <	jne stdlib_test$108>

1175:
old  < stdlib_test$146:>
new  <>

1176:
old  <	; Call ldiv 24 0>
new  < stdlib_test$109:>

1177:
old  <	mov qword [rbp + 24], stdlib_test$147>
new  <	; Call print_ldiv 40 0>

1178:
old  <	mov [rbp + 32], rbp>
new  <	mov qword [rbp + 40], stdlib_test$110>

1179:
old  <	add rbp, 24>
new  <	mov [rbp + 48], rbp>

1180:
old  <	jmp ldiv>
new  <	add rbp, 40>

1181:
old  <>
new  <	jmp print_ldiv>

1182:
old  < stdlib_test$147:>
new  <>

1183:
old  <	; PostCall 24>
new  < stdlib_test$110:>

1184:
old  <>
new  <	; PostCall 40>

1185:
old  < stdlib_test$148:>
new  <>

1186:
old  <	; GetReturnValue Â£temporary3825 -> Â£temporary3826>
new  < stdlib_test$111:>

1187:
old  <>
new  <	; Assign list[0] 3>

1188:
old  < stdlib_test$149:>
new  <	mov dword [rbp + 24], 3>

1189:
old  <	; Assign li Â£temporary3825 -> Â£temporary3826>
new  <>

1190:
old  <	mov rsi, rbp>
new  < stdlib_test$112:>

1191:
old  <	add rsi, 24>
new  <	; Assign list[1] 4>

1192:
old  <	mov al, 16>
new  <	mov dword [rbp + 28], 4>

1194:
old  < label$3:>
new  < stdlib_test$113:>

1195:
old  <	mov ah, [rbx]>
new  <	; Assign list[2] 2>

1196:
old  <	mov [rsi], ah>
new  <	mov dword [rbp + 32], 2>

1197:
old  <	inc rbx>
new  <>

1198:
old  <	inc rsi>
new  < stdlib_test$114:>

1199:
old  <	dec al>
new  <	; Assign list[3] 1>

1200:
old  <	cmp al, 0>
new  <	mov dword [rbp + 36], 1>

1201:
old  <	jne label$3>
new  <>

1202:
old  <>
new  < stdlib_test$115:>

1203:
old  < stdlib_test$150:>
new  <	; Assign size 4>

1204:
old  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov dword [rbp + 40], 4>

1206:
old  < stdlib_test$151:>
new  < stdlib_test$116:>

1207:
old  <	; Parameter pointer "ldiv_t(10, 3) = (%li, %li)\n" 64>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1208:
old  <	mov qword [rbp + 64], string_ldiv_t28102C20329203D202825li2C2025li290A#>
new  <>

1209:
old  <>
new  < stdlib_test$117:>

1210:
old  < stdlib_test$152:>
new  <	; Parameter pointer "\nA List 1: " 72>

1211:
old  <	; Parameter signed long int li.quot 72>
new  <	mov qword [rbp + 72], string_0AA20List2013A20#>

1212:
old  <	mov rax, [rbp + 24]>
new  <>

1213:
old  <	mov [rbp + 72], rax>
new  < stdlib_test$118:>

1214:
old  <>
new  <	; Call printf 48 0>

1215:
old  < stdlib_test$153:>
new  <	mov qword [rbp + 48], stdlib_test$119>

1216:
old  <	; Parameter signed long int li.rem 80>
new  <	mov [rbp + 56], rbp>

1217:
old  <	mov rax, [rbp + 32]>
new  <	add rbp, 48>

1218:
old  <	mov [rbp + 80], rax>
new  <	mov rdi, rbp>

1219:
old  <>
new  <	jmp printf>

1220:
old  < stdlib_test$154:>
new  <>

1221:
old  <	; Call printf 40 16>
new  < stdlib_test$119:>

1222:
old  <	mov qword [rbp + 40], stdlib_test$155>
new  <	; PostCall 48>

1223:
old  <	mov [rbp + 48], rbp>
new  <>

1224:
old  <	add rbp, 40>
new  < stdlib_test$120:>

1225:
old  <	mov rdi, rbp>
new  <	; Assign index 0>

1226:
old  <	add rdi, 16>
new  <	mov dword [rbp + 44], 0>

1227:
old  <	jmp printf>
new  <>

1228:
old  <>
new  < stdlib_test$121:>

1229:
old  < stdlib_test$155:>
new  <	; SignedGreaterThanEqual 133 index size>

1230:
old  <	; PostCall 40>
new  <	mov eax, [rbp + 40]>

1231:
old  <>
new  <	cmp [rbp + 44], eax>

1232:
old  < stdlib_test$156:>
new  <	jge stdlib_test$133>

1233:
old  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1234:
old  <>
new  < stdlib_test$122:>

1235:
old  < stdlib_test$157:>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1236:
old  <	; Parameter struct li 64>
new  <>

1237:
old  <	mov rsi, rbp>
new  < stdlib_test$123:>

1238:
old  <	add rsi, 24>
new  <	; Parameter pointer "%i " 72>

1239:
old  <	mov rdi, rbp>
new  <	mov qword [rbp + 72], string_25i20#>

1240:
old  <	add rdi, 64>
new  <>

1241:
old  <	mov al, 16>
new  < stdlib_test$124:>

1242:
old  <>
new  <	; IntegralToIntegral Â£temporary4459 index>

1243:
old  < label$4:>
new  <	mov eax, [rbp + 44]>

1244:
old  <	mov ah, [rsi]>
new  <	mov rbx, 4294967295>

1245:
old  <	mov [rdi], ah>
new  <	and rax, rbx>

1246:
old  <	inc rsi>
new  <>

1247:
old  <	inc rdi>
new  < stdlib_test$125:>

1248:
old  <	dec al>
new  <	; UnsignedMultiply Â£temporary4461 Â£temporary4459 4>

1249:
old  <	cmp al, 0>
new  <	xor rdx, rdx>

1250:
old  <	jne label$4>
new  <	mul qword [int8$4#]>

1252:
old  < stdlib_test$158:>
new  < stdlib_test$126:>

1253:
old  <	; Call print_ldiv 40 0>
new  <	; BinaryAdd Â£temporary4460 list Â£temporary4461>

1254:
old  <	mov qword [rbp + 40], stdlib_test$159>
new  <	mov rsi, rbp>

1255:
old  <	mov [rbp + 48], rbp>
new  <	add rsi, 24>

1256:
old  <	add rbp, 40>
new  <	add rsi, rax>

1257:
old  <	jmp print_ldiv>
new  <>

1258:
old  <>
new  < stdlib_test$127:>

1259:
old  < stdlib_test$159:>
new  <	; Dereference Â£temporary4462 -> Â£temporary4460 Â£temporary4460 0>

1260:
old  <	; PostCall 40>
new  <>

1261:
old  <>
new  < stdlib_test$128:>

1262:
old  < stdlib_test$160:>
new  <	; Parameter signedint Â£temporary4462 -> Â£temporary4460 80>

1263:
old  <	; Assign list[0] 3>
new  <	mov eax, [rsi]>

1264:
old  <	mov dword [rbp + 24], 3>
new  <	mov [rbp + 80], eax>

1266:
old  < stdlib_test$161:>
new  < stdlib_test$129:>

1267:
old  <	; Assign list[1] 4>
new  <	; Call printf 48 4>

1268:
old  <	mov dword [rbp + 28], 4>
new  <	mov qword [rbp + 48], stdlib_test$130>

1269:
old  <>
new  <	mov [rbp + 56], rbp>

1270:
old  < stdlib_test$162:>
new  <	add rbp, 48>

1271:
old  <	; Assign list[2] 2>
new  <	mov rdi, rbp>

1272:
old  <	mov dword [rbp + 32], 2>
new  <	add rdi, 4>

1273:
old  <>
new  <	jmp printf>

1274:
old  < stdlib_test$163:>
new  <>

1275:
old  <	; Assign list[3] 1>
new  < stdlib_test$130:>

1276:
old  <	mov dword [rbp + 36], 1>
new  <	; PostCall 48>

1278:
old  < stdlib_test$164:>
new  < stdlib_test$131:>

1279:
old  <	; Assign size 4>
new  <	; BinaryAdd index index 1>

1280:
old  <	mov dword [rbp + 40], 4>
new  <	inc dword [rbp + 44]>

1282:
old  < stdlib_test$165:>
new  < stdlib_test$132:>

1283:
old  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Goto 121>

1284:
old  <>
new  <	jmp stdlib_test$121>

1285:
old  < stdlib_test$166:>
new  <>

1286:
old  <	; Parameter pointer "\nA List 1: " 72>
new  < stdlib_test$133:>

1287:
old  <	mov qword [rbp + 72], string_0AA20List2013A20#>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1289:
old  < stdlib_test$167:>
new  < stdlib_test$134:>

1290:
old  <	; Call printf 48 0>
new  <	; Parameter pointer "\nB List 2: " 72>

1291:
old  <	mov qword [rbp + 48], stdlib_test$168>
new  <	mov qword [rbp + 72], string_0AB20List2023A20#>

1292:
old  <	mov [rbp + 56], rbp>
new  <>

1293:
old  <	add rbp, 48>
new  < stdlib_test$135:>

1294:
old  <	mov rdi, rbp>
new  <	; Call printf 48 0>

1295:
old  <	jmp printf>
new  <	mov qword [rbp + 48], stdlib_test$136>

1296:
old  <>
new  <	mov [rbp + 56], rbp>

1297:
old  < stdlib_test$168:>
new  <	add rbp, 48>

1298:
old  <	; PostCall 48>
new  <	mov rdi, rbp>

1299:
old  <>
new  <	jmp printf>

1300:
old  < stdlib_test$169:>
new  <>

1301:
old  <	; Assign index 0>
new  < stdlib_test$136:>

1302:
old  <	mov dword [rbp + 44], 0>
new  <	; PostCall 48>

1304:
old  < stdlib_test$170:>
new  < stdlib_test$137:>

1305:
old  <	; SignedGreaterThanEqual 182 index size>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1306:
old  <	mov eax, [rbp + 40]>
new  <>

1307:
old  <	cmp [rbp + 44], eax>
new  < stdlib_test$138:>

1308:
old  <	jge stdlib_test$182>
new  <	; Parameter pointer list 72>

1309:
old  <>
new  <	mov [rbp + 72], rbp>

1310:
old  < stdlib_test$171:>
new  <	add qword [rbp + 72], 24>

1311:
old  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1312:
old  <>
new  < stdlib_test$139:>

1313:
old  < stdlib_test$172:>
new  <	; Parameter signedint size 80>

1314:
old  <	; Parameter pointer "%i " 72>
new  <	mov eax, [rbp + 40]>

1315:
old  <	mov qword [rbp + 72], string_25i20#>
new  <	mov [rbp + 80], eax>

1317:
old  < stdlib_test$173:>
new  < stdlib_test$140:>

1318:
old  <	; IntegralToIntegral Â£temporary3839 index>
new  <	; Parameter signedint 4 84>

1319:
old  <	mov eax, [rbp + 44]>
new  <	mov dword [rbp + 84], 4>

1320:
old  <	mov rbx, 4294967295>
new  <>

1321:
old  <	and rax, rbx>
new  < stdlib_test$141:>

1322:
old  <>
new  <	; Parameter pointer compare 88>

1323:
old  < stdlib_test$174:>
new  <	mov qword [rbp + 88], compare>

1324:
old  <	; UnsignedMultiply Â£temporary3841 Â£temporary3839 4>
new  <>

1325:
old  <	xor rdx, rdx>
new  < stdlib_test$142:>

1326:
old  <	mul qword [int8$4#]>
new  <	; Call qsort 48 0>

1327:
old  <>
new  <	mov qword [rbp + 48], stdlib_test$143>

1328:
old  < stdlib_test$175:>
new  <	mov [rbp + 56], rbp>

1329:
old  <	; BinaryAdd Â£temporary3840 list Â£temporary3841>
new  <	add rbp, 48>

1330:
old  <	mov rsi, rbp>
new  <	mov rdi, rbp>

1331:
old  <	add rsi, 24>
new  <	jmp qsort>

1332:
old  <	add rsi, rax>
new  <>

1333:
old  <>
new  < stdlib_test$143:>

1334:
old  < stdlib_test$176:>
new  <	; PostCall 48>

1335:
old  <	; Dereference Â£temporary3842 -> Â£temporary3840 Â£temporary3840 0>
new  <>

1336:
old  <>
new  < stdlib_test$144:>

1337:
old  < stdlib_test$177:>
new  <	; Assign index 0>

1338:
old  <	; Parameter signedint Â£temporary3842 -> Â£temporary3840 80>
new  <	mov dword [rbp + 44], 0>

1339:
old  <	mov eax, [rsi]>
new  <>

1340:
old  <	mov [rbp + 80], eax>
new  < stdlib_test$145:>

1341:
old  <>
new  <	; SignedGreaterThanEqual 157 index size>

1342:
old  < stdlib_test$178:>
new  <	mov eax, [rbp + 40]>

1343:
old  <	; Call printf 48 4>
new  <	cmp [rbp + 44], eax>

1344:
old  <	mov qword [rbp + 48], stdlib_test$179>
new  <	jge stdlib_test$157>

1345:
old  <	mov [rbp + 56], rbp>
new  <>

1346:
old  <	add rbp, 48>
new  < stdlib_test$146:>

1347:
old  <	mov rdi, rbp>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1348:
old  <	add rdi, 4>
new  <>

1349:
old  <	jmp printf>
new  < stdlib_test$147:>

1350:
old  <>
new  <	; Parameter pointer "%i " 72>

1351:
old  < stdlib_test$179:>
new  <	mov qword [rbp + 72], string_25i20#>

1352:
old  <	; PostCall 48>
new  <>

1353:
old  <>
new  < stdlib_test$148:>

1354:
old  < stdlib_test$180:>
new  <	; IntegralToIntegral Â£temporary4469 index>

1355:
old  <	; BinaryAdd index index 1>
new  <	mov eax, [rbp + 44]>

1356:
old  <	inc dword [rbp + 44]>
new  <	mov rbx, 4294967295>

1357:
old  <>
new  <	and rax, rbx>

1358:
old  < stdlib_test$181:>
new  <>

1359:
old  <	; Goto 170>
new  < stdlib_test$149:>

1360:
old  <	jmp stdlib_test$170>
new  <	; UnsignedMultiply Â£temporary4471 Â£temporary4469 4>

1361:
old  <>
new  <	xor rdx, rdx>

1362:
old  < stdlib_test$182:>
new  <	mul qword [int8$4#]>

1363:
old  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1364:
old  <>
new  < stdlib_test$150:>

1365:
old  < stdlib_test$183:>
new  <	; BinaryAdd Â£temporary4470 list Â£temporary4471>

1366:
old  <	; Parameter pointer "\nB List 2: " 72>
new  <	mov rsi, rbp>

1367:
old  <	mov qword [rbp + 72], string_0AB20List2023A20#>
new  <	add rsi, 24>

1368:
old  <>
new  <	add rsi, rax>

1369:
old  < stdlib_test$184:>
new  <>

1370:
old  <	; Call printf 48 0>
new  < stdlib_test$151:>

1371:
old  <	mov qword [rbp + 48], stdlib_test$185>
new  <	; Dereference Â£temporary4472 -> Â£temporary4470 Â£temporary4470 0>

1372:
old  <	mov [rbp + 56], rbp>
new  <>

1373:
old  <	add rbp, 48>
new  < stdlib_test$152:>

1374:
old  <	mov rdi, rbp>
new  <	; Parameter signedint Â£temporary4472 -> Â£temporary4470 80>

1375:
old  <	jmp printf>
new  <	mov eax, [rsi]>

1376:
old  <>
new  <	mov [rbp + 80], eax>

1377:
old  < stdlib_test$185:>
new  <>

1378:
old  <	; PostCall 48>
new  < stdlib_test$153:>

1379:
old  <>
new  <	; Call printf 48 4>

1380:
old  < stdlib_test$186:>
new  <	mov qword [rbp + 48], stdlib_test$154>

1381:
old  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov [rbp + 56], rbp>

1382:
old  <>
new  <	add rbp, 48>

1383:
old  < stdlib_test$187:>
new  <	mov rdi, rbp>

1384:
old  <	; Parameter pointer list 72>
new  <	add rdi, 4>

1385:
old  <	mov [rbp + 72], rbp>
new  <	jmp printf>

1386:
old  <	add qword [rbp + 72], 24>
new  <>

1387:
old  <>
new  < stdlib_test$154:>

1388:
old  < stdlib_test$188:>
new  <	; PostCall 48>

1389:
old  <	; Parameter signedint size 80>
new  <>

1390:
old  <	mov eax, [rbp + 40]>
new  < stdlib_test$155:>

1391:
old  <	mov [rbp + 80], eax>
new  <	; BinaryAdd index index 1>

1392:
old  <>
new  <	inc dword [rbp + 44]>

1393:
old  < stdlib_test$189:>
new  <>

1394:
old  <	; Parameter signedint 4 84>
new  < stdlib_test$156:>

1395:
old  <	mov dword [rbp + 84], 4>
new  <	; Goto 145>

1396:
old  <>
new  <	jmp stdlib_test$145>

1397:
old  < stdlib_test$190:>
new  <>

1398:
old  <	; Parameter pointer reverse_compare 88>
new  < stdlib_test$157:>

1399:
old  <	mov qword [rbp + 88], reverse_compare>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1401:
old  < stdlib_test$191:>
new  < stdlib_test$158:>

1402:
old  <	; Call qsort 48 0>
new  <	; Parameter pointer "\nC List 3: " 72>

1403:
old  <	mov qword [rbp + 48], stdlib_test$192>
new  <	mov qword [rbp + 72], string_0AC20List2033A20#>

1404:
old  <	mov [rbp + 56], rbp>
new  <>

1405:
old  <	add rbp, 48>
new  < stdlib_test$159:>

1406:
old  <	mov rdi, rbp>
new  <	; Call printf 48 0>

1407:
old  <	jmp qsort>
new  <	mov qword [rbp + 48], stdlib_test$160>

1408:
old  <>
new  <	mov [rbp + 56], rbp>

1409:
old  < stdlib_test$192:>
new  <	add rbp, 48>

1410:
old  <	; PostCall 48>
new  <	mov rdi, rbp>

1411:
old  <>
new  <	jmp printf>

1412:
old  < stdlib_test$193:>
new  <>

1413:
old  <	; Assign index 0>
new  < stdlib_test$160:>

1414:
old  <	mov dword [rbp + 44], 0>
new  <	; PostCall 48>

1416:
old  < stdlib_test$194:>
new  < stdlib_test$161:>

1417:
old  <	; SignedGreaterThanEqual 206 index size>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1418:
old  <	mov eax, [rbp + 40]>
new  <>

1419:
old  <	cmp [rbp + 44], eax>
new  < stdlib_test$162:>

1420:
old  <	jge stdlib_test$206>
new  <	; Parameter pointer list 72>

1421:
old  <>
new  <	mov [rbp + 72], rbp>

1422:
old  < stdlib_test$195:>
new  <	add qword [rbp + 72], 24>

1423:
old  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1424:
old  <>
new  < stdlib_test$163:>

1425:
old  < stdlib_test$196:>
new  <	; Parameter signedint size 80>

1426:
old  <	; Parameter pointer "%i " 72>
new  <	mov eax, [rbp + 40]>

1427:
old  <	mov qword [rbp + 72], string_25i20#>
new  <	mov [rbp + 80], eax>

1429:
old  < stdlib_test$197:>
new  < stdlib_test$164:>

1430:
old  <	; IntegralToIntegral Â£temporary3849 index>
new  <	; Parameter signedint 4 84>

1431:
old  <	mov eax, [rbp + 44]>
new  <	mov dword [rbp + 84], 4>

1432:
old  <	mov rbx, 4294967295>
new  <>

1433:
old  <	and rax, rbx>
new  < stdlib_test$165:>

1434:
old  <>
new  <	; Parameter pointer reverse_compare 88>

1435:
old  < stdlib_test$198:>
new  <	mov qword [rbp + 88], reverse_compare>

1436:
old  <	; UnsignedMultiply Â£temporary3851 Â£temporary3849 4>
new  <>

1437:
old  <	xor rdx, rdx>
new  < stdlib_test$166:>

1438:
old  <	mul qword [int8$4#]>
new  <	; Call qsort 48 0>

1439:
old  <>
new  <	mov qword [rbp + 48], stdlib_test$167>

1440:
old  < stdlib_test$199:>
new  <	mov [rbp + 56], rbp>

1441:
old  <	; BinaryAdd Â£temporary3850 list Â£temporary3851>
new  <	add rbp, 48>

1442:
old  <	mov rsi, rbp>
new  <	mov rdi, rbp>

1443:
old  <	add rsi, 24>
new  <	jmp qsort>

1444:
old  <	add rsi, rax>
new  <>

1445:
old  <>
new  < stdlib_test$167:>

1446:
old  < stdlib_test$200:>
new  <	; PostCall 48>

1447:
old  <	; Dereference Â£temporary3852 -> Â£temporary3850 Â£temporary3850 0>
new  <>

1448:
old  <>
new  < stdlib_test$168:>

1449:
old  < stdlib_test$201:>
new  <	; Assign index 0>

1450:
old  <	; Parameter signedint Â£temporary3852 -> Â£temporary3850 80>
new  <	mov dword [rbp + 44], 0>

1451:
old  <	mov eax, [rsi]>
new  <>

1452:
old  <	mov [rbp + 80], eax>
new  < stdlib_test$169:>

1453:
old  <>
new  <	; SignedGreaterThanEqual 181 index size>

1454:
old  < stdlib_test$202:>
new  <	mov eax, [rbp + 40]>

1455:
old  <	; Call printf 48 4>
new  <	cmp [rbp + 44], eax>

1456:
old  <	mov qword [rbp + 48], stdlib_test$203>
new  <	jge stdlib_test$181>

1457:
old  <	mov [rbp + 56], rbp>
new  <>

1458:
old  <	add rbp, 48>
new  < stdlib_test$170:>

1459:
old  <	mov rdi, rbp>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1460:
old  <	add rdi, 4>
new  <>

1461:
old  <	jmp printf>
new  < stdlib_test$171:>

1462:
old  <>
new  <	; Parameter pointer "%i " 72>

1463:
old  < stdlib_test$203:>
new  <	mov qword [rbp + 72], string_25i20#>

1464:
old  <	; PostCall 48>
new  <>

1465:
old  <>
new  < stdlib_test$172:>

1466:
old  < stdlib_test$204:>
new  <	; IntegralToIntegral Â£temporary4479 index>

1467:
old  <	; BinaryAdd index index 1>
new  <	mov eax, [rbp + 44]>

1468:
old  <	inc dword [rbp + 44]>
new  <	mov rbx, 4294967295>

1469:
old  <>
new  <	and rax, rbx>

1470:
old  < stdlib_test$205:>
new  <>

1471:
old  <	; Goto 194>
new  < stdlib_test$173:>

1472:
old  <	jmp stdlib_test$194>
new  <	; UnsignedMultiply Â£temporary4481 Â£temporary4479 4>

1473:
old  <>
new  <	xor rdx, rdx>

1474:
old  < stdlib_test$206:>
new  <	mul qword [int8$4#]>

1475:
old  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1476:
old  <>
new  < stdlib_test$174:>

1477:
old  < stdlib_test$207:>
new  <	; BinaryAdd Â£temporary4480 list Â£temporary4481>

1478:
old  <	; Parameter pointer "\nC List 3: " 72>
new  <	mov rsi, rbp>

1479:
old  <	mov qword [rbp + 72], string_0AC20List2033A20#>
new  <	add rsi, 24>

1480:
old  <>
new  <	add rsi, rax>

1481:
old  < stdlib_test$208:>
new  <>

1482:
old  <	; Call printf 48 0>
new  < stdlib_test$175:>

1483:
old  <	mov qword [rbp + 48], stdlib_test$209>
new  <	; Dereference Â£temporary4482 -> Â£temporary4480 Â£temporary4480 0>

1484:
old  <	mov [rbp + 56], rbp>
new  <>

1485:
old  <	add rbp, 48>
new  < stdlib_test$176:>

1486:
old  <	mov rdi, rbp>
new  <	; Parameter signedint Â£temporary4482 -> Â£temporary4480 80>

1487:
old  <	jmp printf>
new  <	mov eax, [rsi]>

1488:
old  <>
new  <	mov [rbp + 80], eax>

1489:
old  < stdlib_test$209:>
new  <>

1490:
old  <	; PostCall 48>
new  < stdlib_test$177:>

1491:
old  <>
new  <	; Call printf 48 4>

1492:
old  < stdlib_test$210:>
new  <	mov qword [rbp + 48], stdlib_test$178>

1493:
old  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov [rbp + 56], rbp>

1494:
old  <>
new  <	add rbp, 48>

1495:
old  < stdlib_test$211:>
new  <	mov rdi, rbp>

1496:
old  <	; Parameter pointer list 72>
new  <	add rdi, 4>

1497:
old  <	mov [rbp + 72], rbp>
new  <	jmp printf>

1498:
old  <	add qword [rbp + 72], 24>
new  <>

1499:
old  <>
new  < stdlib_test$178:>

1500:
old  < stdlib_test$212:>
new  <	; PostCall 48>

1501:
old  <	; Parameter signedint size 80>
new  <>

1502:
old  <	mov eax, [rbp + 40]>
new  < stdlib_test$179:>

1503:
old  <	mov [rbp + 80], eax>
new  <	; BinaryAdd index index 1>

1504:
old  <>
new  <	inc dword [rbp + 44]>

1505:
old  < stdlib_test$213:>
new  <>

1506:
old  <	; Parameter signedint 4 84>
new  < stdlib_test$180:>

1507:
old  <	mov dword [rbp + 84], 4>
new  <	; Goto 169>

1508:
old  <>
new  <	jmp stdlib_test$169>

1509:
old  < stdlib_test$214:>
new  <>

1510:
old  <	; Parameter pointer compare 88>
new  < stdlib_test$181:>

1511:
old  <	mov qword [rbp + 88], compare>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1513:
old  < stdlib_test$215:>
new  < stdlib_test$182:>

1514:
old  <	; Call qsort 48 0>
new  <	; Parameter pointer "\n\nSearch:\n" 72>

1515:
old  <	mov qword [rbp + 48], stdlib_test$216>
new  <	mov qword [rbp + 72], string_0A0ASearch3A0A#>

1516:
old  <	mov [rbp + 56], rbp>
new  <>

1517:
old  <	add rbp, 48>
new  < stdlib_test$183:>

1518:
old  <	mov rdi, rbp>
new  <	; Call printf 48 0>

1519:
old  <	jmp qsort>
new  <	mov qword [rbp + 48], stdlib_test$184>

1520:
old  <>
new  <	mov [rbp + 56], rbp>

1521:
old  < stdlib_test$216:>
new  <	add rbp, 48>

1522:
old  <	; PostCall 48>
new  <	mov rdi, rbp>

1523:
old  <>
new  <	jmp printf>

1524:
old  < stdlib_test$217:>
new  <>

1525:
old  <	; Assign index 0>
new  < stdlib_test$184:>

1526:
old  <	mov dword [rbp + 44], 0>
new  <	; PostCall 48>

1528:
old  < stdlib_test$218:>
new  < stdlib_test$185:>

1529:
old  <	; SignedGreaterThanEqual 230 index size>
new  <	; Assign key 0>

1530:
old  <	mov eax, [rbp + 40]>
new  <	mov dword [rbp + 44], 0>

1531:
old  <	cmp [rbp + 44], eax>
new  <>

1532:
old  <	jge stdlib_test$230>
new  < stdlib_test$186:>

1533:
old  <>
new  <	; SignedGreaterThanEqual 215 key 6>

1534:
old  < stdlib_test$219:>
new  <	cmp dword [rbp + 44], 6>

1535:
old  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	jge stdlib_test$215>

1537:
old  < stdlib_test$220:>
new  < stdlib_test$187:>

1538:
old  <	; Parameter pointer "%i " 72>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1539:
old  <	mov qword [rbp + 72], string_25i20#>
new  <>

1540:
old  <>
new  < stdlib_test$188:>

1541:
old  < stdlib_test$221:>
new  <	; Address Â£temporary4487 key>

1542:
old  <	; IntegralToIntegral Â£temporary3859 index>
new  <	mov rsi, rbp>

1543:
old  <	mov eax, [rbp + 44]>
new  <	add rsi, 44>

1544:
old  <	mov rbx, 4294967295>
new  <>

1545:
old  <	and rax, rbx>
new  < stdlib_test$189:>

1546:
old  <>
new  <	; Parameter pointer Â£temporary4487 72>

1547:
old  < stdlib_test$222:>
new  <	mov [rbp + 72], rsi>

1548:
old  <	; UnsignedMultiply Â£temporary3861 Â£temporary3859 4>
new  <>

1549:
old  <	xor rdx, rdx>
new  < stdlib_test$190:>

1550:
old  <	mul qword [int8$4#]>
new  <	; Parameter pointer list 80>

1551:
old  <>
new  <	mov [rbp + 80], rbp>

1552:
old  < stdlib_test$223:>
new  <	add qword [rbp + 80], 24>

1553:
old  <	; BinaryAdd Â£temporary3860 list Â£temporary3861>
new  <>

1554:
old  <	mov rsi, rbp>
new  < stdlib_test$191:>

1555:
old  <	add rsi, 24>
new  <	; Parameter signedint size 88>

1556:
old  <	add rsi, rax>
new  <	mov eax, [rbp + 40]>

1557:
old  <>
new  <	mov [rbp + 88], eax>

1558:
old  < stdlib_test$224:>
new  <>

1559:
old  <	; Dereference Â£temporary3862 -> Â£temporary3860 Â£temporary3860 0>
new  < stdlib_test$192:>

1560:
old  <>
new  <	; Parameter signedint 4 92>

1561:
old  < stdlib_test$225:>
new  <	mov dword [rbp + 92], 4>

1562:
old  <	; Parameter signedint Â£temporary3862 -> Â£temporary3860 80>
new  <>

1563:
old  <	mov eax, [rsi]>
new  < stdlib_test$193:>

1564:
old  <	mov [rbp + 80], eax>
new  <	; Parameter pointer compare 96>

1565:
old  <>
new  <	mov qword [rbp + 96], compare>

1566:
old  < stdlib_test$226:>
new  <>

1567:
old  <	; Call printf 48 4>
new  < stdlib_test$194:>

1568:
old  <	mov qword [rbp + 48], stdlib_test$227>
new  <	; Call bsearch 48 0>

1569:
old  <	mov [rbp + 56], rbp>
new  <	mov qword [rbp + 48], stdlib_test$195>

1570:
old  <	add rbp, 48>
new  <	mov [rbp + 56], rbp>

1571:
old  <	mov rdi, rbp>
new  <	add rbp, 48>

1572:
old  <	add rdi, 4>
new  <	jmp bsearch>

1573:
old  <	jmp printf>
new  <>

1574:
old  <>
new  < stdlib_test$195:>

1575:
old  < stdlib_test$227:>
new  <	; PostCall 48>

1576:
old  <	; PostCall 48>
new  <>

1577:
old  <>
new  < stdlib_test$196:>

1578:
old  < stdlib_test$228:>
new  <	; GetReturnValue Â£temporary4489>

1579:
old  <	; BinaryAdd index index 1>
new  <>

1580:
old  <	inc dword [rbp + 44]>
new  < stdlib_test$197:>

1581:
old  <>
new  <	; IntegralToIntegral Â£temporary4490 Â£temporary4489>

1582:
old  < stdlib_test$229:>
new  <>

1583:
old  <	; Goto 218>
new  < stdlib_test$198:>

1584:
old  <	jmp stdlib_test$218>
new  <	; Assign p Â£temporary4490>

1585:
old  <>
new  <	mov [rbp + 48], rbx>

1586:
old  < stdlib_test$230:>
new  <>

1587:
old  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < stdlib_test$199:>

1588:
old  <>
new  <	; Equal 205 p 0>

1589:
old  < stdlib_test$231:>
new  <	cmp qword [rbp + 48], 0>

1590:
old  <	; Parameter pointer "\n\nSearch:\n" 72>
new  <	je stdlib_test$205>

1591:
old  <	mov qword [rbp + 72], string_0A0ASearch3A0A#>
new  <>

1592:
old  <>
new  < stdlib_test$200:>

1593:
old  < stdlib_test$232:>
new  <	; BinarySubtract Â£temporary4493 p list>

1594:
old  <	; Call printf 48 0>
new  <	mov rax, [rbp + 48]>

1595:
old  <	mov qword [rbp + 48], stdlib_test$233>
new  <	mov rbx, rbp>

1596:
old  <	mov [rbp + 56], rbp>
new  <	add rbx, 24>

1597:
old  <	add rbp, 48>
new  <	sub rax, rbx>

1598:
old  <	mov rdi, rbp>
new  <>

1599:
old  <	jmp printf>
new  < stdlib_test$201:>

1600:
old  <>
new  <	; UnsignedDivide Â£temporary4492 Â£temporary4493 4>

1601:
old  < stdlib_test$233:>
new  <	xor rdx, rdx>

1602:
old  <	; PostCall 48>
new  <	div qword [int8$4#]>

1604:
old  < stdlib_test$234:>
new  < stdlib_test$202:>

1605:
old  <	; Assign key 0>
new  <	; IntegralToIntegral Â£temporary4494 Â£temporary4492>

1606:
old  <	mov dword [rbp + 44], 0>
new  <>

1607:
old  <>
new  < stdlib_test$203:>

1608:
old  < stdlib_test$235:>
new  <	; Assign Â£temporary4495 Â£temporary4494>

1609:
old  <	; SignedGreaterThanEqual 264 key 6>
new  <>

1610:
old  <	cmp dword [rbp + 44], 6>
new  < stdlib_test$204:>

1611:
old  <	jge stdlib_test$264>
new  <	; Goto 206>

1612:
old  <>
new  <	jmp stdlib_test$206>

1613:
old  < stdlib_test$236:>
new  <>

1614:
old  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < stdlib_test$205:>

1615:
old  <>
new  <	; Assign Â£temporary4495 -1>

1616:
old  < stdlib_test$237:>
new  <	mov eax, -1>

1617:
old  <	; Address Â£temporary3867 key>
new  <>

1618:
old  <	mov rsi, rbp>
new  < stdlib_test$206:>

1619:
old  <	add rsi, 44>
new  <	; Assign index Â£temporary4495>

1620:
old  <>
new  <	mov [rbp + 56], eax>

1621:
old  < stdlib_test$238:>
new  <>

1622:
old  <	; Parameter pointer Â£temporary3867 72>
new  < stdlib_test$207:>

1623:
old  <	mov [rbp + 72], rsi>
new  <	; PreCall 60 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1625:
old  < stdlib_test$239:>
new  < stdlib_test$208:>

1626:
old  <	; Parameter pointer list 80>
new  <	; Parameter pointer "  (%i, %i)\n" 84>

1627:
old  <	mov [rbp + 80], rbp>
new  <	mov qword [rbp + 84], string_20202825i2C2025i290A#>

1628:
old  <	add qword [rbp + 80], 24>
new  <>

1629:
old  <>
new  < stdlib_test$209:>

1630:
old  < stdlib_test$240:>
new  <	; Parameter signedint key 92>

1631:
old  <	; Parameter signedint size 88>
new  <	mov eax, [rbp + 44]>

1632:
old  <	mov eax, [rbp + 40]>
new  <	mov [rbp + 92], eax>

1633:
old  <	mov [rbp + 88], eax>
new  <>

1634:
old  <>
new  < stdlib_test$210:>

1635:
old  < stdlib_test$241:>
new  <	; Parameter signedint index 96>

1636:
old  <	; Parameter signedint 4 92>
new  <	mov eax, [rbp + 56]>

1637:
old  <	mov dword [rbp + 92], 4>
new  <	mov [rbp + 96], eax>

1639:
old  < stdlib_test$242:>
new  < stdlib_test$211:>

1640:
old  <	; Parameter pointer compare 96>
new  <	; Call printf 60 8>

1641:
old  <	mov qword [rbp + 96], compare>
new  <	mov qword [rbp + 60], stdlib_test$212>

1642:
old  <>
new  <	mov [rbp + 68], rbp>

1643:
old  < stdlib_test$243:>
new  <	add rbp, 60>

1644:
old  <	; Call bsearch 48 0>
new  <	mov rdi, rbp>

1645:
old  <	mov qword [rbp + 48], stdlib_test$244>
new  <	add rdi, 8>

1646:
old  <	mov [rbp + 56], rbp>
new  <	jmp printf>

1647:
old  <	add rbp, 48>
new  <>

1648:
old  <	jmp bsearch>
new  < stdlib_test$212:>

1649:
old  <>
new  <	; PostCall 60>

1650:
old  < stdlib_test$244:>
new  <>

1651:
old  <	; PostCall 48>
new  < stdlib_test$213:>

1652:
old  <>
new  <	; BinaryAdd key key 1>

1653:
old  < stdlib_test$245:>
new  <	inc dword [rbp + 44]>

1654:
old  <	; GetReturnValue Â£temporary3869>
new  <>

1655:
old  <>
new  < stdlib_test$214:>

1656:
old  < stdlib_test$246:>
new  <	; Goto 186>

1657:
old  <	; IntegralToIntegral Â£temporary3870 Â£temporary3869>
new  <	jmp stdlib_test$186>

1659:
old  < stdlib_test$247:>
new  < stdlib_test$215:>

1660:
old  <	; Assign p Â£temporary3870>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1661:
old  <	mov [rbp + 48], rbx>
new  <>

1662:
old  <>
new  < stdlib_test$216:>

1663:
old  < stdlib_test$248:>
new  <	; Parameter pointer "\n" 72>

1664:
old  <	; Equal 254 p 0>
new  <	mov qword [rbp + 72], string_0A#>

1665:
old  <	cmp qword [rbp + 48], 0>
new  <>

1666:
old  <	je stdlib_test$254>
new  < stdlib_test$217:>

1667:
old  <>
new  <	; Call printf 48 0>

1668:
old  < stdlib_test$249:>
new  <	mov qword [rbp + 48], stdlib_test$218>

1669:
old  <	; BinarySubtract Â£temporary3873 p list>
new  <	mov [rbp + 56], rbp>

1670:
old  <	mov rax, [rbp + 48]>
new  <	add rbp, 48>

1671:
old  <	sub rax, rbp>
new  <	mov rdi, rbp>

1672:
old  <	sub rax, 24>
new  <	jmp printf>

1674:
old  < stdlib_test$250:>
new  < stdlib_test$218:>

1675:
old  <	; UnsignedDivide Â£temporary3872 Â£temporary3873 4>
new  <	; PostCall 48>

1676:
old  <	xor rdx, rdx>
new  <>

1677:
old  <	div qword [int8$4#]>
new  < stdlib_test$219:>

1678:
old  <>
new  <	; Return>

1679:
old  < stdlib_test$251:>
new  <	mov rax, [rbp]>

1680:
old  <	; IntegralToIntegral Â£temporary3874 Â£temporary3872>
new  <	mov rdi, [rbp + 16]>

1681:
old  <>
new  <	mov rbp, [rbp + 8]>

1682:
old  < stdlib_test$252:>
new  <	jmp rax>

1683:
old  <	; Assign Â£temporary3875 Â£temporary3874>
new  <>

1684:
old  <>
new  < stdlib_test$220:>

1685:
old  < stdlib_test$253:>
new  <	; FunctionEnd stdlib_test>

153:
old  <	; GetReturnValue Â£temporary3899>
new  <	; GetReturnValue Â£temporary4517>

156:
old  <	; Assign now Â£temporary3899>
new  <	; Assign now Â£temporary4517>

163:
old  <	; Address Â£temporary3900 now>
new  <	; Address Â£temporary4518 now>

168:
old  <	; Parameter pointer Â£temporary3900 112>
new  <	; Parameter pointer Â£temporary4518 112>

182:
old  <	; GetReturnValue Â£temporary3901>
new  <	; GetReturnValue Â£temporary4519>

185:
old  <	; Assign p Â£temporary3901>
new  <	; Assign p Â£temporary4519>

207:
old  <	; GetReturnValue Â£temporary3902>
new  <	; GetReturnValue Â£temporary4520>

210:
old  <	; Assign now2 Â£temporary3902>
new  <	; Assign now2 Â£temporary4520>

262:
old  <	; Dereference Â£temporary3905 -> p p 0>
new  <	; Dereference Â£temporary4523 -> p p 0>

266:
old  <	; Assign s Â£temporary3905 -> p>
new  <	; AssignInitSize s Â£temporary4523 -> p>

271:
old  < label$5:>
new  < time_test$38:>

272:
old  <	mov ah, [rsi]>
new  <	; Assign s Â£temporary4523 -> p>

273:
old  <	mov [rdi], ah>
new  <	mov ah, [rsi]>

274:
old  <	inc rsi>
new  <	mov [rdi], ah>

275:
old  <	inc rdi>
new  <	inc rsi>

276:
old  <	dec al>
new  <	inc rdi>

277:
old  <	cmp al, 0>
new  <	dec al>

278:
old  <	jne label$5>
new  <	cmp al, 0>

279:
old  <>
new  <	jne time_test$38>

280:
old  < time_test$38:>
new  <>

281:
old  <	; PreCall 140 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < time_test$39:>

282:
old  <>
new  <	; PreCall 140 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

283:
old  < time_test$39:>
new  <>

284:
old  <	; Parameter pointer "   gm time: %s %02i-%02i-%02i %02i:%02i:%02i, year day %i, week day %i, daylight saving time %i\n" 164>
new  < time_test$40:>

285:
old  <	mov qword [rbp + 164], string_202020gm20time3A2025s202502i2D2502i2D2502i202502i3A2502i3A2502i2C20year20day2025i2C20week20day2025i2C20daylight20saving20time2025i0A#>
new  <	; Parameter pointer "   gm time: %s %02i-%02i-%02i %02i:%02i:%02i, year day %i, week day %i, daylight saving time %i\n" 164>

286:
old  <>
new  <	mov qword [rbp + 164], string_202020gm20time3A2025s202502i2D2502i2D2502i202502i3A2502i3A2502i2C20year20day2025i2C20week20day2025i2C20daylight20saving20time2025i0A#>

287:
old  < time_test$40:>
new  <>

288:
old  <	; IntegralToIntegral Â£temporary3908 s.tm_wday>
new  < time_test$41:>

289:
old  <	mov eax, [rbp + 128]>
new  <	; IntegralToIntegral Â£temporary4526 s.tm_wday>

290:
old  <	mov rbx, 4294967295>
new  <	mov eax, [rbp + 128]>

291:
old  <	and rax, rbx>
new  <	mov rbx, 4294967295>

292:
old  <>
new  <	and rax, rbx>

293:
old  < time_test$41:>
new  <>

294:
old  <	; UnsignedMultiply Â£temporary3909 Â£temporary3908 8>
new  < time_test$42:>

295:
old  <	xor rdx, rdx>
new  <	; UnsignedMultiply Â£temporary4527 Â£temporary4526 8>

296:
old  <	mul qword [Array_8#]>
new  <	xor rdx, rdx>

297:
old  <>
new  <	mul qword [Array_8#]>

298:
old  < time_test$42:>
new  <>

299:
old  <	; BinaryAdd Â£temporary3910 weekdays Â£temporary3909>
new  < time_test$43:>

300:
old  <	mov rsi, rbp>
new  <	; BinaryAdd Â£temporary4528 weekdays Â£temporary4527>

301:
old  <	add rsi, 24>
new  <	mov rsi, rbp>

302:
old  <	add rsi, rax>
new  <	add rsi, 24>

303:
old  <>
new  <	add rsi, rax>

304:
old  < time_test$43:>
new  <>

305:
old  <	; Dereference Â£temporary3907 -> Â£temporary3910 Â£temporary3910 0>
new  < time_test$44:>

306:
old  <>
new  <	; Dereference Â£temporary4525 -> Â£temporary4528 Â£temporary4528 0>

307:
old  < time_test$44:>
new  <>

308:
old  <	; Parameter pointer Â£temporary3907 -> Â£temporary3910 172>
new  < time_test$45:>

309:
old  <	mov rax, [rsi]>
new  <	; Parameter pointer Â£temporary4525 -> Â£temporary4528 172>

310:
old  <	mov [rbp + 172], rax>
new  <	mov rax, [rsi]>

311:
old  <>
new  <	mov [rbp + 172], rax>

312:
old  < time_test$45:>
new  <>

313:
old  <	; BinaryAdd Â£temporary3912 s.tm_year 1900>
new  < time_test$46:>

314:
old  <	mov eax, [rbp + 124]>
new  <	; BinaryAdd Â£temporary4530 s.tm_year 1900>

315:
old  <	add eax, 1900>
new  <	mov eax, [rbp + 124]>

316:
old  <>
new  <	add eax, 1900>

317:
old  < time_test$46:>
new  <>

318:
old  <	; Parameter signedint Â£temporary3912 180>
new  < time_test$47:>

319:
old  <	mov [rbp + 180], eax>
new  <	; Parameter signedint Â£temporary4530 180>

320:
old  <>
new  <	mov [rbp + 180], eax>

321:
old  < time_test$47:>
new  <>

322:
old  <	; BinaryAdd Â£temporary3914 s.tm_mon 1>
new  < time_test$48:>

323:
old  <	mov eax, [rbp + 120]>
new  <	; BinaryAdd Â£temporary4532 s.tm_mon 1>

324:
old  <	inc eax>
new  <	mov eax, [rbp + 120]>

325:
old  <>
new  <	inc eax>

326:
old  < time_test$48:>
new  <>

327:
old  <	; Parameter signedint Â£temporary3914 184>
new  < time_test$49:>

328:
old  <	mov [rbp + 184], eax>
new  <	; Parameter signedint Â£temporary4532 184>

329:
old  <>
new  <	mov [rbp + 184], eax>

330:
old  < time_test$49:>
new  <>

331:
old  <	; Parameter signedint s.tm_mday 188>
new  < time_test$50:>

332:
old  <	mov eax, [rbp + 116]>
new  <	; Parameter signedint s.tm_mday 188>

333:
old  <	mov [rbp + 188], eax>
new  <	mov eax, [rbp + 116]>

334:
old  <>
new  <	mov [rbp + 188], eax>

335:
old  < time_test$50:>
new  <>

336:
old  <	; Parameter signedint s.tm_hour 192>
new  < time_test$51:>

337:
old  <	mov eax, [rbp + 112]>
new  <	; Parameter signedint s.tm_hour 192>

338:
old  <	mov [rbp + 192], eax>
new  <	mov eax, [rbp + 112]>

339:
old  <>
new  <	mov [rbp + 192], eax>

340:
old  < time_test$51:>
new  <>

341:
old  <	; Parameter signedint s.tm_min 196>
new  < time_test$52:>

342:
old  <	mov eax, [rbp + 108]>
new  <	; Parameter signedint s.tm_min 196>

343:
old  <	mov [rbp + 196], eax>
new  <	mov eax, [rbp + 108]>

344:
old  <>
new  <	mov [rbp + 196], eax>

345:
old  < time_test$52:>
new  <>

346:
old  <	; Parameter signedint s.tm_sec 200>
new  < time_test$53:>

347:
old  <	mov eax, [rbp + 104]>
new  <	; Parameter signedint s.tm_sec 200>

348:
old  <	mov [rbp + 200], eax>
new  <	mov eax, [rbp + 104]>

349:
old  <>
new  <	mov [rbp + 200], eax>

350:
old  < time_test$53:>
new  <>

351:
old  <	; Parameter signedint s.tm_yday 204>
new  < time_test$54:>

352:
old  <	mov eax, [rbp + 132]>
new  <	; Parameter signedint s.tm_yday 204>

353:
old  <	mov [rbp + 204], eax>
new  <	mov eax, [rbp + 132]>

354:
old  <>
new  <	mov [rbp + 204], eax>

355:
old  < time_test$54:>
new  <>

356:
old  <	; Parameter signedint s.tm_wday 208>
new  < time_test$55:>

357:
old  <	mov eax, [rbp + 128]>
new  <	; Parameter signedint s.tm_wday 208>

358:
old  <	mov [rbp + 208], eax>
new  <	mov eax, [rbp + 128]>

359:
old  <>
new  <	mov [rbp + 208], eax>

360:
old  < time_test$55:>
new  <>

361:
old  <	; Parameter signedint s.tm_isdst 212>
new  < time_test$56:>

362:
old  <	mov eax, [rbp + 136]>
new  <	; Parameter signedint s.tm_isdst 212>

363:
old  <	mov [rbp + 212], eax>
new  <	mov eax, [rbp + 136]>

364:
old  <>
new  <	mov [rbp + 212], eax>

365:
old  < time_test$56:>
new  <>

366:
old  <	; Call printf 140 44>
new  < time_test$57:>

367:
old  <	mov qword [rbp + 140], time_test$57>
new  <	; Call printf 140 44>

368:
old  <	mov [rbp + 148], rbp>
new  <	mov qword [rbp + 140], time_test$58>

369:
old  <	add rbp, 140>
new  <	mov [rbp + 148], rbp>

370:
old  <	mov rdi, rbp>
new  <	add rbp, 140>

371:
old  <	add rdi, 44>
new  <	mov rdi, rbp>

372:
old  <	jmp printf>
new  <	add rdi, 44>

373:
old  <>
new  <	jmp printf>

374:
old  < time_test$57:>
new  <>

375:
old  <	; PostCall 140>
new  < time_test$58:>

376:
old  <>
new  <	; PostCall 140>

377:
old  < time_test$58:>
new  <>

378:
old  <	; PreCall 140 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < time_test$59:>

379:
old  <>
new  <	; PreCall 140 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

380:
old  < time_test$59:>
new  <>

381:
old  <	; Address Â£temporary3923 now>
new  < time_test$60:>

382:
old  <	mov rsi, rbp>
new  <	; Address Â£temporary4541 now>

383:
old  <	add rsi, 80>
new  <	mov rsi, rbp>

384:
old  <>
new  <	add rsi, 80>

385:
old  < time_test$60:>
new  <>

386:
old  <	; Parameter pointer Â£temporary3923 164>
new  < time_test$61:>

387:
old  <	mov [rbp + 164], rsi>
new  <	; Parameter pointer Â£temporary4541 164>

388:
old  <>
new  <	mov [rbp + 164], rsi>

389:
old  < time_test$61:>
new  <>

390:
old  <	; Call localtime 140 0>
new  < time_test$62:>

391:
old  <	mov qword [rbp + 140], time_test$62>
new  <	; Call localtime 140 0>

392:
old  <	mov [rbp + 148], rbp>
new  <	mov qword [rbp + 140], time_test$63>

393:
old  <	add rbp, 140>
new  <	mov [rbp + 148], rbp>

394:
old  <	jmp localtime>
new  <	add rbp, 140>

395:
old  <>
new  <	jmp localtime>

396:
old  < time_test$62:>
new  <>

397:
old  <	; PostCall 140>
new  < time_test$63:>

398:
old  <>
new  <	; PostCall 140>

399:
old  < time_test$63:>
new  <>

400:
old  <	; GetReturnValue Â£temporary3924>
new  < time_test$64:>

401:
old  <>
new  <	; GetReturnValue Â£temporary4542>

402:
old  < time_test$64:>
new  <>

403:
old  <	; Dereference Â£temporary3925 -> Â£temporary3924 Â£temporary3924 0>
new  < time_test$65:>

404:
old  <>
new  <	; Dereference Â£temporary4543 -> Â£temporary4542 Â£temporary4542 0>

405:
old  < time_test$65:>
new  <>

406:
old  <	; Assign s Â£temporary3925 -> Â£temporary3924>
new  < time_test$66:>

407:
old  <	mov rsi, rbp>
new  <	; AssignInitSize s Â£temporary4543 -> Â£temporary4542>

408:
old  <	add rsi, 104>
new  <	mov rsi, rbp>

409:
old  <	mov al, 36>
new  <	add rsi, 104>

410:
old  <>
new  <	mov al, 36>

411:
old  < label$6:>
new  <>

412:
old  <	mov ah, [rbx]>
new  < time_test$67:>

413:
old  <	mov [rsi], ah>
new  <	; Assign s Â£temporary4543 -> Â£temporary4542>

414:
old  <	inc rbx>
new  <	mov ah, [rbx]>

415:
old  <	inc rsi>
new  <	mov [rsi], ah>

416:
old  <	dec al>
new  <	inc rbx>

417:
old  <	cmp al, 0>
new  <	inc rsi>

418:
old  <	jne label$6>
new  <	dec al>

419:
old  <>
new  <	cmp al, 0>

420:
old  < time_test$66:>
new  <	jne time_test$67>

421:
old  <	; PreCall 140 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

422:
old  <>
new  < time_test$68:>

423:
old  < time_test$67:>
new  <	; PreCall 140 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

424:
old  <	; Parameter pointer "local time: %s %02i-%02i-%02i %02i:%02i:%02i, year day %i, week day %i, daylight saving time %i\n" 164>
new  <>

425:
old  <	mov qword [rbp + 164], string_local20time3A2025s202502i2D2502i2D2502i202502i3A2502i3A2502i2C20year20day2025i2C20week20day2025i2C20daylight20saving20time2025i0A#>
new  < time_test$69:>

426:
old  <>
new  <	; Parameter pointer "local time: %s %02i-%02i-%02i %02i:%02i:%02i, year day %i, week day %i, daylight saving time %i\n" 164>

427:
old  < time_test$68:>
new  <	mov qword [rbp + 164], string_local20time3A2025s202502i2D2502i2D2502i202502i3A2502i3A2502i2C20year20day2025i2C20week20day2025i2C20daylight20saving20time2025i0A#>

428:
old  <	; IntegralToIntegral Â£temporary3928 s.tm_wday>
new  <>

429:
old  <	mov eax, [rbp + 128]>
new  < time_test$70:>

430:
old  <	mov rbx, 4294967295>
new  <	; IntegralToIntegral Â£temporary4546 s.tm_wday>

431:
old  <	and rax, rbx>
new  <	mov eax, [rbp + 128]>

432:
old  <>
new  <	mov rbx, 4294967295>

433:
old  < time_test$69:>
new  <	and rax, rbx>

434:
old  <	; UnsignedMultiply Â£temporary3929 Â£temporary3928 8>
new  <>

435:
old  <	xor rdx, rdx>
new  < time_test$71:>

436:
old  <	mul qword [Array_8#]>
new  <	; UnsignedMultiply Â£temporary4547 Â£temporary4546 8>

437:
old  <>
new  <	xor rdx, rdx>

438:
old  < time_test$70:>
new  <	mul qword [Array_8#]>

439:
old  <	; BinaryAdd Â£temporary3930 weekdays Â£temporary3929>
new  <>

440:
old  <	mov rsi, rbp>
new  < time_test$72:>

441:
old  <	add rsi, 24>
new  <	; BinaryAdd Â£temporary4548 weekdays Â£temporary4547>

442:
old  <	add rsi, rax>
new  <	mov rsi, rbp>

443:
old  <>
new  <	add rsi, 24>

444:
old  < time_test$71:>
new  <	add rsi, rax>

445:
old  <	; Dereference Â£temporary3927 -> Â£temporary3930 Â£temporary3930 0>
new  <>

446:
old  <>
new  < time_test$73:>

447:
old  < time_test$72:>
new  <	; Dereference Â£temporary4545 -> Â£temporary4548 Â£temporary4548 0>

448:
old  <	; Parameter pointer Â£temporary3927 -> Â£temporary3930 172>
new  <>

449:
old  <	mov rax, [rsi]>
new  < time_test$74:>

450:
old  <	mov [rbp + 172], rax>
new  <	; Parameter pointer Â£temporary4545 -> Â£temporary4548 172>

451:
old  <>
new  <	mov rax, [rsi]>

452:
old  < time_test$73:>
new  <	mov [rbp + 172], rax>

453:
old  <	; BinaryAdd Â£temporary3932 s.tm_year 1900>
new  <>

454:
old  <	mov eax, [rbp + 124]>
new  < time_test$75:>

455:
old  <	add eax, 1900>
new  <	; BinaryAdd Â£temporary4550 s.tm_year 1900>

456:
old  <>
new  <	mov eax, [rbp + 124]>

457:
old  < time_test$74:>
new  <	add eax, 1900>

458:
old  <	; Parameter signedint Â£temporary3932 180>
new  <>

459:
old  <	mov [rbp + 180], eax>
new  < time_test$76:>

460:
old  <>
new  <	; Parameter signedint Â£temporary4550 180>

461:
old  < time_test$75:>
new  <	mov [rbp + 180], eax>

462:
old  <	; BinaryAdd Â£temporary3934 s.tm_mon 1>
new  <>

463:
old  <	mov eax, [rbp + 120]>
new  < time_test$77:>

464:
old  <	inc eax>
new  <	; BinaryAdd Â£temporary4552 s.tm_mon 1>

465:
old  <>
new  <	mov eax, [rbp + 120]>

466:
old  < time_test$76:>
new  <	inc eax>

467:
old  <	; Parameter signedint Â£temporary3934 184>
new  <>

468:
old  <	mov [rbp + 184], eax>
new  < time_test$78:>

469:
old  <>
new  <	; Parameter signedint Â£temporary4552 184>

470:
old  < time_test$77:>
new  <	mov [rbp + 184], eax>

471:
old  <	; Parameter signedint s.tm_mday 188>
new  <>

472:
old  <	mov eax, [rbp + 116]>
new  < time_test$79:>

473:
old  <	mov [rbp + 188], eax>
new  <	; Parameter signedint s.tm_mday 188>

474:
old  <>
new  <	mov eax, [rbp + 116]>

475:
old  < time_test$78:>
new  <	mov [rbp + 188], eax>

476:
old  <	; Parameter signedint s.tm_hour 192>
new  <>

477:
old  <	mov eax, [rbp + 112]>
new  < time_test$80:>

478:
old  <	mov [rbp + 192], eax>
new  <	; Parameter signedint s.tm_hour 192>

479:
old  <>
new  <	mov eax, [rbp + 112]>

480:
old  < time_test$79:>
new  <	mov [rbp + 192], eax>

481:
old  <	; Parameter signedint s.tm_min 196>
new  <>

482:
old  <	mov eax, [rbp + 108]>
new  < time_test$81:>

483:
old  <	mov [rbp + 196], eax>
new  <	; Parameter signedint s.tm_min 196>

484:
old  <>
new  <	mov eax, [rbp + 108]>

485:
old  < time_test$80:>
new  <	mov [rbp + 196], eax>

486:
old  <	; Parameter signedint s.tm_sec 200>
new  <>

487:
old  <	mov eax, [rbp + 104]>
new  < time_test$82:>

488:
old  <	mov [rbp + 200], eax>
new  <	; Parameter signedint s.tm_sec 200>

489:
old  <>
new  <	mov eax, [rbp + 104]>

490:
old  < time_test$81:>
new  <	mov [rbp + 200], eax>

491:
old  <	; Parameter signedint s.tm_yday 204>
new  <>

492:
old  <	mov eax, [rbp + 132]>
new  < time_test$83:>

493:
old  <	mov [rbp + 204], eax>
new  <	; Parameter signedint s.tm_yday 204>

494:
old  <>
new  <	mov eax, [rbp + 132]>

495:
old  < time_test$82:>
new  <	mov [rbp + 204], eax>

496:
old  <	; Parameter signedint s.tm_wday 208>
new  <>

497:
old  <	mov eax, [rbp + 128]>
new  < time_test$84:>

498:
old  <	mov [rbp + 208], eax>
new  <	; Parameter signedint s.tm_wday 208>

499:
old  <>
new  <	mov eax, [rbp + 128]>

500:
old  < time_test$83:>
new  <	mov [rbp + 208], eax>

501:
old  <	; Parameter signedint s.tm_isdst 212>
new  <>

502:
old  <	mov eax, [rbp + 136]>
new  < time_test$85:>

503:
old  <	mov [rbp + 212], eax>
new  <	; Parameter signedint s.tm_isdst 212>

504:
old  <>
new  <	mov eax, [rbp + 136]>

505:
old  < time_test$84:>
new  <	mov [rbp + 212], eax>

506:
old  <	; Call printf 140 44>
new  <>

507:
old  <	mov qword [rbp + 140], time_test$85>
new  < time_test$86:>

508:
old  <	mov [rbp + 148], rbp>
new  <	; Call printf 140 44>

509:
old  <	add rbp, 140>
new  <	mov qword [rbp + 140], time_test$87>

510:
old  <	mov rdi, rbp>
new  <	mov [rbp + 148], rbp>

511:
old  <	add rdi, 44>
new  <	add rbp, 140>

512:
old  <	jmp printf>
new  <	mov rdi, rbp>

513:
old  <>
new  <	add rdi, 44>

514:
old  < time_test$85:>
new  <	jmp printf>

515:
old  <	; PostCall 140>
new  <>

516:
old  <>
new  < time_test$87:>

517:
old  < time_test$86:>
new  <	; PostCall 140>

518:
old  <	; PreCall 340 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

519:
old  <>
new  < time_test$88:>

520:
old  < time_test$87:>
new  <	; PreCall 340 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

521:
old  <	; Parameter pointer buffer1 364>
new  <>

522:
old  <	mov [rbp + 364], rbp>
new  < time_test$89:>

523:
old  <	add qword [rbp + 364], 140>
new  <	; Parameter pointer buffer1 364>

524:
old  <>
new  <	mov [rbp + 364], rbp>

525:
old  < time_test$88:>
new  <	add qword [rbp + 364], 140>

526:
old  <	; PreCall 340 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

527:
old  <>
new  < time_test$90:>

528:
old  < time_test$89:>
new  <	; PreCall 340 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

529:
old  <	; Address Â£temporary3943 s>
new  <>

530:
old  <	mov rsi, rbp>
new  < time_test$91:>

531:
old  <	add rsi, 104>
new  <	; Address Â£temporary4561 s>

532:
old  <>
new  <	mov rsi, rbp>

533:
old  < time_test$90:>
new  <	add rsi, 104>

534:
old  <	; Parameter pointer Â£temporary3943 396>
new  <>

535:
old  <	mov [rbp + 396], rsi>
new  < time_test$92:>

536:
old  <>
new  <	; Parameter pointer Â£temporary4561 396>

537:
old  < time_test$91:>
new  <	mov [rbp + 396], rsi>

538:
old  <	; Call asctime 372 0>
new  <>

539:
old  <	mov qword [rbp + 372], time_test$92>
new  < time_test$93:>

540:
old  <	mov [rbp + 380], rbp>
new  <	; Call asctime 372 0>

541:
old  <	add rbp, 372>
new  <	mov qword [rbp + 372], time_test$94>

542:
old  <	jmp asctime>
new  <	mov [rbp + 380], rbp>

543:
old  <>
new  <	add rbp, 372>

544:
old  < time_test$92:>
new  <	jmp asctime>

545:
old  <	; PostCall 372>
new  <>

546:
old  <>
new  < time_test$94:>

547:
old  < time_test$93:>
new  <	; PostCall 372>

548:
old  <	; GetReturnValue Â£temporary3944>
new  <>

549:
old  <>
new  < time_test$95:>

550:
old  < time_test$94:>
new  <	; GetReturnValue Â£temporary4562>

551:
old  <	; Parameter pointer Â£temporary3944 372>
new  <>

552:
old  <	mov [rbp + 372], rbx>
new  < time_test$96:>

553:
old  <>
new  <	; Parameter pointer Â£temporary4562 372>

554:
old  < time_test$95:>
new  <	mov [rbp + 372], rbx>

555:
old  <	; Call strcpy 340 0>
new  <>

556:
old  <	mov qword [rbp + 340], time_test$96>
new  < time_test$97:>

557:
old  <	mov [rbp + 348], rbp>
new  <	; Call strcpy 340 0>

558:
old  <	add rbp, 340>
new  <	mov qword [rbp + 340], time_test$98>

559:
old  <	jmp strcpy>
new  <	mov [rbp + 348], rbp>

560:
old  <>
new  <	add rbp, 340>

561:
old  < time_test$96:>
new  <	jmp strcpy>

562:
old  <	; PostCall 340>
new  <>

563:
old  <>
new  < time_test$98:>

564:
old  < time_test$97:>
new  <	; PostCall 340>

565:
old  <	; PreCall 340 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

566:
old  <>
new  < time_test$99:>

567:
old  < time_test$98:>
new  <	; PreCall 340 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

568:
old  <	; Parameter pointer buffer2 364>
new  <>

569:
old  <	mov [rbp + 364], rbp>
new  < time_test$100:>

570:
old  <	add qword [rbp + 364], 240>
new  <	; Parameter pointer buffer2 364>

571:
old  <>
new  <	mov [rbp + 364], rbp>

572:
old  < time_test$99:>
new  <	add qword [rbp + 364], 240>

573:
old  <	; PreCall 340 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

574:
old  <>
new  < time_test$101:>

575:
old  < time_test$100:>
new  <	; PreCall 340 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

576:
old  <	; Address Â£temporary3946 now>
new  <>

577:
old  <	mov rsi, rbp>
new  < time_test$102:>

578:
old  <	add rsi, 80>
new  <	; Address Â£temporary4564 now>

579:
old  <>
new  <	mov rsi, rbp>

580:
old  < time_test$101:>
new  <	add rsi, 80>

581:
old  <	; Parameter pointer Â£temporary3946 396>
new  <>

582:
old  <	mov [rbp + 396], rsi>
new  < time_test$103:>

583:
old  <>
new  <	; Parameter pointer Â£temporary4564 396>

584:
old  < time_test$102:>
new  <	mov [rbp + 396], rsi>

585:
old  <	; Call ctime 372 0>
new  <>

586:
old  <	mov qword [rbp + 372], time_test$103>
new  < time_test$104:>

587:
old  <	mov [rbp + 380], rbp>
new  <	; Call ctime 372 0>

588:
old  <	add rbp, 372>
new  <	mov qword [rbp + 372], time_test$105>

589:
old  <	jmp ctime>
new  <	mov [rbp + 380], rbp>

590:
old  <>
new  <	add rbp, 372>

591:
old  < time_test$103:>
new  <	jmp ctime>

592:
old  <	; PostCall 372>
new  <>

593:
old  <>
new  < time_test$105:>

594:
old  < time_test$104:>
new  <	; PostCall 372>

595:
old  <	; GetReturnValue Â£temporary3947>
new  <>

596:
old  <>
new  < time_test$106:>

597:
old  < time_test$105:>
new  <	; GetReturnValue Â£temporary4565>

598:
old  <	; Parameter pointer Â£temporary3947 372>
new  <>

599:
old  <	mov [rbp + 372], rbx>
new  < time_test$107:>

600:
old  <>
new  <	; Parameter pointer Â£temporary4565 372>

601:
old  < time_test$106:>
new  <	mov [rbp + 372], rbx>

602:
old  <	; Call strcpy 340 0>
new  <>

603:
old  <	mov qword [rbp + 340], time_test$107>
new  < time_test$108:>

604:
old  <	mov [rbp + 348], rbp>
new  <	; Call strcpy 340 0>

605:
old  <	add rbp, 340>
new  <	mov qword [rbp + 340], time_test$109>

606:
old  <	jmp strcpy>
new  <	mov [rbp + 348], rbp>

607:
old  <>
new  <	add rbp, 340>

608:
old  < time_test$107:>
new  <	jmp strcpy>

609:
old  <	; PostCall 340>
new  <>

610:
old  <>
new  < time_test$109:>

611:
old  < time_test$108:>
new  <	; PostCall 340>

612:
old  <	; PreCall 340 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

613:
old  <>
new  < time_test$110:>

614:
old  < time_test$109:>
new  <	; PreCall 340 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

615:
old  <	; Parameter pointer "asctime <%s>, ctime <%s>\n" 364>
new  <>

616:
old  <	mov qword [rbp + 364], string_asctime203C25s3E2C20ctime203C25s3E0A#>
new  < time_test$111:>

617:
old  <>
new  <	; Parameter pointer "asctime <%s>, ctime <%s>\n" 364>

618:
old  < time_test$110:>
new  <	mov qword [rbp + 364], string_asctime203C25s3E2C20ctime203C25s3E0A#>

619:
old  <	; Parameter pointer buffer1 372>
new  <>

620:
old  <	mov [rbp + 372], rbp>
new  < time_test$112:>

621:
old  <	add qword [rbp + 372], 140>
new  <	; Parameter pointer buffer1 372>

622:
old  <>
new  <	mov [rbp + 372], rbp>

623:
old  < time_test$111:>
new  <	add qword [rbp + 372], 140>

624:
old  <	; Parameter pointer buffer2 380>
new  <>

625:
old  <	mov [rbp + 380], rbp>
new  < time_test$113:>

626:
old  <	add qword [rbp + 380], 240>
new  <	; Parameter pointer buffer2 380>

627:
old  <>
new  <	mov [rbp + 380], rbp>

628:
old  < time_test$112:>
new  <	add qword [rbp + 380], 240>

629:
old  <	; Call printf 340 16>
new  <>

630:
old  <	mov qword [rbp + 340], time_test$113>
new  < time_test$114:>

631:
old  <	mov [rbp + 348], rbp>
new  <	; Call printf 340 16>

632:
old  <	add rbp, 340>
new  <	mov qword [rbp + 340], time_test$115>

633:
old  <	mov rdi, rbp>
new  <	mov [rbp + 348], rbp>

634:
old  <	add rdi, 16>
new  <	add rbp, 340>

635:
old  <	jmp printf>
new  <	mov rdi, rbp>

636:
old  <>
new  <	add rdi, 16>

637:
old  < time_test$113:>
new  <	jmp printf>

638:
old  <	; PostCall 340>
new  <>

639:
old  <>
new  < time_test$115:>

640:
old  < time_test$114:>
new  <	; PostCall 340>

641:
old  <	; PreCall 640 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

642:
old  <>
new  < time_test$116:>

643:
old  < time_test$115:>
new  <	; PreCall 640 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

644:
old  <	; Parameter pointer buffer 664>
new  <>

645:
old  <	mov [rbp + 664], rbp>
new  < time_test$117:>

646:
old  <	add qword [rbp + 664], 340>
new  <	; Parameter pointer buffer 664>

647:
old  <>
new  <	mov [rbp + 664], rbp>

648:
old  < time_test$116:>
new  <	add qword [rbp + 664], 340>

649:
old  <	; Parameter signedint 300 672>
new  <>

650:
old  <	mov dword [rbp + 672], 300>
new  < time_test$118:>

651:
old  <>
new  <	; Parameter signedint 300 672>

652:
old  < time_test$117:>
new  <	mov dword [rbp + 672], 300>

653:
old  <	; Parameter pointer "short day %a, long day %A, short month %b, long month %B, date-time %c, mday %d, hour %H, gm hour %I, yday %j, month %m, min %M, am/pm %p, sec %S, week number sun %U, week day %w, week number mon %W, date %x, time %X, short year %y, long year %Y" 676>
new  <>

654:
old  <	mov qword [rbp + 676], string_short20day2025a2C20long20day2025A2C20short20month2025b2C20long20month2025B2C20date2Dtime2025c2C20mday2025d2C20hour2025H2C20gm20hour2025I2C20yday2025j2C20month2025m2C20min2025M2C20am2Fpm2025p2C20sec2025S2C20week20number20sun2025U2C20week20day2025w2C20week20number20mon2025W2C20date2025x2C20time2025X2C20short20year2025y2C20long20year2025Y#>
new  < time_test$119:>

655:
old  <>
new  <	; Parameter pointer "short day %a, long day %A, short month %b, long month %B, date-time %c, mday %d, hour %H, gm hour %I, yday %j, month %m, min %M, am/pm %p, sec %S, week number sun %U, week day %w, week number mon %W, date %x, time %X, short year %y, long year %Y" 676>

656:
old  < time_test$118:>
new  <	mov qword [rbp + 676], string_short20day2025a2C20long20day2025A2C20short20month2025b2C20long20month2025B2C20date2Dtime2025c2C20mday2025d2C20hour2025H2C20gm20hour2025I2C20yday2025j2C20month2025m2C20min2025M2C20am2Fpm2025p2C20sec2025S2C20week20number20sun2025U2C20week20day2025w2C20week20number20mon2025W2C20date2025x2C20time2025X2C20short20year2025y2C20long20year2025Y#>

657:
old  <	; Address Â£temporary3950 s>
new  <>

658:
old  <	mov rsi, rbp>
new  < time_test$120:>

659:
old  <	add rsi, 104>
new  <	; Address Â£temporary4568 s>

660:
old  <>
new  <	mov rsi, rbp>

661:
old  < time_test$119:>
new  <	add rsi, 104>

662:
old  <	; Parameter pointer Â£temporary3950 684>
new  <>

663:
old  <	mov [rbp + 684], rsi>
new  < time_test$121:>

664:
old  <>
new  <	; Parameter pointer Â£temporary4568 684>

665:
old  < time_test$120:>
new  <	mov [rbp + 684], rsi>

666:
old  <	; Call strftime 640 0>
new  <>

667:
old  <	mov qword [rbp + 640], time_test$121>
new  < time_test$122:>

668:
old  <	mov [rbp + 648], rbp>
new  <	; Call strftime 640 0>

669:
old  <	add rbp, 640>
new  <	mov qword [rbp + 640], time_test$123>

670:
old  <	jmp strftime>
new  <	mov [rbp + 648], rbp>

671:
old  <>
new  <	add rbp, 640>

672:
old  < time_test$121:>
new  <	jmp strftime>

673:
old  <	; PostCall 640>
new  <>

674:
old  <>
new  < time_test$123:>

675:
old  < time_test$122:>
new  <	; PostCall 640>

676:
old  <	; GetReturnValue Â£temporary3951>
new  <>

677:
old  <>
new  < time_test$124:>

678:
old  < time_test$123:>
new  <	; GetReturnValue Â£temporary4569>

679:
old  <	; Assign i Â£temporary3951>
new  <>

680:
old  <	mov [rbp + 640], ebx>
new  < time_test$125:>

681:
old  <>
new  <	; Assign i Â£temporary4569>

682:
old  < time_test$124:>
new  <	mov [rbp + 640], ebx>

683:
old  <	; PreCall 644 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

684:
old  <>
new  < time_test$126:>

685:
old  < time_test$125:>
new  <	; PreCall 644 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

686:
old  <	; Parameter pointer "strftime <%i> <%s>\n" 668>
new  <>

687:
old  <	mov qword [rbp + 668], string_strftime203C25i3E203C25s3E0A#>
new  < time_test$127:>

688:
old  <>
new  <	; Parameter pointer "strftime <%i> <%s>\n" 668>

689:
old  < time_test$126:>
new  <	mov qword [rbp + 668], string_strftime203C25i3E203C25s3E0A#>

690:
old  <	; Parameter signedint i 676>
new  <>

691:
old  <	mov eax, [rbp + 640]>
new  < time_test$128:>

692:
old  <	mov [rbp + 676], eax>
new  <	; Parameter signedint i 676>

693:
old  <>
new  <	mov eax, [rbp + 640]>

694:
old  < time_test$127:>
new  <	mov [rbp + 676], eax>

695:
old  <	; Parameter pointer buffer 680>
new  <>

696:
old  <	mov [rbp + 680], rbp>
new  < time_test$129:>

697:
old  <	add qword [rbp + 680], 340>
new  <	; Parameter pointer buffer 680>

698:
old  <>
new  <	mov [rbp + 680], rbp>

699:
old  < time_test$128:>
new  <	add qword [rbp + 680], 340>

700:
old  <	; Call printf 644 12>
new  <>

701:
old  <	mov qword [rbp + 644], time_test$129>
new  < time_test$130:>

702:
old  <	mov [rbp + 652], rbp>
new  <	; Call printf 644 12>

703:
old  <	add rbp, 644>
new  <	mov qword [rbp + 644], time_test$131>

704:
old  <	mov rdi, rbp>
new  <	mov [rbp + 652], rbp>

705:
old  <	add rdi, 12>
new  <	add rbp, 644>

706:
old  <	jmp printf>
new  <	mov rdi, rbp>

707:
old  <>
new  <	add rdi, 12>

708:
old  < time_test$129:>
new  <	jmp printf>

709:
old  <	; PostCall 644>
new  <>

710:
old  <>
new  < time_test$131:>

711:
old  < time_test$130:>
new  <	; PostCall 644>

712:
old  <	; Return>
new  <>

713:
old  <	mov rax, [rbp]>
new  < time_test$132:>

714:
old  <	mov rdi, [rbp + 16]>
new  <	; Return>

715:
old  <	mov rbp, [rbp + 8]>
new  <	mov rax, [rbp]>

716:
old  <	jmp rax>
new  <	mov rdi, [rbp + 16]>

717:
old  <>
new  <	mov rbp, [rbp + 8]>

718:
old  < time_test$131:>
new  <	jmp rax>

719:
old  <	; FunctionEnd time_test>
new  <>

