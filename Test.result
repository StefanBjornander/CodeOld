40:
old  <	; return int8$0#>
new  <	; Return 0>

48:
old  <	; function end malloc>
new  <	; FunctionEnd malloc>

53:
old  <	; initializer zero 16>
new  <	; InitializerZero 16>

59:
old  <	; initializer String>
new  <	; Initializer String test1.txt>

65:
old  <	; initializer String>
new  <	; Initializer String test2.txt>

71:
old  <	; empty>
new  <	; Empty>

74:
old  <	; a.p = int8$0#>
new  <	; Assign a.p 0>

78:
old  <	; a.q = int8$0#>
new  <	; Assign a.q 0>

82:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

85:
old  <	; parameter string_test12Etxt#, offset 48>
new  <	; Parameter pointer "test1.txt" 48>

89:
old  <	; parameter string_test22Etxt#, offset 56>
new  <	; Parameter pointer "test2.txt" 56>

93:
old  <	; call function noellipse-noellipse file_test>
new  <	; Call file_test 24 0>

100:
old  <	; post call>
new  <	; PostCall 24>

103:
old  <	; return>
new  <	; Return>

110:
old  <	; function end main2>
new  <	; FunctionEnd main2>

115:
old  <	; initializer String>
new  <	; Initializer String Hello>

121:
old  <	; initializer String>
new  <	; Initializer String World>

127:
old  <	; initializer String>
new  <	; Initializer String <%s> <%s>\n>

133:
old  <	; s[0] = int1$72#>
new  <	; Assign s[0] 72>

137:
old  <	; s[1] = int1$101#>
new  <	; Assign s[1] 101>

141:
old  <	; s[2] = int1$108#>
new  <	; Assign s[2] 108>

145:
old  <	; s[3] = int1$108#>
new  <	; Assign s[3] 108>

149:
old  <	; s[4] = int1$111#>
new  <	; Assign s[4] 111>

153:
old  <	; s[5] = int1$48#>
new  <	; Assign s[5] 48>

157:
old  <	; t[0] = int1$87#>
new  <	; Assign t[0] 87>

161:
old  <	; t[1] = int1$111#>
new  <	; Assign t[1] 111>

165:
old  <	; t[2] = int1$114#>
new  <	; Assign t[2] 114>

169:
old  <	; t[3] = int1$108#>
new  <	; Assign t[3] 108>

173:
old  <	; t[4] = int1$100#>
new  <	; Assign t[4] 100>

177:
old  <	; t[5] = int1$48#>
new  <	; Assign t[5] 48>

181:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 64 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

184:
old  <	; parameter string_3C25s3E203C25s3E0A#, offset 88>
new  <	; Parameter pointer "<%s> <%s>\n" 88>

188:
old  <	; parameter s, offset 96>
new  <	; Parameter pointer s 96>

193:
old  <	; parameter t, offset 104>
new  <	; Parameter pointer t 104>

198:
old  <	; call function noellipse-ellipse printf, extra 16>
new  <	; Call printf 64 16>

207:
old  <	; post call>
new  <	; PostCall 64>

210:
old  <	; return>
new  <	; Return>

217:
old  <	; function end main33>
new  <	; FunctionEnd main33>

222:
old  <	; g_outDevice = stdout>
new  <	; Assign g_outDevice stdout>

227:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

230:
old  <	; parameter int1$88#, offset 48>
new  <	; Parameter signedchar 88 48>

234:
old  <	; call function noellipse-noellipse printChar>
new  <	; Call printChar 24 0>

241:
old  <	; post call>
new  <	; PostCall 24>

244:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

247:
old  <	; parameter int1$10#, offset 48>
new  <	; Parameter signedchar 10 48>

251:
old  <	; call function noellipse-noellipse printChar>
new  <	; Call printChar 24 0>

258:
old  <	; post call>
new  <	; PostCall 24>

261:
old  <	; return>
new  <	; Return>

268:
old  <	; function end main34>
new  <	; FunctionEnd main34>

273:
old  <	; initializer String>
new  <	; Initializer String Please write a character: >

279:
old  <	; initializer String>
new  <	; Initializer String %c>

285:
old  <	; initializer String>
new  <	; Initializer String You wrote the character '%c'.\n>

291:
old  <	; empty>
new  <	; Empty>

294:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 25 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

297:
old  <	; parameter string_Please20write20a20character3A20#, offset 49>
new  <	; Parameter pointer "Please write a character: " 49>

301:
old  <	; call function noellipse-ellipse printf, extra 0>
new  <	; Call printf 25 0>

309:
old  <	; post call>
new  <	; PostCall 25>

312:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 25 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

315:
old  <	; parameter string_25c#, offset 49>
new  <	; Parameter pointer "%c" 49>

319:
old  <	; Â£temporary19 = &c>
new  <	; Address Â£temporary19 c>

324:
old  <	; parameter Â£temporary19, offset 57>
new  <	; Parameter pointer Â£temporary19 57>

328:
old  <	; call function noellipse-ellipse scanf, extra 8>
new  <	; Call scanf 25 8>

337:
old  <	; post call>
new  <	; PostCall 25>

340:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 25 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

343:
old  <	; parameter string_You20wrote20the20character202725c272E0A#, offset 49>
new  <	; Parameter pointer "You wrote the character '%c'.\n" 49>

347:
old  <	; Â£temporary21 = int_to_int c (SignedChar -> SignedInt)>
new  <	; IntegralToIntegral Â£temporary21 c>

356:
old  <	; parameter Â£temporary21, offset 57>
new  <	; Parameter signedint Â£temporary21 57>

360:
old  <	; call function noellipse-ellipse printf, extra 4>
new  <	; Call printf 25 4>

369:
old  <	; post call>
new  <	; PostCall 25>

372:
old  <	; return>
new  <	; Return>

379:
old  <	; function end mainc>
new  <	; FunctionEnd mainc>

384:
old  <	; initializer String>
new  <	; Initializer String Please write an integer: >

390:
old  <	; initializer String>
new  <	; Initializer String %i>

396:
old  <	; initializer String>
new  <	; Initializer String You wrote the integer %i.\n>

402:
old  <	; empty>
new  <	; Empty>

405:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

408:
old  <	; parameter string_Please20write20an20integer3A20#, offset 52>
new  <	; Parameter pointer "Please write an integer: " 52>

412:
old  <	; call function noellipse-ellipse printf, extra 0>
new  <	; Call printf 28 0>

420:
old  <	; post call>
new  <	; PostCall 28>

423:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

426:
old  <	; parameter string_25i#, offset 52>
new  <	; Parameter pointer "%i" 52>

430:
old  <	; Â£temporary25 = &i>
new  <	; Address Â£temporary25 i>

435:
old  <	; parameter Â£temporary25, offset 60>
new  <	; Parameter pointer Â£temporary25 60>

439:
old  <	; call function noellipse-ellipse scanf, extra 8>
new  <	; Call scanf 28 8>

448:
old  <	; post call>
new  <	; PostCall 28>

451:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

454:
old  <	; parameter string_You20wrote20the20integer2025i2E0A#, offset 52>
new  <	; Parameter pointer "You wrote the integer %i.\n" 52>

458:
old  <	; parameter i, offset 60>
new  <	; Parameter signedint i 60>

463:
old  <	; call function noellipse-ellipse printf, extra 4>
new  <	; Call printf 28 4>

472:
old  <	; post call>
new  <	; PostCall 28>

475:
old  <	; return>
new  <	; Return>

482:
old  <	; function end maini>
new  <	; FunctionEnd maini>

487:
old  <	; initializer String>
new  <	; Initializer String Please write a string: >

493:
old  <	; initializer String>
new  <	; Initializer String %s>

499:
old  <	; initializer String>
new  <	; Initializer String You wrote the string "%s".\n>

505:
old  <	; empty>
new  <	; Empty>

508:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 44 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

511:
old  <	; parameter string_Please20write20a20string3A20#, offset 68>
new  <	; Parameter pointer "Please write a string: " 68>

515:
old  <	; call function noellipse-ellipse printf, extra 0>
new  <	; Call printf 44 0>

523:
old  <	; post call>
new  <	; PostCall 44>

526:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 44 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

529:
old  <	; parameter string_25s#, offset 68>
new  <	; Parameter pointer "%s" 68>

533:
old  <	; parameter s, offset 76>
new  <	; Parameter pointer s 76>

538:
old  <	; call function noellipse-ellipse scanf, extra 8>
new  <	; Call scanf 44 8>

547:
old  <	; post call>
new  <	; PostCall 44>

550:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 44 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

553:
old  <	; parameter string_You20wrote20the20string202225s222E0A#, offset 68>
new  <	; Parameter pointer "You wrote the string "%s".\n" 68>

557:
old  <	; parameter s, offset 76>
new  <	; Parameter pointer s 76>

562:
old  <	; call function noellipse-ellipse printf, extra 8>
new  <	; Call printf 44 8>

571:
old  <	; post call>
new  <	; PostCall 44>

574:
old  <	; return>
new  <	; Return>

581:
old  <	; function end mains>
new  <	; FunctionEnd mains>

586:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

589:
old  <	; call function noellipse-noellipse limits_test>
new  <	; Call limits_test 24 0>

596:
old  <	; post call>
new  <	; PostCall 24>

599:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

602:
old  <	; call function noellipse-noellipse time_test>
new  <	; Call time_test 24 0>

609:
old  <	; post call>
new  <	; PostCall 24>

612:
old  <	; return>
new  <	; Return>

619:
old  <	; function end maint>
new  <	; FunctionEnd maint>

624:
old  <	; initializer Double>
new  <	; Initializer Double 10>

630:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

633:
old  <	; call function noellipse-noellipse malloc_test>
new  <	; Call malloc_test 24 0>

640:
old  <	; post call>
new  <	; PostCall 24>

643:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

646:
old  <	; push float float8$10#>
new  <	; PushFloat 10>

650:
old  <	; parameter float8$10#, offset 48>
new  <	; Parameter double 10 48>

654:
old  <	; call function noellipse-noellipse setjmp_test>
new  <	; Call setjmp_test 24 0>

661:
old  <	; post call>
new  <	; PostCall 24>

664:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

667:
old  <	; push float float8$0#>
new  <	; PushFloat 0>

671:
old  <	; parameter float8$0#, offset 48>
new  <	; Parameter double 0 48>

675:
old  <	; call function noellipse-noellipse setjmp_test>
new  <	; Call setjmp_test 24 0>

682:
old  <	; post call>
new  <	; PostCall 24>

685:
old  <	; return>
new  <	; Return>

692:
old  <	; function end mainY>
new  <	; FunctionEnd mainY>

697:
old  <	; initializer String>
new  <	; Initializer String %i: %i <%c>\n>

703:
old  <	; initializer String>
new  <	; Initializer String \nargc: %i\n>

709:
old  <	; initializer String>
new  <	; Initializer String %i: <%s>\n>

715:
old  <	; initializer String>
new  <	; Initializer String \n>

721:
old  <	; initializer Pointer>
new  <	; Initializer Pointer 8>

727:
old  <	; empty>
new  <	; Empty>

730:
old  <	; index = int4$129#>
new  <	; Assign index 129>

734:
old  <	; if index >= int4$255# goto 17>
new  <	; SignedGreaterThanEqual 17 index 255>

739:
old  <	; Â£temporary41 = int_to_int index (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary41 index>

745:
old  <	; Â£temporary42 -> Â£temporary41 = *Â£temporary41>
new  <	; Dereference Â£temporary42 -> Â£temporary41 Â£temporary41 0>

748:
old  <	; c = Â£temporary42 -> Â£temporary41>
new  <	; Assign c Â£temporary42 -> Â£temporary41>

753:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 41 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

756:
old  <	; parameter string_25i3A2025i203C25c3E0A#, offset 65>
new  <	; Parameter pointer "%i: %i <%c>\n" 65>

760:
old  <	; parameter index, offset 73>
new  <	; Parameter signedint index 73>

765:
old  <	; Â£temporary43 = int_to_int c (SignedChar -> SignedInt)>
new  <	; IntegralToIntegral Â£temporary43 c>

774:
old  <	; parameter Â£temporary43, offset 77>
new  <	; Parameter signedint Â£temporary43 77>

778:
old  <	; Â£temporary44 = int_to_int c (SignedChar -> SignedInt)>
new  <	; IntegralToIntegral Â£temporary44 c>

787:
old  <	; parameter Â£temporary44, offset 81>
new  <	; Parameter signedint Â£temporary44 81>

791:
old  <	; call function noellipse-ellipse printf, extra 12>
new  <	; Call printf 41 12>

800:
old  <	; post call>
new  <	; PostCall 41>

803:
old  <	; index = index + int4$1#>
new  <	; BinaryAdd index index 1>

807:
old  <	; goto 2>
new  <	; Goto 2>

811:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

814:
old  <	; parameter string_0Aargc3A2025i0A#, offset 64>
new  <	; Parameter pointer "\nargc: %i\n" 64>

818:
old  <	; parameter argc, offset 72>
new  <	; Parameter signedint argc 72>

823:
old  <	; call function noellipse-ellipse printf, extra 4>
new  <	; Call printf 40 4>

832:
old  <	; post call>
new  <	; PostCall 40>

835:
old  <	; index = int4$0#>
new  <	; Assign index 0>

839:
old  <	; if index >= argc goto 36>
new  <	; SignedGreaterThanEqual 36 index argc>

845:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

848:
old  <	; parameter string_25i3A203C25s3E0A#, offset 64>
new  <	; Parameter pointer "%i: <%s>\n" 64>

852:
old  <	; parameter index, offset 72>
new  <	; Parameter signedint index 72>

857:
old  <	; Â£temporary50 = int_to_int index (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary50 index>

863:
old  <	; Â£temporary51 = Â£temporary50 * int8$8#>
new  <	; UnsignedMultiply Â£temporary51 Â£temporary50 8>

868:
old  <	; Â£temporary52 = argv + Â£temporary51>
new  <	; BinaryAdd Â£temporary52 argv Â£temporary51>

873:
old  <	; Â£temporary49 -> Â£temporary52 = *Â£temporary52>
new  <	; Dereference Â£temporary49 -> Â£temporary52 Â£temporary52 0>

876:
old  <	; parameter Â£temporary49 -> Â£temporary52, offset 76>
new  <	; Parameter pointer Â£temporary49 -> Â£temporary52 76>

881:
old  <	; call function noellipse-ellipse printf, extra 12>
new  <	; Call printf 40 12>

890:
old  <	; post call>
new  <	; PostCall 40>

893:
old  <	; index = index + int4$1#>
new  <	; BinaryAdd index index 1>

897:
old  <	; goto 23>
new  <	; Goto 23>

901:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

904:
old  <	; parameter string_0A#, offset 64>
new  <	; Parameter pointer "\n" 64>

908:
old  <	; call function noellipse-ellipse printf, extra 0>
new  <	; Call printf 40 0>

916:
old  <	; post call>
new  <	; PostCall 40>

919:
old  <	; index = int4$0#>
new  <	; Assign index 0>

923:
old  <	; Â£temporary56 = int_to_int index (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary56 index>

929:
old  <	; Â£temporary57 = Â£temporary56 * int8$8#>
new  <	; UnsignedMultiply Â£temporary57 Â£temporary56 8>

934:
old  <	; Â£temporary58 = argv + Â£temporary57>
new  <	; BinaryAdd Â£temporary58 argv Â£temporary57>

939:
old  <	; Â£temporary55 -> Â£temporary58 = *Â£temporary58>
new  <	; Dereference Â£temporary55 -> Â£temporary58 Â£temporary58 0>

942:
old  <	; if Â£temporary55 -> Â£temporary58 == int8$0# goto 58>
new  <	; Equal 58 Â£temporary55 -> Â£temporary58 0>

947:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

950:
old  <	; parameter string_25i3A203C25s3E0A#, offset 64>
new  <	; Parameter pointer "%i: <%s>\n" 64>

954:
old  <	; parameter index, offset 72>
new  <	; Parameter signedint index 72>

959:
old  <	; Â£temporary62 = int_to_int index (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary62 index>

965:
old  <	; Â£temporary63 = Â£temporary62 * int8$8#>
new  <	; UnsignedMultiply Â£temporary63 Â£temporary62 8>

970:
old  <	; Â£temporary64 = argv + Â£temporary63>
new  <	; BinaryAdd Â£temporary64 argv Â£temporary63>

975:
old  <	; Â£temporary61 -> Â£temporary64 = *Â£temporary64>
new  <	; Dereference Â£temporary61 -> Â£temporary64 Â£temporary64 0>

978:
old  <	; parameter Â£temporary61 -> Â£temporary64, offset 76>
new  <	; Parameter pointer Â£temporary61 -> Â£temporary64 76>

983:
old  <	; call function noellipse-ellipse printf, extra 12>
new  <	; Call printf 40 12>

992:
old  <	; post call>
new  <	; PostCall 40>

995:
old  <	; index = index + int4$1#>
new  <	; BinaryAdd index index 1>

999:
old  <	; goto 41>
new  <	; Goto 41>

1003:
old  <	; return>
new  <	; Return>

1010:
old  <	; function end mainX>
new  <	; FunctionEnd mainX>

1015:
old  <	; initializer SignedInt>
new  <	; Initializer SignedInt 0>

1021:
old  <	; initializer SignedInt>
new  <	; Initializer SignedInt 1>

1027:
old  <	; initializer SignedInt>
new  <	; Initializer SignedInt 2>

1033:
old  <	; initializer SignedInt>
new  <	; Initializer SignedInt 3>

1039:
old  <	; initializer String>
new  <	; Initializer String argc: %i\n>

1045:
old  <	; initializer String>
new  <	; Initializer String Hello!\n>

1051:
old  <	; initializer String>
new  <	; Initializer String Please write a character, a string, an integer, and a double: >

1057:
old  <	; initializer String>
new  <	; Initializer String %c %s %i %lf>

1063:
old  <	; initializer String>
new  <	; Initializer String You wrote the character '%c', the string "%s", the integer %i, and the double %f.\n>

1101:
old  <	; empty>
new  <	; Empty>

1104:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1107:
old  <	; parameter string_argc3A2025i0A#, offset 60>
new  <	; Parameter pointer "argc: %i\n" 60>

1111:
old  <	; parameter argc, offset 68>
new  <	; Parameter signedint argc 68>

1116:
old  <	; call function noellipse-ellipse printf, extra 4>
new  <	; Call printf 36 4>

1125:
old  <	; post call>
new  <	; PostCall 36>

1128:
old  <	; index = int4$0#>
new  <	; Assign index 0>

1132:
old  <	; if index >= argc goto 20>
new  <	; SignedGreaterThanEqual 20 index argc>

1138:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1141:
old  <	; parameter string_25i3A203C25s3E0A#, offset 64>
new  <	; Parameter pointer "%i: <%s>\n" 64>

1145:
old  <	; parameter index, offset 72>
new  <	; Parameter signedint index 72>

1150:
old  <	; Â£temporary70 = int_to_int index (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary70 index>

1156:
old  <	; Â£temporary71 = Â£temporary70 * int8$8#>
new  <	; UnsignedMultiply Â£temporary71 Â£temporary70 8>

1161:
old  <	; Â£temporary72 = argv + Â£temporary71>
new  <	; BinaryAdd Â£temporary72 argv Â£temporary71>

1166:
old  <	; Â£temporary69 -> Â£temporary72 = *Â£temporary72>
new  <	; Dereference Â£temporary69 -> Â£temporary72 Â£temporary72 0>

1169:
old  <	; parameter Â£temporary69 -> Â£temporary72, offset 76>
new  <	; Parameter pointer Â£temporary69 -> Â£temporary72 76>

1174:
old  <	; call function noellipse-ellipse printf, extra 12>
new  <	; Call printf 40 12>

1183:
old  <	; post call>
new  <	; PostCall 40>

1186:
old  <	; index = index + int4$1#>
new  <	; BinaryAdd index index 1>

1190:
old  <	; goto 7>
new  <	; Goto 7>

1194:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1197:
old  <	; parameter string_0A#, offset 64>
new  <	; Parameter pointer "\n" 64>

1201:
old  <	; call function noellipse-ellipse printf, extra 0>
new  <	; Call printf 40 0>

1209:
old  <	; post call>
new  <	; PostCall 40>

1212:
old  <	; index = int4$0#>
new  <	; Assign index 0>

1216:
old  <	; Â£temporary76 = int_to_int index (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary76 index>

1222:
old  <	; Â£temporary77 = Â£temporary76 * int8$8#>
new  <	; UnsignedMultiply Â£temporary77 Â£temporary76 8>

1227:
old  <	; Â£temporary78 = argv + Â£temporary77>
new  <	; BinaryAdd Â£temporary78 argv Â£temporary77>

1232:
old  <	; Â£temporary75 -> Â£temporary78 = *Â£temporary78>
new  <	; Dereference Â£temporary75 -> Â£temporary78 Â£temporary78 0>

1235:
old  <	; if Â£temporary75 -> Â£temporary78 == int8$0# goto 42>
new  <	; Equal 42 Â£temporary75 -> Â£temporary78 0>

1240:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1243:
old  <	; parameter string_25i3A203C25s3E0A#, offset 64>
new  <	; Parameter pointer "%i: <%s>\n" 64>

1247:
old  <	; parameter index, offset 72>
new  <	; Parameter signedint index 72>

1252:
old  <	; Â£temporary82 = int_to_int index (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary82 index>

1258:
old  <	; Â£temporary83 = Â£temporary82 * int8$8#>
new  <	; UnsignedMultiply Â£temporary83 Â£temporary82 8>

1263:
old  <	; Â£temporary84 = argv + Â£temporary83>
new  <	; BinaryAdd Â£temporary84 argv Â£temporary83>

1268:
old  <	; Â£temporary81 -> Â£temporary84 = *Â£temporary84>
new  <	; Dereference Â£temporary81 -> Â£temporary84 Â£temporary84 0>

1271:
old  <	; parameter Â£temporary81 -> Â£temporary84, offset 76>
new  <	; Parameter pointer Â£temporary81 -> Â£temporary84 76>

1276:
old  <	; call function noellipse-ellipse printf, extra 12>
new  <	; Call printf 40 12>

1285:
old  <	; post call>
new  <	; PostCall 40>

1288:
old  <	; index = index + int4$1#>
new  <	; BinaryAdd index index 1>

1292:
old  <	; goto 25>
new  <	; Goto 25>

1296:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1299:
old  <	; parameter string_0A#, offset 64>
new  <	; Parameter pointer "\n" 64>

1303:
old  <	; call function noellipse-ellipse printf, extra 0>
new  <	; Call printf 40 0>

1311:
old  <	; post call>
new  <	; PostCall 40>

1314:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 73 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1317:
old  <	; parameter int8$0#, offset 97>
new  <	; Parameter pointer 0 97>

1321:
old  <	; call function noellipse-noellipse mktime>
new  <	; Call mktime 73 0>

1328:
old  <	; post call>
new  <	; PostCall 73>

1331:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 73 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1334:
old  <	; parameter string_Hello210A#, offset 97>
new  <	; Parameter pointer "Hello!\n" 97>

1338:
old  <	; call function noellipse-ellipse printf, extra 0>
new  <	; Call printf 73 0>

1346:
old  <	; post call>
new  <	; PostCall 73>

1349:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 73 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1352:
old  <	; parameter string_Please20write20a20character2C20a20string2C20an20integer2C20and20a20double3A20#, offset 97>
new  <	; Parameter pointer "Please write a character, a string, an integer, and a double: " 97>

1356:
old  <	; call function noellipse-ellipse printf, extra 0>
new  <	; Call printf 73 0>

1364:
old  <	; post call>
new  <	; PostCall 73>

1367:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 73 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1370:
old  <	; parameter string_25c2025s2025i2025lf#, offset 97>
new  <	; Parameter pointer "%c %s %i %lf" 97>

1374:
old  <	; Â£temporary90 = &c>
new  <	; Address Â£temporary90 c>

1379:
old  <	; parameter Â£temporary90, offset 105>
new  <	; Parameter pointer Â£temporary90 105>

1383:
old  <	; parameter s, offset 113>
new  <	; Parameter pointer s 113>

1388:
old  <	; Â£temporary91 = &i>
new  <	; Address Â£temporary91 i>

1393:
old  <	; parameter Â£temporary91, offset 121>
new  <	; Parameter pointer Â£temporary91 121>

1397:
old  <	; Â£temporary92 = &d>
new  <	; Address Â£temporary92 d>

1402:
old  <	; parameter Â£temporary92, offset 129>
new  <	; Parameter pointer Â£temporary92 129>

1406:
old  <	; call function noellipse-ellipse scanf, extra 32>
new  <	; Call scanf 73 32>

1415:
old  <	; post call>
new  <	; PostCall 73>

1418:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 73 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1421:
old  <	; parameter string_You20wrote20the20character202725c272C20the20string202225s222C20the20integer2025i2C20and20the20double2025f2E0A#, offset 97>
new  <	; Parameter pointer "You wrote the character '%c', the string "%s", the integer %i, and the double %f.\n" 97>

1425:
old  <	; Â£temporary94 = int_to_int c (SignedChar -> SignedInt)>
new  <	; IntegralToIntegral Â£temporary94 c>

1434:
old  <	; parameter Â£temporary94, offset 105>
new  <	; Parameter signedint Â£temporary94 105>

1438:
old  <	; parameter s, offset 109>
new  <	; Parameter pointer s 109>

1443:
old  <	; parameter i, offset 117>
new  <	; Parameter signedint i 117>

1448:
old  <	; push float d>
new  <	; PushFloat d>

1452:
old  <	; parameter d, offset 121>
new  <	; Parameter double d 121>

1456:
old  <	; call function noellipse-ellipse printf, extra 24>
new  <	; Call printf 73 24>

1465:
old  <	; post call>
new  <	; PostCall 73>

1468:
old  <	; return>
new  <	; Return>

1482:
old  <	; function end main>
new  <	; FunctionEnd main>

1487:
old  <	; initializer String>
new  <	; Initializer String : >

1493:
old  <	; initializer String>
new  <	; Initializer String %lf>

1499:
old  <	; initializer String>
new  <	; Initializer String <%f>>

1505:
old  <	; empty>
new  <	; Empty>

1508:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1511:
old  <	; parameter string_3A20#, offset 56>
new  <	; Parameter pointer ": " 56>

1515:
old  <	; call function noellipse-ellipse printf, extra 0>
new  <	; Call printf 32 0>

1523:
old  <	; post call>
new  <	; PostCall 32>

1526:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1529:
old  <	; parameter string_25lf#, offset 56>
new  <	; Parameter pointer "%lf" 56>

1533:
old  <	; Â£temporary101 = &x>
new  <	; Address Â£temporary101 x>

1538:
old  <	; parameter Â£temporary101, offset 64>
new  <	; Parameter pointer Â£temporary101 64>

1542:
old  <	; call function noellipse-ellipse scanf, extra 8>
new  <	; Call scanf 32 8>

1551:
old  <	; post call>
new  <	; PostCall 32>

1554:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1557:
old  <	; parameter string_3C25f3E#, offset 56>
new  <	; Parameter pointer "<%f>" 56>

1561:
old  <	; push float x>
new  <	; PushFloat x>

1565:
old  <	; parameter x, offset 64>
new  <	; Parameter double x 64>

1569:
old  <	; call function noellipse-ellipse printf, extra 8>
new  <	; Call printf 32 8>

1578:
old  <	; post call>
new  <	; PostCall 32>

1581:
old  <	; return>
new  <	; Return>

1588:
old  <	; function end main3>
new  <	; FunctionEnd main3>

1593:
old  <	; initializer String>
new  <	; Initializer String ---------------------------------------------\n>

1599:
old  <	; initializer Double>
new  <	; Initializer Double 3.14>

1605:
old  <	; initializer Double>
new  <	; Initializer Double 2.71>

1611:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1614:
old  <	; push float float8$3.14#>
new  <	; PushFloat 3.14>

1618:
old  <	; parameter float8$3.14#, offset 48>
new  <	; Parameter double 3.14 48>

1622:
old  <	; call function noellipse-noellipse setjmp_test>
new  <	; Call setjmp_test 24 0>

1629:
old  <	; post call>
new  <	; PostCall 24>

1632:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1635:
old  <	; parameter string_2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D0A#, offset 48>
new  <	; Parameter pointer "---------------------------------------------\n" 48>

1639:
old  <	; call function noellipse-ellipse printf, extra 0>
new  <	; Call printf 24 0>

1647:
old  <	; post call>
new  <	; PostCall 24>

1650:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1653:
old  <	; push float float8$0#>
new  <	; PushFloat 0>

1657:
old  <	; parameter float8$0#, offset 48>
new  <	; Parameter double 0 48>

1661:
old  <	; call function noellipse-noellipse setjmp_test>
new  <	; Call setjmp_test 24 0>

1668:
old  <	; post call>
new  <	; PostCall 24>

1671:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1674:
old  <	; parameter string_2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D0A#, offset 48>
new  <	; Parameter pointer "---------------------------------------------\n" 48>

1678:
old  <	; call function noellipse-ellipse printf, extra 0>
new  <	; Call printf 24 0>

1686:
old  <	; post call>
new  <	; PostCall 24>

1689:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1692:
old  <	; push float float8$2.71#>
new  <	; PushFloat 2.71>

1696:
old  <	; parameter float8$2.71#, offset 48>
new  <	; Parameter double 2.71 48>

1700:
old  <	; call function noellipse-noellipse setjmp_test>
new  <	; Call setjmp_test 24 0>

1707:
old  <	; post call>
new  <	; PostCall 24>

1710:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1713:
old  <	; parameter string_2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D0A#, offset 48>
new  <	; Parameter pointer "---------------------------------------------\n" 48>

1717:
old  <	; call function noellipse-ellipse printf, extra 0>
new  <	; Call printf 24 0>

1725:
old  <	; post call>
new  <	; PostCall 24>

1728:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1731:
old  <	; push float float8$0#>
new  <	; PushFloat 0>

1735:
old  <	; parameter float8$0#, offset 48>
new  <	; Parameter double 0 48>

1739:
old  <	; call function noellipse-noellipse setjmp_test>
new  <	; Call setjmp_test 24 0>

1746:
old  <	; post call>
new  <	; PostCall 24>

1749:
old  <	; return>
new  <	; Return>

1756:
old  <	; function end mains2>
new  <	; FunctionEnd mains2>

1761:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1764:
old  <	; parameter int1$97#, offset 48>
new  <	; Parameter signedchar 97 48>

1768:
old  <	; call function noellipse-noellipse character_test>
new  <	; Call character_test 24 0>

1775:
old  <	; post call>
new  <	; PostCall 24>

1778:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1781:
old  <	; parameter int1$66#, offset 48>
new  <	; Parameter signedchar 66 48>

1785:
old  <	; call function noellipse-noellipse character_test>
new  <	; Call character_test 24 0>

1792:
old  <	; post call>
new  <	; PostCall 24>

1795:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1798:
old  <	; parameter int1$49#, offset 48>
new  <	; Parameter signedchar 49 48>

1802:
old  <	; call function noellipse-noellipse character_test>
new  <	; Call character_test 24 0>

1809:
old  <	; post call>
new  <	; PostCall 24>

1812:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1815:
old  <	; parameter int1$46#, offset 48>
new  <	; Parameter signedchar 46 48>

1819:
old  <	; call function noellipse-noellipse character_test>
new  <	; Call character_test 24 0>

1826:
old  <	; post call>
new  <	; PostCall 24>

1829:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1832:
old  <	; parameter int1$10#, offset 48>
new  <	; Parameter signedchar 10 48>

1836:
old  <	; call function noellipse-noellipse character_test>
new  <	; Call character_test 24 0>

1843:
old  <	; post call>
new  <	; PostCall 24>

1846:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1849:
old  <	; parameter int1$102#, offset 48>
new  <	; Parameter signedchar 102 48>

1853:
old  <	; call function noellipse-noellipse character_test>
new  <	; Call character_test 24 0>

1860:
old  <	; post call>
new  <	; PostCall 24>

1863:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1866:
old  <	; parameter int1$103#, offset 48>
new  <	; Parameter signedchar 103 48>

1870:
old  <	; call function noellipse-noellipse character_test>
new  <	; Call character_test 24 0>

1877:
old  <	; post call>
new  <	; PostCall 24>

1880:
old  <	; return>
new  <	; Return>

1887:
old  <	; function end char_main>
new  <	; FunctionEnd char_main>

1892:
old  <	; initializer String>
new  <	; Initializer String Please write a number (not 6 or 7): >

1898:
old  <	; initializer String>
new  <	; Initializer String Assertion failed: "%s" in file %s at line %i\n>

1904:
old  <	; initializer String>
new  <	; Initializer String n != 6>

1910:
old  <	; initializer String>
new  <	; Initializer String C:\Users\Stefan\Documents\vagrant\homestead\code\code\Main.c>

1916:
old  <	; n = int4$0#>
new  <	; Assign n 0>

1920:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1923:
old  <	; parameter string_Please20write20a20number2028not20620or207293A20#, offset 52>
new  <	; Parameter pointer "Please write a number (not 6 or 7): " 52>

1927:
old  <	; call function noellipse-ellipse printf, extra 0>
new  <	; Call printf 28 0>

1935:
old  <	; post call>
new  <	; PostCall 28>

1938:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1941:
old  <	; parameter string_25i#, offset 52>
new  <	; Parameter pointer "%i" 52>

1945:
old  <	; Â£temporary125 = &n>
new  <	; Address Â£temporary125 n>

1950:
old  <	; parameter Â£temporary125, offset 60>
new  <	; Parameter pointer Â£temporary125 60>

1954:
old  <	; call function noellipse-ellipse scanf, extra 8>
new  <	; Call scanf 28 8>

1963:
old  <	; post call>
new  <	; PostCall 28>

1966:
old  <	; if n != int4$6# goto 23>
new  <	; NotEqual 23 n 6>

1971:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1974:
old  <	; parameter stderr, offset 52>
new  <	; Parameter pointer stderr 52>

1979:
old  <	; parameter string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#, offset 60>
new  <	; Parameter pointer "Assertion failed: "%s" in file %s at line %i\n" 60>

1983:
old  <	; parameter string_n20213D206#, offset 68>
new  <	; Parameter pointer "n != 6" 68>

1987:
old  <	; parameter string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CMain2Ec#, offset 76>
new  <	; Parameter pointer "C:\Users\Stefan\Documents\vagrant\homestead\code\code\Main.c" 76>

1991:
old  <	; parameter int4$847#, offset 84>
new  <	; Parameter signedint 847 84>

1995:
old  <	; call function noellipse-ellipse fprintf, extra 20>
new  <	; Call fprintf 28 20>

2004:
old  <	; post call>
new  <	; PostCall 28>

2007:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2010:
old  <	; call function noellipse-noellipse abort>
new  <	; Call abort 28 0>

2017:
old  <	; post call>
new  <	; PostCall 28>

2020:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2023:
old  <	; parameter n, offset 52>
new  <	; Parameter signedint n 52>

2028:
old  <	; call function noellipse-noellipse assert_test2>
new  <	; Call assert_test2 28 0>

2035:
old  <	; post call>
new  <	; PostCall 28>

2038:
old  <	; return>
new  <	; Return>

2045:
old  <	; function end assert_test>
new  <	; FunctionEnd assert_test>

2050:
old  <	; initializer String>
new  <	; Initializer String n != 7>

2056:
old  <	; if n != int4$7# goto 12>
new  <	; NotEqual 12 n 7>

2061:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2064:
old  <	; parameter stderr, offset 52>
new  <	; Parameter pointer stderr 52>

2069:
old  <	; parameter string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#, offset 60>
new  <	; Parameter pointer "Assertion failed: "%s" in file %s at line %i\n" 60>

2073:
old  <	; parameter string_n20213D207#, offset 68>
new  <	; Parameter pointer "n != 7" 68>

2077:
old  <	; parameter string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CMain2Ec#, offset 76>
new  <	; Parameter pointer "C:\Users\Stefan\Documents\vagrant\homestead\code\code\Main.c" 76>

2081:
old  <	; parameter int4$852#, offset 84>
new  <	; Parameter signedint 852 84>

2085:
old  <	; call function noellipse-ellipse fprintf, extra 20>
new  <	; Call fprintf 28 20>

2094:
old  <	; post call>
new  <	; PostCall 28>

2097:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2100:
old  <	; call function noellipse-noellipse abort>
new  <	; Call abort 28 0>

2107:
old  <	; post call>
new  <	; PostCall 28>

2110:
old  <	; return>
new  <	; Return>

2117:
old  <	; function end assert_test2>
new  <	; FunctionEnd assert_test2>

20:
old  <	; initializer Pointer>
new  <	; Initializer Pointer 0>

26:
old  <	; initializer String>
new  <	; Initializer String Assertion failed: "%s" in file %s at line %i\n>

32:
old  <	; initializer String>
new  <	; Initializer String memorySize >= 0>

38:
old  <	; initializer String>
new  <	; Initializer String C:\Users\Stefan\Documents\vagrant\homestead\code\code\Malloc.c>

44:
old  <	; if memorySize >= int4$0# goto 12>
new  <	; SignedGreaterThanEqual 12 memorySize 0>

49:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

52:
old  <	; parameter stderr, offset 52>
new  <	; Parameter pointer stderr 52>

57:
old  <	; parameter string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#, offset 60>
new  <	; Parameter pointer "Assertion failed: "%s" in file %s at line %i\n" 60>

61:
old  <	; parameter string_memorySize203E3D200#, offset 68>
new  <	; Parameter pointer "memorySize >= 0" 68>

65:
old  <	; parameter string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CMalloc2Ec#, offset 76>
new  <	; Parameter pointer "C:\Users\Stefan\Documents\vagrant\homestead\code\code\Malloc.c" 76>

69:
old  <	; parameter int4$25#, offset 84>
new  <	; Parameter signedint 25 84>

73:
old  <	; call function noellipse-ellipse fprintf, extra 20>
new  <	; Call fprintf 28 20>

82:
old  <	; post call>
new  <	; PostCall 28>

85:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

88:
old  <	; call function noellipse-noellipse abort>
new  <	; Call abort 28 0>

95:
old  <	; post call>
new  <	; PostCall 28>

98:
old  <	; if memorySize != int4$0# goto 14>
new  <	; NotEqual 14 memorySize 0>

103:
old  <	; return int8$0#>
new  <	; Return 0>

111:
old  <	; Â£temporary142 = int_to_int memorySize (SignedInt -> Unsigned_Int)>
new  <	; IntegralToIntegral Â£temporary142 memorySize>

115:
old  <	; newBlockSize = Â£temporary142 + int4$12#>
new  <	; BinaryAdd newBlockSize Â£temporary142 12>

120:
old  <	; minGap = int4$0#>
new  <	; Assign minGap 0>

124:
old  <	; stack_top>
new  <	; StackTop Â£temporary144>

128:
old  <	; Â£temporary145 = Â£temporary144 + int8$1048572#>
new  <	; BinaryAdd Â£temporary145 Â£temporary144 1048572>

132:
old  <	; Â£temporary147 = int_to_int Â£temporary145 (Pointer -> Unsigned_Int)>
new  <	; IntegralToIntegral Â£temporary147 Â£temporary145>

135:
old  <	; lastAddress = Â£temporary147>
new  <	; Assign lastAddress Â£temporary147>

139:
old  <	; minBlockPtr = int8$0#>
new  <	; Assign minBlockPtr 0>

143:
old  <	; minPrevBlockPtr = int8$0#>
new  <	; Assign minPrevBlockPtr 0>

147:
old  <	; prevBlockPtr = int8$0#>
new  <	; Assign prevBlockPtr 0>

151:
old  <	; currBlockPtr = g_firstBlockPtr>
new  <	; Assign currBlockPtr g_firstBlockPtr>

156:
old  <	; if currBlockPtr == int8$0# goto 43>
new  <	; Equal 43 currBlockPtr 0>

161:
old  <	; Â£temporary149 = int_to_int currBlockPtr (Pointer -> Unsigned_Int)>
new  <	; IntegralToIntegral Â£temporary149 currBlockPtr>

165:
old  <	; currAddress = Â£temporary149>
new  <	; Assign currAddress Â£temporary149>

169:
old  <	; Â£temporary150 -> currBlockPtr = *currBlockPtr>
new  <	; Dereference Â£temporary150 -> currBlockPtr currBlockPtr 0>

173:
old  <	; Â£temporary151 = currAddress + Â£temporary150 -> currBlockPtr>
new  <	; BinaryAdd Â£temporary151 currAddress Â£temporary150 -> currBlockPtr>

178:
old  <	; Â£temporary152 = Â£temporary151 + int4$12#>
new  <	; BinaryAdd Â£temporary152 Â£temporary151 12>

182:
old  <	; currGap = lastAddress - Â£temporary152>
new  <	; BinarySubtract currGap lastAddress Â£temporary152>

188:
old  <	; if newBlockSize > currGap goto 38>
new  <	; UnsignedGreaterThan 38 newBlockSize currGap>

194:
old  <	; if minGap == int4$0# goto 35>
new  <	; Equal 35 minGap 0>

199:
old  <	; if currGap >= minGap goto 38>
new  <	; UnsignedGreaterThanEqual 38 currGap minGap>

205:
old  <	; minGap = currGap>
new  <	; Assign minGap currGap>

210:
old  <	; minBlockPtr = currBlockPtr>
new  <	; Assign minBlockPtr currBlockPtr>

215:
old  <	; minPrevBlockPtr = prevBlockPtr>
new  <	; Assign minPrevBlockPtr prevBlockPtr>

220:
old  <	; lastAddress = currAddress>
new  <	; Assign lastAddress currAddress>

225:
old  <	; prevBlockPtr = currBlockPtr>
new  <	; Assign prevBlockPtr currBlockPtr>

230:
old  <	; Â£temporary159 -> currBlockPtr = *currBlockPtr>
new  <	; Dereference Â£temporary159 -> currBlockPtr currBlockPtr 0>

234:
old  <	; currBlockPtr = Â£temporary159 -> currBlockPtr>
new  <	; Assign currBlockPtr Â£temporary159 -> currBlockPtr>

239:
old  <	; goto 25>
new  <	; Goto 25>

243:
old  <	; if minBlockPtr == int8$0# goto 62>
new  <	; Equal 62 minBlockPtr 0>

248:
old  <	; Â£temporary161 = int_to_int minBlockPtr (Pointer -> Unsigned_Int)>
new  <	; IntegralToIntegral Â£temporary161 minBlockPtr>

252:
old  <	; Â£temporary162 -> minBlockPtr = *minBlockPtr>
new  <	; Dereference Â£temporary162 -> minBlockPtr minBlockPtr 0>

256:
old  <	; Â£temporary163 = Â£temporary161 + Â£temporary162 -> minBlockPtr>
new  <	; BinaryAdd Â£temporary163 Â£temporary161 Â£temporary162 -> minBlockPtr>

260:
old  <	; newAddress = Â£temporary163 + int4$12#>
new  <	; BinaryAdd newAddress Â£temporary163 12>

265:
old  <	; Â£temporary165 = int_to_int newAddress (Unsigned_Int -> Pointer)>
new  <	; IntegralToIntegral Â£temporary165 newAddress>

271:
old  <	; newBlockPtr = Â£temporary165>
new  <	; Assign newBlockPtr Â£temporary165>

275:
old  <	; Â£temporary166 -> newBlockPtr = *newBlockPtr>
new  <	; Dereference Â£temporary166 -> newBlockPtr newBlockPtr 0>

279:
old  <	; Â£temporary166 -> newBlockPtr = memorySize>
new  <	; Assign Â£temporary166 -> newBlockPtr memorySize>

284:
old  <	; Â£temporary167 -> newBlockPtr = *newBlockPtr>
new  <	; Dereference Â£temporary167 -> newBlockPtr newBlockPtr 0>

288:
old  <	; Â£temporary167 -> newBlockPtr = minBlockPtr>
new  <	; Assign Â£temporary167 -> newBlockPtr minBlockPtr>

293:
old  <	; if minPrevBlockPtr == int8$0# goto 58>
new  <	; Equal 58 minPrevBlockPtr 0>

298:
old  <	; Â£temporary169 -> minPrevBlockPtr = *minPrevBlockPtr>
new  <	; Dereference Â£temporary169 -> minPrevBlockPtr minPrevBlockPtr 0>

302:
old  <	; Â£temporary169 -> minPrevBlockPtr = newBlockPtr>
new  <	; Assign Â£temporary169 -> minPrevBlockPtr newBlockPtr>

307:
old  <	; goto 59>
new  <	; Goto 59>

311:
old  <	; g_firstBlockPtr = newBlockPtr>
new  <	; Assign g_firstBlockPtr newBlockPtr>

316:
old  <	; Â£temporary170 = newAddress + int4$12#>
new  <	; BinaryAdd Â£temporary170 newAddress 12>

321:
old  <	; Â£temporary171 = int_to_int Â£temporary170 (Unsigned_Int -> Pointer)>
new  <	; IntegralToIntegral Â£temporary171 Â£temporary170>

326:
old  <	; return Â£temporary171>
new  <	; Return Â£temporary171>

333:
old  <	; newAddress = lastAddress - newBlockSize>
new  <	; BinarySubtract newAddress lastAddress newBlockSize>

339:
old  <	; Â£temporary173 = rbp>
new  <	; InspectRegister Â£temporary173 rbp>

342:
old  <	; Â£temporary174 = int_to_int Â£temporary173 (UnsignedLongInt -> Unsigned_Int)>
new  <	; IntegralToIntegral Â£temporary174 Â£temporary173>

345:
old  <	; stackTop = Â£temporary174>
new  <	; Assign stackTop Â£temporary174>

349:
old  <	; if stackTop > newAddress goto 81>
new  <	; UnsignedGreaterThan 81 stackTop newAddress>

355:
old  <	; Â£temporary176 = int_to_int newAddress (Unsigned_Int -> Pointer)>
new  <	; IntegralToIntegral Â£temporary176 newAddress>

361:
old  <	; newBlockPtr = Â£temporary176>
new  <	; Assign newBlockPtr Â£temporary176>

365:
old  <	; Â£temporary177 -> newBlockPtr = *newBlockPtr>
new  <	; Dereference Â£temporary177 -> newBlockPtr newBlockPtr 0>

369:
old  <	; Â£temporary177 -> newBlockPtr = memorySize>
new  <	; Assign Â£temporary177 -> newBlockPtr memorySize>

374:
old  <	; Â£temporary178 -> newBlockPtr = *newBlockPtr>
new  <	; Dereference Â£temporary178 -> newBlockPtr newBlockPtr 0>

378:
old  <	; Â£temporary178 -> newBlockPtr = int8$0#>
new  <	; Assign Â£temporary178 -> newBlockPtr 0>

382:
old  <	; if prevBlockPtr == int8$0# goto 77>
new  <	; Equal 77 prevBlockPtr 0>

387:
old  <	; Â£temporary180 -> prevBlockPtr = *prevBlockPtr>
new  <	; Dereference Â£temporary180 -> prevBlockPtr prevBlockPtr 0>

391:
old  <	; Â£temporary180 -> prevBlockPtr = newBlockPtr>
new  <	; Assign Â£temporary180 -> prevBlockPtr newBlockPtr>

396:
old  <	; goto 78>
new  <	; Goto 78>

400:
old  <	; g_firstBlockPtr = newBlockPtr>
new  <	; Assign g_firstBlockPtr newBlockPtr>

405:
old  <	; Â£temporary181 = newAddress + int4$12#>
new  <	; BinaryAdd Â£temporary181 newAddress 12>

410:
old  <	; Â£temporary182 = int_to_int Â£temporary181 (Unsigned_Int -> Pointer)>
new  <	; IntegralToIntegral Â£temporary182 Â£temporary181>

415:
old  <	; return Â£temporary182>
new  <	; Return Â£temporary182>

422:
old  <	; return int8$0#>
new  <	; Return 0>

430:
old  <	; function end malloc>
new  <	; FunctionEnd malloc>

435:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

438:
old  <	; Â£temporary183 = number * size>
new  <	; SignedMultiply Â£temporary183 number size>

444:
old  <	; parameter Â£temporary183, offset 56>
new  <	; Parameter signedint Â£temporary183 56>

448:
old  <	; call function noellipse-noellipse malloc>
new  <	; Call malloc 32 0>

455:
old  <	; post call>
new  <	; PostCall 32>

458:
old  <	; Â£temporary184 = return_value>
new  <	; GetReturnValue Â£temporary184>

461:
old  <	; pointer = Â£temporary184>
new  <	; Assign pointer Â£temporary184>

465:
old  <	; if pointer == int8$0# goto 14>
new  <	; Equal 14 pointer 0>

470:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

473:
old  <	; parameter pointer, offset 64>
new  <	; Parameter pointer pointer 64>

478:
old  <	; parameter int4$0#, offset 72>
new  <	; Parameter signedint 0 72>

482:
old  <	; parameter size, offset 76>
new  <	; Parameter signedint size 76>

487:
old  <	; call function noellipse-noellipse memset>
new  <	; Call memset 40 0>

494:
old  <	; post call>
new  <	; PostCall 40>

497:
old  <	; return pointer>
new  <	; Return pointer>

505:
old  <	; function end calloc>
new  <	; FunctionEnd calloc>

510:
old  <	; if freeMemoryPtr != int8$0# goto 2>
new  <	; NotEqual 2 freeMemoryPtr 0>

515:
old  <	; return>
new  <	; Return>

522:
old  <	; Â£temporary188 = int_to_int freeMemoryPtr (Pointer -> Unsigned_Int)>
new  <	; IntegralToIntegral Â£temporary188 freeMemoryPtr>

526:
old  <	; Â£temporary189 = Â£temporary188 - int4$12#>
new  <	; BinarySubtract Â£temporary189 Â£temporary188 12>

530:
old  <	; Â£temporary190 = int_to_int Â£temporary189 (Unsigned_Int -> Pointer)>
new  <	; IntegralToIntegral Â£temporary190 Â£temporary189>

535:
old  <	; freeBlockPtr = Â£temporary190>
new  <	; Assign freeBlockPtr Â£temporary190>

539:
old  <	; prevBlockPtr = int8$0#>
new  <	; Assign prevBlockPtr 0>

543:
old  <	; currBlockPtr = g_firstBlockPtr>
new  <	; Assign currBlockPtr g_firstBlockPtr>

548:
old  <	; if currBlockPtr == int8$0# goto 32>
new  <	; Equal 32 currBlockPtr 0>

553:
old  <	; if currBlockPtr != freeBlockPtr goto 28>
new  <	; NotEqual 28 currBlockPtr freeBlockPtr>

559:
old  <	; if prevBlockPtr != int8$0# goto 15>
new  <	; NotEqual 15 prevBlockPtr 0>

564:
old  <	; Â£temporary194 -> currBlockPtr = *currBlockPtr>
new  <	; Dereference Â£temporary194 -> currBlockPtr currBlockPtr 0>

568:
old  <	; if Â£temporary194 -> currBlockPtr != int8$0# goto 15>
new  <	; NotEqual 15 Â£temporary194 -> currBlockPtr 0>

573:
old  <	; g_firstBlockPtr = int8$0#>
new  <	; Assign g_firstBlockPtr 0>

577:
old  <	; goto 27>
new  <	; Goto 27>

581:
old  <	; if prevBlockPtr != int8$0# goto 19>
new  <	; NotEqual 19 prevBlockPtr 0>

586:
old  <	; Â£temporary198 -> currBlockPtr = *currBlockPtr>
new  <	; Dereference Â£temporary198 -> currBlockPtr currBlockPtr 0>

590:
old  <	; g_firstBlockPtr = Â£temporary198 -> currBlockPtr>
new  <	; Assign g_firstBlockPtr Â£temporary198 -> currBlockPtr>

595:
old  <	; goto 27>
new  <	; Goto 27>

599:
old  <	; Â£temporary199 -> currBlockPtr = *currBlockPtr>
new  <	; Dereference Â£temporary199 -> currBlockPtr currBlockPtr 0>

603:
old  <	; if Â£temporary199 -> currBlockPtr != int8$0# goto 24>
new  <	; NotEqual 24 Â£temporary199 -> currBlockPtr 0>

608:
old  <	; Â£temporary201 -> prevBlockPtr = *prevBlockPtr>
new  <	; Dereference Â£temporary201 -> prevBlockPtr prevBlockPtr 0>

612:
old  <	; Â£temporary201 -> prevBlockPtr = int8$0#>
new  <	; Assign Â£temporary201 -> prevBlockPtr 0>

616:
old  <	; goto 27>
new  <	; Goto 27>

620:
old  <	; Â£temporary202 -> prevBlockPtr = *prevBlockPtr>
new  <	; Dereference Â£temporary202 -> prevBlockPtr prevBlockPtr 0>

624:
old  <	; Â£temporary203 -> currBlockPtr = *currBlockPtr>
new  <	; Dereference Â£temporary203 -> currBlockPtr currBlockPtr 0>

628:
old  <	; Â£temporary202 -> prevBlockPtr = Â£temporary203 -> currBlockPtr>
new  <	; Assign Â£temporary202 -> prevBlockPtr Â£temporary203 -> currBlockPtr>

633:
old  <	; return>
new  <	; Return>

640:
old  <	; prevBlockPtr = currBlockPtr>
new  <	; Assign prevBlockPtr currBlockPtr>

645:
old  <	; Â£temporary204 -> currBlockPtr = *currBlockPtr>
new  <	; Dereference Â£temporary204 -> currBlockPtr currBlockPtr 0>

649:
old  <	; currBlockPtr = Â£temporary204 -> currBlockPtr>
new  <	; Assign currBlockPtr Â£temporary204 -> currBlockPtr>

654:
old  <	; goto 8>
new  <	; Goto 8>

658:
old  <	; return>
new  <	; Return>

665:
old  <	; function end free>
new  <	; FunctionEnd free>

670:
old  <	; initializer String>
new  <	; Initializer String newMemorySize >= 0>

676:
old  <	; initializer String>
new  <	; Initializer String ( oldMemoryPtr != NULL ) || ( newMemorySize > 0 )>

682:
old  <	; if newMemorySize >= int4$0# goto 12>
new  <	; SignedGreaterThanEqual 12 newMemorySize 0>

687:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

690:
old  <	; parameter stderr, offset 60>
new  <	; Parameter pointer stderr 60>

695:
old  <	; parameter string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#, offset 68>
new  <	; Parameter pointer "Assertion failed: "%s" in file %s at line %i\n" 68>

699:
old  <	; parameter string_newMemorySize203E3D200#, offset 76>
new  <	; Parameter pointer "newMemorySize >= 0" 76>

703:
old  <	; parameter string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CMalloc2Ec#, offset 84>
new  <	; Parameter pointer "C:\Users\Stefan\Documents\vagrant\homestead\code\code\Malloc.c" 84>

707:
old  <	; parameter int4$259#, offset 92>
new  <	; Parameter signedint 259 92>

711:
old  <	; call function noellipse-ellipse fprintf, extra 20>
new  <	; Call fprintf 36 20>

720:
old  <	; post call>
new  <	; PostCall 36>

723:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

726:
old  <	; call function noellipse-noellipse abort>
new  <	; Call abort 36 0>

733:
old  <	; post call>
new  <	; PostCall 36>

736:
old  <	; if oldMemoryPtr != int8$0# goto 25>
new  <	; NotEqual 25 oldMemoryPtr 0>

741:
old  <	; if newMemorySize > int4$0# goto 25>
new  <	; SignedGreaterThan 25 newMemorySize 0>

746:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

749:
old  <	; parameter stderr, offset 60>
new  <	; Parameter pointer stderr 60>

754:
old  <	; parameter string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#, offset 68>
new  <	; Parameter pointer "Assertion failed: "%s" in file %s at line %i\n" 68>

758:
old  <	; parameter string_2820oldMemoryPtr20213D20NULL2029207C7C202820newMemorySize203E2002029#, offset 76>
new  <	; Parameter pointer "( oldMemoryPtr != NULL ) || ( newMemorySize > 0 )" 76>

762:
old  <	; parameter string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CMalloc2Ec#, offset 84>
new  <	; Parameter pointer "C:\Users\Stefan\Documents\vagrant\homestead\code\code\Malloc.c" 84>

766:
old  <	; parameter int4$260#, offset 92>
new  <	; Parameter signedint 260 92>

770:
old  <	; call function noellipse-ellipse fprintf, extra 20>
new  <	; Call fprintf 36 20>

779:
old  <	; post call>
new  <	; PostCall 36>

782:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

785:
old  <	; call function noellipse-noellipse abort>
new  <	; Call abort 36 0>

792:
old  <	; post call>
new  <	; PostCall 36>

795:
old  <	; if oldMemoryPtr != int8$0# goto 32>
new  <	; NotEqual 32 oldMemoryPtr 0>

800:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

803:
old  <	; parameter newMemorySize, offset 60>
new  <	; Parameter signedint newMemorySize 60>

808:
old  <	; call function noellipse-noellipse malloc>
new  <	; Call malloc 36 0>

815:
old  <	; post call>
new  <	; PostCall 36>

818:
old  <	; Â£temporary216 = return_value>
new  <	; GetReturnValue Â£temporary216>

821:
old  <	; return Â£temporary216>
new  <	; Return Â£temporary216>

828:
old  <	; if newMemorySize != int4$0# goto 38>
new  <	; NotEqual 38 newMemorySize 0>

833:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

836:
old  <	; parameter oldMemoryPtr, offset 60>
new  <	; Parameter pointer oldMemoryPtr 60>

841:
old  <	; call function noellipse-noellipse free>
new  <	; Call free 36 0>

848:
old  <	; post call>
new  <	; PostCall 36>

851:
old  <	; return int8$0#>
new  <	; Return 0>

859:
old  <	; Â£temporary219 = int_to_int newMemorySize (SignedInt -> Unsigned_Int)>
new  <	; IntegralToIntegral Â£temporary219 newMemorySize>

863:
old  <	; newBlockSize = Â£temporary219 + int4$12#>
new  <	; BinaryAdd newBlockSize Â£temporary219 12>

868:
old  <	; Â£temporary221 = int_to_int oldMemoryPtr (Pointer -> Unsigned_Int)>
new  <	; IntegralToIntegral Â£temporary221 oldMemoryPtr>

872:
old  <	; Â£temporary222 = Â£temporary221 - int4$12#>
new  <	; BinarySubtract Â£temporary222 Â£temporary221 12>

876:
old  <	; Â£temporary223 = int_to_int Â£temporary222 (Unsigned_Int -> Pointer)>
new  <	; IntegralToIntegral Â£temporary223 Â£temporary222>

881:
old  <	; oldBlockPtr = Â£temporary223>
new  <	; Assign oldBlockPtr Â£temporary223>

885:
old  <	; Â£temporary224 -> oldBlockPtr = *oldBlockPtr>
new  <	; Dereference Â£temporary224 -> oldBlockPtr oldBlockPtr 0>

889:
old  <	; if newBlockSize > Â£temporary224 -> oldBlockPtr goto 49>
new  <	; UnsignedGreaterThan 49 newBlockSize Â£temporary224 -> oldBlockPtr>

895:
old  <	; Â£temporary226 -> oldBlockPtr = *oldBlockPtr>
new  <	; Dereference Â£temporary226 -> oldBlockPtr oldBlockPtr 0>

899:
old  <	; Â£temporary226 -> oldBlockPtr = newBlockSize>
new  <	; Assign Â£temporary226 -> oldBlockPtr newBlockSize>

904:
old  <	; return oldMemoryPtr>
new  <	; Return oldMemoryPtr>

912:
old  <	; stack_top>
new  <	; StackTop Â£temporary227>

916:
old  <	; Â£temporary228 = Â£temporary227 + int8$1048572#>
new  <	; BinaryAdd Â£temporary228 Â£temporary227 1048572>

920:
old  <	; Â£temporary230 = int_to_int Â£temporary228 (Pointer -> Unsigned_Int)>
new  <	; IntegralToIntegral Â£temporary230 Â£temporary228>

923:
old  <	; lastAddress = Â£temporary230>
new  <	; Assign lastAddress Â£temporary230>

927:
old  <	; currBlockPtr = g_firstBlockPtr>
new  <	; Assign currBlockPtr g_firstBlockPtr>

932:
old  <	; if currBlockPtr == int8$0# goto 67>
new  <	; Equal 67 currBlockPtr 0>

937:
old  <	; if currBlockPtr != oldBlockPtr goto 62>
new  <	; NotEqual 62 currBlockPtr oldBlockPtr>

943:
old  <	; Â£temporary233 = int_to_int currBlockPtr (Pointer -> Unsigned_Int)>
new  <	; IntegralToIntegral Â£temporary233 currBlockPtr>

947:
old  <	; availableSize = lastAddress - Â£temporary233>
new  <	; BinarySubtract availableSize lastAddress Â£temporary233>

953:
old  <	; if availableSize < newBlockSize goto 67>
new  <	; UnsignedLessThan 67 availableSize newBlockSize>

959:
old  <	; Â£temporary236 -> oldBlockPtr = *oldBlockPtr>
new  <	; Dereference Â£temporary236 -> oldBlockPtr oldBlockPtr 0>

963:
old  <	; Â£temporary236 -> oldBlockPtr = newBlockSize>
new  <	; Assign Â£temporary236 -> oldBlockPtr newBlockSize>

968:
old  <	; return oldMemoryPtr>
new  <	; Return oldMemoryPtr>

976:
old  <	; Â£temporary237 = int_to_int currBlockPtr (Pointer -> Unsigned_Int)>
new  <	; IntegralToIntegral Â£temporary237 currBlockPtr>

980:
old  <	; lastAddress = Â£temporary237>
new  <	; Assign lastAddress Â£temporary237>

984:
old  <	; Â£temporary238 -> currBlockPtr = *currBlockPtr>
new  <	; Dereference Â£temporary238 -> currBlockPtr currBlockPtr 0>

988:
old  <	; currBlockPtr = Â£temporary238 -> currBlockPtr>
new  <	; Assign currBlockPtr Â£temporary238 -> currBlockPtr>

993:
old  <	; goto 54>
new  <	; Goto 54>

997:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 60 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1000:
old  <	; parameter newMemorySize, offset 84>
new  <	; Parameter signedint newMemorySize 84>

1005:
old  <	; call function noellipse-noellipse malloc>
new  <	; Call malloc 60 0>

1012:
old  <	; post call>
new  <	; PostCall 60>

1015:
old  <	; Â£temporary239 = return_value>
new  <	; GetReturnValue Â£temporary239>

1018:
old  <	; newMemoryPtr = Â£temporary239>
new  <	; Assign newMemoryPtr Â£temporary239>

1022:
old  <	; if newMemoryPtr == int8$0# goto 85>
new  <	; Equal 85 newMemoryPtr 0>

1027:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 68 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1030:
old  <	; parameter newMemoryPtr, offset 92>
new  <	; Parameter pointer newMemoryPtr 92>

1035:
old  <	; parameter oldMemoryPtr, offset 100>
new  <	; Parameter pointer oldMemoryPtr 100>

1040:
old  <	; parameter newMemorySize, offset 108>
new  <	; Parameter signedint newMemorySize 108>

1045:
old  <	; call function noellipse-noellipse memcpy>
new  <	; Call memcpy 68 0>

1052:
old  <	; post call>
new  <	; PostCall 68>

1055:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 68 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1058:
old  <	; parameter oldMemoryPtr, offset 92>
new  <	; Parameter pointer oldMemoryPtr 92>

1063:
old  <	; call function noellipse-noellipse free>
new  <	; Call free 68 0>

1070:
old  <	; post call>
new  <	; PostCall 68>

1073:
old  <	; return newMemoryPtr>
new  <	; Return newMemoryPtr>

1081:
old  <	; return int8$0#>
new  <	; Return 0>

1089:
old  <	; function end realloc>
new  <	; FunctionEnd realloc>

1094:
old  <	; initializer String>
new  <	; Initializer String Heap:\n>

1100:
old  <	; initializer String>
new  <	; Initializer String   Address %u, Size %u\n>

1106:
old  <	; initializer String>
new  <	; Initializer String \n>

1112:
old  <	; currBlockPtr = g_firstBlockPtr>
new  <	; Assign currBlockPtr g_firstBlockPtr>

1117:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1120:
old  <	; parameter string_Heap3A0A#, offset 56>
new  <	; Parameter pointer "Heap:\n" 56>

1124:
old  <	; call function noellipse-ellipse printf, extra 0>
new  <	; Call printf 32 0>

1132:
old  <	; post call>
new  <	; PostCall 32>

1135:
old  <	; if currBlockPtr == int8$0# goto 17>
new  <	; Equal 17 currBlockPtr 0>

1140:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1143:
old  <	; parameter string_2020Address2025u2C20Size2025u0A#, offset 56>
new  <	; Parameter pointer "  Address %u, Size %u\n" 56>

1147:
old  <	; Â£temporary245 = int_to_int currBlockPtr (Pointer -> Unsigned_Int)>
new  <	; IntegralToIntegral Â£temporary245 currBlockPtr>

1151:
old  <	; parameter Â£temporary245, offset 64>
new  <	; Parameter unsigned int Â£temporary245 64>

1155:
old  <	; Â£temporary246 -> currBlockPtr = *currBlockPtr>
new  <	; Dereference Â£temporary246 -> currBlockPtr currBlockPtr 0>

1159:
old  <	; parameter Â£temporary246 -> currBlockPtr, offset 68>
new  <	; Parameter unsigned int Â£temporary246 -> currBlockPtr 68>

1164:
old  <	; call function noellipse-ellipse printf, extra 8>
new  <	; Call printf 32 8>

1173:
old  <	; post call>
new  <	; PostCall 32>

1176:
old  <	; Â£temporary248 -> currBlockPtr = *currBlockPtr>
new  <	; Dereference Â£temporary248 -> currBlockPtr currBlockPtr 0>

1180:
old  <	; currBlockPtr = Â£temporary248 -> currBlockPtr>
new  <	; Assign currBlockPtr Â£temporary248 -> currBlockPtr>

1185:
old  <	; goto 5>
new  <	; Goto 5>

1189:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1192:
old  <	; parameter string_0A#, offset 56>
new  <	; Parameter pointer "\n" 56>

1196:
old  <	; call function noellipse-ellipse printf, extra 0>
new  <	; Call printf 32 0>

1204:
old  <	; post call>
new  <	; PostCall 32>

1207:
old  <	; return>
new  <	; Return>

1214:
old  <	; function end print_heap>
new  <	; FunctionEnd print_heap>

27:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

30:
old  <	; call function noellipse-noellipse localeconv>
new  <	; Call localeconv 28 0>

37:
old  <	; post call>
new  <	; PostCall 28>

40:
old  <	; Â£temporary250 = return_value>
new  <	; GetReturnValue Â£temporary250>

43:
old  <	; localeConvPtr = Â£temporary250>
new  <	; Assign localeConvPtr Â£temporary250>

47:
old  <	; if localeConvPtr == int8$0# goto 18>
new  <	; Equal 18 localeConvPtr 0>

52:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

55:
old  <	; Â£temporary252 -> localeConvPtr = *localeConvPtr>
new  <	; Dereference Â£temporary252 -> localeConvPtr localeConvPtr 0>

59:
old  <	; parameter Â£temporary252 -> localeConvPtr, offset 60>
new  <	; Parameter pointer Â£temporary252 -> localeConvPtr 60>

64:
old  <	; parameter c, offset 68>
new  <	; Parameter signedint c 68>

69:
old  <	; call function noellipse-noellipse strchr>
new  <	; Call strchr 36 0>

76:
old  <	; post call>
new  <	; PostCall 36>

79:
old  <	; Â£temporary253 = return_value>
new  <	; GetReturnValue Â£temporary253>

82:
old  <	; if Â£temporary253 == int8$0# goto 16>
new  <	; Equal 16 Â£temporary253 0>

87:
old  <	; Â£temporary255 = int4$1#>
new  <	; Assign Â£temporary255 1>

91:
old  <	; goto 17>
new  <	; Goto 17>

95:
old  <	; Â£temporary255 = int4$0#>
new  <	; Assign Â£temporary255 0>

99:
old  <	; return Â£temporary255>
new  <	; Return Â£temporary255>

106:
old  <	; if c < int4$97# goto 22>
new  <	; SignedLessThan 22 c 97>

111:
old  <	; if c > int4$122# goto 22>
new  <	; SignedGreaterThan 22 c 122>

116:
old  <	; Â£temporary259 = int4$1#>
new  <	; Assign Â£temporary259 1>

120:
old  <	; goto 23>
new  <	; Goto 23>

124:
old  <	; Â£temporary259 = int4$0#>
new  <	; Assign Â£temporary259 0>

128:
old  <	; return Â£temporary259>
new  <	; Return Â£temporary259>

135:
old  <	; function end islower>
new  <	; FunctionEnd islower>

140:
old  <	; if c < int4$97# goto 4>
new  <	; SignedLessThan 4 c 97>

145:
old  <	; if c > int4$122# goto 4>
new  <	; SignedGreaterThan 4 c 122>

150:
old  <	; Â£temporary263 = int4$1#>
new  <	; Assign Â£temporary263 1>

154:
old  <	; goto 5>
new  <	; Goto 5>

158:
old  <	; Â£temporary263 = int4$0#>
new  <	; Assign Â£temporary263 0>

162:
old  <	; return Â£temporary263>
new  <	; Return Â£temporary263>

169:
old  <	; function end islowerX>
new  <	; FunctionEnd islowerX>

174:
old  <	; if c < int4$65# goto 4>
new  <	; SignedLessThan 4 c 65>

179:
old  <	; if c > int4$90# goto 4>
new  <	; SignedGreaterThan 4 c 90>

184:
old  <	; Â£temporary267 = int4$1#>
new  <	; Assign Â£temporary267 1>

188:
old  <	; goto 5>
new  <	; Goto 5>

192:
old  <	; Â£temporary267 = int4$0#>
new  <	; Assign Â£temporary267 0>

196:
old  <	; return Â£temporary267>
new  <	; Return Â£temporary267>

203:
old  <	; function end isupperX>
new  <	; FunctionEnd isupperX>

208:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

211:
old  <	; call function noellipse-noellipse localeconv>
new  <	; Call localeconv 28 0>

218:
old  <	; post call>
new  <	; PostCall 28>

221:
old  <	; Â£temporary268 = return_value>
new  <	; GetReturnValue Â£temporary268>

224:
old  <	; localeConvPtr = Â£temporary268>
new  <	; Assign localeConvPtr Â£temporary268>

228:
old  <	; if localeConvPtr == int8$0# goto 18>
new  <	; Equal 18 localeConvPtr 0>

233:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

236:
old  <	; Â£temporary270 -> localeConvPtr = *localeConvPtr>
new  <	; Dereference Â£temporary270 -> localeConvPtr localeConvPtr 0>

240:
old  <	; parameter Â£temporary270 -> localeConvPtr, offset 60>
new  <	; Parameter pointer Â£temporary270 -> localeConvPtr 60>

245:
old  <	; parameter c, offset 68>
new  <	; Parameter signedint c 68>

250:
old  <	; call function noellipse-noellipse strchr>
new  <	; Call strchr 36 0>

257:
old  <	; post call>
new  <	; PostCall 36>

260:
old  <	; Â£temporary271 = return_value>
new  <	; GetReturnValue Â£temporary271>

263:
old  <	; if Â£temporary271 == int8$0# goto 16>
new  <	; Equal 16 Â£temporary271 0>

268:
old  <	; Â£temporary273 = int4$1#>
new  <	; Assign Â£temporary273 1>

272:
old  <	; goto 17>
new  <	; Goto 17>

276:
old  <	; Â£temporary273 = int4$0#>
new  <	; Assign Â£temporary273 0>

280:
old  <	; return Â£temporary273>
new  <	; Return Â£temporary273>

287:
old  <	; if c < int4$65# goto 22>
new  <	; SignedLessThan 22 c 65>

292:
old  <	; if c > int4$90# goto 22>
new  <	; SignedGreaterThan 22 c 90>

297:
old  <	; Â£temporary277 = int4$1#>
new  <	; Assign Â£temporary277 1>

301:
old  <	; goto 23>
new  <	; Goto 23>

305:
old  <	; Â£temporary277 = int4$0#>
new  <	; Assign Â£temporary277 0>

309:
old  <	; return Â£temporary277>
new  <	; Return Â£temporary277>

316:
old  <	; function end isupper>
new  <	; FunctionEnd isupper>

321:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

324:
old  <	; parameter c, offset 52>
new  <	; Parameter signedint c 52>

329:
old  <	; call function noellipse-noellipse islower>
new  <	; Call islower 28 0>

336:
old  <	; post call>
new  <	; PostCall 28>

339:
old  <	; Â£temporary278 = return_value>
new  <	; GetReturnValue Â£temporary278>

342:
old  <	; if Â£temporary278 != int4$0# goto 12>
new  <	; NotEqual 12 Â£temporary278 0>

347:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

350:
old  <	; parameter c, offset 52>
new  <	; Parameter signedint c 52>

355:
old  <	; call function noellipse-noellipse isupper>
new  <	; Call isupper 28 0>

362:
old  <	; post call>
new  <	; PostCall 28>

365:
old  <	; Â£temporary279 = return_value>
new  <	; GetReturnValue Â£temporary279>

368:
old  <	; if Â£temporary279 == int4$0# goto 14>
new  <	; Equal 14 Â£temporary279 0>

373:
old  <	; Â£temporary283 = int4$1#>
new  <	; Assign Â£temporary283 1>

377:
old  <	; goto 15>
new  <	; Goto 15>

381:
old  <	; Â£temporary283 = int4$0#>
new  <	; Assign Â£temporary283 0>

385:
old  <	; return Â£temporary283>
new  <	; Return Â£temporary283>

392:
old  <	; function end isalpha>
new  <	; FunctionEnd isalpha>

397:
old  <	; if c < int4$48# goto 4>
new  <	; SignedLessThan 4 c 48>

402:
old  <	; if c > int4$57# goto 4>
new  <	; SignedGreaterThan 4 c 57>

407:
old  <	; Â£temporary287 = int4$1#>
new  <	; Assign Â£temporary287 1>

411:
old  <	; goto 5>
new  <	; Goto 5>

415:
old  <	; Â£temporary287 = int4$0#>
new  <	; Assign Â£temporary287 0>

419:
old  <	; return Â£temporary287>
new  <	; Return Â£temporary287>

426:
old  <	; function end isdigit>
new  <	; FunctionEnd isdigit>

431:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

434:
old  <	; parameter c, offset 52>
new  <	; Parameter signedint c 52>

439:
old  <	; call function noellipse-noellipse isalpha>
new  <	; Call isalpha 28 0>

446:
old  <	; post call>
new  <	; PostCall 28>

449:
old  <	; Â£temporary288 = return_value>
new  <	; GetReturnValue Â£temporary288>

452:
old  <	; if Â£temporary288 != int4$0# goto 12>
new  <	; NotEqual 12 Â£temporary288 0>

457:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

460:
old  <	; parameter c, offset 52>
new  <	; Parameter signedint c 52>

465:
old  <	; call function noellipse-noellipse isdigit>
new  <	; Call isdigit 28 0>

472:
old  <	; post call>
new  <	; PostCall 28>

475:
old  <	; Â£temporary289 = return_value>
new  <	; GetReturnValue Â£temporary289>

478:
old  <	; if Â£temporary289 == int4$0# goto 14>
new  <	; Equal 14 Â£temporary289 0>

483:
old  <	; Â£temporary293 = int4$1#>
new  <	; Assign Â£temporary293 1>

487:
old  <	; goto 15>
new  <	; Goto 15>

491:
old  <	; Â£temporary293 = int4$0#>
new  <	; Assign Â£temporary293 0>

495:
old  <	; return Â£temporary293>
new  <	; Return Â£temporary293>

502:
old  <	; function end isalnum>
new  <	; FunctionEnd isalnum>

507:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

510:
old  <	; parameter c, offset 52>
new  <	; Parameter signedint c 52>

515:
old  <	; call function noellipse-noellipse isdigit>
new  <	; Call isdigit 28 0>

522:
old  <	; post call>
new  <	; PostCall 28>

525:
old  <	; Â£temporary294 = return_value>
new  <	; GetReturnValue Â£temporary294>

528:
old  <	; if Â£temporary294 != int4$0# goto 10>
new  <	; NotEqual 10 Â£temporary294 0>

533:
old  <	; if c < int4$97# goto 8>
new  <	; SignedLessThan 8 c 97>

538:
old  <	; if c <= int4$102# goto 10>
new  <	; SignedLessThanEqual 10 c 102>

543:
old  <	; if c < int4$65# goto 12>
new  <	; SignedLessThan 12 c 65>

548:
old  <	; if c > int4$70# goto 12>
new  <	; SignedGreaterThan 12 c 70>

553:
old  <	; Â£temporary304 = int4$1#>
new  <	; Assign Â£temporary304 1>

557:
old  <	; goto 13>
new  <	; Goto 13>

561:
old  <	; Â£temporary304 = int4$0#>
new  <	; Assign Â£temporary304 0>

565:
old  <	; return Â£temporary304>
new  <	; Return Â£temporary304>

572:
old  <	; function end isxdigit>
new  <	; FunctionEnd isxdigit>

577:
old  <	; if c < int4$32# goto 4>
new  <	; SignedLessThan 4 c 32>

582:
old  <	; if c > int4$126# goto 4>
new  <	; SignedGreaterThan 4 c 126>

587:
old  <	; Â£temporary308 = int4$1#>
new  <	; Assign Â£temporary308 1>

591:
old  <	; goto 5>
new  <	; Goto 5>

595:
old  <	; Â£temporary308 = int4$0#>
new  <	; Assign Â£temporary308 0>

599:
old  <	; return Â£temporary308>
new  <	; Return Â£temporary308>

606:
old  <	; function end isgraph>
new  <	; FunctionEnd isgraph>

611:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

614:
old  <	; parameter c, offset 52>
new  <	; Parameter signedint c 52>

619:
old  <	; call function noellipse-noellipse isgraph>
new  <	; Call isgraph 28 0>

626:
old  <	; post call>
new  <	; PostCall 28>

629:
old  <	; Â£temporary309 = return_value>
new  <	; GetReturnValue Â£temporary309>

632:
old  <	; if Â£temporary309 == int4$0# goto 9>
new  <	; Equal 9 Â£temporary309 0>

637:
old  <	; if c == int4$32# goto 9>
new  <	; Equal 9 c 32>

642:
old  <	; Â£temporary313 = int4$1#>
new  <	; Assign Â£temporary313 1>

646:
old  <	; goto 10>
new  <	; Goto 10>

650:
old  <	; Â£temporary313 = int4$0#>
new  <	; Assign Â£temporary313 0>

654:
old  <	; return Â£temporary313>
new  <	; Return Â£temporary313>

661:
old  <	; function end isprint>
new  <	; FunctionEnd isprint>

666:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

669:
old  <	; parameter c, offset 52>
new  <	; Parameter signedint c 52>

674:
old  <	; call function noellipse-noellipse isgraph>
new  <	; Call isgraph 28 0>

681:
old  <	; post call>
new  <	; PostCall 28>

684:
old  <	; Â£temporary314 = return_value>
new  <	; GetReturnValue Â£temporary314>

687:
old  <	; if Â£temporary314 == int4$0# goto 14>
new  <	; Equal 14 Â£temporary314 0>

692:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

695:
old  <	; parameter c, offset 52>
new  <	; Parameter signedint c 52>

700:
old  <	; call function noellipse-noellipse isalnum>
new  <	; Call isalnum 28 0>

707:
old  <	; post call>
new  <	; PostCall 28>

710:
old  <	; Â£temporary316 = return_value>
new  <	; GetReturnValue Â£temporary316>

713:
old  <	; if Â£temporary316 != int4$0# goto 14>
new  <	; NotEqual 14 Â£temporary316 0>

718:
old  <	; Â£temporary320 = int4$1#>
new  <	; Assign Â£temporary320 1>

722:
old  <	; goto 15>
new  <	; Goto 15>

726:
old  <	; Â£temporary320 = int4$0#>
new  <	; Assign Â£temporary320 0>

730:
old  <	; return Â£temporary320>
new  <	; Return Â£temporary320>

737:
old  <	; function end ispunct>
new  <	; FunctionEnd ispunct>

742:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

745:
old  <	; parameter c, offset 52>
new  <	; Parameter signedint c 52>

750:
old  <	; call function noellipse-noellipse isprint>
new  <	; Call isprint 28 0>

757:
old  <	; post call>
new  <	; PostCall 28>

760:
old  <	; Â£temporary321 = return_value>
new  <	; GetReturnValue Â£temporary321>

763:
old  <	; if Â£temporary321 != int4$0# goto 8>
new  <	; NotEqual 8 Â£temporary321 0>

768:
old  <	; Â£temporary324 = int4$1#>
new  <	; Assign Â£temporary324 1>

772:
old  <	; goto 9>
new  <	; Goto 9>

776:
old  <	; Â£temporary324 = int4$0#>
new  <	; Assign Â£temporary324 0>

780:
old  <	; return Â£temporary324>
new  <	; Return Â£temporary324>

787:
old  <	; function end iscntrl>
new  <	; FunctionEnd iscntrl>

792:
old  <	; if c == int4$32# goto 6>
new  <	; Equal 6 c 32>

797:
old  <	; if c == int4$12# goto 6>
new  <	; Equal 6 c 12>

802:
old  <	; if c == int4$10# goto 6>
new  <	; Equal 6 c 10>

807:
old  <	; if c == int4$13# goto 6>
new  <	; Equal 6 c 13>

812:
old  <	; if c == int4$9# goto 6>
new  <	; Equal 6 c 9>

817:
old  <	; if c != int4$11# goto 8>
new  <	; NotEqual 8 c 11>

822:
old  <	; Â£temporary336 = int4$1#>
new  <	; Assign Â£temporary336 1>

826:
old  <	; goto 9>
new  <	; Goto 9>

830:
old  <	; Â£temporary336 = int4$0#>
new  <	; Assign Â£temporary336 0>

834:
old  <	; return Â£temporary336>
new  <	; Return Â£temporary336>

841:
old  <	; function end isspace>
new  <	; FunctionEnd isspace>

846:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

849:
old  <	; parameter c, offset 52>
new  <	; Parameter signedint c 52>

854:
old  <	; call function noellipse-noellipse isupper>
new  <	; Call isupper 28 0>

861:
old  <	; post call>
new  <	; PostCall 28>

864:
old  <	; Â£temporary337 = return_value>
new  <	; GetReturnValue Â£temporary337>

867:
old  <	; if Â£temporary337 == int4$0# goto 8>
new  <	; Equal 8 Â£temporary337 0>

872:
old  <	; Â£temporary340 = c + int4$32#>
new  <	; BinaryAdd Â£temporary340 c 32>

877:
old  <	; goto 9>
new  <	; Goto 9>

881:
old  <	; Â£temporary340 = c>
new  <	; Assign Â£temporary340 c>

885:
old  <	; return Â£temporary340>
new  <	; Return Â£temporary340>

892:
old  <	; function end tolowerX>
new  <	; FunctionEnd tolowerX>

897:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

900:
old  <	; parameter c, offset 52>
new  <	; Parameter signedint c 52>

905:
old  <	; call function noellipse-noellipse isupper>
new  <	; Call isupper 28 0>

912:
old  <	; post call>
new  <	; PostCall 28>

915:
old  <	; Â£temporary341 = return_value>
new  <	; GetReturnValue Â£temporary341>

918:
old  <	; if Â£temporary341 == int4$0# goto 32>
new  <	; Equal 32 Â£temporary341 0>

923:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

926:
old  <	; call function noellipse-noellipse localeconv>
new  <	; Call localeconv 28 0>

933:
old  <	; post call>
new  <	; PostCall 28>

936:
old  <	; Â£temporary342 = return_value>
new  <	; GetReturnValue Â£temporary342>

939:
old  <	; localeConvPtr = Â£temporary342>
new  <	; Assign localeConvPtr Â£temporary342>

943:
old  <	; if localeConvPtr == int8$0# goto 30>
new  <	; Equal 30 localeConvPtr 0>

948:
old  <	; Â£temporary344 -> localeConvPtr = *localeConvPtr>
new  <	; Dereference Â£temporary344 -> localeConvPtr localeConvPtr 0>

952:
old  <	; lowerCase = Â£temporary344 -> localeConvPtr>
new  <	; Assign lowerCase Â£temporary344 -> localeConvPtr>

957:
old  <	; Â£temporary345 -> localeConvPtr = *localeConvPtr>
new  <	; Dereference Â£temporary345 -> localeConvPtr localeConvPtr 0>

961:
old  <	; upperCase = Â£temporary345 -> localeConvPtr>
new  <	; Assign upperCase Â£temporary345 -> localeConvPtr>

966:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

969:
old  <	; parameter upperCase, offset 76>
new  <	; Parameter pointer upperCase 76>

974:
old  <	; parameter c, offset 84>
new  <	; Parameter signedint c 84>

979:
old  <	; call function noellipse-noellipse strchr>
new  <	; Call strchr 52 0>

986:
old  <	; post call>
new  <	; PostCall 52>

989:
old  <	; Â£temporary346 = return_value>
new  <	; GetReturnValue Â£temporary346>

992:
old  <	; Â£temporary348 = Â£temporary346 - upperCase>
new  <	; BinarySubtract Â£temporary348 Â£temporary346 upperCase>

996:
old  <	; Â£temporary349 = int_to_int Â£temporary348 (Pointer -> SignedInt)>
new  <	; IntegralToIntegral Â£temporary349 Â£temporary348>

999:
old  <	; index = Â£temporary349>
new  <	; Assign index Â£temporary349>

1003:
old  <	; Â£temporary351 = int_to_int index (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary351 index>

1009:
old  <	; Â£temporary353 = lowerCase + Â£temporary351>
new  <	; BinaryAdd Â£temporary353 lowerCase Â£temporary351>

1014:
old  <	; Â£temporary350 -> Â£temporary353 = *Â£temporary353>
new  <	; Dereference Â£temporary350 -> Â£temporary353 Â£temporary353 0>

1017:
old  <	; Â£temporary354 = int_to_int Â£temporary350 -> Â£temporary353 (SignedChar -> SignedInt)>
new  <	; IntegralToIntegral Â£temporary354 Â£temporary350 -> Â£temporary353>

1026:
old  <	; return Â£temporary354>
new  <	; Return Â£temporary354>

1033:
old  <	; Â£temporary355 = c + int4$32#>
new  <	; BinaryAdd Â£temporary355 c 32>

1038:
old  <	; return Â£temporary355>
new  <	; Return Â£temporary355>

1045:
old  <	; return c>
new  <	; Return c>

1053:
old  <	; function end tolower>
new  <	; FunctionEnd tolower>

1058:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1061:
old  <	; parameter c, offset 52>
new  <	; Parameter signedint c 52>

1066:
old  <	; call function noellipse-noellipse islower>
new  <	; Call islower 28 0>

1073:
old  <	; post call>
new  <	; PostCall 28>

1076:
old  <	; Â£temporary357 = return_value>
new  <	; GetReturnValue Â£temporary357>

1079:
old  <	; if Â£temporary357 == int4$0# goto 8>
new  <	; Equal 8 Â£temporary357 0>

1084:
old  <	; Â£temporary360 = c - int4$32#>
new  <	; BinarySubtract Â£temporary360 c 32>

1089:
old  <	; goto 9>
new  <	; Goto 9>

1093:
old  <	; Â£temporary360 = c>
new  <	; Assign Â£temporary360 c>

1097:
old  <	; return Â£temporary360>
new  <	; Return Â£temporary360>

1104:
old  <	; function end toupperX>
new  <	; FunctionEnd toupperX>

1109:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1112:
old  <	; parameter c, offset 52>
new  <	; Parameter signedint c 52>

1117:
old  <	; call function noellipse-noellipse islower>
new  <	; Call islower 28 0>

1124:
old  <	; post call>
new  <	; PostCall 28>

1127:
old  <	; Â£temporary361 = return_value>
new  <	; GetReturnValue Â£temporary361>

1130:
old  <	; if Â£temporary361 == int4$0# goto 32>
new  <	; Equal 32 Â£temporary361 0>

1135:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1138:
old  <	; call function noellipse-noellipse localeconv>
new  <	; Call localeconv 28 0>

1145:
old  <	; post call>
new  <	; PostCall 28>

1148:
old  <	; Â£temporary362 = return_value>
new  <	; GetReturnValue Â£temporary362>

1151:
old  <	; localeConvPtr = Â£temporary362>
new  <	; Assign localeConvPtr Â£temporary362>

1155:
old  <	; if localeConvPtr == int8$0# goto 30>
new  <	; Equal 30 localeConvPtr 0>

1160:
old  <	; Â£temporary364 -> localeConvPtr = *localeConvPtr>
new  <	; Dereference Â£temporary364 -> localeConvPtr localeConvPtr 0>

1164:
old  <	; lowerCase = Â£temporary364 -> localeConvPtr>
new  <	; Assign lowerCase Â£temporary364 -> localeConvPtr>

1169:
old  <	; Â£temporary365 -> localeConvPtr = *localeConvPtr>
new  <	; Dereference Â£temporary365 -> localeConvPtr localeConvPtr 0>

1173:
old  <	; upperCase = Â£temporary365 -> localeConvPtr>
new  <	; Assign upperCase Â£temporary365 -> localeConvPtr>

1178:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1181:
old  <	; parameter lowerCase, offset 76>
new  <	; Parameter pointer lowerCase 76>

1186:
old  <	; parameter c, offset 84>
new  <	; Parameter signedint c 84>

1191:
old  <	; call function noellipse-noellipse strchr>
new  <	; Call strchr 52 0>

1198:
old  <	; post call>
new  <	; PostCall 52>

1201:
old  <	; Â£temporary366 = return_value>
new  <	; GetReturnValue Â£temporary366>

1204:
old  <	; Â£temporary368 = Â£temporary366 - lowerCase>
new  <	; BinarySubtract Â£temporary368 Â£temporary366 lowerCase>

1208:
old  <	; Â£temporary369 = int_to_int Â£temporary368 (Pointer -> SignedInt)>
new  <	; IntegralToIntegral Â£temporary369 Â£temporary368>

1211:
old  <	; index = Â£temporary369>
new  <	; Assign index Â£temporary369>

1215:
old  <	; Â£temporary371 = int_to_int index (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary371 index>

1221:
old  <	; Â£temporary373 = upperCase + Â£temporary371>
new  <	; BinaryAdd Â£temporary373 upperCase Â£temporary371>

1226:
old  <	; Â£temporary370 -> Â£temporary373 = *Â£temporary373>
new  <	; Dereference Â£temporary370 -> Â£temporary373 Â£temporary373 0>

1229:
old  <	; Â£temporary374 = int_to_int Â£temporary370 -> Â£temporary373 (SignedChar -> SignedInt)>
new  <	; IntegralToIntegral Â£temporary374 Â£temporary370 -> Â£temporary373>

1238:
old  <	; return Â£temporary374>
new  <	; Return Â£temporary374>

1245:
old  <	; Â£temporary375 = c - int4$32#>
new  <	; BinarySubtract Â£temporary375 c 32>

1250:
old  <	; return Â£temporary375>
new  <	; Return Â£temporary375>

1257:
old  <	; return c>
new  <	; Return c>

1265:
old  <	; function end toupper>
new  <	; FunctionEnd toupper>

9:
old  <	; initializer SignedInt>
new  <	; Initializer SignedInt 0>

15:
old  <	; initializer SignedInt>
new  <	; Initializer SignedInt 1>

21:
old  <	; initializer SignedInt>
new  <	; Initializer SignedInt 2>

27:
old  <	; initializer SignedInt>
new  <	; Initializer SignedInt 3>

33:
old  <	; initializer SignedInt>
new  <	; Initializer SignedInt 4>

39:
old  <	; initializer SignedInt>
new  <	; Initializer SignedInt 5>

45:
old  <	; initializer SignedInt>
new  <	; Initializer SignedInt 6>

51:
old  <	; initializer SignedInt>
new  <	; Initializer SignedInt 7>

57:
old  <	; initializer SignedInt>
new  <	; Initializer SignedInt 8>

63:
old  <	; initializer SignedInt>
new  <	; Initializer SignedInt 9>

69:
old  <	; initializer SignedInt>
new  <	; Initializer SignedInt 10>

75:
old  <	; initializer SignedInt>
new  <	; Initializer SignedInt 11>

81:
old  <	; initializer SignedInt>
new  <	; Initializer SignedInt 12>

87:
old  <	; initializer SignedInt>
new  <	; Initializer SignedInt 13>

93:
old  <	; initializer SignedInt>
new  <	; Initializer SignedInt 14>

99:
old  <	; initializer SignedInt>
new  <	; Initializer SignedInt 15>

105:
old  <	; initializer SignedInt>
new  <	; Initializer SignedInt 16>

111:
old  <	; initializer SignedInt>
new  <	; Initializer SignedInt 17>

117:
old  <	; initializer SignedInt>
new  <	; Initializer SignedInt 18>

123:
old  <	; initializer SignedInt>
new  <	; Initializer SignedInt 19>

129:
old  <	; initializer SignedInt>
new  <	; Initializer SignedInt 20>

135:
old  <	; initializer SignedInt>
new  <	; Initializer SignedInt 21>

141:
old  <	; initializer SignedInt>
new  <	; Initializer SignedInt 0>

12:
old  <	; initializer String>
new  <	; Initializer String Sun>

18:
old  <	; initializer String>
new  <	; Initializer String Mon>

24:
old  <	; initializer String>
new  <	; Initializer String Tue>

30:
old  <	; initializer String>
new  <	; Initializer String Wed>

36:
old  <	; initializer String>
new  <	; Initializer String Thu>

42:
old  <	; initializer String>
new  <	; Initializer String Fri>

48:
old  <	; initializer String>
new  <	; Initializer String Sat>

54:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_Sun#>

56:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_Mon#>

58:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_Tue#>

60:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_Wed#>

62:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_Thu#>

64:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_Fri#>

66:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_Sat#>

72:
old  <	; initializer String>
new  <	; Initializer String Sunday>

78:
old  <	; initializer String>
new  <	; Initializer String Monday>

84:
old  <	; initializer String>
new  <	; Initializer String Tuesday>

90:
old  <	; initializer String>
new  <	; Initializer String Wednesday>

96:
old  <	; initializer String>
new  <	; Initializer String Thursday>

102:
old  <	; initializer String>
new  <	; Initializer String Friday>

108:
old  <	; initializer String>
new  <	; Initializer String Saturday>

114:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_Sunday#>

116:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_Monday#>

118:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_Tuesday#>

120:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_Wednesday#>

122:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_Thursday#>

124:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_Friday#>

126:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_Saturday#>

132:
old  <	; initializer String>
new  <	; Initializer String Jan>

138:
old  <	; initializer String>
new  <	; Initializer String Feb>

144:
old  <	; initializer String>
new  <	; Initializer String Mar>

150:
old  <	; initializer String>
new  <	; Initializer String Apr>

156:
old  <	; initializer String>
new  <	; Initializer String May>

162:
old  <	; initializer String>
new  <	; Initializer String Jun>

168:
old  <	; initializer String>
new  <	; Initializer String Jul>

174:
old  <	; initializer String>
new  <	; Initializer String Aug>

180:
old  <	; initializer String>
new  <	; Initializer String Sep>

186:
old  <	; initializer String>
new  <	; Initializer String Oct>

192:
old  <	; initializer String>
new  <	; Initializer String Nov>

198:
old  <	; initializer String>
new  <	; Initializer String Dec>

204:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_Jan#>

206:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_Feb#>

208:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_Mar#>

210:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_Apr#>

212:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_May#>

214:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_Jun#>

216:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_Jul#>

218:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_Aug#>

220:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_Sep#>

222:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_Oct#>

224:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_Nov#>

226:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_Dec#>

232:
old  <	; initializer String>
new  <	; Initializer String January>

238:
old  <	; initializer String>
new  <	; Initializer String February>

244:
old  <	; initializer String>
new  <	; Initializer String March>

250:
old  <	; initializer String>
new  <	; Initializer String April>

256:
old  <	; initializer String>
new  <	; Initializer String June>

262:
old  <	; initializer String>
new  <	; Initializer String July>

268:
old  <	; initializer String>
new  <	; Initializer String August>

274:
old  <	; initializer String>
new  <	; Initializer String September>

280:
old  <	; initializer String>
new  <	; Initializer String October>

286:
old  <	; initializer String>
new  <	; Initializer String November>

292:
old  <	; initializer String>
new  <	; Initializer String December>

298:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_January#>

300:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_February#>

302:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_March#>

304:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_April#>

306:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_May#>

308:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_June#>

310:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_July#>

312:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_August#>

314:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_September#>

316:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_October#>

318:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_November#>

320:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_December#>

326:
old  <	; initializer String>
new  <	; Initializer String no error>

332:
old  <	; initializer String>
new  <	; Initializer String function number invalid>

338:
old  <	; initializer String>
new  <	; Initializer String file not found>

344:
old  <	; initializer String>
new  <	; Initializer String path not found>

350:
old  <	; initializer String>
new  <	; Initializer String no handle available>

356:
old  <	; initializer String>
new  <	; Initializer String access denied>

362:
old  <	; initializer String>
new  <	; Initializer String out of domain>

368:
old  <	; initializer String>
new  <	; Initializer String out of range>

374:
old  <	; initializer String>
new  <	; Initializer String invalid multibyte sequence>

380:
old  <	; initializer String>
new  <	; Initializer String error while opening>

386:
old  <	; initializer String>
new  <	; Initializer String error while flushing>

392:
old  <	; initializer String>
new  <	; Initializer String error while closing>

398:
old  <	; initializer String>
new  <	; Initializer String open mode invalid>

404:
old  <	; initializer String>
new  <	; Initializer String error while writing>

410:
old  <	; initializer String>
new  <	; Initializer String error while reading>

416:
old  <	; initializer String>
new  <	; Initializer String error while seeking>

422:
old  <	; initializer String>
new  <	; Initializer String error while telling>

428:
old  <	; initializer String>
new  <	; Initializer String error while sizing>

434:
old  <	; initializer String>
new  <	; Initializer String error while removing file>

440:
old  <	; initializer String>
new  <	; Initializer String error while renaming file>

446:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_no20error#>

448:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_function20number20invalid#>

450:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_file20not20found#>

452:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_path20not20found#>

454:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_no20handle20available#>

456:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_access20denied#>

458:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_out20of20domain#>

460:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_out20of20range#>

462:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_invalid20multibyte20sequence#>

464:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_error20while20opening#>

466:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_error20while20flushing#>

468:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_error20while20closing#>

470:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_open20mode20invalid#>

472:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_error20while20writing#>

474:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_error20while20reading#>

476:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_error20while20seeking#>

478:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_error20while20telling#>

480:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_error20while20sizing#>

482:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_error20while20removing20file#>

484:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_error20while20renaming20file#>

490:
old  <	; initializer String>
new  <	; Initializer String abcdefghijklmnopqrstuvwxyz>

496:
old  <	; initializer String>
new  <	; Initializer String ABCDEFGHIJKLMNOPQRSTUVWXYZ>

502:
old  <	; initializer SignedInt>
new  <	; Initializer SignedInt -5>

504:
old  <	; initializer SignedInt>
new  <	; Initializer SignedInt -4>

506:
old  <	; initializer Pointer>
new  <	; Initializer Pointer @1509$enShortDayList>

508:
old  <	; initializer Pointer>
new  <	; Initializer Pointer @1510$enLongDayList>

510:
old  <	; initializer Pointer>
new  <	; Initializer Pointer @1511$enShortMonthList>

512:
old  <	; initializer Pointer>
new  <	; Initializer Pointer @1512$enLongMonthList>

514:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_abcdefghijklmnopqrstuvwxyz#>

516:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_ABCDEFGHIJKLMNOPQRSTUVWXYZ#>

518:
old  <	; initializer Pointer>
new  <	; Initializer Pointer enMessageList>

524:
old  <	; initializer String>
new  <	; Initializer String Son>

530:
old  <	; initializer String>
new  <	; Initializer String Man>

536:
old  <	; initializer String>
new  <	; Initializer String Tis>

542:
old  <	; initializer String>
new  <	; Initializer String Ons>

548:
old  <	; initializer String>
new  <	; Initializer String Tor>

554:
old  <	; initializer String>
new  <	; Initializer String Fre>

560:
old  <	; initializer String>
new  <	; Initializer String Lor>

566:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_Son#>

568:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_Man#>

570:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_Tis#>

572:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_Ons#>

574:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_Tor#>

576:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_Fre#>

578:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_Lor#>

584:
old  <	; initializer String>
new  <	; Initializer String Sondag>

590:
old  <	; initializer String>
new  <	; Initializer String Mandag>

596:
old  <	; initializer String>
new  <	; Initializer String Tisdag>

602:
old  <	; initializer String>
new  <	; Initializer String Onsdag>

608:
old  <	; initializer String>
new  <	; Initializer String Torsdag>

614:
old  <	; initializer String>
new  <	; Initializer String Fredag>

620:
old  <	; initializer String>
new  <	; Initializer String Lordag>

626:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_Sondag#>

628:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_Mandag#>

630:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_Tisdag#>

632:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_Onsdag#>

634:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_Torsdag#>

636:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_Fredag#>

638:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_Lordag#>

644:
old  <	; initializer String>
new  <	; Initializer String Maj>

650:
old  <	; initializer String>
new  <	; Initializer String Okt>

656:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_Jan#>

658:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_Feb#>

660:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_Mar#>

662:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_Apr#>

664:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_Maj#>

666:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_Jun#>

668:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_Jul#>

670:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_Aug#>

672:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_Sep#>

674:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_Okt#>

676:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_Nov#>

678:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_Dec#>

684:
old  <	; initializer String>
new  <	; Initializer String Januari>

690:
old  <	; initializer String>
new  <	; Initializer String Februari>

696:
old  <	; initializer String>
new  <	; Initializer String Mars>

702:
old  <	; initializer String>
new  <	; Initializer String Juni>

708:
old  <	; initializer String>
new  <	; Initializer String Juli>

714:
old  <	; initializer String>
new  <	; Initializer String Augusit>

720:
old  <	; initializer String>
new  <	; Initializer String Oktober>

726:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_Januari#>

728:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_Februari#>

730:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_Mars#>

732:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_April#>

734:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_Maj#>

736:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_Juni#>

738:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_Juli#>

740:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_Augusit#>

742:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_September#>

744:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_Oktober#>

746:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_November#>

748:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_December#>

754:
old  <	; initializer String>
new  <	; Initializer String inga fel>

760:
old  <	; initializer String>
new  <	; Initializer String felaktigt functionsnummer>

766:
old  <	; initializer String>
new  <	; Initializer String hittar ej filen>

772:
old  <	; initializer String>
new  <	; Initializer String hittar ej sokvagen>

778:
old  <	; initializer String>
new  <	; Initializer String inget handtag tillgangligt>

784:
old  <	; initializer String>
new  <	; Initializer String atkomst nekad>

790:
old  <	; initializer String>
new  <	; Initializer String utanfor doman>

796:
old  <	; initializer String>
new  <	; Initializer String utanfor range>

802:
old  <	; initializer String>
new  <	; Initializer String felaktig multibyte-sekvens>

808:
old  <	; initializer String>
new  <	; Initializer String fel vid oppning>

814:
old  <	; initializer String>
new  <	; Initializer String fel vid flushing>

820:
old  <	; initializer String>
new  <	; Initializer String fel vid stangning>

826:
old  <	; initializer String>
new  <	; Initializer String fel oppningslage>

832:
old  <	; initializer String>
new  <	; Initializer String fel vid skrivning>

838:
old  <	; initializer String>
new  <	; Initializer String fel vid lasning>

844:
old  <	; initializer String>
new  <	; Initializer String fel vid sokning>

850:
old  <	; initializer String>
new  <	; Initializer String fel vid telling>

856:
old  <	; initializer String>
new  <	; Initializer String fel vid borttagning av fil>

862:
old  <	; initializer String>
new  <	; Initializer String fel vid namnbyte av fil>

868:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_inga20fel#>

870:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_felaktigt20functionsnummer#>

872:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_hittar20ej20filen#>

874:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_hittar20ej20sokvagen#>

876:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_inget20handtag20tillgangligt#>

878:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_atkomst20nekad#>

880:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_utanfor20doman#>

882:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_utanfor20range#>

884:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_felaktig20multibyte2Dsekvens#>

886:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_fel20vid20oppning#>

888:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_fel20vid20flushing#>

890:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_fel20vid20stangning#>

892:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_fel20oppningslage#>

894:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_fel20vid20skrivning#>

896:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_fel20vid20lasning#>

898:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_fel20vid20sokning#>

900:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_fel20vid20telling#>

902:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_fel20vid20borttagning20av20fil#>

904:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_fel20vid20namnbyte20av20fil#>

910:
old  <	; initializer SignedInt>
new  <	; Initializer SignedInt 1>

912:
old  <	; initializer SignedInt>
new  <	; Initializer SignedInt 2>

914:
old  <	; initializer Pointer>
new  <	; Initializer Pointer @1536$swShortDayList>

916:
old  <	; initializer Pointer>
new  <	; Initializer Pointer @1537$swLongDayList>

918:
old  <	; initializer Pointer>
new  <	; Initializer Pointer @1511$enShortMonthList>

920:
old  <	; initializer Pointer>
new  <	; Initializer Pointer @1539$swLongMonthList>

922:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_abcdefghijklmnopqrstuvwxyz#>

924:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_ABCDEFGHIJKLMNOPQRSTUVWXYZ#>

926:
old  <	; initializer Pointer>
new  <	; Initializer Pointer @1540$swMessageList>

932:
old  <	; initializer String>
new  <	; Initializer String >

938:
old  <	; initializer String>
new  <	; Initializer String C>

944:
old  <	; initializer String>
new  <	; Initializer String US>

950:
old  <	; initializer String>
new  <	; Initializer String SE>

956:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_#>

958:
old  <	; initializer Pointer>
new  <	; Initializer Pointer @1541$sw_EN_utf8>

960:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_C#>

962:
old  <	; initializer Pointer>
new  <	; Initializer Pointer @1535$en_US_utf8>

964:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_US#>

966:
old  <	; initializer Pointer>
new  <	; Initializer Pointer @1535$en_US_utf8>

968:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_SE#>

970:
old  <	; initializer Pointer>
new  <	; Initializer Pointer @1541$sw_EN_utf8>

976:
old  <	; initializer SignedInt>
new  <	; Initializer SignedInt 1>

982:
old  <	; initializer Pointer>
new  <	; Initializer Pointer @1544$sArray>

988:
old  <	; initializer Array>
new  <	; Initializer Array 16>

994:
old  <	; empty>
new  <	; Empty>

997:
old  <	; if g_currStructPtr == int8$0# goto 5>
new  <	; Equal 5 g_currStructPtr 0>

1002:
old  <	; Â£temporary378 -> g_currStructPtr = *g_currStructPtr>
new  <	; Dereference Â£temporary378 -> g_currStructPtr g_currStructPtr 0>

1006:
old  <	; Â£temporary379 = Â£temporary378 -> g_currStructPtr>
new  <	; Assign Â£temporary379 Â£temporary378 -> g_currStructPtr>

1010:
old  <	; goto 6>
new  <	; Goto 6>

1014:
old  <	; Â£temporary379 = int8$0#>
new  <	; Assign Â£temporary379 0>

1018:
old  <	; oldName = Â£temporary379>
new  <	; Assign oldName Â£temporary379>

1022:
old  <	; g_currStructPtr = int8$0#>
new  <	; Assign g_currStructPtr 0>

1026:
old  <	; if newName == int8$0# goto 31>
new  <	; Equal 31 newName 0>

1031:
old  <	; index = int4$0#>
new  <	; Assign index 0>

1035:
old  <	; if index >= sSize goto 31>
new  <	; SignedGreaterThanEqual 31 index sSize>

1041:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1044:
old  <	; parameter newName, offset 72>
new  <	; Parameter pointer newName 72>

1049:
old  <	; Â£temporary384 = int_to_int index (SignedInt -> Array)>
new  <	; IntegralToIntegral Â£temporary384 index>

1055:
old  <	; Â£temporary385 = Â£temporary384 * Array_16#>
new  <	; UnsignedMultiply Â£temporary385 Â£temporary384 16>

1060:
old  <	; Â£temporary386 = sArray + Â£temporary385>
new  <	; BinaryAdd Â£temporary386 sArray Â£temporary385>

1065:
old  <	; Â£temporary383 -> Â£temporary386 = *Â£temporary386>
new  <	; Dereference Â£temporary383 -> Â£temporary386 Â£temporary386 0>

1068:
old  <	; parameter Â£temporary383.name -> Â£temporary386, offset 80>
new  <	; Parameter pointer Â£temporary383.name -> Â£temporary386 80>

1073:
old  <	; call function noellipse-noellipse strcmp>
new  <	; Call strcmp 48 0>

1080:
old  <	; post call>
new  <	; PostCall 48>

1083:
old  <	; Â£temporary387 = return_value>
new  <	; GetReturnValue Â£temporary387>

1086:
old  <	; if Â£temporary387 != int4$0# goto 29>
new  <	; NotEqual 29 Â£temporary387 0>

1091:
old  <	; Â£temporary390 = int_to_int index (SignedInt -> Array)>
new  <	; IntegralToIntegral Â£temporary390 index>

1097:
old  <	; Â£temporary391 = Â£temporary390 * Array_16#>
new  <	; UnsignedMultiply Â£temporary391 Â£temporary390 16>

1102:
old  <	; Â£temporary392 = sArray + Â£temporary391>
new  <	; BinaryAdd Â£temporary392 sArray Â£temporary391>

1107:
old  <	; Â£temporary389 -> Â£temporary392 = *Â£temporary392>
new  <	; Dereference Â£temporary389 -> Â£temporary392 Â£temporary392 0>

1110:
old  <	; Â£temporary393 = &Â£temporary389 -> Â£temporary392>
new  <	; Address Â£temporary393 Â£temporary389 -> Â£temporary392>

1113:
old  <	; g_currStructPtr = Â£temporary393>
new  <	; Assign g_currStructPtr Â£temporary393>

1117:
old  <	; goto 31>
new  <	; Goto 31>

1121:
old  <	; index = index + int4$1#>
new  <	; BinaryAdd index index 1>

1125:
old  <	; goto 10>
new  <	; Goto 10>

1129:
old  <	; return oldName>
new  <	; Return oldName>

1137:
old  <	; function end setlocale>
new  <	; FunctionEnd setlocale>

1142:
old  <	; if g_currStructPtr == int8$0# goto 4>
new  <	; Equal 4 g_currStructPtr 0>

1147:
old  <	; Â£temporary395 -> g_currStructPtr = *g_currStructPtr>
new  <	; Dereference Â£temporary395 -> g_currStructPtr g_currStructPtr 0>

1151:
old  <	; Â£temporary396 = Â£temporary395 -> g_currStructPtr>
new  <	; Assign Â£temporary396 Â£temporary395 -> g_currStructPtr>

1155:
old  <	; goto 5>
new  <	; Goto 5>

1159:
old  <	; Â£temporary396 = int8$0#>
new  <	; Assign Â£temporary396 0>

1163:
old  <	; return Â£temporary396>
new  <	; Return Â£temporary396>

1170:
old  <	; function end localeconv>
new  <	; FunctionEnd localeconv>

41:
old  <	; initializer Double>
new  <	; Initializer Double 0.000000001>

47:
old  <	; push float float8$0#>
new  <	; PushFloat 0>

51:
old  <	; pop float n>
new  <	; PopFloat n>

55:
old  <	; push float float8$1#>
new  <	; PushFloat 1>

59:
old  <	; pop float faculty>
new  <	; PopFloat faculty>

63:
old  <	; push float float8$1#>
new  <	; PushFloat 1>

67:
old  <	; pop float power>
new  <	; PopFloat power>

71:
old  <	; push float float8$0#>
new  <	; PushFloat 0>

75:
old  <	; pop float sum>
new  <	; PopFloat sum>

79:
old  <	; push float power>
new  <	; PushFloat power>

83:
old  <	; push float faculty>
new  <	; PushFloat faculty>

87:
old  <	; Â£temporary397 = power / faculty>
new  <	; SignedDivide Â£temporary397 power faculty>

91:
old  <	; pop float term>
new  <	; PopFloat term>

95:
old  <	; push float sum>
new  <	; PushFloat sum>

99:
old  <	; push float term>
new  <	; PushFloat term>

103:
old  <	; Â£temporary398 = sum + term>
new  <	; BinaryAdd Â£temporary398 sum term>

107:
old  <	; pop float sum>
new  <	; PopFloat sum>

111:
old  <	; push float power>
new  <	; PushFloat power>

115:
old  <	; push float x>
new  <	; PushFloat x>

119:
old  <	; Â£temporary399 = power * x>
new  <	; SignedMultiply Â£temporary399 power x>

123:
old  <	; pop float power>
new  <	; PopFloat power>

127:
old  <	; push float faculty>
new  <	; PushFloat faculty>

131:
old  <	; push float n>
new  <	; PushFloat n>

135:
old  <	; push 1>
new  <	; PushOne>

139:
old  <	; n = n + float8$1#>
new  <	; BinaryAdd n n 1>

143:
old  <	; top float n>
new  <	; TopFloat n>

147:
old  <	; Â£temporary401 = faculty * Â£temporary400>
new  <	; SignedMultiply Â£temporary401 faculty Â£temporary400>

151:
old  <	; pop float faculty>
new  <	; PopFloat faculty>

155:
old  <	; check track map float stack>
new  <	; CheckTrackMapFloatStack>

158:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 72 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

161:
old  <	; push float term>
new  <	; PushFloat term>

165:
old  <	; parameter term, offset 96>
new  <	; Parameter double term 96>

169:
old  <	; call function noellipse-noellipse fabs>
new  <	; Call fabs 72 0>

176:
old  <	; post call>
new  <	; PostCall 72>

179:
old  <	; Â£temporary402 = return_value>
new  <	; GetReturnValue Â£temporary402>

182:
old  <	; push float float8$0.000000001#>
new  <	; PushFloat 0.000000001>

186:
old  <	; if Â£temporary402 >= float8$0.000000001# goto 8>
new  <	; SignedGreaterThanEqual 8 Â£temporary402 0.000000001>

193:
old  <	; push float sum>
new  <	; PushFloat sum>

197:
old  <	; return sum>
new  <	; Return sum>

204:
old  <	; function end exp>
new  <	; FunctionEnd exp>

209:
old  <	; initializer Double>
new  <	; Initializer Double 0.3678794411714423216036827922>

215:
old  <	; initializer Double>
new  <	; Initializer Double 2.7182818284590452353>

221:
old  <	; initializer Double>
new  <	; Initializer Double 0.7357588823428846432073655843>

227:
old  <	; initializer Double>
new  <	; Initializer Double -1.0>

233:
old  <	; push float x_plus_1>
new  <	; PushFloat x_plus_1>

237:
old  <	; push float float8$0#>
new  <	; PushFloat 0>

241:
old  <	; if x_plus_1 <= float8$0# goto 70>
new  <	; SignedLessThanEqual 70 x_plus_1 0>

248:
old  <	; expo = int4$0#>
new  <	; Assign expo 0>

252:
old  <	; push float x_plus_1>
new  <	; PushFloat x_plus_1>

256:
old  <	; push float float8$0.3678794411714423216036827922#>
new  <	; PushFloat 0.3678794411714423216036827922>

260:
old  <	; if x_plus_1 >= float8$0.3678794411714423216036827922# goto 13>
new  <	; SignedGreaterThanEqual 13 x_plus_1 0.3678794411714423216036827922>

267:
old  <	; push float x_plus_1>
new  <	; PushFloat x_plus_1>

271:
old  <	; push float float8$2.7182818284590452353#>
new  <	; PushFloat 2.7182818284590452353>

275:
old  <	; Â£temporary407 = x_plus_1 * float8$2.7182818284590452353#>
new  <	; SignedMultiply Â£temporary407 x_plus_1 2.7182818284590452353>

279:
old  <	; pop float x_plus_1>
new  <	; PopFloat x_plus_1>

283:
old  <	; expo = expo - int4$1#>
new  <	; BinarySubtract expo expo 1>

287:
old  <	; goto 4>
new  <	; Goto 4>

291:
old  <	; push float x_plus_1>
new  <	; PushFloat x_plus_1>

295:
old  <	; push float float8$0.7357588823428846432073655843#>
new  <	; PushFloat 0.7357588823428846432073655843>

299:
old  <	; if x_plus_1 <= float8$0.7357588823428846432073655843# goto 22>
new  <	; SignedLessThanEqual 22 x_plus_1 0.7357588823428846432073655843>

306:
old  <	; push float x_plus_1>
new  <	; PushFloat x_plus_1>

310:
old  <	; push float float8$2.7182818284590452353#>
new  <	; PushFloat 2.7182818284590452353>

314:
old  <	; Â£temporary410 = x_plus_1 / float8$2.7182818284590452353#>
new  <	; SignedDivide Â£temporary410 x_plus_1 2.7182818284590452353>

318:
old  <	; pop float x_plus_1>
new  <	; PopFloat x_plus_1>

322:
old  <	; expo = expo + int4$1#>
new  <	; BinaryAdd expo expo 1>

326:
old  <	; goto 13>
new  <	; Goto 13>

330:
old  <	; push float float8$1#>
new  <	; PushFloat 1>

334:
old  <	; pop float n>
new  <	; PopFloat n>

338:
old  <	; push float float8$1#>
new  <	; PushFloat 1>

342:
old  <	; pop float plusMinusOne>
new  <	; PopFloat plusMinusOne>

346:
old  <	; push float x_plus_1>
new  <	; PushFloat x_plus_1>

350:
old  <	; push float float8$1#>
new  <	; PushFloat 1>

354:
old  <	; Â£temporary412 = x_plus_1 - float8$1#>
new  <	; BinarySubtract Â£temporary412 x_plus_1 1>

358:
old  <	; pop float x>
new  <	; PopFloat x>

362:
old  <	; push float float8$0#>
new  <	; PushFloat 0>

366:
old  <	; pop float sum>
new  <	; PopFloat sum>

370:
old  <	; push float x>
new  <	; PushFloat x>

374:
old  <	; pop float power>
new  <	; PopFloat power>

378:
old  <	; push float plusMinusOne>
new  <	; PushFloat plusMinusOne>

382:
old  <	; push float power>
new  <	; PushFloat power>

386:
old  <	; push float n>
new  <	; PushFloat n>

390:
old  <	; push 1>
new  <	; PushOne>

394:
old  <	; n = n + float8$1#>
new  <	; BinaryAdd n n 1>

398:
old  <	; top float n>
new  <	; TopFloat n>

402:
old  <	; push 1>
new  <	; PushOne>

406:
old  <	; n = n - float8$1#>
new  <	; BinarySubtract n n 1>

410:
old  <	; Â£temporary414 = power / Â£temporary413>
new  <	; SignedDivide Â£temporary414 power Â£temporary413>

414:
old  <	; Â£temporary415 = plusMinusOne * Â£temporary414>
new  <	; SignedMultiply Â£temporary415 plusMinusOne Â£temporary414>

418:
old  <	; pop float term>
new  <	; PopFloat term>

422:
old  <	; push float sum>
new  <	; PushFloat sum>

426:
old  <	; push float term>
new  <	; PushFloat term>

430:
old  <	; Â£temporary416 = sum + term>
new  <	; BinaryAdd Â£temporary416 sum term>

434:
old  <	; pop float sum>
new  <	; PopFloat sum>

438:
old  <	; push float power>
new  <	; PushFloat power>

442:
old  <	; push float x>
new  <	; PushFloat x>

446:
old  <	; Â£temporary417 = power * x>
new  <	; SignedMultiply Â£temporary417 power x>

450:
old  <	; pop float power>
new  <	; PopFloat power>

454:
old  <	; push float plusMinusOne>
new  <	; PushFloat plusMinusOne>

458:
old  <	; push float float8$minus1.0#>
new  <	; PushFloat -1.0>

462:
old  <	; Â£temporary418 = plusMinusOne * float8$minus1.0#>
new  <	; SignedMultiply Â£temporary418 plusMinusOne -1.0>

466:
old  <	; pop float plusMinusOne>
new  <	; PopFloat plusMinusOne>

470:
old  <	; check track map float stack>
new  <	; CheckTrackMapFloatStack>

473:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 84 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

476:
old  <	; push float term>
new  <	; PushFloat term>

480:
old  <	; parameter term, offset 108>
new  <	; Parameter double term 108>

484:
old  <	; call function noellipse-noellipse fabs>
new  <	; Call fabs 84 0>

491:
old  <	; post call>
new  <	; PostCall 84>

494:
old  <	; Â£temporary419 = return_value>
new  <	; GetReturnValue Â£temporary419>

497:
old  <	; push float float8$0.000000001#>
new  <	; PushFloat 0.000000001>

501:
old  <	; if Â£temporary419 > float8$0.000000001# goto 34>
new  <	; SignedGreaterThan 34 Â£temporary419 0.000000001>

508:
old  <	; push float sum>
new  <	; PushFloat sum>

512:
old  <	; Â£temporary421 = int_to_float expo (SignedInt -> Double)>
new  <	; IntegralToFloating Â£temporary421 expo>

516:
old  <	; Â£temporary422 = sum + Â£temporary421>
new  <	; BinaryAdd Â£temporary422 sum Â£temporary421>

520:
old  <	; return Â£temporary422>
new  <	; Return Â£temporary422>

527:
old  <	; errno = int4$6#>
new  <	; Assign errno 6>

531:
old  <	; push float float8$0#>
new  <	; PushFloat 0>

535:
old  <	; return float8$0#>
new  <	; Return 0>

542:
old  <	; function end log>
new  <	; FunctionEnd log>

547:
old  <	; initializer Double>
new  <	; Initializer Double 0.4342944820>

553:
old  <	; push float float8$0.4342944820#>
new  <	; PushFloat 0.4342944820>

557:
old  <	; call header integral zero 0 stack no zero 1>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 1>

561:
old  <	; push float x>
new  <	; PushFloat x>

565:
old  <	; parameter x, offset 56>
new  <	; Parameter double x 56>

569:
old  <	; call function noellipse-noellipse log>
new  <	; Call log 32 0>

576:
old  <	; post call>
new  <	; PostCall 32>

582:
old  <	; Â£temporary424 = return_value>
new  <	; GetReturnValue Â£temporary424>

585:
old  <	; Â£temporary425 = float8$0.4342944820# * Â£temporary424>
new  <	; SignedMultiply Â£temporary425 0.4342944820 Â£temporary424>

589:
old  <	; return Â£temporary425>
new  <	; Return Â£temporary425>

596:
old  <	; function end log10>
new  <	; FunctionEnd log10>

601:
old  <	; initializer Double>
new  <	; Initializer Double 10>

607:
old  <	; push float x>
new  <	; PushFloat x>

611:
old  <	; push float float8$0#>
new  <	; PushFloat 0>

615:
old  <	; if x <= float8$0# goto 34>
new  <	; SignedLessThanEqual 34 x 0>

622:
old  <	; push float x>
new  <	; PushFloat x>

626:
old  <	; push float float8$1#>
new  <	; PushFloat 1>

630:
old  <	; if x != float8$1# goto 7>
new  <	; NotEqual 7 x 1>

637:
old  <	; return int4$0#>
new  <	; Return 0>

645:
old  <	; push float x>
new  <	; PushFloat x>

649:
old  <	; push float float8$1#>
new  <	; PushFloat 1>

653:
old  <	; if x <= float8$1# goto 22>
new  <	; SignedLessThanEqual 22 x 1>

660:
old  <	; count = int4$0#>
new  <	; Assign count 0>

664:
old  <	; push float x>
new  <	; PushFloat x>

668:
old  <	; push float float8$1#>
new  <	; PushFloat 1>

672:
old  <	; if x <= float8$1# goto 20>
new  <	; SignedLessThanEqual 20 x 1>

679:
old  <	; push float x>
new  <	; PushFloat x>

683:
old  <	; push float float8$10#>
new  <	; PushFloat 10>

687:
old  <	; Â£temporary431 = x / float8$10#>
new  <	; SignedDivide Â£temporary431 x 10>

691:
old  <	; pop float x>
new  <	; PopFloat x>

695:
old  <	; count = count + int4$1#>
new  <	; BinaryAdd count count 1>

699:
old  <	; goto 11>
new  <	; Goto 11>

703:
old  <	; Â£temporary433 = count - int4$1#>
new  <	; BinarySubtract Â£temporary433 count 1>

708:
old  <	; return Â£temporary433>
new  <	; Return Â£temporary433>

715:
old  <	; count = int4$0#>
new  <	; Assign count 0>

719:
old  <	; push float x>
new  <	; PushFloat x>

723:
old  <	; push float float8$1#>
new  <	; PushFloat 1>

727:
old  <	; if x >= float8$1# goto 32>
new  <	; SignedGreaterThanEqual 32 x 1>

734:
old  <	; push float x>
new  <	; PushFloat x>

738:
old  <	; push float float8$10#>
new  <	; PushFloat 10>

742:
old  <	; Â£temporary435 = x * float8$10#>
new  <	; SignedMultiply Â£temporary435 x 10>

746:
old  <	; pop float x>
new  <	; PopFloat x>

750:
old  <	; count = count + int4$1#>
new  <	; BinaryAdd count count 1>

754:
old  <	; goto 23>
new  <	; Goto 23>

758:
old  <	; Â£temporary437 = -count>
new  <	; UnarySubtract Â£temporary437 count>

763:
old  <	; return Â£temporary437>
new  <	; Return Â£temporary437>

770:
old  <	; errno = int4$6#>
new  <	; Assign errno 6>

774:
old  <	; return int4$0#>
new  <	; Return 0>

782:
old  <	; function end log10_int>
new  <	; FunctionEnd log10_int>

787:
old  <	; minus = int4$0#>
new  <	; Assign minus 0>

791:
old  <	; if y >= int4$0# goto 5>
new  <	; SignedGreaterThanEqual 5 y 0>

796:
old  <	; Â£temporary439 = -y>
new  <	; UnarySubtract Â£temporary439 y>

801:
old  <	; y = Â£temporary439>
new  <	; Assign y Â£temporary439>

805:
old  <	; minus = int4$1#>
new  <	; Assign minus 1>

809:
old  <	; push float float8$1#>
new  <	; PushFloat 1>

813:
old  <	; pop float product>
new  <	; PopFloat product>

817:
old  <	; index = int4$0#>
new  <	; Assign index 0>

821:
old  <	; if index >= y goto 15>
new  <	; SignedGreaterThanEqual 15 index y>

827:
old  <	; push float product>
new  <	; PushFloat product>

831:
old  <	; push float x>
new  <	; PushFloat x>

835:
old  <	; Â£temporary442 = product * x>
new  <	; SignedMultiply Â£temporary442 product x>

839:
old  <	; pop float product>
new  <	; PopFloat product>

843:
old  <	; index = index + int4$1#>
new  <	; BinaryAdd index index 1>

847:
old  <	; goto 8>
new  <	; Goto 8>

851:
old  <	; if minus == int4$0# goto 21>
new  <	; Equal 21 minus 0>

856:
old  <	; push float float8$1#>
new  <	; PushFloat 1>

860:
old  <	; push float product>
new  <	; PushFloat product>

864:
old  <	; Â£temporary443 = float8$1# / product>
new  <	; SignedDivide Â£temporary443 1 product>

868:
old  <	; decrease stack>
new  <	; DecreaseStack>

871:
old  <	; goto 22>
new  <	; Goto 22>

875:
old  <	; push float product>
new  <	; PushFloat product>

879:
old  <	; return Â£temporary445>
new  <	; Return Â£temporary445>

886:
old  <	; function end pow_int>
new  <	; FunctionEnd pow_int>

891:
old  <	; push float x>
new  <	; PushFloat x>

895:
old  <	; push float float8$0#>
new  <	; PushFloat 0>

899:
old  <	; if x <= float8$0# goto 17>
new  <	; SignedLessThanEqual 17 x 0>

906:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

909:
old  <	; push float y>
new  <	; PushFloat y>

913:
old  <	; call header integral zero 0 stack no zero 1>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 1>

917:
old  <	; push float x>
new  <	; PushFloat x>

921:
old  <	; parameter x, offset 64>
new  <	; Parameter double x 64>

925:
old  <	; call function noellipse-noellipse log>
new  <	; Call log 40 0>

932:
old  <	; post call>
new  <	; PostCall 40>

938:
old  <	; Â£temporary447 = return_value>
new  <	; GetReturnValue Â£temporary447>

941:
old  <	; Â£temporary448 = y * Â£temporary447>
new  <	; SignedMultiply Â£temporary448 y Â£temporary447>

945:
old  <	; parameter Â£temporary448, offset 64>
new  <	; Parameter double Â£temporary448 64>

949:
old  <	; call function noellipse-noellipse exp>
new  <	; Call exp 40 0>

956:
old  <	; post call>
new  <	; PostCall 40>

959:
old  <	; Â£temporary449 = return_value>
new  <	; GetReturnValue Â£temporary449>

962:
old  <	; return Â£temporary449>
new  <	; Return Â£temporary449>

969:
old  <	; errno = int4$6#>
new  <	; Assign errno 6>

973:
old  <	; push float float8$0#>
new  <	; PushFloat 0>

977:
old  <	; return float8$0#>
new  <	; Return 0>

984:
old  <	; function end pow>
new  <	; FunctionEnd pow>

989:
old  <	; initializer Double>
new  <	; Initializer Double 2>

995:
old  <	; push float x>
new  <	; PushFloat x>

999:
old  <	; call header integral zero 0 stack no zero 1>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 1>

1003:
old  <	; push float float8$2#>
new  <	; PushFloat 2>

1007:
old  <	; parameter float8$2#, offset 60>
new  <	; Parameter double 2 60>

1011:
old  <	; Â£temporary452 = int_to_float n (SignedInt -> Double)>
new  <	; IntegralToFloating Â£temporary452 n>

1015:
old  <	; parameter Â£temporary452, offset 68>
new  <	; Parameter double Â£temporary452 68>

1019:
old  <	; call function noellipse-noellipse pow>
new  <	; Call pow 36 0>

1026:
old  <	; post call>
new  <	; PostCall 36>

1032:
old  <	; Â£temporary453 = return_value>
new  <	; GetReturnValue Â£temporary453>

1035:
old  <	; Â£temporary454 = x * Â£temporary453>
new  <	; SignedMultiply Â£temporary454 x Â£temporary453>

1039:
old  <	; return Â£temporary454>
new  <	; Return Â£temporary454>

1046:
old  <	; function end ldexp>
new  <	; FunctionEnd ldexp>

1051:
old  <	; initializer zero 4>
new  <	; InitializerZero 4>

1057:
old  <	; if p == int8$0# goto 55>
new  <	; Equal 55 p 0>

1062:
old  <	; push float x>
new  <	; PushFloat x>

1066:
old  <	; push float float8$0#>
new  <	; PushFloat 0>

1070:
old  <	; if x != float8$0# goto 8>
new  <	; NotEqual 8 x 0>

1077:
old  <	; Â£temporary459 -> p = *p>
new  <	; Dereference Â£temporary459 -> p p 0>

1081:
old  <	; Â£temporary459 -> p = int4$0#>
new  <	; Assign Â£temporary459 -> p 0>

1085:
old  <	; push float float8$0#>
new  <	; PushFloat 0>

1089:
old  <	; return float8$0#>
new  <	; Return 0>

1096:
old  <	; Â£temporary460 -> p = *p>
new  <	; Dereference Â£temporary460 -> p p 0>

1100:
old  <	; call header integral no zero 1 stack zero 0>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1104:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1107:
old  <	; push float x>
new  <	; PushFloat x>

1111:
old  <	; parameter x, offset 64>
new  <	; Parameter double x 64>

1115:
old  <	; call function noellipse-noellipse fabs>
new  <	; Call fabs 40 0>

1122:
old  <	; post call>
new  <	; PostCall 40>

1125:
old  <	; Â£temporary461 = return_value>
new  <	; GetReturnValue Â£temporary461>

1128:
old  <	; parameter Â£temporary461, offset 64>
new  <	; Parameter double Â£temporary461 64>

1132:
old  <	; call function noellipse-noellipse log>
new  <	; Call log 40 0>

1139:
old  <	; post call>
new  <	; PostCall 40>

1143:
old  <	; Â£temporary462 = return_value>
new  <	; GetReturnValue Â£temporary462>

1146:
old  <	; call header integral no zero 1 stack no zero 1>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 1>

1151:
old  <	; push float float8$2#>
new  <	; PushFloat 2>

1155:
old  <	; parameter float8$2#, offset 64>
new  <	; Parameter double 2 64>

1159:
old  <	; call function noellipse-noellipse log>
new  <	; Call log 40 0>

1166:
old  <	; post call>
new  <	; PostCall 40>

1173:
old  <	; Â£temporary463 = return_value>
new  <	; GetReturnValue Â£temporary463>

1176:
old  <	; Â£temporary464 = Â£temporary462 / Â£temporary463>
new  <	; SignedDivide Â£temporary464 Â£temporary462 Â£temporary463>

1180:
old  <	; Â£temporary465 = float_to_int Â£temporary464 (Double -> SignedInt)>
new  <	; FloatingToIntegral Â£temporary465 Â£temporary464>

1185:
old  <	; Â£temporary460 -> p = Â£temporary465 + int4$1#>
new  <	; BinaryAdd Â£temporary460 -> p Â£temporary465 1>

1190:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1193:
old  <	; push float x>
new  <	; PushFloat x>

1197:
old  <	; parameter x, offset 64>
new  <	; Parameter double x 64>

1201:
old  <	; call function noellipse-noellipse fabs>
new  <	; Call fabs 40 0>

1208:
old  <	; post call>
new  <	; PostCall 40>

1211:
old  <	; Â£temporary467 = return_value>
new  <	; GetReturnValue Â£temporary467>

1214:
old  <	; call header integral zero 0 stack no zero 1>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 1>

1218:
old  <	; push float float8$2#>
new  <	; PushFloat 2>

1222:
old  <	; parameter float8$2#, offset 64>
new  <	; Parameter double 2 64>

1226:
old  <	; Â£temporary468 -> p = *p>
new  <	; Dereference Â£temporary468 -> p p 0>

1230:
old  <	; Â£temporary469 = int_to_float Â£temporary468 -> p (SignedInt -> Double)>
new  <	; IntegralToFloating Â£temporary469 Â£temporary468 -> p>

1234:
old  <	; parameter Â£temporary469, offset 72>
new  <	; Parameter double Â£temporary469 72>

1238:
old  <	; call function noellipse-noellipse pow>
new  <	; Call pow 40 0>

1245:
old  <	; post call>
new  <	; PostCall 40>

1251:
old  <	; Â£temporary470 = return_value>
new  <	; GetReturnValue Â£temporary470>

1254:
old  <	; Â£temporary471 = Â£temporary467 / Â£temporary470>
new  <	; SignedDivide Â£temporary471 Â£temporary467 Â£temporary470>

1258:
old  <	; pop float quotient>
new  <	; PopFloat quotient>

1262:
old  <	; push float x>
new  <	; PushFloat x>

1266:
old  <	; push float float8$0#>
new  <	; PushFloat 0>

1270:
old  <	; if x >= float8$0# goto 53>
new  <	; SignedGreaterThanEqual 53 x 0>

1277:
old  <	; push float quotient>
new  <	; PushFloat quotient>

1281:
old  <	; Â£temporary473 = -quotient>
new  <	; UnarySubtract Â£temporary473 quotient>

1285:
old  <	; decrease stack>
new  <	; DecreaseStack>

1288:
old  <	; goto 54>
new  <	; Goto 54>

1292:
old  <	; push float quotient>
new  <	; PushFloat quotient>

1296:
old  <	; return Â£temporary474>
new  <	; Return Â£temporary474>

1303:
old  <	; push float x>
new  <	; PushFloat x>

1307:
old  <	; push float float8$0#>
new  <	; PushFloat 0>

1311:
old  <	; if x != float8$0# goto 60>
new  <	; NotEqual 60 x 0>

1318:
old  <	; push float float8$0#>
new  <	; PushFloat 0>

1322:
old  <	; return float8$0#>
new  <	; Return 0>

1329:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1332:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1335:
old  <	; push float x>
new  <	; PushFloat x>

1339:
old  <	; parameter x, offset 64>
new  <	; Parameter double x 64>

1343:
old  <	; call function noellipse-noellipse fabs>
new  <	; Call fabs 40 0>

1350:
old  <	; post call>
new  <	; PostCall 40>

1353:
old  <	; Â£temporary476 = return_value>
new  <	; GetReturnValue Â£temporary476>

1356:
old  <	; parameter Â£temporary476, offset 64>
new  <	; Parameter double Â£temporary476 64>

1360:
old  <	; call function noellipse-noellipse log>
new  <	; Call log 40 0>

1367:
old  <	; post call>
new  <	; PostCall 40>

1370:
old  <	; Â£temporary477 = return_value>
new  <	; GetReturnValue Â£temporary477>

1373:
old  <	; call header integral zero 0 stack no zero 1>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 1>

1377:
old  <	; push float float8$2#>
new  <	; PushFloat 2>

1381:
old  <	; parameter float8$2#, offset 64>
new  <	; Parameter double 2 64>

1385:
old  <	; call function noellipse-noellipse log>
new  <	; Call log 40 0>

1392:
old  <	; post call>
new  <	; PostCall 40>

1398:
old  <	; Â£temporary478 = return_value>
new  <	; GetReturnValue Â£temporary478>

1401:
old  <	; Â£temporary479 = Â£temporary477 / Â£temporary478>
new  <	; SignedDivide Â£temporary479 Â£temporary477 Â£temporary478>

1405:
old  <	; Â£temporary480 = float_to_int Â£temporary479 (Double -> SignedInt)>
new  <	; FloatingToIntegral Â£temporary480 Â£temporary479>

1410:
old  <	; n = Â£temporary480 + int4$1#>
new  <	; BinaryAdd n Â£temporary480 1>

1415:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 44 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1418:
old  <	; push float x>
new  <	; PushFloat x>

1422:
old  <	; parameter x, offset 68>
new  <	; Parameter double x 68>

1426:
old  <	; call function noellipse-noellipse fabs>
new  <	; Call fabs 44 0>

1433:
old  <	; post call>
new  <	; PostCall 44>

1436:
old  <	; Â£temporary482 = return_value>
new  <	; GetReturnValue Â£temporary482>

1439:
old  <	; call header integral zero 0 stack no zero 1>
new  <	; PreCall 44 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 1>

1443:
old  <	; push float float8$2#>
new  <	; PushFloat 2>

1447:
old  <	; parameter float8$2#, offset 68>
new  <	; Parameter double 2 68>

1451:
old  <	; Â£temporary483 = int_to_float n (SignedInt -> Double)>
new  <	; IntegralToFloating Â£temporary483 n>

1455:
old  <	; parameter Â£temporary483, offset 76>
new  <	; Parameter double Â£temporary483 76>

1459:
old  <	; call function noellipse-noellipse pow>
new  <	; Call pow 44 0>

1466:
old  <	; post call>
new  <	; PostCall 44>

1472:
old  <	; Â£temporary484 = return_value>
new  <	; GetReturnValue Â£temporary484>

1475:
old  <	; Â£temporary485 = Â£temporary482 / Â£temporary484>
new  <	; SignedDivide Â£temporary485 Â£temporary482 Â£temporary484>

1479:
old  <	; pop float a>
new  <	; PopFloat a>

1483:
old  <	; push float x>
new  <	; PushFloat x>

1487:
old  <	; push float float8$0#>
new  <	; PushFloat 0>

1491:
old  <	; if x >= float8$0# goto 103>
new  <	; SignedGreaterThanEqual 103 x 0>

1498:
old  <	; push float a>
new  <	; PushFloat a>

1502:
old  <	; Â£temporary487 = -a>
new  <	; UnarySubtract Â£temporary487 a>

1506:
old  <	; decrease stack>
new  <	; DecreaseStack>

1509:
old  <	; goto 104>
new  <	; Goto 104>

1513:
old  <	; push float a>
new  <	; PushFloat a>

1517:
old  <	; return Â£temporary488>
new  <	; Return Â£temporary488>

1524:
old  <	; function end frexp>
new  <	; FunctionEnd frexp>

1529:
old  <	; initializer Double>
new  <	; Initializer Double -1>

1535:
old  <	; initializer Double>
new  <	; Initializer Double 3>

1541:
old  <	; push float float8$0#>
new  <	; PushFloat 0>

1545:
old  <	; pop float n>
new  <	; PopFloat n>

1549:
old  <	; push float float8$1#>
new  <	; PushFloat 1>

1553:
old  <	; pop float plusMinusOne>
new  <	; PopFloat plusMinusOne>

1557:
old  <	; push float float8$1#>
new  <	; PushFloat 1>

1561:
old  <	; pop float faculty>
new  <	; PopFloat faculty>

1565:
old  <	; push float x>
new  <	; PushFloat x>

1569:
old  <	; pop float power>
new  <	; PopFloat power>

1573:
old  <	; push float float8$0#>
new  <	; PushFloat 0>

1577:
old  <	; pop float sum>
new  <	; PopFloat sum>

1581:
old  <	; push float plusMinusOne>
new  <	; PushFloat plusMinusOne>

1585:
old  <	; push float power>
new  <	; PushFloat power>

1589:
old  <	; push float faculty>
new  <	; PushFloat faculty>

1593:
old  <	; Â£temporary501 = power / faculty>
new  <	; SignedDivide Â£temporary501 power faculty>

1597:
old  <	; Â£temporary502 = plusMinusOne * Â£temporary501>
new  <	; SignedMultiply Â£temporary502 plusMinusOne Â£temporary501>

1601:
old  <	; pop float term>
new  <	; PopFloat term>

1605:
old  <	; push float sum>
new  <	; PushFloat sum>

1609:
old  <	; push float term>
new  <	; PushFloat term>

1613:
old  <	; Â£temporary503 = sum + term>
new  <	; BinaryAdd Â£temporary503 sum term>

1617:
old  <	; pop float sum>
new  <	; PopFloat sum>

1621:
old  <	; push float plusMinusOne>
new  <	; PushFloat plusMinusOne>

1625:
old  <	; push float float8$minus1#>
new  <	; PushFloat -1>

1629:
old  <	; Â£temporary504 = plusMinusOne * float8$minus1#>
new  <	; SignedMultiply Â£temporary504 plusMinusOne -1>

1633:
old  <	; pop float plusMinusOne>
new  <	; PopFloat plusMinusOne>

1637:
old  <	; push float power>
new  <	; PushFloat power>

1641:
old  <	; push float x>
new  <	; PushFloat x>

1645:
old  <	; push float x>
new  <	; PushFloat x>

1649:
old  <	; Â£temporary505 = x * x>
new  <	; SignedMultiply Â£temporary505 x x>

1653:
old  <	; Â£temporary506 = power * Â£temporary505>
new  <	; SignedMultiply Â£temporary506 power Â£temporary505>

1657:
old  <	; pop float power>
new  <	; PopFloat power>

1661:
old  <	; push float faculty>
new  <	; PushFloat faculty>

1665:
old  <	; push float n>
new  <	; PushFloat n>

1669:
old  <	; push float float8$2#>
new  <	; PushFloat 2>

1673:
old  <	; Â£temporary507 = n + float8$2#>
new  <	; BinaryAdd Â£temporary507 n 2>

1677:
old  <	; push float n>
new  <	; PushFloat n>

1681:
old  <	; push float float8$3#>
new  <	; PushFloat 3>

1685:
old  <	; Â£temporary508 = n + float8$3#>
new  <	; BinaryAdd Â£temporary508 n 3>

1689:
old  <	; Â£temporary509 = Â£temporary507 * Â£temporary508>
new  <	; SignedMultiply Â£temporary509 Â£temporary507 Â£temporary508>

1693:
old  <	; Â£temporary510 = faculty * Â£temporary509>
new  <	; SignedMultiply Â£temporary510 faculty Â£temporary509>

1697:
old  <	; pop float faculty>
new  <	; PopFloat faculty>

1701:
old  <	; push float n>
new  <	; PushFloat n>

1705:
old  <	; push float float8$2#>
new  <	; PushFloat 2>

1709:
old  <	; Â£temporary511 = n + float8$2#>
new  <	; BinaryAdd Â£temporary511 n 2>

1713:
old  <	; pop float n>
new  <	; PopFloat n>

1717:
old  <	; check track map float stack>
new  <	; CheckTrackMapFloatStack>

1720:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 80 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1723:
old  <	; push float term>
new  <	; PushFloat term>

1727:
old  <	; parameter term, offset 104>
new  <	; Parameter double term 104>

1731:
old  <	; call function noellipse-noellipse fabs>
new  <	; Call fabs 80 0>

1738:
old  <	; post call>
new  <	; PostCall 80>

1741:
old  <	; Â£temporary512 = return_value>
new  <	; GetReturnValue Â£temporary512>

1744:
old  <	; push float float8$0.000000001#>
new  <	; PushFloat 0.000000001>

1748:
old  <	; if Â£temporary512 >= float8$0.000000001# goto 10>
new  <	; SignedGreaterThanEqual 10 Â£temporary512 0.000000001>

1755:
old  <	; push float sum>
new  <	; PushFloat sum>

1759:
old  <	; return sum>
new  <	; Return sum>

1766:
old  <	; function end sin>
new  <	; FunctionEnd sin>

1771:
old  <	; push float float8$0#>
new  <	; PushFloat 0>

1775:
old  <	; pop float n>
new  <	; PopFloat n>

1779:
old  <	; push float float8$1#>
new  <	; PushFloat 1>

1783:
old  <	; pop float plusMinusOne>
new  <	; PopFloat plusMinusOne>

1787:
old  <	; push float float8$1#>
new  <	; PushFloat 1>

1791:
old  <	; pop float faculty>
new  <	; PopFloat faculty>

1795:
old  <	; push float float8$1#>
new  <	; PushFloat 1>

1799:
old  <	; pop float power>
new  <	; PopFloat power>

1803:
old  <	; push float float8$0#>
new  <	; PushFloat 0>

1807:
old  <	; pop float sum>
new  <	; PopFloat sum>

1811:
old  <	; push float plusMinusOne>
new  <	; PushFloat plusMinusOne>

1815:
old  <	; push float power>
new  <	; PushFloat power>

1819:
old  <	; push float faculty>
new  <	; PushFloat faculty>

1823:
old  <	; Â£temporary515 = power / faculty>
new  <	; SignedDivide Â£temporary515 power faculty>

1827:
old  <	; Â£temporary516 = plusMinusOne * Â£temporary515>
new  <	; SignedMultiply Â£temporary516 plusMinusOne Â£temporary515>

1831:
old  <	; pop float term>
new  <	; PopFloat term>

1835:
old  <	; push float sum>
new  <	; PushFloat sum>

1839:
old  <	; push float term>
new  <	; PushFloat term>

1843:
old  <	; Â£temporary517 = sum + term>
new  <	; BinaryAdd Â£temporary517 sum term>

1847:
old  <	; pop float sum>
new  <	; PopFloat sum>

1851:
old  <	; push float plusMinusOne>
new  <	; PushFloat plusMinusOne>

1855:
old  <	; push float float8$minus1#>
new  <	; PushFloat -1>

1859:
old  <	; Â£temporary518 = plusMinusOne * float8$minus1#>
new  <	; SignedMultiply Â£temporary518 plusMinusOne -1>

1863:
old  <	; pop float plusMinusOne>
new  <	; PopFloat plusMinusOne>

1867:
old  <	; push float power>
new  <	; PushFloat power>

1871:
old  <	; push float x>
new  <	; PushFloat x>

1875:
old  <	; push float x>
new  <	; PushFloat x>

1879:
old  <	; Â£temporary519 = x * x>
new  <	; SignedMultiply Â£temporary519 x x>

1883:
old  <	; Â£temporary520 = power * Â£temporary519>
new  <	; SignedMultiply Â£temporary520 power Â£temporary519>

1887:
old  <	; pop float power>
new  <	; PopFloat power>

1891:
old  <	; push float faculty>
new  <	; PushFloat faculty>

1895:
old  <	; push float n>
new  <	; PushFloat n>

1899:
old  <	; push float float8$1#>
new  <	; PushFloat 1>

1903:
old  <	; Â£temporary521 = n + float8$1#>
new  <	; BinaryAdd Â£temporary521 n 1>

1907:
old  <	; push float n>
new  <	; PushFloat n>

1911:
old  <	; push float float8$2#>
new  <	; PushFloat 2>

1915:
old  <	; Â£temporary522 = n + float8$2#>
new  <	; BinaryAdd Â£temporary522 n 2>

1919:
old  <	; Â£temporary523 = Â£temporary521 * Â£temporary522>
new  <	; SignedMultiply Â£temporary523 Â£temporary521 Â£temporary522>

1923:
old  <	; Â£temporary524 = faculty * Â£temporary523>
new  <	; SignedMultiply Â£temporary524 faculty Â£temporary523>

1927:
old  <	; pop float faculty>
new  <	; PopFloat faculty>

1931:
old  <	; push float n>
new  <	; PushFloat n>

1935:
old  <	; push float float8$2#>
new  <	; PushFloat 2>

1939:
old  <	; Â£temporary525 = n + float8$2#>
new  <	; BinaryAdd Â£temporary525 n 2>

1943:
old  <	; pop float n>
new  <	; PopFloat n>

1947:
old  <	; check track map float stack>
new  <	; CheckTrackMapFloatStack>

1950:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 80 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1953:
old  <	; push float term>
new  <	; PushFloat term>

1957:
old  <	; parameter term, offset 104>
new  <	; Parameter double term 104>

1961:
old  <	; call function noellipse-noellipse fabs>
new  <	; Call fabs 80 0>

1968:
old  <	; post call>
new  <	; PostCall 80>

1971:
old  <	; Â£temporary526 = return_value>
new  <	; GetReturnValue Â£temporary526>

1974:
old  <	; push float float8$0.000000001#>
new  <	; PushFloat 0.000000001>

1978:
old  <	; if Â£temporary526 >= float8$0.000000001# goto 10>
new  <	; SignedGreaterThanEqual 10 Â£temporary526 0.000000001>

1985:
old  <	; push float sum>
new  <	; PushFloat sum>

1989:
old  <	; return sum>
new  <	; Return sum>

1996:
old  <	; function end cos>
new  <	; FunctionEnd cos>

2001:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2004:
old  <	; push float x>
new  <	; PushFloat x>

2008:
old  <	; parameter x, offset 56>
new  <	; Parameter double x 56>

2012:
old  <	; call function noellipse-noellipse cos>
new  <	; Call cos 32 0>

2019:
old  <	; post call>
new  <	; PostCall 32>

2022:
old  <	; Â£temporary529 = return_value>
new  <	; GetReturnValue Â£temporary529>

2025:
old  <	; top float cos_value>
new  <	; TopFloat cos_value>

2029:
old  <	; push float float8$0#>
new  <	; PushFloat 0>

2033:
old  <	; if cos_value == float8$0# goto 18>
new  <	; Equal 18 cos_value 0>

2040:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2043:
old  <	; push float x>
new  <	; PushFloat x>

2047:
old  <	; parameter x, offset 64>
new  <	; Parameter double x 64>

2051:
old  <	; call function noellipse-noellipse sin>
new  <	; Call sin 40 0>

2058:
old  <	; post call>
new  <	; PostCall 40>

2061:
old  <	; Â£temporary531 = return_value>
new  <	; GetReturnValue Â£temporary531>

2064:
old  <	; push float cos_value>
new  <	; PushFloat cos_value>

2068:
old  <	; Â£temporary532 = Â£temporary531 / cos_value>
new  <	; SignedDivide Â£temporary532 Â£temporary531 cos_value>

2072:
old  <	; return Â£temporary532>
new  <	; Return Â£temporary532>

2079:
old  <	; errno = int4$6#>
new  <	; Assign errno 6>

2083:
old  <	; push float float8$0#>
new  <	; PushFloat 0>

2087:
old  <	; return float8$0#>
new  <	; Return 0>

2094:
old  <	; function end tan>
new  <	; FunctionEnd tan>

2099:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2102:
old  <	; push float x>
new  <	; PushFloat x>

2106:
old  <	; parameter x, offset 56>
new  <	; Parameter double x 56>

2110:
old  <	; call function noellipse-noellipse exp>
new  <	; Call exp 32 0>

2117:
old  <	; post call>
new  <	; PostCall 32>

2120:
old  <	; Â£temporary535 = return_value>
new  <	; GetReturnValue Â£temporary535>

2123:
old  <	; call header integral zero 0 stack no zero 1>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 1>

2127:
old  <	; push float x>
new  <	; PushFloat x>

2131:
old  <	; Â£temporary536 = -x>
new  <	; UnarySubtract Â£temporary536 x>

2135:
old  <	; parameter Â£temporary536, offset 56>
new  <	; Parameter double Â£temporary536 56>

2139:
old  <	; call function noellipse-noellipse exp>
new  <	; Call exp 32 0>

2146:
old  <	; post call>
new  <	; PostCall 32>

2152:
old  <	; Â£temporary537 = return_value>
new  <	; GetReturnValue Â£temporary537>

2155:
old  <	; Â£temporary538 = Â£temporary535 - Â£temporary537>
new  <	; BinarySubtract Â£temporary538 Â£temporary535 Â£temporary537>

2159:
old  <	; push float float8$2#>
new  <	; PushFloat 2>

2163:
old  <	; Â£temporary539 = Â£temporary538 / float8$2#>
new  <	; SignedDivide Â£temporary539 Â£temporary538 2>

2167:
old  <	; return Â£temporary539>
new  <	; Return Â£temporary539>

2174:
old  <	; function end sinh>
new  <	; FunctionEnd sinh>

2179:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2182:
old  <	; push float x>
new  <	; PushFloat x>

2186:
old  <	; parameter x, offset 56>
new  <	; Parameter double x 56>

2190:
old  <	; call function noellipse-noellipse exp>
new  <	; Call exp 32 0>

2197:
old  <	; post call>
new  <	; PostCall 32>

2200:
old  <	; Â£temporary542 = return_value>
new  <	; GetReturnValue Â£temporary542>

2203:
old  <	; call header integral zero 0 stack no zero 1>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 1>

2207:
old  <	; push float x>
new  <	; PushFloat x>

2211:
old  <	; Â£temporary543 = -x>
new  <	; UnarySubtract Â£temporary543 x>

2215:
old  <	; parameter Â£temporary543, offset 56>
new  <	; Parameter double Â£temporary543 56>

2219:
old  <	; call function noellipse-noellipse exp>
new  <	; Call exp 32 0>

2226:
old  <	; post call>
new  <	; PostCall 32>

2232:
old  <	; Â£temporary544 = return_value>
new  <	; GetReturnValue Â£temporary544>

2235:
old  <	; Â£temporary545 = Â£temporary542 + Â£temporary544>
new  <	; BinaryAdd Â£temporary545 Â£temporary542 Â£temporary544>

2239:
old  <	; push float float8$2#>
new  <	; PushFloat 2>

2243:
old  <	; Â£temporary546 = Â£temporary545 / float8$2#>
new  <	; SignedDivide Â£temporary546 Â£temporary545 2>

2247:
old  <	; return Â£temporary546>
new  <	; Return Â£temporary546>

2254:
old  <	; function end cosh>
new  <	; FunctionEnd cosh>

2259:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2262:
old  <	; push float x>
new  <	; PushFloat x>

2266:
old  <	; parameter x, offset 56>
new  <	; Parameter double x 56>

2270:
old  <	; call function noellipse-noellipse cosh>
new  <	; Call cosh 32 0>

2277:
old  <	; post call>
new  <	; PostCall 32>

2280:
old  <	; Â£temporary549 = return_value>
new  <	; GetReturnValue Â£temporary549>

2283:
old  <	; top float coh>
new  <	; TopFloat coh>

2287:
old  <	; push float float8$0#>
new  <	; PushFloat 0>

2291:
old  <	; if coh == float8$0# goto 20>
new  <	; Equal 20 coh 0>

2298:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2301:
old  <	; push float x>
new  <	; PushFloat x>

2305:
old  <	; parameter x, offset 64>
new  <	; Parameter double x 64>

2309:
old  <	; call function noellipse-noellipse sinh>
new  <	; Call sinh 40 0>

2316:
old  <	; post call>
new  <	; PostCall 40>

2319:
old  <	; Â£temporary551 = return_value>
new  <	; GetReturnValue Â£temporary551>

2322:
old  <	; top float sh>
new  <	; TopFloat sh>

2326:
old  <	; push float coh>
new  <	; PushFloat coh>

2330:
old  <	; Â£temporary552 = sh / coh>
new  <	; SignedDivide Â£temporary552 sh coh>

2334:
old  <	; top float y>
new  <	; TopFloat y>

2338:
old  <	; return y>
new  <	; Return y>

2345:
old  <	; errno = int4$6#>
new  <	; Assign errno 6>

2349:
old  <	; push float float8$0#>
new  <	; PushFloat 0>

2353:
old  <	; return float8$0#>
new  <	; Return 0>

2360:
old  <	; function end tanh>
new  <	; FunctionEnd tanh>

2365:
old  <	; push float v>
new  <	; PushFloat v>

2369:
old  <	; push float float8$0#>
new  <	; PushFloat 0>

2373:
old  <	; if v < float8$0# goto 30>
new  <	; SignedLessThan 30 v 0>

2380:
old  <	; push float float8$1#>
new  <	; PushFloat 1>

2384:
old  <	; pop float x_nplus1>
new  <	; PopFloat x_nplus1>

2388:
old  <	; count = int4$0#>
new  <	; Assign count 0>

2392:
old  <	; push float x_nplus1>
new  <	; PushFloat x_nplus1>

2396:
old  <	; top float x>
new  <	; TopFloat x>

2400:
old  <	; push float v>
new  <	; PushFloat v>

2404:
old  <	; push float x>
new  <	; PushFloat x>

2408:
old  <	; Â£temporary556 = v / x>
new  <	; SignedDivide Â£temporary556 v x>

2412:
old  <	; Â£temporary557 = x + Â£temporary556>
new  <	; BinaryAdd Â£temporary557 x Â£temporary556>

2416:
old  <	; push float float8$2#>
new  <	; PushFloat 2>

2420:
old  <	; Â£temporary558 = Â£temporary557 / float8$2#>
new  <	; SignedDivide Â£temporary558 Â£temporary557 2>

2424:
old  <	; pop float x_nplus1>
new  <	; PopFloat x_nplus1>

2428:
old  <	; check track map float stack>
new  <	; CheckTrackMapFloatStack>

2431:
old  <	; Â£temporary559 = count + int4$1#>
new  <	; BinaryAdd Â£temporary559 count 1>

2436:
old  <	; if Â£temporary559 >= int4$1000# goto 28>
new  <	; SignedGreaterThanEqual 28 Â£temporary559 1000>

2441:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2444:
old  <	; push float x_nplus1>
new  <	; PushFloat x_nplus1>

2448:
old  <	; push float x>
new  <	; PushFloat x>

2452:
old  <	; Â£temporary561 = x_nplus1 - x>
new  <	; BinarySubtract Â£temporary561 x_nplus1 x>

2456:
old  <	; parameter Â£temporary561, offset 76>
new  <	; Parameter double Â£temporary561 76>

2460:
old  <	; call function noellipse-noellipse fabs>
new  <	; Call fabs 52 0>

2467:
old  <	; post call>
new  <	; PostCall 52>

2470:
old  <	; Â£temporary562 = return_value>
new  <	; GetReturnValue Â£temporary562>

2473:
old  <	; push float float8$0.000000001#>
new  <	; PushFloat 0.000000001>

2477:
old  <	; if Â£temporary562 >= float8$0.000000001# goto 6>
new  <	; SignedGreaterThanEqual 6 Â£temporary562 0.000000001>

2484:
old  <	; push float x_nplus1>
new  <	; PushFloat x_nplus1>

2488:
old  <	; return x_nplus1>
new  <	; Return x_nplus1>

2495:
old  <	; errno = int4$6#>
new  <	; Assign errno 6>

2499:
old  <	; push float float8$0#>
new  <	; PushFloat 0>

2503:
old  <	; return float8$0#>
new  <	; Return 0>

2510:
old  <	; function end sqrt>
new  <	; FunctionEnd sqrt>

2515:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2518:
old  <	; push float x>
new  <	; PushFloat x>

2522:
old  <	; parameter x, offset 56>
new  <	; Parameter double x 56>

2526:
old  <	; call function noellipse-noellipse fabs>
new  <	; Call fabs 32 0>

2533:
old  <	; post call>
new  <	; PostCall 32>

2536:
old  <	; Â£temporary566 = return_value>
new  <	; GetReturnValue Â£temporary566>

2539:
old  <	; push float float8$1#>
new  <	; PushFloat 1>

2543:
old  <	; if Â£temporary566 > float8$1# goto 28>
new  <	; SignedGreaterThan 28 Â£temporary566 1>

2550:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2553:
old  <	; push float x>
new  <	; PushFloat x>

2557:
old  <	; parameter x, offset 56>
new  <	; Parameter double x 56>

2561:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2564:
old  <	; push float float8$1#>
new  <	; PushFloat 1>

2568:
old  <	; push float x>
new  <	; PushFloat x>

2572:
old  <	; Â£temporary568 = float8$1# + x>
new  <	; BinaryAdd Â£temporary568 1 x>

2576:
old  <	; push float float8$1#>
new  <	; PushFloat 1>

2580:
old  <	; push float x>
new  <	; PushFloat x>

2584:
old  <	; Â£temporary569 = float8$1# - x>
new  <	; BinarySubtract Â£temporary569 1 x>

2588:
old  <	; Â£temporary570 = Â£temporary568 * Â£temporary569>
new  <	; SignedMultiply Â£temporary570 Â£temporary568 Â£temporary569>

2592:
old  <	; parameter Â£temporary570, offset 88>
new  <	; Parameter double Â£temporary570 88>

2596:
old  <	; call function noellipse-noellipse sqrt>
new  <	; Call sqrt 64 0>

2603:
old  <	; post call>
new  <	; PostCall 64>

2606:
old  <	; Â£temporary571 = return_value>
new  <	; GetReturnValue Â£temporary571>

2609:
old  <	; parameter Â£temporary571, offset 64>
new  <	; Parameter double Â£temporary571 64>

2613:
old  <	; call function noellipse-noellipse atan2>
new  <	; Call atan2 32 0>

2620:
old  <	; post call>
new  <	; PostCall 32>

2623:
old  <	; Â£temporary572 = return_value>
new  <	; GetReturnValue Â£temporary572>

2626:
old  <	; return Â£temporary572>
new  <	; Return Â£temporary572>

2633:
old  <	; errno = int4$6#>
new  <	; Assign errno 6>

2637:
old  <	; push float float8$0#>
new  <	; PushFloat 0>

2641:
old  <	; return float8$0#>
new  <	; Return 0>

2648:
old  <	; function end asin>
new  <	; FunctionEnd asin>

2653:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2656:
old  <	; push float x>
new  <	; PushFloat x>

2660:
old  <	; parameter x, offset 56>
new  <	; Parameter double x 56>

2664:
old  <	; call function noellipse-noellipse fabs>
new  <	; Call fabs 32 0>

2671:
old  <	; post call>
new  <	; PostCall 32>

2674:
old  <	; Â£temporary577 = return_value>
new  <	; GetReturnValue Â£temporary577>

2677:
old  <	; push float float8$1#>
new  <	; PushFloat 1>

2681:
old  <	; if Â£temporary577 > float8$1# goto 28>
new  <	; SignedGreaterThan 28 Â£temporary577 1>

2688:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2691:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2694:
old  <	; push float float8$1#>
new  <	; PushFloat 1>

2698:
old  <	; push float x>
new  <	; PushFloat x>

2702:
old  <	; Â£temporary579 = float8$1# + x>
new  <	; BinaryAdd Â£temporary579 1 x>

2706:
old  <	; push float float8$1#>
new  <	; PushFloat 1>

2710:
old  <	; push float x>
new  <	; PushFloat x>

2714:
old  <	; Â£temporary580 = float8$1# - x>
new  <	; BinarySubtract Â£temporary580 1 x>

2718:
old  <	; Â£temporary581 = Â£temporary579 * Â£temporary580>
new  <	; SignedMultiply Â£temporary581 Â£temporary579 Â£temporary580>

2722:
old  <	; parameter Â£temporary581, offset 56>
new  <	; Parameter double Â£temporary581 56>

2726:
old  <	; call function noellipse-noellipse sqrt>
new  <	; Call sqrt 32 0>

2733:
old  <	; post call>
new  <	; PostCall 32>

2736:
old  <	; Â£temporary582 = return_value>
new  <	; GetReturnValue Â£temporary582>

2739:
old  <	; parameter Â£temporary582, offset 56>
new  <	; Parameter double Â£temporary582 56>

2743:
old  <	; push float x>
new  <	; PushFloat x>

2747:
old  <	; parameter x, offset 64>
new  <	; Parameter double x 64>

2751:
old  <	; call function noellipse-noellipse atan2>
new  <	; Call atan2 32 0>

2758:
old  <	; post call>
new  <	; PostCall 32>

2761:
old  <	; Â£temporary583 = return_value>
new  <	; GetReturnValue Â£temporary583>

2764:
old  <	; return Â£temporary583>
new  <	; Return Â£temporary583>

2771:
old  <	; errno = int4$6#>
new  <	; Assign errno 6>

2775:
old  <	; push float float8$0#>
new  <	; PushFloat 0>

2779:
old  <	; return float8$0#>
new  <	; Return 0>

2786:
old  <	; function end acos>
new  <	; FunctionEnd acos>

2791:
old  <	; initializer Double>
new  <	; Initializer Double 1.5707963267948966192>

2797:
old  <	; initializer Double>
new  <	; Initializer Double -1.5707963267948966192>

2803:
old  <	; push float v>
new  <	; PushFloat v>

2807:
old  <	; push float float8$1#>
new  <	; PushFloat 1>

2811:
old  <	; if v != float8$1# goto 5>
new  <	; NotEqual 5 v 1>

2818:
old  <	; push float float8$1.5707963267948966192#>
new  <	; PushFloat 1.5707963267948966192>

2822:
old  <	; return float8$1.5707963267948966192#>
new  <	; Return 1.5707963267948966192>

2829:
old  <	; push float v>
new  <	; PushFloat v>

2833:
old  <	; push float float8$minus1#>
new  <	; PushFloat -1>

2837:
old  <	; if v != float8$minus1# goto 10>
new  <	; NotEqual 10 v -1>

2844:
old  <	; push float float8$minus1.5707963267948966192#>
new  <	; PushFloat -1.5707963267948966192>

2848:
old  <	; return float8$minus1.5707963267948966192#>
new  <	; Return -1.5707963267948966192>

2855:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2858:
old  <	; push float v>
new  <	; PushFloat v>

2862:
old  <	; parameter v, offset 56>
new  <	; Parameter double v 56>

2866:
old  <	; call function noellipse-noellipse fabs>
new  <	; Call fabs 32 0>

2873:
old  <	; post call>
new  <	; PostCall 32>

2876:
old  <	; Â£temporary590 = return_value>
new  <	; GetReturnValue Â£temporary590>

2879:
old  <	; push float float8$1#>
new  <	; PushFloat 1>

2883:
old  <	; if Â£temporary590 >= float8$1# goto 55>
new  <	; SignedGreaterThanEqual 55 Â£temporary590 1>

2890:
old  <	; push float float8$1#>
new  <	; PushFloat 1>

2894:
old  <	; pop float x_nplus1>
new  <	; PopFloat x_nplus1>

2898:
old  <	; count = int4$0#>
new  <	; Assign count 0>

2902:
old  <	; push float x_nplus1>
new  <	; PushFloat x_nplus1>

2906:
old  <	; top float x>
new  <	; TopFloat x>

2910:
old  <	; call header integral zero 0 stack no zero 1>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 1>

2914:
old  <	; push float x>
new  <	; PushFloat x>

2918:
old  <	; parameter x, offset 76>
new  <	; Parameter double x 76>

2922:
old  <	; call function noellipse-noellipse tan>
new  <	; Call tan 52 0>

2929:
old  <	; post call>
new  <	; PostCall 52>

2935:
old  <	; Â£temporary592 = return_value>
new  <	; GetReturnValue Â£temporary592>

2938:
old  <	; Â£temporary593 = x - Â£temporary592>
new  <	; BinarySubtract Â£temporary593 x Â£temporary592>

2942:
old  <	; push float v>
new  <	; PushFloat v>

2946:
old  <	; call header integral zero 0 stack no zero 2>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 2>

2951:
old  <	; push float x>
new  <	; PushFloat x>

2955:
old  <	; parameter x, offset 76>
new  <	; Parameter double x 76>

2959:
old  <	; call function noellipse-noellipse cos>
new  <	; Call cos 52 0>

2966:
old  <	; post call>
new  <	; PostCall 52>

2973:
old  <	; Â£temporary594 = return_value>
new  <	; GetReturnValue Â£temporary594>

2976:
old  <	; Â£temporary595 = v / Â£temporary594>
new  <	; SignedDivide Â£temporary595 v Â£temporary594>

2980:
old  <	; Â£temporary596 = Â£temporary593 + Â£temporary595>
new  <	; BinaryAdd Â£temporary596 Â£temporary593 Â£temporary595>

2984:
old  <	; pop float x_nplus1>
new  <	; PopFloat x_nplus1>

2988:
old  <	; check track map float stack>
new  <	; CheckTrackMapFloatStack>

2991:
old  <	; Â£temporary597 = count + int4$1#>
new  <	; BinaryAdd Â£temporary597 count 1>

2996:
old  <	; if Â£temporary597 >= int4$1000# goto 53>
new  <	; SignedGreaterThanEqual 53 Â£temporary597 1000>

3001:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3004:
old  <	; push float x_nplus1>
new  <	; PushFloat x_nplus1>

3008:
old  <	; push float x>
new  <	; PushFloat x>

3012:
old  <	; Â£temporary599 = x_nplus1 - x>
new  <	; BinarySubtract Â£temporary599 x_nplus1 x>

3016:
old  <	; parameter Â£temporary599, offset 76>
new  <	; Parameter double Â£temporary599 76>

3020:
old  <	; call function noellipse-noellipse fabs>
new  <	; Call fabs 52 0>

3027:
old  <	; post call>
new  <	; PostCall 52>

3030:
old  <	; Â£temporary600 = return_value>
new  <	; GetReturnValue Â£temporary600>

3033:
old  <	; push float float8$0.000000001#>
new  <	; PushFloat 0.000000001>

3037:
old  <	; if Â£temporary600 >= float8$0.000000001# goto 21>
new  <	; SignedGreaterThanEqual 21 Â£temporary600 0.000000001>

3044:
old  <	; push float x_nplus1>
new  <	; PushFloat x_nplus1>

3048:
old  <	; return x_nplus1>
new  <	; Return x_nplus1>

3055:
old  <	; errno = int4$6#>
new  <	; Assign errno 6>

3059:
old  <	; push float float8$0#>
new  <	; PushFloat 0>

3063:
old  <	; return float8$0#>
new  <	; Return 0>

3070:
old  <	; function end asin2>
new  <	; FunctionEnd asin2>

3075:
old  <	; initializer String>
new  <	; Initializer String x_n %f, x_nplus1 %f\n>

3081:
old  <	; push float v>
new  <	; PushFloat v>

3085:
old  <	; push float float8$1#>
new  <	; PushFloat 1>

3089:
old  <	; if v != float8$1# goto 5>
new  <	; NotEqual 5 v 1>

3096:
old  <	; push float float8$0#>
new  <	; PushFloat 0>

3100:
old  <	; return float8$0#>
new  <	; Return 0>

3107:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3110:
old  <	; push float v>
new  <	; PushFloat v>

3114:
old  <	; parameter v, offset 56>
new  <	; Parameter double v 56>

3118:
old  <	; call function noellipse-noellipse fabs>
new  <	; Call fabs 32 0>

3125:
old  <	; post call>
new  <	; PostCall 32>

3128:
old  <	; Â£temporary608 = return_value>
new  <	; GetReturnValue Â£temporary608>

3131:
old  <	; push float float8$1#>
new  <	; PushFloat 1>

3135:
old  <	; if Â£temporary608 > float8$1# goto 54>
new  <	; SignedGreaterThan 54 Â£temporary608 1>

3142:
old  <	; push float float8$1#>
new  <	; PushFloat 1>

3146:
old  <	; top float x_nplus1>
new  <	; TopFloat x_nplus1>

3150:
old  <	; top float x_n>
new  <	; TopFloat x_n>

3154:
old  <	; call header integral zero 0 stack no zero 1>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 1>

3158:
old  <	; push float x_n>
new  <	; PushFloat x_n>

3162:
old  <	; parameter x_n, offset 72>
new  <	; Parameter double x_n 72>

3166:
old  <	; call function noellipse-noellipse cos>
new  <	; Call cos 48 0>

3173:
old  <	; post call>
new  <	; PostCall 48>

3179:
old  <	; Â£temporary610 = return_value>
new  <	; GetReturnValue Â£temporary610>

3182:
old  <	; push float v>
new  <	; PushFloat v>

3186:
old  <	; Â£temporary611 = Â£temporary610 - v>
new  <	; BinarySubtract Â£temporary611 Â£temporary610 v>

3190:
old  <	; call header integral zero 0 stack no zero 2>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 2>

3195:
old  <	; push float x_n>
new  <	; PushFloat x_n>

3199:
old  <	; parameter x_n, offset 72>
new  <	; Parameter double x_n 72>

3203:
old  <	; call function noellipse-noellipse sin>
new  <	; Call sin 48 0>

3210:
old  <	; post call>
new  <	; PostCall 48>

3217:
old  <	; Â£temporary612 = return_value>
new  <	; GetReturnValue Â£temporary612>

3220:
old  <	; Â£temporary613 = Â£temporary611 / Â£temporary612>
new  <	; SignedDivide Â£temporary613 Â£temporary611 Â£temporary612>

3224:
old  <	; Â£temporary614 = x_n + Â£temporary613>
new  <	; BinaryAdd Â£temporary614 x_n Â£temporary613>

3228:
old  <	; pop float x_nplus1>
new  <	; PopFloat x_nplus1>

3232:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3235:
old  <	; parameter string_x_n2025f2C20x_nplus12025f0A#, offset 72>
new  <	; Parameter pointer "x_n %f, x_nplus1 %f\n" 72>

3239:
old  <	; push float x_n>
new  <	; PushFloat x_n>

3243:
old  <	; parameter x_n, offset 80>
new  <	; Parameter double x_n 80>

3247:
old  <	; push float x_nplus1>
new  <	; PushFloat x_nplus1>

3251:
old  <	; parameter x_nplus1, offset 88>
new  <	; Parameter double x_nplus1 88>

3255:
old  <	; call function noellipse-ellipse printf, extra 16>
new  <	; Call printf 48 16>

3264:
old  <	; post call>
new  <	; PostCall 48>

3267:
old  <	; check track map float stack>
new  <	; CheckTrackMapFloatStack>

3270:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3273:
old  <	; push float x_nplus1>
new  <	; PushFloat x_nplus1>

3277:
old  <	; push float x_n>
new  <	; PushFloat x_n>

3281:
old  <	; Â£temporary616 = x_nplus1 - x_n>
new  <	; BinarySubtract Â£temporary616 x_nplus1 x_n>

3285:
old  <	; parameter Â£temporary616, offset 72>
new  <	; Parameter double Â£temporary616 72>

3289:
old  <	; call function noellipse-noellipse fabs>
new  <	; Call fabs 48 0>

3296:
old  <	; post call>
new  <	; PostCall 48>

3299:
old  <	; Â£temporary617 = return_value>
new  <	; GetReturnValue Â£temporary617>

3302:
old  <	; push float float8$0.000000001#>
new  <	; PushFloat 0.000000001>

3306:
old  <	; if Â£temporary617 >= float8$0.000000001# goto 15>
new  <	; SignedGreaterThanEqual 15 Â£temporary617 0.000000001>

3313:
old  <	; push float x_nplus1>
new  <	; PushFloat x_nplus1>

3317:
old  <	; return x_nplus1>
new  <	; Return x_nplus1>

3324:
old  <	; errno = int4$6#>
new  <	; Assign errno 6>

3328:
old  <	; push float float8$0#>
new  <	; PushFloat 0>

3332:
old  <	; return float8$0#>
new  <	; Return 0>

3339:
old  <	; function end acos2>
new  <	; FunctionEnd acos2>

3344:
old  <	; push float x>
new  <	; PushFloat x>

3348:
old  <	; push float x>
new  <	; PushFloat x>

3352:
old  <	; Â£temporary625 = x * x>
new  <	; SignedMultiply Â£temporary625 x x>

3356:
old  <	; return Â£temporary625>
new  <	; Return Â£temporary625>

3363:
old  <	; function end square>
new  <	; FunctionEnd square>

3368:
old  <	; initializer Double>
new  <	; Initializer Double 0.7853981633974483096>

3374:
old  <	; initializer Double>
new  <	; Initializer Double -0.7853981633974483096>

3380:
old  <	; push float x>
new  <	; PushFloat x>

3384:
old  <	; push float float8$0#>
new  <	; PushFloat 0>

3388:
old  <	; if x != float8$0# goto 5>
new  <	; NotEqual 5 x 0>

3395:
old  <	; push float float8$0#>
new  <	; PushFloat 0>

3399:
old  <	; return float8$0#>
new  <	; Return 0>

3406:
old  <	; push float x>
new  <	; PushFloat x>

3410:
old  <	; push float float8$1#>
new  <	; PushFloat 1>

3414:
old  <	; if x != float8$1# goto 10>
new  <	; NotEqual 10 x 1>

3421:
old  <	; push float float8$0.7853981633974483096#>
new  <	; PushFloat 0.7853981633974483096>

3425:
old  <	; return float8$0.7853981633974483096#>
new  <	; Return 0.7853981633974483096>

3432:
old  <	; push float x>
new  <	; PushFloat x>

3436:
old  <	; push float float8$minus1#>
new  <	; PushFloat -1>

3440:
old  <	; if x != float8$minus1# goto 15>
new  <	; NotEqual 15 x -1>

3447:
old  <	; push float float8$minus0.7853981633974483096#>
new  <	; PushFloat -0.7853981633974483096>

3451:
old  <	; return float8$minus0.7853981633974483096#>
new  <	; Return -0.7853981633974483096>

3458:
old  <	; push float float8$1#>
new  <	; PushFloat 1>

3462:
old  <	; pop float sign>
new  <	; PopFloat sign>

3466:
old  <	; push float float8$1#>
new  <	; PushFloat 1>

3470:
old  <	; pop float denominator>
new  <	; PopFloat denominator>

3474:
old  <	; push float x>
new  <	; PushFloat x>

3478:
old  <	; pop float product>
new  <	; PopFloat product>

3482:
old  <	; push float float8$0#>
new  <	; PushFloat 0>

3486:
old  <	; pop float sum>
new  <	; PopFloat sum>

3490:
old  <	; count = int4$0#>
new  <	; Assign count 0>

3494:
old  <	; push float sign>
new  <	; PushFloat sign>

3498:
old  <	; push float product>
new  <	; PushFloat product>

3502:
old  <	; Â£temporary629 = sign * product>
new  <	; SignedMultiply Â£temporary629 sign product>

3506:
old  <	; push float denominator>
new  <	; PushFloat denominator>

3510:
old  <	; Â£temporary630 = Â£temporary629 / denominator>
new  <	; SignedDivide Â£temporary630 Â£temporary629 denominator>

3514:
old  <	; pop float term>
new  <	; PopFloat term>

3518:
old  <	; push float sum>
new  <	; PushFloat sum>

3522:
old  <	; push float term>
new  <	; PushFloat term>

3526:
old  <	; Â£temporary631 = sum + term>
new  <	; BinaryAdd Â£temporary631 sum term>

3530:
old  <	; pop float sum>
new  <	; PopFloat sum>

3534:
old  <	; push float sign>
new  <	; PushFloat sign>

3538:
old  <	; Â£temporary632 = -sign>
new  <	; UnarySubtract Â£temporary632 sign>

3542:
old  <	; pop float sign>
new  <	; PopFloat sign>

3546:
old  <	; push float product>
new  <	; PushFloat product>

3550:
old  <	; push float x>
new  <	; PushFloat x>

3554:
old  <	; push float x>
new  <	; PushFloat x>

3558:
old  <	; Â£temporary633 = x * x>
new  <	; SignedMultiply Â£temporary633 x x>

3562:
old  <	; Â£temporary634 = product * Â£temporary633>
new  <	; SignedMultiply Â£temporary634 product Â£temporary633>

3566:
old  <	; pop float product>
new  <	; PopFloat product>

3570:
old  <	; push float denominator>
new  <	; PushFloat denominator>

3574:
old  <	; push float float8$2#>
new  <	; PushFloat 2>

3578:
old  <	; Â£temporary635 = denominator + float8$2#>
new  <	; BinaryAdd Â£temporary635 denominator 2>

3582:
old  <	; pop float denominator>
new  <	; PopFloat denominator>

3586:
old  <	; check track map float stack>
new  <	; CheckTrackMapFloatStack>

3589:
old  <	; Â£temporary636 = count + int4$1#>
new  <	; BinaryAdd Â£temporary636 count 1>

3594:
old  <	; if Â£temporary636 >= int4$1000# goto 58>
new  <	; SignedGreaterThanEqual 58 Â£temporary636 1000>

3599:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 76 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3602:
old  <	; push float term>
new  <	; PushFloat term>

3606:
old  <	; parameter term, offset 100>
new  <	; Parameter double term 100>

3610:
old  <	; call function noellipse-noellipse fabs>
new  <	; Call fabs 76 0>

3617:
old  <	; post call>
new  <	; PostCall 76>

3620:
old  <	; Â£temporary638 = return_value>
new  <	; GetReturnValue Â£temporary638>

3623:
old  <	; push float float8$0.000000001#>
new  <	; PushFloat 0.000000001>

3627:
old  <	; if Â£temporary638 >= float8$0.000000001# goto 24>
new  <	; SignedGreaterThanEqual 24 Â£temporary638 0.000000001>

3634:
old  <	; push float sum>
new  <	; PushFloat sum>

3638:
old  <	; return sum>
new  <	; Return sum>

3645:
old  <	; function end atan>
new  <	; FunctionEnd atan>

3650:
old  <	; initializer String>
new  <	; Initializer String atan 5\n>

3656:
old  <	; initializer String>
new  <	; Initializer String atan x %f x_nplus1 %f\n>

3662:
old  <	; initializer String>
new  <	; Initializer String atan 7\n>

3668:
old  <	; initializer Double>
new  <	; Initializer Double 0.5>

3674:
old  <	; push float v>
new  <	; PushFloat v>

3678:
old  <	; push float float8$0#>
new  <	; PushFloat 0>

3682:
old  <	; if v != float8$0# goto 5>
new  <	; NotEqual 5 v 0>

3689:
old  <	; push float float8$0#>
new  <	; PushFloat 0>

3693:
old  <	; return float8$0#>
new  <	; Return 0>

3700:
old  <	; push float v>
new  <	; PushFloat v>

3704:
old  <	; push float float8$1#>
new  <	; PushFloat 1>

3708:
old  <	; if v != float8$1# goto 10>
new  <	; NotEqual 10 v 1>

3715:
old  <	; push float float8$0.7853981633974483096#>
new  <	; PushFloat 0.7853981633974483096>

3719:
old  <	; return float8$0.7853981633974483096#>
new  <	; Return 0.7853981633974483096>

3726:
old  <	; push float v>
new  <	; PushFloat v>

3730:
old  <	; push float float8$minus1#>
new  <	; PushFloat -1>

3734:
old  <	; if v != float8$minus1# goto 15>
new  <	; NotEqual 15 v -1>

3741:
old  <	; push float float8$minus0.7853981633974483096#>
new  <	; PushFloat -0.7853981633974483096>

3745:
old  <	; return float8$minus0.7853981633974483096#>
new  <	; Return -0.7853981633974483096>

3752:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3755:
old  <	; push float v>
new  <	; PushFloat v>

3759:
old  <	; parameter v, offset 56>
new  <	; Parameter double v 56>

3763:
old  <	; call function noellipse-noellipse fabs>
new  <	; Call fabs 32 0>

3770:
old  <	; post call>
new  <	; PostCall 32>

3773:
old  <	; Â£temporary645 = return_value>
new  <	; GetReturnValue Â£temporary645>

3776:
old  <	; push float float8$0.5#>
new  <	; PushFloat 0.5>

3780:
old  <	; if Â£temporary645 >= float8$0.5# goto 62>
new  <	; SignedGreaterThanEqual 62 Â£temporary645 0.5>

3787:
old  <	; sign = int4$1#>
new  <	; Assign sign 1>

3791:
old  <	; denominator = int4$1#>
new  <	; Assign denominator 1>

3795:
old  <	; count = int4$0#>
new  <	; Assign count 0>

3799:
old  <	; push float v>
new  <	; PushFloat v>

3803:
old  <	; pop float product>
new  <	; PopFloat product>

3807:
old  <	; push float float8$0#>
new  <	; PushFloat 0>

3811:
old  <	; pop float sum>
new  <	; PopFloat sum>

3815:
old  <	; Â£temporary647 = int_to_float sign (SignedInt -> Double)>
new  <	; IntegralToFloating Â£temporary647 sign>

3819:
old  <	; push float product>
new  <	; PushFloat product>

3823:
old  <	; Â£temporary648 = Â£temporary647 * product>
new  <	; SignedMultiply Â£temporary648 Â£temporary647 product>

3827:
old  <	; Â£temporary649 = int_to_float denominator (SignedInt -> Double)>
new  <	; IntegralToFloating Â£temporary649 denominator>

3831:
old  <	; Â£temporary650 = Â£temporary648 / Â£temporary649>
new  <	; SignedDivide Â£temporary650 Â£temporary648 Â£temporary649>

3835:
old  <	; pop float term>
new  <	; PopFloat term>

3839:
old  <	; push float sum>
new  <	; PushFloat sum>

3843:
old  <	; push float term>
new  <	; PushFloat term>

3847:
old  <	; Â£temporary651 = sum + term>
new  <	; BinaryAdd Â£temporary651 sum term>

3851:
old  <	; pop float sum>
new  <	; PopFloat sum>

3855:
old  <	; Â£temporary652 = -sign>
new  <	; UnarySubtract Â£temporary652 sign>

3860:
old  <	; sign = Â£temporary652>
new  <	; Assign sign Â£temporary652>

3864:
old  <	; push float product>
new  <	; PushFloat product>

3868:
old  <	; push float v>
new  <	; PushFloat v>

3872:
old  <	; push float v>
new  <	; PushFloat v>

3876:
old  <	; Â£temporary653 = v * v>
new  <	; SignedMultiply Â£temporary653 v v>

3880:
old  <	; Â£temporary654 = product * Â£temporary653>
new  <	; SignedMultiply Â£temporary654 product Â£temporary653>

3884:
old  <	; pop float product>
new  <	; PopFloat product>

3888:
old  <	; denominator = denominator + int4$2#>
new  <	; BinaryAdd denominator denominator 2>

3892:
old  <	; check track map float stack>
new  <	; CheckTrackMapFloatStack>

3895:
old  <	; Â£temporary656 = count + int4$1#>
new  <	; BinaryAdd Â£temporary656 count 1>

3900:
old  <	; if Â£temporary656 >= int4$1000# goto 60>
new  <	; SignedGreaterThanEqual 60 Â£temporary656 1000>

3905:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 68 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3908:
old  <	; push float term>
new  <	; PushFloat term>

3912:
old  <	; parameter term, offset 92>
new  <	; Parameter double term 92>

3916:
old  <	; call function noellipse-noellipse fabs>
new  <	; Call fabs 68 0>

3923:
old  <	; post call>
new  <	; PostCall 68>

3926:
old  <	; Â£temporary658 = return_value>
new  <	; GetReturnValue Â£temporary658>

3929:
old  <	; push float float8$0.000000001#>
new  <	; PushFloat 0.000000001>

3933:
old  <	; if Â£temporary658 >= float8$0.000000001# goto 30>
new  <	; SignedGreaterThanEqual 30 Â£temporary658 0.000000001>

3940:
old  <	; push float sum>
new  <	; PushFloat sum>

3944:
old  <	; return sum>
new  <	; Return sum>

3951:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3954:
old  <	; push float v>
new  <	; PushFloat v>

3958:
old  <	; parameter v, offset 56>
new  <	; Parameter double v 56>

3962:
old  <	; call function noellipse-noellipse fabs>
new  <	; Call fabs 32 0>

3969:
old  <	; post call>
new  <	; PostCall 32>

3972:
old  <	; Â£temporary661 = return_value>
new  <	; GetReturnValue Â£temporary661>

3975:
old  <	; push float float8$1#>
new  <	; PushFloat 1>

3979:
old  <	; if Â£temporary661 >= float8$1# goto 130>
new  <	; SignedGreaterThanEqual 130 Â£temporary661 1>

3986:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3989:
old  <	; parameter string_atan2050A#, offset 56>
new  <	; Parameter pointer "atan 5\n" 56>

3993:
old  <	; call function noellipse-ellipse printf, extra 0>
new  <	; Call printf 32 0>

4001:
old  <	; post call>
new  <	; PostCall 32>

4004:
old  <	; push float float8$1#>
new  <	; PushFloat 1>

4008:
old  <	; top float x_nplus1>
new  <	; TopFloat x_nplus1>

4012:
old  <	; top float x>
new  <	; TopFloat x>

4016:
old  <	; call header integral zero 0 stack no zero 1>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 1>

4020:
old  <	; push float x>
new  <	; PushFloat x>

4024:
old  <	; parameter x, offset 72>
new  <	; Parameter double x 72>

4028:
old  <	; call function noellipse-noellipse tan>
new  <	; Call tan 48 0>

4035:
old  <	; post call>
new  <	; PostCall 48>

4041:
old  <	; Â£temporary664 = return_value>
new  <	; GetReturnValue Â£temporary664>

4044:
old  <	; push float v>
new  <	; PushFloat v>

4048:
old  <	; Â£temporary665 = Â£temporary664 - v>
new  <	; BinarySubtract Â£temporary665 Â£temporary664 v>

4052:
old  <	; call header integral zero 0 stack no zero 2>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 2>

4057:
old  <	; call header integral zero 0 stack no zero 2>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 2>

4062:
old  <	; push float float8$2#>
new  <	; PushFloat 2>

4066:
old  <	; push float x>
new  <	; PushFloat x>

4070:
old  <	; Â£temporary666 = float8$2# * x>
new  <	; SignedMultiply Â£temporary666 2 x>

4074:
old  <	; parameter Â£temporary666, offset 72>
new  <	; Parameter double Â£temporary666 72>

4078:
old  <	; call function noellipse-noellipse cos>
new  <	; Call cos 48 0>

4085:
old  <	; post call>
new  <	; PostCall 48>

4092:
old  <	; Â£temporary667 = return_value>
new  <	; GetReturnValue Â£temporary667>

4095:
old  <	; push float float8$1#>
new  <	; PushFloat 1>

4099:
old  <	; Â£temporary668 = Â£temporary667 + float8$1#>
new  <	; BinaryAdd Â£temporary668 Â£temporary667 1>

4103:
old  <	; parameter Â£temporary668, offset 72>
new  <	; Parameter double Â£temporary668 72>

4107:
old  <	; call function noellipse-noellipse square>
new  <	; Call square 48 0>

4114:
old  <	; post call>
new  <	; PostCall 48>

4121:
old  <	; Â£temporary669 = return_value>
new  <	; GetReturnValue Â£temporary669>

4124:
old  <	; Â£temporary670 = Â£temporary665 * Â£temporary669>
new  <	; SignedMultiply Â£temporary670 Â£temporary665 Â£temporary669>

4128:
old  <	; push float float8$2#>
new  <	; PushFloat 2>

4132:
old  <	; Â£temporary671 = Â£temporary670 / float8$2#>
new  <	; SignedDivide Â£temporary671 Â£temporary670 2>

4136:
old  <	; Â£temporary672 = x - Â£temporary671>
new  <	; BinarySubtract Â£temporary672 x Â£temporary671>

4140:
old  <	; pop float x_nplus1>
new  <	; PopFloat x_nplus1>

4144:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

4147:
old  <	; parameter string_atan20x2025f20x_nplus12025f0A#, offset 72>
new  <	; Parameter pointer "atan x %f x_nplus1 %f\n" 72>

4151:
old  <	; push float x>
new  <	; PushFloat x>

4155:
old  <	; parameter x, offset 80>
new  <	; Parameter double x 80>

4159:
old  <	; push float x_nplus1>
new  <	; PushFloat x_nplus1>

4163:
old  <	; parameter x_nplus1, offset 88>
new  <	; Parameter double x_nplus1 88>

4167:
old  <	; call function noellipse-ellipse printf, extra 16>
new  <	; Call printf 48 16>

4176:
old  <	; post call>
new  <	; PostCall 48>

4179:
old  <	; check track map float stack>
new  <	; CheckTrackMapFloatStack>

4182:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

4185:
old  <	; push float x_nplus1>
new  <	; PushFloat x_nplus1>

4189:
old  <	; push float x>
new  <	; PushFloat x>

4193:
old  <	; Â£temporary674 = x_nplus1 - x>
new  <	; BinarySubtract Â£temporary674 x_nplus1 x>

4197:
old  <	; parameter Â£temporary674, offset 72>
new  <	; Parameter double Â£temporary674 72>

4201:
old  <	; call function noellipse-noellipse fabs>
new  <	; Call fabs 48 0>

4208:
old  <	; post call>
new  <	; PostCall 48>

4211:
old  <	; Â£temporary675 = return_value>
new  <	; GetReturnValue Â£temporary675>

4214:
old  <	; push float float8$0.000000001#>
new  <	; PushFloat 0.000000001>

4218:
old  <	; if Â£temporary675 >= float8$0.000000001# goto 76>
new  <	; SignedGreaterThanEqual 76 Â£temporary675 0.000000001>

4225:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

4228:
old  <	; parameter string_atan2070A#, offset 72>
new  <	; Parameter pointer "atan 7\n" 72>

4232:
old  <	; call function noellipse-ellipse printf, extra 0>
new  <	; Call printf 48 0>

4240:
old  <	; post call>
new  <	; PostCall 48>

4243:
old  <	; push float x_nplus1>
new  <	; PushFloat x_nplus1>

4247:
old  <	; return x_nplus1>
new  <	; Return x_nplus1>

4254:
old  <	; errno = int4$6#>
new  <	; Assign errno 6>

4258:
old  <	; push float float8$0#>
new  <	; PushFloat 0>

4262:
old  <	; return float8$0#>
new  <	; Return 0>

4269:
old  <	; function end atanY>
new  <	; FunctionEnd atanY>

4274:
old  <	; push float v>
new  <	; PushFloat v>

4278:
old  <	; push float float8$0#>
new  <	; PushFloat 0>

4282:
old  <	; if v != float8$0# goto 5>
new  <	; NotEqual 5 v 0>

4289:
old  <	; push float float8$0#>
new  <	; PushFloat 0>

4293:
old  <	; return float8$0#>
new  <	; Return 0>

4300:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

4303:
old  <	; push float v>
new  <	; PushFloat v>

4307:
old  <	; parameter v, offset 56>
new  <	; Parameter double v 56>

4311:
old  <	; call function noellipse-noellipse fabs>
new  <	; Call fabs 32 0>

4318:
old  <	; post call>
new  <	; PostCall 32>

4321:
old  <	; Â£temporary688 = return_value>
new  <	; GetReturnValue Â£temporary688>

4324:
old  <	; push float float8$1#>
new  <	; PushFloat 1>

4328:
old  <	; if Â£temporary688 > float8$1# goto 57>
new  <	; SignedGreaterThan 57 Â£temporary688 1>

4335:
old  <	; push float float8$1#>
new  <	; PushFloat 1>

4339:
old  <	; top float x_nplus1>
new  <	; TopFloat x_nplus1>

4343:
old  <	; top float x>
new  <	; TopFloat x>

4347:
old  <	; call header integral zero 0 stack no zero 1>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 1>

4351:
old  <	; push float x>
new  <	; PushFloat x>

4355:
old  <	; parameter x, offset 72>
new  <	; Parameter double x 72>

4359:
old  <	; call function noellipse-noellipse tan>
new  <	; Call tan 48 0>

4366:
old  <	; post call>
new  <	; PostCall 48>

4372:
old  <	; Â£temporary690 = return_value>
new  <	; GetReturnValue Â£temporary690>

4375:
old  <	; push float v>
new  <	; PushFloat v>

4379:
old  <	; Â£temporary691 = Â£temporary690 - v>
new  <	; BinarySubtract Â£temporary691 Â£temporary690 v>

4383:
old  <	; call header integral zero 0 stack no zero 2>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 2>

4388:
old  <	; call header integral zero 0 stack no zero 2>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 2>

4393:
old  <	; push float float8$2#>
new  <	; PushFloat 2>

4397:
old  <	; push float x>
new  <	; PushFloat x>

4401:
old  <	; Â£temporary692 = float8$2# * x>
new  <	; SignedMultiply Â£temporary692 2 x>

4405:
old  <	; parameter Â£temporary692, offset 72>
new  <	; Parameter double Â£temporary692 72>

4409:
old  <	; call function noellipse-noellipse cos>
new  <	; Call cos 48 0>

4416:
old  <	; post call>
new  <	; PostCall 48>

4423:
old  <	; Â£temporary693 = return_value>
new  <	; GetReturnValue Â£temporary693>

4426:
old  <	; push float float8$1#>
new  <	; PushFloat 1>

4430:
old  <	; Â£temporary694 = Â£temporary693 + float8$1#>
new  <	; BinaryAdd Â£temporary694 Â£temporary693 1>

4434:
old  <	; parameter Â£temporary694, offset 72>
new  <	; Parameter double Â£temporary694 72>

4438:
old  <	; call function noellipse-noellipse square>
new  <	; Call square 48 0>

4445:
old  <	; post call>
new  <	; PostCall 48>

4452:
old  <	; Â£temporary695 = return_value>
new  <	; GetReturnValue Â£temporary695>

4455:
old  <	; Â£temporary696 = Â£temporary691 * Â£temporary695>
new  <	; SignedMultiply Â£temporary696 Â£temporary691 Â£temporary695>

4459:
old  <	; push float float8$2#>
new  <	; PushFloat 2>

4463:
old  <	; Â£temporary697 = Â£temporary696 / float8$2#>
new  <	; SignedDivide Â£temporary697 Â£temporary696 2>

4467:
old  <	; Â£temporary698 = x - Â£temporary697>
new  <	; BinarySubtract Â£temporary698 x Â£temporary697>

4471:
old  <	; pop float x_nplus1>
new  <	; PopFloat x_nplus1>

4475:
old  <	; check track map float stack>
new  <	; CheckTrackMapFloatStack>

4478:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

4481:
old  <	; push float x_nplus1>
new  <	; PushFloat x_nplus1>

4485:
old  <	; push float x>
new  <	; PushFloat x>

4489:
old  <	; Â£temporary699 = x_nplus1 - x>
new  <	; BinarySubtract Â£temporary699 x_nplus1 x>

4493:
old  <	; parameter Â£temporary699, offset 72>
new  <	; Parameter double Â£temporary699 72>

4497:
old  <	; call function noellipse-noellipse fabs>
new  <	; Call fabs 48 0>

4504:
old  <	; post call>
new  <	; PostCall 48>

4507:
old  <	; Â£temporary700 = return_value>
new  <	; GetReturnValue Â£temporary700>

4510:
old  <	; push float float8$0.000000001#>
new  <	; PushFloat 0.000000001>

4514:
old  <	; if Â£temporary700 >= float8$0.000000001# goto 15>
new  <	; SignedGreaterThanEqual 15 Â£temporary700 0.000000001>

4521:
old  <	; push float x_nplus1>
new  <	; PushFloat x_nplus1>

4525:
old  <	; return x_nplus1>
new  <	; Return x_nplus1>

4532:
old  <	; errno = int4$6#>
new  <	; Assign errno 6>

4536:
old  <	; push float float8$0#>
new  <	; PushFloat 0>

4540:
old  <	; return float8$0#>
new  <	; Return 0>

4547:
old  <	; function end atanX>
new  <	; FunctionEnd atanX>

4552:
old  <	; initializer Double>
new  <	; Initializer Double 3.1415926535897932384>

4558:
old  <	; push float x>
new  <	; PushFloat x>

4562:
old  <	; push float float8$0#>
new  <	; PushFloat 0>

4566:
old  <	; if x <= float8$0# goto 12>
new  <	; SignedLessThanEqual 12 x 0>

4573:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

4576:
old  <	; push float y>
new  <	; PushFloat y>

4580:
old  <	; push float x>
new  <	; PushFloat x>

4584:
old  <	; Â£temporary708 = y / x>
new  <	; SignedDivide Â£temporary708 y x>

4588:
old  <	; parameter Â£temporary708, offset 64>
new  <	; Parameter double Â£temporary708 64>

4592:
old  <	; call function noellipse-noellipse atan>
new  <	; Call atan 40 0>

4599:
old  <	; post call>
new  <	; PostCall 40>

4602:
old  <	; Â£temporary709 = return_value>
new  <	; GetReturnValue Â£temporary709>

4605:
old  <	; return Â£temporary709>
new  <	; Return Â£temporary709>

4612:
old  <	; push float x>
new  <	; PushFloat x>

4616:
old  <	; push float float8$0#>
new  <	; PushFloat 0>

4620:
old  <	; if x >= float8$0# goto 40>
new  <	; SignedGreaterThanEqual 40 x 0>

4627:
old  <	; push float y>
new  <	; PushFloat y>

4631:
old  <	; push float float8$0#>
new  <	; PushFloat 0>

4635:
old  <	; if y < float8$0# goto 29>
new  <	; SignedLessThan 29 y 0>

4642:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

4645:
old  <	; push float y>
new  <	; PushFloat y>

4649:
old  <	; push float x>
new  <	; PushFloat x>

4653:
old  <	; Â£temporary712 = y / x>
new  <	; SignedDivide Â£temporary712 y x>

4657:
old  <	; parameter Â£temporary712, offset 64>
new  <	; Parameter double Â£temporary712 64>

4661:
old  <	; call function noellipse-noellipse atan>
new  <	; Call atan 40 0>

4668:
old  <	; post call>
new  <	; PostCall 40>

4671:
old  <	; Â£temporary713 = return_value>
new  <	; GetReturnValue Â£temporary713>

4674:
old  <	; push float float8$3.1415926535897932384#>
new  <	; PushFloat 3.1415926535897932384>

4678:
old  <	; Â£temporary714 = Â£temporary713 + float8$3.1415926535897932384#>
new  <	; BinaryAdd Â£temporary714 Â£temporary713 3.1415926535897932384>

4682:
old  <	; return Â£temporary714>
new  <	; Return Â£temporary714>

4689:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

4692:
old  <	; push float y>
new  <	; PushFloat y>

4696:
old  <	; push float x>
new  <	; PushFloat x>

4700:
old  <	; Â£temporary715 = y / x>
new  <	; SignedDivide Â£temporary715 y x>

4704:
old  <	; parameter Â£temporary715, offset 64>
new  <	; Parameter double Â£temporary715 64>

4708:
old  <	; call function noellipse-noellipse atan>
new  <	; Call atan 40 0>

4715:
old  <	; post call>
new  <	; PostCall 40>

4718:
old  <	; Â£temporary716 = return_value>
new  <	; GetReturnValue Â£temporary716>

4721:
old  <	; push float float8$3.1415926535897932384#>
new  <	; PushFloat 3.1415926535897932384>

4725:
old  <	; Â£temporary717 = Â£temporary716 - float8$3.1415926535897932384#>
new  <	; BinarySubtract Â£temporary717 Â£temporary716 3.1415926535897932384>

4729:
old  <	; return Â£temporary717>
new  <	; Return Â£temporary717>

4736:
old  <	; push float y>
new  <	; PushFloat y>

4740:
old  <	; push float float8$0#>
new  <	; PushFloat 0>

4744:
old  <	; if y <= float8$0# goto 45>
new  <	; SignedLessThanEqual 45 y 0>

4751:
old  <	; push float float8$1.5707963267948966192#>
new  <	; PushFloat 1.5707963267948966192>

4755:
old  <	; return float8$1.5707963267948966192#>
new  <	; Return 1.5707963267948966192>

4762:
old  <	; push float y>
new  <	; PushFloat y>

4766:
old  <	; push float float8$0#>
new  <	; PushFloat 0>

4770:
old  <	; if y >= float8$0# goto 50>
new  <	; SignedGreaterThanEqual 50 y 0>

4777:
old  <	; push float float8$minus1.5707963267948966192#>
new  <	; PushFloat -1.5707963267948966192>

4781:
old  <	; return float8$minus1.5707963267948966192#>
new  <	; Return -1.5707963267948966192>

4788:
old  <	; errno = int4$6#>
new  <	; Assign errno 6>

4792:
old  <	; push float float8$0#>
new  <	; PushFloat 0>

4796:
old  <	; return float8$0#>
new  <	; Return 0>

4803:
old  <	; function end atan2>
new  <	; FunctionEnd atan2>

4808:
old  <	; initializer String>
new  <	; Initializer String 2\n>

4814:
old  <	; initializer String>
new  <	; Initializer String 3\n>

4820:
old  <	; initializer String>
new  <	; Initializer String 4\n>

4826:
old  <	; initializer String>
new  <	; Initializer String 5\n>

4832:
old  <	; initializer String>
new  <	; Initializer String 6\n>

4838:
old  <	; initializer Double>
new  <	; Initializer Double -3.1415926535897932384>

4844:
old  <	; push float denum>
new  <	; PushFloat denum>

4848:
old  <	; push float float8$0#>
new  <	; PushFloat 0>

4852:
old  <	; if denum <= float8$0# goto 18>
new  <	; SignedLessThanEqual 18 denum 0>

4859:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

4862:
old  <	; push float num>
new  <	; PushFloat num>

4866:
old  <	; push float denum>
new  <	; PushFloat denum>

4870:
old  <	; Â£temporary724 = num / denum>
new  <	; SignedDivide Â£temporary724 num denum>

4874:
old  <	; parameter Â£temporary724, offset 64>
new  <	; Parameter double Â£temporary724 64>

4878:
old  <	; call function noellipse-noellipse atan>
new  <	; Call atan 40 0>

4885:
old  <	; post call>
new  <	; PostCall 40>

4888:
old  <	; Â£temporary725 = return_value>
new  <	; GetReturnValue Â£temporary725>

4891:
old  <	; pop float y>
new  <	; PopFloat y>

4895:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

4898:
old  <	; parameter string_20A#, offset 72>
new  <	; Parameter pointer "2\n" 72>

4902:
old  <	; call function noellipse-ellipse printf, extra 0>
new  <	; Call printf 48 0>

4910:
old  <	; post call>
new  <	; PostCall 48>

4913:
old  <	; push float y>
new  <	; PushFloat y>

4917:
old  <	; return y>
new  <	; Return y>

4924:
old  <	; push float num>
new  <	; PushFloat num>

4928:
old  <	; push float float8$0#>
new  <	; PushFloat 0>

4932:
old  <	; if num < float8$0# goto 39>
new  <	; SignedLessThan 39 num 0>

4939:
old  <	; push float denum>
new  <	; PushFloat denum>

4943:
old  <	; push float float8$0#>
new  <	; PushFloat 0>

4947:
old  <	; if denum >= float8$0# goto 39>
new  <	; SignedGreaterThanEqual 39 denum 0>

4954:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

4957:
old  <	; parameter string_20A#, offset 64>
new  <	; Parameter pointer "2\n" 64>

4961:
old  <	; call function noellipse-ellipse printf, extra 0>
new  <	; Call printf 40 0>

4969:
old  <	; post call>
new  <	; PostCall 40>

4972:
old  <	; push float float8$3.1415926535897932384#>
new  <	; PushFloat 3.1415926535897932384>

4976:
old  <	; call header integral zero 0 stack no zero 1>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 1>

4980:
old  <	; push float num>
new  <	; PushFloat num>

4984:
old  <	; push float denum>
new  <	; PushFloat denum>

4988:
old  <	; Â£temporary731 = num / denum>
new  <	; SignedDivide Â£temporary731 num denum>

4992:
old  <	; parameter Â£temporary731, offset 64>
new  <	; Parameter double Â£temporary731 64>

4996:
old  <	; call function noellipse-noellipse atan>
new  <	; Call atan 40 0>

5003:
old  <	; post call>
new  <	; PostCall 40>

5009:
old  <	; Â£temporary732 = return_value>
new  <	; GetReturnValue Â£temporary732>

5012:
old  <	; Â£temporary733 = float8$3.1415926535897932384# + Â£temporary732>
new  <	; BinaryAdd Â£temporary733 3.1415926535897932384 Â£temporary732>

5016:
old  <	; return Â£temporary733>
new  <	; Return Â£temporary733>

5023:
old  <	; push float num>
new  <	; PushFloat num>

5027:
old  <	; push float float8$0#>
new  <	; PushFloat 0>

5031:
old  <	; if num >= float8$0# goto 60>
new  <	; SignedGreaterThanEqual 60 num 0>

5038:
old  <	; push float denum>
new  <	; PushFloat denum>

5042:
old  <	; push float float8$0#>
new  <	; PushFloat 0>

5046:
old  <	; if denum >= float8$0# goto 60>
new  <	; SignedGreaterThanEqual 60 denum 0>

5053:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

5056:
old  <	; parameter string_30A#, offset 64>
new  <	; Parameter pointer "3\n" 64>

5060:
old  <	; call function noellipse-ellipse printf, extra 0>
new  <	; Call printf 40 0>

5068:
old  <	; post call>
new  <	; PostCall 40>

5071:
old  <	; push float float8$minus3.1415926535897932384#>
new  <	; PushFloat -3.1415926535897932384>

5075:
old  <	; call header integral zero 0 stack no zero 1>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 1>

5079:
old  <	; push float num>
new  <	; PushFloat num>

5083:
old  <	; push float denum>
new  <	; PushFloat denum>

5087:
old  <	; Â£temporary738 = num / denum>
new  <	; SignedDivide Â£temporary738 num denum>

5091:
old  <	; parameter Â£temporary738, offset 64>
new  <	; Parameter double Â£temporary738 64>

5095:
old  <	; call function noellipse-noellipse atan>
new  <	; Call atan 40 0>

5102:
old  <	; post call>
new  <	; PostCall 40>

5108:
old  <	; Â£temporary739 = return_value>
new  <	; GetReturnValue Â£temporary739>

5111:
old  <	; Â£temporary740 = float8$minus3.1415926535897932384# + Â£temporary739>
new  <	; BinaryAdd Â£temporary740 -3.1415926535897932384 Â£temporary739>

5115:
old  <	; return Â£temporary740>
new  <	; Return Â£temporary740>

5122:
old  <	; push float num>
new  <	; PushFloat num>

5126:
old  <	; push float float8$0#>
new  <	; PushFloat 0>

5130:
old  <	; if num <= float8$0# goto 72>
new  <	; SignedLessThanEqual 72 num 0>

5137:
old  <	; push float denum>
new  <	; PushFloat denum>

5141:
old  <	; push float float8$0#>
new  <	; PushFloat 0>

5145:
old  <	; if denum != float8$0# goto 72>
new  <	; NotEqual 72 denum 0>

5152:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

5155:
old  <	; parameter string_40A#, offset 64>
new  <	; Parameter pointer "4\n" 64>

5159:
old  <	; call function noellipse-ellipse printf, extra 0>
new  <	; Call printf 40 0>

5167:
old  <	; post call>
new  <	; PostCall 40>

5170:
old  <	; push float float8$1.5707963267948966192#>
new  <	; PushFloat 1.5707963267948966192>

5174:
old  <	; return float8$1.5707963267948966192#>
new  <	; Return 1.5707963267948966192>

5181:
old  <	; push float num>
new  <	; PushFloat num>

5185:
old  <	; push float float8$0#>
new  <	; PushFloat 0>

5189:
old  <	; if num >= float8$0# goto 84>
new  <	; SignedGreaterThanEqual 84 num 0>

5196:
old  <	; push float denum>
new  <	; PushFloat denum>

5200:
old  <	; push float float8$0#>
new  <	; PushFloat 0>

5204:
old  <	; if denum != float8$0# goto 84>
new  <	; NotEqual 84 denum 0>

5211:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

5214:
old  <	; parameter string_50A#, offset 64>
new  <	; Parameter pointer "5\n" 64>

5218:
old  <	; call function noellipse-ellipse printf, extra 0>
new  <	; Call printf 40 0>

5226:
old  <	; post call>
new  <	; PostCall 40>

5229:
old  <	; push float float8$minus1.5707963267948966192#>
new  <	; PushFloat -1.5707963267948966192>

5233:
old  <	; return float8$minus1.5707963267948966192#>
new  <	; Return -1.5707963267948966192>

5240:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

5243:
old  <	; parameter string_60A#, offset 64>
new  <	; Parameter pointer "6\n" 64>

5247:
old  <	; call function noellipse-ellipse printf, extra 0>
new  <	; Call printf 40 0>

5255:
old  <	; post call>
new  <	; PostCall 40>

5258:
old  <	; errno = int4$6#>
new  <	; Assign errno 6>

5262:
old  <	; push float float8$0#>
new  <	; PushFloat 0>

5266:
old  <	; return float8$0#>
new  <	; Return 0>

5273:
old  <	; function end atan2x>
new  <	; FunctionEnd atan2x>

5278:
old  <	; initializer zero 8>
new  <	; InitializerZero 8>

5284:
old  <	; push float x>
new  <	; PushFloat x>

5288:
old  <	; push float float8$0#>
new  <	; PushFloat 0>

5292:
old  <	; if x >= float8$0# goto 12>
new  <	; SignedGreaterThanEqual 12 x 0>

5299:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

5302:
old  <	; push float x>
new  <	; PushFloat x>

5306:
old  <	; Â£temporary754 = -x>
new  <	; UnarySubtract Â£temporary754 x>

5310:
old  <	; parameter Â£temporary754, offset 56>
new  <	; Parameter double Â£temporary754 56>

5314:
old  <	; call function noellipse-noellipse ceil>
new  <	; Call ceil 32 0>

5321:
old  <	; post call>
new  <	; PostCall 32>

5324:
old  <	; Â£temporary755 = return_value>
new  <	; GetReturnValue Â£temporary755>

5327:
old  <	; Â£temporary756 = -Â£temporary755>
new  <	; UnarySubtract Â£temporary756 Â£temporary755>

5331:
old  <	; return Â£temporary756>
new  <	; Return Â£temporary756>

5338:
old  <	; push float x>
new  <	; PushFloat x>

5342:
old  <	; Â£temporary757 = float_to_int x (Double -> Signed_Long_Int)>
new  <	; FloatingToIntegral Â£temporary757 x>

5347:
old  <	; Â£temporary758 = int_to_float Â£temporary757 (Signed_Long_Int -> Double)>
new  <	; IntegralToFloating Â£temporary758 Â£temporary757>

5352:
old  <	; return Â£temporary758>
new  <	; Return Â£temporary758>

5359:
old  <	; function end floor>
new  <	; FunctionEnd floor>

5364:
old  <	; initializer Double>
new  <	; Initializer Double 0.999999999999>

5370:
old  <	; push float x>
new  <	; PushFloat x>

5374:
old  <	; push float float8$0#>
new  <	; PushFloat 0>

5378:
old  <	; if x >= float8$0# goto 12>
new  <	; SignedGreaterThanEqual 12 x 0>

5385:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

5388:
old  <	; push float x>
new  <	; PushFloat x>

5392:
old  <	; Â£temporary761 = -x>
new  <	; UnarySubtract Â£temporary761 x>

5396:
old  <	; parameter Â£temporary761, offset 56>
new  <	; Parameter double Â£temporary761 56>

5400:
old  <	; call function noellipse-noellipse floor>
new  <	; Call floor 32 0>

5407:
old  <	; post call>
new  <	; PostCall 32>

5410:
old  <	; Â£temporary762 = return_value>
new  <	; GetReturnValue Â£temporary762>

5413:
old  <	; Â£temporary763 = -Â£temporary762>
new  <	; UnarySubtract Â£temporary763 Â£temporary762>

5417:
old  <	; return Â£temporary763>
new  <	; Return Â£temporary763>

5424:
old  <	; push float x>
new  <	; PushFloat x>

5428:
old  <	; push float float8$0.999999999999#>
new  <	; PushFloat 0.999999999999>

5432:
old  <	; Â£temporary764 = x + float8$0.999999999999#>
new  <	; BinaryAdd Â£temporary764 x 0.999999999999>

5436:
old  <	; Â£temporary765 = float_to_int Â£temporary764 (Double -> Signed_Long_Int)>
new  <	; FloatingToIntegral Â£temporary765 Â£temporary764>

5441:
old  <	; Â£temporary766 = int_to_float Â£temporary765 (Signed_Long_Int -> Double)>
new  <	; IntegralToFloating Â£temporary766 Â£temporary765>

5446:
old  <	; return Â£temporary766>
new  <	; Return Â£temporary766>

5453:
old  <	; function end ceil>
new  <	; FunctionEnd ceil>

5458:
old  <	; push float x>
new  <	; PushFloat x>

5462:
old  <	; push float float8$0#>
new  <	; PushFloat 0>

5466:
old  <	; if x >= float8$0# goto 8>
new  <	; SignedGreaterThanEqual 8 x 0>

5473:
old  <	; push float x>
new  <	; PushFloat x>

5477:
old  <	; push float float8$0.5#>
new  <	; PushFloat 0.5>

5481:
old  <	; Â£temporary769 = x - float8$0.5#>
new  <	; BinarySubtract Â£temporary769 x 0.5>

5485:
old  <	; decrease stack>
new  <	; DecreaseStack>

5488:
old  <	; goto 11>
new  <	; Goto 11>

5492:
old  <	; push float x>
new  <	; PushFloat x>

5496:
old  <	; push float float8$0.5#>
new  <	; PushFloat 0.5>

5500:
old  <	; Â£temporary770 = x + float8$0.5#>
new  <	; BinaryAdd Â£temporary770 x 0.5>

5504:
old  <	; Â£temporary772 = float_to_int Â£temporary771 (Double -> Signed_Long_Int)>
new  <	; FloatingToIntegral Â£temporary772 Â£temporary771>

5509:
old  <	; Â£temporary773 = int_to_float Â£temporary772 (Signed_Long_Int -> Double)>
new  <	; IntegralToFloating Â£temporary773 Â£temporary772>

5514:
old  <	; return Â£temporary773>
new  <	; Return Â£temporary773>

5521:
old  <	; function end round>
new  <	; FunctionEnd round>

5526:
old  <	; push float x>
new  <	; PushFloat x>

5530:
old  <	; push float float8$0#>
new  <	; PushFloat 0>

5534:
old  <	; if x >= float8$0# goto 7>
new  <	; SignedGreaterThanEqual 7 x 0>

5541:
old  <	; push float x>
new  <	; PushFloat x>

5545:
old  <	; Â£temporary775 = -x>
new  <	; UnarySubtract Â£temporary775 x>

5549:
old  <	; decrease stack>
new  <	; DecreaseStack>

5552:
old  <	; goto 8>
new  <	; Goto 8>

5556:
old  <	; push float x>
new  <	; PushFloat x>

5560:
old  <	; return Â£temporary776>
new  <	; Return Â£temporary776>

5567:
old  <	; function end fabs>
new  <	; FunctionEnd fabs>

5572:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

5575:
old  <	; push float x>
new  <	; PushFloat x>

5579:
old  <	; parameter x, offset 64>
new  <	; Parameter double x 64>

5583:
old  <	; call function noellipse-noellipse fabs>
new  <	; Call fabs 40 0>

5590:
old  <	; post call>
new  <	; PostCall 40>

5593:
old  <	; Â£temporary777 = return_value>
new  <	; GetReturnValue Â£temporary777>

5596:
old  <	; Â£temporary778 = float_to_int Â£temporary777 (Double -> Signed_Long_Int)>
new  <	; FloatingToIntegral Â£temporary778 Â£temporary777>

5601:
old  <	; Â£temporary779 = int_to_float Â£temporary778 (Signed_Long_Int -> Double)>
new  <	; IntegralToFloating Â£temporary779 Â£temporary778>

5606:
old  <	; pop float integral>
new  <	; PopFloat integral>

5610:
old  <	; if p == int8$0# goto 34>
new  <	; Equal 34 p 0>

5615:
old  <	; Â£temporary781 -> p = *p>
new  <	; Dereference Â£temporary781 -> p p 0>

5619:
old  <	; push float x>
new  <	; PushFloat x>

5623:
old  <	; push float float8$0#>
new  <	; PushFloat 0>

5627:
old  <	; if x <= float8$0# goto 24>
new  <	; SignedLessThanEqual 24 x 0>

5634:
old  <	; call header integral no zero 1 stack zero 0>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

5638:
old  <	; push float x>
new  <	; PushFloat x>

5642:
old  <	; parameter x, offset 72>
new  <	; Parameter double x 72>

5646:
old  <	; call function noellipse-noellipse fabs>
new  <	; Call fabs 48 0>

5653:
old  <	; post call>
new  <	; PostCall 48>

5657:
old  <	; Â£temporary783 = return_value>
new  <	; GetReturnValue Â£temporary783>

5660:
old  <	; push float integral>
new  <	; PushFloat integral>

5664:
old  <	; Â£temporary784 = Â£temporary783 - integral>
new  <	; BinarySubtract Â£temporary784 Â£temporary783 integral>

5668:
old  <	; decrease stack>
new  <	; DecreaseStack>

5671:
old  <	; goto 33>
new  <	; Goto 33>

5675:
old  <	; call header integral no zero 1 stack zero 0>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

5679:
old  <	; push float x>
new  <	; PushFloat x>

5683:
old  <	; parameter x, offset 72>
new  <	; Parameter double x 72>

5687:
old  <	; call function noellipse-noellipse fabs>
new  <	; Call fabs 48 0>

5694:
old  <	; post call>
new  <	; PostCall 48>

5698:
old  <	; Â£temporary785 = return_value>
new  <	; GetReturnValue Â£temporary785>

5701:
old  <	; push float integral>
new  <	; PushFloat integral>

5705:
old  <	; Â£temporary786 = Â£temporary785 - integral>
new  <	; BinarySubtract Â£temporary786 Â£temporary785 integral>

5709:
old  <	; Â£temporary787 = -Â£temporary786>
new  <	; UnarySubtract Â£temporary787 Â£temporary786>

5713:
old  <	; pop float Â£temporary781 -> p>
new  <	; PopFloat Â£temporary781 -> p>

5717:
old  <	; push float x>
new  <	; PushFloat x>

5721:
old  <	; push float float8$0#>
new  <	; PushFloat 0>

5725:
old  <	; if x <= float8$0# goto 40>
new  <	; SignedLessThanEqual 40 x 0>

5732:
old  <	; push float integral>
new  <	; PushFloat integral>

5736:
old  <	; decrease stack>
new  <	; DecreaseStack>

5739:
old  <	; goto 42>
new  <	; Goto 42>

5743:
old  <	; push float integral>
new  <	; PushFloat integral>

5747:
old  <	; Â£temporary790 = -integral>
new  <	; UnarySubtract Â£temporary790 integral>

5751:
old  <	; return Â£temporary791>
new  <	; Return Â£temporary791>

5758:
old  <	; function end modf>
new  <	; FunctionEnd modf>

5763:
old  <	; push float y>
new  <	; PushFloat y>

5767:
old  <	; push float float8$0#>
new  <	; PushFloat 0>

5771:
old  <	; if y == float8$0# goto 27>
new  <	; Equal 27 y 0>

5778:
old  <	; push float x>
new  <	; PushFloat x>

5782:
old  <	; push float y>
new  <	; PushFloat y>

5786:
old  <	; Â£temporary796 = x / y>
new  <	; SignedDivide Â£temporary796 x y>

5790:
old  <	; pop float quotient>
new  <	; PopFloat quotient>

5794:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

5797:
old  <	; push float quotient>
new  <	; PushFloat quotient>

5801:
old  <	; push float quotient>
new  <	; PushFloat quotient>

5805:
old  <	; Â£temporary797 = float_to_int quotient (Double -> Signed_Long_Int)>
new  <	; FloatingToIntegral Â£temporary797 quotient>

5810:
old  <	; Â£temporary798 = int_to_float Â£temporary797 (Signed_Long_Int -> Double)>
new  <	; IntegralToFloating Â£temporary798 Â£temporary797>

5815:
old  <	; Â£temporary799 = quotient - Â£temporary798>
new  <	; BinarySubtract Â£temporary799 quotient Â£temporary798>

5819:
old  <	; parameter Â£temporary799, offset 72>
new  <	; Parameter double Â£temporary799 72>

5823:
old  <	; call function noellipse-noellipse fabs>
new  <	; Call fabs 48 0>

5830:
old  <	; post call>
new  <	; PostCall 48>

5833:
old  <	; Â£temporary800 = return_value>
new  <	; GetReturnValue Â£temporary800>

5836:
old  <	; pop float remainder>
new  <	; PopFloat remainder>

5840:
old  <	; push float x>
new  <	; PushFloat x>

5844:
old  <	; push float float8$0#>
new  <	; PushFloat 0>

5848:
old  <	; if x <= float8$0# goto 24>
new  <	; SignedLessThanEqual 24 x 0>

5855:
old  <	; push float remainder>
new  <	; PushFloat remainder>

5859:
old  <	; decrease stack>
new  <	; DecreaseStack>

5862:
old  <	; goto 26>
new  <	; Goto 26>

5866:
old  <	; push float remainder>
new  <	; PushFloat remainder>

5870:
old  <	; Â£temporary802 = -remainder>
new  <	; UnarySubtract Â£temporary802 remainder>

5874:
old  <	; return Â£temporary803>
new  <	; Return Â£temporary803>

5881:
old  <	; errno = int4$6#>
new  <	; Assign errno 6>

5885:
old  <	; push float float8$0#>
new  <	; PushFloat 0>

5889:
old  <	; return float8$0#>
new  <	; Return 0>

5896:
old  <	; function end fmod>
new  <	; FunctionEnd fmod>

10:
old  <	; Â£temporary805 = rbp>
new  <	; InspectRegister Â£temporary805 rbp>

13:
old  <	; rbp_pointer = Â£temporary805>
new  <	; Assign rbp_pointer Â£temporary805>

17:
old  <	; Â£temporary806 -> buf = *buf>
new  <	; Dereference Â£temporary806 -> buf buf 0>

21:
old  <	; Â£temporary807 -> rbp_pointer = *rbp_pointer>
new  <	; Dereference Â£temporary807 -> rbp_pointer rbp_pointer 0>

25:
old  <	; Â£temporary806 -> buf = Â£temporary807 -> rbp_pointer>
new  <	; Assign Â£temporary806 -> buf Â£temporary807 -> rbp_pointer>

30:
old  <	; Â£temporary808 -> buf = *buf>
new  <	; Dereference Â£temporary808 -> buf buf 0>

34:
old  <	; Â£temporary809 -> rbp_pointer = *rbp_pointer>
new  <	; Dereference Â£temporary809 -> rbp_pointer rbp_pointer 0>

38:
old  <	; Â£temporary808 -> buf = Â£temporary809 -> rbp_pointer>
new  <	; Assign Â£temporary808 -> buf Â£temporary809 -> rbp_pointer>

43:
old  <	; Â£temporary810 -> buf = *buf>
new  <	; Dereference Â£temporary810 -> buf buf 0>

47:
old  <	; Â£temporary811 -> rbp_pointer = *rbp_pointer>
new  <	; Dereference Â£temporary811 -> rbp_pointer rbp_pointer 0>

51:
old  <	; Â£temporary810 -> buf = Â£temporary811 -> rbp_pointer>
new  <	; Assign Â£temporary810 -> buf Â£temporary811 -> rbp_pointer>

56:
old  <	; return int4$0#>
new  <	; Return 0>

64:
old  <	; function end setjmp>
new  <	; FunctionEnd setjmp>

69:
old  <	; ebx = return_value>
new  <	; AssignRegister ebx return_value>

73:
old  <	; Â£temporary814 -> buf = *buf>
new  <	; Dereference Â£temporary814 -> buf buf 0>

77:
old  <	; rcx = Â£temporary814 -> buf>
new  <	; AssignRegister rcx Â£temporary814 -> buf>

81:
old  <	; Â£temporary816 -> buf = *buf>
new  <	; Dereference Â£temporary816 -> buf buf 0>

85:
old  <	; rdi = Â£temporary816 -> buf>
new  <	; AssignRegister rdi Â£temporary816 -> buf>

89:
old  <	; Â£temporary818 -> buf = *buf>
new  <	; Dereference Â£temporary818 -> buf buf 0>

93:
old  <	; rbp = Â£temporary818 -> buf>
new  <	; AssignRegister rbp Â£temporary818 -> buf>

97:
old  <	; jump to >
new  <	; JumpRegister rcx>

101:
old  <	; return>
new  <	; Return>

108:
old  <	; function end longjmp>
new  <	; FunctionEnd longjmp>

11:
old  <	; empty>
new  <	; Empty>

14:
old  <	; return>
new  <	; Return>

21:
old  <	; function end signal>
new  <	; FunctionEnd signal>

26:
old  <	; initializer String>
new  <	; Initializer String Raise default\n>

32:
old  <	; initializer String>
new  <	; Initializer String Raise error\n>

38:
old  <	; initializer String>
new  <	; Initializer String Raise function, calling %i with %i\n>

44:
old  <	; func = int8$0#>
new  <	; Assign func 0>

48:
old  <	; if func != int8$0# goto 7>
new  <	; NotEqual 7 func 0>

53:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

56:
old  <	; parameter string_Raise20default0A#, offset 60>
new  <	; Parameter pointer "Raise default\n" 60>

60:
old  <	; call function noellipse-ellipse printf, extra 0>
new  <	; Call printf 36 0>

68:
old  <	; post call>
new  <	; PostCall 36>

71:
old  <	; return int4$1#>
new  <	; Return 1>

79:
old  <	; if func != int8$0# goto 13>
new  <	; NotEqual 13 func 0>

84:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

87:
old  <	; parameter string_Raise20error0A#, offset 60>
new  <	; Parameter pointer "Raise error\n" 60>

91:
old  <	; call function noellipse-ellipse printf, extra 0>
new  <	; Call printf 36 0>

99:
old  <	; post call>
new  <	; PostCall 36>

102:
old  <	; return int4$0#>
new  <	; Return 0>

110:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

113:
old  <	; parameter string_Raise20function2C20calling2025i20with2025i0A#, offset 60>
new  <	; Parameter pointer "Raise function, calling %i with %i\n" 60>

117:
old  <	; parameter func, offset 68>
new  <	; Parameter pointer func 68>

122:
old  <	; parameter sig, offset 76>
new  <	; Parameter signedint sig 76>

127:
old  <	; call function noellipse-ellipse printf, extra 12>
new  <	; Call printf 36 12>

136:
old  <	; post call>
new  <	; PostCall 36>

139:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

142:
old  <	; parameter sig, offset 60>
new  <	; Parameter signedint sig 60>

147:
old  <	; call function noellipse-noellipse func>
new  <	; Call func 36 0>

155:
old  <	; post call>
new  <	; PostCall 36>

158:
old  <	; return int4$1#>
new  <	; Return 1>

166:
old  <	; function end raise>
new  <	; FunctionEnd raise>

47:
old  <	; initializer SignedInt>
new  <	; Initializer SignedInt 1>

49:
old  <	; initializer Unsigned_Int>
new  <	; Initializer Unsigned_Int 0>

51:
old  <	; initializer zero 33>
new  <	; InitializerZero 33>

53:
old  <	; initializer SignedInt>
new  <	; Initializer SignedInt 1>

55:
old  <	; initializer Unsigned_Int>
new  <	; Initializer Unsigned_Int 1>

57:
old  <	; initializer zero 33>
new  <	; InitializerZero 33>

59:
old  <	; initializer SignedInt>
new  <	; Initializer SignedInt 1>

61:
old  <	; initializer Unsigned_Int>
new  <	; Initializer Unsigned_Int 2>

63:
old  <	; initializer zero 33>
new  <	; InitializerZero 33>

65:
old  <	; initializer zero 697>
new  <	; InitializerZero 697>

71:
old  <	; initializer Pointer>
new  <	; Initializer Pointer g_fileArray>

77:
old  <	; initializer Pointer>
new  <	; Initializer Pointer g_fileArray + 41>

83:
old  <	; initializer Pointer>
new  <	; Initializer Pointer g_fileArray + 82>

89:
old  <	; initializer SignedInt>
new  <	; Initializer SignedInt 0>

95:
old  <	; initializer SignedInt>
new  <	; Initializer SignedInt 1>

101:
old  <	; initializer SignedInt>
new  <	; Initializer SignedInt 2>

107:
old  <	; initializer SignedInt>
new  <	; Initializer SignedInt 0>

113:
old  <	; initializer SignedInt>
new  <	; Initializer SignedInt 1>

119:
old  <	; initializer SignedInt>
new  <	; Initializer SignedInt 2>

125:
old  <	; initializer SignedInt>
new  <	; Initializer SignedInt 64>

131:
old  <	; initializer SignedInt>
new  <	; Initializer SignedInt 65>

137:
old  <	; initializer SignedInt>
new  <	; Initializer SignedInt 66>

143:
old  <	; rax = int8$85#>
new  <	; AssignRegister rax 85>

147:
old  <	; Â£temporary827 = int_to_int name (Pointer -> UnsignedLongInt)>
new  <	; IntegralToIntegral Â£temporary827 name>

151:
old  <	; rdi = Â£temporary827>
new  <	; AssignRegister rdi Â£temporary827>

154:
old  <	; rsi = int8$511#>
new  <	; AssignRegister rsi 511>

158:
old  <	; syscall>
new  <	; SysCall>

162:
old  <	; return int4$0#>
new  <	; Return 0>

170:
old  <	; function end filecreate>
new  <	; FunctionEnd filecreate>

175:
old  <	; return int4$1#>
new  <	; Return 1>

183:
old  <	; function end fileexists>
new  <	; FunctionEnd fileexists>

188:
old  <	; rax = int8$2#>
new  <	; AssignRegister rax 2>

192:
old  <	; Â£temporary831 = int_to_int name (Pointer -> UnsignedLongInt)>
new  <	; IntegralToIntegral Â£temporary831 name>

196:
old  <	; rdi = Â£temporary831>
new  <	; AssignRegister rdi Â£temporary831>

199:
old  <	; Â£temporary833 = int_to_int mode (UnsignedShortInt -> UnsignedLongInt)>
new  <	; IntegralToIntegral Â£temporary833 mode>

205:
old  <	; rsi = Â£temporary833>
new  <	; AssignRegister rsi Â£temporary833>

208:
old  <	; syscall>
new  <	; SysCall>

212:
old  <	; Â£temporary834 = rax>
new  <	; InspectRegister Â£temporary834 rax>

215:
old  <	; Â£temporary835 = int_to_int Â£temporary834 (UnsignedLongInt -> SignedInt)>
new  <	; IntegralToIntegral Â£temporary835 Â£temporary834>

218:
old  <	; return Â£temporary835>
new  <	; Return Â£temporary835>

226:
old  <	; function end fileopen>
new  <	; FunctionEnd fileopen>

231:
old  <	; initializer Array>
new  <	; Initializer Array 41>

237:
old  <	; empty>
new  <	; Empty>

240:
old  <	; index = int4$0#>
new  <	; Assign index 0>

244:
old  <	; if index >= int4$20# goto 23>
new  <	; SignedGreaterThanEqual 23 index 20>

249:
old  <	; Â£temporary839 = int_to_int index (SignedInt -> Array)>
new  <	; IntegralToIntegral Â£temporary839 index>

255:
old  <	; Â£temporary840 = Â£temporary839 * Array_41#>
new  <	; UnsignedMultiply Â£temporary840 Â£temporary839 41>

260:
old  <	; Â£temporary841 = g_fileArray + Â£temporary840>
new  <	; BinaryAdd Â£temporary841 g_fileArray Â£temporary840>

265:
old  <	; Â£temporary838 -> Â£temporary841 = *Â£temporary841>
new  <	; Dereference Â£temporary838 -> Â£temporary841 Â£temporary841 0>

268:
old  <	; if Â£temporary838.open -> Â£temporary841 != int4$0# goto 21>
new  <	; NotEqual 21 Â£temporary838.open -> Â£temporary841 0>

273:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 44 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

276:
old  <	; parameter name, offset 68>
new  <	; Parameter pointer name 68>

281:
old  <	; parameter mode, offset 76>
new  <	; Parameter pointer mode 76>

286:
old  <	; Â£temporary845 = int_to_int index (SignedInt -> Array)>
new  <	; IntegralToIntegral Â£temporary845 index>

292:
old  <	; Â£temporary846 = Â£temporary845 * Array_41#>
new  <	; UnsignedMultiply Â£temporary846 Â£temporary845 41>

297:
old  <	; Â£temporary847 = g_fileArray + Â£temporary846>
new  <	; BinaryAdd Â£temporary847 g_fileArray Â£temporary846>

302:
old  <	; Â£temporary844 -> Â£temporary847 = *Â£temporary847>
new  <	; Dereference Â£temporary844 -> Â£temporary847 Â£temporary847 0>

305:
old  <	; Â£temporary848 = &Â£temporary844 -> Â£temporary847>
new  <	; Address Â£temporary848 Â£temporary844 -> Â£temporary847>

308:
old  <	; parameter Â£temporary848, offset 84>
new  <	; Parameter pointer Â£temporary848 84>

312:
old  <	; call function noellipse-noellipse freopen>
new  <	; Call freopen 44 0>

319:
old  <	; post call>
new  <	; PostCall 44>

322:
old  <	; Â£temporary849 = return_value>
new  <	; GetReturnValue Â£temporary849>

325:
old  <	; return Â£temporary849>
new  <	; Return Â£temporary849>

332:
old  <	; index = index + int4$1#>
new  <	; BinaryAdd index index 1>

336:
old  <	; goto 2>
new  <	; Goto 2>

340:
old  <	; return int8$0#>
new  <	; Return 0>

348:
old  <	; function end fopen>
new  <	; FunctionEnd fopen>

353:
old  <	; initializer String>
new  <	; Initializer String r>

359:
old  <	; initializer String>
new  <	; Initializer String w>

365:
old  <	; initializer String>
new  <	; Initializer String a>

371:
old  <	; initializer String>
new  <	; Initializer String r+>

377:
old  <	; initializer String>
new  <	; Initializer String w+>

383:
old  <	; initializer String>
new  <	; Initializer String a+>

389:
old  <	; handle = int4$minus1#>
new  <	; Assign handle -1>

393:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

396:
old  <	; parameter mode, offset 76>
new  <	; Parameter pointer mode 76>

401:
old  <	; parameter string_r#, offset 84>
new  <	; Parameter pointer "r" 84>

405:
old  <	; call function noellipse-noellipse strcmp>
new  <	; Call strcmp 52 0>

412:
old  <	; post call>
new  <	; PostCall 52>

415:
old  <	; Â£temporary850 = return_value>
new  <	; GetReturnValue Â£temporary850>

418:
old  <	; if Â£temporary850 != int4$0# goto 16>
new  <	; NotEqual 16 Â£temporary850 0>

423:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

426:
old  <	; parameter name, offset 76>
new  <	; Parameter pointer name 76>

431:
old  <	; parameter int2$64#, offset 84>
new  <	; Parameter unsignedshortint 64 84>

435:
old  <	; call function noellipse-noellipse fileopen>
new  <	; Call fileopen 52 0>

442:
old  <	; post call>
new  <	; PostCall 52>

445:
old  <	; Â£temporary852 = return_value>
new  <	; GetReturnValue Â£temporary852>

448:
old  <	; handle = Â£temporary852>
new  <	; Assign handle Â£temporary852>

452:
old  <	; goto 130>
new  <	; Goto 130>

456:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

459:
old  <	; parameter mode, offset 76>
new  <	; Parameter pointer mode 76>

464:
old  <	; parameter string_w#, offset 84>
new  <	; Parameter pointer "w" 84>

468:
old  <	; call function noellipse-noellipse strcmp>
new  <	; Call strcmp 52 0>

475:
old  <	; post call>
new  <	; PostCall 52>

478:
old  <	; Â£temporary853 = return_value>
new  <	; GetReturnValue Â£temporary853>

481:
old  <	; if Â£temporary853 != int4$0# goto 30>
new  <	; NotEqual 30 Â£temporary853 0>

486:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

489:
old  <	; parameter name, offset 76>
new  <	; Parameter pointer name 76>

494:
old  <	; call function noellipse-noellipse filecreate>
new  <	; Call filecreate 52 0>

501:
old  <	; post call>
new  <	; PostCall 52>

504:
old  <	; Â£temporary855 = return_value>
new  <	; GetReturnValue Â£temporary855>

507:
old  <	; handle = Â£temporary855>
new  <	; Assign handle Â£temporary855>

511:
old  <	; goto 130>
new  <	; Goto 130>

515:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

518:
old  <	; parameter mode, offset 76>
new  <	; Parameter pointer mode 76>

523:
old  <	; parameter string_a#, offset 84>
new  <	; Parameter pointer "a" 84>

527:
old  <	; call function noellipse-noellipse strcmp>
new  <	; Call strcmp 52 0>

534:
old  <	; post call>
new  <	; PostCall 52>

537:
old  <	; Â£temporary856 = return_value>
new  <	; GetReturnValue Â£temporary856>

540:
old  <	; if Â£temporary856 != int4$0# goto 59>
new  <	; NotEqual 59 Â£temporary856 0>

545:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

548:
old  <	; parameter name, offset 76>
new  <	; Parameter pointer name 76>

553:
old  <	; parameter int2$65#, offset 84>
new  <	; Parameter unsignedshortint 65 84>

557:
old  <	; call function noellipse-noellipse fileopen>
new  <	; Call fileopen 52 0>

564:
old  <	; post call>
new  <	; PostCall 52>

567:
old  <	; Â£temporary858 = return_value>
new  <	; GetReturnValue Â£temporary858>

570:
old  <	; handle = Â£temporary858>
new  <	; Assign handle Â£temporary858>

574:
old  <	; if handle == int4$minus1# goto 52>
new  <	; Equal 52 handle -1>

579:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

582:
old  <	; parameter stream, offset 76>
new  <	; Parameter pointer stream 76>

587:
old  <	; parameter int4$0#, offset 84>
new  <	; Parameter signedint 0 84>

591:
old  <	; parameter int4$2#, offset 88>
new  <	; Parameter signedint 2 88>

595:
old  <	; call function noellipse-noellipse fseek>
new  <	; Call fseek 52 0>

602:
old  <	; post call>
new  <	; PostCall 52>

605:
old  <	; goto 130>
new  <	; Goto 130>

609:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

612:
old  <	; parameter name, offset 76>
new  <	; Parameter pointer name 76>

617:
old  <	; call function noellipse-noellipse filecreate>
new  <	; Call filecreate 52 0>

624:
old  <	; post call>
new  <	; PostCall 52>

627:
old  <	; Â£temporary861 = return_value>
new  <	; GetReturnValue Â£temporary861>

630:
old  <	; handle = Â£temporary861>
new  <	; Assign handle Â£temporary861>

634:
old  <	; goto 130>
new  <	; Goto 130>

638:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

641:
old  <	; parameter mode, offset 76>
new  <	; Parameter pointer mode 76>

646:
old  <	; parameter string_r2B#, offset 84>
new  <	; Parameter pointer "r+" 84>

650:
old  <	; call function noellipse-noellipse strcmp>
new  <	; Call strcmp 52 0>

657:
old  <	; post call>
new  <	; PostCall 52>

660:
old  <	; Â£temporary862 = return_value>
new  <	; GetReturnValue Â£temporary862>

663:
old  <	; if Â£temporary862 != int4$0# goto 74>
new  <	; NotEqual 74 Â£temporary862 0>

668:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

671:
old  <	; parameter name, offset 76>
new  <	; Parameter pointer name 76>

676:
old  <	; parameter int2$66#, offset 84>
new  <	; Parameter unsignedshortint 66 84>

680:
old  <	; call function noellipse-noellipse fileopen>
new  <	; Call fileopen 52 0>

687:
old  <	; post call>
new  <	; PostCall 52>

690:
old  <	; Â£temporary864 = return_value>
new  <	; GetReturnValue Â£temporary864>

693:
old  <	; handle = Â£temporary864>
new  <	; Assign handle Â£temporary864>

697:
old  <	; goto 130>
new  <	; Goto 130>

701:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

704:
old  <	; parameter mode, offset 76>
new  <	; Parameter pointer mode 76>

709:
old  <	; parameter string_w2B#, offset 84>
new  <	; Parameter pointer "w+" 84>

713:
old  <	; call function noellipse-noellipse strcmp>
new  <	; Call strcmp 52 0>

720:
old  <	; post call>
new  <	; PostCall 52>

723:
old  <	; Â£temporary865 = return_value>
new  <	; GetReturnValue Â£temporary865>

726:
old  <	; if Â£temporary865 != int4$0# goto 102>
new  <	; NotEqual 102 Â£temporary865 0>

731:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

734:
old  <	; parameter name, offset 76>
new  <	; Parameter pointer name 76>

739:
old  <	; call function noellipse-noellipse fileexists>
new  <	; Call fileexists 52 0>

746:
old  <	; post call>
new  <	; PostCall 52>

749:
old  <	; Â£temporary867 = return_value>
new  <	; GetReturnValue Â£temporary867>

752:
old  <	; if Â£temporary867 == int4$0# goto 95>
new  <	; Equal 95 Â£temporary867 0>

757:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

760:
old  <	; parameter name, offset 76>
new  <	; Parameter pointer name 76>

765:
old  <	; parameter int2$66#, offset 84>
new  <	; Parameter unsignedshortint 66 84>

769:
old  <	; call function noellipse-noellipse fileopen>
new  <	; Call fileopen 52 0>

776:
old  <	; post call>
new  <	; PostCall 52>

779:
old  <	; Â£temporary868 = return_value>
new  <	; GetReturnValue Â£temporary868>

782:
old  <	; handle = Â£temporary868>
new  <	; Assign handle Â£temporary868>

786:
old  <	; goto 130>
new  <	; Goto 130>

790:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

793:
old  <	; parameter name, offset 76>
new  <	; Parameter pointer name 76>

798:
old  <	; call function noellipse-noellipse filecreate>
new  <	; Call filecreate 52 0>

805:
old  <	; post call>
new  <	; PostCall 52>

808:
old  <	; Â£temporary869 = return_value>
new  <	; GetReturnValue Â£temporary869>

811:
old  <	; handle = Â£temporary869>
new  <	; Assign handle Â£temporary869>

815:
old  <	; goto 130>
new  <	; Goto 130>

819:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

822:
old  <	; parameter mode, offset 76>
new  <	; Parameter pointer mode 76>

827:
old  <	; parameter string_a2B#, offset 84>
new  <	; Parameter pointer "a+" 84>

831:
old  <	; call function noellipse-noellipse strcmp>
new  <	; Call strcmp 52 0>

838:
old  <	; post call>
new  <	; PostCall 52>

841:
old  <	; Â£temporary871 = return_value>
new  <	; GetReturnValue Â£temporary871>

844:
old  <	; if Â£temporary871 != int4$0# goto 130>
new  <	; NotEqual 130 Â£temporary871 0>

849:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

852:
old  <	; parameter name, offset 76>
new  <	; Parameter pointer name 76>

857:
old  <	; parameter int2$66#, offset 84>
new  <	; Parameter unsignedshortint 66 84>

861:
old  <	; call function noellipse-noellipse fileopen>
new  <	; Call fileopen 52 0>

868:
old  <	; post call>
new  <	; PostCall 52>

871:
old  <	; Â£temporary873 = return_value>
new  <	; GetReturnValue Â£temporary873>

874:
old  <	; handle = Â£temporary873>
new  <	; Assign handle Â£temporary873>

878:
old  <	; if handle == int4$minus1# goto 124>
new  <	; Equal 124 handle -1>

883:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

886:
old  <	; parameter stream, offset 76>
new  <	; Parameter pointer stream 76>

891:
old  <	; parameter int4$0#, offset 84>
new  <	; Parameter signedint 0 84>

895:
old  <	; parameter int4$2#, offset 88>
new  <	; Parameter signedint 2 88>

899:
old  <	; call function noellipse-noellipse fseek>
new  <	; Call fseek 52 0>

906:
old  <	; post call>
new  <	; PostCall 52>

909:
old  <	; goto 130>
new  <	; Goto 130>

913:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

916:
old  <	; parameter name, offset 76>
new  <	; Parameter pointer name 76>

921:
old  <	; call function noellipse-noellipse filecreate>
new  <	; Call filecreate 52 0>

928:
old  <	; post call>
new  <	; PostCall 52>

931:
old  <	; Â£temporary876 = return_value>
new  <	; GetReturnValue Â£temporary876>

934:
old  <	; handle = Â£temporary876>
new  <	; Assign handle Â£temporary876>

938:
old  <	; if handle == int4$minus1# goto 146>
new  <	; Equal 146 handle -1>

943:
old  <	; Â£temporary878 -> stream = *stream>
new  <	; Dereference Â£temporary878 -> stream stream 0>

947:
old  <	; Â£temporary878 -> stream = int4$1#>
new  <	; Assign Â£temporary878 -> stream 1>

951:
old  <	; Â£temporary879 -> stream = *stream>
new  <	; Dereference Â£temporary879 -> stream stream 0>

955:
old  <	; Â£temporary879 -> stream = handle>
new  <	; Assign Â£temporary879 -> stream handle>

960:
old  <	; Â£temporary880 -> stream = *stream>
new  <	; Dereference Â£temporary880 -> stream stream 0>

964:
old  <	; Â£temporary880 -> stream = int4$0#>
new  <	; Assign Â£temporary880 -> stream 0>

968:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

971:
old  <	; Â£temporary881 -> stream = *stream>
new  <	; Dereference Â£temporary881 -> stream stream 0>

975:
old  <	; parameter Â£temporary881 -> stream, offset 76>
new  <	; Parameter pointer Â£temporary881 -> stream 76>

980:
old  <	; parameter name, offset 84>
new  <	; Parameter pointer name 84>

985:
old  <	; call function noellipse-noellipse strcpy>
new  <	; Call strcpy 52 0>

992:
old  <	; post call>
new  <	; PostCall 52>

995:
old  <	; Â£temporary883 -> stream = *stream>
new  <	; Dereference Â£temporary883 -> stream stream 0>

999:
old  <	; Â£temporary883 -> stream = int4$0#>
new  <	; Assign Â£temporary883 -> stream 0>

1003:
old  <	; return stream>
new  <	; Return stream>

1011:
old  <	; Â£temporary884 -> stream = *stream>
new  <	; Dereference Â£temporary884 -> stream stream 0>

1015:
old  <	; Â£temporary884 -> stream = int4$0#>
new  <	; Assign Â£temporary884 -> stream 0>

1019:
old  <	; return int8$0#>
new  <	; Return 0>

1027:
old  <	; function end freopen>
new  <	; FunctionEnd freopen>

1032:
old  <	; if stream != int8$0# goto 22>
new  <	; NotEqual 22 stream 0>

1037:
old  <	; index = int4$0#>
new  <	; Assign index 0>

1041:
old  <	; if index >= int4$20# goto 22>
new  <	; SignedGreaterThanEqual 22 index 20>

1046:
old  <	; Â£temporary889 = int_to_int index (SignedInt -> Array)>
new  <	; IntegralToIntegral Â£temporary889 index>

1052:
old  <	; Â£temporary890 = Â£temporary889 * Array_41#>
new  <	; UnsignedMultiply Â£temporary890 Â£temporary889 41>

1057:
old  <	; Â£temporary891 = g_fileArray + Â£temporary890>
new  <	; BinaryAdd Â£temporary891 g_fileArray Â£temporary890>

1062:
old  <	; Â£temporary888 -> Â£temporary891 = *Â£temporary891>
new  <	; Dereference Â£temporary888 -> Â£temporary891 Â£temporary891 0>

1065:
old  <	; if Â£temporary888.open -> Â£temporary891 == int4$0# goto 20>
new  <	; Equal 20 Â£temporary888.open -> Â£temporary891 0>

1070:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1073:
old  <	; Â£temporary893 = int_to_int index (SignedInt -> Array)>
new  <	; IntegralToIntegral Â£temporary893 index>

1079:
old  <	; Â£temporary894 = Â£temporary893 * Array_41#>
new  <	; UnsignedMultiply Â£temporary894 Â£temporary893 41>

1084:
old  <	; Â£temporary895 = g_fileArray + Â£temporary894>
new  <	; BinaryAdd Â£temporary895 g_fileArray Â£temporary894>

1089:
old  <	; Â£temporary892 -> Â£temporary895 = *Â£temporary895>
new  <	; Dereference Â£temporary892 -> Â£temporary895 Â£temporary895 0>

1092:
old  <	; Â£temporary896 = &Â£temporary892 -> Â£temporary895>
new  <	; Address Â£temporary896 Â£temporary892 -> Â£temporary895>

1095:
old  <	; parameter Â£temporary896, offset 60>
new  <	; Parameter pointer Â£temporary896 60>

1099:
old  <	; call function noellipse-noellipse fflush>
new  <	; Call fflush 36 0>

1106:
old  <	; post call>
new  <	; PostCall 36>

1109:
old  <	; Â£temporary897 = return_value>
new  <	; GetReturnValue Â£temporary897>

1112:
old  <	; if Â£temporary897 != int4$minus1# goto 20>
new  <	; NotEqual 20 Â£temporary897 -1>

1117:
old  <	; return int4$minus1#>
new  <	; Return -1>

1125:
old  <	; index = index + int4$1#>
new  <	; BinaryAdd index index 1>

1129:
old  <	; goto 2>
new  <	; Goto 2>

1133:
old  <	; return int4$0#>
new  <	; Return 0>

1141:
old  <	; function end fflush>
new  <	; FunctionEnd fflush>

1146:
old  <	; if stream == int8$0# goto 7>
new  <	; Equal 7 stream 0>

1151:
old  <	; rax = int8$3#>
new  <	; AssignRegister rax 3>

1155:
old  <	; Â£temporary903 -> stream = *stream>
new  <	; Dereference Â£temporary903 -> stream stream 0>

1159:
old  <	; Â£temporary904 = int_to_int Â£temporary903 -> stream (Unsigned_Int -> UnsignedLongInt)>
new  <	; IntegralToIntegral Â£temporary904 Â£temporary903 -> stream>

1165:
old  <	; rdi = Â£temporary904>
new  <	; AssignRegister rdi Â£temporary904>

1168:
old  <	; syscall>
new  <	; SysCall>

1172:
old  <	; return int4$0#>
new  <	; Return 0>

1180:
old  <	; index = int4$0#>
new  <	; Assign index 0>

1184:
old  <	; if index >= int4$20# goto 28>
new  <	; SignedGreaterThanEqual 28 index 20>

1189:
old  <	; Â£temporary908 = int_to_int index (SignedInt -> Array)>
new  <	; IntegralToIntegral Â£temporary908 index>

1195:
old  <	; Â£temporary909 = Â£temporary908 * Array_41#>
new  <	; UnsignedMultiply Â£temporary909 Â£temporary908 41>

1200:
old  <	; Â£temporary910 = g_fileArray + Â£temporary909>
new  <	; BinaryAdd Â£temporary910 g_fileArray Â£temporary909>

1205:
old  <	; Â£temporary907 -> Â£temporary910 = *Â£temporary910>
new  <	; Dereference Â£temporary907 -> Â£temporary910 Â£temporary910 0>

1208:
old  <	; if Â£temporary907.open -> Â£temporary910 == int4$0# goto 26>
new  <	; Equal 26 Â£temporary907.open -> Â£temporary910 0>

1213:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1216:
old  <	; Â£temporary912 = int_to_int index (SignedInt -> Array)>
new  <	; IntegralToIntegral Â£temporary912 index>

1222:
old  <	; Â£temporary913 = Â£temporary912 * Array_41#>
new  <	; UnsignedMultiply Â£temporary913 Â£temporary912 41>

1227:
old  <	; Â£temporary914 = g_fileArray + Â£temporary913>
new  <	; BinaryAdd Â£temporary914 g_fileArray Â£temporary913>

1232:
old  <	; Â£temporary911 -> Â£temporary914 = *Â£temporary914>
new  <	; Dereference Â£temporary911 -> Â£temporary914 Â£temporary914 0>

1235:
old  <	; Â£temporary915 = &Â£temporary911 -> Â£temporary914>
new  <	; Address Â£temporary915 Â£temporary911 -> Â£temporary914>

1238:
old  <	; parameter Â£temporary915, offset 60>
new  <	; Parameter pointer Â£temporary915 60>

1242:
old  <	; call function noellipse-noellipse fclose>
new  <	; Call fclose 36 0>

1249:
old  <	; post call>
new  <	; PostCall 36>

1252:
old  <	; Â£temporary916 = return_value>
new  <	; GetReturnValue Â£temporary916>

1255:
old  <	; if Â£temporary916 != int4$minus1# goto 26>
new  <	; NotEqual 26 Â£temporary916 -1>

1260:
old  <	; return int4$minus1#>
new  <	; Return -1>

1268:
old  <	; index = index + int4$1#>
new  <	; BinaryAdd index index 1>

1272:
old  <	; goto 8>
new  <	; Goto 8>

1276:
old  <	; return int4$0#>
new  <	; Return 0>

1284:
old  <	; function end fclose>
new  <	; FunctionEnd fclose>

1289:
old  <	; rax = int8$88#>
new  <	; AssignRegister rax 88>

1293:
old  <	; Â£temporary921 = int_to_int name (Pointer -> UnsignedLongInt)>
new  <	; IntegralToIntegral Â£temporary921 name>

1297:
old  <	; rdi = Â£temporary921>
new  <	; AssignRegister rdi Â£temporary921>

1300:
old  <	; syscall>
new  <	; SysCall>

1304:
old  <	; return int4$0#>
new  <	; Return 0>

1312:
old  <	; function end remove>
new  <	; FunctionEnd remove>

1317:
old  <	; rax = int8$82#>
new  <	; AssignRegister rax 82>

1321:
old  <	; Â£temporary924 = int_to_int oldName (Pointer -> UnsignedLongInt)>
new  <	; IntegralToIntegral Â£temporary924 oldName>

1325:
old  <	; rdi = Â£temporary924>
new  <	; AssignRegister rdi Â£temporary924>

1328:
old  <	; Â£temporary926 = int_to_int newName (Pointer -> UnsignedLongInt)>
new  <	; IntegralToIntegral Â£temporary926 newName>

1332:
old  <	; rsi = Â£temporary926>
new  <	; AssignRegister rsi Â£temporary926>

1335:
old  <	; syscall>
new  <	; SysCall>

1339:
old  <	; return int4$0#>
new  <	; Return 0>

1347:
old  <	; function end rename>
new  <	; FunctionEnd rename>

1352:
old  <	; return int4$0#>
new  <	; Return 0>

1360:
old  <	; function end setvbuf>
new  <	; FunctionEnd setvbuf>

1365:
old  <	; empty>
new  <	; Empty>

1368:
old  <	; return>
new  <	; Return>

1375:
old  <	; function end setbuf>
new  <	; FunctionEnd setbuf>

1380:
old  <	; c = int1$0#>
new  <	; Assign c 0>

1384:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 33 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1387:
old  <	; Â£temporary927 = &c>
new  <	; Address Â£temporary927 c>

1392:
old  <	; parameter Â£temporary927, offset 57>
new  <	; Parameter pointer Â£temporary927 57>

1396:
old  <	; parameter int4$1#, offset 65>
new  <	; Parameter signedint 1 65>

1400:
old  <	; parameter int4$1#, offset 69>
new  <	; Parameter signedint 1 69>

1404:
old  <	; parameter stream, offset 73>
new  <	; Parameter pointer stream 73>

1409:
old  <	; call function noellipse-noellipse fread>
new  <	; Call fread 33 0>

1416:
old  <	; post call>
new  <	; PostCall 33>

1419:
old  <	; Â£temporary928 = return_value>
new  <	; GetReturnValue Â£temporary928>

1422:
old  <	; if Â£temporary928 <= int4$0# goto 13>
new  <	; SignedLessThanEqual 13 Â£temporary928 0>

1427:
old  <	; Â£temporary930 = int_to_int c (SignedChar -> SignedInt)>
new  <	; IntegralToIntegral Â£temporary930 c>

1436:
old  <	; return Â£temporary930>
new  <	; Return Â£temporary930>

1443:
old  <	; return int4$minus1#>
new  <	; Return -1>

1451:
old  <	; function end fgetc>
new  <	; FunctionEnd fgetc>

1456:
old  <	; initializer String>
new  <	; Initializer String %c>

1462:
old  <	; count = int4$0#>
new  <	; Assign count 0>

1466:
old  <	; prevChar = int1$0#>
new  <	; Assign prevChar 0>

1470:
old  <	; Â£temporary932 = size - int4$1#>
new  <	; BinarySubtract Â£temporary932 size 1>

1475:
old  <	; if count >= Â£temporary932 goto 36>
new  <	; SignedGreaterThanEqual 36 count Â£temporary932>

1480:
old  <	; currChar = int1$0#>
new  <	; Assign currChar 0>

1484:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 50 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1487:
old  <	; parameter stream, offset 74>
new  <	; Parameter pointer stream 74>

1492:
old  <	; parameter string_25c#, offset 82>
new  <	; Parameter pointer "%c" 82>

1496:
old  <	; Â£temporary934 = &currChar>
new  <	; Address Â£temporary934 currChar>

1501:
old  <	; parameter Â£temporary934, offset 90>
new  <	; Parameter pointer Â£temporary934 90>

1505:
old  <	; call function noellipse-ellipse fscanf, extra 8>
new  <	; Call fscanf 50 8>

1514:
old  <	; post call>
new  <	; PostCall 50>

1517:
old  <	; if prevChar != int1$13# goto 19>
new  <	; NotEqual 19 prevChar 13>

1522:
old  <	; if currChar != int1$10# goto 19>
new  <	; NotEqual 19 currChar 10>

1527:
old  <	; Â£temporary940 = int_to_int count (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary940 count>

1533:
old  <	; Â£temporary942 = text + Â£temporary940>
new  <	; BinaryAdd Â£temporary942 text Â£temporary940>

1538:
old  <	; Â£temporary939 -> Â£temporary942 = *Â£temporary942>
new  <	; Dereference Â£temporary939 -> Â£temporary942 Â£temporary942 0>

1541:
old  <	; Â£temporary939 -> Â£temporary942 = int1$0#>
new  <	; Assign Â£temporary939 -> Â£temporary942 0>

1545:
old  <	; goto 36>
new  <	; Goto 36>

1549:
old  <	; Â£temporary943 = int_to_int currChar (SignedChar -> SignedInt)>
new  <	; IntegralToIntegral Â£temporary943 currChar>

1558:
old  <	; if Â£temporary943 != int4$minus1# goto 26>
new  <	; NotEqual 26 Â£temporary943 -1>

1563:
old  <	; Â£temporary946 = int_to_int count (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary946 count>

1569:
old  <	; Â£temporary948 = text + Â£temporary946>
new  <	; BinaryAdd Â£temporary948 text Â£temporary946>

1574:
old  <	; Â£temporary945 -> Â£temporary948 = *Â£temporary948>
new  <	; Dereference Â£temporary945 -> Â£temporary948 Â£temporary948 0>

1577:
old  <	; Â£temporary945 -> Â£temporary948 = int1$0#>
new  <	; Assign Â£temporary945 -> Â£temporary948 0>

1581:
old  <	; goto 36>
new  <	; Goto 36>

1585:
old  <	; if currChar == int1$13# goto 34>
new  <	; Equal 34 currChar 13>

1590:
old  <	; if currChar == int1$10# goto 34>
new  <	; Equal 34 currChar 10>

1595:
old  <	; Â£temporary952 = count>
new  <	; Assign Â£temporary952 count>

1599:
old  <	; count = count + int4$1#>
new  <	; BinaryAdd count count 1>

1603:
old  <	; Â£temporary954 = int_to_int Â£temporary952 (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary954 Â£temporary952>

1608:
old  <	; Â£temporary956 = text + Â£temporary954>
new  <	; BinaryAdd Â£temporary956 text Â£temporary954>

1613:
old  <	; Â£temporary953 -> Â£temporary956 = *Â£temporary956>
new  <	; Dereference Â£temporary953 -> Â£temporary956 Â£temporary956 0>

1616:
old  <	; Â£temporary953 -> Â£temporary956 = currChar>
new  <	; Assign Â£temporary953 -> Â£temporary956 currChar>

1621:
old  <	; prevChar = currChar>
new  <	; Assign prevChar currChar>

1626:
old  <	; goto 2>
new  <	; Goto 2>

1630:
old  <	; return text>
new  <	; Return text>

1638:
old  <	; function end fgets>
new  <	; FunctionEnd fgets>

1643:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1646:
old  <	; parameter s, offset 64>
new  <	; Parameter pointer s 64>

1651:
old  <	; call function noellipse-noellipse strlen>
new  <	; Call strlen 40 0>

1658:
old  <	; post call>
new  <	; PostCall 40>

1661:
old  <	; Â£temporary958 = return_value>
new  <	; GetReturnValue Â£temporary958>

1664:
old  <	; size = Â£temporary958 + int4$1#>
new  <	; BinaryAdd size Â£temporary958 1>

1669:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 44 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1672:
old  <	; parameter s, offset 68>
new  <	; Parameter pointer s 68>

1677:
old  <	; parameter size, offset 76>
new  <	; Parameter signedint size 76>

1682:
old  <	; parameter int4$1#, offset 80>
new  <	; Parameter signedint 1 80>

1686:
old  <	; parameter stream, offset 84>
new  <	; Parameter pointer stream 84>

1691:
old  <	; call function noellipse-noellipse fwrite>
new  <	; Call fwrite 44 0>

1698:
old  <	; post call>
new  <	; PostCall 44>

1701:
old  <	; Â£temporary961 = return_value>
new  <	; GetReturnValue Â£temporary961>

1704:
old  <	; if Â£temporary961 != size goto 17>
new  <	; NotEqual 17 Â£temporary961 size>

1709:
old  <	; Â£temporary963 = int4$0#>
new  <	; Assign Â£temporary963 0>

1713:
old  <	; goto 18>
new  <	; Goto 18>

1717:
old  <	; Â£temporary963 = int4$minus1#>
new  <	; Assign Â£temporary963 -1>

1721:
old  <	; return Â£temporary963>
new  <	; Return Â£temporary963>

1728:
old  <	; function end fputs>
new  <	; FunctionEnd fputs>

1733:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1736:
old  <	; parameter stdin, offset 48>
new  <	; Parameter pointer stdin 48>

1741:
old  <	; call function noellipse-noellipse fgetc>
new  <	; Call fgetc 24 0>

1748:
old  <	; post call>
new  <	; PostCall 24>

1751:
old  <	; Â£temporary964 = return_value>
new  <	; GetReturnValue Â£temporary964>

1754:
old  <	; return Â£temporary964>
new  <	; Return Â£temporary964>

1761:
old  <	; function end getchar>
new  <	; FunctionEnd getchar>

1766:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1769:
old  <	; parameter s, offset 56>
new  <	; Parameter pointer s 56>

1774:
old  <	; parameter int4$minus1#, offset 64>
new  <	; Parameter signedint -1 64>

1778:
old  <	; parameter stdin, offset 68>
new  <	; Parameter pointer stdin 68>

1783:
old  <	; call function noellipse-noellipse fgets>
new  <	; Call fgets 32 0>

1790:
old  <	; post call>
new  <	; PostCall 32>

1793:
old  <	; Â£temporary965 = return_value>
new  <	; GetReturnValue Â£temporary965>

1796:
old  <	; if Â£temporary965 == int8$0# goto 21>
new  <	; Equal 21 Â£temporary965 0>

1801:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1804:
old  <	; parameter s, offset 56>
new  <	; Parameter pointer s 56>

1809:
old  <	; call function noellipse-noellipse strlen>
new  <	; Call strlen 32 0>

1816:
old  <	; post call>
new  <	; PostCall 32>

1819:
old  <	; Â£temporary967 = return_value>
new  <	; GetReturnValue Â£temporary967>

1822:
old  <	; size = Â£temporary967>
new  <	; Assign size Â£temporary967>

1826:
old  <	; if size <= int4$0# goto 20>
new  <	; SignedLessThanEqual 20 size 0>

1831:
old  <	; Â£temporary969 = size - int4$1#>
new  <	; BinarySubtract Â£temporary969 size 1>

1836:
old  <	; Â£temporary971 = int_to_int Â£temporary969 (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary971 Â£temporary969>

1841:
old  <	; Â£temporary973 = s + Â£temporary971>
new  <	; BinaryAdd Â£temporary973 s Â£temporary971>

1846:
old  <	; Â£temporary970 -> Â£temporary973 = *Â£temporary973>
new  <	; Dereference Â£temporary970 -> Â£temporary973 Â£temporary973 0>

1849:
old  <	; Â£temporary970 -> Â£temporary973 = int1$0#>
new  <	; Assign Â£temporary970 -> Â£temporary973 0>

1853:
old  <	; return s>
new  <	; Return s>

1861:
old  <	; return int8$0#>
new  <	; Return 0>

1869:
old  <	; function end gets>
new  <	; FunctionEnd gets>

1874:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1877:
old  <	; parameter s, offset 56>
new  <	; Parameter pointer s 56>

1882:
old  <	; parameter stdout, offset 64>
new  <	; Parameter pointer stdout 64>

1887:
old  <	; call function noellipse-noellipse fputs>
new  <	; Call fputs 32 0>

1894:
old  <	; post call>
new  <	; PostCall 32>

1897:
old  <	; Â£temporary974 = return_value>
new  <	; GetReturnValue Â£temporary974>

1900:
old  <	; if Â£temporary974 == int4$0# goto 14>
new  <	; Equal 14 Â£temporary974 0>

1905:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1908:
old  <	; parameter int4$10#, offset 56>
new  <	; Parameter signedint 10 56>

1912:
old  <	; parameter stdout, offset 60>
new  <	; Parameter pointer stdout 60>

1917:
old  <	; call function noellipse-noellipse fputc>
new  <	; Call fputc 32 0>

1924:
old  <	; post call>
new  <	; PostCall 32>

1927:
old  <	; Â£temporary976 = return_value>
new  <	; GetReturnValue Â£temporary976>

1930:
old  <	; return Â£temporary976>
new  <	; Return Â£temporary976>

1937:
old  <	; return int4$minus1#>
new  <	; Return -1>

1945:
old  <	; function end puts>
new  <	; FunctionEnd puts>

1950:
old  <	; Â£temporary977 -> stream = *stream>
new  <	; Dereference Â£temporary977 -> stream stream 0>

1954:
old  <	; Â£temporary978 = int_to_int Â£temporary977 -> stream (SignedChar -> SignedInt)>
new  <	; IntegralToIntegral Â£temporary978 Â£temporary977 -> stream>

1963:
old  <	; if Â£temporary978 == int4$minus1# goto 6>
new  <	; Equal 6 Â£temporary978 -1>

1968:
old  <	; Â£temporary980 -> stream = *stream>
new  <	; Dereference Â£temporary980 -> stream stream 0>

1972:
old  <	; Â£temporary981 = int_to_int c (SignedInt -> SignedChar)>
new  <	; IntegralToIntegral Â£temporary981 c>

1980:
old  <	; Â£temporary980 -> stream = Â£temporary981>
new  <	; Assign Â£temporary980 -> stream Â£temporary981>

1984:
old  <	; return c>
new  <	; Return c>

1992:
old  <	; function end ungetc>
new  <	; FunctionEnd ungetc>

1997:
old  <	; rax = int8$0#>
new  <	; AssignRegister rax 0>

2001:
old  <	; Â£temporary984 -> stream = *stream>
new  <	; Dereference Â£temporary984 -> stream stream 0>

2005:
old  <	; Â£temporary985 = int_to_int Â£temporary984 -> stream (Unsigned_Int -> UnsignedLongInt)>
new  <	; IntegralToIntegral Â£temporary985 Â£temporary984 -> stream>

2011:
old  <	; rdi = Â£temporary985>
new  <	; AssignRegister rdi Â£temporary985>

2014:
old  <	; Â£temporary987 = int_to_int ptr (Pointer -> UnsignedLongInt)>
new  <	; IntegralToIntegral Â£temporary987 ptr>

2018:
old  <	; rsi = Â£temporary987>
new  <	; AssignRegister rsi Â£temporary987>

2021:
old  <	; Â£temporary989 = size * nobj>
new  <	; SignedMultiply Â£temporary989 size nobj>

2027:
old  <	; Â£temporary990 = int_to_int Â£temporary989 (SignedInt -> UnsignedLongInt)>
new  <	; IntegralToIntegral Â£temporary990 Â£temporary989>

2032:
old  <	; rdx = Â£temporary990>
new  <	; AssignRegister rdx Â£temporary990>

2036:
old  <	; syscall>
new  <	; SysCall>

2040:
old  <	; return int4$0#>
new  <	; Return 0>

2048:
old  <	; function end fread>
new  <	; FunctionEnd fread>

2053:
old  <	; rax = int8$0#>
new  <	; AssignRegister rax 0>

2057:
old  <	; Â£temporary993 -> stream = *stream>
new  <	; Dereference Â£temporary993 -> stream stream 0>

2061:
old  <	; Â£temporary994 = int_to_int Â£temporary993 -> stream (Unsigned_Int -> UnsignedLongInt)>
new  <	; IntegralToIntegral Â£temporary994 Â£temporary993 -> stream>

2067:
old  <	; rdi = Â£temporary994>
new  <	; AssignRegister rdi Â£temporary994>

2070:
old  <	; Â£temporary996 = int_to_int ptr (Pointer -> UnsignedLongInt)>
new  <	; IntegralToIntegral Â£temporary996 ptr>

2074:
old  <	; rsi = Â£temporary996>
new  <	; AssignRegister rsi Â£temporary996>

2077:
old  <	; Â£temporary998 = size * nobj>
new  <	; SignedMultiply Â£temporary998 size nobj>

2083:
old  <	; Â£temporary999 = int_to_int Â£temporary998 (SignedInt -> UnsignedLongInt)>
new  <	; IntegralToIntegral Â£temporary999 Â£temporary998>

2088:
old  <	; rdx = Â£temporary999>
new  <	; AssignRegister rdx Â£temporary999>

2092:
old  <	; syscall>
new  <	; SysCall>

2096:
old  <	; return int4$0#>
new  <	; Return 0>

2104:
old  <	; function end fwrite>
new  <	; FunctionEnd fwrite>

2109:
old  <	; rax = int8$8#>
new  <	; AssignRegister rax 8>

2113:
old  <	; Â£temporary1002 -> stream = *stream>
new  <	; Dereference Â£temporary1002 -> stream stream 0>

2117:
old  <	; Â£temporary1003 = int_to_int Â£temporary1002 -> stream (Unsigned_Int -> UnsignedLongInt)>
new  <	; IntegralToIntegral Â£temporary1003 Â£temporary1002 -> stream>

2123:
old  <	; rdi = Â£temporary1003>
new  <	; AssignRegister rdi Â£temporary1003>

2126:
old  <	; Â£temporary1005 = int_to_int offset (SignedInt -> UnsignedLongInt)>
new  <	; IntegralToIntegral Â£temporary1005 offset>

2132:
old  <	; rsi = Â£temporary1005>
new  <	; AssignRegister rsi Â£temporary1005>

2135:
old  <	; Â£temporary1007 = int_to_int origin (SignedInt -> UnsignedLongInt)>
new  <	; IntegralToIntegral Â£temporary1007 origin>

2141:
old  <	; rdx = Â£temporary1007>
new  <	; AssignRegister rdx Â£temporary1007>

2144:
old  <	; syscall>
new  <	; SysCall>

2148:
old  <	; return int4$0#>
new  <	; Return 0>

2156:
old  <	; function end fseek>
new  <	; FunctionEnd fseek>

2161:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2164:
old  <	; parameter stream, offset 56>
new  <	; Parameter pointer stream 56>

2169:
old  <	; parameter int4$0#, offset 64>
new  <	; Parameter signedint 0 64>

2173:
old  <	; parameter int4$1#, offset 68>
new  <	; Parameter signedint 1 68>

2177:
old  <	; call function noellipse-noellipse fseek>
new  <	; Call fseek 32 0>

2184:
old  <	; post call>
new  <	; PostCall 32>

2187:
old  <	; Â£temporary1008 = return_value>
new  <	; GetReturnValue Â£temporary1008>

2190:
old  <	; return Â£temporary1008>
new  <	; Return Â£temporary1008>

2197:
old  <	; function end ftell>
new  <	; FunctionEnd ftell>

2202:
old  <	; empty>
new  <	; Empty>

2205:
old  <	; return>
new  <	; Return>

2212:
old  <	; function end rewind>
new  <	; FunctionEnd rewind>

2217:
old  <	; Â£temporary1011 -> ptr = *ptr>
new  <	; Dereference Â£temporary1011 -> ptr ptr 0>

2221:
old  <	; call header integral no zero 1 stack zero 0>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2225:
old  <	; parameter stream, offset 64>
new  <	; Parameter pointer stream 64>

2230:
old  <	; call function noellipse-noellipse ftell>
new  <	; Call ftell 40 0>

2237:
old  <	; post call>
new  <	; PostCall 40>

2241:
old  <	; Â£temporary1012 = return_value>
new  <	; GetReturnValue Â£temporary1012>

2244:
old  <	; Â£temporary1013 = int_to_int Â£temporary1012 (SignedInt -> SignedInt)>
new  <	; IntegralToIntegral Â£temporary1013 Â£temporary1012>

2247:
old  <	; Â£temporary1011 -> ptr = Â£temporary1013>
new  <	; Assign Â£temporary1011 -> ptr Â£temporary1013>

2251:
old  <	; return int4$0#>
new  <	; Return 0>

2259:
old  <	; function end fgetpos>
new  <	; FunctionEnd fgetpos>

2264:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2267:
old  <	; parameter stream, offset 64>
new  <	; Parameter pointer stream 64>

2272:
old  <	; Â£temporary1014 -> ptr = *ptr>
new  <	; Dereference Â£temporary1014 -> ptr ptr 0>

2276:
old  <	; parameter Â£temporary1014 -> ptr, offset 72>
new  <	; Parameter signedint Â£temporary1014 -> ptr 72>

2281:
old  <	; parameter int4$0#, offset 76>
new  <	; Parameter signedint 0 76>

2285:
old  <	; call function noellipse-noellipse fseek>
new  <	; Call fseek 40 0>

2292:
old  <	; post call>
new  <	; PostCall 40>

2295:
old  <	; Â£temporary1015 = return_value>
new  <	; GetReturnValue Â£temporary1015>

2298:
old  <	; Â£temporary1016 = int_to_int Â£temporary1015 (SignedInt -> SignedInt)>
new  <	; IntegralToIntegral Â£temporary1016 Â£temporary1015>

2301:
old  <	; return Â£temporary1016>
new  <	; Return Â£temporary1016>

2308:
old  <	; function end fsetpos>
new  <	; FunctionEnd fsetpos>

2313:
old  <	; Â£temporary1017 -> stream = *stream>
new  <	; Dereference Â£temporary1017 -> stream stream 0>

2317:
old  <	; errno = int4$0#>
new  <	; Assign errno 0>

2321:
old  <	; Â£temporary1017 -> stream = errno>
new  <	; Assign Â£temporary1017 -> stream errno>

2326:
old  <	; return>
new  <	; Return>

2333:
old  <	; function end clearerr>
new  <	; FunctionEnd clearerr>

2338:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2341:
old  <	; parameter stream, offset 56>
new  <	; Parameter pointer stream 56>

2346:
old  <	; parameter int4$0#, offset 64>
new  <	; Parameter signedint 0 64>

2350:
old  <	; parameter int4$1#, offset 68>
new  <	; Parameter signedint 1 68>

2354:
old  <	; call function noellipse-noellipse fseek>
new  <	; Call fseek 32 0>

2361:
old  <	; post call>
new  <	; PostCall 32>

2364:
old  <	; Â£temporary1018 = return_value>
new  <	; GetReturnValue Â£temporary1018>

2367:
old  <	; Â£temporary1019 = int_to_int Â£temporary1018 (SignedInt -> UnsignedLongInt)>
new  <	; IntegralToIntegral Â£temporary1019 Â£temporary1018>

2372:
old  <	; currPosition = Â£temporary1019>
new  <	; Assign currPosition Â£temporary1019>

2376:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2379:
old  <	; parameter stream, offset 64>
new  <	; Parameter pointer stream 64>

2384:
old  <	; parameter int4$0#, offset 72>
new  <	; Parameter signedint 0 72>

2388:
old  <	; parameter int4$2#, offset 76>
new  <	; Parameter signedint 2 76>

2392:
old  <	; call function noellipse-noellipse fseek>
new  <	; Call fseek 40 0>

2399:
old  <	; post call>
new  <	; PostCall 40>

2402:
old  <	; Â£temporary1020 = return_value>
new  <	; GetReturnValue Â£temporary1020>

2405:
old  <	; Â£temporary1021 = int_to_int Â£temporary1020 (SignedInt -> UnsignedLongInt)>
new  <	; IntegralToIntegral Â£temporary1021 Â£temporary1020>

2410:
old  <	; lastPosition = Â£temporary1021>
new  <	; Assign lastPosition Â£temporary1021>

2414:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2417:
old  <	; parameter stream, offset 72>
new  <	; Parameter pointer stream 72>

2422:
old  <	; Â£temporary1022 = int_to_int currPosition (UnsignedLongInt -> SignedInt)>
new  <	; IntegralToIntegral Â£temporary1022 currPosition>

2426:
old  <	; parameter Â£temporary1022, offset 80>
new  <	; Parameter signedint Â£temporary1022 80>

2430:
old  <	; parameter int4$0#, offset 84>
new  <	; Parameter signedint 0 84>

2434:
old  <	; call function noellipse-noellipse fseek>
new  <	; Call fseek 48 0>

2441:
old  <	; post call>
new  <	; PostCall 48>

2444:
old  <	; if currPosition != lastPosition goto 28>
new  <	; NotEqual 28 currPosition lastPosition>

2450:
old  <	; Â£temporary1025 = int4$1#>
new  <	; Assign Â£temporary1025 1>

2454:
old  <	; goto 29>
new  <	; Goto 29>

2458:
old  <	; Â£temporary1025 = int4$0#>
new  <	; Assign Â£temporary1025 0>

2462:
old  <	; endOfFile = Â£temporary1025>
new  <	; Assign endOfFile Â£temporary1025>

2466:
old  <	; return endOfFile>
new  <	; Return endOfFile>

2474:
old  <	; function end feof>
new  <	; FunctionEnd feof>

2479:
old  <	; Â£temporary1026 -> stream = *stream>
new  <	; Dereference Â£temporary1026 -> stream stream 0>

2483:
old  <	; return Â£temporary1026 -> stream>
new  <	; Return Â£temporary1026 -> stream>

2491:
old  <	; function end ferror>
new  <	; FunctionEnd ferror>

2496:
old  <	; initializer String>
new  <	; Initializer String %s: %s.\n>

2502:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2505:
old  <	; parameter string_25s3A2025s2E0A#, offset 56>
new  <	; Parameter pointer "%s: %s.\n" 56>

2509:
old  <	; parameter s, offset 64>
new  <	; Parameter pointer s 64>

2514:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2517:
old  <	; parameter errno, offset 96>
new  <	; Parameter signedint errno 96>

2522:
old  <	; call function noellipse-noellipse strerror>
new  <	; Call strerror 72 0>

2529:
old  <	; post call>
new  <	; PostCall 72>

2532:
old  <	; Â£temporary1027 = return_value>
new  <	; GetReturnValue Â£temporary1027>

2535:
old  <	; parameter Â£temporary1027, offset 72>
new  <	; Parameter pointer Â£temporary1027 72>

2539:
old  <	; call function noellipse-ellipse printf, extra 16>
new  <	; Call printf 32 16>

2548:
old  <	; post call>
new  <	; PostCall 32>

2551:
old  <	; return>
new  <	; Return>

2558:
old  <	; function end perror>
new  <	; FunctionEnd perror>

14:
old  <	; initializer zero 64>
new  <	; InitializerZero 64>

20:
old  <	; initializer SignedInt>
new  <	; Initializer SignedInt 0>

26:
old  <	; initializer Array>
new  <	; Initializer Array 4>

32:
old  <	; empty>
new  <	; Empty>

35:
old  <	; index = int4$0#>
new  <	; Assign index 0>

39:
old  <	; if index >= g_tempSize goto 17>
new  <	; SignedGreaterThanEqual 17 index g_tempSize>

45:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

48:
old  <	; parameter name, offset 60>
new  <	; Parameter pointer name 60>

53:
old  <	; Â£temporary1032 = int_to_int index (SignedInt -> Array)>
new  <	; IntegralToIntegral Â£temporary1032 index>

59:
old  <	; Â£temporary1033 = Â£temporary1032 * Array_4#>
new  <	; UnsignedMultiply Â£temporary1033 Â£temporary1032 4>

64:
old  <	; Â£temporary1034 = g_tempArray + Â£temporary1033>
new  <	; BinaryAdd Â£temporary1034 g_tempArray Â£temporary1033>

69:
old  <	; Â£temporary1031 -> Â£temporary1034 = *Â£temporary1034>
new  <	; Dereference Â£temporary1031 -> Â£temporary1034 Â£temporary1034 0>

72:
old  <	; parameter Â£temporary1031 -> Â£temporary1034, offset 68>
new  <	; Parameter pointer Â£temporary1031 -> Â£temporary1034 68>

76:
old  <	; call function noellipse-noellipse strcmp>
new  <	; Call strcmp 36 0>

83:
old  <	; post call>
new  <	; PostCall 36>

86:
old  <	; Â£temporary1035 = return_value>
new  <	; GetReturnValue Â£temporary1035>

89:
old  <	; if Â£temporary1035 != int4$0# goto 15>
new  <	; NotEqual 15 Â£temporary1035 0>

94:
old  <	; return int4$1#>
new  <	; Return 1>

102:
old  <	; index = index + int4$1#>
new  <	; BinaryAdd index index 1>

106:
old  <	; goto 2>
new  <	; Goto 2>

110:
old  <	; return int4$0#>
new  <	; Return 0>

118:
old  <	; function end existsTempName>
new  <	; FunctionEnd existsTempName>

123:
old  <	; if size >= int4$5# goto 58>
new  <	; SignedGreaterThanEqual 58 size 5>

128:
old  <	; c = int1$97#>
new  <	; Assign c 97>

132:
old  <	; if c > int1$122# goto 58>
new  <	; SignedGreaterThan 58 c 122>

137:
old  <	; Â£temporary1041 = int_to_int size (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary1041 size>

143:
old  <	; Â£temporary1043 = name + Â£temporary1041>
new  <	; BinaryAdd Â£temporary1043 name Â£temporary1041>

148:
old  <	; Â£temporary1040 -> Â£temporary1043 = *Â£temporary1043>
new  <	; Dereference Â£temporary1040 -> Â£temporary1043 Â£temporary1043 0>

151:
old  <	; Â£temporary1040 -> Â£temporary1043 = c>
new  <	; Assign Â£temporary1040 -> Â£temporary1043 c>

156:
old  <	; Â£temporary1044 = size + int4$1#>
new  <	; BinaryAdd Â£temporary1044 size 1>

161:
old  <	; Â£temporary1046 = int_to_int Â£temporary1044 (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary1046 Â£temporary1044>

166:
old  <	; Â£temporary1048 = name + Â£temporary1046>
new  <	; BinaryAdd Â£temporary1048 name Â£temporary1046>

171:
old  <	; Â£temporary1045 -> Â£temporary1048 = *Â£temporary1048>
new  <	; Dereference Â£temporary1045 -> Â£temporary1048 Â£temporary1048 0>

174:
old  <	; Â£temporary1045 -> Â£temporary1048 = int1$0#>
new  <	; Assign Â£temporary1045 -> Â£temporary1048 0>

178:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 41 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

181:
old  <	; parameter name, offset 65>
new  <	; Parameter pointer name 65>

186:
old  <	; call function noellipse-noellipse fileexists>
new  <	; Call fileexists 41 0>

193:
old  <	; post call>
new  <	; PostCall 41>

196:
old  <	; Â£temporary1049 = return_value>
new  <	; GetReturnValue Â£temporary1049>

199:
old  <	; if Â£temporary1049 != int4$0# goto 45>
new  <	; NotEqual 45 Â£temporary1049 0>

204:
old  <	; case status == int4$0# goto 22>
new  <	; Case 22 status 0>

210:
old  <	; case status == int4$1# goto 23>
new  <	; Case 23 status 1>

215:
old  <	; case end status>
new  <	; CaseEnd status>

218:
old  <	; goto 45>
new  <	; Goto 45>

222:
old  <	; return name>
new  <	; Return name>

230:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 41 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

233:
old  <	; parameter name, offset 65>
new  <	; Parameter pointer name 65>

238:
old  <	; call function noellipse-noellipse existsTempName>
new  <	; Call existsTempName 41 0>

245:
old  <	; post call>
new  <	; PostCall 41>

248:
old  <	; Â£temporary1052 = return_value>
new  <	; GetReturnValue Â£temporary1052>

251:
old  <	; if Â£temporary1052 != int4$0# goto 45>
new  <	; NotEqual 45 Â£temporary1052 0>

256:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 41 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

259:
old  <	; Â£temporary1056 = int_to_int g_tempSize (SignedInt -> Array)>
new  <	; IntegralToIntegral Â£temporary1056 g_tempSize>

265:
old  <	; Â£temporary1057 = Â£temporary1056 * Array_4#>
new  <	; UnsignedMultiply Â£temporary1057 Â£temporary1056 4>

270:
old  <	; Â£temporary1058 = g_tempArray + Â£temporary1057>
new  <	; BinaryAdd Â£temporary1058 g_tempArray Â£temporary1057>

275:
old  <	; Â£temporary1055 -> Â£temporary1058 = *Â£temporary1058>
new  <	; Dereference Â£temporary1055 -> Â£temporary1058 Â£temporary1058 0>

278:
old  <	; parameter Â£temporary1055 -> Â£temporary1058, offset 65>
new  <	; Parameter pointer Â£temporary1055 -> Â£temporary1058 65>

282:
old  <	; parameter name, offset 73>
new  <	; Parameter pointer name 73>

287:
old  <	; call function noellipse-noellipse strcpy>
new  <	; Call strcpy 41 0>

294:
old  <	; post call>
new  <	; PostCall 41>

297:
old  <	; Â£temporary1060 = g_tempSize>
new  <	; Assign Â£temporary1060 g_tempSize>

301:
old  <	; g_tempSize = g_tempSize + int4$1#>
new  <	; BinaryAdd g_tempSize g_tempSize 1>

305:
old  <	; Â£temporary1062 = int_to_int Â£temporary1060 (SignedInt -> Array)>
new  <	; IntegralToIntegral Â£temporary1062 Â£temporary1060>

310:
old  <	; Â£temporary1063 = Â£temporary1062 * Array_4#>
new  <	; UnsignedMultiply Â£temporary1063 Â£temporary1062 4>

315:
old  <	; Â£temporary1064 = g_tempArray + Â£temporary1063>
new  <	; BinaryAdd Â£temporary1064 g_tempArray Â£temporary1063>

320:
old  <	; Â£temporary1061 -> Â£temporary1064 = *Â£temporary1064>
new  <	; Dereference Â£temporary1061 -> Â£temporary1064 Â£temporary1064 0>

323:
old  <	; return Â£temporary1061 -> Â£temporary1064>
new  <	; Return Â£temporary1061 -> Â£temporary1064>

331:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 41 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

334:
old  <	; parameter name, offset 65>
new  <	; Parameter pointer name 65>

339:
old  <	; Â£temporary1065 = size + int4$1#>
new  <	; BinaryAdd Â£temporary1065 size 1>

344:
old  <	; parameter Â£temporary1065, offset 73>
new  <	; Parameter signedint Â£temporary1065 73>

348:
old  <	; parameter status, offset 77>
new  <	; Parameter signedint status 77>

353:
old  <	; call function noellipse-noellipse generateTempName>
new  <	; Call generateTempName 41 0>

360:
old  <	; post call>
new  <	; PostCall 41>

363:
old  <	; Â£temporary1066 = return_value>
new  <	; GetReturnValue Â£temporary1066>

366:
old  <	; result = Â£temporary1066>
new  <	; Assign result Â£temporary1066>

370:
old  <	; if result == int8$0# goto 56>
new  <	; Equal 56 result 0>

375:
old  <	; return result>
new  <	; Return result>

383:
old  <	; c = c + int1$1#>
new  <	; BinaryAdd c c 1>

387:
old  <	; goto 2>
new  <	; Goto 2>

391:
old  <	; return int8$0#>
new  <	; Return 0>

399:
old  <	; function end generateTempName>
new  <	; FunctionEnd generateTempName>

404:
old  <	; initializer String>
new  <	; Initializer String w>

410:
old  <	; empty>
new  <	; Empty>

413:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

416:
old  <	; parameter name, offset 60>
new  <	; Parameter pointer name 60>

421:
old  <	; parameter int4$0#, offset 68>
new  <	; Parameter signedint 0 68>

425:
old  <	; parameter int4$0#, offset 72>
new  <	; Parameter signedint 0 72>

429:
old  <	; call function noellipse-noellipse generateTempName>
new  <	; Call generateTempName 36 0>

436:
old  <	; post call>
new  <	; PostCall 36>

439:
old  <	; Â£temporary1068 = return_value>
new  <	; GetReturnValue Â£temporary1068>

442:
old  <	; if Â£temporary1068 == int4$0# goto 20>
new  <	; Equal 20 Â£temporary1068 0>

447:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

450:
old  <	; parameter name, offset 60>
new  <	; Parameter pointer name 60>

455:
old  <	; parameter string_w#, offset 68>
new  <	; Parameter pointer "w" 68>

459:
old  <	; call function noellipse-noellipse fopen>
new  <	; Call fopen 36 0>

466:
old  <	; post call>
new  <	; PostCall 36>

469:
old  <	; Â£temporary1069 = return_value>
new  <	; GetReturnValue Â£temporary1069>

472:
old  <	; stream = Â£temporary1069>
new  <	; Assign stream Â£temporary1069>

476:
old  <	; if stream == int8$0# goto 20>
new  <	; Equal 20 stream 0>

481:
old  <	; Â£temporary1073 -> stream = *stream>
new  <	; Dereference Â£temporary1073 -> stream stream 0>

485:
old  <	; Â£temporary1073 -> stream = int4$1#>
new  <	; Assign Â£temporary1073 -> stream 1>

489:
old  <	; return stream>
new  <	; Return stream>

497:
old  <	; return int8$0#>
new  <	; Return 0>

505:
old  <	; function end tmpfile>
new  <	; FunctionEnd tmpfile>

510:
old  <	; if g_tempSize >= int4$16# goto 9>
new  <	; SignedGreaterThanEqual 9 g_tempSize 16>

515:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

518:
old  <	; parameter name, offset 56>
new  <	; Parameter pointer name 56>

523:
old  <	; parameter int4$0#, offset 64>
new  <	; Parameter signedint 0 64>

527:
old  <	; parameter int4$1#, offset 68>
new  <	; Parameter signedint 1 68>

531:
old  <	; call function noellipse-noellipse generateTempName>
new  <	; Call generateTempName 32 0>

538:
old  <	; post call>
new  <	; PostCall 32>

541:
old  <	; Â£temporary1075 = return_value>
new  <	; GetReturnValue Â£temporary1075>

544:
old  <	; return Â£temporary1075>
new  <	; Return Â£temporary1075>

551:
old  <	; return int8$0#>
new  <	; Return 0>

559:
old  <	; function end tmpnam>
new  <	; FunctionEnd tmpnam>

36:
old  <	; initializer zero 4>
new  <	; InitializerZero 4>

42:
old  <	; initializer zero 4>
new  <	; InitializerZero 4>

48:
old  <	; initializer zero 8>
new  <	; InitializerZero 8>

54:
old  <	; initializer zero 4>
new  <	; InitializerZero 4>

60:
old  <	; c = int1$0#>
new  <	; Assign c 0>

64:
old  <	; case g_inStatus == int4$0# goto 5>
new  <	; Case 5 g_inStatus 0>

70:
old  <	; case g_inStatus == int4$1# goto 20>
new  <	; Case 20 g_inStatus 1>

75:
old  <	; case end g_inStatus>
new  <	; CaseEnd g_inStatus>

78:
old  <	; goto 28>
new  <	; Goto 28>

82:
old  <	; Â£temporary1076 = int_to_int g_inDevice (Pointer -> Pointer)>
new  <	; IntegralToIntegral Â£temporary1076 g_inDevice>

86:
old  <	; stream = Â£temporary1076>
new  <	; Assign stream Â£temporary1076>

90:
old  <	; Â£temporary1077 -> stream = *stream>
new  <	; Dereference Â£temporary1077 -> stream stream 0>

94:
old  <	; handle = Â£temporary1077 -> stream>
new  <	; Assign handle Â£temporary1077 -> stream>

99:
old  <	; rax = int8$0#>
new  <	; AssignRegister rax 0>

103:
old  <	; Â£temporary1080 -> stream = *stream>
new  <	; Dereference Â£temporary1080 -> stream stream 0>

107:
old  <	; Â£temporary1081 = int_to_int Â£temporary1080 -> stream (Unsigned_Int -> UnsignedLongInt)>
new  <	; IntegralToIntegral Â£temporary1081 Â£temporary1080 -> stream>

113:
old  <	; rdi = Â£temporary1081>
new  <	; AssignRegister rdi Â£temporary1081>

116:
old  <	; Â£temporary1083 = &c>
new  <	; Address Â£temporary1083 c>

121:
old  <	; Â£temporary1084 = int_to_int Â£temporary1083 (Pointer -> UnsignedLongInt)>
new  <	; IntegralToIntegral Â£temporary1084 Â£temporary1083>

124:
old  <	; rsi = Â£temporary1084>
new  <	; AssignRegister rsi Â£temporary1084>

127:
old  <	; rdx = int8$1#>
new  <	; AssignRegister rdx 1>

131:
old  <	; syscall>
new  <	; SysCall>

135:
old  <	; g_inChars = g_inChars + int4$1#>
new  <	; BinaryAdd g_inChars g_inChars 1>

139:
old  <	; return c>
new  <	; Return c>

147:
old  <	; Â£temporary1087 = int_to_int g_inDevice (Pointer -> Pointer)>
new  <	; IntegralToIntegral Â£temporary1087 g_inDevice>

151:
old  <	; inString = Â£temporary1087>
new  <	; Assign inString Â£temporary1087>

155:
old  <	; Â£temporary1088 = g_inChars>
new  <	; Assign Â£temporary1088 g_inChars>

159:
old  <	; g_inChars = g_inChars + int4$1#>
new  <	; BinaryAdd g_inChars g_inChars 1>

163:
old  <	; Â£temporary1090 = int_to_int Â£temporary1088 (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary1090 Â£temporary1088>

168:
old  <	; Â£temporary1092 = inString + Â£temporary1090>
new  <	; BinaryAdd Â£temporary1092 inString Â£temporary1090>

173:
old  <	; Â£temporary1089 -> Â£temporary1092 = *Â£temporary1092>
new  <	; Dereference Â£temporary1089 -> Â£temporary1092 Â£temporary1092 0>

176:
old  <	; return Â£temporary1089 -> Â£temporary1092>
new  <	; Return Â£temporary1089 -> Â£temporary1092>

184:
old  <	; return int1$0#>
new  <	; Return 0>

192:
old  <	; function end scanChar>
new  <	; FunctionEnd scanChar>

197:
old  <	; case g_inStatus == int4$0# goto 4>
new  <	; Case 4 g_inStatus 0>

203:
old  <	; case g_inStatus == int4$1# goto 6>
new  <	; Case 6 g_inStatus 1>

208:
old  <	; case end g_inStatus>
new  <	; CaseEnd g_inStatus>

211:
old  <	; goto 7>
new  <	; Goto 7>

215:
old  <	; g_inChars = g_inChars - int4$1#>
new  <	; BinarySubtract g_inChars g_inChars 1>

219:
old  <	; goto 7>
new  <	; Goto 7>

223:
old  <	; g_inChars = g_inChars - int4$1#>
new  <	; BinarySubtract g_inChars g_inChars 1>

227:
old  <	; return>
new  <	; Return>

234:
old  <	; function end unscanChar>
new  <	; FunctionEnd unscanChar>

239:
old  <	; index = int4$0#>
new  <	; Assign index 0>

243:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

246:
old  <	; call function noellipse-noellipse scanChar>
new  <	; Call scanChar 48 0>

253:
old  <	; post call>
new  <	; PostCall 48>

256:
old  <	; Â£temporary1096 = return_value>
new  <	; GetReturnValue Â£temporary1096>

259:
old  <	; input = Â£temporary1096>
new  <	; Assign input Â£temporary1096>

263:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

266:
old  <	; Â£temporary1097 = int_to_int input (SignedChar -> SignedInt)>
new  <	; IntegralToIntegral Â£temporary1097 input>

275:
old  <	; parameter Â£temporary1097, offset 73>
new  <	; Parameter signedint Â£temporary1097 73>

279:
old  <	; call function noellipse-noellipse isspace>
new  <	; Call isspace 49 0>

286:
old  <	; post call>
new  <	; PostCall 49>

289:
old  <	; Â£temporary1098 = return_value>
new  <	; GetReturnValue Â£temporary1098>

292:
old  <	; if Â£temporary1098 == int4$0# goto 19>
new  <	; Equal 19 Â£temporary1098 0>

297:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

300:
old  <	; call function noellipse-noellipse scanChar>
new  <	; Call scanChar 49 0>

307:
old  <	; post call>
new  <	; PostCall 49>

310:
old  <	; Â£temporary1099 = return_value>
new  <	; GetReturnValue Â£temporary1099>

313:
old  <	; input = Â£temporary1099>
new  <	; Assign input Â£temporary1099>

317:
old  <	; goto 6>
new  <	; Goto 6>

321:
old  <	; if string == int8$0# goto 55>
new  <	; Equal 55 string 0>

326:
old  <	; if not != int4$0# goto 29>
new  <	; NotEqual 29 not 0>

331:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

334:
old  <	; parameter pattern, offset 73>
new  <	; Parameter pointer pattern 73>

339:
old  <	; Â£temporary1104 = int_to_int input (SignedChar -> SignedInt)>
new  <	; IntegralToIntegral Â£temporary1104 input>

348:
old  <	; parameter Â£temporary1104, offset 81>
new  <	; Parameter signedint Â£temporary1104 81>

352:
old  <	; call function noellipse-noellipse strchr>
new  <	; Call strchr 49 0>

359:
old  <	; post call>
new  <	; PostCall 49>

362:
old  <	; Â£temporary1105 = return_value>
new  <	; GetReturnValue Â£temporary1105>

365:
old  <	; if Â£temporary1105 != int4$0# goto 38>
new  <	; NotEqual 38 Â£temporary1105 0>

370:
old  <	; if not == int4$0# goto 50>
new  <	; Equal 50 not 0>

375:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

378:
old  <	; parameter pattern, offset 73>
new  <	; Parameter pointer pattern 73>

383:
old  <	; Â£temporary1108 = int_to_int input (SignedChar -> SignedInt)>
new  <	; IntegralToIntegral Â£temporary1108 input>

392:
old  <	; parameter Â£temporary1108, offset 81>
new  <	; Parameter signedint Â£temporary1108 81>

396:
old  <	; call function noellipse-noellipse strchr>
new  <	; Call strchr 49 0>

403:
old  <	; post call>
new  <	; PostCall 49>

406:
old  <	; Â£temporary1109 = return_value>
new  <	; GetReturnValue Â£temporary1109>

409:
old  <	; if Â£temporary1109 != int4$0# goto 50>
new  <	; NotEqual 50 Â£temporary1109 0>

414:
old  <	; Â£temporary1115 = index>
new  <	; Assign Â£temporary1115 index>

418:
old  <	; index = index + int4$1#>
new  <	; BinaryAdd index index 1>

422:
old  <	; Â£temporary1117 = int_to_int Â£temporary1115 (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary1117 Â£temporary1115>

427:
old  <	; Â£temporary1119 = string + Â£temporary1117>
new  <	; BinaryAdd Â£temporary1119 string Â£temporary1117>

432:
old  <	; Â£temporary1116 -> Â£temporary1119 = *Â£temporary1119>
new  <	; Dereference Â£temporary1116 -> Â£temporary1119 Â£temporary1119 0>

435:
old  <	; Â£temporary1116 -> Â£temporary1119 = input>
new  <	; Assign Â£temporary1116 -> Â£temporary1119 input>

440:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

443:
old  <	; call function noellipse-noellipse scanChar>
new  <	; Call scanChar 49 0>

450:
old  <	; post call>
new  <	; PostCall 49>

453:
old  <	; Â£temporary1120 = return_value>
new  <	; GetReturnValue Â£temporary1120>

456:
old  <	; input = Â£temporary1120>
new  <	; Assign input Â£temporary1120>

460:
old  <	; goto 20>
new  <	; Goto 20>

464:
old  <	; Â£temporary1122 = int_to_int index (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary1122 index>

470:
old  <	; Â£temporary1124 = string + Â£temporary1122>
new  <	; BinaryAdd Â£temporary1124 string Â£temporary1122>

475:
old  <	; Â£temporary1121 -> Â£temporary1124 = *Â£temporary1124>
new  <	; Dereference Â£temporary1121 -> Â£temporary1124 Â£temporary1124 0>

478:
old  <	; Â£temporary1121 -> Â£temporary1124 = int1$0#>
new  <	; Assign Â£temporary1121 -> Â£temporary1124 0>

482:
old  <	; goto 79>
new  <	; Goto 79>

486:
old  <	; if not != int4$0# goto 64>
new  <	; NotEqual 64 not 0>

491:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

494:
old  <	; parameter pattern, offset 73>
new  <	; Parameter pointer pattern 73>

499:
old  <	; Â£temporary1127 = int_to_int input (SignedChar -> SignedInt)>
new  <	; IntegralToIntegral Â£temporary1127 input>

508:
old  <	; parameter Â£temporary1127, offset 81>
new  <	; Parameter signedint Â£temporary1127 81>

512:
old  <	; call function noellipse-noellipse strchr>
new  <	; Call strchr 49 0>

519:
old  <	; post call>
new  <	; PostCall 49>

522:
old  <	; Â£temporary1128 = return_value>
new  <	; GetReturnValue Â£temporary1128>

525:
old  <	; if Â£temporary1128 != int4$0# goto 73>
new  <	; NotEqual 73 Â£temporary1128 0>

530:
old  <	; if not == int4$0# goto 79>
new  <	; Equal 79 not 0>

535:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

538:
old  <	; parameter pattern, offset 73>
new  <	; Parameter pointer pattern 73>

543:
old  <	; Â£temporary1131 = int_to_int input (SignedChar -> SignedInt)>
new  <	; IntegralToIntegral Â£temporary1131 input>

552:
old  <	; parameter Â£temporary1131, offset 81>
new  <	; Parameter signedint Â£temporary1131 81>

556:
old  <	; call function noellipse-noellipse strchr>
new  <	; Call strchr 49 0>

563:
old  <	; post call>
new  <	; PostCall 49>

566:
old  <	; Â£temporary1132 = return_value>
new  <	; GetReturnValue Â£temporary1132>

569:
old  <	; if Â£temporary1132 != int4$0# goto 79>
new  <	; NotEqual 79 Â£temporary1132 0>

574:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

577:
old  <	; call function noellipse-noellipse scanChar>
new  <	; Call scanChar 49 0>

584:
old  <	; post call>
new  <	; PostCall 49>

587:
old  <	; Â£temporary1138 = return_value>
new  <	; GetReturnValue Â£temporary1138>

590:
old  <	; input = Â£temporary1138>
new  <	; Assign input Â£temporary1138>

594:
old  <	; goto 55>
new  <	; Goto 55>

598:
old  <	; return>
new  <	; Return>

605:
old  <	; function end scanPattern>
new  <	; FunctionEnd scanPattern>

610:
old  <	; index = int4$0#>
new  <	; Assign index 0>

614:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

617:
old  <	; call function noellipse-noellipse scanChar>
new  <	; Call scanChar 40 0>

624:
old  <	; post call>
new  <	; PostCall 40>

627:
old  <	; Â£temporary1139 = return_value>
new  <	; GetReturnValue Â£temporary1139>

630:
old  <	; input = Â£temporary1139>
new  <	; Assign input Â£temporary1139>

634:
old  <	; found = int4$0#>
new  <	; Assign found 0>

638:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 45 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

641:
old  <	; Â£temporary1140 = int_to_int input (SignedChar -> SignedInt)>
new  <	; IntegralToIntegral Â£temporary1140 input>

650:
old  <	; parameter Â£temporary1140, offset 69>
new  <	; Parameter signedint Â£temporary1140 69>

654:
old  <	; call function noellipse-noellipse isspace>
new  <	; Call isspace 45 0>

661:
old  <	; post call>
new  <	; PostCall 45>

664:
old  <	; Â£temporary1141 = return_value>
new  <	; GetReturnValue Â£temporary1141>

667:
old  <	; if Â£temporary1141 == int4$0# goto 20>
new  <	; Equal 20 Â£temporary1141 0>

672:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 45 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

675:
old  <	; call function noellipse-noellipse scanChar>
new  <	; Call scanChar 45 0>

682:
old  <	; post call>
new  <	; PostCall 45>

685:
old  <	; Â£temporary1142 = return_value>
new  <	; GetReturnValue Â£temporary1142>

688:
old  <	; input = Â£temporary1142>
new  <	; Assign input Â£temporary1142>

692:
old  <	; goto 7>
new  <	; Goto 7>

696:
old  <	; if string == int8$0# goto 86>
new  <	; Equal 86 string 0>

701:
old  <	; if precision != int4$0# goto 52>
new  <	; NotEqual 52 precision 0>

706:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 45 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

709:
old  <	; Â£temporary1146 = int_to_int input (SignedChar -> SignedInt)>
new  <	; IntegralToIntegral Â£temporary1146 input>

718:
old  <	; parameter Â£temporary1146, offset 69>
new  <	; Parameter signedint Â£temporary1146 69>

722:
old  <	; call function noellipse-noellipse isspace>
new  <	; Call isspace 45 0>

729:
old  <	; post call>
new  <	; PostCall 45>

732:
old  <	; Â£temporary1147 = return_value>
new  <	; GetReturnValue Â£temporary1147>

735:
old  <	; if Â£temporary1147 != int4$0# goto 46>
new  <	; NotEqual 46 Â£temporary1147 0>

740:
old  <	; Â£temporary1150 = int_to_int input (SignedChar -> SignedInt)>
new  <	; IntegralToIntegral Â£temporary1150 input>

749:
old  <	; if Â£temporary1150 == int4$minus1# goto 46>
new  <	; Equal 46 Â£temporary1150 -1>

754:
old  <	; if input == int1$10# goto 46>
new  <	; Equal 46 input 10>

759:
old  <	; Â£temporary1155 = index>
new  <	; Assign Â£temporary1155 index>

763:
old  <	; index = index + int4$1#>
new  <	; BinaryAdd index index 1>

767:
old  <	; Â£temporary1157 = int_to_int Â£temporary1155 (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary1157 Â£temporary1155>

772:
old  <	; Â£temporary1159 = string + Â£temporary1157>
new  <	; BinaryAdd Â£temporary1159 string Â£temporary1157>

777:
old  <	; Â£temporary1156 -> Â£temporary1159 = *Â£temporary1159>
new  <	; Dereference Â£temporary1156 -> Â£temporary1159 Â£temporary1159 0>

780:
old  <	; Â£temporary1156 -> Â£temporary1159 = input>
new  <	; Assign Â£temporary1156 -> Â£temporary1159 input>

785:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 45 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

788:
old  <	; call function noellipse-noellipse scanChar>
new  <	; Call scanChar 45 0>

795:
old  <	; post call>
new  <	; PostCall 45>

798:
old  <	; Â£temporary1160 = return_value>
new  <	; GetReturnValue Â£temporary1160>

801:
old  <	; input = Â£temporary1160>
new  <	; Assign input Â£temporary1160>

805:
old  <	; found = int4$1#>
new  <	; Assign found 1>

809:
old  <	; g_inChars = g_inChars + int4$1#>
new  <	; BinaryAdd g_inChars g_inChars 1>

813:
old  <	; goto 22>
new  <	; Goto 22>

817:
old  <	; Â£temporary1163 = int_to_int index (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary1163 index>

823:
old  <	; Â£temporary1165 = string + Â£temporary1163>
new  <	; BinaryAdd Â£temporary1165 string Â£temporary1163>

828:
old  <	; Â£temporary1162 -> Â£temporary1165 = *Â£temporary1165>
new  <	; Dereference Â£temporary1162 -> Â£temporary1165 Â£temporary1165 0>

831:
old  <	; Â£temporary1162 -> Â£temporary1165 = int1$0#>
new  <	; Assign Â£temporary1162 -> Â£temporary1165 0>

835:
old  <	; g_inChars = g_inChars + int4$1#>
new  <	; BinaryAdd g_inChars g_inChars 1>

839:
old  <	; goto 130>
new  <	; Goto 130>

843:
old  <	; Â£temporary1167 = precision>
new  <	; Assign Â£temporary1167 precision>

847:
old  <	; precision = precision - int4$1#>
new  <	; BinarySubtract precision precision 1>

851:
old  <	; if Â£temporary1167 <= int4$0# goto 79>
new  <	; SignedLessThanEqual 79 Â£temporary1167 0>

856:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 45 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

859:
old  <	; Â£temporary1169 = int_to_int input (SignedChar -> SignedInt)>
new  <	; IntegralToIntegral Â£temporary1169 input>

868:
old  <	; parameter Â£temporary1169, offset 69>
new  <	; Parameter signedint Â£temporary1169 69>

872:
old  <	; call function noellipse-noellipse isspace>
new  <	; Call isspace 45 0>

879:
old  <	; post call>
new  <	; PostCall 45>

882:
old  <	; Â£temporary1170 = return_value>
new  <	; GetReturnValue Â£temporary1170>

885:
old  <	; if Â£temporary1170 != int4$0# goto 79>
new  <	; NotEqual 79 Â£temporary1170 0>

890:
old  <	; Â£temporary1173 = int_to_int input (SignedChar -> SignedInt)>
new  <	; IntegralToIntegral Â£temporary1173 input>

899:
old  <	; if Â£temporary1173 == int4$minus1# goto 79>
new  <	; Equal 79 Â£temporary1173 -1>

904:
old  <	; if input == int1$10# goto 79>
new  <	; Equal 79 input 10>

909:
old  <	; Â£temporary1179 = index>
new  <	; Assign Â£temporary1179 index>

913:
old  <	; index = index + int4$1#>
new  <	; BinaryAdd index index 1>

917:
old  <	; Â£temporary1181 = int_to_int Â£temporary1179 (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary1181 Â£temporary1179>

922:
old  <	; Â£temporary1183 = string + Â£temporary1181>
new  <	; BinaryAdd Â£temporary1183 string Â£temporary1181>

927:
old  <	; Â£temporary1180 -> Â£temporary1183 = *Â£temporary1183>
new  <	; Dereference Â£temporary1180 -> Â£temporary1183 Â£temporary1183 0>

930:
old  <	; Â£temporary1180 -> Â£temporary1183 = input>
new  <	; Assign Â£temporary1180 -> Â£temporary1183 input>

935:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 45 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

938:
old  <	; call function noellipse-noellipse scanChar>
new  <	; Call scanChar 45 0>

945:
old  <	; post call>
new  <	; PostCall 45>

948:
old  <	; Â£temporary1184 = return_value>
new  <	; GetReturnValue Â£temporary1184>

951:
old  <	; input = Â£temporary1184>
new  <	; Assign input Â£temporary1184>

955:
old  <	; found = int4$1#>
new  <	; Assign found 1>

959:
old  <	; g_inChars = g_inChars + int4$1#>
new  <	; BinaryAdd g_inChars g_inChars 1>

963:
old  <	; goto 52>
new  <	; Goto 52>

967:
old  <	; if precision <= int4$0# goto 130>
new  <	; SignedLessThanEqual 130 precision 0>

972:
old  <	; Â£temporary1188 = int_to_int index (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary1188 index>

978:
old  <	; Â£temporary1190 = string + Â£temporary1188>
new  <	; BinaryAdd Â£temporary1190 string Â£temporary1188>

983:
old  <	; Â£temporary1187 -> Â£temporary1190 = *Â£temporary1190>
new  <	; Dereference Â£temporary1187 -> Â£temporary1190 Â£temporary1190 0>

986:
old  <	; Â£temporary1187 -> Â£temporary1190 = int1$0#>
new  <	; Assign Â£temporary1187 -> Â£temporary1190 0>

990:
old  <	; g_inChars = g_inChars + int4$1#>
new  <	; BinaryAdd g_inChars g_inChars 1>

994:
old  <	; goto 130>
new  <	; Goto 130>

998:
old  <	; if precision != int4$0# goto 107>
new  <	; NotEqual 107 precision 0>

1003:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 45 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1006:
old  <	; Â£temporary1193 = int_to_int input (SignedChar -> SignedInt)>
new  <	; IntegralToIntegral Â£temporary1193 input>

1015:
old  <	; parameter Â£temporary1193, offset 69>
new  <	; Parameter signedint Â£temporary1193 69>

1019:
old  <	; call function noellipse-noellipse isspace>
new  <	; Call isspace 45 0>

1026:
old  <	; post call>
new  <	; PostCall 45>

1029:
old  <	; Â£temporary1194 = return_value>
new  <	; GetReturnValue Â£temporary1194>

1032:
old  <	; if Â£temporary1194 != int4$0# goto 105>
new  <	; NotEqual 105 Â£temporary1194 0>

1037:
old  <	; Â£temporary1197 = int_to_int input (SignedChar -> SignedInt)>
new  <	; IntegralToIntegral Â£temporary1197 input>

1046:
old  <	; if Â£temporary1197 == int4$minus1# goto 105>
new  <	; Equal 105 Â£temporary1197 -1>

1051:
old  <	; if input == int1$10# goto 105>
new  <	; Equal 105 input 10>

1056:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 45 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1059:
old  <	; call function noellipse-noellipse scanChar>
new  <	; Call scanChar 45 0>

1066:
old  <	; post call>
new  <	; PostCall 45>

1069:
old  <	; Â£temporary1202 = return_value>
new  <	; GetReturnValue Â£temporary1202>

1072:
old  <	; input = Â£temporary1202>
new  <	; Assign input Â£temporary1202>

1076:
old  <	; found = int4$1#>
new  <	; Assign found 1>

1080:
old  <	; g_inChars = g_inChars + int4$1#>
new  <	; BinaryAdd g_inChars g_inChars 1>

1084:
old  <	; goto 87>
new  <	; Goto 87>

1088:
old  <	; g_inChars = g_inChars + int4$1#>
new  <	; BinaryAdd g_inChars g_inChars 1>

1092:
old  <	; goto 130>
new  <	; Goto 130>

1096:
old  <	; Â£temporary1205 = precision>
new  <	; Assign Â£temporary1205 precision>

1100:
old  <	; precision = precision - int4$1#>
new  <	; BinarySubtract precision precision 1>

1104:
old  <	; if Â£temporary1205 <= int4$0# goto 128>
new  <	; SignedLessThanEqual 128 Â£temporary1205 0>

1109:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 45 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1112:
old  <	; Â£temporary1207 = int_to_int input (SignedChar -> SignedInt)>
new  <	; IntegralToIntegral Â£temporary1207 input>

1121:
old  <	; parameter Â£temporary1207, offset 69>
new  <	; Parameter signedint Â£temporary1207 69>

1125:
old  <	; call function noellipse-noellipse isspace>
new  <	; Call isspace 45 0>

1132:
old  <	; post call>
new  <	; PostCall 45>

1135:
old  <	; Â£temporary1208 = return_value>
new  <	; GetReturnValue Â£temporary1208>

1138:
old  <	; if Â£temporary1208 != int4$0# goto 128>
new  <	; NotEqual 128 Â£temporary1208 0>

1143:
old  <	; Â£temporary1211 = int_to_int input (SignedChar -> SignedInt)>
new  <	; IntegralToIntegral Â£temporary1211 input>

1152:
old  <	; if Â£temporary1211 == int4$minus1# goto 128>
new  <	; Equal 128 Â£temporary1211 -1>

1157:
old  <	; if input == int1$10# goto 128>
new  <	; Equal 128 input 10>

1162:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 45 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1165:
old  <	; call function noellipse-noellipse scanChar>
new  <	; Call scanChar 45 0>

1172:
old  <	; post call>
new  <	; PostCall 45>

1175:
old  <	; Â£temporary1217 = return_value>
new  <	; GetReturnValue Â£temporary1217>

1178:
old  <	; input = Â£temporary1217>
new  <	; Assign input Â£temporary1217>

1182:
old  <	; found = int4$1#>
new  <	; Assign found 1>

1186:
old  <	; g_inChars = g_inChars + int4$1#>
new  <	; BinaryAdd g_inChars g_inChars 1>

1190:
old  <	; goto 107>
new  <	; Goto 107>

1194:
old  <	; if precision <= int4$0# goto 130>
new  <	; SignedLessThanEqual 130 precision 0>

1199:
old  <	; g_inChars = g_inChars + int4$1#>
new  <	; BinaryAdd g_inChars g_inChars 1>

1203:
old  <	; if found == int4$0# goto 132>
new  <	; Equal 132 found 0>

1208:
old  <	; g_inCount = g_inCount + int4$1#>
new  <	; BinaryAdd g_inCount g_inCount 1>

1212:
old  <	; return>
new  <	; Return>

1219:
old  <	; function end scanString>
new  <	; FunctionEnd scanString>

1224:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 25 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1227:
old  <	; Â£temporary1223 = int_to_int input (SignedChar -> SignedInt)>
new  <	; IntegralToIntegral Â£temporary1223 input>

1236:
old  <	; parameter Â£temporary1223, offset 49>
new  <	; Parameter signedint Â£temporary1223 49>

1240:
old  <	; call function noellipse-noellipse isdigit>
new  <	; Call isdigit 25 0>

1247:
old  <	; post call>
new  <	; PostCall 25>

1250:
old  <	; Â£temporary1224 = return_value>
new  <	; GetReturnValue Â£temporary1224>

1253:
old  <	; if Â£temporary1224 == int4$0# goto 10>
new  <	; Equal 10 Â£temporary1224 0>

1258:
old  <	; Â£temporary1225 = input - int1$48#>
new  <	; BinarySubtract Â£temporary1225 input 48>

1263:
old  <	; Â£temporary1226 = int_to_int Â£temporary1225 (SignedChar -> UnsignedLongInt)>
new  <	; IntegralToIntegral Â£temporary1226 Â£temporary1225>

1268:
old  <	; return Â£temporary1226>
new  <	; Return Â£temporary1226>

1275:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 25 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1278:
old  <	; Â£temporary1227 = int_to_int input (SignedChar -> SignedInt)>
new  <	; IntegralToIntegral Â£temporary1227 input>

1287:
old  <	; parameter Â£temporary1227, offset 49>
new  <	; Parameter signedint Â£temporary1227 49>

1291:
old  <	; call function noellipse-noellipse islower>
new  <	; Call islower 25 0>

1298:
old  <	; post call>
new  <	; PostCall 25>

1301:
old  <	; Â£temporary1228 = return_value>
new  <	; GetReturnValue Â£temporary1228>

1304:
old  <	; if Â£temporary1228 == int4$0# goto 21>
new  <	; Equal 21 Â£temporary1228 0>

1309:
old  <	; Â£temporary1229 = input - int1$97#>
new  <	; BinarySubtract Â£temporary1229 input 97>

1314:
old  <	; Â£temporary1230 = int_to_int Â£temporary1229 (SignedChar -> UnsignedLongInt)>
new  <	; IntegralToIntegral Â£temporary1230 Â£temporary1229>

1319:
old  <	; Â£temporary1231 = Â£temporary1230 + int8$10#>
new  <	; BinaryAdd Â£temporary1231 Â£temporary1230 10>

1323:
old  <	; return Â£temporary1231>
new  <	; Return Â£temporary1231>

1330:
old  <	; Â£temporary1232 = input - int1$65#>
new  <	; BinarySubtract Â£temporary1232 input 65>

1335:
old  <	; Â£temporary1233 = int_to_int Â£temporary1232 (SignedChar -> UnsignedLongInt)>
new  <	; IntegralToIntegral Â£temporary1233 Â£temporary1232>

1340:
old  <	; Â£temporary1234 = Â£temporary1233 + int8$10#>
new  <	; BinaryAdd Â£temporary1234 Â£temporary1233 10>

1344:
old  <	; return Â£temporary1234>
new  <	; Return Â£temporary1234>

1351:
old  <	; function end digitToValue>
new  <	; FunctionEnd digitToValue>

1356:
old  <	; initializer Signed_Long_Int>
new  <	; Initializer Signed_Long_Int 10>

1362:
old  <	; longValue = int8$0#>
new  <	; Assign longValue 0>

1366:
old  <	; minus = int4$0#>
new  <	; Assign minus 0>

1370:
old  <	; found = int4$0#>
new  <	; Assign found 0>

1374:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1377:
old  <	; call function noellipse-noellipse scanChar>
new  <	; Call scanChar 40 0>

1384:
old  <	; post call>
new  <	; PostCall 40>

1387:
old  <	; Â£temporary1237 = return_value>
new  <	; GetReturnValue Â£temporary1237>

1390:
old  <	; input = Â£temporary1237>
new  <	; Assign input Â£temporary1237>

1394:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 41 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1397:
old  <	; Â£temporary1238 = int_to_int input (SignedChar -> SignedInt)>
new  <	; IntegralToIntegral Â£temporary1238 input>

1406:
old  <	; parameter Â£temporary1238, offset 65>
new  <	; Parameter signedint Â£temporary1238 65>

1410:
old  <	; call function noellipse-noellipse isspace>
new  <	; Call isspace 41 0>

1417:
old  <	; post call>
new  <	; PostCall 41>

1420:
old  <	; Â£temporary1239 = return_value>
new  <	; GetReturnValue Â£temporary1239>

1423:
old  <	; if Â£temporary1239 == int4$0# goto 21>
new  <	; Equal 21 Â£temporary1239 0>

1428:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 41 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1431:
old  <	; call function noellipse-noellipse scanChar>
new  <	; Call scanChar 41 0>

1438:
old  <	; post call>
new  <	; PostCall 41>

1441:
old  <	; Â£temporary1240 = return_value>
new  <	; GetReturnValue Â£temporary1240>

1444:
old  <	; input = Â£temporary1240>
new  <	; Assign input Â£temporary1240>

1448:
old  <	; goto 8>
new  <	; Goto 8>

1452:
old  <	; if input != int1$43# goto 28>
new  <	; NotEqual 28 input 43>

1457:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 41 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1460:
old  <	; call function noellipse-noellipse scanChar>
new  <	; Call scanChar 41 0>

1467:
old  <	; post call>
new  <	; PostCall 41>

1470:
old  <	; Â£temporary1243 = return_value>
new  <	; GetReturnValue Â£temporary1243>

1473:
old  <	; input = Â£temporary1243>
new  <	; Assign input Â£temporary1243>

1477:
old  <	; goto 35>
new  <	; Goto 35>

1481:
old  <	; if input != int1$45# goto 35>
new  <	; NotEqual 35 input 45>

1486:
old  <	; minus = int4$1#>
new  <	; Assign minus 1>

1490:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 41 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1493:
old  <	; call function noellipse-noellipse scanChar>
new  <	; Call scanChar 41 0>

1500:
old  <	; post call>
new  <	; PostCall 41>

1503:
old  <	; Â£temporary1245 = return_value>
new  <	; GetReturnValue Â£temporary1245>

1506:
old  <	; input = Â£temporary1245>
new  <	; Assign input Â£temporary1245>

1510:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 41 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1513:
old  <	; Â£temporary1246 = int_to_int input (SignedChar -> SignedInt)>
new  <	; IntegralToIntegral Â£temporary1246 input>

1522:
old  <	; parameter Â£temporary1246, offset 65>
new  <	; Parameter signedint Â£temporary1246 65>

1526:
old  <	; call function noellipse-noellipse isdigit>
new  <	; Call isdigit 41 0>

1533:
old  <	; post call>
new  <	; PostCall 41>

1536:
old  <	; Â£temporary1247 = return_value>
new  <	; GetReturnValue Â£temporary1247>

1539:
old  <	; if Â£temporary1247 == int4$0# goto 53>
new  <	; Equal 53 Â£temporary1247 0>

1544:
old  <	; Â£temporary1248 = longValue * int8$10#>
new  <	; SignedMultiply Â£temporary1248 longValue 10>

1550:
old  <	; Â£temporary1249 = input - int1$48#>
new  <	; BinarySubtract Â£temporary1249 input 48>

1555:
old  <	; Â£temporary1250 = int_to_int Â£temporary1249 (SignedChar -> Signed_Long_Int)>
new  <	; IntegralToIntegral Â£temporary1250 Â£temporary1249>

1564:
old  <	; longValue = Â£temporary1248 + Â£temporary1250>
new  <	; BinaryAdd longValue Â£temporary1248 Â£temporary1250>

1569:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 41 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1572:
old  <	; call function noellipse-noellipse scanChar>
new  <	; Call scanChar 41 0>

1579:
old  <	; post call>
new  <	; PostCall 41>

1582:
old  <	; Â£temporary1252 = return_value>
new  <	; GetReturnValue Â£temporary1252>

1585:
old  <	; input = Â£temporary1252>
new  <	; Assign input Â£temporary1252>

1589:
old  <	; found = int4$1#>
new  <	; Assign found 1>

1593:
old  <	; goto 35>
new  <	; Goto 35>

1597:
old  <	; if minus == int4$0# goto 56>
new  <	; Equal 56 minus 0>

1602:
old  <	; Â£temporary1254 = -longValue>
new  <	; UnarySubtract Â£temporary1254 longValue>

1607:
old  <	; longValue = Â£temporary1254>
new  <	; Assign longValue Â£temporary1254>

1611:
old  <	; if found == int4$0# goto 58>
new  <	; Equal 58 found 0>

1616:
old  <	; g_inCount = g_inCount + int4$1#>
new  <	; BinaryAdd g_inCount g_inCount 1>

1620:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 41 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1623:
old  <	; parameter input, offset 65>
new  <	; Parameter signedchar input 65>

1628:
old  <	; call function noellipse-noellipse unscanChar>
new  <	; Call unscanChar 41 0>

1635:
old  <	; post call>
new  <	; PostCall 41>

1638:
old  <	; return longValue>
new  <	; Return longValue>

1646:
old  <	; function end scanLongInt>
new  <	; FunctionEnd scanLongInt>

1651:
old  <	; unsignedLongValue = int8$0#>
new  <	; Assign unsignedLongValue 0>

1655:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1658:
old  <	; call function noellipse-noellipse scanChar>
new  <	; Call scanChar 48 0>

1665:
old  <	; post call>
new  <	; PostCall 48>

1668:
old  <	; Â£temporary1259 = return_value>
new  <	; GetReturnValue Â£temporary1259>

1671:
old  <	; input = Â£temporary1259>
new  <	; Assign input Â£temporary1259>

1675:
old  <	; found = int4$1#>
new  <	; Assign found 1>

1679:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 53 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1682:
old  <	; Â£temporary1260 = int_to_int input (SignedChar -> SignedInt)>
new  <	; IntegralToIntegral Â£temporary1260 input>

1691:
old  <	; parameter Â£temporary1260, offset 77>
new  <	; Parameter signedint Â£temporary1260 77>

1695:
old  <	; call function noellipse-noellipse isspace>
new  <	; Call isspace 53 0>

1702:
old  <	; post call>
new  <	; PostCall 53>

1705:
old  <	; Â£temporary1261 = return_value>
new  <	; GetReturnValue Â£temporary1261>

1708:
old  <	; if Â£temporary1261 == int4$0# goto 20>
new  <	; Equal 20 Â£temporary1261 0>

1713:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 53 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1716:
old  <	; call function noellipse-noellipse scanChar>
new  <	; Call scanChar 53 0>

1723:
old  <	; post call>
new  <	; PostCall 53>

1726:
old  <	; Â£temporary1262 = return_value>
new  <	; GetReturnValue Â£temporary1262>

1729:
old  <	; input = Â£temporary1262>
new  <	; Assign input Â£temporary1262>

1733:
old  <	; goto 7>
new  <	; Goto 7>

1737:
old  <	; if input != int1$48# goto 49>
new  <	; NotEqual 49 input 48>

1742:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 53 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1745:
old  <	; call function noellipse-noellipse scanChar>
new  <	; Call scanChar 53 0>

1752:
old  <	; post call>
new  <	; PostCall 53>

1755:
old  <	; Â£temporary1265 = return_value>
new  <	; GetReturnValue Â£temporary1265>

1758:
old  <	; input = Â£temporary1265>
new  <	; Assign input Â£temporary1265>

1762:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 53 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1765:
old  <	; Â£temporary1266 = int_to_int input (SignedChar -> SignedInt)>
new  <	; IntegralToIntegral Â£temporary1266 input>

1774:
old  <	; parameter Â£temporary1266, offset 77>
new  <	; Parameter signedint Â£temporary1266 77>

1778:
old  <	; call function noellipse-noellipse tolower>
new  <	; Call tolower 53 0>

1785:
old  <	; post call>
new  <	; PostCall 53>

1788:
old  <	; Â£temporary1267 = return_value>
new  <	; GetReturnValue Â£temporary1267>

1791:
old  <	; if Â£temporary1267 != int4$120# goto 44>
new  <	; NotEqual 44 Â£temporary1267 120>

1796:
old  <	; if base != int8$0# goto 36>
new  <	; NotEqual 36 base 0>

1801:
old  <	; Â£temporary1270 = int8$16#>
new  <	; Assign Â£temporary1270 16>

1805:
old  <	; goto 37>
new  <	; Goto 37>

1809:
old  <	; Â£temporary1270 = base>
new  <	; Assign Â£temporary1270 base>

1813:
old  <	; base = Â£temporary1270>
new  <	; Assign base Â£temporary1270>

1817:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 53 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1820:
old  <	; call function noellipse-noellipse scanChar>
new  <	; Call scanChar 53 0>

1827:
old  <	; post call>
new  <	; PostCall 53>

1830:
old  <	; Â£temporary1271 = return_value>
new  <	; GetReturnValue Â£temporary1271>

1833:
old  <	; input = Â£temporary1271>
new  <	; Assign input Â£temporary1271>

1837:
old  <	; goto 49>
new  <	; Goto 49>

1841:
old  <	; if base != int8$0# goto 47>
new  <	; NotEqual 47 base 0>

1846:
old  <	; Â£temporary1273 = int8$8#>
new  <	; Assign Â£temporary1273 8>

1850:
old  <	; goto 48>
new  <	; Goto 48>

1854:
old  <	; Â£temporary1273 = base>
new  <	; Assign Â£temporary1273 base>

1858:
old  <	; base = Â£temporary1273>
new  <	; Assign base Â£temporary1273>

1862:
old  <	; if base != int8$0# goto 51>
new  <	; NotEqual 51 base 0>

1867:
old  <	; base = int8$10#>
new  <	; Assign base 10>

1871:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 53 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1874:
old  <	; Â£temporary1275 = int_to_int input (SignedChar -> SignedInt)>
new  <	; IntegralToIntegral Â£temporary1275 input>

1883:
old  <	; parameter Â£temporary1275, offset 77>
new  <	; Parameter signedint Â£temporary1275 77>

1887:
old  <	; call function noellipse-noellipse isxdigit>
new  <	; Call isxdigit 53 0>

1894:
old  <	; post call>
new  <	; PostCall 53>

1897:
old  <	; Â£temporary1276 = return_value>
new  <	; GetReturnValue Â£temporary1276>

1900:
old  <	; if Â£temporary1276 == int4$0# goto 74>
new  <	; Equal 74 Â£temporary1276 0>

1905:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 53 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1908:
old  <	; parameter input, offset 77>
new  <	; Parameter signedchar input 77>

1913:
old  <	; call function noellipse-noellipse digitToValue>
new  <	; Call digitToValue 53 0>

1920:
old  <	; post call>
new  <	; PostCall 53>

1923:
old  <	; Â£temporary1277 = return_value>
new  <	; GetReturnValue Â£temporary1277>

1926:
old  <	; digit = Â£temporary1277>
new  <	; Assign digit Â£temporary1277>

1930:
old  <	; if digit >= base goto 74>
new  <	; UnsignedGreaterThanEqual 74 digit base>

1936:
old  <	; Â£temporary1279 = unsignedLongValue * base>
new  <	; UnsignedMultiply Â£temporary1279 unsignedLongValue base>

1942:
old  <	; unsignedLongValue = Â£temporary1279 + digit>
new  <	; BinaryAdd unsignedLongValue Â£temporary1279 digit>

1947:
old  <	; found = int4$1#>
new  <	; Assign found 1>

1951:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 53 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1954:
old  <	; call function noellipse-noellipse scanChar>
new  <	; Call scanChar 53 0>

1961:
old  <	; post call>
new  <	; PostCall 53>

1964:
old  <	; Â£temporary1281 = return_value>
new  <	; GetReturnValue Â£temporary1281>

1967:
old  <	; input = Â£temporary1281>
new  <	; Assign input Â£temporary1281>

1971:
old  <	; goto 51>
new  <	; Goto 51>

1975:
old  <	; if found == int4$0# goto 76>
new  <	; Equal 76 found 0>

1980:
old  <	; g_inCount = g_inCount + int4$1#>
new  <	; BinaryAdd g_inCount g_inCount 1>

1984:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 53 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1987:
old  <	; parameter input, offset 77>
new  <	; Parameter signedchar input 77>

1992:
old  <	; call function noellipse-noellipse unscanChar>
new  <	; Call unscanChar 53 0>

1999:
old  <	; post call>
new  <	; PostCall 53>

2002:
old  <	; return unsignedLongValue>
new  <	; Return unsignedLongValue>

2010:
old  <	; function end scanUnsignedLongInt>
new  <	; FunctionEnd scanUnsignedLongInt>

2015:
old  <	; initializer LongDouble>
new  <	; Initializer LongDouble 10.0>

2021:
old  <	; initializer zero 4>
new  <	; InitializerZero 4>

2027:
old  <	; initializer zero 8>
new  <	; InitializerZero 8>

2033:
old  <	; minus = int4$0#>
new  <	; Assign minus 0>

2037:
old  <	; found = int4$0#>
new  <	; Assign found 0>

2041:
old  <	; push float float8$0.0#>
new  <	; PushFloat 0.0>

2045:
old  <	; pop float value>
new  <	; PopFloat value>

2049:
old  <	; push float float8$1.0#>
new  <	; PushFloat 1.0>

2053:
old  <	; pop float factor>
new  <	; PopFloat factor>

2057:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2060:
old  <	; call function noellipse-noellipse scanChar>
new  <	; Call scanChar 48 0>

2067:
old  <	; post call>
new  <	; PostCall 48>

2070:
old  <	; Â£temporary1286 = return_value>
new  <	; GetReturnValue Â£temporary1286>

2073:
old  <	; input = Â£temporary1286>
new  <	; Assign input Â£temporary1286>

2077:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2080:
old  <	; Â£temporary1287 = int_to_int input (SignedChar -> SignedInt)>
new  <	; IntegralToIntegral Â£temporary1287 input>

2089:
old  <	; parameter Â£temporary1287, offset 73>
new  <	; Parameter signedint Â£temporary1287 73>

2093:
old  <	; call function noellipse-noellipse isspace>
new  <	; Call isspace 49 0>

2100:
old  <	; post call>
new  <	; PostCall 49>

2103:
old  <	; Â£temporary1288 = return_value>
new  <	; GetReturnValue Â£temporary1288>

2106:
old  <	; if Â£temporary1288 == int4$0# goto 24>
new  <	; Equal 24 Â£temporary1288 0>

2111:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2114:
old  <	; call function noellipse-noellipse scanChar>
new  <	; Call scanChar 49 0>

2121:
old  <	; post call>
new  <	; PostCall 49>

2124:
old  <	; Â£temporary1289 = return_value>
new  <	; GetReturnValue Â£temporary1289>

2127:
old  <	; input = Â£temporary1289>
new  <	; Assign input Â£temporary1289>

2131:
old  <	; goto 11>
new  <	; Goto 11>

2135:
old  <	; if input != int1$43# goto 31>
new  <	; NotEqual 31 input 43>

2140:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2143:
old  <	; call function noellipse-noellipse scanChar>
new  <	; Call scanChar 49 0>

2150:
old  <	; post call>
new  <	; PostCall 49>

2153:
old  <	; Â£temporary1292 = return_value>
new  <	; GetReturnValue Â£temporary1292>

2156:
old  <	; input = Â£temporary1292>
new  <	; Assign input Â£temporary1292>

2160:
old  <	; goto 38>
new  <	; Goto 38>

2164:
old  <	; if input != int1$45# goto 38>
new  <	; NotEqual 38 input 45>

2169:
old  <	; minus = int4$1#>
new  <	; Assign minus 1>

2173:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2176:
old  <	; call function noellipse-noellipse scanChar>
new  <	; Call scanChar 49 0>

2183:
old  <	; post call>
new  <	; PostCall 49>

2186:
old  <	; Â£temporary1294 = return_value>
new  <	; GetReturnValue Â£temporary1294>

2189:
old  <	; input = Â£temporary1294>
new  <	; Assign input Â£temporary1294>

2193:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2196:
old  <	; Â£temporary1295 = int_to_int input (SignedChar -> SignedInt)>
new  <	; IntegralToIntegral Â£temporary1295 input>

2205:
old  <	; parameter Â£temporary1295, offset 73>
new  <	; Parameter signedint Â£temporary1295 73>

2209:
old  <	; call function noellipse-noellipse isdigit>
new  <	; Call isdigit 49 0>

2216:
old  <	; post call>
new  <	; PostCall 49>

2219:
old  <	; Â£temporary1296 = return_value>
new  <	; GetReturnValue Â£temporary1296>

2222:
old  <	; if Â£temporary1296 == int4$0# goto 60>
new  <	; Equal 60 Â£temporary1296 0>

2227:
old  <	; push float float8$10.0#>
new  <	; PushFloat 10.0>

2231:
old  <	; push float value>
new  <	; PushFloat value>

2235:
old  <	; Â£temporary1297 = float8$10.0# * value>
new  <	; SignedMultiply Â£temporary1297 10.0 value>

2239:
old  <	; Â£temporary1298 = input - int1$48#>
new  <	; BinarySubtract Â£temporary1298 input 48>

2244:
old  <	; Â£temporary1300 = int_to_int Â£temporary1298 (SignedChar -> SignedInt)>
new  <	; IntegralToIntegral Â£temporary1300 Â£temporary1298>

2252:
old  <	; Â£temporary1299 = int_to_float Â£temporary1300 (SignedInt -> LongDouble)>
new  <	; IntegralToFloating Â£temporary1299 Â£temporary1300>

2257:
old  <	; Â£temporary1301 = Â£temporary1297 + Â£temporary1299>
new  <	; BinaryAdd Â£temporary1301 Â£temporary1297 Â£temporary1299>

2261:
old  <	; pop float value>
new  <	; PopFloat value>

2265:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2268:
old  <	; call function noellipse-noellipse scanChar>
new  <	; Call scanChar 49 0>

2275:
old  <	; post call>
new  <	; PostCall 49>

2278:
old  <	; Â£temporary1302 = return_value>
new  <	; GetReturnValue Â£temporary1302>

2281:
old  <	; input = Â£temporary1302>
new  <	; Assign input Â£temporary1302>

2285:
old  <	; found = int4$1#>
new  <	; Assign found 1>

2289:
old  <	; goto 38>
new  <	; Goto 38>

2293:
old  <	; if input != int1$46# goto 92>
new  <	; NotEqual 92 input 46>

2298:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2301:
old  <	; call function noellipse-noellipse scanChar>
new  <	; Call scanChar 49 0>

2308:
old  <	; post call>
new  <	; PostCall 49>

2311:
old  <	; Â£temporary1305 = return_value>
new  <	; GetReturnValue Â£temporary1305>

2314:
old  <	; input = Â£temporary1305>
new  <	; Assign input Â£temporary1305>

2318:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2321:
old  <	; Â£temporary1306 = int_to_int input (SignedChar -> SignedInt)>
new  <	; IntegralToIntegral Â£temporary1306 input>

2330:
old  <	; parameter Â£temporary1306, offset 73>
new  <	; Parameter signedint Â£temporary1306 73>

2334:
old  <	; call function noellipse-noellipse isdigit>
new  <	; Call isdigit 49 0>

2341:
old  <	; post call>
new  <	; PostCall 49>

2344:
old  <	; Â£temporary1307 = return_value>
new  <	; GetReturnValue Â£temporary1307>

2347:
old  <	; if Â£temporary1307 == int4$0# goto 92>
new  <	; Equal 92 Â£temporary1307 0>

2352:
old  <	; push float factor>
new  <	; PushFloat factor>

2356:
old  <	; push float float8$10.0#>
new  <	; PushFloat 10.0>

2360:
old  <	; Â£temporary1308 = factor / float8$10.0#>
new  <	; SignedDivide Â£temporary1308 factor 10.0>

2364:
old  <	; pop float factor>
new  <	; PopFloat factor>

2368:
old  <	; push float value>
new  <	; PushFloat value>

2372:
old  <	; push float factor>
new  <	; PushFloat factor>

2376:
old  <	; Â£temporary1309 = input - int1$48#>
new  <	; BinarySubtract Â£temporary1309 input 48>

2381:
old  <	; Â£temporary1311 = int_to_int Â£temporary1309 (SignedChar -> SignedInt)>
new  <	; IntegralToIntegral Â£temporary1311 Â£temporary1309>

2389:
old  <	; Â£temporary1310 = int_to_float Â£temporary1311 (SignedInt -> LongDouble)>
new  <	; IntegralToFloating Â£temporary1310 Â£temporary1311>

2394:
old  <	; Â£temporary1312 = factor * Â£temporary1310>
new  <	; SignedMultiply Â£temporary1312 factor Â£temporary1310>

2398:
old  <	; Â£temporary1313 = value + Â£temporary1312>
new  <	; BinaryAdd Â£temporary1313 value Â£temporary1312>

2402:
old  <	; pop float value>
new  <	; PopFloat value>

2406:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2409:
old  <	; call function noellipse-noellipse scanChar>
new  <	; Call scanChar 49 0>

2416:
old  <	; post call>
new  <	; PostCall 49>

2419:
old  <	; Â£temporary1314 = return_value>
new  <	; GetReturnValue Â£temporary1314>

2422:
old  <	; input = Â£temporary1314>
new  <	; Assign input Â£temporary1314>

2426:
old  <	; found = int4$1#>
new  <	; Assign found 1>

2430:
old  <	; goto 66>
new  <	; Goto 66>

2434:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2437:
old  <	; parameter input, offset 73>
new  <	; Parameter signedchar input 73>

2442:
old  <	; call function noellipse-noellipse unscanChar>
new  <	; Call unscanChar 49 0>

2449:
old  <	; post call>
new  <	; PostCall 49>

2452:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2455:
old  <	; Â£temporary1317 = int_to_int input (SignedChar -> SignedInt)>
new  <	; IntegralToIntegral Â£temporary1317 input>

2464:
old  <	; parameter Â£temporary1317, offset 73>
new  <	; Parameter signedint Â£temporary1317 73>

2468:
old  <	; call function noellipse-noellipse tolower>
new  <	; Call tolower 49 0>

2475:
old  <	; post call>
new  <	; PostCall 49>

2478:
old  <	; Â£temporary1318 = return_value>
new  <	; GetReturnValue Â£temporary1318>

2481:
old  <	; if Â£temporary1318 != int4$101# goto 121>
new  <	; NotEqual 121 Â£temporary1318 101>

2486:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2489:
old  <	; call function noellipse-noellipse scanLongInt>
new  <	; Call scanLongInt 49 0>

2496:
old  <	; post call>
new  <	; PostCall 49>

2499:
old  <	; Â£temporary1320 = return_value>
new  <	; GetReturnValue Â£temporary1320>

2502:
old  <	; Â£temporary1321 = int_to_float Â£temporary1320 (Signed_Long_Int -> Double)>
new  <	; IntegralToFloating Â£temporary1321 Â£temporary1320>

2507:
old  <	; pop float exponent>
new  <	; PopFloat exponent>

2511:
old  <	; push float value>
new  <	; PushFloat value>

2515:
old  <	; call header integral zero 0 stack no zero 1>
new  <	; PreCall 57 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 1>

2519:
old  <	; push float float8$10.0#>
new  <	; PushFloat 10.0>

2523:
old  <	; parameter float8$10.0#, offset 81>
new  <	; Parameter double 10.0 81>

2527:
old  <	; push float exponent>
new  <	; PushFloat exponent>

2531:
old  <	; parameter exponent, offset 89>
new  <	; Parameter double exponent 89>

2535:
old  <	; call function noellipse-noellipse pow>
new  <	; Call pow 57 0>

2542:
old  <	; post call>
new  <	; PostCall 57>

2548:
old  <	; Â£temporary1322 = return_value>
new  <	; GetReturnValue Â£temporary1322>

2551:
old  <	; Â£temporary1323 = value * Â£temporary1322>
new  <	; SignedMultiply Â£temporary1323 value Â£temporary1322>

2555:
old  <	; pop float value>
new  <	; PopFloat value>

2559:
old  <	; goto 125>
new  <	; Goto 125>

2563:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2566:
old  <	; parameter input, offset 73>
new  <	; Parameter signedchar input 73>

2571:
old  <	; call function noellipse-noellipse unscanChar>
new  <	; Call unscanChar 49 0>

2578:
old  <	; post call>
new  <	; PostCall 49>

2581:
old  <	; if minus == int4$0# goto 129>
new  <	; Equal 129 minus 0>

2586:
old  <	; push float value>
new  <	; PushFloat value>

2590:
old  <	; Â£temporary1325 = -value>
new  <	; UnarySubtract Â£temporary1325 value>

2594:
old  <	; pop float value>
new  <	; PopFloat value>

2598:
old  <	; if found == int4$0# goto 131>
new  <	; Equal 131 found 0>

2603:
old  <	; g_inCount = g_inCount + int4$1#>
new  <	; BinaryAdd g_inCount g_inCount 1>

2607:
old  <	; push float value>
new  <	; PushFloat value>

2611:
old  <	; return value>
new  <	; Return value>

2618:
old  <	; function end scanLongDouble>
new  <	; FunctionEnd scanLongDouble>

2623:
old  <	; initializer String>
new  <	; Initializer String scanFormat c = '%c'\n>

2629:
old  <	; empty>
new  <	; Empty>

2632:
old  <	; percent = int4$0#>
new  <	; Assign percent 0>

2636:
old  <	; shortInt = int4$0#>
new  <	; Assign shortInt 0>

2640:
old  <	; longIntOrDouble = int4$0#>
new  <	; Assign longIntOrDouble 0>

2644:
old  <	; longDouble = int4$0#>
new  <	; Assign longDouble 0>

2648:
old  <	; star = int4$0#>
new  <	; Assign star 0>

2652:
old  <	; g_inCount = int4$0#>
new  <	; Assign g_inCount 0>

2656:
old  <	; g_inChars = int4$0#>
new  <	; Assign g_inChars 0>

2660:
old  <	; index = int4$0#>
new  <	; Assign index 0>

2664:
old  <	; Â£temporary1332 = int_to_int index (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary1332 index>

2670:
old  <	; Â£temporary1334 = format + Â£temporary1332>
new  <	; BinaryAdd Â£temporary1334 format Â£temporary1332>

2675:
old  <	; Â£temporary1331 -> Â£temporary1334 = *Â£temporary1334>
new  <	; Dereference Â£temporary1331 -> Â£temporary1334 Â£temporary1334 0>

2678:
old  <	; if Â£temporary1331 -> Â£temporary1334 == int1$0# goto 333>
new  <	; Equal 333 Â£temporary1331 -> Â£temporary1334 0>

2683:
old  <	; Â£temporary1338 = int_to_int index (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary1338 index>

2689:
old  <	; Â£temporary1340 = format + Â£temporary1338>
new  <	; BinaryAdd Â£temporary1340 format Â£temporary1338>

2694:
old  <	; Â£temporary1337 -> Â£temporary1340 = *Â£temporary1340>
new  <	; Dereference Â£temporary1337 -> Â£temporary1340 Â£temporary1340 0>

2697:
old  <	; c = Â£temporary1337 -> Â£temporary1340>
new  <	; Assign c Â£temporary1337 -> Â£temporary1340>

2702:
old  <	; Â£temporary1341 = int_to_int c (SignedChar -> SignedInt)>
new  <	; IntegralToIntegral Â£temporary1341 c>

2711:
old  <	; d = Â£temporary1341 + int4$1#>
new  <	; BinaryAdd d Â£temporary1341 1>

2716:
old  <	; if percent == int4$0# goto 325>
new  <	; Equal 325 percent 0>

2721:
old  <	; Â£temporary1343 = d - int4$1#>
new  <	; BinarySubtract Â£temporary1343 d 1>

2726:
old  <	; case Â£temporary1343 == int4$104# goto 39>
new  <	; Case 39 Â£temporary1343 104>

2731:
old  <	; case Â£temporary1343 == int4$108# goto 41>
new  <	; Case 41 Â£temporary1343 108>

2736:
old  <	; case Â£temporary1343 == int4$76# goto 43>
new  <	; Case 43 Â£temporary1343 76>

2741:
old  <	; case Â£temporary1343 == int4$42# goto 45>
new  <	; Case 45 Â£temporary1343 42>

2746:
old  <	; case Â£temporary1343 == int4$99# goto 47>
new  <	; Case 47 Â£temporary1343 99>

2751:
old  <	; case Â£temporary1343 == int4$115# goto 65>
new  <	; Case 65 Â£temporary1343 115>

2756:
old  <	; case Â£temporary1343 == int4$100# goto 84>
new  <	; Case 84 Â£temporary1343 100>

2761:
old  <	; case Â£temporary1343 == int4$105# goto 84>
new  <	; Case 84 Â£temporary1343 105>

2766:
old  <	; case Â£temporary1343 == int4$111# goto 119>
new  <	; Case 119 Â£temporary1343 111>

2771:
old  <	; case Â£temporary1343 == int4$120# goto 155>
new  <	; Case 155 Â£temporary1343 120>

2776:
old  <	; case Â£temporary1343 == int4$117# goto 191>
new  <	; Case 191 Â£temporary1343 117>

2781:
old  <	; case Â£temporary1343 == int4$103# goto 227>
new  <	; Case 227 Â£temporary1343 103>

2786:
old  <	; case Â£temporary1343 == int4$102# goto 227>
new  <	; Case 227 Â£temporary1343 102>

2791:
old  <	; case Â£temporary1343 == int4$101# goto 227>
new  <	; Case 227 Â£temporary1343 101>

2796:
old  <	; case Â£temporary1343 == int4$91# goto 263>
new  <	; Case 263 Â£temporary1343 91>

2801:
old  <	; case Â£temporary1343 == int4$110# goto 309>
new  <	; Case 309 Â£temporary1343 110>

2806:
old  <	; case end Â£temporary1343>
new  <	; CaseEnd Â£temporary1343>

2809:
old  <	; goto 318>
new  <	; Goto 318>

2813:
old  <	; shortInt = int4$1#>
new  <	; Assign shortInt 1>

2817:
old  <	; goto 331>
new  <	; Goto 331>

2821:
old  <	; longIntOrDouble = int4$1#>
new  <	; Assign longIntOrDouble 1>

2825:
old  <	; goto 331>
new  <	; Goto 331>

2829:
old  <	; longDouble = int4$1#>
new  <	; Assign longDouble 1>

2833:
old  <	; goto 331>
new  <	; Goto 331>

2837:
old  <	; star = int4$1#>
new  <	; Assign star 1>

2841:
old  <	; goto 331>
new  <	; Goto 331>

2845:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 157 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2848:
old  <	; call function noellipse-noellipse scanChar>
new  <	; Call scanChar 157 0>

2855:
old  <	; post call>
new  <	; PostCall 157>

2858:
old  <	; Â£temporary1344 = return_value>
new  <	; GetReturnValue Â£temporary1344>

2861:
old  <	; charValue = Â£temporary1344>
new  <	; Assign charValue Â£temporary1344>

2865:
old  <	; if star != int4$0# goto 60>
new  <	; NotEqual 60 star 0>

2870:
old  <	; arg_list = arg_list + int8$8#>
new  <	; BinaryAdd arg_list arg_list 8>

2874:
old  <	; Â£temporary1349 = arg_list - int8$8#>
new  <	; BinarySubtract Â£temporary1349 arg_list 8>

2879:
old  <	; Â£temporary1351 = int_to_int Â£temporary1349 (Pointer -> Pointer)>
new  <	; IntegralToIntegral Â£temporary1351 Â£temporary1349>

2882:
old  <	; Â£temporary1352 -> Â£temporary1351 = *Â£temporary1351>
new  <	; Dereference Â£temporary1352 -> Â£temporary1351 Â£temporary1351 0>

2885:
old  <	; charPtr = Â£temporary1352 -> Â£temporary1351>
new  <	; Assign charPtr Â£temporary1352 -> Â£temporary1351>

2890:
old  <	; Â£temporary1353 -> charPtr = *charPtr>
new  <	; Dereference Â£temporary1353 -> charPtr charPtr 0>

2894:
old  <	; Â£temporary1353 -> charPtr = charValue>
new  <	; Assign Â£temporary1353 -> charPtr charValue>

2899:
old  <	; percent = int4$0#>
new  <	; Assign percent 0>

2903:
old  <	; Â£temporary1354 = int_to_int charValue (SignedChar -> SignedInt)>
new  <	; IntegralToIntegral Â£temporary1354 charValue>

2912:
old  <	; if Â£temporary1354 == int4$minus1# goto 331>
new  <	; Equal 331 Â£temporary1354 -1>

2917:
old  <	; g_inCount = g_inCount + int4$1#>
new  <	; BinaryAdd g_inCount g_inCount 1>

2921:
old  <	; goto 331>
new  <	; Goto 331>

2925:
old  <	; if star != int4$0# goto 77>
new  <	; NotEqual 77 star 0>

2930:
old  <	; arg_list = arg_list + int8$8#>
new  <	; BinaryAdd arg_list arg_list 8>

2934:
old  <	; Â£temporary1361 = arg_list - int8$8#>
new  <	; BinarySubtract Â£temporary1361 arg_list 8>

2939:
old  <	; Â£temporary1363 = int_to_int Â£temporary1361 (Pointer -> Pointer)>
new  <	; IntegralToIntegral Â£temporary1363 Â£temporary1361>

2942:
old  <	; Â£temporary1364 -> Â£temporary1363 = *Â£temporary1363>
new  <	; Dereference Â£temporary1364 -> Â£temporary1363 Â£temporary1363 0>

2945:
old  <	; charPtr = Â£temporary1364 -> Â£temporary1363>
new  <	; Assign charPtr Â£temporary1364 -> Â£temporary1363>

2950:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 157 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2953:
old  <	; parameter charPtr, offset 181>
new  <	; Parameter pointer charPtr 181>

2958:
old  <	; parameter int4$0#, offset 189>
new  <	; Parameter signedint 0 189>

2962:
old  <	; call function noellipse-noellipse scanString>
new  <	; Call scanString 157 0>

2969:
old  <	; post call>
new  <	; PostCall 157>

2972:
old  <	; goto 82>
new  <	; Goto 82>

2976:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 157 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2979:
old  <	; parameter int8$0#, offset 181>
new  <	; Parameter pointer 0 181>

2983:
old  <	; parameter int4$0#, offset 189>
new  <	; Parameter signedint 0 189>

2987:
old  <	; call function noellipse-noellipse scanString>
new  <	; Call scanString 157 0>

2994:
old  <	; post call>
new  <	; PostCall 157>

2997:
old  <	; percent = int4$0#>
new  <	; Assign percent 0>

3001:
old  <	; goto 331>
new  <	; Goto 331>

3005:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 157 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3008:
old  <	; call function noellipse-noellipse scanLongInt>
new  <	; Call scanLongInt 157 0>

3015:
old  <	; post call>
new  <	; PostCall 157>

3018:
old  <	; Â£temporary1367 = return_value>
new  <	; GetReturnValue Â£temporary1367>

3021:
old  <	; longValue = Â£temporary1367>
new  <	; Assign longValue Â£temporary1367>

3025:
old  <	; if star != int4$0# goto 117>
new  <	; NotEqual 117 star 0>

3030:
old  <	; if shortInt == int4$0# goto 100>
new  <	; Equal 100 shortInt 0>

3035:
old  <	; arg_list = arg_list + int8$8#>
new  <	; BinaryAdd arg_list arg_list 8>

3039:
old  <	; Â£temporary1372 = arg_list - int8$8#>
new  <	; BinarySubtract Â£temporary1372 arg_list 8>

3044:
old  <	; Â£temporary1374 = int_to_int Â£temporary1372 (Pointer -> Pointer)>
new  <	; IntegralToIntegral Â£temporary1374 Â£temporary1372>

3047:
old  <	; Â£temporary1375 -> Â£temporary1374 = *Â£temporary1374>
new  <	; Dereference Â£temporary1375 -> Â£temporary1374 Â£temporary1374 0>

3050:
old  <	; shortPtr = Â£temporary1375 -> Â£temporary1374>
new  <	; Assign shortPtr Â£temporary1375 -> Â£temporary1374>

3055:
old  <	; Â£temporary1376 -> shortPtr = *shortPtr>
new  <	; Dereference Â£temporary1376 -> shortPtr shortPtr 0>

3059:
old  <	; Â£temporary1377 = int_to_int longValue (Signed_Long_Int -> SignedShortInt)>
new  <	; IntegralToIntegral Â£temporary1377 longValue>

3067:
old  <	; Â£temporary1376 -> shortPtr = Â£temporary1377>
new  <	; Assign Â£temporary1376 -> shortPtr Â£temporary1377>

3071:
old  <	; goto 117>
new  <	; Goto 117>

3075:
old  <	; if longIntOrDouble != int4$0# goto 110>
new  <	; NotEqual 110 longIntOrDouble 0>

3080:
old  <	; arg_list = arg_list + int8$8#>
new  <	; BinaryAdd arg_list arg_list 8>

3084:
old  <	; Â£temporary1382 = arg_list - int8$8#>
new  <	; BinarySubtract Â£temporary1382 arg_list 8>

3089:
old  <	; Â£temporary1384 = int_to_int Â£temporary1382 (Pointer -> Pointer)>
new  <	; IntegralToIntegral Â£temporary1384 Â£temporary1382>

3092:
old  <	; Â£temporary1385 -> Â£temporary1384 = *Â£temporary1384>
new  <	; Dereference Â£temporary1385 -> Â£temporary1384 Â£temporary1384 0>

3095:
old  <	; intPtr = Â£temporary1385 -> Â£temporary1384>
new  <	; Assign intPtr Â£temporary1385 -> Â£temporary1384>

3100:
old  <	; Â£temporary1386 -> intPtr = *intPtr>
new  <	; Dereference Â£temporary1386 -> intPtr intPtr 0>

3104:
old  <	; Â£temporary1387 = int_to_int longValue (Signed_Long_Int -> SignedInt)>
new  <	; IntegralToIntegral Â£temporary1387 longValue>

3112:
old  <	; Â£temporary1386 -> intPtr = Â£temporary1387>
new  <	; Assign Â£temporary1386 -> intPtr Â£temporary1387>

3116:
old  <	; goto 117>
new  <	; Goto 117>

3120:
old  <	; arg_list = arg_list + int8$8#>
new  <	; BinaryAdd arg_list arg_list 8>

3124:
old  <	; Â£temporary1390 = arg_list - int8$8#>
new  <	; BinarySubtract Â£temporary1390 arg_list 8>

3129:
old  <	; Â£temporary1392 = int_to_int Â£temporary1390 (Pointer -> Pointer)>
new  <	; IntegralToIntegral Â£temporary1392 Â£temporary1390>

3132:
old  <	; Â£temporary1393 -> Â£temporary1392 = *Â£temporary1392>
new  <	; Dereference Â£temporary1393 -> Â£temporary1392 Â£temporary1392 0>

3135:
old  <	; longPtr = Â£temporary1393 -> Â£temporary1392>
new  <	; Assign longPtr Â£temporary1393 -> Â£temporary1392>

3140:
old  <	; Â£temporary1394 -> longPtr = *longPtr>
new  <	; Dereference Â£temporary1394 -> longPtr longPtr 0>

3144:
old  <	; Â£temporary1394 -> longPtr = longValue>
new  <	; Assign Â£temporary1394 -> longPtr longValue>

3149:
old  <	; percent = int4$0#>
new  <	; Assign percent 0>

3153:
old  <	; goto 331>
new  <	; Goto 331>

3157:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 157 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3160:
old  <	; parameter int8$8#, offset 181>
new  <	; Parameter unsignedlongint 8 181>

3164:
old  <	; call function noellipse-noellipse scanUnsignedLongInt>
new  <	; Call scanUnsignedLongInt 157 0>

3171:
old  <	; post call>
new  <	; PostCall 157>

3174:
old  <	; Â£temporary1396 = return_value>
new  <	; GetReturnValue Â£temporary1396>

3177:
old  <	; unsignedLongValue = Â£temporary1396>
new  <	; Assign unsignedLongValue Â£temporary1396>

3181:
old  <	; if star != int4$0# goto 153>
new  <	; NotEqual 153 star 0>

3186:
old  <	; if shortInt == int4$0# goto 136>
new  <	; Equal 136 shortInt 0>

3191:
old  <	; arg_list = arg_list + int8$8#>
new  <	; BinaryAdd arg_list arg_list 8>

3195:
old  <	; Â£temporary1401 = arg_list - int8$8#>
new  <	; BinarySubtract Â£temporary1401 arg_list 8>

3200:
old  <	; Â£temporary1403 = int_to_int Â£temporary1401 (Pointer -> Pointer)>
new  <	; IntegralToIntegral Â£temporary1403 Â£temporary1401>

3203:
old  <	; Â£temporary1404 -> Â£temporary1403 = *Â£temporary1403>
new  <	; Dereference Â£temporary1404 -> Â£temporary1403 Â£temporary1403 0>

3206:
old  <	; unsignedShortPtr = Â£temporary1404 -> Â£temporary1403>
new  <	; Assign unsignedShortPtr Â£temporary1404 -> Â£temporary1403>

3211:
old  <	; Â£temporary1405 -> unsignedShortPtr = *unsignedShortPtr>
new  <	; Dereference Â£temporary1405 -> unsignedShortPtr unsignedShortPtr 0>

3215:
old  <	; Â£temporary1406 = int_to_int unsignedLongValue (UnsignedLongInt -> SignedShortInt)>
new  <	; IntegralToIntegral Â£temporary1406 unsignedLongValue>

3219:
old  <	; Â£temporary1405 -> unsignedShortPtr = Â£temporary1406>
new  <	; Assign Â£temporary1405 -> unsignedShortPtr Â£temporary1406>

3223:
old  <	; goto 153>
new  <	; Goto 153>

3227:
old  <	; if longIntOrDouble != int4$0# goto 146>
new  <	; NotEqual 146 longIntOrDouble 0>

3232:
old  <	; arg_list = arg_list + int8$8#>
new  <	; BinaryAdd arg_list arg_list 8>

3236:
old  <	; Â£temporary1411 = arg_list - int8$8#>
new  <	; BinarySubtract Â£temporary1411 arg_list 8>

3241:
old  <	; Â£temporary1413 = int_to_int Â£temporary1411 (Pointer -> Pointer)>
new  <	; IntegralToIntegral Â£temporary1413 Â£temporary1411>

3244:
old  <	; Â£temporary1414 -> Â£temporary1413 = *Â£temporary1413>
new  <	; Dereference Â£temporary1414 -> Â£temporary1413 Â£temporary1413 0>

3247:
old  <	; unsignedIntPtr = Â£temporary1414 -> Â£temporary1413>
new  <	; Assign unsignedIntPtr Â£temporary1414 -> Â£temporary1413>

3252:
old  <	; Â£temporary1415 -> unsignedIntPtr = *unsignedIntPtr>
new  <	; Dereference Â£temporary1415 -> unsignedIntPtr unsignedIntPtr 0>

3256:
old  <	; Â£temporary1416 = int_to_int unsignedLongValue (UnsignedLongInt -> SignedInt)>
new  <	; IntegralToIntegral Â£temporary1416 unsignedLongValue>

3260:
old  <	; Â£temporary1415 -> unsignedIntPtr = Â£temporary1416>
new  <	; Assign Â£temporary1415 -> unsignedIntPtr Â£temporary1416>

3264:
old  <	; goto 153>
new  <	; Goto 153>

3268:
old  <	; arg_list = arg_list + int8$8#>
new  <	; BinaryAdd arg_list arg_list 8>

3272:
old  <	; Â£temporary1419 = arg_list - int8$8#>
new  <	; BinarySubtract Â£temporary1419 arg_list 8>

3277:
old  <	; Â£temporary1421 = int_to_int Â£temporary1419 (Pointer -> Pointer)>
new  <	; IntegralToIntegral Â£temporary1421 Â£temporary1419>

3280:
old  <	; Â£temporary1422 -> Â£temporary1421 = *Â£temporary1421>
new  <	; Dereference Â£temporary1422 -> Â£temporary1421 Â£temporary1421 0>

3283:
old  <	; unsignedLongPtr = Â£temporary1422 -> Â£temporary1421>
new  <	; Assign unsignedLongPtr Â£temporary1422 -> Â£temporary1421>

3288:
old  <	; Â£temporary1423 -> unsignedLongPtr = *unsignedLongPtr>
new  <	; Dereference Â£temporary1423 -> unsignedLongPtr unsignedLongPtr 0>

3292:
old  <	; Â£temporary1423 -> unsignedLongPtr = unsignedLongValue>
new  <	; Assign Â£temporary1423 -> unsignedLongPtr unsignedLongValue>

3297:
old  <	; percent = int4$0#>
new  <	; Assign percent 0>

3301:
old  <	; goto 331>
new  <	; Goto 331>

3305:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 157 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3308:
old  <	; parameter int8$16#, offset 181>
new  <	; Parameter unsignedlongint 16 181>

3312:
old  <	; call function noellipse-noellipse scanUnsignedLongInt>
new  <	; Call scanUnsignedLongInt 157 0>

3319:
old  <	; post call>
new  <	; PostCall 157>

3322:
old  <	; Â£temporary1425 = return_value>
new  <	; GetReturnValue Â£temporary1425>

3325:
old  <	; unsignedLongValue = Â£temporary1425>
new  <	; Assign unsignedLongValue Â£temporary1425>

3329:
old  <	; if star != int4$0# goto 189>
new  <	; NotEqual 189 star 0>

3334:
old  <	; if shortInt == int4$0# goto 172>
new  <	; Equal 172 shortInt 0>

3339:
old  <	; arg_list = arg_list + int8$8#>
new  <	; BinaryAdd arg_list arg_list 8>

3343:
old  <	; Â£temporary1430 = arg_list - int8$8#>
new  <	; BinarySubtract Â£temporary1430 arg_list 8>

3348:
old  <	; Â£temporary1432 = int_to_int Â£temporary1430 (Pointer -> Pointer)>
new  <	; IntegralToIntegral Â£temporary1432 Â£temporary1430>

3351:
old  <	; Â£temporary1433 -> Â£temporary1432 = *Â£temporary1432>
new  <	; Dereference Â£temporary1433 -> Â£temporary1432 Â£temporary1432 0>

3354:
old  <	; unsignedShortPtr = Â£temporary1433 -> Â£temporary1432>
new  <	; Assign unsignedShortPtr Â£temporary1433 -> Â£temporary1432>

3359:
old  <	; Â£temporary1434 -> unsignedShortPtr = *unsignedShortPtr>
new  <	; Dereference Â£temporary1434 -> unsignedShortPtr unsignedShortPtr 0>

3363:
old  <	; Â£temporary1435 = int_to_int unsignedLongValue (UnsignedLongInt -> SignedShortInt)>
new  <	; IntegralToIntegral Â£temporary1435 unsignedLongValue>

3367:
old  <	; Â£temporary1434 -> unsignedShortPtr = Â£temporary1435>
new  <	; Assign Â£temporary1434 -> unsignedShortPtr Â£temporary1435>

3371:
old  <	; goto 189>
new  <	; Goto 189>

3375:
old  <	; if longIntOrDouble != int4$0# goto 182>
new  <	; NotEqual 182 longIntOrDouble 0>

3380:
old  <	; arg_list = arg_list + int8$8#>
new  <	; BinaryAdd arg_list arg_list 8>

3384:
old  <	; Â£temporary1440 = arg_list - int8$8#>
new  <	; BinarySubtract Â£temporary1440 arg_list 8>

3389:
old  <	; Â£temporary1442 = int_to_int Â£temporary1440 (Pointer -> Pointer)>
new  <	; IntegralToIntegral Â£temporary1442 Â£temporary1440>

3392:
old  <	; Â£temporary1443 -> Â£temporary1442 = *Â£temporary1442>
new  <	; Dereference Â£temporary1443 -> Â£temporary1442 Â£temporary1442 0>

3395:
old  <	; unsignedIntPtr = Â£temporary1443 -> Â£temporary1442>
new  <	; Assign unsignedIntPtr Â£temporary1443 -> Â£temporary1442>

3400:
old  <	; Â£temporary1444 -> unsignedIntPtr = *unsignedIntPtr>
new  <	; Dereference Â£temporary1444 -> unsignedIntPtr unsignedIntPtr 0>

3404:
old  <	; Â£temporary1445 = int_to_int unsignedLongValue (UnsignedLongInt -> SignedInt)>
new  <	; IntegralToIntegral Â£temporary1445 unsignedLongValue>

3408:
old  <	; Â£temporary1444 -> unsignedIntPtr = Â£temporary1445>
new  <	; Assign Â£temporary1444 -> unsignedIntPtr Â£temporary1445>

3412:
old  <	; goto 189>
new  <	; Goto 189>

3416:
old  <	; arg_list = arg_list + int8$8#>
new  <	; BinaryAdd arg_list arg_list 8>

3420:
old  <	; Â£temporary1448 = arg_list - int8$8#>
new  <	; BinarySubtract Â£temporary1448 arg_list 8>

3425:
old  <	; Â£temporary1450 = int_to_int Â£temporary1448 (Pointer -> Pointer)>
new  <	; IntegralToIntegral Â£temporary1450 Â£temporary1448>

3428:
old  <	; Â£temporary1451 -> Â£temporary1450 = *Â£temporary1450>
new  <	; Dereference Â£temporary1451 -> Â£temporary1450 Â£temporary1450 0>

3431:
old  <	; unsignedLongPtr = Â£temporary1451 -> Â£temporary1450>
new  <	; Assign unsignedLongPtr Â£temporary1451 -> Â£temporary1450>

3436:
old  <	; Â£temporary1452 -> unsignedLongPtr = *unsignedLongPtr>
new  <	; Dereference Â£temporary1452 -> unsignedLongPtr unsignedLongPtr 0>

3440:
old  <	; Â£temporary1452 -> unsignedLongPtr = unsignedLongValue>
new  <	; Assign Â£temporary1452 -> unsignedLongPtr unsignedLongValue>

3445:
old  <	; percent = int4$0#>
new  <	; Assign percent 0>

3449:
old  <	; goto 331>
new  <	; Goto 331>

3453:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 157 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3456:
old  <	; parameter int8$0#, offset 181>
new  <	; Parameter unsignedlongint 0 181>

3460:
old  <	; call function noellipse-noellipse scanUnsignedLongInt>
new  <	; Call scanUnsignedLongInt 157 0>

3467:
old  <	; post call>
new  <	; PostCall 157>

3470:
old  <	; Â£temporary1454 = return_value>
new  <	; GetReturnValue Â£temporary1454>

3473:
old  <	; unsignedLongValue = Â£temporary1454>
new  <	; Assign unsignedLongValue Â£temporary1454>

3477:
old  <	; if star != int4$0# goto 225>
new  <	; NotEqual 225 star 0>

3482:
old  <	; if shortInt == int4$0# goto 208>
new  <	; Equal 208 shortInt 0>

3487:
old  <	; arg_list = arg_list + int8$8#>
new  <	; BinaryAdd arg_list arg_list 8>

3491:
old  <	; Â£temporary1459 = arg_list - int8$8#>
new  <	; BinarySubtract Â£temporary1459 arg_list 8>

3496:
old  <	; Â£temporary1461 = int_to_int Â£temporary1459 (Pointer -> Pointer)>
new  <	; IntegralToIntegral Â£temporary1461 Â£temporary1459>

3499:
old  <	; Â£temporary1462 -> Â£temporary1461 = *Â£temporary1461>
new  <	; Dereference Â£temporary1462 -> Â£temporary1461 Â£temporary1461 0>

3502:
old  <	; unsignedShortPtr = Â£temporary1462 -> Â£temporary1461>
new  <	; Assign unsignedShortPtr Â£temporary1462 -> Â£temporary1461>

3507:
old  <	; Â£temporary1463 -> unsignedShortPtr = *unsignedShortPtr>
new  <	; Dereference Â£temporary1463 -> unsignedShortPtr unsignedShortPtr 0>

3511:
old  <	; Â£temporary1464 = int_to_int unsignedLongValue (UnsignedLongInt -> SignedShortInt)>
new  <	; IntegralToIntegral Â£temporary1464 unsignedLongValue>

3515:
old  <	; Â£temporary1463 -> unsignedShortPtr = Â£temporary1464>
new  <	; Assign Â£temporary1463 -> unsignedShortPtr Â£temporary1464>

3519:
old  <	; goto 225>
new  <	; Goto 225>

3523:
old  <	; if longIntOrDouble != int4$0# goto 218>
new  <	; NotEqual 218 longIntOrDouble 0>

3528:
old  <	; arg_list = arg_list + int8$8#>
new  <	; BinaryAdd arg_list arg_list 8>

3532:
old  <	; Â£temporary1469 = arg_list - int8$8#>
new  <	; BinarySubtract Â£temporary1469 arg_list 8>

3537:
old  <	; Â£temporary1471 = int_to_int Â£temporary1469 (Pointer -> Pointer)>
new  <	; IntegralToIntegral Â£temporary1471 Â£temporary1469>

3540:
old  <	; Â£temporary1472 -> Â£temporary1471 = *Â£temporary1471>
new  <	; Dereference Â£temporary1472 -> Â£temporary1471 Â£temporary1471 0>

3543:
old  <	; unsignedIntPtr = Â£temporary1472 -> Â£temporary1471>
new  <	; Assign unsignedIntPtr Â£temporary1472 -> Â£temporary1471>

3548:
old  <	; Â£temporary1473 -> unsignedIntPtr = *unsignedIntPtr>
new  <	; Dereference Â£temporary1473 -> unsignedIntPtr unsignedIntPtr 0>

3552:
old  <	; Â£temporary1474 = int_to_int unsignedLongValue (UnsignedLongInt -> SignedInt)>
new  <	; IntegralToIntegral Â£temporary1474 unsignedLongValue>

3556:
old  <	; Â£temporary1473 -> unsignedIntPtr = Â£temporary1474>
new  <	; Assign Â£temporary1473 -> unsignedIntPtr Â£temporary1474>

3560:
old  <	; goto 225>
new  <	; Goto 225>

3564:
old  <	; arg_list = arg_list + int8$8#>
new  <	; BinaryAdd arg_list arg_list 8>

3568:
old  <	; Â£temporary1477 = arg_list - int8$8#>
new  <	; BinarySubtract Â£temporary1477 arg_list 8>

3573:
old  <	; Â£temporary1479 = int_to_int Â£temporary1477 (Pointer -> Pointer)>
new  <	; IntegralToIntegral Â£temporary1479 Â£temporary1477>

3576:
old  <	; Â£temporary1480 -> Â£temporary1479 = *Â£temporary1479>
new  <	; Dereference Â£temporary1480 -> Â£temporary1479 Â£temporary1479 0>

3579:
old  <	; unsignedLongPtr = Â£temporary1480 -> Â£temporary1479>
new  <	; Assign unsignedLongPtr Â£temporary1480 -> Â£temporary1479>

3584:
old  <	; Â£temporary1481 -> unsignedLongPtr = *unsignedLongPtr>
new  <	; Dereference Â£temporary1481 -> unsignedLongPtr unsignedLongPtr 0>

3588:
old  <	; Â£temporary1481 -> unsignedLongPtr = unsignedLongValue>
new  <	; Assign Â£temporary1481 -> unsignedLongPtr unsignedLongValue>

3593:
old  <	; percent = int4$0#>
new  <	; Assign percent 0>

3597:
old  <	; goto 331>
new  <	; Goto 331>

3601:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 157 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3604:
old  <	; call function noellipse-noellipse scanLongDouble>
new  <	; Call scanLongDouble 157 0>

3611:
old  <	; post call>
new  <	; PostCall 157>

3614:
old  <	; Â£temporary1483 = return_value>
new  <	; GetReturnValue Â£temporary1483>

3617:
old  <	; pop float longDoubleValue>
new  <	; PopFloat longDoubleValue>

3621:
old  <	; if star != int4$0# goto 261>
new  <	; NotEqual 261 star 0>

3626:
old  <	; if longIntOrDouble == int4$0# goto 243>
new  <	; Equal 243 longIntOrDouble 0>

3631:
old  <	; arg_list = arg_list + int8$8#>
new  <	; BinaryAdd arg_list arg_list 8>

3635:
old  <	; Â£temporary1488 = arg_list - int8$8#>
new  <	; BinarySubtract Â£temporary1488 arg_list 8>

3640:
old  <	; Â£temporary1490 = int_to_int Â£temporary1488 (Pointer -> Pointer)>
new  <	; IntegralToIntegral Â£temporary1490 Â£temporary1488>

3643:
old  <	; Â£temporary1491 -> Â£temporary1490 = *Â£temporary1490>
new  <	; Dereference Â£temporary1491 -> Â£temporary1490 Â£temporary1490 0>

3646:
old  <	; doublePtr = Â£temporary1491 -> Â£temporary1490>
new  <	; Assign doublePtr Â£temporary1491 -> Â£temporary1490>

3651:
old  <	; Â£temporary1492 -> doublePtr = *doublePtr>
new  <	; Dereference Â£temporary1492 -> doublePtr doublePtr 0>

3655:
old  <	; push float longDoubleValue>
new  <	; PushFloat longDoubleValue>

3659:
old  <	; pop float Â£temporary1492 -> doublePtr>
new  <	; PopFloat Â£temporary1492 -> doublePtr>

3663:
old  <	; goto 261>
new  <	; Goto 261>

3667:
old  <	; if longDouble == int4$0# goto 253>
new  <	; Equal 253 longDouble 0>

3672:
old  <	; arg_list = arg_list + int8$8#>
new  <	; BinaryAdd arg_list arg_list 8>

3676:
old  <	; Â£temporary1496 = arg_list - int8$8#>
new  <	; BinarySubtract Â£temporary1496 arg_list 8>

3681:
old  <	; Â£temporary1498 = int_to_int Â£temporary1496 (Pointer -> Pointer)>
new  <	; IntegralToIntegral Â£temporary1498 Â£temporary1496>

3684:
old  <	; Â£temporary1499 -> Â£temporary1498 = *Â£temporary1498>
new  <	; Dereference Â£temporary1499 -> Â£temporary1498 Â£temporary1498 0>

3687:
old  <	; longDoublePtr = Â£temporary1499 -> Â£temporary1498>
new  <	; Assign longDoublePtr Â£temporary1499 -> Â£temporary1498>

3692:
old  <	; Â£temporary1500 -> longDoublePtr = *longDoublePtr>
new  <	; Dereference Â£temporary1500 -> longDoublePtr longDoublePtr 0>

3696:
old  <	; push float longDoubleValue>
new  <	; PushFloat longDoubleValue>

3700:
old  <	; pop float Â£temporary1500 -> longDoublePtr>
new  <	; PopFloat Â£temporary1500 -> longDoublePtr>

3704:
old  <	; goto 261>
new  <	; Goto 261>

3708:
old  <	; arg_list = arg_list + int8$8#>
new  <	; BinaryAdd arg_list arg_list 8>

3712:
old  <	; Â£temporary1503 = arg_list - int8$8#>
new  <	; BinarySubtract Â£temporary1503 arg_list 8>

3717:
old  <	; Â£temporary1505 = int_to_int Â£temporary1503 (Pointer -> Pointer)>
new  <	; IntegralToIntegral Â£temporary1505 Â£temporary1503>

3720:
old  <	; Â£temporary1506 -> Â£temporary1505 = *Â£temporary1505>
new  <	; Dereference Â£temporary1506 -> Â£temporary1505 Â£temporary1505 0>

3723:
old  <	; floatPtr = Â£temporary1506 -> Â£temporary1505>
new  <	; Assign floatPtr Â£temporary1506 -> Â£temporary1505>

3728:
old  <	; Â£temporary1507 -> floatPtr = *floatPtr>
new  <	; Dereference Â£temporary1507 -> floatPtr floatPtr 0>

3732:
old  <	; push float longDoubleValue>
new  <	; PushFloat longDoubleValue>

3736:
old  <	; pop float Â£temporary1507 -> floatPtr>
new  <	; PopFloat Â£temporary1507 -> floatPtr>

3740:
old  <	; percent = int4$0#>
new  <	; Assign percent 0>

3744:
old  <	; goto 331>
new  <	; Goto 331>

3748:
old  <	; not = int4$0#>
new  <	; Assign not 0>

3752:
old  <	; index = index + int4$1#>
new  <	; BinaryAdd index index 1>

3756:
old  <	; Â£temporary1513 = int_to_int index (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary1513 index>

3762:
old  <	; Â£temporary1515 = format + Â£temporary1513>
new  <	; BinaryAdd Â£temporary1515 format Â£temporary1513>

3767:
old  <	; Â£temporary1512 -> Â£temporary1515 = *Â£temporary1515>
new  <	; Dereference Â£temporary1512 -> Â£temporary1515 Â£temporary1515 0>

3770:
old  <	; if Â£temporary1512 -> Â£temporary1515 != int1$94# goto 271>
new  <	; NotEqual 271 Â£temporary1512 -> Â£temporary1515 94>

3775:
old  <	; not = int4$1#>
new  <	; Assign not 1>

3779:
old  <	; startIndex = index + int4$1#>
new  <	; BinaryAdd startIndex index 1>

3785:
old  <	; Â£temporary1519 = int_to_int index (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary1519 index>

3791:
old  <	; Â£temporary1521 = format + Â£temporary1519>
new  <	; BinaryAdd Â£temporary1521 format Â£temporary1519>

3796:
old  <	; Â£temporary1518 -> Â£temporary1521 = *Â£temporary1521>
new  <	; Dereference Â£temporary1518 -> Â£temporary1521 Â£temporary1521 0>

3799:
old  <	; if Â£temporary1518 -> Â£temporary1521 == int1$93# goto 277>
new  <	; Equal 277 Â£temporary1518 -> Â£temporary1521 93>

3804:
old  <	; index = index + int4$1#>
new  <	; BinaryAdd index index 1>

3808:
old  <	; goto 271>
new  <	; Goto 271>

3812:
old  <	; Â£temporary1525 = int_to_int index (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary1525 index>

3818:
old  <	; Â£temporary1527 = format + Â£temporary1525>
new  <	; BinaryAdd Â£temporary1527 format Â£temporary1525>

3823:
old  <	; Â£temporary1524 -> Â£temporary1527 = *Â£temporary1527>
new  <	; Dereference Â£temporary1524 -> Â£temporary1527 Â£temporary1527 0>

3826:
old  <	; Â£temporary1524 -> Â£temporary1527 = int1$0#>
new  <	; Assign Â£temporary1524 -> Â£temporary1527 0>

3830:
old  <	; if star != int4$0# goto 298>
new  <	; NotEqual 298 star 0>

3835:
old  <	; arg_list = arg_list + int8$8#>
new  <	; BinaryAdd arg_list arg_list 8>

3839:
old  <	; Â£temporary1532 = arg_list - int8$8#>
new  <	; BinarySubtract Â£temporary1532 arg_list 8>

3844:
old  <	; Â£temporary1534 = int_to_int Â£temporary1532 (Pointer -> Pointer)>
new  <	; IntegralToIntegral Â£temporary1534 Â£temporary1532>

3847:
old  <	; Â£temporary1535 -> Â£temporary1534 = *Â£temporary1534>
new  <	; Dereference Â£temporary1535 -> Â£temporary1534 Â£temporary1534 0>

3850:
old  <	; string = Â£temporary1535 -> Â£temporary1534>
new  <	; Assign string Â£temporary1535 -> Â£temporary1534>

3855:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 173 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3858:
old  <	; parameter string, offset 197>
new  <	; Parameter pointer string 197>

3863:
old  <	; Â£temporary1537 = int_to_int startIndex (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary1537 startIndex>

3869:
old  <	; Â£temporary1539 = format + Â£temporary1537>
new  <	; BinaryAdd Â£temporary1539 format Â£temporary1537>

3874:
old  <	; Â£temporary1536 -> Â£temporary1539 = *Â£temporary1539>
new  <	; Dereference Â£temporary1536 -> Â£temporary1539 Â£temporary1539 0>

3877:
old  <	; Â£temporary1540 = &Â£temporary1536 -> Â£temporary1539>
new  <	; Address Â£temporary1540 Â£temporary1536 -> Â£temporary1539>

3880:
old  <	; parameter Â£temporary1540, offset 205>
new  <	; Parameter pointer Â£temporary1540 205>

3884:
old  <	; parameter not, offset 213>
new  <	; Parameter signedint not 213>

3889:
old  <	; call function noellipse-noellipse scanPattern>
new  <	; Call scanPattern 173 0>

3896:
old  <	; post call>
new  <	; PostCall 173>

3899:
old  <	; goto 331>
new  <	; Goto 331>

3903:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 165 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3906:
old  <	; parameter int8$0#, offset 189>
new  <	; Parameter pointer 0 189>

3910:
old  <	; Â£temporary1543 = int_to_int startIndex (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary1543 startIndex>

3916:
old  <	; Â£temporary1545 = format + Â£temporary1543>
new  <	; BinaryAdd Â£temporary1545 format Â£temporary1543>

3921:
old  <	; Â£temporary1542 -> Â£temporary1545 = *Â£temporary1545>
new  <	; Dereference Â£temporary1542 -> Â£temporary1545 Â£temporary1545 0>

3924:
old  <	; Â£temporary1546 = &Â£temporary1542 -> Â£temporary1545>
new  <	; Address Â£temporary1546 Â£temporary1542 -> Â£temporary1545>

3927:
old  <	; parameter Â£temporary1546, offset 197>
new  <	; Parameter pointer Â£temporary1546 197>

3931:
old  <	; parameter not, offset 205>
new  <	; Parameter signedint not 205>

3936:
old  <	; call function noellipse-noellipse scanPattern>
new  <	; Call scanPattern 165 0>

3943:
old  <	; post call>
new  <	; PostCall 165>

3946:
old  <	; goto 331>
new  <	; Goto 331>

3950:
old  <	; arg_list = arg_list + int8$8#>
new  <	; BinaryAdd arg_list arg_list 8>

3954:
old  <	; Â£temporary1550 = arg_list - int8$8#>
new  <	; BinarySubtract Â£temporary1550 arg_list 8>

3959:
old  <	; Â£temporary1552 = int_to_int Â£temporary1550 (Pointer -> Pointer)>
new  <	; IntegralToIntegral Â£temporary1552 Â£temporary1550>

3962:
old  <	; Â£temporary1553 -> Â£temporary1552 = *Â£temporary1552>
new  <	; Dereference Â£temporary1553 -> Â£temporary1552 Â£temporary1552 0>

3965:
old  <	; charsPtr = Â£temporary1553 -> Â£temporary1552>
new  <	; Assign charsPtr Â£temporary1553 -> Â£temporary1552>

3970:
old  <	; Â£temporary1554 -> charsPtr = *charsPtr>
new  <	; Dereference Â£temporary1554 -> charsPtr charsPtr 0>

3974:
old  <	; Â£temporary1554 -> charsPtr = g_inChars>
new  <	; Assign Â£temporary1554 -> charsPtr g_inChars>

3979:
old  <	; percent = int4$0#>
new  <	; Assign percent 0>

3983:
old  <	; goto 331>
new  <	; Goto 331>

3987:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 157 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3990:
old  <	; parameter string_scanFormat20c203D202725c270A#, offset 181>
new  <	; Parameter pointer "scanFormat c = '%c'\n" 181>

3994:
old  <	; Â£temporary1555 = int_to_int c (SignedChar -> SignedInt)>
new  <	; IntegralToIntegral Â£temporary1555 c>

4003:
old  <	; parameter Â£temporary1555, offset 189>
new  <	; Parameter signedint Â£temporary1555 189>

4007:
old  <	; call function noellipse-ellipse printf, extra 4>
new  <	; Call printf 157 4>

4016:
old  <	; post call>
new  <	; PostCall 157>

4019:
old  <	; goto 331>
new  <	; Goto 331>

4023:
old  <	; if c != int1$37# goto 331>
new  <	; NotEqual 331 c 37>

4028:
old  <	; percent = int4$1#>
new  <	; Assign percent 1>

4032:
old  <	; shortInt = int4$0#>
new  <	; Assign shortInt 0>

4036:
old  <	; longIntOrDouble = int4$0#>
new  <	; Assign longIntOrDouble 0>

4040:
old  <	; longDouble = int4$0#>
new  <	; Assign longDouble 0>

4044:
old  <	; star = int4$0#>
new  <	; Assign star 0>

4048:
old  <	; index = index + int4$1#>
new  <	; BinaryAdd index index 1>

4052:
old  <	; goto 9>
new  <	; Goto 9>

4056:
old  <	; return g_inCount>
new  <	; Return g_inCount>

4064:
old  <	; function end scanFormat>
new  <	; FunctionEnd scanFormat>

4069:
old  <	; empty>
new  <	; Empty>

4072:
old  <	; Â£temporary1559 = &format>
new  <	; Address Â£temporary1559 format>

4077:
old  <	; Â£temporary1560 = int_to_int Â£temporary1559 (Pointer -> Pointer)>
new  <	; IntegralToIntegral Â£temporary1560 Â£temporary1559>

4080:
old  <	; arg_list = Â£temporary1560 + int8$8#>
new  <	; BinaryAdd arg_list Â£temporary1560 8>

4085:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

4088:
old  <	; parameter format, offset 64>
new  <	; Parameter pointer format 64>

4093:
old  <	; parameter arg_list, offset 72>
new  <	; Parameter pointer arg_list 72>

4098:
old  <	; call function ellipse-noellipse vscanf>
new  <	; Call vscanf 40 0>

4107:
old  <	; post call>
new  <	; PostCall 40>

4110:
old  <	; Â£temporary1563 = return_value>
new  <	; GetReturnValue Â£temporary1563>

4113:
old  <	; return Â£temporary1563>
new  <	; Return Â£temporary1563>

4120:
old  <	; function end scanf>
new  <	; FunctionEnd scanf>

4125:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

4128:
old  <	; parameter stdin, offset 64>
new  <	; Parameter pointer stdin 64>

4133:
old  <	; parameter format, offset 72>
new  <	; Parameter pointer format 72>

4138:
old  <	; parameter arg_list, offset 80>
new  <	; Parameter pointer arg_list 80>

4143:
old  <	; call function noellipse-noellipse vfscanf>
new  <	; Call vfscanf 40 0>

4150:
old  <	; post call>
new  <	; PostCall 40>

4153:
old  <	; Â£temporary1565 = return_value>
new  <	; GetReturnValue Â£temporary1565>

4156:
old  <	; return Â£temporary1565>
new  <	; Return Â£temporary1565>

4163:
old  <	; function end vscanf>
new  <	; FunctionEnd vscanf>

4168:
old  <	; empty>
new  <	; Empty>

4171:
old  <	; Â£temporary1566 = &format>
new  <	; Address Â£temporary1566 format>

4176:
old  <	; Â£temporary1567 = int_to_int Â£temporary1566 (Pointer -> Pointer)>
new  <	; IntegralToIntegral Â£temporary1567 Â£temporary1566>

4179:
old  <	; arg_list = Â£temporary1567 + int8$8#>
new  <	; BinaryAdd arg_list Â£temporary1567 8>

4184:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

4187:
old  <	; parameter inStream, offset 72>
new  <	; Parameter pointer inStream 72>

4192:
old  <	; parameter format, offset 80>
new  <	; Parameter pointer format 80>

4197:
old  <	; parameter arg_list, offset 88>
new  <	; Parameter pointer arg_list 88>

4202:
old  <	; call function ellipse-noellipse vfscanf>
new  <	; Call vfscanf 48 0>

4211:
old  <	; post call>
new  <	; PostCall 48>

4214:
old  <	; Â£temporary1570 = return_value>
new  <	; GetReturnValue Â£temporary1570>

4217:
old  <	; return Â£temporary1570>
new  <	; Return Â£temporary1570>

4224:
old  <	; function end fscanf>
new  <	; FunctionEnd fscanf>

4229:
old  <	; g_inStatus = int4$0#>
new  <	; Assign g_inStatus 0>

4233:
old  <	; Â£temporary1572 = int_to_int inStream (Pointer -> Pointer)>
new  <	; IntegralToIntegral Â£temporary1572 inStream>

4237:
old  <	; g_inDevice = Â£temporary1572>
new  <	; Assign g_inDevice Â£temporary1572>

4241:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

4244:
old  <	; parameter format, offset 72>
new  <	; Parameter pointer format 72>

4249:
old  <	; parameter arg_list, offset 80>
new  <	; Parameter pointer arg_list 80>

4254:
old  <	; call function noellipse-noellipse scanFormat>
new  <	; Call scanFormat 48 0>

4261:
old  <	; post call>
new  <	; PostCall 48>

4264:
old  <	; Â£temporary1573 = return_value>
new  <	; GetReturnValue Â£temporary1573>

4267:
old  <	; return Â£temporary1573>
new  <	; Return Â£temporary1573>

4274:
old  <	; function end vfscanf>
new  <	; FunctionEnd vfscanf>

4279:
old  <	; empty>
new  <	; Empty>

4282:
old  <	; Â£temporary1574 = &format>
new  <	; Address Â£temporary1574 format>

4287:
old  <	; Â£temporary1575 = int_to_int Â£temporary1574 (Pointer -> Pointer)>
new  <	; IntegralToIntegral Â£temporary1575 Â£temporary1574>

4290:
old  <	; arg_list = Â£temporary1575 + int8$8#>
new  <	; BinaryAdd arg_list Â£temporary1575 8>

4295:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

4298:
old  <	; parameter inString, offset 72>
new  <	; Parameter pointer inString 72>

4303:
old  <	; parameter format, offset 80>
new  <	; Parameter pointer format 80>

4308:
old  <	; parameter arg_list, offset 88>
new  <	; Parameter pointer arg_list 88>

4313:
old  <	; call function ellipse-noellipse vsscanf>
new  <	; Call vsscanf 48 0>

4322:
old  <	; post call>
new  <	; PostCall 48>

4325:
old  <	; Â£temporary1578 = return_value>
new  <	; GetReturnValue Â£temporary1578>

4328:
old  <	; return Â£temporary1578>
new  <	; Return Â£temporary1578>

4335:
old  <	; function end sscanf>
new  <	; FunctionEnd sscanf>

4340:
old  <	; g_inStatus = int4$1#>
new  <	; Assign g_inStatus 1>

4344:
old  <	; Â£temporary1580 = int_to_int inString (Pointer -> Pointer)>
new  <	; IntegralToIntegral Â£temporary1580 inString>

4348:
old  <	; g_inDevice = Â£temporary1580>
new  <	; Assign g_inDevice Â£temporary1580>

4352:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

4355:
old  <	; parameter format, offset 72>
new  <	; Parameter pointer format 72>

4360:
old  <	; parameter arg_list, offset 80>
new  <	; Parameter pointer arg_list 80>

4365:
old  <	; call function noellipse-noellipse scanFormat>
new  <	; Call scanFormat 48 0>

4372:
old  <	; post call>
new  <	; PostCall 48>

4375:
old  <	; Â£temporary1581 = return_value>
new  <	; GetReturnValue Â£temporary1581>

4378:
old  <	; return Â£temporary1581>
new  <	; Return Â£temporary1581>

4385:
old  <	; function end vsscanf>
new  <	; FunctionEnd vsscanf>

43:
old  <	; initializer zero 4>
new  <	; InitializerZero 4>

49:
old  <	; initializer zero 4>
new  <	; InitializerZero 4>

55:
old  <	; initializer zero 8>
new  <	; InitializerZero 8>

61:
old  <	; g_outStatus = int4$0#>
new  <	; Assign g_outStatus 0>

65:
old  <	; Â£temporary1582 = int_to_int stream (Pointer -> Pointer)>
new  <	; IntegralToIntegral Â£temporary1582 stream>

69:
old  <	; g_outDevice = Â£temporary1582>
new  <	; Assign g_outDevice Â£temporary1582>

73:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

76:
old  <	; Â£temporary1583 = int_to_int i (SignedInt -> SignedChar)>
new  <	; IntegralToIntegral Â£temporary1583 i>

84:
old  <	; parameter Â£temporary1583, offset 60>
new  <	; Parameter signedchar Â£temporary1583 60>

88:
old  <	; call function noellipse-noellipse printChar>
new  <	; Call printChar 36 0>

95:
old  <	; post call>
new  <	; PostCall 36>

98:
old  <	; return int4$1#>
new  <	; Return 1>

106:
old  <	; function end putc>
new  <	; FunctionEnd putc>

111:
old  <	; g_outStatus = int4$0#>
new  <	; Assign g_outStatus 0>

115:
old  <	; Â£temporary1585 = int_to_int stream (Pointer -> Pointer)>
new  <	; IntegralToIntegral Â£temporary1585 stream>

119:
old  <	; g_outDevice = Â£temporary1585>
new  <	; Assign g_outDevice Â£temporary1585>

123:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

126:
old  <	; Â£temporary1586 = int_to_int i (SignedInt -> SignedChar)>
new  <	; IntegralToIntegral Â£temporary1586 i>

134:
old  <	; parameter Â£temporary1586, offset 60>
new  <	; Parameter signedchar Â£temporary1586 60>

138:
old  <	; call function noellipse-noellipse printChar>
new  <	; Call printChar 36 0>

145:
old  <	; post call>
new  <	; PostCall 36>

148:
old  <	; return int4$1#>
new  <	; Return 1>

156:
old  <	; function end fputc>
new  <	; FunctionEnd fputc>

161:
old  <	; g_outStatus = int4$0#>
new  <	; Assign g_outStatus 0>

165:
old  <	; Â£temporary1588 = int_to_int stdout (Pointer -> Pointer)>
new  <	; IntegralToIntegral Â£temporary1588 stdout>

169:
old  <	; g_outDevice = Â£temporary1588>
new  <	; Assign g_outDevice Â£temporary1588>

173:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

176:
old  <	; Â£temporary1589 = int_to_int i (SignedInt -> SignedChar)>
new  <	; IntegralToIntegral Â£temporary1589 i>

184:
old  <	; parameter Â£temporary1589, offset 52>
new  <	; Parameter signedchar Â£temporary1589 52>

188:
old  <	; call function noellipse-noellipse printChar>
new  <	; Call printChar 28 0>

195:
old  <	; post call>
new  <	; PostCall 28>

198:
old  <	; return int4$1#>
new  <	; Return 1>

206:
old  <	; function end putchar>
new  <	; FunctionEnd putchar>

211:
old  <	; empty>
new  <	; Empty>

214:
old  <	; case g_outStatus == int4$0# goto 6>
new  <	; Case 6 g_outStatus 0>

220:
old  <	; case g_outStatus == int4$1# goto 19>
new  <	; Case 19 g_outStatus 1>

225:
old  <	; case g_outStatus == int4$2# goto 28>
new  <	; Case 28 g_outStatus 2>

230:
old  <	; case end g_outStatus>
new  <	; CaseEnd g_outStatus>

233:
old  <	; goto 29>
new  <	; Goto 29>

237:
old  <	; Â£temporary1591 = int_to_int g_outDevice (Pointer -> Pointer)>
new  <	; IntegralToIntegral Â£temporary1591 g_outDevice>

241:
old  <	; stream = Â£temporary1591>
new  <	; Assign stream Â£temporary1591>

245:
old  <	; rax = int8$1#>
new  <	; AssignRegister rax 1>

249:
old  <	; Â£temporary1594 -> stream = *stream>
new  <	; Dereference Â£temporary1594 -> stream stream 0>

253:
old  <	; Â£temporary1595 = int_to_int Â£temporary1594 -> stream (Unsigned_Int -> UnsignedLongInt)>
new  <	; IntegralToIntegral Â£temporary1595 Â£temporary1594 -> stream>

259:
old  <	; rdi = Â£temporary1595>
new  <	; AssignRegister rdi Â£temporary1595>

262:
old  <	; Â£temporary1597 = &c>
new  <	; Address Â£temporary1597 c>

267:
old  <	; Â£temporary1598 = int_to_int Â£temporary1597 (Pointer -> UnsignedLongInt)>
new  <	; IntegralToIntegral Â£temporary1598 Â£temporary1597>

270:
old  <	; rsi = Â£temporary1598>
new  <	; AssignRegister rsi Â£temporary1598>

273:
old  <	; rdx = int8$1#>
new  <	; AssignRegister rdx 1>

277:
old  <	; syscall>
new  <	; SysCall>

281:
old  <	; g_outChars = g_outChars + int4$1#>
new  <	; BinaryAdd g_outChars g_outChars 1>

285:
old  <	; goto 29>
new  <	; Goto 29>

289:
old  <	; Â£temporary1601 = int_to_int g_outDevice (Pointer -> Pointer)>
new  <	; IntegralToIntegral Â£temporary1601 g_outDevice>

293:
old  <	; outString = Â£temporary1601>
new  <	; Assign outString Â£temporary1601>

297:
old  <	; Â£temporary1602 = g_outChars>
new  <	; Assign Â£temporary1602 g_outChars>

301:
old  <	; g_outChars = g_outChars + int4$1#>
new  <	; BinaryAdd g_outChars g_outChars 1>

305:
old  <	; Â£temporary1604 = int_to_int Â£temporary1602 (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary1604 Â£temporary1602>

310:
old  <	; Â£temporary1606 = outString + Â£temporary1604>
new  <	; BinaryAdd Â£temporary1606 outString Â£temporary1604>

315:
old  <	; Â£temporary1603 -> Â£temporary1606 = *Â£temporary1606>
new  <	; Dereference Â£temporary1603 -> Â£temporary1606 Â£temporary1606 0>

318:
old  <	; Â£temporary1603 -> Â£temporary1606 = c>
new  <	; Assign Â£temporary1603 -> Â£temporary1606 c>

323:
old  <	; goto 29>
new  <	; Goto 29>

327:
old  <	; g_outChars = g_outChars + int4$1#>
new  <	; BinaryAdd g_outChars g_outChars 1>

331:
old  <	; return>
new  <	; Return>

338:
old  <	; function end printChar>
new  <	; FunctionEnd printChar>

343:
old  <	; if s == int8$0# goto 33>
new  <	; Equal 33 s 0>

348:
old  <	; if precision != int4$0# goto 16>
new  <	; NotEqual 16 precision 0>

353:
old  <	; index = int4$0#>
new  <	; Assign index 0>

357:
old  <	; Â£temporary1612 = int_to_int index (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary1612 index>

363:
old  <	; Â£temporary1614 = s + Â£temporary1612>
new  <	; BinaryAdd Â£temporary1614 s Â£temporary1612>

368:
old  <	; Â£temporary1611 -> Â£temporary1614 = *Â£temporary1614>
new  <	; Dereference Â£temporary1611 -> Â£temporary1614 Â£temporary1614 0>

371:
old  <	; if Â£temporary1611 -> Â£temporary1614 == int1$0# goto 57>
new  <	; Equal 57 Â£temporary1611 -> Â£temporary1614 0>

376:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

379:
old  <	; Â£temporary1618 = int_to_int index (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary1618 index>

385:
old  <	; Â£temporary1620 = s + Â£temporary1618>
new  <	; BinaryAdd Â£temporary1620 s Â£temporary1618>

390:
old  <	; Â£temporary1617 -> Â£temporary1620 = *Â£temporary1620>
new  <	; Dereference Â£temporary1617 -> Â£temporary1620 Â£temporary1620 0>

393:
old  <	; parameter Â£temporary1617 -> Â£temporary1620, offset 64>
new  <	; Parameter signedchar Â£temporary1617 -> Â£temporary1620 64>

398:
old  <	; call function noellipse-noellipse printChar>
new  <	; Call printChar 40 0>

405:
old  <	; post call>
new  <	; PostCall 40>

408:
old  <	; index = index + int4$1#>
new  <	; BinaryAdd index index 1>

412:
old  <	; goto 3>
new  <	; Goto 3>

416:
old  <	; index = int4$0#>
new  <	; Assign index 0>

420:
old  <	; Â£temporary1622 = precision>
new  <	; Assign Â£temporary1622 precision>

424:
old  <	; precision = precision - int4$1#>
new  <	; BinarySubtract precision precision 1>

428:
old  <	; if Â£temporary1622 <= int4$0# goto 57>
new  <	; SignedLessThanEqual 57 Â£temporary1622 0>

433:
old  <	; Â£temporary1625 = int_to_int index (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary1625 index>

439:
old  <	; Â£temporary1627 = s + Â£temporary1625>
new  <	; BinaryAdd Â£temporary1627 s Â£temporary1625>

444:
old  <	; Â£temporary1624 -> Â£temporary1627 = *Â£temporary1627>
new  <	; Dereference Â£temporary1624 -> Â£temporary1627 Â£temporary1627 0>

447:
old  <	; if Â£temporary1624 -> Â£temporary1627 == int1$0# goto 57>
new  <	; Equal 57 Â£temporary1624 -> Â£temporary1627 0>

452:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

455:
old  <	; Â£temporary1632 = int_to_int index (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary1632 index>

461:
old  <	; Â£temporary1634 = s + Â£temporary1632>
new  <	; BinaryAdd Â£temporary1634 s Â£temporary1632>

466:
old  <	; Â£temporary1631 -> Â£temporary1634 = *Â£temporary1634>
new  <	; Dereference Â£temporary1631 -> Â£temporary1634 Â£temporary1634 0>

469:
old  <	; parameter Â£temporary1631 -> Â£temporary1634, offset 64>
new  <	; Parameter signedchar Â£temporary1631 -> Â£temporary1634 64>

474:
old  <	; call function noellipse-noellipse printChar>
new  <	; Call printChar 40 0>

481:
old  <	; post call>
new  <	; PostCall 40>

484:
old  <	; index = index + int4$1#>
new  <	; BinaryAdd index index 1>

488:
old  <	; goto 17>
new  <	; Goto 17>

492:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

495:
old  <	; parameter int1$60#, offset 60>
new  <	; Parameter signedchar 60 60>

499:
old  <	; call function noellipse-noellipse printChar>
new  <	; Call printChar 36 0>

506:
old  <	; post call>
new  <	; PostCall 36>

509:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

512:
old  <	; parameter int1$78#, offset 60>
new  <	; Parameter signedchar 78 60>

516:
old  <	; call function noellipse-noellipse printChar>
new  <	; Call printChar 36 0>

523:
old  <	; post call>
new  <	; PostCall 36>

526:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

529:
old  <	; parameter int1$85#, offset 60>
new  <	; Parameter signedchar 85 60>

533:
old  <	; call function noellipse-noellipse printChar>
new  <	; Call printChar 36 0>

540:
old  <	; post call>
new  <	; PostCall 36>

543:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

546:
old  <	; parameter int1$76#, offset 60>
new  <	; Parameter signedchar 76 60>

550:
old  <	; call function noellipse-noellipse printChar>
new  <	; Call printChar 36 0>

557:
old  <	; post call>
new  <	; PostCall 36>

560:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

563:
old  <	; parameter int1$76#, offset 60>
new  <	; Parameter signedchar 76 60>

567:
old  <	; call function noellipse-noellipse printChar>
new  <	; Call printChar 36 0>

574:
old  <	; post call>
new  <	; PostCall 36>

577:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

580:
old  <	; parameter int1$62#, offset 60>
new  <	; Parameter signedchar 62 60>

584:
old  <	; call function noellipse-noellipse printChar>
new  <	; Call printChar 36 0>

591:
old  <	; post call>
new  <	; PostCall 36>

594:
old  <	; return>
new  <	; Return>

601:
old  <	; function end printString>
new  <	; FunctionEnd printString>

606:
old  <	; initializer Signed_Long_Int>
new  <	; Initializer Signed_Long_Int 10>

612:
old  <	; if longValue == int8$0# goto 15>
new  <	; Equal 15 longValue 0>

617:
old  <	; Â£temporary1643 = longValue % int8$10#>
new  <	; SignedModulo Â£temporary1643 longValue 10>

623:
old  <	; Â£temporary1644 = int_to_int Â£temporary1643 (Signed_Long_Int -> SignedInt)>
new  <	; IntegralToIntegral Â£temporary1644 Â£temporary1643>

630:
old  <	; digit = Â£temporary1644>
new  <	; Assign digit Â£temporary1644>

634:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

637:
old  <	; Â£temporary1645 = longValue / int8$10#>
new  <	; SignedDivide Â£temporary1645 longValue 10>

643:
old  <	; parameter Â£temporary1645, offset 60>
new  <	; Parameter signed long int Â£temporary1645 60>

647:
old  <	; call function noellipse-noellipse printLongIntRec>
new  <	; Call printLongIntRec 36 0>

654:
old  <	; post call>
new  <	; PostCall 36>

657:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

660:
old  <	; Â£temporary1647 = digit + int4$48#>
new  <	; BinaryAdd Â£temporary1647 digit 48>

665:
old  <	; Â£temporary1648 = int_to_int Â£temporary1647 (SignedInt -> SignedChar)>
new  <	; IntegralToIntegral Â£temporary1648 Â£temporary1647>

672:
old  <	; parameter Â£temporary1648, offset 60>
new  <	; Parameter signedchar Â£temporary1648 60>

676:
old  <	; call function noellipse-noellipse printChar>
new  <	; Call printChar 36 0>

683:
old  <	; post call>
new  <	; PostCall 36>

686:
old  <	; return>
new  <	; Return>

693:
old  <	; function end printLongIntRec>
new  <	; FunctionEnd printLongIntRec>

698:
old  <	; if longValue >= int8$0# goto 8>
new  <	; SignedGreaterThanEqual 8 longValue 0>

703:
old  <	; Â£temporary1651 = -longValue>
new  <	; UnarySubtract Â£temporary1651 longValue>

708:
old  <	; longValue = Â£temporary1651>
new  <	; Assign longValue Â£temporary1651>

712:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

715:
old  <	; parameter int1$45#, offset 64>
new  <	; Parameter signedchar 45 64>

719:
old  <	; call function noellipse-noellipse printChar>
new  <	; Call printChar 40 0>

726:
old  <	; post call>
new  <	; PostCall 40>

729:
old  <	; goto 19>
new  <	; Goto 19>

733:
old  <	; if space == int4$0# goto 14>
new  <	; Equal 14 space 0>

738:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

741:
old  <	; parameter int1$32#, offset 64>
new  <	; Parameter signedchar 32 64>

745:
old  <	; call function noellipse-noellipse printChar>
new  <	; Call printChar 40 0>

752:
old  <	; post call>
new  <	; PostCall 40>

755:
old  <	; goto 19>
new  <	; Goto 19>

759:
old  <	; if plus == int4$0# goto 19>
new  <	; Equal 19 plus 0>

764:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

767:
old  <	; parameter int1$43#, offset 64>
new  <	; Parameter signedchar 43 64>

771:
old  <	; call function noellipse-noellipse printChar>
new  <	; Call printChar 40 0>

778:
old  <	; post call>
new  <	; PostCall 40>

781:
old  <	; if longValue != int8$0# goto 25>
new  <	; NotEqual 25 longValue 0>

786:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

789:
old  <	; parameter int1$48#, offset 64>
new  <	; Parameter signedchar 48 64>

793:
old  <	; call function noellipse-noellipse printChar>
new  <	; Call printChar 40 0>

800:
old  <	; post call>
new  <	; PostCall 40>

803:
old  <	; goto 29>
new  <	; Goto 29>

807:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

810:
old  <	; parameter longValue, offset 64>
new  <	; Parameter signed long int longValue 64>

815:
old  <	; call function noellipse-noellipse printLongIntRec>
new  <	; Call printLongIntRec 40 0>

822:
old  <	; post call>
new  <	; PostCall 40>

825:
old  <	; return>
new  <	; Return>

832:
old  <	; function end printLongInt>
new  <	; FunctionEnd printLongInt>

837:
old  <	; if digit >= int4$10# goto 4>
new  <	; SignedGreaterThanEqual 4 digit 10>

842:
old  <	; Â£temporary1661 = digit + int4$48#>
new  <	; BinaryAdd Â£temporary1661 digit 48>

847:
old  <	; Â£temporary1662 = int_to_int Â£temporary1661 (SignedInt -> SignedChar)>
new  <	; IntegralToIntegral Â£temporary1662 Â£temporary1661>

854:
old  <	; return Â£temporary1662>
new  <	; Return Â£temporary1662>

861:
old  <	; if capital == int4$0# goto 9>
new  <	; Equal 9 capital 0>

866:
old  <	; Â£temporary1663 = digit - int4$10#>
new  <	; BinarySubtract Â£temporary1663 digit 10>

871:
old  <	; Â£temporary1664 = Â£temporary1663 + int4$65#>
new  <	; BinaryAdd Â£temporary1664 Â£temporary1663 65>

875:
old  <	; Â£temporary1665 = int_to_int Â£temporary1664 (SignedInt -> SignedChar)>
new  <	; IntegralToIntegral Â£temporary1665 Â£temporary1664>

882:
old  <	; return Â£temporary1665>
new  <	; Return Â£temporary1665>

889:
old  <	; Â£temporary1666 = digit - int4$10#>
new  <	; BinarySubtract Â£temporary1666 digit 10>

894:
old  <	; Â£temporary1667 = Â£temporary1666 + int4$97#>
new  <	; BinaryAdd Â£temporary1667 Â£temporary1666 97>

898:
old  <	; Â£temporary1668 = int_to_int Â£temporary1667 (SignedInt -> SignedChar)>
new  <	; IntegralToIntegral Â£temporary1668 Â£temporary1667>

905:
old  <	; return Â£temporary1668>
new  <	; Return Â£temporary1668>

912:
old  <	; function end digitToChar>
new  <	; FunctionEnd digitToChar>

917:
old  <	; if unsignedValue <= int8$0# goto 22>
new  <	; UnsignedLessThanEqual 22 unsignedValue 0>

922:
old  <	; Â£temporary1671 = unsignedValue % base>
new  <	; UnsignedModulo Â£temporary1671 unsignedValue base>

928:
old  <	; Â£temporary1672 = int_to_int Â£temporary1671 (UnsignedLongInt -> SignedInt)>
new  <	; IntegralToIntegral Â£temporary1672 Â£temporary1671>

931:
old  <	; digit = Â£temporary1672>
new  <	; Assign digit Â£temporary1672>

935:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

938:
old  <	; Â£temporary1673 = unsignedValue / base>
new  <	; UnsignedDivide Â£temporary1673 unsignedValue base>

944:
old  <	; parameter Â£temporary1673, offset 72>
new  <	; Parameter unsignedlongint Â£temporary1673 72>

948:
old  <	; parameter base, offset 80>
new  <	; Parameter unsignedlongint base 80>

953:
old  <	; parameter capital, offset 88>
new  <	; Parameter signedint capital 88>

958:
old  <	; call function noellipse-noellipse printUnsignedLongRec>
new  <	; Call printUnsignedLongRec 48 0>

965:
old  <	; post call>
new  <	; PostCall 48>

968:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

971:
old  <	; parameter digit, offset 72>
new  <	; Parameter signedint digit 72>

976:
old  <	; parameter capital, offset 76>
new  <	; Parameter signedint capital 76>

981:
old  <	; call function noellipse-noellipse digitToChar>
new  <	; Call digitToChar 48 0>

988:
old  <	; post call>
new  <	; PostCall 48>

991:
old  <	; Â£temporary1675 = return_value>
new  <	; GetReturnValue Â£temporary1675>

994:
old  <	; c = Â£temporary1675>
new  <	; Assign c Â£temporary1675>

998:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1001:
old  <	; parameter c, offset 73>
new  <	; Parameter signedchar c 73>

1006:
old  <	; call function noellipse-noellipse printChar>
new  <	; Call printChar 49 0>

1013:
old  <	; post call>
new  <	; PostCall 49>

1016:
old  <	; return>
new  <	; Return>

1023:
old  <	; function end printUnsignedLongRec>
new  <	; FunctionEnd printUnsignedLongRec>

1028:
old  <	; if plus == int4$0# goto 5>
new  <	; Equal 5 plus 0>

1033:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1036:
old  <	; parameter int1$43#, offset 80>
new  <	; Parameter signedchar 43 80>

1040:
old  <	; call function noellipse-noellipse printChar>
new  <	; Call printChar 56 0>

1047:
old  <	; post call>
new  <	; PostCall 56>

1050:
old  <	; if space == int4$0# goto 10>
new  <	; Equal 10 space 0>

1055:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1058:
old  <	; parameter int1$32#, offset 80>
new  <	; Parameter signedchar 32 80>

1062:
old  <	; call function noellipse-noellipse printChar>
new  <	; Call printChar 56 0>

1069:
old  <	; post call>
new  <	; PostCall 56>

1072:
old  <	; if grid == int4$0# goto 29>
new  <	; Equal 29 grid 0>

1077:
old  <	; if base != int8$8# goto 16>
new  <	; NotEqual 16 base 8>

1082:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1085:
old  <	; parameter int1$48#, offset 80>
new  <	; Parameter signedchar 48 80>

1089:
old  <	; call function noellipse-noellipse printChar>
new  <	; Call printChar 56 0>

1096:
old  <	; post call>
new  <	; PostCall 56>

1099:
old  <	; if base != int8$16# goto 29>
new  <	; NotEqual 29 base 16>

1104:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1107:
old  <	; parameter int1$48#, offset 80>
new  <	; Parameter signedchar 48 80>

1111:
old  <	; call function noellipse-noellipse printChar>
new  <	; Call printChar 56 0>

1118:
old  <	; post call>
new  <	; PostCall 56>

1121:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1124:
old  <	; if capital == int4$0# goto 25>
new  <	; Equal 25 capital 0>

1129:
old  <	; Â£temporary1686 = int1$88#>
new  <	; Assign Â£temporary1686 88>

1133:
old  <	; goto 26>
new  <	; Goto 26>

1137:
old  <	; Â£temporary1686 = int1$120#>
new  <	; Assign Â£temporary1686 120>

1141:
old  <	; parameter Â£temporary1686, offset 80>
new  <	; Parameter signedchar Â£temporary1686 80>

1145:
old  <	; call function noellipse-noellipse printChar>
new  <	; Call printChar 56 0>

1152:
old  <	; post call>
new  <	; PostCall 56>

1155:
old  <	; if unsignedValue != int8$0# goto 35>
new  <	; NotEqual 35 unsignedValue 0>

1160:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1163:
old  <	; parameter int1$48#, offset 80>
new  <	; Parameter signedchar 48 80>

1167:
old  <	; call function noellipse-noellipse printChar>
new  <	; Call printChar 56 0>

1174:
old  <	; post call>
new  <	; PostCall 56>

1177:
old  <	; goto 41>
new  <	; Goto 41>

1181:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1184:
old  <	; parameter unsignedValue, offset 80>
new  <	; Parameter unsignedlongint unsignedValue 80>

1189:
old  <	; parameter base, offset 88>
new  <	; Parameter unsignedlongint base 88>

1194:
old  <	; parameter capital, offset 96>
new  <	; Parameter signedint capital 96>

1199:
old  <	; call function noellipse-noellipse printUnsignedLongRec>
new  <	; Call printUnsignedLongRec 56 0>

1206:
old  <	; post call>
new  <	; PostCall 56>

1209:
old  <	; return>
new  <	; Return>

1216:
old  <	; function end printUnsignedLong>
new  <	; FunctionEnd printUnsignedLong>

1221:
old  <	; initializer zero 8>
new  <	; InitializerZero 8>

1227:
old  <	; initializer LongDouble>
new  <	; Initializer LongDouble 10.0>

1233:
old  <	; initializer zero 4>
new  <	; InitializerZero 4>

1239:
old  <	; push float longDoubleValue>
new  <	; PushFloat longDoubleValue>

1243:
old  <	; push float longDoubleValue>
new  <	; PushFloat longDoubleValue>

1247:
old  <	; Â£temporary1692 = float_to_int longDoubleValue (LongDouble -> Signed_Long_Int)>
new  <	; FloatingToIntegral Â£temporary1692 longDoubleValue>

1252:
old  <	; Â£temporary1693 = int_to_float Â£temporary1692 (Signed_Long_Int -> LongDouble)>
new  <	; IntegralToFloating Â£temporary1693 Â£temporary1692>

1257:
old  <	; Â£temporary1694 = longDoubleValue - Â£temporary1693>
new  <	; BinarySubtract Â£temporary1694 longDoubleValue Â£temporary1693>

1261:
old  <	; pop float longDoubleValue>
new  <	; PopFloat longDoubleValue>

1265:
old  <	; if precision != int4$0# goto 8>
new  <	; NotEqual 8 precision 0>

1270:
old  <	; precision = int4$9#>
new  <	; Assign precision 9>

1274:
old  <	; if grid != int4$0# goto 10>
new  <	; NotEqual 10 grid 0>

1279:
old  <	; if precision <= int4$0# goto 14>
new  <	; SignedLessThanEqual 14 precision 0>

1284:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1287:
old  <	; parameter int1$46#, offset 64>
new  <	; Parameter signedchar 46 64>

1291:
old  <	; call function noellipse-noellipse printChar>
new  <	; Call printChar 40 0>

1298:
old  <	; post call>
new  <	; PostCall 40>

1301:
old  <	; Â£temporary1700 = precision>
new  <	; Assign Â£temporary1700 precision>

1305:
old  <	; precision = precision - int4$1#>
new  <	; BinarySubtract precision precision 1>

1309:
old  <	; if Â£temporary1700 <= int4$0# goto 34>
new  <	; SignedLessThanEqual 34 Â£temporary1700 0>

1314:
old  <	; push float float8$10.0#>
new  <	; PushFloat 10.0>

1318:
old  <	; push float longDoubleValue>
new  <	; PushFloat longDoubleValue>

1322:
old  <	; Â£temporary1702 = float8$10.0# * longDoubleValue>
new  <	; SignedMultiply Â£temporary1702 10.0 longDoubleValue>

1326:
old  <	; top float longDoubleValue10>
new  <	; TopFloat longDoubleValue10>

1330:
old  <	; Â£temporary1703 = float_to_int longDoubleValue10 (LongDouble -> SignedInt)>
new  <	; FloatingToIntegral Â£temporary1703 longDoubleValue10>

1335:
old  <	; digitValue = Â£temporary1703>
new  <	; Assign digitValue Â£temporary1703>

1339:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1342:
old  <	; Â£temporary1704 = digitValue + int4$48#>
new  <	; BinaryAdd Â£temporary1704 digitValue 48>

1347:
old  <	; Â£temporary1705 = int_to_int Â£temporary1704 (SignedInt -> SignedChar)>
new  <	; IntegralToIntegral Â£temporary1705 Â£temporary1704>

1354:
old  <	; parameter Â£temporary1705, offset 76>
new  <	; Parameter signedchar Â£temporary1705 76>

1358:
old  <	; call function noellipse-noellipse printChar>
new  <	; Call printChar 52 0>

1365:
old  <	; post call>
new  <	; PostCall 52>

1368:
old  <	; push float longDoubleValue10>
new  <	; PushFloat longDoubleValue10>

1372:
old  <	; Â£temporary1707 = int_to_float digitValue (SignedInt -> LongDouble)>
new  <	; IntegralToFloating Â£temporary1707 digitValue>

1376:
old  <	; Â£temporary1708 = longDoubleValue10 - Â£temporary1707>
new  <	; BinarySubtract Â£temporary1708 longDoubleValue10 Â£temporary1707>

1380:
old  <	; pop float longDoubleValue>
new  <	; PopFloat longDoubleValue>

1384:
old  <	; goto 14>
new  <	; Goto 14>

1388:
old  <	; return>
new  <	; Return>

1395:
old  <	; function end printLongDoubleFraction>
new  <	; FunctionEnd printLongDoubleFraction>

1400:
old  <	; push float longDoubleValue>
new  <	; PushFloat longDoubleValue>

1404:
old  <	; push float float8$0.0#>
new  <	; PushFloat 0.0>

1408:
old  <	; if longDoubleValue >= float8$0.0# goto 12>
new  <	; SignedGreaterThanEqual 12 longDoubleValue 0.0>

1415:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1418:
old  <	; parameter int1$45#, offset 72>
new  <	; Parameter signedchar 45 72>

1422:
old  <	; call function noellipse-noellipse printChar>
new  <	; Call printChar 48 0>

1429:
old  <	; post call>
new  <	; PostCall 48>

1432:
old  <	; push float longDoubleValue>
new  <	; PushFloat longDoubleValue>

1436:
old  <	; Â£temporary1711 = -longDoubleValue>
new  <	; UnarySubtract Â£temporary1711 longDoubleValue>

1440:
old  <	; pop float longDoubleValue>
new  <	; PopFloat longDoubleValue>

1444:
old  <	; plus = int4$0#>
new  <	; Assign plus 0>

1448:
old  <	; space = int4$0#>
new  <	; Assign space 0>

1452:
old  <	; push float longDoubleValue>
new  <	; PushFloat longDoubleValue>

1456:
old  <	; Â£temporary1712 = float_to_int longDoubleValue (LongDouble -> Signed_Long_Int)>
new  <	; FloatingToIntegral Â£temporary1712 longDoubleValue>

1461:
old  <	; longValue = Â£temporary1712>
new  <	; Assign longValue Â£temporary1712>

1465:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1468:
old  <	; parameter longValue, offset 80>
new  <	; Parameter signed long int longValue 80>

1473:
old  <	; parameter plus, offset 88>
new  <	; Parameter signedint plus 88>

1478:
old  <	; parameter space, offset 92>
new  <	; Parameter signedint space 92>

1483:
old  <	; call function noellipse-noellipse printLongInt>
new  <	; Call printLongInt 56 0>

1490:
old  <	; post call>
new  <	; PostCall 56>

1493:
old  <	; push float longDoubleValue>
new  <	; PushFloat longDoubleValue>

1497:
old  <	; Â£temporary1714 = int_to_float longValue (Signed_Long_Int -> LongDouble)>
new  <	; IntegralToFloating Â£temporary1714 longValue>

1501:
old  <	; Â£temporary1715 = longDoubleValue - Â£temporary1714>
new  <	; BinarySubtract Â£temporary1715 longDoubleValue Â£temporary1714>

1505:
old  <	; pop float longDoubleValue>
new  <	; PopFloat longDoubleValue>

1509:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1512:
old  <	; push float longDoubleValue>
new  <	; PushFloat longDoubleValue>

1516:
old  <	; parameter longDoubleValue, offset 80>
new  <	; Parameter longdouble longDoubleValue 80>

1520:
old  <	; parameter grid, offset 88>
new  <	; Parameter signedint grid 88>

1525:
old  <	; parameter precision, offset 92>
new  <	; Parameter signedint precision 92>

1530:
old  <	; call function noellipse-noellipse printLongDoubleFraction>
new  <	; Call printLongDoubleFraction 56 0>

1537:
old  <	; post call>
new  <	; PostCall 56>

1540:
old  <	; return>
new  <	; Return>

1547:
old  <	; function end printLongDoublePlain>
new  <	; FunctionEnd printLongDoublePlain>

1552:
old  <	; push float value>
new  <	; PushFloat value>

1556:
old  <	; push float float8$0.0#>
new  <	; PushFloat 0.0>

1560:
old  <	; if value != float8$0.0# goto 27>
new  <	; NotEqual 27 value 0.0>

1567:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1570:
old  <	; parameter int1$48#, offset 76>
new  <	; Parameter signedchar 48 76>

1574:
old  <	; call function noellipse-noellipse printChar>
new  <	; Call printChar 52 0>

1581:
old  <	; post call>
new  <	; PostCall 52>

1584:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1587:
old  <	; push float float8$0.0#>
new  <	; PushFloat 0.0>

1591:
old  <	; parameter float8$0.0#, offset 76>
new  <	; Parameter longdouble 0.0 76>

1595:
old  <	; parameter precision, offset 84>
new  <	; Parameter signedint precision 84>

1600:
old  <	; parameter grid, offset 88>
new  <	; Parameter signedint grid 88>

1605:
old  <	; call function noellipse-noellipse printLongDoubleFraction>
new  <	; Call printLongDoubleFraction 52 0>

1612:
old  <	; post call>
new  <	; PostCall 52>

1615:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1618:
old  <	; if capital == int4$0# goto 18>
new  <	; Equal 18 capital 0>

1623:
old  <	; Â£temporary1722 = int1$69#>
new  <	; Assign Â£temporary1722 69>

1627:
old  <	; goto 19>
new  <	; Goto 19>

1631:
old  <	; Â£temporary1722 = int1$101#>
new  <	; Assign Â£temporary1722 101>

1635:
old  <	; parameter Â£temporary1722, offset 76>
new  <	; Parameter signedchar Â£temporary1722 76>

1639:
old  <	; call function noellipse-noellipse printChar>
new  <	; Call printChar 52 0>

1646:
old  <	; post call>
new  <	; PostCall 52>

1649:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1652:
old  <	; parameter int1$48#, offset 76>
new  <	; Parameter signedchar 48 76>

1656:
old  <	; call function noellipse-noellipse printChar>
new  <	; Call printChar 52 0>

1663:
old  <	; post call>
new  <	; PostCall 52>

1666:
old  <	; goto 80>
new  <	; Goto 80>

1670:
old  <	; push float value>
new  <	; PushFloat value>

1674:
old  <	; push float float8$0.0#>
new  <	; PushFloat 0.0>

1678:
old  <	; if value >= float8$0.0# goto 37>
new  <	; SignedGreaterThanEqual 37 value 0.0>

1685:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1688:
old  <	; parameter int1$45#, offset 76>
new  <	; Parameter signedchar 45 76>

1692:
old  <	; call function noellipse-noellipse printChar>
new  <	; Call printChar 52 0>

1699:
old  <	; post call>
new  <	; PostCall 52>

1702:
old  <	; push float value>
new  <	; PushFloat value>

1706:
old  <	; Â£temporary1727 = -value>
new  <	; UnarySubtract Â£temporary1727 value>

1710:
old  <	; pop float value>
new  <	; PopFloat value>

1714:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1717:
old  <	; push float value>
new  <	; PushFloat value>

1721:
old  <	; parameter value, offset 76>
new  <	; Parameter double value 76>

1725:
old  <	; call function noellipse-noellipse log10>
new  <	; Call log10 52 0>

1732:
old  <	; post call>
new  <	; PostCall 52>

1735:
old  <	; Â£temporary1728 = return_value>
new  <	; GetReturnValue Â£temporary1728>

1738:
old  <	; Â£temporary1729 = float_to_int Â£temporary1728 (Double -> SignedInt)>
new  <	; FloatingToIntegral Â£temporary1729 Â£temporary1728>

1743:
old  <	; expo = Â£temporary1729>
new  <	; Assign expo Â£temporary1729>

1747:
old  <	; push float value>
new  <	; PushFloat value>

1751:
old  <	; call header integral zero 0 stack no zero 1>
new  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 1>

1755:
old  <	; push float float8$10.0#>
new  <	; PushFloat 10.0>

1759:
old  <	; parameter float8$10.0#, offset 80>
new  <	; Parameter double 10.0 80>

1763:
old  <	; Â£temporary1730 = int_to_float expo (SignedInt -> Double)>
new  <	; IntegralToFloating Â£temporary1730 expo>

1767:
old  <	; parameter Â£temporary1730, offset 88>
new  <	; Parameter double Â£temporary1730 88>

1771:
old  <	; call function noellipse-noellipse pow>
new  <	; Call pow 56 0>

1778:
old  <	; post call>
new  <	; PostCall 56>

1784:
old  <	; Â£temporary1731 = return_value>
new  <	; GetReturnValue Â£temporary1731>

1787:
old  <	; Â£temporary1732 = value / Â£temporary1731>
new  <	; SignedDivide Â£temporary1732 value Â£temporary1731>

1791:
old  <	; pop float value>
new  <	; PopFloat value>

1795:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1798:
old  <	; push float value>
new  <	; PushFloat value>

1802:
old  <	; parameter value, offset 80>
new  <	; Parameter longdouble value 80>

1806:
old  <	; parameter plus, offset 88>
new  <	; Parameter signedint plus 88>

1811:
old  <	; parameter space, offset 92>
new  <	; Parameter signedint space 92>

1816:
old  <	; parameter grid, offset 96>
new  <	; Parameter signedint grid 96>

1821:
old  <	; parameter precision, offset 100>
new  <	; Parameter signedint precision 100>

1826:
old  <	; call function noellipse-noellipse printLongDoublePlain>
new  <	; Call printLongDoublePlain 56 0>

1833:
old  <	; post call>
new  <	; PostCall 56>

1836:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1839:
old  <	; if capital == int4$0# goto 69>
new  <	; Equal 69 capital 0>

1844:
old  <	; Â£temporary1735 = int1$69#>
new  <	; Assign Â£temporary1735 69>

1848:
old  <	; goto 70>
new  <	; Goto 70>

1852:
old  <	; Â£temporary1735 = int1$101#>
new  <	; Assign Â£temporary1735 101>

1856:
old  <	; parameter Â£temporary1735, offset 80>
new  <	; Parameter signedchar Â£temporary1735 80>

1860:
old  <	; call function noellipse-noellipse printChar>
new  <	; Call printChar 56 0>

1867:
old  <	; post call>
new  <	; PostCall 56>

1870:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1873:
old  <	; Â£temporary1737 = int_to_int expo (SignedInt -> Signed_Long_Int)>
new  <	; IntegralToIntegral Â£temporary1737 expo>

1883:
old  <	; parameter Â£temporary1737, offset 80>
new  <	; Parameter signed long int Â£temporary1737 80>

1887:
old  <	; parameter int4$1#, offset 88>
new  <	; Parameter signedint 1 88>

1891:
old  <	; parameter int4$0#, offset 92>
new  <	; Parameter signedint 0 92>

1895:
old  <	; call function noellipse-noellipse printLongInt>
new  <	; Call printLongInt 56 0>

1902:
old  <	; post call>
new  <	; PostCall 56>

1905:
old  <	; return>
new  <	; Return>

1912:
old  <	; function end printLongDoubleExpo>
new  <	; FunctionEnd printLongDoubleExpo>

1917:
old  <	; if widthPtr == int8$0# goto 9>
new  <	; Equal 9 widthPtr 0>

1922:
old  <	; Â£temporary1745 -> widthPtr = *widthPtr>
new  <	; Dereference Â£temporary1745 -> widthPtr widthPtr 0>

1926:
old  <	; if Â£temporary1745 -> widthPtr != int4$minus1# goto 9>
new  <	; NotEqual 9 Â£temporary1745 -> widthPtr -1>

1931:
old  <	; Â£temporary1748 -> widthPtr = *widthPtr>
new  <	; Dereference Â£temporary1748 -> widthPtr widthPtr 0>

1935:
old  <	; arg_list = arg_list + int8$4#>
new  <	; BinaryAdd arg_list arg_list 4>

1939:
old  <	; Â£temporary1751 = arg_list - int8$4#>
new  <	; BinarySubtract Â£temporary1751 arg_list 4>

1944:
old  <	; Â£temporary1753 = int_to_int Â£temporary1751 (Pointer -> Pointer)>
new  <	; IntegralToIntegral Â£temporary1753 Â£temporary1751>

1947:
old  <	; Â£temporary1754 -> Â£temporary1753 = *Â£temporary1753>
new  <	; Dereference Â£temporary1754 -> Â£temporary1753 Â£temporary1753 0>

1950:
old  <	; Â£temporary1748 -> widthPtr = Â£temporary1754 -> Â£temporary1753>
new  <	; Assign Â£temporary1748 -> widthPtr Â£temporary1754 -> Â£temporary1753>

1955:
old  <	; if precisionPtr == int8$0# goto 18>
new  <	; Equal 18 precisionPtr 0>

1960:
old  <	; Â£temporary1756 -> precisionPtr = *precisionPtr>
new  <	; Dereference Â£temporary1756 -> precisionPtr precisionPtr 0>

1964:
old  <	; if Â£temporary1756 -> precisionPtr != int4$minus1# goto 18>
new  <	; NotEqual 18 Â£temporary1756 -> precisionPtr -1>

1969:
old  <	; Â£temporary1759 -> precisionPtr = *precisionPtr>
new  <	; Dereference Â£temporary1759 -> precisionPtr precisionPtr 0>

1973:
old  <	; arg_list = arg_list + int8$4#>
new  <	; BinaryAdd arg_list arg_list 4>

1977:
old  <	; Â£temporary1762 = arg_list - int8$4#>
new  <	; BinarySubtract Â£temporary1762 arg_list 4>

1982:
old  <	; Â£temporary1764 = int_to_int Â£temporary1762 (Pointer -> Pointer)>
new  <	; IntegralToIntegral Â£temporary1764 Â£temporary1762>

1985:
old  <	; Â£temporary1765 -> Â£temporary1764 = *Â£temporary1764>
new  <	; Dereference Â£temporary1765 -> Â£temporary1764 Â£temporary1764 0>

1988:
old  <	; Â£temporary1759 -> precisionPtr = Â£temporary1765 -> Â£temporary1764>
new  <	; Assign Â£temporary1759 -> precisionPtr Â£temporary1765 -> Â£temporary1764>

1993:
old  <	; return arg_list>
new  <	; Return arg_list>

2001:
old  <	; function end checkWidthAndPrecision>
new  <	; FunctionEnd checkWidthAndPrecision>

2006:
old  <	; empty>
new  <	; Empty>

2009:
old  <	; return>
new  <	; Return>

2016:
old  <	; function end testY>
new  <	; FunctionEnd testY>

2021:
old  <	; empty>
new  <	; Empty>

2024:
old  <	; if j != int4$1# goto 4>
new  <	; NotEqual 4 j 1>

2029:
old  <	; i = int4$1#>
new  <	; Assign i 1>

2033:
old  <	; goto 5>
new  <	; Goto 5>

2037:
old  <	; i = int4$2#>
new  <	; Assign i 2>

2041:
old  <	; j = i>
new  <	; Assign j i>

2046:
old  <	; return>
new  <	; Return>

2053:
old  <	; function end testX>
new  <	; FunctionEnd testX>

2058:
old  <	; Â£temporary1767 -> format = *format>
new  <	; Dereference Â£temporary1767 -> format format 0>

2062:
old  <	; c = Â£temporary1767 -> format>
new  <	; Assign c Â£temporary1767 -> format>

2067:
old  <	; case c == int1$100# goto 21>
new  <	; Case 21 c 100>

2073:
old  <	; case c == int1$105# goto 21>
new  <	; Case 21 c 105>

2078:
old  <	; case c == int1$99# goto 73>
new  <	; Case 73 c 99>

2083:
old  <	; case c == int1$115# goto 93>
new  <	; Case 93 c 115>

2088:
old  <	; case c == int1$88# goto 113>
new  <	; Case 113 c 88>

2093:
old  <	; case c == int1$120# goto 113>
new  <	; Case 113 c 120>

2098:
old  <	; case c == int1$98# goto 113>
new  <	; Case 113 c 98>

2103:
old  <	; case c == int1$111# goto 113>
new  <	; Case 113 c 111>

2108:
old  <	; case c == int1$117# goto 113>
new  <	; Case 113 c 117>

2113:
old  <	; case c == int1$71# goto 173>
new  <	; Case 173 c 71>

2118:
old  <	; case c == int1$103# goto 173>
new  <	; Case 173 c 103>

2123:
old  <	; case c == int1$69# goto 173>
new  <	; Case 173 c 69>

2128:
old  <	; case c == int1$101# goto 173>
new  <	; Case 173 c 101>

2133:
old  <	; case c == int1$102# goto 173>
new  <	; Case 173 c 102>

2138:
old  <	; case c == int1$112# goto 299>
new  <	; Case 299 c 112>

2143:
old  <	; case c == int1$110# goto 324>
new  <	; Case 324 c 110>

2148:
old  <	; case c == int1$37# goto 346>
new  <	; Case 346 c 37>

2153:
old  <	; case end c>
new  <	; CaseEnd c>

2156:
old  <	; goto 359>
new  <	; Goto 359>

2160:
old  <	; if shortInt == int4$0# goto 30>
new  <	; Equal 30 shortInt 0>

2165:
old  <	; arg_list = arg_list + int8$4#>
new  <	; BinaryAdd arg_list arg_list 4>

2169:
old  <	; Â£temporary1770 = arg_list - int8$4#>
new  <	; BinarySubtract Â£temporary1770 arg_list 4>

2174:
old  <	; Â£temporary1772 = int_to_int Â£temporary1770 (Pointer -> Pointer)>
new  <	; IntegralToIntegral Â£temporary1772 Â£temporary1770>

2177:
old  <	; Â£temporary1773 -> Â£temporary1772 = *Â£temporary1772>
new  <	; Dereference Â£temporary1773 -> Â£temporary1772 Â£temporary1772 0>

2180:
old  <	; Â£temporary1774 = int_to_int Â£temporary1773 -> Â£temporary1772 (SignedInt -> SignedShortInt)>
new  <	; IntegralToIntegral Â£temporary1774 Â£temporary1773 -> Â£temporary1772>

2188:
old  <	; Â£temporary1775 = int_to_int Â£temporary1774 (SignedShortInt -> Signed_Long_Int)>
new  <	; IntegralToIntegral Â£temporary1775 Â£temporary1774>

2197:
old  <	; longValue = Â£temporary1775>
new  <	; Assign longValue Â£temporary1775>

2201:
old  <	; goto 43>
new  <	; Goto 43>

2205:
old  <	; if longInt == int4$0# goto 37>
new  <	; Equal 37 longInt 0>

2210:
old  <	; arg_list = arg_list + int8$8#>
new  <	; BinaryAdd arg_list arg_list 8>

2214:
old  <	; Â£temporary1778 = arg_list - int8$8#>
new  <	; BinarySubtract Â£temporary1778 arg_list 8>

2219:
old  <	; Â£temporary1780 = int_to_int Â£temporary1778 (Pointer -> Pointer)>
new  <	; IntegralToIntegral Â£temporary1780 Â£temporary1778>

2222:
old  <	; Â£temporary1781 -> Â£temporary1780 = *Â£temporary1780>
new  <	; Dereference Â£temporary1781 -> Â£temporary1780 Â£temporary1780 0>

2225:
old  <	; longValue = Â£temporary1781 -> Â£temporary1780>
new  <	; Assign longValue Â£temporary1781 -> Â£temporary1780>

2230:
old  <	; goto 43>
new  <	; Goto 43>

2234:
old  <	; arg_list = arg_list + int8$4#>
new  <	; BinaryAdd arg_list arg_list 4>

2238:
old  <	; Â£temporary1784 = arg_list - int8$4#>
new  <	; BinarySubtract Â£temporary1784 arg_list 4>

2243:
old  <	; Â£temporary1786 = int_to_int Â£temporary1784 (Pointer -> Pointer)>
new  <	; IntegralToIntegral Â£temporary1786 Â£temporary1784>

2246:
old  <	; Â£temporary1787 -> Â£temporary1786 = *Â£temporary1786>
new  <	; Dereference Â£temporary1787 -> Â£temporary1786 Â£temporary1786 0>

2249:
old  <	; Â£temporary1788 = int_to_int Â£temporary1787 -> Â£temporary1786 (SignedInt -> Signed_Long_Int)>
new  <	; IntegralToIntegral Â£temporary1788 Â£temporary1787 -> Â£temporary1786>

2259:
old  <	; longValue = Â£temporary1788>
new  <	; Assign longValue Â£temporary1788>

2263:
old  <	; if negativePtr == int8$0# goto 50>
new  <	; Equal 50 negativePtr 0>

2268:
old  <	; Â£temporary1792 -> negativePtr = *negativePtr>
new  <	; Dereference Â£temporary1792 -> negativePtr negativePtr 0>

2272:
old  <	; if longValue >= int8$0# goto 48>
new  <	; SignedGreaterThanEqual 48 longValue 0>

2277:
old  <	; Â£temporary1794 = int4$1#>
new  <	; Assign Â£temporary1794 1>

2281:
old  <	; goto 49>
new  <	; Goto 49>

2285:
old  <	; Â£temporary1794 = int4$0#>
new  <	; Assign Â£temporary1794 0>

2289:
old  <	; Â£temporary1792 -> negativePtr = Â£temporary1794>
new  <	; Assign Â£temporary1792 -> negativePtr Â£temporary1794>

2293:
old  <	; if sign != int4$0# goto 57>
new  <	; NotEqual 57 sign 0>

2298:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 122 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2301:
old  <	; parameter longValue, offset 146>
new  <	; Parameter signed long int longValue 146>

2306:
old  <	; call function noellipse-noellipse labs>
new  <	; Call labs 122 0>

2313:
old  <	; post call>
new  <	; PostCall 122>

2316:
old  <	; Â£temporary1797 = return_value>
new  <	; GetReturnValue Â£temporary1797>

2319:
old  <	; longValue = Â£temporary1797>
new  <	; Assign longValue Â£temporary1797>

2323:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 122 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2326:
old  <	; parameter arg_list, offset 146>
new  <	; Parameter pointer arg_list 146>

2331:
old  <	; parameter widthPtr, offset 154>
new  <	; Parameter pointer widthPtr 154>

2336:
old  <	; Â£temporary1798 = &precision>
new  <	; Address Â£temporary1798 precision>

2341:
old  <	; parameter Â£temporary1798, offset 162>
new  <	; Parameter pointer Â£temporary1798 162>

2345:
old  <	; call function noellipse-noellipse checkWidthAndPrecision>
new  <	; Call checkWidthAndPrecision 122 0>

2352:
old  <	; post call>
new  <	; PostCall 122>

2355:
old  <	; Â£temporary1799 = return_value>
new  <	; GetReturnValue Â£temporary1799>

2358:
old  <	; arg_list = Â£temporary1799>
new  <	; Assign arg_list Â£temporary1799>

2362:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 122 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2365:
old  <	; parameter longValue, offset 146>
new  <	; Parameter signed long int longValue 146>

2370:
old  <	; parameter plus, offset 154>
new  <	; Parameter signedint plus 154>

2375:
old  <	; parameter space, offset 158>
new  <	; Parameter signedint space 158>

2380:
old  <	; call function noellipse-noellipse printLongInt>
new  <	; Call printLongInt 122 0>

2387:
old  <	; post call>
new  <	; PostCall 122>

2390:
old  <	; goto 359>
new  <	; Goto 359>

2394:
old  <	; arg_list = arg_list + int8$4#>
new  <	; BinaryAdd arg_list arg_list 4>

2398:
old  <	; Â£temporary1803 = arg_list - int8$4#>
new  <	; BinarySubtract Â£temporary1803 arg_list 4>

2403:
old  <	; Â£temporary1805 = int_to_int Â£temporary1803 (Pointer -> Pointer)>
new  <	; IntegralToIntegral Â£temporary1805 Â£temporary1803>

2406:
old  <	; Â£temporary1806 -> Â£temporary1805 = *Â£temporary1805>
new  <	; Dereference Â£temporary1806 -> Â£temporary1805 Â£temporary1805 0>

2409:
old  <	; Â£temporary1807 = int_to_int Â£temporary1806 -> Â£temporary1805 (SignedInt -> SignedChar)>
new  <	; IntegralToIntegral Â£temporary1807 Â£temporary1806 -> Â£temporary1805>

2417:
old  <	; charValue = Â£temporary1807>
new  <	; Assign charValue Â£temporary1807>

2421:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 114 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2424:
old  <	; parameter arg_list, offset 138>
new  <	; Parameter pointer arg_list 138>

2429:
old  <	; parameter widthPtr, offset 146>
new  <	; Parameter pointer widthPtr 146>

2434:
old  <	; Â£temporary1808 = &precision>
new  <	; Address Â£temporary1808 precision>

2439:
old  <	; parameter Â£temporary1808, offset 154>
new  <	; Parameter pointer Â£temporary1808 154>

2443:
old  <	; call function noellipse-noellipse checkWidthAndPrecision>
new  <	; Call checkWidthAndPrecision 114 0>

2450:
old  <	; post call>
new  <	; PostCall 114>

2453:
old  <	; Â£temporary1809 = return_value>
new  <	; GetReturnValue Â£temporary1809>

2456:
old  <	; arg_list = Â£temporary1809>
new  <	; Assign arg_list Â£temporary1809>

2460:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 114 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2463:
old  <	; parameter charValue, offset 138>
new  <	; Parameter signedchar charValue 138>

2468:
old  <	; call function noellipse-noellipse printChar>
new  <	; Call printChar 114 0>

2475:
old  <	; post call>
new  <	; PostCall 114>

2478:
old  <	; goto 359>
new  <	; Goto 359>

2482:
old  <	; arg_list = arg_list + int8$8#>
new  <	; BinaryAdd arg_list arg_list 8>

2486:
old  <	; Â£temporary1813 = arg_list - int8$8#>
new  <	; BinarySubtract Â£temporary1813 arg_list 8>

2491:
old  <	; Â£temporary1815 = int_to_int Â£temporary1813 (Pointer -> Pointer)>
new  <	; IntegralToIntegral Â£temporary1815 Â£temporary1813>

2494:
old  <	; Â£temporary1816 -> Â£temporary1815 = *Â£temporary1815>
new  <	; Dereference Â£temporary1816 -> Â£temporary1815 Â£temporary1815 0>

2497:
old  <	; stringValue = Â£temporary1816 -> Â£temporary1815>
new  <	; Assign stringValue Â£temporary1816 -> Â£temporary1815>

2502:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 122 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2505:
old  <	; parameter arg_list, offset 146>
new  <	; Parameter pointer arg_list 146>

2510:
old  <	; parameter widthPtr, offset 154>
new  <	; Parameter pointer widthPtr 154>

2515:
old  <	; Â£temporary1817 = &precision>
new  <	; Address Â£temporary1817 precision>

2520:
old  <	; parameter Â£temporary1817, offset 162>
new  <	; Parameter pointer Â£temporary1817 162>

2524:
old  <	; call function noellipse-noellipse checkWidthAndPrecision>
new  <	; Call checkWidthAndPrecision 122 0>

2531:
old  <	; post call>
new  <	; PostCall 122>

2534:
old  <	; Â£temporary1818 = return_value>
new  <	; GetReturnValue Â£temporary1818>

2537:
old  <	; arg_list = Â£temporary1818>
new  <	; Assign arg_list Â£temporary1818>

2541:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 122 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2544:
old  <	; parameter stringValue, offset 146>
new  <	; Parameter pointer stringValue 146>

2549:
old  <	; parameter precision, offset 154>
new  <	; Parameter signedint precision 154>

2554:
old  <	; call function noellipse-noellipse printString>
new  <	; Call printString 122 0>

2561:
old  <	; post call>
new  <	; PostCall 122>

2564:
old  <	; goto 359>
new  <	; Goto 359>

2568:
old  <	; if c != int1$117# goto 116>
new  <	; NotEqual 116 c 117>

2573:
old  <	; Â£temporary1825 = int8$10#>
new  <	; Assign Â£temporary1825 10>

2577:
old  <	; goto 125>
new  <	; Goto 125>

2581:
old  <	; if c != int1$111# goto 119>
new  <	; NotEqual 119 c 111>

2586:
old  <	; Â£temporary1824 = int8$8#>
new  <	; Assign Â£temporary1824 8>

2590:
old  <	; goto 124>
new  <	; Goto 124>

2594:
old  <	; if c != int1$98# goto 122>
new  <	; NotEqual 122 c 98>

2599:
old  <	; Â£temporary1823 = int8$2#>
new  <	; Assign Â£temporary1823 2>

2603:
old  <	; goto 123>
new  <	; Goto 123>

2607:
old  <	; Â£temporary1823 = int8$16#>
new  <	; Assign Â£temporary1823 16>

2611:
old  <	; Â£temporary1824 = Â£temporary1823>
new  <	; Assign Â£temporary1824 Â£temporary1823>

2614:
old  <	; Â£temporary1825 = Â£temporary1824>
new  <	; Assign Â£temporary1825 Â£temporary1824>

2617:
old  <	; base = Â£temporary1825>
new  <	; Assign base Â£temporary1825>

2621:
old  <	; if shortInt == int4$0# goto 135>
new  <	; Equal 135 shortInt 0>

2626:
old  <	; arg_list = arg_list + int8$4#>
new  <	; BinaryAdd arg_list arg_list 4>

2630:
old  <	; Â£temporary1828 = arg_list - int8$4#>
new  <	; BinarySubtract Â£temporary1828 arg_list 4>

2635:
old  <	; Â£temporary1830 = int_to_int Â£temporary1828 (Pointer -> Pointer)>
new  <	; IntegralToIntegral Â£temporary1830 Â£temporary1828>

2638:
old  <	; Â£temporary1831 -> Â£temporary1830 = *Â£temporary1830>
new  <	; Dereference Â£temporary1831 -> Â£temporary1830 Â£temporary1830 0>

2641:
old  <	; Â£temporary1832 = int_to_int Â£temporary1831 -> Â£temporary1830 (Unsigned_Int -> UnsignedShortInt)>
new  <	; IntegralToIntegral Â£temporary1832 Â£temporary1831 -> Â£temporary1830>

2645:
old  <	; Â£temporary1833 = int_to_int Â£temporary1832 (UnsignedShortInt -> UnsignedLongInt)>
new  <	; IntegralToIntegral Â£temporary1833 Â£temporary1832>

2650:
old  <	; value = Â£temporary1833>
new  <	; Assign value Â£temporary1833>

2654:
old  <	; goto 148>
new  <	; Goto 148>

2658:
old  <	; if longInt == int4$0# goto 142>
new  <	; Equal 142 longInt 0>

2663:
old  <	; arg_list = arg_list + int8$8#>
new  <	; BinaryAdd arg_list arg_list 8>

2667:
old  <	; Â£temporary1836 = arg_list - int8$8#>
new  <	; BinarySubtract Â£temporary1836 arg_list 8>

2672:
old  <	; Â£temporary1838 = int_to_int Â£temporary1836 (Pointer -> Pointer)>
new  <	; IntegralToIntegral Â£temporary1838 Â£temporary1836>

2675:
old  <	; Â£temporary1839 -> Â£temporary1838 = *Â£temporary1838>
new  <	; Dereference Â£temporary1839 -> Â£temporary1838 Â£temporary1838 0>

2678:
old  <	; value = Â£temporary1839 -> Â£temporary1838>
new  <	; Assign value Â£temporary1839 -> Â£temporary1838>

2683:
old  <	; goto 148>
new  <	; Goto 148>

2687:
old  <	; arg_list = arg_list + int8$4#>
new  <	; BinaryAdd arg_list arg_list 4>

2691:
old  <	; Â£temporary1842 = arg_list - int8$4#>
new  <	; BinarySubtract Â£temporary1842 arg_list 4>

2696:
old  <	; Â£temporary1844 = int_to_int Â£temporary1842 (Pointer -> Pointer)>
new  <	; IntegralToIntegral Â£temporary1844 Â£temporary1842>

2699:
old  <	; Â£temporary1845 -> Â£temporary1844 = *Â£temporary1844>
new  <	; Dereference Â£temporary1845 -> Â£temporary1844 Â£temporary1844 0>

2702:
old  <	; Â£temporary1846 = int_to_int Â£temporary1845 -> Â£temporary1844 (Unsigned_Int -> UnsignedLongInt)>
new  <	; IntegralToIntegral Â£temporary1846 Â£temporary1845 -> Â£temporary1844>

2708:
old  <	; value = Â£temporary1846>
new  <	; Assign value Â£temporary1846>

2712:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 130 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2715:
old  <	; parameter arg_list, offset 154>
new  <	; Parameter pointer arg_list 154>

2720:
old  <	; parameter widthPtr, offset 162>
new  <	; Parameter pointer widthPtr 162>

2725:
old  <	; Â£temporary1849 = &precision>
new  <	; Address Â£temporary1849 precision>

2730:
old  <	; parameter Â£temporary1849, offset 170>
new  <	; Parameter pointer Â£temporary1849 170>

2734:
old  <	; call function noellipse-noellipse checkWidthAndPrecision>
new  <	; Call checkWidthAndPrecision 130 0>

2741:
old  <	; post call>
new  <	; PostCall 130>

2744:
old  <	; Â£temporary1850 = return_value>
new  <	; GetReturnValue Â£temporary1850>

2747:
old  <	; arg_list = Â£temporary1850>
new  <	; Assign arg_list Â£temporary1850>

2751:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 130 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2754:
old  <	; parameter value, offset 154>
new  <	; Parameter unsignedlongint value 154>

2759:
old  <	; parameter plus, offset 162>
new  <	; Parameter signedint plus 162>

2764:
old  <	; parameter space, offset 166>
new  <	; Parameter signedint space 166>

2769:
old  <	; parameter grid, offset 170>
new  <	; Parameter signedint grid 170>

2774:
old  <	; parameter base, offset 174>
new  <	; Parameter unsignedlongint base 174>

2779:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 130 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2782:
old  <	; Â£temporary1851 = int_to_int c (SignedChar -> SignedInt)>
new  <	; IntegralToIntegral Â£temporary1851 c>

2791:
old  <	; parameter Â£temporary1851, offset 206>
new  <	; Parameter signedint Â£temporary1851 206>

2795:
old  <	; call function noellipse-noellipse isupper>
new  <	; Call isupper 182 0>

2802:
old  <	; post call>
new  <	; PostCall 182>

2805:
old  <	; Â£temporary1852 = return_value>
new  <	; GetReturnValue Â£temporary1852>

2808:
old  <	; parameter Â£temporary1852, offset 182>
new  <	; Parameter signedint Â£temporary1852 182>

2812:
old  <	; call function noellipse-noellipse printUnsignedLong>
new  <	; Call printUnsignedLong 130 0>

2819:
old  <	; post call>
new  <	; PostCall 130>

2822:
old  <	; goto 359>
new  <	; Goto 359>

2826:
old  <	; if longDouble == int4$0# goto 190>
new  <	; Equal 190 longDouble 0>

2831:
old  <	; arg_list = arg_list + int8$8#>
new  <	; BinaryAdd arg_list arg_list 8>

2835:
old  <	; Â£temporary1856 = arg_list - int8$8#>
new  <	; BinarySubtract Â£temporary1856 arg_list 8>

2840:
old  <	; Â£temporary1858 = int_to_int Â£temporary1856 (Pointer -> Pointer)>
new  <	; IntegralToIntegral Â£temporary1858 Â£temporary1856>

2843:
old  <	; Â£temporary1859 -> Â£temporary1858 = *Â£temporary1858>
new  <	; Dereference Â£temporary1859 -> Â£temporary1858 Â£temporary1858 0>

2846:
old  <	; push float Â£temporary1859 -> Â£temporary1858>
new  <	; PushFloat Â£temporary1859 -> Â£temporary1858>

2850:
old  <	; pop float longDoubleValue>
new  <	; PopFloat longDoubleValue>

2854:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 114 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2857:
old  <	; push float longDoubleValue>
new  <	; PushFloat longDoubleValue>

2861:
old  <	; parameter longDoubleValue, offset 138>
new  <	; Parameter longdouble longDoubleValue 138>

2865:
old  <	; parameter int4$0#, offset 146>
new  <	; Parameter signedint 0 146>

2869:
old  <	; parameter int4$0#, offset 150>
new  <	; Parameter signedint 0 150>

2873:
old  <	; parameter int4$0#, offset 154>
new  <	; Parameter signedint 0 154>

2877:
old  <	; parameter int4$3#, offset 158>
new  <	; Parameter signedint 3 158>

2881:
old  <	; call function noellipse-noellipse printLongDoublePlain>
new  <	; Call printLongDoublePlain 114 0>

2888:
old  <	; post call>
new  <	; PostCall 114>

2891:
old  <	; goto 196>
new  <	; Goto 196>

2895:
old  <	; arg_list = arg_list + int8$8#>
new  <	; BinaryAdd arg_list arg_list 8>

2899:
old  <	; Â£temporary1863 = arg_list - int8$8#>
new  <	; BinarySubtract Â£temporary1863 arg_list 8>

2904:
old  <	; Â£temporary1865 = int_to_int Â£temporary1863 (Pointer -> Pointer)>
new  <	; IntegralToIntegral Â£temporary1865 Â£temporary1863>

2907:
old  <	; Â£temporary1866 -> Â£temporary1865 = *Â£temporary1865>
new  <	; Dereference Â£temporary1866 -> Â£temporary1865 Â£temporary1865 0>

2910:
old  <	; push float Â£temporary1866 -> Â£temporary1865>
new  <	; PushFloat Â£temporary1866 -> Â£temporary1865>

2914:
old  <	; pop float longDoubleValue>
new  <	; PopFloat longDoubleValue>

2918:
old  <	; if negativePtr == int8$0# goto 205>
new  <	; Equal 205 negativePtr 0>

2923:
old  <	; Â£temporary1870 -> negativePtr = *negativePtr>
new  <	; Dereference Â£temporary1870 -> negativePtr negativePtr 0>

2927:
old  <	; push float longDoubleValue>
new  <	; PushFloat longDoubleValue>

2931:
old  <	; push float float8$0#>
new  <	; PushFloat 0>

2935:
old  <	; if longDoubleValue >= float8$0# goto 203>
new  <	; SignedGreaterThanEqual 203 longDoubleValue 0>

2942:
old  <	; Â£temporary1872 = int4$1#>
new  <	; Assign Â£temporary1872 1>

2946:
old  <	; goto 204>
new  <	; Goto 204>

2950:
old  <	; Â£temporary1872 = int4$0#>
new  <	; Assign Â£temporary1872 0>

2954:
old  <	; Â£temporary1870 -> negativePtr = Â£temporary1872>
new  <	; Assign Â£temporary1870 -> negativePtr Â£temporary1872>

2958:
old  <	; if sign != int4$0# goto 213>
new  <	; NotEqual 213 sign 0>

2963:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 114 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2966:
old  <	; push float longDoubleValue>
new  <	; PushFloat longDoubleValue>

2970:
old  <	; parameter longDoubleValue, offset 138>
new  <	; Parameter double longDoubleValue 138>

2974:
old  <	; call function noellipse-noellipse fabs>
new  <	; Call fabs 114 0>

2981:
old  <	; post call>
new  <	; PostCall 114>

2984:
old  <	; Â£temporary1875 = return_value>
new  <	; GetReturnValue Â£temporary1875>

2987:
old  <	; pop float longDoubleValue>
new  <	; PopFloat longDoubleValue>

2991:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 114 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2994:
old  <	; parameter arg_list, offset 138>
new  <	; Parameter pointer arg_list 138>

2999:
old  <	; parameter widthPtr, offset 146>
new  <	; Parameter pointer widthPtr 146>

3004:
old  <	; Â£temporary1876 = &precision>
new  <	; Address Â£temporary1876 precision>

3009:
old  <	; parameter Â£temporary1876, offset 154>
new  <	; Parameter pointer Â£temporary1876 154>

3013:
old  <	; call function noellipse-noellipse checkWidthAndPrecision>
new  <	; Call checkWidthAndPrecision 114 0>

3020:
old  <	; post call>
new  <	; PostCall 114>

3023:
old  <	; Â£temporary1877 = return_value>
new  <	; GetReturnValue Â£temporary1877>

3026:
old  <	; arg_list = Â£temporary1877>
new  <	; Assign arg_list Â£temporary1877>

3030:
old  <	; if c != int1$102# goto 233>
new  <	; NotEqual 233 c 102>

3035:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 114 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3038:
old  <	; push float longDoubleValue>
new  <	; PushFloat longDoubleValue>

3042:
old  <	; parameter longDoubleValue, offset 138>
new  <	; Parameter longdouble longDoubleValue 138>

3046:
old  <	; parameter plus, offset 146>
new  <	; Parameter signedint plus 146>

3051:
old  <	; parameter space, offset 150>
new  <	; Parameter signedint space 150>

3056:
old  <	; parameter grid, offset 154>
new  <	; Parameter signedint grid 154>

3061:
old  <	; parameter precision, offset 158>
new  <	; Parameter signedint precision 158>

3066:
old  <	; call function noellipse-noellipse printLongDoublePlain>
new  <	; Call printLongDoublePlain 114 0>

3073:
old  <	; post call>
new  <	; PostCall 114>

3076:
old  <	; goto 359>
new  <	; Goto 359>

3080:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 114 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3083:
old  <	; Â£temporary1880 = int_to_int c (SignedChar -> SignedInt)>
new  <	; IntegralToIntegral Â£temporary1880 c>

3092:
old  <	; parameter Â£temporary1880, offset 138>
new  <	; Parameter signedint Â£temporary1880 138>

3096:
old  <	; call function noellipse-noellipse tolower>
new  <	; Call tolower 114 0>

3103:
old  <	; post call>
new  <	; PostCall 114>

3106:
old  <	; Â£temporary1881 = return_value>
new  <	; GetReturnValue Â£temporary1881>

3109:
old  <	; if Â£temporary1881 != int4$101# goto 257>
new  <	; NotEqual 257 Â£temporary1881 101>

3114:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 114 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3117:
old  <	; push float longDoubleValue>
new  <	; PushFloat longDoubleValue>

3121:
old  <	; parameter longDoubleValue, offset 138>
new  <	; Parameter longdouble longDoubleValue 138>

3125:
old  <	; parameter plus, offset 146>
new  <	; Parameter signedint plus 146>

3130:
old  <	; parameter space, offset 150>
new  <	; Parameter signedint space 150>

3135:
old  <	; parameter grid, offset 154>
new  <	; Parameter signedint grid 154>

3140:
old  <	; parameter precision, offset 158>
new  <	; Parameter signedint precision 158>

3145:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 114 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3148:
old  <	; Â£temporary1883 = int_to_int c (SignedChar -> SignedInt)>
new  <	; IntegralToIntegral Â£temporary1883 c>

3157:
old  <	; parameter Â£temporary1883, offset 186>
new  <	; Parameter signedint Â£temporary1883 186>

3161:
old  <	; call function noellipse-noellipse isupper>
new  <	; Call isupper 162 0>

3168:
old  <	; post call>
new  <	; PostCall 162>

3171:
old  <	; Â£temporary1884 = return_value>
new  <	; GetReturnValue Â£temporary1884>

3174:
old  <	; parameter Â£temporary1884, offset 162>
new  <	; Parameter signedint Â£temporary1884 162>

3178:
old  <	; call function noellipse-noellipse printLongDoubleExpo>
new  <	; Call printLongDoubleExpo 114 0>

3185:
old  <	; post call>
new  <	; PostCall 114>

3188:
old  <	; goto 359>
new  <	; Goto 359>

3192:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 114 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3195:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 114 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3198:
old  <	; push float longDoubleValue>
new  <	; PushFloat longDoubleValue>

3202:
old  <	; parameter longDoubleValue, offset 138>
new  <	; Parameter double longDoubleValue 138>

3206:
old  <	; call function noellipse-noellipse fabs>
new  <	; Call fabs 114 0>

3213:
old  <	; post call>
new  <	; PostCall 114>

3216:
old  <	; Â£temporary1886 = return_value>
new  <	; GetReturnValue Â£temporary1886>

3219:
old  <	; parameter Â£temporary1886, offset 138>
new  <	; Parameter double Â£temporary1886 138>

3223:
old  <	; call function noellipse-noellipse log10>
new  <	; Call log10 114 0>

3230:
old  <	; post call>
new  <	; PostCall 114>

3233:
old  <	; Â£temporary1887 = return_value>
new  <	; GetReturnValue Â£temporary1887>

3236:
old  <	; Â£temporary1888 = float_to_int Â£temporary1887 (Double -> SignedInt)>
new  <	; FloatingToIntegral Â£temporary1888 Â£temporary1887>

3241:
old  <	; expo = Â£temporary1888>
new  <	; Assign expo Â£temporary1888>

3245:
old  <	; if expo < int4$minus3# goto 282>
new  <	; SignedLessThan 282 expo -3>

3250:
old  <	; if expo > int4$2# goto 282>
new  <	; SignedGreaterThan 282 expo 2>

3255:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 118 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3258:
old  <	; push float longDoubleValue>
new  <	; PushFloat longDoubleValue>

3262:
old  <	; parameter longDoubleValue, offset 142>
new  <	; Parameter longdouble longDoubleValue 142>

3266:
old  <	; parameter plus, offset 150>
new  <	; Parameter signedint plus 150>

3271:
old  <	; parameter space, offset 154>
new  <	; Parameter signedint space 154>

3276:
old  <	; parameter grid, offset 158>
new  <	; Parameter signedint grid 158>

3281:
old  <	; parameter precision, offset 162>
new  <	; Parameter signedint precision 162>

3286:
old  <	; call function noellipse-noellipse printLongDoublePlain>
new  <	; Call printLongDoublePlain 118 0>

3293:
old  <	; post call>
new  <	; PostCall 118>

3296:
old  <	; goto 359>
new  <	; Goto 359>

3300:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 118 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3303:
old  <	; push float longDoubleValue>
new  <	; PushFloat longDoubleValue>

3307:
old  <	; parameter longDoubleValue, offset 142>
new  <	; Parameter longdouble longDoubleValue 142>

3311:
old  <	; parameter plus, offset 150>
new  <	; Parameter signedint plus 150>

3316:
old  <	; parameter space, offset 154>
new  <	; Parameter signedint space 154>

3321:
old  <	; parameter grid, offset 158>
new  <	; Parameter signedint grid 158>

3326:
old  <	; parameter precision, offset 162>
new  <	; Parameter signedint precision 162>

3331:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 118 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3334:
old  <	; Â£temporary1893 = int_to_int c (SignedChar -> SignedInt)>
new  <	; IntegralToIntegral Â£temporary1893 c>

3343:
old  <	; parameter Â£temporary1893, offset 190>
new  <	; Parameter signedint Â£temporary1893 190>

3347:
old  <	; call function noellipse-noellipse isupper>
new  <	; Call isupper 166 0>

3354:
old  <	; post call>
new  <	; PostCall 166>

3357:
old  <	; Â£temporary1894 = return_value>
new  <	; GetReturnValue Â£temporary1894>

3360:
old  <	; parameter Â£temporary1894, offset 166>
new  <	; Parameter signedint Â£temporary1894 166>

3364:
old  <	; call function noellipse-noellipse printLongDoubleExpo>
new  <	; Call printLongDoubleExpo 118 0>

3371:
old  <	; post call>
new  <	; PostCall 118>

3374:
old  <	; goto 359>
new  <	; Goto 359>

3378:
old  <	; arg_list = arg_list + int8$8#>
new  <	; BinaryAdd arg_list arg_list 8>

3382:
old  <	; Â£temporary1898 = arg_list - int8$8#>
new  <	; BinarySubtract Â£temporary1898 arg_list 8>

3387:
old  <	; Â£temporary1900 = int_to_int Â£temporary1898 (Pointer -> Pointer)>
new  <	; IntegralToIntegral Â£temporary1900 Â£temporary1898>

3390:
old  <	; Â£temporary1901 -> Â£temporary1900 = *Â£temporary1900>
new  <	; Dereference Â£temporary1901 -> Â£temporary1900 Â£temporary1900 0>

3393:
old  <	; ptrValue = Â£temporary1901 -> Â£temporary1900>
new  <	; Assign ptrValue Â£temporary1901 -> Â£temporary1900>

3398:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 114 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3401:
old  <	; parameter arg_list, offset 138>
new  <	; Parameter pointer arg_list 138>

3406:
old  <	; parameter widthPtr, offset 146>
new  <	; Parameter pointer widthPtr 146>

3411:
old  <	; Â£temporary1902 = &precision>
new  <	; Address Â£temporary1902 precision>

3416:
old  <	; parameter Â£temporary1902, offset 154>
new  <	; Parameter pointer Â£temporary1902 154>

3420:
old  <	; call function noellipse-noellipse checkWidthAndPrecision>
new  <	; Call checkWidthAndPrecision 114 0>

3427:
old  <	; post call>
new  <	; PostCall 114>

3430:
old  <	; Â£temporary1903 = return_value>
new  <	; GetReturnValue Â£temporary1903>

3433:
old  <	; arg_list = Â£temporary1903>
new  <	; Assign arg_list Â£temporary1903>

3437:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 114 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3440:
old  <	; Â£temporary1904 = int_to_int ptrValue (Pointer -> UnsignedLongInt)>
new  <	; IntegralToIntegral Â£temporary1904 ptrValue>

3444:
old  <	; parameter Â£temporary1904, offset 138>
new  <	; Parameter unsignedlongint Â£temporary1904 138>

3448:
old  <	; parameter int4$0#, offset 146>
new  <	; Parameter signedint 0 146>

3452:
old  <	; parameter int4$0#, offset 150>
new  <	; Parameter signedint 0 150>

3456:
old  <	; parameter int4$0#, offset 154>
new  <	; Parameter signedint 0 154>

3460:
old  <	; parameter int8$10#, offset 158>
new  <	; Parameter unsignedlongint 10 158>

3464:
old  <	; parameter int4$0#, offset 166>
new  <	; Parameter signedint 0 166>

3468:
old  <	; call function noellipse-noellipse printUnsignedLong>
new  <	; Call printUnsignedLong 114 0>

3475:
old  <	; post call>
new  <	; PostCall 114>

3478:
old  <	; goto 359>
new  <	; Goto 359>

3482:
old  <	; arg_list = arg_list + int8$8#>
new  <	; BinaryAdd arg_list arg_list 8>

3486:
old  <	; Â£temporary1908 = arg_list - int8$8#>
new  <	; BinarySubtract Â£temporary1908 arg_list 8>

3491:
old  <	; Â£temporary1910 = int_to_int Â£temporary1908 (Pointer -> Pointer)>
new  <	; IntegralToIntegral Â£temporary1910 Â£temporary1908>

3494:
old  <	; Â£temporary1911 -> Â£temporary1910 = *Â£temporary1910>
new  <	; Dereference Â£temporary1911 -> Â£temporary1910 Â£temporary1910 0>

3497:
old  <	; ptrValue = Â£temporary1911 -> Â£temporary1910>
new  <	; Assign ptrValue Â£temporary1911 -> Â£temporary1910>

3502:
old  <	; arg_list = arg_list + int8$8#>
new  <	; BinaryAdd arg_list arg_list 8>

3506:
old  <	; Â£temporary1914 = arg_list - int8$8#>
new  <	; BinarySubtract Â£temporary1914 arg_list 8>

3511:
old  <	; Â£temporary1916 = int_to_int Â£temporary1914 (Pointer -> Pointer)>
new  <	; IntegralToIntegral Â£temporary1916 Â£temporary1914>

3514:
old  <	; Â£temporary1917 -> Â£temporary1916 = *Â£temporary1916>
new  <	; Dereference Â£temporary1917 -> Â£temporary1916 Â£temporary1916 0>

3517:
old  <	; intPtr = Â£temporary1917 -> Â£temporary1916>
new  <	; Assign intPtr Â£temporary1917 -> Â£temporary1916>

3522:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 114 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3525:
old  <	; parameter arg_list, offset 138>
new  <	; Parameter pointer arg_list 138>

3530:
old  <	; parameter widthPtr, offset 146>
new  <	; Parameter pointer widthPtr 146>

3535:
old  <	; Â£temporary1918 = &precision>
new  <	; Address Â£temporary1918 precision>

3540:
old  <	; parameter Â£temporary1918, offset 154>
new  <	; Parameter pointer Â£temporary1918 154>

3544:
old  <	; call function noellipse-noellipse checkWidthAndPrecision>
new  <	; Call checkWidthAndPrecision 114 0>

3551:
old  <	; post call>
new  <	; PostCall 114>

3554:
old  <	; Â£temporary1919 = return_value>
new  <	; GetReturnValue Â£temporary1919>

3557:
old  <	; arg_list = Â£temporary1919>
new  <	; Assign arg_list Â£temporary1919>

3561:
old  <	; Â£temporary1920 -> intPtr = *intPtr>
new  <	; Dereference Â£temporary1920 -> intPtr intPtr 0>

3565:
old  <	; Â£temporary1920 -> intPtr = g_outChars>
new  <	; Assign Â£temporary1920 -> intPtr g_outChars>

3570:
old  <	; goto 359>
new  <	; Goto 359>

3574:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 114 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3577:
old  <	; parameter arg_list, offset 138>
new  <	; Parameter pointer arg_list 138>

3582:
old  <	; parameter widthPtr, offset 146>
new  <	; Parameter pointer widthPtr 146>

3587:
old  <	; Â£temporary1921 = &precision>
new  <	; Address Â£temporary1921 precision>

3592:
old  <	; parameter Â£temporary1921, offset 154>
new  <	; Parameter pointer Â£temporary1921 154>

3596:
old  <	; call function noellipse-noellipse checkWidthAndPrecision>
new  <	; Call checkWidthAndPrecision 114 0>

3603:
old  <	; post call>
new  <	; PostCall 114>

3606:
old  <	; Â£temporary1922 = return_value>
new  <	; GetReturnValue Â£temporary1922>

3609:
old  <	; arg_list = Â£temporary1922>
new  <	; Assign arg_list Â£temporary1922>

3613:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 114 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3616:
old  <	; parameter int1$37#, offset 138>
new  <	; Parameter signedchar 37 138>

3620:
old  <	; call function noellipse-noellipse printChar>
new  <	; Call printChar 114 0>

3627:
old  <	; post call>
new  <	; PostCall 114>

3630:
old  <	; return arg_list>
new  <	; Return arg_list>

3638:
old  <	; function end printArgument>
new  <	; FunctionEnd printArgument>

3643:
old  <	; initializer SignedInt>
new  <	; Initializer SignedInt 10>

3649:
old  <	; width = int4$0#>
new  <	; Assign width 0>

3653:
old  <	; precision = int4$0#>
new  <	; Assign precision 0>

3657:
old  <	; percent = int4$0#>
new  <	; Assign percent 0>

3661:
old  <	; plus = int4$0#>
new  <	; Assign plus 0>

3665:
old  <	; minus = int4$0#>
new  <	; Assign minus 0>

3669:
old  <	; space = int4$0#>
new  <	; Assign space 0>

3673:
old  <	; zero = int4$0#>
new  <	; Assign zero 0>

3677:
old  <	; grid = int4$0#>
new  <	; Assign grid 0>

3681:
old  <	; widthStar = int4$0#>
new  <	; Assign widthStar 0>

3685:
old  <	; period = int4$0#>
new  <	; Assign period 0>

3689:
old  <	; precisionStar = int4$0#>
new  <	; Assign precisionStar 0>

3693:
old  <	; shortInt = int4$0#>
new  <	; Assign shortInt 0>

3697:
old  <	; longInt = int4$0#>
new  <	; Assign longInt 0>

3701:
old  <	; longDouble = int4$0#>
new  <	; Assign longDouble 0>

3705:
old  <	; g_outChars = int4$0#>
new  <	; Assign g_outChars 0>

3709:
old  <	; index = int4$0#>
new  <	; Assign index 0>

3713:
old  <	; Â£temporary1941 = int_to_int index (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary1941 index>

3719:
old  <	; Â£temporary1943 = format + Â£temporary1941>
new  <	; BinaryAdd Â£temporary1943 format Â£temporary1941>

3724:
old  <	; Â£temporary1940 -> Â£temporary1943 = *Â£temporary1943>
new  <	; Dereference Â£temporary1940 -> Â£temporary1943 Â£temporary1943 0>

3727:
old  <	; if Â£temporary1940 -> Â£temporary1943 == int1$0# goto 290>
new  <	; Equal 290 Â£temporary1940 -> Â£temporary1943 0>

3732:
old  <	; Â£temporary1947 = int_to_int index (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary1947 index>

3738:
old  <	; Â£temporary1949 = format + Â£temporary1947>
new  <	; BinaryAdd Â£temporary1949 format Â£temporary1947>

3743:
old  <	; Â£temporary1946 -> Â£temporary1949 = *Â£temporary1949>
new  <	; Dereference Â£temporary1946 -> Â£temporary1949 Â£temporary1949 0>

3746:
old  <	; c = Â£temporary1946 -> Â£temporary1949>
new  <	; Assign c Â£temporary1946 -> Â£temporary1949>

3751:
old  <	; if percent == int4$0# goto 268>
new  <	; Equal 268 percent 0>

3756:
old  <	; case c == int1$43# goto 54>
new  <	; Case 54 c 43>

3762:
old  <	; case c == int1$45# goto 56>
new  <	; Case 56 c 45>

3767:
old  <	; case c == int1$32# goto 58>
new  <	; Case 58 c 32>

3772:
old  <	; case c == int1$48# goto 60>
new  <	; Case 60 c 48>

3777:
old  <	; case c == int1$35# goto 62>
new  <	; Case 62 c 35>

3782:
old  <	; case c == int1$46# goto 64>
new  <	; Case 64 c 46>

3787:
old  <	; case c == int1$42# goto 66>
new  <	; Case 66 c 42>

3792:
old  <	; case c == int1$104# goto 71>
new  <	; Case 71 c 104>

3797:
old  <	; case c == int1$108# goto 73>
new  <	; Case 73 c 108>

3802:
old  <	; case c == int1$76# goto 75>
new  <	; Case 75 c 76>

3807:
old  <	; case c == int1$37# goto 77>
new  <	; Case 77 c 37>

3812:
old  <	; case c == int1$110# goto 77>
new  <	; Case 77 c 110>

3817:
old  <	; case c == int1$112# goto 77>
new  <	; Case 77 c 112>

3822:
old  <	; case c == int1$71# goto 77>
new  <	; Case 77 c 71>

3827:
old  <	; case c == int1$103# goto 77>
new  <	; Case 77 c 103>

3832:
old  <	; case c == int1$69# goto 77>
new  <	; Case 77 c 69>

3837:
old  <	; case c == int1$101# goto 77>
new  <	; Case 77 c 101>

3842:
old  <	; case c == int1$102# goto 77>
new  <	; Case 77 c 102>

3847:
old  <	; case c == int1$115# goto 77>
new  <	; Case 77 c 115>

3852:
old  <	; case c == int1$99# goto 77>
new  <	; Case 77 c 99>

3857:
old  <	; case c == int1$88# goto 77>
new  <	; Case 77 c 88>

3862:
old  <	; case c == int1$120# goto 77>
new  <	; Case 77 c 120>

3867:
old  <	; case c == int1$111# goto 77>
new  <	; Case 77 c 111>

3872:
old  <	; case c == int1$98# goto 77>
new  <	; Case 77 c 98>

3877:
old  <	; case c == int1$117# goto 77>
new  <	; Case 77 c 117>

3882:
old  <	; case c == int1$100# goto 77>
new  <	; Case 77 c 100>

3887:
old  <	; case c == int1$105# goto 77>
new  <	; Case 77 c 105>

3892:
old  <	; case end c>
new  <	; CaseEnd c>

3895:
old  <	; goto 244>
new  <	; Goto 244>

3899:
old  <	; plus = int4$1#>
new  <	; Assign plus 1>

3903:
old  <	; goto 288>
new  <	; Goto 288>

3907:
old  <	; minus = int4$1#>
new  <	; Assign minus 1>

3911:
old  <	; goto 288>
new  <	; Goto 288>

3915:
old  <	; space = int4$1#>
new  <	; Assign space 1>

3919:
old  <	; goto 288>
new  <	; Goto 288>

3923:
old  <	; zero = int4$1#>
new  <	; Assign zero 1>

3927:
old  <	; goto 288>
new  <	; Goto 288>

3931:
old  <	; grid = int4$1#>
new  <	; Assign grid 1>

3935:
old  <	; goto 288>
new  <	; Goto 288>

3939:
old  <	; period = int4$1#>
new  <	; Assign period 1>

3943:
old  <	; goto 288>
new  <	; Goto 288>

3947:
old  <	; if period != int4$0# goto 69>
new  <	; NotEqual 69 period 0>

3952:
old  <	; width = int4$minus1#>
new  <	; Assign width -1>

3956:
old  <	; goto 288>
new  <	; Goto 288>

3960:
old  <	; precision = int4$minus1#>
new  <	; Assign precision -1>

3964:
old  <	; goto 288>
new  <	; Goto 288>

3968:
old  <	; shortInt = int4$1#>
new  <	; Assign shortInt 1>

3972:
old  <	; goto 288>
new  <	; Goto 288>

3976:
old  <	; longInt = int4$1#>
new  <	; Assign longInt 1>

3980:
old  <	; goto 288>
new  <	; Goto 288>

3984:
old  <	; longDouble = int4$1#>
new  <	; Assign longDouble 1>

3988:
old  <	; goto 288>
new  <	; Goto 288>

3992:
old  <	; if minus == int4$0# goto 109>
new  <	; Equal 109 minus 0>

3997:
old  <	; startChars = g_outChars>
new  <	; Assign startChars g_outChars>

4002:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 105 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

4005:
old  <	; Â£temporary1953 = int_to_int index (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary1953 index>

4011:
old  <	; Â£temporary1955 = format + Â£temporary1953>
new  <	; BinaryAdd Â£temporary1955 format Â£temporary1953>

4016:
old  <	; Â£temporary1952 -> Â£temporary1955 = *Â£temporary1955>
new  <	; Dereference Â£temporary1952 -> Â£temporary1955 Â£temporary1955 0>

4019:
old  <	; Â£temporary1956 = &Â£temporary1952 -> Â£temporary1955>
new  <	; Address Â£temporary1956 Â£temporary1952 -> Â£temporary1955>

4022:
old  <	; parameter Â£temporary1956, offset 129>
new  <	; Parameter pointer Â£temporary1956 129>

4026:
old  <	; parameter arg_list, offset 137>
new  <	; Parameter pointer arg_list 137>

4031:
old  <	; parameter plus, offset 145>
new  <	; Parameter signedint plus 145>

4036:
old  <	; parameter space, offset 149>
new  <	; Parameter signedint space 149>

4041:
old  <	; parameter grid, offset 153>
new  <	; Parameter signedint grid 153>

4046:
old  <	; Â£temporary1957 = &width>
new  <	; Address Â£temporary1957 width>

4051:
old  <	; parameter Â£temporary1957, offset 157>
new  <	; Parameter pointer Â£temporary1957 157>

4055:
old  <	; parameter precision, offset 165>
new  <	; Parameter signedint precision 165>

4060:
old  <	; parameter shortInt, offset 169>
new  <	; Parameter signedint shortInt 169>

4065:
old  <	; parameter longInt, offset 173>
new  <	; Parameter signedint longInt 173>

4070:
old  <	; parameter longDouble, offset 177>
new  <	; Parameter signedint longDouble 177>

4075:
old  <	; parameter int4$1#, offset 181>
new  <	; Parameter signedint 1 181>

4079:
old  <	; parameter int8$0#, offset 185>
new  <	; Parameter pointer 0 185>

4083:
old  <	; call function noellipse-noellipse printArgument>
new  <	; Call printArgument 105 0>

4090:
old  <	; post call>
new  <	; PostCall 105>

4093:
old  <	; Â£temporary1958 = return_value>
new  <	; GetReturnValue Â£temporary1958>

4096:
old  <	; arg_list = Â£temporary1958>
new  <	; Assign arg_list Â£temporary1958>

4100:
old  <	; Â£temporary1960 = g_outChars - startChars>
new  <	; BinarySubtract Â£temporary1960 g_outChars startChars>

4105:
old  <	; field = field + int4$1#>
new  <	; BinaryAdd field field 1>

4109:
old  <	; if Â£temporary1960 >= width goto 242>
new  <	; SignedGreaterThanEqual 242 Â£temporary1960 width>

4114:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 109 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

4117:
old  <	; parameter int1$32#, offset 133>
new  <	; Parameter signedchar 32 133>

4121:
old  <	; call function noellipse-noellipse printChar>
new  <	; Call printChar 109 0>

4128:
old  <	; post call>
new  <	; PostCall 109>

4131:
old  <	; goto 102>
new  <	; Goto 102>

4135:
old  <	; if zero == int4$0# goto 187>
new  <	; Equal 187 zero 0>

4140:
old  <	; startChars = g_outChars>
new  <	; Assign startChars g_outChars>

4145:
old  <	; oldOutStatus = g_outStatus>
new  <	; Assign oldOutStatus g_outStatus>

4150:
old  <	; negative = int4$0#>
new  <	; Assign negative 0>

4154:
old  <	; g_outStatus = int4$2#>
new  <	; Assign g_outStatus 2>

4158:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 113 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

4161:
old  <	; Â£temporary1964 = int_to_int index (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary1964 index>

4167:
old  <	; Â£temporary1966 = format + Â£temporary1964>
new  <	; BinaryAdd Â£temporary1966 format Â£temporary1964>

4172:
old  <	; Â£temporary1963 -> Â£temporary1966 = *Â£temporary1966>
new  <	; Dereference Â£temporary1963 -> Â£temporary1966 Â£temporary1966 0>

4175:
old  <	; Â£temporary1967 = &Â£temporary1963 -> Â£temporary1966>
new  <	; Address Â£temporary1967 Â£temporary1963 -> Â£temporary1966>

4178:
old  <	; parameter Â£temporary1967, offset 137>
new  <	; Parameter pointer Â£temporary1967 137>

4182:
old  <	; parameter arg_list, offset 145>
new  <	; Parameter pointer arg_list 145>

4187:
old  <	; parameter int4$0#, offset 153>
new  <	; Parameter signedint 0 153>

4191:
old  <	; parameter int4$0#, offset 157>
new  <	; Parameter signedint 0 157>

4195:
old  <	; parameter grid, offset 161>
new  <	; Parameter signedint grid 161>

4200:
old  <	; Â£temporary1968 = &width>
new  <	; Address Â£temporary1968 width>

4205:
old  <	; parameter Â£temporary1968, offset 165>
new  <	; Parameter pointer Â£temporary1968 165>

4209:
old  <	; parameter precision, offset 173>
new  <	; Parameter signedint precision 173>

4214:
old  <	; parameter shortInt, offset 177>
new  <	; Parameter signedint shortInt 177>

4219:
old  <	; parameter longInt, offset 181>
new  <	; Parameter signedint longInt 181>

4224:
old  <	; parameter longDouble, offset 185>
new  <	; Parameter signedint longDouble 185>

4229:
old  <	; parameter int4$0#, offset 189>
new  <	; Parameter signedint 0 189>

4233:
old  <	; Â£temporary1969 = &negative>
new  <	; Address Â£temporary1969 negative>

4238:
old  <	; parameter Â£temporary1969, offset 193>
new  <	; Parameter pointer Â£temporary1969 193>

4242:
old  <	; call function noellipse-noellipse printArgument>
new  <	; Call printArgument 113 0>

4249:
old  <	; post call>
new  <	; PostCall 113>

4252:
old  <	; g_outStatus = oldOutStatus>
new  <	; Assign g_outStatus oldOutStatus>

4257:
old  <	; field = g_outChars - startChars>
new  <	; BinarySubtract field g_outChars startChars>

4263:
old  <	; g_outChars = startChars>
new  <	; Assign g_outChars startChars>

4268:
old  <	; if negative == int4$0# goto 145>
new  <	; Equal 145 negative 0>

4273:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 117 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

4276:
old  <	; parameter int1$45#, offset 141>
new  <	; Parameter signedchar 45 141>

4280:
old  <	; call function noellipse-noellipse printChar>
new  <	; Call printChar 117 0>

4287:
old  <	; post call>
new  <	; PostCall 117>

4290:
old  <	; field = field + int4$1#>
new  <	; BinaryAdd field field 1>

4294:
old  <	; goto 158>
new  <	; Goto 158>

4298:
old  <	; if plus == int4$0# goto 152>
new  <	; Equal 152 plus 0>

4303:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 117 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

4306:
old  <	; parameter int1$43#, offset 141>
new  <	; Parameter signedchar 43 141>

4310:
old  <	; call function noellipse-noellipse printChar>
new  <	; Call printChar 117 0>

4317:
old  <	; post call>
new  <	; PostCall 117>

4320:
old  <	; field = field + int4$1#>
new  <	; BinaryAdd field field 1>

4324:
old  <	; goto 158>
new  <	; Goto 158>

4328:
old  <	; if space == int4$0# goto 158>
new  <	; Equal 158 space 0>

4333:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 117 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

4336:
old  <	; parameter int1$32#, offset 141>
new  <	; Parameter signedchar 32 141>

4340:
old  <	; call function noellipse-noellipse printChar>
new  <	; Call printChar 117 0>

4347:
old  <	; post call>
new  <	; PostCall 117>

4350:
old  <	; Â£temporary1981 = field + int4$1#>
new  <	; BinaryAdd Â£temporary1981 field 1>

4355:
old  <	; field = field + int4$1#>
new  <	; BinaryAdd field field 1>

4359:
old  <	; if Â£temporary1981 >= width goto 165>
new  <	; SignedGreaterThanEqual 165 Â£temporary1981 width>

4364:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 117 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

4367:
old  <	; parameter int1$48#, offset 141>
new  <	; Parameter signedchar 48 141>

4371:
old  <	; call function noellipse-noellipse printChar>
new  <	; Call printChar 117 0>

4378:
old  <	; post call>
new  <	; PostCall 117>

4381:
old  <	; goto 158>
new  <	; Goto 158>

4385:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 117 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

4388:
old  <	; Â£temporary1985 = int_to_int index (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary1985 index>

4394:
old  <	; Â£temporary1987 = format + Â£temporary1985>
new  <	; BinaryAdd Â£temporary1987 format Â£temporary1985>

4399:
old  <	; Â£temporary1984 -> Â£temporary1987 = *Â£temporary1987>
new  <	; Dereference Â£temporary1984 -> Â£temporary1987 Â£temporary1987 0>

4402:
old  <	; Â£temporary1988 = &Â£temporary1984 -> Â£temporary1987>
new  <	; Address Â£temporary1988 Â£temporary1984 -> Â£temporary1987>

4405:
old  <	; parameter Â£temporary1988, offset 141>
new  <	; Parameter pointer Â£temporary1988 141>

4409:
old  <	; parameter arg_list, offset 149>
new  <	; Parameter pointer arg_list 149>

4414:
old  <	; parameter int4$0#, offset 157>
new  <	; Parameter signedint 0 157>

4418:
old  <	; parameter int4$0#, offset 161>
new  <	; Parameter signedint 0 161>

4422:
old  <	; parameter grid, offset 165>
new  <	; Parameter signedint grid 165>

4427:
old  <	; parameter int8$0#, offset 169>
new  <	; Parameter pointer 0 169>

4431:
old  <	; parameter precision, offset 177>
new  <	; Parameter signedint precision 177>

4436:
old  <	; parameter shortInt, offset 181>
new  <	; Parameter signedint shortInt 181>

4441:
old  <	; parameter longInt, offset 185>
new  <	; Parameter signedint longInt 185>

4446:
old  <	; parameter longDouble, offset 189>
new  <	; Parameter signedint longDouble 189>

4451:
old  <	; parameter int4$0#, offset 193>
new  <	; Parameter signedint 0 193>

4455:
old  <	; parameter int8$0#, offset 197>
new  <	; Parameter pointer 0 197>

4459:
old  <	; call function noellipse-noellipse printArgument>
new  <	; Call printArgument 117 0>

4466:
old  <	; post call>
new  <	; PostCall 117>

4469:
old  <	; Â£temporary1989 = return_value>
new  <	; GetReturnValue Â£temporary1989>

4472:
old  <	; arg_list = Â£temporary1989>
new  <	; Assign arg_list Â£temporary1989>

4476:
old  <	; goto 242>
new  <	; Goto 242>

4480:
old  <	; startChars = g_outChars>
new  <	; Assign startChars g_outChars>

4485:
old  <	; oldOutStatus = g_outStatus>
new  <	; Assign oldOutStatus g_outStatus>

4490:
old  <	; g_outStatus = int4$2#>
new  <	; Assign g_outStatus 2>

4494:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 109 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

4497:
old  <	; Â£temporary1991 = int_to_int index (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary1991 index>

4503:
old  <	; Â£temporary1993 = format + Â£temporary1991>
new  <	; BinaryAdd Â£temporary1993 format Â£temporary1991>

4508:
old  <	; Â£temporary1990 -> Â£temporary1993 = *Â£temporary1993>
new  <	; Dereference Â£temporary1990 -> Â£temporary1993 Â£temporary1993 0>

4511:
old  <	; Â£temporary1994 = &Â£temporary1990 -> Â£temporary1993>
new  <	; Address Â£temporary1994 Â£temporary1990 -> Â£temporary1993>

4514:
old  <	; parameter Â£temporary1994, offset 133>
new  <	; Parameter pointer Â£temporary1994 133>

4518:
old  <	; parameter arg_list, offset 141>
new  <	; Parameter pointer arg_list 141>

4523:
old  <	; parameter plus, offset 149>
new  <	; Parameter signedint plus 149>

4528:
old  <	; parameter space, offset 153>
new  <	; Parameter signedint space 153>

4533:
old  <	; parameter grid, offset 157>
new  <	; Parameter signedint grid 157>

4538:
old  <	; Â£temporary1995 = &width>
new  <	; Address Â£temporary1995 width>

4543:
old  <	; parameter Â£temporary1995, offset 161>
new  <	; Parameter pointer Â£temporary1995 161>

4547:
old  <	; parameter precision, offset 169>
new  <	; Parameter signedint precision 169>

4552:
old  <	; parameter shortInt, offset 173>
new  <	; Parameter signedint shortInt 173>

4557:
old  <	; parameter longInt, offset 177>
new  <	; Parameter signedint longInt 177>

4562:
old  <	; parameter longDouble, offset 181>
new  <	; Parameter signedint longDouble 181>

4567:
old  <	; parameter int4$1#, offset 185>
new  <	; Parameter signedint 1 185>

4571:
old  <	; parameter int8$0#, offset 189>
new  <	; Parameter pointer 0 189>

4575:
old  <	; call function noellipse-noellipse printArgument>
new  <	; Call printArgument 109 0>

4582:
old  <	; post call>
new  <	; PostCall 109>

4585:
old  <	; g_outStatus = oldOutStatus>
new  <	; Assign g_outStatus oldOutStatus>

4590:
old  <	; field = g_outChars - startChars>
new  <	; BinarySubtract field g_outChars startChars>

4596:
old  <	; g_outChars = startChars>
new  <	; Assign g_outChars startChars>

4601:
old  <	; Â£temporary1998 = field>
new  <	; Assign Â£temporary1998 field>

4605:
old  <	; field = field + int4$1#>
new  <	; BinaryAdd field field 1>

4609:
old  <	; if Â£temporary1998 >= width goto 221>
new  <	; SignedGreaterThanEqual 221 Â£temporary1998 width>

4614:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 113 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

4617:
old  <	; parameter int1$32#, offset 137>
new  <	; Parameter signedchar 32 137>

4621:
old  <	; call function noellipse-noellipse printChar>
new  <	; Call printChar 113 0>

4628:
old  <	; post call>
new  <	; PostCall 113>

4631:
old  <	; goto 213>
new  <	; Goto 213>

4635:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 113 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

4638:
old  <	; Â£temporary2002 = int_to_int index (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary2002 index>

4644:
old  <	; Â£temporary2004 = format + Â£temporary2002>
new  <	; BinaryAdd Â£temporary2004 format Â£temporary2002>

4649:
old  <	; Â£temporary2001 -> Â£temporary2004 = *Â£temporary2004>
new  <	; Dereference Â£temporary2001 -> Â£temporary2004 Â£temporary2004 0>

4652:
old  <	; Â£temporary2005 = &Â£temporary2001 -> Â£temporary2004>
new  <	; Address Â£temporary2005 Â£temporary2001 -> Â£temporary2004>

4655:
old  <	; parameter Â£temporary2005, offset 137>
new  <	; Parameter pointer Â£temporary2005 137>

4659:
old  <	; parameter arg_list, offset 145>
new  <	; Parameter pointer arg_list 145>

4664:
old  <	; parameter plus, offset 153>
new  <	; Parameter signedint plus 153>

4669:
old  <	; parameter space, offset 157>
new  <	; Parameter signedint space 157>

4674:
old  <	; parameter grid, offset 161>
new  <	; Parameter signedint grid 161>

4679:
old  <	; parameter int8$0#, offset 165>
new  <	; Parameter pointer 0 165>

4683:
old  <	; parameter precision, offset 173>
new  <	; Parameter signedint precision 173>

4688:
old  <	; parameter shortInt, offset 177>
new  <	; Parameter signedint shortInt 177>

4693:
old  <	; parameter longInt, offset 181>
new  <	; Parameter signedint longInt 181>

4698:
old  <	; parameter longDouble, offset 185>
new  <	; Parameter signedint longDouble 185>

4703:
old  <	; parameter int4$1#, offset 189>
new  <	; Parameter signedint 1 189>

4707:
old  <	; parameter int8$0#, offset 193>
new  <	; Parameter pointer 0 193>

4711:
old  <	; call function noellipse-noellipse printArgument>
new  <	; Call printArgument 113 0>

4718:
old  <	; post call>
new  <	; PostCall 113>

4721:
old  <	; Â£temporary2006 = return_value>
new  <	; GetReturnValue Â£temporary2006>

4724:
old  <	; arg_list = Â£temporary2006>
new  <	; Assign arg_list Â£temporary2006>

4728:
old  <	; percent = int4$0#>
new  <	; Assign percent 0>

4732:
old  <	; goto 288>
new  <	; Goto 288>

4736:
old  <	; value = int4$0#>
new  <	; Assign value 0>

4740:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 105 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

4743:
old  <	; Â£temporary2009 = int_to_int c (SignedChar -> SignedInt)>
new  <	; IntegralToIntegral Â£temporary2009 c>

4752:
old  <	; parameter Â£temporary2009, offset 129>
new  <	; Parameter signedint Â£temporary2009 129>

4756:
old  <	; call function noellipse-noellipse isdigit>
new  <	; Call isdigit 105 0>

4763:
old  <	; post call>
new  <	; PostCall 105>

4766:
old  <	; Â£temporary2010 = return_value>
new  <	; GetReturnValue Â£temporary2010>

4769:
old  <	; if Â£temporary2010 == int4$0# goto 262>
new  <	; Equal 262 Â£temporary2010 0>

4774:
old  <	; Â£temporary2011 = value * int4$10#>
new  <	; SignedMultiply Â£temporary2011 value 10>

4780:
old  <	; Â£temporary2012 = c - int1$48#>
new  <	; BinarySubtract Â£temporary2012 c 48>

4785:
old  <	; Â£temporary2013 = int_to_int Â£temporary2012 (SignedChar -> SignedInt)>
new  <	; IntegralToIntegral Â£temporary2013 Â£temporary2012>

4793:
old  <	; value = Â£temporary2011 + Â£temporary2013>
new  <	; BinaryAdd value Â£temporary2011 Â£temporary2013>

4798:
old  <	; Â£temporary2015 = index + int4$1#>
new  <	; BinaryAdd Â£temporary2015 index 1>

4803:
old  <	; Â£temporary2017 = int_to_int Â£temporary2015 (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary2017 Â£temporary2015>

4808:
old  <	; Â£temporary2019 = format + Â£temporary2017>
new  <	; BinaryAdd Â£temporary2019 format Â£temporary2017>

4813:
old  <	; Â£temporary2016 -> Â£temporary2019 = *Â£temporary2019>
new  <	; Dereference Â£temporary2016 -> Â£temporary2019 Â£temporary2019 0>

4816:
old  <	; c = Â£temporary2016 -> Â£temporary2019>
new  <	; Assign c Â£temporary2016 -> Â£temporary2019>

4821:
old  <	; goto 245>
new  <	; Goto 245>

4825:
old  <	; index = index - int4$1#>
new  <	; BinarySubtract index index 1>

4829:
old  <	; if period != int4$0# goto 266>
new  <	; NotEqual 266 period 0>

4834:
old  <	; width = value>
new  <	; Assign width value>

4839:
old  <	; goto 288>
new  <	; Goto 288>

4843:
old  <	; precision = value>
new  <	; Assign precision value>

4848:
old  <	; goto 288>
new  <	; Goto 288>

4852:
old  <	; if c != int1$37# goto 284>
new  <	; NotEqual 284 c 37>

4857:
old  <	; percent = int4$1#>
new  <	; Assign percent 1>

4861:
old  <	; plus = int4$0#>
new  <	; Assign plus 0>

4865:
old  <	; minus = int4$0#>
new  <	; Assign minus 0>

4869:
old  <	; space = int4$0#>
new  <	; Assign space 0>

4873:
old  <	; zero = int4$0#>
new  <	; Assign zero 0>

4877:
old  <	; grid = int4$0#>
new  <	; Assign grid 0>

4881:
old  <	; widthStar = int4$0#>
new  <	; Assign widthStar 0>

4885:
old  <	; period = int4$0#>
new  <	; Assign period 0>

4889:
old  <	; precisionStar = int4$0#>
new  <	; Assign precisionStar 0>

4893:
old  <	; shortInt = int4$0#>
new  <	; Assign shortInt 0>

4897:
old  <	; longInt = int4$0#>
new  <	; Assign longInt 0>

4901:
old  <	; longDouble = int4$0#>
new  <	; Assign longDouble 0>

4905:
old  <	; width = int4$0#>
new  <	; Assign width 0>

4909:
old  <	; precision = int4$0#>
new  <	; Assign precision 0>

4913:
old  <	; goto 288>
new  <	; Goto 288>

4917:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 101 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

4920:
old  <	; parameter c, offset 125>
new  <	; Parameter signedchar c 125>

4925:
old  <	; call function noellipse-noellipse printChar>
new  <	; Call printChar 101 0>

4932:
old  <	; post call>
new  <	; PostCall 101>

4935:
old  <	; index = index + int4$1#>
new  <	; BinaryAdd index index 1>

4939:
old  <	; goto 16>
new  <	; Goto 16>

4943:
old  <	; if g_outStatus != int4$1# goto 297>
new  <	; NotEqual 297 g_outStatus 1>

4948:
old  <	; Â£temporary2028 = int_to_int g_outDevice (Pointer -> Pointer)>
new  <	; IntegralToIntegral Â£temporary2028 g_outDevice>

4952:
old  <	; outString = Â£temporary2028>
new  <	; Assign outString Â£temporary2028>

4956:
old  <	; Â£temporary2030 = int_to_int g_outChars (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary2030 g_outChars>

4962:
old  <	; Â£temporary2032 = outString + Â£temporary2030>
new  <	; BinaryAdd Â£temporary2032 outString Â£temporary2030>

4967:
old  <	; Â£temporary2029 -> Â£temporary2032 = *Â£temporary2032>
new  <	; Dereference Â£temporary2029 -> Â£temporary2032 Â£temporary2032 0>

4970:
old  <	; Â£temporary2029 -> Â£temporary2032 = int1$0#>
new  <	; Assign Â£temporary2029 -> Â£temporary2032 0>

4974:
old  <	; return g_outChars>
new  <	; Return g_outChars>

4982:
old  <	; function end printFormat>
new  <	; FunctionEnd printFormat>

4987:
old  <	; empty>
new  <	; Empty>

4990:
old  <	; Â£temporary2037 = &format>
new  <	; Address Â£temporary2037 format>

4995:
old  <	; Â£temporary2038 = int_to_int Â£temporary2037 (Pointer -> Pointer)>
new  <	; IntegralToIntegral Â£temporary2038 Â£temporary2037>

4998:
old  <	; arg_list = Â£temporary2038 + int8$8#>
new  <	; BinaryAdd arg_list Â£temporary2038 8>

5003:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

5006:
old  <	; parameter format, offset 64>
new  <	; Parameter pointer format 64>

5011:
old  <	; parameter arg_list, offset 72>
new  <	; Parameter pointer arg_list 72>

5016:
old  <	; call function ellipse-noellipse vprintf>
new  <	; Call vprintf 40 0>

5025:
old  <	; post call>
new  <	; PostCall 40>

5028:
old  <	; Â£temporary2041 = return_value>
new  <	; GetReturnValue Â£temporary2041>

5031:
old  <	; return Â£temporary2041>
new  <	; Return Â£temporary2041>

5038:
old  <	; function end printf>
new  <	; FunctionEnd printf>

5043:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

5046:
old  <	; parameter stdout, offset 64>
new  <	; Parameter pointer stdout 64>

5051:
old  <	; parameter format, offset 72>
new  <	; Parameter pointer format 72>

5056:
old  <	; parameter arg_list, offset 80>
new  <	; Parameter pointer arg_list 80>

5061:
old  <	; call function noellipse-noellipse vfprintf>
new  <	; Call vfprintf 40 0>

5068:
old  <	; post call>
new  <	; PostCall 40>

5071:
old  <	; Â£temporary2043 = return_value>
new  <	; GetReturnValue Â£temporary2043>

5074:
old  <	; return Â£temporary2043>
new  <	; Return Â£temporary2043>

5081:
old  <	; function end vprintf>
new  <	; FunctionEnd vprintf>

5086:
old  <	; empty>
new  <	; Empty>

5089:
old  <	; Â£temporary2044 = &format>
new  <	; Address Â£temporary2044 format>

5094:
old  <	; Â£temporary2045 = int_to_int Â£temporary2044 (Pointer -> Pointer)>
new  <	; IntegralToIntegral Â£temporary2045 Â£temporary2044>

5097:
old  <	; arg_list = Â£temporary2045 + int8$8#>
new  <	; BinaryAdd arg_list Â£temporary2045 8>

5102:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

5105:
old  <	; parameter outStream, offset 72>
new  <	; Parameter pointer outStream 72>

5110:
old  <	; parameter format, offset 80>
new  <	; Parameter pointer format 80>

5115:
old  <	; parameter arg_list, offset 88>
new  <	; Parameter pointer arg_list 88>

5120:
old  <	; call function ellipse-noellipse vfprintf>
new  <	; Call vfprintf 48 0>

5129:
old  <	; post call>
new  <	; PostCall 48>

5132:
old  <	; Â£temporary2048 = return_value>
new  <	; GetReturnValue Â£temporary2048>

5135:
old  <	; return Â£temporary2048>
new  <	; Return Â£temporary2048>

5142:
old  <	; function end fprintf>
new  <	; FunctionEnd fprintf>

5147:
old  <	; g_outStatus = int4$0#>
new  <	; Assign g_outStatus 0>

5151:
old  <	; Â£temporary2050 = int_to_int outStream (Pointer -> Pointer)>
new  <	; IntegralToIntegral Â£temporary2050 outStream>

5155:
old  <	; g_outDevice = Â£temporary2050>
new  <	; Assign g_outDevice Â£temporary2050>

5159:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

5162:
old  <	; parameter format, offset 72>
new  <	; Parameter pointer format 72>

5167:
old  <	; parameter arg_list, offset 80>
new  <	; Parameter pointer arg_list 80>

5172:
old  <	; call function noellipse-noellipse printFormat>
new  <	; Call printFormat 48 0>

5179:
old  <	; post call>
new  <	; PostCall 48>

5182:
old  <	; Â£temporary2051 = return_value>
new  <	; GetReturnValue Â£temporary2051>

5185:
old  <	; return Â£temporary2051>
new  <	; Return Â£temporary2051>

5192:
old  <	; function end vfprintf>
new  <	; FunctionEnd vfprintf>

5197:
old  <	; empty>
new  <	; Empty>

5200:
old  <	; Â£temporary2052 = &format>
new  <	; Address Â£temporary2052 format>

5205:
old  <	; Â£temporary2053 = int_to_int Â£temporary2052 (Pointer -> Pointer)>
new  <	; IntegralToIntegral Â£temporary2053 Â£temporary2052>

5208:
old  <	; arg_list = Â£temporary2053 + int8$8#>
new  <	; BinaryAdd arg_list Â£temporary2053 8>

5213:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

5216:
old  <	; parameter outString, offset 72>
new  <	; Parameter pointer outString 72>

5221:
old  <	; parameter format, offset 80>
new  <	; Parameter pointer format 80>

5226:
old  <	; parameter arg_list, offset 88>
new  <	; Parameter pointer arg_list 88>

5231:
old  <	; call function ellipse-noellipse vsprintf>
new  <	; Call vsprintf 48 0>

5240:
old  <	; post call>
new  <	; PostCall 48>

5243:
old  <	; Â£temporary2056 = return_value>
new  <	; GetReturnValue Â£temporary2056>

5246:
old  <	; return Â£temporary2056>
new  <	; Return Â£temporary2056>

5253:
old  <	; function end sprintf>
new  <	; FunctionEnd sprintf>

5258:
old  <	; g_outStatus = int4$1#>
new  <	; Assign g_outStatus 1>

5262:
old  <	; Â£temporary2058 = int_to_int outString (Pointer -> Pointer)>
new  <	; IntegralToIntegral Â£temporary2058 outString>

5266:
old  <	; g_outDevice = Â£temporary2058>
new  <	; Assign g_outDevice Â£temporary2058>

5270:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

5273:
old  <	; parameter format, offset 72>
new  <	; Parameter pointer format 72>

5278:
old  <	; parameter arg_list, offset 80>
new  <	; Parameter pointer arg_list 80>

5283:
old  <	; call function noellipse-noellipse printFormat>
new  <	; Call printFormat 48 0>

5290:
old  <	; post call>
new  <	; PostCall 48>

5293:
old  <	; Â£temporary2059 = return_value>
new  <	; GetReturnValue Â£temporary2059>

5296:
old  <	; return Â£temporary2059>
new  <	; Return Â£temporary2059>

5303:
old  <	; function end vsprintf>
new  <	; FunctionEnd vsprintf>

34:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

37:
old  <	; parameter s, offset 56>
new  <	; Parameter pointer s 56>

42:
old  <	; parameter int8$0#, offset 64>
new  <	; Parameter pointer 0 64>

46:
old  <	; parameter int4$10#, offset 72>
new  <	; Parameter signedint 10 72>

50:
old  <	; call function noellipse-noellipse strtol>
new  <	; Call strtol 32 0>

57:
old  <	; post call>
new  <	; PostCall 32>

60:
old  <	; Â£temporary2060 = return_value>
new  <	; GetReturnValue Â£temporary2060>

63:
old  <	; Â£temporary2061 = int_to_int Â£temporary2060 (Signed_Long_Int -> SignedInt)>
new  <	; IntegralToIntegral Â£temporary2061 Â£temporary2060>

70:
old  <	; return Â£temporary2061>
new  <	; Return Â£temporary2061>

77:
old  <	; function end atoi>
new  <	; FunctionEnd atoi>

82:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

85:
old  <	; parameter s, offset 56>
new  <	; Parameter pointer s 56>

90:
old  <	; parameter int8$0#, offset 64>
new  <	; Parameter pointer 0 64>

94:
old  <	; parameter int4$10#, offset 72>
new  <	; Parameter signedint 10 72>

98:
old  <	; call function noellipse-noellipse strtol>
new  <	; Call strtol 32 0>

105:
old  <	; post call>
new  <	; PostCall 32>

108:
old  <	; Â£temporary2062 = return_value>
new  <	; GetReturnValue Â£temporary2062>

111:
old  <	; return Â£temporary2062>
new  <	; Return Â£temporary2062>

118:
old  <	; function end atol>
new  <	; FunctionEnd atol>

123:
old  <	; initializer String>
new  <	; Initializer String %li%n>

129:
old  <	; chars = int4$0#>
new  <	; Assign chars 0>

133:
old  <	; value = int8$0#>
new  <	; Assign value 0>

137:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

140:
old  <	; parameter s, offset 80>
new  <	; Parameter pointer s 80>

145:
old  <	; parameter string_25li25n#, offset 88>
new  <	; Parameter pointer "%li%n" 88>

149:
old  <	; Â£temporary2063 = &value>
new  <	; Address Â£temporary2063 value>

154:
old  <	; parameter Â£temporary2063, offset 96>
new  <	; Parameter pointer Â£temporary2063 96>

158:
old  <	; Â£temporary2064 = &chars>
new  <	; Address Â£temporary2064 chars>

163:
old  <	; parameter Â£temporary2064, offset 104>
new  <	; Parameter pointer Â£temporary2064 104>

167:
old  <	; call function noellipse-ellipse sscanf, extra 16>
new  <	; Call sscanf 56 16>

176:
old  <	; post call>
new  <	; PostCall 56>

179:
old  <	; if endp == int8$0# goto 15>
new  <	; Equal 15 endp 0>

184:
old  <	; Â£temporary2067 -> endp = *endp>
new  <	; Dereference Â£temporary2067 -> endp endp 0>

188:
old  <	; Â£temporary2068 = int_to_int chars (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary2068 chars>

194:
old  <	; Â£temporary2067 -> endp = s + Â£temporary2068>
new  <	; BinaryAdd Â£temporary2067 -> endp s Â£temporary2068>

200:
old  <	; return value>
new  <	; Return value>

208:
old  <	; function end strtol>
new  <	; FunctionEnd strtol>

213:
old  <	; initializer String>
new  <	; Initializer String %lu%n>

219:
old  <	; chars = int4$0#>
new  <	; Assign chars 0>

223:
old  <	; value = int8$0#>
new  <	; Assign value 0>

227:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

230:
old  <	; parameter s, offset 80>
new  <	; Parameter pointer s 80>

235:
old  <	; parameter string_25lu25n#, offset 88>
new  <	; Parameter pointer "%lu%n" 88>

239:
old  <	; Â£temporary2073 = &value>
new  <	; Address Â£temporary2073 value>

244:
old  <	; parameter Â£temporary2073, offset 96>
new  <	; Parameter pointer Â£temporary2073 96>

248:
old  <	; Â£temporary2074 = &chars>
new  <	; Address Â£temporary2074 chars>

253:
old  <	; parameter Â£temporary2074, offset 104>
new  <	; Parameter pointer Â£temporary2074 104>

257:
old  <	; call function noellipse-ellipse sscanf, extra 16>
new  <	; Call sscanf 56 16>

266:
old  <	; post call>
new  <	; PostCall 56>

269:
old  <	; if endp == int8$0# goto 15>
new  <	; Equal 15 endp 0>

274:
old  <	; Â£temporary2077 -> endp = *endp>
new  <	; Dereference Â£temporary2077 -> endp endp 0>

278:
old  <	; Â£temporary2078 = int_to_int chars (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary2078 chars>

284:
old  <	; Â£temporary2077 -> endp = s + Â£temporary2078>
new  <	; BinaryAdd Â£temporary2077 -> endp s Â£temporary2078>

290:
old  <	; return value>
new  <	; Return value>

298:
old  <	; function end strtoul>
new  <	; FunctionEnd strtoul>

303:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

306:
old  <	; parameter s, offset 56>
new  <	; Parameter pointer s 56>

311:
old  <	; parameter int8$0#, offset 64>
new  <	; Parameter pointer 0 64>

315:
old  <	; call function noellipse-noellipse strtod>
new  <	; Call strtod 32 0>

322:
old  <	; post call>
new  <	; PostCall 32>

325:
old  <	; Â£temporary2083 = return_value>
new  <	; GetReturnValue Â£temporary2083>

328:
old  <	; return Â£temporary2083>
new  <	; Return Â£temporary2083>

335:
old  <	; function end atof>
new  <	; FunctionEnd atof>

340:
old  <	; initializer String>
new  <	; Initializer String %lf%n>

346:
old  <	; chars = int4$0#>
new  <	; Assign chars 0>

350:
old  <	; push float float8$0#>
new  <	; PushFloat 0>

354:
old  <	; pop float value>
new  <	; PopFloat value>

358:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

361:
old  <	; parameter s, offset 76>
new  <	; Parameter pointer s 76>

366:
old  <	; parameter string_25lf25n#, offset 84>
new  <	; Parameter pointer "%lf%n" 84>

370:
old  <	; Â£temporary2084 = &value>
new  <	; Address Â£temporary2084 value>

375:
old  <	; parameter Â£temporary2084, offset 92>
new  <	; Parameter pointer Â£temporary2084 92>

379:
old  <	; Â£temporary2085 = &chars>
new  <	; Address Â£temporary2085 chars>

384:
old  <	; parameter Â£temporary2085, offset 100>
new  <	; Parameter pointer Â£temporary2085 100>

388:
old  <	; call function noellipse-ellipse sscanf, extra 16>
new  <	; Call sscanf 52 16>

397:
old  <	; post call>
new  <	; PostCall 52>

400:
old  <	; if endp == int8$0# goto 16>
new  <	; Equal 16 endp 0>

405:
old  <	; Â£temporary2088 -> endp = *endp>
new  <	; Dereference Â£temporary2088 -> endp endp 0>

409:
old  <	; Â£temporary2089 = int_to_int chars (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary2089 chars>

415:
old  <	; Â£temporary2088 -> endp = s + Â£temporary2089>
new  <	; BinaryAdd Â£temporary2088 -> endp s Â£temporary2089>

421:
old  <	; push float value>
new  <	; PushFloat value>

425:
old  <	; return value>
new  <	; Return value>

432:
old  <	; function end strtod>
new  <	; FunctionEnd strtod>

437:
old  <	; rax = int8$60#>
new  <	; AssignRegister rax 60>

441:
old  <	; rdi = int8$minus1#>
new  <	; AssignRegister rdi -1>

445:
old  <	; syscall>
new  <	; SysCall>

449:
old  <	; return>
new  <	; Return>

456:
old  <	; function end abort>
new  <	; FunctionEnd abort>

461:
old  <	; return int8$0#>
new  <	; Return 0>

469:
old  <	; function end getenv>
new  <	; FunctionEnd getenv>

474:
old  <	; return int4$minus1#>
new  <	; Return -1>

482:
old  <	; function end system>
new  <	; FunctionEnd system>

487:
old  <	; Â£temporary2096 = int_to_int value1 (Pointer -> Pointer)>
new  <	; IntegralToIntegral Â£temporary2096 value1>

491:
old  <	; charValue1 = Â£temporary2096>
new  <	; Assign charValue1 Â£temporary2096>

495:
old  <	; Â£temporary2097 = int_to_int value2 (Pointer -> Pointer)>
new  <	; IntegralToIntegral Â£temporary2097 value2>

499:
old  <	; charValue2 = Â£temporary2097>
new  <	; Assign charValue2 Â£temporary2097>

503:
old  <	; index = int4$0#>
new  <	; Assign index 0>

507:
old  <	; if index >= valueSize goto 23>
new  <	; SignedGreaterThanEqual 23 index valueSize>

513:
old  <	; Â£temporary2101 = int_to_int index (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary2101 index>

519:
old  <	; Â£temporary2103 = charValue1 + Â£temporary2101>
new  <	; BinaryAdd Â£temporary2103 charValue1 Â£temporary2101>

524:
old  <	; Â£temporary2100 -> Â£temporary2103 = *Â£temporary2103>
new  <	; Dereference Â£temporary2100 -> Â£temporary2103 Â£temporary2103 0>

527:
old  <	; tempValue = Â£temporary2100 -> Â£temporary2103>
new  <	; Assign tempValue Â£temporary2100 -> Â£temporary2103>

532:
old  <	; Â£temporary2105 = int_to_int index (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary2105 index>

538:
old  <	; Â£temporary2107 = charValue1 + Â£temporary2105>
new  <	; BinaryAdd Â£temporary2107 charValue1 Â£temporary2105>

543:
old  <	; Â£temporary2104 -> Â£temporary2107 = *Â£temporary2107>
new  <	; Dereference Â£temporary2104 -> Â£temporary2107 Â£temporary2107 0>

546:
old  <	; Â£temporary2109 = int_to_int index (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary2109 index>

552:
old  <	; Â£temporary2111 = charValue2 + Â£temporary2109>
new  <	; BinaryAdd Â£temporary2111 charValue2 Â£temporary2109>

557:
old  <	; Â£temporary2108 -> Â£temporary2111 = *Â£temporary2111>
new  <	; Dereference Â£temporary2108 -> Â£temporary2111 Â£temporary2111 0>

560:
old  <	; Â£temporary2104 -> Â£temporary2107 = Â£temporary2108 -> Â£temporary2111>
new  <	; Assign Â£temporary2104 -> Â£temporary2107 Â£temporary2108 -> Â£temporary2111>

565:
old  <	; Â£temporary2113 = int_to_int index (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary2113 index>

571:
old  <	; Â£temporary2115 = charValue2 + Â£temporary2113>
new  <	; BinaryAdd Â£temporary2115 charValue2 Â£temporary2113>

576:
old  <	; Â£temporary2112 -> Â£temporary2115 = *Â£temporary2115>
new  <	; Dereference Â£temporary2112 -> Â£temporary2115 Â£temporary2115 0>

579:
old  <	; Â£temporary2112 -> Â£temporary2115 = tempValue>
new  <	; Assign Â£temporary2112 -> Â£temporary2115 tempValue>

584:
old  <	; index = index + int4$1#>
new  <	; BinaryAdd index index 1>

588:
old  <	; goto 5>
new  <	; Goto 5>

592:
old  <	; return>
new  <	; Return>

599:
old  <	; function end memswp>
new  <	; FunctionEnd memswp>

604:
old  <	; initializer SignedInt>
new  <	; Initializer SignedInt 2>

610:
old  <	; firstIndex = int4$0#>
new  <	; Assign firstIndex 0>

614:
old  <	; lastIndex = listSize - int4$1#>
new  <	; BinarySubtract lastIndex listSize 1>

620:
old  <	; if listSize != int4$0# goto 4>
new  <	; NotEqual 4 listSize 0>

625:
old  <	; return int8$0#>
new  <	; Return 0>

633:
old  <	; Â£temporary2118 = int_to_int valueList (Pointer -> Pointer)>
new  <	; IntegralToIntegral Â£temporary2118 valueList>

637:
old  <	; Â£temporary2119 = firstIndex * valueSize>
new  <	; SignedMultiply Â£temporary2119 firstIndex valueSize>

643:
old  <	; Â£temporary2120 = int_to_int Â£temporary2119 (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary2120 Â£temporary2119>

648:
old  <	; firstValuePtr = Â£temporary2118 + Â£temporary2120>
new  <	; BinaryAdd firstValuePtr Â£temporary2118 Â£temporary2120>

653:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 72 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

656:
old  <	; parameter keyPtr, offset 96>
new  <	; Parameter pointer keyPtr 96>

661:
old  <	; parameter firstValuePtr, offset 104>
new  <	; Parameter pointer firstValuePtr 104>

666:
old  <	; call function noellipse-noellipse compare>
new  <	; Call compare 72 0>

674:
old  <	; post call>
new  <	; PostCall 72>

677:
old  <	; Â£temporary2123 = return_value>
new  <	; GetReturnValue Â£temporary2123>

680:
old  <	; firstCompare = Â£temporary2123>
new  <	; Assign firstCompare Â£temporary2123>

684:
old  <	; if firstCompare >= int4$0# goto 17>
new  <	; SignedGreaterThanEqual 17 firstCompare 0>

689:
old  <	; return int8$0#>
new  <	; Return 0>

697:
old  <	; if firstCompare != int4$0# goto 19>
new  <	; NotEqual 19 firstCompare 0>

702:
old  <	; return firstValuePtr>
new  <	; Return firstValuePtr>

710:
old  <	; Â£temporary2126 = int_to_int valueList (Pointer -> Pointer)>
new  <	; IntegralToIntegral Â£temporary2126 valueList>

714:
old  <	; Â£temporary2127 = lastIndex * valueSize>
new  <	; SignedMultiply Â£temporary2127 lastIndex valueSize>

720:
old  <	; Â£temporary2128 = int_to_int Â£temporary2127 (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary2128 Â£temporary2127>

725:
old  <	; lastValuePtr = Â£temporary2126 + Â£temporary2128>
new  <	; BinaryAdd lastValuePtr Â£temporary2126 Â£temporary2128>

730:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 72 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

733:
old  <	; parameter keyPtr, offset 96>
new  <	; Parameter pointer keyPtr 96>

738:
old  <	; parameter lastValuePtr, offset 104>
new  <	; Parameter pointer lastValuePtr 104>

743:
old  <	; call function noellipse-noellipse compare>
new  <	; Call compare 72 0>

751:
old  <	; post call>
new  <	; PostCall 72>

754:
old  <	; Â£temporary2131 = return_value>
new  <	; GetReturnValue Â£temporary2131>

757:
old  <	; lastCompare = Â£temporary2131>
new  <	; Assign lastCompare Â£temporary2131>

761:
old  <	; if lastCompare <= int4$0# goto 32>
new  <	; SignedLessThanEqual 32 lastCompare 0>

766:
old  <	; return int8$0#>
new  <	; Return 0>

774:
old  <	; if lastCompare != int4$0# goto 34>
new  <	; NotEqual 34 lastCompare 0>

779:
old  <	; return lastValuePtr>
new  <	; Return lastValuePtr>

787:
old  <	; Â£temporary2134 = firstIndex + lastIndex>
new  <	; BinaryAdd Â£temporary2134 firstIndex lastIndex>

792:
old  <	; middleIndex = Â£temporary2134 / int4$2#>
new  <	; SignedDivide middleIndex Â£temporary2134 2>

798:
old  <	; Â£temporary2136 = int_to_int valueList (Pointer -> Pointer)>
new  <	; IntegralToIntegral Â£temporary2136 valueList>

802:
old  <	; Â£temporary2137 = middleIndex * valueSize>
new  <	; SignedMultiply Â£temporary2137 middleIndex valueSize>

808:
old  <	; Â£temporary2138 = int_to_int Â£temporary2137 (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary2138 Â£temporary2137>

813:
old  <	; middleValuePtr = Â£temporary2136 + Â£temporary2138>
new  <	; BinaryAdd middleValuePtr Â£temporary2136 Â£temporary2138>

818:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 76 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

821:
old  <	; parameter keyPtr, offset 100>
new  <	; Parameter pointer keyPtr 100>

826:
old  <	; parameter middleValuePtr, offset 108>
new  <	; Parameter pointer middleValuePtr 108>

831:
old  <	; call function noellipse-noellipse compare>
new  <	; Call compare 76 0>

839:
old  <	; post call>
new  <	; PostCall 76>

842:
old  <	; Â£temporary2141 = return_value>
new  <	; GetReturnValue Â£temporary2141>

845:
old  <	; middleCompare = Â£temporary2141>
new  <	; Assign middleCompare Â£temporary2141>

849:
old  <	; if middleCompare >= int4$0# goto 50>
new  <	; SignedGreaterThanEqual 50 middleCompare 0>

854:
old  <	; lastIndex = middleIndex>
new  <	; Assign lastIndex middleIndex>

859:
old  <	; goto 4>
new  <	; Goto 4>

863:
old  <	; if middleCompare <= int4$0# goto 53>
new  <	; SignedLessThanEqual 53 middleCompare 0>

868:
old  <	; firstIndex = middleIndex>
new  <	; Assign firstIndex middleIndex>

873:
old  <	; goto 4>
new  <	; Goto 4>

877:
old  <	; return middleValuePtr>
new  <	; Return middleValuePtr>

885:
old  <	; function end bsearch>
new  <	; FunctionEnd bsearch>

890:
old  <	; initializer zero 8>
new  <	; InitializerZero 8>

896:
old  <	; initializer Signed_Long_Int>
new  <	; Initializer Signed_Long_Int 1664525>

902:
old  <	; initializer Signed_Long_Int>
new  <	; Initializer Signed_Long_Int 127>

908:
old  <	; Â£temporary2145 = g_randValue * int8$1664525#>
new  <	; SignedMultiply Â£temporary2145 g_randValue 1664525>

914:
old  <	; Â£temporary2146 = Â£temporary2145 + int8$1013904223#>
new  <	; BinaryAdd Â£temporary2146 Â£temporary2145 1013904223>

918:
old  <	; g_randValue = Â£temporary2146 % int8$127#>
new  <	; SignedModulo g_randValue Â£temporary2146 127>

924:
old  <	; Â£temporary2148 = int_to_int g_randValue (Signed_Long_Int -> SignedInt)>
new  <	; IntegralToIntegral Â£temporary2148 g_randValue>

932:
old  <	; return Â£temporary2148>
new  <	; Return Â£temporary2148>

939:
old  <	; function end rand>
new  <	; FunctionEnd rand>

944:
old  <	; Â£temporary2149 = int_to_int seed (Unsigned_Int -> Signed_Long_Int)>
new  <	; IntegralToIntegral Â£temporary2149 seed>

950:
old  <	; g_randValue = Â£temporary2149>
new  <	; Assign g_randValue Â£temporary2149>

954:
old  <	; return>
new  <	; Return>

961:
old  <	; function end srand>
new  <	; FunctionEnd srand>

966:
old  <	; initializer String>
new  <	; Initializer String stack top %u, heap top %u, heap bottom %u\n>

972:
old  <	; initializer String>
new  <	; Initializer String   index %u, address %u, size %u\n>

978:
old  <	; initializer String>
new  <	; Initializer String \n>

984:
old  <	; Â£temporary2150 -> int8$32764# = *int8$32764#>
new  <	; Dereference Â£temporary2150 -> 32764 32764 0>

988:
old  <	; heapBottom = Â£temporary2150 -> int8$32764#>
new  <	; Assign heapBottom Â£temporary2150 -> 32764>

993:
old  <	; Â£temporary2151 -> int8$32766# = *int8$32766#>
new  <	; Dereference Â£temporary2151 -> 32766 32766 0>

997:
old  <	; topStack = Â£temporary2151 -> int8$32766#>
new  <	; Assign topStack Â£temporary2151 -> 32766>

1002:
old  <	; Â£temporary2152 -> int8$32762# = *int8$32762#>
new  <	; Dereference Â£temporary2152 -> 32762 32762 0>

1006:
old  <	; heapTop = Â£temporary2152 -> int8$32762#>
new  <	; Assign heapTop Â£temporary2152 -> 32762>

1011:
old  <	; index = int4$0#>
new  <	; Assign index 0>

1015:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1018:
old  <	; parameter string_stack20top2025u2C20heap20top2025u2C20heap20bottom2025u0A#, offset 64>
new  <	; Parameter pointer "stack top %u, heap top %u, heap bottom %u\n" 64>

1022:
old  <	; parameter topStack, offset 72>
new  <	; Parameter unsigned int topStack 72>

1027:
old  <	; parameter heapTop, offset 76>
new  <	; Parameter unsigned int heapTop 76>

1032:
old  <	; parameter heapBottom, offset 80>
new  <	; Parameter unsigned int heapBottom 80>

1037:
old  <	; call function noellipse-ellipse printf, extra 12>
new  <	; Call printf 40 12>

1046:
old  <	; post call>
new  <	; PostCall 40>

1049:
old  <	; if heapTop == int4$0# goto 32>
new  <	; Equal 32 heapTop 0>

1054:
old  <	; Â£temporary2155 = int_to_int heapTop (Unsigned_Int -> Pointer)>
new  <	; IntegralToIntegral Â£temporary2155 heapTop>

1060:
old  <	; Â£temporary2156 = Â£temporary2155 + int8$4#>
new  <	; BinaryAdd Â£temporary2156 Â£temporary2155 4>

1064:
old  <	; Â£temporary2158 -> Â£temporary2156 = *Â£temporary2156>
new  <	; Dereference Â£temporary2158 -> Â£temporary2156 Â£temporary2156 0>

1067:
old  <	; size = Â£temporary2158 -> Â£temporary2156>
new  <	; Assign size Â£temporary2158 -> Â£temporary2156>

1072:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 44 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1075:
old  <	; parameter string_2020index2025u2C20address2025u2C20size2025u0A#, offset 68>
new  <	; Parameter pointer "  index %u, address %u, size %u\n" 68>

1079:
old  <	; Â£temporary2159 = index>
new  <	; Assign Â£temporary2159 index>

1083:
old  <	; index = index + int4$1#>
new  <	; BinaryAdd index index 1>

1087:
old  <	; parameter Â£temporary2159, offset 76>
new  <	; Parameter unsigned int Â£temporary2159 76>

1091:
old  <	; parameter heapTop, offset 80>
new  <	; Parameter unsigned int heapTop 80>

1096:
old  <	; parameter size, offset 84>
new  <	; Parameter unsigned int size 84>

1101:
old  <	; call function noellipse-ellipse printf, extra 12>
new  <	; Call printf 44 12>

1110:
old  <	; post call>
new  <	; PostCall 44>

1113:
old  <	; Â£temporary2161 = int_to_int heapTop (Unsigned_Int -> Pointer)>
new  <	; IntegralToIntegral Â£temporary2161 heapTop>

1119:
old  <	; Â£temporary2162 -> Â£temporary2161 = *Â£temporary2161>
new  <	; Dereference Â£temporary2162 -> Â£temporary2161 Â£temporary2161 0>

1122:
old  <	; heapTop = Â£temporary2162 -> Â£temporary2161>
new  <	; Assign heapTop Â£temporary2162 -> Â£temporary2161>

1127:
old  <	; goto 14>
new  <	; Goto 14>

1131:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1134:
old  <	; parameter string_0A#, offset 64>
new  <	; Parameter pointer "\n" 64>

1138:
old  <	; call function noellipse-ellipse printf, extra 0>
new  <	; Call printf 40 0>

1146:
old  <	; post call>
new  <	; PostCall 40>

1149:
old  <	; return>
new  <	; Return>

1156:
old  <	; function end print_heap2>
new  <	; FunctionEnd print_heap2>

1161:
old  <	; initializer Pointer>
new  <	; Initializer Pointer 0>

1163:
old  <	; initializer zero 2040>
new  <	; InitializerZero 2040>

1169:
old  <	; initializer String>
new  <	; Initializer String Added function index %i: %i\n>

1175:
old  <	; initializer Array>
new  <	; Initializer Array 8>

1181:
old  <	; empty>
new  <	; Empty>

1184:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1187:
old  <	; parameter string_0A#, offset 60>
new  <	; Parameter pointer "\n" 60>

1191:
old  <	; call function noellipse-ellipse printf, extra 0>
new  <	; Call printf 36 0>

1199:
old  <	; post call>
new  <	; PostCall 36>

1202:
old  <	; index = int4$0#>
new  <	; Assign index 0>

1206:
old  <	; if index >= int4$256# goto 30>
new  <	; SignedGreaterThanEqual 30 index 256>

1211:
old  <	; Â£temporary2168 = int_to_int index (SignedInt -> Array)>
new  <	; IntegralToIntegral Â£temporary2168 index>

1217:
old  <	; Â£temporary2169 = Â£temporary2168 * Array_8#>
new  <	; UnsignedMultiply Â£temporary2169 Â£temporary2168 8>

1222:
old  <	; Â£temporary2170 = g_funcArray + Â£temporary2169>
new  <	; BinaryAdd Â£temporary2170 g_funcArray Â£temporary2169>

1227:
old  <	; Â£temporary2167 -> Â£temporary2170 = *Â£temporary2170>
new  <	; Dereference Â£temporary2167 -> Â£temporary2170 Â£temporary2170 0>

1230:
old  <	; if Â£temporary2167 -> Â£temporary2170 != int8$0# goto 28>
new  <	; NotEqual 28 Â£temporary2167 -> Â£temporary2170 0>

1235:
old  <	; Â£temporary2173 = int_to_int index (SignedInt -> Array)>
new  <	; IntegralToIntegral Â£temporary2173 index>

1241:
old  <	; Â£temporary2174 = Â£temporary2173 * Array_8#>
new  <	; UnsignedMultiply Â£temporary2174 Â£temporary2173 8>

1246:
old  <	; Â£temporary2175 = g_funcArray + Â£temporary2174>
new  <	; BinaryAdd Â£temporary2175 g_funcArray Â£temporary2174>

1251:
old  <	; Â£temporary2172 -> Â£temporary2175 = *Â£temporary2175>
new  <	; Dereference Â£temporary2172 -> Â£temporary2175 Â£temporary2175 0>

1254:
old  <	; Â£temporary2172 -> Â£temporary2175 = fcn>
new  <	; Assign Â£temporary2172 -> Â£temporary2175 fcn>

1259:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1262:
old  <	; parameter string_Added20function20index2025i3A2025i0A#, offset 60>
new  <	; Parameter pointer "Added function index %i: %i\n" 60>

1266:
old  <	; parameter index, offset 68>
new  <	; Parameter signedint index 68>

1271:
old  <	; Â£temporary2177 = int_to_int index (SignedInt -> Array)>
new  <	; IntegralToIntegral Â£temporary2177 index>

1277:
old  <	; Â£temporary2178 = Â£temporary2177 * Array_8#>
new  <	; UnsignedMultiply Â£temporary2178 Â£temporary2177 8>

1282:
old  <	; Â£temporary2179 = g_funcArray + Â£temporary2178>
new  <	; BinaryAdd Â£temporary2179 g_funcArray Â£temporary2178>

1287:
old  <	; Â£temporary2176 -> Â£temporary2179 = *Â£temporary2179>
new  <	; Dereference Â£temporary2176 -> Â£temporary2179 Â£temporary2179 0>

1290:
old  <	; parameter Â£temporary2176 -> Â£temporary2179, offset 72>
new  <	; Parameter pointer Â£temporary2176 -> Â£temporary2179 72>

1295:
old  <	; call function noellipse-ellipse printf, extra 12>
new  <	; Call printf 36 12>

1304:
old  <	; post call>
new  <	; PostCall 36>

1307:
old  <	; return int4$0#>
new  <	; Return 0>

1315:
old  <	; index = index + int4$1#>
new  <	; BinaryAdd index index 1>

1319:
old  <	; goto 6>
new  <	; Goto 6>

1323:
old  <	; return int4$minus1#>
new  <	; Return -1>

1331:
old  <	; function end atexit>
new  <	; FunctionEnd atexit>

1336:
old  <	; initializer String>
new  <	; Initializer String Called function index %i: %i\n>

1342:
old  <	; empty>
new  <	; Empty>

1345:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1348:
old  <	; parameter string_0A#, offset 56>
new  <	; Parameter pointer "\n" 56>

1352:
old  <	; call function noellipse-ellipse printf, extra 0>
new  <	; Call printf 32 0>

1360:
old  <	; post call>
new  <	; PostCall 32>

1363:
old  <	; index = int4$257#>
new  <	; Assign index 257>

1367:
old  <	; if index < int4$0# goto 31>
new  <	; SignedLessThan 31 index 0>

1372:
old  <	; Â£temporary2185 = int_to_int index (SignedInt -> Array)>
new  <	; IntegralToIntegral Â£temporary2185 index>

1378:
old  <	; Â£temporary2186 = Â£temporary2185 * Array_8#>
new  <	; UnsignedMultiply Â£temporary2186 Â£temporary2185 8>

1383:
old  <	; Â£temporary2187 = g_funcArray + Â£temporary2186>
new  <	; BinaryAdd Â£temporary2187 g_funcArray Â£temporary2186>

1388:
old  <	; Â£temporary2184 -> Â£temporary2187 = *Â£temporary2187>
new  <	; Dereference Â£temporary2184 -> Â£temporary2187 Â£temporary2187 0>

1391:
old  <	; if Â£temporary2184 -> Â£temporary2187 == int8$0# goto 29>
new  <	; Equal 29 Â£temporary2184 -> Â£temporary2187 0>

1396:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1399:
old  <	; parameter string_Called20function20index2025i3A2025i0A#, offset 56>
new  <	; Parameter pointer "Called function index %i: %i\n" 56>

1403:
old  <	; parameter index, offset 64>
new  <	; Parameter signedint index 64>

1408:
old  <	; Â£temporary2190 = int_to_int index (SignedInt -> Array)>
new  <	; IntegralToIntegral Â£temporary2190 index>

1414:
old  <	; Â£temporary2191 = Â£temporary2190 * Array_8#>
new  <	; UnsignedMultiply Â£temporary2191 Â£temporary2190 8>

1419:
old  <	; Â£temporary2192 = g_funcArray + Â£temporary2191>
new  <	; BinaryAdd Â£temporary2192 g_funcArray Â£temporary2191>

1424:
old  <	; Â£temporary2189 -> Â£temporary2192 = *Â£temporary2192>
new  <	; Dereference Â£temporary2189 -> Â£temporary2192 Â£temporary2192 0>

1427:
old  <	; parameter Â£temporary2189 -> Â£temporary2192, offset 68>
new  <	; Parameter pointer Â£temporary2189 -> Â£temporary2192 68>

1432:
old  <	; call function noellipse-ellipse printf, extra 12>
new  <	; Call printf 32 12>

1441:
old  <	; post call>
new  <	; PostCall 32>

1444:
old  <	; Â£temporary2195 = int_to_int index (SignedInt -> Array)>
new  <	; IntegralToIntegral Â£temporary2195 index>

1450:
old  <	; Â£temporary2196 = Â£temporary2195 * Array_8#>
new  <	; UnsignedMultiply Â£temporary2196 Â£temporary2195 8>

1455:
old  <	; Â£temporary2197 = g_funcArray + Â£temporary2196>
new  <	; BinaryAdd Â£temporary2197 g_funcArray Â£temporary2196>

1460:
old  <	; Â£temporary2194 -> Â£temporary2197 = *Â£temporary2197>
new  <	; Dereference Â£temporary2194 -> Â£temporary2197 Â£temporary2197 0>

1463:
old  <	; call header integral no zero 1 stack zero 0>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1467:
old  <	; call function noellipse-noellipse Â£temporary2194 -> Â£temporary2197>
new  <	; Call Â£temporary2194 -> Â£temporary2197 32 0>

1476:
old  <	; post call>
new  <	; PostCall 32>

1480:
old  <	; index = index - int4$1#>
new  <	; BinarySubtract index index 1>

1484:
old  <	; goto 6>
new  <	; Goto 6>

1488:
old  <	; rax = int8$60#>
new  <	; AssignRegister rax 60>

1492:
old  <	; Â£temporary2201 = int_to_int status (SignedInt -> UnsignedLongInt)>
new  <	; IntegralToIntegral Â£temporary2201 status>

1498:
old  <	; rdi = Â£temporary2201>
new  <	; AssignRegister rdi Â£temporary2201>

1501:
old  <	; syscall>
new  <	; SysCall>

1505:
old  <	; return>
new  <	; Return>

1512:
old  <	; function end exit>
new  <	; FunctionEnd exit>

1517:
old  <	; empty>
new  <	; Empty>

1520:
old  <	; index = int4$0#>
new  <	; Assign index 0>

1524:
old  <	; if index >= valueSize goto 20>
new  <	; SignedGreaterThanEqual 20 index valueSize>

1530:
old  <	; Â£temporary2205 = int_to_int index (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary2205 index>

1536:
old  <	; Â£temporary2207 = leftValuePtr + Â£temporary2205>
new  <	; BinaryAdd Â£temporary2207 leftValuePtr Â£temporary2205>

1541:
old  <	; Â£temporary2204 -> Â£temporary2207 = *Â£temporary2207>
new  <	; Dereference Â£temporary2204 -> Â£temporary2207 Â£temporary2207 0>

1544:
old  <	; tempValue = Â£temporary2204 -> Â£temporary2207>
new  <	; Assign tempValue Â£temporary2204 -> Â£temporary2207>

1549:
old  <	; Â£temporary2209 = int_to_int index (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary2209 index>

1555:
old  <	; Â£temporary2211 = leftValuePtr + Â£temporary2209>
new  <	; BinaryAdd Â£temporary2211 leftValuePtr Â£temporary2209>

1560:
old  <	; Â£temporary2208 -> Â£temporary2211 = *Â£temporary2211>
new  <	; Dereference Â£temporary2208 -> Â£temporary2211 Â£temporary2211 0>

1563:
old  <	; Â£temporary2213 = int_to_int index (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary2213 index>

1569:
old  <	; Â£temporary2215 = rightValuePtr + Â£temporary2213>
new  <	; BinaryAdd Â£temporary2215 rightValuePtr Â£temporary2213>

1574:
old  <	; Â£temporary2212 -> Â£temporary2215 = *Â£temporary2215>
new  <	; Dereference Â£temporary2212 -> Â£temporary2215 Â£temporary2215 0>

1577:
old  <	; Â£temporary2208 -> Â£temporary2211 = Â£temporary2212 -> Â£temporary2215>
new  <	; Assign Â£temporary2208 -> Â£temporary2211 Â£temporary2212 -> Â£temporary2215>

1582:
old  <	; Â£temporary2217 = int_to_int index (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary2217 index>

1588:
old  <	; Â£temporary2219 = rightValuePtr + Â£temporary2217>
new  <	; BinaryAdd Â£temporary2219 rightValuePtr Â£temporary2217>

1593:
old  <	; Â£temporary2216 -> Â£temporary2219 = *Â£temporary2219>
new  <	; Dereference Â£temporary2216 -> Â£temporary2219 Â£temporary2219 0>

1596:
old  <	; Â£temporary2216 -> Â£temporary2219 = tempValue>
new  <	; Assign Â£temporary2216 -> Â£temporary2219 tempValue>

1601:
old  <	; index = index + int4$1#>
new  <	; BinaryAdd index index 1>

1605:
old  <	; goto 2>
new  <	; Goto 2>

1609:
old  <	; return>
new  <	; Return>

1616:
old  <	; function end swap>
new  <	; FunctionEnd swap>

1621:
old  <	; empty>
new  <	; Empty>

1624:
old  <	; Â£temporary2220 = int_to_int valueList (Pointer -> Pointer)>
new  <	; IntegralToIntegral Â£temporary2220 valueList>

1628:
old  <	; charList = Â£temporary2220>
new  <	; Assign charList Â£temporary2220>

1632:
old  <	; index1 = listSize - int4$1#>
new  <	; BinarySubtract index1 listSize 1>

1638:
old  <	; if index1 <= int4$0# goto 33>
new  <	; SignedLessThanEqual 33 index1 0>

1643:
old  <	; update = int4$0#>
new  <	; Assign update 0>

1647:
old  <	; index2 = int4$0#>
new  <	; Assign index2 0>

1651:
old  <	; if index2 >= index1 goto 31>
new  <	; SignedGreaterThanEqual 31 index2 index1>

1657:
old  <	; Â£temporary2226 = index2 * valueSize>
new  <	; SignedMultiply Â£temporary2226 index2 valueSize>

1663:
old  <	; Â£temporary2227 = int_to_int Â£temporary2226 (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary2227 Â£temporary2226>

1668:
old  <	; valuePtr1 = charList + Â£temporary2227>
new  <	; BinaryAdd valuePtr1 charList Â£temporary2227>

1674:
old  <	; Â£temporary2230 = index2 + int4$1#>
new  <	; BinaryAdd Â£temporary2230 index2 1>

1679:
old  <	; Â£temporary2231 = Â£temporary2230 * valueSize>
new  <	; SignedMultiply Â£temporary2231 Â£temporary2230 valueSize>

1684:
old  <	; Â£temporary2232 = int_to_int Â£temporary2231 (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary2232 Â£temporary2231>

1689:
old  <	; valuePtr2 = charList + Â£temporary2232>
new  <	; BinaryAdd valuePtr2 charList Â£temporary2232>

1695:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 84 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1698:
old  <	; parameter valuePtr1, offset 108>
new  <	; Parameter pointer valuePtr1 108>

1703:
old  <	; parameter valuePtr2, offset 116>
new  <	; Parameter pointer valuePtr2 116>

1708:
old  <	; call function noellipse-noellipse compare>
new  <	; Call compare 84 0>

1716:
old  <	; post call>
new  <	; PostCall 84>

1719:
old  <	; Â£temporary2235 = return_value>
new  <	; GetReturnValue Â£temporary2235>

1722:
old  <	; if Â£temporary2235 <= int4$0# goto 29>
new  <	; SignedLessThanEqual 29 Â£temporary2235 0>

1727:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 84 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1730:
old  <	; parameter valuePtr1, offset 108>
new  <	; Parameter pointer valuePtr1 108>

1735:
old  <	; parameter valuePtr2, offset 116>
new  <	; Parameter pointer valuePtr2 116>

1740:
old  <	; parameter valueSize, offset 124>
new  <	; Parameter signedint valueSize 124>

1745:
old  <	; call function noellipse-noellipse swap>
new  <	; Call swap 84 0>

1752:
old  <	; post call>
new  <	; PostCall 84>

1755:
old  <	; update = int4$1#>
new  <	; Assign update 1>

1759:
old  <	; index2 = index2 + int4$1#>
new  <	; BinaryAdd index2 index2 1>

1763:
old  <	; goto 7>
new  <	; Goto 7>

1767:
old  <	; index1 = index1 - int4$1#>
new  <	; BinarySubtract index1 index1 1>

1771:
old  <	; goto 4>
new  <	; Goto 4>

1775:
old  <	; return>
new  <	; Return>

1782:
old  <	; function end qsort>
new  <	; FunctionEnd qsort>

1787:
old  <	; if value >= int4$0# goto 4>
new  <	; SignedGreaterThanEqual 4 value 0>

1792:
old  <	; Â£temporary2241 = -value>
new  <	; UnarySubtract Â£temporary2241 value>

1797:
old  <	; Â£temporary2242 = Â£temporary2241>
new  <	; Assign Â£temporary2242 Â£temporary2241>

1800:
old  <	; goto 5>
new  <	; Goto 5>

1804:
old  <	; Â£temporary2242 = value>
new  <	; Assign Â£temporary2242 value>

1808:
old  <	; return Â£temporary2242>
new  <	; Return Â£temporary2242>

1815:
old  <	; function end @abs>
new  <	; FunctionEnd @abs>

1820:
old  <	; if value >= int8$0# goto 4>
new  <	; SignedGreaterThanEqual 4 value 0>

1825:
old  <	; Â£temporary2244 = -value>
new  <	; UnarySubtract Â£temporary2244 value>

1830:
old  <	; Â£temporary2245 = Â£temporary2244>
new  <	; Assign Â£temporary2245 Â£temporary2244>

1833:
old  <	; goto 5>
new  <	; Goto 5>

1837:
old  <	; Â£temporary2245 = value>
new  <	; Assign Â£temporary2245 value>

1841:
old  <	; return Â£temporary2245>
new  <	; Return Â£temporary2245>

1848:
old  <	; function end labs>
new  <	; FunctionEnd labs>

1853:
old  <	; result.quot = int4$0#>
new  <	; Assign result.quot 0>

1857:
old  <	; result.rem = int4$0#>
new  <	; Assign result.rem 0>

1861:
old  <	; if denum != int4$0# goto 5>
new  <	; NotEqual 5 denum 0>

1866:
old  <	; errno = int4$6#>
new  <	; Assign errno 6>

1870:
old  <	; return result>
new  <	; Return result>

1879:
old  <	; result.quot = num / denum>
new  <	; SignedDivide result.quot num denum>

1886:
old  <	; result.rem = num % denum>
new  <	; SignedModulo result.rem num denum>

1893:
old  <	; return result>
new  <	; Return result>

1902:
old  <	; function end div>
new  <	; FunctionEnd div>

1907:
old  <	; result.quot = int8$0#>
new  <	; Assign result.quot 0>

1911:
old  <	; result.rem = int8$0#>
new  <	; Assign result.rem 0>

1915:
old  <	; if denum != int8$0# goto 5>
new  <	; NotEqual 5 denum 0>

1920:
old  <	; errno = int4$6#>
new  <	; Assign errno 6>

1924:
old  <	; return result>
new  <	; Return result>

1933:
old  <	; result.quot = num / denum>
new  <	; SignedDivide result.quot num denum>

1940:
old  <	; result.rem = num % denum>
new  <	; SignedModulo result.rem num denum>

1947:
old  <	; return result>
new  <	; Return result>

1956:
old  <	; function end ldiv>
new  <	; FunctionEnd ldiv>

24:
old  <	; return int8$minus1#>
new  <	; Return -1>

32:
old  <	; function end clock>
new  <	; FunctionEnd clock>

37:
old  <	; empty>
new  <	; Empty>

40:
old  <	; rax = int8$201#>
new  <	; AssignRegister rax 201>

44:
old  <	; Â£temporary2266 = &time>
new  <	; Address Â£temporary2266 time>

49:
old  <	; Â£temporary2267 = int_to_int Â£temporary2266 (Pointer -> UnsignedLongInt)>
new  <	; IntegralToIntegral Â£temporary2267 Â£temporary2266>

52:
old  <	; rdi = Â£temporary2267>
new  <	; AssignRegister rdi Â£temporary2267>

55:
old  <	; syscall>
new  <	; SysCall>

59:
old  <	; if timePtr == int8$0# goto 9>
new  <	; Equal 9 timePtr 0>

64:
old  <	; Â£temporary2269 -> timePtr = *timePtr>
new  <	; Dereference Â£temporary2269 -> timePtr timePtr 0>

68:
old  <	; Â£temporary2269 -> timePtr = time>
new  <	; Assign Â£temporary2269 -> timePtr time>

73:
old  <	; return time>
new  <	; Return time>

81:
old  <	; function end time>
new  <	; FunctionEnd time>

86:
old  <	; initializer SignedInt>
new  <	; Initializer SignedInt 4>

92:
old  <	; initializer SignedInt>
new  <	; Initializer SignedInt 365>

98:
old  <	; initializer Signed_Long_Int>
new  <	; Initializer Signed_Long_Int 86400>

104:
old  <	; initializer Signed_Long_Int>
new  <	; Initializer Signed_Long_Int 3600>

110:
old  <	; initializer Signed_Long_Int>
new  <	; Initializer Signed_Long_Int 60>

116:
old  <	; if tp == int8$0# goto 27>
new  <	; Equal 27 tp 0>

121:
old  <	; Â£temporary2272 -> tp = *tp>
new  <	; Dereference Â£temporary2272 -> tp tp 0>

125:
old  <	; Â£temporary2273 = Â£temporary2272 -> tp - int4$69#>
new  <	; BinarySubtract Â£temporary2273 Â£temporary2272 -> tp 69>

130:
old  <	; Â£temporary2274 = Â£temporary2273 / int4$4#>
new  <	; SignedDivide Â£temporary2274 Â£temporary2273 4>

135:
old  <	; Â£temporary2275 = int_to_int Â£temporary2274 (SignedInt -> Signed_Long_Int)>
new  <	; IntegralToIntegral Â£temporary2275 Â£temporary2274>

144:
old  <	; leapDays = Â£temporary2275>
new  <	; Assign leapDays Â£temporary2275>

148:
old  <	; Â£temporary2276 -> tp = *tp>
new  <	; Dereference Â£temporary2276 -> tp tp 0>

152:
old  <	; Â£temporary2277 = Â£temporary2276 -> tp - int4$70#>
new  <	; BinarySubtract Â£temporary2277 Â£temporary2276 -> tp 70>

157:
old  <	; Â£temporary2278 = Â£temporary2277 * int4$365#>
new  <	; SignedMultiply Â£temporary2278 Â£temporary2277 365>

162:
old  <	; Â£temporary2279 = int_to_int Â£temporary2278 (SignedInt -> Signed_Long_Int)>
new  <	; IntegralToIntegral Â£temporary2279 Â£temporary2278>

171:
old  <	; Â£temporary2280 = Â£temporary2279 + leapDays>
new  <	; BinaryAdd Â£temporary2280 Â£temporary2279 leapDays>

175:
old  <	; Â£temporary2281 -> tp = *tp>
new  <	; Dereference Â£temporary2281 -> tp tp 0>

179:
old  <	; Â£temporary2282 = int_to_int Â£temporary2281 -> tp (SignedInt -> Signed_Long_Int)>
new  <	; IntegralToIntegral Â£temporary2282 Â£temporary2281 -> tp>

189:
old  <	; totalDays = Â£temporary2280 + Â£temporary2282>
new  <	; BinaryAdd totalDays Â£temporary2280 Â£temporary2282>

194:
old  <	; Â£temporary2284 = totalDays * int8$86400#>
new  <	; SignedMultiply Â£temporary2284 totalDays 86400>

201:
old  <	; Â£temporary2285 -> tp = *tp>
new  <	; Dereference Â£temporary2285 -> tp tp 0>

205:
old  <	; Â£temporary2286 = int_to_int Â£temporary2285 -> tp (SignedInt -> Signed_Long_Int)>
new  <	; IntegralToIntegral Â£temporary2286 Â£temporary2285 -> tp>

215:
old  <	; Â£temporary2287 = Â£temporary2286 * int8$3600#>
new  <	; SignedMultiply Â£temporary2287 Â£temporary2286 3600>

220:
old  <	; Â£temporary2288 = Â£temporary2284 + Â£temporary2287>
new  <	; BinaryAdd Â£temporary2288 Â£temporary2284 Â£temporary2287>

224:
old  <	; Â£temporary2289 -> tp = *tp>
new  <	; Dereference Â£temporary2289 -> tp tp 0>

228:
old  <	; Â£temporary2290 = int_to_int Â£temporary2289 -> tp (SignedInt -> Signed_Long_Int)>
new  <	; IntegralToIntegral Â£temporary2290 Â£temporary2289 -> tp>

238:
old  <	; Â£temporary2291 = Â£temporary2290 * int8$60#>
new  <	; SignedMultiply Â£temporary2291 Â£temporary2290 60>

243:
old  <	; Â£temporary2292 = Â£temporary2288 + Â£temporary2291>
new  <	; BinaryAdd Â£temporary2292 Â£temporary2288 Â£temporary2291>

247:
old  <	; Â£temporary2293 -> tp = *tp>
new  <	; Dereference Â£temporary2293 -> tp tp 0>

251:
old  <	; Â£temporary2294 = int_to_int Â£temporary2293 -> tp (SignedInt -> Signed_Long_Int)>
new  <	; IntegralToIntegral Â£temporary2294 Â£temporary2293 -> tp>

261:
old  <	; Â£temporary2295 = Â£temporary2292 + Â£temporary2294>
new  <	; BinaryAdd Â£temporary2295 Â£temporary2292 Â£temporary2294>

265:
old  <	; return Â£temporary2295>
new  <	; Return Â£temporary2295>

272:
old  <	; return int8$0#>
new  <	; Return 0>

280:
old  <	; function end mktime>
new  <	; FunctionEnd mktime>

285:
old  <	; initializer zero 36>
new  <	; InitializerZero 36>

291:
old  <	; initializer Signed_Long_Int>
new  <	; Initializer Signed_Long_Int 7>

297:
old  <	; initializer SignedInt>
new  <	; Initializer SignedInt 100>

303:
old  <	; initializer SignedInt>
new  <	; Initializer SignedInt 400>

309:
old  <	; initializer Array>
new  <	; Initializer Array 4>

315:
old  <	; year = int4$1970#>
new  <	; Assign year 1970>

319:
old  <	; if timePtr == int8$0# goto 87>
new  <	; Equal 87 timePtr 0>

324:
old  <	; Â£temporary2297 -> timePtr = *timePtr>
new  <	; Dereference Â£temporary2297 -> timePtr timePtr 0>

328:
old  <	; time = Â£temporary2297 -> timePtr>
new  <	; Assign time Â£temporary2297 -> timePtr>

333:
old  <	; secondsOfDay = time % int8$86400#>
new  <	; SignedModulo secondsOfDay time 86400>

340:
old  <	; Â£temporary2300 = secondsOfDay / int8$3600#>
new  <	; SignedDivide Â£temporary2300 secondsOfDay 3600>

346:
old  <	; Â£temporary2301 = int_to_int Â£temporary2300 (Signed_Long_Int -> SignedInt)>
new  <	; IntegralToIntegral Â£temporary2301 Â£temporary2300>

353:
old  <	; g_timeStruct.tm_hour = Â£temporary2301>
new  <	; Assign g_timeStruct.tm_hour Â£temporary2301>

357:
old  <	; Â£temporary2303 = secondsOfDay % int8$3600#>
new  <	; SignedModulo Â£temporary2303 secondsOfDay 3600>

363:
old  <	; Â£temporary2304 = Â£temporary2303 / int8$60#>
new  <	; SignedDivide Â£temporary2304 Â£temporary2303 60>

369:
old  <	; Â£temporary2305 = int_to_int Â£temporary2304 (Signed_Long_Int -> SignedInt)>
new  <	; IntegralToIntegral Â£temporary2305 Â£temporary2304>

376:
old  <	; g_timeStruct.tm_min = Â£temporary2305>
new  <	; Assign g_timeStruct.tm_min Â£temporary2305>

380:
old  <	; Â£temporary2307 = secondsOfDay % int8$3600#>
new  <	; SignedModulo Â£temporary2307 secondsOfDay 3600>

386:
old  <	; Â£temporary2308 = Â£temporary2307 % int8$60#>
new  <	; SignedModulo Â£temporary2308 Â£temporary2307 60>

392:
old  <	; Â£temporary2309 = int_to_int Â£temporary2308 (Signed_Long_Int -> SignedInt)>
new  <	; IntegralToIntegral Â£temporary2309 Â£temporary2308>

399:
old  <	; g_timeStruct.tm_sec = Â£temporary2309>
new  <	; Assign g_timeStruct.tm_sec Â£temporary2309>

403:
old  <	; totalDays = time / int8$86400#>
new  <	; SignedDivide totalDays time 86400>

410:
old  <	; if totalDays >= int8$3# goto 22>
new  <	; SignedGreaterThanEqual 22 totalDays 3>

415:
old  <	; Â£temporary2313 = totalDays + int8$4#>
new  <	; BinaryAdd Â£temporary2313 totalDays 4>

420:
old  <	; Â£temporary2314 = int_to_int Â£temporary2313 (Signed_Long_Int -> SignedInt)>
new  <	; IntegralToIntegral Â£temporary2314 Â£temporary2313>

427:
old  <	; g_timeStruct.tm_wday = Â£temporary2314>
new  <	; Assign g_timeStruct.tm_wday Â£temporary2314>

431:
old  <	; goto 26>
new  <	; Goto 26>

435:
old  <	; Â£temporary2316 = totalDays - int8$3#>
new  <	; BinarySubtract Â£temporary2316 totalDays 3>

440:
old  <	; Â£temporary2317 = Â£temporary2316 % int8$7#>
new  <	; SignedModulo Â£temporary2317 Â£temporary2316 7>

445:
old  <	; Â£temporary2318 = int_to_int Â£temporary2317 (Signed_Long_Int -> SignedInt)>
new  <	; IntegralToIntegral Â£temporary2318 Â£temporary2317>

452:
old  <	; g_timeStruct.tm_wday = Â£temporary2318>
new  <	; Assign g_timeStruct.tm_wday Â£temporary2318>

456:
old  <	; Â£temporary2319 = year % int4$4#>
new  <	; SignedModulo Â£temporary2319 year 4>

462:
old  <	; if Â£temporary2319 != int4$0# goto 30>
new  <	; NotEqual 30 Â£temporary2319 0>

467:
old  <	; Â£temporary2321 = year % int4$100#>
new  <	; SignedModulo Â£temporary2321 year 100>

473:
old  <	; if Â£temporary2321 != int4$0# goto 32>
new  <	; NotEqual 32 Â£temporary2321 0>

478:
old  <	; Â£temporary2324 = year % int4$400#>
new  <	; SignedModulo Â£temporary2324 year 400>

484:
old  <	; if Â£temporary2324 != int4$0# goto 34>
new  <	; NotEqual 34 Â£temporary2324 0>

489:
old  <	; Â£temporary2327 = int4$1#>
new  <	; Assign Â£temporary2327 1>

493:
old  <	; goto 35>
new  <	; Goto 35>

497:
old  <	; Â£temporary2327 = int4$0#>
new  <	; Assign Â£temporary2327 0>

501:
old  <	; leapYear = Â£temporary2327>
new  <	; Assign leapYear Â£temporary2327>

505:
old  <	; if leapYear == int4$0# goto 39>
new  <	; Equal 39 leapYear 0>

510:
old  <	; Â£temporary2329 = int4$366#>
new  <	; Assign Â£temporary2329 366>

514:
old  <	; goto 40>
new  <	; Goto 40>

518:
old  <	; Â£temporary2329 = int4$365#>
new  <	; Assign Â£temporary2329 365>

522:
old  <	; daysOfYear = Â£temporary2329>
new  <	; Assign daysOfYear Â£temporary2329>

526:
old  <	; Â£temporary2330 = int_to_int daysOfYear (SignedInt -> Signed_Long_Int)>
new  <	; IntegralToIntegral Â£temporary2330 daysOfYear>

536:
old  <	; if totalDays >= Â£temporary2330 goto 83>
new  <	; SignedGreaterThanEqual 83 totalDays Â£temporary2330>

541:
old  <	; g_timeStruct.tm_year = year - int4$1900#>
new  <	; BinarySubtract g_timeStruct.tm_year year 1900>

547:
old  <	; Â£temporary2335 = int_to_int totalDays (Signed_Long_Int -> SignedInt)>
new  <	; IntegralToIntegral Â£temporary2335 totalDays>

555:
old  <	; g_timeStruct.tm_yday = Â£temporary2335>
new  <	; Assign g_timeStruct.tm_yday Â£temporary2335>

559:
old  <	; daysOfMonths[0] = int4$31#>
new  <	; Assign daysOfMonths[0] 31>

563:
old  <	; if leapYear == int4$0# goto 50>
new  <	; Equal 50 leapYear 0>

568:
old  <	; Â£temporary2337 = int4$29#>
new  <	; Assign Â£temporary2337 29>

572:
old  <	; goto 51>
new  <	; Goto 51>

576:
old  <	; Â£temporary2337 = int4$28#>
new  <	; Assign Â£temporary2337 28>

580:
old  <	; daysOfMonths[1] = Â£temporary2337>
new  <	; Assign daysOfMonths[1] Â£temporary2337>

584:
old  <	; daysOfMonths[2] = int4$31#>
new  <	; Assign daysOfMonths[2] 31>

588:
old  <	; daysOfMonths[3] = int4$30#>
new  <	; Assign daysOfMonths[3] 30>

592:
old  <	; daysOfMonths[4] = int4$31#>
new  <	; Assign daysOfMonths[4] 31>

596:
old  <	; daysOfMonths[5] = int4$30#>
new  <	; Assign daysOfMonths[5] 30>

600:
old  <	; daysOfMonths[6] = int4$30#>
new  <	; Assign daysOfMonths[6] 30>

604:
old  <	; daysOfMonths[7] = int4$31#>
new  <	; Assign daysOfMonths[7] 31>

608:
old  <	; daysOfMonths[8] = int4$30#>
new  <	; Assign daysOfMonths[8] 30>

612:
old  <	; daysOfMonths[9] = int4$31#>
new  <	; Assign daysOfMonths[9] 31>

616:
old  <	; daysOfMonths[10] = int4$30#>
new  <	; Assign daysOfMonths[10] 30>

620:
old  <	; daysOfMonths[11] = int4$31#>
new  <	; Assign daysOfMonths[11] 31>

624:
old  <	; month = int4$0#>
new  <	; Assign month 0>

628:
old  <	; Â£temporary2351 = int_to_int month (SignedInt -> Array)>
new  <	; IntegralToIntegral Â£temporary2351 month>

634:
old  <	; Â£temporary2352 = Â£temporary2351 * Array_4#>
new  <	; UnsignedMultiply Â£temporary2352 Â£temporary2351 4>

639:
old  <	; Â£temporary2353 = daysOfMonths + Â£temporary2352>
new  <	; BinaryAdd Â£temporary2353 daysOfMonths Â£temporary2352>

645:
old  <	; Â£temporary2350 -> Â£temporary2353 = *Â£temporary2353>
new  <	; Dereference Â£temporary2350 -> Â£temporary2353 Â£temporary2353 0>

648:
old  <	; Â£temporary2354 = int_to_int Â£temporary2350 -> Â£temporary2353 (SignedInt -> Signed_Long_Int)>
new  <	; IntegralToIntegral Â£temporary2354 Â£temporary2350 -> Â£temporary2353>

658:
old  <	; if totalDays < Â£temporary2354 goto 77>
new  <	; SignedLessThan 77 totalDays Â£temporary2354>

663:
old  <	; Â£temporary2357 = int_to_int month (SignedInt -> Array)>
new  <	; IntegralToIntegral Â£temporary2357 month>

669:
old  <	; Â£temporary2358 = Â£temporary2357 * Array_4#>
new  <	; UnsignedMultiply Â£temporary2358 Â£temporary2357 4>

674:
old  <	; Â£temporary2359 = daysOfMonths + Â£temporary2358>
new  <	; BinaryAdd Â£temporary2359 daysOfMonths Â£temporary2358>

680:
old  <	; Â£temporary2356 -> Â£temporary2359 = *Â£temporary2359>
new  <	; Dereference Â£temporary2356 -> Â£temporary2359 Â£temporary2359 0>

683:
old  <	; Â£temporary2360 = int_to_int Â£temporary2356 -> Â£temporary2359 (SignedInt -> Signed_Long_Int)>
new  <	; IntegralToIntegral Â£temporary2360 Â£temporary2356 -> Â£temporary2359>

693:
old  <	; totalDays = totalDays - Â£temporary2360>
new  <	; BinarySubtract totalDays totalDays Â£temporary2360>

697:
old  <	; month = month + int4$1#>
new  <	; BinaryAdd month month 1>

701:
old  <	; goto 63>
new  <	; Goto 63>

705:
old  <	; g_timeStruct.tm_mon = month>
new  <	; Assign g_timeStruct.tm_mon month>

710:
old  <	; Â£temporary2365 = totalDays + int8$1#>
new  <	; BinaryAdd Â£temporary2365 totalDays 1>

715:
old  <	; Â£temporary2366 = int_to_int Â£temporary2365 (Signed_Long_Int -> SignedInt)>
new  <	; IntegralToIntegral Â£temporary2366 Â£temporary2365>

722:
old  <	; g_timeStruct.tm_mday = Â£temporary2366>
new  <	; Assign g_timeStruct.tm_mday Â£temporary2366>

726:
old  <	; g_timeStruct.tm_isdst = int4$minus1#>
new  <	; Assign g_timeStruct.tm_isdst -1>

730:
old  <	; return staticaddress$@4766$g_timeStruct$0#>
new  <	; Return @4766$g_timeStruct>

738:
old  <	; year = year + int4$1#>
new  <	; BinaryAdd year year 1>

742:
old  <	; Â£temporary2369 = int_to_int daysOfYear (SignedInt -> Signed_Long_Int)>
new  <	; IntegralToIntegral Â£temporary2369 daysOfYear>

752:
old  <	; totalDays = totalDays - Â£temporary2369>
new  <	; BinarySubtract totalDays totalDays Â£temporary2369>

756:
old  <	; goto 26>
new  <	; Goto 26>

760:
old  <	; return int8$0#>
new  <	; Return 0>

768:
old  <	; function end gmtime>
new  <	; FunctionEnd gmtime>

773:
old  <	; initializer zero 8>
new  <	; InitializerZero 8>

779:
old  <	; Â£temporary2372 = time2 - time1>
new  <	; BinarySubtract Â£temporary2372 time2 time1>

784:
old  <	; Â£temporary2373 = int_to_float Â£temporary2372 (UnsignedLongInt -> Double)>
new  <	; IntegralToFloating Â£temporary2373 Â£temporary2372>

789:
old  <	; return Â£temporary2373>
new  <	; Return Â£temporary2373>

796:
old  <	; function end difftime>
new  <	; FunctionEnd difftime>

801:
old  <	; initializer zero 256>
new  <	; InitializerZero 256>

807:
old  <	; initializer String>
new  <	; Initializer String Sun>

813:
old  <	; initializer String>
new  <	; Initializer String Mon>

819:
old  <	; initializer String>
new  <	; Initializer String Tue>

825:
old  <	; initializer String>
new  <	; Initializer String Wed>

831:
old  <	; initializer String>
new  <	; Initializer String Thu>

837:
old  <	; initializer String>
new  <	; Initializer String Fri>

843:
old  <	; initializer String>
new  <	; Initializer String Sat>

849:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_Sun#>

851:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_Mon#>

853:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_Tue#>

855:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_Wed#>

857:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_Thu#>

859:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_Fri#>

861:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_Sat#>

867:
old  <	; initializer String>
new  <	; Initializer String Sunday>

873:
old  <	; initializer String>
new  <	; Initializer String Monday>

879:
old  <	; initializer String>
new  <	; Initializer String Tuesday>

885:
old  <	; initializer String>
new  <	; Initializer String Wednesday>

891:
old  <	; initializer String>
new  <	; Initializer String Thursday>

897:
old  <	; initializer String>
new  <	; Initializer String Friday>

903:
old  <	; initializer String>
new  <	; Initializer String Saturday>

909:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_Sunday#>

911:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_Monday#>

913:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_Tuesday#>

915:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_Wednesday#>

917:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_Thursday#>

919:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_Friday#>

921:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_Saturday#>

927:
old  <	; initializer String>
new  <	; Initializer String Jan>

933:
old  <	; initializer String>
new  <	; Initializer String Feb>

939:
old  <	; initializer String>
new  <	; Initializer String Mar>

945:
old  <	; initializer String>
new  <	; Initializer String Apr>

951:
old  <	; initializer String>
new  <	; Initializer String May>

957:
old  <	; initializer String>
new  <	; Initializer String Jun>

963:
old  <	; initializer String>
new  <	; Initializer String Jul>

969:
old  <	; initializer String>
new  <	; Initializer String Aug>

975:
old  <	; initializer String>
new  <	; Initializer String Sep>

981:
old  <	; initializer String>
new  <	; Initializer String Oct>

987:
old  <	; initializer String>
new  <	; Initializer String Nov>

993:
old  <	; initializer String>
new  <	; Initializer String Dec>

999:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_Jan#>

1001:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_Feb#>

1003:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_Mar#>

1005:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_Apr#>

1007:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_May#>

1009:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_Jun#>

1011:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_Jul#>

1013:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_Aug#>

1015:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_Sep#>

1017:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_Oct#>

1019:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_Nov#>

1021:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_Dec#>

1027:
old  <	; initializer String>
new  <	; Initializer String January>

1033:
old  <	; initializer String>
new  <	; Initializer String February>

1039:
old  <	; initializer String>
new  <	; Initializer String March>

1045:
old  <	; initializer String>
new  <	; Initializer String April>

1051:
old  <	; initializer String>
new  <	; Initializer String June>

1057:
old  <	; initializer String>
new  <	; Initializer String July>

1063:
old  <	; initializer String>
new  <	; Initializer String August>

1069:
old  <	; initializer String>
new  <	; Initializer String September>

1075:
old  <	; initializer String>
new  <	; Initializer String October>

1081:
old  <	; initializer String>
new  <	; Initializer String November>

1087:
old  <	; initializer String>
new  <	; Initializer String December>

1093:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_January#>

1095:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_February#>

1097:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_March#>

1099:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_April#>

1101:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_May#>

1103:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_June#>

1105:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_July#>

1107:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_August#>

1109:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_September#>

1111:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_October#>

1113:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_November#>

1115:
old  <	; initializer Pointer>
new  <	; Initializer Pointer string_December#>

1121:
old  <	; empty>
new  <	; Empty>

1124:
old  <	; return>
new  <	; Return>

1131:
old  <	; function end default_test>
new  <	; FunctionEnd default_test>

1136:
old  <	; initializer String>
new  <	; Initializer String %s %s %2i %02i:%02i:%02i %04i>

1142:
old  <	; initializer Pointer>
new  <	; Initializer Pointer 8>

1148:
old  <	; localeConvPtr = int8$0#>
new  <	; Assign localeConvPtr 0>

1152:
old  <	; if localeConvPtr == int8$0# goto 5>
new  <	; Equal 5 localeConvPtr 0>

1157:
old  <	; Â£temporary2375 -> localeConvPtr = *localeConvPtr>
new  <	; Dereference Â£temporary2375 -> localeConvPtr localeConvPtr 0>

1161:
old  <	; Â£temporary2376 = Â£temporary2375 -> localeConvPtr>
new  <	; Assign Â£temporary2376 Â£temporary2375 -> localeConvPtr>

1165:
old  <	; goto 6>
new  <	; Goto 6>

1169:
old  <	; Â£temporary2376 = int8$0#>
new  <	; Assign Â£temporary2376 0>

1173:
old  <	; shortDayList = Â£temporary2376>
new  <	; Assign shortDayList Â£temporary2376>

1177:
old  <	; if localeConvPtr == int8$0# goto 11>
new  <	; Equal 11 localeConvPtr 0>

1182:
old  <	; Â£temporary2378 -> localeConvPtr = *localeConvPtr>
new  <	; Dereference Â£temporary2378 -> localeConvPtr localeConvPtr 0>

1186:
old  <	; Â£temporary2379 = Â£temporary2378 -> localeConvPtr>
new  <	; Assign Â£temporary2379 Â£temporary2378 -> localeConvPtr>

1190:
old  <	; goto 12>
new  <	; Goto 12>

1194:
old  <	; Â£temporary2379 = int8$0#>
new  <	; Assign Â£temporary2379 0>

1198:
old  <	; shortMonthList = Â£temporary2379>
new  <	; Assign shortMonthList Â£temporary2379>

1202:
old  <	; if shortDayList == int8$0# goto 16>
new  <	; Equal 16 shortDayList 0>

1207:
old  <	; Â£temporary2381 = shortDayList>
new  <	; Assign Â£temporary2381 shortDayList>

1211:
old  <	; goto 17>
new  <	; Goto 17>

1215:
old  <	; Â£temporary2381 = g_defaultShortDayList>
new  <	; Assign Â£temporary2381 g_defaultShortDayList>

1219:
old  <	; shortDayList = Â£temporary2381>
new  <	; Assign shortDayList Â£temporary2381>

1223:
old  <	; if shortMonthList == int8$0# goto 21>
new  <	; Equal 21 shortMonthList 0>

1228:
old  <	; Â£temporary2383 = shortMonthList>
new  <	; Assign Â£temporary2383 shortMonthList>

1232:
old  <	; goto 22>
new  <	; Goto 22>

1236:
old  <	; Â£temporary2383 = g_defaultShortMonthList>
new  <	; Assign Â£temporary2383 g_defaultShortMonthList>

1240:
old  <	; shortMonthList = Â£temporary2383>
new  <	; Assign shortMonthList Â£temporary2383>

1244:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1247:
old  <	; parameter g_timeString, offset 80>
new  <	; Parameter pointer g_timeString 80>

1251:
old  <	; parameter string_25s2025s20252i202502i3A2502i3A2502i202504i#, offset 88>
new  <	; Parameter pointer "%s %s %2i %02i:%02i:%02i %04i" 88>

1255:
old  <	; Â£temporary2384 -> tp = *tp>
new  <	; Dereference Â£temporary2384 -> tp tp 0>

1259:
old  <	; Â£temporary2386 = int_to_int Â£temporary2384 -> tp (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary2386 Â£temporary2384 -> tp>

1265:
old  <	; Â£temporary2387 = Â£temporary2386 * int8$8#>
new  <	; UnsignedMultiply Â£temporary2387 Â£temporary2386 8>

1270:
old  <	; Â£temporary2388 = shortDayList + Â£temporary2387>
new  <	; BinaryAdd Â£temporary2388 shortDayList Â£temporary2387>

1275:
old  <	; Â£temporary2385 -> Â£temporary2388 = *Â£temporary2388>
new  <	; Dereference Â£temporary2385 -> Â£temporary2388 Â£temporary2388 0>

1278:
old  <	; parameter Â£temporary2385 -> Â£temporary2388, offset 96>
new  <	; Parameter pointer Â£temporary2385 -> Â£temporary2388 96>

1283:
old  <	; Â£temporary2389 -> tp = *tp>
new  <	; Dereference Â£temporary2389 -> tp tp 0>

1287:
old  <	; Â£temporary2391 = int_to_int Â£temporary2389 -> tp (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary2391 Â£temporary2389 -> tp>

1293:
old  <	; Â£temporary2392 = Â£temporary2391 * int8$8#>
new  <	; UnsignedMultiply Â£temporary2392 Â£temporary2391 8>

1298:
old  <	; Â£temporary2393 = shortMonthList + Â£temporary2392>
new  <	; BinaryAdd Â£temporary2393 shortMonthList Â£temporary2392>

1303:
old  <	; Â£temporary2390 -> Â£temporary2393 = *Â£temporary2393>
new  <	; Dereference Â£temporary2390 -> Â£temporary2393 Â£temporary2393 0>

1306:
old  <	; parameter Â£temporary2390 -> Â£temporary2393, offset 104>
new  <	; Parameter pointer Â£temporary2390 -> Â£temporary2393 104>

1311:
old  <	; Â£temporary2394 -> tp = *tp>
new  <	; Dereference Â£temporary2394 -> tp tp 0>

1315:
old  <	; parameter Â£temporary2394 -> tp, offset 112>
new  <	; Parameter signedint Â£temporary2394 -> tp 112>

1320:
old  <	; Â£temporary2395 -> tp = *tp>
new  <	; Dereference Â£temporary2395 -> tp tp 0>

1324:
old  <	; parameter Â£temporary2395 -> tp, offset 116>
new  <	; Parameter signedint Â£temporary2395 -> tp 116>

1329:
old  <	; Â£temporary2396 -> tp = *tp>
new  <	; Dereference Â£temporary2396 -> tp tp 0>

1333:
old  <	; parameter Â£temporary2396 -> tp, offset 120>
new  <	; Parameter signedint Â£temporary2396 -> tp 120>

1338:
old  <	; Â£temporary2397 -> tp = *tp>
new  <	; Dereference Â£temporary2397 -> tp tp 0>

1342:
old  <	; parameter Â£temporary2397 -> tp, offset 124>
new  <	; Parameter signedint Â£temporary2397 -> tp 124>

1347:
old  <	; Â£temporary2398 -> tp = *tp>
new  <	; Dereference Â£temporary2398 -> tp tp 0>

1351:
old  <	; Â£temporary2399 = Â£temporary2398 -> tp + int4$1900#>
new  <	; BinaryAdd Â£temporary2399 Â£temporary2398 -> tp 1900>

1356:
old  <	; parameter Â£temporary2399, offset 128>
new  <	; Parameter signedint Â£temporary2399 128>

1360:
old  <	; call function noellipse-ellipse sprintf, extra 36>
new  <	; Call sprintf 56 36>

1369:
old  <	; post call>
new  <	; PostCall 56>

1372:
old  <	; return g_timeString>
new  <	; Return g_timeString>

1380:
old  <	; function end asctime>
new  <	; FunctionEnd asctime>

1385:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1388:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1391:
old  <	; parameter time, offset 56>
new  <	; Parameter pointer time 56>

1396:
old  <	; call function noellipse-noellipse localtime>
new  <	; Call localtime 32 0>

1403:
old  <	; post call>
new  <	; PostCall 32>

1406:
old  <	; Â£temporary2401 = return_value>
new  <	; GetReturnValue Â£temporary2401>

1409:
old  <	; parameter Â£temporary2401, offset 56>
new  <	; Parameter pointer Â£temporary2401 56>

1413:
old  <	; call function noellipse-noellipse asctime>
new  <	; Call asctime 32 0>

1420:
old  <	; post call>
new  <	; PostCall 32>

1423:
old  <	; Â£temporary2402 = return_value>
new  <	; GetReturnValue Â£temporary2402>

1426:
old  <	; return Â£temporary2402>
new  <	; Return Â£temporary2402>

1433:
old  <	; function end ctime>
new  <	; FunctionEnd ctime>

1438:
old  <	; initializer SignedInt>
new  <	; Initializer SignedInt 3600>

1444:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1447:
old  <	; parameter timePtr, offset 56>
new  <	; Parameter pointer timePtr 56>

1452:
old  <	; call function noellipse-noellipse gmtime>
new  <	; Call gmtime 32 0>

1459:
old  <	; post call>
new  <	; PostCall 32>

1462:
old  <	; Â£temporary2403 = return_value>
new  <	; GetReturnValue Â£temporary2403>

1465:
old  <	; tmPtr = Â£temporary2403>
new  <	; Assign tmPtr Â£temporary2403>

1469:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1472:
old  <	; call function noellipse-noellipse localeconv>
new  <	; Call localeconv 40 0>

1479:
old  <	; post call>
new  <	; PostCall 40>

1482:
old  <	; Â£temporary2404 = return_value>
new  <	; GetReturnValue Â£temporary2404>

1485:
old  <	; localeConvPtr = Â£temporary2404>
new  <	; Assign localeConvPtr Â£temporary2404>

1489:
old  <	; timeZone = int4$0#>
new  <	; Assign timeZone 0>

1493:
old  <	; if localeConvPtr == int8$0# goto 21>
new  <	; Equal 21 localeConvPtr 0>

1498:
old  <	; Â£temporary2406 -> tmPtr = *tmPtr>
new  <	; Dereference Â£temporary2406 -> tmPtr tmPtr 0>

1502:
old  <	; if Â£temporary2406 -> tmPtr == int4$0# goto 18>
new  <	; Equal 18 Â£temporary2406 -> tmPtr 0>

1507:
old  <	; Â£temporary2407 -> localeConvPtr = *localeConvPtr>
new  <	; Dereference Â£temporary2407 -> localeConvPtr localeConvPtr 0>

1511:
old  <	; Â£temporary2410 = Â£temporary2407 -> localeConvPtr>
new  <	; Assign Â£temporary2410 Â£temporary2407 -> localeConvPtr>

1515:
old  <	; goto 20>
new  <	; Goto 20>

1519:
old  <	; Â£temporary2408 -> localeConvPtr = *localeConvPtr>
new  <	; Dereference Â£temporary2408 -> localeConvPtr localeConvPtr 0>

1523:
old  <	; Â£temporary2410 = Â£temporary2408 -> localeConvPtr>
new  <	; Assign Â£temporary2410 Â£temporary2408 -> localeConvPtr>

1527:
old  <	; timeZone = Â£temporary2410>
new  <	; Assign timeZone Â£temporary2410>

1531:
old  <	; Â£temporary2411 -> timePtr = *timePtr>
new  <	; Dereference Â£temporary2411 -> timePtr timePtr 0>

1535:
old  <	; Â£temporary2412 = timeZone * int4$3600#>
new  <	; SignedMultiply Â£temporary2412 timeZone 3600>

1541:
old  <	; Â£temporary2413 = int_to_int Â£temporary2412 (SignedInt -> UnsignedLongInt)>
new  <	; IntegralToIntegral Â£temporary2413 Â£temporary2412>

1546:
old  <	; time = Â£temporary2411 -> timePtr + Â£temporary2413>
new  <	; BinaryAdd time Â£temporary2411 -> timePtr Â£temporary2413>

1552:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 60 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1555:
old  <	; Â£temporary2415 = &time>
new  <	; Address Â£temporary2415 time>

1560:
old  <	; parameter Â£temporary2415, offset 84>
new  <	; Parameter pointer Â£temporary2415 84>

1564:
old  <	; call function noellipse-noellipse gmtime>
new  <	; Call gmtime 60 0>

1571:
old  <	; post call>
new  <	; PostCall 60>

1574:
old  <	; Â£temporary2416 = return_value>
new  <	; GetReturnValue Â£temporary2416>

1577:
old  <	; return Â£temporary2416>
new  <	; Return Â£temporary2416>

1584:
old  <	; function end localtime>
new  <	; FunctionEnd localtime>

1589:
old  <	; initializer String>
new  <	; Initializer String >

1595:
old  <	; initializer String>
new  <	; Initializer String leap days %i, total days %lu\n>

1601:
old  <	; initializer String>
new  <	; Initializer String yearDaySunday %i\n>

1607:
old  <	; initializer String>
new  <	; Initializer String yearDayMonday %i\n>

1613:
old  <	; initializer String>
new  <	; Initializer String %04d-%02d-%02d %02d:%02d:%02d>

1619:
old  <	; initializer String>
new  <	; Initializer String %02d>

1625:
old  <	; initializer String>
new  <	; Initializer String %03d>

1631:
old  <	; initializer String>
new  <	; Initializer String %s>

1637:
old  <	; initializer String>
new  <	; Initializer String AM>

1643:
old  <	; initializer String>
new  <	; Initializer String PM>

1649:
old  <	; initializer String>
new  <	; Initializer String %04d-%02d-%02d>

1655:
old  <	; initializer String>
new  <	; Initializer String %02d:%02d:%02d>

1661:
old  <	; initializer String>
new  <	; Initializer String %04d>

1667:
old  <	; initializer String>
new  <	; Initializer String %>

1673:
old  <	; initializer SignedInt>
new  <	; Initializer SignedInt 12>

1679:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1682:
old  <	; call function noellipse-noellipse localeconv>
new  <	; Call localeconv 52 0>

1689:
old  <	; post call>
new  <	; PostCall 52>

1692:
old  <	; Â£temporary2418 = return_value>
new  <	; GetReturnValue Â£temporary2418>

1695:
old  <	; localeConvPtr = Â£temporary2418>
new  <	; Assign localeConvPtr Â£temporary2418>

1699:
old  <	; if localeConvPtr == int8$0# goto 9>
new  <	; Equal 9 localeConvPtr 0>

1704:
old  <	; Â£temporary2420 -> localeConvPtr = *localeConvPtr>
new  <	; Dereference Â£temporary2420 -> localeConvPtr localeConvPtr 0>

1708:
old  <	; Â£temporary2421 = Â£temporary2420 -> localeConvPtr>
new  <	; Assign Â£temporary2421 Â£temporary2420 -> localeConvPtr>

1712:
old  <	; goto 10>
new  <	; Goto 10>

1716:
old  <	; Â£temporary2421 = int8$0#>
new  <	; Assign Â£temporary2421 0>

1720:
old  <	; shortDayList = Â£temporary2421>
new  <	; Assign shortDayList Â£temporary2421>

1724:
old  <	; if localeConvPtr == int8$0# goto 15>
new  <	; Equal 15 localeConvPtr 0>

1729:
old  <	; Â£temporary2423 -> localeConvPtr = *localeConvPtr>
new  <	; Dereference Â£temporary2423 -> localeConvPtr localeConvPtr 0>

1733:
old  <	; Â£temporary2424 = Â£temporary2423 -> localeConvPtr>
new  <	; Assign Â£temporary2424 Â£temporary2423 -> localeConvPtr>

1737:
old  <	; goto 16>
new  <	; Goto 16>

1741:
old  <	; Â£temporary2424 = int8$0#>
new  <	; Assign Â£temporary2424 0>

1745:
old  <	; shortMonthList = Â£temporary2424>
new  <	; Assign shortMonthList Â£temporary2424>

1749:
old  <	; if localeConvPtr == int8$0# goto 21>
new  <	; Equal 21 localeConvPtr 0>

1754:
old  <	; Â£temporary2426 -> localeConvPtr = *localeConvPtr>
new  <	; Dereference Â£temporary2426 -> localeConvPtr localeConvPtr 0>

1758:
old  <	; Â£temporary2427 = Â£temporary2426 -> localeConvPtr>
new  <	; Assign Â£temporary2427 Â£temporary2426 -> localeConvPtr>

1762:
old  <	; goto 22>
new  <	; Goto 22>

1766:
old  <	; Â£temporary2427 = int8$0#>
new  <	; Assign Â£temporary2427 0>

1770:
old  <	; longDayList = Â£temporary2427>
new  <	; Assign longDayList Â£temporary2427>

1774:
old  <	; if localeConvPtr == int8$0# goto 27>
new  <	; Equal 27 localeConvPtr 0>

1779:
old  <	; Â£temporary2429 -> localeConvPtr = *localeConvPtr>
new  <	; Dereference Â£temporary2429 -> localeConvPtr localeConvPtr 0>

1783:
old  <	; Â£temporary2430 = Â£temporary2429 -> localeConvPtr>
new  <	; Assign Â£temporary2430 Â£temporary2429 -> localeConvPtr>

1787:
old  <	; goto 28>
new  <	; Goto 28>

1791:
old  <	; Â£temporary2430 = int8$0#>
new  <	; Assign Â£temporary2430 0>

1795:
old  <	; longMonthList = Â£temporary2430>
new  <	; Assign longMonthList Â£temporary2430>

1799:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 92 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1802:
old  <	; parameter s, offset 116>
new  <	; Parameter pointer s 116>

1807:
old  <	; parameter string_#, offset 124>
new  <	; Parameter pointer "" 124>

1811:
old  <	; call function noellipse-noellipse strcpy>
new  <	; Call strcpy 92 0>

1818:
old  <	; post call>
new  <	; PostCall 92>

1821:
old  <	; if shortDayList == int8$0# goto 37>
new  <	; Equal 37 shortDayList 0>

1826:
old  <	; Â£temporary2433 = shortDayList>
new  <	; Assign Â£temporary2433 shortDayList>

1830:
old  <	; goto 38>
new  <	; Goto 38>

1834:
old  <	; Â£temporary2433 = g_defaultShortDayList>
new  <	; Assign Â£temporary2433 g_defaultShortDayList>

1838:
old  <	; shortDayList = Â£temporary2433>
new  <	; Assign shortDayList Â£temporary2433>

1842:
old  <	; if longDayList == int8$0# goto 42>
new  <	; Equal 42 longDayList 0>

1847:
old  <	; Â£temporary2435 = longDayList>
new  <	; Assign Â£temporary2435 longDayList>

1851:
old  <	; goto 43>
new  <	; Goto 43>

1855:
old  <	; Â£temporary2435 = g_defaultLongDayList>
new  <	; Assign Â£temporary2435 g_defaultLongDayList>

1859:
old  <	; longDayList = Â£temporary2435>
new  <	; Assign longDayList Â£temporary2435>

1863:
old  <	; if shortMonthList == int8$0# goto 47>
new  <	; Equal 47 shortMonthList 0>

1868:
old  <	; Â£temporary2437 = shortMonthList>
new  <	; Assign Â£temporary2437 shortMonthList>

1872:
old  <	; goto 48>
new  <	; Goto 48>

1876:
old  <	; Â£temporary2437 = g_defaultShortMonthList>
new  <	; Assign Â£temporary2437 g_defaultShortMonthList>

1880:
old  <	; shortMonthList = Â£temporary2437>
new  <	; Assign shortMonthList Â£temporary2437>

1884:
old  <	; if longMonthList == int8$0# goto 52>
new  <	; Equal 52 longMonthList 0>

1889:
old  <	; Â£temporary2439 = longMonthList>
new  <	; Assign Â£temporary2439 longMonthList>

1893:
old  <	; goto 53>
new  <	; Goto 53>

1897:
old  <	; Â£temporary2439 = g_defaultLongMonthList>
new  <	; Assign Â£temporary2439 g_defaultLongMonthList>

1901:
old  <	; longMonthList = Â£temporary2439>
new  <	; Assign longMonthList Â£temporary2439>

1905:
old  <	; Â£temporary2440 -> tp = *tp>
new  <	; Dereference Â£temporary2440 -> tp tp 0>

1909:
old  <	; Â£temporary2441 = Â£temporary2440 -> tp - int4$69#>
new  <	; BinarySubtract Â£temporary2441 Â£temporary2440 -> tp 69>

1914:
old  <	; leapDays = Â£temporary2441 / int4$4#>
new  <	; SignedDivide leapDays Â£temporary2441 4>

1920:
old  <	; Â£temporary2443 -> tp = *tp>
new  <	; Dereference Â£temporary2443 -> tp tp 0>

1924:
old  <	; Â£temporary2444 = Â£temporary2443 -> tp - int4$70#>
new  <	; BinarySubtract Â£temporary2444 Â£temporary2443 -> tp 70>

1929:
old  <	; Â£temporary2445 = Â£temporary2444 * int4$365#>
new  <	; SignedMultiply Â£temporary2445 Â£temporary2444 365>

1934:
old  <	; Â£temporary2446 = Â£temporary2445 + leapDays>
new  <	; BinaryAdd Â£temporary2446 Â£temporary2445 leapDays>

1938:
old  <	; Â£temporary2447 -> tp = *tp>
new  <	; Dereference Â£temporary2447 -> tp tp 0>

1942:
old  <	; Â£temporary2448 = Â£temporary2446 + Â£temporary2447 -> tp>
new  <	; BinaryAdd Â£temporary2448 Â£temporary2446 Â£temporary2447 -> tp>

1946:
old  <	; Â£temporary2449 = int_to_int Â£temporary2448 (SignedInt -> Signed_Long_Int)>
new  <	; IntegralToIntegral Â£temporary2449 Â£temporary2448>

1955:
old  <	; totalDays = Â£temporary2449>
new  <	; Assign totalDays Â£temporary2449>

1959:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 104 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1962:
old  <	; parameter string_leap20days2025i2C20total20days2025lu0A#, offset 128>
new  <	; Parameter pointer "leap days %i, total days %lu\n" 128>

1966:
old  <	; parameter leapDays, offset 136>
new  <	; Parameter signedint leapDays 136>

1971:
old  <	; parameter totalDays, offset 140>
new  <	; Parameter signed long int totalDays 140>

1976:
old  <	; call function noellipse-ellipse printf, extra 12>
new  <	; Call printf 104 12>

1985:
old  <	; post call>
new  <	; PostCall 104>

1988:
old  <	; if totalDays >= int8$3# goto 76>
new  <	; SignedGreaterThanEqual 76 totalDays 3>

1993:
old  <	; Â£temporary2452 = totalDays + int8$4#>
new  <	; BinaryAdd Â£temporary2452 totalDays 4>

1998:
old  <	; Â£temporary2453 = int_to_int Â£temporary2452 (Signed_Long_Int -> SignedInt)>
new  <	; IntegralToIntegral Â£temporary2453 Â£temporary2452>

2005:
old  <	; yearDaySunday = Â£temporary2453>
new  <	; Assign yearDaySunday Â£temporary2453>

2009:
old  <	; goto 80>
new  <	; Goto 80>

2013:
old  <	; Â£temporary2454 = totalDays - int8$3#>
new  <	; BinarySubtract Â£temporary2454 totalDays 3>

2018:
old  <	; Â£temporary2455 = Â£temporary2454 % int8$7#>
new  <	; SignedModulo Â£temporary2455 Â£temporary2454 7>

2023:
old  <	; Â£temporary2456 = int_to_int Â£temporary2455 (Signed_Long_Int -> SignedInt)>
new  <	; IntegralToIntegral Â£temporary2456 Â£temporary2455>

2030:
old  <	; yearDaySunday = Â£temporary2456>
new  <	; Assign yearDaySunday Â£temporary2456>

2034:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 112 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2037:
old  <	; parameter string_yearDaySunday2025i0A#, offset 136>
new  <	; Parameter pointer "yearDaySunday %i\n" 136>

2041:
old  <	; parameter yearDaySunday, offset 144>
new  <	; Parameter signedint yearDaySunday 144>

2046:
old  <	; call function noellipse-ellipse printf, extra 4>
new  <	; Call printf 112 4>

2055:
old  <	; post call>
new  <	; PostCall 112>

2058:
old  <	; if totalDays >= int8$4# goto 90>
new  <	; SignedGreaterThanEqual 90 totalDays 4>

2063:
old  <	; Â£temporary2459 = totalDays + int8$3#>
new  <	; BinaryAdd Â£temporary2459 totalDays 3>

2068:
old  <	; Â£temporary2460 = int_to_int Â£temporary2459 (Signed_Long_Int -> SignedInt)>
new  <	; IntegralToIntegral Â£temporary2460 Â£temporary2459>

2075:
old  <	; yearDayMonday = Â£temporary2460>
new  <	; Assign yearDayMonday Â£temporary2460>

2079:
old  <	; goto 94>
new  <	; Goto 94>

2083:
old  <	; Â£temporary2461 = totalDays - int8$4#>
new  <	; BinarySubtract Â£temporary2461 totalDays 4>

2088:
old  <	; Â£temporary2462 = Â£temporary2461 % int8$7#>
new  <	; SignedModulo Â£temporary2462 Â£temporary2461 7>

2093:
old  <	; Â£temporary2463 = int_to_int Â£temporary2462 (Signed_Long_Int -> SignedInt)>
new  <	; IntegralToIntegral Â£temporary2463 Â£temporary2462>

2100:
old  <	; yearDayMonday = Â£temporary2463>
new  <	; Assign yearDayMonday Â£temporary2463>

2104:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 112 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2107:
old  <	; parameter string_yearDayMonday2025i0A#, offset 136>
new  <	; Parameter pointer "yearDayMonday %i\n" 136>

2111:
old  <	; parameter yearDayMonday, offset 144>
new  <	; Parameter signedint yearDayMonday 144>

2116:
old  <	; call function noellipse-ellipse printf, extra 4>
new  <	; Call printf 112 4>

2125:
old  <	; post call>
new  <	; PostCall 112>

2128:
old  <	; index = int4$0#>
new  <	; Assign index 0>

2132:
old  <	; Â£temporary2466 = int_to_int index (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary2466 index>

2138:
old  <	; Â£temporary2468 = fmt + Â£temporary2466>
new  <	; BinaryAdd Â£temporary2468 fmt Â£temporary2466>

2143:
old  <	; Â£temporary2465 -> Â£temporary2468 = *Â£temporary2468>
new  <	; Dereference Â£temporary2465 -> Â£temporary2468 Â£temporary2468 0>

2146:
old  <	; if Â£temporary2465 -> Â£temporary2468 == int1$0# goto 374>
new  <	; Equal 374 Â£temporary2465 -> Â£temporary2468 0>

2151:
old  <	; Â£temporary2472 = int_to_int index (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary2472 index>

2157:
old  <	; Â£temporary2474 = fmt + Â£temporary2472>
new  <	; BinaryAdd Â£temporary2474 fmt Â£temporary2472>

2162:
old  <	; Â£temporary2471 -> Â£temporary2474 = *Â£temporary2474>
new  <	; Dereference Â£temporary2471 -> Â£temporary2474 Â£temporary2474 0>

2165:
old  <	; if Â£temporary2471 -> Â£temporary2474 != int1$37# goto 348>
new  <	; NotEqual 348 Â£temporary2471 -> Â£temporary2474 37>

2170:
old  <	; Â£temporary2476 = index + int4$1#>
new  <	; BinaryAdd Â£temporary2476 index 1>

2175:
old  <	; Â£temporary2478 = int_to_int Â£temporary2476 (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary2478 Â£temporary2476>

2180:
old  <	; Â£temporary2480 = fmt + Â£temporary2478>
new  <	; BinaryAdd Â£temporary2480 fmt Â£temporary2478>

2185:
old  <	; Â£temporary2477 -> Â£temporary2480 = *Â£temporary2480>
new  <	; Dereference Â£temporary2477 -> Â£temporary2480 Â£temporary2480 0>

2188:
old  <	; case Â£temporary2477 -> Â£temporary2480 == int1$97# goto 136>
new  <	; Case 136 Â£temporary2477 -> Â£temporary2480 97>

2194:
old  <	; case Â£temporary2477 -> Â£temporary2480 == int1$65# goto 147>
new  <	; Case 147 Â£temporary2477 -> Â£temporary2480 65>

2199:
old  <	; case Â£temporary2477 -> Â£temporary2480 == int1$98# goto 158>
new  <	; Case 158 Â£temporary2477 -> Â£temporary2480 98>

2204:
old  <	; case Â£temporary2477 -> Â£temporary2480 == int1$66# goto 169>
new  <	; Case 169 Â£temporary2477 -> Â£temporary2480 66>

2209:
old  <	; case Â£temporary2477 -> Â£temporary2480 == int1$99# goto 180>
new  <	; Case 180 Â£temporary2477 -> Â£temporary2480 99>

2214:
old  <	; case Â£temporary2477 -> Â£temporary2480 == int1$100# goto 200>
new  <	; Case 200 Â£temporary2477 -> Â£temporary2480 100>

2219:
old  <	; case Â£temporary2477 -> Â£temporary2480 == int1$72# goto 208>
new  <	; Case 208 Â£temporary2477 -> Â£temporary2480 72>

2224:
old  <	; case Â£temporary2477 -> Â£temporary2480 == int1$73# goto 216>
new  <	; Case 216 Â£temporary2477 -> Â£temporary2480 73>

2229:
old  <	; case Â£temporary2477 -> Â£temporary2480 == int1$106# goto 225>
new  <	; Case 225 Â£temporary2477 -> Â£temporary2480 106>

2234:
old  <	; case Â£temporary2477 -> Â£temporary2480 == int1$109# goto 233>
new  <	; Case 233 Â£temporary2477 -> Â£temporary2480 109>

2239:
old  <	; case Â£temporary2477 -> Â£temporary2480 == int1$77# goto 242>
new  <	; Case 242 Â£temporary2477 -> Â£temporary2480 77>

2244:
old  <	; case Â£temporary2477 -> Â£temporary2480 == int1$112# goto 250>
new  <	; Case 250 Â£temporary2477 -> Â£temporary2480 112>

2249:
old  <	; case Â£temporary2477 -> Â£temporary2480 == int1$83# goto 262>
new  <	; Case 262 Â£temporary2477 -> Â£temporary2480 83>

2254:
old  <	; case Â£temporary2477 -> Â£temporary2480 == int1$85# goto 270>
new  <	; Case 270 Â£temporary2477 -> Â£temporary2480 85>

2259:
old  <	; case Â£temporary2477 -> Â£temporary2480 == int1$119# goto 277>
new  <	; Case 277 Â£temporary2477 -> Â£temporary2480 119>

2264:
old  <	; case Â£temporary2477 -> Â£temporary2480 == int1$87# goto 285>
new  <	; Case 285 Â£temporary2477 -> Â£temporary2480 87>

2269:
old  <	; case Â£temporary2477 -> Â£temporary2480 == int1$120# goto 292>
new  <	; Case 292 Â£temporary2477 -> Â£temporary2480 120>

2274:
old  <	; case Â£temporary2477 -> Â£temporary2480 == int1$88# goto 306>
new  <	; Case 306 Â£temporary2477 -> Â£temporary2480 88>

2279:
old  <	; case Â£temporary2477 -> Â£temporary2480 == int1$121# goto 318>
new  <	; Case 318 Â£temporary2477 -> Â£temporary2480 121>

2284:
old  <	; case Â£temporary2477 -> Â£temporary2480 == int1$89# goto 327>
new  <	; Case 327 Â£temporary2477 -> Â£temporary2480 89>

2289:
old  <	; case Â£temporary2477 -> Â£temporary2480 == int1$90# goto 336>
new  <	; Case 336 Â£temporary2477 -> Â£temporary2480 90>

2294:
old  <	; case Â£temporary2477 -> Â£temporary2480 == int1$37# goto 342>
new  <	; Case 342 Â£temporary2477 -> Â£temporary2480 37>

2299:
old  <	; case end Â£temporary2477 -> Â£temporary2480>
new  <	; CaseEnd Â£temporary2477 -> Â£temporary2480>

2302:
old  <	; goto 355>
new  <	; Goto 355>

2306:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2309:
old  <	; parameter add, offset 160>
new  <	; Parameter pointer add 160>

2314:
old  <	; Â£temporary2481 -> tp = *tp>
new  <	; Dereference Â£temporary2481 -> tp tp 0>

2318:
old  <	; Â£temporary2483 = int_to_int Â£temporary2481 -> tp (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary2483 Â£temporary2481 -> tp>

2324:
old  <	; Â£temporary2484 = Â£temporary2483 * int8$8#>
new  <	; UnsignedMultiply Â£temporary2484 Â£temporary2483 8>

2329:
old  <	; Â£temporary2485 = shortDayList + Â£temporary2484>
new  <	; BinaryAdd Â£temporary2485 shortDayList Â£temporary2484>

2334:
old  <	; Â£temporary2482 -> Â£temporary2485 = *Â£temporary2485>
new  <	; Dereference Â£temporary2482 -> Â£temporary2485 Â£temporary2485 0>

2337:
old  <	; parameter Â£temporary2482 -> Â£temporary2485, offset 168>
new  <	; Parameter pointer Â£temporary2482 -> Â£temporary2485 168>

2342:
old  <	; call function noellipse-noellipse strcpy>
new  <	; Call strcpy 136 0>

2349:
old  <	; post call>
new  <	; PostCall 136>

2352:
old  <	; goto 355>
new  <	; Goto 355>

2356:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2359:
old  <	; parameter add, offset 160>
new  <	; Parameter pointer add 160>

2364:
old  <	; Â£temporary2487 -> tp = *tp>
new  <	; Dereference Â£temporary2487 -> tp tp 0>

2368:
old  <	; Â£temporary2489 = int_to_int Â£temporary2487 -> tp (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary2489 Â£temporary2487 -> tp>

2374:
old  <	; Â£temporary2490 = Â£temporary2489 * int8$8#>
new  <	; UnsignedMultiply Â£temporary2490 Â£temporary2489 8>

2379:
old  <	; Â£temporary2491 = longDayList + Â£temporary2490>
new  <	; BinaryAdd Â£temporary2491 longDayList Â£temporary2490>

2384:
old  <	; Â£temporary2488 -> Â£temporary2491 = *Â£temporary2491>
new  <	; Dereference Â£temporary2488 -> Â£temporary2491 Â£temporary2491 0>

2387:
old  <	; parameter Â£temporary2488 -> Â£temporary2491, offset 168>
new  <	; Parameter pointer Â£temporary2488 -> Â£temporary2491 168>

2392:
old  <	; call function noellipse-noellipse strcpy>
new  <	; Call strcpy 136 0>

2399:
old  <	; post call>
new  <	; PostCall 136>

2402:
old  <	; goto 355>
new  <	; Goto 355>

2406:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2409:
old  <	; parameter add, offset 160>
new  <	; Parameter pointer add 160>

2414:
old  <	; Â£temporary2493 -> tp = *tp>
new  <	; Dereference Â£temporary2493 -> tp tp 0>

2418:
old  <	; Â£temporary2495 = int_to_int Â£temporary2493 -> tp (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary2495 Â£temporary2493 -> tp>

2424:
old  <	; Â£temporary2496 = Â£temporary2495 * int8$8#>
new  <	; UnsignedMultiply Â£temporary2496 Â£temporary2495 8>

2429:
old  <	; Â£temporary2497 = shortMonthList + Â£temporary2496>
new  <	; BinaryAdd Â£temporary2497 shortMonthList Â£temporary2496>

2434:
old  <	; Â£temporary2494 -> Â£temporary2497 = *Â£temporary2497>
new  <	; Dereference Â£temporary2494 -> Â£temporary2497 Â£temporary2497 0>

2437:
old  <	; parameter Â£temporary2494 -> Â£temporary2497, offset 168>
new  <	; Parameter pointer Â£temporary2494 -> Â£temporary2497 168>

2442:
old  <	; call function noellipse-noellipse strcpy>
new  <	; Call strcpy 136 0>

2449:
old  <	; post call>
new  <	; PostCall 136>

2452:
old  <	; goto 355>
new  <	; Goto 355>

2456:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2459:
old  <	; parameter add, offset 160>
new  <	; Parameter pointer add 160>

2464:
old  <	; Â£temporary2499 -> tp = *tp>
new  <	; Dereference Â£temporary2499 -> tp tp 0>

2468:
old  <	; Â£temporary2501 = int_to_int Â£temporary2499 -> tp (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary2501 Â£temporary2499 -> tp>

2474:
old  <	; Â£temporary2502 = Â£temporary2501 * int8$8#>
new  <	; UnsignedMultiply Â£temporary2502 Â£temporary2501 8>

2479:
old  <	; Â£temporary2503 = longMonthList + Â£temporary2502>
new  <	; BinaryAdd Â£temporary2503 longMonthList Â£temporary2502>

2484:
old  <	; Â£temporary2500 -> Â£temporary2503 = *Â£temporary2503>
new  <	; Dereference Â£temporary2500 -> Â£temporary2503 Â£temporary2503 0>

2487:
old  <	; parameter Â£temporary2500 -> Â£temporary2503, offset 168>
new  <	; Parameter pointer Â£temporary2500 -> Â£temporary2503 168>

2492:
old  <	; call function noellipse-noellipse strcpy>
new  <	; Call strcpy 136 0>

2499:
old  <	; post call>
new  <	; PostCall 136>

2502:
old  <	; goto 355>
new  <	; Goto 355>

2506:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2509:
old  <	; parameter add, offset 160>
new  <	; Parameter pointer add 160>

2514:
old  <	; parameter string_2504d2D2502d2D2502d202502d3A2502d3A2502d#, offset 168>
new  <	; Parameter pointer "%04d-%02d-%02d %02d:%02d:%02d" 168>

2518:
old  <	; Â£temporary2505 -> tp = *tp>
new  <	; Dereference Â£temporary2505 -> tp tp 0>

2522:
old  <	; Â£temporary2506 = Â£temporary2505 -> tp + int4$1900#>
new  <	; BinaryAdd Â£temporary2506 Â£temporary2505 -> tp 1900>

2527:
old  <	; parameter Â£temporary2506, offset 176>
new  <	; Parameter signedint Â£temporary2506 176>

2531:
old  <	; Â£temporary2507 -> tp = *tp>
new  <	; Dereference Â£temporary2507 -> tp tp 0>

2535:
old  <	; Â£temporary2508 = Â£temporary2507 -> tp + int4$1#>
new  <	; BinaryAdd Â£temporary2508 Â£temporary2507 -> tp 1>

2540:
old  <	; parameter Â£temporary2508, offset 180>
new  <	; Parameter signedint Â£temporary2508 180>

2544:
old  <	; Â£temporary2509 -> tp = *tp>
new  <	; Dereference Â£temporary2509 -> tp tp 0>

2548:
old  <	; parameter Â£temporary2509 -> tp, offset 184>
new  <	; Parameter signedint Â£temporary2509 -> tp 184>

2553:
old  <	; Â£temporary2510 -> tp = *tp>
new  <	; Dereference Â£temporary2510 -> tp tp 0>

2557:
old  <	; parameter Â£temporary2510 -> tp, offset 188>
new  <	; Parameter signedint Â£temporary2510 -> tp 188>

2562:
old  <	; Â£temporary2511 -> tp = *tp>
new  <	; Dereference Â£temporary2511 -> tp tp 0>

2566:
old  <	; parameter Â£temporary2511 -> tp, offset 192>
new  <	; Parameter signedint Â£temporary2511 -> tp 192>

2571:
old  <	; Â£temporary2512 -> tp = *tp>
new  <	; Dereference Â£temporary2512 -> tp tp 0>

2575:
old  <	; parameter Â£temporary2512 -> tp, offset 196>
new  <	; Parameter signedint Â£temporary2512 -> tp 196>

2580:
old  <	; call function noellipse-ellipse sprintf, extra 24>
new  <	; Call sprintf 136 24>

2589:
old  <	; post call>
new  <	; PostCall 136>

2592:
old  <	; goto 355>
new  <	; Goto 355>

2596:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2599:
old  <	; parameter add, offset 160>
new  <	; Parameter pointer add 160>

2604:
old  <	; parameter string_2502d#, offset 168>
new  <	; Parameter pointer "%02d" 168>

2608:
old  <	; Â£temporary2514 -> tp = *tp>
new  <	; Dereference Â£temporary2514 -> tp tp 0>

2612:
old  <	; parameter Â£temporary2514 -> tp, offset 176>
new  <	; Parameter signedint Â£temporary2514 -> tp 176>

2617:
old  <	; call function noellipse-ellipse sprintf, extra 4>
new  <	; Call sprintf 136 4>

2626:
old  <	; post call>
new  <	; PostCall 136>

2629:
old  <	; goto 355>
new  <	; Goto 355>

2633:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2636:
old  <	; parameter add, offset 160>
new  <	; Parameter pointer add 160>

2641:
old  <	; parameter string_2502d#, offset 168>
new  <	; Parameter pointer "%02d" 168>

2645:
old  <	; Â£temporary2516 -> tp = *tp>
new  <	; Dereference Â£temporary2516 -> tp tp 0>

2649:
old  <	; parameter Â£temporary2516 -> tp, offset 176>
new  <	; Parameter signedint Â£temporary2516 -> tp 176>

2654:
old  <	; call function noellipse-ellipse sprintf, extra 4>
new  <	; Call sprintf 136 4>

2663:
old  <	; post call>
new  <	; PostCall 136>

2666:
old  <	; goto 355>
new  <	; Goto 355>

2670:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2673:
old  <	; parameter add, offset 160>
new  <	; Parameter pointer add 160>

2678:
old  <	; parameter string_2502d#, offset 168>
new  <	; Parameter pointer "%02d" 168>

2682:
old  <	; Â£temporary2518 -> tp = *tp>
new  <	; Dereference Â£temporary2518 -> tp tp 0>

2686:
old  <	; Â£temporary2519 = Â£temporary2518 -> tp % int4$12#>
new  <	; SignedModulo Â£temporary2519 Â£temporary2518 -> tp 12>

2692:
old  <	; parameter Â£temporary2519, offset 176>
new  <	; Parameter signedint Â£temporary2519 176>

2696:
old  <	; call function noellipse-ellipse sprintf, extra 4>
new  <	; Call sprintf 136 4>

2705:
old  <	; post call>
new  <	; PostCall 136>

2708:
old  <	; goto 355>
new  <	; Goto 355>

2712:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2715:
old  <	; parameter add, offset 160>
new  <	; Parameter pointer add 160>

2720:
old  <	; parameter string_2503d#, offset 168>
new  <	; Parameter pointer "%03d" 168>

2724:
old  <	; Â£temporary2521 -> tp = *tp>
new  <	; Dereference Â£temporary2521 -> tp tp 0>

2728:
old  <	; parameter Â£temporary2521 -> tp, offset 176>
new  <	; Parameter signedint Â£temporary2521 -> tp 176>

2733:
old  <	; call function noellipse-ellipse sprintf, extra 4>
new  <	; Call sprintf 136 4>

2742:
old  <	; post call>
new  <	; PostCall 136>

2745:
old  <	; goto 355>
new  <	; Goto 355>

2749:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2752:
old  <	; parameter add, offset 160>
new  <	; Parameter pointer add 160>

2757:
old  <	; parameter string_2502d#, offset 168>
new  <	; Parameter pointer "%02d" 168>

2761:
old  <	; Â£temporary2523 -> tp = *tp>
new  <	; Dereference Â£temporary2523 -> tp tp 0>

2765:
old  <	; Â£temporary2524 = Â£temporary2523 -> tp + int4$1#>
new  <	; BinaryAdd Â£temporary2524 Â£temporary2523 -> tp 1>

2770:
old  <	; parameter Â£temporary2524, offset 176>
new  <	; Parameter signedint Â£temporary2524 176>

2774:
old  <	; call function noellipse-ellipse sprintf, extra 4>
new  <	; Call sprintf 136 4>

2783:
old  <	; post call>
new  <	; PostCall 136>

2786:
old  <	; goto 355>
new  <	; Goto 355>

2790:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2793:
old  <	; parameter add, offset 160>
new  <	; Parameter pointer add 160>

2798:
old  <	; parameter string_2502d#, offset 168>
new  <	; Parameter pointer "%02d" 168>

2802:
old  <	; Â£temporary2526 -> tp = *tp>
new  <	; Dereference Â£temporary2526 -> tp tp 0>

2806:
old  <	; parameter Â£temporary2526 -> tp, offset 176>
new  <	; Parameter signedint Â£temporary2526 -> tp 176>

2811:
old  <	; call function noellipse-ellipse sprintf, extra 4>
new  <	; Call sprintf 136 4>

2820:
old  <	; post call>
new  <	; PostCall 136>

2823:
old  <	; goto 355>
new  <	; Goto 355>

2827:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2830:
old  <	; parameter add, offset 160>
new  <	; Parameter pointer add 160>

2835:
old  <	; parameter string_25s#, offset 168>
new  <	; Parameter pointer "%s" 168>

2839:
old  <	; Â£temporary2528 -> tp = *tp>
new  <	; Dereference Â£temporary2528 -> tp tp 0>

2843:
old  <	; if Â£temporary2528 -> tp >= int4$12# goto 257>
new  <	; SignedGreaterThanEqual 257 Â£temporary2528 -> tp 12>

2848:
old  <	; Â£temporary2530 = string_AM#>
new  <	; Assign Â£temporary2530 "AM">

2852:
old  <	; goto 258>
new  <	; Goto 258>

2856:
old  <	; Â£temporary2530 = string_PM#>
new  <	; Assign Â£temporary2530 "PM">

2860:
old  <	; parameter Â£temporary2530, offset 176>
new  <	; Parameter pointer Â£temporary2530 176>

2864:
old  <	; call function noellipse-ellipse sprintf, extra 8>
new  <	; Call sprintf 136 8>

2873:
old  <	; post call>
new  <	; PostCall 136>

2876:
old  <	; goto 355>
new  <	; Goto 355>

2880:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2883:
old  <	; parameter add, offset 160>
new  <	; Parameter pointer add 160>

2888:
old  <	; parameter string_2502d#, offset 168>
new  <	; Parameter pointer "%02d" 168>

2892:
old  <	; Â£temporary2532 -> tp = *tp>
new  <	; Dereference Â£temporary2532 -> tp tp 0>

2896:
old  <	; parameter Â£temporary2532 -> tp, offset 176>
new  <	; Parameter signedint Â£temporary2532 -> tp 176>

2901:
old  <	; call function noellipse-ellipse sprintf, extra 4>
new  <	; Call sprintf 136 4>

2910:
old  <	; post call>
new  <	; PostCall 136>

2913:
old  <	; goto 355>
new  <	; Goto 355>

2917:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2920:
old  <	; parameter add, offset 160>
new  <	; Parameter pointer add 160>

2925:
old  <	; parameter string_2502d#, offset 168>
new  <	; Parameter pointer "%02d" 168>

2929:
old  <	; parameter yearDaySunday, offset 176>
new  <	; Parameter signedint yearDaySunday 176>

2934:
old  <	; call function noellipse-ellipse sprintf, extra 4>
new  <	; Call sprintf 136 4>

2943:
old  <	; post call>
new  <	; PostCall 136>

2946:
old  <	; goto 355>
new  <	; Goto 355>

2950:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2953:
old  <	; parameter add, offset 160>
new  <	; Parameter pointer add 160>

2958:
old  <	; parameter string_2502d#, offset 168>
new  <	; Parameter pointer "%02d" 168>

2962:
old  <	; Â£temporary2535 -> tp = *tp>
new  <	; Dereference Â£temporary2535 -> tp tp 0>

2966:
old  <	; parameter Â£temporary2535 -> tp, offset 176>
new  <	; Parameter signedint Â£temporary2535 -> tp 176>

2971:
old  <	; call function noellipse-ellipse sprintf, extra 4>
new  <	; Call sprintf 136 4>

2980:
old  <	; post call>
new  <	; PostCall 136>

2983:
old  <	; goto 355>
new  <	; Goto 355>

2987:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2990:
old  <	; parameter add, offset 160>
new  <	; Parameter pointer add 160>

2995:
old  <	; parameter string_2502d#, offset 168>
new  <	; Parameter pointer "%02d" 168>

2999:
old  <	; parameter yearDayMonday, offset 176>
new  <	; Parameter signedint yearDayMonday 176>

3004:
old  <	; call function noellipse-ellipse sprintf, extra 4>
new  <	; Call sprintf 136 4>

3013:
old  <	; post call>
new  <	; PostCall 136>

3016:
old  <	; goto 355>
new  <	; Goto 355>

3020:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3023:
old  <	; parameter add, offset 160>
new  <	; Parameter pointer add 160>

3028:
old  <	; parameter string_2504d2D2502d2D2502d#, offset 168>
new  <	; Parameter pointer "%04d-%02d-%02d" 168>

3032:
old  <	; Â£temporary2538 -> tp = *tp>
new  <	; Dereference Â£temporary2538 -> tp tp 0>

3036:
old  <	; Â£temporary2539 = Â£temporary2538 -> tp + int4$1900#>
new  <	; BinaryAdd Â£temporary2539 Â£temporary2538 -> tp 1900>

3041:
old  <	; parameter Â£temporary2539, offset 176>
new  <	; Parameter signedint Â£temporary2539 176>

3045:
old  <	; Â£temporary2540 -> tp = *tp>
new  <	; Dereference Â£temporary2540 -> tp tp 0>

3049:
old  <	; Â£temporary2541 = Â£temporary2540 -> tp + int4$1#>
new  <	; BinaryAdd Â£temporary2541 Â£temporary2540 -> tp 1>

3054:
old  <	; parameter Â£temporary2541, offset 180>
new  <	; Parameter signedint Â£temporary2541 180>

3058:
old  <	; Â£temporary2542 -> tp = *tp>
new  <	; Dereference Â£temporary2542 -> tp tp 0>

3062:
old  <	; parameter Â£temporary2542 -> tp, offset 184>
new  <	; Parameter signedint Â£temporary2542 -> tp 184>

3067:
old  <	; call function noellipse-ellipse sprintf, extra 12>
new  <	; Call sprintf 136 12>

3076:
old  <	; post call>
new  <	; PostCall 136>

3079:
old  <	; goto 355>
new  <	; Goto 355>

3083:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3086:
old  <	; parameter add, offset 160>
new  <	; Parameter pointer add 160>

3091:
old  <	; parameter string_2502d3A2502d3A2502d#, offset 168>
new  <	; Parameter pointer "%02d:%02d:%02d" 168>

3095:
old  <	; Â£temporary2544 -> tp = *tp>
new  <	; Dereference Â£temporary2544 -> tp tp 0>

3099:
old  <	; parameter Â£temporary2544 -> tp, offset 176>
new  <	; Parameter signedint Â£temporary2544 -> tp 176>

3104:
old  <	; Â£temporary2545 -> tp = *tp>
new  <	; Dereference Â£temporary2545 -> tp tp 0>

3108:
old  <	; parameter Â£temporary2545 -> tp, offset 180>
new  <	; Parameter signedint Â£temporary2545 -> tp 180>

3113:
old  <	; Â£temporary2546 -> tp = *tp>
new  <	; Dereference Â£temporary2546 -> tp tp 0>

3117:
old  <	; parameter Â£temporary2546 -> tp, offset 184>
new  <	; Parameter signedint Â£temporary2546 -> tp 184>

3122:
old  <	; call function noellipse-ellipse sprintf, extra 12>
new  <	; Call sprintf 136 12>

3131:
old  <	; post call>
new  <	; PostCall 136>

3134:
old  <	; goto 355>
new  <	; Goto 355>

3138:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3141:
old  <	; parameter add, offset 160>
new  <	; Parameter pointer add 160>

3146:
old  <	; parameter string_2502d#, offset 168>
new  <	; Parameter pointer "%02d" 168>

3150:
old  <	; Â£temporary2548 -> tp = *tp>
new  <	; Dereference Â£temporary2548 -> tp tp 0>

3154:
old  <	; Â£temporary2549 = Â£temporary2548 -> tp % int4$100#>
new  <	; SignedModulo Â£temporary2549 Â£temporary2548 -> tp 100>

3160:
old  <	; parameter Â£temporary2549, offset 176>
new  <	; Parameter signedint Â£temporary2549 176>

3164:
old  <	; call function noellipse-ellipse sprintf, extra 4>
new  <	; Call sprintf 136 4>

3173:
old  <	; post call>
new  <	; PostCall 136>

3176:
old  <	; goto 355>
new  <	; Goto 355>

3180:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3183:
old  <	; parameter add, offset 160>
new  <	; Parameter pointer add 160>

3188:
old  <	; parameter string_2504d#, offset 168>
new  <	; Parameter pointer "%04d" 168>

3192:
old  <	; Â£temporary2551 -> tp = *tp>
new  <	; Dereference Â£temporary2551 -> tp tp 0>

3196:
old  <	; Â£temporary2552 = Â£temporary2551 -> tp + int4$1900#>
new  <	; BinaryAdd Â£temporary2552 Â£temporary2551 -> tp 1900>

3201:
old  <	; parameter Â£temporary2552, offset 176>
new  <	; Parameter signedint Â£temporary2552 176>

3205:
old  <	; call function noellipse-ellipse sprintf, extra 4>
new  <	; Call sprintf 136 4>

3214:
old  <	; post call>
new  <	; PostCall 136>

3217:
old  <	; goto 355>
new  <	; Goto 355>

3221:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3224:
old  <	; parameter add, offset 160>
new  <	; Parameter pointer add 160>

3229:
old  <	; parameter string_#, offset 168>
new  <	; Parameter pointer "" 168>

3233:
old  <	; call function noellipse-noellipse strcpy>
new  <	; Call strcpy 136 0>

3240:
old  <	; post call>
new  <	; PostCall 136>

3243:
old  <	; goto 355>
new  <	; Goto 355>

3247:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3250:
old  <	; parameter add, offset 160>
new  <	; Parameter pointer add 160>

3255:
old  <	; parameter string_25#, offset 168>
new  <	; Parameter pointer "%" 168>

3259:
old  <	; call function noellipse-noellipse strcpy>
new  <	; Call strcpy 136 0>

3266:
old  <	; post call>
new  <	; PostCall 136>

3269:
old  <	; goto 355>
new  <	; Goto 355>

3273:
old  <	; Â£temporary2556 -> add = *add>
new  <	; Dereference Â£temporary2556 -> add add 0>

3278:
old  <	; Â£temporary2558 = int_to_int index (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary2558 index>

3284:
old  <	; Â£temporary2560 = fmt + Â£temporary2558>
new  <	; BinaryAdd Â£temporary2560 fmt Â£temporary2558>

3289:
old  <	; Â£temporary2557 -> Â£temporary2560 = *Â£temporary2560>
new  <	; Dereference Â£temporary2557 -> Â£temporary2560 Â£temporary2560 0>

3292:
old  <	; Â£temporary2556 -> add = Â£temporary2557 -> Â£temporary2560>
new  <	; Assign Â£temporary2556 -> add Â£temporary2557 -> Â£temporary2560>

3297:
old  <	; Â£temporary2561 -> add = *add>
new  <	; Dereference Â£temporary2561 -> add add 0>

3302:
old  <	; Â£temporary2561 -> add = int1$0#>
new  <	; Assign Â£temporary2561 -> add 0>

3306:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3309:
old  <	; parameter s, offset 160>
new  <	; Parameter pointer s 160>

3314:
old  <	; call function noellipse-noellipse strlen>
new  <	; Call strlen 136 0>

3321:
old  <	; post call>
new  <	; PostCall 136>

3324:
old  <	; Â£temporary2562 = return_value>
new  <	; GetReturnValue Â£temporary2562>

3327:
old  <	; call header integral no zero 1 stack zero 0>
new  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3331:
old  <	; parameter add, offset 160>
new  <	; Parameter pointer add 160>

3336:
old  <	; call function noellipse-noellipse strlen>
new  <	; Call strlen 136 0>

3343:
old  <	; post call>
new  <	; PostCall 136>

3348:
old  <	; Â£temporary2563 = return_value>
new  <	; GetReturnValue Â£temporary2563>

3351:
old  <	; Â£temporary2564 = Â£temporary2562 + Â£temporary2563>
new  <	; BinaryAdd Â£temporary2564 Â£temporary2562 Â£temporary2563>

3355:
old  <	; if Â£temporary2564 >= smax goto 374>
new  <	; SignedGreaterThanEqual 374 Â£temporary2564 smax>

3360:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3363:
old  <	; parameter s, offset 160>
new  <	; Parameter pointer s 160>

3368:
old  <	; parameter add, offset 168>
new  <	; Parameter pointer add 168>

3373:
old  <	; call function noellipse-noellipse strcat>
new  <	; Call strcat 136 0>

3380:
old  <	; post call>
new  <	; PostCall 136>

3383:
old  <	; index = index + int4$1#>
new  <	; BinaryAdd index index 1>

3387:
old  <	; goto 100>
new  <	; Goto 100>

3391:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 116 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3394:
old  <	; parameter s, offset 140>
new  <	; Parameter pointer s 140>

3399:
old  <	; call function noellipse-noellipse strlen>
new  <	; Call strlen 116 0>

3406:
old  <	; post call>
new  <	; PostCall 116>

3409:
old  <	; Â£temporary2567 = return_value>
new  <	; GetReturnValue Â£temporary2567>

3412:
old  <	; return Â£temporary2567>
new  <	; Return Â£temporary2567>

3419:
old  <	; function end strftime>
new  <	; FunctionEnd strftime>

31:
old  <	; empty>
new  <	; Empty>

34:
old  <	; index = int4$0#>
new  <	; Assign index 0>

38:
old  <	; Â£temporary2569 = int_to_int index (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary2569 index>

44:
old  <	; Â£temporary2571 = source + Â£temporary2569>
new  <	; BinaryAdd Â£temporary2571 source Â£temporary2569>

49:
old  <	; Â£temporary2568 -> Â£temporary2571 = *Â£temporary2571>
new  <	; Dereference Â£temporary2568 -> Â£temporary2571 Â£temporary2571 0>

52:
old  <	; if Â£temporary2568 -> Â£temporary2571 == int1$0# goto 15>
new  <	; Equal 15 Â£temporary2568 -> Â£temporary2571 0>

57:
old  <	; Â£temporary2575 = int_to_int index (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary2575 index>

63:
old  <	; Â£temporary2577 = target + Â£temporary2575>
new  <	; BinaryAdd Â£temporary2577 target Â£temporary2575>

68:
old  <	; Â£temporary2574 -> Â£temporary2577 = *Â£temporary2577>
new  <	; Dereference Â£temporary2574 -> Â£temporary2577 Â£temporary2577 0>

71:
old  <	; Â£temporary2579 = int_to_int index (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary2579 index>

77:
old  <	; Â£temporary2581 = source + Â£temporary2579>
new  <	; BinaryAdd Â£temporary2581 source Â£temporary2579>

82:
old  <	; Â£temporary2578 -> Â£temporary2581 = *Â£temporary2581>
new  <	; Dereference Â£temporary2578 -> Â£temporary2581 Â£temporary2581 0>

85:
old  <	; Â£temporary2574 -> Â£temporary2577 = Â£temporary2578 -> Â£temporary2581>
new  <	; Assign Â£temporary2574 -> Â£temporary2577 Â£temporary2578 -> Â£temporary2581>

90:
old  <	; index = index + int4$1#>
new  <	; BinaryAdd index index 1>

94:
old  <	; goto 2>
new  <	; Goto 2>

98:
old  <	; Â£temporary2583 = int_to_int index (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary2583 index>

104:
old  <	; Â£temporary2585 = target + Â£temporary2583>
new  <	; BinaryAdd Â£temporary2585 target Â£temporary2583>

109:
old  <	; Â£temporary2582 -> Â£temporary2585 = *Â£temporary2585>
new  <	; Dereference Â£temporary2582 -> Â£temporary2585 Â£temporary2585 0>

112:
old  <	; Â£temporary2582 -> Â£temporary2585 = int1$0#>
new  <	; Assign Â£temporary2582 -> Â£temporary2585 0>

116:
old  <	; return target>
new  <	; Return target>

124:
old  <	; function end strcpy>
new  <	; FunctionEnd strcpy>

129:
old  <	; empty>
new  <	; Empty>

132:
old  <	; index = int4$0#>
new  <	; Assign index 0>

136:
old  <	; if index >= size goto 16>
new  <	; SignedGreaterThanEqual 16 index size>

142:
old  <	; Â£temporary2588 = int_to_int index (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary2588 index>

148:
old  <	; Â£temporary2590 = source + Â£temporary2588>
new  <	; BinaryAdd Â£temporary2590 source Â£temporary2588>

153:
old  <	; Â£temporary2587 -> Â£temporary2590 = *Â£temporary2590>
new  <	; Dereference Â£temporary2587 -> Â£temporary2590 Â£temporary2590 0>

156:
old  <	; if Â£temporary2587 -> Â£temporary2590 == int1$0# goto 16>
new  <	; Equal 16 Â£temporary2587 -> Â£temporary2590 0>

161:
old  <	; Â£temporary2595 = int_to_int index (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary2595 index>

167:
old  <	; Â£temporary2597 = target + Â£temporary2595>
new  <	; BinaryAdd Â£temporary2597 target Â£temporary2595>

172:
old  <	; Â£temporary2594 -> Â£temporary2597 = *Â£temporary2597>
new  <	; Dereference Â£temporary2594 -> Â£temporary2597 Â£temporary2597 0>

175:
old  <	; Â£temporary2599 = int_to_int index (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary2599 index>

181:
old  <	; Â£temporary2601 = source + Â£temporary2599>
new  <	; BinaryAdd Â£temporary2601 source Â£temporary2599>

186:
old  <	; Â£temporary2598 -> Â£temporary2601 = *Â£temporary2601>
new  <	; Dereference Â£temporary2598 -> Â£temporary2601 Â£temporary2601 0>

189:
old  <	; Â£temporary2594 -> Â£temporary2597 = Â£temporary2598 -> Â£temporary2601>
new  <	; Assign Â£temporary2594 -> Â£temporary2597 Â£temporary2598 -> Â£temporary2601>

194:
old  <	; index = index + int4$1#>
new  <	; BinaryAdd index index 1>

198:
old  <	; goto 2>
new  <	; Goto 2>

202:
old  <	; if index >= size goto 23>
new  <	; SignedGreaterThanEqual 23 index size>

208:
old  <	; Â£temporary2605 = int_to_int index (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary2605 index>

214:
old  <	; Â£temporary2607 = target + Â£temporary2605>
new  <	; BinaryAdd Â£temporary2607 target Â£temporary2605>

219:
old  <	; Â£temporary2604 -> Â£temporary2607 = *Â£temporary2607>
new  <	; Dereference Â£temporary2604 -> Â£temporary2607 Â£temporary2607 0>

222:
old  <	; Â£temporary2604 -> Â£temporary2607 = int1$0#>
new  <	; Assign Â£temporary2604 -> Â£temporary2607 0>

226:
old  <	; index = index + int4$1#>
new  <	; BinaryAdd index index 1>

230:
old  <	; goto 16>
new  <	; Goto 16>

234:
old  <	; return target>
new  <	; Return target>

242:
old  <	; function end strncpy>
new  <	; FunctionEnd strncpy>

247:
old  <	; empty>
new  <	; Empty>

250:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 44 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

253:
old  <	; parameter target, offset 68>
new  <	; Parameter pointer target 68>

258:
old  <	; call function noellipse-noellipse strlen>
new  <	; Call strlen 44 0>

265:
old  <	; post call>
new  <	; PostCall 44>

268:
old  <	; Â£temporary2608 = return_value>
new  <	; GetReturnValue Â£temporary2608>

271:
old  <	; targetLength = Â£temporary2608>
new  <	; Assign targetLength Â£temporary2608>

275:
old  <	; index = int4$0#>
new  <	; Assign index 0>

279:
old  <	; Â£temporary2610 = int_to_int index (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary2610 index>

285:
old  <	; Â£temporary2612 = source + Â£temporary2610>
new  <	; BinaryAdd Â£temporary2612 source Â£temporary2610>

290:
old  <	; Â£temporary2609 -> Â£temporary2612 = *Â£temporary2612>
new  <	; Dereference Â£temporary2609 -> Â£temporary2612 Â£temporary2612 0>

293:
old  <	; if Â£temporary2609 -> Â£temporary2612 == int1$0# goto 22>
new  <	; Equal 22 Â£temporary2609 -> Â£temporary2612 0>

298:
old  <	; Â£temporary2615 = targetLength + index>
new  <	; BinaryAdd Â£temporary2615 targetLength index>

303:
old  <	; Â£temporary2617 = int_to_int Â£temporary2615 (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary2617 Â£temporary2615>

308:
old  <	; Â£temporary2619 = target + Â£temporary2617>
new  <	; BinaryAdd Â£temporary2619 target Â£temporary2617>

313:
old  <	; Â£temporary2616 -> Â£temporary2619 = *Â£temporary2619>
new  <	; Dereference Â£temporary2616 -> Â£temporary2619 Â£temporary2619 0>

316:
old  <	; Â£temporary2621 = int_to_int index (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary2621 index>

322:
old  <	; Â£temporary2623 = source + Â£temporary2621>
new  <	; BinaryAdd Â£temporary2623 source Â£temporary2621>

327:
old  <	; Â£temporary2620 -> Â£temporary2623 = *Â£temporary2623>
new  <	; Dereference Â£temporary2620 -> Â£temporary2623 Â£temporary2623 0>

330:
old  <	; Â£temporary2616 -> Â£temporary2619 = Â£temporary2620 -> Â£temporary2623>
new  <	; Assign Â£temporary2616 -> Â£temporary2619 Â£temporary2620 -> Â£temporary2623>

335:
old  <	; index = index + int4$1#>
new  <	; BinaryAdd index index 1>

339:
old  <	; goto 8>
new  <	; Goto 8>

343:
old  <	; Â£temporary2624 = targetLength + index>
new  <	; BinaryAdd Â£temporary2624 targetLength index>

348:
old  <	; Â£temporary2626 = int_to_int Â£temporary2624 (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary2626 Â£temporary2624>

353:
old  <	; Â£temporary2628 = target + Â£temporary2626>
new  <	; BinaryAdd Â£temporary2628 target Â£temporary2626>

358:
old  <	; Â£temporary2625 -> Â£temporary2628 = *Â£temporary2628>
new  <	; Dereference Â£temporary2625 -> Â£temporary2628 Â£temporary2628 0>

361:
old  <	; Â£temporary2625 -> Â£temporary2628 = int1$0#>
new  <	; Assign Â£temporary2625 -> Â£temporary2628 0>

365:
old  <	; return target>
new  <	; Return target>

373:
old  <	; function end strcat>
new  <	; FunctionEnd strcat>

378:
old  <	; empty>
new  <	; Empty>

381:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

384:
old  <	; parameter target, offset 72>
new  <	; Parameter pointer target 72>

389:
old  <	; call function noellipse-noellipse strlen>
new  <	; Call strlen 48 0>

396:
old  <	; post call>
new  <	; PostCall 48>

399:
old  <	; Â£temporary2629 = return_value>
new  <	; GetReturnValue Â£temporary2629>

402:
old  <	; targetLength = Â£temporary2629>
new  <	; Assign targetLength Â£temporary2629>

406:
old  <	; index = int4$0#>
new  <	; Assign index 0>

410:
old  <	; Â£temporary2630 = size - int4$1#>
new  <	; BinarySubtract Â£temporary2630 size 1>

415:
old  <	; if index >= Â£temporary2630 goto 24>
new  <	; SignedGreaterThanEqual 24 index Â£temporary2630>

420:
old  <	; Â£temporary2633 = int_to_int index (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary2633 index>

426:
old  <	; Â£temporary2635 = source + Â£temporary2633>
new  <	; BinaryAdd Â£temporary2635 source Â£temporary2633>

431:
old  <	; Â£temporary2632 -> Â£temporary2635 = *Â£temporary2635>
new  <	; Dereference Â£temporary2632 -> Â£temporary2635 Â£temporary2635 0>

434:
old  <	; if Â£temporary2632 -> Â£temporary2635 == int1$0# goto 24>
new  <	; Equal 24 Â£temporary2632 -> Â£temporary2635 0>

439:
old  <	; Â£temporary2639 = targetLength + index>
new  <	; BinaryAdd Â£temporary2639 targetLength index>

444:
old  <	; Â£temporary2641 = int_to_int Â£temporary2639 (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary2641 Â£temporary2639>

449:
old  <	; Â£temporary2643 = target + Â£temporary2641>
new  <	; BinaryAdd Â£temporary2643 target Â£temporary2641>

454:
old  <	; Â£temporary2640 -> Â£temporary2643 = *Â£temporary2643>
new  <	; Dereference Â£temporary2640 -> Â£temporary2643 Â£temporary2643 0>

457:
old  <	; Â£temporary2645 = int_to_int index (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary2645 index>

463:
old  <	; Â£temporary2647 = source + Â£temporary2645>
new  <	; BinaryAdd Â£temporary2647 source Â£temporary2645>

468:
old  <	; Â£temporary2644 -> Â£temporary2647 = *Â£temporary2647>
new  <	; Dereference Â£temporary2644 -> Â£temporary2647 Â£temporary2647 0>

471:
old  <	; Â£temporary2640 -> Â£temporary2643 = Â£temporary2644 -> Â£temporary2647>
new  <	; Assign Â£temporary2640 -> Â£temporary2643 Â£temporary2644 -> Â£temporary2647>

476:
old  <	; index = index + int4$1#>
new  <	; BinaryAdd index index 1>

480:
old  <	; goto 8>
new  <	; Goto 8>

484:
old  <	; Â£temporary2648 = targetLength + size>
new  <	; BinaryAdd Â£temporary2648 targetLength size>

489:
old  <	; Â£temporary2649 = Â£temporary2648 - int4$1#>
new  <	; BinarySubtract Â£temporary2649 Â£temporary2648 1>

493:
old  <	; Â£temporary2651 = int_to_int Â£temporary2649 (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary2651 Â£temporary2649>

498:
old  <	; Â£temporary2653 = target + Â£temporary2651>
new  <	; BinaryAdd Â£temporary2653 target Â£temporary2651>

503:
old  <	; Â£temporary2650 -> Â£temporary2653 = *Â£temporary2653>
new  <	; Dereference Â£temporary2650 -> Â£temporary2653 Â£temporary2653 0>

506:
old  <	; Â£temporary2650 -> Â£temporary2653 = int1$0#>
new  <	; Assign Â£temporary2650 -> Â£temporary2653 0>

510:
old  <	; return target>
new  <	; Return target>

518:
old  <	; function end strncat>
new  <	; FunctionEnd strncat>

523:
old  <	; empty>
new  <	; Empty>

526:
old  <	; index = int4$0#>
new  <	; Assign index 0>

530:
old  <	; Â£temporary2656 = int_to_int index (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary2656 index>

536:
old  <	; Â£temporary2658 = left + Â£temporary2656>
new  <	; BinaryAdd Â£temporary2658 left Â£temporary2656>

541:
old  <	; Â£temporary2655 -> Â£temporary2658 = *Â£temporary2658>
new  <	; Dereference Â£temporary2655 -> Â£temporary2658 Â£temporary2658 0>

544:
old  <	; if Â£temporary2655 -> Â£temporary2658 != int1$0# goto 11>
new  <	; NotEqual 11 Â£temporary2655 -> Â£temporary2658 0>

549:
old  <	; Â£temporary2661 = int_to_int index (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary2661 index>

555:
old  <	; Â£temporary2663 = right + Â£temporary2661>
new  <	; BinaryAdd Â£temporary2663 right Â£temporary2661>

560:
old  <	; Â£temporary2660 -> Â£temporary2663 = *Â£temporary2663>
new  <	; Dereference Â£temporary2660 -> Â£temporary2663 Â£temporary2663 0>

563:
old  <	; if Â£temporary2660 -> Â£temporary2663 != int1$0# goto 11>
new  <	; NotEqual 11 Â£temporary2660 -> Â£temporary2663 0>

568:
old  <	; return int4$0#>
new  <	; Return 0>

576:
old  <	; Â£temporary2667 = int_to_int index (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary2667 index>

582:
old  <	; Â£temporary2669 = left + Â£temporary2667>
new  <	; BinaryAdd Â£temporary2669 left Â£temporary2667>

587:
old  <	; Â£temporary2666 -> Â£temporary2669 = *Â£temporary2669>
new  <	; Dereference Â£temporary2666 -> Â£temporary2669 Â£temporary2669 0>

590:
old  <	; if Â£temporary2666 -> Â£temporary2669 != int1$0# goto 16>
new  <	; NotEqual 16 Â£temporary2666 -> Â£temporary2669 0>

595:
old  <	; return int4$minus1#>
new  <	; Return -1>

603:
old  <	; Â£temporary2672 = int_to_int index (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary2672 index>

609:
old  <	; Â£temporary2674 = right + Â£temporary2672>
new  <	; BinaryAdd Â£temporary2674 right Â£temporary2672>

614:
old  <	; Â£temporary2671 -> Â£temporary2674 = *Â£temporary2674>
new  <	; Dereference Â£temporary2671 -> Â£temporary2674 Â£temporary2674 0>

617:
old  <	; if Â£temporary2671 -> Â£temporary2674 != int1$0# goto 21>
new  <	; NotEqual 21 Â£temporary2671 -> Â£temporary2674 0>

622:
old  <	; return int4$1#>
new  <	; Return 1>

630:
old  <	; Â£temporary2677 = int_to_int index (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary2677 index>

636:
old  <	; Â£temporary2679 = left + Â£temporary2677>
new  <	; BinaryAdd Â£temporary2679 left Â£temporary2677>

641:
old  <	; Â£temporary2676 -> Â£temporary2679 = *Â£temporary2679>
new  <	; Dereference Â£temporary2676 -> Â£temporary2679 Â£temporary2679 0>

644:
old  <	; Â£temporary2681 = int_to_int index (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary2681 index>

650:
old  <	; Â£temporary2683 = right + Â£temporary2681>
new  <	; BinaryAdd Â£temporary2683 right Â£temporary2681>

655:
old  <	; Â£temporary2680 -> Â£temporary2683 = *Â£temporary2683>
new  <	; Dereference Â£temporary2680 -> Â£temporary2683 Â£temporary2683 0>

658:
old  <	; if Â£temporary2676 -> Â£temporary2679 >= Â£temporary2680 -> Â£temporary2683 goto 29>
new  <	; SignedGreaterThanEqual 29 Â£temporary2676 -> Â£temporary2679 Â£temporary2680 -> Â£temporary2683>

664:
old  <	; return int4$minus1#>
new  <	; Return -1>

672:
old  <	; Â£temporary2686 = int_to_int index (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary2686 index>

678:
old  <	; Â£temporary2688 = left + Â£temporary2686>
new  <	; BinaryAdd Â£temporary2688 left Â£temporary2686>

683:
old  <	; Â£temporary2685 -> Â£temporary2688 = *Â£temporary2688>
new  <	; Dereference Â£temporary2685 -> Â£temporary2688 Â£temporary2688 0>

686:
old  <	; Â£temporary2690 = int_to_int index (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary2690 index>

692:
old  <	; Â£temporary2692 = right + Â£temporary2690>
new  <	; BinaryAdd Â£temporary2692 right Â£temporary2690>

697:
old  <	; Â£temporary2689 -> Â£temporary2692 = *Â£temporary2692>
new  <	; Dereference Â£temporary2689 -> Â£temporary2692 Â£temporary2692 0>

700:
old  <	; if Â£temporary2685 -> Â£temporary2688 <= Â£temporary2689 -> Â£temporary2692 goto 37>
new  <	; SignedLessThanEqual 37 Â£temporary2685 -> Â£temporary2688 Â£temporary2689 -> Â£temporary2692>

706:
old  <	; return int4$1#>
new  <	; Return 1>

714:
old  <	; index = index + int4$1#>
new  <	; BinaryAdd index index 1>

718:
old  <	; goto 2>
new  <	; Goto 2>

722:
old  <	; function end strcmp>
new  <	; FunctionEnd strcmp>

727:
old  <	; empty>
new  <	; Empty>

730:
old  <	; index = int4$0#>
new  <	; Assign index 0>

734:
old  <	; if index >= size goto 40>
new  <	; SignedGreaterThanEqual 40 index size>

740:
old  <	; Â£temporary2698 = int_to_int index (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary2698 index>

746:
old  <	; Â£temporary2700 = left + Â£temporary2698>
new  <	; BinaryAdd Â£temporary2700 left Â£temporary2698>

751:
old  <	; Â£temporary2697 -> Â£temporary2700 = *Â£temporary2700>
new  <	; Dereference Â£temporary2697 -> Â£temporary2700 Â£temporary2700 0>

754:
old  <	; if Â£temporary2697 -> Â£temporary2700 != int1$0# goto 12>
new  <	; NotEqual 12 Â£temporary2697 -> Â£temporary2700 0>

759:
old  <	; Â£temporary2703 = int_to_int index (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary2703 index>

765:
old  <	; Â£temporary2705 = right + Â£temporary2703>
new  <	; BinaryAdd Â£temporary2705 right Â£temporary2703>

770:
old  <	; Â£temporary2702 -> Â£temporary2705 = *Â£temporary2705>
new  <	; Dereference Â£temporary2702 -> Â£temporary2705 Â£temporary2705 0>

773:
old  <	; if Â£temporary2702 -> Â£temporary2705 != int1$0# goto 12>
new  <	; NotEqual 12 Â£temporary2702 -> Â£temporary2705 0>

778:
old  <	; return int4$0#>
new  <	; Return 0>

786:
old  <	; Â£temporary2709 = int_to_int index (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary2709 index>

792:
old  <	; Â£temporary2711 = left + Â£temporary2709>
new  <	; BinaryAdd Â£temporary2711 left Â£temporary2709>

797:
old  <	; Â£temporary2708 -> Â£temporary2711 = *Â£temporary2711>
new  <	; Dereference Â£temporary2708 -> Â£temporary2711 Â£temporary2711 0>

800:
old  <	; if Â£temporary2708 -> Â£temporary2711 != int1$0# goto 17>
new  <	; NotEqual 17 Â£temporary2708 -> Â£temporary2711 0>

805:
old  <	; return int4$minus1#>
new  <	; Return -1>

813:
old  <	; Â£temporary2714 = int_to_int index (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary2714 index>

819:
old  <	; Â£temporary2716 = right + Â£temporary2714>
new  <	; BinaryAdd Â£temporary2716 right Â£temporary2714>

824:
old  <	; Â£temporary2713 -> Â£temporary2716 = *Â£temporary2716>
new  <	; Dereference Â£temporary2713 -> Â£temporary2716 Â£temporary2716 0>

827:
old  <	; if Â£temporary2713 -> Â£temporary2716 != int1$0# goto 22>
new  <	; NotEqual 22 Â£temporary2713 -> Â£temporary2716 0>

832:
old  <	; return int4$1#>
new  <	; Return 1>

840:
old  <	; Â£temporary2719 = int_to_int index (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary2719 index>

846:
old  <	; Â£temporary2721 = left + Â£temporary2719>
new  <	; BinaryAdd Â£temporary2721 left Â£temporary2719>

851:
old  <	; Â£temporary2718 -> Â£temporary2721 = *Â£temporary2721>
new  <	; Dereference Â£temporary2718 -> Â£temporary2721 Â£temporary2721 0>

854:
old  <	; Â£temporary2723 = int_to_int index (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary2723 index>

860:
old  <	; Â£temporary2725 = right + Â£temporary2723>
new  <	; BinaryAdd Â£temporary2725 right Â£temporary2723>

865:
old  <	; Â£temporary2722 -> Â£temporary2725 = *Â£temporary2725>
new  <	; Dereference Â£temporary2722 -> Â£temporary2725 Â£temporary2725 0>

868:
old  <	; if Â£temporary2718 -> Â£temporary2721 >= Â£temporary2722 -> Â£temporary2725 goto 30>
new  <	; SignedGreaterThanEqual 30 Â£temporary2718 -> Â£temporary2721 Â£temporary2722 -> Â£temporary2725>

874:
old  <	; return int4$minus1#>
new  <	; Return -1>

882:
old  <	; Â£temporary2728 = int_to_int index (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary2728 index>

888:
old  <	; Â£temporary2730 = left + Â£temporary2728>
new  <	; BinaryAdd Â£temporary2730 left Â£temporary2728>

893:
old  <	; Â£temporary2727 -> Â£temporary2730 = *Â£temporary2730>
new  <	; Dereference Â£temporary2727 -> Â£temporary2730 Â£temporary2730 0>

896:
old  <	; Â£temporary2732 = int_to_int index (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary2732 index>

902:
old  <	; Â£temporary2734 = right + Â£temporary2732>
new  <	; BinaryAdd Â£temporary2734 right Â£temporary2732>

907:
old  <	; Â£temporary2731 -> Â£temporary2734 = *Â£temporary2734>
new  <	; Dereference Â£temporary2731 -> Â£temporary2734 Â£temporary2734 0>

910:
old  <	; if Â£temporary2727 -> Â£temporary2730 <= Â£temporary2731 -> Â£temporary2734 goto 38>
new  <	; SignedLessThanEqual 38 Â£temporary2727 -> Â£temporary2730 Â£temporary2731 -> Â£temporary2734>

916:
old  <	; return int4$1#>
new  <	; Return 1>

924:
old  <	; index = index + int4$1#>
new  <	; BinaryAdd index index 1>

928:
old  <	; goto 2>
new  <	; Goto 2>

932:
old  <	; return int4$0#>
new  <	; Return 0>

940:
old  <	; function end strncmp>
new  <	; FunctionEnd strncmp>

945:
old  <	; empty>
new  <	; Empty>

948:
old  <	; Â£temporary2736 = int_to_int i (SignedInt -> SignedChar)>
new  <	; IntegralToIntegral Â£temporary2736 i>

956:
old  <	; c = Â£temporary2736>
new  <	; Assign c Â£temporary2736>

960:
old  <	; index = int4$0#>
new  <	; Assign index 0>

964:
old  <	; Â£temporary2738 = int_to_int index (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary2738 index>

970:
old  <	; Â£temporary2740 = text + Â£temporary2738>
new  <	; BinaryAdd Â£temporary2740 text Â£temporary2738>

975:
old  <	; Â£temporary2737 -> Â£temporary2740 = *Â£temporary2740>
new  <	; Dereference Â£temporary2737 -> Â£temporary2740 Â£temporary2740 0>

978:
old  <	; if Â£temporary2737 -> Â£temporary2740 == int1$0# goto 19>
new  <	; Equal 19 Â£temporary2737 -> Â£temporary2740 0>

983:
old  <	; Â£temporary2744 = int_to_int index (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary2744 index>

989:
old  <	; Â£temporary2746 = text + Â£temporary2744>
new  <	; BinaryAdd Â£temporary2746 text Â£temporary2744>

994:
old  <	; Â£temporary2743 -> Â£temporary2746 = *Â£temporary2746>
new  <	; Dereference Â£temporary2743 -> Â£temporary2746 Â£temporary2746 0>

997:
old  <	; if Â£temporary2743 -> Â£temporary2746 != c goto 17>
new  <	; NotEqual 17 Â£temporary2743 -> Â£temporary2746 c>

1003:
old  <	; Â£temporary2749 = int_to_int index (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary2749 index>

1009:
old  <	; Â£temporary2751 = text + Â£temporary2749>
new  <	; BinaryAdd Â£temporary2751 text Â£temporary2749>

1014:
old  <	; Â£temporary2748 -> Â£temporary2751 = *Â£temporary2751>
new  <	; Dereference Â£temporary2748 -> Â£temporary2751 Â£temporary2751 0>

1017:
old  <	; Â£temporary2752 = &Â£temporary2748 -> Â£temporary2751>
new  <	; Address Â£temporary2752 Â£temporary2748 -> Â£temporary2751>

1020:
old  <	; return Â£temporary2752>
new  <	; Return Â£temporary2752>

1027:
old  <	; index = index + int4$1#>
new  <	; BinaryAdd index index 1>

1031:
old  <	; goto 4>
new  <	; Goto 4>

1035:
old  <	; return int8$0#>
new  <	; Return 0>

1043:
old  <	; function end strchr>
new  <	; FunctionEnd strchr>

1048:
old  <	; empty>
new  <	; Empty>

1051:
old  <	; result = int8$0#>
new  <	; Assign result 0>

1055:
old  <	; Â£temporary2753 = int_to_int i (SignedInt -> SignedChar)>
new  <	; IntegralToIntegral Â£temporary2753 i>

1063:
old  <	; c = Â£temporary2753>
new  <	; Assign c Â£temporary2753>

1067:
old  <	; index = int4$0#>
new  <	; Assign index 0>

1071:
old  <	; Â£temporary2755 = int_to_int index (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary2755 index>

1077:
old  <	; Â£temporary2757 = text + Â£temporary2755>
new  <	; BinaryAdd Â£temporary2757 text Â£temporary2755>

1082:
old  <	; Â£temporary2754 -> Â£temporary2757 = *Â£temporary2757>
new  <	; Dereference Â£temporary2754 -> Â£temporary2757 Â£temporary2757 0>

1085:
old  <	; if Â£temporary2754 -> Â£temporary2757 == int1$0# goto 20>
new  <	; Equal 20 Â£temporary2754 -> Â£temporary2757 0>

1090:
old  <	; Â£temporary2761 = int_to_int index (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary2761 index>

1096:
old  <	; Â£temporary2763 = text + Â£temporary2761>
new  <	; BinaryAdd Â£temporary2763 text Â£temporary2761>

1101:
old  <	; Â£temporary2760 -> Â£temporary2763 = *Â£temporary2763>
new  <	; Dereference Â£temporary2760 -> Â£temporary2763 Â£temporary2763 0>

1104:
old  <	; if Â£temporary2760 -> Â£temporary2763 != c goto 18>
new  <	; NotEqual 18 Â£temporary2760 -> Â£temporary2763 c>

1110:
old  <	; Â£temporary2766 = int_to_int index (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary2766 index>

1116:
old  <	; Â£temporary2768 = text + Â£temporary2766>
new  <	; BinaryAdd Â£temporary2768 text Â£temporary2766>

1121:
old  <	; Â£temporary2765 -> Â£temporary2768 = *Â£temporary2768>
new  <	; Dereference Â£temporary2765 -> Â£temporary2768 Â£temporary2768 0>

1124:
old  <	; Â£temporary2769 = &Â£temporary2765 -> Â£temporary2768>
new  <	; Address Â£temporary2769 Â£temporary2765 -> Â£temporary2768>

1127:
old  <	; result = Â£temporary2769>
new  <	; Assign result Â£temporary2769>

1131:
old  <	; index = index + int4$1#>
new  <	; BinaryAdd index index 1>

1135:
old  <	; goto 5>
new  <	; Goto 5>

1139:
old  <	; return result>
new  <	; Return result>

1147:
old  <	; function end strrchr>
new  <	; FunctionEnd strrchr>

1152:
old  <	; empty>
new  <	; Empty>

1155:
old  <	; index = int4$0#>
new  <	; Assign index 0>

1159:
old  <	; Â£temporary2771 = int_to_int index (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary2771 index>

1165:
old  <	; Â£temporary2773 = mainString + Â£temporary2771>
new  <	; BinaryAdd Â£temporary2773 mainString Â£temporary2771>

1170:
old  <	; Â£temporary2770 -> Â£temporary2773 = *Â£temporary2773>
new  <	; Dereference Â£temporary2770 -> Â£temporary2773 Â£temporary2773 0>

1173:
old  <	; if Â£temporary2770 -> Â£temporary2773 == int1$0# goto 20>
new  <	; Equal 20 Â£temporary2770 -> Â£temporary2773 0>

1178:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 44 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1181:
old  <	; parameter charSet, offset 68>
new  <	; Parameter pointer charSet 68>

1186:
old  <	; Â£temporary2777 = int_to_int index (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary2777 index>

1192:
old  <	; Â£temporary2779 = mainString + Â£temporary2777>
new  <	; BinaryAdd Â£temporary2779 mainString Â£temporary2777>

1197:
old  <	; Â£temporary2776 -> Â£temporary2779 = *Â£temporary2779>
new  <	; Dereference Â£temporary2776 -> Â£temporary2779 Â£temporary2779 0>

1200:
old  <	; Â£temporary2780 = int_to_int Â£temporary2776 -> Â£temporary2779 (SignedChar -> SignedInt)>
new  <	; IntegralToIntegral Â£temporary2780 Â£temporary2776 -> Â£temporary2779>

1209:
old  <	; parameter Â£temporary2780, offset 76>
new  <	; Parameter signedint Â£temporary2780 76>

1213:
old  <	; call function noellipse-noellipse strchr>
new  <	; Call strchr 44 0>

1220:
old  <	; post call>
new  <	; PostCall 44>

1223:
old  <	; Â£temporary2781 = return_value>
new  <	; GetReturnValue Â£temporary2781>

1226:
old  <	; if Â£temporary2781 != int8$0# goto 18>
new  <	; NotEqual 18 Â£temporary2781 0>

1231:
old  <	; return index>
new  <	; Return index>

1239:
old  <	; index = index + int4$1#>
new  <	; BinaryAdd index index 1>

1243:
old  <	; goto 2>
new  <	; Goto 2>

1247:
old  <	; return int4$minus1#>
new  <	; Return -1>

1255:
old  <	; function end strspn>
new  <	; FunctionEnd strspn>

1260:
old  <	; empty>
new  <	; Empty>

1263:
old  <	; index = int4$0#>
new  <	; Assign index 0>

1267:
old  <	; Â£temporary2784 = int_to_int index (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary2784 index>

1273:
old  <	; Â£temporary2786 = mainString + Â£temporary2784>
new  <	; BinaryAdd Â£temporary2786 mainString Â£temporary2784>

1278:
old  <	; Â£temporary2783 -> Â£temporary2786 = *Â£temporary2786>
new  <	; Dereference Â£temporary2783 -> Â£temporary2786 Â£temporary2786 0>

1281:
old  <	; if Â£temporary2783 -> Â£temporary2786 == int1$0# goto 20>
new  <	; Equal 20 Â£temporary2783 -> Â£temporary2786 0>

1286:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 44 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1289:
old  <	; parameter charSet, offset 68>
new  <	; Parameter pointer charSet 68>

1294:
old  <	; Â£temporary2790 = int_to_int index (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary2790 index>

1300:
old  <	; Â£temporary2792 = mainString + Â£temporary2790>
new  <	; BinaryAdd Â£temporary2792 mainString Â£temporary2790>

1305:
old  <	; Â£temporary2789 -> Â£temporary2792 = *Â£temporary2792>
new  <	; Dereference Â£temporary2789 -> Â£temporary2792 Â£temporary2792 0>

1308:
old  <	; Â£temporary2793 = int_to_int Â£temporary2789 -> Â£temporary2792 (SignedChar -> SignedInt)>
new  <	; IntegralToIntegral Â£temporary2793 Â£temporary2789 -> Â£temporary2792>

1317:
old  <	; parameter Â£temporary2793, offset 76>
new  <	; Parameter signedint Â£temporary2793 76>

1321:
old  <	; call function noellipse-noellipse strchr>
new  <	; Call strchr 44 0>

1328:
old  <	; post call>
new  <	; PostCall 44>

1331:
old  <	; Â£temporary2794 = return_value>
new  <	; GetReturnValue Â£temporary2794>

1334:
old  <	; if Â£temporary2794 == int8$0# goto 18>
new  <	; Equal 18 Â£temporary2794 0>

1339:
old  <	; return index>
new  <	; Return index>

1347:
old  <	; index = index + int4$1#>
new  <	; BinaryAdd index index 1>

1351:
old  <	; goto 2>
new  <	; Goto 2>

1355:
old  <	; return int4$minus1#>
new  <	; Return -1>

1363:
old  <	; function end strcspn>
new  <	; FunctionEnd strcspn>

1368:
old  <	; empty>
new  <	; Empty>

1371:
old  <	; index = int4$0#>
new  <	; Assign index 0>

1375:
old  <	; Â£temporary2797 = int_to_int index (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary2797 index>

1381:
old  <	; Â£temporary2799 = mainString + Â£temporary2797>
new  <	; BinaryAdd Â£temporary2799 mainString Â£temporary2797>

1386:
old  <	; Â£temporary2796 -> Â£temporary2799 = *Â£temporary2799>
new  <	; Dereference Â£temporary2796 -> Â£temporary2799 Â£temporary2799 0>

1389:
old  <	; if Â£temporary2796 -> Â£temporary2799 == int1$0# goto 24>
new  <	; Equal 24 Â£temporary2796 -> Â£temporary2799 0>

1394:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 44 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1397:
old  <	; parameter charSet, offset 68>
new  <	; Parameter pointer charSet 68>

1402:
old  <	; Â£temporary2803 = int_to_int index (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary2803 index>

1408:
old  <	; Â£temporary2805 = mainString + Â£temporary2803>
new  <	; BinaryAdd Â£temporary2805 mainString Â£temporary2803>

1413:
old  <	; Â£temporary2802 -> Â£temporary2805 = *Â£temporary2805>
new  <	; Dereference Â£temporary2802 -> Â£temporary2805 Â£temporary2805 0>

1416:
old  <	; Â£temporary2806 = int_to_int Â£temporary2802 -> Â£temporary2805 (SignedChar -> SignedInt)>
new  <	; IntegralToIntegral Â£temporary2806 Â£temporary2802 -> Â£temporary2805>

1425:
old  <	; parameter Â£temporary2806, offset 76>
new  <	; Parameter signedint Â£temporary2806 76>

1429:
old  <	; call function noellipse-noellipse strchr>
new  <	; Call strchr 44 0>

1436:
old  <	; post call>
new  <	; PostCall 44>

1439:
old  <	; Â£temporary2807 = return_value>
new  <	; GetReturnValue Â£temporary2807>

1442:
old  <	; if Â£temporary2807 == int8$0# goto 22>
new  <	; Equal 22 Â£temporary2807 0>

1447:
old  <	; Â£temporary2810 = int_to_int index (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary2810 index>

1453:
old  <	; Â£temporary2812 = mainString + Â£temporary2810>
new  <	; BinaryAdd Â£temporary2812 mainString Â£temporary2810>

1458:
old  <	; Â£temporary2809 -> Â£temporary2812 = *Â£temporary2812>
new  <	; Dereference Â£temporary2809 -> Â£temporary2812 Â£temporary2812 0>

1461:
old  <	; Â£temporary2813 = &Â£temporary2809 -> Â£temporary2812>
new  <	; Address Â£temporary2813 Â£temporary2809 -> Â£temporary2812>

1464:
old  <	; return Â£temporary2813>
new  <	; Return Â£temporary2813>

1471:
old  <	; index = index + int4$1#>
new  <	; BinaryAdd index index 1>

1475:
old  <	; goto 2>
new  <	; Goto 2>

1479:
old  <	; return int8$0#>
new  <	; Return 0>

1487:
old  <	; function end strpbrk>
new  <	; FunctionEnd strpbrk>

1492:
old  <	; empty>
new  <	; Empty>

1495:
old  <	; index = int4$0#>
new  <	; Assign index 0>

1499:
old  <	; Â£temporary2815 = int_to_int index (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary2815 index>

1505:
old  <	; Â£temporary2817 = mainString + Â£temporary2815>
new  <	; BinaryAdd Â£temporary2817 mainString Â£temporary2815>

1510:
old  <	; Â£temporary2814 -> Â£temporary2817 = *Â£temporary2817>
new  <	; Dereference Â£temporary2814 -> Â£temporary2817 Â£temporary2817 0>

1513:
old  <	; if Â£temporary2814 -> Â£temporary2817 == int1$0# goto 22>
new  <	; Equal 22 Â£temporary2814 -> Â£temporary2817 0>

1518:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 44 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1521:
old  <	; Â£temporary2820 = int_to_int index (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary2820 index>

1527:
old  <	; Â£temporary2821 = mainString + Â£temporary2820>
new  <	; BinaryAdd Â£temporary2821 mainString Â£temporary2820>

1532:
old  <	; parameter Â£temporary2821, offset 68>
new  <	; Parameter pointer Â£temporary2821 68>

1536:
old  <	; parameter subString, offset 76>
new  <	; Parameter pointer subString 76>

1541:
old  <	; call function noellipse-noellipse strcmp>
new  <	; Call strcmp 44 0>

1548:
old  <	; post call>
new  <	; PostCall 44>

1551:
old  <	; Â£temporary2823 = return_value>
new  <	; GetReturnValue Â£temporary2823>

1554:
old  <	; if Â£temporary2823 != int4$0# goto 20>
new  <	; NotEqual 20 Â£temporary2823 0>

1559:
old  <	; Â£temporary2826 = int_to_int index (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary2826 index>

1565:
old  <	; Â£temporary2828 = mainString + Â£temporary2826>
new  <	; BinaryAdd Â£temporary2828 mainString Â£temporary2826>

1570:
old  <	; Â£temporary2825 -> Â£temporary2828 = *Â£temporary2828>
new  <	; Dereference Â£temporary2825 -> Â£temporary2828 Â£temporary2828 0>

1573:
old  <	; Â£temporary2829 = &Â£temporary2825 -> Â£temporary2828>
new  <	; Address Â£temporary2829 Â£temporary2825 -> Â£temporary2828>

1576:
old  <	; return Â£temporary2829>
new  <	; Return Â£temporary2829>

1583:
old  <	; index = index + int4$1#>
new  <	; BinaryAdd index index 1>

1587:
old  <	; goto 2>
new  <	; Goto 2>

1591:
old  <	; return int8$0#>
new  <	; Return 0>

1599:
old  <	; function end strstr>
new  <	; FunctionEnd strstr>

1604:
old  <	; empty>
new  <	; Empty>

1607:
old  <	; index = int4$0#>
new  <	; Assign index 0>

1611:
old  <	; Â£temporary2831 = int_to_int index (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary2831 index>

1617:
old  <	; Â£temporary2833 = string + Â£temporary2831>
new  <	; BinaryAdd Â£temporary2833 string Â£temporary2831>

1622:
old  <	; Â£temporary2830 -> Â£temporary2833 = *Â£temporary2833>
new  <	; Dereference Â£temporary2830 -> Â£temporary2833 Â£temporary2833 0>

1625:
old  <	; if Â£temporary2830 -> Â£temporary2833 == int1$0# goto 8>
new  <	; Equal 8 Â£temporary2830 -> Â£temporary2833 0>

1630:
old  <	; index = index + int4$1#>
new  <	; BinaryAdd index index 1>

1634:
old  <	; goto 2>
new  <	; Goto 2>

1638:
old  <	; return index>
new  <	; Return index>

1646:
old  <	; function end strlen>
new  <	; FunctionEnd strlen>

1651:
old  <	; initializer Pointer>
new  <	; Initializer Pointer 8>

1657:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1660:
old  <	; call function noellipse-noellipse localeconv>
new  <	; Call localeconv 28 0>

1667:
old  <	; post call>
new  <	; PostCall 28>

1670:
old  <	; Â£temporary2836 = return_value>
new  <	; GetReturnValue Â£temporary2836>

1673:
old  <	; localeConvPtr = Â£temporary2836>
new  <	; Assign localeConvPtr Â£temporary2836>

1677:
old  <	; if localeConvPtr == int8$0# goto 9>
new  <	; Equal 9 localeConvPtr 0>

1682:
old  <	; Â£temporary2838 -> localeConvPtr = *localeConvPtr>
new  <	; Dereference Â£temporary2838 -> localeConvPtr localeConvPtr 0>

1686:
old  <	; Â£temporary2839 = Â£temporary2838 -> localeConvPtr>
new  <	; Assign Â£temporary2839 Â£temporary2838 -> localeConvPtr>

1690:
old  <	; goto 10>
new  <	; Goto 10>

1694:
old  <	; Â£temporary2839 = int8$0#>
new  <	; Assign Â£temporary2839 0>

1698:
old  <	; messageList = Â£temporary2839>
new  <	; Assign messageList Â£temporary2839>

1702:
old  <	; if messageList == int8$0# goto 14>
new  <	; Equal 14 messageList 0>

1707:
old  <	; Â£temporary2841 = messageList>
new  <	; Assign Â£temporary2841 messageList>

1711:
old  <	; goto 15>
new  <	; Goto 15>

1715:
old  <	; Â£temporary2841 = enMessageList>
new  <	; Assign Â£temporary2841 enMessageList>

1719:
old  <	; messageList = Â£temporary2841>
new  <	; Assign messageList Â£temporary2841>

1723:
old  <	; Â£temporary2843 = int_to_int errno (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary2843 errno>

1729:
old  <	; Â£temporary2844 = Â£temporary2843 * int8$8#>
new  <	; UnsignedMultiply Â£temporary2844 Â£temporary2843 8>

1734:
old  <	; Â£temporary2845 = messageList + Â£temporary2844>
new  <	; BinaryAdd Â£temporary2845 messageList Â£temporary2844>

1739:
old  <	; Â£temporary2842 -> Â£temporary2845 = *Â£temporary2845>
new  <	; Dereference Â£temporary2842 -> Â£temporary2845 Â£temporary2845 0>

1742:
old  <	; return Â£temporary2842 -> Â£temporary2845>
new  <	; Return Â£temporary2842 -> Â£temporary2845>

1750:
old  <	; function end strerror>
new  <	; FunctionEnd strerror>

1755:
old  <	; initializer Pointer>
new  <	; Initializer Pointer 0>

1761:
old  <	; empty>
new  <	; Empty>

1764:
old  <	; if string == int8$0# goto 40>
new  <	; Equal 40 string 0>

1769:
old  <	; Â£temporary2847 -> string = *string>
new  <	; Dereference Â£temporary2847 -> string string 0>

1773:
old  <	; if Â£temporary2847 -> string != int1$0# goto 5>
new  <	; NotEqual 5 Â£temporary2847 -> string 0>

1778:
old  <	; return int8$0#>
new  <	; Return 0>

1786:
old  <	; index = int4$0#>
new  <	; Assign index 0>

1790:
old  <	; Â£temporary2850 = int_to_int index (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary2850 index>

1796:
old  <	; Â£temporary2852 = string + Â£temporary2850>
new  <	; BinaryAdd Â£temporary2852 string Â£temporary2850>

1801:
old  <	; Â£temporary2849 -> Â£temporary2852 = *Â£temporary2852>
new  <	; Dereference Â£temporary2849 -> Â£temporary2852 Â£temporary2852 0>

1804:
old  <	; if Â£temporary2849 -> Â£temporary2852 == int1$0# goto 34>
new  <	; Equal 34 Â£temporary2849 -> Â£temporary2852 0>

1809:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1812:
old  <	; parameter charSet, offset 76>
new  <	; Parameter pointer charSet 76>

1817:
old  <	; Â£temporary2856 = int_to_int index (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary2856 index>

1823:
old  <	; Â£temporary2858 = string + Â£temporary2856>
new  <	; BinaryAdd Â£temporary2858 string Â£temporary2856>

1828:
old  <	; Â£temporary2855 -> Â£temporary2858 = *Â£temporary2858>
new  <	; Dereference Â£temporary2855 -> Â£temporary2858 Â£temporary2858 0>

1831:
old  <	; Â£temporary2859 = int_to_int Â£temporary2855 -> Â£temporary2858 (SignedChar -> SignedInt)>
new  <	; IntegralToIntegral Â£temporary2859 Â£temporary2855 -> Â£temporary2858>

1840:
old  <	; parameter Â£temporary2859, offset 84>
new  <	; Parameter signedint Â£temporary2859 84>

1844:
old  <	; call function noellipse-noellipse strchr>
new  <	; Call strchr 52 0>

1851:
old  <	; post call>
new  <	; PostCall 52>

1854:
old  <	; Â£temporary2860 = return_value>
new  <	; GetReturnValue Â£temporary2860>

1857:
old  <	; if Â£temporary2860 == int8$0# goto 32>
new  <	; Equal 32 Â£temporary2860 0>

1862:
old  <	; Â£temporary2863 = int_to_int index (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary2863 index>

1868:
old  <	; Â£temporary2865 = string + Â£temporary2863>
new  <	; BinaryAdd Â£temporary2865 string Â£temporary2863>

1873:
old  <	; Â£temporary2862 -> Â£temporary2865 = *Â£temporary2865>
new  <	; Dereference Â£temporary2862 -> Â£temporary2865 Â£temporary2865 0>

1876:
old  <	; Â£temporary2862 -> Â£temporary2865 = int1$0#>
new  <	; Assign Â£temporary2862 -> Â£temporary2865 0>

1880:
old  <	; Â£temporary2866 = index + int4$1#>
new  <	; BinaryAdd Â£temporary2866 index 1>

1885:
old  <	; Â£temporary2868 = int_to_int Â£temporary2866 (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary2868 Â£temporary2866>

1890:
old  <	; Â£temporary2870 = string + Â£temporary2868>
new  <	; BinaryAdd Â£temporary2870 string Â£temporary2868>

1895:
old  <	; Â£temporary2867 -> Â£temporary2870 = *Â£temporary2870>
new  <	; Dereference Â£temporary2867 -> Â£temporary2870 Â£temporary2870 0>

1898:
old  <	; Â£temporary2871 = &Â£temporary2867 -> Â£temporary2870>
new  <	; Address Â£temporary2871 Â£temporary2867 -> Â£temporary2870>

1901:
old  <	; token = Â£temporary2871>
new  <	; Assign token Â£temporary2871>

1905:
old  <	; return string>
new  <	; Return string>

1913:
old  <	; index = index + int4$1#>
new  <	; BinaryAdd index index 1>

1917:
old  <	; goto 6>
new  <	; Goto 6>

1921:
old  <	; Â£temporary2873 = int_to_int index (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary2873 index>

1927:
old  <	; Â£temporary2875 = string + Â£temporary2873>
new  <	; BinaryAdd Â£temporary2875 string Â£temporary2873>

1932:
old  <	; Â£temporary2872 -> Â£temporary2875 = *Â£temporary2875>
new  <	; Dereference Â£temporary2872 -> Â£temporary2875 Â£temporary2875 0>

1935:
old  <	; Â£temporary2876 = &Â£temporary2872 -> Â£temporary2875>
new  <	; Address Â£temporary2876 Â£temporary2872 -> Â£temporary2875>

1938:
old  <	; token = Â£temporary2876>
new  <	; Assign token Â£temporary2876>

1942:
old  <	; return string>
new  <	; Return string>

1950:
old  <	; if token != int8$0# goto 42>
new  <	; NotEqual 42 token 0>

1955:
old  <	; return int8$0#>
new  <	; Return 0>

1963:
old  <	; Â£temporary2878 -> token = *token>
new  <	; Dereference Â£temporary2878 -> token token 0>

1967:
old  <	; if Â£temporary2878 -> token != int1$0# goto 45>
new  <	; NotEqual 45 Â£temporary2878 -> token 0>

1972:
old  <	; return int8$0#>
new  <	; Return 0>

1980:
old  <	; index = int4$0#>
new  <	; Assign index 0>

1984:
old  <	; Â£temporary2881 = int_to_int index (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary2881 index>

1990:
old  <	; Â£temporary2883 = token + Â£temporary2881>
new  <	; BinaryAdd Â£temporary2883 token Â£temporary2881>

1995:
old  <	; Â£temporary2880 -> Â£temporary2883 = *Â£temporary2883>
new  <	; Dereference Â£temporary2880 -> Â£temporary2883 Â£temporary2883 0>

1998:
old  <	; if Â£temporary2880 -> Â£temporary2883 == int1$0# goto 75>
new  <	; Equal 75 Â£temporary2880 -> Â£temporary2883 0>

2003:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2006:
old  <	; parameter charSet, offset 76>
new  <	; Parameter pointer charSet 76>

2011:
old  <	; Â£temporary2887 = int_to_int index (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary2887 index>

2017:
old  <	; Â£temporary2889 = token + Â£temporary2887>
new  <	; BinaryAdd Â£temporary2889 token Â£temporary2887>

2022:
old  <	; Â£temporary2886 -> Â£temporary2889 = *Â£temporary2889>
new  <	; Dereference Â£temporary2886 -> Â£temporary2889 Â£temporary2889 0>

2025:
old  <	; Â£temporary2890 = int_to_int Â£temporary2886 -> Â£temporary2889 (SignedChar -> SignedInt)>
new  <	; IntegralToIntegral Â£temporary2890 Â£temporary2886 -> Â£temporary2889>

2034:
old  <	; parameter Â£temporary2890, offset 84>
new  <	; Parameter signedint Â£temporary2890 84>

2038:
old  <	; call function noellipse-noellipse strchr>
new  <	; Call strchr 52 0>

2045:
old  <	; post call>
new  <	; PostCall 52>

2048:
old  <	; Â£temporary2891 = return_value>
new  <	; GetReturnValue Â£temporary2891>

2051:
old  <	; if Â£temporary2891 == int8$0# goto 73>
new  <	; Equal 73 Â£temporary2891 0>

2056:
old  <	; tokenStart2 = token>
new  <	; Assign tokenStart2 token>

2061:
old  <	; Â£temporary2894 = int_to_int index (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary2894 index>

2067:
old  <	; Â£temporary2896 = token + Â£temporary2894>
new  <	; BinaryAdd Â£temporary2896 token Â£temporary2894>

2072:
old  <	; Â£temporary2893 -> Â£temporary2896 = *Â£temporary2896>
new  <	; Dereference Â£temporary2893 -> Â£temporary2896 Â£temporary2896 0>

2075:
old  <	; Â£temporary2893 -> Â£temporary2896 = int1$0#>
new  <	; Assign Â£temporary2893 -> Â£temporary2896 0>

2079:
old  <	; Â£temporary2897 = index + int4$1#>
new  <	; BinaryAdd Â£temporary2897 index 1>

2084:
old  <	; Â£temporary2899 = int_to_int Â£temporary2897 (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary2899 Â£temporary2897>

2089:
old  <	; Â£temporary2901 = token + Â£temporary2899>
new  <	; BinaryAdd Â£temporary2901 token Â£temporary2899>

2094:
old  <	; Â£temporary2898 -> Â£temporary2901 = *Â£temporary2901>
new  <	; Dereference Â£temporary2898 -> Â£temporary2901 Â£temporary2901 0>

2097:
old  <	; Â£temporary2902 = &Â£temporary2898 -> Â£temporary2901>
new  <	; Address Â£temporary2902 Â£temporary2898 -> Â£temporary2901>

2100:
old  <	; token = Â£temporary2902>
new  <	; Assign token Â£temporary2902>

2104:
old  <	; return tokenStart2>
new  <	; Return tokenStart2>

2112:
old  <	; index = index + int4$1#>
new  <	; BinaryAdd index index 1>

2116:
old  <	; goto 46>
new  <	; Goto 46>

2120:
old  <	; tokenStart = token>
new  <	; Assign tokenStart token>

2125:
old  <	; Â£temporary2904 = int_to_int index (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary2904 index>

2131:
old  <	; Â£temporary2906 = token + Â£temporary2904>
new  <	; BinaryAdd Â£temporary2906 token Â£temporary2904>

2136:
old  <	; Â£temporary2903 -> Â£temporary2906 = *Â£temporary2906>
new  <	; Dereference Â£temporary2903 -> Â£temporary2906 Â£temporary2906 0>

2139:
old  <	; Â£temporary2907 = &Â£temporary2903 -> Â£temporary2906>
new  <	; Address Â£temporary2907 Â£temporary2903 -> Â£temporary2906>

2142:
old  <	; token = Â£temporary2907>
new  <	; Assign token Â£temporary2907>

2146:
old  <	; return tokenStart>
new  <	; Return tokenStart>

2154:
old  <	; function end strtok>
new  <	; FunctionEnd strtok>

2159:
old  <	; Â£temporary2908 = int_to_int target (Pointer -> Pointer)>
new  <	; IntegralToIntegral Â£temporary2908 target>

2163:
old  <	; charTarget = Â£temporary2908>
new  <	; Assign charTarget Â£temporary2908>

2167:
old  <	; Â£temporary2909 = int_to_int source (Pointer -> Pointer)>
new  <	; IntegralToIntegral Â£temporary2909 source>

2171:
old  <	; charSource = Â£temporary2909>
new  <	; Assign charSource Â£temporary2909>

2175:
old  <	; index = int4$0#>
new  <	; Assign index 0>

2179:
old  <	; if index >= size goto 15>
new  <	; SignedGreaterThanEqual 15 index size>

2185:
old  <	; Â£temporary2913 = int_to_int index (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary2913 index>

2191:
old  <	; Â£temporary2915 = charTarget + Â£temporary2913>
new  <	; BinaryAdd Â£temporary2915 charTarget Â£temporary2913>

2196:
old  <	; Â£temporary2912 -> Â£temporary2915 = *Â£temporary2915>
new  <	; Dereference Â£temporary2912 -> Â£temporary2915 Â£temporary2915 0>

2199:
old  <	; Â£temporary2917 = int_to_int index (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary2917 index>

2205:
old  <	; Â£temporary2919 = charSource + Â£temporary2917>
new  <	; BinaryAdd Â£temporary2919 charSource Â£temporary2917>

2210:
old  <	; Â£temporary2916 -> Â£temporary2919 = *Â£temporary2919>
new  <	; Dereference Â£temporary2916 -> Â£temporary2919 Â£temporary2919 0>

2213:
old  <	; Â£temporary2912 -> Â£temporary2915 = Â£temporary2916 -> Â£temporary2919>
new  <	; Assign Â£temporary2912 -> Â£temporary2915 Â£temporary2916 -> Â£temporary2919>

2218:
old  <	; index = index + int4$1#>
new  <	; BinaryAdd index index 1>

2222:
old  <	; goto 5>
new  <	; Goto 5>

2226:
old  <	; Â£temporary2920 = int_to_int target (Pointer -> Pointer)>
new  <	; IntegralToIntegral Â£temporary2920 target>

2230:
old  <	; return Â£temporary2920>
new  <	; Return Â£temporary2920>

2237:
old  <	; function end memcpy>
new  <	; FunctionEnd memcpy>

2242:
old  <	; Â£temporary2921 = int_to_int target (Pointer -> Pointer)>
new  <	; IntegralToIntegral Â£temporary2921 target>

2246:
old  <	; charTarget = Â£temporary2921>
new  <	; Assign charTarget Â£temporary2921>

2250:
old  <	; Â£temporary2922 = int_to_int source (Pointer -> Pointer)>
new  <	; IntegralToIntegral Â£temporary2922 source>

2254:
old  <	; charSource = Â£temporary2922>
new  <	; Assign charSource Â£temporary2922>

2258:
old  <	; if source >= target goto 16>
new  <	; SignedGreaterThanEqual 16 source target>

2264:
old  <	; index = size - int4$1#>
new  <	; BinarySubtract index size 1>

2270:
old  <	; if index < int4$0# goto 27>
new  <	; SignedLessThan 27 index 0>

2275:
old  <	; Â£temporary2928 = int_to_int index (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary2928 index>

2281:
old  <	; Â£temporary2930 = charTarget + Â£temporary2928>
new  <	; BinaryAdd Â£temporary2930 charTarget Â£temporary2928>

2286:
old  <	; Â£temporary2927 -> Â£temporary2930 = *Â£temporary2930>
new  <	; Dereference Â£temporary2927 -> Â£temporary2930 Â£temporary2930 0>

2289:
old  <	; Â£temporary2932 = int_to_int index (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary2932 index>

2295:
old  <	; Â£temporary2934 = charSource + Â£temporary2932>
new  <	; BinaryAdd Â£temporary2934 charSource Â£temporary2932>

2300:
old  <	; Â£temporary2931 -> Â£temporary2934 = *Â£temporary2934>
new  <	; Dereference Â£temporary2931 -> Â£temporary2934 Â£temporary2934 0>

2303:
old  <	; Â£temporary2927 -> Â£temporary2930 = Â£temporary2931 -> Â£temporary2934>
new  <	; Assign Â£temporary2927 -> Â£temporary2930 Â£temporary2931 -> Â£temporary2934>

2308:
old  <	; index = index - int4$1#>
new  <	; BinarySubtract index index 1>

2312:
old  <	; goto 6>
new  <	; Goto 6>

2316:
old  <	; index = int4$0#>
new  <	; Assign index 0>

2320:
old  <	; if index >= size goto 27>
new  <	; SignedGreaterThanEqual 27 index size>

2326:
old  <	; Â£temporary2938 = int_to_int index (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary2938 index>

2332:
old  <	; Â£temporary2940 = charTarget + Â£temporary2938>
new  <	; BinaryAdd Â£temporary2940 charTarget Â£temporary2938>

2337:
old  <	; Â£temporary2937 -> Â£temporary2940 = *Â£temporary2940>
new  <	; Dereference Â£temporary2937 -> Â£temporary2940 Â£temporary2940 0>

2340:
old  <	; Â£temporary2942 = int_to_int index (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary2942 index>

2346:
old  <	; Â£temporary2944 = charSource + Â£temporary2942>
new  <	; BinaryAdd Â£temporary2944 charSource Â£temporary2942>

2351:
old  <	; Â£temporary2941 -> Â£temporary2944 = *Â£temporary2944>
new  <	; Dereference Â£temporary2941 -> Â£temporary2944 Â£temporary2944 0>

2354:
old  <	; Â£temporary2937 -> Â£temporary2940 = Â£temporary2941 -> Â£temporary2944>
new  <	; Assign Â£temporary2937 -> Â£temporary2940 Â£temporary2941 -> Â£temporary2944>

2359:
old  <	; index = index + int4$1#>
new  <	; BinaryAdd index index 1>

2363:
old  <	; goto 17>
new  <	; Goto 17>

2367:
old  <	; Â£temporary2945 = int_to_int target (Pointer -> Pointer)>
new  <	; IntegralToIntegral Â£temporary2945 target>

2371:
old  <	; return Â£temporary2945>
new  <	; Return Â£temporary2945>

2378:
old  <	; function end memmove>
new  <	; FunctionEnd memmove>

2383:
old  <	; Â£temporary2946 = int_to_int left (Pointer -> Pointer)>
new  <	; IntegralToIntegral Â£temporary2946 left>

2387:
old  <	; charLeft = Â£temporary2946>
new  <	; Assign charLeft Â£temporary2946>

2391:
old  <	; Â£temporary2947 = int_to_int right (Pointer -> Pointer)>
new  <	; IntegralToIntegral Â£temporary2947 right>

2395:
old  <	; charRight = Â£temporary2947>
new  <	; Assign charRight Â£temporary2947>

2399:
old  <	; index = int4$0#>
new  <	; Assign index 0>

2403:
old  <	; if index >= size goto 24>
new  <	; SignedGreaterThanEqual 24 index size>

2409:
old  <	; Â£temporary2951 = int_to_int index (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary2951 index>

2415:
old  <	; Â£temporary2953 = charLeft + Â£temporary2951>
new  <	; BinaryAdd Â£temporary2953 charLeft Â£temporary2951>

2420:
old  <	; Â£temporary2950 -> Â£temporary2953 = *Â£temporary2953>
new  <	; Dereference Â£temporary2950 -> Â£temporary2953 Â£temporary2953 0>

2423:
old  <	; Â£temporary2955 = int_to_int index (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary2955 index>

2429:
old  <	; Â£temporary2957 = charRight + Â£temporary2955>
new  <	; BinaryAdd Â£temporary2957 charRight Â£temporary2955>

2434:
old  <	; Â£temporary2954 -> Â£temporary2957 = *Â£temporary2957>
new  <	; Dereference Â£temporary2954 -> Â£temporary2957 Â£temporary2957 0>

2437:
old  <	; if Â£temporary2950 -> Â£temporary2953 >= Â£temporary2954 -> Â£temporary2957 goto 14>
new  <	; SignedGreaterThanEqual 14 Â£temporary2950 -> Â£temporary2953 Â£temporary2954 -> Â£temporary2957>

2443:
old  <	; return int4$minus1#>
new  <	; Return -1>

2451:
old  <	; Â£temporary2960 = int_to_int index (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary2960 index>

2457:
old  <	; Â£temporary2962 = charLeft + Â£temporary2960>
new  <	; BinaryAdd Â£temporary2962 charLeft Â£temporary2960>

2462:
old  <	; Â£temporary2959 -> Â£temporary2962 = *Â£temporary2962>
new  <	; Dereference Â£temporary2959 -> Â£temporary2962 Â£temporary2962 0>

2465:
old  <	; Â£temporary2964 = int_to_int index (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary2964 index>

2471:
old  <	; Â£temporary2966 = charRight + Â£temporary2964>
new  <	; BinaryAdd Â£temporary2966 charRight Â£temporary2964>

2476:
old  <	; Â£temporary2963 -> Â£temporary2966 = *Â£temporary2966>
new  <	; Dereference Â£temporary2963 -> Â£temporary2966 Â£temporary2966 0>

2479:
old  <	; if Â£temporary2959 -> Â£temporary2962 <= Â£temporary2963 -> Â£temporary2966 goto 22>
new  <	; SignedLessThanEqual 22 Â£temporary2959 -> Â£temporary2962 Â£temporary2963 -> Â£temporary2966>

2485:
old  <	; return int4$1#>
new  <	; Return 1>

2493:
old  <	; index = index + int4$1#>
new  <	; BinaryAdd index index 1>

2497:
old  <	; goto 5>
new  <	; Goto 5>

2501:
old  <	; return int4$0#>
new  <	; Return 0>

2509:
old  <	; function end memcmp>
new  <	; FunctionEnd memcmp>

2514:
old  <	; empty>
new  <	; Empty>

2517:
old  <	; Â£temporary2968 = int_to_int block (Pointer -> Pointer)>
new  <	; IntegralToIntegral Â£temporary2968 block>

2521:
old  <	; charBlock = Â£temporary2968>
new  <	; Assign charBlock Â£temporary2968>

2525:
old  <	; Â£temporary2969 = int_to_int i (SignedInt -> SignedChar)>
new  <	; IntegralToIntegral Â£temporary2969 i>

2533:
old  <	; c = Â£temporary2969>
new  <	; Assign c Â£temporary2969>

2537:
old  <	; index = int4$0#>
new  <	; Assign index 0>

2541:
old  <	; if index >= size goto 19>
new  <	; SignedGreaterThanEqual 19 index size>

2547:
old  <	; Â£temporary2973 = int_to_int index (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary2973 index>

2553:
old  <	; Â£temporary2975 = charBlock + Â£temporary2973>
new  <	; BinaryAdd Â£temporary2975 charBlock Â£temporary2973>

2558:
old  <	; Â£temporary2972 -> Â£temporary2975 = *Â£temporary2975>
new  <	; Dereference Â£temporary2972 -> Â£temporary2975 Â£temporary2975 0>

2561:
old  <	; if Â£temporary2972 -> Â£temporary2975 != c goto 17>
new  <	; NotEqual 17 Â£temporary2972 -> Â£temporary2975 c>

2567:
old  <	; Â£temporary2978 = int_to_int index (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary2978 index>

2573:
old  <	; Â£temporary2980 = charBlock + Â£temporary2978>
new  <	; BinaryAdd Â£temporary2980 charBlock Â£temporary2978>

2578:
old  <	; Â£temporary2977 -> Â£temporary2980 = *Â£temporary2980>
new  <	; Dereference Â£temporary2977 -> Â£temporary2980 Â£temporary2980 0>

2581:
old  <	; Â£temporary2981 = &Â£temporary2977 -> Â£temporary2980>
new  <	; Address Â£temporary2981 Â£temporary2977 -> Â£temporary2980>

2584:
old  <	; Â£temporary2982 = int_to_int Â£temporary2981 (Pointer -> Pointer)>
new  <	; IntegralToIntegral Â£temporary2982 Â£temporary2981>

2587:
old  <	; return Â£temporary2982>
new  <	; Return Â£temporary2982>

2594:
old  <	; index = index + int4$1#>
new  <	; BinaryAdd index index 1>

2598:
old  <	; goto 6>
new  <	; Goto 6>

2602:
old  <	; return int8$0#>
new  <	; Return 0>

2610:
old  <	; function end memchr>
new  <	; FunctionEnd memchr>

2615:
old  <	; Â£temporary2983 = int_to_int block (Pointer -> Pointer)>
new  <	; IntegralToIntegral Â£temporary2983 block>

2619:
old  <	; charBlock = Â£temporary2983>
new  <	; Assign charBlock Â£temporary2983>

2623:
old  <	; Â£temporary2984 = int_to_int i (SignedInt -> SignedChar)>
new  <	; IntegralToIntegral Â£temporary2984 i>

2631:
old  <	; c = Â£temporary2984>
new  <	; Assign c Â£temporary2984>

2635:
old  <	; index = int4$0#>
new  <	; Assign index 0>

2639:
old  <	; if index >= size goto 12>
new  <	; SignedGreaterThanEqual 12 index size>

2645:
old  <	; Â£temporary2988 = int_to_int index (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary2988 index>

2651:
old  <	; Â£temporary2990 = charBlock + Â£temporary2988>
new  <	; BinaryAdd Â£temporary2990 charBlock Â£temporary2988>

2656:
old  <	; Â£temporary2987 -> Â£temporary2990 = *Â£temporary2990>
new  <	; Dereference Â£temporary2987 -> Â£temporary2990 Â£temporary2990 0>

2659:
old  <	; Â£temporary2987 -> Â£temporary2990 = c>
new  <	; Assign Â£temporary2987 -> Â£temporary2990 c>

2664:
old  <	; index = index + int4$1#>
new  <	; BinaryAdd index index 1>

2668:
old  <	; goto 5>
new  <	; Goto 5>

2672:
old  <	; return block>
new  <	; Return block>

2680:
old  <	; function end memset>
new  <	; FunctionEnd memset>

10:
old  <	; initializer String>
new  <	; Initializer String <%8i> <%+8i> <% 8i> <%-8i> <%+-8i> <%-+8i> <% -8i> <%- 8i>\n>

16:
old  <	; initializer String>
new  <	; Initializer String <%08i> <%+08i> <% 08i> <%0 8i>\n>

22:
old  <	; initializer String>
new  <	; Initializer String <%12.3f> <%+12.3f> <% 12.3f> <%-12.3f> <%+-12.3f> <%-+12.3f> <% -12.3f> <%- 12.3f>\n>

28:
old  <	; initializer String>
new  <	; Initializer String <%012.3f> <%+012.3f> <% 012.3f> <%0 12.3f>\n>

34:
old  <	; initializer Double>
new  <	; Initializer Double 123.456>

40:
old  <	; initializer Double>
new  <	; Initializer Double -123.456>

46:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

49:
old  <	; parameter string_3C258i3E203C252B8i3E203C25208i3E203C252D8i3E203C252B2D8i3E203C252D2B8i3E203C25202D8i3E203C252D208i3E0A#, offset 48>
new  <	; Parameter pointer "<%8i> <%+8i> <% 8i> <%-8i> <%+-8i> <%-+8i> <% -8i> <%- 8i>\n" 48>

53:
old  <	; parameter int4$123#, offset 56>
new  <	; Parameter signedint 123 56>

57:
old  <	; parameter int4$123#, offset 60>
new  <	; Parameter signedint 123 60>

61:
old  <	; parameter int4$123#, offset 64>
new  <	; Parameter signedint 123 64>

65:
old  <	; parameter int4$123#, offset 68>
new  <	; Parameter signedint 123 68>

69:
old  <	; parameter int4$123#, offset 72>
new  <	; Parameter signedint 123 72>

73:
old  <	; parameter int4$123#, offset 76>
new  <	; Parameter signedint 123 76>

77:
old  <	; parameter int4$123#, offset 80>
new  <	; Parameter signedint 123 80>

81:
old  <	; parameter int4$123#, offset 84>
new  <	; Parameter signedint 123 84>

85:
old  <	; call function noellipse-ellipse printf, extra 32>
new  <	; Call printf 24 32>

94:
old  <	; post call>
new  <	; PostCall 24>

97:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

100:
old  <	; parameter string_3C258i3E203C252B8i3E203C25208i3E203C252D8i3E203C252B2D8i3E203C252D2B8i3E203C25202D8i3E203C252D208i3E0A#, offset 48>
new  <	; Parameter pointer "<%8i> <%+8i> <% 8i> <%-8i> <%+-8i> <%-+8i> <% -8i> <%- 8i>\n" 48>

104:
old  <	; parameter int4$minus123#, offset 56>
new  <	; Parameter signedint -123 56>

108:
old  <	; parameter int4$minus123#, offset 60>
new  <	; Parameter signedint -123 60>

112:
old  <	; parameter int4$minus123#, offset 64>
new  <	; Parameter signedint -123 64>

116:
old  <	; parameter int4$minus123#, offset 68>
new  <	; Parameter signedint -123 68>

120:
old  <	; parameter int4$minus123#, offset 72>
new  <	; Parameter signedint -123 72>

124:
old  <	; parameter int4$minus123#, offset 76>
new  <	; Parameter signedint -123 76>

128:
old  <	; parameter int4$minus123#, offset 80>
new  <	; Parameter signedint -123 80>

132:
old  <	; parameter int4$minus123#, offset 84>
new  <	; Parameter signedint -123 84>

136:
old  <	; call function noellipse-ellipse printf, extra 32>
new  <	; Call printf 24 32>

145:
old  <	; post call>
new  <	; PostCall 24>

148:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

151:
old  <	; parameter string_3C2508i3E203C252B08i3E203C252008i3E203C250208i3E0A#, offset 48>
new  <	; Parameter pointer "<%08i> <%+08i> <% 08i> <%0 8i>\n" 48>

155:
old  <	; parameter int4$123#, offset 56>
new  <	; Parameter signedint 123 56>

159:
old  <	; parameter int4$123#, offset 60>
new  <	; Parameter signedint 123 60>

163:
old  <	; parameter int4$123#, offset 64>
new  <	; Parameter signedint 123 64>

167:
old  <	; parameter int4$123#, offset 68>
new  <	; Parameter signedint 123 68>

171:
old  <	; call function noellipse-ellipse printf, extra 16>
new  <	; Call printf 24 16>

180:
old  <	; post call>
new  <	; PostCall 24>

183:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

186:
old  <	; parameter string_3C2508i3E203C252B08i3E203C252008i3E203C250208i3E0A#, offset 48>
new  <	; Parameter pointer "<%08i> <%+08i> <% 08i> <%0 8i>\n" 48>

190:
old  <	; parameter int4$minus123#, offset 56>
new  <	; Parameter signedint -123 56>

194:
old  <	; parameter int4$minus123#, offset 60>
new  <	; Parameter signedint -123 60>

198:
old  <	; parameter int4$minus123#, offset 64>
new  <	; Parameter signedint -123 64>

202:
old  <	; parameter int4$minus123#, offset 68>
new  <	; Parameter signedint -123 68>

206:
old  <	; call function noellipse-ellipse printf, extra 16>
new  <	; Call printf 24 16>

215:
old  <	; post call>
new  <	; PostCall 24>

218:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

221:
old  <	; parameter string_3C25122E3f3E203C252B122E3f3E203C2520122E3f3E203C252D122E3f3E203C252B2D122E3f3E203C252D2B122E3f3E203C25202D122E3f3E203C252D20122E3f3E0A#, offset 48>
new  <	; Parameter pointer "<%12.3f> <%+12.3f> <% 12.3f> <%-12.3f> <%+-12.3f> <%-+12.3f> <% -12.3f> <%- 12.3f>\n" 48>

225:
old  <	; push float float8$123.456#>
new  <	; PushFloat 123.456>

229:
old  <	; parameter float8$123.456#, offset 56>
new  <	; Parameter double 123.456 56>

233:
old  <	; push float float8$123.456#>
new  <	; PushFloat 123.456>

237:
old  <	; parameter float8$123.456#, offset 64>
new  <	; Parameter double 123.456 64>

241:
old  <	; push float float8$123.456#>
new  <	; PushFloat 123.456>

245:
old  <	; parameter float8$123.456#, offset 72>
new  <	; Parameter double 123.456 72>

249:
old  <	; push float float8$123.456#>
new  <	; PushFloat 123.456>

253:
old  <	; parameter float8$123.456#, offset 80>
new  <	; Parameter double 123.456 80>

257:
old  <	; push float float8$123.456#>
new  <	; PushFloat 123.456>

261:
old  <	; parameter float8$123.456#, offset 88>
new  <	; Parameter double 123.456 88>

265:
old  <	; push float float8$123.456#>
new  <	; PushFloat 123.456>

269:
old  <	; parameter float8$123.456#, offset 96>
new  <	; Parameter double 123.456 96>

273:
old  <	; push float float8$123.456#>
new  <	; PushFloat 123.456>

277:
old  <	; parameter float8$123.456#, offset 104>
new  <	; Parameter double 123.456 104>

281:
old  <	; push float float8$123.456#>
new  <	; PushFloat 123.456>

285:
old  <	; parameter float8$123.456#, offset 112>
new  <	; Parameter double 123.456 112>

289:
old  <	; call function noellipse-ellipse printf, extra 64>
new  <	; Call printf 24 64>

298:
old  <	; post call>
new  <	; PostCall 24>

301:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

304:
old  <	; parameter string_3C25122E3f3E203C252B122E3f3E203C2520122E3f3E203C252D122E3f3E203C252B2D122E3f3E203C252D2B122E3f3E203C25202D122E3f3E203C252D20122E3f3E0A#, offset 48>
new  <	; Parameter pointer "<%12.3f> <%+12.3f> <% 12.3f> <%-12.3f> <%+-12.3f> <%-+12.3f> <% -12.3f> <%- 12.3f>\n" 48>

308:
old  <	; push float float8$minus123.456#>
new  <	; PushFloat -123.456>

312:
old  <	; parameter float8$minus123.456#, offset 56>
new  <	; Parameter double -123.456 56>

316:
old  <	; push float float8$minus123.456#>
new  <	; PushFloat -123.456>

320:
old  <	; parameter float8$minus123.456#, offset 64>
new  <	; Parameter double -123.456 64>

324:
old  <	; push float float8$minus123.456#>
new  <	; PushFloat -123.456>

328:
old  <	; parameter float8$minus123.456#, offset 72>
new  <	; Parameter double -123.456 72>

332:
old  <	; push float float8$minus123.456#>
new  <	; PushFloat -123.456>

336:
old  <	; parameter float8$minus123.456#, offset 80>
new  <	; Parameter double -123.456 80>

340:
old  <	; push float float8$minus123.456#>
new  <	; PushFloat -123.456>

344:
old  <	; parameter float8$minus123.456#, offset 88>
new  <	; Parameter double -123.456 88>

348:
old  <	; push float float8$minus123.456#>
new  <	; PushFloat -123.456>

352:
old  <	; parameter float8$minus123.456#, offset 96>
new  <	; Parameter double -123.456 96>

356:
old  <	; push float float8$minus123.456#>
new  <	; PushFloat -123.456>

360:
old  <	; parameter float8$minus123.456#, offset 104>
new  <	; Parameter double -123.456 104>

364:
old  <	; push float float8$minus123.456#>
new  <	; PushFloat -123.456>

368:
old  <	; parameter float8$minus123.456#, offset 112>
new  <	; Parameter double -123.456 112>

372:
old  <	; call function noellipse-ellipse printf, extra 64>
new  <	; Call printf 24 64>

381:
old  <	; post call>
new  <	; PostCall 24>

384:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

387:
old  <	; parameter string_3C250122E3f3E203C252B0122E3f3E203C25200122E3f3E203C25020122E3f3E0A#, offset 48>
new  <	; Parameter pointer "<%012.3f> <%+012.3f> <% 012.3f> <%0 12.3f>\n" 48>

391:
old  <	; push float float8$123.456#>
new  <	; PushFloat 123.456>

395:
old  <	; parameter float8$123.456#, offset 56>
new  <	; Parameter double 123.456 56>

399:
old  <	; push float float8$123.456#>
new  <	; PushFloat 123.456>

403:
old  <	; parameter float8$123.456#, offset 64>
new  <	; Parameter double 123.456 64>

407:
old  <	; push float float8$123.456#>
new  <	; PushFloat 123.456>

411:
old  <	; parameter float8$123.456#, offset 72>
new  <	; Parameter double 123.456 72>

415:
old  <	; push float float8$123.456#>
new  <	; PushFloat 123.456>

419:
old  <	; parameter float8$123.456#, offset 80>
new  <	; Parameter double 123.456 80>

423:
old  <	; call function noellipse-ellipse printf, extra 32>
new  <	; Call printf 24 32>

432:
old  <	; post call>
new  <	; PostCall 24>

435:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

438:
old  <	; parameter string_3C250122E3f3E203C252B0122E3f3E203C25200122E3f3E203C25020122E3f3E0A#, offset 48>
new  <	; Parameter pointer "<%012.3f> <%+012.3f> <% 012.3f> <%0 12.3f>\n" 48>

442:
old  <	; push float float8$minus123.456#>
new  <	; PushFloat -123.456>

446:
old  <	; parameter float8$minus123.456#, offset 56>
new  <	; Parameter double -123.456 56>

450:
old  <	; push float float8$minus123.456#>
new  <	; PushFloat -123.456>

454:
old  <	; parameter float8$minus123.456#, offset 64>
new  <	; Parameter double -123.456 64>

458:
old  <	; push float float8$minus123.456#>
new  <	; PushFloat -123.456>

462:
old  <	; parameter float8$minus123.456#, offset 72>
new  <	; Parameter double -123.456 72>

466:
old  <	; push float float8$minus123.456#>
new  <	; PushFloat -123.456>

470:
old  <	; parameter float8$minus123.456#, offset 80>
new  <	; Parameter double -123.456 80>

474:
old  <	; call function noellipse-ellipse printf, extra 32>
new  <	; Call printf 24 32>

483:
old  <	; post call>
new  <	; PostCall 24>

486:
old  <	; return>
new  <	; Return>

493:
old  <	; function end print_test>
new  <	; FunctionEnd print_test>

23:
old  <	; initializer String>
new  <	; Initializer String ascii %i\n>

29:
old  <	; initializer String>
new  <	; Initializer String islower('%c') = %s\n>

35:
old  <	; initializer String>
new  <	; Initializer String Yes>

41:
old  <	; initializer String>
new  <	; Initializer String No>

47:
old  <	; initializer String>
new  <	; Initializer String isupper('%c') = %s\n>

53:
old  <	; initializer String>
new  <	; Initializer String isalpha('%c') = %s\n>

59:
old  <	; initializer String>
new  <	; Initializer String isdigit('%c') = %s\n>

65:
old  <	; initializer String>
new  <	; Initializer String isalnum('%c') = %s\n>

71:
old  <	; initializer String>
new  <	; Initializer String isxdigit('%c') = %s\n>

77:
old  <	; initializer String>
new  <	; Initializer String isgraph('%c') = %s\n>

83:
old  <	; initializer String>
new  <	; Initializer String isprint('%c') = %s\n>

89:
old  <	; initializer String>
new  <	; Initializer String ispunct('%c') = %s\n>

95:
old  <	; initializer String>
new  <	; Initializer String iscntrl('%c') = %s\n>

101:
old  <	; initializer String>
new  <	; Initializer String isspace('%c') = %s\n>

107:
old  <	; initializer String>
new  <	; Initializer String tolower('%c') = '%c'\n>

113:
old  <	; initializer String>
new  <	; Initializer String toupper('%c') = '%c'\n\n>

119:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 25 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

122:
old  <	; parameter string_ascii2025i0A#, offset 49>
new  <	; Parameter pointer "ascii %i\n" 49>

126:
old  <	; Â£temporary3023 = int_to_int c (SignedChar -> SignedInt)>
new  <	; IntegralToIntegral Â£temporary3023 c>

135:
old  <	; parameter Â£temporary3023, offset 57>
new  <	; Parameter signedint Â£temporary3023 57>

139:
old  <	; call function noellipse-ellipse printf, extra 4>
new  <	; Call printf 25 4>

148:
old  <	; post call>
new  <	; PostCall 25>

151:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 25 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

154:
old  <	; parameter string_islower282725c2729203D2025s0A#, offset 49>
new  <	; Parameter pointer "islower('%c') = %s\n" 49>

158:
old  <	; Â£temporary3025 = int_to_int c (SignedChar -> SignedInt)>
new  <	; IntegralToIntegral Â£temporary3025 c>

167:
old  <	; parameter Â£temporary3025, offset 57>
new  <	; Parameter signedint Â£temporary3025 57>

171:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 25 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

174:
old  <	; Â£temporary3026 = int_to_int c (SignedChar -> SignedInt)>
new  <	; IntegralToIntegral Â£temporary3026 c>

183:
old  <	; parameter Â£temporary3026, offset 85>
new  <	; Parameter signedint Â£temporary3026 85>

187:
old  <	; call function noellipse-noellipse islower>
new  <	; Call islower 61 0>

194:
old  <	; post call>
new  <	; PostCall 61>

197:
old  <	; Â£temporary3027 = return_value>
new  <	; GetReturnValue Â£temporary3027>

200:
old  <	; if Â£temporary3027 == int4$0# goto 19>
new  <	; Equal 19 Â£temporary3027 0>

205:
old  <	; Â£temporary3029 = string_Yes#>
new  <	; Assign Â£temporary3029 "Yes">

209:
old  <	; goto 20>
new  <	; Goto 20>

213:
old  <	; Â£temporary3029 = string_No#>
new  <	; Assign Â£temporary3029 "No">

217:
old  <	; parameter Â£temporary3029, offset 61>
new  <	; Parameter pointer Â£temporary3029 61>

221:
old  <	; call function noellipse-ellipse printf, extra 12>
new  <	; Call printf 25 12>

230:
old  <	; post call>
new  <	; PostCall 25>

233:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 25 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

236:
old  <	; parameter string_isupper282725c2729203D2025s0A#, offset 49>
new  <	; Parameter pointer "isupper('%c') = %s\n" 49>

240:
old  <	; Â£temporary3031 = int_to_int c (SignedChar -> SignedInt)>
new  <	; IntegralToIntegral Â£temporary3031 c>

249:
old  <	; parameter Â£temporary3031, offset 57>
new  <	; Parameter signedint Â£temporary3031 57>

253:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 25 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

256:
old  <	; Â£temporary3032 = int_to_int c (SignedChar -> SignedInt)>
new  <	; IntegralToIntegral Â£temporary3032 c>

265:
old  <	; parameter Â£temporary3032, offset 85>
new  <	; Parameter signedint Â£temporary3032 85>

269:
old  <	; call function noellipse-noellipse isupper>
new  <	; Call isupper 61 0>

276:
old  <	; post call>
new  <	; PostCall 61>

279:
old  <	; Â£temporary3033 = return_value>
new  <	; GetReturnValue Â£temporary3033>

282:
old  <	; if Â£temporary3033 == int4$0# goto 36>
new  <	; Equal 36 Â£temporary3033 0>

287:
old  <	; Â£temporary3035 = string_Yes#>
new  <	; Assign Â£temporary3035 "Yes">

291:
old  <	; goto 37>
new  <	; Goto 37>

295:
old  <	; Â£temporary3035 = string_No#>
new  <	; Assign Â£temporary3035 "No">

299:
old  <	; parameter Â£temporary3035, offset 61>
new  <	; Parameter pointer Â£temporary3035 61>

303:
old  <	; call function noellipse-ellipse printf, extra 12>
new  <	; Call printf 25 12>

312:
old  <	; post call>
new  <	; PostCall 25>

315:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 25 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

318:
old  <	; parameter string_isalpha282725c2729203D2025s0A#, offset 49>
new  <	; Parameter pointer "isalpha('%c') = %s\n" 49>

322:
old  <	; Â£temporary3037 = int_to_int c (SignedChar -> SignedInt)>
new  <	; IntegralToIntegral Â£temporary3037 c>

331:
old  <	; parameter Â£temporary3037, offset 57>
new  <	; Parameter signedint Â£temporary3037 57>

335:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 25 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

338:
old  <	; Â£temporary3038 = int_to_int c (SignedChar -> SignedInt)>
new  <	; IntegralToIntegral Â£temporary3038 c>

347:
old  <	; parameter Â£temporary3038, offset 85>
new  <	; Parameter signedint Â£temporary3038 85>

351:
old  <	; call function noellipse-noellipse isalpha>
new  <	; Call isalpha 61 0>

358:
old  <	; post call>
new  <	; PostCall 61>

361:
old  <	; Â£temporary3039 = return_value>
new  <	; GetReturnValue Â£temporary3039>

364:
old  <	; if Â£temporary3039 == int4$0# goto 53>
new  <	; Equal 53 Â£temporary3039 0>

369:
old  <	; Â£temporary3041 = string_Yes#>
new  <	; Assign Â£temporary3041 "Yes">

373:
old  <	; goto 54>
new  <	; Goto 54>

377:
old  <	; Â£temporary3041 = string_No#>
new  <	; Assign Â£temporary3041 "No">

381:
old  <	; parameter Â£temporary3041, offset 61>
new  <	; Parameter pointer Â£temporary3041 61>

385:
old  <	; call function noellipse-ellipse printf, extra 12>
new  <	; Call printf 25 12>

394:
old  <	; post call>
new  <	; PostCall 25>

397:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 25 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

400:
old  <	; parameter string_isdigit282725c2729203D2025s0A#, offset 49>
new  <	; Parameter pointer "isdigit('%c') = %s\n" 49>

404:
old  <	; Â£temporary3043 = int_to_int c (SignedChar -> SignedInt)>
new  <	; IntegralToIntegral Â£temporary3043 c>

413:
old  <	; parameter Â£temporary3043, offset 57>
new  <	; Parameter signedint Â£temporary3043 57>

417:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 25 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

420:
old  <	; Â£temporary3044 = int_to_int c (SignedChar -> SignedInt)>
new  <	; IntegralToIntegral Â£temporary3044 c>

429:
old  <	; parameter Â£temporary3044, offset 85>
new  <	; Parameter signedint Â£temporary3044 85>

433:
old  <	; call function noellipse-noellipse isdigit>
new  <	; Call isdigit 61 0>

440:
old  <	; post call>
new  <	; PostCall 61>

443:
old  <	; Â£temporary3045 = return_value>
new  <	; GetReturnValue Â£temporary3045>

446:
old  <	; if Â£temporary3045 == int4$0# goto 70>
new  <	; Equal 70 Â£temporary3045 0>

451:
old  <	; Â£temporary3047 = string_Yes#>
new  <	; Assign Â£temporary3047 "Yes">

455:
old  <	; goto 71>
new  <	; Goto 71>

459:
old  <	; Â£temporary3047 = string_No#>
new  <	; Assign Â£temporary3047 "No">

463:
old  <	; parameter Â£temporary3047, offset 61>
new  <	; Parameter pointer Â£temporary3047 61>

467:
old  <	; call function noellipse-ellipse printf, extra 12>
new  <	; Call printf 25 12>

476:
old  <	; post call>
new  <	; PostCall 25>

479:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 25 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

482:
old  <	; parameter string_isalnum282725c2729203D2025s0A#, offset 49>
new  <	; Parameter pointer "isalnum('%c') = %s\n" 49>

486:
old  <	; Â£temporary3049 = int_to_int c (SignedChar -> SignedInt)>
new  <	; IntegralToIntegral Â£temporary3049 c>

495:
old  <	; parameter Â£temporary3049, offset 57>
new  <	; Parameter signedint Â£temporary3049 57>

499:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 25 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

502:
old  <	; Â£temporary3050 = int_to_int c (SignedChar -> SignedInt)>
new  <	; IntegralToIntegral Â£temporary3050 c>

511:
old  <	; parameter Â£temporary3050, offset 85>
new  <	; Parameter signedint Â£temporary3050 85>

515:
old  <	; call function noellipse-noellipse isalnum>
new  <	; Call isalnum 61 0>

522:
old  <	; post call>
new  <	; PostCall 61>

525:
old  <	; Â£temporary3051 = return_value>
new  <	; GetReturnValue Â£temporary3051>

528:
old  <	; if Â£temporary3051 == int4$0# goto 87>
new  <	; Equal 87 Â£temporary3051 0>

533:
old  <	; Â£temporary3053 = string_Yes#>
new  <	; Assign Â£temporary3053 "Yes">

537:
old  <	; goto 88>
new  <	; Goto 88>

541:
old  <	; Â£temporary3053 = string_No#>
new  <	; Assign Â£temporary3053 "No">

545:
old  <	; parameter Â£temporary3053, offset 61>
new  <	; Parameter pointer Â£temporary3053 61>

549:
old  <	; call function noellipse-ellipse printf, extra 12>
new  <	; Call printf 25 12>

558:
old  <	; post call>
new  <	; PostCall 25>

561:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 25 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

564:
old  <	; parameter string_isxdigit282725c2729203D2025s0A#, offset 49>
new  <	; Parameter pointer "isxdigit('%c') = %s\n" 49>

568:
old  <	; Â£temporary3055 = int_to_int c (SignedChar -> SignedInt)>
new  <	; IntegralToIntegral Â£temporary3055 c>

577:
old  <	; parameter Â£temporary3055, offset 57>
new  <	; Parameter signedint Â£temporary3055 57>

581:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 25 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

584:
old  <	; Â£temporary3056 = int_to_int c (SignedChar -> SignedInt)>
new  <	; IntegralToIntegral Â£temporary3056 c>

593:
old  <	; parameter Â£temporary3056, offset 85>
new  <	; Parameter signedint Â£temporary3056 85>

597:
old  <	; call function noellipse-noellipse isxdigit>
new  <	; Call isxdigit 61 0>

604:
old  <	; post call>
new  <	; PostCall 61>

607:
old  <	; Â£temporary3057 = return_value>
new  <	; GetReturnValue Â£temporary3057>

610:
old  <	; if Â£temporary3057 == int4$0# goto 104>
new  <	; Equal 104 Â£temporary3057 0>

615:
old  <	; Â£temporary3059 = string_Yes#>
new  <	; Assign Â£temporary3059 "Yes">

619:
old  <	; goto 105>
new  <	; Goto 105>

623:
old  <	; Â£temporary3059 = string_No#>
new  <	; Assign Â£temporary3059 "No">

627:
old  <	; parameter Â£temporary3059, offset 61>
new  <	; Parameter pointer Â£temporary3059 61>

631:
old  <	; call function noellipse-ellipse printf, extra 12>
new  <	; Call printf 25 12>

640:
old  <	; post call>
new  <	; PostCall 25>

643:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 25 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

646:
old  <	; parameter string_isgraph282725c2729203D2025s0A#, offset 49>
new  <	; Parameter pointer "isgraph('%c') = %s\n" 49>

650:
old  <	; Â£temporary3061 = int_to_int c (SignedChar -> SignedInt)>
new  <	; IntegralToIntegral Â£temporary3061 c>

659:
old  <	; parameter Â£temporary3061, offset 57>
new  <	; Parameter signedint Â£temporary3061 57>

663:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 25 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

666:
old  <	; Â£temporary3062 = int_to_int c (SignedChar -> SignedInt)>
new  <	; IntegralToIntegral Â£temporary3062 c>

675:
old  <	; parameter Â£temporary3062, offset 85>
new  <	; Parameter signedint Â£temporary3062 85>

679:
old  <	; call function noellipse-noellipse isgraph>
new  <	; Call isgraph 61 0>

686:
old  <	; post call>
new  <	; PostCall 61>

689:
old  <	; Â£temporary3063 = return_value>
new  <	; GetReturnValue Â£temporary3063>

692:
old  <	; if Â£temporary3063 == int4$0# goto 121>
new  <	; Equal 121 Â£temporary3063 0>

697:
old  <	; Â£temporary3065 = string_Yes#>
new  <	; Assign Â£temporary3065 "Yes">

701:
old  <	; goto 122>
new  <	; Goto 122>

705:
old  <	; Â£temporary3065 = string_No#>
new  <	; Assign Â£temporary3065 "No">

709:
old  <	; parameter Â£temporary3065, offset 61>
new  <	; Parameter pointer Â£temporary3065 61>

713:
old  <	; call function noellipse-ellipse printf, extra 12>
new  <	; Call printf 25 12>

722:
old  <	; post call>
new  <	; PostCall 25>

725:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 25 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

728:
old  <	; parameter string_isprint282725c2729203D2025s0A#, offset 49>
new  <	; Parameter pointer "isprint('%c') = %s\n" 49>

732:
old  <	; Â£temporary3067 = int_to_int c (SignedChar -> SignedInt)>
new  <	; IntegralToIntegral Â£temporary3067 c>

741:
old  <	; parameter Â£temporary3067, offset 57>
new  <	; Parameter signedint Â£temporary3067 57>

745:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 25 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

748:
old  <	; Â£temporary3068 = int_to_int c (SignedChar -> SignedInt)>
new  <	; IntegralToIntegral Â£temporary3068 c>

757:
old  <	; parameter Â£temporary3068, offset 85>
new  <	; Parameter signedint Â£temporary3068 85>

761:
old  <	; call function noellipse-noellipse isprint>
new  <	; Call isprint 61 0>

768:
old  <	; post call>
new  <	; PostCall 61>

771:
old  <	; Â£temporary3069 = return_value>
new  <	; GetReturnValue Â£temporary3069>

774:
old  <	; if Â£temporary3069 == int4$0# goto 138>
new  <	; Equal 138 Â£temporary3069 0>

779:
old  <	; Â£temporary3071 = string_Yes#>
new  <	; Assign Â£temporary3071 "Yes">

783:
old  <	; goto 139>
new  <	; Goto 139>

787:
old  <	; Â£temporary3071 = string_No#>
new  <	; Assign Â£temporary3071 "No">

791:
old  <	; parameter Â£temporary3071, offset 61>
new  <	; Parameter pointer Â£temporary3071 61>

795:
old  <	; call function noellipse-ellipse printf, extra 12>
new  <	; Call printf 25 12>

804:
old  <	; post call>
new  <	; PostCall 25>

807:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 25 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

810:
old  <	; parameter string_ispunct282725c2729203D2025s0A#, offset 49>
new  <	; Parameter pointer "ispunct('%c') = %s\n" 49>

814:
old  <	; Â£temporary3073 = int_to_int c (SignedChar -> SignedInt)>
new  <	; IntegralToIntegral Â£temporary3073 c>

823:
old  <	; parameter Â£temporary3073, offset 57>
new  <	; Parameter signedint Â£temporary3073 57>

827:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 25 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

830:
old  <	; Â£temporary3074 = int_to_int c (SignedChar -> SignedInt)>
new  <	; IntegralToIntegral Â£temporary3074 c>

839:
old  <	; parameter Â£temporary3074, offset 85>
new  <	; Parameter signedint Â£temporary3074 85>

843:
old  <	; call function noellipse-noellipse ispunct>
new  <	; Call ispunct 61 0>

850:
old  <	; post call>
new  <	; PostCall 61>

853:
old  <	; Â£temporary3075 = return_value>
new  <	; GetReturnValue Â£temporary3075>

856:
old  <	; if Â£temporary3075 == int4$0# goto 155>
new  <	; Equal 155 Â£temporary3075 0>

861:
old  <	; Â£temporary3077 = string_Yes#>
new  <	; Assign Â£temporary3077 "Yes">

865:
old  <	; goto 156>
new  <	; Goto 156>

869:
old  <	; Â£temporary3077 = string_No#>
new  <	; Assign Â£temporary3077 "No">

873:
old  <	; parameter Â£temporary3077, offset 61>
new  <	; Parameter pointer Â£temporary3077 61>

877:
old  <	; call function noellipse-ellipse printf, extra 12>
new  <	; Call printf 25 12>

886:
old  <	; post call>
new  <	; PostCall 25>

889:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 25 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

892:
old  <	; parameter string_iscntrl282725c2729203D2025s0A#, offset 49>
new  <	; Parameter pointer "iscntrl('%c') = %s\n" 49>

896:
old  <	; Â£temporary3079 = int_to_int c (SignedChar -> SignedInt)>
new  <	; IntegralToIntegral Â£temporary3079 c>

905:
old  <	; parameter Â£temporary3079, offset 57>
new  <	; Parameter signedint Â£temporary3079 57>

909:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 25 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

912:
old  <	; Â£temporary3080 = int_to_int c (SignedChar -> SignedInt)>
new  <	; IntegralToIntegral Â£temporary3080 c>

921:
old  <	; parameter Â£temporary3080, offset 85>
new  <	; Parameter signedint Â£temporary3080 85>

925:
old  <	; call function noellipse-noellipse iscntrl>
new  <	; Call iscntrl 61 0>

932:
old  <	; post call>
new  <	; PostCall 61>

935:
old  <	; Â£temporary3081 = return_value>
new  <	; GetReturnValue Â£temporary3081>

938:
old  <	; if Â£temporary3081 == int4$0# goto 172>
new  <	; Equal 172 Â£temporary3081 0>

943:
old  <	; Â£temporary3083 = string_Yes#>
new  <	; Assign Â£temporary3083 "Yes">

947:
old  <	; goto 173>
new  <	; Goto 173>

951:
old  <	; Â£temporary3083 = string_No#>
new  <	; Assign Â£temporary3083 "No">

955:
old  <	; parameter Â£temporary3083, offset 61>
new  <	; Parameter pointer Â£temporary3083 61>

959:
old  <	; call function noellipse-ellipse printf, extra 12>
new  <	; Call printf 25 12>

968:
old  <	; post call>
new  <	; PostCall 25>

971:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 25 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

974:
old  <	; parameter string_isspace282725c2729203D2025s0A#, offset 49>
new  <	; Parameter pointer "isspace('%c') = %s\n" 49>

978:
old  <	; Â£temporary3085 = int_to_int c (SignedChar -> SignedInt)>
new  <	; IntegralToIntegral Â£temporary3085 c>

987:
old  <	; parameter Â£temporary3085, offset 57>
new  <	; Parameter signedint Â£temporary3085 57>

991:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 25 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

994:
old  <	; Â£temporary3086 = int_to_int c (SignedChar -> SignedInt)>
new  <	; IntegralToIntegral Â£temporary3086 c>

1003:
old  <	; parameter Â£temporary3086, offset 85>
new  <	; Parameter signedint Â£temporary3086 85>

1007:
old  <	; call function noellipse-noellipse isspace>
new  <	; Call isspace 61 0>

1014:
old  <	; post call>
new  <	; PostCall 61>

1017:
old  <	; Â£temporary3087 = return_value>
new  <	; GetReturnValue Â£temporary3087>

1020:
old  <	; if Â£temporary3087 == int4$0# goto 189>
new  <	; Equal 189 Â£temporary3087 0>

1025:
old  <	; Â£temporary3089 = string_Yes#>
new  <	; Assign Â£temporary3089 "Yes">

1029:
old  <	; goto 190>
new  <	; Goto 190>

1033:
old  <	; Â£temporary3089 = string_No#>
new  <	; Assign Â£temporary3089 "No">

1037:
old  <	; parameter Â£temporary3089, offset 61>
new  <	; Parameter pointer Â£temporary3089 61>

1041:
old  <	; call function noellipse-ellipse printf, extra 12>
new  <	; Call printf 25 12>

1050:
old  <	; post call>
new  <	; PostCall 25>

1053:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 25 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1056:
old  <	; parameter string_tolower282725c2729203D202725c270A#, offset 49>
new  <	; Parameter pointer "tolower('%c') = '%c'\n" 49>

1060:
old  <	; Â£temporary3091 = int_to_int c (SignedChar -> SignedInt)>
new  <	; IntegralToIntegral Â£temporary3091 c>

1069:
old  <	; parameter Â£temporary3091, offset 57>
new  <	; Parameter signedint Â£temporary3091 57>

1073:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 25 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1076:
old  <	; Â£temporary3092 = int_to_int c (SignedChar -> SignedInt)>
new  <	; IntegralToIntegral Â£temporary3092 c>

1085:
old  <	; parameter Â£temporary3092, offset 85>
new  <	; Parameter signedint Â£temporary3092 85>

1089:
old  <	; call function noellipse-noellipse tolower>
new  <	; Call tolower 61 0>

1096:
old  <	; post call>
new  <	; PostCall 61>

1099:
old  <	; Â£temporary3093 = return_value>
new  <	; GetReturnValue Â£temporary3093>

1102:
old  <	; Â£temporary3094 = int_to_int Â£temporary3093 (SignedInt -> SignedChar)>
new  <	; IntegralToIntegral Â£temporary3094 Â£temporary3093>

1109:
old  <	; Â£temporary3095 = int_to_int Â£temporary3094 (SignedChar -> SignedInt)>
new  <	; IntegralToIntegral Â£temporary3095 Â£temporary3094>

1117:
old  <	; parameter Â£temporary3095, offset 61>
new  <	; Parameter signedint Â£temporary3095 61>

1121:
old  <	; call function noellipse-ellipse printf, extra 8>
new  <	; Call printf 25 8>

1130:
old  <	; post call>
new  <	; PostCall 25>

1133:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 25 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1136:
old  <	; parameter string_toupper282725c2729203D202725c270A0A#, offset 49>
new  <	; Parameter pointer "toupper('%c') = '%c'\n\n" 49>

1140:
old  <	; Â£temporary3097 = int_to_int c (SignedChar -> SignedInt)>
new  <	; IntegralToIntegral Â£temporary3097 c>

1149:
old  <	; parameter Â£temporary3097, offset 57>
new  <	; Parameter signedint Â£temporary3097 57>

1153:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 25 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1156:
old  <	; Â£temporary3098 = int_to_int c (SignedChar -> SignedInt)>
new  <	; IntegralToIntegral Â£temporary3098 c>

1165:
old  <	; parameter Â£temporary3098, offset 85>
new  <	; Parameter signedint Â£temporary3098 85>

1169:
old  <	; call function noellipse-noellipse toupper>
new  <	; Call toupper 61 0>

1176:
old  <	; post call>
new  <	; PostCall 61>

1179:
old  <	; Â£temporary3099 = return_value>
new  <	; GetReturnValue Â£temporary3099>

1182:
old  <	; Â£temporary3100 = int_to_int Â£temporary3099 (SignedInt -> SignedChar)>
new  <	; IntegralToIntegral Â£temporary3100 Â£temporary3099>

1189:
old  <	; Â£temporary3101 = int_to_int Â£temporary3100 (SignedChar -> SignedInt)>
new  <	; IntegralToIntegral Â£temporary3101 Â£temporary3100>

1197:
old  <	; parameter Â£temporary3101, offset 61>
new  <	; Parameter signedint Â£temporary3101 61>

1201:
old  <	; call function noellipse-ellipse printf, extra 8>
new  <	; Call printf 25 8>

1210:
old  <	; post call>
new  <	; PostCall 25>

1213:
old  <	; return>
new  <	; Return>

1220:
old  <	; function end character_test>
new  <	; FunctionEnd character_test>

9:
old  <	; empty>
new  <	; Empty>

12:
old  <	; return>
new  <	; Return>

19:
old  <	; function end float_test>
new  <	; FunctionEnd float_test>

10:
old  <	; initializer String>
new  <	; Initializer String CHAR_BIT = %i\n>

16:
old  <	; initializer String>
new  <	; Initializer String CHAR_MIN = %i\n\n>

22:
old  <	; initializer String>
new  <	; Initializer String CHAR_MAX = %i\n>

28:
old  <	; initializer String>
new  <	; Initializer String UCHAR_MAX = %u\n\n>

34:
old  <	; initializer String>
new  <	; Initializer String SHRT_MIN = %i\n>

40:
old  <	; initializer String>
new  <	; Initializer String SHRT_MAX = %i\n>

46:
old  <	; initializer String>
new  <	; Initializer String USHRT_MAX = %u\n\n>

52:
old  <	; initializer String>
new  <	; Initializer String INT_MIN = %i\n>

58:
old  <	; initializer String>
new  <	; Initializer String INT_MAX = %i\n>

64:
old  <	; initializer String>
new  <	; Initializer String UINT_MAX = %u\n\n>

70:
old  <	; initializer String>
new  <	; Initializer String LONG_MIN = %li\n>

76:
old  <	; initializer String>
new  <	; Initializer String LONG_MAX = %li\n>

82:
old  <	; initializer String>
new  <	; Initializer String ULONG_MAX = %lu\n>

88:
old  <	; initializer String>
new  <	; Initializer String ULONG_MAX = %lx\n>

94:
old  <	; initializer String>
new  <	; Initializer String ULONG_MAX = %lX\n>

100:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

103:
old  <	; parameter string_CHAR_BIT203D2025i0A#, offset 48>
new  <	; Parameter pointer "CHAR_BIT = %i\n" 48>

107:
old  <	; parameter int4$8#, offset 56>
new  <	; Parameter signedint 8 56>

111:
old  <	; call function noellipse-ellipse printf, extra 4>
new  <	; Call printf 24 4>

120:
old  <	; post call>
new  <	; PostCall 24>

123:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

126:
old  <	; parameter string_CHAR_MIN203D2025i0A0A#, offset 48>
new  <	; Parameter pointer "CHAR_MIN = %i\n\n" 48>

130:
old  <	; parameter int4$minus128#, offset 56>
new  <	; Parameter signedint -128 56>

134:
old  <	; call function noellipse-ellipse printf, extra 4>
new  <	; Call printf 24 4>

143:
old  <	; post call>
new  <	; PostCall 24>

146:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

149:
old  <	; parameter string_CHAR_MAX203D2025i0A#, offset 48>
new  <	; Parameter pointer "CHAR_MAX = %i\n" 48>

153:
old  <	; parameter int4$127#, offset 56>
new  <	; Parameter signedint 127 56>

157:
old  <	; call function noellipse-ellipse printf, extra 4>
new  <	; Call printf 24 4>

166:
old  <	; post call>
new  <	; PostCall 24>

169:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

172:
old  <	; parameter string_UCHAR_MAX203D2025u0A0A#, offset 48>
new  <	; Parameter pointer "UCHAR_MAX = %u\n\n" 48>

176:
old  <	; parameter int4$255#, offset 56>
new  <	; Parameter unsigned int 255 56>

180:
old  <	; call function noellipse-ellipse printf, extra 4>
new  <	; Call printf 24 4>

189:
old  <	; post call>
new  <	; PostCall 24>

192:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

195:
old  <	; parameter string_SHRT_MIN203D2025i0A#, offset 48>
new  <	; Parameter pointer "SHRT_MIN = %i\n" 48>

199:
old  <	; parameter int4$minus32768#, offset 56>
new  <	; Parameter signedint -32768 56>

203:
old  <	; call function noellipse-ellipse printf, extra 4>
new  <	; Call printf 24 4>

212:
old  <	; post call>
new  <	; PostCall 24>

215:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

218:
old  <	; parameter string_SHRT_MAX203D2025i0A#, offset 48>
new  <	; Parameter pointer "SHRT_MAX = %i\n" 48>

222:
old  <	; parameter int4$32767#, offset 56>
new  <	; Parameter signedint 32767 56>

226:
old  <	; call function noellipse-ellipse printf, extra 4>
new  <	; Call printf 24 4>

235:
old  <	; post call>
new  <	; PostCall 24>

238:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

241:
old  <	; parameter string_USHRT_MAX203D2025u0A0A#, offset 48>
new  <	; Parameter pointer "USHRT_MAX = %u\n\n" 48>

245:
old  <	; parameter int4$65535#, offset 56>
new  <	; Parameter unsigned int 65535 56>

249:
old  <	; call function noellipse-ellipse printf, extra 4>
new  <	; Call printf 24 4>

258:
old  <	; post call>
new  <	; PostCall 24>

261:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

264:
old  <	; parameter string_INT_MIN203D2025i0A#, offset 48>
new  <	; Parameter pointer "INT_MIN = %i\n" 48>

268:
old  <	; parameter int4$minus2147483648#, offset 56>
new  <	; Parameter signedint -2147483648 56>

272:
old  <	; call function noellipse-ellipse printf, extra 4>
new  <	; Call printf 24 4>

281:
old  <	; post call>
new  <	; PostCall 24>

284:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

287:
old  <	; parameter string_INT_MAX203D2025i0A#, offset 48>
new  <	; Parameter pointer "INT_MAX = %i\n" 48>

291:
old  <	; parameter int4$2147483647#, offset 56>
new  <	; Parameter signedint 2147483647 56>

295:
old  <	; call function noellipse-ellipse printf, extra 4>
new  <	; Call printf 24 4>

304:
old  <	; post call>
new  <	; PostCall 24>

307:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

310:
old  <	; parameter string_UINT_MAX203D2025u0A0A#, offset 48>
new  <	; Parameter pointer "UINT_MAX = %u\n\n" 48>

314:
old  <	; parameter int4$4294967295#, offset 56>
new  <	; Parameter unsigned int 4294967295 56>

319:
old  <	; call function noellipse-ellipse printf, extra 4>
new  <	; Call printf 24 4>

328:
old  <	; post call>
new  <	; PostCall 24>

331:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

334:
old  <	; parameter string_LONG_MIN203D2025li0A#, offset 48>
new  <	; Parameter pointer "LONG_MIN = %li\n" 48>

338:
old  <	; parameter int8$minus9223372036854775808#, offset 56>
new  <	; Parameter signed long int -9223372036854775808 56>

343:
old  <	; call function noellipse-ellipse printf, extra 8>
new  <	; Call printf 24 8>

352:
old  <	; post call>
new  <	; PostCall 24>

355:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

358:
old  <	; parameter string_LONG_MAX203D2025li0A#, offset 48>
new  <	; Parameter pointer "LONG_MAX = %li\n" 48>

362:
old  <	; parameter int8$9223372036854775807#, offset 56>
new  <	; Parameter signed long int 9223372036854775807 56>

367:
old  <	; call function noellipse-ellipse printf, extra 8>
new  <	; Call printf 24 8>

376:
old  <	; post call>
new  <	; PostCall 24>

379:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

382:
old  <	; parameter string_ULONG_MAX203D2025lu0A#, offset 48>
new  <	; Parameter pointer "ULONG_MAX = %lu\n" 48>

386:
old  <	; parameter int8$18446744073709551615#, offset 56>
new  <	; Parameter unsignedlongint 18446744073709551615 56>

391:
old  <	; call function noellipse-ellipse printf, extra 8>
new  <	; Call printf 24 8>

400:
old  <	; post call>
new  <	; PostCall 24>

403:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

406:
old  <	; parameter string_ULONG_MAX203D2025lx0A#, offset 48>
new  <	; Parameter pointer "ULONG_MAX = %lx\n" 48>

410:
old  <	; parameter int8$18446744073709551615#, offset 56>
new  <	; Parameter unsignedlongint 18446744073709551615 56>

415:
old  <	; call function noellipse-ellipse printf, extra 8>
new  <	; Call printf 24 8>

424:
old  <	; post call>
new  <	; PostCall 24>

427:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

430:
old  <	; parameter string_ULONG_MAX203D2025lX0A#, offset 48>
new  <	; Parameter pointer "ULONG_MAX = %lX\n" 48>

434:
old  <	; parameter int8$18446744073709551615#, offset 56>
new  <	; Parameter unsignedlongint 18446744073709551615 56>

439:
old  <	; call function noellipse-ellipse printf, extra 8>
new  <	; Call printf 24 8>

448:
old  <	; post call>
new  <	; PostCall 24>

451:
old  <	; return>
new  <	; Return>

458:
old  <	; function end limits_test>
new  <	; FunctionEnd limits_test>

16:
old  <	; initializer String>
new  <	; Initializer String Please write a number (not 6 or 7): >

22:
old  <	; initializer String>
new  <	; Initializer String %i>

28:
old  <	; initializer String>
new  <	; Initializer String Assertion failed: "%s" in file %s at line %i\n>

34:
old  <	; initializer String>
new  <	; Initializer String n != 6>

40:
old  <	; initializer String>
new  <	; Initializer String C:\Users\Stefan\Documents\vagrant\homestead\code\code\AssertTest.c>

46:
old  <	; n = int4$0#>
new  <	; Assign n 0>

50:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

53:
old  <	; parameter string_Please20write20a20number2028not20620or207293A20#, offset 52>
new  <	; Parameter pointer "Please write a number (not 6 or 7): " 52>

57:
old  <	; call function noellipse-ellipse printf, extra 0>
new  <	; Call printf 28 0>

65:
old  <	; post call>
new  <	; PostCall 28>

68:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

71:
old  <	; parameter string_25i#, offset 52>
new  <	; Parameter pointer "%i" 52>

75:
old  <	; Â£temporary3119 = &n>
new  <	; Address Â£temporary3119 n>

80:
old  <	; parameter Â£temporary3119, offset 60>
new  <	; Parameter pointer Â£temporary3119 60>

84:
old  <	; call function noellipse-ellipse scanf, extra 8>
new  <	; Call scanf 28 8>

93:
old  <	; post call>
new  <	; PostCall 28>

96:
old  <	; if n != int4$6# goto 23>
new  <	; NotEqual 23 n 6>

101:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

104:
old  <	; parameter stderr, offset 52>
new  <	; Parameter pointer stderr 52>

109:
old  <	; parameter string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#, offset 60>
new  <	; Parameter pointer "Assertion failed: "%s" in file %s at line %i\n" 60>

113:
old  <	; parameter string_n20213D206#, offset 68>
new  <	; Parameter pointer "n != 6" 68>

117:
old  <	; parameter string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CAssertTest2Ec#, offset 76>
new  <	; Parameter pointer "C:\Users\Stefan\Documents\vagrant\homestead\code\code\AssertTest.c" 76>

121:
old  <	; parameter int4$10#, offset 84>
new  <	; Parameter signedint 10 84>

125:
old  <	; call function noellipse-ellipse fprintf, extra 20>
new  <	; Call fprintf 28 20>

134:
old  <	; post call>
new  <	; PostCall 28>

137:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

140:
old  <	; call function noellipse-noellipse abort>
new  <	; Call abort 28 0>

147:
old  <	; post call>
new  <	; PostCall 28>

150:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

153:
old  <	; parameter n, offset 52>
new  <	; Parameter signedint n 52>

158:
old  <	; call function noellipse-noellipse assert_test2>
new  <	; Call assert_test2 28 0>

165:
old  <	; post call>
new  <	; PostCall 28>

168:
old  <	; return>
new  <	; Return>

175:
old  <	; function end assert_testX>
new  <	; FunctionEnd assert_testX>

180:
old  <	; initializer String>
new  <	; Initializer String n != 7>

186:
old  <	; if n != int4$7# goto 12>
new  <	; NotEqual 12 n 7>

191:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

194:
old  <	; parameter stderr, offset 52>
new  <	; Parameter pointer stderr 52>

199:
old  <	; parameter string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#, offset 60>
new  <	; Parameter pointer "Assertion failed: "%s" in file %s at line %i\n" 60>

203:
old  <	; parameter string_n20213D207#, offset 68>
new  <	; Parameter pointer "n != 7" 68>

207:
old  <	; parameter string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CAssertTest2Ec#, offset 76>
new  <	; Parameter pointer "C:\Users\Stefan\Documents\vagrant\homestead\code\code\AssertTest.c" 76>

211:
old  <	; parameter int4$15#, offset 84>
new  <	; Parameter signedint 15 84>

215:
old  <	; call function noellipse-ellipse fprintf, extra 20>
new  <	; Call fprintf 28 20>

224:
old  <	; post call>
new  <	; PostCall 28>

227:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

230:
old  <	; call function noellipse-noellipse abort>
new  <	; Call abort 28 0>

237:
old  <	; post call>
new  <	; PostCall 28>

240:
old  <	; return>
new  <	; Return>

247:
old  <	; function end assert_test2X>
new  <	; FunctionEnd assert_test2X>

29:
old  <	; initializer String>
new  <	; Initializer String Hello, World!>

35:
old  <	; initializer String>
new  <	; Initializer String strlen("%s") = %i\n>

41:
old  <	; initializer String>
new  <	; Initializer String t = "%s", u = "%s"\n>

47:
old  <	; initializer String>
new  <	; Initializer String abc>

53:
old  <	; initializer String>
new  <	; Initializer String strcmp(s, u) = %i\n>

59:
old  <	; initializer String>
new  <	; Initializer String strncmp(s, u, 2) = %i\n>

65:
old  <	; initializer String>
new  <	; Initializer String strchr(s, 'l') = %i\n>

71:
old  <	; initializer String>
new  <	; Initializer String strrchr(s, 'l') = %i\n>

77:
old  <	; initializer String>
new  <	; Initializer String strchr(s, 'x') = %i\n>

83:
old  <	; initializer String>
new  <	; Initializer String strrchr(s, 'x') = %i\n>

89:
old  <	; initializer String>
new  <	; Initializer String s = "%s", t = "%s", u = "%s"\n>

95:
old  <	; initializer String>
new  <	; Initializer String memchr(s, 'l', SIZE * sizeof(char)) = %i\n>

101:
old  <	; initializer String>
new  <	; Initializer String memchr(s, 'x', SIZE * sizeof(char)) = %i\n>

107:
old  <	; initializer String>
new  <	; Initializer String memcmp(s, t, SIZE * sizeof(char)) = %i\n>

113:
old  <	; initializer String>
new  <	; Initializer String strspn(s, "Hello, C") = %i\n>

119:
old  <	; initializer String>
new  <	; Initializer String Hello, C>

125:
old  <	; initializer String>
new  <	; Initializer String strcspn(s, "Hello, C") = %i\n>

131:
old  <	; initializer String>
new  <	; Initializer String strerror(errno) = "%s"\n>

137:
old  <	; initializer String>
new  <	; Initializer String ,>

143:
old  <	; initializer String>
new  <	; Initializer String strtok(s, ",") = "%s"\n>

149:
old  <	; empty>
new  <	; Empty>

152:
old  <	; s = string_Hello2C20World21#>
new  <	; Assign s "Hello, World!">

156:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 244 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

159:
old  <	; parameter string_strlen282225s2229203D2025i0A#, offset 268>
new  <	; Parameter pointer "strlen("%s") = %i\n" 268>

163:
old  <	; parameter s, offset 276>
new  <	; Parameter pointer s 276>

168:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 244 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

171:
old  <	; parameter s, offset 308>
new  <	; Parameter pointer s 308>

176:
old  <	; call function noellipse-noellipse strlen>
new  <	; Call strlen 284 0>

183:
old  <	; post call>
new  <	; PostCall 284>

186:
old  <	; Â£temporary3131 = return_value>
new  <	; GetReturnValue Â£temporary3131>

189:
old  <	; parameter Â£temporary3131, offset 284>
new  <	; Parameter signedint Â£temporary3131 284>

193:
old  <	; call function noellipse-ellipse printf, extra 12>
new  <	; Call printf 244 12>

202:
old  <	; post call>
new  <	; PostCall 244>

205:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 244 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

208:
old  <	; parameter t, offset 268>
new  <	; Parameter pointer t 268>

213:
old  <	; parameter s, offset 276>
new  <	; Parameter pointer s 276>

218:
old  <	; call function noellipse-noellipse strcpy>
new  <	; Call strcpy 244 0>

225:
old  <	; post call>
new  <	; PostCall 244>

228:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 244 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

231:
old  <	; parameter u, offset 268>
new  <	; Parameter pointer u 268>

236:
old  <	; parameter s, offset 276>
new  <	; Parameter pointer s 276>

241:
old  <	; parameter int4$5#, offset 284>
new  <	; Parameter signedint 5 284>

245:
old  <	; call function noellipse-noellipse strncpy>
new  <	; Call strncpy 244 0>

252:
old  <	; post call>
new  <	; PostCall 244>

255:
old  <	; Â£temporary3135 -> u = *u>
new  <	; Dereference Â£temporary3135 -> u u 0>

260:
old  <	; Â£temporary3135 -> u = int1$0#>
new  <	; Assign Â£temporary3135 -> u 0>

264:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 244 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

267:
old  <	; parameter string_t203D202225s222C20u203D202225s220A#, offset 268>
new  <	; Parameter pointer "t = "%s", u = "%s"\n" 268>

271:
old  <	; parameter t, offset 276>
new  <	; Parameter pointer t 276>

276:
old  <	; parameter u, offset 284>
new  <	; Parameter pointer u 284>

281:
old  <	; call function noellipse-ellipse printf, extra 16>
new  <	; Call printf 244 16>

290:
old  <	; post call>
new  <	; PostCall 244>

293:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 244 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

296:
old  <	; parameter t, offset 268>
new  <	; Parameter pointer t 268>

301:
old  <	; parameter string_abc#, offset 276>
new  <	; Parameter pointer "abc" 276>

305:
old  <	; call function noellipse-noellipse strcat>
new  <	; Call strcat 244 0>

312:
old  <	; post call>
new  <	; PostCall 244>

315:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 244 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

318:
old  <	; parameter u, offset 268>
new  <	; Parameter pointer u 268>

323:
old  <	; call function noellipse-noellipse strlen>
new  <	; Call strlen 244 0>

330:
old  <	; post call>
new  <	; PostCall 244>

333:
old  <	; Â£temporary3138 = return_value>
new  <	; GetReturnValue Â£temporary3138>

336:
old  <	; i = Â£temporary3138>
new  <	; Assign i Â£temporary3138>

340:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 244 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

343:
old  <	; parameter u, offset 268>
new  <	; Parameter pointer u 268>

348:
old  <	; parameter string_abc#, offset 276>
new  <	; Parameter pointer "abc" 276>

352:
old  <	; parameter int4$2#, offset 284>
new  <	; Parameter signedint 2 284>

356:
old  <	; call function noellipse-noellipse strncat>
new  <	; Call strncat 244 0>

363:
old  <	; post call>
new  <	; PostCall 244>

366:
old  <	; Â£temporary3140 = i + int4$2#>
new  <	; BinaryAdd Â£temporary3140 i 2>

371:
old  <	; Â£temporary3142 = int_to_int Â£temporary3140 (SignedInt -> Array)>
new  <	; IntegralToIntegral Â£temporary3142 Â£temporary3140>

376:
old  <	; Â£temporary3144 = u + Â£temporary3142>
new  <	; BinaryAdd Â£temporary3144 u Â£temporary3142>

382:
old  <	; Â£temporary3141 -> Â£temporary3144 = *Â£temporary3144>
new  <	; Dereference Â£temporary3141 -> Â£temporary3144 Â£temporary3144 0>

385:
old  <	; Â£temporary3141 -> Â£temporary3144 = int1$0#>
new  <	; Assign Â£temporary3141 -> Â£temporary3144 0>

389:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 244 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

392:
old  <	; parameter string_t203D202225s222C20u203D202225s220A#, offset 268>
new  <	; Parameter pointer "t = "%s", u = "%s"\n" 268>

396:
old  <	; parameter t, offset 276>
new  <	; Parameter pointer t 276>

401:
old  <	; parameter u, offset 284>
new  <	; Parameter pointer u 284>

406:
old  <	; call function noellipse-ellipse printf, extra 16>
new  <	; Call printf 244 16>

415:
old  <	; post call>
new  <	; PostCall 244>

418:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 244 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

421:
old  <	; parameter string_strcmp28s2C20u29203D2025i0A#, offset 268>
new  <	; Parameter pointer "strcmp(s, u) = %i\n" 268>

425:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 244 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

428:
old  <	; parameter s, offset 300>
new  <	; Parameter pointer s 300>

433:
old  <	; parameter u, offset 308>
new  <	; Parameter pointer u 308>

438:
old  <	; call function noellipse-noellipse strcmp>
new  <	; Call strcmp 276 0>

445:
old  <	; post call>
new  <	; PostCall 276>

448:
old  <	; Â£temporary3146 = return_value>
new  <	; GetReturnValue Â£temporary3146>

451:
old  <	; parameter Â£temporary3146, offset 276>
new  <	; Parameter signedint Â£temporary3146 276>

455:
old  <	; call function noellipse-ellipse printf, extra 4>
new  <	; Call printf 244 4>

464:
old  <	; post call>
new  <	; PostCall 244>

467:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 244 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

470:
old  <	; parameter string_strncmp28s2C20u2C20229203D2025i0A#, offset 268>
new  <	; Parameter pointer "strncmp(s, u, 2) = %i\n" 268>

474:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 244 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

477:
old  <	; parameter s, offset 300>
new  <	; Parameter pointer s 300>

482:
old  <	; parameter u, offset 308>
new  <	; Parameter pointer u 308>

487:
old  <	; parameter int4$2#, offset 316>
new  <	; Parameter signedint 2 316>

491:
old  <	; call function noellipse-noellipse strncmp>
new  <	; Call strncmp 276 0>

498:
old  <	; post call>
new  <	; PostCall 276>

501:
old  <	; Â£temporary3148 = return_value>
new  <	; GetReturnValue Â£temporary3148>

504:
old  <	; parameter Â£temporary3148, offset 276>
new  <	; Parameter signedint Â£temporary3148 276>

508:
old  <	; call function noellipse-ellipse printf, extra 4>
new  <	; Call printf 244 4>

517:
old  <	; post call>
new  <	; PostCall 244>

520:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 244 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

523:
old  <	; parameter s, offset 268>
new  <	; Parameter pointer s 268>

528:
old  <	; parameter int4$108#, offset 276>
new  <	; Parameter signedint 108 276>

532:
old  <	; call function noellipse-noellipse strchr>
new  <	; Call strchr 244 0>

539:
old  <	; post call>
new  <	; PostCall 244>

542:
old  <	; Â£temporary3150 = return_value>
new  <	; GetReturnValue Â£temporary3150>

545:
old  <	; p = Â£temporary3150>
new  <	; Assign p Â£temporary3150>

549:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 244 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

552:
old  <	; parameter string_strchr28s2C2027l2729203D2025i0A#, offset 268>
new  <	; Parameter pointer "strchr(s, 'l') = %i\n" 268>

556:
old  <	; if p == int8$0# goto 97>
new  <	; Equal 97 p 0>

561:
old  <	; Â£temporary3153 = p - s>
new  <	; BinarySubtract Â£temporary3153 p s>

566:
old  <	; Â£temporary3154 = int_to_int Â£temporary3153 (Pointer -> SignedInt)>
new  <	; IntegralToIntegral Â£temporary3154 Â£temporary3153>

569:
old  <	; Â£temporary3155 = Â£temporary3154>
new  <	; Assign Â£temporary3155 Â£temporary3154>

572:
old  <	; goto 98>
new  <	; Goto 98>

576:
old  <	; Â£temporary3155 = int4$minus1#>
new  <	; Assign Â£temporary3155 -1>

580:
old  <	; parameter Â£temporary3155, offset 276>
new  <	; Parameter signedint Â£temporary3155 276>

584:
old  <	; call function noellipse-ellipse printf, extra 4>
new  <	; Call printf 244 4>

593:
old  <	; post call>
new  <	; PostCall 244>

596:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 244 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

599:
old  <	; parameter s, offset 268>
new  <	; Parameter pointer s 268>

604:
old  <	; parameter int4$108#, offset 276>
new  <	; Parameter signedint 108 276>

608:
old  <	; call function noellipse-noellipse strrchr>
new  <	; Call strrchr 244 0>

615:
old  <	; post call>
new  <	; PostCall 244>

618:
old  <	; Â£temporary3157 = return_value>
new  <	; GetReturnValue Â£temporary3157>

621:
old  <	; p = Â£temporary3157>
new  <	; Assign p Â£temporary3157>

625:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 244 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

628:
old  <	; parameter string_strrchr28s2C2027l2729203D2025i0A#, offset 268>
new  <	; Parameter pointer "strrchr(s, 'l') = %i\n" 268>

632:
old  <	; if p == int8$0# goto 115>
new  <	; Equal 115 p 0>

637:
old  <	; Â£temporary3160 = p - s>
new  <	; BinarySubtract Â£temporary3160 p s>

642:
old  <	; Â£temporary3161 = int_to_int Â£temporary3160 (Pointer -> SignedInt)>
new  <	; IntegralToIntegral Â£temporary3161 Â£temporary3160>

645:
old  <	; Â£temporary3162 = Â£temporary3161>
new  <	; Assign Â£temporary3162 Â£temporary3161>

648:
old  <	; goto 116>
new  <	; Goto 116>

652:
old  <	; Â£temporary3162 = int4$minus1#>
new  <	; Assign Â£temporary3162 -1>

656:
old  <	; parameter Â£temporary3162, offset 276>
new  <	; Parameter signedint Â£temporary3162 276>

660:
old  <	; call function noellipse-ellipse printf, extra 4>
new  <	; Call printf 244 4>

669:
old  <	; post call>
new  <	; PostCall 244>

672:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 244 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

675:
old  <	; parameter s, offset 268>
new  <	; Parameter pointer s 268>

680:
old  <	; parameter int4$120#, offset 276>
new  <	; Parameter signedint 120 276>

684:
old  <	; call function noellipse-noellipse strchr>
new  <	; Call strchr 244 0>

691:
old  <	; post call>
new  <	; PostCall 244>

694:
old  <	; Â£temporary3164 = return_value>
new  <	; GetReturnValue Â£temporary3164>

697:
old  <	; p = Â£temporary3164>
new  <	; Assign p Â£temporary3164>

701:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 244 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

704:
old  <	; parameter string_strchr28s2C2027x2729203D2025i0A#, offset 268>
new  <	; Parameter pointer "strchr(s, 'x') = %i\n" 268>

708:
old  <	; if p == int8$0# goto 133>
new  <	; Equal 133 p 0>

713:
old  <	; Â£temporary3167 = p - s>
new  <	; BinarySubtract Â£temporary3167 p s>

718:
old  <	; Â£temporary3168 = int_to_int Â£temporary3167 (Pointer -> SignedInt)>
new  <	; IntegralToIntegral Â£temporary3168 Â£temporary3167>

721:
old  <	; Â£temporary3169 = Â£temporary3168>
new  <	; Assign Â£temporary3169 Â£temporary3168>

724:
old  <	; goto 134>
new  <	; Goto 134>

728:
old  <	; Â£temporary3169 = int4$minus1#>
new  <	; Assign Â£temporary3169 -1>

732:
old  <	; parameter Â£temporary3169, offset 276>
new  <	; Parameter signedint Â£temporary3169 276>

736:
old  <	; call function noellipse-ellipse printf, extra 4>
new  <	; Call printf 244 4>

745:
old  <	; post call>
new  <	; PostCall 244>

748:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 244 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

751:
old  <	; parameter s, offset 268>
new  <	; Parameter pointer s 268>

756:
old  <	; parameter int4$120#, offset 276>
new  <	; Parameter signedint 120 276>

760:
old  <	; call function noellipse-noellipse strrchr>
new  <	; Call strrchr 244 0>

767:
old  <	; post call>
new  <	; PostCall 244>

770:
old  <	; Â£temporary3171 = return_value>
new  <	; GetReturnValue Â£temporary3171>

773:
old  <	; p = Â£temporary3171>
new  <	; Assign p Â£temporary3171>

777:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 244 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

780:
old  <	; parameter string_strrchr28s2C2027x2729203D2025i0A#, offset 268>
new  <	; Parameter pointer "strrchr(s, 'x') = %i\n" 268>

784:
old  <	; if p == int8$0# goto 151>
new  <	; Equal 151 p 0>

789:
old  <	; Â£temporary3174 = p - s>
new  <	; BinarySubtract Â£temporary3174 p s>

794:
old  <	; Â£temporary3175 = int_to_int Â£temporary3174 (Pointer -> SignedInt)>
new  <	; IntegralToIntegral Â£temporary3175 Â£temporary3174>

797:
old  <	; Â£temporary3176 = Â£temporary3175>
new  <	; Assign Â£temporary3176 Â£temporary3175>

800:
old  <	; goto 152>
new  <	; Goto 152>

804:
old  <	; Â£temporary3176 = int4$minus1#>
new  <	; Assign Â£temporary3176 -1>

808:
old  <	; parameter Â£temporary3176, offset 276>
new  <	; Parameter signedint Â£temporary3176 276>

812:
old  <	; call function noellipse-ellipse printf, extra 4>
new  <	; Call printf 244 4>

821:
old  <	; post call>
new  <	; PostCall 244>

824:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 244 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

827:
old  <	; parameter s, offset 268>
new  <	; Parameter pointer s 268>

832:
old  <	; parameter string_Hello2C20World21#, offset 276>
new  <	; Parameter pointer "Hello, World!" 276>

836:
old  <	; parameter int4$20#, offset 284>
new  <	; Parameter signedint 20 284>

840:
old  <	; call function noellipse-noellipse memcpy>
new  <	; Call memcpy 244 0>

847:
old  <	; post call>
new  <	; PostCall 244>

850:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 244 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

853:
old  <	; parameter t, offset 268>
new  <	; Parameter pointer t 268>

858:
old  <	; parameter string_Hello2C20World21#, offset 276>
new  <	; Parameter pointer "Hello, World!" 276>

862:
old  <	; parameter int4$20#, offset 284>
new  <	; Parameter signedint 20 284>

866:
old  <	; call function noellipse-noellipse memmove>
new  <	; Call memmove 244 0>

873:
old  <	; post call>
new  <	; PostCall 244>

876:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 244 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

879:
old  <	; parameter u, offset 268>
new  <	; Parameter pointer u 268>

884:
old  <	; parameter int4$88#, offset 276>
new  <	; Parameter signedint 88 276>

888:
old  <	; parameter int4$20#, offset 280>
new  <	; Parameter signedint 20 280>

892:
old  <	; call function noellipse-noellipse memset>
new  <	; Call memset 244 0>

899:
old  <	; post call>
new  <	; PostCall 244>

902:
old  <	; Â£temporary3181 -> u = *u>
new  <	; Dereference Â£temporary3181 -> u u 0>

907:
old  <	; Â£temporary3181 -> u = int1$0#>
new  <	; Assign Â£temporary3181 -> u 0>

911:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 244 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

914:
old  <	; parameter string_s203D202225s222C20t203D202225s222C20u203D202225s220A#, offset 268>
new  <	; Parameter pointer "s = "%s", t = "%s", u = "%s"\n" 268>

918:
old  <	; parameter s, offset 276>
new  <	; Parameter pointer s 276>

923:
old  <	; parameter t, offset 284>
new  <	; Parameter pointer t 284>

928:
old  <	; parameter u, offset 292>
new  <	; Parameter pointer u 292>

933:
old  <	; call function noellipse-ellipse printf, extra 24>
new  <	; Call printf 244 24>

942:
old  <	; post call>
new  <	; PostCall 244>

945:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 244 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

948:
old  <	; parameter s, offset 268>
new  <	; Parameter pointer s 268>

953:
old  <	; parameter int4$108#, offset 276>
new  <	; Parameter signedint 108 276>

957:
old  <	; parameter int4$20#, offset 280>
new  <	; Parameter signedint 20 280>

961:
old  <	; call function noellipse-noellipse memchr>
new  <	; Call memchr 244 0>

968:
old  <	; post call>
new  <	; PostCall 244>

971:
old  <	; Â£temporary3183 = return_value>
new  <	; GetReturnValue Â£temporary3183>

974:
old  <	; p = Â£temporary3183>
new  <	; Assign p Â£temporary3183>

978:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 244 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

981:
old  <	; parameter string_memchr28s2C2027l272C20SIZE202A20sizeof28char2929203D2025i0A#, offset 268>
new  <	; Parameter pointer "memchr(s, 'l', SIZE * sizeof(char)) = %i\n" 268>

985:
old  <	; if p == int8$0# goto 197>
new  <	; Equal 197 p 0>

990:
old  <	; Â£temporary3186 = p - s>
new  <	; BinarySubtract Â£temporary3186 p s>

995:
old  <	; Â£temporary3187 = int_to_int Â£temporary3186 (Pointer -> SignedInt)>
new  <	; IntegralToIntegral Â£temporary3187 Â£temporary3186>

998:
old  <	; Â£temporary3188 = Â£temporary3187>
new  <	; Assign Â£temporary3188 Â£temporary3187>

1001:
old  <	; goto 198>
new  <	; Goto 198>

1005:
old  <	; Â£temporary3188 = int4$minus1#>
new  <	; Assign Â£temporary3188 -1>

1009:
old  <	; parameter Â£temporary3188, offset 276>
new  <	; Parameter signedint Â£temporary3188 276>

1013:
old  <	; call function noellipse-ellipse printf, extra 4>
new  <	; Call printf 244 4>

1022:
old  <	; post call>
new  <	; PostCall 244>

1025:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 244 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1028:
old  <	; parameter s, offset 268>
new  <	; Parameter pointer s 268>

1033:
old  <	; parameter int4$120#, offset 276>
new  <	; Parameter signedint 120 276>

1037:
old  <	; parameter int4$20#, offset 280>
new  <	; Parameter signedint 20 280>

1041:
old  <	; call function noellipse-noellipse memchr>
new  <	; Call memchr 244 0>

1048:
old  <	; post call>
new  <	; PostCall 244>

1051:
old  <	; Â£temporary3190 = return_value>
new  <	; GetReturnValue Â£temporary3190>

1054:
old  <	; p = Â£temporary3190>
new  <	; Assign p Â£temporary3190>

1058:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 244 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1061:
old  <	; parameter string_memchr28s2C2027x272C20SIZE202A20sizeof28char2929203D2025i0A#, offset 268>
new  <	; Parameter pointer "memchr(s, 'x', SIZE * sizeof(char)) = %i\n" 268>

1065:
old  <	; if p == int8$0# goto 216>
new  <	; Equal 216 p 0>

1070:
old  <	; Â£temporary3193 = p - s>
new  <	; BinarySubtract Â£temporary3193 p s>

1075:
old  <	; Â£temporary3194 = int_to_int Â£temporary3193 (Pointer -> SignedInt)>
new  <	; IntegralToIntegral Â£temporary3194 Â£temporary3193>

1078:
old  <	; Â£temporary3195 = Â£temporary3194>
new  <	; Assign Â£temporary3195 Â£temporary3194>

1081:
old  <	; goto 217>
new  <	; Goto 217>

1085:
old  <	; Â£temporary3195 = int4$minus1#>
new  <	; Assign Â£temporary3195 -1>

1089:
old  <	; parameter Â£temporary3195, offset 276>
new  <	; Parameter signedint Â£temporary3195 276>

1093:
old  <	; call function noellipse-ellipse printf, extra 4>
new  <	; Call printf 244 4>

1102:
old  <	; post call>
new  <	; PostCall 244>

1105:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 244 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1108:
old  <	; parameter string_memcmp28s2C20t2C20SIZE202A20sizeof28char2929203D2025i0A#, offset 268>
new  <	; Parameter pointer "memcmp(s, t, SIZE * sizeof(char)) = %i\n" 268>

1112:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 244 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1115:
old  <	; parameter s, offset 300>
new  <	; Parameter pointer s 300>

1120:
old  <	; parameter t, offset 308>
new  <	; Parameter pointer t 308>

1125:
old  <	; parameter int4$20#, offset 316>
new  <	; Parameter signedint 20 316>

1129:
old  <	; call function noellipse-noellipse memcmp>
new  <	; Call memcmp 276 0>

1136:
old  <	; post call>
new  <	; PostCall 276>

1139:
old  <	; Â£temporary3197 = return_value>
new  <	; GetReturnValue Â£temporary3197>

1142:
old  <	; parameter Â£temporary3197, offset 276>
new  <	; Parameter signedint Â£temporary3197 276>

1146:
old  <	; call function noellipse-ellipse printf, extra 4>
new  <	; Call printf 244 4>

1155:
old  <	; post call>
new  <	; PostCall 244>

1158:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 244 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1161:
old  <	; parameter string_strspn28s2C2022Hello2C20C2229203D2025i0A#, offset 268>
new  <	; Parameter pointer "strspn(s, "Hello, C") = %i\n" 268>

1165:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 244 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1168:
old  <	; parameter s, offset 300>
new  <	; Parameter pointer s 300>

1173:
old  <	; parameter string_Hello2C20C#, offset 308>
new  <	; Parameter pointer "Hello, C" 308>

1177:
old  <	; call function noellipse-noellipse strspn>
new  <	; Call strspn 276 0>

1184:
old  <	; post call>
new  <	; PostCall 276>

1187:
old  <	; Â£temporary3199 = return_value>
new  <	; GetReturnValue Â£temporary3199>

1190:
old  <	; parameter Â£temporary3199, offset 276>
new  <	; Parameter signedint Â£temporary3199 276>

1194:
old  <	; call function noellipse-ellipse printf, extra 4>
new  <	; Call printf 244 4>

1203:
old  <	; post call>
new  <	; PostCall 244>

1206:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 244 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1209:
old  <	; parameter string_strcspn28s2C2022Hello2C20C2229203D2025i0A#, offset 268>
new  <	; Parameter pointer "strcspn(s, "Hello, C") = %i\n" 268>

1213:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 244 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1216:
old  <	; parameter s, offset 300>
new  <	; Parameter pointer s 300>

1221:
old  <	; parameter string_Hello2C20C#, offset 308>
new  <	; Parameter pointer "Hello, C" 308>

1225:
old  <	; call function noellipse-noellipse strcspn>
new  <	; Call strcspn 276 0>

1232:
old  <	; post call>
new  <	; PostCall 276>

1235:
old  <	; Â£temporary3201 = return_value>
new  <	; GetReturnValue Â£temporary3201>

1238:
old  <	; parameter Â£temporary3201, offset 276>
new  <	; Parameter signedint Â£temporary3201 276>

1242:
old  <	; call function noellipse-ellipse printf, extra 4>
new  <	; Call printf 244 4>

1251:
old  <	; post call>
new  <	; PostCall 244>

1254:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 244 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1257:
old  <	; parameter string_strerror28errno29203D202225s220A#, offset 268>
new  <	; Parameter pointer "strerror(errno) = "%s"\n" 268>

1261:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 244 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1264:
old  <	; parameter errno, offset 300>
new  <	; Parameter signedint errno 300>

1269:
old  <	; call function noellipse-noellipse strerror>
new  <	; Call strerror 276 0>

1276:
old  <	; post call>
new  <	; PostCall 276>

1279:
old  <	; Â£temporary3203 = return_value>
new  <	; GetReturnValue Â£temporary3203>

1282:
old  <	; parameter Â£temporary3203, offset 276>
new  <	; Parameter pointer Â£temporary3203 276>

1286:
old  <	; call function noellipse-ellipse printf, extra 8>
new  <	; Call printf 244 8>

1295:
old  <	; post call>
new  <	; PostCall 244>

1298:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 244 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1301:
old  <	; parameter s, offset 268>
new  <	; Parameter pointer s 268>

1306:
old  <	; parameter string_2C#, offset 276>
new  <	; Parameter pointer "," 276>

1310:
old  <	; call function noellipse-noellipse strtok>
new  <	; Call strtok 244 0>

1317:
old  <	; post call>
new  <	; PostCall 244>

1320:
old  <	; Â£temporary3205 = return_value>
new  <	; GetReturnValue Â£temporary3205>

1323:
old  <	; p = Â£temporary3205>
new  <	; Assign p Â£temporary3205>

1327:
old  <	; if p == int8$0# goto 285>
new  <	; Equal 285 p 0>

1332:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 244 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1335:
old  <	; parameter string_strtok28s2C20222C2229203D202225s220A#, offset 268>
new  <	; Parameter pointer "strtok(s, ",") = "%s"\n" 268>

1339:
old  <	; parameter p, offset 276>
new  <	; Parameter pointer p 276>

1344:
old  <	; call function noellipse-ellipse printf, extra 8>
new  <	; Call printf 244 8>

1353:
old  <	; post call>
new  <	; PostCall 244>

1356:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 244 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1359:
old  <	; parameter int8$0#, offset 268>
new  <	; Parameter pointer 0 268>

1363:
old  <	; parameter string_2C#, offset 276>
new  <	; Parameter pointer "," 276>

1367:
old  <	; call function noellipse-noellipse strtok>
new  <	; Call strtok 244 0>

1374:
old  <	; post call>
new  <	; PostCall 244>

1377:
old  <	; Â£temporary3208 = return_value>
new  <	; GetReturnValue Â£temporary3208>

1380:
old  <	; p = Â£temporary3208>
new  <	; Assign p Â£temporary3208>

1384:
old  <	; goto 271>
new  <	; Goto 271>

1388:
old  <	; return>
new  <	; Return>

1395:
old  <	; function end string_test>
new  <	; FunctionEnd string_test>

15:
old  <	; initializer zero 24>
new  <	; InitializerZero 24>

21:
old  <	; initializer String>
new  <	; Initializer String Division by Zero.>

27:
old  <	; push float y>
new  <	; PushFloat y>

31:
old  <	; push float float8$0#>
new  <	; PushFloat 0>

35:
old  <	; if y == float8$0# goto 7>
new  <	; Equal 7 y 0>

42:
old  <	; push float x>
new  <	; PushFloat x>

46:
old  <	; push float y>
new  <	; PushFloat y>

50:
old  <	; Â£temporary3210 = x / y>
new  <	; SignedDivide Â£temporary3210 x y>

54:
old  <	; return Â£temporary3210>
new  <	; Return Â£temporary3210>

61:
old  <	; p = string_Division20by20Zero2E#>
new  <	; Assign p "Division by Zero.">

65:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

68:
old  <	; parameter buffer, offset 72>
new  <	; Parameter pointer buffer 72>

72:
old  <	; Â£temporary3211 = int_to_int p (Pointer -> SignedInt)>
new  <	; IntegralToIntegral Â£temporary3211 p>

76:
old  <	; parameter Â£temporary3211, offset 80>
new  <	; Parameter signedint Â£temporary3211 80>

80:
old  <	; call function noellipse-noellipse longjmp>
new  <	; Call longjmp 48 0>

87:
old  <	; post call>
new  <	; PostCall 48>

90:
old  <	; push float float8$0#>
new  <	; PushFloat 0>

94:
old  <	; return float8$0#>
new  <	; Return 0>

101:
old  <	; function end divide>
new  <	; FunctionEnd divide>

106:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

109:
old  <	; push float float8$1.0#>
new  <	; PushFloat 1.0>

113:
old  <	; parameter float8$1.0#, offset 56>
new  <	; Parameter double 1.0 56>

117:
old  <	; push float x>
new  <	; PushFloat x>

121:
old  <	; parameter x, offset 64>
new  <	; Parameter double x 64>

125:
old  <	; call function noellipse-noellipse divide>
new  <	; Call divide 32 0>

132:
old  <	; post call>
new  <	; PostCall 32>

135:
old  <	; Â£temporary3213 = return_value>
new  <	; GetReturnValue Â£temporary3213>

138:
old  <	; return Â£temporary3213>
new  <	; Return Â£temporary3213>

145:
old  <	; function end invers>
new  <	; FunctionEnd invers>

150:
old  <	; initializer String>
new  <	; Initializer String 1.0 / %f = %f\n>

156:
old  <	; initializer String>
new  <	; Initializer String p = <%s> <%u>\n>

162:
old  <	; empty>
new  <	; Empty>

165:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

168:
old  <	; parameter buffer, offset 64>
new  <	; Parameter pointer buffer 64>

172:
old  <	; call function noellipse-noellipse setjmp>
new  <	; Call setjmp 40 0>

179:
old  <	; post call>
new  <	; PostCall 40>

182:
old  <	; Â£temporary3216 = return_value>
new  <	; GetReturnValue Â£temporary3216>

185:
old  <	; Â£temporary3217 = int_to_int Â£temporary3216 (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary3217 Â£temporary3216>

190:
old  <	; p = Â£temporary3217>
new  <	; Assign p Â£temporary3217>

194:
old  <	; if p != int8$0# goto 23>
new  <	; NotEqual 23 p 0>

199:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

202:
old  <	; parameter string_12E0202F2025f203D2025f0A#, offset 64>
new  <	; Parameter pointer "1.0 / %f = %f\n" 64>

206:
old  <	; push float x>
new  <	; PushFloat x>

210:
old  <	; parameter x, offset 72>
new  <	; Parameter double x 72>

214:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

217:
old  <	; push float x>
new  <	; PushFloat x>

221:
old  <	; parameter x, offset 104>
new  <	; Parameter double x 104>

225:
old  <	; call function noellipse-noellipse invers>
new  <	; Call invers 80 0>

232:
old  <	; post call>
new  <	; PostCall 80>

235:
old  <	; Â£temporary3219 = return_value>
new  <	; GetReturnValue Â£temporary3219>

238:
old  <	; parameter Â£temporary3219, offset 80>
new  <	; Parameter double Â£temporary3219 80>

242:
old  <	; call function noellipse-ellipse printf, extra 16>
new  <	; Call printf 40 16>

251:
old  <	; post call>
new  <	; PostCall 40>

254:
old  <	; goto 29>
new  <	; Goto 29>

258:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

261:
old  <	; parameter string_p203D203C25s3E203C25u3E0A#, offset 64>
new  <	; Parameter pointer "p = <%s> <%u>\n" 64>

265:
old  <	; parameter p, offset 72>
new  <	; Parameter pointer p 72>

270:
old  <	; parameter p, offset 80>
new  <	; Parameter pointer p 80>

275:
old  <	; call function noellipse-ellipse printf, extra 16>
new  <	; Call printf 40 16>

284:
old  <	; post call>
new  <	; PostCall 40>

287:
old  <	; return>
new  <	; Return>

294:
old  <	; function end setjmp_test>
new  <	; FunctionEnd setjmp_test>

40:
old  <	; initializer Double>
new  <	; Initializer Double -6.2831853071795864768>

46:
old  <	; initializer Double>
new  <	; Initializer Double -3.1415926535897932384>

52:
old  <	; initializer Double>
new  <	; Initializer Double -1.5707963267948966192>

58:
old  <	; initializer Double>
new  <	; Initializer Double -1>

64:
old  <	; initializer Double>
new  <	; Initializer Double 1.5707963267948966192>

70:
old  <	; initializer Double>
new  <	; Initializer Double 3.1415926535897932384>

76:
old  <	; initializer Double>
new  <	; Initializer Double 6.2831853071795864768>

82:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

85:
old  <	; push float float8$minus6.2831853071795864768#>
new  <	; PushFloat -6.2831853071795864768>

89:
old  <	; parameter float8$minus6.2831853071795864768#, offset 48>
new  <	; Parameter double -6.2831853071795864768 48>

93:
old  <	; call function noellipse-noellipse math_test_1>
new  <	; Call math_test_1 24 0>

100:
old  <	; post call>
new  <	; PostCall 24>

103:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

106:
old  <	; push float float8$minus3.1415926535897932384#>
new  <	; PushFloat -3.1415926535897932384>

110:
old  <	; parameter float8$minus3.1415926535897932384#, offset 48>
new  <	; Parameter double -3.1415926535897932384 48>

114:
old  <	; call function noellipse-noellipse math_test_1>
new  <	; Call math_test_1 24 0>

121:
old  <	; post call>
new  <	; PostCall 24>

124:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

127:
old  <	; push float float8$minus1.5707963267948966192#>
new  <	; PushFloat -1.5707963267948966192>

131:
old  <	; parameter float8$minus1.5707963267948966192#, offset 48>
new  <	; Parameter double -1.5707963267948966192 48>

135:
old  <	; call function noellipse-noellipse math_test_1>
new  <	; Call math_test_1 24 0>

142:
old  <	; post call>
new  <	; PostCall 24>

145:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

148:
old  <	; push float float8$minus1#>
new  <	; PushFloat -1>

152:
old  <	; parameter float8$minus1#, offset 48>
new  <	; Parameter double -1 48>

156:
old  <	; call function noellipse-noellipse math_test_1>
new  <	; Call math_test_1 24 0>

163:
old  <	; post call>
new  <	; PostCall 24>

166:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

169:
old  <	; push float float8$0#>
new  <	; PushFloat 0>

173:
old  <	; parameter float8$0#, offset 48>
new  <	; Parameter double 0 48>

177:
old  <	; call function noellipse-noellipse math_test_1>
new  <	; Call math_test_1 24 0>

184:
old  <	; post call>
new  <	; PostCall 24>

187:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

190:
old  <	; push float float8$1#>
new  <	; PushFloat 1>

194:
old  <	; parameter float8$1#, offset 48>
new  <	; Parameter double 1 48>

198:
old  <	; call function noellipse-noellipse math_test_1>
new  <	; Call math_test_1 24 0>

205:
old  <	; post call>
new  <	; PostCall 24>

208:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

211:
old  <	; push float float8$1.5707963267948966192#>
new  <	; PushFloat 1.5707963267948966192>

215:
old  <	; parameter float8$1.5707963267948966192#, offset 48>
new  <	; Parameter double 1.5707963267948966192 48>

219:
old  <	; call function noellipse-noellipse math_test_1>
new  <	; Call math_test_1 24 0>

226:
old  <	; post call>
new  <	; PostCall 24>

229:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

232:
old  <	; push float float8$3.1415926535897932384#>
new  <	; PushFloat 3.1415926535897932384>

236:
old  <	; parameter float8$3.1415926535897932384#, offset 48>
new  <	; Parameter double 3.1415926535897932384 48>

240:
old  <	; call function noellipse-noellipse math_test_1>
new  <	; Call math_test_1 24 0>

247:
old  <	; post call>
new  <	; PostCall 24>

250:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

253:
old  <	; push float float8$6.2831853071795864768#>
new  <	; PushFloat 6.2831853071795864768>

257:
old  <	; parameter float8$6.2831853071795864768#, offset 48>
new  <	; Parameter double 6.2831853071795864768 48>

261:
old  <	; call function noellipse-noellipse math_test_1>
new  <	; Call math_test_1 24 0>

268:
old  <	; post call>
new  <	; PostCall 24>

271:
old  <	; return>
new  <	; Return>

278:
old  <	; function end math_test_1x>
new  <	; FunctionEnd math_test_1x>

283:
old  <	; initializer String>
new  <	; Initializer String   acos(%f) = %f, errno = %i <%s>, >

289:
old  <	; initializer String>
new  <	; Initializer String Error message>

295:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

298:
old  <	; parameter string_2020acos2825f29203D2025f2C20errno203D2025i203C25s3E2C20#, offset 56>
new  <	; Parameter pointer "  acos(%f) = %f, errno = %i <%s>, " 56>

302:
old  <	; push float x>
new  <	; PushFloat x>

306:
old  <	; parameter x, offset 64>
new  <	; Parameter double x 64>

310:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

313:
old  <	; push float x>
new  <	; PushFloat x>

317:
old  <	; parameter x, offset 96>
new  <	; Parameter double x 96>

321:
old  <	; call function noellipse-noellipse acos>
new  <	; Call acos 72 0>

328:
old  <	; post call>
new  <	; PostCall 72>

331:
old  <	; Â£temporary3243 = return_value>
new  <	; GetReturnValue Â£temporary3243>

334:
old  <	; parameter Â£temporary3243, offset 72>
new  <	; Parameter double Â£temporary3243 72>

338:
old  <	; parameter errno, offset 80>
new  <	; Parameter signedint errno 80>

343:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

346:
old  <	; parameter errno, offset 108>
new  <	; Parameter signedint errno 108>

351:
old  <	; call function noellipse-noellipse strerror>
new  <	; Call strerror 84 0>

358:
old  <	; post call>
new  <	; PostCall 84>

361:
old  <	; Â£temporary3244 = return_value>
new  <	; GetReturnValue Â£temporary3244>

364:
old  <	; parameter Â£temporary3244, offset 84>
new  <	; Parameter pointer Â£temporary3244 84>

368:
old  <	; call function noellipse-ellipse printf, extra 28>
new  <	; Call printf 32 28>

377:
old  <	; post call>
new  <	; PostCall 32>

380:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

383:
old  <	; parameter string_Error20message#, offset 56>
new  <	; Parameter pointer "Error message" 56>

387:
old  <	; call function noellipse-noellipse perror>
new  <	; Call perror 32 0>

394:
old  <	; post call>
new  <	; PostCall 32>

397:
old  <	; errno = int4$0#>
new  <	; Assign errno 0>

401:
old  <	; return>
new  <	; Return>

408:
old  <	; function end acos_test>
new  <	; FunctionEnd acos_test>

413:
old  <	; initializer String>
new  <	; Initializer String   atan(%f) = %f, errno = %i <%s>, >

419:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

422:
old  <	; parameter string_2020atan2825f29203D2025f2C20errno203D2025i203C25s3E2C20#, offset 56>
new  <	; Parameter pointer "  atan(%f) = %f, errno = %i <%s>, " 56>

426:
old  <	; push float x>
new  <	; PushFloat x>

430:
old  <	; parameter x, offset 64>
new  <	; Parameter double x 64>

434:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

437:
old  <	; push float x>
new  <	; PushFloat x>

441:
old  <	; parameter x, offset 96>
new  <	; Parameter double x 96>

445:
old  <	; call function noellipse-noellipse atan>
new  <	; Call atan 72 0>

452:
old  <	; post call>
new  <	; PostCall 72>

455:
old  <	; Â£temporary3250 = return_value>
new  <	; GetReturnValue Â£temporary3250>

458:
old  <	; parameter Â£temporary3250, offset 72>
new  <	; Parameter double Â£temporary3250 72>

462:
old  <	; parameter errno, offset 80>
new  <	; Parameter signedint errno 80>

467:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

470:
old  <	; parameter errno, offset 108>
new  <	; Parameter signedint errno 108>

475:
old  <	; call function noellipse-noellipse strerror>
new  <	; Call strerror 84 0>

482:
old  <	; post call>
new  <	; PostCall 84>

485:
old  <	; Â£temporary3251 = return_value>
new  <	; GetReturnValue Â£temporary3251>

488:
old  <	; parameter Â£temporary3251, offset 84>
new  <	; Parameter pointer Â£temporary3251 84>

492:
old  <	; call function noellipse-ellipse printf, extra 28>
new  <	; Call printf 32 28>

501:
old  <	; post call>
new  <	; PostCall 32>

504:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

507:
old  <	; parameter string_Error20message#, offset 56>
new  <	; Parameter pointer "Error message" 56>

511:
old  <	; call function noellipse-noellipse perror>
new  <	; Call perror 32 0>

518:
old  <	; post call>
new  <	; PostCall 32>

521:
old  <	; errno = int4$0#>
new  <	; Assign errno 0>

525:
old  <	; return>
new  <	; Return>

532:
old  <	; function end atan_test>
new  <	; FunctionEnd atan_test>

537:
old  <	; initializer Double>
new  <	; Initializer Double 1.000001>

543:
old  <	; initializer Double>
new  <	; Initializer Double 0.999999>

549:
old  <	; initializer Double>
new  <	; Initializer Double 0.000001>

555:
old  <	; initializer Double>
new  <	; Initializer Double -0.000001>

561:
old  <	; initializer Double>
new  <	; Initializer Double -0.999999>

567:
old  <	; initializer Double>
new  <	; Initializer Double -1.0>

573:
old  <	; initializer Double>
new  <	; Initializer Double -1.000001>

579:
old  <	; initializer Double>
new  <	; Initializer Double 2.0>

585:
old  <	; initializer Double>
new  <	; Initializer Double 3.0>

591:
old  <	; initializer Double>
new  <	; Initializer Double 4.0>

597:
old  <	; initializer Double>
new  <	; Initializer Double -2.0>

603:
old  <	; initializer Double>
new  <	; Initializer Double 2>

609:
old  <	; initializer Double>
new  <	; Initializer Double -2>

615:
old  <	; initializer Double>
new  <	; Initializer Double -4.0>

621:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

624:
old  <	; push float float8$1.000001#>
new  <	; PushFloat 1.000001>

628:
old  <	; parameter float8$1.000001#, offset 48>
new  <	; Parameter double 1.000001 48>

632:
old  <	; call function noellipse-noellipse math_test_1>
new  <	; Call math_test_1 24 0>

639:
old  <	; post call>
new  <	; PostCall 24>

642:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

645:
old  <	; push float float8$1.0#>
new  <	; PushFloat 1.0>

649:
old  <	; parameter float8$1.0#, offset 48>
new  <	; Parameter double 1.0 48>

653:
old  <	; call function noellipse-noellipse math_test_1>
new  <	; Call math_test_1 24 0>

660:
old  <	; post call>
new  <	; PostCall 24>

663:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

666:
old  <	; push float float8$0.999999#>
new  <	; PushFloat 0.999999>

670:
old  <	; parameter float8$0.999999#, offset 48>
new  <	; Parameter double 0.999999 48>

674:
old  <	; call function noellipse-noellipse math_test_1>
new  <	; Call math_test_1 24 0>

681:
old  <	; post call>
new  <	; PostCall 24>

684:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

687:
old  <	; push float float8$0.000001#>
new  <	; PushFloat 0.000001>

691:
old  <	; parameter float8$0.000001#, offset 48>
new  <	; Parameter double 0.000001 48>

695:
old  <	; call function noellipse-noellipse math_test_1>
new  <	; Call math_test_1 24 0>

702:
old  <	; post call>
new  <	; PostCall 24>

705:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

708:
old  <	; push float float8$0#>
new  <	; PushFloat 0>

712:
old  <	; parameter float8$0#, offset 48>
new  <	; Parameter double 0 48>

716:
old  <	; call function noellipse-noellipse math_test_1>
new  <	; Call math_test_1 24 0>

723:
old  <	; post call>
new  <	; PostCall 24>

726:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

729:
old  <	; push float float8$minus0.000001#>
new  <	; PushFloat -0.000001>

733:
old  <	; parameter float8$minus0.000001#, offset 48>
new  <	; Parameter double -0.000001 48>

737:
old  <	; call function noellipse-noellipse math_test_1>
new  <	; Call math_test_1 24 0>

744:
old  <	; post call>
new  <	; PostCall 24>

747:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

750:
old  <	; push float float8$minus0.999999#>
new  <	; PushFloat -0.999999>

754:
old  <	; parameter float8$minus0.999999#, offset 48>
new  <	; Parameter double -0.999999 48>

758:
old  <	; call function noellipse-noellipse math_test_1>
new  <	; Call math_test_1 24 0>

765:
old  <	; post call>
new  <	; PostCall 24>

768:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

771:
old  <	; push float float8$minus1.0#>
new  <	; PushFloat -1.0>

775:
old  <	; parameter float8$minus1.0#, offset 48>
new  <	; Parameter double -1.0 48>

779:
old  <	; call function noellipse-noellipse math_test_1>
new  <	; Call math_test_1 24 0>

786:
old  <	; post call>
new  <	; PostCall 24>

789:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

792:
old  <	; push float float8$minus1.000001#>
new  <	; PushFloat -1.000001>

796:
old  <	; parameter float8$minus1.000001#, offset 48>
new  <	; Parameter double -1.000001 48>

800:
old  <	; call function noellipse-noellipse math_test_1>
new  <	; Call math_test_1 24 0>

807:
old  <	; post call>
new  <	; PostCall 24>

810:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

813:
old  <	; push float float8$6.2831853071795864768#>
new  <	; PushFloat 6.2831853071795864768>

817:
old  <	; parameter float8$6.2831853071795864768#, offset 48>
new  <	; Parameter double 6.2831853071795864768 48>

821:
old  <	; call function noellipse-noellipse math_test_1>
new  <	; Call math_test_1 24 0>

828:
old  <	; post call>
new  <	; PostCall 24>

831:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

834:
old  <	; push float float8$3.1415926535897932384#>
new  <	; PushFloat 3.1415926535897932384>

838:
old  <	; parameter float8$3.1415926535897932384#, offset 48>
new  <	; Parameter double 3.1415926535897932384 48>

842:
old  <	; call function noellipse-noellipse math_test_1>
new  <	; Call math_test_1 24 0>

849:
old  <	; post call>
new  <	; PostCall 24>

852:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

855:
old  <	; push float float8$1.5707963267948966192#>
new  <	; PushFloat 1.5707963267948966192>

859:
old  <	; parameter float8$1.5707963267948966192#, offset 48>
new  <	; Parameter double 1.5707963267948966192 48>

863:
old  <	; call function noellipse-noellipse math_test_1>
new  <	; Call math_test_1 24 0>

870:
old  <	; post call>
new  <	; PostCall 24>

873:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

876:
old  <	; push float float8$minus1.5707963267948966192#>
new  <	; PushFloat -1.5707963267948966192>

880:
old  <	; parameter float8$minus1.5707963267948966192#, offset 48>
new  <	; Parameter double -1.5707963267948966192 48>

884:
old  <	; call function noellipse-noellipse math_test_1>
new  <	; Call math_test_1 24 0>

891:
old  <	; post call>
new  <	; PostCall 24>

894:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

897:
old  <	; push float float8$minus3.1415926535897932384#>
new  <	; PushFloat -3.1415926535897932384>

901:
old  <	; parameter float8$minus3.1415926535897932384#, offset 48>
new  <	; Parameter double -3.1415926535897932384 48>

905:
old  <	; call function noellipse-noellipse math_test_1>
new  <	; Call math_test_1 24 0>

912:
old  <	; post call>
new  <	; PostCall 24>

915:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

918:
old  <	; push float float8$minus6.2831853071795864768#>
new  <	; PushFloat -6.2831853071795864768>

922:
old  <	; parameter float8$minus6.2831853071795864768#, offset 48>
new  <	; Parameter double -6.2831853071795864768 48>

926:
old  <	; call function noellipse-noellipse math_test_1>
new  <	; Call math_test_1 24 0>

933:
old  <	; post call>
new  <	; PostCall 24>

936:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

939:
old  <	; push float float8$1.0#>
new  <	; PushFloat 1.0>

943:
old  <	; parameter float8$1.0#, offset 48>
new  <	; Parameter double 1.0 48>

947:
old  <	; push float float8$2.0#>
new  <	; PushFloat 2.0>

951:
old  <	; parameter float8$2.0#, offset 56>
new  <	; Parameter double 2.0 56>

955:
old  <	; call function noellipse-noellipse math_test_2>
new  <	; Call math_test_2 24 0>

962:
old  <	; post call>
new  <	; PostCall 24>

965:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

968:
old  <	; push float float8$3.0#>
new  <	; PushFloat 3.0>

972:
old  <	; parameter float8$3.0#, offset 48>
new  <	; Parameter double 3.0 48>

976:
old  <	; push float float8$4.0#>
new  <	; PushFloat 4.0>

980:
old  <	; parameter float8$4.0#, offset 56>
new  <	; Parameter double 4.0 56>

984:
old  <	; call function noellipse-noellipse math_test_2>
new  <	; Call math_test_2 24 0>

991:
old  <	; post call>
new  <	; PostCall 24>

994:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

997:
old  <	; push float float8$0#>
new  <	; PushFloat 0>

1001:
old  <	; parameter float8$0#, offset 48>
new  <	; Parameter double 0 48>

1005:
old  <	; push float float8$2.0#>
new  <	; PushFloat 2.0>

1009:
old  <	; parameter float8$2.0#, offset 56>
new  <	; Parameter double 2.0 56>

1013:
old  <	; call function noellipse-noellipse math_test_2>
new  <	; Call math_test_2 24 0>

1020:
old  <	; post call>
new  <	; PostCall 24>

1023:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1026:
old  <	; push float float8$0#>
new  <	; PushFloat 0>

1030:
old  <	; parameter float8$0#, offset 48>
new  <	; Parameter double 0 48>

1034:
old  <	; push float float8$minus2.0#>
new  <	; PushFloat -2.0>

1038:
old  <	; parameter float8$minus2.0#, offset 56>
new  <	; Parameter double -2.0 56>

1042:
old  <	; call function noellipse-noellipse math_test_2>
new  <	; Call math_test_2 24 0>

1049:
old  <	; post call>
new  <	; PostCall 24>

1052:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1055:
old  <	; push float float8$1#>
new  <	; PushFloat 1>

1059:
old  <	; parameter float8$1#, offset 48>
new  <	; Parameter double 1 48>

1063:
old  <	; push float float8$2.0#>
new  <	; PushFloat 2.0>

1067:
old  <	; parameter float8$2.0#, offset 56>
new  <	; Parameter double 2.0 56>

1071:
old  <	; call function noellipse-noellipse math_test_2>
new  <	; Call math_test_2 24 0>

1078:
old  <	; post call>
new  <	; PostCall 24>

1081:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1084:
old  <	; push float float8$1#>
new  <	; PushFloat 1>

1088:
old  <	; parameter float8$1#, offset 48>
new  <	; Parameter double 1 48>

1092:
old  <	; push float float8$minus2.0#>
new  <	; PushFloat -2.0>

1096:
old  <	; parameter float8$minus2.0#, offset 56>
new  <	; Parameter double -2.0 56>

1100:
old  <	; call function noellipse-noellipse math_test_2>
new  <	; Call math_test_2 24 0>

1107:
old  <	; post call>
new  <	; PostCall 24>

1110:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1113:
old  <	; push float float8$0#>
new  <	; PushFloat 0>

1117:
old  <	; parameter float8$0#, offset 48>
new  <	; Parameter double 0 48>

1121:
old  <	; push float float8$0#>
new  <	; PushFloat 0>

1125:
old  <	; parameter float8$0#, offset 56>
new  <	; Parameter double 0 56>

1129:
old  <	; call function noellipse-noellipse math_test_2>
new  <	; Call math_test_2 24 0>

1136:
old  <	; post call>
new  <	; PostCall 24>

1139:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1142:
old  <	; push float float8$2#>
new  <	; PushFloat 2>

1146:
old  <	; parameter float8$2#, offset 48>
new  <	; Parameter double 2 48>

1150:
old  <	; push float float8$0#>
new  <	; PushFloat 0>

1154:
old  <	; parameter float8$0#, offset 56>
new  <	; Parameter double 0 56>

1158:
old  <	; call function noellipse-noellipse math_test_2>
new  <	; Call math_test_2 24 0>

1165:
old  <	; post call>
new  <	; PostCall 24>

1168:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1171:
old  <	; push float float8$minus2#>
new  <	; PushFloat -2>

1175:
old  <	; parameter float8$minus2#, offset 48>
new  <	; Parameter double -2 48>

1179:
old  <	; push float float8$0#>
new  <	; PushFloat 0>

1183:
old  <	; parameter float8$0#, offset 56>
new  <	; Parameter double 0 56>

1187:
old  <	; call function noellipse-noellipse math_test_2>
new  <	; Call math_test_2 24 0>

1194:
old  <	; post call>
new  <	; PostCall 24>

1197:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1200:
old  <	; push float float8$minus1.0#>
new  <	; PushFloat -1.0>

1204:
old  <	; parameter float8$minus1.0#, offset 48>
new  <	; Parameter double -1.0 48>

1208:
old  <	; push float float8$minus1.0#>
new  <	; PushFloat -1.0>

1212:
old  <	; parameter float8$minus1.0#, offset 56>
new  <	; Parameter double -1.0 56>

1216:
old  <	; call function noellipse-noellipse math_test_2>
new  <	; Call math_test_2 24 0>

1223:
old  <	; post call>
new  <	; PostCall 24>

1226:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1229:
old  <	; push float float8$minus2.0#>
new  <	; PushFloat -2.0>

1233:
old  <	; parameter float8$minus2.0#, offset 48>
new  <	; Parameter double -2.0 48>

1237:
old  <	; push float float8$minus4.0#>
new  <	; PushFloat -4.0>

1241:
old  <	; parameter float8$minus4.0#, offset 56>
new  <	; Parameter double -4.0 56>

1245:
old  <	; call function noellipse-noellipse math_test_2>
new  <	; Call math_test_2 24 0>

1252:
old  <	; post call>
new  <	; PostCall 24>

1255:
old  <	; return>
new  <	; Return>

1262:
old  <	; function end main_math>
new  <	; FunctionEnd main_math>

1267:
old  <	; initializer String>
new  <	; Initializer String <%f>\n>

1273:
old  <	; initializer String>
new  <	; Initializer String   sin(%f) = %f, errno = %i <%s>, >

1279:
old  <	; initializer String>
new  <	; Initializer String   cos(%f) = %f, errno = %i <%s>, >

1285:
old  <	; initializer String>
new  <	; Initializer String   tan(%f) = %f, errno = %i <%s>, >

1291:
old  <	; initializer String>
new  <	; Initializer String   asin(%f) = %f, errno = %i <%s>, >

1297:
old  <	; initializer String>
new  <	; Initializer String   exp(%f) = %f, errno = %i <%s>, >

1303:
old  <	; initializer String>
new  <	; Initializer String   log(%f) = %f, errno = %i <%s>, >

1309:
old  <	; initializer String>
new  <	; Initializer String   log10(%f) = %f, errno = %i <%s>, >

1315:
old  <	; initializer String>
new  <	; Initializer String   sinh(%f) = %f, errno = %i <%s>, >

1321:
old  <	; initializer String>
new  <	; Initializer String   cosh(%f) = %f, errno = %i <%s>, >

1327:
old  <	; initializer String>
new  <	; Initializer String   tanh(%f) = %f, errno = %i <%s>, >

1333:
old  <	; initializer String>
new  <	; Initializer String   sqrt(%f) = %f, errno = %i <%s>, >

1339:
old  <	; initializer String>
new  <	; Initializer String   floor(%f) = %f, errno = %i <%s>, >

1345:
old  <	; initializer String>
new  <	; Initializer String   ceil(%f) = %f, errno = %i <%s>, >

1351:
old  <	; initializer String>
new  <	; Initializer String   fabs(%f) = %f, errno = %i <%s>, >

1357:
old  <	; initializer String>
new  <	; Initializer String frexp (z, j) = (%f, %i), errno = %i <%s>\n>

1363:
old  <	; initializer String>
new  <	; Initializer String Error message:>

1369:
old  <	; initializer String>
new  <	; Initializer String modf (z, w) = (%f, %f), errno = %i <%s>\n>

1375:
old  <	; initializer String>
new  <	; Initializer String \n>

1381:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1384:
old  <	; parameter string_3C25f3E0A#, offset 56>
new  <	; Parameter pointer "<%f>\n" 56>

1388:
old  <	; push float x>
new  <	; PushFloat x>

1392:
old  <	; parameter x, offset 64>
new  <	; Parameter double x 64>

1396:
old  <	; call function noellipse-ellipse printf, extra 8>
new  <	; Call printf 32 8>

1405:
old  <	; post call>
new  <	; PostCall 32>

1408:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1411:
old  <	; parameter string_2020sin2825f29203D2025f2C20errno203D2025i203C25s3E2C20#, offset 56>
new  <	; Parameter pointer "  sin(%f) = %f, errno = %i <%s>, " 56>

1415:
old  <	; push float x>
new  <	; PushFloat x>

1419:
old  <	; parameter x, offset 64>
new  <	; Parameter double x 64>

1423:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1426:
old  <	; push float x>
new  <	; PushFloat x>

1430:
old  <	; parameter x, offset 96>
new  <	; Parameter double x 96>

1434:
old  <	; call function noellipse-noellipse sin>
new  <	; Call sin 72 0>

1441:
old  <	; post call>
new  <	; PostCall 72>

1444:
old  <	; Â£temporary3321 = return_value>
new  <	; GetReturnValue Â£temporary3321>

1447:
old  <	; parameter Â£temporary3321, offset 72>
new  <	; Parameter double Â£temporary3321 72>

1451:
old  <	; parameter errno, offset 80>
new  <	; Parameter signedint errno 80>

1456:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1459:
old  <	; parameter errno, offset 108>
new  <	; Parameter signedint errno 108>

1464:
old  <	; call function noellipse-noellipse strerror>
new  <	; Call strerror 84 0>

1471:
old  <	; post call>
new  <	; PostCall 84>

1474:
old  <	; Â£temporary3322 = return_value>
new  <	; GetReturnValue Â£temporary3322>

1477:
old  <	; parameter Â£temporary3322, offset 84>
new  <	; Parameter pointer Â£temporary3322 84>

1481:
old  <	; call function noellipse-ellipse printf, extra 28>
new  <	; Call printf 32 28>

1490:
old  <	; post call>
new  <	; PostCall 32>

1493:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1496:
old  <	; parameter string_Error20message#, offset 56>
new  <	; Parameter pointer "Error message" 56>

1500:
old  <	; call function noellipse-noellipse perror>
new  <	; Call perror 32 0>

1507:
old  <	; post call>
new  <	; PostCall 32>

1510:
old  <	; errno = int4$0#>
new  <	; Assign errno 0>

1514:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1517:
old  <	; parameter string_2020cos2825f29203D2025f2C20errno203D2025i203C25s3E2C20#, offset 56>
new  <	; Parameter pointer "  cos(%f) = %f, errno = %i <%s>, " 56>

1521:
old  <	; push float x>
new  <	; PushFloat x>

1525:
old  <	; parameter x, offset 64>
new  <	; Parameter double x 64>

1529:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1532:
old  <	; push float x>
new  <	; PushFloat x>

1536:
old  <	; parameter x, offset 96>
new  <	; Parameter double x 96>

1540:
old  <	; call function noellipse-noellipse cos>
new  <	; Call cos 72 0>

1547:
old  <	; post call>
new  <	; PostCall 72>

1550:
old  <	; Â£temporary3325 = return_value>
new  <	; GetReturnValue Â£temporary3325>

1553:
old  <	; parameter Â£temporary3325, offset 72>
new  <	; Parameter double Â£temporary3325 72>

1557:
old  <	; parameter errno, offset 80>
new  <	; Parameter signedint errno 80>

1562:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1565:
old  <	; parameter errno, offset 108>
new  <	; Parameter signedint errno 108>

1570:
old  <	; call function noellipse-noellipse strerror>
new  <	; Call strerror 84 0>

1577:
old  <	; post call>
new  <	; PostCall 84>

1580:
old  <	; Â£temporary3326 = return_value>
new  <	; GetReturnValue Â£temporary3326>

1583:
old  <	; parameter Â£temporary3326, offset 84>
new  <	; Parameter pointer Â£temporary3326 84>

1587:
old  <	; call function noellipse-ellipse printf, extra 28>
new  <	; Call printf 32 28>

1596:
old  <	; post call>
new  <	; PostCall 32>

1599:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1602:
old  <	; parameter string_Error20message#, offset 56>
new  <	; Parameter pointer "Error message" 56>

1606:
old  <	; call function noellipse-noellipse perror>
new  <	; Call perror 32 0>

1613:
old  <	; post call>
new  <	; PostCall 32>

1616:
old  <	; errno = int4$0#>
new  <	; Assign errno 0>

1620:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1623:
old  <	; parameter string_2020tan2825f29203D2025f2C20errno203D2025i203C25s3E2C20#, offset 56>
new  <	; Parameter pointer "  tan(%f) = %f, errno = %i <%s>, " 56>

1627:
old  <	; push float x>
new  <	; PushFloat x>

1631:
old  <	; parameter x, offset 64>
new  <	; Parameter double x 64>

1635:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1638:
old  <	; push float x>
new  <	; PushFloat x>

1642:
old  <	; parameter x, offset 96>
new  <	; Parameter double x 96>

1646:
old  <	; call function noellipse-noellipse tan>
new  <	; Call tan 72 0>

1653:
old  <	; post call>
new  <	; PostCall 72>

1656:
old  <	; Â£temporary3329 = return_value>
new  <	; GetReturnValue Â£temporary3329>

1659:
old  <	; parameter Â£temporary3329, offset 72>
new  <	; Parameter double Â£temporary3329 72>

1663:
old  <	; parameter errno, offset 80>
new  <	; Parameter signedint errno 80>

1668:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1671:
old  <	; parameter errno, offset 108>
new  <	; Parameter signedint errno 108>

1676:
old  <	; call function noellipse-noellipse strerror>
new  <	; Call strerror 84 0>

1683:
old  <	; post call>
new  <	; PostCall 84>

1686:
old  <	; Â£temporary3330 = return_value>
new  <	; GetReturnValue Â£temporary3330>

1689:
old  <	; parameter Â£temporary3330, offset 84>
new  <	; Parameter pointer Â£temporary3330 84>

1693:
old  <	; call function noellipse-ellipse printf, extra 28>
new  <	; Call printf 32 28>

1702:
old  <	; post call>
new  <	; PostCall 32>

1705:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1708:
old  <	; parameter string_Error20message#, offset 56>
new  <	; Parameter pointer "Error message" 56>

1712:
old  <	; call function noellipse-noellipse perror>
new  <	; Call perror 32 0>

1719:
old  <	; post call>
new  <	; PostCall 32>

1722:
old  <	; errno = int4$0#>
new  <	; Assign errno 0>

1726:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1729:
old  <	; parameter string_2020asin2825f29203D2025f2C20errno203D2025i203C25s3E2C20#, offset 56>
new  <	; Parameter pointer "  asin(%f) = %f, errno = %i <%s>, " 56>

1733:
old  <	; push float x>
new  <	; PushFloat x>

1737:
old  <	; parameter x, offset 64>
new  <	; Parameter double x 64>

1741:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1744:
old  <	; push float x>
new  <	; PushFloat x>

1748:
old  <	; parameter x, offset 96>
new  <	; Parameter double x 96>

1752:
old  <	; call function noellipse-noellipse asin>
new  <	; Call asin 72 0>

1759:
old  <	; post call>
new  <	; PostCall 72>

1762:
old  <	; Â£temporary3333 = return_value>
new  <	; GetReturnValue Â£temporary3333>

1765:
old  <	; parameter Â£temporary3333, offset 72>
new  <	; Parameter double Â£temporary3333 72>

1769:
old  <	; parameter errno, offset 80>
new  <	; Parameter signedint errno 80>

1774:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1777:
old  <	; parameter errno, offset 108>
new  <	; Parameter signedint errno 108>

1782:
old  <	; call function noellipse-noellipse strerror>
new  <	; Call strerror 84 0>

1789:
old  <	; post call>
new  <	; PostCall 84>

1792:
old  <	; Â£temporary3334 = return_value>
new  <	; GetReturnValue Â£temporary3334>

1795:
old  <	; parameter Â£temporary3334, offset 84>
new  <	; Parameter pointer Â£temporary3334 84>

1799:
old  <	; call function noellipse-ellipse printf, extra 28>
new  <	; Call printf 32 28>

1808:
old  <	; post call>
new  <	; PostCall 32>

1811:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1814:
old  <	; parameter string_Error20message#, offset 56>
new  <	; Parameter pointer "Error message" 56>

1818:
old  <	; call function noellipse-noellipse perror>
new  <	; Call perror 32 0>

1825:
old  <	; post call>
new  <	; PostCall 32>

1828:
old  <	; errno = int4$0#>
new  <	; Assign errno 0>

1832:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1835:
old  <	; parameter string_2020acos2825f29203D2025f2C20errno203D2025i203C25s3E2C20#, offset 56>
new  <	; Parameter pointer "  acos(%f) = %f, errno = %i <%s>, " 56>

1839:
old  <	; push float x>
new  <	; PushFloat x>

1843:
old  <	; parameter x, offset 64>
new  <	; Parameter double x 64>

1847:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1850:
old  <	; push float x>
new  <	; PushFloat x>

1854:
old  <	; parameter x, offset 96>
new  <	; Parameter double x 96>

1858:
old  <	; call function noellipse-noellipse acos>
new  <	; Call acos 72 0>

1865:
old  <	; post call>
new  <	; PostCall 72>

1868:
old  <	; Â£temporary3337 = return_value>
new  <	; GetReturnValue Â£temporary3337>

1871:
old  <	; parameter Â£temporary3337, offset 72>
new  <	; Parameter double Â£temporary3337 72>

1875:
old  <	; parameter errno, offset 80>
new  <	; Parameter signedint errno 80>

1880:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1883:
old  <	; parameter errno, offset 108>
new  <	; Parameter signedint errno 108>

1888:
old  <	; call function noellipse-noellipse strerror>
new  <	; Call strerror 84 0>

1895:
old  <	; post call>
new  <	; PostCall 84>

1898:
old  <	; Â£temporary3338 = return_value>
new  <	; GetReturnValue Â£temporary3338>

1901:
old  <	; parameter Â£temporary3338, offset 84>
new  <	; Parameter pointer Â£temporary3338 84>

1905:
old  <	; call function noellipse-ellipse printf, extra 28>
new  <	; Call printf 32 28>

1914:
old  <	; post call>
new  <	; PostCall 32>

1917:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1920:
old  <	; parameter string_Error20message#, offset 56>
new  <	; Parameter pointer "Error message" 56>

1924:
old  <	; call function noellipse-noellipse perror>
new  <	; Call perror 32 0>

1931:
old  <	; post call>
new  <	; PostCall 32>

1934:
old  <	; errno = int4$0#>
new  <	; Assign errno 0>

1938:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1941:
old  <	; parameter string_2020atan2825f29203D2025f2C20errno203D2025i203C25s3E2C20#, offset 56>
new  <	; Parameter pointer "  atan(%f) = %f, errno = %i <%s>, " 56>

1945:
old  <	; push float x>
new  <	; PushFloat x>

1949:
old  <	; parameter x, offset 64>
new  <	; Parameter double x 64>

1953:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1956:
old  <	; push float x>
new  <	; PushFloat x>

1960:
old  <	; parameter x, offset 96>
new  <	; Parameter double x 96>

1964:
old  <	; call function noellipse-noellipse atan>
new  <	; Call atan 72 0>

1971:
old  <	; post call>
new  <	; PostCall 72>

1974:
old  <	; Â£temporary3341 = return_value>
new  <	; GetReturnValue Â£temporary3341>

1977:
old  <	; parameter Â£temporary3341, offset 72>
new  <	; Parameter double Â£temporary3341 72>

1981:
old  <	; parameter errno, offset 80>
new  <	; Parameter signedint errno 80>

1986:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1989:
old  <	; parameter errno, offset 108>
new  <	; Parameter signedint errno 108>

1994:
old  <	; call function noellipse-noellipse strerror>
new  <	; Call strerror 84 0>

2001:
old  <	; post call>
new  <	; PostCall 84>

2004:
old  <	; Â£temporary3342 = return_value>
new  <	; GetReturnValue Â£temporary3342>

2007:
old  <	; parameter Â£temporary3342, offset 84>
new  <	; Parameter pointer Â£temporary3342 84>

2011:
old  <	; call function noellipse-ellipse printf, extra 28>
new  <	; Call printf 32 28>

2020:
old  <	; post call>
new  <	; PostCall 32>

2023:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2026:
old  <	; parameter string_Error20message#, offset 56>
new  <	; Parameter pointer "Error message" 56>

2030:
old  <	; call function noellipse-noellipse perror>
new  <	; Call perror 32 0>

2037:
old  <	; post call>
new  <	; PostCall 32>

2040:
old  <	; errno = int4$0#>
new  <	; Assign errno 0>

2044:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2047:
old  <	; parameter string_2020exp2825f29203D2025f2C20errno203D2025i203C25s3E2C20#, offset 56>
new  <	; Parameter pointer "  exp(%f) = %f, errno = %i <%s>, " 56>

2051:
old  <	; push float x>
new  <	; PushFloat x>

2055:
old  <	; parameter x, offset 64>
new  <	; Parameter double x 64>

2059:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2062:
old  <	; push float x>
new  <	; PushFloat x>

2066:
old  <	; parameter x, offset 96>
new  <	; Parameter double x 96>

2070:
old  <	; call function noellipse-noellipse exp>
new  <	; Call exp 72 0>

2077:
old  <	; post call>
new  <	; PostCall 72>

2080:
old  <	; Â£temporary3345 = return_value>
new  <	; GetReturnValue Â£temporary3345>

2083:
old  <	; parameter Â£temporary3345, offset 72>
new  <	; Parameter double Â£temporary3345 72>

2087:
old  <	; parameter errno, offset 80>
new  <	; Parameter signedint errno 80>

2092:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2095:
old  <	; parameter errno, offset 108>
new  <	; Parameter signedint errno 108>

2100:
old  <	; call function noellipse-noellipse strerror>
new  <	; Call strerror 84 0>

2107:
old  <	; post call>
new  <	; PostCall 84>

2110:
old  <	; Â£temporary3346 = return_value>
new  <	; GetReturnValue Â£temporary3346>

2113:
old  <	; parameter Â£temporary3346, offset 84>
new  <	; Parameter pointer Â£temporary3346 84>

2117:
old  <	; call function noellipse-ellipse printf, extra 28>
new  <	; Call printf 32 28>

2126:
old  <	; post call>
new  <	; PostCall 32>

2129:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2132:
old  <	; parameter string_Error20message#, offset 56>
new  <	; Parameter pointer "Error message" 56>

2136:
old  <	; call function noellipse-noellipse perror>
new  <	; Call perror 32 0>

2143:
old  <	; post call>
new  <	; PostCall 32>

2146:
old  <	; errno = int4$0#>
new  <	; Assign errno 0>

2150:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2153:
old  <	; parameter string_2020log2825f29203D2025f2C20errno203D2025i203C25s3E2C20#, offset 56>
new  <	; Parameter pointer "  log(%f) = %f, errno = %i <%s>, " 56>

2157:
old  <	; push float x>
new  <	; PushFloat x>

2161:
old  <	; parameter x, offset 64>
new  <	; Parameter double x 64>

2165:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2168:
old  <	; push float x>
new  <	; PushFloat x>

2172:
old  <	; parameter x, offset 96>
new  <	; Parameter double x 96>

2176:
old  <	; call function noellipse-noellipse log>
new  <	; Call log 72 0>

2183:
old  <	; post call>
new  <	; PostCall 72>

2186:
old  <	; Â£temporary3349 = return_value>
new  <	; GetReturnValue Â£temporary3349>

2189:
old  <	; parameter Â£temporary3349, offset 72>
new  <	; Parameter double Â£temporary3349 72>

2193:
old  <	; parameter errno, offset 80>
new  <	; Parameter signedint errno 80>

2198:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2201:
old  <	; parameter errno, offset 108>
new  <	; Parameter signedint errno 108>

2206:
old  <	; call function noellipse-noellipse strerror>
new  <	; Call strerror 84 0>

2213:
old  <	; post call>
new  <	; PostCall 84>

2216:
old  <	; Â£temporary3350 = return_value>
new  <	; GetReturnValue Â£temporary3350>

2219:
old  <	; parameter Â£temporary3350, offset 84>
new  <	; Parameter pointer Â£temporary3350 84>

2223:
old  <	; call function noellipse-ellipse printf, extra 28>
new  <	; Call printf 32 28>

2232:
old  <	; post call>
new  <	; PostCall 32>

2235:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2238:
old  <	; parameter string_Error20message#, offset 56>
new  <	; Parameter pointer "Error message" 56>

2242:
old  <	; call function noellipse-noellipse perror>
new  <	; Call perror 32 0>

2249:
old  <	; post call>
new  <	; PostCall 32>

2252:
old  <	; errno = int4$0#>
new  <	; Assign errno 0>

2256:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2259:
old  <	; parameter string_2020log102825f29203D2025f2C20errno203D2025i203C25s3E2C20#, offset 56>
new  <	; Parameter pointer "  log10(%f) = %f, errno = %i <%s>, " 56>

2263:
old  <	; push float x>
new  <	; PushFloat x>

2267:
old  <	; parameter x, offset 64>
new  <	; Parameter double x 64>

2271:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2274:
old  <	; push float x>
new  <	; PushFloat x>

2278:
old  <	; parameter x, offset 96>
new  <	; Parameter double x 96>

2282:
old  <	; call function noellipse-noellipse log10>
new  <	; Call log10 72 0>

2289:
old  <	; post call>
new  <	; PostCall 72>

2292:
old  <	; Â£temporary3353 = return_value>
new  <	; GetReturnValue Â£temporary3353>

2295:
old  <	; parameter Â£temporary3353, offset 72>
new  <	; Parameter double Â£temporary3353 72>

2299:
old  <	; parameter errno, offset 80>
new  <	; Parameter signedint errno 80>

2304:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2307:
old  <	; parameter errno, offset 108>
new  <	; Parameter signedint errno 108>

2312:
old  <	; call function noellipse-noellipse strerror>
new  <	; Call strerror 84 0>

2319:
old  <	; post call>
new  <	; PostCall 84>

2322:
old  <	; Â£temporary3354 = return_value>
new  <	; GetReturnValue Â£temporary3354>

2325:
old  <	; parameter Â£temporary3354, offset 84>
new  <	; Parameter pointer Â£temporary3354 84>

2329:
old  <	; call function noellipse-ellipse printf, extra 28>
new  <	; Call printf 32 28>

2338:
old  <	; post call>
new  <	; PostCall 32>

2341:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2344:
old  <	; parameter string_Error20message#, offset 56>
new  <	; Parameter pointer "Error message" 56>

2348:
old  <	; call function noellipse-noellipse perror>
new  <	; Call perror 32 0>

2355:
old  <	; post call>
new  <	; PostCall 32>

2358:
old  <	; errno = int4$0#>
new  <	; Assign errno 0>

2362:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2365:
old  <	; parameter string_2020sinh2825f29203D2025f2C20errno203D2025i203C25s3E2C20#, offset 56>
new  <	; Parameter pointer "  sinh(%f) = %f, errno = %i <%s>, " 56>

2369:
old  <	; push float x>
new  <	; PushFloat x>

2373:
old  <	; parameter x, offset 64>
new  <	; Parameter double x 64>

2377:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2380:
old  <	; push float x>
new  <	; PushFloat x>

2384:
old  <	; parameter x, offset 96>
new  <	; Parameter double x 96>

2388:
old  <	; call function noellipse-noellipse sinh>
new  <	; Call sinh 72 0>

2395:
old  <	; post call>
new  <	; PostCall 72>

2398:
old  <	; Â£temporary3357 = return_value>
new  <	; GetReturnValue Â£temporary3357>

2401:
old  <	; parameter Â£temporary3357, offset 72>
new  <	; Parameter double Â£temporary3357 72>

2405:
old  <	; parameter errno, offset 80>
new  <	; Parameter signedint errno 80>

2410:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2413:
old  <	; parameter errno, offset 108>
new  <	; Parameter signedint errno 108>

2418:
old  <	; call function noellipse-noellipse strerror>
new  <	; Call strerror 84 0>

2425:
old  <	; post call>
new  <	; PostCall 84>

2428:
old  <	; Â£temporary3358 = return_value>
new  <	; GetReturnValue Â£temporary3358>

2431:
old  <	; parameter Â£temporary3358, offset 84>
new  <	; Parameter pointer Â£temporary3358 84>

2435:
old  <	; call function noellipse-ellipse printf, extra 28>
new  <	; Call printf 32 28>

2444:
old  <	; post call>
new  <	; PostCall 32>

2447:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2450:
old  <	; parameter string_Error20message#, offset 56>
new  <	; Parameter pointer "Error message" 56>

2454:
old  <	; call function noellipse-noellipse perror>
new  <	; Call perror 32 0>

2461:
old  <	; post call>
new  <	; PostCall 32>

2464:
old  <	; errno = int4$0#>
new  <	; Assign errno 0>

2468:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2471:
old  <	; parameter string_2020cosh2825f29203D2025f2C20errno203D2025i203C25s3E2C20#, offset 56>
new  <	; Parameter pointer "  cosh(%f) = %f, errno = %i <%s>, " 56>

2475:
old  <	; push float x>
new  <	; PushFloat x>

2479:
old  <	; parameter x, offset 64>
new  <	; Parameter double x 64>

2483:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2486:
old  <	; push float x>
new  <	; PushFloat x>

2490:
old  <	; parameter x, offset 96>
new  <	; Parameter double x 96>

2494:
old  <	; call function noellipse-noellipse cosh>
new  <	; Call cosh 72 0>

2501:
old  <	; post call>
new  <	; PostCall 72>

2504:
old  <	; Â£temporary3361 = return_value>
new  <	; GetReturnValue Â£temporary3361>

2507:
old  <	; parameter Â£temporary3361, offset 72>
new  <	; Parameter double Â£temporary3361 72>

2511:
old  <	; parameter errno, offset 80>
new  <	; Parameter signedint errno 80>

2516:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2519:
old  <	; parameter errno, offset 108>
new  <	; Parameter signedint errno 108>

2524:
old  <	; call function noellipse-noellipse strerror>
new  <	; Call strerror 84 0>

2531:
old  <	; post call>
new  <	; PostCall 84>

2534:
old  <	; Â£temporary3362 = return_value>
new  <	; GetReturnValue Â£temporary3362>

2537:
old  <	; parameter Â£temporary3362, offset 84>
new  <	; Parameter pointer Â£temporary3362 84>

2541:
old  <	; call function noellipse-ellipse printf, extra 28>
new  <	; Call printf 32 28>

2550:
old  <	; post call>
new  <	; PostCall 32>

2553:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2556:
old  <	; parameter string_Error20message#, offset 56>
new  <	; Parameter pointer "Error message" 56>

2560:
old  <	; call function noellipse-noellipse perror>
new  <	; Call perror 32 0>

2567:
old  <	; post call>
new  <	; PostCall 32>

2570:
old  <	; errno = int4$0#>
new  <	; Assign errno 0>

2574:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2577:
old  <	; parameter string_2020tanh2825f29203D2025f2C20errno203D2025i203C25s3E2C20#, offset 56>
new  <	; Parameter pointer "  tanh(%f) = %f, errno = %i <%s>, " 56>

2581:
old  <	; push float x>
new  <	; PushFloat x>

2585:
old  <	; parameter x, offset 64>
new  <	; Parameter double x 64>

2589:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2592:
old  <	; push float x>
new  <	; PushFloat x>

2596:
old  <	; parameter x, offset 96>
new  <	; Parameter double x 96>

2600:
old  <	; call function noellipse-noellipse tanh>
new  <	; Call tanh 72 0>

2607:
old  <	; post call>
new  <	; PostCall 72>

2610:
old  <	; Â£temporary3365 = return_value>
new  <	; GetReturnValue Â£temporary3365>

2613:
old  <	; parameter Â£temporary3365, offset 72>
new  <	; Parameter double Â£temporary3365 72>

2617:
old  <	; parameter errno, offset 80>
new  <	; Parameter signedint errno 80>

2622:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2625:
old  <	; parameter errno, offset 108>
new  <	; Parameter signedint errno 108>

2630:
old  <	; call function noellipse-noellipse strerror>
new  <	; Call strerror 84 0>

2637:
old  <	; post call>
new  <	; PostCall 84>

2640:
old  <	; Â£temporary3366 = return_value>
new  <	; GetReturnValue Â£temporary3366>

2643:
old  <	; parameter Â£temporary3366, offset 84>
new  <	; Parameter pointer Â£temporary3366 84>

2647:
old  <	; call function noellipse-ellipse printf, extra 28>
new  <	; Call printf 32 28>

2656:
old  <	; post call>
new  <	; PostCall 32>

2659:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2662:
old  <	; parameter string_Error20message#, offset 56>
new  <	; Parameter pointer "Error message" 56>

2666:
old  <	; call function noellipse-noellipse perror>
new  <	; Call perror 32 0>

2673:
old  <	; post call>
new  <	; PostCall 32>

2676:
old  <	; errno = int4$0#>
new  <	; Assign errno 0>

2680:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2683:
old  <	; parameter string_2020sqrt2825f29203D2025f2C20errno203D2025i203C25s3E2C20#, offset 56>
new  <	; Parameter pointer "  sqrt(%f) = %f, errno = %i <%s>, " 56>

2687:
old  <	; push float x>
new  <	; PushFloat x>

2691:
old  <	; parameter x, offset 64>
new  <	; Parameter double x 64>

2695:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2698:
old  <	; push float x>
new  <	; PushFloat x>

2702:
old  <	; parameter x, offset 96>
new  <	; Parameter double x 96>

2706:
old  <	; call function noellipse-noellipse sqrt>
new  <	; Call sqrt 72 0>

2713:
old  <	; post call>
new  <	; PostCall 72>

2716:
old  <	; Â£temporary3369 = return_value>
new  <	; GetReturnValue Â£temporary3369>

2719:
old  <	; parameter Â£temporary3369, offset 72>
new  <	; Parameter double Â£temporary3369 72>

2723:
old  <	; parameter errno, offset 80>
new  <	; Parameter signedint errno 80>

2728:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2731:
old  <	; parameter errno, offset 108>
new  <	; Parameter signedint errno 108>

2736:
old  <	; call function noellipse-noellipse strerror>
new  <	; Call strerror 84 0>

2743:
old  <	; post call>
new  <	; PostCall 84>

2746:
old  <	; Â£temporary3370 = return_value>
new  <	; GetReturnValue Â£temporary3370>

2749:
old  <	; parameter Â£temporary3370, offset 84>
new  <	; Parameter pointer Â£temporary3370 84>

2753:
old  <	; call function noellipse-ellipse printf, extra 28>
new  <	; Call printf 32 28>

2762:
old  <	; post call>
new  <	; PostCall 32>

2765:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2768:
old  <	; parameter string_Error20message#, offset 56>
new  <	; Parameter pointer "Error message" 56>

2772:
old  <	; call function noellipse-noellipse perror>
new  <	; Call perror 32 0>

2779:
old  <	; post call>
new  <	; PostCall 32>

2782:
old  <	; errno = int4$0#>
new  <	; Assign errno 0>

2786:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2789:
old  <	; parameter string_2020floor2825f29203D2025f2C20errno203D2025i203C25s3E2C20#, offset 56>
new  <	; Parameter pointer "  floor(%f) = %f, errno = %i <%s>, " 56>

2793:
old  <	; push float x>
new  <	; PushFloat x>

2797:
old  <	; parameter x, offset 64>
new  <	; Parameter double x 64>

2801:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2804:
old  <	; push float x>
new  <	; PushFloat x>

2808:
old  <	; parameter x, offset 96>
new  <	; Parameter double x 96>

2812:
old  <	; call function noellipse-noellipse floor>
new  <	; Call floor 72 0>

2819:
old  <	; post call>
new  <	; PostCall 72>

2822:
old  <	; Â£temporary3373 = return_value>
new  <	; GetReturnValue Â£temporary3373>

2825:
old  <	; parameter Â£temporary3373, offset 72>
new  <	; Parameter double Â£temporary3373 72>

2829:
old  <	; parameter errno, offset 80>
new  <	; Parameter signedint errno 80>

2834:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2837:
old  <	; parameter errno, offset 108>
new  <	; Parameter signedint errno 108>

2842:
old  <	; call function noellipse-noellipse strerror>
new  <	; Call strerror 84 0>

2849:
old  <	; post call>
new  <	; PostCall 84>

2852:
old  <	; Â£temporary3374 = return_value>
new  <	; GetReturnValue Â£temporary3374>

2855:
old  <	; parameter Â£temporary3374, offset 84>
new  <	; Parameter pointer Â£temporary3374 84>

2859:
old  <	; call function noellipse-ellipse printf, extra 28>
new  <	; Call printf 32 28>

2868:
old  <	; post call>
new  <	; PostCall 32>

2871:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2874:
old  <	; parameter string_Error20message#, offset 56>
new  <	; Parameter pointer "Error message" 56>

2878:
old  <	; call function noellipse-noellipse perror>
new  <	; Call perror 32 0>

2885:
old  <	; post call>
new  <	; PostCall 32>

2888:
old  <	; errno = int4$0#>
new  <	; Assign errno 0>

2892:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2895:
old  <	; parameter string_2020ceil2825f29203D2025f2C20errno203D2025i203C25s3E2C20#, offset 56>
new  <	; Parameter pointer "  ceil(%f) = %f, errno = %i <%s>, " 56>

2899:
old  <	; push float x>
new  <	; PushFloat x>

2903:
old  <	; parameter x, offset 64>
new  <	; Parameter double x 64>

2907:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2910:
old  <	; push float x>
new  <	; PushFloat x>

2914:
old  <	; parameter x, offset 96>
new  <	; Parameter double x 96>

2918:
old  <	; call function noellipse-noellipse ceil>
new  <	; Call ceil 72 0>

2925:
old  <	; post call>
new  <	; PostCall 72>

2928:
old  <	; Â£temporary3377 = return_value>
new  <	; GetReturnValue Â£temporary3377>

2931:
old  <	; parameter Â£temporary3377, offset 72>
new  <	; Parameter double Â£temporary3377 72>

2935:
old  <	; parameter errno, offset 80>
new  <	; Parameter signedint errno 80>

2940:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2943:
old  <	; parameter errno, offset 108>
new  <	; Parameter signedint errno 108>

2948:
old  <	; call function noellipse-noellipse strerror>
new  <	; Call strerror 84 0>

2955:
old  <	; post call>
new  <	; PostCall 84>

2958:
old  <	; Â£temporary3378 = return_value>
new  <	; GetReturnValue Â£temporary3378>

2961:
old  <	; parameter Â£temporary3378, offset 84>
new  <	; Parameter pointer Â£temporary3378 84>

2965:
old  <	; call function noellipse-ellipse printf, extra 28>
new  <	; Call printf 32 28>

2974:
old  <	; post call>
new  <	; PostCall 32>

2977:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2980:
old  <	; parameter string_Error20message#, offset 56>
new  <	; Parameter pointer "Error message" 56>

2984:
old  <	; call function noellipse-noellipse perror>
new  <	; Call perror 32 0>

2991:
old  <	; post call>
new  <	; PostCall 32>

2994:
old  <	; errno = int4$0#>
new  <	; Assign errno 0>

2998:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3001:
old  <	; parameter string_2020fabs2825f29203D2025f2C20errno203D2025i203C25s3E2C20#, offset 56>
new  <	; Parameter pointer "  fabs(%f) = %f, errno = %i <%s>, " 56>

3005:
old  <	; push float x>
new  <	; PushFloat x>

3009:
old  <	; parameter x, offset 64>
new  <	; Parameter double x 64>

3013:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3016:
old  <	; push float x>
new  <	; PushFloat x>

3020:
old  <	; parameter x, offset 96>
new  <	; Parameter double x 96>

3024:
old  <	; call function noellipse-noellipse fabs>
new  <	; Call fabs 72 0>

3031:
old  <	; post call>
new  <	; PostCall 72>

3034:
old  <	; Â£temporary3381 = return_value>
new  <	; GetReturnValue Â£temporary3381>

3037:
old  <	; parameter Â£temporary3381, offset 72>
new  <	; Parameter double Â£temporary3381 72>

3041:
old  <	; parameter errno, offset 80>
new  <	; Parameter signedint errno 80>

3046:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3049:
old  <	; parameter errno, offset 108>
new  <	; Parameter signedint errno 108>

3054:
old  <	; call function noellipse-noellipse strerror>
new  <	; Call strerror 84 0>

3061:
old  <	; post call>
new  <	; PostCall 84>

3064:
old  <	; Â£temporary3382 = return_value>
new  <	; GetReturnValue Â£temporary3382>

3067:
old  <	; parameter Â£temporary3382, offset 84>
new  <	; Parameter pointer Â£temporary3382 84>

3071:
old  <	; call function noellipse-ellipse printf, extra 28>
new  <	; Call printf 32 28>

3080:
old  <	; post call>
new  <	; PostCall 32>

3083:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3086:
old  <	; parameter string_Error20message#, offset 56>
new  <	; Parameter pointer "Error message" 56>

3090:
old  <	; call function noellipse-noellipse perror>
new  <	; Call perror 32 0>

3097:
old  <	; post call>
new  <	; PostCall 32>

3100:
old  <	; errno = int4$0#>
new  <	; Assign errno 0>

3104:
old  <	; j = int4$0#>
new  <	; Assign j 0>

3108:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3111:
old  <	; push float x>
new  <	; PushFloat x>

3115:
old  <	; parameter x, offset 60>
new  <	; Parameter double x 60>

3119:
old  <	; Â£temporary3385 = &j>
new  <	; Address Â£temporary3385 j>

3124:
old  <	; parameter Â£temporary3385, offset 68>
new  <	; Parameter pointer Â£temporary3385 68>

3128:
old  <	; call function noellipse-noellipse frexp>
new  <	; Call frexp 36 0>

3135:
old  <	; post call>
new  <	; PostCall 36>

3138:
old  <	; Â£temporary3386 = return_value>
new  <	; GetReturnValue Â£temporary3386>

3141:
old  <	; pop float z>
new  <	; PopFloat z>

3145:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 44 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3148:
old  <	; parameter string_frexp2028z2C20j29203D202825f2C2025i292C20errno203D2025i203C25s3E0A#, offset 68>
new  <	; Parameter pointer "frexp (z, j) = (%f, %i), errno = %i <%s>\n" 68>

3152:
old  <	; push float z>
new  <	; PushFloat z>

3156:
old  <	; parameter z, offset 76>
new  <	; Parameter double z 76>

3160:
old  <	; parameter j, offset 84>
new  <	; Parameter signedint j 84>

3165:
old  <	; parameter errno, offset 88>
new  <	; Parameter signedint errno 88>

3170:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 44 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3173:
old  <	; parameter errno, offset 116>
new  <	; Parameter signedint errno 116>

3178:
old  <	; call function noellipse-noellipse strerror>
new  <	; Call strerror 92 0>

3185:
old  <	; post call>
new  <	; PostCall 92>

3188:
old  <	; Â£temporary3387 = return_value>
new  <	; GetReturnValue Â£temporary3387>

3191:
old  <	; parameter Â£temporary3387, offset 92>
new  <	; Parameter pointer Â£temporary3387 92>

3195:
old  <	; call function noellipse-ellipse printf, extra 24>
new  <	; Call printf 44 24>

3204:
old  <	; post call>
new  <	; PostCall 44>

3207:
old  <	; if errno == int4$0# goto 436>
new  <	; Equal 436 errno 0>

3212:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 44 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3215:
old  <	; parameter string_Error20message3A#, offset 68>
new  <	; Parameter pointer "Error message:" 68>

3219:
old  <	; call function noellipse-noellipse perror>
new  <	; Call perror 44 0>

3226:
old  <	; post call>
new  <	; PostCall 44>

3229:
old  <	; errno = int4$0#>
new  <	; Assign errno 0>

3233:
old  <	; push float float8$0#>
new  <	; PushFloat 0>

3237:
old  <	; pop float w>
new  <	; PopFloat w>

3241:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3244:
old  <	; push float x>
new  <	; PushFloat x>

3248:
old  <	; parameter x, offset 64>
new  <	; Parameter double x 64>

3252:
old  <	; Â£temporary3391 = &w>
new  <	; Address Â£temporary3391 w>

3257:
old  <	; parameter Â£temporary3391, offset 72>
new  <	; Parameter pointer Â£temporary3391 72>

3261:
old  <	; call function noellipse-noellipse modf>
new  <	; Call modf 40 0>

3268:
old  <	; post call>
new  <	; PostCall 40>

3271:
old  <	; Â£temporary3392 = return_value>
new  <	; GetReturnValue Â£temporary3392>

3274:
old  <	; pop float z>
new  <	; PopFloat z>

3278:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3281:
old  <	; parameter string_modf2028z2C20w29203D202825f2C2025f292C20errno203D2025i203C25s3E0A#, offset 72>
new  <	; Parameter pointer "modf (z, w) = (%f, %f), errno = %i <%s>\n" 72>

3285:
old  <	; push float z>
new  <	; PushFloat z>

3289:
old  <	; parameter z, offset 80>
new  <	; Parameter double z 80>

3293:
old  <	; push float w>
new  <	; PushFloat w>

3297:
old  <	; parameter w, offset 88>
new  <	; Parameter double w 88>

3301:
old  <	; parameter errno, offset 96>
new  <	; Parameter signedint errno 96>

3306:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3309:
old  <	; parameter errno, offset 124>
new  <	; Parameter signedint errno 124>

3314:
old  <	; call function noellipse-noellipse strerror>
new  <	; Call strerror 100 0>

3321:
old  <	; post call>
new  <	; PostCall 100>

3324:
old  <	; Â£temporary3393 = return_value>
new  <	; GetReturnValue Â£temporary3393>

3327:
old  <	; parameter Â£temporary3393, offset 100>
new  <	; Parameter pointer Â£temporary3393 100>

3331:
old  <	; call function noellipse-ellipse printf, extra 28>
new  <	; Call printf 48 28>

3340:
old  <	; post call>
new  <	; PostCall 48>

3343:
old  <	; if errno == int4$0# goto 468>
new  <	; Equal 468 errno 0>

3348:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3351:
old  <	; parameter string_Error20message3A#, offset 72>
new  <	; Parameter pointer "Error message:" 72>

3355:
old  <	; call function noellipse-noellipse perror>
new  <	; Call perror 48 0>

3362:
old  <	; post call>
new  <	; PostCall 48>

3365:
old  <	; errno = int4$0#>
new  <	; Assign errno 0>

3369:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3372:
old  <	; parameter string_0A#, offset 56>
new  <	; Parameter pointer "\n" 56>

3376:
old  <	; call function noellipse-ellipse printf, extra 0>
new  <	; Call printf 32 0>

3384:
old  <	; post call>
new  <	; PostCall 32>

3387:
old  <	; return>
new  <	; Return>

3394:
old  <	; function end math_test_1>
new  <	; FunctionEnd math_test_1>

3399:
old  <	; initializer String>
new  <	; Initializer String fmod(%f, %f) = %f, errno = %i <%s>, >

3405:
old  <	; initializer String>
new  <	; Initializer String atan2(%f, %f) = %f, errno = %i <%s>, >

3411:
old  <	; initializer String>
new  <	; Initializer String pow(%f, %f) = %f, errno = %i <%s>, >

3417:
old  <	; initializer String>
new  <	; Initializer String ldexp(%f, %i) = %f\n\n>

3423:
old  <	; initializer zero 4>
new  <	; InitializerZero 4>

3429:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3432:
old  <	; parameter string_fmod2825f2C2025f29203D2025f2C20errno203D2025i203C25s3E2C20#, offset 64>
new  <	; Parameter pointer "fmod(%f, %f) = %f, errno = %i <%s>, " 64>

3436:
old  <	; push float x>
new  <	; PushFloat x>

3440:
old  <	; parameter x, offset 72>
new  <	; Parameter double x 72>

3444:
old  <	; push float y>
new  <	; PushFloat y>

3448:
old  <	; parameter y, offset 80>
new  <	; Parameter double y 80>

3452:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3455:
old  <	; push float x>
new  <	; PushFloat x>

3459:
old  <	; parameter x, offset 112>
new  <	; Parameter double x 112>

3463:
old  <	; push float y>
new  <	; PushFloat y>

3467:
old  <	; parameter y, offset 120>
new  <	; Parameter double y 120>

3471:
old  <	; call function noellipse-noellipse fmod>
new  <	; Call fmod 88 0>

3478:
old  <	; post call>
new  <	; PostCall 88>

3481:
old  <	; Â£temporary3454 = return_value>
new  <	; GetReturnValue Â£temporary3454>

3484:
old  <	; parameter Â£temporary3454, offset 88>
new  <	; Parameter double Â£temporary3454 88>

3488:
old  <	; parameter errno, offset 96>
new  <	; Parameter signedint errno 96>

3493:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3496:
old  <	; parameter errno, offset 124>
new  <	; Parameter signedint errno 124>

3501:
old  <	; call function noellipse-noellipse strerror>
new  <	; Call strerror 100 0>

3508:
old  <	; post call>
new  <	; PostCall 100>

3511:
old  <	; Â£temporary3455 = return_value>
new  <	; GetReturnValue Â£temporary3455>

3514:
old  <	; parameter Â£temporary3455, offset 100>
new  <	; Parameter pointer Â£temporary3455 100>

3518:
old  <	; call function noellipse-ellipse printf, extra 36>
new  <	; Call printf 40 36>

3527:
old  <	; post call>
new  <	; PostCall 40>

3530:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3533:
old  <	; parameter string_Error20message#, offset 64>
new  <	; Parameter pointer "Error message" 64>

3537:
old  <	; call function noellipse-noellipse perror>
new  <	; Call perror 40 0>

3544:
old  <	; post call>
new  <	; PostCall 40>

3547:
old  <	; errno = int4$0#>
new  <	; Assign errno 0>

3551:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3554:
old  <	; parameter string_atan22825f2C2025f29203D2025f2C20errno203D2025i203C25s3E2C20#, offset 64>
new  <	; Parameter pointer "atan2(%f, %f) = %f, errno = %i <%s>, " 64>

3558:
old  <	; push float x>
new  <	; PushFloat x>

3562:
old  <	; parameter x, offset 72>
new  <	; Parameter double x 72>

3566:
old  <	; push float y>
new  <	; PushFloat y>

3570:
old  <	; parameter y, offset 80>
new  <	; Parameter double y 80>

3574:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3577:
old  <	; push float x>
new  <	; PushFloat x>

3581:
old  <	; parameter x, offset 112>
new  <	; Parameter double x 112>

3585:
old  <	; push float y>
new  <	; PushFloat y>

3589:
old  <	; parameter y, offset 120>
new  <	; Parameter double y 120>

3593:
old  <	; call function noellipse-noellipse atan2>
new  <	; Call atan2 88 0>

3600:
old  <	; post call>
new  <	; PostCall 88>

3603:
old  <	; Â£temporary3458 = return_value>
new  <	; GetReturnValue Â£temporary3458>

3606:
old  <	; parameter Â£temporary3458, offset 88>
new  <	; Parameter double Â£temporary3458 88>

3610:
old  <	; parameter errno, offset 96>
new  <	; Parameter signedint errno 96>

3615:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3618:
old  <	; parameter errno, offset 124>
new  <	; Parameter signedint errno 124>

3623:
old  <	; call function noellipse-noellipse strerror>
new  <	; Call strerror 100 0>

3630:
old  <	; post call>
new  <	; PostCall 100>

3633:
old  <	; Â£temporary3459 = return_value>
new  <	; GetReturnValue Â£temporary3459>

3636:
old  <	; parameter Â£temporary3459, offset 100>
new  <	; Parameter pointer Â£temporary3459 100>

3640:
old  <	; call function noellipse-ellipse printf, extra 36>
new  <	; Call printf 40 36>

3649:
old  <	; post call>
new  <	; PostCall 40>

3652:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3655:
old  <	; parameter string_Error20message#, offset 64>
new  <	; Parameter pointer "Error message" 64>

3659:
old  <	; call function noellipse-noellipse perror>
new  <	; Call perror 40 0>

3666:
old  <	; post call>
new  <	; PostCall 40>

3669:
old  <	; errno = int4$0#>
new  <	; Assign errno 0>

3673:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3676:
old  <	; parameter string_pow2825f2C2025f29203D2025f2C20errno203D2025i203C25s3E2C20#, offset 64>
new  <	; Parameter pointer "pow(%f, %f) = %f, errno = %i <%s>, " 64>

3680:
old  <	; push float x>
new  <	; PushFloat x>

3684:
old  <	; parameter x, offset 72>
new  <	; Parameter double x 72>

3688:
old  <	; push float y>
new  <	; PushFloat y>

3692:
old  <	; parameter y, offset 80>
new  <	; Parameter double y 80>

3696:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3699:
old  <	; push float x>
new  <	; PushFloat x>

3703:
old  <	; parameter x, offset 112>
new  <	; Parameter double x 112>

3707:
old  <	; push float y>
new  <	; PushFloat y>

3711:
old  <	; parameter y, offset 120>
new  <	; Parameter double y 120>

3715:
old  <	; call function noellipse-noellipse pow>
new  <	; Call pow 88 0>

3722:
old  <	; post call>
new  <	; PostCall 88>

3725:
old  <	; Â£temporary3462 = return_value>
new  <	; GetReturnValue Â£temporary3462>

3728:
old  <	; parameter Â£temporary3462, offset 88>
new  <	; Parameter double Â£temporary3462 88>

3732:
old  <	; parameter errno, offset 96>
new  <	; Parameter signedint errno 96>

3737:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3740:
old  <	; parameter errno, offset 124>
new  <	; Parameter signedint errno 124>

3745:
old  <	; call function noellipse-noellipse strerror>
new  <	; Call strerror 100 0>

3752:
old  <	; post call>
new  <	; PostCall 100>

3755:
old  <	; Â£temporary3463 = return_value>
new  <	; GetReturnValue Â£temporary3463>

3758:
old  <	; parameter Â£temporary3463, offset 100>
new  <	; Parameter pointer Â£temporary3463 100>

3762:
old  <	; call function noellipse-ellipse printf, extra 36>
new  <	; Call printf 40 36>

3771:
old  <	; post call>
new  <	; PostCall 40>

3774:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3777:
old  <	; parameter string_Error20message#, offset 64>
new  <	; Parameter pointer "Error message" 64>

3781:
old  <	; call function noellipse-noellipse perror>
new  <	; Call perror 40 0>

3788:
old  <	; post call>
new  <	; PostCall 40>

3791:
old  <	; errno = int4$0#>
new  <	; Assign errno 0>

3795:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3798:
old  <	; parameter string_0A#, offset 64>
new  <	; Parameter pointer "\n" 64>

3802:
old  <	; call function noellipse-ellipse printf, extra 0>
new  <	; Call printf 40 0>

3810:
old  <	; post call>
new  <	; PostCall 40>

3813:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3816:
old  <	; parameter string_ldexp2825f2C2025i29203D2025f0A0A#, offset 64>
new  <	; Parameter pointer "ldexp(%f, %i) = %f\n\n" 64>

3820:
old  <	; push float x>
new  <	; PushFloat x>

3824:
old  <	; parameter x, offset 72>
new  <	; Parameter double x 72>

3828:
old  <	; push float y>
new  <	; PushFloat y>

3832:
old  <	; Â£temporary3467 = float_to_int y (Double -> SignedInt)>
new  <	; FloatingToIntegral Â£temporary3467 y>

3837:
old  <	; parameter Â£temporary3467, offset 80>
new  <	; Parameter signedint Â£temporary3467 80>

3841:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3844:
old  <	; push float x>
new  <	; PushFloat x>

3848:
old  <	; parameter x, offset 108>
new  <	; Parameter double x 108>

3852:
old  <	; push float y>
new  <	; PushFloat y>

3856:
old  <	; Â£temporary3468 = float_to_int y (Double -> SignedInt)>
new  <	; FloatingToIntegral Â£temporary3468 y>

3861:
old  <	; parameter Â£temporary3468, offset 116>
new  <	; Parameter signedint Â£temporary3468 116>

3865:
old  <	; call function noellipse-noellipse ldexp>
new  <	; Call ldexp 84 0>

3872:
old  <	; post call>
new  <	; PostCall 84>

3875:
old  <	; Â£temporary3469 = return_value>
new  <	; GetReturnValue Â£temporary3469>

3878:
old  <	; parameter Â£temporary3469, offset 84>
new  <	; Parameter double Â£temporary3469 84>

3882:
old  <	; call function noellipse-ellipse printf, extra 20>
new  <	; Call printf 40 20>

3891:
old  <	; post call>
new  <	; PostCall 40>

3894:
old  <	; return>
new  <	; Return>

3901:
old  <	; function end math_test_2>
new  <	; FunctionEnd math_test_2>

35:
old  <	; initializer String>
new  <	; Initializer String r>

41:
old  <	; initializer String>
new  <	; Initializer String Assertion failed: "%s" in file %s at line %i\n>

47:
old  <	; initializer String>
new  <	; Initializer String inFilePtrPtr != NULL>

53:
old  <	; initializer String>
new  <	; Initializer String C:\Users\Stefan\Documents\vagrant\homestead\code\code\FileTest.c>

59:
old  <	; initializer String>
new  <	; Initializer String w>

65:
old  <	; initializer String>
new  <	; Initializer String outFilePtrPtr != NULL>

71:
old  <	; initializer String>
new  <	; Initializer String %i>

77:
old  <	; initializer String>
new  <	; Initializer String %lf>

83:
old  <	; initializer String>
new  <	; Initializer String %f\n>

89:
old  <	; initializer String>
new  <	; Initializer String X>

95:
old  <	; initializer String>
new  <	; Initializer String Y>

101:
old  <	; initializer String>
new  <	; Initializer String "%s" has been renamed to "%s".\n>

107:
old  <	; initializer String>
new  <	; Initializer String Error %i: %s.\n>

113:
old  <	; initializer String>
new  <	; Initializer String Z>

119:
old  <	; initializer String>
new  <	; Initializer String "%s" has been removed.\n>

125:
old  <	; initializer String>
new  <	; Initializer String PBook.txt>

131:
old  <	; initializer String>
new  <	; Initializer String inFilePtr != NULL>

137:
old  <	; initializer String>
new  <	; Initializer String \n%-24s %-24s\n>

143:
old  <	; initializer String>
new  <	; Initializer String Name>

149:
old  <	; initializer String>
new  <	; Initializer String Phone>

155:
old  <	; initializer String>
new  <	; Initializer String %-24s %-24s\n>

161:
old  <	; initializer String>
new  <	; Initializer String ========================>

167:
old  <	; initializer String>
new  <	; Initializer String %s%s>

173:
old  <	; initializer String>
new  <	; Initializer String \n>

179:
old  <	; initializer String>
new  <	; Initializer String Flow1.txt>

185:
old  <	; initializer String>
new  <	; Initializer String Flow2.txt>

191:
old  <	; initializer String>
new  <	; Initializer String outFilePtr != NULL>

197:
old  <	; initializer String>
new  <	; Initializer String Test.bin>

203:
old  <	; initializer String>
new  <	; Initializer String size1 %i\n>

209:
old  <	; initializer String>
new  <	; Initializer String index1 %i: value %f\n>

215:
old  <	; initializer String>
new  <	; Initializer String size2 %i\n>

221:
old  <	; initializer String>
new  <	; Initializer String index2 %i: value %f\n>

227:
old  <	; initializer String>
new  <	; Initializer String size3 %i total %i\n>

233:
old  <	; initializer String>
new  <	; Initializer String p != NULL>

239:
old  <	; initializer String>
new  <	; Initializer String malloc %u %u %u\n>

245:
old  <	; initializer String>
new  <	; Initializer String index3 %i: value %f\n>

251:
old  <	; initializer String>
new  <	; Initializer String Adam Bertilsson>

257:
old  <	; initializer String>
new  <	; Initializer String Bertil Ceasarsson>

263:
old  <	; initializer String>
new  <	; Initializer String Ceasar Davidsson>

269:
old  <	; initializer String>
new  <	; Initializer String Block.bin>

275:
old  <	; initializer String>
new  <	; Initializer String Name  : %s\n>

281:
old  <	; initializer String>
new  <	; Initializer String Phone : %d\n>

287:
old  <	; initializer String>
new  <	; Initializer String Test1.txt>

293:
old  <	; initializer String>
new  <	; Initializer String \n\n>

299:
old  <	; initializer String>
new  <	; Initializer String fileexists X %s\n>

305:
old  <	; initializer String>
new  <	; Initializer String Yes>

311:
old  <	; initializer String>
new  <	; Initializer String No>

317:
old  <	; initializer String>
new  <	; Initializer String fileexists Y %s\n\n>

323:
old  <	; initializer String>
new  <	; Initializer String PBookX.txt>

329:
old  <	; initializer String>
new  <	; Initializer String r+>

335:
old  <	; initializer String>
new  <	; Initializer String inOutFilePtr != NULL>

341:
old  <	; initializer String>
new  <	; Initializer String tempFilePtr != NULL>

347:
old  <	; initializer String>
new  <	; Initializer String \n------------\n>

353:
old  <	; initializer zero 4>
new  <	; InitializerZero 4>

359:
old  <	; initializer Array>
new  <	; Initializer Array 8>

365:
old  <	; initializer SignedInt>
new  <	; Initializer SignedInt 8>

371:
old  <	; initializer Pointer>
new  <	; Initializer Pointer 8>

377:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

380:
old  <	; parameter inFilePtrName, offset 64>
new  <	; Parameter pointer inFilePtrName 64>

385:
old  <	; parameter string_r#, offset 72>
new  <	; Parameter pointer "r" 72>

389:
old  <	; call function noellipse-noellipse fopen>
new  <	; Call fopen 40 0>

396:
old  <	; post call>
new  <	; PostCall 40>

399:
old  <	; Â£temporary3489 = return_value>
new  <	; GetReturnValue Â£temporary3489>

402:
old  <	; inFilePtrPtr = Â£temporary3489>
new  <	; Assign inFilePtrPtr Â£temporary3489>

406:
old  <	; if inFilePtrPtr != int8$0# goto 19>
new  <	; NotEqual 19 inFilePtrPtr 0>

411:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

414:
old  <	; parameter stderr, offset 72>
new  <	; Parameter pointer stderr 72>

419:
old  <	; parameter string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#, offset 80>
new  <	; Parameter pointer "Assertion failed: "%s" in file %s at line %i\n" 80>

423:
old  <	; parameter string_inFilePtrPtr20213D20NULL#, offset 88>
new  <	; Parameter pointer "inFilePtrPtr != NULL" 88>

427:
old  <	; parameter string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CFileTest2Ec#, offset 96>
new  <	; Parameter pointer "C:\Users\Stefan\Documents\vagrant\homestead\code\code\FileTest.c" 96>

431:
old  <	; parameter int4$10#, offset 104>
new  <	; Parameter signedint 10 104>

435:
old  <	; call function noellipse-ellipse fprintf, extra 20>
new  <	; Call fprintf 48 20>

444:
old  <	; post call>
new  <	; PostCall 48>

447:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

450:
old  <	; call function noellipse-noellipse abort>
new  <	; Call abort 48 0>

457:
old  <	; post call>
new  <	; PostCall 48>

460:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

463:
old  <	; parameter outFilePtrName, offset 72>
new  <	; Parameter pointer outFilePtrName 72>

468:
old  <	; parameter string_w#, offset 80>
new  <	; Parameter pointer "w" 80>

472:
old  <	; call function noellipse-noellipse fopen>
new  <	; Call fopen 48 0>

479:
old  <	; post call>
new  <	; PostCall 48>

482:
old  <	; Â£temporary3494 = return_value>
new  <	; GetReturnValue Â£temporary3494>

485:
old  <	; outFilePtrPtr = Â£temporary3494>
new  <	; Assign outFilePtrPtr Â£temporary3494>

489:
old  <	; if outFilePtrPtr != int8$0# goto 38>
new  <	; NotEqual 38 outFilePtrPtr 0>

494:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

497:
old  <	; parameter stderr, offset 80>
new  <	; Parameter pointer stderr 80>

502:
old  <	; parameter string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#, offset 88>
new  <	; Parameter pointer "Assertion failed: "%s" in file %s at line %i\n" 88>

506:
old  <	; parameter string_outFilePtrPtr20213D20NULL#, offset 96>
new  <	; Parameter pointer "outFilePtrPtr != NULL" 96>

510:
old  <	; parameter string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CFileTest2Ec#, offset 104>
new  <	; Parameter pointer "C:\Users\Stefan\Documents\vagrant\homestead\code\code\FileTest.c" 104>

514:
old  <	; parameter int4$12#, offset 112>
new  <	; Parameter signedint 12 112>

518:
old  <	; call function noellipse-ellipse fprintf, extra 20>
new  <	; Call fprintf 56 20>

527:
old  <	; post call>
new  <	; PostCall 56>

530:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

533:
old  <	; call function noellipse-noellipse abort>
new  <	; Call abort 56 0>

540:
old  <	; post call>
new  <	; PostCall 56>

543:
old  <	; size = int4$0#>
new  <	; Assign size 0>

547:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 64 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

550:
old  <	; parameter inFilePtrPtr, offset 88>
new  <	; Parameter pointer inFilePtrPtr 88>

555:
old  <	; parameter string_25i#, offset 96>
new  <	; Parameter pointer "%i" 96>

559:
old  <	; Â£temporary3499 = &size>
new  <	; Address Â£temporary3499 size>

564:
old  <	; parameter Â£temporary3499, offset 104>
new  <	; Parameter pointer Â£temporary3499 104>

568:
old  <	; call function noellipse-ellipse fscanf, extra 8>
new  <	; Call fscanf 64 8>

577:
old  <	; post call>
new  <	; PostCall 64>

580:
old  <	; index = int4$0#>
new  <	; Assign index 0>

584:
old  <	; if index >= size goto 73>
new  <	; SignedGreaterThanEqual 73 index size>

590:
old  <	; push float float8$0#>
new  <	; PushFloat 0>

594:
old  <	; pop float inValue>
new  <	; PopFloat inValue>

598:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 72 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

601:
old  <	; parameter inFilePtrPtr, offset 96>
new  <	; Parameter pointer inFilePtrPtr 96>

606:
old  <	; parameter string_25lf#, offset 104>
new  <	; Parameter pointer "%lf" 104>

610:
old  <	; Â£temporary3503 = &inValue>
new  <	; Address Â£temporary3503 inValue>

615:
old  <	; parameter Â£temporary3503, offset 112>
new  <	; Parameter pointer Â£temporary3503 112>

619:
old  <	; call function noellipse-ellipse fscanf, extra 8>
new  <	; Call fscanf 72 8>

628:
old  <	; post call>
new  <	; PostCall 72>

631:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 72 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

634:
old  <	; push float inValue>
new  <	; PushFloat inValue>

638:
old  <	; parameter Â£temporary3505, offset 96>
new  <	; Parameter double Â£temporary3505 96>

642:
old  <	; call function noellipse-noellipse sqrt>
new  <	; Call sqrt 72 0>

649:
old  <	; post call>
new  <	; PostCall 72>

652:
old  <	; Â£temporary3506 = return_value>
new  <	; GetReturnValue Â£temporary3506>

655:
old  <	; pop float outValue>
new  <	; PopFloat outValue>

659:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 80 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

662:
old  <	; parameter outFilePtrPtr, offset 104>
new  <	; Parameter pointer outFilePtrPtr 104>

667:
old  <	; parameter string_25f0A#, offset 112>
new  <	; Parameter pointer "%f\n" 112>

671:
old  <	; push float outValue>
new  <	; PushFloat outValue>

675:
old  <	; parameter outValue, offset 120>
new  <	; Parameter double outValue 120>

679:
old  <	; call function noellipse-ellipse fprintf, extra 8>
new  <	; Call fprintf 80 8>

688:
old  <	; post call>
new  <	; PostCall 80>

691:
old  <	; index = index + int4$1#>
new  <	; BinaryAdd index index 1>

695:
old  <	; goto 47>
new  <	; Goto 47>

699:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 64 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

702:
old  <	; parameter inFilePtrPtr, offset 88>
new  <	; Parameter pointer inFilePtrPtr 88>

707:
old  <	; call function noellipse-noellipse fclose>
new  <	; Call fclose 64 0>

714:
old  <	; post call>
new  <	; PostCall 64>

717:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 64 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

720:
old  <	; parameter outFilePtrPtr, offset 88>
new  <	; Parameter pointer outFilePtrPtr 88>

725:
old  <	; call function noellipse-noellipse fclose>
new  <	; Call fclose 64 0>

732:
old  <	; post call>
new  <	; PostCall 64>

735:
old  <	; sourceFilePtr = string_X#>
new  <	; Assign sourceFilePtr "X">

739:
old  <	; targetFilePtr = string_Y#>
new  <	; Assign targetFilePtr "Y">

743:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

746:
old  <	; parameter sourceFilePtr, offset 80>
new  <	; Parameter pointer sourceFilePtr 80>

751:
old  <	; parameter targetFilePtr, offset 88>
new  <	; Parameter pointer targetFilePtr 88>

756:
old  <	; call function noellipse-noellipse rename>
new  <	; Call rename 56 0>

763:
old  <	; post call>
new  <	; PostCall 56>

766:
old  <	; Â£temporary3510 = return_value>
new  <	; GetReturnValue Â£temporary3510>

769:
old  <	; if Â£temporary3510 != int4$0# goto 97>
new  <	; NotEqual 97 Â£temporary3510 0>

774:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

777:
old  <	; parameter string_2225s2220has20been20renamed20to202225s222E0A#, offset 80>
new  <	; Parameter pointer ""%s" has been renamed to "%s".\n" 80>

781:
old  <	; parameter sourceFilePtr, offset 88>
new  <	; Parameter pointer sourceFilePtr 88>

786:
old  <	; parameter targetFilePtr, offset 96>
new  <	; Parameter pointer targetFilePtr 96>

791:
old  <	; call function noellipse-ellipse printf, extra 16>
new  <	; Call printf 56 16>

800:
old  <	; post call>
new  <	; PostCall 56>

803:
old  <	; goto 108>
new  <	; Goto 108>

807:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

810:
old  <	; parameter string_Error2025i3A2025s2E0A#, offset 80>
new  <	; Parameter pointer "Error %i: %s.\n" 80>

814:
old  <	; parameter errno, offset 88>
new  <	; Parameter signedint errno 88>

819:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

822:
old  <	; parameter errno, offset 116>
new  <	; Parameter signedint errno 116>

827:
old  <	; call function noellipse-noellipse strerror>
new  <	; Call strerror 92 0>

834:
old  <	; post call>
new  <	; PostCall 92>

837:
old  <	; Â£temporary3513 = return_value>
new  <	; GetReturnValue Â£temporary3513>

840:
old  <	; parameter Â£temporary3513, offset 92>
new  <	; Parameter pointer Â£temporary3513 92>

844:
old  <	; call function noellipse-ellipse printf, extra 12>
new  <	; Call printf 56 12>

853:
old  <	; post call>
new  <	; PostCall 56>

856:
old  <	; targetFilePtr = string_Z#>
new  <	; Assign targetFilePtr "Z">

860:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

863:
old  <	; parameter targetFilePtr, offset 72>
new  <	; Parameter pointer targetFilePtr 72>

868:
old  <	; call function noellipse-noellipse remove>
new  <	; Call remove 48 0>

875:
old  <	; post call>
new  <	; PostCall 48>

878:
old  <	; Â£temporary3515 = return_value>
new  <	; GetReturnValue Â£temporary3515>

881:
old  <	; if Â£temporary3515 != int4$0# goto 121>
new  <	; NotEqual 121 Â£temporary3515 0>

886:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

889:
old  <	; parameter string_2225s2220has20been20removed2E0A#, offset 72>
new  <	; Parameter pointer ""%s" has been removed.\n" 72>

893:
old  <	; parameter targetFilePtr, offset 80>
new  <	; Parameter pointer targetFilePtr 80>

898:
old  <	; call function noellipse-ellipse printf, extra 8>
new  <	; Call printf 48 8>

907:
old  <	; post call>
new  <	; PostCall 48>

910:
old  <	; goto 132>
new  <	; Goto 132>

914:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

917:
old  <	; parameter string_Error2025i3A2025s2E0A#, offset 72>
new  <	; Parameter pointer "Error %i: %s.\n" 72>

921:
old  <	; parameter errno, offset 80>
new  <	; Parameter signedint errno 80>

926:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

929:
old  <	; parameter errno, offset 108>
new  <	; Parameter signedint errno 108>

934:
old  <	; call function noellipse-noellipse strerror>
new  <	; Call strerror 84 0>

941:
old  <	; post call>
new  <	; PostCall 84>

944:
old  <	; Â£temporary3518 = return_value>
new  <	; GetReturnValue Â£temporary3518>

947:
old  <	; parameter Â£temporary3518, offset 84>
new  <	; Parameter pointer Â£temporary3518 84>

951:
old  <	; call function noellipse-ellipse printf, extra 12>
new  <	; Call printf 48 12>

960:
old  <	; post call>
new  <	; PostCall 48>

963:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

966:
old  <	; parameter string_PBook2Etxt#, offset 64>
new  <	; Parameter pointer "PBook.txt" 64>

970:
old  <	; parameter string_r#, offset 72>
new  <	; Parameter pointer "r" 72>

974:
old  <	; call function noellipse-noellipse fopen>
new  <	; Call fopen 40 0>

981:
old  <	; post call>
new  <	; PostCall 40>

984:
old  <	; Â£temporary3520 = return_value>
new  <	; GetReturnValue Â£temporary3520>

987:
old  <	; inFilePtr = Â£temporary3520>
new  <	; Assign inFilePtr Â£temporary3520>

991:
old  <	; if inFilePtr != int8$0# goto 151>
new  <	; NotEqual 151 inFilePtr 0>

996:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

999:
old  <	; parameter stderr, offset 72>
new  <	; Parameter pointer stderr 72>

1004:
old  <	; parameter string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#, offset 80>
new  <	; Parameter pointer "Assertion failed: "%s" in file %s at line %i\n" 80>

1008:
old  <	; parameter string_inFilePtr20213D20NULL#, offset 88>
new  <	; Parameter pointer "inFilePtr != NULL" 88>

1012:
old  <	; parameter string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CFileTest2Ec#, offset 96>
new  <	; Parameter pointer "C:\Users\Stefan\Documents\vagrant\homestead\code\code\FileTest.c" 96>

1016:
old  <	; parameter int4$50#, offset 104>
new  <	; Parameter signedint 50 104>

1020:
old  <	; call function noellipse-ellipse fprintf, extra 20>
new  <	; Call fprintf 48 20>

1029:
old  <	; post call>
new  <	; PostCall 48>

1032:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1035:
old  <	; call function noellipse-noellipse abort>
new  <	; Call abort 48 0>

1042:
old  <	; post call>
new  <	; PostCall 48>

1045:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1048:
old  <	; parameter string_0A252D24s20252D24s0A#, offset 72>
new  <	; Parameter pointer "\n%-24s %-24s\n" 72>

1052:
old  <	; parameter string_Name#, offset 80>
new  <	; Parameter pointer "Name" 80>

1056:
old  <	; parameter string_Phone#, offset 88>
new  <	; Parameter pointer "Phone" 88>

1060:
old  <	; call function noellipse-ellipse printf, extra 16>
new  <	; Call printf 48 16>

1069:
old  <	; post call>
new  <	; PostCall 48>

1072:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1075:
old  <	; parameter string_252D24s20252D24s0A#, offset 72>
new  <	; Parameter pointer "%-24s %-24s\n" 72>

1079:
old  <	; parameter string_3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D#, offset 80>
new  <	; Parameter pointer "========================" 80>

1083:
old  <	; parameter string_3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D#, offset 88>
new  <	; Parameter pointer "========================" 88>

1087:
old  <	; call function noellipse-ellipse printf, extra 16>
new  <	; Call printf 48 16>

1096:
old  <	; post call>
new  <	; PostCall 48>

1099:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1102:
old  <	; parameter inFilePtr, offset 80>
new  <	; Parameter pointer inFilePtr 80>

1107:
old  <	; parameter string_25i#, offset 88>
new  <	; Parameter pointer "%i" 88>

1111:
old  <	; Â£temporary3527 = &size>
new  <	; Address Â£temporary3527 size>

1116:
old  <	; parameter Â£temporary3527, offset 96>
new  <	; Parameter pointer Â£temporary3527 96>

1120:
old  <	; call function noellipse-ellipse fscanf, extra 8>
new  <	; Call fscanf 56 8>

1129:
old  <	; post call>
new  <	; PostCall 56>

1132:
old  <	; count = int4$0#>
new  <	; Assign count 0>

1136:
old  <	; if count >= size goto 187>
new  <	; SignedGreaterThanEqual 187 count size>

1142:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 96 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1145:
old  <	; parameter inFilePtr, offset 120>
new  <	; Parameter pointer inFilePtr 120>

1150:
old  <	; parameter string_25s25s#, offset 128>
new  <	; Parameter pointer "%s%s" 128>

1154:
old  <	; parameter name, offset 136>
new  <	; Parameter pointer name 136>

1159:
old  <	; parameter phone, offset 144>
new  <	; Parameter pointer phone 144>

1164:
old  <	; call function noellipse-ellipse fscanf, extra 16>
new  <	; Call fscanf 96 16>

1173:
old  <	; post call>
new  <	; PostCall 96>

1176:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 96 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1179:
old  <	; parameter string_252D24s20252D24s0A#, offset 120>
new  <	; Parameter pointer "%-24s %-24s\n" 120>

1183:
old  <	; parameter name, offset 128>
new  <	; Parameter pointer name 128>

1188:
old  <	; parameter phone, offset 136>
new  <	; Parameter pointer phone 136>

1193:
old  <	; call function noellipse-ellipse printf, extra 16>
new  <	; Call printf 96 16>

1202:
old  <	; post call>
new  <	; PostCall 96>

1205:
old  <	; count = count + int4$1#>
new  <	; BinaryAdd count count 1>

1209:
old  <	; goto 171>
new  <	; Goto 171>

1213:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1216:
old  <	; parameter string_0A#, offset 80>
new  <	; Parameter pointer "\n" 80>

1220:
old  <	; call function noellipse-ellipse printf, extra 0>
new  <	; Call printf 56 0>

1228:
old  <	; post call>
new  <	; PostCall 56>

1231:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1234:
old  <	; parameter inFilePtr, offset 80>
new  <	; Parameter pointer inFilePtr 80>

1239:
old  <	; call function noellipse-noellipse fclose>
new  <	; Call fclose 56 0>

1246:
old  <	; post call>
new  <	; PostCall 56>

1249:
old  <	; sourceFilePtr = string_Flow12Etxt#>
new  <	; Assign sourceFilePtr "Flow1.txt">

1253:
old  <	; targetFilePtr = string_Flow22Etxt#>
new  <	; Assign targetFilePtr "Flow2.txt">

1257:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1260:
old  <	; parameter sourceFilePtr, offset 80>
new  <	; Parameter pointer sourceFilePtr 80>

1265:
old  <	; parameter string_r#, offset 88>
new  <	; Parameter pointer "r" 88>

1269:
old  <	; call function noellipse-noellipse fopen>
new  <	; Call fopen 56 0>

1276:
old  <	; post call>
new  <	; PostCall 56>

1279:
old  <	; Â£temporary3535 = return_value>
new  <	; GetReturnValue Â£temporary3535>

1282:
old  <	; inFilePtr = Â£temporary3535>
new  <	; Assign inFilePtr Â£temporary3535>

1286:
old  <	; if inFilePtr != int8$0# goto 216>
new  <	; NotEqual 216 inFilePtr 0>

1291:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 64 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1294:
old  <	; parameter stderr, offset 88>
new  <	; Parameter pointer stderr 88>

1299:
old  <	; parameter string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#, offset 96>
new  <	; Parameter pointer "Assertion failed: "%s" in file %s at line %i\n" 96>

1303:
old  <	; parameter string_inFilePtr20213D20NULL#, offset 104>
new  <	; Parameter pointer "inFilePtr != NULL" 104>

1307:
old  <	; parameter string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CFileTest2Ec#, offset 112>
new  <	; Parameter pointer "C:\Users\Stefan\Documents\vagrant\homestead\code\code\FileTest.c" 112>

1311:
old  <	; parameter int4$76#, offset 120>
new  <	; Parameter signedint 76 120>

1315:
old  <	; call function noellipse-ellipse fprintf, extra 20>
new  <	; Call fprintf 64 20>

1324:
old  <	; post call>
new  <	; PostCall 64>

1327:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 64 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1330:
old  <	; call function noellipse-noellipse abort>
new  <	; Call abort 64 0>

1337:
old  <	; post call>
new  <	; PostCall 64>

1340:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 64 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1343:
old  <	; parameter targetFilePtr, offset 88>
new  <	; Parameter pointer targetFilePtr 88>

1348:
old  <	; parameter string_w#, offset 96>
new  <	; Parameter pointer "w" 96>

1352:
old  <	; call function noellipse-noellipse fopen>
new  <	; Call fopen 64 0>

1359:
old  <	; post call>
new  <	; PostCall 64>

1362:
old  <	; Â£temporary3540 = return_value>
new  <	; GetReturnValue Â£temporary3540>

1365:
old  <	; outFilePtr = Â£temporary3540>
new  <	; Assign outFilePtr Â£temporary3540>

1369:
old  <	; if outFilePtr != int8$0# goto 235>
new  <	; NotEqual 235 outFilePtr 0>

1374:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 72 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1377:
old  <	; parameter stderr, offset 96>
new  <	; Parameter pointer stderr 96>

1382:
old  <	; parameter string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#, offset 104>
new  <	; Parameter pointer "Assertion failed: "%s" in file %s at line %i\n" 104>

1386:
old  <	; parameter string_outFilePtr20213D20NULL#, offset 112>
new  <	; Parameter pointer "outFilePtr != NULL" 112>

1390:
old  <	; parameter string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CFileTest2Ec#, offset 120>
new  <	; Parameter pointer "C:\Users\Stefan\Documents\vagrant\homestead\code\code\FileTest.c" 120>

1394:
old  <	; parameter int4$79#, offset 128>
new  <	; Parameter signedint 79 128>

1398:
old  <	; call function noellipse-ellipse fprintf, extra 20>
new  <	; Call fprintf 72 20>

1407:
old  <	; post call>
new  <	; PostCall 72>

1410:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 72 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1413:
old  <	; call function noellipse-noellipse abort>
new  <	; Call abort 72 0>

1420:
old  <	; post call>
new  <	; PostCall 72>

1423:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 72 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1426:
old  <	; parameter inFilePtr, offset 96>
new  <	; Parameter pointer inFilePtr 96>

1431:
old  <	; call function noellipse-noellipse fgetc>
new  <	; Call fgetc 72 0>

1438:
old  <	; post call>
new  <	; PostCall 72>

1441:
old  <	; Â£temporary3545 = return_value>
new  <	; GetReturnValue Â£temporary3545>

1444:
old  <	; Â£temporary3546 = int_to_int Â£temporary3545 (SignedInt -> SignedChar)>
new  <	; IntegralToIntegral Â£temporary3546 Â£temporary3545>

1451:
old  <	; c = Â£temporary3546>
new  <	; Assign c Â£temporary3546>

1455:
old  <	; Â£temporary3547 = int_to_int c (SignedChar -> SignedInt)>
new  <	; IntegralToIntegral Â£temporary3547 c>

1464:
old  <	; if Â£temporary3547 == int4$minus1# goto 257>
new  <	; Equal 257 Â£temporary3547 -1>

1469:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 73 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1472:
old  <	; Â£temporary3549 = int_to_int c (SignedChar -> SignedInt)>
new  <	; IntegralToIntegral Â£temporary3549 c>

1481:
old  <	; parameter Â£temporary3549, offset 97>
new  <	; Parameter signedint Â£temporary3549 97>

1485:
old  <	; parameter outFilePtr, offset 101>
new  <	; Parameter pointer outFilePtr 101>

1490:
old  <	; call function noellipse-noellipse putc>
new  <	; Call putc 73 0>

1497:
old  <	; post call>
new  <	; PostCall 73>

1500:
old  <	; if c != int1$10# goto 235>
new  <	; NotEqual 235 c 10>

1505:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 73 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1508:
old  <	; parameter int4$10#, offset 97>
new  <	; Parameter signedint 10 97>

1512:
old  <	; parameter outFilePtr, offset 101>
new  <	; Parameter pointer outFilePtr 101>

1517:
old  <	; call function noellipse-noellipse putc>
new  <	; Call putc 73 0>

1524:
old  <	; post call>
new  <	; PostCall 73>

1527:
old  <	; goto 235>
new  <	; Goto 235>

1531:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 72 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1534:
old  <	; parameter inFilePtr, offset 96>
new  <	; Parameter pointer inFilePtr 96>

1539:
old  <	; call function noellipse-noellipse fclose>
new  <	; Call fclose 72 0>

1546:
old  <	; post call>
new  <	; PostCall 72>

1549:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 72 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1552:
old  <	; parameter outFilePtr, offset 96>
new  <	; Parameter pointer outFilePtr 96>

1557:
old  <	; call function noellipse-noellipse fclose>
new  <	; Call fclose 72 0>

1564:
old  <	; post call>
new  <	; PostCall 72>

1567:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1570:
old  <	; parameter string_Test2Ebin#, offset 64>
new  <	; Parameter pointer "Test.bin" 64>

1574:
old  <	; parameter string_w#, offset 72>
new  <	; Parameter pointer "w" 72>

1578:
old  <	; call function noellipse-noellipse fopen>
new  <	; Call fopen 40 0>

1585:
old  <	; post call>
new  <	; PostCall 40>

1588:
old  <	; Â£temporary3556 = return_value>
new  <	; GetReturnValue Â£temporary3556>

1591:
old  <	; outFilePtr = Â£temporary3556>
new  <	; Assign outFilePtr Â£temporary3556>

1595:
old  <	; if outFilePtr != int8$0# goto 284>
new  <	; NotEqual 284 outFilePtr 0>

1600:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1603:
old  <	; parameter stderr, offset 72>
new  <	; Parameter pointer stderr 72>

1608:
old  <	; parameter string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#, offset 80>
new  <	; Parameter pointer "Assertion failed: "%s" in file %s at line %i\n" 80>

1612:
old  <	; parameter string_outFilePtr20213D20NULL#, offset 88>
new  <	; Parameter pointer "outFilePtr != NULL" 88>

1616:
old  <	; parameter string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CFileTest2Ec#, offset 96>
new  <	; Parameter pointer "C:\Users\Stefan\Documents\vagrant\homestead\code\code\FileTest.c" 96>

1620:
old  <	; parameter int4$100#, offset 104>
new  <	; Parameter signedint 100 104>

1624:
old  <	; call function noellipse-ellipse fprintf, extra 20>
new  <	; Call fprintf 48 20>

1633:
old  <	; post call>
new  <	; PostCall 48>

1636:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1639:
old  <	; call function noellipse-noellipse abort>
new  <	; Call abort 48 0>

1646:
old  <	; post call>
new  <	; PostCall 48>

1649:
old  <	; size = int4$10#>
new  <	; Assign size 10>

1653:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1656:
old  <	; Â£temporary3561 = &size>
new  <	; Address Â£temporary3561 size>

1661:
old  <	; parameter Â£temporary3561, offset 76>
new  <	; Parameter pointer Â£temporary3561 76>

1665:
old  <	; parameter int4$4#, offset 84>
new  <	; Parameter signedint 4 84>

1669:
old  <	; parameter int4$1#, offset 88>
new  <	; Parameter signedint 1 88>

1673:
old  <	; parameter outFilePtr, offset 92>
new  <	; Parameter pointer outFilePtr 92>

1678:
old  <	; call function noellipse-noellipse fwrite>
new  <	; Call fwrite 52 0>

1685:
old  <	; post call>
new  <	; PostCall 52>

1688:
old  <	; index = int4$0#>
new  <	; Assign index 0>

1692:
old  <	; if index >= size goto 308>
new  <	; SignedGreaterThanEqual 308 index size>

1698:
old  <	; Â£temporary3565 = index * index>
new  <	; SignedMultiply Â£temporary3565 index index>

1704:
old  <	; Â£temporary3566 = int_to_float Â£temporary3565 (SignedInt -> Double)>
new  <	; IntegralToFloating Â£temporary3566 Â£temporary3565>

1709:
old  <	; pop float value>
new  <	; PopFloat value>

1713:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 64 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1716:
old  <	; Â£temporary3567 = &value>
new  <	; Address Â£temporary3567 value>

1721:
old  <	; parameter Â£temporary3567, offset 88>
new  <	; Parameter pointer Â£temporary3567 88>

1725:
old  <	; parameter int4$8#, offset 96>
new  <	; Parameter signedint 8 96>

1729:
old  <	; parameter int4$1#, offset 100>
new  <	; Parameter signedint 1 100>

1733:
old  <	; parameter outFilePtr, offset 104>
new  <	; Parameter pointer outFilePtr 104>

1738:
old  <	; call function noellipse-noellipse fwrite>
new  <	; Call fwrite 64 0>

1745:
old  <	; post call>
new  <	; PostCall 64>

1748:
old  <	; index = index + int4$1#>
new  <	; BinaryAdd index index 1>

1752:
old  <	; goto 294>
new  <	; Goto 294>

1756:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1759:
old  <	; parameter outFilePtr, offset 80>
new  <	; Parameter pointer outFilePtr 80>

1764:
old  <	; call function noellipse-noellipse fclose>
new  <	; Call fclose 56 0>

1771:
old  <	; post call>
new  <	; PostCall 56>

1774:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1777:
old  <	; parameter string_Test2Ebin#, offset 64>
new  <	; Parameter pointer "Test.bin" 64>

1781:
old  <	; parameter string_r#, offset 72>
new  <	; Parameter pointer "r" 72>

1785:
old  <	; call function noellipse-noellipse fopen>
new  <	; Call fopen 40 0>

1792:
old  <	; post call>
new  <	; PostCall 40>

1795:
old  <	; Â£temporary3570 = return_value>
new  <	; GetReturnValue Â£temporary3570>

1798:
old  <	; inFilePtr = Â£temporary3570>
new  <	; Assign inFilePtr Â£temporary3570>

1802:
old  <	; if inFilePtr != int8$0# goto 331>
new  <	; NotEqual 331 inFilePtr 0>

1807:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1810:
old  <	; parameter stderr, offset 72>
new  <	; Parameter pointer stderr 72>

1815:
old  <	; parameter string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#, offset 80>
new  <	; Parameter pointer "Assertion failed: "%s" in file %s at line %i\n" 80>

1819:
old  <	; parameter string_inFilePtr20213D20NULL#, offset 88>
new  <	; Parameter pointer "inFilePtr != NULL" 88>

1823:
old  <	; parameter string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CFileTest2Ec#, offset 96>
new  <	; Parameter pointer "C:\Users\Stefan\Documents\vagrant\homestead\code\code\FileTest.c" 96>

1827:
old  <	; parameter int4$115#, offset 104>
new  <	; Parameter signedint 115 104>

1831:
old  <	; call function noellipse-ellipse fprintf, extra 20>
new  <	; Call fprintf 48 20>

1840:
old  <	; post call>
new  <	; PostCall 48>

1843:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1846:
old  <	; call function noellipse-noellipse abort>
new  <	; Call abort 48 0>

1853:
old  <	; post call>
new  <	; PostCall 48>

1856:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1859:
old  <	; Â£temporary3575 = &size>
new  <	; Address Â£temporary3575 size>

1864:
old  <	; parameter Â£temporary3575, offset 76>
new  <	; Parameter pointer Â£temporary3575 76>

1868:
old  <	; parameter int4$4#, offset 84>
new  <	; Parameter signedint 4 84>

1872:
old  <	; parameter int4$1#, offset 88>
new  <	; Parameter signedint 1 88>

1876:
old  <	; parameter inFilePtr, offset 92>
new  <	; Parameter pointer inFilePtr 92>

1881:
old  <	; call function noellipse-noellipse fread>
new  <	; Call fread 52 0>

1888:
old  <	; post call>
new  <	; PostCall 52>

1891:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1894:
old  <	; parameter string_size12025i0A#, offset 76>
new  <	; Parameter pointer "size1 %i\n" 76>

1898:
old  <	; parameter size, offset 84>
new  <	; Parameter signedint size 84>

1903:
old  <	; call function noellipse-ellipse printf, extra 4>
new  <	; Call printf 52 4>

1912:
old  <	; post call>
new  <	; PostCall 52>

1915:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 132 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1918:
old  <	; Â£temporary3578 = &arr>
new  <	; Address Â£temporary3578 arr>

1923:
old  <	; parameter Â£temporary3578, offset 156>
new  <	; Parameter pointer Â£temporary3578 156>

1927:
old  <	; parameter int4$80#, offset 164>
new  <	; Parameter signedint 80 164>

1931:
old  <	; parameter int4$1#, offset 168>
new  <	; Parameter signedint 1 168>

1935:
old  <	; parameter inFilePtr, offset 172>
new  <	; Parameter pointer inFilePtr 172>

1940:
old  <	; call function noellipse-noellipse fread>
new  <	; Call fread 132 0>

1947:
old  <	; post call>
new  <	; PostCall 132>

1950:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 132 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1953:
old  <	; parameter inFilePtr, offset 156>
new  <	; Parameter pointer inFilePtr 156>

1958:
old  <	; call function noellipse-noellipse fclose>
new  <	; Call fclose 132 0>

1965:
old  <	; post call>
new  <	; PostCall 132>

1968:
old  <	; index = int4$0#>
new  <	; Assign index 0>

1972:
old  <	; if index >= int4$10# goto 371>
new  <	; SignedGreaterThanEqual 371 index 10>

1977:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1980:
old  <	; parameter string_index12025i3A20value2025f0A#, offset 160>
new  <	; Parameter pointer "index1 %i: value %f\n" 160>

1984:
old  <	; parameter index, offset 168>
new  <	; Parameter signedint index 168>

1989:
old  <	; Â£temporary3584 = int_to_int index (SignedInt -> Array)>
new  <	; IntegralToIntegral Â£temporary3584 index>

1995:
old  <	; Â£temporary3585 = Â£temporary3584 * Array_8#>
new  <	; UnsignedMultiply Â£temporary3585 Â£temporary3584 8>

2000:
old  <	; Â£temporary3586 = arr + Â£temporary3585>
new  <	; BinaryAdd Â£temporary3586 arr Â£temporary3585>

2006:
old  <	; Â£temporary3583 -> Â£temporary3586 = *Â£temporary3586>
new  <	; Dereference Â£temporary3583 -> Â£temporary3586 Â£temporary3586 0>

2009:
old  <	; push float Â£temporary3583 -> Â£temporary3586>
new  <	; PushFloat Â£temporary3583 -> Â£temporary3586>

2013:
old  <	; parameter Â£temporary3583 -> Â£temporary3586, offset 172>
new  <	; Parameter double Â£temporary3583 -> Â£temporary3586 172>

2017:
old  <	; call function noellipse-ellipse printf, extra 12>
new  <	; Call printf 136 12>

2026:
old  <	; post call>
new  <	; PostCall 136>

2029:
old  <	; index = index + int4$1#>
new  <	; BinaryAdd index index 1>

2033:
old  <	; goto 357>
new  <	; Goto 357>

2037:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2040:
old  <	; parameter string_0A#, offset 160>
new  <	; Parameter pointer "\n" 160>

2044:
old  <	; call function noellipse-ellipse printf, extra 0>
new  <	; Call printf 136 0>

2052:
old  <	; post call>
new  <	; PostCall 136>

2055:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2058:
old  <	; parameter string_Test2Ebin#, offset 64>
new  <	; Parameter pointer "Test.bin" 64>

2062:
old  <	; parameter string_r#, offset 72>
new  <	; Parameter pointer "r" 72>

2066:
old  <	; call function noellipse-noellipse fopen>
new  <	; Call fopen 40 0>

2073:
old  <	; post call>
new  <	; PostCall 40>

2076:
old  <	; Â£temporary3589 = return_value>
new  <	; GetReturnValue Â£temporary3589>

2079:
old  <	; inFilePtr = Â£temporary3589>
new  <	; Assign inFilePtr Â£temporary3589>

2083:
old  <	; if inFilePtr != int8$0# goto 394>
new  <	; NotEqual 394 inFilePtr 0>

2088:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2091:
old  <	; parameter stderr, offset 72>
new  <	; Parameter pointer stderr 72>

2096:
old  <	; parameter string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#, offset 80>
new  <	; Parameter pointer "Assertion failed: "%s" in file %s at line %i\n" 80>

2100:
old  <	; parameter string_inFilePtr20213D20NULL#, offset 88>
new  <	; Parameter pointer "inFilePtr != NULL" 88>

2104:
old  <	; parameter string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CFileTest2Ec#, offset 96>
new  <	; Parameter pointer "C:\Users\Stefan\Documents\vagrant\homestead\code\code\FileTest.c" 96>

2108:
old  <	; parameter int4$133#, offset 104>
new  <	; Parameter signedint 133 104>

2112:
old  <	; call function noellipse-ellipse fprintf, extra 20>
new  <	; Call fprintf 48 20>

2121:
old  <	; post call>
new  <	; PostCall 48>

2124:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2127:
old  <	; call function noellipse-noellipse abort>
new  <	; Call abort 48 0>

2134:
old  <	; post call>
new  <	; PostCall 48>

2137:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2140:
old  <	; Â£temporary3594 = &size>
new  <	; Address Â£temporary3594 size>

2145:
old  <	; parameter Â£temporary3594, offset 76>
new  <	; Parameter pointer Â£temporary3594 76>

2149:
old  <	; parameter int4$4#, offset 84>
new  <	; Parameter signedint 4 84>

2153:
old  <	; parameter int4$1#, offset 88>
new  <	; Parameter signedint 1 88>

2157:
old  <	; parameter inFilePtr, offset 92>
new  <	; Parameter pointer inFilePtr 92>

2162:
old  <	; call function noellipse-noellipse fread>
new  <	; Call fread 52 0>

2169:
old  <	; post call>
new  <	; PostCall 52>

2172:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2175:
old  <	; parameter string_size22025i0A#, offset 76>
new  <	; Parameter pointer "size2 %i\n" 76>

2179:
old  <	; parameter size, offset 84>
new  <	; Parameter signedint size 84>

2184:
old  <	; call function noellipse-ellipse printf, extra 4>
new  <	; Call printf 52 4>

2193:
old  <	; post call>
new  <	; PostCall 52>

2196:
old  <	; index = int4$0#>
new  <	; Assign index 0>

2200:
old  <	; if index >= size goto 426>
new  <	; SignedGreaterThanEqual 426 index size>

2206:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 64 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2209:
old  <	; Â£temporary3599 = &value>
new  <	; Address Â£temporary3599 value>

2214:
old  <	; parameter Â£temporary3599, offset 88>
new  <	; Parameter pointer Â£temporary3599 88>

2218:
old  <	; parameter int4$8#, offset 96>
new  <	; Parameter signedint 8 96>

2222:
old  <	; parameter int4$1#, offset 100>
new  <	; Parameter signedint 1 100>

2226:
old  <	; parameter inFilePtr, offset 104>
new  <	; Parameter pointer inFilePtr 104>

2231:
old  <	; call function noellipse-noellipse fread>
new  <	; Call fread 64 0>

2238:
old  <	; post call>
new  <	; PostCall 64>

2241:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 64 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2244:
old  <	; parameter string_index22025i3A20value2025f0A#, offset 88>
new  <	; Parameter pointer "index2 %i: value %f\n" 88>

2248:
old  <	; parameter index, offset 96>
new  <	; Parameter signedint index 96>

2253:
old  <	; push float value>
new  <	; PushFloat value>

2257:
old  <	; parameter value, offset 100>
new  <	; Parameter double value 100>

2261:
old  <	; call function noellipse-ellipse printf, extra 12>
new  <	; Call printf 64 12>

2270:
old  <	; post call>
new  <	; PostCall 64>

2273:
old  <	; index = index + int4$1#>
new  <	; BinaryAdd index index 1>

2277:
old  <	; goto 408>
new  <	; Goto 408>

2281:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2284:
old  <	; parameter string_0A#, offset 80>
new  <	; Parameter pointer "\n" 80>

2288:
old  <	; call function noellipse-ellipse printf, extra 0>
new  <	; Call printf 56 0>

2296:
old  <	; post call>
new  <	; PostCall 56>

2299:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2302:
old  <	; parameter inFilePtr, offset 80>
new  <	; Parameter pointer inFilePtr 80>

2307:
old  <	; call function noellipse-noellipse fclose>
new  <	; Call fclose 56 0>

2314:
old  <	; post call>
new  <	; PostCall 56>

2317:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2320:
old  <	; parameter string_Test2Ebin#, offset 64>
new  <	; Parameter pointer "Test.bin" 64>

2324:
old  <	; parameter string_r#, offset 72>
new  <	; Parameter pointer "r" 72>

2328:
old  <	; call function noellipse-noellipse fopen>
new  <	; Call fopen 40 0>

2335:
old  <	; post call>
new  <	; PostCall 40>

2338:
old  <	; Â£temporary3604 = return_value>
new  <	; GetReturnValue Â£temporary3604>

2341:
old  <	; inFilePtr = Â£temporary3604>
new  <	; Assign inFilePtr Â£temporary3604>

2345:
old  <	; if inFilePtr != int8$0# goto 453>
new  <	; NotEqual 453 inFilePtr 0>

2350:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2353:
old  <	; parameter stderr, offset 72>
new  <	; Parameter pointer stderr 72>

2358:
old  <	; parameter string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#, offset 80>
new  <	; Parameter pointer "Assertion failed: "%s" in file %s at line %i\n" 80>

2362:
old  <	; parameter string_inFilePtr20213D20NULL#, offset 88>
new  <	; Parameter pointer "inFilePtr != NULL" 88>

2366:
old  <	; parameter string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CFileTest2Ec#, offset 96>
new  <	; Parameter pointer "C:\Users\Stefan\Documents\vagrant\homestead\code\code\FileTest.c" 96>

2370:
old  <	; parameter int4$151#, offset 104>
new  <	; Parameter signedint 151 104>

2374:
old  <	; call function noellipse-ellipse fprintf, extra 20>
new  <	; Call fprintf 48 20>

2383:
old  <	; post call>
new  <	; PostCall 48>

2386:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2389:
old  <	; call function noellipse-noellipse abort>
new  <	; Call abort 48 0>

2396:
old  <	; post call>
new  <	; PostCall 48>

2399:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2402:
old  <	; Â£temporary3609 = &size>
new  <	; Address Â£temporary3609 size>

2407:
old  <	; parameter Â£temporary3609, offset 76>
new  <	; Parameter pointer Â£temporary3609 76>

2411:
old  <	; parameter int4$4#, offset 84>
new  <	; Parameter signedint 4 84>

2415:
old  <	; parameter int4$1#, offset 88>
new  <	; Parameter signedint 1 88>

2419:
old  <	; parameter inFilePtr, offset 92>
new  <	; Parameter pointer inFilePtr 92>

2424:
old  <	; call function noellipse-noellipse fread>
new  <	; Call fread 52 0>

2431:
old  <	; post call>
new  <	; PostCall 52>

2434:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2437:
old  <	; parameter string_size32025i20total2025i0A#, offset 76>
new  <	; Parameter pointer "size3 %i total %i\n" 76>

2441:
old  <	; parameter size, offset 84>
new  <	; Parameter signedint size 84>

2446:
old  <	; Â£temporary3611 = size * int4$8#>
new  <	; SignedMultiply Â£temporary3611 size 8>

2452:
old  <	; parameter Â£temporary3611, offset 88>
new  <	; Parameter signedint Â£temporary3611 88>

2456:
old  <	; call function noellipse-ellipse printf, extra 8>
new  <	; Call printf 52 8>

2465:
old  <	; post call>
new  <	; PostCall 52>

2468:
old  <	; total = size * int4$8#>
new  <	; SignedMultiply total size 8>

2475:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2478:
old  <	; parameter total, offset 80>
new  <	; Parameter signedint total 80>

2483:
old  <	; call function noellipse-noellipse malloc>
new  <	; Call malloc 56 0>

2490:
old  <	; post call>
new  <	; PostCall 56>

2493:
old  <	; Â£temporary3614 = return_value>
new  <	; GetReturnValue Â£temporary3614>

2496:
old  <	; p = Â£temporary3614>
new  <	; Assign p Â£temporary3614>

2500:
old  <	; if p != int8$0# goto 487>
new  <	; NotEqual 487 p 0>

2505:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 64 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2508:
old  <	; parameter stderr, offset 88>
new  <	; Parameter pointer stderr 88>

2513:
old  <	; parameter string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#, offset 96>
new  <	; Parameter pointer "Assertion failed: "%s" in file %s at line %i\n" 96>

2517:
old  <	; parameter string_p20213D20NULL#, offset 104>
new  <	; Parameter pointer "p != NULL" 104>

2521:
old  <	; parameter string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CFileTest2Ec#, offset 112>
new  <	; Parameter pointer "C:\Users\Stefan\Documents\vagrant\homestead\code\code\FileTest.c" 112>

2525:
old  <	; parameter int4$159#, offset 120>
new  <	; Parameter signedint 159 120>

2529:
old  <	; call function noellipse-ellipse fprintf, extra 20>
new  <	; Call fprintf 64 20>

2538:
old  <	; post call>
new  <	; PostCall 64>

2541:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 64 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2544:
old  <	; call function noellipse-noellipse abort>
new  <	; Call abort 64 0>

2551:
old  <	; post call>
new  <	; PostCall 64>

2554:
old  <	; Â£temporary3619 = int_to_int size (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary3619 size>

2560:
old  <	; Â£temporary3621 = Â£temporary3619 * int8$8#>
new  <	; UnsignedMultiply Â£temporary3621 Â£temporary3619 8>

2565:
old  <	; endPtr = p + Â£temporary3621>
new  <	; BinaryAdd endPtr p Â£temporary3621>

2571:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 72 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2574:
old  <	; parameter string_malloc2025u2025u2025u0A#, offset 96>
new  <	; Parameter pointer "malloc %u %u %u\n" 96>

2578:
old  <	; parameter p, offset 104>
new  <	; Parameter pointer p 104>

2583:
old  <	; parameter total, offset 112>
new  <	; Parameter signedint total 112>

2588:
old  <	; parameter endPtr, offset 116>
new  <	; Parameter pointer endPtr 116>

2593:
old  <	; call function noellipse-ellipse printf, extra 20>
new  <	; Call printf 72 20>

2602:
old  <	; post call>
new  <	; PostCall 72>

2605:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 72 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2608:
old  <	; parameter p, offset 96>
new  <	; Parameter pointer p 96>

2613:
old  <	; parameter total, offset 104>
new  <	; Parameter signedint total 104>

2618:
old  <	; parameter int4$1#, offset 108>
new  <	; Parameter signedint 1 108>

2622:
old  <	; parameter inFilePtr, offset 112>
new  <	; Parameter pointer inFilePtr 112>

2627:
old  <	; call function noellipse-noellipse fread>
new  <	; Call fread 72 0>

2634:
old  <	; post call>
new  <	; PostCall 72>

2637:
old  <	; index = int4$0#>
new  <	; Assign index 0>

2641:
old  <	; if index >= size goto 519>
new  <	; SignedGreaterThanEqual 519 index size>

2647:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 76 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2650:
old  <	; parameter string_index32025i3A20value2025f0A#, offset 100>
new  <	; Parameter pointer "index3 %i: value %f\n" 100>

2654:
old  <	; parameter index, offset 108>
new  <	; Parameter signedint index 108>

2659:
old  <	; Â£temporary3627 = int_to_int index (SignedInt -> Pointer)>
new  <	; IntegralToIntegral Â£temporary3627 index>

2665:
old  <	; Â£temporary3628 = Â£temporary3627 * int8$8#>
new  <	; UnsignedMultiply Â£temporary3628 Â£temporary3627 8>

2670:
old  <	; Â£temporary3629 = p + Â£temporary3628>
new  <	; BinaryAdd Â£temporary3629 p Â£temporary3628>

2675:
old  <	; Â£temporary3626 -> Â£temporary3629 = *Â£temporary3629>
new  <	; Dereference Â£temporary3626 -> Â£temporary3629 Â£temporary3629 0>

2678:
old  <	; push float Â£temporary3626 -> Â£temporary3629>
new  <	; PushFloat Â£temporary3626 -> Â£temporary3629>

2682:
old  <	; parameter Â£temporary3626 -> Â£temporary3629, offset 112>
new  <	; Parameter double Â£temporary3626 -> Â£temporary3629 112>

2686:
old  <	; call function noellipse-ellipse printf, extra 12>
new  <	; Call printf 76 12>

2695:
old  <	; post call>
new  <	; PostCall 76>

2698:
old  <	; index = index + int4$1#>
new  <	; BinaryAdd index index 1>

2702:
old  <	; goto 505>
new  <	; Goto 505>

2706:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 76 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2709:
old  <	; parameter string_0A#, offset 100>
new  <	; Parameter pointer "\n" 100>

2713:
old  <	; call function noellipse-ellipse printf, extra 0>
new  <	; Call printf 76 0>

2721:
old  <	; post call>
new  <	; PostCall 76>

2724:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 76 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2727:
old  <	; parameter p, offset 100>
new  <	; Parameter pointer p 100>

2732:
old  <	; call function noellipse-noellipse free>
new  <	; Call free 76 0>

2739:
old  <	; post call>
new  <	; PostCall 76>

2742:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 76 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2745:
old  <	; parameter inFilePtr, offset 100>
new  <	; Parameter pointer inFilePtr 100>

2750:
old  <	; call function noellipse-noellipse fclose>
new  <	; Call fclose 76 0>

2757:
old  <	; post call>
new  <	; PostCall 76>

2760:
old  <	; personVector[0].name[0] = int1$65#>
new  <	; Assign personVector[0].name[0] 65>

2764:
old  <	; personVector[0].name[1] = int1$100#>
new  <	; Assign personVector[0].name[1] 100>

2768:
old  <	; personVector[0].name[2] = int1$97#>
new  <	; Assign personVector[0].name[2] 97>

2772:
old  <	; personVector[0].name[3] = int1$109#>
new  <	; Assign personVector[0].name[3] 109>

2776:
old  <	; personVector[0].name[4] = int1$32#>
new  <	; Assign personVector[0].name[4] 32>

2780:
old  <	; personVector[0].name[5] = int1$66#>
new  <	; Assign personVector[0].name[5] 66>

2784:
old  <	; personVector[0].name[6] = int1$101#>
new  <	; Assign personVector[0].name[6] 101>

2788:
old  <	; personVector[0].name[7] = int1$114#>
new  <	; Assign personVector[0].name[7] 114>

2792:
old  <	; personVector[0].name[8] = int1$116#>
new  <	; Assign personVector[0].name[8] 116>

2796:
old  <	; personVector[0].name[9] = int1$105#>
new  <	; Assign personVector[0].name[9] 105>

2800:
old  <	; personVector[0].name[10] = int1$108#>
new  <	; Assign personVector[0].name[10] 108>

2804:
old  <	; personVector[0].name[11] = int1$115#>
new  <	; Assign personVector[0].name[11] 115>

2808:
old  <	; personVector[0].name[12] = int1$115#>
new  <	; Assign personVector[0].name[12] 115>

2812:
old  <	; personVector[0].name[13] = int1$111#>
new  <	; Assign personVector[0].name[13] 111>

2816:
old  <	; personVector[0].name[14] = int1$110#>
new  <	; Assign personVector[0].name[14] 110>

2820:
old  <	; personVector[0].name[15] = int1$48#>
new  <	; Assign personVector[0].name[15] 48>

2824:
old  <	; personVector[0].phone = int4$12345#>
new  <	; Assign personVector[0].phone 12345>

2828:
old  <	; personVector[1].name[0] = int1$66#>
new  <	; Assign personVector[1].name[0] 66>

2832:
old  <	; personVector[1].name[1] = int1$101#>
new  <	; Assign personVector[1].name[1] 101>

2836:
old  <	; personVector[1].name[2] = int1$114#>
new  <	; Assign personVector[1].name[2] 114>

2840:
old  <	; personVector[1].name[3] = int1$116#>
new  <	; Assign personVector[1].name[3] 116>

2844:
old  <	; personVector[1].name[4] = int1$105#>
new  <	; Assign personVector[1].name[4] 105>

2848:
old  <	; personVector[1].name[5] = int1$108#>
new  <	; Assign personVector[1].name[5] 108>

2852:
old  <	; personVector[1].name[6] = int1$32#>
new  <	; Assign personVector[1].name[6] 32>

2856:
old  <	; personVector[1].name[7] = int1$67#>
new  <	; Assign personVector[1].name[7] 67>

2860:
old  <	; personVector[1].name[8] = int1$101#>
new  <	; Assign personVector[1].name[8] 101>

2864:
old  <	; personVector[1].name[9] = int1$97#>
new  <	; Assign personVector[1].name[9] 97>

2868:
old  <	; personVector[1].name[10] = int1$115#>
new  <	; Assign personVector[1].name[10] 115>

2872:
old  <	; personVector[1].name[11] = int1$97#>
new  <	; Assign personVector[1].name[11] 97>

2876:
old  <	; personVector[1].name[12] = int1$114#>
new  <	; Assign personVector[1].name[12] 114>

2880:
old  <	; personVector[1].name[13] = int1$115#>
new  <	; Assign personVector[1].name[13] 115>

2884:
old  <	; personVector[1].name[14] = int1$115#>
new  <	; Assign personVector[1].name[14] 115>

2888:
old  <	; personVector[1].name[15] = int1$111#>
new  <	; Assign personVector[1].name[15] 111>

2892:
old  <	; personVector[1].name[16] = int1$110#>
new  <	; Assign personVector[1].name[16] 110>

2896:
old  <	; personVector[1].name[17] = int1$48#>
new  <	; Assign personVector[1].name[17] 48>

2900:
old  <	; personVector[1].phone = int4$23456#>
new  <	; Assign personVector[1].phone 23456>

2904:
old  <	; personVector[2].name[0] = int1$67#>
new  <	; Assign personVector[2].name[0] 67>

2908:
old  <	; personVector[2].name[1] = int1$101#>
new  <	; Assign personVector[2].name[1] 101>

2912:
old  <	; personVector[2].name[2] = int1$97#>
new  <	; Assign personVector[2].name[2] 97>

2916:
old  <	; personVector[2].name[3] = int1$115#>
new  <	; Assign personVector[2].name[3] 115>

2920:
old  <	; personVector[2].name[4] = int1$97#>
new  <	; Assign personVector[2].name[4] 97>

2924:
old  <	; personVector[2].name[5] = int1$114#>
new  <	; Assign personVector[2].name[5] 114>

2928:
old  <	; personVector[2].name[6] = int1$32#>
new  <	; Assign personVector[2].name[6] 32>

2932:
old  <	; personVector[2].name[7] = int1$68#>
new  <	; Assign personVector[2].name[7] 68>

2936:
old  <	; personVector[2].name[8] = int1$97#>
new  <	; Assign personVector[2].name[8] 97>

2940:
old  <	; personVector[2].name[9] = int1$118#>
new  <	; Assign personVector[2].name[9] 118>

2944:
old  <	; personVector[2].name[10] = int1$105#>
new  <	; Assign personVector[2].name[10] 105>

2948:
old  <	; personVector[2].name[11] = int1$100#>
new  <	; Assign personVector[2].name[11] 100>

2952:
old  <	; personVector[2].name[12] = int1$115#>
new  <	; Assign personVector[2].name[12] 115>

2956:
old  <	; personVector[2].name[13] = int1$115#>
new  <	; Assign personVector[2].name[13] 115>

2960:
old  <	; personVector[2].name[14] = int1$111#>
new  <	; Assign personVector[2].name[14] 111>

2964:
old  <	; personVector[2].name[15] = int1$110#>
new  <	; Assign personVector[2].name[15] 110>

2968:
old  <	; personVector[2].name[16] = int1$48#>
new  <	; Assign personVector[2].name[16] 48>

2972:
old  <	; personVector[2].phone = int4$24567#>
new  <	; Assign personVector[2].phone 24567>

2976:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 248 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2979:
old  <	; parameter string_Block2Ebin#, offset 272>
new  <	; Parameter pointer "Block.bin" 272>

2983:
old  <	; parameter string_w#, offset 280>
new  <	; Parameter pointer "w" 280>

2987:
old  <	; call function noellipse-noellipse fopen>
new  <	; Call fopen 248 0>

2994:
old  <	; post call>
new  <	; PostCall 248>

2997:
old  <	; Â£temporary3694 = return_value>
new  <	; GetReturnValue Â£temporary3694>

3000:
old  <	; outFilePtr = Â£temporary3694>
new  <	; Assign outFilePtr Â£temporary3694>

3004:
old  <	; if outFilePtr != int8$0# goto 604>
new  <	; NotEqual 604 outFilePtr 0>

3009:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 256 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3012:
old  <	; parameter stderr, offset 280>
new  <	; Parameter pointer stderr 280>

3017:
old  <	; parameter string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#, offset 288>
new  <	; Parameter pointer "Assertion failed: "%s" in file %s at line %i\n" 288>

3021:
old  <	; parameter string_outFilePtr20213D20NULL#, offset 296>
new  <	; Parameter pointer "outFilePtr != NULL" 296>

3025:
old  <	; parameter string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CFileTest2Ec#, offset 304>
new  <	; Parameter pointer "C:\Users\Stefan\Documents\vagrant\homestead\code\code\FileTest.c" 304>

3029:
old  <	; parameter int4$185#, offset 312>
new  <	; Parameter signedint 185 312>

3033:
old  <	; call function noellipse-ellipse fprintf, extra 20>
new  <	; Call fprintf 256 20>

3042:
old  <	; post call>
new  <	; PostCall 256>

3045:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 256 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3048:
old  <	; call function noellipse-noellipse abort>
new  <	; Call abort 256 0>

3055:
old  <	; post call>
new  <	; PostCall 256>

3058:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 256 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3061:
old  <	; parameter personVector, offset 280>
new  <	; Parameter pointer personVector 280>

3066:
old  <	; parameter int4$156#, offset 288>
new  <	; Parameter signedint 156 288>

3070:
old  <	; parameter int4$1#, offset 292>
new  <	; Parameter signedint 1 292>

3074:
old  <	; parameter outFilePtr, offset 296>
new  <	; Parameter pointer outFilePtr 296>

3079:
old  <	; call function noellipse-noellipse fwrite>
new  <	; Call fwrite 256 0>

3086:
old  <	; post call>
new  <	; PostCall 256>

3089:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 256 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3092:
old  <	; parameter outFilePtr, offset 280>
new  <	; Parameter pointer outFilePtr 280>

3097:
old  <	; call function noellipse-noellipse fclose>
new  <	; Call fclose 256 0>

3104:
old  <	; post call>
new  <	; PostCall 256>

3107:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 256 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3110:
old  <	; parameter string_Block2Ebin#, offset 280>
new  <	; Parameter pointer "Block.bin" 280>

3114:
old  <	; parameter string_r#, offset 288>
new  <	; Parameter pointer "r" 288>

3118:
old  <	; call function noellipse-noellipse fopen>
new  <	; Call fopen 256 0>

3125:
old  <	; post call>
new  <	; PostCall 256>

3128:
old  <	; Â£temporary3701 = return_value>
new  <	; GetReturnValue Â£temporary3701>

3131:
old  <	; inFilePtr = Â£temporary3701>
new  <	; Assign inFilePtr Â£temporary3701>

3135:
old  <	; if inFilePtr != int8$0# goto 634>
new  <	; NotEqual 634 inFilePtr 0>

3140:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 264 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3143:
old  <	; parameter stderr, offset 288>
new  <	; Parameter pointer stderr 288>

3148:
old  <	; parameter string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#, offset 296>
new  <	; Parameter pointer "Assertion failed: "%s" in file %s at line %i\n" 296>

3152:
old  <	; parameter string_inFilePtr20213D20NULL#, offset 304>
new  <	; Parameter pointer "inFilePtr != NULL" 304>

3156:
old  <	; parameter string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CFileTest2Ec#, offset 312>
new  <	; Parameter pointer "C:\Users\Stefan\Documents\vagrant\homestead\code\code\FileTest.c" 312>

3160:
old  <	; parameter int4$191#, offset 320>
new  <	; Parameter signedint 191 320>

3164:
old  <	; call function noellipse-ellipse fprintf, extra 20>
new  <	; Call fprintf 264 20>

3173:
old  <	; post call>
new  <	; PostCall 264>

3176:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 264 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3179:
old  <	; call function noellipse-noellipse abort>
new  <	; Call abort 264 0>

3186:
old  <	; post call>
new  <	; PostCall 264>

3189:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 264 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3192:
old  <	; parameter inFilePtr, offset 288>
new  <	; Parameter pointer inFilePtr 288>

3197:
old  <	; call function noellipse-noellipse feof>
new  <	; Call feof 264 0>

3204:
old  <	; post call>
new  <	; PostCall 264>

3207:
old  <	; Â£temporary3706 = return_value>
new  <	; GetReturnValue Â£temporary3706>

3210:
old  <	; if Â£temporary3706 != int4$0# goto 659>
new  <	; NotEqual 659 Â£temporary3706 0>

3215:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 264 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3218:
old  <	; Â£temporary3709 = &person>
new  <	; Address Â£temporary3709 person>

3223:
old  <	; parameter Â£temporary3709, offset 288>
new  <	; Parameter pointer Â£temporary3709 288>

3227:
old  <	; parameter int4$52#, offset 296>
new  <	; Parameter signedint 52 296>

3231:
old  <	; parameter int4$1#, offset 300>
new  <	; Parameter signedint 1 300>

3235:
old  <	; parameter inFilePtr, offset 304>
new  <	; Parameter pointer inFilePtr 304>

3240:
old  <	; call function noellipse-noellipse fread>
new  <	; Call fread 264 0>

3247:
old  <	; post call>
new  <	; PostCall 264>

3250:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 264 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3253:
old  <	; parameter string_Name20203A2025s0A#, offset 288>
new  <	; Parameter pointer "Name  : %s\n" 288>

3257:
old  <	; parameter person.name, offset 296>
new  <	; Parameter pointer person.name 296>

3262:
old  <	; call function noellipse-ellipse printf, extra 8>
new  <	; Call printf 264 8>

3271:
old  <	; post call>
new  <	; PostCall 264>

3274:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 264 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3277:
old  <	; parameter string_Phone203A2025d0A#, offset 288>
new  <	; Parameter pointer "Phone : %d\n" 288>

3281:
old  <	; parameter person.phone, offset 296>
new  <	; Parameter signedint person.phone 296>

3286:
old  <	; call function noellipse-ellipse printf, extra 4>
new  <	; Call printf 264 4>

3295:
old  <	; post call>
new  <	; PostCall 264>

3298:
old  <	; goto 634>
new  <	; Goto 634>

3302:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 264 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3305:
old  <	; parameter inFilePtr, offset 288>
new  <	; Parameter pointer inFilePtr 288>

3310:
old  <	; call function noellipse-noellipse fclose>
new  <	; Call fclose 264 0>

3317:
old  <	; post call>
new  <	; PostCall 264>

3320:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3323:
old  <	; parameter string_Test12Etxt#, offset 64>
new  <	; Parameter pointer "Test1.txt" 64>

3327:
old  <	; parameter string_r#, offset 72>
new  <	; Parameter pointer "r" 72>

3331:
old  <	; call function noellipse-noellipse fopen>
new  <	; Call fopen 40 0>

3338:
old  <	; post call>
new  <	; PostCall 40>

3341:
old  <	; Â£temporary3716 = return_value>
new  <	; GetReturnValue Â£temporary3716>

3344:
old  <	; inFilePtr = Â£temporary3716>
new  <	; Assign inFilePtr Â£temporary3716>

3348:
old  <	; if inFilePtr != int8$0# goto 682>
new  <	; NotEqual 682 inFilePtr 0>

3353:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3356:
old  <	; parameter stderr, offset 72>
new  <	; Parameter pointer stderr 72>

3361:
old  <	; parameter string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#, offset 80>
new  <	; Parameter pointer "Assertion failed: "%s" in file %s at line %i\n" 80>

3365:
old  <	; parameter string_inFilePtr20213D20NULL#, offset 88>
new  <	; Parameter pointer "inFilePtr != NULL" 88>

3369:
old  <	; parameter string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CFileTest2Ec#, offset 96>
new  <	; Parameter pointer "C:\Users\Stefan\Documents\vagrant\homestead\code\code\FileTest.c" 96>

3373:
old  <	; parameter int4$204#, offset 104>
new  <	; Parameter signedint 204 104>

3377:
old  <	; call function noellipse-ellipse fprintf, extra 20>
new  <	; Call fprintf 48 20>

3386:
old  <	; post call>
new  <	; PostCall 48>

3389:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3392:
old  <	; call function noellipse-noellipse abort>
new  <	; Call abort 48 0>

3399:
old  <	; post call>
new  <	; PostCall 48>

3402:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3405:
old  <	; parameter inFilePtr, offset 72>
new  <	; Parameter pointer inFilePtr 72>

3410:
old  <	; parameter int4$minus1#, offset 80>
new  <	; Parameter signedint -1 80>

3414:
old  <	; parameter int4$2#, offset 84>
new  <	; Parameter signedint 2 84>

3418:
old  <	; call function noellipse-noellipse fseek>
new  <	; Call fseek 48 0>

3425:
old  <	; post call>
new  <	; PostCall 48>

3428:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3431:
old  <	; parameter inFilePtr, offset 76>
new  <	; Parameter pointer inFilePtr 76>

3436:
old  <	; call function noellipse-noellipse ftell>
new  <	; Call ftell 52 0>

3443:
old  <	; post call>
new  <	; PostCall 52>

3446:
old  <	; Â£temporary3722 = return_value>
new  <	; GetReturnValue Â£temporary3722>

3449:
old  <	; Â£temporary3723 = int_to_int Â£temporary3722 (SignedInt -> Unsigned_Int)>
new  <	; IntegralToIntegral Â£temporary3723 Â£temporary3722>

3452:
old  <	; u = Â£temporary3723>
new  <	; Assign u Â£temporary3723>

3456:
old  <	; if u < int4$0# goto 716>
new  <	; UnsignedLessThan 716 u 0>

3461:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3464:
old  <	; parameter inFilePtr, offset 76>
new  <	; Parameter pointer inFilePtr 76>

3469:
old  <	; call function noellipse-noellipse fgetc>
new  <	; Call fgetc 52 0>

3476:
old  <	; post call>
new  <	; PostCall 52>

3479:
old  <	; Â£temporary3725 = return_value>
new  <	; GetReturnValue Â£temporary3725>

3482:
old  <	; Â£temporary3726 = int_to_int Â£temporary3725 (SignedInt -> SignedChar)>
new  <	; IntegralToIntegral Â£temporary3726 Â£temporary3725>

3489:
old  <	; c = Â£temporary3726>
new  <	; Assign c Â£temporary3726>

3493:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 53 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3496:
old  <	; Â£temporary3727 = int_to_int c (SignedChar -> SignedInt)>
new  <	; IntegralToIntegral Â£temporary3727 c>

3505:
old  <	; parameter Â£temporary3727, offset 77>
new  <	; Parameter signedint Â£temporary3727 77>

3509:
old  <	; call function noellipse-noellipse putchar>
new  <	; Call putchar 53 0>

3516:
old  <	; post call>
new  <	; PostCall 53>

3519:
old  <	; if u == int4$0# goto 716>
new  <	; Equal 716 u 0>

3524:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 53 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3527:
old  <	; parameter inFilePtr, offset 77>
new  <	; Parameter pointer inFilePtr 77>

3532:
old  <	; parameter int4$minus2#, offset 85>
new  <	; Parameter signedint -2 85>

3536:
old  <	; parameter int4$1#, offset 89>
new  <	; Parameter signedint 1 89>

3540:
old  <	; call function noellipse-noellipse fseek>
new  <	; Call fseek 53 0>

3547:
old  <	; post call>
new  <	; PostCall 53>

3550:
old  <	; goto 688>
new  <	; Goto 688>

3554:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3557:
old  <	; parameter string_0A0A#, offset 76>
new  <	; Parameter pointer "\n\n" 76>

3561:
old  <	; call function noellipse-ellipse printf, extra 0>
new  <	; Call printf 52 0>

3569:
old  <	; post call>
new  <	; PostCall 52>

3572:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3575:
old  <	; parameter inFilePtr, offset 76>
new  <	; Parameter pointer inFilePtr 76>

3580:
old  <	; call function noellipse-noellipse fclose>
new  <	; Call fclose 52 0>

3587:
old  <	; post call>
new  <	; PostCall 52>

3590:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3593:
old  <	; parameter string_fileexists20X2025s0A#, offset 64>
new  <	; Parameter pointer "fileexists X %s\n" 64>

3597:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3600:
old  <	; parameter string_X#, offset 96>
new  <	; Parameter pointer "X" 96>

3604:
old  <	; call function noellipse-noellipse fileexists>
new  <	; Call fileexists 72 0>

3611:
old  <	; post call>
new  <	; PostCall 72>

3614:
old  <	; Â£temporary3733 = return_value>
new  <	; GetReturnValue Â£temporary3733>

3617:
old  <	; if Â£temporary3733 == int4$0# goto 734>
new  <	; Equal 734 Â£temporary3733 0>

3622:
old  <	; Â£temporary3735 = string_Yes#>
new  <	; Assign Â£temporary3735 "Yes">

3626:
old  <	; goto 735>
new  <	; Goto 735>

3630:
old  <	; Â£temporary3735 = string_No#>
new  <	; Assign Â£temporary3735 "No">

3634:
old  <	; parameter Â£temporary3735, offset 72>
new  <	; Parameter pointer Â£temporary3735 72>

3638:
old  <	; call function noellipse-ellipse printf, extra 8>
new  <	; Call printf 40 8>

3647:
old  <	; post call>
new  <	; PostCall 40>

3650:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3653:
old  <	; parameter string_fileexists20Y2025s0A0A#, offset 64>
new  <	; Parameter pointer "fileexists Y %s\n\n" 64>

3657:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3660:
old  <	; parameter string_Y#, offset 96>
new  <	; Parameter pointer "Y" 96>

3664:
old  <	; call function noellipse-noellipse fileexists>
new  <	; Call fileexists 72 0>

3671:
old  <	; post call>
new  <	; PostCall 72>

3674:
old  <	; Â£temporary3737 = return_value>
new  <	; GetReturnValue Â£temporary3737>

3677:
old  <	; if Â£temporary3737 == int4$0# goto 748>
new  <	; Equal 748 Â£temporary3737 0>

3682:
old  <	; Â£temporary3739 = string_Yes#>
new  <	; Assign Â£temporary3739 "Yes">

3686:
old  <	; goto 749>
new  <	; Goto 749>

3690:
old  <	; Â£temporary3739 = string_No#>
new  <	; Assign Â£temporary3739 "No">

3694:
old  <	; parameter Â£temporary3739, offset 72>
new  <	; Parameter pointer Â£temporary3739 72>

3698:
old  <	; call function noellipse-ellipse printf, extra 8>
new  <	; Call printf 40 8>

3707:
old  <	; post call>
new  <	; PostCall 40>

3710:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3713:
old  <	; parameter string_PBookX2Etxt#, offset 72>
new  <	; Parameter pointer "PBookX.txt" 72>

3717:
old  <	; parameter string_r2B#, offset 80>
new  <	; Parameter pointer "r+" 80>

3721:
old  <	; call function noellipse-noellipse fopen>
new  <	; Call fopen 48 0>

3728:
old  <	; post call>
new  <	; PostCall 48>

3731:
old  <	; Â£temporary3741 = return_value>
new  <	; GetReturnValue Â£temporary3741>

3734:
old  <	; inOutFilePtr = Â£temporary3741>
new  <	; Assign inOutFilePtr Â£temporary3741>

3738:
old  <	; if inOutFilePtr != int8$0# goto 771>
new  <	; NotEqual 771 inOutFilePtr 0>

3743:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3746:
old  <	; parameter stderr, offset 80>
new  <	; Parameter pointer stderr 80>

3751:
old  <	; parameter string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#, offset 88>
new  <	; Parameter pointer "Assertion failed: "%s" in file %s at line %i\n" 88>

3755:
old  <	; parameter string_inOutFilePtr20213D20NULL#, offset 96>
new  <	; Parameter pointer "inOutFilePtr != NULL" 96>

3759:
old  <	; parameter string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CFileTest2Ec#, offset 104>
new  <	; Parameter pointer "C:\Users\Stefan\Documents\vagrant\homestead\code\code\FileTest.c" 104>

3763:
old  <	; parameter int4$228#, offset 112>
new  <	; Parameter signedint 228 112>

3767:
old  <	; call function noellipse-ellipse fprintf, extra 20>
new  <	; Call fprintf 56 20>

3776:
old  <	; post call>
new  <	; PostCall 56>

3779:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3782:
old  <	; call function noellipse-noellipse abort>
new  <	; Call abort 56 0>

3789:
old  <	; post call>
new  <	; PostCall 56>

3792:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3795:
old  <	; call function noellipse-noellipse tmpfile>
new  <	; Call tmpfile 56 0>

3802:
old  <	; post call>
new  <	; PostCall 56>

3805:
old  <	; Â£temporary3746 = return_value>
new  <	; GetReturnValue Â£temporary3746>

3808:
old  <	; tempFilePtr = Â£temporary3746>
new  <	; Assign tempFilePtr Â£temporary3746>

3812:
old  <	; if tempFilePtr != int8$0# goto 788>
new  <	; NotEqual 788 tempFilePtr 0>

3817:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3820:
old  <	; parameter stderr, offset 80>
new  <	; Parameter pointer stderr 80>

3825:
old  <	; parameter string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#, offset 88>
new  <	; Parameter pointer "Assertion failed: "%s" in file %s at line %i\n" 88>

3829:
old  <	; parameter string_tempFilePtr20213D20NULL#, offset 96>
new  <	; Parameter pointer "tempFilePtr != NULL" 96>

3833:
old  <	; parameter string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CFileTest2Ec#, offset 104>
new  <	; Parameter pointer "C:\Users\Stefan\Documents\vagrant\homestead\code\code\FileTest.c" 104>

3837:
old  <	; parameter int4$231#, offset 112>
new  <	; Parameter signedint 231 112>

3841:
old  <	; call function noellipse-ellipse fprintf, extra 20>
new  <	; Call fprintf 56 20>

3850:
old  <	; post call>
new  <	; PostCall 56>

3853:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3856:
old  <	; call function noellipse-noellipse abort>
new  <	; Call abort 56 0>

3863:
old  <	; post call>
new  <	; PostCall 56>

3866:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3869:
old  <	; parameter inOutFilePtr, offset 80>
new  <	; Parameter pointer inOutFilePtr 80>

3874:
old  <	; call function noellipse-noellipse fgetc>
new  <	; Call fgetc 56 0>

3881:
old  <	; post call>
new  <	; PostCall 56>

3884:
old  <	; Â£temporary3751 = return_value>
new  <	; GetReturnValue Â£temporary3751>

3887:
old  <	; Â£temporary3752 = int_to_int Â£temporary3751 (SignedInt -> SignedChar)>
new  <	; IntegralToIntegral Â£temporary3752 Â£temporary3751>

3894:
old  <	; c = Â£temporary3752>
new  <	; Assign c Â£temporary3752>

3898:
old  <	; Â£temporary3753 = int_to_int c (SignedChar -> SignedInt)>
new  <	; IntegralToIntegral Â£temporary3753 c>

3907:
old  <	; if Â£temporary3753 == int4$minus1# goto 809>
new  <	; Equal 809 Â£temporary3753 -1>

3912:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 57 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3915:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 57 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3918:
old  <	; Â£temporary3755 = int_to_int c (SignedChar -> SignedInt)>
new  <	; IntegralToIntegral Â£temporary3755 c>

3927:
old  <	; parameter Â£temporary3755, offset 81>
new  <	; Parameter signedint Â£temporary3755 81>

3931:
old  <	; call function noellipse-noellipse toupper>
new  <	; Call toupper 57 0>

3938:
old  <	; post call>
new  <	; PostCall 57>

3941:
old  <	; Â£temporary3756 = return_value>
new  <	; GetReturnValue Â£temporary3756>

3944:
old  <	; parameter Â£temporary3756, offset 81>
new  <	; Parameter signedint Â£temporary3756 81>

3948:
old  <	; parameter tempFilePtr, offset 85>
new  <	; Parameter pointer tempFilePtr 85>

3953:
old  <	; call function noellipse-noellipse putc>
new  <	; Call putc 57 0>

3960:
old  <	; post call>
new  <	; PostCall 57>

3963:
old  <	; goto 788>
new  <	; Goto 788>

3967:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3970:
old  <	; parameter tempFilePtr, offset 80>
new  <	; Parameter pointer tempFilePtr 80>

3975:
old  <	; call function noellipse-noellipse rewind>
new  <	; Call rewind 56 0>

3982:
old  <	; post call>
new  <	; PostCall 56>

3985:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3988:
old  <	; parameter inOutFilePtr, offset 80>
new  <	; Parameter pointer inOutFilePtr 80>

3993:
old  <	; parameter string_0A2D2D2D2D2D2D2D2D2D2D2D2D0A#, offset 88>
new  <	; Parameter pointer "\n------------\n" 88>

3997:
old  <	; call function noellipse-ellipse fprintf, extra 0>
new  <	; Call fprintf 56 0>

4005:
old  <	; post call>
new  <	; PostCall 56>

4008:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

4011:
old  <	; parameter tempFilePtr, offset 80>
new  <	; Parameter pointer tempFilePtr 80>

4016:
old  <	; call function noellipse-noellipse fgetc>
new  <	; Call fgetc 56 0>

4023:
old  <	; post call>
new  <	; PostCall 56>

4026:
old  <	; Â£temporary3761 = return_value>
new  <	; GetReturnValue Â£temporary3761>

4029:
old  <	; Â£temporary3762 = int_to_int Â£temporary3761 (SignedInt -> SignedChar)>
new  <	; IntegralToIntegral Â£temporary3762 Â£temporary3761>

4036:
old  <	; c = Â£temporary3762>
new  <	; Assign c Â£temporary3762>

4040:
old  <	; Â£temporary3763 = int_to_int c (SignedChar -> SignedInt)>
new  <	; IntegralToIntegral Â£temporary3763 c>

4049:
old  <	; if Â£temporary3763 == int4$minus1# goto 834>
new  <	; Equal 834 Â£temporary3763 -1>

4054:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 57 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

4057:
old  <	; Â£temporary3765 = int_to_int c (SignedChar -> SignedInt)>
new  <	; IntegralToIntegral Â£temporary3765 c>

4066:
old  <	; parameter Â£temporary3765, offset 81>
new  <	; Parameter signedint Â£temporary3765 81>

4070:
old  <	; parameter inOutFilePtr, offset 85>
new  <	; Parameter pointer inOutFilePtr 85>

4075:
old  <	; call function noellipse-noellipse putc>
new  <	; Call putc 57 0>

4082:
old  <	; post call>
new  <	; PostCall 57>

4085:
old  <	; goto 818>
new  <	; Goto 818>

4089:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

4092:
old  <	; parameter inOutFilePtr, offset 80>
new  <	; Parameter pointer inOutFilePtr 80>

4097:
old  <	; call function noellipse-noellipse fclose>
new  <	; Call fclose 56 0>

4104:
old  <	; post call>
new  <	; PostCall 56>

4107:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

4110:
old  <	; parameter tempFilePtr, offset 80>
new  <	; Parameter pointer tempFilePtr 80>

4115:
old  <	; call function noellipse-noellipse fclose>
new  <	; Call fclose 56 0>

4122:
old  <	; post call>
new  <	; PostCall 56>

4125:
old  <	; return>
new  <	; Return>

4132:
old  <	; function end file_test>
new  <	; FunctionEnd file_test>

11:
old  <	; initializer String>
new  <	; Initializer String <%i> <%i> <%li> <%li> <%u> <%lu>\n\n>

17:
old  <	; initializer String>
new  <	; Initializer String <%6i> <%6i> <%6li> <%6li> <%6u> <%6lu>\n>

23:
old  <	; initializer String>
new  <	; Initializer String <%+6i> <%+6i> <%+6li> <%+6li> <%+6u> <%+6lu>\n>

29:
old  <	; initializer String>
new  <	; Initializer String <%-6i> <%-6i> <%-6li> <%-6li> <%-6u> <%-6lu>\n>

35:
old  <	; initializer String>
new  <	; Initializer String <%+-6i> <%+-6i> <%+-6li> <%+-6li> <%+-6u> <%+-6lu>\n\n>

41:
old  <	; initializer String>
new  <	; Initializer String <%06i> <%06i> <%06li> <%06li> <%06u> <%06lu>\n>

47:
old  <	; initializer String>
new  <	; Initializer String <%+06i> <%+06i> <%+06li> <%+06li> <%+06u> <%+06lu>\n>

53:
old  <	; initializer String>
new  <	; Initializer String <%-06i> <%-06i> <%-06li> <%-06li> <%-06u> <%-06lu>\n>

59:
old  <	; initializer String>
new  <	; Initializer String <%+-06i> <%+-06i> <%+-06li> <%+-06li> <%+-06u> <%+-06lu>\n\n>

65:
old  <	; initializer String>
new  <	; Initializer String <% 6i> <% 6i> <% 6li> <% 6li> <% 6u> <% 6lu>\n>

71:
old  <	; initializer String>
new  <	; Initializer String <%+ 6i> <%+ 6i> <%+ 6li> <%+ 6li> <%+ 6u> <%+ 6lu>\n>

77:
old  <	; initializer String>
new  <	; Initializer String <%- 6i> <%- 6i> <%- 6li> <%- 6li> <%- 6u> <%- 6lu>\n>

83:
old  <	; initializer String>
new  <	; Initializer String <%+- 6i> <%+- 6i> <%+- 6li> <%+- 6li> <%+- 6u> <%+- 6lu>\n\n>

89:
old  <	; initializer String>
new  <	; Initializer String <%x> <%X> <%o> <%lx> <%lX> <%lo>\n>

95:
old  <	; initializer String>
new  <	; Initializer String <%#x> <%#X> <%#o> <%#lx> <%#lX> <%#lo>\n>

101:
old  <	; initializer String>
new  <	; Initializer String <%%> <%s> <%c> <%p>\n\n>

107:
old  <	; initializer String>
new  <	; Initializer String Hello, World!>

113:
old  <	; initializer String>
new  <	; Initializer String <%f> <%e> <%E> <%g> <%G>\n>

119:
old  <	; initializer String>
new  <	; Initializer String <%lf> <%le> <%lE> <%lg> <%lG>\n>

125:
old  <	; initializer String>
new  <	; Initializer String <%#f> <%#e> <%#E> <%#g> <%#G>\n>

131:
old  <	; initializer String>
new  <	; Initializer String <%#lf> <%#le> <%#lE> <%#lg> <%#lG>\n>

137:
old  <	; initializer String>
new  <	; Initializer String <%6.3f> <%6.3e> <%6.3E> <%6.3g> <%6.3G>\n>

143:
old  <	; initializer String>
new  <	; Initializer String <%6.3lf> <%6.3le> <%6.3lE> <%6.3lg> <%6.3lG>\n\n>

149:
old  <	; initializer String>
new  <	; Initializer String Please write the patterns [abc]: >

155:
old  <	; initializer String>
new  <	; Initializer String %[abc]>

161:
old  <	; initializer String>
new  <	; Initializer String \n<%s>\n>

167:
old  <	; initializer String>
new  <	; Initializer String Please write the patterns [^abc]: >

173:
old  <	; initializer String>
new  <	; Initializer String %[^abc]>

179:
old  <	; initializer String>
new  <	; Initializer String \n<%s>>

185:
old  <	; initializer Double>
new  <	; Initializer Double 123.456>

191:
old  <	; initializer Double>
new  <	; Initializer Double 123456.1>

197:
old  <	; initializer Double>
new  <	; Initializer Double -123.456>

203:
old  <	; initializer Double>
new  <	; Initializer Double -0.000000123456>

209:
old  <	; n = int4$0#>
new  <	; Assign n 0>

213:
old  <	; Â£temporary3786 = &n>
new  <	; Address Â£temporary3786 n>

218:
old  <	; p = Â£temporary3786>
new  <	; Assign p Â£temporary3786>

222:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

225:
old  <	; parameter string_3C25i3E203C25i3E203C25li3E203C25li3E203C25u3E203C25lu3E0A0A#, offset 60>
new  <	; Parameter pointer "<%i> <%i> <%li> <%li> <%u> <%lu>\n\n" 60>

229:
old  <	; parameter int4$123#, offset 68>
new  <	; Parameter signedint 123 68>

233:
old  <	; parameter int4$minus123#, offset 72>
new  <	; Parameter signedint -123 72>

237:
old  <	; parameter int8$123#, offset 76>
new  <	; Parameter signed long int 123 76>

241:
old  <	; parameter int8$minus123#, offset 84>
new  <	; Parameter signed long int -123 84>

245:
old  <	; parameter int4$123#, offset 92>
new  <	; Parameter signedint 123 92>

249:
old  <	; parameter int8$123#, offset 96>
new  <	; Parameter signed long int 123 96>

253:
old  <	; call function noellipse-ellipse printf, extra 36>
new  <	; Call printf 36 36>

262:
old  <	; post call>
new  <	; PostCall 36>

265:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

268:
old  <	; parameter string_3C256i3E203C256i3E203C256li3E203C256li3E203C256u3E203C256lu3E0A#, offset 60>
new  <	; Parameter pointer "<%6i> <%6i> <%6li> <%6li> <%6u> <%6lu>\n" 60>

272:
old  <	; parameter int4$123#, offset 68>
new  <	; Parameter signedint 123 68>

276:
old  <	; parameter int4$minus123#, offset 72>
new  <	; Parameter signedint -123 72>

280:
old  <	; parameter int8$123#, offset 76>
new  <	; Parameter signed long int 123 76>

284:
old  <	; parameter int8$minus123#, offset 84>
new  <	; Parameter signed long int -123 84>

288:
old  <	; parameter int4$123#, offset 92>
new  <	; Parameter signedint 123 92>

292:
old  <	; parameter int8$123#, offset 96>
new  <	; Parameter signed long int 123 96>

296:
old  <	; call function noellipse-ellipse printf, extra 36>
new  <	; Call printf 36 36>

305:
old  <	; post call>
new  <	; PostCall 36>

308:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

311:
old  <	; parameter string_3C252B6i3E203C252B6i3E203C252B6li3E203C252B6li3E203C252B6u3E203C252B6lu3E0A#, offset 60>
new  <	; Parameter pointer "<%+6i> <%+6i> <%+6li> <%+6li> <%+6u> <%+6lu>\n" 60>

315:
old  <	; parameter int4$123#, offset 68>
new  <	; Parameter signedint 123 68>

319:
old  <	; parameter int4$minus123#, offset 72>
new  <	; Parameter signedint -123 72>

323:
old  <	; parameter int8$123#, offset 76>
new  <	; Parameter signed long int 123 76>

327:
old  <	; parameter int8$minus123#, offset 84>
new  <	; Parameter signed long int -123 84>

331:
old  <	; parameter int4$123#, offset 92>
new  <	; Parameter signedint 123 92>

335:
old  <	; parameter int8$123#, offset 96>
new  <	; Parameter signed long int 123 96>

339:
old  <	; call function noellipse-ellipse printf, extra 36>
new  <	; Call printf 36 36>

348:
old  <	; post call>
new  <	; PostCall 36>

351:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

354:
old  <	; parameter string_3C252D6i3E203C252D6i3E203C252D6li3E203C252D6li3E203C252D6u3E203C252D6lu3E0A#, offset 60>
new  <	; Parameter pointer "<%-6i> <%-6i> <%-6li> <%-6li> <%-6u> <%-6lu>\n" 60>

358:
old  <	; parameter int4$123#, offset 68>
new  <	; Parameter signedint 123 68>

362:
old  <	; parameter int4$minus123#, offset 72>
new  <	; Parameter signedint -123 72>

366:
old  <	; parameter int8$123#, offset 76>
new  <	; Parameter signed long int 123 76>

370:
old  <	; parameter int8$minus123#, offset 84>
new  <	; Parameter signed long int -123 84>

374:
old  <	; parameter int4$123#, offset 92>
new  <	; Parameter signedint 123 92>

378:
old  <	; parameter int8$123#, offset 96>
new  <	; Parameter signed long int 123 96>

382:
old  <	; call function noellipse-ellipse printf, extra 36>
new  <	; Call printf 36 36>

391:
old  <	; post call>
new  <	; PostCall 36>

394:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

397:
old  <	; parameter string_3C252B2D6i3E203C252B2D6i3E203C252B2D6li3E203C252B2D6li3E203C252B2D6u3E203C252B2D6lu3E0A0A#, offset 60>
new  <	; Parameter pointer "<%+-6i> <%+-6i> <%+-6li> <%+-6li> <%+-6u> <%+-6lu>\n\n" 60>

401:
old  <	; parameter int4$123#, offset 68>
new  <	; Parameter signedint 123 68>

405:
old  <	; parameter int4$minus123#, offset 72>
new  <	; Parameter signedint -123 72>

409:
old  <	; parameter int8$123#, offset 76>
new  <	; Parameter signed long int 123 76>

413:
old  <	; parameter int8$minus123#, offset 84>
new  <	; Parameter signed long int -123 84>

417:
old  <	; parameter int4$123#, offset 92>
new  <	; Parameter signedint 123 92>

421:
old  <	; parameter int8$123#, offset 96>
new  <	; Parameter signed long int 123 96>

425:
old  <	; call function noellipse-ellipse printf, extra 36>
new  <	; Call printf 36 36>

434:
old  <	; post call>
new  <	; PostCall 36>

437:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

440:
old  <	; parameter string_3C2506i3E203C2506i3E203C2506li3E203C2506li3E203C2506u3E203C2506lu3E0A#, offset 60>
new  <	; Parameter pointer "<%06i> <%06i> <%06li> <%06li> <%06u> <%06lu>\n" 60>

444:
old  <	; parameter int4$123#, offset 68>
new  <	; Parameter signedint 123 68>

448:
old  <	; parameter int4$minus123#, offset 72>
new  <	; Parameter signedint -123 72>

452:
old  <	; parameter int8$123#, offset 76>
new  <	; Parameter signed long int 123 76>

456:
old  <	; parameter int8$minus123#, offset 84>
new  <	; Parameter signed long int -123 84>

460:
old  <	; parameter int4$123#, offset 92>
new  <	; Parameter signedint 123 92>

464:
old  <	; parameter int8$123#, offset 96>
new  <	; Parameter signed long int 123 96>

468:
old  <	; call function noellipse-ellipse printf, extra 36>
new  <	; Call printf 36 36>

477:
old  <	; post call>
new  <	; PostCall 36>

480:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

483:
old  <	; parameter string_3C252B06i3E203C252B06i3E203C252B06li3E203C252B06li3E203C252B06u3E203C252B06lu3E0A#, offset 60>
new  <	; Parameter pointer "<%+06i> <%+06i> <%+06li> <%+06li> <%+06u> <%+06lu>\n" 60>

487:
old  <	; parameter int4$123#, offset 68>
new  <	; Parameter signedint 123 68>

491:
old  <	; parameter int4$minus123#, offset 72>
new  <	; Parameter signedint -123 72>

495:
old  <	; parameter int8$123#, offset 76>
new  <	; Parameter signed long int 123 76>

499:
old  <	; parameter int8$minus123#, offset 84>
new  <	; Parameter signed long int -123 84>

503:
old  <	; parameter int4$123#, offset 92>
new  <	; Parameter signedint 123 92>

507:
old  <	; parameter int8$123#, offset 96>
new  <	; Parameter signed long int 123 96>

511:
old  <	; call function noellipse-ellipse printf, extra 36>
new  <	; Call printf 36 36>

520:
old  <	; post call>
new  <	; PostCall 36>

523:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

526:
old  <	; parameter string_3C252D06i3E203C252D06i3E203C252D06li3E203C252D06li3E203C252D06u3E203C252D06lu3E0A#, offset 60>
new  <	; Parameter pointer "<%-06i> <%-06i> <%-06li> <%-06li> <%-06u> <%-06lu>\n" 60>

530:
old  <	; parameter int4$123#, offset 68>
new  <	; Parameter signedint 123 68>

534:
old  <	; parameter int4$minus123#, offset 72>
new  <	; Parameter signedint -123 72>

538:
old  <	; parameter int8$123#, offset 76>
new  <	; Parameter signed long int 123 76>

542:
old  <	; parameter int8$minus123#, offset 84>
new  <	; Parameter signed long int -123 84>

546:
old  <	; parameter int4$123#, offset 92>
new  <	; Parameter signedint 123 92>

550:
old  <	; parameter int8$123#, offset 96>
new  <	; Parameter signed long int 123 96>

554:
old  <	; call function noellipse-ellipse printf, extra 36>
new  <	; Call printf 36 36>

563:
old  <	; post call>
new  <	; PostCall 36>

566:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

569:
old  <	; parameter string_3C252B2D06i3E203C252B2D06i3E203C252B2D06li3E203C252B2D06li3E203C252B2D06u3E203C252B2D06lu3E0A0A#, offset 60>
new  <	; Parameter pointer "<%+-06i> <%+-06i> <%+-06li> <%+-06li> <%+-06u> <%+-06lu>\n\n" 60>

573:
old  <	; parameter int4$123#, offset 68>
new  <	; Parameter signedint 123 68>

577:
old  <	; parameter int4$minus123#, offset 72>
new  <	; Parameter signedint -123 72>

581:
old  <	; parameter int8$123#, offset 76>
new  <	; Parameter signed long int 123 76>

585:
old  <	; parameter int8$minus123#, offset 84>
new  <	; Parameter signed long int -123 84>

589:
old  <	; parameter int4$123#, offset 92>
new  <	; Parameter signedint 123 92>

593:
old  <	; parameter int8$123#, offset 96>
new  <	; Parameter signed long int 123 96>

597:
old  <	; call function noellipse-ellipse printf, extra 36>
new  <	; Call printf 36 36>

606:
old  <	; post call>
new  <	; PostCall 36>

609:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

612:
old  <	; parameter string_3C25206i3E203C25206i3E203C25206li3E203C25206li3E203C25206u3E203C25206lu3E0A#, offset 60>
new  <	; Parameter pointer "<% 6i> <% 6i> <% 6li> <% 6li> <% 6u> <% 6lu>\n" 60>

616:
old  <	; parameter int4$123#, offset 68>
new  <	; Parameter signedint 123 68>

620:
old  <	; parameter int4$minus123#, offset 72>
new  <	; Parameter signedint -123 72>

624:
old  <	; parameter int8$123#, offset 76>
new  <	; Parameter signed long int 123 76>

628:
old  <	; parameter int8$minus123#, offset 84>
new  <	; Parameter signed long int -123 84>

632:
old  <	; parameter int4$123#, offset 92>
new  <	; Parameter signedint 123 92>

636:
old  <	; parameter int8$123#, offset 96>
new  <	; Parameter signed long int 123 96>

640:
old  <	; call function noellipse-ellipse printf, extra 36>
new  <	; Call printf 36 36>

649:
old  <	; post call>
new  <	; PostCall 36>

652:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

655:
old  <	; parameter string_3C252B206i3E203C252B206i3E203C252B206li3E203C252B206li3E203C252B206u3E203C252B206lu3E0A#, offset 60>
new  <	; Parameter pointer "<%+ 6i> <%+ 6i> <%+ 6li> <%+ 6li> <%+ 6u> <%+ 6lu>\n" 60>

659:
old  <	; parameter int4$123#, offset 68>
new  <	; Parameter signedint 123 68>

663:
old  <	; parameter int4$minus123#, offset 72>
new  <	; Parameter signedint -123 72>

667:
old  <	; parameter int8$123#, offset 76>
new  <	; Parameter signed long int 123 76>

671:
old  <	; parameter int8$minus123#, offset 84>
new  <	; Parameter signed long int -123 84>

675:
old  <	; parameter int4$123#, offset 92>
new  <	; Parameter signedint 123 92>

679:
old  <	; parameter int8$123#, offset 96>
new  <	; Parameter signed long int 123 96>

683:
old  <	; call function noellipse-ellipse printf, extra 36>
new  <	; Call printf 36 36>

692:
old  <	; post call>
new  <	; PostCall 36>

695:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

698:
old  <	; parameter string_3C252D206i3E203C252D206i3E203C252D206li3E203C252D206li3E203C252D206u3E203C252D206lu3E0A#, offset 60>
new  <	; Parameter pointer "<%- 6i> <%- 6i> <%- 6li> <%- 6li> <%- 6u> <%- 6lu>\n" 60>

702:
old  <	; parameter int4$123#, offset 68>
new  <	; Parameter signedint 123 68>

706:
old  <	; parameter int4$minus123#, offset 72>
new  <	; Parameter signedint -123 72>

710:
old  <	; parameter int8$123#, offset 76>
new  <	; Parameter signed long int 123 76>

714:
old  <	; parameter int8$minus123#, offset 84>
new  <	; Parameter signed long int -123 84>

718:
old  <	; parameter int4$123#, offset 92>
new  <	; Parameter signedint 123 92>

722:
old  <	; parameter int8$123#, offset 96>
new  <	; Parameter signed long int 123 96>

726:
old  <	; call function noellipse-ellipse printf, extra 36>
new  <	; Call printf 36 36>

735:
old  <	; post call>
new  <	; PostCall 36>

738:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

741:
old  <	; parameter string_3C252B2D206i3E203C252B2D206i3E203C252B2D206li3E203C252B2D206li3E203C252B2D206u3E203C252B2D206lu3E0A0A#, offset 60>
new  <	; Parameter pointer "<%+- 6i> <%+- 6i> <%+- 6li> <%+- 6li> <%+- 6u> <%+- 6lu>\n\n" 60>

745:
old  <	; parameter int4$123#, offset 68>
new  <	; Parameter signedint 123 68>

749:
old  <	; parameter int4$minus123#, offset 72>
new  <	; Parameter signedint -123 72>

753:
old  <	; parameter int8$123#, offset 76>
new  <	; Parameter signed long int 123 76>

757:
old  <	; parameter int8$minus123#, offset 84>
new  <	; Parameter signed long int -123 84>

761:
old  <	; parameter int4$123#, offset 92>
new  <	; Parameter signedint 123 92>

765:
old  <	; parameter int8$123#, offset 96>
new  <	; Parameter signed long int 123 96>

769:
old  <	; call function noellipse-ellipse printf, extra 36>
new  <	; Call printf 36 36>

778:
old  <	; post call>
new  <	; PostCall 36>

781:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

784:
old  <	; parameter string_3C25x3E203C25X3E203C25o3E203C25lx3E203C25lX3E203C25lo3E0A#, offset 60>
new  <	; Parameter pointer "<%x> <%X> <%o> <%lx> <%lX> <%lo>\n" 60>

788:
old  <	; parameter int4$123#, offset 68>
new  <	; Parameter signedint 123 68>

792:
old  <	; parameter int4$123#, offset 72>
new  <	; Parameter signedint 123 72>

796:
old  <	; parameter int4$123#, offset 76>
new  <	; Parameter signedint 123 76>

800:
old  <	; parameter int8$123#, offset 80>
new  <	; Parameter signed long int 123 80>

804:
old  <	; parameter int8$123#, offset 88>
new  <	; Parameter signed long int 123 88>

808:
old  <	; parameter int8$123#, offset 96>
new  <	; Parameter signed long int 123 96>

812:
old  <	; call function noellipse-ellipse printf, extra 36>
new  <	; Call printf 36 36>

821:
old  <	; post call>
new  <	; PostCall 36>

824:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

827:
old  <	; parameter string_3C2523x3E203C2523X3E203C2523o3E203C2523lx3E203C2523lX3E203C2523lo3E0A#, offset 60>
new  <	; Parameter pointer "<%#x> <%#X> <%#o> <%#lx> <%#lX> <%#lo>\n" 60>

831:
old  <	; parameter int4$123#, offset 68>
new  <	; Parameter signedint 123 68>

835:
old  <	; parameter int4$123#, offset 72>
new  <	; Parameter signedint 123 72>

839:
old  <	; parameter int4$123#, offset 76>
new  <	; Parameter signedint 123 76>

843:
old  <	; parameter int8$123#, offset 80>
new  <	; Parameter signed long int 123 80>

847:
old  <	; parameter int8$123#, offset 88>
new  <	; Parameter signed long int 123 88>

851:
old  <	; parameter int8$123#, offset 96>
new  <	; Parameter signed long int 123 96>

855:
old  <	; call function noellipse-ellipse printf, extra 36>
new  <	; Call printf 36 36>

864:
old  <	; post call>
new  <	; PostCall 36>

867:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

870:
old  <	; parameter string_3C25253E203C25s3E203C25c3E203C25p3E0A0A#, offset 60>
new  <	; Parameter pointer "<%%> <%s> <%c> <%p>\n\n" 60>

874:
old  <	; parameter string_Hello2C20World21#, offset 68>
new  <	; Parameter pointer "Hello, World!" 68>

878:
old  <	; parameter int4$88#, offset 76>
new  <	; Parameter signedint 88 76>

882:
old  <	; parameter p, offset 80>
new  <	; Parameter pointer p 80>

887:
old  <	; call function noellipse-ellipse printf, extra 20>
new  <	; Call printf 36 20>

896:
old  <	; post call>
new  <	; PostCall 36>

899:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

902:
old  <	; parameter string_3C25f3E203C25e3E203C25E3E203C25g3E203C25G3E0A#, offset 60>
new  <	; Parameter pointer "<%f> <%e> <%E> <%g> <%G>\n" 60>

906:
old  <	; push float float8$123.456#>
new  <	; PushFloat 123.456>

910:
old  <	; parameter float8$123.456#, offset 68>
new  <	; Parameter double 123.456 68>

914:
old  <	; push float float8$123.456#>
new  <	; PushFloat 123.456>

918:
old  <	; parameter float8$123.456#, offset 76>
new  <	; Parameter double 123.456 76>

922:
old  <	; push float float8$123.456#>
new  <	; PushFloat 123.456>

926:
old  <	; parameter float8$123.456#, offset 84>
new  <	; Parameter double 123.456 84>

930:
old  <	; push float float8$123456.1#>
new  <	; PushFloat 123456.1>

934:
old  <	; parameter float8$123456.1#, offset 92>
new  <	; Parameter double 123456.1 92>

938:
old  <	; push float float8$123456.1#>
new  <	; PushFloat 123456.1>

942:
old  <	; parameter float8$123456.1#, offset 100>
new  <	; Parameter double 123456.1 100>

946:
old  <	; call function noellipse-ellipse printf, extra 40>
new  <	; Call printf 36 40>

955:
old  <	; post call>
new  <	; PostCall 36>

958:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

961:
old  <	; parameter string_3C25lf3E203C25le3E203C25lE3E203C25lg3E203C25lG3E0A#, offset 60>
new  <	; Parameter pointer "<%lf> <%le> <%lE> <%lg> <%lG>\n" 60>

965:
old  <	; push float float8$123.456#>
new  <	; PushFloat 123.456>

969:
old  <	; parameter float8$123.456#, offset 68>
new  <	; Parameter longdouble 123.456 68>

973:
old  <	; push float float8$123.456#>
new  <	; PushFloat 123.456>

977:
old  <	; parameter float8$123.456#, offset 76>
new  <	; Parameter longdouble 123.456 76>

981:
old  <	; push float float8$123.456#>
new  <	; PushFloat 123.456>

985:
old  <	; parameter float8$123.456#, offset 84>
new  <	; Parameter longdouble 123.456 84>

989:
old  <	; push float float8$123456.1#>
new  <	; PushFloat 123456.1>

993:
old  <	; parameter float8$123456.1#, offset 92>
new  <	; Parameter longdouble 123456.1 92>

997:
old  <	; push float float8$123456.1#>
new  <	; PushFloat 123456.1>

1001:
old  <	; parameter float8$123456.1#, offset 100>
new  <	; Parameter longdouble 123456.1 100>

1005:
old  <	; call function noellipse-ellipse printf, extra 40>
new  <	; Call printf 36 40>

1014:
old  <	; post call>
new  <	; PostCall 36>

1017:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1020:
old  <	; parameter string_3C2523f3E203C2523e3E203C2523E3E203C2523g3E203C2523G3E0A#, offset 60>
new  <	; Parameter pointer "<%#f> <%#e> <%#E> <%#g> <%#G>\n" 60>

1024:
old  <	; push float float8$123.456#>
new  <	; PushFloat 123.456>

1028:
old  <	; parameter float8$123.456#, offset 68>
new  <	; Parameter double 123.456 68>

1032:
old  <	; push float float8$123.456#>
new  <	; PushFloat 123.456>

1036:
old  <	; parameter float8$123.456#, offset 76>
new  <	; Parameter double 123.456 76>

1040:
old  <	; push float float8$123.456#>
new  <	; PushFloat 123.456>

1044:
old  <	; parameter float8$123.456#, offset 84>
new  <	; Parameter double 123.456 84>

1048:
old  <	; push float float8$123.456#>
new  <	; PushFloat 123.456>

1052:
old  <	; parameter float8$123.456#, offset 92>
new  <	; Parameter double 123.456 92>

1056:
old  <	; push float float8$123.456#>
new  <	; PushFloat 123.456>

1060:
old  <	; parameter float8$123.456#, offset 100>
new  <	; Parameter double 123.456 100>

1064:
old  <	; call function noellipse-ellipse printf, extra 40>
new  <	; Call printf 36 40>

1073:
old  <	; post call>
new  <	; PostCall 36>

1076:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1079:
old  <	; parameter string_3C2523lf3E203C2523le3E203C2523lE3E203C2523lg3E203C2523lG3E0A#, offset 60>
new  <	; Parameter pointer "<%#lf> <%#le> <%#lE> <%#lg> <%#lG>\n" 60>

1083:
old  <	; push float float8$123.456#>
new  <	; PushFloat 123.456>

1087:
old  <	; parameter float8$123.456#, offset 68>
new  <	; Parameter longdouble 123.456 68>

1091:
old  <	; push float float8$123.456#>
new  <	; PushFloat 123.456>

1095:
old  <	; parameter float8$123.456#, offset 76>
new  <	; Parameter longdouble 123.456 76>

1099:
old  <	; push float float8$123.456#>
new  <	; PushFloat 123.456>

1103:
old  <	; parameter float8$123.456#, offset 84>
new  <	; Parameter longdouble 123.456 84>

1107:
old  <	; push float float8$123.456#>
new  <	; PushFloat 123.456>

1111:
old  <	; parameter float8$123.456#, offset 92>
new  <	; Parameter longdouble 123.456 92>

1115:
old  <	; push float float8$123.456#>
new  <	; PushFloat 123.456>

1119:
old  <	; parameter float8$123.456#, offset 100>
new  <	; Parameter longdouble 123.456 100>

1123:
old  <	; call function noellipse-ellipse printf, extra 40>
new  <	; Call printf 36 40>

1132:
old  <	; post call>
new  <	; PostCall 36>

1135:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1138:
old  <	; parameter string_3C2562E3f3E203C2562E3e3E203C2562E3E3E203C2562E3g3E203C2562E3G3E0A#, offset 60>
new  <	; Parameter pointer "<%6.3f> <%6.3e> <%6.3E> <%6.3g> <%6.3G>\n" 60>

1142:
old  <	; push float float8$123.456#>
new  <	; PushFloat 123.456>

1146:
old  <	; parameter float8$123.456#, offset 68>
new  <	; Parameter double 123.456 68>

1150:
old  <	; push float float8$123.456#>
new  <	; PushFloat 123.456>

1154:
old  <	; parameter float8$123.456#, offset 76>
new  <	; Parameter double 123.456 76>

1158:
old  <	; push float float8$123.456#>
new  <	; PushFloat 123.456>

1162:
old  <	; parameter float8$123.456#, offset 84>
new  <	; Parameter double 123.456 84>

1166:
old  <	; push float float8$123.456#>
new  <	; PushFloat 123.456>

1170:
old  <	; parameter float8$123.456#, offset 92>
new  <	; Parameter double 123.456 92>

1174:
old  <	; push float float8$123.456#>
new  <	; PushFloat 123.456>

1178:
old  <	; parameter float8$123.456#, offset 100>
new  <	; Parameter double 123.456 100>

1182:
old  <	; call function noellipse-ellipse printf, extra 40>
new  <	; Call printf 36 40>

1191:
old  <	; post call>
new  <	; PostCall 36>

1194:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1197:
old  <	; parameter string_3C2562E3lf3E203C2562E3le3E203C2562E3lE3E203C2562E3lg3E203C2562E3lG3E0A0A#, offset 60>
new  <	; Parameter pointer "<%6.3lf> <%6.3le> <%6.3lE> <%6.3lg> <%6.3lG>\n\n" 60>

1201:
old  <	; push float float8$123.456#>
new  <	; PushFloat 123.456>

1205:
old  <	; parameter float8$123.456#, offset 68>
new  <	; Parameter longdouble 123.456 68>

1209:
old  <	; push float float8$123.456#>
new  <	; PushFloat 123.456>

1213:
old  <	; parameter float8$123.456#, offset 76>
new  <	; Parameter longdouble 123.456 76>

1217:
old  <	; push float float8$123.456#>
new  <	; PushFloat 123.456>

1221:
old  <	; parameter float8$123.456#, offset 84>
new  <	; Parameter longdouble 123.456 84>

1225:
old  <	; push float float8$123.456#>
new  <	; PushFloat 123.456>

1229:
old  <	; parameter float8$123.456#, offset 92>
new  <	; Parameter longdouble 123.456 92>

1233:
old  <	; push float float8$123.456#>
new  <	; PushFloat 123.456>

1237:
old  <	; parameter float8$123.456#, offset 100>
new  <	; Parameter longdouble 123.456 100>

1241:
old  <	; call function noellipse-ellipse printf, extra 40>
new  <	; Call printf 36 40>

1250:
old  <	; post call>
new  <	; PostCall 36>

1253:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1256:
old  <	; parameter string_3C25f3E203C25e3E203C25E3E203C25g3E203C25G3E0A#, offset 60>
new  <	; Parameter pointer "<%f> <%e> <%E> <%g> <%G>\n" 60>

1260:
old  <	; push float float8$minus123.456#>
new  <	; PushFloat -123.456>

1264:
old  <	; parameter float8$minus123.456#, offset 68>
new  <	; Parameter double -123.456 68>

1268:
old  <	; push float float8$minus123.456#>
new  <	; PushFloat -123.456>

1272:
old  <	; parameter float8$minus123.456#, offset 76>
new  <	; Parameter double -123.456 76>

1276:
old  <	; push float float8$minus123.456#>
new  <	; PushFloat -123.456>

1280:
old  <	; parameter float8$minus123.456#, offset 84>
new  <	; Parameter double -123.456 84>

1284:
old  <	; push float float8$minus0.000000123456#>
new  <	; PushFloat -0.000000123456>

1288:
old  <	; parameter float8$minus0.000000123456#, offset 92>
new  <	; Parameter double -0.000000123456 92>

1292:
old  <	; push float float8$minus0.000000123456#>
new  <	; PushFloat -0.000000123456>

1296:
old  <	; parameter float8$minus0.000000123456#, offset 100>
new  <	; Parameter double -0.000000123456 100>

1300:
old  <	; call function noellipse-ellipse printf, extra 40>
new  <	; Call printf 36 40>

1309:
old  <	; post call>
new  <	; PostCall 36>

1312:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1315:
old  <	; parameter string_3C25lf3E203C25le3E203C25lE3E203C25lg3E203C25lG3E0A#, offset 60>
new  <	; Parameter pointer "<%lf> <%le> <%lE> <%lg> <%lG>\n" 60>

1319:
old  <	; push float float8$minus123.456#>
new  <	; PushFloat -123.456>

1323:
old  <	; parameter float8$minus123.456#, offset 68>
new  <	; Parameter longdouble -123.456 68>

1327:
old  <	; push float float8$minus123.456#>
new  <	; PushFloat -123.456>

1331:
old  <	; parameter float8$minus123.456#, offset 76>
new  <	; Parameter longdouble -123.456 76>

1335:
old  <	; push float float8$minus123.456#>
new  <	; PushFloat -123.456>

1339:
old  <	; parameter float8$minus123.456#, offset 84>
new  <	; Parameter longdouble -123.456 84>

1343:
old  <	; push float float8$minus0.000000123456#>
new  <	; PushFloat -0.000000123456>

1347:
old  <	; parameter float8$minus0.000000123456#, offset 92>
new  <	; Parameter longdouble -0.000000123456 92>

1351:
old  <	; push float float8$minus0.000000123456#>
new  <	; PushFloat -0.000000123456>

1355:
old  <	; parameter float8$minus0.000000123456#, offset 100>
new  <	; Parameter longdouble -0.000000123456 100>

1359:
old  <	; call function noellipse-ellipse printf, extra 40>
new  <	; Call printf 36 40>

1368:
old  <	; post call>
new  <	; PostCall 36>

1371:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1374:
old  <	; parameter string_3C2523f3E203C2523e3E203C2523E3E203C2523g3E203C2523G3E0A#, offset 60>
new  <	; Parameter pointer "<%#f> <%#e> <%#E> <%#g> <%#G>\n" 60>

1378:
old  <	; push float float8$minus123.456#>
new  <	; PushFloat -123.456>

1382:
old  <	; parameter float8$minus123.456#, offset 68>
new  <	; Parameter double -123.456 68>

1386:
old  <	; push float float8$minus123.456#>
new  <	; PushFloat -123.456>

1390:
old  <	; parameter float8$minus123.456#, offset 76>
new  <	; Parameter double -123.456 76>

1394:
old  <	; push float float8$minus123.456#>
new  <	; PushFloat -123.456>

1398:
old  <	; parameter float8$minus123.456#, offset 84>
new  <	; Parameter double -123.456 84>

1402:
old  <	; push float float8$minus123.456#>
new  <	; PushFloat -123.456>

1406:
old  <	; parameter float8$minus123.456#, offset 92>
new  <	; Parameter double -123.456 92>

1410:
old  <	; push float float8$minus123.456#>
new  <	; PushFloat -123.456>

1414:
old  <	; parameter float8$minus123.456#, offset 100>
new  <	; Parameter double -123.456 100>

1418:
old  <	; call function noellipse-ellipse printf, extra 40>
new  <	; Call printf 36 40>

1427:
old  <	; post call>
new  <	; PostCall 36>

1430:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1433:
old  <	; parameter string_3C2523lf3E203C2523le3E203C2523lE3E203C2523lg3E203C2523lG3E0A#, offset 60>
new  <	; Parameter pointer "<%#lf> <%#le> <%#lE> <%#lg> <%#lG>\n" 60>

1437:
old  <	; push float float8$minus123.456#>
new  <	; PushFloat -123.456>

1441:
old  <	; parameter float8$minus123.456#, offset 68>
new  <	; Parameter longdouble -123.456 68>

1445:
old  <	; push float float8$minus123.456#>
new  <	; PushFloat -123.456>

1449:
old  <	; parameter float8$minus123.456#, offset 76>
new  <	; Parameter longdouble -123.456 76>

1453:
old  <	; push float float8$minus123.456#>
new  <	; PushFloat -123.456>

1457:
old  <	; parameter float8$minus123.456#, offset 84>
new  <	; Parameter longdouble -123.456 84>

1461:
old  <	; push float float8$minus123.456#>
new  <	; PushFloat -123.456>

1465:
old  <	; parameter float8$minus123.456#, offset 92>
new  <	; Parameter longdouble -123.456 92>

1469:
old  <	; push float float8$minus123.456#>
new  <	; PushFloat -123.456>

1473:
old  <	; parameter float8$minus123.456#, offset 100>
new  <	; Parameter longdouble -123.456 100>

1477:
old  <	; call function noellipse-ellipse printf, extra 40>
new  <	; Call printf 36 40>

1486:
old  <	; post call>
new  <	; PostCall 36>

1489:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1492:
old  <	; parameter string_3C2562E3f3E203C2562E3e3E203C2562E3E3E203C2562E3g3E203C2562E3G3E0A#, offset 60>
new  <	; Parameter pointer "<%6.3f> <%6.3e> <%6.3E> <%6.3g> <%6.3G>\n" 60>

1496:
old  <	; push float float8$minus123.456#>
new  <	; PushFloat -123.456>

1500:
old  <	; parameter float8$minus123.456#, offset 68>
new  <	; Parameter double -123.456 68>

1504:
old  <	; push float float8$minus123.456#>
new  <	; PushFloat -123.456>

1508:
old  <	; parameter float8$minus123.456#, offset 76>
new  <	; Parameter double -123.456 76>

1512:
old  <	; push float float8$minus123.456#>
new  <	; PushFloat -123.456>

1516:
old  <	; parameter float8$minus123.456#, offset 84>
new  <	; Parameter double -123.456 84>

1520:
old  <	; push float float8$minus123.456#>
new  <	; PushFloat -123.456>

1524:
old  <	; parameter float8$minus123.456#, offset 92>
new  <	; Parameter double -123.456 92>

1528:
old  <	; push float float8$minus123.456#>
new  <	; PushFloat -123.456>

1532:
old  <	; parameter float8$minus123.456#, offset 100>
new  <	; Parameter double -123.456 100>

1536:
old  <	; call function noellipse-ellipse printf, extra 40>
new  <	; Call printf 36 40>

1545:
old  <	; post call>
new  <	; PostCall 36>

1548:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1551:
old  <	; parameter string_3C2562E3lf3E203C2562E3le3E203C2562E3lE3E203C2562E3lg3E203C2562E3lG3E0A0A#, offset 60>
new  <	; Parameter pointer "<%6.3lf> <%6.3le> <%6.3lE> <%6.3lg> <%6.3lG>\n\n" 60>

1555:
old  <	; push float float8$minus123.456#>
new  <	; PushFloat -123.456>

1559:
old  <	; parameter float8$minus123.456#, offset 68>
new  <	; Parameter longdouble -123.456 68>

1563:
old  <	; push float float8$minus123.456#>
new  <	; PushFloat -123.456>

1567:
old  <	; parameter float8$minus123.456#, offset 76>
new  <	; Parameter longdouble -123.456 76>

1571:
old  <	; push float float8$minus123.456#>
new  <	; PushFloat -123.456>

1575:
old  <	; parameter float8$minus123.456#, offset 84>
new  <	; Parameter longdouble -123.456 84>

1579:
old  <	; push float float8$minus123.456#>
new  <	; PushFloat -123.456>

1583:
old  <	; parameter float8$minus123.456#, offset 92>
new  <	; Parameter longdouble -123.456 92>

1587:
old  <	; push float float8$minus123.456#>
new  <	; PushFloat -123.456>

1591:
old  <	; parameter float8$minus123.456#, offset 100>
new  <	; Parameter longdouble -123.456 100>

1595:
old  <	; call function noellipse-ellipse printf, extra 40>
new  <	; Call printf 36 40>

1604:
old  <	; post call>
new  <	; PostCall 36>

1607:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 124 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1610:
old  <	; parameter string_Please20write20the20patterns205Babc5D3A20#, offset 148>
new  <	; Parameter pointer "Please write the patterns [abc]: " 148>

1614:
old  <	; call function noellipse-ellipse printf, extra 0>
new  <	; Call printf 124 0>

1622:
old  <	; post call>
new  <	; PostCall 124>

1625:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 124 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1628:
old  <	; parameter string_255Babc5D#, offset 148>
new  <	; Parameter pointer "%[abc]" 148>

1632:
old  <	; parameter s, offset 156>
new  <	; Parameter pointer s 156>

1637:
old  <	; call function noellipse-ellipse scanf, extra 8>
new  <	; Call scanf 124 8>

1646:
old  <	; post call>
new  <	; PostCall 124>

1649:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 124 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1652:
old  <	; parameter string_0A3C25s3E0A#, offset 148>
new  <	; Parameter pointer "\n<%s>\n" 148>

1656:
old  <	; parameter s, offset 156>
new  <	; Parameter pointer s 156>

1661:
old  <	; call function noellipse-ellipse printf, extra 8>
new  <	; Call printf 124 8>

1670:
old  <	; post call>
new  <	; PostCall 124>

1673:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 124 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1676:
old  <	; parameter string_Please20write20the20patterns205B5Eabc5D3A20#, offset 148>
new  <	; Parameter pointer "Please write the patterns [^abc]: " 148>

1680:
old  <	; call function noellipse-ellipse printf, extra 0>
new  <	; Call printf 124 0>

1688:
old  <	; post call>
new  <	; PostCall 124>

1691:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 124 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1694:
old  <	; parameter string_255B5Eabc5D#, offset 148>
new  <	; Parameter pointer "%[^abc]" 148>

1698:
old  <	; parameter s, offset 156>
new  <	; Parameter pointer s 156>

1703:
old  <	; call function noellipse-ellipse scanf, extra 8>
new  <	; Call scanf 124 8>

1712:
old  <	; post call>
new  <	; PostCall 124>

1715:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 124 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1718:
old  <	; parameter string_0A3C25s3E#, offset 148>
new  <	; Parameter pointer "\n<%s>" 148>

1722:
old  <	; parameter s, offset 156>
new  <	; Parameter pointer s 156>

1727:
old  <	; call function noellipse-ellipse printf, extra 8>
new  <	; Call printf 124 8>

1736:
old  <	; post call>
new  <	; PostCall 124>

1739:
old  <	; return>
new  <	; Return>

1746:
old  <	; function end stdio_test>
new  <	; FunctionEnd stdio_test>

16:
old  <	; initializer String>
new  <	; Initializer String Floating point error: %i\n>

22:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

25:
old  <	; parameter string_Floating20point20error3A2025i0A#, offset 52>
new  <	; Parameter pointer "Floating point error: %i\n" 52>

29:
old  <	; parameter sig, offset 60>
new  <	; Parameter signedint sig 60>

34:
old  <	; call function noellipse-ellipse printf, extra 4>
new  <	; Call printf 28 4>

43:
old  <	; post call>
new  <	; PostCall 28>

46:
old  <	; return>
new  <	; Return>

53:
old  <	; function end floating_point_error>
new  <	; FunctionEnd floating_point_error>

58:
old  <	; initializer String>
new  <	; Initializer String exit1\n>

64:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

67:
old  <	; parameter string_exit10A#, offset 48>
new  <	; Parameter pointer "exit1\n" 48>

71:
old  <	; call function noellipse-ellipse printf, extra 0>
new  <	; Call printf 24 0>

79:
old  <	; post call>
new  <	; PostCall 24>

82:
old  <	; return>
new  <	; Return>

89:
old  <	; function end exit_handle1>
new  <	; FunctionEnd exit_handle1>

94:
old  <	; initializer String>
new  <	; Initializer String exit2\n>

100:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

103:
old  <	; parameter string_exit20A#, offset 48>
new  <	; Parameter pointer "exit2\n" 48>

107:
old  <	; call function noellipse-ellipse printf, extra 0>
new  <	; Call printf 24 0>

115:
old  <	; post call>
new  <	; PostCall 24>

118:
old  <	; return>
new  <	; Return>

125:
old  <	; function end exit_handle2>
new  <	; FunctionEnd exit_handle2>

130:
old  <	; initializer String>
new  <	; Initializer String exit3\n>

136:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

139:
old  <	; parameter string_exit30A#, offset 48>
new  <	; Parameter pointer "exit3\n" 48>

143:
old  <	; call function noellipse-ellipse printf, extra 0>
new  <	; Call printf 24 0>

151:
old  <	; post call>
new  <	; PostCall 24>

154:
old  <	; return>
new  <	; Return>

161:
old  <	; function end exit_handle3>
new  <	; FunctionEnd exit_handle3>

166:
old  <	; initializer String>
new  <	; Initializer String %i\n>

172:
old  <	; a = int4$1#>
new  <	; Assign a 1>

176:
old  <	; b = int4$1#>
new  <	; Assign b 1>

180:
old  <	; c = a / b>
new  <	; SignedDivide c a b>

187:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

190:
old  <	; parameter string_25i0A#, offset 60>
new  <	; Parameter pointer "%i\n" 60>

194:
old  <	; parameter c, offset 68>
new  <	; Parameter signedint c 68>

199:
old  <	; call function noellipse-ellipse printf, extra 4>
new  <	; Call printf 36 4>

208:
old  <	; post call>
new  <	; PostCall 36>

211:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

214:
old  <	; parameter exit_handle1, offset 60>
new  <	; Parameter pointer exit_handle1 60>

218:
old  <	; call function noellipse-noellipse atexit>
new  <	; Call atexit 36 0>

225:
old  <	; post call>
new  <	; PostCall 36>

228:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

231:
old  <	; parameter exit_handle2, offset 60>
new  <	; Parameter pointer exit_handle2 60>

235:
old  <	; call function noellipse-noellipse atexit>
new  <	; Call atexit 36 0>

242:
old  <	; post call>
new  <	; PostCall 36>

245:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

248:
old  <	; parameter exit_handle3, offset 60>
new  <	; Parameter pointer exit_handle3 60>

252:
old  <	; call function noellipse-noellipse atexit>
new  <	; Call atexit 36 0>

259:
old  <	; post call>
new  <	; PostCall 36>

262:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

265:
old  <	; parameter int4$0#, offset 60>
new  <	; Parameter signedint 0 60>

269:
old  <	; call function noellipse-noellipse exit>
new  <	; Call exit 36 0>

276:
old  <	; post call>
new  <	; PostCall 36>

279:
old  <	; return>
new  <	; Return>

286:
old  <	; function end signal_test>
new  <	; FunctionEnd signal_test>

12:
old  <	; initializer SignedInt>
new  <	; Initializer SignedInt 0>

18:
old  <	; initializer String>
new  <	; Initializer String %i >

24:
old  <	; empty>
new  <	; Empty>

27:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

30:
old  <	; parameter string_25i20#, offset 48>
new  <	; Parameter pointer "%i " 48>

34:
old  <	; Â£temporary3892 = i>
new  <	; Assign Â£temporary3892 i>

38:
old  <	; i = i + int4$1#>
new  <	; BinaryAdd i i 1>

42:
old  <	; parameter Â£temporary3892, offset 56>
new  <	; Parameter signedint Â£temporary3892 56>

46:
old  <	; call function noellipse-ellipse printf, extra 4>
new  <	; Call printf 24 4>

55:
old  <	; post call>
new  <	; PostCall 24>

58:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

61:
old  <	; call function noellipse-noellipse stack_test>
new  <	; Call stack_test 24 0>

68:
old  <	; post call>
new  <	; PostCall 24>

71:
old  <	; return>
new  <	; Return>

78:
old  <	; function end stack_test>
new  <	; FunctionEnd stack_test>

83:
old  <	; initializer String>
new  <	; Initializer String 1024 bytes-block number: %i\n>

89:
old  <	; count = int4$0#>
new  <	; Assign count 0>

93:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

96:
old  <	; parameter int4$1024#, offset 60>
new  <	; Parameter signedint 1024 60>

100:
old  <	; call function noellipse-noellipse malloc>
new  <	; Call malloc 36 0>

107:
old  <	; post call>
new  <	; PostCall 36>

110:
old  <	; Â£temporary3895 = return_value>
new  <	; GetReturnValue Â£temporary3895>

113:
old  <	; pointer = Â£temporary3895>
new  <	; Assign pointer Â£temporary3895>

117:
old  <	; if pointer == int8$0# goto 17>
new  <	; Equal 17 pointer 0>

122:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

125:
old  <	; parameter string_102420bytes2Dblock20number3A2025i0A#, offset 60>
new  <	; Parameter pointer "1024 bytes-block number: %i\n" 60>

129:
old  <	; Â£temporary3897 = count>
new  <	; Assign Â£temporary3897 count>

133:
old  <	; count = count + int4$1#>
new  <	; BinaryAdd count count 1>

137:
old  <	; parameter Â£temporary3897, offset 68>
new  <	; Parameter signedint Â£temporary3897 68>

141:
old  <	; parameter pointer, offset 72>
new  <	; Parameter pointer pointer 72>

146:
old  <	; call function noellipse-ellipse printf, extra 12>
new  <	; Call printf 36 12>

155:
old  <	; post call>
new  <	; PostCall 36>

158:
old  <	; goto 1>
new  <	; Goto 1>

162:
old  <	; return>
new  <	; Return>

169:
old  <	; function end heap_test>
new  <	; FunctionEnd heap_test>

20:
old  <	; empty>
new  <	; Empty>

23:
old  <	; p = int8$0#>
new  <	; Assign p 0>

27:
old  <	; r = int8$0#>
new  <	; Assign r 0>

31:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 44 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

34:
old  <	; parameter int4$96#, offset 68>
new  <	; Parameter signedint 96 68>

38:
old  <	; call function noellipse-noellipse malloc>
new  <	; Call malloc 44 0>

45:
old  <	; post call>
new  <	; PostCall 44>

48:
old  <	; Â£temporary3899 = return_value>
new  <	; GetReturnValue Â£temporary3899>

51:
old  <	; q = Â£temporary3899>
new  <	; Assign q Â£temporary3899>

55:
old  <	; index = int4$0#>
new  <	; Assign index 0>

59:
old  <	; if index >= int4$10# goto 21>
new  <	; SignedGreaterThanEqual 21 index 10>

64:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

67:
old  <	; parameter int4$96#, offset 76>
new  <	; Parameter signedint 96 76>

71:
old  <	; call function noellipse-noellipse malloc>
new  <	; Call malloc 52 0>

78:
old  <	; post call>
new  <	; PostCall 52>

81:
old  <	; Â£temporary3902 = return_value>
new  <	; GetReturnValue Â£temporary3902>

84:
old  <	; p = Â£temporary3902>
new  <	; Assign p Â£temporary3902>

88:
old  <	; if index != int4$5# goto 19>
new  <	; NotEqual 19 index 5>

93:
old  <	; r = p>
new  <	; Assign r p>

98:
old  <	; index = index + int4$1#>
new  <	; BinaryAdd index index 1>

102:
old  <	; goto 10>
new  <	; Goto 10>

106:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

109:
old  <	; call function noellipse-noellipse print_heap>
new  <	; Call print_heap 52 0>

116:
old  <	; post call>
new  <	; PostCall 52>

119:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

122:
old  <	; parameter q, offset 76>
new  <	; Parameter pointer q 76>

127:
old  <	; parameter int4$50#, offset 84>
new  <	; Parameter signedint 50 84>

131:
old  <	; call function noellipse-noellipse realloc>
new  <	; Call realloc 52 0>

138:
old  <	; post call>
new  <	; PostCall 52>

141:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

144:
old  <	; call function noellipse-noellipse print_heap>
new  <	; Call print_heap 52 0>

151:
old  <	; post call>
new  <	; PostCall 52>

154:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

157:
old  <	; parameter r, offset 76>
new  <	; Parameter pointer r 76>

162:
old  <	; parameter int4$50#, offset 84>
new  <	; Parameter signedint 50 84>

166:
old  <	; call function noellipse-noellipse realloc>
new  <	; Call realloc 52 0>

173:
old  <	; post call>
new  <	; PostCall 52>

176:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

179:
old  <	; call function noellipse-noellipse print_heap>
new  <	; Call print_heap 52 0>

186:
old  <	; post call>
new  <	; PostCall 52>

189:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

192:
old  <	; parameter p, offset 76>
new  <	; Parameter pointer p 76>

197:
old  <	; parameter int4$50#, offset 84>
new  <	; Parameter signedint 50 84>

201:
old  <	; call function noellipse-noellipse realloc>
new  <	; Call realloc 52 0>

208:
old  <	; post call>
new  <	; PostCall 52>

211:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

214:
old  <	; call function noellipse-noellipse print_heap>
new  <	; Call print_heap 52 0>

221:
old  <	; post call>
new  <	; PostCall 52>

224:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

227:
old  <	; parameter q, offset 76>
new  <	; Parameter pointer q 76>

232:
old  <	; parameter int4$200#, offset 84>
new  <	; Parameter signedint 200 84>

236:
old  <	; call function noellipse-noellipse realloc>
new  <	; Call realloc 52 0>

243:
old  <	; post call>
new  <	; PostCall 52>

246:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

249:
old  <	; call function noellipse-noellipse print_heap>
new  <	; Call print_heap 52 0>

256:
old  <	; post call>
new  <	; PostCall 52>

259:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

262:
old  <	; parameter r, offset 76>
new  <	; Parameter pointer r 76>

267:
old  <	; parameter int4$200#, offset 84>
new  <	; Parameter signedint 200 84>

271:
old  <	; call function noellipse-noellipse realloc>
new  <	; Call realloc 52 0>

278:
old  <	; post call>
new  <	; PostCall 52>

281:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

284:
old  <	; call function noellipse-noellipse print_heap>
new  <	; Call print_heap 52 0>

291:
old  <	; post call>
new  <	; PostCall 52>

294:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

297:
old  <	; parameter p, offset 76>
new  <	; Parameter pointer p 76>

302:
old  <	; parameter int4$200#, offset 84>
new  <	; Parameter signedint 200 84>

306:
old  <	; call function noellipse-noellipse realloc>
new  <	; Call realloc 52 0>

313:
old  <	; post call>
new  <	; PostCall 52>

316:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

319:
old  <	; call function noellipse-noellipse print_heap>
new  <	; Call print_heap 52 0>

326:
old  <	; post call>
new  <	; PostCall 52>

329:
old  <	; return>
new  <	; Return>

336:
old  <	; function end malloc_test2>
new  <	; FunctionEnd malloc_test2>

341:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

344:
old  <	; parameter int4$96#, offset 48>
new  <	; Parameter signedint 96 48>

348:
old  <	; parameter int4$1#, offset 52>
new  <	; Parameter signedint 1 52>

352:
old  <	; call function noellipse-noellipse calloc>
new  <	; Call calloc 24 0>

359:
old  <	; post call>
new  <	; PostCall 24>

362:
old  <	; Â£temporary3917 = return_value>
new  <	; GetReturnValue Â£temporary3917>

365:
old  <	; a = Â£temporary3917>
new  <	; Assign a Â£temporary3917>

369:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

372:
old  <	; parameter int4$96#, offset 56>
new  <	; Parameter signedint 96 56>

376:
old  <	; parameter int4$1#, offset 60>
new  <	; Parameter signedint 1 60>

380:
old  <	; call function noellipse-noellipse calloc>
new  <	; Call calloc 32 0>

387:
old  <	; post call>
new  <	; PostCall 32>

390:
old  <	; Â£temporary3918 = return_value>
new  <	; GetReturnValue Â£temporary3918>

393:
old  <	; b = Â£temporary3918>
new  <	; Assign b Â£temporary3918>

397:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

400:
old  <	; parameter int4$96#, offset 64>
new  <	; Parameter signedint 96 64>

404:
old  <	; parameter int4$1#, offset 68>
new  <	; Parameter signedint 1 68>

408:
old  <	; call function noellipse-noellipse calloc>
new  <	; Call calloc 40 0>

415:
old  <	; post call>
new  <	; PostCall 40>

418:
old  <	; Â£temporary3919 = return_value>
new  <	; GetReturnValue Â£temporary3919>

421:
old  <	; c = Â£temporary3919>
new  <	; Assign c Â£temporary3919>

425:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

428:
old  <	; parameter int4$96#, offset 72>
new  <	; Parameter signedint 96 72>

432:
old  <	; parameter int4$1#, offset 76>
new  <	; Parameter signedint 1 76>

436:
old  <	; call function noellipse-noellipse calloc>
new  <	; Call calloc 48 0>

443:
old  <	; post call>
new  <	; PostCall 48>

446:
old  <	; Â£temporary3920 = return_value>
new  <	; GetReturnValue Â£temporary3920>

449:
old  <	; d = Â£temporary3920>
new  <	; Assign d Â£temporary3920>

453:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

456:
old  <	; parameter int4$96#, offset 80>
new  <	; Parameter signedint 96 80>

460:
old  <	; parameter int4$1#, offset 84>
new  <	; Parameter signedint 1 84>

464:
old  <	; call function noellipse-noellipse calloc>
new  <	; Call calloc 56 0>

471:
old  <	; post call>
new  <	; PostCall 56>

474:
old  <	; Â£temporary3921 = return_value>
new  <	; GetReturnValue Â£temporary3921>

477:
old  <	; e = Â£temporary3921>
new  <	; Assign e Â£temporary3921>

481:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 64 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

484:
old  <	; call function noellipse-noellipse print_heap>
new  <	; Call print_heap 64 0>

491:
old  <	; post call>
new  <	; PostCall 64>

494:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 64 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

497:
old  <	; parameter a, offset 88>
new  <	; Parameter pointer a 88>

502:
old  <	; call function noellipse-noellipse free>
new  <	; Call free 64 0>

509:
old  <	; post call>
new  <	; PostCall 64>

512:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 64 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

515:
old  <	; parameter b, offset 88>
new  <	; Parameter pointer b 88>

520:
old  <	; call function noellipse-noellipse free>
new  <	; Call free 64 0>

527:
old  <	; post call>
new  <	; PostCall 64>

530:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 64 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

533:
old  <	; parameter c, offset 88>
new  <	; Parameter pointer c 88>

538:
old  <	; call function noellipse-noellipse free>
new  <	; Call free 64 0>

545:
old  <	; post call>
new  <	; PostCall 64>

548:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 64 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

551:
old  <	; parameter d, offset 88>
new  <	; Parameter pointer d 88>

556:
old  <	; call function noellipse-noellipse free>
new  <	; Call free 64 0>

563:
old  <	; post call>
new  <	; PostCall 64>

566:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 64 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

569:
old  <	; parameter e, offset 88>
new  <	; Parameter pointer e 88>

574:
old  <	; call function noellipse-noellipse free>
new  <	; Call free 64 0>

581:
old  <	; post call>
new  <	; PostCall 64>

584:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 64 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

587:
old  <	; call function noellipse-noellipse print_heap>
new  <	; Call print_heap 64 0>

594:
old  <	; post call>
new  <	; PostCall 64>

597:
old  <	; return>
new  <	; Return>

604:
old  <	; function end malloc_test3>
new  <	; FunctionEnd malloc_test3>

609:
old  <	; initializer String>
new  <	; Initializer String Stack Top: %u, Low Heap: %u\n>

615:
old  <	; empty>
new  <	; Empty>

618:
old  <	; Â£temporary3929 = bp>
new  <	; InspectRegister Â£temporary3929 bp>

621:
old  <	; Â£temporary3930 = int_to_int Â£temporary3929 (UnsignedShortInt -> Unsigned_Int)>
new  <	; IntegralToIntegral Â£temporary3930 Â£temporary3929>

625:
old  <	; stackTop = Â£temporary3930>
new  <	; Assign stackTop Â£temporary3930>

629:
old  <	; lowHeapPtr = int8$65534#>
new  <	; Assign lowHeapPtr 65534>

633:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

636:
old  <	; parameter string_Stack20Top3A2025u2C20Low20Heap3A2025u0A#, offset 60>
new  <	; Parameter pointer "Stack Top: %u, Low Heap: %u\n" 60>

640:
old  <	; parameter stackTop, offset 68>
new  <	; Parameter unsigned int stackTop 68>

645:
old  <	; Â£temporary3931 -> lowHeapPtr = *lowHeapPtr>
new  <	; Dereference Â£temporary3931 -> lowHeapPtr lowHeapPtr 0>

649:
old  <	; parameter Â£temporary3931 -> lowHeapPtr, offset 72>
new  <	; Parameter unsigned int Â£temporary3931 -> lowHeapPtr 72>

654:
old  <	; call function noellipse-ellipse printf, extra 8>
new  <	; Call printf 36 8>

663:
old  <	; post call>
new  <	; PostCall 36>

666:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

669:
old  <	; call function noellipse-noellipse rec>
new  <	; Call rec 36 0>

676:
old  <	; post call>
new  <	; PostCall 36>

679:
old  <	; return>
new  <	; Return>

686:
old  <	; function end rec>
new  <	; FunctionEnd rec>

691:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

694:
old  <	; call function noellipse-noellipse rec>
new  <	; Call rec 24 0>

701:
old  <	; post call>
new  <	; PostCall 24>

704:
old  <	; return>
new  <	; Return>

711:
old  <	; function end malloc_test4>
new  <	; FunctionEnd malloc_test4>

716:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

719:
old  <	; parameter int4$96#, offset 48>
new  <	; Parameter signedint 96 48>

723:
old  <	; call function noellipse-noellipse malloc>
new  <	; Call malloc 24 0>

730:
old  <	; post call>
new  <	; PostCall 24>

733:
old  <	; Â£temporary3935 = return_value>
new  <	; GetReturnValue Â£temporary3935>

736:
old  <	; b = Â£temporary3935>
new  <	; Assign b Â£temporary3935>

740:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

743:
old  <	; parameter int4$96#, offset 56>
new  <	; Parameter signedint 96 56>

747:
old  <	; call function noellipse-noellipse malloc>
new  <	; Call malloc 32 0>

754:
old  <	; post call>
new  <	; PostCall 32>

757:
old  <	; Â£temporary3936 = return_value>
new  <	; GetReturnValue Â£temporary3936>

760:
old  <	; c = Â£temporary3936>
new  <	; Assign c Â£temporary3936>

764:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

767:
old  <	; parameter int4$96#, offset 64>
new  <	; Parameter signedint 96 64>

771:
old  <	; call function noellipse-noellipse malloc>
new  <	; Call malloc 40 0>

778:
old  <	; post call>
new  <	; PostCall 40>

781:
old  <	; Â£temporary3937 = return_value>
new  <	; GetReturnValue Â£temporary3937>

784:
old  <	; d = Â£temporary3937>
new  <	; Assign d Â£temporary3937>

788:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

791:
old  <	; call function noellipse-noellipse print_heap>
new  <	; Call print_heap 48 0>

798:
old  <	; post call>
new  <	; PostCall 48>

801:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

804:
old  <	; parameter c, offset 72>
new  <	; Parameter pointer c 72>

809:
old  <	; parameter int4$40#, offset 80>
new  <	; Parameter signedint 40 80>

813:
old  <	; call function noellipse-noellipse realloc>
new  <	; Call realloc 48 0>

820:
old  <	; post call>
new  <	; PostCall 48>

823:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

826:
old  <	; call function noellipse-noellipse print_heap>
new  <	; Call print_heap 48 0>

833:
old  <	; post call>
new  <	; PostCall 48>

836:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

839:
old  <	; parameter int4$40#, offset 72>
new  <	; Parameter signedint 40 72>

843:
old  <	; call function noellipse-noellipse malloc>
new  <	; Call malloc 48 0>

850:
old  <	; post call>
new  <	; PostCall 48>

853:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

856:
old  <	; call function noellipse-noellipse print_heap>
new  <	; Call print_heap 48 0>

863:
old  <	; post call>
new  <	; PostCall 48>

866:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

869:
old  <	; parameter b, offset 72>
new  <	; Parameter pointer b 72>

874:
old  <	; call function noellipse-noellipse free>
new  <	; Call free 48 0>

881:
old  <	; post call>
new  <	; PostCall 48>

884:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

887:
old  <	; call function noellipse-noellipse print_heap>
new  <	; Call print_heap 48 0>

894:
old  <	; post call>
new  <	; PostCall 48>

897:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

900:
old  <	; parameter d, offset 72>
new  <	; Parameter pointer d 72>

905:
old  <	; call function noellipse-noellipse free>
new  <	; Call free 48 0>

912:
old  <	; post call>
new  <	; PostCall 48>

915:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

918:
old  <	; call function noellipse-noellipse print_heap>
new  <	; Call print_heap 48 0>

925:
old  <	; post call>
new  <	; PostCall 48>

928:
old  <	; return>
new  <	; Return>

935:
old  <	; function end malloc_test>
new  <	; FunctionEnd malloc_test>

940:
old  <	; initializer String>
new  <	; Initializer String Index: %i, Pointer: %u, Stack top: %u, Low Heap: %u\n>

946:
old  <	; empty>
new  <	; Empty>

949:
old  <	; Â£temporary3947 = bp>
new  <	; InspectRegister Â£temporary3947 bp>

952:
old  <	; Â£temporary3948 = int_to_int Â£temporary3947 (UnsignedShortInt -> Unsigned_Int)>
new  <	; IntegralToIntegral Â£temporary3948 Â£temporary3947>

956:
old  <	; stackTop = Â£temporary3948>
new  <	; Assign stackTop Â£temporary3948>

960:
old  <	; lowHeapPtr = int8$65534#>
new  <	; Assign lowHeapPtr 65534>

964:
old  <	; i = int4$0#>
new  <	; Assign i 0>

968:
old  <	; if i >= int4$1000# goto 24>
new  <	; SignedGreaterThanEqual 24 i 1000>

973:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

976:
old  <	; parameter int4$96#, offset 64>
new  <	; Parameter signedint 96 64>

980:
old  <	; call function noellipse-noellipse malloc>
new  <	; Call malloc 40 0>

987:
old  <	; post call>
new  <	; PostCall 40>

990:
old  <	; Â£temporary3951 = return_value>
new  <	; GetReturnValue Â£temporary3951>

993:
old  <	; p = Â£temporary3951>
new  <	; Assign p Â£temporary3951>

997:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1000:
old  <	; parameter string_Index3A2025i2C20Pointer3A2025u2C20Stack20top3A2025u2C20Low20Heap3A2025u0A#, offset 72>
new  <	; Parameter pointer "Index: %i, Pointer: %u, Stack top: %u, Low Heap: %u\n" 72>

1004:
old  <	; parameter i, offset 80>
new  <	; Parameter signedint i 80>

1009:
old  <	; parameter p, offset 84>
new  <	; Parameter pointer p 84>

1014:
old  <	; parameter stackTop, offset 92>
new  <	; Parameter unsigned int stackTop 92>

1019:
old  <	; Â£temporary3952 -> lowHeapPtr = *lowHeapPtr>
new  <	; Dereference Â£temporary3952 -> lowHeapPtr lowHeapPtr 0>

1023:
old  <	; parameter Â£temporary3952 -> lowHeapPtr, offset 96>
new  <	; Parameter unsigned int Â£temporary3952 -> lowHeapPtr 96>

1028:
old  <	; call function noellipse-ellipse printf, extra 20>
new  <	; Call printf 48 20>

1037:
old  <	; post call>
new  <	; PostCall 48>

1040:
old  <	; i = i + int4$1#>
new  <	; BinaryAdd i i 1>

1044:
old  <	; goto 6>
new  <	; Goto 6>

1048:
old  <	; return>
new  <	; Return>

1055:
old  <	; function end malloc_test6>
new  <	; FunctionEnd malloc_test6>

31:
old  <	; Â£temporary3954 = int_to_int valuePtr1 (Pointer -> Pointer)>
new  <	; IntegralToIntegral Â£temporary3954 valuePtr1>

35:
old  <	; Â£temporary3955 -> Â£temporary3954 = *Â£temporary3954>
new  <	; Dereference Â£temporary3955 -> Â£temporary3954 Â£temporary3954 0>

38:
old  <	; intValue1 = Â£temporary3955 -> Â£temporary3954>
new  <	; Assign intValue1 Â£temporary3955 -> Â£temporary3954>

43:
old  <	; Â£temporary3956 = int_to_int valuePtr2 (Pointer -> Pointer)>
new  <	; IntegralToIntegral Â£temporary3956 valuePtr2>

47:
old  <	; Â£temporary3957 -> Â£temporary3956 = *Â£temporary3956>
new  <	; Dereference Â£temporary3957 -> Â£temporary3956 Â£temporary3956 0>

50:
old  <	; intValue2 = Â£temporary3957 -> Â£temporary3956>
new  <	; Assign intValue2 Â£temporary3957 -> Â£temporary3956>

55:
old  <	; if intValue1 >= intValue2 goto 9>
new  <	; SignedGreaterThanEqual 9 intValue1 intValue2>

61:
old  <	; Â£temporary3961 = int4$minus1#>
new  <	; Assign Â£temporary3961 -1>

65:
old  <	; goto 14>
new  <	; Goto 14>

69:
old  <	; if intValue1 != intValue2 goto 12>
new  <	; NotEqual 12 intValue1 intValue2>

75:
old  <	; Â£temporary3960 = int4$0#>
new  <	; Assign Â£temporary3960 0>

79:
old  <	; goto 13>
new  <	; Goto 13>

83:
old  <	; Â£temporary3960 = int4$1#>
new  <	; Assign Â£temporary3960 1>

87:
old  <	; Â£temporary3961 = Â£temporary3960>
new  <	; Assign Â£temporary3961 Â£temporary3960>

90:
old  <	; return Â£temporary3961>
new  <	; Return Â£temporary3961>

97:
old  <	; function end compare>
new  <	; FunctionEnd compare>

102:
old  <	; Â£temporary3962 = int_to_int valuePtr1 (Pointer -> Pointer)>
new  <	; IntegralToIntegral Â£temporary3962 valuePtr1>

106:
old  <	; Â£temporary3963 -> Â£temporary3962 = *Â£temporary3962>
new  <	; Dereference Â£temporary3963 -> Â£temporary3962 Â£temporary3962 0>

109:
old  <	; intValue1 = Â£temporary3963 -> Â£temporary3962>
new  <	; Assign intValue1 Â£temporary3963 -> Â£temporary3962>

114:
old  <	; Â£temporary3964 = int_to_int valuePtr2 (Pointer -> Pointer)>
new  <	; IntegralToIntegral Â£temporary3964 valuePtr2>

118:
old  <	; Â£temporary3965 -> Â£temporary3964 = *Â£temporary3964>
new  <	; Dereference Â£temporary3965 -> Â£temporary3964 Â£temporary3964 0>

121:
old  <	; intValue2 = Â£temporary3965 -> Â£temporary3964>
new  <	; Assign intValue2 Â£temporary3965 -> Â£temporary3964>

126:
old  <	; if intValue1 >= intValue2 goto 9>
new  <	; SignedGreaterThanEqual 9 intValue1 intValue2>

132:
old  <	; Â£temporary3969 = int4$1#>
new  <	; Assign Â£temporary3969 1>

136:
old  <	; goto 14>
new  <	; Goto 14>

140:
old  <	; if intValue1 != intValue2 goto 12>
new  <	; NotEqual 12 intValue1 intValue2>

146:
old  <	; Â£temporary3968 = int4$0#>
new  <	; Assign Â£temporary3968 0>

150:
old  <	; goto 13>
new  <	; Goto 13>

154:
old  <	; Â£temporary3968 = int4$minus1#>
new  <	; Assign Â£temporary3968 -1>

158:
old  <	; Â£temporary3969 = Â£temporary3968>
new  <	; Assign Â£temporary3969 Â£temporary3968>

161:
old  <	; return Â£temporary3969>
new  <	; Return Â£temporary3969>

168:
old  <	; function end reverse_compare>
new  <	; FunctionEnd reverse_compare>

173:
old  <	; initializer String>
new  <	; Initializer String div_t quot %i rem %i\n>

179:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

182:
old  <	; parameter string_div_t20quot2025i20rem2025i0A#, offset 56>
new  <	; Parameter pointer "div_t quot %i rem %i\n" 56>

186:
old  <	; parameter d.quot, offset 64>
new  <	; Parameter signedint d.quot 64>

191:
old  <	; parameter d.rem, offset 68>
new  <	; Parameter signedint d.rem 68>

196:
old  <	; call function noellipse-ellipse printf, extra 8>
new  <	; Call printf 32 8>

205:
old  <	; post call>
new  <	; PostCall 32>

208:
old  <	; return>
new  <	; Return>

215:
old  <	; function end print_div>
new  <	; FunctionEnd print_div>

220:
old  <	; initializer String>
new  <	; Initializer String ldiv_t quot %li rem %li\n>

226:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

229:
old  <	; parameter string_ldiv_t20quot2025li20rem2025li0A#, offset 64>
new  <	; Parameter pointer "ldiv_t quot %li rem %li\n" 64>

233:
old  <	; parameter ld.quot, offset 72>
new  <	; Parameter signed long int ld.quot 72>

238:
old  <	; parameter ld.rem, offset 80>
new  <	; Parameter signed long int ld.rem 80>

243:
old  <	; call function noellipse-ellipse printf, extra 16>
new  <	; Call printf 40 16>

252:
old  <	; post call>
new  <	; PostCall 40>

255:
old  <	; return>
new  <	; Return>

262:
old  <	; function end print_ldiv>
new  <	; FunctionEnd print_ldiv>

267:
old  <	; initializer String>
new  <	; Initializer String exit1\n>

273:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

276:
old  <	; parameter string_exit10A#, offset 48>
new  <	; Parameter pointer "exit1\n" 48>

280:
old  <	; call function noellipse-ellipse printf, extra 0>
new  <	; Call printf 24 0>

288:
old  <	; post call>
new  <	; PostCall 24>

291:
old  <	; return>
new  <	; Return>

298:
old  <	; function end exit_handle1x>
new  <	; FunctionEnd exit_handle1x>

303:
old  <	; initializer String>
new  <	; Initializer String exit2\n>

309:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

312:
old  <	; parameter string_exit20A#, offset 48>
new  <	; Parameter pointer "exit2\n" 48>

316:
old  <	; call function noellipse-ellipse printf, extra 0>
new  <	; Call printf 24 0>

324:
old  <	; post call>
new  <	; PostCall 24>

327:
old  <	; return>
new  <	; Return>

334:
old  <	; function end exit_handle2x>
new  <	; FunctionEnd exit_handle2x>

339:
old  <	; initializer String>
new  <	; Initializer String exit3\n>

345:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

348:
old  <	; parameter string_exit30A#, offset 48>
new  <	; Parameter pointer "exit3\n" 48>

352:
old  <	; call function noellipse-ellipse printf, extra 0>
new  <	; Call printf 24 0>

360:
old  <	; post call>
new  <	; PostCall 24>

363:
old  <	; return>
new  <	; Return>

370:
old  <	; function end exit_handle3x>
new  <	; FunctionEnd exit_handle3x>

375:
old  <	; initializer String>
new  <	; Initializer String 123.456abc>

381:
old  <	; initializer String>
new  <	; Initializer String 123.456>

387:
old  <	; initializer String>
new  <	; Initializer String 123abc>

393:
old  <	; initializer String>
new  <	; Initializer String atof("123.456") = %f\n>

399:
old  <	; initializer String>
new  <	; Initializer String atoi("123") = %i\n>

405:
old  <	; initializer String>
new  <	; Initializer String 123>

411:
old  <	; initializer String>
new  <	; Initializer String atol("123") = %li\n\n>

417:
old  <	; initializer String>
new  <	; Initializer String strtod("123.456abc", &endp) = (%f, %s)\n>

423:
old  <	; initializer String>
new  <	; Initializer String strtol("123abc", &endp) = (%li, %s)\n>

429:
old  <	; initializer String>
new  <	; Initializer String strtoul("123abc", &endp) = (%lu, %s)\n>

435:
old  <	; initializer String>
new  <	; Initializer String \ngetenv("path") = %s\n>

441:
old  <	; initializer String>
new  <	; Initializer String path>

447:
old  <	; initializer String>
new  <	; Initializer String system("dir")\n>

453:
old  <	; initializer String>
new  <	; Initializer String dir>

459:
old  <	; initializer String>
new  <	; Initializer String abs(-3) = %i, abs(3) = %i, labs(-3l) = %li, labs(3l) = %li\n>

465:
old  <	; initializer String>
new  <	; Initializer String div_t(10, 3) = (%i, %i),\n>

471:
old  <	; initializer String>
new  <	; Initializer String ldiv_t(10, 3) = (%li, %li)\n>

477:
old  <	; initializer String>
new  <	; Initializer String \nA List 1: >

483:
old  <	; initializer String>
new  <	; Initializer String %i >

489:
old  <	; initializer String>
new  <	; Initializer String \nB List 2: >

495:
old  <	; initializer String>
new  <	; Initializer String \nC List 3: >

501:
old  <	; initializer String>
new  <	; Initializer String \n\nSearch:\n>

507:
old  <	; initializer String>
new  <	; Initializer String   (%i, %i)\n>

513:
old  <	; initializer String>
new  <	; Initializer String \n>

519:
old  <	; initializer Pointer>
new  <	; Initializer Pointer 4>

525:
old  <	; empty>
new  <	; Empty>

528:
old  <	; p = s>
new  <	; Assign p s>

533:
old  <	; q = t>
new  <	; Assign q t>

538:
old  <	; r = w>
new  <	; Assign r w>

543:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 348 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

546:
old  <	; parameter string_1232E456abc#, offset 372>
new  <	; Parameter pointer "123.456abc" 372>

550:
old  <	; Â£temporary3979 = &p>
new  <	; Address Â£temporary3979 p>

555:
old  <	; parameter Â£temporary3979, offset 380>
new  <	; Parameter pointer Â£temporary3979 380>

559:
old  <	; call function noellipse-noellipse strtod>
new  <	; Call strtod 348 0>

566:
old  <	; post call>
new  <	; PostCall 348>

569:
old  <	; Â£temporary3980 = return_value>
new  <	; GetReturnValue Â£temporary3980>

572:
old  <	; pop float x>
new  <	; PopFloat x>

576:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 356 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

579:
old  <	; parameter string_1232E456#, offset 380>
new  <	; Parameter pointer "123.456" 380>

583:
old  <	; call function noellipse-noellipse atof>
new  <	; Call atof 356 0>

590:
old  <	; post call>
new  <	; PostCall 356>

593:
old  <	; Â£temporary3981 = return_value>
new  <	; GetReturnValue Â£temporary3981>

596:
old  <	; pop float y>
new  <	; PopFloat y>

600:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 364 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

603:
old  <	; parameter string_123abc#, offset 388>
new  <	; Parameter pointer "123abc" 388>

607:
old  <	; Â£temporary3982 = &q>
new  <	; Address Â£temporary3982 q>

612:
old  <	; parameter Â£temporary3982, offset 396>
new  <	; Parameter pointer Â£temporary3982 396>

616:
old  <	; parameter int4$8#, offset 404>
new  <	; Parameter signedint 8 404>

620:
old  <	; call function noellipse-noellipse strtol>
new  <	; Call strtol 364 0>

627:
old  <	; post call>
new  <	; PostCall 364>

630:
old  <	; Â£temporary3983 = return_value>
new  <	; GetReturnValue Â£temporary3983>

633:
old  <	; l = Â£temporary3983>
new  <	; Assign l Â£temporary3983>

637:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 372 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

640:
old  <	; parameter string_123abc#, offset 396>
new  <	; Parameter pointer "123abc" 396>

644:
old  <	; Â£temporary3984 = &r>
new  <	; Address Â£temporary3984 r>

649:
old  <	; parameter Â£temporary3984, offset 404>
new  <	; Parameter pointer Â£temporary3984 404>

653:
old  <	; parameter int4$8#, offset 412>
new  <	; Parameter signedint 8 412>

657:
old  <	; call function noellipse-noellipse strtoul>
new  <	; Call strtoul 372 0>

664:
old  <	; post call>
new  <	; PostCall 372>

667:
old  <	; Â£temporary3985 = return_value>
new  <	; GetReturnValue Â£temporary3985>

670:
old  <	; ul = Â£temporary3985>
new  <	; Assign ul Â£temporary3985>

674:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 380 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

677:
old  <	; parameter string_atof28221232E4562229203D2025f0A#, offset 404>
new  <	; Parameter pointer "atof("123.456") = %f\n" 404>

681:
old  <	; push float y>
new  <	; PushFloat y>

685:
old  <	; parameter y, offset 412>
new  <	; Parameter double y 412>

689:
old  <	; call function noellipse-ellipse printf, extra 8>
new  <	; Call printf 380 8>

698:
old  <	; post call>
new  <	; PostCall 380>

701:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 380 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

704:
old  <	; parameter string_atoi28221232229203D2025i0A#, offset 404>
new  <	; Parameter pointer "atoi("123") = %i\n" 404>

708:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 380 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

711:
old  <	; parameter string_123#, offset 436>
new  <	; Parameter pointer "123" 436>

715:
old  <	; call function noellipse-noellipse atoi>
new  <	; Call atoi 412 0>

722:
old  <	; post call>
new  <	; PostCall 412>

725:
old  <	; Â£temporary3987 = return_value>
new  <	; GetReturnValue Â£temporary3987>

728:
old  <	; parameter Â£temporary3987, offset 412>
new  <	; Parameter signedint Â£temporary3987 412>

732:
old  <	; call function noellipse-ellipse printf, extra 4>
new  <	; Call printf 380 4>

741:
old  <	; post call>
new  <	; PostCall 380>

744:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 380 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

747:
old  <	; parameter string_atol28221232229203D2025li0A0A#, offset 404>
new  <	; Parameter pointer "atol("123") = %li\n\n" 404>

751:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 380 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

754:
old  <	; parameter string_123#, offset 436>
new  <	; Parameter pointer "123" 436>

758:
old  <	; call function noellipse-noellipse atol>
new  <	; Call atol 412 0>

765:
old  <	; post call>
new  <	; PostCall 412>

768:
old  <	; Â£temporary3989 = return_value>
new  <	; GetReturnValue Â£temporary3989>

771:
old  <	; parameter Â£temporary3989, offset 412>
new  <	; Parameter signed long int Â£temporary3989 412>

775:
old  <	; call function noellipse-ellipse printf, extra 8>
new  <	; Call printf 380 8>

784:
old  <	; post call>
new  <	; PostCall 380>

787:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 380 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

790:
old  <	; parameter string_strtod28221232E456abc222C2026endp29203D202825f2C2025s290A#, offset 404>
new  <	; Parameter pointer "strtod("123.456abc", &endp) = (%f, %s)\n" 404>

794:
old  <	; push float x>
new  <	; PushFloat x>

798:
old  <	; parameter x, offset 412>
new  <	; Parameter double x 412>

802:
old  <	; parameter p, offset 420>
new  <	; Parameter pointer p 420>

807:
old  <	; call function noellipse-ellipse printf, extra 16>
new  <	; Call printf 380 16>

816:
old  <	; post call>
new  <	; PostCall 380>

819:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 380 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

822:
old  <	; parameter string_strtol2822123abc222C2026endp29203D202825li2C2025s290A#, offset 404>
new  <	; Parameter pointer "strtol("123abc", &endp) = (%li, %s)\n" 404>

826:
old  <	; parameter l, offset 412>
new  <	; Parameter signed long int l 412>

831:
old  <	; parameter q, offset 420>
new  <	; Parameter pointer q 420>

836:
old  <	; call function noellipse-ellipse printf, extra 16>
new  <	; Call printf 380 16>

845:
old  <	; post call>
new  <	; PostCall 380>

848:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 380 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

851:
old  <	; parameter string_strtoul2822123abc222C2026endp29203D202825lu2C2025s290A#, offset 404>
new  <	; Parameter pointer "strtoul("123abc", &endp) = (%lu, %s)\n" 404>

855:
old  <	; parameter ul, offset 412>
new  <	; Parameter unsignedlongint ul 412>

860:
old  <	; parameter r, offset 420>
new  <	; Parameter pointer r 420>

865:
old  <	; call function noellipse-ellipse printf, extra 16>
new  <	; Call printf 380 16>

874:
old  <	; post call>
new  <	; PostCall 380>

877:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

880:
old  <	; parameter string_0Agetenv2822path2229203D2025s0A#, offset 48>
new  <	; Parameter pointer "\ngetenv("path") = %s\n" 48>

884:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

887:
old  <	; parameter string_path#, offset 80>
new  <	; Parameter pointer "path" 80>

891:
old  <	; call function noellipse-noellipse getenv>
new  <	; Call getenv 56 0>

898:
old  <	; post call>
new  <	; PostCall 56>

901:
old  <	; Â£temporary3994 = return_value>
new  <	; GetReturnValue Â£temporary3994>

904:
old  <	; parameter Â£temporary3994, offset 56>
new  <	; Parameter pointer Â£temporary3994 56>

908:
old  <	; call function noellipse-ellipse printf, extra 8>
new  <	; Call printf 24 8>

917:
old  <	; post call>
new  <	; PostCall 24>

920:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

923:
old  <	; parameter string_system2822dir22290A#, offset 48>
new  <	; Parameter pointer "system("dir")\n" 48>

927:
old  <	; call function noellipse-ellipse printf, extra 0>
new  <	; Call printf 24 0>

935:
old  <	; post call>
new  <	; PostCall 24>

938:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

941:
old  <	; parameter string_dir#, offset 48>
new  <	; Parameter pointer "dir" 48>

945:
old  <	; call function noellipse-noellipse system>
new  <	; Call system 24 0>

952:
old  <	; post call>
new  <	; PostCall 24>

955:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

958:
old  <	; parameter string_abs282D329203D2025i2C20abs28329203D2025i2C20labs282D3l29203D2025li2C20labs283l29203D2025li0A#, offset 48>
new  <	; Parameter pointer "abs(-3) = %i, abs(3) = %i, labs(-3l) = %li, labs(3l) = %li\n" 48>

962:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

965:
old  <	; parameter int4$minus3#, offset 80>
new  <	; Parameter signedint -3 80>

969:
old  <	; call function noellipse-noellipse @abs>
new  <	; Call @abs 56 0>

976:
old  <	; post call>
new  <	; PostCall 56>

979:
old  <	; Â£temporary3998 = return_value>
new  <	; GetReturnValue Â£temporary3998>

982:
old  <	; parameter Â£temporary3998, offset 56>
new  <	; Parameter signedint Â£temporary3998 56>

986:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

989:
old  <	; parameter int4$3#, offset 84>
new  <	; Parameter signedint 3 84>

993:
old  <	; call function noellipse-noellipse @abs>
new  <	; Call @abs 60 0>

1000:
old  <	; post call>
new  <	; PostCall 60>

1003:
old  <	; Â£temporary3999 = return_value>
new  <	; GetReturnValue Â£temporary3999>

1006:
old  <	; parameter Â£temporary3999, offset 60>
new  <	; Parameter signedint Â£temporary3999 60>

1010:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1013:
old  <	; parameter int8$minus3#, offset 88>
new  <	; Parameter signed long int -3 88>

1017:
old  <	; call function noellipse-noellipse labs>
new  <	; Call labs 64 0>

1024:
old  <	; post call>
new  <	; PostCall 64>

1027:
old  <	; Â£temporary4000 = return_value>
new  <	; GetReturnValue Â£temporary4000>

1030:
old  <	; parameter Â£temporary4000, offset 64>
new  <	; Parameter signed long int Â£temporary4000 64>

1034:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1037:
old  <	; parameter int8$3#, offset 96>
new  <	; Parameter signed long int 3 96>

1041:
old  <	; call function noellipse-noellipse labs>
new  <	; Call labs 72 0>

1048:
old  <	; post call>
new  <	; PostCall 72>

1051:
old  <	; Â£temporary4001 = return_value>
new  <	; GetReturnValue Â£temporary4001>

1054:
old  <	; parameter Â£temporary4001, offset 72>
new  <	; Parameter signed long int Â£temporary4001 72>

1058:
old  <	; call function noellipse-ellipse printf, extra 24>
new  <	; Call printf 24 24>

1067:
old  <	; post call>
new  <	; PostCall 24>

1070:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1073:
old  <	; parameter int4$10#, offset 48>
new  <	; Parameter signedint 10 48>

1077:
old  <	; parameter int4$3#, offset 52>
new  <	; Parameter signedint 3 52>

1081:
old  <	; call function noellipse-noellipse div>
new  <	; Call div 24 0>

1088:
old  <	; post call>
new  <	; PostCall 24>

1091:
old  <	; Â£temporary4003 -> Â£temporary4004 = return_value>
new  <	; GetReturnValue Â£temporary4003 -> Â£temporary4004>

1094:
old  <	; i = Â£temporary4003 -> Â£temporary4004>
new  <	; Assign i Â£temporary4003 -> Â£temporary4004>

1109:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1112:
old  <	; parameter string_div_t28102C20329203D202825i2C2025i292C0A#, offset 56>
new  <	; Parameter pointer "div_t(10, 3) = (%i, %i),\n" 56>

1116:
old  <	; parameter i.quot, offset 64>
new  <	; Parameter signedint i.quot 64>

1121:
old  <	; parameter i.rem, offset 68>
new  <	; Parameter signedint i.rem 68>

1126:
old  <	; call function noellipse-ellipse printf, extra 8>
new  <	; Call printf 32 8>

1135:
old  <	; post call>
new  <	; PostCall 32>

1138:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1141:
old  <	; parameter i, offset 56>
new  <	; Parameter struct i 56>

1158:
old  <	; call function noellipse-noellipse print_div>
new  <	; Call print_div 32 0>

1165:
old  <	; post call>
new  <	; PostCall 32>

1168:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1171:
old  <	; parameter int8$10#, offset 48>
new  <	; Parameter signed long int 10 48>

1175:
old  <	; parameter int8$3#, offset 56>
new  <	; Parameter signed long int 3 56>

1179:
old  <	; call function noellipse-noellipse ldiv>
new  <	; Call ldiv 24 0>

1186:
old  <	; post call>
new  <	; PostCall 24>

1189:
old  <	; Â£temporary4009 -> Â£temporary4010 = return_value>
new  <	; GetReturnValue Â£temporary4009 -> Â£temporary4010>

1192:
old  <	; li = Â£temporary4009 -> Â£temporary4010>
new  <	; Assign li Â£temporary4009 -> Â£temporary4010>

1207:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1210:
old  <	; parameter string_ldiv_t28102C20329203D202825li2C2025li290A#, offset 64>
new  <	; Parameter pointer "ldiv_t(10, 3) = (%li, %li)\n" 64>

1214:
old  <	; parameter li.quot, offset 72>
new  <	; Parameter signed long int li.quot 72>

1219:
old  <	; parameter li.rem, offset 80>
new  <	; Parameter signed long int li.rem 80>

1224:
old  <	; call function noellipse-ellipse printf, extra 16>
new  <	; Call printf 40 16>

1233:
old  <	; post call>
new  <	; PostCall 40>

1236:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1239:
old  <	; parameter li, offset 64>
new  <	; Parameter struct li 64>

1256:
old  <	; call function noellipse-noellipse print_ldiv>
new  <	; Call print_ldiv 40 0>

1263:
old  <	; post call>
new  <	; PostCall 40>

1266:
old  <	; list[0] = int4$3#>
new  <	; Assign list[0] 3>

1270:
old  <	; list[1] = int4$4#>
new  <	; Assign list[1] 4>

1274:
old  <	; list[2] = int4$2#>
new  <	; Assign list[2] 2>

1278:
old  <	; list[3] = int4$1#>
new  <	; Assign list[3] 1>

1282:
old  <	; size = int4$4#>
new  <	; Assign size 4>

1286:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1289:
old  <	; parameter string_0AA20List2013A20#, offset 72>
new  <	; Parameter pointer "\nA List 1: " 72>

1293:
old  <	; call function noellipse-ellipse printf, extra 0>
new  <	; Call printf 48 0>

1301:
old  <	; post call>
new  <	; PostCall 48>

1304:
old  <	; index = int4$0#>
new  <	; Assign index 0>

1308:
old  <	; if index >= size goto 183>
new  <	; SignedGreaterThanEqual 183 index size>

1314:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1317:
old  <	; parameter string_25i20#, offset 72>
new  <	; Parameter pointer "%i " 72>

1321:
old  <	; Â£temporary4023 = int_to_int index (SignedInt -> Array)>
new  <	; IntegralToIntegral Â£temporary4023 index>

1327:
old  <	; Â£temporary4025 = Â£temporary4023 * int8$4#>
new  <	; UnsignedMultiply Â£temporary4025 Â£temporary4023 4>

1332:
old  <	; Â£temporary4024 = list + Â£temporary4025>
new  <	; BinaryAdd Â£temporary4024 list Â£temporary4025>

1338:
old  <	; Â£temporary4026 -> Â£temporary4024 = *Â£temporary4024>
new  <	; Dereference Â£temporary4026 -> Â£temporary4024 Â£temporary4024 0>

1341:
old  <	; parameter Â£temporary4026 -> Â£temporary4024, offset 80>
new  <	; Parameter signedint Â£temporary4026 -> Â£temporary4024 80>

1346:
old  <	; call function noellipse-ellipse printf, extra 4>
new  <	; Call printf 48 4>

1355:
old  <	; post call>
new  <	; PostCall 48>

1358:
old  <	; index = index + int4$1#>
new  <	; BinaryAdd index index 1>

1362:
old  <	; goto 171>
new  <	; Goto 171>

1366:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1369:
old  <	; parameter string_0AB20List2023A20#, offset 72>
new  <	; Parameter pointer "\nB List 2: " 72>

1373:
old  <	; call function noellipse-ellipse printf, extra 0>
new  <	; Call printf 48 0>

1381:
old  <	; post call>
new  <	; PostCall 48>

1384:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1387:
old  <	; parameter list, offset 72>
new  <	; Parameter pointer list 72>

1392:
old  <	; parameter size, offset 80>
new  <	; Parameter signedint size 80>

1397:
old  <	; parameter int4$4#, offset 84>
new  <	; Parameter signedint 4 84>

1401:
old  <	; parameter reverse_compare, offset 88>
new  <	; Parameter pointer reverse_compare 88>

1405:
old  <	; call function noellipse-ellipse qsort, extra 0>
new  <	; Call qsort 48 0>

1413:
old  <	; post call>
new  <	; PostCall 48>

1416:
old  <	; index = int4$0#>
new  <	; Assign index 0>

1420:
old  <	; if index >= size goto 207>
new  <	; SignedGreaterThanEqual 207 index size>

1426:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1429:
old  <	; parameter string_25i20#, offset 72>
new  <	; Parameter pointer "%i " 72>

1433:
old  <	; Â£temporary4033 = int_to_int index (SignedInt -> Array)>
new  <	; IntegralToIntegral Â£temporary4033 index>

1439:
old  <	; Â£temporary4035 = Â£temporary4033 * int8$4#>
new  <	; UnsignedMultiply Â£temporary4035 Â£temporary4033 4>

1444:
old  <	; Â£temporary4034 = list + Â£temporary4035>
new  <	; BinaryAdd Â£temporary4034 list Â£temporary4035>

1450:
old  <	; Â£temporary4036 -> Â£temporary4034 = *Â£temporary4034>
new  <	; Dereference Â£temporary4036 -> Â£temporary4034 Â£temporary4034 0>

1453:
old  <	; parameter Â£temporary4036 -> Â£temporary4034, offset 80>
new  <	; Parameter signedint Â£temporary4036 -> Â£temporary4034 80>

1458:
old  <	; call function noellipse-ellipse printf, extra 4>
new  <	; Call printf 48 4>

1467:
old  <	; post call>
new  <	; PostCall 48>

1470:
old  <	; index = index + int4$1#>
new  <	; BinaryAdd index index 1>

1474:
old  <	; goto 195>
new  <	; Goto 195>

1478:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1481:
old  <	; parameter string_0AC20List2033A20#, offset 72>
new  <	; Parameter pointer "\nC List 3: " 72>

1485:
old  <	; call function noellipse-ellipse printf, extra 0>
new  <	; Call printf 48 0>

1493:
old  <	; post call>
new  <	; PostCall 48>

1496:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1499:
old  <	; parameter list, offset 72>
new  <	; Parameter pointer list 72>

1504:
old  <	; parameter size, offset 80>
new  <	; Parameter signedint size 80>

1509:
old  <	; parameter int4$4#, offset 84>
new  <	; Parameter signedint 4 84>

1513:
old  <	; parameter compare, offset 88>
new  <	; Parameter pointer compare 88>

1517:
old  <	; call function noellipse-ellipse qsort, extra 0>
new  <	; Call qsort 48 0>

1525:
old  <	; post call>
new  <	; PostCall 48>

1528:
old  <	; index = int4$0#>
new  <	; Assign index 0>

1532:
old  <	; if index >= size goto 231>
new  <	; SignedGreaterThanEqual 231 index size>

1538:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1541:
old  <	; parameter string_25i20#, offset 72>
new  <	; Parameter pointer "%i " 72>

1545:
old  <	; Â£temporary4043 = int_to_int index (SignedInt -> Array)>
new  <	; IntegralToIntegral Â£temporary4043 index>

1551:
old  <	; Â£temporary4045 = Â£temporary4043 * int8$4#>
new  <	; UnsignedMultiply Â£temporary4045 Â£temporary4043 4>

1556:
old  <	; Â£temporary4044 = list + Â£temporary4045>
new  <	; BinaryAdd Â£temporary4044 list Â£temporary4045>

1562:
old  <	; Â£temporary4046 -> Â£temporary4044 = *Â£temporary4044>
new  <	; Dereference Â£temporary4046 -> Â£temporary4044 Â£temporary4044 0>

1565:
old  <	; parameter Â£temporary4046 -> Â£temporary4044, offset 80>
new  <	; Parameter signedint Â£temporary4046 -> Â£temporary4044 80>

1570:
old  <	; call function noellipse-ellipse printf, extra 4>
new  <	; Call printf 48 4>

1579:
old  <	; post call>
new  <	; PostCall 48>

1582:
old  <	; index = index + int4$1#>
new  <	; BinaryAdd index index 1>

1586:
old  <	; goto 219>
new  <	; Goto 219>

1590:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1593:
old  <	; parameter string_0A0ASearch3A0A#, offset 72>
new  <	; Parameter pointer "\n\nSearch:\n" 72>

1597:
old  <	; call function noellipse-ellipse printf, extra 0>
new  <	; Call printf 48 0>

1605:
old  <	; post call>
new  <	; PostCall 48>

1608:
old  <	; key = int4$0#>
new  <	; Assign key 0>

1612:
old  <	; if key >= int4$6# goto 265>
new  <	; SignedGreaterThanEqual 265 key 6>

1617:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1620:
old  <	; Â£temporary4051 = &key>
new  <	; Address Â£temporary4051 key>

1625:
old  <	; parameter Â£temporary4051, offset 72>
new  <	; Parameter pointer Â£temporary4051 72>

1629:
old  <	; parameter list, offset 80>
new  <	; Parameter pointer list 80>

1634:
old  <	; parameter size, offset 88>
new  <	; Parameter signedint size 88>

1639:
old  <	; parameter int4$4#, offset 92>
new  <	; Parameter signedint 4 92>

1643:
old  <	; parameter compare, offset 96>
new  <	; Parameter pointer compare 96>

1647:
old  <	; call function noellipse-noellipse bsearch>
new  <	; Call bsearch 48 0>

1654:
old  <	; post call>
new  <	; PostCall 48>

1657:
old  <	; Â£temporary4053 = return_value>
new  <	; GetReturnValue Â£temporary4053>

1660:
old  <	; Â£temporary4054 = int_to_int Â£temporary4053 (Pointer -> Pointer)>
new  <	; IntegralToIntegral Â£temporary4054 Â£temporary4053>

1663:
old  <	; p = Â£temporary4054>
new  <	; Assign p Â£temporary4054>

1667:
old  <	; if p == int8$0# goto 255>
new  <	; Equal 255 p 0>

1672:
old  <	; Â£temporary4057 = p - list>
new  <	; BinarySubtract Â£temporary4057 p list>

1678:
old  <	; Â£temporary4056 = Â£temporary4057 / int8$4#>
new  <	; UnsignedDivide Â£temporary4056 Â£temporary4057 4>

1683:
old  <	; Â£temporary4058 = int_to_int Â£temporary4056 (Pointer -> SignedInt)>
new  <	; IntegralToIntegral Â£temporary4058 Â£temporary4056>

1686:
old  <	; Â£temporary4059 = Â£temporary4058>
new  <	; Assign Â£temporary4059 Â£temporary4058>

1689:
old  <	; goto 256>
new  <	; Goto 256>

1693:
old  <	; Â£temporary4059 = int4$minus1#>
new  <	; Assign Â£temporary4059 -1>

1697:
old  <	; index = Â£temporary4059>
new  <	; Assign index Â£temporary4059>

1701:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 60 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1704:
old  <	; parameter string_20202825i2C2025i290A#, offset 84>
new  <	; Parameter pointer "  (%i, %i)\n" 84>

1708:
old  <	; parameter key, offset 92>
new  <	; Parameter signedint key 92>

1713:
old  <	; parameter index, offset 96>
new  <	; Parameter signedint index 96>

1718:
old  <	; call function noellipse-ellipse printf, extra 8>
new  <	; Call printf 60 8>

1727:
old  <	; post call>
new  <	; PostCall 60>

1730:
old  <	; key = key + int4$1#>
new  <	; BinaryAdd key key 1>

1734:
old  <	; goto 236>
new  <	; Goto 236>

1738:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1741:
old  <	; parameter string_0A#, offset 72>
new  <	; Parameter pointer "\n" 72>

1745:
old  <	; call function noellipse-ellipse printf, extra 0>
new  <	; Call printf 48 0>

1753:
old  <	; post call>
new  <	; PostCall 48>

1756:
old  <	; return>
new  <	; Return>

1763:
old  <	; function end stdlib_test>
new  <	; FunctionEnd stdlib_test>

18:
old  <	; initializer String>
new  <	; Initializer String Sun>

24:
old  <	; initializer String>
new  <	; Initializer String Mon>

30:
old  <	; initializer String>
new  <	; Initializer String Tue>

36:
old  <	; initializer String>
new  <	; Initializer String Wed>

42:
old  <	; initializer String>
new  <	; Initializer String Thu>

48:
old  <	; initializer String>
new  <	; Initializer String Fri>

54:
old  <	; initializer String>
new  <	; Initializer String Sat>

60:
old  <	; initializer String>
new  <	; Initializer String now 1: %lu\n>

66:
old  <	; initializer String>
new  <	; Initializer String now 2: %lu\n>

72:
old  <	; initializer String>
new  <	; Initializer String    gm time: %s %02i-%02i-%02i %02i:%02i:%02i, year day %i, week day %i, daylight saving time %i\n>

78:
old  <	; initializer String>
new  <	; Initializer String local time: %s %02i-%02i-%02i %02i:%02i:%02i, year day %i, week day %i, daylight saving time %i\n>

84:
old  <	; initializer String>
new  <	; Initializer String asctime <%s>, ctime <%s>\n>

90:
old  <	; initializer String>
new  <	; Initializer String short day %a, long day %A, short month %b, long month %B, date-time %c, mday %d, hour %H, gm hour %I, yday %j, month %m, min %M, am/pm %p, sec %S, week number sun %U, week day %w, week number mon %W, date %x, time %X, short year %y, long year %Y>

96:
old  <	; initializer String>
new  <	; Initializer String strftime <%i> <%s>\n>

102:
old  <	; initializer Array>
new  <	; Initializer Array 8>

108:
old  <	; weekdays[0] = string_Sun#>
new  <	; Assign weekdays[0] "Sun">

112:
old  <	; weekdays[1] = string_Mon#>
new  <	; Assign weekdays[1] "Mon">

116:
old  <	; weekdays[2] = string_Tue#>
new  <	; Assign weekdays[2] "Tue">

120:
old  <	; weekdays[3] = string_Wed#>
new  <	; Assign weekdays[3] "Wed">

124:
old  <	; weekdays[4] = string_Thu#>
new  <	; Assign weekdays[4] "Thu">

128:
old  <	; weekdays[5] = string_Fri#>
new  <	; Assign weekdays[5] "Fri">

132:
old  <	; weekdays[6] = string_Sat#>
new  <	; Assign weekdays[6] "Sat">

136:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 80 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

139:
old  <	; parameter int8$0#, offset 104>
new  <	; Parameter pointer 0 104>

143:
old  <	; call function noellipse-noellipse time>
new  <	; Call time 80 0>

150:
old  <	; post call>
new  <	; PostCall 80>

153:
old  <	; Â£temporary4083 = return_value>
new  <	; GetReturnValue Â£temporary4083>

156:
old  <	; now = Â£temporary4083>
new  <	; Assign now Â£temporary4083>

160:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 88 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

163:
old  <	; Â£temporary4084 = &now>
new  <	; Address Â£temporary4084 now>

168:
old  <	; parameter Â£temporary4084, offset 112>
new  <	; Parameter pointer Â£temporary4084 112>

172:
old  <	; call function noellipse-noellipse gmtime>
new  <	; Call gmtime 88 0>

179:
old  <	; post call>
new  <	; PostCall 88>

182:
old  <	; Â£temporary4085 = return_value>
new  <	; GetReturnValue Â£temporary4085>

185:
old  <	; p = Â£temporary4085>
new  <	; Assign p Â£temporary4085>

189:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 96 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

192:
old  <	; parameter p, offset 120>
new  <	; Parameter pointer p 120>

197:
old  <	; call function noellipse-noellipse mktime>
new  <	; Call mktime 96 0>

204:
old  <	; post call>
new  <	; PostCall 96>

207:
old  <	; Â£temporary4086 = return_value>
new  <	; GetReturnValue Â£temporary4086>

210:
old  <	; now2 = Â£temporary4086>
new  <	; Assign now2 Â£temporary4086>

214:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 104 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

217:
old  <	; parameter string_now2013A2025lu0A#, offset 128>
new  <	; Parameter pointer "now 1: %lu\n" 128>

221:
old  <	; parameter now, offset 136>
new  <	; Parameter unsignedlongint now 136>

226:
old  <	; call function noellipse-ellipse printf, extra 8>
new  <	; Call printf 104 8>

235:
old  <	; post call>
new  <	; PostCall 104>

238:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 104 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

241:
old  <	; parameter string_now2023A2025lu0A#, offset 128>
new  <	; Parameter pointer "now 2: %lu\n" 128>

245:
old  <	; parameter now2, offset 136>
new  <	; Parameter unsignedlongint now2 136>

250:
old  <	; call function noellipse-ellipse printf, extra 8>
new  <	; Call printf 104 8>

259:
old  <	; post call>
new  <	; PostCall 104>

262:
old  <	; Â£temporary4089 -> p = *p>
new  <	; Dereference Â£temporary4089 -> p p 0>

266:
old  <	; s = Â£temporary4089 -> p>
new  <	; Assign s Â£temporary4089 -> p>

281:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 140 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

284:
old  <	; parameter string_202020gm20time3A2025s202502i2D2502i2D2502i202502i3A2502i3A2502i2C20year20day2025i2C20week20day2025i2C20daylight20saving20time2025i0A#, offset 164>
new  <	; Parameter pointer "   gm time: %s %02i-%02i-%02i %02i:%02i:%02i, year day %i, week day %i, daylight saving time %i\n" 164>

288:
old  <	; Â£temporary4092 = int_to_int s.tm_wday (SignedInt -> Array)>
new  <	; IntegralToIntegral Â£temporary4092 s.tm_wday>

294:
old  <	; Â£temporary4093 = Â£temporary4092 * Array_8#>
new  <	; UnsignedMultiply Â£temporary4093 Â£temporary4092 8>

299:
old  <	; Â£temporary4094 = weekdays + Â£temporary4093>
new  <	; BinaryAdd Â£temporary4094 weekdays Â£temporary4093>

305:
old  <	; Â£temporary4091 -> Â£temporary4094 = *Â£temporary4094>
new  <	; Dereference Â£temporary4091 -> Â£temporary4094 Â£temporary4094 0>

308:
old  <	; parameter Â£temporary4091 -> Â£temporary4094, offset 172>
new  <	; Parameter pointer Â£temporary4091 -> Â£temporary4094 172>

313:
old  <	; Â£temporary4096 = s.tm_year + int4$1900#>
new  <	; BinaryAdd Â£temporary4096 s.tm_year 1900>

318:
old  <	; parameter Â£temporary4096, offset 180>
new  <	; Parameter signedint Â£temporary4096 180>

322:
old  <	; Â£temporary4098 = s.tm_mon + int4$1#>
new  <	; BinaryAdd Â£temporary4098 s.tm_mon 1>

327:
old  <	; parameter Â£temporary4098, offset 184>
new  <	; Parameter signedint Â£temporary4098 184>

331:
old  <	; parameter s.tm_mday, offset 188>
new  <	; Parameter signedint s.tm_mday 188>

336:
old  <	; parameter s.tm_hour, offset 192>
new  <	; Parameter signedint s.tm_hour 192>

341:
old  <	; parameter s.tm_min, offset 196>
new  <	; Parameter signedint s.tm_min 196>

346:
old  <	; parameter s.tm_sec, offset 200>
new  <	; Parameter signedint s.tm_sec 200>

351:
old  <	; parameter s.tm_yday, offset 204>
new  <	; Parameter signedint s.tm_yday 204>

356:
old  <	; parameter s.tm_wday, offset 208>
new  <	; Parameter signedint s.tm_wday 208>

361:
old  <	; parameter s.tm_isdst, offset 212>
new  <	; Parameter signedint s.tm_isdst 212>

366:
old  <	; call function noellipse-ellipse printf, extra 44>
new  <	; Call printf 140 44>

375:
old  <	; post call>
new  <	; PostCall 140>

378:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 140 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

381:
old  <	; Â£temporary4107 = &now>
new  <	; Address Â£temporary4107 now>

386:
old  <	; parameter Â£temporary4107, offset 164>
new  <	; Parameter pointer Â£temporary4107 164>

390:
old  <	; call function noellipse-noellipse localtime>
new  <	; Call localtime 140 0>

397:
old  <	; post call>
new  <	; PostCall 140>

400:
old  <	; Â£temporary4108 = return_value>
new  <	; GetReturnValue Â£temporary4108>

403:
old  <	; Â£temporary4109 -> Â£temporary4108 = *Â£temporary4108>
new  <	; Dereference Â£temporary4109 -> Â£temporary4108 Â£temporary4108 0>

406:
old  <	; s = Â£temporary4109 -> Â£temporary4108>
new  <	; Assign s Â£temporary4109 -> Â£temporary4108>

421:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 140 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

424:
old  <	; parameter string_local20time3A2025s202502i2D2502i2D2502i202502i3A2502i3A2502i2C20year20day2025i2C20week20day2025i2C20daylight20saving20time2025i0A#, offset 164>
new  <	; Parameter pointer "local time: %s %02i-%02i-%02i %02i:%02i:%02i, year day %i, week day %i, daylight saving time %i\n" 164>

428:
old  <	; Â£temporary4112 = int_to_int s.tm_wday (SignedInt -> Array)>
new  <	; IntegralToIntegral Â£temporary4112 s.tm_wday>

434:
old  <	; Â£temporary4113 = Â£temporary4112 * Array_8#>
new  <	; UnsignedMultiply Â£temporary4113 Â£temporary4112 8>

439:
old  <	; Â£temporary4114 = weekdays + Â£temporary4113>
new  <	; BinaryAdd Â£temporary4114 weekdays Â£temporary4113>

445:
old  <	; Â£temporary4111 -> Â£temporary4114 = *Â£temporary4114>
new  <	; Dereference Â£temporary4111 -> Â£temporary4114 Â£temporary4114 0>

448:
old  <	; parameter Â£temporary4111 -> Â£temporary4114, offset 172>
new  <	; Parameter pointer Â£temporary4111 -> Â£temporary4114 172>

453:
old  <	; Â£temporary4116 = s.tm_year + int4$1900#>
new  <	; BinaryAdd Â£temporary4116 s.tm_year 1900>

458:
old  <	; parameter Â£temporary4116, offset 180>
new  <	; Parameter signedint Â£temporary4116 180>

462:
old  <	; Â£temporary4118 = s.tm_mon + int4$1#>
new  <	; BinaryAdd Â£temporary4118 s.tm_mon 1>

467:
old  <	; parameter Â£temporary4118, offset 184>
new  <	; Parameter signedint Â£temporary4118 184>

471:
old  <	; parameter s.tm_mday, offset 188>
new  <	; Parameter signedint s.tm_mday 188>

476:
old  <	; parameter s.tm_hour, offset 192>
new  <	; Parameter signedint s.tm_hour 192>

481:
old  <	; parameter s.tm_min, offset 196>
new  <	; Parameter signedint s.tm_min 196>

486:
old  <	; parameter s.tm_sec, offset 200>
new  <	; Parameter signedint s.tm_sec 200>

491:
old  <	; parameter s.tm_yday, offset 204>
new  <	; Parameter signedint s.tm_yday 204>

496:
old  <	; parameter s.tm_wday, offset 208>
new  <	; Parameter signedint s.tm_wday 208>

501:
old  <	; parameter s.tm_isdst, offset 212>
new  <	; Parameter signedint s.tm_isdst 212>

506:
old  <	; call function noellipse-ellipse printf, extra 44>
new  <	; Call printf 140 44>

515:
old  <	; post call>
new  <	; PostCall 140>

518:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 340 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

521:
old  <	; parameter buffer1, offset 364>
new  <	; Parameter pointer buffer1 364>

526:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 340 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

529:
old  <	; Â£temporary4127 = &s>
new  <	; Address Â£temporary4127 s>

534:
old  <	; parameter Â£temporary4127, offset 396>
new  <	; Parameter pointer Â£temporary4127 396>

538:
old  <	; call function noellipse-noellipse asctime>
new  <	; Call asctime 372 0>

545:
old  <	; post call>
new  <	; PostCall 372>

548:
old  <	; Â£temporary4128 = return_value>
new  <	; GetReturnValue Â£temporary4128>

551:
old  <	; parameter Â£temporary4128, offset 372>
new  <	; Parameter pointer Â£temporary4128 372>

555:
old  <	; call function noellipse-noellipse strcpy>
new  <	; Call strcpy 340 0>

562:
old  <	; post call>
new  <	; PostCall 340>

565:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 340 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

568:
old  <	; parameter buffer2, offset 364>
new  <	; Parameter pointer buffer2 364>

573:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 340 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

576:
old  <	; Â£temporary4130 = &now>
new  <	; Address Â£temporary4130 now>

581:
old  <	; parameter Â£temporary4130, offset 396>
new  <	; Parameter pointer Â£temporary4130 396>

585:
old  <	; call function noellipse-noellipse ctime>
new  <	; Call ctime 372 0>

592:
old  <	; post call>
new  <	; PostCall 372>

595:
old  <	; Â£temporary4131 = return_value>
new  <	; GetReturnValue Â£temporary4131>

598:
old  <	; parameter Â£temporary4131, offset 372>
new  <	; Parameter pointer Â£temporary4131 372>

602:
old  <	; call function noellipse-noellipse strcpy>
new  <	; Call strcpy 340 0>

609:
old  <	; post call>
new  <	; PostCall 340>

612:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 340 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

615:
old  <	; parameter string_asctime203C25s3E2C20ctime203C25s3E0A#, offset 364>
new  <	; Parameter pointer "asctime <%s>, ctime <%s>\n" 364>

619:
old  <	; parameter buffer1, offset 372>
new  <	; Parameter pointer buffer1 372>

624:
old  <	; parameter buffer2, offset 380>
new  <	; Parameter pointer buffer2 380>

629:
old  <	; call function noellipse-ellipse printf, extra 16>
new  <	; Call printf 340 16>

638:
old  <	; post call>
new  <	; PostCall 340>

641:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 640 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

644:
old  <	; parameter buffer, offset 664>
new  <	; Parameter pointer buffer 664>

649:
old  <	; parameter int4$300#, offset 672>
new  <	; Parameter signedint 300 672>

653:
old  <	; parameter string_short20day2025a2C20long20day2025A2C20short20month2025b2C20long20month2025B2C20date2Dtime2025c2C20mday2025d2C20hour2025H2C20gm20hour2025I2C20yday2025j2C20month2025m2C20min2025M2C20am2Fpm2025p2C20sec2025S2C20week20number20sun2025U2C20week20day2025w2C20week20number20mon2025W2C20date2025x2C20time2025X2C20short20year2025y2C20long20year2025Y#, offset 676>
new  <	; Parameter pointer "short day %a, long day %A, short month %b, long month %B, date-time %c, mday %d, hour %H, gm hour %I, yday %j, month %m, min %M, am/pm %p, sec %S, week number sun %U, week day %w, week number mon %W, date %x, time %X, short year %y, long year %Y" 676>

657:
old  <	; Â£temporary4134 = &s>
new  <	; Address Â£temporary4134 s>

662:
old  <	; parameter Â£temporary4134, offset 684>
new  <	; Parameter pointer Â£temporary4134 684>

666:
old  <	; call function noellipse-noellipse strftime>
new  <	; Call strftime 640 0>

673:
old  <	; post call>
new  <	; PostCall 640>

676:
old  <	; Â£temporary4135 = return_value>
new  <	; GetReturnValue Â£temporary4135>

679:
old  <	; i = Â£temporary4135>
new  <	; Assign i Â£temporary4135>

683:
old  <	; call header integral zero 0 stack zero 0>
new  <	; PreCall 644 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

686:
old  <	; parameter string_strftime203C25i3E203C25s3E0A#, offset 668>
new  <	; Parameter pointer "strftime <%i> <%s>\n" 668>

690:
old  <	; parameter i, offset 676>
new  <	; Parameter signedint i 676>

695:
old  <	; parameter buffer, offset 680>
new  <	; Parameter pointer buffer 680>

700:
old  <	; call function noellipse-ellipse printf, extra 12>
new  <	; Call printf 644 12>

709:
old  <	; post call>
new  <	; PostCall 644>

712:
old  <	; return>
new  <	; Return>

719:
old  <	; function end time_test>
new  <	; FunctionEnd time_test>

