Main.asm
47:
old  <section .data>
new  <section .text>

49:
old  <string_test12Etxt#:>
new  < main2:>

50:
old  <	; Initializer String test1.txt>
new  <	; Assign a.p 0>

51:
old  <	db "test1.txt", 0>
new  <	mov qword [a], 0>

53:
old  <section .data>
new  < main2$1:>

54:
old  <>
new  <	; Assign a.q 0>

55:
old  <string_test22Etxt#:>
new  <	mov qword [a + 8], 0>

56:
old  <	; Initializer String test2.txt>
new  <>

57:
old  <	db "test2.txt", 0>
new  < main2$2:>

58:
old  <>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

59:
old  <section .text>
new  <>

60:
old  <>
new  < main2$3:>

61:
old  < main2:>
new  <	; Call 24 file_test 0>

62:
old  <	; Assign a.p 0>
new  <	mov qword [rbp + 24], main2$4>

63:
old  <	mov qword [a], 0>
new  <	mov [rbp + 32], rbp>

64:
old  <>
new  <	add rbp, 24>

65:
old  < main2$1:>
new  <	jmp file_test>

66:
old  <	; Assign a.q 0>
new  <>

67:
old  <	mov qword [a + 8], 0>
new  < main2$4:>

68:
old  <>
new  <	; PostCall 24>

69:
old  < main2$2:>
new  <>

70:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < main2$5:>

71:
old  <>
new  <	; Return>

72:
old  < main2$3:>
new  <	mov rax, [rbp]>

73:
old  <	; Parameter 48 pointer "test1.txt">
new  <	mov rdi, [rbp + 16]>

74:
old  <	mov qword [rbp + 48], string_test12Etxt#>
new  <	mov rbp, [rbp + 8]>

75:
old  <>
new  <	jmp rax>

76:
old  < main2$4:>
new  <>

77:
old  <	; Parameter 56 pointer "test2.txt">
new  < main2$6:>

78:
old  <	mov qword [rbp + 56], string_test22Etxt#>
new  <	; FunctionEnd main2>

80:
old  < main2$5:>
new  <section .data>

81:
old  <	; Call 24 file_test 0>
new  <>

82:
old  <	mov qword [rbp + 24], main2$6>
new  <string_Hello#:>

83:
old  <	mov [rbp + 32], rbp>
new  <	; Initializer String Hello>

84:
old  <	add rbp, 24>
new  <	db "Hello", 0>

85:
old  <	jmp file_test>
new  <>

86:
old  <>
new  <section .data>

87:
old  < main2$6:>
new  <>

88:
old  <	; PostCall 24>
new  <string_World#:>

89:
old  <>
new  <	; Initializer String World>

90:
old  < main2$7:>
new  <	db "World", 0>

91:
old  <	; Return>
new  <>

92:
old  <	mov rax, [rbp]>
new  <section .data>

93:
old  <	mov rdi, [rbp + 16]>
new  <>

94:
old  <	mov rbp, [rbp + 8]>
new  <string_3C25s3E203C25s3E0A#:>

95:
old  <	jmp rax>
new  <	; Initializer String <%s> <%s>\n>

96:
old  <>
new  <	db "<%s> <%s>", 10, 0>

97:
old  < main2$8:>
new  <>

98:
old  <	; FunctionEnd main2>
new  <section .text>

100:
old  <section .data>
new  < main33:>

101:
old  <>
new  <	; Assign s[0] 72>

102:
old  <string_Hello#:>
new  <	mov byte [rbp + 24], 72>

103:
old  <	; Initializer String Hello>
new  <>

104:
old  <	db "Hello", 0>
new  < main33$1:>

105:
old  <>
new  <	; Assign s[1] 101>

106:
old  <section .data>
new  <	mov byte [rbp + 25], 101>

108:
old  <string_World#:>
new  < main33$2:>

109:
old  <	; Initializer String World>
new  <	; Assign s[2] 108>

110:
old  <	db "World", 0>
new  <	mov byte [rbp + 26], 108>

112:
old  <section .data>
new  < main33$3:>

113:
old  <>
new  <	; Assign s[3] 108>

114:
old  <string_3C25s3E203C25s3E0A#:>
new  <	mov byte [rbp + 27], 108>

115:
old  <	; Initializer String <%s> <%s>\n>
new  <>

116:
old  <	db "<%s> <%s>", 10, 0>
new  < main33$4:>

117:
old  <>
new  <	; Assign s[4] 111>

118:
old  <section .text>
new  <	mov byte [rbp + 28], 111>

120:
old  < main33:>
new  < main33$5:>

121:
old  <	; Assign s[0] 72>
new  <	; Assign s[5] 0>

122:
old  <	mov byte [rbp + 24], 72>
new  <	mov byte [rbp + 29], 0>

124:
old  < main33$1:>
new  < main33$6:>

125:
old  <	; Assign s[1] 101>
new  <	; Assign t[0] 87>

126:
old  <	mov byte [rbp + 25], 101>
new  <	mov byte [rbp + 44], 87>

128:
old  < main33$2:>
new  < main33$7:>

129:
old  <	; Assign s[2] 108>
new  <	; Assign t[1] 111>

130:
old  <	mov byte [rbp + 26], 108>
new  <	mov byte [rbp + 45], 111>

132:
old  < main33$3:>
new  < main33$8:>

133:
old  <	; Assign s[3] 108>
new  <	; Assign t[2] 114>

134:
old  <	mov byte [rbp + 27], 108>
new  <	mov byte [rbp + 46], 114>

136:
old  < main33$4:>
new  < main33$9:>

137:
old  <	; Assign s[4] 111>
new  <	; Assign t[3] 108>

138:
old  <	mov byte [rbp + 28], 111>
new  <	mov byte [rbp + 47], 108>

140:
old  < main33$5:>
new  < main33$10:>

141:
old  <	; Assign s[5] 0>
new  <	; Assign t[4] 100>

142:
old  <	mov byte [rbp + 29], 0>
new  <	mov byte [rbp + 48], 100>

144:
old  < main33$6:>
new  < main33$11:>

145:
old  <	; Assign t[0] 87>
new  <	; Assign t[5] 0>

146:
old  <	mov byte [rbp + 44], 87>
new  <	mov byte [rbp + 49], 0>

148:
old  < main33$7:>
new  < main33$12:>

149:
old  <	; Assign t[1] 111>
new  <	; PreCall 64 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

150:
old  <	mov byte [rbp + 45], 111>
new  <>

151:
old  <>
new  < main33$13:>

152:
old  < main33$8:>
new  <	; Parameter 88 pointer "<%s> <%s>\n">

153:
old  <	; Assign t[2] 114>
new  <	mov qword [rbp + 88], string_3C25s3E203C25s3E0A#>

154:
old  <	mov byte [rbp + 46], 114>
new  <>

155:
old  <>
new  < main33$14:>

156:
old  < main33$9:>
new  <	; Parameter 96 pointer s>

157:
old  <	; Assign t[3] 108>
new  <	mov [rbp + 96], rbp>

158:
old  <	mov byte [rbp + 47], 108>
new  <	add qword [rbp + 96], 24>

160:
old  < main33$10:>
new  < main33$15:>

161:
old  <	; Assign t[4] 100>
new  <	; Parameter 104 pointer t>

162:
old  <	mov byte [rbp + 48], 100>
new  <	mov [rbp + 104], rbp>

163:
old  <>
new  <	add qword [rbp + 104], 44>

164:
old  < main33$11:>
new  <>

165:
old  <	; Assign t[5] 0>
new  < main33$16:>

166:
old  <	mov byte [rbp + 49], 0>
new  <	; Call 64 printf 16>

167:
old  <>
new  <	mov qword [rbp + 64], main33$17>

168:
old  < main33$12:>
new  <	mov [rbp + 72], rbp>

169:
old  <	; PreCall 64 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	add rbp, 64>

170:
old  <>
new  <	mov rdi, rbp>

171:
old  < main33$13:>
new  <	add rdi, 16>

172:
old  <	; Parameter 88 pointer "<%s> <%s>\n">
new  <	jmp printf>

173:
old  <	mov qword [rbp + 88], string_3C25s3E203C25s3E0A#>
new  <>

174:
old  <>
new  < main33$17:>

175:
old  < main33$14:>
new  <	; PostCall 64>

176:
old  <	; Parameter 96 pointer s>
new  <>

177:
old  <	mov [rbp + 96], rbp>
new  < main33$18:>

178:
old  <	add qword [rbp + 96], 24>
new  <	; Return>

179:
old  <>
new  <	mov rax, [rbp]>

180:
old  < main33$15:>
new  <	mov rdi, [rbp + 16]>

181:
old  <	; Parameter 104 pointer t>
new  <	mov rbp, [rbp + 8]>

182:
old  <	mov [rbp + 104], rbp>
new  <	jmp rax>

183:
old  <	add qword [rbp + 104], 44>
new  <>

184:
old  <>
new  < main33$19:>

185:
old  < main33$16:>
new  <	; FunctionEnd main33>

186:
old  <	; Call 64 printf 16>
new  <>

187:
old  <	mov qword [rbp + 64], main33$17>
new  <section .text>

188:
old  <	mov [rbp + 72], rbp>
new  <>

189:
old  <	add rbp, 64>
new  < main34:>

190:
old  <	mov rdi, rbp>
new  <	; Assign g_outDevice stdout>

191:
old  <	add rdi, 16>
new  <	mov rax, [stdout]>

192:
old  <	jmp printf>
new  <	mov [g_outDevice], rax>

194:
old  < main33$17:>
new  < main34$1:>

195:
old  <	; PostCall 64>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

197:
old  < main33$18:>
new  < main34$2:>

198:
old  <	; Return>
new  <	; Parameter 48 signedchar 88>

199:
old  <	mov rax, [rbp]>
new  <	mov byte [rbp + 48], 88>

200:
old  <	mov rdi, [rbp + 16]>
new  <>

201:
old  <	mov rbp, [rbp + 8]>
new  < main34$3:>

202:
old  <	jmp rax>
new  <	; Call 24 printChar 0>

203:
old  <>
new  <	mov qword [rbp + 24], main34$4>

204:
old  < main33$19:>
new  <	mov [rbp + 32], rbp>

205:
old  <	; FunctionEnd main33>
new  <	add rbp, 24>

206:
old  <>
new  <	jmp printChar>

207:
old  <section .text>
new  <>

208:
old  <>
new  < main34$4:>

209:
old  < main34:>
new  <	; PostCall 24>

210:
old  <	; Assign g_outDevice stdout>
new  <>

211:
old  <	mov rax, [stdout]>
new  < main34$5:>

212:
old  <	mov [g_outDevice], rax>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

214:
old  < main34$1:>
new  < main34$6:>

215:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter 48 signedchar 10>

216:
old  <>
new  <	mov byte [rbp + 48], 10>

217:
old  < main34$2:>
new  <>

218:
old  <	; Parameter 48 signedchar 88>
new  < main34$7:>

219:
old  <	mov byte [rbp + 48], 88>
new  <	; Call 24 printChar 0>

220:
old  <>
new  <	mov qword [rbp + 24], main34$8>

221:
old  < main34$3:>
new  <	mov [rbp + 32], rbp>

222:
old  <	; Call 24 printChar 0>
new  <	add rbp, 24>

223:
old  <	mov qword [rbp + 24], main34$4>
new  <	jmp printChar>

224:
old  <	mov [rbp + 32], rbp>
new  <>

225:
old  <	add rbp, 24>
new  < main34$8:>

226:
old  <	jmp printChar>
new  <	; PostCall 24>

228:
old  < main34$4:>
new  < main34$9:>

229:
old  <	; PostCall 24>
new  <	; Return>

230:
old  <>
new  <	mov rax, [rbp]>

231:
old  < main34$5:>
new  <	mov rdi, [rbp + 16]>

232:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov rbp, [rbp + 8]>

233:
old  <>
new  <	jmp rax>

234:
old  < main34$6:>
new  <>

235:
old  <	; Parameter 48 signedchar 10>
new  < main34$10:>

236:
old  <	mov byte [rbp + 48], 10>
new  <	; FunctionEnd main34>

238:
old  < main34$7:>
new  <section .data>

239:
old  <	; Call 24 printChar 0>
new  <>

240:
old  <	mov qword [rbp + 24], main34$8>
new  <string_Please20write20a20character3A20#:>

241:
old  <	mov [rbp + 32], rbp>
new  <	; Initializer String Please write a character: >

242:
old  <	add rbp, 24>
new  <	db "Please write a character: ", 0>

243:
old  <	jmp printChar>
new  <>

244:
old  <>
new  <section .data>

245:
old  < main34$8:>
new  <>

246:
old  <	; PostCall 24>
new  <string_25c#:>

247:
old  <>
new  <	; Initializer String %c>

248:
old  < main34$9:>
new  <	db "%c", 0>

249:
old  <	; Return>
new  <>

250:
old  <	mov rax, [rbp]>
new  <section .data>

251:
old  <	mov rdi, [rbp + 16]>
new  <>

252:
old  <	mov rbp, [rbp + 8]>
new  <string_You20wrote20the20character202725c272E0A#:>

253:
old  <	jmp rax>
new  <	; Initializer String You wrote the character '%c'.\n>

254:
old  <>
new  <	db "You wrote the character ", 39, "%c", 39, ".", 10, 0>

255:
old  < main34$10:>
new  <>

256:
old  <	; FunctionEnd main34>
new  <section .text>

258:
old  <section .data>
new  < mainc:>

259:
old  <>
new  <	; PreCall 25 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

260:
old  <string_Please20write20a20character3A20#:>
new  <>

261:
old  <	; Initializer String Please write a character: >
new  < mainc$1:>

262:
old  <	db "Please write a character: ", 0>
new  <	; Parameter 49 pointer "Please write a character: ">

263:
old  <>
new  <	mov qword [rbp + 49], string_Please20write20a20character3A20#>

264:
old  <section .data>
new  <>

265:
old  <>
new  < mainc$2:>

266:
old  <string_25c#:>
new  <	; Call 25 printf 0>

267:
old  <	; Initializer String %c>
new  <	mov qword [rbp + 25], mainc$3>

268:
old  <	db "%c", 0>
new  <	mov [rbp + 33], rbp>

269:
old  <>
new  <	add rbp, 25>

270:
old  <section .data>
new  <	mov rdi, rbp>

271:
old  <>
new  <	jmp printf>

272:
old  <string_You20wrote20the20character202725c272E0A#:>
new  <>

273:
old  <	; Initializer String You wrote the character '%c'.\n>
new  < mainc$3:>

274:
old  <	db "You wrote the character ", 39, "%c", 39, ".", 10, 0>
new  <	; PostCall 25>

276:
old  <section .text>
new  < mainc$4:>

277:
old  <>
new  <	; PreCall 25 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

278:
old  < mainc:>
new  <>

279:
old  <	; PreCall 25 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < mainc$5:>

280:
old  <>
new  <	; Parameter 49 pointer "%c">

281:
old  < mainc$1:>
new  <	mov qword [rbp + 49], string_25c#>

282:
old  <	; Parameter 49 pointer "Please write a character: ">
new  <>

283:
old  <	mov qword [rbp + 49], string_Please20write20a20character3A20#>
new  < mainc$6:>

284:
old  <>
new  <	; Address Â£temporary19 c>

285:
old  < mainc$2:>
new  <	mov rsi, rbp>

286:
old  <	; Call 25 printf 0>
new  <	add rsi, 24>

287:
old  <	mov qword [rbp + 25], mainc$3>
new  <>

288:
old  <	mov [rbp + 33], rbp>
new  < mainc$7:>

289:
old  <	add rbp, 25>
new  <	; Parameter 57 pointer Â£temporary19>

290:
old  <	mov rdi, rbp>
new  <	mov [rbp + 57], rsi>

291:
old  <	jmp printf>
new  <>

292:
old  <>
new  < mainc$8:>

293:
old  < mainc$3:>
new  <	; Call 25 scanf 8>

294:
old  <	; PostCall 25>
new  <	mov qword [rbp + 25], mainc$9>

295:
old  <>
new  <	mov [rbp + 33], rbp>

296:
old  < mainc$4:>
new  <	add rbp, 25>

297:
old  <	; PreCall 25 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov rdi, rbp>

298:
old  <>
new  <	add rdi, 8>

299:
old  < mainc$5:>
new  <	jmp scanf>

300:
old  <	; Parameter 49 pointer "%c">
new  <>

301:
old  <	mov qword [rbp + 49], string_25c#>
new  < mainc$9:>

302:
old  <>
new  <	; PostCall 25>

303:
old  < mainc$6:>
new  <>

304:
old  <	; Address Â£temporary19 c>
new  < mainc$10:>

305:
old  <	mov rsi, rbp>
new  <	; PreCall 25 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

306:
old  <	add rsi, 24>
new  <>

307:
old  <>
new  < mainc$11:>

308:
old  < mainc$7:>
new  <	; Parameter 49 pointer "You wrote the character '%c'.\n">

309:
old  <	; Parameter 57 pointer Â£temporary19>
new  <	mov qword [rbp + 49], string_You20wrote20the20character202725c272E0A#>

310:
old  <	mov [rbp + 57], rsi>
new  <>

311:
old  <>
new  < mainc$12:>

312:
old  < mainc$8:>
new  <	; IntegralToIntegral Â£temporary21 c>

313:
old  <	; Call 25 scanf 8>
new  <	mov al, [rbp + 24]>

314:
old  <	mov qword [rbp + 25], mainc$9>
new  <	and eax, 255>

315:
old  <	mov [rbp + 33], rbp>
new  <	cmp al, 0>

316:
old  <	add rbp, 25>
new  <	jge mainc$13>

317:
old  <	mov rdi, rbp>
new  <	neg al>

318:
old  <	add rdi, 8>
new  <	neg eax>

319:
old  <	jmp scanf>
new  <>

320:
old  <>
new  < mainc$13:>

321:
old  < mainc$9:>
new  <	; Parameter 57 signedint Â£temporary21>

322:
old  <	; PostCall 25>
new  <	mov [rbp + 57], eax>

324:
old  < mainc$10:>
new  < mainc$14:>

325:
old  <	; PreCall 25 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Call 25 printf 4>

326:
old  <>
new  <	mov qword [rbp + 25], mainc$15>

327:
old  < mainc$11:>
new  <	mov [rbp + 33], rbp>

328:
old  <	; Parameter 49 pointer "You wrote the character '%c'.\n">
new  <	add rbp, 25>

329:
old  <	mov qword [rbp + 49], string_You20wrote20the20character202725c272E0A#>
new  <	mov rdi, rbp>

330:
old  <>
new  <	add rdi, 4>

331:
old  < mainc$12:>
new  <	jmp printf>

332:
old  <	; IntegralToIntegral Â£temporary21 c>
new  <>

333:
old  <	mov al, [rbp + 24]>
new  < mainc$15:>

334:
old  <	and eax, 255>
new  <	; PostCall 25>

335:
old  <	cmp al, 0>
new  <>

336:
old  <	jge mainc$13>
new  < mainc$16:>

337:
old  <	neg al>
new  <	; Return>

338:
old  <	neg eax>
new  <	mov rax, [rbp]>

339:
old  <>
new  <	mov rdi, [rbp + 16]>

340:
old  < mainc$13:>
new  <	mov rbp, [rbp + 8]>

341:
old  <	; Parameter 57 signedint Â£temporary21>
new  <	jmp rax>

342:
old  <	mov [rbp + 57], eax>
new  <>

343:
old  <>
new  < mainc$17:>

344:
old  < mainc$14:>
new  <	; FunctionEnd mainc>

345:
old  <	; Call 25 printf 4>
new  <>

346:
old  <	mov qword [rbp + 25], mainc$15>
new  <section .data>

347:
old  <	mov [rbp + 33], rbp>
new  <>

348:
old  <	add rbp, 25>
new  <string_Please20write20an20integer3A20#:>

349:
old  <	mov rdi, rbp>
new  <	; Initializer String Please write an integer: >

350:
old  <	add rdi, 4>
new  <	db "Please write an integer: ", 0>

351:
old  <	jmp printf>
new  <>

352:
old  <>
new  <section .data>

353:
old  < mainc$15:>
new  <>

354:
old  <	; PostCall 25>
new  <string_25i#:>

355:
old  <>
new  <	; Initializer String %i>

356:
old  < mainc$16:>
new  <	db "%i", 0>

357:
old  <	; Return>
new  <>

358:
old  <	mov rax, [rbp]>
new  <section .data>

359:
old  <	mov rdi, [rbp + 16]>
new  <>

360:
old  <	mov rbp, [rbp + 8]>
new  <string_You20wrote20the20integer2025i2E0A#:>

361:
old  <	jmp rax>
new  <	; Initializer String You wrote the integer %i.\n>

362:
old  <>
new  <	db "You wrote the integer %i.", 10, 0>

363:
old  < mainc$17:>
new  <>

364:
old  <	; FunctionEnd mainc>
new  <section .text>

366:
old  <section .data>
new  < maini:>

367:
old  <>
new  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

368:
old  <string_Please20write20an20integer3A20#:>
new  <>

369:
old  <	; Initializer String Please write an integer: >
new  < maini$1:>

370:
old  <	db "Please write an integer: ", 0>
new  <	; Parameter 52 pointer "Please write an integer: ">

371:
old  <>
new  <	mov qword [rbp + 52], string_Please20write20an20integer3A20#>

372:
old  <section .data>
new  <>

373:
old  <>
new  < maini$2:>

374:
old  <string_25i#:>
new  <	; Call 28 printf 0>

375:
old  <	; Initializer String %i>
new  <	mov qword [rbp + 28], maini$3>

376:
old  <	db "%i", 0>
new  <	mov [rbp + 36], rbp>

377:
old  <>
new  <	add rbp, 28>

378:
old  <section .data>
new  <	mov rdi, rbp>

379:
old  <>
new  <	jmp printf>

380:
old  <string_You20wrote20the20integer2025i2E0A#:>
new  <>

381:
old  <	; Initializer String You wrote the integer %i.\n>
new  < maini$3:>

382:
old  <	db "You wrote the integer %i.", 10, 0>
new  <	; PostCall 28>

384:
old  <section .text>
new  < maini$4:>

385:
old  <>
new  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

386:
old  < maini:>
new  <>

387:
old  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < maini$5:>

388:
old  <>
new  <	; Parameter 52 pointer "%i">

389:
old  < maini$1:>
new  <	mov qword [rbp + 52], string_25i#>

390:
old  <	; Parameter 52 pointer "Please write an integer: ">
new  <>

391:
old  <	mov qword [rbp + 52], string_Please20write20an20integer3A20#>
new  < maini$6:>

392:
old  <>
new  <	; Address Â£temporary25 i>

393:
old  < maini$2:>
new  <	mov rsi, rbp>

394:
old  <	; Call 28 printf 0>
new  <	add rsi, 24>

395:
old  <	mov qword [rbp + 28], maini$3>
new  <>

396:
old  <	mov [rbp + 36], rbp>
new  < maini$7:>

397:
old  <	add rbp, 28>
new  <	; Parameter 60 pointer Â£temporary25>

398:
old  <	mov rdi, rbp>
new  <	mov [rbp + 60], rsi>

399:
old  <	jmp printf>
new  <>

400:
old  <>
new  < maini$8:>

401:
old  < maini$3:>
new  <	; Call 28 scanf 8>

402:
old  <	; PostCall 28>
new  <	mov qword [rbp + 28], maini$9>

403:
old  <>
new  <	mov [rbp + 36], rbp>

404:
old  < maini$4:>
new  <	add rbp, 28>

405:
old  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov rdi, rbp>

406:
old  <>
new  <	add rdi, 8>

407:
old  < maini$5:>
new  <	jmp scanf>

408:
old  <	; Parameter 52 pointer "%i">
new  <>

409:
old  <	mov qword [rbp + 52], string_25i#>
new  < maini$9:>

410:
old  <>
new  <	; PostCall 28>

411:
old  < maini$6:>
new  <>

412:
old  <	; Address Â£temporary25 i>
new  < maini$10:>

413:
old  <	mov rsi, rbp>
new  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

414:
old  <	add rsi, 24>
new  <>

415:
old  <>
new  < maini$11:>

416:
old  < maini$7:>
new  <	; Parameter 52 pointer "You wrote the integer %i.\n">

417:
old  <	; Parameter 60 pointer Â£temporary25>
new  <	mov qword [rbp + 52], string_You20wrote20the20integer2025i2E0A#>

418:
old  <	mov [rbp + 60], rsi>
new  <>

419:
old  <>
new  < maini$12:>

420:
old  < maini$8:>
new  <	; Parameter 60 signedint i>

421:
old  <	; Call 28 scanf 8>
new  <	mov eax, [rbp + 24]>

422:
old  <	mov qword [rbp + 28], maini$9>
new  <	mov [rbp + 60], eax>

423:
old  <	mov [rbp + 36], rbp>
new  <>

424:
old  <	add rbp, 28>
new  < maini$13:>

425:
old  <	mov rdi, rbp>
new  <	; Call 28 printf 4>

426:
old  <	add rdi, 8>
new  <	mov qword [rbp + 28], maini$14>

427:
old  <	jmp scanf>
new  <	mov [rbp + 36], rbp>

428:
old  <>
new  <	add rbp, 28>

429:
old  < maini$9:>
new  <	mov rdi, rbp>

430:
old  <	; PostCall 28>
new  <	add rdi, 4>

431:
old  <>
new  <	jmp printf>

432:
old  < maini$10:>
new  <>

433:
old  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < maini$14:>

434:
old  <>
new  <	; PostCall 28>

435:
old  < maini$11:>
new  <>

436:
old  <	; Parameter 52 pointer "You wrote the integer %i.\n">
new  < maini$15:>

437:
old  <	mov qword [rbp + 52], string_You20wrote20the20integer2025i2E0A#>
new  <	; Return>

438:
old  <>
new  <	mov rax, [rbp]>

439:
old  < maini$12:>
new  <	mov rdi, [rbp + 16]>

440:
old  <	; Parameter 60 signedint i>
new  <	mov rbp, [rbp + 8]>

441:
old  <	mov eax, [rbp + 24]>
new  <	jmp rax>

442:
old  <	mov [rbp + 60], eax>
new  <>

443:
old  <>
new  < maini$16:>

444:
old  < maini$13:>
new  <	; FunctionEnd maini>

445:
old  <	; Call 28 printf 4>
new  <>

446:
old  <	mov qword [rbp + 28], maini$14>
new  <section .data>

447:
old  <	mov [rbp + 36], rbp>
new  <>

448:
old  <	add rbp, 28>
new  <string_Please20write20a20string3A20#:>

449:
old  <	mov rdi, rbp>
new  <	; Initializer String Please write a string: >

450:
old  <	add rdi, 4>
new  <	db "Please write a string: ", 0>

451:
old  <	jmp printf>
new  <>

452:
old  <>
new  <section .data>

453:
old  < maini$14:>
new  <>

454:
old  <	; PostCall 28>
new  <string_25s#:>

455:
old  <>
new  <	; Initializer String %s>

456:
old  < maini$15:>
new  <	db "%s", 0>

457:
old  <	; Return>
new  <>

458:
old  <	mov rax, [rbp]>
new  <section .data>

459:
old  <	mov rdi, [rbp + 16]>
new  <>

460:
old  <	mov rbp, [rbp + 8]>
new  <string_You20wrote20the20string202225s222E0A#:>

461:
old  <	jmp rax>
new  <	; Initializer String You wrote the string "%s".\n>

462:
old  <>
new  <	db "You wrote the string ", 34, "%s", 34, ".", 10, 0>

463:
old  < maini$16:>
new  <>

464:
old  <	; FunctionEnd maini>
new  <section .text>

466:
old  <section .data>
new  < mains:>

467:
old  <>
new  <	; PreCall 44 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

468:
old  <string_Please20write20a20string3A20#:>
new  <>

469:
old  <	; Initializer String Please write a string: >
new  < mains$1:>

470:
old  <	db "Please write a string: ", 0>
new  <	; Parameter 68 pointer "Please write a string: ">

471:
old  <>
new  <	mov qword [rbp + 68], string_Please20write20a20string3A20#>

472:
old  <section .data>
new  <>

473:
old  <>
new  < mains$2:>

474:
old  <string_25s#:>
new  <	; Call 44 printf 0>

475:
old  <	; Initializer String %s>
new  <	mov qword [rbp + 44], mains$3>

476:
old  <	db "%s", 0>
new  <	mov [rbp + 52], rbp>

477:
old  <>
new  <	add rbp, 44>

478:
old  <section .data>
new  <	mov rdi, rbp>

479:
old  <>
new  <	jmp printf>

480:
old  <string_You20wrote20the20string202225s222E0A#:>
new  <>

481:
old  <	; Initializer String You wrote the string "%s".\n>
new  < mains$3:>

482:
old  <	db "You wrote the string ", 34, "%s", 34, ".", 10, 0>
new  <	; PostCall 44>

484:
old  <section .text>
new  < mains$4:>

485:
old  <>
new  <	; PreCall 44 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

486:
old  < mains:>
new  <>

487:
old  <	; PreCall 44 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < mains$5:>

488:
old  <>
new  <	; Parameter 68 pointer "%s">

489:
old  < mains$1:>
new  <	mov qword [rbp + 68], string_25s#>

490:
old  <	; Parameter 68 pointer "Please write a string: ">
new  <>

491:
old  <	mov qword [rbp + 68], string_Please20write20a20string3A20#>
new  < mains$6:>

492:
old  <>
new  <	; Parameter 76 pointer s>

493:
old  < mains$2:>
new  <	mov [rbp + 76], rbp>

494:
old  <	; Call 44 printf 0>
new  <	add qword [rbp + 76], 24>

495:
old  <	mov qword [rbp + 44], mains$3>
new  <>

496:
old  <	mov [rbp + 52], rbp>
new  < mains$7:>

497:
old  <	add rbp, 44>
new  <	; Call 44 scanf 8>

498:
old  <	mov rdi, rbp>
new  <	mov qword [rbp + 44], mains$8>

499:
old  <	jmp printf>
new  <	mov [rbp + 52], rbp>

500:
old  <>
new  <	add rbp, 44>

501:
old  < mains$3:>
new  <	mov rdi, rbp>

502:
old  <	; PostCall 44>
new  <	add rdi, 8>

503:
old  <>
new  <	jmp scanf>

504:
old  < mains$4:>
new  <>

505:
old  <	; PreCall 44 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < mains$8:>

506:
old  <>
new  <	; PostCall 44>

507:
old  < mains$5:>
new  <>

508:
old  <	; Parameter 68 pointer "%s">
new  < mains$9:>

509:
old  <	mov qword [rbp + 68], string_25s#>
new  <	; PreCall 44 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

511:
old  < mains$6:>
new  < mains$10:>

512:
old  <	; Parameter 76 pointer s>
new  <	; Parameter 68 pointer "You wrote the string "%s".\n">

513:
old  <	mov [rbp + 76], rbp>
new  <	mov qword [rbp + 68], string_You20wrote20the20string202225s222E0A#>

514:
old  <	add qword [rbp + 76], 24>
new  <>

515:
old  <>
new  < mains$11:>

516:
old  < mains$7:>
new  <	; Parameter 76 pointer s>

517:
old  <	; Call 44 scanf 8>
new  <	mov [rbp + 76], rbp>

518:
old  <	mov qword [rbp + 44], mains$8>
new  <	add qword [rbp + 76], 24>

519:
old  <	mov [rbp + 52], rbp>
new  <>

520:
old  <	add rbp, 44>
new  < mains$12:>

521:
old  <	mov rdi, rbp>
new  <	; Call 44 printf 8>

522:
old  <	add rdi, 8>
new  <	mov qword [rbp + 44], mains$13>

523:
old  <	jmp scanf>
new  <	mov [rbp + 52], rbp>

524:
old  <>
new  <	add rbp, 44>

525:
old  < mains$8:>
new  <	mov rdi, rbp>

526:
old  <	; PostCall 44>
new  <	add rdi, 8>

527:
old  <>
new  <	jmp printf>

528:
old  < mains$9:>
new  <>

529:
old  <	; PreCall 44 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < mains$13:>

530:
old  <>
new  <	; PostCall 44>

531:
old  < mains$10:>
new  <>

532:
old  <	; Parameter 68 pointer "You wrote the string "%s".\n">
new  < mains$14:>

533:
old  <	mov qword [rbp + 68], string_You20wrote20the20string202225s222E0A#>
new  <	; Return>

534:
old  <>
new  <	mov rax, [rbp]>

535:
old  < mains$11:>
new  <	mov rdi, [rbp + 16]>

536:
old  <	; Parameter 76 pointer s>
new  <	mov rbp, [rbp + 8]>

537:
old  <	mov [rbp + 76], rbp>
new  <	jmp rax>

538:
old  <	add qword [rbp + 76], 24>
new  <>

539:
old  <>
new  < mains$15:>

540:
old  < mains$12:>
new  <	; FunctionEnd mains>

541:
old  <	; Call 44 printf 8>
new  <>

542:
old  <	mov qword [rbp + 44], mains$13>
new  <section .text>

543:
old  <	mov [rbp + 52], rbp>
new  <>

544:
old  <	add rbp, 44>
new  < maint:>

545:
old  <	mov rdi, rbp>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

546:
old  <	add rdi, 8>
new  <>

547:
old  <	jmp printf>
new  < maint$1:>

548:
old  <>
new  <	; Call 24 limits_test 0>

549:
old  < mains$13:>
new  <	mov qword [rbp + 24], maint$2>

550:
old  <	; PostCall 44>
new  <	mov [rbp + 32], rbp>

551:
old  <>
new  <	add rbp, 24>

552:
old  < mains$14:>
new  <	jmp limits_test>

553:
old  <	; Return>
new  <>

554:
old  <	mov rax, [rbp]>
new  < maint$2:>

555:
old  <	mov rdi, [rbp + 16]>
new  <	; PostCall 24>

556:
old  <	mov rbp, [rbp + 8]>
new  <>

557:
old  <	jmp rax>
new  < maint$3:>

558:
old  <>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

559:
old  < mains$15:>
new  <>

560:
old  <	; FunctionEnd mains>
new  < maint$4:>

561:
old  <>
new  <	; Call 24 time_test 0>

562:
old  <section .text>
new  <	mov qword [rbp + 24], maint$5>

563:
old  <>
new  <	mov [rbp + 32], rbp>

564:
old  < maint:>
new  <	add rbp, 24>

565:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	jmp time_test>

567:
old  < maint$1:>
new  < maint$5:>

568:
old  <	; Call 24 limits_test 0>
new  <	; PostCall 24>

569:
old  <	mov qword [rbp + 24], maint$2>
new  <>

570:
old  <	mov [rbp + 32], rbp>
new  < maint$6:>

571:
old  <	add rbp, 24>
new  <	; Return>

572:
old  <	jmp limits_test>
new  <	mov rax, [rbp]>

573:
old  <>
new  <	mov rdi, [rbp + 16]>

574:
old  < maint$2:>
new  <	mov rbp, [rbp + 8]>

575:
old  <	; PostCall 24>
new  <	jmp rax>

577:
old  < maint$3:>
new  < maint$7:>

578:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; FunctionEnd maint>

580:
old  < maint$4:>
new  <section .data>

581:
old  <	; Call 24 time_test 0>
new  <>

582:
old  <	mov qword [rbp + 24], maint$5>
new  <float8$10#:>

583:
old  <	mov [rbp + 32], rbp>
new  <	; Initializer Double 10>

584:
old  <	add rbp, 24>
new  <	dq 10.0>

585:
old  <	jmp time_test>
new  <>

586:
old  <>
new  <section .text>

587:
old  < maint$5:>
new  <>

588:
old  <	; PostCall 24>
new  < mainY:>

589:
old  <>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

590:
old  < maint$6:>
new  <>

591:
old  <	; Return>
new  < mainY$1:>

592:
old  <	mov rax, [rbp]>
new  <	; Call 24 malloc_test 0>

593:
old  <	mov rdi, [rbp + 16]>
new  <	mov qword [rbp + 24], mainY$2>

594:
old  <	mov rbp, [rbp + 8]>
new  <	mov [rbp + 32], rbp>

595:
old  <	jmp rax>
new  <	add rbp, 24>

596:
old  <>
new  <	jmp malloc_test>

597:
old  < maint$7:>
new  <>

598:
old  <	; FunctionEnd maint>
new  < mainY$2:>

599:
old  <>
new  <	; PostCall 24>

600:
old  <section .data>
new  <>

601:
old  <>
new  < mainY$3:>

602:
old  <float8$10#:>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

603:
old  <	; Initializer Double 10>
new  <>

604:
old  <	dq 10.0>
new  < mainY$4:>

605:
old  <>
new  <	; PushFloat 10>

606:
old  <section .text>
new  <	fld qword [float8$10#]>

608:
old  < mainY:>
new  < mainY$5:>

609:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter 48 double 10>

610:
old  <>
new  <	fstp qword [rbp + 48]>

611:
old  < mainY$1:>
new  <>

612:
old  <	; Call 24 malloc_test 0>
new  < mainY$6:>

613:
old  <	mov qword [rbp + 24], mainY$2>
new  <	; Call 24 setjmp_test 0>

614:
old  <	mov [rbp + 32], rbp>
new  <	mov qword [rbp + 24], mainY$7>

615:
old  <	add rbp, 24>
new  <	mov [rbp + 32], rbp>

616:
old  <	jmp malloc_test>
new  <	add rbp, 24>

617:
old  <>
new  <	jmp setjmp_test>

618:
old  < mainY$2:>
new  <>

619:
old  <	; PostCall 24>
new  < mainY$7:>

620:
old  <>
new  <	; PostCall 24>

621:
old  < mainY$3:>
new  <>

622:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < mainY$8:>

623:
old  <>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

624:
old  < mainY$4:>
new  <>

625:
old  <	; PushFloat 10>
new  < mainY$9:>

626:
old  <	fld qword [float8$10#]>
new  <	; PushFloat 0>

627:
old  <>
new  <	fldz>

628:
old  < mainY$5:>
new  <>

629:
old  <	; Parameter 48 double 10>
new  < mainY$10:>

630:
old  <	fstp qword [rbp + 48]>
new  <	; Parameter 48 double 0>

631:
old  <>
new  <	fstp qword [rbp + 48]>

632:
old  < mainY$6:>
new  <>

633:
old  <	; Call 24 setjmp_test 0>
new  < mainY$11:>

634:
old  <	mov qword [rbp + 24], mainY$7>
new  <	; Call 24 setjmp_test 0>

635:
old  <	mov [rbp + 32], rbp>
new  <	mov qword [rbp + 24], mainY$12>

636:
old  <	add rbp, 24>
new  <	mov [rbp + 32], rbp>

637:
old  <	jmp setjmp_test>
new  <	add rbp, 24>

638:
old  <>
new  <	jmp setjmp_test>

639:
old  < mainY$7:>
new  <>

640:
old  <	; PostCall 24>
new  < mainY$12:>

641:
old  <>
new  <	; PostCall 24>

642:
old  < mainY$8:>
new  <>

643:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < mainY$13:>

644:
old  <>
new  <	; Return>

645:
old  < mainY$9:>
new  <	mov rax, [rbp]>

646:
old  <	; PushFloat 0>
new  <	mov rdi, [rbp + 16]>

647:
old  <	fldz>
new  <	mov rbp, [rbp + 8]>

648:
old  <>
new  <	jmp rax>

649:
old  < mainY$10:>
new  <>

650:
old  <	; Parameter 48 double 0>
new  < mainY$14:>

651:
old  <	fstp qword [rbp + 48]>
new  <	; FunctionEnd mainY>

653:
old  < mainY$11:>
new  <section .data>

654:
old  <	; Call 24 setjmp_test 0>
new  <>

655:
old  <	mov qword [rbp + 24], mainY$12>
new  <string_25i3A2025i203C25c3E0A#:>

656:
old  <	mov [rbp + 32], rbp>
new  <	; Initializer String %i: %i <%c>\n>

657:
old  <	add rbp, 24>
new  <	db "%i: %i <%c>", 10, 0>

658:
old  <	jmp setjmp_test>
new  <>

659:
old  <>
new  <section .data>

660:
old  < mainY$12:>
new  <>

661:
old  <	; PostCall 24>
new  <string_0Aargc3A2025i0A#:>

662:
old  <>
new  <	; Initializer String \nargc: %i\n>

663:
old  < mainY$13:>
new  <	db 10, "argc: %i", 10, 0>

664:
old  <	; Return>
new  <>

665:
old  <	mov rax, [rbp]>
new  <section .data>

666:
old  <	mov rdi, [rbp + 16]>
new  <>

667:
old  <	mov rbp, [rbp + 8]>
new  <string_25i3A203C25s3E0A#:>

668:
old  <	jmp rax>
new  <	; Initializer String %i: <%s>\n>

669:
old  <>
new  <	db "%i: <%s>", 10, 0>

670:
old  < mainY$14:>
new  <>

671:
old  <	; FunctionEnd mainY>
new  <section .data>

673:
old  <section .data>
new  <string_0A#:>

674:
old  <>
new  <	; Initializer String \n>

675:
old  <string_25i3A2025i203C25c3E0A#:>
new  <	db 10, 0>

676:
old  <	; Initializer String %i: %i <%c>\n>
new  <>

677:
old  <	db "%i: %i <%c>", 10, 0>
new  <section .data>

679:
old  <section .data>
new  <int8$8#:>

680:
old  <>
new  <	; Initializer Pointer 8>

681:
old  <string_0Aargc3A2025i0A#:>
new  <	dq 8>

682:
old  <	; Initializer String \nargc: %i\n>
new  <>

683:
old  <	db 10, "argc: %i", 10, 0>
new  <section .text>

685:
old  <section .data>
new  < mainX:>

686:
old  <>
new  <	; Assign index 129>

687:
old  <string_25i3A203C25s3E0A#:>
new  <	mov dword [rbp + 36], 129>

688:
old  <	; Initializer String %i: <%s>\n>
new  <>

689:
old  <	db "%i: <%s>", 10, 0>
new  < mainX$1:>

690:
old  <>
new  <	; SignedGreaterThanEqual 16 index 255>

691:
old  <section .data>
new  <	cmp dword [rbp + 36], 255>

692:
old  <>
new  <	jge mainX$16>

693:
old  <string_0A#:>
new  <>

694:
old  <	; Initializer String \n>
new  < mainX$2:>

695:
old  <	db 10, 0>
new  <	; IntegralToIntegral Â£temporary41 index>

696:
old  <>
new  <	mov esi, [rbp + 36]>

697:
old  <section .data>
new  <	mov rax, 4294967295>

698:
old  <>
new  <	and rsi, rax>

699:
old  <int8$8#:>
new  <>

700:
old  <	; Initializer Pointer 8>
new  < mainX$3:>

701:
old  <	dq 8>
new  <	; Dereference Â£temporary42 -> Â£temporary41 Â£temporary41 0>

703:
old  <section .text>
new  < mainX$4:>

704:
old  <>
new  <	; Assign c Â£temporary42 -> Â£temporary41>

705:
old  < mainX:>
new  <	mov al, [rsi]>

706:
old  <	; Assign index 129>
new  <	mov [rbp + 40], al>

707:
old  <	mov dword [rbp + 36], 129>
new  <>

708:
old  <>
new  < mainX$5:>

709:
old  < mainX$1:>
new  <	; PreCall 41 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

710:
old  <	; SignedGreaterThanEqual 16 index 255>
new  <>

711:
old  <	cmp dword [rbp + 36], 255>
new  < mainX$6:>

712:
old  <	jge mainX$16>
new  <	; Parameter 65 pointer "%i: %i <%c>\n">

713:
old  <>
new  <	mov qword [rbp + 65], string_25i3A2025i203C25c3E0A#>

714:
old  < mainX$2:>
new  <>

715:
old  <	; IntegralToIntegral Â£temporary41 index>
new  < mainX$7:>

716:
old  <	mov esi, [rbp + 36]>
new  <	; Parameter 73 signedint index>

717:
old  <	mov rax, 4294967295>
new  <	mov eax, [rbp + 36]>

718:
old  <	and rsi, rax>
new  <	mov [rbp + 73], eax>

720:
old  < mainX$3:>
new  < mainX$8:>

721:
old  <	; Dereference Â£temporary42 -> Â£temporary41 Â£temporary41 0>
new  <	; IntegralToIntegral Â£temporary43 c>

722:
old  <>
new  <	mov al, [rbp + 40]>

723:
old  < mainX$4:>
new  <	and eax, 255>

724:
old  <	; Assign c Â£temporary42 -> Â£temporary41>
new  <	cmp al, 0>

725:
old  <	mov al, [rsi]>
new  <	jge mainX$9>

726:
old  <	mov [rbp + 40], al>
new  <	neg al>

727:
old  <>
new  <	neg eax>

728:
old  < mainX$5:>
new  <>

729:
old  <	; PreCall 41 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < mainX$9:>

730:
old  <>
new  <	; Parameter 77 signedint Â£temporary43>

731:
old  < mainX$6:>
new  <	mov [rbp + 77], eax>

732:
old  <	; Parameter 65 pointer "%i: %i <%c>\n">
new  <>

733:
old  <	mov qword [rbp + 65], string_25i3A2025i203C25c3E0A#>
new  < mainX$10:>

734:
old  <>
new  <	; IntegralToIntegral Â£temporary44 c>

735:
old  < mainX$7:>
new  <	mov al, [rbp + 40]>

736:
old  <	; Parameter 73 signedint index>
new  <	and eax, 255>

737:
old  <	mov eax, [rbp + 36]>
new  <	cmp al, 0>

738:
old  <	mov [rbp + 73], eax>
new  <	jge mainX$11>

739:
old  <>
new  <	neg al>

740:
old  < mainX$8:>
new  <	neg eax>

741:
old  <	; IntegralToIntegral Â£temporary43 c>
new  <>

742:
old  <	mov al, [rbp + 40]>
new  < mainX$11:>

743:
old  <	and eax, 255>
new  <	; Parameter 81 signedint Â£temporary44>

744:
old  <	cmp al, 0>
new  <	mov [rbp + 81], eax>

745:
old  <	jge mainX$9>
new  <>

746:
old  <	neg al>
new  < mainX$12:>

747:
old  <	neg eax>
new  <	; Call 41 printf 12>

748:
old  <>
new  <	mov qword [rbp + 41], mainX$13>

749:
old  < mainX$9:>
new  <	mov [rbp + 49], rbp>

750:
old  <	; Parameter 77 signedint Â£temporary43>
new  <	add rbp, 41>

751:
old  <	mov [rbp + 77], eax>
new  <	mov rdi, rbp>

752:
old  <>
new  <	add rdi, 12>

753:
old  < mainX$10:>
new  <	jmp printf>

754:
old  <	; IntegralToIntegral Â£temporary44 c>
new  <>

755:
old  <	mov al, [rbp + 40]>
new  < mainX$13:>

756:
old  <	and eax, 255>
new  <	; PostCall 41>

757:
old  <	cmp al, 0>
new  <>

758:
old  <	jge mainX$11>
new  < mainX$14:>

759:
old  <	neg al>
new  <	; BinaryAdd index index 1>

760:
old  <	neg eax>
new  <	inc dword [rbp + 36]>

762:
old  < mainX$11:>
new  < mainX$15:>

763:
old  <	; Parameter 81 signedint Â£temporary44>
new  <	; Goto 1>

764:
old  <	mov [rbp + 81], eax>
new  <	jmp mainX$1>

766:
old  < mainX$12:>
new  < mainX$16:>

767:
old  <	; Call 41 printf 12>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

768:
old  <	mov qword [rbp + 41], mainX$13>
new  <>

769:
old  <	mov [rbp + 49], rbp>
new  < mainX$17:>

770:
old  <	add rbp, 41>
new  <	; Parameter 64 pointer "\nargc: %i\n">

771:
old  <	mov rdi, rbp>
new  <	mov qword [rbp + 64], string_0Aargc3A2025i0A#>

772:
old  <	add rdi, 12>
new  <>

773:
old  <	jmp printf>
new  < mainX$18:>

774:
old  <>
new  <	; Parameter 72 signedint argc>

775:
old  < mainX$13:>
new  <	mov eax, [rbp + 24]>

776:
old  <	; PostCall 41>
new  <	mov [rbp + 72], eax>

778:
old  < mainX$14:>
new  < mainX$19:>

779:
old  <	; BinaryAdd index index 1>
new  <	; Call 40 printf 4>

780:
old  <	inc dword [rbp + 36]>
new  <	mov qword [rbp + 40], mainX$20>

781:
old  <>
new  <	mov [rbp + 48], rbp>

782:
old  < mainX$15:>
new  <	add rbp, 40>

783:
old  <	; Goto 1>
new  <	mov rdi, rbp>

784:
old  <	jmp mainX$1>
new  <	add rdi, 4>

785:
old  <>
new  <	jmp printf>

786:
old  < mainX$16:>
new  <>

787:
old  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < mainX$20:>

788:
old  <>
new  <	; PostCall 40>

789:
old  < mainX$17:>
new  <>

790:
old  <	; Parameter 64 pointer "\nargc: %i\n">
new  < mainX$21:>

791:
old  <	mov qword [rbp + 64], string_0Aargc3A2025i0A#>
new  <	; Assign index 0>

792:
old  <>
new  <	mov dword [rbp + 36], 0>

793:
old  < mainX$18:>
new  <>

794:
old  <	; Parameter 72 signedint argc>
new  < mainX$22:>

795:
old  <	mov eax, [rbp + 24]>
new  <	; SignedGreaterThanEqual 35 index argc>

796:
old  <	mov [rbp + 72], eax>
new  <	mov eax, [rbp + 24]>

797:
old  <>
new  <	cmp [rbp + 36], eax>

798:
old  < mainX$19:>
new  <	jge mainX$35>

799:
old  <	; Call 40 printf 4>
new  <>

800:
old  <	mov qword [rbp + 40], mainX$20>
new  < mainX$23:>

801:
old  <	mov [rbp + 48], rbp>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

802:
old  <	add rbp, 40>
new  <>

803:
old  <	mov rdi, rbp>
new  < mainX$24:>

804:
old  <	add rdi, 4>
new  <	; Parameter 64 pointer "%i: <%s>\n">

805:
old  <	jmp printf>
new  <	mov qword [rbp + 64], string_25i3A203C25s3E0A#>

807:
old  < mainX$20:>
new  < mainX$25:>

808:
old  <	; PostCall 40>
new  <	; Parameter 72 signedint index>

809:
old  <>
new  <	mov eax, [rbp + 36]>

810:
old  < mainX$21:>
new  <	mov [rbp + 72], eax>

811:
old  <	; Assign index 0>
new  <>

812:
old  <	mov dword [rbp + 36], 0>
new  < mainX$26:>

813:
old  <>
new  <	; IntegralToIntegral Â£temporary50 index>

814:
old  < mainX$22:>
new  <	mov eax, [rbp + 36]>

815:
old  <	; SignedGreaterThanEqual 35 index argc>
new  <	mov rbx, 4294967295>

816:
old  <	mov eax, [rbp + 24]>
new  <	and rax, rbx>

817:
old  <	cmp [rbp + 36], eax>
new  <>

818:
old  <	jge mainX$35>
new  < mainX$27:>

819:
old  <>
new  <	; UnsignedMultiply Â£temporary51 Â£temporary50 8>

820:
old  < mainX$23:>
new  <	xor rdx, rdx>

821:
old  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mul qword [int8$8#]>

823:
old  < mainX$24:>
new  < mainX$28:>

824:
old  <	; Parameter 64 pointer "%i: <%s>\n">
new  <	; BinaryAdd Â£temporary52 argv Â£temporary51>

825:
old  <	mov qword [rbp + 64], string_25i3A203C25s3E0A#>
new  <	mov rsi, [rbp + 28]>

826:
old  <>
new  <	add rsi, rax>

827:
old  < mainX$25:>
new  <>

828:
old  <	; Parameter 72 signedint index>
new  < mainX$29:>

829:
old  <	mov eax, [rbp + 36]>
new  <	; Dereference Â£temporary49 -> Â£temporary52 Â£temporary52 0>

830:
old  <	mov [rbp + 72], eax>
new  <>

831:
old  <>
new  < mainX$30:>

832:
old  < mainX$26:>
new  <	; Parameter 76 pointer Â£temporary49 -> Â£temporary52>

833:
old  <	; IntegralToIntegral Â£temporary50 index>
new  <	mov rax, [rsi]>

834:
old  <	mov eax, [rbp + 36]>
new  <	mov [rbp + 76], rax>

835:
old  <	mov rbx, 4294967295>
new  <>

836:
old  <	and rax, rbx>
new  < mainX$31:>

837:
old  <>
new  <	; Call 40 printf 12>

838:
old  < mainX$27:>
new  <	mov qword [rbp + 40], mainX$32>

839:
old  <	; UnsignedMultiply Â£temporary51 Â£temporary50 8>
new  <	mov [rbp + 48], rbp>

840:
old  <	xor rdx, rdx>
new  <	add rbp, 40>

841:
old  <	mul qword [int8$8#]>
new  <	mov rdi, rbp>

842:
old  <>
new  <	add rdi, 12>

843:
old  < mainX$28:>
new  <	jmp printf>

844:
old  <	; BinaryAdd Â£temporary52 argv Â£temporary51>
new  <>

845:
old  <	mov rsi, [rbp + 28]>
new  < mainX$32:>

846:
old  <	add rsi, rax>
new  <	; PostCall 40>

848:
old  < mainX$29:>
new  < mainX$33:>

849:
old  <	; Dereference Â£temporary49 -> Â£temporary52 Â£temporary52 0>
new  <	; BinaryAdd index index 1>

850:
old  <>
new  <	inc dword [rbp + 36]>

851:
old  < mainX$30:>
new  <>

852:
old  <	; Parameter 76 pointer Â£temporary49 -> Â£temporary52>
new  < mainX$34:>

853:
old  <	mov rax, [rsi]>
new  <	; Goto 22>

854:
old  <	mov [rbp + 76], rax>
new  <	jmp mainX$22>

856:
old  < mainX$31:>
new  < mainX$35:>

857:
old  <	; Call 40 printf 12>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

858:
old  <	mov qword [rbp + 40], mainX$32>
new  <>

859:
old  <	mov [rbp + 48], rbp>
new  < mainX$36:>

860:
old  <	add rbp, 40>
new  <	; Parameter 64 pointer "\n">

861:
old  <	mov rdi, rbp>
new  <	mov qword [rbp + 64], string_0A#>

862:
old  <	add rdi, 12>
new  <>

863:
old  <	jmp printf>
new  < mainX$37:>

864:
old  <>
new  <	; Call 40 printf 0>

865:
old  < mainX$32:>
new  <	mov qword [rbp + 40], mainX$38>

866:
old  <	; PostCall 40>
new  <	mov [rbp + 48], rbp>

867:
old  <>
new  <	add rbp, 40>

868:
old  < mainX$33:>
new  <	mov rdi, rbp>

869:
old  <	; BinaryAdd index index 1>
new  <	jmp printf>

870:
old  <	inc dword [rbp + 36]>
new  <>

871:
old  <>
new  < mainX$38:>

872:
old  < mainX$34:>
new  <	; PostCall 40>

873:
old  <	; Goto 22>
new  <>

874:
old  <	jmp mainX$22>
new  < mainX$39:>

875:
old  <>
new  <	; Assign index 0>

876:
old  < mainX$35:>
new  <	mov dword [rbp + 36], 0>

877:
old  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

878:
old  <>
new  < mainX$40:>

879:
old  < mainX$36:>
new  <	; IntegralToIntegral Â£temporary56 index>

880:
old  <	; Parameter 64 pointer "\n">
new  <	mov eax, [rbp + 36]>

881:
old  <	mov qword [rbp + 64], string_0A#>
new  <	mov rbx, 4294967295>

882:
old  <>
new  <	and rax, rbx>

883:
old  < mainX$37:>
new  <>

884:
old  <	; Call 40 printf 0>
new  < mainX$41:>

885:
old  <	mov qword [rbp + 40], mainX$38>
new  <	; UnsignedMultiply Â£temporary57 Â£temporary56 8>

886:
old  <	mov [rbp + 48], rbp>
new  <	xor rdx, rdx>

887:
old  <	add rbp, 40>
new  <	mul qword [int8$8#]>

888:
old  <	mov rdi, rbp>
new  <>

889:
old  <	jmp printf>
new  < mainX$42:>

890:
old  <>
new  <	; BinaryAdd Â£temporary58 argv Â£temporary57>

891:
old  < mainX$38:>
new  <	mov rsi, [rbp + 28]>

892:
old  <	; PostCall 40>
new  <	add rsi, rax>

894:
old  < mainX$39:>
new  < mainX$43:>

895:
old  <	; Assign index 0>
new  <	; Dereference Â£temporary55 -> Â£temporary58 Â£temporary58 0>

896:
old  <	mov dword [rbp + 36], 0>
new  <>

897:
old  <>
new  < mainX$44:>

898:
old  < mainX$40:>
new  <	; Equal 57 Â£temporary55 -> Â£temporary58 0>

899:
old  <	; IntegralToIntegral Â£temporary56 index>
new  <	cmp qword [rsi], 0>

900:
old  <	mov eax, [rbp + 36]>
new  <	je mainX$57>

901:
old  <	mov rbx, 4294967295>
new  <>

902:
old  <	and rax, rbx>
new  < mainX$45:>

903:
old  <>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

904:
old  < mainX$41:>
new  <>

905:
old  <	; UnsignedMultiply Â£temporary57 Â£temporary56 8>
new  < mainX$46:>

906:
old  <	xor rdx, rdx>
new  <	; Parameter 64 pointer "%i: <%s>\n">

907:
old  <	mul qword [int8$8#]>
new  <	mov qword [rbp + 64], string_25i3A203C25s3E0A#>

909:
old  < mainX$42:>
new  < mainX$47:>

910:
old  <	; BinaryAdd Â£temporary58 argv Â£temporary57>
new  <	; Parameter 72 signedint index>

911:
old  <	mov rsi, [rbp + 28]>
new  <	mov eax, [rbp + 36]>

912:
old  <	add rsi, rax>
new  <	mov [rbp + 72], eax>

914:
old  < mainX$43:>
new  < mainX$48:>

915:
old  <	; Dereference Â£temporary55 -> Â£temporary58 Â£temporary58 0>
new  <	; IntegralToIntegral Â£temporary62 index>

916:
old  <>
new  <	mov eax, [rbp + 36]>

917:
old  < mainX$44:>
new  <	mov rbx, 4294967295>

918:
old  <	; Equal 57 Â£temporary55 -> Â£temporary58 0>
new  <	and rax, rbx>

919:
old  <	cmp qword [rsi], 0>
new  <>

920:
old  <	je mainX$57>
new  < mainX$49:>

921:
old  <>
new  <	; UnsignedMultiply Â£temporary63 Â£temporary62 8>

922:
old  < mainX$45:>
new  <	xor rdx, rdx>

923:
old  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mul qword [int8$8#]>

925:
old  < mainX$46:>
new  < mainX$50:>

926:
old  <	; Parameter 64 pointer "%i: <%s>\n">
new  <	; BinaryAdd Â£temporary64 argv Â£temporary63>

927:
old  <	mov qword [rbp + 64], string_25i3A203C25s3E0A#>
new  <	mov rsi, [rbp + 28]>

928:
old  <>
new  <	add rsi, rax>

929:
old  < mainX$47:>
new  <>

930:
old  <	; Parameter 72 signedint index>
new  < mainX$51:>

931:
old  <	mov eax, [rbp + 36]>
new  <	; Dereference Â£temporary61 -> Â£temporary64 Â£temporary64 0>

932:
old  <	mov [rbp + 72], eax>
new  <>

933:
old  <>
new  < mainX$52:>

934:
old  < mainX$48:>
new  <	; Parameter 76 pointer Â£temporary61 -> Â£temporary64>

935:
old  <	; IntegralToIntegral Â£temporary62 index>
new  <	mov rax, [rsi]>

936:
old  <	mov eax, [rbp + 36]>
new  <	mov [rbp + 76], rax>

937:
old  <	mov rbx, 4294967295>
new  <>

938:
old  <	and rax, rbx>
new  < mainX$53:>

939:
old  <>
new  <	; Call 40 printf 12>

940:
old  < mainX$49:>
new  <	mov qword [rbp + 40], mainX$54>

941:
old  <	; UnsignedMultiply Â£temporary63 Â£temporary62 8>
new  <	mov [rbp + 48], rbp>

942:
old  <	xor rdx, rdx>
new  <	add rbp, 40>

943:
old  <	mul qword [int8$8#]>
new  <	mov rdi, rbp>

944:
old  <>
new  <	add rdi, 12>

945:
old  < mainX$50:>
new  <	jmp printf>

946:
old  <	; BinaryAdd Â£temporary64 argv Â£temporary63>
new  <>

947:
old  <	mov rsi, [rbp + 28]>
new  < mainX$54:>

948:
old  <	add rsi, rax>
new  <	; PostCall 40>

950:
old  < mainX$51:>
new  < mainX$55:>

951:
old  <	; Dereference Â£temporary61 -> Â£temporary64 Â£temporary64 0>
new  <	; BinaryAdd index index 1>

952:
old  <>
new  <	inc dword [rbp + 36]>

953:
old  < mainX$52:>
new  <>

954:
old  <	; Parameter 76 pointer Â£temporary61 -> Â£temporary64>
new  < mainX$56:>

955:
old  <	mov rax, [rsi]>
new  <	; Goto 40>

956:
old  <	mov [rbp + 76], rax>
new  <	jmp mainX$40>

958:
old  < mainX$53:>
new  < mainX$57:>

959:
old  <	; Call 40 printf 12>
new  <	; Return>

960:
old  <	mov qword [rbp + 40], mainX$54>
new  <	mov rax, [rbp]>

961:
old  <	mov [rbp + 48], rbp>
new  <	mov rdi, [rbp + 16]>

962:
old  <	add rbp, 40>
new  <	mov rbp, [rbp + 8]>

963:
old  <	mov rdi, rbp>
new  <	jmp rax>

964:
old  <	add rdi, 12>
new  <>

965:
old  <	jmp printf>
new  < mainX$58:>

966:
old  <>
new  <	; FunctionEnd mainX>

967:
old  < mainX$54:>
new  <>

968:
old  <	; PostCall 40>
new  <section .text>

970:
old  < mainX$55:>
new  < mainm:>

971:
old  <	; BinaryAdd index index 1>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

972:
old  <	inc dword [rbp + 36]>
new  <>

973:
old  <>
new  < mainm$1:>

974:
old  < mainX$56:>
new  <	; Call 36 main_math 0>

975:
old  <	; Goto 40>
new  <	mov qword [rbp + 36], mainm$2>

976:
old  <	jmp mainX$40>
new  <	mov [rbp + 44], rbp>

977:
old  <>
new  <	add rbp, 36>

978:
old  < mainX$57:>
new  <	jmp main_math>

979:
old  <	; Return>
new  <>

980:
old  <	mov rax, [rbp]>
new  < mainm$2:>

981:
old  <	mov rdi, [rbp + 16]>
new  <	; PostCall 36>

982:
old  <	mov rbp, [rbp + 8]>
new  <>

983:
old  <	jmp rax>
new  < mainm$3:>

984:
old  <>
new  <	; Return>

985:
old  < mainX$58:>
new  <	mov rax, [rbp]>

986:
old  <	; FunctionEnd mainX>
new  <	mov rdi, [rbp + 16]>

987:
old  <>
new  <	mov rbp, [rbp + 8]>

988:
old  <section .text>
new  <	jmp rax>

990:
old  < mainm:>
new  < mainm$4:>

991:
old  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; FunctionEnd mainm>

993:
old  < mainm$1:>
new  <section .data>

994:
old  <	; Call 36 main_math 0>
new  <>

995:
old  <	mov qword [rbp + 36], mainm$2>
new  <string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#:>

996:
old  <	mov [rbp + 44], rbp>
new  <	; Initializer String Assertion failed: "%s" in file %s at line %i\n>

997:
old  <	add rbp, 36>
new  <	db "Assertion failed: ", 34, "%s", 34, " in file %s at line %i", 10, 0>

998:
old  <	jmp main_math>
new  <>

999:
old  <>
new  <section .data>

1000:
old  < mainm$2:>
new  <>

1001:
old  <	; PostCall 36>
new  <string_1203C202#:>

1002:
old  <>
new  <	; Initializer String 1 < 2>

1003:
old  < mainm$3:>
new  <	db "1 < 2", 0>

1004:
old  <	; Return>
new  <>

1005:
old  <	mov rax, [rbp]>
new  <section .data>

1006:
old  <	mov rdi, [rbp + 16]>
new  <>

1007:
old  <	mov rbp, [rbp + 8]>
new  <string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CMain2Ec#:>

1008:
old  <	jmp rax>
new  <	; Initializer String C:\Users\Stefan\Documents\vagrant\homestead\code\code\Main.c>

1009:
old  <>
new  <	db "C:\Users\Stefan\Documents\vagrant\homestead\code\code\Main.c", 0>

1010:
old  < mainm$4:>
new  <>

1011:
old  <	; FunctionEnd mainm>
new  <section .data>

1013:
old  <section .data>
new  <string_1203E202#:>

1014:
old  <>
new  <	; Initializer String 1 > 2>

1015:
old  <string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#:>
new  <	db "1 > 2", 0>

1016:
old  <	; Initializer String Assertion failed: "%s" in file %s at line %i\n>
new  <>

1017:
old  <	db "Assertion failed: ", 34, "%s", 34, " in file %s at line %i", 10, 0>
new  <section .text>

1019:
old  <section .data>
new  < maina:>

1020:
old  <>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1021:
old  <string_1203C202#:>
new  <>

1022:
old  <	; Initializer String 1 < 2>
new  < maina$1:>

1023:
old  <	db "1 < 2", 0>
new  <	; Parameter 48 pointer stderr>

1024:
old  <>
new  <	mov rax, [stderr]>

1025:
old  <section .data>
new  <	mov [rbp + 48], rax>

1027:
old  <string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CMain2Ec#:>
new  < maina$2:>

1028:
old  <	; Initializer String C:\Users\Stefan\Documents\vagrant\homestead\code\code\Main.c>
new  <	; Parameter 56 pointer "Assertion failed: "%s" in file %s at line %i\n">

1029:
old  <	db "C:\Users\Stefan\Documents\vagrant\homestead\code\code\Main.c", 0>
new  <	mov qword [rbp + 56], string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#>

1031:
old  <section .data>
new  < maina$3:>

1032:
old  <>
new  <	; Parameter 64 pointer "1 > 2">

1033:
old  <string_1203E202#:>
new  <	mov qword [rbp + 64], string_1203E202#>

1034:
old  <	; Initializer String 1 > 2>
new  <>

1035:
old  <	db "1 > 2", 0>
new  < maina$4:>

1036:
old  <>
new  <	; Parameter 72 pointer "C:\Users\Stefan\Documents\vagrant\homestead\code\code\Main.c">

1037:
old  <section .text>
new  <	mov qword [rbp + 72], string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CMain2Ec#>

1039:
old  < maina:>
new  < maina$5:>

1040:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter 80 signedint 197>

1041:
old  <>
new  <	mov dword [rbp + 80], 197>

1042:
old  < maina$1:>
new  <>

1043:
old  <	; Parameter 48 pointer stderr>
new  < maina$6:>

1044:
old  <	mov rax, [stderr]>
new  <	; Call 24 fprintf 20>

1045:
old  <	mov [rbp + 48], rax>
new  <	mov qword [rbp + 24], maina$7>

1046:
old  <>
new  <	mov [rbp + 32], rbp>

1047:
old  < maina$2:>
new  <	add rbp, 24>

1048:
old  <	; Parameter 56 pointer "Assertion failed: "%s" in file %s at line %i\n">
new  <	mov rdi, rbp>

1049:
old  <	mov qword [rbp + 56], string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#>
new  <	add rdi, 20>

1050:
old  <>
new  <	jmp fprintf>

1051:
old  < maina$3:>
new  <>

1052:
old  <	; Parameter 64 pointer "1 > 2">
new  < maina$7:>

1053:
old  <	mov qword [rbp + 64], string_1203E202#>
new  <	; PostCall 24>

1055:
old  < maina$4:>
new  < maina$8:>

1056:
old  <	; Parameter 72 pointer "C:\Users\Stefan\Documents\vagrant\homestead\code\code\Main.c">
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1057:
old  <	mov qword [rbp + 72], string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CMain2Ec#>
new  <>

1058:
old  <>
new  < maina$9:>

1059:
old  < maina$5:>
new  <	; Call 24 abort 0>

1060:
old  <	; Parameter 80 signedint 197>
new  <	mov qword [rbp + 24], maina$10>

1061:
old  <	mov dword [rbp + 80], 197>
new  <	mov [rbp + 32], rbp>

1062:
old  <>
new  <	add rbp, 24>

1063:
old  < maina$6:>
new  <	jmp abort>

1064:
old  <	; Call 24 fprintf 20>
new  <>

1065:
old  <	mov qword [rbp + 24], maina$7>
new  < maina$10:>

1066:
old  <	mov [rbp + 32], rbp>
new  <	; PostCall 24>

1067:
old  <	add rbp, 24>
new  <>

1068:
old  <	mov rdi, rbp>
new  < maina$11:>

1069:
old  <	add rdi, 20>
new  <	; Return>

1070:
old  <	jmp fprintf>
new  <	mov rax, [rbp]>

1071:
old  <>
new  <	mov rdi, [rbp + 16]>

1072:
old  < maina$7:>
new  <	mov rbp, [rbp + 8]>

1073:
old  <	; PostCall 24>
new  <	jmp rax>

1075:
old  < maina$8:>
new  < maina$12:>

1076:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; FunctionEnd maina>

1078:
old  < maina$9:>
new  <section .text>

1079:
old  <	; Call 24 abort 0>
new  <>

1080:
old  <	mov qword [rbp + 24], maina$10>
new  < _start:>

1081:
old  <	mov [rbp + 32], rbp>
new  <	; Initializerialize Stack Pointer>

1082:
old  <	add rbp, 24>
new  <	mov rbp, $StackTop>

1083:
old  <	jmp abort>
new  <	; Initializerialize Heap Pointer>

1084:
old  <>
new  <	mov dword [$StackTop + 65534], $StackTop>

1085:
old  < maina$10:>
new  <	add dword [$StackTop + 65534], 65534>

1086:
old  <	; PostCall 24>
new  <	; Initializerialize FPU Control Word, truncate mode => set bit 10 and 11.>

1087:
old  <>
new  <	fstcw [rbp]>

1088:
old  < maina$11:>
new  <	or word [rbp], 3072>

1089:
old  <	; Return>
new  <	fldcw [rbp]>

1090:
old  <	mov rax, [rbp]>
new  <	mov qword [$StackTop], 0>

1091:
old  <	mov rdi, [rbp + 16]>
new  <>

1092:
old  <	mov rbp, [rbp + 8]>
new  < main:>

1093:
old  <	jmp rax>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1095:
old  < maina$12:>
new  < main$1:>

1096:
old  <	; FunctionEnd maina>
new  <	; Call 24 file_test 0>

1097:
old  <>
new  <	mov qword [rbp + 24], main$2>

1098:
old  <section .text>
new  <	mov [rbp + 32], rbp>

1099:
old  <>
new  <	add rbp, 24>

1100:
old  < _start:>
new  <	jmp file_test>

1101:
old  <	; Initializerialize Stack Pointer>
new  <>

1102:
old  <	mov rbp, $StackTop>
new  < main$2:>

1103:
old  <	; Initializerialize Heap Pointer>
new  <	; PostCall 24>

1104:
old  <	mov dword [$StackTop + 65534], $StackTop>
new  <>

1105:
old  <	add dword [$StackTop + 65534], 65534>
new  < main$3:>

1106:
old  <	; Initializerialize FPU Control Word, truncate mode => set bit 10 and 11.>
new  <	; Return>

1107:
old  <	fstcw [rbp]>
new  <	cmp qword [rbp], 0>

1108:
old  <	or word [rbp], 3072>
new  <	je main$4>

1109:
old  <	fldcw [rbp]>
new  <	mov rax, [rbp]>

1110:
old  <	mov qword [$StackTop], 0>
new  <	mov rdi, [rbp + 16]>

1111:
old  <>
new  <	mov rbp, [rbp + 8]>

1112:
old  < main:>
new  <	jmp rax>

1113:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1114:
old  <>
new  < main$4:>

1115:
old  < main$1:>
new  <	; Exit>

1116:
old  <	; Call 24 time_test 0>
new  <	mov rdi, 0>

1117:
old  <	mov qword [rbp + 24], main$2>
new  <	mov rax, 60>

1118:
old  <	mov [rbp + 32], rbp>
new  <	syscall>

1119:
old  <	add rbp, 24>
new  <>

1120:
old  <	jmp time_test>
new  < main$5:>

1121:
old  <>
new  <	; FunctionEnd main>

1122:
old  < main$2:>
new  <>

1123:
old  <	; PostCall 24>
new  <section .data>

1125:
old  < main$3:>
new  <@419$ZERO:>

1126:
old  <	; Return>
new  <	; Initializer SignedInt 0>

1127:
old  <	cmp qword [rbp], 0>
new  <	dd 0>

1128:
old  <	je main$4>
new  <>

1129:
old  <	mov rax, [rbp]>
new  <section .data>

1130:
old  <	mov rdi, [rbp + 16]>
new  <>

1131:
old  <	mov rbp, [rbp + 8]>
new  <@420$ONE:>

1132:
old  <	jmp rax>
new  <	; Initializer SignedInt 1>

1133:
old  <>
new  <	dd 1>

1134:
old  < main$4:>
new  <>

1135:
old  <	; Exit>
new  <section .data>

1136:
old  <	mov rdi, 0>
new  <>

1137:
old  <	mov rax, 60>
new  <@423$TWO:>

1138:
old  <	syscall>
new  <	; Initializer SignedInt 2>

1139:
old  <>
new  <	dd 2>

1140:
old  < main$5:>
new  <>

1141:
old  <	; FunctionEnd main>
new  <section .data>

1143:
old  <section .data>
new  <@424$THREE:>

1144:
old  <>
new  <	; Initializer SignedInt 3>

1145:
old  <@423$ZERO:>
new  <	dd 3>

1146:
old  <	; Initializer SignedInt 0>
new  <>

1147:
old  <	dd 0>
new  <section .data>

1149:
old  <section .data>
new  <string_argc3A2025i0A#:>

1150:
old  <>
new  <	; Initializer String argc: %i\n>

1151:
old  <@424$ONE:>
new  <	db "argc: %i", 10, 0>

1152:
old  <	; Initializer SignedInt 1>
new  <>

1153:
old  <	dd 1>
new  <section .data>

1155:
old  <section .data>
new  <string_Hello210A#:>

1156:
old  <>
new  <	; Initializer String Hello!\n>

1157:
old  <@427$TWO:>
new  <	db "Hello!", 10, 0>

1158:
old  <	; Initializer SignedInt 2>
new  <>

1159:
old  <	dd 2>
new  <section .data>

1161:
old  <section .data>
new  <string_Please20write20a20character2C20a20string2C20an20integer2C20and20a20double3A20#:>

1162:
old  <>
new  <	; Initializer String Please write a character, a string, an integer, and a double: >

1163:
old  <@428$THREE:>
new  <	db "Please write a character, a string, an integer, and a double: ", 0>

1164:
old  <	; Initializer SignedInt 3>
new  <>

1165:
old  <	dd 3>
new  <section .data>

1167:
old  <section .data>
new  <string_25c2025s2025i2025lf#:>

1168:
old  <>
new  <	; Initializer String %c %s %i %lf>

1169:
old  <string_argc3A2025i0A#:>
new  <	db "%c %s %i %lf", 0>

1170:
old  <	; Initializer String argc: %i\n>
new  <>

1171:
old  <	db "argc: %i", 10, 0>
new  <section .data>

1173:
old  <section .data>
new  <string_You20wrote20the20character202725c272C20the20string202225s222C20the20integer2025i2C20and20the20double2025f2E0A#:>

1174:
old  <>
new  <	; Initializer String You wrote the character '%c', the string "%s", the integer %i, and the double %f.\n>

1175:
old  <string_Hello210A#:>
new  <	db "You wrote the character ", 39, "%c", 39, ", the string ", 34, "%s", 34, ", the integer %i, and the double %f.", 10, 0>

1176:
old  <	; Initializer String Hello!\n>
new  <>

1177:
old  <	db "Hello!", 10, 0>
new  <section .text>

1179:
old  <section .data>
new  < mainX4:>

1180:
old  <>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1181:
old  <string_Please20write20a20character2C20a20string2C20an20integer2C20and20a20double3A20#:>
new  <>

1182:
old  <	; Initializer String Please write a character, a string, an integer, and a double: >
new  < mainX4$1:>

1183:
old  <	db "Please write a character, a string, an integer, and a double: ", 0>
new  <	; Parameter 60 pointer "argc: %i\n">

1184:
old  <>
new  <	mov qword [rbp + 60], string_argc3A2025i0A#>

1185:
old  <section .data>
new  <>

1186:
old  <>
new  < mainX4$2:>

1187:
old  <string_25c2025s2025i2025lf#:>
new  <	; Parameter 68 signedint argc>

1188:
old  <	; Initializer String %c %s %i %lf>
new  <	mov eax, [rbp + 24]>

1189:
old  <	db "%c %s %i %lf", 0>
new  <	mov [rbp + 68], eax>

1191:
old  <section .data>
new  < mainX4$3:>

1192:
old  <>
new  <	; Call 36 printf 4>

1193:
old  <string_You20wrote20the20character202725c272C20the20string202225s222C20the20integer2025i2C20and20the20double2025f2E0A#:>
new  <	mov qword [rbp + 36], mainX4$4>

1194:
old  <	; Initializer String You wrote the character '%c', the string "%s", the integer %i, and the double %f.\n>
new  <	mov [rbp + 44], rbp>

1195:
old  <	db "You wrote the character ", 39, "%c", 39, ", the string ", 34, "%s", 34, ", the integer %i, and the double %f.", 10, 0>
new  <	add rbp, 36>

1196:
old  <>
new  <	mov rdi, rbp>

1197:
old  <section .text>
new  <	add rdi, 4>

1198:
old  <>
new  <	jmp printf>

1199:
old  < mainX4:>
new  <>

1200:
old  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < mainX4$4:>

1201:
old  <>
new  <	; PostCall 36>

1202:
old  < mainX4$1:>
new  <>

1203:
old  <	; Parameter 60 pointer "argc: %i\n">
new  < mainX4$5:>

1204:
old  <	mov qword [rbp + 60], string_argc3A2025i0A#>
new  <	; Assign index 0>

1205:
old  <>
new  <	mov dword [rbp + 36], 0>

1206:
old  < mainX4$2:>
new  <>

1207:
old  <	; Parameter 68 signedint argc>
new  < mainX4$6:>

1208:
old  <	mov eax, [rbp + 24]>
new  <	; SignedGreaterThanEqual 19 index argc>

1209:
old  <	mov [rbp + 68], eax>
new  <	mov eax, [rbp + 24]>

1210:
old  <>
new  <	cmp [rbp + 36], eax>

1211:
old  < mainX4$3:>
new  <	jge mainX4$19>

1212:
old  <	; Call 36 printf 4>
new  <>

1213:
old  <	mov qword [rbp + 36], mainX4$4>
new  < mainX4$7:>

1214:
old  <	mov [rbp + 44], rbp>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1215:
old  <	add rbp, 36>
new  <>

1216:
old  <	mov rdi, rbp>
new  < mainX4$8:>

1217:
old  <	add rdi, 4>
new  <	; Parameter 64 pointer "%i: <%s>\n">

1218:
old  <	jmp printf>
new  <	mov qword [rbp + 64], string_25i3A203C25s3E0A#>

1220:
old  < mainX4$4:>
new  < mainX4$9:>

1221:
old  <	; PostCall 36>
new  <	; Parameter 72 signedint index>

1222:
old  <>
new  <	mov eax, [rbp + 36]>

1223:
old  < mainX4$5:>
new  <	mov [rbp + 72], eax>

1224:
old  <	; Assign index 0>
new  <>

1225:
old  <	mov dword [rbp + 36], 0>
new  < mainX4$10:>

1226:
old  <>
new  <	; IntegralToIntegral Â£temporary80 index>

1227:
old  < mainX4$6:>
new  <	mov eax, [rbp + 36]>

1228:
old  <	; SignedGreaterThanEqual 19 index argc>
new  <	mov rbx, 4294967295>

1229:
old  <	mov eax, [rbp + 24]>
new  <	and rax, rbx>

1230:
old  <	cmp [rbp + 36], eax>
new  <>

1231:
old  <	jge mainX4$19>
new  < mainX4$11:>

1232:
old  <>
new  <	; UnsignedMultiply Â£temporary81 Â£temporary80 8>

1233:
old  < mainX4$7:>
new  <	xor rdx, rdx>

1234:
old  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mul qword [int8$8#]>

1236:
old  < mainX4$8:>
new  < mainX4$12:>

1237:
old  <	; Parameter 64 pointer "%i: <%s>\n">
new  <	; BinaryAdd Â£temporary82 argv Â£temporary81>

1238:
old  <	mov qword [rbp + 64], string_25i3A203C25s3E0A#>
new  <	mov rsi, [rbp + 28]>

1239:
old  <>
new  <	add rsi, rax>

1240:
old  < mainX4$9:>
new  <>

1241:
old  <	; Parameter 72 signedint index>
new  < mainX4$13:>

1242:
old  <	mov eax, [rbp + 36]>
new  <	; Dereference Â£temporary79 -> Â£temporary82 Â£temporary82 0>

1243:
old  <	mov [rbp + 72], eax>
new  <>

1244:
old  <>
new  < mainX4$14:>

1245:
old  < mainX4$10:>
new  <	; Parameter 76 pointer Â£temporary79 -> Â£temporary82>

1246:
old  <	; IntegralToIntegral Â£temporary80 index>
new  <	mov rax, [rsi]>

1247:
old  <	mov eax, [rbp + 36]>
new  <	mov [rbp + 76], rax>

1248:
old  <	mov rbx, 4294967295>
new  <>

1249:
old  <	and rax, rbx>
new  < mainX4$15:>

1250:
old  <>
new  <	; Call 40 printf 12>

1251:
old  < mainX4$11:>
new  <	mov qword [rbp + 40], mainX4$16>

1252:
old  <	; UnsignedMultiply Â£temporary81 Â£temporary80 8>
new  <	mov [rbp + 48], rbp>

1253:
old  <	xor rdx, rdx>
new  <	add rbp, 40>

1254:
old  <	mul qword [int8$8#]>
new  <	mov rdi, rbp>

1255:
old  <>
new  <	add rdi, 12>

1256:
old  < mainX4$12:>
new  <	jmp printf>

1257:
old  <	; BinaryAdd Â£temporary82 argv Â£temporary81>
new  <>

1258:
old  <	mov rsi, [rbp + 28]>
new  < mainX4$16:>

1259:
old  <	add rsi, rax>
new  <	; PostCall 40>

1261:
old  < mainX4$13:>
new  < mainX4$17:>

1262:
old  <	; Dereference Â£temporary79 -> Â£temporary82 Â£temporary82 0>
new  <	; BinaryAdd index index 1>

1263:
old  <>
new  <	inc dword [rbp + 36]>

1264:
old  < mainX4$14:>
new  <>

1265:
old  <	; Parameter 76 pointer Â£temporary79 -> Â£temporary82>
new  < mainX4$18:>

1266:
old  <	mov rax, [rsi]>
new  <	; Goto 6>

1267:
old  <	mov [rbp + 76], rax>
new  <	jmp mainX4$6>

1269:
old  < mainX4$15:>
new  < mainX4$19:>

1270:
old  <	; Call 40 printf 12>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1271:
old  <	mov qword [rbp + 40], mainX4$16>
new  <>

1272:
old  <	mov [rbp + 48], rbp>
new  < mainX4$20:>

1273:
old  <	add rbp, 40>
new  <	; Parameter 64 pointer "\n">

1274:
old  <	mov rdi, rbp>
new  <	mov qword [rbp + 64], string_0A#>

1275:
old  <	add rdi, 12>
new  <>

1276:
old  <	jmp printf>
new  < mainX4$21:>

1277:
old  <>
new  <	; Call 40 printf 0>

1278:
old  < mainX4$16:>
new  <	mov qword [rbp + 40], mainX4$22>

1279:
old  <	; PostCall 40>
new  <	mov [rbp + 48], rbp>

1280:
old  <>
new  <	add rbp, 40>

1281:
old  < mainX4$17:>
new  <	mov rdi, rbp>

1282:
old  <	; BinaryAdd index index 1>
new  <	jmp printf>

1283:
old  <	inc dword [rbp + 36]>
new  <>

1284:
old  <>
new  < mainX4$22:>

1285:
old  < mainX4$18:>
new  <	; PostCall 40>

1286:
old  <	; Goto 6>
new  <>

1287:
old  <	jmp mainX4$6>
new  < mainX4$23:>

1288:
old  <>
new  <	; Assign index 0>

1289:
old  < mainX4$19:>
new  <	mov dword [rbp + 36], 0>

1290:
old  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1291:
old  <>
new  < mainX4$24:>

1292:
old  < mainX4$20:>
new  <	; IntegralToIntegral Â£temporary86 index>

1293:
old  <	; Parameter 64 pointer "\n">
new  <	mov eax, [rbp + 36]>

1294:
old  <	mov qword [rbp + 64], string_0A#>
new  <	mov rbx, 4294967295>

1295:
old  <>
new  <	and rax, rbx>

1296:
old  < mainX4$21:>
new  <>

1297:
old  <	; Call 40 printf 0>
new  < mainX4$25:>

1298:
old  <	mov qword [rbp + 40], mainX4$22>
new  <	; UnsignedMultiply Â£temporary87 Â£temporary86 8>

1299:
old  <	mov [rbp + 48], rbp>
new  <	xor rdx, rdx>

1300:
old  <	add rbp, 40>
new  <	mul qword [int8$8#]>

1301:
old  <	mov rdi, rbp>
new  <>

1302:
old  <	jmp printf>
new  < mainX4$26:>

1303:
old  <>
new  <	; BinaryAdd Â£temporary88 argv Â£temporary87>

1304:
old  < mainX4$22:>
new  <	mov rsi, [rbp + 28]>

1305:
old  <	; PostCall 40>
new  <	add rsi, rax>

1307:
old  < mainX4$23:>
new  < mainX4$27:>

1308:
old  <	; Assign index 0>
new  <	; Dereference Â£temporary85 -> Â£temporary88 Â£temporary88 0>

1309:
old  <	mov dword [rbp + 36], 0>
new  <>

1310:
old  <>
new  < mainX4$28:>

1311:
old  < mainX4$24:>
new  <	; Equal 41 Â£temporary85 -> Â£temporary88 0>

1312:
old  <	; IntegralToIntegral Â£temporary86 index>
new  <	cmp qword [rsi], 0>

1313:
old  <	mov eax, [rbp + 36]>
new  <	je mainX4$41>

1314:
old  <	mov rbx, 4294967295>
new  <>

1315:
old  <	and rax, rbx>
new  < mainX4$29:>

1316:
old  <>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1317:
old  < mainX4$25:>
new  <>

1318:
old  <	; UnsignedMultiply Â£temporary87 Â£temporary86 8>
new  < mainX4$30:>

1319:
old  <	xor rdx, rdx>
new  <	; Parameter 64 pointer "%i: <%s>\n">

1320:
old  <	mul qword [int8$8#]>
new  <	mov qword [rbp + 64], string_25i3A203C25s3E0A#>

1322:
old  < mainX4$26:>
new  < mainX4$31:>

1323:
old  <	; BinaryAdd Â£temporary88 argv Â£temporary87>
new  <	; Parameter 72 signedint index>

1324:
old  <	mov rsi, [rbp + 28]>
new  <	mov eax, [rbp + 36]>

1325:
old  <	add rsi, rax>
new  <	mov [rbp + 72], eax>

1327:
old  < mainX4$27:>
new  < mainX4$32:>

1328:
old  <	; Dereference Â£temporary85 -> Â£temporary88 Â£temporary88 0>
new  <	; IntegralToIntegral Â£temporary92 index>

1329:
old  <>
new  <	mov eax, [rbp + 36]>

1330:
old  < mainX4$28:>
new  <	mov rbx, 4294967295>

1331:
old  <	; Equal 41 Â£temporary85 -> Â£temporary88 0>
new  <	and rax, rbx>

1332:
old  <	cmp qword [rsi], 0>
new  <>

1333:
old  <	je mainX4$41>
new  < mainX4$33:>

1334:
old  <>
new  <	; UnsignedMultiply Â£temporary93 Â£temporary92 8>

1335:
old  < mainX4$29:>
new  <	xor rdx, rdx>

1336:
old  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mul qword [int8$8#]>

1338:
old  < mainX4$30:>
new  < mainX4$34:>

1339:
old  <	; Parameter 64 pointer "%i: <%s>\n">
new  <	; BinaryAdd Â£temporary94 argv Â£temporary93>

1340:
old  <	mov qword [rbp + 64], string_25i3A203C25s3E0A#>
new  <	mov rsi, [rbp + 28]>

1341:
old  <>
new  <	add rsi, rax>

1342:
old  < mainX4$31:>
new  <>

1343:
old  <	; Parameter 72 signedint index>
new  < mainX4$35:>

1344:
old  <	mov eax, [rbp + 36]>
new  <	; Dereference Â£temporary91 -> Â£temporary94 Â£temporary94 0>

1345:
old  <	mov [rbp + 72], eax>
new  <>

1346:
old  <>
new  < mainX4$36:>

1347:
old  < mainX4$32:>
new  <	; Parameter 76 pointer Â£temporary91 -> Â£temporary94>

1348:
old  <	; IntegralToIntegral Â£temporary92 index>
new  <	mov rax, [rsi]>

1349:
old  <	mov eax, [rbp + 36]>
new  <	mov [rbp + 76], rax>

1350:
old  <	mov rbx, 4294967295>
new  <>

1351:
old  <	and rax, rbx>
new  < mainX4$37:>

1352:
old  <>
new  <	; Call 40 printf 12>

1353:
old  < mainX4$33:>
new  <	mov qword [rbp + 40], mainX4$38>

1354:
old  <	; UnsignedMultiply Â£temporary93 Â£temporary92 8>
new  <	mov [rbp + 48], rbp>

1355:
old  <	xor rdx, rdx>
new  <	add rbp, 40>

1356:
old  <	mul qword [int8$8#]>
new  <	mov rdi, rbp>

1357:
old  <>
new  <	add rdi, 12>

1358:
old  < mainX4$34:>
new  <	jmp printf>

1359:
old  <	; BinaryAdd Â£temporary94 argv Â£temporary93>
new  <>

1360:
old  <	mov rsi, [rbp + 28]>
new  < mainX4$38:>

1361:
old  <	add rsi, rax>
new  <	; PostCall 40>

1363:
old  < mainX4$35:>
new  < mainX4$39:>

1364:
old  <	; Dereference Â£temporary91 -> Â£temporary94 Â£temporary94 0>
new  <	; BinaryAdd index index 1>

1365:
old  <>
new  <	inc dword [rbp + 36]>

1366:
old  < mainX4$36:>
new  <>

1367:
old  <	; Parameter 76 pointer Â£temporary91 -> Â£temporary94>
new  < mainX4$40:>

1368:
old  <	mov rax, [rsi]>
new  <	; Goto 24>

1369:
old  <	mov [rbp + 76], rax>
new  <	jmp mainX4$24>

1371:
old  < mainX4$37:>
new  < mainX4$41:>

1372:
old  <	; Call 40 printf 12>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1373:
old  <	mov qword [rbp + 40], mainX4$38>
new  <>

1374:
old  <	mov [rbp + 48], rbp>
new  < mainX4$42:>

1375:
old  <	add rbp, 40>
new  <	; Parameter 64 pointer "\n">

1376:
old  <	mov rdi, rbp>
new  <	mov qword [rbp + 64], string_0A#>

1377:
old  <	add rdi, 12>
new  <>

1378:
old  <	jmp printf>
new  < mainX4$43:>

1379:
old  <>
new  <	; Call 40 printf 0>

1380:
old  < mainX4$38:>
new  <	mov qword [rbp + 40], mainX4$44>

1381:
old  <	; PostCall 40>
new  <	mov [rbp + 48], rbp>

1382:
old  <>
new  <	add rbp, 40>

1383:
old  < mainX4$39:>
new  <	mov rdi, rbp>

1384:
old  <	; BinaryAdd index index 1>
new  <	jmp printf>

1385:
old  <	inc dword [rbp + 36]>
new  <>

1386:
old  <>
new  < mainX4$44:>

1387:
old  < mainX4$40:>
new  <	; PostCall 40>

1388:
old  <	; Goto 24>
new  <>

1389:
old  <	jmp mainX4$24>
new  < mainX4$45:>

1390:
old  <>
new  <	; PreCall 69 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1391:
old  < mainX4$41:>
new  <>

1392:
old  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < mainX4$46:>

1393:
old  <>
new  <	; Parameter 93 pointer 0>

1394:
old  < mainX4$42:>
new  <	mov qword [rbp + 93], 0>

1395:
old  <	; Parameter 64 pointer "\n">
new  <>

1396:
old  <	mov qword [rbp + 64], string_0A#>
new  < mainX4$47:>

1397:
old  <>
new  <	; Call 69 mktime 0>

1398:
old  < mainX4$43:>
new  <	mov qword [rbp + 69], mainX4$48>

1399:
old  <	; Call 40 printf 0>
new  <	mov [rbp + 77], rbp>

1400:
old  <	mov qword [rbp + 40], mainX4$44>
new  <	add rbp, 69>

1401:
old  <	mov [rbp + 48], rbp>
new  <	jmp mktime>

1402:
old  <	add rbp, 40>
new  <>

1403:
old  <	mov rdi, rbp>
new  < mainX4$48:>

1404:
old  <	jmp printf>
new  <	; PostCall 69>

1406:
old  < mainX4$44:>
new  < mainX4$49:>

1407:
old  <	; PostCall 40>
new  <	; PreCall 69 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1409:
old  < mainX4$45:>
new  < mainX4$50:>

1410:
old  <	; PreCall 69 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter 93 pointer "Hello!\n">

1411:
old  <>
new  <	mov qword [rbp + 93], string_Hello210A#>

1412:
old  < mainX4$46:>
new  <>

1413:
old  <	; Parameter 93 pointer 0>
new  < mainX4$51:>

1414:
old  <	mov qword [rbp + 93], 0>
new  <	; Call 69 printf 0>

1415:
old  <>
new  <	mov qword [rbp + 69], mainX4$52>

1416:
old  < mainX4$47:>
new  <	mov [rbp + 77], rbp>

1417:
old  <	; Call 69 mktime 0>
new  <	add rbp, 69>

1418:
old  <	mov qword [rbp + 69], mainX4$48>
new  <	mov rdi, rbp>

1419:
old  <	mov [rbp + 77], rbp>
new  <	jmp printf>

1420:
old  <	add rbp, 69>
new  <>

1421:
old  <	jmp mktime>
new  < mainX4$52:>

1422:
old  <>
new  <	; PostCall 69>

1423:
old  < mainX4$48:>
new  <>

1424:
old  <	; PostCall 69>
new  < mainX4$53:>

1425:
old  <>
new  <	; PreCall 69 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1426:
old  < mainX4$49:>
new  <>

1427:
old  <	; PreCall 69 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < mainX4$54:>

1428:
old  <>
new  <	; Parameter 93 pointer "Please write a character, a string, an integer, and a double: ">

1429:
old  < mainX4$50:>
new  <	mov qword [rbp + 93], string_Please20write20a20character2C20a20string2C20an20integer2C20and20a20double3A20#>

1430:
old  <	; Parameter 93 pointer "Hello!\n">
new  <>

1431:
old  <	mov qword [rbp + 93], string_Hello210A#>
new  < mainX4$55:>

1432:
old  <>
new  <	; Call 69 printf 0>

1433:
old  < mainX4$51:>
new  <	mov qword [rbp + 69], mainX4$56>

1434:
old  <	; Call 69 printf 0>
new  <	mov [rbp + 77], rbp>

1435:
old  <	mov qword [rbp + 69], mainX4$52>
new  <	add rbp, 69>

1436:
old  <	mov [rbp + 77], rbp>
new  <	mov rdi, rbp>

1437:
old  <	add rbp, 69>
new  <	jmp printf>

1438:
old  <	mov rdi, rbp>
new  <>

1439:
old  <	jmp printf>
new  < mainX4$56:>

1440:
old  <>
new  <	; PostCall 69>

1441:
old  < mainX4$52:>
new  <>

1442:
old  <	; PostCall 69>
new  < mainX4$57:>

1443:
old  <>
new  <	; PreCall 69 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1444:
old  < mainX4$53:>
new  <>

1445:
old  <	; PreCall 69 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < mainX4$58:>

1446:
old  <>
new  <	; Parameter 93 pointer "%c %s %i %lf">

1447:
old  < mainX4$54:>
new  <	mov qword [rbp + 93], string_25c2025s2025i2025lf#>

1448:
old  <	; Parameter 93 pointer "Please write a character, a string, an integer, and a double: ">
new  <>

1449:
old  <	mov qword [rbp + 93], string_Please20write20a20character2C20a20string2C20an20integer2C20and20a20double3A20#>
new  < mainX4$59:>

1450:
old  <>
new  <	; Address Â£temporary100 c>

1451:
old  < mainX4$55:>
new  <	mov rsi, rbp>

1452:
old  <	; Call 69 printf 0>
new  <	add rsi, 48>

1453:
old  <	mov qword [rbp + 69], mainX4$56>
new  <>

1454:
old  <	mov [rbp + 77], rbp>
new  < mainX4$60:>

1455:
old  <	add rbp, 69>
new  <	; Parameter 101 pointer Â£temporary100>

1456:
old  <	mov rdi, rbp>
new  <	mov [rbp + 101], rsi>

1457:
old  <	jmp printf>
new  <>

1458:
old  <>
new  < mainX4$61:>

1459:
old  < mainX4$56:>
new  <	; Parameter 109 pointer s>

1460:
old  <	; PostCall 69>
new  <	mov [rbp + 109], rbp>

1461:
old  <>
new  <	add qword [rbp + 109], 49>

1462:
old  < mainX4$57:>
new  <>

1463:
old  <	; PreCall 69 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < mainX4$62:>

1464:
old  <>
new  <	; Address Â£temporary101 i>

1465:
old  < mainX4$58:>
new  <	mov rsi, rbp>

1466:
old  <	; Parameter 93 pointer "%c %s %i %lf">
new  <	add rsi, 36>

1467:
old  <	mov qword [rbp + 93], string_25c2025s2025i2025lf#>
new  <>

1468:
old  <>
new  < mainX4$63:>

1469:
old  < mainX4$59:>
new  <	; Parameter 117 pointer Â£temporary101>

1470:
old  <	; Address Â£temporary100 c>
new  <	mov [rbp + 117], rsi>

1471:
old  <	mov rsi, rbp>
new  <>

1472:
old  <	add rsi, 48>
new  < mainX4$64:>

1473:
old  <>
new  <	; Address Â£temporary102 d>

1474:
old  < mainX4$60:>
new  <	mov rsi, rbp>

1475:
old  <	; Parameter 101 pointer Â£temporary100>
new  <	add rsi, 40>

1476:
old  <	mov [rbp + 101], rsi>
new  <>

1477:
old  <>
new  < mainX4$65:>

1478:
old  < mainX4$61:>
new  <	; Parameter 125 pointer Â£temporary102>

1479:
old  <	; Parameter 109 pointer s>
new  <	mov [rbp + 125], rsi>

1480:
old  <	mov [rbp + 109], rbp>
new  <>

1481:
old  <	add qword [rbp + 109], 49>
new  < mainX4$66:>

1482:
old  <>
new  <	; Call 69 scanf 32>

1483:
old  < mainX4$62:>
new  <	mov qword [rbp + 69], mainX4$67>

1484:
old  <	; Address Â£temporary101 i>
new  <	mov [rbp + 77], rbp>

1485:
old  <	mov rsi, rbp>
new  <	add rbp, 69>

1486:
old  <	add rsi, 36>
new  <	mov rdi, rbp>

1487:
old  <>
new  <	add rdi, 32>

1488:
old  < mainX4$63:>
new  <	jmp scanf>

1489:
old  <	; Parameter 117 pointer Â£temporary101>
new  <>

1490:
old  <	mov [rbp + 117], rsi>
new  < mainX4$67:>

1491:
old  <>
new  <	; PostCall 69>

1492:
old  < mainX4$64:>
new  <>

1493:
old  <	; Address Â£temporary102 d>
new  < mainX4$68:>

1494:
old  <	mov rsi, rbp>
new  <	; PreCall 69 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1495:
old  <	add rsi, 40>
new  <>

1496:
old  <>
new  < mainX4$69:>

1497:
old  < mainX4$65:>
new  <	; Parameter 93 pointer "You wrote the character '%c', the string "%s", the integer %i, and the double %f.\n">

1498:
old  <	; Parameter 125 pointer Â£temporary102>
new  <	mov qword [rbp + 93], string_You20wrote20the20character202725c272C20the20string202225s222C20the20integer2025i2C20and20the20double2025f2E0A#>

1499:
old  <	mov [rbp + 125], rsi>
new  <>

1500:
old  <>
new  < mainX4$70:>

1501:
old  < mainX4$66:>
new  <	; IntegralToIntegral Â£temporary104 c>

1502:
old  <	; Call 69 scanf 32>
new  <	mov al, [rbp + 48]>

1503:
old  <	mov qword [rbp + 69], mainX4$67>
new  <	and eax, 255>

1504:
old  <	mov [rbp + 77], rbp>
new  <	cmp al, 0>

1505:
old  <	add rbp, 69>
new  <	jge mainX4$71>

1506:
old  <	mov rdi, rbp>
new  <	neg al>

1507:
old  <	add rdi, 32>
new  <	neg eax>

1508:
old  <	jmp scanf>
new  <>

1509:
old  <>
new  < mainX4$71:>

1510:
old  < mainX4$67:>
new  <	; Parameter 101 signedint Â£temporary104>

1511:
old  <	; PostCall 69>
new  <	mov [rbp + 101], eax>

1513:
old  < mainX4$68:>
new  < mainX4$72:>

1514:
old  <	; PreCall 69 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter 105 pointer s>

1515:
old  <>
new  <	mov [rbp + 105], rbp>

1516:
old  < mainX4$69:>
new  <	add qword [rbp + 105], 49>

1517:
old  <	; Parameter 93 pointer "You wrote the character '%c', the string "%s", the integer %i, and the double %f.\n">
new  <>

1518:
old  <	mov qword [rbp + 93], string_You20wrote20the20character202725c272C20the20string202225s222C20the20integer2025i2C20and20the20double2025f2E0A#>
new  < mainX4$73:>

1519:
old  <>
new  <	; Parameter 113 signedint i>

1520:
old  < mainX4$70:>
new  <	mov eax, [rbp + 36]>

1521:
old  <	; IntegralToIntegral Â£temporary104 c>
new  <	mov [rbp + 113], eax>

1522:
old  <	mov al, [rbp + 48]>
new  <>

1523:
old  <	and eax, 255>
new  < mainX4$74:>

1524:
old  <	cmp al, 0>
new  <	; PushFloat d>

1525:
old  <	jge mainX4$71>
new  <	fld qword [rbp + 40]>

1526:
old  <	neg al>
new  <>

1527:
old  <	neg eax>
new  < mainX4$75:>

1528:
old  <>
new  <	; Parameter 117 double d>

1529:
old  < mainX4$71:>
new  <	fstp qword [rbp + 117]>

1530:
old  <	; Parameter 101 signedint Â£temporary104>
new  <>

1531:
old  <	mov [rbp + 101], eax>
new  < mainX4$76:>

1532:
old  <>
new  <	; Call 69 printf 24>

1533:
old  < mainX4$72:>
new  <	mov qword [rbp + 69], mainX4$77>

1534:
old  <	; Parameter 105 pointer s>
new  <	mov [rbp + 77], rbp>

1535:
old  <	mov [rbp + 105], rbp>
new  <	add rbp, 69>

1536:
old  <	add qword [rbp + 105], 49>
new  <	mov rdi, rbp>

1537:
old  <>
new  <	add rdi, 24>

1538:
old  < mainX4$73:>
new  <	jmp printf>

1539:
old  <	; Parameter 113 signedint i>
new  <>

1540:
old  <	mov eax, [rbp + 36]>
new  < mainX4$77:>

1541:
old  <	mov [rbp + 113], eax>
new  <	; PostCall 69>

1543:
old  < mainX4$74:>
new  < mainX4$78:>

1544:
old  <	; PushFloat d>
new  <	; Return>

1545:
old  <	fld qword [rbp + 40]>
new  <	mov rax, [rbp]>

1546:
old  <>
new  <	mov rdi, [rbp + 16]>

1547:
old  < mainX4$75:>
new  <	mov rbp, [rbp + 8]>

1548:
old  <	; Parameter 117 double d>
new  <	jmp rax>

1549:
old  <	fstp qword [rbp + 117]>
new  <>

1550:
old  <>
new  < mainX4$79:>

1551:
old  < mainX4$76:>
new  <	; FunctionEnd mainX4>

1552:
old  <	; Call 69 printf 24>
new  <>

1553:
old  <	mov qword [rbp + 69], mainX4$77>
new  <section .data>

1554:
old  <	mov [rbp + 77], rbp>
new  <>

1555:
old  <	add rbp, 69>
new  <string_3A20#:>

1556:
old  <	mov rdi, rbp>
new  <	; Initializer String : >

1557:
old  <	add rdi, 24>
new  <	db ": ", 0>

1558:
old  <	jmp printf>
new  <>

1559:
old  <>
new  <section .data>

1560:
old  < mainX4$77:>
new  <>

1561:
old  <	; PostCall 69>
new  <string_25lf#:>

1562:
old  <>
new  <	; Initializer String %lf>

1563:
old  < mainX4$78:>
new  <	db "%lf", 0>

1564:
old  <	; Return>
new  <>

1565:
old  <	mov rax, [rbp]>
new  <section .data>

1566:
old  <	mov rdi, [rbp + 16]>
new  <>

1567:
old  <	mov rbp, [rbp + 8]>
new  <string_3C25f3E#:>

1568:
old  <	jmp rax>
new  <	; Initializer String <%f>>

1569:
old  <>
new  <	db "<%f>", 0>

1570:
old  < mainX4$79:>
new  <>

1571:
old  <	; FunctionEnd mainX4>
new  <section .text>

1573:
old  <section .data>
new  < main3:>

1574:
old  <>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1575:
old  <string_3A20#:>
new  <>

1576:
old  <	; Initializer String : >
new  < main3$1:>

1577:
old  <	db ": ", 0>
new  <	; Parameter 56 pointer ": ">

1578:
old  <>
new  <	mov qword [rbp + 56], string_3A20#>

1579:
old  <section .data>
new  <>

1580:
old  <>
new  < main3$2:>

1581:
old  <string_25lf#:>
new  <	; Call 32 printf 0>

1582:
old  <	; Initializer String %lf>
new  <	mov qword [rbp + 32], main3$3>

1583:
old  <	db "%lf", 0>
new  <	mov [rbp + 40], rbp>

1584:
old  <>
new  <	add rbp, 32>

1585:
old  <section .data>
new  <	mov rdi, rbp>

1586:
old  <>
new  <	jmp printf>

1587:
old  <string_3C25f3E#:>
new  <>

1588:
old  <	; Initializer String <%f>>
new  < main3$3:>

1589:
old  <	db "<%f>", 0>
new  <	; PostCall 32>

1591:
old  <section .text>
new  < main3$4:>

1592:
old  <>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1593:
old  < main3:>
new  <>

1594:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < main3$5:>

1595:
old  <>
new  <	; Parameter 56 pointer "%lf">

1596:
old  < main3$1:>
new  <	mov qword [rbp + 56], string_25lf#>

1597:
old  <	; Parameter 56 pointer ": ">
new  <>

1598:
old  <	mov qword [rbp + 56], string_3A20#>
new  < main3$6:>

1599:
old  <>
new  <	; Address Â£temporary111 x>

1600:
old  < main3$2:>
new  <	mov rsi, rbp>

1601:
old  <	; Call 32 printf 0>
new  <	add rsi, 24>

1602:
old  <	mov qword [rbp + 32], main3$3>
new  <>

1603:
old  <	mov [rbp + 40], rbp>
new  < main3$7:>

1604:
old  <	add rbp, 32>
new  <	; Parameter 64 pointer Â£temporary111>

1605:
old  <	mov rdi, rbp>
new  <	mov [rbp + 64], rsi>

1606:
old  <	jmp printf>
new  <>

1607:
old  <>
new  < main3$8:>

1608:
old  < main3$3:>
new  <	; Call 32 scanf 8>

1609:
old  <	; PostCall 32>
new  <	mov qword [rbp + 32], main3$9>

1610:
old  <>
new  <	mov [rbp + 40], rbp>

1611:
old  < main3$4:>
new  <	add rbp, 32>

1612:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov rdi, rbp>

1613:
old  <>
new  <	add rdi, 8>

1614:
old  < main3$5:>
new  <	jmp scanf>

1615:
old  <	; Parameter 56 pointer "%lf">
new  <>

1616:
old  <	mov qword [rbp + 56], string_25lf#>
new  < main3$9:>

1617:
old  <>
new  <	; PostCall 32>

1618:
old  < main3$6:>
new  <>

1619:
old  <	; Address Â£temporary111 x>
new  < main3$10:>

1620:
old  <	mov rsi, rbp>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1621:
old  <	add rsi, 24>
new  <>

1622:
old  <>
new  < main3$11:>

1623:
old  < main3$7:>
new  <	; Parameter 56 pointer "<%f>">

1624:
old  <	; Parameter 64 pointer Â£temporary111>
new  <	mov qword [rbp + 56], string_3C25f3E#>

1625:
old  <	mov [rbp + 64], rsi>
new  <>

1626:
old  <>
new  < main3$12:>

1627:
old  < main3$8:>
new  <	; PushFloat x>

1628:
old  <	; Call 32 scanf 8>
new  <	fld qword [rbp + 24]>

1629:
old  <	mov qword [rbp + 32], main3$9>
new  <>

1630:
old  <	mov [rbp + 40], rbp>
new  < main3$13:>

1631:
old  <	add rbp, 32>
new  <	; Parameter 64 double x>

1632:
old  <	mov rdi, rbp>
new  <	fstp qword [rbp + 64]>

1633:
old  <	add rdi, 8>
new  <>

1634:
old  <	jmp scanf>
new  < main3$14:>

1635:
old  <>
new  <	; Call 32 printf 8>

1636:
old  < main3$9:>
new  <	mov qword [rbp + 32], main3$15>

1637:
old  <	; PostCall 32>
new  <	mov [rbp + 40], rbp>

1638:
old  <>
new  <	add rbp, 32>

1639:
old  < main3$10:>
new  <	mov rdi, rbp>

1640:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	add rdi, 8>

1641:
old  <>
new  <	jmp printf>

1642:
old  < main3$11:>
new  <>

1643:
old  <	; Parameter 56 pointer "<%f>">
new  < main3$15:>

1644:
old  <	mov qword [rbp + 56], string_3C25f3E#>
new  <	; PostCall 32>

1646:
old  < main3$12:>
new  < main3$16:>

1647:
old  <	; PushFloat x>
new  <	; Return>

1648:
old  <	fld qword [rbp + 24]>
new  <	mov rax, [rbp]>

1649:
old  <>
new  <	mov rdi, [rbp + 16]>

1650:
old  < main3$13:>
new  <	mov rbp, [rbp + 8]>

1651:
old  <	; Parameter 64 double x>
new  <	jmp rax>

1652:
old  <	fstp qword [rbp + 64]>
new  <>

1653:
old  <>
new  < main3$17:>

1654:
old  < main3$14:>
new  <	; FunctionEnd main3>

1655:
old  <	; Call 32 printf 8>
new  <>

1656:
old  <	mov qword [rbp + 32], main3$15>
new  <section .data>

1657:
old  <	mov [rbp + 40], rbp>
new  <>

1658:
old  <	add rbp, 32>
new  <string_2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D0A#:>

1659:
old  <	mov rdi, rbp>
new  <	; Initializer String ---------------------------------------------\n>

1660:
old  <	add rdi, 8>
new  <	db "---------------------------------------------", 10, 0>

1661:
old  <	jmp printf>
new  <>

1662:
old  <>
new  <section .data>

1663:
old  < main3$15:>
new  <>

1664:
old  <	; PostCall 32>
new  <float8$3.14#:>

1665:
old  <>
new  <	; Initializer Double 3.14>

1666:
old  < main3$16:>
new  <	dq 3.14>

1667:
old  <	; Return>
new  <>

1668:
old  <	mov rax, [rbp]>
new  <section .data>

1669:
old  <	mov rdi, [rbp + 16]>
new  <>

1670:
old  <	mov rbp, [rbp + 8]>
new  <float8$2.71#:>

1671:
old  <	jmp rax>
new  <	; Initializer Double 2.71>

1672:
old  <>
new  <	dq 2.71>

1673:
old  < main3$17:>
new  <>

1674:
old  <	; FunctionEnd main3>
new  <section .text>

1676:
old  <section .data>
new  < mains2:>

1677:
old  <>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1678:
old  <string_2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D0A#:>
new  <>

1679:
old  <	; Initializer String ---------------------------------------------\n>
new  < mains2$1:>

1680:
old  <	db "---------------------------------------------", 10, 0>
new  <	; PushFloat 3.14>

1681:
old  <>
new  <	fld qword [float8$3.14#]>

1682:
old  <section .data>
new  <>

1683:
old  <>
new  < mains2$2:>

1684:
old  <float8$3.14#:>
new  <	; Parameter 48 double 3.14>

1685:
old  <	; Initializer Double 3.14>
new  <	fstp qword [rbp + 48]>

1686:
old  <	dq 3.14>
new  <>

1687:
old  <>
new  < mains2$3:>

1688:
old  <section .data>
new  <	; Call 24 setjmp_test 0>

1689:
old  <>
new  <	mov qword [rbp + 24], mains2$4>

1690:
old  <float8$2.71#:>
new  <	mov [rbp + 32], rbp>

1691:
old  <	; Initializer Double 2.71>
new  <	add rbp, 24>

1692:
old  <	dq 2.71>
new  <	jmp setjmp_test>

1694:
old  <section .text>
new  < mains2$4:>

1695:
old  <>
new  <	; PostCall 24>

1696:
old  < mains2:>
new  <>

1697:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < mains2$5:>

1698:
old  <>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1699:
old  < mains2$1:>
new  <>

1700:
old  <	; PushFloat 3.14>
new  < mains2$6:>

1701:
old  <	fld qword [float8$3.14#]>
new  <	; Parameter 48 pointer "---------------------------------------------\n">

1702:
old  <>
new  <	mov qword [rbp + 48], string_2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D0A#>

1703:
old  < mains2$2:>
new  <>

1704:
old  <	; Parameter 48 double 3.14>
new  < mains2$7:>

1705:
old  <	fstp qword [rbp + 48]>
new  <	; Call 24 printf 0>

1706:
old  <>
new  <	mov qword [rbp + 24], mains2$8>

1707:
old  < mains2$3:>
new  <	mov [rbp + 32], rbp>

1708:
old  <	; Call 24 setjmp_test 0>
new  <	add rbp, 24>

1709:
old  <	mov qword [rbp + 24], mains2$4>
new  <	mov rdi, rbp>

1710:
old  <	mov [rbp + 32], rbp>
new  <	jmp printf>

1711:
old  <	add rbp, 24>
new  <>

1712:
old  <	jmp setjmp_test>
new  < mains2$8:>

1713:
old  <>
new  <	; PostCall 24>

1714:
old  < mains2$4:>
new  <>

1715:
old  <	; PostCall 24>
new  < mains2$9:>

1716:
old  <>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1717:
old  < mains2$5:>
new  <>

1718:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < mains2$10:>

1719:
old  <>
new  <	; PushFloat 0>

1720:
old  < mains2$6:>
new  <	fldz>

1721:
old  <	; Parameter 48 pointer "---------------------------------------------\n">
new  <>

1722:
old  <	mov qword [rbp + 48], string_2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D0A#>
new  < mains2$11:>

1723:
old  <>
new  <	; Parameter 48 double 0>

1724:
old  < mains2$7:>
new  <	fstp qword [rbp + 48]>

1725:
old  <	; Call 24 printf 0>
new  <>

1726:
old  <	mov qword [rbp + 24], mains2$8>
new  < mains2$12:>

1727:
old  <	mov [rbp + 32], rbp>
new  <	; Call 24 setjmp_test 0>

1728:
old  <	add rbp, 24>
new  <	mov qword [rbp + 24], mains2$13>

1729:
old  <	mov rdi, rbp>
new  <	mov [rbp + 32], rbp>

1730:
old  <	jmp printf>
new  <	add rbp, 24>

1731:
old  <>
new  <	jmp setjmp_test>

1732:
old  < mains2$8:>
new  <>

1733:
old  <	; PostCall 24>
new  < mains2$13:>

1734:
old  <>
new  <	; PostCall 24>

1735:
old  < mains2$9:>
new  <>

1736:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < mains2$14:>

1737:
old  <>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1738:
old  < mains2$10:>
new  <>

1739:
old  <	; PushFloat 0>
new  < mains2$15:>

1740:
old  <	fldz>
new  <	; Parameter 48 pointer "---------------------------------------------\n">

1741:
old  <>
new  <	mov qword [rbp + 48], string_2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D0A#>

1742:
old  < mains2$11:>
new  <>

1743:
old  <	; Parameter 48 double 0>
new  < mains2$16:>

1744:
old  <	fstp qword [rbp + 48]>
new  <	; Call 24 printf 0>

1745:
old  <>
new  <	mov qword [rbp + 24], mains2$17>

1746:
old  < mains2$12:>
new  <	mov [rbp + 32], rbp>

1747:
old  <	; Call 24 setjmp_test 0>
new  <	add rbp, 24>

1748:
old  <	mov qword [rbp + 24], mains2$13>
new  <	mov rdi, rbp>

1749:
old  <	mov [rbp + 32], rbp>
new  <	jmp printf>

1750:
old  <	add rbp, 24>
new  <>

1751:
old  <	jmp setjmp_test>
new  < mains2$17:>

1752:
old  <>
new  <	; PostCall 24>

1753:
old  < mains2$13:>
new  <>

1754:
old  <	; PostCall 24>
new  < mains2$18:>

1755:
old  <>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1756:
old  < mains2$14:>
new  <>

1757:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < mains2$19:>

1758:
old  <>
new  <	; PushFloat 2.71>

1759:
old  < mains2$15:>
new  <	fld qword [float8$2.71#]>

1760:
old  <	; Parameter 48 pointer "---------------------------------------------\n">
new  <>

1761:
old  <	mov qword [rbp + 48], string_2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D0A#>
new  < mains2$20:>

1762:
old  <>
new  <	; Parameter 48 double 2.71>

1763:
old  < mains2$16:>
new  <	fstp qword [rbp + 48]>

1764:
old  <	; Call 24 printf 0>
new  <>

1765:
old  <	mov qword [rbp + 24], mains2$17>
new  < mains2$21:>

1766:
old  <	mov [rbp + 32], rbp>
new  <	; Call 24 setjmp_test 0>

1767:
old  <	add rbp, 24>
new  <	mov qword [rbp + 24], mains2$22>

1768:
old  <	mov rdi, rbp>
new  <	mov [rbp + 32], rbp>

1769:
old  <	jmp printf>
new  <	add rbp, 24>

1770:
old  <>
new  <	jmp setjmp_test>

1771:
old  < mains2$17:>
new  <>

1772:
old  <	; PostCall 24>
new  < mains2$22:>

1773:
old  <>
new  <	; PostCall 24>

1774:
old  < mains2$18:>
new  <>

1775:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < mains2$23:>

1776:
old  <>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1777:
old  < mains2$19:>
new  <>

1778:
old  <	; PushFloat 2.71>
new  < mains2$24:>

1779:
old  <	fld qword [float8$2.71#]>
new  <	; Parameter 48 pointer "---------------------------------------------\n">

1780:
old  <>
new  <	mov qword [rbp + 48], string_2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D0A#>

1781:
old  < mains2$20:>
new  <>

1782:
old  <	; Parameter 48 double 2.71>
new  < mains2$25:>

1783:
old  <	fstp qword [rbp + 48]>
new  <	; Call 24 printf 0>

1784:
old  <>
new  <	mov qword [rbp + 24], mains2$26>

1785:
old  < mains2$21:>
new  <	mov [rbp + 32], rbp>

1786:
old  <	; Call 24 setjmp_test 0>
new  <	add rbp, 24>

1787:
old  <	mov qword [rbp + 24], mains2$22>
new  <	mov rdi, rbp>

1788:
old  <	mov [rbp + 32], rbp>
new  <	jmp printf>

1789:
old  <	add rbp, 24>
new  <>

1790:
old  <	jmp setjmp_test>
new  < mains2$26:>

1791:
old  <>
new  <	; PostCall 24>

1792:
old  < mains2$22:>
new  <>

1793:
old  <	; PostCall 24>
new  < mains2$27:>

1794:
old  <>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1795:
old  < mains2$23:>
new  <>

1796:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < mains2$28:>

1797:
old  <>
new  <	; PushFloat 0>

1798:
old  < mains2$24:>
new  <	fldz>

1799:
old  <	; Parameter 48 pointer "---------------------------------------------\n">
new  <>

1800:
old  <	mov qword [rbp + 48], string_2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D0A#>
new  < mains2$29:>

1801:
old  <>
new  <	; Parameter 48 double 0>

1802:
old  < mains2$25:>
new  <	fstp qword [rbp + 48]>

1803:
old  <	; Call 24 printf 0>
new  <>

1804:
old  <	mov qword [rbp + 24], mains2$26>
new  < mains2$30:>

1805:
old  <	mov [rbp + 32], rbp>
new  <	; Call 24 setjmp_test 0>

1806:
old  <	add rbp, 24>
new  <	mov qword [rbp + 24], mains2$31>

1807:
old  <	mov rdi, rbp>
new  <	mov [rbp + 32], rbp>

1808:
old  <	jmp printf>
new  <	add rbp, 24>

1809:
old  <>
new  <	jmp setjmp_test>

1810:
old  < mains2$26:>
new  <>

1811:
old  <	; PostCall 24>
new  < mains2$31:>

1812:
old  <>
new  <	; PostCall 24>

1813:
old  < mains2$27:>
new  <>

1814:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < mains2$32:>

1815:
old  <>
new  <	; Return>

1816:
old  < mains2$28:>
new  <	mov rax, [rbp]>

1817:
old  <	; PushFloat 0>
new  <	mov rdi, [rbp + 16]>

1818:
old  <	fldz>
new  <	mov rbp, [rbp + 8]>

1819:
old  <>
new  <	jmp rax>

1820:
old  < mains2$29:>
new  <>

1821:
old  <	; Parameter 48 double 0>
new  < mains2$33:>

1822:
old  <	fstp qword [rbp + 48]>
new  <	; FunctionEnd mains2>

1824:
old  < mains2$30:>
new  <section .text>

1825:
old  <	; Call 24 setjmp_test 0>
new  <>

1826:
old  <	mov qword [rbp + 24], mains2$31>
new  < char_main:>

1827:
old  <	mov [rbp + 32], rbp>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1828:
old  <	add rbp, 24>
new  <>

1829:
old  <	jmp setjmp_test>
new  < char_main$1:>

1830:
old  <>
new  <	; Parameter 48 signedchar 97>

1831:
old  < mains2$31:>
new  <	mov byte [rbp + 48], 97>

1832:
old  <	; PostCall 24>
new  <>

1833:
old  <>
new  < char_main$2:>

1834:
old  < mains2$32:>
new  <	; Call 24 character_test 0>

1835:
old  <	; Return>
new  <	mov qword [rbp + 24], char_main$3>

1836:
old  <	mov rax, [rbp]>
new  <	mov [rbp + 32], rbp>

1837:
old  <	mov rdi, [rbp + 16]>
new  <	add rbp, 24>

1838:
old  <	mov rbp, [rbp + 8]>
new  <	jmp character_test>

1839:
old  <	jmp rax>
new  <>

1840:
old  <>
new  < char_main$3:>

1841:
old  < mains2$33:>
new  <	; PostCall 24>

1842:
old  <	; FunctionEnd mains2>
new  <>

1843:
old  <>
new  < char_main$4:>

1844:
old  <section .text>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1846:
old  < char_main:>
new  < char_main$5:>

1847:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter 48 signedchar 66>

1848:
old  <>
new  <	mov byte [rbp + 48], 66>

1849:
old  < char_main$1:>
new  <>

1850:
old  <	; Parameter 48 signedchar 97>
new  < char_main$6:>

1851:
old  <	mov byte [rbp + 48], 97>
new  <	; Call 24 character_test 0>

1852:
old  <>
new  <	mov qword [rbp + 24], char_main$7>

1853:
old  < char_main$2:>
new  <	mov [rbp + 32], rbp>

1854:
old  <	; Call 24 character_test 0>
new  <	add rbp, 24>

1855:
old  <	mov qword [rbp + 24], char_main$3>
new  <	jmp character_test>

1856:
old  <	mov [rbp + 32], rbp>
new  <>

1857:
old  <	add rbp, 24>
new  < char_main$7:>

1858:
old  <	jmp character_test>
new  <	; PostCall 24>

1860:
old  < char_main$3:>
new  < char_main$8:>

1861:
old  <	; PostCall 24>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1863:
old  < char_main$4:>
new  < char_main$9:>

1864:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter 48 signedchar 49>

1865:
old  <>
new  <	mov byte [rbp + 48], 49>

1866:
old  < char_main$5:>
new  <>

1867:
old  <	; Parameter 48 signedchar 66>
new  < char_main$10:>

1868:
old  <	mov byte [rbp + 48], 66>
new  <	; Call 24 character_test 0>

1869:
old  <>
new  <	mov qword [rbp + 24], char_main$11>

1870:
old  < char_main$6:>
new  <	mov [rbp + 32], rbp>

1871:
old  <	; Call 24 character_test 0>
new  <	add rbp, 24>

1872:
old  <	mov qword [rbp + 24], char_main$7>
new  <	jmp character_test>

1873:
old  <	mov [rbp + 32], rbp>
new  <>

1874:
old  <	add rbp, 24>
new  < char_main$11:>

1875:
old  <	jmp character_test>
new  <	; PostCall 24>

1877:
old  < char_main$7:>
new  < char_main$12:>

1878:
old  <	; PostCall 24>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1880:
old  < char_main$8:>
new  < char_main$13:>

1881:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter 48 signedchar 46>

1882:
old  <>
new  <	mov byte [rbp + 48], 46>

1883:
old  < char_main$9:>
new  <>

1884:
old  <	; Parameter 48 signedchar 49>
new  < char_main$14:>

1885:
old  <	mov byte [rbp + 48], 49>
new  <	; Call 24 character_test 0>

1886:
old  <>
new  <	mov qword [rbp + 24], char_main$15>

1887:
old  < char_main$10:>
new  <	mov [rbp + 32], rbp>

1888:
old  <	; Call 24 character_test 0>
new  <	add rbp, 24>

1889:
old  <	mov qword [rbp + 24], char_main$11>
new  <	jmp character_test>

1890:
old  <	mov [rbp + 32], rbp>
new  <>

1891:
old  <	add rbp, 24>
new  < char_main$15:>

1892:
old  <	jmp character_test>
new  <	; PostCall 24>

1894:
old  < char_main$11:>
new  < char_main$16:>

1895:
old  <	; PostCall 24>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1897:
old  < char_main$12:>
new  < char_main$17:>

1898:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter 48 signedchar 10>

1899:
old  <>
new  <	mov byte [rbp + 48], 10>

1900:
old  < char_main$13:>
new  <>

1901:
old  <	; Parameter 48 signedchar 46>
new  < char_main$18:>

1902:
old  <	mov byte [rbp + 48], 46>
new  <	; Call 24 character_test 0>

1903:
old  <>
new  <	mov qword [rbp + 24], char_main$19>

1904:
old  < char_main$14:>
new  <	mov [rbp + 32], rbp>

1905:
old  <	; Call 24 character_test 0>
new  <	add rbp, 24>

1906:
old  <	mov qword [rbp + 24], char_main$15>
new  <	jmp character_test>

1907:
old  <	mov [rbp + 32], rbp>
new  <>

1908:
old  <	add rbp, 24>
new  < char_main$19:>

1909:
old  <	jmp character_test>
new  <	; PostCall 24>

1911:
old  < char_main$15:>
new  < char_main$20:>

1912:
old  <	; PostCall 24>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1914:
old  < char_main$16:>
new  < char_main$21:>

1915:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter 48 signedchar 102>

1916:
old  <>
new  <	mov byte [rbp + 48], 102>

1917:
old  < char_main$17:>
new  <>

1918:
old  <	; Parameter 48 signedchar 10>
new  < char_main$22:>

1919:
old  <	mov byte [rbp + 48], 10>
new  <	; Call 24 character_test 0>

1920:
old  <>
new  <	mov qword [rbp + 24], char_main$23>

1921:
old  < char_main$18:>
new  <	mov [rbp + 32], rbp>

1922:
old  <	; Call 24 character_test 0>
new  <	add rbp, 24>

1923:
old  <	mov qword [rbp + 24], char_main$19>
new  <	jmp character_test>

1924:
old  <	mov [rbp + 32], rbp>
new  <>

1925:
old  <	add rbp, 24>
new  < char_main$23:>

1926:
old  <	jmp character_test>
new  <	; PostCall 24>

1928:
old  < char_main$19:>
new  < char_main$24:>

1929:
old  <	; PostCall 24>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1931:
old  < char_main$20:>
new  < char_main$25:>

1932:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter 48 signedchar 103>

1933:
old  <>
new  <	mov byte [rbp + 48], 103>

1934:
old  < char_main$21:>
new  <>

1935:
old  <	; Parameter 48 signedchar 102>
new  < char_main$26:>

1936:
old  <	mov byte [rbp + 48], 102>
new  <	; Call 24 character_test 0>

1937:
old  <>
new  <	mov qword [rbp + 24], char_main$27>

1938:
old  < char_main$22:>
new  <	mov [rbp + 32], rbp>

1939:
old  <	; Call 24 character_test 0>
new  <	add rbp, 24>

1940:
old  <	mov qword [rbp + 24], char_main$23>
new  <	jmp character_test>

1941:
old  <	mov [rbp + 32], rbp>
new  <>

1942:
old  <	add rbp, 24>
new  < char_main$27:>

1943:
old  <	jmp character_test>
new  <	; PostCall 24>

1945:
old  < char_main$23:>
new  < char_main$28:>

1946:
old  <	; PostCall 24>
new  <	; Return>

1947:
old  <>
new  <	mov rax, [rbp]>

1948:
old  < char_main$24:>
new  <	mov rdi, [rbp + 16]>

1949:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov rbp, [rbp + 8]>

1950:
old  <>
new  <	jmp rax>

1951:
old  < char_main$25:>
new  <>

1952:
old  <	; Parameter 48 signedchar 103>
new  < char_main$29:>

1953:
old  <	mov byte [rbp + 48], 103>
new  <	; FunctionEnd char_main>

1955:
old  < char_main$26:>
new  <section .data>

1956:
old  <	; Call 24 character_test 0>
new  <>

1957:
old  <	mov qword [rbp + 24], char_main$27>
new  <string_Please20write20a20number2028not20620or207293A20#:>

1958:
old  <	mov [rbp + 32], rbp>
new  <	; Initializer String Please write a number (not 6 or 7): >

1959:
old  <	add rbp, 24>
new  <	db "Please write a number (not 6 or 7): ", 0>

1960:
old  <	jmp character_test>
new  <>

1961:
old  <>
new  <section .data>

1962:
old  < char_main$27:>
new  <>

1963:
old  <	; PostCall 24>
new  <string_n20213D206#:>

1964:
old  <>
new  <	; Initializer String n != 6>

1965:
old  < char_main$28:>
new  <	db "n != 6", 0>

1966:
old  <	; Return>
new  <>

1967:
old  <	mov rax, [rbp]>
new  <section .text>

1968:
old  <	mov rdi, [rbp + 16]>
new  <>

1969:
old  <	mov rbp, [rbp + 8]>
new  < assert_test:>

1970:
old  <	jmp rax>
new  <	; Assign n 0>

1971:
old  <>
new  <	mov dword [rbp + 24], 0>

1972:
old  < char_main$29:>
new  <>

1973:
old  <	; FunctionEnd char_main>
new  < assert_test$1:>

1974:
old  <>
new  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1975:
old  <section .data>
new  <>

1976:
old  <>
new  < assert_test$2:>

1977:
old  <string_Please20write20a20number2028not20620or207293A20#:>
new  <	; Parameter 52 pointer "Please write a number (not 6 or 7): ">

1978:
old  <	; Initializer String Please write a number (not 6 or 7): >
new  <	mov qword [rbp + 52], string_Please20write20a20number2028not20620or207293A20#>

1979:
old  <	db "Please write a number (not 6 or 7): ", 0>
new  <>

1980:
old  <>
new  < assert_test$3:>

1981:
old  <section .data>
new  <	; Call 28 printf 0>

1982:
old  <>
new  <	mov qword [rbp + 28], assert_test$4>

1983:
old  <string_n20213D206#:>
new  <	mov [rbp + 36], rbp>

1984:
old  <	; Initializer String n != 6>
new  <	add rbp, 28>

1985:
old  <	db "n != 6", 0>
new  <	mov rdi, rbp>

1986:
old  <>
new  <	jmp printf>

1987:
old  <section .text>
new  <>

1988:
old  <>
new  < assert_test$4:>

1989:
old  < assert_test:>
new  <	; PostCall 28>

1990:
old  <	; Assign n 0>
new  <>

1991:
old  <	mov dword [rbp + 24], 0>
new  < assert_test$5:>

1992:
old  <>
new  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1993:
old  < assert_test$1:>
new  <>

1994:
old  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < assert_test$6:>

1995:
old  <>
new  <	; Parameter 52 pointer "%i">

1996:
old  < assert_test$2:>
new  <	mov qword [rbp + 52], string_25i#>

1997:
old  <	; Parameter 52 pointer "Please write a number (not 6 or 7): ">
new  <>

1998:
old  <	mov qword [rbp + 52], string_Please20write20a20number2028not20620or207293A20#>
new  < assert_test$7:>

1999:
old  <>
new  <	; Address Â£temporary135 n>

2000:
old  < assert_test$3:>
new  <	mov rsi, rbp>

2001:
old  <	; Call 28 printf 0>
new  <	add rsi, 24>

2002:
old  <	mov qword [rbp + 28], assert_test$4>
new  <>

2003:
old  <	mov [rbp + 36], rbp>
new  < assert_test$8:>

2004:
old  <	add rbp, 28>
new  <	; Parameter 60 pointer Â£temporary135>

2005:
old  <	mov rdi, rbp>
new  <	mov [rbp + 60], rsi>

2006:
old  <	jmp printf>
new  <>

2007:
old  <>
new  < assert_test$9:>

2008:
old  < assert_test$4:>
new  <	; Call 28 scanf 8>

2009:
old  <	; PostCall 28>
new  <	mov qword [rbp + 28], assert_test$10>

2010:
old  <>
new  <	mov [rbp + 36], rbp>

2011:
old  < assert_test$5:>
new  <	add rbp, 28>

2012:
old  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov rdi, rbp>

2013:
old  <>
new  <	add rdi, 8>

2014:
old  < assert_test$6:>
new  <	jmp scanf>

2015:
old  <	; Parameter 52 pointer "%i">
new  <>

2016:
old  <	mov qword [rbp + 52], string_25i#>
new  < assert_test$10:>

2017:
old  <>
new  <	; PostCall 28>

2018:
old  < assert_test$7:>
new  <>

2019:
old  <	; Address Â£temporary135 n>
new  < assert_test$11:>

2020:
old  <	mov rsi, rbp>
new  <	; NotEqual 23 n 6>

2021:
old  <	add rsi, 24>
new  <	cmp dword [rbp + 24], 6>

2022:
old  <>
new  <	jne assert_test$23>

2023:
old  < assert_test$8:>
new  <>

2024:
old  <	; Parameter 60 pointer Â£temporary135>
new  < assert_test$12:>

2025:
old  <	mov [rbp + 60], rsi>
new  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2027:
old  < assert_test$9:>
new  < assert_test$13:>

2028:
old  <	; Call 28 scanf 8>
new  <	; Parameter 52 pointer stderr>

2029:
old  <	mov qword [rbp + 28], assert_test$10>
new  <	mov rax, [stderr]>

2030:
old  <	mov [rbp + 36], rbp>
new  <	mov [rbp + 52], rax>

2031:
old  <	add rbp, 28>
new  <>

2032:
old  <	mov rdi, rbp>
new  < assert_test$14:>

2033:
old  <	add rdi, 8>
new  <	; Parameter 60 pointer "Assertion failed: "%s" in file %s at line %i\n">

2034:
old  <	jmp scanf>
new  <	mov qword [rbp + 60], string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#>

2036:
old  < assert_test$10:>
new  < assert_test$15:>

2037:
old  <	; PostCall 28>
new  <	; Parameter 68 pointer "n != 6">

2038:
old  <>
new  <	mov qword [rbp + 68], string_n20213D206#>

2039:
old  < assert_test$11:>
new  <>

2040:
old  <	; NotEqual 23 n 6>
new  < assert_test$16:>

2041:
old  <	cmp dword [rbp + 24], 6>
new  <	; Parameter 76 pointer "C:\Users\Stefan\Documents\vagrant\homestead\code\code\Main.c">

2042:
old  <	jne assert_test$23>
new  <	mov qword [rbp + 76], string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CMain2Ec#>

2044:
old  < assert_test$12:>
new  < assert_test$17:>

2045:
old  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter 84 signedint 877>

2046:
old  <>
new  <	mov dword [rbp + 84], 877>

2047:
old  < assert_test$13:>
new  <>

2048:
old  <	; Parameter 52 pointer stderr>
new  < assert_test$18:>

2049:
old  <	mov rax, [stderr]>
new  <	; Call 28 fprintf 20>

2050:
old  <	mov [rbp + 52], rax>
new  <	mov qword [rbp + 28], assert_test$19>

2051:
old  <>
new  <	mov [rbp + 36], rbp>

2052:
old  < assert_test$14:>
new  <	add rbp, 28>

2053:
old  <	; Parameter 60 pointer "Assertion failed: "%s" in file %s at line %i\n">
new  <	mov rdi, rbp>

2054:
old  <	mov qword [rbp + 60], string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#>
new  <	add rdi, 20>

2055:
old  <>
new  <	jmp fprintf>

2056:
old  < assert_test$15:>
new  <>

2057:
old  <	; Parameter 68 pointer "n != 6">
new  < assert_test$19:>

2058:
old  <	mov qword [rbp + 68], string_n20213D206#>
new  <	; PostCall 28>

2060:
old  < assert_test$16:>
new  < assert_test$20:>

2061:
old  <	; Parameter 76 pointer "C:\Users\Stefan\Documents\vagrant\homestead\code\code\Main.c">
new  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2062:
old  <	mov qword [rbp + 76], string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CMain2Ec#>
new  <>

2063:
old  <>
new  < assert_test$21:>

2064:
old  < assert_test$17:>
new  <	; Call 28 abort 0>

2065:
old  <	; Parameter 84 signedint 877>
new  <	mov qword [rbp + 28], assert_test$22>

2066:
old  <	mov dword [rbp + 84], 877>
new  <	mov [rbp + 36], rbp>

2067:
old  <>
new  <	add rbp, 28>

2068:
old  < assert_test$18:>
new  <	jmp abort>

2069:
old  <	; Call 28 fprintf 20>
new  <>

2070:
old  <	mov qword [rbp + 28], assert_test$19>
new  < assert_test$22:>

2071:
old  <	mov [rbp + 36], rbp>
new  <	; PostCall 28>

2072:
old  <	add rbp, 28>
new  <>

2073:
old  <	mov rdi, rbp>
new  < assert_test$23:>

2074:
old  <	add rdi, 20>
new  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2075:
old  <	jmp fprintf>
new  <>

2076:
old  <>
new  < assert_test$24:>

2077:
old  < assert_test$19:>
new  <	; Parameter 52 signedint n>

2078:
old  <	; PostCall 28>
new  <	mov eax, [rbp + 24]>

2079:
old  <>
new  <	mov [rbp + 52], eax>

2080:
old  < assert_test$20:>
new  <>

2081:
old  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < assert_test$25:>

2082:
old  <>
new  <	; Call 28 assert_test2 0>

2083:
old  < assert_test$21:>
new  <	mov qword [rbp + 28], assert_test$26>

2084:
old  <	; Call 28 abort 0>
new  <	mov [rbp + 36], rbp>

2085:
old  <	mov qword [rbp + 28], assert_test$22>
new  <	add rbp, 28>

2086:
old  <	mov [rbp + 36], rbp>
new  <	jmp assert_test2>

2087:
old  <	add rbp, 28>
new  <>

2088:
old  <	jmp abort>
new  < assert_test$26:>

2089:
old  <>
new  <	; PostCall 28>

2090:
old  < assert_test$22:>
new  <>

2091:
old  <	; PostCall 28>
new  < assert_test$27:>

2092:
old  <>
new  <	; Return>

2093:
old  < assert_test$23:>
new  <	mov rax, [rbp]>

2094:
old  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov rdi, [rbp + 16]>

2095:
old  <>
new  <	mov rbp, [rbp + 8]>

2096:
old  < assert_test$24:>
new  <	jmp rax>

2097:
old  <	; Parameter 52 signedint n>
new  <>

2098:
old  <	mov eax, [rbp + 24]>
new  < assert_test$28:>

2099:
old  <	mov [rbp + 52], eax>
new  <	; FunctionEnd assert_test>

2101:
old  < assert_test$25:>
new  <section .data>

2102:
old  <	; Call 28 assert_test2 0>
new  <>

2103:
old  <	mov qword [rbp + 28], assert_test$26>
new  <string_n20213D207#:>

2104:
old  <	mov [rbp + 36], rbp>
new  <	; Initializer String n != 7>

2105:
old  <	add rbp, 28>
new  <	db "n != 7", 0>

2106:
old  <	jmp assert_test2>
new  <>

2107:
old  <>
new  <section .text>

2108:
old  < assert_test$26:>
new  <>

2109:
old  <	; PostCall 28>
new  < assert_test2:>

2110:
old  <>
new  <	; NotEqual 12 n 7>

2111:
old  < assert_test$27:>
new  <	cmp dword [rbp + 24], 7>

2112:
old  <	; Return>
new  <	jne assert_test2$12>

2113:
old  <	mov rax, [rbp]>
new  <>

2114:
old  <	mov rdi, [rbp + 16]>
new  < assert_test2$1:>

2115:
old  <	mov rbp, [rbp + 8]>
new  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2116:
old  <	jmp rax>
new  <>

2117:
old  <>
new  < assert_test2$2:>

2118:
old  < assert_test$28:>
new  <	; Parameter 52 pointer stderr>

2119:
old  <	; FunctionEnd assert_test>
new  <	mov rax, [stderr]>

2120:
old  <>
new  <	mov [rbp + 52], rax>

2121:
old  <section .data>
new  <>

2122:
old  <>
new  < assert_test2$3:>

2123:
old  <string_n20213D207#:>
new  <	; Parameter 60 pointer "Assertion failed: "%s" in file %s at line %i\n">

2124:
old  <	; Initializer String n != 7>
new  <	mov qword [rbp + 60], string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#>

2125:
old  <	db "n != 7", 0>
new  <>

2126:
old  <>
new  < assert_test2$4:>

2127:
old  <section .text>
new  <	; Parameter 68 pointer "n != 7">

2128:
old  <>
new  <	mov qword [rbp + 68], string_n20213D207#>

2129:
old  < assert_test2:>
new  <>

2130:
old  <	; NotEqual 12 n 7>
new  < assert_test2$5:>

2131:
old  <	cmp dword [rbp + 24], 7>
new  <	; Parameter 76 pointer "C:\Users\Stefan\Documents\vagrant\homestead\code\code\Main.c">

2132:
old  <	jne assert_test2$12>
new  <	mov qword [rbp + 76], string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CMain2Ec#>

2134:
old  < assert_test2$1:>
new  < assert_test2$6:>

2135:
old  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter 84 signedint 882>

2136:
old  <>
new  <	mov dword [rbp + 84], 882>

2137:
old  < assert_test2$2:>
new  <>

2138:
old  <	; Parameter 52 pointer stderr>
new  < assert_test2$7:>

2139:
old  <	mov rax, [stderr]>
new  <	; Call 28 fprintf 20>

2140:
old  <	mov [rbp + 52], rax>
new  <	mov qword [rbp + 28], assert_test2$8>

2141:
old  <>
new  <	mov [rbp + 36], rbp>

2142:
old  < assert_test2$3:>
new  <	add rbp, 28>

2143:
old  <	; Parameter 60 pointer "Assertion failed: "%s" in file %s at line %i\n">
new  <	mov rdi, rbp>

2144:
old  <	mov qword [rbp + 60], string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#>
new  <	add rdi, 20>

2145:
old  <>
new  <	jmp fprintf>

2146:
old  < assert_test2$4:>
new  <>

2147:
old  <	; Parameter 68 pointer "n != 7">
new  < assert_test2$8:>

2148:
old  <	mov qword [rbp + 68], string_n20213D207#>
new  <	; PostCall 28>

2150:
old  < assert_test2$5:>
new  < assert_test2$9:>

2151:
old  <	; Parameter 76 pointer "C:\Users\Stefan\Documents\vagrant\homestead\code\code\Main.c">
new  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2152:
old  <	mov qword [rbp + 76], string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CMain2Ec#>
new  <>

2153:
old  <>
new  < assert_test2$10:>

2154:
old  < assert_test2$6:>
new  <	; Call 28 abort 0>

2155:
old  <	; Parameter 84 signedint 882>
new  <	mov qword [rbp + 28], assert_test2$11>

2156:
old  <	mov dword [rbp + 84], 882>
new  <	mov [rbp + 36], rbp>

2157:
old  <>
new  <	add rbp, 28>

2158:
old  < assert_test2$7:>
new  <	jmp abort>

2159:
old  <	; Call 28 fprintf 20>
new  <>

2160:
old  <	mov qword [rbp + 28], assert_test2$8>
new  < assert_test2$11:>

2161:
old  <	mov [rbp + 36], rbp>
new  <	; PostCall 28>

2162:
old  <	add rbp, 28>
new  <>

2163:
old  <	mov rdi, rbp>
new  < assert_test2$12:>

2164:
old  <	add rdi, 20>
new  <	; Return>

2165:
old  <	jmp fprintf>
new  <	mov rax, [rbp]>

2166:
old  <>
new  <	mov rdi, [rbp + 16]>

2167:
old  < assert_test2$8:>
new  <	mov rbp, [rbp + 8]>

2168:
old  <	; PostCall 28>
new  <	jmp rax>

2170:
old  < assert_test2$9:>
new  < assert_test2$13:>

2171:
old  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; FunctionEnd assert_test2>

2173:
old  < assert_test2$10:>
new  <section .data>

2174:
old  <	; Call 28 abort 0>
new  <$StackTop:	times 1048576 db 0>

Malloc.asm
143:
old  <	; NotEqual 25 memorySize 0>
new  <	; NotEqual 26 memorySize 0>

145:
old  <	jne malloc$25>
new  <	jne malloc$26>

148:
old  <	; Return 0>
new  <	; SetReturnValue>

149:
old  <	mov rbx, 0>
new  <>

150:
old  <	mov rax, [rbp]>
new  < malloc$25:>

151:
old  <	mov rdi, [rbp + 16]>
new  <	; Return 0>

152:
old  <	mov rbp, [rbp + 8]>
new  <	mov rbx, 0>

153:
old  <	jmp rax>
new  <	mov rax, [rbp]>

154:
old  <>
new  <	mov rdi, [rbp + 16]>

155:
old  < malloc$25:>
new  <	mov rbp, [rbp + 8]>

156:
old  <	; Equal 43 currBlockPtr 0>
new  <	jmp rax>

157:
old  <	cmp qword [rbp + 64], 0>
new  <>

158:
old  <	je malloc$43>
new  < malloc$26:>

159:
old  <>
new  <	; Equal 44 currBlockPtr 0>

160:
old  < malloc$26:>
new  <	cmp qword [rbp + 64], 0>

161:
old  <	; IntegralToIntegral Â£temporary159 currBlockPtr>
new  <	je malloc$44>

162:
old  <	mov rax, [rbp + 64]>
new  <>

163:
old  <>
new  < malloc$27:>

164:
old  < malloc$27:>
new  <	; IntegralToIntegral Â£temporary159 currBlockPtr>

165:
old  <	; Assign currAddress Â£temporary159>
new  <	mov rax, [rbp + 64]>

166:
old  <	mov [rbp + 72], eax>
new  <>

167:
old  <>
new  < malloc$28:>

168:
old  < malloc$28:>
new  <	; Assign currAddress Â£temporary159>

169:
old  <	; Dereference Â£temporary160 -> currBlockPtr currBlockPtr 0>
new  <	mov [rbp + 72], eax>

170:
old  <	mov rsi, [rbp + 64]>
new  <>

171:
old  <>
new  < malloc$29:>

172:
old  < malloc$29:>
new  <	; Dereference Â£temporary160 -> currBlockPtr currBlockPtr 0>

173:
old  <	; BinaryAdd Â£temporary161 currAddress Â£temporary160 -> currBlockPtr>
new  <	mov rsi, [rbp + 64]>

174:
old  <	mov eax, [rbp + 72]>
new  <>

175:
old  <	add eax, [rsi]>
new  < malloc$30:>

176:
old  <>
new  <	; BinaryAdd Â£temporary161 currAddress Â£temporary160 -> currBlockPtr>

177:
old  < malloc$30:>
new  <	mov eax, [rbp + 72]>

178:
old  <	; BinaryAdd Â£temporary162 Â£temporary161 12>
new  <	add eax, [rsi]>

179:
old  <	add eax, 12>
new  <>

180:
old  <>
new  < malloc$31:>

181:
old  < malloc$31:>
new  <	; BinaryAdd Â£temporary162 Â£temporary161 12>

182:
old  <	; BinarySubtract currGap lastAddress Â£temporary162>
new  <	add eax, 12>

183:
old  <	mov ebx, [rbp + 36]>
new  <>

184:
old  <	sub ebx, eax>
new  < malloc$32:>

185:
old  <	mov [rbp + 76], ebx>
new  <	; BinarySubtract currGap lastAddress Â£temporary162>

186:
old  <>
new  <	mov ebx, [rbp + 36]>

187:
old  < malloc$32:>
new  <	sub ebx, eax>

188:
old  <	; UnsignedGreaterThan 38 newBlockSize currGap>
new  <	mov [rbp + 76], ebx>

189:
old  <	mov eax, [rbp + 76]>
new  <>

190:
old  <	cmp [rbp + 28], eax>
new  < malloc$33:>

191:
old  <	ja malloc$38>
new  <	; UnsignedGreaterThan 39 newBlockSize currGap>

192:
old  <>
new  <	mov eax, [rbp + 76]>

193:
old  < malloc$33:>
new  <	cmp [rbp + 28], eax>

194:
old  <	; Equal 35 minGap 0>
new  <	ja malloc$39>

195:
old  <	cmp dword [rbp + 32], 0>
new  <>

196:
old  <	je malloc$35>
new  < malloc$34:>

197:
old  <>
new  <	; Equal 36 minGap 0>

198:
old  < malloc$34:>
new  <	cmp dword [rbp + 32], 0>

199:
old  <	; UnsignedGreaterThanEqual 38 currGap minGap>
new  <	je malloc$36>

200:
old  <	mov eax, [rbp + 32]>
new  <>

201:
old  <	cmp [rbp + 76], eax>
new  < malloc$35:>

202:
old  <	jae malloc$38>
new  <	; UnsignedGreaterThanEqual 39 currGap minGap>

203:
old  <>
new  <	mov eax, [rbp + 32]>

204:
old  < malloc$35:>
new  <	cmp [rbp + 76], eax>

205:
old  <	; Assign minGap currGap>
new  <	jae malloc$39>

206:
old  <	mov eax, [rbp + 76]>
new  <>

207:
old  <	mov [rbp + 32], eax>
new  < malloc$36:>

208:
old  <>
new  <	; Assign minGap currGap>

209:
old  < malloc$36:>
new  <	mov eax, [rbp + 76]>

210:
old  <	; Assign minBlockPtr currBlockPtr>
new  <	mov [rbp + 32], eax>

211:
old  <	mov rax, [rbp + 64]>
new  <>

212:
old  <	mov [rbp + 40], rax>
new  < malloc$37:>

213:
old  <>
new  <	; Assign minBlockPtr currBlockPtr>

214:
old  < malloc$37:>
new  <	mov rax, [rbp + 64]>

215:
old  <	; Assign minPrevBlockPtr prevBlockPtr>
new  <	mov [rbp + 40], rax>

216:
old  <	mov rax, [rbp + 56]>
new  <>

217:
old  <	mov [rbp + 48], rax>
new  < malloc$38:>

218:
old  <>
new  <	; Assign minPrevBlockPtr prevBlockPtr>

219:
old  < malloc$38:>
new  <	mov rax, [rbp + 56]>

220:
old  <	; Assign lastAddress currAddress>
new  <	mov [rbp + 48], rax>

221:
old  <	mov eax, [rbp + 72]>
new  <>

222:
old  <	mov [rbp + 36], eax>
new  < malloc$39:>

223:
old  <>
new  <	; Assign lastAddress currAddress>

224:
old  < malloc$39:>
new  <	mov eax, [rbp + 72]>

225:
old  <	; Assign prevBlockPtr currBlockPtr>
new  <	mov [rbp + 36], eax>

226:
old  <	mov rax, [rbp + 64]>
new  <>

227:
old  <	mov [rbp + 56], rax>
new  < malloc$40:>

228:
old  <>
new  <	; Assign prevBlockPtr currBlockPtr>

229:
old  < malloc$40:>
new  <	mov rax, [rbp + 64]>

230:
old  <	; Dereference Â£temporary169 -> currBlockPtr currBlockPtr 0>
new  <	mov [rbp + 56], rax>

231:
old  <	mov rsi, [rbp + 64]>
new  <>

232:
old  <>
new  < malloc$41:>

233:
old  < malloc$41:>
new  <	; Dereference Â£temporary169 -> currBlockPtr currBlockPtr 0>

234:
old  <	; Assign currBlockPtr Â£temporary169 -> currBlockPtr>
new  <	mov rsi, [rbp + 64]>

235:
old  <	mov rax, [rsi + 4]>
new  <>

236:
old  <	mov [rbp + 64], rax>
new  < malloc$42:>

237:
old  <>
new  <	; Assign currBlockPtr Â£temporary169 -> currBlockPtr>

238:
old  < malloc$42:>
new  <	mov rax, [rsi + 4]>

239:
old  <	; Goto 25>
new  <	mov [rbp + 64], rax>

240:
old  <	jmp malloc$25>
new  <>

241:
old  <>
new  < malloc$43:>

242:
old  < malloc$43:>
new  <	; Goto 26>

243:
old  <	; Equal 62 minBlockPtr 0>
new  <	jmp malloc$26>

244:
old  <	cmp qword [rbp + 40], 0>
new  <>

245:
old  <	je malloc$62>
new  < malloc$44:>

246:
old  <>
new  <	; Equal 64 minBlockPtr 0>

247:
old  < malloc$44:>
new  <	cmp qword [rbp + 40], 0>

248:
old  <	; IntegralToIntegral Â£temporary171 minBlockPtr>
new  <	je malloc$64>

249:
old  <	mov rax, [rbp + 40]>
new  <>

250:
old  <>
new  < malloc$45:>

251:
old  < malloc$45:>
new  <	; IntegralToIntegral Â£temporary171 minBlockPtr>

252:
old  <	; Dereference Â£temporary172 -> minBlockPtr minBlockPtr 0>
new  <	mov rax, [rbp + 40]>

253:
old  <	mov rsi, [rbp + 40]>
new  <>

254:
old  <>
new  < malloc$46:>

255:
old  < malloc$46:>
new  <	; Dereference Â£temporary172 -> minBlockPtr minBlockPtr 0>

256:
old  <	; BinaryAdd Â£temporary173 Â£temporary171 Â£temporary172 -> minBlockPtr>
new  <	mov rsi, [rbp + 40]>

257:
old  <	add eax, [rsi]>
new  <>

258:
old  <>
new  < malloc$47:>

259:
old  < malloc$47:>
new  <	; BinaryAdd Â£temporary173 Â£temporary171 Â£temporary172 -> minBlockPtr>

260:
old  <	; BinaryAdd newAddress Â£temporary173 12>
new  <	add eax, [rsi]>

261:
old  <	add eax, 12>
new  <>

262:
old  <	mov [rbp + 72], eax>
new  < malloc$48:>

263:
old  <>
new  <	; BinaryAdd newAddress Â£temporary173 12>

264:
old  < malloc$48:>
new  <	add eax, 12>

265:
old  <	; IntegralToIntegral Â£temporary175 newAddress>
new  <	mov [rbp + 72], eax>

266:
old  <	mov eax, [rbp + 72]>
new  <>

267:
old  <	mov rbx, 4294967295>
new  < malloc$49:>

268:
old  <	and rax, rbx>
new  <	; IntegralToIntegral Â£temporary175 newAddress>

269:
old  <>
new  <	mov eax, [rbp + 72]>

270:
old  < malloc$49:>
new  <	mov rbx, 4294967295>

271:
old  <	; Assign newBlockPtr Â£temporary175>
new  <	and rax, rbx>

272:
old  <	mov [rbp + 76], rax>
new  <>

273:
old  <>
new  < malloc$50:>

274:
old  < malloc$50:>
new  <	; Assign newBlockPtr Â£temporary175>

275:
old  <	; Dereference Â£temporary176 -> newBlockPtr newBlockPtr 0>
new  <	mov [rbp + 76], rax>

276:
old  <	mov rsi, [rbp + 76]>
new  <>

277:
old  <>
new  < malloc$51:>

278:
old  < malloc$51:>
new  <	; Dereference Â£temporary176 -> newBlockPtr newBlockPtr 0>

279:
old  <	; Assign Â£temporary176 -> newBlockPtr memorySize>
new  <	mov rsi, [rbp + 76]>

280:
old  <	mov eax, [rbp + 24]>
new  <>

281:
old  <	mov [rsi], eax>
new  < malloc$52:>

282:
old  <>
new  <	; Assign Â£temporary176 -> newBlockPtr memorySize>

283:
old  < malloc$52:>
new  <	mov eax, [rbp + 24]>

284:
old  <	; Dereference Â£temporary177 -> newBlockPtr newBlockPtr 0>
new  <	mov [rsi], eax>

285:
old  <	mov rsi, [rbp + 76]>
new  <>

286:
old  <>
new  < malloc$53:>

287:
old  < malloc$53:>
new  <	; Dereference Â£temporary177 -> newBlockPtr newBlockPtr 0>

288:
old  <	; Assign Â£temporary177 -> newBlockPtr minBlockPtr>
new  <	mov rsi, [rbp + 76]>

289:
old  <	mov rax, [rbp + 40]>
new  <>

290:
old  <	mov [rsi + 4], rax>
new  < malloc$54:>

291:
old  <>
new  <	; Assign Â£temporary177 -> newBlockPtr minBlockPtr>

292:
old  < malloc$54:>
new  <	mov rax, [rbp + 40]>

293:
old  <	; Equal 58 minPrevBlockPtr 0>
new  <	mov [rsi + 4], rax>

294:
old  <	cmp qword [rbp + 48], 0>
new  <>

295:
old  <	je malloc$58>
new  < malloc$55:>

296:
old  <>
new  <	; Equal 59 minPrevBlockPtr 0>

297:
old  < malloc$55:>
new  <	cmp qword [rbp + 48], 0>

298:
old  <	; Dereference Â£temporary179 -> minPrevBlockPtr minPrevBlockPtr 0>
new  <	je malloc$59>

299:
old  <	mov rsi, [rbp + 48]>
new  <>

300:
old  <>
new  < malloc$56:>

301:
old  < malloc$56:>
new  <	; Dereference Â£temporary179 -> minPrevBlockPtr minPrevBlockPtr 0>

302:
old  <	; Assign Â£temporary179 -> minPrevBlockPtr newBlockPtr>
new  <	mov rsi, [rbp + 48]>

303:
old  <	mov rax, [rbp + 76]>
new  <>

304:
old  <	mov [rsi + 4], rax>
new  < malloc$57:>

305:
old  <>
new  <	; Assign Â£temporary179 -> minPrevBlockPtr newBlockPtr>

306:
old  < malloc$57:>
new  <	mov rax, [rbp + 76]>

307:
old  <	; Goto 59>
new  <	mov [rsi + 4], rax>

308:
old  <	jmp malloc$59>
new  <>

309:
old  <>
new  < malloc$58:>

310:
old  < malloc$58:>
new  <	; Goto 60>

311:
old  <	; Assign g_firstBlockPtr newBlockPtr>
new  <	jmp malloc$60>

312:
old  <	mov rax, [rbp + 76]>
new  <>

313:
old  <	mov [g_firstBlockPtr], rax>
new  < malloc$59:>

314:
old  <>
new  <	; Assign g_firstBlockPtr newBlockPtr>

315:
old  < malloc$59:>
new  <	mov rax, [rbp + 76]>

316:
old  <	; BinaryAdd Â£temporary180 newAddress 12>
new  <	mov [g_firstBlockPtr], rax>

317:
old  <	mov ebx, [rbp + 72]>
new  <>

318:
old  <	add ebx, 12>
new  < malloc$60:>

319:
old  <>
new  <	; BinaryAdd Â£temporary180 newAddress 12>

320:
old  < malloc$60:>
new  <	mov ebx, [rbp + 72]>

321:
old  <	; IntegralToIntegral Â£temporary181 Â£temporary180>
new  <	add ebx, 12>

322:
old  <	mov rax, 4294967295>
new  <>

323:
old  <	and rbx, rax>
new  < malloc$61:>

324:
old  <>
new  <	; IntegralToIntegral Â£temporary181 Â£temporary180>

325:
old  < malloc$61:>
new  <	mov rax, 4294967295>

326:
old  <	; Return Â£temporary181>
new  <	and rbx, rax>

327:
old  <	mov rax, [rbp]>
new  <>

328:
old  <	mov rdi, [rbp + 16]>
new  < malloc$62:>

329:
old  <	mov rbp, [rbp + 8]>
new  <	; SetReturnValue>

330:
old  <	jmp rax>
new  <>

331:
old  <>
new  < malloc$63:>

332:
old  < malloc$62:>
new  <	; Return Â£temporary181>

333:
old  <	; BinarySubtract newAddress lastAddress newBlockSize>
new  <	mov rax, [rbp]>

334:
old  <	mov eax, [rbp + 36]>
new  <	mov rdi, [rbp + 16]>

335:
old  <	sub eax, [rbp + 28]>
new  <	mov rbp, [rbp + 8]>

336:
old  <	mov [rbp + 72], eax>
new  <	jmp rax>

338:
old  < malloc$63:>
new  < malloc$64:>

339:
old  <	; InspectRegister Â£temporary183 rbp>
new  <	; BinarySubtract newAddress lastAddress newBlockSize>

340:
old  <>
new  <	mov eax, [rbp + 36]>

341:
old  < malloc$64:>
new  <	sub eax, [rbp + 28]>

342:
old  <	; IntegralToIntegral Â£temporary184 Â£temporary183>
new  <	mov [rbp + 72], eax>

345:
old  <	; Assign stackTop Â£temporary184>
new  <	; InspectRegister Â£temporary183 rbp>

346:
old  <	mov [rbp + 76], ebp>
new  <>

347:
old  <>
new  < malloc$66:>

348:
old  < malloc$66:>
new  <	; IntegralToIntegral Â£temporary184 Â£temporary183>

349:
old  <	; UnsignedGreaterThan 81 stackTop newAddress>
new  <>

350:
old  <	mov eax, [rbp + 72]>
new  < malloc$67:>

351:
old  <	cmp [rbp + 76], eax>
new  <	; Assign stackTop Â£temporary184>

352:
old  <	ja malloc$81>
new  <	mov [rbp + 76], ebp>

354:
old  < malloc$67:>
new  < malloc$68:>

355:
old  <	; IntegralToIntegral Â£temporary186 newAddress>
new  <	; UnsignedGreaterThan 84 stackTop newAddress>

357:
old  <	mov rbx, 4294967295>
new  <	cmp [rbp + 76], eax>

358:
old  <	and rax, rbx>
new  <	ja malloc$84>

360:
old  < malloc$68:>
new  < malloc$69:>

361:
old  <	; Assign newBlockPtr Â£temporary186>
new  <	; IntegralToIntegral Â£temporary186 newAddress>

362:
old  <	mov [rbp + 80], rax>
new  <	mov eax, [rbp + 72]>

363:
old  <>
new  <	mov rbx, 4294967295>

364:
old  < malloc$69:>
new  <	and rax, rbx>

365:
old  <	; Dereference Â£temporary187 -> newBlockPtr newBlockPtr 0>
new  <>

366:
old  <	mov rsi, [rbp + 80]>
new  < malloc$70:>

367:
old  <>
new  <	; Assign newBlockPtr Â£temporary186>

368:
old  < malloc$70:>
new  <	mov [rbp + 80], rax>

369:
old  <	; Assign Â£temporary187 -> newBlockPtr memorySize>
new  <>

370:
old  <	mov eax, [rbp + 24]>
new  < malloc$71:>

371:
old  <	mov [rsi], eax>
new  <	; Dereference Â£temporary187 -> newBlockPtr newBlockPtr 0>

372:
old  <>
new  <	mov rsi, [rbp + 80]>

373:
old  < malloc$71:>
new  <>

374:
old  <	; Dereference Â£temporary188 -> newBlockPtr newBlockPtr 0>
new  < malloc$72:>

375:
old  <	mov rsi, [rbp + 80]>
new  <	; Assign Â£temporary187 -> newBlockPtr memorySize>

376:
old  <>
new  <	mov eax, [rbp + 24]>

377:
old  < malloc$72:>
new  <	mov [rsi], eax>

378:
old  <	; Assign Â£temporary188 -> newBlockPtr 0>
new  <>

379:
old  <	mov qword [rsi + 4], 0>
new  < malloc$73:>

380:
old  <>
new  <	; Dereference Â£temporary188 -> newBlockPtr newBlockPtr 0>

381:
old  < malloc$73:>
new  <	mov rsi, [rbp + 80]>

382:
old  <	; Equal 77 prevBlockPtr 0>
new  <>

383:
old  <	cmp qword [rbp + 56], 0>
new  < malloc$74:>

384:
old  <	je malloc$77>
new  <	; Assign Â£temporary188 -> newBlockPtr 0>

385:
old  <>
new  <	mov qword [rsi + 4], 0>

386:
old  < malloc$74:>
new  <>

387:
old  <	; Dereference Â£temporary190 -> prevBlockPtr prevBlockPtr 0>
new  < malloc$75:>

388:
old  <	mov rsi, [rbp + 56]>
new  <	; Equal 79 prevBlockPtr 0>

389:
old  <>
new  <	cmp qword [rbp + 56], 0>

390:
old  < malloc$75:>
new  <	je malloc$79>

391:
old  <	; Assign Â£temporary190 -> prevBlockPtr newBlockPtr>
new  <>

392:
old  <	mov rax, [rbp + 80]>
new  < malloc$76:>

393:
old  <	mov [rsi + 4], rax>
new  <	; Dereference Â£temporary190 -> prevBlockPtr prevBlockPtr 0>

394:
old  <>
new  <	mov rsi, [rbp + 56]>

395:
old  < malloc$76:>
new  <>

396:
old  <	; Goto 78>
new  < malloc$77:>

397:
old  <	jmp malloc$78>
new  <	; Assign Â£temporary190 -> prevBlockPtr newBlockPtr>

398:
old  <>
new  <	mov rax, [rbp + 80]>

399:
old  < malloc$77:>
new  <	mov [rsi + 4], rax>

400:
old  <	; Assign g_firstBlockPtr newBlockPtr>
new  <>

401:
old  <	mov rax, [rbp + 80]>
new  < malloc$78:>

402:
old  <	mov [g_firstBlockPtr], rax>
new  <	; Goto 80>

403:
old  <>
new  <	jmp malloc$80>

404:
old  < malloc$78:>
new  <>

405:
old  <	; BinaryAdd Â£temporary191 newAddress 12>
new  < malloc$79:>

406:
old  <	mov ebx, [rbp + 72]>
new  <	; Assign g_firstBlockPtr newBlockPtr>

407:
old  <	add ebx, 12>
new  <	mov rax, [rbp + 80]>

408:
old  <>
new  <	mov [g_firstBlockPtr], rax>

409:
old  < malloc$79:>
new  <>

410:
old  <	; IntegralToIntegral Â£temporary192 Â£temporary191>
new  < malloc$80:>

411:
old  <	mov rax, 4294967295>
new  <	; BinaryAdd Â£temporary191 newAddress 12>

412:
old  <	and rbx, rax>
new  <	mov ebx, [rbp + 72]>

413:
old  <>
new  <	add ebx, 12>

414:
old  < malloc$80:>
new  <>

415:
old  <	; Return Â£temporary192>
new  < malloc$81:>

416:
old  <	mov rax, [rbp]>
new  <	; IntegralToIntegral Â£temporary192 Â£temporary191>

417:
old  <	mov rdi, [rbp + 16]>
new  <	mov rax, 4294967295>

418:
old  <	mov rbp, [rbp + 8]>
new  <	and rbx, rax>

419:
old  <	jmp rax>
new  <>

420:
old  <>
new  < malloc$82:>

421:
old  < malloc$81:>
new  <	; SetReturnValue>

422:
old  <	; Return 0>
new  <>

423:
old  <	mov rbx, 0>
new  < malloc$83:>

424:
old  <	mov rax, [rbp]>
new  <	; Return Â£temporary192>

425:
old  <	mov rdi, [rbp + 16]>
new  <	mov rax, [rbp]>

426:
old  <	mov rbp, [rbp + 8]>
new  <	mov rdi, [rbp + 16]>

427:
old  <	jmp rax>
new  <	mov rbp, [rbp + 8]>

428:
old  <>
new  <	jmp rax>

429:
old  < malloc$82:>
new  <>

430:
old  <	; FunctionEnd malloc>
new  < malloc$84:>

431:
old  <>
new  <	; SetReturnValue>

432:
old  <section .text>
new  <>

433:
old  <>
new  < malloc$85:>

434:
old  < calloc:>
new  <	; Return 0>

435:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov rbx, 0>

436:
old  <>
new  <	mov rax, [rbp]>

437:
old  < calloc$1:>
new  <	mov rdi, [rbp + 16]>

438:
old  <	; SignedMultiply Â£temporary193 number size>
new  <	mov rbp, [rbp + 8]>

439:
old  <	mov eax, [rbp + 24]>
new  <	jmp rax>

440:
old  <	xor edx, edx>
new  <>

441:
old  <	imul dword [rbp + 28]>
new  < malloc$86:>

442:
old  <>
new  <	; FunctionEnd malloc>

443:
old  < calloc$2:>
new  <>

444:
old  <	; Parameter 56 signedint Â£temporary193>
new  <section .text>

445:
old  <	mov [rbp + 56], eax>
new  <>

446:
old  <>
new  < calloc:>

447:
old  < calloc$3:>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

448:
old  <	; Call 32 malloc 0>
new  <>

449:
old  <	mov qword [rbp + 32], calloc$4>
new  < calloc$1:>

450:
old  <	mov [rbp + 40], rbp>
new  <	; SignedMultiply Â£temporary193 number size>

451:
old  <	add rbp, 32>
new  <	mov eax, [rbp + 24]>

452:
old  <	jmp malloc>
new  <	xor edx, edx>

453:
old  <>
new  <	imul dword [rbp + 28]>

454:
old  < calloc$4:>
new  <>

455:
old  <	; PostCall 32>
new  < calloc$2:>

456:
old  <>
new  <	; Parameter 56 signedint Â£temporary193>

457:
old  < calloc$5:>
new  <	mov [rbp + 56], eax>

458:
old  <	; GetReturnValue Â£temporary194>
new  <>

459:
old  <>
new  < calloc$3:>

460:
old  < calloc$6:>
new  <	; Call 32 malloc 0>

461:
old  <	; Assign pointer Â£temporary194>
new  <	mov qword [rbp + 32], calloc$4>

462:
old  <	mov [rbp + 32], rbx>
new  <	mov [rbp + 40], rbp>

463:
old  <>
new  <	add rbp, 32>

464:
old  < calloc$7:>
new  <	jmp malloc>

465:
old  <	; Equal 14 pointer 0>
new  <>

466:
old  <	cmp qword [rbp + 32], 0>
new  < calloc$4:>

467:
old  <	je calloc$14>
new  <	; PostCall 32>

469:
old  < calloc$8:>
new  < calloc$5:>

470:
old  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; GetReturnValue Â£temporary194>

472:
old  < calloc$9:>
new  < calloc$6:>

473:
old  <	; Parameter 64 pointer pointer>
new  <	; Assign pointer Â£temporary194>

474:
old  <	mov rax, [rbp + 32]>
new  <	mov [rbp + 32], rbx>

475:
old  <	mov [rbp + 64], rax>
new  <>

476:
old  <>
new  < calloc$7:>

477:
old  < calloc$10:>
new  <	; Equal 14 pointer 0>

478:
old  <	; Parameter 72 signedint 0>
new  <	cmp qword [rbp + 32], 0>

479:
old  <	mov dword [rbp + 72], 0>
new  <	je calloc$14>

481:
old  < calloc$11:>
new  < calloc$8:>

482:
old  <	; Parameter 76 signedint size>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

483:
old  <	mov eax, [rbp + 28]>
new  <>

484:
old  <	mov [rbp + 76], eax>
new  < calloc$9:>

485:
old  <>
new  <	; Parameter 64 pointer pointer>

486:
old  < calloc$12:>
new  <	mov rax, [rbp + 32]>

487:
old  <	; Call 40 memset 0>
new  <	mov [rbp + 64], rax>

488:
old  <	mov qword [rbp + 40], calloc$13>
new  <>

489:
old  <	mov [rbp + 48], rbp>
new  < calloc$10:>

490:
old  <	add rbp, 40>
new  <	; Parameter 72 signedint 0>

491:
old  <	jmp memset>
new  <	mov dword [rbp + 72], 0>

493:
old  < calloc$13:>
new  < calloc$11:>

494:
old  <	; PostCall 40>
new  <	; Parameter 76 signedint size>

495:
old  <>
new  <	mov eax, [rbp + 28]>

496:
old  < calloc$14:>
new  <	mov [rbp + 76], eax>

497:
old  <	; Return pointer>
new  <>

498:
old  <	mov rbx, [rbp + 32]>
new  < calloc$12:>

499:
old  <	mov rax, [rbp]>
new  <	; Call 40 memset 0>

500:
old  <	mov rdi, [rbp + 16]>
new  <	mov qword [rbp + 40], calloc$13>

501:
old  <	mov rbp, [rbp + 8]>
new  <	mov [rbp + 48], rbp>

502:
old  <	jmp rax>
new  <	add rbp, 40>

503:
old  <>
new  <	jmp memset>

504:
old  < calloc$15:>
new  <>

505:
old  <	; FunctionEnd calloc>
new  < calloc$13:>

506:
old  <>
new  <	; PostCall 40>

507:
old  <section .text>
new  <>

508:
old  <>
new  < calloc$14:>

509:
old  < free:>
new  <	; SetReturnValue>

510:
old  <	; IntegralToIntegral Â£temporary197 freeMemoryPtr>
new  <>

511:
old  <	mov rax, [rbp + 24]>
new  < calloc$15:>

512:
old  <>
new  <	; Return pointer>

513:
old  < free$1:>
new  <	mov rbx, [rbp + 32]>

514:
old  <	; BinarySubtract Â£temporary198 Â£temporary197 12>
new  <	mov rax, [rbp]>

515:
old  <	sub eax, 12>
new  <	mov rdi, [rbp + 16]>

516:
old  <>
new  <	mov rbp, [rbp + 8]>

517:
old  < free$2:>
new  <	jmp rax>

518:
old  <	; IntegralToIntegral Â£temporary199 Â£temporary198>
new  <>

519:
old  <	mov rbx, 4294967295>
new  < calloc$16:>

520:
old  <	and rax, rbx>
new  <	; FunctionEnd calloc>

522:
old  < free$3:>
new  <section .text>

523:
old  <	; Assign freeBlockPtr Â£temporary199>
new  <>

524:
old  <	mov [rbp + 32], rax>
new  < free:>

525:
old  <>
new  <	; IntegralToIntegral Â£temporary197 freeMemoryPtr>

526:
old  < free$4:>
new  <	mov rax, [rbp + 24]>

527:
old  <	; Assign prevBlockPtr 0>
new  <>

528:
old  <	mov qword [rbp + 40], 0>
new  < free$1:>

529:
old  <>
new  <	; BinarySubtract Â£temporary198 Â£temporary197 12>

530:
old  < free$5:>
new  <	sub eax, 12>

531:
old  <	; Assign currBlockPtr g_firstBlockPtr>
new  <>

532:
old  <	mov rax, [g_firstBlockPtr]>
new  < free$2:>

533:
old  <	mov [rbp + 48], rax>
new  <	; IntegralToIntegral Â£temporary199 Â£temporary198>

534:
old  <>
new  <	mov rbx, 4294967295>

535:
old  < free$6:>
new  <	and rax, rbx>

536:
old  <	; NotEqual 8 freeMemoryPtr 0>
new  <>

537:
old  <	cmp qword [rbp + 24], 0>
new  < free$3:>

538:
old  <	jne free$8>
new  <	; Assign freeBlockPtr Â£temporary199>

539:
old  <>
new  <	mov [rbp + 32], rax>

540:
old  < free$7:>
new  <>

541:
old  <	; Return>
new  < free$4:>

542:
old  <	mov rax, [rbp]>
new  <	; Assign prevBlockPtr 0>

543:
old  <	mov rdi, [rbp + 16]>
new  <	mov qword [rbp + 40], 0>

544:
old  <	mov rbp, [rbp + 8]>
new  <>

545:
old  <	jmp rax>
new  < free$5:>

546:
old  <>
new  <	; Assign currBlockPtr g_firstBlockPtr>

547:
old  < free$8:>
new  <	mov rax, [g_firstBlockPtr]>

548:
old  <	; Equal 32 currBlockPtr 0>
new  <	mov [rbp + 48], rax>

549:
old  <	cmp qword [rbp + 48], 0>
new  <>

550:
old  <	je free$32>
new  < free$6:>

551:
old  <>
new  <	; NotEqual 8 freeMemoryPtr 0>

552:
old  < free$9:>
new  <	cmp qword [rbp + 24], 0>

553:
old  <	; NotEqual 28 currBlockPtr freeBlockPtr>
new  <	jne free$8>

554:
old  <	mov rax, [rbp + 32]>
new  <>

555:
old  <	cmp [rbp + 48], rax>
new  < free$7:>

556:
old  <	jne free$28>
new  <	; Return>

557:
old  <>
new  <	mov rax, [rbp]>

558:
old  < free$10:>
new  <	mov rdi, [rbp + 16]>

559:
old  <	; NotEqual 15 prevBlockPtr 0>
new  <	mov rbp, [rbp + 8]>

560:
old  <	cmp qword [rbp + 40], 0>
new  <	jmp rax>

561:
old  <	jne free$15>
new  <>

562:
old  <>
new  < free$8:>

563:
old  < free$11:>
new  <	; Equal 32 currBlockPtr 0>

564:
old  <	; Dereference Â£temporary204 -> currBlockPtr currBlockPtr 0>
new  <	cmp qword [rbp + 48], 0>

565:
old  <	mov rsi, [rbp + 48]>
new  <	je free$32>

567:
old  < free$12:>
new  < free$9:>

568:
old  <	; NotEqual 15 Â£temporary204 -> currBlockPtr 0>
new  <	; NotEqual 28 currBlockPtr freeBlockPtr>

569:
old  <	cmp qword [rsi + 4], 0>
new  <	mov rax, [rbp + 32]>

570:
old  <	jne free$15>
new  <	cmp [rbp + 48], rax>

571:
old  <>
new  <	jne free$28>

572:
old  < free$13:>
new  <>

573:
old  <	; Assign g_firstBlockPtr 0>
new  < free$10:>

574:
old  <	mov qword [g_firstBlockPtr], 0>
new  <	; NotEqual 15 prevBlockPtr 0>

575:
old  <>
new  <	cmp qword [rbp + 40], 0>

576:
old  < free$14:>
new  <	jne free$15>

577:
old  <	; Goto 27>
new  <>

578:
old  <	jmp free$27>
new  < free$11:>

579:
old  <>
new  <	; Dereference Â£temporary204 -> currBlockPtr currBlockPtr 0>

580:
old  < free$15:>
new  <	mov rsi, [rbp + 48]>

581:
old  <	; NotEqual 19 prevBlockPtr 0>
new  <>

582:
old  <	cmp qword [rbp + 40], 0>
new  < free$12:>

583:
old  <	jne free$19>
new  <	; NotEqual 15 Â£temporary204 -> currBlockPtr 0>

584:
old  <>
new  <	cmp qword [rsi + 4], 0>

585:
old  < free$16:>
new  <	jne free$15>

586:
old  <	; Dereference Â£temporary208 -> currBlockPtr currBlockPtr 0>
new  <>

587:
old  <	mov rsi, [rbp + 48]>
new  < free$13:>

588:
old  <>
new  <	; Assign g_firstBlockPtr 0>

589:
old  < free$17:>
new  <	mov qword [g_firstBlockPtr], 0>

590:
old  <	; Assign g_firstBlockPtr Â£temporary208 -> currBlockPtr>
new  <>

591:
old  <	mov rax, [rsi + 4]>
new  < free$14:>

592:
old  <	mov [g_firstBlockPtr], rax>
new  <	; Goto 27>

593:
old  <>
new  <	jmp free$27>

594:
old  < free$18:>
new  <>

595:
old  <	; Goto 27>
new  < free$15:>

596:
old  <	jmp free$27>
new  <	; NotEqual 19 prevBlockPtr 0>

597:
old  <>
new  <	cmp qword [rbp + 40], 0>

598:
old  < free$19:>
new  <	jne free$19>

599:
old  <	; Dereference Â£temporary209 -> currBlockPtr currBlockPtr 0>
new  <>

600:
old  <	mov rsi, [rbp + 48]>
new  < free$16:>

601:
old  <>
new  <	; Dereference Â£temporary208 -> currBlockPtr currBlockPtr 0>

602:
old  < free$20:>
new  <	mov rsi, [rbp + 48]>

603:
old  <	; NotEqual 24 Â£temporary209 -> currBlockPtr 0>
new  <>

604:
old  <	cmp qword [rsi + 4], 0>
new  < free$17:>

605:
old  <	jne free$24>
new  <	; Assign g_firstBlockPtr Â£temporary208 -> currBlockPtr>

606:
old  <>
new  <	mov rax, [rsi + 4]>

607:
old  < free$21:>
new  <	mov [g_firstBlockPtr], rax>

608:
old  <	; Dereference Â£temporary211 -> prevBlockPtr prevBlockPtr 0>
new  <>

609:
old  <	mov rsi, [rbp + 40]>
new  < free$18:>

610:
old  <>
new  <	; Goto 27>

611:
old  < free$22:>
new  <	jmp free$27>

612:
old  <	; Assign Â£temporary211 -> prevBlockPtr 0>
new  <>

613:
old  <	mov qword [rsi + 4], 0>
new  < free$19:>

614:
old  <>
new  <	; Dereference Â£temporary209 -> currBlockPtr currBlockPtr 0>

615:
old  < free$23:>
new  <	mov rsi, [rbp + 48]>

616:
old  <	; Goto 27>
new  <>

617:
old  <	jmp free$27>
new  < free$20:>

618:
old  <>
new  <	; NotEqual 24 Â£temporary209 -> currBlockPtr 0>

619:
old  < free$24:>
new  <	cmp qword [rsi + 4], 0>

620:
old  <	; Dereference Â£temporary212 -> prevBlockPtr prevBlockPtr 0>
new  <	jne free$24>

621:
old  <	mov rsi, [rbp + 40]>
new  <>

622:
old  <>
new  < free$21:>

623:
old  < free$25:>
new  <	; Dereference Â£temporary211 -> prevBlockPtr prevBlockPtr 0>

624:
old  <	; Dereference Â£temporary213 -> currBlockPtr currBlockPtr 0>
new  <	mov rsi, [rbp + 40]>

625:
old  <	mov rdi, [rbp + 48]>
new  <>

626:
old  <>
new  < free$22:>

627:
old  < free$26:>
new  <	; Assign Â£temporary211 -> prevBlockPtr 0>

628:
old  <	; Assign Â£temporary212 -> prevBlockPtr Â£temporary213 -> currBlockPtr>
new  <	mov qword [rsi + 4], 0>

629:
old  <	mov rax, [rdi + 4]>
new  <>

630:
old  <	mov [rsi + 4], rax>
new  < free$23:>

631:
old  <>
new  <	; Goto 27>

632:
old  < free$27:>
new  <	jmp free$27>

633:
old  <	; Return>
new  <>

634:
old  <	mov rax, [rbp]>
new  < free$24:>

635:
old  <	mov rdi, [rbp + 16]>
new  <	; Dereference Â£temporary212 -> prevBlockPtr prevBlockPtr 0>

636:
old  <	mov rbp, [rbp + 8]>
new  <	mov rsi, [rbp + 40]>

637:
old  <	jmp rax>
new  <>

638:
old  <>
new  < free$25:>

639:
old  < free$28:>
new  <	; Dereference Â£temporary213 -> currBlockPtr currBlockPtr 0>

640:
old  <	; Assign prevBlockPtr currBlockPtr>
new  <	mov rdi, [rbp + 48]>

641:
old  <	mov rax, [rbp + 48]>
new  <>

642:
old  <	mov [rbp + 40], rax>
new  < free$26:>

643:
old  <>
new  <	; Assign Â£temporary212 -> prevBlockPtr Â£temporary213 -> currBlockPtr>

644:
old  < free$29:>
new  <	mov rax, [rdi + 4]>

645:
old  <	; Dereference Â£temporary214 -> currBlockPtr currBlockPtr 0>
new  <	mov [rsi + 4], rax>

646:
old  <	mov rsi, [rbp + 48]>
new  <>

647:
old  <>
new  < free$27:>

648:
old  < free$30:>
new  <	; Return>

649:
old  <	; Assign currBlockPtr Â£temporary214 -> currBlockPtr>
new  <	mov rax, [rbp]>

650:
old  <	mov rax, [rsi + 4]>
new  <	mov rdi, [rbp + 16]>

651:
old  <	mov [rbp + 48], rax>
new  <	mov rbp, [rbp + 8]>

652:
old  <>
new  <	jmp rax>

653:
old  < free$31:>
new  <>

654:
old  <	; Goto 8>
new  < free$28:>

655:
old  <	jmp free$8>
new  <	; Assign prevBlockPtr currBlockPtr>

656:
old  <>
new  <	mov rax, [rbp + 48]>

657:
old  < free$32:>
new  <	mov [rbp + 40], rax>

658:
old  <	; Return>
new  <>

659:
old  <	mov rax, [rbp]>
new  < free$29:>

660:
old  <	mov rdi, [rbp + 16]>
new  <	; Dereference Â£temporary214 -> currBlockPtr currBlockPtr 0>

661:
old  <	mov rbp, [rbp + 8]>
new  <	mov rsi, [rbp + 48]>

662:
old  <	jmp rax>
new  <>

663:
old  <>
new  < free$30:>

664:
old  < free$33:>
new  <	; Assign currBlockPtr Â£temporary214 -> currBlockPtr>

665:
old  <	; FunctionEnd free>
new  <	mov rax, [rsi + 4]>

666:
old  <>
new  <	mov [rbp + 48], rax>

667:
old  <section .data>
new  <>

668:
old  <>
new  < free$31:>

669:
old  <string_newMemorySize203E3D200#:>
new  <	; Goto 8>

670:
old  <	; Initializer String newMemorySize >= 0>
new  <	jmp free$8>

671:
old  <	db "newMemorySize >= 0", 0>
new  <>

672:
old  <>
new  < free$32:>

673:
old  <section .data>
new  <	; Return>

674:
old  <>
new  <	mov rax, [rbp]>

675:
old  <string_2820oldMemoryPtr20213D20NULL2029207C7C202820newMemorySize203E2002029#:>
new  <	mov rdi, [rbp + 16]>

676:
old  <	; Initializer String ( oldMemoryPtr != NULL ) || ( newMemorySize > 0 )>
new  <	mov rbp, [rbp + 8]>

677:
old  <	db "( oldMemoryPtr != NULL ) || ( newMemorySize > 0 )", 0>
new  <	jmp rax>

679:
old  <section .text>
new  < free$33:>

680:
old  <>
new  <	; FunctionEnd free>

681:
old  < realloc:>
new  <>

682:
old  <	; SignedGreaterThanEqual 12 newMemorySize 0>
new  <section .data>

683:
old  <	cmp dword [rbp + 32], 0>
new  <>

684:
old  <	jge realloc$12>
new  <string_newMemorySize203E3D200#:>

685:
old  <>
new  <	; Initializer String newMemorySize >= 0>

686:
old  < realloc$1:>
new  <	db "newMemorySize >= 0", 0>

687:
old  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

688:
old  <>
new  <section .data>

689:
old  < realloc$2:>
new  <>

690:
old  <	; Parameter 60 pointer stderr>
new  <string_2820oldMemoryPtr20213D20NULL2029207C7C202820newMemorySize203E2002029#:>

691:
old  <	mov rax, [stderr]>
new  <	; Initializer String ( oldMemoryPtr != NULL ) || ( newMemorySize > 0 )>

692:
old  <	mov [rbp + 60], rax>
new  <	db "( oldMemoryPtr != NULL ) || ( newMemorySize > 0 )", 0>

694:
old  < realloc$3:>
new  <section .text>

695:
old  <	; Parameter 68 pointer "Assertion failed: "%s" in file %s at line %i\n">
new  <>

696:
old  <	mov qword [rbp + 68], string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#>
new  < realloc:>

697:
old  <>
new  <	; SignedGreaterThanEqual 12 newMemorySize 0>

698:
old  < realloc$4:>
new  <	cmp dword [rbp + 32], 0>

699:
old  <	; Parameter 76 pointer "newMemorySize >= 0">
new  <	jge realloc$12>

700:
old  <	mov qword [rbp + 76], string_newMemorySize203E3D200#>
new  <>

701:
old  <>
new  < realloc$1:>

702:
old  < realloc$5:>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

703:
old  <	; Parameter 84 pointer "C:\Users\Stefan\Documents\vagrant\homestead\code\code\Malloc.c">
new  <>

704:
old  <	mov qword [rbp + 84], string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CMalloc2Ec#>
new  < realloc$2:>

705:
old  <>
new  <	; Parameter 60 pointer stderr>

706:
old  < realloc$6:>
new  <	mov rax, [stderr]>

707:
old  <	; Parameter 92 signedint 259>
new  <	mov [rbp + 60], rax>

708:
old  <	mov dword [rbp + 92], 259>
new  <>

709:
old  <>
new  < realloc$3:>

710:
old  < realloc$7:>
new  <	; Parameter 68 pointer "Assertion failed: "%s" in file %s at line %i\n">

711:
old  <	; Call 36 fprintf 20>
new  <	mov qword [rbp + 68], string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#>

712:
old  <	mov qword [rbp + 36], realloc$8>
new  <>

713:
old  <	mov [rbp + 44], rbp>
new  < realloc$4:>

714:
old  <	add rbp, 36>
new  <	; Parameter 76 pointer "newMemorySize >= 0">

715:
old  <	mov rdi, rbp>
new  <	mov qword [rbp + 76], string_newMemorySize203E3D200#>

716:
old  <	add rdi, 20>
new  <>

717:
old  <	jmp fprintf>
new  < realloc$5:>

718:
old  <>
new  <	; Parameter 84 pointer "C:\Users\Stefan\Documents\vagrant\homestead\code\code\Malloc.c">

719:
old  < realloc$8:>
new  <	mov qword [rbp + 84], string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CMalloc2Ec#>

720:
old  <	; PostCall 36>
new  <>

721:
old  <>
new  < realloc$6:>

722:
old  < realloc$9:>
new  <	; Parameter 92 signedint 259>

723:
old  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov dword [rbp + 92], 259>

725:
old  < realloc$10:>
new  < realloc$7:>

726:
old  <	; Call 36 abort 0>
new  <	; Call 36 fprintf 20>

727:
old  <	mov qword [rbp + 36], realloc$11>
new  <	mov qword [rbp + 36], realloc$8>

730:
old  <	jmp abort>
new  <	mov rdi, rbp>

731:
old  <>
new  <	add rdi, 20>

732:
old  < realloc$11:>
new  <	jmp fprintf>

733:
old  <	; PostCall 36>
new  <>

734:
old  <>
new  < realloc$8:>

735:
old  < realloc$12:>
new  <	; PostCall 36>

736:
old  <	; NotEqual 25 oldMemoryPtr 0>
new  <>

737:
old  <	cmp qword [rbp + 24], 0>
new  < realloc$9:>

738:
old  <	jne realloc$25>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

740:
old  < realloc$13:>
new  < realloc$10:>

741:
old  <	; SignedGreaterThan 25 newMemorySize 0>
new  <	; Call 36 abort 0>

742:
old  <	cmp dword [rbp + 32], 0>
new  <	mov qword [rbp + 36], realloc$11>

743:
old  <	jg realloc$25>
new  <	mov [rbp + 44], rbp>

744:
old  <>
new  <	add rbp, 36>

745:
old  < realloc$14:>
new  <	jmp abort>

746:
old  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

747:
old  <>
new  < realloc$11:>

748:
old  < realloc$15:>
new  <	; PostCall 36>

749:
old  <	; Parameter 60 pointer stderr>
new  <>

750:
old  <	mov rax, [stderr]>
new  < realloc$12:>

751:
old  <	mov [rbp + 60], rax>
new  <	; NotEqual 25 oldMemoryPtr 0>

752:
old  <>
new  <	cmp qword [rbp + 24], 0>

753:
old  < realloc$16:>
new  <	jne realloc$25>

754:
old  <	; Parameter 68 pointer "Assertion failed: "%s" in file %s at line %i\n">
new  <>

755:
old  <	mov qword [rbp + 68], string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#>
new  < realloc$13:>

756:
old  <>
new  <	; SignedGreaterThan 25 newMemorySize 0>

757:
old  < realloc$17:>
new  <	cmp dword [rbp + 32], 0>

758:
old  <	; Parameter 76 pointer "( oldMemoryPtr != NULL ) || ( newMemorySize > 0 )">
new  <	jg realloc$25>

759:
old  <	mov qword [rbp + 76], string_2820oldMemoryPtr20213D20NULL2029207C7C202820newMemorySize203E2002029#>
new  <>

760:
old  <>
new  < realloc$14:>

761:
old  < realloc$18:>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

762:
old  <	; Parameter 84 pointer "C:\Users\Stefan\Documents\vagrant\homestead\code\code\Malloc.c">
new  <>

763:
old  <	mov qword [rbp + 84], string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CMalloc2Ec#>
new  < realloc$15:>

764:
old  <>
new  <	; Parameter 60 pointer stderr>

765:
old  < realloc$19:>
new  <	mov rax, [stderr]>

766:
old  <	; Parameter 92 signedint 260>
new  <	mov [rbp + 60], rax>

767:
old  <	mov dword [rbp + 92], 260>
new  <>

768:
old  <>
new  < realloc$16:>

769:
old  < realloc$20:>
new  <	; Parameter 68 pointer "Assertion failed: "%s" in file %s at line %i\n">

770:
old  <	; Call 36 fprintf 20>
new  <	mov qword [rbp + 68], string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#>

771:
old  <	mov qword [rbp + 36], realloc$21>
new  <>

772:
old  <	mov [rbp + 44], rbp>
new  < realloc$17:>

773:
old  <	add rbp, 36>
new  <	; Parameter 76 pointer "( oldMemoryPtr != NULL ) || ( newMemorySize > 0 )">

774:
old  <	mov rdi, rbp>
new  <	mov qword [rbp + 76], string_2820oldMemoryPtr20213D20NULL2029207C7C202820newMemorySize203E2002029#>

775:
old  <	add rdi, 20>
new  <>

776:
old  <	jmp fprintf>
new  < realloc$18:>

777:
old  <>
new  <	; Parameter 84 pointer "C:\Users\Stefan\Documents\vagrant\homestead\code\code\Malloc.c">

778:
old  < realloc$21:>
new  <	mov qword [rbp + 84], string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CMalloc2Ec#>

779:
old  <	; PostCall 36>
new  <>

780:
old  <>
new  < realloc$19:>

781:
old  < realloc$22:>
new  <	; Parameter 92 signedint 260>

782:
old  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov dword [rbp + 92], 260>

784:
old  < realloc$23:>
new  < realloc$20:>

785:
old  <	; Call 36 abort 0>
new  <	; Call 36 fprintf 20>

786:
old  <	mov qword [rbp + 36], realloc$24>
new  <	mov qword [rbp + 36], realloc$21>

789:
old  <	jmp abort>
new  <	mov rdi, rbp>

790:
old  <>
new  <	add rdi, 20>

791:
old  < realloc$24:>
new  <	jmp fprintf>

792:
old  <	; PostCall 36>
new  <>

793:
old  <>
new  < realloc$21:>

794:
old  < realloc$25:>
new  <	; PostCall 36>

795:
old  <	; NotEqual 32 oldMemoryPtr 0>
new  <>

796:
old  <	cmp qword [rbp + 24], 0>
new  < realloc$22:>

797:
old  <	jne realloc$32>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

799:
old  < realloc$26:>
new  < realloc$23:>

800:
old  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Call 36 abort 0>

801:
old  <>
new  <	mov qword [rbp + 36], realloc$24>

802:
old  < realloc$27:>
new  <	mov [rbp + 44], rbp>

803:
old  <	; Parameter 60 signedint newMemorySize>
new  <	add rbp, 36>

804:
old  <	mov eax, [rbp + 32]>
new  <	jmp abort>

805:
old  <	mov [rbp + 60], eax>
new  <>

806:
old  <>
new  < realloc$24:>

807:
old  < realloc$28:>
new  <	; PostCall 36>

808:
old  <	; Call 36 malloc 0>
new  <>

809:
old  <	mov qword [rbp + 36], realloc$29>
new  < realloc$25:>

810:
old  <	mov [rbp + 44], rbp>
new  <	; NotEqual 33 oldMemoryPtr 0>

811:
old  <	add rbp, 36>
new  <	cmp qword [rbp + 24], 0>

812:
old  <	jmp malloc>
new  <	jne realloc$33>

814:
old  < realloc$29:>
new  < realloc$26:>

815:
old  <	; PostCall 36>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

817:
old  < realloc$30:>
new  < realloc$27:>

818:
old  <	; GetReturnValue Â£temporary226>
new  <	; Parameter 60 signedint newMemorySize>

819:
old  <>
new  <	mov eax, [rbp + 32]>

820:
old  < realloc$31:>
new  <	mov [rbp + 60], eax>

821:
old  <	; Return Â£temporary226>
new  <>

822:
old  <	mov rax, [rbp]>
new  < realloc$28:>

823:
old  <	mov rdi, [rbp + 16]>
new  <	; Call 36 malloc 0>

824:
old  <	mov rbp, [rbp + 8]>
new  <	mov qword [rbp + 36], realloc$29>

825:
old  <	jmp rax>
new  <	mov [rbp + 44], rbp>

826:
old  <>
new  <	add rbp, 36>

827:
old  < realloc$32:>
new  <	jmp malloc>

828:
old  <	; NotEqual 38 newMemorySize 0>
new  <>

829:
old  <	cmp dword [rbp + 32], 0>
new  < realloc$29:>

830:
old  <	jne realloc$38>
new  <	; PostCall 36>

832:
old  < realloc$33:>
new  < realloc$30:>

833:
old  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; GetReturnValue Â£temporary226>

835:
old  < realloc$34:>
new  < realloc$31:>

836:
old  <	; Parameter 60 pointer oldMemoryPtr>
new  <	; SetReturnValue>

837:
old  <	mov rax, [rbp + 24]>
new  <>

838:
old  <	mov [rbp + 60], rax>
new  < realloc$32:>

839:
old  <>
new  <	; Return Â£temporary226>

840:
old  < realloc$35:>
new  <	mov rax, [rbp]>

841:
old  <	; Call 36 free 0>
new  <	mov rdi, [rbp + 16]>

842:
old  <	mov qword [rbp + 36], realloc$36>
new  <	mov rbp, [rbp + 8]>

843:
old  <	mov [rbp + 44], rbp>
new  <	jmp rax>

844:
old  <	add rbp, 36>
new  <>

845:
old  <	jmp free>
new  < realloc$33:>

846:
old  <>
new  <	; NotEqual 40 newMemorySize 0>

847:
old  < realloc$36:>
new  <	cmp dword [rbp + 32], 0>

848:
old  <	; PostCall 36>
new  <	jne realloc$40>

850:
old  < realloc$37:>
new  < realloc$34:>

851:
old  <	; Return 0>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

852:
old  <	mov rbx, 0>
new  <>

853:
old  <	mov rax, [rbp]>
new  < realloc$35:>

854:
old  <	mov rdi, [rbp + 16]>
new  <	; Parameter 60 pointer oldMemoryPtr>

855:
old  <	mov rbp, [rbp + 8]>
new  <	mov rax, [rbp + 24]>

856:
old  <	jmp rax>
new  <	mov [rbp + 60], rax>

858:
old  < realloc$38:>
new  < realloc$36:>

859:
old  <	; IntegralToIntegral Â£temporary229 newMemorySize>
new  <	; Call 36 free 0>

860:
old  <	mov eax, [rbp + 32]>
new  <	mov qword [rbp + 36], realloc$37>

861:
old  <>
new  <	mov [rbp + 44], rbp>

862:
old  < realloc$39:>
new  <	add rbp, 36>

863:
old  <	; BinaryAdd newBlockSize Â£temporary229 12>
new  <	jmp free>

864:
old  <	add eax, 12>
new  <>

865:
old  <	mov [rbp + 36], eax>
new  < realloc$37:>

866:
old  <>
new  <	; PostCall 36>

867:
old  < realloc$40:>
new  <>

868:
old  <	; IntegralToIntegral Â£temporary231 oldMemoryPtr>
new  < realloc$38:>

869:
old  <	mov rax, [rbp + 24]>
new  <	; SetReturnValue>

871:
old  < realloc$41:>
new  < realloc$39:>

872:
old  <	; BinarySubtract Â£temporary232 Â£temporary231 12>
new  <	; Return 0>

873:
old  <	sub eax, 12>
new  <	mov rbx, 0>

874:
old  <>
new  <	mov rax, [rbp]>

875:
old  < realloc$42:>
new  <	mov rdi, [rbp + 16]>

876:
old  <	; IntegralToIntegral Â£temporary233 Â£temporary232>
new  <	mov rbp, [rbp + 8]>

877:
old  <	mov rbx, 4294967295>
new  <	jmp rax>

878:
old  <	and rax, rbx>
new  <>

879:
old  <>
new  < realloc$40:>

880:
old  < realloc$43:>
new  <	; IntegralToIntegral Â£temporary229 newMemorySize>

881:
old  <	; Assign oldBlockPtr Â£temporary233>
new  <	mov eax, [rbp + 32]>

882:
old  <	mov [rbp + 40], rax>
new  <>

883:
old  <>
new  < realloc$41:>

884:
old  < realloc$44:>
new  <	; BinaryAdd newBlockSize Â£temporary229 12>

885:
old  <	; Dereference Â£temporary234 -> oldBlockPtr oldBlockPtr 0>
new  <	add eax, 12>

886:
old  <	mov rsi, [rbp + 40]>
new  <	mov [rbp + 36], eax>

888:
old  < realloc$45:>
new  < realloc$42:>

889:
old  <	; UnsignedGreaterThan 49 newBlockSize Â£temporary234 -> oldBlockPtr>
new  <	; IntegralToIntegral Â£temporary231 oldMemoryPtr>

890:
old  <	mov eax, [rsi]>
new  <	mov rax, [rbp + 24]>

891:
old  <	cmp [rbp + 36], eax>
new  <>

892:
old  <	ja realloc$49>
new  < realloc$43:>

893:
old  <>
new  <	; BinarySubtract Â£temporary232 Â£temporary231 12>

894:
old  < realloc$46:>
new  <	sub eax, 12>

895:
old  <	; Dereference Â£temporary236 -> oldBlockPtr oldBlockPtr 0>
new  <>

896:
old  <	mov rsi, [rbp + 40]>
new  < realloc$44:>

897:
old  <>
new  <	; IntegralToIntegral Â£temporary233 Â£temporary232>

898:
old  < realloc$47:>
new  <	mov rbx, 4294967295>

899:
old  <	; Assign Â£temporary236 -> oldBlockPtr newBlockSize>
new  <	and rax, rbx>

900:
old  <	mov eax, [rbp + 36]>
new  <>

901:
old  <	mov [rsi], eax>
new  < realloc$45:>

902:
old  <>
new  <	; Assign oldBlockPtr Â£temporary233>

903:
old  < realloc$48:>
new  <	mov [rbp + 40], rax>

904:
old  <	; Return oldMemoryPtr>
new  <>

905:
old  <	mov rbx, [rbp + 24]>
new  < realloc$46:>

906:
old  <	mov rax, [rbp]>
new  <	; Dereference Â£temporary234 -> oldBlockPtr oldBlockPtr 0>

907:
old  <	mov rdi, [rbp + 16]>
new  <	mov rsi, [rbp + 40]>

908:
old  <	mov rbp, [rbp + 8]>
new  <>

909:
old  <	jmp rax>
new  < realloc$47:>

910:
old  <>
new  <	; UnsignedGreaterThan 52 newBlockSize Â£temporary234 -> oldBlockPtr>

911:
old  < realloc$49:>
new  <	mov eax, [rsi]>

912:
old  <	; StackTop Â£temporary237>
new  <	cmp [rbp + 36], eax>

913:
old  <	mov rax, $StackTop>
new  <	ja realloc$52>

915:
old  < realloc$50:>
new  < realloc$48:>

916:
old  <	; BinaryAdd Â£temporary238 Â£temporary237 1048572>
new  <	; Dereference Â£temporary236 -> oldBlockPtr oldBlockPtr 0>

917:
old  <	add rax, 1048572>
new  <	mov rsi, [rbp + 40]>

919:
old  < realloc$51:>
new  < realloc$49:>

920:
old  <	; IntegralToIntegral Â£temporary240 Â£temporary238>
new  <	; Assign Â£temporary236 -> oldBlockPtr newBlockSize>

921:
old  <>
new  <	mov eax, [rbp + 36]>

922:
old  < realloc$52:>
new  <	mov [rsi], eax>

923:
old  <	; Assign lastAddress Â£temporary240>
new  <>

924:
old  <	mov [rbp + 48], eax>
new  < realloc$50:>

925:
old  <>
new  <	; SetReturnValue>

926:
old  < realloc$53:>
new  <>

927:
old  <	; Assign currBlockPtr g_firstBlockPtr>
new  < realloc$51:>

928:
old  <	mov rax, [g_firstBlockPtr]>
new  <	; Return oldMemoryPtr>

929:
old  <	mov [rbp + 52], rax>
new  <	mov rbx, [rbp + 24]>

930:
old  <>
new  <	mov rax, [rbp]>

931:
old  < realloc$54:>
new  <	mov rdi, [rbp + 16]>

932:
old  <	; Equal 67 currBlockPtr 0>
new  <	mov rbp, [rbp + 8]>

933:
old  <	cmp qword [rbp + 52], 0>
new  <	jmp rax>

934:
old  <	je realloc$67>
new  <>

935:
old  <>
new  < realloc$52:>

936:
old  < realloc$55:>
new  <	; StackTop Â£temporary237>

937:
old  <	; NotEqual 62 currBlockPtr oldBlockPtr>
new  <	mov rax, $StackTop>

938:
old  <	mov rax, [rbp + 40]>
new  <>

939:
old  <	cmp [rbp + 52], rax>
new  < realloc$53:>

940:
old  <	jne realloc$62>
new  <	; BinaryAdd Â£temporary238 Â£temporary237 1048572>

941:
old  <>
new  <	add rax, 1048572>

942:
old  < realloc$56:>
new  <>

943:
old  <	; IntegralToIntegral Â£temporary243 currBlockPtr>
new  < realloc$54:>

944:
old  <	mov rax, [rbp + 52]>
new  <	; IntegralToIntegral Â£temporary240 Â£temporary238>

946:
old  < realloc$57:>
new  < realloc$55:>

947:
old  <	; BinarySubtract availableSize lastAddress Â£temporary243>
new  <	; Assign lastAddress Â£temporary240>

948:
old  <	mov ebx, [rbp + 48]>
new  <	mov [rbp + 48], eax>

949:
old  <	sub ebx, eax>
new  <>

950:
old  <	mov [rbp + 60], ebx>
new  < realloc$56:>

951:
old  <>
new  <	; Assign currBlockPtr g_firstBlockPtr>

952:
old  < realloc$58:>
new  <	mov rax, [g_firstBlockPtr]>

953:
old  <	; UnsignedLessThan 67 availableSize newBlockSize>
new  <	mov [rbp + 52], rax>

954:
old  <	mov eax, [rbp + 36]>
new  <>

955:
old  <	cmp [rbp + 60], eax>
new  < realloc$57:>

956:
old  <	jb realloc$67>
new  <	; Equal 71 currBlockPtr 0>

957:
old  <>
new  <	cmp qword [rbp + 52], 0>

958:
old  < realloc$59:>
new  <	je realloc$71>

959:
old  <	; Dereference Â£temporary246 -> oldBlockPtr oldBlockPtr 0>
new  <>

960:
old  <	mov rsi, [rbp + 40]>
new  < realloc$58:>

961:
old  <>
new  <	; NotEqual 66 currBlockPtr oldBlockPtr>

962:
old  < realloc$60:>
new  <	mov rax, [rbp + 40]>

963:
old  <	; Assign Â£temporary246 -> oldBlockPtr newBlockSize>
new  <	cmp [rbp + 52], rax>

964:
old  <	mov eax, [rbp + 36]>
new  <	jne realloc$66>

965:
old  <	mov [rsi], eax>
new  <>

966:
old  <>
new  < realloc$59:>

967:
old  < realloc$61:>
new  <	; IntegralToIntegral Â£temporary243 currBlockPtr>

968:
old  <	; Return oldMemoryPtr>
new  <	mov rax, [rbp + 52]>

969:
old  <	mov rbx, [rbp + 24]>
new  <>

970:
old  <	mov rax, [rbp]>
new  < realloc$60:>

971:
old  <	mov rdi, [rbp + 16]>
new  <	; BinarySubtract availableSize lastAddress Â£temporary243>

972:
old  <	mov rbp, [rbp + 8]>
new  <	mov ebx, [rbp + 48]>

973:
old  <	jmp rax>
new  <	sub ebx, eax>

974:
old  <>
new  <	mov [rbp + 60], ebx>

975:
old  < realloc$62:>
new  <>

976:
old  <	; IntegralToIntegral Â£temporary247 currBlockPtr>
new  < realloc$61:>

977:
old  <	mov rax, [rbp + 52]>
new  <	; UnsignedLessThan 71 availableSize newBlockSize>

978:
old  <>
new  <	mov eax, [rbp + 36]>

979:
old  < realloc$63:>
new  <	cmp [rbp + 60], eax>

980:
old  <	; Assign lastAddress Â£temporary247>
new  <	jb realloc$71>

981:
old  <	mov [rbp + 48], eax>
new  <>

982:
old  <>
new  < realloc$62:>

983:
old  < realloc$64:>
new  <	; Dereference Â£temporary246 -> oldBlockPtr oldBlockPtr 0>

984:
old  <	; Dereference Â£temporary248 -> currBlockPtr currBlockPtr 0>
new  <	mov rsi, [rbp + 40]>

985:
old  <	mov rsi, [rbp + 52]>
new  <>

986:
old  <>
new  < realloc$63:>

987:
old  < realloc$65:>
new  <	; Assign Â£temporary246 -> oldBlockPtr newBlockSize>

988:
old  <	; Assign currBlockPtr Â£temporary248 -> currBlockPtr>
new  <	mov eax, [rbp + 36]>

989:
old  <	mov rax, [rsi + 4]>
new  <	mov [rsi], eax>

990:
old  <	mov [rbp + 52], rax>
new  <>

991:
old  <>
new  < realloc$64:>

992:
old  < realloc$66:>
new  <	; SetReturnValue>

993:
old  <	; Goto 54>
new  <>

994:
old  <	jmp realloc$54>
new  < realloc$65:>

995:
old  <>
new  <	; Return oldMemoryPtr>

996:
old  < realloc$67:>
new  <	mov rbx, [rbp + 24]>

997:
old  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov rax, [rbp]>

998:
old  <>
new  <	mov rdi, [rbp + 16]>

999:
old  < realloc$68:>
new  <	mov rbp, [rbp + 8]>

1000:
old  <	; Parameter 72 signedint newMemorySize>
new  <	jmp rax>

1001:
old  <	mov eax, [rbp + 32]>
new  <>

1002:
old  <	mov [rbp + 72], eax>
new  < realloc$66:>

1003:
old  <>
new  <	; IntegralToIntegral Â£temporary247 currBlockPtr>

1004:
old  < realloc$69:>
new  <	mov rax, [rbp + 52]>

1005:
old  <	; Call 48 malloc 0>
new  <>

1006:
old  <	mov qword [rbp + 48], realloc$70>
new  < realloc$67:>

1007:
old  <	mov [rbp + 56], rbp>
new  <	; Assign lastAddress Â£temporary247>

1008:
old  <	add rbp, 48>
new  <	mov [rbp + 48], eax>

1009:
old  <	jmp malloc>
new  <>

1010:
old  <>
new  < realloc$68:>

1011:
old  < realloc$70:>
new  <	; Dereference Â£temporary248 -> currBlockPtr currBlockPtr 0>

1012:
old  <	; PostCall 48>
new  <	mov rsi, [rbp + 52]>

1014:
old  < realloc$71:>
new  < realloc$69:>

1015:
old  <	; GetReturnValue Â£temporary249>
new  <	; Assign currBlockPtr Â£temporary248 -> currBlockPtr>

1016:
old  <>
new  <	mov rax, [rsi + 4]>

1017:
old  < realloc$72:>
new  <	mov [rbp + 52], rax>

1018:
old  <	; Assign newMemoryPtr Â£temporary249>
new  <>

1019:
old  <	mov [rbp + 48], rbx>
new  < realloc$70:>

1020:
old  <>
new  <	; Goto 57>

1021:
old  < realloc$73:>
new  <	jmp realloc$57>

1022:
old  <	; Equal 85 newMemoryPtr 0>
new  <>

1023:
old  <	cmp qword [rbp + 48], 0>
new  < realloc$71:>

1024:
old  <	je realloc$85>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1026:
old  < realloc$74:>
new  < realloc$72:>

1027:
old  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter 72 signedint newMemorySize>

1028:
old  <>
new  <	mov eax, [rbp + 32]>

1029:
old  < realloc$75:>
new  <	mov [rbp + 72], eax>

1030:
old  <	; Parameter 80 pointer newMemoryPtr>
new  <>

1031:
old  <	mov rax, [rbp + 48]>
new  < realloc$73:>

1032:
old  <	mov [rbp + 80], rax>
new  <	; Call 48 malloc 0>

1033:
old  <>
new  <	mov qword [rbp + 48], realloc$74>

1034:
old  < realloc$76:>
new  <	mov [rbp + 56], rbp>

1035:
old  <	; Parameter 88 pointer oldMemoryPtr>
new  <	add rbp, 48>

1036:
old  <	mov rax, [rbp + 24]>
new  <	jmp malloc>

1037:
old  <	mov [rbp + 88], rax>
new  <>

1038:
old  <>
new  < realloc$74:>

1039:
old  < realloc$77:>
new  <	; PostCall 48>

1040:
old  <	; Parameter 96 signedint newMemorySize>
new  <>

1041:
old  <	mov eax, [rbp + 32]>
new  < realloc$75:>

1042:
old  <	mov [rbp + 96], eax>
new  <	; GetReturnValue Â£temporary249>

1044:
old  < realloc$78:>
new  < realloc$76:>

1045:
old  <	; Call 56 memcpy 0>
new  <	; Assign newMemoryPtr Â£temporary249>

1046:
old  <	mov qword [rbp + 56], realloc$79>
new  <	mov [rbp + 48], rbx>

1047:
old  <	mov [rbp + 64], rbp>
new  <>

1048:
old  <	add rbp, 56>
new  < realloc$77:>

1049:
old  <	jmp memcpy>
new  <	; Equal 90 newMemoryPtr 0>

1050:
old  <>
new  <	cmp qword [rbp + 48], 0>

1051:
old  < realloc$79:>
new  <	je realloc$90>

1052:
old  <	; PostCall 56>
new  <>

1053:
old  <>
new  < realloc$78:>

1054:
old  < realloc$80:>
new  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1055:
old  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1056:
old  <>
new  < realloc$79:>

1057:
old  < realloc$81:>
new  <	; Parameter 80 pointer newMemoryPtr>

1058:
old  <	; Parameter 80 pointer oldMemoryPtr>
new  <	mov rax, [rbp + 48]>

1059:
old  <	mov rax, [rbp + 24]>
new  <	mov [rbp + 80], rax>

1060:
old  <	mov [rbp + 80], rax>
new  <>

1061:
old  <>
new  < realloc$80:>

1062:
old  < realloc$82:>
new  <	; Parameter 88 pointer oldMemoryPtr>

1063:
old  <	; Call 56 free 0>
new  <	mov rax, [rbp + 24]>

1064:
old  <	mov qword [rbp + 56], realloc$83>
new  <	mov [rbp + 88], rax>

1065:
old  <	mov [rbp + 64], rbp>
new  <>

1066:
old  <	add rbp, 56>
new  < realloc$81:>

1067:
old  <	jmp free>
new  <	; Parameter 96 signedint newMemorySize>

1068:
old  <>
new  <	mov eax, [rbp + 32]>

1069:
old  < realloc$83:>
new  <	mov [rbp + 96], eax>

1070:
old  <	; PostCall 56>
new  <>

1071:
old  <>
new  < realloc$82:>

1072:
old  < realloc$84:>
new  <	; Call 56 memcpy 0>

1073:
old  <	; Return newMemoryPtr>
new  <	mov qword [rbp + 56], realloc$83>

1074:
old  <	mov rbx, [rbp + 48]>
new  <	mov [rbp + 64], rbp>

1075:
old  <	mov rax, [rbp]>
new  <	add rbp, 56>

1076:
old  <	mov rdi, [rbp + 16]>
new  <	jmp memcpy>

1077:
old  <	mov rbp, [rbp + 8]>
new  <>

1078:
old  <	jmp rax>
new  < realloc$83:>

1079:
old  <>
new  <	; PostCall 56>

1080:
old  < realloc$85:>
new  <>

1081:
old  <	; Return 0>
new  < realloc$84:>

1082:
old  <	mov rbx, 0>
new  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1083:
old  <	mov rax, [rbp]>
new  <>

1084:
old  <	mov rdi, [rbp + 16]>
new  < realloc$85:>

1085:
old  <	mov rbp, [rbp + 8]>
new  <	; Parameter 80 pointer oldMemoryPtr>

1086:
old  <	jmp rax>
new  <	mov rax, [rbp + 24]>

1087:
old  <>
new  <	mov [rbp + 80], rax>

1088:
old  < realloc$86:>
new  <>

1089:
old  <	; FunctionEnd realloc>
new  < realloc$86:>

1090:
old  <>
new  <	; Call 56 free 0>

1091:
old  <section .data>
new  <	mov qword [rbp + 56], realloc$87>

1092:
old  <>
new  <	mov [rbp + 64], rbp>

1093:
old  <string_Heap3A0A#:>
new  <	add rbp, 56>

1094:
old  <	; Initializer String Heap:\n>
new  <	jmp free>

1095:
old  <	db "Heap:", 10, 0>
new  <>

1096:
old  <>
new  < realloc$87:>

1097:
old  <section .data>
new  <	; PostCall 56>

1099:
old  <string_2020Address2025u2C20Size2025u0A#:>
new  < realloc$88:>

1100:
old  <	; Initializer String   Address %u, Size %u\n>
new  <	; SetReturnValue>

1101:
old  <	db "  Address %u, Size %u", 10, 0>
new  <>

1102:
old  <>
new  < realloc$89:>

1103:
old  <section .data>
new  <	; Return newMemoryPtr>

1104:
old  <>
new  <	mov rbx, [rbp + 48]>

1105:
old  <string_0A#:>
new  <	mov rax, [rbp]>

1106:
old  <	; Initializer String \n>
new  <	mov rdi, [rbp + 16]>

1107:
old  <	db 10, 0>
new  <	mov rbp, [rbp + 8]>

1108:
old  <>
new  <	jmp rax>

1109:
old  <section .text>
new  <>

1110:
old  <>
new  < realloc$90:>

1111:
old  < print_heap:>
new  <	; SetReturnValue>

1112:
old  <	; Assign currBlockPtr g_firstBlockPtr>
new  <>

1113:
old  <	mov rax, [g_firstBlockPtr]>
new  < realloc$91:>

1114:
old  <	mov [rbp + 24], rax>
new  <	; Return 0>

1115:
old  <>
new  <	mov rbx, 0>

1116:
old  < print_heap$1:>
new  <	mov rax, [rbp]>

1117:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov rdi, [rbp + 16]>

1118:
old  <>
new  <	mov rbp, [rbp + 8]>

1119:
old  < print_heap$2:>
new  <	jmp rax>

1120:
old  <	; Parameter 56 pointer "Heap:\n">
new  <>

1121:
old  <	mov qword [rbp + 56], string_Heap3A0A#>
new  < realloc$92:>

1122:
old  <>
new  <	; FunctionEnd realloc>

1123:
old  < print_heap$3:>
new  <>

1124:
old  <	; Call 32 printf 0>
new  <section .data>

1125:
old  <	mov qword [rbp + 32], print_heap$4>
new  <>

1126:
old  <	mov [rbp + 40], rbp>
new  <string_Heap3A0A#:>

1127:
old  <	add rbp, 32>
new  <	; Initializer String Heap:\n>

1128:
old  <	mov rdi, rbp>
new  <	db "Heap:", 10, 0>

1129:
old  <	jmp printf>
new  <>

1130:
old  <>
new  <section .data>

1131:
old  < print_heap$4:>
new  <>

1132:
old  <	; PostCall 32>
new  <string_2020Address2025u2C20Size2025u0A#:>

1133:
old  <>
new  <	; Initializer String   Address %u, Size %u\n>

1134:
old  < print_heap$5:>
new  <	db "  Address %u, Size %u", 10, 0>

1135:
old  <	; Equal 17 currBlockPtr 0>
new  <>

1136:
old  <	cmp qword [rbp + 24], 0>
new  <section .data>

1137:
old  <	je print_heap$17>
new  <>

1138:
old  <>
new  <string_0A#:>

1139:
old  < print_heap$6:>
new  <	; Initializer String \n>

1140:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	db 10, 0>

1142:
old  < print_heap$7:>
new  <section .text>

1143:
old  <	; Parameter 56 pointer "  Address %u, Size %u\n">
new  <>

1144:
old  <	mov qword [rbp + 56], string_2020Address2025u2C20Size2025u0A#>
new  < print_heap:>

1145:
old  <>
new  <	; Assign currBlockPtr g_firstBlockPtr>

1146:
old  < print_heap$8:>
new  <	mov rax, [g_firstBlockPtr]>

1147:
old  <	; IntegralToIntegral Â£temporary255 currBlockPtr>
new  <	mov [rbp + 24], rax>

1148:
old  <	mov rax, [rbp + 24]>
new  <>

1149:
old  <>
new  < print_heap$1:>

1150:
old  < print_heap$9:>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1151:
old  <	; Parameter 64 unsigned int Â£temporary255>
new  <>

1152:
old  <	mov [rbp + 64], eax>
new  < print_heap$2:>

1153:
old  <>
new  <	; Parameter 56 pointer "Heap:\n">

1154:
old  < print_heap$10:>
new  <	mov qword [rbp + 56], string_Heap3A0A#>

1155:
old  <	; Dereference Â£temporary256 -> currBlockPtr currBlockPtr 0>
new  <>

1156:
old  <	mov rsi, [rbp + 24]>
new  < print_heap$3:>

1157:
old  <>
new  <	; Call 32 printf 0>

1158:
old  < print_heap$11:>
new  <	mov qword [rbp + 32], print_heap$4>

1159:
old  <	; Parameter 68 unsigned int Â£temporary256 -> currBlockPtr>
new  <	mov [rbp + 40], rbp>

1160:
old  <	mov eax, [rsi]>
new  <	add rbp, 32>

1161:
old  <	mov [rbp + 68], eax>
new  <	mov rdi, rbp>

1162:
old  <>
new  <	jmp printf>

1163:
old  < print_heap$12:>
new  <>

1164:
old  <	; Call 32 printf 8>
new  < print_heap$4:>

1165:
old  <	mov qword [rbp + 32], print_heap$13>
new  <	; PostCall 32>

1166:
old  <	mov [rbp + 40], rbp>
new  <>

1167:
old  <	add rbp, 32>
new  < print_heap$5:>

1168:
old  <	mov rdi, rbp>
new  <	; Equal 17 currBlockPtr 0>

1169:
old  <	add rdi, 8>
new  <	cmp qword [rbp + 24], 0>

1170:
old  <	jmp printf>
new  <	je print_heap$17>

1172:
old  < print_heap$13:>
new  < print_heap$6:>

1173:
old  <	; PostCall 32>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1175:
old  < print_heap$14:>
new  < print_heap$7:>

1176:
old  <	; Dereference Â£temporary258 -> currBlockPtr currBlockPtr 0>
new  <	; Parameter 56 pointer "  Address %u, Size %u\n">

1177:
old  <	mov rsi, [rbp + 24]>
new  <	mov qword [rbp + 56], string_2020Address2025u2C20Size2025u0A#>

1179:
old  < print_heap$15:>
new  < print_heap$8:>

1180:
old  <	; Assign currBlockPtr Â£temporary258 -> currBlockPtr>
new  <	; IntegralToIntegral Â£temporary255 currBlockPtr>

1181:
old  <	mov rax, [rsi + 4]>
new  <	mov rax, [rbp + 24]>

1182:
old  <	mov [rbp + 24], rax>
new  <>

1183:
old  <>
new  < print_heap$9:>

1184:
old  < print_heap$16:>
new  <	; Parameter 64 unsigned int Â£temporary255>

1185:
old  <	; Goto 5>
new  <	mov [rbp + 64], eax>

1186:
old  <	jmp print_heap$5>
new  <>

1187:
old  <>
new  < print_heap$10:>

1188:
old  < print_heap$17:>
new  <	; Dereference Â£temporary256 -> currBlockPtr currBlockPtr 0>

1189:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov rsi, [rbp + 24]>

1191:
old  < print_heap$18:>
new  < print_heap$11:>

1192:
old  <	; Parameter 56 pointer "\n">
new  <	; Parameter 68 unsigned int Â£temporary256 -> currBlockPtr>

1193:
old  <	mov qword [rbp + 56], string_0A#>
new  <	mov eax, [rsi]>

1194:
old  <>
new  <	mov [rbp + 68], eax>

1195:
old  < print_heap$19:>
new  <>

1196:
old  <	; Call 32 printf 0>
new  < print_heap$12:>

1197:
old  <	mov qword [rbp + 32], print_heap$20>
new  <	; Call 32 printf 8>

1198:
old  <	mov [rbp + 40], rbp>
new  <	mov qword [rbp + 32], print_heap$13>

1199:
old  <	add rbp, 32>
new  <	mov [rbp + 40], rbp>

1200:
old  <	mov rdi, rbp>
new  <	add rbp, 32>

1201:
old  <	jmp printf>
new  <	mov rdi, rbp>

1202:
old  <>
new  <	add rdi, 8>

1203:
old  < print_heap$20:>
new  <	jmp printf>

1204:
old  <	; PostCall 32>
new  <>

1205:
old  <>
new  < print_heap$13:>

1206:
old  < print_heap$21:>
new  <	; PostCall 32>

1207:
old  <	; Return>
new  <>

1208:
old  <	mov rax, [rbp]>
new  < print_heap$14:>

1209:
old  <	mov rdi, [rbp + 16]>
new  <	; Dereference Â£temporary258 -> currBlockPtr currBlockPtr 0>

1210:
old  <	mov rbp, [rbp + 8]>
new  <	mov rsi, [rbp + 24]>

1211:
old  <	jmp rax>
new  <>

1212:
old  <>
new  < print_heap$15:>

1213:
old  < print_heap$22:>
new  <	; Assign currBlockPtr Â£temporary258 -> currBlockPtr>

1214:
old  <	; FunctionEnd print_heap>
new  <	mov rax, [rsi + 4]>

CType.asm
43:
old  <	; Equal 18 localeConvPtr 0>
new  <	; Equal 19 localeConvPtr 0>

45:
old  <	je islower$18>
new  <	je islower$19>

95:
old  <	; Return Â£temporary265>
new  <	; SetReturnValue>

96:
old  <	mov rax, [rbp]>
new  <>

97:
old  <	mov rdi, [rbp + 16]>
new  < islower$18:>

98:
old  <	mov rbp, [rbp + 8]>
new  <	; Return Â£temporary265>

99:
old  <	jmp rax>
new  <	mov rax, [rbp]>

100:
old  <>
new  <	mov rdi, [rbp + 16]>

101:
old  < islower$18:>
new  <	mov rbp, [rbp + 8]>

102:
old  <	; SignedLessThan 22 c 97>
new  <	jmp rax>

103:
old  <	cmp dword [rbp + 24], 97>
new  <>

104:
old  <	jl islower$22>
new  < islower$19:>

105:
old  <>
new  <	; SignedLessThan 23 c 97>

106:
old  < islower$19:>
new  <	cmp dword [rbp + 24], 97>

107:
old  <	; SignedGreaterThan 22 c 122>
new  <	jl islower$23>

108:
old  <	cmp dword [rbp + 24], 122>
new  <>

109:
old  <	jg islower$22>
new  < islower$20:>

110:
old  <>
new  <	; SignedGreaterThan 23 c 122>

111:
old  < islower$20:>
new  <	cmp dword [rbp + 24], 122>

112:
old  <	; Assign Â£temporary269 1>
new  <	jg islower$23>

113:
old  <	mov ebx, 1>
new  <>

114:
old  <>
new  < islower$21:>

115:
old  < islower$21:>
new  <	; Assign Â£temporary269 1>

116:
old  <	; Goto 23>
new  <	mov ebx, 1>

117:
old  <	jmp islower$23>
new  <>

118:
old  <>
new  < islower$22:>

119:
old  < islower$22:>
new  <	; Goto 24>

120:
old  <	; Assign Â£temporary269 0>
new  <	jmp islower$24>

121:
old  <	mov ebx, 0>
new  <>

122:
old  <>
new  < islower$23:>

123:
old  < islower$23:>
new  <	; Assign Â£temporary269 0>

124:
old  <	; Return Â£temporary269>
new  <	mov ebx, 0>

125:
old  <	mov rax, [rbp]>
new  <>

126:
old  <	mov rdi, [rbp + 16]>
new  < islower$24:>

127:
old  <	mov rbp, [rbp + 8]>
new  <	; SetReturnValue>

128:
old  <	jmp rax>
new  <>

129:
old  <>
new  < islower$25:>

130:
old  < islower$24:>
new  <	; Return Â£temporary269>

131:
old  <	; FunctionEnd islower>
new  <	mov rax, [rbp]>

132:
old  <>
new  <	mov rdi, [rbp + 16]>

133:
old  <section .text>
new  <	mov rbp, [rbp + 8]>

134:
old  <>
new  <	jmp rax>

135:
old  < isupper:>
new  <>

136:
old  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < islower$26:>

137:
old  <>
new  <	; FunctionEnd islower>

138:
old  < isupper$1:>
new  <>

139:
old  <	; Call 28 localeconv 0>
new  <section .text>

140:
old  <	mov qword [rbp + 28], isupper$2>
new  <>

141:
old  <	mov [rbp + 36], rbp>
new  < isupper:>

142:
old  <	add rbp, 28>
new  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

143:
old  <	jmp localeconv>
new  <>

144:
old  <>
new  < isupper$1:>

145:
old  < isupper$2:>
new  <	; Call 28 localeconv 0>

146:
old  <	; PostCall 28>
new  <	mov qword [rbp + 28], isupper$2>

147:
old  <>
new  <	mov [rbp + 36], rbp>

148:
old  < isupper$3:>
new  <	add rbp, 28>

149:
old  <	; GetReturnValue Â£temporary270>
new  <	jmp localeconv>

151:
old  < isupper$4:>
new  < isupper$2:>

152:
old  <	; Assign localeConvPtr Â£temporary270>
new  <	; PostCall 28>

153:
old  <	mov [rbp + 28], rbx>
new  <>

154:
old  <>
new  < isupper$3:>

155:
old  < isupper$5:>
new  <	; GetReturnValue Â£temporary270>

156:
old  <	; Equal 18 localeConvPtr 0>
new  <>

157:
old  <	cmp qword [rbp + 28], 0>
new  < isupper$4:>

158:
old  <	je isupper$18>
new  <	; Assign localeConvPtr Â£temporary270>

159:
old  <>
new  <	mov [rbp + 28], rbx>

160:
old  < isupper$6:>
new  <>

161:
old  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < isupper$5:>

162:
old  <>
new  <	; Equal 19 localeConvPtr 0>

163:
old  < isupper$7:>
new  <	cmp qword [rbp + 28], 0>

164:
old  <	; Dereference Â£temporary272 -> localeConvPtr localeConvPtr 0>
new  <	je isupper$19>

165:
old  <	mov rsi, [rbp + 28]>
new  <>

166:
old  <>
new  < isupper$6:>

167:
old  < isupper$8:>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

168:
old  <	; Parameter 60 pointer Â£temporary272 -> localeConvPtr>
new  <>

169:
old  <	mov rax, [rsi + 48]>
new  < isupper$7:>

170:
old  <	mov [rbp + 60], rax>
new  <	; Dereference Â£temporary272 -> localeConvPtr localeConvPtr 0>

171:
old  <>
new  <	mov rsi, [rbp + 28]>

172:
old  < isupper$9:>
new  <>

173:
old  <	; Parameter 68 signedint c>
new  < isupper$8:>

174:
old  <	mov eax, [rbp + 24]>
new  <	; Parameter 60 pointer Â£temporary272 -> localeConvPtr>

175:
old  <	mov [rbp + 68], eax>
new  <	mov rax, [rsi + 48]>

176:
old  <>
new  <	mov [rbp + 60], rax>

177:
old  < isupper$10:>
new  <>

178:
old  <	; Call 36 strchr 0>
new  < isupper$9:>

179:
old  <	mov qword [rbp + 36], isupper$11>
new  <	; Parameter 68 signedint c>

180:
old  <	mov [rbp + 44], rbp>
new  <	mov eax, [rbp + 24]>

181:
old  <	add rbp, 36>
new  <	mov [rbp + 68], eax>

182:
old  <	jmp strchr>
new  <>

183:
old  <>
new  < isupper$10:>

184:
old  < isupper$11:>
new  <	; Call 36 strchr 0>

185:
old  <	; PostCall 36>
new  <	mov qword [rbp + 36], isupper$11>

186:
old  <>
new  <	mov [rbp + 44], rbp>

187:
old  < isupper$12:>
new  <	add rbp, 36>

188:
old  <	; GetReturnValue Â£temporary273>
new  <	jmp strchr>

190:
old  < isupper$13:>
new  < isupper$11:>

191:
old  <	; Equal 16 Â£temporary273 0>
new  <	; PostCall 36>

192:
old  <	cmp rbx, 0>
new  <>

193:
old  <	je isupper$16>
new  < isupper$12:>

194:
old  <>
new  <	; GetReturnValue Â£temporary273>

195:
old  < isupper$14:>
new  <>

196:
old  <	; Assign Â£temporary275 1>
new  < isupper$13:>

197:
old  <	mov ebx, 1>
new  <	; Equal 16 Â£temporary273 0>

198:
old  <>
new  <	cmp rbx, 0>

199:
old  < isupper$15:>
new  <	je isupper$16>

200:
old  <	; Goto 17>
new  <>

201:
old  <	jmp isupper$17>
new  < isupper$14:>

202:
old  <>
new  <	; Assign Â£temporary275 1>

203:
old  < isupper$16:>
new  <	mov ebx, 1>

204:
old  <	; Assign Â£temporary275 0>
new  <>

205:
old  <	mov ebx, 0>
new  < isupper$15:>

206:
old  <>
new  <	; Goto 17>

207:
old  < isupper$17:>
new  <	jmp isupper$17>

208:
old  <	; Return Â£temporary275>
new  <>

209:
old  <	mov rax, [rbp]>
new  < isupper$16:>

210:
old  <	mov rdi, [rbp + 16]>
new  <	; Assign Â£temporary275 0>

211:
old  <	mov rbp, [rbp + 8]>
new  <	mov ebx, 0>

212:
old  <	jmp rax>
new  <>

213:
old  <>
new  < isupper$17:>

214:
old  < isupper$18:>
new  <	; SetReturnValue>

215:
old  <	; SignedLessThan 22 c 65>
new  <>

216:
old  <	cmp dword [rbp + 24], 65>
new  < isupper$18:>

217:
old  <	jl isupper$22>
new  <	; Return Â£temporary275>

218:
old  <>
new  <	mov rax, [rbp]>

219:
old  < isupper$19:>
new  <	mov rdi, [rbp + 16]>

220:
old  <	; SignedGreaterThan 22 c 90>
new  <	mov rbp, [rbp + 8]>

221:
old  <	cmp dword [rbp + 24], 90>
new  <	jmp rax>

222:
old  <	jg isupper$22>
new  <>

223:
old  <>
new  < isupper$19:>

224:
old  < isupper$20:>
new  <	; SignedLessThan 23 c 65>

225:
old  <	; Assign Â£temporary279 1>
new  <	cmp dword [rbp + 24], 65>

226:
old  <	mov ebx, 1>
new  <	jl isupper$23>

228:
old  < isupper$21:>
new  < isupper$20:>

229:
old  <	; Goto 23>
new  <	; SignedGreaterThan 23 c 90>

230:
old  <	jmp isupper$23>
new  <	cmp dword [rbp + 24], 90>

231:
old  <>
new  <	jg isupper$23>

232:
old  < isupper$22:>
new  <>

233:
old  <	; Assign Â£temporary279 0>
new  < isupper$21:>

234:
old  <	mov ebx, 0>
new  <	; Assign Â£temporary279 1>

235:
old  <>
new  <	mov ebx, 1>

236:
old  < isupper$23:>
new  <>

237:
old  <	; Return Â£temporary279>
new  < isupper$22:>

238:
old  <	mov rax, [rbp]>
new  <	; Goto 24>

239:
old  <	mov rdi, [rbp + 16]>
new  <	jmp isupper$24>

240:
old  <	mov rbp, [rbp + 8]>
new  <>

241:
old  <	jmp rax>
new  < isupper$23:>

242:
old  <>
new  <	; Assign Â£temporary279 0>

243:
old  < isupper$24:>
new  <	mov ebx, 0>

244:
old  <	; FunctionEnd isupper>
new  <>

245:
old  <>
new  < isupper$24:>

246:
old  <section .text>
new  <	; SetReturnValue>

248:
old  < isalpha:>
new  < isupper$25:>

249:
old  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Return Â£temporary279>

250:
old  <>
new  <	mov rax, [rbp]>

251:
old  < isalpha$1:>
new  <	mov rdi, [rbp + 16]>

252:
old  <	; Parameter 52 signedint c>
new  <	mov rbp, [rbp + 8]>

253:
old  <	mov eax, [rbp + 24]>
new  <	jmp rax>

254:
old  <	mov [rbp + 52], eax>
new  <>

255:
old  <>
new  < isupper$26:>

256:
old  < isalpha$2:>
new  <	; FunctionEnd isupper>

257:
old  <	; Call 28 islower 0>
new  <>

258:
old  <	mov qword [rbp + 28], isalpha$3>
new  <section .text>

259:
old  <	mov [rbp + 36], rbp>
new  <>

260:
old  <	add rbp, 28>
new  < isalpha:>

261:
old  <	jmp islower>
new  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

263:
old  < isalpha$3:>
new  < isalpha$1:>

264:
old  <	; PostCall 28>
new  <	; Parameter 52 signedint c>

265:
old  <>
new  <	mov eax, [rbp + 24]>

266:
old  < isalpha$4:>
new  <	mov [rbp + 52], eax>

267:
old  <	; GetReturnValue Â£temporary280>
new  <>

268:
old  <>
new  < isalpha$2:>

269:
old  < isalpha$5:>
new  <	; Call 28 islower 0>

270:
old  <	; NotEqual 12 Â£temporary280 0>
new  <	mov qword [rbp + 28], isalpha$3>

271:
old  <	cmp ebx, 0>
new  <	mov [rbp + 36], rbp>

272:
old  <	jne isalpha$12>
new  <	add rbp, 28>

273:
old  <>
new  <	jmp islower>

274:
old  < isalpha$6:>
new  <>

275:
old  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < isalpha$3:>

276:
old  <>
new  <	; PostCall 28>

277:
old  < isalpha$7:>
new  <>

278:
old  <	; Parameter 52 signedint c>
new  < isalpha$4:>

279:
old  <	mov eax, [rbp + 24]>
new  <	; GetReturnValue Â£temporary280>

280:
old  <	mov [rbp + 52], eax>
new  <>

281:
old  <>
new  < isalpha$5:>

282:
old  < isalpha$8:>
new  <	; NotEqual 12 Â£temporary280 0>

283:
old  <	; Call 28 isupper 0>
new  <	cmp ebx, 0>

284:
old  <	mov qword [rbp + 28], isalpha$9>
new  <	jne isalpha$12>

285:
old  <	mov [rbp + 36], rbp>
new  <>

286:
old  <	add rbp, 28>
new  < isalpha$6:>

287:
old  <	jmp isupper>
new  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

289:
old  < isalpha$9:>
new  < isalpha$7:>

290:
old  <	; PostCall 28>
new  <	; Parameter 52 signedint c>

291:
old  <>
new  <	mov eax, [rbp + 24]>

292:
old  < isalpha$10:>
new  <	mov [rbp + 52], eax>

293:
old  <	; GetReturnValue Â£temporary281>
new  <>

294:
old  <>
new  < isalpha$8:>

295:
old  < isalpha$11:>
new  <	; Call 28 isupper 0>

296:
old  <	; Equal 14 Â£temporary281 0>
new  <	mov qword [rbp + 28], isalpha$9>

297:
old  <	cmp ebx, 0>
new  <	mov [rbp + 36], rbp>

298:
old  <	je isalpha$14>
new  <	add rbp, 28>

299:
old  <>
new  <	jmp isupper>

300:
old  < isalpha$12:>
new  <>

301:
old  <	; Assign Â£temporary285 1>
new  < isalpha$9:>

302:
old  <	mov ebx, 1>
new  <	; PostCall 28>

304:
old  < isalpha$13:>
new  < isalpha$10:>

305:
old  <	; Goto 15>
new  <	; GetReturnValue Â£temporary281>

306:
old  <	jmp isalpha$15>
new  <>

307:
old  <>
new  < isalpha$11:>

308:
old  < isalpha$14:>
new  <	; Equal 14 Â£temporary281 0>

309:
old  <	; Assign Â£temporary285 0>
new  <	cmp ebx, 0>

310:
old  <	mov ebx, 0>
new  <	je isalpha$14>

312:
old  < isalpha$15:>
new  < isalpha$12:>

313:
old  <	; Return Â£temporary285>
new  <	; Assign Â£temporary285 1>

314:
old  <	mov rax, [rbp]>
new  <	mov ebx, 1>

315:
old  <	mov rdi, [rbp + 16]>
new  <>

316:
old  <	mov rbp, [rbp + 8]>
new  < isalpha$13:>

317:
old  <	jmp rax>
new  <	; Goto 15>

318:
old  <>
new  <	jmp isalpha$15>

319:
old  < isalpha$16:>
new  <>

320:
old  <	; FunctionEnd isalpha>
new  < isalpha$14:>

321:
old  <>
new  <	; Assign Â£temporary285 0>

322:
old  <section .text>
new  <	mov ebx, 0>

324:
old  < isdigit:>
new  < isalpha$15:>

325:
old  <	; SignedLessThan 4 c 48>
new  <	; SetReturnValue>

326:
old  <	cmp dword [rbp + 24], 48>
new  <>

327:
old  <	jl isdigit$4>
new  < isalpha$16:>

328:
old  <>
new  <	; Return Â£temporary285>

329:
old  < isdigit$1:>
new  <	mov rax, [rbp]>

330:
old  <	; SignedGreaterThan 4 c 57>
new  <	mov rdi, [rbp + 16]>

331:
old  <	cmp dword [rbp + 24], 57>
new  <	mov rbp, [rbp + 8]>

332:
old  <	jg isdigit$4>
new  <	jmp rax>

334:
old  < isdigit$2:>
new  < isalpha$17:>

335:
old  <	; Assign Â£temporary289 1>
new  <	; FunctionEnd isalpha>

336:
old  <	mov ebx, 1>
new  <>

337:
old  <>
new  <section .text>

338:
old  < isdigit$3:>
new  <>

339:
old  <	; Goto 5>
new  < isdigit:>

340:
old  <	jmp isdigit$5>
new  <	; SignedLessThan 4 c 48>

341:
old  <>
new  <	cmp dword [rbp + 24], 48>

342:
old  < isdigit$4:>
new  <	jl isdigit$4>

343:
old  <	; Assign Â£temporary289 0>
new  <>

344:
old  <	mov ebx, 0>
new  < isdigit$1:>

345:
old  <>
new  <	; SignedGreaterThan 4 c 57>

346:
old  < isdigit$5:>
new  <	cmp dword [rbp + 24], 57>

347:
old  <	; Return Â£temporary289>
new  <	jg isdigit$4>

348:
old  <	mov rax, [rbp]>
new  <>

349:
old  <	mov rdi, [rbp + 16]>
new  < isdigit$2:>

350:
old  <	mov rbp, [rbp + 8]>
new  <	; Assign Â£temporary289 1>

351:
old  <	jmp rax>
new  <	mov ebx, 1>

353:
old  < isdigit$6:>
new  < isdigit$3:>

354:
old  <	; FunctionEnd isdigit>
new  <	; Goto 5>

355:
old  <>
new  <	jmp isdigit$5>

356:
old  <section .text>
new  <>

357:
old  <>
new  < isdigit$4:>

358:
old  < isalnum:>
new  <	; Assign Â£temporary289 0>

359:
old  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov ebx, 0>

361:
old  < isalnum$1:>
new  < isdigit$5:>

362:
old  <	; Parameter 52 signedint c>
new  <	; SetReturnValue>

363:
old  <	mov eax, [rbp + 24]>
new  <>

364:
old  <	mov [rbp + 52], eax>
new  < isdigit$6:>

365:
old  <>
new  <	; Return Â£temporary289>

366:
old  < isalnum$2:>
new  <	mov rax, [rbp]>

367:
old  <	; Call 28 isalpha 0>
new  <	mov rdi, [rbp + 16]>

368:
old  <	mov qword [rbp + 28], isalnum$3>
new  <	mov rbp, [rbp + 8]>

369:
old  <	mov [rbp + 36], rbp>
new  <	jmp rax>

370:
old  <	add rbp, 28>
new  <>

371:
old  <	jmp isalpha>
new  < isdigit$7:>

372:
old  <>
new  <	; FunctionEnd isdigit>

373:
old  < isalnum$3:>
new  <>

374:
old  <	; PostCall 28>
new  <section .text>

376:
old  < isalnum$4:>
new  < isalnum:>

377:
old  <	; GetReturnValue Â£temporary290>
new  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

379:
old  < isalnum$5:>
new  < isalnum$1:>

380:
old  <	; NotEqual 12 Â£temporary290 0>
new  <	; Parameter 52 signedint c>

381:
old  <	cmp ebx, 0>
new  <	mov eax, [rbp + 24]>

382:
old  <	jne isalnum$12>
new  <	mov [rbp + 52], eax>

384:
old  < isalnum$6:>
new  < isalnum$2:>

385:
old  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Call 28 isalpha 0>

386:
old  <>
new  <	mov qword [rbp + 28], isalnum$3>

387:
old  < isalnum$7:>
new  <	mov [rbp + 36], rbp>

388:
old  <	; Parameter 52 signedint c>
new  <	add rbp, 28>

389:
old  <	mov eax, [rbp + 24]>
new  <	jmp isalpha>

390:
old  <	mov [rbp + 52], eax>
new  <>

391:
old  <>
new  < isalnum$3:>

392:
old  < isalnum$8:>
new  <	; PostCall 28>

393:
old  <	; Call 28 isdigit 0>
new  <>

394:
old  <	mov qword [rbp + 28], isalnum$9>
new  < isalnum$4:>

395:
old  <	mov [rbp + 36], rbp>
new  <	; GetReturnValue Â£temporary290>

396:
old  <	add rbp, 28>
new  <>

397:
old  <	jmp isdigit>
new  < isalnum$5:>

398:
old  <>
new  <	; NotEqual 12 Â£temporary290 0>

399:
old  < isalnum$9:>
new  <	cmp ebx, 0>

400:
old  <	; PostCall 28>
new  <	jne isalnum$12>

402:
old  < isalnum$10:>
new  < isalnum$6:>

403:
old  <	; GetReturnValue Â£temporary291>
new  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

405:
old  < isalnum$11:>
new  < isalnum$7:>

406:
old  <	; Equal 14 Â£temporary291 0>
new  <	; Parameter 52 signedint c>

407:
old  <	cmp ebx, 0>
new  <	mov eax, [rbp + 24]>

408:
old  <	je isalnum$14>
new  <	mov [rbp + 52], eax>

410:
old  < isalnum$12:>
new  < isalnum$8:>

411:
old  <	; Assign Â£temporary295 1>
new  <	; Call 28 isdigit 0>

412:
old  <	mov ebx, 1>
new  <	mov qword [rbp + 28], isalnum$9>

413:
old  <>
new  <	mov [rbp + 36], rbp>

414:
old  < isalnum$13:>
new  <	add rbp, 28>

415:
old  <	; Goto 15>
new  <	jmp isdigit>

416:
old  <	jmp isalnum$15>
new  <>

417:
old  <>
new  < isalnum$9:>

418:
old  < isalnum$14:>
new  <	; PostCall 28>

419:
old  <	; Assign Â£temporary295 0>
new  <>

420:
old  <	mov ebx, 0>
new  < isalnum$10:>

421:
old  <>
new  <	; GetReturnValue Â£temporary291>

422:
old  < isalnum$15:>
new  <>

423:
old  <	; Return Â£temporary295>
new  < isalnum$11:>

424:
old  <	mov rax, [rbp]>
new  <	; Equal 14 Â£temporary291 0>

425:
old  <	mov rdi, [rbp + 16]>
new  <	cmp ebx, 0>

426:
old  <	mov rbp, [rbp + 8]>
new  <	je isalnum$14>

427:
old  <	jmp rax>
new  <>

428:
old  <>
new  < isalnum$12:>

429:
old  < isalnum$16:>
new  <	; Assign Â£temporary295 1>

430:
old  <	; FunctionEnd isalnum>
new  <	mov ebx, 1>

432:
old  <section .text>
new  < isalnum$13:>

433:
old  <>
new  <	; Goto 15>

434:
old  < isxdigit:>
new  <	jmp isalnum$15>

435:
old  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

436:
old  <>
new  < isalnum$14:>

437:
old  < isxdigit$1:>
new  <	; Assign Â£temporary295 0>

438:
old  <	; Parameter 52 signedint c>
new  <	mov ebx, 0>

439:
old  <	mov eax, [rbp + 24]>
new  <>

440:
old  <	mov [rbp + 52], eax>
new  < isalnum$15:>

441:
old  <>
new  <	; SetReturnValue>

442:
old  < isxdigit$2:>
new  <>

443:
old  <	; Call 28 isdigit 0>
new  < isalnum$16:>

444:
old  <	mov qword [rbp + 28], isxdigit$3>
new  <	; Return Â£temporary295>

445:
old  <	mov [rbp + 36], rbp>
new  <	mov rax, [rbp]>

446:
old  <	add rbp, 28>
new  <	mov rdi, [rbp + 16]>

447:
old  <	jmp isdigit>
new  <	mov rbp, [rbp + 8]>

448:
old  <>
new  <	jmp rax>

449:
old  < isxdigit$3:>
new  <>

450:
old  <	; PostCall 28>
new  < isalnum$17:>

451:
old  <>
new  <	; FunctionEnd isalnum>

452:
old  < isxdigit$4:>
new  <>

453:
old  <	; GetReturnValue Â£temporary296>
new  <section .text>

455:
old  < isxdigit$5:>
new  < isxdigit:>

456:
old  <	; NotEqual 10 Â£temporary296 0>
new  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

457:
old  <	cmp ebx, 0>
new  <>

458:
old  <	jne isxdigit$10>
new  < isxdigit$1:>

459:
old  <>
new  <	; Parameter 52 signedint c>

460:
old  < isxdigit$6:>
new  <	mov eax, [rbp + 24]>

461:
old  <	; SignedLessThan 8 c 97>
new  <	mov [rbp + 52], eax>

462:
old  <	cmp dword [rbp + 24], 97>
new  <>

463:
old  <	jl isxdigit$8>
new  < isxdigit$2:>

464:
old  <>
new  <	; Call 28 isdigit 0>

465:
old  < isxdigit$7:>
new  <	mov qword [rbp + 28], isxdigit$3>

466:
old  <	; SignedLessThanEqual 10 c 102>
new  <	mov [rbp + 36], rbp>

467:
old  <	cmp dword [rbp + 24], 102>
new  <	add rbp, 28>

468:
old  <	jle isxdigit$10>
new  <	jmp isdigit>

470:
old  < isxdigit$8:>
new  < isxdigit$3:>

471:
old  <	; SignedLessThan 12 c 65>
new  <	; PostCall 28>

472:
old  <	cmp dword [rbp + 24], 65>
new  <>

473:
old  <	jl isxdigit$12>
new  < isxdigit$4:>

474:
old  <>
new  <	; GetReturnValue Â£temporary296>

475:
old  < isxdigit$9:>
new  <>

476:
old  <	; SignedGreaterThan 12 c 70>
new  < isxdigit$5:>

477:
old  <	cmp dword [rbp + 24], 70>
new  <	; NotEqual 10 Â£temporary296 0>

478:
old  <	jg isxdigit$12>
new  <	cmp ebx, 0>

479:
old  <>
new  <	jne isxdigit$10>

480:
old  < isxdigit$10:>
new  <>

481:
old  <	; Assign Â£temporary306 1>
new  < isxdigit$6:>

482:
old  <	mov ebx, 1>
new  <	; SignedLessThan 8 c 97>

483:
old  <>
new  <	cmp dword [rbp + 24], 97>

484:
old  < isxdigit$11:>
new  <	jl isxdigit$8>

485:
old  <	; Goto 13>
new  <>

486:
old  <	jmp isxdigit$13>
new  < isxdigit$7:>

487:
old  <>
new  <	; SignedLessThanEqual 10 c 102>

488:
old  < isxdigit$12:>
new  <	cmp dword [rbp + 24], 102>

489:
old  <	; Assign Â£temporary306 0>
new  <	jle isxdigit$10>

490:
old  <	mov ebx, 0>
new  <>

491:
old  <>
new  < isxdigit$8:>

492:
old  < isxdigit$13:>
new  <	; SignedLessThan 12 c 65>

493:
old  <	; Return Â£temporary306>
new  <	cmp dword [rbp + 24], 65>

494:
old  <	mov rax, [rbp]>
new  <	jl isxdigit$12>

495:
old  <	mov rdi, [rbp + 16]>
new  <>

496:
old  <	mov rbp, [rbp + 8]>
new  < isxdigit$9:>

497:
old  <	jmp rax>
new  <	; SignedGreaterThan 12 c 70>

498:
old  <>
new  <	cmp dword [rbp + 24], 70>

499:
old  < isxdigit$14:>
new  <	jg isxdigit$12>

500:
old  <	; FunctionEnd isxdigit>
new  <>

501:
old  <>
new  < isxdigit$10:>

502:
old  <section .text>
new  <	; Assign Â£temporary306 1>

503:
old  <>
new  <	mov ebx, 1>

504:
old  < isgraph:>
new  <>

505:
old  <	; SignedLessThan 4 c 32>
new  < isxdigit$11:>

506:
old  <	cmp dword [rbp + 24], 32>
new  <	; Goto 13>

507:
old  <	jl isgraph$4>
new  <	jmp isxdigit$13>

509:
old  < isgraph$1:>
new  < isxdigit$12:>

510:
old  <	; SignedGreaterThan 4 c 126>
new  <	; Assign Â£temporary306 0>

511:
old  <	cmp dword [rbp + 24], 126>
new  <	mov ebx, 0>

512:
old  <	jg isgraph$4>
new  <>

513:
old  <>
new  < isxdigit$13:>

514:
old  < isgraph$2:>
new  <	; SetReturnValue>

515:
old  <	; Assign Â£temporary310 1>
new  <>

516:
old  <	mov ebx, 1>
new  < isxdigit$14:>

517:
old  <>
new  <	; Return Â£temporary306>

518:
old  < isgraph$3:>
new  <	mov rax, [rbp]>

519:
old  <	; Goto 5>
new  <	mov rdi, [rbp + 16]>

520:
old  <	jmp isgraph$5>
new  <	mov rbp, [rbp + 8]>

521:
old  <>
new  <	jmp rax>

522:
old  < isgraph$4:>
new  <>

523:
old  <	; Assign Â£temporary310 0>
new  < isxdigit$15:>

524:
old  <	mov ebx, 0>
new  <	; FunctionEnd isxdigit>

526:
old  < isgraph$5:>
new  <section .text>

527:
old  <	; Return Â£temporary310>
new  <>

528:
old  <	mov rax, [rbp]>
new  < isgraph:>

529:
old  <	mov rdi, [rbp + 16]>
new  <	; SignedLessThan 4 c 32>

530:
old  <	mov rbp, [rbp + 8]>
new  <	cmp dword [rbp + 24], 32>

531:
old  <	jmp rax>
new  <	jl isgraph$4>

533:
old  < isgraph$6:>
new  < isgraph$1:>

534:
old  <	; FunctionEnd isgraph>
new  <	; SignedGreaterThan 4 c 126>

535:
old  <>
new  <	cmp dword [rbp + 24], 126>

536:
old  <section .text>
new  <	jg isgraph$4>

538:
old  < isprint:>
new  < isgraph$2:>

539:
old  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Assign Â£temporary310 1>

540:
old  <>
new  <	mov ebx, 1>

541:
old  < isprint$1:>
new  <>

542:
old  <	; Parameter 52 signedint c>
new  < isgraph$3:>

543:
old  <	mov eax, [rbp + 24]>
new  <	; Goto 5>

544:
old  <	mov [rbp + 52], eax>
new  <	jmp isgraph$5>

546:
old  < isprint$2:>
new  < isgraph$4:>

547:
old  <	; Call 28 isgraph 0>
new  <	; Assign Â£temporary310 0>

548:
old  <	mov qword [rbp + 28], isprint$3>
new  <	mov ebx, 0>

549:
old  <	mov [rbp + 36], rbp>
new  <>

550:
old  <	add rbp, 28>
new  < isgraph$5:>

551:
old  <	jmp isgraph>
new  <	; SetReturnValue>

553:
old  < isprint$3:>
new  < isgraph$6:>

554:
old  <	; PostCall 28>
new  <	; Return Â£temporary310>

555:
old  <>
new  <	mov rax, [rbp]>

556:
old  < isprint$4:>
new  <	mov rdi, [rbp + 16]>

557:
old  <	; GetReturnValue Â£temporary311>
new  <	mov rbp, [rbp + 8]>

558:
old  <>
new  <	jmp rax>

559:
old  < isprint$5:>
new  <>

560:
old  <	; Equal 9 Â£temporary311 0>
new  < isgraph$7:>

561:
old  <	cmp ebx, 0>
new  <	; FunctionEnd isgraph>

562:
old  <	je isprint$9>
new  <>

563:
old  <>
new  <section .text>

564:
old  < isprint$6:>
new  <>

565:
old  <	; Equal 9 c 32>
new  < isprint:>

566:
old  <	cmp dword [rbp + 24], 32>
new  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

567:
old  <	je isprint$9>
new  <>

568:
old  <>
new  < isprint$1:>

569:
old  < isprint$7:>
new  <	; Parameter 52 signedint c>

570:
old  <	; Assign Â£temporary315 1>
new  <	mov eax, [rbp + 24]>

571:
old  <	mov ebx, 1>
new  <	mov [rbp + 52], eax>

573:
old  < isprint$8:>
new  < isprint$2:>

574:
old  <	; Goto 10>
new  <	; Call 28 isgraph 0>

575:
old  <	jmp isprint$10>
new  <	mov qword [rbp + 28], isprint$3>

576:
old  <>
new  <	mov [rbp + 36], rbp>

577:
old  < isprint$9:>
new  <	add rbp, 28>

578:
old  <	; Assign Â£temporary315 0>
new  <	jmp isgraph>

579:
old  <	mov ebx, 0>
new  <>

580:
old  <>
new  < isprint$3:>

581:
old  < isprint$10:>
new  <	; PostCall 28>

582:
old  <	; Return Â£temporary315>
new  <>

583:
old  <	mov rax, [rbp]>
new  < isprint$4:>

584:
old  <	mov rdi, [rbp + 16]>
new  <	; GetReturnValue Â£temporary311>

585:
old  <	mov rbp, [rbp + 8]>
new  <>

586:
old  <	jmp rax>
new  < isprint$5:>

587:
old  <>
new  <	; Equal 9 Â£temporary311 0>

588:
old  < isprint$11:>
new  <	cmp ebx, 0>

589:
old  <	; FunctionEnd isprint>
new  <	je isprint$9>

591:
old  <section .text>
new  < isprint$6:>

592:
old  <>
new  <	; Equal 9 c 32>

593:
old  < ispunct:>
new  <	cmp dword [rbp + 24], 32>

594:
old  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	je isprint$9>

596:
old  < ispunct$1:>
new  < isprint$7:>

597:
old  <	; Parameter 52 signedint c>
new  <	; Assign Â£temporary315 1>

598:
old  <	mov eax, [rbp + 24]>
new  <	mov ebx, 1>

599:
old  <	mov [rbp + 52], eax>
new  <>

600:
old  <>
new  < isprint$8:>

601:
old  < ispunct$2:>
new  <	; Goto 10>

602:
old  <	; Call 28 isgraph 0>
new  <	jmp isprint$10>

603:
old  <	mov qword [rbp + 28], ispunct$3>
new  <>

604:
old  <	mov [rbp + 36], rbp>
new  < isprint$9:>

605:
old  <	add rbp, 28>
new  <	; Assign Â£temporary315 0>

606:
old  <	jmp isgraph>
new  <	mov ebx, 0>

608:
old  < ispunct$3:>
new  < isprint$10:>

609:
old  <	; PostCall 28>
new  <	; SetReturnValue>

611:
old  < ispunct$4:>
new  < isprint$11:>

612:
old  <	; GetReturnValue Â£temporary316>
new  <	; Return Â£temporary315>

613:
old  <>
new  <	mov rax, [rbp]>

614:
old  < ispunct$5:>
new  <	mov rdi, [rbp + 16]>

615:
old  <	; Equal 14 Â£temporary316 0>
new  <	mov rbp, [rbp + 8]>

616:
old  <	cmp ebx, 0>
new  <	jmp rax>

617:
old  <	je ispunct$14>
new  <>

618:
old  <>
new  < isprint$12:>

619:
old  < ispunct$6:>
new  <	; FunctionEnd isprint>

620:
old  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

621:
old  <>
new  <section .text>

622:
old  < ispunct$7:>
new  <>

623:
old  <	; Parameter 52 signedint c>
new  < ispunct:>

624:
old  <	mov eax, [rbp + 24]>
new  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

625:
old  <	mov [rbp + 52], eax>
new  <>

626:
old  <>
new  < ispunct$1:>

627:
old  < ispunct$8:>
new  <	; Parameter 52 signedint c>

628:
old  <	; Call 28 isalnum 0>
new  <	mov eax, [rbp + 24]>

629:
old  <	mov qword [rbp + 28], ispunct$9>
new  <	mov [rbp + 52], eax>

630:
old  <	mov [rbp + 36], rbp>
new  <>

631:
old  <	add rbp, 28>
new  < ispunct$2:>

632:
old  <	jmp isalnum>
new  <	; Call 28 isgraph 0>

633:
old  <>
new  <	mov qword [rbp + 28], ispunct$3>

634:
old  < ispunct$9:>
new  <	mov [rbp + 36], rbp>

635:
old  <	; PostCall 28>
new  <	add rbp, 28>

636:
old  <>
new  <	jmp isgraph>

637:
old  < ispunct$10:>
new  <>

638:
old  <	; GetReturnValue Â£temporary317>
new  < ispunct$3:>

639:
old  <>
new  <	; PostCall 28>

640:
old  < ispunct$11:>
new  <>

641:
old  <	; NotEqual 14 Â£temporary317 0>
new  < ispunct$4:>

642:
old  <	cmp ebx, 0>
new  <	; GetReturnValue Â£temporary316>

643:
old  <	jne ispunct$14>
new  <>

644:
old  <>
new  < ispunct$5:>

645:
old  < ispunct$12:>
new  <	; Equal 14 Â£temporary316 0>

646:
old  <	; Assign Â£temporary322 1>
new  <	cmp ebx, 0>

647:
old  <	mov ebx, 1>
new  <	je ispunct$14>

649:
old  < ispunct$13:>
new  < ispunct$6:>

650:
old  <	; Goto 15>
new  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

651:
old  <	jmp ispunct$15>
new  <>

652:
old  <>
new  < ispunct$7:>

653:
old  < ispunct$14:>
new  <	; Parameter 52 signedint c>

654:
old  <	; Assign Â£temporary322 0>
new  <	mov eax, [rbp + 24]>

655:
old  <	mov ebx, 0>
new  <	mov [rbp + 52], eax>

657:
old  < ispunct$15:>
new  < ispunct$8:>

658:
old  <	; Return Â£temporary322>
new  <	; Call 28 isalnum 0>

659:
old  <	mov rax, [rbp]>
new  <	mov qword [rbp + 28], ispunct$9>

660:
old  <	mov rdi, [rbp + 16]>
new  <	mov [rbp + 36], rbp>

661:
old  <	mov rbp, [rbp + 8]>
new  <	add rbp, 28>

662:
old  <	jmp rax>
new  <	jmp isalnum>

664:
old  < ispunct$16:>
new  < ispunct$9:>

665:
old  <	; FunctionEnd ispunct>
new  <	; PostCall 28>

667:
old  <section .text>
new  < ispunct$10:>

668:
old  <>
new  <	; GetReturnValue Â£temporary317>

669:
old  < iscntrl:>
new  <>

670:
old  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < ispunct$11:>

671:
old  <>
new  <	; NotEqual 14 Â£temporary317 0>

672:
old  < iscntrl$1:>
new  <	cmp ebx, 0>

673:
old  <	; Parameter 52 signedint c>
new  <	jne ispunct$14>

674:
old  <	mov eax, [rbp + 24]>
new  <>

675:
old  <	mov [rbp + 52], eax>
new  < ispunct$12:>

676:
old  <>
new  <	; Assign Â£temporary322 1>

677:
old  < iscntrl$2:>
new  <	mov ebx, 1>

678:
old  <	; Call 28 isprint 0>
new  <>

679:
old  <	mov qword [rbp + 28], iscntrl$3>
new  < ispunct$13:>

680:
old  <	mov [rbp + 36], rbp>
new  <	; Goto 15>

681:
old  <	add rbp, 28>
new  <	jmp ispunct$15>

682:
old  <	jmp isprint>
new  <>

683:
old  <>
new  < ispunct$14:>

684:
old  < iscntrl$3:>
new  <	; Assign Â£temporary322 0>

685:
old  <	; PostCall 28>
new  <	mov ebx, 0>

687:
old  < iscntrl$4:>
new  < ispunct$15:>

688:
old  <	; GetReturnValue Â£temporary323>
new  <	; SetReturnValue>

690:
old  < iscntrl$5:>
new  < ispunct$16:>

691:
old  <	; NotEqual 8 Â£temporary323 0>
new  <	; Return Â£temporary322>

692:
old  <	cmp ebx, 0>
new  <	mov rax, [rbp]>

693:
old  <	jne iscntrl$8>
new  <	mov rdi, [rbp + 16]>

694:
old  <>
new  <	mov rbp, [rbp + 8]>

695:
old  < iscntrl$6:>
new  <	jmp rax>

696:
old  <	; Assign Â£temporary326 1>
new  <>

697:
old  <	mov ebx, 1>
new  < ispunct$17:>

698:
old  <>
new  <	; FunctionEnd ispunct>

699:
old  < iscntrl$7:>
new  <>

700:
old  <	; Goto 9>
new  <section .text>

701:
old  <	jmp iscntrl$9>
new  <>

702:
old  <>
new  < iscntrl:>

703:
old  < iscntrl$8:>
new  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

704:
old  <	; Assign Â£temporary326 0>
new  <>

705:
old  <	mov ebx, 0>
new  < iscntrl$1:>

706:
old  <>
new  <	; Parameter 52 signedint c>

707:
old  < iscntrl$9:>
new  <	mov eax, [rbp + 24]>

708:
old  <	; Return Â£temporary326>
new  <	mov [rbp + 52], eax>

709:
old  <	mov rax, [rbp]>
new  <>

710:
old  <	mov rdi, [rbp + 16]>
new  < iscntrl$2:>

711:
old  <	mov rbp, [rbp + 8]>
new  <	; Call 28 isprint 0>

712:
old  <	jmp rax>
new  <	mov qword [rbp + 28], iscntrl$3>

713:
old  <>
new  <	mov [rbp + 36], rbp>

714:
old  < iscntrl$10:>
new  <	add rbp, 28>

715:
old  <	; FunctionEnd iscntrl>
new  <	jmp isprint>

717:
old  <section .text>
new  < iscntrl$3:>

718:
old  <>
new  <	; PostCall 28>

719:
old  < isspace:>
new  <>

720:
old  <	; Equal 6 c 32>
new  < iscntrl$4:>

721:
old  <	cmp dword [rbp + 24], 32>
new  <	; GetReturnValue Â£temporary323>

722:
old  <	je isspace$6>
new  <>

723:
old  <>
new  < iscntrl$5:>

724:
old  < isspace$1:>
new  <	; NotEqual 8 Â£temporary323 0>

725:
old  <	; Equal 6 c 12>
new  <	cmp ebx, 0>

726:
old  <	cmp dword [rbp + 24], 12>
new  <	jne iscntrl$8>

727:
old  <	je isspace$6>
new  <>

728:
old  <>
new  < iscntrl$6:>

729:
old  < isspace$2:>
new  <	; Assign Â£temporary326 1>

730:
old  <	; Equal 6 c 10>
new  <	mov ebx, 1>

731:
old  <	cmp dword [rbp + 24], 10>
new  <>

732:
old  <	je isspace$6>
new  < iscntrl$7:>

733:
old  <>
new  <	; Goto 9>

734:
old  < isspace$3:>
new  <	jmp iscntrl$9>

735:
old  <	; Equal 6 c 13>
new  <>

736:
old  <	cmp dword [rbp + 24], 13>
new  < iscntrl$8:>

737:
old  <	je isspace$6>
new  <	; Assign Â£temporary326 0>

738:
old  <>
new  <	mov ebx, 0>

739:
old  < isspace$4:>
new  <>

740:
old  <	; Equal 6 c 9>
new  < iscntrl$9:>

741:
old  <	cmp dword [rbp + 24], 9>
new  <	; SetReturnValue>

742:
old  <	je isspace$6>
new  <>

743:
old  <>
new  < iscntrl$10:>

744:
old  < isspace$5:>
new  <	; Return Â£temporary326>

745:
old  <	; NotEqual 8 c 11>
new  <	mov rax, [rbp]>

746:
old  <	cmp dword [rbp + 24], 11>
new  <	mov rdi, [rbp + 16]>

747:
old  <	jne isspace$8>
new  <	mov rbp, [rbp + 8]>

748:
old  <>
new  <	jmp rax>

749:
old  < isspace$6:>
new  <>

750:
old  <	; Assign Â£temporary338 1>
new  < iscntrl$11:>

751:
old  <	mov ebx, 1>
new  <	; FunctionEnd iscntrl>

753:
old  < isspace$7:>
new  <section .text>

754:
old  <	; Goto 9>
new  <>

755:
old  <	jmp isspace$9>
new  < isspace:>

756:
old  <>
new  <	; Equal 6 c 32>

757:
old  < isspace$8:>
new  <	cmp dword [rbp + 24], 32>

758:
old  <	; Assign Â£temporary338 0>
new  <	je isspace$6>

759:
old  <	mov ebx, 0>
new  <>

760:
old  <>
new  < isspace$1:>

761:
old  < isspace$9:>
new  <	; Equal 6 c 12>

762:
old  <	; Return Â£temporary338>
new  <	cmp dword [rbp + 24], 12>

763:
old  <	mov rax, [rbp]>
new  <	je isspace$6>

764:
old  <	mov rdi, [rbp + 16]>
new  <>

765:
old  <	mov rbp, [rbp + 8]>
new  < isspace$2:>

766:
old  <	jmp rax>
new  <	; Equal 6 c 10>

767:
old  <>
new  <	cmp dword [rbp + 24], 10>

768:
old  < isspace$10:>
new  <	je isspace$6>

769:
old  <	; FunctionEnd isspace>
new  <>

770:
old  <>
new  < isspace$3:>

771:
old  <section .text>
new  <	; Equal 6 c 13>

772:
old  <>
new  <	cmp dword [rbp + 24], 13>

773:
old  < tolower:>
new  <	je isspace$6>

774:
old  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

775:
old  <>
new  < isspace$4:>

776:
old  < tolower$1:>
new  <	; Equal 6 c 9>

777:
old  <	; Parameter 52 signedint c>
new  <	cmp dword [rbp + 24], 9>

778:
old  <	mov eax, [rbp + 24]>
new  <	je isspace$6>

779:
old  <	mov [rbp + 52], eax>
new  <>

780:
old  <>
new  < isspace$5:>

781:
old  < tolower$2:>
new  <	; NotEqual 8 c 11>

782:
old  <	; Call 28 isupper 0>
new  <	cmp dword [rbp + 24], 11>

783:
old  <	mov qword [rbp + 28], tolower$3>
new  <	jne isspace$8>

784:
old  <	mov [rbp + 36], rbp>
new  <>

785:
old  <	add rbp, 28>
new  < isspace$6:>

786:
old  <	jmp isupper>
new  <	; Assign Â£temporary338 1>

787:
old  <>
new  <	mov ebx, 1>

788:
old  < tolower$3:>
new  <>

789:
old  <	; PostCall 28>
new  < isspace$7:>

790:
old  <>
new  <	; Goto 9>

791:
old  < tolower$4:>
new  <	jmp isspace$9>

792:
old  <	; GetReturnValue Â£temporary339>
new  <>

793:
old  <>
new  < isspace$8:>

794:
old  < tolower$5:>
new  <	; Assign Â£temporary338 0>

795:
old  <	; Equal 32 Â£temporary339 0>
new  <	mov ebx, 0>

796:
old  <	cmp ebx, 0>
new  <>

797:
old  <	je tolower$32>
new  < isspace$9:>

798:
old  <>
new  <	; SetReturnValue>

799:
old  < tolower$6:>
new  <>

800:
old  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < isspace$10:>

801:
old  <>
new  <	; Return Â£temporary338>

802:
old  < tolower$7:>
new  <	mov rax, [rbp]>

803:
old  <	; Call 28 localeconv 0>
new  <	mov rdi, [rbp + 16]>

804:
old  <	mov qword [rbp + 28], tolower$8>
new  <	mov rbp, [rbp + 8]>

805:
old  <	mov [rbp + 36], rbp>
new  <	jmp rax>

806:
old  <	add rbp, 28>
new  <>

807:
old  <	jmp localeconv>
new  < isspace$11:>

808:
old  <>
new  <	; FunctionEnd isspace>

809:
old  < tolower$8:>
new  <>

810:
old  <	; PostCall 28>
new  <section .text>

812:
old  < tolower$9:>
new  < tolower:>

813:
old  <	; GetReturnValue Â£temporary340>
new  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

815:
old  < tolower$10:>
new  < tolower$1:>

816:
old  <	; Assign localeConvPtr Â£temporary340>
new  <	; Parameter 52 signedint c>

817:
old  <	mov [rbp + 28], rbx>
new  <	mov eax, [rbp + 24]>

818:
old  <>
new  <	mov [rbp + 52], eax>

819:
old  < tolower$11:>
new  <>

820:
old  <	; Equal 30 localeConvPtr 0>
new  < tolower$2:>

821:
old  <	cmp qword [rbp + 28], 0>
new  <	; Call 28 isupper 0>

822:
old  <	je tolower$30>
new  <	mov qword [rbp + 28], tolower$3>

823:
old  <>
new  <	mov [rbp + 36], rbp>

824:
old  < tolower$12:>
new  <	add rbp, 28>

825:
old  <	; Dereference Â£temporary342 -> localeConvPtr localeConvPtr 0>
new  <	jmp isupper>

826:
old  <	mov rsi, [rbp + 28]>
new  <>

827:
old  <>
new  < tolower$3:>

828:
old  < tolower$13:>
new  <	; PostCall 28>

829:
old  <	; Assign lowerCase Â£temporary342 -> localeConvPtr>
new  <>

830:
old  <	mov rax, [rsi + 40]>
new  < tolower$4:>

831:
old  <	mov [rbp + 36], rax>
new  <	; GetReturnValue Â£temporary339>

833:
old  < tolower$14:>
new  < tolower$5:>

834:
old  <	; Dereference Â£temporary343 -> localeConvPtr localeConvPtr 0>
new  <	; Equal 34 Â£temporary339 0>

835:
old  <	mov rsi, [rbp + 28]>
new  <	cmp ebx, 0>

836:
old  <>
new  <	je tolower$34>

837:
old  < tolower$15:>
new  <>

838:
old  <	; Assign upperCase Â£temporary343 -> localeConvPtr>
new  < tolower$6:>

839:
old  <	mov rax, [rsi + 48]>
new  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

840:
old  <	mov [rbp + 44], rax>
new  <>

841:
old  <>
new  < tolower$7:>

842:
old  < tolower$16:>
new  <	; Call 28 localeconv 0>

843:
old  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov qword [rbp + 28], tolower$8>

844:
old  <>
new  <	mov [rbp + 36], rbp>

845:
old  < tolower$17:>
new  <	add rbp, 28>

846:
old  <	; Parameter 76 pointer upperCase>
new  <	jmp localeconv>

847:
old  <	mov rax, [rbp + 44]>
new  <>

848:
old  <	mov [rbp + 76], rax>
new  < tolower$8:>

849:
old  <>
new  <	; PostCall 28>

850:
old  < tolower$18:>
new  <>

851:
old  <	; Parameter 84 signedint c>
new  < tolower$9:>

852:
old  <	mov eax, [rbp + 24]>
new  <	; GetReturnValue Â£temporary340>

853:
old  <	mov [rbp + 84], eax>
new  <>

854:
old  <>
new  < tolower$10:>

855:
old  < tolower$19:>
new  <	; Assign localeConvPtr Â£temporary340>

856:
old  <	; Call 52 strchr 0>
new  <	mov [rbp + 28], rbx>

857:
old  <	mov qword [rbp + 52], tolower$20>
new  <>

858:
old  <	mov [rbp + 60], rbp>
new  < tolower$11:>

859:
old  <	add rbp, 52>
new  <	; Equal 31 localeConvPtr 0>

860:
old  <	jmp strchr>
new  <	cmp qword [rbp + 28], 0>

861:
old  <>
new  <	je tolower$31>

862:
old  < tolower$20:>
new  <>

863:
old  <	; PostCall 52>
new  < tolower$12:>

864:
old  <>
new  <	; Dereference Â£temporary342 -> localeConvPtr localeConvPtr 0>

865:
old  < tolower$21:>
new  <	mov rsi, [rbp + 28]>

866:
old  <	; GetReturnValue Â£temporary344>
new  <>

867:
old  <>
new  < tolower$13:>

868:
old  < tolower$22:>
new  <	; Assign lowerCase Â£temporary342 -> localeConvPtr>

869:
old  <	; BinarySubtract Â£temporary346 Â£temporary344 upperCase>
new  <	mov rax, [rsi + 40]>

870:
old  <	sub rbx, [rbp + 44]>
new  <	mov [rbp + 36], rax>

872:
old  < tolower$23:>
new  < tolower$14:>

873:
old  <	; IntegralToIntegral Â£temporary347 Â£temporary346>
new  <	; Dereference Â£temporary343 -> localeConvPtr localeConvPtr 0>

874:
old  <>
new  <	mov rsi, [rbp + 28]>

875:
old  < tolower$24:>
new  <>

876:
old  <	; Assign index Â£temporary347>
new  < tolower$15:>

877:
old  <	mov [rbp + 52], ebx>
new  <	; Assign upperCase Â£temporary343 -> localeConvPtr>

878:
old  <>
new  <	mov rax, [rsi + 48]>

879:
old  < tolower$25:>
new  <	mov [rbp + 44], rax>

880:
old  <	; IntegralToIntegral Â£temporary349 index>
new  <>

881:
old  <	mov eax, [rbp + 52]>
new  < tolower$16:>

882:
old  <	mov rbx, 4294967295>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

883:
old  <	and rax, rbx>
new  <>

884:
old  <>
new  < tolower$17:>

885:
old  < tolower$26:>
new  <	; Parameter 76 pointer upperCase>

886:
old  <	; BinaryAdd Â£temporary351 lowerCase Â£temporary349>
new  <	mov rax, [rbp + 44]>

887:
old  <	mov rsi, [rbp + 36]>
new  <	mov [rbp + 76], rax>

888:
old  <	add rsi, rax>
new  <>

889:
old  <>
new  < tolower$18:>

890:
old  < tolower$27:>
new  <	; Parameter 84 signedint c>

891:
old  <	; Dereference Â£temporary348 -> Â£temporary351 Â£temporary351 0>
new  <	mov eax, [rbp + 24]>

892:
old  <>
new  <	mov [rbp + 84], eax>

893:
old  < tolower$28:>
new  <>

894:
old  <	; IntegralToIntegral Â£temporary352 Â£temporary348 -> Â£temporary351>
new  < tolower$19:>

895:
old  <	mov bl, [rsi]>
new  <	; Call 52 strchr 0>

896:
old  <	and ebx, 255>
new  <	mov qword [rbp + 52], tolower$20>

897:
old  <	cmp bl, 0>
new  <	mov [rbp + 60], rbp>

898:
old  <	jge tolower$29>
new  <	add rbp, 52>

899:
old  <	neg bl>
new  <	jmp strchr>

900:
old  <	neg ebx>
new  <>

901:
old  <>
new  < tolower$20:>

902:
old  < tolower$29:>
new  <	; PostCall 52>

903:
old  <	; Return Â£temporary352>
new  <>

904:
old  <	mov rax, [rbp]>
new  < tolower$21:>

905:
old  <	mov rdi, [rbp + 16]>
new  <	; GetReturnValue Â£temporary344>

906:
old  <	mov rbp, [rbp + 8]>
new  <>

907:
old  <	jmp rax>
new  < tolower$22:>

908:
old  <>
new  <	; BinarySubtract Â£temporary346 Â£temporary344 upperCase>

909:
old  < tolower$30:>
new  <	sub rbx, [rbp + 44]>

910:
old  <	; BinaryAdd Â£temporary353 c 32>
new  <>

911:
old  <	mov ebx, [rbp + 24]>
new  < tolower$23:>

912:
old  <	add ebx, 32>
new  <	; IntegralToIntegral Â£temporary347 Â£temporary346>

914:
old  < tolower$31:>
new  < tolower$24:>

915:
old  <	; Return Â£temporary353>
new  <	; Assign index Â£temporary347>

916:
old  <	mov rax, [rbp]>
new  <	mov [rbp + 52], ebx>

917:
old  <	mov rdi, [rbp + 16]>
new  <>

918:
old  <	mov rbp, [rbp + 8]>
new  < tolower$25:>

919:
old  <	jmp rax>
new  <	; IntegralToIntegral Â£temporary349 index>

920:
old  <>
new  <	mov eax, [rbp + 52]>

921:
old  < tolower$32:>
new  <	mov rbx, 4294967295>

922:
old  <	; Return c>
new  <	and rax, rbx>

923:
old  <	mov ebx, [rbp + 24]>
new  <>

924:
old  <	mov rax, [rbp]>
new  < tolower$26:>

925:
old  <	mov rdi, [rbp + 16]>
new  <	; BinaryAdd Â£temporary351 lowerCase Â£temporary349>

926:
old  <	mov rbp, [rbp + 8]>
new  <	mov rsi, [rbp + 36]>

927:
old  <	jmp rax>
new  <	add rsi, rax>

929:
old  < tolower$33:>
new  < tolower$27:>

930:
old  <	; FunctionEnd tolower>
new  <	; Dereference Â£temporary348 -> Â£temporary351 Â£temporary351 0>

932:
old  <section .text>
new  < tolower$28:>

933:
old  <>
new  <	; IntegralToIntegral Â£temporary352 Â£temporary348 -> Â£temporary351>

934:
old  < toupper:>
new  <	mov bl, [rsi]>

935:
old  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	and ebx, 255>

936:
old  <>
new  <	cmp bl, 0>

937:
old  < toupper$1:>
new  <	jge tolower$29>

938:
old  <	; Parameter 52 signedint c>
new  <	neg bl>

939:
old  <	mov eax, [rbp + 24]>
new  <	neg ebx>

940:
old  <	mov [rbp + 52], eax>
new  <>

941:
old  <>
new  < tolower$29:>

942:
old  < toupper$2:>
new  <	; SetReturnValue>

943:
old  <	; Call 28 islower 0>
new  <>

944:
old  <	mov qword [rbp + 28], toupper$3>
new  < tolower$30:>

945:
old  <	mov [rbp + 36], rbp>
new  <	; Return Â£temporary352>

946:
old  <	add rbp, 28>
new  <	mov rax, [rbp]>

947:
old  <	jmp islower>
new  <	mov rdi, [rbp + 16]>

948:
old  <>
new  <	mov rbp, [rbp + 8]>

949:
old  < toupper$3:>
new  <	jmp rax>

950:
old  <	; PostCall 28>
new  <>

951:
old  <>
new  < tolower$31:>

952:
old  < toupper$4:>
new  <	; BinaryAdd Â£temporary353 c 32>

953:
old  <	; GetReturnValue Â£temporary355>
new  <	mov ebx, [rbp + 24]>

954:
old  <>
new  <	add ebx, 32>

955:
old  < toupper$5:>
new  <>

956:
old  <	; Equal 32 Â£temporary355 0>
new  < tolower$32:>

957:
old  <	cmp ebx, 0>
new  <	; SetReturnValue>

958:
old  <	je toupper$32>
new  <>

959:
old  <>
new  < tolower$33:>

960:
old  < toupper$6:>
new  <	; Return Â£temporary353>

961:
old  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov rax, [rbp]>

962:
old  <>
new  <	mov rdi, [rbp + 16]>

963:
old  < toupper$7:>
new  <	mov rbp, [rbp + 8]>

964:
old  <	; Call 28 localeconv 0>
new  <	jmp rax>

965:
old  <	mov qword [rbp + 28], toupper$8>
new  <>

966:
old  <	mov [rbp + 36], rbp>
new  < tolower$34:>

967:
old  <	add rbp, 28>
new  <	; SetReturnValue>

968:
old  <	jmp localeconv>
new  <>

969:
old  <>
new  < tolower$35:>

970:
old  < toupper$8:>
new  <	; Return c>

971:
old  <	; PostCall 28>
new  <	mov ebx, [rbp + 24]>

972:
old  <>
new  <	mov rax, [rbp]>

973:
old  < toupper$9:>
new  <	mov rdi, [rbp + 16]>

974:
old  <	; GetReturnValue Â£temporary356>
new  <	mov rbp, [rbp + 8]>

975:
old  <>
new  <	jmp rax>

976:
old  < toupper$10:>
new  <>

977:
old  <	; Assign localeConvPtr Â£temporary356>
new  < tolower$36:>

978:
old  <	mov [rbp + 28], rbx>
new  <	; FunctionEnd tolower>

980:
old  < toupper$11:>
new  <section .text>

981:
old  <	; Equal 30 localeConvPtr 0>
new  <>

982:
old  <	cmp qword [rbp + 28], 0>
new  < toupper:>

983:
old  <	je toupper$30>
new  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

985:
old  < toupper$12:>
new  < toupper$1:>

986:
old  <	; Dereference Â£temporary358 -> localeConvPtr localeConvPtr 0>
new  <	; Parameter 52 signedint c>

987:
old  <	mov rsi, [rbp + 28]>
new  <	mov eax, [rbp + 24]>

988:
old  <>
new  <	mov [rbp + 52], eax>

989:
old  < toupper$13:>
new  <>

990:
old  <	; Assign lowerCase Â£temporary358 -> localeConvPtr>
new  < toupper$2:>

991:
old  <	mov rax, [rsi + 40]>
new  <	; Call 28 islower 0>

992:
old  <	mov [rbp + 36], rax>
new  <	mov qword [rbp + 28], toupper$3>

993:
old  <>
new  <	mov [rbp + 36], rbp>

994:
old  < toupper$14:>
new  <	add rbp, 28>

995:
old  <	; Dereference Â£temporary359 -> localeConvPtr localeConvPtr 0>
new  <	jmp islower>

996:
old  <	mov rsi, [rbp + 28]>
new  <>

997:
old  <>
new  < toupper$3:>

998:
old  < toupper$15:>
new  <	; PostCall 28>

999:
old  <	; Assign upperCase Â£temporary359 -> localeConvPtr>
new  <>

1000:
old  <	mov rax, [rsi + 48]>
new  < toupper$4:>

1001:
old  <	mov [rbp + 44], rax>
new  <	; GetReturnValue Â£temporary355>

1003:
old  < toupper$16:>
new  < toupper$5:>

1004:
old  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Equal 34 Â£temporary355 0>

1005:
old  <>
new  <	cmp ebx, 0>

1006:
old  < toupper$17:>
new  <	je toupper$34>

1007:
old  <	; Parameter 76 pointer lowerCase>
new  <>

1008:
old  <	mov rax, [rbp + 36]>
new  < toupper$6:>

1009:
old  <	mov [rbp + 76], rax>
new  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1011:
old  < toupper$18:>
new  < toupper$7:>

1012:
old  <	; Parameter 84 signedint c>
new  <	; Call 28 localeconv 0>

1013:
old  <	mov eax, [rbp + 24]>
new  <	mov qword [rbp + 28], toupper$8>

1014:
old  <	mov [rbp + 84], eax>
new  <	mov [rbp + 36], rbp>

1015:
old  <>
new  <	add rbp, 28>

1016:
old  < toupper$19:>
new  <	jmp localeconv>

1017:
old  <	; Call 52 strchr 0>
new  <>

1018:
old  <	mov qword [rbp + 52], toupper$20>
new  < toupper$8:>

1019:
old  <	mov [rbp + 60], rbp>
new  <	; PostCall 28>

1020:
old  <	add rbp, 52>
new  <>

1021:
old  <	jmp strchr>
new  < toupper$9:>

1022:
old  <>
new  <	; GetReturnValue Â£temporary356>

1023:
old  < toupper$20:>
new  <>

1024:
old  <	; PostCall 52>
new  < toupper$10:>

1025:
old  <>
new  <	; Assign localeConvPtr Â£temporary356>

1026:
old  < toupper$21:>
new  <	mov [rbp + 28], rbx>

1027:
old  <	; GetReturnValue Â£temporary360>
new  <>

1028:
old  <>
new  < toupper$11:>

1029:
old  < toupper$22:>
new  <	; Equal 31 localeConvPtr 0>

1030:
old  <	; BinarySubtract Â£temporary362 Â£temporary360 lowerCase>
new  <	cmp qword [rbp + 28], 0>

1031:
old  <	sub rbx, [rbp + 36]>
new  <	je toupper$31>

1033:
old  < toupper$23:>
new  < toupper$12:>

1034:
old  <	; IntegralToIntegral Â£temporary363 Â£temporary362>
new  <	; Dereference Â£temporary358 -> localeConvPtr localeConvPtr 0>

1035:
old  <>
new  <	mov rsi, [rbp + 28]>

1036:
old  < toupper$24:>
new  <>

1037:
old  <	; Assign index Â£temporary363>
new  < toupper$13:>

1038:
old  <	mov [rbp + 52], ebx>
new  <	; Assign lowerCase Â£temporary358 -> localeConvPtr>

1039:
old  <>
new  <	mov rax, [rsi + 40]>

1040:
old  < toupper$25:>
new  <	mov [rbp + 36], rax>

1041:
old  <	; IntegralToIntegral Â£temporary365 index>
new  <>

1042:
old  <	mov eax, [rbp + 52]>
new  < toupper$14:>

1043:
old  <	mov rbx, 4294967295>
new  <	; Dereference Â£temporary359 -> localeConvPtr localeConvPtr 0>

1044:
old  <	and rax, rbx>
new  <	mov rsi, [rbp + 28]>

1046:
old  < toupper$26:>
new  < toupper$15:>

1047:
old  <	; BinaryAdd Â£temporary367 upperCase Â£temporary365>
new  <	; Assign upperCase Â£temporary359 -> localeConvPtr>

1048:
old  <	mov rsi, [rbp + 44]>
new  <	mov rax, [rsi + 48]>

1049:
old  <	add rsi, rax>
new  <	mov [rbp + 44], rax>

1051:
old  < toupper$27:>
new  < toupper$16:>

1052:
old  <	; Dereference Â£temporary364 -> Â£temporary367 Â£temporary367 0>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1054:
old  < toupper$28:>
new  < toupper$17:>

1055:
old  <	; IntegralToIntegral Â£temporary368 Â£temporary364 -> Â£temporary367>
new  <	; Parameter 76 pointer lowerCase>

1056:
old  <	mov bl, [rsi]>
new  <	mov rax, [rbp + 36]>

1057:
old  <	and ebx, 255>
new  <	mov [rbp + 76], rax>

1058:
old  <	cmp bl, 0>
new  <>

1059:
old  <	jge toupper$29>
new  < toupper$18:>

1060:
old  <	neg bl>
new  <	; Parameter 84 signedint c>

1061:
old  <	neg ebx>
new  <	mov eax, [rbp + 24]>

1062:
old  <>
new  <	mov [rbp + 84], eax>

1063:
old  < toupper$29:>
new  <>

1064:
old  <	; Return Â£temporary368>
new  < toupper$19:>

1065:
old  <	mov rax, [rbp]>
new  <	; Call 52 strchr 0>

1066:
old  <	mov rdi, [rbp + 16]>
new  <	mov qword [rbp + 52], toupper$20>

1067:
old  <	mov rbp, [rbp + 8]>
new  <	mov [rbp + 60], rbp>

1068:
old  <	jmp rax>
new  <	add rbp, 52>

1069:
old  <>
new  <	jmp strchr>

1070:
old  < toupper$30:>
new  <>

1071:
old  <	; BinarySubtract Â£temporary369 c 32>
new  < toupper$20:>

1072:
old  <	mov ebx, [rbp + 24]>
new  <	; PostCall 52>

1073:
old  <	sub ebx, 32>
new  <>

1074:
old  <>
new  < toupper$21:>

1075:
old  < toupper$31:>
new  <	; GetReturnValue Â£temporary360>

1076:
old  <	; Return Â£temporary369>
new  <>

1077:
old  <	mov rax, [rbp]>
new  < toupper$22:>

1078:
old  <	mov rdi, [rbp + 16]>
new  <	; BinarySubtract Â£temporary362 Â£temporary360 lowerCase>

1079:
old  <	mov rbp, [rbp + 8]>
new  <	sub rbx, [rbp + 36]>

1080:
old  <	jmp rax>
new  <>

1081:
old  <>
new  < toupper$23:>

1082:
old  < toupper$32:>
new  <	; IntegralToIntegral Â£temporary363 Â£temporary362>

1083:
old  <	; Return c>
new  <>

1084:
old  <	mov ebx, [rbp + 24]>
new  < toupper$24:>

1085:
old  <	mov rax, [rbp]>
new  <	; Assign index Â£temporary363>

1086:
old  <	mov rdi, [rbp + 16]>
new  <	mov [rbp + 52], ebx>

1087:
old  <	mov rbp, [rbp + 8]>
new  <>

1088:
old  <	jmp rax>
new  < toupper$25:>

1089:
old  <>
new  <	; IntegralToIntegral Â£temporary365 index>

1090:
old  < toupper$33:>
new  <	mov eax, [rbp + 52]>

1091:
old  <	; FunctionEnd toupper>
new  <	mov rbx, 4294967295>

ErrNo.asm
8:
old  <@1176$NO_ERROR:>
new  <@1172$NO_ERROR:>

14:
old  <@1177$NO_FUNCTION:>
new  <@1173$NO_FUNCTION:>

20:
old  <@1178$NO_FILE:>
new  <@1174$NO_FILE:>

26:
old  <@1179$NO_PATH:>
new  <@1175$NO_PATH:>

32:
old  <@1180$NO_HANDLE:>
new  <@1176$NO_HANDLE:>

38:
old  <@1181$NO_ACCESS:>
new  <@1177$NO_ACCESS:>

44:
old  <@1182$EDOM:>
new  <@1178$EDOM:>

50:
old  <@1183$ERANGE:>
new  <@1179$ERANGE:>

56:
old  <@1184$EILSEQ:>
new  <@1180$EILSEQ:>

62:
old  <@1185$FOPEN:>
new  <@1181$FOPEN:>

68:
old  <@1186$FFLUSH:>
new  <@1182$FFLUSH:>

74:
old  <@1187$FCLOSE:>
new  <@1183$FCLOSE:>

80:
old  <@1188$NO_MODE:>
new  <@1184$NO_MODE:>

86:
old  <@1189$FWRITE:>
new  <@1185$FWRITE:>

92:
old  <@1190$FREAD:>
new  <@1186$FREAD:>

98:
old  <@1191$FSEEK:>
new  <@1187$FSEEK:>

104:
old  <@1192$FTELL:>
new  <@1188$FTELL:>

110:
old  <@1193$FSIZE:>
new  <@1189$FSIZE:>

116:
old  <@1194$FREMOVE:>
new  <@1190$FREMOVE:>

122:
old  <@1195$FRENAME:>
new  <@1191$FRENAME:>

128:
old  <@1196$FTEMPNAME:>
new  <@1192$FTEMPNAME:>

134:
old  <@1197$FTEMPFILE:>
new  <@1193$FTEMPFILE:>

Locale.asm
53:
old  <@1498$enShortDayList:>
new  <@1494$enShortDayList:>

113:
old  <@1499$enLongDayList:>
new  <@1495$enLongDayList:>

203:
old  <@1500$enShortMonthList:>
new  <@1496$enShortMonthList:>

297:
old  <@1501$enLongMonthList:>
new  <@1497$enLongMonthList:>

501:
old  <@1524$en_US_utf8:>
new  <@1520$en_US_utf8:>

506:
old  <	; Initializer Pointer @1498$enShortDayList>
new  <	; Initializer Pointer @1494$enShortDayList>

507:
old  <	dq @1498$enShortDayList>
new  <	dq @1494$enShortDayList>

508:
old  <	; Initializer Pointer @1499$enLongDayList>
new  <	; Initializer Pointer @1495$enLongDayList>

509:
old  <	dq @1499$enLongDayList>
new  <	dq @1495$enLongDayList>

510:
old  <	; Initializer Pointer @1500$enShortMonthList>
new  <	; Initializer Pointer @1496$enShortMonthList>

511:
old  <	dq @1500$enShortMonthList>
new  <	dq @1496$enShortMonthList>

512:
old  <	; Initializer Pointer @1501$enLongMonthList>
new  <	; Initializer Pointer @1497$enLongMonthList>

513:
old  <	dq @1501$enLongMonthList>
new  <	dq @1497$enLongMonthList>

541:
old  <@1527$sArray:>
new  <@1523$sArray:>

544:
old  <	; Initializer Pointer @1524$en_US_utf8>
new  <	; Initializer Pointer @1520$en_US_utf8>

545:
old  <	dq @1524$en_US_utf8>
new  <	dq @1520$en_US_utf8>

548:
old  <	; Initializer Pointer @1524$en_US_utf8>
new  <	; Initializer Pointer @1520$en_US_utf8>

549:
old  <	dq @1524$en_US_utf8>
new  <	dq @1520$en_US_utf8>

552:
old  <	; Initializer Pointer @1524$en_US_utf8>
new  <	; Initializer Pointer @1520$en_US_utf8>

553:
old  <	dq @1524$en_US_utf8>
new  <	dq @1520$en_US_utf8>

557:
old  <@1528$sSize:>
new  <@1524$sSize:>

563:
old  <@1529$g_currStructPtr:>
new  <@1525$g_currStructPtr:>

564:
old  <	; Initializer Pointer @1527$sArray>
new  <	; Initializer Pointer @1523$sArray>

565:
old  <	dq @1527$sArray>
new  <	dq @1523$sArray>

577:
old  <	cmp qword [@1529$g_currStructPtr], 0>
new  <	cmp qword [@1525$g_currStructPtr], 0>

582:
old  <	mov rsi, [@1529$g_currStructPtr]>
new  <	mov rsi, [@1525$g_currStructPtr]>

602:
old  <	mov qword [@1529$g_currStructPtr], 0>
new  <	mov qword [@1525$g_currStructPtr], 0>

615:
old  <	mov eax, [@1528$sSize]>
new  <	mov eax, [@1524$sSize]>

640:
old  <	mov rsi, @1527$sArray>
new  <	mov rsi, @1523$sArray>

682:
old  <	mov rsi, @1527$sArray>
new  <	mov rsi, @1523$sArray>

693:
old  <	mov [@1529$g_currStructPtr], rsi>
new  <	mov [@1525$g_currStructPtr], rsi>

708:
old  <	; Return oldName>
new  <	; SetReturnValue>

709:
old  <	mov rbx, [rbp + 40]>
new  <>

710:
old  <	mov rax, [rbp]>
new  < setlocale$31:>

711:
old  <	mov rdi, [rbp + 16]>
new  <	; Return oldName>

712:
old  <	mov rbp, [rbp + 8]>
new  <	mov rbx, [rbp + 40]>

713:
old  <	jmp rax>
new  <	mov rax, [rbp]>

714:
old  <>
new  <	mov rdi, [rbp + 16]>

715:
old  < setlocale$31:>
new  <	mov rbp, [rbp + 8]>

716:
old  <	; FunctionEnd setlocale>
new  <	jmp rax>

718:
old  <section .text>
new  < setlocale$32:>

719:
old  <>
new  <	; FunctionEnd setlocale>

720:
old  < localeconv:>
new  <>

721:
old  <	; Equal 4 g_currStructPtr 0>
new  <section .text>

722:
old  <	cmp qword [@1529$g_currStructPtr], 0>
new  <>

723:
old  <	je localeconv$4>
new  < localeconv:>

724:
old  <>
new  <	; Equal 4 g_currStructPtr 0>

725:
old  < localeconv$1:>
new  <	cmp qword [@1525$g_currStructPtr], 0>

726:
old  <	; Dereference Â£temporary389 -> g_currStructPtr g_currStructPtr 0>
new  <	je localeconv$4>

727:
old  <	mov rsi, [@1529$g_currStructPtr]>
new  <>

728:
old  <>
new  < localeconv$1:>

729:
old  < localeconv$2:>
new  <	; Dereference Â£temporary389 -> g_currStructPtr g_currStructPtr 0>

730:
old  <	; Assign Â£temporary390 Â£temporary389 -> g_currStructPtr>
new  <	mov rsi, [@1525$g_currStructPtr]>

731:
old  <	mov rbx, [rsi + 8]>
new  <>

732:
old  <>
new  < localeconv$2:>

733:
old  < localeconv$3:>
new  <	; Assign Â£temporary390 Â£temporary389 -> g_currStructPtr>

734:
old  <	; Goto 5>
new  <	mov rbx, [rsi + 8]>

735:
old  <	jmp localeconv$5>
new  <>

736:
old  <>
new  < localeconv$3:>

737:
old  < localeconv$4:>
new  <	; Goto 5>

738:
old  <	; Assign Â£temporary390 0>
new  <	jmp localeconv$5>

739:
old  <	mov rbx, 0>
new  <>

740:
old  <>
new  < localeconv$4:>

741:
old  < localeconv$5:>
new  <	; Assign Â£temporary390 0>

742:
old  <	; Return Â£temporary390>
new  <	mov rbx, 0>

743:
old  <	mov rax, [rbp]>
new  <>

744:
old  <	mov rdi, [rbp + 16]>
new  < localeconv$5:>

745:
old  <	mov rbp, [rbp + 8]>
new  <	; SetReturnValue>

746:
old  <	jmp rax>
new  <>

747:
old  <>
new  < localeconv$6:>

748:
old  < localeconv$6:>
new  <	; Return Â£temporary390>

749:
old  <	; FunctionEnd localeconv>
new  <	mov rax, [rbp]>

Math.asm
185:
old  <	; Return sum>
new  <	; SetReturnValue>

186:
old  <	mov rax, [rbp]>
new  <>

187:
old  <	mov rdi, [rbp + 16]>
new  < exp$37:>

188:
old  <	mov rbp, [rbp + 8]>
new  <	; Return sum>

189:
old  <	jmp rax>
new  <	mov rax, [rbp]>

190:
old  <>
new  <	mov rdi, [rbp + 16]>

191:
old  < exp$37:>
new  <	mov rbp, [rbp + 8]>

192:
old  <	; FunctionEnd exp>
new  <	jmp rax>

194:
old  <section .data>
new  < exp$38:>

195:
old  <>
new  <	; FunctionEnd exp>

196:
old  <float8$2.71#:>
new  <>

197:
old  <	; Initializer Double 2.71>
new  <section .data>

198:
old  <	dq 2.71>
new  <>

199:
old  <>
new  <float8$2.71#:>

200:
old  <section .data>
new  <	; Initializer Double 2.71>

201:
old  <>
new  <	dq 2.71>

202:
old  <float8$0.3690036900369003690036900369#:>
new  <>

203:
old  <	; Initializer Double 0.3690036900369003690036900369>
new  <section .data>

204:
old  <	dq 0.3690036900369003690036900369>
new  <>

205:
old  <>
new  <float8$0.3690036900369003690036900369#:>

206:
old  <section .data>
new  <	; Initializer Double 0.3690036900369003690036900369>

207:
old  <>
new  <	dq 0.3690036900369003690036900369>

208:
old  <float8$minus1.0#:>
new  <>

209:
old  <	; Initializer Double -1.0>
new  <section .data>

210:
old  <	dq -1.0>
new  <>

211:
old  <>
new  <float8$minus1.0#:>

212:
old  <section .text>
new  <	; Initializer Double -1.0>

213:
old  <>
new  <	dq -1.0>

214:
old  < log:>
new  <>

215:
old  <	; PushFloat x>
new  <section .text>

216:
old  <	fld qword [rbp + 24]>
new  <>

217:
old  <>
new  < log:>

218:
old  < log$1:>
new  <	; PushFloat x>

219:
old  <	; PushFloat 0>
new  <	fld qword [rbp + 24]>

220:
old  <	fldz>
new  <>

221:
old  <>
new  < log$1:>

222:
old  < log$2:>
new  <	; PushFloat 0>

223:
old  <	; SignedLessThanEqual 75 x 0>
new  <	fldz>

224:
old  <	fcompp>
new  <>

225:
old  <	fstsw ax>
new  < log$2:>

226:
old  <	sahf>
new  <	; SignedLessThanEqual 76 x 0>

227:
old  <	jae log$75>
new  <	fcompp>

228:
old  <>
new  <	fstsw ax>

229:
old  < log$3:>
new  <	sahf>

230:
old  <	; Assign n 0>
new  <	jae log$76>

231:
old  <	mov dword [rbp + 32], 0>
new  <>

232:
old  <>
new  < log$3:>

233:
old  < log$4:>
new  <	; Assign n 0>

234:
old  <	; PushFloat x>
new  <	mov dword [rbp + 32], 0>

235:
old  <	fld qword [rbp + 24]>
new  <>

236:
old  <>
new  < log$4:>

237:
old  < log$5:>
new  <	; PushFloat x>

238:
old  <	; PushFloat 1>
new  <	fld qword [rbp + 24]>

239:
old  <	fld1>
new  <>

240:
old  <>
new  < log$5:>

241:
old  < log$6:>
new  <	; PushFloat 1>

242:
old  <	; SignedLessThanEqual 16 x 1>
new  <	fld1>

243:
old  <	fcompp>
new  <>

244:
old  <	fstsw ax>
new  < log$6:>

245:
old  <	sahf>
new  <	; SignedLessThanEqual 16 x 1>

246:
old  <	jae log$16>
new  <	fcompp>

247:
old  <>
new  <	fstsw ax>

248:
old  < log$7:>
new  <	sahf>

249:
old  <	; PushFloat x>
new  <	jae log$16>

250:
old  <	fld qword [rbp + 24]>
new  <>

251:
old  <>
new  < log$7:>

252:
old  < log$8:>
new  <	; PushFloat x>

253:
old  <	; PushFloat 1>
new  <	fld qword [rbp + 24]>

254:
old  <	fld1>
new  <>

255:
old  <>
new  < log$8:>

256:
old  < log$9:>
new  <	; PushFloat 1>

257:
old  <	; SignedLessThanEqual 28 x 1>
new  <	fld1>

258:
old  <	fcompp>
new  <>

259:
old  <	fstsw ax>
new  < log$9:>

260:
old  <	sahf>
new  <	; SignedLessThanEqual 28 x 1>

261:
old  <	jae log$28>
new  <	fcompp>

262:
old  <>
new  <	fstsw ax>

263:
old  < log$10:>
new  <	sahf>

264:
old  <	; PushFloat x>
new  <	jae log$28>

265:
old  <	fld qword [rbp + 24]>
new  <>

266:
old  <>
new  < log$10:>

267:
old  < log$11:>
new  <	; PushFloat x>

268:
old  <	; PushFloat 2.71>
new  <	fld qword [rbp + 24]>

269:
old  <	fld qword [float8$2.71#]>
new  <>

270:
old  <>
new  < log$11:>

271:
old  < log$12:>
new  <	; PushFloat 2.71>

272:
old  <	; SignedDivide Â£temporary402 x 2.71>
new  <	fld qword [float8$2.71#]>

273:
old  <	fdiv>
new  <>

274:
old  <>
new  < log$12:>

275:
old  < log$13:>
new  <	; SignedDivide Â£temporary402 x 2.71>

276:
old  <	; PopFloat x>
new  <	fdiv>

277:
old  <	fstp qword [rbp + 24]>
new  <>

278:
old  <>
new  < log$13:>

279:
old  < log$14:>
new  <	; PopFloat x>

280:
old  <	; BinaryAdd n n 1>
new  <	fstp qword [rbp + 24]>

281:
old  <	inc dword [rbp + 32]>
new  <>

282:
old  <>
new  < log$14:>

283:
old  < log$15:>
new  <	; BinaryAdd n n 1>

284:
old  <	; Goto 7>
new  <	inc dword [rbp + 32]>

285:
old  <	jmp log$7>
new  <>

286:
old  <>
new  < log$15:>

287:
old  < log$16:>
new  <	; Goto 7>

288:
old  <	; PushFloat x>
new  <	jmp log$7>

289:
old  <	fld qword [rbp + 24]>
new  <>

290:
old  <>
new  < log$16:>

291:
old  < log$17:>
new  <	; PushFloat x>

292:
old  <	; PushFloat 0.3690036900369003690036900369>
new  <	fld qword [rbp + 24]>

293:
old  <	fld qword [float8$0.3690036900369003690036900369#]>
new  <>

294:
old  <>
new  < log$17:>

295:
old  < log$18:>
new  <	; PushFloat 0.3690036900369003690036900369>

296:
old  <	; SignedGreaterThanEqual 28 x 0.3690036900369003690036900369>
new  <	fld qword [float8$0.3690036900369003690036900369#]>

297:
old  <	fcompp>
new  <>

298:
old  <	fstsw ax>
new  < log$18:>

299:
old  <	sahf>
new  <	; SignedGreaterThanEqual 28 x 0.3690036900369003690036900369>

300:
old  <	jbe log$28>
new  <	fcompp>

301:
old  <>
new  <	fstsw ax>

302:
old  < log$19:>
new  <	sahf>

303:
old  <	; PushFloat x>
new  <	jbe log$28>

304:
old  <	fld qword [rbp + 24]>
new  <>

305:
old  <>
new  < log$19:>

306:
old  < log$20:>
new  <	; PushFloat x>

307:
old  <	; PushFloat 0.3690036900369003690036900369>
new  <	fld qword [rbp + 24]>

308:
old  <	fld qword [float8$0.3690036900369003690036900369#]>
new  <>

309:
old  <>
new  < log$20:>

310:
old  < log$21:>
new  <	; PushFloat 0.3690036900369003690036900369>

311:
old  <	; SignedGreaterThanEqual 28 x 0.3690036900369003690036900369>
new  <	fld qword [float8$0.3690036900369003690036900369#]>

312:
old  <	fcompp>
new  <>

313:
old  <	fstsw ax>
new  < log$21:>

314:
old  <	sahf>
new  <	; SignedGreaterThanEqual 28 x 0.3690036900369003690036900369>

315:
old  <	jbe log$28>
new  <	fcompp>

316:
old  <>
new  <	fstsw ax>

317:
old  < log$22:>
new  <	sahf>

318:
old  <	; PushFloat x>
new  <	jbe log$28>

319:
old  <	fld qword [rbp + 24]>
new  <>

320:
old  <>
new  < log$22:>

321:
old  < log$23:>
new  <	; PushFloat x>

322:
old  <	; PushFloat 2.71>
new  <	fld qword [rbp + 24]>

323:
old  <	fld qword [float8$2.71#]>
new  <>

324:
old  <>
new  < log$23:>

325:
old  < log$24:>
new  <	; PushFloat 2.71>

326:
old  <	; SignedMultiply Â£temporary406 x 2.71>
new  <	fld qword [float8$2.71#]>

327:
old  <	fmul>
new  <>

328:
old  <>
new  < log$24:>

329:
old  < log$25:>
new  <	; SignedMultiply Â£temporary406 x 2.71>

330:
old  <	; PopFloat x>
new  <	fmul>

331:
old  <	fstp qword [rbp + 24]>
new  <>

332:
old  <>
new  < log$25:>

333:
old  < log$26:>
new  <	; PopFloat x>

334:
old  <	; BinarySubtract n n 1>
new  <	fstp qword [rbp + 24]>

335:
old  <	dec dword [rbp + 32]>
new  <>

336:
old  <>
new  < log$26:>

337:
old  < log$27:>
new  <	; BinarySubtract n n 1>

338:
old  <	; Goto 19>
new  <	dec dword [rbp + 32]>

339:
old  <	jmp log$19>
new  <>

340:
old  <>
new  < log$27:>

341:
old  < log$28:>
new  <	; Goto 19>

342:
old  <	; PushFloat 1>
new  <	jmp log$19>

343:
old  <	fld1>
new  <>

344:
old  <>
new  < log$28:>

345:
old  < log$29:>
new  <	; PushFloat 1>

346:
old  <	; PopFloat index>
new  <	fld1>

347:
old  <	fstp qword [rbp + 36]>
new  <>

348:
old  <>
new  < log$29:>

349:
old  < log$30:>
new  <	; PopFloat index>

350:
old  <	; PushFloat 0>
new  <	fstp qword [rbp + 36]>

351:
old  <	fldz>
new  <>

352:
old  <>
new  < log$30:>

353:
old  < log$31:>
new  <	; PushFloat 0>

354:
old  <	; PopFloat sum>
new  <	fldz>

355:
old  <	fstp qword [rbp + 52]>
new  <>

356:
old  <>
new  < log$31:>

357:
old  < log$32:>
new  <	; PopFloat sum>

358:
old  <	; PushFloat 1>
new  <	fstp qword [rbp + 52]>

359:
old  <	fld1>
new  <>

360:
old  <>
new  < log$32:>

361:
old  < log$33:>
new  <	; PushFloat 1>

362:
old  <	; PopFloat sign>
new  <	fld1>

363:
old  <	fstp qword [rbp + 60]>
new  <>

364:
old  <>
new  < log$33:>

365:
old  < log$34:>
new  <	; PopFloat sign>

366:
old  <	; PushFloat x>
new  <	fstp qword [rbp + 60]>

367:
old  <	fld qword [rbp + 24]>
new  <>

368:
old  <>
new  < log$34:>

369:
old  < log$35:>
new  <	; PushFloat x>

370:
old  <	; PushFloat 1>
new  <	fld qword [rbp + 24]>

371:
old  <	fld1>
new  <>

372:
old  <>
new  < log$35:>

373:
old  < log$36:>
new  <	; PushFloat 1>

374:
old  <	; BinarySubtract Â£temporary408 x 1>
new  <	fld1>

375:
old  <	fsub>
new  <>

376:
old  <>
new  < log$36:>

377:
old  < log$37:>
new  <	; BinarySubtract Â£temporary408 x 1>

378:
old  <	; PopFloat x_minus_1>
new  <	fsub>

379:
old  <	fstp qword [rbp + 68]>
new  <>

380:
old  <>
new  < log$37:>

381:
old  < log$38:>
new  <	; PopFloat x_minus_1>

382:
old  <	; PushFloat x_minus_1>
new  <	fstp qword [rbp + 68]>

383:
old  <	fld qword [rbp + 68]>
new  <>

384:
old  <>
new  < log$38:>

385:
old  < log$39:>
new  <	; PushFloat x_minus_1>

386:
old  <	; PopFloat power>
new  <	fld qword [rbp + 68]>

387:
old  <	fstp qword [rbp + 76]>
new  <>

388:
old  <>
new  < log$39:>

389:
old  < log$40:>
new  <	; PopFloat power>

390:
old  <	; PushFloat sign>
new  <	fstp qword [rbp + 76]>

391:
old  <	fld qword [rbp + 60]>
new  <>

392:
old  <>
new  < log$40:>

393:
old  < log$41:>
new  <	; PushFloat sign>

394:
old  <	; PushFloat power>
new  <	fld qword [rbp + 60]>

395:
old  <	fld qword [rbp + 76]>
new  <>

396:
old  <>
new  < log$41:>

397:
old  < log$42:>
new  <	; PushFloat power>

398:
old  <	; SignedMultiply Â£temporary409 sign power>
new  <	fld qword [rbp + 76]>

399:
old  <	fmul>
new  <>

400:
old  <>
new  < log$42:>

401:
old  < log$43:>
new  <	; SignedMultiply Â£temporary409 sign power>

402:
old  <	; PushFloat index>
new  <	fmul>

403:
old  <	fld qword [rbp + 36]>
new  <>

404:
old  <>
new  < log$43:>

405:
old  < log$44:>
new  <	; PushFloat index>

406:
old  <	; PushOne>
new  <	fld qword [rbp + 36]>

407:
old  <	fld1>
new  <>

408:
old  <>
new  < log$44:>

409:
old  < log$45:>
new  <	; PushOne>

410:
old  <	; BinaryAdd index index 1>
new  <	fld1>

411:
old  <	fadd>
new  <>

412:
old  <>
new  < log$45:>

413:
old  < log$46:>
new  <	; BinaryAdd index index 1>

414:
old  <	; TopFloat index>
new  <	fadd>

415:
old  <	fst qword [rbp + 36]>
new  <>

416:
old  <>
new  < log$46:>

417:
old  < log$47:>
new  <	; TopFloat index>

418:
old  <	; PushOne>
new  <	fst qword [rbp + 36]>

419:
old  <	fld1>
new  <>

420:
old  <>
new  < log$47:>

421:
old  < log$48:>
new  <	; PushOne>

422:
old  <	; BinarySubtract index index 1>
new  <	fld1>

423:
old  <	fsub>
new  <>

424:
old  <>
new  < log$48:>

425:
old  < log$49:>
new  <	; BinarySubtract index index 1>

426:
old  <	; SignedDivide Â£temporary411 Â£temporary409 Â£temporary410>
new  <	fsub>

427:
old  <	fdiv>
new  <>

428:
old  <>
new  < log$49:>

429:
old  < log$50:>
new  <	; SignedDivide Â£temporary411 Â£temporary409 Â£temporary410>

430:
old  <	; PopFloat term>
new  <	fdiv>

431:
old  <	fstp qword [rbp + 44]>
new  <>

432:
old  <>
new  < log$50:>

433:
old  < log$51:>
new  <	; PopFloat term>

434:
old  <	; PushFloat sum>
new  <	fstp qword [rbp + 44]>

435:
old  <	fld qword [rbp + 52]>
new  <>

436:
old  <>
new  < log$51:>

437:
old  < log$52:>
new  <	; PushFloat sum>

438:
old  <	; PushFloat term>
new  <	fld qword [rbp + 52]>

439:
old  <	fld qword [rbp + 44]>
new  <>

440:
old  <>
new  < log$52:>

441:
old  < log$53:>
new  <	; PushFloat term>

442:
old  <	; BinaryAdd Â£temporary412 sum term>
new  <	fld qword [rbp + 44]>

443:
old  <	fadd>
new  <>

444:
old  <>
new  < log$53:>

445:
old  < log$54:>
new  <	; BinaryAdd Â£temporary412 sum term>

446:
old  <	; PopFloat sum>
new  <	fadd>

447:
old  <	fstp qword [rbp + 52]>
new  <>

448:
old  <>
new  < log$54:>

449:
old  < log$55:>
new  <	; PopFloat sum>

450:
old  <	; PushFloat power>
new  <	fstp qword [rbp + 52]>

451:
old  <	fld qword [rbp + 76]>
new  <>

452:
old  <>
new  < log$55:>

453:
old  < log$56:>
new  <	; PushFloat power>

454:
old  <	; PushFloat x_minus_1>
new  <	fld qword [rbp + 76]>

455:
old  <	fld qword [rbp + 68]>
new  <>

456:
old  <>
new  < log$56:>

457:
old  < log$57:>
new  <	; PushFloat x_minus_1>

458:
old  <	; SignedMultiply Â£temporary413 power x_minus_1>
new  <	fld qword [rbp + 68]>

459:
old  <	fmul>
new  <>

460:
old  <>
new  < log$57:>

461:
old  < log$58:>
new  <	; SignedMultiply Â£temporary413 power x_minus_1>

462:
old  <	; PopFloat power>
new  <	fmul>

463:
old  <	fstp qword [rbp + 76]>
new  <>

464:
old  <>
new  < log$58:>

465:
old  < log$59:>
new  <	; PopFloat power>

466:
old  <	; PushFloat sign>
new  <	fstp qword [rbp + 76]>

467:
old  <	fld qword [rbp + 60]>
new  <>

468:
old  <>
new  < log$59:>

469:
old  < log$60:>
new  <	; PushFloat sign>

470:
old  <	; PushFloat -1.0>
new  <	fld qword [rbp + 60]>

471:
old  <	fld qword [float8$minus1.0#]>
new  <>

472:
old  <>
new  < log$60:>

473:
old  < log$61:>
new  <	; PushFloat -1.0>

474:
old  <	; SignedMultiply Â£temporary414 sign -1.0>
new  <	fld qword [float8$minus1.0#]>

475:
old  <	fmul>
new  <>

476:
old  <>
new  < log$61:>

477:
old  < log$62:>
new  <	; SignedMultiply Â£temporary414 sign -1.0>

478:
old  <	; PopFloat sign>
new  <	fmul>

479:
old  <	fstp qword [rbp + 60]>
new  <>

480:
old  <>
new  < log$62:>

481:
old  < log$63:>
new  <	; PopFloat sign>

482:
old  <	; PreCall 84 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	fstp qword [rbp + 60]>

484:
old  < log$64:>
new  < log$63:>

485:
old  <	; PushFloat term>
new  <	; PreCall 84 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

486:
old  <	fld qword [rbp + 44]>
new  <>

487:
old  <>
new  < log$64:>

488:
old  < log$65:>
new  <	; PushFloat term>

489:
old  <	; Parameter 108 double term>
new  <	fld qword [rbp + 44]>

490:
old  <	fstp qword [rbp + 108]>
new  <>

491:
old  <>
new  < log$65:>

492:
old  < log$66:>
new  <	; Parameter 108 double term>

493:
old  <	; Call 84 fabs 0>
new  <	fstp qword [rbp + 108]>

494:
old  <	mov qword [rbp + 84], log$67>
new  <>

495:
old  <	mov [rbp + 92], rbp>
new  < log$66:>

496:
old  <	add rbp, 84>
new  <	; Call 84 fabs 0>

497:
old  <	jmp fabs>
new  <	mov qword [rbp + 84], log$67>

498:
old  <>
new  <	mov [rbp + 92], rbp>

499:
old  < log$67:>
new  <	add rbp, 84>

500:
old  <	; PostCall 84>
new  <	jmp fabs>

502:
old  < log$68:>
new  < log$67:>

503:
old  <	; GetReturnValue Â£temporary415>
new  <	; PostCall 84>

505:
old  < log$69:>
new  < log$68:>

506:
old  <	; PushFloat 0.000000001>
new  <	; GetReturnValue Â£temporary415>

507:
old  <	fld qword [float8$0.000000001#]>
new  <>

508:
old  <>
new  < log$69:>

509:
old  < log$70:>
new  <	; PushFloat 0.000000001>

510:
old  <	; SignedGreaterThanEqual 40 Â£temporary415 0.000000001>
new  <	fld qword [float8$0.000000001#]>

511:
old  <	fcompp>
new  <>

512:
old  <	fstsw ax>
new  < log$70:>

513:
old  <	sahf>
new  <	; SignedGreaterThanEqual 40 Â£temporary415 0.000000001>

514:
old  <	jbe log$40>
new  <	fcompp>

515:
old  <>
new  <	fstsw ax>

516:
old  < log$71:>
new  <	sahf>

517:
old  <	; PushFloat sum>
new  <	jbe log$40>

518:
old  <	fld qword [rbp + 52]>
new  <>

519:
old  <>
new  < log$71:>

520:
old  < log$72:>
new  <	; PushFloat sum>

521:
old  <	; IntegralToFloating Â£temporary417 n>
new  <	fld qword [rbp + 52]>

522:
old  <	fild dword [rbp + 32]>
new  <>

523:
old  <>
new  < log$72:>

524:
old  < log$73:>
new  <	; IntegralToFloating Â£temporary417 n>

525:
old  <	; BinaryAdd Â£temporary418 sum Â£temporary417>
new  <	fild dword [rbp + 32]>

526:
old  <	fadd>
new  <>

527:
old  <>
new  < log$73:>

528:
old  < log$74:>
new  <	; BinaryAdd Â£temporary418 sum Â£temporary417>

529:
old  <	; Return Â£temporary418>
new  <	fadd>

530:
old  <	mov rax, [rbp]>
new  <>

531:
old  <	mov rdi, [rbp + 16]>
new  < log$74:>

532:
old  <	mov rbp, [rbp + 8]>
new  <	; SetReturnValue>

533:
old  <	jmp rax>
new  <>

534:
old  <>
new  < log$75:>

535:
old  < log$75:>
new  <	; Return Â£temporary418>

536:
old  <	; Assign errno 6>
new  <	mov rax, [rbp]>

537:
old  <	mov dword [errno], 6>
new  <	mov rdi, [rbp + 16]>

538:
old  <>
new  <	mov rbp, [rbp + 8]>

539:
old  < log$76:>
new  <	jmp rax>

540:
old  <	; PushFloat 0>
new  <>

541:
old  <	fldz>
new  < log$76:>

542:
old  <>
new  <	; Assign errno 6>

543:
old  < log$77:>
new  <	mov dword [errno], 6>

544:
old  <	; Return 0>
new  <>

545:
old  <	mov rax, [rbp]>
new  < log$77:>

546:
old  <	mov rdi, [rbp + 16]>
new  <	; PushFloat 0>

547:
old  <	mov rbp, [rbp + 8]>
new  <	fldz>

548:
old  <	jmp rax>
new  <>

549:
old  <>
new  < log$78:>

550:
old  < log$78:>
new  <	; SetReturnValue>

551:
old  <	; FunctionEnd log>
new  <>

552:
old  <>
new  < log$79:>

553:
old  <section .data>
new  <	; Return 0>

554:
old  <>
new  <	mov rax, [rbp]>

555:
old  <float8$2.30#:>
new  <	mov rdi, [rbp + 16]>

556:
old  <	; Initializer Double 2.30>
new  <	mov rbp, [rbp + 8]>

557:
old  <	dq 2.30>
new  <	jmp rax>

559:
old  <section .text>
new  < log$80:>

560:
old  <>
new  <	; FunctionEnd log>

561:
old  < log10:>
new  <>

562:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <section .data>

564:
old  < log10$1:>
new  <float8$2.30#:>

565:
old  <	; PushFloat x>
new  <	; Initializer Double 2.30>

566:
old  <	fld qword [rbp + 24]>
new  <	dq 2.30>

568:
old  < log10$2:>
new  <section .text>

569:
old  <	; Parameter 56 double x>
new  <>

570:
old  <	fstp qword [rbp + 56]>
new  < log10:>

571:
old  <>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

572:
old  < log10$3:>
new  <>

573:
old  <	; Call 32 log 0>
new  < log10$1:>

574:
old  <	mov qword [rbp + 32], log10$4>
new  <	; PushFloat x>

575:
old  <	mov [rbp + 40], rbp>
new  <	fld qword [rbp + 24]>

576:
old  <	add rbp, 32>
new  <>

577:
old  <	jmp log>
new  < log10$2:>

578:
old  <>
new  <	; Parameter 56 double x>

579:
old  < log10$4:>
new  <	fstp qword [rbp + 56]>

580:
old  <	; PostCall 32>
new  <>

581:
old  <>
new  < log10$3:>

582:
old  < log10$5:>
new  <	; Call 32 log 0>

583:
old  <	; GetReturnValue Â£temporary420>
new  <	mov qword [rbp + 32], log10$4>

584:
old  <>
new  <	mov [rbp + 40], rbp>

585:
old  < log10$6:>
new  <	add rbp, 32>

586:
old  <	; PushFloat 2.30>
new  <	jmp log>

587:
old  <	fld qword [float8$2.30#]>
new  <>

588:
old  <>
new  < log10$4:>

589:
old  < log10$7:>
new  <	; PostCall 32>

590:
old  <	; SignedDivide Â£temporary421 Â£temporary420 2.30>
new  <>

591:
old  <	fdiv>
new  < log10$5:>

592:
old  <>
new  <	; GetReturnValue Â£temporary420>

593:
old  < log10$8:>
new  <>

594:
old  <	; Return Â£temporary421>
new  < log10$6:>

595:
old  <	mov rax, [rbp]>
new  <	; PushFloat 2.30>

596:
old  <	mov rdi, [rbp + 16]>
new  <	fld qword [float8$2.30#]>

597:
old  <	mov rbp, [rbp + 8]>
new  <>

598:
old  <	jmp rax>
new  < log10$7:>

599:
old  <>
new  <	; SignedDivide Â£temporary421 Â£temporary420 2.30>

600:
old  < log10$9:>
new  <	fdiv>

601:
old  <	; FunctionEnd log10>
new  <>

602:
old  <>
new  < log10$8:>

603:
old  <section .data>
new  <	; SetReturnValue>

605:
old  <container8bytes#:>
new  < log10$9:>

606:
old  <	; InitializerZero 8>
new  <	; Return Â£temporary421>

607:
old  <	times 8 db 0>
new  <	mov rax, [rbp]>

608:
old  <>
new  <	mov rdi, [rbp + 16]>

609:
old  <section .data>
new  <	mov rbp, [rbp + 8]>

610:
old  <>
new  <	jmp rax>

611:
old  <int8$2#:>
new  <>

612:
old  <	; Initializer Signed_Long_Int 2>
new  < log10$10:>

613:
old  <	dq 2>
new  <	; FunctionEnd log10>

615:
old  <section .text>
new  <section .data>

617:
old  < pow:>
new  <container8bytes#:>

618:
old  <	; PushFloat x>
new  <	; InitializerZero 8>

619:
old  <	fld qword [rbp + 24]>
new  <	times 8 db 0>

621:
old  < pow$1:>
new  <section .data>

622:
old  <	; PushFloat 0>
new  <>

623:
old  <	fldz>
new  <int8$2#:>

624:
old  <>
new  <	; Initializer Signed_Long_Int 2>

625:
old  < pow$2:>
new  <	dq 2>

626:
old  <	; SignedLessThanEqual 17 x 0>
new  <>

627:
old  <	fcompp>
new  <section .text>

628:
old  <	fstsw ax>
new  <>

629:
old  <	sahf>
new  < pow:>

630:
old  <	jae pow$17>
new  <	; PushFloat x>

631:
old  <>
new  <	fld qword [rbp + 24]>

632:
old  < pow$3:>
new  <>

633:
old  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < pow$1:>

634:
old  <>
new  <	; PushFloat 0>

635:
old  < pow$4:>
new  <	fldz>

636:
old  <	; PushFloat y>
new  <>

637:
old  <	fld qword [rbp + 32]>
new  < pow$2:>

638:
old  <>
new  <	; SignedLessThanEqual 18 x 0>

639:
old  < pow$5:>
new  <	fcompp>

640:
old  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 1>
new  <	fstsw ax>

641:
old  <	fstp qword [rbp + 40]>
new  <	sahf>

642:
old  <>
new  <	jae pow$18>

643:
old  < pow$6:>
new  <>

644:
old  <	; PushFloat x>
new  < pow$3:>

645:
old  <	fld qword [rbp + 24]>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

647:
old  < pow$7:>
new  < pow$4:>

648:
old  <	; Parameter 64 double x>
new  <	; PushFloat y>

649:
old  <	fstp qword [rbp + 72]>
new  <	fld qword [rbp + 32]>

651:
old  < pow$8:>
new  < pow$5:>

652:
old  <	; Call 40 log 0>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 1>

653:
old  <	mov qword [rbp + 48], pow$9>
new  <	fstp qword [rbp + 40]>

654:
old  <	mov [rbp + 56], rbp>
new  <>

655:
old  <	add rbp, 48>
new  < pow$6:>

656:
old  <	jmp log>
new  <	; PushFloat x>

657:
old  <>
new  <	fld qword [rbp + 24]>

658:
old  < pow$9:>
new  <>

659:
old  <	; PostCall 40>
new  < pow$7:>

660:
old  <	fstp qword [rbp + 48]>
new  <	; Parameter 64 double x>

661:
old  <	fld qword [rbp + 40]>
new  <	fstp qword [rbp + 72]>

662:
old  <	fld qword [rbp + 48]>
new  <>

663:
old  <>
new  < pow$8:>

664:
old  < pow$10:>
new  <	; Call 40 log 0>

665:
old  <	; GetReturnValue Â£temporary424>
new  <	mov qword [rbp + 48], pow$9>

666:
old  <>
new  <	mov [rbp + 56], rbp>

667:
old  < pow$11:>
new  <	add rbp, 48>

668:
old  <	; SignedMultiply Â£temporary425 y Â£temporary424>
new  <	jmp log>

669:
old  <	fmul>
new  <>

670:
old  <>
new  < pow$9:>

671:
old  < pow$12:>
new  <	; PostCall 40>

672:
old  <	; Parameter 64 double Â£temporary425>
new  <	fstp qword [rbp + 48]>

673:
old  <	fstp qword [rbp + 64]>
new  <	fld qword [rbp + 40]>

674:
old  <>
new  <	fld qword [rbp + 48]>

675:
old  < pow$13:>
new  <>

676:
old  <	; Call 40 exp 0>
new  < pow$10:>

677:
old  <	mov qword [rbp + 40], pow$14>
new  <	; GetReturnValue Â£temporary424>

678:
old  <	mov [rbp + 48], rbp>
new  <>

679:
old  <	add rbp, 40>
new  < pow$11:>

680:
old  <	jmp exp>
new  <	; SignedMultiply Â£temporary425 y Â£temporary424>

681:
old  <>
new  <	fmul>

682:
old  < pow$14:>
new  <>

683:
old  <	; PostCall 40>
new  < pow$12:>

684:
old  <>
new  <	; Parameter 64 double Â£temporary425>

685:
old  < pow$15:>
new  <	fstp qword [rbp + 64]>

686:
old  <	; GetReturnValue Â£temporary426>
new  <>

687:
old  <>
new  < pow$13:>

688:
old  < pow$16:>
new  <	; Call 40 exp 0>

689:
old  <	; Return Â£temporary426>
new  <	mov qword [rbp + 40], pow$14>

690:
old  <	mov rax, [rbp]>
new  <	mov [rbp + 48], rbp>

691:
old  <	mov rdi, [rbp + 16]>
new  <	add rbp, 40>

692:
old  <	mov rbp, [rbp + 8]>
new  <	jmp exp>

693:
old  <	jmp rax>
new  <>

694:
old  <>
new  < pow$14:>

695:
old  < pow$17:>
new  <	; PostCall 40>

696:
old  <	; PushFloat x>
new  <>

697:
old  <	fld qword [rbp + 24]>
new  < pow$15:>

698:
old  <>
new  <	; GetReturnValue Â£temporary426>

699:
old  < pow$18:>
new  <>

700:
old  <	; PushFloat 0>
new  < pow$16:>

701:
old  <	fldz>
new  <	; SetReturnValue>

703:
old  < pow$19:>
new  < pow$17:>

704:
old  <	; NotEqual 25 x 0>
new  <	; Return Â£temporary426>

705:
old  <	fcompp>
new  <	mov rax, [rbp]>

706:
old  <	fstsw ax>
new  <	mov rdi, [rbp + 16]>

707:
old  <	sahf>
new  <	mov rbp, [rbp + 8]>

708:
old  <	jne pow$25>
new  <	jmp rax>

710:
old  < pow$20:>
new  < pow$18:>

711:
old  <	; PushFloat y>
new  <	; PushFloat x>

712:
old  <	fld qword [rbp + 32]>
new  <	fld qword [rbp + 24]>

714:
old  < pow$21:>
new  < pow$19:>

718:
old  < pow$22:>
new  < pow$20:>

719:
old  <	; NotEqual 25 y 0>
new  <	; NotEqual 27 x 0>

723:
old  <	jne pow$25>
new  <	jne pow$27>

725:
old  < pow$23:>
new  < pow$21:>

726:
old  <	; PushFloat 1>
new  <	; PushFloat y>

727:
old  <	fld1>
new  <	fld qword [rbp + 32]>

729:
old  < pow$24:>
new  < pow$22:>

730:
old  <	; Return 1>
new  <	; PushFloat 0>

731:
old  <	mov rax, [rbp]>
new  <	fldz>

732:
old  <	mov rdi, [rbp + 16]>
new  <>

733:
old  <	mov rbp, [rbp + 8]>
new  < pow$23:>

734:
old  <	jmp rax>
new  <	; NotEqual 27 y 0>

735:
old  <>
new  <	fcompp>

736:
old  < pow$25:>
new  <	fstsw ax>

737:
old  <	; PushFloat x>
new  <	sahf>

738:
old  <	fld qword [rbp + 24]>
new  <	jne pow$27>

740:
old  < pow$26:>
new  < pow$24:>

741:
old  <	; PushFloat 0>
new  <	; PushFloat 1>

742:
old  <	fldz>
new  <	fld1>

744:
old  < pow$27:>
new  < pow$25:>

745:
old  <	; NotEqual 33 x 0>
new  <	; SetReturnValue>

746:
old  <	fcompp>
new  <>

747:
old  <	fstsw ax>
new  < pow$26:>

748:
old  <	sahf>
new  <	; Return 1>

749:
old  <	jne pow$33>
new  <	mov rax, [rbp]>

750:
old  <>
new  <	mov rdi, [rbp + 16]>

751:
old  < pow$28:>
new  <	mov rbp, [rbp + 8]>

752:
old  <	; PushFloat y>
new  <	jmp rax>

753:
old  <	fld qword [rbp + 32]>
new  <>

754:
old  <>
new  < pow$27:>

755:
old  < pow$29:>
new  <	; PushFloat x>

756:
old  <	; PushFloat 0>
new  <	fld qword [rbp + 24]>

757:
old  <	fldz>
new  <>

758:
old  <>
new  < pow$28:>

759:
old  < pow$30:>
new  <	; PushFloat 0>

760:
old  <	; SignedLessThanEqual 33 y 0>
new  <	fldz>

761:
old  <	fcompp>
new  <>

762:
old  <	fstsw ax>
new  < pow$29:>

763:
old  <	sahf>
new  <	; NotEqual 36 x 0>

764:
old  <	jae pow$33>
new  <	fcompp>

765:
old  <>
new  <	fstsw ax>

766:
old  < pow$31:>
new  <	sahf>

767:
old  <	; PushFloat 0>
new  <	jne pow$36>

768:
old  <	fldz>
new  <>

769:
old  <>
new  < pow$30:>

770:
old  < pow$32:>
new  <	; PushFloat y>

771:
old  <	; Return 0>
new  <	fld qword [rbp + 32]>

772:
old  <	mov rax, [rbp]>
new  <>

773:
old  <	mov rdi, [rbp + 16]>
new  < pow$31:>

774:
old  <	mov rbp, [rbp + 8]>
new  <	; PushFloat 0>

775:
old  <	jmp rax>
new  <	fldz>

777:
old  < pow$33:>
new  < pow$32:>

778:
old  <	; PushFloat x>
new  <	; SignedLessThanEqual 36 y 0>

779:
old  <	fld qword [rbp + 24]>
new  <	fcompp>

780:
old  <>
new  <	fstsw ax>

781:
old  < pow$34:>
new  <	sahf>

782:
old  <	; PushFloat 0>
new  <	jae pow$36>

783:
old  <	fldz>
new  <>

784:
old  <>
new  < pow$33:>

785:
old  < pow$35:>
new  <	; PushFloat 0>

786:
old  <	; SignedGreaterThanEqual 85 x 0>
new  <	fldz>

787:
old  <	fcompp>
new  <>

788:
old  <	fstsw ax>
new  < pow$34:>

789:
old  <	sahf>
new  <	; SetReturnValue>

790:
old  <	jbe pow$85>
new  <>

791:
old  <>
new  < pow$35:>

792:
old  < pow$36:>
new  <	; Return 0>

793:
old  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov rax, [rbp]>

794:
old  <>
new  <	mov rdi, [rbp + 16]>

795:
old  < pow$37:>
new  <	mov rbp, [rbp + 8]>

796:
old  <	; PushFloat y>
new  <	jmp rax>

797:
old  <	fld qword [rbp + 32]>
new  <>

798:
old  <>
new  < pow$36:>

799:
old  < pow$38:>
new  <	; PushFloat x>

800:
old  <	; Parameter 64 double y>
new  <	fld qword [rbp + 24]>

801:
old  <	fstp qword [rbp + 64]>
new  <>

802:
old  <>
new  < pow$37:>

803:
old  < pow$39:>
new  <	; PushFloat 0>

804:
old  <	; Call 40 floor 0>
new  <	fldz>

805:
old  <	mov qword [rbp + 40], pow$40>
new  <>

806:
old  <	mov [rbp + 48], rbp>
new  < pow$38:>

807:
old  <	add rbp, 40>
new  <	; SignedGreaterThanEqual 90 x 0>

808:
old  <	jmp floor>
new  <	fcompp>

809:
old  <>
new  <	fstsw ax>

810:
old  < pow$40:>
new  <	sahf>

811:
old  <	; PostCall 40>
new  <	jbe pow$90>

813:
old  < pow$41:>
new  < pow$39:>

814:
old  <	; GetReturnValue Â£temporary434>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

816:
old  < pow$42:>
new  < pow$40:>

817:
old  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 1>
new  <	; PushFloat y>

818:
old  <	fstp qword [rbp + 40]>
new  <	fld qword [rbp + 32]>

820:
old  < pow$43:>
new  < pow$41:>

821:
old  <	; PushFloat y>
new  <	; Parameter 64 double y>

822:
old  <	fld qword [rbp + 32]>
new  <	fstp qword [rbp + 64]>

824:
old  < pow$44:>
new  < pow$42:>

825:
old  <	; Parameter 64 double y>
new  <	; Call 40 floor 0>

826:
old  <	fstp qword [rbp + 72]>
new  <	mov qword [rbp + 40], pow$43>

827:
old  <>
new  <	mov [rbp + 48], rbp>

828:
old  < pow$45:>
new  <	add rbp, 40>

829:
old  <	; Call 40 ceil 0>
new  <	jmp floor>

830:
old  <	mov qword [rbp + 48], pow$46>
new  <>

831:
old  <	mov [rbp + 56], rbp>
new  < pow$43:>

832:
old  <	add rbp, 48>
new  <	; PostCall 40>

833:
old  <	jmp ceil>
new  <>

834:
old  <>
new  < pow$44:>

835:
old  < pow$46:>
new  <	; GetReturnValue Â£temporary434>

836:
old  <	; PostCall 40>
new  <>

837:
old  <	fstp qword [rbp + 48]>
new  < pow$45:>

838:
old  <	fld qword [rbp + 40]>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 1>

839:
old  <	fld qword [rbp + 48]>
new  <	fstp qword [rbp + 40]>

841:
old  < pow$47:>
new  < pow$46:>

842:
old  <	; GetReturnValue Â£temporary435>
new  <	; PushFloat y>

843:
old  <>
new  <	fld qword [rbp + 32]>

844:
old  < pow$48:>
new  <>

845:
old  <	; NotEqual 85 Â£temporary434 Â£temporary435>
new  < pow$47:>

846:
old  <	fcompp>
new  <	; Parameter 64 double y>

847:
old  <	fstsw ax>
new  <	fstp qword [rbp + 72]>

848:
old  <	sahf>
new  <>

849:
old  <	jne pow$85>
new  < pow$48:>

850:
old  <>
new  <	; Call 40 ceil 0>

851:
old  < pow$49:>
new  <	mov qword [rbp + 48], pow$49>

852:
old  <	; PushFloat y>
new  <	mov [rbp + 56], rbp>

853:
old  <	fld qword [rbp + 32]>
new  <	add rbp, 48>

854:
old  <>
new  <	jmp ceil>

855:
old  < pow$50:>
new  <>

856:
old  <	; FloatingToIntegral Â£temporary438 y>
new  < pow$49:>

857:
old  <	fistp qword [container8bytes#]>
new  <	; PostCall 40>

858:
old  <	mov rax, [container8bytes#]>
new  <	fstp qword [rbp + 48]>

859:
old  <>
new  <	fld qword [rbp + 40]>

860:
old  < pow$51:>
new  <	fld qword [rbp + 48]>

861:
old  <	; Assign long_y Â£temporary438>
new  <>

862:
old  <	mov [rbp + 40], rax>
new  < pow$50:>

863:
old  <>
new  <	; GetReturnValue Â£temporary435>

864:
old  < pow$52:>
new  <>

865:
old  <	; SignedModulo Â£temporary439 long_y 2>
new  < pow$51:>

866:
old  <	mov rax, [rbp + 40]>
new  <	; NotEqual 90 Â£temporary434 Â£temporary435>

867:
old  <	xor rdx, rdx>
new  <	fcompp>

868:
old  <	idiv qword [int8$2#]>
new  <	fstsw ax>

869:
old  <>
new  <	sahf>

870:
old  < pow$53:>
new  <	jne pow$90>

871:
old  <	; NotEqual 69 Â£temporary439 0>
new  <>

872:
old  <	cmp rdx, 0>
new  < pow$52:>

873:
old  <	jne pow$69>
new  <	; PushFloat y>

874:
old  <>
new  <	fld qword [rbp + 32]>

875:
old  < pow$54:>
new  <>

876:
old  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < pow$53:>

877:
old  <>
new  <	; FloatingToIntegral Â£temporary438 y>

878:
old  < pow$55:>
new  <	fistp qword [container8bytes#]>

879:
old  <	; PushFloat y>
new  <	mov rax, [container8bytes#]>

880:
old  <	fld qword [rbp + 32]>
new  <>

881:
old  <>
new  < pow$54:>

882:
old  < pow$56:>
new  <	; Assign long_y Â£temporary438>

883:
old  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 1>
new  <	mov [rbp + 40], rax>

884:
old  <	fstp qword [rbp + 48]>
new  <>

885:
old  <>
new  < pow$55:>

886:
old  < pow$57:>
new  <	; SignedModulo Â£temporary439 long_y 2>

887:
old  <	; PushFloat x>
new  <	mov rax, [rbp + 40]>

888:
old  <	fld qword [rbp + 24]>
new  <	xor rdx, rdx>

889:
old  <>
new  <	idiv qword [int8$2#]>

890:
old  < pow$58:>
new  <>

891:
old  <	; UnarySubtract Â£temporary441 x>
new  < pow$56:>

892:
old  <	fchs>
new  <	; NotEqual 73 Â£temporary439 0>

893:
old  <>
new  <	cmp rdx, 0>

894:
old  < pow$59:>
new  <	jne pow$73>

895:
old  <	; Parameter 72 double Â£temporary441>
new  <>

896:
old  <	fstp qword [rbp + 80]>
new  < pow$57:>

897:
old  <>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

898:
old  < pow$60:>
new  <>

899:
old  <	; Call 48 log 0>
new  < pow$58:>

900:
old  <	mov qword [rbp + 56], pow$61>
new  <	; PushFloat y>

901:
old  <	mov [rbp + 64], rbp>
new  <	fld qword [rbp + 32]>

902:
old  <	add rbp, 56>
new  <>

903:
old  <	jmp log>
new  < pow$59:>

904:
old  <>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 1>

905:
old  < pow$61:>
new  <	fstp qword [rbp + 48]>

906:
old  <	; PostCall 48>
new  <>

907:
old  <	fstp qword [rbp + 56]>
new  < pow$60:>

908:
old  <	fld qword [rbp + 48]>
new  <	; PushFloat x>

909:
old  <	fld qword [rbp + 56]>
new  <	fld qword [rbp + 24]>

911:
old  < pow$62:>
new  < pow$61:>

912:
old  <	; GetReturnValue Â£temporary442>
new  <	; UnarySubtract Â£temporary441 x>

913:
old  <>
new  <	fchs>

914:
old  < pow$63:>
new  <>

915:
old  <	; SignedMultiply Â£temporary443 y Â£temporary442>
new  < pow$62:>

916:
old  <	fmul>
new  <	; Parameter 72 double Â£temporary441>

917:
old  <>
new  <	fstp qword [rbp + 80]>

918:
old  < pow$64:>
new  <>

919:
old  <	; Parameter 72 double Â£temporary443>
new  < pow$63:>

920:
old  <	fstp qword [rbp + 72]>
new  <	; Call 48 log 0>

921:
old  <>
new  <	mov qword [rbp + 56], pow$64>

922:
old  < pow$65:>
new  <	mov [rbp + 64], rbp>

923:
old  <	; Call 48 exp 0>
new  <	add rbp, 56>

924:
old  <	mov qword [rbp + 48], pow$66>
new  <	jmp log>

925:
old  <	mov [rbp + 56], rbp>
new  <>

926:
old  <	add rbp, 48>
new  < pow$64:>

927:
old  <	jmp exp>
new  <	; PostCall 48>

928:
old  <>
new  <	fstp qword [rbp + 56]>

929:
old  < pow$66:>
new  <	fld qword [rbp + 48]>

930:
old  <	; PostCall 48>
new  <	fld qword [rbp + 56]>

932:
old  < pow$67:>
new  < pow$65:>

933:
old  <	; GetReturnValue Â£temporary444>
new  <	; GetReturnValue Â£temporary442>

935:
old  < pow$68:>
new  < pow$66:>

936:
old  <	; Return Â£temporary444>
new  <	; SignedMultiply Â£temporary443 y Â£temporary442>

937:
old  <	mov rax, [rbp]>
new  <	fmul>

938:
old  <	mov rdi, [rbp + 16]>
new  <>

939:
old  <	mov rbp, [rbp + 8]>
new  < pow$67:>

940:
old  <	jmp rax>
new  <	; Parameter 72 double Â£temporary443>

941:
old  <>
new  <	fstp qword [rbp + 72]>

942:
old  < pow$69:>
new  <>

943:
old  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < pow$68:>

944:
old  <>
new  <	; Call 48 exp 0>

945:
old  < pow$70:>
new  <	mov qword [rbp + 48], pow$69>

946:
old  <	; PushFloat y>
new  <	mov [rbp + 56], rbp>

947:
old  <	fld qword [rbp + 32]>
new  <	add rbp, 48>

948:
old  <>
new  <	jmp exp>

949:
old  < pow$71:>
new  <>

950:
old  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 1>
new  < pow$69:>

951:
old  <	fstp qword [rbp + 48]>
new  <	; PostCall 48>

953:
old  < pow$72:>
new  < pow$70:>

954:
old  <	; PushFloat x>
new  <	; GetReturnValue Â£temporary444>

955:
old  <	fld qword [rbp + 24]>
new  <>

956:
old  <>
new  < pow$71:>

957:
old  < pow$73:>
new  <	; SetReturnValue>

958:
old  <	; UnarySubtract Â£temporary445 x>
new  <>

959:
old  <	fchs>
new  < pow$72:>

960:
old  <>
new  <	; Return Â£temporary444>

961:
old  < pow$74:>
new  <	mov rax, [rbp]>

962:
old  <	; Parameter 72 double Â£temporary445>
new  <	mov rdi, [rbp + 16]>

963:
old  <	fstp qword [rbp + 80]>
new  <	mov rbp, [rbp + 8]>

964:
old  <>
new  <	jmp rax>

965:
old  < pow$75:>
new  <>

966:
old  <	; Call 48 log 0>
new  < pow$73:>

967:
old  <	mov qword [rbp + 56], pow$76>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

968:
old  <	mov [rbp + 64], rbp>
new  <>

969:
old  <	add rbp, 56>
new  < pow$74:>

970:
old  <	jmp log>
new  <	; PushFloat y>

971:
old  <>
new  <	fld qword [rbp + 32]>

972:
old  < pow$76:>
new  <>

973:
old  <	; PostCall 48>
new  < pow$75:>

974:
old  <	fstp qword [rbp + 56]>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 1>

975:
old  <	fld qword [rbp + 48]>
new  <	fstp qword [rbp + 48]>

976:
old  <	fld qword [rbp + 56]>
new  <>

977:
old  <>
new  < pow$76:>

978:
old  < pow$77:>
new  <	; PushFloat x>

979:
old  <	; GetReturnValue Â£temporary446>
new  <	fld qword [rbp + 24]>

981:
old  < pow$78:>
new  < pow$77:>

982:
old  <	; SignedMultiply Â£temporary447 y Â£temporary446>
new  <	; UnarySubtract Â£temporary445 x>

983:
old  <	fmul>
new  <	fchs>

985:
old  < pow$79:>
new  < pow$78:>

986:
old  <	; Parameter 72 double Â£temporary447>
new  <	; Parameter 72 double Â£temporary445>

987:
old  <	fstp qword [rbp + 72]>
new  <	fstp qword [rbp + 80]>

989:
old  < pow$80:>
new  < pow$79:>

990:
old  <	; Call 48 exp 0>
new  <	; Call 48 log 0>

991:
old  <	mov qword [rbp + 48], pow$81>
new  <	mov qword [rbp + 56], pow$80>

992:
old  <	mov [rbp + 56], rbp>
new  <	mov [rbp + 64], rbp>

993:
old  <	add rbp, 48>
new  <	add rbp, 56>

994:
old  <	jmp exp>
new  <	jmp log>

996:
old  < pow$81:>
new  < pow$80:>

998:
old  <>
new  <	fstp qword [rbp + 56]>

999:
old  < pow$82:>
new  <	fld qword [rbp + 48]>

1000:
old  <	; GetReturnValue Â£temporary448>
new  <	fld qword [rbp + 56]>

1002:
old  < pow$83:>
new  < pow$81:>

1003:
old  <	; UnarySubtract Â£temporary449 Â£temporary448>
new  <	; GetReturnValue Â£temporary446>

1004:
old  <	fchs>
new  <>

1005:
old  <>
new  < pow$82:>

1006:
old  < pow$84:>
new  <	; SignedMultiply Â£temporary447 y Â£temporary446>

1007:
old  <	; Return Â£temporary449>
new  <	fmul>

1008:
old  <	mov rax, [rbp]>
new  <>

1009:
old  <	mov rdi, [rbp + 16]>
new  < pow$83:>

1010:
old  <	mov rbp, [rbp + 8]>
new  <	; Parameter 72 double Â£temporary447>

1011:
old  <	jmp rax>
new  <	fstp qword [rbp + 72]>

1013:
old  < pow$85:>
new  < pow$84:>

1014:
old  <	; Assign errno 6>
new  <	; Call 48 exp 0>

1015:
old  <	mov dword [errno], 6>
new  <	mov qword [rbp + 48], pow$85>

1016:
old  <>
new  <	mov [rbp + 56], rbp>

1017:
old  < pow$86:>
new  <	add rbp, 48>

1018:
old  <	; PushFloat 0>
new  <	jmp exp>

1019:
old  <	fldz>
new  <>

1020:
old  <>
new  < pow$85:>

1021:
old  < pow$87:>
new  <	; PostCall 48>

1022:
old  <	; Return 0>
new  <>

1023:
old  <	mov rax, [rbp]>
new  < pow$86:>

1024:
old  <	mov rdi, [rbp + 16]>
new  <	; GetReturnValue Â£temporary448>

1025:
old  <	mov rbp, [rbp + 8]>
new  <>

1026:
old  <	jmp rax>
new  < pow$87:>

1027:
old  <>
new  <	; UnarySubtract Â£temporary449 Â£temporary448>

1028:
old  < pow$88:>
new  <	fchs>

1029:
old  <	; FunctionEnd pow>
new  <>

1030:
old  <>
new  < pow$88:>

1031:
old  <section .data>
new  <	; SetReturnValue>

1033:
old  <float8$2#:>
new  < pow$89:>

1034:
old  <	; Initializer Double 2>
new  <	; Return Â£temporary449>

1035:
old  <	dq 2.0>
new  <	mov rax, [rbp]>

1036:
old  <>
new  <	mov rdi, [rbp + 16]>

1037:
old  <section .text>
new  <	mov rbp, [rbp + 8]>

1038:
old  <>
new  <	jmp rax>

1039:
old  < ldexp:>
new  <>

1040:
old  <	; PushFloat x>
new  < pow$90:>

1041:
old  <	fld qword [rbp + 24]>
new  <	; Assign errno 6>

1042:
old  <>
new  <	mov dword [errno], 6>

1043:
old  < ldexp$1:>
new  <>

1044:
old  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 1>
new  < pow$91:>

1045:
old  <	fstp qword [rbp + 36]>
new  <	; PushFloat 0>

1046:
old  <>
new  <	fldz>

1047:
old  < ldexp$2:>
new  <>

1048:
old  <	; PushFloat 2>
new  < pow$92:>

1049:
old  <	fld qword [float8$2#]>
new  <	; SetReturnValue>

1051:
old  < ldexp$3:>
new  < pow$93:>

1052:
old  <	; Parameter 60 double 2>
new  <	; Return 0>

1053:
old  <	fstp qword [rbp + 68]>
new  <	mov rax, [rbp]>

1054:
old  <>
new  <	mov rdi, [rbp + 16]>

1055:
old  < ldexp$4:>
new  <	mov rbp, [rbp + 8]>

1056:
old  <	; IntegralToFloating Â£temporary458 n>
new  <	jmp rax>

1057:
old  <	fild dword [rbp + 32]>
new  <>

1058:
old  <>
new  < pow$94:>

1059:
old  < ldexp$5:>
new  <	; FunctionEnd pow>

1060:
old  <	; Parameter 68 double Â£temporary458>
new  <>

1061:
old  <	fstp qword [rbp + 76]>
new  <section .data>

1063:
old  < ldexp$6:>
new  <float8$2#:>

1064:
old  <	; Call 36 pow 0>
new  <	; Initializer Double 2>

1065:
old  <	mov qword [rbp + 44], ldexp$7>
new  <	dq 2.0>

1066:
old  <	mov [rbp + 52], rbp>
new  <>

1067:
old  <	add rbp, 44>
new  <section .text>

1068:
old  <	jmp pow>
new  <>

1069:
old  <>
new  < ldexp:>

1070:
old  < ldexp$7:>
new  <	; PushFloat x>

1071:
old  <	; PostCall 36>
new  <	fld qword [rbp + 24]>

1072:
old  <	fstp qword [rbp + 44]>
new  <>

1073:
old  <	fld qword [rbp + 36]>
new  < ldexp$1:>

1074:
old  <	fld qword [rbp + 44]>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 1>

1075:
old  <>
new  <	fstp qword [rbp + 36]>

1076:
old  < ldexp$8:>
new  <>

1077:
old  <	; GetReturnValue Â£temporary459>
new  < ldexp$2:>

1078:
old  <>
new  <	; PushFloat 2>

1079:
old  < ldexp$9:>
new  <	fld qword [float8$2#]>

1080:
old  <	; SignedMultiply Â£temporary460 x Â£temporary459>
new  <>

1081:
old  <	fmul>
new  < ldexp$3:>

1082:
old  <>
new  <	; Parameter 60 double 2>

1083:
old  < ldexp$10:>
new  <	fstp qword [rbp + 68]>

1084:
old  <	; Return Â£temporary460>
new  <>

1085:
old  <	mov rax, [rbp]>
new  < ldexp$4:>

1086:
old  <	mov rdi, [rbp + 16]>
new  <	; IntegralToFloating Â£temporary458 n>

1087:
old  <	mov rbp, [rbp + 8]>
new  <	fild dword [rbp + 32]>

1088:
old  <	jmp rax>
new  <>

1089:
old  <>
new  < ldexp$5:>

1090:
old  < ldexp$11:>
new  <	; Parameter 68 double Â£temporary458>

1091:
old  <	; FunctionEnd ldexp>
new  <	fstp qword [rbp + 76]>

1093:
old  <section .data>
new  < ldexp$6:>

1094:
old  <>
new  <	; Call 36 pow 0>

1095:
old  <float8$0.6931471805599453094172321#:>
new  <	mov qword [rbp + 44], ldexp$7>

1096:
old  <	; Initializer Double 0.6931471805599453094172321>
new  <	mov [rbp + 52], rbp>

1097:
old  <	dq 0.6931471805599453094172321>
new  <	add rbp, 44>

1098:
old  <>
new  <	jmp pow>

1099:
old  <section .data>
new  <>

1100:
old  <>
new  < ldexp$7:>

1101:
old  <container4bytes#:>
new  <	; PostCall 36>

1102:
old  <	; InitializerZero 4>
new  <	fstp qword [rbp + 44]>

1103:
old  <	times 4 db 0>
new  <	fld qword [rbp + 36]>

1104:
old  <>
new  <	fld qword [rbp + 44]>

1105:
old  <section .text>
new  <>

1106:
old  <>
new  < ldexp$8:>

1107:
old  < @1663$log2:>
new  <	; GetReturnValue Â£temporary459>

1108:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1109:
old  <>
new  < ldexp$9:>

1110:
old  < @1663$log2$1:>
new  <	; SignedMultiply Â£temporary460 x Â£temporary459>

1111:
old  <	; PushFloat x>
new  <	fmul>

1112:
old  <	fld qword [rbp + 24]>
new  <>

1113:
old  <>
new  < ldexp$10:>

1114:
old  < @1663$log2$2:>
new  <	; SetReturnValue>

1115:
old  <	; Parameter 56 double x>
new  <>

1116:
old  <	fstp qword [rbp + 56]>
new  < ldexp$11:>

1117:
old  <>
new  <	; Return Â£temporary460>

1118:
old  < @1663$log2$3:>
new  <	mov rax, [rbp]>

1119:
old  <	; Call 32 log 0>
new  <	mov rdi, [rbp + 16]>

1120:
old  <	mov qword [rbp + 32], @1663$log2$4>
new  <	mov rbp, [rbp + 8]>

1121:
old  <	mov [rbp + 40], rbp>
new  <	jmp rax>

1122:
old  <	add rbp, 32>
new  <>

1123:
old  <	jmp log>
new  < ldexp$12:>

1124:
old  <>
new  <	; FunctionEnd ldexp>

1125:
old  < @1663$log2$4:>
new  <>

1126:
old  <	; PostCall 32>
new  <section .data>

1128:
old  < @1663$log2$5:>
new  <float8$0.6931471805599453094172321#:>

1129:
old  <	; GetReturnValue Â£temporary463>
new  <	; Initializer Double 0.6931471805599453094172321>

1130:
old  <>
new  <	dq 0.6931471805599453094172321>

1131:
old  < @1663$log2$6:>
new  <>

1132:
old  <	; PushFloat 0.6931471805599453094172321>
new  <section .data>

1133:
old  <	fld qword [float8$0.6931471805599453094172321#]>
new  <>

1134:
old  <>
new  <container4bytes#:>

1135:
old  < @1663$log2$7:>
new  <	; InitializerZero 4>

1136:
old  <	; SignedDivide Â£temporary464 Â£temporary463 0.6931471805599453094172321>
new  <	times 4 db 0>

1137:
old  <	fdiv>
new  <>

1138:
old  <>
new  <section .text>

1139:
old  < @1663$log2$8:>
new  <>

1140:
old  <	; FloatingToIntegral Â£temporary465 Â£temporary464>
new  < @1659$log2:>

1141:
old  <	fistp dword [container4bytes#]>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1142:
old  <	mov ebx, [container4bytes#]>
new  <>

1143:
old  <>
new  < @1659$log2$1:>

1144:
old  < @1663$log2$9:>
new  <	; PushFloat x>

1145:
old  <	; Return Â£temporary465>
new  <	fld qword [rbp + 24]>

1146:
old  <	mov rax, [rbp]>
new  <>

1147:
old  <	mov rdi, [rbp + 16]>
new  < @1659$log2$2:>

1148:
old  <	mov rbp, [rbp + 8]>
new  <	; Parameter 56 double x>

1149:
old  <	jmp rax>
new  <	fstp qword [rbp + 56]>

1151:
old  < @1663$log2$10:>
new  < @1659$log2$3:>

1152:
old  <	; FunctionEnd log2>
new  <	; Call 32 log 0>

1153:
old  <>
new  <	mov qword [rbp + 32], @1659$log2$4>

1154:
old  <section .text>
new  <	mov [rbp + 40], rbp>

1155:
old  <>
new  <	add rbp, 32>

1156:
old  < frexp:>
new  <	jmp log>

1157:
old  <	; PushFloat x>
new  <>

1158:
old  <	fld qword [rbp + 24]>
new  < @1659$log2$4:>

1159:
old  <>
new  <	; PostCall 32>

1160:
old  < frexp$1:>
new  <>

1161:
old  <	; PushFloat 0>
new  < @1659$log2$5:>

1162:
old  <	fldz>
new  <	; GetReturnValue Â£temporary463>

1164:
old  < frexp$2:>
new  < @1659$log2$6:>

1165:
old  <	; Equal 41 x 0>
new  <	; PushFloat 0.6931471805599453094172321>

1166:
old  <	fcompp>
new  <	fld qword [float8$0.6931471805599453094172321#]>

1167:
old  <	fstsw ax>
new  <>

1168:
old  <	sahf>
new  < @1659$log2$7:>

1169:
old  <	je frexp$41>
new  <	; SignedDivide Â£temporary464 Â£temporary463 0.6931471805599453094172321>

1170:
old  <>
new  <	fdiv>

1171:
old  < frexp$3:>
new  <>

1172:
old  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < @1659$log2$8:>

1173:
old  <>
new  <	; FloatingToIntegral Â£temporary465 Â£temporary464>

1174:
old  < frexp$4:>
new  <	fistp dword [container4bytes#]>

1175:
old  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov ebx, [container4bytes#]>

1177:
old  < frexp$5:>
new  < @1659$log2$9:>

1178:
old  <	; PushFloat x>
new  <	; SetReturnValue>

1179:
old  <	fld qword [rbp + 24]>
new  <>

1180:
old  <>
new  < @1659$log2$10:>

1181:
old  < frexp$6:>
new  <	; Return Â£temporary465>

1182:
old  <	; Parameter 64 double x>
new  <	mov rax, [rbp]>

1183:
old  <	fstp qword [rbp + 64]>
new  <	mov rdi, [rbp + 16]>

1184:
old  <>
new  <	mov rbp, [rbp + 8]>

1185:
old  < frexp$7:>
new  <	jmp rax>

1186:
old  <	; Call 40 fabs 0>
new  <>

1187:
old  <	mov qword [rbp + 40], frexp$8>
new  < @1659$log2$11:>

1188:
old  <	mov [rbp + 48], rbp>
new  <	; FunctionEnd log2>

1189:
old  <	add rbp, 40>
new  <>

1190:
old  <	jmp fabs>
new  <section .text>

1192:
old  < frexp$8:>
new  < frexp:>

1193:
old  <	; PostCall 40>
new  <	; PushFloat x>

1194:
old  <>
new  <	fld qword [rbp + 24]>

1195:
old  < frexp$9:>
new  <>

1196:
old  <	; GetReturnValue Â£temporary468>
new  < frexp$1:>

1197:
old  <>
new  <	; PushFloat 0>

1198:
old  < frexp$10:>
new  <	fldz>

1199:
old  <	; Parameter 64 double Â£temporary468>
new  <>

1200:
old  <	fstp qword [rbp + 64]>
new  < frexp$2:>

1201:
old  <>
new  <	; Equal 42 x 0>

1202:
old  < frexp$11:>
new  <	fcompp>

1203:
old  <	; Call 40 log2 0>
new  <	fstsw ax>

1204:
old  <	mov qword [rbp + 40], frexp$12>
new  <	sahf>

1205:
old  <	mov [rbp + 48], rbp>
new  <	je frexp$42>

1206:
old  <	add rbp, 40>
new  <>

1207:
old  <	jmp @1663$log2>
new  < frexp$3:>

1208:
old  <>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1209:
old  < frexp$12:>
new  <>

1210:
old  <	; PostCall 40>
new  < frexp$4:>

1211:
old  <>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1212:
old  < frexp$13:>
new  <>

1213:
old  <	; GetReturnValue Â£temporary469>
new  < frexp$5:>

1214:
old  <>
new  <	; PushFloat x>

1215:
old  < frexp$14:>
new  <	fld qword [rbp + 24]>

1216:
old  <	; IntegralToIntegral Â£temporary470 Â£temporary469>
new  <>

1217:
old  <>
new  < frexp$6:>

1218:
old  < frexp$15:>
new  <	; Parameter 64 double x>

1219:
old  <	; Assign exponent Â£temporary470>
new  <	fstp qword [rbp + 64]>

1220:
old  <	mov [rbp + 40], ebx>
new  <>

1221:
old  <>
new  < frexp$7:>

1222:
old  < frexp$16:>
new  <	; Call 40 fabs 0>

1223:
old  <	; PreCall 44 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov qword [rbp + 40], frexp$8>

1224:
old  <>
new  <	mov [rbp + 48], rbp>

1225:
old  < frexp$17:>
new  <	add rbp, 40>

1226:
old  <	; PushFloat 2>
new  <	jmp fabs>

1227:
old  <	fld qword [float8$2#]>
new  <>

1228:
old  <>
new  < frexp$8:>

1229:
old  < frexp$18:>
new  <	; PostCall 40>

1230:
old  <	; Parameter 68 double 2>
new  <>

1231:
old  <	fstp qword [rbp + 68]>
new  < frexp$9:>

1232:
old  <>
new  <	; GetReturnValue Â£temporary468>

1233:
old  < frexp$19:>
new  <>

1234:
old  <	; IntegralToFloating Â£temporary471 exponent>
new  < frexp$10:>

1235:
old  <	fild dword [rbp + 40]>
new  <	; Parameter 64 double Â£temporary468>

1236:
old  <>
new  <	fstp qword [rbp + 64]>

1237:
old  < frexp$20:>
new  <>

1238:
old  <	; Parameter 76 double Â£temporary471>
new  < frexp$11:>

1239:
old  <	fstp qword [rbp + 76]>
new  <	; Call 40 log2 0>

1240:
old  <>
new  <	mov qword [rbp + 40], frexp$12>

1241:
old  < frexp$21:>
new  <	mov [rbp + 48], rbp>

1242:
old  <	; Call 44 pow 0>
new  <	add rbp, 40>

1243:
old  <	mov qword [rbp + 44], frexp$22>
new  <	jmp @1659$log2>

1244:
old  <	mov [rbp + 52], rbp>
new  <>

1245:
old  <	add rbp, 44>
new  < frexp$12:>

1246:
old  <	jmp pow>
new  <	; PostCall 40>

1248:
old  < frexp$22:>
new  < frexp$13:>

1249:
old  <	; PostCall 44>
new  <	; GetReturnValue Â£temporary469>

1251:
old  < frexp$23:>
new  < frexp$14:>

1252:
old  <	; GetReturnValue Â£temporary472>
new  <	; IntegralToIntegral Â£temporary470 Â£temporary469>

1254:
old  < frexp$24:>
new  < frexp$15:>

1255:
old  <	; PushFloat x>
new  <	; Assign exponent Â£temporary470>

1256:
old  <	fld qword [rbp + 24]>
new  <	mov [rbp + 40], ebx>

1258:
old  < frexp$25:>
new  < frexp$16:>

1259:
old  <	; SignedGreaterThanEqual 27 Â£temporary472 x>
new  <	; PreCall 44 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1260:
old  <	fcompp>
new  <>

1261:
old  <	fstsw ax>
new  < frexp$17:>

1262:
old  <	sahf>
new  <	; PushFloat 2>

1263:
old  <	jbe frexp$27>
new  <	fld qword [float8$2#]>

1265:
old  < frexp$26:>
new  < frexp$18:>

1266:
old  <	; BinaryAdd exponent exponent 1>
new  <	; Parameter 68 double 2>

1267:
old  <	inc dword [rbp + 40]>
new  <	fstp qword [rbp + 68]>

1269:
old  < frexp$27:>
new  < frexp$19:>

1270:
old  <	; Equal 30 p 0>
new  <	; IntegralToFloating Â£temporary471 exponent>

1271:
old  <	cmp qword [rbp + 32], 0>
new  <	fild dword [rbp + 40]>

1272:
old  <	je frexp$30>
new  <>

1273:
old  <>
new  < frexp$20:>

1274:
old  < frexp$28:>
new  <	; Parameter 76 double Â£temporary471>

1275:
old  <	; Dereference Â£temporary476 -> p p 0>
new  <	fstp qword [rbp + 76]>

1276:
old  <	mov rsi, [rbp + 32]>
new  <>

1277:
old  <>
new  < frexp$21:>

1278:
old  < frexp$29:>
new  <	; Call 44 pow 0>

1279:
old  <	; Assign Â£temporary476 -> p exponent>
new  <	mov qword [rbp + 44], frexp$22>

1280:
old  <	mov eax, [rbp + 40]>
new  <	mov [rbp + 52], rbp>

1281:
old  <	mov [rsi], eax>
new  <	add rbp, 44>

1282:
old  <>
new  <	jmp pow>

1283:
old  < frexp$30:>
new  <>

1284:
old  <	; PushFloat x>
new  < frexp$22:>

1285:
old  <	fld qword [rbp + 24]>
new  <	; PostCall 44>

1287:
old  < frexp$31:>
new  < frexp$23:>

1288:
old  <	; PreCall 44 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 1>
new  <	; GetReturnValue Â£temporary472>

1289:
old  <	fstp qword [rbp + 44]>
new  <>

1290:
old  <>
new  < frexp$24:>

1291:
old  < frexp$32:>
new  <	; PushFloat x>

1292:
old  <	; PushFloat 2>
new  <	fld qword [rbp + 24]>

1293:
old  <	fld qword [float8$2#]>
new  <>

1294:
old  <>
new  < frexp$25:>

1295:
old  < frexp$33:>
new  <	; SignedGreaterThanEqual 27 Â£temporary472 x>

1296:
old  <	; Parameter 68 double 2>
new  <	fcompp>

1297:
old  <	fstp qword [rbp + 76]>
new  <	fstsw ax>

1298:
old  <>
new  <	sahf>

1299:
old  < frexp$34:>
new  <	jbe frexp$27>

1300:
old  <	; IntegralToFloating Â£temporary477 exponent>
new  <>

1301:
old  <	fild dword [rbp + 40]>
new  < frexp$26:>

1302:
old  <>
new  <	; BinaryAdd exponent exponent 1>

1303:
old  < frexp$35:>
new  <	inc dword [rbp + 40]>

1304:
old  <	; Parameter 76 double Â£temporary477>
new  <>

1305:
old  <	fstp qword [rbp + 84]>
new  < frexp$27:>

1306:
old  <>
new  <	; Equal 30 p 0>

1307:
old  < frexp$36:>
new  <	cmp qword [rbp + 32], 0>

1308:
old  <	; Call 44 pow 0>
new  <	je frexp$30>

1309:
old  <	mov qword [rbp + 52], frexp$37>
new  <>

1310:
old  <	mov [rbp + 60], rbp>
new  < frexp$28:>

1311:
old  <	add rbp, 52>
new  <	; Dereference Â£temporary476 -> p p 0>

1312:
old  <	jmp pow>
new  <	mov rsi, [rbp + 32]>

1314:
old  < frexp$37:>
new  < frexp$29:>

1315:
old  <	; PostCall 44>
new  <	; Assign Â£temporary476 -> p exponent>

1316:
old  <	fstp qword [rbp + 52]>
new  <	mov eax, [rbp + 40]>

1317:
old  <	fld qword [rbp + 44]>
new  <	mov [rsi], eax>

1318:
old  <	fld qword [rbp + 52]>
new  <>

1319:
old  <>
new  < frexp$30:>

1320:
old  < frexp$38:>
new  <	; PushFloat x>

1321:
old  <	; GetReturnValue Â£temporary478>
new  <	fld qword [rbp + 24]>

1323:
old  < frexp$39:>
new  < frexp$31:>

1324:
old  <	; SignedDivide Â£temporary479 x Â£temporary478>
new  <	; PreCall 44 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 1>

1325:
old  <	fdiv>
new  <	fstp qword [rbp + 44]>

1327:
old  < frexp$40:>
new  < frexp$32:>

1328:
old  <	; Return Â£temporary479>
new  <	; PushFloat 2>

1329:
old  <	mov rax, [rbp]>
new  <	fld qword [float8$2#]>

1330:
old  <	mov rdi, [rbp + 16]>
new  <>

1331:
old  <	mov rbp, [rbp + 8]>
new  < frexp$33:>

1332:
old  <	jmp rax>
new  <	; Parameter 68 double 2>

1333:
old  <>
new  <	fstp qword [rbp + 76]>

1334:
old  < frexp$41:>
new  <>

1335:
old  <	; Equal 44 p 0>
new  < frexp$34:>

1336:
old  <	cmp qword [rbp + 32], 0>
new  <	; IntegralToFloating Â£temporary477 exponent>

1337:
old  <	je frexp$44>
new  <	fild dword [rbp + 40]>

1339:
old  < frexp$42:>
new  < frexp$35:>

1340:
old  <	; Dereference Â£temporary481 -> p p 0>
new  <	; Parameter 76 double Â£temporary477>

1341:
old  <	mov rsi, [rbp + 32]>
new  <	fstp qword [rbp + 84]>

1343:
old  < frexp$43:>
new  < frexp$36:>

1344:
old  <	; Assign Â£temporary481 -> p 0>
new  <	; Call 44 pow 0>

1345:
old  <	mov dword [rsi], 0>
new  <	mov qword [rbp + 52], frexp$37>

1346:
old  <>
new  <	mov [rbp + 60], rbp>

1347:
old  < frexp$44:>
new  <	add rbp, 52>

1348:
old  <	; PushFloat 0>
new  <	jmp pow>

1349:
old  <	fldz>
new  <>

1350:
old  <>
new  < frexp$37:>

1351:
old  < frexp$45:>
new  <	; PostCall 44>

1352:
old  <	; Return 0>
new  <	fstp qword [rbp + 52]>

1353:
old  <	mov rax, [rbp]>
new  <	fld qword [rbp + 44]>

1354:
old  <	mov rdi, [rbp + 16]>
new  <	fld qword [rbp + 52]>

1355:
old  <	mov rbp, [rbp + 8]>
new  <>

1356:
old  <	jmp rax>
new  < frexp$38:>

1357:
old  <>
new  <	; GetReturnValue Â£temporary478>

1358:
old  < frexp$46:>
new  <>

1359:
old  <	; FunctionEnd frexp>
new  < frexp$39:>

1360:
old  <>
new  <	; SignedDivide Â£temporary479 x Â£temporary478>

1361:
old  <section .text>
new  <	fdiv>

1363:
old  < sqrt:>
new  < frexp$40:>

1364:
old  <	; PushFloat x>
new  <	; SetReturnValue>

1365:
old  <	fld qword [rbp + 24]>
new  <>

1366:
old  <>
new  < frexp$41:>

1367:
old  < sqrt$1:>
new  <	; Return Â£temporary479>

1368:
old  <	; PushFloat 0>
new  <	mov rax, [rbp]>

1369:
old  <	fldz>
new  <	mov rdi, [rbp + 16]>

1370:
old  <>
new  <	mov rbp, [rbp + 8]>

1371:
old  < sqrt$2:>
new  <	jmp rax>

1372:
old  <	; SignedLessThan 27 x 0>
new  <>

1373:
old  <	fcompp>
new  < frexp$42:>

1374:
old  <	fstsw ax>
new  <	; Equal 45 p 0>

1375:
old  <	sahf>
new  <	cmp qword [rbp + 32], 0>

1376:
old  <	ja sqrt$27>
new  <	je frexp$45>

1378:
old  < sqrt$3:>
new  < frexp$43:>

1379:
old  <	; PushFloat 1>
new  <	; Dereference Â£temporary481 -> p p 0>

1380:
old  <	fld1>
new  <	mov rsi, [rbp + 32]>

1382:
old  < sqrt$4:>
new  < frexp$44:>

1383:
old  <	; PopFloat root_i_plus_1>
new  <	; Assign Â£temporary481 -> p 0>

1384:
old  <	fstp qword [rbp + 40]>
new  <	mov dword [rsi], 0>

1386:
old  < sqrt$5:>
new  < frexp$45:>

1387:
old  <	; PushFloat root_i_plus_1>
new  <	; PushFloat 0>

1388:
old  <	fld qword [rbp + 40]>
new  <	fldz>

1390:
old  < sqrt$6:>
new  < frexp$46:>

1391:
old  <	; PopFloat root_i>
new  <	; SetReturnValue>

1392:
old  <	fstp qword [rbp + 32]>
new  <>

1393:
old  <>
new  < frexp$47:>

1394:
old  < sqrt$7:>
new  <	; Return 0>

1395:
old  <	; PushFloat root_i>
new  <	mov rax, [rbp]>

1396:
old  <	fld qword [rbp + 32]>
new  <	mov rdi, [rbp + 16]>

1397:
old  <>
new  <	mov rbp, [rbp + 8]>

1398:
old  < sqrt$8:>
new  <	jmp rax>

1399:
old  <	; PushFloat x>
new  <>

1400:
old  <	fld qword [rbp + 24]>
new  < frexp$48:>

1401:
old  <>
new  <	; FunctionEnd frexp>

1402:
old  < sqrt$9:>
new  <>

1403:
old  <	; PushFloat root_i>
new  <section .text>

1404:
old  <	fld qword [rbp + 32]>
new  <>

1405:
old  <>
new  < sqrt:>

1406:
old  < sqrt$10:>
new  <	; PushFloat x>

1407:
old  <	; SignedDivide Â£temporary489 x root_i>
new  <	fld qword [rbp + 24]>

1408:
old  <	fdiv>
new  <>

1409:
old  <>
new  < sqrt$1:>

1410:
old  < sqrt$11:>
new  <	; PushFloat 0>

1411:
old  <	; BinaryAdd Â£temporary490 root_i Â£temporary489>
new  <	fldz>

1412:
old  <	fadd>
new  <>

1413:
old  <>
new  < sqrt$2:>

1414:
old  < sqrt$12:>
new  <	; SignedLessThan 28 x 0>

1415:
old  <	; PushFloat 2>
new  <	fcompp>

1416:
old  <	fld qword [float8$2#]>
new  <	fstsw ax>

1417:
old  <>
new  <	sahf>

1418:
old  < sqrt$13:>
new  <	ja sqrt$28>

1419:
old  <	; SignedDivide Â£temporary491 Â£temporary490 2>
new  <>

1420:
old  <	fdiv>
new  < sqrt$3:>

1421:
old  <>
new  <	; PushFloat 1>

1422:
old  < sqrt$14:>
new  <	fld1>

1423:
old  <	; PopFloat root_i_plus_1>
new  <>

1424:
old  <	fstp qword [rbp + 40]>
new  < sqrt$4:>

1425:
old  <>
new  <	; PopFloat root_i_plus_1>

1426:
old  < sqrt$15:>
new  <	fstp qword [rbp + 40]>

1427:
old  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1428:
old  <>
new  < sqrt$5:>

1429:
old  < sqrt$16:>
new  <	; PushFloat root_i_plus_1>

1430:
old  <	; PushFloat root_i_plus_1>
new  <	fld qword [rbp + 40]>

1431:
old  <	fld qword [rbp + 40]>
new  <>

1432:
old  <>
new  < sqrt$6:>

1433:
old  < sqrt$17:>
new  <	; PopFloat root_i>

1434:
old  <	; PushFloat root_i>
new  <	fstp qword [rbp + 32]>

1435:
old  <	fld qword [rbp + 32]>
new  <>

1436:
old  <>
new  < sqrt$7:>

1437:
old  < sqrt$18:>
new  <	; PushFloat root_i>

1438:
old  <	; BinarySubtract Â£temporary492 root_i_plus_1 root_i>
new  <	fld qword [rbp + 32]>

1439:
old  <	fsub>
new  <>

1440:
old  <>
new  < sqrt$8:>

1441:
old  < sqrt$19:>
new  <	; PushFloat x>

1442:
old  <	; Parameter 72 double Â£temporary492>
new  <	fld qword [rbp + 24]>

1443:
old  <	fstp qword [rbp + 72]>
new  <>

1444:
old  <>
new  < sqrt$9:>

1445:
old  < sqrt$20:>
new  <	; PushFloat root_i>

1446:
old  <	; Call 48 fabs 0>
new  <	fld qword [rbp + 32]>

1447:
old  <	mov qword [rbp + 48], sqrt$21>
new  <>

1448:
old  <	mov [rbp + 56], rbp>
new  < sqrt$10:>

1449:
old  <	add rbp, 48>
new  <	; SignedDivide Â£temporary489 x root_i>

1450:
old  <	jmp fabs>
new  <	fdiv>

1452:
old  < sqrt$21:>
new  < sqrt$11:>

1453:
old  <	; PostCall 48>
new  <	; BinaryAdd Â£temporary490 root_i Â£temporary489>

1454:
old  <>
new  <	fadd>

1455:
old  < sqrt$22:>
new  <>

1456:
old  <	; GetReturnValue Â£temporary493>
new  < sqrt$12:>

1457:
old  <>
new  <	; PushFloat 2>

1458:
old  < sqrt$23:>
new  <	fld qword [float8$2#]>

1459:
old  <	; PushFloat 0.000000001>
new  <>

1460:
old  <	fld qword [float8$0.000000001#]>
new  < sqrt$13:>

1461:
old  <>
new  <	; SignedDivide Â£temporary491 Â£temporary490 2>

1462:
old  < sqrt$24:>
new  <	fdiv>

1463:
old  <	; SignedGreaterThanEqual 5 Â£temporary493 0.000000001>
new  <>

1464:
old  <	fcompp>
new  < sqrt$14:>

1465:
old  <	fstsw ax>
new  <	; PopFloat root_i_plus_1>

1466:
old  <	sahf>
new  <	fstp qword [rbp + 40]>

1467:
old  <	jbe sqrt$5>
new  <>

1468:
old  <>
new  < sqrt$15:>

1469:
old  < sqrt$25:>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1470:
old  <	; PushFloat root_i_plus_1>
new  <>

1471:
old  <	fld qword [rbp + 40]>
new  < sqrt$16:>

1472:
old  <>
new  <	; PushFloat root_i_plus_1>

1473:
old  < sqrt$26:>
new  <	fld qword [rbp + 40]>

1474:
old  <	; Return root_i_plus_1>
new  <>

1475:
old  <	mov rax, [rbp]>
new  < sqrt$17:>

1476:
old  <	mov rdi, [rbp + 16]>
new  <	; PushFloat root_i>

1477:
old  <	mov rbp, [rbp + 8]>
new  <	fld qword [rbp + 32]>

1478:
old  <	jmp rax>
new  <>

1479:
old  <>
new  < sqrt$18:>

1480:
old  < sqrt$27:>
new  <	; BinarySubtract Â£temporary492 root_i_plus_1 root_i>

1481:
old  <	; Assign errno 6>
new  <	fsub>

1482:
old  <	mov dword [errno], 6>
new  <>

1483:
old  <>
new  < sqrt$19:>

1484:
old  < sqrt$28:>
new  <	; Parameter 72 double Â£temporary492>

1485:
old  <	; PushFloat 0>
new  <	fstp qword [rbp + 72]>

1486:
old  <	fldz>
new  <>

1487:
old  <>
new  < sqrt$20:>

1488:
old  < sqrt$29:>
new  <	; Call 48 fabs 0>

1489:
old  <	; Return 0>
new  <	mov qword [rbp + 48], sqrt$21>

1490:
old  <	mov rax, [rbp]>
new  <	mov [rbp + 56], rbp>

1491:
old  <	mov rdi, [rbp + 16]>
new  <	add rbp, 48>

1492:
old  <	mov rbp, [rbp + 8]>
new  <	jmp fabs>

1493:
old  <	jmp rax>
new  <>

1494:
old  <>
new  < sqrt$21:>

1495:
old  < sqrt$30:>
new  <	; PostCall 48>

1496:
old  <	; FunctionEnd sqrt>
new  <>

1497:
old  <>
new  < sqrt$22:>

1498:
old  <section .text>
new  <	; GetReturnValue Â£temporary493>

1500:
old  < modf:>
new  < sqrt$23:>

1501:
old  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; PushFloat 0.000000001>

1502:
old  <>
new  <	fld qword [float8$0.000000001#]>

1503:
old  < modf$1:>
new  <>

1504:
old  <	; PushFloat x>
new  < sqrt$24:>

1505:
old  <	fld qword [rbp + 24]>
new  <	; SignedGreaterThanEqual 5 Â£temporary493 0.000000001>

1506:
old  <>
new  <	fcompp>

1507:
old  < modf$2:>
new  <	fstsw ax>

1508:
old  <	; Parameter 64 double x>
new  <	sahf>

1509:
old  <	fstp qword [rbp + 64]>
new  <	jbe sqrt$5>

1511:
old  < modf$3:>
new  < sqrt$25:>

1512:
old  <	; Call 40 fabs 0>
new  <	; PushFloat root_i_plus_1>

1513:
old  <	mov qword [rbp + 40], modf$4>
new  <	fld qword [rbp + 40]>

1514:
old  <	mov [rbp + 48], rbp>
new  <>

1515:
old  <	add rbp, 40>
new  < sqrt$26:>

1516:
old  <	jmp fabs>
new  <	; SetReturnValue>

1518:
old  < modf$4:>
new  < sqrt$27:>

1519:
old  <	; PostCall 40>
new  <	; Return root_i_plus_1>

1520:
old  <>
new  <	mov rax, [rbp]>

1521:
old  < modf$5:>
new  <	mov rdi, [rbp + 16]>

1522:
old  <	; GetReturnValue Â£temporary496>
new  <	mov rbp, [rbp + 8]>

1523:
old  <>
new  <	jmp rax>

1524:
old  < modf$6:>
new  <>

1525:
old  <	; PopFloat abs_x>
new  < sqrt$28:>

1526:
old  <	fstp qword [rbp + 40]>
new  <	; Assign errno 6>

1527:
old  <>
new  <	mov dword [errno], 6>

1528:
old  < modf$7:>
new  <>

1529:
old  <	; PushFloat abs_x>
new  < sqrt$29:>

1530:
old  <	fld qword [rbp + 40]>
new  <	; PushFloat 0>

1531:
old  <>
new  <	fldz>

1532:
old  < modf$8:>
new  <>

1533:
old  <	; FloatingToIntegral Â£temporary497 abs_x>
new  < sqrt$30:>

1534:
old  <	fistp qword [container8bytes#]>
new  <	; SetReturnValue>

1535:
old  <	mov rax, [container8bytes#]>
new  <>

1536:
old  <>
new  < sqrt$31:>

1537:
old  < modf$9:>
new  <	; Return 0>

1538:
old  <	; IntegralToFloating Â£temporary498 Â£temporary497>
new  <	mov rax, [rbp]>

1539:
old  <	mov [container8bytes#], rax>
new  <	mov rdi, [rbp + 16]>

1540:
old  <	fild qword [container8bytes#]>
new  <	mov rbp, [rbp + 8]>

1541:
old  <>
new  <	jmp rax>

1542:
old  < modf$10:>
new  <>

1543:
old  <	; PopFloat integral>
new  < sqrt$32:>

1544:
old  <	fstp qword [rbp + 48]>
new  <	; FunctionEnd sqrt>

1546:
old  < modf$11:>
new  <section .text>

1547:
old  <	; PushFloat abs_x>
new  <>

1548:
old  <	fld qword [rbp + 40]>
new  < modf:>

1549:
old  <>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1550:
old  < modf$12:>
new  <>

1551:
old  <	; PushFloat integral>
new  < modf$1:>

1552:
old  <	fld qword [rbp + 48]>
new  <	; PushFloat x>

1553:
old  <>
new  <	fld qword [rbp + 24]>

1554:
old  < modf$13:>
new  <>

1555:
old  <	; BinarySubtract Â£temporary499 abs_x integral>
new  < modf$2:>

1556:
old  <	fsub>
new  <	; Parameter 64 double x>

1557:
old  <>
new  <	fstp qword [rbp + 64]>

1558:
old  < modf$14:>
new  <>

1559:
old  <	; PopFloat fractional>
new  < modf$3:>

1560:
old  <	fstp qword [rbp + 56]>
new  <	; Call 40 fabs 0>

1561:
old  <>
new  <	mov qword [rbp + 40], modf$4>

1562:
old  < modf$15:>
new  <	mov [rbp + 48], rbp>

1563:
old  <	; Equal 26 p 0>
new  <	add rbp, 40>

1564:
old  <	cmp qword [rbp + 32], 0>
new  <	jmp fabs>

1565:
old  <	je modf$26>
new  <>

1566:
old  <>
new  < modf$4:>

1567:
old  < modf$16:>
new  <	; PostCall 40>

1568:
old  <	; Dereference Â£temporary501 -> p p 0>
new  <>

1569:
old  <	mov rsi, [rbp + 32]>
new  < modf$5:>

1570:
old  <>
new  <	; GetReturnValue Â£temporary496>

1571:
old  < modf$17:>
new  <>

1572:
old  <	; PushFloat x>
new  < modf$6:>

1573:
old  <	fld qword [rbp + 24]>
new  <	; PopFloat abs_x>

1574:
old  <>
new  <	fstp qword [rbp + 40]>

1575:
old  < modf$18:>
new  <>

1576:
old  <	; PushFloat 0>
new  < modf$7:>

1577:
old  <	fldz>
new  <	; PushFloat abs_x>

1578:
old  <>
new  <	fld qword [rbp + 40]>

1579:
old  < modf$19:>
new  <>

1580:
old  <	; SignedLessThanEqual 23 x 0>
new  < modf$8:>

1581:
old  <	fcompp>
new  <	; FloatingToIntegral Â£temporary497 abs_x>

1582:
old  <	fstsw ax>
new  <	fistp qword [container8bytes#]>

1583:
old  <	sahf>
new  <	mov rax, [container8bytes#]>

1584:
old  <	jae modf$23>
new  <>

1585:
old  <>
new  < modf$9:>

1586:
old  < modf$20:>
new  <	; IntegralToFloating Â£temporary498 Â£temporary497>

1587:
old  <	; PushFloat integral>
new  <	mov [container8bytes#], rax>

1588:
old  <	fld qword [rbp + 48]>
new  <	fild qword [container8bytes#]>

1590:
old  < modf$21:>
new  < modf$10:>

1591:
old  <	; DecreaseStack>
new  <	; PopFloat integral>

1592:
old  <>
new  <	fstp qword [rbp + 48]>

1593:
old  < modf$22:>
new  <>

1594:
old  <	; Goto 25>
new  < modf$11:>

1595:
old  <	jmp modf$25>
new  <	; PushFloat abs_x>

1596:
old  <>
new  <	fld qword [rbp + 40]>

1597:
old  < modf$23:>
new  <>

1598:
old  <	; PushFloat integral>
new  < modf$12:>

1599:
old  <	fld qword [rbp + 48]>
new  <	; PushFloat integral>

1600:
old  <>
new  <	fld qword [rbp + 48]>

1601:
old  < modf$24:>
new  <>

1602:
old  <	; UnarySubtract Â£temporary503 integral>
new  < modf$13:>

1603:
old  <	fchs>
new  <	; BinarySubtract Â£temporary499 abs_x integral>

1604:
old  <>
new  <	fsub>

1605:
old  < modf$25:>
new  <>

1606:
old  <	; PopFloat Â£temporary501 -> p>
new  < modf$14:>

1607:
old  <	fstp qword [rsi]>
new  <	; PopFloat fractional>

1608:
old  <>
new  <	fstp qword [rbp + 56]>

1609:
old  < modf$26:>
new  <>

1610:
old  <	; PushFloat x>
new  < modf$15:>

1611:
old  <	fld qword [rbp + 24]>
new  <	; Equal 26 p 0>

1612:
old  <>
new  <	cmp qword [rbp + 32], 0>

1613:
old  < modf$27:>
new  <	je modf$26>

1614:
old  <	; PushFloat 0>
new  <>

1615:
old  <	fldz>
new  < modf$16:>

1616:
old  <>
new  <	; Dereference Â£temporary501 -> p p 0>

1617:
old  < modf$28:>
new  <	mov rsi, [rbp + 32]>

1618:
old  <	; SignedLessThanEqual 32 x 0>
new  <>

1619:
old  <	fcompp>
new  < modf$17:>

1620:
old  <	fstsw ax>
new  <	; PushFloat x>

1621:
old  <	sahf>
new  <	fld qword [rbp + 24]>

1622:
old  <	jae modf$32>
new  <>

1623:
old  <>
new  < modf$18:>

1624:
old  < modf$29:>
new  <	; PushFloat 0>

1625:
old  <	; PushFloat fractional>
new  <	fldz>

1626:
old  <	fld qword [rbp + 56]>
new  <>

1627:
old  <>
new  < modf$19:>

1628:
old  < modf$30:>
new  <	; SignedLessThanEqual 23 x 0>

1629:
old  <	; DecreaseStack>
new  <	fcompp>

1630:
old  <>
new  <	fstsw ax>

1631:
old  < modf$31:>
new  <	sahf>

1632:
old  <	; Goto 34>
new  <	jae modf$23>

1633:
old  <	jmp modf$34>
new  <>

1634:
old  <>
new  < modf$20:>

1635:
old  < modf$32:>
new  <	; PushFloat integral>

1636:
old  <	; PushFloat fractional>
new  <	fld qword [rbp + 48]>

1637:
old  <	fld qword [rbp + 56]>
new  <>

1638:
old  <>
new  < modf$21:>

1639:
old  < modf$33:>
new  <	; DecreaseStack>

1640:
old  <	; UnarySubtract Â£temporary506 fractional>
new  <>

1641:
old  <	fchs>
new  < modf$22:>

1642:
old  <>
new  <	; Goto 25>

1643:
old  < modf$34:>
new  <	jmp modf$25>

1644:
old  <	; Return Â£temporary507>
new  <>

1645:
old  <	mov rax, [rbp]>
new  < modf$23:>

1646:
old  <	mov rdi, [rbp + 16]>
new  <	; PushFloat integral>

1647:
old  <	mov rbp, [rbp + 8]>
new  <	fld qword [rbp + 48]>

1648:
old  <	jmp rax>
new  <>

1649:
old  <>
new  < modf$24:>

1650:
old  < modf$35:>
new  <	; UnarySubtract Â£temporary503 integral>

1651:
old  <	; FunctionEnd modf>
new  <	fchs>

1653:
old  <section .text>
new  < modf$25:>

1654:
old  <>
new  <	; PopFloat Â£temporary501 -> p>

1655:
old  < fmod:>
new  <	fstp qword [rsi]>

1656:
old  <	; PushFloat y>
new  <>

1657:
old  <	fld qword [rbp + 32]>
new  < modf$26:>

1658:
old  <>
new  <	; PushFloat x>

1659:
old  < fmod$1:>
new  <	fld qword [rbp + 24]>

1660:
old  <	; PushFloat 0>
new  <>

1661:
old  <	fldz>
new  < modf$27:>

1662:
old  <>
new  <	; PushFloat 0>

1663:
old  < fmod$2:>
new  <	fldz>

1664:
old  <	; Equal 27 y 0>
new  <>

1665:
old  <	fcompp>
new  < modf$28:>

1666:
old  <	fstsw ax>
new  <	; SignedLessThanEqual 32 x 0>

1667:
old  <	sahf>
new  <	fcompp>

1668:
old  <	je fmod$27>
new  <	fstsw ax>

1669:
old  <>
new  <	sahf>

1670:
old  < fmod$3:>
new  <	jae modf$32>

1671:
old  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1672:
old  <>
new  < modf$29:>

1673:
old  < fmod$4:>
new  <	; PushFloat fractional>

1674:
old  <	; PushFloat x>
new  <	fld qword [rbp + 56]>

1675:
old  <	fld qword [rbp + 24]>
new  <>

1676:
old  <>
new  < modf$30:>

1677:
old  < fmod$5:>
new  <	; DecreaseStack>

1678:
old  <	; PushFloat y>
new  <>

1679:
old  <	fld qword [rbp + 32]>
new  < modf$31:>

1680:
old  <>
new  <	; Goto 34>

1681:
old  < fmod$6:>
new  <	jmp modf$34>

1682:
old  <	; PushFloat x>
new  <>

1683:
old  <	fld qword [rbp + 24]>
new  < modf$32:>

1684:
old  <>
new  <	; PushFloat fractional>

1685:
old  < fmod$7:>
new  <	fld qword [rbp + 56]>

1686:
old  <	; PushFloat y>
new  <>

1687:
old  <	fld qword [rbp + 32]>
new  < modf$33:>

1688:
old  <>
new  <	; UnarySubtract Â£temporary506 fractional>

1689:
old  < fmod$8:>
new  <	fchs>

1690:
old  <	; SignedDivide Â£temporary510 x y>
new  <>

1691:
old  <	fdiv>
new  < modf$34:>

1692:
old  <>
new  <	; SetReturnValue>

1693:
old  < fmod$9:>
new  <>

1694:
old  <	; FloatingToIntegral Â£temporary511 Â£temporary510>
new  < modf$35:>

1695:
old  <	fistp dword [container4bytes#]>
new  <	; Return Â£temporary507>

1696:
old  <	mov eax, [container4bytes#]>
new  <	mov rax, [rbp]>

1697:
old  <>
new  <	mov rdi, [rbp + 16]>

1698:
old  < fmod$10:>
new  <	mov rbp, [rbp + 8]>

1699:
old  <	; IntegralToFloating Â£temporary512 Â£temporary511>
new  <	jmp rax>

1700:
old  <	mov [container4bytes#], eax>
new  <>

1701:
old  <	fild dword [container4bytes#]>
new  < modf$36:>

1702:
old  <>
new  <	; FunctionEnd modf>

1703:
old  < fmod$11:>
new  <>

1704:
old  <	; SignedMultiply Â£temporary513 y Â£temporary512>
new  <section .text>

1705:
old  <	fmul>
new  <>

1706:
old  <>
new  < fmod:>

1707:
old  < fmod$12:>
new  <	; PushFloat y>

1708:
old  <	; BinarySubtract Â£temporary514 x Â£temporary513>
new  <	fld qword [rbp + 32]>

1709:
old  <	fsub>
new  <>

1710:
old  <>
new  < fmod$1:>

1711:
old  < fmod$13:>
new  <	; PushFloat 0>

1712:
old  <	; Parameter 64 double Â£temporary514>
new  <	fldz>

1713:
old  <	fstp qword [rbp + 64]>
new  <>

1714:
old  <>
new  < fmod$2:>

1715:
old  < fmod$14:>
new  <	; Equal 28 y 0>

1716:
old  <	; Call 40 fabs 0>
new  <	fcompp>

1717:
old  <	mov qword [rbp + 40], fmod$15>
new  <	fstsw ax>

1718:
old  <	mov [rbp + 48], rbp>
new  <	sahf>

1719:
old  <	add rbp, 40>
new  <	je fmod$28>

1720:
old  <	jmp fabs>
new  <>

1721:
old  <>
new  < fmod$3:>

1722:
old  < fmod$15:>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1723:
old  <	; PostCall 40>
new  <>

1724:
old  <>
new  < fmod$4:>

1725:
old  < fmod$16:>
new  <	; PushFloat x>

1726:
old  <	; GetReturnValue Â£temporary515>
new  <	fld qword [rbp + 24]>

1728:
old  < fmod$17:>
new  < fmod$5:>

1729:
old  <	; PopFloat remainder>
new  <	; PushFloat y>

1730:
old  <	fstp qword [rbp + 40]>
new  <	fld qword [rbp + 32]>

1732:
old  < fmod$18:>
new  < fmod$6:>

1736:
old  < fmod$19:>
new  < fmod$7:>

1737:
old  <	; PushFloat 0>
new  <	; PushFloat y>

1738:
old  <	fldz>
new  <	fld qword [rbp + 32]>

1740:
old  < fmod$20:>
new  < fmod$8:>

1741:
old  <	; SignedLessThanEqual 24 x 0>
new  <	; SignedDivide Â£temporary510 x y>

1742:
old  <	fcompp>
new  <	fdiv>

1743:
old  <	fstsw ax>
new  <>

1744:
old  <	sahf>
new  < fmod$9:>

1745:
old  <	jae fmod$24>
new  <	; FloatingToIntegral Â£temporary511 Â£temporary510>

1746:
old  <>
new  <	fistp dword [container4bytes#]>

1747:
old  < fmod$21:>
new  <	mov eax, [container4bytes#]>

1748:
old  <	; PushFloat remainder>
new  <>

1749:
old  <	fld qword [rbp + 40]>
new  < fmod$10:>

1750:
old  <>
new  <	; IntegralToFloating Â£temporary512 Â£temporary511>

1751:
old  < fmod$22:>
new  <	mov [container4bytes#], eax>

1752:
old  <	; DecreaseStack>
new  <	fild dword [container4bytes#]>

1754:
old  < fmod$23:>
new  < fmod$11:>

1755:
old  <	; Goto 26>
new  <	; SignedMultiply Â£temporary513 y Â£temporary512>

1756:
old  <	jmp fmod$26>
new  <	fmul>

1758:
old  < fmod$24:>
new  < fmod$12:>

1759:
old  <	; PushFloat remainder>
new  <	; BinarySubtract Â£temporary514 x Â£temporary513>

1760:
old  <	fld qword [rbp + 40]>
new  <	fsub>

1762:
old  < fmod$25:>
new  < fmod$13:>

1763:
old  <	; UnarySubtract Â£temporary517 remainder>
new  <	; Parameter 64 double Â£temporary514>

1764:
old  <	fchs>
new  <	fstp qword [rbp + 64]>

1766:
old  < fmod$26:>
new  < fmod$14:>

1767:
old  <	; Return Â£temporary518>
new  <	; Call 40 fabs 0>

1768:
old  <	mov rax, [rbp]>
new  <	mov qword [rbp + 40], fmod$15>

1769:
old  <	mov rdi, [rbp + 16]>
new  <	mov [rbp + 48], rbp>

1770:
old  <	mov rbp, [rbp + 8]>
new  <	add rbp, 40>

1771:
old  <	jmp rax>
new  <	jmp fabs>

1773:
old  < fmod$27:>
new  < fmod$15:>

1774:
old  <	; Assign errno 6>
new  <	; PostCall 40>

1775:
old  <	mov dword [errno], 6>
new  <>

1776:
old  <>
new  < fmod$16:>

1777:
old  < fmod$28:>
new  <	; GetReturnValue Â£temporary515>

1778:
old  <	; PushFloat 0>
new  <>

1779:
old  <	fldz>
new  < fmod$17:>

1780:
old  <>
new  <	; PopFloat remainder>

1781:
old  < fmod$29:>
new  <	fstp qword [rbp + 40]>

1782:
old  <	; Return 0>
new  <>

1783:
old  <	mov rax, [rbp]>
new  < fmod$18:>

1784:
old  <	mov rdi, [rbp + 16]>
new  <	; PushFloat x>

1785:
old  <	mov rbp, [rbp + 8]>
new  <	fld qword [rbp + 24]>

1786:
old  <	jmp rax>
new  <>

1787:
old  <>
new  < fmod$19:>

1788:
old  < fmod$30:>
new  <	; PushFloat 0>

1789:
old  <	; FunctionEnd fmod>
new  <	fldz>

1791:
old  <section .data>
new  < fmod$20:>

1792:
old  <>
new  <	; SignedLessThanEqual 24 x 0>

1793:
old  <float8$6.2831853071795864769252866#:>
new  <	fcompp>

1794:
old  <	; Initializer Double 6.2831853071795864769252866>
new  <	fstsw ax>

1795:
old  <	dq 6.2831853071795864769252866>
new  <	sahf>

1796:
old  <>
new  <	jae fmod$24>

1797:
old  <section .data>
new  <>

1798:
old  <>
new  < fmod$21:>

1799:
old  <float8$minus1#:>
new  <	; PushFloat remainder>

1800:
old  <	; Initializer Double -1>
new  <	fld qword [rbp + 40]>

1801:
old  <	dq -1.0>
new  <>

1802:
old  <>
new  < fmod$22:>

1803:
old  <section .text>
new  <	; DecreaseStack>

1805:
old  < sin:>
new  < fmod$23:>

1806:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Goto 26>

1807:
old  <>
new  <	jmp fmod$26>

1808:
old  < sin$1:>
new  <>

1809:
old  <	; PushFloat x>
new  < fmod$24:>

1810:
old  <	fld qword [rbp + 24]>
new  <	; PushFloat remainder>

1811:
old  <>
new  <	fld qword [rbp + 40]>

1812:
old  < sin$2:>
new  <>

1813:
old  <	; Parameter 56 double x>
new  < fmod$25:>

1814:
old  <	fstp qword [rbp + 56]>
new  <	; UnarySubtract Â£temporary517 remainder>

1815:
old  <>
new  <	fchs>

1816:
old  < sin$3:>
new  <>

1817:
old  <	; Call 32 fabs 0>
new  < fmod$26:>

1818:
old  <	mov qword [rbp + 32], sin$4>
new  <	; SetReturnValue>

1819:
old  <	mov [rbp + 40], rbp>
new  <>

1820:
old  <	add rbp, 32>
new  < fmod$27:>

1821:
old  <	jmp fabs>
new  <	; Return Â£temporary518>

1822:
old  <>
new  <	mov rax, [rbp]>

1823:
old  < sin$4:>
new  <	mov rdi, [rbp + 16]>

1824:
old  <	; PostCall 32>
new  <	mov rbp, [rbp + 8]>

1825:
old  <>
new  <	jmp rax>

1826:
old  < sin$5:>
new  <>

1827:
old  <	; GetReturnValue Â£temporary520>
new  < fmod$28:>

1828:
old  <>
new  <	; Assign errno 6>

1829:
old  < sin$6:>
new  <	mov dword [errno], 6>

1830:
old  <	; PushFloat 6.2831853071795864769252866>
new  <>

1831:
old  <	fld qword [float8$6.2831853071795864769252866#]>
new  < fmod$29:>

1832:
old  <>
new  <	; PushFloat 0>

1833:
old  < sin$7:>
new  <	fldz>

1834:
old  <	; SignedLessThanEqual 17 Â£temporary520 6.2831853071795864769252866>
new  <>

1835:
old  <	fcompp>
new  < fmod$30:>

1836:
old  <	fstsw ax>
new  <	; SetReturnValue>

1837:
old  <	sahf>
new  <>

1838:
old  <	jae sin$17>
new  < fmod$31:>

1839:
old  <>
new  <	; Return 0>

1840:
old  < sin$8:>
new  <	mov rax, [rbp]>

1841:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov rdi, [rbp + 16]>

1842:
old  <>
new  <	mov rbp, [rbp + 8]>

1843:
old  < sin$9:>
new  <	jmp rax>

1844:
old  <	; PushFloat x>
new  <>

1845:
old  <	fld qword [rbp + 24]>
new  < fmod$32:>

1846:
old  <>
new  <	; FunctionEnd fmod>

1847:
old  < sin$10:>
new  <>

1848:
old  <	; Parameter 56 double x>
new  <section .data>

1849:
old  <	fstp qword [rbp + 56]>
new  <>

1850:
old  <>
new  <float8$6.2831853071795864769252866#:>

1851:
old  < sin$11:>
new  <	; Initializer Double 6.2831853071795864769252866>

1852:
old  <	; PushFloat 6.2831853071795864769252866>
new  <	dq 6.2831853071795864769252866>

1853:
old  <	fld qword [float8$6.2831853071795864769252866#]>
new  <>

1854:
old  <>
new  <section .data>

1855:
old  < sin$12:>
new  <>

1856:
old  <	; Parameter 64 double 6.2831853071795864769252866>
new  <float8$minus1#:>

1857:
old  <	fstp qword [rbp + 64]>
new  <	; Initializer Double -1>

1858:
old  <>
new  <	dq -1.0>

1859:
old  < sin$13:>
new  <>

1860:
old  <	; Call 32 fmod 0>
new  <section .text>

1861:
old  <	mov qword [rbp + 32], sin$14>
new  <>

1862:
old  <	mov [rbp + 40], rbp>
new  < sin:>

1863:
old  <	add rbp, 32>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1864:
old  <	jmp fmod>
new  <>

1865:
old  <>
new  < sin$1:>

1866:
old  < sin$14:>
new  <	; PushFloat x>

1867:
old  <	; PostCall 32>
new  <	fld qword [rbp + 24]>

1869:
old  < sin$15:>
new  < sin$2:>

1870:
old  <	; GetReturnValue Â£temporary522>
new  <	; Parameter 56 double x>

1871:
old  <>
new  <	fstp qword [rbp + 56]>

1872:
old  < sin$16:>
new  <>

1873:
old  <	; PopFloat x>
new  < sin$3:>

1874:
old  <	fstp qword [rbp + 24]>
new  <	; Call 32 fabs 0>

1875:
old  <>
new  <	mov qword [rbp + 32], sin$4>

1876:
old  < sin$17:>
new  <	mov [rbp + 40], rbp>

1877:
old  <	; PushFloat 1>
new  <	add rbp, 32>

1878:
old  <	fld1>
new  <	jmp fabs>

1880:
old  < sin$18:>
new  < sin$4:>

1881:
old  <	; PopFloat index>
new  <	; PostCall 32>

1882:
old  <	fstp qword [rbp + 32]>
new  <>

1883:
old  <>
new  < sin$5:>

1884:
old  < sin$19:>
new  <	; GetReturnValue Â£temporary520>

1885:
old  <	; PushFloat 0>
new  <>

1886:
old  <	fldz>
new  < sin$6:>

1887:
old  <>
new  <	; PushFloat 6.2831853071795864769252866>

1888:
old  < sin$20:>
new  <	fld qword [float8$6.2831853071795864769252866#]>

1889:
old  <	; PopFloat sum>
new  <>

1890:
old  <	fstp qword [rbp + 48]>
new  < sin$7:>

1891:
old  <>
new  <	; SignedLessThanEqual 17 Â£temporary520 6.2831853071795864769252866>

1892:
old  < sin$21:>
new  <	fcompp>

1893:
old  <	; PushFloat 1>
new  <	fstsw ax>

1894:
old  <	fld1>
new  <	sahf>

1895:
old  <>
new  <	jae sin$17>

1896:
old  < sin$22:>
new  <>

1897:
old  <	; PopFloat sign>
new  < sin$8:>

1898:
old  <	fstp qword [rbp + 56]>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1900:
old  < sin$23:>
new  < sin$9:>

1904:
old  < sin$24:>
new  < sin$10:>

1905:
old  <	; PopFloat power>
new  <	; Parameter 56 double x>

1906:
old  <	fstp qword [rbp + 64]>
new  <	fstp qword [rbp + 56]>

1908:
old  < sin$25:>
new  < sin$11:>

1909:
old  <	; PushFloat 1>
new  <	; PushFloat 6.2831853071795864769252866>

1910:
old  <	fld1>
new  <	fld qword [float8$6.2831853071795864769252866#]>

1912:
old  < sin$26:>
new  < sin$12:>

1913:
old  <	; PopFloat faculty>
new  <	; Parameter 64 double 6.2831853071795864769252866>

1914:
old  <	fstp qword [rbp + 72]>
new  <	fstp qword [rbp + 64]>

1916:
old  < sin$27:>
new  < sin$13:>

1917:
old  <	; PushFloat sign>
new  <	; Call 32 fmod 0>

1918:
old  <	fld qword [rbp + 56]>
new  <	mov qword [rbp + 32], sin$14>

1919:
old  <>
new  <	mov [rbp + 40], rbp>

1920:
old  < sin$28:>
new  <	add rbp, 32>

1921:
old  <	; PushFloat power>
new  <	jmp fmod>

1922:
old  <	fld qword [rbp + 64]>
new  <>

1923:
old  <>
new  < sin$14:>

1924:
old  < sin$29:>
new  <	; PostCall 32>

1925:
old  <	; SignedMultiply Â£temporary523 sign power>
new  <>

1926:
old  <	fmul>
new  < sin$15:>

1927:
old  <>
new  <	; GetReturnValue Â£temporary522>

1928:
old  < sin$30:>
new  <>

1929:
old  <	; PushFloat faculty>
new  < sin$16:>

1930:
old  <	fld qword [rbp + 72]>
new  <	; PopFloat x>

1931:
old  <>
new  <	fstp qword [rbp + 24]>

1932:
old  < sin$31:>
new  <>

1933:
old  <	; SignedDivide Â£temporary524 Â£temporary523 faculty>
new  < sin$17:>

1934:
old  <	fdiv>
new  <	; PushFloat 1>

1935:
old  <>
new  <	fld1>

1936:
old  < sin$32:>
new  <>

1937:
old  <	; PopFloat term>
new  < sin$18:>

1938:
old  <	fstp qword [rbp + 40]>
new  <	; PopFloat index>

1939:
old  <>
new  <	fstp qword [rbp + 32]>

1940:
old  < sin$33:>
new  <>

1941:
old  <	; PushFloat sum>
new  < sin$19:>

1942:
old  <	fld qword [rbp + 48]>
new  <	; PushFloat 0>

1943:
old  <>
new  <	fldz>

1944:
old  < sin$34:>
new  <>

1945:
old  <	; PushFloat term>
new  < sin$20:>

1946:
old  <	fld qword [rbp + 40]>
new  <	; PopFloat sum>

1947:
old  <>
new  <	fstp qword [rbp + 48]>

1948:
old  < sin$35:>
new  <>

1949:
old  <	; BinaryAdd Â£temporary525 sum term>
new  < sin$21:>

1950:
old  <	fadd>
new  <	; PushFloat 1>

1951:
old  <>
new  <	fld1>

1952:
old  < sin$36:>
new  <>

1953:
old  <	; PopFloat sum>
new  < sin$22:>

1954:
old  <	fstp qword [rbp + 48]>
new  <	; PopFloat sign>

1955:
old  <>
new  <	fstp qword [rbp + 56]>

1956:
old  < sin$37:>
new  <>

1957:
old  <	; PushFloat sign>
new  < sin$23:>

1958:
old  <	fld qword [rbp + 56]>
new  <	; PushFloat x>

1959:
old  <>
new  <	fld qword [rbp + 24]>

1960:
old  < sin$38:>
new  <>

1961:
old  <	; PushFloat -1>
new  < sin$24:>

1962:
old  <	fld qword [float8$minus1#]>
new  <	; PopFloat power>

1963:
old  <>
new  <	fstp qword [rbp + 64]>

1964:
old  < sin$39:>
new  <>

1965:
old  <	; SignedMultiply Â£temporary526 sign -1>
new  < sin$25:>

1966:
old  <	fmul>
new  <	; PushFloat 1>

1967:
old  <>
new  <	fld1>

1968:
old  < sin$40:>
new  <>

1969:
old  <	; PopFloat sign>
new  < sin$26:>

1970:
old  <	fstp qword [rbp + 56]>
new  <	; PopFloat faculty>

1971:
old  <>
new  <	fstp qword [rbp + 72]>

1972:
old  < sin$41:>
new  <>

1973:
old  <	; PushFloat power>
new  < sin$27:>

1974:
old  <	fld qword [rbp + 64]>
new  <	; PushFloat sign>

1975:
old  <>
new  <	fld qword [rbp + 56]>

1976:
old  < sin$42:>
new  <>

1977:
old  <	; PushFloat x>
new  < sin$28:>

1978:
old  <	fld qword [rbp + 24]>
new  <	; PushFloat power>

1979:
old  <>
new  <	fld qword [rbp + 64]>

1980:
old  < sin$43:>
new  <>

1981:
old  <	; PushFloat x>
new  < sin$29:>

1982:
old  <	fld qword [rbp + 24]>
new  <	; SignedMultiply Â£temporary523 sign power>

1983:
old  <>
new  <	fmul>

1984:
old  < sin$44:>
new  <>

1985:
old  <	; SignedMultiply Â£temporary527 x x>
new  < sin$30:>

1986:
old  <	fmul>
new  <	; PushFloat faculty>

1987:
old  <>
new  <	fld qword [rbp + 72]>

1988:
old  < sin$45:>
new  <>

1989:
old  <	; SignedMultiply Â£temporary528 power Â£temporary527>
new  < sin$31:>

1990:
old  <	fmul>
new  <	; SignedDivide Â£temporary524 Â£temporary523 faculty>

1991:
old  <>
new  <	fdiv>

1992:
old  < sin$46:>
new  <>

1993:
old  <	; PopFloat power>
new  < sin$32:>

1994:
old  <	fstp qword [rbp + 64]>
new  <	; PopFloat term>

1995:
old  <>
new  <	fstp qword [rbp + 40]>

1996:
old  < sin$47:>
new  <>

1997:
old  <	; PushFloat faculty>
new  < sin$33:>

1998:
old  <	fld qword [rbp + 72]>
new  <	; PushFloat sum>

1999:
old  <>
new  <	fld qword [rbp + 48]>

2000:
old  < sin$48:>
new  <>

2001:
old  <	; PushFloat index>
new  < sin$34:>

2002:
old  <	fld qword [rbp + 32]>
new  <	; PushFloat term>

2003:
old  <>
new  <	fld qword [rbp + 40]>

2004:
old  < sin$49:>
new  <>

2005:
old  <	; PushOne>
new  < sin$35:>

2006:
old  <	fld1>
new  <	; BinaryAdd Â£temporary525 sum term>

2007:
old  <>
new  <	fadd>

2008:
old  < sin$50:>
new  <>

2009:
old  <	; BinaryAdd index index 1>
new  < sin$36:>

2010:
old  <	fadd>
new  <	; PopFloat sum>

2011:
old  <>
new  <	fstp qword [rbp + 48]>

2012:
old  < sin$51:>
new  <>

2013:
old  <	; TopFloat index>
new  < sin$37:>

2014:
old  <	fst qword [rbp + 32]>
new  <	; PushFloat sign>

2015:
old  <>
new  <	fld qword [rbp + 56]>

2016:
old  < sin$52:>
new  <>

2017:
old  <	; PushFloat index>
new  < sin$38:>

2018:
old  <	fld qword [rbp + 32]>
new  <	; PushFloat -1>

2019:
old  <>
new  <	fld qword [float8$minus1#]>

2020:
old  < sin$53:>
new  <>

2021:
old  <	; PushOne>
new  < sin$39:>

2022:
old  <	fld1>
new  <	; SignedMultiply Â£temporary526 sign -1>

2023:
old  <>
new  <	fmul>

2024:
old  < sin$54:>
new  <>

2025:
old  <	; BinaryAdd index index 1>
new  < sin$40:>

2026:
old  <	fadd>
new  <	; PopFloat sign>

2027:
old  <>
new  <	fstp qword [rbp + 56]>

2028:
old  < sin$55:>
new  <>

2029:
old  <	; TopFloat index>
new  < sin$41:>

2030:
old  <	fst qword [rbp + 32]>
new  <	; PushFloat power>

2031:
old  <>
new  <	fld qword [rbp + 64]>

2032:
old  < sin$56:>
new  <>

2033:
old  <	; SignedMultiply Â£temporary531 Â£temporary529 Â£temporary530>
new  < sin$42:>

2034:
old  <	fmul>
new  <	; PushFloat x>

2035:
old  <>
new  <	fld qword [rbp + 24]>

2036:
old  < sin$57:>
new  <>

2037:
old  <	; SignedMultiply Â£temporary532 faculty Â£temporary531>
new  < sin$43:>

2038:
old  <	fmul>
new  <	; PushFloat x>

2039:
old  <>
new  <	fld qword [rbp + 24]>

2040:
old  < sin$58:>
new  <>

2041:
old  <	; PopFloat faculty>
new  < sin$44:>

2042:
old  <	fstp qword [rbp + 72]>
new  <	; SignedMultiply Â£temporary527 x x>

2043:
old  <>
new  <	fmul>

2044:
old  < sin$59:>
new  <>

2045:
old  <	; PreCall 80 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < sin$45:>

2046:
old  <>
new  <	; SignedMultiply Â£temporary528 power Â£temporary527>

2047:
old  < sin$60:>
new  <	fmul>

2048:
old  <	; PushFloat term>
new  <>

2049:
old  <	fld qword [rbp + 40]>
new  < sin$46:>

2050:
old  <>
new  <	; PopFloat power>

2051:
old  < sin$61:>
new  <	fstp qword [rbp + 64]>

2052:
old  <	; Parameter 104 double term>
new  <>

2053:
old  <	fstp qword [rbp + 104]>
new  < sin$47:>

2054:
old  <>
new  <	; PushFloat faculty>

2055:
old  < sin$62:>
new  <	fld qword [rbp + 72]>

2056:
old  <	; Call 80 fabs 0>
new  <>

2057:
old  <	mov qword [rbp + 80], sin$63>
new  < sin$48:>

2058:
old  <	mov [rbp + 88], rbp>
new  <	; PushFloat index>

2059:
old  <	add rbp, 80>
new  <	fld qword [rbp + 32]>

2060:
old  <	jmp fabs>
new  <>

2061:
old  <>
new  < sin$49:>

2062:
old  < sin$63:>
new  <	; PushOne>

2063:
old  <	; PostCall 80>
new  <	fld1>

2065:
old  < sin$64:>
new  < sin$50:>

2066:
old  <	; GetReturnValue Â£temporary533>
new  <	; BinaryAdd index index 1>

2067:
old  <>
new  <	fadd>

2068:
old  < sin$65:>
new  <>

2069:
old  <	; PushFloat 0.000000001>
new  < sin$51:>

2070:
old  <	fld qword [float8$0.000000001#]>
new  <	; TopFloat index>

2071:
old  <>
new  <	fst qword [rbp + 32]>

2072:
old  < sin$66:>
new  <>

2073:
old  <	; SignedGreaterThanEqual 27 Â£temporary533 0.000000001>
new  < sin$52:>

2074:
old  <	fcompp>
new  <	; PushFloat index>

2075:
old  <	fstsw ax>
new  <	fld qword [rbp + 32]>

2076:
old  <	sahf>
new  <>

2077:
old  <	jbe sin$27>
new  < sin$53:>

2078:
old  <>
new  <	; PushOne>

2079:
old  < sin$67:>
new  <	fld1>

2080:
old  <	; PushFloat sum>
new  <>

2081:
old  <	fld qword [rbp + 48]>
new  < sin$54:>

2082:
old  <>
new  <	; BinaryAdd index index 1>

2083:
old  < sin$68:>
new  <	fadd>

2084:
old  <	; Return sum>
new  <>

2085:
old  <	mov rax, [rbp]>
new  < sin$55:>

2086:
old  <	mov rdi, [rbp + 16]>
new  <	; TopFloat index>

2087:
old  <	mov rbp, [rbp + 8]>
new  <	fst qword [rbp + 32]>

2088:
old  <	jmp rax>
new  <>

2089:
old  <>
new  < sin$56:>

2090:
old  < sin$69:>
new  <	; SignedMultiply Â£temporary531 Â£temporary529 Â£temporary530>

2091:
old  <	; FunctionEnd sin>
new  <	fmul>

2093:
old  <section .text>
new  < sin$57:>

2094:
old  <>
new  <	; SignedMultiply Â£temporary532 faculty Â£temporary531>

2095:
old  < cos:>
new  <	fmul>

2096:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

2097:
old  <>
new  < sin$58:>

2098:
old  < cos$1:>
new  <	; PopFloat faculty>

2099:
old  <	; PushFloat x>
new  <	fstp qword [rbp + 72]>

2100:
old  <	fld qword [rbp + 24]>
new  <>

2101:
old  <>
new  < sin$59:>

2102:
old  < cos$2:>
new  <	; PreCall 80 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2103:
old  <	; Parameter 56 double x>
new  <>

2104:
old  <	fstp qword [rbp + 56]>
new  < sin$60:>

2105:
old  <>
new  <	; PushFloat term>

2106:
old  < cos$3:>
new  <	fld qword [rbp + 40]>

2107:
old  <	; Call 32 fabs 0>
new  <>

2108:
old  <	mov qword [rbp + 32], cos$4>
new  < sin$61:>

2109:
old  <	mov [rbp + 40], rbp>
new  <	; Parameter 104 double term>

2110:
old  <	add rbp, 32>
new  <	fstp qword [rbp + 104]>

2111:
old  <	jmp fabs>
new  <>

2112:
old  <>
new  < sin$62:>

2113:
old  < cos$4:>
new  <	; Call 80 fabs 0>

2114:
old  <	; PostCall 32>
new  <	mov qword [rbp + 80], sin$63>

2115:
old  <>
new  <	mov [rbp + 88], rbp>

2116:
old  < cos$5:>
new  <	add rbp, 80>

2117:
old  <	; GetReturnValue Â£temporary539>
new  <	jmp fabs>

2119:
old  < cos$6:>
new  < sin$63:>

2120:
old  <	; PushFloat 6.2831853071795864769252866>
new  <	; PostCall 80>

2121:
old  <	fld qword [float8$6.2831853071795864769252866#]>
new  <>

2122:
old  <>
new  < sin$64:>

2123:
old  < cos$7:>
new  <	; GetReturnValue Â£temporary533>

2124:
old  <	; SignedLessThanEqual 17 Â£temporary539 6.2831853071795864769252866>
new  <>

2125:
old  <	fcompp>
new  < sin$65:>

2126:
old  <	fstsw ax>
new  <	; PushFloat 0.000000001>

2127:
old  <	sahf>
new  <	fld qword [float8$0.000000001#]>

2128:
old  <	jae cos$17>
new  <>

2129:
old  <>
new  < sin$66:>

2130:
old  < cos$8:>
new  <	; SignedGreaterThanEqual 27 Â£temporary533 0.000000001>

2131:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	fcompp>

2132:
old  <>
new  <	fstsw ax>

2133:
old  < cos$9:>
new  <	sahf>

2134:
old  <	; PushFloat x>
new  <	jbe sin$27>

2135:
old  <	fld qword [rbp + 24]>
new  <>

2136:
old  <>
new  < sin$67:>

2137:
old  < cos$10:>
new  <	; PushFloat sum>

2138:
old  <	; Parameter 56 double x>
new  <	fld qword [rbp + 48]>

2139:
old  <	fstp qword [rbp + 56]>
new  <>

2140:
old  <>
new  < sin$68:>

2141:
old  < cos$11:>
new  <	; SetReturnValue>

2142:
old  <	; PushFloat 6.2831853071795864769252866>
new  <>

2143:
old  <	fld qword [float8$6.2831853071795864769252866#]>
new  < sin$69:>

2144:
old  <>
new  <	; Return sum>

2145:
old  < cos$12:>
new  <	mov rax, [rbp]>

2146:
old  <	; Parameter 64 double 6.2831853071795864769252866>
new  <	mov rdi, [rbp + 16]>

2147:
old  <	fstp qword [rbp + 64]>
new  <	mov rbp, [rbp + 8]>

2148:
old  <>
new  <	jmp rax>

2149:
old  < cos$13:>
new  <>

2150:
old  <	; Call 32 fmod 0>
new  < sin$70:>

2151:
old  <	mov qword [rbp + 32], cos$14>
new  <	; FunctionEnd sin>

2152:
old  <	mov [rbp + 40], rbp>
new  <>

2153:
old  <	add rbp, 32>
new  <section .text>

2154:
old  <	jmp fmod>
new  <>

2155:
old  <>
new  < cos:>

2156:
old  < cos$14:>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2157:
old  <	; PostCall 32>
new  <>

2158:
old  <>
new  < cos$1:>

2159:
old  < cos$15:>
new  <	; PushFloat x>

2160:
old  <	; GetReturnValue Â£temporary541>
new  <	fld qword [rbp + 24]>

2162:
old  < cos$16:>
new  < cos$2:>

2163:
old  <	; PopFloat x>
new  <	; Parameter 56 double x>

2164:
old  <	fstp qword [rbp + 24]>
new  <	fstp qword [rbp + 56]>

2166:
old  < cos$17:>
new  < cos$3:>

2167:
old  <	; PushFloat 0>
new  <	; Call 32 fabs 0>

2168:
old  <	fldz>
new  <	mov qword [rbp + 32], cos$4>

2169:
old  <>
new  <	mov [rbp + 40], rbp>

2170:
old  < cos$18:>
new  <	add rbp, 32>

2171:
old  <	; PopFloat index>
new  <	jmp fabs>

2172:
old  <	fstp qword [rbp + 32]>
new  <>

2173:
old  <>
new  < cos$4:>

2174:
old  < cos$19:>
new  <	; PostCall 32>

2175:
old  <	; PushFloat 0>
new  <>

2176:
old  <	fldz>
new  < cos$5:>

2177:
old  <>
new  <	; GetReturnValue Â£temporary539>

2178:
old  < cos$20:>
new  <>

2179:
old  <	; PopFloat sum>
new  < cos$6:>

2180:
old  <	fstp qword [rbp + 48]>
new  <	; PushFloat 6.2831853071795864769252866>

2181:
old  <>
new  <	fld qword [float8$6.2831853071795864769252866#]>

2182:
old  < cos$21:>
new  <>

2183:
old  <	; PushFloat 1>
new  < cos$7:>

2184:
old  <	fld1>
new  <	; SignedLessThanEqual 17 Â£temporary539 6.2831853071795864769252866>

2185:
old  <>
new  <	fcompp>

2186:
old  < cos$22:>
new  <	fstsw ax>

2187:
old  <	; PopFloat sign>
new  <	sahf>

2188:
old  <	fstp qword [rbp + 56]>
new  <	jae cos$17>

2190:
old  < cos$23:>
new  < cos$8:>

2191:
old  <	; PushFloat 1>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2192:
old  <	fld1>
new  <>

2193:
old  <>
new  < cos$9:>

2194:
old  < cos$24:>
new  <	; PushFloat x>

2195:
old  <	; PopFloat power>
new  <	fld qword [rbp + 24]>

2196:
old  <	fstp qword [rbp + 64]>
new  <>

2197:
old  <>
new  < cos$10:>

2198:
old  < cos$25:>
new  <	; Parameter 56 double x>

2199:
old  <	; PushFloat 1>
new  <	fstp qword [rbp + 56]>

2200:
old  <	fld1>
new  <>

2201:
old  <>
new  < cos$11:>

2202:
old  < cos$26:>
new  <	; PushFloat 6.2831853071795864769252866>

2203:
old  <	; PopFloat faculty>
new  <	fld qword [float8$6.2831853071795864769252866#]>

2204:
old  <	fstp qword [rbp + 72]>
new  <>

2205:
old  <>
new  < cos$12:>

2206:
old  < cos$27:>
new  <	; Parameter 64 double 6.2831853071795864769252866>

2207:
old  <	; PushFloat sign>
new  <	fstp qword [rbp + 64]>

2208:
old  <	fld qword [rbp + 56]>
new  <>

2209:
old  <>
new  < cos$13:>

2210:
old  < cos$28:>
new  <	; Call 32 fmod 0>

2211:
old  <	; PushFloat power>
new  <	mov qword [rbp + 32], cos$14>

2212:
old  <	fld qword [rbp + 64]>
new  <	mov [rbp + 40], rbp>

2213:
old  <>
new  <	add rbp, 32>

2214:
old  < cos$29:>
new  <	jmp fmod>

2215:
old  <	; SignedMultiply Â£temporary542 sign power>
new  <>

2216:
old  <	fmul>
new  < cos$14:>

2217:
old  <>
new  <	; PostCall 32>

2218:
old  < cos$30:>
new  <>

2219:
old  <	; PushFloat faculty>
new  < cos$15:>

2220:
old  <	fld qword [rbp + 72]>
new  <	; GetReturnValue Â£temporary541>

2222:
old  < cos$31:>
new  < cos$16:>

2223:
old  <	; SignedDivide Â£temporary543 Â£temporary542 faculty>
new  <	; PopFloat x>

2224:
old  <	fdiv>
new  <	fstp qword [rbp + 24]>

2226:
old  < cos$32:>
new  < cos$17:>

2227:
old  <	; PopFloat term>
new  <	; PushFloat 0>

2228:
old  <	fstp qword [rbp + 40]>
new  <	fldz>

2230:
old  < cos$33:>
new  < cos$18:>

2231:
old  <	; PushFloat sum>
new  <	; PopFloat index>

2232:
old  <	fld qword [rbp + 48]>
new  <	fstp qword [rbp + 32]>

2234:
old  < cos$34:>
new  < cos$19:>

2235:
old  <	; PushFloat term>
new  <	; PushFloat 0>

2236:
old  <	fld qword [rbp + 40]>
new  <	fldz>

2238:
old  < cos$35:>
new  < cos$20:>

2239:
old  <	; BinaryAdd Â£temporary544 sum term>
new  <	; PopFloat sum>

2240:
old  <	fadd>
new  <	fstp qword [rbp + 48]>

2242:
old  < cos$36:>
new  < cos$21:>

2243:
old  <	; PopFloat sum>
new  <	; PushFloat 1>

2244:
old  <	fstp qword [rbp + 48]>
new  <	fld1>

2246:
old  < cos$37:>
new  < cos$22:>

2247:
old  <	; PushFloat sign>
new  <	; PopFloat sign>

2248:
old  <	fld qword [rbp + 56]>
new  <	fstp qword [rbp + 56]>

2250:
old  < cos$38:>
new  < cos$23:>

2251:
old  <	; PushFloat -1>
new  <	; PushFloat 1>

2252:
old  <	fld qword [float8$minus1#]>
new  <	fld1>

2254:
old  < cos$39:>
new  < cos$24:>

2255:
old  <	; SignedMultiply Â£temporary545 sign -1>
new  <	; PopFloat power>

2256:
old  <	fmul>
new  <	fstp qword [rbp + 64]>

2258:
old  < cos$40:>
new  < cos$25:>

2259:
old  <	; PopFloat sign>
new  <	; PushFloat 1>

2260:
old  <	fstp qword [rbp + 56]>
new  <	fld1>

2262:
old  < cos$41:>
new  < cos$26:>

2263:
old  <	; PushFloat power>
new  <	; PopFloat faculty>

2264:
old  <	fld qword [rbp + 64]>
new  <	fstp qword [rbp + 72]>

2266:
old  < cos$42:>
new  < cos$27:>

2267:
old  <	; PushFloat x>
new  <	; PushFloat sign>

2268:
old  <	fld qword [rbp + 24]>
new  <	fld qword [rbp + 56]>

2270:
old  < cos$43:>
new  < cos$28:>

2271:
old  <	; PushFloat x>
new  <	; PushFloat power>

2272:
old  <	fld qword [rbp + 24]>
new  <	fld qword [rbp + 64]>

2274:
old  < cos$44:>
new  < cos$29:>

2275:
old  <	; SignedMultiply Â£temporary546 x x>
new  <	; SignedMultiply Â£temporary542 sign power>

2278:
old  < cos$45:>
new  < cos$30:>

2279:
old  <	; SignedMultiply Â£temporary547 power Â£temporary546>
new  <	; PushFloat faculty>

2280:
old  <	fmul>
new  <	fld qword [rbp + 72]>

2282:
old  < cos$46:>
new  < cos$31:>

2283:
old  <	; PopFloat power>
new  <	; SignedDivide Â£temporary543 Â£temporary542 faculty>

2284:
old  <	fstp qword [rbp + 64]>
new  <	fdiv>

2286:
old  < cos$47:>
new  < cos$32:>

2287:
old  <	; PushFloat faculty>
new  <	; PopFloat term>

2288:
old  <	fld qword [rbp + 72]>
new  <	fstp qword [rbp + 40]>

2290:
old  < cos$48:>
new  < cos$33:>

2291:
old  <	; PushFloat index>
new  <	; PushFloat sum>

2292:
old  <	fld qword [rbp + 32]>
new  <	fld qword [rbp + 48]>

2294:
old  < cos$49:>
new  < cos$34:>

2295:
old  <	; PushOne>
new  <	; PushFloat term>

2296:
old  <	fld1>
new  <	fld qword [rbp + 40]>

2298:
old  < cos$50:>
new  < cos$35:>

2299:
old  <	; BinaryAdd index index 1>
new  <	; BinaryAdd Â£temporary544 sum term>

2302:
old  < cos$51:>
new  < cos$36:>

2303:
old  <	; TopFloat index>
new  <	; PopFloat sum>

2304:
old  <	fst qword [rbp + 32]>
new  <	fstp qword [rbp + 48]>

2306:
old  < cos$52:>
new  < cos$37:>

2307:
old  <	; PushFloat index>
new  <	; PushFloat sign>

2308:
old  <	fld qword [rbp + 32]>
new  <	fld qword [rbp + 56]>

2310:
old  < cos$53:>
new  < cos$38:>

2311:
old  <	; PushOne>
new  <	; PushFloat -1>

2312:
old  <	fld1>
new  <	fld qword [float8$minus1#]>

2314:
old  < cos$54:>
new  < cos$39:>

2315:
old  <	; BinaryAdd index index 1>
new  <	; SignedMultiply Â£temporary545 sign -1>

2316:
old  <	fadd>
new  <	fmul>

2318:
old  < cos$55:>
new  < cos$40:>

2319:
old  <	; TopFloat index>
new  <	; PopFloat sign>

2320:
old  <	fst qword [rbp + 32]>
new  <	fstp qword [rbp + 56]>

2322:
old  < cos$56:>
new  < cos$41:>

2323:
old  <	; SignedMultiply Â£temporary550 Â£temporary548 Â£temporary549>
new  <	; PushFloat power>

2324:
old  <	fmul>
new  <	fld qword [rbp + 64]>

2326:
old  < cos$57:>
new  < cos$42:>

2327:
old  <	; SignedMultiply Â£temporary551 faculty Â£temporary550>
new  <	; PushFloat x>

2328:
old  <	fmul>
new  <	fld qword [rbp + 24]>

2330:
old  < cos$58:>
new  < cos$43:>

2331:
old  <	; PopFloat faculty>
new  <	; PushFloat x>

2332:
old  <	fstp qword [rbp + 72]>
new  <	fld qword [rbp + 24]>

2334:
old  < cos$59:>
new  < cos$44:>

2335:
old  <	; PreCall 80 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; SignedMultiply Â£temporary546 x x>

2336:
old  <>
new  <	fmul>

2337:
old  < cos$60:>
new  <>

2338:
old  <	; PushFloat term>
new  < cos$45:>

2339:
old  <	fld qword [rbp + 40]>
new  <	; SignedMultiply Â£temporary547 power Â£temporary546>

2340:
old  <>
new  <	fmul>

2341:
old  < cos$61:>
new  <>

2342:
old  <	; Parameter 104 double term>
new  < cos$46:>

2343:
old  <	fstp qword [rbp + 104]>
new  <	; PopFloat power>

2344:
old  <>
new  <	fstp qword [rbp + 64]>

2345:
old  < cos$62:>
new  <>

2346:
old  <	; Call 80 fabs 0>
new  < cos$47:>

2347:
old  <	mov qword [rbp + 80], cos$63>
new  <	; PushFloat faculty>

2348:
old  <	mov [rbp + 88], rbp>
new  <	fld qword [rbp + 72]>

2349:
old  <	add rbp, 80>
new  <>

2350:
old  <	jmp fabs>
new  < cos$48:>

2351:
old  <>
new  <	; PushFloat index>

2352:
old  < cos$63:>
new  <	fld qword [rbp + 32]>

2353:
old  <	; PostCall 80>
new  <>

2354:
old  <>
new  < cos$49:>

2355:
old  < cos$64:>
new  <	; PushOne>

2356:
old  <	; GetReturnValue Â£temporary552>
new  <	fld1>

2358:
old  < cos$65:>
new  < cos$50:>

2359:
old  <	; PushFloat 0.000000001>
new  <	; BinaryAdd index index 1>

2360:
old  <	fld qword [float8$0.000000001#]>
new  <	fadd>

2362:
old  < cos$66:>
new  < cos$51:>

2363:
old  <	; SignedGreaterThanEqual 27 Â£temporary552 0.000000001>
new  <	; TopFloat index>

2364:
old  <	fcompp>
new  <	fst qword [rbp + 32]>

2365:
old  <	fstsw ax>
new  <>

2366:
old  <	sahf>
new  < cos$52:>

2367:
old  <	jbe cos$27>
new  <	; PushFloat index>

2368:
old  <>
new  <	fld qword [rbp + 32]>

2369:
old  < cos$67:>
new  <>

2370:
old  <	; PushFloat sum>
new  < cos$53:>

2371:
old  <	fld qword [rbp + 48]>
new  <	; PushOne>

2372:
old  <>
new  <	fld1>

2373:
old  < cos$68:>
new  <>

2374:
old  <	; Return sum>
new  < cos$54:>

2375:
old  <	mov rax, [rbp]>
new  <	; BinaryAdd index index 1>

2376:
old  <	mov rdi, [rbp + 16]>
new  <	fadd>

2377:
old  <	mov rbp, [rbp + 8]>
new  <>

2378:
old  <	jmp rax>
new  < cos$55:>

2379:
old  <>
new  <	; TopFloat index>

2380:
old  < cos$69:>
new  <	fst qword [rbp + 32]>

2381:
old  <	; FunctionEnd cos>
new  <>

2382:
old  <>
new  < cos$56:>

2383:
old  <section .text>
new  <	; SignedMultiply Â£temporary550 Â£temporary548 Â£temporary549>

2384:
old  <>
new  <	fmul>

2385:
old  < tan:>
new  <>

2386:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < cos$57:>

2387:
old  <>
new  <	; SignedMultiply Â£temporary551 faculty Â£temporary550>

2388:
old  < tan$1:>
new  <	fmul>

2389:
old  <	; PushFloat x>
new  <>

2390:
old  <	fld qword [rbp + 24]>
new  < cos$58:>

2391:
old  <>
new  <	; PopFloat faculty>

2392:
old  < tan$2:>
new  <	fstp qword [rbp + 72]>

2393:
old  <	; Parameter 56 double x>
new  <>

2394:
old  <	fstp qword [rbp + 56]>
new  < cos$59:>

2395:
old  <>
new  <	; PreCall 80 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2396:
old  < tan$3:>
new  <>

2397:
old  <	; Call 32 cos 0>
new  < cos$60:>

2398:
old  <	mov qword [rbp + 32], tan$4>
new  <	; PushFloat term>

2399:
old  <	mov [rbp + 40], rbp>
new  <	fld qword [rbp + 40]>

2400:
old  <	add rbp, 32>
new  <>

2401:
old  <	jmp cos>
new  < cos$61:>

2402:
old  <>
new  <	; Parameter 104 double term>

2403:
old  < tan$4:>
new  <	fstp qword [rbp + 104]>

2404:
old  <	; PostCall 32>
new  <>

2405:
old  <>
new  < cos$62:>

2406:
old  < tan$5:>
new  <	; Call 80 fabs 0>

2407:
old  <	; GetReturnValue Â£temporary558>
new  <	mov qword [rbp + 80], cos$63>

2408:
old  <>
new  <	mov [rbp + 88], rbp>

2409:
old  < tan$6:>
new  <	add rbp, 80>

2410:
old  <	; PopFloat cos_of_x>
new  <	jmp fabs>

2411:
old  <	fstp qword [rbp + 32]>
new  <>

2412:
old  <>
new  < cos$63:>

2413:
old  < tan$7:>
new  <	; PostCall 80>

2414:
old  <	; PushFloat cos_of_x>
new  <>

2415:
old  <	fld qword [rbp + 32]>
new  < cos$64:>

2416:
old  <>
new  <	; GetReturnValue Â£temporary552>

2417:
old  < tan$8:>
new  <>

2418:
old  <	; PushFloat 0>
new  < cos$65:>

2419:
old  <	fldz>
new  <	; PushFloat 0.000000001>

2420:
old  <>
new  <	fld qword [float8$0.000000001#]>

2421:
old  < tan$9:>
new  <>

2422:
old  <	; Equal 19 cos_of_x 0>
new  < cos$66:>

2423:
old  <	fcompp>
new  <	; SignedGreaterThanEqual 27 Â£temporary552 0.000000001>

2424:
old  <	fstsw ax>
new  <	fcompp>

2425:
old  <	sahf>
new  <	fstsw ax>

2426:
old  <	je tan$19>
new  <	sahf>

2427:
old  <>
new  <	jbe cos$27>

2428:
old  < tan$10:>
new  <>

2429:
old  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < cos$67:>

2430:
old  <>
new  <	; PushFloat sum>

2431:
old  < tan$11:>
new  <	fld qword [rbp + 48]>

2432:
old  <	; PushFloat x>
new  <>

2433:
old  <	fld qword [rbp + 24]>
new  < cos$68:>

2434:
old  <>
new  <	; SetReturnValue>

2435:
old  < tan$12:>
new  <>

2436:
old  <	; Parameter 64 double x>
new  < cos$69:>

2437:
old  <	fstp qword [rbp + 64]>
new  <	; Return sum>

2438:
old  <>
new  <	mov rax, [rbp]>

2439:
old  < tan$13:>
new  <	mov rdi, [rbp + 16]>

2440:
old  <	; Call 40 sin 0>
new  <	mov rbp, [rbp + 8]>

2441:
old  <	mov qword [rbp + 40], tan$14>
new  <	jmp rax>

2442:
old  <	mov [rbp + 48], rbp>
new  <>

2443:
old  <	add rbp, 40>
new  < cos$70:>

2444:
old  <	jmp sin>
new  <	; FunctionEnd cos>

2446:
old  < tan$14:>
new  <section .text>

2447:
old  <	; PostCall 40>
new  <>

2448:
old  <>
new  < tan:>

2449:
old  < tan$15:>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2450:
old  <	; GetReturnValue Â£temporary560>
new  <>

2451:
old  <>
new  < tan$1:>

2452:
old  < tan$16:>
new  <	; PushFloat x>

2453:
old  <	; PushFloat cos_of_x>
new  <	fld qword [rbp + 24]>

2454:
old  <	fld qword [rbp + 32]>
new  <>

2455:
old  <>
new  < tan$2:>

2456:
old  < tan$17:>
new  <	; Parameter 56 double x>

2457:
old  <	; SignedDivide Â£temporary561 Â£temporary560 cos_of_x>
new  <	fstp qword [rbp + 56]>

2458:
old  <	fdiv>
new  <>

2459:
old  <>
new  < tan$3:>

2460:
old  < tan$18:>
new  <	; Call 32 cos 0>

2461:
old  <	; Return Â£temporary561>
new  <	mov qword [rbp + 32], tan$4>

2462:
old  <	mov rax, [rbp]>
new  <	mov [rbp + 40], rbp>

2463:
old  <	mov rdi, [rbp + 16]>
new  <	add rbp, 32>

2464:
old  <	mov rbp, [rbp + 8]>
new  <	jmp cos>

2465:
old  <	jmp rax>
new  <>

2466:
old  <>
new  < tan$4:>

2467:
old  < tan$19:>
new  <	; PostCall 32>

2468:
old  <	; Assign errno 6>
new  <>

2469:
old  <	mov dword [errno], 6>
new  < tan$5:>

2470:
old  <>
new  <	; GetReturnValue Â£temporary558>

2471:
old  < tan$20:>
new  <>

2472:
old  <	; PushFloat 0>
new  < tan$6:>

2473:
old  <	fldz>
new  <	; PopFloat cos_of_x>

2474:
old  <>
new  <	fstp qword [rbp + 32]>

2475:
old  < tan$21:>
new  <>

2476:
old  <	; Return 0>
new  < tan$7:>

2477:
old  <	mov rax, [rbp]>
new  <	; PushFloat cos_of_x>

2478:
old  <	mov rdi, [rbp + 16]>
new  <	fld qword [rbp + 32]>

2479:
old  <	mov rbp, [rbp + 8]>
new  <>

2480:
old  <	jmp rax>
new  < tan$8:>

2481:
old  <>
new  <	; PushFloat 0>

2482:
old  < tan$22:>
new  <	fldz>

2483:
old  <	; FunctionEnd tan>
new  <>

2484:
old  <>
new  < tan$9:>

2485:
old  <section .data>
new  <	; Equal 20 cos_of_x 0>

2486:
old  <>
new  <	fcompp>

2487:
old  <float8$1.57079632679489661923132165#:>
new  <	fstsw ax>

2488:
old  <	; Initializer Double 1.57079632679489661923132165>
new  <	sahf>

2489:
old  <	dq 1.57079632679489661923132165>
new  <	je tan$20>

2491:
old  <section .text>
new  < tan$10:>

2492:
old  <>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2493:
old  < asin:>
new  <>

2494:
old  <	; PushFloat x>
new  < tan$11:>

2495:
old  <	fld qword [rbp + 24]>
new  <	; PushFloat x>

2496:
old  <>
new  <	fld qword [rbp + 24]>

2497:
old  < asin$1:>
new  <>

2498:
old  <	; PushFloat 1>
new  < tan$12:>

2499:
old  <	fld1>
new  <	; Parameter 64 double x>

2500:
old  <>
new  <	fstp qword [rbp + 64]>

2501:
old  < asin$2:>
new  <>

2502:
old  <	; NotEqual 5 x 1>
new  < tan$13:>

2503:
old  <	fcompp>
new  <	; Call 40 sin 0>

2504:
old  <	fstsw ax>
new  <	mov qword [rbp + 40], tan$14>

2505:
old  <	sahf>
new  <	mov [rbp + 48], rbp>

2506:
old  <	jne asin$5>
new  <	add rbp, 40>

2507:
old  <>
new  <	jmp sin>

2508:
old  < asin$3:>
new  <>

2509:
old  <	; PushFloat 1.57079632679489661923132165>
new  < tan$14:>

2510:
old  <	fld qword [float8$1.57079632679489661923132165#]>
new  <	; PostCall 40>

2512:
old  < asin$4:>
new  < tan$15:>

2513:
old  <	; Return 1.57079632679489661923132165>
new  <	; GetReturnValue Â£temporary560>

2514:
old  <	mov rax, [rbp]>
new  <>

2515:
old  <	mov rdi, [rbp + 16]>
new  < tan$16:>

2516:
old  <	mov rbp, [rbp + 8]>
new  <	; PushFloat cos_of_x>

2517:
old  <	jmp rax>
new  <	fld qword [rbp + 32]>

2519:
old  < asin$5:>
new  < tan$17:>

2520:
old  <	; PushFloat x>
new  <	; SignedDivide Â£temporary561 Â£temporary560 cos_of_x>

2521:
old  <	fld qword [rbp + 24]>
new  <	fdiv>

2523:
old  < asin$6:>
new  < tan$18:>

2524:
old  <	; PushFloat 0>
new  <	; SetReturnValue>

2525:
old  <	fldz>
new  <>

2526:
old  <>
new  < tan$19:>

2527:
old  < asin$7:>
new  <	; Return Â£temporary561>

2528:
old  <	; SignedGreaterThanEqual 17 x 0>
new  <	mov rax, [rbp]>

2529:
old  <	fcompp>
new  <	mov rdi, [rbp + 16]>

2530:
old  <	fstsw ax>
new  <	mov rbp, [rbp + 8]>

2531:
old  <	sahf>
new  <	jmp rax>

2532:
old  <	jbe asin$17>
new  <>

2533:
old  <>
new  < tan$20:>

2534:
old  < asin$8:>
new  <	; Assign errno 6>

2535:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov dword [errno], 6>

2537:
old  < asin$9:>
new  < tan$21:>

2538:
old  <	; PushFloat x>
new  <	; PushFloat 0>

2539:
old  <	fld qword [rbp + 24]>
new  <	fldz>

2541:
old  < asin$10:>
new  < tan$22:>

2542:
old  <	; UnarySubtract Â£temporary566 x>
new  <	; SetReturnValue>

2543:
old  <	fchs>
new  <>

2544:
old  <>
new  < tan$23:>

2545:
old  < asin$11:>
new  <	; Return 0>

2546:
old  <	; Parameter 56 double Â£temporary566>
new  <	mov rax, [rbp]>

2547:
old  <	fstp qword [rbp + 56]>
new  <	mov rdi, [rbp + 16]>

2548:
old  <>
new  <	mov rbp, [rbp + 8]>

2549:
old  < asin$12:>
new  <	jmp rax>

2550:
old  <	; Call 32 asin 0>
new  <>

2551:
old  <	mov qword [rbp + 32], asin$13>
new  < tan$24:>

2552:
old  <	mov [rbp + 40], rbp>
new  <	; FunctionEnd tan>

2553:
old  <	add rbp, 32>
new  <>

2554:
old  <	jmp asin>
new  <section .data>

2556:
old  < asin$13:>
new  <float8$1.57079632679489661923132165#:>

2557:
old  <	; PostCall 32>
new  <	; Initializer Double 1.57079632679489661923132165>

2558:
old  <>
new  <	dq 1.57079632679489661923132165>

2559:
old  < asin$14:>
new  <>

2560:
old  <	; GetReturnValue Â£temporary567>
new  <section .text>

2562:
old  < asin$15:>
new  < asin:>

2563:
old  <	; UnarySubtract Â£temporary568 Â£temporary567>
new  <	; PushFloat x>

2564:
old  <	fchs>
new  <	fld qword [rbp + 24]>

2566:
old  < asin$16:>
new  < asin$1:>

2567:
old  <	; Return Â£temporary568>
new  <	; PushFloat 1>

2568:
old  <	mov rax, [rbp]>
new  <	fld1>

2569:
old  <	mov rdi, [rbp + 16]>
new  <>

2570:
old  <	mov rbp, [rbp + 8]>
new  < asin$2:>

2571:
old  <	jmp rax>
new  <	; NotEqual 6 x 1>

2572:
old  <>
new  <	fcompp>

2573:
old  < asin$17:>
new  <	fstsw ax>

2574:
old  <	; PushFloat x>
new  <	sahf>

2575:
old  <	fld qword [rbp + 24]>
new  <	jne asin$6>

2577:
old  < asin$18:>
new  < asin$3:>

2578:
old  <	; PushFloat 1>
new  <	; PushFloat 1.57079632679489661923132165>

2579:
old  <	fld1>
new  <	fld qword [float8$1.57079632679489661923132165#]>

2581:
old  < asin$19:>
new  < asin$4:>

2582:
old  <	; SignedGreaterThanEqual 38 x 1>
new  <	; SetReturnValue>

2583:
old  <	fcompp>
new  <>

2584:
old  <	fstsw ax>
new  < asin$5:>

2585:
old  <	sahf>
new  <	; Return 1.57079632679489661923132165>

2586:
old  <	jbe asin$38>
new  <	mov rax, [rbp]>

2587:
old  <>
new  <	mov rdi, [rbp + 16]>

2588:
old  < asin$20:>
new  <	mov rbp, [rbp + 8]>

2589:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	jmp rax>

2591:
old  < asin$21:>
new  < asin$6:>

2595:
old  < asin$22:>
new  < asin$7:>

2596:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 1>
new  <	; PushFloat 0>

2597:
old  <	fstp qword [rbp + 32]>
new  <	fldz>

2599:
old  < asin$23:>
new  < asin$8:>

2600:
old  <	; PushFloat 1>
new  <	; SignedGreaterThanEqual 19 x 0>

2601:
old  <	fld1>
new  <	fcompp>

2602:
old  <>
new  <	fstsw ax>

2603:
old  < asin$24:>
new  <	sahf>

2604:
old  <	; PushFloat x>
new  <	jbe asin$19>

2605:
old  <	fld qword [rbp + 24]>
new  <>

2606:
old  <>
new  < asin$9:>

2607:
old  < asin$25:>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2608:
old  <	; PushFloat x>
new  <>

2609:
old  <	fld qword [rbp + 24]>
new  < asin$10:>

2610:
old  <>
new  <	; PushFloat x>

2611:
old  < asin$26:>
new  <	fld qword [rbp + 24]>

2612:
old  <	; SignedMultiply Â£temporary570 x x>
new  <>

2613:
old  <	fmul>
new  < asin$11:>

2614:
old  <>
new  <	; UnarySubtract Â£temporary566 x>

2615:
old  < asin$27:>
new  <	fchs>

2616:
old  <	; BinarySubtract Â£temporary571 1 Â£temporary570>
new  <>

2617:
old  <	fsub>
new  < asin$12:>

2618:
old  <>
new  <	; Parameter 56 double Â£temporary566>

2619:
old  < asin$28:>
new  <	fstp qword [rbp + 56]>

2620:
old  <	; Parameter 56 double Â£temporary571>
new  <>

2621:
old  <	fstp qword [rbp + 64]>
new  < asin$13:>

2622:
old  <>
new  <	; Call 32 asin 0>

2623:
old  < asin$29:>
new  <	mov qword [rbp + 32], asin$14>

2624:
old  <	; Call 32 sqrt 0>
new  <	mov [rbp + 40], rbp>

2625:
old  <	mov qword [rbp + 40], asin$30>
new  <	add rbp, 32>

2626:
old  <	mov [rbp + 48], rbp>
new  <	jmp asin>

2627:
old  <	add rbp, 40>
new  <>

2628:
old  <	jmp sqrt>
new  < asin$14:>

2629:
old  <>
new  <	; PostCall 32>

2630:
old  < asin$30:>
new  <>

2631:
old  <	; PostCall 32>
new  < asin$15:>

2632:
old  <	fstp qword [rbp + 40]>
new  <	; GetReturnValue Â£temporary567>

2633:
old  <	fld qword [rbp + 32]>
new  <>

2634:
old  <	fld qword [rbp + 40]>
new  < asin$16:>

2635:
old  <>
new  <	; UnarySubtract Â£temporary568 Â£temporary567>

2636:
old  < asin$31:>
new  <	fchs>

2637:
old  <	; GetReturnValue Â£temporary572>
new  <>

2638:
old  <>
new  < asin$17:>

2639:
old  < asin$32:>
new  <	; SetReturnValue>

2640:
old  <	; SignedDivide Â£temporary573 x Â£temporary572>
new  <>

2641:
old  <	fdiv>
new  < asin$18:>

2642:
old  <>
new  <	; Return Â£temporary568>

2643:
old  < asin$33:>
new  <	mov rax, [rbp]>

2644:
old  <	; Parameter 56 double Â£temporary573>
new  <	mov rdi, [rbp + 16]>

2645:
old  <	fstp qword [rbp + 56]>
new  <	mov rbp, [rbp + 8]>

2646:
old  <>
new  <	jmp rax>

2647:
old  < asin$34:>
new  <>

2648:
old  <	; Call 32 atan 0>
new  < asin$19:>

2649:
old  <	mov qword [rbp + 32], asin$35>
new  <	; PushFloat x>

2650:
old  <	mov [rbp + 40], rbp>
new  <	fld qword [rbp + 24]>

2651:
old  <	add rbp, 32>
new  <>

2652:
old  <	jmp atan>
new  < asin$20:>

2653:
old  <>
new  <	; PushFloat 1>

2654:
old  < asin$35:>
new  <	fld1>

2655:
old  <	; PostCall 32>
new  <>

2656:
old  <>
new  < asin$21:>

2657:
old  < asin$36:>
new  <	; SignedGreaterThanEqual 41 x 1>

2658:
old  <	; GetReturnValue Â£temporary574>
new  <	fcompp>

2659:
old  <>
new  <	fstsw ax>

2660:
old  < asin$37:>
new  <	sahf>

2661:
old  <	; Return Â£temporary574>
new  <	jbe asin$41>

2662:
old  <	mov rax, [rbp]>
new  <>

2663:
old  <	mov rdi, [rbp + 16]>
new  < asin$22:>

2664:
old  <	mov rbp, [rbp + 8]>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2665:
old  <	jmp rax>
new  <>

2666:
old  <>
new  < asin$23:>

2667:
old  < asin$38:>
new  <	; PushFloat x>

2668:
old  <	; Assign errno 6>
new  <	fld qword [rbp + 24]>

2669:
old  <	mov dword [errno], 6>
new  <>

2670:
old  <>
new  < asin$24:>

2671:
old  < asin$39:>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 1>

2672:
old  <	; PushFloat 0>
new  <	fstp qword [rbp + 32]>

2673:
old  <	fldz>
new  <>

2674:
old  <>
new  < asin$25:>

2675:
old  < asin$40:>
new  <	; PushFloat 1>

2676:
old  <	; Return 0>
new  <	fld1>

2677:
old  <	mov rax, [rbp]>
new  <>

2678:
old  <	mov rdi, [rbp + 16]>
new  < asin$26:>

2679:
old  <	mov rbp, [rbp + 8]>
new  <	; PushFloat x>

2680:
old  <	jmp rax>
new  <	fld qword [rbp + 24]>

2682:
old  < asin$41:>
new  < asin$27:>

2683:
old  <	; FunctionEnd asin>
new  <	; PushFloat x>

2684:
old  <>
new  <	fld qword [rbp + 24]>

2685:
old  <section .data>
new  <>

2686:
old  <>
new  < asin$28:>

2687:
old  <float8$3.1415926535897932384626433#:>
new  <	; SignedMultiply Â£temporary570 x x>

2688:
old  <	; Initializer Double 3.1415926535897932384626433>
new  <	fmul>

2689:
old  <	dq 3.1415926535897932384626433>
new  <>

2690:
old  <>
new  < asin$29:>

2691:
old  <section .text>
new  <	; BinarySubtract Â£temporary571 1 Â£temporary570>

2692:
old  <>
new  <	fsub>

2693:
old  < acos:>
new  <>

2694:
old  <	; PushFloat x>
new  < asin$30:>

2695:
old  <	fld qword [rbp + 24]>
new  <	; Parameter 56 double Â£temporary571>

2696:
old  <>
new  <	fstp qword [rbp + 64]>

2697:
old  < acos$1:>
new  <>

2698:
old  <	; PushFloat 0>
new  < asin$31:>

2699:
old  <	fldz>
new  <	; Call 32 sqrt 0>

2700:
old  <>
new  <	mov qword [rbp + 40], asin$32>

2701:
old  < acos$2:>
new  <	mov [rbp + 48], rbp>

2702:
old  <	; NotEqual 5 x 0>
new  <	add rbp, 40>

2703:
old  <	fcompp>
new  <	jmp sqrt>

2704:
old  <	fstsw ax>
new  <>

2705:
old  <	sahf>
new  < asin$32:>

2706:
old  <	jne acos$5>
new  <	; PostCall 32>

2707:
old  <>
new  <	fstp qword [rbp + 40]>

2708:
old  < acos$3:>
new  <	fld qword [rbp + 32]>

2709:
old  <	; PushFloat 1.57079632679489661923132165>
new  <	fld qword [rbp + 40]>

2710:
old  <	fld qword [float8$1.57079632679489661923132165#]>
new  <>

2711:
old  <>
new  < asin$33:>

2712:
old  < acos$4:>
new  <	; GetReturnValue Â£temporary572>

2713:
old  <	; Return 1.57079632679489661923132165>
new  <>

2714:
old  <	mov rax, [rbp]>
new  < asin$34:>

2715:
old  <	mov rdi, [rbp + 16]>
new  <	; SignedDivide Â£temporary573 x Â£temporary572>

2716:
old  <	mov rbp, [rbp + 8]>
new  <	fdiv>

2717:
old  <	jmp rax>
new  <>

2718:
old  <>
new  < asin$35:>

2719:
old  < acos$5:>
new  <	; Parameter 56 double Â£temporary573>

2720:
old  <	; PushFloat x>
new  <	fstp qword [rbp + 56]>

2721:
old  <	fld qword [rbp + 24]>
new  <>

2722:
old  <>
new  < asin$36:>

2723:
old  < acos$6:>
new  <	; Call 32 atan 0>

2724:
old  <	; PushFloat 0>
new  <	mov qword [rbp + 32], asin$37>

2725:
old  <	fldz>
new  <	mov [rbp + 40], rbp>

2726:
old  <>
new  <	add rbp, 32>

2727:
old  < acos$7:>
new  <	jmp atan>

2728:
old  <	; SignedGreaterThanEqual 18 x 0>
new  <>

2729:
old  <	fcompp>
new  < asin$37:>

2730:
old  <	fstsw ax>
new  <	; PostCall 32>

2731:
old  <	sahf>
new  <>

2732:
old  <	jbe acos$18>
new  < asin$38:>

2733:
old  <>
new  <	; GetReturnValue Â£temporary574>

2734:
old  < acos$8:>
new  <>

2735:
old  <	; PushFloat 3.1415926535897932384626433>
new  < asin$39:>

2736:
old  <	fld qword [float8$3.1415926535897932384626433#]>
new  <	; SetReturnValue>

2738:
old  < acos$9:>
new  < asin$40:>

2739:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 1>
new  <	; Return Â£temporary574>

2740:
old  <	fstp qword [rbp + 32]>
new  <	mov rax, [rbp]>

2741:
old  <>
new  <	mov rdi, [rbp + 16]>

2742:
old  < acos$10:>
new  <	mov rbp, [rbp + 8]>

2743:
old  <	; PushFloat x>
new  <	jmp rax>

2744:
old  <	fld qword [rbp + 24]>
new  <>

2745:
old  <>
new  < asin$41:>

2746:
old  < acos$11:>
new  <	; Assign errno 6>

2747:
old  <	; UnarySubtract Â£temporary580 x>
new  <	mov dword [errno], 6>

2748:
old  <	fchs>
new  <>

2749:
old  <>
new  < asin$42:>

2750:
old  < acos$12:>
new  <	; PushFloat 0>

2751:
old  <	; Parameter 56 double Â£temporary580>
new  <	fldz>

2752:
old  <	fstp qword [rbp + 64]>
new  <>

2753:
old  <>
new  < asin$43:>

2754:
old  < acos$13:>
new  <	; SetReturnValue>

2755:
old  <	; Call 32 acos 0>
new  <>

2756:
old  <	mov qword [rbp + 40], acos$14>
new  < asin$44:>

2757:
old  <	mov [rbp + 48], rbp>
new  <	; Return 0>

2758:
old  <	add rbp, 40>
new  <	mov rax, [rbp]>

2759:
old  <	jmp acos>
new  <	mov rdi, [rbp + 16]>

2760:
old  <>
new  <	mov rbp, [rbp + 8]>

2761:
old  < acos$14:>
new  <	jmp rax>

2762:
old  <	; PostCall 32>
new  <>

2763:
old  <	fstp qword [rbp + 40]>
new  < asin$45:>

2764:
old  <	fld qword [rbp + 32]>
new  <	; FunctionEnd asin>

2765:
old  <	fld qword [rbp + 40]>
new  <>

2766:
old  <>
new  <section .data>

2767:
old  < acos$15:>
new  <>

2768:
old  <	; GetReturnValue Â£temporary581>
new  <float8$3.1415926535897932384626433#:>

2769:
old  <>
new  <	; Initializer Double 3.1415926535897932384626433>

2770:
old  < acos$16:>
new  <	dq 3.1415926535897932384626433>

2771:
old  <	; BinarySubtract Â£temporary582 3.1415926535897932384626433 Â£temporary581>
new  <>

2772:
old  <	fsub>
new  <section .text>

2774:
old  < acos$17:>
new  < acos:>

2775:
old  <	; Return Â£temporary582>
new  <	; PushFloat x>

2776:
old  <	mov rax, [rbp]>
new  <	fld qword [rbp + 24]>

2777:
old  <	mov rdi, [rbp + 16]>
new  <>

2778:
old  <	mov rbp, [rbp + 8]>
new  < acos$1:>

2779:
old  <	jmp rax>
new  <	; PushFloat 0>

2780:
old  <>
new  <	fldz>

2781:
old  < acos$18:>
new  <>

2782:
old  <	; PushFloat x>
new  < acos$2:>

2783:
old  <	fld qword [rbp + 24]>
new  <	; NotEqual 6 x 0>

2784:
old  <>
new  <	fcompp>

2785:
old  < acos$19:>
new  <	fstsw ax>

2786:
old  <	; PushFloat 1>
new  <	sahf>

2787:
old  <	fld1>
new  <	jne acos$6>

2789:
old  < acos$20:>
new  < acos$3:>

2790:
old  <	; SignedGreaterThan 39 x 1>
new  <	; PushFloat 1.57079632679489661923132165>

2791:
old  <	fcompp>
new  <	fld qword [float8$1.57079632679489661923132165#]>

2792:
old  <	fstsw ax>
new  <>

2793:
old  <	sahf>
new  < acos$4:>

2794:
old  <	jb acos$39>
new  <	; SetReturnValue>

2796:
old  < acos$21:>
new  < acos$5:>

2797:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Return 1.57079632679489661923132165>

2798:
old  <>
new  <	mov rax, [rbp]>

2799:
old  < acos$22:>
new  <	mov rdi, [rbp + 16]>

2800:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov rbp, [rbp + 8]>

2801:
old  <>
new  <	jmp rax>

2802:
old  < acos$23:>
new  <>

2803:
old  <	; PushFloat 1>
new  < acos$6:>

2804:
old  <	fld1>
new  <	; PushFloat x>

2805:
old  <>
new  <	fld qword [rbp + 24]>

2806:
old  < acos$24:>
new  <>

2807:
old  <	; PushFloat x>
new  < acos$7:>

2808:
old  <	fld qword [rbp + 24]>
new  <	; PushFloat 0>

2809:
old  <>
new  <	fldz>

2810:
old  < acos$25:>
new  <>

2811:
old  <	; PushFloat x>
new  < acos$8:>

2812:
old  <	fld qword [rbp + 24]>
new  <	; SignedGreaterThanEqual 20 x 0>

2813:
old  <>
new  <	fcompp>

2814:
old  < acos$26:>
new  <	fstsw ax>

2815:
old  <	; SignedMultiply Â£temporary584 x x>
new  <	sahf>

2816:
old  <	fmul>
new  <	jbe acos$20>

2818:
old  < acos$27:>
new  < acos$9:>

2819:
old  <	; BinarySubtract Â£temporary585 1 Â£temporary584>
new  <	; PushFloat 3.1415926535897932384626433>

2820:
old  <	fsub>
new  <	fld qword [float8$3.1415926535897932384626433#]>

2822:
old  < acos$28:>
new  < acos$10:>

2823:
old  <	; Parameter 56 double Â£temporary585>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 1>

2824:
old  <	fstp qword [rbp + 56]>
new  <	fstp qword [rbp + 32]>

2826:
old  < acos$29:>
new  < acos$11:>

2827:
old  <	; Call 32 sqrt 0>
new  <	; PushFloat x>

2828:
old  <	mov qword [rbp + 32], acos$30>
new  <	fld qword [rbp + 24]>

2829:
old  <	mov [rbp + 40], rbp>
new  <>

2830:
old  <	add rbp, 32>
new  < acos$12:>

2831:
old  <	jmp sqrt>
new  <	; UnarySubtract Â£temporary580 x>

2832:
old  <>
new  <	fchs>

2833:
old  < acos$30:>
new  <>

2834:
old  <	; PostCall 32>
new  < acos$13:>

2835:
old  <>
new  <	; Parameter 56 double Â£temporary580>

2836:
old  < acos$31:>
new  <	fstp qword [rbp + 64]>

2837:
old  <	; GetReturnValue Â£temporary586>
new  <>

2838:
old  <>
new  < acos$14:>

2839:
old  < acos$32:>
new  <	; Call 32 acos 0>

2840:
old  <	; PushFloat x>
new  <	mov qword [rbp + 40], acos$15>

2841:
old  <	fld qword [rbp + 24]>
new  <	mov [rbp + 48], rbp>

2842:
old  <>
new  <	add rbp, 40>

2843:
old  < acos$33:>
new  <	jmp acos>

2844:
old  <	; SignedDivide Â£temporary587 Â£temporary586 x>
new  <>

2845:
old  <	fdiv>
new  < acos$15:>

2846:
old  <>
new  <	; PostCall 32>

2847:
old  < acos$34:>
new  <	fstp qword [rbp + 40]>

2848:
old  <	; Parameter 56 double Â£temporary587>
new  <	fld qword [rbp + 32]>

2849:
old  <	fstp qword [rbp + 56]>
new  <	fld qword [rbp + 40]>

2851:
old  < acos$35:>
new  < acos$16:>

2852:
old  <	; Call 32 atan 0>
new  <	; GetReturnValue Â£temporary581>

2853:
old  <	mov qword [rbp + 32], acos$36>
new  <>

2854:
old  <	mov [rbp + 40], rbp>
new  < acos$17:>

2855:
old  <	add rbp, 32>
new  <	; BinarySubtract Â£temporary582 3.1415926535897932384626433 Â£temporary581>

2856:
old  <	jmp atan>
new  <	fsub>

2858:
old  < acos$36:>
new  < acos$18:>

2859:
old  <	; PostCall 32>
new  <	; SetReturnValue>

2861:
old  < acos$37:>
new  < acos$19:>

2862:
old  <	; GetReturnValue Â£temporary588>
new  <	; Return Â£temporary582>

2863:
old  <>
new  <	mov rax, [rbp]>

2864:
old  < acos$38:>
new  <	mov rdi, [rbp + 16]>

2865:
old  <	; Return Â£temporary588>
new  <	mov rbp, [rbp + 8]>

2866:
old  <	mov rax, [rbp]>
new  <	jmp rax>

2867:
old  <	mov rdi, [rbp + 16]>
new  <>

2868:
old  <	mov rbp, [rbp + 8]>
new  < acos$20:>

2869:
old  <	jmp rax>
new  <	; PushFloat x>

2870:
old  <>
new  <	fld qword [rbp + 24]>

2871:
old  < acos$39:>
new  <>

2872:
old  <	; Assign errno 6>
new  < acos$21:>

2873:
old  <	mov dword [errno], 6>
new  <	; PushFloat 1>

2874:
old  <>
new  <	fld1>

2875:
old  < acos$40:>
new  <>

2876:
old  <	; PushFloat 0>
new  < acos$22:>

2877:
old  <	fldz>
new  <	; SignedGreaterThan 42 x 1>

2878:
old  <>
new  <	fcompp>

2879:
old  < acos$41:>
new  <	fstsw ax>

2880:
old  <	; Return 0>
new  <	sahf>

2881:
old  <	mov rax, [rbp]>
new  <	jb acos$42>

2882:
old  <	mov rdi, [rbp + 16]>
new  <>

2883:
old  <	mov rbp, [rbp + 8]>
new  < acos$23:>

2884:
old  <	jmp rax>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2886:
old  < acos$42:>
new  < acos$24:>

2887:
old  <	; FunctionEnd acos>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2889:
old  <section .data>
new  < acos$25:>

2890:
old  <>
new  <	; PushFloat 1>

2891:
old  <float8$0.5#:>
new  <	fld1>

2892:
old  <	; Initializer Double 0.5>
new  <>

2893:
old  <	dq 0.5>
new  < acos$26:>

2894:
old  <>
new  <	; PushFloat x>

2895:
old  <section .text>
new  <	fld qword [rbp + 24]>

2897:
old  < atan:>
new  < acos$27:>

2901:
old  < atan$1:>
new  < acos$28:>

2902:
old  <	; PushFloat 0>
new  <	; SignedMultiply Â£temporary584 x x>

2903:
old  <	fldz>
new  <	fmul>

2905:
old  < atan$2:>
new  < acos$29:>

2906:
old  <	; SignedGreaterThanEqual 12 x 0>
new  <	; BinarySubtract Â£temporary585 1 Â£temporary584>

2907:
old  <	fcompp>
new  <	fsub>

2908:
old  <	fstsw ax>
new  <>

2909:
old  <	sahf>
new  < acos$30:>

2910:
old  <	jbe atan$12>
new  <	; Parameter 56 double Â£temporary585>

2911:
old  <>
new  <	fstp qword [rbp + 56]>

2912:
old  < atan$3:>
new  <>

2913:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < acos$31:>

2914:
old  <>
new  <	; Call 32 sqrt 0>

2915:
old  < atan$4:>
new  <	mov qword [rbp + 32], acos$32>

2916:
old  <	; PushFloat x>
new  <	mov [rbp + 40], rbp>

2917:
old  <	fld qword [rbp + 24]>
new  <	add rbp, 32>

2918:
old  <>
new  <	jmp sqrt>

2919:
old  < atan$5:>
new  <>

2920:
old  <	; UnarySubtract Â£temporary593 x>
new  < acos$32:>

2921:
old  <	fchs>
new  <	; PostCall 32>

2923:
old  < atan$6:>
new  < acos$33:>

2924:
old  <	; Parameter 56 double Â£temporary593>
new  <	; GetReturnValue Â£temporary586>

2925:
old  <	fstp qword [rbp + 56]>
new  <>

2926:
old  <>
new  < acos$34:>

2927:
old  < atan$7:>
new  <	; PushFloat x>

2928:
old  <	; Call 32 atan 0>
new  <	fld qword [rbp + 24]>

2929:
old  <	mov qword [rbp + 32], atan$8>
new  <>

2930:
old  <	mov [rbp + 40], rbp>
new  < acos$35:>

2931:
old  <	add rbp, 32>
new  <	; SignedDivide Â£temporary587 Â£temporary586 x>

2932:
old  <	jmp atan>
new  <	fdiv>

2934:
old  < atan$8:>
new  < acos$36:>

2935:
old  <	; PostCall 32>
new  <	; Parameter 56 double Â£temporary587>

2936:
old  <>
new  <	fstp qword [rbp + 56]>

2937:
old  < atan$9:>
new  <>

2938:
old  <	; GetReturnValue Â£temporary594>
new  < acos$37:>

2939:
old  <>
new  <	; Call 32 atan 0>

2940:
old  < atan$10:>
new  <	mov qword [rbp + 32], acos$38>

2941:
old  <	; UnarySubtract Â£temporary595 Â£temporary594>
new  <	mov [rbp + 40], rbp>

2942:
old  <	fchs>
new  <	add rbp, 32>

2943:
old  <>
new  <	jmp atan>

2944:
old  < atan$11:>
new  <>

2945:
old  <	; Return Â£temporary595>
new  < acos$38:>

2946:
old  <	mov rax, [rbp]>
new  <	; PostCall 32>

2947:
old  <	mov rdi, [rbp + 16]>
new  <>

2948:
old  <	mov rbp, [rbp + 8]>
new  < acos$39:>

2949:
old  <	jmp rax>
new  <	; GetReturnValue Â£temporary588>

2951:
old  < atan$12:>
new  < acos$40:>

2952:
old  <	; PushFloat x>
new  <	; SetReturnValue>

2953:
old  <	fld qword [rbp + 24]>
new  <>

2954:
old  <>
new  < acos$41:>

2955:
old  < atan$13:>
new  <	; Return Â£temporary588>

2956:
old  <	; PushFloat 1>
new  <	mov rax, [rbp]>

2957:
old  <	fld1>
new  <	mov rdi, [rbp + 16]>

2958:
old  <>
new  <	mov rbp, [rbp + 8]>

2959:
old  < atan$14:>
new  <	jmp rax>

2960:
old  <	; SignedLessThanEqual 26 x 1>
new  <>

2961:
old  <	fcompp>
new  < acos$42:>

2962:
old  <	fstsw ax>
new  <	; Assign errno 6>

2963:
old  <	sahf>
new  <	mov dword [errno], 6>

2964:
old  <	jae atan$26>
new  <>

2965:
old  <>
new  < acos$43:>

2966:
old  < atan$15:>
new  <	; PushFloat 0>

2967:
old  <	; PushFloat 1.57079632679489661923132165>
new  <	fldz>

2968:
old  <	fld qword [float8$1.57079632679489661923132165#]>
new  <>

2969:
old  <>
new  < acos$44:>

2970:
old  < atan$16:>
new  <	; SetReturnValue>

2971:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 1>
new  <>

2972:
old  <	fstp qword [rbp + 32]>
new  < acos$45:>

2973:
old  <>
new  <	; Return 0>

2974:
old  < atan$17:>
new  <	mov rax, [rbp]>

2975:
old  <	; PushFloat 1>
new  <	mov rdi, [rbp + 16]>

2976:
old  <	fld1>
new  <	mov rbp, [rbp + 8]>

2977:
old  <>
new  <	jmp rax>

2978:
old  < atan$18:>
new  <>

2979:
old  <	; PushFloat x>
new  < acos$46:>

2980:
old  <	fld qword [rbp + 24]>
new  <	; FunctionEnd acos>

2982:
old  < atan$19:>
new  <section .data>

2983:
old  <	; SignedDivide Â£temporary597 1 x>
new  <>

2984:
old  <	fdiv>
new  <float8$0.5#:>

2985:
old  <>
new  <	; Initializer Double 0.5>

2986:
old  < atan$20:>
new  <	dq 0.5>

2987:
old  <	; Parameter 56 double Â£temporary597>
new  <>

2988:
old  <	fstp qword [rbp + 64]>
new  <section .text>

2990:
old  < atan$21:>
new  < atan:>

2991:
old  <	; Call 32 atan 0>
new  <	; PushFloat x>

2992:
old  <	mov qword [rbp + 40], atan$22>
new  <	fld qword [rbp + 24]>

2993:
old  <	mov [rbp + 48], rbp>
new  <>

2994:
old  <	add rbp, 40>
new  < atan$1:>

2995:
old  <	jmp atan>
new  <	; PushFloat 0>

2996:
old  <>
new  <	fldz>

2997:
old  < atan$22:>
new  <>

2998:
old  <	; PostCall 32>
new  < atan$2:>

2999:
old  <	fstp qword [rbp + 40]>
new  <	; SignedGreaterThanEqual 13 x 0>

3000:
old  <	fld qword [rbp + 32]>
new  <	fcompp>

3001:
old  <	fld qword [rbp + 40]>
new  <	fstsw ax>

3002:
old  <>
new  <	sahf>

3003:
old  < atan$23:>
new  <	jbe atan$13>

3004:
old  <	; GetReturnValue Â£temporary598>
new  <>

3005:
old  <>
new  < atan$3:>

3006:
old  < atan$24:>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3007:
old  <	; BinarySubtract Â£temporary599 1.57079632679489661923132165 Â£temporary598>
new  <>

3008:
old  <	fsub>
new  < atan$4:>

3009:
old  <>
new  <	; PushFloat x>

3010:
old  < atan$25:>
new  <	fld qword [rbp + 24]>

3011:
old  <	; Return Â£temporary599>
new  <>

3012:
old  <	mov rax, [rbp]>
new  < atan$5:>

3013:
old  <	mov rdi, [rbp + 16]>
new  <	; UnarySubtract Â£temporary593 x>

3014:
old  <	mov rbp, [rbp + 8]>
new  <	fchs>

3015:
old  <	jmp rax>
new  <>

3016:
old  <>
new  < atan$6:>

3017:
old  < atan$26:>
new  <	; Parameter 56 double Â£temporary593>

3018:
old  <	; PushFloat x>
new  <	fstp qword [rbp + 56]>

3019:
old  <	fld qword [rbp + 24]>
new  <>

3020:
old  <>
new  < atan$7:>

3021:
old  < atan$27:>
new  <	; Call 32 atan 0>

3022:
old  <	; PushFloat 0.5>
new  <	mov qword [rbp + 32], atan$8>

3023:
old  <	fld qword [float8$0.5#]>
new  <	mov [rbp + 40], rbp>

3024:
old  <>
new  <	add rbp, 32>

3025:
old  < atan$28:>
new  <	jmp atan>

3026:
old  <	; SignedLessThanEqual 51 x 0.5>
new  <>

3027:
old  <	fcompp>
new  < atan$8:>

3028:
old  <	fstsw ax>
new  <	; PostCall 32>

3029:
old  <	sahf>
new  <>

3030:
old  <	jae atan$51>
new  < atan$9:>

3031:
old  <>
new  <	; GetReturnValue Â£temporary594>

3032:
old  < atan$29:>
new  <>

3033:
old  <	; PushFloat 2>
new  < atan$10:>

3034:
old  <	fld qword [float8$2#]>
new  <	; UnarySubtract Â£temporary595 Â£temporary594>

3035:
old  <>
new  <	fchs>

3036:
old  < atan$30:>
new  <>

3037:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 1>
new  < atan$11:>

3038:
old  <	fstp qword [rbp + 32]>
new  <	; SetReturnValue>

3040:
old  < atan$31:>
new  < atan$12:>

3041:
old  <	; PushFloat x>
new  <	; Return Â£temporary595>

3042:
old  <	fld qword [rbp + 24]>
new  <	mov rax, [rbp]>

3043:
old  <>
new  <	mov rdi, [rbp + 16]>

3044:
old  < atan$32:>
new  <	mov rbp, [rbp + 8]>

3045:
old  <	; PushFloat 1>
new  <	jmp rax>

3046:
old  <	fld1>
new  <>

3047:
old  <>
new  < atan$13:>

3048:
old  < atan$33:>
new  <	; PushFloat x>

3049:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 3>
new  <	fld qword [rbp + 24]>

3050:
old  <	fstp qword [rbp + 40]>
new  <>

3051:
old  <	fstp qword [rbp + 48]>
new  < atan$14:>

3052:
old  <>
new  <	; PushFloat 1>

3053:
old  < atan$34:>
new  <	fld1>

3054:
old  <	; PushFloat 1>
new  <>

3055:
old  <	fld1>
new  < atan$15:>

3056:
old  <>
new  <	; SignedLessThanEqual 28 x 1>

3057:
old  < atan$35:>
new  <	fcompp>

3058:
old  <	; PushFloat x>
new  <	fstsw ax>

3059:
old  <	fld qword [rbp + 24]>
new  <	sahf>

3060:
old  <>
new  <	jae atan$28>

3061:
old  < atan$36:>
new  <>

3062:
old  <	; PushFloat x>
new  < atan$16:>

3063:
old  <	fld qword [rbp + 24]>
new  <	; PushFloat 1.57079632679489661923132165>

3064:
old  <>
new  <	fld qword [float8$1.57079632679489661923132165#]>

3065:
old  < atan$37:>
new  <>

3066:
old  <	; SignedMultiply Â£temporary601 x x>
new  < atan$17:>

3067:
old  <	fmul>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 1>

3068:
old  <>
new  <	fstp qword [rbp + 32]>

3069:
old  < atan$38:>
new  <>

3070:
old  <	; BinaryAdd Â£temporary602 1 Â£temporary601>
new  < atan$18:>

3071:
old  <	fadd>
new  <	; PushFloat 1>

3072:
old  <>
new  <	fld1>

3073:
old  < atan$39:>
new  <>

3074:
old  <	; Parameter 56 double Â£temporary602>
new  < atan$19:>

3075:
old  <	fstp qword [rbp + 88]>
new  <	; PushFloat x>

3076:
old  <>
new  <	fld qword [rbp + 24]>

3077:
old  < atan$40:>
new  <>

3078:
old  <	; Call 32 sqrt 0>
new  < atan$20:>

3079:
old  <	mov qword [rbp + 64], atan$41>
new  <	; SignedDivide Â£temporary597 1 x>

3080:
old  <	mov [rbp + 72], rbp>
new  <	fdiv>

3081:
old  <	add rbp, 64>
new  <>

3082:
old  <	jmp sqrt>
new  < atan$21:>

3083:
old  <>
new  <	; Parameter 56 double Â£temporary597>

3084:
old  < atan$41:>
new  <	fstp qword [rbp + 64]>

3085:
old  <	; PostCall 32>
new  <>

3086:
old  <	fstp qword [rbp + 56]>
new  < atan$22:>

3087:
old  <	fld qword [rbp + 48]>
new  <	; Call 32 atan 0>

3088:
old  <	fld qword [rbp + 40]>
new  <	mov qword [rbp + 40], atan$23>

3089:
old  <	fld qword [rbp + 56]>
new  <	mov [rbp + 48], rbp>

3090:
old  <>
new  <	add rbp, 40>

3091:
old  < atan$42:>
new  <	jmp atan>

3092:
old  <	; GetReturnValue Â£temporary603>
new  <>

3093:
old  <>
new  < atan$23:>

3094:
old  < atan$43:>
new  <	; PostCall 32>

3095:
old  <	; BinaryAdd Â£temporary604 1 Â£temporary603>
new  <	fstp qword [rbp + 40]>

3096:
old  <	fadd>
new  <	fld qword [rbp + 32]>

3097:
old  <>
new  <	fld qword [rbp + 40]>

3098:
old  < atan$44:>
new  <>

3099:
old  <	; SignedDivide Â£temporary605 x Â£temporary604>
new  < atan$24:>

3100:
old  <	fdiv>
new  <	; GetReturnValue Â£temporary598>

3102:
old  < atan$45:>
new  < atan$25:>

3103:
old  <	; Parameter 56 double Â£temporary605>
new  <	; BinarySubtract Â£temporary599 1.57079632679489661923132165 Â£temporary598>

3104:
old  <	fstp qword [rbp + 64]>
new  <	fsub>

3106:
old  < atan$46:>
new  < atan$26:>

3107:
old  <	; Call 32 atan 0>
new  <	; SetReturnValue>

3108:
old  <	mov qword [rbp + 40], atan$47>
new  <>

3109:
old  <	mov [rbp + 48], rbp>
new  < atan$27:>

3110:
old  <	add rbp, 40>
new  <	; Return Â£temporary599>

3111:
old  <	jmp atan>
new  <	mov rax, [rbp]>

3112:
old  <>
new  <	mov rdi, [rbp + 16]>

3113:
old  < atan$47:>
new  <	mov rbp, [rbp + 8]>

3114:
old  <	; PostCall 32>
new  <	jmp rax>

3115:
old  <	fstp qword [rbp + 40]>
new  <>

3116:
old  <	fld qword [rbp + 32]>
new  < atan$28:>

3117:
old  <	fld qword [rbp + 40]>
new  <	; PushFloat x>

3118:
old  <>
new  <	fld qword [rbp + 24]>

3119:
old  < atan$48:>
new  <>

3120:
old  <	; GetReturnValue Â£temporary606>
new  < atan$29:>

3121:
old  <>
new  <	; PushFloat 0.5>

3122:
old  < atan$49:>
new  <	fld qword [float8$0.5#]>

3123:
old  <	; SignedMultiply Â£temporary607 2 Â£temporary606>
new  <>

3124:
old  <	fmul>
new  < atan$30:>

3125:
old  <>
new  <	; SignedLessThanEqual 54 x 0.5>

3126:
old  < atan$50:>
new  <	fcompp>

3127:
old  <	; Return Â£temporary607>
new  <	fstsw ax>

3128:
old  <	mov rax, [rbp]>
new  <	sahf>

3129:
old  <	mov rdi, [rbp + 16]>
new  <	jae atan$54>

3130:
old  <	mov rbp, [rbp + 8]>
new  <>

3131:
old  <	jmp rax>
new  < atan$31:>

3132:
old  <>
new  <	; PushFloat 2>

3133:
old  < atan$51:>
new  <	fld qword [float8$2#]>

3134:
old  <	; PushFloat 0>
new  <>

3135:
old  <	fldz>
new  < atan$32:>

3136:
old  <>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 1>

3137:
old  < atan$52:>
new  <	fstp qword [rbp + 32]>

3138:
old  <	; PopFloat sum>
new  <>

3139:
old  <	fstp qword [rbp + 40]>
new  < atan$33:>

3140:
old  <>
new  <	; PushFloat x>

3141:
old  < atan$53:>
new  <	fld qword [rbp + 24]>

3142:
old  <	; PushFloat 1>
new  <>

3143:
old  <	fld1>
new  < atan$34:>

3144:
old  <>
new  <	; PushFloat 1>

3145:
old  < atan$54:>
new  <	fld1>

3146:
old  <	; PopFloat sign>
new  <>

3147:
old  <	fstp qword [rbp + 48]>
new  < atan$35:>

3148:
old  <>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 3>

3149:
old  < atan$55:>
new  <	fstp qword [rbp + 40]>

3150:
old  <	; PushFloat 1>
new  <	fstp qword [rbp + 48]>

3151:
old  <	fld1>
new  <>

3152:
old  <>
new  < atan$36:>

3153:
old  < atan$56:>
new  <	; PushFloat 1>

3154:
old  <	; PopFloat denominator>
new  <	fld1>

3155:
old  <	fstp qword [rbp + 56]>
new  <>

3156:
old  <>
new  < atan$37:>

3157:
old  < atan$57:>
new  <	; PushFloat x>

3158:
old  <	; PushFloat x>
new  <	fld qword [rbp + 24]>

3159:
old  <	fld qword [rbp + 24]>
new  <>

3160:
old  <>
new  < atan$38:>

3161:
old  < atan$58:>
new  <	; PushFloat x>

3162:
old  <	; PopFloat product>
new  <	fld qword [rbp + 24]>

3163:
old  <	fstp qword [rbp + 64]>
new  <>

3164:
old  <>
new  < atan$39:>

3165:
old  < atan$59:>
new  <	; SignedMultiply Â£temporary601 x x>

3166:
old  <	; PushFloat sign>
new  <	fmul>

3167:
old  <	fld qword [rbp + 48]>
new  <>

3168:
old  <>
new  < atan$40:>

3169:
old  < atan$60:>
new  <	; BinaryAdd Â£temporary602 1 Â£temporary601>

3170:
old  <	; PushFloat product>
new  <	fadd>

3171:
old  <	fld qword [rbp + 64]>
new  <>

3172:
old  <>
new  < atan$41:>

3173:
old  < atan$61:>
new  <	; Parameter 56 double Â£temporary602>

3174:
old  <	; SignedMultiply Â£temporary608 sign product>
new  <	fstp qword [rbp + 88]>

3175:
old  <	fmul>
new  <>

3176:
old  <>
new  < atan$42:>

3177:
old  < atan$62:>
new  <	; Call 32 sqrt 0>

3178:
old  <	; PushFloat denominator>
new  <	mov qword [rbp + 64], atan$43>

3179:
old  <	fld qword [rbp + 56]>
new  <	mov [rbp + 72], rbp>

3180:
old  <>
new  <	add rbp, 64>

3181:
old  < atan$63:>
new  <	jmp sqrt>

3182:
old  <	; SignedDivide Â£temporary609 Â£temporary608 denominator>
new  <>

3183:
old  <	fdiv>
new  < atan$43:>

3184:
old  <>
new  <	; PostCall 32>

3185:
old  < atan$64:>
new  <	fstp qword [rbp + 56]>

3186:
old  <	; PopFloat term>
new  <	fld qword [rbp + 48]>

3187:
old  <	fstp qword [rbp + 32]>
new  <	fld qword [rbp + 40]>

3188:
old  <>
new  <	fld qword [rbp + 56]>

3189:
old  < atan$65:>
new  <>

3190:
old  <	; PushFloat sum>
new  < atan$44:>

3191:
old  <	fld qword [rbp + 40]>
new  <	; GetReturnValue Â£temporary603>

3193:
old  < atan$66:>
new  < atan$45:>

3194:
old  <	; PushFloat term>
new  <	; BinaryAdd Â£temporary604 1 Â£temporary603>

3195:
old  <	fld qword [rbp + 32]>
new  <	fadd>

3197:
old  < atan$67:>
new  < atan$46:>

3198:
old  <	; BinaryAdd Â£temporary610 sum term>
new  <	; SignedDivide Â£temporary605 x Â£temporary604>

3199:
old  <	fadd>
new  <	fdiv>

3201:
old  < atan$68:>
new  < atan$47:>

3202:
old  <	; PopFloat sum>
new  <	; Parameter 56 double Â£temporary605>

3203:
old  <	fstp qword [rbp + 40]>
new  <	fstp qword [rbp + 64]>

3205:
old  < atan$69:>
new  < atan$48:>

3206:
old  <	; PushFloat sign>
new  <	; Call 32 atan 0>

3207:
old  <	fld qword [rbp + 48]>
new  <	mov qword [rbp + 40], atan$49>

3208:
old  <>
new  <	mov [rbp + 48], rbp>

3209:
old  < atan$70:>
new  <	add rbp, 40>

3210:
old  <	; UnarySubtract Â£temporary611 sign>
new  <	jmp atan>

3211:
old  <	fchs>
new  <>

3212:
old  <>
new  < atan$49:>

3213:
old  < atan$71:>
new  <	; PostCall 32>

3214:
old  <	; PopFloat sign>
new  <	fstp qword [rbp + 40]>

3215:
old  <	fstp qword [rbp + 48]>
new  <	fld qword [rbp + 32]>

3216:
old  <>
new  <	fld qword [rbp + 40]>

3217:
old  < atan$72:>
new  <>

3218:
old  <	; PushFloat product>
new  < atan$50:>

3219:
old  <	fld qword [rbp + 64]>
new  <	; GetReturnValue Â£temporary606>

3221:
old  < atan$73:>
new  < atan$51:>

3222:
old  <	; PushFloat x>
new  <	; SignedMultiply Â£temporary607 2 Â£temporary606>

3223:
old  <	fld qword [rbp + 24]>
new  <	fmul>

3225:
old  < atan$74:>
new  < atan$52:>

3226:
old  <	; PushFloat x>
new  <	; SetReturnValue>

3227:
old  <	fld qword [rbp + 24]>
new  <>

3228:
old  <>
new  < atan$53:>

3229:
old  < atan$75:>
new  <	; Return Â£temporary607>

3230:
old  <	; SignedMultiply Â£temporary612 x x>
new  <	mov rax, [rbp]>

3231:
old  <	fmul>
new  <	mov rdi, [rbp + 16]>

3232:
old  <>
new  <	mov rbp, [rbp + 8]>

3233:
old  < atan$76:>
new  <	jmp rax>

3234:
old  <	; SignedMultiply Â£temporary613 product Â£temporary612>
new  <>

3235:
old  <	fmul>
new  < atan$54:>

3236:
old  <>
new  <	; PushFloat 0>

3237:
old  < atan$77:>
new  <	fldz>

3238:
old  <	; PopFloat product>
new  <>

3239:
old  <	fstp qword [rbp + 64]>
new  < atan$55:>

3240:
old  <>
new  <	; PopFloat sum>

3241:
old  < atan$78:>
new  <	fstp qword [rbp + 40]>

3242:
old  <	; PushFloat denominator>
new  <>

3243:
old  <	fld qword [rbp + 56]>
new  < atan$56:>

3244:
old  <>
new  <	; PushFloat 1>

3245:
old  < atan$79:>
new  <	fld1>

3246:
old  <	; PushFloat 2>
new  <>

3247:
old  <	fld qword [float8$2#]>
new  < atan$57:>

3248:
old  <>
new  <	; PopFloat sign>

3249:
old  < atan$80:>
new  <	fstp qword [rbp + 48]>

3250:
old  <	; BinaryAdd Â£temporary614 denominator 2>
new  <>

3251:
old  <	fadd>
new  < atan$58:>

3252:
old  <>
new  <	; PushFloat 1>

3253:
old  < atan$81:>
new  <	fld1>

3254:
old  <	; PopFloat denominator>
new  <>

3255:
old  <	fstp qword [rbp + 56]>
new  < atan$59:>

3256:
old  <>
new  <	; PopFloat denominator>

3257:
old  < atan$82:>
new  <	fstp qword [rbp + 56]>

3258:
old  <	; PreCall 72 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

3259:
old  <>
new  < atan$60:>

3260:
old  < atan$83:>
new  <	; PushFloat x>

3261:
old  <	; PushFloat term>
new  <	fld qword [rbp + 24]>

3262:
old  <	fld qword [rbp + 32]>
new  <>

3263:
old  <>
new  < atan$61:>

3264:
old  < atan$84:>
new  <	; PopFloat product>

3265:
old  <	; Parameter 96 double term>
new  <	fstp qword [rbp + 64]>

3266:
old  <	fstp qword [rbp + 96]>
new  <>

3267:
old  <>
new  < atan$62:>

3268:
old  < atan$85:>
new  <	; PushFloat sign>

3269:
old  <	; Call 72 fabs 0>
new  <	fld qword [rbp + 48]>

3270:
old  <	mov qword [rbp + 72], atan$86>
new  <>

3271:
old  <	mov [rbp + 80], rbp>
new  < atan$63:>

3272:
old  <	add rbp, 72>
new  <	; PushFloat product>

3273:
old  <	jmp fabs>
new  <	fld qword [rbp + 64]>

3275:
old  < atan$86:>
new  < atan$64:>

3276:
old  <	; PostCall 72>
new  <	; SignedMultiply Â£temporary608 sign product>

3277:
old  <>
new  <	fmul>

3278:
old  < atan$87:>
new  <>

3279:
old  <	; GetReturnValue Â£temporary615>
new  < atan$65:>

3280:
old  <>
new  <	; PushFloat denominator>

3281:
old  < atan$88:>
new  <	fld qword [rbp + 56]>

3282:
old  <	; PushFloat 0.000000001>
new  <>

3283:
old  <	fld qword [float8$0.000000001#]>
new  < atan$66:>

3284:
old  <>
new  <	; SignedDivide Â£temporary609 Â£temporary608 denominator>

3285:
old  < atan$89:>
new  <	fdiv>

3286:
old  <	; SignedGreaterThanEqual 59 Â£temporary615 0.000000001>
new  <>

3287:
old  <	fcompp>
new  < atan$67:>

3288:
old  <	fstsw ax>
new  <	; PopFloat term>

3289:
old  <	sahf>
new  <	fstp qword [rbp + 32]>

3290:
old  <	jbe atan$59>
new  <>

3291:
old  <>
new  < atan$68:>

3292:
old  < atan$90:>
new  <	; PushFloat sum>

3293:
old  <	; PushFloat sum>
new  <	fld qword [rbp + 40]>

3294:
old  <	fld qword [rbp + 40]>
new  <>

3295:
old  <>
new  < atan$69:>

3296:
old  < atan$91:>
new  <	; PushFloat term>

3297:
old  <	; Return sum>
new  <	fld qword [rbp + 32]>

3298:
old  <	mov rax, [rbp]>
new  <>

3299:
old  <	mov rdi, [rbp + 16]>
new  < atan$70:>

3300:
old  <	mov rbp, [rbp + 8]>
new  <	; BinaryAdd Â£temporary610 sum term>

3301:
old  <	jmp rax>
new  <	fadd>

3303:
old  < atan$92:>
new  < atan$71:>

3304:
old  <	; FunctionEnd atan>
new  <	; PopFloat sum>

3305:
old  <>
new  <	fstp qword [rbp + 40]>

3306:
old  <section .data>
new  <>

3307:
old  <>
new  < atan$72:>

3308:
old  <float8$minus3.1415926535897932384626433#:>
new  <	; PushFloat sign>

3309:
old  <	; Initializer Double -3.1415926535897932384626433>
new  <	fld qword [rbp + 48]>

3310:
old  <	dq -3.1415926535897932384626433>
new  <>

3311:
old  <>
new  < atan$73:>

3312:
old  <section .data>
new  <	; UnarySubtract Â£temporary611 sign>

3313:
old  <>
new  <	fchs>

3314:
old  <float8$minus1.57079632679489661923132165#:>
new  <>

3315:
old  <	; Initializer Double -1.57079632679489661923132165>
new  < atan$74:>

3316:
old  <	dq -1.57079632679489661923132165>
new  <	; PopFloat sign>

3317:
old  <>
new  <	fstp qword [rbp + 48]>

3318:
old  <section .text>
new  <>

3319:
old  <>
new  < atan$75:>

3320:
old  < atan2:>
new  <	; PushFloat product>

3321:
old  <	; PushFloat y>
new  <	fld qword [rbp + 64]>

3322:
old  <	fld qword [rbp + 32]>
new  <>

3323:
old  <>
new  < atan$76:>

3324:
old  < atan2$1:>
new  <	; PushFloat x>

3325:
old  <	; PushFloat 0>
new  <	fld qword [rbp + 24]>

3326:
old  <	fldz>
new  <>

3327:
old  <>
new  < atan$77:>

3328:
old  < atan2$2:>
new  <	; PushFloat x>

3329:
old  <	; SignedLessThanEqual 12 y 0>
new  <	fld qword [rbp + 24]>

3330:
old  <	fcompp>
new  <>

3331:
old  <	fstsw ax>
new  < atan$78:>

3332:
old  <	sahf>
new  <	; SignedMultiply Â£temporary612 x x>

3333:
old  <	jae atan2$12>
new  <	fmul>

3335:
old  < atan2$3:>
new  < atan$79:>

3336:
old  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; SignedMultiply Â£temporary613 product Â£temporary612>

3337:
old  <>
new  <	fmul>

3338:
old  < atan2$4:>
new  <>

3339:
old  <	; PushFloat x>
new  < atan$80:>

3340:
old  <	fld qword [rbp + 24]>
new  <	; PopFloat product>

3341:
old  <>
new  <	fstp qword [rbp + 64]>

3342:
old  < atan2$5:>
new  <>

3343:
old  <	; PushFloat y>
new  < atan$81:>

3344:
old  <	fld qword [rbp + 32]>
new  <	; PushFloat denominator>

3345:
old  <>
new  <	fld qword [rbp + 56]>

3346:
old  < atan2$6:>
new  <>

3347:
old  <	; SignedDivide Â£temporary623 x y>
new  < atan$82:>

3348:
old  <	fdiv>
new  <	; PushFloat 2>

3349:
old  <>
new  <	fld qword [float8$2#]>

3350:
old  < atan2$7:>
new  <>

3351:
old  <	; Parameter 64 double Â£temporary623>
new  < atan$83:>

3352:
old  <	fstp qword [rbp + 64]>
new  <	; BinaryAdd Â£temporary614 denominator 2>

3353:
old  <>
new  <	fadd>

3354:
old  < atan2$8:>
new  <>

3355:
old  <	; Call 40 atan 0>
new  < atan$84:>

3356:
old  <	mov qword [rbp + 40], atan2$9>
new  <	; PopFloat denominator>

3357:
old  <	mov [rbp + 48], rbp>
new  <	fstp qword [rbp + 56]>

3358:
old  <	add rbp, 40>
new  <>

3359:
old  <	jmp atan>
new  < atan$85:>

3360:
old  <>
new  <	; PreCall 72 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3361:
old  < atan2$9:>
new  <>

3362:
old  <	; PostCall 40>
new  < atan$86:>

3363:
old  <>
new  <	; PushFloat term>

3364:
old  < atan2$10:>
new  <	fld qword [rbp + 32]>

3365:
old  <	; GetReturnValue Â£temporary624>
new  <>

3366:
old  <>
new  < atan$87:>

3367:
old  < atan2$11:>
new  <	; Parameter 96 double term>

3368:
old  <	; Return Â£temporary624>
new  <	fstp qword [rbp + 96]>

3369:
old  <	mov rax, [rbp]>
new  <>

3370:
old  <	mov rdi, [rbp + 16]>
new  < atan$88:>

3371:
old  <	mov rbp, [rbp + 8]>
new  <	; Call 72 fabs 0>

3372:
old  <	jmp rax>
new  <	mov qword [rbp + 72], atan$89>

3373:
old  <>
new  <	mov [rbp + 80], rbp>

3374:
old  < atan2$12:>
new  <	add rbp, 72>

3375:
old  <	; PushFloat x>
new  <	jmp fabs>

3376:
old  <	fld qword [rbp + 24]>
new  <>

3377:
old  <>
new  < atan$89:>

3378:
old  < atan2$13:>
new  <	; PostCall 72>

3379:
old  <	; PushFloat 0>
new  <>

3380:
old  <	fldz>
new  < atan$90:>

3381:
old  <>
new  <	; GetReturnValue Â£temporary615>

3382:
old  < atan2$14:>
new  <>

3383:
old  <	; SignedLessThan 29 x 0>
new  < atan$91:>

3384:
old  <	fcompp>
new  <	; PushFloat 0.000000001>

3385:
old  <	fstsw ax>
new  <	fld qword [float8$0.000000001#]>

3386:
old  <	sahf>
new  <>

3387:
old  <	ja atan2$29>
new  < atan$92:>

3388:
old  <>
new  <	; SignedGreaterThanEqual 62 Â£temporary615 0.000000001>

3389:
old  < atan2$15:>
new  <	fcompp>

3390:
old  <	; PushFloat y>
new  <	fstsw ax>

3391:
old  <	fld qword [rbp + 32]>
new  <	sahf>

3392:
old  <>
new  <	jbe atan$62>

3393:
old  < atan2$16:>
new  <>

3394:
old  <	; PushFloat 0>
new  < atan$93:>

3395:
old  <	fldz>
new  <	; PushFloat sum>

3396:
old  <>
new  <	fld qword [rbp + 40]>

3397:
old  < atan2$17:>
new  <>

3398:
old  <	; SignedGreaterThanEqual 29 y 0>
new  < atan$94:>

3399:
old  <	fcompp>
new  <	; SetReturnValue>

3400:
old  <	fstsw ax>
new  <>

3401:
old  <	sahf>
new  < atan$95:>

3402:
old  <	jbe atan2$29>
new  <	; Return sum>

3403:
old  <>
new  <	mov rax, [rbp]>

3404:
old  < atan2$18:>
new  <	mov rdi, [rbp + 16]>

3405:
old  <	; PushFloat 3.1415926535897932384626433>
new  <	mov rbp, [rbp + 8]>

3406:
old  <	fld qword [float8$3.1415926535897932384626433#]>
new  <	jmp rax>

3408:
old  < atan2$19:>
new  < atan$96:>

3409:
old  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 1>
new  <	; FunctionEnd atan>

3410:
old  <	fstp qword [rbp + 40]>
new  <>

3411:
old  <>
new  <section .data>

3412:
old  < atan2$20:>
new  <>

3413:
old  <	; PushFloat x>
new  <float8$minus3.1415926535897932384626433#:>

3414:
old  <	fld qword [rbp + 24]>
new  <	; Initializer Double -3.1415926535897932384626433>

3415:
old  <>
new  <	dq -3.1415926535897932384626433>

3416:
old  < atan2$21:>
new  <>

3417:
old  <	; PushFloat y>
new  <section .data>

3418:
old  <	fld qword [rbp + 32]>
new  <>

3419:
old  <>
new  <float8$minus1.57079632679489661923132165#:>

3420:
old  < atan2$22:>
new  <	; Initializer Double -1.57079632679489661923132165>

3421:
old  <	; SignedDivide Â£temporary628 x y>
new  <	dq -1.57079632679489661923132165>

3422:
old  <	fdiv>
new  <>

3423:
old  <>
new  <section .text>

3424:
old  < atan2$23:>
new  <>

3425:
old  <	; Parameter 64 double Â£temporary628>
new  < atan2:>

3426:
old  <	fstp qword [rbp + 72]>
new  <	; PushFloat y>

3427:
old  <>
new  <	fld qword [rbp + 32]>

3428:
old  < atan2$24:>
new  <>

3429:
old  <	; Call 40 atan 0>
new  < atan2$1:>

3430:
old  <	mov qword [rbp + 48], atan2$25>
new  <	; PushFloat 0>

3431:
old  <	mov [rbp + 56], rbp>
new  <	fldz>

3432:
old  <	add rbp, 48>
new  <>

3433:
old  <	jmp atan>
new  < atan2$2:>

3434:
old  <>
new  <	; SignedLessThanEqual 13 y 0>

3435:
old  < atan2$25:>
new  <	fcompp>

3436:
old  <	; PostCall 40>
new  <	fstsw ax>

3437:
old  <	fstp qword [rbp + 48]>
new  <	sahf>

3438:
old  <	fld qword [rbp + 40]>
new  <	jae atan2$13>

3439:
old  <	fld qword [rbp + 48]>
new  <>

3440:
old  <>
new  < atan2$3:>

3441:
old  < atan2$26:>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3442:
old  <	; GetReturnValue Â£temporary629>
new  <>

3443:
old  <>
new  < atan2$4:>

3444:
old  < atan2$27:>
new  <	; PushFloat x>

3445:
old  <	; BinaryAdd Â£temporary630 3.1415926535897932384626433 Â£temporary629>
new  <	fld qword [rbp + 24]>

3446:
old  <	fadd>
new  <>

3447:
old  <>
new  < atan2$5:>

3448:
old  < atan2$28:>
new  <	; PushFloat y>

3449:
old  <	; Return Â£temporary630>
new  <	fld qword [rbp + 32]>

3450:
old  <	mov rax, [rbp]>
new  <>

3451:
old  <	mov rdi, [rbp + 16]>
new  < atan2$6:>

3452:
old  <	mov rbp, [rbp + 8]>
new  <	; SignedDivide Â£temporary623 x y>

3453:
old  <	jmp rax>
new  <	fdiv>

3455:
old  < atan2$29:>
new  < atan2$7:>

3456:
old  <	; PushFloat x>
new  <	; Parameter 64 double Â£temporary623>

3457:
old  <	fld qword [rbp + 24]>
new  <	fstp qword [rbp + 64]>

3459:
old  < atan2$30:>
new  < atan2$8:>

3460:
old  <	; PushFloat 0>
new  <	; Call 40 atan 0>

3461:
old  <	fldz>
new  <	mov qword [rbp + 40], atan2$9>

3462:
old  <>
new  <	mov [rbp + 48], rbp>

3463:
old  < atan2$31:>
new  <	add rbp, 40>

3464:
old  <	; SignedGreaterThanEqual 46 x 0>
new  <	jmp atan>

3465:
old  <	fcompp>
new  <>

3466:
old  <	fstsw ax>
new  < atan2$9:>

3467:
old  <	sahf>
new  <	; PostCall 40>

3468:
old  <	jbe atan2$46>
new  <>

3469:
old  <>
new  < atan2$10:>

3470:
old  < atan2$32:>
new  <	; GetReturnValue Â£temporary624>

3471:
old  <	; PushFloat y>
new  <>

3472:
old  <	fld qword [rbp + 32]>
new  < atan2$11:>

3473:
old  <>
new  <	; SetReturnValue>

3474:
old  < atan2$33:>
new  <>

3475:
old  <	; PushFloat 0>
new  < atan2$12:>

3476:
old  <	fldz>
new  <	; Return Â£temporary624>

3477:
old  <>
new  <	mov rax, [rbp]>

3478:
old  < atan2$34:>
new  <	mov rdi, [rbp + 16]>

3479:
old  <	; SignedGreaterThanEqual 46 y 0>
new  <	mov rbp, [rbp + 8]>

3480:
old  <	fcompp>
new  <	jmp rax>

3481:
old  <	fstsw ax>
new  <>

3482:
old  <	sahf>
new  < atan2$13:>

3483:
old  <	jbe atan2$46>
new  <	; PushFloat x>

3484:
old  <>
new  <	fld qword [rbp + 24]>

3485:
old  < atan2$35:>
new  <>

3486:
old  <	; PushFloat -3.1415926535897932384626433>
new  < atan2$14:>

3487:
old  <	fld qword [float8$minus3.1415926535897932384626433#]>
new  <	; PushFloat 0>

3488:
old  <>
new  <	fldz>

3489:
old  < atan2$36:>
new  <>

3490:
old  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 1>
new  < atan2$15:>

3491:
old  <	fstp qword [rbp + 40]>
new  <	; SignedLessThan 31 x 0>

3492:
old  <>
new  <	fcompp>

3493:
old  < atan2$37:>
new  <	fstsw ax>

3494:
old  <	; PushFloat x>
new  <	sahf>

3495:
old  <	fld qword [rbp + 24]>
new  <	ja atan2$31>

3497:
old  < atan2$38:>
new  < atan2$16:>

3501:
old  < atan2$39:>
new  < atan2$17:>

3502:
old  <	; SignedDivide Â£temporary634 x y>
new  <	; PushFloat 0>

3503:
old  <	fdiv>
new  <	fldz>

3505:
old  < atan2$40:>
new  < atan2$18:>

3506:
old  <	; Parameter 64 double Â£temporary634>
new  <	; SignedGreaterThanEqual 31 y 0>

3507:
old  <	fstp qword [rbp + 72]>
new  <	fcompp>

3508:
old  <>
new  <	fstsw ax>

3509:
old  < atan2$41:>
new  <	sahf>

3510:
old  <	; Call 40 atan 0>
new  <	jbe atan2$31>

3511:
old  <	mov qword [rbp + 48], atan2$42>
new  <>

3512:
old  <	mov [rbp + 56], rbp>
new  < atan2$19:>

3513:
old  <	add rbp, 48>
new  <	; PushFloat 3.1415926535897932384626433>

3514:
old  <	jmp atan>
new  <	fld qword [float8$3.1415926535897932384626433#]>

3516:
old  < atan2$42:>
new  < atan2$20:>

3517:
old  <	; PostCall 40>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 1>

3518:
old  <	fstp qword [rbp + 48]>
new  <	fstp qword [rbp + 40]>

3519:
old  <	fld qword [rbp + 40]>
new  <>

3520:
old  <	fld qword [rbp + 48]>
new  < atan2$21:>

3521:
old  <>
new  <	; PushFloat x>

3522:
old  < atan2$43:>
new  <	fld qword [rbp + 24]>

3523:
old  <	; GetReturnValue Â£temporary635>
new  <>

3524:
old  <>
new  < atan2$22:>

3525:
old  < atan2$44:>
new  <	; PushFloat y>

3526:
old  <	; BinaryAdd Â£temporary636 -3.1415926535897932384626433 Â£temporary635>
new  <	fld qword [rbp + 32]>

3527:
old  <	fadd>
new  <>

3528:
old  <>
new  < atan2$23:>

3529:
old  < atan2$45:>
new  <	; SignedDivide Â£temporary628 x y>

3530:
old  <	; Return Â£temporary636>
new  <	fdiv>

3531:
old  <	mov rax, [rbp]>
new  <>

3532:
old  <	mov rdi, [rbp + 16]>
new  < atan2$24:>

3533:
old  <	mov rbp, [rbp + 8]>
new  <	; Parameter 64 double Â£temporary628>

3534:
old  <	jmp rax>
new  <	fstp qword [rbp + 72]>

3536:
old  < atan2$46:>
new  < atan2$25:>

3537:
old  <	; PushFloat x>
new  <	; Call 40 atan 0>

3538:
old  <	fld qword [rbp + 24]>
new  <	mov qword [rbp + 48], atan2$26>

3539:
old  <>
new  <	mov [rbp + 56], rbp>

3540:
old  < atan2$47:>
new  <	add rbp, 48>

3541:
old  <	; PushFloat 0>
new  <	jmp atan>

3542:
old  <	fldz>
new  <>

3543:
old  <>
new  < atan2$26:>

3544:
old  < atan2$48:>
new  <	; PostCall 40>

3545:
old  <	; SignedLessThanEqual 54 x 0>
new  <	fstp qword [rbp + 48]>

3546:
old  <	fcompp>
new  <	fld qword [rbp + 40]>

3547:
old  <	fstsw ax>
new  <	fld qword [rbp + 48]>

3548:
old  <	sahf>
new  <>

3549:
old  <	jae atan2$54>
new  < atan2$27:>

3550:
old  <>
new  <	; GetReturnValue Â£temporary629>

3551:
old  < atan2$49:>
new  <>

3552:
old  <	; PushFloat y>
new  < atan2$28:>

3553:
old  <	fld qword [rbp + 32]>
new  <	; BinaryAdd Â£temporary630 3.1415926535897932384626433 Â£temporary629>

3554:
old  <>
new  <	fadd>

3555:
old  < atan2$50:>
new  <>

3556:
old  <	; PushFloat 0>
new  < atan2$29:>

3557:
old  <	fldz>
new  <	; SetReturnValue>

3559:
old  < atan2$51:>
new  < atan2$30:>

3560:
old  <	; NotEqual 54 y 0>
new  <	; Return Â£temporary630>

3561:
old  <	fcompp>
new  <	mov rax, [rbp]>

3562:
old  <	fstsw ax>
new  <	mov rdi, [rbp + 16]>

3563:
old  <	sahf>
new  <	mov rbp, [rbp + 8]>

3564:
old  <	jne atan2$54>
new  <	jmp rax>

3566:
old  < atan2$52:>
new  < atan2$31:>

3567:
old  <	; PushFloat 1.57079632679489661923132165>
new  <	; PushFloat x>

3568:
old  <	fld qword [float8$1.57079632679489661923132165#]>
new  <	fld qword [rbp + 24]>

3570:
old  < atan2$53:>
new  < atan2$32:>

3571:
old  <	; Return 1.57079632679489661923132165>
new  <	; PushFloat 0>

3572:
old  <	mov rax, [rbp]>
new  <	fldz>

3573:
old  <	mov rdi, [rbp + 16]>
new  <>

3574:
old  <	mov rbp, [rbp + 8]>
new  < atan2$33:>

3575:
old  <	jmp rax>
new  <	; SignedGreaterThanEqual 49 x 0>

3576:
old  <>
new  <	fcompp>

3577:
old  < atan2$54:>
new  <	fstsw ax>

3578:
old  <	; PushFloat x>
new  <	sahf>

3579:
old  <	fld qword [rbp + 24]>
new  <	jbe atan2$49>

3581:
old  < atan2$55:>
new  < atan2$34:>

3582:
old  <	; PushFloat 0>
new  <	; PushFloat y>

3583:
old  <	fldz>
new  <	fld qword [rbp + 32]>

3585:
old  < atan2$56:>
new  < atan2$35:>

3586:
old  <	; SignedGreaterThanEqual 62 x 0>
new  <	; PushFloat 0>

3587:
old  <	fcompp>
new  <	fldz>

3588:
old  <	fstsw ax>
new  <>

3589:
old  <	sahf>
new  < atan2$36:>

3590:
old  <	jbe atan2$62>
new  <	; SignedGreaterThanEqual 49 y 0>

3591:
old  <>
new  <	fcompp>

3592:
old  < atan2$57:>
new  <	fstsw ax>

3593:
old  <	; PushFloat y>
new  <	sahf>

3594:
old  <	fld qword [rbp + 32]>
new  <	jbe atan2$49>

3596:
old  < atan2$58:>
new  < atan2$37:>

3597:
old  <	; PushFloat 0>
new  <	; PushFloat -3.1415926535897932384626433>

3598:
old  <	fldz>
new  <	fld qword [float8$minus3.1415926535897932384626433#]>

3600:
old  < atan2$59:>
new  < atan2$38:>

3601:
old  <	; NotEqual 62 y 0>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 1>

3602:
old  <	fcompp>
new  <	fstp qword [rbp + 40]>

3603:
old  <	fstsw ax>
new  <>

3604:
old  <	sahf>
new  < atan2$39:>

3605:
old  <	jne atan2$62>
new  <	; PushFloat x>

3606:
old  <>
new  <	fld qword [rbp + 24]>

3607:
old  < atan2$60:>
new  <>

3608:
old  <	; PushFloat -1.57079632679489661923132165>
new  < atan2$40:>

3609:
old  <	fld qword [float8$minus1.57079632679489661923132165#]>
new  <	; PushFloat y>

3610:
old  <>
new  <	fld qword [rbp + 32]>

3611:
old  < atan2$61:>
new  <>

3612:
old  <	; Return -1.57079632679489661923132165>
new  < atan2$41:>

3613:
old  <	mov rax, [rbp]>
new  <	; SignedDivide Â£temporary634 x y>

3614:
old  <	mov rdi, [rbp + 16]>
new  <	fdiv>

3615:
old  <	mov rbp, [rbp + 8]>
new  <>

3616:
old  <	jmp rax>
new  < atan2$42:>

3617:
old  <>
new  <	; Parameter 64 double Â£temporary634>

3618:
old  < atan2$62:>
new  <	fstp qword [rbp + 72]>

3619:
old  <	; Assign errno 6>
new  <>

3620:
old  <	mov dword [errno], 6>
new  < atan2$43:>

3621:
old  <>
new  <	; Call 40 atan 0>

3622:
old  < atan2$63:>
new  <	mov qword [rbp + 48], atan2$44>

3623:
old  <	; PushFloat 0>
new  <	mov [rbp + 56], rbp>

3624:
old  <	fldz>
new  <	add rbp, 48>

3625:
old  <>
new  <	jmp atan>

3626:
old  < atan2$64:>
new  <>

3627:
old  <	; Return 0>
new  < atan2$44:>

3628:
old  <	mov rax, [rbp]>
new  <	; PostCall 40>

3629:
old  <	mov rdi, [rbp + 16]>
new  <	fstp qword [rbp + 48]>

3630:
old  <	mov rbp, [rbp + 8]>
new  <	fld qword [rbp + 40]>

3631:
old  <	jmp rax>
new  <	fld qword [rbp + 48]>

3633:
old  < atan2$65:>
new  < atan2$45:>

3634:
old  <	; FunctionEnd atan2>
new  <	; GetReturnValue Â£temporary635>

3636:
old  <section .text>
new  < atan2$46:>

3637:
old  <>
new  <	; BinaryAdd Â£temporary636 -3.1415926535897932384626433 Â£temporary635>

3638:
old  < sinh:>
new  <	fadd>

3639:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

3640:
old  <>
new  < atan2$47:>

3641:
old  < sinh$1:>
new  <	; SetReturnValue>

3642:
old  <	; PushFloat x>
new  <>

3643:
old  <	fld qword [rbp + 24]>
new  < atan2$48:>

3644:
old  <>
new  <	; Return Â£temporary636>

3645:
old  < sinh$2:>
new  <	mov rax, [rbp]>

3646:
old  <	; Parameter 56 double x>
new  <	mov rdi, [rbp + 16]>

3647:
old  <	fstp qword [rbp + 56]>
new  <	mov rbp, [rbp + 8]>

3648:
old  <>
new  <	jmp rax>

3649:
old  < sinh$3:>
new  <>

3650:
old  <	; Call 32 exp 0>
new  < atan2$49:>

3651:
old  <	mov qword [rbp + 32], sinh$4>
new  <	; PushFloat x>

3652:
old  <	mov [rbp + 40], rbp>
new  <	fld qword [rbp + 24]>

3653:
old  <	add rbp, 32>
new  <>

3654:
old  <	jmp exp>
new  < atan2$50:>

3655:
old  <>
new  <	; PushFloat 0>

3656:
old  < sinh$4:>
new  <	fldz>

3657:
old  <	; PostCall 32>
new  <>

3658:
old  <>
new  < atan2$51:>

3659:
old  < sinh$5:>
new  <	; SignedLessThanEqual 58 x 0>

3660:
old  <	; GetReturnValue Â£temporary646>
new  <	fcompp>

3661:
old  <>
new  <	fstsw ax>

3662:
old  < sinh$6:>
new  <	sahf>

3663:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 1>
new  <	jae atan2$58>

3664:
old  <	fstp qword [rbp + 32]>
new  <>

3665:
old  <>
new  < atan2$52:>

3666:
old  < sinh$7:>
new  <	; PushFloat y>

3667:
old  <	; PushFloat x>
new  <	fld qword [rbp + 32]>

3668:
old  <	fld qword [rbp + 24]>
new  <>

3669:
old  <>
new  < atan2$53:>

3670:
old  < sinh$8:>
new  <	; PushFloat 0>

3671:
old  <	; UnarySubtract Â£temporary647 x>
new  <	fldz>

3672:
old  <	fchs>
new  <>

3673:
old  <>
new  < atan2$54:>

3674:
old  < sinh$9:>
new  <	; NotEqual 58 y 0>

3675:
old  <	; Parameter 56 double Â£temporary647>
new  <	fcompp>

3676:
old  <	fstp qword [rbp + 64]>
new  <	fstsw ax>

3677:
old  <>
new  <	sahf>

3678:
old  < sinh$10:>
new  <	jne atan2$58>

3679:
old  <	; Call 32 exp 0>
new  <>

3680:
old  <	mov qword [rbp + 40], sinh$11>
new  < atan2$55:>

3681:
old  <	mov [rbp + 48], rbp>
new  <	; PushFloat 1.57079632679489661923132165>

3682:
old  <	add rbp, 40>
new  <	fld qword [float8$1.57079632679489661923132165#]>

3683:
old  <	jmp exp>
new  <>

3684:
old  <>
new  < atan2$56:>

3685:
old  < sinh$11:>
new  <	; SetReturnValue>

3686:
old  <	; PostCall 32>
new  <>

3687:
old  <	fstp qword [rbp + 40]>
new  < atan2$57:>

3688:
old  <	fld qword [rbp + 32]>
new  <	; Return 1.57079632679489661923132165>

3689:
old  <	fld qword [rbp + 40]>
new  <	mov rax, [rbp]>

3690:
old  <>
new  <	mov rdi, [rbp + 16]>

3691:
old  < sinh$12:>
new  <	mov rbp, [rbp + 8]>

3692:
old  <	; GetReturnValue Â£temporary648>
new  <	jmp rax>

3694:
old  < sinh$13:>
new  < atan2$58:>

3695:
old  <	; BinarySubtract Â£temporary649 Â£temporary646 Â£temporary648>
new  <	; PushFloat x>

3696:
old  <	fsub>
new  <	fld qword [rbp + 24]>

3698:
old  < sinh$14:>
new  < atan2$59:>

3699:
old  <	; PushFloat 2>
new  <	; PushFloat 0>

3700:
old  <	fld qword [float8$2#]>
new  <	fldz>

3702:
old  < sinh$15:>
new  < atan2$60:>

3703:
old  <	; SignedDivide Â£temporary650 Â£temporary649 2>
new  <	; SignedGreaterThanEqual 67 x 0>

3704:
old  <	fdiv>
new  <	fcompp>

3705:
old  <>
new  <	fstsw ax>

3706:
old  < sinh$16:>
new  <	sahf>

3707:
old  <	; Return Â£temporary650>
new  <	jbe atan2$67>

3708:
old  <	mov rax, [rbp]>
new  <>

3709:
old  <	mov rdi, [rbp + 16]>
new  < atan2$61:>

3710:
old  <	mov rbp, [rbp + 8]>
new  <	; PushFloat y>

3711:
old  <	jmp rax>
new  <	fld qword [rbp + 32]>

3713:
old  < sinh$17:>
new  < atan2$62:>

3714:
old  <	; FunctionEnd sinh>
new  <	; PushFloat 0>

3715:
old  <>
new  <	fldz>

3716:
old  <section .text>
new  <>

3717:
old  <>
new  < atan2$63:>

3718:
old  < cosh:>
new  <	; NotEqual 67 y 0>

3719:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	fcompp>

3720:
old  <>
new  <	fstsw ax>

3721:
old  < cosh$1:>
new  <	sahf>

3722:
old  <	; PushFloat x>
new  <	jne atan2$67>

3723:
old  <	fld qword [rbp + 24]>
new  <>

3724:
old  <>
new  < atan2$64:>

3725:
old  < cosh$2:>
new  <	; PushFloat -1.57079632679489661923132165>

3726:
old  <	; Parameter 56 double x>
new  <	fld qword [float8$minus1.57079632679489661923132165#]>

3727:
old  <	fstp qword [rbp + 56]>
new  <>

3728:
old  <>
new  < atan2$65:>

3729:
old  < cosh$3:>
new  <	; SetReturnValue>

3730:
old  <	; Call 32 exp 0>
new  <>

3731:
old  <	mov qword [rbp + 32], cosh$4>
new  < atan2$66:>

3732:
old  <	mov [rbp + 40], rbp>
new  <	; Return -1.57079632679489661923132165>

3733:
old  <	add rbp, 32>
new  <	mov rax, [rbp]>

3734:
old  <	jmp exp>
new  <	mov rdi, [rbp + 16]>

3735:
old  <>
new  <	mov rbp, [rbp + 8]>

3736:
old  < cosh$4:>
new  <	jmp rax>

3737:
old  <	; PostCall 32>
new  <>

3738:
old  <>
new  < atan2$67:>

3739:
old  < cosh$5:>
new  <	; Assign errno 6>

3740:
old  <	; GetReturnValue Â£temporary653>
new  <	mov dword [errno], 6>

3742:
old  < cosh$6:>
new  < atan2$68:>

3743:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 1>
new  <	; PushFloat 0>

3744:
old  <	fstp qword [rbp + 32]>
new  <	fldz>

3746:
old  < cosh$7:>
new  < atan2$69:>

3747:
old  <	; PushFloat x>
new  <	; SetReturnValue>

3748:
old  <	fld qword [rbp + 24]>
new  <>

3749:
old  <>
new  < atan2$70:>

3750:
old  < cosh$8:>
new  <	; Return 0>

3751:
old  <	; UnarySubtract Â£temporary654 x>
new  <	mov rax, [rbp]>

3752:
old  <	fchs>
new  <	mov rdi, [rbp + 16]>

3753:
old  <>
new  <	mov rbp, [rbp + 8]>

3754:
old  < cosh$9:>
new  <	jmp rax>

3755:
old  <	; Parameter 56 double Â£temporary654>
new  <>

3756:
old  <	fstp qword [rbp + 64]>
new  < atan2$71:>

3757:
old  <>
new  <	; FunctionEnd atan2>

3758:
old  < cosh$10:>
new  <>

3759:
old  <	; Call 32 exp 0>
new  <section .text>

3760:
old  <	mov qword [rbp + 40], cosh$11>
new  <>

3761:
old  <	mov [rbp + 48], rbp>
new  < sinh:>

3762:
old  <	add rbp, 40>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3763:
old  <	jmp exp>
new  <>

3764:
old  <>
new  < sinh$1:>

3765:
old  < cosh$11:>
new  <	; PushFloat x>

3766:
old  <	; PostCall 32>
new  <	fld qword [rbp + 24]>

3767:
old  <	fstp qword [rbp + 40]>
new  <>

3768:
old  <	fld qword [rbp + 32]>
new  < sinh$2:>

3769:
old  <	fld qword [rbp + 40]>
new  <	; Parameter 56 double x>

3770:
old  <>
new  <	fstp qword [rbp + 56]>

3771:
old  < cosh$12:>
new  <>

3772:
old  <	; GetReturnValue Â£temporary655>
new  < sinh$3:>

3773:
old  <>
new  <	; Call 32 exp 0>

3774:
old  < cosh$13:>
new  <	mov qword [rbp + 32], sinh$4>

3775:
old  <	; BinaryAdd Â£temporary656 Â£temporary653 Â£temporary655>
new  <	mov [rbp + 40], rbp>

3776:
old  <	fadd>
new  <	add rbp, 32>

3777:
old  <>
new  <	jmp exp>

3778:
old  < cosh$14:>
new  <>

3779:
old  <	; PushFloat 2>
new  < sinh$4:>

3780:
old  <	fld qword [float8$2#]>
new  <	; PostCall 32>

3782:
old  < cosh$15:>
new  < sinh$5:>

3783:
old  <	; SignedDivide Â£temporary657 Â£temporary656 2>
new  <	; GetReturnValue Â£temporary646>

3784:
old  <	fdiv>
new  <>

3785:
old  <>
new  < sinh$6:>

3786:
old  < cosh$16:>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 1>

3787:
old  <	; Return Â£temporary657>
new  <	fstp qword [rbp + 32]>

3788:
old  <	mov rax, [rbp]>
new  <>

3789:
old  <	mov rdi, [rbp + 16]>
new  < sinh$7:>

3790:
old  <	mov rbp, [rbp + 8]>
new  <	; PushFloat x>

3791:
old  <	jmp rax>
new  <	fld qword [rbp + 24]>

3793:
old  < cosh$17:>
new  < sinh$8:>

3794:
old  <	; FunctionEnd cosh>
new  <	; UnarySubtract Â£temporary647 x>

3795:
old  <>
new  <	fchs>

3796:
old  <section .text>
new  <>

3797:
old  <>
new  < sinh$9:>

3798:
old  < tanh:>
new  <	; Parameter 56 double Â£temporary647>

3799:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	fstp qword [rbp + 64]>

3801:
old  < tanh$1:>
new  < sinh$10:>

3802:
old  <	; PushFloat x>
new  <	; Call 32 exp 0>

3803:
old  <	fld qword [rbp + 24]>
new  <	mov qword [rbp + 40], sinh$11>

3804:
old  <>
new  <	mov [rbp + 48], rbp>

3805:
old  < tanh$2:>
new  <	add rbp, 40>

3806:
old  <	; Parameter 56 double x>
new  <	jmp exp>

3807:
old  <	fstp qword [rbp + 56]>
new  <>

3808:
old  <>
new  < sinh$11:>

3809:
old  < tanh$3:>
new  <	; PostCall 32>

3810:
old  <	; Call 32 sinh 0>
new  <	fstp qword [rbp + 40]>

3811:
old  <	mov qword [rbp + 32], tanh$4>
new  <	fld qword [rbp + 32]>

3812:
old  <	mov [rbp + 40], rbp>
new  <	fld qword [rbp + 40]>

3813:
old  <	add rbp, 32>
new  <>

3814:
old  <	jmp sinh>
new  < sinh$12:>

3815:
old  <>
new  <	; GetReturnValue Â£temporary648>

3816:
old  < tanh$4:>
new  <>

3817:
old  <	; PostCall 32>
new  < sinh$13:>

3818:
old  <>
new  <	; BinarySubtract Â£temporary649 Â£temporary646 Â£temporary648>

3819:
old  < tanh$5:>
new  <	fsub>

3820:
old  <	; GetReturnValue Â£temporary660>
new  <>

3821:
old  <>
new  < sinh$14:>

3822:
old  < tanh$6:>
new  <	; PushFloat 2>

3823:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 1>
new  <	fld qword [float8$2#]>

3824:
old  <	fstp qword [rbp + 32]>
new  <>

3825:
old  <>
new  < sinh$15:>

3826:
old  < tanh$7:>
new  <	; SignedDivide Â£temporary650 Â£temporary649 2>

3827:
old  <	; PushFloat x>
new  <	fdiv>

3828:
old  <	fld qword [rbp + 24]>
new  <>

3829:
old  <>
new  < sinh$16:>

3830:
old  < tanh$8:>
new  <	; SetReturnValue>

3831:
old  <	; Parameter 56 double x>
new  <>

3832:
old  <	fstp qword [rbp + 64]>
new  < sinh$17:>

3833:
old  <>
new  <	; Return Â£temporary650>

3834:
old  < tanh$9:>
new  <	mov rax, [rbp]>

3835:
old  <	; Call 32 cosh 0>
new  <	mov rdi, [rbp + 16]>

3836:
old  <	mov qword [rbp + 40], tanh$10>
new  <	mov rbp, [rbp + 8]>

3837:
old  <	mov [rbp + 48], rbp>
new  <	jmp rax>

3838:
old  <	add rbp, 40>
new  <>

3839:
old  <	jmp cosh>
new  < sinh$18:>

3840:
old  <>
new  <	; FunctionEnd sinh>

3841:
old  < tanh$10:>
new  <>

3842:
old  <	; PostCall 32>
new  <section .text>

3843:
old  <	fstp qword [rbp + 40]>
new  <>

3844:
old  <	fld qword [rbp + 32]>
new  < cosh:>

3845:
old  <	fld qword [rbp + 40]>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3847:
old  < tanh$11:>
new  < cosh$1:>

3848:
old  <	; GetReturnValue Â£temporary661>
new  <	; PushFloat x>

3849:
old  <>
new  <	fld qword [rbp + 24]>

3850:
old  < tanh$12:>
new  <>

3851:
old  <	; SignedDivide Â£temporary662 Â£temporary660 Â£temporary661>
new  < cosh$2:>

3852:
old  <	fdiv>
new  <	; Parameter 56 double x>

3853:
old  <>
new  <	fstp qword [rbp + 56]>

3854:
old  < tanh$13:>
new  <>

3855:
old  <	; Return Â£temporary662>
new  < cosh$3:>

3856:
old  <	mov rax, [rbp]>
new  <	; Call 32 exp 0>

3857:
old  <	mov rdi, [rbp + 16]>
new  <	mov qword [rbp + 32], cosh$4>

3858:
old  <	mov rbp, [rbp + 8]>
new  <	mov [rbp + 40], rbp>

3859:
old  <	jmp rax>
new  <	add rbp, 32>

3860:
old  <>
new  <	jmp exp>

3861:
old  < tanh$14:>
new  <>

3862:
old  <	; FunctionEnd tanh>
new  < cosh$4:>

3863:
old  <>
new  <	; PostCall 32>

3864:
old  <section .text>
new  <>

3865:
old  <>
new  < cosh$5:>

3866:
old  < floor:>
new  <	; GetReturnValue Â£temporary653>

3867:
old  <	; PushFloat x>
new  <>

3868:
old  <	fld qword [rbp + 24]>
new  < cosh$6:>

3869:
old  <>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 1>

3870:
old  < floor$1:>
new  <	fstp qword [rbp + 32]>

3871:
old  <	; PushFloat 0>
new  <>

3872:
old  <	fldz>
new  < cosh$7:>

3873:
old  <>
new  <	; PushFloat x>

3874:
old  < floor$2:>
new  <	fld qword [rbp + 24]>

3875:
old  <	; SignedGreaterThanEqual 12 x 0>
new  <>

3876:
old  <	fcompp>
new  < cosh$8:>

3877:
old  <	fstsw ax>
new  <	; UnarySubtract Â£temporary654 x>

3878:
old  <	sahf>
new  <	fchs>

3879:
old  <	jbe floor$12>
new  <>

3880:
old  <>
new  < cosh$9:>

3881:
old  < floor$3:>
new  <	; Parameter 56 double Â£temporary654>

3882:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	fstp qword [rbp + 64]>

3884:
old  < floor$4:>
new  < cosh$10:>

3885:
old  <	; PushFloat x>
new  <	; Call 32 exp 0>

3886:
old  <	fld qword [rbp + 24]>
new  <	mov qword [rbp + 40], cosh$11>

3887:
old  <>
new  <	mov [rbp + 48], rbp>

3888:
old  < floor$5:>
new  <	add rbp, 40>

3889:
old  <	; UnarySubtract Â£temporary666 x>
new  <	jmp exp>

3890:
old  <	fchs>
new  <>

3891:
old  <>
new  < cosh$11:>

3892:
old  < floor$6:>
new  <	; PostCall 32>

3893:
old  <	; Parameter 56 double Â£temporary666>
new  <	fstp qword [rbp + 40]>

3894:
old  <	fstp qword [rbp + 56]>
new  <	fld qword [rbp + 32]>

3895:
old  <>
new  <	fld qword [rbp + 40]>

3896:
old  < floor$7:>
new  <>

3897:
old  <	; Call 32 ceil 0>
new  < cosh$12:>

3898:
old  <	mov qword [rbp + 32], floor$8>
new  <	; GetReturnValue Â£temporary655>

3899:
old  <	mov [rbp + 40], rbp>
new  <>

3900:
old  <	add rbp, 32>
new  < cosh$13:>

3901:
old  <	jmp ceil>
new  <	; BinaryAdd Â£temporary656 Â£temporary653 Â£temporary655>

3902:
old  <>
new  <	fadd>

3903:
old  < floor$8:>
new  <>

3904:
old  <	; PostCall 32>
new  < cosh$14:>

3905:
old  <>
new  <	; PushFloat 2>

3906:
old  < floor$9:>
new  <	fld qword [float8$2#]>

3907:
old  <	; GetReturnValue Â£temporary667>
new  <>

3908:
old  <>
new  < cosh$15:>

3909:
old  < floor$10:>
new  <	; SignedDivide Â£temporary657 Â£temporary656 2>

3910:
old  <	; UnarySubtract Â£temporary668 Â£temporary667>
new  <	fdiv>

3911:
old  <	fchs>
new  <>

3912:
old  <>
new  < cosh$16:>

3913:
old  < floor$11:>
new  <	; SetReturnValue>

3914:
old  <	; Return Â£temporary668>
new  <>

3915:
old  <	mov rax, [rbp]>
new  < cosh$17:>

3916:
old  <	mov rdi, [rbp + 16]>
new  <	; Return Â£temporary657>

3917:
old  <	mov rbp, [rbp + 8]>
new  <	mov rax, [rbp]>

3918:
old  <	jmp rax>
new  <	mov rdi, [rbp + 16]>

3919:
old  <>
new  <	mov rbp, [rbp + 8]>

3920:
old  < floor$12:>
new  <	jmp rax>

3921:
old  <	; PushFloat x>
new  <>

3922:
old  <	fld qword [rbp + 24]>
new  < cosh$18:>

3923:
old  <>
new  <	; FunctionEnd cosh>

3924:
old  < floor$13:>
new  <>

3925:
old  <	; FloatingToIntegral Â£temporary669 x>
new  <section .text>

3926:
old  <	fistp qword [container8bytes#]>
new  <>

3927:
old  <	mov rax, [container8bytes#]>
new  < tanh:>

3928:
old  <>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3929:
old  < floor$14:>
new  <>

3930:
old  <	; IntegralToFloating Â£temporary670 Â£temporary669>
new  < tanh$1:>

3931:
old  <	mov [container8bytes#], rax>
new  <	; PushFloat x>

3932:
old  <	fild qword [container8bytes#]>
new  <	fld qword [rbp + 24]>

3934:
old  < floor$15:>
new  < tanh$2:>

3935:
old  <	; Return Â£temporary670>
new  <	; Parameter 56 double x>

3936:
old  <	mov rax, [rbp]>
new  <	fstp qword [rbp + 56]>

3937:
old  <	mov rdi, [rbp + 16]>
new  <>

3938:
old  <	mov rbp, [rbp + 8]>
new  < tanh$3:>

3939:
old  <	jmp rax>
new  <	; Call 32 sinh 0>

3940:
old  <>
new  <	mov qword [rbp + 32], tanh$4>

3941:
old  < floor$16:>
new  <	mov [rbp + 40], rbp>

3942:
old  <	; FunctionEnd floor>
new  <	add rbp, 32>

3943:
old  <>
new  <	jmp sinh>

3944:
old  <section .data>
new  <>

3945:
old  <>
new  < tanh$4:>

3946:
old  <float8$0.999999999999#:>
new  <	; PostCall 32>

3947:
old  <	; Initializer Double 0.999999999999>
new  <>

3948:
old  <	dq 0.999999999999>
new  < tanh$5:>

3949:
old  <>
new  <	; GetReturnValue Â£temporary660>

3950:
old  <section .text>
new  <>

3951:
old  <>
new  < tanh$6:>

3952:
old  < ceil:>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 1>

3953:
old  <	; PushFloat x>
new  <	fstp qword [rbp + 32]>

3954:
old  <	fld qword [rbp + 24]>
new  <>

3955:
old  <>
new  < tanh$7:>

3956:
old  < ceil$1:>
new  <	; PushFloat x>

3957:
old  <	; PushFloat 0>
new  <	fld qword [rbp + 24]>

3958:
old  <	fldz>
new  <>

3959:
old  <>
new  < tanh$8:>

3960:
old  < ceil$2:>
new  <	; Parameter 56 double x>

3961:
old  <	; SignedGreaterThanEqual 12 x 0>
new  <	fstp qword [rbp + 64]>

3962:
old  <	fcompp>
new  <>

3963:
old  <	fstsw ax>
new  < tanh$9:>

3964:
old  <	sahf>
new  <	; Call 32 cosh 0>

3965:
old  <	jbe ceil$12>
new  <	mov qword [rbp + 40], tanh$10>

3966:
old  <>
new  <	mov [rbp + 48], rbp>

3967:
old  < ceil$3:>
new  <	add rbp, 40>

3968:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	jmp cosh>

3970:
old  < ceil$4:>
new  < tanh$10:>

3971:
old  <	; PushFloat x>
new  <	; PostCall 32>

3972:
old  <	fld qword [rbp + 24]>
new  <	fstp qword [rbp + 40]>

3973:
old  <>
new  <	fld qword [rbp + 32]>

3974:
old  < ceil$5:>
new  <	fld qword [rbp + 40]>

3975:
old  <	; UnarySubtract Â£temporary673 x>
new  <>

3976:
old  <	fchs>
new  < tanh$11:>

3977:
old  <>
new  <	; GetReturnValue Â£temporary661>

3978:
old  < ceil$6:>
new  <>

3979:
old  <	; Parameter 56 double Â£temporary673>
new  < tanh$12:>

3980:
old  <	fstp qword [rbp + 56]>
new  <	; SignedDivide Â£temporary662 Â£temporary660 Â£temporary661>

3981:
old  <>
new  <	fdiv>

3982:
old  < ceil$7:>
new  <>

3983:
old  <	; Call 32 floor 0>
new  < tanh$13:>

3984:
old  <	mov qword [rbp + 32], ceil$8>
new  <	; SetReturnValue>

3985:
old  <	mov [rbp + 40], rbp>
new  <>

3986:
old  <	add rbp, 32>
new  < tanh$14:>

3987:
old  <	jmp floor>
new  <	; Return Â£temporary662>

3988:
old  <>
new  <	mov rax, [rbp]>

3989:
old  < ceil$8:>
new  <	mov rdi, [rbp + 16]>

3990:
old  <	; PostCall 32>
new  <	mov rbp, [rbp + 8]>

3991:
old  <>
new  <	jmp rax>

3992:
old  < ceil$9:>
new  <>

3993:
old  <	; GetReturnValue Â£temporary674>
new  < tanh$15:>

3994:
old  <>
new  <	; FunctionEnd tanh>

3995:
old  < ceil$10:>
new  <>

3996:
old  <	; UnarySubtract Â£temporary675 Â£temporary674>
new  <section .text>

3997:
old  <	fchs>
new  <>

3998:
old  <>
new  < floor:>

3999:
old  < ceil$11:>
new  <	; PushFloat x>

4000:
old  <	; Return Â£temporary675>
new  <	fld qword [rbp + 24]>

4001:
old  <	mov rax, [rbp]>
new  <>

4002:
old  <	mov rdi, [rbp + 16]>
new  < floor$1:>

4003:
old  <	mov rbp, [rbp + 8]>
new  <	; PushFloat 0>

4004:
old  <	jmp rax>
new  <	fldz>

4006:
old  < ceil$12:>
new  < floor$2:>

4007:
old  <	; PushFloat x>
new  <	; SignedGreaterThanEqual 13 x 0>

4008:
old  <	fld qword [rbp + 24]>
new  <	fcompp>

4009:
old  <>
new  <	fstsw ax>

4010:
old  < ceil$13:>
new  <	sahf>

4011:
old  <	; PushFloat 0.999999999999>
new  <	jbe floor$13>

4012:
old  <	fld qword [float8$0.999999999999#]>
new  <>

4013:
old  <>
new  < floor$3:>

4014:
old  < ceil$14:>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

4015:
old  <	; BinaryAdd Â£temporary676 x 0.999999999999>
new  <>

4016:
old  <	fadd>
new  < floor$4:>

4017:
old  <>
new  <	; PushFloat x>

4018:
old  < ceil$15:>
new  <	fld qword [rbp + 24]>

4019:
old  <	; FloatingToIntegral Â£temporary677 Â£temporary676>
new  <>

4020:
old  <	fistp qword [container8bytes#]>
new  < floor$5:>

4021:
old  <	mov rax, [container8bytes#]>
new  <	; UnarySubtract Â£temporary666 x>

4022:
old  <>
new  <	fchs>

4023:
old  < ceil$16:>
new  <>

4024:
old  <	; IntegralToFloating Â£temporary678 Â£temporary677>
new  < floor$6:>

4025:
old  <	mov [container8bytes#], rax>
new  <	; Parameter 56 double Â£temporary666>

4026:
old  <	fild qword [container8bytes#]>
new  <	fstp qword [rbp + 56]>

4028:
old  < ceil$17:>
new  < floor$7:>

4029:
old  <	; Return Â£temporary678>
new  <	; Call 32 ceil 0>

4030:
old  <	mov rax, [rbp]>
new  <	mov qword [rbp + 32], floor$8>

4031:
old  <	mov rdi, [rbp + 16]>
new  <	mov [rbp + 40], rbp>

4032:
old  <	mov rbp, [rbp + 8]>
new  <	add rbp, 32>

4033:
old  <	jmp rax>
new  <	jmp ceil>

4035:
old  < ceil$18:>
new  < floor$8:>

4036:
old  <	; FunctionEnd ceil>
new  <	; PostCall 32>

4038:
old  <section .text>
new  < floor$9:>

4039:
old  <>
new  <	; GetReturnValue Â£temporary667>

4040:
old  < round:>
new  <>

4041:
old  <	; PushFloat x>
new  < floor$10:>

4042:
old  <	fld qword [rbp + 24]>
new  <	; UnarySubtract Â£temporary668 Â£temporary667>

4043:
old  <>
new  <	fchs>

4044:
old  < round$1:>
new  <>

4045:
old  <	; PushFloat 0>
new  < floor$11:>

4046:
old  <	fldz>
new  <	; SetReturnValue>

4048:
old  < round$2:>
new  < floor$12:>

4049:
old  <	; SignedGreaterThanEqual 8 x 0>
new  <	; Return Â£temporary668>

4050:
old  <	fcompp>
new  <	mov rax, [rbp]>

4051:
old  <	fstsw ax>
new  <	mov rdi, [rbp + 16]>

4052:
old  <	sahf>
new  <	mov rbp, [rbp + 8]>

4053:
old  <	jbe round$8>
new  <	jmp rax>

4055:
old  < round$3:>
new  < floor$13:>

4059:
old  < round$4:>
new  < floor$14:>

4060:
old  <	; PushFloat 0.5>
new  <	; FloatingToIntegral Â£temporary669 x>

4061:
old  <	fld qword [float8$0.5#]>
new  <	fistp qword [container8bytes#]>

4062:
old  <>
new  <	mov rax, [container8bytes#]>

4063:
old  < round$5:>
new  <>

4064:
old  <	; BinarySubtract Â£temporary681 x 0.5>
new  < floor$15:>

4065:
old  <	fsub>
new  <	; IntegralToFloating Â£temporary670 Â£temporary669>

4066:
old  <>
new  <	mov [container8bytes#], rax>

4067:
old  < round$6:>
new  <	fild qword [container8bytes#]>

4068:
old  <	; DecreaseStack>
new  <>

4069:
old  <>
new  < floor$16:>

4070:
old  < round$7:>
new  <	; SetReturnValue>

4071:
old  <	; Goto 11>
new  <>

4072:
old  <	jmp round$11>
new  < floor$17:>

4073:
old  <>
new  <	; Return Â£temporary670>

4074:
old  < round$8:>
new  <	mov rax, [rbp]>

4075:
old  <	; PushFloat x>
new  <	mov rdi, [rbp + 16]>

4076:
old  <	fld qword [rbp + 24]>
new  <	mov rbp, [rbp + 8]>

4077:
old  <>
new  <	jmp rax>

4078:
old  < round$9:>
new  <>

4079:
old  <	; PushFloat 0.5>
new  < floor$18:>

4080:
old  <	fld qword [float8$0.5#]>
new  <	; FunctionEnd floor>

4082:
old  < round$10:>
new  <section .data>

4083:
old  <	; BinaryAdd Â£temporary682 x 0.5>
new  <>

4084:
old  <	fadd>
new  <float8$0.999999999999#:>

4085:
old  <>
new  <	; Initializer Double 0.999999999999>

4086:
old  < round$11:>
new  <	dq 0.999999999999>

4087:
old  <	; FloatingToIntegral Â£temporary684 Â£temporary683>
new  <>

4088:
old  <	fistp qword [container8bytes#]>
new  <section .text>

4089:
old  <	mov rax, [container8bytes#]>
new  <>

4090:
old  <>
new  < ceil:>

4091:
old  < round$12:>
new  <	; PushFloat x>

4092:
old  <	; IntegralToFloating Â£temporary685 Â£temporary684>
new  <	fld qword [rbp + 24]>

4093:
old  <	mov [container8bytes#], rax>
new  <>

4094:
old  <	fild qword [container8bytes#]>
new  < ceil$1:>

4095:
old  <>
new  <	; PushFloat 0>

4096:
old  < round$13:>
new  <	fldz>

4097:
old  <	; Return Â£temporary685>
new  <>

4098:
old  <	mov rax, [rbp]>
new  < ceil$2:>

4099:
old  <	mov rdi, [rbp + 16]>
new  <	; SignedGreaterThanEqual 13 x 0>

4100:
old  <	mov rbp, [rbp + 8]>
new  <	fcompp>

4101:
old  <	jmp rax>
new  <	fstsw ax>

4102:
old  <>
new  <	sahf>

4103:
old  < round$14:>
new  <	jbe ceil$13>

4104:
old  <	; FunctionEnd round>
new  <>

4105:
old  <>
new  < ceil$3:>

4106:
old  <section .text>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

4108:
old  < fabs:>
new  < ceil$4:>

4112:
old  < fabs$1:>
new  < ceil$5:>

4113:
old  <	; PushFloat 0>
new  <	; UnarySubtract Â£temporary673 x>

4114:
old  <	fldz>
new  <	fchs>

4116:
old  < fabs$2:>
new  < ceil$6:>

4117:
old  <	; SignedGreaterThanEqual 7 x 0>
new  <	; Parameter 56 double Â£temporary673>

4118:
old  <	fcompp>
new  <	fstp qword [rbp + 56]>

4119:
old  <	fstsw ax>
new  <>

4120:
old  <	sahf>
new  < ceil$7:>

4121:
old  <	jbe fabs$7>
new  <	; Call 32 floor 0>

4122:
old  <>
new  <	mov qword [rbp + 32], ceil$8>

4123:
old  < fabs$3:>
new  <	mov [rbp + 40], rbp>

4124:
old  <	; PushFloat x>
new  <	add rbp, 32>

4125:
old  <	fld qword [rbp + 24]>
new  <	jmp floor>

4127:
old  < fabs$4:>
new  < ceil$8:>

4128:
old  <	; UnarySubtract Â£temporary687 x>
new  <	; PostCall 32>

4129:
old  <	fchs>
new  <>

4130:
old  <>
new  < ceil$9:>

4131:
old  < fabs$5:>
new  <	; GetReturnValue Â£temporary674>

4132:
old  <	; DecreaseStack>
new  <>

4133:
old  <>
new  < ceil$10:>

4134:
old  < fabs$6:>
new  <	; UnarySubtract Â£temporary675 Â£temporary674>

4135:
old  <	; Goto 8>
new  <	fchs>

4136:
old  <	jmp fabs$8>
new  <>

4137:
old  <>
new  < ceil$11:>

4138:
old  < fabs$7:>
new  <	; SetReturnValue>

4139:
old  <	; PushFloat x>
new  <>

4140:
old  <	fld qword [rbp + 24]>
new  < ceil$12:>

4141:
old  <>
new  <	; Return Â£temporary675>

4142:
old  < fabs$8:>
new  <	mov rax, [rbp]>

4143:
old  <	; Return Â£temporary688>
new  <	mov rdi, [rbp + 16]>

4144:
old  <	mov rax, [rbp]>
new  <	mov rbp, [rbp + 8]>

4145:
old  <	mov rdi, [rbp + 16]>
new  <	jmp rax>

4146:
old  <	mov rbp, [rbp + 8]>
new  <>

4147:
old  <	jmp rax>
new  < ceil$13:>

4148:
old  <>
new  <	; PushFloat x>

4149:
old  < fabs$9:>
new  <	fld qword [rbp + 24]>

4150:
old  <	; FunctionEnd fabs>
new  <>

SetJmp.asm
56:
old  <	; Return 0>
new  <	; SetReturnValue>

57:
old  <	mov ebx, 0>
new  <>

58:
old  <	mov rax, [rbp]>
new  < setjmp$12:>

59:
old  <	mov rdi, [rbp + 16]>
new  <	; Return 0>

60:
old  <	mov rbp, [rbp + 8]>
new  <	mov ebx, 0>

61:
old  <	jmp rax>
new  <	mov rax, [rbp]>

62:
old  <>
new  <	mov rdi, [rbp + 16]>

63:
old  < setjmp$12:>
new  <	mov rbp, [rbp + 8]>

64:
old  <	; FunctionEnd setjmp>
new  <	jmp rax>

66:
old  <section .text>
new  < setjmp$13:>

67:
old  <>
new  <	; FunctionEnd setjmp>

68:
old  < longjmp:>
new  <>

69:
old  <	; AssignRegister ebx return_value>
new  <section .text>

70:
old  <	mov ebx, [rbp + 32]>
new  <>

71:
old  <>
new  < longjmp:>

72:
old  < longjmp$1:>
new  <	; AssignRegister ebx return_value>

73:
old  <	; Dereference Â£temporary698 -> buf buf 0>
new  <	mov ebx, [rbp + 32]>

74:
old  <	mov rsi, [rbp + 24]>
new  <>

75:
old  <>
new  < longjmp$1:>

76:
old  < longjmp$2:>
new  <	; Dereference Â£temporary698 -> buf buf 0>

77:
old  <	; AssignRegister rcx Â£temporary698 -> buf>
new  <	mov rsi, [rbp + 24]>

78:
old  <	mov rcx, [rsi]>
new  <>

79:
old  <>
new  < longjmp$2:>

80:
old  < longjmp$3:>
new  <	; AssignRegister rcx Â£temporary698 -> buf>

81:
old  <	; Dereference Â£temporary700 -> buf buf 0>
new  <	mov rcx, [rsi]>

82:
old  <	mov rsi, [rbp + 24]>
new  <>

83:
old  <>
new  < longjmp$3:>

84:
old  < longjmp$4:>
new  <	; Dereference Â£temporary700 -> buf buf 0>

85:
old  <	; AssignRegister rdi Â£temporary700 -> buf>
new  <	mov rsi, [rbp + 24]>

86:
old  <	mov rdi, [rsi + 16]>
new  <>

87:
old  <>
new  < longjmp$4:>

88:
old  < longjmp$5:>
new  <	; AssignRegister rdi Â£temporary700 -> buf>

89:
old  <	; Dereference Â£temporary702 -> buf buf 0>
new  <	mov rdi, [rsi + 16]>

90:
old  <	mov rsi, [rbp + 24]>
new  <>

91:
old  <>
new  < longjmp$5:>

92:
old  < longjmp$6:>
new  <	; Dereference Â£temporary702 -> buf buf 0>

93:
old  <	; AssignRegister rbp Â£temporary702 -> buf>
new  <	mov rsi, [rbp + 24]>

94:
old  <	mov rbp, [rsi + 8]>
new  <>

95:
old  <>
new  < longjmp$6:>

96:
old  < longjmp$7:>
new  <	; AssignRegister rbp Â£temporary702 -> buf>

97:
old  <	; JumpRegister rcx>
new  <	mov rbp, [rsi + 8]>

98:
old  <	jmp rcx>
new  <>

99:
old  <>
new  < longjmp$7:>

100:
old  < longjmp$8:>
new  <	; JumpRegister rcx>

101:
old  <	; Return>
new  <	jmp rcx>

102:
old  <	mov rax, [rbp]>
new  <>

103:
old  <	mov rdi, [rbp + 16]>
new  < longjmp$8:>

104:
old  <	mov rbp, [rbp + 8]>
new  <	; Return>

105:
old  <	jmp rax>
new  <	mov rax, [rbp]>

106:
old  <>
new  <	mov rdi, [rbp + 16]>

107:
old  < longjmp$9:>
new  <	mov rbp, [rbp + 8]>

108:
old  <	; FunctionEnd longjmp>
new  <	jmp rax>

Signal.asm
45:
old  <	; NotEqual 7 func 0>
new  <	; NotEqual 8 func 0>

47:
old  <	jne raise$7>
new  <	jne raise$8>

68:
old  <	; Return 1>
new  <	; SetReturnValue>

69:
old  <	mov ebx, 1>
new  <>

70:
old  <	mov rax, [rbp]>
new  < raise$7:>

71:
old  <	mov rdi, [rbp + 16]>
new  <	; Return 1>

72:
old  <	mov rbp, [rbp + 8]>
new  <	mov ebx, 1>

73:
old  <	jmp rax>
new  <	mov rax, [rbp]>

74:
old  <>
new  <	mov rdi, [rbp + 16]>

75:
old  < raise$7:>
new  <	mov rbp, [rbp + 8]>

76:
old  <	; NotEqual 13 func 0>
new  <	jmp rax>

77:
old  <	cmp qword [rbp + 28], 0>
new  <>

78:
old  <	jne raise$13>
new  < raise$8:>

79:
old  <>
new  <	; NotEqual 15 func 0>

80:
old  < raise$8:>
new  <	cmp qword [rbp + 28], 0>

81:
old  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	jne raise$15>

84:
old  <	; Parameter 60 pointer "Raise error\n">
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

85:
old  <	mov qword [rbp + 60], string_Raise20error0A#>
new  <>

86:
old  <>
new  < raise$10:>

87:
old  < raise$10:>
new  <	; Parameter 60 pointer "Raise error\n">

88:
old  <	; Call 36 printf 0>
new  <	mov qword [rbp + 60], string_Raise20error0A#>

89:
old  <	mov qword [rbp + 36], raise$11>
new  <>

90:
old  <	mov [rbp + 44], rbp>
new  < raise$11:>

91:
old  <	add rbp, 36>
new  <	; Call 36 printf 0>

92:
old  <	mov rdi, rbp>
new  <	mov qword [rbp + 36], raise$12>

93:
old  <	jmp printf>
new  <	mov [rbp + 44], rbp>

94:
old  <>
new  <	add rbp, 36>

95:
old  < raise$11:>
new  <	mov rdi, rbp>

96:
old  <	; PostCall 36>
new  <	jmp printf>

99:
old  <	; Return 0>
new  <	; PostCall 36>

100:
old  <	mov ebx, 0>
new  <>

101:
old  <	mov rax, [rbp]>
new  < raise$13:>

102:
old  <	mov rdi, [rbp + 16]>
new  <	; SetReturnValue>

103:
old  <	mov rbp, [rbp + 8]>
new  <>

104:
old  <	jmp rax>
new  < raise$14:>

105:
old  <>
new  <	; Return 0>

106:
old  < raise$13:>
new  <	mov ebx, 0>

107:
old  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov rax, [rbp]>

108:
old  <>
new  <	mov rdi, [rbp + 16]>

109:
old  < raise$14:>
new  <	mov rbp, [rbp + 8]>

110:
old  <	; Parameter 60 pointer "Raise function, calling %i with %i\n">
new  <	jmp rax>

111:
old  <	mov qword [rbp + 60], string_Raise20function2C20calling2025i20with2025i0A#>
new  <>

112:
old  <>
new  < raise$15:>

113:
old  < raise$15:>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

114:
old  <	; Parameter 68 pointer func>
new  <>

115:
old  <	mov rax, [rbp + 28]>
new  < raise$16:>

116:
old  <	mov [rbp + 68], rax>
new  <	; Parameter 60 pointer "Raise function, calling %i with %i\n">

117:
old  <>
new  <	mov qword [rbp + 60], string_Raise20function2C20calling2025i20with2025i0A#>

118:
old  < raise$16:>
new  <>

119:
old  <	; Parameter 76 signedint sig>
new  < raise$17:>

120:
old  <	mov eax, [rbp + 24]>
new  <	; Parameter 68 pointer func>

121:
old  <	mov [rbp + 76], eax>
new  <	mov rax, [rbp + 28]>

122:
old  <>
new  <	mov [rbp + 68], rax>

123:
old  < raise$17:>
new  <>

124:
old  <	; Call 36 printf 12>
new  < raise$18:>

125:
old  <	mov qword [rbp + 36], raise$18>
new  <	; Parameter 76 signedint sig>

126:
old  <	mov [rbp + 44], rbp>
new  <	mov eax, [rbp + 24]>

127:
old  <	add rbp, 36>
new  <	mov [rbp + 76], eax>

128:
old  <	mov rdi, rbp>
new  <>

129:
old  <	add rdi, 12>
new  < raise$19:>

130:
old  <	jmp printf>
new  <	; Call 36 printf 12>

131:
old  <>
new  <	mov qword [rbp + 36], raise$20>

132:
old  < raise$18:>
new  <	mov [rbp + 44], rbp>

133:
old  <	; PostCall 36>
new  <	add rbp, 36>

134:
old  <>
new  <	mov rdi, rbp>

135:
old  < raise$19:>
new  <	add rdi, 12>

136:
old  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	jmp printf>

139:
old  <	; Parameter 60 signedint sig>
new  <	; PostCall 36>

140:
old  <	mov eax, [rbp + 24]>
new  <>

141:
old  <	mov [rbp + 60], eax>
new  < raise$21:>

142:
old  <>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

143:
old  < raise$21:>
new  <>

144:
old  <	; Call 36 func 0>
new  < raise$22:>

145:
old  <	mov qword [rbp + 36], raise$22>
new  <	; Parameter 60 signedint sig>

146:
old  <	mov [rbp + 44], rbp>
new  <	mov eax, [rbp + 24]>

147:
old  <	mov rax, [rbp + 28]>
new  <	mov [rbp + 60], eax>

148:
old  <	add rbp, 36>
new  <>

149:
old  <	jmp rax>
new  < raise$23:>

150:
old  <>
new  <	; Call 36 func 0>

151:
old  < raise$22:>
new  <	mov qword [rbp + 36], raise$24>

152:
old  <	; PostCall 36>
new  <	mov [rbp + 44], rbp>

153:
old  <>
new  <	mov rax, [rbp + 28]>

154:
old  < raise$23:>
new  <	add rbp, 36>

155:
old  <	; Return 1>
new  <	jmp rax>

156:
old  <	mov ebx, 1>
new  <>

157:
old  <	mov rax, [rbp]>
new  < raise$24:>

158:
old  <	mov rdi, [rbp + 16]>
new  <	; PostCall 36>

159:
old  <	mov rbp, [rbp + 8]>
new  <>

160:
old  <	jmp rax>
new  < raise$25:>

161:
old  <>
new  <	; SetReturnValue>

162:
old  < raise$24:>
new  <>

163:
old  <	; FunctionEnd raise>
new  < raise$26:>

File.asm
88:
old  <@2192$EEXIST:>
new  <@2188$EEXIST:>

94:
old  <@2193$ENOENT:>
new  <@2189$ENOENT:>

100:
old  <@2194$EACCES:>
new  <@2190$EACCES:>

106:
old  <@2195$SEEK_SET:>
new  <@2191$SEEK_SET:>

112:
old  <@2196$SEEK_CUR:>
new  <@2192$SEEK_CUR:>

118:
old  <@2197$SEEK_END:>
new  <@2193$SEEK_END:>

124:
old  <@2198$READ:>
new  <@2194$READ:>

130:
old  <@2199$WRITE:>
new  <@2195$WRITE:>

136:
old  <@2200$READ_WRITE:>
new  <@2196$READ_WRITE:>

142:
old  < @2202$filecreate:>
new  < @2198$filecreate:>

146:
old  < @2202$filecreate$1:>
new  < @2198$filecreate$1:>

150:
old  < @2202$filecreate$2:>
new  < @2198$filecreate$2:>

153:
old  < @2202$filecreate$3:>
new  < @2198$filecreate$3:>

157:
old  < @2202$filecreate$4:>
new  < @2198$filecreate$4:>

161:
old  < @2202$filecreate$5:>
new  < @2198$filecreate$5:>

162:
old  <	; Return 0>
new  <	; SetReturnValue>

163:
old  <	mov ebx, 0>
new  <>

164:
old  <	mov rax, [rbp]>
new  < @2198$filecreate$6:>

165:
old  <	mov rdi, [rbp + 16]>
new  <	; Return 0>

166:
old  <	mov rbp, [rbp + 8]>
new  <	mov ebx, 0>

167:
old  <	jmp rax>
new  <	mov rax, [rbp]>

168:
old  <>
new  <	mov rdi, [rbp + 16]>

169:
old  < @2202$filecreate$6:>
new  <	mov rbp, [rbp + 8]>

170:
old  <	; FunctionEnd filecreate>
new  <	jmp rax>

172:
old  <section .text>
new  < @2198$filecreate$7:>

173:
old  <>
new  <	; FunctionEnd filecreate>

174:
old  < fileexists:>
new  <>

175:
old  <	; Return 1>
new  <section .text>

176:
old  <	mov ebx, 1>
new  <>

177:
old  <	mov rax, [rbp]>
new  < fileexists:>

178:
old  <	mov rdi, [rbp + 16]>
new  <	; SetReturnValue>

179:
old  <	mov rbp, [rbp + 8]>
new  <>

180:
old  <	jmp rax>
new  < fileexists$1:>

181:
old  <>
new  <	; Return 1>

182:
old  < fileexists$1:>
new  <	mov ebx, 1>

183:
old  <	; FunctionEnd fileexists>
new  <	mov rax, [rbp]>

184:
old  <>
new  <	mov rdi, [rbp + 16]>

185:
old  <section .text>
new  <	mov rbp, [rbp + 8]>

186:
old  <>
new  <	jmp rax>

187:
old  < @2206$fileopen:>
new  <>

188:
old  <	; AssignRegister rax 2>
new  < fileexists$2:>

189:
old  <	mov rax, 2>
new  <	; FunctionEnd fileexists>

191:
old  < @2206$fileopen$1:>
new  <section .text>

192:
old  <	; IntegralToIntegral Â£temporary715 name>
new  <>

193:
old  <	mov rdi, [rbp + 24]>
new  < @2202$fileopen:>

194:
old  <>
new  <	; AssignRegister rax 2>

195:
old  < @2206$fileopen$2:>
new  <	mov rax, 2>

196:
old  <	; AssignRegister rdi Â£temporary715>
new  <>

197:
old  <>
new  < @2202$fileopen$1:>

198:
old  < @2206$fileopen$3:>
new  <	; IntegralToIntegral Â£temporary715 name>

199:
old  <	; IntegralToIntegral Â£temporary717 mode>
new  <	mov rdi, [rbp + 24]>

200:
old  <	mov si, [rbp + 32]>
new  <>

201:
old  <	mov rbx, 65535>
new  < @2202$fileopen$2:>

202:
old  <	and rsi, rbx>
new  <	; AssignRegister rdi Â£temporary715>

204:
old  < @2206$fileopen$4:>
new  < @2202$fileopen$3:>

205:
old  <	; AssignRegister rsi Â£temporary717>
new  <	; IntegralToIntegral Â£temporary717 mode>

206:
old  <>
new  <	mov si, [rbp + 32]>

207:
old  < @2206$fileopen$5:>
new  <	mov rbx, 65535>

208:
old  <	; SysCall>
new  <	and rsi, rbx>

209:
old  <	syscall>
new  <>

210:
old  <>
new  < @2202$fileopen$4:>

211:
old  < @2206$fileopen$6:>
new  <	; AssignRegister rsi Â£temporary717>

212:
old  <	; InspectRegister Â£temporary718 rax>
new  <>

213:
old  <>
new  < @2202$fileopen$5:>

214:
old  < @2206$fileopen$7:>
new  <	; SysCall>

215:
old  <	; IntegralToIntegral Â£temporary719 Â£temporary718>
new  <	syscall>

217:
old  < @2206$fileopen$8:>
new  < @2202$fileopen$6:>

218:
old  <	; Return Â£temporary719>
new  <	; InspectRegister Â£temporary718 rax>

219:
old  <	mov ebx, eax>
new  <>

220:
old  <	mov rax, [rbp]>
new  < @2202$fileopen$7:>

221:
old  <	mov rdi, [rbp + 16]>
new  <	; IntegralToIntegral Â£temporary719 Â£temporary718>

222:
old  <	mov rbp, [rbp + 8]>
new  <>

223:
old  <	jmp rax>
new  < @2202$fileopen$8:>

224:
old  <>
new  <	; SetReturnValue>

225:
old  < @2206$fileopen$9:>
new  <>

226:
old  <	; FunctionEnd fileopen>
new  < @2202$fileopen$9:>

227:
old  <>
new  <	; Return Â£temporary719>

228:
old  <section .data>
new  <	mov ebx, eax>

229:
old  <>
new  <	mov rax, [rbp]>

230:
old  <Array_41#:>
new  <	mov rdi, [rbp + 16]>

231:
old  <	; Initializer Array 41>
new  <	mov rbp, [rbp + 8]>

232:
old  <	dq 41>
new  <	jmp rax>

234:
old  <section .text>
new  < @2202$fileopen$10:>

235:
old  <>
new  <	; FunctionEnd fileopen>

236:
old  < fopen:>
new  <>

237:
old  <	; Assign index 0>
new  <section .data>

238:
old  <	mov dword [rbp + 40], 0>
new  <>

239:
old  <>
new  <Array_41#:>

240:
old  < fopen$1:>
new  <	; Initializer Array 41>

241:
old  <	; SignedGreaterThanEqual 22 index 20>
new  <	dq 41>

242:
old  <	cmp dword [rbp + 40], 20>
new  <>

243:
old  <	jge fopen$22>
new  <section .text>

245:
old  < fopen$2:>
new  < fopen:>

246:
old  <	; IntegralToIntegral Â£temporary723 index>
new  <	; Assign index 0>

247:
old  <	mov eax, [rbp + 40]>
new  <	mov dword [rbp + 40], 0>

248:
old  <	mov rbx, 4294967295>
new  <>

249:
old  <	and rax, rbx>
new  < fopen$1:>

250:
old  <>
new  <	; SignedGreaterThanEqual 23 index 20>

251:
old  < fopen$3:>
new  <	cmp dword [rbp + 40], 20>

252:
old  <	; UnsignedMultiply Â£temporary724 Â£temporary723 41>
new  <	jge fopen$23>

253:
old  <	xor rdx, rdx>
new  <>

254:
old  <	mul qword [Array_41#]>
new  < fopen$2:>

255:
old  <>
new  <	; IntegralToIntegral Â£temporary723 index>

256:
old  < fopen$4:>
new  <	mov eax, [rbp + 40]>

257:
old  <	; BinaryAdd Â£temporary725 g_fileArray Â£temporary724>
new  <	mov rbx, 4294967295>

258:
old  <	mov rsi, g_fileArray>
new  <	and rax, rbx>

259:
old  <	add rsi, rax>
new  <>

260:
old  <>
new  < fopen$3:>

261:
old  < fopen$5:>
new  <	; UnsignedMultiply Â£temporary724 Â£temporary723 41>

262:
old  <	; Dereference Â£temporary722 -> Â£temporary725 Â£temporary725 0>
new  <	xor rdx, rdx>

263:
old  <>
new  <	mul qword [Array_41#]>

264:
old  < fopen$6:>
new  <>

265:
old  <	; NotEqual 20 Â£temporary722.open -> Â£temporary725 0>
new  < fopen$4:>

266:
old  <	cmp dword [rsi], 0>
new  <	; BinaryAdd Â£temporary725 g_fileArray Â£temporary724>

267:
old  <	jne fopen$20>
new  <	mov rsi, g_fileArray>

268:
old  <>
new  <	add rsi, rax>

269:
old  < fopen$7:>
new  <>

270:
old  <	; PreCall 44 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < fopen$5:>

271:
old  <>
new  <	; Dereference Â£temporary722 -> Â£temporary725 Â£temporary725 0>

272:
old  < fopen$8:>
new  <>

273:
old  <	; Parameter 68 pointer name>
new  < fopen$6:>

274:
old  <	mov rax, [rbp + 24]>
new  <	; NotEqual 21 Â£temporary722.open -> Â£temporary725 0>

275:
old  <	mov [rbp + 68], rax>
new  <	cmp dword [rsi], 0>

276:
old  <>
new  <	jne fopen$21>

277:
old  < fopen$9:>
new  <>

278:
old  <	; Parameter 76 pointer mode>
new  < fopen$7:>

279:
old  <	mov rax, [rbp + 32]>
new  <	; PreCall 44 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

280:
old  <	mov [rbp + 76], rax>
new  <>

281:
old  <>
new  < fopen$8:>

282:
old  < fopen$10:>
new  <	; Parameter 68 pointer name>

283:
old  <	; IntegralToIntegral Â£temporary729 index>
new  <	mov rax, [rbp + 24]>

284:
old  <	mov eax, [rbp + 40]>
new  <	mov [rbp + 68], rax>

285:
old  <	mov rbx, 4294967295>
new  <>

286:
old  <	and rax, rbx>
new  < fopen$9:>

287:
old  <>
new  <	; Parameter 76 pointer mode>

288:
old  < fopen$11:>
new  <	mov rax, [rbp + 32]>

289:
old  <	; UnsignedMultiply Â£temporary730 Â£temporary729 41>
new  <	mov [rbp + 76], rax>

290:
old  <	xor rdx, rdx>
new  <>

291:
old  <	mul qword [Array_41#]>
new  < fopen$10:>

292:
old  <>
new  <	; IntegralToIntegral Â£temporary729 index>

293:
old  < fopen$12:>
new  <	mov eax, [rbp + 40]>

294:
old  <	; BinaryAdd Â£temporary731 g_fileArray Â£temporary730>
new  <	mov rbx, 4294967295>

295:
old  <	mov rsi, g_fileArray>
new  <	and rax, rbx>

296:
old  <	add rsi, rax>
new  <>

297:
old  <>
new  < fopen$11:>

298:
old  < fopen$13:>
new  <	; UnsignedMultiply Â£temporary730 Â£temporary729 41>

299:
old  <	; Dereference Â£temporary728 -> Â£temporary731 Â£temporary731 0>
new  <	xor rdx, rdx>

300:
old  <>
new  <	mul qword [Array_41#]>

301:
old  < fopen$14:>
new  <>

302:
old  <	; Address Â£temporary732 Â£temporary728 -> Â£temporary731>
new  < fopen$12:>

303:
old  <>
new  <	; BinaryAdd Â£temporary731 g_fileArray Â£temporary730>

304:
old  < fopen$15:>
new  <	mov rsi, g_fileArray>

305:
old  <	; Parameter 84 pointer Â£temporary732>
new  <	add rsi, rax>

306:
old  <	mov [rbp + 84], rsi>
new  <>

307:
old  <>
new  < fopen$13:>

308:
old  < fopen$16:>
new  <	; Dereference Â£temporary728 -> Â£temporary731 Â£temporary731 0>

309:
old  <	; Call 44 freopen 0>
new  <>

310:
old  <	mov qword [rbp + 44], fopen$17>
new  < fopen$14:>

311:
old  <	mov [rbp + 52], rbp>
new  <	; Address Â£temporary732 Â£temporary728 -> Â£temporary731>

312:
old  <	add rbp, 44>
new  <>

313:
old  <	jmp freopen>
new  < fopen$15:>

314:
old  <>
new  <	; Parameter 84 pointer Â£temporary732>

315:
old  < fopen$17:>
new  <	mov [rbp + 84], rsi>

316:
old  <	; PostCall 44>
new  <>

317:
old  <>
new  < fopen$16:>

318:
old  < fopen$18:>
new  <	; Call 44 freopen 0>

319:
old  <	; GetReturnValue Â£temporary733>
new  <	mov qword [rbp + 44], fopen$17>

320:
old  <>
new  <	mov [rbp + 52], rbp>

321:
old  < fopen$19:>
new  <	add rbp, 44>

322:
old  <	; Return Â£temporary733>
new  <	jmp freopen>

323:
old  <	mov rax, [rbp]>
new  <>

324:
old  <	mov rdi, [rbp + 16]>
new  < fopen$17:>

325:
old  <	mov rbp, [rbp + 8]>
new  <	; PostCall 44>

326:
old  <	jmp rax>
new  <>

327:
old  <>
new  < fopen$18:>

328:
old  < fopen$20:>
new  <	; GetReturnValue Â£temporary733>

329:
old  <	; BinaryAdd index index 1>
new  <>

330:
old  <	inc dword [rbp + 40]>
new  < fopen$19:>

331:
old  <>
new  <	; SetReturnValue>

332:
old  < fopen$21:>
new  <>

333:
old  <	; Goto 1>
new  < fopen$20:>

334:
old  <	jmp fopen$1>
new  <	; Return Â£temporary733>

335:
old  <>
new  <	mov rax, [rbp]>

336:
old  < fopen$22:>
new  <	mov rdi, [rbp + 16]>

337:
old  <	; Return 0>
new  <	mov rbp, [rbp + 8]>

338:
old  <	mov rbx, 0>
new  <	jmp rax>

339:
old  <	mov rax, [rbp]>
new  <>

340:
old  <	mov rdi, [rbp + 16]>
new  < fopen$21:>

341:
old  <	mov rbp, [rbp + 8]>
new  <	; BinaryAdd index index 1>

342:
old  <	jmp rax>
new  <	inc dword [rbp + 40]>

344:
old  < fopen$23:>
new  < fopen$22:>

345:
old  <	; FunctionEnd fopen>
new  <	; Goto 1>

346:
old  <>
new  <	jmp fopen$1>

347:
old  <section .data>
new  <>

348:
old  <>
new  < fopen$23:>

349:
old  <string_r#:>
new  <	; SetReturnValue>

350:
old  <	; Initializer String r>
new  <>

351:
old  <	db "r", 0>
new  < fopen$24:>

352:
old  <>
new  <	; Return 0>

353:
old  <section .data>
new  <	mov rbx, 0>

354:
old  <>
new  <	mov rax, [rbp]>

355:
old  <string_w#:>
new  <	mov rdi, [rbp + 16]>

356:
old  <	; Initializer String w>
new  <	mov rbp, [rbp + 8]>

357:
old  <	db "w", 0>
new  <	jmp rax>

359:
old  <section .data>
new  < fopen$25:>

360:
old  <>
new  <	; FunctionEnd fopen>

361:
old  <string_a#:>
new  <>

362:
old  <	; Initializer String a>
new  <section .data>

363:
old  <	db "a", 0>
new  <>

364:
old  <>
new  <string_r#:>

365:
old  <section .data>
new  <	; Initializer String r>

366:
old  <>
new  <	db "r", 0>

367:
old  <string_r2B#:>
new  <>

368:
old  <	; Initializer String r+>
new  <section .data>

369:
old  <	db "r+", 0>
new  <>

370:
old  <>
new  <string_w#:>

371:
old  <section .data>
new  <	; Initializer String w>

372:
old  <>
new  <	db "w", 0>

373:
old  <string_w2B#:>
new  <>

374:
old  <	; Initializer String w+>
new  <section .data>

375:
old  <	db "w+", 0>
new  <>

376:
old  <>
new  <string_a#:>

377:
old  <section .data>
new  <	; Initializer String a>

378:
old  <>
new  <	db "a", 0>

379:
old  <string_a2B#:>
new  <>

380:
old  <	; Initializer String a+>
new  <section .data>

381:
old  <	db "a+", 0>
new  <>

382:
old  <>
new  <string_r2B#:>

383:
old  <section .text>
new  <	; Initializer String r+>

384:
old  <>
new  <	db "r+", 0>

385:
old  < freopen:>
new  <>

386:
old  <	; Assign handle -1>
new  <section .data>

387:
old  <	mov dword [rbp + 48], -1>
new  <>

388:
old  <>
new  <string_w2B#:>

389:
old  < freopen$1:>
new  <	; Initializer String w+>

390:
old  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	db "w+", 0>

392:
old  < freopen$2:>
new  <section .data>

393:
old  <	; Parameter 76 pointer mode>
new  <>

394:
old  <	mov rax, [rbp + 32]>
new  <string_a2B#:>

395:
old  <	mov [rbp + 76], rax>
new  <	; Initializer String a+>

396:
old  <>
new  <	db "a+", 0>

397:
old  < freopen$3:>
new  <>

398:
old  <	; Parameter 84 pointer "r">
new  <section .text>

399:
old  <	mov qword [rbp + 84], string_r#>
new  <>

400:
old  <>
new  < freopen:>

401:
old  < freopen$4:>
new  <	; Assign handle -1>

402:
old  <	; Call 52 strcmp 0>
new  <	mov dword [rbp + 48], -1>

403:
old  <	mov qword [rbp + 52], freopen$5>
new  <>

404:
old  <	mov [rbp + 60], rbp>
new  < freopen$1:>

405:
old  <	add rbp, 52>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

406:
old  <	jmp strcmp>
new  <>

407:
old  <>
new  < freopen$2:>

408:
old  < freopen$5:>
new  <	; Parameter 76 pointer mode>

409:
old  <	; PostCall 52>
new  <	mov rax, [rbp + 32]>

410:
old  <>
new  <	mov [rbp + 76], rax>

411:
old  < freopen$6:>
new  <>

412:
old  <	; GetReturnValue Â£temporary734>
new  < freopen$3:>

413:
old  <>
new  <	; Parameter 84 pointer "r">

414:
old  < freopen$7:>
new  <	mov qword [rbp + 84], string_r#>

415:
old  <	; NotEqual 16 Â£temporary734 0>
new  <>

416:
old  <	cmp ebx, 0>
new  < freopen$4:>

417:
old  <	jne freopen$16>
new  <	; Call 52 strcmp 0>

418:
old  <>
new  <	mov qword [rbp + 52], freopen$5>

419:
old  < freopen$8:>
new  <	mov [rbp + 60], rbp>

420:
old  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	add rbp, 52>

421:
old  <>
new  <	jmp strcmp>

422:
old  < freopen$9:>
new  <>

423:
old  <	; Parameter 76 pointer name>
new  < freopen$5:>

424:
old  <	mov rax, [rbp + 24]>
new  <	; PostCall 52>

425:
old  <	mov [rbp + 76], rax>
new  <>

426:
old  <>
new  < freopen$6:>

427:
old  < freopen$10:>
new  <	; GetReturnValue Â£temporary734>

428:
old  <	; Parameter 84 unsignedshortint 64>
new  <>

429:
old  <	mov word [rbp + 84], 64>
new  < freopen$7:>

430:
old  <>
new  <	; NotEqual 16 Â£temporary734 0>

431:
old  < freopen$11:>
new  <	cmp ebx, 0>

432:
old  <	; Call 52 fileopen 0>
new  <	jne freopen$16>

433:
old  <	mov qword [rbp + 52], freopen$12>
new  <>

434:
old  <	mov [rbp + 60], rbp>
new  < freopen$8:>

435:
old  <	add rbp, 52>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

436:
old  <	jmp @2206$fileopen>
new  <>

437:
old  <>
new  < freopen$9:>

438:
old  < freopen$12:>
new  <	; Parameter 76 pointer name>

439:
old  <	; PostCall 52>
new  <	mov rax, [rbp + 24]>

440:
old  <>
new  <	mov [rbp + 76], rax>

441:
old  < freopen$13:>
new  <>

442:
old  <	; GetReturnValue Â£temporary736>
new  < freopen$10:>

443:
old  <>
new  <	; Parameter 84 unsignedshortint 64>

444:
old  < freopen$14:>
new  <	mov word [rbp + 84], 64>

445:
old  <	; Assign handle Â£temporary736>
new  <>

446:
old  <	mov [rbp + 48], ebx>
new  < freopen$11:>

447:
old  <>
new  <	; Call 52 fileopen 0>

448:
old  < freopen$15:>
new  <	mov qword [rbp + 52], freopen$12>

449:
old  <	; Goto 130>
new  <	mov [rbp + 60], rbp>

450:
old  <	jmp freopen$130>
new  <	add rbp, 52>

451:
old  <>
new  <	jmp @2202$fileopen>

452:
old  < freopen$16:>
new  <>

453:
old  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < freopen$12:>

454:
old  <>
new  <	; PostCall 52>

455:
old  < freopen$17:>
new  <>

456:
old  <	; Parameter 76 pointer mode>
new  < freopen$13:>

457:
old  <	mov rax, [rbp + 32]>
new  <	; GetReturnValue Â£temporary736>

458:
old  <	mov [rbp + 76], rax>
new  <>

459:
old  <>
new  < freopen$14:>

460:
old  < freopen$18:>
new  <	; Assign handle Â£temporary736>

461:
old  <	; Parameter 84 pointer "w">
new  <	mov [rbp + 48], ebx>

462:
old  <	mov qword [rbp + 84], string_w#>
new  <>

463:
old  <>
new  < freopen$15:>

464:
old  < freopen$19:>
new  <	; Goto 130>

465:
old  <	; Call 52 strcmp 0>
new  <	jmp freopen$130>

466:
old  <	mov qword [rbp + 52], freopen$20>
new  <>

467:
old  <	mov [rbp + 60], rbp>
new  < freopen$16:>

468:
old  <	add rbp, 52>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

469:
old  <	jmp strcmp>
new  <>

470:
old  <>
new  < freopen$17:>

471:
old  < freopen$20:>
new  <	; Parameter 76 pointer mode>

472:
old  <	; PostCall 52>
new  <	mov rax, [rbp + 32]>

473:
old  <>
new  <	mov [rbp + 76], rax>

474:
old  < freopen$21:>
new  <>

475:
old  <	; GetReturnValue Â£temporary737>
new  < freopen$18:>

476:
old  <>
new  <	; Parameter 84 pointer "w">

477:
old  < freopen$22:>
new  <	mov qword [rbp + 84], string_w#>

478:
old  <	; NotEqual 30 Â£temporary737 0>
new  <>

479:
old  <	cmp ebx, 0>
new  < freopen$19:>

480:
old  <	jne freopen$30>
new  <	; Call 52 strcmp 0>

481:
old  <>
new  <	mov qword [rbp + 52], freopen$20>

482:
old  < freopen$23:>
new  <	mov [rbp + 60], rbp>

483:
old  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	add rbp, 52>

484:
old  <>
new  <	jmp strcmp>

485:
old  < freopen$24:>
new  <>

486:
old  <	; Parameter 76 pointer name>
new  < freopen$20:>

487:
old  <	mov rax, [rbp + 24]>
new  <	; PostCall 52>

488:
old  <	mov [rbp + 76], rax>
new  <>

489:
old  <>
new  < freopen$21:>

490:
old  < freopen$25:>
new  <	; GetReturnValue Â£temporary737>

491:
old  <	; Call 52 filecreate 0>
new  <>

492:
old  <	mov qword [rbp + 52], freopen$26>
new  < freopen$22:>

493:
old  <	mov [rbp + 60], rbp>
new  <	; NotEqual 30 Â£temporary737 0>

494:
old  <	add rbp, 52>
new  <	cmp ebx, 0>

495:
old  <	jmp @2202$filecreate>
new  <	jne freopen$30>

497:
old  < freopen$26:>
new  < freopen$23:>

498:
old  <	; PostCall 52>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

500:
old  < freopen$27:>
new  < freopen$24:>

501:
old  <	; GetReturnValue Â£temporary739>
new  <	; Parameter 76 pointer name>

502:
old  <>
new  <	mov rax, [rbp + 24]>

503:
old  < freopen$28:>
new  <	mov [rbp + 76], rax>

504:
old  <	; Assign handle Â£temporary739>
new  <>

505:
old  <	mov [rbp + 48], ebx>
new  < freopen$25:>

506:
old  <>
new  <	; Call 52 filecreate 0>

507:
old  < freopen$29:>
new  <	mov qword [rbp + 52], freopen$26>

508:
old  <	; Goto 130>
new  <	mov [rbp + 60], rbp>

509:
old  <	jmp freopen$130>
new  <	add rbp, 52>

510:
old  <>
new  <	jmp @2198$filecreate>

511:
old  < freopen$30:>
new  <>

512:
old  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < freopen$26:>

513:
old  <>
new  <	; PostCall 52>

514:
old  < freopen$31:>
new  <>

515:
old  <	; Parameter 76 pointer mode>
new  < freopen$27:>

516:
old  <	mov rax, [rbp + 32]>
new  <	; GetReturnValue Â£temporary739>

517:
old  <	mov [rbp + 76], rax>
new  <>

518:
old  <>
new  < freopen$28:>

519:
old  < freopen$32:>
new  <	; Assign handle Â£temporary739>

520:
old  <	; Parameter 84 pointer "a">
new  <	mov [rbp + 48], ebx>

521:
old  <	mov qword [rbp + 84], string_a#>
new  <>

522:
old  <>
new  < freopen$29:>

523:
old  < freopen$33:>
new  <	; Goto 130>

524:
old  <	; Call 52 strcmp 0>
new  <	jmp freopen$130>

525:
old  <	mov qword [rbp + 52], freopen$34>
new  <>

526:
old  <	mov [rbp + 60], rbp>
new  < freopen$30:>

527:
old  <	add rbp, 52>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

528:
old  <	jmp strcmp>
new  <>

529:
old  <>
new  < freopen$31:>

530:
old  < freopen$34:>
new  <	; Parameter 76 pointer mode>

531:
old  <	; PostCall 52>
new  <	mov rax, [rbp + 32]>

532:
old  <>
new  <	mov [rbp + 76], rax>

533:
old  < freopen$35:>
new  <>

534:
old  <	; GetReturnValue Â£temporary740>
new  < freopen$32:>

535:
old  <>
new  <	; Parameter 84 pointer "a">

536:
old  < freopen$36:>
new  <	mov qword [rbp + 84], string_a#>

537:
old  <	; NotEqual 59 Â£temporary740 0>
new  <>

538:
old  <	cmp ebx, 0>
new  < freopen$33:>

539:
old  <	jne freopen$59>
new  <	; Call 52 strcmp 0>

540:
old  <>
new  <	mov qword [rbp + 52], freopen$34>

541:
old  < freopen$37:>
new  <	mov [rbp + 60], rbp>

542:
old  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	add rbp, 52>

543:
old  <>
new  <	jmp strcmp>

544:
old  < freopen$38:>
new  <>

545:
old  <	; Parameter 76 pointer name>
new  < freopen$34:>

546:
old  <	mov rax, [rbp + 24]>
new  <	; PostCall 52>

547:
old  <	mov [rbp + 76], rax>
new  <>

548:
old  <>
new  < freopen$35:>

549:
old  < freopen$39:>
new  <	; GetReturnValue Â£temporary740>

550:
old  <	; Parameter 84 unsignedshortint 65>
new  <>

551:
old  <	mov word [rbp + 84], 65>
new  < freopen$36:>

552:
old  <>
new  <	; NotEqual 59 Â£temporary740 0>

553:
old  < freopen$40:>
new  <	cmp ebx, 0>

554:
old  <	; Call 52 fileopen 0>
new  <	jne freopen$59>

555:
old  <	mov qword [rbp + 52], freopen$41>
new  <>

556:
old  <	mov [rbp + 60], rbp>
new  < freopen$37:>

557:
old  <	add rbp, 52>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

558:
old  <	jmp @2206$fileopen>
new  <>

559:
old  <>
new  < freopen$38:>

560:
old  < freopen$41:>
new  <	; Parameter 76 pointer name>

561:
old  <	; PostCall 52>
new  <	mov rax, [rbp + 24]>

562:
old  <>
new  <	mov [rbp + 76], rax>

563:
old  < freopen$42:>
new  <>

564:
old  <	; GetReturnValue Â£temporary742>
new  < freopen$39:>

565:
old  <>
new  <	; Parameter 84 unsignedshortint 65>

566:
old  < freopen$43:>
new  <	mov word [rbp + 84], 65>

567:
old  <	; Assign handle Â£temporary742>
new  <>

568:
old  <	mov [rbp + 48], ebx>
new  < freopen$40:>

569:
old  <>
new  <	; Call 52 fileopen 0>

570:
old  < freopen$44:>
new  <	mov qword [rbp + 52], freopen$41>

571:
old  <	; Equal 52 handle -1>
new  <	mov [rbp + 60], rbp>

572:
old  <	cmp dword [rbp + 48], -1>
new  <	add rbp, 52>

573:
old  <	je freopen$52>
new  <	jmp @2202$fileopen>

575:
old  < freopen$45:>
new  < freopen$41:>

576:
old  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; PostCall 52>

578:
old  < freopen$46:>
new  < freopen$42:>

579:
old  <	; Parameter 76 pointer stream>
new  <	; GetReturnValue Â£temporary742>

580:
old  <	mov rax, [rbp + 40]>
new  <>

581:
old  <	mov [rbp + 76], rax>
new  < freopen$43:>

582:
old  <>
new  <	; Assign handle Â£temporary742>

583:
old  < freopen$47:>
new  <	mov [rbp + 48], ebx>

584:
old  <	; Parameter 84 signedint 0>
new  <>

585:
old  <	mov dword [rbp + 84], 0>
new  < freopen$44:>

586:
old  <>
new  <	; Equal 52 handle -1>

587:
old  < freopen$48:>
new  <	cmp dword [rbp + 48], -1>

588:
old  <	; Parameter 88 signedint 2>
new  <	je freopen$52>

589:
old  <	mov dword [rbp + 88], 2>
new  <>

590:
old  <>
new  < freopen$45:>

591:
old  < freopen$49:>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

592:
old  <	; Call 52 fseek 0>
new  <>

593:
old  <	mov qword [rbp + 52], freopen$50>
new  < freopen$46:>

594:
old  <	mov [rbp + 60], rbp>
new  <	; Parameter 76 pointer stream>

595:
old  <	add rbp, 52>
new  <	mov rax, [rbp + 40]>

596:
old  <	jmp fseek>
new  <	mov [rbp + 76], rax>

598:
old  < freopen$50:>
new  < freopen$47:>

599:
old  <	; PostCall 52>
new  <	; Parameter 84 signedint 0>

600:
old  <>
new  <	mov dword [rbp + 84], 0>

601:
old  < freopen$51:>
new  <>

602:
old  <	; Goto 130>
new  < freopen$48:>

603:
old  <	jmp freopen$130>
new  <	; Parameter 88 signedint 2>

604:
old  <>
new  <	mov dword [rbp + 88], 2>

605:
old  < freopen$52:>
new  <>

606:
old  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < freopen$49:>

607:
old  <>
new  <	; Call 52 fseek 0>

608:
old  < freopen$53:>
new  <	mov qword [rbp + 52], freopen$50>

609:
old  <	; Parameter 76 pointer name>
new  <	mov [rbp + 60], rbp>

610:
old  <	mov rax, [rbp + 24]>
new  <	add rbp, 52>

611:
old  <	mov [rbp + 76], rax>
new  <	jmp fseek>

613:
old  < freopen$54:>
new  < freopen$50:>

614:
old  <	; Call 52 filecreate 0>
new  <	; PostCall 52>

615:
old  <	mov qword [rbp + 52], freopen$55>
new  <>

616:
old  <	mov [rbp + 60], rbp>
new  < freopen$51:>

617:
old  <	add rbp, 52>
new  <	; Goto 130>

618:
old  <	jmp @2202$filecreate>
new  <	jmp freopen$130>

620:
old  < freopen$55:>
new  < freopen$52:>

621:
old  <	; PostCall 52>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

623:
old  < freopen$56:>
new  < freopen$53:>

624:
old  <	; GetReturnValue Â£temporary745>
new  <	; Parameter 76 pointer name>

625:
old  <>
new  <	mov rax, [rbp + 24]>

626:
old  < freopen$57:>
new  <	mov [rbp + 76], rax>

627:
old  <	; Assign handle Â£temporary745>
new  <>

628:
old  <	mov [rbp + 48], ebx>
new  < freopen$54:>

629:
old  <>
new  <	; Call 52 filecreate 0>

630:
old  < freopen$58:>
new  <	mov qword [rbp + 52], freopen$55>

631:
old  <	; Goto 130>
new  <	mov [rbp + 60], rbp>

632:
old  <	jmp freopen$130>
new  <	add rbp, 52>

633:
old  <>
new  <	jmp @2198$filecreate>

634:
old  < freopen$59:>
new  <>

635:
old  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < freopen$55:>

636:
old  <>
new  <	; PostCall 52>

637:
old  < freopen$60:>
new  <>

638:
old  <	; Parameter 76 pointer mode>
new  < freopen$56:>

639:
old  <	mov rax, [rbp + 32]>
new  <	; GetReturnValue Â£temporary745>

640:
old  <	mov [rbp + 76], rax>
new  <>

641:
old  <>
new  < freopen$57:>

642:
old  < freopen$61:>
new  <	; Assign handle Â£temporary745>

643:
old  <	; Parameter 84 pointer "r+">
new  <	mov [rbp + 48], ebx>

644:
old  <	mov qword [rbp + 84], string_r2B#>
new  <>

645:
old  <>
new  < freopen$58:>

646:
old  < freopen$62:>
new  <	; Goto 130>

647:
old  <	; Call 52 strcmp 0>
new  <	jmp freopen$130>

648:
old  <	mov qword [rbp + 52], freopen$63>
new  <>

649:
old  <	mov [rbp + 60], rbp>
new  < freopen$59:>

650:
old  <	add rbp, 52>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

651:
old  <	jmp strcmp>
new  <>

652:
old  <>
new  < freopen$60:>

653:
old  < freopen$63:>
new  <	; Parameter 76 pointer mode>

654:
old  <	; PostCall 52>
new  <	mov rax, [rbp + 32]>

655:
old  <>
new  <	mov [rbp + 76], rax>

656:
old  < freopen$64:>
new  <>

657:
old  <	; GetReturnValue Â£temporary746>
new  < freopen$61:>

658:
old  <>
new  <	; Parameter 84 pointer "r+">

659:
old  < freopen$65:>
new  <	mov qword [rbp + 84], string_r2B#>

660:
old  <	; NotEqual 74 Â£temporary746 0>
new  <>

661:
old  <	cmp ebx, 0>
new  < freopen$62:>

662:
old  <	jne freopen$74>
new  <	; Call 52 strcmp 0>

663:
old  <>
new  <	mov qword [rbp + 52], freopen$63>

664:
old  < freopen$66:>
new  <	mov [rbp + 60], rbp>

665:
old  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	add rbp, 52>

666:
old  <>
new  <	jmp strcmp>

667:
old  < freopen$67:>
new  <>

668:
old  <	; Parameter 76 pointer name>
new  < freopen$63:>

669:
old  <	mov rax, [rbp + 24]>
new  <	; PostCall 52>

670:
old  <	mov [rbp + 76], rax>
new  <>

671:
old  <>
new  < freopen$64:>

672:
old  < freopen$68:>
new  <	; GetReturnValue Â£temporary746>

673:
old  <	; Parameter 84 unsignedshortint 66>
new  <>

674:
old  <	mov word [rbp + 84], 66>
new  < freopen$65:>

675:
old  <>
new  <	; NotEqual 74 Â£temporary746 0>

676:
old  < freopen$69:>
new  <	cmp ebx, 0>

677:
old  <	; Call 52 fileopen 0>
new  <	jne freopen$74>

678:
old  <	mov qword [rbp + 52], freopen$70>
new  <>

679:
old  <	mov [rbp + 60], rbp>
new  < freopen$66:>

680:
old  <	add rbp, 52>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

681:
old  <	jmp @2206$fileopen>
new  <>

682:
old  <>
new  < freopen$67:>

683:
old  < freopen$70:>
new  <	; Parameter 76 pointer name>

684:
old  <	; PostCall 52>
new  <	mov rax, [rbp + 24]>

685:
old  <>
new  <	mov [rbp + 76], rax>

686:
old  < freopen$71:>
new  <>

687:
old  <	; GetReturnValue Â£temporary748>
new  < freopen$68:>

688:
old  <>
new  <	; Parameter 84 unsignedshortint 66>

689:
old  < freopen$72:>
new  <	mov word [rbp + 84], 66>

690:
old  <	; Assign handle Â£temporary748>
new  <>

691:
old  <	mov [rbp + 48], ebx>
new  < freopen$69:>

692:
old  <>
new  <	; Call 52 fileopen 0>

693:
old  < freopen$73:>
new  <	mov qword [rbp + 52], freopen$70>

694:
old  <	; Goto 130>
new  <	mov [rbp + 60], rbp>

695:
old  <	jmp freopen$130>
new  <	add rbp, 52>

696:
old  <>
new  <	jmp @2202$fileopen>

697:
old  < freopen$74:>
new  <>

698:
old  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < freopen$70:>

699:
old  <>
new  <	; PostCall 52>

700:
old  < freopen$75:>
new  <>

701:
old  <	; Parameter 76 pointer mode>
new  < freopen$71:>

702:
old  <	mov rax, [rbp + 32]>
new  <	; GetReturnValue Â£temporary748>

703:
old  <	mov [rbp + 76], rax>
new  <>

704:
old  <>
new  < freopen$72:>

705:
old  < freopen$76:>
new  <	; Assign handle Â£temporary748>

706:
old  <	; Parameter 84 pointer "w+">
new  <	mov [rbp + 48], ebx>

707:
old  <	mov qword [rbp + 84], string_w2B#>
new  <>

708:
old  <>
new  < freopen$73:>

709:
old  < freopen$77:>
new  <	; Goto 130>

710:
old  <	; Call 52 strcmp 0>
new  <	jmp freopen$130>

711:
old  <	mov qword [rbp + 52], freopen$78>
new  <>

712:
old  <	mov [rbp + 60], rbp>
new  < freopen$74:>

713:
old  <	add rbp, 52>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

714:
old  <	jmp strcmp>
new  <>

715:
old  <>
new  < freopen$75:>

716:
old  < freopen$78:>
new  <	; Parameter 76 pointer mode>

717:
old  <	; PostCall 52>
new  <	mov rax, [rbp + 32]>

718:
old  <>
new  <	mov [rbp + 76], rax>

719:
old  < freopen$79:>
new  <>

720:
old  <	; GetReturnValue Â£temporary749>
new  < freopen$76:>

721:
old  <>
new  <	; Parameter 84 pointer "w+">

722:
old  < freopen$80:>
new  <	mov qword [rbp + 84], string_w2B#>

723:
old  <	; NotEqual 102 Â£temporary749 0>
new  <>

724:
old  <	cmp ebx, 0>
new  < freopen$77:>

725:
old  <	jne freopen$102>
new  <	; Call 52 strcmp 0>

726:
old  <>
new  <	mov qword [rbp + 52], freopen$78>

727:
old  < freopen$81:>
new  <	mov [rbp + 60], rbp>

728:
old  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	add rbp, 52>

729:
old  <>
new  <	jmp strcmp>

730:
old  < freopen$82:>
new  <>

731:
old  <	; Parameter 76 pointer name>
new  < freopen$78:>

732:
old  <	mov rax, [rbp + 24]>
new  <	; PostCall 52>

733:
old  <	mov [rbp + 76], rax>
new  <>

734:
old  <>
new  < freopen$79:>

735:
old  < freopen$83:>
new  <	; GetReturnValue Â£temporary749>

736:
old  <	; Call 52 fileexists 0>
new  <>

737:
old  <	mov qword [rbp + 52], freopen$84>
new  < freopen$80:>

738:
old  <	mov [rbp + 60], rbp>
new  <	; NotEqual 102 Â£temporary749 0>

739:
old  <	add rbp, 52>
new  <	cmp ebx, 0>

740:
old  <	jmp fileexists>
new  <	jne freopen$102>

742:
old  < freopen$84:>
new  < freopen$81:>

743:
old  <	; PostCall 52>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

745:
old  < freopen$85:>
new  < freopen$82:>

746:
old  <	; GetReturnValue Â£temporary751>
new  <	; Parameter 76 pointer name>

747:
old  <>
new  <	mov rax, [rbp + 24]>

748:
old  < freopen$86:>
new  <	mov [rbp + 76], rax>

749:
old  <	; Equal 95 Â£temporary751 0>
new  <>

750:
old  <	cmp ebx, 0>
new  < freopen$83:>

751:
old  <	je freopen$95>
new  <	; Call 52 fileexists 0>

752:
old  <>
new  <	mov qword [rbp + 52], freopen$84>

753:
old  < freopen$87:>
new  <	mov [rbp + 60], rbp>

754:
old  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	add rbp, 52>

755:
old  <>
new  <	jmp fileexists>

756:
old  < freopen$88:>
new  <>

757:
old  <	; Parameter 76 pointer name>
new  < freopen$84:>

758:
old  <	mov rax, [rbp + 24]>
new  <	; PostCall 52>

759:
old  <	mov [rbp + 76], rax>
new  <>

760:
old  <>
new  < freopen$85:>

761:
old  < freopen$89:>
new  <	; GetReturnValue Â£temporary751>

762:
old  <	; Parameter 84 unsignedshortint 66>
new  <>

763:
old  <	mov word [rbp + 84], 66>
new  < freopen$86:>

764:
old  <>
new  <	; Equal 95 Â£temporary751 0>

765:
old  < freopen$90:>
new  <	cmp ebx, 0>

766:
old  <	; Call 52 fileopen 0>
new  <	je freopen$95>

767:
old  <	mov qword [rbp + 52], freopen$91>
new  <>

768:
old  <	mov [rbp + 60], rbp>
new  < freopen$87:>

769:
old  <	add rbp, 52>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

770:
old  <	jmp @2206$fileopen>
new  <>

771:
old  <>
new  < freopen$88:>

772:
old  < freopen$91:>
new  <	; Parameter 76 pointer name>

773:
old  <	; PostCall 52>
new  <	mov rax, [rbp + 24]>

774:
old  <>
new  <	mov [rbp + 76], rax>

775:
old  < freopen$92:>
new  <>

776:
old  <	; GetReturnValue Â£temporary752>
new  < freopen$89:>

777:
old  <>
new  <	; Parameter 84 unsignedshortint 66>

778:
old  < freopen$93:>
new  <	mov word [rbp + 84], 66>

779:
old  <	; Assign handle Â£temporary752>
new  <>

780:
old  <	mov [rbp + 48], ebx>
new  < freopen$90:>

781:
old  <>
new  <	; Call 52 fileopen 0>

782:
old  < freopen$94:>
new  <	mov qword [rbp + 52], freopen$91>

783:
old  <	; Goto 130>
new  <	mov [rbp + 60], rbp>

784:
old  <	jmp freopen$130>
new  <	add rbp, 52>

785:
old  <>
new  <	jmp @2202$fileopen>

786:
old  < freopen$95:>
new  <>

787:
old  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < freopen$91:>

788:
old  <>
new  <	; PostCall 52>

789:
old  < freopen$96:>
new  <>

790:
old  <	; Parameter 76 pointer name>
new  < freopen$92:>

791:
old  <	mov rax, [rbp + 24]>
new  <	; GetReturnValue Â£temporary752>

792:
old  <	mov [rbp + 76], rax>
new  <>

793:
old  <>
new  < freopen$93:>

794:
old  < freopen$97:>
new  <	; Assign handle Â£temporary752>

795:
old  <	; Call 52 filecreate 0>
new  <	mov [rbp + 48], ebx>

796:
old  <	mov qword [rbp + 52], freopen$98>
new  <>

797:
old  <	mov [rbp + 60], rbp>
new  < freopen$94:>

798:
old  <	add rbp, 52>
new  <	; Goto 130>

799:
old  <	jmp @2202$filecreate>
new  <	jmp freopen$130>

801:
old  < freopen$98:>
new  < freopen$95:>

802:
old  <	; PostCall 52>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

804:
old  < freopen$99:>
new  < freopen$96:>

805:
old  <	; GetReturnValue Â£temporary753>
new  <	; Parameter 76 pointer name>

806:
old  <>
new  <	mov rax, [rbp + 24]>

807:
old  < freopen$100:>
new  <	mov [rbp + 76], rax>

808:
old  <	; Assign handle Â£temporary753>
new  <>

809:
old  <	mov [rbp + 48], ebx>
new  < freopen$97:>

810:
old  <>
new  <	; Call 52 filecreate 0>

811:
old  < freopen$101:>
new  <	mov qword [rbp + 52], freopen$98>

812:
old  <	; Goto 130>
new  <	mov [rbp + 60], rbp>

813:
old  <	jmp freopen$130>
new  <	add rbp, 52>

814:
old  <>
new  <	jmp @2198$filecreate>

815:
old  < freopen$102:>
new  <>

816:
old  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < freopen$98:>

817:
old  <>
new  <	; PostCall 52>

818:
old  < freopen$103:>
new  <>

819:
old  <	; Parameter 76 pointer mode>
new  < freopen$99:>

820:
old  <	mov rax, [rbp + 32]>
new  <	; GetReturnValue Â£temporary753>

821:
old  <	mov [rbp + 76], rax>
new  <>

822:
old  <>
new  < freopen$100:>

823:
old  < freopen$104:>
new  <	; Assign handle Â£temporary753>

824:
old  <	; Parameter 84 pointer "a+">
new  <	mov [rbp + 48], ebx>

825:
old  <	mov qword [rbp + 84], string_a2B#>
new  <>

826:
old  <>
new  < freopen$101:>

827:
old  < freopen$105:>
new  <	; Goto 130>

828:
old  <	; Call 52 strcmp 0>
new  <	jmp freopen$130>

829:
old  <	mov qword [rbp + 52], freopen$106>
new  <>

830:
old  <	mov [rbp + 60], rbp>
new  < freopen$102:>

831:
old  <	add rbp, 52>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

832:
old  <	jmp strcmp>
new  <>

833:
old  <>
new  < freopen$103:>

834:
old  < freopen$106:>
new  <	; Parameter 76 pointer mode>

835:
old  <	; PostCall 52>
new  <	mov rax, [rbp + 32]>

836:
old  <>
new  <	mov [rbp + 76], rax>

837:
old  < freopen$107:>
new  <>

838:
old  <	; GetReturnValue Â£temporary755>
new  < freopen$104:>

839:
old  <>
new  <	; Parameter 84 pointer "a+">

840:
old  < freopen$108:>
new  <	mov qword [rbp + 84], string_a2B#>

841:
old  <	; NotEqual 130 Â£temporary755 0>
new  <>

842:
old  <	cmp ebx, 0>
new  < freopen$105:>

843:
old  <	jne freopen$130>
new  <	; Call 52 strcmp 0>

844:
old  <>
new  <	mov qword [rbp + 52], freopen$106>

845:
old  < freopen$109:>
new  <	mov [rbp + 60], rbp>

846:
old  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	add rbp, 52>

847:
old  <>
new  <	jmp strcmp>

848:
old  < freopen$110:>
new  <>

849:
old  <	; Parameter 76 pointer name>
new  < freopen$106:>

850:
old  <	mov rax, [rbp + 24]>
new  <	; PostCall 52>

851:
old  <	mov [rbp + 76], rax>
new  <>

852:
old  <>
new  < freopen$107:>

853:
old  < freopen$111:>
new  <	; GetReturnValue Â£temporary755>

854:
old  <	; Parameter 84 unsignedshortint 66>
new  <>

855:
old  <	mov word [rbp + 84], 66>
new  < freopen$108:>

856:
old  <>
new  <	; NotEqual 130 Â£temporary755 0>

857:
old  < freopen$112:>
new  <	cmp ebx, 0>

858:
old  <	; Call 52 fileopen 0>
new  <	jne freopen$130>

859:
old  <	mov qword [rbp + 52], freopen$113>
new  <>

860:
old  <	mov [rbp + 60], rbp>
new  < freopen$109:>

861:
old  <	add rbp, 52>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

862:
old  <	jmp @2206$fileopen>
new  <>

863:
old  <>
new  < freopen$110:>

864:
old  < freopen$113:>
new  <	; Parameter 76 pointer name>

865:
old  <	; PostCall 52>
new  <	mov rax, [rbp + 24]>

866:
old  <>
new  <	mov [rbp + 76], rax>

867:
old  < freopen$114:>
new  <>

868:
old  <	; GetReturnValue Â£temporary757>
new  < freopen$111:>

869:
old  <>
new  <	; Parameter 84 unsignedshortint 66>

870:
old  < freopen$115:>
new  <	mov word [rbp + 84], 66>

871:
old  <	; Assign handle Â£temporary757>
new  <>

872:
old  <	mov [rbp + 48], ebx>
new  < freopen$112:>

873:
old  <>
new  <	; Call 52 fileopen 0>

874:
old  < freopen$116:>
new  <	mov qword [rbp + 52], freopen$113>

875:
old  <	; Equal 124 handle -1>
new  <	mov [rbp + 60], rbp>

876:
old  <	cmp dword [rbp + 48], -1>
new  <	add rbp, 52>

877:
old  <	je freopen$124>
new  <	jmp @2202$fileopen>

879:
old  < freopen$117:>
new  < freopen$113:>

880:
old  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; PostCall 52>

882:
old  < freopen$118:>
new  < freopen$114:>

883:
old  <	; Parameter 76 pointer stream>
new  <	; GetReturnValue Â£temporary757>

884:
old  <	mov rax, [rbp + 40]>
new  <>

885:
old  <	mov [rbp + 76], rax>
new  < freopen$115:>

886:
old  <>
new  <	; Assign handle Â£temporary757>

887:
old  < freopen$119:>
new  <	mov [rbp + 48], ebx>

888:
old  <	; Parameter 84 signedint 0>
new  <>

889:
old  <	mov dword [rbp + 84], 0>
new  < freopen$116:>

890:
old  <>
new  <	; Equal 124 handle -1>

891:
old  < freopen$120:>
new  <	cmp dword [rbp + 48], -1>

892:
old  <	; Parameter 88 signedint 2>
new  <	je freopen$124>

893:
old  <	mov dword [rbp + 88], 2>
new  <>

894:
old  <>
new  < freopen$117:>

895:
old  < freopen$121:>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

896:
old  <	; Call 52 fseek 0>
new  <>

897:
old  <	mov qword [rbp + 52], freopen$122>
new  < freopen$118:>

898:
old  <	mov [rbp + 60], rbp>
new  <	; Parameter 76 pointer stream>

899:
old  <	add rbp, 52>
new  <	mov rax, [rbp + 40]>

900:
old  <	jmp fseek>
new  <	mov [rbp + 76], rax>

902:
old  < freopen$122:>
new  < freopen$119:>

903:
old  <	; PostCall 52>
new  <	; Parameter 84 signedint 0>

904:
old  <>
new  <	mov dword [rbp + 84], 0>

905:
old  < freopen$123:>
new  <>

906:
old  <	; Goto 130>
new  < freopen$120:>

907:
old  <	jmp freopen$130>
new  <	; Parameter 88 signedint 2>

908:
old  <>
new  <	mov dword [rbp + 88], 2>

909:
old  < freopen$124:>
new  <>

910:
old  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < freopen$121:>

911:
old  <>
new  <	; Call 52 fseek 0>

912:
old  < freopen$125:>
new  <	mov qword [rbp + 52], freopen$122>

913:
old  <	; Parameter 76 pointer name>
new  <	mov [rbp + 60], rbp>

914:
old  <	mov rax, [rbp + 24]>
new  <	add rbp, 52>

915:
old  <	mov [rbp + 76], rax>
new  <	jmp fseek>

917:
old  < freopen$126:>
new  < freopen$122:>

918:
old  <	; Call 52 filecreate 0>
new  <	; PostCall 52>

919:
old  <	mov qword [rbp + 52], freopen$127>
new  <>

920:
old  <	mov [rbp + 60], rbp>
new  < freopen$123:>

921:
old  <	add rbp, 52>
new  <	; Goto 130>

922:
old  <	jmp @2202$filecreate>
new  <	jmp freopen$130>

924:
old  < freopen$127:>
new  < freopen$124:>

925:
old  <	; PostCall 52>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

927:
old  < freopen$128:>
new  < freopen$125:>

928:
old  <	; GetReturnValue Â£temporary760>
new  <	; Parameter 76 pointer name>

929:
old  <>
new  <	mov rax, [rbp + 24]>

930:
old  < freopen$129:>
new  <	mov [rbp + 76], rax>

931:
old  <	; Assign handle Â£temporary760>
new  <>

932:
old  <	mov [rbp + 48], ebx>
new  < freopen$126:>

933:
old  <>
new  <	; Call 52 filecreate 0>

934:
old  < freopen$130:>
new  <	mov qword [rbp + 52], freopen$127>

935:
old  <	; Equal 146 handle -1>
new  <	mov [rbp + 60], rbp>

936:
old  <	cmp dword [rbp + 48], -1>
new  <	add rbp, 52>

937:
old  <	je freopen$146>
new  <	jmp @2198$filecreate>

939:
old  < freopen$131:>
new  < freopen$127:>

940:
old  <	; Dereference Â£temporary762 -> stream stream 0>
new  <	; PostCall 52>

941:
old  <	mov rsi, [rbp + 40]>
new  <>

942:
old  <>
new  < freopen$128:>

943:
old  < freopen$132:>
new  <	; GetReturnValue Â£temporary760>

944:
old  <	; Assign Â£temporary762 -> stream 1>
new  <>

945:
old  <	mov dword [rsi], 1>
new  < freopen$129:>

946:
old  <>
new  <	; Assign handle Â£temporary760>

947:
old  < freopen$133:>
new  <	mov [rbp + 48], ebx>

948:
old  <	; Dereference Â£temporary763 -> stream stream 0>
new  <>

949:
old  <	mov rsi, [rbp + 40]>
new  < freopen$130:>

950:
old  <>
new  <	; Equal 147 handle -1>

951:
old  < freopen$134:>
new  <	cmp dword [rbp + 48], -1>

952:
old  <	; Assign Â£temporary763 -> stream handle>
new  <	je freopen$147>

953:
old  <	mov eax, [rbp + 48]>
new  <>

954:
old  <	mov [rsi + 4], eax>
new  < freopen$131:>

955:
old  <>
new  <	; Dereference Â£temporary762 -> stream stream 0>

956:
old  < freopen$135:>
new  <	mov rsi, [rbp + 40]>

957:
old  <	; Dereference Â£temporary764 -> stream stream 0>
new  <>

958:
old  <	mov rsi, [rbp + 40]>
new  < freopen$132:>

959:
old  <>
new  <	; Assign Â£temporary762 -> stream 1>

960:
old  < freopen$136:>
new  <	mov dword [rsi], 1>

961:
old  <	; Assign Â£temporary764 -> stream 0>
new  <>

962:
old  <	mov dword [rsi + 33], 0>
new  < freopen$133:>

963:
old  <>
new  <	; Dereference Â£temporary763 -> stream stream 0>

964:
old  < freopen$137:>
new  <	mov rsi, [rbp + 40]>

965:
old  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

966:
old  <>
new  < freopen$134:>

967:
old  < freopen$138:>
new  <	; Assign Â£temporary763 -> stream handle>

968:
old  <	; Dereference Â£temporary765 -> stream stream 0>
new  <	mov eax, [rbp + 48]>

969:
old  <	mov rsi, [rbp + 40]>
new  <	mov [rsi + 4], eax>

971:
old  < freopen$139:>
new  < freopen$135:>

972:
old  <	; Parameter 76 pointer Â£temporary765 -> stream>
new  <	; Dereference Â£temporary764 -> stream stream 0>

973:
old  <	mov [rbp + 76], rsi>
new  <	mov rsi, [rbp + 40]>

974:
old  <	add qword [rbp + 76], 8>
new  <>

975:
old  <>
new  < freopen$136:>

976:
old  < freopen$140:>
new  <	; Assign Â£temporary764 -> stream 0>

977:
old  <	; Parameter 84 pointer name>
new  <	mov dword [rsi + 33], 0>

978:
old  <	mov rax, [rbp + 24]>
new  <>

979:
old  <	mov [rbp + 84], rax>
new  < freopen$137:>

980:
old  <>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

981:
old  < freopen$141:>
new  <>

982:
old  <	; Call 52 strcpy 0>
new  < freopen$138:>

983:
old  <	mov qword [rbp + 52], freopen$142>
new  <	; Dereference Â£temporary765 -> stream stream 0>

984:
old  <	mov [rbp + 60], rbp>
new  <	mov rsi, [rbp + 40]>

985:
old  <	add rbp, 52>
new  <>

986:
old  <	jmp strcpy>
new  < freopen$139:>

987:
old  <>
new  <	; Parameter 76 pointer Â£temporary765 -> stream>

988:
old  < freopen$142:>
new  <	mov [rbp + 76], rsi>

989:
old  <	; PostCall 52>
new  <	add qword [rbp + 76], 8>

991:
old  < freopen$143:>
new  < freopen$140:>

992:
old  <	; Dereference Â£temporary767 -> stream stream 0>
new  <	; Parameter 84 pointer name>

993:
old  <	mov rsi, [rbp + 40]>
new  <	mov rax, [rbp + 24]>

994:
old  <>
new  <	mov [rbp + 84], rax>

995:
old  < freopen$144:>
new  <>

996:
old  <	; Assign Â£temporary767 -> stream 0>
new  < freopen$141:>

997:
old  <	mov dword [rsi + 37], 0>
new  <	; Call 52 strcpy 0>

998:
old  <>
new  <	mov qword [rbp + 52], freopen$142>

999:
old  < freopen$145:>
new  <	mov [rbp + 60], rbp>

1000:
old  <	; Return stream>
new  <	add rbp, 52>

1001:
old  <	mov rbx, [rbp + 40]>
new  <	jmp strcpy>

1002:
old  <	mov rax, [rbp]>
new  <>

1003:
old  <	mov rdi, [rbp + 16]>
new  < freopen$142:>

1004:
old  <	mov rbp, [rbp + 8]>
new  <	; PostCall 52>

1005:
old  <	jmp rax>
new  <>

1006:
old  <>
new  < freopen$143:>

1007:
old  < freopen$146:>
new  <	; Dereference Â£temporary767 -> stream stream 0>

1008:
old  <	; Dereference Â£temporary768 -> stream stream 0>
new  <	mov rsi, [rbp + 40]>

1009:
old  <	mov rsi, [rbp + 40]>
new  <>

1010:
old  <>
new  < freopen$144:>

1011:
old  < freopen$147:>
new  <	; Assign Â£temporary767 -> stream 0>

1012:
old  <	; Assign Â£temporary768 -> stream 0>
new  <	mov dword [rsi + 37], 0>

1013:
old  <	mov dword [rsi], 0>
new  <>

1014:
old  <>
new  < freopen$145:>

1015:
old  < freopen$148:>
new  <	; SetReturnValue>

1016:
old  <	; Return 0>
new  <>

1017:
old  <	mov rbx, 0>
new  < freopen$146:>

1018:
old  <	mov rax, [rbp]>
new  <	; Return stream>

1019:
old  <	mov rdi, [rbp + 16]>
new  <	mov rbx, [rbp + 40]>

1020:
old  <	mov rbp, [rbp + 8]>
new  <	mov rax, [rbp]>

1021:
old  <	jmp rax>
new  <	mov rdi, [rbp + 16]>

1022:
old  <>
new  <	mov rbp, [rbp + 8]>

1023:
old  < freopen$149:>
new  <	jmp rax>

1024:
old  <	; FunctionEnd freopen>
new  <>

1025:
old  <>
new  < freopen$147:>

1026:
old  <section .text>
new  <	; Dereference Â£temporary768 -> stream stream 0>

1027:
old  <>
new  <	mov rsi, [rbp + 40]>

1028:
old  < fflush:>
new  <>

1029:
old  <	; NotEqual 22 stream 0>
new  < freopen$148:>

1030:
old  <	cmp qword [rbp + 24], 0>
new  <	; Assign Â£temporary768 -> stream 0>

1031:
old  <	jne fflush$22>
new  <	mov dword [rsi], 0>

1033:
old  < fflush$1:>
new  < freopen$149:>

1034:
old  <	; Assign index 0>
new  <	; SetReturnValue>

1035:
old  <	mov dword [rbp + 32], 0>
new  <>

1036:
old  <>
new  < freopen$150:>

1037:
old  < fflush$2:>
new  <	; Return 0>

1038:
old  <	; SignedGreaterThanEqual 22 index 20>
new  <	mov rbx, 0>

1039:
old  <	cmp dword [rbp + 32], 20>
new  <	mov rax, [rbp]>

1040:
old  <	jge fflush$22>
new  <	mov rdi, [rbp + 16]>

1041:
old  <>
new  <	mov rbp, [rbp + 8]>

1042:
old  < fflush$3:>
new  <	jmp rax>

1043:
old  <	; IntegralToIntegral Â£temporary773 index>
new  <>

1044:
old  <	mov eax, [rbp + 32]>
new  < freopen$151:>

1045:
old  <	mov rbx, 4294967295>
new  <	; FunctionEnd freopen>

1046:
old  <	and rax, rbx>
new  <>

1047:
old  <>
new  <section .text>

1048:
old  < fflush$4:>
new  <>

1049:
old  <	; UnsignedMultiply Â£temporary774 Â£temporary773 41>
new  < fflush:>

1050:
old  <	xor rdx, rdx>
new  <	; NotEqual 23 stream 0>

1051:
old  <	mul qword [Array_41#]>
new  <	cmp qword [rbp + 24], 0>

1052:
old  <>
new  <	jne fflush$23>

1053:
old  < fflush$5:>
new  <>

1054:
old  <	; BinaryAdd Â£temporary775 g_fileArray Â£temporary774>
new  < fflush$1:>

1055:
old  <	mov rsi, g_fileArray>
new  <	; Assign index 0>

1056:
old  <	add rsi, rax>
new  <	mov dword [rbp + 32], 0>

1058:
old  < fflush$6:>
new  < fflush$2:>

1059:
old  <	; Dereference Â£temporary772 -> Â£temporary775 Â£temporary775 0>
new  <	; SignedGreaterThanEqual 23 index 20>

1060:
old  <>
new  <	cmp dword [rbp + 32], 20>

1061:
old  < fflush$7:>
new  <	jge fflush$23>

1062:
old  <	; Equal 20 Â£temporary772.open -> Â£temporary775 0>
new  <>

1063:
old  <	cmp dword [rsi], 0>
new  < fflush$3:>

1064:
old  <	je fflush$20>
new  <	; IntegralToIntegral Â£temporary773 index>

1065:
old  <>
new  <	mov eax, [rbp + 32]>

1066:
old  < fflush$8:>
new  <	mov rbx, 4294967295>

1067:
old  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	and rax, rbx>

1069:
old  < fflush$9:>
new  < fflush$4:>

1070:
old  <	; IntegralToIntegral Â£temporary777 index>
new  <	; UnsignedMultiply Â£temporary774 Â£temporary773 41>

1071:
old  <	mov eax, [rbp + 32]>
new  <	xor rdx, rdx>

1072:
old  <	mov rbx, 4294967295>
new  <	mul qword [Array_41#]>

1073:
old  <	and rax, rbx>
new  <>

1074:
old  <>
new  < fflush$5:>

1075:
old  < fflush$10:>
new  <	; BinaryAdd Â£temporary775 g_fileArray Â£temporary774>

1076:
old  <	; UnsignedMultiply Â£temporary778 Â£temporary777 41>
new  <	mov rsi, g_fileArray>

1077:
old  <	xor rdx, rdx>
new  <	add rsi, rax>

1078:
old  <	mul qword [Array_41#]>
new  <>

1079:
old  <>
new  < fflush$6:>

1080:
old  < fflush$11:>
new  <	; Dereference Â£temporary772 -> Â£temporary775 Â£temporary775 0>

1081:
old  <	; BinaryAdd Â£temporary779 g_fileArray Â£temporary778>
new  <>

1082:
old  <	mov rsi, g_fileArray>
new  < fflush$7:>

1083:
old  <	add rsi, rax>
new  <	; Equal 21 Â£temporary772.open -> Â£temporary775 0>

1084:
old  <>
new  <	cmp dword [rsi], 0>

1085:
old  < fflush$12:>
new  <	je fflush$21>

1086:
old  <	; Dereference Â£temporary776 -> Â£temporary779 Â£temporary779 0>
new  <>

1087:
old  <>
new  < fflush$8:>

1088:
old  < fflush$13:>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1089:
old  <	; Address Â£temporary780 Â£temporary776 -> Â£temporary779>
new  <>

1090:
old  <>
new  < fflush$9:>

1091:
old  < fflush$14:>
new  <	; IntegralToIntegral Â£temporary777 index>

1092:
old  <	; Parameter 60 pointer Â£temporary780>
new  <	mov eax, [rbp + 32]>

1093:
old  <	mov [rbp + 60], rsi>
new  <	mov rbx, 4294967295>

1094:
old  <>
new  <	and rax, rbx>

1095:
old  < fflush$15:>
new  <>

1096:
old  <	; Call 36 fflush 0>
new  < fflush$10:>

1097:
old  <	mov qword [rbp + 36], fflush$16>
new  <	; UnsignedMultiply Â£temporary778 Â£temporary777 41>

1098:
old  <	mov [rbp + 44], rbp>
new  <	xor rdx, rdx>

1099:
old  <	add rbp, 36>
new  <	mul qword [Array_41#]>

1100:
old  <	jmp fflush>
new  <>

1101:
old  <>
new  < fflush$11:>

1102:
old  < fflush$16:>
new  <	; BinaryAdd Â£temporary779 g_fileArray Â£temporary778>

1103:
old  <	; PostCall 36>
new  <	mov rsi, g_fileArray>

1104:
old  <>
new  <	add rsi, rax>

1105:
old  < fflush$17:>
new  <>

1106:
old  <	; GetReturnValue Â£temporary781>
new  < fflush$12:>

1107:
old  <>
new  <	; Dereference Â£temporary776 -> Â£temporary779 Â£temporary779 0>

1108:
old  < fflush$18:>
new  <>

1109:
old  <	; NotEqual 20 Â£temporary781 -1>
new  < fflush$13:>

1110:
old  <	cmp ebx, -1>
new  <	; Address Â£temporary780 Â£temporary776 -> Â£temporary779>

1111:
old  <	jne fflush$20>
new  <>

1112:
old  <>
new  < fflush$14:>

1113:
old  < fflush$19:>
new  <	; Parameter 60 pointer Â£temporary780>

1114:
old  <	; Return -1>
new  <	mov [rbp + 60], rsi>

1115:
old  <	mov ebx, -1>
new  <>

1116:
old  <	mov rax, [rbp]>
new  < fflush$15:>

1117:
old  <	mov rdi, [rbp + 16]>
new  <	; Call 36 fflush 0>

1118:
old  <	mov rbp, [rbp + 8]>
new  <	mov qword [rbp + 36], fflush$16>

1119:
old  <	jmp rax>
new  <	mov [rbp + 44], rbp>

1120:
old  <>
new  <	add rbp, 36>

1121:
old  < fflush$20:>
new  <	jmp fflush>

1122:
old  <	; BinaryAdd index index 1>
new  <>

1123:
old  <	inc dword [rbp + 32]>
new  < fflush$16:>

1124:
old  <>
new  <	; PostCall 36>

1125:
old  < fflush$21:>
new  <>

1126:
old  <	; Goto 2>
new  < fflush$17:>

1127:
old  <	jmp fflush$2>
new  <	; GetReturnValue Â£temporary781>

1129:
old  < fflush$22:>
new  < fflush$18:>

1130:
old  <	; Return 0>
new  <	; NotEqual 21 Â£temporary781 -1>

1131:
old  <	mov ebx, 0>
new  <	cmp ebx, -1>

1132:
old  <	mov rax, [rbp]>
new  <	jne fflush$21>

1133:
old  <	mov rdi, [rbp + 16]>
new  <>

1134:
old  <	mov rbp, [rbp + 8]>
new  < fflush$19:>

1135:
old  <	jmp rax>
new  <	; SetReturnValue>

1137:
old  < fflush$23:>
new  < fflush$20:>

1138:
old  <	; FunctionEnd fflush>
new  <	; Return -1>

1139:
old  <>
new  <	mov ebx, -1>

1140:
old  <section .text>
new  <	mov rax, [rbp]>

1141:
old  <>
new  <	mov rdi, [rbp + 16]>

1142:
old  < fclose:>
new  <	mov rbp, [rbp + 8]>

1143:
old  <	; Equal 7 stream 0>
new  <	jmp rax>

1144:
old  <	cmp qword [rbp + 24], 0>
new  <>

1145:
old  <	je fclose$7>
new  < fflush$21:>

1146:
old  <>
new  <	; BinaryAdd index index 1>

1147:
old  < fclose$1:>
new  <	inc dword [rbp + 32]>

1148:
old  <	; AssignRegister rax 3>
new  <>

1149:
old  <	mov rax, 3>
new  < fflush$22:>

1150:
old  <>
new  <	; Goto 2>

1151:
old  < fclose$2:>
new  <	jmp fflush$2>

1152:
old  <	; Dereference Â£temporary787 -> stream stream 0>
new  <>

1153:
old  <	mov rsi, [rbp + 24]>
new  < fflush$23:>

1154:
old  <>
new  <	; SetReturnValue>

1155:
old  < fclose$3:>
new  <>

1156:
old  <	; IntegralToIntegral Â£temporary788 Â£temporary787 -> stream>
new  < fflush$24:>

1157:
old  <	mov edi, [rsi + 4]>
new  <	; Return 0>

1158:
old  <	mov rbx, 4294967295>
new  <	mov ebx, 0>

1159:
old  <	and rdi, rbx>
new  <	mov rax, [rbp]>

1160:
old  <>
new  <	mov rdi, [rbp + 16]>

1161:
old  < fclose$4:>
new  <	mov rbp, [rbp + 8]>

1162:
old  <	; AssignRegister rdi Â£temporary788>
new  <	jmp rax>

1164:
old  < fclose$5:>
new  < fflush$25:>

1165:
old  <	; SysCall>
new  <	; FunctionEnd fflush>

1166:
old  <	syscall>
new  <>

1167:
old  <>
new  <section .text>

1168:
old  < fclose$6:>
new  <>

1169:
old  <	; Return 0>
new  < fclose:>

1170:
old  <	mov ebx, 0>
new  <	; Equal 8 stream 0>

1171:
old  <	mov rax, [rbp]>
new  <	cmp qword [rbp + 24], 0>

1172:
old  <	mov rdi, [rbp + 16]>
new  <	je fclose$8>

1173:
old  <	mov rbp, [rbp + 8]>
new  <>

1174:
old  <	jmp rax>
new  < fclose$1:>

1175:
old  <>
new  <	; AssignRegister rax 3>

1176:
old  < fclose$7:>
new  <	mov rax, 3>

1177:
old  <	; Assign index 0>
new  <>

1178:
old  <	mov dword [rbp + 32], 0>
new  < fclose$2:>

1179:
old  <>
new  <	; Dereference Â£temporary787 -> stream stream 0>

1180:
old  < fclose$8:>
new  <	mov rsi, [rbp + 24]>

1181:
old  <	; SignedGreaterThanEqual 28 index 20>
new  <>

1182:
old  <	cmp dword [rbp + 32], 20>
new  < fclose$3:>

1183:
old  <	jge fclose$28>
new  <	; IntegralToIntegral Â£temporary788 Â£temporary787 -> stream>

1184:
old  <>
new  <	mov edi, [rsi + 4]>

1185:
old  < fclose$9:>
new  <	mov rbx, 4294967295>

1186:
old  <	; IntegralToIntegral Â£temporary792 index>
new  <	and rdi, rbx>

1187:
old  <	mov eax, [rbp + 32]>
new  <>

1188:
old  <	mov rbx, 4294967295>
new  < fclose$4:>

1189:
old  <	and rax, rbx>
new  <	; AssignRegister rdi Â£temporary788>

1191:
old  < fclose$10:>
new  < fclose$5:>

1192:
old  <	; UnsignedMultiply Â£temporary793 Â£temporary792 41>
new  <	; SysCall>

1193:
old  <	xor rdx, rdx>
new  <	syscall>

1194:
old  <	mul qword [Array_41#]>
new  <>

1195:
old  <>
new  < fclose$6:>

1196:
old  < fclose$11:>
new  <	; SetReturnValue>

1197:
old  <	; BinaryAdd Â£temporary794 g_fileArray Â£temporary793>
new  <>

1198:
old  <	mov rsi, g_fileArray>
new  < fclose$7:>

1199:
old  <	add rsi, rax>
new  <	; Return 0>

1200:
old  <>
new  <	mov ebx, 0>

1201:
old  < fclose$12:>
new  <	mov rax, [rbp]>

1202:
old  <	; Dereference Â£temporary791 -> Â£temporary794 Â£temporary794 0>
new  <	mov rdi, [rbp + 16]>

1203:
old  <>
new  <	mov rbp, [rbp + 8]>

1204:
old  < fclose$13:>
new  <	jmp rax>

1205:
old  <	; Equal 26 Â£temporary791.open -> Â£temporary794 0>
new  <>

1206:
old  <	cmp dword [rsi], 0>
new  < fclose$8:>

1207:
old  <	je fclose$26>
new  <	; Assign index 0>

1208:
old  <>
new  <	mov dword [rbp + 32], 0>

1209:
old  < fclose$14:>
new  <>

1210:
old  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < fclose$9:>

1211:
old  <>
new  <	; SignedGreaterThanEqual 30 index 20>

1212:
old  < fclose$15:>
new  <	cmp dword [rbp + 32], 20>

1213:
old  <	; IntegralToIntegral Â£temporary796 index>
new  <	jge fclose$30>

1214:
old  <	mov eax, [rbp + 32]>
new  <>

1215:
old  <	mov rbx, 4294967295>
new  < fclose$10:>

1216:
old  <	and rax, rbx>
new  <	; IntegralToIntegral Â£temporary792 index>

1217:
old  <>
new  <	mov eax, [rbp + 32]>

1218:
old  < fclose$16:>
new  <	mov rbx, 4294967295>

1219:
old  <	; UnsignedMultiply Â£temporary797 Â£temporary796 41>
new  <	and rax, rbx>

1220:
old  <	xor rdx, rdx>
new  <>

1221:
old  <	mul qword [Array_41#]>
new  < fclose$11:>

1222:
old  <>
new  <	; UnsignedMultiply Â£temporary793 Â£temporary792 41>

1223:
old  < fclose$17:>
new  <	xor rdx, rdx>

1224:
old  <	; BinaryAdd Â£temporary798 g_fileArray Â£temporary797>
new  <	mul qword [Array_41#]>

1225:
old  <	mov rsi, g_fileArray>
new  <>

1226:
old  <	add rsi, rax>
new  < fclose$12:>

1227:
old  <>
new  <	; BinaryAdd Â£temporary794 g_fileArray Â£temporary793>

1228:
old  < fclose$18:>
new  <	mov rsi, g_fileArray>

1229:
old  <	; Dereference Â£temporary795 -> Â£temporary798 Â£temporary798 0>
new  <	add rsi, rax>

1231:
old  < fclose$19:>
new  < fclose$13:>

1232:
old  <	; Address Â£temporary799 Â£temporary795 -> Â£temporary798>
new  <	; Dereference Â£temporary791 -> Â£temporary794 Â£temporary794 0>

1234:
old  < fclose$20:>
new  < fclose$14:>

1235:
old  <	; Parameter 60 pointer Â£temporary799>
new  <	; Equal 28 Â£temporary791.open -> Â£temporary794 0>

1236:
old  <	mov [rbp + 60], rsi>
new  <	cmp dword [rsi], 0>

1237:
old  <>
new  <	je fclose$28>

1238:
old  < fclose$21:>
new  <>

1239:
old  <	; Call 36 fclose 0>
new  < fclose$15:>

1240:
old  <	mov qword [rbp + 36], fclose$22>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1241:
old  <	mov [rbp + 44], rbp>
new  <>

1242:
old  <	add rbp, 36>
new  < fclose$16:>

1243:
old  <	jmp fclose>
new  <	; IntegralToIntegral Â£temporary796 index>

1244:
old  <>
new  <	mov eax, [rbp + 32]>

1245:
old  < fclose$22:>
new  <	mov rbx, 4294967295>

1246:
old  <	; PostCall 36>
new  <	and rax, rbx>

1248:
old  < fclose$23:>
new  < fclose$17:>

1249:
old  <	; GetReturnValue Â£temporary800>
new  <	; UnsignedMultiply Â£temporary797 Â£temporary796 41>

1250:
old  <>
new  <	xor rdx, rdx>

1251:
old  < fclose$24:>
new  <	mul qword [Array_41#]>

1252:
old  <	; NotEqual 26 Â£temporary800 -1>
new  <>

1253:
old  <	cmp ebx, -1>
new  < fclose$18:>

1254:
old  <	jne fclose$26>
new  <	; BinaryAdd Â£temporary798 g_fileArray Â£temporary797>

1255:
old  <>
new  <	mov rsi, g_fileArray>

1256:
old  < fclose$25:>
new  <	add rsi, rax>

1257:
old  <	; Return -1>
new  <>

1258:
old  <	mov ebx, -1>
new  < fclose$19:>

1259:
old  <	mov rax, [rbp]>
new  <	; Dereference Â£temporary795 -> Â£temporary798 Â£temporary798 0>

1260:
old  <	mov rdi, [rbp + 16]>
new  <>

1261:
old  <	mov rbp, [rbp + 8]>
new  < fclose$20:>

1262:
old  <	jmp rax>
new  <	; Address Â£temporary799 Â£temporary795 -> Â£temporary798>

1264:
old  < fclose$26:>
new  < fclose$21:>

1265:
old  <	; BinaryAdd index index 1>
new  <	; Parameter 60 pointer Â£temporary799>

1266:
old  <	inc dword [rbp + 32]>
new  <	mov [rbp + 60], rsi>

1268:
old  < fclose$27:>
new  < fclose$22:>

1269:
old  <	; Goto 8>
new  <	; Call 36 fclose 0>

1270:
old  <	jmp fclose$8>
new  <	mov qword [rbp + 36], fclose$23>

1271:
old  <>
new  <	mov [rbp + 44], rbp>

1272:
old  < fclose$28:>
new  <	add rbp, 36>

1273:
old  <	; Return 0>
new  <	jmp fclose>

1274:
old  <	mov ebx, 0>
new  <>

1275:
old  <	mov rax, [rbp]>
new  < fclose$23:>

1276:
old  <	mov rdi, [rbp + 16]>
new  <	; PostCall 36>

1277:
old  <	mov rbp, [rbp + 8]>
new  <>

1278:
old  <	jmp rax>
new  < fclose$24:>

1279:
old  <>
new  <	; GetReturnValue Â£temporary800>

1280:
old  < fclose$29:>
new  <>

1281:
old  <	; FunctionEnd fclose>
new  < fclose$25:>

1282:
old  <>
new  <	; NotEqual 28 Â£temporary800 -1>

1283:
old  <section .text>
new  <	cmp ebx, -1>

1284:
old  <>
new  <	jne fclose$28>

1285:
old  < remove:>
new  <>

1286:
old  <	; AssignRegister rax 88>
new  < fclose$26:>

1287:
old  <	mov rax, 88>
new  <	; SetReturnValue>

1289:
old  < remove$1:>
new  < fclose$27:>

1290:
old  <	; IntegralToIntegral Â£temporary805 name>
new  <	; Return -1>

1291:
old  <	mov rdi, [rbp + 24]>
new  <	mov ebx, -1>

1292:
old  <>
new  <	mov rax, [rbp]>

1293:
old  < remove$2:>
new  <	mov rdi, [rbp + 16]>

1294:
old  <	; AssignRegister rdi Â£temporary805>
new  <	mov rbp, [rbp + 8]>

1295:
old  <>
new  <	jmp rax>

1296:
old  < remove$3:>
new  <>

1297:
old  <	; SysCall>
new  < fclose$28:>

1298:
old  <	syscall>
new  <	; BinaryAdd index index 1>

1299:
old  <>
new  <	inc dword [rbp + 32]>

1300:
old  < remove$4:>
new  <>

1301:
old  <	; Return 0>
new  < fclose$29:>

1302:
old  <	mov ebx, 0>
new  <	; Goto 9>

1303:
old  <	mov rax, [rbp]>
new  <	jmp fclose$9>

1304:
old  <	mov rdi, [rbp + 16]>
new  <>

1305:
old  <	mov rbp, [rbp + 8]>
new  < fclose$30:>

1306:
old  <	jmp rax>
new  <	; SetReturnValue>

1308:
old  < remove$5:>
new  < fclose$31:>

1309:
old  <	; FunctionEnd remove>
new  <	; Return 0>

1310:
old  <>
new  <	mov ebx, 0>

1311:
old  <section .text>
new  <	mov rax, [rbp]>

1312:
old  <>
new  <	mov rdi, [rbp + 16]>

1313:
old  < rename:>
new  <	mov rbp, [rbp + 8]>

1314:
old  <	; AssignRegister rax 82>
new  <	jmp rax>

1315:
old  <	mov rax, 82>
new  <>

1316:
old  <>
new  < fclose$32:>

1317:
old  < rename$1:>
new  <	; FunctionEnd fclose>

1318:
old  <	; IntegralToIntegral Â£temporary808 oldName>
new  <>

1319:
old  <	mov rdi, [rbp + 24]>
new  <section .text>

1321:
old  < rename$2:>
new  < remove:>

1322:
old  <	; AssignRegister rdi Â£temporary808>
new  <	; AssignRegister rax 88>

1323:
old  <>
new  <	mov rax, 88>

1324:
old  < rename$3:>
new  <>

1325:
old  <	; IntegralToIntegral Â£temporary810 newName>
new  < remove$1:>

1326:
old  <	mov rsi, [rbp + 32]>
new  <	; IntegralToIntegral Â£temporary805 name>

1327:
old  <>
new  <	mov rdi, [rbp + 24]>

1328:
old  < rename$4:>
new  <>

1329:
old  <	; AssignRegister rsi Â£temporary810>
new  < remove$2:>

1330:
old  <>
new  <	; AssignRegister rdi Â£temporary805>

1331:
old  < rename$5:>
new  <>

1332:
old  <	; SysCall>
new  < remove$3:>

1333:
old  <	syscall>
new  <	; SysCall>

1334:
old  <>
new  <	syscall>

1335:
old  < rename$6:>
new  <>

1336:
old  <	; Return 0>
new  < remove$4:>

1337:
old  <	mov ebx, 0>
new  <	; SetReturnValue>

1338:
old  <	mov rax, [rbp]>
new  <>

1339:
old  <	mov rdi, [rbp + 16]>
new  < remove$5:>

1340:
old  <	mov rbp, [rbp + 8]>
new  <	; Return 0>

1341:
old  <	jmp rax>
new  <	mov ebx, 0>

1342:
old  <>
new  <	mov rax, [rbp]>

1343:
old  < rename$7:>
new  <	mov rdi, [rbp + 16]>

1344:
old  <	; FunctionEnd rename>
new  <	mov rbp, [rbp + 8]>

1345:
old  <>
new  <	jmp rax>

1346:
old  <section .text>
new  <>

1347:
old  <>
new  < remove$6:>

1348:
old  < setvbuf:>
new  <	; FunctionEnd remove>

1349:
old  <	; Return 0>
new  <>

1350:
old  <	mov ebx, 0>
new  <section .text>

1351:
old  <	mov rax, [rbp]>
new  <>

1352:
old  <	mov rdi, [rbp + 16]>
new  < rename:>

1353:
old  <	mov rbp, [rbp + 8]>
new  <	; AssignRegister rax 82>

1354:
old  <	jmp rax>
new  <	mov rax, 82>

1356:
old  < setvbuf$1:>
new  < rename$1:>

1357:
old  <	; FunctionEnd setvbuf>
new  <	; IntegralToIntegral Â£temporary808 oldName>

1358:
old  <>
new  <	mov rdi, [rbp + 24]>

1359:
old  <section .text>
new  <>

1360:
old  <>
new  < rename$2:>

1361:
old  < setbuf:>
new  <	; AssignRegister rdi Â£temporary808>

1362:
old  <	; Return>
new  <>

1363:
old  <	mov rax, [rbp]>
new  < rename$3:>

1364:
old  <	mov rdi, [rbp + 16]>
new  <	; IntegralToIntegral Â£temporary810 newName>

1365:
old  <	mov rbp, [rbp + 8]>
new  <	mov rsi, [rbp + 32]>

1366:
old  <	jmp rax>
new  <>

1367:
old  <>
new  < rename$4:>

1368:
old  < setbuf$1:>
new  <	; AssignRegister rsi Â£temporary810>

1369:
old  <	; FunctionEnd setbuf>
new  <>

1370:
old  <>
new  < rename$5:>

1371:
old  <section .text>
new  <	; SysCall>

1372:
old  <>
new  <	syscall>

1373:
old  < fgetc:>
new  <>

1374:
old  <	; Assign c 0>
new  < rename$6:>

1375:
old  <	mov byte [rbp + 32], 0>
new  <	; SetReturnValue>

1377:
old  < fgetc$1:>
new  < rename$7:>

1378:
old  <	; PreCall 33 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Return 0>

1379:
old  <>
new  <	mov ebx, 0>

1380:
old  < fgetc$2:>
new  <	mov rax, [rbp]>

1381:
old  <	; Address Â£temporary811 c>
new  <	mov rdi, [rbp + 16]>

1382:
old  <	mov rsi, rbp>
new  <	mov rbp, [rbp + 8]>

1383:
old  <	add rsi, 32>
new  <	jmp rax>

1385:
old  < fgetc$3:>
new  < rename$8:>

1386:
old  <	; Parameter 57 pointer Â£temporary811>
new  <	; FunctionEnd rename>

1387:
old  <	mov [rbp + 57], rsi>
new  <>

1388:
old  <>
new  <section .text>

1389:
old  < fgetc$4:>
new  <>

1390:
old  <	; Parameter 65 signedint 1>
new  < setvbuf:>

1391:
old  <	mov dword [rbp + 65], 1>
new  <	; SetReturnValue>

1393:
old  < fgetc$5:>
new  < setvbuf$1:>

1394:
old  <	; Parameter 69 signedint 1>
new  <	; Return 0>

1395:
old  <	mov dword [rbp + 69], 1>
new  <	mov ebx, 0>

1396:
old  <>
new  <	mov rax, [rbp]>

1397:
old  < fgetc$6:>
new  <	mov rdi, [rbp + 16]>

1398:
old  <	; Parameter 73 pointer stream>
new  <	mov rbp, [rbp + 8]>

1399:
old  <	mov rax, [rbp + 24]>
new  <	jmp rax>

1400:
old  <	mov [rbp + 73], rax>
new  <>

1401:
old  <>
new  < setvbuf$2:>

1402:
old  < fgetc$7:>
new  <	; FunctionEnd setvbuf>

1403:
old  <	; Call 33 fread 0>
new  <>

1404:
old  <	mov qword [rbp + 33], fgetc$8>
new  <section .text>

1405:
old  <	mov [rbp + 41], rbp>
new  <>

1406:
old  <	add rbp, 33>
new  < setbuf:>

1407:
old  <	jmp fread>
new  <	; Return>

1408:
old  <>
new  <	mov rax, [rbp]>

1409:
old  < fgetc$8:>
new  <	mov rdi, [rbp + 16]>

1410:
old  <	; PostCall 33>
new  <	mov rbp, [rbp + 8]>

1411:
old  <>
new  <	jmp rax>

1412:
old  < fgetc$9:>
new  <>

1413:
old  <	; GetReturnValue Â£temporary812>
new  < setbuf$1:>

1414:
old  <>
new  <	; FunctionEnd setbuf>

1415:
old  < fgetc$10:>
new  <>

1416:
old  <	; SignedLessThanEqual 13 Â£temporary812 0>
new  <section .text>

1417:
old  <	cmp ebx, 0>
new  <>

1418:
old  <	jle fgetc$13>
new  < fgetc:>

1419:
old  <>
new  <	; Assign c 0>

1420:
old  < fgetc$11:>
new  <	mov byte [rbp + 32], 0>

1421:
old  <	; IntegralToIntegral Â£temporary814 c>
new  <>

1422:
old  <	mov bl, [rbp + 32]>
new  < fgetc$1:>

1423:
old  <	and ebx, 255>
new  <	; PreCall 33 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1424:
old  <	cmp bl, 0>
new  <>

1425:
old  <	jge fgetc$12>
new  < fgetc$2:>

1426:
old  <	neg bl>
new  <	; Address Â£temporary811 c>

1427:
old  <	neg ebx>
new  <	mov rsi, rbp>

1428:
old  <>
new  <	add rsi, 32>

1429:
old  < fgetc$12:>
new  <>

1430:
old  <	; Return Â£temporary814>
new  < fgetc$3:>

1431:
old  <	mov rax, [rbp]>
new  <	; Parameter 57 pointer Â£temporary811>

1432:
old  <	mov rdi, [rbp + 16]>
new  <	mov [rbp + 57], rsi>

1433:
old  <	mov rbp, [rbp + 8]>
new  <>

1434:
old  <	jmp rax>
new  < fgetc$4:>

1435:
old  <>
new  <	; Parameter 65 signedint 1>

1436:
old  < fgetc$13:>
new  <	mov dword [rbp + 65], 1>

1437:
old  <	; Return -1>
new  <>

1438:
old  <	mov ebx, -1>
new  < fgetc$5:>

1439:
old  <	mov rax, [rbp]>
new  <	; Parameter 69 signedint 1>

1440:
old  <	mov rdi, [rbp + 16]>
new  <	mov dword [rbp + 69], 1>

1441:
old  <	mov rbp, [rbp + 8]>
new  <>

1442:
old  <	jmp rax>
new  < fgetc$6:>

1443:
old  <>
new  <	; Parameter 73 pointer stream>

1444:
old  < fgetc$14:>
new  <	mov rax, [rbp + 24]>

1445:
old  <	; FunctionEnd fgetc>
new  <	mov [rbp + 73], rax>

1447:
old  <section .data>
new  < fgetc$7:>

1448:
old  <>
new  <	; Call 33 fread 0>

1449:
old  <string_25c#:>
new  <	mov qword [rbp + 33], fgetc$8>

1450:
old  <	; Initializer String %c>
new  <	mov [rbp + 41], rbp>

1451:
old  <	db "%c", 0>
new  <	add rbp, 33>

1452:
old  <>
new  <	jmp fread>

1453:
old  <section .text>
new  <>

1454:
old  <>
new  < fgetc$8:>

1455:
old  < fgets:>
new  <	; PostCall 33>

1456:
old  <	; Assign count 0>
new  <>

1457:
old  <	mov dword [rbp + 44], 0>
new  < fgetc$9:>

1458:
old  <>
new  <	; GetReturnValue Â£temporary812>

1459:
old  < fgets$1:>
new  <>

1460:
old  <	; Assign prevChar 0>
new  < fgetc$10:>

1461:
old  <	mov byte [rbp + 48], 0>
new  <	; SignedLessThanEqual 14 Â£temporary812 0>

1462:
old  <>
new  <	cmp ebx, 0>

1463:
old  < fgets$2:>
new  <	jle fgetc$14>

1464:
old  <	; BinarySubtract Â£temporary816 size 1>
new  <>

1465:
old  <	mov eax, [rbp + 32]>
new  < fgetc$11:>

1466:
old  <	dec eax>
new  <	; IntegralToIntegral Â£temporary814 c>

1467:
old  <>
new  <	mov bl, [rbp + 32]>

1468:
old  < fgets$3:>
new  <	and ebx, 255>

1469:
old  <	; SignedGreaterThanEqual 36 count Â£temporary816>
new  <	cmp bl, 0>

1470:
old  <	cmp [rbp + 44], eax>
new  <	jge fgetc$12>

1471:
old  <	jge fgets$36>
new  <	neg bl>

1472:
old  <>
new  <	neg ebx>

1473:
old  < fgets$4:>
new  <>

1474:
old  <	; Assign currChar 0>
new  < fgetc$12:>

1475:
old  <	mov byte [rbp + 49], 0>
new  <	; SetReturnValue>

1477:
old  < fgets$5:>
new  < fgetc$13:>

1478:
old  <	; PreCall 50 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Return Â£temporary814>

1479:
old  <>
new  <	mov rax, [rbp]>

1480:
old  < fgets$6:>
new  <	mov rdi, [rbp + 16]>

1481:
old  <	; Parameter 74 pointer stream>
new  <	mov rbp, [rbp + 8]>

1482:
old  <	mov rax, [rbp + 36]>
new  <	jmp rax>

1483:
old  <	mov [rbp + 74], rax>
new  <>

1484:
old  <>
new  < fgetc$14:>

1485:
old  < fgets$7:>
new  <	; SetReturnValue>

1486:
old  <	; Parameter 82 pointer "%c">
new  <>

1487:
old  <	mov qword [rbp + 82], string_25c#>
new  < fgetc$15:>

1488:
old  <>
new  <	; Return -1>

1489:
old  < fgets$8:>
new  <	mov ebx, -1>

1490:
old  <	; Address Â£temporary818 currChar>
new  <	mov rax, [rbp]>

1491:
old  <	mov rsi, rbp>
new  <	mov rdi, [rbp + 16]>

1492:
old  <	add rsi, 49>
new  <	mov rbp, [rbp + 8]>

1493:
old  <>
new  <	jmp rax>

1494:
old  < fgets$9:>
new  <>

1495:
old  <	; Parameter 90 pointer Â£temporary818>
new  < fgetc$16:>

1496:
old  <	mov [rbp + 90], rsi>
new  <	; FunctionEnd fgetc>

1498:
old  < fgets$10:>
new  <section .data>

1499:
old  <	; Call 50 fscanf 8>
new  <>

1500:
old  <	mov qword [rbp + 50], fgets$11>
new  <string_25c#:>

1501:
old  <	mov [rbp + 58], rbp>
new  <	; Initializer String %c>

1502:
old  <	add rbp, 50>
new  <	db "%c", 0>

1503:
old  <	mov rdi, rbp>
new  <>

1504:
old  <	add rdi, 8>
new  <section .text>

1505:
old  <	jmp fscanf>
new  <>

1506:
old  <>
new  < fgets:>

1507:
old  < fgets$11:>
new  <	; Assign count 0>

1508:
old  <	; PostCall 50>
new  <	mov dword [rbp + 44], 0>

1510:
old  < fgets$12:>
new  < fgets$1:>

1511:
old  <	; NotEqual 19 prevChar 13>
new  <	; Assign prevChar 0>

1512:
old  <	cmp byte [rbp + 48], 13>
new  <	mov byte [rbp + 48], 0>

1513:
old  <	jne fgets$19>
new  <>

1514:
old  <>
new  < fgets$2:>

1515:
old  < fgets$13:>
new  <	; BinarySubtract Â£temporary816 size 1>

1516:
old  <	; NotEqual 19 currChar 10>
new  <	mov eax, [rbp + 32]>

1517:
old  <	cmp byte [rbp + 49], 10>
new  <	dec eax>

1518:
old  <	jne fgets$19>
new  <>

1519:
old  <>
new  < fgets$3:>

1520:
old  < fgets$14:>
new  <	; SignedGreaterThanEqual 36 count Â£temporary816>

1521:
old  <	; IntegralToIntegral Â£temporary824 count>
new  <	cmp [rbp + 44], eax>

1522:
old  <	mov eax, [rbp + 44]>
new  <	jge fgets$36>

1523:
old  <	mov rbx, 4294967295>
new  <>

1524:
old  <	and rax, rbx>
new  < fgets$4:>

1525:
old  <>
new  <	; Assign currChar 0>

1526:
old  < fgets$15:>
new  <	mov byte [rbp + 49], 0>

1527:
old  <	; BinaryAdd Â£temporary826 text Â£temporary824>
new  <>

1528:
old  <	mov rsi, [rbp + 24]>
new  < fgets$5:>

1529:
old  <	add rsi, rax>
new  <	; PreCall 50 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1531:
old  < fgets$16:>
new  < fgets$6:>

1532:
old  <	; Dereference Â£temporary823 -> Â£temporary826 Â£temporary826 0>
new  <	; Parameter 74 pointer stream>

1533:
old  <>
new  <	mov rax, [rbp + 36]>

1534:
old  < fgets$17:>
new  <	mov [rbp + 74], rax>

1535:
old  <	; Assign Â£temporary823 -> Â£temporary826 0>
new  <>

1536:
old  <	mov byte [rsi], 0>
new  < fgets$7:>

1537:
old  <>
new  <	; Parameter 82 pointer "%c">

1538:
old  < fgets$18:>
new  <	mov qword [rbp + 82], string_25c#>

1539:
old  <	; Goto 36>
new  <>

1540:
old  <	jmp fgets$36>
new  < fgets$8:>

1541:
old  <>
new  <	; Address Â£temporary818 currChar>

1542:
old  < fgets$19:>
new  <	mov rsi, rbp>

1543:
old  <	; IntegralToIntegral Â£temporary827 currChar>
new  <	add rsi, 49>

1544:
old  <	mov al, [rbp + 49]>
new  <>

1545:
old  <	and eax, 255>
new  < fgets$9:>

1546:
old  <	cmp al, 0>
new  <	; Parameter 90 pointer Â£temporary818>

1547:
old  <	jge fgets$20>
new  <	mov [rbp + 90], rsi>

1548:
old  <	neg al>
new  <>

1549:
old  <	neg eax>
new  < fgets$10:>

1550:
old  <>
new  <	; Call 50 fscanf 8>

1551:
old  < fgets$20:>
new  <	mov qword [rbp + 50], fgets$11>

1552:
old  <	; NotEqual 26 Â£temporary827 -1>
new  <	mov [rbp + 58], rbp>

1553:
old  <	cmp eax, -1>
new  <	add rbp, 50>

1554:
old  <	jne fgets$26>
new  <	mov rdi, rbp>

1555:
old  <>
new  <	add rdi, 8>

1556:
old  < fgets$21:>
new  <	jmp fscanf>

1557:
old  <	; IntegralToIntegral Â£temporary830 count>
new  <>

1558:
old  <	mov eax, [rbp + 44]>
new  < fgets$11:>

1559:
old  <	mov rbx, 4294967295>
new  <	; PostCall 50>

1560:
old  <	and rax, rbx>
new  <>

1561:
old  <>
new  < fgets$12:>

1562:
old  < fgets$22:>
new  <	; NotEqual 19 prevChar 13>

1563:
old  <	; BinaryAdd Â£temporary832 text Â£temporary830>
new  <	cmp byte [rbp + 48], 13>

1564:
old  <	mov rsi, [rbp + 24]>
new  <	jne fgets$19>

1565:
old  <	add rsi, rax>
new  <>

1566:
old  <>
new  < fgets$13:>

1567:
old  < fgets$23:>
new  <	; NotEqual 19 currChar 10>

1568:
old  <	; Dereference Â£temporary829 -> Â£temporary832 Â£temporary832 0>
new  <	cmp byte [rbp + 49], 10>

1569:
old  <>
new  <	jne fgets$19>

1570:
old  < fgets$24:>
new  <>

1571:
old  <	; Assign Â£temporary829 -> Â£temporary832 0>
new  < fgets$14:>

1572:
old  <	mov byte [rsi], 0>
new  <	; IntegralToIntegral Â£temporary824 count>

1573:
old  <>
new  <	mov eax, [rbp + 44]>

1574:
old  < fgets$25:>
new  <	mov rbx, 4294967295>

1575:
old  <	; Goto 36>
new  <	and rax, rbx>

1576:
old  <	jmp fgets$36>
new  <>

1577:
old  <>
new  < fgets$15:>

1578:
old  < fgets$26:>
new  <	; BinaryAdd Â£temporary826 text Â£temporary824>

1579:
old  <	; Equal 34 currChar 13>
new  <	mov rsi, [rbp + 24]>

1580:
old  <	cmp byte [rbp + 49], 13>
new  <	add rsi, rax>

1581:
old  <	je fgets$34>
new  <>

1582:
old  <>
new  < fgets$16:>

1583:
old  < fgets$27:>
new  <	; Dereference Â£temporary823 -> Â£temporary826 Â£temporary826 0>

1584:
old  <	; Equal 34 currChar 10>
new  <>

1585:
old  <	cmp byte [rbp + 49], 10>
new  < fgets$17:>

1586:
old  <	je fgets$34>
new  <	; Assign Â£temporary823 -> Â£temporary826 0>

1587:
old  <>
new  <	mov byte [rsi], 0>

1588:
old  < fgets$28:>
new  <>

1589:
old  <	; Assign Â£temporary836 count>
new  < fgets$18:>

1590:
old  <	mov eax, [rbp + 44]>
new  <	; Goto 36>

1591:
old  <>
new  <	jmp fgets$36>

1592:
old  < fgets$29:>
new  <>

1593:
old  <	; BinaryAdd count count 1>
new  < fgets$19:>

1594:
old  <	inc dword [rbp + 44]>
new  <	; IntegralToIntegral Â£temporary827 currChar>

1595:
old  <>
new  <	mov al, [rbp + 49]>

1596:
old  < fgets$30:>
new  <	and eax, 255>

1597:
old  <	; IntegralToIntegral Â£temporary838 Â£temporary836>
new  <	cmp al, 0>

1598:
old  <	mov rbx, 4294967295>
new  <	jge fgets$20>

1599:
old  <	and rax, rbx>
new  <	neg al>

1600:
old  <>
new  <	neg eax>

1601:
old  < fgets$31:>
new  <>

1602:
old  <	; BinaryAdd Â£temporary840 text Â£temporary838>
new  < fgets$20:>

1603:
old  <	mov rsi, [rbp + 24]>
new  <	; NotEqual 26 Â£temporary827 -1>

1604:
old  <	add rsi, rax>
new  <	cmp eax, -1>

1605:
old  <>
new  <	jne fgets$26>

1606:
old  < fgets$32:>
new  <>

1607:
old  <	; Dereference Â£temporary837 -> Â£temporary840 Â£temporary840 0>
new  < fgets$21:>

1608:
old  <>
new  <	; IntegralToIntegral Â£temporary830 count>

1609:
old  < fgets$33:>
new  <	mov eax, [rbp + 44]>

1610:
old  <	; Assign Â£temporary837 -> Â£temporary840 currChar>
new  <	mov rbx, 4294967295>

1611:
old  <	mov al, [rbp + 49]>
new  <	and rax, rbx>

1612:
old  <	mov [rsi], al>
new  <>

1613:
old  <>
new  < fgets$22:>

1614:
old  < fgets$34:>
new  <	; BinaryAdd Â£temporary832 text Â£temporary830>

1615:
old  <	; Assign prevChar currChar>
new  <	mov rsi, [rbp + 24]>

1616:
old  <	mov al, [rbp + 49]>
new  <	add rsi, rax>

1617:
old  <	mov [rbp + 48], al>
new  <>

1618:
old  <>
new  < fgets$23:>

1619:
old  < fgets$35:>
new  <	; Dereference Â£temporary829 -> Â£temporary832 Â£temporary832 0>

1620:
old  <	; Goto 2>
new  <>

1621:
old  <	jmp fgets$2>
new  < fgets$24:>

1622:
old  <>
new  <	; Assign Â£temporary829 -> Â£temporary832 0>

1623:
old  < fgets$36:>
new  <	mov byte [rsi], 0>

1624:
old  <	; Return text>
new  <>

1625:
old  <	mov rbx, [rbp + 24]>
new  < fgets$25:>

1626:
old  <	mov rax, [rbp]>
new  <	; Goto 36>

1627:
old  <	mov rdi, [rbp + 16]>
new  <	jmp fgets$36>

1628:
old  <	mov rbp, [rbp + 8]>
new  <>

1629:
old  <	jmp rax>
new  < fgets$26:>

1630:
old  <>
new  <	; Equal 34 currChar 13>

1631:
old  < fgets$37:>
new  <	cmp byte [rbp + 49], 13>

1632:
old  <	; FunctionEnd fgets>
new  <	je fgets$34>

1634:
old  <section .text>
new  < fgets$27:>

1635:
old  <>
new  <	; Equal 34 currChar 10>

1636:
old  < fputs:>
new  <	cmp byte [rbp + 49], 10>

1637:
old  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	je fgets$34>

1639:
old  < fputs$1:>
new  < fgets$28:>

1640:
old  <	; Parameter 64 pointer s>
new  <	; Assign Â£temporary836 count>

1641:
old  <	mov rax, [rbp + 24]>
new  <	mov eax, [rbp + 44]>

1642:
old  <	mov [rbp + 64], rax>
new  <>

1643:
old  <>
new  < fgets$29:>

1644:
old  < fputs$2:>
new  <	; BinaryAdd count count 1>

1645:
old  <	; Call 40 strlen 0>
new  <	inc dword [rbp + 44]>

1646:
old  <	mov qword [rbp + 40], fputs$3>
new  <>

1647:
old  <	mov [rbp + 48], rbp>
new  < fgets$30:>

1648:
old  <	add rbp, 40>
new  <	; IntegralToIntegral Â£temporary838 Â£temporary836>

1649:
old  <	jmp strlen>
new  <	mov rbx, 4294967295>

1650:
old  <>
new  <	and rax, rbx>

1651:
old  < fputs$3:>
new  <>

1652:
old  <	; PostCall 40>
new  < fgets$31:>

1653:
old  <>
new  <	; BinaryAdd Â£temporary840 text Â£temporary838>

1654:
old  < fputs$4:>
new  <	mov rsi, [rbp + 24]>

1655:
old  <	; GetReturnValue Â£temporary842>
new  <	add rsi, rax>

1657:
old  < fputs$5:>
new  < fgets$32:>

1658:
old  <	; BinaryAdd size Â£temporary842 1>
new  <	; Dereference Â£temporary837 -> Â£temporary840 Â£temporary840 0>

1659:
old  <	inc ebx>
new  <>

1660:
old  <	mov [rbp + 40], ebx>
new  < fgets$33:>

1661:
old  <>
new  <	; Assign Â£temporary837 -> Â£temporary840 currChar>

1662:
old  < fputs$6:>
new  <	mov al, [rbp + 49]>

1663:
old  <	; PreCall 44 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov [rsi], al>

1665:
old  < fputs$7:>
new  < fgets$34:>

1666:
old  <	; Parameter 68 pointer s>
new  <	; Assign prevChar currChar>

1667:
old  <	mov rax, [rbp + 24]>
new  <	mov al, [rbp + 49]>

1668:
old  <	mov [rbp + 68], rax>
new  <	mov [rbp + 48], al>

1670:
old  < fputs$8:>
new  < fgets$35:>

1671:
old  <	; Parameter 76 signedint size>
new  <	; Goto 2>

1672:
old  <	mov eax, [rbp + 40]>
new  <	jmp fgets$2>

1673:
old  <	mov [rbp + 76], eax>
new  <>

1674:
old  <>
new  < fgets$36:>

1675:
old  < fputs$9:>
new  <	; SetReturnValue>

1676:
old  <	; Parameter 80 signedint 1>
new  <>

1677:
old  <	mov dword [rbp + 80], 1>
new  < fgets$37:>

1678:
old  <>
new  <	; Return text>

1679:
old  < fputs$10:>
new  <	mov rbx, [rbp + 24]>

1680:
old  <	; Parameter 84 pointer stream>
new  <	mov rax, [rbp]>

1681:
old  <	mov rax, [rbp + 32]>
new  <	mov rdi, [rbp + 16]>

1682:
old  <	mov [rbp + 84], rax>
new  <	mov rbp, [rbp + 8]>

1683:
old  <>
new  <	jmp rax>

1684:
old  < fputs$11:>
new  <>

1685:
old  <	; Call 44 fwrite 0>
new  < fgets$38:>

1686:
old  <	mov qword [rbp + 44], fputs$12>
new  <	; FunctionEnd fgets>

1687:
old  <	mov [rbp + 52], rbp>
new  <>

1688:
old  <	add rbp, 44>
new  <section .text>

1689:
old  <	jmp fwrite>
new  <>

1690:
old  <>
new  < fputs:>

1691:
old  < fputs$12:>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1692:
old  <	; PostCall 44>
new  <>

1693:
old  <>
new  < fputs$1:>

1694:
old  < fputs$13:>
new  <	; Parameter 64 pointer s>

1695:
old  <	; GetReturnValue Â£temporary845>
new  <	mov rax, [rbp + 24]>

1696:
old  <>
new  <	mov [rbp + 64], rax>

1697:
old  < fputs$14:>
new  <>

1698:
old  <	; NotEqual 17 Â£temporary845 size>
new  < fputs$2:>

1699:
old  <	cmp ebx, [rbp + 40]>
new  <	; Call 40 strlen 0>

1700:
old  <	jne fputs$17>
new  <	mov qword [rbp + 40], fputs$3>

1701:
old  <>
new  <	mov [rbp + 48], rbp>

1702:
old  < fputs$15:>
new  <	add rbp, 40>

1703:
old  <	; Assign Â£temporary847 0>
new  <	jmp strlen>

1704:
old  <	mov ebx, 0>
new  <>

1705:
old  <>
new  < fputs$3:>

1706:
old  < fputs$16:>
new  <	; PostCall 40>

1707:
old  <	; Goto 18>
new  <>

1708:
old  <	jmp fputs$18>
new  < fputs$4:>

1709:
old  <>
new  <	; GetReturnValue Â£temporary842>

1710:
old  < fputs$17:>
new  <>

1711:
old  <	; Assign Â£temporary847 -1>
new  < fputs$5:>

1712:
old  <	mov ebx, -1>
new  <	; BinaryAdd size Â£temporary842 1>

1713:
old  <>
new  <	inc ebx>

1714:
old  < fputs$18:>
new  <	mov [rbp + 40], ebx>

1715:
old  <	; Return Â£temporary847>
new  <>

1716:
old  <	mov rax, [rbp]>
new  < fputs$6:>

1717:
old  <	mov rdi, [rbp + 16]>
new  <	; PreCall 44 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1718:
old  <	mov rbp, [rbp + 8]>
new  <>

1719:
old  <	jmp rax>
new  < fputs$7:>

1720:
old  <>
new  <	; Parameter 68 pointer s>

1721:
old  < fputs$19:>
new  <	mov rax, [rbp + 24]>

1722:
old  <	; FunctionEnd fputs>
new  <	mov [rbp + 68], rax>

1724:
old  <section .text>
new  < fputs$8:>

1725:
old  <>
new  <	; Parameter 76 signedint size>

1726:
old  < getchar:>
new  <	mov eax, [rbp + 40]>

1727:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov [rbp + 76], eax>

1729:
old  < getchar$1:>
new  < fputs$9:>

1730:
old  <	; Parameter 48 pointer stdin>
new  <	; Parameter 80 signedint 1>

1731:
old  <	mov rax, [stdin]>
new  <	mov dword [rbp + 80], 1>

1732:
old  <	mov [rbp + 48], rax>
new  <>

1733:
old  <>
new  < fputs$10:>

1734:
old  < getchar$2:>
new  <	; Parameter 84 pointer stream>

1735:
old  <	; Call 24 fgetc 0>
new  <	mov rax, [rbp + 32]>

1736:
old  <	mov qword [rbp + 24], getchar$3>
new  <	mov [rbp + 84], rax>

1737:
old  <	mov [rbp + 32], rbp>
new  <>

1738:
old  <	add rbp, 24>
new  < fputs$11:>

1739:
old  <	jmp fgetc>
new  <	; Call 44 fwrite 0>

1740:
old  <>
new  <	mov qword [rbp + 44], fputs$12>

1741:
old  < getchar$3:>
new  <	mov [rbp + 52], rbp>

1742:
old  <	; PostCall 24>
new  <	add rbp, 44>

1743:
old  <>
new  <	jmp fwrite>

1744:
old  < getchar$4:>
new  <>

1745:
old  <	; GetReturnValue Â£temporary848>
new  < fputs$12:>

1746:
old  <>
new  <	; PostCall 44>

1747:
old  < getchar$5:>
new  <>

1748:
old  <	; Return Â£temporary848>
new  < fputs$13:>

1749:
old  <	mov rax, [rbp]>
new  <	; GetReturnValue Â£temporary845>

1750:
old  <	mov rdi, [rbp + 16]>
new  <>

1751:
old  <	mov rbp, [rbp + 8]>
new  < fputs$14:>

1752:
old  <	jmp rax>
new  <	; NotEqual 17 Â£temporary845 size>

1753:
old  <>
new  <	cmp ebx, [rbp + 40]>

1754:
old  < getchar$6:>
new  <	jne fputs$17>

1755:
old  <	; FunctionEnd getchar>
new  <>

1756:
old  <>
new  < fputs$15:>

1757:
old  <section .text>
new  <	; Assign Â£temporary847 0>

1758:
old  <>
new  <	mov ebx, 0>

1759:
old  < gets:>
new  <>

1760:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < fputs$16:>

1761:
old  <>
new  <	; Goto 18>

1762:
old  < gets$1:>
new  <	jmp fputs$18>

1763:
old  <	; Parameter 56 pointer s>
new  <>

1764:
old  <	mov rax, [rbp + 24]>
new  < fputs$17:>

1765:
old  <	mov [rbp + 56], rax>
new  <	; Assign Â£temporary847 -1>

1766:
old  <>
new  <	mov ebx, -1>

1767:
old  < gets$2:>
new  <>

1768:
old  <	; Parameter 64 signedint -1>
new  < fputs$18:>

1769:
old  <	mov dword [rbp + 64], -1>
new  <	; SetReturnValue>

1771:
old  < gets$3:>
new  < fputs$19:>

1772:
old  <	; Parameter 68 pointer stdin>
new  <	; Return Â£temporary847>

1773:
old  <	mov rax, [stdin]>
new  <	mov rax, [rbp]>

1774:
old  <	mov [rbp + 68], rax>
new  <	mov rdi, [rbp + 16]>

1775:
old  <>
new  <	mov rbp, [rbp + 8]>

1776:
old  < gets$4:>
new  <	jmp rax>

1777:
old  <	; Call 32 fgets 0>
new  <>

1778:
old  <	mov qword [rbp + 32], gets$5>
new  < fputs$20:>

1779:
old  <	mov [rbp + 40], rbp>
new  <	; FunctionEnd fputs>

1780:
old  <	add rbp, 32>
new  <>

1781:
old  <	jmp fgets>
new  <section .text>

1783:
old  < gets$5:>
new  < getchar:>

1784:
old  <	; PostCall 32>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1786:
old  < gets$6:>
new  < getchar$1:>

1787:
old  <	; GetReturnValue Â£temporary849>
new  <	; Parameter 48 pointer stdin>

1788:
old  <>
new  <	mov rax, [stdin]>

1789:
old  < gets$7:>
new  <	mov [rbp + 48], rax>

1790:
old  <	; Equal 21 Â£temporary849 0>
new  <>

1791:
old  <	cmp rbx, 0>
new  < getchar$2:>

1792:
old  <	je gets$21>
new  <	; Call 24 fgetc 0>

1793:
old  <>
new  <	mov qword [rbp + 24], getchar$3>

1794:
old  < gets$8:>
new  <	mov [rbp + 32], rbp>

1795:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	add rbp, 24>

1796:
old  <>
new  <	jmp fgetc>

1797:
old  < gets$9:>
new  <>

1798:
old  <	; Parameter 56 pointer s>
new  < getchar$3:>

1799:
old  <	mov rax, [rbp + 24]>
new  <	; PostCall 24>

1800:
old  <	mov [rbp + 56], rax>
new  <>

1801:
old  <>
new  < getchar$4:>

1802:
old  < gets$10:>
new  <	; GetReturnValue Â£temporary848>

1803:
old  <	; Call 32 strlen 0>
new  <>

1804:
old  <	mov qword [rbp + 32], gets$11>
new  < getchar$5:>

1805:
old  <	mov [rbp + 40], rbp>
new  <	; SetReturnValue>

1806:
old  <	add rbp, 32>
new  <>

1807:
old  <	jmp strlen>
new  < getchar$6:>

1808:
old  <>
new  <	; Return Â£temporary848>

1809:
old  < gets$11:>
new  <	mov rax, [rbp]>

1810:
old  <	; PostCall 32>
new  <	mov rdi, [rbp + 16]>

1811:
old  <>
new  <	mov rbp, [rbp + 8]>

1812:
old  < gets$12:>
new  <	jmp rax>

1813:
old  <	; GetReturnValue Â£temporary851>
new  <>

1814:
old  <>
new  < getchar$7:>

1815:
old  < gets$13:>
new  <	; FunctionEnd getchar>

1816:
old  <	; Assign size Â£temporary851>
new  <>

1817:
old  <	mov [rbp + 32], ebx>
new  <section .text>

1819:
old  < gets$14:>
new  < gets:>

1820:
old  <	; SignedLessThanEqual 20 size 0>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1821:
old  <	cmp dword [rbp + 32], 0>
new  <>

1822:
old  <	jle gets$20>
new  < gets$1:>

1823:
old  <>
new  <	; Parameter 56 pointer s>

1824:
old  < gets$15:>
new  <	mov rax, [rbp + 24]>

1825:
old  <	; BinarySubtract Â£temporary853 size 1>
new  <	mov [rbp + 56], rax>

1826:
old  <	mov eax, [rbp + 32]>
new  <>

1827:
old  <	dec eax>
new  < gets$2:>

1828:
old  <>
new  <	; Parameter 64 signedint -1>

1829:
old  < gets$16:>
new  <	mov dword [rbp + 64], -1>

1830:
old  <	; IntegralToIntegral Â£temporary855 Â£temporary853>
new  <>

1831:
old  <	mov rbx, 4294967295>
new  < gets$3:>

1832:
old  <	and rax, rbx>
new  <	; Parameter 68 pointer stdin>

1833:
old  <>
new  <	mov rax, [stdin]>

1834:
old  < gets$17:>
new  <	mov [rbp + 68], rax>

1835:
old  <	; BinaryAdd Â£temporary857 s Â£temporary855>
new  <>

1836:
old  <	mov rsi, [rbp + 24]>
new  < gets$4:>

1837:
old  <	add rsi, rax>
new  <	; Call 32 fgets 0>

1838:
old  <>
new  <	mov qword [rbp + 32], gets$5>

1839:
old  < gets$18:>
new  <	mov [rbp + 40], rbp>

1840:
old  <	; Dereference Â£temporary854 -> Â£temporary857 Â£temporary857 0>
new  <	add rbp, 32>

1841:
old  <>
new  <	jmp fgets>

1842:
old  < gets$19:>
new  <>

1843:
old  <	; Assign Â£temporary854 -> Â£temporary857 0>
new  < gets$5:>

1844:
old  <	mov byte [rsi], 0>
new  <	; PostCall 32>

1846:
old  < gets$20:>
new  < gets$6:>

1847:
old  <	; Return s>
new  <	; GetReturnValue Â£temporary849>

1848:
old  <	mov rbx, [rbp + 24]>
new  <>

1849:
old  <	mov rax, [rbp]>
new  < gets$7:>

1850:
old  <	mov rdi, [rbp + 16]>
new  <	; Equal 22 Â£temporary849 0>

1851:
old  <	mov rbp, [rbp + 8]>
new  <	cmp rbx, 0>

1852:
old  <	jmp rax>
new  <	je gets$22>

1854:
old  < gets$21:>
new  < gets$8:>

1855:
old  <	; Return 0>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1856:
old  <	mov rbx, 0>
new  <>

1857:
old  <	mov rax, [rbp]>
new  < gets$9:>

1858:
old  <	mov rdi, [rbp + 16]>
new  <	; Parameter 56 pointer s>

1859:
old  <	mov rbp, [rbp + 8]>
new  <	mov rax, [rbp + 24]>

1860:
old  <	jmp rax>
new  <	mov [rbp + 56], rax>

1862:
old  < gets$22:>
new  < gets$10:>

1863:
old  <	; FunctionEnd gets>
new  <	; Call 32 strlen 0>

1864:
old  <>
new  <	mov qword [rbp + 32], gets$11>

1865:
old  <section .text>
new  <	mov [rbp + 40], rbp>

1866:
old  <>
new  <	add rbp, 32>

1867:
old  < puts:>
new  <	jmp strlen>

1868:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1869:
old  <>
new  < gets$11:>

1870:
old  < puts$1:>
new  <	; PostCall 32>

1871:
old  <	; Parameter 56 pointer s>
new  <>

1872:
old  <	mov rax, [rbp + 24]>
new  < gets$12:>

1873:
old  <	mov [rbp + 56], rax>
new  <	; GetReturnValue Â£temporary851>

1875:
old  < puts$2:>
new  < gets$13:>

1876:
old  <	; Parameter 64 pointer stdout>
new  <	; Assign size Â£temporary851>

1877:
old  <	mov rax, [stdout]>
new  <	mov [rbp + 32], ebx>

1878:
old  <	mov [rbp + 64], rax>
new  <>

1879:
old  <>
new  < gets$14:>

1880:
old  < puts$3:>
new  <	; SignedLessThanEqual 20 size 0>

1881:
old  <	; Call 32 fputs 0>
new  <	cmp dword [rbp + 32], 0>

1882:
old  <	mov qword [rbp + 32], puts$4>
new  <	jle gets$20>

1883:
old  <	mov [rbp + 40], rbp>
new  <>

1884:
old  <	add rbp, 32>
new  < gets$15:>

1885:
old  <	jmp fputs>
new  <	; BinarySubtract Â£temporary853 size 1>

1886:
old  <>
new  <	mov eax, [rbp + 32]>

1887:
old  < puts$4:>
new  <	dec eax>

1888:
old  <	; PostCall 32>
new  <>

1889:
old  <>
new  < gets$16:>

1890:
old  < puts$5:>
new  <	; IntegralToIntegral Â£temporary855 Â£temporary853>

1891:
old  <	; GetReturnValue Â£temporary858>
new  <	mov rbx, 4294967295>

1892:
old  <>
new  <	and rax, rbx>

1893:
old  < puts$6:>
new  <>

1894:
old  <	; Equal 14 Â£temporary858 0>
new  < gets$17:>

1895:
old  <	cmp ebx, 0>
new  <	; BinaryAdd Â£temporary857 s Â£temporary855>

1896:
old  <	je puts$14>
new  <	mov rsi, [rbp + 24]>

1897:
old  <>
new  <	add rsi, rax>

1898:
old  < puts$7:>
new  <>

1899:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < gets$18:>

1900:
old  <>
new  <	; Dereference Â£temporary854 -> Â£temporary857 Â£temporary857 0>

1901:
old  < puts$8:>
new  <>

1902:
old  <	; Parameter 56 signedint 10>
new  < gets$19:>

1903:
old  <	mov dword [rbp + 56], 10>
new  <	; Assign Â£temporary854 -> Â£temporary857 0>

1904:
old  <>
new  <	mov byte [rsi], 0>

1905:
old  < puts$9:>
new  <>

1906:
old  <	; Parameter 60 pointer stdout>
new  < gets$20:>

1907:
old  <	mov rax, [stdout]>
new  <	; SetReturnValue>

1908:
old  <	mov [rbp + 60], rax>
new  <>

1909:
old  <>
new  < gets$21:>

1910:
old  < puts$10:>
new  <	; Return s>

1911:
old  <	; Call 32 fputc 0>
new  <	mov rbx, [rbp + 24]>

1912:
old  <	mov qword [rbp + 32], puts$11>
new  <	mov rax, [rbp]>

1913:
old  <	mov [rbp + 40], rbp>
new  <	mov rdi, [rbp + 16]>

1914:
old  <	add rbp, 32>
new  <	mov rbp, [rbp + 8]>

1915:
old  <	jmp fputc>
new  <	jmp rax>

1917:
old  < puts$11:>
new  < gets$22:>

1918:
old  <	; PostCall 32>
new  <	; SetReturnValue>

1920:
old  < puts$12:>
new  < gets$23:>

1921:
old  <	; GetReturnValue Â£temporary860>
new  <	; Return 0>

1922:
old  <>
new  <	mov rbx, 0>

1923:
old  < puts$13:>
new  <	mov rax, [rbp]>

1924:
old  <	; Return Â£temporary860>
new  <	mov rdi, [rbp + 16]>

1925:
old  <	mov rax, [rbp]>
new  <	mov rbp, [rbp + 8]>

1926:
old  <	mov rdi, [rbp + 16]>
new  <	jmp rax>

1927:
old  <	mov rbp, [rbp + 8]>
new  <>

1928:
old  <	jmp rax>
new  < gets$24:>

1929:
old  <>
new  <	; FunctionEnd gets>

1930:
old  < puts$14:>
new  <>

1931:
old  <	; Return -1>
new  <section .text>

1932:
old  <	mov ebx, -1>
new  <>

1933:
old  <	mov rax, [rbp]>
new  < puts:>

1934:
old  <	mov rdi, [rbp + 16]>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1935:
old  <	mov rbp, [rbp + 8]>
new  <>

1936:
old  <	jmp rax>
new  < puts$1:>

1937:
old  <>
new  <	; Parameter 56 pointer s>

1938:
old  < puts$15:>
new  <	mov rax, [rbp + 24]>

1939:
old  <	; FunctionEnd puts>
new  <	mov [rbp + 56], rax>

1941:
old  <section .text>
new  < puts$2:>

1942:
old  <>
new  <	; Parameter 64 pointer stdout>

1943:
old  < ungetc:>
new  <	mov rax, [stdout]>

1944:
old  <	; Dereference Â£temporary861 -> stream stream 0>
new  <	mov [rbp + 64], rax>

1945:
old  <	mov rsi, [rbp + 28]>
new  <>

1946:
old  <>
new  < puts$3:>

1947:
old  < ungetc$1:>
new  <	; Call 32 fputs 0>

1948:
old  <	; IntegralToIntegral Â£temporary862 Â£temporary861 -> stream>
new  <	mov qword [rbp + 32], puts$4>

1949:
old  <	mov al, [rsi + 24]>
new  <	mov [rbp + 40], rbp>

1950:
old  <	and eax, 255>
new  <	add rbp, 32>

1951:
old  <	cmp al, 0>
new  <	jmp fputs>

1952:
old  <	jge ungetc$2>
new  <>

1953:
old  <	neg al>
new  < puts$4:>

1954:
old  <	neg eax>
new  <	; PostCall 32>

1956:
old  < ungetc$2:>
new  < puts$5:>

1957:
old  <	; Equal 6 Â£temporary862 -1>
new  <	; GetReturnValue Â£temporary858>

1958:
old  <	cmp eax, -1>
new  <>

1959:
old  <	je ungetc$6>
new  < puts$6:>

1960:
old  <>
new  <	; Equal 15 Â£temporary858 0>

1961:
old  < ungetc$3:>
new  <	cmp ebx, 0>

1962:
old  <	; Dereference Â£temporary864 -> stream stream 0>
new  <	je puts$15>

1963:
old  <	mov rsi, [rbp + 28]>
new  <>

1964:
old  <>
new  < puts$7:>

1965:
old  < ungetc$4:>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1966:
old  <	; IntegralToIntegral Â£temporary865 c>
new  <>

1967:
old  <	mov eax, [rbp + 24]>
new  < puts$8:>

1968:
old  <	cmp eax, 0>
new  <	; Parameter 56 signedint 10>

1969:
old  <	jge ungetc$5>
new  <	mov dword [rbp + 56], 10>

1970:
old  <	neg eax>
new  <>

1971:
old  <	neg al>
new  < puts$9:>

1972:
old  <>
new  <	; Parameter 60 pointer stdout>

1973:
old  < ungetc$5:>
new  <	mov rax, [stdout]>

1974:
old  <	; Assign Â£temporary864 -> stream Â£temporary865>
new  <	mov [rbp + 60], rax>

1975:
old  <	mov [rsi + 24], al>
new  <>

1976:
old  <>
new  < puts$10:>

1977:
old  < ungetc$6:>
new  <	; Call 32 fputc 0>

1978:
old  <	; Return c>
new  <	mov qword [rbp + 32], puts$11>

1979:
old  <	mov ebx, [rbp + 24]>
new  <	mov [rbp + 40], rbp>

1980:
old  <	mov rax, [rbp]>
new  <	add rbp, 32>

1981:
old  <	mov rdi, [rbp + 16]>
new  <	jmp fputc>

1982:
old  <	mov rbp, [rbp + 8]>
new  <>

1983:
old  <	jmp rax>
new  < puts$11:>

1984:
old  <>
new  <	; PostCall 32>

1985:
old  < ungetc$7:>
new  <>

1986:
old  <	; FunctionEnd ungetc>
new  < puts$12:>

1987:
old  <>
new  <	; GetReturnValue Â£temporary860>

1988:
old  <section .text>
new  <>

1989:
old  <>
new  < puts$13:>

1990:
old  < fread:>
new  <	; SetReturnValue>

1991:
old  <	; AssignRegister rax 0>
new  <>

1992:
old  <	mov rax, 0>
new  < puts$14:>

1993:
old  <>
new  <	; Return Â£temporary860>

1994:
old  < fread$1:>
new  <	mov rax, [rbp]>

1995:
old  <	; Dereference Â£temporary868 -> stream stream 0>
new  <	mov rdi, [rbp + 16]>

1996:
old  <	mov rsi, [rbp + 40]>
new  <	mov rbp, [rbp + 8]>

1997:
old  <>
new  <	jmp rax>

1998:
old  < fread$2:>
new  <>

1999:
old  <	; IntegralToIntegral Â£temporary869 Â£temporary868 -> stream>
new  < puts$15:>

2000:
old  <	mov edi, [rsi + 4]>
new  <	; SetReturnValue>

2001:
old  <	mov rbx, 4294967295>
new  <>

2002:
old  <	and rdi, rbx>
new  < puts$16:>

2003:
old  <>
new  <	; Return -1>

2004:
old  < fread$3:>
new  <	mov ebx, -1>

2005:
old  <	; AssignRegister rdi Â£temporary869>
new  <	mov rax, [rbp]>

2006:
old  <>
new  <	mov rdi, [rbp + 16]>

2007:
old  < fread$4:>
new  <	mov rbp, [rbp + 8]>

2008:
old  <	; IntegralToIntegral Â£temporary871 ptr>
new  <	jmp rax>

2009:
old  <	mov rsi, [rbp + 24]>
new  <>

2010:
old  <>
new  < puts$17:>

2011:
old  < fread$5:>
new  <	; FunctionEnd puts>

2012:
old  <	; AssignRegister rsi Â£temporary871>
new  <>

2013:
old  <>
new  <section .text>

2014:
old  < fread$6:>
new  <>

2015:
old  <	; SignedMultiply Â£temporary873 size nobj>
new  < ungetc:>

2016:
old  <	mov eax, [rbp + 32]>
new  <	; Dereference Â£temporary861 -> stream stream 0>

2017:
old  <	xor edx, edx>
new  <	mov rsi, [rbp + 28]>

2018:
old  <	imul dword [rbp + 36]>
new  <>

2019:
old  <>
new  < ungetc$1:>

2020:
old  < fread$7:>
new  <	; IntegralToIntegral Â£temporary862 Â£temporary861 -> stream>

2021:
old  <	; IntegralToIntegral Â£temporary874 Â£temporary873>
new  <	mov al, [rsi + 24]>

2022:
old  <	mov rbx, 4294967295>
new  <	and eax, 255>

2023:
old  <	and rax, rbx>
new  <	cmp al, 0>

2024:
old  <>
new  <	jge ungetc$2>

2025:
old  < fread$8:>
new  <	neg al>

2026:
old  <	; AssignRegister rdx Â£temporary874>
new  <	neg eax>

2027:
old  <	mov rdx, rax>
new  <>

2028:
old  <>
new  < ungetc$2:>

2029:
old  < fread$9:>
new  <	; Equal 6 Â£temporary862 -1>

2030:
old  <	; SysCall>
new  <	cmp eax, -1>

2031:
old  <	syscall>
new  <	je ungetc$6>

2033:
old  < fread$10:>
new  < ungetc$3:>

2034:
old  <	; Return 0>
new  <	; Dereference Â£temporary864 -> stream stream 0>

2035:
old  <	mov ebx, 0>
new  <	mov rsi, [rbp + 28]>

2036:
old  <	mov rax, [rbp]>
new  <>

2037:
old  <	mov rdi, [rbp + 16]>
new  < ungetc$4:>

2038:
old  <	mov rbp, [rbp + 8]>
new  <	; IntegralToIntegral Â£temporary865 c>

2039:
old  <	jmp rax>
new  <	mov eax, [rbp + 24]>

2040:
old  <>
new  <	cmp eax, 0>

2041:
old  < fread$11:>
new  <	jge ungetc$5>

2042:
old  <	; FunctionEnd fread>
new  <	neg eax>

2043:
old  <>
new  <	neg al>

2044:
old  <section .text>
new  <>

2045:
old  <>
new  < ungetc$5:>

2046:
old  < fwrite:>
new  <	; Assign Â£temporary864 -> stream Â£temporary865>

2047:
old  <	; AssignRegister rax 0>
new  <	mov [rsi + 24], al>

2048:
old  <	mov rax, 0>
new  <>

2049:
old  <>
new  < ungetc$6:>

2050:
old  < fwrite$1:>
new  <	; SetReturnValue>

2051:
old  <	; Dereference Â£temporary877 -> stream stream 0>
new  <>

2052:
old  <	mov rsi, [rbp + 40]>
new  < ungetc$7:>

2053:
old  <>
new  <	; Return c>

2054:
old  < fwrite$2:>
new  <	mov ebx, [rbp + 24]>

2055:
old  <	; IntegralToIntegral Â£temporary878 Â£temporary877 -> stream>
new  <	mov rax, [rbp]>

2056:
old  <	mov edi, [rsi + 4]>
new  <	mov rdi, [rbp + 16]>

2057:
old  <	mov rbx, 4294967295>
new  <	mov rbp, [rbp + 8]>

2058:
old  <	and rdi, rbx>
new  <	jmp rax>

2060:
old  < fwrite$3:>
new  < ungetc$8:>

2061:
old  <	; AssignRegister rdi Â£temporary878>
new  <	; FunctionEnd ungetc>

2063:
old  < fwrite$4:>
new  <section .text>

2064:
old  <	; IntegralToIntegral Â£temporary880 ptr>
new  <>

2065:
old  <	mov rsi, [rbp + 24]>
new  < fread:>

2066:
old  <>
new  <	; AssignRegister rax 0>

2067:
old  < fwrite$5:>
new  <	mov rax, 0>

2068:
old  <	; AssignRegister rsi Â£temporary880>
new  <>

2069:
old  <>
new  < fread$1:>

2070:
old  < fwrite$6:>
new  <	; Dereference Â£temporary868 -> stream stream 0>

2071:
old  <	; SignedMultiply Â£temporary882 size nobj>
new  <	mov rsi, [rbp + 40]>

2072:
old  <	mov eax, [rbp + 32]>
new  <>

2073:
old  <	xor edx, edx>
new  < fread$2:>

2074:
old  <	imul dword [rbp + 36]>
new  <	; IntegralToIntegral Â£temporary869 Â£temporary868 -> stream>

2075:
old  <>
new  <	mov edi, [rsi + 4]>

2076:
old  < fwrite$7:>
new  <	mov rbx, 4294967295>

2077:
old  <	; IntegralToIntegral Â£temporary883 Â£temporary882>
new  <	and rdi, rbx>

2078:
old  <	mov rbx, 4294967295>
new  <>

2079:
old  <	and rax, rbx>
new  < fread$3:>

2080:
old  <>
new  <	; AssignRegister rdi Â£temporary869>

2081:
old  < fwrite$8:>
new  <>

2082:
old  <	; AssignRegister rdx Â£temporary883>
new  < fread$4:>

2083:
old  <	mov rdx, rax>
new  <	; IntegralToIntegral Â£temporary871 ptr>

2084:
old  <>
new  <	mov rsi, [rbp + 24]>

2085:
old  < fwrite$9:>
new  <>

2086:
old  <	; SysCall>
new  < fread$5:>

2087:
old  <	syscall>
new  <	; AssignRegister rsi Â£temporary871>

2089:
old  < fwrite$10:>
new  < fread$6:>

2090:
old  <	; Return 0>
new  <	; SignedMultiply Â£temporary873 size nobj>

2091:
old  <	mov ebx, 0>
new  <	mov eax, [rbp + 32]>

2092:
old  <	mov rax, [rbp]>
new  <	xor edx, edx>

2093:
old  <	mov rdi, [rbp + 16]>
new  <	imul dword [rbp + 36]>

2094:
old  <	mov rbp, [rbp + 8]>
new  <>

2095:
old  <	jmp rax>
new  < fread$7:>

2096:
old  <>
new  <	; IntegralToIntegral Â£temporary874 Â£temporary873>

2097:
old  < fwrite$11:>
new  <	mov rbx, 4294967295>

2098:
old  <	; FunctionEnd fwrite>
new  <	and rax, rbx>

2100:
old  <section .text>
new  < fread$8:>

2101:
old  <>
new  <	; AssignRegister rdx Â£temporary874>

2102:
old  < fseek:>
new  <	mov rdx, rax>

2103:
old  <	; AssignRegister rax 8>
new  <>

2104:
old  <	mov rax, 8>
new  < fread$9:>

2105:
old  <>
new  <	; SysCall>

2106:
old  < fseek$1:>
new  <	syscall>

2107:
old  <	; Dereference Â£temporary886 -> stream stream 0>
new  <>

2108:
old  <	mov rsi, [rbp + 24]>
new  < fread$10:>

2109:
old  <>
new  <	; SetReturnValue>

2110:
old  < fseek$2:>
new  <>

2111:
old  <	; IntegralToIntegral Â£temporary887 Â£temporary886 -> stream>
new  < fread$11:>

2112:
old  <	mov edi, [rsi + 4]>
new  <	; Return 0>

2113:
old  <	mov rbx, 4294967295>
new  <	mov ebx, 0>

2114:
old  <	and rdi, rbx>
new  <	mov rax, [rbp]>

2115:
old  <>
new  <	mov rdi, [rbp + 16]>

2116:
old  < fseek$3:>
new  <	mov rbp, [rbp + 8]>

2117:
old  <	; AssignRegister rdi Â£temporary887>
new  <	jmp rax>

2119:
old  < fseek$4:>
new  < fread$12:>

2120:
old  <	; IntegralToIntegral Â£temporary889 offset>
new  <	; FunctionEnd fread>

2121:
old  <	mov esi, [rbp + 32]>
new  <>

2122:
old  <	mov rbx, 4294967295>
new  <section .text>

2123:
old  <	and rsi, rbx>
new  <>

2124:
old  <>
new  < fwrite:>

2125:
old  < fseek$5:>
new  <	; AssignRegister rax 0>

2126:
old  <	; AssignRegister rsi Â£temporary889>
new  <	mov rax, 0>

2128:
old  < fseek$6:>
new  < fwrite$1:>

2129:
old  <	; IntegralToIntegral Â£temporary891 origin>
new  <	; Dereference Â£temporary877 -> stream stream 0>

2130:
old  <	mov edx, [rbp + 36]>
new  <	mov rsi, [rbp + 40]>

2131:
old  <	mov rbx, 4294967295>
new  <>

2132:
old  <	and rdx, rbx>
new  < fwrite$2:>

2133:
old  <>
new  <	; IntegralToIntegral Â£temporary878 Â£temporary877 -> stream>

2134:
old  < fseek$7:>
new  <	mov edi, [rsi + 4]>

2135:
old  <	; AssignRegister rdx Â£temporary891>
new  <	mov rbx, 4294967295>

2136:
old  <>
new  <	and rdi, rbx>

2137:
old  < fseek$8:>
new  <>

2138:
old  <	; SysCall>
new  < fwrite$3:>

2139:
old  <	syscall>
new  <	; AssignRegister rdi Â£temporary878>

2141:
old  < fseek$9:>
new  < fwrite$4:>

2142:
old  <	; Return 0>
new  <	; IntegralToIntegral Â£temporary880 ptr>

2143:
old  <	mov ebx, 0>
new  <	mov rsi, [rbp + 24]>

2144:
old  <	mov rax, [rbp]>
new  <>

2145:
old  <	mov rdi, [rbp + 16]>
new  < fwrite$5:>

2146:
old  <	mov rbp, [rbp + 8]>
new  <	; AssignRegister rsi Â£temporary880>

2147:
old  <	jmp rax>
new  <>

2148:
old  <>
new  < fwrite$6:>

2149:
old  < fseek$10:>
new  <	; SignedMultiply Â£temporary882 size nobj>

2150:
old  <	; FunctionEnd fseek>
new  <	mov eax, [rbp + 32]>

2151:
old  <>
new  <	xor edx, edx>

2152:
old  <section .text>
new  <	imul dword [rbp + 36]>

2154:
old  < ftell:>
new  < fwrite$7:>

2155:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; IntegralToIntegral Â£temporary883 Â£temporary882>

2156:
old  <>
new  <	mov rbx, 4294967295>

2157:
old  < ftell$1:>
new  <	and rax, rbx>

2158:
old  <	; Parameter 56 pointer stream>
new  <>

2159:
old  <	mov rax, [rbp + 24]>
new  < fwrite$8:>

2160:
old  <	mov [rbp + 56], rax>
new  <	; AssignRegister rdx Â£temporary883>

2161:
old  <>
new  <	mov rdx, rax>

2162:
old  < ftell$2:>
new  <>

2163:
old  <	; Parameter 64 signedint 0>
new  < fwrite$9:>

2164:
old  <	mov dword [rbp + 64], 0>
new  <	; SysCall>

2165:
old  <>
new  <	syscall>

2166:
old  < ftell$3:>
new  <>

2167:
old  <	; Parameter 68 signedint 1>
new  < fwrite$10:>

2168:
old  <	mov dword [rbp + 68], 1>
new  <	; SetReturnValue>

2170:
old  < ftell$4:>
new  < fwrite$11:>

2171:
old  <	; Call 32 fseek 0>
new  <	; Return 0>

2172:
old  <	mov qword [rbp + 32], ftell$5>
new  <	mov ebx, 0>

2173:
old  <	mov [rbp + 40], rbp>
new  <	mov rax, [rbp]>

2174:
old  <	add rbp, 32>
new  <	mov rdi, [rbp + 16]>

2175:
old  <	jmp fseek>
new  <	mov rbp, [rbp + 8]>

2176:
old  <>
new  <	jmp rax>

2177:
old  < ftell$5:>
new  <>

2178:
old  <	; PostCall 32>
new  < fwrite$12:>

2179:
old  <>
new  <	; FunctionEnd fwrite>

2180:
old  < ftell$6:>
new  <>

2181:
old  <	; GetReturnValue Â£temporary892>
new  <section .text>

2183:
old  < ftell$7:>
new  < fseek:>

2184:
old  <	; Return Â£temporary892>
new  <	; AssignRegister rax 8>

2185:
old  <	mov rax, [rbp]>
new  <	mov rax, 8>

2186:
old  <	mov rdi, [rbp + 16]>
new  <>

2187:
old  <	mov rbp, [rbp + 8]>
new  < fseek$1:>

2188:
old  <	jmp rax>
new  <	; Dereference Â£temporary886 -> stream stream 0>

2189:
old  <>
new  <	mov rsi, [rbp + 24]>

2190:
old  < ftell$8:>
new  <>

2191:
old  <	; FunctionEnd ftell>
new  < fseek$2:>

2192:
old  <>
new  <	; IntegralToIntegral Â£temporary887 Â£temporary886 -> stream>

2193:
old  <section .text>
new  <	mov edi, [rsi + 4]>

2194:
old  <>
new  <	mov rbx, 4294967295>

2195:
old  < rewind:>
new  <	and rdi, rbx>

2196:
old  <	; Return>
new  <>

2197:
old  <	mov rax, [rbp]>
new  < fseek$3:>

2198:
old  <	mov rdi, [rbp + 16]>
new  <	; AssignRegister rdi Â£temporary887>

2199:
old  <	mov rbp, [rbp + 8]>
new  <>

2200:
old  <	jmp rax>
new  < fseek$4:>

2201:
old  <>
new  <	; IntegralToIntegral Â£temporary889 offset>

2202:
old  < rewind$1:>
new  <	mov esi, [rbp + 32]>

2203:
old  <	; FunctionEnd rewind>
new  <	mov rbx, 4294967295>

2204:
old  <>
new  <	and rsi, rbx>

2205:
old  <section .text>
new  <>

2206:
old  <>
new  < fseek$5:>

2207:
old  < fgetpos:>
new  <	; AssignRegister rsi Â£temporary889>

2208:
old  <	; Dereference Â£temporary895 -> ptr ptr 0>
new  <>

2209:
old  <	mov rsi, [rbp + 32]>
new  < fseek$6:>

2210:
old  <>
new  <	; IntegralToIntegral Â£temporary891 origin>

2211:
old  < fgetpos$1:>
new  <	mov edx, [rbp + 36]>

2212:
old  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov rbx, 4294967295>

2213:
old  <	mov [rbp + 40], rsi>
new  <	and rdx, rbx>

2215:
old  < fgetpos$2:>
new  < fseek$7:>

2216:
old  <	; Parameter 64 pointer stream>
new  <	; AssignRegister rdx Â£temporary891>

2217:
old  <	mov rax, [rbp + 24]>
new  <>

2218:
old  <	mov [rbp + 72], rax>
new  < fseek$8:>

2219:
old  <>
new  <	; SysCall>

2220:
old  < fgetpos$3:>
new  <	syscall>

2221:
old  <	; Call 40 ftell 0>
new  <>

2222:
old  <	mov qword [rbp + 48], fgetpos$4>
new  < fseek$9:>

2223:
old  <	mov [rbp + 56], rbp>
new  <	; SetReturnValue>

2224:
old  <	add rbp, 48>
new  <>

2225:
old  <	jmp ftell>
new  < fseek$10:>

2226:
old  <>
new  <	; Return 0>

2227:
old  < fgetpos$4:>
new  <	mov ebx, 0>

2228:
old  <	; PostCall 40>
new  <	mov rax, [rbp]>

2229:
old  <	mov rsi, [rbp + 40]>
new  <	mov rdi, [rbp + 16]>

2230:
old  <>
new  <	mov rbp, [rbp + 8]>

2231:
old  < fgetpos$5:>
new  <	jmp rax>

2232:
old  <	; GetReturnValue Â£temporary896>
new  <>

2233:
old  <>
new  < fseek$11:>

2234:
old  < fgetpos$6:>
new  <	; FunctionEnd fseek>

2235:
old  <	; IntegralToIntegral Â£temporary897 Â£temporary896>
new  <>

2236:
old  <>
new  <section .text>

2237:
old  < fgetpos$7:>
new  <>

2238:
old  <	; Assign Â£temporary895 -> ptr Â£temporary897>
new  < ftell:>

2239:
old  <	mov [rsi], ebx>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2241:
old  < fgetpos$8:>
new  < ftell$1:>

2242:
old  <	; Return 0>
new  <	; Parameter 56 pointer stream>

2243:
old  <	mov ebx, 0>
new  <	mov rax, [rbp + 24]>

2244:
old  <	mov rax, [rbp]>
new  <	mov [rbp + 56], rax>

2245:
old  <	mov rdi, [rbp + 16]>
new  <>

2246:
old  <	mov rbp, [rbp + 8]>
new  < ftell$2:>

2247:
old  <	jmp rax>
new  <	; Parameter 64 signedint 0>

2248:
old  <>
new  <	mov dword [rbp + 64], 0>

2249:
old  < fgetpos$9:>
new  <>

2250:
old  <	; FunctionEnd fgetpos>
new  < ftell$3:>

2251:
old  <>
new  <	; Parameter 68 signedint 1>

2252:
old  <section .text>
new  <	mov dword [rbp + 68], 1>

2254:
old  < fsetpos:>
new  < ftell$4:>

2255:
old  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Call 32 fseek 0>

2256:
old  <>
new  <	mov qword [rbp + 32], ftell$5>

2257:
old  < fsetpos$1:>
new  <	mov [rbp + 40], rbp>

2258:
old  <	; Parameter 64 pointer stream>
new  <	add rbp, 32>

2259:
old  <	mov rax, [rbp + 24]>
new  <	jmp fseek>

2260:
old  <	mov [rbp + 64], rax>
new  <>

2261:
old  <>
new  < ftell$5:>

2262:
old  < fsetpos$2:>
new  <	; PostCall 32>

2263:
old  <	; Dereference Â£temporary898 -> ptr ptr 0>
new  <>

2264:
old  <	mov rsi, [rbp + 32]>
new  < ftell$6:>

2265:
old  <>
new  <	; GetReturnValue Â£temporary892>

2266:
old  < fsetpos$3:>
new  <>

2267:
old  <	; Parameter 72 signedint Â£temporary898 -> ptr>
new  < ftell$7:>

2268:
old  <	mov eax, [rsi]>
new  <	; SetReturnValue>

2269:
old  <	mov [rbp + 72], eax>
new  <>

2270:
old  <>
new  < ftell$8:>

2271:
old  < fsetpos$4:>
new  <	; Return Â£temporary892>

2272:
old  <	; Parameter 76 signedint 0>
new  <	mov rax, [rbp]>

2273:
old  <	mov dword [rbp + 76], 0>
new  <	mov rdi, [rbp + 16]>

2274:
old  <>
new  <	mov rbp, [rbp + 8]>

2275:
old  < fsetpos$5:>
new  <	jmp rax>

2276:
old  <	; Call 40 fseek 0>
new  <>

2277:
old  <	mov qword [rbp + 40], fsetpos$6>
new  < ftell$9:>

2278:
old  <	mov [rbp + 48], rbp>
new  <	; FunctionEnd ftell>

2279:
old  <	add rbp, 40>
new  <>

2280:
old  <	jmp fseek>
new  <section .text>

2282:
old  < fsetpos$6:>
new  < rewind:>

2283:
old  <	; PostCall 40>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2285:
old  < fsetpos$7:>
new  < rewind$1:>

2286:
old  <	; GetReturnValue Â£temporary899>
new  <	; Parameter 56 pointer stream>

2287:
old  <>
new  <	mov rax, [rbp + 24]>

2288:
old  < fsetpos$8:>
new  <	mov [rbp + 56], rax>

2289:
old  <	; IntegralToIntegral Â£temporary900 Â£temporary899>
new  <>

2290:
old  <>
new  < rewind$2:>

2291:
old  < fsetpos$9:>
new  <	; Parameter 64 signedint 0>

2292:
old  <	; Return Â£temporary900>
new  <	mov dword [rbp + 64], 0>

2293:
old  <	mov rax, [rbp]>
new  <>

2294:
old  <	mov rdi, [rbp + 16]>
new  < rewind$3:>

2295:
old  <	mov rbp, [rbp + 8]>
new  <	; Parameter 68 signedint 0>

2296:
old  <	jmp rax>
new  <	mov dword [rbp + 68], 0>

2298:
old  < fsetpos$10:>
new  < rewind$4:>

2299:
old  <	; FunctionEnd fsetpos>
new  <	; Call 32 fseek 0>

2300:
old  <>
new  <	mov qword [rbp + 32], rewind$5>

2301:
old  <section .text>
new  <	mov [rbp + 40], rbp>

2302:
old  <>
new  <	add rbp, 32>

2303:
old  < clearerr:>
new  <	jmp fseek>

2304:
old  <	; Dereference Â£temporary901 -> stream stream 0>
new  <>

2305:
old  <	mov rsi, [rbp + 24]>
new  < rewind$5:>

2306:
old  <>
new  <	; PostCall 32>

2307:
old  < clearerr$1:>
new  <>

2308:
old  <	; Assign errno 0>
new  < rewind$6:>

2309:
old  <	mov dword [errno], 0>
new  <	; Return>

2310:
old  <>
new  <	mov rax, [rbp]>

2311:
old  < clearerr$2:>
new  <	mov rdi, [rbp + 16]>

2312:
old  <	; Assign Â£temporary901 -> stream errno>
new  <	mov rbp, [rbp + 8]>

2313:
old  <	mov eax, [errno]>
new  <	jmp rax>

2314:
old  <	mov [rsi + 25], eax>
new  <>

2315:
old  <>
new  < rewind$7:>

2316:
old  < clearerr$3:>
new  <	; FunctionEnd rewind>

2317:
old  <	; Return>
new  <>

2318:
old  <	mov rax, [rbp]>
new  <section .text>

2319:
old  <	mov rdi, [rbp + 16]>
new  <>

2320:
old  <	mov rbp, [rbp + 8]>
new  < fgetpos:>

2321:
old  <	jmp rax>
new  <	; Dereference Â£temporary895 -> ptr ptr 0>

2322:
old  <>
new  <	mov rsi, [rbp + 32]>

2323:
old  < clearerr$4:>
new  <>

2324:
old  <	; FunctionEnd clearerr>
new  < fgetpos$1:>

2325:
old  <>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2326:
old  <section .text>
new  <	mov [rbp + 40], rsi>

2328:
old  < feof:>
new  < fgetpos$2:>

2329:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter 64 pointer stream>

2330:
old  <>
new  <	mov rax, [rbp + 24]>

2331:
old  < feof$1:>
new  <	mov [rbp + 72], rax>

2332:
old  <	; Parameter 56 pointer stream>
new  <>

2333:
old  <	mov rax, [rbp + 24]>
new  < fgetpos$3:>

2334:
old  <	mov [rbp + 56], rax>
new  <	; Call 40 ftell 0>

2335:
old  <>
new  <	mov qword [rbp + 48], fgetpos$4>

2336:
old  < feof$2:>
new  <	mov [rbp + 56], rbp>

2337:
old  <	; Parameter 64 signedint 0>
new  <	add rbp, 48>

2338:
old  <	mov dword [rbp + 64], 0>
new  <	jmp ftell>

2340:
old  < feof$3:>
new  < fgetpos$4:>

2341:
old  <	; Parameter 68 signedint 1>
new  <	; PostCall 40>

2342:
old  <	mov dword [rbp + 68], 1>
new  <	mov rsi, [rbp + 40]>

2344:
old  < feof$4:>
new  < fgetpos$5:>

2345:
old  <	; Call 32 fseek 0>
new  <	; GetReturnValue Â£temporary896>

2346:
old  <	mov qword [rbp + 32], feof$5>
new  <>

2347:
old  <	mov [rbp + 40], rbp>
new  < fgetpos$6:>

2348:
old  <	add rbp, 32>
new  <	; IntegralToIntegral Â£temporary897 Â£temporary896>

2349:
old  <	jmp fseek>
new  <>

2350:
old  <>
new  < fgetpos$7:>

2351:
old  < feof$5:>
new  <	; Assign Â£temporary895 -> ptr Â£temporary897>

2352:
old  <	; PostCall 32>
new  <	mov [rsi], ebx>

2354:
old  < feof$6:>
new  < fgetpos$8:>

2355:
old  <	; GetReturnValue Â£temporary902>
new  <	; SetReturnValue>

2357:
old  < feof$7:>
new  < fgetpos$9:>

2358:
old  <	; IntegralToIntegral Â£temporary903 Â£temporary902>
new  <	; Return 0>

2359:
old  <	mov rax, 4294967295>
new  <	mov ebx, 0>

2360:
old  <	and rbx, rax>
new  <	mov rax, [rbp]>

2361:
old  <>
new  <	mov rdi, [rbp + 16]>

2362:
old  < feof$8:>
new  <	mov rbp, [rbp + 8]>

2363:
old  <	; Assign currPosition Â£temporary903>
new  <	jmp rax>

2364:
old  <	mov [rbp + 32], rbx>
new  <>

2365:
old  <>
new  < fgetpos$10:>

2366:
old  < feof$9:>
new  <	; FunctionEnd fgetpos>

2367:
old  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

2368:
old  <>
new  <section .text>

2369:
old  < feof$10:>
new  <>

2370:
old  <	; Parameter 64 pointer stream>
new  < fsetpos:>

2371:
old  <	mov rax, [rbp + 24]>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2372:
old  <	mov [rbp + 64], rax>
new  <>

2373:
old  <>
new  < fsetpos$1:>

2374:
old  < feof$11:>
new  <	; Parameter 64 pointer stream>

2375:
old  <	; Parameter 72 signedint 0>
new  <	mov rax, [rbp + 24]>

2376:
old  <	mov dword [rbp + 72], 0>
new  <	mov [rbp + 64], rax>

2378:
old  < feof$12:>
new  < fsetpos$2:>

2379:
old  <	; Parameter 76 signedint 2>
new  <	; Dereference Â£temporary898 -> ptr ptr 0>

2380:
old  <	mov dword [rbp + 76], 2>
new  <	mov rsi, [rbp + 32]>

2382:
old  < feof$13:>
new  < fsetpos$3:>

2383:
old  <	; Call 40 fseek 0>
new  <	; Parameter 72 signedint Â£temporary898 -> ptr>

2384:
old  <	mov qword [rbp + 40], feof$14>
new  <	mov eax, [rsi]>

2385:
old  <	mov [rbp + 48], rbp>
new  <	mov [rbp + 72], eax>

2386:
old  <	add rbp, 40>
new  <>

2387:
old  <	jmp fseek>
new  < fsetpos$4:>

2388:
old  <>
new  <	; Parameter 76 signedint 0>

2389:
old  < feof$14:>
new  <	mov dword [rbp + 76], 0>

2390:
old  <	; PostCall 40>
new  <>

2391:
old  <>
new  < fsetpos$5:>

2392:
old  < feof$15:>
new  <	; Call 40 fseek 0>

2393:
old  <	; GetReturnValue Â£temporary904>
new  <	mov qword [rbp + 40], fsetpos$6>

2394:
old  <>
new  <	mov [rbp + 48], rbp>

2395:
old  < feof$16:>
new  <	add rbp, 40>

2396:
old  <	; IntegralToIntegral Â£temporary905 Â£temporary904>
new  <	jmp fseek>

2397:
old  <	mov rax, 4294967295>
new  <>

2398:
old  <	and rbx, rax>
new  < fsetpos$6:>

2399:
old  <>
new  <	; PostCall 40>

2400:
old  < feof$17:>
new  <>

2401:
old  <	; Assign lastPosition Â£temporary905>
new  < fsetpos$7:>

2402:
old  <	mov [rbp + 40], rbx>
new  <	; GetReturnValue Â£temporary899>

2404:
old  < feof$18:>
new  < fsetpos$8:>

2405:
old  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; IntegralToIntegral Â£temporary900 Â£temporary899>

2407:
old  < feof$19:>
new  < fsetpos$9:>

2408:
old  <	; Parameter 72 pointer stream>
new  <	; SetReturnValue>

2409:
old  <	mov rax, [rbp + 24]>
new  <>

2410:
old  <	mov [rbp + 72], rax>
new  < fsetpos$10:>

2411:
old  <>
new  <	; Return Â£temporary900>

2412:
old  < feof$20:>
new  <	mov rax, [rbp]>

2413:
old  <	; IntegralToIntegral Â£temporary906 currPosition>
new  <	mov rdi, [rbp + 16]>

2414:
old  <	mov rax, [rbp + 32]>
new  <	mov rbp, [rbp + 8]>

2415:
old  <>
new  <	jmp rax>

2416:
old  < feof$21:>
new  <>

2417:
old  <	; Parameter 80 signedint Â£temporary906>
new  < fsetpos$11:>

2418:
old  <	mov [rbp + 80], eax>
new  <	; FunctionEnd fsetpos>

2420:
old  < feof$22:>
new  <section .text>

2421:
old  <	; Parameter 84 signedint 0>
new  <>

2422:
old  <	mov dword [rbp + 84], 0>
new  < clearerr:>

2423:
old  <>
new  <	; Dereference Â£temporary901 -> stream stream 0>

2424:
old  < feof$23:>
new  <	mov rsi, [rbp + 24]>

2425:
old  <	; Call 48 fseek 0>
new  <>

2426:
old  <	mov qword [rbp + 48], feof$24>
new  < clearerr$1:>

2427:
old  <	mov [rbp + 56], rbp>
new  <	; Assign errno 0>

2428:
old  <	add rbp, 48>
new  <	mov dword [errno], 0>

2429:
old  <	jmp fseek>
new  <>

2430:
old  <>
new  < clearerr$2:>

2431:
old  < feof$24:>
new  <	; Assign Â£temporary901 -> stream errno>

2432:
old  <	; PostCall 48>
new  <	mov eax, [errno]>

2433:
old  <>
new  <	mov [rsi + 25], eax>

2434:
old  < feof$25:>
new  <>

2435:
old  <	; NotEqual 28 currPosition lastPosition>
new  < clearerr$3:>

2436:
old  <	mov rax, [rbp + 40]>
new  <	; Return>

2437:
old  <	cmp [rbp + 32], rax>
new  <	mov rax, [rbp]>

2438:
old  <	jne feof$28>
new  <	mov rdi, [rbp + 16]>

2439:
old  <>
new  <	mov rbp, [rbp + 8]>

2440:
old  < feof$26:>
new  <	jmp rax>

2441:
old  <	; Assign Â£temporary909 1>
new  <>

2442:
old  <	mov eax, 1>
new  < clearerr$4:>

2443:
old  <>
new  <	; FunctionEnd clearerr>

2444:
old  < feof$27:>
new  <>

2445:
old  <	; Goto 29>
new  <section .text>

2446:
old  <	jmp feof$29>
new  <>

2447:
old  <>
new  < feof:>

2448:
old  < feof$28:>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2449:
old  <	; Assign Â£temporary909 0>
new  <>

2450:
old  <	mov eax, 0>
new  < feof$1:>

2451:
old  <>
new  <	; Parameter 56 pointer stream>

2452:
old  < feof$29:>
new  <	mov rax, [rbp + 24]>

2453:
old  <	; Assign endOfFile Â£temporary909>
new  <	mov [rbp + 56], rax>

2454:
old  <	mov [rbp + 48], eax>
new  <>

2455:
old  <>
new  < feof$2:>

2456:
old  < feof$30:>
new  <	; Parameter 64 signedint 0>

2457:
old  <	; Return endOfFile>
new  <	mov dword [rbp + 64], 0>

2458:
old  <	mov ebx, [rbp + 48]>
new  <>

2459:
old  <	mov rax, [rbp]>
new  < feof$3:>

2460:
old  <	mov rdi, [rbp + 16]>
new  <	; Parameter 68 signedint 1>

2461:
old  <	mov rbp, [rbp + 8]>
new  <	mov dword [rbp + 68], 1>

2462:
old  <	jmp rax>
new  <>

2463:
old  <>
new  < feof$4:>

2464:
old  < feof$31:>
new  <	; Call 32 fseek 0>

2465:
old  <	; FunctionEnd feof>
new  <	mov qword [rbp + 32], feof$5>

2466:
old  <>
new  <	mov [rbp + 40], rbp>

2467:
old  <section .text>
new  <	add rbp, 32>

2468:
old  <>
new  <	jmp fseek>

2469:
old  < ferror:>
new  <>

2470:
old  <	; Dereference Â£temporary910 -> stream stream 0>
new  < feof$5:>

2471:
old  <	mov rsi, [rbp + 24]>
new  <	; PostCall 32>

2473:
old  < ferror$1:>
new  < feof$6:>

2474:
old  <	; Return Â£temporary910 -> stream>
new  <	; GetReturnValue Â£temporary902>

2475:
old  <	mov ebx, [rsi + 25]>
new  <>

2476:
old  <	mov rax, [rbp]>
new  < feof$7:>

2477:
old  <	mov rdi, [rbp + 16]>
new  <	; IntegralToIntegral Â£temporary903 Â£temporary902>

2478:
old  <	mov rbp, [rbp + 8]>
new  <	mov rax, 4294967295>

2479:
old  <	jmp rax>
new  <	and rbx, rax>

2481:
old  < ferror$2:>
new  < feof$8:>

2482:
old  <	; FunctionEnd ferror>
new  <	; Assign currPosition Â£temporary903>

2483:
old  <>
new  <	mov [rbp + 32], rbx>

2484:
old  <section .data>
new  <>

2485:
old  <>
new  < feof$9:>

2486:
old  <string_25s3A2025s2E0A#:>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2487:
old  <	; Initializer String %s: %s.\n>
new  <>

2488:
old  <	db "%s: %s.", 10, 0>
new  < feof$10:>

2489:
old  <>
new  <	; Parameter 64 pointer stream>

2490:
old  <section .text>
new  <	mov rax, [rbp + 24]>

2491:
old  <>
new  <	mov [rbp + 64], rax>

2492:
old  < perror:>
new  <>

2493:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < feof$11:>

2494:
old  <>
new  <	; Parameter 72 signedint 0>

2495:
old  < perror$1:>
new  <	mov dword [rbp + 72], 0>

2496:
old  <	; Parameter 56 pointer "%s: %s.\n">
new  <>

2497:
old  <	mov qword [rbp + 56], string_25s3A2025s2E0A#>
new  < feof$12:>

2498:
old  <>
new  <	; Parameter 76 signedint 2>

2499:
old  < perror$2:>
new  <	mov dword [rbp + 76], 2>

2500:
old  <	; Parameter 64 pointer s>
new  <>

2501:
old  <	mov rax, [rbp + 24]>
new  < feof$13:>

2502:
old  <	mov [rbp + 64], rax>
new  <	; Call 40 fseek 0>

2503:
old  <>
new  <	mov qword [rbp + 40], feof$14>

2504:
old  < perror$3:>
new  <	mov [rbp + 48], rbp>

2505:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	add rbp, 40>

2506:
old  <>
new  <	jmp fseek>

2507:
old  < perror$4:>
new  <>

2508:
old  <	; Parameter 96 signedint errno>
new  < feof$14:>

2509:
old  <	mov eax, [errno]>
new  <	; PostCall 40>

2510:
old  <	mov [rbp + 96], eax>
new  <>

2511:
old  <>
new  < feof$15:>

2512:
old  < perror$5:>
new  <	; GetReturnValue Â£temporary904>

2513:
old  <	; Call 72 strerror 0>
new  <>

2514:
old  <	mov qword [rbp + 72], perror$6>
new  < feof$16:>

2515:
old  <	mov [rbp + 80], rbp>
new  <	; IntegralToIntegral Â£temporary905 Â£temporary904>

2516:
old  <	add rbp, 72>
new  <	mov rax, 4294967295>

2517:
old  <	jmp strerror>
new  <	and rbx, rax>

2519:
old  < perror$6:>
new  < feof$17:>

2520:
old  <	; PostCall 72>
new  <	; Assign lastPosition Â£temporary905>

2521:
old  <>
new  <	mov [rbp + 40], rbx>

2522:
old  < perror$7:>
new  <>

2523:
old  <	; GetReturnValue Â£temporary911>
new  < feof$18:>

2524:
old  <>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2525:
old  < perror$8:>
new  <>

2526:
old  <	; Parameter 72 pointer Â£temporary911>
new  < feof$19:>

2527:
old  <	mov [rbp + 72], rbx>
new  <	; Parameter 72 pointer stream>

2528:
old  <>
new  <	mov rax, [rbp + 24]>

2529:
old  < perror$9:>
new  <	mov [rbp + 72], rax>

2530:
old  <	; Call 32 printf 16>
new  <>

2531:
old  <	mov qword [rbp + 32], perror$10>
new  < feof$20:>

2532:
old  <	mov [rbp + 40], rbp>
new  <	; IntegralToIntegral Â£temporary906 currPosition>

2533:
old  <	add rbp, 32>
new  <	mov rax, [rbp + 32]>

2534:
old  <	mov rdi, rbp>
new  <>

2535:
old  <	add rdi, 16>
new  < feof$21:>

2536:
old  <	jmp printf>
new  <	; Parameter 80 signedint Â£temporary906>

2537:
old  <>
new  <	mov [rbp + 80], eax>

2538:
old  < perror$10:>
new  <>

2539:
old  <	; PostCall 32>
new  < feof$22:>

2540:
old  <>
new  <	; Parameter 84 signedint 0>

2541:
old  < perror$11:>
new  <	mov dword [rbp + 84], 0>

2542:
old  <	; Return>
new  <>

2543:
old  <	mov rax, [rbp]>
new  < feof$23:>

2544:
old  <	mov rdi, [rbp + 16]>
new  <	; Call 48 fseek 0>

2545:
old  <	mov rbp, [rbp + 8]>
new  <	mov qword [rbp + 48], feof$24>

2546:
old  <	jmp rax>
new  <	mov [rbp + 56], rbp>

2547:
old  <>
new  <	add rbp, 48>

2548:
old  < perror$12:>
new  <	jmp fseek>

2549:
old  <	; FunctionEnd perror>
new  <>

Temp.asm
6:
old  <	extern strcpy>
new  <	extern fopen>

7:
old  <	extern fopen>
new  <	extern $StackTop>

8:
old  <	extern $StackTop>
new  <>

10:
old  <>
new  <section .data>

11:
old  <section .data>
new  <>

12:
old  <>
new  <@2586$g_tempArray:>

13:
old  <@2587$g_tempArray:>
new  <	; InitializerZero 64>

14:
old  <	; InitializerZero 64>
new  <	times 64 db 0>

15:
old  <	times 64 db 0>
new  <>

16:
old  <>
new  <section .data>

17:
old  <section .data>
new  <>

18:
old  <>
new  <@2587$g_tempSize:>

19:
old  <@2588$g_tempSize:>
new  <	; Initializer SignedInt 0>

20:
old  <	; Initializer SignedInt 0>
new  <	dd 0>

21:
old  <	dd 0>
new  <>

22:
old  <>
new  <section .data>

23:
old  <section .data>
new  <>

24:
old  <>
new  <Array_4#:>

25:
old  <Array_4#:>
new  <	; Initializer Array 4>

26:
old  <	; Initializer Array 4>
new  <	dq 4>

27:
old  <	dq 4>
new  <>

28:
old  <>
new  <section .text>

29:
old  <section .text>
new  <>

30:
old  <>
new  < @2589$existsTempName:>

31:
old  < @2590$existsTempName:>
new  <	; Assign index 0>

32:
old  <	; Assign index 0>
new  <	mov dword [rbp + 32], 0>

33:
old  <	mov dword [rbp + 32], 0>
new  <>

34:
old  <>
new  < @2589$existsTempName$1:>

35:
old  < @2590$existsTempName$1:>
new  <	; SignedGreaterThanEqual 17 index g_tempSize>

36:
old  <	; SignedGreaterThanEqual 16 index g_tempSize>
new  <	mov eax, [@2587$g_tempSize]>

37:
old  <	mov eax, [@2588$g_tempSize]>
new  <	cmp [rbp + 32], eax>

38:
old  <	cmp [rbp + 32], eax>
new  <	jge @2589$existsTempName$17>

39:
old  <	jge @2590$existsTempName$16>
new  <>

40:
old  <>
new  < @2589$existsTempName$2:>

41:
old  < @2590$existsTempName$2:>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

42:
old  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

43:
old  <>
new  < @2589$existsTempName$3:>

44:
old  < @2590$existsTempName$3:>
new  <	; Parameter 60 pointer name>

45:
old  <	; Parameter 60 pointer name>
new  <	mov rax, [rbp + 24]>

46:
old  <	mov rax, [rbp + 24]>
new  <	mov [rbp + 60], rax>

47:
old  <	mov [rbp + 60], rax>
new  <>

48:
old  <>
new  < @2589$existsTempName$4:>

49:
old  < @2590$existsTempName$4:>
new  <	; IntegralToIntegral Â£temporary916 index>

50:
old  <	; IntegralToIntegral Â£temporary916 index>
new  <	mov eax, [rbp + 32]>

51:
old  <	mov eax, [rbp + 32]>
new  <	mov rbx, 4294967295>

52:
old  <	mov rbx, 4294967295>
new  <	and rax, rbx>

53:
old  <	and rax, rbx>
new  <>

54:
old  <>
new  < @2589$existsTempName$5:>

55:
old  < @2590$existsTempName$5:>
new  <	; UnsignedMultiply Â£temporary917 Â£temporary916 4>

56:
old  <	; UnsignedMultiply Â£temporary917 Â£temporary916 4>
new  <	xor rdx, rdx>

57:
old  <	xor rdx, rdx>
new  <	mul qword [Array_4#]>

58:
old  <	mul qword [Array_4#]>
new  <>

59:
old  <>
new  < @2589$existsTempName$6:>

60:
old  < @2590$existsTempName$6:>
new  <	; BinaryAdd Â£temporary918 g_tempArray Â£temporary917>

61:
old  <	; BinaryAdd Â£temporary918 g_tempArray Â£temporary917>
new  <	mov rsi, @2586$g_tempArray>

62:
old  <	mov rsi, @2587$g_tempArray>
new  <	add rsi, rax>

63:
old  <	add rsi, rax>
new  <>

64:
old  <>
new  < @2589$existsTempName$7:>

65:
old  < @2590$existsTempName$7:>
new  <	; Dereference Â£temporary915 -> Â£temporary918 Â£temporary918 0>

66:
old  <	; Dereference Â£temporary915 -> Â£temporary918 Â£temporary918 0>
new  <>

67:
old  <>
new  < @2589$existsTempName$8:>

68:
old  < @2590$existsTempName$8:>
new  <	; Parameter 68 pointer Â£temporary915 -> Â£temporary918>

69:
old  <	; Parameter 68 pointer Â£temporary915 -> Â£temporary918>
new  <	mov [rbp + 68], rsi>

70:
old  <	mov [rbp + 68], rsi>
new  <>

71:
old  <>
new  < @2589$existsTempName$9:>

72:
old  < @2590$existsTempName$9:>
new  <	; Call 36 strcmp 0>

73:
old  <	; Call 36 strcmp 0>
new  <	mov qword [rbp + 36], @2589$existsTempName$10>

74:
old  <	mov qword [rbp + 36], @2590$existsTempName$10>
new  <	mov [rbp + 44], rbp>

75:
old  <	mov [rbp + 44], rbp>
new  <	add rbp, 36>

76:
old  <	add rbp, 36>
new  <	jmp strcmp>

77:
old  <	jmp strcmp>
new  <>

78:
old  <>
new  < @2589$existsTempName$10:>

79:
old  < @2590$existsTempName$10:>
new  <	; PostCall 36>

80:
old  <	; PostCall 36>
new  <>

81:
old  <>
new  < @2589$existsTempName$11:>

82:
old  < @2590$existsTempName$11:>
new  <	; GetReturnValue Â£temporary919>

83:
old  <	; GetReturnValue Â£temporary919>
new  <>

84:
old  <>
new  < @2589$existsTempName$12:>

85:
old  < @2590$existsTempName$12:>
new  <	; NotEqual 15 Â£temporary919 0>

86:
old  <	; NotEqual 14 Â£temporary919 0>
new  <	cmp ebx, 0>

87:
old  <	cmp ebx, 0>
new  <	jne @2589$existsTempName$15>

88:
old  <	jne @2590$existsTempName$14>
new  <>

89:
old  <>
new  < @2589$existsTempName$13:>

90:
old  < @2590$existsTempName$13:>
new  <	; SetReturnValue>

91:
old  <	; Return 1>
new  <>

92:
old  <	mov ebx, 1>
new  < @2589$existsTempName$14:>

93:
old  <	mov rax, [rbp]>
new  <	; Return 1>

94:
old  <	mov rdi, [rbp + 16]>
new  <	mov ebx, 1>

95:
old  <	mov rbp, [rbp + 8]>
new  <	mov rax, [rbp]>

96:
old  <	jmp rax>
new  <	mov rdi, [rbp + 16]>

97:
old  <>
new  <	mov rbp, [rbp + 8]>

98:
old  < @2590$existsTempName$14:>
new  <	jmp rax>

99:
old  <	; BinaryAdd index index 1>
new  <>

100:
old  <	inc dword [rbp + 32]>
new  < @2589$existsTempName$15:>

101:
old  <>
new  <	; BinaryAdd index index 1>

102:
old  < @2590$existsTempName$15:>
new  <	inc dword [rbp + 32]>

103:
old  <	; Goto 1>
new  <>

104:
old  <	jmp @2590$existsTempName$1>
new  < @2589$existsTempName$16:>

105:
old  <>
new  <	; Goto 1>

106:
old  < @2590$existsTempName$16:>
new  <	jmp @2589$existsTempName$1>

107:
old  <	; Return 0>
new  <>

108:
old  <	mov ebx, 0>
new  < @2589$existsTempName$17:>

109:
old  <	mov rax, [rbp]>
new  <	; SetReturnValue>

110:
old  <	mov rdi, [rbp + 16]>
new  <>

111:
old  <	mov rbp, [rbp + 8]>
new  < @2589$existsTempName$18:>

112:
old  <	jmp rax>
new  <	; Return 0>

113:
old  <>
new  <	mov ebx, 0>

114:
old  < @2590$existsTempName$17:>
new  <	mov rax, [rbp]>

115:
old  <	; FunctionEnd existsTempName>
new  <	mov rdi, [rbp + 16]>

116:
old  <>
new  <	mov rbp, [rbp + 8]>

117:
old  <section .text>
new  <	jmp rax>

119:
old  < @2597$generateTempName:>
new  < @2589$existsTempName$19:>

120:
old  <	; SignedGreaterThanEqual 58 size 3>
new  <	; FunctionEnd existsTempName>

121:
old  <	cmp dword [rbp + 32], 3>
new  <>

122:
old  <	jge @2597$generateTempName$58>
new  <section .text>

124:
old  < @2597$generateTempName$1:>
new  < @2596$generateTempName:>

125:
old  <	; Assign c 97>
new  <	; SignedGreaterThanEqual 38 size 3>

126:
old  <	mov byte [rbp + 40], 97>
new  <	cmp dword [rbp + 32], 3>

127:
old  <>
new  <	jge @2596$generateTempName$38>

128:
old  < @2597$generateTempName$2:>
new  <>

129:
old  <	; SignedGreaterThan 58 c 122>
new  < @2596$generateTempName$1:>

130:
old  <	cmp byte [rbp + 40], 122>
new  <	; Assign c 97>

131:
old  <	jg @2597$generateTempName$58>
new  <	mov byte [rbp + 40], 97>

133:
old  < @2597$generateTempName$3:>
new  < @2596$generateTempName$2:>

134:
old  <	; IntegralToIntegral Â£temporary925 size>
new  <	; SignedGreaterThan 38 c 122>

135:
old  <	mov eax, [rbp + 32]>
new  <	cmp byte [rbp + 40], 122>

136:
old  <	mov rbx, 4294967295>
new  <	jg @2596$generateTempName$38>

137:
old  <	and rax, rbx>
new  <>

138:
old  <>
new  < @2596$generateTempName$3:>

139:
old  < @2597$generateTempName$4:>
new  <	; IntegralToIntegral Â£temporary925 size>

140:
old  <	; BinaryAdd Â£temporary927 name Â£temporary925>
new  <	mov eax, [rbp + 32]>

141:
old  <	mov rsi, [rbp + 24]>
new  <	mov rbx, 4294967295>

142:
old  <	add rsi, rax>
new  <	and rax, rbx>

144:
old  < @2597$generateTempName$5:>
new  < @2596$generateTempName$4:>

145:
old  <	; Dereference Â£temporary924 -> Â£temporary927 Â£temporary927 0>
new  <	; BinaryAdd Â£temporary927 name Â£temporary925>

146:
old  <>
new  <	mov rsi, [rbp + 24]>

147:
old  < @2597$generateTempName$6:>
new  <	add rsi, rax>

148:
old  <	; Assign Â£temporary924 -> Â£temporary927 c>
new  <>

149:
old  <	mov al, [rbp + 40]>
new  < @2596$generateTempName$5:>

150:
old  <	mov [rsi], al>
new  <	; Dereference Â£temporary924 -> Â£temporary927 Â£temporary927 0>

152:
old  < @2597$generateTempName$7:>
new  < @2596$generateTempName$6:>

153:
old  <	; BinaryAdd Â£temporary928 size 1>
new  <	; Assign Â£temporary924 -> Â£temporary927 c>

154:
old  <	mov eax, [rbp + 32]>
new  <	mov al, [rbp + 40]>

155:
old  <	inc eax>
new  <	mov [rsi], al>

157:
old  < @2597$generateTempName$8:>
new  < @2596$generateTempName$7:>

158:
old  <	; IntegralToIntegral Â£temporary930 Â£temporary928>
new  <	; BinaryAdd Â£temporary928 size 1>

159:
old  <	mov rbx, 4294967295>
new  <	mov eax, [rbp + 32]>

160:
old  <	and rax, rbx>
new  <	inc eax>

162:
old  < @2597$generateTempName$9:>
new  < @2596$generateTempName$8:>

163:
old  <	; BinaryAdd Â£temporary932 name Â£temporary930>
new  <	; IntegralToIntegral Â£temporary930 Â£temporary928>

164:
old  <	mov rsi, [rbp + 24]>
new  <	mov rbx, 4294967295>

165:
old  <	add rsi, rax>
new  <	and rax, rbx>

167:
old  < @2597$generateTempName$10:>
new  < @2596$generateTempName$9:>

168:
old  <	; Dereference Â£temporary929 -> Â£temporary932 Â£temporary932 0>
new  <	; BinaryAdd Â£temporary932 name Â£temporary930>

169:
old  <>
new  <	mov rsi, [rbp + 24]>

170:
old  < @2597$generateTempName$11:>
new  <	add rsi, rax>

171:
old  <	; Assign Â£temporary929 -> Â£temporary932 0>
new  <>

172:
old  <	mov byte [rsi], 0>
new  < @2596$generateTempName$10:>

173:
old  <>
new  <	; Dereference Â£temporary929 -> Â£temporary932 Â£temporary932 0>

174:
old  < @2597$generateTempName$12:>
new  <>

175:
old  <	; PreCall 41 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < @2596$generateTempName$11:>

176:
old  <>
new  <	; Assign Â£temporary929 -> Â£temporary932 0>

177:
old  < @2597$generateTempName$13:>
new  <	mov byte [rsi], 0>

178:
old  <	; Parameter 65 pointer name>
new  <>

179:
old  <	mov rax, [rbp + 24]>
new  < @2596$generateTempName$12:>

180:
old  <	mov [rbp + 65], rax>
new  <	; PreCall 41 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

182:
old  < @2597$generateTempName$14:>
new  < @2596$generateTempName$13:>

183:
old  <	; Call 41 fileexists 0>
new  <	; Parameter 65 pointer name>

184:
old  <	mov qword [rbp + 41], @2597$generateTempName$15>
new  <	mov rax, [rbp + 24]>

185:
old  <	mov [rbp + 49], rbp>
new  <	mov [rbp + 65], rax>

186:
old  <	add rbp, 41>
new  <>

187:
old  <	jmp fileexists>
new  < @2596$generateTempName$14:>

188:
old  <>
new  <	; Call 41 fileexists 0>

189:
old  < @2597$generateTempName$15:>
new  <	mov qword [rbp + 41], @2596$generateTempName$15>

190:
old  <	; PostCall 41>
new  <	mov [rbp + 49], rbp>

191:
old  <>
new  <	add rbp, 41>

192:
old  < @2597$generateTempName$16:>
new  <	jmp fileexists>

193:
old  <	; GetReturnValue Â£temporary933>
new  <>

194:
old  <>
new  < @2596$generateTempName$15:>

195:
old  < @2597$generateTempName$17:>
new  <	; PostCall 41>

196:
old  <	; NotEqual 45 Â£temporary933 0>
new  <>

197:
old  <	cmp ebx, 0>
new  < @2596$generateTempName$16:>

198:
old  <	jne @2597$generateTempName$45>
new  <	; GetReturnValue Â£temporary933>

200:
old  < @2597$generateTempName$18:>
new  < @2596$generateTempName$17:>

201:
old  <	; Case 22 status 0>
new  <	; NotEqual 24 Â£temporary933 0>

202:
old  <	mov eax, [rbp + 36]>
new  <	cmp ebx, 0>

203:
old  <	cmp eax, 0>
new  <	jne @2596$generateTempName$24>

204:
old  <	je @2597$generateTempName$22>
new  <>

205:
old  <>
new  < @2596$generateTempName$18:>

206:
old  < @2597$generateTempName$19:>
new  <	; Case 22 status 0>

207:
old  <	; Case 23 status 1>
new  <	mov eax, [rbp + 36]>

208:
old  <	cmp eax, 1>
new  <	cmp eax, 0>

209:
old  <	je @2597$generateTempName$23>
new  <	je @2596$generateTempName$22>

211:
old  < @2597$generateTempName$20:>
new  < @2596$generateTempName$19:>

212:
old  <	; CaseEnd status>
new  <	; Case 24 status 1>

213:
old  <>
new  <	cmp eax, 1>

214:
old  < @2597$generateTempName$21:>
new  <	je @2596$generateTempName$24>

215:
old  <	; Goto 45>
new  <>

216:
old  <	jmp @2597$generateTempName$45>
new  < @2596$generateTempName$20:>

217:
old  <>
new  <	; CaseEnd status>

218:
old  < @2597$generateTempName$22:>
new  <>

219:
old  <	; Return name>
new  < @2596$generateTempName$21:>

220:
old  <	mov rbx, [rbp + 24]>
new  <	; Goto 24>

221:
old  <	mov rax, [rbp]>
new  <	jmp @2596$generateTempName$24>

222:
old  <	mov rdi, [rbp + 16]>
new  <>

223:
old  <	mov rbp, [rbp + 8]>
new  < @2596$generateTempName$22:>

224:
old  <	jmp rax>
new  <	; SetReturnValue>

226:
old  < @2597$generateTempName$23:>
new  < @2596$generateTempName$23:>

227:
old  <	; PreCall 41 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Return name>

228:
old  <>
new  <	mov rbx, [rbp + 24]>

229:
old  < @2597$generateTempName$24:>
new  <	mov rax, [rbp]>

230:
old  <	; Parameter 65 pointer name>
new  <	mov rdi, [rbp + 16]>

231:
old  <	mov rax, [rbp + 24]>
new  <	mov rbp, [rbp + 8]>

232:
old  <	mov [rbp + 65], rax>
new  <	jmp rax>

234:
old  < @2597$generateTempName$25:>
new  < @2596$generateTempName$24:>

235:
old  <	; Call 41 existsTempName 0>
new  <	; PreCall 41 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

236:
old  <	mov qword [rbp + 41], @2597$generateTempName$26>
new  <>

237:
old  <	mov [rbp + 49], rbp>
new  < @2596$generateTempName$25:>

238:
old  <	add rbp, 41>
new  <	; Parameter 65 pointer name>

239:
old  <	jmp @2590$existsTempName>
new  <	mov rax, [rbp + 24]>

240:
old  <>
new  <	mov [rbp + 65], rax>

241:
old  < @2597$generateTempName$26:>
new  <>

242:
old  <	; PostCall 41>
new  < @2596$generateTempName$26:>

243:
old  <>
new  <	; BinaryAdd Â£temporary936 size 1>

244:
old  < @2597$generateTempName$27:>
new  <	mov eax, [rbp + 32]>

245:
old  <	; GetReturnValue Â£temporary936>
new  <	inc eax>

247:
old  < @2597$generateTempName$28:>
new  < @2596$generateTempName$27:>

248:
old  <	; NotEqual 45 Â£temporary936 0>
new  <	; Parameter 73 signedint Â£temporary936>

249:
old  <	cmp ebx, 0>
new  <	mov [rbp + 73], eax>

250:
old  <	jne @2597$generateTempName$45>
new  <>

251:
old  <>
new  < @2596$generateTempName$28:>

252:
old  < @2597$generateTempName$29:>
new  <	; Parameter 77 signedint status>

253:
old  <	; PreCall 41 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov eax, [rbp + 36]>

254:
old  <>
new  <	mov [rbp + 77], eax>

255:
old  < @2597$generateTempName$30:>
new  <>

256:
old  <	; IntegralToIntegral Â£temporary940 g_tempSize>
new  < @2596$generateTempName$29:>

257:
old  <	mov eax, [@2588$g_tempSize]>
new  <	; Call 41 generateTempName 0>

258:
old  <	mov rbx, 4294967295>
new  <	mov qword [rbp + 41], @2596$generateTempName$30>

259:
old  <	and rax, rbx>
new  <	mov [rbp + 49], rbp>

260:
old  <>
new  <	add rbp, 41>

261:
old  < @2597$generateTempName$31:>
new  <	jmp @2596$generateTempName>

262:
old  <	; UnsignedMultiply Â£temporary941 Â£temporary940 4>
new  <>

263:
old  <	xor rdx, rdx>
new  < @2596$generateTempName$30:>

264:
old  <	mul qword [Array_4#]>
new  <	; PostCall 41>

266:
old  < @2597$generateTempName$32:>
new  < @2596$generateTempName$31:>

267:
old  <	; BinaryAdd Â£temporary942 g_tempArray Â£temporary941>
new  <	; GetReturnValue Â£temporary937>

268:
old  <	mov rsi, @2587$g_tempArray>
new  <>

269:
old  <	add rsi, rax>
new  < @2596$generateTempName$32:>

270:
old  <>
new  <	; Assign result Â£temporary937>

271:
old  < @2597$generateTempName$33:>
new  <	mov [rbp + 41], rbx>

272:
old  <	; Dereference Â£temporary939 -> Â£temporary942 Â£temporary942 0>
new  <>

273:
old  <>
new  < @2596$generateTempName$33:>

274:
old  < @2597$generateTempName$34:>
new  <	; Equal 36 result 0>

275:
old  <	; Parameter 65 pointer Â£temporary939 -> Â£temporary942>
new  <	cmp qword [rbp + 41], 0>

276:
old  <	mov [rbp + 65], rsi>
new  <	je @2596$generateTempName$36>

278:
old  < @2597$generateTempName$35:>
new  < @2596$generateTempName$34:>

279:
old  <	; Parameter 73 pointer name>
new  <	; SetReturnValue>

280:
old  <	mov rax, [rbp + 24]>
new  <>

281:
old  <	mov [rbp + 73], rax>
new  < @2596$generateTempName$35:>

282:
old  <>
new  <	; Return result>

283:
old  < @2597$generateTempName$36:>
new  <	mov rbx, [rbp + 41]>

284:
old  <	; Call 41 strcpy 0>
new  <	mov rax, [rbp]>

285:
old  <	mov qword [rbp + 41], @2597$generateTempName$37>
new  <	mov rdi, [rbp + 16]>

286:
old  <	mov [rbp + 49], rbp>
new  <	mov rbp, [rbp + 8]>

287:
old  <	add rbp, 41>
new  <	jmp rax>

288:
old  <	jmp strcpy>
new  <>

289:
old  <>
new  < @2596$generateTempName$36:>

290:
old  < @2597$generateTempName$37:>
new  <	; BinaryAdd c c 1>

291:
old  <	; PostCall 41>
new  <	inc byte [rbp + 40]>

293:
old  < @2597$generateTempName$38:>
new  < @2596$generateTempName$37:>

294:
old  <	; Assign Â£temporary944 g_tempSize>
new  <	; Goto 2>

295:
old  <	mov eax, [@2588$g_tempSize]>
new  <	jmp @2596$generateTempName$2>

297:
old  < @2597$generateTempName$39:>
new  < @2596$generateTempName$38:>

298:
old  <	; BinaryAdd g_tempSize g_tempSize 1>
new  <	; SetReturnValue>

299:
old  <	inc dword [@2588$g_tempSize]>
new  <>

300:
old  <>
new  < @2596$generateTempName$39:>

301:
old  < @2597$generateTempName$40:>
new  <	; Return 0>

302:
old  <	; IntegralToIntegral Â£temporary946 Â£temporary944>
new  <	mov rbx, 0>

303:
old  <	mov rbx, 4294967295>
new  <	mov rax, [rbp]>

304:
old  <	and rax, rbx>
new  <	mov rdi, [rbp + 16]>

305:
old  <>
new  <	mov rbp, [rbp + 8]>

306:
old  < @2597$generateTempName$41:>
new  <	jmp rax>

307:
old  <	; UnsignedMultiply Â£temporary947 Â£temporary946 4>
new  <>

308:
old  <	xor rdx, rdx>
new  < @2596$generateTempName$40:>

309:
old  <	mul qword [Array_4#]>
new  <	; FunctionEnd generateTempName>

311:
old  < @2597$generateTempName$42:>
new  <section .data>

312:
old  <	; BinaryAdd Â£temporary948 g_tempArray Â£temporary947>
new  <>

313:
old  <	mov rsi, @2587$g_tempArray>
new  <string_w#:>

314:
old  <	add rsi, rax>
new  <	; Initializer String w>

315:
old  <>
new  <	db "w", 0>

316:
old  < @2597$generateTempName$43:>
new  <>

317:
old  <	; Dereference Â£temporary945 -> Â£temporary948 Â£temporary948 0>
new  <section .text>

319:
old  < @2597$generateTempName$44:>
new  < tmpfile:>

320:
old  <	; Return Â£temporary945 -> Â£temporary948>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

321:
old  <	mov rbx, rsi>
new  <>

322:
old  <	mov rax, [rbp]>
new  < tmpfile$1:>

323:
old  <	mov rdi, [rbp + 16]>
new  <	; Parameter 60 pointer name>

324:
old  <	mov rbp, [rbp + 8]>
new  <	mov [rbp + 60], rbp>

325:
old  <	jmp rax>
new  <	add qword [rbp + 60], 32>

327:
old  < @2597$generateTempName$45:>
new  < tmpfile$2:>

328:
old  <	; PreCall 41 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter 68 signedint 0>

329:
old  <>
new  <	mov dword [rbp + 68], 0>

330:
old  < @2597$generateTempName$46:>
new  <>

331:
old  <	; Parameter 65 pointer name>
new  < tmpfile$3:>

332:
old  <	mov rax, [rbp + 24]>
new  <	; Parameter 72 signedint 0>

333:
old  <	mov [rbp + 65], rax>
new  <	mov dword [rbp + 72], 0>

335:
old  < @2597$generateTempName$47:>
new  < tmpfile$4:>

336:
old  <	; BinaryAdd Â£temporary949 size 1>
new  <	; Call 36 generateTempName 0>

337:
old  <	mov eax, [rbp + 32]>
new  <	mov qword [rbp + 36], tmpfile$5>

338:
old  <	inc eax>
new  <	mov [rbp + 44], rbp>

339:
old  <>
new  <	add rbp, 36>

340:
old  < @2597$generateTempName$48:>
new  <	jmp @2596$generateTempName>

341:
old  <	; Parameter 73 signedint Â£temporary949>
new  <>

342:
old  <	mov [rbp + 73], eax>
new  < tmpfile$5:>

343:
old  <>
new  <	; PostCall 36>

344:
old  < @2597$generateTempName$49:>
new  <>

345:
old  <	; Parameter 77 signedint status>
new  < tmpfile$6:>

346:
old  <	mov eax, [rbp + 36]>
new  <	; GetReturnValue Â£temporary939>

347:
old  <	mov [rbp + 77], eax>
new  <>

348:
old  <>
new  < tmpfile$7:>

349:
old  < @2597$generateTempName$50:>
new  <	; Equal 20 Â£temporary939 0>

350:
old  <	; Call 41 generateTempName 0>
new  <	cmp rbx, 0>

351:
old  <	mov qword [rbp + 41], @2597$generateTempName$51>
new  <	je tmpfile$20>

352:
old  <	mov [rbp + 49], rbp>
new  <>

353:
old  <	add rbp, 41>
new  < tmpfile$8:>

354:
old  <	jmp @2597$generateTempName>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

356:
old  < @2597$generateTempName$51:>
new  < tmpfile$9:>

357:
old  <	; PostCall 41>
new  <	; Parameter 60 pointer name>

358:
old  <>
new  <	mov [rbp + 60], rbp>

359:
old  < @2597$generateTempName$52:>
new  <	add qword [rbp + 60], 32>

360:
old  <	; GetReturnValue Â£temporary950>
new  <>

361:
old  <>
new  < tmpfile$10:>

362:
old  < @2597$generateTempName$53:>
new  <	; Parameter 68 pointer "w">

363:
old  <	; Assign result Â£temporary950>
new  <	mov qword [rbp + 68], string_w#>

364:
old  <	mov [rbp + 41], rbx>
new  <>

365:
old  <>
new  < tmpfile$11:>

366:
old  < @2597$generateTempName$54:>
new  <	; Call 36 fopen 0>

367:
old  <	; Equal 56 result 0>
new  <	mov qword [rbp + 36], tmpfile$12>

368:
old  <	cmp qword [rbp + 41], 0>
new  <	mov [rbp + 44], rbp>

369:
old  <	je @2597$generateTempName$56>
new  <	add rbp, 36>

370:
old  <>
new  <	jmp fopen>

371:
old  < @2597$generateTempName$55:>
new  <>

372:
old  <	; Return result>
new  < tmpfile$12:>

373:
old  <	mov rbx, [rbp + 41]>
new  <	; PostCall 36>

374:
old  <	mov rax, [rbp]>
new  <>

375:
old  <	mov rdi, [rbp + 16]>
new  < tmpfile$13:>

376:
old  <	mov rbp, [rbp + 8]>
new  <	; GetReturnValue Â£temporary940>

377:
old  <	jmp rax>
new  <>

378:
old  <>
new  < tmpfile$14:>

379:
old  < @2597$generateTempName$56:>
new  <	; Assign stream Â£temporary940>

380:
old  <	; BinaryAdd c c 1>
new  <	mov [rbp + 24], rbx>

381:
old  <	inc byte [rbp + 40]>
new  <>

382:
old  <>
new  < tmpfile$15:>

383:
old  < @2597$generateTempName$57:>
new  <	; Equal 20 stream 0>

384:
old  <	; Goto 2>
new  <	cmp qword [rbp + 24], 0>

385:
old  <	jmp @2597$generateTempName$2>
new  <	je tmpfile$20>

387:
old  < @2597$generateTempName$58:>
new  < tmpfile$16:>

388:
old  <	; Return 0>
new  <	; Dereference Â£temporary944 -> stream stream 0>

389:
old  <	mov rbx, 0>
new  <	mov rsi, [rbp + 24]>

390:
old  <	mov rax, [rbp]>
new  <>

391:
old  <	mov rdi, [rbp + 16]>
new  < tmpfile$17:>

392:
old  <	mov rbp, [rbp + 8]>
new  <	; Assign Â£temporary944 -> stream 1>

393:
old  <	jmp rax>
new  <	mov dword [rsi + 37], 1>

395:
old  < @2597$generateTempName$59:>
new  < tmpfile$18:>

396:
old  <	; FunctionEnd generateTempName>
new  <	; SetReturnValue>

398:
old  <section .data>
new  < tmpfile$19:>

399:
old  <>
new  <	; Return stream>

400:
old  <string_w#:>
new  <	mov rbx, [rbp + 24]>

401:
old  <	; Initializer String w>
new  <	mov rax, [rbp]>

402:
old  <	db "w", 0>
new  <	mov rdi, [rbp + 16]>

403:
old  <>
new  <	mov rbp, [rbp + 8]>

404:
old  <section .text>
new  <	jmp rax>

406:
old  < tmpfile:>
new  < tmpfile$20:>

407:
old  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; SetReturnValue>

409:
old  < tmpfile$1:>
new  < tmpfile$21:>

410:
old  <	; Parameter 60 pointer name>
new  <	; Return 0>

411:
old  <	mov [rbp + 60], rbp>
new  <	mov rbx, 0>

412:
old  <	add qword [rbp + 60], 32>
new  <	mov rax, [rbp]>

413:
old  <>
new  <	mov rdi, [rbp + 16]>

414:
old  < tmpfile$2:>
new  <	mov rbp, [rbp + 8]>

415:
old  <	; Parameter 68 signedint 0>
new  <	jmp rax>

416:
old  <	mov dword [rbp + 68], 0>
new  <>

417:
old  <>
new  < tmpfile$22:>

418:
old  < tmpfile$3:>
new  <	; FunctionEnd tmpfile>

419:
old  <	; Parameter 72 signedint 0>
new  <>

420:
old  <	mov dword [rbp + 72], 0>
new  <section .text>

422:
old  < tmpfile$4:>
new  < tmpnam:>

423:
old  <	; Call 36 generateTempName 0>
new  <	; SignedGreaterThanEqual 10 g_tempSize 16>

424:
old  <	mov qword [rbp + 36], tmpfile$5>
new  <	cmp dword [@2587$g_tempSize], 16>

425:
old  <	mov [rbp + 44], rbp>
new  <	jge tmpnam$10>

426:
old  <	add rbp, 36>
new  <>

427:
old  <	jmp @2597$generateTempName>
new  < tmpnam$1:>

428:
old  <>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

429:
old  < tmpfile$5:>
new  <>

430:
old  <	; PostCall 36>
new  < tmpnam$2:>

431:
old  <>
new  <	; Parameter 56 pointer name>

432:
old  < tmpfile$6:>
new  <	mov rax, [rbp + 24]>

433:
old  <	; GetReturnValue Â£temporary952>
new  <	mov [rbp + 56], rax>

435:
old  < tmpfile$7:>
new  < tmpnam$3:>

436:
old  <	; Equal 19 Â£temporary952 0>
new  <	; Parameter 64 signedint 0>

437:
old  <	cmp rbx, 0>
new  <	mov dword [rbp + 64], 0>

438:
old  <	je tmpfile$19>
new  <>

439:
old  <>
new  < tmpnam$4:>

440:
old  < tmpfile$8:>
new  <	; Parameter 68 signedint 1>

441:
old  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov dword [rbp + 68], 1>

443:
old  < tmpfile$9:>
new  < tmpnam$5:>

444:
old  <	; Parameter 60 pointer name>
new  <	; Call 32 generateTempName 0>

445:
old  <	mov [rbp + 60], rbp>
new  <	mov qword [rbp + 32], tmpnam$6>

446:
old  <	add qword [rbp + 60], 32>
new  <	mov [rbp + 40], rbp>

447:
old  <>
new  <	add rbp, 32>

448:
old  < tmpfile$10:>
new  <	jmp @2596$generateTempName>

449:
old  <	; Parameter 68 pointer "w">
new  <>

450:
old  <	mov qword [rbp + 68], string_w#>
new  < tmpnam$6:>

451:
old  <>
new  <	; PostCall 32>

452:
old  < tmpfile$11:>
new  <>

453:
old  <	; Call 36 fopen 0>
new  < tmpnam$7:>

454:
old  <	mov qword [rbp + 36], tmpfile$12>
new  <	; GetReturnValue Â£temporary946>

455:
old  <	mov [rbp + 44], rbp>
new  <>

456:
old  <	add rbp, 36>
new  < tmpnam$8:>

457:
old  <	jmp fopen>
new  <	; SetReturnValue>

459:
old  < tmpfile$12:>
new  < tmpnam$9:>

460:
old  <	; PostCall 36>
new  <	; Return Â£temporary946>

461:
old  <>
new  <	mov rax, [rbp]>

462:
old  < tmpfile$13:>
new  <	mov rdi, [rbp + 16]>

463:
old  <	; GetReturnValue Â£temporary953>
new  <	mov rbp, [rbp + 8]>

464:
old  <>
new  <	jmp rax>

465:
old  < tmpfile$14:>
new  <>

466:
old  <	; Assign stream Â£temporary953>
new  < tmpnam$10:>

467:
old  <	mov [rbp + 24], rbx>
new  <	; SetReturnValue>

469:
old  < tmpfile$15:>
new  < tmpnam$11:>

470:
old  <	; Equal 19 stream 0>
new  <	; Return 0>

471:
old  <	cmp qword [rbp + 24], 0>
new  <	mov rbx, 0>

472:
old  <	je tmpfile$19>
new  <	mov rax, [rbp]>

473:
old  <>
new  <	mov rdi, [rbp + 16]>

474:
old  < tmpfile$16:>
new  <	mov rbp, [rbp + 8]>

475:
old  <	; Dereference Â£temporary957 -> stream stream 0>
new  <	jmp rax>

476:
old  <	mov rsi, [rbp + 24]>
new  <>

477:
old  <>
new  < tmpnam$12:>

478:
old  < tmpfile$17:>
new  <	; FunctionEnd tmpnam>

Scanf.asm
69:
old  <	; Case 20 g_inStatus 1>
new  <	; Case 21 g_inStatus 1>

71:
old  <	je scanChar$20>
new  <	je scanChar$21>

77:
old  <	; Goto 28>
new  <	; Goto 30>

78:
old  <	jmp scanChar$28>
new  <	jmp scanChar$30>

81:
old  <	; IntegralToIntegral Â£temporary960 g_inDevice>
new  <	; IntegralToIntegral Â£temporary947 g_inDevice>

85:
old  <	; Assign stream Â£temporary960>
new  <	; Assign stream Â£temporary947>

89:
old  <	; Dereference Â£temporary961 -> stream stream 0>
new  <	; Dereference Â£temporary948 -> stream stream 0>

93:
old  <	; Assign handle Â£temporary961 -> stream>
new  <	; Assign handle Â£temporary948 -> stream>

102:
old  <	; Dereference Â£temporary964 -> stream stream 0>
new  <	; Dereference Â£temporary951 -> stream stream 0>

106:
old  <	; IntegralToIntegral Â£temporary965 Â£temporary964 -> stream>
new  <	; IntegralToIntegral Â£temporary952 Â£temporary951 -> stream>

112:
old  <	; AssignRegister rdi Â£temporary965>
new  <	; AssignRegister rdi Â£temporary952>

115:
old  <	; Address Â£temporary967 c>
new  <	; Address Â£temporary954 c>

120:
old  <	; IntegralToIntegral Â£temporary968 Â£temporary967>
new  <	; IntegralToIntegral Â£temporary955 Â£temporary954>

123:
old  <	; AssignRegister rsi Â£temporary968>
new  <	; AssignRegister rsi Â£temporary955>

138:
old  <	; Return c>
new  <	; SetReturnValue>

139:
old  <	mov bl, [rbp + 24]>
new  <>

140:
old  <	mov rax, [rbp]>
new  < scanChar$20:>

141:
old  <	mov rdi, [rbp + 16]>
new  <	; Return c>

142:
old  <	mov rbp, [rbp + 8]>
new  <	mov bl, [rbp + 24]>

143:
old  <	jmp rax>
new  <	mov rax, [rbp]>

144:
old  <>
new  <	mov rdi, [rbp + 16]>

145:
old  < scanChar$20:>
new  <	mov rbp, [rbp + 8]>

146:
old  <	; IntegralToIntegral Â£temporary971 g_inDevice>
new  <	jmp rax>

147:
old  <	mov rax, [g_inDevice]>
new  <>

148:
old  <>
new  < scanChar$21:>

149:
old  < scanChar$21:>
new  <	; IntegralToIntegral Â£temporary958 g_inDevice>

150:
old  <	; Assign inString Â£temporary971>
new  <	mov rax, [g_inDevice]>

151:
old  <	mov [rbp + 37], rax>
new  <>

152:
old  <>
new  < scanChar$22:>

153:
old  < scanChar$22:>
new  <	; Assign inString Â£temporary958>

154:
old  <	; Assign Â£temporary972 g_inChars>
new  <	mov [rbp + 37], rax>

155:
old  <	mov eax, [g_inChars]>
new  <>

156:
old  <>
new  < scanChar$23:>

157:
old  < scanChar$23:>
new  <	; Assign Â£temporary959 g_inChars>

158:
old  <	; BinaryAdd g_inChars g_inChars 1>
new  <	mov eax, [g_inChars]>

159:
old  <	inc dword [g_inChars]>
new  <>

160:
old  <>
new  < scanChar$24:>

161:
old  < scanChar$24:>
new  <	; BinaryAdd g_inChars g_inChars 1>

162:
old  <	; IntegralToIntegral Â£temporary974 Â£temporary972>
new  <	inc dword [g_inChars]>

163:
old  <	mov rbx, 4294967295>
new  <>

164:
old  <	and rax, rbx>
new  < scanChar$25:>

165:
old  <>
new  <	; IntegralToIntegral Â£temporary961 Â£temporary959>

166:
old  < scanChar$25:>
new  <	mov rbx, 4294967295>

167:
old  <	; BinaryAdd Â£temporary976 inString Â£temporary974>
new  <	and rax, rbx>

168:
old  <	mov rsi, [rbp + 37]>
new  <>

169:
old  <	add rsi, rax>
new  < scanChar$26:>

170:
old  <>
new  <	; BinaryAdd Â£temporary963 inString Â£temporary961>

171:
old  < scanChar$26:>
new  <	mov rsi, [rbp + 37]>

172:
old  <	; Dereference Â£temporary973 -> Â£temporary976 Â£temporary976 0>
new  <	add rsi, rax>

175:
old  <	; Return Â£temporary973 -> Â£temporary976>
new  <	; Dereference Â£temporary960 -> Â£temporary963 Â£temporary963 0>

176:
old  <	mov bl, [rsi]>
new  <>

177:
old  <	mov rax, [rbp]>
new  < scanChar$28:>

178:
old  <	mov rdi, [rbp + 16]>
new  <	; SetReturnValue>

179:
old  <	mov rbp, [rbp + 8]>
new  <>

180:
old  <	jmp rax>
new  < scanChar$29:>

181:
old  <>
new  <	; Return Â£temporary960 -> Â£temporary963>

182:
old  < scanChar$28:>
new  <	mov bl, [rsi]>

183:
old  <	; Return 0>
new  <	mov rax, [rbp]>

184:
old  <	mov bl, 0>
new  <	mov rdi, [rbp + 16]>

185:
old  <	mov rax, [rbp]>
new  <	mov rbp, [rbp + 8]>

186:
old  <	mov rdi, [rbp + 16]>
new  <	jmp rax>

187:
old  <	mov rbp, [rbp + 8]>
new  <>

188:
old  <	jmp rax>
new  < scanChar$30:>

189:
old  <>
new  <	; SetReturnValue>

190:
old  < scanChar$29:>
new  <>

191:
old  <	; FunctionEnd scanChar>
new  < scanChar$31:>

192:
old  <>
new  <	; Return 0>

193:
old  <section .text>
new  <	mov bl, 0>

194:
old  <>
new  <	mov rax, [rbp]>

195:
old  < unscanChar:>
new  <	mov rdi, [rbp + 16]>

196:
old  <	; Case 4 g_inStatus 0>
new  <	mov rbp, [rbp + 8]>

197:
old  <	mov eax, [g_inStatus]>
new  <	jmp rax>

198:
old  <	cmp eax, 0>
new  <>

199:
old  <	je unscanChar$4>
new  < scanChar$32:>

200:
old  <>
new  <	; FunctionEnd scanChar>

201:
old  < unscanChar$1:>
new  <>

202:
old  <	; Case 6 g_inStatus 1>
new  <section .text>

203:
old  <	cmp eax, 1>
new  <>

204:
old  <	je unscanChar$6>
new  < unscanChar:>

205:
old  <>
new  <	; Case 4 g_inStatus 0>

206:
old  < unscanChar$2:>
new  <	mov eax, [g_inStatus]>

207:
old  <	; CaseEnd g_inStatus>
new  <	cmp eax, 0>

208:
old  <>
new  <	je unscanChar$4>

209:
old  < unscanChar$3:>
new  <>

210:
old  <	; Goto 7>
new  < unscanChar$1:>

211:
old  <	jmp unscanChar$7>
new  <	; Case 6 g_inStatus 1>

212:
old  <>
new  <	cmp eax, 1>

213:
old  < unscanChar$4:>
new  <	je unscanChar$6>

214:
old  <	; BinarySubtract g_inChars g_inChars 1>
new  <>

215:
old  <	dec dword [g_inChars]>
new  < unscanChar$2:>

216:
old  <>
new  <	; CaseEnd g_inStatus>

217:
old  < unscanChar$5:>
new  <>

218:
old  <	; Goto 7>
new  < unscanChar$3:>

219:
old  <	jmp unscanChar$7>
new  <	; Goto 7>

220:
old  <>
new  <	jmp unscanChar$7>

221:
old  < unscanChar$6:>
new  <>

222:
old  <	; BinarySubtract g_inChars g_inChars 1>
new  < unscanChar$4:>

223:
old  <	dec dword [g_inChars]>
new  <	; BinarySubtract g_inChars g_inChars 1>

224:
old  <>
new  <	dec dword [g_inChars]>

225:
old  < unscanChar$7:>
new  <>

226:
old  <	; Return>
new  < unscanChar$5:>

227:
old  <	mov rax, [rbp]>
new  <	; Goto 7>

228:
old  <	mov rdi, [rbp + 16]>
new  <	jmp unscanChar$7>

229:
old  <	mov rbp, [rbp + 8]>
new  <>

230:
old  <	jmp rax>
new  < unscanChar$6:>

231:
old  <>
new  <	; BinarySubtract g_inChars g_inChars 1>

232:
old  < unscanChar$8:>
new  <	dec dword [g_inChars]>

233:
old  <	; FunctionEnd unscanChar>
new  <>

234:
old  <>
new  < unscanChar$7:>

235:
old  <section .text>
new  <	; Return>

236:
old  <>
new  <	mov rax, [rbp]>

237:
old  < scanPattern:>
new  <	mov rdi, [rbp + 16]>

238:
old  <	; Assign index 0>
new  <	mov rbp, [rbp + 8]>

239:
old  <	mov dword [rbp + 44], 0>
new  <	jmp rax>

241:
old  < scanPattern$1:>
new  < unscanChar$8:>

242:
old  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; FunctionEnd unscanChar>

244:
old  < scanPattern$2:>
new  <section .text>

245:
old  <	; Call 48 scanChar 0>
new  <>

246:
old  <	mov qword [rbp + 48], scanPattern$3>
new  < scanPattern:>

247:
old  <	mov [rbp + 56], rbp>
new  <	; Assign index 0>

248:
old  <	add rbp, 48>
new  <	mov dword [rbp + 44], 0>

249:
old  <	jmp scanChar>
new  <>

250:
old  <>
new  < scanPattern$1:>

251:
old  < scanPattern$3:>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

252:
old  <	; PostCall 48>
new  <>

253:
old  <>
new  < scanPattern$2:>

254:
old  < scanPattern$4:>
new  <	; Call 48 scanChar 0>

255:
old  <	; GetReturnValue Â£temporary980>
new  <	mov qword [rbp + 48], scanPattern$3>

256:
old  <>
new  <	mov [rbp + 56], rbp>

257:
old  < scanPattern$5:>
new  <	add rbp, 48>

258:
old  <	; Assign input Â£temporary980>
new  <	jmp scanChar>

259:
old  <	mov [rbp + 48], bl>
new  <>

260:
old  <>
new  < scanPattern$3:>

261:
old  < scanPattern$6:>
new  <	; PostCall 48>

262:
old  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

263:
old  <>
new  < scanPattern$4:>

264:
old  < scanPattern$7:>
new  <	; GetReturnValue Â£temporary967>

265:
old  <	; IntegralToIntegral Â£temporary981 input>
new  <>

266:
old  <	mov al, [rbp + 48]>
new  < scanPattern$5:>

267:
old  <	and eax, 255>
new  <	; Assign input Â£temporary967>

268:
old  <	cmp al, 0>
new  <	mov [rbp + 48], bl>

269:
old  <	jge scanPattern$8>
new  <>

270:
old  <	neg al>
new  < scanPattern$6:>

271:
old  <	neg eax>
new  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

273:
old  < scanPattern$8:>
new  < scanPattern$7:>

274:
old  <	; Parameter 73 signedint Â£temporary981>
new  <	; IntegralToIntegral Â£temporary968 input>

275:
old  <	mov [rbp + 73], eax>
new  <	mov al, [rbp + 48]>

276:
old  <>
new  <	and eax, 255>

277:
old  < scanPattern$9:>
new  <	cmp al, 0>

278:
old  <	; Call 49 isspace 0>
new  <	jge scanPattern$8>

279:
old  <	mov qword [rbp + 49], scanPattern$10>
new  <	neg al>

280:
old  <	mov [rbp + 57], rbp>
new  <	neg eax>

281:
old  <	add rbp, 49>
new  <>

282:
old  <	jmp isspace>
new  < scanPattern$8:>

283:
old  <>
new  <	; Parameter 73 signedint Â£temporary968>

284:
old  < scanPattern$10:>
new  <	mov [rbp + 73], eax>

285:
old  <	; PostCall 49>
new  <>

286:
old  <>
new  < scanPattern$9:>

287:
old  < scanPattern$11:>
new  <	; Call 49 isspace 0>

288:
old  <	; GetReturnValue Â£temporary982>
new  <	mov qword [rbp + 49], scanPattern$10>

289:
old  <>
new  <	mov [rbp + 57], rbp>

290:
old  < scanPattern$12:>
new  <	add rbp, 49>

291:
old  <	; Equal 19 Â£temporary982 0>
new  <	jmp isspace>

292:
old  <	cmp ebx, 0>
new  <>

293:
old  <	je scanPattern$19>
new  < scanPattern$10:>

294:
old  <>
new  <	; PostCall 49>

295:
old  < scanPattern$13:>
new  <>

296:
old  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < scanPattern$11:>

297:
old  <>
new  <	; GetReturnValue Â£temporary969>

298:
old  < scanPattern$14:>
new  <>

299:
old  <	; Call 49 scanChar 0>
new  < scanPattern$12:>

300:
old  <	mov qword [rbp + 49], scanPattern$15>
new  <	; Equal 19 Â£temporary969 0>

301:
old  <	mov [rbp + 57], rbp>
new  <	cmp ebx, 0>

302:
old  <	add rbp, 49>
new  <	je scanPattern$19>

303:
old  <	jmp scanChar>
new  <>

304:
old  <>
new  < scanPattern$13:>

305:
old  < scanPattern$15:>
new  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

306:
old  <	; PostCall 49>
new  <>

307:
old  <>
new  < scanPattern$14:>

308:
old  < scanPattern$16:>
new  <	; Call 49 scanChar 0>

309:
old  <	; GetReturnValue Â£temporary983>
new  <	mov qword [rbp + 49], scanPattern$15>

310:
old  <>
new  <	mov [rbp + 57], rbp>

311:
old  < scanPattern$17:>
new  <	add rbp, 49>

312:
old  <	; Assign input Â£temporary983>
new  <	jmp scanChar>

313:
old  <	mov [rbp + 48], bl>
new  <>

314:
old  <>
new  < scanPattern$15:>

315:
old  < scanPattern$18:>
new  <	; PostCall 49>

316:
old  <	; Goto 6>
new  <>

317:
old  <	jmp scanPattern$6>
new  < scanPattern$16:>

318:
old  <>
new  <	; GetReturnValue Â£temporary970>

319:
old  < scanPattern$19:>
new  <>

320:
old  <	; Equal 55 string 0>
new  < scanPattern$17:>

321:
old  <	cmp qword [rbp + 24], 0>
new  <	; Assign input Â£temporary970>

322:
old  <	je scanPattern$55>
new  <	mov [rbp + 48], bl>

324:
old  < scanPattern$20:>
new  < scanPattern$18:>

325:
old  <	; NotEqual 29 not 0>
new  <	; Goto 6>

326:
old  <	cmp dword [rbp + 40], 0>
new  <	jmp scanPattern$6>

327:
old  <	jne scanPattern$29>
new  <>

328:
old  <>
new  < scanPattern$19:>

329:
old  < scanPattern$21:>
new  <	; Equal 55 string 0>

330:
old  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	cmp qword [rbp + 24], 0>

331:
old  <>
new  <	je scanPattern$55>

332:
old  < scanPattern$22:>
new  <>

333:
old  <	; Parameter 73 pointer pattern>
new  < scanPattern$20:>

334:
old  <	mov rax, [rbp + 32]>
new  <	; NotEqual 29 not 0>

335:
old  <	mov [rbp + 73], rax>
new  <	cmp dword [rbp + 40], 0>

336:
old  <>
new  <	jne scanPattern$29>

337:
old  < scanPattern$23:>
new  <>

338:
old  <	; IntegralToIntegral Â£temporary988 input>
new  < scanPattern$21:>

339:
old  <	mov al, [rbp + 48]>
new  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

340:
old  <	and eax, 255>
new  <>

341:
old  <	cmp al, 0>
new  < scanPattern$22:>

342:
old  <	jge scanPattern$24>
new  <	; Parameter 73 pointer pattern>

343:
old  <	neg al>
new  <	mov rax, [rbp + 32]>

344:
old  <	neg eax>
new  <	mov [rbp + 73], rax>

346:
old  < scanPattern$24:>
new  < scanPattern$23:>

347:
old  <	; Parameter 81 signedint Â£temporary988>
new  <	; IntegralToIntegral Â£temporary975 input>

348:
old  <	mov [rbp + 81], eax>
new  <	mov al, [rbp + 48]>

349:
old  <>
new  <	and eax, 255>

350:
old  < scanPattern$25:>
new  <	cmp al, 0>

351:
old  <	; Call 49 strchr 0>
new  <	jge scanPattern$24>

352:
old  <	mov qword [rbp + 49], scanPattern$26>
new  <	neg al>

353:
old  <	mov [rbp + 57], rbp>
new  <	neg eax>

354:
old  <	add rbp, 49>
new  <>

355:
old  <	jmp strchr>
new  < scanPattern$24:>

356:
old  <>
new  <	; Parameter 81 signedint Â£temporary975>

357:
old  < scanPattern$26:>
new  <	mov [rbp + 81], eax>

358:
old  <	; PostCall 49>
new  <>

359:
old  <>
new  < scanPattern$25:>

360:
old  < scanPattern$27:>
new  <	; Call 49 strchr 0>

361:
old  <	; GetReturnValue Â£temporary989>
new  <	mov qword [rbp + 49], scanPattern$26>

362:
old  <>
new  <	mov [rbp + 57], rbp>

363:
old  < scanPattern$28:>
new  <	add rbp, 49>

364:
old  <	; NotEqual 38 Â£temporary989 0>
new  <	jmp strchr>

365:
old  <	cmp rbx, 0>
new  <>

366:
old  <	jne scanPattern$38>
new  < scanPattern$26:>

367:
old  <>
new  <	; PostCall 49>

368:
old  < scanPattern$29:>
new  <>

369:
old  <	; Equal 50 not 0>
new  < scanPattern$27:>

370:
old  <	cmp dword [rbp + 40], 0>
new  <	; GetReturnValue Â£temporary976>

371:
old  <	je scanPattern$50>
new  <>

372:
old  <>
new  < scanPattern$28:>

373:
old  < scanPattern$30:>
new  <	; NotEqual 38 Â£temporary976 0>

374:
old  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	cmp rbx, 0>

375:
old  <>
new  <	jne scanPattern$38>

376:
old  < scanPattern$31:>
new  <>

377:
old  <	; Parameter 73 pointer pattern>
new  < scanPattern$29:>

378:
old  <	mov rax, [rbp + 32]>
new  <	; Equal 50 not 0>

379:
old  <	mov [rbp + 73], rax>
new  <	cmp dword [rbp + 40], 0>

380:
old  <>
new  <	je scanPattern$50>

381:
old  < scanPattern$32:>
new  <>

382:
old  <	; IntegralToIntegral Â£temporary992 input>
new  < scanPattern$30:>

383:
old  <	mov al, [rbp + 48]>
new  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

384:
old  <	and eax, 255>
new  <>

385:
old  <	cmp al, 0>
new  < scanPattern$31:>

386:
old  <	jge scanPattern$33>
new  <	; Parameter 73 pointer pattern>

387:
old  <	neg al>
new  <	mov rax, [rbp + 32]>

388:
old  <	neg eax>
new  <	mov [rbp + 73], rax>

390:
old  < scanPattern$33:>
new  < scanPattern$32:>

391:
old  <	; Parameter 81 signedint Â£temporary992>
new  <	; IntegralToIntegral Â£temporary979 input>

392:
old  <	mov [rbp + 81], eax>
new  <	mov al, [rbp + 48]>

393:
old  <>
new  <	and eax, 255>

394:
old  < scanPattern$34:>
new  <	cmp al, 0>

395:
old  <	; Call 49 strchr 0>
new  <	jge scanPattern$33>

396:
old  <	mov qword [rbp + 49], scanPattern$35>
new  <	neg al>

397:
old  <	mov [rbp + 57], rbp>
new  <	neg eax>

398:
old  <	add rbp, 49>
new  <>

399:
old  <	jmp strchr>
new  < scanPattern$33:>

400:
old  <>
new  <	; Parameter 81 signedint Â£temporary979>

401:
old  < scanPattern$35:>
new  <	mov [rbp + 81], eax>

402:
old  <	; PostCall 49>
new  <>

403:
old  <>
new  < scanPattern$34:>

404:
old  < scanPattern$36:>
new  <	; Call 49 strchr 0>

405:
old  <	; GetReturnValue Â£temporary993>
new  <	mov qword [rbp + 49], scanPattern$35>

406:
old  <>
new  <	mov [rbp + 57], rbp>

407:
old  < scanPattern$37:>
new  <	add rbp, 49>

408:
old  <	; NotEqual 50 Â£temporary993 0>
new  <	jmp strchr>

409:
old  <	cmp rbx, 0>
new  <>

410:
old  <	jne scanPattern$50>
new  < scanPattern$35:>

411:
old  <>
new  <	; PostCall 49>

412:
old  < scanPattern$38:>
new  <>

413:
old  <	; Assign Â£temporary999 index>
new  < scanPattern$36:>

414:
old  <	mov eax, [rbp + 44]>
new  <	; GetReturnValue Â£temporary980>

416:
old  < scanPattern$39:>
new  < scanPattern$37:>

417:
old  <	; BinaryAdd index index 1>
new  <	; NotEqual 50 Â£temporary980 0>

418:
old  <	inc dword [rbp + 44]>
new  <	cmp rbx, 0>

419:
old  <>
new  <	jne scanPattern$50>

420:
old  < scanPattern$40:>
new  <>

421:
old  <	; IntegralToIntegral Â£temporary1001 Â£temporary999>
new  < scanPattern$38:>

422:
old  <	mov rbx, 4294967295>
new  <	; Assign Â£temporary986 index>

423:
old  <	and rax, rbx>
new  <	mov eax, [rbp + 44]>

425:
old  < scanPattern$41:>
new  < scanPattern$39:>

426:
old  <	; BinaryAdd Â£temporary1003 string Â£temporary1001>
new  <	; BinaryAdd index index 1>

427:
old  <	mov rsi, [rbp + 24]>
new  <	inc dword [rbp + 44]>

428:
old  <	add rsi, rax>
new  <>

429:
old  <>
new  < scanPattern$40:>

430:
old  < scanPattern$42:>
new  <	; IntegralToIntegral Â£temporary988 Â£temporary986>

431:
old  <	; Dereference Â£temporary1000 -> Â£temporary1003 Â£temporary1003 0>
new  <	mov rbx, 4294967295>

432:
old  <>
new  <	and rax, rbx>

433:
old  < scanPattern$43:>
new  <>

434:
old  <	; Assign Â£temporary1000 -> Â£temporary1003 input>
new  < scanPattern$41:>

435:
old  <	mov al, [rbp + 48]>
new  <	; BinaryAdd Â£temporary990 string Â£temporary988>

436:
old  <	mov [rsi], al>
new  <	mov rsi, [rbp + 24]>

437:
old  <>
new  <	add rsi, rax>

438:
old  < scanPattern$44:>
new  <>

439:
old  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < scanPattern$42:>

440:
old  <>
new  <	; Dereference Â£temporary987 -> Â£temporary990 Â£temporary990 0>

441:
old  < scanPattern$45:>
new  <>

442:
old  <	; Call 49 scanChar 0>
new  < scanPattern$43:>

443:
old  <	mov qword [rbp + 49], scanPattern$46>
new  <	; Assign Â£temporary987 -> Â£temporary990 input>

444:
old  <	mov [rbp + 57], rbp>
new  <	mov al, [rbp + 48]>

445:
old  <	add rbp, 49>
new  <	mov [rsi], al>

446:
old  <	jmp scanChar>
new  <>

447:
old  <>
new  < scanPattern$44:>

448:
old  < scanPattern$46:>
new  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

449:
old  <	; PostCall 49>
new  <>

450:
old  <>
new  < scanPattern$45:>

451:
old  < scanPattern$47:>
new  <	; Call 49 scanChar 0>

452:
old  <	; GetReturnValue Â£temporary1004>
new  <	mov qword [rbp + 49], scanPattern$46>

453:
old  <>
new  <	mov [rbp + 57], rbp>

454:
old  < scanPattern$48:>
new  <	add rbp, 49>

455:
old  <	; Assign input Â£temporary1004>
new  <	jmp scanChar>

456:
old  <	mov [rbp + 48], bl>
new  <>

457:
old  <>
new  < scanPattern$46:>

458:
old  < scanPattern$49:>
new  <	; PostCall 49>

459:
old  <	; Goto 20>
new  <>

460:
old  <	jmp scanPattern$20>
new  < scanPattern$47:>

461:
old  <>
new  <	; GetReturnValue Â£temporary991>

462:
old  < scanPattern$50:>
new  <>

463:
old  <	; IntegralToIntegral Â£temporary1006 index>
new  < scanPattern$48:>

464:
old  <	mov eax, [rbp + 44]>
new  <	; Assign input Â£temporary991>

465:
old  <	mov rbx, 4294967295>
new  <	mov [rbp + 48], bl>

466:
old  <	and rax, rbx>
new  <>

467:
old  <>
new  < scanPattern$49:>

468:
old  < scanPattern$51:>
new  <	; Goto 20>

469:
old  <	; BinaryAdd Â£temporary1008 string Â£temporary1006>
new  <	jmp scanPattern$20>

470:
old  <	mov rsi, [rbp + 24]>
new  <>

471:
old  <	add rsi, rax>
new  < scanPattern$50:>

472:
old  <>
new  <	; IntegralToIntegral Â£temporary993 index>

473:
old  < scanPattern$52:>
new  <	mov eax, [rbp + 44]>

474:
old  <	; Dereference Â£temporary1005 -> Â£temporary1008 Â£temporary1008 0>
new  <	mov rbx, 4294967295>

475:
old  <>
new  <	and rax, rbx>

476:
old  < scanPattern$53:>
new  <>

477:
old  <	; Assign Â£temporary1005 -> Â£temporary1008 0>
new  < scanPattern$51:>

478:
old  <	mov byte [rsi], 0>
new  <	; BinaryAdd Â£temporary995 string Â£temporary993>

479:
old  <>
new  <	mov rsi, [rbp + 24]>

480:
old  < scanPattern$54:>
new  <	add rsi, rax>

481:
old  <	; Goto 79>
new  <>

482:
old  <	jmp scanPattern$79>
new  < scanPattern$52:>

483:
old  <>
new  <	; Dereference Â£temporary992 -> Â£temporary995 Â£temporary995 0>

484:
old  < scanPattern$55:>
new  <>

485:
old  <	; NotEqual 64 not 0>
new  < scanPattern$53:>

486:
old  <	cmp dword [rbp + 40], 0>
new  <	; Assign Â£temporary992 -> Â£temporary995 0>

487:
old  <	jne scanPattern$64>
new  <	mov byte [rsi], 0>

489:
old  < scanPattern$56:>
new  < scanPattern$54:>

490:
old  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Goto 79>

491:
old  <>
new  <	jmp scanPattern$79>

492:
old  < scanPattern$57:>
new  <>

493:
old  <	; Parameter 73 pointer pattern>
new  < scanPattern$55:>

494:
old  <	mov rax, [rbp + 32]>
new  <	; NotEqual 64 not 0>

495:
old  <	mov [rbp + 73], rax>
new  <	cmp dword [rbp + 40], 0>

496:
old  <>
new  <	jne scanPattern$64>

497:
old  < scanPattern$58:>
new  <>

498:
old  <	; IntegralToIntegral Â£temporary1011 input>
new  < scanPattern$56:>

499:
old  <	mov al, [rbp + 48]>
new  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

500:
old  <	and eax, 255>
new  <>

501:
old  <	cmp al, 0>
new  < scanPattern$57:>

502:
old  <	jge scanPattern$59>
new  <	; Parameter 73 pointer pattern>

503:
old  <	neg al>
new  <	mov rax, [rbp + 32]>

504:
old  <	neg eax>
new  <	mov [rbp + 73], rax>

506:
old  < scanPattern$59:>
new  < scanPattern$58:>

507:
old  <	; Parameter 81 signedint Â£temporary1011>
new  <	; IntegralToIntegral Â£temporary998 input>

508:
old  <	mov [rbp + 81], eax>
new  <	mov al, [rbp + 48]>

509:
old  <>
new  <	and eax, 255>

510:
old  < scanPattern$60:>
new  <	cmp al, 0>

511:
old  <	; Call 49 strchr 0>
new  <	jge scanPattern$59>

512:
old  <	mov qword [rbp + 49], scanPattern$61>
new  <	neg al>

513:
old  <	mov [rbp + 57], rbp>
new  <	neg eax>

514:
old  <	add rbp, 49>
new  <>

515:
old  <	jmp strchr>
new  < scanPattern$59:>

516:
old  <>
new  <	; Parameter 81 signedint Â£temporary998>

517:
old  < scanPattern$61:>
new  <	mov [rbp + 81], eax>

518:
old  <	; PostCall 49>
new  <>

519:
old  <>
new  < scanPattern$60:>

520:
old  < scanPattern$62:>
new  <	; Call 49 strchr 0>

521:
old  <	; GetReturnValue Â£temporary1012>
new  <	mov qword [rbp + 49], scanPattern$61>

522:
old  <>
new  <	mov [rbp + 57], rbp>

523:
old  < scanPattern$63:>
new  <	add rbp, 49>

524:
old  <	; NotEqual 73 Â£temporary1012 0>
new  <	jmp strchr>

525:
old  <	cmp rbx, 0>
new  <>

526:
old  <	jne scanPattern$73>
new  < scanPattern$61:>

527:
old  <>
new  <	; PostCall 49>

528:
old  < scanPattern$64:>
new  <>

529:
old  <	; Equal 79 not 0>
new  < scanPattern$62:>

530:
old  <	cmp dword [rbp + 40], 0>
new  <	; GetReturnValue Â£temporary999>

531:
old  <	je scanPattern$79>
new  <>

532:
old  <>
new  < scanPattern$63:>

533:
old  < scanPattern$65:>
new  <	; NotEqual 73 Â£temporary999 0>

534:
old  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	cmp rbx, 0>

535:
old  <>
new  <	jne scanPattern$73>

536:
old  < scanPattern$66:>
new  <>

537:
old  <	; Parameter 73 pointer pattern>
new  < scanPattern$64:>

538:
old  <	mov rax, [rbp + 32]>
new  <	; Equal 79 not 0>

539:
old  <	mov [rbp + 73], rax>
new  <	cmp dword [rbp + 40], 0>

540:
old  <>
new  <	je scanPattern$79>

541:
old  < scanPattern$67:>
new  <>

542:
old  <	; IntegralToIntegral Â£temporary1015 input>
new  < scanPattern$65:>

543:
old  <	mov al, [rbp + 48]>
new  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

544:
old  <	and eax, 255>
new  <>

545:
old  <	cmp al, 0>
new  < scanPattern$66:>

546:
old  <	jge scanPattern$68>
new  <	; Parameter 73 pointer pattern>

547:
old  <	neg al>
new  <	mov rax, [rbp + 32]>

548:
old  <	neg eax>
new  <	mov [rbp + 73], rax>

550:
old  < scanPattern$68:>
new  < scanPattern$67:>

551:
old  <	; Parameter 81 signedint Â£temporary1015>
new  <	; IntegralToIntegral Â£temporary1002 input>

552:
old  <	mov [rbp + 81], eax>
new  <	mov al, [rbp + 48]>

553:
old  <>
new  <	and eax, 255>

554:
old  < scanPattern$69:>
new  <	cmp al, 0>

555:
old  <	; Call 49 strchr 0>
new  <	jge scanPattern$68>

556:
old  <	mov qword [rbp + 49], scanPattern$70>
new  <	neg al>

557:
old  <	mov [rbp + 57], rbp>
new  <	neg eax>

558:
old  <	add rbp, 49>
new  <>

559:
old  <	jmp strchr>
new  < scanPattern$68:>

560:
old  <>
new  <	; Parameter 81 signedint Â£temporary1002>

561:
old  < scanPattern$70:>
new  <	mov [rbp + 81], eax>

562:
old  <	; PostCall 49>
new  <>

563:
old  <>
new  < scanPattern$69:>

564:
old  < scanPattern$71:>
new  <	; Call 49 strchr 0>

565:
old  <	; GetReturnValue Â£temporary1016>
new  <	mov qword [rbp + 49], scanPattern$70>

566:
old  <>
new  <	mov [rbp + 57], rbp>

567:
old  < scanPattern$72:>
new  <	add rbp, 49>

568:
old  <	; NotEqual 79 Â£temporary1016 0>
new  <	jmp strchr>

569:
old  <	cmp rbx, 0>
new  <>

570:
old  <	jne scanPattern$79>
new  < scanPattern$70:>

571:
old  <>
new  <	; PostCall 49>

572:
old  < scanPattern$73:>
new  <>

573:
old  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < scanPattern$71:>

574:
old  <>
new  <	; GetReturnValue Â£temporary1003>

575:
old  < scanPattern$74:>
new  <>

576:
old  <	; Call 49 scanChar 0>
new  < scanPattern$72:>

577:
old  <	mov qword [rbp + 49], scanPattern$75>
new  <	; NotEqual 79 Â£temporary1003 0>

578:
old  <	mov [rbp + 57], rbp>
new  <	cmp rbx, 0>

579:
old  <	add rbp, 49>
new  <	jne scanPattern$79>

580:
old  <	jmp scanChar>
new  <>

581:
old  <>
new  < scanPattern$73:>

582:
old  < scanPattern$75:>
new  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

583:
old  <	; PostCall 49>
new  <>

584:
old  <>
new  < scanPattern$74:>

585:
old  < scanPattern$76:>
new  <	; Call 49 scanChar 0>

586:
old  <	; GetReturnValue Â£temporary1022>
new  <	mov qword [rbp + 49], scanPattern$75>

587:
old  <>
new  <	mov [rbp + 57], rbp>

588:
old  < scanPattern$77:>
new  <	add rbp, 49>

589:
old  <	; Assign input Â£temporary1022>
new  <	jmp scanChar>

590:
old  <	mov [rbp + 48], bl>
new  <>

591:
old  <>
new  < scanPattern$75:>

592:
old  < scanPattern$78:>
new  <	; PostCall 49>

593:
old  <	; Goto 55>
new  <>

594:
old  <	jmp scanPattern$55>
new  < scanPattern$76:>

595:
old  <>
new  <	; GetReturnValue Â£temporary1009>

596:
old  < scanPattern$79:>
new  <>

597:
old  <	; Return>
new  < scanPattern$77:>

598:
old  <	mov rax, [rbp]>
new  <	; Assign input Â£temporary1009>

599:
old  <	mov rdi, [rbp + 16]>
new  <	mov [rbp + 48], bl>

600:
old  <	mov rbp, [rbp + 8]>
new  <>

601:
old  <	jmp rax>
new  < scanPattern$78:>

602:
old  <>
new  <	; Goto 55>

603:
old  < scanPattern$80:>
new  <	jmp scanPattern$55>

604:
old  <	; FunctionEnd scanPattern>
new  <>

605:
old  <>
new  < scanPattern$79:>

606:
old  <section .text>
new  <	; Return>

607:
old  <>
new  <	mov rax, [rbp]>

608:
old  < scanString:>
new  <	mov rdi, [rbp + 16]>

609:
old  <	; Assign index 0>
new  <	mov rbp, [rbp + 8]>

610:
old  <	mov dword [rbp + 36], 0>
new  <	jmp rax>

612:
old  < scanString$1:>
new  < scanPattern$80:>

613:
old  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; FunctionEnd scanPattern>

615:
old  < scanString$2:>
new  <section .text>

616:
old  <	; Call 40 scanChar 0>
new  <>

617:
old  <	mov qword [rbp + 40], scanString$3>
new  < scanString:>

618:
old  <	mov [rbp + 48], rbp>
new  <	; Assign index 0>

619:
old  <	add rbp, 40>
new  <	mov dword [rbp + 36], 0>

620:
old  <	jmp scanChar>
new  <>

621:
old  <>
new  < scanString$1:>

622:
old  < scanString$3:>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

623:
old  <	; PostCall 40>
new  <>

624:
old  <>
new  < scanString$2:>

625:
old  < scanString$4:>
new  <	; Call 40 scanChar 0>

626:
old  <	; GetReturnValue Â£temporary1023>
new  <	mov qword [rbp + 40], scanString$3>

627:
old  <>
new  <	mov [rbp + 48], rbp>

628:
old  < scanString$5:>
new  <	add rbp, 40>

629:
old  <	; Assign input Â£temporary1023>
new  <	jmp scanChar>

630:
old  <	mov [rbp + 40], bl>
new  <>

631:
old  <>
new  < scanString$3:>

632:
old  < scanString$6:>
new  <	; PostCall 40>

633:
old  <	; Assign found 0>
new  <>

634:
old  <	mov dword [rbp + 41], 0>
new  < scanString$4:>

635:
old  <>
new  <	; GetReturnValue Â£temporary1010>

636:
old  < scanString$7:>
new  <>

637:
old  <	; PreCall 45 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < scanString$5:>

638:
old  <>
new  <	; Assign input Â£temporary1010>

639:
old  < scanString$8:>
new  <	mov [rbp + 40], bl>

640:
old  <	; IntegralToIntegral Â£temporary1024 input>
new  <>

641:
old  <	mov al, [rbp + 40]>
new  < scanString$6:>

642:
old  <	and eax, 255>
new  <	; Assign found 0>

643:
old  <	cmp al, 0>
new  <	mov dword [rbp + 41], 0>

644:
old  <	jge scanString$9>
new  <>

645:
old  <	neg al>
new  < scanString$7:>

646:
old  <	neg eax>
new  <	; PreCall 45 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

648:
old  < scanString$9:>
new  < scanString$8:>

649:
old  <	; Parameter 69 signedint Â£temporary1024>
new  <	; IntegralToIntegral Â£temporary1011 input>

650:
old  <	mov [rbp + 69], eax>
new  <	mov al, [rbp + 40]>

651:
old  <>
new  <	and eax, 255>

652:
old  < scanString$10:>
new  <	cmp al, 0>

653:
old  <	; Call 45 isspace 0>
new  <	jge scanString$9>

654:
old  <	mov qword [rbp + 45], scanString$11>
new  <	neg al>

655:
old  <	mov [rbp + 53], rbp>
new  <	neg eax>

656:
old  <	add rbp, 45>
new  <>

657:
old  <	jmp isspace>
new  < scanString$9:>

658:
old  <>
new  <	; Parameter 69 signedint Â£temporary1011>

659:
old  < scanString$11:>
new  <	mov [rbp + 69], eax>

660:
old  <	; PostCall 45>
new  <>

661:
old  <>
new  < scanString$10:>

662:
old  < scanString$12:>
new  <	; Call 45 isspace 0>

663:
old  <	; GetReturnValue Â£temporary1025>
new  <	mov qword [rbp + 45], scanString$11>

664:
old  <>
new  <	mov [rbp + 53], rbp>

665:
old  < scanString$13:>
new  <	add rbp, 45>

666:
old  <	; Equal 20 Â£temporary1025 0>
new  <	jmp isspace>

667:
old  <	cmp ebx, 0>
new  <>

668:
old  <	je scanString$20>
new  < scanString$11:>

669:
old  <>
new  <	; PostCall 45>

670:
old  < scanString$14:>
new  <>

671:
old  <	; PreCall 45 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < scanString$12:>

672:
old  <>
new  <	; GetReturnValue Â£temporary1012>

673:
old  < scanString$15:>
new  <>

674:
old  <	; Call 45 scanChar 0>
new  < scanString$13:>

675:
old  <	mov qword [rbp + 45], scanString$16>
new  <	; Equal 20 Â£temporary1012 0>

676:
old  <	mov [rbp + 53], rbp>
new  <	cmp ebx, 0>

677:
old  <	add rbp, 45>
new  <	je scanString$20>

678:
old  <	jmp scanChar>
new  <>

679:
old  <>
new  < scanString$14:>

680:
old  < scanString$16:>
new  <	; PreCall 45 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

681:
old  <	; PostCall 45>
new  <>

682:
old  <>
new  < scanString$15:>

683:
old  < scanString$17:>
new  <	; Call 45 scanChar 0>

684:
old  <	; GetReturnValue Â£temporary1026>
new  <	mov qword [rbp + 45], scanString$16>

685:
old  <>
new  <	mov [rbp + 53], rbp>

686:
old  < scanString$18:>
new  <	add rbp, 45>

687:
old  <	; Assign input Â£temporary1026>
new  <	jmp scanChar>

688:
old  <	mov [rbp + 40], bl>
new  <>

689:
old  <>
new  < scanString$16:>

690:
old  < scanString$19:>
new  <	; PostCall 45>

691:
old  <	; Goto 7>
new  <>

692:
old  <	jmp scanString$7>
new  < scanString$17:>

693:
old  <>
new  <	; GetReturnValue Â£temporary1013>

694:
old  < scanString$20:>
new  <>

695:
old  <	; Equal 86 string 0>
new  < scanString$18:>

696:
old  <	cmp qword [rbp + 24], 0>
new  <	; Assign input Â£temporary1013>

697:
old  <	je scanString$86>
new  <	mov [rbp + 40], bl>

699:
old  < scanString$21:>
new  < scanString$19:>

700:
old  <	; NotEqual 52 precision 0>
new  <	; Goto 7>

701:
old  <	cmp dword [rbp + 32], 0>
new  <	jmp scanString$7>

702:
old  <	jne scanString$52>
new  <>

703:
old  <>
new  < scanString$20:>

704:
old  < scanString$22:>
new  <	; Equal 86 string 0>

705:
old  <	; PreCall 45 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	cmp qword [rbp + 24], 0>

706:
old  <>
new  <	je scanString$86>

707:
old  < scanString$23:>
new  <>

708:
old  <	; IntegralToIntegral Â£temporary1030 input>
new  < scanString$21:>

709:
old  <	mov al, [rbp + 40]>
new  <	; NotEqual 52 precision 0>

710:
old  <	and eax, 255>
new  <	cmp dword [rbp + 32], 0>

711:
old  <	cmp al, 0>
new  <	jne scanString$52>

712:
old  <	jge scanString$24>
new  <>

713:
old  <	neg al>
new  < scanString$22:>

714:
old  <	neg eax>
new  <	; PreCall 45 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

716:
old  < scanString$24:>
new  < scanString$23:>

717:
old  <	; Parameter 69 signedint Â£temporary1030>
new  <	; IntegralToIntegral Â£temporary1017 input>

718:
old  <	mov [rbp + 69], eax>
new  <	mov al, [rbp + 40]>

719:
old  <>
new  <	and eax, 255>

720:
old  < scanString$25:>
new  <	cmp al, 0>

721:
old  <	; Call 45 isspace 0>
new  <	jge scanString$24>

722:
old  <	mov qword [rbp + 45], scanString$26>
new  <	neg al>

723:
old  <	mov [rbp + 53], rbp>
new  <	neg eax>

724:
old  <	add rbp, 45>
new  <>

725:
old  <	jmp isspace>
new  < scanString$24:>

726:
old  <>
new  <	; Parameter 69 signedint Â£temporary1017>

727:
old  < scanString$26:>
new  <	mov [rbp + 69], eax>

728:
old  <	; PostCall 45>
new  <>

729:
old  <>
new  < scanString$25:>

730:
old  < scanString$27:>
new  <	; Call 45 isspace 0>

731:
old  <	; GetReturnValue Â£temporary1031>
new  <	mov qword [rbp + 45], scanString$26>

732:
old  <>
new  <	mov [rbp + 53], rbp>

733:
old  < scanString$28:>
new  <	add rbp, 45>

734:
old  <	; NotEqual 46 Â£temporary1031 0>
new  <	jmp isspace>

735:
old  <	cmp ebx, 0>
new  <>

736:
old  <	jne scanString$46>
new  < scanString$26:>

737:
old  <>
new  <	; PostCall 45>

738:
old  < scanString$29:>
new  <>

739:
old  <	; IntegralToIntegral Â£temporary1034 input>
new  < scanString$27:>

740:
old  <	mov al, [rbp + 40]>
new  <	; GetReturnValue Â£temporary1018>

741:
old  <	and eax, 255>
new  <>

742:
old  <	cmp al, 0>
new  < scanString$28:>

743:
old  <	jge scanString$30>
new  <	; NotEqual 46 Â£temporary1018 0>

744:
old  <	neg al>
new  <	cmp ebx, 0>

745:
old  <	neg eax>
new  <	jne scanString$46>

747:
old  < scanString$30:>
new  < scanString$29:>

748:
old  <	; Equal 46 Â£temporary1034 -1>
new  <	; IntegralToIntegral Â£temporary1021 input>

749:
old  <	cmp eax, -1>
new  <	mov al, [rbp + 40]>

750:
old  <	je scanString$46>
new  <	and eax, 255>

751:
old  <>
new  <	cmp al, 0>

752:
old  < scanString$31:>
new  <	jge scanString$30>

753:
old  <	; Equal 46 input 10>
new  <	neg al>

754:
old  <	cmp byte [rbp + 40], 10>
new  <	neg eax>

755:
old  <	je scanString$46>
new  <>

756:
old  <>
new  < scanString$30:>

757:
old  < scanString$32:>
new  <	; Equal 46 Â£temporary1021 -1>

758:
old  <	; Assign Â£temporary1039 index>
new  <	cmp eax, -1>

759:
old  <	mov eax, [rbp + 36]>
new  <	je scanString$46>

761:
old  < scanString$33:>
new  < scanString$31:>

762:
old  <	; BinaryAdd index index 1>
new  <	; Equal 46 input 10>

763:
old  <	inc dword [rbp + 36]>
new  <	cmp byte [rbp + 40], 10>

764:
old  <>
new  <	je scanString$46>

765:
old  < scanString$34:>
new  <>

766:
old  <	; IntegralToIntegral Â£temporary1041 Â£temporary1039>
new  < scanString$32:>

767:
old  <	mov rbx, 4294967295>
new  <	; Assign Â£temporary1026 index>

768:
old  <	and rax, rbx>
new  <	mov eax, [rbp + 36]>

770:
old  < scanString$35:>
new  < scanString$33:>

771:
old  <	; BinaryAdd Â£temporary1043 string Â£temporary1041>
new  <	; BinaryAdd index index 1>

772:
old  <	mov rsi, [rbp + 24]>
new  <	inc dword [rbp + 36]>

773:
old  <	add rsi, rax>
new  <>

774:
old  <>
new  < scanString$34:>

775:
old  < scanString$36:>
new  <	; IntegralToIntegral Â£temporary1028 Â£temporary1026>

776:
old  <	; Dereference Â£temporary1040 -> Â£temporary1043 Â£temporary1043 0>
new  <	mov rbx, 4294967295>

777:
old  <>
new  <	and rax, rbx>

778:
old  < scanString$37:>
new  <>

779:
old  <	; Assign Â£temporary1040 -> Â£temporary1043 input>
new  < scanString$35:>

780:
old  <	mov al, [rbp + 40]>
new  <	; BinaryAdd Â£temporary1030 string Â£temporary1028>

781:
old  <	mov [rsi], al>
new  <	mov rsi, [rbp + 24]>

782:
old  <>
new  <	add rsi, rax>

783:
old  < scanString$38:>
new  <>

784:
old  <	; PreCall 45 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < scanString$36:>

785:
old  <>
new  <	; Dereference Â£temporary1027 -> Â£temporary1030 Â£temporary1030 0>

786:
old  < scanString$39:>
new  <>

787:
old  <	; Call 45 scanChar 0>
new  < scanString$37:>

788:
old  <	mov qword [rbp + 45], scanString$40>
new  <	; Assign Â£temporary1027 -> Â£temporary1030 input>

789:
old  <	mov [rbp + 53], rbp>
new  <	mov al, [rbp + 40]>

790:
old  <	add rbp, 45>
new  <	mov [rsi], al>

791:
old  <	jmp scanChar>
new  <>

792:
old  <>
new  < scanString$38:>

793:
old  < scanString$40:>
new  <	; PreCall 45 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

794:
old  <	; PostCall 45>
new  <>

795:
old  <>
new  < scanString$39:>

796:
old  < scanString$41:>
new  <	; Call 45 scanChar 0>

797:
old  <	; GetReturnValue Â£temporary1044>
new  <	mov qword [rbp + 45], scanString$40>

798:
old  <>
new  <	mov [rbp + 53], rbp>

799:
old  < scanString$42:>
new  <	add rbp, 45>

800:
old  <	; Assign input Â£temporary1044>
new  <	jmp scanChar>

801:
old  <	mov [rbp + 40], bl>
new  <>

802:
old  <>
new  < scanString$40:>

803:
old  < scanString$43:>
new  <	; PostCall 45>

804:
old  <	; Assign found 1>
new  <>

805:
old  <	mov dword [rbp + 41], 1>
new  < scanString$41:>

806:
old  <>
new  <	; GetReturnValue Â£temporary1031>

807:
old  < scanString$44:>
new  <>

808:
old  <	; BinaryAdd g_inChars g_inChars 1>
new  < scanString$42:>

809:
old  <	inc dword [g_inChars]>
new  <	; Assign input Â£temporary1031>

810:
old  <>
new  <	mov [rbp + 40], bl>

811:
old  < scanString$45:>
new  <>

812:
old  <	; Goto 22>
new  < scanString$43:>

813:
old  <	jmp scanString$22>
new  <	; Assign found 1>

814:
old  <>
new  <	mov dword [rbp + 41], 1>

815:
old  < scanString$46:>
new  <>

816:
old  <	; IntegralToIntegral Â£temporary1047 index>
new  < scanString$44:>

817:
old  <	mov eax, [rbp + 36]>
new  <	; BinaryAdd g_inChars g_inChars 1>

818:
old  <	mov rbx, 4294967295>
new  <	inc dword [g_inChars]>

819:
old  <	and rax, rbx>
new  <>

820:
old  <>
new  < scanString$45:>

821:
old  < scanString$47:>
new  <	; Goto 22>

822:
old  <	; BinaryAdd Â£temporary1049 string Â£temporary1047>
new  <	jmp scanString$22>

823:
old  <	mov rsi, [rbp + 24]>
new  <>

824:
old  <	add rsi, rax>
new  < scanString$46:>

825:
old  <>
new  <	; IntegralToIntegral Â£temporary1034 index>

826:
old  < scanString$48:>
new  <	mov eax, [rbp + 36]>

827:
old  <	; Dereference Â£temporary1046 -> Â£temporary1049 Â£temporary1049 0>
new  <	mov rbx, 4294967295>

828:
old  <>
new  <	and rax, rbx>

829:
old  < scanString$49:>
new  <>

830:
old  <	; Assign Â£temporary1046 -> Â£temporary1049 0>
new  < scanString$47:>

831:
old  <	mov byte [rsi], 0>
new  <	; BinaryAdd Â£temporary1036 string Â£temporary1034>

832:
old  <>
new  <	mov rsi, [rbp + 24]>

833:
old  < scanString$50:>
new  <	add rsi, rax>

834:
old  <	; BinaryAdd g_inChars g_inChars 1>
new  <>

835:
old  <	inc dword [g_inChars]>
new  < scanString$48:>

836:
old  <>
new  <	; Dereference Â£temporary1033 -> Â£temporary1036 Â£temporary1036 0>

837:
old  < scanString$51:>
new  <>

838:
old  <	; Goto 130>
new  < scanString$49:>

839:
old  <	jmp scanString$130>
new  <	; Assign Â£temporary1033 -> Â£temporary1036 0>

840:
old  <>
new  <	mov byte [rsi], 0>

841:
old  < scanString$52:>
new  <>

842:
old  <	; Assign Â£temporary1051 precision>
new  < scanString$50:>

843:
old  <	mov eax, [rbp + 32]>
new  <	; BinaryAdd g_inChars g_inChars 1>

844:
old  <>
new  <	inc dword [g_inChars]>

845:
old  < scanString$53:>
new  <>

846:
old  <	; BinarySubtract precision precision 1>
new  < scanString$51:>

847:
old  <	dec dword [rbp + 32]>
new  <	; Goto 130>

848:
old  <>
new  <	jmp scanString$130>

849:
old  < scanString$54:>
new  <>

850:
old  <	; SignedLessThanEqual 79 Â£temporary1051 0>
new  < scanString$52:>

851:
old  <	cmp eax, 0>
new  <	; Assign Â£temporary1038 precision>

852:
old  <	jle scanString$79>
new  <	mov eax, [rbp + 32]>

854:
old  < scanString$55:>
new  < scanString$53:>

855:
old  <	; PreCall 45 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; BinarySubtract precision precision 1>

856:
old  <>
new  <	dec dword [rbp + 32]>

857:
old  < scanString$56:>
new  <>

858:
old  <	; IntegralToIntegral Â£temporary1053 input>
new  < scanString$54:>

859:
old  <	mov al, [rbp + 40]>
new  <	; SignedLessThanEqual 79 Â£temporary1038 0>

860:
old  <	and eax, 255>
new  <	cmp eax, 0>

861:
old  <	cmp al, 0>
new  <	jle scanString$79>

862:
old  <	jge scanString$57>
new  <>

863:
old  <	neg al>
new  < scanString$55:>

864:
old  <	neg eax>
new  <	; PreCall 45 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

866:
old  < scanString$57:>
new  < scanString$56:>

867:
old  <	; Parameter 69 signedint Â£temporary1053>
new  <	; IntegralToIntegral Â£temporary1040 input>

868:
old  <	mov [rbp + 69], eax>
new  <	mov al, [rbp + 40]>

869:
old  <>
new  <	and eax, 255>

870:
old  < scanString$58:>
new  <	cmp al, 0>

871:
old  <	; Call 45 isspace 0>
new  <	jge scanString$57>

872:
old  <	mov qword [rbp + 45], scanString$59>
new  <	neg al>

873:
old  <	mov [rbp + 53], rbp>
new  <	neg eax>

874:
old  <	add rbp, 45>
new  <>

875:
old  <	jmp isspace>
new  < scanString$57:>

876:
old  <>
new  <	; Parameter 69 signedint Â£temporary1040>

877:
old  < scanString$59:>
new  <	mov [rbp + 69], eax>

878:
old  <	; PostCall 45>
new  <>

879:
old  <>
new  < scanString$58:>

880:
old  < scanString$60:>
new  <	; Call 45 isspace 0>

881:
old  <	; GetReturnValue Â£temporary1054>
new  <	mov qword [rbp + 45], scanString$59>

882:
old  <>
new  <	mov [rbp + 53], rbp>

883:
old  < scanString$61:>
new  <	add rbp, 45>

884:
old  <	; NotEqual 79 Â£temporary1054 0>
new  <	jmp isspace>

885:
old  <	cmp ebx, 0>
new  <>

886:
old  <	jne scanString$79>
new  < scanString$59:>

887:
old  <>
new  <	; PostCall 45>

888:
old  < scanString$62:>
new  <>

889:
old  <	; IntegralToIntegral Â£temporary1057 input>
new  < scanString$60:>

890:
old  <	mov al, [rbp + 40]>
new  <	; GetReturnValue Â£temporary1041>

891:
old  <	and eax, 255>
new  <>

892:
old  <	cmp al, 0>
new  < scanString$61:>

893:
old  <	jge scanString$63>
new  <	; NotEqual 79 Â£temporary1041 0>

894:
old  <	neg al>
new  <	cmp ebx, 0>

895:
old  <	neg eax>
new  <	jne scanString$79>

897:
old  < scanString$63:>
new  < scanString$62:>

898:
old  <	; Equal 79 Â£temporary1057 -1>
new  <	; IntegralToIntegral Â£temporary1044 input>

899:
old  <	cmp eax, -1>
new  <	mov al, [rbp + 40]>

900:
old  <	je scanString$79>
new  <	and eax, 255>

901:
old  <>
new  <	cmp al, 0>

902:
old  < scanString$64:>
new  <	jge scanString$63>

903:
old  <	; Equal 79 input 10>
new  <	neg al>

904:
old  <	cmp byte [rbp + 40], 10>
new  <	neg eax>

905:
old  <	je scanString$79>
new  <>

906:
old  <>
new  < scanString$63:>

907:
old  < scanString$65:>
new  <	; Equal 79 Â£temporary1044 -1>

908:
old  <	; Assign Â£temporary1063 index>
new  <	cmp eax, -1>

909:
old  <	mov eax, [rbp + 36]>
new  <	je scanString$79>

911:
old  < scanString$66:>
new  < scanString$64:>

912:
old  <	; BinaryAdd index index 1>
new  <	; Equal 79 input 10>

913:
old  <	inc dword [rbp + 36]>
new  <	cmp byte [rbp + 40], 10>

914:
old  <>
new  <	je scanString$79>

915:
old  < scanString$67:>
new  <>

916:
old  <	; IntegralToIntegral Â£temporary1065 Â£temporary1063>
new  < scanString$65:>

917:
old  <	mov rbx, 4294967295>
new  <	; Assign Â£temporary1050 index>

918:
old  <	and rax, rbx>
new  <	mov eax, [rbp + 36]>

920:
old  < scanString$68:>
new  < scanString$66:>

921:
old  <	; BinaryAdd Â£temporary1067 string Â£temporary1065>
new  <	; BinaryAdd index index 1>

922:
old  <	mov rsi, [rbp + 24]>
new  <	inc dword [rbp + 36]>

923:
old  <	add rsi, rax>
new  <>

924:
old  <>
new  < scanString$67:>

925:
old  < scanString$69:>
new  <	; IntegralToIntegral Â£temporary1052 Â£temporary1050>

926:
old  <	; Dereference Â£temporary1064 -> Â£temporary1067 Â£temporary1067 0>
new  <	mov rbx, 4294967295>

927:
old  <>
new  <	and rax, rbx>

928:
old  < scanString$70:>
new  <>

929:
old  <	; Assign Â£temporary1064 -> Â£temporary1067 input>
new  < scanString$68:>

930:
old  <	mov al, [rbp + 40]>
new  <	; BinaryAdd Â£temporary1054 string Â£temporary1052>

931:
old  <	mov [rsi], al>
new  <	mov rsi, [rbp + 24]>

932:
old  <>
new  <	add rsi, rax>

933:
old  < scanString$71:>
new  <>

934:
old  <	; PreCall 45 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < scanString$69:>

935:
old  <>
new  <	; Dereference Â£temporary1051 -> Â£temporary1054 Â£temporary1054 0>

936:
old  < scanString$72:>
new  <>

937:
old  <	; Call 45 scanChar 0>
new  < scanString$70:>

938:
old  <	mov qword [rbp + 45], scanString$73>
new  <	; Assign Â£temporary1051 -> Â£temporary1054 input>

939:
old  <	mov [rbp + 53], rbp>
new  <	mov al, [rbp + 40]>

940:
old  <	add rbp, 45>
new  <	mov [rsi], al>

941:
old  <	jmp scanChar>
new  <>

942:
old  <>
new  < scanString$71:>

943:
old  < scanString$73:>
new  <	; PreCall 45 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

944:
old  <	; PostCall 45>
new  <>

945:
old  <>
new  < scanString$72:>

946:
old  < scanString$74:>
new  <	; Call 45 scanChar 0>

947:
old  <	; GetReturnValue Â£temporary1068>
new  <	mov qword [rbp + 45], scanString$73>

948:
old  <>
new  <	mov [rbp + 53], rbp>

949:
old  < scanString$75:>
new  <	add rbp, 45>

950:
old  <	; Assign input Â£temporary1068>
new  <	jmp scanChar>

951:
old  <	mov [rbp + 40], bl>
new  <>

952:
old  <>
new  < scanString$73:>

953:
old  < scanString$76:>
new  <	; PostCall 45>

954:
old  <	; Assign found 1>
new  <>

955:
old  <	mov dword [rbp + 41], 1>
new  < scanString$74:>

956:
old  <>
new  <	; GetReturnValue Â£temporary1055>

957:
old  < scanString$77:>
new  <>

958:
old  <	; BinaryAdd g_inChars g_inChars 1>
new  < scanString$75:>

959:
old  <	inc dword [g_inChars]>
new  <	; Assign input Â£temporary1055>

960:
old  <>
new  <	mov [rbp + 40], bl>

961:
old  < scanString$78:>
new  <>

962:
old  <	; Goto 52>
new  < scanString$76:>

963:
old  <	jmp scanString$52>
new  <	; Assign found 1>

964:
old  <>
new  <	mov dword [rbp + 41], 1>

965:
old  < scanString$79:>
new  <>

966:
old  <	; SignedLessThanEqual 130 precision 0>
new  < scanString$77:>

967:
old  <	cmp dword [rbp + 32], 0>
new  <	; BinaryAdd g_inChars g_inChars 1>

968:
old  <	jle scanString$130>
new  <	inc dword [g_inChars]>

970:
old  < scanString$80:>
new  < scanString$78:>

971:
old  <	; IntegralToIntegral Â£temporary1072 index>
new  <	; Goto 52>

972:
old  <	mov eax, [rbp + 36]>
new  <	jmp scanString$52>

973:
old  <	mov rbx, 4294967295>
new  <>

974:
old  <	and rax, rbx>
new  < scanString$79:>

975:
old  <>
new  <	; SignedLessThanEqual 130 precision 0>

976:
old  < scanString$81:>
new  <	cmp dword [rbp + 32], 0>

977:
old  <	; BinaryAdd Â£temporary1074 string Â£temporary1072>
new  <	jle scanString$130>

978:
old  <	mov rsi, [rbp + 24]>
new  <>

979:
old  <	add rsi, rax>
new  < scanString$80:>

980:
old  <>
new  <	; IntegralToIntegral Â£temporary1059 index>

981:
old  < scanString$82:>
new  <	mov eax, [rbp + 36]>

982:
old  <	; Dereference Â£temporary1071 -> Â£temporary1074 Â£temporary1074 0>
new  <	mov rbx, 4294967295>

983:
old  <>
new  <	and rax, rbx>

984:
old  < scanString$83:>
new  <>

985:
old  <	; Assign Â£temporary1071 -> Â£temporary1074 0>
new  < scanString$81:>

986:
old  <	mov byte [rsi], 0>
new  <	; BinaryAdd Â£temporary1061 string Â£temporary1059>

987:
old  <>
new  <	mov rsi, [rbp + 24]>

988:
old  < scanString$84:>
new  <	add rsi, rax>

989:
old  <	; BinaryAdd g_inChars g_inChars 1>
new  <>

990:
old  <	inc dword [g_inChars]>
new  < scanString$82:>

991:
old  <>
new  <	; Dereference Â£temporary1058 -> Â£temporary1061 Â£temporary1061 0>

992:
old  < scanString$85:>
new  <>

993:
old  <	; Goto 130>
new  < scanString$83:>

994:
old  <	jmp scanString$130>
new  <	; Assign Â£temporary1058 -> Â£temporary1061 0>

995:
old  <>
new  <	mov byte [rsi], 0>

996:
old  < scanString$86:>
new  <>

997:
old  <	; NotEqual 107 precision 0>
new  < scanString$84:>

998:
old  <	cmp dword [rbp + 32], 0>
new  <	; BinaryAdd g_inChars g_inChars 1>

999:
old  <	jne scanString$107>
new  <	inc dword [g_inChars]>

1001:
old  < scanString$87:>
new  < scanString$85:>

1002:
old  <	; PreCall 45 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Goto 130>

1003:
old  <>
new  <	jmp scanString$130>

1004:
old  < scanString$88:>
new  <>

1005:
old  <	; IntegralToIntegral Â£temporary1077 input>
new  < scanString$86:>

1006:
old  <	mov al, [rbp + 40]>
new  <	; NotEqual 107 precision 0>

1007:
old  <	and eax, 255>
new  <	cmp dword [rbp + 32], 0>

1008:
old  <	cmp al, 0>
new  <	jne scanString$107>

1009:
old  <	jge scanString$89>
new  <>

1010:
old  <	neg al>
new  < scanString$87:>

1011:
old  <	neg eax>
new  <	; PreCall 45 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1013:
old  < scanString$89:>
new  < scanString$88:>

1014:
old  <	; Parameter 69 signedint Â£temporary1077>
new  <	; IntegralToIntegral Â£temporary1064 input>

1015:
old  <	mov [rbp + 69], eax>
new  <	mov al, [rbp + 40]>

1016:
old  <>
new  <	and eax, 255>

1017:
old  < scanString$90:>
new  <	cmp al, 0>

1018:
old  <	; Call 45 isspace 0>
new  <	jge scanString$89>

1019:
old  <	mov qword [rbp + 45], scanString$91>
new  <	neg al>

1020:
old  <	mov [rbp + 53], rbp>
new  <	neg eax>

1021:
old  <	add rbp, 45>
new  <>

1022:
old  <	jmp isspace>
new  < scanString$89:>

1023:
old  <>
new  <	; Parameter 69 signedint Â£temporary1064>

1024:
old  < scanString$91:>
new  <	mov [rbp + 69], eax>

1025:
old  <	; PostCall 45>
new  <>

1026:
old  <>
new  < scanString$90:>

1027:
old  < scanString$92:>
new  <	; Call 45 isspace 0>

1028:
old  <	; GetReturnValue Â£temporary1078>
new  <	mov qword [rbp + 45], scanString$91>

1029:
old  <>
new  <	mov [rbp + 53], rbp>

1030:
old  < scanString$93:>
new  <	add rbp, 45>

1031:
old  <	; NotEqual 105 Â£temporary1078 0>
new  <	jmp isspace>

1032:
old  <	cmp ebx, 0>
new  <>

1033:
old  <	jne scanString$105>
new  < scanString$91:>

1034:
old  <>
new  <	; PostCall 45>

1035:
old  < scanString$94:>
new  <>

1036:
old  <	; IntegralToIntegral Â£temporary1081 input>
new  < scanString$92:>

1037:
old  <	mov al, [rbp + 40]>
new  <	; GetReturnValue Â£temporary1065>

1038:
old  <	and eax, 255>
new  <>

1039:
old  <	cmp al, 0>
new  < scanString$93:>

1040:
old  <	jge scanString$95>
new  <	; NotEqual 105 Â£temporary1065 0>

1041:
old  <	neg al>
new  <	cmp ebx, 0>

1042:
old  <	neg eax>
new  <	jne scanString$105>

1044:
old  < scanString$95:>
new  < scanString$94:>

1045:
old  <	; Equal 105 Â£temporary1081 -1>
new  <	; IntegralToIntegral Â£temporary1068 input>

1046:
old  <	cmp eax, -1>
new  <	mov al, [rbp + 40]>

1047:
old  <	je scanString$105>
new  <	and eax, 255>

1048:
old  <>
new  <	cmp al, 0>

1049:
old  < scanString$96:>
new  <	jge scanString$95>

1050:
old  <	; Equal 105 input 10>
new  <	neg al>

1051:
old  <	cmp byte [rbp + 40], 10>
new  <	neg eax>

1052:
old  <	je scanString$105>
new  <>

1053:
old  <>
new  < scanString$95:>

1054:
old  < scanString$97:>
new  <	; Equal 105 Â£temporary1068 -1>

1055:
old  <	; PreCall 45 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	cmp eax, -1>

1056:
old  <>
new  <	je scanString$105>

1057:
old  < scanString$98:>
new  <>

1058:
old  <	; Call 45 scanChar 0>
new  < scanString$96:>

1059:
old  <	mov qword [rbp + 45], scanString$99>
new  <	; Equal 105 input 10>

1060:
old  <	mov [rbp + 53], rbp>
new  <	cmp byte [rbp + 40], 10>

1061:
old  <	add rbp, 45>
new  <	je scanString$105>

1062:
old  <	jmp scanChar>
new  <>

1063:
old  <>
new  < scanString$97:>

1064:
old  < scanString$99:>
new  <	; PreCall 45 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1065:
old  <	; PostCall 45>
new  <>

1066:
old  <>
new  < scanString$98:>

1067:
old  < scanString$100:>
new  <	; Call 45 scanChar 0>

1068:
old  <	; GetReturnValue Â£temporary1086>
new  <	mov qword [rbp + 45], scanString$99>

1069:
old  <>
new  <	mov [rbp + 53], rbp>

1070:
old  < scanString$101:>
new  <	add rbp, 45>

1071:
old  <	; Assign input Â£temporary1086>
new  <	jmp scanChar>

1072:
old  <	mov [rbp + 40], bl>
new  <>

1073:
old  <>
new  < scanString$99:>

1074:
old  < scanString$102:>
new  <	; PostCall 45>

1075:
old  <	; Assign found 1>
new  <>

1076:
old  <	mov dword [rbp + 41], 1>
new  < scanString$100:>

1077:
old  <>
new  <	; GetReturnValue Â£temporary1073>

1078:
old  < scanString$103:>
new  <>

1079:
old  <	; BinaryAdd g_inChars g_inChars 1>
new  < scanString$101:>

1080:
old  <	inc dword [g_inChars]>
new  <	; Assign input Â£temporary1073>

1081:
old  <>
new  <	mov [rbp + 40], bl>

1082:
old  < scanString$104:>
new  <>

1083:
old  <	; Goto 87>
new  < scanString$102:>

1084:
old  <	jmp scanString$87>
new  <	; Assign found 1>

1085:
old  <>
new  <	mov dword [rbp + 41], 1>

1086:
old  < scanString$105:>
new  <>

1087:
old  <	; BinaryAdd g_inChars g_inChars 1>
new  < scanString$103:>

1088:
old  <	inc dword [g_inChars]>
new  <	; BinaryAdd g_inChars g_inChars 1>

1089:
old  <>
new  <	inc dword [g_inChars]>

1090:
old  < scanString$106:>
new  <>

1091:
old  <	; Goto 130>
new  < scanString$104:>

1092:
old  <	jmp scanString$130>
new  <	; Goto 87>

1093:
old  <>
new  <	jmp scanString$87>

1094:
old  < scanString$107:>
new  <>

1095:
old  <	; Assign Â£temporary1089 precision>
new  < scanString$105:>

1096:
old  <	mov eax, [rbp + 32]>
new  <	; BinaryAdd g_inChars g_inChars 1>

1097:
old  <>
new  <	inc dword [g_inChars]>

1098:
old  < scanString$108:>
new  <>

1099:
old  <	; BinarySubtract precision precision 1>
new  < scanString$106:>

1100:
old  <	dec dword [rbp + 32]>
new  <	; Goto 130>

1101:
old  <>
new  <	jmp scanString$130>

1102:
old  < scanString$109:>
new  <>

1103:
old  <	; SignedLessThanEqual 128 Â£temporary1089 0>
new  < scanString$107:>

1104:
old  <	cmp eax, 0>
new  <	; Assign Â£temporary1076 precision>

1105:
old  <	jle scanString$128>
new  <	mov eax, [rbp + 32]>

1107:
old  < scanString$110:>
new  < scanString$108:>

1108:
old  <	; PreCall 45 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; BinarySubtract precision precision 1>

1109:
old  <>
new  <	dec dword [rbp + 32]>

1110:
old  < scanString$111:>
new  <>

1111:
old  <	; IntegralToIntegral Â£temporary1091 input>
new  < scanString$109:>

1112:
old  <	mov al, [rbp + 40]>
new  <	; SignedLessThanEqual 128 Â£temporary1076 0>

1113:
old  <	and eax, 255>
new  <	cmp eax, 0>

1114:
old  <	cmp al, 0>
new  <	jle scanString$128>

1115:
old  <	jge scanString$112>
new  <>

1116:
old  <	neg al>
new  < scanString$110:>

1117:
old  <	neg eax>
new  <	; PreCall 45 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1119:
old  < scanString$112:>
new  < scanString$111:>

1120:
old  <	; Parameter 69 signedint Â£temporary1091>
new  <	; IntegralToIntegral Â£temporary1078 input>

1121:
old  <	mov [rbp + 69], eax>
new  <	mov al, [rbp + 40]>

1122:
old  <>
new  <	and eax, 255>

1123:
old  < scanString$113:>
new  <	cmp al, 0>

1124:
old  <	; Call 45 isspace 0>
new  <	jge scanString$112>

1125:
old  <	mov qword [rbp + 45], scanString$114>
new  <	neg al>

1126:
old  <	mov [rbp + 53], rbp>
new  <	neg eax>

1127:
old  <	add rbp, 45>
new  <>

1128:
old  <	jmp isspace>
new  < scanString$112:>

1129:
old  <>
new  <	; Parameter 69 signedint Â£temporary1078>

1130:
old  < scanString$114:>
new  <	mov [rbp + 69], eax>

1131:
old  <	; PostCall 45>
new  <>

1132:
old  <>
new  < scanString$113:>

1133:
old  < scanString$115:>
new  <	; Call 45 isspace 0>

1134:
old  <	; GetReturnValue Â£temporary1092>
new  <	mov qword [rbp + 45], scanString$114>

1135:
old  <>
new  <	mov [rbp + 53], rbp>

1136:
old  < scanString$116:>
new  <	add rbp, 45>

1137:
old  <	; NotEqual 128 Â£temporary1092 0>
new  <	jmp isspace>

1138:
old  <	cmp ebx, 0>
new  <>

1139:
old  <	jne scanString$128>
new  < scanString$114:>

1140:
old  <>
new  <	; PostCall 45>

1141:
old  < scanString$117:>
new  <>

1142:
old  <	; IntegralToIntegral Â£temporary1095 input>
new  < scanString$115:>

1143:
old  <	mov al, [rbp + 40]>
new  <	; GetReturnValue Â£temporary1079>

1144:
old  <	and eax, 255>
new  <>

1145:
old  <	cmp al, 0>
new  < scanString$116:>

1146:
old  <	jge scanString$118>
new  <	; NotEqual 128 Â£temporary1079 0>

1147:
old  <	neg al>
new  <	cmp ebx, 0>

1148:
old  <	neg eax>
new  <	jne scanString$128>

1150:
old  < scanString$118:>
new  < scanString$117:>

1151:
old  <	; Equal 128 Â£temporary1095 -1>
new  <	; IntegralToIntegral Â£temporary1082 input>

1152:
old  <	cmp eax, -1>
new  <	mov al, [rbp + 40]>

1153:
old  <	je scanString$128>
new  <	and eax, 255>

1154:
old  <>
new  <	cmp al, 0>

1155:
old  < scanString$119:>
new  <	jge scanString$118>

1156:
old  <	; Equal 128 input 10>
new  <	neg al>

1157:
old  <	cmp byte [rbp + 40], 10>
new  <	neg eax>

1158:
old  <	je scanString$128>
new  <>

1159:
old  <>
new  < scanString$118:>

1160:
old  < scanString$120:>
new  <	; Equal 128 Â£temporary1082 -1>

1161:
old  <	; PreCall 45 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	cmp eax, -1>

1162:
old  <>
new  <	je scanString$128>

1163:
old  < scanString$121:>
new  <>

1164:
old  <	; Call 45 scanChar 0>
new  < scanString$119:>

1165:
old  <	mov qword [rbp + 45], scanString$122>
new  <	; Equal 128 input 10>

1166:
old  <	mov [rbp + 53], rbp>
new  <	cmp byte [rbp + 40], 10>

1167:
old  <	add rbp, 45>
new  <	je scanString$128>

1168:
old  <	jmp scanChar>
new  <>

1169:
old  <>
new  < scanString$120:>

1170:
old  < scanString$122:>
new  <	; PreCall 45 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1171:
old  <	; PostCall 45>
new  <>

1172:
old  <>
new  < scanString$121:>

1173:
old  < scanString$123:>
new  <	; Call 45 scanChar 0>

1174:
old  <	; GetReturnValue Â£temporary1101>
new  <	mov qword [rbp + 45], scanString$122>

1175:
old  <>
new  <	mov [rbp + 53], rbp>

1176:
old  < scanString$124:>
new  <	add rbp, 45>

1177:
old  <	; Assign input Â£temporary1101>
new  <	jmp scanChar>

1178:
old  <	mov [rbp + 40], bl>
new  <>

1179:
old  <>
new  < scanString$122:>

1180:
old  < scanString$125:>
new  <	; PostCall 45>

1181:
old  <	; Assign found 1>
new  <>

1182:
old  <	mov dword [rbp + 41], 1>
new  < scanString$123:>

1183:
old  <>
new  <	; GetReturnValue Â£temporary1088>

1184:
old  < scanString$126:>
new  <>

1185:
old  <	; BinaryAdd g_inChars g_inChars 1>
new  < scanString$124:>

1186:
old  <	inc dword [g_inChars]>
new  <	; Assign input Â£temporary1088>

1187:
old  <>
new  <	mov [rbp + 40], bl>

1188:
old  < scanString$127:>
new  <>

1189:
old  <	; Goto 107>
new  < scanString$125:>

1190:
old  <	jmp scanString$107>
new  <	; Assign found 1>

1191:
old  <>
new  <	mov dword [rbp + 41], 1>

1192:
old  < scanString$128:>
new  <>

1193:
old  <	; SignedLessThanEqual 130 precision 0>
new  < scanString$126:>

1194:
old  <	cmp dword [rbp + 32], 0>
new  <	; BinaryAdd g_inChars g_inChars 1>

1195:
old  <	jle scanString$130>
new  <	inc dword [g_inChars]>

1197:
old  < scanString$129:>
new  < scanString$127:>

1198:
old  <	; BinaryAdd g_inChars g_inChars 1>
new  <	; Goto 107>

1199:
old  <	inc dword [g_inChars]>
new  <	jmp scanString$107>

1201:
old  < scanString$130:>
new  < scanString$128:>

1202:
old  <	; Equal 132 found 0>
new  <	; SignedLessThanEqual 130 precision 0>

1203:
old  <	cmp dword [rbp + 41], 0>
new  <	cmp dword [rbp + 32], 0>

1204:
old  <	je scanString$132>
new  <	jle scanString$130>

1206:
old  < scanString$131:>
new  < scanString$129:>

1207:
old  <	; BinaryAdd g_inCount g_inCount 1>
new  <	; BinaryAdd g_inChars g_inChars 1>

1208:
old  <	inc dword [g_inCount]>
new  <	inc dword [g_inChars]>

1210:
old  < scanString$132:>
new  < scanString$130:>

1211:
old  <	; Return>
new  <	; Equal 132 found 0>

1212:
old  <	mov rax, [rbp]>
new  <	cmp dword [rbp + 41], 0>

1213:
old  <	mov rdi, [rbp + 16]>
new  <	je scanString$132>

1214:
old  <	mov rbp, [rbp + 8]>
new  <>

1215:
old  <	jmp rax>
new  < scanString$131:>

1216:
old  <>
new  <	; BinaryAdd g_inCount g_inCount 1>

1217:
old  < scanString$133:>
new  <	inc dword [g_inCount]>

1218:
old  <	; FunctionEnd scanString>
new  <>

1219:
old  <>
new  < scanString$132:>

1220:
old  <section .text>
new  <	; Return>

1221:
old  <>
new  <	mov rax, [rbp]>

1222:
old  < @2886$isDigitInBase:>
new  <	mov rdi, [rbp + 16]>

1223:
old  <	; PreCall 29 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov rbp, [rbp + 8]>

1224:
old  <>
new  <	jmp rax>

1225:
old  < @2886$isDigitInBase$1:>
new  <>

1226:
old  <	; IntegralToIntegral Â£temporary1107 c>
new  < scanString$133:>

1227:
old  <	mov al, [rbp + 24]>
new  <	; FunctionEnd scanString>

1228:
old  <	and eax, 255>
new  <>

1229:
old  <	cmp al, 0>
new  <section .text>

1230:
old  <	jge @2886$isDigitInBase$2>
new  <>

1231:
old  <	neg al>
new  < @2882$isDigitInBase:>

1232:
old  <	neg eax>
new  <	; PreCall 29 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1234:
old  < @2886$isDigitInBase$2:>
new  < @2882$isDigitInBase$1:>

1235:
old  <	; Parameter 53 signedint Â£temporary1107>
new  <	; IntegralToIntegral Â£temporary1094 c>

1236:
old  <	mov [rbp + 53], eax>
new  <	mov al, [rbp + 24]>

1237:
old  <>
new  <	and eax, 255>

1238:
old  < @2886$isDigitInBase$3:>
new  <	cmp al, 0>

1239:
old  <	; Call 29 isdigit 0>
new  <	jge @2882$isDigitInBase$2>

1240:
old  <	mov qword [rbp + 29], @2886$isDigitInBase$4>
new  <	neg al>

1241:
old  <	mov [rbp + 37], rbp>
new  <	neg eax>

1242:
old  <	add rbp, 29>
new  <>

1243:
old  <	jmp isdigit>
new  < @2882$isDigitInBase$2:>

1244:
old  <>
new  <	; Parameter 53 signedint Â£temporary1094>

1245:
old  < @2886$isDigitInBase$4:>
new  <	mov [rbp + 53], eax>

1246:
old  <	; PostCall 29>
new  <>

1247:
old  <>
new  < @2882$isDigitInBase$3:>

1248:
old  < @2886$isDigitInBase$5:>
new  <	; Call 29 isdigit 0>

1249:
old  <	; GetReturnValue Â£temporary1108>
new  <	mov qword [rbp + 29], @2882$isDigitInBase$4>

1250:
old  <>
new  <	mov [rbp + 37], rbp>

1251:
old  < @2886$isDigitInBase$6:>
new  <	add rbp, 29>

1252:
old  <	; Equal 16 Â£temporary1108 0>
new  <	jmp isdigit>

1253:
old  <	cmp ebx, 0>
new  <>

1254:
old  <	je @2886$isDigitInBase$16>
new  < @2882$isDigitInBase$4:>

1255:
old  <>
new  <	; PostCall 29>

1256:
old  < @2886$isDigitInBase$7:>
new  <>

1257:
old  <	; BinarySubtract Â£temporary1109 c 48>
new  < @2882$isDigitInBase$5:>

1258:
old  <	mov al, [rbp + 24]>
new  <	; GetReturnValue Â£temporary1095>

1259:
old  <	sub al, 48>
new  <>

1260:
old  <>
new  < @2882$isDigitInBase$6:>

1261:
old  < @2886$isDigitInBase$8:>
new  <	; Equal 17 Â£temporary1095 0>

1262:
old  <	; IntegralToIntegral Â£temporary1110 Â£temporary1109>
new  <	cmp ebx, 0>

1263:
old  <	and eax, 255>
new  <	je @2882$isDigitInBase$17>

1264:
old  <	cmp al, 0>
new  <>

1265:
old  <	jge @2886$isDigitInBase$9>
new  < @2882$isDigitInBase$7:>

1266:
old  <	neg al>
new  <	; BinarySubtract Â£temporary1096 c 48>

1267:
old  <	neg eax>
new  <	mov al, [rbp + 24]>

1268:
old  <>
new  <	sub al, 48>

1269:
old  < @2886$isDigitInBase$9:>
new  <>

1270:
old  <	; Assign value Â£temporary1110>
new  < @2882$isDigitInBase$8:>

1271:
old  <	mov [rbp + 29], eax>
new  <	; IntegralToIntegral Â£temporary1097 Â£temporary1096>

1272:
old  <>
new  <	and eax, 255>

1273:
old  < @2886$isDigitInBase$10:>
new  <	cmp al, 0>

1274:
old  <	; SignedLessThan 14 value 0>
new  <	jge @2882$isDigitInBase$9>

1275:
old  <	cmp dword [rbp + 29], 0>
new  <	neg al>

1276:
old  <	jl @2886$isDigitInBase$14>
new  <	neg eax>

1278:
old  < @2886$isDigitInBase$11:>
new  < @2882$isDigitInBase$9:>

1279:
old  <	; SignedGreaterThanEqual 14 value base>
new  <	; Assign value Â£temporary1097>

1280:
old  <	mov eax, [rbp + 25]>
new  <	mov [rbp + 29], eax>

1281:
old  <	cmp [rbp + 29], eax>
new  <>

1282:
old  <	jge @2886$isDigitInBase$14>
new  < @2882$isDigitInBase$10:>

1283:
old  <>
new  <	; SignedLessThan 14 value 0>

1284:
old  < @2886$isDigitInBase$12:>
new  <	cmp dword [rbp + 29], 0>

1285:
old  <	; Assign Â£temporary1114 1>
new  <	jl @2882$isDigitInBase$14>

1286:
old  <	mov ebx, 1>
new  <>

1287:
old  <>
new  < @2882$isDigitInBase$11:>

1288:
old  < @2886$isDigitInBase$13:>
new  <	; SignedGreaterThanEqual 14 value base>

1289:
old  <	; Goto 15>
new  <	mov eax, [rbp + 25]>

1290:
old  <	jmp @2886$isDigitInBase$15>
new  <	cmp [rbp + 29], eax>

1291:
old  <>
new  <	jge @2882$isDigitInBase$14>

1292:
old  < @2886$isDigitInBase$14:>
new  <>

1293:
old  <	; Assign Â£temporary1114 0>
new  < @2882$isDigitInBase$12:>

1294:
old  <	mov ebx, 0>
new  <	; Assign Â£temporary1101 1>

1295:
old  <>
new  <	mov ebx, 1>

1296:
old  < @2886$isDigitInBase$15:>
new  <>

1297:
old  <	; Return Â£temporary1114>
new  < @2882$isDigitInBase$13:>

1298:
old  <	mov rax, [rbp]>
new  <	; Goto 15>

1299:
old  <	mov rdi, [rbp + 16]>
new  <	jmp @2882$isDigitInBase$15>

1300:
old  <	mov rbp, [rbp + 8]>
new  <>

1301:
old  <	jmp rax>
new  < @2882$isDigitInBase$14:>

1302:
old  <>
new  <	; Assign Â£temporary1101 0>

1303:
old  < @2886$isDigitInBase$16:>
new  <	mov ebx, 0>

1304:
old  <	; PreCall 29 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1305:
old  <>
new  < @2882$isDigitInBase$15:>

1306:
old  < @2886$isDigitInBase$17:>
new  <	; SetReturnValue>

1307:
old  <	; IntegralToIntegral Â£temporary1115 c>
new  <>

1308:
old  <	mov al, [rbp + 24]>
new  < @2882$isDigitInBase$16:>

1309:
old  <	and eax, 255>
new  <	; Return Â£temporary1101>

1310:
old  <	cmp al, 0>
new  <	mov rax, [rbp]>

1311:
old  <	jge @2886$isDigitInBase$18>
new  <	mov rdi, [rbp + 16]>

1312:
old  <	neg al>
new  <	mov rbp, [rbp + 8]>

1313:
old  <	neg eax>
new  <	jmp rax>

1315:
old  < @2886$isDigitInBase$18:>
new  < @2882$isDigitInBase$17:>

1316:
old  <	; Parameter 53 signedint Â£temporary1115>
new  <	; PreCall 29 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1317:
old  <	mov [rbp + 53], eax>
new  <>

1318:
old  <>
new  < @2882$isDigitInBase$18:>

1319:
old  < @2886$isDigitInBase$19:>
new  <	; IntegralToIntegral Â£temporary1102 c>

1320:
old  <	; Call 29 islower 0>
new  <	mov al, [rbp + 24]>

1321:
old  <	mov qword [rbp + 29], @2886$isDigitInBase$20>
new  <	and eax, 255>

1322:
old  <	mov [rbp + 37], rbp>
new  <	cmp al, 0>

1323:
old  <	add rbp, 29>
new  <	jge @2882$isDigitInBase$19>

1324:
old  <	jmp islower>
new  <	neg al>

1325:
old  <>
new  <	neg eax>

1326:
old  < @2886$isDigitInBase$20:>
new  <>

1327:
old  <	; PostCall 29>
new  < @2882$isDigitInBase$19:>

1328:
old  <>
new  <	; Parameter 53 signedint Â£temporary1102>

1329:
old  < @2886$isDigitInBase$21:>
new  <	mov [rbp + 53], eax>

1330:
old  <	; GetReturnValue Â£temporary1116>
new  <>

1331:
old  <>
new  < @2882$isDigitInBase$20:>

1332:
old  < @2886$isDigitInBase$22:>
new  <	; Call 29 islower 0>

1333:
old  <	; Equal 32 Â£temporary1116 0>
new  <	mov qword [rbp + 29], @2882$isDigitInBase$21>

1334:
old  <	cmp ebx, 0>
new  <	mov [rbp + 37], rbp>

1335:
old  <	je @2886$isDigitInBase$32>
new  <	add rbp, 29>

1336:
old  <>
new  <	jmp islower>

1337:
old  < @2886$isDigitInBase$23:>
new  <>

1338:
old  <	; BinarySubtract Â£temporary1117 c 97>
new  < @2882$isDigitInBase$21:>

1339:
old  <	mov al, [rbp + 24]>
new  <	; PostCall 29>

1340:
old  <	sub al, 97>
new  <>

1341:
old  <>
new  < @2882$isDigitInBase$22:>

1342:
old  < @2886$isDigitInBase$24:>
new  <	; GetReturnValue Â£temporary1103>

1343:
old  <	; IntegralToIntegral Â£temporary1118 Â£temporary1117>
new  <>

1344:
old  <	and eax, 255>
new  < @2882$isDigitInBase$23:>

1345:
old  <	cmp al, 0>
new  <	; Equal 34 Â£temporary1103 0>

1346:
old  <	jge @2886$isDigitInBase$25>
new  <	cmp ebx, 0>

1347:
old  <	neg al>
new  <	je @2882$isDigitInBase$34>

1348:
old  <	neg eax>
new  <>

1349:
old  <>
new  < @2882$isDigitInBase$24:>

1350:
old  < @2886$isDigitInBase$25:>
new  <	; BinarySubtract Â£temporary1104 c 97>

1351:
old  <	; BinaryAdd value Â£temporary1118 10>
new  <	mov al, [rbp + 24]>

1352:
old  <	add eax, 10>
new  <	sub al, 97>

1353:
old  <	mov [rbp + 29], eax>
new  <>

1354:
old  <>
new  < @2882$isDigitInBase$25:>

1355:
old  < @2886$isDigitInBase$26:>
new  <	; IntegralToIntegral Â£temporary1105 Â£temporary1104>

1356:
old  <	; SignedLessThan 30 value 0>
new  <	and eax, 255>

1357:
old  <	cmp dword [rbp + 29], 0>
new  <	cmp al, 0>

1358:
old  <	jl @2886$isDigitInBase$30>
new  <	jge @2882$isDigitInBase$26>

1359:
old  <>
new  <	neg al>

1360:
old  < @2886$isDigitInBase$27:>
new  <	neg eax>

1361:
old  <	; SignedGreaterThanEqual 30 value base>
new  <>

1362:
old  <	mov eax, [rbp + 25]>
new  < @2882$isDigitInBase$26:>

1363:
old  <	cmp [rbp + 29], eax>
new  <	; BinaryAdd value Â£temporary1105 10>

1364:
old  <	jge @2886$isDigitInBase$30>
new  <	add eax, 10>

1365:
old  <>
new  <	mov [rbp + 29], eax>

1366:
old  < @2886$isDigitInBase$28:>
new  <>

1367:
old  <	; Assign Â£temporary1123 1>
new  < @2882$isDigitInBase$27:>

1368:
old  <	mov ebx, 1>
new  <	; SignedLessThan 31 value 0>

1369:
old  <>
new  <	cmp dword [rbp + 29], 0>

1370:
old  < @2886$isDigitInBase$29:>
new  <	jl @2882$isDigitInBase$31>

1371:
old  <	; Goto 31>
new  <>

1372:
old  <	jmp @2886$isDigitInBase$31>
new  < @2882$isDigitInBase$28:>

1373:
old  <>
new  <	; SignedGreaterThanEqual 31 value base>

1374:
old  < @2886$isDigitInBase$30:>
new  <	mov eax, [rbp + 25]>

1375:
old  <	; Assign Â£temporary1123 0>
new  <	cmp [rbp + 29], eax>

1376:
old  <	mov ebx, 0>
new  <	jge @2882$isDigitInBase$31>

1378:
old  < @2886$isDigitInBase$31:>
new  < @2882$isDigitInBase$29:>

1379:
old  <	; Return Â£temporary1123>
new  <	; Assign Â£temporary1110 1>

1380:
old  <	mov rax, [rbp]>
new  <	mov ebx, 1>

1381:
old  <	mov rdi, [rbp + 16]>
new  <>

1382:
old  <	mov rbp, [rbp + 8]>
new  < @2882$isDigitInBase$30:>

1383:
old  <	jmp rax>
new  <	; Goto 32>

1384:
old  <>
new  <	jmp @2882$isDigitInBase$32>

1385:
old  < @2886$isDigitInBase$32:>
new  <>

1386:
old  <	; PreCall 29 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < @2882$isDigitInBase$31:>

1387:
old  <>
new  <	; Assign Â£temporary1110 0>

1388:
old  < @2886$isDigitInBase$33:>
new  <	mov ebx, 0>

1389:
old  <	; IntegralToIntegral Â£temporary1124 c>
new  <>

1390:
old  <	mov al, [rbp + 24]>
new  < @2882$isDigitInBase$32:>

1391:
old  <	and eax, 255>
new  <	; SetReturnValue>

1392:
old  <	cmp al, 0>
new  <>

1393:
old  <	jge @2886$isDigitInBase$34>
new  < @2882$isDigitInBase$33:>

1394:
old  <	neg al>
new  <	; Return Â£temporary1110>

1395:
old  <	neg eax>
new  <	mov rax, [rbp]>

1396:
old  <>
new  <	mov rdi, [rbp + 16]>

1397:
old  < @2886$isDigitInBase$34:>
new  <	mov rbp, [rbp + 8]>

1398:
old  <	; Parameter 53 signedint Â£temporary1124>
new  <	jmp rax>

1399:
old  <	mov [rbp + 53], eax>
new  <>

1400:
old  <>
new  < @2882$isDigitInBase$34:>

1401:
old  < @2886$isDigitInBase$35:>
new  <	; PreCall 29 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1402:
old  <	; Call 29 isupper 0>
new  <>

1403:
old  <	mov qword [rbp + 29], @2886$isDigitInBase$36>
new  < @2882$isDigitInBase$35:>

1404:
old  <	mov [rbp + 37], rbp>
new  <	; IntegralToIntegral Â£temporary1111 c>

1405:
old  <	add rbp, 29>
new  <	mov al, [rbp + 24]>

1406:
old  <	jmp isupper>
new  <	and eax, 255>

1407:
old  <>
new  <	cmp al, 0>

1408:
old  < @2886$isDigitInBase$36:>
new  <	jge @2882$isDigitInBase$36>

1409:
old  <	; PostCall 29>
new  <	neg al>

1410:
old  <>
new  <	neg eax>

1411:
old  < @2886$isDigitInBase$37:>
new  <>

1412:
old  <	; GetReturnValue Â£temporary1125>
new  < @2882$isDigitInBase$36:>

1413:
old  <>
new  <	; Parameter 53 signedint Â£temporary1111>

1414:
old  < @2886$isDigitInBase$38:>
new  <	mov [rbp + 53], eax>

1415:
old  <	; Equal 48 Â£temporary1125 0>
new  <>

1416:
old  <	cmp ebx, 0>
new  < @2882$isDigitInBase$37:>

1417:
old  <	je @2886$isDigitInBase$48>
new  <	; Call 29 isupper 0>

1418:
old  <>
new  <	mov qword [rbp + 29], @2882$isDigitInBase$38>

1419:
old  < @2886$isDigitInBase$39:>
new  <	mov [rbp + 37], rbp>

1420:
old  <	; BinarySubtract Â£temporary1126 c 65>
new  <	add rbp, 29>

1421:
old  <	mov al, [rbp + 24]>
new  <	jmp isupper>

1422:
old  <	sub al, 65>
new  <>

1423:
old  <>
new  < @2882$isDigitInBase$38:>

1424:
old  < @2886$isDigitInBase$40:>
new  <	; PostCall 29>

1425:
old  <	; IntegralToIntegral Â£temporary1127 Â£temporary1126>
new  <>

1426:
old  <	and eax, 255>
new  < @2882$isDigitInBase$39:>

1427:
old  <	cmp al, 0>
new  <	; GetReturnValue Â£temporary1112>

1428:
old  <	jge @2886$isDigitInBase$41>
new  <>

1429:
old  <	neg al>
new  < @2882$isDigitInBase$40:>

1430:
old  <	neg eax>
new  <	; Equal 51 Â£temporary1112 0>

1431:
old  <>
new  <	cmp ebx, 0>

1432:
old  < @2886$isDigitInBase$41:>
new  <	je @2882$isDigitInBase$51>

1433:
old  <	; BinaryAdd value Â£temporary1127 10>
new  <>

1434:
old  <	add eax, 10>
new  < @2882$isDigitInBase$41:>

1435:
old  <	mov [rbp + 29], eax>
new  <	; BinarySubtract Â£temporary1113 c 65>

1436:
old  <>
new  <	mov al, [rbp + 24]>

1437:
old  < @2886$isDigitInBase$42:>
new  <	sub al, 65>

1438:
old  <	; SignedLessThan 46 value 0>
new  <>

1439:
old  <	cmp dword [rbp + 29], 0>
new  < @2882$isDigitInBase$42:>

1440:
old  <	jl @2886$isDigitInBase$46>
new  <	; IntegralToIntegral Â£temporary1114 Â£temporary1113>

1441:
old  <>
new  <	and eax, 255>

1442:
old  < @2886$isDigitInBase$43:>
new  <	cmp al, 0>

1443:
old  <	; SignedGreaterThanEqual 46 value base>
new  <	jge @2882$isDigitInBase$43>

1444:
old  <	mov eax, [rbp + 25]>
new  <	neg al>

1445:
old  <	cmp [rbp + 29], eax>
new  <	neg eax>

1446:
old  <	jge @2886$isDigitInBase$46>
new  <>

1447:
old  <>
new  < @2882$isDigitInBase$43:>

1448:
old  < @2886$isDigitInBase$44:>
new  <	; BinaryAdd value Â£temporary1114 10>

1449:
old  <	; Assign Â£temporary1132 1>
new  <	add eax, 10>

1450:
old  <	mov ebx, 1>
new  <	mov [rbp + 29], eax>

1452:
old  < @2886$isDigitInBase$45:>
new  < @2882$isDigitInBase$44:>

1453:
old  <	; Goto 47>
new  <	; SignedLessThan 48 value 0>

1454:
old  <	jmp @2886$isDigitInBase$47>
new  <	cmp dword [rbp + 29], 0>

1455:
old  <>
new  <	jl @2882$isDigitInBase$48>

1456:
old  < @2886$isDigitInBase$46:>
new  <>

1457:
old  <	; Assign Â£temporary1132 0>
new  < @2882$isDigitInBase$45:>

1458:
old  <	mov ebx, 0>
new  <	; SignedGreaterThanEqual 48 value base>

1459:
old  <>
new  <	mov eax, [rbp + 25]>

1460:
old  < @2886$isDigitInBase$47:>
new  <	cmp [rbp + 29], eax>

1461:
old  <	; Return Â£temporary1132>
new  <	jge @2882$isDigitInBase$48>

1462:
old  <	mov rax, [rbp]>
new  <>

1463:
old  <	mov rdi, [rbp + 16]>
new  < @2882$isDigitInBase$46:>

1464:
old  <	mov rbp, [rbp + 8]>
new  <	; Assign Â£temporary1119 1>

1465:
old  <	jmp rax>
new  <	mov ebx, 1>

1467:
old  < @2886$isDigitInBase$48:>
new  < @2882$isDigitInBase$47:>

1468:
old  <	; Return 0>
new  <	; Goto 49>

1469:
old  <	mov ebx, 0>
new  <	jmp @2882$isDigitInBase$49>

1470:
old  <	mov rax, [rbp]>
new  <>

1471:
old  <	mov rdi, [rbp + 16]>
new  < @2882$isDigitInBase$48:>

1472:
old  <	mov rbp, [rbp + 8]>
new  <	; Assign Â£temporary1119 0>

1473:
old  <	jmp rax>
new  <	mov ebx, 0>

1475:
old  < @2886$isDigitInBase$49:>
new  < @2882$isDigitInBase$49:>

1476:
old  <	; FunctionEnd isDigitInBase>
new  <	; SetReturnValue>

1478:
old  <section .text>
new  < @2882$isDigitInBase$50:>

1479:
old  <>
new  <	; Return Â£temporary1119>

1480:
old  < @2894$digitToValue:>
new  <	mov rax, [rbp]>

1481:
old  <	; PreCall 25 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov rdi, [rbp + 16]>

1482:
old  <>
new  <	mov rbp, [rbp + 8]>

1483:
old  < @2894$digitToValue$1:>
new  <	jmp rax>

1484:
old  <	; IntegralToIntegral Â£temporary1136 c>
new  <>

1485:
old  <	mov al, [rbp + 24]>
new  < @2882$isDigitInBase$51:>

1486:
old  <	and eax, 255>
new  <	; SetReturnValue>

1487:
old  <	cmp al, 0>
new  <>

1488:
old  <	jge @2894$digitToValue$2>
new  < @2882$isDigitInBase$52:>

1489:
old  <	neg al>
new  <	; Return 0>

1490:
old  <	neg eax>
new  <	mov ebx, 0>

1491:
old  <>
new  <	mov rax, [rbp]>

1492:
old  < @2894$digitToValue$2:>
new  <	mov rdi, [rbp + 16]>

1493:
old  <	; Parameter 49 signedint Â£temporary1136>
new  <	mov rbp, [rbp + 8]>

1494:
old  <	mov [rbp + 49], eax>
new  <	jmp rax>

1496:
old  < @2894$digitToValue$3:>
new  < @2882$isDigitInBase$53:>

1497:
old  <	; Call 25 isdigit 0>
new  <	; FunctionEnd isDigitInBase>

1498:
old  <	mov qword [rbp + 25], @2894$digitToValue$4>
new  <>

1499:
old  <	mov [rbp + 33], rbp>
new  <section .text>

1500:
old  <	add rbp, 25>
new  <>

1501:
old  <	jmp isdigit>
new  < @2890$digitToValue:>

1502:
old  <>
new  <	; PreCall 25 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1503:
old  < @2894$digitToValue$4:>
new  <>

1504:
old  <	; PostCall 25>
new  < @2890$digitToValue$1:>

1505:
old  <>
new  <	; IntegralToIntegral Â£temporary1123 c>

1506:
old  < @2894$digitToValue$5:>
new  <	mov al, [rbp + 24]>

1507:
old  <	; GetReturnValue Â£temporary1137>
new  <	and eax, 255>

1508:
old  <>
new  <	cmp al, 0>

1509:
old  < @2894$digitToValue$6:>
new  <	jge @2890$digitToValue$2>

1510:
old  <	; Equal 10 Â£temporary1137 0>
new  <	neg al>

1511:
old  <	cmp ebx, 0>
new  <	neg eax>

1512:
old  <	je @2894$digitToValue$10>
new  <>

1513:
old  <>
new  < @2890$digitToValue$2:>

1514:
old  < @2894$digitToValue$7:>
new  <	; Parameter 49 signedint Â£temporary1123>

1515:
old  <	; BinarySubtract Â£temporary1138 c 48>
new  <	mov [rbp + 49], eax>

1516:
old  <	mov bl, [rbp + 24]>
new  <>

1517:
old  <	sub bl, 48>
new  < @2890$digitToValue$3:>

1518:
old  <>
new  <	; Call 25 isdigit 0>

1519:
old  < @2894$digitToValue$8:>
new  <	mov qword [rbp + 25], @2890$digitToValue$4>

1520:
old  <	; IntegralToIntegral Â£temporary1139 Â£temporary1138>
new  <	mov [rbp + 33], rbp>

1521:
old  <	and ebx, 255>
new  <	add rbp, 25>

1522:
old  <	cmp bl, 0>
new  <	jmp isdigit>

1523:
old  <	jge @2894$digitToValue$9>
new  <>

1524:
old  <	neg bl>
new  < @2890$digitToValue$4:>

1525:
old  <	neg ebx>
new  <	; PostCall 25>

1527:
old  < @2894$digitToValue$9:>
new  < @2890$digitToValue$5:>

1528:
old  <	; Return Â£temporary1139>
new  <	; GetReturnValue Â£temporary1124>

1529:
old  <	mov rax, [rbp]>
new  <>

1530:
old  <	mov rdi, [rbp + 16]>
new  < @2890$digitToValue$6:>

1531:
old  <	mov rbp, [rbp + 8]>
new  <	; Equal 11 Â£temporary1124 0>

1532:
old  <	jmp rax>
new  <	cmp ebx, 0>

1533:
old  <>
new  <	je @2890$digitToValue$11>

1534:
old  < @2894$digitToValue$10:>
new  <>

1535:
old  <	; PreCall 25 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < @2890$digitToValue$7:>

1536:
old  <>
new  <	; BinarySubtract Â£temporary1125 c 48>

1537:
old  < @2894$digitToValue$11:>
new  <	mov bl, [rbp + 24]>

1538:
old  <	; IntegralToIntegral Â£temporary1140 c>
new  <	sub bl, 48>

1539:
old  <	mov al, [rbp + 24]>
new  <>

1540:
old  <	and eax, 255>
new  < @2890$digitToValue$8:>

1541:
old  <	cmp al, 0>
new  <	; IntegralToIntegral Â£temporary1126 Â£temporary1125>

1542:
old  <	jge @2894$digitToValue$12>
new  <	and ebx, 255>

1543:
old  <	neg al>
new  <	cmp bl, 0>

1544:
old  <	neg eax>
new  <	jge @2890$digitToValue$9>

1545:
old  <>
new  <	neg bl>

1546:
old  < @2894$digitToValue$12:>
new  <	neg ebx>

1547:
old  <	; Parameter 49 signedint Â£temporary1140>
new  <>

1548:
old  <	mov [rbp + 49], eax>
new  < @2890$digitToValue$9:>

1549:
old  <>
new  <	; SetReturnValue>

1550:
old  < @2894$digitToValue$13:>
new  <>

1551:
old  <	; Call 25 islower 0>
new  < @2890$digitToValue$10:>

1552:
old  <	mov qword [rbp + 25], @2894$digitToValue$14>
new  <	; Return Â£temporary1126>

1553:
old  <	mov [rbp + 33], rbp>
new  <	mov rax, [rbp]>

1554:
old  <	add rbp, 25>
new  <	mov rdi, [rbp + 16]>

1555:
old  <	jmp islower>
new  <	mov rbp, [rbp + 8]>

1556:
old  <>
new  <	jmp rax>

1557:
old  < @2894$digitToValue$14:>
new  <>

1558:
old  <	; PostCall 25>
new  < @2890$digitToValue$11:>

1559:
old  <>
new  <	; PreCall 25 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1560:
old  < @2894$digitToValue$15:>
new  <>

1561:
old  <	; GetReturnValue Â£temporary1141>
new  < @2890$digitToValue$12:>

1562:
old  <>
new  <	; IntegralToIntegral Â£temporary1127 c>

1563:
old  < @2894$digitToValue$16:>
new  <	mov al, [rbp + 24]>

1564:
old  <	; Equal 21 Â£temporary1141 0>
new  <	and eax, 255>

1565:
old  <	cmp ebx, 0>
new  <	cmp al, 0>

1566:
old  <	je @2894$digitToValue$21>
new  <	jge @2890$digitToValue$13>

1567:
old  <>
new  <	neg al>

1568:
old  < @2894$digitToValue$17:>
new  <	neg eax>

1569:
old  <	; BinarySubtract Â£temporary1142 c 97>
new  <>

1570:
old  <	mov bl, [rbp + 24]>
new  < @2890$digitToValue$13:>

1571:
old  <	sub bl, 97>
new  <	; Parameter 49 signedint Â£temporary1127>

1572:
old  <>
new  <	mov [rbp + 49], eax>

1573:
old  < @2894$digitToValue$18:>
new  <>

1574:
old  <	; IntegralToIntegral Â£temporary1143 Â£temporary1142>
new  < @2890$digitToValue$14:>

1575:
old  <	and ebx, 255>
new  <	; Call 25 islower 0>

1576:
old  <	cmp bl, 0>
new  <	mov qword [rbp + 25], @2890$digitToValue$15>

1577:
old  <	jge @2894$digitToValue$19>
new  <	mov [rbp + 33], rbp>

1578:
old  <	neg bl>
new  <	add rbp, 25>

1579:
old  <	neg ebx>
new  <	jmp islower>

1581:
old  < @2894$digitToValue$19:>
new  < @2890$digitToValue$15:>

1582:
old  <	; BinaryAdd Â£temporary1144 Â£temporary1143 10>
new  <	; PostCall 25>

1583:
old  <	add ebx, 10>
new  <>

1584:
old  <>
new  < @2890$digitToValue$16:>

1585:
old  < @2894$digitToValue$20:>
new  <	; GetReturnValue Â£temporary1128>

1586:
old  <	; Return Â£temporary1144>
new  <>

1587:
old  <	mov rax, [rbp]>
new  < @2890$digitToValue$17:>

1588:
old  <	mov rdi, [rbp + 16]>
new  <	; Equal 23 Â£temporary1128 0>

1589:
old  <	mov rbp, [rbp + 8]>
new  <	cmp ebx, 0>

1590:
old  <	jmp rax>
new  <	je @2890$digitToValue$23>

1592:
old  < @2894$digitToValue$21:>
new  < @2890$digitToValue$18:>

1593:
old  <	; PreCall 25 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; BinarySubtract Â£temporary1129 c 97>

1594:
old  <>
new  <	mov bl, [rbp + 24]>

1595:
old  < @2894$digitToValue$22:>
new  <	sub bl, 97>

1596:
old  <	; IntegralToIntegral Â£temporary1145 c>
new  <>

1597:
old  <	mov al, [rbp + 24]>
new  < @2890$digitToValue$19:>

1598:
old  <	and eax, 255>
new  <	; IntegralToIntegral Â£temporary1130 Â£temporary1129>

1599:
old  <	cmp al, 0>
new  <	and ebx, 255>

1600:
old  <	jge @2894$digitToValue$23>
new  <	cmp bl, 0>

1601:
old  <	neg al>
new  <	jge @2890$digitToValue$20>

1602:
old  <	neg eax>
new  <	neg bl>

1603:
old  <>
new  <	neg ebx>

1604:
old  < @2894$digitToValue$23:>
new  <>

1605:
old  <	; Parameter 49 signedint Â£temporary1145>
new  < @2890$digitToValue$20:>

1606:
old  <	mov [rbp + 49], eax>
new  <	; BinaryAdd Â£temporary1131 Â£temporary1130 10>

1607:
old  <>
new  <	add ebx, 10>

1608:
old  < @2894$digitToValue$24:>
new  <>

1609:
old  <	; Call 25 isupper 0>
new  < @2890$digitToValue$21:>

1610:
old  <	mov qword [rbp + 25], @2894$digitToValue$25>
new  <	; SetReturnValue>

1611:
old  <	mov [rbp + 33], rbp>
new  <>

1612:
old  <	add rbp, 25>
new  < @2890$digitToValue$22:>

1613:
old  <	jmp isupper>
new  <	; Return Â£temporary1131>

1614:
old  <>
new  <	mov rax, [rbp]>

1615:
old  < @2894$digitToValue$25:>
new  <	mov rdi, [rbp + 16]>

1616:
old  <	; PostCall 25>
new  <	mov rbp, [rbp + 8]>

1617:
old  <>
new  <	jmp rax>

1618:
old  < @2894$digitToValue$26:>
new  <>

1619:
old  <	; GetReturnValue Â£temporary1146>
new  < @2890$digitToValue$23:>

1620:
old  <>
new  <	; PreCall 25 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1621:
old  < @2894$digitToValue$27:>
new  <>

1622:
old  <	; Equal 32 Â£temporary1146 0>
new  < @2890$digitToValue$24:>

1623:
old  <	cmp ebx, 0>
new  <	; IntegralToIntegral Â£temporary1132 c>

1624:
old  <	je @2894$digitToValue$32>
new  <	mov al, [rbp + 24]>

1625:
old  <>
new  <	and eax, 255>

1626:
old  < @2894$digitToValue$28:>
new  <	cmp al, 0>

1627:
old  <	; BinarySubtract Â£temporary1147 c 65>
new  <	jge @2890$digitToValue$25>

1628:
old  <	mov bl, [rbp + 24]>
new  <	neg al>

1629:
old  <	sub bl, 65>
new  <	neg eax>

1631:
old  < @2894$digitToValue$29:>
new  < @2890$digitToValue$25:>

1632:
old  <	; IntegralToIntegral Â£temporary1148 Â£temporary1147>
new  <	; Parameter 49 signedint Â£temporary1132>

1633:
old  <	and ebx, 255>
new  <	mov [rbp + 49], eax>

1634:
old  <	cmp bl, 0>
new  <>

1635:
old  <	jge @2894$digitToValue$30>
new  < @2890$digitToValue$26:>

1636:
old  <	neg bl>
new  <	; Call 25 isupper 0>

1637:
old  <	neg ebx>
new  <	mov qword [rbp + 25], @2890$digitToValue$27>

1638:
old  <>
new  <	mov [rbp + 33], rbp>

1639:
old  < @2894$digitToValue$30:>
new  <	add rbp, 25>

1640:
old  <	; BinaryAdd Â£temporary1149 Â£temporary1148 10>
new  <	jmp isupper>

1641:
old  <	add ebx, 10>
new  <>

1642:
old  <>
new  < @2890$digitToValue$27:>

1643:
old  < @2894$digitToValue$31:>
new  <	; PostCall 25>

1644:
old  <	; Return Â£temporary1149>
new  <>

1645:
old  <	mov rax, [rbp]>
new  < @2890$digitToValue$28:>

1646:
old  <	mov rdi, [rbp + 16]>
new  <	; GetReturnValue Â£temporary1133>

1647:
old  <	mov rbp, [rbp + 8]>
new  <>

1648:
old  <	jmp rax>
new  < @2890$digitToValue$29:>

1649:
old  <>
new  <	; Equal 35 Â£temporary1133 0>

1650:
old  < @2894$digitToValue$32:>
new  <	cmp ebx, 0>

1651:
old  <	; Return 0>
new  <	je @2890$digitToValue$35>

1652:
old  <	mov ebx, 0>
new  <>

1653:
old  <	mov rax, [rbp]>
new  < @2890$digitToValue$30:>

1654:
old  <	mov rdi, [rbp + 16]>
new  <	; BinarySubtract Â£temporary1134 c 65>

1655:
old  <	mov rbp, [rbp + 8]>
new  <	mov bl, [rbp + 24]>

1656:
old  <	jmp rax>
new  <	sub bl, 65>

1658:
old  < @2894$digitToValue$33:>
new  < @2890$digitToValue$31:>

1659:
old  <	; FunctionEnd digitToValue>
new  <	; IntegralToIntegral Â£temporary1135 Â£temporary1134>

1660:
old  <>
new  <	and ebx, 255>

1661:
old  <section .text>
new  <	cmp bl, 0>

1662:
old  <>
new  <	jge @2890$digitToValue$32>

1663:
old  < scanLongInt:>
new  <	neg bl>

1664:
old  <	; Assign longValue 0>
new  <	neg ebx>

1665:
old  <	mov qword [rbp + 28], 0>
new  <>

1666:
old  <>
new  < @2890$digitToValue$32:>

1667:
old  < scanLongInt$1:>
new  <	; BinaryAdd Â£temporary1136 Â£temporary1135 10>

1668:
old  <	; Assign minus 0>
new  <	add ebx, 10>

1669:
old  <	mov dword [rbp + 36], 0>
new  <>

1670:
old  <>
new  < @2890$digitToValue$33:>

1671:
old  < scanLongInt$2:>
new  <	; SetReturnValue>

1672:
old  <	; Assign found 0>
new  <>

1673:
old  <	mov dword [rbp + 40], 0>
new  < @2890$digitToValue$34:>

1674:
old  <>
new  <	; Return Â£temporary1136>

1675:
old  < scanLongInt$3:>
new  <	mov rax, [rbp]>

1676:
old  <	; PreCall 44 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov rdi, [rbp + 16]>

1677:
old  <>
new  <	mov rbp, [rbp + 8]>

1678:
old  < scanLongInt$4:>
new  <	jmp rax>

1679:
old  <	; Call 44 scanChar 0>
new  <>

1680:
old  <	mov qword [rbp + 44], scanLongInt$5>
new  < @2890$digitToValue$35:>

1681:
old  <	mov [rbp + 52], rbp>
new  <	; SetReturnValue>

1682:
old  <	add rbp, 44>
new  <>

1683:
old  <	jmp scanChar>
new  < @2890$digitToValue$36:>

1684:
old  <>
new  <	; Return 0>

1685:
old  < scanLongInt$5:>
new  <	mov ebx, 0>

1686:
old  <	; PostCall 44>
new  <	mov rax, [rbp]>

1687:
old  <>
new  <	mov rdi, [rbp + 16]>

1688:
old  < scanLongInt$6:>
new  <	mov rbp, [rbp + 8]>

1689:
old  <	; GetReturnValue Â£temporary1153>
new  <	jmp rax>

1691:
old  < scanLongInt$7:>
new  < @2890$digitToValue$37:>

1692:
old  <	; Assign input Â£temporary1153>
new  <	; FunctionEnd digitToValue>

1693:
old  <	mov [rbp + 44], bl>
new  <>

1694:
old  <>
new  <section .text>

1695:
old  < scanLongInt$8:>
new  <>

1696:
old  <	; PreCall 45 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < scanLongInt:>

1697:
old  <>
new  <	; Assign longValue 0>

1698:
old  < scanLongInt$9:>
new  <	mov qword [rbp + 28], 0>

1699:
old  <	; IntegralToIntegral Â£temporary1154 input>
new  <>

1700:
old  <	mov al, [rbp + 44]>
new  < scanLongInt$1:>

1701:
old  <	and eax, 255>
new  <	; Assign minus 0>

1702:
old  <	cmp al, 0>
new  <	mov dword [rbp + 36], 0>

1703:
old  <	jge scanLongInt$10>
new  <>

1704:
old  <	neg al>
new  < scanLongInt$2:>

1705:
old  <	neg eax>
new  <	; Assign found 0>

1706:
old  <>
new  <	mov dword [rbp + 40], 0>

1707:
old  < scanLongInt$10:>
new  <>

1708:
old  <	; Parameter 69 signedint Â£temporary1154>
new  < scanLongInt$3:>

1709:
old  <	mov [rbp + 69], eax>
new  <	; PreCall 44 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1711:
old  < scanLongInt$11:>
new  < scanLongInt$4:>

1712:
old  <	; Call 45 isspace 0>
new  <	; Call 44 scanChar 0>

1713:
old  <	mov qword [rbp + 45], scanLongInt$12>
new  <	mov qword [rbp + 44], scanLongInt$5>

1714:
old  <	mov [rbp + 53], rbp>
new  <	mov [rbp + 52], rbp>

1715:
old  <	add rbp, 45>
new  <	add rbp, 44>

1716:
old  <	jmp isspace>
new  <	jmp scanChar>

1718:
old  < scanLongInt$12:>
new  < scanLongInt$5:>

1719:
old  <	; PostCall 45>
new  <	; PostCall 44>

1721:
old  < scanLongInt$13:>
new  < scanLongInt$6:>

1722:
old  <	; GetReturnValue Â£temporary1155>
new  <	; GetReturnValue Â£temporary1140>

1724:
old  < scanLongInt$14:>
new  < scanLongInt$7:>

1725:
old  <	; Equal 21 Â£temporary1155 0>
new  <	; Assign input Â£temporary1140>

1726:
old  <	cmp ebx, 0>
new  <	mov [rbp + 44], bl>

1727:
old  <	je scanLongInt$21>
new  <>

1728:
old  <>
new  < scanLongInt$8:>

1729:
old  < scanLongInt$15:>
new  <	; PreCall 45 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1730:
old  <	; PreCall 45 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1731:
old  <>
new  < scanLongInt$9:>

1732:
old  < scanLongInt$16:>
new  <	; IntegralToIntegral Â£temporary1141 input>

1733:
old  <	; Call 45 scanChar 0>
new  <	mov al, [rbp + 44]>

1734:
old  <	mov qword [rbp + 45], scanLongInt$17>
new  <	and eax, 255>

1735:
old  <	mov [rbp + 53], rbp>
new  <	cmp al, 0>

1736:
old  <	add rbp, 45>
new  <	jge scanLongInt$10>

1737:
old  <	jmp scanChar>
new  <	neg al>

1738:
old  <>
new  <	neg eax>

1739:
old  < scanLongInt$17:>
new  <>

1740:
old  <	; PostCall 45>
new  < scanLongInt$10:>

1741:
old  <>
new  <	; Parameter 69 signedint Â£temporary1141>

1742:
old  < scanLongInt$18:>
new  <	mov [rbp + 69], eax>

1743:
old  <	; GetReturnValue Â£temporary1156>
new  <>

1744:
old  <>
new  < scanLongInt$11:>

1745:
old  < scanLongInt$19:>
new  <	; Call 45 isspace 0>

1746:
old  <	; Assign input Â£temporary1156>
new  <	mov qword [rbp + 45], scanLongInt$12>

1747:
old  <	mov [rbp + 44], bl>
new  <	mov [rbp + 53], rbp>

1748:
old  <>
new  <	add rbp, 45>

1749:
old  < scanLongInt$20:>
new  <	jmp isspace>

1750:
old  <	; Goto 8>
new  <>

1751:
old  <	jmp scanLongInt$8>
new  < scanLongInt$12:>

1752:
old  <>
new  <	; PostCall 45>

1753:
old  < scanLongInt$21:>
new  <>

1754:
old  <	; NotEqual 28 input 43>
new  < scanLongInt$13:>

1755:
old  <	cmp byte [rbp + 44], 43>
new  <	; GetReturnValue Â£temporary1142>

1756:
old  <	jne scanLongInt$28>
new  <>

1757:
old  <>
new  < scanLongInt$14:>

1758:
old  < scanLongInt$22:>
new  <	; Equal 21 Â£temporary1142 0>

1759:
old  <	; PreCall 45 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	cmp ebx, 0>

1760:
old  <>
new  <	je scanLongInt$21>

1761:
old  < scanLongInt$23:>
new  <>

1762:
old  <	; Call 45 scanChar 0>
new  < scanLongInt$15:>

1763:
old  <	mov qword [rbp + 45], scanLongInt$24>
new  <	; PreCall 45 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1764:
old  <	mov [rbp + 53], rbp>
new  <>

1765:
old  <	add rbp, 45>
new  < scanLongInt$16:>

1766:
old  <	jmp scanChar>
new  <	; Call 45 scanChar 0>

1767:
old  <>
new  <	mov qword [rbp + 45], scanLongInt$17>

1768:
old  < scanLongInt$24:>
new  <	mov [rbp + 53], rbp>

1769:
old  <	; PostCall 45>
new  <	add rbp, 45>

1770:
old  <>
new  <	jmp scanChar>

1771:
old  < scanLongInt$25:>
new  <>

1772:
old  <	; GetReturnValue Â£temporary1159>
new  < scanLongInt$17:>

1773:
old  <>
new  <	; PostCall 45>

1774:
old  < scanLongInt$26:>
new  <>

1775:
old  <	; Assign input Â£temporary1159>
new  < scanLongInt$18:>

1776:
old  <	mov [rbp + 44], bl>
new  <	; GetReturnValue Â£temporary1143>

1778:
old  < scanLongInt$27:>
new  < scanLongInt$19:>

1779:
old  <	; Goto 35>
new  <	; Assign input Â£temporary1143>

1780:
old  <	jmp scanLongInt$35>
new  <	mov [rbp + 44], bl>

1782:
old  < scanLongInt$28:>
new  < scanLongInt$20:>

1783:
old  <	; NotEqual 35 input 45>
new  <	; Goto 8>

1784:
old  <	cmp byte [rbp + 44], 45>
new  <	jmp scanLongInt$8>

1785:
old  <	jne scanLongInt$35>
new  <>

1786:
old  <>
new  < scanLongInt$21:>

1787:
old  < scanLongInt$29:>
new  <	; NotEqual 28 input 43>

1788:
old  <	; Assign minus 1>
new  <	cmp byte [rbp + 44], 43>

1789:
old  <	mov dword [rbp + 36], 1>
new  <	jne scanLongInt$28>

1791:
old  < scanLongInt$30:>
new  < scanLongInt$22:>

1794:
old  < scanLongInt$31:>
new  < scanLongInt$23:>

1796:
old  <	mov qword [rbp + 45], scanLongInt$32>
new  <	mov qword [rbp + 45], scanLongInt$24>

1801:
old  < scanLongInt$32:>
new  < scanLongInt$24:>

1804:
old  < scanLongInt$33:>
new  < scanLongInt$25:>

1805:
old  <	; GetReturnValue Â£temporary1161>
new  <	; GetReturnValue Â£temporary1146>

1807:
old  < scanLongInt$34:>
new  < scanLongInt$26:>

1808:
old  <	; Assign input Â£temporary1161>
new  <	; Assign input Â£temporary1146>

1811:
old  < scanLongInt$35:>
new  < scanLongInt$27:>

1812:
old  <	; NotEqual 59 base 0>
new  <	; Goto 35>

1813:
old  <	cmp dword [rbp + 24], 0>
new  <	jmp scanLongInt$35>

1814:
old  <	jne scanLongInt$59>
new  <>

1815:
old  <>
new  < scanLongInt$28:>

1816:
old  < scanLongInt$36:>
new  <	; NotEqual 35 input 45>

1817:
old  <	; NotEqual 58 input 48>
new  <	cmp byte [rbp + 44], 45>

1818:
old  <	cmp byte [rbp + 44], 48>
new  <	jne scanLongInt$35>

1819:
old  <	jne scanLongInt$58>
new  <>

1820:
old  <>
new  < scanLongInt$29:>

1821:
old  < scanLongInt$37:>
new  <	; Assign minus 1>

1822:
old  <	; PreCall 45 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov dword [rbp + 36], 1>

1824:
old  < scanLongInt$38:>
new  < scanLongInt$30:>

1825:
old  <	; Call 45 scanChar 0>
new  <	; PreCall 45 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1826:
old  <	mov qword [rbp + 45], scanLongInt$39>
new  <>

1827:
old  <	mov [rbp + 53], rbp>
new  < scanLongInt$31:>

1828:
old  <	add rbp, 45>
new  <	; Call 45 scanChar 0>

1829:
old  <	jmp scanChar>
new  <	mov qword [rbp + 45], scanLongInt$32>

1830:
old  <>
new  <	mov [rbp + 53], rbp>

1831:
old  < scanLongInt$39:>
new  <	add rbp, 45>

1832:
old  <	; PostCall 45>
new  <	jmp scanChar>

1834:
old  < scanLongInt$40:>
new  < scanLongInt$32:>

1835:
old  <	; GetReturnValue Â£temporary1164>
new  <	; PostCall 45>

1837:
old  < scanLongInt$41:>
new  < scanLongInt$33:>

1838:
old  <	; Assign input Â£temporary1164>
new  <	; GetReturnValue Â£temporary1148>

1839:
old  <	mov [rbp + 44], bl>
new  <>

1840:
old  <>
new  < scanLongInt$34:>

1841:
old  < scanLongInt$42:>
new  <	; Assign input Â£temporary1148>

1842:
old  <	; PreCall 45 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov [rbp + 44], bl>

1844:
old  < scanLongInt$43:>
new  < scanLongInt$35:>

1845:
old  <	; IntegralToIntegral Â£temporary1165 input>
new  <	; NotEqual 59 base 0>

1846:
old  <	mov al, [rbp + 44]>
new  <	cmp dword [rbp + 24], 0>

1847:
old  <	and eax, 255>
new  <	jne scanLongInt$59>

1848:
old  <	cmp al, 0>
new  <>

1849:
old  <	jge scanLongInt$44>
new  < scanLongInt$36:>

1850:
old  <	neg al>
new  <	; NotEqual 58 input 48>

1851:
old  <	neg eax>
new  <	cmp byte [rbp + 44], 48>

1852:
old  <>
new  <	jne scanLongInt$58>

1853:
old  < scanLongInt$44:>
new  <>

1854:
old  <	; Parameter 69 signedint Â£temporary1165>
new  < scanLongInt$37:>

1855:
old  <	mov [rbp + 69], eax>
new  <	; PreCall 45 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1857:
old  < scanLongInt$45:>
new  < scanLongInt$38:>

1858:
old  <	; Call 45 tolower 0>
new  <	; Call 45 scanChar 0>

1859:
old  <	mov qword [rbp + 45], scanLongInt$46>
new  <	mov qword [rbp + 45], scanLongInt$39>

1862:
old  <	jmp tolower>
new  <	jmp scanChar>

1864:
old  < scanLongInt$46:>
new  < scanLongInt$39:>

1867:
old  < scanLongInt$47:>
new  < scanLongInt$40:>

1868:
old  <	; GetReturnValue Â£temporary1166>
new  <	; GetReturnValue Â£temporary1151>

1870:
old  < scanLongInt$48:>
new  < scanLongInt$41:>

1871:
old  <	; NotEqual 56 Â£temporary1166 120>
new  <	; Assign input Â£temporary1151>

1872:
old  <	cmp ebx, 120>
new  <	mov [rbp + 44], bl>

1873:
old  <	jne scanLongInt$56>
new  <>

1874:
old  <>
new  < scanLongInt$42:>

1875:
old  < scanLongInt$49:>
new  <	; PreCall 45 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1876:
old  <	; Assign base 16>
new  <>

1877:
old  <	mov dword [rbp + 24], 16>
new  < scanLongInt$43:>

1878:
old  <>
new  <	; IntegralToIntegral Â£temporary1152 input>

1879:
old  < scanLongInt$50:>
new  <	mov al, [rbp + 44]>

1880:
old  <	; PreCall 45 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	and eax, 255>

1881:
old  <>
new  <	cmp al, 0>

1882:
old  < scanLongInt$51:>
new  <	jge scanLongInt$44>

1883:
old  <	; Call 45 scanChar 0>
new  <	neg al>

1884:
old  <	mov qword [rbp + 45], scanLongInt$52>
new  <	neg eax>

1885:
old  <	mov [rbp + 53], rbp>
new  <>

1886:
old  <	add rbp, 45>
new  < scanLongInt$44:>

1887:
old  <	jmp scanChar>
new  <	; Parameter 69 signedint Â£temporary1152>

1888:
old  <>
new  <	mov [rbp + 69], eax>

1889:
old  < scanLongInt$52:>
new  <>

1890:
old  <	; PostCall 45>
new  < scanLongInt$45:>

1891:
old  <>
new  <	; Call 45 tolower 0>

1892:
old  < scanLongInt$53:>
new  <	mov qword [rbp + 45], scanLongInt$46>

1893:
old  <	; GetReturnValue Â£temporary1168>
new  <	mov [rbp + 53], rbp>

1894:
old  <>
new  <	add rbp, 45>

1895:
old  < scanLongInt$54:>
new  <	jmp tolower>

1896:
old  <	; Assign input Â£temporary1168>
new  <>

1897:
old  <	mov [rbp + 44], bl>
new  < scanLongInt$46:>

1898:
old  <>
new  <	; PostCall 45>

1899:
old  < scanLongInt$55:>
new  <>

1900:
old  <	; Goto 59>
new  < scanLongInt$47:>

1901:
old  <	jmp scanLongInt$59>
new  <	; GetReturnValue Â£temporary1153>

1903:
old  < scanLongInt$56:>
new  < scanLongInt$48:>

1904:
old  <	; Assign base 8>
new  <	; NotEqual 56 Â£temporary1153 120>

1905:
old  <	mov dword [rbp + 24], 8>
new  <	cmp ebx, 120>

1906:
old  <>
new  <	jne scanLongInt$56>

1907:
old  < scanLongInt$57:>
new  <>

1908:
old  <	; Goto 59>
new  < scanLongInt$49:>

1909:
old  <	jmp scanLongInt$59>
new  <	; Assign base 16>

1910:
old  <>
new  <	mov dword [rbp + 24], 16>

1911:
old  < scanLongInt$58:>
new  <>

1912:
old  <	; Assign base 10>
new  < scanLongInt$50:>

1913:
old  <	mov dword [rbp + 24], 10>
new  <	; PreCall 45 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1915:
old  < scanLongInt$59:>
new  < scanLongInt$51:>

1916:
old  <	; PreCall 45 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Call 45 scanChar 0>

1917:
old  <>
new  <	mov qword [rbp + 45], scanLongInt$52>

1918:
old  < scanLongInt$60:>
new  <	mov [rbp + 53], rbp>

1919:
old  <	; Parameter 69 signedchar input>
new  <	add rbp, 45>

1920:
old  <	mov al, [rbp + 44]>
new  <	jmp scanChar>

1921:
old  <	mov [rbp + 69], al>
new  <>

1922:
old  <>
new  < scanLongInt$52:>

1923:
old  < scanLongInt$61:>
new  <	; PostCall 45>

1924:
old  <	; Parameter 70 signedint base>
new  <>

1925:
old  <	mov eax, [rbp + 24]>
new  < scanLongInt$53:>

1926:
old  <	mov [rbp + 70], eax>
new  <	; GetReturnValue Â£temporary1155>

1928:
old  < scanLongInt$62:>
new  < scanLongInt$54:>

1929:
old  <	; Call 45 isDigitInBase 0>
new  <	; Assign input Â£temporary1155>

1930:
old  <	mov qword [rbp + 45], scanLongInt$63>
new  <	mov [rbp + 44], bl>

1931:
old  <	mov [rbp + 53], rbp>
new  <>

1932:
old  <	add rbp, 45>
new  < scanLongInt$55:>

1933:
old  <	jmp @2886$isDigitInBase>
new  <	; Goto 59>

1934:
old  <>
new  <	jmp scanLongInt$59>

1935:
old  < scanLongInt$63:>
new  <>

1936:
old  <	; PostCall 45>
new  < scanLongInt$56:>

1937:
old  <>
new  <	; Assign base 8>

1938:
old  < scanLongInt$64:>
new  <	mov dword [rbp + 24], 8>

1939:
old  <	; GetReturnValue Â£temporary1169>
new  <>

1940:
old  <>
new  < scanLongInt$57:>

1941:
old  < scanLongInt$65:>
new  <	; Goto 59>

1942:
old  <	; Equal 82 Â£temporary1169 0>
new  <	jmp scanLongInt$59>

1943:
old  <	cmp ebx, 0>
new  <>

1944:
old  <	je scanLongInt$82>
new  < scanLongInt$58:>

1945:
old  <>
new  <	; Assign base 10>

1946:
old  < scanLongInt$66:>
new  <	mov dword [rbp + 24], 10>

1947:
old  <	; IntegralToIntegral Â£temporary1170 base>
new  <>

1948:
old  <	mov ebx, [rbp + 24]>
new  < scanLongInt$59:>

1949:
old  <	mov rax, 4294967295>
new  <	; PreCall 45 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1950:
old  <	and rbx, rax>
new  <>

1951:
old  <	cmp ebx, 0>
new  < scanLongInt$60:>

1952:
old  <	jge scanLongInt$67>
new  <	; Parameter 69 signedchar input>

1953:
old  <	neg ebx>
new  <	mov al, [rbp + 44]>

1954:
old  <	neg rbx>
new  <	mov [rbp + 69], al>

1956:
old  < scanLongInt$67:>
new  < scanLongInt$61:>

1957:
old  <	; SignedMultiply longValue longValue Â£temporary1170>
new  <	; Parameter 70 signedint base>

1958:
old  <	mov rax, [rbp + 28]>
new  <	mov eax, [rbp + 24]>

1959:
old  <	xor rdx, rdx>
new  <	mov [rbp + 70], eax>

1960:
old  <	imul rbx>
new  <>

1961:
old  <	mov [rbp + 28], rax>
new  < scanLongInt$62:>

1962:
old  <>
new  <	; Call 45 isDigitInBase 0>

1963:
old  < scanLongInt$68:>
new  <	mov qword [rbp + 45], scanLongInt$63>

1964:
old  <	; PreCall 45 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov [rbp + 53], rbp>

1965:
old  <>
new  <	add rbp, 45>

1966:
old  < scanLongInt$69:>
new  <	jmp @2882$isDigitInBase>

1967:
old  <	; Parameter 69 signedchar input>
new  <>

1968:
old  <	mov al, [rbp + 44]>
new  < scanLongInt$63:>

1969:
old  <	mov [rbp + 69], al>
new  <	; PostCall 45>

1971:
old  < scanLongInt$70:>
new  < scanLongInt$64:>

1972:
old  <	; Call 45 digitToValue 0>
new  <	; GetReturnValue Â£temporary1156>

1973:
old  <	mov qword [rbp + 45], scanLongInt$71>
new  <>

1974:
old  <	mov [rbp + 53], rbp>
new  < scanLongInt$65:>

1975:
old  <	add rbp, 45>
new  <	; Equal 82 Â£temporary1156 0>

1976:
old  <	jmp @2894$digitToValue>
new  <	cmp ebx, 0>

1977:
old  <>
new  <	je scanLongInt$82>

1978:
old  < scanLongInt$71:>
new  <>

1979:
old  <	; PostCall 45>
new  < scanLongInt$66:>

1980:
old  <>
new  <	; IntegralToIntegral Â£temporary1157 base>

1981:
old  < scanLongInt$72:>
new  <	mov ebx, [rbp + 24]>

1982:
old  <	; GetReturnValue Â£temporary1172>
new  <	mov rax, 4294967295>

1983:
old  <>
new  <	and rbx, rax>

1984:
old  < scanLongInt$73:>
new  <	cmp ebx, 0>

1985:
old  <	; IntegralToIntegral Â£temporary1173 Â£temporary1172>
new  <	jge scanLongInt$67>

1986:
old  <	mov rax, 4294967295>
new  <	neg ebx>

1987:
old  <	and rbx, rax>
new  <	neg rbx>

1988:
old  <	cmp ebx, 0>
new  <>

1989:
old  <	jge scanLongInt$74>
new  < scanLongInt$67:>

1990:
old  <	neg ebx>
new  <	; SignedMultiply longValue longValue Â£temporary1157>

1991:
old  <	neg rbx>
new  <	mov rax, [rbp + 28]>

1992:
old  <>
new  <	xor rdx, rdx>

1993:
old  < scanLongInt$74:>
new  <	imul rbx>

1994:
old  <	; BinaryAdd longValue longValue Â£temporary1173>
new  <	mov [rbp + 28], rax>

1995:
old  <	add [rbp + 28], rbx>
new  <>

1996:
old  <>
new  < scanLongInt$68:>

1997:
old  < scanLongInt$75:>
new  <	; PreCall 45 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1998:
old  <	; PreCall 45 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1999:
old  <>
new  < scanLongInt$69:>

2000:
old  < scanLongInt$76:>
new  <	; Parameter 69 signedchar input>

2001:
old  <	; Call 45 scanChar 0>
new  <	mov al, [rbp + 44]>

2002:
old  <	mov qword [rbp + 45], scanLongInt$77>
new  <	mov [rbp + 69], al>

2003:
old  <	mov [rbp + 53], rbp>
new  <>

2004:
old  <	add rbp, 45>
new  < scanLongInt$70:>

2005:
old  <	jmp scanChar>
new  <	; Call 45 digitToValue 0>

2006:
old  <>
new  <	mov qword [rbp + 45], scanLongInt$71>

2007:
old  < scanLongInt$77:>
new  <	mov [rbp + 53], rbp>

2008:
old  <	; PostCall 45>
new  <	add rbp, 45>

2009:
old  <>
new  <	jmp @2890$digitToValue>

2010:
old  < scanLongInt$78:>
new  <>

2011:
old  <	; GetReturnValue Â£temporary1175>
new  < scanLongInt$71:>

2012:
old  <>
new  <	; PostCall 45>

2013:
old  < scanLongInt$79:>
new  <>

2014:
old  <	; Assign input Â£temporary1175>
new  < scanLongInt$72:>

2015:
old  <	mov [rbp + 44], bl>
new  <	; GetReturnValue Â£temporary1159>

2017:
old  < scanLongInt$80:>
new  < scanLongInt$73:>

2018:
old  <	; Assign found 1>
new  <	; IntegralToIntegral Â£temporary1160 Â£temporary1159>

2019:
old  <	mov dword [rbp + 40], 1>
new  <	mov rax, 4294967295>

2020:
old  <>
new  <	and rbx, rax>

2021:
old  < scanLongInt$81:>
new  <	cmp ebx, 0>

2022:
old  <	; Goto 59>
new  <	jge scanLongInt$74>

2023:
old  <	jmp scanLongInt$59>
new  <	neg ebx>

2024:
old  <>
new  <	neg rbx>

2025:
old  < scanLongInt$82:>
new  <>

2026:
old  <	; Equal 85 minus 0>
new  < scanLongInt$74:>

2027:
old  <	cmp dword [rbp + 36], 0>
new  <	; BinaryAdd longValue longValue Â£temporary1160>

2028:
old  <	je scanLongInt$85>
new  <	add [rbp + 28], rbx>

2030:
old  < scanLongInt$83:>
new  < scanLongInt$75:>

2031:
old  <	; UnarySubtract Â£temporary1177 longValue>
new  <	; PreCall 45 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2032:
old  <	mov rax, [rbp + 28]>
new  <>

2033:
old  <	neg rax>
new  < scanLongInt$76:>

2034:
old  <>
new  <	; Call 45 scanChar 0>

2035:
old  < scanLongInt$84:>
new  <	mov qword [rbp + 45], scanLongInt$77>

2036:
old  <	; Assign longValue Â£temporary1177>
new  <	mov [rbp + 53], rbp>

2037:
old  <	mov [rbp + 28], rax>
new  <	add rbp, 45>

2038:
old  <>
new  <	jmp scanChar>

2039:
old  < scanLongInt$85:>
new  <>

2040:
old  <	; Equal 87 found 0>
new  < scanLongInt$77:>

2041:
old  <	cmp dword [rbp + 40], 0>
new  <	; PostCall 45>

2042:
old  <	je scanLongInt$87>
new  <>

2043:
old  <>
new  < scanLongInt$78:>

2044:
old  < scanLongInt$86:>
new  <	; GetReturnValue Â£temporary1162>

2045:
old  <	; BinaryAdd g_inCount g_inCount 1>
new  <>

2046:
old  <	inc dword [g_inCount]>
new  < scanLongInt$79:>

2047:
old  <>
new  <	; Assign input Â£temporary1162>

2048:
old  < scanLongInt$87:>
new  <	mov [rbp + 44], bl>

2049:
old  <	; PreCall 45 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

2050:
old  <>
new  < scanLongInt$80:>

2051:
old  < scanLongInt$88:>
new  <	; Assign found 1>

2052:
old  <	; Parameter 69 signedchar input>
new  <	mov dword [rbp + 40], 1>

2053:
old  <	mov al, [rbp + 44]>
new  <>

2054:
old  <	mov [rbp + 69], al>
new  < scanLongInt$81:>

2055:
old  <>
new  <	; Goto 59>

2056:
old  < scanLongInt$89:>
new  <	jmp scanLongInt$59>

2057:
old  <	; Call 45 unscanChar 0>
new  <>

2058:
old  <	mov qword [rbp + 45], scanLongInt$90>
new  < scanLongInt$82:>

2059:
old  <	mov [rbp + 53], rbp>
new  <	; Equal 85 minus 0>

2060:
old  <	add rbp, 45>
new  <	cmp dword [rbp + 36], 0>

2061:
old  <	jmp unscanChar>
new  <	je scanLongInt$85>

2063:
old  < scanLongInt$90:>
new  < scanLongInt$83:>

2064:
old  <	; PostCall 45>
new  <	; UnarySubtract Â£temporary1164 longValue>

2065:
old  <>
new  <	mov rax, [rbp + 28]>

2066:
old  < scanLongInt$91:>
new  <	neg rax>

2067:
old  <	; Return longValue>
new  <>

2068:
old  <	mov rbx, [rbp + 28]>
new  < scanLongInt$84:>

2069:
old  <	mov rax, [rbp]>
new  <	; Assign longValue Â£temporary1164>

2070:
old  <	mov rdi, [rbp + 16]>
new  <	mov [rbp + 28], rax>

2071:
old  <	mov rbp, [rbp + 8]>
new  <>

2072:
old  <	jmp rax>
new  < scanLongInt$85:>

2073:
old  <>
new  <	; Equal 87 found 0>

2074:
old  < scanLongInt$92:>
new  <	cmp dword [rbp + 40], 0>

2075:
old  <	; FunctionEnd scanLongInt>
new  <	je scanLongInt$87>

2077:
old  <section .text>
new  < scanLongInt$86:>

2078:
old  <>
new  <	; BinaryAdd g_inCount g_inCount 1>

2079:
old  < scanUnsignedLongInt:>
new  <	inc dword [g_inCount]>

2080:
old  <	; Assign unsignedLongValue 0>
new  <>

2081:
old  <	mov qword [rbp + 28], 0>
new  < scanLongInt$87:>

2082:
old  <>
new  <	; PreCall 45 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2083:
old  < scanUnsignedLongInt$1:>
new  <>

2084:
old  <	; PreCall 44 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < scanLongInt$88:>

2085:
old  <>
new  <	; Parameter 69 signedchar input>

2086:
old  < scanUnsignedLongInt$2:>
new  <	mov al, [rbp + 44]>

2087:
old  <	; Call 44 scanChar 0>
new  <	mov [rbp + 69], al>

2088:
old  <	mov qword [rbp + 44], scanUnsignedLongInt$3>
new  <>

2089:
old  <	mov [rbp + 52], rbp>
new  < scanLongInt$89:>

2090:
old  <	add rbp, 44>
new  <	; Call 45 unscanChar 0>

2091:
old  <	jmp scanChar>
new  <	mov qword [rbp + 45], scanLongInt$90>

2092:
old  <>
new  <	mov [rbp + 53], rbp>

2093:
old  < scanUnsignedLongInt$3:>
new  <	add rbp, 45>

2094:
old  <	; PostCall 44>
new  <	jmp unscanChar>

2096:
old  < scanUnsignedLongInt$4:>
new  < scanLongInt$90:>

2097:
old  <	; GetReturnValue Â£temporary1182>
new  <	; PostCall 45>

2099:
old  < scanUnsignedLongInt$5:>
new  < scanLongInt$91:>

2100:
old  <	; Assign input Â£temporary1182>
new  <	; SetReturnValue>

2101:
old  <	mov [rbp + 44], bl>
new  <>

2102:
old  <>
new  < scanLongInt$92:>

2103:
old  < scanUnsignedLongInt$6:>
new  <	; Return longValue>

2104:
old  <	; Assign found 1>
new  <	mov rbx, [rbp + 28]>

2105:
old  <	mov dword [rbp + 45], 1>
new  <	mov rax, [rbp]>

2106:
old  <>
new  <	mov rdi, [rbp + 16]>

2107:
old  < scanUnsignedLongInt$7:>
new  <	mov rbp, [rbp + 8]>

2108:
old  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	jmp rax>

2110:
old  < scanUnsignedLongInt$8:>
new  < scanLongInt$93:>

2111:
old  <	; IntegralToIntegral Â£temporary1183 input>
new  <	; FunctionEnd scanLongInt>

2112:
old  <	mov al, [rbp + 44]>
new  <>

2113:
old  <	and eax, 255>
new  <section .text>

2114:
old  <	cmp al, 0>
new  <>

2115:
old  <	jge scanUnsignedLongInt$9>
new  < scanUnsignedLongInt:>

2116:
old  <	neg al>
new  <	; Assign unsignedLongValue 0>

2117:
old  <	neg eax>
new  <	mov qword [rbp + 28], 0>

2119:
old  < scanUnsignedLongInt$9:>
new  < scanUnsignedLongInt$1:>

2120:
old  <	; Parameter 73 signedint Â£temporary1183>
new  <	; PreCall 44 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2121:
old  <	mov [rbp + 73], eax>
new  <>

2122:
old  <>
new  < scanUnsignedLongInt$2:>

2123:
old  < scanUnsignedLongInt$10:>
new  <	; Call 44 scanChar 0>

2124:
old  <	; Call 49 isspace 0>
new  <	mov qword [rbp + 44], scanUnsignedLongInt$3>

2125:
old  <	mov qword [rbp + 49], scanUnsignedLongInt$11>
new  <	mov [rbp + 52], rbp>

2126:
old  <	mov [rbp + 57], rbp>
new  <	add rbp, 44>

2127:
old  <	add rbp, 49>
new  <	jmp scanChar>

2128:
old  <	jmp isspace>
new  <>

2129:
old  <>
new  < scanUnsignedLongInt$3:>

2130:
old  < scanUnsignedLongInt$11:>
new  <	; PostCall 44>

2131:
old  <	; PostCall 49>
new  <>

2132:
old  <>
new  < scanUnsignedLongInt$4:>

2133:
old  < scanUnsignedLongInt$12:>
new  <	; GetReturnValue Â£temporary1169>

2134:
old  <	; GetReturnValue Â£temporary1184>
new  <>

2135:
old  <>
new  < scanUnsignedLongInt$5:>

2136:
old  < scanUnsignedLongInt$13:>
new  <	; Assign input Â£temporary1169>

2137:
old  <	; Equal 20 Â£temporary1184 0>
new  <	mov [rbp + 44], bl>

2138:
old  <	cmp ebx, 0>
new  <>

2139:
old  <	je scanUnsignedLongInt$20>
new  < scanUnsignedLongInt$6:>

2140:
old  <>
new  <	; Assign found 1>

2141:
old  < scanUnsignedLongInt$14:>
new  <	mov dword [rbp + 45], 1>

2142:
old  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

2143:
old  <>
new  < scanUnsignedLongInt$7:>

2144:
old  < scanUnsignedLongInt$15:>
new  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2145:
old  <	; Call 49 scanChar 0>
new  <>

2146:
old  <	mov qword [rbp + 49], scanUnsignedLongInt$16>
new  < scanUnsignedLongInt$8:>

2147:
old  <	mov [rbp + 57], rbp>
new  <	; IntegralToIntegral Â£temporary1170 input>

2148:
old  <	add rbp, 49>
new  <	mov al, [rbp + 44]>

2149:
old  <	jmp scanChar>
new  <	and eax, 255>

2150:
old  <>
new  <	cmp al, 0>

2151:
old  < scanUnsignedLongInt$16:>
new  <	jge scanUnsignedLongInt$9>

2152:
old  <	; PostCall 49>
new  <	neg al>

2153:
old  <>
new  <	neg eax>

2154:
old  < scanUnsignedLongInt$17:>
new  <>

2155:
old  <	; GetReturnValue Â£temporary1185>
new  < scanUnsignedLongInt$9:>

2156:
old  <>
new  <	; Parameter 73 signedint Â£temporary1170>

2157:
old  < scanUnsignedLongInt$18:>
new  <	mov [rbp + 73], eax>

2158:
old  <	; Assign input Â£temporary1185>
new  <>

2159:
old  <	mov [rbp + 44], bl>
new  < scanUnsignedLongInt$10:>

2160:
old  <>
new  <	; Call 49 isspace 0>

2161:
old  < scanUnsignedLongInt$19:>
new  <	mov qword [rbp + 49], scanUnsignedLongInt$11>

2162:
old  <	; Goto 7>
new  <	mov [rbp + 57], rbp>

2163:
old  <	jmp scanUnsignedLongInt$7>
new  <	add rbp, 49>

2164:
old  <>
new  <	jmp isspace>

2165:
old  < scanUnsignedLongInt$20:>
new  <>

2166:
old  <	; NotEqual 26 input 43>
new  < scanUnsignedLongInt$11:>

2167:
old  <	cmp byte [rbp + 44], 43>
new  <	; PostCall 49>

2168:
old  <	jne scanUnsignedLongInt$26>
new  <>

2169:
old  <>
new  < scanUnsignedLongInt$12:>

2170:
old  < scanUnsignedLongInt$21:>
new  <	; GetReturnValue Â£temporary1171>

2171:
old  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

2172:
old  <>
new  < scanUnsignedLongInt$13:>

2173:
old  < scanUnsignedLongInt$22:>
new  <	; Equal 20 Â£temporary1171 0>

2174:
old  <	; Call 49 scanChar 0>
new  <	cmp ebx, 0>

2175:
old  <	mov qword [rbp + 49], scanUnsignedLongInt$23>
new  <	je scanUnsignedLongInt$20>

2176:
old  <	mov [rbp + 57], rbp>
new  <>

2177:
old  <	add rbp, 49>
new  < scanUnsignedLongInt$14:>

2178:
old  <	jmp scanChar>
new  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2180:
old  < scanUnsignedLongInt$23:>
new  < scanUnsignedLongInt$15:>

2181:
old  <	; PostCall 49>
new  <	; Call 49 scanChar 0>

2182:
old  <>
new  <	mov qword [rbp + 49], scanUnsignedLongInt$16>

2183:
old  < scanUnsignedLongInt$24:>
new  <	mov [rbp + 57], rbp>

2184:
old  <	; GetReturnValue Â£temporary1188>
new  <	add rbp, 49>

2185:
old  <>
new  <	jmp scanChar>

2186:
old  < scanUnsignedLongInt$25:>
new  <>

2187:
old  <	; Assign input Â£temporary1188>
new  < scanUnsignedLongInt$16:>

2188:
old  <	mov [rbp + 44], bl>
new  <	; PostCall 49>

2190:
old  < scanUnsignedLongInt$26:>
new  < scanUnsignedLongInt$17:>

2191:
old  <	; NotEqual 50 base 0>
new  <	; GetReturnValue Â£temporary1172>

2192:
old  <	cmp dword [rbp + 24], 0>
new  <>

2193:
old  <	jne scanUnsignedLongInt$50>
new  < scanUnsignedLongInt$18:>

2194:
old  <>
new  <	; Assign input Â£temporary1172>

2195:
old  < scanUnsignedLongInt$27:>
new  <	mov [rbp + 44], bl>

2196:
old  <	; NotEqual 49 input 48>
new  <>

2197:
old  <	cmp byte [rbp + 44], 48>
new  < scanUnsignedLongInt$19:>

2198:
old  <	jne scanUnsignedLongInt$49>
new  <	; Goto 7>

2199:
old  <>
new  <	jmp scanUnsignedLongInt$7>

2200:
old  < scanUnsignedLongInt$28:>
new  <>

2201:
old  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < scanUnsignedLongInt$20:>

2202:
old  <>
new  <	; NotEqual 26 input 43>

2203:
old  < scanUnsignedLongInt$29:>
new  <	cmp byte [rbp + 44], 43>

2204:
old  <	; Call 49 scanChar 0>
new  <	jne scanUnsignedLongInt$26>

2205:
old  <	mov qword [rbp + 49], scanUnsignedLongInt$30>
new  <>

2206:
old  <	mov [rbp + 57], rbp>
new  < scanUnsignedLongInt$21:>

2207:
old  <	add rbp, 49>
new  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2208:
old  <	jmp scanChar>
new  <>

2209:
old  <>
new  < scanUnsignedLongInt$22:>

2210:
old  < scanUnsignedLongInt$30:>
new  <	; Call 49 scanChar 0>

2211:
old  <	; PostCall 49>
new  <	mov qword [rbp + 49], scanUnsignedLongInt$23>

2212:
old  <>
new  <	mov [rbp + 57], rbp>

2213:
old  < scanUnsignedLongInt$31:>
new  <	add rbp, 49>

2214:
old  <	; GetReturnValue Â£temporary1191>
new  <	jmp scanChar>

2216:
old  < scanUnsignedLongInt$32:>
new  < scanUnsignedLongInt$23:>

2217:
old  <	; Assign input Â£temporary1191>
new  <	; PostCall 49>

2218:
old  <	mov [rbp + 44], bl>
new  <>

2219:
old  <>
new  < scanUnsignedLongInt$24:>

2220:
old  < scanUnsignedLongInt$33:>
new  <	; GetReturnValue Â£temporary1175>

2221:
old  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

2222:
old  <>
new  < scanUnsignedLongInt$25:>

2223:
old  < scanUnsignedLongInt$34:>
new  <	; Assign input Â£temporary1175>

2224:
old  <	; IntegralToIntegral Â£temporary1192 input>
new  <	mov [rbp + 44], bl>

2225:
old  <	mov al, [rbp + 44]>
new  <>

2226:
old  <	and eax, 255>
new  < scanUnsignedLongInt$26:>

2227:
old  <	cmp al, 0>
new  <	; NotEqual 50 base 0>

2228:
old  <	jge scanUnsignedLongInt$35>
new  <	cmp dword [rbp + 24], 0>

2229:
old  <	neg al>
new  <	jne scanUnsignedLongInt$50>

2230:
old  <	neg eax>
new  <>

2231:
old  <>
new  < scanUnsignedLongInt$27:>

2232:
old  < scanUnsignedLongInt$35:>
new  <	; NotEqual 49 input 48>

2233:
old  <	; Parameter 73 signedint Â£temporary1192>
new  <	cmp byte [rbp + 44], 48>

2234:
old  <	mov [rbp + 73], eax>
new  <	jne scanUnsignedLongInt$49>

2236:
old  < scanUnsignedLongInt$36:>
new  < scanUnsignedLongInt$28:>

2237:
old  <	; Call 49 tolower 0>
new  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2238:
old  <	mov qword [rbp + 49], scanUnsignedLongInt$37>
new  <>

2239:
old  <	mov [rbp + 57], rbp>
new  < scanUnsignedLongInt$29:>

2240:
old  <	add rbp, 49>
new  <	; Call 49 scanChar 0>

2241:
old  <	jmp tolower>
new  <	mov qword [rbp + 49], scanUnsignedLongInt$30>

2242:
old  <>
new  <	mov [rbp + 57], rbp>

2243:
old  < scanUnsignedLongInt$37:>
new  <	add rbp, 49>

2244:
old  <	; PostCall 49>
new  <	jmp scanChar>

2246:
old  < scanUnsignedLongInt$38:>
new  < scanUnsignedLongInt$30:>

2247:
old  <	; GetReturnValue Â£temporary1193>
new  <	; PostCall 49>

2249:
old  < scanUnsignedLongInt$39:>
new  < scanUnsignedLongInt$31:>

2250:
old  <	; NotEqual 47 Â£temporary1193 120>
new  <	; GetReturnValue Â£temporary1178>

2251:
old  <	cmp ebx, 120>
new  <>

2252:
old  <	jne scanUnsignedLongInt$47>
new  < scanUnsignedLongInt$32:>

2253:
old  <>
new  <	; Assign input Â£temporary1178>

2254:
old  < scanUnsignedLongInt$40:>
new  <	mov [rbp + 44], bl>

2255:
old  <	; Assign base 16>
new  <>

2256:
old  <	mov dword [rbp + 24], 16>
new  < scanUnsignedLongInt$33:>

2257:
old  <>
new  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2258:
old  < scanUnsignedLongInt$41:>
new  <>

2259:
old  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < scanUnsignedLongInt$34:>

2260:
old  <>
new  <	; IntegralToIntegral Â£temporary1179 input>

2261:
old  < scanUnsignedLongInt$42:>
new  <	mov al, [rbp + 44]>

2262:
old  <	; Call 49 scanChar 0>
new  <	and eax, 255>

2263:
old  <	mov qword [rbp + 49], scanUnsignedLongInt$43>
new  <	cmp al, 0>

2264:
old  <	mov [rbp + 57], rbp>
new  <	jge scanUnsignedLongInt$35>

2265:
old  <	add rbp, 49>
new  <	neg al>

2266:
old  <	jmp scanChar>
new  <	neg eax>

2268:
old  < scanUnsignedLongInt$43:>
new  < scanUnsignedLongInt$35:>

2269:
old  <	; PostCall 49>
new  <	; Parameter 73 signedint Â£temporary1179>

2270:
old  <>
new  <	mov [rbp + 73], eax>

2271:
old  < scanUnsignedLongInt$44:>
new  <>

2272:
old  <	; GetReturnValue Â£temporary1195>
new  < scanUnsignedLongInt$36:>

2273:
old  <>
new  <	; Call 49 tolower 0>

2274:
old  < scanUnsignedLongInt$45:>
new  <	mov qword [rbp + 49], scanUnsignedLongInt$37>

2275:
old  <	; Assign input Â£temporary1195>
new  <	mov [rbp + 57], rbp>

2276:
old  <	mov [rbp + 44], bl>
new  <	add rbp, 49>

2277:
old  <>
new  <	jmp tolower>

2278:
old  < scanUnsignedLongInt$46:>
new  <>

2279:
old  <	; Goto 50>
new  < scanUnsignedLongInt$37:>

2280:
old  <	jmp scanUnsignedLongInt$50>
new  <	; PostCall 49>

2282:
old  < scanUnsignedLongInt$47:>
new  < scanUnsignedLongInt$38:>

2283:
old  <	; Assign base 8>
new  <	; GetReturnValue Â£temporary1180>

2284:
old  <	mov dword [rbp + 24], 8>
new  <>

2285:
old  <>
new  < scanUnsignedLongInt$39:>

2286:
old  < scanUnsignedLongInt$48:>
new  <	; NotEqual 47 Â£temporary1180 120>

2287:
old  <	; Goto 50>
new  <	cmp ebx, 120>

2288:
old  <	jmp scanUnsignedLongInt$50>
new  <	jne scanUnsignedLongInt$47>

2290:
old  < scanUnsignedLongInt$49:>
new  < scanUnsignedLongInt$40:>

2291:
old  <	; Assign base 10>
new  <	; Assign base 16>

2292:
old  <	mov dword [rbp + 24], 10>
new  <	mov dword [rbp + 24], 16>

2294:
old  < scanUnsignedLongInt$50:>
new  < scanUnsignedLongInt$41:>

2297:
old  < scanUnsignedLongInt$51:>
new  < scanUnsignedLongInt$42:>

2298:
old  <	; Parameter 73 signedchar input>
new  <	; Call 49 scanChar 0>

2299:
old  <	mov al, [rbp + 44]>
new  <	mov qword [rbp + 49], scanUnsignedLongInt$43>

2300:
old  <	mov [rbp + 73], al>
new  <	mov [rbp + 57], rbp>

2301:
old  <>
new  <	add rbp, 49>

2302:
old  < scanUnsignedLongInt$52:>
new  <	jmp scanChar>

2303:
old  <	; Parameter 74 signedint base>
new  <>

2304:
old  <	mov eax, [rbp + 24]>
new  < scanUnsignedLongInt$43:>

2305:
old  <	mov [rbp + 74], eax>
new  <	; PostCall 49>

2307:
old  < scanUnsignedLongInt$53:>
new  < scanUnsignedLongInt$44:>

2308:
old  <	; Call 49 isDigitInBase 0>
new  <	; GetReturnValue Â£temporary1182>

2309:
old  <	mov qword [rbp + 49], scanUnsignedLongInt$54>
new  <>

2310:
old  <	mov [rbp + 57], rbp>
new  < scanUnsignedLongInt$45:>

2311:
old  <	add rbp, 49>
new  <	; Assign input Â£temporary1182>

2312:
old  <	jmp @2886$isDigitInBase>
new  <	mov [rbp + 44], bl>

2314:
old  < scanUnsignedLongInt$54:>
new  < scanUnsignedLongInt$46:>

2315:
old  <	; PostCall 49>
new  <	; Goto 50>

2316:
old  <>
new  <	jmp scanUnsignedLongInt$50>

2317:
old  < scanUnsignedLongInt$55:>
new  <>

2318:
old  <	; GetReturnValue Â£temporary1196>
new  < scanUnsignedLongInt$47:>

2319:
old  <>
new  <	; Assign base 8>

2320:
old  < scanUnsignedLongInt$56:>
new  <	mov dword [rbp + 24], 8>

2321:
old  <	; Equal 73 Â£temporary1196 0>
new  <>

2322:
old  <	cmp ebx, 0>
new  < scanUnsignedLongInt$48:>

2323:
old  <	je scanUnsignedLongInt$73>
new  <	; Goto 50>

2324:
old  <>
new  <	jmp scanUnsignedLongInt$50>

2325:
old  < scanUnsignedLongInt$57:>
new  <>

2326:
old  <	; IntegralToIntegral Â£temporary1197 base>
new  < scanUnsignedLongInt$49:>

2327:
old  <	mov ebx, [rbp + 24]>
new  <	; Assign base 10>

2328:
old  <	mov rax, 4294967295>
new  <	mov dword [rbp + 24], 10>

2329:
old  <	and rbx, rax>
new  <>

2330:
old  <>
new  < scanUnsignedLongInt$50:>

2331:
old  < scanUnsignedLongInt$58:>
new  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2332:
old  <	; UnsignedMultiply unsignedLongValue unsignedLongValue Â£temporary1197>
new  <>

2333:
old  <	mov rax, [rbp + 28]>
new  < scanUnsignedLongInt$51:>

2334:
old  <	xor rdx, rdx>
new  <	; Parameter 73 signedchar input>

2335:
old  <	mul rbx>
new  <	mov al, [rbp + 44]>

2336:
old  <	mov [rbp + 28], rax>
new  <	mov [rbp + 73], al>

2338:
old  < scanUnsignedLongInt$59:>
new  < scanUnsignedLongInt$52:>

2339:
old  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter 74 signedint base>

2340:
old  <>
new  <	mov eax, [rbp + 24]>

2341:
old  < scanUnsignedLongInt$60:>
new  <	mov [rbp + 74], eax>

2342:
old  <	; Parameter 73 signedchar input>
new  <>

2343:
old  <	mov al, [rbp + 44]>
new  < scanUnsignedLongInt$53:>

2344:
old  <	mov [rbp + 73], al>
new  <	; Call 49 isDigitInBase 0>

2345:
old  <>
new  <	mov qword [rbp + 49], scanUnsignedLongInt$54>

2346:
old  < scanUnsignedLongInt$61:>
new  <	mov [rbp + 57], rbp>

2347:
old  <	; Call 49 digitToValue 0>
new  <	add rbp, 49>

2348:
old  <	mov qword [rbp + 49], scanUnsignedLongInt$62>
new  <	jmp @2882$isDigitInBase>

2349:
old  <	mov [rbp + 57], rbp>
new  <>

2350:
old  <	add rbp, 49>
new  < scanUnsignedLongInt$54:>

2351:
old  <	jmp @2894$digitToValue>
new  <	; PostCall 49>

2353:
old  < scanUnsignedLongInt$62:>
new  < scanUnsignedLongInt$55:>

2354:
old  <	; PostCall 49>
new  <	; GetReturnValue Â£temporary1183>

2356:
old  < scanUnsignedLongInt$63:>
new  < scanUnsignedLongInt$56:>

2357:
old  <	; GetReturnValue Â£temporary1199>
new  <	; Equal 73 Â£temporary1183 0>

2358:
old  <>
new  <	cmp ebx, 0>

2359:
old  < scanUnsignedLongInt$64:>
new  <	je scanUnsignedLongInt$73>

2360:
old  <	; IntegralToIntegral Â£temporary1200 Â£temporary1199>
new  <>

2361:
old  <	mov rax, 4294967295>
new  < scanUnsignedLongInt$57:>

2362:
old  <	and rbx, rax>
new  <	; IntegralToIntegral Â£temporary1184 base>

2363:
old  <>
new  <	mov ebx, [rbp + 24]>

2364:
old  < scanUnsignedLongInt$65:>
new  <	mov rax, 4294967295>

2365:
old  <	; BinaryAdd unsignedLongValue unsignedLongValue Â£temporary1200>
new  <	and rbx, rax>

2366:
old  <	add [rbp + 28], rbx>
new  <>

2367:
old  <>
new  < scanUnsignedLongInt$58:>

2368:
old  < scanUnsignedLongInt$66:>
new  <	; UnsignedMultiply unsignedLongValue unsignedLongValue Â£temporary1184>

2369:
old  <	; Assign found 1>
new  <	mov rax, [rbp + 28]>

2370:
old  <	mov dword [rbp + 45], 1>
new  <	xor rdx, rdx>

2371:
old  <>
new  <	mul rbx>

2372:
old  < scanUnsignedLongInt$67:>
new  <	mov [rbp + 28], rax>

2373:
old  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

2374:
old  <>
new  < scanUnsignedLongInt$59:>

2375:
old  < scanUnsignedLongInt$68:>
new  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2376:
old  <	; Call 49 scanChar 0>
new  <>

2377:
old  <	mov qword [rbp + 49], scanUnsignedLongInt$69>
new  < scanUnsignedLongInt$60:>

2378:
old  <	mov [rbp + 57], rbp>
new  <	; Parameter 73 signedchar input>

2379:
old  <	add rbp, 49>
new  <	mov al, [rbp + 44]>

2380:
old  <	jmp scanChar>
new  <	mov [rbp + 73], al>

2382:
old  < scanUnsignedLongInt$69:>
new  < scanUnsignedLongInt$61:>

2383:
old  <	; PostCall 49>
new  <	; Call 49 digitToValue 0>

2384:
old  <>
new  <	mov qword [rbp + 49], scanUnsignedLongInt$62>

2385:
old  < scanUnsignedLongInt$70:>
new  <	mov [rbp + 57], rbp>

2386:
old  <	; GetReturnValue Â£temporary1202>
new  <	add rbp, 49>

2387:
old  <>
new  <	jmp @2890$digitToValue>

2388:
old  < scanUnsignedLongInt$71:>
new  <>

2389:
old  <	; Assign input Â£temporary1202>
new  < scanUnsignedLongInt$62:>

2390:
old  <	mov [rbp + 44], bl>
new  <	; PostCall 49>

2392:
old  < scanUnsignedLongInt$72:>
new  < scanUnsignedLongInt$63:>

2393:
old  <	; Goto 50>
new  <	; GetReturnValue Â£temporary1186>

2394:
old  <	jmp scanUnsignedLongInt$50>
new  <>

2395:
old  <>
new  < scanUnsignedLongInt$64:>

2396:
old  < scanUnsignedLongInt$73:>
new  <	; IntegralToIntegral Â£temporary1187 Â£temporary1186>

2397:
old  <	; Equal 75 found 0>
new  <	mov rax, 4294967295>

2398:
old  <	cmp dword [rbp + 45], 0>
new  <	and rbx, rax>

2399:
old  <	je scanUnsignedLongInt$75>
new  <>

2400:
old  <>
new  < scanUnsignedLongInt$65:>

2401:
old  < scanUnsignedLongInt$74:>
new  <	; BinaryAdd unsignedLongValue unsignedLongValue Â£temporary1187>

2402:
old  <	; BinaryAdd g_inCount g_inCount 1>
new  <	add [rbp + 28], rbx>

2403:
old  <	inc dword [g_inCount]>
new  <>

2404:
old  <>
new  < scanUnsignedLongInt$66:>

2405:
old  < scanUnsignedLongInt$75:>
new  <	; Assign found 1>

2406:
old  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov dword [rbp + 45], 1>

2408:
old  < scanUnsignedLongInt$76:>
new  < scanUnsignedLongInt$67:>

2409:
old  <	; Parameter 73 signedchar input>
new  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2410:
old  <	mov al, [rbp + 44]>
new  <>

2411:
old  <	mov [rbp + 73], al>
new  < scanUnsignedLongInt$68:>

2412:
old  <>
new  <	; Call 49 scanChar 0>

2413:
old  < scanUnsignedLongInt$77:>
new  <	mov qword [rbp + 49], scanUnsignedLongInt$69>

2414:
old  <	; Call 49 unscanChar 0>
new  <	mov [rbp + 57], rbp>

2415:
old  <	mov qword [rbp + 49], scanUnsignedLongInt$78>
new  <	add rbp, 49>

2416:
old  <	mov [rbp + 57], rbp>
new  <	jmp scanChar>

2417:
old  <	add rbp, 49>
new  <>

2418:
old  <	jmp unscanChar>
new  < scanUnsignedLongInt$69:>

2419:
old  <>
new  <	; PostCall 49>

2420:
old  < scanUnsignedLongInt$78:>
new  <>

2421:
old  <	; PostCall 49>
new  < scanUnsignedLongInt$70:>

2422:
old  <>
new  <	; GetReturnValue Â£temporary1189>

2423:
old  < scanUnsignedLongInt$79:>
new  <>

2424:
old  <	; Return unsignedLongValue>
new  < scanUnsignedLongInt$71:>

2425:
old  <	mov rbx, [rbp + 28]>
new  <	; Assign input Â£temporary1189>

2426:
old  <	mov rax, [rbp]>
new  <	mov [rbp + 44], bl>

2427:
old  <	mov rdi, [rbp + 16]>
new  <>

2428:
old  <	mov rbp, [rbp + 8]>
new  < scanUnsignedLongInt$72:>

2429:
old  <	jmp rax>
new  <	; Goto 50>

2430:
old  <>
new  <	jmp scanUnsignedLongInt$50>

2431:
old  < scanUnsignedLongInt$80:>
new  <>

2432:
old  <	; FunctionEnd scanUnsignedLongInt>
new  < scanUnsignedLongInt$73:>

2433:
old  <>
new  <	; Equal 75 found 0>

2434:
old  <section .data>
new  <	cmp dword [rbp + 45], 0>

2435:
old  <>
new  <	je scanUnsignedLongInt$75>

2436:
old  <float8$10.0#:>
new  <>

2437:
old  <	; Initializer LongDouble 10.0>
new  < scanUnsignedLongInt$74:>

2438:
old  <	dq 10.0>
new  <	; BinaryAdd g_inCount g_inCount 1>

2439:
old  <>
new  <	inc dword [g_inCount]>

2440:
old  <section .data>
new  <>

2441:
old  <>
new  < scanUnsignedLongInt$75:>

2442:
old  <container4bytes#:>
new  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2443:
old  <	; InitializerZero 4>
new  <>

2444:
old  <	times 4 db 0>
new  < scanUnsignedLongInt$76:>

2445:
old  <>
new  <	; Parameter 73 signedchar input>

2446:
old  <section .data>
new  <	mov al, [rbp + 44]>

2447:
old  <>
new  <	mov [rbp + 73], al>

2448:
old  <container8bytes#:>
new  <>

2449:
old  <	; InitializerZero 8>
new  < scanUnsignedLongInt$77:>

2450:
old  <	times 8 db 0>
new  <	; Call 49 unscanChar 0>

2451:
old  <>
new  <	mov qword [rbp + 49], scanUnsignedLongInt$78>

2452:
old  <section .text>
new  <	mov [rbp + 57], rbp>

2453:
old  <>
new  <	add rbp, 49>

2454:
old  < scanLongDouble:>
new  <	jmp unscanChar>

2455:
old  <	; Assign minus 0>
new  <>

2456:
old  <	mov dword [rbp + 24], 0>
new  < scanUnsignedLongInt$78:>

2457:
old  <>
new  <	; PostCall 49>

2458:
old  < scanLongDouble$1:>
new  <>

2459:
old  <	; Assign found 0>
new  < scanUnsignedLongInt$79:>

2460:
old  <	mov dword [rbp + 28], 0>
new  <	; SetReturnValue>

2462:
old  < scanLongDouble$2:>
new  < scanUnsignedLongInt$80:>

2463:
old  <	; PushFloat 0.0>
new  <	; Return unsignedLongValue>

2464:
old  <	fldz>
new  <	mov rbx, [rbp + 28]>

2465:
old  <>
new  <	mov rax, [rbp]>

2466:
old  < scanLongDouble$3:>
new  <	mov rdi, [rbp + 16]>

2467:
old  <	; PopFloat value>
new  <	mov rbp, [rbp + 8]>

2468:
old  <	fstp qword [rbp + 32]>
new  <	jmp rax>

2470:
old  < scanLongDouble$4:>
new  < scanUnsignedLongInt$81:>

2471:
old  <	; PushFloat 1.0>
new  <	; FunctionEnd scanUnsignedLongInt>

2472:
old  <	fld1>
new  <>

2473:
old  <>
new  <section .data>

2474:
old  < scanLongDouble$5:>
new  <>

2475:
old  <	; PopFloat factor>
new  <float8$10.0#:>

2476:
old  <	fstp qword [rbp + 40]>
new  <	; Initializer LongDouble 10.0>

2477:
old  <>
new  <	dq 10.0>

2478:
old  < scanLongDouble$6:>
new  <>

2479:
old  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <section .data>

2481:
old  < scanLongDouble$7:>
new  <container4bytes#:>

2482:
old  <	; Call 48 scanChar 0>
new  <	; InitializerZero 4>

2483:
old  <	mov qword [rbp + 48], scanLongDouble$8>
new  <	times 4 db 0>

2484:
old  <	mov [rbp + 56], rbp>
new  <>

2485:
old  <	add rbp, 48>
new  <section .data>

2486:
old  <	jmp scanChar>
new  <>

2487:
old  <>
new  <container8bytes#:>

2488:
old  < scanLongDouble$8:>
new  <	; InitializerZero 8>

2489:
old  <	; PostCall 48>
new  <	times 8 db 0>

2491:
old  < scanLongDouble$9:>
new  <section .text>

2492:
old  <	; GetReturnValue Â£temporary1207>
new  <>

2493:
old  <>
new  < scanLongDouble:>

2494:
old  < scanLongDouble$10:>
new  <	; Assign minus 0>

2495:
old  <	; Assign input Â£temporary1207>
new  <	mov dword [rbp + 24], 0>

2496:
old  <	mov [rbp + 48], bl>
new  <>

2497:
old  <>
new  < scanLongDouble$1:>

2498:
old  < scanLongDouble$11:>
new  <	; Assign found 0>

2499:
old  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov dword [rbp + 28], 0>

2501:
old  < scanLongDouble$12:>
new  < scanLongDouble$2:>

2502:
old  <	; IntegralToIntegral Â£temporary1208 input>
new  <	; PushFloat 0.0>

2503:
old  <	mov al, [rbp + 48]>
new  <	fldz>

2504:
old  <	and eax, 255>
new  <>

2505:
old  <	cmp al, 0>
new  < scanLongDouble$3:>

2506:
old  <	jge scanLongDouble$13>
new  <	; PopFloat value>

2507:
old  <	neg al>
new  <	fstp qword [rbp + 32]>

2508:
old  <	neg eax>
new  <>

2509:
old  <>
new  < scanLongDouble$4:>

2510:
old  < scanLongDouble$13:>
new  <	; PushFloat 1.0>

2511:
old  <	; Parameter 73 signedint Â£temporary1208>
new  <	fld1>

2512:
old  <	mov [rbp + 73], eax>
new  <>

2513:
old  <>
new  < scanLongDouble$5:>

2514:
old  < scanLongDouble$14:>
new  <	; PopFloat factor>

2515:
old  <	; Call 49 isspace 0>
new  <	fstp qword [rbp + 40]>

2516:
old  <	mov qword [rbp + 49], scanLongDouble$15>
new  <>

2517:
old  <	mov [rbp + 57], rbp>
new  < scanLongDouble$6:>

2518:
old  <	add rbp, 49>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2519:
old  <	jmp isspace>
new  <>

2520:
old  <>
new  < scanLongDouble$7:>

2521:
old  < scanLongDouble$15:>
new  <	; Call 48 scanChar 0>

2522:
old  <	; PostCall 49>
new  <	mov qword [rbp + 48], scanLongDouble$8>

2523:
old  <>
new  <	mov [rbp + 56], rbp>

2524:
old  < scanLongDouble$16:>
new  <	add rbp, 48>

2525:
old  <	; GetReturnValue Â£temporary1209>
new  <	jmp scanChar>

2527:
old  < scanLongDouble$17:>
new  < scanLongDouble$8:>

2528:
old  <	; Equal 24 Â£temporary1209 0>
new  <	; PostCall 48>

2529:
old  <	cmp ebx, 0>
new  <>

2530:
old  <	je scanLongDouble$24>
new  < scanLongDouble$9:>

2531:
old  <>
new  <	; GetReturnValue Â£temporary1194>

2532:
old  < scanLongDouble$18:>
new  <>

2533:
old  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < scanLongDouble$10:>

2534:
old  <>
new  <	; Assign input Â£temporary1194>

2535:
old  < scanLongDouble$19:>
new  <	mov [rbp + 48], bl>

2536:
old  <	; Call 49 scanChar 0>
new  <>

2537:
old  <	mov qword [rbp + 49], scanLongDouble$20>
new  < scanLongDouble$11:>

2538:
old  <	mov [rbp + 57], rbp>
new  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2539:
old  <	add rbp, 49>
new  <>

2540:
old  <	jmp scanChar>
new  < scanLongDouble$12:>

2541:
old  <>
new  <	; IntegralToIntegral Â£temporary1195 input>

2542:
old  < scanLongDouble$20:>
new  <	mov al, [rbp + 48]>

2543:
old  <	; PostCall 49>
new  <	and eax, 255>

2544:
old  <>
new  <	cmp al, 0>

2545:
old  < scanLongDouble$21:>
new  <	jge scanLongDouble$13>

2546:
old  <	; GetReturnValue Â£temporary1210>
new  <	neg al>

2547:
old  <>
new  <	neg eax>

2548:
old  < scanLongDouble$22:>
new  <>

2549:
old  <	; Assign input Â£temporary1210>
new  < scanLongDouble$13:>

2550:
old  <	mov [rbp + 48], bl>
new  <	; Parameter 73 signedint Â£temporary1195>

2551:
old  <>
new  <	mov [rbp + 73], eax>

2552:
old  < scanLongDouble$23:>
new  <>

2553:
old  <	; Goto 11>
new  < scanLongDouble$14:>

2554:
old  <	jmp scanLongDouble$11>
new  <	; Call 49 isspace 0>

2555:
old  <>
new  <	mov qword [rbp + 49], scanLongDouble$15>

2556:
old  < scanLongDouble$24:>
new  <	mov [rbp + 57], rbp>

2557:
old  <	; NotEqual 31 input 43>
new  <	add rbp, 49>

2558:
old  <	cmp byte [rbp + 48], 43>
new  <	jmp isspace>

2559:
old  <	jne scanLongDouble$31>
new  <>

2560:
old  <>
new  < scanLongDouble$15:>

2561:
old  < scanLongDouble$25:>
new  <	; PostCall 49>

2562:
old  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

2563:
old  <>
new  < scanLongDouble$16:>

2564:
old  < scanLongDouble$26:>
new  <	; GetReturnValue Â£temporary1196>

2565:
old  <	; Call 49 scanChar 0>
new  <>

2566:
old  <	mov qword [rbp + 49], scanLongDouble$27>
new  < scanLongDouble$17:>

2567:
old  <	mov [rbp + 57], rbp>
new  <	; Equal 24 Â£temporary1196 0>

2568:
old  <	add rbp, 49>
new  <	cmp ebx, 0>

2569:
old  <	jmp scanChar>
new  <	je scanLongDouble$24>

2571:
old  < scanLongDouble$27:>
new  < scanLongDouble$18:>

2572:
old  <	; PostCall 49>
new  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2574:
old  < scanLongDouble$28:>
new  < scanLongDouble$19:>

2575:
old  <	; GetReturnValue Â£temporary1213>
new  <	; Call 49 scanChar 0>

2576:
old  <>
new  <	mov qword [rbp + 49], scanLongDouble$20>

2577:
old  < scanLongDouble$29:>
new  <	mov [rbp + 57], rbp>

2578:
old  <	; Assign input Â£temporary1213>
new  <	add rbp, 49>

2579:
old  <	mov [rbp + 48], bl>
new  <	jmp scanChar>

2581:
old  < scanLongDouble$30:>
new  < scanLongDouble$20:>

2582:
old  <	; Goto 38>
new  <	; PostCall 49>

2583:
old  <	jmp scanLongDouble$38>
new  <>

2584:
old  <>
new  < scanLongDouble$21:>

2585:
old  < scanLongDouble$31:>
new  <	; GetReturnValue Â£temporary1197>

2586:
old  <	; NotEqual 38 input 45>
new  <>

2587:
old  <	cmp byte [rbp + 48], 45>
new  < scanLongDouble$22:>

2588:
old  <	jne scanLongDouble$38>
new  <	; Assign input Â£temporary1197>

2589:
old  <>
new  <	mov [rbp + 48], bl>

2590:
old  < scanLongDouble$32:>
new  <>

2591:
old  <	; Assign minus 1>
new  < scanLongDouble$23:>

2592:
old  <	mov dword [rbp + 24], 1>
new  <	; Goto 11>

2593:
old  <>
new  <	jmp scanLongDouble$11>

2594:
old  < scanLongDouble$33:>
new  <>

2595:
old  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < scanLongDouble$24:>

2596:
old  <>
new  <	; NotEqual 31 input 43>

2597:
old  < scanLongDouble$34:>
new  <	cmp byte [rbp + 48], 43>

2598:
old  <	; Call 49 scanChar 0>
new  <	jne scanLongDouble$31>

2599:
old  <	mov qword [rbp + 49], scanLongDouble$35>
new  <>

2600:
old  <	mov [rbp + 57], rbp>
new  < scanLongDouble$25:>

2601:
old  <	add rbp, 49>
new  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2602:
old  <	jmp scanChar>
new  <>

2603:
old  <>
new  < scanLongDouble$26:>

2604:
old  < scanLongDouble$35:>
new  <	; Call 49 scanChar 0>

2605:
old  <	; PostCall 49>
new  <	mov qword [rbp + 49], scanLongDouble$27>

2606:
old  <>
new  <	mov [rbp + 57], rbp>

2607:
old  < scanLongDouble$36:>
new  <	add rbp, 49>

2608:
old  <	; GetReturnValue Â£temporary1215>
new  <	jmp scanChar>

2610:
old  < scanLongDouble$37:>
new  < scanLongDouble$27:>

2611:
old  <	; Assign input Â£temporary1215>
new  <	; PostCall 49>

2612:
old  <	mov [rbp + 48], bl>
new  <>

2613:
old  <>
new  < scanLongDouble$28:>

2614:
old  < scanLongDouble$38:>
new  <	; GetReturnValue Â£temporary1200>

2615:
old  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

2616:
old  <>
new  < scanLongDouble$29:>

2617:
old  < scanLongDouble$39:>
new  <	; Assign input Â£temporary1200>

2618:
old  <	; IntegralToIntegral Â£temporary1216 input>
new  <	mov [rbp + 48], bl>

2619:
old  <	mov al, [rbp + 48]>
new  <>

2620:
old  <	and eax, 255>
new  < scanLongDouble$30:>

2621:
old  <	cmp al, 0>
new  <	; Goto 38>

2622:
old  <	jge scanLongDouble$40>
new  <	jmp scanLongDouble$38>

2623:
old  <	neg al>
new  <>

2624:
old  <	neg eax>
new  < scanLongDouble$31:>

2625:
old  <>
new  <	; NotEqual 38 input 45>

2626:
old  < scanLongDouble$40:>
new  <	cmp byte [rbp + 48], 45>

2627:
old  <	; Parameter 73 signedint Â£temporary1216>
new  <	jne scanLongDouble$38>

2628:
old  <	mov [rbp + 73], eax>
new  <>

2629:
old  <>
new  < scanLongDouble$32:>

2630:
old  < scanLongDouble$41:>
new  <	; Assign minus 1>

2631:
old  <	; Call 49 isdigit 0>
new  <	mov dword [rbp + 24], 1>

2632:
old  <	mov qword [rbp + 49], scanLongDouble$42>
new  <>

2633:
old  <	mov [rbp + 57], rbp>
new  < scanLongDouble$33:>

2634:
old  <	add rbp, 49>
new  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2635:
old  <	jmp isdigit>
new  <>

2636:
old  <>
new  < scanLongDouble$34:>

2637:
old  < scanLongDouble$42:>
new  <	; Call 49 scanChar 0>

2638:
old  <	; PostCall 49>
new  <	mov qword [rbp + 49], scanLongDouble$35>

2639:
old  <>
new  <	mov [rbp + 57], rbp>

2640:
old  < scanLongDouble$43:>
new  <	add rbp, 49>

2641:
old  <	; GetReturnValue Â£temporary1217>
new  <	jmp scanChar>

2643:
old  < scanLongDouble$44:>
new  < scanLongDouble$35:>

2644:
old  <	; Equal 60 Â£temporary1217 0>
new  <	; PostCall 49>

2645:
old  <	cmp ebx, 0>
new  <>

2646:
old  <	je scanLongDouble$60>
new  < scanLongDouble$36:>

2647:
old  <>
new  <	; GetReturnValue Â£temporary1202>

2648:
old  < scanLongDouble$45:>
new  <>

2649:
old  <	; PushFloat 10.0>
new  < scanLongDouble$37:>

2650:
old  <	fld qword [float8$10.0#]>
new  <	; Assign input Â£temporary1202>

2651:
old  <>
new  <	mov [rbp + 48], bl>

2652:
old  < scanLongDouble$46:>
new  <>

2653:
old  <	; PushFloat value>
new  < scanLongDouble$38:>

2654:
old  <	fld qword [rbp + 32]>
new  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2656:
old  < scanLongDouble$47:>
new  < scanLongDouble$39:>

2657:
old  <	; SignedMultiply Â£temporary1218 10.0 value>
new  <	; IntegralToIntegral Â£temporary1203 input>

2658:
old  <	fmul>
new  <	mov al, [rbp + 48]>

2659:
old  <>
new  <	and eax, 255>

2660:
old  < scanLongDouble$48:>
new  <	cmp al, 0>

2661:
old  <	; BinarySubtract Â£temporary1219 input 48>
new  <	jge scanLongDouble$40>

2662:
old  <	mov al, [rbp + 48]>
new  <	neg al>

2663:
old  <	sub al, 48>
new  <	neg eax>

2665:
old  < scanLongDouble$49:>
new  < scanLongDouble$40:>

2666:
old  <	; IntegralToIntegral Â£temporary1221 Â£temporary1219>
new  <	; Parameter 73 signedint Â£temporary1203>

2667:
old  <	and eax, 255>
new  <	mov [rbp + 73], eax>

2668:
old  <	cmp al, 0>
new  <>

2669:
old  <	jge scanLongDouble$50>
new  < scanLongDouble$41:>

2670:
old  <	neg al>
new  <	; Call 49 isdigit 0>

2671:
old  <	neg eax>
new  <	mov qword [rbp + 49], scanLongDouble$42>

2672:
old  <>
new  <	mov [rbp + 57], rbp>

2673:
old  < scanLongDouble$50:>
new  <	add rbp, 49>

2674:
old  <	; IntegralToFloating Â£temporary1220 Â£temporary1221>
new  <	jmp isdigit>

2675:
old  <	mov [container4bytes#], eax>
new  <>

2676:
old  <	fild dword [container4bytes#]>
new  < scanLongDouble$42:>

2677:
old  <>
new  <	; PostCall 49>

2678:
old  < scanLongDouble$51:>
new  <>

2679:
old  <	; BinaryAdd Â£temporary1222 Â£temporary1218 Â£temporary1220>
new  < scanLongDouble$43:>

2680:
old  <	fadd>
new  <	; GetReturnValue Â£temporary1204>

2682:
old  < scanLongDouble$52:>
new  < scanLongDouble$44:>

2683:
old  <	; PopFloat value>
new  <	; Equal 60 Â£temporary1204 0>

2684:
old  <	fstp qword [rbp + 32]>
new  <	cmp ebx, 0>

2685:
old  <>
new  <	je scanLongDouble$60>

2686:
old  < scanLongDouble$53:>
new  <>

2687:
old  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < scanLongDouble$45:>

2688:
old  <>
new  <	; PushFloat 10.0>

2689:
old  < scanLongDouble$54:>
new  <	fld qword [float8$10.0#]>

2690:
old  <	; Call 49 scanChar 0>
new  <>

2691:
old  <	mov qword [rbp + 49], scanLongDouble$55>
new  < scanLongDouble$46:>

2692:
old  <	mov [rbp + 57], rbp>
new  <	; PushFloat value>

2693:
old  <	add rbp, 49>
new  <	fld qword [rbp + 32]>

2694:
old  <	jmp scanChar>
new  <>

2695:
old  <>
new  < scanLongDouble$47:>

2696:
old  < scanLongDouble$55:>
new  <	; SignedMultiply Â£temporary1205 10.0 value>

2697:
old  <	; PostCall 49>
new  <	fmul>

2699:
old  < scanLongDouble$56:>
new  < scanLongDouble$48:>

2700:
old  <	; GetReturnValue Â£temporary1223>
new  <	; BinarySubtract Â£temporary1206 input 48>

2701:
old  <>
new  <	mov al, [rbp + 48]>

2702:
old  < scanLongDouble$57:>
new  <	sub al, 48>

2703:
old  <	; Assign input Â£temporary1223>
new  <>

2704:
old  <	mov [rbp + 48], bl>
new  < scanLongDouble$49:>

2705:
old  <>
new  <	; IntegralToIntegral Â£temporary1208 Â£temporary1206>

2706:
old  < scanLongDouble$58:>
new  <	and eax, 255>

2707:
old  <	; Assign found 1>
new  <	cmp al, 0>

2708:
old  <	mov dword [rbp + 28], 1>
new  <	jge scanLongDouble$50>

2709:
old  <>
new  <	neg al>

2710:
old  < scanLongDouble$59:>
new  <	neg eax>

2711:
old  <	; Goto 38>
new  <>

2712:
old  <	jmp scanLongDouble$38>
new  < scanLongDouble$50:>

2713:
old  <>
new  <	; IntegralToFloating Â£temporary1207 Â£temporary1208>

2714:
old  < scanLongDouble$60:>
new  <	mov [container4bytes#], eax>

2715:
old  <	; NotEqual 92 input 46>
new  <	fild dword [container4bytes#]>

2716:
old  <	cmp byte [rbp + 48], 46>
new  <>

2717:
old  <	jne scanLongDouble$92>
new  < scanLongDouble$51:>

2718:
old  <>
new  <	; BinaryAdd Â£temporary1209 Â£temporary1205 Â£temporary1207>

2719:
old  < scanLongDouble$61:>
new  <	fadd>

2720:
old  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

2721:
old  <>
new  < scanLongDouble$52:>

2722:
old  < scanLongDouble$62:>
new  <	; PopFloat value>

2723:
old  <	; Call 49 scanChar 0>
new  <	fstp qword [rbp + 32]>

2724:
old  <	mov qword [rbp + 49], scanLongDouble$63>
new  <>

2725:
old  <	mov [rbp + 57], rbp>
new  < scanLongDouble$53:>

2726:
old  <	add rbp, 49>
new  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2727:
old  <	jmp scanChar>
new  <>

2728:
old  <>
new  < scanLongDouble$54:>

2729:
old  < scanLongDouble$63:>
new  <	; Call 49 scanChar 0>

2730:
old  <	; PostCall 49>
new  <	mov qword [rbp + 49], scanLongDouble$55>

2731:
old  <>
new  <	mov [rbp + 57], rbp>

2732:
old  < scanLongDouble$64:>
new  <	add rbp, 49>

2733:
old  <	; GetReturnValue Â£temporary1226>
new  <	jmp scanChar>

2735:
old  < scanLongDouble$65:>
new  < scanLongDouble$55:>

2736:
old  <	; Assign input Â£temporary1226>
new  <	; PostCall 49>

2737:
old  <	mov [rbp + 48], bl>
new  <>

2738:
old  <>
new  < scanLongDouble$56:>

2739:
old  < scanLongDouble$66:>
new  <	; GetReturnValue Â£temporary1210>

2740:
old  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

2741:
old  <>
new  < scanLongDouble$57:>

2742:
old  < scanLongDouble$67:>
new  <	; Assign input Â£temporary1210>

2743:
old  <	; IntegralToIntegral Â£temporary1227 input>
new  <	mov [rbp + 48], bl>

2744:
old  <	mov al, [rbp + 48]>
new  <>

2745:
old  <	and eax, 255>
new  < scanLongDouble$58:>

2746:
old  <	cmp al, 0>
new  <	; Assign found 1>

2747:
old  <	jge scanLongDouble$68>
new  <	mov dword [rbp + 28], 1>

2748:
old  <	neg al>
new  <>

2749:
old  <	neg eax>
new  < scanLongDouble$59:>

2750:
old  <>
new  <	; Goto 38>

2751:
old  < scanLongDouble$68:>
new  <	jmp scanLongDouble$38>

2752:
old  <	; Parameter 73 signedint Â£temporary1227>
new  <>

2753:
old  <	mov [rbp + 73], eax>
new  < scanLongDouble$60:>

2754:
old  <>
new  <	; NotEqual 92 input 46>

2755:
old  < scanLongDouble$69:>
new  <	cmp byte [rbp + 48], 46>

2756:
old  <	; Call 49 isdigit 0>
new  <	jne scanLongDouble$92>

2757:
old  <	mov qword [rbp + 49], scanLongDouble$70>
new  <>

2758:
old  <	mov [rbp + 57], rbp>
new  < scanLongDouble$61:>

2759:
old  <	add rbp, 49>
new  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2760:
old  <	jmp isdigit>
new  <>

2761:
old  <>
new  < scanLongDouble$62:>

2762:
old  < scanLongDouble$70:>
new  <	; Call 49 scanChar 0>

2763:
old  <	; PostCall 49>
new  <	mov qword [rbp + 49], scanLongDouble$63>

2764:
old  <>
new  <	mov [rbp + 57], rbp>

2765:
old  < scanLongDouble$71:>
new  <	add rbp, 49>

2766:
old  <	; GetReturnValue Â£temporary1228>
new  <	jmp scanChar>

2768:
old  < scanLongDouble$72:>
new  < scanLongDouble$63:>

2769:
old  <	; Equal 92 Â£temporary1228 0>
new  <	; PostCall 49>

2770:
old  <	cmp ebx, 0>
new  <>

2771:
old  <	je scanLongDouble$92>
new  < scanLongDouble$64:>

2772:
old  <>
new  <	; GetReturnValue Â£temporary1213>

2773:
old  < scanLongDouble$73:>
new  <>

2774:
old  <	; PushFloat factor>
new  < scanLongDouble$65:>

2775:
old  <	fld qword [rbp + 40]>
new  <	; Assign input Â£temporary1213>

2776:
old  <>
new  <	mov [rbp + 48], bl>

2777:
old  < scanLongDouble$74:>
new  <>

2778:
old  <	; PushFloat 10.0>
new  < scanLongDouble$66:>

2779:
old  <	fld qword [float8$10.0#]>
new  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2781:
old  < scanLongDouble$75:>
new  < scanLongDouble$67:>

2782:
old  <	; SignedDivide Â£temporary1229 factor 10.0>
new  <	; IntegralToIntegral Â£temporary1214 input>

2783:
old  <	fdiv>
new  <	mov al, [rbp + 48]>

2784:
old  <>
new  <	and eax, 255>

2785:
old  < scanLongDouble$76:>
new  <	cmp al, 0>

2786:
old  <	; PopFloat factor>
new  <	jge scanLongDouble$68>

2787:
old  <	fstp qword [rbp + 40]>
new  <	neg al>

2788:
old  <>
new  <	neg eax>

2789:
old  < scanLongDouble$77:>
new  <>

2790:
old  <	; PushFloat value>
new  < scanLongDouble$68:>

2791:
old  <	fld qword [rbp + 32]>
new  <	; Parameter 73 signedint Â£temporary1214>

2792:
old  <>
new  <	mov [rbp + 73], eax>

2793:
old  < scanLongDouble$78:>
new  <>

2794:
old  <	; PushFloat factor>
new  < scanLongDouble$69:>

2795:
old  <	fld qword [rbp + 40]>
new  <	; Call 49 isdigit 0>

2796:
old  <>
new  <	mov qword [rbp + 49], scanLongDouble$70>

2797:
old  < scanLongDouble$79:>
new  <	mov [rbp + 57], rbp>

2798:
old  <	; BinarySubtract Â£temporary1230 input 48>
new  <	add rbp, 49>

2799:
old  <	mov al, [rbp + 48]>
new  <	jmp isdigit>

2800:
old  <	sub al, 48>
new  <>

2801:
old  <>
new  < scanLongDouble$70:>

2802:
old  < scanLongDouble$80:>
new  <	; PostCall 49>

2803:
old  <	; IntegralToIntegral Â£temporary1232 Â£temporary1230>
new  <>

2804:
old  <	and eax, 255>
new  < scanLongDouble$71:>

2805:
old  <	cmp al, 0>
new  <	; GetReturnValue Â£temporary1215>

2806:
old  <	jge scanLongDouble$81>
new  <>

2807:
old  <	neg al>
new  < scanLongDouble$72:>

2808:
old  <	neg eax>
new  <	; Equal 92 Â£temporary1215 0>

2809:
old  <>
new  <	cmp ebx, 0>

2810:
old  < scanLongDouble$81:>
new  <	je scanLongDouble$92>

2811:
old  <	; IntegralToFloating Â£temporary1231 Â£temporary1232>
new  <>

2812:
old  <	mov [container4bytes#], eax>
new  < scanLongDouble$73:>

2813:
old  <	fild dword [container4bytes#]>
new  <	; PushFloat factor>

2814:
old  <>
new  <	fld qword [rbp + 40]>

2815:
old  < scanLongDouble$82:>
new  <>

2816:
old  <	; SignedMultiply Â£temporary1233 factor Â£temporary1231>
new  < scanLongDouble$74:>

2817:
old  <	fmul>
new  <	; PushFloat 10.0>

2818:
old  <>
new  <	fld qword [float8$10.0#]>

2819:
old  < scanLongDouble$83:>
new  <>

2820:
old  <	; BinaryAdd Â£temporary1234 value Â£temporary1233>
new  < scanLongDouble$75:>

2821:
old  <	fadd>
new  <	; SignedDivide Â£temporary1216 factor 10.0>

2822:
old  <>
new  <	fdiv>

2823:
old  < scanLongDouble$84:>
new  <>

2824:
old  <	; PopFloat value>
new  < scanLongDouble$76:>

2825:
old  <	fstp qword [rbp + 32]>
new  <	; PopFloat factor>

2826:
old  <>
new  <	fstp qword [rbp + 40]>

2827:
old  < scanLongDouble$85:>
new  <>

2828:
old  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < scanLongDouble$77:>

2829:
old  <>
new  <	; PushFloat value>

2830:
old  < scanLongDouble$86:>
new  <	fld qword [rbp + 32]>

2831:
old  <	; Call 49 scanChar 0>
new  <>

2832:
old  <	mov qword [rbp + 49], scanLongDouble$87>
new  < scanLongDouble$78:>

2833:
old  <	mov [rbp + 57], rbp>
new  <	; PushFloat factor>

2834:
old  <	add rbp, 49>
new  <	fld qword [rbp + 40]>

2835:
old  <	jmp scanChar>
new  <>

2836:
old  <>
new  < scanLongDouble$79:>

2837:
old  < scanLongDouble$87:>
new  <	; BinarySubtract Â£temporary1217 input 48>

2838:
old  <	; PostCall 49>
new  <	mov al, [rbp + 48]>

2839:
old  <>
new  <	sub al, 48>

2840:
old  < scanLongDouble$88:>
new  <>

2841:
old  <	; GetReturnValue Â£temporary1235>
new  < scanLongDouble$80:>

2842:
old  <>
new  <	; IntegralToIntegral Â£temporary1219 Â£temporary1217>

2843:
old  < scanLongDouble$89:>
new  <	and eax, 255>

2844:
old  <	; Assign input Â£temporary1235>
new  <	cmp al, 0>

2845:
old  <	mov [rbp + 48], bl>
new  <	jge scanLongDouble$81>

2846:
old  <>
new  <	neg al>

2847:
old  < scanLongDouble$90:>
new  <	neg eax>

2848:
old  <	; Assign found 1>
new  <>

2849:
old  <	mov dword [rbp + 28], 1>
new  < scanLongDouble$81:>

2850:
old  <>
new  <	; IntegralToFloating Â£temporary1218 Â£temporary1219>

2851:
old  < scanLongDouble$91:>
new  <	mov [container4bytes#], eax>

2852:
old  <	; Goto 66>
new  <	fild dword [container4bytes#]>

2853:
old  <	jmp scanLongDouble$66>
new  <>

2854:
old  <>
new  < scanLongDouble$82:>

2855:
old  < scanLongDouble$92:>
new  <	; SignedMultiply Â£temporary1220 factor Â£temporary1218>

2856:
old  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	fmul>

2858:
old  < scanLongDouble$93:>
new  < scanLongDouble$83:>

2859:
old  <	; IntegralToIntegral Â£temporary1237 input>
new  <	; BinaryAdd Â£temporary1221 value Â£temporary1220>

2860:
old  <	mov al, [rbp + 48]>
new  <	fadd>

2861:
old  <	and eax, 255>
new  <>

2862:
old  <	cmp al, 0>
new  < scanLongDouble$84:>

2863:
old  <	jge scanLongDouble$94>
new  <	; PopFloat value>

2864:
old  <	neg al>
new  <	fstp qword [rbp + 32]>

2865:
old  <	neg eax>
new  <>

2866:
old  <>
new  < scanLongDouble$85:>

2867:
old  < scanLongDouble$94:>
new  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2868:
old  <	; Parameter 73 signedint Â£temporary1237>
new  <>

2869:
old  <	mov [rbp + 73], eax>
new  < scanLongDouble$86:>

2870:
old  <>
new  <	; Call 49 scanChar 0>

2871:
old  < scanLongDouble$95:>
new  <	mov qword [rbp + 49], scanLongDouble$87>

2872:
old  <	; Call 49 tolower 0>
new  <	mov [rbp + 57], rbp>

2873:
old  <	mov qword [rbp + 49], scanLongDouble$96>
new  <	add rbp, 49>

2874:
old  <	mov [rbp + 57], rbp>
new  <	jmp scanChar>

2875:
old  <	add rbp, 49>
new  <>

2876:
old  <	jmp tolower>
new  < scanLongDouble$87:>

2877:
old  <>
new  <	; PostCall 49>

2878:
old  < scanLongDouble$96:>
new  <>

2879:
old  <	; PostCall 49>
new  < scanLongDouble$88:>

2880:
old  <>
new  <	; GetReturnValue Â£temporary1222>

2881:
old  < scanLongDouble$97:>
new  <>

2882:
old  <	; GetReturnValue Â£temporary1238>
new  < scanLongDouble$89:>

2883:
old  <>
new  <	; Assign input Â£temporary1222>

2884:
old  < scanLongDouble$98:>
new  <	mov [rbp + 48], bl>

2885:
old  <	; NotEqual 118 Â£temporary1238 101>
new  <>

2886:
old  <	cmp ebx, 101>
new  < scanLongDouble$90:>

2887:
old  <	jne scanLongDouble$118>
new  <	; Assign found 1>

2888:
old  <>
new  <	mov dword [rbp + 28], 1>

2889:
old  < scanLongDouble$99:>
new  <>

2890:
old  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < scanLongDouble$91:>

2891:
old  <>
new  <	; Goto 66>

2892:
old  < scanLongDouble$100:>
new  <	jmp scanLongDouble$66>

2893:
old  <	; Parameter 73 signedint 10>
new  <>

2894:
old  <	mov dword [rbp + 73], 10>
new  < scanLongDouble$92:>

2895:
old  <>
new  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2896:
old  < scanLongDouble$101:>
new  <>

2897:
old  <	; Call 49 scanLongInt 0>
new  < scanLongDouble$93:>

2898:
old  <	mov qword [rbp + 49], scanLongDouble$102>
new  <	; IntegralToIntegral Â£temporary1224 input>

2899:
old  <	mov [rbp + 57], rbp>
new  <	mov al, [rbp + 48]>

2900:
old  <	add rbp, 49>
new  <	and eax, 255>

2901:
old  <	jmp scanLongInt>
new  <	cmp al, 0>

2902:
old  <>
new  <	jge scanLongDouble$94>

2903:
old  < scanLongDouble$102:>
new  <	neg al>

2904:
old  <	; PostCall 49>
new  <	neg eax>

2906:
old  < scanLongDouble$103:>
new  < scanLongDouble$94:>

2907:
old  <	; GetReturnValue Â£temporary1240>
new  <	; Parameter 73 signedint Â£temporary1224>

2908:
old  <>
new  <	mov [rbp + 73], eax>

2909:
old  < scanLongDouble$104:>
new  <>

2910:
old  <	; IntegralToFloating Â£temporary1241 Â£temporary1240>
new  < scanLongDouble$95:>

2911:
old  <	mov [container8bytes#], rbx>
new  <	; Call 49 tolower 0>

2912:
old  <	fild qword [container8bytes#]>
new  <	mov qword [rbp + 49], scanLongDouble$96>

2913:
old  <>
new  <	mov [rbp + 57], rbp>

2914:
old  < scanLongDouble$105:>
new  <	add rbp, 49>

2915:
old  <	; PopFloat exponent>
new  <	jmp tolower>

2916:
old  <	fstp qword [rbp + 49]>
new  <>

2917:
old  <>
new  < scanLongDouble$96:>

2918:
old  < scanLongDouble$106:>
new  <	; PostCall 49>

2919:
old  <	; PushFloat value>
new  <>

2920:
old  <	fld qword [rbp + 32]>
new  < scanLongDouble$97:>

2921:
old  <>
new  <	; GetReturnValue Â£temporary1225>

2922:
old  < scanLongDouble$107:>
new  <>

2923:
old  <	; PreCall 57 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 1>
new  < scanLongDouble$98:>

2924:
old  <	fstp qword [rbp + 57]>
new  <	; NotEqual 118 Â£temporary1225 101>

2925:
old  <>
new  <	cmp ebx, 101>

2926:
old  < scanLongDouble$108:>
new  <	jne scanLongDouble$118>

2927:
old  <	; PushFloat 10.0>
new  <>

2928:
old  <	fld qword [float8$10.0#]>
new  < scanLongDouble$99:>

2929:
old  <>
new  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2930:
old  < scanLongDouble$109:>
new  <>

2931:
old  <	; Parameter 81 double 10.0>
new  < scanLongDouble$100:>

2932:
old  <	fstp qword [rbp + 89]>
new  <	; Parameter 73 signedint 10>

2933:
old  <>
new  <	mov dword [rbp + 73], 10>

2934:
old  < scanLongDouble$110:>
new  <>

2935:
old  <	; PushFloat exponent>
new  < scanLongDouble$101:>

2936:
old  <	fld qword [rbp + 49]>
new  <	; Call 49 scanLongInt 0>

2937:
old  <>
new  <	mov qword [rbp + 49], scanLongDouble$102>

2938:
old  < scanLongDouble$111:>
new  <	mov [rbp + 57], rbp>

2939:
old  <	; Parameter 89 double exponent>
new  <	add rbp, 49>

2940:
old  <	fstp qword [rbp + 97]>
new  <	jmp scanLongInt>

2942:
old  < scanLongDouble$112:>
new  < scanLongDouble$102:>

2943:
old  <	; Call 57 pow 0>
new  <	; PostCall 49>

2944:
old  <	mov qword [rbp + 65], scanLongDouble$113>
new  <>

2945:
old  <	mov [rbp + 73], rbp>
new  < scanLongDouble$103:>

2946:
old  <	add rbp, 65>
new  <	; GetReturnValue Â£temporary1227>

2947:
old  <	jmp pow>
new  <>

2948:
old  <>
new  < scanLongDouble$104:>

2949:
old  < scanLongDouble$113:>
new  <	; IntegralToFloating Â£temporary1228 Â£temporary1227>

2950:
old  <	; PostCall 57>
new  <	mov [container8bytes#], rbx>

2951:
old  <	fstp qword [rbp + 65]>
new  <	fild qword [container8bytes#]>

2952:
old  <	fld qword [rbp + 57]>
new  <>

2953:
old  <	fld qword [rbp + 65]>
new  < scanLongDouble$105:>

2954:
old  <>
new  <	; PopFloat exponent>

2955:
old  < scanLongDouble$114:>
new  <	fstp qword [rbp + 49]>

2956:
old  <	; GetReturnValue Â£temporary1242>
new  <>

2957:
old  <>
new  < scanLongDouble$106:>

2958:
old  < scanLongDouble$115:>
new  <	; PushFloat value>

2959:
old  <	; SignedMultiply Â£temporary1243 value Â£temporary1242>
new  <	fld qword [rbp + 32]>

2960:
old  <	fmul>
new  <>

2961:
old  <>
new  < scanLongDouble$107:>

2962:
old  < scanLongDouble$116:>
new  <	; PreCall 57 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 1>

2963:
old  <	; PopFloat value>
new  <	fstp qword [rbp + 57]>

2964:
old  <	fstp qword [rbp + 32]>
new  <>

2965:
old  <>
new  < scanLongDouble$108:>

2966:
old  < scanLongDouble$117:>
new  <	; PushFloat 10.0>

2967:
old  <	; Goto 122>
new  <	fld qword [float8$10.0#]>

2968:
old  <	jmp scanLongDouble$122>
new  <>

2969:
old  <>
new  < scanLongDouble$109:>

2970:
old  < scanLongDouble$118:>
new  <	; Parameter 81 double 10.0>

2971:
old  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	fstp qword [rbp + 89]>

2973:
old  < scanLongDouble$119:>
new  < scanLongDouble$110:>

2974:
old  <	; Parameter 73 signedchar input>
new  <	; PushFloat exponent>

2975:
old  <	mov al, [rbp + 48]>
new  <	fld qword [rbp + 49]>

2976:
old  <	mov [rbp + 73], al>
new  <>

2977:
old  <>
new  < scanLongDouble$111:>

2978:
old  < scanLongDouble$120:>
new  <	; Parameter 89 double exponent>

2979:
old  <	; Call 49 unscanChar 0>
new  <	fstp qword [rbp + 97]>

2980:
old  <	mov qword [rbp + 49], scanLongDouble$121>
new  <>

2981:
old  <	mov [rbp + 57], rbp>
new  < scanLongDouble$112:>

2982:
old  <	add rbp, 49>
new  <	; Call 57 pow 0>

2983:
old  <	jmp unscanChar>
new  <	mov qword [rbp + 65], scanLongDouble$113>

2984:
old  <>
new  <	mov [rbp + 73], rbp>

2985:
old  < scanLongDouble$121:>
new  <	add rbp, 65>

2986:
old  <	; PostCall 49>
new  <	jmp pow>

2988:
old  < scanLongDouble$122:>
new  < scanLongDouble$113:>

2989:
old  <	; Equal 126 minus 0>
new  <	; PostCall 57>

2990:
old  <	cmp dword [rbp + 24], 0>
new  <	fstp qword [rbp + 65]>

2991:
old  <	je scanLongDouble$126>
new  <	fld qword [rbp + 57]>

2992:
old  <>
new  <	fld qword [rbp + 65]>

2993:
old  < scanLongDouble$123:>
new  <>

2994:
old  <	; PushFloat value>
new  < scanLongDouble$114:>

2995:
old  <	fld qword [rbp + 32]>
new  <	; GetReturnValue Â£temporary1229>

2997:
old  < scanLongDouble$124:>
new  < scanLongDouble$115:>

2998:
old  <	; UnarySubtract Â£temporary1245 value>
new  <	; SignedMultiply Â£temporary1230 value Â£temporary1229>

2999:
old  <	fchs>
new  <	fmul>

3001:
old  < scanLongDouble$125:>
new  < scanLongDouble$116:>

3005:
old  < scanLongDouble$126:>
new  < scanLongDouble$117:>

3006:
old  <	; Equal 128 found 0>
new  <	; Goto 122>

3007:
old  <	cmp dword [rbp + 28], 0>
new  <	jmp scanLongDouble$122>

3008:
old  <	je scanLongDouble$128>
new  <>

3009:
old  <>
new  < scanLongDouble$118:>

3010:
old  < scanLongDouble$127:>
new  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3011:
old  <	; BinaryAdd g_inCount g_inCount 1>
new  <>

3012:
old  <	inc dword [g_inCount]>
new  < scanLongDouble$119:>

3013:
old  <>
new  <	; Parameter 73 signedchar input>

3014:
old  < scanLongDouble$128:>
new  <	mov al, [rbp + 48]>

3015:
old  <	; PushFloat value>
new  <	mov [rbp + 73], al>

3016:
old  <	fld qword [rbp + 32]>
new  <>

3017:
old  <>
new  < scanLongDouble$120:>

3018:
old  < scanLongDouble$129:>
new  <	; Call 49 unscanChar 0>

3019:
old  <	; Return value>
new  <	mov qword [rbp + 49], scanLongDouble$121>

3020:
old  <	mov rax, [rbp]>
new  <	mov [rbp + 57], rbp>

3021:
old  <	mov rdi, [rbp + 16]>
new  <	add rbp, 49>

3022:
old  <	mov rbp, [rbp + 8]>
new  <	jmp unscanChar>

3023:
old  <	jmp rax>
new  <>

3024:
old  <>
new  < scanLongDouble$121:>

3025:
old  < scanLongDouble$130:>
new  <	; PostCall 49>

3026:
old  <	; FunctionEnd scanLongDouble>
new  <>

3027:
old  <>
new  < scanLongDouble$122:>

3028:
old  <section .data>
new  <	; Equal 126 minus 0>

3029:
old  <>
new  <	cmp dword [rbp + 24], 0>

3030:
old  <string_scanFormat20c203D202725c270A#:>
new  <	je scanLongDouble$126>

3031:
old  <	; Initializer String scanFormat c = '%c'\n>
new  <>

3032:
old  <	db "scanFormat c = ", 39, "%c", 39, 10, 0>
new  < scanLongDouble$123:>

3033:
old  <>
new  <	; PushFloat value>

3034:
old  <section .text>
new  <	fld qword [rbp + 32]>

3036:
old  < scanFormat:>
new  < scanLongDouble$124:>

3037:
old  <	; Assign percent 0>
new  <	; UnarySubtract Â£temporary1232 value>

3038:
old  <	mov dword [rbp + 49], 0>
new  <	fchs>

3040:
old  < scanFormat$1:>
new  < scanLongDouble$125:>

3041:
old  <	; Assign shortInt 0>
new  <	; PopFloat value>

3042:
old  <	mov dword [rbp + 53], 0>
new  <	fstp qword [rbp + 32]>

3044:
old  < scanFormat$2:>
new  < scanLongDouble$126:>

3045:
old  <	; Assign longIntOrDouble 0>
new  <	; Equal 128 found 0>

3046:
old  <	mov dword [rbp + 57], 0>
new  <	cmp dword [rbp + 28], 0>

3047:
old  <>
new  <	je scanLongDouble$128>

3048:
old  < scanFormat$3:>
new  <>

3049:
old  <	; Assign longDouble 0>
new  < scanLongDouble$127:>

3050:
old  <	mov dword [rbp + 61], 0>
new  <	; BinaryAdd g_inCount g_inCount 1>

3051:
old  <>
new  <	inc dword [g_inCount]>

3052:
old  < scanFormat$4:>
new  <>

3053:
old  <	; Assign star 0>
new  < scanLongDouble$128:>

3054:
old  <	mov dword [rbp + 65], 0>
new  <	; PushFloat value>

3055:
old  <>
new  <	fld qword [rbp + 32]>

3056:
old  < scanFormat$5:>
new  <>

3057:
old  <	; Assign g_inCount 0>
new  < scanLongDouble$129:>

3058:
old  <	mov dword [g_inCount], 0>
new  <	; SetReturnValue>

3060:
old  < scanFormat$6:>
new  < scanLongDouble$130:>

3061:
old  <	; Assign g_inChars 0>
new  <	; Return value>

3062:
old  <	mov dword [g_inChars], 0>
new  <	mov rax, [rbp]>

3063:
old  <>
new  <	mov rdi, [rbp + 16]>

3064:
old  < scanFormat$7:>
new  <	mov rbp, [rbp + 8]>

3065:
old  <	; Assign index 0>
new  <	jmp rax>

3066:
old  <	mov dword [rbp + 93], 0>
new  <>

3067:
old  <>
new  < scanLongDouble$131:>

3068:
old  < scanFormat$8:>
new  <	; FunctionEnd scanLongDouble>

3069:
old  <	; IntegralToIntegral Â£temporary1252 index>
new  <>

3070:
old  <	mov eax, [rbp + 93]>
new  <section .data>

3071:
old  <	mov rbx, 4294967295>
new  <>

3072:
old  <	and rax, rbx>
new  <string_scanFormat20c203D202725c270A#:>

3073:
old  <>
new  <	; Initializer String scanFormat c = '%c'\n>

3074:
old  < scanFormat$9:>
new  <	db "scanFormat c = ", 39, "%c", 39, 10, 0>

3075:
old  <	; BinaryAdd Â£temporary1254 format Â£temporary1252>
new  <>

3076:
old  <	mov rsi, [rbp + 24]>
new  <section .text>

3077:
old  <	add rsi, rax>
new  <>

3078:
old  <>
new  < scanFormat:>

3079:
old  < scanFormat$10:>
new  <	; Assign percent 0>

3080:
old  <	; Dereference Â£temporary1251 -> Â£temporary1254 Â£temporary1254 0>
new  <	mov dword [rbp + 49], 0>

3082:
old  < scanFormat$11:>
new  < scanFormat$1:>

3083:
old  <	; Equal 391 Â£temporary1251 -> Â£temporary1254 0>
new  <	; Assign shortInt 0>

3084:
old  <	cmp byte [rsi], 0>
new  <	mov dword [rbp + 53], 0>

3085:
old  <	je scanFormat$391>
new  <>

3086:
old  <>
new  < scanFormat$2:>

3087:
old  < scanFormat$12:>
new  <	; Assign longIntOrDouble 0>

3088:
old  <	; IntegralToIntegral Â£temporary1258 index>
new  <	mov dword [rbp + 57], 0>

3089:
old  <	mov eax, [rbp + 93]>
new  <>

3090:
old  <	mov rbx, 4294967295>
new  < scanFormat$3:>

3091:
old  <	and rax, rbx>
new  <	; Assign longDouble 0>

3092:
old  <>
new  <	mov dword [rbp + 61], 0>

3093:
old  < scanFormat$13:>
new  <>

3094:
old  <	; BinaryAdd Â£temporary1260 format Â£temporary1258>
new  < scanFormat$4:>

3095:
old  <	mov rsi, [rbp + 24]>
new  <	; Assign star 0>

3096:
old  <	add rsi, rax>
new  <	mov dword [rbp + 65], 0>

3098:
old  < scanFormat$14:>
new  < scanFormat$5:>

3099:
old  <	; Dereference Â£temporary1257 -> Â£temporary1260 Â£temporary1260 0>
new  <	; Assign g_inCount 0>

3100:
old  <>
new  <	mov dword [g_inCount], 0>

3101:
old  < scanFormat$15:>
new  <>

3102:
old  <	; Assign c Â£temporary1257 -> Â£temporary1260>
new  < scanFormat$6:>

3103:
old  <	mov al, [rsi]>
new  <	; Assign g_inChars 0>

3104:
old  <	mov [rbp + 40], al>
new  <	mov dword [g_inChars], 0>

3106:
old  < scanFormat$16:>
new  < scanFormat$7:>

3107:
old  <	; IntegralToIntegral Â£temporary1261 c>
new  <	; Assign index 0>

3108:
old  <	mov al, [rbp + 40]>
new  <	mov dword [rbp + 93], 0>

3109:
old  <	and eax, 255>
new  <>

3110:
old  <	cmp al, 0>
new  < scanFormat$8:>

3111:
old  <	jge scanFormat$17>
new  <	; IntegralToIntegral Â£temporary1239 index>

3112:
old  <	neg al>
new  <	mov eax, [rbp + 93]>

3113:
old  <	neg eax>
new  <	mov rbx, 4294967295>

3114:
old  <>
new  <	and rax, rbx>

3115:
old  < scanFormat$17:>
new  <>

3116:
old  <	; BinaryAdd d Â£temporary1261 1>
new  < scanFormat$9:>

3117:
old  <	inc eax>
new  <	; BinaryAdd Â£temporary1241 format Â£temporary1239>

3118:
old  <	mov [rbp + 153], eax>
new  <	mov rsi, [rbp + 24]>

3119:
old  <>
new  <	add rsi, rax>

3120:
old  < scanFormat$18:>
new  <>

3121:
old  <	; Equal 383 percent 0>
new  < scanFormat$10:>

3122:
old  <	cmp dword [rbp + 49], 0>
new  <	; Dereference Â£temporary1238 -> Â£temporary1241 Â£temporary1241 0>

3123:
old  <	je scanFormat$383>
new  <>

3124:
old  <>
new  < scanFormat$11:>

3125:
old  < scanFormat$19:>
new  <	; Equal 391 Â£temporary1238 -> Â£temporary1241 0>

3126:
old  <	; BinarySubtract Â£temporary1263 d 1>
new  <	cmp byte [rsi], 0>

3127:
old  <	mov eax, [rbp + 153]>
new  <	je scanFormat$391>

3128:
old  <	dec eax>
new  <>

3129:
old  <>
new  < scanFormat$12:>

3130:
old  < scanFormat$20:>
new  <	; IntegralToIntegral Â£temporary1245 index>

3131:
old  <	; Case 38 Â£temporary1263 104>
new  <	mov eax, [rbp + 93]>

3132:
old  <	cmp eax, 104>
new  <	mov rbx, 4294967295>

3133:
old  <	je scanFormat$38>
new  <	and rax, rbx>

3135:
old  < scanFormat$21:>
new  < scanFormat$13:>

3136:
old  <	; Case 40 Â£temporary1263 108>
new  <	; BinaryAdd Â£temporary1247 format Â£temporary1245>

3137:
old  <	cmp eax, 108>
new  <	mov rsi, [rbp + 24]>

3138:
old  <	je scanFormat$40>
new  <	add rsi, rax>

3140:
old  < scanFormat$22:>
new  < scanFormat$14:>

3141:
old  <	; Case 42 Â£temporary1263 76>
new  <	; Dereference Â£temporary1244 -> Â£temporary1247 Â£temporary1247 0>

3142:
old  <	cmp eax, 76>
new  <>

3143:
old  <	je scanFormat$42>
new  < scanFormat$15:>

3144:
old  <>
new  <	; Assign c Â£temporary1244 -> Â£temporary1247>

3145:
old  < scanFormat$23:>
new  <	mov al, [rsi]>

3146:
old  <	; Case 44 Â£temporary1263 42>
new  <	mov [rbp + 40], al>

3147:
old  <	cmp eax, 42>
new  <>

3148:
old  <	je scanFormat$44>
new  < scanFormat$16:>

3149:
old  <>
new  <	; IntegralToIntegral Â£temporary1248 c>

3150:
old  < scanFormat$24:>
new  <	mov al, [rbp + 40]>

3151:
old  <	; Case 46 Â£temporary1263 99>
new  <	and eax, 255>

3152:
old  <	cmp eax, 99>
new  <	cmp al, 0>

3153:
old  <	je scanFormat$46>
new  <	jge scanFormat$17>

3154:
old  <>
new  <	neg al>

3155:
old  < scanFormat$25:>
new  <	neg eax>

3156:
old  <	; Case 67 Â£temporary1263 115>
new  <>

3157:
old  <	cmp eax, 115>
new  < scanFormat$17:>

3158:
old  <	je scanFormat$67>
new  <	; BinaryAdd d Â£temporary1248 1>

3159:
old  <>
new  <	inc eax>

3160:
old  < scanFormat$26:>
new  <	mov [rbp + 153], eax>

3161:
old  <	; Case 89 Â£temporary1263 100>
new  <>

3162:
old  <	cmp eax, 100>
new  < scanFormat$18:>

3163:
old  <	je scanFormat$89>
new  <	; Equal 383 percent 0>

3164:
old  <>
new  <	cmp dword [rbp + 49], 0>

3165:
old  < scanFormat$27:>
new  <	je scanFormat$383>

3166:
old  <	; Case 89 Â£temporary1263 105>
new  <>

3167:
old  <	cmp eax, 105>
new  < scanFormat$19:>

3168:
old  <	je scanFormat$89>
new  <	; BinarySubtract Â£temporary1250 d 1>

3169:
old  <>
new  <	mov eax, [rbp + 153]>

3170:
old  < scanFormat$28:>
new  <	dec eax>

3171:
old  <	; Case 134 Â£temporary1263 111>
new  <>

3172:
old  <	cmp eax, 111>
new  < scanFormat$20:>

3173:
old  <	je scanFormat$134>
new  <	; Case 38 Â£temporary1250 104>

3174:
old  <>
new  <	cmp eax, 104>

3175:
old  < scanFormat$29:>
new  <	je scanFormat$38>

3176:
old  <	; Case 179 Â£temporary1263 120>
new  <>

3177:
old  <	cmp eax, 120>
new  < scanFormat$21:>

3178:
old  <	je scanFormat$179>
new  <	; Case 40 Â£temporary1250 108>

3179:
old  <>
new  <	cmp eax, 108>

3180:
old  < scanFormat$30:>
new  <	je scanFormat$40>

3181:
old  <	; Case 224 Â£temporary1263 117>
new  <>

3182:
old  <	cmp eax, 117>
new  < scanFormat$22:>

3183:
old  <	je scanFormat$224>
new  <	; Case 42 Â£temporary1250 76>

3184:
old  <>
new  <	cmp eax, 76>

3185:
old  < scanFormat$31:>
new  <	je scanFormat$42>

3186:
old  <	; Case 269 Â£temporary1263 103>
new  <>

3187:
old  <	cmp eax, 103>
new  < scanFormat$23:>

3188:
old  <	je scanFormat$269>
new  <	; Case 44 Â£temporary1250 42>

3189:
old  <>
new  <	cmp eax, 42>

3190:
old  < scanFormat$32:>
new  <	je scanFormat$44>

3191:
old  <	; Case 269 Â£temporary1263 102>
new  <>

3192:
old  <	cmp eax, 102>
new  < scanFormat$24:>

3193:
old  <	je scanFormat$269>
new  <	; Case 46 Â£temporary1250 99>

3194:
old  <>
new  <	cmp eax, 99>

3195:
old  < scanFormat$33:>
new  <	je scanFormat$46>

3196:
old  <	; Case 269 Â£temporary1263 101>
new  <>

3197:
old  <	cmp eax, 101>
new  < scanFormat$25:>

3198:
old  <	je scanFormat$269>
new  <	; Case 67 Â£temporary1250 115>

3199:
old  <>
new  <	cmp eax, 115>

3200:
old  < scanFormat$34:>
new  <	je scanFormat$67>

3201:
old  <	; Case 314 Â£temporary1263 91>
new  <>

3202:
old  <	cmp eax, 91>
new  < scanFormat$26:>

3203:
old  <	je scanFormat$314>
new  <	; Case 89 Â£temporary1250 100>

3204:
old  <>
new  <	cmp eax, 100>

3205:
old  < scanFormat$35:>
new  <	je scanFormat$89>

3206:
old  <	; Case 364 Â£temporary1263 110>
new  <>

3207:
old  <	cmp eax, 110>
new  < scanFormat$27:>

3208:
old  <	je scanFormat$364>
new  <	; Case 89 Â£temporary1250 105>

3209:
old  <>
new  <	cmp eax, 105>

3210:
old  < scanFormat$36:>
new  <	je scanFormat$89>

3211:
old  <	; CaseEnd Â£temporary1263>
new  <>

3212:
old  <>
new  < scanFormat$28:>

3213:
old  < scanFormat$37:>
new  <	; Case 134 Â£temporary1250 111>

3214:
old  <	; Goto 376>
new  <	cmp eax, 111>

3215:
old  <	jmp scanFormat$376>
new  <	je scanFormat$134>

3217:
old  < scanFormat$38:>
new  < scanFormat$29:>

3218:
old  <	; Assign shortInt 1>
new  <	; Case 179 Â£temporary1250 120>

3219:
old  <	mov dword [rbp + 53], 1>
new  <	cmp eax, 120>

3220:
old  <>
new  <	je scanFormat$179>

3221:
old  < scanFormat$39:>
new  <>

3222:
old  <	; Goto 389>
new  < scanFormat$30:>

3223:
old  <	jmp scanFormat$389>
new  <	; Case 224 Â£temporary1250 117>

3224:
old  <>
new  <	cmp eax, 117>

3225:
old  < scanFormat$40:>
new  <	je scanFormat$224>

3226:
old  <	; Assign longIntOrDouble 1>
new  <>

3227:
old  <	mov dword [rbp + 57], 1>
new  < scanFormat$31:>

3228:
old  <>
new  <	; Case 269 Â£temporary1250 103>

3229:
old  < scanFormat$41:>
new  <	cmp eax, 103>

3230:
old  <	; Goto 389>
new  <	je scanFormat$269>

3231:
old  <	jmp scanFormat$389>
new  <>

3232:
old  <>
new  < scanFormat$32:>

3233:
old  < scanFormat$42:>
new  <	; Case 269 Â£temporary1250 102>

3234:
old  <	; Assign longDouble 1>
new  <	cmp eax, 102>

3235:
old  <	mov dword [rbp + 61], 1>
new  <	je scanFormat$269>

3237:
old  < scanFormat$43:>
new  < scanFormat$33:>

3238:
old  <	; Goto 389>
new  <	; Case 269 Â£temporary1250 101>

3239:
old  <	jmp scanFormat$389>
new  <	cmp eax, 101>

3240:
old  <>
new  <	je scanFormat$269>

3241:
old  < scanFormat$44:>
new  <>

3242:
old  <	; Assign star 1>
new  < scanFormat$34:>

3243:
old  <	mov dword [rbp + 65], 1>
new  <	; Case 314 Â£temporary1250 91>

3244:
old  <>
new  <	cmp eax, 91>

3245:
old  < scanFormat$45:>
new  <	je scanFormat$314>

3246:
old  <	; Goto 389>
new  <>

3247:
old  <	jmp scanFormat$389>
new  < scanFormat$35:>

3248:
old  <>
new  <	; Case 364 Â£temporary1250 110>

3249:
old  < scanFormat$46:>
new  <	cmp eax, 110>

3250:
old  <	; PreCall 157 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	je scanFormat$364>

3252:
old  < scanFormat$47:>
new  < scanFormat$36:>

3253:
old  <	; Call 157 scanChar 0>
new  <	; CaseEnd Â£temporary1250>

3254:
old  <	mov qword [rbp + 157], scanFormat$48>
new  <>

3255:
old  <	mov [rbp + 165], rbp>
new  < scanFormat$37:>

3256:
old  <	add rbp, 157>
new  <	; Goto 376>

3257:
old  <	jmp scanChar>
new  <	jmp scanFormat$376>

3259:
old  < scanFormat$48:>
new  < scanFormat$38:>

3260:
old  <	; PostCall 157>
new  <	; Assign shortInt 1>

3261:
old  <>
new  <	mov dword [rbp + 53], 1>

3262:
old  < scanFormat$49:>
new  <>

3263:
old  <	; GetReturnValue Â£temporary1264>
new  < scanFormat$39:>

3264:
old  <>
new  <	; Goto 389>

3265:
old  < scanFormat$50:>
new  <	jmp scanFormat$389>

3266:
old  <	; Assign charValue Â£temporary1264>
new  <>

3267:
old  <	mov [rbp + 157], bl>
new  < scanFormat$40:>

3268:
old  <>
new  <	; Assign longIntOrDouble 1>

3269:
old  < scanFormat$51:>
new  <	mov dword [rbp + 57], 1>

3270:
old  <	; NotEqual 62 star 0>
new  <>

3271:
old  <	cmp dword [rbp + 65], 0>
new  < scanFormat$41:>

3272:
old  <	jne scanFormat$62>
new  <	; Goto 389>

3273:
old  <>
new  <	jmp scanFormat$389>

3274:
old  < scanFormat$52:>
new  <>

3275:
old  <	; BinaryAdd Â£temporary1268 arg_list 8>
new  < scanFormat$42:>

3276:
old  <	mov rax, [rbp + 32]>
new  <	; Assign longDouble 1>

3277:
old  <	add rax, 8>
new  <	mov dword [rbp + 61], 1>

3279:
old  < scanFormat$53:>
new  < scanFormat$43:>

3280:
old  <	; IntegralToIntegral Â£temporary1269 Â£temporary1268>
new  <	; Goto 389>

3281:
old  <>
new  <	jmp scanFormat$389>

3282:
old  < scanFormat$54:>
new  <>

3283:
old  <	; IntegralToIntegral Â£temporary1270 Â£temporary1269>
new  < scanFormat$44:>

3284:
old  <	mov rbx, 4294967295>
new  <	; Assign star 1>

3285:
old  <	and rax, rbx>
new  <	mov dword [rbp + 65], 1>

3287:
old  < scanFormat$55:>
new  < scanFormat$45:>

3288:
old  <	; Assign arg_list Â£temporary1270>
new  <	; Goto 389>

3289:
old  <	mov [rbp + 32], rax>
new  <	jmp scanFormat$389>

3291:
old  < scanFormat$56:>
new  < scanFormat$46:>

3292:
old  <	; BinarySubtract Â£temporary1271 arg_list 8>
new  <	; PreCall 157 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3293:
old  <	mov rsi, [rbp + 32]>
new  <>

3294:
old  <	sub rsi, 8>
new  < scanFormat$47:>

3295:
old  <>
new  <	; Call 157 scanChar 0>

3296:
old  < scanFormat$57:>
new  <	mov qword [rbp + 157], scanFormat$48>

3297:
old  <	; IntegralToIntegral Â£temporary1273 Â£temporary1271>
new  <	mov [rbp + 165], rbp>

3298:
old  <>
new  <	add rbp, 157>

3299:
old  < scanFormat$58:>
new  <	jmp scanChar>

3300:
old  <	; Dereference Â£temporary1274 -> Â£temporary1273 Â£temporary1273 0>
new  <>

3301:
old  <>
new  < scanFormat$48:>

3302:
old  < scanFormat$59:>
new  <	; PostCall 157>

3303:
old  <	; Assign charPtr Â£temporary1274 -> Â£temporary1273>
new  <>

3304:
old  <	mov rax, [rsi]>
new  < scanFormat$49:>

3305:
old  <	mov [rbp + 41], rax>
new  <	; GetReturnValue Â£temporary1251>

3307:
old  < scanFormat$60:>
new  < scanFormat$50:>

3308:
old  <	; Dereference Â£temporary1275 -> charPtr charPtr 0>
new  <	; Assign charValue Â£temporary1251>

3309:
old  <	mov rsi, [rbp + 41]>
new  <	mov [rbp + 157], bl>

3311:
old  < scanFormat$61:>
new  < scanFormat$51:>

3312:
old  <	; Assign Â£temporary1275 -> charPtr charValue>
new  <	; NotEqual 62 star 0>

3313:
old  <	mov al, [rbp + 157]>
new  <	cmp dword [rbp + 65], 0>

3314:
old  <	mov [rsi], al>
new  <	jne scanFormat$62>

3316:
old  < scanFormat$62:>
new  < scanFormat$52:>

3317:
old  <	; Assign percent 0>
new  <	; BinaryAdd Â£temporary1255 arg_list 8>

3318:
old  <	mov dword [rbp + 49], 0>
new  <	mov rax, [rbp + 32]>

3319:
old  <>
new  <	add rax, 8>

3320:
old  < scanFormat$63:>
new  <>

3321:
old  <	; IntegralToIntegral Â£temporary1276 charValue>
new  < scanFormat$53:>

3322:
old  <	mov al, [rbp + 157]>
new  <	; IntegralToIntegral Â£temporary1256 Â£temporary1255>

3323:
old  <	and eax, 255>
new  <>

3324:
old  <	cmp al, 0>
new  < scanFormat$54:>

3325:
old  <	jge scanFormat$64>
new  <	; IntegralToIntegral Â£temporary1257 Â£temporary1256>

3326:
old  <	neg al>
new  <	mov rbx, 4294967295>

3327:
old  <	neg eax>
new  <	and rax, rbx>

3329:
old  < scanFormat$64:>
new  < scanFormat$55:>

3330:
old  <	; Equal 389 Â£temporary1276 -1>
new  <	; Assign arg_list Â£temporary1257>

3331:
old  <	cmp eax, -1>
new  <	mov [rbp + 32], rax>

3332:
old  <	je scanFormat$389>
new  <>

3333:
old  <>
new  < scanFormat$56:>

3334:
old  < scanFormat$65:>
new  <	; BinarySubtract Â£temporary1258 arg_list 8>

3335:
old  <	; BinaryAdd g_inCount g_inCount 1>
new  <	mov rsi, [rbp + 32]>

3336:
old  <	inc dword [g_inCount]>
new  <	sub rsi, 8>

3338:
old  < scanFormat$66:>
new  < scanFormat$57:>

3339:
old  <	; Goto 389>
new  <	; IntegralToIntegral Â£temporary1260 Â£temporary1258>

3340:
old  <	jmp scanFormat$389>
new  <>

3341:
old  <>
new  < scanFormat$58:>

3342:
old  < scanFormat$67:>
new  <	; Dereference Â£temporary1261 -> Â£temporary1260 Â£temporary1260 0>

3343:
old  <	; NotEqual 82 star 0>
new  <>

3344:
old  <	cmp dword [rbp + 65], 0>
new  < scanFormat$59:>

3345:
old  <	jne scanFormat$82>
new  <	; Assign charPtr Â£temporary1261 -> Â£temporary1260>

3346:
old  <>
new  <	mov rax, [rsi]>

3347:
old  < scanFormat$68:>
new  <	mov [rbp + 41], rax>

3348:
old  <	; BinaryAdd Â£temporary1282 arg_list 8>
new  <>

3349:
old  <	mov rax, [rbp + 32]>
new  < scanFormat$60:>

3350:
old  <	add rax, 8>
new  <	; Dereference Â£temporary1262 -> charPtr charPtr 0>

3351:
old  <>
new  <	mov rsi, [rbp + 41]>

3352:
old  < scanFormat$69:>
new  <>

3353:
old  <	; IntegralToIntegral Â£temporary1283 Â£temporary1282>
new  < scanFormat$61:>

3354:
old  <>
new  <	; Assign Â£temporary1262 -> charPtr charValue>

3355:
old  < scanFormat$70:>
new  <	mov al, [rbp + 157]>

3356:
old  <	; IntegralToIntegral Â£temporary1284 Â£temporary1283>
new  <	mov [rsi], al>

3357:
old  <	mov rbx, 4294967295>
new  <>

3358:
old  <	and rax, rbx>
new  < scanFormat$62:>

3359:
old  <>
new  <	; Assign percent 0>

3360:
old  < scanFormat$71:>
new  <	mov dword [rbp + 49], 0>

3361:
old  <	; Assign arg_list Â£temporary1284>
new  <>

3362:
old  <	mov [rbp + 32], rax>
new  < scanFormat$63:>

3363:
old  <>
new  <	; IntegralToIntegral Â£temporary1263 charValue>

3364:
old  < scanFormat$72:>
new  <	mov al, [rbp + 157]>

3365:
old  <	; BinarySubtract Â£temporary1285 arg_list 8>
new  <	and eax, 255>

3366:
old  <	mov rsi, [rbp + 32]>
new  <	cmp al, 0>

3367:
old  <	sub rsi, 8>
new  <	jge scanFormat$64>

3368:
old  <>
new  <	neg al>

3369:
old  < scanFormat$73:>
new  <	neg eax>

3370:
old  <	; IntegralToIntegral Â£temporary1287 Â£temporary1285>
new  <>

3371:
old  <>
new  < scanFormat$64:>

3372:
old  < scanFormat$74:>
new  <	; Equal 389 Â£temporary1263 -1>

3373:
old  <	; Dereference Â£temporary1288 -> Â£temporary1287 Â£temporary1287 0>
new  <	cmp eax, -1>

3374:
old  <>
new  <	je scanFormat$389>

3375:
old  < scanFormat$75:>
new  <>

3376:
old  <	; Assign charPtr Â£temporary1288 -> Â£temporary1287>
new  < scanFormat$65:>

3377:
old  <	mov rax, [rsi]>
new  <	; BinaryAdd g_inCount g_inCount 1>

3378:
old  <	mov [rbp + 41], rax>
new  <	inc dword [g_inCount]>

3380:
old  < scanFormat$76:>
new  < scanFormat$66:>

3381:
old  <	; PreCall 157 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Goto 389>

3382:
old  <>
new  <	jmp scanFormat$389>

3383:
old  < scanFormat$77:>
new  <>

3384:
old  <	; Parameter 181 pointer charPtr>
new  < scanFormat$67:>

3385:
old  <	mov rax, [rbp + 41]>
new  <	; NotEqual 82 star 0>

3386:
old  <	mov [rbp + 181], rax>
new  <	cmp dword [rbp + 65], 0>

3387:
old  <>
new  <	jne scanFormat$82>

3388:
old  < scanFormat$78:>
new  <>

3389:
old  <	; Parameter 189 signedint 0>
new  < scanFormat$68:>

3390:
old  <	mov dword [rbp + 189], 0>
new  <	; BinaryAdd Â£temporary1269 arg_list 8>

3391:
old  <>
new  <	mov rax, [rbp + 32]>

3392:
old  < scanFormat$79:>
new  <	add rax, 8>

3393:
old  <	; Call 157 scanString 0>
new  <>

3394:
old  <	mov qword [rbp + 157], scanFormat$80>
new  < scanFormat$69:>

3395:
old  <	mov [rbp + 165], rbp>
new  <	; IntegralToIntegral Â£temporary1270 Â£temporary1269>

3396:
old  <	add rbp, 157>
new  <>

3397:
old  <	jmp scanString>
new  < scanFormat$70:>

3398:
old  <>
new  <	; IntegralToIntegral Â£temporary1271 Â£temporary1270>

3399:
old  < scanFormat$80:>
new  <	mov rbx, 4294967295>

3400:
old  <	; PostCall 157>
new  <	and rax, rbx>

3402:
old  < scanFormat$81:>
new  < scanFormat$71:>

3403:
old  <	; Goto 87>
new  <	; Assign arg_list Â£temporary1271>

3404:
old  <	jmp scanFormat$87>
new  <	mov [rbp + 32], rax>

3406:
old  < scanFormat$82:>
new  < scanFormat$72:>

3407:
old  <	; PreCall 157 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; BinarySubtract Â£temporary1272 arg_list 8>

3408:
old  <>
new  <	mov rsi, [rbp + 32]>

3409:
old  < scanFormat$83:>
new  <	sub rsi, 8>

3410:
old  <	; Parameter 181 pointer 0>
new  <>

3411:
old  <	mov qword [rbp + 181], 0>
new  < scanFormat$73:>

3412:
old  <>
new  <	; IntegralToIntegral Â£temporary1274 Â£temporary1272>

3413:
old  < scanFormat$84:>
new  <>

3414:
old  <	; Parameter 189 signedint 0>
new  < scanFormat$74:>

3415:
old  <	mov dword [rbp + 189], 0>
new  <	; Dereference Â£temporary1275 -> Â£temporary1274 Â£temporary1274 0>

3417:
old  < scanFormat$85:>
new  < scanFormat$75:>

3418:
old  <	; Call 157 scanString 0>
new  <	; Assign charPtr Â£temporary1275 -> Â£temporary1274>

3419:
old  <	mov qword [rbp + 157], scanFormat$86>
new  <	mov rax, [rsi]>

3420:
old  <	mov [rbp + 165], rbp>
new  <	mov [rbp + 41], rax>

3421:
old  <	add rbp, 157>
new  <>

3422:
old  <	jmp scanString>
new  < scanFormat$76:>

3423:
old  <>
new  <	; PreCall 157 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3424:
old  < scanFormat$86:>
new  <>

3425:
old  <	; PostCall 157>
new  < scanFormat$77:>

3426:
old  <>
new  <	; Parameter 181 pointer charPtr>

3427:
old  < scanFormat$87:>
new  <	mov rax, [rbp + 41]>

3428:
old  <	; Assign percent 0>
new  <	mov [rbp + 181], rax>

3429:
old  <	mov dword [rbp + 49], 0>
new  <>

3430:
old  <>
new  < scanFormat$78:>

3431:
old  < scanFormat$88:>
new  <	; Parameter 189 signedint 0>

3432:
old  <	; Goto 389>
new  <	mov dword [rbp + 189], 0>

3433:
old  <	jmp scanFormat$389>
new  <>

3434:
old  <>
new  < scanFormat$79:>

3435:
old  < scanFormat$89:>
new  <	; Call 157 scanString 0>

3436:
old  <	; PreCall 157 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov qword [rbp + 157], scanFormat$80>

3437:
old  <>
new  <	mov [rbp + 165], rbp>

3438:
old  < scanFormat$90:>
new  <	add rbp, 157>

3439:
old  <	; Parameter 181 signedint 10>
new  <	jmp scanString>

3440:
old  <	mov dword [rbp + 181], 10>
new  <>

3441:
old  <>
new  < scanFormat$80:>

3442:
old  < scanFormat$91:>
new  <	; PostCall 157>

3443:
old  <	; Call 157 scanLongInt 0>
new  <>

3444:
old  <	mov qword [rbp + 157], scanFormat$92>
new  < scanFormat$81:>

3445:
old  <	mov [rbp + 165], rbp>
new  <	; Goto 87>

3446:
old  <	add rbp, 157>
new  <	jmp scanFormat$87>

3447:
old  <	jmp scanLongInt>
new  <>

3448:
old  <>
new  < scanFormat$82:>

3449:
old  < scanFormat$92:>
new  <	; PreCall 157 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3450:
old  <	; PostCall 157>
new  <>

3451:
old  <>
new  < scanFormat$83:>

3452:
old  < scanFormat$93:>
new  <	; Parameter 181 pointer 0>

3453:
old  <	; GetReturnValue Â£temporary1291>
new  <	mov qword [rbp + 181], 0>

3455:
old  < scanFormat$94:>
new  < scanFormat$84:>

3456:
old  <	; Assign longValue Â£temporary1291>
new  <	; Parameter 189 signedint 0>

3457:
old  <	mov [rbp + 69], rbx>
new  <	mov dword [rbp + 189], 0>

3459:
old  < scanFormat$95:>
new  < scanFormat$85:>

3460:
old  <	; NotEqual 132 star 0>
new  <	; Call 157 scanString 0>

3461:
old  <	cmp dword [rbp + 65], 0>
new  <	mov qword [rbp + 157], scanFormat$86>

3462:
old  <	jne scanFormat$132>
new  <	mov [rbp + 165], rbp>

3463:
old  <>
new  <	add rbp, 157>

3464:
old  < scanFormat$96:>
new  <	jmp scanString>

3465:
old  <	; Equal 109 shortInt 0>
new  <>

3466:
old  <	cmp dword [rbp + 53], 0>
new  < scanFormat$86:>

3467:
old  <	je scanFormat$109>
new  <	; PostCall 157>

3469:
old  < scanFormat$97:>
new  < scanFormat$87:>

3470:
old  <	; BinaryAdd Â£temporary1295 arg_list 8>
new  <	; Assign percent 0>

3471:
old  <	mov rax, [rbp + 32]>
new  <	mov dword [rbp + 49], 0>

3472:
old  <	add rax, 8>
new  <>

3473:
old  <>
new  < scanFormat$88:>

3474:
old  < scanFormat$98:>
new  <	; Goto 389>

3475:
old  <	; IntegralToIntegral Â£temporary1296 Â£temporary1295>
new  <	jmp scanFormat$389>

3477:
old  < scanFormat$99:>
new  < scanFormat$89:>

3478:
old  <	; IntegralToIntegral Â£temporary1297 Â£temporary1296>
new  <	; PreCall 157 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3479:
old  <	mov rbx, 4294967295>
new  <>

3480:
old  <	and rax, rbx>
new  < scanFormat$90:>

3481:
old  <>
new  <	; Parameter 181 signedint 10>

3482:
old  < scanFormat$100:>
new  <	mov dword [rbp + 181], 10>

3483:
old  <	; Assign arg_list Â£temporary1297>
new  <>

3484:
old  <	mov [rbp + 32], rax>
new  < scanFormat$91:>

3485:
old  <>
new  <	; Call 157 scanLongInt 0>

3486:
old  < scanFormat$101:>
new  <	mov qword [rbp + 157], scanFormat$92>

3487:
old  <	; BinarySubtract Â£temporary1298 arg_list 8>
new  <	mov [rbp + 165], rbp>

3488:
old  <	mov rsi, [rbp + 32]>
new  <	add rbp, 157>

3489:
old  <	sub rsi, 8>
new  <	jmp scanLongInt>

3491:
old  < scanFormat$102:>
new  < scanFormat$92:>

3492:
old  <	; IntegralToIntegral Â£temporary1300 Â£temporary1298>
new  <	; PostCall 157>

3494:
old  < scanFormat$103:>
new  < scanFormat$93:>

3495:
old  <	; Dereference Â£temporary1301 -> Â£temporary1300 Â£temporary1300 0>
new  <	; GetReturnValue Â£temporary1278>

3497:
old  < scanFormat$104:>
new  < scanFormat$94:>

3498:
old  <	; Assign shortPtr Â£temporary1301 -> Â£temporary1300>
new  <	; Assign longValue Â£temporary1278>

3499:
old  <	mov rax, [rsi]>
new  <	mov [rbp + 69], rbx>

3500:
old  <	mov [rbp + 85], rax>
new  <>

3501:
old  <>
new  < scanFormat$95:>

3502:
old  < scanFormat$105:>
new  <	; NotEqual 132 star 0>

3503:
old  <	; Dereference Â£temporary1302 -> shortPtr shortPtr 0>
new  <	cmp dword [rbp + 65], 0>

3504:
old  <	mov rsi, [rbp + 85]>
new  <	jne scanFormat$132>

3506:
old  < scanFormat$106:>
new  < scanFormat$96:>

3507:
old  <	; IntegralToIntegral Â£temporary1303 longValue>
new  <	; Equal 109 shortInt 0>

3508:
old  <	mov rax, [rbp + 69]>
new  <	cmp dword [rbp + 53], 0>

3509:
old  <	cmp rax, 0>
new  <	je scanFormat$109>

3510:
old  <	jge scanFormat$107>
new  <>

3511:
old  <	neg rax>
new  < scanFormat$97:>

3512:
old  <	neg ax>
new  <	; BinaryAdd Â£temporary1282 arg_list 8>

3513:
old  <>
new  <	mov rax, [rbp + 32]>

3514:
old  < scanFormat$107:>
new  <	add rax, 8>

3515:
old  <	; Assign Â£temporary1302 -> shortPtr Â£temporary1303>
new  <>

3516:
old  <	mov [rsi], ax>
new  < scanFormat$98:>

3517:
old  <>
new  <	; IntegralToIntegral Â£temporary1283 Â£temporary1282>

3518:
old  < scanFormat$108:>
new  <>

3519:
old  <	; Goto 132>
new  < scanFormat$99:>

3520:
old  <	jmp scanFormat$132>
new  <	; IntegralToIntegral Â£temporary1284 Â£temporary1283>

3521:
old  <>
new  <	mov rbx, 4294967295>

3522:
old  < scanFormat$109:>
new  <	and rax, rbx>

3523:
old  <	; NotEqual 122 longIntOrDouble 0>
new  <>

3524:
old  <	cmp dword [rbp + 57], 0>
new  < scanFormat$100:>

3525:
old  <	jne scanFormat$122>
new  <	; Assign arg_list Â£temporary1284>

3526:
old  <>
new  <	mov [rbp + 32], rax>

3527:
old  < scanFormat$110:>
new  <>

3528:
old  <	; BinaryAdd Â£temporary1307 arg_list 8>
new  < scanFormat$101:>

3529:
old  <	mov rax, [rbp + 32]>
new  <	; BinarySubtract Â£temporary1285 arg_list 8>

3530:
old  <	add rax, 8>
new  <	mov rsi, [rbp + 32]>

3531:
old  <>
new  <	sub rsi, 8>

3532:
old  < scanFormat$111:>
new  <>

3533:
old  <	; IntegralToIntegral Â£temporary1308 Â£temporary1307>
new  < scanFormat$102:>

3534:
old  <>
new  <	; IntegralToIntegral Â£temporary1287 Â£temporary1285>

3535:
old  < scanFormat$112:>
new  <>

3536:
old  <	; IntegralToIntegral Â£temporary1309 Â£temporary1308>
new  < scanFormat$103:>

3537:
old  <	mov rbx, 4294967295>
new  <	; Dereference Â£temporary1288 -> Â£temporary1287 Â£temporary1287 0>

3538:
old  <	and rax, rbx>
new  <>

3539:
old  <>
new  < scanFormat$104:>

3540:
old  < scanFormat$113:>
new  <	; Assign shortPtr Â£temporary1288 -> Â£temporary1287>

3541:
old  <	; Assign arg_list Â£temporary1309>
new  <	mov rax, [rsi]>

3542:
old  <	mov [rbp + 32], rax>
new  <	mov [rbp + 85], rax>

3544:
old  < scanFormat$114:>
new  < scanFormat$105:>

3545:
old  <	; BinarySubtract Â£temporary1310 arg_list 8>
new  <	; Dereference Â£temporary1289 -> shortPtr shortPtr 0>

3546:
old  <	mov rsi, [rbp + 32]>
new  <	mov rsi, [rbp + 85]>

3547:
old  <	sub rsi, 8>
new  <>

3548:
old  <>
new  < scanFormat$106:>

3549:
old  < scanFormat$115:>
new  <	; IntegralToIntegral Â£temporary1290 longValue>

3550:
old  <	; IntegralToIntegral Â£temporary1312 Â£temporary1310>
new  <	mov rax, [rbp + 69]>

3551:
old  <>
new  <	cmp rax, 0>

3552:
old  < scanFormat$116:>
new  <	jge scanFormat$107>

3553:
old  <	; Dereference Â£temporary1313 -> Â£temporary1312 Â£temporary1312 0>
new  <	neg rax>

3554:
old  <>
new  <	neg ax>

3555:
old  < scanFormat$117:>
new  <>

3556:
old  <	; Assign intPtr Â£temporary1313 -> Â£temporary1312>
new  < scanFormat$107:>

3557:
old  <	mov rax, [rsi]>
new  <	; Assign Â£temporary1289 -> shortPtr Â£temporary1290>

3558:
old  <	mov [rbp + 97], rax>
new  <	mov [rsi], ax>

3560:
old  < scanFormat$118:>
new  < scanFormat$108:>

3561:
old  <	; Dereference Â£temporary1314 -> intPtr intPtr 0>
new  <	; Goto 132>

3562:
old  <	mov rsi, [rbp + 97]>
new  <	jmp scanFormat$132>

3564:
old  < scanFormat$119:>
new  < scanFormat$109:>

3565:
old  <	; IntegralToIntegral Â£temporary1315 longValue>
new  <	; NotEqual 122 longIntOrDouble 0>

3566:
old  <	mov rax, [rbp + 69]>
new  <	cmp dword [rbp + 57], 0>

3567:
old  <	cmp rax, 0>
new  <	jne scanFormat$122>

3568:
old  <	jge scanFormat$120>
new  <>

3569:
old  <	neg rax>
new  < scanFormat$110:>

3570:
old  <	neg eax>
new  <	; BinaryAdd Â£temporary1294 arg_list 8>

3571:
old  <>
new  <	mov rax, [rbp + 32]>

3572:
old  < scanFormat$120:>
new  <	add rax, 8>

3573:
old  <	; Assign Â£temporary1314 -> intPtr Â£temporary1315>
new  <>

3574:
old  <	mov [rsi], eax>
new  < scanFormat$111:>

3575:
old  <>
new  <	; IntegralToIntegral Â£temporary1295 Â£temporary1294>

3576:
old  < scanFormat$121:>
new  <>

3577:
old  <	; Goto 132>
new  < scanFormat$112:>

3578:
old  <	jmp scanFormat$132>
new  <	; IntegralToIntegral Â£temporary1296 Â£temporary1295>

3579:
old  <>
new  <	mov rbx, 4294967295>

3580:
old  < scanFormat$122:>
new  <	and rax, rbx>

3581:
old  <	; BinaryAdd Â£temporary1317 arg_list 8>
new  <>

3582:
old  <	mov rax, [rbp + 32]>
new  < scanFormat$113:>

3583:
old  <	add rax, 8>
new  <	; Assign arg_list Â£temporary1296>

3584:
old  <>
new  <	mov [rbp + 32], rax>

3585:
old  < scanFormat$123:>
new  <>

3586:
old  <	; IntegralToIntegral Â£temporary1318 Â£temporary1317>
new  < scanFormat$114:>

3587:
old  <>
new  <	; BinarySubtract Â£temporary1297 arg_list 8>

3588:
old  < scanFormat$124:>
new  <	mov rsi, [rbp + 32]>

3589:
old  <	; IntegralToIntegral Â£temporary1319 Â£temporary1318>
new  <	sub rsi, 8>

3590:
old  <	mov rbx, 4294967295>
new  <>

3591:
old  <	and rax, rbx>
new  < scanFormat$115:>

3592:
old  <>
new  <	; IntegralToIntegral Â£temporary1299 Â£temporary1297>

3593:
old  < scanFormat$125:>
new  <>

3594:
old  <	; Assign arg_list Â£temporary1319>
new  < scanFormat$116:>

3595:
old  <	mov [rbp + 32], rax>
new  <	; Dereference Â£temporary1300 -> Â£temporary1299 Â£temporary1299 0>

3597:
old  < scanFormat$126:>
new  < scanFormat$117:>

3598:
old  <	; BinarySubtract Â£temporary1320 arg_list 8>
new  <	; Assign intPtr Â£temporary1300 -> Â£temporary1299>

3599:
old  <	mov rsi, [rbp + 32]>
new  <	mov rax, [rsi]>

3600:
old  <	sub rsi, 8>
new  <	mov [rbp + 97], rax>

3602:
old  < scanFormat$127:>
new  < scanFormat$118:>

3603:
old  <	; IntegralToIntegral Â£temporary1322 Â£temporary1320>
new  <	; Dereference Â£temporary1301 -> intPtr intPtr 0>

3604:
old  <>
new  <	mov rsi, [rbp + 97]>

3605:
old  < scanFormat$128:>
new  <>

3606:
old  <	; Dereference Â£temporary1323 -> Â£temporary1322 Â£temporary1322 0>
new  < scanFormat$119:>

3607:
old  <>
new  <	; IntegralToIntegral Â£temporary1302 longValue>

3608:
old  < scanFormat$129:>
new  <	mov rax, [rbp + 69]>

3609:
old  <	; Assign longPtr Â£temporary1323 -> Â£temporary1322>
new  <	cmp rax, 0>

3610:
old  <	mov rax, [rsi]>
new  <	jge scanFormat$120>

3611:
old  <	mov [rbp + 77], rax>
new  <	neg rax>

3612:
old  <>
new  <	neg eax>

3613:
old  < scanFormat$130:>
new  <>

3614:
old  <	; Dereference Â£temporary1324 -> longPtr longPtr 0>
new  < scanFormat$120:>

3615:
old  <	mov rsi, [rbp + 77]>
new  <	; Assign Â£temporary1301 -> intPtr Â£temporary1302>

3616:
old  <>
new  <	mov [rsi], eax>

3617:
old  < scanFormat$131:>
new  <>

3618:
old  <	; Assign Â£temporary1324 -> longPtr longValue>
new  < scanFormat$121:>

3619:
old  <	mov rax, [rbp + 69]>
new  <	; Goto 132>

3620:
old  <	mov [rsi], rax>
new  <	jmp scanFormat$132>

3622:
old  < scanFormat$132:>
new  < scanFormat$122:>

3623:
old  <	; Assign percent 0>
new  <	; BinaryAdd Â£temporary1304 arg_list 8>

3624:
old  <	mov dword [rbp + 49], 0>
new  <	mov rax, [rbp + 32]>

3625:
old  <>
new  <	add rax, 8>

3626:
old  < scanFormat$133:>
new  <>

3627:
old  <	; Goto 389>
new  < scanFormat$123:>

3628:
old  <	jmp scanFormat$389>
new  <	; IntegralToIntegral Â£temporary1305 Â£temporary1304>

3630:
old  < scanFormat$134:>
new  < scanFormat$124:>

3631:
old  <	; PreCall 157 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; IntegralToIntegral Â£temporary1306 Â£temporary1305>

3632:
old  <>
new  <	mov rbx, 4294967295>

3633:
old  < scanFormat$135:>
new  <	and rax, rbx>

3634:
old  <	; Parameter 181 signedint 8>
new  <>

3635:
old  <	mov dword [rbp + 181], 8>
new  < scanFormat$125:>

3636:
old  <>
new  <	; Assign arg_list Â£temporary1306>

3637:
old  < scanFormat$136:>
new  <	mov [rbp + 32], rax>

3638:
old  <	; Call 157 scanUnsignedLongInt 0>
new  <>

3639:
old  <	mov qword [rbp + 157], scanFormat$137>
new  < scanFormat$126:>

3640:
old  <	mov [rbp + 165], rbp>
new  <	; BinarySubtract Â£temporary1307 arg_list 8>

3641:
old  <	add rbp, 157>
new  <	mov rsi, [rbp + 32]>

3642:
old  <	jmp scanUnsignedLongInt>
new  <	sub rsi, 8>

3644:
old  < scanFormat$137:>
new  < scanFormat$127:>

3645:
old  <	; PostCall 157>
new  <	; IntegralToIntegral Â£temporary1309 Â£temporary1307>

3647:
old  < scanFormat$138:>
new  < scanFormat$128:>

3648:
old  <	; GetReturnValue Â£temporary1326>
new  <	; Dereference Â£temporary1310 -> Â£temporary1309 Â£temporary1309 0>

3650:
old  < scanFormat$139:>
new  < scanFormat$129:>

3651:
old  <	; Assign unsignedLongValue Â£temporary1326>
new  <	; Assign longPtr Â£temporary1310 -> Â£temporary1309>

3652:
old  <	mov [rbp + 113], rbx>
new  <	mov rax, [rsi]>

3653:
old  <>
new  <	mov [rbp + 77], rax>

3654:
old  < scanFormat$140:>
new  <>

3655:
old  <	; NotEqual 177 star 0>
new  < scanFormat$130:>

3656:
old  <	cmp dword [rbp + 65], 0>
new  <	; Dereference Â£temporary1311 -> longPtr longPtr 0>

3657:
old  <	jne scanFormat$177>
new  <	mov rsi, [rbp + 77]>

3659:
old  < scanFormat$141:>
new  < scanFormat$131:>

3660:
old  <	; Equal 154 shortInt 0>
new  <	; Assign Â£temporary1311 -> longPtr longValue>

3661:
old  <	cmp dword [rbp + 53], 0>
new  <	mov rax, [rbp + 69]>

3662:
old  <	je scanFormat$154>
new  <	mov [rsi], rax>

3664:
old  < scanFormat$142:>
new  < scanFormat$132:>

3665:
old  <	; BinaryAdd Â£temporary1330 arg_list 8>
new  <	; Assign percent 0>

3666:
old  <	mov rax, [rbp + 32]>
new  <	mov dword [rbp + 49], 0>

3667:
old  <	add rax, 8>
new  <>

3668:
old  <>
new  < scanFormat$133:>

3669:
old  < scanFormat$143:>
new  <	; Goto 389>

3670:
old  <	; IntegralToIntegral Â£temporary1331 Â£temporary1330>
new  <	jmp scanFormat$389>

3672:
old  < scanFormat$144:>
new  < scanFormat$134:>

3673:
old  <	; IntegralToIntegral Â£temporary1332 Â£temporary1331>
new  <	; PreCall 157 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3674:
old  <	mov rbx, 4294967295>
new  <>

3675:
old  <	and rax, rbx>
new  < scanFormat$135:>

3676:
old  <>
new  <	; Parameter 181 signedint 8>

3677:
old  < scanFormat$145:>
new  <	mov dword [rbp + 181], 8>

3678:
old  <	; Assign arg_list Â£temporary1332>
new  <>

3679:
old  <	mov [rbp + 32], rax>
new  < scanFormat$136:>

3680:
old  <>
new  <	; Call 157 scanUnsignedLongInt 0>

3681:
old  < scanFormat$146:>
new  <	mov qword [rbp + 157], scanFormat$137>

3682:
old  <	; BinarySubtract Â£temporary1333 arg_list 8>
new  <	mov [rbp + 165], rbp>

3683:
old  <	mov rsi, [rbp + 32]>
new  <	add rbp, 157>

3684:
old  <	sub rsi, 8>
new  <	jmp scanUnsignedLongInt>

3686:
old  < scanFormat$147:>
new  < scanFormat$137:>

3687:
old  <	; IntegralToIntegral Â£temporary1335 Â£temporary1333>
new  <	; PostCall 157>

3689:
old  < scanFormat$148:>
new  < scanFormat$138:>

3690:
old  <	; Dereference Â£temporary1336 -> Â£temporary1335 Â£temporary1335 0>
new  <	; GetReturnValue Â£temporary1313>

3692:
old  < scanFormat$149:>
new  < scanFormat$139:>

3693:
old  <	; Assign unsignedShortPtr Â£temporary1336 -> Â£temporary1335>
new  <	; Assign unsignedLongValue Â£temporary1313>

3694:
old  <	mov rax, [rsi]>
new  <	mov [rbp + 113], rbx>

3695:
old  <	mov [rbp + 129], rax>
new  <>

3696:
old  <>
new  < scanFormat$140:>

3697:
old  < scanFormat$150:>
new  <	; NotEqual 177 star 0>

3698:
old  <	; Dereference Â£temporary1337 -> unsignedShortPtr unsignedShortPtr 0>
new  <	cmp dword [rbp + 65], 0>

3699:
old  <	mov rsi, [rbp + 129]>
new  <	jne scanFormat$177>

3701:
old  < scanFormat$151:>
new  < scanFormat$141:>

3702:
old  <	; IntegralToIntegral Â£temporary1338 unsignedLongValue>
new  <	; Equal 154 shortInt 0>

3703:
old  <	mov rax, [rbp + 113]>
new  <	cmp dword [rbp + 53], 0>

3704:
old  <>
new  <	je scanFormat$154>

3705:
old  < scanFormat$152:>
new  <>

3706:
old  <	; Assign Â£temporary1337 -> unsignedShortPtr Â£temporary1338>
new  < scanFormat$142:>

3707:
old  <	mov [rsi], ax>
new  <	; BinaryAdd Â£temporary1317 arg_list 8>

3708:
old  <>
new  <	mov rax, [rbp + 32]>

3709:
old  < scanFormat$153:>
new  <	add rax, 8>

3710:
old  <	; Goto 177>
new  <>

3711:
old  <	jmp scanFormat$177>
new  < scanFormat$143:>

3712:
old  <>
new  <	; IntegralToIntegral Â£temporary1318 Â£temporary1317>

3713:
old  < scanFormat$154:>
new  <>

3714:
old  <	; NotEqual 167 longIntOrDouble 0>
new  < scanFormat$144:>

3715:
old  <	cmp dword [rbp + 57], 0>
new  <	; IntegralToIntegral Â£temporary1319 Â£temporary1318>

3716:
old  <	jne scanFormat$167>
new  <	mov rbx, 4294967295>

3717:
old  <>
new  <	and rax, rbx>

3718:
old  < scanFormat$155:>
new  <>

3719:
old  <	; BinaryAdd Â£temporary1342 arg_list 8>
new  < scanFormat$145:>

3720:
old  <	mov rax, [rbp + 32]>
new  <	; Assign arg_list Â£temporary1319>

3721:
old  <	add rax, 8>
new  <	mov [rbp + 32], rax>

3723:
old  < scanFormat$156:>
new  < scanFormat$146:>

3724:
old  <	; IntegralToIntegral Â£temporary1343 Â£temporary1342>
new  <	; BinarySubtract Â£temporary1320 arg_list 8>

3725:
old  <>
new  <	mov rsi, [rbp + 32]>

3726:
old  < scanFormat$157:>
new  <	sub rsi, 8>

3727:
old  <	; IntegralToIntegral Â£temporary1344 Â£temporary1343>
new  <>

3728:
old  <	mov rbx, 4294967295>
new  < scanFormat$147:>

3729:
old  <	and rax, rbx>
new  <	; IntegralToIntegral Â£temporary1322 Â£temporary1320>

3731:
old  < scanFormat$158:>
new  < scanFormat$148:>

3732:
old  <	; Assign arg_list Â£temporary1344>
new  <	; Dereference Â£temporary1323 -> Â£temporary1322 Â£temporary1322 0>

3733:
old  <	mov [rbp + 32], rax>
new  <>

3734:
old  <>
new  < scanFormat$149:>

3735:
old  < scanFormat$159:>
new  <	; Assign unsignedShortPtr Â£temporary1323 -> Â£temporary1322>

3736:
old  <	; BinarySubtract Â£temporary1345 arg_list 8>
new  <	mov rax, [rsi]>

3737:
old  <	mov rsi, [rbp + 32]>
new  <	mov [rbp + 129], rax>

3738:
old  <	sub rsi, 8>
new  <>

3739:
old  <>
new  < scanFormat$150:>

3740:
old  < scanFormat$160:>
new  <	; Dereference Â£temporary1324 -> unsignedShortPtr unsignedShortPtr 0>

3741:
old  <	; IntegralToIntegral Â£temporary1347 Â£temporary1345>
new  <	mov rsi, [rbp + 129]>

3743:
old  < scanFormat$161:>
new  < scanFormat$151:>

3744:
old  <	; Dereference Â£temporary1348 -> Â£temporary1347 Â£temporary1347 0>
new  <	; IntegralToIntegral Â£temporary1325 unsignedLongValue>

3745:
old  <>
new  <	mov rax, [rbp + 113]>

3746:
old  < scanFormat$162:>
new  <>

3747:
old  <	; Assign unsignedIntPtr Â£temporary1348 -> Â£temporary1347>
new  < scanFormat$152:>

3748:
old  <	mov rax, [rsi]>
new  <	; Assign Â£temporary1324 -> unsignedShortPtr Â£temporary1325>

3749:
old  <	mov [rbp + 137], rax>
new  <	mov [rsi], ax>

3751:
old  < scanFormat$163:>
new  < scanFormat$153:>

3752:
old  <	; Dereference Â£temporary1349 -> unsignedIntPtr unsignedIntPtr 0>
new  <	; Goto 177>

3753:
old  <	mov rsi, [rbp + 137]>
new  <	jmp scanFormat$177>

3755:
old  < scanFormat$164:>
new  < scanFormat$154:>

3756:
old  <	; IntegralToIntegral Â£temporary1350 unsignedLongValue>
new  <	; NotEqual 167 longIntOrDouble 0>

3757:
old  <	mov rax, [rbp + 113]>
new  <	cmp dword [rbp + 57], 0>

3758:
old  <>
new  <	jne scanFormat$167>

3759:
old  < scanFormat$165:>
new  <>

3760:
old  <	; Assign Â£temporary1349 -> unsignedIntPtr Â£temporary1350>
new  < scanFormat$155:>

3761:
old  <	mov [rsi], eax>
new  <	; BinaryAdd Â£temporary1329 arg_list 8>

3762:
old  <>
new  <	mov rax, [rbp + 32]>

3763:
old  < scanFormat$166:>
new  <	add rax, 8>

3764:
old  <	; Goto 177>
new  <>

3765:
old  <	jmp scanFormat$177>
new  < scanFormat$156:>

3766:
old  <>
new  <	; IntegralToIntegral Â£temporary1330 Â£temporary1329>

3767:
old  < scanFormat$167:>
new  <>

3768:
old  <	; BinaryAdd Â£temporary1352 arg_list 8>
new  < scanFormat$157:>

3769:
old  <	mov rax, [rbp + 32]>
new  <	; IntegralToIntegral Â£temporary1331 Â£temporary1330>

3770:
old  <	add rax, 8>
new  <	mov rbx, 4294967295>

3771:
old  <>
new  <	and rax, rbx>

3772:
old  < scanFormat$168:>
new  <>

3773:
old  <	; IntegralToIntegral Â£temporary1353 Â£temporary1352>
new  < scanFormat$158:>

3774:
old  <>
new  <	; Assign arg_list Â£temporary1331>

3775:
old  < scanFormat$169:>
new  <	mov [rbp + 32], rax>

3776:
old  <	; IntegralToIntegral Â£temporary1354 Â£temporary1353>
new  <>

3777:
old  <	mov rbx, 4294967295>
new  < scanFormat$159:>

3778:
old  <	and rax, rbx>
new  <	; BinarySubtract Â£temporary1332 arg_list 8>

3779:
old  <>
new  <	mov rsi, [rbp + 32]>

3780:
old  < scanFormat$170:>
new  <	sub rsi, 8>

3781:
old  <	; Assign arg_list Â£temporary1354>
new  <>

3782:
old  <	mov [rbp + 32], rax>
new  < scanFormat$160:>

3783:
old  <>
new  <	; IntegralToIntegral Â£temporary1334 Â£temporary1332>

3784:
old  < scanFormat$171:>
new  <>

3785:
old  <	; BinarySubtract Â£temporary1355 arg_list 8>
new  < scanFormat$161:>

3786:
old  <	mov rsi, [rbp + 32]>
new  <	; Dereference Â£temporary1335 -> Â£temporary1334 Â£temporary1334 0>

3787:
old  <	sub rsi, 8>
new  <>

3788:
old  <>
new  < scanFormat$162:>

3789:
old  < scanFormat$172:>
new  <	; Assign unsignedIntPtr Â£temporary1335 -> Â£temporary1334>

3790:
old  <	; IntegralToIntegral Â£temporary1357 Â£temporary1355>
new  <	mov rax, [rsi]>

3791:
old  <>
new  <	mov [rbp + 137], rax>

3792:
old  < scanFormat$173:>
new  <>

3793:
old  <	; Dereference Â£temporary1358 -> Â£temporary1357 Â£temporary1357 0>
new  < scanFormat$163:>

3794:
old  <>
new  <	; Dereference Â£temporary1336 -> unsignedIntPtr unsignedIntPtr 0>

3795:
old  < scanFormat$174:>
new  <	mov rsi, [rbp + 137]>

3796:
old  <	; Assign unsignedLongPtr Â£temporary1358 -> Â£temporary1357>
new  <>

3797:
old  <	mov rax, [rsi]>
new  < scanFormat$164:>

3798:
old  <	mov [rbp + 121], rax>
new  <	; IntegralToIntegral Â£temporary1337 unsignedLongValue>

3799:
old  <>
new  <	mov rax, [rbp + 113]>

3800:
old  < scanFormat$175:>
new  <>

3801:
old  <	; Dereference Â£temporary1359 -> unsignedLongPtr unsignedLongPtr 0>
new  < scanFormat$165:>

3802:
old  <	mov rsi, [rbp + 121]>
new  <	; Assign Â£temporary1336 -> unsignedIntPtr Â£temporary1337>

3803:
old  <>
new  <	mov [rsi], eax>

3804:
old  < scanFormat$176:>
new  <>

3805:
old  <	; Assign Â£temporary1359 -> unsignedLongPtr unsignedLongValue>
new  < scanFormat$166:>

3806:
old  <	mov rax, [rbp + 113]>
new  <	; Goto 177>

3807:
old  <	mov [rsi], rax>
new  <	jmp scanFormat$177>

3809:
old  < scanFormat$177:>
new  < scanFormat$167:>

3810:
old  <	; Assign percent 0>
new  <	; BinaryAdd Â£temporary1339 arg_list 8>

3811:
old  <	mov dword [rbp + 49], 0>
new  <	mov rax, [rbp + 32]>

3812:
old  <>
new  <	add rax, 8>

3813:
old  < scanFormat$178:>
new  <>

3814:
old  <	; Goto 389>
new  < scanFormat$168:>

3815:
old  <	jmp scanFormat$389>
new  <	; IntegralToIntegral Â£temporary1340 Â£temporary1339>

3817:
old  < scanFormat$179:>
new  < scanFormat$169:>

3818:
old  <	; PreCall 157 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; IntegralToIntegral Â£temporary1341 Â£temporary1340>

3819:
old  <>
new  <	mov rbx, 4294967295>

3820:
old  < scanFormat$180:>
new  <	and rax, rbx>

3821:
old  <	; Parameter 181 signedint 16>
new  <>

3822:
old  <	mov dword [rbp + 181], 16>
new  < scanFormat$170:>

3823:
old  <>
new  <	; Assign arg_list Â£temporary1341>

3824:
old  < scanFormat$181:>
new  <	mov [rbp + 32], rax>

3825:
old  <	; Call 157 scanUnsignedLongInt 0>
new  <>

3826:
old  <	mov qword [rbp + 157], scanFormat$182>
new  < scanFormat$171:>

3827:
old  <	mov [rbp + 165], rbp>
new  <	; BinarySubtract Â£temporary1342 arg_list 8>

3828:
old  <	add rbp, 157>
new  <	mov rsi, [rbp + 32]>

3829:
old  <	jmp scanUnsignedLongInt>
new  <	sub rsi, 8>

3831:
old  < scanFormat$182:>
new  < scanFormat$172:>

3832:
old  <	; PostCall 157>
new  <	; IntegralToIntegral Â£temporary1344 Â£temporary1342>

3834:
old  < scanFormat$183:>
new  < scanFormat$173:>

3835:
old  <	; GetReturnValue Â£temporary1361>
new  <	; Dereference Â£temporary1345 -> Â£temporary1344 Â£temporary1344 0>

3837:
old  < scanFormat$184:>
new  < scanFormat$174:>

3838:
old  <	; Assign unsignedLongValue Â£temporary1361>
new  <	; Assign unsignedLongPtr Â£temporary1345 -> Â£temporary1344>

3839:
old  <	mov [rbp + 113], rbx>
new  <	mov rax, [rsi]>

3840:
old  <>
new  <	mov [rbp + 121], rax>

3841:
old  < scanFormat$185:>
new  <>

3842:
old  <	; NotEqual 222 star 0>
new  < scanFormat$175:>

3843:
old  <	cmp dword [rbp + 65], 0>
new  <	; Dereference Â£temporary1346 -> unsignedLongPtr unsignedLongPtr 0>

3844:
old  <	jne scanFormat$222>
new  <	mov rsi, [rbp + 121]>

3846:
old  < scanFormat$186:>
new  < scanFormat$176:>

3847:
old  <	; Equal 199 shortInt 0>
new  <	; Assign Â£temporary1346 -> unsignedLongPtr unsignedLongValue>

3848:
old  <	cmp dword [rbp + 53], 0>
new  <	mov rax, [rbp + 113]>

3849:
old  <	je scanFormat$199>
new  <	mov [rsi], rax>

3851:
old  < scanFormat$187:>
new  < scanFormat$177:>

3852:
old  <	; BinaryAdd Â£temporary1365 arg_list 8>
new  <	; Assign percent 0>

3853:
old  <	mov rax, [rbp + 32]>
new  <	mov dword [rbp + 49], 0>

3854:
old  <	add rax, 8>
new  <>

3855:
old  <>
new  < scanFormat$178:>

3856:
old  < scanFormat$188:>
new  <	; Goto 389>

3857:
old  <	; IntegralToIntegral Â£temporary1366 Â£temporary1365>
new  <	jmp scanFormat$389>

3859:
old  < scanFormat$189:>
new  < scanFormat$179:>

3860:
old  <	; IntegralToIntegral Â£temporary1367 Â£temporary1366>
new  <	; PreCall 157 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3861:
old  <	mov rbx, 4294967295>
new  <>

3862:
old  <	and rax, rbx>
new  < scanFormat$180:>

3863:
old  <>
new  <	; Parameter 181 signedint 16>

3864:
old  < scanFormat$190:>
new  <	mov dword [rbp + 181], 16>

3865:
old  <	; Assign arg_list Â£temporary1367>
new  <>

3866:
old  <	mov [rbp + 32], rax>
new  < scanFormat$181:>

3867:
old  <>
new  <	; Call 157 scanUnsignedLongInt 0>

3868:
old  < scanFormat$191:>
new  <	mov qword [rbp + 157], scanFormat$182>

3869:
old  <	; BinarySubtract Â£temporary1368 arg_list 8>
new  <	mov [rbp + 165], rbp>

3870:
old  <	mov rsi, [rbp + 32]>
new  <	add rbp, 157>

3871:
old  <	sub rsi, 8>
new  <	jmp scanUnsignedLongInt>

3873:
old  < scanFormat$192:>
new  < scanFormat$182:>

3874:
old  <	; IntegralToIntegral Â£temporary1370 Â£temporary1368>
new  <	; PostCall 157>

3876:
old  < scanFormat$193:>
new  < scanFormat$183:>

3877:
old  <	; Dereference Â£temporary1371 -> Â£temporary1370 Â£temporary1370 0>
new  <	; GetReturnValue Â£temporary1348>

3879:
old  < scanFormat$194:>
new  < scanFormat$184:>

3880:
old  <	; Assign unsignedShortPtr Â£temporary1371 -> Â£temporary1370>
new  <	; Assign unsignedLongValue Â£temporary1348>

3881:
old  <	mov rax, [rsi]>
new  <	mov [rbp + 113], rbx>

3882:
old  <	mov [rbp + 129], rax>
new  <>

3883:
old  <>
new  < scanFormat$185:>

3884:
old  < scanFormat$195:>
new  <	; NotEqual 222 star 0>

3885:
old  <	; Dereference Â£temporary1372 -> unsignedShortPtr unsignedShortPtr 0>
new  <	cmp dword [rbp + 65], 0>

3886:
old  <	mov rsi, [rbp + 129]>
new  <	jne scanFormat$222>

3888:
old  < scanFormat$196:>
new  < scanFormat$186:>

3889:
old  <	; IntegralToIntegral Â£temporary1373 unsignedLongValue>
new  <	; Equal 199 shortInt 0>

3890:
old  <	mov rax, [rbp + 113]>
new  <	cmp dword [rbp + 53], 0>

3891:
old  <>
new  <	je scanFormat$199>

3892:
old  < scanFormat$197:>
new  <>

3893:
old  <	; Assign Â£temporary1372 -> unsignedShortPtr Â£temporary1373>
new  < scanFormat$187:>

3894:
old  <	mov [rsi], ax>
new  <	; BinaryAdd Â£temporary1352 arg_list 8>

3895:
old  <>
new  <	mov rax, [rbp + 32]>

3896:
old  < scanFormat$198:>
new  <	add rax, 8>

3897:
old  <	; Goto 222>
new  <>

3898:
old  <	jmp scanFormat$222>
new  < scanFormat$188:>

3899:
old  <>
new  <	; IntegralToIntegral Â£temporary1353 Â£temporary1352>

3900:
old  < scanFormat$199:>
new  <>

3901:
old  <	; NotEqual 212 longIntOrDouble 0>
new  < scanFormat$189:>

3902:
old  <	cmp dword [rbp + 57], 0>
new  <	; IntegralToIntegral Â£temporary1354 Â£temporary1353>

3903:
old  <	jne scanFormat$212>
new  <	mov rbx, 4294967295>

3904:
old  <>
new  <	and rax, rbx>

3905:
old  < scanFormat$200:>
new  <>

3906:
old  <	; BinaryAdd Â£temporary1377 arg_list 8>
new  < scanFormat$190:>

3907:
old  <	mov rax, [rbp + 32]>
new  <	; Assign arg_list Â£temporary1354>

3908:
old  <	add rax, 8>
new  <	mov [rbp + 32], rax>

3910:
old  < scanFormat$201:>
new  < scanFormat$191:>

3911:
old  <	; IntegralToIntegral Â£temporary1378 Â£temporary1377>
new  <	; BinarySubtract Â£temporary1355 arg_list 8>

3912:
old  <>
new  <	mov rsi, [rbp + 32]>

3913:
old  < scanFormat$202:>
new  <	sub rsi, 8>

3914:
old  <	; IntegralToIntegral Â£temporary1379 Â£temporary1378>
new  <>

3915:
old  <	mov rbx, 4294967295>
new  < scanFormat$192:>

3916:
old  <	and rax, rbx>
new  <	; IntegralToIntegral Â£temporary1357 Â£temporary1355>

3918:
old  < scanFormat$203:>
new  < scanFormat$193:>

3919:
old  <	; Assign arg_list Â£temporary1379>
new  <	; Dereference Â£temporary1358 -> Â£temporary1357 Â£temporary1357 0>

3920:
old  <	mov [rbp + 32], rax>
new  <>

3921:
old  <>
new  < scanFormat$194:>

3922:
old  < scanFormat$204:>
new  <	; Assign unsignedShortPtr Â£temporary1358 -> Â£temporary1357>

3923:
old  <	; BinarySubtract Â£temporary1380 arg_list 8>
new  <	mov rax, [rsi]>

3924:
old  <	mov rsi, [rbp + 32]>
new  <	mov [rbp + 129], rax>

3925:
old  <	sub rsi, 8>
new  <>

3926:
old  <>
new  < scanFormat$195:>

3927:
old  < scanFormat$205:>
new  <	; Dereference Â£temporary1359 -> unsignedShortPtr unsignedShortPtr 0>

3928:
old  <	; IntegralToIntegral Â£temporary1382 Â£temporary1380>
new  <	mov rsi, [rbp + 129]>

3930:
old  < scanFormat$206:>
new  < scanFormat$196:>

3931:
old  <	; Dereference Â£temporary1383 -> Â£temporary1382 Â£temporary1382 0>
new  <	; IntegralToIntegral Â£temporary1360 unsignedLongValue>

3932:
old  <>
new  <	mov rax, [rbp + 113]>

3933:
old  < scanFormat$207:>
new  <>

3934:
old  <	; Assign unsignedIntPtr Â£temporary1383 -> Â£temporary1382>
new  < scanFormat$197:>

3935:
old  <	mov rax, [rsi]>
new  <	; Assign Â£temporary1359 -> unsignedShortPtr Â£temporary1360>

3936:
old  <	mov [rbp + 137], rax>
new  <	mov [rsi], ax>

3938:
old  < scanFormat$208:>
new  < scanFormat$198:>

3939:
old  <	; Dereference Â£temporary1384 -> unsignedIntPtr unsignedIntPtr 0>
new  <	; Goto 222>

3940:
old  <	mov rsi, [rbp + 137]>
new  <	jmp scanFormat$222>

3942:
old  < scanFormat$209:>
new  < scanFormat$199:>

3943:
old  <	; IntegralToIntegral Â£temporary1385 unsignedLongValue>
new  <	; NotEqual 212 longIntOrDouble 0>

3944:
old  <	mov rax, [rbp + 113]>
new  <	cmp dword [rbp + 57], 0>

3945:
old  <>
new  <	jne scanFormat$212>

3946:
old  < scanFormat$210:>
new  <>

3947:
old  <	; Assign Â£temporary1384 -> unsignedIntPtr Â£temporary1385>
new  < scanFormat$200:>

3948:
old  <	mov [rsi], eax>
new  <	; BinaryAdd Â£temporary1364 arg_list 8>

3949:
old  <>
new  <	mov rax, [rbp + 32]>

3950:
old  < scanFormat$211:>
new  <	add rax, 8>

3951:
old  <	; Goto 222>
new  <>

3952:
old  <	jmp scanFormat$222>
new  < scanFormat$201:>

3953:
old  <>
new  <	; IntegralToIntegral Â£temporary1365 Â£temporary1364>

3954:
old  < scanFormat$212:>
new  <>

3955:
old  <	; BinaryAdd Â£temporary1387 arg_list 8>
new  < scanFormat$202:>

3956:
old  <	mov rax, [rbp + 32]>
new  <	; IntegralToIntegral Â£temporary1366 Â£temporary1365>

3957:
old  <	add rax, 8>
new  <	mov rbx, 4294967295>

3958:
old  <>
new  <	and rax, rbx>

3959:
old  < scanFormat$213:>
new  <>

3960:
old  <	; IntegralToIntegral Â£temporary1388 Â£temporary1387>
new  < scanFormat$203:>

3961:
old  <>
new  <	; Assign arg_list Â£temporary1366>

3962:
old  < scanFormat$214:>
new  <	mov [rbp + 32], rax>

3963:
old  <	; IntegralToIntegral Â£temporary1389 Â£temporary1388>
new  <>

3964:
old  <	mov rbx, 4294967295>
new  < scanFormat$204:>

3965:
old  <	and rax, rbx>
new  <	; BinarySubtract Â£temporary1367 arg_list 8>

3966:
old  <>
new  <	mov rsi, [rbp + 32]>

3967:
old  < scanFormat$215:>
new  <	sub rsi, 8>

3968:
old  <	; Assign arg_list Â£temporary1389>
new  <>

3969:
old  <	mov [rbp + 32], rax>
new  < scanFormat$205:>

3970:
old  <>
new  <	; IntegralToIntegral Â£temporary1369 Â£temporary1367>

3971:
old  < scanFormat$216:>
new  <>

3972:
old  <	; BinarySubtract Â£temporary1390 arg_list 8>
new  < scanFormat$206:>

3973:
old  <	mov rsi, [rbp + 32]>
new  <	; Dereference Â£temporary1370 -> Â£temporary1369 Â£temporary1369 0>

3974:
old  <	sub rsi, 8>
new  <>

3975:
old  <>
new  < scanFormat$207:>

3976:
old  < scanFormat$217:>
new  <	; Assign unsignedIntPtr Â£temporary1370 -> Â£temporary1369>

3977:
old  <	; IntegralToIntegral Â£temporary1392 Â£temporary1390>
new  <	mov rax, [rsi]>

3978:
old  <>
new  <	mov [rbp + 137], rax>

3979:
old  < scanFormat$218:>
new  <>

3980:
old  <	; Dereference Â£temporary1393 -> Â£temporary1392 Â£temporary1392 0>
new  < scanFormat$208:>

3981:
old  <>
new  <	; Dereference Â£temporary1371 -> unsignedIntPtr unsignedIntPtr 0>

3982:
old  < scanFormat$219:>
new  <	mov rsi, [rbp + 137]>

3983:
old  <	; Assign unsignedLongPtr Â£temporary1393 -> Â£temporary1392>
new  <>

3984:
old  <	mov rax, [rsi]>
new  < scanFormat$209:>

3985:
old  <	mov [rbp + 121], rax>
new  <	; IntegralToIntegral Â£temporary1372 unsignedLongValue>

3986:
old  <>
new  <	mov rax, [rbp + 113]>

3987:
old  < scanFormat$220:>
new  <>

3988:
old  <	; Dereference Â£temporary1394 -> unsignedLongPtr unsignedLongPtr 0>
new  < scanFormat$210:>

3989:
old  <	mov rsi, [rbp + 121]>
new  <	; Assign Â£temporary1371 -> unsignedIntPtr Â£temporary1372>

3990:
old  <>
new  <	mov [rsi], eax>

3991:
old  < scanFormat$221:>
new  <>

3992:
old  <	; Assign Â£temporary1394 -> unsignedLongPtr unsignedLongValue>
new  < scanFormat$211:>

3993:
old  <	mov rax, [rbp + 113]>
new  <	; Goto 222>

3994:
old  <	mov [rsi], rax>
new  <	jmp scanFormat$222>

3996:
old  < scanFormat$222:>
new  < scanFormat$212:>

3997:
old  <	; Assign percent 0>
new  <	; BinaryAdd Â£temporary1374 arg_list 8>

3998:
old  <	mov dword [rbp + 49], 0>
new  <	mov rax, [rbp + 32]>

3999:
old  <>
new  <	add rax, 8>

4000:
old  < scanFormat$223:>
new  <>

4001:
old  <	; Goto 389>
new  < scanFormat$213:>

4002:
old  <	jmp scanFormat$389>
new  <	; IntegralToIntegral Â£temporary1375 Â£temporary1374>

4004:
old  < scanFormat$224:>
new  < scanFormat$214:>

4005:
old  <	; PreCall 157 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; IntegralToIntegral Â£temporary1376 Â£temporary1375>

4006:
old  <>
new  <	mov rbx, 4294967295>

4007:
old  < scanFormat$225:>
new  <	and rax, rbx>

4008:
old  <	; Parameter 181 signedint 0>
new  <>

4009:
old  <	mov dword [rbp + 181], 0>
new  < scanFormat$215:>

4010:
old  <>
new  <	; Assign arg_list Â£temporary1376>

4011:
old  < scanFormat$226:>
new  <	mov [rbp + 32], rax>

4012:
old  <	; Call 157 scanUnsignedLongInt 0>
new  <>

4013:
old  <	mov qword [rbp + 157], scanFormat$227>
new  < scanFormat$216:>

4014:
old  <	mov [rbp + 165], rbp>
new  <	; BinarySubtract Â£temporary1377 arg_list 8>

4015:
old  <	add rbp, 157>
new  <	mov rsi, [rbp + 32]>

4016:
old  <	jmp scanUnsignedLongInt>
new  <	sub rsi, 8>

4018:
old  < scanFormat$227:>
new  < scanFormat$217:>

4019:
old  <	; PostCall 157>
new  <	; IntegralToIntegral Â£temporary1379 Â£temporary1377>

4021:
old  < scanFormat$228:>
new  < scanFormat$218:>

4022:
old  <	; GetReturnValue Â£temporary1396>
new  <	; Dereference Â£temporary1380 -> Â£temporary1379 Â£temporary1379 0>

4024:
old  < scanFormat$229:>
new  < scanFormat$219:>

4025:
old  <	; Assign unsignedLongValue Â£temporary1396>
new  <	; Assign unsignedLongPtr Â£temporary1380 -> Â£temporary1379>

4026:
old  <	mov [rbp + 113], rbx>
new  <	mov rax, [rsi]>

4027:
old  <>
new  <	mov [rbp + 121], rax>

4028:
old  < scanFormat$230:>
new  <>

4029:
old  <	; NotEqual 267 star 0>
new  < scanFormat$220:>

4030:
old  <	cmp dword [rbp + 65], 0>
new  <	; Dereference Â£temporary1381 -> unsignedLongPtr unsignedLongPtr 0>

4031:
old  <	jne scanFormat$267>
new  <	mov rsi, [rbp + 121]>

4033:
old  < scanFormat$231:>
new  < scanFormat$221:>

4034:
old  <	; Equal 244 shortInt 0>
new  <	; Assign Â£temporary1381 -> unsignedLongPtr unsignedLongValue>

4035:
old  <	cmp dword [rbp + 53], 0>
new  <	mov rax, [rbp + 113]>

4036:
old  <	je scanFormat$244>
new  <	mov [rsi], rax>

4038:
old  < scanFormat$232:>
new  < scanFormat$222:>

4039:
old  <	; BinaryAdd Â£temporary1400 arg_list 8>
new  <	; Assign percent 0>

4040:
old  <	mov rax, [rbp + 32]>
new  <	mov dword [rbp + 49], 0>

4041:
old  <	add rax, 8>
new  <>

4042:
old  <>
new  < scanFormat$223:>

4043:
old  < scanFormat$233:>
new  <	; Goto 389>

4044:
old  <	; IntegralToIntegral Â£temporary1401 Â£temporary1400>
new  <	jmp scanFormat$389>

4046:
old  < scanFormat$234:>
new  < scanFormat$224:>

4047:
old  <	; IntegralToIntegral Â£temporary1402 Â£temporary1401>
new  <	; PreCall 157 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

4048:
old  <	mov rbx, 4294967295>
new  <>

4049:
old  <	and rax, rbx>
new  < scanFormat$225:>

4050:
old  <>
new  <	; Parameter 181 signedint 0>

4051:
old  < scanFormat$235:>
new  <	mov dword [rbp + 181], 0>

4052:
old  <	; Assign arg_list Â£temporary1402>
new  <>

4053:
old  <	mov [rbp + 32], rax>
new  < scanFormat$226:>

4054:
old  <>
new  <	; Call 157 scanUnsignedLongInt 0>

4055:
old  < scanFormat$236:>
new  <	mov qword [rbp + 157], scanFormat$227>

4056:
old  <	; BinarySubtract Â£temporary1403 arg_list 8>
new  <	mov [rbp + 165], rbp>

4057:
old  <	mov rsi, [rbp + 32]>
new  <	add rbp, 157>

4058:
old  <	sub rsi, 8>
new  <	jmp scanUnsignedLongInt>

4060:
old  < scanFormat$237:>
new  < scanFormat$227:>

4061:
old  <	; IntegralToIntegral Â£temporary1405 Â£temporary1403>
new  <	; PostCall 157>

4063:
old  < scanFormat$238:>
new  < scanFormat$228:>

4064:
old  <	; Dereference Â£temporary1406 -> Â£temporary1405 Â£temporary1405 0>
new  <	; GetReturnValue Â£temporary1383>

4066:
old  < scanFormat$239:>
new  < scanFormat$229:>

4067:
old  <	; Assign unsignedShortPtr Â£temporary1406 -> Â£temporary1405>
new  <	; Assign unsignedLongValue Â£temporary1383>

4068:
old  <	mov rax, [rsi]>
new  <	mov [rbp + 113], rbx>

4069:
old  <	mov [rbp + 129], rax>
new  <>

4070:
old  <>
new  < scanFormat$230:>

4071:
old  < scanFormat$240:>
new  <	; NotEqual 267 star 0>

4072:
old  <	; Dereference Â£temporary1407 -> unsignedShortPtr unsignedShortPtr 0>
new  <	cmp dword [rbp + 65], 0>

4073:
old  <	mov rsi, [rbp + 129]>
new  <	jne scanFormat$267>

4075:
old  < scanFormat$241:>
new  < scanFormat$231:>

4076:
old  <	; IntegralToIntegral Â£temporary1408 unsignedLongValue>
new  <	; Equal 244 shortInt 0>

4077:
old  <	mov rax, [rbp + 113]>
new  <	cmp dword [rbp + 53], 0>

4078:
old  <>
new  <	je scanFormat$244>

4079:
old  < scanFormat$242:>
new  <>

4080:
old  <	; Assign Â£temporary1407 -> unsignedShortPtr Â£temporary1408>
new  < scanFormat$232:>

4081:
old  <	mov [rsi], ax>
new  <	; BinaryAdd Â£temporary1387 arg_list 8>

4082:
old  <>
new  <	mov rax, [rbp + 32]>

4083:
old  < scanFormat$243:>
new  <	add rax, 8>

4084:
old  <	; Goto 267>
new  <>

4085:
old  <	jmp scanFormat$267>
new  < scanFormat$233:>

4086:
old  <>
new  <	; IntegralToIntegral Â£temporary1388 Â£temporary1387>

4087:
old  < scanFormat$244:>
new  <>

4088:
old  <	; NotEqual 257 longIntOrDouble 0>
new  < scanFormat$234:>

4089:
old  <	cmp dword [rbp + 57], 0>
new  <	; IntegralToIntegral Â£temporary1389 Â£temporary1388>

4090:
old  <	jne scanFormat$257>
new  <	mov rbx, 4294967295>

4091:
old  <>
new  <	and rax, rbx>

4092:
old  < scanFormat$245:>
new  <>

4093:
old  <	; BinaryAdd Â£temporary1412 arg_list 8>
new  < scanFormat$235:>

4094:
old  <	mov rax, [rbp + 32]>
new  <	; Assign arg_list Â£temporary1389>

4095:
old  <	add rax, 8>
new  <	mov [rbp + 32], rax>

4097:
old  < scanFormat$246:>
new  < scanFormat$236:>

4098:
old  <	; IntegralToIntegral Â£temporary1413 Â£temporary1412>
new  <	; BinarySubtract Â£temporary1390 arg_list 8>

4099:
old  <>
new  <	mov rsi, [rbp + 32]>

4100:
old  < scanFormat$247:>
new  <	sub rsi, 8>

4101:
old  <	; IntegralToIntegral Â£temporary1414 Â£temporary1413>
new  <>

4102:
old  <	mov rbx, 4294967295>
new  < scanFormat$237:>

4103:
old  <	and rax, rbx>
new  <	; IntegralToIntegral Â£temporary1392 Â£temporary1390>

4105:
old  < scanFormat$248:>
new  < scanFormat$238:>

4106:
old  <	; Assign arg_list Â£temporary1414>
new  <	; Dereference Â£temporary1393 -> Â£temporary1392 Â£temporary1392 0>

4107:
old  <	mov [rbp + 32], rax>
new  <>

4108:
old  <>
new  < scanFormat$239:>

4109:
old  < scanFormat$249:>
new  <	; Assign unsignedShortPtr Â£temporary1393 -> Â£temporary1392>

4110:
old  <	; BinarySubtract Â£temporary1415 arg_list 8>
new  <	mov rax, [rsi]>

4111:
old  <	mov rsi, [rbp + 32]>
new  <	mov [rbp + 129], rax>

4112:
old  <	sub rsi, 8>
new  <>

4113:
old  <>
new  < scanFormat$240:>

4114:
old  < scanFormat$250:>
new  <	; Dereference Â£temporary1394 -> unsignedShortPtr unsignedShortPtr 0>

4115:
old  <	; IntegralToIntegral Â£temporary1417 Â£temporary1415>
new  <	mov rsi, [rbp + 129]>

4117:
old  < scanFormat$251:>
new  < scanFormat$241:>

4118:
old  <	; Dereference Â£temporary1418 -> Â£temporary1417 Â£temporary1417 0>
new  <	; IntegralToIntegral Â£temporary1395 unsignedLongValue>

4119:
old  <>
new  <	mov rax, [rbp + 113]>

4120:
old  < scanFormat$252:>
new  <>

4121:
old  <	; Assign unsignedIntPtr Â£temporary1418 -> Â£temporary1417>
new  < scanFormat$242:>

4122:
old  <	mov rax, [rsi]>
new  <	; Assign Â£temporary1394 -> unsignedShortPtr Â£temporary1395>

4123:
old  <	mov [rbp + 137], rax>
new  <	mov [rsi], ax>

4125:
old  < scanFormat$253:>
new  < scanFormat$243:>

4126:
old  <	; Dereference Â£temporary1419 -> unsignedIntPtr unsignedIntPtr 0>
new  <	; Goto 267>

4127:
old  <	mov rsi, [rbp + 137]>
new  <	jmp scanFormat$267>

4129:
old  < scanFormat$254:>
new  < scanFormat$244:>

4130:
old  <	; IntegralToIntegral Â£temporary1420 unsignedLongValue>
new  <	; NotEqual 257 longIntOrDouble 0>

4131:
old  <	mov rax, [rbp + 113]>
new  <	cmp dword [rbp + 57], 0>

4132:
old  <>
new  <	jne scanFormat$257>

4133:
old  < scanFormat$255:>
new  <>

4134:
old  <	; Assign Â£temporary1419 -> unsignedIntPtr Â£temporary1420>
new  < scanFormat$245:>

4135:
old  <	mov [rsi], eax>
new  <	; BinaryAdd Â£temporary1399 arg_list 8>

4136:
old  <>
new  <	mov rax, [rbp + 32]>

4137:
old  < scanFormat$256:>
new  <	add rax, 8>

4138:
old  <	; Goto 267>
new  <>

4139:
old  <	jmp scanFormat$267>
new  < scanFormat$246:>

4140:
old  <>
new  <	; IntegralToIntegral Â£temporary1400 Â£temporary1399>

4141:
old  < scanFormat$257:>
new  <>

4142:
old  <	; BinaryAdd Â£temporary1422 arg_list 8>
new  < scanFormat$247:>

4143:
old  <	mov rax, [rbp + 32]>
new  <	; IntegralToIntegral Â£temporary1401 Â£temporary1400>

4144:
old  <	add rax, 8>
new  <	mov rbx, 4294967295>

4145:
old  <>
new  <	and rax, rbx>

4146:
old  < scanFormat$258:>
new  <>

4147:
old  <	; IntegralToIntegral Â£temporary1423 Â£temporary1422>
new  < scanFormat$248:>

4148:
old  <>
new  <	; Assign arg_list Â£temporary1401>

4149:
old  < scanFormat$259:>
new  <	mov [rbp + 32], rax>

4150:
old  <	; IntegralToIntegral Â£temporary1424 Â£temporary1423>
new  <>

4151:
old  <	mov rbx, 4294967295>
new  < scanFormat$249:>

4152:
old  <	and rax, rbx>
new  <	; BinarySubtract Â£temporary1402 arg_list 8>

4153:
old  <>
new  <	mov rsi, [rbp + 32]>

4154:
old  < scanFormat$260:>
new  <	sub rsi, 8>

4155:
old  <	; Assign arg_list Â£temporary1424>
new  <>

4156:
old  <	mov [rbp + 32], rax>
new  < scanFormat$250:>

4157:
old  <>
new  <	; IntegralToIntegral Â£temporary1404 Â£temporary1402>

4158:
old  < scanFormat$261:>
new  <>

4159:
old  <	; BinarySubtract Â£temporary1425 arg_list 8>
new  < scanFormat$251:>

4160:
old  <	mov rsi, [rbp + 32]>
new  <	; Dereference Â£temporary1405 -> Â£temporary1404 Â£temporary1404 0>

4161:
old  <	sub rsi, 8>
new  <>

4162:
old  <>
new  < scanFormat$252:>

4163:
old  < scanFormat$262:>
new  <	; Assign unsignedIntPtr Â£temporary1405 -> Â£temporary1404>

4164:
old  <	; IntegralToIntegral Â£temporary1427 Â£temporary1425>
new  <	mov rax, [rsi]>

4165:
old  <>
new  <	mov [rbp + 137], rax>

4166:
old  < scanFormat$263:>
new  <>

4167:
old  <	; Dereference Â£temporary1428 -> Â£temporary1427 Â£temporary1427 0>
new  < scanFormat$253:>

4168:
old  <>
new  <	; Dereference Â£temporary1406 -> unsignedIntPtr unsignedIntPtr 0>

4169:
old  < scanFormat$264:>
new  <	mov rsi, [rbp + 137]>

4170:
old  <	; Assign unsignedLongPtr Â£temporary1428 -> Â£temporary1427>
new  <>

4171:
old  <	mov rax, [rsi]>
new  < scanFormat$254:>

4172:
old  <	mov [rbp + 121], rax>
new  <	; IntegralToIntegral Â£temporary1407 unsignedLongValue>

4173:
old  <>
new  <	mov rax, [rbp + 113]>

4174:
old  < scanFormat$265:>
new  <>

4175:
old  <	; Dereference Â£temporary1429 -> unsignedLongPtr unsignedLongPtr 0>
new  < scanFormat$255:>

4176:
old  <	mov rsi, [rbp + 121]>
new  <	; Assign Â£temporary1406 -> unsignedIntPtr Â£temporary1407>

4177:
old  <>
new  <	mov [rsi], eax>

4178:
old  < scanFormat$266:>
new  <>

4179:
old  <	; Assign Â£temporary1429 -> unsignedLongPtr unsignedLongValue>
new  < scanFormat$256:>

4180:
old  <	mov rax, [rbp + 113]>
new  <	; Goto 267>

4181:
old  <	mov [rsi], rax>
new  <	jmp scanFormat$267>

4183:
old  < scanFormat$267:>
new  < scanFormat$257:>

4184:
old  <	; Assign percent 0>
new  <	; BinaryAdd Â£temporary1409 arg_list 8>

4185:
old  <	mov dword [rbp + 49], 0>
new  <	mov rax, [rbp + 32]>

4186:
old  <>
new  <	add rax, 8>

4187:
old  < scanFormat$268:>
new  <>

4188:
old  <	; Goto 389>
new  < scanFormat$258:>

4189:
old  <	jmp scanFormat$389>
new  <	; IntegralToIntegral Â£temporary1410 Â£temporary1409>

4191:
old  < scanFormat$269:>
new  < scanFormat$259:>

4192:
old  <	; PreCall 157 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; IntegralToIntegral Â£temporary1411 Â£temporary1410>

4193:
old  <>
new  <	mov rbx, 4294967295>

4194:
old  < scanFormat$270:>
new  <	and rax, rbx>

4195:
old  <	; Call 157 scanLongDouble 0>
new  <>

4196:
old  <	mov qword [rbp + 157], scanFormat$271>
new  < scanFormat$260:>

4197:
old  <	mov [rbp + 165], rbp>
new  <	; Assign arg_list Â£temporary1411>

4198:
old  <	add rbp, 157>
new  <	mov [rbp + 32], rax>

4199:
old  <	jmp scanLongDouble>
new  <>

4200:
old  <>
new  < scanFormat$261:>

4201:
old  < scanFormat$271:>
new  <	; BinarySubtract Â£temporary1412 arg_list 8>

4202:
old  <	; PostCall 157>
new  <	mov rsi, [rbp + 32]>

4203:
old  <>
new  <	sub rsi, 8>

4204:
old  < scanFormat$272:>
new  <>

4205:
old  <	; GetReturnValue Â£temporary1431>
new  < scanFormat$262:>

4206:
old  <>
new  <	; IntegralToIntegral Â£temporary1414 Â£temporary1412>

4207:
old  < scanFormat$273:>
new  <>

4208:
old  <	; PopFloat longDoubleValue>
new  < scanFormat$263:>

4209:
old  <	fstp qword [rbp + 145]>
new  <	; Dereference Â£temporary1415 -> Â£temporary1414 Â£temporary1414 0>

4211:
old  < scanFormat$274:>
new  < scanFormat$264:>

4212:
old  <	; NotEqual 312 star 0>
new  <	; Assign unsignedLongPtr Â£temporary1415 -> Â£temporary1414>

4213:
old  <	cmp dword [rbp + 65], 0>
new  <	mov rax, [rsi]>

4214:
old  <	jne scanFormat$312>
new  <	mov [rbp + 121], rax>

4216:
old  < scanFormat$275:>
new  < scanFormat$265:>

4217:
old  <	; Equal 288 longIntOrDouble 0>
new  <	; Dereference Â£temporary1416 -> unsignedLongPtr unsignedLongPtr 0>

4218:
old  <	cmp dword [rbp + 57], 0>
new  <	mov rsi, [rbp + 121]>

4219:
old  <	je scanFormat$288>
new  <>

4220:
old  <>
new  < scanFormat$266:>

4221:
old  < scanFormat$276:>
new  <	; Assign Â£temporary1416 -> unsignedLongPtr unsignedLongValue>

4222:
old  <	; BinaryAdd Â£temporary1435 arg_list 8>
new  <	mov rax, [rbp + 113]>

4223:
old  <	mov rax, [rbp + 32]>
new  <	mov [rsi], rax>

4224:
old  <	add rax, 8>
new  <>

4225:
old  <>
new  < scanFormat$267:>

4226:
old  < scanFormat$277:>
new  <	; Assign percent 0>

4227:
old  <	; IntegralToIntegral Â£temporary1436 Â£temporary1435>
new  <	mov dword [rbp + 49], 0>

4229:
old  < scanFormat$278:>
new  < scanFormat$268:>

4230:
old  <	; IntegralToIntegral Â£temporary1437 Â£temporary1436>
new  <	; Goto 389>

4231:
old  <	mov rbx, 4294967295>
new  <	jmp scanFormat$389>

4232:
old  <	and rax, rbx>
new  <>

4233:
old  <>
new  < scanFormat$269:>

4234:
old  < scanFormat$279:>
new  <	; PreCall 157 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

4235:
old  <	; Assign arg_list Â£temporary1437>
new  <>

4236:
old  <	mov [rbp + 32], rax>
new  < scanFormat$270:>

4237:
old  <>
new  <	; Call 157 scanLongDouble 0>

4238:
old  < scanFormat$280:>
new  <	mov qword [rbp + 157], scanFormat$271>

4239:
old  <	; BinarySubtract Â£temporary1438 arg_list 8>
new  <	mov [rbp + 165], rbp>

4240:
old  <	mov rsi, [rbp + 32]>
new  <	add rbp, 157>

4241:
old  <	sub rsi, 8>
new  <	jmp scanLongDouble>

4243:
old  < scanFormat$281:>
new  < scanFormat$271:>

4244:
old  <	; IntegralToIntegral Â£temporary1440 Â£temporary1438>
new  <	; PostCall 157>

4246:
old  < scanFormat$282:>
new  < scanFormat$272:>

4247:
old  <	; Dereference Â£temporary1441 -> Â£temporary1440 Â£temporary1440 0>
new  <	; GetReturnValue Â£temporary1418>

4249:
old  < scanFormat$283:>
new  < scanFormat$273:>

4250:
old  <	; Assign doublePtr Â£temporary1441 -> Â£temporary1440>
new  <	; PopFloat longDoubleValue>

4251:
old  <	mov rax, [rsi]>
new  <	fstp qword [rbp + 145]>

4252:
old  <	mov [rbp + 157], rax>
new  <>

4253:
old  <>
new  < scanFormat$274:>

4254:
old  < scanFormat$284:>
new  <	; NotEqual 312 star 0>

4255:
old  <	; Dereference Â£temporary1442 -> doublePtr doublePtr 0>
new  <	cmp dword [rbp + 65], 0>

4256:
old  <	mov rsi, [rbp + 157]>
new  <	jne scanFormat$312>

4258:
old  < scanFormat$285:>
new  < scanFormat$275:>

4259:
old  <	; PushFloat longDoubleValue>
new  <	; Equal 288 longIntOrDouble 0>

4260:
old  <	fld qword [rbp + 145]>
new  <	cmp dword [rbp + 57], 0>

4261:
old  <>
new  <	je scanFormat$288>

4262:
old  < scanFormat$286:>
new  <>

4263:
old  <	; PopFloat Â£temporary1442 -> doublePtr>
new  < scanFormat$276:>

4264:
old  <	fstp qword [rsi]>
new  <	; BinaryAdd Â£temporary1422 arg_list 8>

4265:
old  <>
new  <	mov rax, [rbp + 32]>

4266:
old  < scanFormat$287:>
new  <	add rax, 8>

4267:
old  <	; Goto 312>
new  <>

4268:
old  <	jmp scanFormat$312>
new  < scanFormat$277:>

4269:
old  <>
new  <	; IntegralToIntegral Â£temporary1423 Â£temporary1422>

4270:
old  < scanFormat$288:>
new  <>

4271:
old  <	; Equal 301 longDouble 0>
new  < scanFormat$278:>

4272:
old  <	cmp dword [rbp + 61], 0>
new  <	; IntegralToIntegral Â£temporary1424 Â£temporary1423>

4273:
old  <	je scanFormat$301>
new  <	mov rbx, 4294967295>

4274:
old  <>
new  <	and rax, rbx>

4275:
old  < scanFormat$289:>
new  <>

4276:
old  <	; BinaryAdd Â£temporary1445 arg_list 8>
new  < scanFormat$279:>

4277:
old  <	mov rax, [rbp + 32]>
new  <	; Assign arg_list Â£temporary1424>

4278:
old  <	add rax, 8>
new  <	mov [rbp + 32], rax>

4280:
old  < scanFormat$290:>
new  < scanFormat$280:>

4281:
old  <	; IntegralToIntegral Â£temporary1446 Â£temporary1445>
new  <	; BinarySubtract Â£temporary1425 arg_list 8>

4282:
old  <>
new  <	mov rsi, [rbp + 32]>

4283:
old  < scanFormat$291:>
new  <	sub rsi, 8>

4284:
old  <	; IntegralToIntegral Â£temporary1447 Â£temporary1446>
new  <>

4285:
old  <	mov rbx, 4294967295>
new  < scanFormat$281:>

4286:
old  <	and rax, rbx>
new  <	; IntegralToIntegral Â£temporary1427 Â£temporary1425>

4288:
old  < scanFormat$292:>
new  < scanFormat$282:>

4289:
old  <	; Assign arg_list Â£temporary1447>
new  <	; Dereference Â£temporary1428 -> Â£temporary1427 Â£temporary1427 0>

4290:
old  <	mov [rbp + 32], rax>
new  <>

4291:
old  <>
new  < scanFormat$283:>

4292:
old  < scanFormat$293:>
new  <	; Assign doublePtr Â£temporary1428 -> Â£temporary1427>

4293:
old  <	; BinarySubtract Â£temporary1448 arg_list 8>
new  <	mov rax, [rsi]>

4294:
old  <	mov rsi, [rbp + 32]>
new  <	mov [rbp + 157], rax>

4295:
old  <	sub rsi, 8>
new  <>

4296:
old  <>
new  < scanFormat$284:>

4297:
old  < scanFormat$294:>
new  <	; Dereference Â£temporary1429 -> doublePtr doublePtr 0>

4298:
old  <	; IntegralToIntegral Â£temporary1450 Â£temporary1448>
new  <	mov rsi, [rbp + 157]>

4300:
old  < scanFormat$295:>
new  < scanFormat$285:>

4301:
old  <	; Dereference Â£temporary1451 -> Â£temporary1450 Â£temporary1450 0>
new  <	; PushFloat longDoubleValue>

4302:
old  <>
new  <	fld qword [rbp + 145]>

4303:
old  < scanFormat$296:>
new  <>

4304:
old  <	; Assign longDoublePtr Â£temporary1451 -> Â£temporary1450>
new  < scanFormat$286:>

4305:
old  <	mov rax, [rsi]>
new  <	; PopFloat Â£temporary1429 -> doublePtr>

4306:
old  <	mov [rbp + 157], rax>
new  <	fstp qword [rsi]>

4308:
old  < scanFormat$297:>
new  < scanFormat$287:>

4309:
old  <	; Dereference Â£temporary1452 -> longDoublePtr longDoublePtr 0>
new  <	; Goto 312>

4310:
old  <	mov rsi, [rbp + 157]>
new  <	jmp scanFormat$312>

4312:
old  < scanFormat$298:>
new  < scanFormat$288:>

4313:
old  <	; PushFloat longDoubleValue>
new  <	; Equal 301 longDouble 0>

4314:
old  <	fld qword [rbp + 145]>
new  <	cmp dword [rbp + 61], 0>

4315:
old  <>
new  <	je scanFormat$301>

4316:
old  < scanFormat$299:>
new  <>

4317:
old  <	; PopFloat Â£temporary1452 -> longDoublePtr>
new  < scanFormat$289:>

4318:
old  <	fstp qword [rsi]>
new  <	; BinaryAdd Â£temporary1432 arg_list 8>

4319:
old  <>
new  <	mov rax, [rbp + 32]>

4320:
old  < scanFormat$300:>
new  <	add rax, 8>

4321:
old  <	; Goto 312>
new  <>

4322:
old  <	jmp scanFormat$312>
new  < scanFormat$290:>

4323:
old  <>
new  <	; IntegralToIntegral Â£temporary1433 Â£temporary1432>

4324:
old  < scanFormat$301:>
new  <>

4325:
old  <	; BinaryAdd Â£temporary1454 arg_list 8>
new  < scanFormat$291:>

4326:
old  <	mov rax, [rbp + 32]>
new  <	; IntegralToIntegral Â£temporary1434 Â£temporary1433>

4327:
old  <	add rax, 8>
new  <	mov rbx, 4294967295>

4328:
old  <>
new  <	and rax, rbx>

4329:
old  < scanFormat$302:>
new  <>

4330:
old  <	; IntegralToIntegral Â£temporary1455 Â£temporary1454>
new  < scanFormat$292:>

4331:
old  <>
new  <	; Assign arg_list Â£temporary1434>

4332:
old  < scanFormat$303:>
new  <	mov [rbp + 32], rax>

4333:
old  <	; IntegralToIntegral Â£temporary1456 Â£temporary1455>
new  <>

4334:
old  <	mov rbx, 4294967295>
new  < scanFormat$293:>

4335:
old  <	and rax, rbx>
new  <	; BinarySubtract Â£temporary1435 arg_list 8>

4336:
old  <>
new  <	mov rsi, [rbp + 32]>

4337:
old  < scanFormat$304:>
new  <	sub rsi, 8>

4338:
old  <	; Assign arg_list Â£temporary1456>
new  <>

4339:
old  <	mov [rbp + 32], rax>
new  < scanFormat$294:>

4340:
old  <>
new  <	; IntegralToIntegral Â£temporary1437 Â£temporary1435>

4341:
old  < scanFormat$305:>
new  <>

4342:
old  <	; BinarySubtract Â£temporary1457 arg_list 8>
new  < scanFormat$295:>

4343:
old  <	mov rsi, [rbp + 32]>
new  <	; Dereference Â£temporary1438 -> Â£temporary1437 Â£temporary1437 0>

4344:
old  <	sub rsi, 8>
new  <>

4345:
old  <>
new  < scanFormat$296:>

4346:
old  < scanFormat$306:>
new  <	; Assign longDoublePtr Â£temporary1438 -> Â£temporary1437>

4347:
old  <	; IntegralToIntegral Â£temporary1459 Â£temporary1457>
new  <	mov rax, [rsi]>

4348:
old  <>
new  <	mov [rbp + 157], rax>

4349:
old  < scanFormat$307:>
new  <>

4350:
old  <	; Dereference Â£temporary1460 -> Â£temporary1459 Â£temporary1459 0>
new  < scanFormat$297:>

4351:
old  <>
new  <	; Dereference Â£temporary1439 -> longDoublePtr longDoublePtr 0>

4352:
old  < scanFormat$308:>
new  <	mov rsi, [rbp + 157]>

4353:
old  <	; Assign floatPtr Â£temporary1460 -> Â£temporary1459>
new  <>

4354:
old  <	mov rax, [rsi]>
new  < scanFormat$298:>

4355:
old  <	mov [rbp + 157], rax>
new  <	; PushFloat longDoubleValue>

4356:
old  <>
new  <	fld qword [rbp + 145]>

4357:
old  < scanFormat$309:>
new  <>

4358:
old  <	; Dereference Â£temporary1461 -> floatPtr floatPtr 0>
new  < scanFormat$299:>

4359:
old  <	mov rsi, [rbp + 157]>
new  <	; PopFloat Â£temporary1439 -> longDoublePtr>

4360:
old  <>
new  <	fstp qword [rsi]>

4361:
old  < scanFormat$310:>
new  <>

4362:
old  <	; PushFloat longDoubleValue>
new  < scanFormat$300:>

4363:
old  <	fld qword [rbp + 145]>
new  <	; Goto 312>

4364:
old  <>
new  <	jmp scanFormat$312>

4365:
old  < scanFormat$311:>
new  <>

4366:
old  <	; PopFloat Â£temporary1461 -> floatPtr>
new  < scanFormat$301:>

4367:
old  <	fstp dword [rsi]>
new  <	; BinaryAdd Â£temporary1441 arg_list 8>

4368:
old  <>
new  <	mov rax, [rbp + 32]>

4369:
old  < scanFormat$312:>
new  <	add rax, 8>

4370:
old  <	; Assign percent 0>
new  <>

4371:
old  <	mov dword [rbp + 49], 0>
new  < scanFormat$302:>

4372:
old  <>
new  <	; IntegralToIntegral Â£temporary1442 Â£temporary1441>

4373:
old  < scanFormat$313:>
new  <>

4374:
old  <	; Goto 389>
new  < scanFormat$303:>

4375:
old  <	jmp scanFormat$389>
new  <	; IntegralToIntegral Â£temporary1443 Â£temporary1442>

4376:
old  <>
new  <	mov rbx, 4294967295>

4377:
old  < scanFormat$314:>
new  <	and rax, rbx>

4378:
old  <	; Assign not 0>
new  <>

4379:
old  <	mov dword [rbp + 157], 0>
new  < scanFormat$304:>

4380:
old  <>
new  <	; Assign arg_list Â£temporary1443>

4381:
old  < scanFormat$315:>
new  <	mov [rbp + 32], rax>

4382:
old  <	; BinaryAdd index index 1>
new  <>

4383:
old  <	inc dword [rbp + 93]>
new  < scanFormat$305:>

4384:
old  <>
new  <	; BinarySubtract Â£temporary1444 arg_list 8>

4385:
old  < scanFormat$316:>
new  <	mov rsi, [rbp + 32]>

4386:
old  <	; IntegralToIntegral Â£temporary1467 index>
new  <	sub rsi, 8>

4387:
old  <	mov eax, [rbp + 93]>
new  <>

4388:
old  <	mov rbx, 4294967295>
new  < scanFormat$306:>

4389:
old  <	and rax, rbx>
new  <	; IntegralToIntegral Â£temporary1446 Â£temporary1444>

4391:
old  < scanFormat$317:>
new  < scanFormat$307:>

4392:
old  <	; BinaryAdd Â£temporary1469 format Â£temporary1467>
new  <	; Dereference Â£temporary1447 -> Â£temporary1446 Â£temporary1446 0>

4393:
old  <	mov rsi, [rbp + 24]>
new  <>

4394:
old  <	add rsi, rax>
new  < scanFormat$308:>

4395:
old  <>
new  <	; Assign floatPtr Â£temporary1447 -> Â£temporary1446>

4396:
old  < scanFormat$318:>
new  <	mov rax, [rsi]>

4397:
old  <	; Dereference Â£temporary1466 -> Â£temporary1469 Â£temporary1469 0>
new  <	mov [rbp + 157], rax>

4399:
old  < scanFormat$319:>
new  < scanFormat$309:>

4400:
old  <	; NotEqual 322 Â£temporary1466 -> Â£temporary1469 94>
new  <	; Dereference Â£temporary1448 -> floatPtr floatPtr 0>

4401:
old  <	cmp byte [rsi], 94>
new  <	mov rsi, [rbp + 157]>

4402:
old  <	jne scanFormat$322>
new  <>

4403:
old  <>
new  < scanFormat$310:>

4404:
old  < scanFormat$320:>
new  <	; PushFloat longDoubleValue>

4405:
old  <	; Assign not 1>
new  <	fld qword [rbp + 145]>

4406:
old  <	mov dword [rbp + 157], 1>
new  <>

4407:
old  <>
new  < scanFormat$311:>

4408:
old  < scanFormat$321:>
new  <	; PopFloat Â£temporary1448 -> floatPtr>

4409:
old  <	; BinaryAdd index index 1>
new  <	fstp dword [rsi]>

4410:
old  <	inc dword [rbp + 93]>
new  <>

4411:
old  <>
new  < scanFormat$312:>

4412:
old  < scanFormat$322:>
new  <	; Assign percent 0>

4413:
old  <	; Assign startIndex index>
new  <	mov dword [rbp + 49], 0>

4414:
old  <	mov eax, [rbp + 93]>
new  <>

4415:
old  <	mov [rbp + 161], eax>
new  < scanFormat$313:>

4416:
old  <>
new  <	; Goto 389>

4417:
old  < scanFormat$323:>
new  <	jmp scanFormat$389>

4418:
old  <	; IntegralToIntegral Â£temporary1473 index>
new  <>

4419:
old  <	mov eax, [rbp + 93]>
new  < scanFormat$314:>

4420:
old  <	mov rbx, 4294967295>
new  <	; Assign not 0>

4421:
old  <	and rax, rbx>
new  <	mov dword [rbp + 157], 0>

4423:
old  < scanFormat$324:>
new  < scanFormat$315:>

4424:
old  <	; BinaryAdd Â£temporary1475 format Â£temporary1473>
new  <	; BinaryAdd index index 1>

4425:
old  <	mov rsi, [rbp + 24]>
new  <	inc dword [rbp + 93]>

4426:
old  <	add rsi, rax>
new  <>

4427:
old  <>
new  < scanFormat$316:>

4428:
old  < scanFormat$325:>
new  <	; IntegralToIntegral Â£temporary1454 index>

4429:
old  <	; Dereference Â£temporary1472 -> Â£temporary1475 Â£temporary1475 0>
new  <	mov eax, [rbp + 93]>

4430:
old  <>
new  <	mov rbx, 4294967295>

4431:
old  < scanFormat$326:>
new  <	and rax, rbx>

4432:
old  <	; Equal 329 Â£temporary1472 -> Â£temporary1475 93>
new  <>

4433:
old  <	cmp byte [rsi], 93>
new  < scanFormat$317:>

4434:
old  <	je scanFormat$329>
new  <	; BinaryAdd Â£temporary1456 format Â£temporary1454>

4435:
old  <>
new  <	mov rsi, [rbp + 24]>

4436:
old  < scanFormat$327:>
new  <	add rsi, rax>

4437:
old  <	; BinaryAdd index index 1>
new  <>

4438:
old  <	inc dword [rbp + 93]>
new  < scanFormat$318:>

4439:
old  <>
new  <	; Dereference Â£temporary1453 -> Â£temporary1456 Â£temporary1456 0>

4440:
old  < scanFormat$328:>
new  <>

4441:
old  <	; Goto 323>
new  < scanFormat$319:>

4442:
old  <	jmp scanFormat$323>
new  <	; NotEqual 322 Â£temporary1453 -> Â£temporary1456 94>

4443:
old  <>
new  <	cmp byte [rsi], 94>

4444:
old  < scanFormat$329:>
new  <	jne scanFormat$322>

4445:
old  <	; IntegralToIntegral Â£temporary1479 index>
new  <>

4446:
old  <	mov eax, [rbp + 93]>
new  < scanFormat$320:>

4447:
old  <	mov rbx, 4294967295>
new  <	; Assign not 1>

4448:
old  <	and rax, rbx>
new  <	mov dword [rbp + 157], 1>

4450:
old  < scanFormat$330:>
new  < scanFormat$321:>

4451:
old  <	; BinaryAdd Â£temporary1481 format Â£temporary1479>
new  <	; BinaryAdd index index 1>

4452:
old  <	mov rsi, [rbp + 24]>
new  <	inc dword [rbp + 93]>

4453:
old  <	add rsi, rax>
new  <>

4454:
old  <>
new  < scanFormat$322:>

4455:
old  < scanFormat$331:>
new  <	; Assign startIndex index>

4456:
old  <	; Dereference Â£temporary1478 -> Â£temporary1481 Â£temporary1481 0>
new  <	mov eax, [rbp + 93]>

4457:
old  <>
new  <	mov [rbp + 161], eax>

4458:
old  < scanFormat$332:>
new  <>

4459:
old  <	; Assign Â£temporary1478 -> Â£temporary1481 0>
new  < scanFormat$323:>

4460:
old  <	mov byte [rsi], 0>
new  <	; IntegralToIntegral Â£temporary1460 index>

4461:
old  <>
new  <	mov eax, [rbp + 93]>

4462:
old  < scanFormat$333:>
new  <	mov rbx, 4294967295>

4463:
old  <	; NotEqual 353 star 0>
new  <	and rax, rbx>

4464:
old  <	cmp dword [rbp + 65], 0>
new  <>

4465:
old  <	jne scanFormat$353>
new  < scanFormat$324:>

4466:
old  <>
new  <	; BinaryAdd Â£temporary1462 format Â£temporary1460>

4467:
old  < scanFormat$334:>
new  <	mov rsi, [rbp + 24]>

4468:
old  <	; BinaryAdd Â£temporary1485 arg_list 8>
new  <	add rsi, rax>

4469:
old  <	mov rax, [rbp + 32]>
new  <>

4470:
old  <	add rax, 8>
new  < scanFormat$325:>

4471:
old  <>
new  <	; Dereference Â£temporary1459 -> Â£temporary1462 Â£temporary1462 0>

4472:
old  < scanFormat$335:>
new  <>

4473:
old  <	; IntegralToIntegral Â£temporary1486 Â£temporary1485>
new  < scanFormat$326:>

4474:
old  <>
new  <	; Equal 329 Â£temporary1459 -> Â£temporary1462 93>

4475:
old  < scanFormat$336:>
new  <	cmp byte [rsi], 93>

4476:
old  <	; IntegralToIntegral Â£temporary1487 Â£temporary1486>
new  <	je scanFormat$329>

4477:
old  <	mov rbx, 4294967295>
new  <>

4478:
old  <	and rax, rbx>
new  < scanFormat$327:>

4479:
old  <>
new  <	; BinaryAdd index index 1>

4480:
old  < scanFormat$337:>
new  <	inc dword [rbp + 93]>

4481:
old  <	; Assign arg_list Â£temporary1487>
new  <>

4482:
old  <	mov [rbp + 32], rax>
new  < scanFormat$328:>

4483:
old  <>
new  <	; Goto 323>

4484:
old  < scanFormat$338:>
new  <	jmp scanFormat$323>

4485:
old  <	; BinarySubtract Â£temporary1488 arg_list 8>
new  <>

4486:
old  <	mov rsi, [rbp + 32]>
new  < scanFormat$329:>

4487:
old  <	sub rsi, 8>
new  <	; IntegralToIntegral Â£temporary1466 index>

4488:
old  <>
new  <	mov eax, [rbp + 93]>

4489:
old  < scanFormat$339:>
new  <	mov rbx, 4294967295>

4490:
old  <	; IntegralToIntegral Â£temporary1490 Â£temporary1488>
new  <	and rax, rbx>

4492:
old  < scanFormat$340:>
new  < scanFormat$330:>

4493:
old  <	; Dereference Â£temporary1491 -> Â£temporary1490 Â£temporary1490 0>
new  <	; BinaryAdd Â£temporary1468 format Â£temporary1466>

4494:
old  <>
new  <	mov rsi, [rbp + 24]>

4495:
old  < scanFormat$341:>
new  <	add rsi, rax>

4496:
old  <	; Assign string Â£temporary1491 -> Â£temporary1490>
new  <>

4497:
old  <	mov rax, [rsi]>
new  < scanFormat$331:>

4498:
old  <	mov [rbp + 165], rax>
new  <	; Dereference Â£temporary1465 -> Â£temporary1468 Â£temporary1468 0>

4500:
old  < scanFormat$342:>
new  < scanFormat$332:>

4501:
old  <	; PreCall 173 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Assign Â£temporary1465 -> Â£temporary1468 0>

4502:
old  <>
new  <	mov byte [rsi], 0>

4503:
old  < scanFormat$343:>
new  <>

4504:
old  <	; Parameter 197 pointer string>
new  < scanFormat$333:>

4505:
old  <	mov rax, [rbp + 165]>
new  <	; NotEqual 353 star 0>

4506:
old  <	mov [rbp + 197], rax>
new  <	cmp dword [rbp + 65], 0>

4507:
old  <>
new  <	jne scanFormat$353>

4508:
old  < scanFormat$344:>
new  <>

4509:
old  <	; IntegralToIntegral Â£temporary1493 startIndex>
new  < scanFormat$334:>

4510:
old  <	mov eax, [rbp + 161]>
new  <	; BinaryAdd Â£temporary1472 arg_list 8>

4511:
old  <	mov rbx, 4294967295>
new  <	mov rax, [rbp + 32]>

4512:
old  <	and rax, rbx>
new  <	add rax, 8>

4514:
old  < scanFormat$345:>
new  < scanFormat$335:>

4515:
old  <	; BinaryAdd Â£temporary1495 format Â£temporary1493>
new  <	; IntegralToIntegral Â£temporary1473 Â£temporary1472>

4516:
old  <	mov rsi, [rbp + 24]>
new  <>

4517:
old  <	add rsi, rax>
new  < scanFormat$336:>

4518:
old  <>
new  <	; IntegralToIntegral Â£temporary1474 Â£temporary1473>

4519:
old  < scanFormat$346:>
new  <	mov rbx, 4294967295>

4520:
old  <	; Dereference Â£temporary1492 -> Â£temporary1495 Â£temporary1495 0>
new  <	and rax, rbx>

4522:
old  < scanFormat$347:>
new  < scanFormat$337:>

4523:
old  <	; Address Â£temporary1496 Â£temporary1492 -> Â£temporary1495>
new  <	; Assign arg_list Â£temporary1474>

4524:
old  <>
new  <	mov [rbp + 32], rax>

4525:
old  < scanFormat$348:>
new  <>

4526:
old  <	; Parameter 205 pointer Â£temporary1496>
new  < scanFormat$338:>

4527:
old  <	mov [rbp + 205], rsi>
new  <	; BinarySubtract Â£temporary1475 arg_list 8>

4528:
old  <>
new  <	mov rsi, [rbp + 32]>

4529:
old  < scanFormat$349:>
new  <	sub rsi, 8>

4530:
old  <	; Parameter 213 signedint not>
new  <>

4531:
old  <	mov eax, [rbp + 157]>
new  < scanFormat$339:>

4532:
old  <	mov [rbp + 213], eax>
new  <	; IntegralToIntegral Â£temporary1477 Â£temporary1475>

4534:
old  < scanFormat$350:>
new  < scanFormat$340:>

4535:
old  <	; Call 173 scanPattern 0>
new  <	; Dereference Â£temporary1478 -> Â£temporary1477 Â£temporary1477 0>

4536:
old  <	mov qword [rbp + 173], scanFormat$351>
new  <>

4537:
old  <	mov [rbp + 181], rbp>
new  < scanFormat$341:>

4538:
old  <	add rbp, 173>
new  <	; Assign string Â£temporary1478 -> Â£temporary1477>

4539:
old  <	jmp scanPattern>
new  <	mov rax, [rsi]>

4540:
old  <>
new  <	mov [rbp + 165], rax>

4541:
old  < scanFormat$351:>
new  <>

4542:
old  <	; PostCall 173>
new  < scanFormat$342:>

4543:
old  <>
new  <	; PreCall 173 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

4544:
old  < scanFormat$352:>
new  <>

4545:
old  <	; Goto 389>
new  < scanFormat$343:>

4546:
old  <	jmp scanFormat$389>
new  <	; Parameter 197 pointer string>

4547:
old  <>
new  <	mov rax, [rbp + 165]>

4548:
old  < scanFormat$353:>
new  <	mov [rbp + 197], rax>

4549:
old  <	; PreCall 165 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

4550:
old  <>
new  < scanFormat$344:>

4551:
old  < scanFormat$354:>
new  <	; IntegralToIntegral Â£temporary1480 startIndex>

4552:
old  <	; Parameter 189 pointer 0>
new  <	mov eax, [rbp + 161]>

4553:
old  <	mov qword [rbp + 189], 0>
new  <	mov rbx, 4294967295>

4554:
old  <>
new  <	and rax, rbx>

4555:
old  < scanFormat$355:>
new  <>

4556:
old  <	; IntegralToIntegral Â£temporary1499 startIndex>
new  < scanFormat$345:>

4557:
old  <	mov eax, [rbp + 161]>
new  <	; BinaryAdd Â£temporary1482 format Â£temporary1480>

4558:
old  <	mov rbx, 4294967295>
new  <	mov rsi, [rbp + 24]>

4559:
old  <	and rax, rbx>
new  <	add rsi, rax>

4561:
old  < scanFormat$356:>
new  < scanFormat$346:>

4562:
old  <	; BinaryAdd Â£temporary1501 format Â£temporary1499>
new  <	; Dereference Â£temporary1479 -> Â£temporary1482 Â£temporary1482 0>

4563:
old  <	mov rsi, [rbp + 24]>
new  <>

4564:
old  <	add rsi, rax>
new  < scanFormat$347:>

4565:
old  <>
new  <	; Address Â£temporary1483 Â£temporary1479 -> Â£temporary1482>

4566:
old  < scanFormat$357:>
new  <>

4567:
old  <	; Dereference Â£temporary1498 -> Â£temporary1501 Â£temporary1501 0>
new  < scanFormat$348:>

4568:
old  <>
new  <	; Parameter 205 pointer Â£temporary1483>

4569:
old  < scanFormat$358:>
new  <	mov [rbp + 205], rsi>

4570:
old  <	; Address Â£temporary1502 Â£temporary1498 -> Â£temporary1501>
new  <>

4571:
old  <>
new  < scanFormat$349:>

4572:
old  < scanFormat$359:>
new  <	; Parameter 213 signedint not>

4573:
old  <	; Parameter 197 pointer Â£temporary1502>
new  <	mov eax, [rbp + 157]>

4574:
old  <	mov [rbp + 197], rsi>
new  <	mov [rbp + 213], eax>

4576:
old  < scanFormat$360:>
new  < scanFormat$350:>

4577:
old  <	; Parameter 205 signedint not>
new  <	; Call 173 scanPattern 0>

4578:
old  <	mov eax, [rbp + 157]>
new  <	mov qword [rbp + 173], scanFormat$351>

4579:
old  <	mov [rbp + 205], eax>
new  <	mov [rbp + 181], rbp>

4580:
old  <>
new  <	add rbp, 173>

4581:
old  < scanFormat$361:>
new  <	jmp scanPattern>

4582:
old  <	; Call 165 scanPattern 0>
new  <>

4583:
old  <	mov qword [rbp + 165], scanFormat$362>
new  < scanFormat$351:>

4584:
old  <	mov [rbp + 173], rbp>
new  <	; PostCall 173>

4585:
old  <	add rbp, 165>
new  <>

4586:
old  <	jmp scanPattern>
new  < scanFormat$352:>

4587:
old  <>
new  <	; Goto 389>

4588:
old  < scanFormat$362:>
new  <	jmp scanFormat$389>

4589:
old  <	; PostCall 165>
new  <>

4590:
old  <>
new  < scanFormat$353:>

4591:
old  < scanFormat$363:>
new  <	; PreCall 165 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

4592:
old  <	; Goto 389>
new  <>

4593:
old  <	jmp scanFormat$389>
new  < scanFormat$354:>

4594:
old  <>
new  <	; Parameter 189 pointer 0>

4595:
old  < scanFormat$364:>
new  <	mov qword [rbp + 189], 0>

4596:
old  <	; BinaryAdd Â£temporary1505 arg_list 8>
new  <>

4597:
old  <	mov rax, [rbp + 32]>
new  < scanFormat$355:>

4598:
old  <	add rax, 8>
new  <	; IntegralToIntegral Â£temporary1486 startIndex>

4599:
old  <>
new  <	mov eax, [rbp + 161]>

4600:
old  < scanFormat$365:>
new  <	mov rbx, 4294967295>

4601:
old  <	; IntegralToIntegral Â£temporary1506 Â£temporary1505>
new  <	and rax, rbx>

4603:
old  < scanFormat$366:>
new  < scanFormat$356:>

4604:
old  <	; IntegralToIntegral Â£temporary1507 Â£temporary1506>
new  <	; BinaryAdd Â£temporary1488 format Â£temporary1486>

4605:
old  <	mov rbx, 4294967295>
new  <	mov rsi, [rbp + 24]>

4606:
old  <	and rax, rbx>
new  <	add rsi, rax>

4608:
old  < scanFormat$367:>
new  < scanFormat$357:>

4609:
old  <	; Assign arg_list Â£temporary1507>
new  <	; Dereference Â£temporary1485 -> Â£temporary1488 Â£temporary1488 0>

4610:
old  <	mov [rbp + 32], rax>
new  <>

4611:
old  <>
new  < scanFormat$358:>

4612:
old  < scanFormat$368:>
new  <	; Address Â£temporary1489 Â£temporary1485 -> Â£temporary1488>

4613:
old  <	; BinarySubtract Â£temporary1508 arg_list 8>
new  <>

4614:
old  <	mov rsi, [rbp + 32]>
new  < scanFormat$359:>

4615:
old  <	sub rsi, 8>
new  <	; Parameter 197 pointer Â£temporary1489>

4616:
old  <>
new  <	mov [rbp + 197], rsi>

4617:
old  < scanFormat$369:>
new  <>

4618:
old  <	; IntegralToIntegral Â£temporary1510 Â£temporary1508>
new  < scanFormat$360:>

4619:
old  <>
new  <	; Parameter 205 signedint not>

4620:
old  < scanFormat$370:>
new  <	mov eax, [rbp + 157]>

4621:
old  <	; Dereference Â£temporary1511 -> Â£temporary1510 Â£temporary1510 0>
new  <	mov [rbp + 205], eax>

4623:
old  < scanFormat$371:>
new  < scanFormat$361:>

4624:
old  <	; Assign charsPtr Â£temporary1511 -> Â£temporary1510>
new  <	; Call 165 scanPattern 0>

4625:
old  <	mov rax, [rsi]>
new  <	mov qword [rbp + 165], scanFormat$362>

4626:
old  <	mov [rbp + 105], rax>
new  <	mov [rbp + 173], rbp>

4627:
old  <>
new  <	add rbp, 165>

4628:
old  < scanFormat$372:>
new  <	jmp scanPattern>

4629:
old  <	; Dereference Â£temporary1512 -> charsPtr charsPtr 0>
new  <>

4630:
old  <	mov rsi, [rbp + 105]>
new  < scanFormat$362:>

4631:
old  <>
new  <	; PostCall 165>

4632:
old  < scanFormat$373:>
new  <>

4633:
old  <	; Assign Â£temporary1512 -> charsPtr g_inChars>
new  < scanFormat$363:>

4634:
old  <	mov eax, [g_inChars]>
new  <	; Goto 389>

4635:
old  <	mov [rsi], eax>
new  <	jmp scanFormat$389>

4637:
old  < scanFormat$374:>
new  < scanFormat$364:>

4638:
old  <	; Assign percent 0>
new  <	; BinaryAdd Â£temporary1492 arg_list 8>

4639:
old  <	mov dword [rbp + 49], 0>
new  <	mov rax, [rbp + 32]>

4640:
old  <>
new  <	add rax, 8>

4641:
old  < scanFormat$375:>
new  <>

4642:
old  <	; Goto 389>
new  < scanFormat$365:>

4643:
old  <	jmp scanFormat$389>
new  <	; IntegralToIntegral Â£temporary1493 Â£temporary1492>

4645:
old  < scanFormat$376:>
new  < scanFormat$366:>

4646:
old  <	; PreCall 157 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; IntegralToIntegral Â£temporary1494 Â£temporary1493>

4647:
old  <>
new  <	mov rbx, 4294967295>

4648:
old  < scanFormat$377:>
new  <	and rax, rbx>

4649:
old  <	; Parameter 181 pointer "scanFormat c = '%c'\n">
new  <>

4650:
old  <	mov qword [rbp + 181], string_scanFormat20c203D202725c270A#>
new  < scanFormat$367:>

4651:
old  <>
new  <	; Assign arg_list Â£temporary1494>

4652:
old  < scanFormat$378:>
new  <	mov [rbp + 32], rax>

4653:
old  <	; IntegralToIntegral Â£temporary1513 c>
new  <>

4654:
old  <	mov al, [rbp + 40]>
new  < scanFormat$368:>

4655:
old  <	and eax, 255>
new  <	; BinarySubtract Â£temporary1495 arg_list 8>

4656:
old  <	cmp al, 0>
new  <	mov rsi, [rbp + 32]>

4657:
old  <	jge scanFormat$379>
new  <	sub rsi, 8>

4658:
old  <	neg al>
new  <>

4659:
old  <	neg eax>
new  < scanFormat$369:>

4660:
old  <>
new  <	; IntegralToIntegral Â£temporary1497 Â£temporary1495>

4661:
old  < scanFormat$379:>
new  <>

4662:
old  <	; Parameter 189 signedint Â£temporary1513>
new  < scanFormat$370:>

4663:
old  <	mov [rbp + 189], eax>
new  <	; Dereference Â£temporary1498 -> Â£temporary1497 Â£temporary1497 0>

4665:
old  < scanFormat$380:>
new  < scanFormat$371:>

4666:
old  <	; Call 157 printf 4>
new  <	; Assign charsPtr Â£temporary1498 -> Â£temporary1497>

4667:
old  <	mov qword [rbp + 157], scanFormat$381>
new  <	mov rax, [rsi]>

4668:
old  <	mov [rbp + 165], rbp>
new  <	mov [rbp + 105], rax>

4669:
old  <	add rbp, 157>
new  <>

4670:
old  <	mov rdi, rbp>
new  < scanFormat$372:>

4671:
old  <	add rdi, 4>
new  <	; Dereference Â£temporary1499 -> charsPtr charsPtr 0>

4672:
old  <	jmp printf>
new  <	mov rsi, [rbp + 105]>

4674:
old  < scanFormat$381:>
new  < scanFormat$373:>

4675:
old  <	; PostCall 157>
new  <	; Assign Â£temporary1499 -> charsPtr g_inChars>

4676:
old  <>
new  <	mov eax, [g_inChars]>

4677:
old  < scanFormat$382:>
new  <	mov [rsi], eax>

4678:
old  <	; Goto 389>
new  <>

4679:
old  <	jmp scanFormat$389>
new  < scanFormat$374:>

4680:
old  <>
new  <	; Assign percent 0>

4681:
old  < scanFormat$383:>
new  <	mov dword [rbp + 49], 0>

4682:
old  <	; NotEqual 389 c 37>
new  <>

4683:
old  <	cmp byte [rbp + 40], 37>
new  < scanFormat$375:>

4684:
old  <	jne scanFormat$389>
new  <	; Goto 389>

4685:
old  <>
new  <	jmp scanFormat$389>

4686:
old  < scanFormat$384:>
new  <>

4687:
old  <	; Assign percent 1>
new  < scanFormat$376:>

4688:
old  <	mov dword [rbp + 49], 1>
new  <	; PreCall 157 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

4690:
old  < scanFormat$385:>
new  < scanFormat$377:>

4691:
old  <	; Assign shortInt 0>
new  <	; Parameter 181 pointer "scanFormat c = '%c'\n">

4692:
old  <	mov dword [rbp + 53], 0>
new  <	mov qword [rbp + 181], string_scanFormat20c203D202725c270A#>

4694:
old  < scanFormat$386:>
new  < scanFormat$378:>

4695:
old  <	; Assign longIntOrDouble 0>
new  <	; IntegralToIntegral Â£temporary1500 c>

4696:
old  <	mov dword [rbp + 57], 0>
new  <	mov al, [rbp + 40]>

4697:
old  <>
new  <	and eax, 255>

4698:
old  < scanFormat$387:>
new  <	cmp al, 0>

4699:
old  <	; Assign longDouble 0>
new  <	jge scanFormat$379>

4700:
old  <	mov dword [rbp + 61], 0>
new  <	neg al>

4701:
old  <>
new  <	neg eax>

4702:
old  < scanFormat$388:>
new  <>

4703:
old  <	; Assign star 0>
new  < scanFormat$379:>

4704:
old  <	mov dword [rbp + 65], 0>
new  <	; Parameter 189 signedint Â£temporary1500>

4705:
old  <>
new  <	mov [rbp + 189], eax>

4706:
old  < scanFormat$389:>
new  <>

4707:
old  <	; BinaryAdd index index 1>
new  < scanFormat$380:>

4708:
old  <	inc dword [rbp + 93]>
new  <	; Call 157 printf 4>

4709:
old  <>
new  <	mov qword [rbp + 157], scanFormat$381>

4710:
old  < scanFormat$390:>
new  <	mov [rbp + 165], rbp>

4711:
old  <	; Goto 8>
new  <	add rbp, 157>

4712:
old  <	jmp scanFormat$8>
new  <	mov rdi, rbp>

4713:
old  <>
new  <	add rdi, 4>

4714:
old  < scanFormat$391:>
new  <	jmp printf>

4715:
old  <	; Return g_inCount>
new  <>

4716:
old  <	mov ebx, [g_inCount]>
new  < scanFormat$381:>

4717:
old  <	mov rax, [rbp]>
new  <	; PostCall 157>

4718:
old  <	mov rdi, [rbp + 16]>
new  <>

4719:
old  <	mov rbp, [rbp + 8]>
new  < scanFormat$382:>

4720:
old  <	jmp rax>
new  <	; Goto 389>

4721:
old  <>
new  <	jmp scanFormat$389>

4722:
old  < scanFormat$392:>
new  <>

4723:
old  <	; FunctionEnd scanFormat>
new  < scanFormat$383:>

4724:
old  <>
new  <	; NotEqual 389 c 37>

4725:
old  <section .text>
new  <	cmp byte [rbp + 40], 37>

4726:
old  <>
new  <	jne scanFormat$389>

4727:
old  < scanf:>
new  <>

4728:
old  <	; Address Â£temporary1517 format>
new  < scanFormat$384:>

4729:
old  <	mov rsi, rbp>
new  <	; Assign percent 1>

4730:
old  <	add rsi, 24>
new  <	mov dword [rbp + 49], 1>

4732:
old  < scanf$1:>
new  < scanFormat$385:>

4733:
old  <	; IntegralToIntegral Â£temporary1518 Â£temporary1517>
new  <	; Assign shortInt 0>

4734:
old  <>
new  <	mov dword [rbp + 53], 0>

4735:
old  < scanf$2:>
new  <>

4736:
old  <	; BinaryAdd arg_list Â£temporary1518 8>
new  < scanFormat$386:>

4737:
old  <	add rsi, 8>
new  <	; Assign longIntOrDouble 0>

4738:
old  <	mov [rdi + 32], rsi>
new  <	mov dword [rbp + 57], 0>

4740:
old  < scanf$3:>
new  < scanFormat$387:>

4741:
old  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Assign longDouble 0>

4742:
old  <>
new  <	mov dword [rbp + 61], 0>

4743:
old  < scanf$4:>
new  <>

4744:
old  <	; Parameter 64 pointer format>
new  < scanFormat$388:>

4745:
old  <	mov rax, [rbp + 24]>
new  <	; Assign star 0>

4746:
old  <	mov [rdi + 64], rax>
new  <	mov dword [rbp + 65], 0>

4748:
old  < scanf$5:>
new  < scanFormat$389:>

4749:
old  <	; Parameter 72 pointer arg_list>
new  <	; BinaryAdd index index 1>

4750:
old  <	mov rax, [rdi + 32]>
new  <	inc dword [rbp + 93]>

4751:
old  <	mov [rdi + 72], rax>
new  <>

4752:
old  <>
new  < scanFormat$390:>

4753:
old  < scanf$6:>
new  <	; Goto 8>

4754:
old  <	; Call 40 vscanf 0>
new  <	jmp scanFormat$8>

4755:
old  <	mov qword [rdi + 40], scanf$7>
new  <>

4756:
old  <	mov [rdi + 48], rbp>
new  < scanFormat$391:>

4757:
old  <	mov [rdi + 56], rdi>
new  <	; SetReturnValue>

4758:
old  <	add rdi, 40>
new  <>

4759:
old  <	mov rbp, rdi>
new  < scanFormat$392:>

4760:
old  <	jmp vscanf>
new  <	; Return g_inCount>

4761:
old  <>
new  <	mov ebx, [g_inCount]>

4762:
old  < scanf$7:>
new  <	mov rax, [rbp]>

4763:
old  <	; PostCall 40>
new  <	mov rdi, [rbp + 16]>

4764:
old  <>
new  <	mov rbp, [rbp + 8]>

4765:
old  < scanf$8:>
new  <	jmp rax>

4766:
old  <	; GetReturnValue Â£temporary1521>
new  <>

4767:
old  <>
new  < scanFormat$393:>

4768:
old  < scanf$9:>
new  <	; FunctionEnd scanFormat>

4769:
old  <	; Return Â£temporary1521>
new  <>

4770:
old  <	mov rax, [rbp]>
new  <section .text>

4771:
old  <	mov rdi, [rbp + 16]>
new  <>

4772:
old  <	mov rbp, [rbp + 8]>
new  < scanf:>

4773:
old  <	jmp rax>
new  <	; Address Â£temporary1504 format>

4774:
old  <>
new  <	mov rsi, rbp>

4775:
old  < scanf$10:>
new  <	add rsi, 24>

4776:
old  <	; FunctionEnd scanf>
new  <>

4777:
old  <>
new  < scanf$1:>

4778:
old  <section .text>
new  <	; IntegralToIntegral Â£temporary1505 Â£temporary1504>

4780:
old  < vscanf:>
new  < scanf$2:>

4781:
old  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; BinaryAdd arg_list Â£temporary1505 8>

4782:
old  <>
new  <	add rsi, 8>

4783:
old  < vscanf$1:>
new  <	mov [rdi + 32], rsi>

4784:
old  <	; Parameter 64 pointer stdin>
new  <>

4785:
old  <	mov rax, [stdin]>
new  < scanf$3:>

4786:
old  <	mov [rbp + 64], rax>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

4788:
old  < vscanf$2:>
new  < scanf$4:>

4789:
old  <	; Parameter 72 pointer format>
new  <	; Parameter 64 pointer format>

4791:
old  <	mov [rbp + 72], rax>
new  <	mov [rdi + 64], rax>

4793:
old  < vscanf$3:>
new  < scanf$5:>

4794:
old  <	; Parameter 80 pointer arg_list>
new  <	; Parameter 72 pointer arg_list>

4795:
old  <	mov rax, [rbp + 32]>
new  <	mov rax, [rdi + 32]>

4796:
old  <	mov [rbp + 80], rax>
new  <	mov [rdi + 72], rax>

4798:
old  < vscanf$4:>
new  < scanf$6:>

4799:
old  <	; Call 40 vfscanf 0>
new  <	; Call 40 vscanf 0>

4800:
old  <	mov qword [rbp + 40], vscanf$5>
new  <	mov qword [rdi + 40], scanf$7>

4801:
old  <	mov [rbp + 48], rbp>
new  <	mov [rdi + 48], rbp>

4802:
old  <	add rbp, 40>
new  <	mov [rdi + 56], rdi>

4803:
old  <	jmp vfscanf>
new  <	add rdi, 40>

4804:
old  <>
new  <	mov rbp, rdi>

4805:
old  < vscanf$5:>
new  <	jmp vscanf>

4806:
old  <	; PostCall 40>
new  <>

4807:
old  <>
new  < scanf$7:>

4808:
old  < vscanf$6:>
new  <	; PostCall 40>

4809:
old  <	; GetReturnValue Â£temporary1523>
new  <>

4810:
old  <>
new  < scanf$8:>

4811:
old  < vscanf$7:>
new  <	; GetReturnValue Â£temporary1508>

4812:
old  <	; Return Â£temporary1523>
new  <>

4813:
old  <	mov rax, [rbp]>
new  < scanf$9:>

4814:
old  <	mov rdi, [rbp + 16]>
new  <	; SetReturnValue>

4815:
old  <	mov rbp, [rbp + 8]>
new  <>

4816:
old  <	jmp rax>
new  < scanf$10:>

4817:
old  <>
new  <	; Return Â£temporary1508>

4818:
old  < vscanf$8:>
new  <	mov rax, [rbp]>

4819:
old  <	; FunctionEnd vscanf>
new  <	mov rdi, [rbp + 16]>

4820:
old  <>
new  <	mov rbp, [rbp + 8]>

4821:
old  <section .text>
new  <	jmp rax>

4823:
old  < fscanf:>
new  < scanf$11:>

4824:
old  <	; Address Â£temporary1524 format>
new  <	; FunctionEnd scanf>

4825:
old  <	mov rsi, rbp>
new  <>

4826:
old  <	add rsi, 32>
new  <section .text>

4828:
old  < fscanf$1:>
new  < vscanf:>

4829:
old  <	; IntegralToIntegral Â£temporary1525 Â£temporary1524>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

4831:
old  < fscanf$2:>
new  < vscanf$1:>

4832:
old  <	; BinaryAdd arg_list Â£temporary1525 8>
new  <	; Parameter 64 pointer stdin>

4833:
old  <	add rsi, 8>
new  <	mov rax, [stdin]>

4834:
old  <	mov [rdi + 40], rsi>
new  <	mov [rbp + 64], rax>

4836:
old  < fscanf$3:>
new  < vscanf$2:>

4837:
old  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter 72 pointer format>

4838:
old  <>
new  <	mov rax, [rbp + 24]>

4839:
old  < fscanf$4:>
new  <	mov [rbp + 72], rax>

4840:
old  <	; Parameter 72 pointer inStream>
new  <>

4841:
old  <	mov rax, [rbp + 24]>
new  < vscanf$3:>

4842:
old  <	mov [rdi + 72], rax>
new  <	; Parameter 80 pointer arg_list>

4843:
old  <>
new  <	mov rax, [rbp + 32]>

4844:
old  < fscanf$5:>
new  <	mov [rbp + 80], rax>

4845:
old  <	; Parameter 80 pointer format>
new  <>

4846:
old  <	mov rax, [rbp + 32]>
new  < vscanf$4:>

4847:
old  <	mov [rdi + 80], rax>
new  <	; Call 40 vfscanf 0>

4848:
old  <>
new  <	mov qword [rbp + 40], vscanf$5>

4849:
old  < fscanf$6:>
new  <	mov [rbp + 48], rbp>

4850:
old  <	; Parameter 88 pointer arg_list>
new  <	add rbp, 40>

4851:
old  <	mov rax, [rdi + 40]>
new  <	jmp vfscanf>

4852:
old  <	mov [rdi + 88], rax>
new  <>

4853:
old  <>
new  < vscanf$5:>

4854:
old  < fscanf$7:>
new  <	; PostCall 40>

4855:
old  <	; Call 48 vfscanf 0>
new  <>

4856:
old  <	mov qword [rdi + 48], fscanf$8>
new  < vscanf$6:>

4857:
old  <	mov [rdi + 56], rbp>
new  <	; GetReturnValue Â£temporary1510>

4858:
old  <	mov [rdi + 64], rdi>
new  <>

4859:
old  <	add rdi, 48>
new  < vscanf$7:>

4860:
old  <	mov rbp, rdi>
new  <	; SetReturnValue>

4861:
old  <	jmp vfscanf>
new  <>

4862:
old  <>
new  < vscanf$8:>

4863:
old  < fscanf$8:>
new  <	; Return Â£temporary1510>

4864:
old  <	; PostCall 48>
new  <	mov rax, [rbp]>

4865:
old  <>
new  <	mov rdi, [rbp + 16]>

4866:
old  < fscanf$9:>
new  <	mov rbp, [rbp + 8]>

4867:
old  <	; GetReturnValue Â£temporary1528>
new  <	jmp rax>

4869:
old  < fscanf$10:>
new  < vscanf$9:>

4870:
old  <	; Return Â£temporary1528>
new  <	; FunctionEnd vscanf>

4871:
old  <	mov rax, [rbp]>
new  <>

4872:
old  <	mov rdi, [rbp + 16]>
new  <section .text>

4873:
old  <	mov rbp, [rbp + 8]>
new  <>

4874:
old  <	jmp rax>
new  < fscanf:>

4875:
old  <>
new  <	; Address Â£temporary1511 format>

4876:
old  < fscanf$11:>
new  <	mov rsi, rbp>

4877:
old  <	; FunctionEnd fscanf>
new  <	add rsi, 32>

4879:
old  <section .text>
new  < fscanf$1:>

4880:
old  <>
new  <	; IntegralToIntegral Â£temporary1512 Â£temporary1511>

4881:
old  < vfscanf:>
new  <>

4882:
old  <	; Assign g_inStatus 0>
new  < fscanf$2:>

4883:
old  <	mov dword [g_inStatus], 0>
new  <	; BinaryAdd arg_list Â£temporary1512 8>

4884:
old  <>
new  <	add rsi, 8>

4885:
old  < vfscanf$1:>
new  <	mov [rdi + 40], rsi>

4886:
old  <	; IntegralToIntegral Â£temporary1530 inStream>
new  <>

4887:
old  <	mov rax, [rbp + 24]>
new  < fscanf$3:>

4888:
old  <>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

4889:
old  < vfscanf$2:>
new  <>

4890:
old  <	; Assign g_inDevice Â£temporary1530>
new  < fscanf$4:>

4891:
old  <	mov [g_inDevice], rax>
new  <	; Parameter 72 pointer inStream>

4892:
old  <>
new  <	mov rax, [rbp + 24]>

4893:
old  < vfscanf$3:>
new  <	mov [rdi + 72], rax>

4894:
old  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

4895:
old  <>
new  < fscanf$5:>

4896:
old  < vfscanf$4:>
new  <	; Parameter 80 pointer format>

4897:
old  <	; Parameter 72 pointer format>
new  <	mov rax, [rbp + 32]>

4898:
old  <	mov rax, [rbp + 32]>
new  <	mov [rdi + 80], rax>

4899:
old  <	mov [rbp + 72], rax>
new  <>

4900:
old  <>
new  < fscanf$6:>

4901:
old  < vfscanf$5:>
new  <	; Parameter 88 pointer arg_list>

4902:
old  <	; Parameter 80 pointer arg_list>
new  <	mov rax, [rdi + 40]>

4903:
old  <	mov rax, [rbp + 40]>
new  <	mov [rdi + 88], rax>

4904:
old  <	mov [rbp + 80], rax>
new  <>

4905:
old  <>
new  < fscanf$7:>

4906:
old  < vfscanf$6:>
new  <	; Call 48 vfscanf 0>

4907:
old  <	; Call 48 scanFormat 0>
new  <	mov qword [rdi + 48], fscanf$8>

4908:
old  <	mov qword [rbp + 48], vfscanf$7>
new  <	mov [rdi + 56], rbp>

4909:
old  <	mov [rbp + 56], rbp>
new  <	mov [rdi + 64], rdi>

4910:
old  <	add rbp, 48>
new  <	add rdi, 48>

4911:
old  <	jmp scanFormat>
new  <	mov rbp, rdi>

4912:
old  <>
new  <	jmp vfscanf>

4913:
old  < vfscanf$7:>
new  <>

4914:
old  <	; PostCall 48>
new  < fscanf$8:>

4915:
old  <>
new  <	; PostCall 48>

4916:
old  < vfscanf$8:>
new  <>

4917:
old  <	; GetReturnValue Â£temporary1531>
new  < fscanf$9:>

4918:
old  <>
new  <	; GetReturnValue Â£temporary1515>

4919:
old  < vfscanf$9:>
new  <>

4920:
old  <	; Return Â£temporary1531>
new  < fscanf$10:>

4921:
old  <	mov rax, [rbp]>
new  <	; SetReturnValue>

4922:
old  <	mov rdi, [rbp + 16]>
new  <>

4923:
old  <	mov rbp, [rbp + 8]>
new  < fscanf$11:>

4924:
old  <	jmp rax>
new  <	; Return Â£temporary1515>

4925:
old  <>
new  <	mov rax, [rbp]>

4926:
old  < vfscanf$10:>
new  <	mov rdi, [rbp + 16]>

4927:
old  <	; FunctionEnd vfscanf>
new  <	mov rbp, [rbp + 8]>

4928:
old  <>
new  <	jmp rax>

4929:
old  <section .text>
new  <>

4930:
old  <>
new  < fscanf$12:>

4931:
old  < sscanf:>
new  <	; FunctionEnd fscanf>

4932:
old  <	; Address Â£temporary1532 format>
new  <>

4933:
old  <	mov rsi, rbp>
new  <section .text>

4934:
old  <	add rsi, 32>
new  <>

4935:
old  <>
new  < vfscanf:>

4936:
old  < sscanf$1:>
new  <	; Assign g_inStatus 0>

4937:
old  <	; IntegralToIntegral Â£temporary1533 Â£temporary1532>
new  <	mov dword [g_inStatus], 0>

4939:
old  < sscanf$2:>
new  < vfscanf$1:>

4940:
old  <	; BinaryAdd arg_list Â£temporary1533 8>
new  <	; IntegralToIntegral Â£temporary1517 inStream>

4941:
old  <	add rsi, 8>
new  <	mov rax, [rbp + 24]>

4942:
old  <	mov [rdi + 40], rsi>
new  <>

4943:
old  <>
new  < vfscanf$2:>

4944:
old  < sscanf$3:>
new  <	; Assign g_inDevice Â£temporary1517>

4945:
old  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov [g_inDevice], rax>

4947:
old  < sscanf$4:>
new  < vfscanf$3:>

4948:
old  <	; Parameter 72 pointer inString>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

4949:
old  <	mov rax, [rbp + 24]>
new  <>

4950:
old  <	mov [rdi + 72], rax>
new  < vfscanf$4:>

4951:
old  <>
new  <	; Parameter 72 pointer format>

4952:
old  < sscanf$5:>
new  <	mov rax, [rbp + 32]>

4953:
old  <	; Parameter 80 pointer format>
new  <	mov [rbp + 72], rax>

4954:
old  <	mov rax, [rbp + 32]>
new  <>

4955:
old  <	mov [rdi + 80], rax>
new  < vfscanf$5:>

4956:
old  <>
new  <	; Parameter 80 pointer arg_list>

4957:
old  < sscanf$6:>
new  <	mov rax, [rbp + 40]>

4958:
old  <	; Parameter 88 pointer arg_list>
new  <	mov [rbp + 80], rax>

4959:
old  <	mov rax, [rdi + 40]>
new  <>

4960:
old  <	mov [rdi + 88], rax>
new  < vfscanf$6:>

4961:
old  <>
new  <	; Call 48 scanFormat 0>

4962:
old  < sscanf$7:>
new  <	mov qword [rbp + 48], vfscanf$7>

4963:
old  <	; Call 48 vsscanf 0>
new  <	mov [rbp + 56], rbp>

4964:
old  <	mov qword [rdi + 48], sscanf$8>
new  <	add rbp, 48>

4965:
old  <	mov [rdi + 56], rbp>
new  <	jmp scanFormat>

4966:
old  <	mov [rdi + 64], rdi>
new  <>

4967:
old  <	add rdi, 48>
new  < vfscanf$7:>

4968:
old  <	mov rbp, rdi>
new  <	; PostCall 48>

4969:
old  <	jmp vsscanf>
new  <>

4970:
old  <>
new  < vfscanf$8:>

4971:
old  < sscanf$8:>
new  <	; GetReturnValue Â£temporary1518>

4972:
old  <	; PostCall 48>
new  <>

4973:
old  <>
new  < vfscanf$9:>

4974:
old  < sscanf$9:>
new  <	; SetReturnValue>

4975:
old  <	; GetReturnValue Â£temporary1536>
new  <>

4976:
old  <>
new  < vfscanf$10:>

4977:
old  < sscanf$10:>
new  <	; Return Â£temporary1518>

4978:
old  <	; Return Â£temporary1536>
new  <	mov rax, [rbp]>

4979:
old  <	mov rax, [rbp]>
new  <	mov rdi, [rbp + 16]>

4980:
old  <	mov rdi, [rbp + 16]>
new  <	mov rbp, [rbp + 8]>

4981:
old  <	mov rbp, [rbp + 8]>
new  <	jmp rax>

4982:
old  <	jmp rax>
new  <>

4983:
old  <>
new  < vfscanf$11:>

4984:
old  < sscanf$11:>
new  <	; FunctionEnd vfscanf>

4985:
old  <	; FunctionEnd sscanf>
new  <>

4986:
old  <>
new  <section .text>

4987:
old  <section .text>
new  <>

4988:
old  <>
new  < sscanf:>

4989:
old  < vsscanf:>
new  <	; Address Â£temporary1519 format>

4990:
old  <	; Assign g_inStatus 1>
new  <	mov rsi, rbp>

4991:
old  <	mov dword [g_inStatus], 1>
new  <	add rsi, 32>

4993:
old  < vsscanf$1:>
new  < sscanf$1:>

4994:
old  <	; IntegralToIntegral Â£temporary1538 inString>
new  <	; IntegralToIntegral Â£temporary1520 Â£temporary1519>

4995:
old  <	mov rax, [rbp + 24]>
new  <>

4996:
old  <>
new  < sscanf$2:>

4997:
old  < vsscanf$2:>
new  <	; BinaryAdd arg_list Â£temporary1520 8>

4998:
old  <	; Assign g_inDevice Â£temporary1538>
new  <	add rsi, 8>

4999:
old  <	mov [g_inDevice], rax>
new  <	mov [rdi + 40], rsi>

5001:
old  < vsscanf$3:>
new  < sscanf$3:>

5004:
old  < vsscanf$4:>
new  < sscanf$4:>

5005:
old  <	; Parameter 72 pointer format>
new  <	; Parameter 72 pointer inString>

5006:
old  <	mov rax, [rbp + 32]>
new  <	mov rax, [rbp + 24]>

5007:
old  <	mov [rbp + 72], rax>
new  <	mov [rdi + 72], rax>

5009:
old  < vsscanf$5:>
new  < sscanf$5:>

5010:
old  <	; Parameter 80 pointer arg_list>
new  <	; Parameter 80 pointer format>

5011:
old  <	mov rax, [rbp + 40]>
new  <	mov rax, [rbp + 32]>

5012:
old  <	mov [rbp + 80], rax>
new  <	mov [rdi + 80], rax>

5014:
old  < vsscanf$6:>
new  < sscanf$6:>

5015:
old  <	; Call 48 scanFormat 0>
new  <	; Parameter 88 pointer arg_list>

5016:
old  <	mov qword [rbp + 48], vsscanf$7>
new  <	mov rax, [rdi + 40]>

5017:
old  <	mov [rbp + 56], rbp>
new  <	mov [rdi + 88], rax>

5018:
old  <	add rbp, 48>
new  <>

5019:
old  <	jmp scanFormat>
new  < sscanf$7:>

5020:
old  <>
new  <	; Call 48 vsscanf 0>

5021:
old  < vsscanf$7:>
new  <	mov qword [rdi + 48], sscanf$8>

5022:
old  <	; PostCall 48>
new  <	mov [rdi + 56], rbp>

5023:
old  <>
new  <	mov [rdi + 64], rdi>

5024:
old  < vsscanf$8:>
new  <	add rdi, 48>

5025:
old  <	; GetReturnValue Â£temporary1539>
new  <	mov rbp, rdi>

5026:
old  <>
new  <	jmp vsscanf>

5027:
old  < vsscanf$9:>
new  <>

5028:
old  <	; Return Â£temporary1539>
new  < sscanf$8:>

5029:
old  <	mov rax, [rbp]>
new  <	; PostCall 48>

5030:
old  <	mov rdi, [rbp + 16]>
new  <>

5031:
old  <	mov rbp, [rbp + 8]>
new  < sscanf$9:>

5032:
old  <	jmp rax>
new  <	; GetReturnValue Â£temporary1523>

5034:
old  < vsscanf$10:>
new  < sscanf$10:>

5035:
old  <	; FunctionEnd vsscanf>
new  <	; SetReturnValue>

Printf.asm
63:
old  <	; IntegralToIntegral Â£temporary1540 stream>
new  <	; IntegralToIntegral Â£temporary1527 stream>

67:
old  <	; Assign g_outDevice Â£temporary1540>
new  <	; Assign g_outDevice Â£temporary1527>

74:
old  <	; IntegralToIntegral Â£temporary1541 i>
new  <	; IntegralToIntegral Â£temporary1528 i>

82:
old  <	; Parameter 60 signedchar Â£temporary1541>
new  <	; Parameter 60 signedchar Â£temporary1528>

96:
old  <	; Return 1>
new  <	; SetReturnValue>

97:
old  <	mov ebx, 1>
new  <>

98:
old  <	mov rax, [rbp]>
new  < putc$9:>

99:
old  <	mov rdi, [rbp + 16]>
new  <	; Return 1>

100:
old  <	mov rbp, [rbp + 8]>
new  <	mov ebx, 1>

101:
old  <	jmp rax>
new  <	mov rax, [rbp]>

102:
old  <>
new  <	mov rdi, [rbp + 16]>

103:
old  < putc$9:>
new  <	mov rbp, [rbp + 8]>

104:
old  <	; FunctionEnd putc>
new  <	jmp rax>

106:
old  <section .text>
new  < putc$10:>

107:
old  <>
new  <	; FunctionEnd putc>

108:
old  < fputc:>
new  <>

109:
old  <	; Assign g_outStatus 0>
new  <section .text>

110:
old  <	mov dword [g_outStatus], 0>
new  <>

111:
old  <>
new  < fputc:>

112:
old  < fputc$1:>
new  <	; Assign g_outStatus 0>

113:
old  <	; IntegralToIntegral Â£temporary1543 stream>
new  <	mov dword [g_outStatus], 0>

114:
old  <	mov rax, [rbp + 28]>
new  <>

115:
old  <>
new  < fputc$1:>

116:
old  < fputc$2:>
new  <	; IntegralToIntegral Â£temporary1530 stream>

117:
old  <	; Assign g_outDevice Â£temporary1543>
new  <	mov rax, [rbp + 28]>

118:
old  <	mov [g_outDevice], rax>
new  <>

119:
old  <>
new  < fputc$2:>

120:
old  < fputc$3:>
new  <	; Assign g_outDevice Â£temporary1530>

121:
old  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov [g_outDevice], rax>

123:
old  < fputc$4:>
new  < fputc$3:>

124:
old  <	; IntegralToIntegral Â£temporary1544 i>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

125:
old  <	mov eax, [rbp + 24]>
new  <>

126:
old  <	cmp eax, 0>
new  < fputc$4:>

127:
old  <	jge fputc$5>
new  <	; IntegralToIntegral Â£temporary1531 i>

128:
old  <	neg eax>
new  <	mov eax, [rbp + 24]>

129:
old  <	neg al>
new  <	cmp eax, 0>

130:
old  <>
new  <	jge fputc$5>

131:
old  < fputc$5:>
new  <	neg eax>

132:
old  <	; Parameter 60 signedchar Â£temporary1544>
new  <	neg al>

133:
old  <	mov [rbp + 60], al>
new  <>

134:
old  <>
new  < fputc$5:>

135:
old  < fputc$6:>
new  <	; Parameter 60 signedchar Â£temporary1531>

136:
old  <	; Call 36 printChar 0>
new  <	mov [rbp + 60], al>

137:
old  <	mov qword [rbp + 36], fputc$7>
new  <>

138:
old  <	mov [rbp + 44], rbp>
new  < fputc$6:>

139:
old  <	add rbp, 36>
new  <	; Call 36 printChar 0>

140:
old  <	jmp printChar>
new  <	mov qword [rbp + 36], fputc$7>

141:
old  <>
new  <	mov [rbp + 44], rbp>

142:
old  < fputc$7:>
new  <	add rbp, 36>

143:
old  <	; PostCall 36>
new  <	jmp printChar>

145:
old  < fputc$8:>
new  < fputc$7:>

146:
old  <	; Return 1>
new  <	; PostCall 36>

147:
old  <	mov ebx, 1>
new  <>

148:
old  <	mov rax, [rbp]>
new  < fputc$8:>

149:
old  <	mov rdi, [rbp + 16]>
new  <	; SetReturnValue>

150:
old  <	mov rbp, [rbp + 8]>
new  <>

151:
old  <	jmp rax>
new  < fputc$9:>

152:
old  <>
new  <	; Return 1>

153:
old  < fputc$9:>
new  <	mov ebx, 1>

154:
old  <	; FunctionEnd fputc>
new  <	mov rax, [rbp]>

155:
old  <>
new  <	mov rdi, [rbp + 16]>

156:
old  <section .text>
new  <	mov rbp, [rbp + 8]>

157:
old  <>
new  <	jmp rax>

158:
old  < putchar:>
new  <>

159:
old  <	; Assign g_outStatus 0>
new  < fputc$10:>

160:
old  <	mov dword [g_outStatus], 0>
new  <	; FunctionEnd fputc>

162:
old  < putchar$1:>
new  <section .text>

163:
old  <	; IntegralToIntegral Â£temporary1546 stdout>
new  <>

164:
old  <	mov rax, [stdout]>
new  < putchar:>

165:
old  <>
new  <	; Assign g_outStatus 0>

166:
old  < putchar$2:>
new  <	mov dword [g_outStatus], 0>

167:
old  <	; Assign g_outDevice Â£temporary1546>
new  <>

168:
old  <	mov [g_outDevice], rax>
new  < putchar$1:>

169:
old  <>
new  <	; IntegralToIntegral Â£temporary1533 stdout>

170:
old  < putchar$3:>
new  <	mov rax, [stdout]>

171:
old  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

172:
old  <>
new  < putchar$2:>

173:
old  < putchar$4:>
new  <	; Assign g_outDevice Â£temporary1533>

174:
old  <	; IntegralToIntegral Â£temporary1547 i>
new  <	mov [g_outDevice], rax>

175:
old  <	mov eax, [rbp + 24]>
new  <>

176:
old  <	cmp eax, 0>
new  < putchar$3:>

177:
old  <	jge putchar$5>
new  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

178:
old  <	neg eax>
new  <>

179:
old  <	neg al>
new  < putchar$4:>

180:
old  <>
new  <	; IntegralToIntegral Â£temporary1534 i>

181:
old  < putchar$5:>
new  <	mov eax, [rbp + 24]>

182:
old  <	; Parameter 52 signedchar Â£temporary1547>
new  <	cmp eax, 0>

183:
old  <	mov [rbp + 52], al>
new  <	jge putchar$5>

184:
old  <>
new  <	neg eax>

185:
old  < putchar$6:>
new  <	neg al>

186:
old  <	; Call 28 printChar 0>
new  <>

187:
old  <	mov qword [rbp + 28], putchar$7>
new  < putchar$5:>

188:
old  <	mov [rbp + 36], rbp>
new  <	; Parameter 52 signedchar Â£temporary1534>

189:
old  <	add rbp, 28>
new  <	mov [rbp + 52], al>

190:
old  <	jmp printChar>
new  <>

191:
old  <>
new  < putchar$6:>

192:
old  < putchar$7:>
new  <	; Call 28 printChar 0>

193:
old  <	; PostCall 28>
new  <	mov qword [rbp + 28], putchar$7>

194:
old  <>
new  <	mov [rbp + 36], rbp>

195:
old  < putchar$8:>
new  <	add rbp, 28>

196:
old  <	; Return 1>
new  <	jmp printChar>

197:
old  <	mov ebx, 1>
new  <>

198:
old  <	mov rax, [rbp]>
new  < putchar$7:>

199:
old  <	mov rdi, [rbp + 16]>
new  <	; PostCall 28>

200:
old  <	mov rbp, [rbp + 8]>
new  <>

201:
old  <	jmp rax>
new  < putchar$8:>

202:
old  <>
new  <	; SetReturnValue>

203:
old  < putchar$9:>
new  <>

204:
old  <	; FunctionEnd putchar>
new  < putchar$9:>

205:
old  <>
new  <	; Return 1>

206:
old  <section .text>
new  <	mov ebx, 1>

207:
old  <>
new  <	mov rax, [rbp]>

208:
old  < printChar:>
new  <	mov rdi, [rbp + 16]>

209:
old  <	; Case 5 g_outStatus 0>
new  <	mov rbp, [rbp + 8]>

210:
old  <	mov eax, [g_outStatus]>
new  <	jmp rax>

211:
old  <	cmp eax, 0>
new  <>

212:
old  <	je printChar$5>
new  < putchar$10:>

213:
old  <>
new  <	; FunctionEnd putchar>

214:
old  < printChar$1:>
new  <>

215:
old  <	; Case 18 g_outStatus 1>
new  <section .text>

216:
old  <	cmp eax, 1>
new  <>

217:
old  <	je printChar$18>
new  < printChar:>

218:
old  <>
new  <	; Case 5 g_outStatus 0>

219:
old  < printChar$2:>
new  <	mov eax, [g_outStatus]>

220:
old  <	; Case 27 g_outStatus 2>
new  <	cmp eax, 0>

221:
old  <	cmp eax, 2>
new  <	je printChar$5>

222:
old  <	je printChar$27>
new  <>

223:
old  <>
new  < printChar$1:>

224:
old  < printChar$3:>
new  <	; Case 18 g_outStatus 1>

225:
old  <	; CaseEnd g_outStatus>
new  <	cmp eax, 1>

226:
old  <>
new  <	je printChar$18>

227:
old  < printChar$4:>
new  <>

228:
old  <	; Goto 28>
new  < printChar$2:>

229:
old  <	jmp printChar$28>
new  <	; Case 27 g_outStatus 2>

230:
old  <>
new  <	cmp eax, 2>

231:
old  < printChar$5:>
new  <	je printChar$27>

232:
old  <	; IntegralToIntegral Â£temporary1549 g_outDevice>
new  <>

233:
old  <	mov rax, [g_outDevice]>
new  < printChar$3:>

234:
old  <>
new  <	; CaseEnd g_outStatus>

235:
old  < printChar$6:>
new  <>

236:
old  <	; Assign stream Â£temporary1549>
new  < printChar$4:>

237:
old  <	mov [rbp + 37], rax>
new  <	; Goto 28>

238:
old  <>
new  <	jmp printChar$28>

239:
old  < printChar$7:>
new  <>

240:
old  <	; AssignRegister rax 1>
new  < printChar$5:>

241:
old  <	mov rax, 1>
new  <	; IntegralToIntegral Â£temporary1536 g_outDevice>

242:
old  <>
new  <	mov rax, [g_outDevice]>

243:
old  < printChar$8:>
new  <>

244:
old  <	; Dereference Â£temporary1552 -> stream stream 0>
new  < printChar$6:>

245:
old  <	mov rsi, [rbp + 37]>
new  <	; Assign stream Â£temporary1536>

246:
old  <>
new  <	mov [rbp + 37], rax>

247:
old  < printChar$9:>
new  <>

248:
old  <	; IntegralToIntegral Â£temporary1553 Â£temporary1552 -> stream>
new  < printChar$7:>

249:
old  <	mov edi, [rsi + 4]>
new  <	; AssignRegister rax 1>

250:
old  <	mov rbx, 4294967295>
new  <	mov rax, 1>

251:
old  <	and rdi, rbx>
new  <>

252:
old  <>
new  < printChar$8:>

253:
old  < printChar$10:>
new  <	; Dereference Â£temporary1539 -> stream stream 0>

254:
old  <	; AssignRegister rdi Â£temporary1553>
new  <	mov rsi, [rbp + 37]>

256:
old  < printChar$11:>
new  < printChar$9:>

257:
old  <	; Address Â£temporary1555 c>
new  <	; IntegralToIntegral Â£temporary1540 Â£temporary1539 -> stream>

258:
old  <	mov rsi, rbp>
new  <	mov edi, [rsi + 4]>

259:
old  <	add rsi, 24>
new  <	mov rbx, 4294967295>

260:
old  <>
new  <	and rdi, rbx>

261:
old  < printChar$12:>
new  <>

262:
old  <	; IntegralToIntegral Â£temporary1556 Â£temporary1555>
new  < printChar$10:>

263:
old  <>
new  <	; AssignRegister rdi Â£temporary1540>

264:
old  < printChar$13:>
new  <>

265:
old  <	; AssignRegister rsi Â£temporary1556>
new  < printChar$11:>

266:
old  <>
new  <	; Address Â£temporary1542 c>

267:
old  < printChar$14:>
new  <	mov rsi, rbp>

268:
old  <	; AssignRegister rdx 1>
new  <	add rsi, 24>

269:
old  <	mov rdx, 1>
new  <>

270:
old  <>
new  < printChar$12:>

271:
old  < printChar$15:>
new  <	; IntegralToIntegral Â£temporary1543 Â£temporary1542>

272:
old  <	; SysCall>
new  <>

273:
old  <	syscall>
new  < printChar$13:>

274:
old  <>
new  <	; AssignRegister rsi Â£temporary1543>

275:
old  < printChar$16:>
new  <>

276:
old  <	; BinaryAdd g_outChars g_outChars 1>
new  < printChar$14:>

277:
old  <	inc dword [g_outChars]>
new  <	; AssignRegister rdx 1>

278:
old  <>
new  <	mov rdx, 1>

279:
old  < printChar$17:>
new  <>

280:
old  <	; Goto 28>
new  < printChar$15:>

281:
old  <	jmp printChar$28>
new  <	; SysCall>

282:
old  <>
new  <	syscall>

283:
old  < printChar$18:>
new  <>

284:
old  <	; IntegralToIntegral Â£temporary1559 g_outDevice>
new  < printChar$16:>

285:
old  <	mov rax, [g_outDevice]>
new  <	; BinaryAdd g_outChars g_outChars 1>

286:
old  <>
new  <	inc dword [g_outChars]>

287:
old  < printChar$19:>
new  <>

288:
old  <	; Assign outString Â£temporary1559>
new  < printChar$17:>

289:
old  <	mov [rbp + 29], rax>
new  <	; Goto 28>

290:
old  <>
new  <	jmp printChar$28>

291:
old  < printChar$20:>
new  <>

292:
old  <	; Assign Â£temporary1560 g_outChars>
new  < printChar$18:>

293:
old  <	mov eax, [g_outChars]>
new  <	; IntegralToIntegral Â£temporary1546 g_outDevice>

294:
old  <>
new  <	mov rax, [g_outDevice]>

295:
old  < printChar$21:>
new  <>

296:
old  <	; BinaryAdd g_outChars g_outChars 1>
new  < printChar$19:>

297:
old  <	inc dword [g_outChars]>
new  <	; Assign outString Â£temporary1546>

298:
old  <>
new  <	mov [rbp + 29], rax>

299:
old  < printChar$22:>
new  <>

300:
old  <	; IntegralToIntegral Â£temporary1562 Â£temporary1560>
new  < printChar$20:>

301:
old  <	mov rbx, 4294967295>
new  <	; Assign Â£temporary1547 g_outChars>

302:
old  <	and rax, rbx>
new  <	mov eax, [g_outChars]>

304:
old  < printChar$23:>
new  < printChar$21:>

305:
old  <	; BinaryAdd Â£temporary1564 outString Â£temporary1562>
new  <	; BinaryAdd g_outChars g_outChars 1>

306:
old  <	mov rsi, [rbp + 29]>
new  <	inc dword [g_outChars]>

307:
old  <	add rsi, rax>
new  <>

308:
old  <>
new  < printChar$22:>

309:
old  < printChar$24:>
new  <	; IntegralToIntegral Â£temporary1549 Â£temporary1547>

310:
old  <	; Dereference Â£temporary1561 -> Â£temporary1564 Â£temporary1564 0>
new  <	mov rbx, 4294967295>

311:
old  <>
new  <	and rax, rbx>

312:
old  < printChar$25:>
new  <>

313:
old  <	; Assign Â£temporary1561 -> Â£temporary1564 c>
new  < printChar$23:>

314:
old  <	mov al, [rbp + 24]>
new  <	; BinaryAdd Â£temporary1551 outString Â£temporary1549>

315:
old  <	mov [rsi], al>
new  <	mov rsi, [rbp + 29]>

316:
old  <>
new  <	add rsi, rax>

317:
old  < printChar$26:>
new  <>

318:
old  <	; Goto 28>
new  < printChar$24:>

319:
old  <	jmp printChar$28>
new  <	; Dereference Â£temporary1548 -> Â£temporary1551 Â£temporary1551 0>

321:
old  < printChar$27:>
new  < printChar$25:>

322:
old  <	; BinaryAdd g_outChars g_outChars 1>
new  <	; Assign Â£temporary1548 -> Â£temporary1551 c>

323:
old  <	inc dword [g_outChars]>
new  <	mov al, [rbp + 24]>

324:
old  <>
new  <	mov [rsi], al>

325:
old  < printChar$28:>
new  <>

326:
old  <	; Return>
new  < printChar$26:>

327:
old  <	mov rax, [rbp]>
new  <	; Goto 28>

328:
old  <	mov rdi, [rbp + 16]>
new  <	jmp printChar$28>

329:
old  <	mov rbp, [rbp + 8]>
new  <>

330:
old  <	jmp rax>
new  < printChar$27:>

331:
old  <>
new  <	; BinaryAdd g_outChars g_outChars 1>

332:
old  < printChar$29:>
new  <	inc dword [g_outChars]>

333:
old  <	; FunctionEnd printChar>
new  <>

334:
old  <>
new  < printChar$28:>

335:
old  <section .text>
new  <	; Return>

336:
old  <>
new  <	mov rax, [rbp]>

337:
old  < printString:>
new  <	mov rdi, [rbp + 16]>

338:
old  <	; Equal 33 s 0>
new  <	mov rbp, [rbp + 8]>

339:
old  <	cmp qword [rbp + 24], 0>
new  <	jmp rax>

340:
old  <	je printString$33>
new  <>

341:
old  <>
new  < printChar$29:>

342:
old  < printString$1:>
new  <	; FunctionEnd printChar>

343:
old  <	; NotEqual 16 precision 0>
new  <>

344:
old  <	cmp dword [rbp + 32], 0>
new  <section .text>

345:
old  <	jne printString$16>
new  <>

346:
old  <>
new  < printString:>

347:
old  < printString$2:>
new  <	; Equal 33 s 0>

348:
old  <	; Assign index 0>
new  <	cmp qword [rbp + 24], 0>

349:
old  <	mov dword [rbp + 36], 0>
new  <	je printString$33>

351:
old  < printString$3:>
new  < printString$1:>

352:
old  <	; IntegralToIntegral Â£temporary1570 index>
new  <	; NotEqual 16 precision 0>

353:
old  <	mov eax, [rbp + 36]>
new  <	cmp dword [rbp + 32], 0>

354:
old  <	mov rbx, 4294967295>
new  <	jne printString$16>

355:
old  <	and rax, rbx>
new  <>

356:
old  <>
new  < printString$2:>

357:
old  < printString$4:>
new  <	; Assign index 0>

358:
old  <	; BinaryAdd Â£temporary1572 s Â£temporary1570>
new  <	mov dword [rbp + 36], 0>

359:
old  <	mov rsi, [rbp + 24]>
new  <>

360:
old  <	add rsi, rax>
new  < printString$3:>

361:
old  <>
new  <	; IntegralToIntegral Â£temporary1557 index>

362:
old  < printString$5:>
new  <	mov eax, [rbp + 36]>

363:
old  <	; Dereference Â£temporary1569 -> Â£temporary1572 Â£temporary1572 0>
new  <	mov rbx, 4294967295>

364:
old  <>
new  <	and rax, rbx>

365:
old  < printString$6:>
new  <>

366:
old  <	; Equal 57 Â£temporary1569 -> Â£temporary1572 0>
new  < printString$4:>

367:
old  <	cmp byte [rsi], 0>
new  <	; BinaryAdd Â£temporary1559 s Â£temporary1557>

368:
old  <	je printString$57>
new  <	mov rsi, [rbp + 24]>

369:
old  <>
new  <	add rsi, rax>

370:
old  < printString$7:>
new  <>

371:
old  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < printString$5:>

372:
old  <>
new  <	; Dereference Â£temporary1556 -> Â£temporary1559 Â£temporary1559 0>

373:
old  < printString$8:>
new  <>

374:
old  <	; IntegralToIntegral Â£temporary1576 index>
new  < printString$6:>

375:
old  <	mov eax, [rbp + 36]>
new  <	; Equal 57 Â£temporary1556 -> Â£temporary1559 0>

376:
old  <	mov rbx, 4294967295>
new  <	cmp byte [rsi], 0>

377:
old  <	and rax, rbx>
new  <	je printString$57>

379:
old  < printString$9:>
new  < printString$7:>

380:
old  <	; BinaryAdd Â£temporary1578 s Â£temporary1576>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

381:
old  <	mov rsi, [rbp + 24]>
new  <>

382:
old  <	add rsi, rax>
new  < printString$8:>

383:
old  <>
new  <	; IntegralToIntegral Â£temporary1563 index>

384:
old  < printString$10:>
new  <	mov eax, [rbp + 36]>

385:
old  <	; Dereference Â£temporary1575 -> Â£temporary1578 Â£temporary1578 0>
new  <	mov rbx, 4294967295>

386:
old  <>
new  <	and rax, rbx>

387:
old  < printString$11:>
new  <>

388:
old  <	; Parameter 64 signedchar Â£temporary1575 -> Â£temporary1578>
new  < printString$9:>

389:
old  <	mov al, [rsi]>
new  <	; BinaryAdd Â£temporary1565 s Â£temporary1563>

390:
old  <	mov [rbp + 64], al>
new  <	mov rsi, [rbp + 24]>

391:
old  <>
new  <	add rsi, rax>

392:
old  < printString$12:>
new  <>

393:
old  <	; Call 40 printChar 0>
new  < printString$10:>

394:
old  <	mov qword [rbp + 40], printString$13>
new  <	; Dereference Â£temporary1562 -> Â£temporary1565 Â£temporary1565 0>

395:
old  <	mov [rbp + 48], rbp>
new  <>

396:
old  <	add rbp, 40>
new  < printString$11:>

397:
old  <	jmp printChar>
new  <	; Parameter 64 signedchar Â£temporary1562 -> Â£temporary1565>

398:
old  <>
new  <	mov al, [rsi]>

399:
old  < printString$13:>
new  <	mov [rbp + 64], al>

400:
old  <	; PostCall 40>
new  <>

401:
old  <>
new  < printString$12:>

402:
old  < printString$14:>
new  <	; Call 40 printChar 0>

403:
old  <	; BinaryAdd index index 1>
new  <	mov qword [rbp + 40], printString$13>

404:
old  <	inc dword [rbp + 36]>
new  <	mov [rbp + 48], rbp>

405:
old  <>
new  <	add rbp, 40>

406:
old  < printString$15:>
new  <	jmp printChar>

407:
old  <	; Goto 3>
new  <>

408:
old  <	jmp printString$3>
new  < printString$13:>

409:
old  <>
new  <	; PostCall 40>

410:
old  < printString$16:>
new  <>

411:
old  <	; Assign index 0>
new  < printString$14:>

412:
old  <	mov dword [rbp + 36], 0>
new  <	; BinaryAdd index index 1>

413:
old  <>
new  <	inc dword [rbp + 36]>

414:
old  < printString$17:>
new  <>

415:
old  <	; Assign Â£temporary1580 precision>
new  < printString$15:>

416:
old  <	mov eax, [rbp + 32]>
new  <	; Goto 3>

417:
old  <>
new  <	jmp printString$3>

418:
old  < printString$18:>
new  <>

419:
old  <	; BinarySubtract precision precision 1>
new  < printString$16:>

420:
old  <	dec dword [rbp + 32]>
new  <	; Assign index 0>

421:
old  <>
new  <	mov dword [rbp + 36], 0>

422:
old  < printString$19:>
new  <>

423:
old  <	; SignedLessThanEqual 57 Â£temporary1580 0>
new  < printString$17:>

424:
old  <	cmp eax, 0>
new  <	; Assign Â£temporary1567 precision>

425:
old  <	jle printString$57>
new  <	mov eax, [rbp + 32]>

427:
old  < printString$20:>
new  < printString$18:>

428:
old  <	; IntegralToIntegral Â£temporary1583 index>
new  <	; BinarySubtract precision precision 1>

429:
old  <	mov eax, [rbp + 36]>
new  <	dec dword [rbp + 32]>

430:
old  <	mov rbx, 4294967295>
new  <>

431:
old  <	and rax, rbx>
new  < printString$19:>

432:
old  <>
new  <	; SignedLessThanEqual 57 Â£temporary1567 0>

433:
old  < printString$21:>
new  <	cmp eax, 0>

434:
old  <	; BinaryAdd Â£temporary1585 s Â£temporary1583>
new  <	jle printString$57>

435:
old  <	mov rsi, [rbp + 24]>
new  <>

436:
old  <	add rsi, rax>
new  < printString$20:>

437:
old  <>
new  <	; IntegralToIntegral Â£temporary1570 index>

438:
old  < printString$22:>
new  <	mov eax, [rbp + 36]>

439:
old  <	; Dereference Â£temporary1582 -> Â£temporary1585 Â£temporary1585 0>
new  <	mov rbx, 4294967295>

440:
old  <>
new  <	and rax, rbx>

441:
old  < printString$23:>
new  <>

442:
old  <	; Equal 57 Â£temporary1582 -> Â£temporary1585 0>
new  < printString$21:>

443:
old  <	cmp byte [rsi], 0>
new  <	; BinaryAdd Â£temporary1572 s Â£temporary1570>

444:
old  <	je printString$57>
new  <	mov rsi, [rbp + 24]>

445:
old  <>
new  <	add rsi, rax>

446:
old  < printString$24:>
new  <>

447:
old  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < printString$22:>

448:
old  <>
new  <	; Dereference Â£temporary1569 -> Â£temporary1572 Â£temporary1572 0>

449:
old  < printString$25:>
new  <>

450:
old  <	; IntegralToIntegral Â£temporary1590 index>
new  < printString$23:>

451:
old  <	mov eax, [rbp + 36]>
new  <	; Equal 57 Â£temporary1569 -> Â£temporary1572 0>

452:
old  <	mov rbx, 4294967295>
new  <	cmp byte [rsi], 0>

453:
old  <	and rax, rbx>
new  <	je printString$57>

455:
old  < printString$26:>
new  < printString$24:>

456:
old  <	; BinaryAdd Â£temporary1592 s Â£temporary1590>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

457:
old  <	mov rsi, [rbp + 24]>
new  <>

458:
old  <	add rsi, rax>
new  < printString$25:>

459:
old  <>
new  <	; IntegralToIntegral Â£temporary1577 index>

460:
old  < printString$27:>
new  <	mov eax, [rbp + 36]>

461:
old  <	; Dereference Â£temporary1589 -> Â£temporary1592 Â£temporary1592 0>
new  <	mov rbx, 4294967295>

462:
old  <>
new  <	and rax, rbx>

463:
old  < printString$28:>
new  <>

464:
old  <	; Parameter 64 signedchar Â£temporary1589 -> Â£temporary1592>
new  < printString$26:>

465:
old  <	mov al, [rsi]>
new  <	; BinaryAdd Â£temporary1579 s Â£temporary1577>

466:
old  <	mov [rbp + 64], al>
new  <	mov rsi, [rbp + 24]>

467:
old  <>
new  <	add rsi, rax>

468:
old  < printString$29:>
new  <>

469:
old  <	; Call 40 printChar 0>
new  < printString$27:>

470:
old  <	mov qword [rbp + 40], printString$30>
new  <	; Dereference Â£temporary1576 -> Â£temporary1579 Â£temporary1579 0>

471:
old  <	mov [rbp + 48], rbp>
new  <>

472:
old  <	add rbp, 40>
new  < printString$28:>

473:
old  <	jmp printChar>
new  <	; Parameter 64 signedchar Â£temporary1576 -> Â£temporary1579>

474:
old  <>
new  <	mov al, [rsi]>

475:
old  < printString$30:>
new  <	mov [rbp + 64], al>

476:
old  <	; PostCall 40>
new  <>

477:
old  <>
new  < printString$29:>

478:
old  < printString$31:>
new  <	; Call 40 printChar 0>

479:
old  <	; BinaryAdd index index 1>
new  <	mov qword [rbp + 40], printString$30>

480:
old  <	inc dword [rbp + 36]>
new  <	mov [rbp + 48], rbp>

481:
old  <>
new  <	add rbp, 40>

482:
old  < printString$32:>
new  <	jmp printChar>

483:
old  <	; Goto 17>
new  <>

484:
old  <	jmp printString$17>
new  < printString$30:>

485:
old  <>
new  <	; PostCall 40>

486:
old  < printString$33:>
new  <>

487:
old  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < printString$31:>

488:
old  <>
new  <	; BinaryAdd index index 1>

489:
old  < printString$34:>
new  <	inc dword [rbp + 36]>

490:
old  <	; Parameter 60 signedchar 60>
new  <>

491:
old  <	mov byte [rbp + 60], 60>
new  < printString$32:>

492:
old  <>
new  <	; Goto 17>

493:
old  < printString$35:>
new  <	jmp printString$17>

494:
old  <	; Call 36 printChar 0>
new  <>

495:
old  <	mov qword [rbp + 36], printString$36>
new  < printString$33:>

496:
old  <	mov [rbp + 44], rbp>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

497:
old  <	add rbp, 36>
new  <>

498:
old  <	jmp printChar>
new  < printString$34:>

499:
old  <>
new  <	; Parameter 60 signedchar 60>

500:
old  < printString$36:>
new  <	mov byte [rbp + 60], 60>

501:
old  <	; PostCall 36>
new  <>

502:
old  <>
new  < printString$35:>

503:
old  < printString$37:>
new  <	; Call 36 printChar 0>

504:
old  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov qword [rbp + 36], printString$36>

505:
old  <>
new  <	mov [rbp + 44], rbp>

506:
old  < printString$38:>
new  <	add rbp, 36>

507:
old  <	; Parameter 60 signedchar 78>
new  <	jmp printChar>

508:
old  <	mov byte [rbp + 60], 78>
new  <>

509:
old  <>
new  < printString$36:>

510:
old  < printString$39:>
new  <	; PostCall 36>

511:
old  <	; Call 36 printChar 0>
new  <>

512:
old  <	mov qword [rbp + 36], printString$40>
new  < printString$37:>

513:
old  <	mov [rbp + 44], rbp>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

514:
old  <	add rbp, 36>
new  <>

515:
old  <	jmp printChar>
new  < printString$38:>

516:
old  <>
new  <	; Parameter 60 signedchar 78>

517:
old  < printString$40:>
new  <	mov byte [rbp + 60], 78>

518:
old  <	; PostCall 36>
new  <>

519:
old  <>
new  < printString$39:>

520:
old  < printString$41:>
new  <	; Call 36 printChar 0>

521:
old  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov qword [rbp + 36], printString$40>

522:
old  <>
new  <	mov [rbp + 44], rbp>

523:
old  < printString$42:>
new  <	add rbp, 36>

524:
old  <	; Parameter 60 signedchar 85>
new  <	jmp printChar>

525:
old  <	mov byte [rbp + 60], 85>
new  <>

526:
old  <>
new  < printString$40:>

527:
old  < printString$43:>
new  <	; PostCall 36>

528:
old  <	; Call 36 printChar 0>
new  <>

529:
old  <	mov qword [rbp + 36], printString$44>
new  < printString$41:>

530:
old  <	mov [rbp + 44], rbp>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

531:
old  <	add rbp, 36>
new  <>

532:
old  <	jmp printChar>
new  < printString$42:>

533:
old  <>
new  <	; Parameter 60 signedchar 85>

534:
old  < printString$44:>
new  <	mov byte [rbp + 60], 85>

535:
old  <	; PostCall 36>
new  <>

536:
old  <>
new  < printString$43:>

537:
old  < printString$45:>
new  <	; Call 36 printChar 0>

538:
old  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov qword [rbp + 36], printString$44>

539:
old  <>
new  <	mov [rbp + 44], rbp>

540:
old  < printString$46:>
new  <	add rbp, 36>

541:
old  <	; Parameter 60 signedchar 76>
new  <	jmp printChar>

542:
old  <	mov byte [rbp + 60], 76>
new  <>

543:
old  <>
new  < printString$44:>

544:
old  < printString$47:>
new  <	; PostCall 36>

545:
old  <	; Call 36 printChar 0>
new  <>

546:
old  <	mov qword [rbp + 36], printString$48>
new  < printString$45:>

547:
old  <	mov [rbp + 44], rbp>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

548:
old  <	add rbp, 36>
new  <>

549:
old  <	jmp printChar>
new  < printString$46:>

550:
old  <>
new  <	; Parameter 60 signedchar 76>

551:
old  < printString$48:>
new  <	mov byte [rbp + 60], 76>

552:
old  <	; PostCall 36>
new  <>

553:
old  <>
new  < printString$47:>

554:
old  < printString$49:>
new  <	; Call 36 printChar 0>

555:
old  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov qword [rbp + 36], printString$48>

556:
old  <>
new  <	mov [rbp + 44], rbp>

557:
old  < printString$50:>
new  <	add rbp, 36>

558:
old  <	; Parameter 60 signedchar 76>
new  <	jmp printChar>

559:
old  <	mov byte [rbp + 60], 76>
new  <>

560:
old  <>
new  < printString$48:>

561:
old  < printString$51:>
new  <	; PostCall 36>

562:
old  <	; Call 36 printChar 0>
new  <>

563:
old  <	mov qword [rbp + 36], printString$52>
new  < printString$49:>

564:
old  <	mov [rbp + 44], rbp>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

565:
old  <	add rbp, 36>
new  <>

566:
old  <	jmp printChar>
new  < printString$50:>

567:
old  <>
new  <	; Parameter 60 signedchar 76>

568:
old  < printString$52:>
new  <	mov byte [rbp + 60], 76>

569:
old  <	; PostCall 36>
new  <>

570:
old  <>
new  < printString$51:>

571:
old  < printString$53:>
new  <	; Call 36 printChar 0>

572:
old  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov qword [rbp + 36], printString$52>

573:
old  <>
new  <	mov [rbp + 44], rbp>

574:
old  < printString$54:>
new  <	add rbp, 36>

575:
old  <	; Parameter 60 signedchar 62>
new  <	jmp printChar>

576:
old  <	mov byte [rbp + 60], 62>
new  <>

577:
old  <>
new  < printString$52:>

578:
old  < printString$55:>
new  <	; PostCall 36>

579:
old  <	; Call 36 printChar 0>
new  <>

580:
old  <	mov qword [rbp + 36], printString$56>
new  < printString$53:>

581:
old  <	mov [rbp + 44], rbp>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

582:
old  <	add rbp, 36>
new  <>

583:
old  <	jmp printChar>
new  < printString$54:>

584:
old  <>
new  <	; Parameter 60 signedchar 62>

585:
old  < printString$56:>
new  <	mov byte [rbp + 60], 62>

586:
old  <	; PostCall 36>
new  <>

587:
old  <>
new  < printString$55:>

588:
old  < printString$57:>
new  <	; Call 36 printChar 0>

589:
old  <	; Return>
new  <	mov qword [rbp + 36], printString$56>

590:
old  <	mov rax, [rbp]>
new  <	mov [rbp + 44], rbp>

591:
old  <	mov rdi, [rbp + 16]>
new  <	add rbp, 36>

592:
old  <	mov rbp, [rbp + 8]>
new  <	jmp printChar>

593:
old  <	jmp rax>
new  <>

594:
old  <>
new  < printString$56:>

595:
old  < printString$58:>
new  <	; PostCall 36>

596:
old  <	; FunctionEnd printString>
new  <>

597:
old  <>
new  < printString$57:>

598:
old  <section .data>
new  <	; Return>

599:
old  <>
new  <	mov rax, [rbp]>

600:
old  <int8$10#:>
new  <	mov rdi, [rbp + 16]>

601:
old  <	; Initializer Signed_Long_Int 10>
new  <	mov rbp, [rbp + 8]>

602:
old  <	dq 10>
new  <	jmp rax>

604:
old  <section .text>
new  < printString$58:>

605:
old  <>
new  <	; FunctionEnd printString>

606:
old  < printLongIntRec:>
new  <>

607:
old  <	; Equal 15 longValue 0>
new  <section .data>

608:
old  <	cmp qword [rbp + 24], 0>
new  <>

609:
old  <	je printLongIntRec$15>
new  <int8$10#:>

610:
old  <>
new  <	; Initializer Signed_Long_Int 10>

611:
old  < printLongIntRec$1:>
new  <	dq 10>

612:
old  <	; SignedModulo Â£temporary1601 longValue 10>
new  <>

613:
old  <	mov rax, [rbp + 24]>
new  <section .text>

614:
old  <	xor rdx, rdx>
new  <>

615:
old  <	idiv qword [int8$10#]>
new  < printLongIntRec:>

616:
old  <>
new  <	; Equal 15 longValue 0>

617:
old  < printLongIntRec$2:>
new  <	cmp qword [rbp + 24], 0>

618:
old  <	; IntegralToIntegral Â£temporary1602 Â£temporary1601>
new  <	je printLongIntRec$15>

619:
old  <	cmp rdx, 0>
new  <>

620:
old  <	jge printLongIntRec$3>
new  < printLongIntRec$1:>

621:
old  <	neg rdx>
new  <	; SignedModulo Â£temporary1588 longValue 10>

622:
old  <	neg edx>
new  <	mov rax, [rbp + 24]>

623:
old  <>
new  <	xor rdx, rdx>

624:
old  < printLongIntRec$3:>
new  <	idiv qword [int8$10#]>

625:
old  <	; Assign digit Â£temporary1602>
new  <>

626:
old  <	mov [rbp + 32], edx>
new  < printLongIntRec$2:>

627:
old  <>
new  <	; IntegralToIntegral Â£temporary1589 Â£temporary1588>

628:
old  < printLongIntRec$4:>
new  <	cmp rdx, 0>

629:
old  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	jge printLongIntRec$3>

630:
old  <>
new  <	neg rdx>

631:
old  < printLongIntRec$5:>
new  <	neg edx>

632:
old  <	; SignedDivide Â£temporary1603 longValue 10>
new  <>

633:
old  <	mov rax, [rbp + 24]>
new  < printLongIntRec$3:>

634:
old  <	xor rdx, rdx>
new  <	; Assign digit Â£temporary1589>

635:
old  <	idiv qword [int8$10#]>
new  <	mov [rbp + 32], edx>

637:
old  < printLongIntRec$6:>
new  < printLongIntRec$4:>

638:
old  <	; Parameter 60 signed long int Â£temporary1603>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

639:
old  <	mov [rbp + 60], rax>
new  <>

640:
old  <>
new  < printLongIntRec$5:>

641:
old  < printLongIntRec$7:>
new  <	; SignedDivide Â£temporary1590 longValue 10>

642:
old  <	; Call 36 printLongIntRec 0>
new  <	mov rax, [rbp + 24]>

643:
old  <	mov qword [rbp + 36], printLongIntRec$8>
new  <	xor rdx, rdx>

644:
old  <	mov [rbp + 44], rbp>
new  <	idiv qword [int8$10#]>

645:
old  <	add rbp, 36>
new  <>

646:
old  <	jmp printLongIntRec>
new  < printLongIntRec$6:>

647:
old  <>
new  <	; Parameter 60 signed long int Â£temporary1590>

648:
old  < printLongIntRec$8:>
new  <	mov [rbp + 60], rax>

649:
old  <	; PostCall 36>
new  <>

650:
old  <>
new  < printLongIntRec$7:>

651:
old  < printLongIntRec$9:>
new  <	; Call 36 printLongIntRec 0>

652:
old  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov qword [rbp + 36], printLongIntRec$8>

653:
old  <>
new  <	mov [rbp + 44], rbp>

654:
old  < printLongIntRec$10:>
new  <	add rbp, 36>

655:
old  <	; BinaryAdd Â£temporary1605 digit 48>
new  <	jmp printLongIntRec>

656:
old  <	mov eax, [rbp + 32]>
new  <>

657:
old  <	add eax, 48>
new  < printLongIntRec$8:>

658:
old  <>
new  <	; PostCall 36>

659:
old  < printLongIntRec$11:>
new  <>

660:
old  <	; IntegralToIntegral Â£temporary1606 Â£temporary1605>
new  < printLongIntRec$9:>

661:
old  <	cmp eax, 0>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

662:
old  <	jge printLongIntRec$12>
new  <>

663:
old  <	neg eax>
new  < printLongIntRec$10:>

664:
old  <	neg al>
new  <	; BinaryAdd Â£temporary1592 digit 48>

665:
old  <>
new  <	mov eax, [rbp + 32]>

666:
old  < printLongIntRec$12:>
new  <	add eax, 48>

667:
old  <	; Parameter 60 signedchar Â£temporary1606>
new  <>

668:
old  <	mov [rbp + 60], al>
new  < printLongIntRec$11:>

669:
old  <>
new  <	; IntegralToIntegral Â£temporary1593 Â£temporary1592>

670:
old  < printLongIntRec$13:>
new  <	cmp eax, 0>

671:
old  <	; Call 36 printChar 0>
new  <	jge printLongIntRec$12>

672:
old  <	mov qword [rbp + 36], printLongIntRec$14>
new  <	neg eax>

673:
old  <	mov [rbp + 44], rbp>
new  <	neg al>

674:
old  <	add rbp, 36>
new  <>

675:
old  <	jmp printChar>
new  < printLongIntRec$12:>

676:
old  <>
new  <	; Parameter 60 signedchar Â£temporary1593>

677:
old  < printLongIntRec$14:>
new  <	mov [rbp + 60], al>

678:
old  <	; PostCall 36>
new  <>

679:
old  <>
new  < printLongIntRec$13:>

680:
old  < printLongIntRec$15:>
new  <	; Call 36 printChar 0>

681:
old  <	; Return>
new  <	mov qword [rbp + 36], printLongIntRec$14>

682:
old  <	mov rax, [rbp]>
new  <	mov [rbp + 44], rbp>

683:
old  <	mov rdi, [rbp + 16]>
new  <	add rbp, 36>

684:
old  <	mov rbp, [rbp + 8]>
new  <	jmp printChar>

685:
old  <	jmp rax>
new  <>

686:
old  <>
new  < printLongIntRec$14:>

687:
old  < printLongIntRec$16:>
new  <	; PostCall 36>

688:
old  <	; FunctionEnd printLongIntRec>
new  <>

689:
old  <>
new  < printLongIntRec$15:>

690:
old  <section .text>
new  <	; Return>

691:
old  <>
new  <	mov rax, [rbp]>

692:
old  < printLongInt:>
new  <	mov rdi, [rbp + 16]>

693:
old  <	; SignedGreaterThanEqual 8 longValue 0>
new  <	mov rbp, [rbp + 8]>

694:
old  <	cmp qword [rbp + 24], 0>
new  <	jmp rax>

695:
old  <	jge printLongInt$8>
new  <>

696:
old  <>
new  < printLongIntRec$16:>

697:
old  < printLongInt$1:>
new  <	; FunctionEnd printLongIntRec>

698:
old  <	; UnarySubtract Â£temporary1609 longValue>
new  <>

699:
old  <	mov rax, [rbp + 24]>
new  <section .text>

700:
old  <	neg rax>
new  <>

701:
old  <>
new  < printLongInt:>

702:
old  < printLongInt$2:>
new  <	; SignedGreaterThanEqual 8 longValue 0>

703:
old  <	; Assign longValue Â£temporary1609>
new  <	cmp qword [rbp + 24], 0>

704:
old  <	mov [rbp + 24], rax>
new  <	jge printLongInt$8>

706:
old  < printLongInt$3:>
new  < printLongInt$1:>

707:
old  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; UnarySubtract Â£temporary1596 longValue>

708:
old  <>
new  <	mov rax, [rbp + 24]>

709:
old  < printLongInt$4:>
new  <	neg rax>

710:
old  <	; Parameter 64 signedchar 45>
new  <>

711:
old  <	mov byte [rbp + 64], 45>
new  < printLongInt$2:>

712:
old  <>
new  <	; Assign longValue Â£temporary1596>

713:
old  < printLongInt$5:>
new  <	mov [rbp + 24], rax>

714:
old  <	; Call 40 printChar 0>
new  <>

715:
old  <	mov qword [rbp + 40], printLongInt$6>
new  < printLongInt$3:>

716:
old  <	mov [rbp + 48], rbp>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

717:
old  <	add rbp, 40>
new  <>

718:
old  <	jmp printChar>
new  < printLongInt$4:>

719:
old  <>
new  <	; Parameter 64 signedchar 45>

720:
old  < printLongInt$6:>
new  <	mov byte [rbp + 64], 45>

721:
old  <	; PostCall 40>
new  <>

722:
old  <>
new  < printLongInt$5:>

723:
old  < printLongInt$7:>
new  <	; Call 40 printChar 0>

724:
old  <	; Goto 19>
new  <	mov qword [rbp + 40], printLongInt$6>

725:
old  <	jmp printLongInt$19>
new  <	mov [rbp + 48], rbp>

726:
old  <>
new  <	add rbp, 40>

727:
old  < printLongInt$8:>
new  <	jmp printChar>

728:
old  <	; Equal 14 space 0>
new  <>

729:
old  <	cmp dword [rbp + 36], 0>
new  < printLongInt$6:>

730:
old  <	je printLongInt$14>
new  <	; PostCall 40>

732:
old  < printLongInt$9:>
new  < printLongInt$7:>

733:
old  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Goto 19>

734:
old  <>
new  <	jmp printLongInt$19>

735:
old  < printLongInt$10:>
new  <>

736:
old  <	; Parameter 64 signedchar 32>
new  < printLongInt$8:>

737:
old  <	mov byte [rbp + 64], 32>
new  <	; Equal 14 space 0>

738:
old  <>
new  <	cmp dword [rbp + 36], 0>

739:
old  < printLongInt$11:>
new  <	je printLongInt$14>

740:
old  <	; Call 40 printChar 0>
new  <>

741:
old  <	mov qword [rbp + 40], printLongInt$12>
new  < printLongInt$9:>

742:
old  <	mov [rbp + 48], rbp>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

743:
old  <	add rbp, 40>
new  <>

744:
old  <	jmp printChar>
new  < printLongInt$10:>

745:
old  <>
new  <	; Parameter 64 signedchar 32>

746:
old  < printLongInt$12:>
new  <	mov byte [rbp + 64], 32>

747:
old  <	; PostCall 40>
new  <>

748:
old  <>
new  < printLongInt$11:>

749:
old  < printLongInt$13:>
new  <	; Call 40 printChar 0>

750:
old  <	; Goto 19>
new  <	mov qword [rbp + 40], printLongInt$12>

751:
old  <	jmp printLongInt$19>
new  <	mov [rbp + 48], rbp>

752:
old  <>
new  <	add rbp, 40>

753:
old  < printLongInt$14:>
new  <	jmp printChar>

754:
old  <	; Equal 19 plus 0>
new  <>

755:
old  <	cmp dword [rbp + 32], 0>
new  < printLongInt$12:>

756:
old  <	je printLongInt$19>
new  <	; PostCall 40>

758:
old  < printLongInt$15:>
new  < printLongInt$13:>

759:
old  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Goto 19>

760:
old  <>
new  <	jmp printLongInt$19>

761:
old  < printLongInt$16:>
new  <>

762:
old  <	; Parameter 64 signedchar 43>
new  < printLongInt$14:>

763:
old  <	mov byte [rbp + 64], 43>
new  <	; Equal 19 plus 0>

764:
old  <>
new  <	cmp dword [rbp + 32], 0>

765:
old  < printLongInt$17:>
new  <	je printLongInt$19>

766:
old  <	; Call 40 printChar 0>
new  <>

767:
old  <	mov qword [rbp + 40], printLongInt$18>
new  < printLongInt$15:>

768:
old  <	mov [rbp + 48], rbp>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

769:
old  <	add rbp, 40>
new  <>

770:
old  <	jmp printChar>
new  < printLongInt$16:>

771:
old  <>
new  <	; Parameter 64 signedchar 43>

772:
old  < printLongInt$18:>
new  <	mov byte [rbp + 64], 43>

773:
old  <	; PostCall 40>
new  <>

774:
old  <>
new  < printLongInt$17:>

775:
old  < printLongInt$19:>
new  <	; Call 40 printChar 0>

776:
old  <	; NotEqual 25 longValue 0>
new  <	mov qword [rbp + 40], printLongInt$18>

777:
old  <	cmp qword [rbp + 24], 0>
new  <	mov [rbp + 48], rbp>

778:
old  <	jne printLongInt$25>
new  <	add rbp, 40>

779:
old  <>
new  <	jmp printChar>

780:
old  < printLongInt$20:>
new  <>

781:
old  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < printLongInt$18:>

782:
old  <>
new  <	; PostCall 40>

783:
old  < printLongInt$21:>
new  <>

784:
old  <	; Parameter 64 signedchar 48>
new  < printLongInt$19:>

785:
old  <	mov byte [rbp + 64], 48>
new  <	; NotEqual 25 longValue 0>

786:
old  <>
new  <	cmp qword [rbp + 24], 0>

787:
old  < printLongInt$22:>
new  <	jne printLongInt$25>

788:
old  <	; Call 40 printChar 0>
new  <>

789:
old  <	mov qword [rbp + 40], printLongInt$23>
new  < printLongInt$20:>

790:
old  <	mov [rbp + 48], rbp>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

791:
old  <	add rbp, 40>
new  <>

792:
old  <	jmp printChar>
new  < printLongInt$21:>

793:
old  <>
new  <	; Parameter 64 signedchar 48>

794:
old  < printLongInt$23:>
new  <	mov byte [rbp + 64], 48>

795:
old  <	; PostCall 40>
new  <>

796:
old  <>
new  < printLongInt$22:>

797:
old  < printLongInt$24:>
new  <	; Call 40 printChar 0>

798:
old  <	; Goto 29>
new  <	mov qword [rbp + 40], printLongInt$23>

799:
old  <	jmp printLongInt$29>
new  <	mov [rbp + 48], rbp>

800:
old  <>
new  <	add rbp, 40>

801:
old  < printLongInt$25:>
new  <	jmp printChar>

802:
old  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

803:
old  <>
new  < printLongInt$23:>

804:
old  < printLongInt$26:>
new  <	; PostCall 40>

805:
old  <	; Parameter 64 signed long int longValue>
new  <>

806:
old  <	mov rax, [rbp + 24]>
new  < printLongInt$24:>

807:
old  <	mov [rbp + 64], rax>
new  <	; Goto 29>

808:
old  <>
new  <	jmp printLongInt$29>

809:
old  < printLongInt$27:>
new  <>

810:
old  <	; Call 40 printLongIntRec 0>
new  < printLongInt$25:>

811:
old  <	mov qword [rbp + 40], printLongInt$28>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

812:
old  <	mov [rbp + 48], rbp>
new  <>

813:
old  <	add rbp, 40>
new  < printLongInt$26:>

814:
old  <	jmp printLongIntRec>
new  <	; Parameter 64 signed long int longValue>

815:
old  <>
new  <	mov rax, [rbp + 24]>

816:
old  < printLongInt$28:>
new  <	mov [rbp + 64], rax>

817:
old  <	; PostCall 40>
new  <>

818:
old  <>
new  < printLongInt$27:>

819:
old  < printLongInt$29:>
new  <	; Call 40 printLongIntRec 0>

820:
old  <	; Return>
new  <	mov qword [rbp + 40], printLongInt$28>

821:
old  <	mov rax, [rbp]>
new  <	mov [rbp + 48], rbp>

822:
old  <	mov rdi, [rbp + 16]>
new  <	add rbp, 40>

823:
old  <	mov rbp, [rbp + 8]>
new  <	jmp printLongIntRec>

824:
old  <	jmp rax>
new  <>

825:
old  <>
new  < printLongInt$28:>

826:
old  < printLongInt$30:>
new  <	; PostCall 40>

827:
old  <	; FunctionEnd printLongInt>
new  <>

828:
old  <>
new  < printLongInt$29:>

829:
old  <section .text>
new  <	; Return>

830:
old  <>
new  <	mov rax, [rbp]>

831:
old  < digitToChar:>
new  <	mov rdi, [rbp + 16]>

832:
old  <	; SignedGreaterThanEqual 4 digit 10>
new  <	mov rbp, [rbp + 8]>

833:
old  <	cmp dword [rbp + 24], 10>
new  <	jmp rax>

834:
old  <	jge digitToChar$4>
new  <>

835:
old  <>
new  < printLongInt$30:>

836:
old  < digitToChar$1:>
new  <	; FunctionEnd printLongInt>

837:
old  <	; BinaryAdd Â£temporary1619 digit 48>
new  <>

838:
old  <	mov ebx, [rbp + 24]>
new  <section .text>

839:
old  <	add ebx, 48>
new  <>

840:
old  <>
new  < digitToChar:>

841:
old  < digitToChar$2:>
new  <	; SignedGreaterThanEqual 5 digit 10>

842:
old  <	; IntegralToIntegral Â£temporary1620 Â£temporary1619>
new  <	cmp dword [rbp + 24], 10>

843:
old  <	cmp ebx, 0>
new  <	jge digitToChar$5>

844:
old  <	jge digitToChar$3>
new  <>

845:
old  <	neg ebx>
new  < digitToChar$1:>

846:
old  <	neg bl>
new  <	; BinaryAdd Â£temporary1606 digit 48>

847:
old  <>
new  <	mov ebx, [rbp + 24]>

848:
old  < digitToChar$3:>
new  <	add ebx, 48>

849:
old  <	; Return Â£temporary1620>
new  <>

850:
old  <	mov rax, [rbp]>
new  < digitToChar$2:>

851:
old  <	mov rdi, [rbp + 16]>
new  <	; IntegralToIntegral Â£temporary1607 Â£temporary1606>

852:
old  <	mov rbp, [rbp + 8]>
new  <	cmp ebx, 0>

853:
old  <	jmp rax>
new  <	jge digitToChar$3>

854:
old  <>
new  <	neg ebx>

855:
old  < digitToChar$4:>
new  <	neg bl>

856:
old  <	; Equal 9 capital 0>
new  <>

857:
old  <	cmp dword [rbp + 28], 0>
new  < digitToChar$3:>

858:
old  <	je digitToChar$9>
new  <	; SetReturnValue>

860:
old  < digitToChar$5:>
new  < digitToChar$4:>

861:
old  <	; BinarySubtract Â£temporary1621 digit 10>
new  <	; Return Â£temporary1607>

862:
old  <	mov ebx, [rbp + 24]>
new  <	mov rax, [rbp]>

863:
old  <	sub ebx, 10>
new  <	mov rdi, [rbp + 16]>

864:
old  <>
new  <	mov rbp, [rbp + 8]>

865:
old  < digitToChar$6:>
new  <	jmp rax>

866:
old  <	; BinaryAdd Â£temporary1622 Â£temporary1621 65>
new  <>

867:
old  <	add ebx, 65>
new  < digitToChar$5:>

868:
old  <>
new  <	; Equal 11 capital 0>

869:
old  < digitToChar$7:>
new  <	cmp dword [rbp + 28], 0>

870:
old  <	; IntegralToIntegral Â£temporary1623 Â£temporary1622>
new  <	je digitToChar$11>

871:
old  <	cmp ebx, 0>
new  <>

872:
old  <	jge digitToChar$8>
new  < digitToChar$6:>

873:
old  <	neg ebx>
new  <	; BinarySubtract Â£temporary1608 digit 10>

874:
old  <	neg bl>
new  <	mov ebx, [rbp + 24]>

875:
old  <>
new  <	sub ebx, 10>

876:
old  < digitToChar$8:>
new  <>

877:
old  <	; Return Â£temporary1623>
new  < digitToChar$7:>

878:
old  <	mov rax, [rbp]>
new  <	; BinaryAdd Â£temporary1609 Â£temporary1608 65>

879:
old  <	mov rdi, [rbp + 16]>
new  <	add ebx, 65>

880:
old  <	mov rbp, [rbp + 8]>
new  <>

881:
old  <	jmp rax>
new  < digitToChar$8:>

882:
old  <>
new  <	; IntegralToIntegral Â£temporary1610 Â£temporary1609>

883:
old  < digitToChar$9:>
new  <	cmp ebx, 0>

884:
old  <	; BinarySubtract Â£temporary1624 digit 10>
new  <	jge digitToChar$9>

885:
old  <	mov ebx, [rbp + 24]>
new  <	neg ebx>

886:
old  <	sub ebx, 10>
new  <	neg bl>

888:
old  < digitToChar$10:>
new  < digitToChar$9:>

889:
old  <	; BinaryAdd Â£temporary1625 Â£temporary1624 97>
new  <	; SetReturnValue>

890:
old  <	add ebx, 97>
new  <>

891:
old  <>
new  < digitToChar$10:>

892:
old  < digitToChar$11:>
new  <	; Return Â£temporary1610>

893:
old  <	; IntegralToIntegral Â£temporary1626 Â£temporary1625>
new  <	mov rax, [rbp]>

894:
old  <	cmp ebx, 0>
new  <	mov rdi, [rbp + 16]>

895:
old  <	jge digitToChar$12>
new  <	mov rbp, [rbp + 8]>

896:
old  <	neg ebx>
new  <	jmp rax>

897:
old  <	neg bl>
new  <>

898:
old  <>
new  < digitToChar$11:>

899:
old  < digitToChar$12:>
new  <	; BinarySubtract Â£temporary1611 digit 10>

900:
old  <	; Return Â£temporary1626>
new  <	mov ebx, [rbp + 24]>

901:
old  <	mov rax, [rbp]>
new  <	sub ebx, 10>

902:
old  <	mov rdi, [rbp + 16]>
new  <>

903:
old  <	mov rbp, [rbp + 8]>
new  < digitToChar$12:>

904:
old  <	jmp rax>
new  <	; BinaryAdd Â£temporary1612 Â£temporary1611 97>

905:
old  <>
new  <	add ebx, 97>

906:
old  < digitToChar$13:>
new  <>

907:
old  <	; FunctionEnd digitToChar>
new  < digitToChar$13:>

908:
old  <>
new  <	; IntegralToIntegral Â£temporary1613 Â£temporary1612>

909:
old  <section .text>
new  <	cmp ebx, 0>

910:
old  <>
new  <	jge digitToChar$14>

911:
old  < printUnsignedLongRec:>
new  <	neg ebx>

912:
old  <	; UnsignedLessThanEqual 22 unsignedValue 0>
new  <	neg bl>

913:
old  <	cmp qword [rbp + 24], 0>
new  <>

914:
old  <	jbe printUnsignedLongRec$22>
new  < digitToChar$14:>

915:
old  <>
new  <	; SetReturnValue>

916:
old  < printUnsignedLongRec$1:>
new  <>

917:
old  <	; UnsignedModulo Â£temporary1629 unsignedValue base>
new  < digitToChar$15:>

918:
old  <	mov rax, [rbp + 24]>
new  <	; Return Â£temporary1613>

919:
old  <	xor rdx, rdx>
new  <	mov rax, [rbp]>

920:
old  <	div qword [rbp + 32]>
new  <	mov rdi, [rbp + 16]>

921:
old  <>
new  <	mov rbp, [rbp + 8]>

922:
old  < printUnsignedLongRec$2:>
new  <	jmp rax>

923:
old  <	; IntegralToIntegral Â£temporary1630 Â£temporary1629>
new  <>

924:
old  <>
new  < digitToChar$16:>

925:
old  < printUnsignedLongRec$3:>
new  <	; FunctionEnd digitToChar>

926:
old  <	; Assign digit Â£temporary1630>
new  <>

927:
old  <	mov [rbp + 44], edx>
new  <section .text>

929:
old  < printUnsignedLongRec$4:>
new  < printUnsignedLongRec:>

930:
old  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; UnsignedLessThanEqual 22 unsignedValue 0>

931:
old  <>
new  <	cmp qword [rbp + 24], 0>

932:
old  < printUnsignedLongRec$5:>
new  <	jbe printUnsignedLongRec$22>

933:
old  <	; UnsignedDivide Â£temporary1631 unsignedValue base>
new  <>

934:
old  <	mov rax, [rbp + 24]>
new  < printUnsignedLongRec$1:>

935:
old  <	xor rdx, rdx>
new  <	; UnsignedModulo Â£temporary1616 unsignedValue base>

936:
old  <	div qword [rbp + 32]>
new  <	mov rax, [rbp + 24]>

937:
old  <>
new  <	xor rdx, rdx>

938:
old  < printUnsignedLongRec$6:>
new  <	div qword [rbp + 32]>

939:
old  <	; Parameter 72 unsignedlongint Â£temporary1631>
new  <>

940:
old  <	mov [rbp + 72], rax>
new  < printUnsignedLongRec$2:>

941:
old  <>
new  <	; IntegralToIntegral Â£temporary1617 Â£temporary1616>

942:
old  < printUnsignedLongRec$7:>
new  <>

943:
old  <	; Parameter 80 unsignedlongint base>
new  < printUnsignedLongRec$3:>

944:
old  <	mov rax, [rbp + 32]>
new  <	; Assign digit Â£temporary1617>

945:
old  <	mov [rbp + 80], rax>
new  <	mov [rbp + 44], edx>

947:
old  < printUnsignedLongRec$8:>
new  < printUnsignedLongRec$4:>

948:
old  <	; Parameter 88 signedint capital>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

949:
old  <	mov eax, [rbp + 40]>
new  <>

950:
old  <	mov [rbp + 88], eax>
new  < printUnsignedLongRec$5:>

951:
old  <>
new  <	; UnsignedDivide Â£temporary1618 unsignedValue base>

952:
old  < printUnsignedLongRec$9:>
new  <	mov rax, [rbp + 24]>

953:
old  <	; Call 48 printUnsignedLongRec 0>
new  <	xor rdx, rdx>

954:
old  <	mov qword [rbp + 48], printUnsignedLongRec$10>
new  <	div qword [rbp + 32]>

955:
old  <	mov [rbp + 56], rbp>
new  <>

956:
old  <	add rbp, 48>
new  < printUnsignedLongRec$6:>

957:
old  <	jmp printUnsignedLongRec>
new  <	; Parameter 72 unsignedlongint Â£temporary1618>

958:
old  <>
new  <	mov [rbp + 72], rax>

959:
old  < printUnsignedLongRec$10:>
new  <>

960:
old  <	; PostCall 48>
new  < printUnsignedLongRec$7:>

961:
old  <>
new  <	; Parameter 80 unsignedlongint base>

962:
old  < printUnsignedLongRec$11:>
new  <	mov rax, [rbp + 32]>

963:
old  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov [rbp + 80], rax>

965:
old  < printUnsignedLongRec$12:>
new  < printUnsignedLongRec$8:>

966:
old  <	; Parameter 72 signedint digit>
new  <	; Parameter 88 signedint capital>

967:
old  <	mov eax, [rbp + 44]>
new  <	mov eax, [rbp + 40]>

968:
old  <	mov [rbp + 72], eax>
new  <	mov [rbp + 88], eax>

970:
old  < printUnsignedLongRec$13:>
new  < printUnsignedLongRec$9:>

971:
old  <	; Parameter 76 signedint capital>
new  <	; Call 48 printUnsignedLongRec 0>

972:
old  <	mov eax, [rbp + 40]>
new  <	mov qword [rbp + 48], printUnsignedLongRec$10>

973:
old  <	mov [rbp + 76], eax>
new  <	mov [rbp + 56], rbp>

974:
old  <>
new  <	add rbp, 48>

975:
old  < printUnsignedLongRec$14:>
new  <	jmp printUnsignedLongRec>

976:
old  <	; Call 48 digitToChar 0>
new  <>

977:
old  <	mov qword [rbp + 48], printUnsignedLongRec$15>
new  < printUnsignedLongRec$10:>

978:
old  <	mov [rbp + 56], rbp>
new  <	; PostCall 48>

979:
old  <	add rbp, 48>
new  <>

980:
old  <	jmp digitToChar>
new  < printUnsignedLongRec$11:>

981:
old  <>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

982:
old  < printUnsignedLongRec$15:>
new  <>

983:
old  <	; PostCall 48>
new  < printUnsignedLongRec$12:>

984:
old  <>
new  <	; Parameter 72 signedint digit>

985:
old  < printUnsignedLongRec$16:>
new  <	mov eax, [rbp + 44]>

986:
old  <	; GetReturnValue Â£temporary1633>
new  <	mov [rbp + 72], eax>

988:
old  < printUnsignedLongRec$17:>
new  < printUnsignedLongRec$13:>

989:
old  <	; Assign c Â£temporary1633>
new  <	; Parameter 76 signedint capital>

990:
old  <	mov [rbp + 48], bl>
new  <	mov eax, [rbp + 40]>

991:
old  <>
new  <	mov [rbp + 76], eax>

992:
old  < printUnsignedLongRec$18:>
new  <>

993:
old  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < printUnsignedLongRec$14:>

994:
old  <>
new  <	; Call 48 digitToChar 0>

995:
old  < printUnsignedLongRec$19:>
new  <	mov qword [rbp + 48], printUnsignedLongRec$15>

996:
old  <	; Parameter 73 signedchar c>
new  <	mov [rbp + 56], rbp>

997:
old  <	mov al, [rbp + 48]>
new  <	add rbp, 48>

998:
old  <	mov [rbp + 73], al>
new  <	jmp digitToChar>

1000:
old  < printUnsignedLongRec$20:>
new  < printUnsignedLongRec$15:>

1001:
old  <	; Call 49 printChar 0>
new  <	; PostCall 48>

1002:
old  <	mov qword [rbp + 49], printUnsignedLongRec$21>
new  <>

1003:
old  <	mov [rbp + 57], rbp>
new  < printUnsignedLongRec$16:>

1004:
old  <	add rbp, 49>
new  <	; GetReturnValue Â£temporary1620>

1005:
old  <	jmp printChar>
new  <>

1006:
old  <>
new  < printUnsignedLongRec$17:>

1007:
old  < printUnsignedLongRec$21:>
new  <	; Assign c Â£temporary1620>

1008:
old  <	; PostCall 49>
new  <	mov [rbp + 48], bl>

1010:
old  < printUnsignedLongRec$22:>
new  < printUnsignedLongRec$18:>

1011:
old  <	; Return>
new  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1012:
old  <	mov rax, [rbp]>
new  <>

1013:
old  <	mov rdi, [rbp + 16]>
new  < printUnsignedLongRec$19:>

1014:
old  <	mov rbp, [rbp + 8]>
new  <	; Parameter 73 signedchar c>

1015:
old  <	jmp rax>
new  <	mov al, [rbp + 48]>

1016:
old  <>
new  <	mov [rbp + 73], al>

1017:
old  < printUnsignedLongRec$23:>
new  <>

1018:
old  <	; FunctionEnd printUnsignedLongRec>
new  < printUnsignedLongRec$20:>

1019:
old  <>
new  <	; Call 49 printChar 0>

1020:
old  <section .text>
new  <	mov qword [rbp + 49], printUnsignedLongRec$21>

1021:
old  <>
new  <	mov [rbp + 57], rbp>

1022:
old  < printUnsignedLong:>
new  <	add rbp, 49>

1023:
old  <	; Equal 5 plus 0>
new  <	jmp printChar>

1024:
old  <	cmp dword [rbp + 32], 0>
new  <>

1025:
old  <	je printUnsignedLong$5>
new  < printUnsignedLongRec$21:>

1026:
old  <>
new  <	; PostCall 49>

1027:
old  < printUnsignedLong$1:>
new  <>

1028:
old  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < printUnsignedLongRec$22:>

1029:
old  <>
new  <	; Return>

1030:
old  < printUnsignedLong$2:>
new  <	mov rax, [rbp]>

1031:
old  <	; Parameter 80 signedchar 43>
new  <	mov rdi, [rbp + 16]>

1032:
old  <	mov byte [rbp + 80], 43>
new  <	mov rbp, [rbp + 8]>

1033:
old  <>
new  <	jmp rax>

1034:
old  < printUnsignedLong$3:>
new  <>

1035:
old  <	; Call 56 printChar 0>
new  < printUnsignedLongRec$23:>

1036:
old  <	mov qword [rbp + 56], printUnsignedLong$4>
new  <	; FunctionEnd printUnsignedLongRec>

1037:
old  <	mov [rbp + 64], rbp>
new  <>

1038:
old  <	add rbp, 56>
new  <section .text>

1039:
old  <	jmp printChar>
new  <>

1040:
old  <>
new  < printUnsignedLong:>

1041:
old  < printUnsignedLong$4:>
new  <	; Equal 5 plus 0>

1042:
old  <	; PostCall 56>
new  <	cmp dword [rbp + 32], 0>

1043:
old  <>
new  <	je printUnsignedLong$5>

1044:
old  < printUnsignedLong$5:>
new  <>

1045:
old  <	; Equal 10 space 0>
new  < printUnsignedLong$1:>

1046:
old  <	cmp dword [rbp + 36], 0>
new  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1047:
old  <	je printUnsignedLong$10>
new  <>

1048:
old  <>
new  < printUnsignedLong$2:>

1049:
old  < printUnsignedLong$6:>
new  <	; Parameter 80 signedchar 43>

1050:
old  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov byte [rbp + 80], 43>

1052:
old  < printUnsignedLong$7:>
new  < printUnsignedLong$3:>

1053:
old  <	; Parameter 80 signedchar 32>
new  <	; Call 56 printChar 0>

1054:
old  <	mov byte [rbp + 80], 32>
new  <	mov qword [rbp + 56], printUnsignedLong$4>

1055:
old  <>
new  <	mov [rbp + 64], rbp>

1056:
old  < printUnsignedLong$8:>
new  <	add rbp, 56>

1057:
old  <	; Call 56 printChar 0>
new  <	jmp printChar>

1058:
old  <	mov qword [rbp + 56], printUnsignedLong$9>
new  <>

1059:
old  <	mov [rbp + 64], rbp>
new  < printUnsignedLong$4:>

1060:
old  <	add rbp, 56>
new  <	; PostCall 56>

1061:
old  <	jmp printChar>
new  <>

1062:
old  <>
new  < printUnsignedLong$5:>

1063:
old  < printUnsignedLong$9:>
new  <	; Equal 10 space 0>

1064:
old  <	; PostCall 56>
new  <	cmp dword [rbp + 36], 0>

1065:
old  <>
new  <	je printUnsignedLong$10>

1066:
old  < printUnsignedLong$10:>
new  <>

1067:
old  <	; Equal 29 grid 0>
new  < printUnsignedLong$6:>

1068:
old  <	cmp dword [rbp + 40], 0>
new  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1069:
old  <	je printUnsignedLong$29>
new  <>

1070:
old  <>
new  < printUnsignedLong$7:>

1071:
old  < printUnsignedLong$11:>
new  <	; Parameter 80 signedchar 32>

1072:
old  <	; NotEqual 16 base 8>
new  <	mov byte [rbp + 80], 32>

1073:
old  <	cmp qword [rbp + 44], 8>
new  <>

1074:
old  <	jne printUnsignedLong$16>
new  < printUnsignedLong$8:>

1075:
old  <>
new  <	; Call 56 printChar 0>

1076:
old  < printUnsignedLong$12:>
new  <	mov qword [rbp + 56], printUnsignedLong$9>

1077:
old  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov [rbp + 64], rbp>

1078:
old  <>
new  <	add rbp, 56>

1079:
old  < printUnsignedLong$13:>
new  <	jmp printChar>

1080:
old  <	; Parameter 80 signedchar 48>
new  <>

1081:
old  <	mov byte [rbp + 80], 48>
new  < printUnsignedLong$9:>

1082:
old  <>
new  <	; PostCall 56>

1083:
old  < printUnsignedLong$14:>
new  <>

1084:
old  <	; Call 56 printChar 0>
new  < printUnsignedLong$10:>

1085:
old  <	mov qword [rbp + 56], printUnsignedLong$15>
new  <	; Equal 29 grid 0>

1086:
old  <	mov [rbp + 64], rbp>
new  <	cmp dword [rbp + 40], 0>

1087:
old  <	add rbp, 56>
new  <	je printUnsignedLong$29>

1088:
old  <	jmp printChar>
new  <>

1089:
old  <>
new  < printUnsignedLong$11:>

1090:
old  < printUnsignedLong$15:>
new  <	; NotEqual 16 base 8>

1091:
old  <	; PostCall 56>
new  <	cmp qword [rbp + 44], 8>

1092:
old  <>
new  <	jne printUnsignedLong$16>

1093:
old  < printUnsignedLong$16:>
new  <>

1094:
old  <	; NotEqual 29 base 16>
new  < printUnsignedLong$12:>

1095:
old  <	cmp qword [rbp + 44], 16>
new  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1096:
old  <	jne printUnsignedLong$29>
new  <>

1097:
old  <>
new  < printUnsignedLong$13:>

1098:
old  < printUnsignedLong$17:>
new  <	; Parameter 80 signedchar 48>

1099:
old  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov byte [rbp + 80], 48>

1101:
old  < printUnsignedLong$18:>
new  < printUnsignedLong$14:>

1102:
old  <	; Parameter 80 signedchar 48>
new  <	; Call 56 printChar 0>

1103:
old  <	mov byte [rbp + 80], 48>
new  <	mov qword [rbp + 56], printUnsignedLong$15>

1104:
old  <>
new  <	mov [rbp + 64], rbp>

1105:
old  < printUnsignedLong$19:>
new  <	add rbp, 56>

1106:
old  <	; Call 56 printChar 0>
new  <	jmp printChar>

1107:
old  <	mov qword [rbp + 56], printUnsignedLong$20>
new  <>

1108:
old  <	mov [rbp + 64], rbp>
new  < printUnsignedLong$15:>

1109:
old  <	add rbp, 56>
new  <	; PostCall 56>

1110:
old  <	jmp printChar>
new  <>

1111:
old  <>
new  < printUnsignedLong$16:>

1112:
old  < printUnsignedLong$20:>
new  <	; NotEqual 29 base 16>

1113:
old  <	; PostCall 56>
new  <	cmp qword [rbp + 44], 16>

1114:
old  <>
new  <	jne printUnsignedLong$29>

1115:
old  < printUnsignedLong$21:>
new  <>

1116:
old  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < printUnsignedLong$17:>

1117:
old  <>
new  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1118:
old  < printUnsignedLong$22:>
new  <>

1119:
old  <	; Equal 25 capital 0>
new  < printUnsignedLong$18:>

1120:
old  <	cmp dword [rbp + 52], 0>
new  <	; Parameter 80 signedchar 48>

1121:
old  <	je printUnsignedLong$25>
new  <	mov byte [rbp + 80], 48>

1123:
old  < printUnsignedLong$23:>
new  < printUnsignedLong$19:>

1124:
old  <	; Assign Â£temporary1644 88>
new  <	; Call 56 printChar 0>

1125:
old  <	mov al, 88>
new  <	mov qword [rbp + 56], printUnsignedLong$20>

1126:
old  <>
new  <	mov [rbp + 64], rbp>

1127:
old  < printUnsignedLong$24:>
new  <	add rbp, 56>

1128:
old  <	; Goto 26>
new  <	jmp printChar>

1129:
old  <	jmp printUnsignedLong$26>
new  <>

1130:
old  <>
new  < printUnsignedLong$20:>

1131:
old  < printUnsignedLong$25:>
new  <	; PostCall 56>

1132:
old  <	; Assign Â£temporary1644 120>
new  <>

1133:
old  <	mov al, 120>
new  < printUnsignedLong$21:>

1134:
old  <>
new  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1135:
old  < printUnsignedLong$26:>
new  <>

1136:
old  <	; Parameter 80 signedchar Â£temporary1644>
new  < printUnsignedLong$22:>

1137:
old  <	mov [rbp + 80], al>
new  <	; Equal 25 capital 0>

1138:
old  <>
new  <	cmp dword [rbp + 52], 0>

1139:
old  < printUnsignedLong$27:>
new  <	je printUnsignedLong$25>

1140:
old  <	; Call 56 printChar 0>
new  <>

1141:
old  <	mov qword [rbp + 56], printUnsignedLong$28>
new  < printUnsignedLong$23:>

1142:
old  <	mov [rbp + 64], rbp>
new  <	; Assign Â£temporary1631 88>

1143:
old  <	add rbp, 56>
new  <	mov al, 88>

1144:
old  <	jmp printChar>
new  <>

1145:
old  <>
new  < printUnsignedLong$24:>

1146:
old  < printUnsignedLong$28:>
new  <	; Goto 26>

1147:
old  <	; PostCall 56>
new  <	jmp printUnsignedLong$26>

1149:
old  < printUnsignedLong$29:>
new  < printUnsignedLong$25:>

1150:
old  <	; NotEqual 35 unsignedValue 0>
new  <	; Assign Â£temporary1631 120>

1151:
old  <	cmp qword [rbp + 24], 0>
new  <	mov al, 120>

1152:
old  <	jne printUnsignedLong$35>
new  <>

1153:
old  <>
new  < printUnsignedLong$26:>

1154:
old  < printUnsignedLong$30:>
new  <	; Parameter 80 signedchar Â£temporary1631>

1155:
old  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov [rbp + 80], al>

1157:
old  < printUnsignedLong$31:>
new  < printUnsignedLong$27:>

1158:
old  <	; Parameter 80 signedchar 48>
new  <	; Call 56 printChar 0>

1159:
old  <	mov byte [rbp + 80], 48>
new  <	mov qword [rbp + 56], printUnsignedLong$28>

1160:
old  <>
new  <	mov [rbp + 64], rbp>

1161:
old  < printUnsignedLong$32:>
new  <	add rbp, 56>

1162:
old  <	; Call 56 printChar 0>
new  <	jmp printChar>

1163:
old  <	mov qword [rbp + 56], printUnsignedLong$33>
new  <>

1164:
old  <	mov [rbp + 64], rbp>
new  < printUnsignedLong$28:>

1165:
old  <	add rbp, 56>
new  <	; PostCall 56>

1166:
old  <	jmp printChar>
new  <>

1167:
old  <>
new  < printUnsignedLong$29:>

1168:
old  < printUnsignedLong$33:>
new  <	; NotEqual 35 unsignedValue 0>

1169:
old  <	; PostCall 56>
new  <	cmp qword [rbp + 24], 0>

1170:
old  <>
new  <	jne printUnsignedLong$35>

1171:
old  < printUnsignedLong$34:>
new  <>

1172:
old  <	; Goto 41>
new  < printUnsignedLong$30:>

1173:
old  <	jmp printUnsignedLong$41>
new  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1175:
old  < printUnsignedLong$35:>
new  < printUnsignedLong$31:>

1176:
old  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter 80 signedchar 48>

1177:
old  <>
new  <	mov byte [rbp + 80], 48>

1178:
old  < printUnsignedLong$36:>
new  <>

1179:
old  <	; Parameter 80 unsignedlongint unsignedValue>
new  < printUnsignedLong$32:>

1180:
old  <	mov rax, [rbp + 24]>
new  <	; Call 56 printChar 0>

1181:
old  <	mov [rbp + 80], rax>
new  <	mov qword [rbp + 56], printUnsignedLong$33>

1182:
old  <>
new  <	mov [rbp + 64], rbp>

1183:
old  < printUnsignedLong$37:>
new  <	add rbp, 56>

1184:
old  <	; Parameter 88 unsignedlongint base>
new  <	jmp printChar>

1185:
old  <	mov rax, [rbp + 44]>
new  <>

1186:
old  <	mov [rbp + 88], rax>
new  < printUnsignedLong$33:>

1187:
old  <>
new  <	; PostCall 56>

1188:
old  < printUnsignedLong$38:>
new  <>

1189:
old  <	; Parameter 96 signedint capital>
new  < printUnsignedLong$34:>

1190:
old  <	mov eax, [rbp + 52]>
new  <	; Goto 41>

1191:
old  <	mov [rbp + 96], eax>
new  <	jmp printUnsignedLong$41>

1193:
old  < printUnsignedLong$39:>
new  < printUnsignedLong$35:>

1194:
old  <	; Call 56 printUnsignedLongRec 0>
new  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1195:
old  <	mov qword [rbp + 56], printUnsignedLong$40>
new  <>

1196:
old  <	mov [rbp + 64], rbp>
new  < printUnsignedLong$36:>

1197:
old  <	add rbp, 56>
new  <	; Parameter 80 unsignedlongint unsignedValue>

1198:
old  <	jmp printUnsignedLongRec>
new  <	mov rax, [rbp + 24]>

1199:
old  <>
new  <	mov [rbp + 80], rax>

1200:
old  < printUnsignedLong$40:>
new  <>

1201:
old  <	; PostCall 56>
new  < printUnsignedLong$37:>

1202:
old  <>
new  <	; Parameter 88 unsignedlongint base>

1203:
old  < printUnsignedLong$41:>
new  <	mov rax, [rbp + 44]>

1204:
old  <	; Return>
new  <	mov [rbp + 88], rax>

1205:
old  <	mov rax, [rbp]>
new  <>

1206:
old  <	mov rdi, [rbp + 16]>
new  < printUnsignedLong$38:>

1207:
old  <	mov rbp, [rbp + 8]>
new  <	; Parameter 96 signedint capital>

1208:
old  <	jmp rax>
new  <	mov eax, [rbp + 52]>

1209:
old  <>
new  <	mov [rbp + 96], eax>

1210:
old  < printUnsignedLong$42:>
new  <>

1211:
old  <	; FunctionEnd printUnsignedLong>
new  < printUnsignedLong$39:>

1212:
old  <>
new  <	; Call 56 printUnsignedLongRec 0>

1213:
old  <section .data>
new  <	mov qword [rbp + 56], printUnsignedLong$40>

1214:
old  <>
new  <	mov [rbp + 64], rbp>

1215:
old  <container8bytes#:>
new  <	add rbp, 56>

1216:
old  <	; InitializerZero 8>
new  <	jmp printUnsignedLongRec>

1217:
old  <	times 8 db 0>
new  <>

1218:
old  <>
new  < printUnsignedLong$40:>

1219:
old  <section .data>
new  <	; PostCall 56>

1221:
old  <float8$10.0#:>
new  < printUnsignedLong$41:>

1222:
old  <	; Initializer LongDouble 10.0>
new  <	; Return>

1223:
old  <	dq 10.0>
new  <	mov rax, [rbp]>

1224:
old  <>
new  <	mov rdi, [rbp + 16]>

1225:
old  <section .data>
new  <	mov rbp, [rbp + 8]>

1226:
old  <>
new  <	jmp rax>

1227:
old  <container4bytes#:>
new  <>

1228:
old  <	; InitializerZero 4>
new  < printUnsignedLong$42:>

1229:
old  <	times 4 db 0>
new  <	; FunctionEnd printUnsignedLong>

1231:
old  <section .text>
new  <section .data>

1233:
old  < printLongDoubleFraction:>
new  <container8bytes#:>

1234:
old  <	; PushFloat longDoubleValue>
new  <	; InitializerZero 8>

1235:
old  <	fld qword [rbp + 24]>
new  <	times 8 db 0>

1237:
old  < printLongDoubleFraction$1:>
new  <section .data>

1238:
old  <	; PushFloat longDoubleValue>
new  <>

1239:
old  <	fld qword [rbp + 24]>
new  <float8$10.0#:>

1240:
old  <>
new  <	; Initializer LongDouble 10.0>

1241:
old  < printLongDoubleFraction$2:>
new  <	dq 10.0>

1242:
old  <	; FloatingToIntegral Â£temporary1650 longDoubleValue>
new  <>

1243:
old  <	fistp qword [container8bytes#]>
new  <section .data>

1244:
old  <	mov rax, [container8bytes#]>
new  <>

1245:
old  <>
new  <container4bytes#:>

1246:
old  < printLongDoubleFraction$3:>
new  <	; InitializerZero 4>

1247:
old  <	; IntegralToFloating Â£temporary1651 Â£temporary1650>
new  <	times 4 db 0>

1248:
old  <	mov [container8bytes#], rax>
new  <>

1249:
old  <	fild qword [container8bytes#]>
new  <section .text>

1251:
old  < printLongDoubleFraction$4:>
new  < printLongDoubleFraction:>

1252:
old  <	; BinarySubtract Â£temporary1652 longDoubleValue Â£temporary1651>
new  <	; PushFloat longDoubleValue>

1253:
old  <	fsub>
new  <	fld qword [rbp + 24]>

1255:
old  < printLongDoubleFraction$5:>
new  < printLongDoubleFraction$1:>

1256:
old  <	; PopFloat longDoubleValue>
new  <	; PushFloat longDoubleValue>

1257:
old  <	fstp qword [rbp + 24]>
new  <	fld qword [rbp + 24]>

1259:
old  < printLongDoubleFraction$6:>
new  < printLongDoubleFraction$2:>

1260:
old  <	; NotEqual 8 precision 0>
new  <	; FloatingToIntegral Â£temporary1637 longDoubleValue>

1261:
old  <	cmp dword [rbp + 36], 0>
new  <	fistp qword [container8bytes#]>

1262:
old  <	jne printLongDoubleFraction$8>
new  <	mov rax, [container8bytes#]>

1264:
old  < printLongDoubleFraction$7:>
new  < printLongDoubleFraction$3:>

1265:
old  <	; Assign precision 6>
new  <	; IntegralToFloating Â£temporary1638 Â£temporary1637>

1266:
old  <	mov dword [rbp + 36], 6>
new  <	mov [container8bytes#], rax>

1267:
old  <>
new  <	fild qword [container8bytes#]>

1268:
old  < printLongDoubleFraction$8:>
new  <>

1269:
old  <	; NotEqual 10 grid 0>
new  < printLongDoubleFraction$4:>

1270:
old  <	cmp dword [rbp + 32], 0>
new  <	; BinarySubtract Â£temporary1639 longDoubleValue Â£temporary1638>

1271:
old  <	jne printLongDoubleFraction$10>
new  <	fsub>

1273:
old  < printLongDoubleFraction$9:>
new  < printLongDoubleFraction$5:>

1274:
old  <	; SignedLessThanEqual 14 precision 0>
new  <	; PopFloat longDoubleValue>

1275:
old  <	cmp dword [rbp + 36], 0>
new  <	fstp qword [rbp + 24]>

1276:
old  <	jle printLongDoubleFraction$14>
new  <>

1277:
old  <>
new  < printLongDoubleFraction$6:>

1278:
old  < printLongDoubleFraction$10:>
new  <	; NotEqual 8 precision 0>

1279:
old  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	cmp dword [rbp + 36], 0>

1280:
old  <>
new  <	jne printLongDoubleFraction$8>

1281:
old  < printLongDoubleFraction$11:>
new  <>

1282:
old  <	; Parameter 64 signedchar 46>
new  < printLongDoubleFraction$7:>

1283:
old  <	mov byte [rbp + 64], 46>
new  <	; Assign precision 6>

1284:
old  <>
new  <	mov dword [rbp + 36], 6>

1285:
old  < printLongDoubleFraction$12:>
new  <>

1286:
old  <	; Call 40 printChar 0>
new  < printLongDoubleFraction$8:>

1287:
old  <	mov qword [rbp + 40], printLongDoubleFraction$13>
new  <	; NotEqual 10 grid 0>

1288:
old  <	mov [rbp + 48], rbp>
new  <	cmp dword [rbp + 32], 0>

1289:
old  <	add rbp, 40>
new  <	jne printLongDoubleFraction$10>

1290:
old  <	jmp printChar>
new  <>

1291:
old  <>
new  < printLongDoubleFraction$9:>

1292:
old  < printLongDoubleFraction$13:>
new  <	; SignedLessThanEqual 14 precision 0>

1293:
old  <	; PostCall 40>
new  <	cmp dword [rbp + 36], 0>

1294:
old  <>
new  <	jle printLongDoubleFraction$14>

1295:
old  < printLongDoubleFraction$14:>
new  <>

1296:
old  <	; Assign Â£temporary1658 precision>
new  < printLongDoubleFraction$10:>

1297:
old  <	mov eax, [rbp + 36]>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1299:
old  < printLongDoubleFraction$15:>
new  < printLongDoubleFraction$11:>

1300:
old  <	; BinarySubtract precision precision 1>
new  <	; Parameter 64 signedchar 46>

1301:
old  <	dec dword [rbp + 36]>
new  <	mov byte [rbp + 64], 46>

1303:
old  < printLongDoubleFraction$16:>
new  < printLongDoubleFraction$12:>

1304:
old  <	; SignedLessThanEqual 35 Â£temporary1658 0>
new  <	; Call 40 printChar 0>

1305:
old  <	cmp eax, 0>
new  <	mov qword [rbp + 40], printLongDoubleFraction$13>

1306:
old  <	jle printLongDoubleFraction$35>
new  <	mov [rbp + 48], rbp>

1307:
old  <>
new  <	add rbp, 40>

1308:
old  < printLongDoubleFraction$17:>
new  <	jmp printChar>

1309:
old  <	; PushFloat 10.0>
new  <>

1310:
old  <	fld qword [float8$10.0#]>
new  < printLongDoubleFraction$13:>

1311:
old  <>
new  <	; PostCall 40>

1312:
old  < printLongDoubleFraction$18:>
new  <>

1313:
old  <	; PushFloat longDoubleValue>
new  < printLongDoubleFraction$14:>

1314:
old  <	fld qword [rbp + 24]>
new  <	; Assign Â£temporary1645 precision>

1315:
old  <>
new  <	mov eax, [rbp + 36]>

1316:
old  < printLongDoubleFraction$19:>
new  <>

1317:
old  <	; SignedMultiply Â£temporary1660 10.0 longDoubleValue>
new  < printLongDoubleFraction$15:>

1318:
old  <	fmul>
new  <	; BinarySubtract precision precision 1>

1319:
old  <>
new  <	dec dword [rbp + 36]>

1320:
old  < printLongDoubleFraction$20:>
new  <>

1321:
old  <	; PopFloat longDoubleValue10>
new  < printLongDoubleFraction$16:>

1322:
old  <	fstp qword [rbp + 40]>
new  <	; SignedLessThanEqual 35 Â£temporary1645 0>

1323:
old  <>
new  <	cmp eax, 0>

1324:
old  < printLongDoubleFraction$21:>
new  <	jle printLongDoubleFraction$35>

1325:
old  <	; PushFloat longDoubleValue10>
new  <>

1326:
old  <	fld qword [rbp + 40]>
new  < printLongDoubleFraction$17:>

1327:
old  <>
new  <	; PushFloat 10.0>

1328:
old  < printLongDoubleFraction$22:>
new  <	fld qword [float8$10.0#]>

1329:
old  <	; FloatingToIntegral Â£temporary1661 longDoubleValue10>
new  <>

1330:
old  <	fistp dword [container4bytes#]>
new  < printLongDoubleFraction$18:>

1331:
old  <	mov eax, [container4bytes#]>
new  <	; PushFloat longDoubleValue>

1332:
old  <>
new  <	fld qword [rbp + 24]>

1333:
old  < printLongDoubleFraction$23:>
new  <>

1334:
old  <	; Assign digitValue Â£temporary1661>
new  < printLongDoubleFraction$19:>

1335:
old  <	mov [rbp + 48], eax>
new  <	; SignedMultiply Â£temporary1647 10.0 longDoubleValue>

1336:
old  <>
new  <	fmul>

1337:
old  < printLongDoubleFraction$24:>
new  <>

1338:
old  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < printLongDoubleFraction$20:>

1339:
old  <>
new  <	; PopFloat longDoubleValue10>

1340:
old  < printLongDoubleFraction$25:>
new  <	fstp qword [rbp + 40]>

1341:
old  <	; BinaryAdd Â£temporary1662 digitValue 48>
new  <>

1342:
old  <	mov eax, [rbp + 48]>
new  < printLongDoubleFraction$21:>

1343:
old  <	add eax, 48>
new  <	; PushFloat longDoubleValue10>

1344:
old  <>
new  <	fld qword [rbp + 40]>

1345:
old  < printLongDoubleFraction$26:>
new  <>

1346:
old  <	; IntegralToIntegral Â£temporary1663 Â£temporary1662>
new  < printLongDoubleFraction$22:>

1347:
old  <	cmp eax, 0>
new  <	; FloatingToIntegral Â£temporary1648 longDoubleValue10>

1348:
old  <	jge printLongDoubleFraction$27>
new  <	fistp dword [container4bytes#]>

1349:
old  <	neg eax>
new  <	mov eax, [container4bytes#]>

1350:
old  <	neg al>
new  <>

1351:
old  <>
new  < printLongDoubleFraction$23:>

1352:
old  < printLongDoubleFraction$27:>
new  <	; Assign digitValue Â£temporary1648>

1353:
old  <	; Parameter 76 signedchar Â£temporary1663>
new  <	mov [rbp + 48], eax>

1354:
old  <	mov [rbp + 76], al>
new  <>

1355:
old  <>
new  < printLongDoubleFraction$24:>

1356:
old  < printLongDoubleFraction$28:>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1357:
old  <	; Call 52 printChar 0>
new  <>

1358:
old  <	mov qword [rbp + 52], printLongDoubleFraction$29>
new  < printLongDoubleFraction$25:>

1359:
old  <	mov [rbp + 60], rbp>
new  <	; BinaryAdd Â£temporary1649 digitValue 48>

1360:
old  <	add rbp, 52>
new  <	mov eax, [rbp + 48]>

1361:
old  <	jmp printChar>
new  <	add eax, 48>

1363:
old  < printLongDoubleFraction$29:>
new  < printLongDoubleFraction$26:>

1364:
old  <	; PostCall 52>
new  <	; IntegralToIntegral Â£temporary1650 Â£temporary1649>

1365:
old  <>
new  <	cmp eax, 0>

1366:
old  < printLongDoubleFraction$30:>
new  <	jge printLongDoubleFraction$27>

1367:
old  <	; PushFloat longDoubleValue10>
new  <	neg eax>

1368:
old  <	fld qword [rbp + 40]>
new  <	neg al>

1370:
old  < printLongDoubleFraction$31:>
new  < printLongDoubleFraction$27:>

1371:
old  <	; IntegralToFloating Â£temporary1665 digitValue>
new  <	; Parameter 76 signedchar Â£temporary1650>

1372:
old  <	fild dword [rbp + 48]>
new  <	mov [rbp + 76], al>

1374:
old  < printLongDoubleFraction$32:>
new  < printLongDoubleFraction$28:>

1375:
old  <	; BinarySubtract Â£temporary1666 longDoubleValue10 Â£temporary1665>
new  <	; Call 52 printChar 0>

1376:
old  <	fsub>
new  <	mov qword [rbp + 52], printLongDoubleFraction$29>

1377:
old  <>
new  <	mov [rbp + 60], rbp>

1378:
old  < printLongDoubleFraction$33:>
new  <	add rbp, 52>

1379:
old  <	; PopFloat longDoubleValue>
new  <	jmp printChar>

1380:
old  <	fstp qword [rbp + 24]>
new  <>

1381:
old  <>
new  < printLongDoubleFraction$29:>

1382:
old  < printLongDoubleFraction$34:>
new  <	; PostCall 52>

1383:
old  <	; Goto 14>
new  <>

1384:
old  <	jmp printLongDoubleFraction$14>
new  < printLongDoubleFraction$30:>

1385:
old  <>
new  <	; PushFloat longDoubleValue10>

1386:
old  < printLongDoubleFraction$35:>
new  <	fld qword [rbp + 40]>

1387:
old  <	; Return>
new  <>

1388:
old  <	mov rax, [rbp]>
new  < printLongDoubleFraction$31:>

1389:
old  <	mov rdi, [rbp + 16]>
new  <	; IntegralToFloating Â£temporary1652 digitValue>

1390:
old  <	mov rbp, [rbp + 8]>
new  <	fild dword [rbp + 48]>

1391:
old  <	jmp rax>
new  <>

1392:
old  <>
new  < printLongDoubleFraction$32:>

1393:
old  < printLongDoubleFraction$36:>
new  <	; BinarySubtract Â£temporary1653 longDoubleValue10 Â£temporary1652>

1394:
old  <	; FunctionEnd printLongDoubleFraction>
new  <	fsub>

1396:
old  <section .text>
new  < printLongDoubleFraction$33:>

1397:
old  <>
new  <	; PopFloat longDoubleValue>

1398:
old  < printLongDoublePlain:>
new  <	fstp qword [rbp + 24]>

1399:
old  <	; PushFloat longDoubleValue>
new  <>

1400:
old  <	fld qword [rbp + 24]>
new  < printLongDoubleFraction$34:>

1401:
old  <>
new  <	; Goto 14>

1402:
old  < printLongDoublePlain$1:>
new  <	jmp printLongDoubleFraction$14>

1403:
old  <	; PushFloat 0.0>
new  <>

1404:
old  <	fldz>
new  < printLongDoubleFraction$35:>

1405:
old  <>
new  <	; Return>

1406:
old  < printLongDoublePlain$2:>
new  <	mov rax, [rbp]>

1407:
old  <	; SignedGreaterThanEqual 12 longDoubleValue 0.0>
new  <	mov rdi, [rbp + 16]>

1408:
old  <	fcompp>
new  <	mov rbp, [rbp + 8]>

1409:
old  <	fstsw ax>
new  <	jmp rax>

1410:
old  <	sahf>
new  <>

1411:
old  <	jbe printLongDoublePlain$12>
new  < printLongDoubleFraction$36:>

1412:
old  <>
new  <	; FunctionEnd printLongDoubleFraction>

1413:
old  < printLongDoublePlain$3:>
new  <>

1414:
old  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <section .text>

1416:
old  < printLongDoublePlain$4:>
new  < printLongDoublePlain:>

1417:
old  <	; Parameter 72 signedchar 45>
new  <	; PushFloat longDoubleValue>

1418:
old  <	mov byte [rbp + 72], 45>
new  <	fld qword [rbp + 24]>

1420:
old  < printLongDoublePlain$5:>
new  < printLongDoublePlain$1:>

1421:
old  <	; Call 48 printChar 0>
new  <	; PushFloat 0.0>

1422:
old  <	mov qword [rbp + 48], printLongDoublePlain$6>
new  <	fldz>

1423:
old  <	mov [rbp + 56], rbp>
new  <>

1424:
old  <	add rbp, 48>
new  < printLongDoublePlain$2:>

1425:
old  <	jmp printChar>
new  <	; SignedGreaterThanEqual 12 longDoubleValue 0.0>

1426:
old  <>
new  <	fcompp>

1427:
old  < printLongDoublePlain$6:>
new  <	fstsw ax>

1428:
old  <	; PostCall 48>
new  <	sahf>

1429:
old  <>
new  <	jbe printLongDoublePlain$12>

1430:
old  < printLongDoublePlain$7:>
new  <>

1431:
old  <	; PushFloat longDoubleValue>
new  < printLongDoublePlain$3:>

1432:
old  <	fld qword [rbp + 24]>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1434:
old  < printLongDoublePlain$8:>
new  < printLongDoublePlain$4:>

1435:
old  <	; UnarySubtract Â£temporary1669 longDoubleValue>
new  <	; Parameter 72 signedchar 45>

1436:
old  <	fchs>
new  <	mov byte [rbp + 72], 45>

1438:
old  < printLongDoublePlain$9:>
new  < printLongDoublePlain$5:>

1439:
old  <	; PopFloat longDoubleValue>
new  <	; Call 48 printChar 0>

1440:
old  <	fstp qword [rbp + 24]>
new  <	mov qword [rbp + 48], printLongDoublePlain$6>

1441:
old  <>
new  <	mov [rbp + 56], rbp>

1442:
old  < printLongDoublePlain$10:>
new  <	add rbp, 48>

1443:
old  <	; Assign plus 0>
new  <	jmp printChar>

1444:
old  <	mov dword [rbp + 32], 0>
new  <>

1445:
old  <>
new  < printLongDoublePlain$6:>

1446:
old  < printLongDoublePlain$11:>
new  <	; PostCall 48>

1447:
old  <	; Assign space 0>
new  <>

1448:
old  <	mov dword [rbp + 36], 0>
new  < printLongDoublePlain$7:>

1449:
old  <>
new  <	; PushFloat longDoubleValue>

1450:
old  < printLongDoublePlain$12:>
new  <	fld qword [rbp + 24]>

1451:
old  <	; PushFloat longDoubleValue>
new  <>

1452:
old  <	fld qword [rbp + 24]>
new  < printLongDoublePlain$8:>

1453:
old  <>
new  <	; UnarySubtract Â£temporary1656 longDoubleValue>

1454:
old  < printLongDoublePlain$13:>
new  <	fchs>

1455:
old  <	; FloatingToIntegral Â£temporary1670 longDoubleValue>
new  <>

1456:
old  <	fistp qword [container8bytes#]>
new  < printLongDoublePlain$9:>

1457:
old  <	mov rax, [container8bytes#]>
new  <	; PopFloat longDoubleValue>

1458:
old  <>
new  <	fstp qword [rbp + 24]>

1459:
old  < printLongDoublePlain$14:>
new  <>

1460:
old  <	; Assign longValue Â£temporary1670>
new  < printLongDoublePlain$10:>

1461:
old  <	mov [rbp + 48], rax>
new  <	; Assign plus 0>

1462:
old  <>
new  <	mov dword [rbp + 32], 0>

1463:
old  < printLongDoublePlain$15:>
new  <>

1464:
old  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < printLongDoublePlain$11:>

1465:
old  <>
new  <	; Assign space 0>

1466:
old  < printLongDoublePlain$16:>
new  <	mov dword [rbp + 36], 0>

1467:
old  <	; Parameter 80 signed long int longValue>
new  <>

1468:
old  <	mov rax, [rbp + 48]>
new  < printLongDoublePlain$12:>

1469:
old  <	mov [rbp + 80], rax>
new  <	; PushFloat longDoubleValue>

1470:
old  <>
new  <	fld qword [rbp + 24]>

1471:
old  < printLongDoublePlain$17:>
new  <>

1472:
old  <	; Parameter 88 signedint plus>
new  < printLongDoublePlain$13:>

1473:
old  <	mov eax, [rbp + 32]>
new  <	; FloatingToIntegral Â£temporary1657 longDoubleValue>

1474:
old  <	mov [rbp + 88], eax>
new  <	fistp qword [container8bytes#]>

1475:
old  <>
new  <	mov rax, [container8bytes#]>

1476:
old  < printLongDoublePlain$18:>
new  <>

1477:
old  <	; Parameter 92 signedint space>
new  < printLongDoublePlain$14:>

1478:
old  <	mov eax, [rbp + 36]>
new  <	; Assign longValue Â£temporary1657>

1479:
old  <	mov [rbp + 92], eax>
new  <	mov [rbp + 48], rax>

1481:
old  < printLongDoublePlain$19:>
new  < printLongDoublePlain$15:>

1482:
old  <	; Call 56 printLongInt 0>
new  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1483:
old  <	mov qword [rbp + 56], printLongDoublePlain$20>
new  <>

1484:
old  <	mov [rbp + 64], rbp>
new  < printLongDoublePlain$16:>

1485:
old  <	add rbp, 56>
new  <	; Parameter 80 signed long int longValue>

1486:
old  <	jmp printLongInt>
new  <	mov rax, [rbp + 48]>

1487:
old  <>
new  <	mov [rbp + 80], rax>

1488:
old  < printLongDoublePlain$20:>
new  <>

1489:
old  <	; PostCall 56>
new  < printLongDoublePlain$17:>

1490:
old  <>
new  <	; Parameter 88 signedint plus>

1491:
old  < printLongDoublePlain$21:>
new  <	mov eax, [rbp + 32]>

1492:
old  <	; PushFloat longDoubleValue>
new  <	mov [rbp + 88], eax>

1493:
old  <	fld qword [rbp + 24]>
new  <>

1494:
old  <>
new  < printLongDoublePlain$18:>

1495:
old  < printLongDoublePlain$22:>
new  <	; Parameter 92 signedint space>

1496:
old  <	; IntegralToFloating Â£temporary1672 longValue>
new  <	mov eax, [rbp + 36]>

1497:
old  <	fild qword [rbp + 48]>
new  <	mov [rbp + 92], eax>

1499:
old  < printLongDoublePlain$23:>
new  < printLongDoublePlain$19:>

1500:
old  <	; BinarySubtract Â£temporary1673 longDoubleValue Â£temporary1672>
new  <	; Call 56 printLongInt 0>

1501:
old  <	fsub>
new  <	mov qword [rbp + 56], printLongDoublePlain$20>

1502:
old  <>
new  <	mov [rbp + 64], rbp>

1503:
old  < printLongDoublePlain$24:>
new  <	add rbp, 56>

1504:
old  <	; PopFloat longDoubleValue>
new  <	jmp printLongInt>

1505:
old  <	fstp qword [rbp + 24]>
new  <>

1506:
old  <>
new  < printLongDoublePlain$20:>

1507:
old  < printLongDoublePlain$25:>
new  <	; PostCall 56>

1508:
old  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1509:
old  <>
new  < printLongDoublePlain$21:>

1510:
old  < printLongDoublePlain$26:>
new  <	; PushFloat longDoubleValue>

1511:
old  <	; PushFloat longDoubleValue>
new  <	fld qword [rbp + 24]>

1512:
old  <	fld qword [rbp + 24]>
new  <>

1513:
old  <>
new  < printLongDoublePlain$22:>

1514:
old  < printLongDoublePlain$27:>
new  <	; IntegralToFloating Â£temporary1659 longValue>

1515:
old  <	; Parameter 80 longdouble longDoubleValue>
new  <	fild qword [rbp + 48]>

1516:
old  <	fstp qword [rbp + 80]>
new  <>

1517:
old  <>
new  < printLongDoublePlain$23:>

1518:
old  < printLongDoublePlain$28:>
new  <	; BinarySubtract Â£temporary1660 longDoubleValue Â£temporary1659>

1519:
old  <	; Parameter 88 signedint grid>
new  <	fsub>

1520:
old  <	mov eax, [rbp + 40]>
new  <>

1521:
old  <	mov [rbp + 88], eax>
new  < printLongDoublePlain$24:>

1522:
old  <>
new  <	; PopFloat longDoubleValue>

1523:
old  < printLongDoublePlain$29:>
new  <	fstp qword [rbp + 24]>

1524:
old  <	; Parameter 92 signedint precision>
new  <>

1525:
old  <	mov eax, [rbp + 44]>
new  < printLongDoublePlain$25:>

1526:
old  <	mov [rbp + 92], eax>
new  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1528:
old  < printLongDoublePlain$30:>
new  < printLongDoublePlain$26:>

1529:
old  <	; Call 56 printLongDoubleFraction 0>
new  <	; PushFloat longDoubleValue>

1530:
old  <	mov qword [rbp + 56], printLongDoublePlain$31>
new  <	fld qword [rbp + 24]>

1531:
old  <	mov [rbp + 64], rbp>
new  <>

1532:
old  <	add rbp, 56>
new  < printLongDoublePlain$27:>

1533:
old  <	jmp printLongDoubleFraction>
new  <	; Parameter 80 longdouble longDoubleValue>

1534:
old  <>
new  <	fstp qword [rbp + 80]>

1535:
old  < printLongDoublePlain$31:>
new  <>

1536:
old  <	; PostCall 56>
new  < printLongDoublePlain$28:>

1537:
old  <>
new  <	; Parameter 88 signedint grid>

1538:
old  < printLongDoublePlain$32:>
new  <	mov eax, [rbp + 40]>

1539:
old  <	; Return>
new  <	mov [rbp + 88], eax>

1540:
old  <	mov rax, [rbp]>
new  <>

1541:
old  <	mov rdi, [rbp + 16]>
new  < printLongDoublePlain$29:>

1542:
old  <	mov rbp, [rbp + 8]>
new  <	; Parameter 92 signedint precision>

1543:
old  <	jmp rax>
new  <	mov eax, [rbp + 44]>

1544:
old  <>
new  <	mov [rbp + 92], eax>

1545:
old  < printLongDoublePlain$33:>
new  <>

1546:
old  <	; FunctionEnd printLongDoublePlain>
new  < printLongDoublePlain$30:>

1547:
old  <>
new  <	; Call 56 printLongDoubleFraction 0>

1548:
old  <section .text>
new  <	mov qword [rbp + 56], printLongDoublePlain$31>

1549:
old  <>
new  <	mov [rbp + 64], rbp>

1550:
old  < printLongDoubleExpo:>
new  <	add rbp, 56>

1551:
old  <	; PushFloat value>
new  <	jmp printLongDoubleFraction>

1552:
old  <	fld qword [rbp + 24]>
new  <>

1553:
old  <>
new  < printLongDoublePlain$31:>

1554:
old  < printLongDoubleExpo$1:>
new  <	; PostCall 56>

1555:
old  <	; PushFloat 0.0>
new  <>

1556:
old  <	fldz>
new  < printLongDoublePlain$32:>

1557:
old  <>
new  <	; Return>

1558:
old  < printLongDoubleExpo$2:>
new  <	mov rax, [rbp]>

1559:
old  <	; NotEqual 27 value 0.0>
new  <	mov rdi, [rbp + 16]>

1560:
old  <	fcompp>
new  <	mov rbp, [rbp + 8]>

1561:
old  <	fstsw ax>
new  <	jmp rax>

1562:
old  <	sahf>
new  <>

1563:
old  <	jne printLongDoubleExpo$27>
new  < printLongDoublePlain$33:>

1564:
old  <>
new  <	; FunctionEnd printLongDoublePlain>

1565:
old  < printLongDoubleExpo$3:>
new  <>

1566:
old  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <section .text>

1568:
old  < printLongDoubleExpo$4:>
new  < printLongDoubleExpo:>

1569:
old  <	; Parameter 76 signedchar 48>
new  <	; PushFloat value>

1570:
old  <	mov byte [rbp + 76], 48>
new  <	fld qword [rbp + 24]>

1572:
old  < printLongDoubleExpo$5:>
new  < printLongDoubleExpo$1:>

1573:
old  <	; Call 52 printChar 0>
new  <	; PushFloat 0.0>

1574:
old  <	mov qword [rbp + 52], printLongDoubleExpo$6>
new  <	fldz>

1575:
old  <	mov [rbp + 60], rbp>
new  <>

1576:
old  <	add rbp, 52>
new  < printLongDoubleExpo$2:>

1577:
old  <	jmp printChar>
new  <	; NotEqual 27 value 0.0>

1578:
old  <>
new  <	fcompp>

1579:
old  < printLongDoubleExpo$6:>
new  <	fstsw ax>

1580:
old  <	; PostCall 52>
new  <	sahf>

1581:
old  <>
new  <	jne printLongDoubleExpo$27>

1582:
old  < printLongDoubleExpo$7:>
new  <>

1583:
old  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < printLongDoubleExpo$3:>

1584:
old  <>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1585:
old  < printLongDoubleExpo$8:>
new  <>

1586:
old  <	; PushFloat 0.0>
new  < printLongDoubleExpo$4:>

1587:
old  <	fldz>
new  <	; Parameter 76 signedchar 48>

1588:
old  <>
new  <	mov byte [rbp + 76], 48>

1589:
old  < printLongDoubleExpo$9:>
new  <>

1590:
old  <	; Parameter 76 longdouble 0.0>
new  < printLongDoubleExpo$5:>

1591:
old  <	fstp qword [rbp + 76]>
new  <	; Call 52 printChar 0>

1592:
old  <>
new  <	mov qword [rbp + 52], printLongDoubleExpo$6>

1593:
old  < printLongDoubleExpo$10:>
new  <	mov [rbp + 60], rbp>

1594:
old  <	; Parameter 84 signedint precision>
new  <	add rbp, 52>

1595:
old  <	mov eax, [rbp + 44]>
new  <	jmp printChar>

1596:
old  <	mov [rbp + 84], eax>
new  <>

1597:
old  <>
new  < printLongDoubleExpo$6:>

1598:
old  < printLongDoubleExpo$11:>
new  <	; PostCall 52>

1599:
old  <	; Parameter 88 signedint grid>
new  <>

1600:
old  <	mov eax, [rbp + 40]>
new  < printLongDoubleExpo$7:>

1601:
old  <	mov [rbp + 88], eax>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1603:
old  < printLongDoubleExpo$12:>
new  < printLongDoubleExpo$8:>

1604:
old  <	; Call 52 printLongDoubleFraction 0>
new  <	; PushFloat 0.0>

1605:
old  <	mov qword [rbp + 52], printLongDoubleExpo$13>
new  <	fldz>

1606:
old  <	mov [rbp + 60], rbp>
new  <>

1607:
old  <	add rbp, 52>
new  < printLongDoubleExpo$9:>

1608:
old  <	jmp printLongDoubleFraction>
new  <	; Parameter 76 longdouble 0.0>

1609:
old  <>
new  <	fstp qword [rbp + 76]>

1610:
old  < printLongDoubleExpo$13:>
new  <>

1611:
old  <	; PostCall 52>
new  < printLongDoubleExpo$10:>

1612:
old  <>
new  <	; Parameter 84 signedint precision>

1613:
old  < printLongDoubleExpo$14:>
new  <	mov eax, [rbp + 44]>

1614:
old  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov [rbp + 84], eax>

1616:
old  < printLongDoubleExpo$15:>
new  < printLongDoubleExpo$11:>

1617:
old  <	; Equal 18 capital 0>
new  <	; Parameter 88 signedint grid>

1618:
old  <	cmp dword [rbp + 48], 0>
new  <	mov eax, [rbp + 40]>

1619:
old  <	je printLongDoubleExpo$18>
new  <	mov [rbp + 88], eax>

1621:
old  < printLongDoubleExpo$16:>
new  < printLongDoubleExpo$12:>

1622:
old  <	; Assign Â£temporary1680 69>
new  <	; Call 52 printLongDoubleFraction 0>

1623:
old  <	mov al, 69>
new  <	mov qword [rbp + 52], printLongDoubleExpo$13>

1624:
old  <>
new  <	mov [rbp + 60], rbp>

1625:
old  < printLongDoubleExpo$17:>
new  <	add rbp, 52>

1626:
old  <	; Goto 19>
new  <	jmp printLongDoubleFraction>

1627:
old  <	jmp printLongDoubleExpo$19>
new  <>

1628:
old  <>
new  < printLongDoubleExpo$13:>

1629:
old  < printLongDoubleExpo$18:>
new  <	; PostCall 52>

1630:
old  <	; Assign Â£temporary1680 101>
new  <>

1631:
old  <	mov al, 101>
new  < printLongDoubleExpo$14:>

1632:
old  <>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1633:
old  < printLongDoubleExpo$19:>
new  <>

1634:
old  <	; Parameter 76 signedchar Â£temporary1680>
new  < printLongDoubleExpo$15:>

1635:
old  <	mov [rbp + 76], al>
new  <	; Equal 18 capital 0>

1636:
old  <>
new  <	cmp dword [rbp + 48], 0>

1637:
old  < printLongDoubleExpo$20:>
new  <	je printLongDoubleExpo$18>

1638:
old  <	; Call 52 printChar 0>
new  <>

1639:
old  <	mov qword [rbp + 52], printLongDoubleExpo$21>
new  < printLongDoubleExpo$16:>

1640:
old  <	mov [rbp + 60], rbp>
new  <	; Assign Â£temporary1667 69>

1641:
old  <	add rbp, 52>
new  <	mov al, 69>

1642:
old  <	jmp printChar>
new  <>

1643:
old  <>
new  < printLongDoubleExpo$17:>

1644:
old  < printLongDoubleExpo$21:>
new  <	; Goto 19>

1645:
old  <	; PostCall 52>
new  <	jmp printLongDoubleExpo$19>

1647:
old  < printLongDoubleExpo$22:>
new  < printLongDoubleExpo$18:>

1648:
old  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Assign Â£temporary1667 101>

1649:
old  <>
new  <	mov al, 101>

1650:
old  < printLongDoubleExpo$23:>
new  <>

1651:
old  <	; Parameter 76 signedchar 48>
new  < printLongDoubleExpo$19:>

1652:
old  <	mov byte [rbp + 76], 48>
new  <	; Parameter 76 signedchar Â£temporary1667>

1653:
old  <>
new  <	mov [rbp + 76], al>

1654:
old  < printLongDoubleExpo$24:>
new  <>

1655:
old  <	; Call 52 printChar 0>
new  < printLongDoubleExpo$20:>

1656:
old  <	mov qword [rbp + 52], printLongDoubleExpo$25>
new  <	; Call 52 printChar 0>

1657:
old  <	mov [rbp + 60], rbp>
new  <	mov qword [rbp + 52], printLongDoubleExpo$21>

1658:
old  <	add rbp, 52>
new  <	mov [rbp + 60], rbp>

1659:
old  <	jmp printChar>
new  <	add rbp, 52>

1660:
old  <>
new  <	jmp printChar>

1661:
old  < printLongDoubleExpo$25:>
new  <>

1662:
old  <	; PostCall 52>
new  < printLongDoubleExpo$21:>

1663:
old  <>
new  <	; PostCall 52>

1664:
old  < printLongDoubleExpo$26:>
new  <>

1665:
old  <	; Goto 80>
new  < printLongDoubleExpo$22:>

1666:
old  <	jmp printLongDoubleExpo$80>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1668:
old  < printLongDoubleExpo$27:>
new  < printLongDoubleExpo$23:>

1669:
old  <	; PushFloat value>
new  <	; Parameter 76 signedchar 48>

1670:
old  <	fld qword [rbp + 24]>
new  <	mov byte [rbp + 76], 48>

1672:
old  < printLongDoubleExpo$28:>
new  < printLongDoubleExpo$24:>

1673:
old  <	; PushFloat 0.0>
new  <	; Call 52 printChar 0>

1674:
old  <	fldz>
new  <	mov qword [rbp + 52], printLongDoubleExpo$25>

1675:
old  <>
new  <	mov [rbp + 60], rbp>

1676:
old  < printLongDoubleExpo$29:>
new  <	add rbp, 52>

1677:
old  <	; SignedGreaterThanEqual 37 value 0.0>
new  <	jmp printChar>

1678:
old  <	fcompp>
new  <>

1679:
old  <	fstsw ax>
new  < printLongDoubleExpo$25:>

1680:
old  <	sahf>
new  <	; PostCall 52>

1681:
old  <	jbe printLongDoubleExpo$37>
new  <>

1682:
old  <>
new  < printLongDoubleExpo$26:>

1683:
old  < printLongDoubleExpo$30:>
new  <	; Goto 80>

1684:
old  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	jmp printLongDoubleExpo$80>

1686:
old  < printLongDoubleExpo$31:>
new  < printLongDoubleExpo$27:>

1687:
old  <	; Parameter 76 signedchar 45>
new  <	; PushFloat value>

1688:
old  <	mov byte [rbp + 76], 45>
new  <	fld qword [rbp + 24]>

1690:
old  < printLongDoubleExpo$32:>
new  < printLongDoubleExpo$28:>

1691:
old  <	; Call 52 printChar 0>
new  <	; PushFloat 0.0>

1692:
old  <	mov qword [rbp + 52], printLongDoubleExpo$33>
new  <	fldz>

1693:
old  <	mov [rbp + 60], rbp>
new  <>

1694:
old  <	add rbp, 52>
new  < printLongDoubleExpo$29:>

1695:
old  <	jmp printChar>
new  <	; SignedGreaterThanEqual 37 value 0.0>

1696:
old  <>
new  <	fcompp>

1697:
old  < printLongDoubleExpo$33:>
new  <	fstsw ax>

1698:
old  <	; PostCall 52>
new  <	sahf>

1699:
old  <>
new  <	jbe printLongDoubleExpo$37>

1700:
old  < printLongDoubleExpo$34:>
new  <>

1701:
old  <	; PushFloat value>
new  < printLongDoubleExpo$30:>

1702:
old  <	fld qword [rbp + 24]>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1704:
old  < printLongDoubleExpo$35:>
new  < printLongDoubleExpo$31:>

1705:
old  <	; UnarySubtract Â£temporary1685 value>
new  <	; Parameter 76 signedchar 45>

1706:
old  <	fchs>
new  <	mov byte [rbp + 76], 45>

1708:
old  < printLongDoubleExpo$36:>
new  < printLongDoubleExpo$32:>

1709:
old  <	; PopFloat value>
new  <	; Call 52 printChar 0>

1710:
old  <	fstp qword [rbp + 24]>
new  <	mov qword [rbp + 52], printLongDoubleExpo$33>

1711:
old  <>
new  <	mov [rbp + 60], rbp>

1712:
old  < printLongDoubleExpo$37:>
new  <	add rbp, 52>

1713:
old  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	jmp printChar>

1715:
old  < printLongDoubleExpo$38:>
new  < printLongDoubleExpo$33:>

1716:
old  <	; PushFloat value>
new  <	; PostCall 52>

1717:
old  <	fld qword [rbp + 24]>
new  <>

1718:
old  <>
new  < printLongDoubleExpo$34:>

1719:
old  < printLongDoubleExpo$39:>
new  <	; PushFloat value>

1720:
old  <	; Parameter 76 double value>
new  <	fld qword [rbp + 24]>

1721:
old  <	fstp qword [rbp + 76]>
new  <>

1722:
old  <>
new  < printLongDoubleExpo$35:>

1723:
old  < printLongDoubleExpo$40:>
new  <	; UnarySubtract Â£temporary1672 value>

1724:
old  <	; Call 52 log10 0>
new  <	fchs>

1725:
old  <	mov qword [rbp + 52], printLongDoubleExpo$41>
new  <>

1726:
old  <	mov [rbp + 60], rbp>
new  < printLongDoubleExpo$36:>

1727:
old  <	add rbp, 52>
new  <	; PopFloat value>

1728:
old  <	jmp log10>
new  <	fstp qword [rbp + 24]>

1730:
old  < printLongDoubleExpo$41:>
new  < printLongDoubleExpo$37:>

1731:
old  <	; PostCall 52>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1733:
old  < printLongDoubleExpo$42:>
new  < printLongDoubleExpo$38:>

1734:
old  <	; GetReturnValue Â£temporary1686>
new  <	; PushFloat value>

1735:
old  <>
new  <	fld qword [rbp + 24]>

1736:
old  < printLongDoubleExpo$43:>
new  <>

1737:
old  <	; FloatingToIntegral Â£temporary1687 Â£temporary1686>
new  < printLongDoubleExpo$39:>

1738:
old  <	fistp dword [container4bytes#]>
new  <	; Parameter 76 double value>

1739:
old  <	mov eax, [container4bytes#]>
new  <	fstp qword [rbp + 76]>

1741:
old  < printLongDoubleExpo$44:>
new  < printLongDoubleExpo$40:>

1742:
old  <	; Assign expo Â£temporary1687>
new  <	; Call 52 log10 0>

1743:
old  <	mov [rbp + 52], eax>
new  <	mov qword [rbp + 52], printLongDoubleExpo$41>

1744:
old  <>
new  <	mov [rbp + 60], rbp>

1745:
old  < printLongDoubleExpo$45:>
new  <	add rbp, 52>

1746:
old  <	; PushFloat value>
new  <	jmp log10>

1747:
old  <	fld qword [rbp + 24]>
new  <>

1748:
old  <>
new  < printLongDoubleExpo$41:>

1749:
old  < printLongDoubleExpo$46:>
new  <	; PostCall 52>

1750:
old  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 1>
new  <>

1751:
old  <	fstp qword [rbp + 56]>
new  < printLongDoubleExpo$42:>

1752:
old  <>
new  <	; GetReturnValue Â£temporary1673>

1753:
old  < printLongDoubleExpo$47:>
new  <>

1754:
old  <	; PushFloat 10.0>
new  < printLongDoubleExpo$43:>

1755:
old  <	fld qword [float8$10.0#]>
new  <	; FloatingToIntegral Â£temporary1674 Â£temporary1673>

1756:
old  <>
new  <	fistp dword [container4bytes#]>

1757:
old  < printLongDoubleExpo$48:>
new  <	mov eax, [container4bytes#]>

1758:
old  <	; Parameter 80 double 10.0>
new  <>

1759:
old  <	fstp qword [rbp + 88]>
new  < printLongDoubleExpo$44:>

1760:
old  <>
new  <	; Assign expo Â£temporary1674>

1761:
old  < printLongDoubleExpo$49:>
new  <	mov [rbp + 52], eax>

1762:
old  <	; IntegralToFloating Â£temporary1688 expo>
new  <>

1763:
old  <	fild dword [rbp + 52]>
new  < printLongDoubleExpo$45:>

1764:
old  <>
new  <	; PushFloat value>

1765:
old  < printLongDoubleExpo$50:>
new  <	fld qword [rbp + 24]>

1766:
old  <	; Parameter 88 double Â£temporary1688>
new  <>

1767:
old  <	fstp qword [rbp + 96]>
new  < printLongDoubleExpo$46:>

1768:
old  <>
new  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 1>

1769:
old  < printLongDoubleExpo$51:>
new  <	fstp qword [rbp + 56]>

1770:
old  <	; Call 56 pow 0>
new  <>

1771:
old  <	mov qword [rbp + 64], printLongDoubleExpo$52>
new  < printLongDoubleExpo$47:>

1772:
old  <	mov [rbp + 72], rbp>
new  <	; PushFloat 10.0>

1773:
old  <	add rbp, 64>
new  <	fld qword [float8$10.0#]>

1774:
old  <	jmp pow>
new  <>

1775:
old  <>
new  < printLongDoubleExpo$48:>

1776:
old  < printLongDoubleExpo$52:>
new  <	; Parameter 80 double 10.0>

1777:
old  <	; PostCall 56>
new  <	fstp qword [rbp + 88]>

1778:
old  <	fstp qword [rbp + 64]>
new  <>

1779:
old  <	fld qword [rbp + 56]>
new  < printLongDoubleExpo$49:>

1780:
old  <	fld qword [rbp + 64]>
new  <	; IntegralToFloating Â£temporary1675 expo>

1781:
old  <>
new  <	fild dword [rbp + 52]>

1782:
old  < printLongDoubleExpo$53:>
new  <>

1783:
old  <	; GetReturnValue Â£temporary1689>
new  < printLongDoubleExpo$50:>

1784:
old  <>
new  <	; Parameter 88 double Â£temporary1675>

1785:
old  < printLongDoubleExpo$54:>
new  <	fstp qword [rbp + 96]>

1786:
old  <	; SignedDivide Â£temporary1690 value Â£temporary1689>
new  <>

1787:
old  <	fdiv>
new  < printLongDoubleExpo$51:>

1788:
old  <>
new  <	; Call 56 pow 0>

1789:
old  < printLongDoubleExpo$55:>
new  <	mov qword [rbp + 64], printLongDoubleExpo$52>

1790:
old  <	; PopFloat value>
new  <	mov [rbp + 72], rbp>

1791:
old  <	fstp qword [rbp + 24]>
new  <	add rbp, 64>

1792:
old  <>
new  <	jmp pow>

1793:
old  < printLongDoubleExpo$56:>
new  <>

1794:
old  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < printLongDoubleExpo$52:>

1795:
old  <>
new  <	; PostCall 56>

1796:
old  < printLongDoubleExpo$57:>
new  <	fstp qword [rbp + 64]>

1797:
old  <	; PushFloat value>
new  <	fld qword [rbp + 56]>

1798:
old  <	fld qword [rbp + 24]>
new  <	fld qword [rbp + 64]>

1800:
old  < printLongDoubleExpo$58:>
new  < printLongDoubleExpo$53:>

1801:
old  <	; Parameter 80 longdouble value>
new  <	; GetReturnValue Â£temporary1676>

1802:
old  <	fstp qword [rbp + 80]>
new  <>

1803:
old  <>
new  < printLongDoubleExpo$54:>

1804:
old  < printLongDoubleExpo$59:>
new  <	; SignedDivide Â£temporary1677 value Â£temporary1676>

1805:
old  <	; Parameter 88 signedint plus>
new  <	fdiv>

1806:
old  <	mov eax, [rbp + 32]>
new  <>

1807:
old  <	mov [rbp + 88], eax>
new  < printLongDoubleExpo$55:>

1808:
old  <>
new  <	; PopFloat value>

1809:
old  < printLongDoubleExpo$60:>
new  <	fstp qword [rbp + 24]>

1810:
old  <	; Parameter 92 signedint space>
new  <>

1811:
old  <	mov eax, [rbp + 36]>
new  < printLongDoubleExpo$56:>

1812:
old  <	mov [rbp + 92], eax>
new  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1814:
old  < printLongDoubleExpo$61:>
new  < printLongDoubleExpo$57:>

1815:
old  <	; Parameter 96 signedint grid>
new  <	; PushFloat value>

1816:
old  <	mov eax, [rbp + 40]>
new  <	fld qword [rbp + 24]>

1817:
old  <	mov [rbp + 96], eax>
new  <>

1818:
old  <>
new  < printLongDoubleExpo$58:>

1819:
old  < printLongDoubleExpo$62:>
new  <	; Parameter 80 longdouble value>

1820:
old  <	; Parameter 100 signedint precision>
new  <	fstp qword [rbp + 80]>

1821:
old  <	mov eax, [rbp + 44]>
new  <>

1822:
old  <	mov [rbp + 100], eax>
new  < printLongDoubleExpo$59:>

1823:
old  <>
new  <	; Parameter 88 signedint plus>

1824:
old  < printLongDoubleExpo$63:>
new  <	mov eax, [rbp + 32]>

1825:
old  <	; Call 56 printLongDoublePlain 0>
new  <	mov [rbp + 88], eax>

1826:
old  <	mov qword [rbp + 56], printLongDoubleExpo$64>
new  <>

1827:
old  <	mov [rbp + 64], rbp>
new  < printLongDoubleExpo$60:>

1828:
old  <	add rbp, 56>
new  <	; Parameter 92 signedint space>

1829:
old  <	jmp printLongDoublePlain>
new  <	mov eax, [rbp + 36]>

1830:
old  <>
new  <	mov [rbp + 92], eax>

1831:
old  < printLongDoubleExpo$64:>
new  <>

1832:
old  <	; PostCall 56>
new  < printLongDoubleExpo$61:>

1833:
old  <>
new  <	; Parameter 96 signedint grid>

1834:
old  < printLongDoubleExpo$65:>
new  <	mov eax, [rbp + 40]>

1835:
old  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov [rbp + 96], eax>

1837:
old  < printLongDoubleExpo$66:>
new  < printLongDoubleExpo$62:>

1838:
old  <	; Equal 69 capital 0>
new  <	; Parameter 100 signedint precision>

1839:
old  <	cmp dword [rbp + 48], 0>
new  <	mov eax, [rbp + 44]>

1840:
old  <	je printLongDoubleExpo$69>
new  <	mov [rbp + 100], eax>

1842:
old  < printLongDoubleExpo$67:>
new  < printLongDoubleExpo$63:>

1843:
old  <	; Assign Â£temporary1693 69>
new  <	; Call 56 printLongDoublePlain 0>

1844:
old  <	mov al, 69>
new  <	mov qword [rbp + 56], printLongDoubleExpo$64>

1845:
old  <>
new  <	mov [rbp + 64], rbp>

1846:
old  < printLongDoubleExpo$68:>
new  <	add rbp, 56>

1847:
old  <	; Goto 70>
new  <	jmp printLongDoublePlain>

1848:
old  <	jmp printLongDoubleExpo$70>
new  <>

1849:
old  <>
new  < printLongDoubleExpo$64:>

1850:
old  < printLongDoubleExpo$69:>
new  <	; PostCall 56>

1851:
old  <	; Assign Â£temporary1693 101>
new  <>

1852:
old  <	mov al, 101>
new  < printLongDoubleExpo$65:>

1853:
old  <>
new  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1854:
old  < printLongDoubleExpo$70:>
new  <>

1855:
old  <	; Parameter 80 signedchar Â£temporary1693>
new  < printLongDoubleExpo$66:>

1856:
old  <	mov [rbp + 80], al>
new  <	; Equal 69 capital 0>

1857:
old  <>
new  <	cmp dword [rbp + 48], 0>

1858:
old  < printLongDoubleExpo$71:>
new  <	je printLongDoubleExpo$69>

1859:
old  <	; Call 56 printChar 0>
new  <>

1860:
old  <	mov qword [rbp + 56], printLongDoubleExpo$72>
new  < printLongDoubleExpo$67:>

1861:
old  <	mov [rbp + 64], rbp>
new  <	; Assign Â£temporary1680 69>

1862:
old  <	add rbp, 56>
new  <	mov al, 69>

1863:
old  <	jmp printChar>
new  <>

1864:
old  <>
new  < printLongDoubleExpo$68:>

1865:
old  < printLongDoubleExpo$72:>
new  <	; Goto 70>

1866:
old  <	; PostCall 56>
new  <	jmp printLongDoubleExpo$70>

1868:
old  < printLongDoubleExpo$73:>
new  < printLongDoubleExpo$69:>

1869:
old  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Assign Â£temporary1680 101>

1870:
old  <>
new  <	mov al, 101>

1871:
old  < printLongDoubleExpo$74:>
new  <>

1872:
old  <	; IntegralToIntegral Â£temporary1695 expo>
new  < printLongDoubleExpo$70:>

1873:
old  <	mov eax, [rbp + 52]>
new  <	; Parameter 80 signedchar Â£temporary1680>

1874:
old  <	mov rbx, 4294967295>
new  <	mov [rbp + 80], al>

1875:
old  <	and rax, rbx>
new  <>

1876:
old  <	cmp eax, 0>
new  < printLongDoubleExpo$71:>

1877:
old  <	jge printLongDoubleExpo$75>
new  <	; Call 56 printChar 0>

1878:
old  <	neg eax>
new  <	mov qword [rbp + 56], printLongDoubleExpo$72>

1879:
old  <	neg rax>
new  <	mov [rbp + 64], rbp>

1880:
old  <>
new  <	add rbp, 56>

1881:
old  < printLongDoubleExpo$75:>
new  <	jmp printChar>

1882:
old  <	; Parameter 80 signed long int Â£temporary1695>
new  <>

1883:
old  <	mov [rbp + 80], rax>
new  < printLongDoubleExpo$72:>

1884:
old  <>
new  <	; PostCall 56>

1885:
old  < printLongDoubleExpo$76:>
new  <>

1886:
old  <	; Parameter 88 signedint 1>
new  < printLongDoubleExpo$73:>

1887:
old  <	mov dword [rbp + 88], 1>
new  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1889:
old  < printLongDoubleExpo$77:>
new  < printLongDoubleExpo$74:>

1890:
old  <	; Parameter 92 signedint 0>
new  <	; IntegralToIntegral Â£temporary1682 expo>

1891:
old  <	mov dword [rbp + 92], 0>
new  <	mov eax, [rbp + 52]>

1892:
old  <>
new  <	mov rbx, 4294967295>

1893:
old  < printLongDoubleExpo$78:>
new  <	and rax, rbx>

1894:
old  <	; Call 56 printLongInt 0>
new  <	cmp eax, 0>

1895:
old  <	mov qword [rbp + 56], printLongDoubleExpo$79>
new  <	jge printLongDoubleExpo$75>

1896:
old  <	mov [rbp + 64], rbp>
new  <	neg eax>

1897:
old  <	add rbp, 56>
new  <	neg rax>

1898:
old  <	jmp printLongInt>
new  <>

1899:
old  <>
new  < printLongDoubleExpo$75:>

1900:
old  < printLongDoubleExpo$79:>
new  <	; Parameter 80 signed long int Â£temporary1682>

1901:
old  <	; PostCall 56>
new  <	mov [rbp + 80], rax>

1903:
old  < printLongDoubleExpo$80:>
new  < printLongDoubleExpo$76:>

1904:
old  <	; Return>
new  <	; Parameter 88 signedint 1>

1905:
old  <	mov rax, [rbp]>
new  <	mov dword [rbp + 88], 1>

1906:
old  <	mov rdi, [rbp + 16]>
new  <>

1907:
old  <	mov rbp, [rbp + 8]>
new  < printLongDoubleExpo$77:>

1908:
old  <	jmp rax>
new  <	; Parameter 92 signedint 0>

1909:
old  <>
new  <	mov dword [rbp + 92], 0>

1910:
old  < printLongDoubleExpo$81:>
new  <>

1911:
old  <	; FunctionEnd printLongDoubleExpo>
new  < printLongDoubleExpo$78:>

1912:
old  <>
new  <	; Call 56 printLongInt 0>

1913:
old  <section .text>
new  <	mov qword [rbp + 56], printLongDoubleExpo$79>

1914:
old  <>
new  <	mov [rbp + 64], rbp>

1915:
old  < checkWidthAndPrecision:>
new  <	add rbp, 56>

1916:
old  <	; Equal 12 widthPtr 0>
new  <	jmp printLongInt>

1917:
old  <	cmp qword [rbp + 32], 0>
new  <>

1918:
old  <	je checkWidthAndPrecision$12>
new  < printLongDoubleExpo$79:>

1919:
old  <>
new  <	; PostCall 56>

1920:
old  < checkWidthAndPrecision$1:>
new  <>

1921:
old  <	; Dereference Â£temporary1703 -> widthPtr widthPtr 0>
new  < printLongDoubleExpo$80:>

1922:
old  <	mov rsi, [rbp + 32]>
new  <	; Return>

1923:
old  <>
new  <	mov rax, [rbp]>

1924:
old  < checkWidthAndPrecision$2:>
new  <	mov rdi, [rbp + 16]>

1925:
old  <	; NotEqual 12 Â£temporary1703 -> widthPtr -1>
new  <	mov rbp, [rbp + 8]>

1926:
old  <	cmp dword [rsi], -1>
new  <	jmp rax>

1927:
old  <	jne checkWidthAndPrecision$12>
new  <>

1928:
old  <>
new  < printLongDoubleExpo$81:>

1929:
old  < checkWidthAndPrecision$3:>
new  <	; FunctionEnd printLongDoubleExpo>

1930:
old  <	; Dereference Â£temporary1706 -> widthPtr widthPtr 0>
new  <>

1931:
old  <	mov rsi, [rbp + 32]>
new  <section .text>

1933:
old  < checkWidthAndPrecision$4:>
new  < checkWidthAndPrecision:>

1934:
old  <	; BinaryAdd Â£temporary1708 arg_list 4>
new  <	; Equal 12 widthPtr 0>

1935:
old  <	mov rax, [rbp + 24]>
new  <	cmp qword [rbp + 32], 0>

1936:
old  <	add rax, 4>
new  <	je checkWidthAndPrecision$12>

1938:
old  < checkWidthAndPrecision$5:>
new  < checkWidthAndPrecision$1:>

1939:
old  <	; IntegralToIntegral Â£temporary1709 Â£temporary1708>
new  <	; Dereference Â£temporary1690 -> widthPtr widthPtr 0>

1940:
old  <>
new  <	mov rsi, [rbp + 32]>

1941:
old  < checkWidthAndPrecision$6:>
new  <>

1942:
old  <	; IntegralToIntegral Â£temporary1710 Â£temporary1709>
new  < checkWidthAndPrecision$2:>

1943:
old  <	mov rbx, 4294967295>
new  <	; NotEqual 12 Â£temporary1690 -> widthPtr -1>

1944:
old  <	and rax, rbx>
new  <	cmp dword [rsi], -1>

1945:
old  <>
new  <	jne checkWidthAndPrecision$12>

1946:
old  < checkWidthAndPrecision$7:>
new  <>

1947:
old  <	; Assign arg_list Â£temporary1710>
new  < checkWidthAndPrecision$3:>

1948:
old  <	mov [rbp + 24], rax>
new  <	; Dereference Â£temporary1693 -> widthPtr widthPtr 0>

1949:
old  <>
new  <	mov rsi, [rbp + 32]>

1950:
old  < checkWidthAndPrecision$8:>
new  <>

1951:
old  <	; BinarySubtract Â£temporary1711 arg_list 4>
new  < checkWidthAndPrecision$4:>

1952:
old  <	mov rdi, [rbp + 24]>
new  <	; BinaryAdd Â£temporary1695 arg_list 4>

1953:
old  <	sub rdi, 4>
new  <	mov rax, [rbp + 24]>

1954:
old  <>
new  <	add rax, 4>

1955:
old  < checkWidthAndPrecision$9:>
new  <>

1956:
old  <	; IntegralToIntegral Â£temporary1713 Â£temporary1711>
new  < checkWidthAndPrecision$5:>

1957:
old  <>
new  <	; IntegralToIntegral Â£temporary1696 Â£temporary1695>

1958:
old  < checkWidthAndPrecision$10:>
new  <>

1959:
old  <	; Dereference Â£temporary1714 -> Â£temporary1713 Â£temporary1713 0>
new  < checkWidthAndPrecision$6:>

1960:
old  <>
new  <	; IntegralToIntegral Â£temporary1697 Â£temporary1696>

1961:
old  < checkWidthAndPrecision$11:>
new  <	mov rbx, 4294967295>

1962:
old  <	; Assign Â£temporary1706 -> widthPtr Â£temporary1714 -> Â£temporary1713>
new  <	and rax, rbx>

1963:
old  <	mov eax, [rdi]>
new  <>

1964:
old  <	mov [rsi], eax>
new  < checkWidthAndPrecision$7:>

1965:
old  <>
new  <	; Assign arg_list Â£temporary1697>

1966:
old  < checkWidthAndPrecision$12:>
new  <	mov [rbp + 24], rax>

1967:
old  <	; Equal 24 precisionPtr 0>
new  <>

1968:
old  <	cmp qword [rbp + 40], 0>
new  < checkWidthAndPrecision$8:>

1969:
old  <	je checkWidthAndPrecision$24>
new  <	; BinarySubtract Â£temporary1698 arg_list 4>

1970:
old  <>
new  <	mov rdi, [rbp + 24]>

1971:
old  < checkWidthAndPrecision$13:>
new  <	sub rdi, 4>

1972:
old  <	; Dereference Â£temporary1716 -> precisionPtr precisionPtr 0>
new  <>

1973:
old  <	mov rsi, [rbp + 40]>
new  < checkWidthAndPrecision$9:>

1974:
old  <>
new  <	; IntegralToIntegral Â£temporary1700 Â£temporary1698>

1975:
old  < checkWidthAndPrecision$14:>
new  <>

1976:
old  <	; NotEqual 24 Â£temporary1716 -> precisionPtr -1>
new  < checkWidthAndPrecision$10:>

1977:
old  <	cmp dword [rsi], -1>
new  <	; Dereference Â£temporary1701 -> Â£temporary1700 Â£temporary1700 0>

1978:
old  <	jne checkWidthAndPrecision$24>
new  <>

1979:
old  <>
new  < checkWidthAndPrecision$11:>

1980:
old  < checkWidthAndPrecision$15:>
new  <	; Assign Â£temporary1693 -> widthPtr Â£temporary1701 -> Â£temporary1700>

1981:
old  <	; Dereference Â£temporary1719 -> precisionPtr precisionPtr 0>
new  <	mov eax, [rdi]>

1982:
old  <	mov rsi, [rbp + 40]>
new  <	mov [rsi], eax>

1984:
old  < checkWidthAndPrecision$16:>
new  < checkWidthAndPrecision$12:>

1985:
old  <	; BinaryAdd Â£temporary1721 arg_list 4>
new  <	; Equal 24 precisionPtr 0>

1986:
old  <	mov rax, [rbp + 24]>
new  <	cmp qword [rbp + 40], 0>

1987:
old  <	add rax, 4>
new  <	je checkWidthAndPrecision$24>

1989:
old  < checkWidthAndPrecision$17:>
new  < checkWidthAndPrecision$13:>

1990:
old  <	; IntegralToIntegral Â£temporary1722 Â£temporary1721>
new  <	; Dereference Â£temporary1703 -> precisionPtr precisionPtr 0>

1991:
old  <>
new  <	mov rsi, [rbp + 40]>

1992:
old  < checkWidthAndPrecision$18:>
new  <>

1993:
old  <	; IntegralToIntegral Â£temporary1723 Â£temporary1722>
new  < checkWidthAndPrecision$14:>

1994:
old  <	mov rbx, 4294967295>
new  <	; NotEqual 24 Â£temporary1703 -> precisionPtr -1>

1995:
old  <	and rax, rbx>
new  <	cmp dword [rsi], -1>

1996:
old  <>
new  <	jne checkWidthAndPrecision$24>

1997:
old  < checkWidthAndPrecision$19:>
new  <>

1998:
old  <	; Assign arg_list Â£temporary1723>
new  < checkWidthAndPrecision$15:>

1999:
old  <	mov [rbp + 24], rax>
new  <	; Dereference Â£temporary1706 -> precisionPtr precisionPtr 0>

2000:
old  <>
new  <	mov rsi, [rbp + 40]>

2001:
old  < checkWidthAndPrecision$20:>
new  <>

2002:
old  <	; BinarySubtract Â£temporary1724 arg_list 4>
new  < checkWidthAndPrecision$16:>

2003:
old  <	mov rdi, [rbp + 24]>
new  <	; BinaryAdd Â£temporary1708 arg_list 4>

2004:
old  <	sub rdi, 4>
new  <	mov rax, [rbp + 24]>

2005:
old  <>
new  <	add rax, 4>

2006:
old  < checkWidthAndPrecision$21:>
new  <>

2007:
old  <	; IntegralToIntegral Â£temporary1726 Â£temporary1724>
new  < checkWidthAndPrecision$17:>

2008:
old  <>
new  <	; IntegralToIntegral Â£temporary1709 Â£temporary1708>

2009:
old  < checkWidthAndPrecision$22:>
new  <>

2010:
old  <	; Dereference Â£temporary1727 -> Â£temporary1726 Â£temporary1726 0>
new  < checkWidthAndPrecision$18:>

2011:
old  <>
new  <	; IntegralToIntegral Â£temporary1710 Â£temporary1709>

2012:
old  < checkWidthAndPrecision$23:>
new  <	mov rbx, 4294967295>

2013:
old  <	; Assign Â£temporary1719 -> precisionPtr Â£temporary1727 -> Â£temporary1726>
new  <	and rax, rbx>

2014:
old  <	mov eax, [rdi]>
new  <>

2015:
old  <	mov [rsi], eax>
new  < checkWidthAndPrecision$19:>

2016:
old  <>
new  <	; Assign arg_list Â£temporary1710>

2017:
old  < checkWidthAndPrecision$24:>
new  <	mov [rbp + 24], rax>

2018:
old  <	; Return arg_list>
new  <>

2019:
old  <	mov rbx, [rbp + 24]>
new  < checkWidthAndPrecision$20:>

2020:
old  <	mov rax, [rbp]>
new  <	; BinarySubtract Â£temporary1711 arg_list 4>

2021:
old  <	mov rdi, [rbp + 16]>
new  <	mov rdi, [rbp + 24]>

2022:
old  <	mov rbp, [rbp + 8]>
new  <	sub rdi, 4>

2023:
old  <	jmp rax>
new  <>

2024:
old  <>
new  < checkWidthAndPrecision$21:>

2025:
old  < checkWidthAndPrecision$25:>
new  <	; IntegralToIntegral Â£temporary1713 Â£temporary1711>

2026:
old  <	; FunctionEnd checkWidthAndPrecision>
new  <>

2027:
old  <>
new  < checkWidthAndPrecision$22:>

2028:
old  <section .text>
new  <	; Dereference Â£temporary1714 -> Â£temporary1713 Â£temporary1713 0>

2030:
old  < printArgument:>
new  < checkWidthAndPrecision$23:>

2031:
old  <	; Dereference Â£temporary1728 -> format format 0>
new  <	; Assign Â£temporary1706 -> precisionPtr Â£temporary1714 -> Â£temporary1713>

2032:
old  <	mov rsi, [rbp + 24]>
new  <	mov eax, [rdi]>

2033:
old  <>
new  <	mov [rsi], eax>

2034:
old  < printArgument$1:>
new  <>

2035:
old  <	; Assign c Â£temporary1728 -> format>
new  < checkWidthAndPrecision$24:>

2036:
old  <	mov al, [rsi]>
new  <	; SetReturnValue>

2037:
old  <	mov [rbp + 88], al>
new  <>

2038:
old  <>
new  < checkWidthAndPrecision$25:>

2039:
old  < printArgument$2:>
new  <	; Return arg_list>

2040:
old  <	; Case 21 c 100>
new  <	mov rbx, [rbp + 24]>

2041:
old  <	mov al, [rbp + 88]>
new  <	mov rax, [rbp]>

2042:
old  <	cmp al, 100>
new  <	mov rdi, [rbp + 16]>

2043:
old  <	je printArgument$21>
new  <	mov rbp, [rbp + 8]>

2044:
old  <>
new  <	jmp rax>

2045:
old  < printArgument$3:>
new  <>

2046:
old  <	; Case 21 c 105>
new  < checkWidthAndPrecision$26:>

2047:
old  <	cmp al, 105>
new  <	; FunctionEnd checkWidthAndPrecision>

2048:
old  <	je printArgument$21>
new  <>

2049:
old  <>
new  <section .text>

2050:
old  < printArgument$4:>
new  <>

2051:
old  <	; Case 82 c 99>
new  < printArgument:>

2052:
old  <	cmp al, 99>
new  <	; Dereference Â£temporary1715 -> format format 0>

2053:
old  <	je printArgument$82>
new  <	mov rsi, [rbp + 24]>

2055:
old  < printArgument$5:>
new  < printArgument$1:>

2056:
old  <	; Case 105 c 115>
new  <	; Assign c Â£temporary1715 -> format>

2057:
old  <	cmp al, 115>
new  <	mov al, [rsi]>

2058:
old  <	je printArgument$105>
new  <	mov [rbp + 88], al>

2060:
old  < printArgument$6:>
new  < printArgument$2:>

2061:
old  <	; Case 128 c 88>
new  <	; Case 21 c 100>

2062:
old  <	cmp al, 88>
new  <	mov al, [rbp + 88]>

2063:
old  <	je printArgument$128>
new  <	cmp al, 100>

2064:
old  <>
new  <	je printArgument$21>

2065:
old  < printArgument$7:>
new  <>

2066:
old  <	; Case 128 c 120>
new  < printArgument$3:>

2067:
old  <	cmp al, 120>
new  <	; Case 21 c 105>

2068:
old  <	je printArgument$128>
new  <	cmp al, 105>

2069:
old  <>
new  <	je printArgument$21>

2070:
old  < printArgument$8:>
new  <>

2071:
old  <	; Case 128 c 98>
new  < printArgument$4:>

2072:
old  <	cmp al, 98>
new  <	; Case 82 c 99>

2073:
old  <	je printArgument$128>
new  <	cmp al, 99>

2074:
old  <>
new  <	je printArgument$82>

2075:
old  < printArgument$9:>
new  <>

2076:
old  <	; Case 128 c 111>
new  < printArgument$5:>

2077:
old  <	cmp al, 111>
new  <	; Case 105 c 115>

2078:
old  <	je printArgument$128>
new  <	cmp al, 115>

2079:
old  <>
new  <	je printArgument$105>

2080:
old  < printArgument$10:>
new  <>

2081:
old  <	; Case 128 c 117>
new  < printArgument$6:>

2082:
old  <	cmp al, 117>
new  <	; Case 128 c 88>

2083:
old  <	je printArgument$128>
new  <	cmp al, 88>

2084:
old  <>
new  <	je printArgument$128>

2085:
old  < printArgument$11:>
new  <>

2086:
old  <	; Case 195 c 71>
new  < printArgument$7:>

2087:
old  <	cmp al, 71>
new  <	; Case 128 c 120>

2088:
old  <	je printArgument$195>
new  <	cmp al, 120>

2089:
old  <>
new  <	je printArgument$128>

2090:
old  < printArgument$12:>
new  <>

2091:
old  <	; Case 195 c 103>
new  < printArgument$8:>

2092:
old  <	cmp al, 103>
new  <	; Case 128 c 98>

2093:
old  <	je printArgument$195>
new  <	cmp al, 98>

2094:
old  <>
new  <	je printArgument$128>

2095:
old  < printArgument$13:>
new  <>

2096:
old  <	; Case 195 c 69>
new  < printArgument$9:>

2097:
old  <	cmp al, 69>
new  <	; Case 128 c 111>

2098:
old  <	je printArgument$195>
new  <	cmp al, 111>

2099:
old  <>
new  <	je printArgument$128>

2100:
old  < printArgument$14:>
new  <>

2101:
old  <	; Case 195 c 101>
new  < printArgument$10:>

2102:
old  <	cmp al, 101>
new  <	; Case 128 c 117>

2103:
old  <	je printArgument$195>
new  <	cmp al, 117>

2104:
old  <>
new  <	je printArgument$128>

2105:
old  < printArgument$15:>
new  <>

2106:
old  <	; Case 195 c 102>
new  < printArgument$11:>

2107:
old  <	cmp al, 102>
new  <	; Case 195 c 71>

2108:
old  <	je printArgument$195>
new  <	cmp al, 71>

2109:
old  <>
new  <	je printArgument$195>

2110:
old  < printArgument$16:>
new  <>

2111:
old  <	; Case 327 c 112>
new  < printArgument$12:>

2112:
old  <	cmp al, 112>
new  <	; Case 195 c 103>

2113:
old  <	je printArgument$327>
new  <	cmp al, 103>

2114:
old  <>
new  <	je printArgument$195>

2115:
old  < printArgument$17:>
new  <>

2116:
old  <	; Case 355 c 110>
new  < printArgument$13:>

2117:
old  <	cmp al, 110>
new  <	; Case 195 c 69>

2118:
old  <	je printArgument$355>
new  <	cmp al, 69>

2119:
old  <>
new  <	je printArgument$195>

2120:
old  < printArgument$18:>
new  <>

2121:
old  <	; Case 383 c 37>
new  < printArgument$14:>

2122:
old  <	cmp al, 37>
new  <	; Case 195 c 101>

2123:
old  <	je printArgument$383>
new  <	cmp al, 101>

2124:
old  <>
new  <	je printArgument$195>

2125:
old  < printArgument$19:>
new  <>

2126:
old  <	; CaseEnd c>
new  < printArgument$15:>

2127:
old  <>
new  <	; Case 195 c 102>

2128:
old  < printArgument$20:>
new  <	cmp al, 102>

2129:
old  <	; Goto 396>
new  <	je printArgument$195>

2130:
old  <	jmp printArgument$396>
new  <>

2131:
old  <>
new  < printArgument$16:>

2132:
old  < printArgument$21:>
new  <	; Case 327 c 112>

2133:
old  <	; Equal 33 shortInt 0>
new  <	cmp al, 112>

2134:
old  <	cmp dword [rbp + 64], 0>
new  <	je printArgument$327>

2135:
old  <	je printArgument$33>
new  <>

2136:
old  <>
new  < printArgument$17:>

2137:
old  < printArgument$22:>
new  <	; Case 355 c 110>

2138:
old  <	; BinaryAdd Â£temporary1730 arg_list 4>
new  <	cmp al, 110>

2139:
old  <	mov rax, [rbp + 32]>
new  <	je printArgument$355>

2140:
old  <	add rax, 4>
new  <>

2141:
old  <>
new  < printArgument$18:>

2142:
old  < printArgument$23:>
new  <	; Case 383 c 37>

2143:
old  <	; IntegralToIntegral Â£temporary1731 Â£temporary1730>
new  <	cmp al, 37>

2144:
old  <>
new  <	je printArgument$383>

2145:
old  < printArgument$24:>
new  <>

2146:
old  <	; IntegralToIntegral Â£temporary1732 Â£temporary1731>
new  < printArgument$19:>

2147:
old  <	mov rbx, 4294967295>
new  <	; CaseEnd c>

2148:
old  <	and rax, rbx>
new  <>

2149:
old  <>
new  < printArgument$20:>

2150:
old  < printArgument$25:>
new  <	; Goto 396>

2151:
old  <	; Assign arg_list Â£temporary1732>
new  <	jmp printArgument$396>

2152:
old  <	mov [rbp + 32], rax>
new  <>

2153:
old  <>
new  < printArgument$21:>

2154:
old  < printArgument$26:>
new  <	; Equal 33 shortInt 0>

2155:
old  <	; BinarySubtract Â£temporary1733 arg_list 4>
new  <	cmp dword [rbp + 64], 0>

2156:
old  <	mov rsi, [rbp + 32]>
new  <	je printArgument$33>

2157:
old  <	sub rsi, 4>
new  <>

2158:
old  <>
new  < printArgument$22:>

2159:
old  < printArgument$27:>
new  <	; BinaryAdd Â£temporary1717 arg_list 4>

2160:
old  <	; IntegralToIntegral Â£temporary1735 Â£temporary1733>
new  <	mov rax, [rbp + 32]>

2161:
old  <>
new  <	add rax, 4>

2162:
old  < printArgument$28:>
new  <>

2163:
old  <	; Dereference Â£temporary1736 -> Â£temporary1735 Â£temporary1735 0>
new  < printArgument$23:>

2164:
old  <>
new  <	; IntegralToIntegral Â£temporary1718 Â£temporary1717>

2165:
old  < printArgument$29:>
new  <>

2166:
old  <	; IntegralToIntegral Â£temporary1737 Â£temporary1736 -> Â£temporary1735>
new  < printArgument$24:>

2167:
old  <	mov eax, [rsi]>
new  <	; IntegralToIntegral Â£temporary1719 Â£temporary1718>

2168:
old  <	cmp eax, 0>
new  <	mov rbx, 4294967295>

2169:
old  <	jge printArgument$30>
new  <	and rax, rbx>

2170:
old  <	neg eax>
new  <>

2171:
old  <	neg ax>
new  < printArgument$25:>

2172:
old  <>
new  <	; Assign arg_list Â£temporary1719>

2173:
old  < printArgument$30:>
new  <	mov [rbp + 32], rax>

2174:
old  <	; IntegralToIntegral Â£temporary1738 Â£temporary1737>
new  <>

2175:
old  <	mov rbx, 65535>
new  < printArgument$26:>

2176:
old  <	and rax, rbx>
new  <	; BinarySubtract Â£temporary1720 arg_list 4>

2177:
old  <	cmp ax, 0>
new  <	mov rsi, [rbp + 32]>

2178:
old  <	jge printArgument$31>
new  <	sub rsi, 4>

2179:
old  <	neg ax>
new  <>

2180:
old  <	neg rax>
new  < printArgument$27:>

2181:
old  <>
new  <	; IntegralToIntegral Â£temporary1722 Â£temporary1720>

2182:
old  < printArgument$31:>
new  <>

2183:
old  <	; Assign longValue Â£temporary1738>
new  < printArgument$28:>

2184:
old  <	mov [rbp + 114], rax>
new  <	; Dereference Â£temporary1723 -> Â£temporary1722 Â£temporary1722 0>

2186:
old  < printArgument$32:>
new  < printArgument$29:>

2187:
old  <	; Goto 52>
new  <	; IntegralToIntegral Â£temporary1724 Â£temporary1723 -> Â£temporary1722>

2188:
old  <	jmp printArgument$52>
new  <	mov eax, [rsi]>

2189:
old  <>
new  <	cmp eax, 0>

2190:
old  < printArgument$33:>
new  <	jge printArgument$30>

2191:
old  <	; Equal 43 longInt 0>
new  <	neg eax>

2192:
old  <	cmp dword [rbp + 68], 0>
new  <	neg ax>

2193:
old  <	je printArgument$43>
new  <>

2194:
old  <>
new  < printArgument$30:>

2195:
old  < printArgument$34:>
new  <	; IntegralToIntegral Â£temporary1725 Â£temporary1724>

2196:
old  <	; BinaryAdd Â£temporary1740 arg_list 8>
new  <	mov rbx, 65535>

2197:
old  <	mov rax, [rbp + 32]>
new  <	and rax, rbx>

2198:
old  <	add rax, 8>
new  <	cmp ax, 0>

2199:
old  <>
new  <	jge printArgument$31>

2200:
old  < printArgument$35:>
new  <	neg ax>

2201:
old  <	; IntegralToIntegral Â£temporary1741 Â£temporary1740>
new  <	neg rax>

2203:
old  < printArgument$36:>
new  < printArgument$31:>

2204:
old  <	; IntegralToIntegral Â£temporary1742 Â£temporary1741>
new  <	; Assign longValue Â£temporary1725>

2205:
old  <	mov rbx, 4294967295>
new  <	mov [rbp + 114], rax>

2206:
old  <	and rax, rbx>
new  <>

2207:
old  <>
new  < printArgument$32:>

2208:
old  < printArgument$37:>
new  <	; Goto 52>

2209:
old  <	; Assign arg_list Â£temporary1742>
new  <	jmp printArgument$52>

2210:
old  <	mov [rbp + 32], rax>
new  <>

2211:
old  <>
new  < printArgument$33:>

2212:
old  < printArgument$38:>
new  <	; Equal 43 longInt 0>

2213:
old  <	; BinarySubtract Â£temporary1743 arg_list 8>
new  <	cmp dword [rbp + 68], 0>

2214:
old  <	mov rsi, [rbp + 32]>
new  <	je printArgument$43>

2215:
old  <	sub rsi, 8>
new  <>

2216:
old  <>
new  < printArgument$34:>

2217:
old  < printArgument$39:>
new  <	; BinaryAdd Â£temporary1727 arg_list 8>

2218:
old  <	; IntegralToIntegral Â£temporary1745 Â£temporary1743>
new  <	mov rax, [rbp + 32]>

2219:
old  <>
new  <	add rax, 8>

2220:
old  < printArgument$40:>
new  <>

2221:
old  <	; Dereference Â£temporary1746 -> Â£temporary1745 Â£temporary1745 0>
new  < printArgument$35:>

2222:
old  <>
new  <	; IntegralToIntegral Â£temporary1728 Â£temporary1727>

2223:
old  < printArgument$41:>
new  <>

2224:
old  <	; Assign longValue Â£temporary1746 -> Â£temporary1745>
new  < printArgument$36:>

2225:
old  <	mov rax, [rsi]>
new  <	; IntegralToIntegral Â£temporary1729 Â£temporary1728>

2226:
old  <	mov [rbp + 114], rax>
new  <	mov rbx, 4294967295>

2227:
old  <>
new  <	and rax, rbx>

2228:
old  < printArgument$42:>
new  <>

2229:
old  <	; Goto 52>
new  < printArgument$37:>

2230:
old  <	jmp printArgument$52>
new  <	; Assign arg_list Â£temporary1729>

2231:
old  <>
new  <	mov [rbp + 32], rax>

2232:
old  < printArgument$43:>
new  <>

2233:
old  <	; BinaryAdd Â£temporary1748 arg_list 4>
new  < printArgument$38:>

2234:
old  <	mov rax, [rbp + 32]>
new  <	; BinarySubtract Â£temporary1730 arg_list 8>

2235:
old  <	add rax, 4>
new  <	mov rsi, [rbp + 32]>

2236:
old  <>
new  <	sub rsi, 8>

2237:
old  < printArgument$44:>
new  <>

2238:
old  <	; IntegralToIntegral Â£temporary1749 Â£temporary1748>
new  < printArgument$39:>

2239:
old  <>
new  <	; IntegralToIntegral Â£temporary1732 Â£temporary1730>

2240:
old  < printArgument$45:>
new  <>

2241:
old  <	; IntegralToIntegral Â£temporary1750 Â£temporary1749>
new  < printArgument$40:>

2242:
old  <	mov rbx, 4294967295>
new  <	; Dereference Â£temporary1733 -> Â£temporary1732 Â£temporary1732 0>

2243:
old  <	and rax, rbx>
new  <>

2244:
old  <>
new  < printArgument$41:>

2245:
old  < printArgument$46:>
new  <	; Assign longValue Â£temporary1733 -> Â£temporary1732>

2246:
old  <	; Assign arg_list Â£temporary1750>
new  <	mov rax, [rsi]>

2247:
old  <	mov [rbp + 32], rax>
new  <	mov [rbp + 114], rax>

2249:
old  < printArgument$47:>
new  < printArgument$42:>

2250:
old  <	; BinarySubtract Â£temporary1751 arg_list 4>
new  <	; Goto 52>

2251:
old  <	mov rsi, [rbp + 32]>
new  <	jmp printArgument$52>

2252:
old  <	sub rsi, 4>
new  <>

2253:
old  <>
new  < printArgument$43:>

2254:
old  < printArgument$48:>
new  <	; BinaryAdd Â£temporary1735 arg_list 4>

2255:
old  <	; IntegralToIntegral Â£temporary1753 Â£temporary1751>
new  <	mov rax, [rbp + 32]>

2256:
old  <>
new  <	add rax, 4>

2257:
old  < printArgument$49:>
new  <>

2258:
old  <	; Dereference Â£temporary1754 -> Â£temporary1753 Â£temporary1753 0>
new  < printArgument$44:>

2259:
old  <>
new  <	; IntegralToIntegral Â£temporary1736 Â£temporary1735>

2260:
old  < printArgument$50:>
new  <>

2261:
old  <	; IntegralToIntegral Â£temporary1755 Â£temporary1754 -> Â£temporary1753>
new  < printArgument$45:>

2262:
old  <	mov eax, [rsi]>
new  <	; IntegralToIntegral Â£temporary1737 Â£temporary1736>

2265:
old  <	cmp eax, 0>
new  <>

2266:
old  <	jge printArgument$51>
new  < printArgument$46:>

2267:
old  <	neg eax>
new  <	; Assign arg_list Â£temporary1737>

2268:
old  <	neg rax>
new  <	mov [rbp + 32], rax>

2270:
old  < printArgument$51:>
new  < printArgument$47:>

2271:
old  <	; Assign longValue Â£temporary1755>
new  <	; BinarySubtract Â£temporary1738 arg_list 4>

2272:
old  <	mov [rbp + 114], rax>
new  <	mov rsi, [rbp + 32]>

2273:
old  <>
new  <	sub rsi, 4>

2274:
old  < printArgument$52:>
new  <>

2275:
old  <	; Equal 59 negativePtr 0>
new  < printArgument$48:>

2276:
old  <	cmp qword [rbp + 80], 0>
new  <	; IntegralToIntegral Â£temporary1740 Â£temporary1738>

2277:
old  <	je printArgument$59>
new  <>

2278:
old  <>
new  < printArgument$49:>

2279:
old  < printArgument$53:>
new  <	; Dereference Â£temporary1741 -> Â£temporary1740 Â£temporary1740 0>

2280:
old  <	; Dereference Â£temporary1759 -> negativePtr negativePtr 0>
new  <>

2281:
old  <	mov rsi, [rbp + 80]>
new  < printArgument$50:>

2282:
old  <>
new  <	; IntegralToIntegral Â£temporary1742 Â£temporary1741 -> Â£temporary1740>

2283:
old  < printArgument$54:>
new  <	mov eax, [rsi]>

2284:
old  <	; SignedGreaterThanEqual 57 longValue 0>
new  <	mov rbx, 4294967295>

2285:
old  <	cmp qword [rbp + 114], 0>
new  <	and rax, rbx>

2286:
old  <	jge printArgument$57>
new  <	cmp eax, 0>

2287:
old  <>
new  <	jge printArgument$51>

2288:
old  < printArgument$55:>
new  <	neg eax>

2289:
old  <	; Assign Â£temporary1761 1>
new  <	neg rax>

2290:
old  <	mov eax, 1>
new  <>

2291:
old  <>
new  < printArgument$51:>

2292:
old  < printArgument$56:>
new  <	; Assign longValue Â£temporary1742>

2293:
old  <	; Goto 58>
new  <	mov [rbp + 114], rax>

2294:
old  <	jmp printArgument$58>
new  <>

2295:
old  <>
new  < printArgument$52:>

2296:
old  < printArgument$57:>
new  <	; Equal 59 negativePtr 0>

2297:
old  <	; Assign Â£temporary1761 0>
new  <	cmp qword [rbp + 80], 0>

2298:
old  <	mov eax, 0>
new  <	je printArgument$59>

2300:
old  < printArgument$58:>
new  < printArgument$53:>

2301:
old  <	; Assign Â£temporary1759 -> negativePtr Â£temporary1761>
new  <	; Dereference Â£temporary1746 -> negativePtr negativePtr 0>

2302:
old  <	mov [rsi], eax>
new  <	mov rsi, [rbp + 80]>

2304:
old  < printArgument$59:>
new  < printArgument$54:>

2305:
old  <	; NotEqual 66 sign 0>
new  <	; SignedGreaterThanEqual 57 longValue 0>

2306:
old  <	cmp dword [rbp + 76], 0>
new  <	cmp qword [rbp + 114], 0>

2307:
old  <	jne printArgument$66>
new  <	jge printArgument$57>

2309:
old  < printArgument$60:>
new  < printArgument$55:>

2310:
old  <	; PreCall 122 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Assign Â£temporary1748 1>

2311:
old  <>
new  <	mov eax, 1>

2312:
old  < printArgument$61:>
new  <>

2313:
old  <	; Parameter 146 signed long int longValue>
new  < printArgument$56:>

2314:
old  <	mov rax, [rbp + 114]>
new  <	; Goto 58>

2315:
old  <	mov [rbp + 146], rax>
new  <	jmp printArgument$58>

2317:
old  < printArgument$62:>
new  < printArgument$57:>

2318:
old  <	; Call 122 labs 0>
new  <	; Assign Â£temporary1748 0>

2319:
old  <	mov qword [rbp + 122], printArgument$63>
new  <	mov eax, 0>

2320:
old  <	mov [rbp + 130], rbp>
new  <>

2321:
old  <	add rbp, 122>
new  < printArgument$58:>

2322:
old  <	jmp labs>
new  <	; Assign Â£temporary1746 -> negativePtr Â£temporary1748>

2323:
old  <>
new  <	mov [rsi], eax>

2324:
old  < printArgument$63:>
new  <>

2325:
old  <	; PostCall 122>
new  < printArgument$59:>

2326:
old  <>
new  <	; NotEqual 66 sign 0>

2327:
old  < printArgument$64:>
new  <	cmp dword [rbp + 76], 0>

2328:
old  <	; GetReturnValue Â£temporary1764>
new  <	jne printArgument$66>

2330:
old  < printArgument$65:>
new  < printArgument$60:>

2331:
old  <	; Assign longValue Â£temporary1764>
new  <	; PreCall 122 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2332:
old  <	mov [rbp + 114], rbx>
new  <>

2333:
old  <>
new  < printArgument$61:>

2334:
old  < printArgument$66:>
new  <	; Parameter 146 signed long int longValue>

2335:
old  <	; PreCall 122 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov rax, [rbp + 114]>

2336:
old  <>
new  <	mov [rbp + 146], rax>

2337:
old  < printArgument$67:>
new  <>

2338:
old  <	; Parameter 146 pointer arg_list>
new  < printArgument$62:>

2339:
old  <	mov rax, [rbp + 32]>
new  <	; Call 122 labs 0>

2340:
old  <	mov [rbp + 146], rax>
new  <	mov qword [rbp + 122], printArgument$63>

2341:
old  <>
new  <	mov [rbp + 130], rbp>

2342:
old  < printArgument$68:>
new  <	add rbp, 122>

2343:
old  <	; Parameter 154 pointer widthPtr>
new  <	jmp labs>

2344:
old  <	mov rax, [rbp + 52]>
new  <>

2345:
old  <	mov [rbp + 154], rax>
new  < printArgument$63:>

2346:
old  <>
new  <	; PostCall 122>

2347:
old  < printArgument$69:>
new  <>

2348:
old  <	; Address Â£temporary1765 precision>
new  < printArgument$64:>

2349:
old  <	mov rsi, rbp>
new  <	; GetReturnValue Â£temporary1751>

2350:
old  <	add rsi, 60>
new  <>

2351:
old  <>
new  < printArgument$65:>

2352:
old  < printArgument$70:>
new  <	; Assign longValue Â£temporary1751>

2353:
old  <	; Parameter 162 pointer Â£temporary1765>
new  <	mov [rbp + 114], rbx>

2354:
old  <	mov [rbp + 162], rsi>
new  <>

2355:
old  <>
new  < printArgument$66:>

2356:
old  < printArgument$71:>
new  <	; PreCall 122 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2357:
old  <	; Call 122 checkWidthAndPrecision 0>
new  <>

2358:
old  <	mov qword [rbp + 122], printArgument$72>
new  < printArgument$67:>

2359:
old  <	mov [rbp + 130], rbp>
new  <	; Parameter 146 pointer arg_list>

2360:
old  <	add rbp, 122>
new  <	mov rax, [rbp + 32]>

2361:
old  <	jmp checkWidthAndPrecision>
new  <	mov [rbp + 146], rax>

2363:
old  < printArgument$72:>
new  < printArgument$68:>

2364:
old  <	; PostCall 122>
new  <	; Parameter 154 pointer widthPtr>

2365:
old  <>
new  <	mov rax, [rbp + 52]>

2366:
old  < printArgument$73:>
new  <	mov [rbp + 154], rax>

2367:
old  <	; GetReturnValue Â£temporary1766>
new  <>

2368:
old  <>
new  < printArgument$69:>

2369:
old  < printArgument$74:>
new  <	; Address Â£temporary1752 precision>

2370:
old  <	; Assign arg_list Â£temporary1766>
new  <	mov rsi, rbp>

2371:
old  <	mov [rbp + 32], rbx>
new  <	add rsi, 60>

2373:
old  < printArgument$75:>
new  < printArgument$70:>

2374:
old  <	; PreCall 122 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter 162 pointer Â£temporary1752>

2375:
old  <>
new  <	mov [rbp + 162], rsi>

2376:
old  < printArgument$76:>
new  <>

2377:
old  <	; Parameter 146 signed long int longValue>
new  < printArgument$71:>

2378:
old  <	mov rax, [rbp + 114]>
new  <	; Call 122 checkWidthAndPrecision 0>

2379:
old  <	mov [rbp + 146], rax>
new  <	mov qword [rbp + 122], printArgument$72>

2380:
old  <>
new  <	mov [rbp + 130], rbp>

2381:
old  < printArgument$77:>
new  <	add rbp, 122>

2382:
old  <	; Parameter 154 signedint plus>
new  <	jmp checkWidthAndPrecision>

2383:
old  <	mov eax, [rbp + 40]>
new  <>

2384:
old  <	mov [rbp + 154], eax>
new  < printArgument$72:>

2385:
old  <>
new  <	; PostCall 122>

2386:
old  < printArgument$78:>
new  <>

2387:
old  <	; Parameter 158 signedint space>
new  < printArgument$73:>

2388:
old  <	mov eax, [rbp + 44]>
new  <	; GetReturnValue Â£temporary1753>

2389:
old  <	mov [rbp + 158], eax>
new  <>

2390:
old  <>
new  < printArgument$74:>

2391:
old  < printArgument$79:>
new  <	; Assign arg_list Â£temporary1753>

2392:
old  <	; Call 122 printLongInt 0>
new  <	mov [rbp + 32], rbx>

2393:
old  <	mov qword [rbp + 122], printArgument$80>
new  <>

2394:
old  <	mov [rbp + 130], rbp>
new  < printArgument$75:>

2395:
old  <	add rbp, 122>
new  <	; PreCall 122 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2396:
old  <	jmp printLongInt>
new  <>

2397:
old  <>
new  < printArgument$76:>

2398:
old  < printArgument$80:>
new  <	; Parameter 146 signed long int longValue>

2399:
old  <	; PostCall 122>
new  <	mov rax, [rbp + 114]>

2400:
old  <>
new  <	mov [rbp + 146], rax>

2401:
old  < printArgument$81:>
new  <>

2402:
old  <	; Goto 396>
new  < printArgument$77:>

2403:
old  <	jmp printArgument$396>
new  <	; Parameter 154 signedint plus>

2404:
old  <>
new  <	mov eax, [rbp + 40]>

2405:
old  < printArgument$82:>
new  <	mov [rbp + 154], eax>

2406:
old  <	; BinaryAdd Â£temporary1769 arg_list 4>
new  <>

2407:
old  <	mov rax, [rbp + 32]>
new  < printArgument$78:>

2408:
old  <	add rax, 4>
new  <	; Parameter 158 signedint space>

2409:
old  <>
new  <	mov eax, [rbp + 44]>

2410:
old  < printArgument$83:>
new  <	mov [rbp + 158], eax>

2411:
old  <	; IntegralToIntegral Â£temporary1770 Â£temporary1769>
new  <>

2412:
old  <>
new  < printArgument$79:>

2413:
old  < printArgument$84:>
new  <	; Call 122 printLongInt 0>

2414:
old  <	; IntegralToIntegral Â£temporary1771 Â£temporary1770>
new  <	mov qword [rbp + 122], printArgument$80>

2415:
old  <	mov rbx, 4294967295>
new  <	mov [rbp + 130], rbp>

2416:
old  <	and rax, rbx>
new  <	add rbp, 122>

2417:
old  <>
new  <	jmp printLongInt>

2418:
old  < printArgument$85:>
new  <>

2419:
old  <	; Assign arg_list Â£temporary1771>
new  < printArgument$80:>

2420:
old  <	mov [rbp + 32], rax>
new  <	; PostCall 122>

2422:
old  < printArgument$86:>
new  < printArgument$81:>

2423:
old  <	; BinarySubtract Â£temporary1772 arg_list 4>
new  <	; Goto 396>

2424:
old  <	mov rsi, [rbp + 32]>
new  <	jmp printArgument$396>

2425:
old  <	sub rsi, 4>
new  <>

2426:
old  <>
new  < printArgument$82:>

2427:
old  < printArgument$87:>
new  <	; BinaryAdd Â£temporary1756 arg_list 4>

2428:
old  <	; IntegralToIntegral Â£temporary1774 Â£temporary1772>
new  <	mov rax, [rbp + 32]>

2429:
old  <>
new  <	add rax, 4>

2430:
old  < printArgument$88:>
new  <>

2431:
old  <	; Dereference Â£temporary1775 -> Â£temporary1774 Â£temporary1774 0>
new  < printArgument$83:>

2432:
old  <>
new  <	; IntegralToIntegral Â£temporary1757 Â£temporary1756>

2433:
old  < printArgument$89:>
new  <>

2434:
old  <	; IntegralToIntegral Â£temporary1776 Â£temporary1775 -> Â£temporary1774>
new  < printArgument$84:>

2435:
old  <	mov eax, [rsi]>
new  <	; IntegralToIntegral Â£temporary1758 Â£temporary1757>

2436:
old  <	cmp eax, 0>
new  <	mov rbx, 4294967295>

2437:
old  <	jge printArgument$90>
new  <	and rax, rbx>

2438:
old  <	neg eax>
new  <>

2439:
old  <	neg al>
new  < printArgument$85:>

2440:
old  <>
new  <	; Assign arg_list Â£temporary1758>

2441:
old  < printArgument$90:>
new  <	mov [rbp + 32], rax>

2442:
old  <	; Assign charValue Â£temporary1776>
new  <>

2443:
old  <	mov [rbp + 89], al>
new  < printArgument$86:>

2444:
old  <>
new  <	; BinarySubtract Â£temporary1759 arg_list 4>

2445:
old  < printArgument$91:>
new  <	mov rsi, [rbp + 32]>

2446:
old  <	; PreCall 114 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	sub rsi, 4>

2448:
old  < printArgument$92:>
new  < printArgument$87:>

2449:
old  <	; Parameter 138 pointer arg_list>
new  <	; IntegralToIntegral Â£temporary1761 Â£temporary1759>

2450:
old  <	mov rax, [rbp + 32]>
new  <>

2451:
old  <	mov [rbp + 138], rax>
new  < printArgument$88:>

2452:
old  <>
new  <	; Dereference Â£temporary1762 -> Â£temporary1761 Â£temporary1761 0>

2453:
old  < printArgument$93:>
new  <>

2454:
old  <	; Parameter 146 pointer widthPtr>
new  < printArgument$89:>

2455:
old  <	mov rax, [rbp + 52]>
new  <	; IntegralToIntegral Â£temporary1763 Â£temporary1762 -> Â£temporary1761>

2456:
old  <	mov [rbp + 146], rax>
new  <	mov eax, [rsi]>

2457:
old  <>
new  <	cmp eax, 0>

2458:
old  < printArgument$94:>
new  <	jge printArgument$90>

2459:
old  <	; Address Â£temporary1777 precision>
new  <	neg eax>

2460:
old  <	mov rsi, rbp>
new  <	neg al>

2461:
old  <	add rsi, 60>
new  <>

2462:
old  <>
new  < printArgument$90:>

2463:
old  < printArgument$95:>
new  <	; Assign charValue Â£temporary1763>

2464:
old  <	; Parameter 154 pointer Â£temporary1777>
new  <	mov [rbp + 89], al>

2465:
old  <	mov [rbp + 154], rsi>
new  <>

2466:
old  <>
new  < printArgument$91:>

2467:
old  < printArgument$96:>
new  <	; PreCall 114 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2468:
old  <	; Call 114 checkWidthAndPrecision 0>
new  <>

2469:
old  <	mov qword [rbp + 114], printArgument$97>
new  < printArgument$92:>

2470:
old  <	mov [rbp + 122], rbp>
new  <	; Parameter 138 pointer arg_list>

2471:
old  <	add rbp, 114>
new  <	mov rax, [rbp + 32]>

2472:
old  <	jmp checkWidthAndPrecision>
new  <	mov [rbp + 138], rax>

2474:
old  < printArgument$97:>
new  < printArgument$93:>

2475:
old  <	; PostCall 114>
new  <	; Parameter 146 pointer widthPtr>

2476:
old  <>
new  <	mov rax, [rbp + 52]>

2477:
old  < printArgument$98:>
new  <	mov [rbp + 146], rax>

2478:
old  <	; GetReturnValue Â£temporary1778>
new  <>

2479:
old  <>
new  < printArgument$94:>

2480:
old  < printArgument$99:>
new  <	; Address Â£temporary1764 precision>

2481:
old  <	; Assign arg_list Â£temporary1778>
new  <	mov rsi, rbp>

2482:
old  <	mov [rbp + 32], rbx>
new  <	add rsi, 60>

2484:
old  < printArgument$100:>
new  < printArgument$95:>

2485:
old  <	; PreCall 114 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter 154 pointer Â£temporary1764>

2486:
old  <>
new  <	mov [rbp + 154], rsi>

2487:
old  < printArgument$101:>
new  <>

2488:
old  <	; Parameter 138 signedchar charValue>
new  < printArgument$96:>

2489:
old  <	mov al, [rbp + 89]>
new  <	; Call 114 checkWidthAndPrecision 0>

2490:
old  <	mov [rbp + 138], al>
new  <	mov qword [rbp + 114], printArgument$97>

2491:
old  <>
new  <	mov [rbp + 122], rbp>

2492:
old  < printArgument$102:>
new  <	add rbp, 114>

2493:
old  <	; Call 114 printChar 0>
new  <	jmp checkWidthAndPrecision>

2494:
old  <	mov qword [rbp + 114], printArgument$103>
new  <>

2495:
old  <	mov [rbp + 122], rbp>
new  < printArgument$97:>

2496:
old  <	add rbp, 114>
new  <	; PostCall 114>

2497:
old  <	jmp printChar>
new  <>

2498:
old  <>
new  < printArgument$98:>

2499:
old  < printArgument$103:>
new  <	; GetReturnValue Â£temporary1765>

2500:
old  <	; PostCall 114>
new  <>

2501:
old  <>
new  < printArgument$99:>

2502:
old  < printArgument$104:>
new  <	; Assign arg_list Â£temporary1765>

2503:
old  <	; Goto 396>
new  <	mov [rbp + 32], rbx>

2504:
old  <	jmp printArgument$396>
new  <>

2505:
old  <>
new  < printArgument$100:>

2506:
old  < printArgument$105:>
new  <	; PreCall 114 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2507:
old  <	; BinaryAdd Â£temporary1781 arg_list 8>
new  <>

2508:
old  <	mov rax, [rbp + 32]>
new  < printArgument$101:>

2509:
old  <	add rax, 8>
new  <	; Parameter 138 signedchar charValue>

2510:
old  <>
new  <	mov al, [rbp + 89]>

2511:
old  < printArgument$106:>
new  <	mov [rbp + 138], al>

2512:
old  <	; IntegralToIntegral Â£temporary1782 Â£temporary1781>
new  <>

2513:
old  <>
new  < printArgument$102:>

2514:
old  < printArgument$107:>
new  <	; Call 114 printChar 0>

2515:
old  <	; IntegralToIntegral Â£temporary1783 Â£temporary1782>
new  <	mov qword [rbp + 114], printArgument$103>

2516:
old  <	mov rbx, 4294967295>
new  <	mov [rbp + 122], rbp>

2517:
old  <	and rax, rbx>
new  <	add rbp, 114>

2518:
old  <>
new  <	jmp printChar>

2519:
old  < printArgument$108:>
new  <>

2520:
old  <	; Assign arg_list Â£temporary1783>
new  < printArgument$103:>

2521:
old  <	mov [rbp + 32], rax>
new  <	; PostCall 114>

2523:
old  < printArgument$109:>
new  < printArgument$104:>

2524:
old  <	; BinarySubtract Â£temporary1784 arg_list 8>
new  <	; Goto 396>

2525:
old  <	mov rsi, [rbp + 32]>
new  <	jmp printArgument$396>

2526:
old  <	sub rsi, 8>
new  <>

2527:
old  <>
new  < printArgument$105:>

2528:
old  < printArgument$110:>
new  <	; BinaryAdd Â£temporary1768 arg_list 8>

2529:
old  <	; IntegralToIntegral Â£temporary1786 Â£temporary1784>
new  <	mov rax, [rbp + 32]>

2530:
old  <>
new  <	add rax, 8>

2531:
old  < printArgument$111:>
new  <>

2532:
old  <	; Dereference Â£temporary1787 -> Â£temporary1786 Â£temporary1786 0>
new  < printArgument$106:>

2533:
old  <>
new  <	; IntegralToIntegral Â£temporary1769 Â£temporary1768>

2534:
old  < printArgument$112:>
new  <>

2535:
old  <	; Assign stringValue Â£temporary1787 -> Â£temporary1786>
new  < printArgument$107:>

2536:
old  <	mov rax, [rsi]>
new  <	; IntegralToIntegral Â£temporary1770 Â£temporary1769>

2537:
old  <	mov [rbp + 114], rax>
new  <	mov rbx, 4294967295>

2538:
old  <>
new  <	and rax, rbx>

2539:
old  < printArgument$113:>
new  <>

2540:
old  <	; PreCall 122 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < printArgument$108:>

2541:
old  <>
new  <	; Assign arg_list Â£temporary1770>

2542:
old  < printArgument$114:>
new  <	mov [rbp + 32], rax>

2543:
old  <	; Parameter 146 pointer arg_list>
new  <>

2544:
old  <	mov rax, [rbp + 32]>
new  < printArgument$109:>

2545:
old  <	mov [rbp + 146], rax>
new  <	; BinarySubtract Â£temporary1771 arg_list 8>

2546:
old  <>
new  <	mov rsi, [rbp + 32]>

2547:
old  < printArgument$115:>
new  <	sub rsi, 8>

2548:
old  <	; Parameter 154 pointer widthPtr>
new  <>

2549:
old  <	mov rax, [rbp + 52]>
new  < printArgument$110:>

2550:
old  <	mov [rbp + 154], rax>
new  <	; IntegralToIntegral Â£temporary1773 Â£temporary1771>

2552:
old  < printArgument$116:>
new  < printArgument$111:>

2553:
old  <	; Address Â£temporary1788 precision>
new  <	; Dereference Â£temporary1774 -> Â£temporary1773 Â£temporary1773 0>

2554:
old  <	mov rsi, rbp>
new  <>

2555:
old  <	add rsi, 60>
new  < printArgument$112:>

2556:
old  <>
new  <	; Assign stringValue Â£temporary1774 -> Â£temporary1773>

2557:
old  < printArgument$117:>
new  <	mov rax, [rsi]>

2558:
old  <	; Parameter 162 pointer Â£temporary1788>
new  <	mov [rbp + 114], rax>

2559:
old  <	mov [rbp + 162], rsi>
new  <>

2560:
old  <>
new  < printArgument$113:>

2561:
old  < printArgument$118:>
new  <	; PreCall 122 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2562:
old  <	; Call 122 checkWidthAndPrecision 0>
new  <>

2563:
old  <	mov qword [rbp + 122], printArgument$119>
new  < printArgument$114:>

2564:
old  <	mov [rbp + 130], rbp>
new  <	; Parameter 146 pointer arg_list>

2565:
old  <	add rbp, 122>
new  <	mov rax, [rbp + 32]>

2566:
old  <	jmp checkWidthAndPrecision>
new  <	mov [rbp + 146], rax>

2568:
old  < printArgument$119:>
new  < printArgument$115:>

2569:
old  <	; PostCall 122>
new  <	; Parameter 154 pointer widthPtr>

2570:
old  <>
new  <	mov rax, [rbp + 52]>

2571:
old  < printArgument$120:>
new  <	mov [rbp + 154], rax>

2572:
old  <	; GetReturnValue Â£temporary1789>
new  <>

2573:
old  <>
new  < printArgument$116:>

2574:
old  < printArgument$121:>
new  <	; Address Â£temporary1775 precision>

2575:
old  <	; Assign arg_list Â£temporary1789>
new  <	mov rsi, rbp>

2576:
old  <	mov [rbp + 32], rbx>
new  <	add rsi, 60>

2578:
old  < printArgument$122:>
new  < printArgument$117:>

2579:
old  <	; PreCall 122 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter 162 pointer Â£temporary1775>

2580:
old  <>
new  <	mov [rbp + 162], rsi>

2581:
old  < printArgument$123:>
new  <>

2582:
old  <	; Parameter 146 pointer stringValue>
new  < printArgument$118:>

2583:
old  <	mov rax, [rbp + 114]>
new  <	; Call 122 checkWidthAndPrecision 0>

2584:
old  <	mov [rbp + 146], rax>
new  <	mov qword [rbp + 122], printArgument$119>

2585:
old  <>
new  <	mov [rbp + 130], rbp>

2586:
old  < printArgument$124:>
new  <	add rbp, 122>

2587:
old  <	; Parameter 154 signedint precision>
new  <	jmp checkWidthAndPrecision>

2588:
old  <	mov eax, [rbp + 60]>
new  <>

2589:
old  <	mov [rbp + 154], eax>
new  < printArgument$119:>

2590:
old  <>
new  <	; PostCall 122>

2591:
old  < printArgument$125:>
new  <>

2592:
old  <	; Call 122 printString 0>
new  < printArgument$120:>

2593:
old  <	mov qword [rbp + 122], printArgument$126>
new  <	; GetReturnValue Â£temporary1776>

2594:
old  <	mov [rbp + 130], rbp>
new  <>

2595:
old  <	add rbp, 122>
new  < printArgument$121:>

2596:
old  <	jmp printString>
new  <	; Assign arg_list Â£temporary1776>

2597:
old  <>
new  <	mov [rbp + 32], rbx>

2598:
old  < printArgument$126:>
new  <>

2599:
old  <	; PostCall 122>
new  < printArgument$122:>

2600:
old  <>
new  <	; PreCall 122 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2601:
old  < printArgument$127:>
new  <>

2602:
old  <	; Goto 396>
new  < printArgument$123:>

2603:
old  <	jmp printArgument$396>
new  <	; Parameter 146 pointer stringValue>

2604:
old  <>
new  <	mov rax, [rbp + 114]>

2605:
old  < printArgument$128:>
new  <	mov [rbp + 146], rax>

2606:
old  <	; NotEqual 131 c 117>
new  <>

2607:
old  <	cmp byte [rbp + 88], 117>
new  < printArgument$124:>

2608:
old  <	jne printArgument$131>
new  <	; Parameter 154 signedint precision>

2609:
old  <>
new  <	mov eax, [rbp + 60]>

2610:
old  < printArgument$129:>
new  <	mov [rbp + 154], eax>

2611:
old  <	; Assign Â£temporary1796 10>
new  <>

2612:
old  <	mov rax, 10>
new  < printArgument$125:>

2613:
old  <>
new  <	; Call 122 printString 0>

2614:
old  < printArgument$130:>
new  <	mov qword [rbp + 122], printArgument$126>

2615:
old  <	; Goto 138>
new  <	mov [rbp + 130], rbp>

2616:
old  <	jmp printArgument$138>
new  <	add rbp, 122>

2617:
old  <>
new  <	jmp printString>

2618:
old  < printArgument$131:>
new  <>

2619:
old  <	; NotEqual 134 c 111>
new  < printArgument$126:>

2620:
old  <	cmp byte [rbp + 88], 111>
new  <	; PostCall 122>

2621:
old  <	jne printArgument$134>
new  <>

2622:
old  <>
new  < printArgument$127:>

2623:
old  < printArgument$132:>
new  <	; Goto 396>

2624:
old  <	; Assign Â£temporary1796 8>
new  <	jmp printArgument$396>

2625:
old  <	mov rax, 8>
new  <>

2626:
old  <>
new  < printArgument$128:>

2627:
old  < printArgument$133:>
new  <	; NotEqual 131 c 117>

2628:
old  <	; Goto 138>
new  <	cmp byte [rbp + 88], 117>

2629:
old  <	jmp printArgument$138>
new  <	jne printArgument$131>

2631:
old  < printArgument$134:>
new  < printArgument$129:>

2632:
old  <	; NotEqual 137 c 98>
new  <	; Assign Â£temporary1783 10>

2633:
old  <	cmp byte [rbp + 88], 98>
new  <	mov rax, 10>

2634:
old  <	jne printArgument$137>
new  <>

2635:
old  <>
new  < printArgument$130:>

2636:
old  < printArgument$135:>
new  <	; Goto 138>

2637:
old  <	; Assign Â£temporary1796 2>
new  <	jmp printArgument$138>

2638:
old  <	mov rax, 2>
new  <>

2639:
old  <>
new  < printArgument$131:>

2640:
old  < printArgument$136:>
new  <	; NotEqual 134 c 111>

2641:
old  <	; Goto 138>
new  <	cmp byte [rbp + 88], 111>

2642:
old  <	jmp printArgument$138>
new  <	jne printArgument$134>

2644:
old  < printArgument$137:>
new  < printArgument$132:>

2645:
old  <	; Assign Â£temporary1796 16>
new  <	; Assign Â£temporary1783 8>

2646:
old  <	mov rax, 16>
new  <	mov rax, 8>

2648:
old  < printArgument$138:>
new  < printArgument$133:>

2649:
old  <	; Assign base Â£temporary1796>
new  <	; Goto 138>

2650:
old  <	mov [rbp + 114], rax>
new  <	jmp printArgument$138>

2652:
old  < printArgument$139:>
new  < printArgument$134:>

2653:
old  <	; Equal 151 shortInt 0>
new  <	; NotEqual 137 c 98>

2654:
old  <	cmp dword [rbp + 64], 0>
new  <	cmp byte [rbp + 88], 98>

2655:
old  <	je printArgument$151>
new  <	jne printArgument$137>

2657:
old  < printArgument$140:>
new  < printArgument$135:>

2658:
old  <	; BinaryAdd Â£temporary1798 arg_list 4>
new  <	; Assign Â£temporary1783 2>

2659:
old  <	mov rax, [rbp + 32]>
new  <	mov rax, 2>

2660:
old  <	add rax, 4>
new  <>

2661:
old  <>
new  < printArgument$136:>

2662:
old  < printArgument$141:>
new  <	; Goto 138>

2663:
old  <	; IntegralToIntegral Â£temporary1799 Â£temporary1798>
new  <	jmp printArgument$138>

2665:
old  < printArgument$142:>
new  < printArgument$137:>

2666:
old  <	; IntegralToIntegral Â£temporary1800 Â£temporary1799>
new  <	; Assign Â£temporary1783 16>

2667:
old  <	mov rbx, 4294967295>
new  <	mov rax, 16>

2668:
old  <	and rax, rbx>
new  <>

2669:
old  <>
new  < printArgument$138:>

2670:
old  < printArgument$143:>
new  <	; Assign base Â£temporary1783>

2671:
old  <	; Assign arg_list Â£temporary1800>
new  <	mov [rbp + 114], rax>

2672:
old  <	mov [rbp + 32], rax>
new  <>

2673:
old  <>
new  < printArgument$139:>

2674:
old  < printArgument$144:>
new  <	; Equal 151 shortInt 0>

2675:
old  <	; BinarySubtract Â£temporary1801 arg_list 4>
new  <	cmp dword [rbp + 64], 0>

2676:
old  <	mov rsi, [rbp + 32]>
new  <	je printArgument$151>

2677:
old  <	sub rsi, 4>
new  <>

2678:
old  <>
new  < printArgument$140:>

2679:
old  < printArgument$145:>
new  <	; BinaryAdd Â£temporary1785 arg_list 4>

2680:
old  <	; IntegralToIntegral Â£temporary1803 Â£temporary1801>
new  <	mov rax, [rbp + 32]>

2681:
old  <>
new  <	add rax, 4>

2682:
old  < printArgument$146:>
new  <>

2683:
old  <	; Dereference Â£temporary1804 -> Â£temporary1803 Â£temporary1803 0>
new  < printArgument$141:>

2684:
old  <>
new  <	; IntegralToIntegral Â£temporary1786 Â£temporary1785>

2685:
old  < printArgument$147:>
new  <>

2686:
old  <	; IntegralToIntegral Â£temporary1805 Â£temporary1804 -> Â£temporary1803>
new  < printArgument$142:>

2687:
old  <	mov eax, [rsi]>
new  <	; IntegralToIntegral Â£temporary1787 Â£temporary1786>

2688:
old  <>
new  <	mov rbx, 4294967295>

2689:
old  < printArgument$148:>
new  <	and rax, rbx>

2690:
old  <	; IntegralToIntegral Â£temporary1806 Â£temporary1805>
new  <>

2691:
old  <	mov rbx, 65535>
new  < printArgument$143:>

2692:
old  <	and rax, rbx>
new  <	; Assign arg_list Â£temporary1787>

2693:
old  <>
new  <	mov [rbp + 32], rax>

2694:
old  < printArgument$149:>
new  <>

2695:
old  <	; Assign value Â£temporary1806>
new  < printArgument$144:>

2696:
old  <	mov [rbp + 122], rax>
new  <	; BinarySubtract Â£temporary1788 arg_list 4>

2697:
old  <>
new  <	mov rsi, [rbp + 32]>

2698:
old  < printArgument$150:>
new  <	sub rsi, 4>

2699:
old  <	; Goto 170>
new  <>

2700:
old  <	jmp printArgument$170>
new  < printArgument$145:>

2701:
old  <>
new  <	; IntegralToIntegral Â£temporary1790 Â£temporary1788>

2702:
old  < printArgument$151:>
new  <>

2703:
old  <	; Equal 161 longInt 0>
new  < printArgument$146:>

2704:
old  <	cmp dword [rbp + 68], 0>
new  <	; Dereference Â£temporary1791 -> Â£temporary1790 Â£temporary1790 0>

2705:
old  <	je printArgument$161>
new  <>

2706:
old  <>
new  < printArgument$147:>

2707:
old  < printArgument$152:>
new  <	; IntegralToIntegral Â£temporary1792 Â£temporary1791 -> Â£temporary1790>

2708:
old  <	; BinaryAdd Â£temporary1808 arg_list 8>
new  <	mov eax, [rsi]>

2709:
old  <	mov rax, [rbp + 32]>
new  <>

2710:
old  <	add rax, 8>
new  < printArgument$148:>

2711:
old  <>
new  <	; IntegralToIntegral Â£temporary1793 Â£temporary1792>

2712:
old  < printArgument$153:>
new  <	mov rbx, 65535>

2713:
old  <	; IntegralToIntegral Â£temporary1809 Â£temporary1808>
new  <	and rax, rbx>

2715:
old  < printArgument$154:>
new  < printArgument$149:>

2716:
old  <	; IntegralToIntegral Â£temporary1810 Â£temporary1809>
new  <	; Assign value Â£temporary1793>

2717:
old  <	mov rbx, 4294967295>
new  <	mov [rbp + 122], rax>

2718:
old  <	and rax, rbx>
new  <>

2719:
old  <>
new  < printArgument$150:>

2720:
old  < printArgument$155:>
new  <	; Goto 170>

2721:
old  <	; Assign arg_list Â£temporary1810>
new  <	jmp printArgument$170>

2722:
old  <	mov [rbp + 32], rax>
new  <>

2723:
old  <>
new  < printArgument$151:>

2724:
old  < printArgument$156:>
new  <	; Equal 161 longInt 0>

2725:
old  <	; BinarySubtract Â£temporary1811 arg_list 8>
new  <	cmp dword [rbp + 68], 0>

2726:
old  <	mov rsi, [rbp + 32]>
new  <	je printArgument$161>

2727:
old  <	sub rsi, 8>
new  <>

2728:
old  <>
new  < printArgument$152:>

2729:
old  < printArgument$157:>
new  <	; BinaryAdd Â£temporary1795 arg_list 8>

2730:
old  <	; IntegralToIntegral Â£temporary1813 Â£temporary1811>
new  <	mov rax, [rbp + 32]>

2731:
old  <>
new  <	add rax, 8>

2732:
old  < printArgument$158:>
new  <>

2733:
old  <	; Dereference Â£temporary1814 -> Â£temporary1813 Â£temporary1813 0>
new  < printArgument$153:>

2734:
old  <>
new  <	; IntegralToIntegral Â£temporary1796 Â£temporary1795>

2735:
old  < printArgument$159:>
new  <>

2736:
old  <	; Assign value Â£temporary1814 -> Â£temporary1813>
new  < printArgument$154:>

2737:
old  <	mov rax, [rsi]>
new  <	; IntegralToIntegral Â£temporary1797 Â£temporary1796>

2738:
old  <	mov [rbp + 122], rax>
new  <	mov rbx, 4294967295>

2739:
old  <>
new  <	and rax, rbx>

2740:
old  < printArgument$160:>
new  <>

2741:
old  <	; Goto 170>
new  < printArgument$155:>

2742:
old  <	jmp printArgument$170>
new  <	; Assign arg_list Â£temporary1797>

2743:
old  <>
new  <	mov [rbp + 32], rax>

2744:
old  < printArgument$161:>
new  <>

2745:
old  <	; BinaryAdd Â£temporary1816 arg_list 4>
new  < printArgument$156:>

2746:
old  <	mov rax, [rbp + 32]>
new  <	; BinarySubtract Â£temporary1798 arg_list 8>

2747:
old  <	add rax, 4>
new  <	mov rsi, [rbp + 32]>

2748:
old  <>
new  <	sub rsi, 8>

2749:
old  < printArgument$162:>
new  <>

2750:
old  <	; IntegralToIntegral Â£temporary1817 Â£temporary1816>
new  < printArgument$157:>

2751:
old  <>
new  <	; IntegralToIntegral Â£temporary1800 Â£temporary1798>

2752:
old  < printArgument$163:>
new  <>

2753:
old  <	; IntegralToIntegral Â£temporary1818 Â£temporary1817>
new  < printArgument$158:>

2754:
old  <	mov rbx, 4294967295>
new  <	; Dereference Â£temporary1801 -> Â£temporary1800 Â£temporary1800 0>

2755:
old  <	and rax, rbx>
new  <>

2756:
old  <>
new  < printArgument$159:>

2757:
old  < printArgument$164:>
new  <	; Assign value Â£temporary1801 -> Â£temporary1800>

2758:
old  <	; Assign arg_list Â£temporary1818>
new  <	mov rax, [rsi]>

2759:
old  <	mov [rbp + 32], rax>
new  <	mov [rbp + 122], rax>

2761:
old  < printArgument$165:>
new  < printArgument$160:>

2762:
old  <	; BinarySubtract Â£temporary1819 arg_list 4>
new  <	; Goto 170>

2763:
old  <	mov rsi, [rbp + 32]>
new  <	jmp printArgument$170>

2764:
old  <	sub rsi, 4>
new  <>

2765:
old  <>
new  < printArgument$161:>

2766:
old  < printArgument$166:>
new  <	; BinaryAdd Â£temporary1803 arg_list 4>

2767:
old  <	; IntegralToIntegral Â£temporary1821 Â£temporary1819>
new  <	mov rax, [rbp + 32]>

2768:
old  <>
new  <	add rax, 4>

2769:
old  < printArgument$167:>
new  <>

2770:
old  <	; Dereference Â£temporary1822 -> Â£temporary1821 Â£temporary1821 0>
new  < printArgument$162:>

2771:
old  <>
new  <	; IntegralToIntegral Â£temporary1804 Â£temporary1803>

2772:
old  < printArgument$168:>
new  <>

2773:
old  <	; IntegralToIntegral Â£temporary1823 Â£temporary1822 -> Â£temporary1821>
new  < printArgument$163:>

2774:
old  <	mov eax, [rsi]>
new  <	; IntegralToIntegral Â£temporary1805 Â£temporary1804>

2778:
old  < printArgument$169:>
new  < printArgument$164:>

2779:
old  <	; Assign value Â£temporary1823>
new  <	; Assign arg_list Â£temporary1805>

2780:
old  <	mov [rbp + 122], rax>
new  <	mov [rbp + 32], rax>

2782:
old  < printArgument$170:>
new  < printArgument$165:>

2783:
old  <	; PreCall 130 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; BinarySubtract Â£temporary1806 arg_list 4>

2784:
old  <>
new  <	mov rsi, [rbp + 32]>

2785:
old  < printArgument$171:>
new  <	sub rsi, 4>

2786:
old  <	; Parameter 154 pointer arg_list>
new  <>

2787:
old  <	mov rax, [rbp + 32]>
new  < printArgument$166:>

2788:
old  <	mov [rbp + 154], rax>
new  <	; IntegralToIntegral Â£temporary1808 Â£temporary1806>

2790:
old  < printArgument$172:>
new  < printArgument$167:>

2791:
old  <	; Parameter 162 pointer widthPtr>
new  <	; Dereference Â£temporary1809 -> Â£temporary1808 Â£temporary1808 0>

2792:
old  <	mov rax, [rbp + 52]>
new  <>

2793:
old  <	mov [rbp + 162], rax>
new  < printArgument$168:>

2794:
old  <>
new  <	; IntegralToIntegral Â£temporary1810 Â£temporary1809 -> Â£temporary1808>

2795:
old  < printArgument$173:>
new  <	mov eax, [rsi]>

2796:
old  <	; Address Â£temporary1826 precision>
new  <	mov rbx, 4294967295>

2797:
old  <	mov rsi, rbp>
new  <	and rax, rbx>

2798:
old  <	add rsi, 60>
new  <>

2799:
old  <>
new  < printArgument$169:>

2800:
old  < printArgument$174:>
new  <	; Assign value Â£temporary1810>

2801:
old  <	; Parameter 170 pointer Â£temporary1826>
new  <	mov [rbp + 122], rax>

2802:
old  <	mov [rbp + 170], rsi>
new  <>

2803:
old  <>
new  < printArgument$170:>

2804:
old  < printArgument$175:>
new  <	; PreCall 130 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2805:
old  <	; Call 130 checkWidthAndPrecision 0>
new  <>

2806:
old  <	mov qword [rbp + 130], printArgument$176>
new  < printArgument$171:>

2807:
old  <	mov [rbp + 138], rbp>
new  <	; Parameter 154 pointer arg_list>

2808:
old  <	add rbp, 130>
new  <	mov rax, [rbp + 32]>

2809:
old  <	jmp checkWidthAndPrecision>
new  <	mov [rbp + 154], rax>

2811:
old  < printArgument$176:>
new  < printArgument$172:>

2812:
old  <	; PostCall 130>
new  <	; Parameter 162 pointer widthPtr>

2813:
old  <>
new  <	mov rax, [rbp + 52]>

2814:
old  < printArgument$177:>
new  <	mov [rbp + 162], rax>

2815:
old  <	; GetReturnValue Â£temporary1827>
new  <>

2816:
old  <>
new  < printArgument$173:>

2817:
old  < printArgument$178:>
new  <	; Address Â£temporary1813 precision>

2818:
old  <	; Assign arg_list Â£temporary1827>
new  <	mov rsi, rbp>

2819:
old  <	mov [rbp + 32], rbx>
new  <	add rsi, 60>

2821:
old  < printArgument$179:>
new  < printArgument$174:>

2822:
old  <	; PreCall 130 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter 170 pointer Â£temporary1813>

2823:
old  <>
new  <	mov [rbp + 170], rsi>

2824:
old  < printArgument$180:>
new  <>

2825:
old  <	; Parameter 154 unsignedlongint value>
new  < printArgument$175:>

2826:
old  <	mov rax, [rbp + 122]>
new  <	; Call 130 checkWidthAndPrecision 0>

2827:
old  <	mov [rbp + 154], rax>
new  <	mov qword [rbp + 130], printArgument$176>

2828:
old  <>
new  <	mov [rbp + 138], rbp>

2829:
old  < printArgument$181:>
new  <	add rbp, 130>

2830:
old  <	; Parameter 162 signedint plus>
new  <	jmp checkWidthAndPrecision>

2831:
old  <	mov eax, [rbp + 40]>
new  <>

2832:
old  <	mov [rbp + 162], eax>
new  < printArgument$176:>

2833:
old  <>
new  <	; PostCall 130>

2834:
old  < printArgument$182:>
new  <>

2835:
old  <	; Parameter 166 signedint space>
new  < printArgument$177:>

2836:
old  <	mov eax, [rbp + 44]>
new  <	; GetReturnValue Â£temporary1814>

2837:
old  <	mov [rbp + 166], eax>
new  <>

2838:
old  <>
new  < printArgument$178:>

2839:
old  < printArgument$183:>
new  <	; Assign arg_list Â£temporary1814>

2840:
old  <	; Parameter 170 signedint grid>
new  <	mov [rbp + 32], rbx>

2841:
old  <	mov eax, [rbp + 48]>
new  <>

2842:
old  <	mov [rbp + 170], eax>
new  < printArgument$179:>

2843:
old  <>
new  <	; PreCall 130 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2844:
old  < printArgument$184:>
new  <>

2845:
old  <	; Parameter 174 unsignedlongint base>
new  < printArgument$180:>

2846:
old  <	mov rax, [rbp + 114]>
new  <	; Parameter 154 unsignedlongint value>

2847:
old  <	mov [rbp + 174], rax>
new  <	mov rax, [rbp + 122]>

2848:
old  <>
new  <	mov [rbp + 154], rax>

2849:
old  < printArgument$185:>
new  <>

2850:
old  <	; PreCall 130 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < printArgument$181:>

2851:
old  <>
new  <	; Parameter 162 signedint plus>

2852:
old  < printArgument$186:>
new  <	mov eax, [rbp + 40]>

2853:
old  <	; IntegralToIntegral Â£temporary1828 c>
new  <	mov [rbp + 162], eax>

2854:
old  <	mov al, [rbp + 88]>
new  <>

2855:
old  <	and eax, 255>
new  < printArgument$182:>

2856:
old  <	cmp al, 0>
new  <	; Parameter 166 signedint space>

2857:
old  <	jge printArgument$187>
new  <	mov eax, [rbp + 44]>

2858:
old  <	neg al>
new  <	mov [rbp + 166], eax>

2859:
old  <	neg eax>
new  <>

2860:
old  <>
new  < printArgument$183:>

2861:
old  < printArgument$187:>
new  <	; Parameter 170 signedint grid>

2862:
old  <	; Parameter 206 signedint Â£temporary1828>
new  <	mov eax, [rbp + 48]>

2863:
old  <	mov [rbp + 206], eax>
new  <	mov [rbp + 170], eax>

2865:
old  < printArgument$188:>
new  < printArgument$184:>

2866:
old  <	; Call 182 isupper 0>
new  <	; Parameter 174 unsignedlongint base>

2867:
old  <	mov qword [rbp + 182], printArgument$189>
new  <	mov rax, [rbp + 114]>

2868:
old  <	mov [rbp + 190], rbp>
new  <	mov [rbp + 174], rax>

2869:
old  <	add rbp, 182>
new  <>

2870:
old  <	jmp isupper>
new  < printArgument$185:>

2871:
old  <>
new  <	; PreCall 130 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2872:
old  < printArgument$189:>
new  <>

2873:
old  <	; PostCall 182>
new  < printArgument$186:>

2874:
old  <>
new  <	; IntegralToIntegral Â£temporary1815 c>

2875:
old  < printArgument$190:>
new  <	mov al, [rbp + 88]>

2876:
old  <	; GetReturnValue Â£temporary1829>
new  <	and eax, 255>

2877:
old  <>
new  <	cmp al, 0>

2878:
old  < printArgument$191:>
new  <	jge printArgument$187>

2879:
old  <	; Parameter 182 signedint Â£temporary1829>
new  <	neg al>

2880:
old  <	mov [rbp + 182], ebx>
new  <	neg eax>

2882:
old  < printArgument$192:>
new  < printArgument$187:>

2883:
old  <	; Call 130 printUnsignedLong 0>
new  <	; Parameter 206 signedint Â£temporary1815>

2884:
old  <	mov qword [rbp + 130], printArgument$193>
new  <	mov [rbp + 206], eax>

2885:
old  <	mov [rbp + 138], rbp>
new  <>

2886:
old  <	add rbp, 130>
new  < printArgument$188:>

2887:
old  <	jmp printUnsignedLong>
new  <	; Call 182 isupper 0>

2888:
old  <>
new  <	mov qword [rbp + 182], printArgument$189>

2889:
old  < printArgument$193:>
new  <	mov [rbp + 190], rbp>

2890:
old  <	; PostCall 130>
new  <	add rbp, 182>

2891:
old  <>
new  <	jmp isupper>

2892:
old  < printArgument$194:>
new  <>

2893:
old  <	; Goto 396>
new  < printArgument$189:>

2894:
old  <	jmp printArgument$396>
new  <	; PostCall 182>

2896:
old  < printArgument$195:>
new  < printArgument$190:>

2897:
old  <	; Equal 215 longDouble 0>
new  <	; GetReturnValue Â£temporary1816>

2898:
old  <	cmp dword [rbp + 72], 0>
new  <>

2899:
old  <	je printArgument$215>
new  < printArgument$191:>

2900:
old  <>
new  <	; Parameter 182 signedint Â£temporary1816>

2901:
old  < printArgument$196:>
new  <	mov [rbp + 182], ebx>

2902:
old  <	; BinaryAdd Â£temporary1832 arg_list 8>
new  <>

2903:
old  <	mov rax, [rbp + 32]>
new  < printArgument$192:>

2904:
old  <	add rax, 8>
new  <	; Call 130 printUnsignedLong 0>

2905:
old  <>
new  <	mov qword [rbp + 130], printArgument$193>

2906:
old  < printArgument$197:>
new  <	mov [rbp + 138], rbp>

2907:
old  <	; IntegralToIntegral Â£temporary1833 Â£temporary1832>
new  <	add rbp, 130>

2908:
old  <>
new  <	jmp printUnsignedLong>

2909:
old  < printArgument$198:>
new  <>

2910:
old  <	; IntegralToIntegral Â£temporary1834 Â£temporary1833>
new  < printArgument$193:>

2911:
old  <	mov rbx, 4294967295>
new  <	; PostCall 130>

2912:
old  <	and rax, rbx>
new  <>

2913:
old  <>
new  < printArgument$194:>

2914:
old  < printArgument$199:>
new  <	; Goto 396>

2915:
old  <	; Assign arg_list Â£temporary1834>
new  <	jmp printArgument$396>

2916:
old  <	mov [rbp + 32], rax>
new  <>

2917:
old  <>
new  < printArgument$195:>

2918:
old  < printArgument$200:>
new  <	; Equal 215 longDouble 0>

2919:
old  <	; BinarySubtract Â£temporary1835 arg_list 8>
new  <	cmp dword [rbp + 72], 0>

2920:
old  <	mov rsi, [rbp + 32]>
new  <	je printArgument$215>

2921:
old  <	sub rsi, 8>
new  <>

2922:
old  <>
new  < printArgument$196:>

2923:
old  < printArgument$201:>
new  <	; BinaryAdd Â£temporary1819 arg_list 8>

2924:
old  <	; IntegralToIntegral Â£temporary1837 Â£temporary1835>
new  <	mov rax, [rbp + 32]>

2925:
old  <>
new  <	add rax, 8>

2926:
old  < printArgument$202:>
new  <>

2927:
old  <	; Dereference Â£temporary1838 -> Â£temporary1837 Â£temporary1837 0>
new  < printArgument$197:>

2928:
old  <>
new  <	; IntegralToIntegral Â£temporary1820 Â£temporary1819>

2929:
old  < printArgument$203:>
new  <>

2930:
old  <	; PushFloat Â£temporary1838 -> Â£temporary1837>
new  < printArgument$198:>

2931:
old  <	fld qword [rsi]>
new  <	; IntegralToIntegral Â£temporary1821 Â£temporary1820>

2932:
old  <>
new  <	mov rbx, 4294967295>

2933:
old  < printArgument$204:>
new  <	and rax, rbx>

2934:
old  <	; PopFloat longDoubleValue>
new  <>

2935:
old  <	fstp qword [rbp + 98]>
new  < printArgument$199:>

2936:
old  <>
new  <	; Assign arg_list Â£temporary1821>

2937:
old  < printArgument$205:>
new  <	mov [rbp + 32], rax>

2938:
old  <	; PreCall 114 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

2939:
old  <>
new  < printArgument$200:>

2940:
old  < printArgument$206:>
new  <	; BinarySubtract Â£temporary1822 arg_list 8>

2941:
old  <	; PushFloat longDoubleValue>
new  <	mov rsi, [rbp + 32]>

2942:
old  <	fld qword [rbp + 98]>
new  <	sub rsi, 8>

2944:
old  < printArgument$207:>
new  < printArgument$201:>

2945:
old  <	; Parameter 138 longdouble longDoubleValue>
new  <	; IntegralToIntegral Â£temporary1824 Â£temporary1822>

2946:
old  <	fstp qword [rbp + 138]>
new  <>

2947:
old  <>
new  < printArgument$202:>

2948:
old  < printArgument$208:>
new  <	; Dereference Â£temporary1825 -> Â£temporary1824 Â£temporary1824 0>

2949:
old  <	; Parameter 146 signedint 0>
new  <>

2950:
old  <	mov dword [rbp + 146], 0>
new  < printArgument$203:>

2951:
old  <>
new  <	; PushFloat Â£temporary1825 -> Â£temporary1824>

2952:
old  < printArgument$209:>
new  <	fld qword [rsi]>

2953:
old  <	; Parameter 150 signedint 0>
new  <>

2954:
old  <	mov dword [rbp + 150], 0>
new  < printArgument$204:>

2955:
old  <>
new  <	; PopFloat longDoubleValue>

2956:
old  < printArgument$210:>
new  <	fstp qword [rbp + 98]>

2957:
old  <	; Parameter 154 signedint 0>
new  <>

2958:
old  <	mov dword [rbp + 154], 0>
new  < printArgument$205:>

2959:
old  <>
new  <	; PreCall 114 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2960:
old  < printArgument$211:>
new  <>

2961:
old  <	; Parameter 158 signedint 3>
new  < printArgument$206:>

2962:
old  <	mov dword [rbp + 158], 3>
new  <	; PushFloat longDoubleValue>

2963:
old  <>
new  <	fld qword [rbp + 98]>

2964:
old  < printArgument$212:>
new  <>

2965:
old  <	; Call 114 printLongDoublePlain 0>
new  < printArgument$207:>

2966:
old  <	mov qword [rbp + 114], printArgument$213>
new  <	; Parameter 138 longdouble longDoubleValue>

2967:
old  <	mov [rbp + 122], rbp>
new  <	fstp qword [rbp + 138]>

2968:
old  <	add rbp, 114>
new  <>

2969:
old  <	jmp printLongDoublePlain>
new  < printArgument$208:>

2970:
old  <>
new  <	; Parameter 146 signedint 0>

2971:
old  < printArgument$213:>
new  <	mov dword [rbp + 146], 0>

2972:
old  <	; PostCall 114>
new  <>

2973:
old  <>
new  < printArgument$209:>

2974:
old  < printArgument$214:>
new  <	; Parameter 150 signedint 0>

2975:
old  <	; Goto 224>
new  <	mov dword [rbp + 150], 0>

2976:
old  <	jmp printArgument$224>
new  <>

2977:
old  <>
new  < printArgument$210:>

2978:
old  < printArgument$215:>
new  <	; Parameter 154 signedint 0>

2979:
old  <	; BinaryAdd Â£temporary1841 arg_list 8>
new  <	mov dword [rbp + 154], 0>

2980:
old  <	mov rax, [rbp + 32]>
new  <>

2981:
old  <	add rax, 8>
new  < printArgument$211:>

2982:
old  <>
new  <	; Parameter 158 signedint 3>

2983:
old  < printArgument$216:>
new  <	mov dword [rbp + 158], 3>

2984:
old  <	; IntegralToIntegral Â£temporary1842 Â£temporary1841>
new  <>

2985:
old  <>
new  < printArgument$212:>

2986:
old  < printArgument$217:>
new  <	; Call 114 printLongDoublePlain 0>

2987:
old  <	; IntegralToIntegral Â£temporary1843 Â£temporary1842>
new  <	mov qword [rbp + 114], printArgument$213>

2988:
old  <	mov rbx, 4294967295>
new  <	mov [rbp + 122], rbp>

2989:
old  <	and rax, rbx>
new  <	add rbp, 114>

2990:
old  <>
new  <	jmp printLongDoublePlain>

2991:
old  < printArgument$218:>
new  <>

2992:
old  <	; Assign arg_list Â£temporary1843>
new  < printArgument$213:>

2993:
old  <	mov [rbp + 32], rax>
new  <	; PostCall 114>

2995:
old  < printArgument$219:>
new  < printArgument$214:>

2996:
old  <	; BinarySubtract Â£temporary1844 arg_list 8>
new  <	; Goto 224>

2997:
old  <	mov rsi, [rbp + 32]>
new  <	jmp printArgument$224>

2998:
old  <	sub rsi, 8>
new  <>

2999:
old  <>
new  < printArgument$215:>

3000:
old  < printArgument$220:>
new  <	; BinaryAdd Â£temporary1828 arg_list 8>

3001:
old  <	; IntegralToIntegral Â£temporary1846 Â£temporary1844>
new  <	mov rax, [rbp + 32]>

3002:
old  <>
new  <	add rax, 8>

3003:
old  < printArgument$221:>
new  <>

3004:
old  <	; Dereference Â£temporary1847 -> Â£temporary1846 Â£temporary1846 0>
new  < printArgument$216:>

3005:
old  <>
new  <	; IntegralToIntegral Â£temporary1829 Â£temporary1828>

3006:
old  < printArgument$222:>
new  <>

3007:
old  <	; PushFloat Â£temporary1847 -> Â£temporary1846>
new  < printArgument$217:>

3008:
old  <	fld qword [rsi]>
new  <	; IntegralToIntegral Â£temporary1830 Â£temporary1829>

3009:
old  <>
new  <	mov rbx, 4294967295>

3010:
old  < printArgument$223:>
new  <	and rax, rbx>

3011:
old  <	; PopFloat longDoubleValue>
new  <>

3012:
old  <	fstp qword [rbp + 98]>
new  < printArgument$218:>

3013:
old  <>
new  <	; Assign arg_list Â£temporary1830>

3014:
old  < printArgument$224:>
new  <	mov [rbp + 32], rax>

3015:
old  <	; Equal 233 negativePtr 0>
new  <>

3016:
old  <	cmp qword [rbp + 80], 0>
new  < printArgument$219:>

3017:
old  <	je printArgument$233>
new  <	; BinarySubtract Â£temporary1831 arg_list 8>

3018:
old  <>
new  <	mov rsi, [rbp + 32]>

3019:
old  < printArgument$225:>
new  <	sub rsi, 8>

3020:
old  <	; Dereference Â£temporary1851 -> negativePtr negativePtr 0>
new  <>

3021:
old  <	mov rsi, [rbp + 80]>
new  < printArgument$220:>

3022:
old  <>
new  <	; IntegralToIntegral Â£temporary1833 Â£temporary1831>

3023:
old  < printArgument$226:>
new  <>

3024:
old  <	; PushFloat longDoubleValue>
new  < printArgument$221:>

3025:
old  <	fld qword [rbp + 98]>
new  <	; Dereference Â£temporary1834 -> Â£temporary1833 Â£temporary1833 0>

3027:
old  < printArgument$227:>
new  < printArgument$222:>

3028:
old  <	; PushFloat 0>
new  <	; PushFloat Â£temporary1834 -> Â£temporary1833>

3029:
old  <	fldz>
new  <	fld qword [rsi]>

3031:
old  < printArgument$228:>
new  < printArgument$223:>

3032:
old  <	; SignedGreaterThanEqual 231 longDoubleValue 0>
new  <	; PopFloat longDoubleValue>

3033:
old  <	fcompp>
new  <	fstp qword [rbp + 98]>

3034:
old  <	fstsw ax>
new  <>

3035:
old  <	sahf>
new  < printArgument$224:>

3036:
old  <	jbe printArgument$231>
new  <	; Equal 233 negativePtr 0>

3037:
old  <>
new  <	cmp qword [rbp + 80], 0>

3038:
old  < printArgument$229:>
new  <	je printArgument$233>

3039:
old  <	; Assign Â£temporary1853 1>
new  <>

3040:
old  <	mov eax, 1>
new  < printArgument$225:>

3041:
old  <>
new  <	; Dereference Â£temporary1838 -> negativePtr negativePtr 0>

3042:
old  < printArgument$230:>
new  <	mov rsi, [rbp + 80]>

3043:
old  <	; Goto 232>
new  <>

3044:
old  <	jmp printArgument$232>
new  < printArgument$226:>

3045:
old  <>
new  <	; PushFloat longDoubleValue>

3046:
old  < printArgument$231:>
new  <	fld qword [rbp + 98]>

3047:
old  <	; Assign Â£temporary1853 0>
new  <>

3048:
old  <	mov eax, 0>
new  < printArgument$227:>

3049:
old  <>
new  <	; PushFloat 0>

3050:
old  < printArgument$232:>
new  <	fldz>

3051:
old  <	; Assign Â£temporary1851 -> negativePtr Â£temporary1853>
new  <>

3052:
old  <	mov [rsi], eax>
new  < printArgument$228:>

3053:
old  <>
new  <	; SignedGreaterThanEqual 231 longDoubleValue 0>

3054:
old  < printArgument$233:>
new  <	fcompp>

3055:
old  <	; NotEqual 241 sign 0>
new  <	fstsw ax>

3056:
old  <	cmp dword [rbp + 76], 0>
new  <	sahf>

3057:
old  <	jne printArgument$241>
new  <	jbe printArgument$231>

3059:
old  < printArgument$234:>
new  < printArgument$229:>

3060:
old  <	; PreCall 114 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Assign Â£temporary1840 1>

3061:
old  <>
new  <	mov eax, 1>

3062:
old  < printArgument$235:>
new  <>

3063:
old  <	; PushFloat longDoubleValue>
new  < printArgument$230:>

3064:
old  <	fld qword [rbp + 98]>
new  <	; Goto 232>

3065:
old  <>
new  <	jmp printArgument$232>

3066:
old  < printArgument$236:>
new  <>

3067:
old  <	; Parameter 138 double longDoubleValue>
new  < printArgument$231:>

3068:
old  <	fstp qword [rbp + 138]>
new  <	; Assign Â£temporary1840 0>

3069:
old  <>
new  <	mov eax, 0>

3070:
old  < printArgument$237:>
new  <>

3071:
old  <	; Call 114 fabs 0>
new  < printArgument$232:>

3072:
old  <	mov qword [rbp + 114], printArgument$238>
new  <	; Assign Â£temporary1838 -> negativePtr Â£temporary1840>

3073:
old  <	mov [rbp + 122], rbp>
new  <	mov [rsi], eax>

3074:
old  <	add rbp, 114>
new  <>

3075:
old  <	jmp fabs>
new  < printArgument$233:>

3076:
old  <>
new  <	; NotEqual 241 sign 0>

3077:
old  < printArgument$238:>
new  <	cmp dword [rbp + 76], 0>

3078:
old  <	; PostCall 114>
new  <	jne printArgument$241>

3080:
old  < printArgument$239:>
new  < printArgument$234:>

3081:
old  <	; GetReturnValue Â£temporary1856>
new  <	; PreCall 114 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3083:
old  < printArgument$240:>
new  < printArgument$235:>

3084:
old  <	; PopFloat longDoubleValue>
new  <	; PushFloat longDoubleValue>

3085:
old  <	fstp qword [rbp + 98]>
new  <	fld qword [rbp + 98]>

3087:
old  < printArgument$241:>
new  < printArgument$236:>

3088:
old  <	; PreCall 114 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter 138 double longDoubleValue>

3089:
old  <>
new  <	fstp qword [rbp + 138]>

3090:
old  < printArgument$242:>
new  <>

3091:
old  <	; Parameter 138 pointer arg_list>
new  < printArgument$237:>

3092:
old  <	mov rax, [rbp + 32]>
new  <	; Call 114 fabs 0>

3093:
old  <	mov [rbp + 138], rax>
new  <	mov qword [rbp + 114], printArgument$238>

3094:
old  <>
new  <	mov [rbp + 122], rbp>

3095:
old  < printArgument$243:>
new  <	add rbp, 114>

3096:
old  <	; Parameter 146 pointer widthPtr>
new  <	jmp fabs>

3097:
old  <	mov rax, [rbp + 52]>
new  <>

3098:
old  <	mov [rbp + 146], rax>
new  < printArgument$238:>

3099:
old  <>
new  <	; PostCall 114>

3100:
old  < printArgument$244:>
new  <>

3101:
old  <	; Address Â£temporary1857 precision>
new  < printArgument$239:>

3102:
old  <	mov rsi, rbp>
new  <	; GetReturnValue Â£temporary1843>

3103:
old  <	add rsi, 60>
new  <>

3104:
old  <>
new  < printArgument$240:>

3105:
old  < printArgument$245:>
new  <	; PopFloat longDoubleValue>

3106:
old  <	; Parameter 154 pointer Â£temporary1857>
new  <	fstp qword [rbp + 98]>

3107:
old  <	mov [rbp + 154], rsi>
new  <>

3108:
old  <>
new  < printArgument$241:>

3109:
old  < printArgument$246:>
new  <	; PreCall 114 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3110:
old  <	; Call 114 checkWidthAndPrecision 0>
new  <>

3111:
old  <	mov qword [rbp + 114], printArgument$247>
new  < printArgument$242:>

3112:
old  <	mov [rbp + 122], rbp>
new  <	; Parameter 138 pointer arg_list>

3113:
old  <	add rbp, 114>
new  <	mov rax, [rbp + 32]>

3114:
old  <	jmp checkWidthAndPrecision>
new  <	mov [rbp + 138], rax>

3116:
old  < printArgument$247:>
new  < printArgument$243:>

3117:
old  <	; PostCall 114>
new  <	; Parameter 146 pointer widthPtr>

3118:
old  <>
new  <	mov rax, [rbp + 52]>

3119:
old  < printArgument$248:>
new  <	mov [rbp + 146], rax>

3120:
old  <	; GetReturnValue Â£temporary1858>
new  <>

3121:
old  <>
new  < printArgument$244:>

3122:
old  < printArgument$249:>
new  <	; Address Â£temporary1844 precision>

3123:
old  <	; Assign arg_list Â£temporary1858>
new  <	mov rsi, rbp>

3124:
old  <	mov [rbp + 32], rbx>
new  <	add rsi, 60>

3126:
old  < printArgument$250:>
new  < printArgument$245:>

3127:
old  <	; NotEqual 261 c 102>
new  <	; Parameter 154 pointer Â£temporary1844>

3128:
old  <	cmp byte [rbp + 88], 102>
new  <	mov [rbp + 154], rsi>

3129:
old  <	jne printArgument$261>
new  <>

3130:
old  <>
new  < printArgument$246:>

3131:
old  < printArgument$251:>
new  <	; Call 114 checkWidthAndPrecision 0>

3132:
old  <	; PreCall 114 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov qword [rbp + 114], printArgument$247>

3133:
old  <>
new  <	mov [rbp + 122], rbp>

3134:
old  < printArgument$252:>
new  <	add rbp, 114>

3135:
old  <	; PushFloat longDoubleValue>
new  <	jmp checkWidthAndPrecision>

3136:
old  <	fld qword [rbp + 98]>
new  <>

3137:
old  <>
new  < printArgument$247:>

3138:
old  < printArgument$253:>
new  <	; PostCall 114>

3139:
old  <	; Parameter 138 longdouble longDoubleValue>
new  <>

3140:
old  <	fstp qword [rbp + 138]>
new  < printArgument$248:>

3141:
old  <>
new  <	; GetReturnValue Â£temporary1845>

3142:
old  < printArgument$254:>
new  <>

3143:
old  <	; Parameter 146 signedint plus>
new  < printArgument$249:>

3144:
old  <	mov eax, [rbp + 40]>
new  <	; Assign arg_list Â£temporary1845>

3145:
old  <	mov [rbp + 146], eax>
new  <	mov [rbp + 32], rbx>

3147:
old  < printArgument$255:>
new  < printArgument$250:>

3148:
old  <	; Parameter 150 signedint space>
new  <	; NotEqual 261 c 102>

3149:
old  <	mov eax, [rbp + 44]>
new  <	cmp byte [rbp + 88], 102>

3150:
old  <	mov [rbp + 150], eax>
new  <	jne printArgument$261>

3152:
old  < printArgument$256:>
new  < printArgument$251:>

3153:
old  <	; Parameter 154 signedint grid>
new  <	; PreCall 114 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3154:
old  <	mov eax, [rbp + 48]>
new  <>

3155:
old  <	mov [rbp + 154], eax>
new  < printArgument$252:>

3156:
old  <>
new  <	; PushFloat longDoubleValue>

3157:
old  < printArgument$257:>
new  <	fld qword [rbp + 98]>

3158:
old  <	; Parameter 158 signedint precision>
new  <>

3159:
old  <	mov eax, [rbp + 60]>
new  < printArgument$253:>

3160:
old  <	mov [rbp + 158], eax>
new  <	; Parameter 138 longdouble longDoubleValue>

3161:
old  <>
new  <	fstp qword [rbp + 138]>

3162:
old  < printArgument$258:>
new  <>

3163:
old  <	; Call 114 printLongDoublePlain 0>
new  < printArgument$254:>

3164:
old  <	mov qword [rbp + 114], printArgument$259>
new  <	; Parameter 146 signedint plus>

3165:
old  <	mov [rbp + 122], rbp>
new  <	mov eax, [rbp + 40]>

3166:
old  <	add rbp, 114>
new  <	mov [rbp + 146], eax>

3167:
old  <	jmp printLongDoublePlain>
new  <>

3168:
old  <>
new  < printArgument$255:>

3169:
old  < printArgument$259:>
new  <	; Parameter 150 signedint space>

3170:
old  <	; PostCall 114>
new  <	mov eax, [rbp + 44]>

3171:
old  <>
new  <	mov [rbp + 150], eax>

3172:
old  < printArgument$260:>
new  <>

3173:
old  <	; Goto 396>
new  < printArgument$256:>

3174:
old  <	jmp printArgument$396>
new  <	; Parameter 154 signedint grid>

3175:
old  <>
new  <	mov eax, [rbp + 48]>

3176:
old  < printArgument$261:>
new  <	mov [rbp + 154], eax>

3177:
old  <	; PreCall 114 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

3178:
old  <>
new  < printArgument$257:>

3179:
old  < printArgument$262:>
new  <	; Parameter 158 signedint precision>

3180:
old  <	; IntegralToIntegral Â£temporary1861 c>
new  <	mov eax, [rbp + 60]>

3181:
old  <	mov al, [rbp + 88]>
new  <	mov [rbp + 158], eax>

3182:
old  <	and eax, 255>
new  <>

3183:
old  <	cmp al, 0>
new  < printArgument$258:>

3184:
old  <	jge printArgument$263>
new  <	; Call 114 printLongDoublePlain 0>

3185:
old  <	neg al>
new  <	mov qword [rbp + 114], printArgument$259>

3186:
old  <	neg eax>
new  <	mov [rbp + 122], rbp>

3187:
old  <>
new  <	add rbp, 114>

3188:
old  < printArgument$263:>
new  <	jmp printLongDoublePlain>

3189:
old  <	; Parameter 138 signedint Â£temporary1861>
new  <>

3190:
old  <	mov [rbp + 138], eax>
new  < printArgument$259:>

3191:
old  <>
new  <	; PostCall 114>

3192:
old  < printArgument$264:>
new  <>

3193:
old  <	; Call 114 tolower 0>
new  < printArgument$260:>

3194:
old  <	mov qword [rbp + 114], printArgument$265>
new  <	; Goto 396>

3195:
old  <	mov [rbp + 122], rbp>
new  <	jmp printArgument$396>

3196:
old  <	add rbp, 114>
new  <>

3197:
old  <	jmp tolower>
new  < printArgument$261:>

3198:
old  <>
new  <	; PreCall 114 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3199:
old  < printArgument$265:>
new  <>

3200:
old  <	; PostCall 114>
new  < printArgument$262:>

3201:
old  <>
new  <	; IntegralToIntegral Â£temporary1848 c>

3202:
old  < printArgument$266:>
new  <	mov al, [rbp + 88]>

3203:
old  <	; GetReturnValue Â£temporary1862>
new  <	and eax, 255>

3204:
old  <>
new  <	cmp al, 0>

3205:
old  < printArgument$267:>
new  <	jge printArgument$263>

3206:
old  <	; NotEqual 285 Â£temporary1862 101>
new  <	neg al>

3207:
old  <	cmp ebx, 101>
new  <	neg eax>

3208:
old  <	jne printArgument$285>
new  <>

3209:
old  <>
new  < printArgument$263:>

3210:
old  < printArgument$268:>
new  <	; Parameter 138 signedint Â£temporary1848>

3211:
old  <	; PreCall 114 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov [rbp + 138], eax>

3213:
old  < printArgument$269:>
new  < printArgument$264:>

3214:
old  <	; PushFloat longDoubleValue>
new  <	; Call 114 tolower 0>

3215:
old  <	fld qword [rbp + 98]>
new  <	mov qword [rbp + 114], printArgument$265>

3216:
old  <>
new  <	mov [rbp + 122], rbp>

3217:
old  < printArgument$270:>
new  <	add rbp, 114>

3218:
old  <	; Parameter 138 longdouble longDoubleValue>
new  <	jmp tolower>

3219:
old  <	fstp qword [rbp + 138]>
new  <>

3220:
old  <>
new  < printArgument$265:>

3221:
old  < printArgument$271:>
new  <	; PostCall 114>

3222:
old  <	; Parameter 146 signedint plus>
new  <>

3223:
old  <	mov eax, [rbp + 40]>
new  < printArgument$266:>

3224:
old  <	mov [rbp + 146], eax>
new  <	; GetReturnValue Â£temporary1849>

3226:
old  < printArgument$272:>
new  < printArgument$267:>

3227:
old  <	; Parameter 150 signedint space>
new  <	; NotEqual 285 Â£temporary1849 101>

3228:
old  <	mov eax, [rbp + 44]>
new  <	cmp ebx, 101>

3229:
old  <	mov [rbp + 150], eax>
new  <	jne printArgument$285>

3231:
old  < printArgument$273:>
new  < printArgument$268:>

3232:
old  <	; Parameter 154 signedint grid>
new  <	; PreCall 114 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3233:
old  <	mov eax, [rbp + 48]>
new  <>

3234:
old  <	mov [rbp + 154], eax>
new  < printArgument$269:>

3235:
old  <>
new  <	; PushFloat longDoubleValue>

3236:
old  < printArgument$274:>
new  <	fld qword [rbp + 98]>

3237:
old  <	; Parameter 158 signedint precision>
new  <>

3238:
old  <	mov eax, [rbp + 60]>
new  < printArgument$270:>

3239:
old  <	mov [rbp + 158], eax>
new  <	; Parameter 138 longdouble longDoubleValue>

3240:
old  <>
new  <	fstp qword [rbp + 138]>

3241:
old  < printArgument$275:>
new  <>

3242:
old  <	; PreCall 114 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < printArgument$271:>

3243:
old  <>
new  <	; Parameter 146 signedint plus>

3244:
old  < printArgument$276:>
new  <	mov eax, [rbp + 40]>

3245:
old  <	; IntegralToIntegral Â£temporary1864 c>
new  <	mov [rbp + 146], eax>

3246:
old  <	mov al, [rbp + 88]>
new  <>

3247:
old  <	and eax, 255>
new  < printArgument$272:>

3248:
old  <	cmp al, 0>
new  <	; Parameter 150 signedint space>

3249:
old  <	jge printArgument$277>
new  <	mov eax, [rbp + 44]>

3250:
old  <	neg al>
new  <	mov [rbp + 150], eax>

3251:
old  <	neg eax>
new  <>

3252:
old  <>
new  < printArgument$273:>

3253:
old  < printArgument$277:>
new  <	; Parameter 154 signedint grid>

3254:
old  <	; Parameter 186 signedint Â£temporary1864>
new  <	mov eax, [rbp + 48]>

3255:
old  <	mov [rbp + 186], eax>
new  <	mov [rbp + 154], eax>

3257:
old  < printArgument$278:>
new  < printArgument$274:>

3258:
old  <	; Call 162 isupper 0>
new  <	; Parameter 158 signedint precision>

3259:
old  <	mov qword [rbp + 162], printArgument$279>
new  <	mov eax, [rbp + 60]>

3260:
old  <	mov [rbp + 170], rbp>
new  <	mov [rbp + 158], eax>

3261:
old  <	add rbp, 162>
new  <>

3262:
old  <	jmp isupper>
new  < printArgument$275:>

3263:
old  <>
new  <	; PreCall 114 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3264:
old  < printArgument$279:>
new  <>

3265:
old  <	; PostCall 162>
new  < printArgument$276:>

3266:
old  <>
new  <	; IntegralToIntegral Â£temporary1851 c>

3267:
old  < printArgument$280:>
new  <	mov al, [rbp + 88]>

3268:
old  <	; GetReturnValue Â£temporary1865>
new  <	and eax, 255>

3269:
old  <>
new  <	cmp al, 0>

3270:
old  < printArgument$281:>
new  <	jge printArgument$277>

3271:
old  <	; Parameter 162 signedint Â£temporary1865>
new  <	neg al>

3272:
old  <	mov [rbp + 162], ebx>
new  <	neg eax>

3274:
old  < printArgument$282:>
new  < printArgument$277:>

3275:
old  <	; Call 114 printLongDoubleExpo 0>
new  <	; Parameter 186 signedint Â£temporary1851>

3276:
old  <	mov qword [rbp + 114], printArgument$283>
new  <	mov [rbp + 186], eax>

3277:
old  <	mov [rbp + 122], rbp>
new  <>

3278:
old  <	add rbp, 114>
new  < printArgument$278:>

3279:
old  <	jmp printLongDoubleExpo>
new  <	; Call 162 isupper 0>

3280:
old  <>
new  <	mov qword [rbp + 162], printArgument$279>

3281:
old  < printArgument$283:>
new  <	mov [rbp + 170], rbp>

3282:
old  <	; PostCall 114>
new  <	add rbp, 162>

3283:
old  <>
new  <	jmp isupper>

3284:
old  < printArgument$284:>
new  <>

3285:
old  <	; Goto 396>
new  < printArgument$279:>

3286:
old  <	jmp printArgument$396>
new  <	; PostCall 162>

3288:
old  < printArgument$285:>
new  < printArgument$280:>

3289:
old  <	; PreCall 114 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; GetReturnValue Â£temporary1852>

3291:
old  < printArgument$286:>
new  < printArgument$281:>

3292:
old  <	; PreCall 114 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter 162 signedint Â£temporary1852>

3293:
old  <>
new  <	mov [rbp + 162], ebx>

3294:
old  < printArgument$287:>
new  <>

3295:
old  <	; PushFloat longDoubleValue>
new  < printArgument$282:>

3296:
old  <	fld qword [rbp + 98]>
new  <	; Call 114 printLongDoubleExpo 0>

3297:
old  <>
new  <	mov qword [rbp + 114], printArgument$283>

3298:
old  < printArgument$288:>
new  <	mov [rbp + 122], rbp>

3299:
old  <	; Parameter 138 double longDoubleValue>
new  <	add rbp, 114>

3300:
old  <	fstp qword [rbp + 138]>
new  <	jmp printLongDoubleExpo>

3302:
old  < printArgument$289:>
new  < printArgument$283:>

3303:
old  <	; Call 114 fabs 0>
new  <	; PostCall 114>

3304:
old  <	mov qword [rbp + 114], printArgument$290>
new  <>

3305:
old  <	mov [rbp + 122], rbp>
new  < printArgument$284:>

3306:
old  <	add rbp, 114>
new  <	; Goto 396>

3307:
old  <	jmp fabs>
new  <	jmp printArgument$396>

3309:
old  < printArgument$290:>
new  < printArgument$285:>

3310:
old  <	; PostCall 114>
new  <	; PreCall 114 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3312:
old  < printArgument$291:>
new  < printArgument$286:>

3313:
old  <	; GetReturnValue Â£temporary1867>
new  <	; PreCall 114 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3315:
old  < printArgument$292:>
new  < printArgument$287:>

3316:
old  <	; Parameter 138 double Â£temporary1867>
new  <	; PushFloat longDoubleValue>

3317:
old  <	fstp qword [rbp + 138]>
new  <	fld qword [rbp + 98]>

3319:
old  < printArgument$293:>
new  < printArgument$288:>

3320:
old  <	; Call 114 log10 0>
new  <	; Parameter 138 double longDoubleValue>

3321:
old  <	mov qword [rbp + 114], printArgument$294>
new  <	fstp qword [rbp + 138]>

3322:
old  <	mov [rbp + 122], rbp>
new  <>

3323:
old  <	add rbp, 114>
new  < printArgument$289:>

3324:
old  <	jmp log10>
new  <	; Call 114 fabs 0>

3325:
old  <>
new  <	mov qword [rbp + 114], printArgument$290>

3326:
old  < printArgument$294:>
new  <	mov [rbp + 122], rbp>

3327:
old  <	; PostCall 114>
new  <	add rbp, 114>

3328:
old  <>
new  <	jmp fabs>

3329:
old  < printArgument$295:>
new  <>

3330:
old  <	; GetReturnValue Â£temporary1868>
new  < printArgument$290:>

3331:
old  <>
new  <	; PostCall 114>

3332:
old  < printArgument$296:>
new  <>

3333:
old  <	; FloatingToIntegral Â£temporary1869 Â£temporary1868>
new  < printArgument$291:>

3334:
old  <	fistp dword [container4bytes#]>
new  <	; GetReturnValue Â£temporary1854>

3335:
old  <	mov eax, [container4bytes#]>
new  <>

3336:
old  <>
new  < printArgument$292:>

3337:
old  < printArgument$297:>
new  <	; Parameter 138 double Â£temporary1854>

3338:
old  <	; Assign expo Â£temporary1869>
new  <	fstp qword [rbp + 138]>

3339:
old  <	mov [rbp + 114], eax>
new  <>

3340:
old  <>
new  < printArgument$293:>

3341:
old  < printArgument$298:>
new  <	; Call 114 log10 0>

3342:
old  <	; SignedLessThan 310 expo -3>
new  <	mov qword [rbp + 114], printArgument$294>

3343:
old  <	cmp dword [rbp + 114], -3>
new  <	mov [rbp + 122], rbp>

3344:
old  <	jl printArgument$310>
new  <	add rbp, 114>

3345:
old  <>
new  <	jmp log10>

3346:
old  < printArgument$299:>
new  <>

3347:
old  <	; SignedGreaterThan 310 expo 2>
new  < printArgument$294:>

3348:
old  <	cmp dword [rbp + 114], 2>
new  <	; PostCall 114>

3349:
old  <	jg printArgument$310>
new  <>

3350:
old  <>
new  < printArgument$295:>

3351:
old  < printArgument$300:>
new  <	; GetReturnValue Â£temporary1855>

3352:
old  <	; PreCall 118 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

3353:
old  <>
new  < printArgument$296:>

3354:
old  < printArgument$301:>
new  <	; FloatingToIntegral Â£temporary1856 Â£temporary1855>

3355:
old  <	; PushFloat longDoubleValue>
new  <	fistp dword [container4bytes#]>

3356:
old  <	fld qword [rbp + 98]>
new  <	mov eax, [container4bytes#]>

3358:
old  < printArgument$302:>
new  < printArgument$297:>

3359:
old  <	; Parameter 142 longdouble longDoubleValue>
new  <	; Assign expo Â£temporary1856>

3360:
old  <	fstp qword [rbp + 142]>
new  <	mov [rbp + 114], eax>

3362:
old  < printArgument$303:>
new  < printArgument$298:>

3363:
old  <	; Parameter 150 signedint plus>
new  <	; SignedLessThan 310 expo -3>

3364:
old  <	mov eax, [rbp + 40]>
new  <	cmp dword [rbp + 114], -3>

3365:
old  <	mov [rbp + 150], eax>
new  <	jl printArgument$310>

3367:
old  < printArgument$304:>
new  < printArgument$299:>

3368:
old  <	; Parameter 154 signedint space>
new  <	; SignedGreaterThan 310 expo 2>

3369:
old  <	mov eax, [rbp + 44]>
new  <	cmp dword [rbp + 114], 2>

3370:
old  <	mov [rbp + 154], eax>
new  <	jg printArgument$310>

3372:
old  < printArgument$305:>
new  < printArgument$300:>

3373:
old  <	; Parameter 158 signedint grid>
new  <	; PreCall 118 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3374:
old  <	mov eax, [rbp + 48]>
new  <>

3375:
old  <	mov [rbp + 158], eax>
new  < printArgument$301:>

3376:
old  <>
new  <	; PushFloat longDoubleValue>

3377:
old  < printArgument$306:>
new  <	fld qword [rbp + 98]>

3378:
old  <	; Parameter 162 signedint precision>
new  <>

3379:
old  <	mov eax, [rbp + 60]>
new  < printArgument$302:>

3380:
old  <	mov [rbp + 162], eax>
new  <	; Parameter 142 longdouble longDoubleValue>

3381:
old  <>
new  <	fstp qword [rbp + 142]>

3382:
old  < printArgument$307:>
new  <>

3383:
old  <	; Call 118 printLongDoublePlain 0>
new  < printArgument$303:>

3384:
old  <	mov qword [rbp + 118], printArgument$308>
new  <	; Parameter 150 signedint plus>

3385:
old  <	mov [rbp + 126], rbp>
new  <	mov eax, [rbp + 40]>

3386:
old  <	add rbp, 118>
new  <	mov [rbp + 150], eax>

3387:
old  <	jmp printLongDoublePlain>
new  <>

3388:
old  <>
new  < printArgument$304:>

3389:
old  < printArgument$308:>
new  <	; Parameter 154 signedint space>

3390:
old  <	; PostCall 118>
new  <	mov eax, [rbp + 44]>

3391:
old  <>
new  <	mov [rbp + 154], eax>

3392:
old  < printArgument$309:>
new  <>

3393:
old  <	; Goto 396>
new  < printArgument$305:>

3394:
old  <	jmp printArgument$396>
new  <	; Parameter 158 signedint grid>

3395:
old  <>
new  <	mov eax, [rbp + 48]>

3396:
old  < printArgument$310:>
new  <	mov [rbp + 158], eax>

3397:
old  <	; PreCall 118 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

3398:
old  <>
new  < printArgument$306:>

3399:
old  < printArgument$311:>
new  <	; Parameter 162 signedint precision>

3400:
old  <	; PushFloat longDoubleValue>
new  <	mov eax, [rbp + 60]>

3401:
old  <	fld qword [rbp + 98]>
new  <	mov [rbp + 162], eax>

3403:
old  < printArgument$312:>
new  < printArgument$307:>

3404:
old  <	; Parameter 142 longdouble longDoubleValue>
new  <	; Call 118 printLongDoublePlain 0>

3405:
old  <	fstp qword [rbp + 142]>
new  <	mov qword [rbp + 118], printArgument$308>

3406:
old  <>
new  <	mov [rbp + 126], rbp>

3407:
old  < printArgument$313:>
new  <	add rbp, 118>

3408:
old  <	; Parameter 150 signedint plus>
new  <	jmp printLongDoublePlain>

3409:
old  <	mov eax, [rbp + 40]>
new  <>

3410:
old  <	mov [rbp + 150], eax>
new  < printArgument$308:>

3411:
old  <>
new  <	; PostCall 118>

3412:
old  < printArgument$314:>
new  <>

3413:
old  <	; Parameter 154 signedint space>
new  < printArgument$309:>

3414:
old  <	mov eax, [rbp + 44]>
new  <	; Goto 396>

3415:
old  <	mov [rbp + 154], eax>
new  <	jmp printArgument$396>

3417:
old  < printArgument$315:>
new  < printArgument$310:>

3418:
old  <	; Parameter 158 signedint grid>
new  <	; PreCall 118 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3419:
old  <	mov eax, [rbp + 48]>
new  <>

3420:
old  <	mov [rbp + 158], eax>
new  < printArgument$311:>

3421:
old  <>
new  <	; PushFloat longDoubleValue>

3422:
old  < printArgument$316:>
new  <	fld qword [rbp + 98]>

3423:
old  <	; Parameter 162 signedint precision>
new  <>

3424:
old  <	mov eax, [rbp + 60]>
new  < printArgument$312:>

3425:
old  <	mov [rbp + 162], eax>
new  <	; Parameter 142 longdouble longDoubleValue>

3426:
old  <>
new  <	fstp qword [rbp + 142]>

3427:
old  < printArgument$317:>
new  <>

3428:
old  <	; PreCall 118 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < printArgument$313:>

3429:
old  <>
new  <	; Parameter 150 signedint plus>

3430:
old  < printArgument$318:>
new  <	mov eax, [rbp + 40]>

3431:
old  <	; IntegralToIntegral Â£temporary1874 c>
new  <	mov [rbp + 150], eax>

3432:
old  <	mov al, [rbp + 88]>
new  <>

3433:
old  <	and eax, 255>
new  < printArgument$314:>

3434:
old  <	cmp al, 0>
new  <	; Parameter 154 signedint space>

3435:
old  <	jge printArgument$319>
new  <	mov eax, [rbp + 44]>

3436:
old  <	neg al>
new  <	mov [rbp + 154], eax>

3437:
old  <	neg eax>
new  <>

3438:
old  <>
new  < printArgument$315:>

3439:
old  < printArgument$319:>
new  <	; Parameter 158 signedint grid>

3440:
old  <	; Parameter 190 signedint Â£temporary1874>
new  <	mov eax, [rbp + 48]>

3441:
old  <	mov [rbp + 190], eax>
new  <	mov [rbp + 158], eax>

3443:
old  < printArgument$320:>
new  < printArgument$316:>

3444:
old  <	; Call 166 isupper 0>
new  <	; Parameter 162 signedint precision>

3445:
old  <	mov qword [rbp + 166], printArgument$321>
new  <	mov eax, [rbp + 60]>

3446:
old  <	mov [rbp + 174], rbp>
new  <	mov [rbp + 162], eax>

3447:
old  <	add rbp, 166>
new  <>

3448:
old  <	jmp isupper>
new  < printArgument$317:>

3449:
old  <>
new  <	; PreCall 118 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3450:
old  < printArgument$321:>
new  <>

3451:
old  <	; PostCall 166>
new  < printArgument$318:>

3452:
old  <>
new  <	; IntegralToIntegral Â£temporary1861 c>

3453:
old  < printArgument$322:>
new  <	mov al, [rbp + 88]>

3454:
old  <	; GetReturnValue Â£temporary1875>
new  <	and eax, 255>

3455:
old  <>
new  <	cmp al, 0>

3456:
old  < printArgument$323:>
new  <	jge printArgument$319>

3457:
old  <	; Parameter 166 signedint Â£temporary1875>
new  <	neg al>

3458:
old  <	mov [rbp + 166], ebx>
new  <	neg eax>

3460:
old  < printArgument$324:>
new  < printArgument$319:>

3461:
old  <	; Call 118 printLongDoubleExpo 0>
new  <	; Parameter 190 signedint Â£temporary1861>

3462:
old  <	mov qword [rbp + 118], printArgument$325>
new  <	mov [rbp + 190], eax>

3463:
old  <	mov [rbp + 126], rbp>
new  <>

3464:
old  <	add rbp, 118>
new  < printArgument$320:>

3465:
old  <	jmp printLongDoubleExpo>
new  <	; Call 166 isupper 0>

3466:
old  <>
new  <	mov qword [rbp + 166], printArgument$321>

3467:
old  < printArgument$325:>
new  <	mov [rbp + 174], rbp>

3468:
old  <	; PostCall 118>
new  <	add rbp, 166>

3469:
old  <>
new  <	jmp isupper>

3470:
old  < printArgument$326:>
new  <>

3471:
old  <	; Goto 396>
new  < printArgument$321:>

3472:
old  <	jmp printArgument$396>
new  <	; PostCall 166>

3474:
old  < printArgument$327:>
new  < printArgument$322:>

3475:
old  <	; BinaryAdd Â£temporary1878 arg_list 8>
new  <	; GetReturnValue Â£temporary1862>

3476:
old  <	mov rax, [rbp + 32]>
new  <>

3477:
old  <	add rax, 8>
new  < printArgument$323:>

3478:
old  <>
new  <	; Parameter 166 signedint Â£temporary1862>

3479:
old  < printArgument$328:>
new  <	mov [rbp + 166], ebx>

3480:
old  <	; IntegralToIntegral Â£temporary1879 Â£temporary1878>
new  <>

3481:
old  <>
new  < printArgument$324:>

3482:
old  < printArgument$329:>
new  <	; Call 118 printLongDoubleExpo 0>

3483:
old  <	; IntegralToIntegral Â£temporary1880 Â£temporary1879>
new  <	mov qword [rbp + 118], printArgument$325>

3484:
old  <	mov rbx, 4294967295>
new  <	mov [rbp + 126], rbp>

3485:
old  <	and rax, rbx>
new  <	add rbp, 118>

3486:
old  <>
new  <	jmp printLongDoubleExpo>

3487:
old  < printArgument$330:>
new  <>

3488:
old  <	; Assign arg_list Â£temporary1880>
new  < printArgument$325:>

3489:
old  <	mov [rbp + 32], rax>
new  <	; PostCall 118>

3491:
old  < printArgument$331:>
new  < printArgument$326:>

3492:
old  <	; BinarySubtract Â£temporary1881 arg_list 8>
new  <	; Goto 396>

3493:
old  <	mov rsi, [rbp + 32]>
new  <	jmp printArgument$396>

3494:
old  <	sub rsi, 8>
new  <>

3495:
old  <>
new  < printArgument$327:>

3496:
old  < printArgument$332:>
new  <	; BinaryAdd Â£temporary1865 arg_list 8>

3497:
old  <	; IntegralToIntegral Â£temporary1883 Â£temporary1881>
new  <	mov rax, [rbp + 32]>

3498:
old  <>
new  <	add rax, 8>

3499:
old  < printArgument$333:>
new  <>

3500:
old  <	; Dereference Â£temporary1884 -> Â£temporary1883 Â£temporary1883 0>
new  < printArgument$328:>

3501:
old  <>
new  <	; IntegralToIntegral Â£temporary1866 Â£temporary1865>

3502:
old  < printArgument$334:>
new  <>

3503:
old  <	; Assign ptrValue Â£temporary1884 -> Â£temporary1883>
new  < printArgument$329:>

3504:
old  <	mov rax, [rsi]>
new  <	; IntegralToIntegral Â£temporary1867 Â£temporary1866>

3505:
old  <	mov [rbp + 106], rax>
new  <	mov rbx, 4294967295>

3506:
old  <>
new  <	and rax, rbx>

3507:
old  < printArgument$335:>
new  <>

3508:
old  <	; PreCall 114 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < printArgument$330:>

3509:
old  <>
new  <	; Assign arg_list Â£temporary1867>

3510:
old  < printArgument$336:>
new  <	mov [rbp + 32], rax>

3511:
old  <	; Parameter 138 pointer arg_list>
new  <>

3512:
old  <	mov rax, [rbp + 32]>
new  < printArgument$331:>

3513:
old  <	mov [rbp + 138], rax>
new  <	; BinarySubtract Â£temporary1868 arg_list 8>

3514:
old  <>
new  <	mov rsi, [rbp + 32]>

3515:
old  < printArgument$337:>
new  <	sub rsi, 8>

3516:
old  <	; Parameter 146 pointer widthPtr>
new  <>

3517:
old  <	mov rax, [rbp + 52]>
new  < printArgument$332:>

3518:
old  <	mov [rbp + 146], rax>
new  <	; IntegralToIntegral Â£temporary1870 Â£temporary1868>

3520:
old  < printArgument$338:>
new  < printArgument$333:>

3521:
old  <	; Address Â£temporary1885 precision>
new  <	; Dereference Â£temporary1871 -> Â£temporary1870 Â£temporary1870 0>

3522:
old  <	mov rsi, rbp>
new  <>

3523:
old  <	add rsi, 60>
new  < printArgument$334:>

3524:
old  <>
new  <	; Assign ptrValue Â£temporary1871 -> Â£temporary1870>

3525:
old  < printArgument$339:>
new  <	mov rax, [rsi]>

3526:
old  <	; Parameter 154 pointer Â£temporary1885>
new  <	mov [rbp + 106], rax>

3527:
old  <	mov [rbp + 154], rsi>
new  <>

3528:
old  <>
new  < printArgument$335:>

3529:
old  < printArgument$340:>
new  <	; PreCall 114 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3530:
old  <	; Call 114 checkWidthAndPrecision 0>
new  <>

3531:
old  <	mov qword [rbp + 114], printArgument$341>
new  < printArgument$336:>

3532:
old  <	mov [rbp + 122], rbp>
new  <	; Parameter 138 pointer arg_list>

3533:
old  <	add rbp, 114>
new  <	mov rax, [rbp + 32]>

3534:
old  <	jmp checkWidthAndPrecision>
new  <	mov [rbp + 138], rax>

3536:
old  < printArgument$341:>
new  < printArgument$337:>

3537:
old  <	; PostCall 114>
new  <	; Parameter 146 pointer widthPtr>

3538:
old  <>
new  <	mov rax, [rbp + 52]>

3539:
old  < printArgument$342:>
new  <	mov [rbp + 146], rax>

3540:
old  <	; GetReturnValue Â£temporary1886>
new  <>

3541:
old  <>
new  < printArgument$338:>

3542:
old  < printArgument$343:>
new  <	; Address Â£temporary1872 precision>

3543:
old  <	; Assign arg_list Â£temporary1886>
new  <	mov rsi, rbp>

3544:
old  <	mov [rbp + 32], rbx>
new  <	add rsi, 60>

3546:
old  < printArgument$344:>
new  < printArgument$339:>

3547:
old  <	; PreCall 114 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter 154 pointer Â£temporary1872>

3548:
old  <>
new  <	mov [rbp + 154], rsi>

3549:
old  < printArgument$345:>
new  <>

3550:
old  <	; IntegralToIntegral Â£temporary1887 ptrValue>
new  < printArgument$340:>

3551:
old  <	mov rax, [rbp + 106]>
new  <	; Call 114 checkWidthAndPrecision 0>

3552:
old  <>
new  <	mov qword [rbp + 114], printArgument$341>

3553:
old  < printArgument$346:>
new  <	mov [rbp + 122], rbp>

3554:
old  <	; Parameter 138 unsignedlongint Â£temporary1887>
new  <	add rbp, 114>

3555:
old  <	mov [rbp + 138], rax>
new  <	jmp checkWidthAndPrecision>

3557:
old  < printArgument$347:>
new  < printArgument$341:>

3558:
old  <	; Parameter 146 signedint 0>
new  <	; PostCall 114>

3559:
old  <	mov dword [rbp + 146], 0>
new  <>

3560:
old  <>
new  < printArgument$342:>

3561:
old  < printArgument$348:>
new  <	; GetReturnValue Â£temporary1873>

3562:
old  <	; Parameter 150 signedint 0>
new  <>

3563:
old  <	mov dword [rbp + 150], 0>
new  < printArgument$343:>

3564:
old  <>
new  <	; Assign arg_list Â£temporary1873>

3565:
old  < printArgument$349:>
new  <	mov [rbp + 32], rbx>

3566:
old  <	; Parameter 154 signedint 0>
new  <>

3567:
old  <	mov dword [rbp + 154], 0>
new  < printArgument$344:>

3568:
old  <>
new  <	; PreCall 114 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3569:
old  < printArgument$350:>
new  <>

3570:
old  <	; Parameter 158 unsignedlongint 10>
new  < printArgument$345:>

3571:
old  <	mov qword [rbp + 158], 10>
new  <	; IntegralToIntegral Â£temporary1874 ptrValue>

3572:
old  <>
new  <	mov rax, [rbp + 106]>

3573:
old  < printArgument$351:>
new  <>

3574:
old  <	; Parameter 166 signedint 0>
new  < printArgument$346:>

3575:
old  <	mov dword [rbp + 166], 0>
new  <	; Parameter 138 unsignedlongint Â£temporary1874>

3576:
old  <>
new  <	mov [rbp + 138], rax>

3577:
old  < printArgument$352:>
new  <>

3578:
old  <	; Call 114 printUnsignedLong 0>
new  < printArgument$347:>

3579:
old  <	mov qword [rbp + 114], printArgument$353>
new  <	; Parameter 146 signedint 0>

3580:
old  <	mov [rbp + 122], rbp>
new  <	mov dword [rbp + 146], 0>

3581:
old  <	add rbp, 114>
new  <>

3582:
old  <	jmp printUnsignedLong>
new  < printArgument$348:>

3583:
old  <>
new  <	; Parameter 150 signedint 0>

3584:
old  < printArgument$353:>
new  <	mov dword [rbp + 150], 0>

3585:
old  <	; PostCall 114>
new  <>

3586:
old  <>
new  < printArgument$349:>

3587:
old  < printArgument$354:>
new  <	; Parameter 154 signedint 0>

3588:
old  <	; Goto 396>
new  <	mov dword [rbp + 154], 0>

3589:
old  <	jmp printArgument$396>
new  <>

3590:
old  <>
new  < printArgument$350:>

3591:
old  < printArgument$355:>
new  <	; Parameter 158 unsignedlongint 10>

3592:
old  <	; BinaryAdd Â£temporary1890 arg_list 8>
new  <	mov qword [rbp + 158], 10>

3593:
old  <	mov rax, [rbp + 32]>
new  <>

3594:
old  <	add rax, 8>
new  < printArgument$351:>

3595:
old  <>
new  <	; Parameter 166 signedint 0>

3596:
old  < printArgument$356:>
new  <	mov dword [rbp + 166], 0>

3597:
old  <	; IntegralToIntegral Â£temporary1891 Â£temporary1890>
new  <>

3598:
old  <>
new  < printArgument$352:>

3599:
old  < printArgument$357:>
new  <	; Call 114 printUnsignedLong 0>

3600:
old  <	; IntegralToIntegral Â£temporary1892 Â£temporary1891>
new  <	mov qword [rbp + 114], printArgument$353>

3601:
old  <	mov rbx, 4294967295>
new  <	mov [rbp + 122], rbp>

3602:
old  <	and rax, rbx>
new  <	add rbp, 114>

3603:
old  <>
new  <	jmp printUnsignedLong>

3604:
old  < printArgument$358:>
new  <>

3605:
old  <	; Assign arg_list Â£temporary1892>
new  < printArgument$353:>

3606:
old  <	mov [rbp + 32], rax>
new  <	; PostCall 114>

3608:
old  < printArgument$359:>
new  < printArgument$354:>

3609:
old  <	; BinarySubtract Â£temporary1893 arg_list 8>
new  <	; Goto 396>

3610:
old  <	mov rsi, [rbp + 32]>
new  <	jmp printArgument$396>

3611:
old  <	sub rsi, 8>
new  <>

3612:
old  <>
new  < printArgument$355:>

3613:
old  < printArgument$360:>
new  <	; BinaryAdd Â£temporary1877 arg_list 8>

3614:
old  <	; IntegralToIntegral Â£temporary1895 Â£temporary1893>
new  <	mov rax, [rbp + 32]>

3615:
old  <>
new  <	add rax, 8>

3616:
old  < printArgument$361:>
new  <>

3617:
old  <	; Dereference Â£temporary1896 -> Â£temporary1895 Â£temporary1895 0>
new  < printArgument$356:>

3618:
old  <>
new  <	; IntegralToIntegral Â£temporary1878 Â£temporary1877>

3619:
old  < printArgument$362:>
new  <>

3620:
old  <	; Assign ptrValue Â£temporary1896 -> Â£temporary1895>
new  < printArgument$357:>

3621:
old  <	mov rax, [rsi]>
new  <	; IntegralToIntegral Â£temporary1879 Â£temporary1878>

3622:
old  <	mov [rbp + 106], rax>
new  <	mov rbx, 4294967295>

3623:
old  <>
new  <	and rax, rbx>

3624:
old  < printArgument$363:>
new  <>

3625:
old  <	; BinaryAdd Â£temporary1898 arg_list 8>
new  < printArgument$358:>

3626:
old  <	mov rax, [rbp + 32]>
new  <	; Assign arg_list Â£temporary1879>

3627:
old  <	add rax, 8>
new  <	mov [rbp + 32], rax>

3629:
old  < printArgument$364:>
new  < printArgument$359:>

3630:
old  <	; IntegralToIntegral Â£temporary1899 Â£temporary1898>
new  <	; BinarySubtract Â£temporary1880 arg_list 8>

3631:
old  <>
new  <	mov rsi, [rbp + 32]>

3632:
old  < printArgument$365:>
new  <	sub rsi, 8>

3633:
old  <	; IntegralToIntegral Â£temporary1900 Â£temporary1899>
new  <>

3634:
old  <	mov rbx, 4294967295>
new  < printArgument$360:>

3635:
old  <	and rax, rbx>
new  <	; IntegralToIntegral Â£temporary1882 Â£temporary1880>

3637:
old  < printArgument$366:>
new  < printArgument$361:>

3638:
old  <	; Assign arg_list Â£temporary1900>
new  <	; Dereference Â£temporary1883 -> Â£temporary1882 Â£temporary1882 0>

3639:
old  <	mov [rbp + 32], rax>
new  <>

3640:
old  <>
new  < printArgument$362:>

3641:
old  < printArgument$367:>
new  <	; Assign ptrValue Â£temporary1883 -> Â£temporary1882>

3642:
old  <	; BinarySubtract Â£temporary1901 arg_list 8>
new  <	mov rax, [rsi]>

3643:
old  <	mov rsi, [rbp + 32]>
new  <	mov [rbp + 106], rax>

3644:
old  <	sub rsi, 8>
new  <>

3645:
old  <>
new  < printArgument$363:>

3646:
old  < printArgument$368:>
new  <	; BinaryAdd Â£temporary1885 arg_list 8>

3647:
old  <	; IntegralToIntegral Â£temporary1903 Â£temporary1901>
new  <	mov rax, [rbp + 32]>

3648:
old  <>
new  <	add rax, 8>

3649:
old  < printArgument$369:>
new  <>

3650:
old  <	; Dereference Â£temporary1904 -> Â£temporary1903 Â£temporary1903 0>
new  < printArgument$364:>

3651:
old  <>
new  <	; IntegralToIntegral Â£temporary1886 Â£temporary1885>

3652:
old  < printArgument$370:>
new  <>

3653:
old  <	; Assign intPtr Â£temporary1904 -> Â£temporary1903>
new  < printArgument$365:>

3654:
old  <	mov rax, [rsi]>
new  <	; IntegralToIntegral Â£temporary1887 Â£temporary1886>

3655:
old  <	mov [rbp + 90], rax>
new  <	mov rbx, 4294967295>

3656:
old  <>
new  <	and rax, rbx>

3657:
old  < printArgument$371:>
new  <>

3658:
old  <	; PreCall 114 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < printArgument$366:>

3659:
old  <>
new  <	; Assign arg_list Â£temporary1887>

3660:
old  < printArgument$372:>
new  <	mov [rbp + 32], rax>

3661:
old  <	; Parameter 138 pointer arg_list>
new  <>

3662:
old  <	mov rax, [rbp + 32]>
new  < printArgument$367:>

3663:
old  <	mov [rbp + 138], rax>
new  <	; BinarySubtract Â£temporary1888 arg_list 8>

3664:
old  <>
new  <	mov rsi, [rbp + 32]>

3665:
old  < printArgument$373:>
new  <	sub rsi, 8>

3666:
old  <	; Parameter 146 pointer widthPtr>
new  <>

3667:
old  <	mov rax, [rbp + 52]>
new  < printArgument$368:>

3668:
old  <	mov [rbp + 146], rax>
new  <	; IntegralToIntegral Â£temporary1890 Â£temporary1888>

3670:
old  < printArgument$374:>
new  < printArgument$369:>

3671:
old  <	; Address Â£temporary1905 precision>
new  <	; Dereference Â£temporary1891 -> Â£temporary1890 Â£temporary1890 0>

3672:
old  <	mov rsi, rbp>
new  <>

3673:
old  <	add rsi, 60>
new  < printArgument$370:>

3674:
old  <>
new  <	; Assign intPtr Â£temporary1891 -> Â£temporary1890>

3675:
old  < printArgument$375:>
new  <	mov rax, [rsi]>

3676:
old  <	; Parameter 154 pointer Â£temporary1905>
new  <	mov [rbp + 90], rax>

3677:
old  <	mov [rbp + 154], rsi>
new  <>

3678:
old  <>
new  < printArgument$371:>

3679:
old  < printArgument$376:>
new  <	; PreCall 114 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3680:
old  <	; Call 114 checkWidthAndPrecision 0>
new  <>

3681:
old  <	mov qword [rbp + 114], printArgument$377>
new  < printArgument$372:>

3682:
old  <	mov [rbp + 122], rbp>
new  <	; Parameter 138 pointer arg_list>

3683:
old  <	add rbp, 114>
new  <	mov rax, [rbp + 32]>

3684:
old  <	jmp checkWidthAndPrecision>
new  <	mov [rbp + 138], rax>

3686:
old  < printArgument$377:>
new  < printArgument$373:>

3687:
old  <	; PostCall 114>
new  <	; Parameter 146 pointer widthPtr>

3688:
old  <>
new  <	mov rax, [rbp + 52]>

3689:
old  < printArgument$378:>
new  <	mov [rbp + 146], rax>

3690:
old  <	; GetReturnValue Â£temporary1906>
new  <>

3691:
old  <>
new  < printArgument$374:>

3692:
old  < printArgument$379:>
new  <	; Address Â£temporary1892 precision>

3693:
old  <	; Assign arg_list Â£temporary1906>
new  <	mov rsi, rbp>

3694:
old  <	mov [rbp + 32], rbx>
new  <	add rsi, 60>

3696:
old  < printArgument$380:>
new  < printArgument$375:>

3697:
old  <	; Dereference Â£temporary1907 -> intPtr intPtr 0>
new  <	; Parameter 154 pointer Â£temporary1892>

3698:
old  <	mov rsi, [rbp + 90]>
new  <	mov [rbp + 154], rsi>

3700:
old  < printArgument$381:>
new  < printArgument$376:>

3701:
old  <	; Assign Â£temporary1907 -> intPtr g_outChars>
new  <	; Call 114 checkWidthAndPrecision 0>

3702:
old  <	mov eax, [g_outChars]>
new  <	mov qword [rbp + 114], printArgument$377>

3703:
old  <	mov [rsi], eax>
new  <	mov [rbp + 122], rbp>

3704:
old  <>
new  <	add rbp, 114>

3705:
old  < printArgument$382:>
new  <	jmp checkWidthAndPrecision>

3706:
old  <	; Goto 396>
new  <>

3707:
old  <	jmp printArgument$396>
new  < printArgument$377:>

3708:
old  <>
new  <	; PostCall 114>

3709:
old  < printArgument$383:>
new  <>

3710:
old  <	; PreCall 114 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < printArgument$378:>

3711:
old  <>
new  <	; GetReturnValue Â£temporary1893>

3712:
old  < printArgument$384:>
new  <>

3713:
old  <	; Parameter 138 pointer arg_list>
new  < printArgument$379:>

3714:
old  <	mov rax, [rbp + 32]>
new  <	; Assign arg_list Â£temporary1893>

3715:
old  <	mov [rbp + 138], rax>
new  <	mov [rbp + 32], rbx>

3717:
old  < printArgument$385:>
new  < printArgument$380:>

3718:
old  <	; Parameter 146 pointer widthPtr>
new  <	; Dereference Â£temporary1894 -> intPtr intPtr 0>

3719:
old  <	mov rax, [rbp + 52]>
new  <	mov rsi, [rbp + 90]>

3720:
old  <	mov [rbp + 146], rax>
new  <>

3721:
old  <>
new  < printArgument$381:>

3722:
old  < printArgument$386:>
new  <	; Assign Â£temporary1894 -> intPtr g_outChars>

3723:
old  <	; Address Â£temporary1908 precision>
new  <	mov eax, [g_outChars]>

3724:
old  <	mov rsi, rbp>
new  <	mov [rsi], eax>

3725:
old  <	add rsi, 60>
new  <>

3726:
old  <>
new  < printArgument$382:>

3727:
old  < printArgument$387:>
new  <	; Goto 396>

3728:
old  <	; Parameter 154 pointer Â£temporary1908>
new  <	jmp printArgument$396>

3729:
old  <	mov [rbp + 154], rsi>
new  <>

3730:
old  <>
new  < printArgument$383:>

3731:
old  < printArgument$388:>
new  <	; PreCall 114 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3732:
old  <	; Call 114 checkWidthAndPrecision 0>
new  <>

3733:
old  <	mov qword [rbp + 114], printArgument$389>
new  < printArgument$384:>

3734:
old  <	mov [rbp + 122], rbp>
new  <	; Parameter 138 pointer arg_list>

3735:
old  <	add rbp, 114>
new  <	mov rax, [rbp + 32]>

3736:
old  <	jmp checkWidthAndPrecision>
new  <	mov [rbp + 138], rax>

3738:
old  < printArgument$389:>
new  < printArgument$385:>

3739:
old  <	; PostCall 114>
new  <	; Parameter 146 pointer widthPtr>

3740:
old  <>
new  <	mov rax, [rbp + 52]>

3741:
old  < printArgument$390:>
new  <	mov [rbp + 146], rax>

3742:
old  <	; GetReturnValue Â£temporary1909>
new  <>

3743:
old  <>
new  < printArgument$386:>

3744:
old  < printArgument$391:>
new  <	; Address Â£temporary1895 precision>

3745:
old  <	; Assign arg_list Â£temporary1909>
new  <	mov rsi, rbp>

3746:
old  <	mov [rbp + 32], rbx>
new  <	add rsi, 60>

3748:
old  < printArgument$392:>
new  < printArgument$387:>

3749:
old  <	; PreCall 114 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter 154 pointer Â£temporary1895>

3750:
old  <>
new  <	mov [rbp + 154], rsi>

3751:
old  < printArgument$393:>
new  <>

3752:
old  <	; Parameter 138 signedchar 37>
new  < printArgument$388:>

3753:
old  <	mov byte [rbp + 138], 37>
new  <	; Call 114 checkWidthAndPrecision 0>

3754:
old  <>
new  <	mov qword [rbp + 114], printArgument$389>

3755:
old  < printArgument$394:>
new  <	mov [rbp + 122], rbp>

3756:
old  <	; Call 114 printChar 0>
new  <	add rbp, 114>

3757:
old  <	mov qword [rbp + 114], printArgument$395>
new  <	jmp checkWidthAndPrecision>

3758:
old  <	mov [rbp + 122], rbp>
new  <>

3759:
old  <	add rbp, 114>
new  < printArgument$389:>

3760:
old  <	jmp printChar>
new  <	; PostCall 114>

3762:
old  < printArgument$395:>
new  < printArgument$390:>

3763:
old  <	; PostCall 114>
new  <	; GetReturnValue Â£temporary1896>

3765:
old  < printArgument$396:>
new  < printArgument$391:>

3766:
old  <	; Return arg_list>
new  <	; Assign arg_list Â£temporary1896>

3767:
old  <	mov rbx, [rbp + 32]>
new  <	mov [rbp + 32], rbx>

3768:
old  <	mov rax, [rbp]>
new  <>

3769:
old  <	mov rdi, [rbp + 16]>
new  < printArgument$392:>

3770:
old  <	mov rbp, [rbp + 8]>
new  <	; PreCall 114 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3771:
old  <	jmp rax>
new  <>

3772:
old  <>
new  < printArgument$393:>

3773:
old  < printArgument$397:>
new  <	; Parameter 138 signedchar 37>

3774:
old  <	; FunctionEnd printArgument>
new  <	mov byte [rbp + 138], 37>

3776:
old  <section .data>
new  < printArgument$394:>

3777:
old  <>
new  <	; Call 114 printChar 0>

3778:
old  <int4$10#:>
new  <	mov qword [rbp + 114], printArgument$395>

3779:
old  <	; Initializer SignedInt 10>
new  <	mov [rbp + 122], rbp>

3780:
old  <	dd 10>
new  <	add rbp, 114>

3781:
old  <>
new  <	jmp printChar>

3782:
old  <section .text>
new  <>

3783:
old  <>
new  < printArgument$395:>

3784:
old  < printFormat:>
new  <	; PostCall 114>

3785:
old  <	; Assign width 0>
new  <>

3786:
old  <	mov dword [rbp + 44], 0>
new  < printArgument$396:>

3787:
old  <>
new  <	; SetReturnValue>

3788:
old  < printFormat$1:>
new  <>

3789:
old  <	; Assign precision 0>
new  < printArgument$397:>

3790:
old  <	mov dword [rbp + 48], 0>
new  <	; Return arg_list>

3791:
old  <>
new  <	mov rbx, [rbp + 32]>

3792:
old  < printFormat$2:>
new  <	mov rax, [rbp]>

3793:
old  <	; Assign percent 0>
new  <	mov rdi, [rbp + 16]>

3794:
old  <	mov dword [rbp + 52], 0>
new  <	mov rbp, [rbp + 8]>

3795:
old  <>
new  <	jmp rax>

3796:
old  < printFormat$3:>
new  <>

3797:
old  <	; Assign plus 0>
new  < printArgument$398:>

3798:
old  <	mov dword [rbp + 56], 0>
new  <	; FunctionEnd printArgument>

3800:
old  < printFormat$4:>
new  <section .data>

3801:
old  <	; Assign minus 0>
new  <>

3802:
old  <	mov dword [rbp + 60], 0>
new  <int4$10#:>

3803:
old  <>
new  <	; Initializer SignedInt 10>

3804:
old  < printFormat$5:>
new  <	dd 10>

3805:
old  <	; Assign space 0>
new  <>

3806:
old  <	mov dword [rbp + 64], 0>
new  <section .text>

3808:
old  < printFormat$6:>
new  < printFormat:>

3809:
old  <	; Assign zero 0>
new  <	; Assign width 0>

3810:
old  <	mov dword [rbp + 68], 0>
new  <	mov dword [rbp + 44], 0>

3812:
old  < printFormat$7:>
new  < printFormat$1:>

3813:
old  <	; Assign grid 0>
new  <	; Assign precision 0>

3814:
old  <	mov dword [rbp + 72], 0>
new  <	mov dword [rbp + 48], 0>

3816:
old  < printFormat$8:>
new  < printFormat$2:>

3817:
old  <	; Assign widthStar 0>
new  <	; Assign percent 0>

3818:
old  <	mov dword [rbp + 76], 0>
new  <	mov dword [rbp + 52], 0>

3820:
old  < printFormat$9:>
new  < printFormat$3:>

3821:
old  <	; Assign period 0>
new  <	; Assign plus 0>

3822:
old  <	mov dword [rbp + 80], 0>
new  <	mov dword [rbp + 56], 0>

3824:
old  < printFormat$10:>
new  < printFormat$4:>

3825:
old  <	; Assign precisionStar 0>
new  <	; Assign minus 0>

3826:
old  <	mov dword [rbp + 84], 0>
new  <	mov dword [rbp + 60], 0>

3828:
old  < printFormat$11:>
new  < printFormat$5:>

3829:
old  <	; Assign shortInt 0>
new  <	; Assign space 0>

3830:
old  <	mov dword [rbp + 88], 0>
new  <	mov dword [rbp + 64], 0>

3832:
old  < printFormat$12:>
new  < printFormat$6:>

3833:
old  <	; Assign longInt 0>
new  <	; Assign zero 0>

3834:
old  <	mov dword [rbp + 92], 0>
new  <	mov dword [rbp + 68], 0>

3836:
old  < printFormat$13:>
new  < printFormat$7:>

3837:
old  <	; Assign longDouble 0>
new  <	; Assign grid 0>

3838:
old  <	mov dword [rbp + 96], 0>
new  <	mov dword [rbp + 72], 0>

3840:
old  < printFormat$14:>
new  < printFormat$8:>

3841:
old  <	; Assign g_outChars 0>
new  <	; Assign widthStar 0>

3842:
old  <	mov dword [g_outChars], 0>
new  <	mov dword [rbp + 76], 0>

3844:
old  < printFormat$15:>
new  < printFormat$9:>

3845:
old  <	; Assign index 0>
new  <	; Assign period 0>

3846:
old  <	mov dword [rbp + 40], 0>
new  <	mov dword [rbp + 80], 0>

3848:
old  < printFormat$16:>
new  < printFormat$10:>

3849:
old  <	; IntegralToIntegral Â£temporary1928 index>
new  <	; Assign precisionStar 0>

3850:
old  <	mov eax, [rbp + 40]>
new  <	mov dword [rbp + 84], 0>

3851:
old  <	mov rbx, 4294967295>
new  <>

3852:
old  <	and rax, rbx>
new  < printFormat$11:>

3853:
old  <>
new  <	; Assign shortInt 0>

3854:
old  < printFormat$17:>
new  <	mov dword [rbp + 88], 0>

3855:
old  <	; BinaryAdd Â£temporary1930 format Â£temporary1928>
new  <>

3856:
old  <	mov rsi, [rbp + 24]>
new  < printFormat$12:>

3857:
old  <	add rsi, rax>
new  <	; Assign longInt 0>

3858:
old  <>
new  <	mov dword [rbp + 92], 0>

3859:
old  < printFormat$18:>
new  <>

3860:
old  <	; Dereference Â£temporary1927 -> Â£temporary1930 Â£temporary1930 0>
new  < printFormat$13:>

3861:
old  <>
new  <	; Assign longDouble 0>

3862:
old  < printFormat$19:>
new  <	mov dword [rbp + 96], 0>

3863:
old  <	; Equal 293 Â£temporary1927 -> Â£temporary1930 0>
new  <>

3864:
old  <	cmp byte [rsi], 0>
new  < printFormat$14:>

3865:
old  <	je printFormat$293>
new  <	; Assign g_outChars 0>

3866:
old  <>
new  <	mov dword [g_outChars], 0>

3867:
old  < printFormat$20:>
new  <>

3868:
old  <	; IntegralToIntegral Â£temporary1934 index>
new  < printFormat$15:>

3869:
old  <	mov eax, [rbp + 40]>
new  <	; Assign index 0>

3870:
old  <	mov rbx, 4294967295>
new  <	mov dword [rbp + 40], 0>

3871:
old  <	and rax, rbx>
new  <>

3872:
old  <>
new  < printFormat$16:>

3873:
old  < printFormat$21:>
new  <	; IntegralToIntegral Â£temporary1915 index>

3874:
old  <	; BinaryAdd Â£temporary1936 format Â£temporary1934>
new  <	mov eax, [rbp + 40]>

3875:
old  <	mov rsi, [rbp + 24]>
new  <	mov rbx, 4294967295>

3876:
old  <	add rsi, rax>
new  <	and rax, rbx>

3878:
old  < printFormat$22:>
new  < printFormat$17:>

3879:
old  <	; Dereference Â£temporary1933 -> Â£temporary1936 Â£temporary1936 0>
new  <	; BinaryAdd Â£temporary1917 format Â£temporary1915>

3880:
old  <>
new  <	mov rsi, [rbp + 24]>

3881:
old  < printFormat$23:>
new  <	add rsi, rax>

3882:
old  <	; Assign c Â£temporary1933 -> Â£temporary1936>
new  <>

3883:
old  <	mov al, [rsi]>
new  < printFormat$18:>

3884:
old  <	mov [rbp + 100], al>
new  <	; Dereference Â£temporary1914 -> Â£temporary1917 Â£temporary1917 0>

3886:
old  < printFormat$24:>
new  < printFormat$19:>

3887:
old  <	; Equal 271 percent 0>
new  <	; Equal 293 Â£temporary1914 -> Â£temporary1917 0>

3888:
old  <	cmp dword [rbp + 52], 0>
new  <	cmp byte [rsi], 0>

3889:
old  <	je printFormat$271>
new  <	je printFormat$293>

3891:
old  < printFormat$25:>
new  < printFormat$20:>

3892:
old  <	; Case 54 c 43>
new  <	; IntegralToIntegral Â£temporary1921 index>

3893:
old  <	mov al, [rbp + 100]>
new  <	mov eax, [rbp + 40]>

3894:
old  <	cmp al, 43>
new  <	mov rbx, 4294967295>

3895:
old  <	je printFormat$54>
new  <	and rax, rbx>

3897:
old  < printFormat$26:>
new  < printFormat$21:>

3898:
old  <	; Case 56 c 45>
new  <	; BinaryAdd Â£temporary1923 format Â£temporary1921>

3899:
old  <	cmp al, 45>
new  <	mov rsi, [rbp + 24]>

3900:
old  <	je printFormat$56>
new  <	add rsi, rax>

3902:
old  < printFormat$27:>
new  < printFormat$22:>

3903:
old  <	; Case 58 c 32>
new  <	; Dereference Â£temporary1920 -> Â£temporary1923 Â£temporary1923 0>

3904:
old  <	cmp al, 32>
new  <>

3905:
old  <	je printFormat$58>
new  < printFormat$23:>

3906:
old  <>
new  <	; Assign c Â£temporary1920 -> Â£temporary1923>

3907:
old  < printFormat$28:>
new  <	mov al, [rsi]>

3908:
old  <	; Case 60 c 48>
new  <	mov [rbp + 100], al>

3909:
old  <	cmp al, 48>
new  <>

3910:
old  <	je printFormat$60>
new  < printFormat$24:>

3911:
old  <>
new  <	; Equal 271 percent 0>

3912:
old  < printFormat$29:>
new  <	cmp dword [rbp + 52], 0>

3913:
old  <	; Case 62 c 35>
new  <	je printFormat$271>

3914:
old  <	cmp al, 35>
new  <>

3915:
old  <	je printFormat$62>
new  < printFormat$25:>

3916:
old  <>
new  <	; Case 54 c 43>

3917:
old  < printFormat$30:>
new  <	mov al, [rbp + 100]>

3918:
old  <	; Case 64 c 46>
new  <	cmp al, 43>

3919:
old  <	cmp al, 46>
new  <	je printFormat$54>

3920:
old  <	je printFormat$64>
new  <>

3921:
old  <>
new  < printFormat$26:>

3922:
old  < printFormat$31:>
new  <	; Case 56 c 45>

3923:
old  <	; Case 66 c 42>
new  <	cmp al, 45>

3924:
old  <	cmp al, 42>
new  <	je printFormat$56>

3925:
old  <	je printFormat$66>
new  <>

3926:
old  <>
new  < printFormat$27:>

3927:
old  < printFormat$32:>
new  <	; Case 58 c 32>

3928:
old  <	; Case 71 c 104>
new  <	cmp al, 32>

3929:
old  <	cmp al, 104>
new  <	je printFormat$58>

3930:
old  <	je printFormat$71>
new  <>

3931:
old  <>
new  < printFormat$28:>

3932:
old  < printFormat$33:>
new  <	; Case 60 c 48>

3933:
old  <	; Case 73 c 108>
new  <	cmp al, 48>

3934:
old  <	cmp al, 108>
new  <	je printFormat$60>

3935:
old  <	je printFormat$73>
new  <>

3936:
old  <>
new  < printFormat$29:>

3937:
old  < printFormat$34:>
new  <	; Case 62 c 35>

3938:
old  <	; Case 75 c 76>
new  <	cmp al, 35>

3939:
old  <	cmp al, 76>
new  <	je printFormat$62>

3940:
old  <	je printFormat$75>
new  <>

3941:
old  <>
new  < printFormat$30:>

3942:
old  < printFormat$35:>
new  <	; Case 64 c 46>

3943:
old  <	; Case 77 c 37>
new  <	cmp al, 46>

3944:
old  <	cmp al, 37>
new  <	je printFormat$64>

3945:
old  <	je printFormat$77>
new  <>

3946:
old  <>
new  < printFormat$31:>

3947:
old  < printFormat$36:>
new  <	; Case 66 c 42>

3948:
old  <	; Case 77 c 110>
new  <	cmp al, 42>

3949:
old  <	cmp al, 110>
new  <	je printFormat$66>

3950:
old  <	je printFormat$77>
new  <>

3951:
old  <>
new  < printFormat$32:>

3952:
old  < printFormat$37:>
new  <	; Case 71 c 104>

3953:
old  <	; Case 77 c 112>
new  <	cmp al, 104>

3954:
old  <	cmp al, 112>
new  <	je printFormat$71>

3955:
old  <	je printFormat$77>
new  <>

3956:
old  <>
new  < printFormat$33:>

3957:
old  < printFormat$38:>
new  <	; Case 73 c 108>

3958:
old  <	; Case 77 c 71>
new  <	cmp al, 108>

3959:
old  <	cmp al, 71>
new  <	je printFormat$73>

3960:
old  <	je printFormat$77>
new  <>

3961:
old  <>
new  < printFormat$34:>

3962:
old  < printFormat$39:>
new  <	; Case 75 c 76>

3963:
old  <	; Case 77 c 103>
new  <	cmp al, 76>

3964:
old  <	cmp al, 103>
new  <	je printFormat$75>

3965:
old  <	je printFormat$77>
new  <>

3966:
old  <>
new  < printFormat$35:>

3967:
old  < printFormat$40:>
new  <	; Case 77 c 37>

3968:
old  <	; Case 77 c 69>
new  <	cmp al, 37>

3969:
old  <	cmp al, 69>
new  <	je printFormat$77>

3970:
old  <	je printFormat$77>
new  <>

3971:
old  <>
new  < printFormat$36:>

3972:
old  < printFormat$41:>
new  <	; Case 77 c 110>

3973:
old  <	; Case 77 c 101>
new  <	cmp al, 110>

3974:
old  <	cmp al, 101>
new  <	je printFormat$77>

3975:
old  <	je printFormat$77>
new  <>

3976:
old  <>
new  < printFormat$37:>

3977:
old  < printFormat$42:>
new  <	; Case 77 c 112>

3978:
old  <	; Case 77 c 102>
new  <	cmp al, 112>

3979:
old  <	cmp al, 102>
new  <	je printFormat$77>

3980:
old  <	je printFormat$77>
new  <>

3981:
old  <>
new  < printFormat$38:>

3982:
old  < printFormat$43:>
new  <	; Case 77 c 71>

3983:
old  <	; Case 77 c 115>
new  <	cmp al, 71>

3984:
old  <	cmp al, 115>
new  <	je printFormat$77>

3985:
old  <	je printFormat$77>
new  <>

3986:
old  <>
new  < printFormat$39:>

3987:
old  < printFormat$44:>
new  <	; Case 77 c 103>

3988:
old  <	; Case 77 c 99>
new  <	cmp al, 103>

3989:
old  <	cmp al, 99>
new  <	je printFormat$77>

3990:
old  <	je printFormat$77>
new  <>

3991:
old  <>
new  < printFormat$40:>

3992:
old  < printFormat$45:>
new  <	; Case 77 c 69>

3993:
old  <	; Case 77 c 88>
new  <	cmp al, 69>

3994:
old  <	cmp al, 88>
new  <	je printFormat$77>

3995:
old  <	je printFormat$77>
new  <>

3996:
old  <>
new  < printFormat$41:>

3997:
old  < printFormat$46:>
new  <	; Case 77 c 101>

3998:
old  <	; Case 77 c 120>
new  <	cmp al, 101>

3999:
old  <	cmp al, 120>
new  <	je printFormat$77>

4000:
old  <	je printFormat$77>
new  <>

4001:
old  <>
new  < printFormat$42:>

4002:
old  < printFormat$47:>
new  <	; Case 77 c 102>

4003:
old  <	; Case 77 c 111>
new  <	cmp al, 102>

4004:
old  <	cmp al, 111>
new  <	je printFormat$77>

4005:
old  <	je printFormat$77>
new  <>

4006:
old  <>
new  < printFormat$43:>

4007:
old  < printFormat$48:>
new  <	; Case 77 c 115>

4008:
old  <	; Case 77 c 98>
new  <	cmp al, 115>

4009:
old  <	cmp al, 98>
new  <	je printFormat$77>

4010:
old  <	je printFormat$77>
new  <>

4011:
old  <>
new  < printFormat$44:>

4012:
old  < printFormat$49:>
new  <	; Case 77 c 99>

4013:
old  <	; Case 77 c 117>
new  <	cmp al, 99>

4014:
old  <	cmp al, 117>
new  <	je printFormat$77>

4015:
old  <	je printFormat$77>
new  <>

4016:
old  <>
new  < printFormat$45:>

4017:
old  < printFormat$50:>
new  <	; Case 77 c 88>

4018:
old  <	; Case 77 c 100>
new  <	cmp al, 88>

4019:
old  <	cmp al, 100>
new  <	je printFormat$77>

4020:
old  <	je printFormat$77>
new  <>

4021:
old  <>
new  < printFormat$46:>

4022:
old  < printFormat$51:>
new  <	; Case 77 c 120>

4023:
old  <	; Case 77 c 105>
new  <	cmp al, 120>

4024:
old  <	cmp al, 105>
new  <	je printFormat$77>

4025:
old  <	je printFormat$77>
new  <>

4026:
old  <>
new  < printFormat$47:>

4027:
old  < printFormat$52:>
new  <	; Case 77 c 111>

4028:
old  <	; CaseEnd c>
new  <	cmp al, 111>

4029:
old  <>
new  <	je printFormat$77>

4030:
old  < printFormat$53:>
new  <>

4031:
old  <	; Goto 246>
new  < printFormat$48:>

4032:
old  <	jmp printFormat$246>
new  <	; Case 77 c 98>

4033:
old  <>
new  <	cmp al, 98>

4034:
old  < printFormat$54:>
new  <	je printFormat$77>

4035:
old  <	; Assign plus 1>
new  <>

4036:
old  <	mov dword [rbp + 56], 1>
new  < printFormat$49:>

4037:
old  <>
new  <	; Case 77 c 117>

4038:
old  < printFormat$55:>
new  <	cmp al, 117>

4039:
old  <	; Goto 291>
new  <	je printFormat$77>

4040:
old  <	jmp printFormat$291>
new  <>

4041:
old  <>
new  < printFormat$50:>

4042:
old  < printFormat$56:>
new  <	; Case 77 c 100>

4043:
old  <	; Assign minus 1>
new  <	cmp al, 100>

4044:
old  <	mov dword [rbp + 60], 1>
new  <	je printFormat$77>

4046:
old  < printFormat$57:>
new  < printFormat$51:>

4047:
old  <	; Goto 291>
new  <	; Case 77 c 105>

4048:
old  <	jmp printFormat$291>
new  <	cmp al, 105>

4049:
old  <>
new  <	je printFormat$77>

4050:
old  < printFormat$58:>
new  <>

4051:
old  <	; Assign space 1>
new  < printFormat$52:>

4052:
old  <	mov dword [rbp + 64], 1>
new  <	; CaseEnd c>

4054:
old  < printFormat$59:>
new  < printFormat$53:>

4055:
old  <	; Goto 291>
new  <	; Goto 246>

4056:
old  <	jmp printFormat$291>
new  <	jmp printFormat$246>

4058:
old  < printFormat$60:>
new  < printFormat$54:>

4059:
old  <	; Assign zero 1>
new  <	; Assign plus 1>

4060:
old  <	mov dword [rbp + 68], 1>
new  <	mov dword [rbp + 56], 1>

4062:
old  < printFormat$61:>
new  < printFormat$55:>

4066:
old  < printFormat$62:>
new  < printFormat$56:>

4067:
old  <	; Assign grid 1>
new  <	; Assign minus 1>

4068:
old  <	mov dword [rbp + 72], 1>
new  <	mov dword [rbp + 60], 1>

4070:
old  < printFormat$63:>
new  < printFormat$57:>

4074:
old  < printFormat$64:>
new  < printFormat$58:>

4075:
old  <	; Assign period 1>
new  <	; Assign space 1>

4076:
old  <	mov dword [rbp + 80], 1>
new  <	mov dword [rbp + 64], 1>

4078:
old  < printFormat$65:>
new  < printFormat$59:>

4082:
old  < printFormat$66:>
new  < printFormat$60:>

4083:
old  <	; NotEqual 69 period 0>
new  <	; Assign zero 1>

4084:
old  <	cmp dword [rbp + 80], 0>
new  <	mov dword [rbp + 68], 1>

4085:
old  <	jne printFormat$69>
new  <>

4086:
old  <>
new  < printFormat$61:>

4087:
old  < printFormat$67:>
new  <	; Goto 291>

4088:
old  <	; Assign width -1>
new  <	jmp printFormat$291>

4089:
old  <	mov dword [rbp + 44], -1>
new  <>

4090:
old  <>
new  < printFormat$62:>

4091:
old  < printFormat$68:>
new  <	; Assign grid 1>

4092:
old  <	; Goto 291>
new  <	mov dword [rbp + 72], 1>

4093:
old  <	jmp printFormat$291>
new  <>

4094:
old  <>
new  < printFormat$63:>

4095:
old  < printFormat$69:>
new  <	; Goto 291>

4096:
old  <	; Assign precision -1>
new  <	jmp printFormat$291>

4097:
old  <	mov dword [rbp + 48], -1>
new  <>

4098:
old  <>
new  < printFormat$64:>

4099:
old  < printFormat$70:>
new  <	; Assign period 1>

4100:
old  <	; Goto 291>
new  <	mov dword [rbp + 80], 1>

4101:
old  <	jmp printFormat$291>
new  <>

4102:
old  <>
new  < printFormat$65:>

4103:
old  < printFormat$71:>
new  <	; Goto 291>

4104:
old  <	; Assign shortInt 1>
new  <	jmp printFormat$291>

4105:
old  <	mov dword [rbp + 88], 1>
new  <>

4106:
old  <>
new  < printFormat$66:>

4107:
old  < printFormat$72:>
new  <	; NotEqual 69 period 0>

4108:
old  <	; Goto 291>
new  <	cmp dword [rbp + 80], 0>

4109:
old  <	jmp printFormat$291>
new  <	jne printFormat$69>

4111:
old  < printFormat$73:>
new  < printFormat$67:>

4112:
old  <	; Assign longInt 1>
new  <	; Assign width -1>

4113:
old  <	mov dword [rbp + 92], 1>
new  <	mov dword [rbp + 44], -1>

4115:
old  < printFormat$74:>
new  < printFormat$68:>

4119:
old  < printFormat$75:>
new  < printFormat$69:>

4120:
old  <	; Assign longDouble 1>
new  <	; Assign precision -1>

4121:
old  <	mov dword [rbp + 96], 1>
new  <	mov dword [rbp + 48], -1>

4123:
old  < printFormat$76:>
new  < printFormat$70:>

4127:
old  < printFormat$77:>
new  < printFormat$71:>

4128:
old  <	; Equal 110 minus 0>
new  <	; Assign shortInt 1>

4129:
old  <	cmp dword [rbp + 60], 0>
new  <	mov dword [rbp + 88], 1>

4130:
old  <	je printFormat$110>
new  <>

4131:
old  <>
new  < printFormat$72:>

4132:
old  < printFormat$78:>
new  <	; Goto 291>

4133:
old  <	; Assign startChars g_outChars>
new  <	jmp printFormat$291>

4134:
old  <	mov eax, [g_outChars]>
new  <>

4135:
old  <	mov [rbp + 101], eax>
new  < printFormat$73:>

4136:
old  <>
new  <	; Assign longInt 1>

4137:
old  < printFormat$79:>
new  <	mov dword [rbp + 92], 1>

4138:
old  <	; PreCall 105 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

4139:
old  <>
new  < printFormat$74:>

4140:
old  < printFormat$80:>
new  <	; Goto 291>

4141:
old  <	; IntegralToIntegral Â£temporary1940 index>
new  <	jmp printFormat$291>

4142:
old  <	mov eax, [rbp + 40]>
new  <>

4143:
old  <	mov rbx, 4294967295>
new  < printFormat$75:>

4144:
old  <	and rax, rbx>
new  <	; Assign longDouble 1>

4145:
old  <>
new  <	mov dword [rbp + 96], 1>

4146:
old  < printFormat$81:>
new  <>

4147:
old  <	; BinaryAdd Â£temporary1942 format Â£temporary1940>
new  < printFormat$76:>

4148:
old  <	mov rsi, [rbp + 24]>
new  <	; Goto 291>

4149:
old  <	add rsi, rax>
new  <	jmp printFormat$291>

4151:
old  < printFormat$82:>
new  < printFormat$77:>

4152:
old  <	; Dereference Â£temporary1939 -> Â£temporary1942 Â£temporary1942 0>
new  <	; Equal 110 minus 0>

4153:
old  <>
new  <	cmp dword [rbp + 60], 0>

4154:
old  < printFormat$83:>
new  <	je printFormat$110>

4155:
old  <	; Address Â£temporary1943 Â£temporary1939 -> Â£temporary1942>
new  <>

4156:
old  <>
new  < printFormat$78:>

4157:
old  < printFormat$84:>
new  <	; Assign startChars g_outChars>

4158:
old  <	; Parameter 129 pointer Â£temporary1943>
new  <	mov eax, [g_outChars]>

4159:
old  <	mov [rbp + 129], rsi>
new  <	mov [rbp + 101], eax>

4161:
old  < printFormat$85:>
new  < printFormat$79:>

4162:
old  <	; Parameter 137 pointer arg_list>
new  <	; PreCall 105 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

4163:
old  <	mov rax, [rbp + 32]>
new  <>

4164:
old  <	mov [rbp + 137], rax>
new  < printFormat$80:>

4165:
old  <>
new  <	; IntegralToIntegral Â£temporary1927 index>

4166:
old  < printFormat$86:>
new  <	mov eax, [rbp + 40]>

4167:
old  <	; Parameter 145 signedint plus>
new  <	mov rbx, 4294967295>

4168:
old  <	mov eax, [rbp + 56]>
new  <	and rax, rbx>

4169:
old  <	mov [rbp + 145], eax>
new  <>

4170:
old  <>
new  < printFormat$81:>

4171:
old  < printFormat$87:>
new  <	; BinaryAdd Â£temporary1929 format Â£temporary1927>

4172:
old  <	; Parameter 149 signedint space>
new  <	mov rsi, [rbp + 24]>

4173:
old  <	mov eax, [rbp + 64]>
new  <	add rsi, rax>

4174:
old  <	mov [rbp + 149], eax>
new  <>

4175:
old  <>
new  < printFormat$82:>

4176:
old  < printFormat$88:>
new  <	; Dereference Â£temporary1926 -> Â£temporary1929 Â£temporary1929 0>

4177:
old  <	; Parameter 153 signedint grid>
new  <>

4178:
old  <	mov eax, [rbp + 72]>
new  < printFormat$83:>

4179:
old  <	mov [rbp + 153], eax>
new  <	; Address Â£temporary1930 Â£temporary1926 -> Â£temporary1929>

4181:
old  < printFormat$89:>
new  < printFormat$84:>

4182:
old  <	; Address Â£temporary1944 width>
new  <	; Parameter 129 pointer Â£temporary1930>

4183:
old  <	mov rsi, rbp>
new  <	mov [rbp + 129], rsi>

4184:
old  <	add rsi, 44>
new  <>

4185:
old  <>
new  < printFormat$85:>

4186:
old  < printFormat$90:>
new  <	; Parameter 137 pointer arg_list>

4187:
old  <	; Parameter 157 pointer Â£temporary1944>
new  <	mov rax, [rbp + 32]>

4188:
old  <	mov [rbp + 157], rsi>
new  <	mov [rbp + 137], rax>

4190:
old  < printFormat$91:>
new  < printFormat$86:>

4191:
old  <	; Parameter 165 signedint precision>
new  <	; Parameter 145 signedint plus>

4192:
old  <	mov eax, [rbp + 48]>
new  <	mov eax, [rbp + 56]>

4193:
old  <	mov [rbp + 165], eax>
new  <	mov [rbp + 145], eax>

4195:
old  < printFormat$92:>
new  < printFormat$87:>

4196:
old  <	; Parameter 169 signedint shortInt>
new  <	; Parameter 149 signedint space>

4197:
old  <	mov eax, [rbp + 88]>
new  <	mov eax, [rbp + 64]>

4198:
old  <	mov [rbp + 169], eax>
new  <	mov [rbp + 149], eax>

4200:
old  < printFormat$93:>
new  < printFormat$88:>

4201:
old  <	; Parameter 173 signedint longInt>
new  <	; Parameter 153 signedint grid>

4202:
old  <	mov eax, [rbp + 92]>
new  <	mov eax, [rbp + 72]>

4203:
old  <	mov [rbp + 173], eax>
new  <	mov [rbp + 153], eax>

4205:
old  < printFormat$94:>
new  < printFormat$89:>

4206:
old  <	; Parameter 177 signedint longDouble>
new  <	; Address Â£temporary1931 width>

4207:
old  <	mov eax, [rbp + 96]>
new  <	mov rsi, rbp>

4208:
old  <	mov [rbp + 177], eax>
new  <	add rsi, 44>

4210:
old  < printFormat$95:>
new  < printFormat$90:>

4211:
old  <	; Parameter 181 signedint 1>
new  <	; Parameter 157 pointer Â£temporary1931>

4212:
old  <	mov dword [rbp + 181], 1>
new  <	mov [rbp + 157], rsi>

4214:
old  < printFormat$96:>
new  < printFormat$91:>

4215:
old  <	; Parameter 185 pointer 0>
new  <	; Parameter 165 signedint precision>

4216:
old  <	mov qword [rbp + 185], 0>
new  <	mov eax, [rbp + 48]>

4217:
old  <>
new  <	mov [rbp + 165], eax>

4218:
old  < printFormat$97:>
new  <>

4219:
old  <	; Call 105 printArgument 0>
new  < printFormat$92:>

4220:
old  <	mov qword [rbp + 105], printFormat$98>
new  <	; Parameter 169 signedint shortInt>

4221:
old  <	mov [rbp + 113], rbp>
new  <	mov eax, [rbp + 88]>

4222:
old  <	add rbp, 105>
new  <	mov [rbp + 169], eax>

4223:
old  <	jmp printArgument>
new  <>

4224:
old  <>
new  < printFormat$93:>

4225:
old  < printFormat$98:>
new  <	; Parameter 173 signedint longInt>

4226:
old  <	; PostCall 105>
new  <	mov eax, [rbp + 92]>

4227:
old  <>
new  <	mov [rbp + 173], eax>

4228:
old  < printFormat$99:>
new  <>

4229:
old  <	; GetReturnValue Â£temporary1945>
new  < printFormat$94:>

4230:
old  <>
new  <	; Parameter 177 signedint longDouble>

4231:
old  < printFormat$100:>
new  <	mov eax, [rbp + 96]>

4232:
old  <	; Assign arg_list Â£temporary1945>
new  <	mov [rbp + 177], eax>

4233:
old  <	mov [rbp + 32], rbx>
new  <>

4234:
old  <>
new  < printFormat$95:>

4235:
old  < printFormat$101:>
new  <	; Parameter 181 signedint 1>

4236:
old  <	; BinarySubtract field g_outChars startChars>
new  <	mov dword [rbp + 181], 1>

4237:
old  <	mov eax, [g_outChars]>
new  <>

4238:
old  <	sub eax, [rbp + 101]>
new  < printFormat$96:>

4239:
old  <	mov [rbp + 105], eax>
new  <	; Parameter 185 pointer 0>

4240:
old  <>
new  <	mov qword [rbp + 185], 0>

4241:
old  < printFormat$102:>
new  <>

4242:
old  <	; Assign Â£temporary1947 field>
new  < printFormat$97:>

4243:
old  <	mov eax, [rbp + 105]>
new  <	; Call 105 printArgument 0>

4244:
old  <>
new  <	mov qword [rbp + 105], printFormat$98>

4245:
old  < printFormat$103:>
new  <	mov [rbp + 113], rbp>

4246:
old  <	; BinaryAdd field field 1>
new  <	add rbp, 105>

4247:
old  <	inc dword [rbp + 105]>
new  <	jmp printArgument>

4249:
old  < printFormat$104:>
new  < printFormat$98:>

4250:
old  <	; SignedGreaterThanEqual 244 Â£temporary1947 width>
new  <	; PostCall 105>

4251:
old  <	cmp eax, [rbp + 44]>
new  <>

4252:
old  <	jge printFormat$244>
new  < printFormat$99:>

4253:
old  <>
new  <	; GetReturnValue Â£temporary1932>

4254:
old  < printFormat$105:>
new  <>

4255:
old  <	; PreCall 109 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < printFormat$100:>

4256:
old  <>
new  <	; Assign arg_list Â£temporary1932>

4257:
old  < printFormat$106:>
new  <	mov [rbp + 32], rbx>

4258:
old  <	; Parameter 133 signedchar 32>
new  <>

4259:
old  <	mov byte [rbp + 133], 32>
new  < printFormat$101:>

4260:
old  <>
new  <	; BinarySubtract field g_outChars startChars>

4261:
old  < printFormat$107:>
new  <	mov eax, [g_outChars]>

4262:
old  <	; Call 109 printChar 0>
new  <	sub eax, [rbp + 101]>

4263:
old  <	mov qword [rbp + 109], printFormat$108>
new  <	mov [rbp + 105], eax>

4264:
old  <	mov [rbp + 117], rbp>
new  <>

4265:
old  <	add rbp, 109>
new  < printFormat$102:>

4266:
old  <	jmp printChar>
new  <	; Assign Â£temporary1934 field>

4267:
old  <>
new  <	mov eax, [rbp + 105]>

4268:
old  < printFormat$108:>
new  <>

4269:
old  <	; PostCall 109>
new  < printFormat$103:>

4270:
old  <>
new  <	; BinaryAdd field field 1>

4271:
old  < printFormat$109:>
new  <	inc dword [rbp + 105]>

4272:
old  <	; Goto 102>
new  <>

4273:
old  <	jmp printFormat$102>
new  < printFormat$104:>

4274:
old  <>
new  <	; SignedGreaterThanEqual 244 Â£temporary1934 width>

4275:
old  < printFormat$110:>
new  <	cmp eax, [rbp + 44]>

4276:
old  <	; Equal 189 zero 0>
new  <	jge printFormat$244>

4277:
old  <	cmp dword [rbp + 68], 0>
new  <>

4278:
old  <	je printFormat$189>
new  < printFormat$105:>

4279:
old  <>
new  <	; PreCall 109 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

4280:
old  < printFormat$111:>
new  <>

4281:
old  <	; Assign startChars g_outChars>
new  < printFormat$106:>

4282:
old  <	mov eax, [g_outChars]>
new  <	; Parameter 133 signedchar 32>

4283:
old  <	mov [rbp + 101], eax>
new  <	mov byte [rbp + 133], 32>

4285:
old  < printFormat$112:>
new  < printFormat$107:>

4286:
old  <	; Assign oldOutStatus g_outStatus>
new  <	; Call 109 printChar 0>

4287:
old  <	mov eax, [g_outStatus]>
new  <	mov qword [rbp + 109], printFormat$108>

4288:
old  <	mov [rbp + 105], eax>
new  <	mov [rbp + 117], rbp>

4289:
old  <>
new  <	add rbp, 109>

4290:
old  < printFormat$113:>
new  <	jmp printChar>

4291:
old  <	; Assign negative 0>
new  <>

4292:
old  <	mov dword [rbp + 109], 0>
new  < printFormat$108:>

4293:
old  <>
new  <	; PostCall 109>

4294:
old  < printFormat$114:>
new  <>

4295:
old  <	; Assign g_outStatus 2>
new  < printFormat$109:>

4296:
old  <	mov dword [g_outStatus], 2>
new  <	; Goto 102>

4297:
old  <>
new  <	jmp printFormat$102>

4298:
old  < printFormat$115:>
new  <>

4299:
old  <	; PreCall 113 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < printFormat$110:>

4300:
old  <>
new  <	; Equal 189 zero 0>

4301:
old  < printFormat$116:>
new  <	cmp dword [rbp + 68], 0>

4302:
old  <	; IntegralToIntegral Â£temporary1951 index>
new  <	je printFormat$189>

4303:
old  <	mov eax, [rbp + 40]>
new  <>

4304:
old  <	mov rbx, 4294967295>
new  < printFormat$111:>

4305:
old  <	and rax, rbx>
new  <	; Assign startChars g_outChars>

4306:
old  <>
new  <	mov eax, [g_outChars]>

4307:
old  < printFormat$117:>
new  <	mov [rbp + 101], eax>

4308:
old  <	; BinaryAdd Â£temporary1953 format Â£temporary1951>
new  <>

4309:
old  <	mov rsi, [rbp + 24]>
new  < printFormat$112:>

4310:
old  <	add rsi, rax>
new  <	; Assign oldOutStatus g_outStatus>

4311:
old  <>
new  <	mov eax, [g_outStatus]>

4312:
old  < printFormat$118:>
new  <	mov [rbp + 105], eax>

4313:
old  <	; Dereference Â£temporary1950 -> Â£temporary1953 Â£temporary1953 0>
new  <>

4314:
old  <>
new  < printFormat$113:>

4315:
old  < printFormat$119:>
new  <	; Assign negative 0>

4316:
old  <	; Address Â£temporary1954 Â£temporary1950 -> Â£temporary1953>
new  <	mov dword [rbp + 109], 0>

4318:
old  < printFormat$120:>
new  < printFormat$114:>

4319:
old  <	; Parameter 137 pointer Â£temporary1954>
new  <	; Assign g_outStatus 2>

4320:
old  <	mov [rbp + 137], rsi>
new  <	mov dword [g_outStatus], 2>

4322:
old  < printFormat$121:>
new  < printFormat$115:>

4323:
old  <	; Parameter 145 pointer arg_list>
new  <	; PreCall 113 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

4324:
old  <	mov rax, [rbp + 32]>
new  <>

4325:
old  <	mov [rbp + 145], rax>
new  < printFormat$116:>

4326:
old  <>
new  <	; IntegralToIntegral Â£temporary1938 index>

4327:
old  < printFormat$122:>
new  <	mov eax, [rbp + 40]>

4328:
old  <	; Parameter 153 signedint 0>
new  <	mov rbx, 4294967295>

4329:
old  <	mov dword [rbp + 153], 0>
new  <	and rax, rbx>

4331:
old  < printFormat$123:>
new  < printFormat$117:>

4332:
old  <	; Parameter 157 signedint 0>
new  <	; BinaryAdd Â£temporary1940 format Â£temporary1938>

4333:
old  <	mov dword [rbp + 157], 0>
new  <	mov rsi, [rbp + 24]>

4334:
old  <>
new  <	add rsi, rax>

4335:
old  < printFormat$124:>
new  <>

4336:
old  <	; Parameter 161 signedint grid>
new  < printFormat$118:>

4337:
old  <	mov eax, [rbp + 72]>
new  <	; Dereference Â£temporary1937 -> Â£temporary1940 Â£temporary1940 0>

4338:
old  <	mov [rbp + 161], eax>
new  <>

4339:
old  <>
new  < printFormat$119:>

4340:
old  < printFormat$125:>
new  <	; Address Â£temporary1941 Â£temporary1937 -> Â£temporary1940>

4341:
old  <	; Address Â£temporary1955 width>
new  <>

4342:
old  <	mov rsi, rbp>
new  < printFormat$120:>

4343:
old  <	add rsi, 44>
new  <	; Parameter 137 pointer Â£temporary1941>

4344:
old  <>
new  <	mov [rbp + 137], rsi>

4345:
old  < printFormat$126:>
new  <>

4346:
old  <	; Parameter 165 pointer Â£temporary1955>
new  < printFormat$121:>

4347:
old  <	mov [rbp + 165], rsi>
new  <	; Parameter 145 pointer arg_list>

4348:
old  <>
new  <	mov rax, [rbp + 32]>

4349:
old  < printFormat$127:>
new  <	mov [rbp + 145], rax>

4350:
old  <	; Parameter 173 signedint precision>
new  <>

4351:
old  <	mov eax, [rbp + 48]>
new  < printFormat$122:>

4352:
old  <	mov [rbp + 173], eax>
new  <	; Parameter 153 signedint 0>

4353:
old  <>
new  <	mov dword [rbp + 153], 0>

4354:
old  < printFormat$128:>
new  <>

4355:
old  <	; Parameter 177 signedint shortInt>
new  < printFormat$123:>

4356:
old  <	mov eax, [rbp + 88]>
new  <	; Parameter 157 signedint 0>

4357:
old  <	mov [rbp + 177], eax>
new  <	mov dword [rbp + 157], 0>

4359:
old  < printFormat$129:>
new  < printFormat$124:>

4360:
old  <	; Parameter 181 signedint longInt>
new  <	; Parameter 161 signedint grid>

4361:
old  <	mov eax, [rbp + 92]>
new  <	mov eax, [rbp + 72]>

4362:
old  <	mov [rbp + 181], eax>
new  <	mov [rbp + 161], eax>

4364:
old  < printFormat$130:>
new  < printFormat$125:>

4365:
old  <	; Parameter 185 signedint longDouble>
new  <	; Address Â£temporary1942 width>

4366:
old  <	mov eax, [rbp + 96]>
new  <	mov rsi, rbp>

4367:
old  <	mov [rbp + 185], eax>
new  <	add rsi, 44>

4369:
old  < printFormat$131:>
new  < printFormat$126:>

4370:
old  <	; Parameter 189 signedint 0>
new  <	; Parameter 165 pointer Â£temporary1942>

4371:
old  <	mov dword [rbp + 189], 0>
new  <	mov [rbp + 165], rsi>

4373:
old  < printFormat$132:>
new  < printFormat$127:>

4374:
old  <	; Address Â£temporary1956 negative>
new  <	; Parameter 173 signedint precision>

4375:
old  <	mov rsi, rbp>
new  <	mov eax, [rbp + 48]>

4376:
old  <	add rsi, 109>
new  <	mov [rbp + 173], eax>

4378:
old  < printFormat$133:>
new  < printFormat$128:>

4379:
old  <	; Parameter 193 pointer Â£temporary1956>
new  <	; Parameter 177 signedint shortInt>

4380:
old  <	mov [rbp + 193], rsi>
new  <	mov eax, [rbp + 88]>

4381:
old  <>
new  <	mov [rbp + 177], eax>

4382:
old  < printFormat$134:>
new  <>

4383:
old  <	; Call 113 printArgument 0>
new  < printFormat$129:>

4384:
old  <	mov qword [rbp + 113], printFormat$135>
new  <	; Parameter 181 signedint longInt>

4385:
old  <	mov [rbp + 121], rbp>
new  <	mov eax, [rbp + 92]>

4386:
old  <	add rbp, 113>
new  <	mov [rbp + 181], eax>

4387:
old  <	jmp printArgument>
new  <>

4388:
old  <>
new  < printFormat$130:>

4389:
old  < printFormat$135:>
new  <	; Parameter 185 signedint longDouble>

4390:
old  <	; PostCall 113>
new  <	mov eax, [rbp + 96]>

4391:
old  <>
new  <	mov [rbp + 185], eax>

4392:
old  < printFormat$136:>
new  <>

4393:
old  <	; Assign g_outStatus oldOutStatus>
new  < printFormat$131:>

4394:
old  <	mov eax, [rbp + 105]>
new  <	; Parameter 189 signedint 0>

4395:
old  <	mov [g_outStatus], eax>
new  <	mov dword [rbp + 189], 0>

4397:
old  < printFormat$137:>
new  < printFormat$132:>

4398:
old  <	; BinarySubtract field g_outChars startChars>
new  <	; Address Â£temporary1943 negative>

4399:
old  <	mov eax, [g_outChars]>
new  <	mov rsi, rbp>

4400:
old  <	sub eax, [rbp + 101]>
new  <	add rsi, 109>

4401:
old  <	mov [rbp + 113], eax>
new  <>

4402:
old  <>
new  < printFormat$133:>

4403:
old  < printFormat$138:>
new  <	; Parameter 193 pointer Â£temporary1943>

4404:
old  <	; Assign g_outChars startChars>
new  <	mov [rbp + 193], rsi>

4405:
old  <	mov eax, [rbp + 101]>
new  <>

4406:
old  <	mov [g_outChars], eax>
new  < printFormat$134:>

4407:
old  <>
new  <	; Call 113 printArgument 0>

4408:
old  < printFormat$139:>
new  <	mov qword [rbp + 113], printFormat$135>

4409:
old  <	; Equal 146 negative 0>
new  <	mov [rbp + 121], rbp>

4410:
old  <	cmp dword [rbp + 109], 0>
new  <	add rbp, 113>

4411:
old  <	je printFormat$146>
new  <	jmp printArgument>

4413:
old  < printFormat$140:>
new  < printFormat$135:>

4414:
old  <	; PreCall 117 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; PostCall 113>

4416:
old  < printFormat$141:>
new  < printFormat$136:>

4417:
old  <	; Parameter 141 signedchar 45>
new  <	; Assign g_outStatus oldOutStatus>

4418:
old  <	mov byte [rbp + 141], 45>
new  <	mov eax, [rbp + 105]>

4419:
old  <>
new  <	mov [g_outStatus], eax>

4420:
old  < printFormat$142:>
new  <>

4421:
old  <	; Call 117 printChar 0>
new  < printFormat$137:>

4422:
old  <	mov qword [rbp + 117], printFormat$143>
new  <	; BinarySubtract field g_outChars startChars>

4423:
old  <	mov [rbp + 125], rbp>
new  <	mov eax, [g_outChars]>

4424:
old  <	add rbp, 117>
new  <	sub eax, [rbp + 101]>

4425:
old  <	jmp printChar>
new  <	mov [rbp + 113], eax>

4427:
old  < printFormat$143:>
new  < printFormat$138:>

4428:
old  <	; PostCall 117>
new  <	; Assign g_outChars startChars>

4429:
old  <>
new  <	mov eax, [rbp + 101]>

4430:
old  < printFormat$144:>
new  <	mov [g_outChars], eax>

4431:
old  <	; BinaryAdd field field 1>
new  <>

4432:
old  <	inc dword [rbp + 113]>
new  < printFormat$139:>

4433:
old  <>
new  <	; Equal 146 negative 0>

4434:
old  < printFormat$145:>
new  <	cmp dword [rbp + 109], 0>

4435:
old  <	; Goto 159>
new  <	je printFormat$146>

4436:
old  <	jmp printFormat$159>
new  <>

4437:
old  <>
new  < printFormat$140:>

4438:
old  < printFormat$146:>
new  <	; PreCall 117 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

4439:
old  <	; Equal 153 plus 0>
new  <>

4440:
old  <	cmp dword [rbp + 56], 0>
new  < printFormat$141:>

4441:
old  <	je printFormat$153>
new  <	; Parameter 141 signedchar 45>

4442:
old  <>
new  <	mov byte [rbp + 141], 45>

4443:
old  < printFormat$147:>
new  <>

4444:
old  <	; PreCall 117 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < printFormat$142:>

4445:
old  <>
new  <	; Call 117 printChar 0>

4446:
old  < printFormat$148:>
new  <	mov qword [rbp + 117], printFormat$143>

4447:
old  <	; Parameter 141 signedchar 43>
new  <	mov [rbp + 125], rbp>

4448:
old  <	mov byte [rbp + 141], 43>
new  <	add rbp, 117>

4449:
old  <>
new  <	jmp printChar>

4450:
old  < printFormat$149:>
new  <>

4451:
old  <	; Call 117 printChar 0>
new  < printFormat$143:>

4452:
old  <	mov qword [rbp + 117], printFormat$150>
new  <	; PostCall 117>

4453:
old  <	mov [rbp + 125], rbp>
new  <>

4454:
old  <	add rbp, 117>
new  < printFormat$144:>

4455:
old  <	jmp printChar>
new  <	; BinaryAdd field field 1>

4456:
old  <>
new  <	inc dword [rbp + 113]>

4457:
old  < printFormat$150:>
new  <>

4458:
old  <	; PostCall 117>
new  < printFormat$145:>

4459:
old  <>
new  <	; Goto 159>

4460:
old  < printFormat$151:>
new  <	jmp printFormat$159>

4461:
old  <	; BinaryAdd field field 1>
new  <>

4462:
old  <	inc dword [rbp + 113]>
new  < printFormat$146:>

4463:
old  <>
new  <	; Equal 153 plus 0>

4464:
old  < printFormat$152:>
new  <	cmp dword [rbp + 56], 0>

4465:
old  <	; Goto 159>
new  <	je printFormat$153>

4466:
old  <	jmp printFormat$159>
new  <>

4467:
old  <>
new  < printFormat$147:>

4468:
old  < printFormat$153:>
new  <	; PreCall 117 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

4469:
old  <	; Equal 159 space 0>
new  <>

4470:
old  <	cmp dword [rbp + 64], 0>
new  < printFormat$148:>

4471:
old  <	je printFormat$159>
new  <	; Parameter 141 signedchar 43>

4472:
old  <>
new  <	mov byte [rbp + 141], 43>

4473:
old  < printFormat$154:>
new  <>

4474:
old  <	; PreCall 117 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < printFormat$149:>

4475:
old  <>
new  <	; Call 117 printChar 0>

4476:
old  < printFormat$155:>
new  <	mov qword [rbp + 117], printFormat$150>

4477:
old  <	; Parameter 141 signedchar 32>
new  <	mov [rbp + 125], rbp>

4478:
old  <	mov byte [rbp + 141], 32>
new  <	add rbp, 117>

4479:
old  <>
new  <	jmp printChar>

4480:
old  < printFormat$156:>
new  <>

4481:
old  <	; Call 117 printChar 0>
new  < printFormat$150:>

4482:
old  <	mov qword [rbp + 117], printFormat$157>
new  <	; PostCall 117>

4483:
old  <	mov [rbp + 125], rbp>
new  <>

4484:
old  <	add rbp, 117>
new  < printFormat$151:>

4485:
old  <	jmp printChar>
new  <	; BinaryAdd field field 1>

4486:
old  <>
new  <	inc dword [rbp + 113]>

4487:
old  < printFormat$157:>
new  <>

4488:
old  <	; PostCall 117>
new  < printFormat$152:>

4489:
old  <>
new  <	; Goto 159>

4490:
old  < printFormat$158:>
new  <	jmp printFormat$159>

4491:
old  <	; BinaryAdd field field 1>
new  <>

4492:
old  <	inc dword [rbp + 113]>
new  < printFormat$153:>

4493:
old  <>
new  <	; Equal 159 space 0>

4494:
old  < printFormat$159:>
new  <	cmp dword [rbp + 64], 0>

4495:
old  <	; Assign Â£temporary1968 field>
new  <	je printFormat$159>

4496:
old  <	mov eax, [rbp + 113]>
new  <>

4497:
old  <>
new  < printFormat$154:>

4498:
old  < printFormat$160:>
new  <	; PreCall 117 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

4499:
old  <	; BinaryAdd field field 1>
new  <>

4500:
old  <	inc dword [rbp + 113]>
new  < printFormat$155:>

4501:
old  <>
new  <	; Parameter 141 signedchar 32>

4502:
old  < printFormat$161:>
new  <	mov byte [rbp + 141], 32>

4503:
old  <	; SignedGreaterThanEqual 167 Â£temporary1968 width>
new  <>

4504:
old  <	cmp eax, [rbp + 44]>
new  < printFormat$156:>

4505:
old  <	jge printFormat$167>
new  <	; Call 117 printChar 0>

4506:
old  <>
new  <	mov qword [rbp + 117], printFormat$157>

4507:
old  < printFormat$162:>
new  <	mov [rbp + 125], rbp>

4508:
old  <	; PreCall 117 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	add rbp, 117>

4509:
old  <>
new  <	jmp printChar>

4510:
old  < printFormat$163:>
new  <>

4511:
old  <	; Parameter 141 signedchar 48>
new  < printFormat$157:>

4512:
old  <	mov byte [rbp + 141], 48>
new  <	; PostCall 117>

4514:
old  < printFormat$164:>
new  < printFormat$158:>

4515:
old  <	; Call 117 printChar 0>
new  <	; BinaryAdd field field 1>

4516:
old  <	mov qword [rbp + 117], printFormat$165>
new  <	inc dword [rbp + 113]>

4517:
old  <	mov [rbp + 125], rbp>
new  <>

4518:
old  <	add rbp, 117>
new  < printFormat$159:>

4519:
old  <	jmp printChar>
new  <	; Assign Â£temporary1955 field>

4520:
old  <>
new  <	mov eax, [rbp + 113]>

4521:
old  < printFormat$165:>
new  <>

4522:
old  <	; PostCall 117>
new  < printFormat$160:>

4523:
old  <>
new  <	; BinaryAdd field field 1>

4524:
old  < printFormat$166:>
new  <	inc dword [rbp + 113]>

4525:
old  <	; Goto 159>
new  <>

4526:
old  <	jmp printFormat$159>
new  < printFormat$161:>

4527:
old  <>
new  <	; SignedGreaterThanEqual 167 Â£temporary1955 width>

4528:
old  < printFormat$167:>
new  <	cmp eax, [rbp + 44]>

4529:
old  <	; PreCall 117 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	jge printFormat$167>

4531:
old  < printFormat$168:>
new  < printFormat$162:>

4532:
old  <	; IntegralToIntegral Â£temporary1972 index>
new  <	; PreCall 117 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

4533:
old  <	mov eax, [rbp + 40]>
new  <>

4534:
old  <	mov rbx, 4294967295>
new  < printFormat$163:>

4535:
old  <	and rax, rbx>
new  <	; Parameter 141 signedchar 48>

4536:
old  <>
new  <	mov byte [rbp + 141], 48>

4537:
old  < printFormat$169:>
new  <>

4538:
old  <	; BinaryAdd Â£temporary1974 format Â£temporary1972>
new  < printFormat$164:>

4539:
old  <	mov rsi, [rbp + 24]>
new  <	; Call 117 printChar 0>

4540:
old  <	add rsi, rax>
new  <	mov qword [rbp + 117], printFormat$165>

4541:
old  <>
new  <	mov [rbp + 125], rbp>

4542:
old  < printFormat$170:>
new  <	add rbp, 117>

4543:
old  <	; Dereference Â£temporary1971 -> Â£temporary1974 Â£temporary1974 0>
new  <	jmp printChar>

4545:
old  < printFormat$171:>
new  < printFormat$165:>

4546:
old  <	; Address Â£temporary1975 Â£temporary1971 -> Â£temporary1974>
new  <	; PostCall 117>

4548:
old  < printFormat$172:>
new  < printFormat$166:>

4549:
old  <	; Parameter 141 pointer Â£temporary1975>
new  <	; Goto 159>

4550:
old  <	mov [rbp + 141], rsi>
new  <	jmp printFormat$159>

4552:
old  < printFormat$173:>
new  < printFormat$167:>

4553:
old  <	; Parameter 149 pointer arg_list>
new  <	; PreCall 117 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

4554:
old  <	mov rax, [rbp + 32]>
new  <>

4555:
old  <	mov [rbp + 149], rax>
new  < printFormat$168:>

4556:
old  <>
new  <	; IntegralToIntegral Â£temporary1959 index>

4557:
old  < printFormat$174:>
new  <	mov eax, [rbp + 40]>

4558:
old  <	; Parameter 157 signedint 0>
new  <	mov rbx, 4294967295>

4559:
old  <	mov dword [rbp + 157], 0>
new  <	and rax, rbx>

4561:
old  < printFormat$175:>
new  < printFormat$169:>

4562:
old  <	; Parameter 161 signedint 0>
new  <	; BinaryAdd Â£temporary1961 format Â£temporary1959>

4563:
old  <	mov dword [rbp + 161], 0>
new  <	mov rsi, [rbp + 24]>

4564:
old  <>
new  <	add rsi, rax>

4565:
old  < printFormat$176:>
new  <>

4566:
old  <	; Parameter 165 signedint grid>
new  < printFormat$170:>

4567:
old  <	mov eax, [rbp + 72]>
new  <	; Dereference Â£temporary1958 -> Â£temporary1961 Â£temporary1961 0>

4568:
old  <	mov [rbp + 165], eax>
new  <>

4569:
old  <>
new  < printFormat$171:>

4570:
old  < printFormat$177:>
new  <	; Address Â£temporary1962 Â£temporary1958 -> Â£temporary1961>

4571:
old  <	; Parameter 169 pointer 0>
new  <>

4572:
old  <	mov qword [rbp + 169], 0>
new  < printFormat$172:>

4573:
old  <>
new  <	; Parameter 141 pointer Â£temporary1962>

4574:
old  < printFormat$178:>
new  <	mov [rbp + 141], rsi>

4575:
old  <	; Parameter 177 signedint precision>
new  <>

4576:
old  <	mov eax, [rbp + 48]>
new  < printFormat$173:>

4577:
old  <	mov [rbp + 177], eax>
new  <	; Parameter 149 pointer arg_list>

4578:
old  <>
new  <	mov rax, [rbp + 32]>

4579:
old  < printFormat$179:>
new  <	mov [rbp + 149], rax>

4580:
old  <	; Parameter 181 signedint shortInt>
new  <>

4581:
old  <	mov eax, [rbp + 88]>
new  < printFormat$174:>

4582:
old  <	mov [rbp + 181], eax>
new  <	; Parameter 157 signedint 0>

4583:
old  <>
new  <	mov dword [rbp + 157], 0>

4584:
old  < printFormat$180:>
new  <>

4585:
old  <	; Parameter 185 signedint longInt>
new  < printFormat$175:>

4586:
old  <	mov eax, [rbp + 92]>
new  <	; Parameter 161 signedint 0>

4587:
old  <	mov [rbp + 185], eax>
new  <	mov dword [rbp + 161], 0>

4589:
old  < printFormat$181:>
new  < printFormat$176:>

4590:
old  <	; Parameter 189 signedint longDouble>
new  <	; Parameter 165 signedint grid>

4591:
old  <	mov eax, [rbp + 96]>
new  <	mov eax, [rbp + 72]>

4592:
old  <	mov [rbp + 189], eax>
new  <	mov [rbp + 165], eax>

4594:
old  < printFormat$182:>
new  < printFormat$177:>

4595:
old  <	; Parameter 193 signedint 0>
new  <	; Parameter 169 pointer 0>

4596:
old  <	mov dword [rbp + 193], 0>
new  <	mov qword [rbp + 169], 0>

4598:
old  < printFormat$183:>
new  < printFormat$178:>

4599:
old  <	; Parameter 197 pointer 0>
new  <	; Parameter 177 signedint precision>

4600:
old  <	mov qword [rbp + 197], 0>
new  <	mov eax, [rbp + 48]>

4601:
old  <>
new  <	mov [rbp + 177], eax>

4602:
old  < printFormat$184:>
new  <>

4603:
old  <	; Call 117 printArgument 0>
new  < printFormat$179:>

4604:
old  <	mov qword [rbp + 117], printFormat$185>
new  <	; Parameter 181 signedint shortInt>

4605:
old  <	mov [rbp + 125], rbp>
new  <	mov eax, [rbp + 88]>

4606:
old  <	add rbp, 117>
new  <	mov [rbp + 181], eax>

4607:
old  <	jmp printArgument>
new  <>

4608:
old  <>
new  < printFormat$180:>

4609:
old  < printFormat$185:>
new  <	; Parameter 185 signedint longInt>

4610:
old  <	; PostCall 117>
new  <	mov eax, [rbp + 92]>

4611:
old  <>
new  <	mov [rbp + 185], eax>

4612:
old  < printFormat$186:>
new  <>

4613:
old  <	; GetReturnValue Â£temporary1976>
new  < printFormat$181:>

4614:
old  <>
new  <	; Parameter 189 signedint longDouble>

4615:
old  < printFormat$187:>
new  <	mov eax, [rbp + 96]>

4616:
old  <	; Assign arg_list Â£temporary1976>
new  <	mov [rbp + 189], eax>

4617:
old  <	mov [rbp + 32], rbx>
new  <>

4618:
old  <>
new  < printFormat$182:>

4619:
old  < printFormat$188:>
new  <	; Parameter 193 signedint 0>

4620:
old  <	; Goto 244>
new  <	mov dword [rbp + 193], 0>

4621:
old  <	jmp printFormat$244>
new  <>

4622:
old  <>
new  < printFormat$183:>

4623:
old  < printFormat$189:>
new  <	; Parameter 197 pointer 0>

4624:
old  <	; Assign startChars g_outChars>
new  <	mov qword [rbp + 197], 0>

4625:
old  <	mov eax, [g_outChars]>
new  <>

4626:
old  <	mov [rbp + 101], eax>
new  < printFormat$184:>

4627:
old  <>
new  <	; Call 117 printArgument 0>

4628:
old  < printFormat$190:>
new  <	mov qword [rbp + 117], printFormat$185>

4629:
old  <	; Assign oldOutStatus g_outStatus>
new  <	mov [rbp + 125], rbp>

4630:
old  <	mov eax, [g_outStatus]>
new  <	add rbp, 117>

4631:
old  <	mov [rbp + 105], eax>
new  <	jmp printArgument>

4633:
old  < printFormat$191:>
new  < printFormat$185:>

4634:
old  <	; Assign g_outStatus 2>
new  <	; PostCall 117>

4635:
old  <	mov dword [g_outStatus], 2>
new  <>

4636:
old  <>
new  < printFormat$186:>

4637:
old  < printFormat$192:>
new  <	; GetReturnValue Â£temporary1963>

4638:
old  <	; PreCall 109 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

4639:
old  <>
new  < printFormat$187:>

4640:
old  < printFormat$193:>
new  <	; Assign arg_list Â£temporary1963>

4641:
old  <	; IntegralToIntegral Â£temporary1978 index>
new  <	mov [rbp + 32], rbx>

4642:
old  <	mov eax, [rbp + 40]>
new  <>

4643:
old  <	mov rbx, 4294967295>
new  < printFormat$188:>

4644:
old  <	and rax, rbx>
new  <	; Goto 244>

4645:
old  <>
new  <	jmp printFormat$244>

4646:
old  < printFormat$194:>
new  <>

4647:
old  <	; BinaryAdd Â£temporary1980 format Â£temporary1978>
new  < printFormat$189:>

4648:
old  <	mov rsi, [rbp + 24]>
new  <	; Assign startChars g_outChars>

4649:
old  <	add rsi, rax>
new  <	mov eax, [g_outChars]>

4650:
old  <>
new  <	mov [rbp + 101], eax>

4651:
old  < printFormat$195:>
new  <>

4652:
old  <	; Dereference Â£temporary1977 -> Â£temporary1980 Â£temporary1980 0>
new  < printFormat$190:>

4653:
old  <>
new  <	; Assign oldOutStatus g_outStatus>

4654:
old  < printFormat$196:>
new  <	mov eax, [g_outStatus]>

4655:
old  <	; Address Â£temporary1981 Â£temporary1977 -> Â£temporary1980>
new  <	mov [rbp + 105], eax>

4657:
old  < printFormat$197:>
new  < printFormat$191:>

4658:
old  <	; Parameter 133 pointer Â£temporary1981>
new  <	; Assign g_outStatus 2>

4659:
old  <	mov [rbp + 133], rsi>
new  <	mov dword [g_outStatus], 2>

4661:
old  < printFormat$198:>
new  < printFormat$192:>

4662:
old  <	; Parameter 141 pointer arg_list>
new  <	; PreCall 109 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

4663:
old  <	mov rax, [rbp + 32]>
new  <>

4664:
old  <	mov [rbp + 141], rax>
new  < printFormat$193:>

4665:
old  <>
new  <	; IntegralToIntegral Â£temporary1965 index>

4666:
old  < printFormat$199:>
new  <	mov eax, [rbp + 40]>

4667:
old  <	; Parameter 149 signedint plus>
new  <	mov rbx, 4294967295>

4668:
old  <	mov eax, [rbp + 56]>
new  <	and rax, rbx>

4669:
old  <	mov [rbp + 149], eax>
new  <>

4670:
old  <>
new  < printFormat$194:>

4671:
old  < printFormat$200:>
new  <	; BinaryAdd Â£temporary1967 format Â£temporary1965>

4672:
old  <	; Parameter 153 signedint space>
new  <	mov rsi, [rbp + 24]>

4673:
old  <	mov eax, [rbp + 64]>
new  <	add rsi, rax>

4674:
old  <	mov [rbp + 153], eax>
new  <>

4675:
old  <>
new  < printFormat$195:>

4676:
old  < printFormat$201:>
new  <	; Dereference Â£temporary1964 -> Â£temporary1967 Â£temporary1967 0>

4677:
old  <	; Parameter 157 signedint grid>
new  <>

4678:
old  <	mov eax, [rbp + 72]>
new  < printFormat$196:>

4679:
old  <	mov [rbp + 157], eax>
new  <	; Address Â£temporary1968 Â£temporary1964 -> Â£temporary1967>

4681:
old  < printFormat$202:>
new  < printFormat$197:>

4682:
old  <	; Address Â£temporary1982 width>
new  <	; Parameter 133 pointer Â£temporary1968>

4683:
old  <	mov rsi, rbp>
new  <	mov [rbp + 133], rsi>

4684:
old  <	add rsi, 44>
new  <>

4685:
old  <>
new  < printFormat$198:>

4686:
old  < printFormat$203:>
new  <	; Parameter 141 pointer arg_list>

4687:
old  <	; Parameter 161 pointer Â£temporary1982>
new  <	mov rax, [rbp + 32]>

4688:
old  <	mov [rbp + 161], rsi>
new  <	mov [rbp + 141], rax>

4690:
old  < printFormat$204:>
new  < printFormat$199:>

4691:
old  <	; Parameter 169 signedint precision>
new  <	; Parameter 149 signedint plus>

4692:
old  <	mov eax, [rbp + 48]>
new  <	mov eax, [rbp + 56]>

4693:
old  <	mov [rbp + 169], eax>
new  <	mov [rbp + 149], eax>

4695:
old  < printFormat$205:>
new  < printFormat$200:>

4696:
old  <	; Parameter 173 signedint shortInt>
new  <	; Parameter 153 signedint space>

4697:
old  <	mov eax, [rbp + 88]>
new  <	mov eax, [rbp + 64]>

4698:
old  <	mov [rbp + 173], eax>
new  <	mov [rbp + 153], eax>

4700:
old  < printFormat$206:>
new  < printFormat$201:>

4701:
old  <	; Parameter 177 signedint longInt>
new  <	; Parameter 157 signedint grid>

4702:
old  <	mov eax, [rbp + 92]>
new  <	mov eax, [rbp + 72]>

4703:
old  <	mov [rbp + 177], eax>
new  <	mov [rbp + 157], eax>

4705:
old  < printFormat$207:>
new  < printFormat$202:>

4706:
old  <	; Parameter 181 signedint longDouble>
new  <	; Address Â£temporary1969 width>

4707:
old  <	mov eax, [rbp + 96]>
new  <	mov rsi, rbp>

4708:
old  <	mov [rbp + 181], eax>
new  <	add rsi, 44>

4710:
old  < printFormat$208:>
new  < printFormat$203:>

4711:
old  <	; Parameter 185 signedint 1>
new  <	; Parameter 161 pointer Â£temporary1969>

4712:
old  <	mov dword [rbp + 185], 1>
new  <	mov [rbp + 161], rsi>

4714:
old  < printFormat$209:>
new  < printFormat$204:>

4715:
old  <	; Parameter 189 pointer 0>
new  <	; Parameter 169 signedint precision>

4716:
old  <	mov qword [rbp + 189], 0>
new  <	mov eax, [rbp + 48]>

4717:
old  <>
new  <	mov [rbp + 169], eax>

4718:
old  < printFormat$210:>
new  <>

4719:
old  <	; Call 109 printArgument 0>
new  < printFormat$205:>

4720:
old  <	mov qword [rbp + 109], printFormat$211>
new  <	; Parameter 173 signedint shortInt>

4721:
old  <	mov [rbp + 117], rbp>
new  <	mov eax, [rbp + 88]>

4722:
old  <	add rbp, 109>
new  <	mov [rbp + 173], eax>

4723:
old  <	jmp printArgument>
new  <>

4724:
old  <>
new  < printFormat$206:>

4725:
old  < printFormat$211:>
new  <	; Parameter 177 signedint longInt>

4726:
old  <	; PostCall 109>
new  <	mov eax, [rbp + 92]>

4727:
old  <>
new  <	mov [rbp + 177], eax>

4728:
old  < printFormat$212:>
new  <>

4729:
old  <	; Assign g_outStatus oldOutStatus>
new  < printFormat$207:>

4730:
old  <	mov eax, [rbp + 105]>
new  <	; Parameter 181 signedint longDouble>

4731:
old  <	mov [g_outStatus], eax>
new  <	mov eax, [rbp + 96]>

4732:
old  <>
new  <	mov [rbp + 181], eax>

4733:
old  < printFormat$213:>
new  <>

4734:
old  <	; BinarySubtract field g_outChars startChars>
new  < printFormat$208:>

4735:
old  <	mov eax, [g_outChars]>
new  <	; Parameter 185 signedint 1>

4736:
old  <	sub eax, [rbp + 101]>
new  <	mov dword [rbp + 185], 1>

4737:
old  <	mov [rbp + 109], eax>
new  <>

4738:
old  <>
new  < printFormat$209:>

4739:
old  < printFormat$214:>
new  <	; Parameter 189 pointer 0>

4740:
old  <	; Assign g_outChars startChars>
new  <	mov qword [rbp + 189], 0>

4741:
old  <	mov eax, [rbp + 101]>
new  <>

4742:
old  <	mov [g_outChars], eax>
new  < printFormat$210:>

4743:
old  <>
new  <	; Call 109 printArgument 0>

4744:
old  < printFormat$215:>
new  <	mov qword [rbp + 109], printFormat$211>

4745:
old  <	; Assign Â£temporary1985 field>
new  <	mov [rbp + 117], rbp>

4746:
old  <	mov eax, [rbp + 109]>
new  <	add rbp, 109>

4747:
old  <>
new  <	jmp printArgument>

4748:
old  < printFormat$216:>
new  <>

4749:
old  <	; BinaryAdd field field 1>
new  < printFormat$211:>

4750:
old  <	inc dword [rbp + 109]>
new  <	; PostCall 109>

4752:
old  < printFormat$217:>
new  < printFormat$212:>

4753:
old  <	; SignedGreaterThanEqual 223 Â£temporary1985 width>
new  <	; Assign g_outStatus oldOutStatus>

4754:
old  <	cmp eax, [rbp + 44]>
new  <	mov eax, [rbp + 105]>

4755:
old  <	jge printFormat$223>
new  <	mov [g_outStatus], eax>

4757:
old  < printFormat$218:>
new  < printFormat$213:>

4758:
old  <	; PreCall 113 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; BinarySubtract field g_outChars startChars>

4759:
old  <>
new  <	mov eax, [g_outChars]>

4760:
old  < printFormat$219:>
new  <	sub eax, [rbp + 101]>

4761:
old  <	; Parameter 137 signedchar 32>
new  <	mov [rbp + 109], eax>

4762:
old  <	mov byte [rbp + 137], 32>
new  <>

4763:
old  <>
new  < printFormat$214:>

4764:
old  < printFormat$220:>
new  <	; Assign g_outChars startChars>

4765:
old  <	; Call 113 printChar 0>
new  <	mov eax, [rbp + 101]>

4766:
old  <	mov qword [rbp + 113], printFormat$221>
new  <	mov [g_outChars], eax>

4767:
old  <	mov [rbp + 121], rbp>
new  <>

4768:
old  <	add rbp, 113>
new  < printFormat$215:>

4769:
old  <	jmp printChar>
new  <	; Assign Â£temporary1972 field>

4770:
old  <>
new  <	mov eax, [rbp + 109]>

4771:
old  < printFormat$221:>
new  <>

4772:
old  <	; PostCall 113>
new  < printFormat$216:>

4773:
old  <>
new  <	; BinaryAdd field field 1>

4774:
old  < printFormat$222:>
new  <	inc dword [rbp + 109]>

4775:
old  <	; Goto 215>
new  <>

4776:
old  <	jmp printFormat$215>
new  < printFormat$217:>

4777:
old  <>
new  <	; SignedGreaterThanEqual 223 Â£temporary1972 width>

4778:
old  < printFormat$223:>
new  <	cmp eax, [rbp + 44]>

4779:
old  <	; PreCall 113 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	jge printFormat$223>

4781:
old  < printFormat$224:>
new  < printFormat$218:>

4782:
old  <	; IntegralToIntegral Â£temporary1989 index>
new  <	; PreCall 113 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

4783:
old  <	mov eax, [rbp + 40]>
new  <>

4784:
old  <	mov rbx, 4294967295>
new  < printFormat$219:>

4785:
old  <	and rax, rbx>
new  <	; Parameter 137 signedchar 32>

4786:
old  <>
new  <	mov byte [rbp + 137], 32>

4787:
old  < printFormat$225:>
new  <>

4788:
old  <	; BinaryAdd Â£temporary1991 format Â£temporary1989>
new  < printFormat$220:>

4789:
old  <	mov rsi, [rbp + 24]>
new  <	; Call 113 printChar 0>

4790:
old  <	add rsi, rax>
new  <	mov qword [rbp + 113], printFormat$221>

4791:
old  <>
new  <	mov [rbp + 121], rbp>

4792:
old  < printFormat$226:>
new  <	add rbp, 113>

4793:
old  <	; Dereference Â£temporary1988 -> Â£temporary1991 Â£temporary1991 0>
new  <	jmp printChar>

4795:
old  < printFormat$227:>
new  < printFormat$221:>

4796:
old  <	; Address Â£temporary1992 Â£temporary1988 -> Â£temporary1991>
new  <	; PostCall 113>

4798:
old  < printFormat$228:>
new  < printFormat$222:>

4799:
old  <	; Parameter 137 pointer Â£temporary1992>
new  <	; Goto 215>

4800:
old  <	mov [rbp + 137], rsi>
new  <	jmp printFormat$215>

4802:
old  < printFormat$229:>
new  < printFormat$223:>

4803:
old  <	; Parameter 145 pointer arg_list>
new  <	; PreCall 113 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

4804:
old  <	mov rax, [rbp + 32]>
new  <>

4805:
old  <	mov [rbp + 145], rax>
new  < printFormat$224:>

4806:
old  <>
new  <	; IntegralToIntegral Â£temporary1976 index>

4807:
old  < printFormat$230:>
new  <	mov eax, [rbp + 40]>

4808:
old  <	; Parameter 153 signedint plus>
new  <	mov rbx, 4294967295>

4809:
old  <	mov eax, [rbp + 56]>
new  <	and rax, rbx>

4810:
old  <	mov [rbp + 153], eax>
new  <>

4811:
old  <>
new  < printFormat$225:>

4812:
old  < printFormat$231:>
new  <	; BinaryAdd Â£temporary1978 format Â£temporary1976>

4813:
old  <	; Parameter 157 signedint space>
new  <	mov rsi, [rbp + 24]>

4814:
old  <	mov eax, [rbp + 64]>
new  <	add rsi, rax>

4815:
old  <	mov [rbp + 157], eax>
new  <>

4816:
old  <>
new  < printFormat$226:>

4817:
old  < printFormat$232:>
new  <	; Dereference Â£temporary1975 -> Â£temporary1978 Â£temporary1978 0>

4818:
old  <	; Parameter 161 signedint grid>
new  <>

4819:
old  <	mov eax, [rbp + 72]>
new  < printFormat$227:>

4820:
old  <	mov [rbp + 161], eax>
new  <	; Address Â£temporary1979 Â£temporary1975 -> Â£temporary1978>

4822:
old  < printFormat$233:>
new  < printFormat$228:>

4823:
old  <	; Parameter 165 pointer 0>
new  <	; Parameter 137 pointer Â£temporary1979>

4824:
old  <	mov qword [rbp + 165], 0>
new  <	mov [rbp + 137], rsi>

4826:
old  < printFormat$234:>
new  < printFormat$229:>

4827:
old  <	; Parameter 173 signedint precision>
new  <	; Parameter 145 pointer arg_list>

4828:
old  <	mov eax, [rbp + 48]>
new  <	mov rax, [rbp + 32]>

4829:
old  <	mov [rbp + 173], eax>
new  <	mov [rbp + 145], rax>

4831:
old  < printFormat$235:>
new  < printFormat$230:>

4832:
old  <	; Parameter 177 signedint shortInt>
new  <	; Parameter 153 signedint plus>

4833:
old  <	mov eax, [rbp + 88]>
new  <	mov eax, [rbp + 56]>

4834:
old  <	mov [rbp + 177], eax>
new  <	mov [rbp + 153], eax>

4836:
old  < printFormat$236:>
new  < printFormat$231:>

4837:
old  <	; Parameter 181 signedint longInt>
new  <	; Parameter 157 signedint space>

4838:
old  <	mov eax, [rbp + 92]>
new  <	mov eax, [rbp + 64]>

4839:
old  <	mov [rbp + 181], eax>
new  <	mov [rbp + 157], eax>

4841:
old  < printFormat$237:>
new  < printFormat$232:>

4842:
old  <	; Parameter 185 signedint longDouble>
new  <	; Parameter 161 signedint grid>

4843:
old  <	mov eax, [rbp + 96]>
new  <	mov eax, [rbp + 72]>

4844:
old  <	mov [rbp + 185], eax>
new  <	mov [rbp + 161], eax>

4846:
old  < printFormat$238:>
new  < printFormat$233:>

4847:
old  <	; Parameter 189 signedint 1>
new  <	; Parameter 165 pointer 0>

4848:
old  <	mov dword [rbp + 189], 1>
new  <	mov qword [rbp + 165], 0>

4850:
old  < printFormat$239:>
new  < printFormat$234:>

4851:
old  <	; Parameter 193 pointer 0>
new  <	; Parameter 173 signedint precision>

4852:
old  <	mov qword [rbp + 193], 0>
new  <	mov eax, [rbp + 48]>

4853:
old  <>
new  <	mov [rbp + 173], eax>

4854:
old  < printFormat$240:>
new  <>

4855:
old  <	; Call 113 printArgument 0>
new  < printFormat$235:>

4856:
old  <	mov qword [rbp + 113], printFormat$241>
new  <	; Parameter 177 signedint shortInt>

4857:
old  <	mov [rbp + 121], rbp>
new  <	mov eax, [rbp + 88]>

4858:
old  <	add rbp, 113>
new  <	mov [rbp + 177], eax>

4859:
old  <	jmp printArgument>
new  <>

4860:
old  <>
new  < printFormat$236:>

4861:
old  < printFormat$241:>
new  <	; Parameter 181 signedint longInt>

4862:
old  <	; PostCall 113>
new  <	mov eax, [rbp + 92]>

4863:
old  <>
new  <	mov [rbp + 181], eax>

4864:
old  < printFormat$242:>
new  <>

4865:
old  <	; GetReturnValue Â£temporary1993>
new  < printFormat$237:>

4866:
old  <>
new  <	; Parameter 185 signedint longDouble>

4867:
old  < printFormat$243:>
new  <	mov eax, [rbp + 96]>

4868:
old  <	; Assign arg_list Â£temporary1993>
new  <	mov [rbp + 185], eax>

4869:
old  <	mov [rbp + 32], rbx>
new  <>

4870:
old  <>
new  < printFormat$238:>

4871:
old  < printFormat$244:>
new  <	; Parameter 189 signedint 1>

4872:
old  <	; Assign percent 0>
new  <	mov dword [rbp + 189], 1>

4873:
old  <	mov dword [rbp + 52], 0>
new  <>

4874:
old  <>
new  < printFormat$239:>

4875:
old  < printFormat$245:>
new  <	; Parameter 193 pointer 0>

4876:
old  <	; Goto 291>
new  <	mov qword [rbp + 193], 0>

4877:
old  <	jmp printFormat$291>
new  <>

4878:
old  <>
new  < printFormat$240:>

4879:
old  < printFormat$246:>
new  <	; Call 113 printArgument 0>

4880:
old  <	; Assign value 0>
new  <	mov qword [rbp + 113], printFormat$241>

4881:
old  <	mov dword [rbp + 101], 0>
new  <	mov [rbp + 121], rbp>

4882:
old  <>
new  <	add rbp, 113>

4883:
old  < printFormat$247:>
new  <	jmp printArgument>

4884:
old  <	; PreCall 105 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

4885:
old  <>
new  < printFormat$241:>

4886:
old  < printFormat$248:>
new  <	; PostCall 113>

4887:
old  <	; IntegralToIntegral Â£temporary1996 c>
new  <>

4888:
old  <	mov al, [rbp + 100]>
new  < printFormat$242:>

4889:
old  <	and eax, 255>
new  <	; GetReturnValue Â£temporary1980>

4890:
old  <	cmp al, 0>
new  <>

4891:
old  <	jge printFormat$249>
new  < printFormat$243:>

4892:
old  <	neg al>
new  <	; Assign arg_list Â£temporary1980>

4893:
old  <	neg eax>
new  <	mov [rbp + 32], rbx>

4895:
old  < printFormat$249:>
new  < printFormat$244:>

4896:
old  <	; Parameter 129 signedint Â£temporary1996>
new  <	; Assign percent 0>

4897:
old  <	mov [rbp + 129], eax>
new  <	mov dword [rbp + 52], 0>

4899:
old  < printFormat$250:>
new  < printFormat$245:>

4900:
old  <	; Call 105 isdigit 0>
new  <	; Goto 291>

4901:
old  <	mov qword [rbp + 105], printFormat$251>
new  <	jmp printFormat$291>

4902:
old  <	mov [rbp + 113], rbp>
new  <>

4903:
old  <	add rbp, 105>
new  < printFormat$246:>

4904:
old  <	jmp isdigit>
new  <	; Assign value 0>

4905:
old  <>
new  <	mov dword [rbp + 101], 0>

4906:
old  < printFormat$251:>
new  <>

4907:
old  <	; PostCall 105>
new  < printFormat$247:>

4908:
old  <>
new  <	; PreCall 105 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

4909:
old  < printFormat$252:>
new  <>

4910:
old  <	; GetReturnValue Â£temporary1997>
new  < printFormat$248:>

4911:
old  <>
new  <	; IntegralToIntegral Â£temporary1983 c>

4912:
old  < printFormat$253:>
new  <	mov al, [rbp + 100]>

4913:
old  <	; Equal 265 Â£temporary1997 0>
new  <	and eax, 255>

4914:
old  <	cmp ebx, 0>
new  <	cmp al, 0>

4915:
old  <	je printFormat$265>
new  <	jge printFormat$249>

4916:
old  <>
new  <	neg al>

4917:
old  < printFormat$254:>
new  <	neg eax>

4918:
old  <	; SignedMultiply Â£temporary1998 value 10>
new  <>

4919:
old  <	mov eax, [rbp + 101]>
new  < printFormat$249:>

4920:
old  <	xor edx, edx>
new  <	; Parameter 129 signedint Â£temporary1983>

4921:
old  <	imul dword [int4$10#]>
new  <	mov [rbp + 129], eax>

4923:
old  < printFormat$255:>
new  < printFormat$250:>

4924:
old  <	; BinarySubtract Â£temporary1999 c 48>
new  <	; Call 105 isdigit 0>

4925:
old  <	mov bl, [rbp + 100]>
new  <	mov qword [rbp + 105], printFormat$251>

4926:
old  <	sub bl, 48>
new  <	mov [rbp + 113], rbp>

4927:
old  <>
new  <	add rbp, 105>

4928:
old  < printFormat$256:>
new  <	jmp isdigit>

4929:
old  <	; IntegralToIntegral Â£temporary2000 Â£temporary1999>
new  <>

4930:
old  <	and ebx, 255>
new  < printFormat$251:>

4931:
old  <	cmp bl, 0>
new  <	; PostCall 105>

4932:
old  <	jge printFormat$257>
new  <>

4933:
old  <	neg bl>
new  < printFormat$252:>

4934:
old  <	neg ebx>
new  <	; GetReturnValue Â£temporary1984>

4936:
old  < printFormat$257:>
new  < printFormat$253:>

4937:
old  <	; BinaryAdd value Â£temporary1998 Â£temporary2000>
new  <	; Equal 265 Â£temporary1984 0>

4938:
old  <	add eax, ebx>
new  <	cmp ebx, 0>

4939:
old  <	mov [rbp + 101], eax>
new  <	je printFormat$265>

4941:
old  < printFormat$258:>
new  < printFormat$254:>

4942:
old  <	; BinaryAdd index index 1>
new  <	; SignedMultiply Â£temporary1985 value 10>

4943:
old  <	inc dword [rbp + 40]>
new  <	mov eax, [rbp + 101]>

4944:
old  <>
new  <	xor edx, edx>

4945:
old  < printFormat$259:>
new  <	imul dword [int4$10#]>

4946:
old  <	; Assign Â£temporary2002 index>
new  <>

4947:
old  <	mov eax, [rbp + 40]>
new  < printFormat$255:>

4948:
old  <>
new  <	; BinarySubtract Â£temporary1986 c 48>

4949:
old  < printFormat$260:>
new  <	mov bl, [rbp + 100]>

4950:
old  <	; IntegralToIntegral Â£temporary2004 Â£temporary2002>
new  <	sub bl, 48>

4951:
old  <	mov rbx, 4294967295>
new  <>

4952:
old  <	and rax, rbx>
new  < printFormat$256:>

4953:
old  <>
new  <	; IntegralToIntegral Â£temporary1987 Â£temporary1986>

4954:
old  < printFormat$261:>
new  <	and ebx, 255>

4955:
old  <	; BinaryAdd Â£temporary2006 format Â£temporary2004>
new  <	cmp bl, 0>

4956:
old  <	mov rsi, [rbp + 24]>
new  <	jge printFormat$257>

4957:
old  <	add rsi, rax>
new  <	neg bl>

4958:
old  <>
new  <	neg ebx>

4959:
old  < printFormat$262:>
new  <>

4960:
old  <	; Dereference Â£temporary2003 -> Â£temporary2006 Â£temporary2006 0>
new  < printFormat$257:>

4961:
old  <>
new  <	; BinaryAdd value Â£temporary1985 Â£temporary1987>

4962:
old  < printFormat$263:>
new  <	add eax, ebx>

4963:
old  <	; Assign c Â£temporary2003 -> Â£temporary2006>
new  <	mov [rbp + 101], eax>

4964:
old  <	mov al, [rsi]>
new  <>

4965:
old  <	mov [rbp + 100], al>
new  < printFormat$258:>

4966:
old  <>
new  <	; BinaryAdd index index 1>

4967:
old  < printFormat$264:>
new  <	inc dword [rbp + 40]>

4968:
old  <	; Goto 247>
new  <>

4969:
old  <	jmp printFormat$247>
new  < printFormat$259:>

4970:
old  <>
new  <	; Assign Â£temporary1989 index>

4971:
old  < printFormat$265:>
new  <	mov eax, [rbp + 40]>

4972:
old  <	; BinarySubtract index index 1>
new  <>

4973:
old  <	dec dword [rbp + 40]>
new  < printFormat$260:>

4974:
old  <>
new  <	; IntegralToIntegral Â£temporary1991 Â£temporary1989>

4975:
old  < printFormat$266:>
new  <	mov rbx, 4294967295>

4976:
old  <	; NotEqual 269 period 0>
new  <	and rax, rbx>

4977:
old  <	cmp dword [rbp + 80], 0>
new  <>

4978:
old  <	jne printFormat$269>
new  < printFormat$261:>

4979:
old  <>
new  <	; BinaryAdd Â£temporary1993 format Â£temporary1991>

4980:
old  < printFormat$267:>
new  <	mov rsi, [rbp + 24]>

4981:
old  <	; Assign width value>
new  <	add rsi, rax>

4982:
old  <	mov eax, [rbp + 101]>
new  <>

4983:
old  <	mov [rbp + 44], eax>
new  < printFormat$262:>

4984:
old  <>
new  <	; Dereference Â£temporary1990 -> Â£temporary1993 Â£temporary1993 0>

4985:
old  < printFormat$268:>
new  <>

4986:
old  <	; Goto 291>
new  < printFormat$263:>

4987:
old  <	jmp printFormat$291>
new  <	; Assign c Â£temporary1990 -> Â£temporary1993>

4988:
old  <>
new  <	mov al, [rsi]>

4989:
old  < printFormat$269:>
new  <	mov [rbp + 100], al>

4990:
old  <	; Assign precision value>
new  <>

4991:
old  <	mov eax, [rbp + 101]>
new  < printFormat$264:>

4992:
old  <	mov [rbp + 48], eax>
new  <	; Goto 247>

4993:
old  <>
new  <	jmp printFormat$247>

4994:
old  < printFormat$270:>
new  <>

4995:
old  <	; Goto 291>
new  < printFormat$265:>

4996:
old  <	jmp printFormat$291>
new  <	; BinarySubtract index index 1>

4997:
old  <>
new  <	dec dword [rbp + 40]>

4998:
old  < printFormat$271:>
new  <>

4999:
old  <	; NotEqual 287 c 37>
new  < printFormat$266:>

5000:
old  <	cmp byte [rbp + 100], 37>
new  <	; NotEqual 269 period 0>

5001:
old  <	jne printFormat$287>
new  <	cmp dword [rbp + 80], 0>

5002:
old  <>
new  <	jne printFormat$269>

5003:
old  < printFormat$272:>
new  <>

5004:
old  <	; Assign percent 1>
new  < printFormat$267:>

5005:
old  <	mov dword [rbp + 52], 1>
new  <	; Assign width value>

5006:
old  <>
new  <	mov eax, [rbp + 101]>

5007:
old  < printFormat$273:>
new  <	mov [rbp + 44], eax>

5008:
old  <	; Assign plus 0>
new  <>

5009:
old  <	mov dword [rbp + 56], 0>
new  < printFormat$268:>

5010:
old  <>
new  <	; Goto 291>

5011:
old  < printFormat$274:>
new  <	jmp printFormat$291>

5012:
old  <	; Assign minus 0>
new  <>

5013:
old  <	mov dword [rbp + 60], 0>
new  < printFormat$269:>

5014:
old  <>
new  <	; Assign precision value>

5015:
old  < printFormat$275:>
new  <	mov eax, [rbp + 101]>

5016:
old  <	; Assign space 0>
new  <	mov [rbp + 48], eax>

5017:
old  <	mov dword [rbp + 64], 0>
new  <>

5018:
old  <>
new  < printFormat$270:>

5019:
old  < printFormat$276:>
new  <	; Goto 291>

5020:
old  <	; Assign zero 0>
new  <	jmp printFormat$291>

5021:
old  <	mov dword [rbp + 68], 0>
new  <>

5022:
old  <>
new  < printFormat$271:>

5023:
old  < printFormat$277:>
new  <	; NotEqual 287 c 37>

5024:
old  <	; Assign grid 0>
new  <	cmp byte [rbp + 100], 37>

5025:
old  <	mov dword [rbp + 72], 0>
new  <	jne printFormat$287>

5027:
old  < printFormat$278:>
new  < printFormat$272:>

5028:
old  <	; Assign widthStar 0>
new  <	; Assign percent 1>

5029:
old  <	mov dword [rbp + 76], 0>
new  <	mov dword [rbp + 52], 1>

5031:
old  < printFormat$279:>
new  < printFormat$273:>

5032:
old  <	; Assign period 0>
new  <	; Assign plus 0>

5033:
old  <	mov dword [rbp + 80], 0>
new  <	mov dword [rbp + 56], 0>

5035:
old  < printFormat$280:>
new  < printFormat$274:>

5036:
old  <	; Assign precisionStar 0>
new  <	; Assign minus 0>

5037:
old  <	mov dword [rbp + 84], 0>
new  <	mov dword [rbp + 60], 0>

5039:
old  < printFormat$281:>
new  < printFormat$275:>

5040:
old  <	; Assign shortInt 0>
new  <	; Assign space 0>

5041:
old  <	mov dword [rbp + 88], 0>
new  <	mov dword [rbp + 64], 0>

5043:
old  < printFormat$282:>
new  < printFormat$276:>

5044:
old  <	; Assign longInt 0>
new  <	; Assign zero 0>

5045:
old  <	mov dword [rbp + 92], 0>
new  <	mov dword [rbp + 68], 0>

5047:
old  < printFormat$283:>
new  < printFormat$277:>

5048:
old  <	; Assign longDouble 0>
new  <	; Assign grid 0>

5049:
old  <	mov dword [rbp + 96], 0>
new  <	mov dword [rbp + 72], 0>

5051:
old  < printFormat$284:>
new  < printFormat$278:>

5052:
old  <	; Assign width 0>
new  <	; Assign widthStar 0>

5053:
old  <	mov dword [rbp + 44], 0>
new  <	mov dword [rbp + 76], 0>

5055:
old  < printFormat$285:>
new  < printFormat$279:>

5056:
old  <	; Assign precision 0>
new  <	; Assign period 0>

5057:
old  <	mov dword [rbp + 48], 0>
new  <	mov dword [rbp + 80], 0>

5059:
old  < printFormat$286:>
new  < printFormat$280:>

5060:
old  <	; Goto 291>
new  <	; Assign precisionStar 0>

5061:
old  <	jmp printFormat$291>
new  <	mov dword [rbp + 84], 0>

5063:
old  < printFormat$287:>
new  < printFormat$281:>

5064:
old  <	; PreCall 101 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Assign shortInt 0>

5065:
old  <>
new  <	mov dword [rbp + 88], 0>

5066:
old  < printFormat$288:>
new  <>

5067:
old  <	; Parameter 125 signedchar c>
new  < printFormat$282:>

5068:
old  <	mov al, [rbp + 100]>
new  <	; Assign longInt 0>

5069:
old  <	mov [rbp + 125], al>
new  <	mov dword [rbp + 92], 0>

5071:
old  < printFormat$289:>
new  < printFormat$283:>

5072:
old  <	; Call 101 printChar 0>
new  <	; Assign longDouble 0>

5073:
old  <	mov qword [rbp + 101], printFormat$290>
new  <	mov dword [rbp + 96], 0>

5074:
old  <	mov [rbp + 109], rbp>
new  <>

5075:
old  <	add rbp, 101>
new  < printFormat$284:>

5076:
old  <	jmp printChar>
new  <	; Assign width 0>

5077:
old  <>
new  <	mov dword [rbp + 44], 0>

5078:
old  < printFormat$290:>
new  <>

5079:
old  <	; PostCall 101>
new  < printFormat$285:>

5080:
old  <>
new  <	; Assign precision 0>

5081:
old  < printFormat$291:>
new  <	mov dword [rbp + 48], 0>

5082:
old  <	; BinaryAdd index index 1>
new  <>

5083:
old  <	inc dword [rbp + 40]>
new  < printFormat$286:>

5084:
old  <>
new  <	; Goto 291>

5085:
old  < printFormat$292:>
new  <	jmp printFormat$291>

5086:
old  <	; Goto 16>
new  <>

5087:
old  <	jmp printFormat$16>
new  < printFormat$287:>

5088:
old  <>
new  <	; PreCall 101 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

5089:
old  < printFormat$293:>
new  <>

5090:
old  <	; NotEqual 300 g_outStatus 1>
new  < printFormat$288:>

5091:
old  <	cmp dword [g_outStatus], 1>
new  <	; Parameter 125 signedchar c>

5092:
old  <	jne printFormat$300>
new  <	mov al, [rbp + 100]>

5093:
old  <>
new  <	mov [rbp + 125], al>

5094:
old  < printFormat$294:>
new  <>

5095:
old  <	; IntegralToIntegral Â£temporary2015 g_outDevice>
new  < printFormat$289:>

5096:
old  <	mov rax, [g_outDevice]>
new  <	; Call 101 printChar 0>

5097:
old  <>
new  <	mov qword [rbp + 101], printFormat$290>

5098:
old  < printFormat$295:>
new  <	mov [rbp + 109], rbp>

5099:
old  <	; Assign outString Â£temporary2015>
new  <	add rbp, 101>

5100:
old  <	mov [rbp + 100], rax>
new  <	jmp printChar>

5102:
old  < printFormat$296:>
new  < printFormat$290:>

5103:
old  <	; IntegralToIntegral Â£temporary2017 g_outChars>
new  <	; PostCall 101>

5104:
old  <	mov eax, [g_outChars]>
new  <>

5105:
old  <	mov rbx, 4294967295>
new  < printFormat$291:>

5106:
old  <	and rax, rbx>
new  <	; BinaryAdd index index 1>

5107:
old  <>
new  <	inc dword [rbp + 40]>

5108:
old  < printFormat$297:>
new  <>

5109:
old  <	; BinaryAdd Â£temporary2019 outString Â£temporary2017>
new  < printFormat$292:>

5110:
old  <	mov rsi, [rbp + 100]>
new  <	; Goto 16>

5111:
old  <	add rsi, rax>
new  <	jmp printFormat$16>

5113:
old  < printFormat$298:>
new  < printFormat$293:>

5114:
old  <	; Dereference Â£temporary2016 -> Â£temporary2019 Â£temporary2019 0>
new  <	; NotEqual 300 g_outStatus 1>

5115:
old  <>
new  <	cmp dword [g_outStatus], 1>

5116:
old  < printFormat$299:>
new  <	jne printFormat$300>

5117:
old  <	; Assign Â£temporary2016 -> Â£temporary2019 0>
new  <>

5118:
old  <	mov byte [rsi], 0>
new  < printFormat$294:>

5119:
old  <>
new  <	; IntegralToIntegral Â£temporary2002 g_outDevice>

5120:
old  < printFormat$300:>
new  <	mov rax, [g_outDevice]>

5121:
old  <	; Return g_outChars>
new  <>

5122:
old  <	mov ebx, [g_outChars]>
new  < printFormat$295:>

5123:
old  <	mov rax, [rbp]>
new  <	; Assign outString Â£temporary2002>

5124:
old  <	mov rdi, [rbp + 16]>
new  <	mov [rbp + 100], rax>

5125:
old  <	mov rbp, [rbp + 8]>
new  <>

5126:
old  <	jmp rax>
new  < printFormat$296:>

5127:
old  <>
new  <	; IntegralToIntegral Â£temporary2004 g_outChars>

5128:
old  < printFormat$301:>
new  <	mov eax, [g_outChars]>

5129:
old  <	; FunctionEnd printFormat>
new  <	mov rbx, 4294967295>

5130:
old  <>
new  <	and rax, rbx>

5131:
old  <section .text>
new  <>

5132:
old  <>
new  < printFormat$297:>

5133:
old  < printf:>
new  <	; BinaryAdd Â£temporary2006 outString Â£temporary2004>

5134:
old  <	; Address Â£temporary2024 format>
new  <	mov rsi, [rbp + 100]>

5135:
old  <	mov rsi, rbp>
new  <	add rsi, rax>

5136:
old  <	add rsi, 24>
new  <>

5137:
old  <>
new  < printFormat$298:>

5138:
old  < printf$1:>
new  <	; Dereference Â£temporary2003 -> Â£temporary2006 Â£temporary2006 0>

5139:
old  <	; IntegralToIntegral Â£temporary2025 Â£temporary2024>
new  <>

5140:
old  <>
new  < printFormat$299:>

5141:
old  < printf$2:>
new  <	; Assign Â£temporary2003 -> Â£temporary2006 0>

5142:
old  <	; BinaryAdd arg_list Â£temporary2025 8>
new  <	mov byte [rsi], 0>

5143:
old  <	add rsi, 8>
new  <>

5144:
old  <	mov [rdi + 32], rsi>
new  < printFormat$300:>

5145:
old  <>
new  <	; SetReturnValue>

5146:
old  < printf$3:>
new  <>

5147:
old  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < printFormat$301:>

5148:
old  <>
new  <	; Return g_outChars>

5149:
old  < printf$4:>
new  <	mov ebx, [g_outChars]>

5150:
old  <	; Parameter 64 pointer format>
new  <	mov rax, [rbp]>

5151:
old  <	mov rax, [rbp + 24]>
new  <	mov rdi, [rbp + 16]>

5152:
old  <	mov [rdi + 64], rax>
new  <	mov rbp, [rbp + 8]>

5153:
old  <>
new  <	jmp rax>

5154:
old  < printf$5:>
new  <>

5155:
old  <	; Parameter 72 pointer arg_list>
new  < printFormat$302:>

5156:
old  <	mov rax, [rdi + 32]>
new  <	; FunctionEnd printFormat>

5157:
old  <	mov [rdi + 72], rax>
new  <>

5158:
old  <>
new  <section .text>

5159:
old  < printf$6:>
new  <>

5160:
old  <	; Call 40 vprintf 0>
new  < printf:>

5161:
old  <	mov qword [rdi + 40], printf$7>
new  <	; Address Â£temporary2011 format>

5162:
old  <	mov [rdi + 48], rbp>
new  <	mov rsi, rbp>

5163:
old  <	mov [rdi + 56], rdi>
new  <	add rsi, 24>

5164:
old  <	add rdi, 40>
new  <>

5165:
old  <	mov rbp, rdi>
new  < printf$1:>

5166:
old  <	jmp vprintf>
new  <	; IntegralToIntegral Â£temporary2012 Â£temporary2011>

5168:
old  < printf$7:>
new  < printf$2:>

5169:
old  <	; PostCall 40>
new  <	; BinaryAdd arg_list Â£temporary2012 8>

5170:
old  <>
new  <	add rsi, 8>

5171:
old  < printf$8:>
new  <	mov [rdi + 32], rsi>

5172:
old  <	; GetReturnValue Â£temporary2028>
new  <>

5173:
old  <>
new  < printf$3:>

5174:
old  < printf$9:>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

5175:
old  <	; Return Â£temporary2028>
new  <>

5176:
old  <	mov rax, [rbp]>
new  < printf$4:>

5177:
old  <	mov rdi, [rbp + 16]>
new  <	; Parameter 64 pointer format>

5178:
old  <	mov rbp, [rbp + 8]>
new  <	mov rax, [rbp + 24]>

5179:
old  <	jmp rax>
new  <	mov [rdi + 64], rax>

5181:
old  < printf$10:>
new  < printf$5:>

5182:
old  <	; FunctionEnd printf>
new  <	; Parameter 72 pointer arg_list>

5183:
old  <>
new  <	mov rax, [rdi + 32]>

5184:
old  <section .text>
new  <	mov [rdi + 72], rax>

5186:
old  < vprintf:>
new  < printf$6:>

5187:
old  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Call 40 vprintf 0>

5188:
old  <>
new  <	mov qword [rdi + 40], printf$7>

5189:
old  < vprintf$1:>
new  <	mov [rdi + 48], rbp>

5190:
old  <	; Parameter 64 pointer stdout>
new  <	mov [rdi + 56], rdi>

5191:
old  <	mov rax, [stdout]>
new  <	add rdi, 40>

5192:
old  <	mov [rbp + 64], rax>
new  <	mov rbp, rdi>

5193:
old  <>
new  <	jmp vprintf>

5194:
old  < vprintf$2:>
new  <>

5195:
old  <	; Parameter 72 pointer format>
new  < printf$7:>

5196:
old  <	mov rax, [rbp + 24]>
new  <	; PostCall 40>

5197:
old  <	mov [rbp + 72], rax>
new  <>

5198:
old  <>
new  < printf$8:>

5199:
old  < vprintf$3:>
new  <	; GetReturnValue Â£temporary2015>

5200:
old  <	; Parameter 80 pointer arg_list>
new  <>

5201:
old  <	mov rax, [rbp + 32]>
new  < printf$9:>

5202:
old  <	mov [rbp + 80], rax>
new  <	; SetReturnValue>

5204:
old  < vprintf$4:>
new  < printf$10:>

5205:
old  <	; Call 40 vfprintf 0>
new  <	; Return Â£temporary2015>

5206:
old  <	mov qword [rbp + 40], vprintf$5>
new  <	mov rax, [rbp]>

5207:
old  <	mov [rbp + 48], rbp>
new  <	mov rdi, [rbp + 16]>

5208:
old  <	add rbp, 40>
new  <	mov rbp, [rbp + 8]>

5209:
old  <	jmp vfprintf>
new  <	jmp rax>

5211:
old  < vprintf$5:>
new  < printf$11:>

5212:
old  <	; PostCall 40>
new  <	; FunctionEnd printf>

5214:
old  < vprintf$6:>
new  <section .text>

5215:
old  <	; GetReturnValue Â£temporary2030>
new  <>

5216:
old  <>
new  < vprintf:>

5217:
old  < vprintf$7:>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

5218:
old  <	; Return Â£temporary2030>
new  <>

5219:
old  <	mov rax, [rbp]>
new  < vprintf$1:>

5220:
old  <	mov rdi, [rbp + 16]>
new  <	; Parameter 64 pointer stdout>

5221:
old  <	mov rbp, [rbp + 8]>
new  <	mov rax, [stdout]>

5222:
old  <	jmp rax>
new  <	mov [rbp + 64], rax>

5224:
old  < vprintf$8:>
new  < vprintf$2:>

5225:
old  <	; FunctionEnd vprintf>
new  <	; Parameter 72 pointer format>

5226:
old  <>
new  <	mov rax, [rbp + 24]>

5227:
old  <section .text>
new  <	mov [rbp + 72], rax>

5229:
old  < fprintf:>
new  < vprintf$3:>

5230:
old  <	; Address Â£temporary2031 format>
new  <	; Parameter 80 pointer arg_list>

5231:
old  <	mov rsi, rbp>
new  <	mov rax, [rbp + 32]>

5232:
old  <	add rsi, 32>
new  <	mov [rbp + 80], rax>

5234:
old  < fprintf$1:>
new  < vprintf$4:>

5235:
old  <	; IntegralToIntegral Â£temporary2032 Â£temporary2031>
new  <	; Call 40 vfprintf 0>

5236:
old  <>
new  <	mov qword [rbp + 40], vprintf$5>

5237:
old  < fprintf$2:>
new  <	mov [rbp + 48], rbp>

5238:
old  <	; BinaryAdd arg_list Â£temporary2032 8>
new  <	add rbp, 40>

5239:
old  <	add rsi, 8>
new  <	jmp vfprintf>

5240:
old  <	mov [rdi + 40], rsi>
new  <>

5241:
old  <>
new  < vprintf$5:>

5242:
old  < fprintf$3:>
new  <	; PostCall 40>

5243:
old  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

5244:
old  <>
new  < vprintf$6:>

5245:
old  < fprintf$4:>
new  <	; GetReturnValue Â£temporary2017>

5246:
old  <	; Parameter 72 pointer outStream>
new  <>

5247:
old  <	mov rax, [rbp + 24]>
new  < vprintf$7:>

5248:
old  <	mov [rdi + 72], rax>
new  <	; SetReturnValue>

5250:
old  < fprintf$5:>
new  < vprintf$8:>

5251:
old  <	; Parameter 80 pointer format>
new  <	; Return Â£temporary2017>

5252:
old  <	mov rax, [rbp + 32]>
new  <	mov rax, [rbp]>

5253:
old  <	mov [rdi + 80], rax>
new  <	mov rdi, [rbp + 16]>

5254:
old  <>
new  <	mov rbp, [rbp + 8]>

5255:
old  < fprintf$6:>
new  <	jmp rax>

5256:
old  <	; Parameter 88 pointer arg_list>
new  <>

5257:
old  <	mov rax, [rdi + 40]>
new  < vprintf$9:>

5258:
old  <	mov [rdi + 88], rax>
new  <	; FunctionEnd vprintf>

5260:
old  < fprintf$7:>
new  <section .text>

5261:
old  <	; Call 48 vfprintf 0>
new  <>

5262:
old  <	mov qword [rdi + 48], fprintf$8>
new  < fprintf:>

5263:
old  <	mov [rdi + 56], rbp>
new  <	; Address Â£temporary2018 format>

5264:
old  <	mov [rdi + 64], rdi>
new  <	mov rsi, rbp>

5265:
old  <	add rdi, 48>
new  <	add rsi, 32>

5266:
old  <	mov rbp, rdi>
new  <>

5267:
old  <	jmp vfprintf>
new  < fprintf$1:>

5268:
old  <>
new  <	; IntegralToIntegral Â£temporary2019 Â£temporary2018>

5269:
old  < fprintf$8:>
new  <>

5270:
old  <	; PostCall 48>
new  < fprintf$2:>

5271:
old  <>
new  <	; BinaryAdd arg_list Â£temporary2019 8>

5272:
old  < fprintf$9:>
new  <	add rsi, 8>

5273:
old  <	; GetReturnValue Â£temporary2035>
new  <	mov [rdi + 40], rsi>

5275:
old  < fprintf$10:>
new  < fprintf$3:>

5276:
old  <	; Return Â£temporary2035>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

5277:
old  <	mov rax, [rbp]>
new  <>

5278:
old  <	mov rdi, [rbp + 16]>
new  < fprintf$4:>

5279:
old  <	mov rbp, [rbp + 8]>
new  <	; Parameter 72 pointer outStream>

5280:
old  <	jmp rax>
new  <	mov rax, [rbp + 24]>

5281:
old  <>
new  <	mov [rdi + 72], rax>

5282:
old  < fprintf$11:>
new  <>

5283:
old  <	; FunctionEnd fprintf>
new  < fprintf$5:>

5284:
old  <>
new  <	; Parameter 80 pointer format>

5285:
old  <section .text>
new  <	mov rax, [rbp + 32]>

5286:
old  <>
new  <	mov [rdi + 80], rax>

5287:
old  < vfprintf:>
new  <>

5288:
old  <	; Assign g_outStatus 0>
new  < fprintf$6:>

5289:
old  <	mov dword [g_outStatus], 0>
new  <	; Parameter 88 pointer arg_list>

5290:
old  <>
new  <	mov rax, [rdi + 40]>

5291:
old  < vfprintf$1:>
new  <	mov [rdi + 88], rax>

5292:
old  <	; IntegralToIntegral Â£temporary2037 outStream>
new  <>

5293:
old  <	mov rax, [rbp + 24]>
new  < fprintf$7:>

5294:
old  <>
new  <	; Call 48 vfprintf 0>

5295:
old  < vfprintf$2:>
new  <	mov qword [rdi + 48], fprintf$8>

5296:
old  <	; Assign g_outDevice Â£temporary2037>
new  <	mov [rdi + 56], rbp>

5297:
old  <	mov [g_outDevice], rax>
new  <	mov [rdi + 64], rdi>

5298:
old  <>
new  <	add rdi, 48>

5299:
old  < vfprintf$3:>
new  <	mov rbp, rdi>

5300:
old  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	jmp vfprintf>

5302:
old  < vfprintf$4:>
new  < fprintf$8:>

5303:
old  <	; Parameter 72 pointer format>
new  <	; PostCall 48>

5304:
old  <	mov rax, [rbp + 32]>
new  <>

5305:
old  <	mov [rbp + 72], rax>
new  < fprintf$9:>

5306:
old  <>
new  <	; GetReturnValue Â£temporary2022>

5307:
old  < vfprintf$5:>
new  <>

5308:
old  <	; Parameter 80 pointer arg_list>
new  < fprintf$10:>

5309:
old  <	mov rax, [rbp + 40]>
new  <	; SetReturnValue>

5310:
old  <	mov [rbp + 80], rax>
new  <>

5311:
old  <>
new  < fprintf$11:>

5312:
old  < vfprintf$6:>
new  <	; Return Â£temporary2022>

5313:
old  <	; Call 48 printFormat 0>
new  <	mov rax, [rbp]>

5314:
old  <	mov qword [rbp + 48], vfprintf$7>
new  <	mov rdi, [rbp + 16]>

5315:
old  <	mov [rbp + 56], rbp>
new  <	mov rbp, [rbp + 8]>

5316:
old  <	add rbp, 48>
new  <	jmp rax>

5317:
old  <	jmp printFormat>
new  <>

5318:
old  <>
new  < fprintf$12:>

5319:
old  < vfprintf$7:>
new  <	; FunctionEnd fprintf>

5320:
old  <	; PostCall 48>
new  <>

5321:
old  <>
new  <section .text>

5322:
old  < vfprintf$8:>
new  <>

5323:
old  <	; GetReturnValue Â£temporary2038>
new  < vfprintf:>

5324:
old  <>
new  <	; Assign g_outStatus 0>

5325:
old  < vfprintf$9:>
new  <	mov dword [g_outStatus], 0>

5326:
old  <	; Return Â£temporary2038>
new  <>

5327:
old  <	mov rax, [rbp]>
new  < vfprintf$1:>

5328:
old  <	mov rdi, [rbp + 16]>
new  <	; IntegralToIntegral Â£temporary2024 outStream>

5329:
old  <	mov rbp, [rbp + 8]>
new  <	mov rax, [rbp + 24]>

5330:
old  <	jmp rax>
new  <>

5331:
old  <>
new  < vfprintf$2:>

5332:
old  < vfprintf$10:>
new  <	; Assign g_outDevice Â£temporary2024>

5333:
old  <	; FunctionEnd vfprintf>
new  <	mov [g_outDevice], rax>

5335:
old  <section .text>
new  < vfprintf$3:>

5336:
old  <>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

5337:
old  < sprintf:>
new  <>

5338:
old  <	; Address Â£temporary2039 format>
new  < vfprintf$4:>

5339:
old  <	mov rsi, rbp>
new  <	; Parameter 72 pointer format>

5340:
old  <	add rsi, 32>
new  <	mov rax, [rbp + 32]>

5341:
old  <>
new  <	mov [rbp + 72], rax>

5342:
old  < sprintf$1:>
new  <>

5343:
old  <	; IntegralToIntegral Â£temporary2040 Â£temporary2039>
new  < vfprintf$5:>

5344:
old  <>
new  <	; Parameter 80 pointer arg_list>

5345:
old  < sprintf$2:>
new  <	mov rax, [rbp + 40]>

5346:
old  <	; BinaryAdd arg_list Â£temporary2040 8>
new  <	mov [rbp + 80], rax>

5347:
old  <	add rsi, 8>
new  <>

5348:
old  <	mov [rdi + 40], rsi>
new  < vfprintf$6:>

5349:
old  <>
new  <	; Call 48 printFormat 0>

5350:
old  < sprintf$3:>
new  <	mov qword [rbp + 48], vfprintf$7>

5351:
old  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov [rbp + 56], rbp>

5352:
old  <>
new  <	add rbp, 48>

5353:
old  < sprintf$4:>
new  <	jmp printFormat>

5354:
old  <	; Parameter 72 pointer outString>
new  <>

5355:
old  <	mov rax, [rbp + 24]>
new  < vfprintf$7:>

5356:
old  <	mov [rdi + 72], rax>
new  <	; PostCall 48>

5358:
old  < sprintf$5:>
new  < vfprintf$8:>

5359:
old  <	; Parameter 80 pointer format>
new  <	; GetReturnValue Â£temporary2025>

5360:
old  <	mov rax, [rbp + 32]>
new  <>

5361:
old  <	mov [rdi + 80], rax>
new  < vfprintf$9:>

5362:
old  <>
new  <	; SetReturnValue>

5363:
old  < sprintf$6:>
new  <>

5364:
old  <	; Parameter 88 pointer arg_list>
new  < vfprintf$10:>

5365:
old  <	mov rax, [rdi + 40]>
new  <	; Return Â£temporary2025>

5366:
old  <	mov [rdi + 88], rax>
new  <	mov rax, [rbp]>

5367:
old  <>
new  <	mov rdi, [rbp + 16]>

5368:
old  < sprintf$7:>
new  <	mov rbp, [rbp + 8]>

5369:
old  <	; Call 48 vsprintf 0>
new  <	jmp rax>

5370:
old  <	mov qword [rdi + 48], sprintf$8>
new  <>

5371:
old  <	mov [rdi + 56], rbp>
new  < vfprintf$11:>

5372:
old  <	mov [rdi + 64], rdi>
new  <	; FunctionEnd vfprintf>

5373:
old  <	add rdi, 48>
new  <>

5374:
old  <	mov rbp, rdi>
new  <section .text>

5375:
old  <	jmp vsprintf>
new  <>

5376:
old  <>
new  < sprintf:>

5377:
old  < sprintf$8:>
new  <	; Address Â£temporary2026 format>

5378:
old  <	; PostCall 48>
new  <	mov rsi, rbp>

5379:
old  <>
new  <	add rsi, 32>

5380:
old  < sprintf$9:>
new  <>

5381:
old  <	; GetReturnValue Â£temporary2043>
new  < sprintf$1:>

5382:
old  <>
new  <	; IntegralToIntegral Â£temporary2027 Â£temporary2026>

5383:
old  < sprintf$10:>
new  <>

5384:
old  <	; Return Â£temporary2043>
new  < sprintf$2:>

5385:
old  <	mov rax, [rbp]>
new  <	; BinaryAdd arg_list Â£temporary2027 8>

5386:
old  <	mov rdi, [rbp + 16]>
new  <	add rsi, 8>

5387:
old  <	mov rbp, [rbp + 8]>
new  <	mov [rdi + 40], rsi>

5388:
old  <	jmp rax>
new  <>

5389:
old  <>
new  < sprintf$3:>

5390:
old  < sprintf$11:>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

5391:
old  <	; FunctionEnd sprintf>
new  <>

5392:
old  <>
new  < sprintf$4:>

5393:
old  <section .text>
new  <	; Parameter 72 pointer outString>

5394:
old  <>
new  <	mov rax, [rbp + 24]>

5395:
old  < vsprintf:>
new  <	mov [rdi + 72], rax>

5396:
old  <	; Assign g_outStatus 1>
new  <>

5397:
old  <	mov dword [g_outStatus], 1>
new  < sprintf$5:>

5398:
old  <>
new  <	; Parameter 80 pointer format>

5399:
old  < vsprintf$1:>
new  <	mov rax, [rbp + 32]>

5400:
old  <	; IntegralToIntegral Â£temporary2045 outString>
new  <	mov [rdi + 80], rax>

5401:
old  <	mov rax, [rbp + 24]>
new  <>

5402:
old  <>
new  < sprintf$6:>

5403:
old  < vsprintf$2:>
new  <	; Parameter 88 pointer arg_list>

5404:
old  <	; Assign g_outDevice Â£temporary2045>
new  <	mov rax, [rdi + 40]>

5405:
old  <	mov [g_outDevice], rax>
new  <	mov [rdi + 88], rax>

5407:
old  < vsprintf$3:>
new  < sprintf$7:>

5408:
old  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Call 48 vsprintf 0>

5409:
old  <>
new  <	mov qword [rdi + 48], sprintf$8>

5410:
old  < vsprintf$4:>
new  <	mov [rdi + 56], rbp>

5411:
old  <	; Parameter 72 pointer format>
new  <	mov [rdi + 64], rdi>

5412:
old  <	mov rax, [rbp + 32]>
new  <	add rdi, 48>

5413:
old  <	mov [rbp + 72], rax>
new  <	mov rbp, rdi>

5414:
old  <>
new  <	jmp vsprintf>

5415:
old  < vsprintf$5:>
new  <>

5416:
old  <	; Parameter 80 pointer arg_list>
new  < sprintf$8:>

5417:
old  <	mov rax, [rbp + 40]>
new  <	; PostCall 48>

5418:
old  <	mov [rbp + 80], rax>
new  <>

5419:
old  <>
new  < sprintf$9:>

5420:
old  < vsprintf$6:>
new  <	; GetReturnValue Â£temporary2030>

5421:
old  <	; Call 48 printFormat 0>
new  <>

5422:
old  <	mov qword [rbp + 48], vsprintf$7>
new  < sprintf$10:>

5423:
old  <	mov [rbp + 56], rbp>
new  <	; SetReturnValue>

5424:
old  <	add rbp, 48>
new  <>

5425:
old  <	jmp printFormat>
new  < sprintf$11:>

5426:
old  <>
new  <	; Return Â£temporary2030>

5427:
old  < vsprintf$7:>
new  <	mov rax, [rbp]>

5428:
old  <	; PostCall 48>
new  <	mov rdi, [rbp + 16]>

5429:
old  <>
new  <	mov rbp, [rbp + 8]>

5430:
old  < vsprintf$8:>
new  <	jmp rax>

5431:
old  <	; GetReturnValue Â£temporary2046>
new  <>

5432:
old  <>
new  < sprintf$12:>

5433:
old  < vsprintf$9:>
new  <	; FunctionEnd sprintf>

5434:
old  <	; Return Â£temporary2046>
new  <>

5435:
old  <	mov rax, [rbp]>
new  <section .text>

5436:
old  <	mov rdi, [rbp + 16]>
new  <>

5437:
old  <	mov rbp, [rbp + 8]>
new  < vsprintf:>

5438:
old  <	jmp rax>
new  <	; Assign g_outStatus 1>

5439:
old  <>
new  <	mov dword [g_outStatus], 1>

5440:
old  < vsprintf$10:>
new  <>

5441:
old  <	; FunctionEnd vsprintf>
new  < vsprintf$1:>

StdLib.asm
64:
old  <	; GetReturnValue Â£temporary2047>
new  <	; GetReturnValue Â£temporary2034>

67:
old  <	; IntegralToIntegral Â£temporary2048 Â£temporary2047>
new  <	; IntegralToIntegral Â£temporary2035 Â£temporary2034>

74:
old  <	; Return Â£temporary2048>
new  <	; SetReturnValue>

75:
old  <	mov rax, [rbp]>
new  <>

76:
old  <	mov rdi, [rbp + 16]>
new  < atoi$9:>

77:
old  <	mov rbp, [rbp + 8]>
new  <	; Return Â£temporary2035>

78:
old  <	jmp rax>
new  <	mov rax, [rbp]>

79:
old  <>
new  <	mov rdi, [rbp + 16]>

80:
old  < atoi$9:>
new  <	mov rbp, [rbp + 8]>

81:
old  <	; FunctionEnd atoi>
new  <	jmp rax>

83:
old  <section .text>
new  < atoi$10:>

84:
old  <>
new  <	; FunctionEnd atoi>

85:
old  < atol:>
new  <>

86:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <section .text>

88:
old  < atol$1:>
new  < atol:>

89:
old  <	; Parameter 56 pointer s>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

90:
old  <	mov rax, [rbp + 24]>
new  <>

91:
old  <	mov [rbp + 56], rax>
new  < atol$1:>

92:
old  <>
new  <	; Parameter 56 pointer s>

93:
old  < atol$2:>
new  <	mov rax, [rbp + 24]>

94:
old  <	; Parameter 64 pointer 0>
new  <	mov [rbp + 56], rax>

95:
old  <	mov qword [rbp + 64], 0>
new  <>

96:
old  <>
new  < atol$2:>

97:
old  < atol$3:>
new  <	; Parameter 64 pointer 0>

98:
old  <	; Parameter 72 signedint 10>
new  <	mov qword [rbp + 64], 0>

99:
old  <	mov dword [rbp + 72], 10>
new  <>

100:
old  <>
new  < atol$3:>

101:
old  < atol$4:>
new  <	; Parameter 72 signedint 10>

102:
old  <	; Call 32 strtol 0>
new  <	mov dword [rbp + 72], 10>

103:
old  <	mov qword [rbp + 32], atol$5>
new  <>

104:
old  <	mov [rbp + 40], rbp>
new  < atol$4:>

105:
old  <	add rbp, 32>
new  <	; Call 32 strtol 0>

106:
old  <	jmp strtol>
new  <	mov qword [rbp + 32], atol$5>

107:
old  <>
new  <	mov [rbp + 40], rbp>

108:
old  < atol$5:>
new  <	add rbp, 32>

109:
old  <	; PostCall 32>
new  <	jmp strtol>

111:
old  < atol$6:>
new  < atol$5:>

112:
old  <	; GetReturnValue Â£temporary2049>
new  <	; PostCall 32>

114:
old  < atol$7:>
new  < atol$6:>

115:
old  <	; Return Â£temporary2049>
new  <	; GetReturnValue Â£temporary2036>

116:
old  <	mov rax, [rbp]>
new  <>

117:
old  <	mov rdi, [rbp + 16]>
new  < atol$7:>

118:
old  <	mov rbp, [rbp + 8]>
new  <	; SetReturnValue>

119:
old  <	jmp rax>
new  <>

120:
old  <>
new  < atol$8:>

121:
old  < atol$8:>
new  <	; Return Â£temporary2036>

122:
old  <	; FunctionEnd atol>
new  <	mov rax, [rbp]>

123:
old  <>
new  <	mov rdi, [rbp + 16]>

124:
old  <section .text>
new  <	mov rbp, [rbp + 8]>

125:
old  <>
new  <	jmp rax>

126:
old  < strtol:>
new  <>

127:
old  <	; Assign g_inStatus 1>
new  < atol$9:>

128:
old  <	mov dword [g_inStatus], 1>
new  <	; FunctionEnd atol>

130:
old  < strtol$1:>
new  <section .text>

131:
old  <	; Assign g_inDevice s>
new  <>

132:
old  <	mov rax, [rbp + 24]>
new  < strtol:>

133:
old  <	mov [g_inDevice], rax>
new  <	; Assign g_inStatus 1>

134:
old  <>
new  <	mov dword [g_inStatus], 1>

135:
old  < strtol$2:>
new  <>

136:
old  <	; Assign g_inChars 0>
new  < strtol$1:>

137:
old  <	mov dword [g_inChars], 0>
new  <	; Assign g_inDevice s>

138:
old  <>
new  <	mov rax, [rbp + 24]>

139:
old  < strtol$3:>
new  <	mov [g_inDevice], rax>

140:
old  <	; PreCall 44 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

141:
old  <>
new  < strtol$2:>

142:
old  < strtol$4:>
new  <	; Assign g_inChars 0>

143:
old  <	; Parameter 68 signedint base>
new  <	mov dword [g_inChars], 0>

144:
old  <	mov eax, [rbp + 40]>
new  <>

145:
old  <	mov [rbp + 68], eax>
new  < strtol$3:>

146:
old  <>
new  <	; PreCall 44 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

147:
old  < strtol$5:>
new  <>

148:
old  <	; Call 44 scanLongInt 0>
new  < strtol$4:>

149:
old  <	mov qword [rbp + 44], strtol$6>
new  <	; Parameter 68 signedint base>

150:
old  <	mov [rbp + 52], rbp>
new  <	mov eax, [rbp + 40]>

151:
old  <	add rbp, 44>
new  <	mov [rbp + 68], eax>

152:
old  <	jmp scanLongInt>
new  <>

153:
old  <>
new  < strtol$5:>

154:
old  < strtol$6:>
new  <	; Call 44 scanLongInt 0>

155:
old  <	; PostCall 44>
new  <	mov qword [rbp + 44], strtol$6>

156:
old  <>
new  <	mov [rbp + 52], rbp>

157:
old  < strtol$7:>
new  <	add rbp, 44>

158:
old  <	; GetReturnValue Â£temporary2050>
new  <	jmp scanLongInt>

160:
old  < strtol$8:>
new  < strtol$6:>

161:
old  <	; Assign value Â£temporary2050>
new  <	; PostCall 44>

162:
old  <	mov [rbp + 44], rbx>
new  <>

163:
old  <>
new  < strtol$7:>

164:
old  < strtol$9:>
new  <	; GetReturnValue Â£temporary2037>

165:
old  <	; Equal 13 endp 0>
new  <>

166:
old  <	cmp qword [rbp + 32], 0>
new  < strtol$8:>

167:
old  <	je strtol$13>
new  <	; Assign value Â£temporary2037>

168:
old  <>
new  <	mov [rbp + 44], rbx>

169:
old  < strtol$10:>
new  <>

170:
old  <	; Dereference Â£temporary2052 -> endp endp 0>
new  < strtol$9:>

171:
old  <	mov rsi, [rbp + 32]>
new  <	; Equal 13 endp 0>

172:
old  <>
new  <	cmp qword [rbp + 32], 0>

173:
old  < strtol$11:>
new  <	je strtol$13>

174:
old  <	; IntegralToIntegral Â£temporary2053 g_inChars>
new  <>

175:
old  <	mov eax, [g_inChars]>
new  < strtol$10:>

176:
old  <	mov rbx, 4294967295>
new  <	; Dereference Â£temporary2039 -> endp endp 0>

177:
old  <	and rax, rbx>
new  <	mov rsi, [rbp + 32]>

179:
old  < strtol$12:>
new  < strtol$11:>

180:
old  <	; BinaryAdd Â£temporary2052 -> endp s Â£temporary2053>
new  <	; IntegralToIntegral Â£temporary2040 g_inChars>

181:
old  <	mov rbx, [rbp + 24]>
new  <	mov eax, [g_inChars]>

182:
old  <	add rbx, rax>
new  <	mov rbx, 4294967295>

183:
old  <	mov [rsi], rbx>
new  <	and rax, rbx>

185:
old  < strtol$13:>
new  < strtol$12:>

186:
old  <	; Return value>
new  <	; BinaryAdd Â£temporary2039 -> endp s Â£temporary2040>

187:
old  <	mov rbx, [rbp + 44]>
new  <	mov rbx, [rbp + 24]>

188:
old  <	mov rax, [rbp]>
new  <	add rbx, rax>

189:
old  <	mov rdi, [rbp + 16]>
new  <	mov [rsi], rbx>

190:
old  <	mov rbp, [rbp + 8]>
new  <>

191:
old  <	jmp rax>
new  < strtol$13:>

192:
old  <>
new  <	; SetReturnValue>

193:
old  < strtol$14:>
new  <>

194:
old  <	; FunctionEnd strtol>
new  < strtol$14:>

195:
old  <>
new  <	; Return value>

196:
old  <section .data>
new  <	mov rbx, [rbp + 44]>

197:
old  <>
new  <	mov rax, [rbp]>

198:
old  <string_2020202B123abc#:>
new  <	mov rdi, [rbp + 16]>

199:
old  <	; Initializer String    +123abc>
new  <	mov rbp, [rbp + 8]>

200:
old  <	db "   +123abc", 0>
new  <	jmp rax>

202:
old  <section .data>
new  < strtol$15:>

203:
old  <>
new  <	; FunctionEnd strtol>

204:
old  <string_3C25s3E203C25li3E203C25s3E203C25i3E0A#:>
new  <>

205:
old  <	; Initializer String <%s> <%li> <%s> <%i>\n>
new  <section .data>

206:
old  <	db "<%s> <%li> <%s> <%i>", 10, 0>
new  <>

207:
old  <>
new  <string_2020202B123abc#:>

208:
old  <section .data>
new  <	; Initializer String    +123abc>

209:
old  <>
new  <	db "   +123abc", 0>

210:
old  <string_2020202B0123abc#:>
new  <>

211:
old  <	; Initializer String    +0123abc>
new  <section .data>

212:
old  <	db "   +0123abc", 0>
new  <>

213:
old  <>
new  <string_3C25s3E203C25li3E203C25s3E203C25i3E0A#:>

214:
old  <section .data>
new  <	; Initializer String <%s> <%li> <%s> <%i>\n>

215:
old  <>
new  <	db "<%s> <%li> <%s> <%i>", 10, 0>

216:
old  <string_2020202B0x123ABC#:>
new  <>

217:
old  <	; Initializer String    +0x123ABC>
new  <section .data>

218:
old  <	db "   +0x123ABC", 0>
new  <>

219:
old  <>
new  <string_2020202B0123abc#:>

220:
old  <section .data>
new  <	; Initializer String    +0123abc>

221:
old  <>
new  <	db "   +0123abc", 0>

222:
old  <string_2020202B0X123abc#:>
new  <>

223:
old  <	; Initializer String    +0X123abc>
new  <section .data>

224:
old  <	db "   +0X123abc", 0>
new  <>

225:
old  <>
new  <string_2020202B0x123ABC#:>

226:
old  <section .data>
new  <	; Initializer String    +0x123ABC>

227:
old  <>
new  <	db "   +0x123ABC", 0>

228:
old  <string_2020202D123abc#:>
new  <>

229:
old  <	; Initializer String    -123abc>
new  <section .data>

230:
old  <	db "   -123abc", 0>
new  <>

231:
old  <>
new  <string_2020202B0X123abc#:>

232:
old  <section .data>
new  <	; Initializer String    +0X123abc>

233:
old  <>
new  <	db "   +0X123abc", 0>

234:
old  <string_2020202D0123abc#:>
new  <>

235:
old  <	; Initializer String    -0123abc>
new  <section .data>

236:
old  <	db "   -0123abc", 0>
new  <>

237:
old  <>
new  <string_2020202D123abc#:>

238:
old  <section .data>
new  <	; Initializer String    -123abc>

239:
old  <>
new  <	db "   -123abc", 0>

240:
old  <string_2020202D0x123ABC#:>
new  <>

241:
old  <	; Initializer String    -0x123ABC>
new  <section .data>

242:
old  <	db "   -0x123ABC", 0>
new  <>

243:
old  <>
new  <string_2020202D0123abc#:>

244:
old  <section .data>
new  <	; Initializer String    -0123abc>

245:
old  <>
new  <	db "   -0123abc", 0>

246:
old  <string_2020202D0X123abc#:>
new  <>

247:
old  <	; Initializer String    -0X123abc>
new  <section .data>

248:
old  <	db "   -0X123abc", 0>
new  <>

249:
old  <>
new  <string_2020202D0x123ABC#:>

250:
old  <section .data>
new  <	; Initializer String    -0x123ABC>

251:
old  <>
new  <	db "   -0x123ABC", 0>

252:
old  <string_2020202B123ABC#:>
new  <>

253:
old  <	; Initializer String    +123ABC>
new  <section .data>

254:
old  <	db "   +123ABC", 0>
new  <>

255:
old  <>
new  <string_2020202D0X123abc#:>

256:
old  <section .data>
new  <	; Initializer String    -0X123abc>

257:
old  <>
new  <	db "   -0X123abc", 0>

258:
old  <string_2020202D123ABC#:>
new  <>

259:
old  <	; Initializer String    -123ABC>
new  <section .data>

260:
old  <	db "   -123ABC", 0>
new  <>

261:
old  <>
new  <string_2020202B123ABC#:>

262:
old  <section .text>
new  <	; Initializer String    +123ABC>

263:
old  <>
new  <	db "   +123ABC", 0>

264:
old  < strtol_test:>
new  <>

265:
old  <	; Assign base 0>
new  <section .data>

266:
old  <	mov dword [rbp + 24], 0>
new  <>

267:
old  <>
new  <string_2020202D123ABC#:>

268:
old  < strtol_test$1:>
new  <	; Initializer String    -123ABC>

269:
old  <	; Assign text[0] 32>
new  <	db "   -123ABC", 0>

270:
old  <	mov byte [rbp + 28], 32>
new  <>

271:
old  <>
new  <section .text>

272:
old  < strtol_test$2:>
new  <>

273:
old  <	; Assign text[1] 32>
new  < strtol_test:>

274:
old  <	mov byte [rbp + 29], 32>
new  <	; Assign base 0>

275:
old  <>
new  <	mov dword [rbp + 24], 0>

276:
old  < strtol_test$3:>
new  <>

277:
old  <	; Assign text[2] 32>
new  < strtol_test$1:>

278:
old  <	mov byte [rbp + 30], 32>
new  <	; Assign text[0] 32>

279:
old  <>
new  <	mov byte [rbp + 28], 32>

280:
old  < strtol_test$4:>
new  <>

281:
old  <	; Assign text[3] 43>
new  < strtol_test$2:>

282:
old  <	mov byte [rbp + 31], 43>
new  <	; Assign text[1] 32>

283:
old  <>
new  <	mov byte [rbp + 29], 32>

284:
old  < strtol_test$5:>
new  <>

285:
old  <	; Assign text[4] 49>
new  < strtol_test$3:>

286:
old  <	mov byte [rbp + 32], 49>
new  <	; Assign text[2] 32>

287:
old  <>
new  <	mov byte [rbp + 30], 32>

288:
old  < strtol_test$6:>
new  <>

289:
old  <	; Assign text[5] 50>
new  < strtol_test$4:>

290:
old  <	mov byte [rbp + 33], 50>
new  <	; Assign text[3] 43>

291:
old  <>
new  <	mov byte [rbp + 31], 43>

292:
old  < strtol_test$7:>
new  <>

293:
old  <	; Assign text[6] 51>
new  < strtol_test$5:>

294:
old  <	mov byte [rbp + 34], 51>
new  <	; Assign text[4] 49>

295:
old  <>
new  <	mov byte [rbp + 32], 49>

296:
old  < strtol_test$8:>
new  <>

297:
old  <	; Assign text[7] 97>
new  < strtol_test$6:>

298:
old  <	mov byte [rbp + 35], 97>
new  <	; Assign text[5] 50>

299:
old  <>
new  <	mov byte [rbp + 33], 50>

300:
old  < strtol_test$9:>
new  <>

301:
old  <	; Assign text[8] 98>
new  < strtol_test$7:>

302:
old  <	mov byte [rbp + 36], 98>
new  <	; Assign text[6] 51>

303:
old  <>
new  <	mov byte [rbp + 34], 51>

304:
old  < strtol_test$10:>
new  <>

305:
old  <	; Assign text[9] 99>
new  < strtol_test$8:>

306:
old  <	mov byte [rbp + 37], 99>
new  <	; Assign text[7] 97>

307:
old  <>
new  <	mov byte [rbp + 35], 97>

308:
old  < strtol_test$11:>
new  <>

309:
old  <	; Assign text[10] 0>
new  < strtol_test$9:>

310:
old  <	mov byte [rbp + 38], 0>
new  <	; Assign text[8] 98>

311:
old  <>
new  <	mov byte [rbp + 36], 98>

312:
old  < strtol_test$12:>
new  <>

313:
old  <	; PreCall 47 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < strtol_test$10:>

314:
old  <>
new  <	; Assign text[9] 99>

315:
old  < strtol_test$13:>
new  <	mov byte [rbp + 37], 99>

316:
old  <	; Parameter 71 pointer text>
new  <>

317:
old  <	mov [rbp + 71], rbp>
new  < strtol_test$11:>

318:
old  <	add qword [rbp + 71], 28>
new  <	; Assign text[10] 0>

319:
old  <>
new  <	mov byte [rbp + 38], 0>

320:
old  < strtol_test$14:>
new  <>

321:
old  <	; Address Â£temporary2067 pointer>
new  < strtol_test$12:>

322:
old  <	mov rsi, rbp>
new  <	; PreCall 47 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

323:
old  <	add rsi, 39>
new  <>

324:
old  <>
new  < strtol_test$13:>

325:
old  < strtol_test$15:>
new  <	; Parameter 71 pointer text>

326:
old  <	; Parameter 79 pointer Â£temporary2067>
new  <	mov [rbp + 71], rbp>

327:
old  <	mov [rbp + 79], rsi>
new  <	add qword [rbp + 71], 28>

329:
old  < strtol_test$16:>
new  < strtol_test$14:>

330:
old  <	; Parameter 87 signedint base>
new  <	; Address Â£temporary2054 pointer>

331:
old  <	mov eax, [rbp + 24]>
new  <	mov rsi, rbp>

332:
old  <	mov [rbp + 87], eax>
new  <	add rsi, 39>

334:
old  < strtol_test$17:>
new  < strtol_test$15:>

335:
old  <	; Call 47 strtol 0>
new  <	; Parameter 79 pointer Â£temporary2054>

336:
old  <	mov qword [rbp + 47], strtol_test$18>
new  <	mov [rbp + 79], rsi>

337:
old  <	mov [rbp + 55], rbp>
new  <>

338:
old  <	add rbp, 47>
new  < strtol_test$16:>

339:
old  <	jmp strtol>
new  <	; Parameter 87 signedint base>

340:
old  <>
new  <	mov eax, [rbp + 24]>

341:
old  < strtol_test$18:>
new  <	mov [rbp + 87], eax>

342:
old  <	; PostCall 47>
new  <>

343:
old  <>
new  < strtol_test$17:>

344:
old  < strtol_test$19:>
new  <	; Call 47 strtol 0>

345:
old  <	; GetReturnValue Â£temporary2068>
new  <	mov qword [rbp + 47], strtol_test$18>

346:
old  <>
new  <	mov [rbp + 55], rbp>

347:
old  < strtol_test$20:>
new  <	add rbp, 47>

348:
old  <	; Assign value Â£temporary2068>
new  <	jmp strtol>

349:
old  <	mov [rbp + 47], rbx>
new  <>

350:
old  <>
new  < strtol_test$18:>

351:
old  < strtol_test$21:>
new  <	; PostCall 47>

352:
old  <	; PreCall 55 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

353:
old  <>
new  < strtol_test$19:>

354:
old  < strtol_test$22:>
new  <	; GetReturnValue Â£temporary2055>

355:
old  <	; Parameter 79 pointer "<%s> <%li> <%s> <%i>\n">
new  <>

356:
old  <	mov qword [rbp + 79], string_3C25s3E203C25li3E203C25s3E203C25i3E0A#>
new  < strtol_test$20:>

357:
old  <>
new  <	; Assign value Â£temporary2055>

358:
old  < strtol_test$23:>
new  <	mov [rbp + 47], rbx>

359:
old  <	; Parameter 87 pointer text>
new  <>

360:
old  <	mov [rbp + 87], rbp>
new  < strtol_test$21:>

361:
old  <	add qword [rbp + 87], 28>
new  <	; PreCall 55 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

363:
old  < strtol_test$24:>
new  < strtol_test$22:>

364:
old  <	; Parameter 95 signed long int value>
new  <	; Parameter 79 pointer "<%s> <%li> <%s> <%i>\n">

365:
old  <	mov rax, [rbp + 47]>
new  <	mov qword [rbp + 79], string_3C25s3E203C25li3E203C25s3E203C25i3E0A#>

366:
old  <	mov [rbp + 95], rax>
new  <>

367:
old  <>
new  < strtol_test$23:>

368:
old  < strtol_test$25:>
new  <	; Parameter 87 pointer text>

369:
old  <	; Parameter 103 pointer pointer>
new  <	mov [rbp + 87], rbp>

370:
old  <	mov rax, [rbp + 39]>
new  <	add qword [rbp + 87], 28>

371:
old  <	mov [rbp + 103], rax>
new  <>

372:
old  <>
new  < strtol_test$24:>

373:
old  < strtol_test$26:>
new  <	; Parameter 95 signed long int value>

374:
old  <	; Parameter 111 signedint base>
new  <	mov rax, [rbp + 47]>

375:
old  <	mov eax, [rbp + 24]>
new  <	mov [rbp + 95], rax>

376:
old  <	mov [rbp + 111], eax>
new  <>

377:
old  <>
new  < strtol_test$25:>

378:
old  < strtol_test$27:>
new  <	; Parameter 103 pointer pointer>

379:
old  <	; Call 55 printf 28>
new  <	mov rax, [rbp + 39]>

380:
old  <	mov qword [rbp + 55], strtol_test$28>
new  <	mov [rbp + 103], rax>

381:
old  <	mov [rbp + 63], rbp>
new  <>

382:
old  <	add rbp, 55>
new  < strtol_test$26:>

383:
old  <	mov rdi, rbp>
new  <	; Parameter 111 signedint base>

384:
old  <	add rdi, 28>
new  <	mov eax, [rbp + 24]>

385:
old  <	jmp printf>
new  <	mov [rbp + 111], eax>

387:
old  < strtol_test$28:>
new  < strtol_test$27:>

388:
old  <	; PostCall 55>
new  <	; Call 55 printf 28>

389:
old  <>
new  <	mov qword [rbp + 55], strtol_test$28>

390:
old  < strtol_test$29:>
new  <	mov [rbp + 63], rbp>

391:
old  <	; Assign base 0>
new  <	add rbp, 55>

392:
old  <	mov dword [rbp + 24], 0>
new  <	mov rdi, rbp>

393:
old  <>
new  <	add rdi, 28>

394:
old  < strtol_test$30:>
new  <	jmp printf>

395:
old  <	; Assign text[0] 32>
new  <>

396:
old  <	mov byte [rbp + 28], 32>
new  < strtol_test$28:>

397:
old  <>
new  <	; PostCall 55>

398:
old  < strtol_test$31:>
new  <>

399:
old  <	; Assign text[1] 32>
new  < strtol_test$29:>

400:
old  <	mov byte [rbp + 29], 32>
new  <	; Assign base 0>

401:
old  <>
new  <	mov dword [rbp + 24], 0>

402:
old  < strtol_test$32:>
new  <>

403:
old  <	; Assign text[2] 32>
new  < strtol_test$30:>

404:
old  <	mov byte [rbp + 30], 32>
new  <	; Assign text[0] 32>

405:
old  <>
new  <	mov byte [rbp + 28], 32>

406:
old  < strtol_test$33:>
new  <>

407:
old  <	; Assign text[3] 43>
new  < strtol_test$31:>

408:
old  <	mov byte [rbp + 31], 43>
new  <	; Assign text[1] 32>

409:
old  <>
new  <	mov byte [rbp + 29], 32>

410:
old  < strtol_test$34:>
new  <>

411:
old  <	; Assign text[4] 48>
new  < strtol_test$32:>

412:
old  <	mov byte [rbp + 32], 48>
new  <	; Assign text[2] 32>

413:
old  <>
new  <	mov byte [rbp + 30], 32>

414:
old  < strtol_test$35:>
new  <>

415:
old  <	; Assign text[5] 49>
new  < strtol_test$33:>

416:
old  <	mov byte [rbp + 33], 49>
new  <	; Assign text[3] 43>

417:
old  <>
new  <	mov byte [rbp + 31], 43>

418:
old  < strtol_test$36:>
new  <>

419:
old  <	; Assign text[6] 50>
new  < strtol_test$34:>

420:
old  <	mov byte [rbp + 34], 50>
new  <	; Assign text[4] 48>

421:
old  <>
new  <	mov byte [rbp + 32], 48>

422:
old  < strtol_test$37:>
new  <>

423:
old  <	; Assign text[7] 51>
new  < strtol_test$35:>

424:
old  <	mov byte [rbp + 35], 51>
new  <	; Assign text[5] 49>

425:
old  <>
new  <	mov byte [rbp + 33], 49>

426:
old  < strtol_test$38:>
new  <>

427:
old  <	; Assign text[8] 97>
new  < strtol_test$36:>

428:
old  <	mov byte [rbp + 36], 97>
new  <	; Assign text[6] 50>

429:
old  <>
new  <	mov byte [rbp + 34], 50>

430:
old  < strtol_test$39:>
new  <>

431:
old  <	; Assign text[9] 98>
new  < strtol_test$37:>

432:
old  <	mov byte [rbp + 37], 98>
new  <	; Assign text[7] 51>

433:
old  <>
new  <	mov byte [rbp + 35], 51>

434:
old  < strtol_test$40:>
new  <>

435:
old  <	; Assign text[10] 99>
new  < strtol_test$38:>

436:
old  <	mov byte [rbp + 38], 99>
new  <	; Assign text[8] 97>

437:
old  <>
new  <	mov byte [rbp + 36], 97>

438:
old  < strtol_test$41:>
new  <>

439:
old  <	; Assign text[11] 0>
new  < strtol_test$39:>

440:
old  <	mov byte [rbp + 39], 0>
new  <	; Assign text[9] 98>

441:
old  <>
new  <	mov byte [rbp + 37], 98>

442:
old  < strtol_test$42:>
new  <>

443:
old  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < strtol_test$40:>

444:
old  <>
new  <	; Assign text[10] 99>

445:
old  < strtol_test$43:>
new  <	mov byte [rbp + 38], 99>

446:
old  <	; Parameter 72 pointer text>
new  <>

447:
old  <	mov [rbp + 72], rbp>
new  < strtol_test$41:>

448:
old  <	add qword [rbp + 72], 28>
new  <	; Assign text[11] 0>

449:
old  <>
new  <	mov byte [rbp + 39], 0>

450:
old  < strtol_test$44:>
new  <>

451:
old  <	; Address Â£temporary2082 pointer>
new  < strtol_test$42:>

452:
old  <	mov rsi, rbp>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

453:
old  <	add rsi, 40>
new  <>

454:
old  <>
new  < strtol_test$43:>

455:
old  < strtol_test$45:>
new  <	; Parameter 72 pointer text>

456:
old  <	; Parameter 80 pointer Â£temporary2082>
new  <	mov [rbp + 72], rbp>

457:
old  <	mov [rbp + 80], rsi>
new  <	add qword [rbp + 72], 28>

459:
old  < strtol_test$46:>
new  < strtol_test$44:>

460:
old  <	; Parameter 88 signedint base>
new  <	; Address Â£temporary2069 pointer>

461:
old  <	mov eax, [rbp + 24]>
new  <	mov rsi, rbp>

462:
old  <	mov [rbp + 88], eax>
new  <	add rsi, 40>

464:
old  < strtol_test$47:>
new  < strtol_test$45:>

465:
old  <	; Call 48 strtol 0>
new  <	; Parameter 80 pointer Â£temporary2069>

466:
old  <	mov qword [rbp + 48], strtol_test$48>
new  <	mov [rbp + 80], rsi>

467:
old  <	mov [rbp + 56], rbp>
new  <>

468:
old  <	add rbp, 48>
new  < strtol_test$46:>

469:
old  <	jmp strtol>
new  <	; Parameter 88 signedint base>

470:
old  <>
new  <	mov eax, [rbp + 24]>

471:
old  < strtol_test$48:>
new  <	mov [rbp + 88], eax>

472:
old  <	; PostCall 48>
new  <>

473:
old  <>
new  < strtol_test$47:>

474:
old  < strtol_test$49:>
new  <	; Call 48 strtol 0>

475:
old  <	; GetReturnValue Â£temporary2083>
new  <	mov qword [rbp + 48], strtol_test$48>

476:
old  <>
new  <	mov [rbp + 56], rbp>

477:
old  < strtol_test$50:>
new  <	add rbp, 48>

478:
old  <	; Assign value Â£temporary2083>
new  <	jmp strtol>

479:
old  <	mov [rbp + 48], rbx>
new  <>

480:
old  <>
new  < strtol_test$48:>

481:
old  < strtol_test$51:>
new  <	; PostCall 48>

482:
old  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

483:
old  <>
new  < strtol_test$49:>

484:
old  < strtol_test$52:>
new  <	; GetReturnValue Â£temporary2070>

485:
old  <	; Parameter 80 pointer "<%s> <%li> <%s> <%i>\n">
new  <>

486:
old  <	mov qword [rbp + 80], string_3C25s3E203C25li3E203C25s3E203C25i3E0A#>
new  < strtol_test$50:>

487:
old  <>
new  <	; Assign value Â£temporary2070>

488:
old  < strtol_test$53:>
new  <	mov [rbp + 48], rbx>

489:
old  <	; Parameter 88 pointer text>
new  <>

490:
old  <	mov [rbp + 88], rbp>
new  < strtol_test$51:>

491:
old  <	add qword [rbp + 88], 28>
new  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

493:
old  < strtol_test$54:>
new  < strtol_test$52:>

494:
old  <	; Parameter 96 signed long int value>
new  <	; Parameter 80 pointer "<%s> <%li> <%s> <%i>\n">

495:
old  <	mov rax, [rbp + 48]>
new  <	mov qword [rbp + 80], string_3C25s3E203C25li3E203C25s3E203C25i3E0A#>

496:
old  <	mov [rbp + 96], rax>
new  <>

497:
old  <>
new  < strtol_test$53:>

498:
old  < strtol_test$55:>
new  <	; Parameter 88 pointer text>

499:
old  <	; Parameter 104 pointer pointer>
new  <	mov [rbp + 88], rbp>

500:
old  <	mov rax, [rbp + 40]>
new  <	add qword [rbp + 88], 28>

501:
old  <	mov [rbp + 104], rax>
new  <>

502:
old  <>
new  < strtol_test$54:>

503:
old  < strtol_test$56:>
new  <	; Parameter 96 signed long int value>

504:
old  <	; Parameter 112 signedint base>
new  <	mov rax, [rbp + 48]>

505:
old  <	mov eax, [rbp + 24]>
new  <	mov [rbp + 96], rax>

506:
old  <	mov [rbp + 112], eax>
new  <>

507:
old  <>
new  < strtol_test$55:>

508:
old  < strtol_test$57:>
new  <	; Parameter 104 pointer pointer>

509:
old  <	; Call 56 printf 28>
new  <	mov rax, [rbp + 40]>

510:
old  <	mov qword [rbp + 56], strtol_test$58>
new  <	mov [rbp + 104], rax>

511:
old  <	mov [rbp + 64], rbp>
new  <>

512:
old  <	add rbp, 56>
new  < strtol_test$56:>

513:
old  <	mov rdi, rbp>
new  <	; Parameter 112 signedint base>

514:
old  <	add rdi, 28>
new  <	mov eax, [rbp + 24]>

515:
old  <	jmp printf>
new  <	mov [rbp + 112], eax>

517:
old  < strtol_test$58:>
new  < strtol_test$57:>

518:
old  <	; PostCall 56>
new  <	; Call 56 printf 28>

519:
old  <>
new  <	mov qword [rbp + 56], strtol_test$58>

520:
old  < strtol_test$59:>
new  <	mov [rbp + 64], rbp>

521:
old  <	; Assign base 0>
new  <	add rbp, 56>

522:
old  <	mov dword [rbp + 24], 0>
new  <	mov rdi, rbp>

523:
old  <>
new  <	add rdi, 28>

524:
old  < strtol_test$60:>
new  <	jmp printf>

525:
old  <	; Assign text[0] 32>
new  <>

526:
old  <	mov byte [rbp + 28], 32>
new  < strtol_test$58:>

527:
old  <>
new  <	; PostCall 56>

528:
old  < strtol_test$61:>
new  <>

529:
old  <	; Assign text[1] 32>
new  < strtol_test$59:>

530:
old  <	mov byte [rbp + 29], 32>
new  <	; Assign base 0>

531:
old  <>
new  <	mov dword [rbp + 24], 0>

532:
old  < strtol_test$62:>
new  <>

533:
old  <	; Assign text[2] 32>
new  < strtol_test$60:>

534:
old  <	mov byte [rbp + 30], 32>
new  <	; Assign text[0] 32>

535:
old  <>
new  <	mov byte [rbp + 28], 32>

536:
old  < strtol_test$63:>
new  <>

537:
old  <	; Assign text[3] 43>
new  < strtol_test$61:>

538:
old  <	mov byte [rbp + 31], 43>
new  <	; Assign text[1] 32>

539:
old  <>
new  <	mov byte [rbp + 29], 32>

540:
old  < strtol_test$64:>
new  <>

541:
old  <	; Assign text[4] 48>
new  < strtol_test$62:>

542:
old  <	mov byte [rbp + 32], 48>
new  <	; Assign text[2] 32>

543:
old  <>
new  <	mov byte [rbp + 30], 32>

544:
old  < strtol_test$65:>
new  <>

545:
old  <	; Assign text[5] 120>
new  < strtol_test$63:>

546:
old  <	mov byte [rbp + 33], 120>
new  <	; Assign text[3] 43>

547:
old  <>
new  <	mov byte [rbp + 31], 43>

548:
old  < strtol_test$66:>
new  <>

549:
old  <	; Assign text[6] 49>
new  < strtol_test$64:>

550:
old  <	mov byte [rbp + 34], 49>
new  <	; Assign text[4] 48>

551:
old  <>
new  <	mov byte [rbp + 32], 48>

552:
old  < strtol_test$67:>
new  <>

553:
old  <	; Assign text[7] 50>
new  < strtol_test$65:>

554:
old  <	mov byte [rbp + 35], 50>
new  <	; Assign text[5] 120>

555:
old  <>
new  <	mov byte [rbp + 33], 120>

556:
old  < strtol_test$68:>
new  <>

557:
old  <	; Assign text[8] 51>
new  < strtol_test$66:>

558:
old  <	mov byte [rbp + 36], 51>
new  <	; Assign text[6] 49>

559:
old  <>
new  <	mov byte [rbp + 34], 49>

560:
old  < strtol_test$69:>
new  <>

561:
old  <	; Assign text[9] 65>
new  < strtol_test$67:>

562:
old  <	mov byte [rbp + 37], 65>
new  <	; Assign text[7] 50>

563:
old  <>
new  <	mov byte [rbp + 35], 50>

564:
old  < strtol_test$70:>
new  <>

565:
old  <	; Assign text[10] 66>
new  < strtol_test$68:>

566:
old  <	mov byte [rbp + 38], 66>
new  <	; Assign text[8] 51>

567:
old  <>
new  <	mov byte [rbp + 36], 51>

568:
old  < strtol_test$71:>
new  <>

569:
old  <	; Assign text[11] 67>
new  < strtol_test$69:>

570:
old  <	mov byte [rbp + 39], 67>
new  <	; Assign text[9] 65>

571:
old  <>
new  <	mov byte [rbp + 37], 65>

572:
old  < strtol_test$72:>
new  <>

573:
old  <	; Assign text[12] 0>
new  < strtol_test$70:>

574:
old  <	mov byte [rbp + 40], 0>
new  <	; Assign text[10] 66>

575:
old  <>
new  <	mov byte [rbp + 38], 66>

576:
old  < strtol_test$73:>
new  <>

577:
old  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < strtol_test$71:>

578:
old  <>
new  <	; Assign text[11] 67>

579:
old  < strtol_test$74:>
new  <	mov byte [rbp + 39], 67>

580:
old  <	; Parameter 73 pointer text>
new  <>

581:
old  <	mov [rbp + 73], rbp>
new  < strtol_test$72:>

582:
old  <	add qword [rbp + 73], 28>
new  <	; Assign text[12] 0>

583:
old  <>
new  <	mov byte [rbp + 40], 0>

584:
old  < strtol_test$75:>
new  <>

585:
old  <	; Address Â£temporary2098 pointer>
new  < strtol_test$73:>

586:
old  <	mov rsi, rbp>
new  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

587:
old  <	add rsi, 41>
new  <>

588:
old  <>
new  < strtol_test$74:>

589:
old  < strtol_test$76:>
new  <	; Parameter 73 pointer text>

590:
old  <	; Parameter 81 pointer Â£temporary2098>
new  <	mov [rbp + 73], rbp>

591:
old  <	mov [rbp + 81], rsi>
new  <	add qword [rbp + 73], 28>

593:
old  < strtol_test$77:>
new  < strtol_test$75:>

594:
old  <	; Parameter 89 signedint base>
new  <	; Address Â£temporary2085 pointer>

595:
old  <	mov eax, [rbp + 24]>
new  <	mov rsi, rbp>

596:
old  <	mov [rbp + 89], eax>
new  <	add rsi, 41>

598:
old  < strtol_test$78:>
new  < strtol_test$76:>

599:
old  <	; Call 49 strtol 0>
new  <	; Parameter 81 pointer Â£temporary2085>

600:
old  <	mov qword [rbp + 49], strtol_test$79>
new  <	mov [rbp + 81], rsi>

601:
old  <	mov [rbp + 57], rbp>
new  <>

602:
old  <	add rbp, 49>
new  < strtol_test$77:>

603:
old  <	jmp strtol>
new  <	; Parameter 89 signedint base>

604:
old  <>
new  <	mov eax, [rbp + 24]>

605:
old  < strtol_test$79:>
new  <	mov [rbp + 89], eax>

606:
old  <	; PostCall 49>
new  <>

607:
old  <>
new  < strtol_test$78:>

608:
old  < strtol_test$80:>
new  <	; Call 49 strtol 0>

609:
old  <	; GetReturnValue Â£temporary2099>
new  <	mov qword [rbp + 49], strtol_test$79>

610:
old  <>
new  <	mov [rbp + 57], rbp>

611:
old  < strtol_test$81:>
new  <	add rbp, 49>

612:
old  <	; Assign value Â£temporary2099>
new  <	jmp strtol>

613:
old  <	mov [rbp + 49], rbx>
new  <>

614:
old  <>
new  < strtol_test$79:>

615:
old  < strtol_test$82:>
new  <	; PostCall 49>

616:
old  <	; PreCall 57 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

617:
old  <>
new  < strtol_test$80:>

618:
old  < strtol_test$83:>
new  <	; GetReturnValue Â£temporary2086>

619:
old  <	; Parameter 81 pointer "<%s> <%li> <%s> <%i>\n">
new  <>

620:
old  <	mov qword [rbp + 81], string_3C25s3E203C25li3E203C25s3E203C25i3E0A#>
new  < strtol_test$81:>

621:
old  <>
new  <	; Assign value Â£temporary2086>

622:
old  < strtol_test$84:>
new  <	mov [rbp + 49], rbx>

623:
old  <	; Parameter 89 pointer text>
new  <>

624:
old  <	mov [rbp + 89], rbp>
new  < strtol_test$82:>

625:
old  <	add qword [rbp + 89], 28>
new  <	; PreCall 57 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

627:
old  < strtol_test$85:>
new  < strtol_test$83:>

628:
old  <	; Parameter 97 signed long int value>
new  <	; Parameter 81 pointer "<%s> <%li> <%s> <%i>\n">

629:
old  <	mov rax, [rbp + 49]>
new  <	mov qword [rbp + 81], string_3C25s3E203C25li3E203C25s3E203C25i3E0A#>

630:
old  <	mov [rbp + 97], rax>
new  <>

631:
old  <>
new  < strtol_test$84:>

632:
old  < strtol_test$86:>
new  <	; Parameter 89 pointer text>

633:
old  <	; Parameter 105 pointer pointer>
new  <	mov [rbp + 89], rbp>

634:
old  <	mov rax, [rbp + 41]>
new  <	add qword [rbp + 89], 28>

635:
old  <	mov [rbp + 105], rax>
new  <>

636:
old  <>
new  < strtol_test$85:>

637:
old  < strtol_test$87:>
new  <	; Parameter 97 signed long int value>

638:
old  <	; Parameter 113 signedint base>
new  <	mov rax, [rbp + 49]>

639:
old  <	mov eax, [rbp + 24]>
new  <	mov [rbp + 97], rax>

640:
old  <	mov [rbp + 113], eax>
new  <>

641:
old  <>
new  < strtol_test$86:>

642:
old  < strtol_test$88:>
new  <	; Parameter 105 pointer pointer>

643:
old  <	; Call 57 printf 28>
new  <	mov rax, [rbp + 41]>

644:
old  <	mov qword [rbp + 57], strtol_test$89>
new  <	mov [rbp + 105], rax>

645:
old  <	mov [rbp + 65], rbp>
new  <>

646:
old  <	add rbp, 57>
new  < strtol_test$87:>

647:
old  <	mov rdi, rbp>
new  <	; Parameter 113 signedint base>

648:
old  <	add rdi, 28>
new  <	mov eax, [rbp + 24]>

649:
old  <	jmp printf>
new  <	mov [rbp + 113], eax>

651:
old  < strtol_test$89:>
new  < strtol_test$88:>

652:
old  <	; PostCall 57>
new  <	; Call 57 printf 28>

653:
old  <>
new  <	mov qword [rbp + 57], strtol_test$89>

654:
old  < strtol_test$90:>
new  <	mov [rbp + 65], rbp>

655:
old  <	; Assign base 0>
new  <	add rbp, 57>

656:
old  <	mov dword [rbp + 24], 0>
new  <	mov rdi, rbp>

657:
old  <>
new  <	add rdi, 28>

658:
old  < strtol_test$91:>
new  <	jmp printf>

659:
old  <	; Assign text[0] 32>
new  <>

660:
old  <	mov byte [rbp + 28], 32>
new  < strtol_test$89:>

661:
old  <>
new  <	; PostCall 57>

662:
old  < strtol_test$92:>
new  <>

663:
old  <	; Assign text[1] 32>
new  < strtol_test$90:>

664:
old  <	mov byte [rbp + 29], 32>
new  <	; Assign base 0>

665:
old  <>
new  <	mov dword [rbp + 24], 0>

666:
old  < strtol_test$93:>
new  <>

667:
old  <	; Assign text[2] 32>
new  < strtol_test$91:>

668:
old  <	mov byte [rbp + 30], 32>
new  <	; Assign text[0] 32>

669:
old  <>
new  <	mov byte [rbp + 28], 32>

670:
old  < strtol_test$94:>
new  <>

671:
old  <	; Assign text[3] 43>
new  < strtol_test$92:>

672:
old  <	mov byte [rbp + 31], 43>
new  <	; Assign text[1] 32>

673:
old  <>
new  <	mov byte [rbp + 29], 32>

674:
old  < strtol_test$95:>
new  <>

675:
old  <	; Assign text[4] 48>
new  < strtol_test$93:>

676:
old  <	mov byte [rbp + 32], 48>
new  <	; Assign text[2] 32>

677:
old  <>
new  <	mov byte [rbp + 30], 32>

678:
old  < strtol_test$96:>
new  <>

679:
old  <	; Assign text[5] 88>
new  < strtol_test$94:>

680:
old  <	mov byte [rbp + 33], 88>
new  <	; Assign text[3] 43>

681:
old  <>
new  <	mov byte [rbp + 31], 43>

682:
old  < strtol_test$97:>
new  <>

683:
old  <	; Assign text[6] 49>
new  < strtol_test$95:>

684:
old  <	mov byte [rbp + 34], 49>
new  <	; Assign text[4] 48>

685:
old  <>
new  <	mov byte [rbp + 32], 48>

686:
old  < strtol_test$98:>
new  <>

687:
old  <	; Assign text[7] 50>
new  < strtol_test$96:>

688:
old  <	mov byte [rbp + 35], 50>
new  <	; Assign text[5] 88>

689:
old  <>
new  <	mov byte [rbp + 33], 88>

690:
old  < strtol_test$99:>
new  <>

691:
old  <	; Assign text[8] 51>
new  < strtol_test$97:>

692:
old  <	mov byte [rbp + 36], 51>
new  <	; Assign text[6] 49>

693:
old  <>
new  <	mov byte [rbp + 34], 49>

694:
old  < strtol_test$100:>
new  <>

695:
old  <	; Assign text[9] 97>
new  < strtol_test$98:>

696:
old  <	mov byte [rbp + 37], 97>
new  <	; Assign text[7] 50>

697:
old  <>
new  <	mov byte [rbp + 35], 50>

698:
old  < strtol_test$101:>
new  <>

699:
old  <	; Assign text[10] 98>
new  < strtol_test$99:>

700:
old  <	mov byte [rbp + 38], 98>
new  <	; Assign text[8] 51>

701:
old  <>
new  <	mov byte [rbp + 36], 51>

702:
old  < strtol_test$102:>
new  <>

703:
old  <	; Assign text[11] 99>
new  < strtol_test$100:>

704:
old  <	mov byte [rbp + 39], 99>
new  <	; Assign text[9] 97>

705:
old  <>
new  <	mov byte [rbp + 37], 97>

706:
old  < strtol_test$103:>
new  <>

707:
old  <	; Assign text[12] 0>
new  < strtol_test$101:>

708:
old  <	mov byte [rbp + 40], 0>
new  <	; Assign text[10] 98>

709:
old  <>
new  <	mov byte [rbp + 38], 98>

710:
old  < strtol_test$104:>
new  <>

711:
old  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < strtol_test$102:>

712:
old  <>
new  <	; Assign text[11] 99>

713:
old  < strtol_test$105:>
new  <	mov byte [rbp + 39], 99>

714:
old  <	; Parameter 73 pointer text>
new  <>

715:
old  <	mov [rbp + 73], rbp>
new  < strtol_test$103:>

716:
old  <	add qword [rbp + 73], 28>
new  <	; Assign text[12] 0>

717:
old  <>
new  <	mov byte [rbp + 40], 0>

718:
old  < strtol_test$106:>
new  <>

719:
old  <	; Address Â£temporary2114 pointer>
new  < strtol_test$104:>

720:
old  <	mov rsi, rbp>
new  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

721:
old  <	add rsi, 41>
new  <>

722:
old  <>
new  < strtol_test$105:>

723:
old  < strtol_test$107:>
new  <	; Parameter 73 pointer text>

724:
old  <	; Parameter 81 pointer Â£temporary2114>
new  <	mov [rbp + 73], rbp>

725:
old  <	mov [rbp + 81], rsi>
new  <	add qword [rbp + 73], 28>

727:
old  < strtol_test$108:>
new  < strtol_test$106:>

728:
old  <	; Parameter 89 signedint base>
new  <	; Address Â£temporary2101 pointer>

729:
old  <	mov eax, [rbp + 24]>
new  <	mov rsi, rbp>

730:
old  <	mov [rbp + 89], eax>
new  <	add rsi, 41>

732:
old  < strtol_test$109:>
new  < strtol_test$107:>

733:
old  <	; Call 49 strtol 0>
new  <	; Parameter 81 pointer Â£temporary2101>

734:
old  <	mov qword [rbp + 49], strtol_test$110>
new  <	mov [rbp + 81], rsi>

735:
old  <	mov [rbp + 57], rbp>
new  <>

736:
old  <	add rbp, 49>
new  < strtol_test$108:>

737:
old  <	jmp strtol>
new  <	; Parameter 89 signedint base>

738:
old  <>
new  <	mov eax, [rbp + 24]>

739:
old  < strtol_test$110:>
new  <	mov [rbp + 89], eax>

740:
old  <	; PostCall 49>
new  <>

741:
old  <>
new  < strtol_test$109:>

742:
old  < strtol_test$111:>
new  <	; Call 49 strtol 0>

743:
old  <	; GetReturnValue Â£temporary2115>
new  <	mov qword [rbp + 49], strtol_test$110>

744:
old  <>
new  <	mov [rbp + 57], rbp>

745:
old  < strtol_test$112:>
new  <	add rbp, 49>

746:
old  <	; Assign value Â£temporary2115>
new  <	jmp strtol>

747:
old  <	mov [rbp + 49], rbx>
new  <>

748:
old  <>
new  < strtol_test$110:>

749:
old  < strtol_test$113:>
new  <	; PostCall 49>

750:
old  <	; PreCall 57 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

751:
old  <>
new  < strtol_test$111:>

752:
old  < strtol_test$114:>
new  <	; GetReturnValue Â£temporary2102>

753:
old  <	; Parameter 81 pointer "<%s> <%li> <%s> <%i>\n">
new  <>

754:
old  <	mov qword [rbp + 81], string_3C25s3E203C25li3E203C25s3E203C25i3E0A#>
new  < strtol_test$112:>

755:
old  <>
new  <	; Assign value Â£temporary2102>

756:
old  < strtol_test$115:>
new  <	mov [rbp + 49], rbx>

757:
old  <	; Parameter 89 pointer text>
new  <>

758:
old  <	mov [rbp + 89], rbp>
new  < strtol_test$113:>

759:
old  <	add qword [rbp + 89], 28>
new  <	; PreCall 57 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

761:
old  < strtol_test$116:>
new  < strtol_test$114:>

762:
old  <	; Parameter 97 signed long int value>
new  <	; Parameter 81 pointer "<%s> <%li> <%s> <%i>\n">

763:
old  <	mov rax, [rbp + 49]>
new  <	mov qword [rbp + 81], string_3C25s3E203C25li3E203C25s3E203C25i3E0A#>

764:
old  <	mov [rbp + 97], rax>
new  <>

765:
old  <>
new  < strtol_test$115:>

766:
old  < strtol_test$117:>
new  <	; Parameter 89 pointer text>

767:
old  <	; Parameter 105 pointer pointer>
new  <	mov [rbp + 89], rbp>

768:
old  <	mov rax, [rbp + 41]>
new  <	add qword [rbp + 89], 28>

769:
old  <	mov [rbp + 105], rax>
new  <>

770:
old  <>
new  < strtol_test$116:>

771:
old  < strtol_test$118:>
new  <	; Parameter 97 signed long int value>

772:
old  <	; Parameter 113 signedint base>
new  <	mov rax, [rbp + 49]>

773:
old  <	mov eax, [rbp + 24]>
new  <	mov [rbp + 97], rax>

774:
old  <	mov [rbp + 113], eax>
new  <>

775:
old  <>
new  < strtol_test$117:>

776:
old  < strtol_test$119:>
new  <	; Parameter 105 pointer pointer>

777:
old  <	; Call 57 printf 28>
new  <	mov rax, [rbp + 41]>

778:
old  <	mov qword [rbp + 57], strtol_test$120>
new  <	mov [rbp + 105], rax>

779:
old  <	mov [rbp + 65], rbp>
new  <>

780:
old  <	add rbp, 57>
new  < strtol_test$118:>

781:
old  <	mov rdi, rbp>
new  <	; Parameter 113 signedint base>

782:
old  <	add rdi, 28>
new  <	mov eax, [rbp + 24]>

783:
old  <	jmp printf>
new  <	mov [rbp + 113], eax>

785:
old  < strtol_test$120:>
new  < strtol_test$119:>

786:
old  <	; PostCall 57>
new  <	; Call 57 printf 28>

787:
old  <>
new  <	mov qword [rbp + 57], strtol_test$120>

788:
old  < strtol_test$121:>
new  <	mov [rbp + 65], rbp>

789:
old  <	; Assign base 0>
new  <	add rbp, 57>

790:
old  <	mov dword [rbp + 24], 0>
new  <	mov rdi, rbp>

791:
old  <>
new  <	add rdi, 28>

792:
old  < strtol_test$122:>
new  <	jmp printf>

793:
old  <	; Assign text[0] 32>
new  <>

794:
old  <	mov byte [rbp + 28], 32>
new  < strtol_test$120:>

795:
old  <>
new  <	; PostCall 57>

796:
old  < strtol_test$123:>
new  <>

797:
old  <	; Assign text[1] 32>
new  < strtol_test$121:>

798:
old  <	mov byte [rbp + 29], 32>
new  <	; Assign base 0>

799:
old  <>
new  <	mov dword [rbp + 24], 0>

800:
old  < strtol_test$124:>
new  <>

801:
old  <	; Assign text[2] 32>
new  < strtol_test$122:>

802:
old  <	mov byte [rbp + 30], 32>
new  <	; Assign text[0] 32>

803:
old  <>
new  <	mov byte [rbp + 28], 32>

804:
old  < strtol_test$125:>
new  <>

805:
old  <	; Assign text[3] 45>
new  < strtol_test$123:>

806:
old  <	mov byte [rbp + 31], 45>
new  <	; Assign text[1] 32>

807:
old  <>
new  <	mov byte [rbp + 29], 32>

808:
old  < strtol_test$126:>
new  <>

809:
old  <	; Assign text[4] 49>
new  < strtol_test$124:>

810:
old  <	mov byte [rbp + 32], 49>
new  <	; Assign text[2] 32>

811:
old  <>
new  <	mov byte [rbp + 30], 32>

812:
old  < strtol_test$127:>
new  <>

813:
old  <	; Assign text[5] 50>
new  < strtol_test$125:>

814:
old  <	mov byte [rbp + 33], 50>
new  <	; Assign text[3] 45>

815:
old  <>
new  <	mov byte [rbp + 31], 45>

816:
old  < strtol_test$128:>
new  <>

817:
old  <	; Assign text[6] 51>
new  < strtol_test$126:>

818:
old  <	mov byte [rbp + 34], 51>
new  <	; Assign text[4] 49>

819:
old  <>
new  <	mov byte [rbp + 32], 49>

820:
old  < strtol_test$129:>
new  <>

821:
old  <	; Assign text[7] 97>
new  < strtol_test$127:>

822:
old  <	mov byte [rbp + 35], 97>
new  <	; Assign text[5] 50>

823:
old  <>
new  <	mov byte [rbp + 33], 50>

824:
old  < strtol_test$130:>
new  <>

825:
old  <	; Assign text[8] 98>
new  < strtol_test$128:>

826:
old  <	mov byte [rbp + 36], 98>
new  <	; Assign text[6] 51>

827:
old  <>
new  <	mov byte [rbp + 34], 51>

828:
old  < strtol_test$131:>
new  <>

829:
old  <	; Assign text[9] 99>
new  < strtol_test$129:>

830:
old  <	mov byte [rbp + 37], 99>
new  <	; Assign text[7] 97>

831:
old  <>
new  <	mov byte [rbp + 35], 97>

832:
old  < strtol_test$132:>
new  <>

833:
old  <	; Assign text[10] 0>
new  < strtol_test$130:>

834:
old  <	mov byte [rbp + 38], 0>
new  <	; Assign text[8] 98>

835:
old  <>
new  <	mov byte [rbp + 36], 98>

836:
old  < strtol_test$133:>
new  <>

837:
old  <	; PreCall 47 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < strtol_test$131:>

838:
old  <>
new  <	; Assign text[9] 99>

839:
old  < strtol_test$134:>
new  <	mov byte [rbp + 37], 99>

840:
old  <	; Parameter 71 pointer text>
new  <>

841:
old  <	mov [rbp + 71], rbp>
new  < strtol_test$132:>

842:
old  <	add qword [rbp + 71], 28>
new  <	; Assign text[10] 0>

843:
old  <>
new  <	mov byte [rbp + 38], 0>

844:
old  < strtol_test$135:>
new  <>

845:
old  <	; Address Â£temporary2128 pointer>
new  < strtol_test$133:>

846:
old  <	mov rsi, rbp>
new  <	; PreCall 47 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

847:
old  <	add rsi, 39>
new  <>

848:
old  <>
new  < strtol_test$134:>

849:
old  < strtol_test$136:>
new  <	; Parameter 71 pointer text>

850:
old  <	; Parameter 79 pointer Â£temporary2128>
new  <	mov [rbp + 71], rbp>

851:
old  <	mov [rbp + 79], rsi>
new  <	add qword [rbp + 71], 28>

853:
old  < strtol_test$137:>
new  < strtol_test$135:>

854:
old  <	; Parameter 87 signedint base>
new  <	; Address Â£temporary2115 pointer>

855:
old  <	mov eax, [rbp + 24]>
new  <	mov rsi, rbp>

856:
old  <	mov [rbp + 87], eax>
new  <	add rsi, 39>

858:
old  < strtol_test$138:>
new  < strtol_test$136:>

859:
old  <	; Call 47 strtol 0>
new  <	; Parameter 79 pointer Â£temporary2115>

860:
old  <	mov qword [rbp + 47], strtol_test$139>
new  <	mov [rbp + 79], rsi>

861:
old  <	mov [rbp + 55], rbp>
new  <>

862:
old  <	add rbp, 47>
new  < strtol_test$137:>

863:
old  <	jmp strtol>
new  <	; Parameter 87 signedint base>

864:
old  <>
new  <	mov eax, [rbp + 24]>

865:
old  < strtol_test$139:>
new  <	mov [rbp + 87], eax>

866:
old  <	; PostCall 47>
new  <>

867:
old  <>
new  < strtol_test$138:>

868:
old  < strtol_test$140:>
new  <	; Call 47 strtol 0>

869:
old  <	; GetReturnValue Â£temporary2129>
new  <	mov qword [rbp + 47], strtol_test$139>

870:
old  <>
new  <	mov [rbp + 55], rbp>

871:
old  < strtol_test$141:>
new  <	add rbp, 47>

872:
old  <	; Assign value Â£temporary2129>
new  <	jmp strtol>

873:
old  <	mov [rbp + 47], rbx>
new  <>

874:
old  <>
new  < strtol_test$139:>

875:
old  < strtol_test$142:>
new  <	; PostCall 47>

876:
old  <	; PreCall 55 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

877:
old  <>
new  < strtol_test$140:>

878:
old  < strtol_test$143:>
new  <	; GetReturnValue Â£temporary2116>

879:
old  <	; Parameter 79 pointer "<%s> <%li> <%s> <%i>\n">
new  <>

880:
old  <	mov qword [rbp + 79], string_3C25s3E203C25li3E203C25s3E203C25i3E0A#>
new  < strtol_test$141:>

881:
old  <>
new  <	; Assign value Â£temporary2116>

882:
old  < strtol_test$144:>
new  <	mov [rbp + 47], rbx>

883:
old  <	; Parameter 87 pointer text>
new  <>

884:
old  <	mov [rbp + 87], rbp>
new  < strtol_test$142:>

885:
old  <	add qword [rbp + 87], 28>
new  <	; PreCall 55 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

887:
old  < strtol_test$145:>
new  < strtol_test$143:>

888:
old  <	; Parameter 95 signed long int value>
new  <	; Parameter 79 pointer "<%s> <%li> <%s> <%i>\n">

889:
old  <	mov rax, [rbp + 47]>
new  <	mov qword [rbp + 79], string_3C25s3E203C25li3E203C25s3E203C25i3E0A#>

890:
old  <	mov [rbp + 95], rax>
new  <>

891:
old  <>
new  < strtol_test$144:>

892:
old  < strtol_test$146:>
new  <	; Parameter 87 pointer text>

893:
old  <	; Parameter 103 pointer pointer>
new  <	mov [rbp + 87], rbp>

894:
old  <	mov rax, [rbp + 39]>
new  <	add qword [rbp + 87], 28>

895:
old  <	mov [rbp + 103], rax>
new  <>

896:
old  <>
new  < strtol_test$145:>

897:
old  < strtol_test$147:>
new  <	; Parameter 95 signed long int value>

898:
old  <	; Parameter 111 signedint base>
new  <	mov rax, [rbp + 47]>

899:
old  <	mov eax, [rbp + 24]>
new  <	mov [rbp + 95], rax>

900:
old  <	mov [rbp + 111], eax>
new  <>

901:
old  <>
new  < strtol_test$146:>

902:
old  < strtol_test$148:>
new  <	; Parameter 103 pointer pointer>

903:
old  <	; Call 55 printf 28>
new  <	mov rax, [rbp + 39]>

904:
old  <	mov qword [rbp + 55], strtol_test$149>
new  <	mov [rbp + 103], rax>

905:
old  <	mov [rbp + 63], rbp>
new  <>

906:
old  <	add rbp, 55>
new  < strtol_test$147:>

907:
old  <	mov rdi, rbp>
new  <	; Parameter 111 signedint base>

908:
old  <	add rdi, 28>
new  <	mov eax, [rbp + 24]>

909:
old  <	jmp printf>
new  <	mov [rbp + 111], eax>

911:
old  < strtol_test$149:>
new  < strtol_test$148:>

912:
old  <	; PostCall 55>
new  <	; Call 55 printf 28>

913:
old  <>
new  <	mov qword [rbp + 55], strtol_test$149>

914:
old  < strtol_test$150:>
new  <	mov [rbp + 63], rbp>

915:
old  <	; Assign base 0>
new  <	add rbp, 55>

916:
old  <	mov dword [rbp + 24], 0>
new  <	mov rdi, rbp>

917:
old  <>
new  <	add rdi, 28>

918:
old  < strtol_test$151:>
new  <	jmp printf>

919:
old  <	; Assign text[0] 32>
new  <>

920:
old  <	mov byte [rbp + 28], 32>
new  < strtol_test$149:>

921:
old  <>
new  <	; PostCall 55>

922:
old  < strtol_test$152:>
new  <>

923:
old  <	; Assign text[1] 32>
new  < strtol_test$150:>

924:
old  <	mov byte [rbp + 29], 32>
new  <	; Assign base 0>

925:
old  <>
new  <	mov dword [rbp + 24], 0>

926:
old  < strtol_test$153:>
new  <>

927:
old  <	; Assign text[2] 32>
new  < strtol_test$151:>

928:
old  <	mov byte [rbp + 30], 32>
new  <	; Assign text[0] 32>

929:
old  <>
new  <	mov byte [rbp + 28], 32>

930:
old  < strtol_test$154:>
new  <>

931:
old  <	; Assign text[3] 45>
new  < strtol_test$152:>

932:
old  <	mov byte [rbp + 31], 45>
new  <	; Assign text[1] 32>

933:
old  <>
new  <	mov byte [rbp + 29], 32>

934:
old  < strtol_test$155:>
new  <>

935:
old  <	; Assign text[4] 48>
new  < strtol_test$153:>

936:
old  <	mov byte [rbp + 32], 48>
new  <	; Assign text[2] 32>

937:
old  <>
new  <	mov byte [rbp + 30], 32>

938:
old  < strtol_test$156:>
new  <>

939:
old  <	; Assign text[5] 49>
new  < strtol_test$154:>

940:
old  <	mov byte [rbp + 33], 49>
new  <	; Assign text[3] 45>

941:
old  <>
new  <	mov byte [rbp + 31], 45>

942:
old  < strtol_test$157:>
new  <>

943:
old  <	; Assign text[6] 50>
new  < strtol_test$155:>

944:
old  <	mov byte [rbp + 34], 50>
new  <	; Assign text[4] 48>

945:
old  <>
new  <	mov byte [rbp + 32], 48>

946:
old  < strtol_test$158:>
new  <>

947:
old  <	; Assign text[7] 51>
new  < strtol_test$156:>

948:
old  <	mov byte [rbp + 35], 51>
new  <	; Assign text[5] 49>

949:
old  <>
new  <	mov byte [rbp + 33], 49>

950:
old  < strtol_test$159:>
new  <>

951:
old  <	; Assign text[8] 97>
new  < strtol_test$157:>

952:
old  <	mov byte [rbp + 36], 97>
new  <	; Assign text[6] 50>

953:
old  <>
new  <	mov byte [rbp + 34], 50>

954:
old  < strtol_test$160:>
new  <>

955:
old  <	; Assign text[9] 98>
new  < strtol_test$158:>

956:
old  <	mov byte [rbp + 37], 98>
new  <	; Assign text[7] 51>

957:
old  <>
new  <	mov byte [rbp + 35], 51>

958:
old  < strtol_test$161:>
new  <>

959:
old  <	; Assign text[10] 99>
new  < strtol_test$159:>

960:
old  <	mov byte [rbp + 38], 99>
new  <	; Assign text[8] 97>

961:
old  <>
new  <	mov byte [rbp + 36], 97>

962:
old  < strtol_test$162:>
new  <>

963:
old  <	; Assign text[11] 0>
new  < strtol_test$160:>

964:
old  <	mov byte [rbp + 39], 0>
new  <	; Assign text[9] 98>

965:
old  <>
new  <	mov byte [rbp + 37], 98>

966:
old  < strtol_test$163:>
new  <>

967:
old  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < strtol_test$161:>

968:
old  <>
new  <	; Assign text[10] 99>

969:
old  < strtol_test$164:>
new  <	mov byte [rbp + 38], 99>

970:
old  <	; Parameter 72 pointer text>
new  <>

971:
old  <	mov [rbp + 72], rbp>
new  < strtol_test$162:>

972:
old  <	add qword [rbp + 72], 28>
new  <	; Assign text[11] 0>

973:
old  <>
new  <	mov byte [rbp + 39], 0>

974:
old  < strtol_test$165:>
new  <>

975:
old  <	; Address Â£temporary2143 pointer>
new  < strtol_test$163:>

976:
old  <	mov rsi, rbp>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

977:
old  <	add rsi, 40>
new  <>

978:
old  <>
new  < strtol_test$164:>

979:
old  < strtol_test$166:>
new  <	; Parameter 72 pointer text>

980:
old  <	; Parameter 80 pointer Â£temporary2143>
new  <	mov [rbp + 72], rbp>

981:
old  <	mov [rbp + 80], rsi>
new  <	add qword [rbp + 72], 28>

983:
old  < strtol_test$167:>
new  < strtol_test$165:>

984:
old  <	; Parameter 88 signedint base>
new  <	; Address Â£temporary2130 pointer>

985:
old  <	mov eax, [rbp + 24]>
new  <	mov rsi, rbp>

986:
old  <	mov [rbp + 88], eax>
new  <	add rsi, 40>

988:
old  < strtol_test$168:>
new  < strtol_test$166:>

989:
old  <	; Call 48 strtol 0>
new  <	; Parameter 80 pointer Â£temporary2130>

990:
old  <	mov qword [rbp + 48], strtol_test$169>
new  <	mov [rbp + 80], rsi>

991:
old  <	mov [rbp + 56], rbp>
new  <>

992:
old  <	add rbp, 48>
new  < strtol_test$167:>

993:
old  <	jmp strtol>
new  <	; Parameter 88 signedint base>

994:
old  <>
new  <	mov eax, [rbp + 24]>

995:
old  < strtol_test$169:>
new  <	mov [rbp + 88], eax>

996:
old  <	; PostCall 48>
new  <>

997:
old  <>
new  < strtol_test$168:>

998:
old  < strtol_test$170:>
new  <	; Call 48 strtol 0>

999:
old  <	; GetReturnValue Â£temporary2144>
new  <	mov qword [rbp + 48], strtol_test$169>

1000:
old  <>
new  <	mov [rbp + 56], rbp>

1001:
old  < strtol_test$171:>
new  <	add rbp, 48>

1002:
old  <	; Assign value Â£temporary2144>
new  <	jmp strtol>

1003:
old  <	mov [rbp + 48], rbx>
new  <>

1004:
old  <>
new  < strtol_test$169:>

1005:
old  < strtol_test$172:>
new  <	; PostCall 48>

1006:
old  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1007:
old  <>
new  < strtol_test$170:>

1008:
old  < strtol_test$173:>
new  <	; GetReturnValue Â£temporary2131>

1009:
old  <	; Parameter 80 pointer "<%s> <%li> <%s> <%i>\n">
new  <>

1010:
old  <	mov qword [rbp + 80], string_3C25s3E203C25li3E203C25s3E203C25i3E0A#>
new  < strtol_test$171:>

1011:
old  <>
new  <	; Assign value Â£temporary2131>

1012:
old  < strtol_test$174:>
new  <	mov [rbp + 48], rbx>

1013:
old  <	; Parameter 88 pointer text>
new  <>

1014:
old  <	mov [rbp + 88], rbp>
new  < strtol_test$172:>

1015:
old  <	add qword [rbp + 88], 28>
new  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1017:
old  < strtol_test$175:>
new  < strtol_test$173:>

1018:
old  <	; Parameter 96 signed long int value>
new  <	; Parameter 80 pointer "<%s> <%li> <%s> <%i>\n">

1019:
old  <	mov rax, [rbp + 48]>
new  <	mov qword [rbp + 80], string_3C25s3E203C25li3E203C25s3E203C25i3E0A#>

1020:
old  <	mov [rbp + 96], rax>
new  <>

1021:
old  <>
new  < strtol_test$174:>

1022:
old  < strtol_test$176:>
new  <	; Parameter 88 pointer text>

1023:
old  <	; Parameter 104 pointer pointer>
new  <	mov [rbp + 88], rbp>

1024:
old  <	mov rax, [rbp + 40]>
new  <	add qword [rbp + 88], 28>

1025:
old  <	mov [rbp + 104], rax>
new  <>

1026:
old  <>
new  < strtol_test$175:>

1027:
old  < strtol_test$177:>
new  <	; Parameter 96 signed long int value>

1028:
old  <	; Parameter 112 signedint base>
new  <	mov rax, [rbp + 48]>

1029:
old  <	mov eax, [rbp + 24]>
new  <	mov [rbp + 96], rax>

1030:
old  <	mov [rbp + 112], eax>
new  <>

1031:
old  <>
new  < strtol_test$176:>

1032:
old  < strtol_test$178:>
new  <	; Parameter 104 pointer pointer>

1033:
old  <	; Call 56 printf 28>
new  <	mov rax, [rbp + 40]>

1034:
old  <	mov qword [rbp + 56], strtol_test$179>
new  <	mov [rbp + 104], rax>

1035:
old  <	mov [rbp + 64], rbp>
new  <>

1036:
old  <	add rbp, 56>
new  < strtol_test$177:>

1037:
old  <	mov rdi, rbp>
new  <	; Parameter 112 signedint base>

1038:
old  <	add rdi, 28>
new  <	mov eax, [rbp + 24]>

1039:
old  <	jmp printf>
new  <	mov [rbp + 112], eax>

1041:
old  < strtol_test$179:>
new  < strtol_test$178:>

1042:
old  <	; PostCall 56>
new  <	; Call 56 printf 28>

1043:
old  <>
new  <	mov qword [rbp + 56], strtol_test$179>

1044:
old  < strtol_test$180:>
new  <	mov [rbp + 64], rbp>

1045:
old  <	; Assign base 0>
new  <	add rbp, 56>

1046:
old  <	mov dword [rbp + 24], 0>
new  <	mov rdi, rbp>

1047:
old  <>
new  <	add rdi, 28>

1048:
old  < strtol_test$181:>
new  <	jmp printf>

1049:
old  <	; Assign text[0] 32>
new  <>

1050:
old  <	mov byte [rbp + 28], 32>
new  < strtol_test$179:>

1051:
old  <>
new  <	; PostCall 56>

1052:
old  < strtol_test$182:>
new  <>

1053:
old  <	; Assign text[1] 32>
new  < strtol_test$180:>

1054:
old  <	mov byte [rbp + 29], 32>
new  <	; Assign base 0>

1055:
old  <>
new  <	mov dword [rbp + 24], 0>

1056:
old  < strtol_test$183:>
new  <>

1057:
old  <	; Assign text[2] 32>
new  < strtol_test$181:>

1058:
old  <	mov byte [rbp + 30], 32>
new  <	; Assign text[0] 32>

1059:
old  <>
new  <	mov byte [rbp + 28], 32>

1060:
old  < strtol_test$184:>
new  <>

1061:
old  <	; Assign text[3] 45>
new  < strtol_test$182:>

1062:
old  <	mov byte [rbp + 31], 45>
new  <	; Assign text[1] 32>

1063:
old  <>
new  <	mov byte [rbp + 29], 32>

1064:
old  < strtol_test$185:>
new  <>

1065:
old  <	; Assign text[4] 48>
new  < strtol_test$183:>

1066:
old  <	mov byte [rbp + 32], 48>
new  <	; Assign text[2] 32>

1067:
old  <>
new  <	mov byte [rbp + 30], 32>

1068:
old  < strtol_test$186:>
new  <>

1069:
old  <	; Assign text[5] 120>
new  < strtol_test$184:>

1070:
old  <	mov byte [rbp + 33], 120>
new  <	; Assign text[3] 45>

1071:
old  <>
new  <	mov byte [rbp + 31], 45>

1072:
old  < strtol_test$187:>
new  <>

1073:
old  <	; Assign text[6] 49>
new  < strtol_test$185:>

1074:
old  <	mov byte [rbp + 34], 49>
new  <	; Assign text[4] 48>

1075:
old  <>
new  <	mov byte [rbp + 32], 48>

1076:
old  < strtol_test$188:>
new  <>

1077:
old  <	; Assign text[7] 50>
new  < strtol_test$186:>

1078:
old  <	mov byte [rbp + 35], 50>
new  <	; Assign text[5] 120>

1079:
old  <>
new  <	mov byte [rbp + 33], 120>

1080:
old  < strtol_test$189:>
new  <>

1081:
old  <	; Assign text[8] 51>
new  < strtol_test$187:>

1082:
old  <	mov byte [rbp + 36], 51>
new  <	; Assign text[6] 49>

1083:
old  <>
new  <	mov byte [rbp + 34], 49>

1084:
old  < strtol_test$190:>
new  <>

1085:
old  <	; Assign text[9] 65>
new  < strtol_test$188:>

1086:
old  <	mov byte [rbp + 37], 65>
new  <	; Assign text[7] 50>

1087:
old  <>
new  <	mov byte [rbp + 35], 50>

1088:
old  < strtol_test$191:>
new  <>

1089:
old  <	; Assign text[10] 66>
new  < strtol_test$189:>

1090:
old  <	mov byte [rbp + 38], 66>
new  <	; Assign text[8] 51>

1091:
old  <>
new  <	mov byte [rbp + 36], 51>

1092:
old  < strtol_test$192:>
new  <>

1093:
old  <	; Assign text[11] 67>
new  < strtol_test$190:>

1094:
old  <	mov byte [rbp + 39], 67>
new  <	; Assign text[9] 65>

1095:
old  <>
new  <	mov byte [rbp + 37], 65>

1096:
old  < strtol_test$193:>
new  <>

1097:
old  <	; Assign text[12] 0>
new  < strtol_test$191:>

1098:
old  <	mov byte [rbp + 40], 0>
new  <	; Assign text[10] 66>

1099:
old  <>
new  <	mov byte [rbp + 38], 66>

1100:
old  < strtol_test$194:>
new  <>

1101:
old  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < strtol_test$192:>

1102:
old  <>
new  <	; Assign text[11] 67>

1103:
old  < strtol_test$195:>
new  <	mov byte [rbp + 39], 67>

1104:
old  <	; Parameter 73 pointer text>
new  <>

1105:
old  <	mov [rbp + 73], rbp>
new  < strtol_test$193:>

1106:
old  <	add qword [rbp + 73], 28>
new  <	; Assign text[12] 0>

1107:
old  <>
new  <	mov byte [rbp + 40], 0>

1108:
old  < strtol_test$196:>
new  <>

1109:
old  <	; Address Â£temporary2159 pointer>
new  < strtol_test$194:>

1110:
old  <	mov rsi, rbp>
new  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1111:
old  <	add rsi, 41>
new  <>

1112:
old  <>
new  < strtol_test$195:>

1113:
old  < strtol_test$197:>
new  <	; Parameter 73 pointer text>

1114:
old  <	; Parameter 81 pointer Â£temporary2159>
new  <	mov [rbp + 73], rbp>

1115:
old  <	mov [rbp + 81], rsi>
new  <	add qword [rbp + 73], 28>

1117:
old  < strtol_test$198:>
new  < strtol_test$196:>

1118:
old  <	; Parameter 89 signedint base>
new  <	; Address Â£temporary2146 pointer>

1119:
old  <	mov eax, [rbp + 24]>
new  <	mov rsi, rbp>

1120:
old  <	mov [rbp + 89], eax>
new  <	add rsi, 41>

1122:
old  < strtol_test$199:>
new  < strtol_test$197:>

1123:
old  <	; Call 49 strtol 0>
new  <	; Parameter 81 pointer Â£temporary2146>

1124:
old  <	mov qword [rbp + 49], strtol_test$200>
new  <	mov [rbp + 81], rsi>

1125:
old  <	mov [rbp + 57], rbp>
new  <>

1126:
old  <	add rbp, 49>
new  < strtol_test$198:>

1127:
old  <	jmp strtol>
new  <	; Parameter 89 signedint base>

1128:
old  <>
new  <	mov eax, [rbp + 24]>

1129:
old  < strtol_test$200:>
new  <	mov [rbp + 89], eax>

1130:
old  <	; PostCall 49>
new  <>

1131:
old  <>
new  < strtol_test$199:>

1132:
old  < strtol_test$201:>
new  <	; Call 49 strtol 0>

1133:
old  <	; GetReturnValue Â£temporary2160>
new  <	mov qword [rbp + 49], strtol_test$200>

1134:
old  <>
new  <	mov [rbp + 57], rbp>

1135:
old  < strtol_test$202:>
new  <	add rbp, 49>

1136:
old  <	; Assign value Â£temporary2160>
new  <	jmp strtol>

1137:
old  <	mov [rbp + 49], rbx>
new  <>

1138:
old  <>
new  < strtol_test$200:>

1139:
old  < strtol_test$203:>
new  <	; PostCall 49>

1140:
old  <	; PreCall 57 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1141:
old  <>
new  < strtol_test$201:>

1142:
old  < strtol_test$204:>
new  <	; GetReturnValue Â£temporary2147>

1143:
old  <	; Parameter 81 pointer "<%s> <%li> <%s> <%i>\n">
new  <>

1144:
old  <	mov qword [rbp + 81], string_3C25s3E203C25li3E203C25s3E203C25i3E0A#>
new  < strtol_test$202:>

1145:
old  <>
new  <	; Assign value Â£temporary2147>

1146:
old  < strtol_test$205:>
new  <	mov [rbp + 49], rbx>

1147:
old  <	; Parameter 89 pointer text>
new  <>

1148:
old  <	mov [rbp + 89], rbp>
new  < strtol_test$203:>

1149:
old  <	add qword [rbp + 89], 28>
new  <	; PreCall 57 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1151:
old  < strtol_test$206:>
new  < strtol_test$204:>

1152:
old  <	; Parameter 97 signed long int value>
new  <	; Parameter 81 pointer "<%s> <%li> <%s> <%i>\n">

1153:
old  <	mov rax, [rbp + 49]>
new  <	mov qword [rbp + 81], string_3C25s3E203C25li3E203C25s3E203C25i3E0A#>

1154:
old  <	mov [rbp + 97], rax>
new  <>

1155:
old  <>
new  < strtol_test$205:>

1156:
old  < strtol_test$207:>
new  <	; Parameter 89 pointer text>

1157:
old  <	; Parameter 105 pointer pointer>
new  <	mov [rbp + 89], rbp>

1158:
old  <	mov rax, [rbp + 41]>
new  <	add qword [rbp + 89], 28>

1159:
old  <	mov [rbp + 105], rax>
new  <>

1160:
old  <>
new  < strtol_test$206:>

1161:
old  < strtol_test$208:>
new  <	; Parameter 97 signed long int value>

1162:
old  <	; Parameter 113 signedint base>
new  <	mov rax, [rbp + 49]>

1163:
old  <	mov eax, [rbp + 24]>
new  <	mov [rbp + 97], rax>

1164:
old  <	mov [rbp + 113], eax>
new  <>

1165:
old  <>
new  < strtol_test$207:>

1166:
old  < strtol_test$209:>
new  <	; Parameter 105 pointer pointer>

1167:
old  <	; Call 57 printf 28>
new  <	mov rax, [rbp + 41]>

1168:
old  <	mov qword [rbp + 57], strtol_test$210>
new  <	mov [rbp + 105], rax>

1169:
old  <	mov [rbp + 65], rbp>
new  <>

1170:
old  <	add rbp, 57>
new  < strtol_test$208:>

1171:
old  <	mov rdi, rbp>
new  <	; Parameter 113 signedint base>

1172:
old  <	add rdi, 28>
new  <	mov eax, [rbp + 24]>

1173:
old  <	jmp printf>
new  <	mov [rbp + 113], eax>

1175:
old  < strtol_test$210:>
new  < strtol_test$209:>

1176:
old  <	; PostCall 57>
new  <	; Call 57 printf 28>

1177:
old  <>
new  <	mov qword [rbp + 57], strtol_test$210>

1178:
old  < strtol_test$211:>
new  <	mov [rbp + 65], rbp>

1179:
old  <	; Assign base 0>
new  <	add rbp, 57>

1180:
old  <	mov dword [rbp + 24], 0>
new  <	mov rdi, rbp>

1181:
old  <>
new  <	add rdi, 28>

1182:
old  < strtol_test$212:>
new  <	jmp printf>

1183:
old  <	; Assign text[0] 32>
new  <>

1184:
old  <	mov byte [rbp + 28], 32>
new  < strtol_test$210:>

1185:
old  <>
new  <	; PostCall 57>

1186:
old  < strtol_test$213:>
new  <>

1187:
old  <	; Assign text[1] 32>
new  < strtol_test$211:>

1188:
old  <	mov byte [rbp + 29], 32>
new  <	; Assign base 0>

1189:
old  <>
new  <	mov dword [rbp + 24], 0>

1190:
old  < strtol_test$214:>
new  <>

1191:
old  <	; Assign text[2] 32>
new  < strtol_test$212:>

1192:
old  <	mov byte [rbp + 30], 32>
new  <	; Assign text[0] 32>

1193:
old  <>
new  <	mov byte [rbp + 28], 32>

1194:
old  < strtol_test$215:>
new  <>

1195:
old  <	; Assign text[3] 45>
new  < strtol_test$213:>

1196:
old  <	mov byte [rbp + 31], 45>
new  <	; Assign text[1] 32>

1197:
old  <>
new  <	mov byte [rbp + 29], 32>

1198:
old  < strtol_test$216:>
new  <>

1199:
old  <	; Assign text[4] 48>
new  < strtol_test$214:>

1200:
old  <	mov byte [rbp + 32], 48>
new  <	; Assign text[2] 32>

1201:
old  <>
new  <	mov byte [rbp + 30], 32>

1202:
old  < strtol_test$217:>
new  <>

1203:
old  <	; Assign text[5] 88>
new  < strtol_test$215:>

1204:
old  <	mov byte [rbp + 33], 88>
new  <	; Assign text[3] 45>

1205:
old  <>
new  <	mov byte [rbp + 31], 45>

1206:
old  < strtol_test$218:>
new  <>

1207:
old  <	; Assign text[6] 49>
new  < strtol_test$216:>

1208:
old  <	mov byte [rbp + 34], 49>
new  <	; Assign text[4] 48>

1209:
old  <>
new  <	mov byte [rbp + 32], 48>

1210:
old  < strtol_test$219:>
new  <>

1211:
old  <	; Assign text[7] 50>
new  < strtol_test$217:>

1212:
old  <	mov byte [rbp + 35], 50>
new  <	; Assign text[5] 88>

1213:
old  <>
new  <	mov byte [rbp + 33], 88>

1214:
old  < strtol_test$220:>
new  <>

1215:
old  <	; Assign text[8] 51>
new  < strtol_test$218:>

1216:
old  <	mov byte [rbp + 36], 51>
new  <	; Assign text[6] 49>

1217:
old  <>
new  <	mov byte [rbp + 34], 49>

1218:
old  < strtol_test$221:>
new  <>

1219:
old  <	; Assign text[9] 97>
new  < strtol_test$219:>

1220:
old  <	mov byte [rbp + 37], 97>
new  <	; Assign text[7] 50>

1221:
old  <>
new  <	mov byte [rbp + 35], 50>

1222:
old  < strtol_test$222:>
new  <>

1223:
old  <	; Assign text[10] 98>
new  < strtol_test$220:>

1224:
old  <	mov byte [rbp + 38], 98>
new  <	; Assign text[8] 51>

1225:
old  <>
new  <	mov byte [rbp + 36], 51>

1226:
old  < strtol_test$223:>
new  <>

1227:
old  <	; Assign text[11] 99>
new  < strtol_test$221:>

1228:
old  <	mov byte [rbp + 39], 99>
new  <	; Assign text[9] 97>

1229:
old  <>
new  <	mov byte [rbp + 37], 97>

1230:
old  < strtol_test$224:>
new  <>

1231:
old  <	; Assign text[12] 0>
new  < strtol_test$222:>

1232:
old  <	mov byte [rbp + 40], 0>
new  <	; Assign text[10] 98>

1233:
old  <>
new  <	mov byte [rbp + 38], 98>

1234:
old  < strtol_test$225:>
new  <>

1235:
old  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < strtol_test$223:>

1236:
old  <>
new  <	; Assign text[11] 99>

1237:
old  < strtol_test$226:>
new  <	mov byte [rbp + 39], 99>

1238:
old  <	; Parameter 73 pointer text>
new  <>

1239:
old  <	mov [rbp + 73], rbp>
new  < strtol_test$224:>

1240:
old  <	add qword [rbp + 73], 28>
new  <	; Assign text[12] 0>

1241:
old  <>
new  <	mov byte [rbp + 40], 0>

1242:
old  < strtol_test$227:>
new  <>

1243:
old  <	; Address Â£temporary2175 pointer>
new  < strtol_test$225:>

1244:
old  <	mov rsi, rbp>
new  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1245:
old  <	add rsi, 41>
new  <>

1246:
old  <>
new  < strtol_test$226:>

1247:
old  < strtol_test$228:>
new  <	; Parameter 73 pointer text>

1248:
old  <	; Parameter 81 pointer Â£temporary2175>
new  <	mov [rbp + 73], rbp>

1249:
old  <	mov [rbp + 81], rsi>
new  <	add qword [rbp + 73], 28>

1251:
old  < strtol_test$229:>
new  < strtol_test$227:>

1252:
old  <	; Parameter 89 signedint base>
new  <	; Address Â£temporary2162 pointer>

1253:
old  <	mov eax, [rbp + 24]>
new  <	mov rsi, rbp>

1254:
old  <	mov [rbp + 89], eax>
new  <	add rsi, 41>

1256:
old  < strtol_test$230:>
new  < strtol_test$228:>

1257:
old  <	; Call 49 strtol 0>
new  <	; Parameter 81 pointer Â£temporary2162>

1258:
old  <	mov qword [rbp + 49], strtol_test$231>
new  <	mov [rbp + 81], rsi>

1259:
old  <	mov [rbp + 57], rbp>
new  <>

1260:
old  <	add rbp, 49>
new  < strtol_test$229:>

1261:
old  <	jmp strtol>
new  <	; Parameter 89 signedint base>

1262:
old  <>
new  <	mov eax, [rbp + 24]>

1263:
old  < strtol_test$231:>
new  <	mov [rbp + 89], eax>

1264:
old  <	; PostCall 49>
new  <>

1265:
old  <>
new  < strtol_test$230:>

1266:
old  < strtol_test$232:>
new  <	; Call 49 strtol 0>

1267:
old  <	; GetReturnValue Â£temporary2176>
new  <	mov qword [rbp + 49], strtol_test$231>

1268:
old  <>
new  <	mov [rbp + 57], rbp>

1269:
old  < strtol_test$233:>
new  <	add rbp, 49>

1270:
old  <	; Assign value Â£temporary2176>
new  <	jmp strtol>

1271:
old  <	mov [rbp + 49], rbx>
new  <>

1272:
old  <>
new  < strtol_test$231:>

1273:
old  < strtol_test$234:>
new  <	; PostCall 49>

1274:
old  <	; PreCall 57 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1275:
old  <>
new  < strtol_test$232:>

1276:
old  < strtol_test$235:>
new  <	; GetReturnValue Â£temporary2163>

1277:
old  <	; Parameter 81 pointer "<%s> <%li> <%s> <%i>\n">
new  <>

1278:
old  <	mov qword [rbp + 81], string_3C25s3E203C25li3E203C25s3E203C25i3E0A#>
new  < strtol_test$233:>

1279:
old  <>
new  <	; Assign value Â£temporary2163>

1280:
old  < strtol_test$236:>
new  <	mov [rbp + 49], rbx>

1281:
old  <	; Parameter 89 pointer text>
new  <>

1282:
old  <	mov [rbp + 89], rbp>
new  < strtol_test$234:>

1283:
old  <	add qword [rbp + 89], 28>
new  <	; PreCall 57 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1285:
old  < strtol_test$237:>
new  < strtol_test$235:>

1286:
old  <	; Parameter 97 signed long int value>
new  <	; Parameter 81 pointer "<%s> <%li> <%s> <%i>\n">

1287:
old  <	mov rax, [rbp + 49]>
new  <	mov qword [rbp + 81], string_3C25s3E203C25li3E203C25s3E203C25i3E0A#>

1288:
old  <	mov [rbp + 97], rax>
new  <>

1289:
old  <>
new  < strtol_test$236:>

1290:
old  < strtol_test$238:>
new  <	; Parameter 89 pointer text>

1291:
old  <	; Parameter 105 pointer pointer>
new  <	mov [rbp + 89], rbp>

1292:
old  <	mov rax, [rbp + 41]>
new  <	add qword [rbp + 89], 28>

1293:
old  <	mov [rbp + 105], rax>
new  <>

1294:
old  <>
new  < strtol_test$237:>

1295:
old  < strtol_test$239:>
new  <	; Parameter 97 signed long int value>

1296:
old  <	; Parameter 113 signedint base>
new  <	mov rax, [rbp + 49]>

1297:
old  <	mov eax, [rbp + 24]>
new  <	mov [rbp + 97], rax>

1298:
old  <	mov [rbp + 113], eax>
new  <>

1299:
old  <>
new  < strtol_test$238:>

1300:
old  < strtol_test$240:>
new  <	; Parameter 105 pointer pointer>

1301:
old  <	; Call 57 printf 28>
new  <	mov rax, [rbp + 41]>

1302:
old  <	mov qword [rbp + 57], strtol_test$241>
new  <	mov [rbp + 105], rax>

1303:
old  <	mov [rbp + 65], rbp>
new  <>

1304:
old  <	add rbp, 57>
new  < strtol_test$239:>

1305:
old  <	mov rdi, rbp>
new  <	; Parameter 113 signedint base>

1306:
old  <	add rdi, 28>
new  <	mov eax, [rbp + 24]>

1307:
old  <	jmp printf>
new  <	mov [rbp + 113], eax>

1309:
old  < strtol_test$241:>
new  < strtol_test$240:>

1310:
old  <	; PostCall 57>
new  <	; Call 57 printf 28>

1311:
old  <>
new  <	mov qword [rbp + 57], strtol_test$241>

1312:
old  < strtol_test$242:>
new  <	mov [rbp + 65], rbp>

1313:
old  <	; Assign base 9>
new  <	add rbp, 57>

1314:
old  <	mov dword [rbp + 24], 9>
new  <	mov rdi, rbp>

1315:
old  <>
new  <	add rdi, 28>

1316:
old  < strtol_test$243:>
new  <	jmp printf>

1317:
old  <	; Assign text[0] 32>
new  <>

1318:
old  <	mov byte [rbp + 28], 32>
new  < strtol_test$241:>

1319:
old  <>
new  <	; PostCall 57>

1320:
old  < strtol_test$244:>
new  <>

1321:
old  <	; Assign text[1] 32>
new  < strtol_test$242:>

1322:
old  <	mov byte [rbp + 29], 32>
new  <	; Assign base 9>

1323:
old  <>
new  <	mov dword [rbp + 24], 9>

1324:
old  < strtol_test$245:>
new  <>

1325:
old  <	; Assign text[2] 32>
new  < strtol_test$243:>

1326:
old  <	mov byte [rbp + 30], 32>
new  <	; Assign text[0] 32>

1327:
old  <>
new  <	mov byte [rbp + 28], 32>

1328:
old  < strtol_test$246:>
new  <>

1329:
old  <	; Assign text[3] 43>
new  < strtol_test$244:>

1330:
old  <	mov byte [rbp + 31], 43>
new  <	; Assign text[1] 32>

1331:
old  <>
new  <	mov byte [rbp + 29], 32>

1332:
old  < strtol_test$247:>
new  <>

1333:
old  <	; Assign text[4] 49>
new  < strtol_test$245:>

1334:
old  <	mov byte [rbp + 32], 49>
new  <	; Assign text[2] 32>

1335:
old  <>
new  <	mov byte [rbp + 30], 32>

1336:
old  < strtol_test$248:>
new  <>

1337:
old  <	; Assign text[5] 50>
new  < strtol_test$246:>

1338:
old  <	mov byte [rbp + 33], 50>
new  <	; Assign text[3] 43>

1339:
old  <>
new  <	mov byte [rbp + 31], 43>

1340:
old  < strtol_test$249:>
new  <>

1341:
old  <	; Assign text[6] 51>
new  < strtol_test$247:>

1342:
old  <	mov byte [rbp + 34], 51>
new  <	; Assign text[4] 49>

1343:
old  <>
new  <	mov byte [rbp + 32], 49>

1344:
old  < strtol_test$250:>
new  <>

1345:
old  <	; Assign text[7] 97>
new  < strtol_test$248:>

1346:
old  <	mov byte [rbp + 35], 97>
new  <	; Assign text[5] 50>

1347:
old  <>
new  <	mov byte [rbp + 33], 50>

1348:
old  < strtol_test$251:>
new  <>

1349:
old  <	; Assign text[8] 98>
new  < strtol_test$249:>

1350:
old  <	mov byte [rbp + 36], 98>
new  <	; Assign text[6] 51>

1351:
old  <>
new  <	mov byte [rbp + 34], 51>

1352:
old  < strtol_test$252:>
new  <>

1353:
old  <	; Assign text[9] 99>
new  < strtol_test$250:>

1354:
old  <	mov byte [rbp + 37], 99>
new  <	; Assign text[7] 97>

1355:
old  <>
new  <	mov byte [rbp + 35], 97>

1356:
old  < strtol_test$253:>
new  <>

1357:
old  <	; Assign text[10] 0>
new  < strtol_test$251:>

1358:
old  <	mov byte [rbp + 38], 0>
new  <	; Assign text[8] 98>

1359:
old  <>
new  <	mov byte [rbp + 36], 98>

1360:
old  < strtol_test$254:>
new  <>

1361:
old  <	; PreCall 47 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < strtol_test$252:>

1362:
old  <>
new  <	; Assign text[9] 99>

1363:
old  < strtol_test$255:>
new  <	mov byte [rbp + 37], 99>

1364:
old  <	; Parameter 71 pointer text>
new  <>

1365:
old  <	mov [rbp + 71], rbp>
new  < strtol_test$253:>

1366:
old  <	add qword [rbp + 71], 28>
new  <	; Assign text[10] 0>

1367:
old  <>
new  <	mov byte [rbp + 38], 0>

1368:
old  < strtol_test$256:>
new  <>

1369:
old  <	; Address Â£temporary2189 pointer>
new  < strtol_test$254:>

1370:
old  <	mov rsi, rbp>
new  <	; PreCall 47 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1371:
old  <	add rsi, 39>
new  <>

1372:
old  <>
new  < strtol_test$255:>

1373:
old  < strtol_test$257:>
new  <	; Parameter 71 pointer text>

1374:
old  <	; Parameter 79 pointer Â£temporary2189>
new  <	mov [rbp + 71], rbp>

1375:
old  <	mov [rbp + 79], rsi>
new  <	add qword [rbp + 71], 28>

1377:
old  < strtol_test$258:>
new  < strtol_test$256:>

1378:
old  <	; Parameter 87 signedint base>
new  <	; Address Â£temporary2176 pointer>

1379:
old  <	mov eax, [rbp + 24]>
new  <	mov rsi, rbp>

1380:
old  <	mov [rbp + 87], eax>
new  <	add rsi, 39>

1382:
old  < strtol_test$259:>
new  < strtol_test$257:>

1383:
old  <	; Call 47 strtol 0>
new  <	; Parameter 79 pointer Â£temporary2176>

1384:
old  <	mov qword [rbp + 47], strtol_test$260>
new  <	mov [rbp + 79], rsi>

1385:
old  <	mov [rbp + 55], rbp>
new  <>

1386:
old  <	add rbp, 47>
new  < strtol_test$258:>

1387:
old  <	jmp strtol>
new  <	; Parameter 87 signedint base>

1388:
old  <>
new  <	mov eax, [rbp + 24]>

1389:
old  < strtol_test$260:>
new  <	mov [rbp + 87], eax>

1390:
old  <	; PostCall 47>
new  <>

1391:
old  <>
new  < strtol_test$259:>

1392:
old  < strtol_test$261:>
new  <	; Call 47 strtol 0>

1393:
old  <	; GetReturnValue Â£temporary2190>
new  <	mov qword [rbp + 47], strtol_test$260>

1394:
old  <>
new  <	mov [rbp + 55], rbp>

1395:
old  < strtol_test$262:>
new  <	add rbp, 47>

1396:
old  <	; Assign value Â£temporary2190>
new  <	jmp strtol>

1397:
old  <	mov [rbp + 47], rbx>
new  <>

1398:
old  <>
new  < strtol_test$260:>

1399:
old  < strtol_test$263:>
new  <	; PostCall 47>

1400:
old  <	; PreCall 55 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1401:
old  <>
new  < strtol_test$261:>

1402:
old  < strtol_test$264:>
new  <	; GetReturnValue Â£temporary2177>

1403:
old  <	; Parameter 79 pointer "<%s> <%li> <%s> <%i>\n">
new  <>

1404:
old  <	mov qword [rbp + 79], string_3C25s3E203C25li3E203C25s3E203C25i3E0A#>
new  < strtol_test$262:>

1405:
old  <>
new  <	; Assign value Â£temporary2177>

1406:
old  < strtol_test$265:>
new  <	mov [rbp + 47], rbx>

1407:
old  <	; Parameter 87 pointer text>
new  <>

1408:
old  <	mov [rbp + 87], rbp>
new  < strtol_test$263:>

1409:
old  <	add qword [rbp + 87], 28>
new  <	; PreCall 55 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1411:
old  < strtol_test$266:>
new  < strtol_test$264:>

1412:
old  <	; Parameter 95 signed long int value>
new  <	; Parameter 79 pointer "<%s> <%li> <%s> <%i>\n">

1413:
old  <	mov rax, [rbp + 47]>
new  <	mov qword [rbp + 79], string_3C25s3E203C25li3E203C25s3E203C25i3E0A#>

1414:
old  <	mov [rbp + 95], rax>
new  <>

1415:
old  <>
new  < strtol_test$265:>

1416:
old  < strtol_test$267:>
new  <	; Parameter 87 pointer text>

1417:
old  <	; Parameter 103 pointer pointer>
new  <	mov [rbp + 87], rbp>

1418:
old  <	mov rax, [rbp + 39]>
new  <	add qword [rbp + 87], 28>

1419:
old  <	mov [rbp + 103], rax>
new  <>

1420:
old  <>
new  < strtol_test$266:>

1421:
old  < strtol_test$268:>
new  <	; Parameter 95 signed long int value>

1422:
old  <	; Parameter 111 signedint base>
new  <	mov rax, [rbp + 47]>

1423:
old  <	mov eax, [rbp + 24]>
new  <	mov [rbp + 95], rax>

1424:
old  <	mov [rbp + 111], eax>
new  <>

1425:
old  <>
new  < strtol_test$267:>

1426:
old  < strtol_test$269:>
new  <	; Parameter 103 pointer pointer>

1427:
old  <	; Call 55 printf 28>
new  <	mov rax, [rbp + 39]>

1428:
old  <	mov qword [rbp + 55], strtol_test$270>
new  <	mov [rbp + 103], rax>

1429:
old  <	mov [rbp + 63], rbp>
new  <>

1430:
old  <	add rbp, 55>
new  < strtol_test$268:>

1431:
old  <	mov rdi, rbp>
new  <	; Parameter 111 signedint base>

1432:
old  <	add rdi, 28>
new  <	mov eax, [rbp + 24]>

1433:
old  <	jmp printf>
new  <	mov [rbp + 111], eax>

1435:
old  < strtol_test$270:>
new  < strtol_test$269:>

1436:
old  <	; PostCall 55>
new  <	; Call 55 printf 28>

1437:
old  <>
new  <	mov qword [rbp + 55], strtol_test$270>

1438:
old  < strtol_test$271:>
new  <	mov [rbp + 63], rbp>

1439:
old  <	; Assign base 10>
new  <	add rbp, 55>

1440:
old  <	mov dword [rbp + 24], 10>
new  <	mov rdi, rbp>

1441:
old  <>
new  <	add rdi, 28>

1442:
old  < strtol_test$272:>
new  <	jmp printf>

1443:
old  <	; Assign text[0] 32>
new  <>

1444:
old  <	mov byte [rbp + 28], 32>
new  < strtol_test$270:>

1445:
old  <>
new  <	; PostCall 55>

1446:
old  < strtol_test$273:>
new  <>

1447:
old  <	; Assign text[1] 32>
new  < strtol_test$271:>

1448:
old  <	mov byte [rbp + 29], 32>
new  <	; Assign base 10>

1449:
old  <>
new  <	mov dword [rbp + 24], 10>

1450:
old  < strtol_test$274:>
new  <>

1451:
old  <	; Assign text[2] 32>
new  < strtol_test$272:>

1452:
old  <	mov byte [rbp + 30], 32>
new  <	; Assign text[0] 32>

1453:
old  <>
new  <	mov byte [rbp + 28], 32>

1454:
old  < strtol_test$275:>
new  <>

1455:
old  <	; Assign text[3] 43>
new  < strtol_test$273:>

1456:
old  <	mov byte [rbp + 31], 43>
new  <	; Assign text[1] 32>

1457:
old  <>
new  <	mov byte [rbp + 29], 32>

1458:
old  < strtol_test$276:>
new  <>

1459:
old  <	; Assign text[4] 49>
new  < strtol_test$274:>

1460:
old  <	mov byte [rbp + 32], 49>
new  <	; Assign text[2] 32>

1461:
old  <>
new  <	mov byte [rbp + 30], 32>

1462:
old  < strtol_test$277:>
new  <>

1463:
old  <	; Assign text[5] 50>
new  < strtol_test$275:>

1464:
old  <	mov byte [rbp + 33], 50>
new  <	; Assign text[3] 43>

1465:
old  <>
new  <	mov byte [rbp + 31], 43>

1466:
old  < strtol_test$278:>
new  <>

1467:
old  <	; Assign text[6] 51>
new  < strtol_test$276:>

1468:
old  <	mov byte [rbp + 34], 51>
new  <	; Assign text[4] 49>

1469:
old  <>
new  <	mov byte [rbp + 32], 49>

1470:
old  < strtol_test$279:>
new  <>

1471:
old  <	; Assign text[7] 97>
new  < strtol_test$277:>

1472:
old  <	mov byte [rbp + 35], 97>
new  <	; Assign text[5] 50>

1473:
old  <>
new  <	mov byte [rbp + 33], 50>

1474:
old  < strtol_test$280:>
new  <>

1475:
old  <	; Assign text[8] 98>
new  < strtol_test$278:>

1476:
old  <	mov byte [rbp + 36], 98>
new  <	; Assign text[6] 51>

1477:
old  <>
new  <	mov byte [rbp + 34], 51>

1478:
old  < strtol_test$281:>
new  <>

1479:
old  <	; Assign text[9] 99>
new  < strtol_test$279:>

1480:
old  <	mov byte [rbp + 37], 99>
new  <	; Assign text[7] 97>

1481:
old  <>
new  <	mov byte [rbp + 35], 97>

1482:
old  < strtol_test$282:>
new  <>

1483:
old  <	; Assign text[10] 0>
new  < strtol_test$280:>

1484:
old  <	mov byte [rbp + 38], 0>
new  <	; Assign text[8] 98>

1485:
old  <>
new  <	mov byte [rbp + 36], 98>

1486:
old  < strtol_test$283:>
new  <>

1487:
old  <	; PreCall 47 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < strtol_test$281:>

1488:
old  <>
new  <	; Assign text[9] 99>

1489:
old  < strtol_test$284:>
new  <	mov byte [rbp + 37], 99>

1490:
old  <	; Parameter 71 pointer text>
new  <>

1491:
old  <	mov [rbp + 71], rbp>
new  < strtol_test$282:>

1492:
old  <	add qword [rbp + 71], 28>
new  <	; Assign text[10] 0>

1493:
old  <>
new  <	mov byte [rbp + 38], 0>

1494:
old  < strtol_test$285:>
new  <>

1495:
old  <	; Address Â£temporary2203 pointer>
new  < strtol_test$283:>

1496:
old  <	mov rsi, rbp>
new  <	; PreCall 47 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1497:
old  <	add rsi, 39>
new  <>

1498:
old  <>
new  < strtol_test$284:>

1499:
old  < strtol_test$286:>
new  <	; Parameter 71 pointer text>

1500:
old  <	; Parameter 79 pointer Â£temporary2203>
new  <	mov [rbp + 71], rbp>

1501:
old  <	mov [rbp + 79], rsi>
new  <	add qword [rbp + 71], 28>

1503:
old  < strtol_test$287:>
new  < strtol_test$285:>

1504:
old  <	; Parameter 87 signedint base>
new  <	; Address Â£temporary2190 pointer>

1505:
old  <	mov eax, [rbp + 24]>
new  <	mov rsi, rbp>

1506:
old  <	mov [rbp + 87], eax>
new  <	add rsi, 39>

1508:
old  < strtol_test$288:>
new  < strtol_test$286:>

1509:
old  <	; Call 47 strtol 0>
new  <	; Parameter 79 pointer Â£temporary2190>

1510:
old  <	mov qword [rbp + 47], strtol_test$289>
new  <	mov [rbp + 79], rsi>

1511:
old  <	mov [rbp + 55], rbp>
new  <>

1512:
old  <	add rbp, 47>
new  < strtol_test$287:>

1513:
old  <	jmp strtol>
new  <	; Parameter 87 signedint base>

1514:
old  <>
new  <	mov eax, [rbp + 24]>

1515:
old  < strtol_test$289:>
new  <	mov [rbp + 87], eax>

1516:
old  <	; PostCall 47>
new  <>

1517:
old  <>
new  < strtol_test$288:>

1518:
old  < strtol_test$290:>
new  <	; Call 47 strtol 0>

1519:
old  <	; GetReturnValue Â£temporary2204>
new  <	mov qword [rbp + 47], strtol_test$289>

1520:
old  <>
new  <	mov [rbp + 55], rbp>

1521:
old  < strtol_test$291:>
new  <	add rbp, 47>

1522:
old  <	; Assign value Â£temporary2204>
new  <	jmp strtol>

1523:
old  <	mov [rbp + 47], rbx>
new  <>

1524:
old  <>
new  < strtol_test$289:>

1525:
old  < strtol_test$292:>
new  <	; PostCall 47>

1526:
old  <	; PreCall 55 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1527:
old  <>
new  < strtol_test$290:>

1528:
old  < strtol_test$293:>
new  <	; GetReturnValue Â£temporary2191>

1529:
old  <	; Parameter 79 pointer "<%s> <%li> <%s> <%i>\n">
new  <>

1530:
old  <	mov qword [rbp + 79], string_3C25s3E203C25li3E203C25s3E203C25i3E0A#>
new  < strtol_test$291:>

1531:
old  <>
new  <	; Assign value Â£temporary2191>

1532:
old  < strtol_test$294:>
new  <	mov [rbp + 47], rbx>

1533:
old  <	; Parameter 87 pointer text>
new  <>

1534:
old  <	mov [rbp + 87], rbp>
new  < strtol_test$292:>

1535:
old  <	add qword [rbp + 87], 28>
new  <	; PreCall 55 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1537:
old  < strtol_test$295:>
new  < strtol_test$293:>

1538:
old  <	; Parameter 95 signed long int value>
new  <	; Parameter 79 pointer "<%s> <%li> <%s> <%i>\n">

1539:
old  <	mov rax, [rbp + 47]>
new  <	mov qword [rbp + 79], string_3C25s3E203C25li3E203C25s3E203C25i3E0A#>

1540:
old  <	mov [rbp + 95], rax>
new  <>

1541:
old  <>
new  < strtol_test$294:>

1542:
old  < strtol_test$296:>
new  <	; Parameter 87 pointer text>

1543:
old  <	; Parameter 103 pointer pointer>
new  <	mov [rbp + 87], rbp>

1544:
old  <	mov rax, [rbp + 39]>
new  <	add qword [rbp + 87], 28>

1545:
old  <	mov [rbp + 103], rax>
new  <>

1546:
old  <>
new  < strtol_test$295:>

1547:
old  < strtol_test$297:>
new  <	; Parameter 95 signed long int value>

1548:
old  <	; Parameter 111 signedint base>
new  <	mov rax, [rbp + 47]>

1549:
old  <	mov eax, [rbp + 24]>
new  <	mov [rbp + 95], rax>

1550:
old  <	mov [rbp + 111], eax>
new  <>

1551:
old  <>
new  < strtol_test$296:>

1552:
old  < strtol_test$298:>
new  <	; Parameter 103 pointer pointer>

1553:
old  <	; Call 55 printf 28>
new  <	mov rax, [rbp + 39]>

1554:
old  <	mov qword [rbp + 55], strtol_test$299>
new  <	mov [rbp + 103], rax>

1555:
old  <	mov [rbp + 63], rbp>
new  <>

1556:
old  <	add rbp, 55>
new  < strtol_test$297:>

1557:
old  <	mov rdi, rbp>
new  <	; Parameter 111 signedint base>

1558:
old  <	add rdi, 28>
new  <	mov eax, [rbp + 24]>

1559:
old  <	jmp printf>
new  <	mov [rbp + 111], eax>

1561:
old  < strtol_test$299:>
new  < strtol_test$298:>

1562:
old  <	; PostCall 55>
new  <	; Call 55 printf 28>

1563:
old  <>
new  <	mov qword [rbp + 55], strtol_test$299>

1564:
old  < strtol_test$300:>
new  <	mov [rbp + 63], rbp>

1565:
old  <	; Assign base 11>
new  <	add rbp, 55>

1566:
old  <	mov dword [rbp + 24], 11>
new  <	mov rdi, rbp>

1567:
old  <>
new  <	add rdi, 28>

1568:
old  < strtol_test$301:>
new  <	jmp printf>

1569:
old  <	; Assign text[0] 32>
new  <>

1570:
old  <	mov byte [rbp + 28], 32>
new  < strtol_test$299:>

1571:
old  <>
new  <	; PostCall 55>

1572:
old  < strtol_test$302:>
new  <>

1573:
old  <	; Assign text[1] 32>
new  < strtol_test$300:>

1574:
old  <	mov byte [rbp + 29], 32>
new  <	; Assign base 11>

1575:
old  <>
new  <	mov dword [rbp + 24], 11>

1576:
old  < strtol_test$303:>
new  <>

1577:
old  <	; Assign text[2] 32>
new  < strtol_test$301:>

1578:
old  <	mov byte [rbp + 30], 32>
new  <	; Assign text[0] 32>

1579:
old  <>
new  <	mov byte [rbp + 28], 32>

1580:
old  < strtol_test$304:>
new  <>

1581:
old  <	; Assign text[3] 43>
new  < strtol_test$302:>

1582:
old  <	mov byte [rbp + 31], 43>
new  <	; Assign text[1] 32>

1583:
old  <>
new  <	mov byte [rbp + 29], 32>

1584:
old  < strtol_test$305:>
new  <>

1585:
old  <	; Assign text[4] 49>
new  < strtol_test$303:>

1586:
old  <	mov byte [rbp + 32], 49>
new  <	; Assign text[2] 32>

1587:
old  <>
new  <	mov byte [rbp + 30], 32>

1588:
old  < strtol_test$306:>
new  <>

1589:
old  <	; Assign text[5] 50>
new  < strtol_test$304:>

1590:
old  <	mov byte [rbp + 33], 50>
new  <	; Assign text[3] 43>

1591:
old  <>
new  <	mov byte [rbp + 31], 43>

1592:
old  < strtol_test$307:>
new  <>

1593:
old  <	; Assign text[6] 51>
new  < strtol_test$305:>

1594:
old  <	mov byte [rbp + 34], 51>
new  <	; Assign text[4] 49>

1595:
old  <>
new  <	mov byte [rbp + 32], 49>

1596:
old  < strtol_test$308:>
new  <>

1597:
old  <	; Assign text[7] 97>
new  < strtol_test$306:>

1598:
old  <	mov byte [rbp + 35], 97>
new  <	; Assign text[5] 50>

1599:
old  <>
new  <	mov byte [rbp + 33], 50>

1600:
old  < strtol_test$309:>
new  <>

1601:
old  <	; Assign text[8] 98>
new  < strtol_test$307:>

1602:
old  <	mov byte [rbp + 36], 98>
new  <	; Assign text[6] 51>

1603:
old  <>
new  <	mov byte [rbp + 34], 51>

1604:
old  < strtol_test$310:>
new  <>

1605:
old  <	; Assign text[9] 99>
new  < strtol_test$308:>

1606:
old  <	mov byte [rbp + 37], 99>
new  <	; Assign text[7] 97>

1607:
old  <>
new  <	mov byte [rbp + 35], 97>

1608:
old  < strtol_test$311:>
new  <>

1609:
old  <	; Assign text[10] 0>
new  < strtol_test$309:>

1610:
old  <	mov byte [rbp + 38], 0>
new  <	; Assign text[8] 98>

1611:
old  <>
new  <	mov byte [rbp + 36], 98>

1612:
old  < strtol_test$312:>
new  <>

1613:
old  <	; PreCall 47 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < strtol_test$310:>

1614:
old  <>
new  <	; Assign text[9] 99>

1615:
old  < strtol_test$313:>
new  <	mov byte [rbp + 37], 99>

1616:
old  <	; Parameter 71 pointer text>
new  <>

1617:
old  <	mov [rbp + 71], rbp>
new  < strtol_test$311:>

1618:
old  <	add qword [rbp + 71], 28>
new  <	; Assign text[10] 0>

1619:
old  <>
new  <	mov byte [rbp + 38], 0>

1620:
old  < strtol_test$314:>
new  <>

1621:
old  <	; Address Â£temporary2217 pointer>
new  < strtol_test$312:>

1622:
old  <	mov rsi, rbp>
new  <	; PreCall 47 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1623:
old  <	add rsi, 39>
new  <>

1624:
old  <>
new  < strtol_test$313:>

1625:
old  < strtol_test$315:>
new  <	; Parameter 71 pointer text>

1626:
old  <	; Parameter 79 pointer Â£temporary2217>
new  <	mov [rbp + 71], rbp>

1627:
old  <	mov [rbp + 79], rsi>
new  <	add qword [rbp + 71], 28>

1629:
old  < strtol_test$316:>
new  < strtol_test$314:>

1630:
old  <	; Parameter 87 signedint base>
new  <	; Address Â£temporary2204 pointer>

1631:
old  <	mov eax, [rbp + 24]>
new  <	mov rsi, rbp>

1632:
old  <	mov [rbp + 87], eax>
new  <	add rsi, 39>

1634:
old  < strtol_test$317:>
new  < strtol_test$315:>

1635:
old  <	; Call 47 strtol 0>
new  <	; Parameter 79 pointer Â£temporary2204>

1636:
old  <	mov qword [rbp + 47], strtol_test$318>
new  <	mov [rbp + 79], rsi>

1637:
old  <	mov [rbp + 55], rbp>
new  <>

1638:
old  <	add rbp, 47>
new  < strtol_test$316:>

1639:
old  <	jmp strtol>
new  <	; Parameter 87 signedint base>

1640:
old  <>
new  <	mov eax, [rbp + 24]>

1641:
old  < strtol_test$318:>
new  <	mov [rbp + 87], eax>

1642:
old  <	; PostCall 47>
new  <>

1643:
old  <>
new  < strtol_test$317:>

1644:
old  < strtol_test$319:>
new  <	; Call 47 strtol 0>

1645:
old  <	; GetReturnValue Â£temporary2218>
new  <	mov qword [rbp + 47], strtol_test$318>

1646:
old  <>
new  <	mov [rbp + 55], rbp>

1647:
old  < strtol_test$320:>
new  <	add rbp, 47>

1648:
old  <	; Assign value Â£temporary2218>
new  <	jmp strtol>

1649:
old  <	mov [rbp + 47], rbx>
new  <>

1650:
old  <>
new  < strtol_test$318:>

1651:
old  < strtol_test$321:>
new  <	; PostCall 47>

1652:
old  <	; PreCall 55 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1653:
old  <>
new  < strtol_test$319:>

1654:
old  < strtol_test$322:>
new  <	; GetReturnValue Â£temporary2205>

1655:
old  <	; Parameter 79 pointer "<%s> <%li> <%s> <%i>\n">
new  <>

1656:
old  <	mov qword [rbp + 79], string_3C25s3E203C25li3E203C25s3E203C25i3E0A#>
new  < strtol_test$320:>

1657:
old  <>
new  <	; Assign value Â£temporary2205>

1658:
old  < strtol_test$323:>
new  <	mov [rbp + 47], rbx>

1659:
old  <	; Parameter 87 pointer text>
new  <>

1660:
old  <	mov [rbp + 87], rbp>
new  < strtol_test$321:>

1661:
old  <	add qword [rbp + 87], 28>
new  <	; PreCall 55 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1663:
old  < strtol_test$324:>
new  < strtol_test$322:>

1664:
old  <	; Parameter 95 signed long int value>
new  <	; Parameter 79 pointer "<%s> <%li> <%s> <%i>\n">

1665:
old  <	mov rax, [rbp + 47]>
new  <	mov qword [rbp + 79], string_3C25s3E203C25li3E203C25s3E203C25i3E0A#>

1666:
old  <	mov [rbp + 95], rax>
new  <>

1667:
old  <>
new  < strtol_test$323:>

1668:
old  < strtol_test$325:>
new  <	; Parameter 87 pointer text>

1669:
old  <	; Parameter 103 pointer pointer>
new  <	mov [rbp + 87], rbp>

1670:
old  <	mov rax, [rbp + 39]>
new  <	add qword [rbp + 87], 28>

1671:
old  <	mov [rbp + 103], rax>
new  <>

1672:
old  <>
new  < strtol_test$324:>

1673:
old  < strtol_test$326:>
new  <	; Parameter 95 signed long int value>

1674:
old  <	; Parameter 111 signedint base>
new  <	mov rax, [rbp + 47]>

1675:
old  <	mov eax, [rbp + 24]>
new  <	mov [rbp + 95], rax>

1676:
old  <	mov [rbp + 111], eax>
new  <>

1677:
old  <>
new  < strtol_test$325:>

1678:
old  < strtol_test$327:>
new  <	; Parameter 103 pointer pointer>

1679:
old  <	; Call 55 printf 28>
new  <	mov rax, [rbp + 39]>

1680:
old  <	mov qword [rbp + 55], strtol_test$328>
new  <	mov [rbp + 103], rax>

1681:
old  <	mov [rbp + 63], rbp>
new  <>

1682:
old  <	add rbp, 55>
new  < strtol_test$326:>

1683:
old  <	mov rdi, rbp>
new  <	; Parameter 111 signedint base>

1684:
old  <	add rdi, 28>
new  <	mov eax, [rbp + 24]>

1685:
old  <	jmp printf>
new  <	mov [rbp + 111], eax>

1687:
old  < strtol_test$328:>
new  < strtol_test$327:>

1688:
old  <	; PostCall 55>
new  <	; Call 55 printf 28>

1689:
old  <>
new  <	mov qword [rbp + 55], strtol_test$328>

1690:
old  < strtol_test$329:>
new  <	mov [rbp + 63], rbp>

1691:
old  <	; Assign base 12>
new  <	add rbp, 55>

1692:
old  <	mov dword [rbp + 24], 12>
new  <	mov rdi, rbp>

1693:
old  <>
new  <	add rdi, 28>

1694:
old  < strtol_test$330:>
new  <	jmp printf>

1695:
old  <	; Assign text[0] 32>
new  <>

1696:
old  <	mov byte [rbp + 28], 32>
new  < strtol_test$328:>

1697:
old  <>
new  <	; PostCall 55>

1698:
old  < strtol_test$331:>
new  <>

1699:
old  <	; Assign text[1] 32>
new  < strtol_test$329:>

1700:
old  <	mov byte [rbp + 29], 32>
new  <	; Assign base 12>

1701:
old  <>
new  <	mov dword [rbp + 24], 12>

1702:
old  < strtol_test$332:>
new  <>

1703:
old  <	; Assign text[2] 32>
new  < strtol_test$330:>

1704:
old  <	mov byte [rbp + 30], 32>
new  <	; Assign text[0] 32>

1705:
old  <>
new  <	mov byte [rbp + 28], 32>

1706:
old  < strtol_test$333:>
new  <>

1707:
old  <	; Assign text[3] 43>
new  < strtol_test$331:>

1708:
old  <	mov byte [rbp + 31], 43>
new  <	; Assign text[1] 32>

1709:
old  <>
new  <	mov byte [rbp + 29], 32>

1710:
old  < strtol_test$334:>
new  <>

1711:
old  <	; Assign text[4] 49>
new  < strtol_test$332:>

1712:
old  <	mov byte [rbp + 32], 49>
new  <	; Assign text[2] 32>

1713:
old  <>
new  <	mov byte [rbp + 30], 32>

1714:
old  < strtol_test$335:>
new  <>

1715:
old  <	; Assign text[5] 50>
new  < strtol_test$333:>

1716:
old  <	mov byte [rbp + 33], 50>
new  <	; Assign text[3] 43>

1717:
old  <>
new  <	mov byte [rbp + 31], 43>

1718:
old  < strtol_test$336:>
new  <>

1719:
old  <	; Assign text[6] 51>
new  < strtol_test$334:>

1720:
old  <	mov byte [rbp + 34], 51>
new  <	; Assign text[4] 49>

1721:
old  <>
new  <	mov byte [rbp + 32], 49>

1722:
old  < strtol_test$337:>
new  <>

1723:
old  <	; Assign text[7] 65>
new  < strtol_test$335:>

1724:
old  <	mov byte [rbp + 35], 65>
new  <	; Assign text[5] 50>

1725:
old  <>
new  <	mov byte [rbp + 33], 50>

1726:
old  < strtol_test$338:>
new  <>

1727:
old  <	; Assign text[8] 66>
new  < strtol_test$336:>

1728:
old  <	mov byte [rbp + 36], 66>
new  <	; Assign text[6] 51>

1729:
old  <>
new  <	mov byte [rbp + 34], 51>

1730:
old  < strtol_test$339:>
new  <>

1731:
old  <	; Assign text[9] 67>
new  < strtol_test$337:>

1732:
old  <	mov byte [rbp + 37], 67>
new  <	; Assign text[7] 65>

1733:
old  <>
new  <	mov byte [rbp + 35], 65>

1734:
old  < strtol_test$340:>
new  <>

1735:
old  <	; Assign text[10] 0>
new  < strtol_test$338:>

1736:
old  <	mov byte [rbp + 38], 0>
new  <	; Assign text[8] 66>

1737:
old  <>
new  <	mov byte [rbp + 36], 66>

1738:
old  < strtol_test$341:>
new  <>

1739:
old  <	; PreCall 47 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < strtol_test$339:>

1740:
old  <>
new  <	; Assign text[9] 67>

1741:
old  < strtol_test$342:>
new  <	mov byte [rbp + 37], 67>

1742:
old  <	; Parameter 71 pointer text>
new  <>

1743:
old  <	mov [rbp + 71], rbp>
new  < strtol_test$340:>

1744:
old  <	add qword [rbp + 71], 28>
new  <	; Assign text[10] 0>

1745:
old  <>
new  <	mov byte [rbp + 38], 0>

1746:
old  < strtol_test$343:>
new  <>

1747:
old  <	; Address Â£temporary2231 pointer>
new  < strtol_test$341:>

1748:
old  <	mov rsi, rbp>
new  <	; PreCall 47 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1749:
old  <	add rsi, 39>
new  <>

1750:
old  <>
new  < strtol_test$342:>

1751:
old  < strtol_test$344:>
new  <	; Parameter 71 pointer text>

1752:
old  <	; Parameter 79 pointer Â£temporary2231>
new  <	mov [rbp + 71], rbp>

1753:
old  <	mov [rbp + 79], rsi>
new  <	add qword [rbp + 71], 28>

1755:
old  < strtol_test$345:>
new  < strtol_test$343:>

1756:
old  <	; Parameter 87 signedint base>
new  <	; Address Â£temporary2218 pointer>

1757:
old  <	mov eax, [rbp + 24]>
new  <	mov rsi, rbp>

1758:
old  <	mov [rbp + 87], eax>
new  <	add rsi, 39>

1760:
old  < strtol_test$346:>
new  < strtol_test$344:>

1761:
old  <	; Call 47 strtol 0>
new  <	; Parameter 79 pointer Â£temporary2218>

1762:
old  <	mov qword [rbp + 47], strtol_test$347>
new  <	mov [rbp + 79], rsi>

1763:
old  <	mov [rbp + 55], rbp>
new  <>

1764:
old  <	add rbp, 47>
new  < strtol_test$345:>

1765:
old  <	jmp strtol>
new  <	; Parameter 87 signedint base>

1766:
old  <>
new  <	mov eax, [rbp + 24]>

1767:
old  < strtol_test$347:>
new  <	mov [rbp + 87], eax>

1768:
old  <	; PostCall 47>
new  <>

1769:
old  <>
new  < strtol_test$346:>

1770:
old  < strtol_test$348:>
new  <	; Call 47 strtol 0>

1771:
old  <	; GetReturnValue Â£temporary2232>
new  <	mov qword [rbp + 47], strtol_test$347>

1772:
old  <>
new  <	mov [rbp + 55], rbp>

1773:
old  < strtol_test$349:>
new  <	add rbp, 47>

1774:
old  <	; Assign value Â£temporary2232>
new  <	jmp strtol>

1775:
old  <	mov [rbp + 47], rbx>
new  <>

1776:
old  <>
new  < strtol_test$347:>

1777:
old  < strtol_test$350:>
new  <	; PostCall 47>

1778:
old  <	; PreCall 55 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1779:
old  <>
new  < strtol_test$348:>

1780:
old  < strtol_test$351:>
new  <	; GetReturnValue Â£temporary2219>

1781:
old  <	; Parameter 79 pointer "<%s> <%li> <%s> <%i>\n">
new  <>

1782:
old  <	mov qword [rbp + 79], string_3C25s3E203C25li3E203C25s3E203C25i3E0A#>
new  < strtol_test$349:>

1783:
old  <>
new  <	; Assign value Â£temporary2219>

1784:
old  < strtol_test$352:>
new  <	mov [rbp + 47], rbx>

1785:
old  <	; Parameter 87 pointer text>
new  <>

1786:
old  <	mov [rbp + 87], rbp>
new  < strtol_test$350:>

1787:
old  <	add qword [rbp + 87], 28>
new  <	; PreCall 55 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1789:
old  < strtol_test$353:>
new  < strtol_test$351:>

1790:
old  <	; Parameter 95 signed long int value>
new  <	; Parameter 79 pointer "<%s> <%li> <%s> <%i>\n">

1791:
old  <	mov rax, [rbp + 47]>
new  <	mov qword [rbp + 79], string_3C25s3E203C25li3E203C25s3E203C25i3E0A#>

1792:
old  <	mov [rbp + 95], rax>
new  <>

1793:
old  <>
new  < strtol_test$352:>

1794:
old  < strtol_test$354:>
new  <	; Parameter 87 pointer text>

1795:
old  <	; Parameter 103 pointer pointer>
new  <	mov [rbp + 87], rbp>

1796:
old  <	mov rax, [rbp + 39]>
new  <	add qword [rbp + 87], 28>

1797:
old  <	mov [rbp + 103], rax>
new  <>

1798:
old  <>
new  < strtol_test$353:>

1799:
old  < strtol_test$355:>
new  <	; Parameter 95 signed long int value>

1800:
old  <	; Parameter 111 signedint base>
new  <	mov rax, [rbp + 47]>

1801:
old  <	mov eax, [rbp + 24]>
new  <	mov [rbp + 95], rax>

1802:
old  <	mov [rbp + 111], eax>
new  <>

1803:
old  <>
new  < strtol_test$354:>

1804:
old  < strtol_test$356:>
new  <	; Parameter 103 pointer pointer>

1805:
old  <	; Call 55 printf 28>
new  <	mov rax, [rbp + 39]>

1806:
old  <	mov qword [rbp + 55], strtol_test$357>
new  <	mov [rbp + 103], rax>

1807:
old  <	mov [rbp + 63], rbp>
new  <>

1808:
old  <	add rbp, 55>
new  < strtol_test$355:>

1809:
old  <	mov rdi, rbp>
new  <	; Parameter 111 signedint base>

1810:
old  <	add rdi, 28>
new  <	mov eax, [rbp + 24]>

1811:
old  <	jmp printf>
new  <	mov [rbp + 111], eax>

1813:
old  < strtol_test$357:>
new  < strtol_test$356:>

1814:
old  <	; PostCall 55>
new  <	; Call 55 printf 28>

1815:
old  <>
new  <	mov qword [rbp + 55], strtol_test$357>

1816:
old  < strtol_test$358:>
new  <	mov [rbp + 63], rbp>

1817:
old  <	; Assign base 13>
new  <	add rbp, 55>

1818:
old  <	mov dword [rbp + 24], 13>
new  <	mov rdi, rbp>

1819:
old  <>
new  <	add rdi, 28>

1820:
old  < strtol_test$359:>
new  <	jmp printf>

1821:
old  <	; Assign text[0] 32>
new  <>

1822:
old  <	mov byte [rbp + 28], 32>
new  < strtol_test$357:>

1823:
old  <>
new  <	; PostCall 55>

1824:
old  < strtol_test$360:>
new  <>

1825:
old  <	; Assign text[1] 32>
new  < strtol_test$358:>

1826:
old  <	mov byte [rbp + 29], 32>
new  <	; Assign base 13>

1827:
old  <>
new  <	mov dword [rbp + 24], 13>

1828:
old  < strtol_test$361:>
new  <>

1829:
old  <	; Assign text[2] 32>
new  < strtol_test$359:>

1830:
old  <	mov byte [rbp + 30], 32>
new  <	; Assign text[0] 32>

1831:
old  <>
new  <	mov byte [rbp + 28], 32>

1832:
old  < strtol_test$362:>
new  <>

1833:
old  <	; Assign text[3] 43>
new  < strtol_test$360:>

1834:
old  <	mov byte [rbp + 31], 43>
new  <	; Assign text[1] 32>

1835:
old  <>
new  <	mov byte [rbp + 29], 32>

1836:
old  < strtol_test$363:>
new  <>

1837:
old  <	; Assign text[4] 49>
new  < strtol_test$361:>

1838:
old  <	mov byte [rbp + 32], 49>
new  <	; Assign text[2] 32>

1839:
old  <>
new  <	mov byte [rbp + 30], 32>

1840:
old  < strtol_test$364:>
new  <>

1841:
old  <	; Assign text[5] 50>
new  < strtol_test$362:>

1842:
old  <	mov byte [rbp + 33], 50>
new  <	; Assign text[3] 43>

1843:
old  <>
new  <	mov byte [rbp + 31], 43>

1844:
old  < strtol_test$365:>
new  <>

1845:
old  <	; Assign text[6] 51>
new  < strtol_test$363:>

1846:
old  <	mov byte [rbp + 34], 51>
new  <	; Assign text[4] 49>

1847:
old  <>
new  <	mov byte [rbp + 32], 49>

1848:
old  < strtol_test$366:>
new  <>

1849:
old  <	; Assign text[7] 97>
new  < strtol_test$364:>

1850:
old  <	mov byte [rbp + 35], 97>
new  <	; Assign text[5] 50>

1851:
old  <>
new  <	mov byte [rbp + 33], 50>

1852:
old  < strtol_test$367:>
new  <>

1853:
old  <	; Assign text[8] 98>
new  < strtol_test$365:>

1854:
old  <	mov byte [rbp + 36], 98>
new  <	; Assign text[6] 51>

1855:
old  <>
new  <	mov byte [rbp + 34], 51>

1856:
old  < strtol_test$368:>
new  <>

1857:
old  <	; Assign text[9] 99>
new  < strtol_test$366:>

1858:
old  <	mov byte [rbp + 37], 99>
new  <	; Assign text[7] 97>

1859:
old  <>
new  <	mov byte [rbp + 35], 97>

1860:
old  < strtol_test$369:>
new  <>

1861:
old  <	; Assign text[10] 0>
new  < strtol_test$367:>

1862:
old  <	mov byte [rbp + 38], 0>
new  <	; Assign text[8] 98>

1863:
old  <>
new  <	mov byte [rbp + 36], 98>

1864:
old  < strtol_test$370:>
new  <>

1865:
old  <	; PreCall 47 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < strtol_test$368:>

1866:
old  <>
new  <	; Assign text[9] 99>

1867:
old  < strtol_test$371:>
new  <	mov byte [rbp + 37], 99>

1868:
old  <	; Parameter 71 pointer text>
new  <>

1869:
old  <	mov [rbp + 71], rbp>
new  < strtol_test$369:>

1870:
old  <	add qword [rbp + 71], 28>
new  <	; Assign text[10] 0>

1871:
old  <>
new  <	mov byte [rbp + 38], 0>

1872:
old  < strtol_test$372:>
new  <>

1873:
old  <	; Address Â£temporary2245 pointer>
new  < strtol_test$370:>

1874:
old  <	mov rsi, rbp>
new  <	; PreCall 47 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1875:
old  <	add rsi, 39>
new  <>

1876:
old  <>
new  < strtol_test$371:>

1877:
old  < strtol_test$373:>
new  <	; Parameter 71 pointer text>

1878:
old  <	; Parameter 79 pointer Â£temporary2245>
new  <	mov [rbp + 71], rbp>

1879:
old  <	mov [rbp + 79], rsi>
new  <	add qword [rbp + 71], 28>

1881:
old  < strtol_test$374:>
new  < strtol_test$372:>

1882:
old  <	; Parameter 87 signedint base>
new  <	; Address Â£temporary2232 pointer>

1883:
old  <	mov eax, [rbp + 24]>
new  <	mov rsi, rbp>

1884:
old  <	mov [rbp + 87], eax>
new  <	add rsi, 39>

1886:
old  < strtol_test$375:>
new  < strtol_test$373:>

1887:
old  <	; Call 47 strtol 0>
new  <	; Parameter 79 pointer Â£temporary2232>

1888:
old  <	mov qword [rbp + 47], strtol_test$376>
new  <	mov [rbp + 79], rsi>

1889:
old  <	mov [rbp + 55], rbp>
new  <>

1890:
old  <	add rbp, 47>
new  < strtol_test$374:>

1891:
old  <	jmp strtol>
new  <	; Parameter 87 signedint base>

1892:
old  <>
new  <	mov eax, [rbp + 24]>

1893:
old  < strtol_test$376:>
new  <	mov [rbp + 87], eax>

1894:
old  <	; PostCall 47>
new  <>

1895:
old  <>
new  < strtol_test$375:>

1896:
old  < strtol_test$377:>
new  <	; Call 47 strtol 0>

1897:
old  <	; GetReturnValue Â£temporary2246>
new  <	mov qword [rbp + 47], strtol_test$376>

1898:
old  <>
new  <	mov [rbp + 55], rbp>

1899:
old  < strtol_test$378:>
new  <	add rbp, 47>

1900:
old  <	; Assign value Â£temporary2246>
new  <	jmp strtol>

1901:
old  <	mov [rbp + 47], rbx>
new  <>

1902:
old  <>
new  < strtol_test$376:>

1903:
old  < strtol_test$379:>
new  <	; PostCall 47>

1904:
old  <	; PreCall 55 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1905:
old  <>
new  < strtol_test$377:>

1906:
old  < strtol_test$380:>
new  <	; GetReturnValue Â£temporary2233>

1907:
old  <	; Parameter 79 pointer "<%s> <%li> <%s> <%i>\n">
new  <>

1908:
old  <	mov qword [rbp + 79], string_3C25s3E203C25li3E203C25s3E203C25i3E0A#>
new  < strtol_test$378:>

1909:
old  <>
new  <	; Assign value Â£temporary2233>

1910:
old  < strtol_test$381:>
new  <	mov [rbp + 47], rbx>

1911:
old  <	; Parameter 87 pointer text>
new  <>

1912:
old  <	mov [rbp + 87], rbp>
new  < strtol_test$379:>

1913:
old  <	add qword [rbp + 87], 28>
new  <	; PreCall 55 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1915:
old  < strtol_test$382:>
new  < strtol_test$380:>

1916:
old  <	; Parameter 95 signed long int value>
new  <	; Parameter 79 pointer "<%s> <%li> <%s> <%i>\n">

1917:
old  <	mov rax, [rbp + 47]>
new  <	mov qword [rbp + 79], string_3C25s3E203C25li3E203C25s3E203C25i3E0A#>

1918:
old  <	mov [rbp + 95], rax>
new  <>

1919:
old  <>
new  < strtol_test$381:>

1920:
old  < strtol_test$383:>
new  <	; Parameter 87 pointer text>

1921:
old  <	; Parameter 103 pointer pointer>
new  <	mov [rbp + 87], rbp>

1922:
old  <	mov rax, [rbp + 39]>
new  <	add qword [rbp + 87], 28>

1923:
old  <	mov [rbp + 103], rax>
new  <>

1924:
old  <>
new  < strtol_test$382:>

1925:
old  < strtol_test$384:>
new  <	; Parameter 95 signed long int value>

1926:
old  <	; Parameter 111 signedint base>
new  <	mov rax, [rbp + 47]>

1927:
old  <	mov eax, [rbp + 24]>
new  <	mov [rbp + 95], rax>

1928:
old  <	mov [rbp + 111], eax>
new  <>

1929:
old  <>
new  < strtol_test$383:>

1930:
old  < strtol_test$385:>
new  <	; Parameter 103 pointer pointer>

1931:
old  <	; Call 55 printf 28>
new  <	mov rax, [rbp + 39]>

1932:
old  <	mov qword [rbp + 55], strtol_test$386>
new  <	mov [rbp + 103], rax>

1933:
old  <	mov [rbp + 63], rbp>
new  <>

1934:
old  <	add rbp, 55>
new  < strtol_test$384:>

1935:
old  <	mov rdi, rbp>
new  <	; Parameter 111 signedint base>

1936:
old  <	add rdi, 28>
new  <	mov eax, [rbp + 24]>

1937:
old  <	jmp printf>
new  <	mov [rbp + 111], eax>

1939:
old  < strtol_test$386:>
new  < strtol_test$385:>

1940:
old  <	; PostCall 55>
new  <	; Call 55 printf 28>

1941:
old  <>
new  <	mov qword [rbp + 55], strtol_test$386>

1942:
old  < strtol_test$387:>
new  <	mov [rbp + 63], rbp>

1943:
old  <	; Assign base 9>
new  <	add rbp, 55>

1944:
old  <	mov dword [rbp + 24], 9>
new  <	mov rdi, rbp>

1945:
old  <>
new  <	add rdi, 28>

1946:
old  < strtol_test$388:>
new  <	jmp printf>

1947:
old  <	; Assign text[0] 32>
new  <>

1948:
old  <	mov byte [rbp + 28], 32>
new  < strtol_test$386:>

1949:
old  <>
new  <	; PostCall 55>

1950:
old  < strtol_test$389:>
new  <>

1951:
old  <	; Assign text[1] 32>
new  < strtol_test$387:>

1952:
old  <	mov byte [rbp + 29], 32>
new  <	; Assign base 9>

1953:
old  <>
new  <	mov dword [rbp + 24], 9>

1954:
old  < strtol_test$390:>
new  <>

1955:
old  <	; Assign text[2] 32>
new  < strtol_test$388:>

1956:
old  <	mov byte [rbp + 30], 32>
new  <	; Assign text[0] 32>

1957:
old  <>
new  <	mov byte [rbp + 28], 32>

1958:
old  < strtol_test$391:>
new  <>

1959:
old  <	; Assign text[3] 45>
new  < strtol_test$389:>

1960:
old  <	mov byte [rbp + 31], 45>
new  <	; Assign text[1] 32>

1961:
old  <>
new  <	mov byte [rbp + 29], 32>

1962:
old  < strtol_test$392:>
new  <>

1963:
old  <	; Assign text[4] 49>
new  < strtol_test$390:>

1964:
old  <	mov byte [rbp + 32], 49>
new  <	; Assign text[2] 32>

1965:
old  <>
new  <	mov byte [rbp + 30], 32>

1966:
old  < strtol_test$393:>
new  <>

1967:
old  <	; Assign text[5] 50>
new  < strtol_test$391:>

1968:
old  <	mov byte [rbp + 33], 50>
new  <	; Assign text[3] 45>

1969:
old  <>
new  <	mov byte [rbp + 31], 45>

1970:
old  < strtol_test$394:>
new  <>

1971:
old  <	; Assign text[6] 51>
new  < strtol_test$392:>

1972:
old  <	mov byte [rbp + 34], 51>
new  <	; Assign text[4] 49>

1973:
old  <>
new  <	mov byte [rbp + 32], 49>

1974:
old  < strtol_test$395:>
new  <>

1975:
old  <	; Assign text[7] 97>
new  < strtol_test$393:>

1976:
old  <	mov byte [rbp + 35], 97>
new  <	; Assign text[5] 50>

1977:
old  <>
new  <	mov byte [rbp + 33], 50>

1978:
old  < strtol_test$396:>
new  <>

1979:
old  <	; Assign text[8] 98>
new  < strtol_test$394:>

1980:
old  <	mov byte [rbp + 36], 98>
new  <	; Assign text[6] 51>

1981:
old  <>
new  <	mov byte [rbp + 34], 51>

1982:
old  < strtol_test$397:>
new  <>

1983:
old  <	; Assign text[9] 99>
new  < strtol_test$395:>

1984:
old  <	mov byte [rbp + 37], 99>
new  <	; Assign text[7] 97>

1985:
old  <>
new  <	mov byte [rbp + 35], 97>

1986:
old  < strtol_test$398:>
new  <>

1987:
old  <	; Assign text[10] 0>
new  < strtol_test$396:>

1988:
old  <	mov byte [rbp + 38], 0>
new  <	; Assign text[8] 98>

1989:
old  <>
new  <	mov byte [rbp + 36], 98>

1990:
old  < strtol_test$399:>
new  <>

1991:
old  <	; PreCall 47 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < strtol_test$397:>

1992:
old  <>
new  <	; Assign text[9] 99>

1993:
old  < strtol_test$400:>
new  <	mov byte [rbp + 37], 99>

1994:
old  <	; Parameter 71 pointer text>
new  <>

1995:
old  <	mov [rbp + 71], rbp>
new  < strtol_test$398:>

1996:
old  <	add qword [rbp + 71], 28>
new  <	; Assign text[10] 0>

1997:
old  <>
new  <	mov byte [rbp + 38], 0>

1998:
old  < strtol_test$401:>
new  <>

1999:
old  <	; Address Â£temporary2259 pointer>
new  < strtol_test$399:>

2000:
old  <	mov rsi, rbp>
new  <	; PreCall 47 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2001:
old  <	add rsi, 39>
new  <>

2002:
old  <>
new  < strtol_test$400:>

2003:
old  < strtol_test$402:>
new  <	; Parameter 71 pointer text>

2004:
old  <	; Parameter 79 pointer Â£temporary2259>
new  <	mov [rbp + 71], rbp>

2005:
old  <	mov [rbp + 79], rsi>
new  <	add qword [rbp + 71], 28>

2007:
old  < strtol_test$403:>
new  < strtol_test$401:>

2008:
old  <	; Parameter 87 signedint base>
new  <	; Address Â£temporary2246 pointer>

2009:
old  <	mov eax, [rbp + 24]>
new  <	mov rsi, rbp>

2010:
old  <	mov [rbp + 87], eax>
new  <	add rsi, 39>

2012:
old  < strtol_test$404:>
new  < strtol_test$402:>

2013:
old  <	; Call 47 strtol 0>
new  <	; Parameter 79 pointer Â£temporary2246>

2014:
old  <	mov qword [rbp + 47], strtol_test$405>
new  <	mov [rbp + 79], rsi>

2015:
old  <	mov [rbp + 55], rbp>
new  <>

2016:
old  <	add rbp, 47>
new  < strtol_test$403:>

2017:
old  <	jmp strtol>
new  <	; Parameter 87 signedint base>

2018:
old  <>
new  <	mov eax, [rbp + 24]>

2019:
old  < strtol_test$405:>
new  <	mov [rbp + 87], eax>

2020:
old  <	; PostCall 47>
new  <>

2021:
old  <>
new  < strtol_test$404:>

2022:
old  < strtol_test$406:>
new  <	; Call 47 strtol 0>

2023:
old  <	; GetReturnValue Â£temporary2260>
new  <	mov qword [rbp + 47], strtol_test$405>

2024:
old  <>
new  <	mov [rbp + 55], rbp>

2025:
old  < strtol_test$407:>
new  <	add rbp, 47>

2026:
old  <	; Assign value Â£temporary2260>
new  <	jmp strtol>

2027:
old  <	mov [rbp + 47], rbx>
new  <>

2028:
old  <>
new  < strtol_test$405:>

2029:
old  < strtol_test$408:>
new  <	; PostCall 47>

2030:
old  <	; PreCall 55 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

2031:
old  <>
new  < strtol_test$406:>

2032:
old  < strtol_test$409:>
new  <	; GetReturnValue Â£temporary2247>

2033:
old  <	; Parameter 79 pointer "<%s> <%li> <%s> <%i>\n">
new  <>

2034:
old  <	mov qword [rbp + 79], string_3C25s3E203C25li3E203C25s3E203C25i3E0A#>
new  < strtol_test$407:>

2035:
old  <>
new  <	; Assign value Â£temporary2247>

2036:
old  < strtol_test$410:>
new  <	mov [rbp + 47], rbx>

2037:
old  <	; Parameter 87 pointer text>
new  <>

2038:
old  <	mov [rbp + 87], rbp>
new  < strtol_test$408:>

2039:
old  <	add qword [rbp + 87], 28>
new  <	; PreCall 55 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2041:
old  < strtol_test$411:>
new  < strtol_test$409:>

2042:
old  <	; Parameter 95 signed long int value>
new  <	; Parameter 79 pointer "<%s> <%li> <%s> <%i>\n">

2043:
old  <	mov rax, [rbp + 47]>
new  <	mov qword [rbp + 79], string_3C25s3E203C25li3E203C25s3E203C25i3E0A#>

2044:
old  <	mov [rbp + 95], rax>
new  <>

2045:
old  <>
new  < strtol_test$410:>

2046:
old  < strtol_test$412:>
new  <	; Parameter 87 pointer text>

2047:
old  <	; Parameter 103 pointer pointer>
new  <	mov [rbp + 87], rbp>

2048:
old  <	mov rax, [rbp + 39]>
new  <	add qword [rbp + 87], 28>

2049:
old  <	mov [rbp + 103], rax>
new  <>

2050:
old  <>
new  < strtol_test$411:>

2051:
old  < strtol_test$413:>
new  <	; Parameter 95 signed long int value>

2052:
old  <	; Parameter 111 signedint base>
new  <	mov rax, [rbp + 47]>

2053:
old  <	mov eax, [rbp + 24]>
new  <	mov [rbp + 95], rax>

2054:
old  <	mov [rbp + 111], eax>
new  <>

2055:
old  <>
new  < strtol_test$412:>

2056:
old  < strtol_test$414:>
new  <	; Parameter 103 pointer pointer>

2057:
old  <	; Call 55 printf 28>
new  <	mov rax, [rbp + 39]>

2058:
old  <	mov qword [rbp + 55], strtol_test$415>
new  <	mov [rbp + 103], rax>

2059:
old  <	mov [rbp + 63], rbp>
new  <>

2060:
old  <	add rbp, 55>
new  < strtol_test$413:>

2061:
old  <	mov rdi, rbp>
new  <	; Parameter 111 signedint base>

2062:
old  <	add rdi, 28>
new  <	mov eax, [rbp + 24]>

2063:
old  <	jmp printf>
new  <	mov [rbp + 111], eax>

2065:
old  < strtol_test$415:>
new  < strtol_test$414:>

2066:
old  <	; PostCall 55>
new  <	; Call 55 printf 28>

2067:
old  <>
new  <	mov qword [rbp + 55], strtol_test$415>

2068:
old  < strtol_test$416:>
new  <	mov [rbp + 63], rbp>

2069:
old  <	; Assign base 10>
new  <	add rbp, 55>

2070:
old  <	mov dword [rbp + 24], 10>
new  <	mov rdi, rbp>

2071:
old  <>
new  <	add rdi, 28>

2072:
old  < strtol_test$417:>
new  <	jmp printf>

2073:
old  <	; Assign text[0] 32>
new  <>

2074:
old  <	mov byte [rbp + 28], 32>
new  < strtol_test$415:>

2075:
old  <>
new  <	; PostCall 55>

2076:
old  < strtol_test$418:>
new  <>

2077:
old  <	; Assign text[1] 32>
new  < strtol_test$416:>

2078:
old  <	mov byte [rbp + 29], 32>
new  <	; Assign base 10>

2079:
old  <>
new  <	mov dword [rbp + 24], 10>

2080:
old  < strtol_test$419:>
new  <>

2081:
old  <	; Assign text[2] 32>
new  < strtol_test$417:>

2082:
old  <	mov byte [rbp + 30], 32>
new  <	; Assign text[0] 32>

2083:
old  <>
new  <	mov byte [rbp + 28], 32>

2084:
old  < strtol_test$420:>
new  <>

2085:
old  <	; Assign text[3] 45>
new  < strtol_test$418:>

2086:
old  <	mov byte [rbp + 31], 45>
new  <	; Assign text[1] 32>

2087:
old  <>
new  <	mov byte [rbp + 29], 32>

2088:
old  < strtol_test$421:>
new  <>

2089:
old  <	; Assign text[4] 49>
new  < strtol_test$419:>

2090:
old  <	mov byte [rbp + 32], 49>
new  <	; Assign text[2] 32>

2091:
old  <>
new  <	mov byte [rbp + 30], 32>

2092:
old  < strtol_test$422:>
new  <>

2093:
old  <	; Assign text[5] 50>
new  < strtol_test$420:>

2094:
old  <	mov byte [rbp + 33], 50>
new  <	; Assign text[3] 45>

2095:
old  <>
new  <	mov byte [rbp + 31], 45>

2096:
old  < strtol_test$423:>
new  <>

2097:
old  <	; Assign text[6] 51>
new  < strtol_test$421:>

2098:
old  <	mov byte [rbp + 34], 51>
new  <	; Assign text[4] 49>

2099:
old  <>
new  <	mov byte [rbp + 32], 49>

2100:
old  < strtol_test$424:>
new  <>

2101:
old  <	; Assign text[7] 97>
new  < strtol_test$422:>

2102:
old  <	mov byte [rbp + 35], 97>
new  <	; Assign text[5] 50>

2103:
old  <>
new  <	mov byte [rbp + 33], 50>

2104:
old  < strtol_test$425:>
new  <>

2105:
old  <	; Assign text[8] 98>
new  < strtol_test$423:>

2106:
old  <	mov byte [rbp + 36], 98>
new  <	; Assign text[6] 51>

2107:
old  <>
new  <	mov byte [rbp + 34], 51>

2108:
old  < strtol_test$426:>
new  <>

2109:
old  <	; Assign text[9] 99>
new  < strtol_test$424:>

2110:
old  <	mov byte [rbp + 37], 99>
new  <	; Assign text[7] 97>

2111:
old  <>
new  <	mov byte [rbp + 35], 97>

2112:
old  < strtol_test$427:>
new  <>

2113:
old  <	; Assign text[10] 0>
new  < strtol_test$425:>

2114:
old  <	mov byte [rbp + 38], 0>
new  <	; Assign text[8] 98>

2115:
old  <>
new  <	mov byte [rbp + 36], 98>

2116:
old  < strtol_test$428:>
new  <>

2117:
old  <	; PreCall 47 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < strtol_test$426:>

2118:
old  <>
new  <	; Assign text[9] 99>

2119:
old  < strtol_test$429:>
new  <	mov byte [rbp + 37], 99>

2120:
old  <	; Parameter 71 pointer text>
new  <>

2121:
old  <	mov [rbp + 71], rbp>
new  < strtol_test$427:>

2122:
old  <	add qword [rbp + 71], 28>
new  <	; Assign text[10] 0>

2123:
old  <>
new  <	mov byte [rbp + 38], 0>

2124:
old  < strtol_test$430:>
new  <>

2125:
old  <	; Address Â£temporary2273 pointer>
new  < strtol_test$428:>

2126:
old  <	mov rsi, rbp>
new  <	; PreCall 47 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2127:
old  <	add rsi, 39>
new  <>

2128:
old  <>
new  < strtol_test$429:>

2129:
old  < strtol_test$431:>
new  <	; Parameter 71 pointer text>

2130:
old  <	; Parameter 79 pointer Â£temporary2273>
new  <	mov [rbp + 71], rbp>

2131:
old  <	mov [rbp + 79], rsi>
new  <	add qword [rbp + 71], 28>

2133:
old  < strtol_test$432:>
new  < strtol_test$430:>

2134:
old  <	; Parameter 87 signedint base>
new  <	; Address Â£temporary2260 pointer>

2135:
old  <	mov eax, [rbp + 24]>
new  <	mov rsi, rbp>

2136:
old  <	mov [rbp + 87], eax>
new  <	add rsi, 39>

2138:
old  < strtol_test$433:>
new  < strtol_test$431:>

2139:
old  <	; Call 47 strtol 0>
new  <	; Parameter 79 pointer Â£temporary2260>

2140:
old  <	mov qword [rbp + 47], strtol_test$434>
new  <	mov [rbp + 79], rsi>

2141:
old  <	mov [rbp + 55], rbp>
new  <>

2142:
old  <	add rbp, 47>
new  < strtol_test$432:>

2143:
old  <	jmp strtol>
new  <	; Parameter 87 signedint base>

2144:
old  <>
new  <	mov eax, [rbp + 24]>

2145:
old  < strtol_test$434:>
new  <	mov [rbp + 87], eax>

2146:
old  <	; PostCall 47>
new  <>

2147:
old  <>
new  < strtol_test$433:>

2148:
old  < strtol_test$435:>
new  <	; Call 47 strtol 0>

2149:
old  <	; GetReturnValue Â£temporary2274>
new  <	mov qword [rbp + 47], strtol_test$434>

2150:
old  <>
new  <	mov [rbp + 55], rbp>

2151:
old  < strtol_test$436:>
new  <	add rbp, 47>

2152:
old  <	; Assign value Â£temporary2274>
new  <	jmp strtol>

2153:
old  <	mov [rbp + 47], rbx>
new  <>

2154:
old  <>
new  < strtol_test$434:>

2155:
old  < strtol_test$437:>
new  <	; PostCall 47>

2156:
old  <	; PreCall 55 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

2157:
old  <>
new  < strtol_test$435:>

2158:
old  < strtol_test$438:>
new  <	; GetReturnValue Â£temporary2261>

2159:
old  <	; Parameter 79 pointer "<%s> <%li> <%s> <%i>\n">
new  <>

2160:
old  <	mov qword [rbp + 79], string_3C25s3E203C25li3E203C25s3E203C25i3E0A#>
new  < strtol_test$436:>

2161:
old  <>
new  <	; Assign value Â£temporary2261>

2162:
old  < strtol_test$439:>
new  <	mov [rbp + 47], rbx>

2163:
old  <	; Parameter 87 pointer text>
new  <>

2164:
old  <	mov [rbp + 87], rbp>
new  < strtol_test$437:>

2165:
old  <	add qword [rbp + 87], 28>
new  <	; PreCall 55 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2167:
old  < strtol_test$440:>
new  < strtol_test$438:>

2168:
old  <	; Parameter 95 signed long int value>
new  <	; Parameter 79 pointer "<%s> <%li> <%s> <%i>\n">

2169:
old  <	mov rax, [rbp + 47]>
new  <	mov qword [rbp + 79], string_3C25s3E203C25li3E203C25s3E203C25i3E0A#>

2170:
old  <	mov [rbp + 95], rax>
new  <>

2171:
old  <>
new  < strtol_test$439:>

2172:
old  < strtol_test$441:>
new  <	; Parameter 87 pointer text>

2173:
old  <	; Parameter 103 pointer pointer>
new  <	mov [rbp + 87], rbp>

2174:
old  <	mov rax, [rbp + 39]>
new  <	add qword [rbp + 87], 28>

2175:
old  <	mov [rbp + 103], rax>
new  <>

2176:
old  <>
new  < strtol_test$440:>

2177:
old  < strtol_test$442:>
new  <	; Parameter 95 signed long int value>

2178:
old  <	; Parameter 111 signedint base>
new  <	mov rax, [rbp + 47]>

2179:
old  <	mov eax, [rbp + 24]>
new  <	mov [rbp + 95], rax>

2180:
old  <	mov [rbp + 111], eax>
new  <>

2181:
old  <>
new  < strtol_test$441:>

2182:
old  < strtol_test$443:>
new  <	; Parameter 103 pointer pointer>

2183:
old  <	; Call 55 printf 28>
new  <	mov rax, [rbp + 39]>

2184:
old  <	mov qword [rbp + 55], strtol_test$444>
new  <	mov [rbp + 103], rax>

2185:
old  <	mov [rbp + 63], rbp>
new  <>

2186:
old  <	add rbp, 55>
new  < strtol_test$442:>

2187:
old  <	mov rdi, rbp>
new  <	; Parameter 111 signedint base>

2188:
old  <	add rdi, 28>
new  <	mov eax, [rbp + 24]>

2189:
old  <	jmp printf>
new  <	mov [rbp + 111], eax>

2191:
old  < strtol_test$444:>
new  < strtol_test$443:>

2192:
old  <	; PostCall 55>
new  <	; Call 55 printf 28>

2193:
old  <>
new  <	mov qword [rbp + 55], strtol_test$444>

2194:
old  < strtol_test$445:>
new  <	mov [rbp + 63], rbp>

2195:
old  <	; Assign base 11>
new  <	add rbp, 55>

2196:
old  <	mov dword [rbp + 24], 11>
new  <	mov rdi, rbp>

2197:
old  <>
new  <	add rdi, 28>

2198:
old  < strtol_test$446:>
new  <	jmp printf>

2199:
old  <	; Assign text[0] 32>
new  <>

2200:
old  <	mov byte [rbp + 28], 32>
new  < strtol_test$444:>

2201:
old  <>
new  <	; PostCall 55>

2202:
old  < strtol_test$447:>
new  <>

2203:
old  <	; Assign text[1] 32>
new  < strtol_test$445:>

2204:
old  <	mov byte [rbp + 29], 32>
new  <	; Assign base 11>

2205:
old  <>
new  <	mov dword [rbp + 24], 11>

2206:
old  < strtol_test$448:>
new  <>

2207:
old  <	; Assign text[2] 32>
new  < strtol_test$446:>

2208:
old  <	mov byte [rbp + 30], 32>
new  <	; Assign text[0] 32>

2209:
old  <>
new  <	mov byte [rbp + 28], 32>

2210:
old  < strtol_test$449:>
new  <>

2211:
old  <	; Assign text[3] 45>
new  < strtol_test$447:>

2212:
old  <	mov byte [rbp + 31], 45>
new  <	; Assign text[1] 32>

2213:
old  <>
new  <	mov byte [rbp + 29], 32>

2214:
old  < strtol_test$450:>
new  <>

2215:
old  <	; Assign text[4] 49>
new  < strtol_test$448:>

2216:
old  <	mov byte [rbp + 32], 49>
new  <	; Assign text[2] 32>

2217:
old  <>
new  <	mov byte [rbp + 30], 32>

2218:
old  < strtol_test$451:>
new  <>

2219:
old  <	; Assign text[5] 50>
new  < strtol_test$449:>

2220:
old  <	mov byte [rbp + 33], 50>
new  <	; Assign text[3] 45>

2221:
old  <>
new  <	mov byte [rbp + 31], 45>

2222:
old  < strtol_test$452:>
new  <>

2223:
old  <	; Assign text[6] 51>
new  < strtol_test$450:>

2224:
old  <	mov byte [rbp + 34], 51>
new  <	; Assign text[4] 49>

2225:
old  <>
new  <	mov byte [rbp + 32], 49>

2226:
old  < strtol_test$453:>
new  <>

2227:
old  <	; Assign text[7] 97>
new  < strtol_test$451:>

2228:
old  <	mov byte [rbp + 35], 97>
new  <	; Assign text[5] 50>

2229:
old  <>
new  <	mov byte [rbp + 33], 50>

2230:
old  < strtol_test$454:>
new  <>

2231:
old  <	; Assign text[8] 98>
new  < strtol_test$452:>

2232:
old  <	mov byte [rbp + 36], 98>
new  <	; Assign text[6] 51>

2233:
old  <>
new  <	mov byte [rbp + 34], 51>

2234:
old  < strtol_test$455:>
new  <>

2235:
old  <	; Assign text[9] 99>
new  < strtol_test$453:>

2236:
old  <	mov byte [rbp + 37], 99>
new  <	; Assign text[7] 97>

2237:
old  <>
new  <	mov byte [rbp + 35], 97>

2238:
old  < strtol_test$456:>
new  <>

2239:
old  <	; Assign text[10] 0>
new  < strtol_test$454:>

2240:
old  <	mov byte [rbp + 38], 0>
new  <	; Assign text[8] 98>

2241:
old  <>
new  <	mov byte [rbp + 36], 98>

2242:
old  < strtol_test$457:>
new  <>

2243:
old  <	; PreCall 47 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < strtol_test$455:>

2244:
old  <>
new  <	; Assign text[9] 99>

2245:
old  < strtol_test$458:>
new  <	mov byte [rbp + 37], 99>

2246:
old  <	; Parameter 71 pointer text>
new  <>

2247:
old  <	mov [rbp + 71], rbp>
new  < strtol_test$456:>

2248:
old  <	add qword [rbp + 71], 28>
new  <	; Assign text[10] 0>

2249:
old  <>
new  <	mov byte [rbp + 38], 0>

2250:
old  < strtol_test$459:>
new  <>

2251:
old  <	; Address Â£temporary2287 pointer>
new  < strtol_test$457:>

2252:
old  <	mov rsi, rbp>
new  <	; PreCall 47 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2253:
old  <	add rsi, 39>
new  <>

2254:
old  <>
new  < strtol_test$458:>

2255:
old  < strtol_test$460:>
new  <	; Parameter 71 pointer text>

2256:
old  <	; Parameter 79 pointer Â£temporary2287>
new  <	mov [rbp + 71], rbp>

2257:
old  <	mov [rbp + 79], rsi>
new  <	add qword [rbp + 71], 28>

2259:
old  < strtol_test$461:>
new  < strtol_test$459:>

2260:
old  <	; Parameter 87 signedint base>
new  <	; Address Â£temporary2274 pointer>

2261:
old  <	mov eax, [rbp + 24]>
new  <	mov rsi, rbp>

2262:
old  <	mov [rbp + 87], eax>
new  <	add rsi, 39>

2264:
old  < strtol_test$462:>
new  < strtol_test$460:>

2265:
old  <	; Call 47 strtol 0>
new  <	; Parameter 79 pointer Â£temporary2274>

2266:
old  <	mov qword [rbp + 47], strtol_test$463>
new  <	mov [rbp + 79], rsi>

2267:
old  <	mov [rbp + 55], rbp>
new  <>

2268:
old  <	add rbp, 47>
new  < strtol_test$461:>

2269:
old  <	jmp strtol>
new  <	; Parameter 87 signedint base>

2270:
old  <>
new  <	mov eax, [rbp + 24]>

2271:
old  < strtol_test$463:>
new  <	mov [rbp + 87], eax>

2272:
old  <	; PostCall 47>
new  <>

2273:
old  <>
new  < strtol_test$462:>

2274:
old  < strtol_test$464:>
new  <	; Call 47 strtol 0>

2275:
old  <	; GetReturnValue Â£temporary2288>
new  <	mov qword [rbp + 47], strtol_test$463>

2276:
old  <>
new  <	mov [rbp + 55], rbp>

2277:
old  < strtol_test$465:>
new  <	add rbp, 47>

2278:
old  <	; Assign value Â£temporary2288>
new  <	jmp strtol>

2279:
old  <	mov [rbp + 47], rbx>
new  <>

2280:
old  <>
new  < strtol_test$463:>

2281:
old  < strtol_test$466:>
new  <	; PostCall 47>

2282:
old  <	; PreCall 55 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

2283:
old  <>
new  < strtol_test$464:>

2284:
old  < strtol_test$467:>
new  <	; GetReturnValue Â£temporary2275>

2285:
old  <	; Parameter 79 pointer "<%s> <%li> <%s> <%i>\n">
new  <>

2286:
old  <	mov qword [rbp + 79], string_3C25s3E203C25li3E203C25s3E203C25i3E0A#>
new  < strtol_test$465:>

2287:
old  <>
new  <	; Assign value Â£temporary2275>

2288:
old  < strtol_test$468:>
new  <	mov [rbp + 47], rbx>

2289:
old  <	; Parameter 87 pointer text>
new  <>

2290:
old  <	mov [rbp + 87], rbp>
new  < strtol_test$466:>

2291:
old  <	add qword [rbp + 87], 28>
new  <	; PreCall 55 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2293:
old  < strtol_test$469:>
new  < strtol_test$467:>

2294:
old  <	; Parameter 95 signed long int value>
new  <	; Parameter 79 pointer "<%s> <%li> <%s> <%i>\n">

2295:
old  <	mov rax, [rbp + 47]>
new  <	mov qword [rbp + 79], string_3C25s3E203C25li3E203C25s3E203C25i3E0A#>

2296:
old  <	mov [rbp + 95], rax>
new  <>

2297:
old  <>
new  < strtol_test$468:>

2298:
old  < strtol_test$470:>
new  <	; Parameter 87 pointer text>

2299:
old  <	; Parameter 103 pointer pointer>
new  <	mov [rbp + 87], rbp>

2300:
old  <	mov rax, [rbp + 39]>
new  <	add qword [rbp + 87], 28>

2301:
old  <	mov [rbp + 103], rax>
new  <>

2302:
old  <>
new  < strtol_test$469:>

2303:
old  < strtol_test$471:>
new  <	; Parameter 95 signed long int value>

2304:
old  <	; Parameter 111 signedint base>
new  <	mov rax, [rbp + 47]>

2305:
old  <	mov eax, [rbp + 24]>
new  <	mov [rbp + 95], rax>

2306:
old  <	mov [rbp + 111], eax>
new  <>

2307:
old  <>
new  < strtol_test$470:>

2308:
old  < strtol_test$472:>
new  <	; Parameter 103 pointer pointer>

2309:
old  <	; Call 55 printf 28>
new  <	mov rax, [rbp + 39]>

2310:
old  <	mov qword [rbp + 55], strtol_test$473>
new  <	mov [rbp + 103], rax>

2311:
old  <	mov [rbp + 63], rbp>
new  <>

2312:
old  <	add rbp, 55>
new  < strtol_test$471:>

2313:
old  <	mov rdi, rbp>
new  <	; Parameter 111 signedint base>

2314:
old  <	add rdi, 28>
new  <	mov eax, [rbp + 24]>

2315:
old  <	jmp printf>
new  <	mov [rbp + 111], eax>

2317:
old  < strtol_test$473:>
new  < strtol_test$472:>

2318:
old  <	; PostCall 55>
new  <	; Call 55 printf 28>

2319:
old  <>
new  <	mov qword [rbp + 55], strtol_test$473>

2320:
old  < strtol_test$474:>
new  <	mov [rbp + 63], rbp>

2321:
old  <	; Assign base 12>
new  <	add rbp, 55>

2322:
old  <	mov dword [rbp + 24], 12>
new  <	mov rdi, rbp>

2323:
old  <>
new  <	add rdi, 28>

2324:
old  < strtol_test$475:>
new  <	jmp printf>

2325:
old  <	; Assign text[0] 32>
new  <>

2326:
old  <	mov byte [rbp + 28], 32>
new  < strtol_test$473:>

2327:
old  <>
new  <	; PostCall 55>

2328:
old  < strtol_test$476:>
new  <>

2329:
old  <	; Assign text[1] 32>
new  < strtol_test$474:>

2330:
old  <	mov byte [rbp + 29], 32>
new  <	; Assign base 12>

2331:
old  <>
new  <	mov dword [rbp + 24], 12>

2332:
old  < strtol_test$477:>
new  <>

2333:
old  <	; Assign text[2] 32>
new  < strtol_test$475:>

2334:
old  <	mov byte [rbp + 30], 32>
new  <	; Assign text[0] 32>

2335:
old  <>
new  <	mov byte [rbp + 28], 32>

2336:
old  < strtol_test$478:>
new  <>

2337:
old  <	; Assign text[3] 45>
new  < strtol_test$476:>

2338:
old  <	mov byte [rbp + 31], 45>
new  <	; Assign text[1] 32>

2339:
old  <>
new  <	mov byte [rbp + 29], 32>

2340:
old  < strtol_test$479:>
new  <>

2341:
old  <	; Assign text[4] 49>
new  < strtol_test$477:>

2342:
old  <	mov byte [rbp + 32], 49>
new  <	; Assign text[2] 32>

2343:
old  <>
new  <	mov byte [rbp + 30], 32>

2344:
old  < strtol_test$480:>
new  <>

2345:
old  <	; Assign text[5] 50>
new  < strtol_test$478:>

2346:
old  <	mov byte [rbp + 33], 50>
new  <	; Assign text[3] 45>

2347:
old  <>
new  <	mov byte [rbp + 31], 45>

2348:
old  < strtol_test$481:>
new  <>

2349:
old  <	; Assign text[6] 51>
new  < strtol_test$479:>

2350:
old  <	mov byte [rbp + 34], 51>
new  <	; Assign text[4] 49>

2351:
old  <>
new  <	mov byte [rbp + 32], 49>

2352:
old  < strtol_test$482:>
new  <>

2353:
old  <	; Assign text[7] 65>
new  < strtol_test$480:>

2354:
old  <	mov byte [rbp + 35], 65>
new  <	; Assign text[5] 50>

2355:
old  <>
new  <	mov byte [rbp + 33], 50>

2356:
old  < strtol_test$483:>
new  <>

2357:
old  <	; Assign text[8] 66>
new  < strtol_test$481:>

2358:
old  <	mov byte [rbp + 36], 66>
new  <	; Assign text[6] 51>

2359:
old  <>
new  <	mov byte [rbp + 34], 51>

2360:
old  < strtol_test$484:>
new  <>

2361:
old  <	; Assign text[9] 67>
new  < strtol_test$482:>

2362:
old  <	mov byte [rbp + 37], 67>
new  <	; Assign text[7] 65>

2363:
old  <>
new  <	mov byte [rbp + 35], 65>

2364:
old  < strtol_test$485:>
new  <>

2365:
old  <	; Assign text[10] 0>
new  < strtol_test$483:>

2366:
old  <	mov byte [rbp + 38], 0>
new  <	; Assign text[8] 66>

2367:
old  <>
new  <	mov byte [rbp + 36], 66>

2368:
old  < strtol_test$486:>
new  <>

2369:
old  <	; PreCall 47 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < strtol_test$484:>

2370:
old  <>
new  <	; Assign text[9] 67>

2371:
old  < strtol_test$487:>
new  <	mov byte [rbp + 37], 67>

2372:
old  <	; Parameter 71 pointer text>
new  <>

2373:
old  <	mov [rbp + 71], rbp>
new  < strtol_test$485:>

2374:
old  <	add qword [rbp + 71], 28>
new  <	; Assign text[10] 0>

2375:
old  <>
new  <	mov byte [rbp + 38], 0>

2376:
old  < strtol_test$488:>
new  <>

2377:
old  <	; Address Â£temporary2301 pointer>
new  < strtol_test$486:>

2378:
old  <	mov rsi, rbp>
new  <	; PreCall 47 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2379:
old  <	add rsi, 39>
new  <>

2380:
old  <>
new  < strtol_test$487:>

2381:
old  < strtol_test$489:>
new  <	; Parameter 71 pointer text>

2382:
old  <	; Parameter 79 pointer Â£temporary2301>
new  <	mov [rbp + 71], rbp>

2383:
old  <	mov [rbp + 79], rsi>
new  <	add qword [rbp + 71], 28>

2385:
old  < strtol_test$490:>
new  < strtol_test$488:>

2386:
old  <	; Parameter 87 signedint base>
new  <	; Address Â£temporary2288 pointer>

2387:
old  <	mov eax, [rbp + 24]>
new  <	mov rsi, rbp>

2388:
old  <	mov [rbp + 87], eax>
new  <	add rsi, 39>

2390:
old  < strtol_test$491:>
new  < strtol_test$489:>

2391:
old  <	; Call 47 strtol 0>
new  <	; Parameter 79 pointer Â£temporary2288>

2392:
old  <	mov qword [rbp + 47], strtol_test$492>
new  <	mov [rbp + 79], rsi>

2393:
old  <	mov [rbp + 55], rbp>
new  <>

2394:
old  <	add rbp, 47>
new  < strtol_test$490:>

2395:
old  <	jmp strtol>
new  <	; Parameter 87 signedint base>

2396:
old  <>
new  <	mov eax, [rbp + 24]>

2397:
old  < strtol_test$492:>
new  <	mov [rbp + 87], eax>

2398:
old  <	; PostCall 47>
new  <>

2399:
old  <>
new  < strtol_test$491:>

2400:
old  < strtol_test$493:>
new  <	; Call 47 strtol 0>

2401:
old  <	; GetReturnValue Â£temporary2302>
new  <	mov qword [rbp + 47], strtol_test$492>

2402:
old  <>
new  <	mov [rbp + 55], rbp>

2403:
old  < strtol_test$494:>
new  <	add rbp, 47>

2404:
old  <	; Assign value Â£temporary2302>
new  <	jmp strtol>

2405:
old  <	mov [rbp + 47], rbx>
new  <>

2406:
old  <>
new  < strtol_test$492:>

2407:
old  < strtol_test$495:>
new  <	; PostCall 47>

2408:
old  <	; PreCall 55 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

2409:
old  <>
new  < strtol_test$493:>

2410:
old  < strtol_test$496:>
new  <	; GetReturnValue Â£temporary2289>

2411:
old  <	; Parameter 79 pointer "<%s> <%li> <%s> <%i>\n">
new  <>

2412:
old  <	mov qword [rbp + 79], string_3C25s3E203C25li3E203C25s3E203C25i3E0A#>
new  < strtol_test$494:>

2413:
old  <>
new  <	; Assign value Â£temporary2289>

2414:
old  < strtol_test$497:>
new  <	mov [rbp + 47], rbx>

2415:
old  <	; Parameter 87 pointer text>
new  <>

2416:
old  <	mov [rbp + 87], rbp>
new  < strtol_test$495:>

2417:
old  <	add qword [rbp + 87], 28>
new  <	; PreCall 55 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2419:
old  < strtol_test$498:>
new  < strtol_test$496:>

2420:
old  <	; Parameter 95 signed long int value>
new  <	; Parameter 79 pointer "<%s> <%li> <%s> <%i>\n">

2421:
old  <	mov rax, [rbp + 47]>
new  <	mov qword [rbp + 79], string_3C25s3E203C25li3E203C25s3E203C25i3E0A#>

2422:
old  <	mov [rbp + 95], rax>
new  <>

2423:
old  <>
new  < strtol_test$497:>

2424:
old  < strtol_test$499:>
new  <	; Parameter 87 pointer text>

2425:
old  <	; Parameter 103 pointer pointer>
new  <	mov [rbp + 87], rbp>

2426:
old  <	mov rax, [rbp + 39]>
new  <	add qword [rbp + 87], 28>

2427:
old  <	mov [rbp + 103], rax>
new  <>

2428:
old  <>
new  < strtol_test$498:>

2429:
old  < strtol_test$500:>
new  <	; Parameter 95 signed long int value>

2430:
old  <	; Parameter 111 signedint base>
new  <	mov rax, [rbp + 47]>

2431:
old  <	mov eax, [rbp + 24]>
new  <	mov [rbp + 95], rax>

2432:
old  <	mov [rbp + 111], eax>
new  <>

2433:
old  <>
new  < strtol_test$499:>

2434:
old  < strtol_test$501:>
new  <	; Parameter 103 pointer pointer>

2435:
old  <	; Call 55 printf 28>
new  <	mov rax, [rbp + 39]>

2436:
old  <	mov qword [rbp + 55], strtol_test$502>
new  <	mov [rbp + 103], rax>

2437:
old  <	mov [rbp + 63], rbp>
new  <>

2438:
old  <	add rbp, 55>
new  < strtol_test$500:>

2439:
old  <	mov rdi, rbp>
new  <	; Parameter 111 signedint base>

2440:
old  <	add rdi, 28>
new  <	mov eax, [rbp + 24]>

2441:
old  <	jmp printf>
new  <	mov [rbp + 111], eax>

2443:
old  < strtol_test$502:>
new  < strtol_test$501:>

2444:
old  <	; PostCall 55>
new  <	; Call 55 printf 28>

2445:
old  <>
new  <	mov qword [rbp + 55], strtol_test$502>

2446:
old  < strtol_test$503:>
new  <	mov [rbp + 63], rbp>

2447:
old  <	; Assign base 13>
new  <	add rbp, 55>

2448:
old  <	mov dword [rbp + 24], 13>
new  <	mov rdi, rbp>

2449:
old  <>
new  <	add rdi, 28>

2450:
old  < strtol_test$504:>
new  <	jmp printf>

2451:
old  <	; Assign text[0] 32>
new  <>

2452:
old  <	mov byte [rbp + 28], 32>
new  < strtol_test$502:>

2453:
old  <>
new  <	; PostCall 55>

2454:
old  < strtol_test$505:>
new  <>

2455:
old  <	; Assign text[1] 32>
new  < strtol_test$503:>

2456:
old  <	mov byte [rbp + 29], 32>
new  <	; Assign base 13>

2457:
old  <>
new  <	mov dword [rbp + 24], 13>

2458:
old  < strtol_test$506:>
new  <>

2459:
old  <	; Assign text[2] 32>
new  < strtol_test$504:>

2460:
old  <	mov byte [rbp + 30], 32>
new  <	; Assign text[0] 32>

2461:
old  <>
new  <	mov byte [rbp + 28], 32>

2462:
old  < strtol_test$507:>
new  <>

2463:
old  <	; Assign text[3] 45>
new  < strtol_test$505:>

2464:
old  <	mov byte [rbp + 31], 45>
new  <	; Assign text[1] 32>

2465:
old  <>
new  <	mov byte [rbp + 29], 32>

2466:
old  < strtol_test$508:>
new  <>

2467:
old  <	; Assign text[4] 49>
new  < strtol_test$506:>

2468:
old  <	mov byte [rbp + 32], 49>
new  <	; Assign text[2] 32>

2469:
old  <>
new  <	mov byte [rbp + 30], 32>

2470:
old  < strtol_test$509:>
new  <>

2471:
old  <	; Assign text[5] 50>
new  < strtol_test$507:>

2472:
old  <	mov byte [rbp + 33], 50>
new  <	; Assign text[3] 45>

2473:
old  <>
new  <	mov byte [rbp + 31], 45>

2474:
old  < strtol_test$510:>
new  <>

2475:
old  <	; Assign text[6] 51>
new  < strtol_test$508:>

2476:
old  <	mov byte [rbp + 34], 51>
new  <	; Assign text[4] 49>

2477:
old  <>
new  <	mov byte [rbp + 32], 49>

2478:
old  < strtol_test$511:>
new  <>

2479:
old  <	; Assign text[7] 97>
new  < strtol_test$509:>

2480:
old  <	mov byte [rbp + 35], 97>
new  <	; Assign text[5] 50>

2481:
old  <>
new  <	mov byte [rbp + 33], 50>

2482:
old  < strtol_test$512:>
new  <>

2483:
old  <	; Assign text[8] 98>
new  < strtol_test$510:>

2484:
old  <	mov byte [rbp + 36], 98>
new  <	; Assign text[6] 51>

2485:
old  <>
new  <	mov byte [rbp + 34], 51>

2486:
old  < strtol_test$513:>
new  <>

2487:
old  <	; Assign text[9] 99>
new  < strtol_test$511:>

2488:
old  <	mov byte [rbp + 37], 99>
new  <	; Assign text[7] 97>

2489:
old  <>
new  <	mov byte [rbp + 35], 97>

2490:
old  < strtol_test$514:>
new  <>

2491:
old  <	; Assign text[10] 0>
new  < strtol_test$512:>

2492:
old  <	mov byte [rbp + 38], 0>
new  <	; Assign text[8] 98>

2493:
old  <>
new  <	mov byte [rbp + 36], 98>

2494:
old  < strtol_test$515:>
new  <>

2495:
old  <	; PreCall 47 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < strtol_test$513:>

2496:
old  <>
new  <	; Assign text[9] 99>

2497:
old  < strtol_test$516:>
new  <	mov byte [rbp + 37], 99>

2498:
old  <	; Parameter 71 pointer text>
new  <>

2499:
old  <	mov [rbp + 71], rbp>
new  < strtol_test$514:>

2500:
old  <	add qword [rbp + 71], 28>
new  <	; Assign text[10] 0>

2501:
old  <>
new  <	mov byte [rbp + 38], 0>

2502:
old  < strtol_test$517:>
new  <>

2503:
old  <	; Address Â£temporary2315 pointer>
new  < strtol_test$515:>

2504:
old  <	mov rsi, rbp>
new  <	; PreCall 47 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2505:
old  <	add rsi, 39>
new  <>

2506:
old  <>
new  < strtol_test$516:>

2507:
old  < strtol_test$518:>
new  <	; Parameter 71 pointer text>

2508:
old  <	; Parameter 79 pointer Â£temporary2315>
new  <	mov [rbp + 71], rbp>

2509:
old  <	mov [rbp + 79], rsi>
new  <	add qword [rbp + 71], 28>

2511:
old  < strtol_test$519:>
new  < strtol_test$517:>

2512:
old  <	; Parameter 87 signedint base>
new  <	; Address Â£temporary2302 pointer>

2513:
old  <	mov eax, [rbp + 24]>
new  <	mov rsi, rbp>

2514:
old  <	mov [rbp + 87], eax>
new  <	add rsi, 39>

2516:
old  < strtol_test$520:>
new  < strtol_test$518:>

2517:
old  <	; Call 47 strtol 0>
new  <	; Parameter 79 pointer Â£temporary2302>

2518:
old  <	mov qword [rbp + 47], strtol_test$521>
new  <	mov [rbp + 79], rsi>

2519:
old  <	mov [rbp + 55], rbp>
new  <>

2520:
old  <	add rbp, 47>
new  < strtol_test$519:>

2521:
old  <	jmp strtol>
new  <	; Parameter 87 signedint base>

2522:
old  <>
new  <	mov eax, [rbp + 24]>

2523:
old  < strtol_test$521:>
new  <	mov [rbp + 87], eax>

2524:
old  <	; PostCall 47>
new  <>

2525:
old  <>
new  < strtol_test$520:>

2526:
old  < strtol_test$522:>
new  <	; Call 47 strtol 0>

2527:
old  <	; GetReturnValue Â£temporary2316>
new  <	mov qword [rbp + 47], strtol_test$521>

2528:
old  <>
new  <	mov [rbp + 55], rbp>

2529:
old  < strtol_test$523:>
new  <	add rbp, 47>

2530:
old  <	; Assign value Â£temporary2316>
new  <	jmp strtol>

2531:
old  <	mov [rbp + 47], rbx>
new  <>

2532:
old  <>
new  < strtol_test$521:>

2533:
old  < strtol_test$524:>
new  <	; PostCall 47>

2534:
old  <	; PreCall 55 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

2535:
old  <>
new  < strtol_test$522:>

2536:
old  < strtol_test$525:>
new  <	; GetReturnValue Â£temporary2303>

2537:
old  <	; Parameter 79 pointer "<%s> <%li> <%s> <%i>\n">
new  <>

2538:
old  <	mov qword [rbp + 79], string_3C25s3E203C25li3E203C25s3E203C25i3E0A#>
new  < strtol_test$523:>

2539:
old  <>
new  <	; Assign value Â£temporary2303>

2540:
old  < strtol_test$526:>
new  <	mov [rbp + 47], rbx>

2541:
old  <	; Parameter 87 pointer text>
new  <>

2542:
old  <	mov [rbp + 87], rbp>
new  < strtol_test$524:>

2543:
old  <	add qword [rbp + 87], 28>
new  <	; PreCall 55 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2545:
old  < strtol_test$527:>
new  < strtol_test$525:>

2546:
old  <	; Parameter 95 signed long int value>
new  <	; Parameter 79 pointer "<%s> <%li> <%s> <%i>\n">

2547:
old  <	mov rax, [rbp + 47]>
new  <	mov qword [rbp + 79], string_3C25s3E203C25li3E203C25s3E203C25i3E0A#>

2548:
old  <	mov [rbp + 95], rax>
new  <>

2549:
old  <>
new  < strtol_test$526:>

2550:
old  < strtol_test$528:>
new  <	; Parameter 87 pointer text>

2551:
old  <	; Parameter 103 pointer pointer>
new  <	mov [rbp + 87], rbp>

2552:
old  <	mov rax, [rbp + 39]>
new  <	add qword [rbp + 87], 28>

2553:
old  <	mov [rbp + 103], rax>
new  <>

2554:
old  <>
new  < strtol_test$527:>

2555:
old  < strtol_test$529:>
new  <	; Parameter 95 signed long int value>

2556:
old  <	; Parameter 111 signedint base>
new  <	mov rax, [rbp + 47]>

2557:
old  <	mov eax, [rbp + 24]>
new  <	mov [rbp + 95], rax>

2558:
old  <	mov [rbp + 111], eax>
new  <>

2559:
old  <>
new  < strtol_test$528:>

2560:
old  < strtol_test$530:>
new  <	; Parameter 103 pointer pointer>

2561:
old  <	; Call 55 printf 28>
new  <	mov rax, [rbp + 39]>

2562:
old  <	mov qword [rbp + 55], strtol_test$531>
new  <	mov [rbp + 103], rax>

2563:
old  <	mov [rbp + 63], rbp>
new  <>

2564:
old  <	add rbp, 55>
new  < strtol_test$529:>

2565:
old  <	mov rdi, rbp>
new  <	; Parameter 111 signedint base>

2566:
old  <	add rdi, 28>
new  <	mov eax, [rbp + 24]>

2567:
old  <	jmp printf>
new  <	mov [rbp + 111], eax>

2569:
old  < strtol_test$531:>
new  < strtol_test$530:>

2570:
old  <	; PostCall 55>
new  <	; Call 55 printf 28>

2571:
old  <>
new  <	mov qword [rbp + 55], strtol_test$531>

2572:
old  < strtol_test$532:>
new  <	mov [rbp + 63], rbp>

2573:
old  <	; Return>
new  <	add rbp, 55>

2574:
old  <	mov rax, [rbp]>
new  <	mov rdi, rbp>

2575:
old  <	mov rdi, [rbp + 16]>
new  <	add rdi, 28>

2576:
old  <	mov rbp, [rbp + 8]>
new  <	jmp printf>

2577:
old  <	jmp rax>
new  <>

2578:
old  <>
new  < strtol_test$531:>

2579:
old  < strtol_test$533:>
new  <	; PostCall 55>

2580:
old  <	; FunctionEnd strtol_test>
new  <>

2581:
old  <>
new  < strtol_test$532:>

2582:
old  <section .text>
new  <	; Return>

2583:
old  <>
new  <	mov rax, [rbp]>

2584:
old  < strtoul:>
new  <	mov rdi, [rbp + 16]>

2585:
old  <	; Assign g_inStatus 1>
new  <	mov rbp, [rbp + 8]>

2586:
old  <	mov dword [g_inStatus], 1>
new  <	jmp rax>

2588:
old  < strtoul$1:>
new  < strtol_test$533:>

2589:
old  <	; Assign g_inDevice s>
new  <	; FunctionEnd strtol_test>

2590:
old  <	mov rax, [rbp + 24]>
new  <>

2591:
old  <	mov [g_inDevice], rax>
new  <section .text>

2593:
old  < strtoul$2:>
new  < strtoul:>

2594:
old  <	; Assign g_inChars 0>
new  <	; Assign g_inStatus 1>

2595:
old  <	mov dword [g_inChars], 0>
new  <	mov dword [g_inStatus], 1>

2597:
old  < strtoul$3:>
new  < strtoul$1:>

2598:
old  <	; PreCall 44 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Assign g_inDevice s>

2599:
old  <>
new  <	mov rax, [rbp + 24]>

2600:
old  < strtoul$4:>
new  <	mov [g_inDevice], rax>

2601:
old  <	; Parameter 68 signedint base>
new  <>

2602:
old  <	mov eax, [rbp + 40]>
new  < strtoul$2:>

2603:
old  <	mov [rbp + 68], eax>
new  <	; Assign g_inChars 0>

2604:
old  <>
new  <	mov dword [g_inChars], 0>

2605:
old  < strtoul$5:>
new  <>

2606:
old  <	; Call 44 scanUnsignedLongInt 0>
new  < strtoul$3:>

2607:
old  <	mov qword [rbp + 44], strtoul$6>
new  <	; PreCall 44 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2608:
old  <	mov [rbp + 52], rbp>
new  <>

2609:
old  <	add rbp, 44>
new  < strtoul$4:>

2610:
old  <	jmp scanUnsignedLongInt>
new  <	; Parameter 68 signedint base>

2611:
old  <>
new  <	mov eax, [rbp + 40]>

2612:
old  < strtoul$6:>
new  <	mov [rbp + 68], eax>

2613:
old  <	; PostCall 44>
new  <>

2614:
old  <>
new  < strtoul$5:>

2615:
old  < strtoul$7:>
new  <	; Call 44 scanUnsignedLongInt 0>

2616:
old  <	; GetReturnValue Â£temporary2336>
new  <	mov qword [rbp + 44], strtoul$6>

2617:
old  <>
new  <	mov [rbp + 52], rbp>

2618:
old  < strtoul$8:>
new  <	add rbp, 44>

2619:
old  <	; Assign unsignedLongValue Â£temporary2336>
new  <	jmp scanUnsignedLongInt>

2620:
old  <	mov [rbp + 44], rbx>
new  <>

2621:
old  <>
new  < strtoul$6:>

2622:
old  < strtoul$9:>
new  <	; PostCall 44>

2623:
old  <	; Equal 13 endp 0>
new  <>

2624:
old  <	cmp qword [rbp + 32], 0>
new  < strtoul$7:>

2625:
old  <	je strtoul$13>
new  <	; GetReturnValue Â£temporary2323>

2627:
old  < strtoul$10:>
new  < strtoul$8:>

2628:
old  <	; Dereference Â£temporary2338 -> endp endp 0>
new  <	; Assign unsignedLongValue Â£temporary2323>

2629:
old  <	mov rsi, [rbp + 32]>
new  <	mov [rbp + 44], rbx>

2631:
old  < strtoul$11:>
new  < strtoul$9:>

2632:
old  <	; IntegralToIntegral Â£temporary2339 g_inChars>
new  <	; Equal 13 endp 0>

2633:
old  <	mov eax, [g_inChars]>
new  <	cmp qword [rbp + 32], 0>

2634:
old  <	mov rbx, 4294967295>
new  <	je strtoul$13>

2635:
old  <	and rax, rbx>
new  <>

2636:
old  <>
new  < strtoul$10:>

2637:
old  < strtoul$12:>
new  <	; Dereference Â£temporary2325 -> endp endp 0>

2638:
old  <	; BinaryAdd Â£temporary2338 -> endp s Â£temporary2339>
new  <	mov rsi, [rbp + 32]>

2639:
old  <	mov rbx, [rbp + 24]>
new  <>

2640:
old  <	add rbx, rax>
new  < strtoul$11:>

2641:
old  <	mov [rsi], rbx>
new  <	; IntegralToIntegral Â£temporary2326 g_inChars>

2642:
old  <>
new  <	mov eax, [g_inChars]>

2643:
old  < strtoul$13:>
new  <	mov rbx, 4294967295>

2644:
old  <	; Return unsignedLongValue>
new  <	and rax, rbx>

2645:
old  <	mov rbx, [rbp + 44]>
new  <>

2646:
old  <	mov rax, [rbp]>
new  < strtoul$12:>

2647:
old  <	mov rdi, [rbp + 16]>
new  <	; BinaryAdd Â£temporary2325 -> endp s Â£temporary2326>

2648:
old  <	mov rbp, [rbp + 8]>
new  <	mov rbx, [rbp + 24]>

2649:
old  <	jmp rax>
new  <	add rbx, rax>

2650:
old  <>
new  <	mov [rsi], rbx>

2651:
old  < strtoul$14:>
new  <>

2652:
old  <	; FunctionEnd strtoul>
new  < strtoul$13:>

2653:
old  <>
new  <	; SetReturnValue>

2654:
old  <section .text>
new  <>

2655:
old  <>
new  < strtoul$14:>

2656:
old  < strtoul_test:>
new  <	; Return unsignedLongValue>

2657:
old  <	; Assign base 0>
new  <	mov rbx, [rbp + 44]>

2658:
old  <	mov dword [rbp + 24], 0>
new  <	mov rax, [rbp]>

2659:
old  <>
new  <	mov rdi, [rbp + 16]>

2660:
old  < strtoul_test$1:>
new  <	mov rbp, [rbp + 8]>

2661:
old  <	; Assign text[0] 32>
new  <	jmp rax>

2662:
old  <	mov byte [rbp + 28], 32>
new  <>

2663:
old  <>
new  < strtoul$15:>

2664:
old  < strtoul_test$2:>
new  <	; FunctionEnd strtoul>

2665:
old  <	; Assign text[1] 32>
new  <>

2666:
old  <	mov byte [rbp + 29], 32>
new  <section .text>

2668:
old  < strtoul_test$3:>
new  < strtoul_test:>

2669:
old  <	; Assign text[2] 32>
new  <	; Assign base 0>

2670:
old  <	mov byte [rbp + 30], 32>
new  <	mov dword [rbp + 24], 0>

2672:
old  < strtoul_test$4:>
new  < strtoul_test$1:>

2673:
old  <	; Assign text[3] 43>
new  <	; Assign text[0] 32>

2674:
old  <	mov byte [rbp + 31], 43>
new  <	mov byte [rbp + 28], 32>

2676:
old  < strtoul_test$5:>
new  < strtoul_test$2:>

2677:
old  <	; Assign text[4] 49>
new  <	; Assign text[1] 32>

2678:
old  <	mov byte [rbp + 32], 49>
new  <	mov byte [rbp + 29], 32>

2680:
old  < strtoul_test$6:>
new  < strtoul_test$3:>

2681:
old  <	; Assign text[5] 50>
new  <	; Assign text[2] 32>

2682:
old  <	mov byte [rbp + 33], 50>
new  <	mov byte [rbp + 30], 32>

2684:
old  < strtoul_test$7:>
new  < strtoul_test$4:>

2685:
old  <	; Assign text[6] 51>
new  <	; Assign text[3] 43>

2686:
old  <	mov byte [rbp + 34], 51>
new  <	mov byte [rbp + 31], 43>

2688:
old  < strtoul_test$8:>
new  < strtoul_test$5:>

2689:
old  <	; Assign text[7] 97>
new  <	; Assign text[4] 49>

2690:
old  <	mov byte [rbp + 35], 97>
new  <	mov byte [rbp + 32], 49>

2692:
old  < strtoul_test$9:>
new  < strtoul_test$6:>

2693:
old  <	; Assign text[8] 98>
new  <	; Assign text[5] 50>

2694:
old  <	mov byte [rbp + 36], 98>
new  <	mov byte [rbp + 33], 50>

2696:
old  < strtoul_test$10:>
new  < strtoul_test$7:>

2697:
old  <	; Assign text[9] 99>
new  <	; Assign text[6] 51>

2698:
old  <	mov byte [rbp + 37], 99>
new  <	mov byte [rbp + 34], 51>

2700:
old  < strtoul_test$11:>
new  < strtoul_test$8:>

2701:
old  <	; Assign text[10] 0>
new  <	; Assign text[7] 97>

2702:
old  <	mov byte [rbp + 38], 0>
new  <	mov byte [rbp + 35], 97>

2704:
old  < strtoul_test$12:>
new  < strtoul_test$9:>

2705:
old  <	; PreCall 47 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Assign text[8] 98>

2706:
old  <>
new  <	mov byte [rbp + 36], 98>

2707:
old  < strtoul_test$13:>
new  <>

2708:
old  <	; Parameter 71 pointer text>
new  < strtoul_test$10:>

2709:
old  <	mov [rbp + 71], rbp>
new  <	; Assign text[9] 99>

2710:
old  <	add qword [rbp + 71], 28>
new  <	mov byte [rbp + 37], 99>

2712:
old  < strtoul_test$14:>
new  < strtoul_test$11:>

2713:
old  <	; Address Â£temporary2353 pointer>
new  <	; Assign text[10] 0>

2714:
old  <	mov rsi, rbp>
new  <	mov byte [rbp + 38], 0>

2715:
old  <	add rsi, 39>
new  <>

2716:
old  <>
new  < strtoul_test$12:>

2717:
old  < strtoul_test$15:>
new  <	; PreCall 47 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2718:
old  <	; Parameter 79 pointer Â£temporary2353>
new  <>

2719:
old  <	mov [rbp + 79], rsi>
new  < strtoul_test$13:>

2720:
old  <>
new  <	; Parameter 71 pointer text>

2721:
old  < strtoul_test$16:>
new  <	mov [rbp + 71], rbp>

2722:
old  <	; Parameter 87 signedint base>
new  <	add qword [rbp + 71], 28>

2723:
old  <	mov eax, [rbp + 24]>
new  <>

2724:
old  <	mov [rbp + 87], eax>
new  < strtoul_test$14:>

2725:
old  <>
new  <	; Address Â£temporary2340 pointer>

2726:
old  < strtoul_test$17:>
new  <	mov rsi, rbp>

2727:
old  <	; Call 47 strtoul 0>
new  <	add rsi, 39>

2728:
old  <	mov qword [rbp + 47], strtoul_test$18>
new  <>

2729:
old  <	mov [rbp + 55], rbp>
new  < strtoul_test$15:>

2730:
old  <	add rbp, 47>
new  <	; Parameter 79 pointer Â£temporary2340>

2731:
old  <	jmp strtoul>
new  <	mov [rbp + 79], rsi>

2733:
old  < strtoul_test$18:>
new  < strtoul_test$16:>

2734:
old  <	; PostCall 47>
new  <	; Parameter 87 signedint base>

2735:
old  <>
new  <	mov eax, [rbp + 24]>

2736:
old  < strtoul_test$19:>
new  <	mov [rbp + 87], eax>

2737:
old  <	; GetReturnValue Â£temporary2354>
new  <>

2738:
old  <>
new  < strtoul_test$17:>

2739:
old  < strtoul_test$20:>
new  <	; Call 47 strtoul 0>

2740:
old  <	; Assign value Â£temporary2354>
new  <	mov qword [rbp + 47], strtoul_test$18>

2741:
old  <	mov [rbp + 47], rbx>
new  <	mov [rbp + 55], rbp>

2742:
old  <>
new  <	add rbp, 47>

2743:
old  < strtoul_test$21:>
new  <	jmp strtoul>

2744:
old  <	; PreCall 55 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

2745:
old  <>
new  < strtoul_test$18:>

2746:
old  < strtoul_test$22:>
new  <	; PostCall 47>

2747:
old  <	; Parameter 79 pointer "<%s> <%li> <%s> <%i>\n">
new  <>

2748:
old  <	mov qword [rbp + 79], string_3C25s3E203C25li3E203C25s3E203C25i3E0A#>
new  < strtoul_test$19:>

2749:
old  <>
new  <	; GetReturnValue Â£temporary2341>

2750:
old  < strtoul_test$23:>
new  <>

2751:
old  <	; Parameter 87 pointer text>
new  < strtoul_test$20:>

2752:
old  <	mov [rbp + 87], rbp>
new  <	; Assign value Â£temporary2341>

2753:
old  <	add qword [rbp + 87], 28>
new  <	mov [rbp + 47], rbx>

2755:
old  < strtoul_test$24:>
new  < strtoul_test$21:>

2756:
old  <	; Parameter 95 signed long int value>
new  <	; PreCall 55 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2757:
old  <	mov rax, [rbp + 47]>
new  <>

2758:
old  <	mov [rbp + 95], rax>
new  < strtoul_test$22:>

2759:
old  <>
new  <	; Parameter 79 pointer "<%s> <%li> <%s> <%i>\n">

2760:
old  < strtoul_test$25:>
new  <	mov qword [rbp + 79], string_3C25s3E203C25li3E203C25s3E203C25i3E0A#>

2761:
old  <	; Parameter 103 pointer pointer>
new  <>

2762:
old  <	mov rax, [rbp + 39]>
new  < strtoul_test$23:>

2763:
old  <	mov [rbp + 103], rax>
new  <	; Parameter 87 pointer text>

2764:
old  <>
new  <	mov [rbp + 87], rbp>

2765:
old  < strtoul_test$26:>
new  <	add qword [rbp + 87], 28>

2766:
old  <	; Parameter 111 signedint base>
new  <>

2767:
old  <	mov eax, [rbp + 24]>
new  < strtoul_test$24:>

2768:
old  <	mov [rbp + 111], eax>
new  <	; Parameter 95 signed long int value>

2769:
old  <>
new  <	mov rax, [rbp + 47]>

2770:
old  < strtoul_test$27:>
new  <	mov [rbp + 95], rax>

2771:
old  <	; Call 55 printf 28>
new  <>

2772:
old  <	mov qword [rbp + 55], strtoul_test$28>
new  < strtoul_test$25:>

2773:
old  <	mov [rbp + 63], rbp>
new  <	; Parameter 103 pointer pointer>

2774:
old  <	add rbp, 55>
new  <	mov rax, [rbp + 39]>

2775:
old  <	mov rdi, rbp>
new  <	mov [rbp + 103], rax>

2776:
old  <	add rdi, 28>
new  <>

2777:
old  <	jmp printf>
new  < strtoul_test$26:>

2778:
old  <>
new  <	; Parameter 111 signedint base>

2779:
old  < strtoul_test$28:>
new  <	mov eax, [rbp + 24]>

2780:
old  <	; PostCall 55>
new  <	mov [rbp + 111], eax>

2782:
old  < strtoul_test$29:>
new  < strtoul_test$27:>

2783:
old  <	; Assign base 0>
new  <	; Call 55 printf 28>

2784:
old  <	mov dword [rbp + 24], 0>
new  <	mov qword [rbp + 55], strtoul_test$28>

2785:
old  <>
new  <	mov [rbp + 63], rbp>

2786:
old  < strtoul_test$30:>
new  <	add rbp, 55>

2787:
old  <	; Assign text[0] 32>
new  <	mov rdi, rbp>

2788:
old  <	mov byte [rbp + 28], 32>
new  <	add rdi, 28>

2789:
old  <>
new  <	jmp printf>

2790:
old  < strtoul_test$31:>
new  <>

2791:
old  <	; Assign text[1] 32>
new  < strtoul_test$28:>

2792:
old  <	mov byte [rbp + 29], 32>
new  <	; PostCall 55>

2794:
old  < strtoul_test$32:>
new  < strtoul_test$29:>

2795:
old  <	; Assign text[2] 32>
new  <	; Assign base 0>

2796:
old  <	mov byte [rbp + 30], 32>
new  <	mov dword [rbp + 24], 0>

2798:
old  < strtoul_test$33:>
new  < strtoul_test$30:>

2799:
old  <	; Assign text[3] 43>
new  <	; Assign text[0] 32>

2800:
old  <	mov byte [rbp + 31], 43>
new  <	mov byte [rbp + 28], 32>

2802:
old  < strtoul_test$34:>
new  < strtoul_test$31:>

2803:
old  <	; Assign text[4] 48>
new  <	; Assign text[1] 32>

2804:
old  <	mov byte [rbp + 32], 48>
new  <	mov byte [rbp + 29], 32>

2806:
old  < strtoul_test$35:>
new  < strtoul_test$32:>

2807:
old  <	; Assign text[5] 49>
new  <	; Assign text[2] 32>

2808:
old  <	mov byte [rbp + 33], 49>
new  <	mov byte [rbp + 30], 32>

2810:
old  < strtoul_test$36:>
new  < strtoul_test$33:>

2811:
old  <	; Assign text[6] 50>
new  <	; Assign text[3] 43>

2812:
old  <	mov byte [rbp + 34], 50>
new  <	mov byte [rbp + 31], 43>

2814:
old  < strtoul_test$37:>
new  < strtoul_test$34:>

2815:
old  <	; Assign text[7] 51>
new  <	; Assign text[4] 48>

2816:
old  <	mov byte [rbp + 35], 51>
new  <	mov byte [rbp + 32], 48>

2818:
old  < strtoul_test$38:>
new  < strtoul_test$35:>

2819:
old  <	; Assign text[8] 97>
new  <	; Assign text[5] 49>

2820:
old  <	mov byte [rbp + 36], 97>
new  <	mov byte [rbp + 33], 49>

2822:
old  < strtoul_test$39:>
new  < strtoul_test$36:>

2823:
old  <	; Assign text[9] 98>
new  <	; Assign text[6] 50>

2824:
old  <	mov byte [rbp + 37], 98>
new  <	mov byte [rbp + 34], 50>

2826:
old  < strtoul_test$40:>
new  < strtoul_test$37:>

2827:
old  <	; Assign text[10] 99>
new  <	; Assign text[7] 51>

2828:
old  <	mov byte [rbp + 38], 99>
new  <	mov byte [rbp + 35], 51>

2830:
old  < strtoul_test$41:>
new  < strtoul_test$38:>

2831:
old  <	; Assign text[11] 0>
new  <	; Assign text[8] 97>

2832:
old  <	mov byte [rbp + 39], 0>
new  <	mov byte [rbp + 36], 97>

2834:
old  < strtoul_test$42:>
new  < strtoul_test$39:>

2835:
old  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Assign text[9] 98>

2836:
old  <>
new  <	mov byte [rbp + 37], 98>

2837:
old  < strtoul_test$43:>
new  <>

2838:
old  <	; Parameter 72 pointer text>
new  < strtoul_test$40:>

2839:
old  <	mov [rbp + 72], rbp>
new  <	; Assign text[10] 99>

2840:
old  <	add qword [rbp + 72], 28>
new  <	mov byte [rbp + 38], 99>

2842:
old  < strtoul_test$44:>
new  < strtoul_test$41:>

2843:
old  <	; Address Â£temporary2368 pointer>
new  <	; Assign text[11] 0>

2844:
old  <	mov rsi, rbp>
new  <	mov byte [rbp + 39], 0>

2845:
old  <	add rsi, 40>
new  <>

2846:
old  <>
new  < strtoul_test$42:>

2847:
old  < strtoul_test$45:>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2848:
old  <	; Parameter 80 pointer Â£temporary2368>
new  <>

2849:
old  <	mov [rbp + 80], rsi>
new  < strtoul_test$43:>

2850:
old  <>
new  <	; Parameter 72 pointer text>

2851:
old  < strtoul_test$46:>
new  <	mov [rbp + 72], rbp>

2852:
old  <	; Parameter 88 signedint base>
new  <	add qword [rbp + 72], 28>

2853:
old  <	mov eax, [rbp + 24]>
new  <>

2854:
old  <	mov [rbp + 88], eax>
new  < strtoul_test$44:>

2855:
old  <>
new  <	; Address Â£temporary2355 pointer>

2856:
old  < strtoul_test$47:>
new  <	mov rsi, rbp>

2857:
old  <	; Call 48 strtoul 0>
new  <	add rsi, 40>

2858:
old  <	mov qword [rbp + 48], strtoul_test$48>
new  <>

2859:
old  <	mov [rbp + 56], rbp>
new  < strtoul_test$45:>

2860:
old  <	add rbp, 48>
new  <	; Parameter 80 pointer Â£temporary2355>

2861:
old  <	jmp strtoul>
new  <	mov [rbp + 80], rsi>

2863:
old  < strtoul_test$48:>
new  < strtoul_test$46:>

2864:
old  <	; PostCall 48>
new  <	; Parameter 88 signedint base>

2865:
old  <>
new  <	mov eax, [rbp + 24]>

2866:
old  < strtoul_test$49:>
new  <	mov [rbp + 88], eax>

2867:
old  <	; GetReturnValue Â£temporary2369>
new  <>

2868:
old  <>
new  < strtoul_test$47:>

2869:
old  < strtoul_test$50:>
new  <	; Call 48 strtoul 0>

2870:
old  <	; Assign value Â£temporary2369>
new  <	mov qword [rbp + 48], strtoul_test$48>

2871:
old  <	mov [rbp + 48], rbx>
new  <	mov [rbp + 56], rbp>

2872:
old  <>
new  <	add rbp, 48>

2873:
old  < strtoul_test$51:>
new  <	jmp strtoul>

2874:
old  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

2875:
old  <>
new  < strtoul_test$48:>

2876:
old  < strtoul_test$52:>
new  <	; PostCall 48>

2877:
old  <	; Parameter 80 pointer "<%s> <%li> <%s> <%i>\n">
new  <>

2878:
old  <	mov qword [rbp + 80], string_3C25s3E203C25li3E203C25s3E203C25i3E0A#>
new  < strtoul_test$49:>

2879:
old  <>
new  <	; GetReturnValue Â£temporary2356>

2880:
old  < strtoul_test$53:>
new  <>

2881:
old  <	; Parameter 88 pointer text>
new  < strtoul_test$50:>

2882:
old  <	mov [rbp + 88], rbp>
new  <	; Assign value Â£temporary2356>

2883:
old  <	add qword [rbp + 88], 28>
new  <	mov [rbp + 48], rbx>

2885:
old  < strtoul_test$54:>
new  < strtoul_test$51:>

2886:
old  <	; Parameter 96 signed long int value>
new  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2887:
old  <	mov rax, [rbp + 48]>
new  <>

2888:
old  <	mov [rbp + 96], rax>
new  < strtoul_test$52:>

2889:
old  <>
new  <	; Parameter 80 pointer "<%s> <%li> <%s> <%i>\n">

2890:
old  < strtoul_test$55:>
new  <	mov qword [rbp + 80], string_3C25s3E203C25li3E203C25s3E203C25i3E0A#>

2891:
old  <	; Parameter 104 pointer pointer>
new  <>

2892:
old  <	mov rax, [rbp + 40]>
new  < strtoul_test$53:>

2893:
old  <	mov [rbp + 104], rax>
new  <	; Parameter 88 pointer text>

2894:
old  <>
new  <	mov [rbp + 88], rbp>

2895:
old  < strtoul_test$56:>
new  <	add qword [rbp + 88], 28>

2896:
old  <	; Parameter 112 signedint base>
new  <>

2897:
old  <	mov eax, [rbp + 24]>
new  < strtoul_test$54:>

2898:
old  <	mov [rbp + 112], eax>
new  <	; Parameter 96 signed long int value>

2899:
old  <>
new  <	mov rax, [rbp + 48]>

2900:
old  < strtoul_test$57:>
new  <	mov [rbp + 96], rax>

2901:
old  <	; Call 56 printf 28>
new  <>

2902:
old  <	mov qword [rbp + 56], strtoul_test$58>
new  < strtoul_test$55:>

2903:
old  <	mov [rbp + 64], rbp>
new  <	; Parameter 104 pointer pointer>

2904:
old  <	add rbp, 56>
new  <	mov rax, [rbp + 40]>

2905:
old  <	mov rdi, rbp>
new  <	mov [rbp + 104], rax>

2906:
old  <	add rdi, 28>
new  <>

2907:
old  <	jmp printf>
new  < strtoul_test$56:>

2908:
old  <>
new  <	; Parameter 112 signedint base>

2909:
old  < strtoul_test$58:>
new  <	mov eax, [rbp + 24]>

2910:
old  <	; PostCall 56>
new  <	mov [rbp + 112], eax>

2912:
old  < strtoul_test$59:>
new  < strtoul_test$57:>

2913:
old  <	; Assign base 0>
new  <	; Call 56 printf 28>

2914:
old  <	mov dword [rbp + 24], 0>
new  <	mov qword [rbp + 56], strtoul_test$58>

2915:
old  <>
new  <	mov [rbp + 64], rbp>

2916:
old  < strtoul_test$60:>
new  <	add rbp, 56>

2917:
old  <	; Assign text[0] 32>
new  <	mov rdi, rbp>

2918:
old  <	mov byte [rbp + 28], 32>
new  <	add rdi, 28>

2919:
old  <>
new  <	jmp printf>

2920:
old  < strtoul_test$61:>
new  <>

2921:
old  <	; Assign text[1] 32>
new  < strtoul_test$58:>

2922:
old  <	mov byte [rbp + 29], 32>
new  <	; PostCall 56>

2924:
old  < strtoul_test$62:>
new  < strtoul_test$59:>

2925:
old  <	; Assign text[2] 32>
new  <	; Assign base 0>

2926:
old  <	mov byte [rbp + 30], 32>
new  <	mov dword [rbp + 24], 0>

2928:
old  < strtoul_test$63:>
new  < strtoul_test$60:>

2929:
old  <	; Assign text[3] 43>
new  <	; Assign text[0] 32>

2930:
old  <	mov byte [rbp + 31], 43>
new  <	mov byte [rbp + 28], 32>

2932:
old  < strtoul_test$64:>
new  < strtoul_test$61:>

2933:
old  <	; Assign text[4] 48>
new  <	; Assign text[1] 32>

2934:
old  <	mov byte [rbp + 32], 48>
new  <	mov byte [rbp + 29], 32>

2936:
old  < strtoul_test$65:>
new  < strtoul_test$62:>

2937:
old  <	; Assign text[5] 120>
new  <	; Assign text[2] 32>

2938:
old  <	mov byte [rbp + 33], 120>
new  <	mov byte [rbp + 30], 32>

2940:
old  < strtoul_test$66:>
new  < strtoul_test$63:>

2941:
old  <	; Assign text[6] 49>
new  <	; Assign text[3] 43>

2942:
old  <	mov byte [rbp + 34], 49>
new  <	mov byte [rbp + 31], 43>

2944:
old  < strtoul_test$67:>
new  < strtoul_test$64:>

2945:
old  <	; Assign text[7] 50>
new  <	; Assign text[4] 48>

2946:
old  <	mov byte [rbp + 35], 50>
new  <	mov byte [rbp + 32], 48>

2948:
old  < strtoul_test$68:>
new  < strtoul_test$65:>

2949:
old  <	; Assign text[8] 51>
new  <	; Assign text[5] 120>

2950:
old  <	mov byte [rbp + 36], 51>
new  <	mov byte [rbp + 33], 120>

2952:
old  < strtoul_test$69:>
new  < strtoul_test$66:>

2953:
old  <	; Assign text[9] 65>
new  <	; Assign text[6] 49>

2954:
old  <	mov byte [rbp + 37], 65>
new  <	mov byte [rbp + 34], 49>

2956:
old  < strtoul_test$70:>
new  < strtoul_test$67:>

2957:
old  <	; Assign text[10] 66>
new  <	; Assign text[7] 50>

2958:
old  <	mov byte [rbp + 38], 66>
new  <	mov byte [rbp + 35], 50>

2960:
old  < strtoul_test$71:>
new  < strtoul_test$68:>

2961:
old  <	; Assign text[11] 67>
new  <	; Assign text[8] 51>

2962:
old  <	mov byte [rbp + 39], 67>
new  <	mov byte [rbp + 36], 51>

2964:
old  < strtoul_test$72:>
new  < strtoul_test$69:>

2965:
old  <	; Assign text[12] 0>
new  <	; Assign text[9] 65>

2966:
old  <	mov byte [rbp + 40], 0>
new  <	mov byte [rbp + 37], 65>

2968:
old  < strtoul_test$73:>
new  < strtoul_test$70:>

2969:
old  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Assign text[10] 66>

2970:
old  <>
new  <	mov byte [rbp + 38], 66>

2971:
old  < strtoul_test$74:>
new  <>

2972:
old  <	; Parameter 73 pointer text>
new  < strtoul_test$71:>

2973:
old  <	mov [rbp + 73], rbp>
new  <	; Assign text[11] 67>

2974:
old  <	add qword [rbp + 73], 28>
new  <	mov byte [rbp + 39], 67>

2976:
old  < strtoul_test$75:>
new  < strtoul_test$72:>

2977:
old  <	; Address Â£temporary2384 pointer>
new  <	; Assign text[12] 0>

2978:
old  <	mov rsi, rbp>
new  <	mov byte [rbp + 40], 0>

2979:
old  <	add rsi, 41>
new  <>

2980:
old  <>
new  < strtoul_test$73:>

2981:
old  < strtoul_test$76:>
new  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2982:
old  <	; Parameter 81 pointer Â£temporary2384>
new  <>

2983:
old  <	mov [rbp + 81], rsi>
new  < strtoul_test$74:>

2984:
old  <>
new  <	; Parameter 73 pointer text>

2985:
old  < strtoul_test$77:>
new  <	mov [rbp + 73], rbp>

2986:
old  <	; Parameter 89 signedint base>
new  <	add qword [rbp + 73], 28>

2987:
old  <	mov eax, [rbp + 24]>
new  <>

2988:
old  <	mov [rbp + 89], eax>
new  < strtoul_test$75:>

2989:
old  <>
new  <	; Address Â£temporary2371 pointer>

2990:
old  < strtoul_test$78:>
new  <	mov rsi, rbp>

2991:
old  <	; Call 49 strtoul 0>
new  <	add rsi, 41>

2992:
old  <	mov qword [rbp + 49], strtoul_test$79>
new  <>

2993:
old  <	mov [rbp + 57], rbp>
new  < strtoul_test$76:>

2994:
old  <	add rbp, 49>
new  <	; Parameter 81 pointer Â£temporary2371>

2995:
old  <	jmp strtoul>
new  <	mov [rbp + 81], rsi>

2997:
old  < strtoul_test$79:>
new  < strtoul_test$77:>

2998:
old  <	; PostCall 49>
new  <	; Parameter 89 signedint base>

2999:
old  <>
new  <	mov eax, [rbp + 24]>

3000:
old  < strtoul_test$80:>
new  <	mov [rbp + 89], eax>

3001:
old  <	; GetReturnValue Â£temporary2385>
new  <>

3002:
old  <>
new  < strtoul_test$78:>

3003:
old  < strtoul_test$81:>
new  <	; Call 49 strtoul 0>

3004:
old  <	; Assign value Â£temporary2385>
new  <	mov qword [rbp + 49], strtoul_test$79>

3005:
old  <	mov [rbp + 49], rbx>
new  <	mov [rbp + 57], rbp>

3006:
old  <>
new  <	add rbp, 49>

3007:
old  < strtoul_test$82:>
new  <	jmp strtoul>

3008:
old  <	; PreCall 57 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

3009:
old  <>
new  < strtoul_test$79:>

3010:
old  < strtoul_test$83:>
new  <	; PostCall 49>

3011:
old  <	; Parameter 81 pointer "<%s> <%li> <%s> <%i>\n">
new  <>

3012:
old  <	mov qword [rbp + 81], string_3C25s3E203C25li3E203C25s3E203C25i3E0A#>
new  < strtoul_test$80:>

3013:
old  <>
new  <	; GetReturnValue Â£temporary2372>

3014:
old  < strtoul_test$84:>
new  <>

3015:
old  <	; Parameter 89 pointer text>
new  < strtoul_test$81:>

3016:
old  <	mov [rbp + 89], rbp>
new  <	; Assign value Â£temporary2372>

3017:
old  <	add qword [rbp + 89], 28>
new  <	mov [rbp + 49], rbx>

3019:
old  < strtoul_test$85:>
new  < strtoul_test$82:>

3020:
old  <	; Parameter 97 signed long int value>
new  <	; PreCall 57 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3021:
old  <	mov rax, [rbp + 49]>
new  <>

3022:
old  <	mov [rbp + 97], rax>
new  < strtoul_test$83:>

3023:
old  <>
new  <	; Parameter 81 pointer "<%s> <%li> <%s> <%i>\n">

3024:
old  < strtoul_test$86:>
new  <	mov qword [rbp + 81], string_3C25s3E203C25li3E203C25s3E203C25i3E0A#>

3025:
old  <	; Parameter 105 pointer pointer>
new  <>

3026:
old  <	mov rax, [rbp + 41]>
new  < strtoul_test$84:>

3027:
old  <	mov [rbp + 105], rax>
new  <	; Parameter 89 pointer text>

3028:
old  <>
new  <	mov [rbp + 89], rbp>

3029:
old  < strtoul_test$87:>
new  <	add qword [rbp + 89], 28>

3030:
old  <	; Parameter 113 signedint base>
new  <>

3031:
old  <	mov eax, [rbp + 24]>
new  < strtoul_test$85:>

3032:
old  <	mov [rbp + 113], eax>
new  <	; Parameter 97 signed long int value>

3033:
old  <>
new  <	mov rax, [rbp + 49]>

3034:
old  < strtoul_test$88:>
new  <	mov [rbp + 97], rax>

3035:
old  <	; Call 57 printf 28>
new  <>

3036:
old  <	mov qword [rbp + 57], strtoul_test$89>
new  < strtoul_test$86:>

3037:
old  <	mov [rbp + 65], rbp>
new  <	; Parameter 105 pointer pointer>

3038:
old  <	add rbp, 57>
new  <	mov rax, [rbp + 41]>

3039:
old  <	mov rdi, rbp>
new  <	mov [rbp + 105], rax>

3040:
old  <	add rdi, 28>
new  <>

3041:
old  <	jmp printf>
new  < strtoul_test$87:>

3042:
old  <>
new  <	; Parameter 113 signedint base>

3043:
old  < strtoul_test$89:>
new  <	mov eax, [rbp + 24]>

3044:
old  <	; PostCall 57>
new  <	mov [rbp + 113], eax>

3046:
old  < strtoul_test$90:>
new  < strtoul_test$88:>

3047:
old  <	; Assign base 0>
new  <	; Call 57 printf 28>

3048:
old  <	mov dword [rbp + 24], 0>
new  <	mov qword [rbp + 57], strtoul_test$89>

3049:
old  <>
new  <	mov [rbp + 65], rbp>

3050:
old  < strtoul_test$91:>
new  <	add rbp, 57>

3051:
old  <	; Assign text[0] 32>
new  <	mov rdi, rbp>

3052:
old  <	mov byte [rbp + 28], 32>
new  <	add rdi, 28>

3053:
old  <>
new  <	jmp printf>

3054:
old  < strtoul_test$92:>
new  <>

3055:
old  <	; Assign text[1] 32>
new  < strtoul_test$89:>

3056:
old  <	mov byte [rbp + 29], 32>
new  <	; PostCall 57>

3058:
old  < strtoul_test$93:>
new  < strtoul_test$90:>

3059:
old  <	; Assign text[2] 32>
new  <	; Assign base 0>

3060:
old  <	mov byte [rbp + 30], 32>
new  <	mov dword [rbp + 24], 0>

3062:
old  < strtoul_test$94:>
new  < strtoul_test$91:>

3063:
old  <	; Assign text[3] 43>
new  <	; Assign text[0] 32>

3064:
old  <	mov byte [rbp + 31], 43>
new  <	mov byte [rbp + 28], 32>

3066:
old  < strtoul_test$95:>
new  < strtoul_test$92:>

3067:
old  <	; Assign text[4] 48>
new  <	; Assign text[1] 32>

3068:
old  <	mov byte [rbp + 32], 48>
new  <	mov byte [rbp + 29], 32>

3070:
old  < strtoul_test$96:>
new  < strtoul_test$93:>

3071:
old  <	; Assign text[5] 88>
new  <	; Assign text[2] 32>

3072:
old  <	mov byte [rbp + 33], 88>
new  <	mov byte [rbp + 30], 32>

3074:
old  < strtoul_test$97:>
new  < strtoul_test$94:>

3075:
old  <	; Assign text[6] 49>
new  <	; Assign text[3] 43>

3076:
old  <	mov byte [rbp + 34], 49>
new  <	mov byte [rbp + 31], 43>

3078:
old  < strtoul_test$98:>
new  < strtoul_test$95:>

3079:
old  <	; Assign text[7] 50>
new  <	; Assign text[4] 48>

3080:
old  <	mov byte [rbp + 35], 50>
new  <	mov byte [rbp + 32], 48>

3082:
old  < strtoul_test$99:>
new  < strtoul_test$96:>

3083:
old  <	; Assign text[8] 51>
new  <	; Assign text[5] 88>

3084:
old  <	mov byte [rbp + 36], 51>
new  <	mov byte [rbp + 33], 88>

3086:
old  < strtoul_test$100:>
new  < strtoul_test$97:>

3087:
old  <	; Assign text[9] 97>
new  <	; Assign text[6] 49>

3088:
old  <	mov byte [rbp + 37], 97>
new  <	mov byte [rbp + 34], 49>

3090:
old  < strtoul_test$101:>
new  < strtoul_test$98:>

3091:
old  <	; Assign text[10] 98>
new  <	; Assign text[7] 50>

3092:
old  <	mov byte [rbp + 38], 98>
new  <	mov byte [rbp + 35], 50>

3094:
old  < strtoul_test$102:>
new  < strtoul_test$99:>

3095:
old  <	; Assign text[11] 99>
new  <	; Assign text[8] 51>

3096:
old  <	mov byte [rbp + 39], 99>
new  <	mov byte [rbp + 36], 51>

3098:
old  < strtoul_test$103:>
new  < strtoul_test$100:>

3099:
old  <	; Assign text[12] 0>
new  <	; Assign text[9] 97>

3100:
old  <	mov byte [rbp + 40], 0>
new  <	mov byte [rbp + 37], 97>

3102:
old  < strtoul_test$104:>
new  < strtoul_test$101:>

3103:
old  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Assign text[10] 98>

3104:
old  <>
new  <	mov byte [rbp + 38], 98>

3105:
old  < strtoul_test$105:>
new  <>

3106:
old  <	; Parameter 73 pointer text>
new  < strtoul_test$102:>

3107:
old  <	mov [rbp + 73], rbp>
new  <	; Assign text[11] 99>

3108:
old  <	add qword [rbp + 73], 28>
new  <	mov byte [rbp + 39], 99>

3110:
old  < strtoul_test$106:>
new  < strtoul_test$103:>

3111:
old  <	; Address Â£temporary2400 pointer>
new  <	; Assign text[12] 0>

3112:
old  <	mov rsi, rbp>
new  <	mov byte [rbp + 40], 0>

3113:
old  <	add rsi, 41>
new  <>

3114:
old  <>
new  < strtoul_test$104:>

3115:
old  < strtoul_test$107:>
new  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3116:
old  <	; Parameter 81 pointer Â£temporary2400>
new  <>

3117:
old  <	mov [rbp + 81], rsi>
new  < strtoul_test$105:>

3118:
old  <>
new  <	; Parameter 73 pointer text>

3119:
old  < strtoul_test$108:>
new  <	mov [rbp + 73], rbp>

3120:
old  <	; Parameter 89 signedint base>
new  <	add qword [rbp + 73], 28>

3121:
old  <	mov eax, [rbp + 24]>
new  <>

3122:
old  <	mov [rbp + 89], eax>
new  < strtoul_test$106:>

3123:
old  <>
new  <	; Address Â£temporary2387 pointer>

3124:
old  < strtoul_test$109:>
new  <	mov rsi, rbp>

3125:
old  <	; Call 49 strtoul 0>
new  <	add rsi, 41>

3126:
old  <	mov qword [rbp + 49], strtoul_test$110>
new  <>

3127:
old  <	mov [rbp + 57], rbp>
new  < strtoul_test$107:>

3128:
old  <	add rbp, 49>
new  <	; Parameter 81 pointer Â£temporary2387>

3129:
old  <	jmp strtoul>
new  <	mov [rbp + 81], rsi>

3131:
old  < strtoul_test$110:>
new  < strtoul_test$108:>

3132:
old  <	; PostCall 49>
new  <	; Parameter 89 signedint base>

3133:
old  <>
new  <	mov eax, [rbp + 24]>

3134:
old  < strtoul_test$111:>
new  <	mov [rbp + 89], eax>

3135:
old  <	; GetReturnValue Â£temporary2401>
new  <>

3136:
old  <>
new  < strtoul_test$109:>

3137:
old  < strtoul_test$112:>
new  <	; Call 49 strtoul 0>

3138:
old  <	; Assign value Â£temporary2401>
new  <	mov qword [rbp + 49], strtoul_test$110>

3139:
old  <	mov [rbp + 49], rbx>
new  <	mov [rbp + 57], rbp>

3140:
old  <>
new  <	add rbp, 49>

3141:
old  < strtoul_test$113:>
new  <	jmp strtoul>

3142:
old  <	; PreCall 57 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

3143:
old  <>
new  < strtoul_test$110:>

3144:
old  < strtoul_test$114:>
new  <	; PostCall 49>

3145:
old  <	; Parameter 81 pointer "<%s> <%li> <%s> <%i>\n">
new  <>

3146:
old  <	mov qword [rbp + 81], string_3C25s3E203C25li3E203C25s3E203C25i3E0A#>
new  < strtoul_test$111:>

3147:
old  <>
new  <	; GetReturnValue Â£temporary2388>

3148:
old  < strtoul_test$115:>
new  <>

3149:
old  <	; Parameter 89 pointer text>
new  < strtoul_test$112:>

3150:
old  <	mov [rbp + 89], rbp>
new  <	; Assign value Â£temporary2388>

3151:
old  <	add qword [rbp + 89], 28>
new  <	mov [rbp + 49], rbx>

3153:
old  < strtoul_test$116:>
new  < strtoul_test$113:>

3154:
old  <	; Parameter 97 signed long int value>
new  <	; PreCall 57 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3155:
old  <	mov rax, [rbp + 49]>
new  <>

3156:
old  <	mov [rbp + 97], rax>
new  < strtoul_test$114:>

3157:
old  <>
new  <	; Parameter 81 pointer "<%s> <%li> <%s> <%i>\n">

3158:
old  < strtoul_test$117:>
new  <	mov qword [rbp + 81], string_3C25s3E203C25li3E203C25s3E203C25i3E0A#>

3159:
old  <	; Parameter 105 pointer pointer>
new  <>

3160:
old  <	mov rax, [rbp + 41]>
new  < strtoul_test$115:>

3161:
old  <	mov [rbp + 105], rax>
new  <	; Parameter 89 pointer text>

3162:
old  <>
new  <	mov [rbp + 89], rbp>

3163:
old  < strtoul_test$118:>
new  <	add qword [rbp + 89], 28>

3164:
old  <	; Parameter 113 signedint base>
new  <>

3165:
old  <	mov eax, [rbp + 24]>
new  < strtoul_test$116:>

3166:
old  <	mov [rbp + 113], eax>
new  <	; Parameter 97 signed long int value>

3167:
old  <>
new  <	mov rax, [rbp + 49]>

3168:
old  < strtoul_test$119:>
new  <	mov [rbp + 97], rax>

3169:
old  <	; Call 57 printf 28>
new  <>

3170:
old  <	mov qword [rbp + 57], strtoul_test$120>
new  < strtoul_test$117:>

3171:
old  <	mov [rbp + 65], rbp>
new  <	; Parameter 105 pointer pointer>

3172:
old  <	add rbp, 57>
new  <	mov rax, [rbp + 41]>

3173:
old  <	mov rdi, rbp>
new  <	mov [rbp + 105], rax>

3174:
old  <	add rdi, 28>
new  <>

3175:
old  <	jmp printf>
new  < strtoul_test$118:>

3176:
old  <>
new  <	; Parameter 113 signedint base>

3177:
old  < strtoul_test$120:>
new  <	mov eax, [rbp + 24]>

3178:
old  <	; PostCall 57>
new  <	mov [rbp + 113], eax>

3180:
old  < strtoul_test$121:>
new  < strtoul_test$119:>

3181:
old  <	; Assign base 0>
new  <	; Call 57 printf 28>

3182:
old  <	mov dword [rbp + 24], 0>
new  <	mov qword [rbp + 57], strtoul_test$120>

3183:
old  <>
new  <	mov [rbp + 65], rbp>

3184:
old  < strtoul_test$122:>
new  <	add rbp, 57>

3185:
old  <	; Assign text[0] 32>
new  <	mov rdi, rbp>

3186:
old  <	mov byte [rbp + 28], 32>
new  <	add rdi, 28>

3187:
old  <>
new  <	jmp printf>

3188:
old  < strtoul_test$123:>
new  <>

3189:
old  <	; Assign text[1] 32>
new  < strtoul_test$120:>

3190:
old  <	mov byte [rbp + 29], 32>
new  <	; PostCall 57>

3192:
old  < strtoul_test$124:>
new  < strtoul_test$121:>

3193:
old  <	; Assign text[2] 32>
new  <	; Assign base 0>

3194:
old  <	mov byte [rbp + 30], 32>
new  <	mov dword [rbp + 24], 0>

3196:
old  < strtoul_test$125:>
new  < strtoul_test$122:>

3197:
old  <	; Assign text[3] 45>
new  <	; Assign text[0] 32>

3198:
old  <	mov byte [rbp + 31], 45>
new  <	mov byte [rbp + 28], 32>

3200:
old  < strtoul_test$126:>
new  < strtoul_test$123:>

3201:
old  <	; Assign text[4] 49>
new  <	; Assign text[1] 32>

3202:
old  <	mov byte [rbp + 32], 49>
new  <	mov byte [rbp + 29], 32>

3204:
old  < strtoul_test$127:>
new  < strtoul_test$124:>

3205:
old  <	; Assign text[5] 50>
new  <	; Assign text[2] 32>

3206:
old  <	mov byte [rbp + 33], 50>
new  <	mov byte [rbp + 30], 32>

3208:
old  < strtoul_test$128:>
new  < strtoul_test$125:>

3209:
old  <	; Assign text[6] 51>
new  <	; Assign text[3] 45>

3210:
old  <	mov byte [rbp + 34], 51>
new  <	mov byte [rbp + 31], 45>

3212:
old  < strtoul_test$129:>
new  < strtoul_test$126:>

3213:
old  <	; Assign text[7] 97>
new  <	; Assign text[4] 49>

3214:
old  <	mov byte [rbp + 35], 97>
new  <	mov byte [rbp + 32], 49>

3216:
old  < strtoul_test$130:>
new  < strtoul_test$127:>

3217:
old  <	; Assign text[8] 98>
new  <	; Assign text[5] 50>

3218:
old  <	mov byte [rbp + 36], 98>
new  <	mov byte [rbp + 33], 50>

3220:
old  < strtoul_test$131:>
new  < strtoul_test$128:>

3221:
old  <	; Assign text[9] 99>
new  <	; Assign text[6] 51>

3222:
old  <	mov byte [rbp + 37], 99>
new  <	mov byte [rbp + 34], 51>

3224:
old  < strtoul_test$132:>
new  < strtoul_test$129:>

3225:
old  <	; Assign text[10] 0>
new  <	; Assign text[7] 97>

3226:
old  <	mov byte [rbp + 38], 0>
new  <	mov byte [rbp + 35], 97>

3228:
old  < strtoul_test$133:>
new  < strtoul_test$130:>

3229:
old  <	; PreCall 47 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Assign text[8] 98>

3230:
old  <>
new  <	mov byte [rbp + 36], 98>

3231:
old  < strtoul_test$134:>
new  <>

3232:
old  <	; Parameter 71 pointer text>
new  < strtoul_test$131:>

3233:
old  <	mov [rbp + 71], rbp>
new  <	; Assign text[9] 99>

3234:
old  <	add qword [rbp + 71], 28>
new  <	mov byte [rbp + 37], 99>

3236:
old  < strtoul_test$135:>
new  < strtoul_test$132:>

3237:
old  <	; Address Â£temporary2414 pointer>
new  <	; Assign text[10] 0>

3238:
old  <	mov rsi, rbp>
new  <	mov byte [rbp + 38], 0>

3239:
old  <	add rsi, 39>
new  <>

3240:
old  <>
new  < strtoul_test$133:>

3241:
old  < strtoul_test$136:>
new  <	; PreCall 47 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3242:
old  <	; Parameter 79 pointer Â£temporary2414>
new  <>

3243:
old  <	mov [rbp + 79], rsi>
new  < strtoul_test$134:>

3244:
old  <>
new  <	; Parameter 71 pointer text>

3245:
old  < strtoul_test$137:>
new  <	mov [rbp + 71], rbp>

3246:
old  <	; Parameter 87 signedint base>
new  <	add qword [rbp + 71], 28>

3247:
old  <	mov eax, [rbp + 24]>
new  <>

3248:
old  <	mov [rbp + 87], eax>
new  < strtoul_test$135:>

3249:
old  <>
new  <	; Address Â£temporary2401 pointer>

3250:
old  < strtoul_test$138:>
new  <	mov rsi, rbp>

3251:
old  <	; Call 47 strtoul 0>
new  <	add rsi, 39>

3252:
old  <	mov qword [rbp + 47], strtoul_test$139>
new  <>

3253:
old  <	mov [rbp + 55], rbp>
new  < strtoul_test$136:>

3254:
old  <	add rbp, 47>
new  <	; Parameter 79 pointer Â£temporary2401>

3255:
old  <	jmp strtoul>
new  <	mov [rbp + 79], rsi>

3257:
old  < strtoul_test$139:>
new  < strtoul_test$137:>

3258:
old  <	; PostCall 47>
new  <	; Parameter 87 signedint base>

3259:
old  <>
new  <	mov eax, [rbp + 24]>

3260:
old  < strtoul_test$140:>
new  <	mov [rbp + 87], eax>

3261:
old  <	; GetReturnValue Â£temporary2415>
new  <>

3262:
old  <>
new  < strtoul_test$138:>

3263:
old  < strtoul_test$141:>
new  <	; Call 47 strtoul 0>

3264:
old  <	; Assign value Â£temporary2415>
new  <	mov qword [rbp + 47], strtoul_test$139>

3265:
old  <	mov [rbp + 47], rbx>
new  <	mov [rbp + 55], rbp>

3266:
old  <>
new  <	add rbp, 47>

3267:
old  < strtoul_test$142:>
new  <	jmp strtoul>

3268:
old  <	; PreCall 55 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

3269:
old  <>
new  < strtoul_test$139:>

3270:
old  < strtoul_test$143:>
new  <	; PostCall 47>

3271:
old  <	; Parameter 79 pointer "<%s> <%li> <%s> <%i>\n">
new  <>

3272:
old  <	mov qword [rbp + 79], string_3C25s3E203C25li3E203C25s3E203C25i3E0A#>
new  < strtoul_test$140:>

3273:
old  <>
new  <	; GetReturnValue Â£temporary2402>

3274:
old  < strtoul_test$144:>
new  <>

3275:
old  <	; Parameter 87 pointer text>
new  < strtoul_test$141:>

3276:
old  <	mov [rbp + 87], rbp>
new  <	; Assign value Â£temporary2402>

3277:
old  <	add qword [rbp + 87], 28>
new  <	mov [rbp + 47], rbx>

3279:
old  < strtoul_test$145:>
new  < strtoul_test$142:>

3280:
old  <	; Parameter 95 signed long int value>
new  <	; PreCall 55 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3281:
old  <	mov rax, [rbp + 47]>
new  <>

3282:
old  <	mov [rbp + 95], rax>
new  < strtoul_test$143:>

3283:
old  <>
new  <	; Parameter 79 pointer "<%s> <%li> <%s> <%i>\n">

3284:
old  < strtoul_test$146:>
new  <	mov qword [rbp + 79], string_3C25s3E203C25li3E203C25s3E203C25i3E0A#>

3285:
old  <	; Parameter 103 pointer pointer>
new  <>

3286:
old  <	mov rax, [rbp + 39]>
new  < strtoul_test$144:>

3287:
old  <	mov [rbp + 103], rax>
new  <	; Parameter 87 pointer text>

3288:
old  <>
new  <	mov [rbp + 87], rbp>

3289:
old  < strtoul_test$147:>
new  <	add qword [rbp + 87], 28>

3290:
old  <	; Parameter 111 signedint base>
new  <>

3291:
old  <	mov eax, [rbp + 24]>
new  < strtoul_test$145:>

3292:
old  <	mov [rbp + 111], eax>
new  <	; Parameter 95 signed long int value>

3293:
old  <>
new  <	mov rax, [rbp + 47]>

3294:
old  < strtoul_test$148:>
new  <	mov [rbp + 95], rax>

3295:
old  <	; Call 55 printf 28>
new  <>

3296:
old  <	mov qword [rbp + 55], strtoul_test$149>
new  < strtoul_test$146:>

3297:
old  <	mov [rbp + 63], rbp>
new  <	; Parameter 103 pointer pointer>

3298:
old  <	add rbp, 55>
new  <	mov rax, [rbp + 39]>

3299:
old  <	mov rdi, rbp>
new  <	mov [rbp + 103], rax>

3300:
old  <	add rdi, 28>
new  <>

3301:
old  <	jmp printf>
new  < strtoul_test$147:>

3302:
old  <>
new  <	; Parameter 111 signedint base>

3303:
old  < strtoul_test$149:>
new  <	mov eax, [rbp + 24]>

3304:
old  <	; PostCall 55>
new  <	mov [rbp + 111], eax>

3306:
old  < strtoul_test$150:>
new  < strtoul_test$148:>

3307:
old  <	; Assign base 0>
new  <	; Call 55 printf 28>

3308:
old  <	mov dword [rbp + 24], 0>
new  <	mov qword [rbp + 55], strtoul_test$149>

3309:
old  <>
new  <	mov [rbp + 63], rbp>

3310:
old  < strtoul_test$151:>
new  <	add rbp, 55>

3311:
old  <	; Assign text[0] 32>
new  <	mov rdi, rbp>

3312:
old  <	mov byte [rbp + 28], 32>
new  <	add rdi, 28>

3313:
old  <>
new  <	jmp printf>

3314:
old  < strtoul_test$152:>
new  <>

3315:
old  <	; Assign text[1] 32>
new  < strtoul_test$149:>

3316:
old  <	mov byte [rbp + 29], 32>
new  <	; PostCall 55>

3318:
old  < strtoul_test$153:>
new  < strtoul_test$150:>

3319:
old  <	; Assign text[2] 32>
new  <	; Assign base 0>

3320:
old  <	mov byte [rbp + 30], 32>
new  <	mov dword [rbp + 24], 0>

3322:
old  < strtoul_test$154:>
new  < strtoul_test$151:>

3323:
old  <	; Assign text[3] 45>
new  <	; Assign text[0] 32>

3324:
old  <	mov byte [rbp + 31], 45>
new  <	mov byte [rbp + 28], 32>

3326:
old  < strtoul_test$155:>
new  < strtoul_test$152:>

3327:
old  <	; Assign text[4] 48>
new  <	; Assign text[1] 32>

3328:
old  <	mov byte [rbp + 32], 48>
new  <	mov byte [rbp + 29], 32>

3330:
old  < strtoul_test$156:>
new  < strtoul_test$153:>

3331:
old  <	; Assign text[5] 49>
new  <	; Assign text[2] 32>

3332:
old  <	mov byte [rbp + 33], 49>
new  <	mov byte [rbp + 30], 32>

3334:
old  < strtoul_test$157:>
new  < strtoul_test$154:>

3335:
old  <	; Assign text[6] 50>
new  <	; Assign text[3] 45>

3336:
old  <	mov byte [rbp + 34], 50>
new  <	mov byte [rbp + 31], 45>

3338:
old  < strtoul_test$158:>
new  < strtoul_test$155:>

3339:
old  <	; Assign text[7] 51>
new  <	; Assign text[4] 48>

3340:
old  <	mov byte [rbp + 35], 51>
new  <	mov byte [rbp + 32], 48>

3342:
old  < strtoul_test$159:>
new  < strtoul_test$156:>

3343:
old  <	; Assign text[8] 97>
new  <	; Assign text[5] 49>

3344:
old  <	mov byte [rbp + 36], 97>
new  <	mov byte [rbp + 33], 49>

3346:
old  < strtoul_test$160:>
new  < strtoul_test$157:>

3347:
old  <	; Assign text[9] 98>
new  <	; Assign text[6] 50>

3348:
old  <	mov byte [rbp + 37], 98>
new  <	mov byte [rbp + 34], 50>

3350:
old  < strtoul_test$161:>
new  < strtoul_test$158:>

3351:
old  <	; Assign text[10] 99>
new  <	; Assign text[7] 51>

3352:
old  <	mov byte [rbp + 38], 99>
new  <	mov byte [rbp + 35], 51>

3354:
old  < strtoul_test$162:>
new  < strtoul_test$159:>

3355:
old  <	; Assign text[11] 0>
new  <	; Assign text[8] 97>

3356:
old  <	mov byte [rbp + 39], 0>
new  <	mov byte [rbp + 36], 97>

3358:
old  < strtoul_test$163:>
new  < strtoul_test$160:>

3359:
old  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Assign text[9] 98>

3360:
old  <>
new  <	mov byte [rbp + 37], 98>

3361:
old  < strtoul_test$164:>
new  <>

3362:
old  <	; Parameter 72 pointer text>
new  < strtoul_test$161:>

3363:
old  <	mov [rbp + 72], rbp>
new  <	; Assign text[10] 99>

3364:
old  <	add qword [rbp + 72], 28>
new  <	mov byte [rbp + 38], 99>

3366:
old  < strtoul_test$165:>
new  < strtoul_test$162:>

3367:
old  <	; Address Â£temporary2429 pointer>
new  <	; Assign text[11] 0>

3368:
old  <	mov rsi, rbp>
new  <	mov byte [rbp + 39], 0>

3369:
old  <	add rsi, 40>
new  <>

3370:
old  <>
new  < strtoul_test$163:>

3371:
old  < strtoul_test$166:>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3372:
old  <	; Parameter 80 pointer Â£temporary2429>
new  <>

3373:
old  <	mov [rbp + 80], rsi>
new  < strtoul_test$164:>

3374:
old  <>
new  <	; Parameter 72 pointer text>

3375:
old  < strtoul_test$167:>
new  <	mov [rbp + 72], rbp>

3376:
old  <	; Parameter 88 signedint base>
new  <	add qword [rbp + 72], 28>

3377:
old  <	mov eax, [rbp + 24]>
new  <>

3378:
old  <	mov [rbp + 88], eax>
new  < strtoul_test$165:>

3379:
old  <>
new  <	; Address Â£temporary2416 pointer>

3380:
old  < strtoul_test$168:>
new  <	mov rsi, rbp>

3381:
old  <	; Call 48 strtoul 0>
new  <	add rsi, 40>

3382:
old  <	mov qword [rbp + 48], strtoul_test$169>
new  <>

3383:
old  <	mov [rbp + 56], rbp>
new  < strtoul_test$166:>

3384:
old  <	add rbp, 48>
new  <	; Parameter 80 pointer Â£temporary2416>

3385:
old  <	jmp strtoul>
new  <	mov [rbp + 80], rsi>

3387:
old  < strtoul_test$169:>
new  < strtoul_test$167:>

3388:
old  <	; PostCall 48>
new  <	; Parameter 88 signedint base>

3389:
old  <>
new  <	mov eax, [rbp + 24]>

3390:
old  < strtoul_test$170:>
new  <	mov [rbp + 88], eax>

3391:
old  <	; GetReturnValue Â£temporary2430>
new  <>

3392:
old  <>
new  < strtoul_test$168:>

3393:
old  < strtoul_test$171:>
new  <	; Call 48 strtoul 0>

3394:
old  <	; Assign value Â£temporary2430>
new  <	mov qword [rbp + 48], strtoul_test$169>

3395:
old  <	mov [rbp + 48], rbx>
new  <	mov [rbp + 56], rbp>

3396:
old  <>
new  <	add rbp, 48>

3397:
old  < strtoul_test$172:>
new  <	jmp strtoul>

3398:
old  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

3399:
old  <>
new  < strtoul_test$169:>

3400:
old  < strtoul_test$173:>
new  <	; PostCall 48>

3401:
old  <	; Parameter 80 pointer "<%s> <%li> <%s> <%i>\n">
new  <>

3402:
old  <	mov qword [rbp + 80], string_3C25s3E203C25li3E203C25s3E203C25i3E0A#>
new  < strtoul_test$170:>

3403:
old  <>
new  <	; GetReturnValue Â£temporary2417>

3404:
old  < strtoul_test$174:>
new  <>

3405:
old  <	; Parameter 88 pointer text>
new  < strtoul_test$171:>

3406:
old  <	mov [rbp + 88], rbp>
new  <	; Assign value Â£temporary2417>

3407:
old  <	add qword [rbp + 88], 28>
new  <	mov [rbp + 48], rbx>

3409:
old  < strtoul_test$175:>
new  < strtoul_test$172:>

3410:
old  <	; Parameter 96 signed long int value>
new  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3411:
old  <	mov rax, [rbp + 48]>
new  <>

3412:
old  <	mov [rbp + 96], rax>
new  < strtoul_test$173:>

3413:
old  <>
new  <	; Parameter 80 pointer "<%s> <%li> <%s> <%i>\n">

3414:
old  < strtoul_test$176:>
new  <	mov qword [rbp + 80], string_3C25s3E203C25li3E203C25s3E203C25i3E0A#>

3415:
old  <	; Parameter 104 pointer pointer>
new  <>

3416:
old  <	mov rax, [rbp + 40]>
new  < strtoul_test$174:>

3417:
old  <	mov [rbp + 104], rax>
new  <	; Parameter 88 pointer text>

3418:
old  <>
new  <	mov [rbp + 88], rbp>

3419:
old  < strtoul_test$177:>
new  <	add qword [rbp + 88], 28>

3420:
old  <	; Parameter 112 signedint base>
new  <>

3421:
old  <	mov eax, [rbp + 24]>
new  < strtoul_test$175:>

3422:
old  <	mov [rbp + 112], eax>
new  <	; Parameter 96 signed long int value>

3423:
old  <>
new  <	mov rax, [rbp + 48]>

3424:
old  < strtoul_test$178:>
new  <	mov [rbp + 96], rax>

3425:
old  <	; Call 56 printf 28>
new  <>

3426:
old  <	mov qword [rbp + 56], strtoul_test$179>
new  < strtoul_test$176:>

3427:
old  <	mov [rbp + 64], rbp>
new  <	; Parameter 104 pointer pointer>

3428:
old  <	add rbp, 56>
new  <	mov rax, [rbp + 40]>

3429:
old  <	mov rdi, rbp>
new  <	mov [rbp + 104], rax>

3430:
old  <	add rdi, 28>
new  <>

3431:
old  <	jmp printf>
new  < strtoul_test$177:>

3432:
old  <>
new  <	; Parameter 112 signedint base>

3433:
old  < strtoul_test$179:>
new  <	mov eax, [rbp + 24]>

3434:
old  <	; PostCall 56>
new  <	mov [rbp + 112], eax>

3436:
old  < strtoul_test$180:>
new  < strtoul_test$178:>

3437:
old  <	; Assign base 0>
new  <	; Call 56 printf 28>

3438:
old  <	mov dword [rbp + 24], 0>
new  <	mov qword [rbp + 56], strtoul_test$179>

3439:
old  <>
new  <	mov [rbp + 64], rbp>

3440:
old  < strtoul_test$181:>
new  <	add rbp, 56>

3441:
old  <	; Assign text[0] 32>
new  <	mov rdi, rbp>

3442:
old  <	mov byte [rbp + 28], 32>
new  <	add rdi, 28>

3443:
old  <>
new  <	jmp printf>

3444:
old  < strtoul_test$182:>
new  <>

3445:
old  <	; Assign text[1] 32>
new  < strtoul_test$179:>

3446:
old  <	mov byte [rbp + 29], 32>
new  <	; PostCall 56>

3448:
old  < strtoul_test$183:>
new  < strtoul_test$180:>

3449:
old  <	; Assign text[2] 32>
new  <	; Assign base 0>

3450:
old  <	mov byte [rbp + 30], 32>
new  <	mov dword [rbp + 24], 0>

3452:
old  < strtoul_test$184:>
new  < strtoul_test$181:>

3453:
old  <	; Assign text[3] 45>
new  <	; Assign text[0] 32>

3454:
old  <	mov byte [rbp + 31], 45>
new  <	mov byte [rbp + 28], 32>

3456:
old  < strtoul_test$185:>
new  < strtoul_test$182:>

3457:
old  <	; Assign text[4] 48>
new  <	; Assign text[1] 32>

3458:
old  <	mov byte [rbp + 32], 48>
new  <	mov byte [rbp + 29], 32>

3460:
old  < strtoul_test$186:>
new  < strtoul_test$183:>

3461:
old  <	; Assign text[5] 120>
new  <	; Assign text[2] 32>

3462:
old  <	mov byte [rbp + 33], 120>
new  <	mov byte [rbp + 30], 32>

3464:
old  < strtoul_test$187:>
new  < strtoul_test$184:>

3465:
old  <	; Assign text[6] 49>
new  <	; Assign text[3] 45>

3466:
old  <	mov byte [rbp + 34], 49>
new  <	mov byte [rbp + 31], 45>

3468:
old  < strtoul_test$188:>
new  < strtoul_test$185:>

3469:
old  <	; Assign text[7] 50>
new  <	; Assign text[4] 48>

3470:
old  <	mov byte [rbp + 35], 50>
new  <	mov byte [rbp + 32], 48>

3472:
old  < strtoul_test$189:>
new  < strtoul_test$186:>

3473:
old  <	; Assign text[8] 51>
new  <	; Assign text[5] 120>

3474:
old  <	mov byte [rbp + 36], 51>
new  <	mov byte [rbp + 33], 120>

3476:
old  < strtoul_test$190:>
new  < strtoul_test$187:>

3477:
old  <	; Assign text[9] 65>
new  <	; Assign text[6] 49>

3478:
old  <	mov byte [rbp + 37], 65>
new  <	mov byte [rbp + 34], 49>

3480:
old  < strtoul_test$191:>
new  < strtoul_test$188:>

3481:
old  <	; Assign text[10] 66>
new  <	; Assign text[7] 50>

3482:
old  <	mov byte [rbp + 38], 66>
new  <	mov byte [rbp + 35], 50>

3484:
old  < strtoul_test$192:>
new  < strtoul_test$189:>

3485:
old  <	; Assign text[11] 67>
new  <	; Assign text[8] 51>

3486:
old  <	mov byte [rbp + 39], 67>
new  <	mov byte [rbp + 36], 51>

3488:
old  < strtoul_test$193:>
new  < strtoul_test$190:>

3489:
old  <	; Assign text[12] 0>
new  <	; Assign text[9] 65>

3490:
old  <	mov byte [rbp + 40], 0>
new  <	mov byte [rbp + 37], 65>

3492:
old  < strtoul_test$194:>
new  < strtoul_test$191:>

3493:
old  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Assign text[10] 66>

3494:
old  <>
new  <	mov byte [rbp + 38], 66>

3495:
old  < strtoul_test$195:>
new  <>

3496:
old  <	; Parameter 73 pointer text>
new  < strtoul_test$192:>

3497:
old  <	mov [rbp + 73], rbp>
new  <	; Assign text[11] 67>

3498:
old  <	add qword [rbp + 73], 28>
new  <	mov byte [rbp + 39], 67>

3500:
old  < strtoul_test$196:>
new  < strtoul_test$193:>

3501:
old  <	; Address Â£temporary2445 pointer>
new  <	; Assign text[12] 0>

3502:
old  <	mov rsi, rbp>
new  <	mov byte [rbp + 40], 0>

3503:
old  <	add rsi, 41>
new  <>

3504:
old  <>
new  < strtoul_test$194:>

3505:
old  < strtoul_test$197:>
new  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3506:
old  <	; Parameter 81 pointer Â£temporary2445>
new  <>

3507:
old  <	mov [rbp + 81], rsi>
new  < strtoul_test$195:>

3508:
old  <>
new  <	; Parameter 73 pointer text>

3509:
old  < strtoul_test$198:>
new  <	mov [rbp + 73], rbp>

3510:
old  <	; Parameter 89 signedint base>
new  <	add qword [rbp + 73], 28>

3511:
old  <	mov eax, [rbp + 24]>
new  <>

3512:
old  <	mov [rbp + 89], eax>
new  < strtoul_test$196:>

3513:
old  <>
new  <	; Address Â£temporary2432 pointer>

3514:
old  < strtoul_test$199:>
new  <	mov rsi, rbp>

3515:
old  <	; Call 49 strtoul 0>
new  <	add rsi, 41>

3516:
old  <	mov qword [rbp + 49], strtoul_test$200>
new  <>

3517:
old  <	mov [rbp + 57], rbp>
new  < strtoul_test$197:>

3518:
old  <	add rbp, 49>
new  <	; Parameter 81 pointer Â£temporary2432>

3519:
old  <	jmp strtoul>
new  <	mov [rbp + 81], rsi>

3521:
old  < strtoul_test$200:>
new  < strtoul_test$198:>

3522:
old  <	; PostCall 49>
new  <	; Parameter 89 signedint base>

3523:
old  <>
new  <	mov eax, [rbp + 24]>

3524:
old  < strtoul_test$201:>
new  <	mov [rbp + 89], eax>

3525:
old  <	; GetReturnValue Â£temporary2446>
new  <>

3526:
old  <>
new  < strtoul_test$199:>

3527:
old  < strtoul_test$202:>
new  <	; Call 49 strtoul 0>

3528:
old  <	; Assign value Â£temporary2446>
new  <	mov qword [rbp + 49], strtoul_test$200>

3529:
old  <	mov [rbp + 49], rbx>
new  <	mov [rbp + 57], rbp>

3530:
old  <>
new  <	add rbp, 49>

3531:
old  < strtoul_test$203:>
new  <	jmp strtoul>

3532:
old  <	; PreCall 57 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

3533:
old  <>
new  < strtoul_test$200:>

3534:
old  < strtoul_test$204:>
new  <	; PostCall 49>

3535:
old  <	; Parameter 81 pointer "<%s> <%li> <%s> <%i>\n">
new  <>

3536:
old  <	mov qword [rbp + 81], string_3C25s3E203C25li3E203C25s3E203C25i3E0A#>
new  < strtoul_test$201:>

3537:
old  <>
new  <	; GetReturnValue Â£temporary2433>

3538:
old  < strtoul_test$205:>
new  <>

3539:
old  <	; Parameter 89 pointer text>
new  < strtoul_test$202:>

3540:
old  <	mov [rbp + 89], rbp>
new  <	; Assign value Â£temporary2433>

3541:
old  <	add qword [rbp + 89], 28>
new  <	mov [rbp + 49], rbx>

3543:
old  < strtoul_test$206:>
new  < strtoul_test$203:>

3544:
old  <	; Parameter 97 signed long int value>
new  <	; PreCall 57 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3545:
old  <	mov rax, [rbp + 49]>
new  <>

3546:
old  <	mov [rbp + 97], rax>
new  < strtoul_test$204:>

3547:
old  <>
new  <	; Parameter 81 pointer "<%s> <%li> <%s> <%i>\n">

3548:
old  < strtoul_test$207:>
new  <	mov qword [rbp + 81], string_3C25s3E203C25li3E203C25s3E203C25i3E0A#>

3549:
old  <	; Parameter 105 pointer pointer>
new  <>

3550:
old  <	mov rax, [rbp + 41]>
new  < strtoul_test$205:>

3551:
old  <	mov [rbp + 105], rax>
new  <	; Parameter 89 pointer text>

3552:
old  <>
new  <	mov [rbp + 89], rbp>

3553:
old  < strtoul_test$208:>
new  <	add qword [rbp + 89], 28>

3554:
old  <	; Parameter 113 signedint base>
new  <>

3555:
old  <	mov eax, [rbp + 24]>
new  < strtoul_test$206:>

3556:
old  <	mov [rbp + 113], eax>
new  <	; Parameter 97 signed long int value>

3557:
old  <>
new  <	mov rax, [rbp + 49]>

3558:
old  < strtoul_test$209:>
new  <	mov [rbp + 97], rax>

3559:
old  <	; Call 57 printf 28>
new  <>

3560:
old  <	mov qword [rbp + 57], strtoul_test$210>
new  < strtoul_test$207:>

3561:
old  <	mov [rbp + 65], rbp>
new  <	; Parameter 105 pointer pointer>

3562:
old  <	add rbp, 57>
new  <	mov rax, [rbp + 41]>

3563:
old  <	mov rdi, rbp>
new  <	mov [rbp + 105], rax>

3564:
old  <	add rdi, 28>
new  <>

3565:
old  <	jmp printf>
new  < strtoul_test$208:>

3566:
old  <>
new  <	; Parameter 113 signedint base>

3567:
old  < strtoul_test$210:>
new  <	mov eax, [rbp + 24]>

3568:
old  <	; PostCall 57>
new  <	mov [rbp + 113], eax>

3570:
old  < strtoul_test$211:>
new  < strtoul_test$209:>

3571:
old  <	; Assign base 0>
new  <	; Call 57 printf 28>

3572:
old  <	mov dword [rbp + 24], 0>
new  <	mov qword [rbp + 57], strtoul_test$210>

3573:
old  <>
new  <	mov [rbp + 65], rbp>

3574:
old  < strtoul_test$212:>
new  <	add rbp, 57>

3575:
old  <	; Assign text[0] 32>
new  <	mov rdi, rbp>

3576:
old  <	mov byte [rbp + 28], 32>
new  <	add rdi, 28>

3577:
old  <>
new  <	jmp printf>

3578:
old  < strtoul_test$213:>
new  <>

3579:
old  <	; Assign text[1] 32>
new  < strtoul_test$210:>

3580:
old  <	mov byte [rbp + 29], 32>
new  <	; PostCall 57>

3582:
old  < strtoul_test$214:>
new  < strtoul_test$211:>

3583:
old  <	; Assign text[2] 32>
new  <	; Assign base 0>

3584:
old  <	mov byte [rbp + 30], 32>
new  <	mov dword [rbp + 24], 0>

3586:
old  < strtoul_test$215:>
new  < strtoul_test$212:>

3587:
old  <	; Assign text[3] 45>
new  <	; Assign text[0] 32>

3588:
old  <	mov byte [rbp + 31], 45>
new  <	mov byte [rbp + 28], 32>

3590:
old  < strtoul_test$216:>
new  < strtoul_test$213:>

3591:
old  <	; Assign text[4] 48>
new  <	; Assign text[1] 32>

3592:
old  <	mov byte [rbp + 32], 48>
new  <	mov byte [rbp + 29], 32>

3594:
old  < strtoul_test$217:>
new  < strtoul_test$214:>

3595:
old  <	; Assign text[5] 88>
new  <	; Assign text[2] 32>

3596:
old  <	mov byte [rbp + 33], 88>
new  <	mov byte [rbp + 30], 32>

3598:
old  < strtoul_test$218:>
new  < strtoul_test$215:>

3599:
old  <	; Assign text[6] 49>
new  <	; Assign text[3] 45>

3600:
old  <	mov byte [rbp + 34], 49>
new  <	mov byte [rbp + 31], 45>

3602:
old  < strtoul_test$219:>
new  < strtoul_test$216:>

3603:
old  <	; Assign text[7] 50>
new  <	; Assign text[4] 48>

3604:
old  <	mov byte [rbp + 35], 50>
new  <	mov byte [rbp + 32], 48>

3606:
old  < strtoul_test$220:>
new  < strtoul_test$217:>

3607:
old  <	; Assign text[8] 51>
new  <	; Assign text[5] 88>

3608:
old  <	mov byte [rbp + 36], 51>
new  <	mov byte [rbp + 33], 88>

3610:
old  < strtoul_test$221:>
new  < strtoul_test$218:>

3611:
old  <	; Assign text[9] 97>
new  <	; Assign text[6] 49>

3612:
old  <	mov byte [rbp + 37], 97>
new  <	mov byte [rbp + 34], 49>

3614:
old  < strtoul_test$222:>
new  < strtoul_test$219:>

3615:
old  <	; Assign text[10] 98>
new  <	; Assign text[7] 50>

3616:
old  <	mov byte [rbp + 38], 98>
new  <	mov byte [rbp + 35], 50>

3618:
old  < strtoul_test$223:>
new  < strtoul_test$220:>

3619:
old  <	; Assign text[11] 99>
new  <	; Assign text[8] 51>

3620:
old  <	mov byte [rbp + 39], 99>
new  <	mov byte [rbp + 36], 51>

3622:
old  < strtoul_test$224:>
new  < strtoul_test$221:>

3623:
old  <	; Assign text[12] 0>
new  <	; Assign text[9] 97>

3624:
old  <	mov byte [rbp + 40], 0>
new  <	mov byte [rbp + 37], 97>

3626:
old  < strtoul_test$225:>
new  < strtoul_test$222:>

3627:
old  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Assign text[10] 98>

3628:
old  <>
new  <	mov byte [rbp + 38], 98>

3629:
old  < strtoul_test$226:>
new  <>

3630:
old  <	; Parameter 73 pointer text>
new  < strtoul_test$223:>

3631:
old  <	mov [rbp + 73], rbp>
new  <	; Assign text[11] 99>

3632:
old  <	add qword [rbp + 73], 28>
new  <	mov byte [rbp + 39], 99>

3634:
old  < strtoul_test$227:>
new  < strtoul_test$224:>

3635:
old  <	; Address Â£temporary2461 pointer>
new  <	; Assign text[12] 0>

3636:
old  <	mov rsi, rbp>
new  <	mov byte [rbp + 40], 0>

3637:
old  <	add rsi, 41>
new  <>

3638:
old  <>
new  < strtoul_test$225:>

3639:
old  < strtoul_test$228:>
new  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3640:
old  <	; Parameter 81 pointer Â£temporary2461>
new  <>

3641:
old  <	mov [rbp + 81], rsi>
new  < strtoul_test$226:>

3642:
old  <>
new  <	; Parameter 73 pointer text>

3643:
old  < strtoul_test$229:>
new  <	mov [rbp + 73], rbp>

3644:
old  <	; Parameter 89 signedint base>
new  <	add qword [rbp + 73], 28>

3645:
old  <	mov eax, [rbp + 24]>
new  <>

3646:
old  <	mov [rbp + 89], eax>
new  < strtoul_test$227:>

3647:
old  <>
new  <	; Address Â£temporary2448 pointer>

3648:
old  < strtoul_test$230:>
new  <	mov rsi, rbp>

3649:
old  <	; Call 49 strtoul 0>
new  <	add rsi, 41>

3650:
old  <	mov qword [rbp + 49], strtoul_test$231>
new  <>

3651:
old  <	mov [rbp + 57], rbp>
new  < strtoul_test$228:>

3652:
old  <	add rbp, 49>
new  <	; Parameter 81 pointer Â£temporary2448>

3653:
old  <	jmp strtoul>
new  <	mov [rbp + 81], rsi>

3655:
old  < strtoul_test$231:>
new  < strtoul_test$229:>

3656:
old  <	; PostCall 49>
new  <	; Parameter 89 signedint base>

3657:
old  <>
new  <	mov eax, [rbp + 24]>

3658:
old  < strtoul_test$232:>
new  <	mov [rbp + 89], eax>

3659:
old  <	; GetReturnValue Â£temporary2462>
new  <>

3660:
old  <>
new  < strtoul_test$230:>

3661:
old  < strtoul_test$233:>
new  <	; Call 49 strtoul 0>

3662:
old  <	; Assign value Â£temporary2462>
new  <	mov qword [rbp + 49], strtoul_test$231>

3663:
old  <	mov [rbp + 49], rbx>
new  <	mov [rbp + 57], rbp>

3664:
old  <>
new  <	add rbp, 49>

3665:
old  < strtoul_test$234:>
new  <	jmp strtoul>

3666:
old  <	; PreCall 57 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

3667:
old  <>
new  < strtoul_test$231:>

3668:
old  < strtoul_test$235:>
new  <	; PostCall 49>

3669:
old  <	; Parameter 81 pointer "<%s> <%li> <%s> <%i>\n">
new  <>

3670:
old  <	mov qword [rbp + 81], string_3C25s3E203C25li3E203C25s3E203C25i3E0A#>
new  < strtoul_test$232:>

3671:
old  <>
new  <	; GetReturnValue Â£temporary2449>

3672:
old  < strtoul_test$236:>
new  <>

3673:
old  <	; Parameter 89 pointer text>
new  < strtoul_test$233:>

3674:
old  <	mov [rbp + 89], rbp>
new  <	; Assign value Â£temporary2449>

3675:
old  <	add qword [rbp + 89], 28>
new  <	mov [rbp + 49], rbx>

3677:
old  < strtoul_test$237:>
new  < strtoul_test$234:>

3678:
old  <	; Parameter 97 signed long int value>
new  <	; PreCall 57 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3679:
old  <	mov rax, [rbp + 49]>
new  <>

3680:
old  <	mov [rbp + 97], rax>
new  < strtoul_test$235:>

3681:
old  <>
new  <	; Parameter 81 pointer "<%s> <%li> <%s> <%i>\n">

3682:
old  < strtoul_test$238:>
new  <	mov qword [rbp + 81], string_3C25s3E203C25li3E203C25s3E203C25i3E0A#>

3683:
old  <	; Parameter 105 pointer pointer>
new  <>

3684:
old  <	mov rax, [rbp + 41]>
new  < strtoul_test$236:>

3685:
old  <	mov [rbp + 105], rax>
new  <	; Parameter 89 pointer text>

3686:
old  <>
new  <	mov [rbp + 89], rbp>

3687:
old  < strtoul_test$239:>
new  <	add qword [rbp + 89], 28>

3688:
old  <	; Parameter 113 signedint base>
new  <>

3689:
old  <	mov eax, [rbp + 24]>
new  < strtoul_test$237:>

3690:
old  <	mov [rbp + 113], eax>
new  <	; Parameter 97 signed long int value>

3691:
old  <>
new  <	mov rax, [rbp + 49]>

3692:
old  < strtoul_test$240:>
new  <	mov [rbp + 97], rax>

3693:
old  <	; Call 57 printf 28>
new  <>

3694:
old  <	mov qword [rbp + 57], strtoul_test$241>
new  < strtoul_test$238:>

3695:
old  <	mov [rbp + 65], rbp>
new  <	; Parameter 105 pointer pointer>

3696:
old  <	add rbp, 57>
new  <	mov rax, [rbp + 41]>

3697:
old  <	mov rdi, rbp>
new  <	mov [rbp + 105], rax>

3698:
old  <	add rdi, 28>
new  <>

3699:
old  <	jmp printf>
new  < strtoul_test$239:>

3700:
old  <>
new  <	; Parameter 113 signedint base>

3701:
old  < strtoul_test$241:>
new  <	mov eax, [rbp + 24]>

3702:
old  <	; PostCall 57>
new  <	mov [rbp + 113], eax>

3704:
old  < strtoul_test$242:>
new  < strtoul_test$240:>

3705:
old  <	; Assign base 9>
new  <	; Call 57 printf 28>

3706:
old  <	mov dword [rbp + 24], 9>
new  <	mov qword [rbp + 57], strtoul_test$241>

3707:
old  <>
new  <	mov [rbp + 65], rbp>

3708:
old  < strtoul_test$243:>
new  <	add rbp, 57>

3709:
old  <	; Assign text[0] 32>
new  <	mov rdi, rbp>

3710:
old  <	mov byte [rbp + 28], 32>
new  <	add rdi, 28>

3711:
old  <>
new  <	jmp printf>

3712:
old  < strtoul_test$244:>
new  <>

3713:
old  <	; Assign text[1] 32>
new  < strtoul_test$241:>

3714:
old  <	mov byte [rbp + 29], 32>
new  <	; PostCall 57>

3716:
old  < strtoul_test$245:>
new  < strtoul_test$242:>

3717:
old  <	; Assign text[2] 32>
new  <	; Assign base 9>

3718:
old  <	mov byte [rbp + 30], 32>
new  <	mov dword [rbp + 24], 9>

3720:
old  < strtoul_test$246:>
new  < strtoul_test$243:>

3721:
old  <	; Assign text[3] 43>
new  <	; Assign text[0] 32>

3722:
old  <	mov byte [rbp + 31], 43>
new  <	mov byte [rbp + 28], 32>

3724:
old  < strtoul_test$247:>
new  < strtoul_test$244:>

3725:
old  <	; Assign text[4] 49>
new  <	; Assign text[1] 32>

3726:
old  <	mov byte [rbp + 32], 49>
new  <	mov byte [rbp + 29], 32>

3728:
old  < strtoul_test$248:>
new  < strtoul_test$245:>

3729:
old  <	; Assign text[5] 50>
new  <	; Assign text[2] 32>

3730:
old  <	mov byte [rbp + 33], 50>
new  <	mov byte [rbp + 30], 32>

3732:
old  < strtoul_test$249:>
new  < strtoul_test$246:>

3733:
old  <	; Assign text[6] 51>
new  <	; Assign text[3] 43>

3734:
old  <	mov byte [rbp + 34], 51>
new  <	mov byte [rbp + 31], 43>

3736:
old  < strtoul_test$250:>
new  < strtoul_test$247:>

3737:
old  <	; Assign text[7] 97>
new  <	; Assign text[4] 49>

3738:
old  <	mov byte [rbp + 35], 97>
new  <	mov byte [rbp + 32], 49>

3740:
old  < strtoul_test$251:>
new  < strtoul_test$248:>

3741:
old  <	; Assign text[8] 98>
new  <	; Assign text[5] 50>

3742:
old  <	mov byte [rbp + 36], 98>
new  <	mov byte [rbp + 33], 50>

3744:
old  < strtoul_test$252:>
new  < strtoul_test$249:>

3745:
old  <	; Assign text[9] 99>
new  <	; Assign text[6] 51>

3746:
old  <	mov byte [rbp + 37], 99>
new  <	mov byte [rbp + 34], 51>

3748:
old  < strtoul_test$253:>
new  < strtoul_test$250:>

3749:
old  <	; Assign text[10] 0>
new  <	; Assign text[7] 97>

3750:
old  <	mov byte [rbp + 38], 0>
new  <	mov byte [rbp + 35], 97>

3752:
old  < strtoul_test$254:>
new  < strtoul_test$251:>

3753:
old  <	; PreCall 47 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Assign text[8] 98>

3754:
old  <>
new  <	mov byte [rbp + 36], 98>

3755:
old  < strtoul_test$255:>
new  <>

3756:
old  <	; Parameter 71 pointer text>
new  < strtoul_test$252:>

3757:
old  <	mov [rbp + 71], rbp>
new  <	; Assign text[9] 99>

3758:
old  <	add qword [rbp + 71], 28>
new  <	mov byte [rbp + 37], 99>

3760:
old  < strtoul_test$256:>
new  < strtoul_test$253:>

3761:
old  <	; Address Â£temporary2475 pointer>
new  <	; Assign text[10] 0>

3762:
old  <	mov rsi, rbp>
new  <	mov byte [rbp + 38], 0>

3763:
old  <	add rsi, 39>
new  <>

3764:
old  <>
new  < strtoul_test$254:>

3765:
old  < strtoul_test$257:>
new  <	; PreCall 47 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3766:
old  <	; Parameter 79 pointer Â£temporary2475>
new  <>

3767:
old  <	mov [rbp + 79], rsi>
new  < strtoul_test$255:>

3768:
old  <>
new  <	; Parameter 71 pointer text>

3769:
old  < strtoul_test$258:>
new  <	mov [rbp + 71], rbp>

3770:
old  <	; Parameter 87 signedint base>
new  <	add qword [rbp + 71], 28>

3771:
old  <	mov eax, [rbp + 24]>
new  <>

3772:
old  <	mov [rbp + 87], eax>
new  < strtoul_test$256:>

3773:
old  <>
new  <	; Address Â£temporary2462 pointer>

3774:
old  < strtoul_test$259:>
new  <	mov rsi, rbp>

3775:
old  <	; Call 47 strtoul 0>
new  <	add rsi, 39>

3776:
old  <	mov qword [rbp + 47], strtoul_test$260>
new  <>

3777:
old  <	mov [rbp + 55], rbp>
new  < strtoul_test$257:>

3778:
old  <	add rbp, 47>
new  <	; Parameter 79 pointer Â£temporary2462>

3779:
old  <	jmp strtoul>
new  <	mov [rbp + 79], rsi>

3781:
old  < strtoul_test$260:>
new  < strtoul_test$258:>

3782:
old  <	; PostCall 47>
new  <	; Parameter 87 signedint base>

3783:
old  <>
new  <	mov eax, [rbp + 24]>

3784:
old  < strtoul_test$261:>
new  <	mov [rbp + 87], eax>

3785:
old  <	; GetReturnValue Â£temporary2476>
new  <>

3786:
old  <>
new  < strtoul_test$259:>

3787:
old  < strtoul_test$262:>
new  <	; Call 47 strtoul 0>

3788:
old  <	; Assign value Â£temporary2476>
new  <	mov qword [rbp + 47], strtoul_test$260>

3789:
old  <	mov [rbp + 47], rbx>
new  <	mov [rbp + 55], rbp>

3790:
old  <>
new  <	add rbp, 47>

3791:
old  < strtoul_test$263:>
new  <	jmp strtoul>

3792:
old  <	; PreCall 55 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

3793:
old  <>
new  < strtoul_test$260:>

3794:
old  < strtoul_test$264:>
new  <	; PostCall 47>

3795:
old  <	; Parameter 79 pointer "<%s> <%li> <%s> <%i>\n">
new  <>

3796:
old  <	mov qword [rbp + 79], string_3C25s3E203C25li3E203C25s3E203C25i3E0A#>
new  < strtoul_test$261:>

3797:
old  <>
new  <	; GetReturnValue Â£temporary2463>

3798:
old  < strtoul_test$265:>
new  <>

3799:
old  <	; Parameter 87 pointer text>
new  < strtoul_test$262:>

3800:
old  <	mov [rbp + 87], rbp>
new  <	; Assign value Â£temporary2463>

3801:
old  <	add qword [rbp + 87], 28>
new  <	mov [rbp + 47], rbx>

3803:
old  < strtoul_test$266:>
new  < strtoul_test$263:>

3804:
old  <	; Parameter 95 signed long int value>
new  <	; PreCall 55 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3805:
old  <	mov rax, [rbp + 47]>
new  <>

3806:
old  <	mov [rbp + 95], rax>
new  < strtoul_test$264:>

3807:
old  <>
new  <	; Parameter 79 pointer "<%s> <%li> <%s> <%i>\n">

3808:
old  < strtoul_test$267:>
new  <	mov qword [rbp + 79], string_3C25s3E203C25li3E203C25s3E203C25i3E0A#>

3809:
old  <	; Parameter 103 pointer pointer>
new  <>

3810:
old  <	mov rax, [rbp + 39]>
new  < strtoul_test$265:>

3811:
old  <	mov [rbp + 103], rax>
new  <	; Parameter 87 pointer text>

3812:
old  <>
new  <	mov [rbp + 87], rbp>

3813:
old  < strtoul_test$268:>
new  <	add qword [rbp + 87], 28>

3814:
old  <	; Parameter 111 signedint base>
new  <>

3815:
old  <	mov eax, [rbp + 24]>
new  < strtoul_test$266:>

3816:
old  <	mov [rbp + 111], eax>
new  <	; Parameter 95 signed long int value>

3817:
old  <>
new  <	mov rax, [rbp + 47]>

3818:
old  < strtoul_test$269:>
new  <	mov [rbp + 95], rax>

3819:
old  <	; Call 55 printf 28>
new  <>

3820:
old  <	mov qword [rbp + 55], strtoul_test$270>
new  < strtoul_test$267:>

3821:
old  <	mov [rbp + 63], rbp>
new  <	; Parameter 103 pointer pointer>

3822:
old  <	add rbp, 55>
new  <	mov rax, [rbp + 39]>

3823:
old  <	mov rdi, rbp>
new  <	mov [rbp + 103], rax>

3824:
old  <	add rdi, 28>
new  <>

3825:
old  <	jmp printf>
new  < strtoul_test$268:>

3826:
old  <>
new  <	; Parameter 111 signedint base>

3827:
old  < strtoul_test$270:>
new  <	mov eax, [rbp + 24]>

3828:
old  <	; PostCall 55>
new  <	mov [rbp + 111], eax>

3830:
old  < strtoul_test$271:>
new  < strtoul_test$269:>

3831:
old  <	; Assign base 10>
new  <	; Call 55 printf 28>

3832:
old  <	mov dword [rbp + 24], 10>
new  <	mov qword [rbp + 55], strtoul_test$270>

3833:
old  <>
new  <	mov [rbp + 63], rbp>

3834:
old  < strtoul_test$272:>
new  <	add rbp, 55>

3835:
old  <	; Assign text[0] 32>
new  <	mov rdi, rbp>

3836:
old  <	mov byte [rbp + 28], 32>
new  <	add rdi, 28>

3837:
old  <>
new  <	jmp printf>

3838:
old  < strtoul_test$273:>
new  <>

3839:
old  <	; Assign text[1] 32>
new  < strtoul_test$270:>

3840:
old  <	mov byte [rbp + 29], 32>
new  <	; PostCall 55>

3842:
old  < strtoul_test$274:>
new  < strtoul_test$271:>

3843:
old  <	; Assign text[2] 32>
new  <	; Assign base 10>

3844:
old  <	mov byte [rbp + 30], 32>
new  <	mov dword [rbp + 24], 10>

3846:
old  < strtoul_test$275:>
new  < strtoul_test$272:>

3847:
old  <	; Assign text[3] 43>
new  <	; Assign text[0] 32>

3848:
old  <	mov byte [rbp + 31], 43>
new  <	mov byte [rbp + 28], 32>

3850:
old  < strtoul_test$276:>
new  < strtoul_test$273:>

3851:
old  <	; Assign text[4] 49>
new  <	; Assign text[1] 32>

3852:
old  <	mov byte [rbp + 32], 49>
new  <	mov byte [rbp + 29], 32>

3854:
old  < strtoul_test$277:>
new  < strtoul_test$274:>

3855:
old  <	; Assign text[5] 50>
new  <	; Assign text[2] 32>

3856:
old  <	mov byte [rbp + 33], 50>
new  <	mov byte [rbp + 30], 32>

3858:
old  < strtoul_test$278:>
new  < strtoul_test$275:>

3859:
old  <	; Assign text[6] 51>
new  <	; Assign text[3] 43>

3860:
old  <	mov byte [rbp + 34], 51>
new  <	mov byte [rbp + 31], 43>

3862:
old  < strtoul_test$279:>
new  < strtoul_test$276:>

3863:
old  <	; Assign text[7] 97>
new  <	; Assign text[4] 49>

3864:
old  <	mov byte [rbp + 35], 97>
new  <	mov byte [rbp + 32], 49>

3866:
old  < strtoul_test$280:>
new  < strtoul_test$277:>

3867:
old  <	; Assign text[8] 98>
new  <	; Assign text[5] 50>

3868:
old  <	mov byte [rbp + 36], 98>
new  <	mov byte [rbp + 33], 50>

3870:
old  < strtoul_test$281:>
new  < strtoul_test$278:>

3871:
old  <	; Assign text[9] 99>
new  <	; Assign text[6] 51>

3872:
old  <	mov byte [rbp + 37], 99>
new  <	mov byte [rbp + 34], 51>

3874:
old  < strtoul_test$282:>
new  < strtoul_test$279:>

3875:
old  <	; Assign text[10] 0>
new  <	; Assign text[7] 97>

3876:
old  <	mov byte [rbp + 38], 0>
new  <	mov byte [rbp + 35], 97>

3878:
old  < strtoul_test$283:>
new  < strtoul_test$280:>

3879:
old  <	; PreCall 47 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Assign text[8] 98>

3880:
old  <>
new  <	mov byte [rbp + 36], 98>

3881:
old  < strtoul_test$284:>
new  <>

3882:
old  <	; Parameter 71 pointer text>
new  < strtoul_test$281:>

3883:
old  <	mov [rbp + 71], rbp>
new  <	; Assign text[9] 99>

3884:
old  <	add qword [rbp + 71], 28>
new  <	mov byte [rbp + 37], 99>

3886:
old  < strtoul_test$285:>
new  < strtoul_test$282:>

3887:
old  <	; Address Â£temporary2489 pointer>
new  <	; Assign text[10] 0>

3888:
old  <	mov rsi, rbp>
new  <	mov byte [rbp + 38], 0>

3889:
old  <	add rsi, 39>
new  <>

3890:
old  <>
new  < strtoul_test$283:>

3891:
old  < strtoul_test$286:>
new  <	; PreCall 47 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3892:
old  <	; Parameter 79 pointer Â£temporary2489>
new  <>

3893:
old  <	mov [rbp + 79], rsi>
new  < strtoul_test$284:>

3894:
old  <>
new  <	; Parameter 71 pointer text>

3895:
old  < strtoul_test$287:>
new  <	mov [rbp + 71], rbp>

3896:
old  <	; Parameter 87 signedint base>
new  <	add qword [rbp + 71], 28>

3897:
old  <	mov eax, [rbp + 24]>
new  <>

3898:
old  <	mov [rbp + 87], eax>
new  < strtoul_test$285:>

3899:
old  <>
new  <	; Address Â£temporary2476 pointer>

3900:
old  < strtoul_test$288:>
new  <	mov rsi, rbp>

3901:
old  <	; Call 47 strtoul 0>
new  <	add rsi, 39>

3902:
old  <	mov qword [rbp + 47], strtoul_test$289>
new  <>

3903:
old  <	mov [rbp + 55], rbp>
new  < strtoul_test$286:>

3904:
old  <	add rbp, 47>
new  <	; Parameter 79 pointer Â£temporary2476>

3905:
old  <	jmp strtoul>
new  <	mov [rbp + 79], rsi>

3907:
old  < strtoul_test$289:>
new  < strtoul_test$287:>

3908:
old  <	; PostCall 47>
new  <	; Parameter 87 signedint base>

3909:
old  <>
new  <	mov eax, [rbp + 24]>

3910:
old  < strtoul_test$290:>
new  <	mov [rbp + 87], eax>

3911:
old  <	; GetReturnValue Â£temporary2490>
new  <>

3912:
old  <>
new  < strtoul_test$288:>

3913:
old  < strtoul_test$291:>
new  <	; Call 47 strtoul 0>

3914:
old  <	; Assign value Â£temporary2490>
new  <	mov qword [rbp + 47], strtoul_test$289>

3915:
old  <	mov [rbp + 47], rbx>
new  <	mov [rbp + 55], rbp>

3916:
old  <>
new  <	add rbp, 47>

3917:
old  < strtoul_test$292:>
new  <	jmp strtoul>

3918:
old  <	; PreCall 55 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

3919:
old  <>
new  < strtoul_test$289:>

3920:
old  < strtoul_test$293:>
new  <	; PostCall 47>

3921:
old  <	; Parameter 79 pointer "<%s> <%li> <%s> <%i>\n">
new  <>

3922:
old  <	mov qword [rbp + 79], string_3C25s3E203C25li3E203C25s3E203C25i3E0A#>
new  < strtoul_test$290:>

3923:
old  <>
new  <	; GetReturnValue Â£temporary2477>

3924:
old  < strtoul_test$294:>
new  <>

3925:
old  <	; Parameter 87 pointer text>
new  < strtoul_test$291:>

3926:
old  <	mov [rbp + 87], rbp>
new  <	; Assign value Â£temporary2477>

3927:
old  <	add qword [rbp + 87], 28>
new  <	mov [rbp + 47], rbx>

3929:
old  < strtoul_test$295:>
new  < strtoul_test$292:>

3930:
old  <	; Parameter 95 signed long int value>
new  <	; PreCall 55 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3931:
old  <	mov rax, [rbp + 47]>
new  <>

3932:
old  <	mov [rbp + 95], rax>
new  < strtoul_test$293:>

3933:
old  <>
new  <	; Parameter 79 pointer "<%s> <%li> <%s> <%i>\n">

3934:
old  < strtoul_test$296:>
new  <	mov qword [rbp + 79], string_3C25s3E203C25li3E203C25s3E203C25i3E0A#>

3935:
old  <	; Parameter 103 pointer pointer>
new  <>

3936:
old  <	mov rax, [rbp + 39]>
new  < strtoul_test$294:>

3937:
old  <	mov [rbp + 103], rax>
new  <	; Parameter 87 pointer text>

3938:
old  <>
new  <	mov [rbp + 87], rbp>

3939:
old  < strtoul_test$297:>
new  <	add qword [rbp + 87], 28>

3940:
old  <	; Parameter 111 signedint base>
new  <>

3941:
old  <	mov eax, [rbp + 24]>
new  < strtoul_test$295:>

3942:
old  <	mov [rbp + 111], eax>
new  <	; Parameter 95 signed long int value>

3943:
old  <>
new  <	mov rax, [rbp + 47]>

3944:
old  < strtoul_test$298:>
new  <	mov [rbp + 95], rax>

3945:
old  <	; Call 55 printf 28>
new  <>

3946:
old  <	mov qword [rbp + 55], strtoul_test$299>
new  < strtoul_test$296:>

3947:
old  <	mov [rbp + 63], rbp>
new  <	; Parameter 103 pointer pointer>

3948:
old  <	add rbp, 55>
new  <	mov rax, [rbp + 39]>

3949:
old  <	mov rdi, rbp>
new  <	mov [rbp + 103], rax>

3950:
old  <	add rdi, 28>
new  <>

3951:
old  <	jmp printf>
new  < strtoul_test$297:>

3952:
old  <>
new  <	; Parameter 111 signedint base>

3953:
old  < strtoul_test$299:>
new  <	mov eax, [rbp + 24]>

3954:
old  <	; PostCall 55>
new  <	mov [rbp + 111], eax>

3956:
old  < strtoul_test$300:>
new  < strtoul_test$298:>

3957:
old  <	; Assign base 11>
new  <	; Call 55 printf 28>

3958:
old  <	mov dword [rbp + 24], 11>
new  <	mov qword [rbp + 55], strtoul_test$299>

3959:
old  <>
new  <	mov [rbp + 63], rbp>

3960:
old  < strtoul_test$301:>
new  <	add rbp, 55>

3961:
old  <	; Assign text[0] 32>
new  <	mov rdi, rbp>

3962:
old  <	mov byte [rbp + 28], 32>
new  <	add rdi, 28>

3963:
old  <>
new  <	jmp printf>

3964:
old  < strtoul_test$302:>
new  <>

3965:
old  <	; Assign text[1] 32>
new  < strtoul_test$299:>

3966:
old  <	mov byte [rbp + 29], 32>
new  <	; PostCall 55>

3968:
old  < strtoul_test$303:>
new  < strtoul_test$300:>

3969:
old  <	; Assign text[2] 32>
new  <	; Assign base 11>

3970:
old  <	mov byte [rbp + 30], 32>
new  <	mov dword [rbp + 24], 11>

3972:
old  < strtoul_test$304:>
new  < strtoul_test$301:>

3973:
old  <	; Assign text[3] 43>
new  <	; Assign text[0] 32>

3974:
old  <	mov byte [rbp + 31], 43>
new  <	mov byte [rbp + 28], 32>

3976:
old  < strtoul_test$305:>
new  < strtoul_test$302:>

3977:
old  <	; Assign text[4] 49>
new  <	; Assign text[1] 32>

3978:
old  <	mov byte [rbp + 32], 49>
new  <	mov byte [rbp + 29], 32>

3980:
old  < strtoul_test$306:>
new  < strtoul_test$303:>

3981:
old  <	; Assign text[5] 50>
new  <	; Assign text[2] 32>

3982:
old  <	mov byte [rbp + 33], 50>
new  <	mov byte [rbp + 30], 32>

3984:
old  < strtoul_test$307:>
new  < strtoul_test$304:>

3985:
old  <	; Assign text[6] 51>
new  <	; Assign text[3] 43>

3986:
old  <	mov byte [rbp + 34], 51>
new  <	mov byte [rbp + 31], 43>

3988:
old  < strtoul_test$308:>
new  < strtoul_test$305:>

3989:
old  <	; Assign text[7] 97>
new  <	; Assign text[4] 49>

3990:
old  <	mov byte [rbp + 35], 97>
new  <	mov byte [rbp + 32], 49>

3992:
old  < strtoul_test$309:>
new  < strtoul_test$306:>

3993:
old  <	; Assign text[8] 98>
new  <	; Assign text[5] 50>

3994:
old  <	mov byte [rbp + 36], 98>
new  <	mov byte [rbp + 33], 50>

3996:
old  < strtoul_test$310:>
new  < strtoul_test$307:>

3997:
old  <	; Assign text[9] 99>
new  <	; Assign text[6] 51>

3998:
old  <	mov byte [rbp + 37], 99>
new  <	mov byte [rbp + 34], 51>

4000:
old  < strtoul_test$311:>
new  < strtoul_test$308:>

4001:
old  <	; Assign text[10] 0>
new  <	; Assign text[7] 97>

4002:
old  <	mov byte [rbp + 38], 0>
new  <	mov byte [rbp + 35], 97>

4004:
old  < strtoul_test$312:>
new  < strtoul_test$309:>

4005:
old  <	; PreCall 47 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Assign text[8] 98>

4006:
old  <>
new  <	mov byte [rbp + 36], 98>

4007:
old  < strtoul_test$313:>
new  <>

4008:
old  <	; Parameter 71 pointer text>
new  < strtoul_test$310:>

4009:
old  <	mov [rbp + 71], rbp>
new  <	; Assign text[9] 99>

4010:
old  <	add qword [rbp + 71], 28>
new  <	mov byte [rbp + 37], 99>

4012:
old  < strtoul_test$314:>
new  < strtoul_test$311:>

4013:
old  <	; Address Â£temporary2503 pointer>
new  <	; Assign text[10] 0>

4014:
old  <	mov rsi, rbp>
new  <	mov byte [rbp + 38], 0>

4015:
old  <	add rsi, 39>
new  <>

4016:
old  <>
new  < strtoul_test$312:>

4017:
old  < strtoul_test$315:>
new  <	; PreCall 47 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

4018:
old  <	; Parameter 79 pointer Â£temporary2503>
new  <>

4019:
old  <	mov [rbp + 79], rsi>
new  < strtoul_test$313:>

4020:
old  <>
new  <	; Parameter 71 pointer text>

4021:
old  < strtoul_test$316:>
new  <	mov [rbp + 71], rbp>

4022:
old  <	; Parameter 87 signedint base>
new  <	add qword [rbp + 71], 28>

4023:
old  <	mov eax, [rbp + 24]>
new  <>

4024:
old  <	mov [rbp + 87], eax>
new  < strtoul_test$314:>

4025:
old  <>
new  <	; Address Â£temporary2490 pointer>

4026:
old  < strtoul_test$317:>
new  <	mov rsi, rbp>

4027:
old  <	; Call 47 strtoul 0>
new  <	add rsi, 39>

4028:
old  <	mov qword [rbp + 47], strtoul_test$318>
new  <>

4029:
old  <	mov [rbp + 55], rbp>
new  < strtoul_test$315:>

4030:
old  <	add rbp, 47>
new  <	; Parameter 79 pointer Â£temporary2490>

4031:
old  <	jmp strtoul>
new  <	mov [rbp + 79], rsi>

4033:
old  < strtoul_test$318:>
new  < strtoul_test$316:>

4034:
old  <	; PostCall 47>
new  <	; Parameter 87 signedint base>

4035:
old  <>
new  <	mov eax, [rbp + 24]>

4036:
old  < strtoul_test$319:>
new  <	mov [rbp + 87], eax>

4037:
old  <	; GetReturnValue Â£temporary2504>
new  <>

4038:
old  <>
new  < strtoul_test$317:>

4039:
old  < strtoul_test$320:>
new  <	; Call 47 strtoul 0>

4040:
old  <	; Assign value Â£temporary2504>
new  <	mov qword [rbp + 47], strtoul_test$318>

4041:
old  <	mov [rbp + 47], rbx>
new  <	mov [rbp + 55], rbp>

4042:
old  <>
new  <	add rbp, 47>

4043:
old  < strtoul_test$321:>
new  <	jmp strtoul>

4044:
old  <	; PreCall 55 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

4045:
old  <>
new  < strtoul_test$318:>

4046:
old  < strtoul_test$322:>
new  <	; PostCall 47>

4047:
old  <	; Parameter 79 pointer "<%s> <%li> <%s> <%i>\n">
new  <>

4048:
old  <	mov qword [rbp + 79], string_3C25s3E203C25li3E203C25s3E203C25i3E0A#>
new  < strtoul_test$319:>

4049:
old  <>
new  <	; GetReturnValue Â£temporary2491>

4050:
old  < strtoul_test$323:>
new  <>

4051:
old  <	; Parameter 87 pointer text>
new  < strtoul_test$320:>

4052:
old  <	mov [rbp + 87], rbp>
new  <	; Assign value Â£temporary2491>

4053:
old  <	add qword [rbp + 87], 28>
new  <	mov [rbp + 47], rbx>

4055:
old  < strtoul_test$324:>
new  < strtoul_test$321:>

4056:
old  <	; Parameter 95 signed long int value>
new  <	; PreCall 55 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

4057:
old  <	mov rax, [rbp + 47]>
new  <>

4058:
old  <	mov [rbp + 95], rax>
new  < strtoul_test$322:>

4059:
old  <>
new  <	; Parameter 79 pointer "<%s> <%li> <%s> <%i>\n">

4060:
old  < strtoul_test$325:>
new  <	mov qword [rbp + 79], string_3C25s3E203C25li3E203C25s3E203C25i3E0A#>

4061:
old  <	; Parameter 103 pointer pointer>
new  <>

4062:
old  <	mov rax, [rbp + 39]>
new  < strtoul_test$323:>

4063:
old  <	mov [rbp + 103], rax>
new  <	; Parameter 87 pointer text>

4064:
old  <>
new  <	mov [rbp + 87], rbp>

4065:
old  < strtoul_test$326:>
new  <	add qword [rbp + 87], 28>

4066:
old  <	; Parameter 111 signedint base>
new  <>

4067:
old  <	mov eax, [rbp + 24]>
new  < strtoul_test$324:>

4068:
old  <	mov [rbp + 111], eax>
new  <	; Parameter 95 signed long int value>

4069:
old  <>
new  <	mov rax, [rbp + 47]>

4070:
old  < strtoul_test$327:>
new  <	mov [rbp + 95], rax>

4071:
old  <	; Call 55 printf 28>
new  <>

4072:
old  <	mov qword [rbp + 55], strtoul_test$328>
new  < strtoul_test$325:>

4073:
old  <	mov [rbp + 63], rbp>
new  <	; Parameter 103 pointer pointer>

4074:
old  <	add rbp, 55>
new  <	mov rax, [rbp + 39]>

4075:
old  <	mov rdi, rbp>
new  <	mov [rbp + 103], rax>

4076:
old  <	add rdi, 28>
new  <>

4077:
old  <	jmp printf>
new  < strtoul_test$326:>

4078:
old  <>
new  <	; Parameter 111 signedint base>

4079:
old  < strtoul_test$328:>
new  <	mov eax, [rbp + 24]>

4080:
old  <	; PostCall 55>
new  <	mov [rbp + 111], eax>

4082:
old  < strtoul_test$329:>
new  < strtoul_test$327:>

4083:
old  <	; Assign base 12>
new  <	; Call 55 printf 28>

4084:
old  <	mov dword [rbp + 24], 12>
new  <	mov qword [rbp + 55], strtoul_test$328>

4085:
old  <>
new  <	mov [rbp + 63], rbp>

4086:
old  < strtoul_test$330:>
new  <	add rbp, 55>

4087:
old  <	; Assign text[0] 32>
new  <	mov rdi, rbp>

4088:
old  <	mov byte [rbp + 28], 32>
new  <	add rdi, 28>

4089:
old  <>
new  <	jmp printf>

4090:
old  < strtoul_test$331:>
new  <>

4091:
old  <	; Assign text[1] 32>
new  < strtoul_test$328:>

4092:
old  <	mov byte [rbp + 29], 32>
new  <	; PostCall 55>

4094:
old  < strtoul_test$332:>
new  < strtoul_test$329:>

4095:
old  <	; Assign text[2] 32>
new  <	; Assign base 12>

4096:
old  <	mov byte [rbp + 30], 32>
new  <	mov dword [rbp + 24], 12>

4098:
old  < strtoul_test$333:>
new  < strtoul_test$330:>

4099:
old  <	; Assign text[3] 43>
new  <	; Assign text[0] 32>

4100:
old  <	mov byte [rbp + 31], 43>
new  <	mov byte [rbp + 28], 32>

4102:
old  < strtoul_test$334:>
new  < strtoul_test$331:>

4103:
old  <	; Assign text[4] 49>
new  <	; Assign text[1] 32>

4104:
old  <	mov byte [rbp + 32], 49>
new  <	mov byte [rbp + 29], 32>

4106:
old  < strtoul_test$335:>
new  < strtoul_test$332:>

4107:
old  <	; Assign text[5] 50>
new  <	; Assign text[2] 32>

4108:
old  <	mov byte [rbp + 33], 50>
new  <	mov byte [rbp + 30], 32>

4110:
old  < strtoul_test$336:>
new  < strtoul_test$333:>

4111:
old  <	; Assign text[6] 51>
new  <	; Assign text[3] 43>

4112:
old  <	mov byte [rbp + 34], 51>
new  <	mov byte [rbp + 31], 43>

4114:
old  < strtoul_test$337:>
new  < strtoul_test$334:>

4115:
old  <	; Assign text[7] 65>
new  <	; Assign text[4] 49>

4116:
old  <	mov byte [rbp + 35], 65>
new  <	mov byte [rbp + 32], 49>

4118:
old  < strtoul_test$338:>
new  < strtoul_test$335:>

4119:
old  <	; Assign text[8] 66>
new  <	; Assign text[5] 50>

4120:
old  <	mov byte [rbp + 36], 66>
new  <	mov byte [rbp + 33], 50>

4122:
old  < strtoul_test$339:>
new  < strtoul_test$336:>

4123:
old  <	; Assign text[9] 67>
new  <	; Assign text[6] 51>

4124:
old  <	mov byte [rbp + 37], 67>
new  <	mov byte [rbp + 34], 51>

4126:
old  < strtoul_test$340:>
new  < strtoul_test$337:>

4127:
old  <	; Assign text[10] 0>
new  <	; Assign text[7] 65>

4128:
old  <	mov byte [rbp + 38], 0>
new  <	mov byte [rbp + 35], 65>

4130:
old  < strtoul_test$341:>
new  < strtoul_test$338:>

4131:
old  <	; PreCall 47 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Assign text[8] 66>

4132:
old  <>
new  <	mov byte [rbp + 36], 66>

4133:
old  < strtoul_test$342:>
new  <>

4134:
old  <	; Parameter 71 pointer text>
new  < strtoul_test$339:>

4135:
old  <	mov [rbp + 71], rbp>
new  <	; Assign text[9] 67>

4136:
old  <	add qword [rbp + 71], 28>
new  <	mov byte [rbp + 37], 67>

4138:
old  < strtoul_test$343:>
new  < strtoul_test$340:>

4139:
old  <	; Address Â£temporary2517 pointer>
new  <	; Assign text[10] 0>

4140:
old  <	mov rsi, rbp>
new  <	mov byte [rbp + 38], 0>

4141:
old  <	add rsi, 39>
new  <>

4142:
old  <>
new  < strtoul_test$341:>

4143:
old  < strtoul_test$344:>
new  <	; PreCall 47 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

4144:
old  <	; Parameter 79 pointer Â£temporary2517>
new  <>

4145:
old  <	mov [rbp + 79], rsi>
new  < strtoul_test$342:>

4146:
old  <>
new  <	; Parameter 71 pointer text>

4147:
old  < strtoul_test$345:>
new  <	mov [rbp + 71], rbp>

4148:
old  <	; Parameter 87 signedint base>
new  <	add qword [rbp + 71], 28>

4149:
old  <	mov eax, [rbp + 24]>
new  <>

4150:
old  <	mov [rbp + 87], eax>
new  < strtoul_test$343:>

4151:
old  <>
new  <	; Address Â£temporary2504 pointer>

4152:
old  < strtoul_test$346:>
new  <	mov rsi, rbp>

4153:
old  <	; Call 47 strtoul 0>
new  <	add rsi, 39>

4154:
old  <	mov qword [rbp + 47], strtoul_test$347>
new  <>

4155:
old  <	mov [rbp + 55], rbp>
new  < strtoul_test$344:>

4156:
old  <	add rbp, 47>
new  <	; Parameter 79 pointer Â£temporary2504>

4157:
old  <	jmp strtoul>
new  <	mov [rbp + 79], rsi>

4159:
old  < strtoul_test$347:>
new  < strtoul_test$345:>

4160:
old  <	; PostCall 47>
new  <	; Parameter 87 signedint base>

4161:
old  <>
new  <	mov eax, [rbp + 24]>

4162:
old  < strtoul_test$348:>
new  <	mov [rbp + 87], eax>

4163:
old  <	; GetReturnValue Â£temporary2518>
new  <>

4164:
old  <>
new  < strtoul_test$346:>

4165:
old  < strtoul_test$349:>
new  <	; Call 47 strtoul 0>

4166:
old  <	; Assign value Â£temporary2518>
new  <	mov qword [rbp + 47], strtoul_test$347>

4167:
old  <	mov [rbp + 47], rbx>
new  <	mov [rbp + 55], rbp>

4168:
old  <>
new  <	add rbp, 47>

4169:
old  < strtoul_test$350:>
new  <	jmp strtoul>

4170:
old  <	; PreCall 55 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

4171:
old  <>
new  < strtoul_test$347:>

4172:
old  < strtoul_test$351:>
new  <	; PostCall 47>

4173:
old  <	; Parameter 79 pointer "<%s> <%li> <%s> <%i>\n">
new  <>

4174:
old  <	mov qword [rbp + 79], string_3C25s3E203C25li3E203C25s3E203C25i3E0A#>
new  < strtoul_test$348:>

4175:
old  <>
new  <	; GetReturnValue Â£temporary2505>

4176:
old  < strtoul_test$352:>
new  <>

4177:
old  <	; Parameter 87 pointer text>
new  < strtoul_test$349:>

4178:
old  <	mov [rbp + 87], rbp>
new  <	; Assign value Â£temporary2505>

4179:
old  <	add qword [rbp + 87], 28>
new  <	mov [rbp + 47], rbx>

4181:
old  < strtoul_test$353:>
new  < strtoul_test$350:>

4182:
old  <	; Parameter 95 signed long int value>
new  <	; PreCall 55 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

4183:
old  <	mov rax, [rbp + 47]>
new  <>

4184:
old  <	mov [rbp + 95], rax>
new  < strtoul_test$351:>

4185:
old  <>
new  <	; Parameter 79 pointer "<%s> <%li> <%s> <%i>\n">

4186:
old  < strtoul_test$354:>
new  <	mov qword [rbp + 79], string_3C25s3E203C25li3E203C25s3E203C25i3E0A#>

4187:
old  <	; Parameter 103 pointer pointer>
new  <>

4188:
old  <	mov rax, [rbp + 39]>
new  < strtoul_test$352:>

4189:
old  <	mov [rbp + 103], rax>
new  <	; Parameter 87 pointer text>

4190:
old  <>
new  <	mov [rbp + 87], rbp>

4191:
old  < strtoul_test$355:>
new  <	add qword [rbp + 87], 28>

4192:
old  <	; Parameter 111 signedint base>
new  <>

4193:
old  <	mov eax, [rbp + 24]>
new  < strtoul_test$353:>

4194:
old  <	mov [rbp + 111], eax>
new  <	; Parameter 95 signed long int value>

4195:
old  <>
new  <	mov rax, [rbp + 47]>

4196:
old  < strtoul_test$356:>
new  <	mov [rbp + 95], rax>

4197:
old  <	; Call 55 printf 28>
new  <>

4198:
old  <	mov qword [rbp + 55], strtoul_test$357>
new  < strtoul_test$354:>

4199:
old  <	mov [rbp + 63], rbp>
new  <	; Parameter 103 pointer pointer>

4200:
old  <	add rbp, 55>
new  <	mov rax, [rbp + 39]>

4201:
old  <	mov rdi, rbp>
new  <	mov [rbp + 103], rax>

4202:
old  <	add rdi, 28>
new  <>

4203:
old  <	jmp printf>
new  < strtoul_test$355:>

4204:
old  <>
new  <	; Parameter 111 signedint base>

4205:
old  < strtoul_test$357:>
new  <	mov eax, [rbp + 24]>

4206:
old  <	; PostCall 55>
new  <	mov [rbp + 111], eax>

4208:
old  < strtoul_test$358:>
new  < strtoul_test$356:>

4209:
old  <	; Assign base 13>
new  <	; Call 55 printf 28>

4210:
old  <	mov dword [rbp + 24], 13>
new  <	mov qword [rbp + 55], strtoul_test$357>

4211:
old  <>
new  <	mov [rbp + 63], rbp>

4212:
old  < strtoul_test$359:>
new  <	add rbp, 55>

4213:
old  <	; Assign text[0] 32>
new  <	mov rdi, rbp>

4214:
old  <	mov byte [rbp + 28], 32>
new  <	add rdi, 28>

4215:
old  <>
new  <	jmp printf>

4216:
old  < strtoul_test$360:>
new  <>

4217:
old  <	; Assign text[1] 32>
new  < strtoul_test$357:>

4218:
old  <	mov byte [rbp + 29], 32>
new  <	; PostCall 55>

4220:
old  < strtoul_test$361:>
new  < strtoul_test$358:>

4221:
old  <	; Assign text[2] 32>
new  <	; Assign base 13>

4222:
old  <	mov byte [rbp + 30], 32>
new  <	mov dword [rbp + 24], 13>

4224:
old  < strtoul_test$362:>
new  < strtoul_test$359:>

4225:
old  <	; Assign text[3] 43>
new  <	; Assign text[0] 32>

4226:
old  <	mov byte [rbp + 31], 43>
new  <	mov byte [rbp + 28], 32>

4228:
old  < strtoul_test$363:>
new  < strtoul_test$360:>

4229:
old  <	; Assign text[4] 49>
new  <	; Assign text[1] 32>

4230:
old  <	mov byte [rbp + 32], 49>
new  <	mov byte [rbp + 29], 32>

4232:
old  < strtoul_test$364:>
new  < strtoul_test$361:>

4233:
old  <	; Assign text[5] 50>
new  <	; Assign text[2] 32>

4234:
old  <	mov byte [rbp + 33], 50>
new  <	mov byte [rbp + 30], 32>

4236:
old  < strtoul_test$365:>
new  < strtoul_test$362:>

4237:
old  <	; Assign text[6] 51>
new  <	; Assign text[3] 43>

4238:
old  <	mov byte [rbp + 34], 51>
new  <	mov byte [rbp + 31], 43>

4240:
old  < strtoul_test$366:>
new  < strtoul_test$363:>

4241:
old  <	; Assign text[7] 97>
new  <	; Assign text[4] 49>

4242:
old  <	mov byte [rbp + 35], 97>
new  <	mov byte [rbp + 32], 49>

4244:
old  < strtoul_test$367:>
new  < strtoul_test$364:>

4245:
old  <	; Assign text[8] 98>
new  <	; Assign text[5] 50>

4246:
old  <	mov byte [rbp + 36], 98>
new  <	mov byte [rbp + 33], 50>

4248:
old  < strtoul_test$368:>
new  < strtoul_test$365:>

4249:
old  <	; Assign text[9] 99>
new  <	; Assign text[6] 51>

4250:
old  <	mov byte [rbp + 37], 99>
new  <	mov byte [rbp + 34], 51>

4252:
old  < strtoul_test$369:>
new  < strtoul_test$366:>

4253:
old  <	; Assign text[10] 0>
new  <	; Assign text[7] 97>

4254:
old  <	mov byte [rbp + 38], 0>
new  <	mov byte [rbp + 35], 97>

4256:
old  < strtoul_test$370:>
new  < strtoul_test$367:>

4257:
old  <	; PreCall 47 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Assign text[8] 98>

4258:
old  <>
new  <	mov byte [rbp + 36], 98>

4259:
old  < strtoul_test$371:>
new  <>

4260:
old  <	; Parameter 71 pointer text>
new  < strtoul_test$368:>

4261:
old  <	mov [rbp + 71], rbp>
new  <	; Assign text[9] 99>

4262:
old  <	add qword [rbp + 71], 28>
new  <	mov byte [rbp + 37], 99>

4264:
old  < strtoul_test$372:>
new  < strtoul_test$369:>

4265:
old  <	; Address Â£temporary2531 pointer>
new  <	; Assign text[10] 0>

4266:
old  <	mov rsi, rbp>
new  <	mov byte [rbp + 38], 0>

4267:
old  <	add rsi, 39>
new  <>

4268:
old  <>
new  < strtoul_test$370:>

4269:
old  < strtoul_test$373:>
new  <	; PreCall 47 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

4270:
old  <	; Parameter 79 pointer Â£temporary2531>
new  <>

4271:
old  <	mov [rbp + 79], rsi>
new  < strtoul_test$371:>

4272:
old  <>
new  <	; Parameter 71 pointer text>

4273:
old  < strtoul_test$374:>
new  <	mov [rbp + 71], rbp>

4274:
old  <	; Parameter 87 signedint base>
new  <	add qword [rbp + 71], 28>

4275:
old  <	mov eax, [rbp + 24]>
new  <>

4276:
old  <	mov [rbp + 87], eax>
new  < strtoul_test$372:>

4277:
old  <>
new  <	; Address Â£temporary2518 pointer>

4278:
old  < strtoul_test$375:>
new  <	mov rsi, rbp>

4279:
old  <	; Call 47 strtoul 0>
new  <	add rsi, 39>

4280:
old  <	mov qword [rbp + 47], strtoul_test$376>
new  <>

4281:
old  <	mov [rbp + 55], rbp>
new  < strtoul_test$373:>

4282:
old  <	add rbp, 47>
new  <	; Parameter 79 pointer Â£temporary2518>

4283:
old  <	jmp strtoul>
new  <	mov [rbp + 79], rsi>

4285:
old  < strtoul_test$376:>
new  < strtoul_test$374:>

4286:
old  <	; PostCall 47>
new  <	; Parameter 87 signedint base>

4287:
old  <>
new  <	mov eax, [rbp + 24]>

4288:
old  < strtoul_test$377:>
new  <	mov [rbp + 87], eax>

4289:
old  <	; GetReturnValue Â£temporary2532>
new  <>

4290:
old  <>
new  < strtoul_test$375:>

4291:
old  < strtoul_test$378:>
new  <	; Call 47 strtoul 0>

4292:
old  <	; Assign value Â£temporary2532>
new  <	mov qword [rbp + 47], strtoul_test$376>

4293:
old  <	mov [rbp + 47], rbx>
new  <	mov [rbp + 55], rbp>

4294:
old  <>
new  <	add rbp, 47>

4295:
old  < strtoul_test$379:>
new  <	jmp strtoul>

4296:
old  <	; PreCall 55 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

4297:
old  <>
new  < strtoul_test$376:>

4298:
old  < strtoul_test$380:>
new  <	; PostCall 47>

4299:
old  <	; Parameter 79 pointer "<%s> <%li> <%s> <%i>\n">
new  <>

4300:
old  <	mov qword [rbp + 79], string_3C25s3E203C25li3E203C25s3E203C25i3E0A#>
new  < strtoul_test$377:>

4301:
old  <>
new  <	; GetReturnValue Â£temporary2519>

4302:
old  < strtoul_test$381:>
new  <>

4303:
old  <	; Parameter 87 pointer text>
new  < strtoul_test$378:>

4304:
old  <	mov [rbp + 87], rbp>
new  <	; Assign value Â£temporary2519>

4305:
old  <	add qword [rbp + 87], 28>
new  <	mov [rbp + 47], rbx>

4307:
old  < strtoul_test$382:>
new  < strtoul_test$379:>

4308:
old  <	; Parameter 95 signed long int value>
new  <	; PreCall 55 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

4309:
old  <	mov rax, [rbp + 47]>
new  <>

4310:
old  <	mov [rbp + 95], rax>
new  < strtoul_test$380:>

4311:
old  <>
new  <	; Parameter 79 pointer "<%s> <%li> <%s> <%i>\n">

4312:
old  < strtoul_test$383:>
new  <	mov qword [rbp + 79], string_3C25s3E203C25li3E203C25s3E203C25i3E0A#>

4313:
old  <	; Parameter 103 pointer pointer>
new  <>

4314:
old  <	mov rax, [rbp + 39]>
new  < strtoul_test$381:>

4315:
old  <	mov [rbp + 103], rax>
new  <	; Parameter 87 pointer text>

4316:
old  <>
new  <	mov [rbp + 87], rbp>

4317:
old  < strtoul_test$384:>
new  <	add qword [rbp + 87], 28>

4318:
old  <	; Parameter 111 signedint base>
new  <>

4319:
old  <	mov eax, [rbp + 24]>
new  < strtoul_test$382:>

4320:
old  <	mov [rbp + 111], eax>
new  <	; Parameter 95 signed long int value>

4321:
old  <>
new  <	mov rax, [rbp + 47]>

4322:
old  < strtoul_test$385:>
new  <	mov [rbp + 95], rax>

4323:
old  <	; Call 55 printf 28>
new  <>

4324:
old  <	mov qword [rbp + 55], strtoul_test$386>
new  < strtoul_test$383:>

4325:
old  <	mov [rbp + 63], rbp>
new  <	; Parameter 103 pointer pointer>

4326:
old  <	add rbp, 55>
new  <	mov rax, [rbp + 39]>

4327:
old  <	mov rdi, rbp>
new  <	mov [rbp + 103], rax>

4328:
old  <	add rdi, 28>
new  <>

4329:
old  <	jmp printf>
new  < strtoul_test$384:>

4330:
old  <>
new  <	; Parameter 111 signedint base>

4331:
old  < strtoul_test$386:>
new  <	mov eax, [rbp + 24]>

4332:
old  <	; PostCall 55>
new  <	mov [rbp + 111], eax>

4334:
old  < strtoul_test$387:>
new  < strtoul_test$385:>

4335:
old  <	; Assign base 9>
new  <	; Call 55 printf 28>

4336:
old  <	mov dword [rbp + 24], 9>
new  <	mov qword [rbp + 55], strtoul_test$386>

4337:
old  <>
new  <	mov [rbp + 63], rbp>

4338:
old  < strtoul_test$388:>
new  <	add rbp, 55>

4339:
old  <	; Assign text[0] 32>
new  <	mov rdi, rbp>

4340:
old  <	mov byte [rbp + 28], 32>
new  <	add rdi, 28>

4341:
old  <>
new  <	jmp printf>

4342:
old  < strtoul_test$389:>
new  <>

4343:
old  <	; Assign text[1] 32>
new  < strtoul_test$386:>

4344:
old  <	mov byte [rbp + 29], 32>
new  <	; PostCall 55>

4346:
old  < strtoul_test$390:>
new  < strtoul_test$387:>

4347:
old  <	; Assign text[2] 32>
new  <	; Assign base 9>

4348:
old  <	mov byte [rbp + 30], 32>
new  <	mov dword [rbp + 24], 9>

4350:
old  < strtoul_test$391:>
new  < strtoul_test$388:>

4351:
old  <	; Assign text[3] 45>
new  <	; Assign text[0] 32>

4352:
old  <	mov byte [rbp + 31], 45>
new  <	mov byte [rbp + 28], 32>

4354:
old  < strtoul_test$392:>
new  < strtoul_test$389:>

4355:
old  <	; Assign text[4] 49>
new  <	; Assign text[1] 32>

4356:
old  <	mov byte [rbp + 32], 49>
new  <	mov byte [rbp + 29], 32>

4358:
old  < strtoul_test$393:>
new  < strtoul_test$390:>

4359:
old  <	; Assign text[5] 50>
new  <	; Assign text[2] 32>

4360:
old  <	mov byte [rbp + 33], 50>
new  <	mov byte [rbp + 30], 32>

4362:
old  < strtoul_test$394:>
new  < strtoul_test$391:>

4363:
old  <	; Assign text[6] 51>
new  <	; Assign text[3] 45>

4364:
old  <	mov byte [rbp + 34], 51>
new  <	mov byte [rbp + 31], 45>

4366:
old  < strtoul_test$395:>
new  < strtoul_test$392:>

4367:
old  <	; Assign text[7] 97>
new  <	; Assign text[4] 49>

4368:
old  <	mov byte [rbp + 35], 97>
new  <	mov byte [rbp + 32], 49>

4370:
old  < strtoul_test$396:>
new  < strtoul_test$393:>

4371:
old  <	; Assign text[8] 98>
new  <	; Assign text[5] 50>

4372:
old  <	mov byte [rbp + 36], 98>
new  <	mov byte [rbp + 33], 50>

4374:
old  < strtoul_test$397:>
new  < strtoul_test$394:>

4375:
old  <	; Assign text[9] 99>
new  <	; Assign text[6] 51>

4376:
old  <	mov byte [rbp + 37], 99>
new  <	mov byte [rbp + 34], 51>

4378:
old  < strtoul_test$398:>
new  < strtoul_test$395:>

4379:
old  <	; Assign text[10] 0>
new  <	; Assign text[7] 97>

4380:
old  <	mov byte [rbp + 38], 0>
new  <	mov byte [rbp + 35], 97>

4382:
old  < strtoul_test$399:>
new  < strtoul_test$396:>

4383:
old  <	; PreCall 47 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Assign text[8] 98>

4384:
old  <>
new  <	mov byte [rbp + 36], 98>

4385:
old  < strtoul_test$400:>
new  <>

4386:
old  <	; Parameter 71 pointer text>
new  < strtoul_test$397:>

4387:
old  <	mov [rbp + 71], rbp>
new  <	; Assign text[9] 99>

4388:
old  <	add qword [rbp + 71], 28>
new  <	mov byte [rbp + 37], 99>

4390:
old  < strtoul_test$401:>
new  < strtoul_test$398:>

4391:
old  <	; Address Â£temporary2545 pointer>
new  <	; Assign text[10] 0>

4392:
old  <	mov rsi, rbp>
new  <	mov byte [rbp + 38], 0>

4393:
old  <	add rsi, 39>
new  <>

4394:
old  <>
new  < strtoul_test$399:>

4395:
old  < strtoul_test$402:>
new  <	; PreCall 47 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

4396:
old  <	; Parameter 79 pointer Â£temporary2545>
new  <>

4397:
old  <	mov [rbp + 79], rsi>
new  < strtoul_test$400:>

4398:
old  <>
new  <	; Parameter 71 pointer text>

4399:
old  < strtoul_test$403:>
new  <	mov [rbp + 71], rbp>

4400:
old  <	; Parameter 87 signedint base>
new  <	add qword [rbp + 71], 28>

4401:
old  <	mov eax, [rbp + 24]>
new  <>

4402:
old  <	mov [rbp + 87], eax>
new  < strtoul_test$401:>

4403:
old  <>
new  <	; Address Â£temporary2532 pointer>

4404:
old  < strtoul_test$404:>
new  <	mov rsi, rbp>

4405:
old  <	; Call 47 strtoul 0>
new  <	add rsi, 39>

4406:
old  <	mov qword [rbp + 47], strtoul_test$405>
new  <>

4407:
old  <	mov [rbp + 55], rbp>
new  < strtoul_test$402:>

4408:
old  <	add rbp, 47>
new  <	; Parameter 79 pointer Â£temporary2532>

4409:
old  <	jmp strtoul>
new  <	mov [rbp + 79], rsi>

4411:
old  < strtoul_test$405:>
new  < strtoul_test$403:>

4412:
old  <	; PostCall 47>
new  <	; Parameter 87 signedint base>

4413:
old  <>
new  <	mov eax, [rbp + 24]>

4414:
old  < strtoul_test$406:>
new  <	mov [rbp + 87], eax>

4415:
old  <	; GetReturnValue Â£temporary2546>
new  <>

4416:
old  <>
new  < strtoul_test$404:>

4417:
old  < strtoul_test$407:>
new  <	; Call 47 strtoul 0>

4418:
old  <	; Assign value Â£temporary2546>
new  <	mov qword [rbp + 47], strtoul_test$405>

4419:
old  <	mov [rbp + 47], rbx>
new  <	mov [rbp + 55], rbp>

4420:
old  <>
new  <	add rbp, 47>

4421:
old  < strtoul_test$408:>
new  <	jmp strtoul>

4422:
old  <	; PreCall 55 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

4423:
old  <>
new  < strtoul_test$405:>

4424:
old  < strtoul_test$409:>
new  <	; PostCall 47>

4425:
old  <	; Parameter 79 pointer "<%s> <%li> <%s> <%i>\n">
new  <>

4426:
old  <	mov qword [rbp + 79], string_3C25s3E203C25li3E203C25s3E203C25i3E0A#>
new  < strtoul_test$406:>

4427:
old  <>
new  <	; GetReturnValue Â£temporary2533>

4428:
old  < strtoul_test$410:>
new  <>

4429:
old  <	; Parameter 87 pointer text>
new  < strtoul_test$407:>

4430:
old  <	mov [rbp + 87], rbp>
new  <	; Assign value Â£temporary2533>

4431:
old  <	add qword [rbp + 87], 28>
new  <	mov [rbp + 47], rbx>

4433:
old  < strtoul_test$411:>
new  < strtoul_test$408:>

4434:
old  <	; Parameter 95 signed long int value>
new  <	; PreCall 55 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

4435:
old  <	mov rax, [rbp + 47]>
new  <>

4436:
old  <	mov [rbp + 95], rax>
new  < strtoul_test$409:>

4437:
old  <>
new  <	; Parameter 79 pointer "<%s> <%li> <%s> <%i>\n">

4438:
old  < strtoul_test$412:>
new  <	mov qword [rbp + 79], string_3C25s3E203C25li3E203C25s3E203C25i3E0A#>

4439:
old  <	; Parameter 103 pointer pointer>
new  <>

4440:
old  <	mov rax, [rbp + 39]>
new  < strtoul_test$410:>

4441:
old  <	mov [rbp + 103], rax>
new  <	; Parameter 87 pointer text>

4442:
old  <>
new  <	mov [rbp + 87], rbp>

4443:
old  < strtoul_test$413:>
new  <	add qword [rbp + 87], 28>

4444:
old  <	; Parameter 111 signedint base>
new  <>

4445:
old  <	mov eax, [rbp + 24]>
new  < strtoul_test$411:>

4446:
old  <	mov [rbp + 111], eax>
new  <	; Parameter 95 signed long int value>

4447:
old  <>
new  <	mov rax, [rbp + 47]>

4448:
old  < strtoul_test$414:>
new  <	mov [rbp + 95], rax>

4449:
old  <	; Call 55 printf 28>
new  <>

4450:
old  <	mov qword [rbp + 55], strtoul_test$415>
new  < strtoul_test$412:>

4451:
old  <	mov [rbp + 63], rbp>
new  <	; Parameter 103 pointer pointer>

4452:
old  <	add rbp, 55>
new  <	mov rax, [rbp + 39]>

4453:
old  <	mov rdi, rbp>
new  <	mov [rbp + 103], rax>

4454:
old  <	add rdi, 28>
new  <>

4455:
old  <	jmp printf>
new  < strtoul_test$413:>

4456:
old  <>
new  <	; Parameter 111 signedint base>

4457:
old  < strtoul_test$415:>
new  <	mov eax, [rbp + 24]>

4458:
old  <	; PostCall 55>
new  <	mov [rbp + 111], eax>

4460:
old  < strtoul_test$416:>
new  < strtoul_test$414:>

4461:
old  <	; Assign base 10>
new  <	; Call 55 printf 28>

4462:
old  <	mov dword [rbp + 24], 10>
new  <	mov qword [rbp + 55], strtoul_test$415>

4463:
old  <>
new  <	mov [rbp + 63], rbp>

4464:
old  < strtoul_test$417:>
new  <	add rbp, 55>

4465:
old  <	; Assign text[0] 32>
new  <	mov rdi, rbp>

4466:
old  <	mov byte [rbp + 28], 32>
new  <	add rdi, 28>

4467:
old  <>
new  <	jmp printf>

4468:
old  < strtoul_test$418:>
new  <>

4469:
old  <	; Assign text[1] 32>
new  < strtoul_test$415:>

4470:
old  <	mov byte [rbp + 29], 32>
new  <	; PostCall 55>

4472:
old  < strtoul_test$419:>
new  < strtoul_test$416:>

4473:
old  <	; Assign text[2] 32>
new  <	; Assign base 10>

4474:
old  <	mov byte [rbp + 30], 32>
new  <	mov dword [rbp + 24], 10>

4476:
old  < strtoul_test$420:>
new  < strtoul_test$417:>

4477:
old  <	; Assign text[3] 45>
new  <	; Assign text[0] 32>

4478:
old  <	mov byte [rbp + 31], 45>
new  <	mov byte [rbp + 28], 32>

4480:
old  < strtoul_test$421:>
new  < strtoul_test$418:>

4481:
old  <	; Assign text[4] 49>
new  <	; Assign text[1] 32>

4482:
old  <	mov byte [rbp + 32], 49>
new  <	mov byte [rbp + 29], 32>

4484:
old  < strtoul_test$422:>
new  < strtoul_test$419:>

4485:
old  <	; Assign text[5] 50>
new  <	; Assign text[2] 32>

4486:
old  <	mov byte [rbp + 33], 50>
new  <	mov byte [rbp + 30], 32>

4488:
old  < strtoul_test$423:>
new  < strtoul_test$420:>

4489:
old  <	; Assign text[6] 51>
new  <	; Assign text[3] 45>

4490:
old  <	mov byte [rbp + 34], 51>
new  <	mov byte [rbp + 31], 45>

4492:
old  < strtoul_test$424:>
new  < strtoul_test$421:>

4493:
old  <	; Assign text[7] 97>
new  <	; Assign text[4] 49>

4494:
old  <	mov byte [rbp + 35], 97>
new  <	mov byte [rbp + 32], 49>

4496:
old  < strtoul_test$425:>
new  < strtoul_test$422:>

4497:
old  <	; Assign text[8] 98>
new  <	; Assign text[5] 50>

4498:
old  <	mov byte [rbp + 36], 98>
new  <	mov byte [rbp + 33], 50>

4500:
old  < strtoul_test$426:>
new  < strtoul_test$423:>

4501:
old  <	; Assign text[9] 99>
new  <	; Assign text[6] 51>

4502:
old  <	mov byte [rbp + 37], 99>
new  <	mov byte [rbp + 34], 51>

4504:
old  < strtoul_test$427:>
new  < strtoul_test$424:>

4505:
old  <	; Assign text[10] 0>
new  <	; Assign text[7] 97>

4506:
old  <	mov byte [rbp + 38], 0>
new  <	mov byte [rbp + 35], 97>

4508:
old  < strtoul_test$428:>
new  < strtoul_test$425:>

4509:
old  <	; PreCall 47 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Assign text[8] 98>

4510:
old  <>
new  <	mov byte [rbp + 36], 98>

4511:
old  < strtoul_test$429:>
new  <>

4512:
old  <	; Parameter 71 pointer text>
new  < strtoul_test$426:>

4513:
old  <	mov [rbp + 71], rbp>
new  <	; Assign text[9] 99>

4514:
old  <	add qword [rbp + 71], 28>
new  <	mov byte [rbp + 37], 99>

4516:
old  < strtoul_test$430:>
new  < strtoul_test$427:>

4517:
old  <	; Address Â£temporary2559 pointer>
new  <	; Assign text[10] 0>

4518:
old  <	mov rsi, rbp>
new  <	mov byte [rbp + 38], 0>

4519:
old  <	add rsi, 39>
new  <>

4520:
old  <>
new  < strtoul_test$428:>

4521:
old  < strtoul_test$431:>
new  <	; PreCall 47 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

4522:
old  <	; Parameter 79 pointer Â£temporary2559>
new  <>

4523:
old  <	mov [rbp + 79], rsi>
new  < strtoul_test$429:>

4524:
old  <>
new  <	; Parameter 71 pointer text>

4525:
old  < strtoul_test$432:>
new  <	mov [rbp + 71], rbp>

4526:
old  <	; Parameter 87 signedint base>
new  <	add qword [rbp + 71], 28>

4527:
old  <	mov eax, [rbp + 24]>
new  <>

4528:
old  <	mov [rbp + 87], eax>
new  < strtoul_test$430:>

4529:
old  <>
new  <	; Address Â£temporary2546 pointer>

4530:
old  < strtoul_test$433:>
new  <	mov rsi, rbp>

4531:
old  <	; Call 47 strtoul 0>
new  <	add rsi, 39>

4532:
old  <	mov qword [rbp + 47], strtoul_test$434>
new  <>

4533:
old  <	mov [rbp + 55], rbp>
new  < strtoul_test$431:>

4534:
old  <	add rbp, 47>
new  <	; Parameter 79 pointer Â£temporary2546>

4535:
old  <	jmp strtoul>
new  <	mov [rbp + 79], rsi>

4537:
old  < strtoul_test$434:>
new  < strtoul_test$432:>

4538:
old  <	; PostCall 47>
new  <	; Parameter 87 signedint base>

4539:
old  <>
new  <	mov eax, [rbp + 24]>

4540:
old  < strtoul_test$435:>
new  <	mov [rbp + 87], eax>

4541:
old  <	; GetReturnValue Â£temporary2560>
new  <>

4542:
old  <>
new  < strtoul_test$433:>

4543:
old  < strtoul_test$436:>
new  <	; Call 47 strtoul 0>

4544:
old  <	; Assign value Â£temporary2560>
new  <	mov qword [rbp + 47], strtoul_test$434>

4545:
old  <	mov [rbp + 47], rbx>
new  <	mov [rbp + 55], rbp>

4546:
old  <>
new  <	add rbp, 47>

4547:
old  < strtoul_test$437:>
new  <	jmp strtoul>

4548:
old  <	; PreCall 55 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

4549:
old  <>
new  < strtoul_test$434:>

4550:
old  < strtoul_test$438:>
new  <	; PostCall 47>

4551:
old  <	; Parameter 79 pointer "<%s> <%li> <%s> <%i>\n">
new  <>

4552:
old  <	mov qword [rbp + 79], string_3C25s3E203C25li3E203C25s3E203C25i3E0A#>
new  < strtoul_test$435:>

4553:
old  <>
new  <	; GetReturnValue Â£temporary2547>

4554:
old  < strtoul_test$439:>
new  <>

4555:
old  <	; Parameter 87 pointer text>
new  < strtoul_test$436:>

4556:
old  <	mov [rbp + 87], rbp>
new  <	; Assign value Â£temporary2547>

4557:
old  <	add qword [rbp + 87], 28>
new  <	mov [rbp + 47], rbx>

4559:
old  < strtoul_test$440:>
new  < strtoul_test$437:>

4560:
old  <	; Parameter 95 signed long int value>
new  <	; PreCall 55 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

4561:
old  <	mov rax, [rbp + 47]>
new  <>

4562:
old  <	mov [rbp + 95], rax>
new  < strtoul_test$438:>

4563:
old  <>
new  <	; Parameter 79 pointer "<%s> <%li> <%s> <%i>\n">

4564:
old  < strtoul_test$441:>
new  <	mov qword [rbp + 79], string_3C25s3E203C25li3E203C25s3E203C25i3E0A#>

4565:
old  <	; Parameter 103 pointer pointer>
new  <>

4566:
old  <	mov rax, [rbp + 39]>
new  < strtoul_test$439:>

4567:
old  <	mov [rbp + 103], rax>
new  <	; Parameter 87 pointer text>

4568:
old  <>
new  <	mov [rbp + 87], rbp>

4569:
old  < strtoul_test$442:>
new  <	add qword [rbp + 87], 28>

4570:
old  <	; Parameter 111 signedint base>
new  <>

4571:
old  <	mov eax, [rbp + 24]>
new  < strtoul_test$440:>

4572:
old  <	mov [rbp + 111], eax>
new  <	; Parameter 95 signed long int value>

4573:
old  <>
new  <	mov rax, [rbp + 47]>

4574:
old  < strtoul_test$443:>
new  <	mov [rbp + 95], rax>

4575:
old  <	; Call 55 printf 28>
new  <>

4576:
old  <	mov qword [rbp + 55], strtoul_test$444>
new  < strtoul_test$441:>

4577:
old  <	mov [rbp + 63], rbp>
new  <	; Parameter 103 pointer pointer>

4578:
old  <	add rbp, 55>
new  <	mov rax, [rbp + 39]>

4579:
old  <	mov rdi, rbp>
new  <	mov [rbp + 103], rax>

4580:
old  <	add rdi, 28>
new  <>

4581:
old  <	jmp printf>
new  < strtoul_test$442:>

4582:
old  <>
new  <	; Parameter 111 signedint base>

4583:
old  < strtoul_test$444:>
new  <	mov eax, [rbp + 24]>

4584:
old  <	; PostCall 55>
new  <	mov [rbp + 111], eax>

4586:
old  < strtoul_test$445:>
new  < strtoul_test$443:>

4587:
old  <	; Assign base 11>
new  <	; Call 55 printf 28>

4588:
old  <	mov dword [rbp + 24], 11>
new  <	mov qword [rbp + 55], strtoul_test$444>

4589:
old  <>
new  <	mov [rbp + 63], rbp>

4590:
old  < strtoul_test$446:>
new  <	add rbp, 55>

4591:
old  <	; Assign text[0] 32>
new  <	mov rdi, rbp>

4592:
old  <	mov byte [rbp + 28], 32>
new  <	add rdi, 28>

4593:
old  <>
new  <	jmp printf>

4594:
old  < strtoul_test$447:>
new  <>

4595:
old  <	; Assign text[1] 32>
new  < strtoul_test$444:>

4596:
old  <	mov byte [rbp + 29], 32>
new  <	; PostCall 55>

4598:
old  < strtoul_test$448:>
new  < strtoul_test$445:>

4599:
old  <	; Assign text[2] 32>
new  <	; Assign base 11>

4600:
old  <	mov byte [rbp + 30], 32>
new  <	mov dword [rbp + 24], 11>

4602:
old  < strtoul_test$449:>
new  < strtoul_test$446:>

4603:
old  <	; Assign text[3] 45>
new  <	; Assign text[0] 32>

4604:
old  <	mov byte [rbp + 31], 45>
new  <	mov byte [rbp + 28], 32>

4606:
old  < strtoul_test$450:>
new  < strtoul_test$447:>

4607:
old  <	; Assign text[4] 49>
new  <	; Assign text[1] 32>

4608:
old  <	mov byte [rbp + 32], 49>
new  <	mov byte [rbp + 29], 32>

4610:
old  < strtoul_test$451:>
new  < strtoul_test$448:>

4611:
old  <	; Assign text[5] 50>
new  <	; Assign text[2] 32>

4612:
old  <	mov byte [rbp + 33], 50>
new  <	mov byte [rbp + 30], 32>

4614:
old  < strtoul_test$452:>
new  < strtoul_test$449:>

4615:
old  <	; Assign text[6] 51>
new  <	; Assign text[3] 45>

4616:
old  <	mov byte [rbp + 34], 51>
new  <	mov byte [rbp + 31], 45>

4618:
old  < strtoul_test$453:>
new  < strtoul_test$450:>

4619:
old  <	; Assign text[7] 97>
new  <	; Assign text[4] 49>

4620:
old  <	mov byte [rbp + 35], 97>
new  <	mov byte [rbp + 32], 49>

4622:
old  < strtoul_test$454:>
new  < strtoul_test$451:>

4623:
old  <	; Assign text[8] 98>
new  <	; Assign text[5] 50>

4624:
old  <	mov byte [rbp + 36], 98>
new  <	mov byte [rbp + 33], 50>

4626:
old  < strtoul_test$455:>
new  < strtoul_test$452:>

4627:
old  <	; Assign text[9] 99>
new  <	; Assign text[6] 51>

4628:
old  <	mov byte [rbp + 37], 99>
new  <	mov byte [rbp + 34], 51>

4630:
old  < strtoul_test$456:>
new  < strtoul_test$453:>

4631:
old  <	; Assign text[10] 0>
new  <	; Assign text[7] 97>

4632:
old  <	mov byte [rbp + 38], 0>
new  <	mov byte [rbp + 35], 97>

4634:
old  < strtoul_test$457:>
new  < strtoul_test$454:>

4635:
old  <	; PreCall 47 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Assign text[8] 98>

4636:
old  <>
new  <	mov byte [rbp + 36], 98>

4637:
old  < strtoul_test$458:>
new  <>

4638:
old  <	; Parameter 71 pointer text>
new  < strtoul_test$455:>

4639:
old  <	mov [rbp + 71], rbp>
new  <	; Assign text[9] 99>

4640:
old  <	add qword [rbp + 71], 28>
new  <	mov byte [rbp + 37], 99>

4642:
old  < strtoul_test$459:>
new  < strtoul_test$456:>

4643:
old  <	; Address Â£temporary2573 pointer>
new  <	; Assign text[10] 0>

4644:
old  <	mov rsi, rbp>
new  <	mov byte [rbp + 38], 0>

4645:
old  <	add rsi, 39>
new  <>

4646:
old  <>
new  < strtoul_test$457:>

4647:
old  < strtoul_test$460:>
new  <	; PreCall 47 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

4648:
old  <	; Parameter 79 pointer Â£temporary2573>
new  <>

4649:
old  <	mov [rbp + 79], rsi>
new  < strtoul_test$458:>

4650:
old  <>
new  <	; Parameter 71 pointer text>

4651:
old  < strtoul_test$461:>
new  <	mov [rbp + 71], rbp>

4652:
old  <	; Parameter 87 signedint base>
new  <	add qword [rbp + 71], 28>

4653:
old  <	mov eax, [rbp + 24]>
new  <>

4654:
old  <	mov [rbp + 87], eax>
new  < strtoul_test$459:>

4655:
old  <>
new  <	; Address Â£temporary2560 pointer>

4656:
old  < strtoul_test$462:>
new  <	mov rsi, rbp>

4657:
old  <	; Call 47 strtoul 0>
new  <	add rsi, 39>

4658:
old  <	mov qword [rbp + 47], strtoul_test$463>
new  <>

4659:
old  <	mov [rbp + 55], rbp>
new  < strtoul_test$460:>

4660:
old  <	add rbp, 47>
new  <	; Parameter 79 pointer Â£temporary2560>

4661:
old  <	jmp strtoul>
new  <	mov [rbp + 79], rsi>

4663:
old  < strtoul_test$463:>
new  < strtoul_test$461:>

4664:
old  <	; PostCall 47>
new  <	; Parameter 87 signedint base>

4665:
old  <>
new  <	mov eax, [rbp + 24]>

4666:
old  < strtoul_test$464:>
new  <	mov [rbp + 87], eax>

4667:
old  <	; GetReturnValue Â£temporary2574>
new  <>

4668:
old  <>
new  < strtoul_test$462:>

4669:
old  < strtoul_test$465:>
new  <	; Call 47 strtoul 0>

4670:
old  <	; Assign value Â£temporary2574>
new  <	mov qword [rbp + 47], strtoul_test$463>

4671:
old  <	mov [rbp + 47], rbx>
new  <	mov [rbp + 55], rbp>

4672:
old  <>
new  <	add rbp, 47>

4673:
old  < strtoul_test$466:>
new  <	jmp strtoul>

4674:
old  <	; PreCall 55 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

4675:
old  <>
new  < strtoul_test$463:>

4676:
old  < strtoul_test$467:>
new  <	; PostCall 47>

4677:
old  <	; Parameter 79 pointer "<%s> <%li> <%s> <%i>\n">
new  <>

4678:
old  <	mov qword [rbp + 79], string_3C25s3E203C25li3E203C25s3E203C25i3E0A#>
new  < strtoul_test$464:>

4679:
old  <>
new  <	; GetReturnValue Â£temporary2561>

4680:
old  < strtoul_test$468:>
new  <>

4681:
old  <	; Parameter 87 pointer text>
new  < strtoul_test$465:>

4682:
old  <	mov [rbp + 87], rbp>
new  <	; Assign value Â£temporary2561>

4683:
old  <	add qword [rbp + 87], 28>
new  <	mov [rbp + 47], rbx>

4685:
old  < strtoul_test$469:>
new  < strtoul_test$466:>

4686:
old  <	; Parameter 95 signed long int value>
new  <	; PreCall 55 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

4687:
old  <	mov rax, [rbp + 47]>
new  <>

4688:
old  <	mov [rbp + 95], rax>
new  < strtoul_test$467:>

4689:
old  <>
new  <	; Parameter 79 pointer "<%s> <%li> <%s> <%i>\n">

4690:
old  < strtoul_test$470:>
new  <	mov qword [rbp + 79], string_3C25s3E203C25li3E203C25s3E203C25i3E0A#>

4691:
old  <	; Parameter 103 pointer pointer>
new  <>

4692:
old  <	mov rax, [rbp + 39]>
new  < strtoul_test$468:>

4693:
old  <	mov [rbp + 103], rax>
new  <	; Parameter 87 pointer text>

4694:
old  <>
new  <	mov [rbp + 87], rbp>

4695:
old  < strtoul_test$471:>
new  <	add qword [rbp + 87], 28>

4696:
old  <	; Parameter 111 signedint base>
new  <>

4697:
old  <	mov eax, [rbp + 24]>
new  < strtoul_test$469:>

4698:
old  <	mov [rbp + 111], eax>
new  <	; Parameter 95 signed long int value>

4699:
old  <>
new  <	mov rax, [rbp + 47]>

4700:
old  < strtoul_test$472:>
new  <	mov [rbp + 95], rax>

4701:
old  <	; Call 55 printf 28>
new  <>

4702:
old  <	mov qword [rbp + 55], strtoul_test$473>
new  < strtoul_test$470:>

4703:
old  <	mov [rbp + 63], rbp>
new  <	; Parameter 103 pointer pointer>

4704:
old  <	add rbp, 55>
new  <	mov rax, [rbp + 39]>

4705:
old  <	mov rdi, rbp>
new  <	mov [rbp + 103], rax>

4706:
old  <	add rdi, 28>
new  <>

4707:
old  <	jmp printf>
new  < strtoul_test$471:>

4708:
old  <>
new  <	; Parameter 111 signedint base>

4709:
old  < strtoul_test$473:>
new  <	mov eax, [rbp + 24]>

4710:
old  <	; PostCall 55>
new  <	mov [rbp + 111], eax>

4712:
old  < strtoul_test$474:>
new  < strtoul_test$472:>

4713:
old  <	; Assign base 12>
new  <	; Call 55 printf 28>

4714:
old  <	mov dword [rbp + 24], 12>
new  <	mov qword [rbp + 55], strtoul_test$473>

4715:
old  <>
new  <	mov [rbp + 63], rbp>

4716:
old  < strtoul_test$475:>
new  <	add rbp, 55>

4717:
old  <	; Assign text[0] 32>
new  <	mov rdi, rbp>

4718:
old  <	mov byte [rbp + 28], 32>
new  <	add rdi, 28>

4719:
old  <>
new  <	jmp printf>

4720:
old  < strtoul_test$476:>
new  <>

4721:
old  <	; Assign text[1] 32>
new  < strtoul_test$473:>

4722:
old  <	mov byte [rbp + 29], 32>
new  <	; PostCall 55>

4724:
old  < strtoul_test$477:>
new  < strtoul_test$474:>

4725:
old  <	; Assign text[2] 32>
new  <	; Assign base 12>

4726:
old  <	mov byte [rbp + 30], 32>
new  <	mov dword [rbp + 24], 12>

4728:
old  < strtoul_test$478:>
new  < strtoul_test$475:>

4729:
old  <	; Assign text[3] 45>
new  <	; Assign text[0] 32>

4730:
old  <	mov byte [rbp + 31], 45>
new  <	mov byte [rbp + 28], 32>

4732:
old  < strtoul_test$479:>
new  < strtoul_test$476:>

4733:
old  <	; Assign text[4] 49>
new  <	; Assign text[1] 32>

4734:
old  <	mov byte [rbp + 32], 49>
new  <	mov byte [rbp + 29], 32>

4736:
old  < strtoul_test$480:>
new  < strtoul_test$477:>

4737:
old  <	; Assign text[5] 50>
new  <	; Assign text[2] 32>

4738:
old  <	mov byte [rbp + 33], 50>
new  <	mov byte [rbp + 30], 32>

4740:
old  < strtoul_test$481:>
new  < strtoul_test$478:>

4741:
old  <	; Assign text[6] 51>
new  <	; Assign text[3] 45>

4742:
old  <	mov byte [rbp + 34], 51>
new  <	mov byte [rbp + 31], 45>

4744:
old  < strtoul_test$482:>
new  < strtoul_test$479:>

4745:
old  <	; Assign text[7] 65>
new  <	; Assign text[4] 49>

4746:
old  <	mov byte [rbp + 35], 65>
new  <	mov byte [rbp + 32], 49>

4748:
old  < strtoul_test$483:>
new  < strtoul_test$480:>

4749:
old  <	; Assign text[8] 66>
new  <	; Assign text[5] 50>

4750:
old  <	mov byte [rbp + 36], 66>
new  <	mov byte [rbp + 33], 50>

4752:
old  < strtoul_test$484:>
new  < strtoul_test$481:>

4753:
old  <	; Assign text[9] 67>
new  <	; Assign text[6] 51>

4754:
old  <	mov byte [rbp + 37], 67>
new  <	mov byte [rbp + 34], 51>

4756:
old  < strtoul_test$485:>
new  < strtoul_test$482:>

4757:
old  <	; Assign text[10] 0>
new  <	; Assign text[7] 65>

4758:
old  <	mov byte [rbp + 38], 0>
new  <	mov byte [rbp + 35], 65>

4760:
old  < strtoul_test$486:>
new  < strtoul_test$483:>

4761:
old  <	; PreCall 47 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Assign text[8] 66>

4762:
old  <>
new  <	mov byte [rbp + 36], 66>

4763:
old  < strtoul_test$487:>
new  <>

4764:
old  <	; Parameter 71 pointer text>
new  < strtoul_test$484:>

4765:
old  <	mov [rbp + 71], rbp>
new  <	; Assign text[9] 67>

4766:
old  <	add qword [rbp + 71], 28>
new  <	mov byte [rbp + 37], 67>

4768:
old  < strtoul_test$488:>
new  < strtoul_test$485:>

4769:
old  <	; Address Â£temporary2587 pointer>
new  <	; Assign text[10] 0>

4770:
old  <	mov rsi, rbp>
new  <	mov byte [rbp + 38], 0>

4771:
old  <	add rsi, 39>
new  <>

4772:
old  <>
new  < strtoul_test$486:>

4773:
old  < strtoul_test$489:>
new  <	; PreCall 47 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

4774:
old  <	; Parameter 79 pointer Â£temporary2587>
new  <>

4775:
old  <	mov [rbp + 79], rsi>
new  < strtoul_test$487:>

4776:
old  <>
new  <	; Parameter 71 pointer text>

4777:
old  < strtoul_test$490:>
new  <	mov [rbp + 71], rbp>

4778:
old  <	; Parameter 87 signedint base>
new  <	add qword [rbp + 71], 28>

4779:
old  <	mov eax, [rbp + 24]>
new  <>

4780:
old  <	mov [rbp + 87], eax>
new  < strtoul_test$488:>

4781:
old  <>
new  <	; Address Â£temporary2574 pointer>

4782:
old  < strtoul_test$491:>
new  <	mov rsi, rbp>

4783:
old  <	; Call 47 strtoul 0>
new  <	add rsi, 39>

4784:
old  <	mov qword [rbp + 47], strtoul_test$492>
new  <>

4785:
old  <	mov [rbp + 55], rbp>
new  < strtoul_test$489:>

4786:
old  <	add rbp, 47>
new  <	; Parameter 79 pointer Â£temporary2574>

4787:
old  <	jmp strtoul>
new  <	mov [rbp + 79], rsi>

4789:
old  < strtoul_test$492:>
new  < strtoul_test$490:>

4790:
old  <	; PostCall 47>
new  <	; Parameter 87 signedint base>

4791:
old  <>
new  <	mov eax, [rbp + 24]>

4792:
old  < strtoul_test$493:>
new  <	mov [rbp + 87], eax>

4793:
old  <	; GetReturnValue Â£temporary2588>
new  <>

4794:
old  <>
new  < strtoul_test$491:>

4795:
old  < strtoul_test$494:>
new  <	; Call 47 strtoul 0>

4796:
old  <	; Assign value Â£temporary2588>
new  <	mov qword [rbp + 47], strtoul_test$492>

4797:
old  <	mov [rbp + 47], rbx>
new  <	mov [rbp + 55], rbp>

4798:
old  <>
new  <	add rbp, 47>

4799:
old  < strtoul_test$495:>
new  <	jmp strtoul>

4800:
old  <	; PreCall 55 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

4801:
old  <>
new  < strtoul_test$492:>

4802:
old  < strtoul_test$496:>
new  <	; PostCall 47>

4803:
old  <	; Parameter 79 pointer "<%s> <%li> <%s> <%i>\n">
new  <>

4804:
old  <	mov qword [rbp + 79], string_3C25s3E203C25li3E203C25s3E203C25i3E0A#>
new  < strtoul_test$493:>

4805:
old  <>
new  <	; GetReturnValue Â£temporary2575>

4806:
old  < strtoul_test$497:>
new  <>

4807:
old  <	; Parameter 87 pointer text>
new  < strtoul_test$494:>

4808:
old  <	mov [rbp + 87], rbp>
new  <	; Assign value Â£temporary2575>

4809:
old  <	add qword [rbp + 87], 28>
new  <	mov [rbp + 47], rbx>

4811:
old  < strtoul_test$498:>
new  < strtoul_test$495:>

4812:
old  <	; Parameter 95 signed long int value>
new  <	; PreCall 55 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

4813:
old  <	mov rax, [rbp + 47]>
new  <>

4814:
old  <	mov [rbp + 95], rax>
new  < strtoul_test$496:>

4815:
old  <>
new  <	; Parameter 79 pointer "<%s> <%li> <%s> <%i>\n">

4816:
old  < strtoul_test$499:>
new  <	mov qword [rbp + 79], string_3C25s3E203C25li3E203C25s3E203C25i3E0A#>

4817:
old  <	; Parameter 103 pointer pointer>
new  <>

4818:
old  <	mov rax, [rbp + 39]>
new  < strtoul_test$497:>

4819:
old  <	mov [rbp + 103], rax>
new  <	; Parameter 87 pointer text>

4820:
old  <>
new  <	mov [rbp + 87], rbp>

4821:
old  < strtoul_test$500:>
new  <	add qword [rbp + 87], 28>

4822:
old  <	; Parameter 111 signedint base>
new  <>

4823:
old  <	mov eax, [rbp + 24]>
new  < strtoul_test$498:>

4824:
old  <	mov [rbp + 111], eax>
new  <	; Parameter 95 signed long int value>

4825:
old  <>
new  <	mov rax, [rbp + 47]>

4826:
old  < strtoul_test$501:>
new  <	mov [rbp + 95], rax>

4827:
old  <	; Call 55 printf 28>
new  <>

4828:
old  <	mov qword [rbp + 55], strtoul_test$502>
new  < strtoul_test$499:>

4829:
old  <	mov [rbp + 63], rbp>
new  <	; Parameter 103 pointer pointer>

4830:
old  <	add rbp, 55>
new  <	mov rax, [rbp + 39]>

4831:
old  <	mov rdi, rbp>
new  <	mov [rbp + 103], rax>

4832:
old  <	add rdi, 28>
new  <>

4833:
old  <	jmp printf>
new  < strtoul_test$500:>

4834:
old  <>
new  <	; Parameter 111 signedint base>

4835:
old  < strtoul_test$502:>
new  <	mov eax, [rbp + 24]>

4836:
old  <	; PostCall 55>
new  <	mov [rbp + 111], eax>

4838:
old  < strtoul_test$503:>
new  < strtoul_test$501:>

4839:
old  <	; Assign base 13>
new  <	; Call 55 printf 28>

4840:
old  <	mov dword [rbp + 24], 13>
new  <	mov qword [rbp + 55], strtoul_test$502>

4841:
old  <>
new  <	mov [rbp + 63], rbp>

4842:
old  < strtoul_test$504:>
new  <	add rbp, 55>

4843:
old  <	; Assign text[0] 32>
new  <	mov rdi, rbp>

4844:
old  <	mov byte [rbp + 28], 32>
new  <	add rdi, 28>

4845:
old  <>
new  <	jmp printf>

4846:
old  < strtoul_test$505:>
new  <>

4847:
old  <	; Assign text[1] 32>
new  < strtoul_test$502:>

4848:
old  <	mov byte [rbp + 29], 32>
new  <	; PostCall 55>

4850:
old  < strtoul_test$506:>
new  < strtoul_test$503:>

4851:
old  <	; Assign text[2] 32>
new  <	; Assign base 13>

4852:
old  <	mov byte [rbp + 30], 32>
new  <	mov dword [rbp + 24], 13>

4854:
old  < strtoul_test$507:>
new  < strtoul_test$504:>

4855:
old  <	; Assign text[3] 45>
new  <	; Assign text[0] 32>

4856:
old  <	mov byte [rbp + 31], 45>
new  <	mov byte [rbp + 28], 32>

4858:
old  < strtoul_test$508:>
new  < strtoul_test$505:>

4859:
old  <	; Assign text[4] 49>
new  <	; Assign text[1] 32>

4860:
old  <	mov byte [rbp + 32], 49>
new  <	mov byte [rbp + 29], 32>

4862:
old  < strtoul_test$509:>
new  < strtoul_test$506:>

4863:
old  <	; Assign text[5] 50>
new  <	; Assign text[2] 32>

4864:
old  <	mov byte [rbp + 33], 50>
new  <	mov byte [rbp + 30], 32>

4866:
old  < strtoul_test$510:>
new  < strtoul_test$507:>

4867:
old  <	; Assign text[6] 51>
new  <	; Assign text[3] 45>

4868:
old  <	mov byte [rbp + 34], 51>
new  <	mov byte [rbp + 31], 45>

4870:
old  < strtoul_test$511:>
new  < strtoul_test$508:>

4871:
old  <	; Assign text[7] 97>
new  <	; Assign text[4] 49>

4872:
old  <	mov byte [rbp + 35], 97>
new  <	mov byte [rbp + 32], 49>

4874:
old  < strtoul_test$512:>
new  < strtoul_test$509:>

4875:
old  <	; Assign text[8] 98>
new  <	; Assign text[5] 50>

4876:
old  <	mov byte [rbp + 36], 98>
new  <	mov byte [rbp + 33], 50>

4878:
old  < strtoul_test$513:>
new  < strtoul_test$510:>

4879:
old  <	; Assign text[9] 99>
new  <	; Assign text[6] 51>

4880:
old  <	mov byte [rbp + 37], 99>
new  <	mov byte [rbp + 34], 51>

4882:
old  < strtoul_test$514:>
new  < strtoul_test$511:>

4883:
old  <	; Assign text[10] 0>
new  <	; Assign text[7] 97>

4884:
old  <	mov byte [rbp + 38], 0>
new  <	mov byte [rbp + 35], 97>

4886:
old  < strtoul_test$515:>
new  < strtoul_test$512:>

4887:
old  <	; PreCall 47 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Assign text[8] 98>

4888:
old  <>
new  <	mov byte [rbp + 36], 98>

4889:
old  < strtoul_test$516:>
new  <>

4890:
old  <	; Parameter 71 pointer text>
new  < strtoul_test$513:>

4891:
old  <	mov [rbp + 71], rbp>
new  <	; Assign text[9] 99>

4892:
old  <	add qword [rbp + 71], 28>
new  <	mov byte [rbp + 37], 99>

4894:
old  < strtoul_test$517:>
new  < strtoul_test$514:>

4895:
old  <	; Address Â£temporary2601 pointer>
new  <	; Assign text[10] 0>

4896:
old  <	mov rsi, rbp>
new  <	mov byte [rbp + 38], 0>

4897:
old  <	add rsi, 39>
new  <>

4898:
old  <>
new  < strtoul_test$515:>

4899:
old  < strtoul_test$518:>
new  <	; PreCall 47 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

4900:
old  <	; Parameter 79 pointer Â£temporary2601>
new  <>

4901:
old  <	mov [rbp + 79], rsi>
new  < strtoul_test$516:>

4902:
old  <>
new  <	; Parameter 71 pointer text>

4903:
old  < strtoul_test$519:>
new  <	mov [rbp + 71], rbp>

4904:
old  <	; Parameter 87 signedint base>
new  <	add qword [rbp + 71], 28>

4905:
old  <	mov eax, [rbp + 24]>
new  <>

4906:
old  <	mov [rbp + 87], eax>
new  < strtoul_test$517:>

4907:
old  <>
new  <	; Address Â£temporary2588 pointer>

4908:
old  < strtoul_test$520:>
new  <	mov rsi, rbp>

4909:
old  <	; Call 47 strtoul 0>
new  <	add rsi, 39>

4910:
old  <	mov qword [rbp + 47], strtoul_test$521>
new  <>

4911:
old  <	mov [rbp + 55], rbp>
new  < strtoul_test$518:>

4912:
old  <	add rbp, 47>
new  <	; Parameter 79 pointer Â£temporary2588>

4913:
old  <	jmp strtoul>
new  <	mov [rbp + 79], rsi>

4915:
old  < strtoul_test$521:>
new  < strtoul_test$519:>

4916:
old  <	; PostCall 47>
new  <	; Parameter 87 signedint base>

4917:
old  <>
new  <	mov eax, [rbp + 24]>

4918:
old  < strtoul_test$522:>
new  <	mov [rbp + 87], eax>

4919:
old  <	; GetReturnValue Â£temporary2602>
new  <>

4920:
old  <>
new  < strtoul_test$520:>

4921:
old  < strtoul_test$523:>
new  <	; Call 47 strtoul 0>

4922:
old  <	; Assign value Â£temporary2602>
new  <	mov qword [rbp + 47], strtoul_test$521>

4923:
old  <	mov [rbp + 47], rbx>
new  <	mov [rbp + 55], rbp>

4924:
old  <>
new  <	add rbp, 47>

4925:
old  < strtoul_test$524:>
new  <	jmp strtoul>

4926:
old  <	; PreCall 55 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

4927:
old  <>
new  < strtoul_test$521:>

4928:
old  < strtoul_test$525:>
new  <	; PostCall 47>

4929:
old  <	; Parameter 79 pointer "<%s> <%li> <%s> <%i>\n">
new  <>

4930:
old  <	mov qword [rbp + 79], string_3C25s3E203C25li3E203C25s3E203C25i3E0A#>
new  < strtoul_test$522:>

4931:
old  <>
new  <	; GetReturnValue Â£temporary2589>

4932:
old  < strtoul_test$526:>
new  <>

4933:
old  <	; Parameter 87 pointer text>
new  < strtoul_test$523:>

4934:
old  <	mov [rbp + 87], rbp>
new  <	; Assign value Â£temporary2589>

4935:
old  <	add qword [rbp + 87], 28>
new  <	mov [rbp + 47], rbx>

4937:
old  < strtoul_test$527:>
new  < strtoul_test$524:>

4938:
old  <	; Parameter 95 signed long int value>
new  <	; PreCall 55 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

4939:
old  <	mov rax, [rbp + 47]>
new  <>

4940:
old  <	mov [rbp + 95], rax>
new  < strtoul_test$525:>

4941:
old  <>
new  <	; Parameter 79 pointer "<%s> <%li> <%s> <%i>\n">

4942:
old  < strtoul_test$528:>
new  <	mov qword [rbp + 79], string_3C25s3E203C25li3E203C25s3E203C25i3E0A#>

4943:
old  <	; Parameter 103 pointer pointer>
new  <>

4944:
old  <	mov rax, [rbp + 39]>
new  < strtoul_test$526:>

4945:
old  <	mov [rbp + 103], rax>
new  <	; Parameter 87 pointer text>

4946:
old  <>
new  <	mov [rbp + 87], rbp>

4947:
old  < strtoul_test$529:>
new  <	add qword [rbp + 87], 28>

4948:
old  <	; Parameter 111 signedint base>
new  <>

4949:
old  <	mov eax, [rbp + 24]>
new  < strtoul_test$527:>

4950:
old  <	mov [rbp + 111], eax>
new  <	; Parameter 95 signed long int value>

4951:
old  <>
new  <	mov rax, [rbp + 47]>

4952:
old  < strtoul_test$530:>
new  <	mov [rbp + 95], rax>

4953:
old  <	; Call 55 printf 28>
new  <>

4954:
old  <	mov qword [rbp + 55], strtoul_test$531>
new  < strtoul_test$528:>

4955:
old  <	mov [rbp + 63], rbp>
new  <	; Parameter 103 pointer pointer>

4956:
old  <	add rbp, 55>
new  <	mov rax, [rbp + 39]>

4957:
old  <	mov rdi, rbp>
new  <	mov [rbp + 103], rax>

4958:
old  <	add rdi, 28>
new  <>

4959:
old  <	jmp printf>
new  < strtoul_test$529:>

4960:
old  <>
new  <	; Parameter 111 signedint base>

4961:
old  < strtoul_test$531:>
new  <	mov eax, [rbp + 24]>

4962:
old  <	; PostCall 55>
new  <	mov [rbp + 111], eax>

4964:
old  < strtoul_test$532:>
new  < strtoul_test$530:>

4965:
old  <	; Return>
new  <	; Call 55 printf 28>

4966:
old  <	mov rax, [rbp]>
new  <	mov qword [rbp + 55], strtoul_test$531>

4967:
old  <	mov rdi, [rbp + 16]>
new  <	mov [rbp + 63], rbp>

4968:
old  <	mov rbp, [rbp + 8]>
new  <	add rbp, 55>

4969:
old  <	jmp rax>
new  <	mov rdi, rbp>

4970:
old  <>
new  <	add rdi, 28>

4971:
old  < strtoul_test$533:>
new  <	jmp printf>

4972:
old  <	; FunctionEnd strtoul_test>
new  <>

4973:
old  <>
new  < strtoul_test$531:>

4974:
old  <section .text>
new  <	; PostCall 55>

4976:
old  < atof:>
new  < strtoul_test$532:>

4977:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Return>

4978:
old  <>
new  <	mov rax, [rbp]>

4979:
old  < atof$1:>
new  <	mov rdi, [rbp + 16]>

4980:
old  <	; Parameter 56 pointer s>
new  <	mov rbp, [rbp + 8]>

4981:
old  <	mov rax, [rbp + 24]>
new  <	jmp rax>

4982:
old  <	mov [rbp + 56], rax>
new  <>

4983:
old  <>
new  < strtoul_test$533:>

4984:
old  < atof$2:>
new  <	; FunctionEnd strtoul_test>

4985:
old  <	; Parameter 64 pointer 0>
new  <>

4986:
old  <	mov qword [rbp + 64], 0>
new  <section .text>

4988:
old  < atof$3:>
new  < atof:>

4989:
old  <	; Call 32 strtod 0>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

4990:
old  <	mov qword [rbp + 32], atof$4>
new  <>

4991:
old  <	mov [rbp + 40], rbp>
new  < atof$1:>

4992:
old  <	add rbp, 32>
new  <	; Parameter 56 pointer s>

4993:
old  <	jmp strtod>
new  <	mov rax, [rbp + 24]>

4994:
old  <>
new  <	mov [rbp + 56], rax>

4995:
old  < atof$4:>
new  <>

4996:
old  <	; PostCall 32>
new  < atof$2:>

4997:
old  <>
new  <	; Parameter 64 pointer 0>

4998:
old  < atof$5:>
new  <	mov qword [rbp + 64], 0>

4999:
old  <	; GetReturnValue Â£temporary2622>
new  <>

5000:
old  <>
new  < atof$3:>

5001:
old  < atof$6:>
new  <	; Call 32 strtod 0>

5002:
old  <	; Return Â£temporary2622>
new  <	mov qword [rbp + 32], atof$4>

5003:
old  <	mov rax, [rbp]>
new  <	mov [rbp + 40], rbp>

5004:
old  <	mov rdi, [rbp + 16]>
new  <	add rbp, 32>

5005:
old  <	mov rbp, [rbp + 8]>
new  <	jmp strtod>

5006:
old  <	jmp rax>
new  <>

5007:
old  <>
new  < atof$4:>

5008:
old  < atof$7:>
new  <	; PostCall 32>

5009:
old  <	; FunctionEnd atof>
new  <>

5010:
old  <>
new  < atof$5:>

5011:
old  <section .data>
new  <	; GetReturnValue Â£temporary2609>

5013:
old  <string_25lf25n#:>
new  < atof$6:>

5014:
old  <	; Initializer String %lf%n>
new  <	; SetReturnValue>

5015:
old  <	db "%lf%n", 0>
new  <>

5016:
old  <>
new  < atof$7:>

5017:
old  <section .text>
new  <	; Return Â£temporary2609>

5018:
old  <>
new  <	mov rax, [rbp]>

5019:
old  < strtod:>
new  <	mov rdi, [rbp + 16]>

5020:
old  <	; Assign chars 0>
new  <	mov rbp, [rbp + 8]>

5021:
old  <	mov dword [rbp + 40], 0>
new  <	jmp rax>

5023:
old  < strtod$1:>
new  < atof$8:>

5024:
old  <	; PushFloat 0>
new  <	; FunctionEnd atof>

5025:
old  <	fldz>
new  <>

5026:
old  <>
new  <section .data>

5027:
old  < strtod$2:>
new  <>

5028:
old  <	; PopFloat value>
new  <string_25lf25n#:>

5029:
old  <	fstp qword [rbp + 44]>
new  <	; Initializer String %lf%n>

5030:
old  <>
new  <	db "%lf%n", 0>

5031:
old  < strtod$3:>
new  <>

5032:
old  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <section .text>

5034:
old  < strtod$4:>
new  < strtod:>

5035:
old  <	; Parameter 76 pointer s>
new  <	; Assign chars 0>

5036:
old  <	mov rax, [rbp + 24]>
new  <	mov dword [rbp + 40], 0>

5037:
old  <	mov [rbp + 76], rax>
new  <>

5038:
old  <>
new  < strtod$1:>

5039:
old  < strtod$5:>
new  <	; PushFloat 0>

5040:
old  <	; Parameter 84 pointer "%lf%n">
new  <	fldz>

5041:
old  <	mov qword [rbp + 84], string_25lf25n#>
new  <>

5042:
old  <>
new  < strtod$2:>

5043:
old  < strtod$6:>
new  <	; PopFloat value>

5044:
old  <	; Address Â£temporary2623 value>
new  <	fstp qword [rbp + 44]>

5045:
old  <	mov rsi, rbp>
new  <>

5046:
old  <	add rsi, 44>
new  < strtod$3:>

5047:
old  <>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

5048:
old  < strtod$7:>
new  <>

5049:
old  <	; Parameter 92 pointer Â£temporary2623>
new  < strtod$4:>

5050:
old  <	mov [rbp + 92], rsi>
new  <	; Parameter 76 pointer s>

5051:
old  <>
new  <	mov rax, [rbp + 24]>

5052:
old  < strtod$8:>
new  <	mov [rbp + 76], rax>

5053:
old  <	; Address Â£temporary2624 chars>
new  <>

5054:
old  <	mov rsi, rbp>
new  < strtod$5:>

5055:
old  <	add rsi, 40>
new  <	; Parameter 84 pointer "%lf%n">

5056:
old  <>
new  <	mov qword [rbp + 84], string_25lf25n#>

5057:
old  < strtod$9:>
new  <>

5058:
old  <	; Parameter 100 pointer Â£temporary2624>
new  < strtod$6:>

5059:
old  <	mov [rbp + 100], rsi>
new  <	; Address Â£temporary2610 value>

5060:
old  <>
new  <	mov rsi, rbp>

5061:
old  < strtod$10:>
new  <	add rsi, 44>

5062:
old  <	; Call 52 sscanf 16>
new  <>

5063:
old  <	mov qword [rbp + 52], strtod$11>
new  < strtod$7:>

5064:
old  <	mov [rbp + 60], rbp>
new  <	; Parameter 92 pointer Â£temporary2610>

5065:
old  <	add rbp, 52>
new  <	mov [rbp + 92], rsi>

5066:
old  <	mov rdi, rbp>
new  <>

5067:
old  <	add rdi, 16>
new  < strtod$8:>

5068:
old  <	jmp sscanf>
new  <	; Address Â£temporary2611 chars>

5069:
old  <>
new  <	mov rsi, rbp>

5070:
old  < strtod$11:>
new  <	add rsi, 40>

5071:
old  <	; PostCall 52>
new  <>

5072:
old  <>
new  < strtod$9:>

5073:
old  < strtod$12:>
new  <	; Parameter 100 pointer Â£temporary2611>

5074:
old  <	; Equal 16 endp 0>
new  <	mov [rbp + 100], rsi>

5075:
old  <	cmp qword [rbp + 32], 0>
new  <>

5076:
old  <	je strtod$16>
new  < strtod$10:>

5077:
old  <>
new  <	; Call 52 sscanf 16>

5078:
old  < strtod$13:>
new  <	mov qword [rbp + 52], strtod$11>

5079:
old  <	; Dereference Â£temporary2627 -> endp endp 0>
new  <	mov [rbp + 60], rbp>

5080:
old  <	mov rsi, [rbp + 32]>
new  <	add rbp, 52>

5081:
old  <>
new  <	mov rdi, rbp>

5082:
old  < strtod$14:>
new  <	add rdi, 16>

5083:
old  <	; IntegralToIntegral Â£temporary2628 chars>
new  <	jmp sscanf>

5084:
old  <	mov eax, [rbp + 40]>
new  <>

5085:
old  <	mov rbx, 4294967295>
new  < strtod$11:>

5086:
old  <	and rax, rbx>
new  <	; PostCall 52>

5088:
old  < strtod$15:>
new  < strtod$12:>

5089:
old  <	; BinaryAdd Â£temporary2627 -> endp s Â£temporary2628>
new  <	; Equal 16 endp 0>

5090:
old  <	mov rbx, [rbp + 24]>
new  <	cmp qword [rbp + 32], 0>

5091:
old  <	add rbx, rax>
new  <	je strtod$16>

5092:
old  <	mov [rsi], rbx>
new  <>

5093:
old  <>
new  < strtod$13:>

5094:
old  < strtod$16:>
new  <	; Dereference Â£temporary2614 -> endp endp 0>

5095:
old  <	; PushFloat value>
new  <	mov rsi, [rbp + 32]>

5096:
old  <	fld qword [rbp + 44]>
new  <>

5097:
old  <>
new  < strtod$14:>

5098:
old  < strtod$17:>
new  <	; IntegralToIntegral Â£temporary2615 chars>

5099:
old  <	; Return value>
new  <	mov eax, [rbp + 40]>

5100:
old  <	mov rax, [rbp]>
new  <	mov rbx, 4294967295>

5101:
old  <	mov rdi, [rbp + 16]>
new  <	and rax, rbx>

5102:
old  <	mov rbp, [rbp + 8]>
new  <>

5103:
old  <	jmp rax>
new  < strtod$15:>

5104:
old  <>
new  <	; BinaryAdd Â£temporary2614 -> endp s Â£temporary2615>

5105:
old  < strtod$18:>
new  <	mov rbx, [rbp + 24]>

5106:
old  <	; FunctionEnd strtod>
new  <	add rbx, rax>

5107:
old  <>
new  <	mov [rsi], rbx>

5108:
old  <section .text>
new  <>

5109:
old  <>
new  < strtod$16:>

5110:
old  < abort:>
new  <	; PushFloat value>

5111:
old  <	; AssignRegister rax 60>
new  <	fld qword [rbp + 44]>

5112:
old  <	mov rax, 60>
new  <>

5113:
old  <>
new  < strtod$17:>

5114:
old  < abort$1:>
new  <	; SetReturnValue>

5115:
old  <	; AssignRegister rdi 18446744073709551615>
new  <>

5116:
old  <	mov rdi, 18446744073709551615>
new  < strtod$18:>

5117:
old  <>
new  <	; Return value>

5118:
old  < abort$2:>
new  <	mov rax, [rbp]>

5119:
old  <	; SysCall>
new  <	mov rdi, [rbp + 16]>

5120:
old  <	syscall>
new  <	mov rbp, [rbp + 8]>

5121:
old  <>
new  <	jmp rax>

5122:
old  < abort$3:>
new  <>

5123:
old  <	; Return>
new  < strtod$19:>

5124:
old  <	mov rax, [rbp]>
new  <	; FunctionEnd strtod>

5125:
old  <	mov rdi, [rbp + 16]>
new  <>

5126:
old  <	mov rbp, [rbp + 8]>
new  <section .text>

5127:
old  <	jmp rax>
new  <>

5128:
old  <>
new  < abort:>

5129:
old  < abort$4:>
new  <	; AssignRegister rax 60>

5130:
old  <	; FunctionEnd abort>
new  <	mov rax, 60>

5132:
old  <section .text>
new  < abort$1:>

5133:
old  <>
new  <	; AssignRegister rdi 18446744073709551615>

5134:
old  < getenv:>
new  <	mov rdi, 18446744073709551615>

5135:
old  <	; Return 0>
new  <>

5136:
old  <	mov rbx, 0>
new  < abort$2:>

5137:
old  <	mov rax, [rbp]>
new  <	; SysCall>

5138:
old  <	mov rdi, [rbp + 16]>
new  <	syscall>

5139:
old  <	mov rbp, [rbp + 8]>
new  <>

5140:
old  <	jmp rax>
new  < abort$3:>

5141:
old  <>
new  <	; Return>

5142:
old  < getenv$1:>
new  <	mov rax, [rbp]>

5143:
old  <	; FunctionEnd getenv>
new  <	mov rdi, [rbp + 16]>

5144:
old  <>
new  <	mov rbp, [rbp + 8]>

5145:
old  <section .text>
new  <	jmp rax>

5147:
old  < system:>
new  < abort$4:>

5148:
old  <	; Return -1>
new  <	; FunctionEnd abort>

5149:
old  <	mov ebx, -1>
new  <>

5150:
old  <	mov rax, [rbp]>
new  <section .text>

5151:
old  <	mov rdi, [rbp + 16]>
new  <>

5152:
old  <	mov rbp, [rbp + 8]>
new  < getenv:>

5153:
old  <	jmp rax>
new  <	; SetReturnValue>

5155:
old  < system$1:>
new  < getenv$1:>

5156:
old  <	; FunctionEnd system>
new  <	; Return 0>

5157:
old  <>
new  <	mov rbx, 0>

5158:
old  <section .data>
new  <	mov rax, [rbp]>

5159:
old  <>
new  <	mov rdi, [rbp + 16]>

5160:
old  <int4$2#:>
new  <	mov rbp, [rbp + 8]>

5161:
old  <	; Initializer SignedInt 2>
new  <	jmp rax>

5162:
old  <	dd 2>
new  <>

5163:
old  <>
new  < getenv$2:>

5164:
old  <section .text>
new  <	; FunctionEnd getenv>

5166:
old  < bsearch:>
new  <section .text>

5167:
old  <	; Assign firstIndex 0>
new  <>

5168:
old  <	mov dword [rbp + 56], 0>
new  < system:>

5169:
old  <>
new  <	; SetReturnValue>

5170:
old  < bsearch$1:>
new  <>

5171:
old  <	; BinarySubtract lastIndex listSize 1>
new  < system$1:>

5172:
old  <	mov eax, [rbp + 40]>
new  <	; Return -1>

5173:
old  <	dec eax>
new  <	mov ebx, -1>

5174:
old  <	mov [rbp + 60], eax>
new  <	mov rax, [rbp]>

5175:
old  <>
new  <	mov rdi, [rbp + 16]>

5176:
old  < bsearch$2:>
new  <	mov rbp, [rbp + 8]>

5177:
old  <	; NotEqual 4 listSize 0>
new  <	jmp rax>

5178:
old  <	cmp dword [rbp + 40], 0>
new  <>

5179:
old  <	jne bsearch$4>
new  < system$2:>

5180:
old  <>
new  <	; FunctionEnd system>

5181:
old  < bsearch$3:>
new  <>

5182:
old  <	; Return 0>
new  <section .data>

5183:
old  <	mov rbx, 0>
new  <>

5184:
old  <	mov rax, [rbp]>
new  <int4$2#:>

5185:
old  <	mov rdi, [rbp + 16]>
new  <	; Initializer SignedInt 2>

5186:
old  <	mov rbp, [rbp + 8]>
new  <	dd 2>

5187:
old  <	jmp rax>
new  <>

5188:
old  <>
new  <section .text>

5189:
old  < bsearch$4:>
new  <>

5190:
old  <	; IntegralToIntegral Â£temporary2637 valueList>
new  < bsearch:>

5191:
old  <	mov rbx, [rbp + 32]>
new  <	; Assign firstIndex 0>

5192:
old  <>
new  <	mov dword [rbp + 56], 0>

5193:
old  < bsearch$5:>
new  <>

5194:
old  <	; SignedMultiply Â£temporary2638 firstIndex valueSize>
new  < bsearch$1:>

5195:
old  <	mov eax, [rbp + 56]>
new  <	; BinarySubtract lastIndex listSize 1>

5196:
old  <	xor edx, edx>
new  <	mov eax, [rbp + 40]>

5197:
old  <	imul dword [rbp + 44]>
new  <	dec eax>

5198:
old  <>
new  <	mov [rbp + 60], eax>

5199:
old  < bsearch$6:>
new  <>

5200:
old  <	; IntegralToIntegral Â£temporary2639 Â£temporary2638>
new  < bsearch$2:>

5201:
old  <	mov rcx, 4294967295>
new  <	; NotEqual 5 listSize 0>

5202:
old  <	and rax, rcx>
new  <	cmp dword [rbp + 40], 0>

5203:
old  <>
new  <	jne bsearch$5>

5204:
old  < bsearch$7:>
new  <>

5205:
old  <	; BinaryAdd firstValuePtr Â£temporary2637 Â£temporary2639>
new  < bsearch$3:>

5206:
old  <	add rbx, rax>
new  <	; SetReturnValue>

5207:
old  <	mov [rbp + 64], rbx>
new  <>

5208:
old  <>
new  < bsearch$4:>

5209:
old  < bsearch$8:>
new  <	; Return 0>

5210:
old  <	; PreCall 72 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov rbx, 0>

5211:
old  <>
new  <	mov rax, [rbp]>

5212:
old  < bsearch$9:>
new  <	mov rdi, [rbp + 16]>

5213:
old  <	; Parameter 96 pointer keyPtr>
new  <	mov rbp, [rbp + 8]>

5214:
old  <	mov rax, [rbp + 24]>
new  <	jmp rax>

5215:
old  <	mov [rbp + 96], rax>
new  <>

5216:
old  <>
new  < bsearch$5:>

5217:
old  < bsearch$10:>
new  <	; IntegralToIntegral Â£temporary2624 valueList>

5218:
old  <	; Parameter 104 pointer firstValuePtr>
new  <	mov rbx, [rbp + 32]>

5219:
old  <	mov rax, [rbp + 64]>
new  <>

5220:
old  <	mov [rbp + 104], rax>
new  < bsearch$6:>

5221:
old  <>
new  <	; SignedMultiply Â£temporary2625 firstIndex valueSize>

5222:
old  < bsearch$11:>
new  <	mov eax, [rbp + 56]>

5223:
old  <	; Call 72 compare 0>
new  <	xor edx, edx>

5224:
old  <	mov qword [rbp + 72], bsearch$12>
new  <	imul dword [rbp + 44]>

5225:
old  <	mov [rbp + 80], rbp>
new  <>

5226:
old  <	mov rax, [rbp + 48]>
new  < bsearch$7:>

5227:
old  <	add rbp, 72>
new  <	; IntegralToIntegral Â£temporary2626 Â£temporary2625>

5228:
old  <	jmp rax>
new  <	mov rcx, 4294967295>

5229:
old  <>
new  <	and rax, rcx>

5230:
old  < bsearch$12:>
new  <>

5231:
old  <	; PostCall 72>
new  < bsearch$8:>

5232:
old  <>
new  <	; BinaryAdd firstValuePtr Â£temporary2624 Â£temporary2626>

5233:
old  < bsearch$13:>
new  <	add rbx, rax>

5234:
old  <	; GetReturnValue Â£temporary2642>
new  <	mov [rbp + 64], rbx>

5236:
old  < bsearch$14:>
new  < bsearch$9:>

5237:
old  <	; Assign firstCompare Â£temporary2642>
new  <	; PreCall 72 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

5238:
old  <	mov [rbp + 72], ebx>
new  <>

5239:
old  <>
new  < bsearch$10:>

5240:
old  < bsearch$15:>
new  <	; Parameter 96 pointer keyPtr>

5241:
old  <	; SignedGreaterThanEqual 17 firstCompare 0>
new  <	mov rax, [rbp + 24]>

5242:
old  <	cmp dword [rbp + 72], 0>
new  <	mov [rbp + 96], rax>

5243:
old  <	jge bsearch$17>
new  <>

5244:
old  <>
new  < bsearch$11:>

5245:
old  < bsearch$16:>
new  <	; Parameter 104 pointer firstValuePtr>

5246:
old  <	; Return 0>
new  <	mov rax, [rbp + 64]>

5247:
old  <	mov rbx, 0>
new  <	mov [rbp + 104], rax>

5248:
old  <	mov rax, [rbp]>
new  <>

5249:
old  <	mov rdi, [rbp + 16]>
new  < bsearch$12:>

5250:
old  <	mov rbp, [rbp + 8]>
new  <	; Call 72 compare 0>

5251:
old  <	jmp rax>
new  <	mov qword [rbp + 72], bsearch$13>

5252:
old  <>
new  <	mov [rbp + 80], rbp>

5253:
old  < bsearch$17:>
new  <	mov rax, [rbp + 48]>

5254:
old  <	; NotEqual 19 firstCompare 0>
new  <	add rbp, 72>

5255:
old  <	cmp dword [rbp + 72], 0>
new  <	jmp rax>

5256:
old  <	jne bsearch$19>
new  <>

5257:
old  <>
new  < bsearch$13:>

5258:
old  < bsearch$18:>
new  <	; PostCall 72>

5259:
old  <	; Return firstValuePtr>
new  <>

5260:
old  <	mov rbx, [rbp + 64]>
new  < bsearch$14:>

5261:
old  <	mov rax, [rbp]>
new  <	; GetReturnValue Â£temporary2629>

5262:
old  <	mov rdi, [rbp + 16]>
new  <>

5263:
old  <	mov rbp, [rbp + 8]>
new  < bsearch$15:>

5264:
old  <	jmp rax>
new  <	; Assign firstCompare Â£temporary2629>

5265:
old  <>
new  <	mov [rbp + 72], ebx>

5266:
old  < bsearch$19:>
new  <>

5267:
old  <	; IntegralToIntegral Â£temporary2645 valueList>
new  < bsearch$16:>

5268:
old  <	mov rbx, [rbp + 32]>
new  <	; SignedGreaterThanEqual 19 firstCompare 0>

5269:
old  <>
new  <	cmp dword [rbp + 72], 0>

5270:
old  < bsearch$20:>
new  <	jge bsearch$19>

5271:
old  <	; SignedMultiply Â£temporary2646 lastIndex valueSize>
new  <>

5272:
old  <	mov eax, [rbp + 60]>
new  < bsearch$17:>

5273:
old  <	xor edx, edx>
new  <	; SetReturnValue>

5274:
old  <	imul dword [rbp + 44]>
new  <>

5275:
old  <>
new  < bsearch$18:>

5276:
old  < bsearch$21:>
new  <	; Return 0>

5277:
old  <	; IntegralToIntegral Â£temporary2647 Â£temporary2646>
new  <	mov rbx, 0>

5278:
old  <	mov rcx, 4294967295>
new  <	mov rax, [rbp]>

5279:
old  <	and rax, rcx>
new  <	mov rdi, [rbp + 16]>

5280:
old  <>
new  <	mov rbp, [rbp + 8]>

5281:
old  < bsearch$22:>
new  <	jmp rax>

5282:
old  <	; BinaryAdd lastValuePtr Â£temporary2645 Â£temporary2647>
new  <>

5283:
old  <	add rbx, rax>
new  < bsearch$19:>

5284:
old  <	mov [rbp + 64], rbx>
new  <	; NotEqual 22 firstCompare 0>

5285:
old  <>
new  <	cmp dword [rbp + 72], 0>

5286:
old  < bsearch$23:>
new  <	jne bsearch$22>

5287:
old  <	; PreCall 72 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

5288:
old  <>
new  < bsearch$20:>

5289:
old  < bsearch$24:>
new  <	; SetReturnValue>

5290:
old  <	; Parameter 96 pointer keyPtr>
new  <>

5291:
old  <	mov rax, [rbp + 24]>
new  < bsearch$21:>

5292:
old  <	mov [rbp + 96], rax>
new  <	; Return firstValuePtr>

5293:
old  <>
new  <	mov rbx, [rbp + 64]>

5294:
old  < bsearch$25:>
new  <	mov rax, [rbp]>

5295:
old  <	; Parameter 104 pointer lastValuePtr>
new  <	mov rdi, [rbp + 16]>

5296:
old  <	mov rax, [rbp + 64]>
new  <	mov rbp, [rbp + 8]>

5297:
old  <	mov [rbp + 104], rax>
new  <	jmp rax>

5299:
old  < bsearch$26:>
new  < bsearch$22:>

5300:
old  <	; Call 72 compare 0>
new  <	; IntegralToIntegral Â£temporary2632 valueList>

5301:
old  <	mov qword [rbp + 72], bsearch$27>
new  <	mov rbx, [rbp + 32]>

5302:
old  <	mov [rbp + 80], rbp>
new  <>

5303:
old  <	mov rax, [rbp + 48]>
new  < bsearch$23:>

5304:
old  <	add rbp, 72>
new  <	; SignedMultiply Â£temporary2633 lastIndex valueSize>

5305:
old  <	jmp rax>
new  <	mov eax, [rbp + 60]>

5306:
old  <>
new  <	xor edx, edx>

5307:
old  < bsearch$27:>
new  <	imul dword [rbp + 44]>

5308:
old  <	; PostCall 72>
new  <>

5309:
old  <>
new  < bsearch$24:>

5310:
old  < bsearch$28:>
new  <	; IntegralToIntegral Â£temporary2634 Â£temporary2633>

5311:
old  <	; GetReturnValue Â£temporary2650>
new  <	mov rcx, 4294967295>

5312:
old  <>
new  <	and rax, rcx>

5313:
old  < bsearch$29:>
new  <>

5314:
old  <	; Assign lastCompare Â£temporary2650>
new  < bsearch$25:>

5315:
old  <	mov [rbp + 72], ebx>
new  <	; BinaryAdd lastValuePtr Â£temporary2632 Â£temporary2634>

5316:
old  <>
new  <	add rbx, rax>

5317:
old  < bsearch$30:>
new  <	mov [rbp + 64], rbx>

5318:
old  <	; SignedLessThanEqual 32 lastCompare 0>
new  <>

5319:
old  <	cmp dword [rbp + 72], 0>
new  < bsearch$26:>

5320:
old  <	jle bsearch$32>
new  <	; PreCall 72 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

5322:
old  < bsearch$31:>
new  < bsearch$27:>

5323:
old  <	; Return 0>
new  <	; Parameter 96 pointer keyPtr>

5324:
old  <	mov rbx, 0>
new  <	mov rax, [rbp + 24]>

5325:
old  <	mov rax, [rbp]>
new  <	mov [rbp + 96], rax>

5326:
old  <	mov rdi, [rbp + 16]>
new  <>

5327:
old  <	mov rbp, [rbp + 8]>
new  < bsearch$28:>

5328:
old  <	jmp rax>
new  <	; Parameter 104 pointer lastValuePtr>

5329:
old  <>
new  <	mov rax, [rbp + 64]>

5330:
old  < bsearch$32:>
new  <	mov [rbp + 104], rax>

5331:
old  <	; NotEqual 34 lastCompare 0>
new  <>

5332:
old  <	cmp dword [rbp + 72], 0>
new  < bsearch$29:>

5333:
old  <	jne bsearch$34>
new  <	; Call 72 compare 0>

5334:
old  <>
new  <	mov qword [rbp + 72], bsearch$30>

5335:
old  < bsearch$33:>
new  <	mov [rbp + 80], rbp>

5336:
old  <	; Return lastValuePtr>
new  <	mov rax, [rbp + 48]>

5337:
old  <	mov rbx, [rbp + 64]>
new  <	add rbp, 72>

5338:
old  <	mov rax, [rbp]>
new  <	jmp rax>

5339:
old  <	mov rdi, [rbp + 16]>
new  <>

5340:
old  <	mov rbp, [rbp + 8]>
new  < bsearch$30:>

5341:
old  <	jmp rax>
new  <	; PostCall 72>

5343:
old  < bsearch$34:>
new  < bsearch$31:>

5344:
old  <	; BinaryAdd Â£temporary2653 firstIndex lastIndex>
new  <	; GetReturnValue Â£temporary2637>

5345:
old  <	mov eax, [rbp + 56]>
new  <>

5346:
old  <	add eax, [rbp + 60]>
new  < bsearch$32:>

5347:
old  <>
new  <	; Assign lastCompare Â£temporary2637>

5348:
old  < bsearch$35:>
new  <	mov [rbp + 72], ebx>

5349:
old  <	; SignedDivide middleIndex Â£temporary2653 2>
new  <>

5350:
old  <	xor edx, edx>
new  < bsearch$33:>

5351:
old  <	idiv dword [int4$2#]>
new  <	; SignedLessThanEqual 36 lastCompare 0>

5352:
old  <	mov [rbp + 64], eax>
new  <	cmp dword [rbp + 72], 0>

5353:
old  <>
new  <	jle bsearch$36>

5354:
old  < bsearch$36:>
new  <>

5355:
old  <	; IntegralToIntegral Â£temporary2655 valueList>
new  < bsearch$34:>

5356:
old  <	mov rbx, [rbp + 32]>
new  <	; SetReturnValue>

5358:
old  < bsearch$37:>
new  < bsearch$35:>

5359:
old  <	; SignedMultiply Â£temporary2656 middleIndex valueSize>
new  <	; Return 0>

5360:
old  <	mov eax, [rbp + 64]>
new  <	mov rbx, 0>

5361:
old  <	xor edx, edx>
new  <	mov rax, [rbp]>

5362:
old  <	imul dword [rbp + 44]>
new  <	mov rdi, [rbp + 16]>

5363:
old  <>
new  <	mov rbp, [rbp + 8]>

5364:
old  < bsearch$38:>
new  <	jmp rax>

5365:
old  <	; IntegralToIntegral Â£temporary2657 Â£temporary2656>
new  <>

5366:
old  <	mov rcx, 4294967295>
new  < bsearch$36:>

5367:
old  <	and rax, rcx>
new  <	; NotEqual 39 lastCompare 0>

5368:
old  <>
new  <	cmp dword [rbp + 72], 0>

5369:
old  < bsearch$39:>
new  <	jne bsearch$39>

5370:
old  <	; BinaryAdd middleValuePtr Â£temporary2655 Â£temporary2657>
new  <>

5371:
old  <	add rbx, rax>
new  < bsearch$37:>

5372:
old  <	mov [rbp + 68], rbx>
new  <	; SetReturnValue>

5374:
old  < bsearch$40:>
new  < bsearch$38:>

5375:
old  <	; PreCall 76 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Return lastValuePtr>

5376:
old  <>
new  <	mov rbx, [rbp + 64]>

5377:
old  < bsearch$41:>
new  <	mov rax, [rbp]>

5378:
old  <	; Parameter 100 pointer keyPtr>
new  <	mov rdi, [rbp + 16]>

5379:
old  <	mov rax, [rbp + 24]>
new  <	mov rbp, [rbp + 8]>

5380:
old  <	mov [rbp + 100], rax>
new  <	jmp rax>

5382:
old  < bsearch$42:>
new  < bsearch$39:>

5383:
old  <	; Parameter 108 pointer middleValuePtr>
new  <	; BinaryAdd Â£temporary2640 firstIndex lastIndex>

5384:
old  <	mov rax, [rbp + 68]>
new  <	mov eax, [rbp + 56]>

5385:
old  <	mov [rbp + 108], rax>
new  <	add eax, [rbp + 60]>

5387:
old  < bsearch$43:>
new  < bsearch$40:>

5388:
old  <	; Call 76 compare 0>
new  <	; SignedDivide middleIndex Â£temporary2640 2>

5389:
old  <	mov qword [rbp + 76], bsearch$44>
new  <	xor edx, edx>

5390:
old  <	mov [rbp + 84], rbp>
new  <	idiv dword [int4$2#]>

5391:
old  <	mov rax, [rbp + 48]>
new  <	mov [rbp + 64], eax>

5392:
old  <	add rbp, 76>
new  <>

5393:
old  <	jmp rax>
new  < bsearch$41:>

5394:
old  <>
new  <	; IntegralToIntegral Â£temporary2642 valueList>

5395:
old  < bsearch$44:>
new  <	mov rbx, [rbp + 32]>

5396:
old  <	; PostCall 76>
new  <>

5397:
old  <>
new  < bsearch$42:>

5398:
old  < bsearch$45:>
new  <	; SignedMultiply Â£temporary2643 middleIndex valueSize>

5399:
old  <	; GetReturnValue Â£temporary2660>
new  <	mov eax, [rbp + 64]>

5400:
old  <>
new  <	xor edx, edx>

5401:
old  < bsearch$46:>
new  <	imul dword [rbp + 44]>

5402:
old  <	; Assign middleCompare Â£temporary2660>
new  <>

5403:
old  <	mov [rbp + 76], ebx>
new  < bsearch$43:>

5404:
old  <>
new  <	; IntegralToIntegral Â£temporary2644 Â£temporary2643>

5405:
old  < bsearch$47:>
new  <	mov rcx, 4294967295>

5406:
old  <	; SignedGreaterThanEqual 50 middleCompare 0>
new  <	and rax, rcx>

5407:
old  <	cmp dword [rbp + 76], 0>
new  <>

5408:
old  <	jge bsearch$50>
new  < bsearch$44:>

5409:
old  <>
new  <	; BinaryAdd middleValuePtr Â£temporary2642 Â£temporary2644>

5410:
old  < bsearch$48:>
new  <	add rbx, rax>

5411:
old  <	; Assign lastIndex middleIndex>
new  <	mov [rbp + 68], rbx>

5412:
old  <	mov eax, [rbp + 64]>
new  <>

5413:
old  <	mov [rbp + 60], eax>
new  < bsearch$45:>

5414:
old  <>
new  <	; PreCall 76 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

5415:
old  < bsearch$49:>
new  <>

5416:
old  <	; Goto 4>
new  < bsearch$46:>

5417:
old  <	jmp bsearch$4>
new  <	; Parameter 100 pointer keyPtr>

5418:
old  <>
new  <	mov rax, [rbp + 24]>

5419:
old  < bsearch$50:>
new  <	mov [rbp + 100], rax>

5420:
old  <	; SignedLessThanEqual 53 middleCompare 0>
new  <>

5421:
old  <	cmp dword [rbp + 76], 0>
new  < bsearch$47:>

5422:
old  <	jle bsearch$53>
new  <	; Parameter 108 pointer middleValuePtr>

5423:
old  <>
new  <	mov rax, [rbp + 68]>

5424:
old  < bsearch$51:>
new  <	mov [rbp + 108], rax>

5425:
old  <	; Assign firstIndex middleIndex>
new  <>

5426:
old  <	mov eax, [rbp + 64]>
new  < bsearch$48:>

5427:
old  <	mov [rbp + 56], eax>
new  <	; Call 76 compare 0>

5428:
old  <>
new  <	mov qword [rbp + 76], bsearch$49>

5429:
old  < bsearch$52:>
new  <	mov [rbp + 84], rbp>

5430:
old  <	; Goto 4>
new  <	mov rax, [rbp + 48]>

5431:
old  <	jmp bsearch$4>
new  <	add rbp, 76>

5432:
old  <>
new  <	jmp rax>

5433:
old  < bsearch$53:>
new  <>

5434:
old  <	; Return middleValuePtr>
new  < bsearch$49:>

5435:
old  <	mov rbx, [rbp + 68]>
new  <	; PostCall 76>

5436:
old  <	mov rax, [rbp]>
new  <>

5437:
old  <	mov rdi, [rbp + 16]>
new  < bsearch$50:>

5438:
old  <	mov rbp, [rbp + 8]>
new  <	; GetReturnValue Â£temporary2647>

5439:
old  <	jmp rax>
new  <>

5440:
old  <>
new  < bsearch$51:>

5441:
old  < bsearch$54:>
new  <	; Assign middleCompare Â£temporary2647>

5442:
old  <	; FunctionEnd bsearch>
new  <	mov [rbp + 76], ebx>

5444:
old  <section .data>
new  < bsearch$52:>

5445:
old  <>
new  <	; SignedGreaterThanEqual 55 middleCompare 0>

5446:
old  <@4374$g_randValue:>
new  <	cmp dword [rbp + 76], 0>

5447:
old  <	; InitializerZero 8>
new  <	jge bsearch$55>

5448:
old  <	times 8 db 0>
new  <>

5449:
old  <>
new  < bsearch$53:>

5450:
old  <section .data>
new  <	; Assign lastIndex middleIndex>

5451:
old  <>
new  <	mov eax, [rbp + 64]>

5452:
old  <int8$1664525#:>
new  <	mov [rbp + 60], eax>

5453:
old  <	; Initializer Signed_Long_Int 1664525>
new  <>

5454:
old  <	dq 1664525>
new  < bsearch$54:>

5455:
old  <>
new  <	; Goto 5>

5456:
old  <section .data>
new  <	jmp bsearch$5>

5458:
old  <int8$127#:>
new  < bsearch$55:>

5459:
old  <	; Initializer Signed_Long_Int 127>
new  <	; SignedLessThanEqual 58 middleCompare 0>

5460:
old  <	dq 127>
new  <	cmp dword [rbp + 76], 0>

5461:
old  <>
new  <	jle bsearch$58>

5462:
old  <section .text>
new  <>

5463:
old  <>
new  < bsearch$56:>

5464:
old  < rand:>
new  <	; Assign firstIndex middleIndex>

5465:
old  <	; SignedMultiply Â£temporary2664 g_randValue 1664525>
new  <	mov eax, [rbp + 64]>

5466:
old  <	mov rax, [@4374$g_randValue]>
new  <	mov [rbp + 56], eax>

5467:
old  <	xor rdx, rdx>
new  <>

5468:
old  <	imul qword [int8$1664525#]>
new  < bsearch$57:>

5469:
old  <>
new  <	; Goto 5>

5470:
old  < rand$1:>
new  <	jmp bsearch$5>

5471:
old  <	; BinaryAdd Â£temporary2665 Â£temporary2664 1013904223>
new  <>

5472:
old  <	add rax, 1013904223>
new  < bsearch$58:>

5473:
old  <>
new  <	; SetReturnValue>

5474:
old  < rand$2:>
new  <>

5475:
old  <	; SignedModulo g_randValue Â£temporary2665 127>
new  < bsearch$59:>

5476:
old  <	xor rdx, rdx>
new  <	; Return middleValuePtr>

5477:
old  <	idiv qword [int8$127#]>
new  <	mov rbx, [rbp + 68]>

5478:
old  <	mov [@4374$g_randValue], rdx>
new  <	mov rax, [rbp]>

5479:
old  <>
new  <	mov rdi, [rbp + 16]>

5480:
old  < rand$3:>
new  <	mov rbp, [rbp + 8]>

5481:
old  <	; IntegralToIntegral Â£temporary2667 g_randValue>
new  <	jmp rax>

5482:
old  <	mov rbx, [@4374$g_randValue]>
new  <>

5483:
old  <	cmp rbx, 0>
new  < bsearch$60:>

5484:
old  <	jge rand$4>
new  <	; FunctionEnd bsearch>

5485:
old  <	neg rbx>
new  <>

5486:
old  <	neg ebx>
new  <section .data>

5488:
old  < rand$4:>
new  <@4370$g_randValue:>

5489:
old  <	; Return Â£temporary2667>
new  <	; InitializerZero 8>

5490:
old  <	mov rax, [rbp]>
new  <	times 8 db 0>

5491:
old  <	mov rdi, [rbp + 16]>
new  <>

5492:
old  <	mov rbp, [rbp + 8]>
new  <section .data>

5493:
old  <	jmp rax>
new  <>

5494:
old  <>
new  <int8$1664525#:>

5495:
old  < rand$5:>
new  <	; Initializer Signed_Long_Int 1664525>

5496:
old  <	; FunctionEnd rand>
new  <	dq 1664525>

5498:
old  <section .text>
new  <section .data>

5500:
old  < srand:>
new  <int8$127#:>

5501:
old  <	; IntegralToIntegral Â£temporary2668 seed>
new  <	; Initializer Signed_Long_Int 127>

5502:
old  <	mov eax, [rbp + 24]>
new  <	dq 127>

5503:
old  <	mov rbx, 4294967295>
new  <>

5504:
old  <	and rax, rbx>
new  <section .text>

5506:
old  < srand$1:>
new  < rand:>

5507:
old  <	; Assign g_randValue Â£temporary2668>
new  <	; SignedMultiply Â£temporary2651 g_randValue 1664525>

5508:
old  <	mov [@4374$g_randValue], rax>
new  <	mov rax, [@4370$g_randValue]>

5509:
old  <>
new  <	xor rdx, rdx>

5510:
old  < srand$2:>
new  <	imul qword [int8$1664525#]>

5511:
old  <	; Return>
new  <>

5512:
old  <	mov rax, [rbp]>
new  < rand$1:>

5513:
old  <	mov rdi, [rbp + 16]>
new  <	; BinaryAdd Â£temporary2652 Â£temporary2651 1013904223>

5514:
old  <	mov rbp, [rbp + 8]>
new  <	add rax, 1013904223>

5515:
old  <	jmp rax>
new  <>

5516:
old  <>
new  < rand$2:>

5517:
old  < srand$3:>
new  <	; SignedModulo g_randValue Â£temporary2652 127>

5518:
old  <	; FunctionEnd srand>
new  <	xor rdx, rdx>

5519:
old  <>
new  <	idiv qword [int8$127#]>

5520:
old  <section .data>
new  <	mov [@4370$g_randValue], rdx>

5522:
old  <g_funcArray:>
new  < rand$3:>

5523:
old  <	; Initializer Pointer 0>
new  <	; IntegralToIntegral Â£temporary2654 g_randValue>

5524:
old  <	dq 0>
new  <	mov rbx, [@4370$g_randValue]>

5525:
old  <	; InitializerZero 2040>
new  <	cmp rbx, 0>

5526:
old  <	times 2040 db 0>
new  <	jge rand$4>

5527:
old  <>
new  <	neg rbx>

5528:
old  <section .data>
new  <	neg ebx>

5530:
old  <Array_8#:>
new  < rand$4:>

5531:
old  <	; Initializer Array 8>
new  <	; SetReturnValue>

5532:
old  <	dq 8>
new  <>

5533:
old  <>
new  < rand$5:>

5534:
old  <section .text>
new  <	; Return Â£temporary2654>

5535:
old  <>
new  <	mov rax, [rbp]>

5536:
old  < atexit:>
new  <	mov rdi, [rbp + 16]>

5537:
old  <	; Assign index 0>
new  <	mov rbp, [rbp + 8]>

5538:
old  <	mov dword [rbp + 32], 0>
new  <	jmp rax>

5540:
old  < atexit$1:>
new  < rand$6:>

5541:
old  <	; SignedGreaterThanEqual 15 index 256>
new  <	; FunctionEnd rand>

5542:
old  <	cmp dword [rbp + 32], 256>
new  <>

5543:
old  <	jge atexit$15>
new  <section .text>

5545:
old  < atexit$2:>
new  < srand:>

5546:
old  <	; IntegralToIntegral Â£temporary2672 index>
new  <	; IntegralToIntegral Â£temporary2655 seed>

5547:
old  <	mov eax, [rbp + 32]>
new  <	mov eax, [rbp + 24]>

5551:
old  < atexit$3:>
new  < srand$1:>

5552:
old  <	; UnsignedMultiply Â£temporary2673 Â£temporary2672 8>
new  <	; Assign g_randValue Â£temporary2655>

5553:
old  <	xor rdx, rdx>
new  <	mov [@4370$g_randValue], rax>

5554:
old  <	mul qword [Array_8#]>
new  <>

5555:
old  <>
new  < srand$2:>

5556:
old  < atexit$4:>
new  <	; Return>

5557:
old  <	; BinaryAdd Â£temporary2674 g_funcArray Â£temporary2673>
new  <	mov rax, [rbp]>

5558:
old  <	mov rsi, g_funcArray>
new  <	mov rdi, [rbp + 16]>

5559:
old  <	add rsi, rax>
new  <	mov rbp, [rbp + 8]>

5560:
old  <>
new  <	jmp rax>

5561:
old  < atexit$5:>
new  <>

5562:
old  <	; Dereference Â£temporary2671 -> Â£temporary2674 Â£temporary2674 0>
new  < srand$3:>

5563:
old  <>
new  <	; FunctionEnd srand>

5564:
old  < atexit$6:>
new  <>

5565:
old  <	; NotEqual 13 Â£temporary2671 -> Â£temporary2674 0>
new  <section .data>

5566:
old  <	cmp qword [rsi], 0>
new  <>

5567:
old  <	jne atexit$13>
new  <g_funcArray:>

5568:
old  <>
new  <	; Initializer Pointer 0>

5569:
old  < atexit$7:>
new  <	dq 0>

5570:
old  <	; IntegralToIntegral Â£temporary2677 index>
new  <	; InitializerZero 2040>

5571:
old  <	mov eax, [rbp + 32]>
new  <	times 2040 db 0>

5572:
old  <	mov rbx, 4294967295>
new  <>

5573:
old  <	and rax, rbx>
new  <section .data>

5575:
old  < atexit$8:>
new  <Array_8#:>

5576:
old  <	; UnsignedMultiply Â£temporary2678 Â£temporary2677 8>
new  <	; Initializer Array 8>

5577:
old  <	xor rdx, rdx>
new  <	dq 8>

5578:
old  <	mul qword [Array_8#]>
new  <>

5579:
old  <>
new  <section .text>

5580:
old  < atexit$9:>
new  <>

5581:
old  <	; BinaryAdd Â£temporary2679 g_funcArray Â£temporary2678>
new  < atexit:>

5582:
old  <	mov rsi, g_funcArray>
new  <	; Assign index 0>

5583:
old  <	add rsi, rax>
new  <	mov dword [rbp + 32], 0>

5585:
old  < atexit$10:>
new  < atexit$1:>

5586:
old  <	; Dereference Â£temporary2676 -> Â£temporary2679 Â£temporary2679 0>
new  <	; SignedGreaterThanEqual 16 index 256>

5587:
old  <>
new  <	cmp dword [rbp + 32], 256>

5588:
old  < atexit$11:>
new  <	jge atexit$16>

5589:
old  <	; Assign Â£temporary2676 -> Â£temporary2679 fcn>
new  <>

5590:
old  <	mov rax, [rbp + 24]>
new  < atexit$2:>

5591:
old  <	mov [rsi], rax>
new  <	; IntegralToIntegral Â£temporary2659 index>

5592:
old  <>
new  <	mov eax, [rbp + 32]>

5593:
old  < atexit$12:>
new  <	mov rbx, 4294967295>

5594:
old  <	; Return 0>
new  <	and rax, rbx>

5595:
old  <	mov ebx, 0>
new  <>

5596:
old  <	mov rax, [rbp]>
new  < atexit$3:>

5597:
old  <	mov rdi, [rbp + 16]>
new  <	; UnsignedMultiply Â£temporary2660 Â£temporary2659 8>

5598:
old  <	mov rbp, [rbp + 8]>
new  <	xor rdx, rdx>

5599:
old  <	jmp rax>
new  <	mul qword [Array_8#]>

5601:
old  < atexit$13:>
new  < atexit$4:>

5602:
old  <	; BinaryAdd index index 1>
new  <	; BinaryAdd Â£temporary2661 g_funcArray Â£temporary2660>

5603:
old  <	inc dword [rbp + 32]>
new  <	mov rsi, g_funcArray>

5604:
old  <>
new  <	add rsi, rax>

5605:
old  < atexit$14:>
new  <>

5606:
old  <	; Goto 1>
new  < atexit$5:>

5607:
old  <	jmp atexit$1>
new  <	; Dereference Â£temporary2658 -> Â£temporary2661 Â£temporary2661 0>

5609:
old  < atexit$15:>
new  < atexit$6:>

5610:
old  <	; Return -1>
new  <	; NotEqual 14 Â£temporary2658 -> Â£temporary2661 0>

5611:
old  <	mov ebx, -1>
new  <	cmp qword [rsi], 0>

5612:
old  <	mov rax, [rbp]>
new  <	jne atexit$14>

5613:
old  <	mov rdi, [rbp + 16]>
new  <>

5614:
old  <	mov rbp, [rbp + 8]>
new  < atexit$7:>

5615:
old  <	jmp rax>
new  <	; IntegralToIntegral Â£temporary2664 index>

5616:
old  <>
new  <	mov eax, [rbp + 32]>

5617:
old  < atexit$16:>
new  <	mov rbx, 4294967295>

5618:
old  <	; FunctionEnd atexit>
new  <	and rax, rbx>

5620:
old  <section .text>
new  < atexit$8:>

5621:
old  <>
new  <	; UnsignedMultiply Â£temporary2665 Â£temporary2664 8>

5622:
old  < exit:>
new  <	xor rdx, rdx>

5623:
old  <	; Assign index 255>
new  <	mul qword [Array_8#]>

5624:
old  <	mov dword [rbp + 28], 255>
new  <>

5625:
old  <>
new  < atexit$9:>

5626:
old  < exit$1:>
new  <	; BinaryAdd Â£temporary2666 g_funcArray Â£temporary2665>

5627:
old  <	; SignedLessThan 16 index 0>
new  <	mov rsi, g_funcArray>

5628:
old  <	cmp dword [rbp + 28], 0>
new  <	add rsi, rax>

5629:
old  <	jl exit$16>
new  <>

5630:
old  <>
new  < atexit$10:>

5631:
old  < exit$2:>
new  <	; Dereference Â£temporary2663 -> Â£temporary2666 Â£temporary2666 0>

5632:
old  <	; IntegralToIntegral Â£temporary2683 index>
new  <>

5633:
old  <	mov eax, [rbp + 28]>
new  < atexit$11:>

5634:
old  <	mov rbx, 4294967295>
new  <	; Assign Â£temporary2663 -> Â£temporary2666 fcn>

5635:
old  <	and rax, rbx>
new  <	mov rax, [rbp + 24]>

5636:
old  <>
new  <	mov [rsi], rax>

5637:
old  < exit$3:>
new  <>

5638:
old  <	; UnsignedMultiply Â£temporary2684 Â£temporary2683 8>
new  < atexit$12:>

5639:
old  <	xor rdx, rdx>
new  <	; SetReturnValue>

5640:
old  <	mul qword [Array_8#]>
new  <>

5641:
old  <>
new  < atexit$13:>

5642:
old  < exit$4:>
new  <	; Return 0>

5643:
old  <	; BinaryAdd Â£temporary2685 g_funcArray Â£temporary2684>
new  <	mov ebx, 0>

5644:
old  <	mov rsi, g_funcArray>
new  <	mov rax, [rbp]>

5645:
old  <	add rsi, rax>
new  <	mov rdi, [rbp + 16]>

5646:
old  <>
new  <	mov rbp, [rbp + 8]>

5647:
old  < exit$5:>
new  <	jmp rax>

5648:
old  <	; Dereference Â£temporary2682 -> Â£temporary2685 Â£temporary2685 0>
new  <>

5649:
old  <>
new  < atexit$14:>

5650:
old  < exit$6:>
new  <	; BinaryAdd index index 1>

5651:
old  <	; Equal 14 Â£temporary2682 -> Â£temporary2685 0>
new  <	inc dword [rbp + 32]>

5652:
old  <	cmp qword [rsi], 0>
new  <>

5653:
old  <	je exit$14>
new  < atexit$15:>

5654:
old  <>
new  <	; Goto 1>

5655:
old  < exit$7:>
new  <	jmp atexit$1>

5656:
old  <	; IntegralToIntegral Â£temporary2688 index>
new  <>

5657:
old  <	mov eax, [rbp + 28]>
new  < atexit$16:>

5658:
old  <	mov rbx, 4294967295>
new  <	; SetReturnValue>

5659:
old  <	and rax, rbx>
new  <>

5660:
old  <>
new  < atexit$17:>

5661:
old  < exit$8:>
new  <	; Return -1>

5662:
old  <	; UnsignedMultiply Â£temporary2689 Â£temporary2688 8>
new  <	mov ebx, -1>

5663:
old  <	xor rdx, rdx>
new  <	mov rax, [rbp]>

5664:
old  <	mul qword [Array_8#]>
new  <	mov rdi, [rbp + 16]>

5665:
old  <>
new  <	mov rbp, [rbp + 8]>

5666:
old  < exit$9:>
new  <	jmp rax>

5667:
old  <	; BinaryAdd Â£temporary2690 g_funcArray Â£temporary2689>
new  <>

5668:
old  <	mov rbx, g_funcArray>
new  < atexit$18:>

5669:
old  <	add rbx, rax>
new  <	; FunctionEnd atexit>

5671:
old  < exit$10:>
new  <section .text>

5672:
old  <	; Dereference Â£temporary2687 -> Â£temporary2690 Â£temporary2690 0>
new  <>

5673:
old  <>
new  < exit:>

5674:
old  < exit$11:>
new  <	; Assign index 255>

5675:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov dword [rbp + 28], 255>

5676:
old  <	mov [rbp + 32], rbx>
new  <>

5677:
old  <>
new  < exit$1:>

5678:
old  < exit$12:>
new  <	; SignedLessThan 16 index 0>

5679:
old  <	; Call 32 Â£temporary2687 -> Â£temporary2690 0>
new  <	cmp dword [rbp + 28], 0>

5680:
old  <	mov qword [rbp + 2080], exit$13>
new  <	jl exit$16>

5681:
old  <	mov [rbp + 2088], rbp>
new  <>

5682:
old  <	mov rsi, rbp>
new  < exit$2:>

5683:
old  <	mov rax, [rsi]>
new  <	; IntegralToIntegral Â£temporary2670 index>

5684:
old  <	add rbp, 2080>
new  <	mov eax, [rbp + 28]>

5685:
old  <	jmp rax>
new  <	mov rbx, 4294967295>

5686:
old  <>
new  <	and rax, rbx>

5687:
old  < exit$13:>
new  <>

5688:
old  <	; PostCall 32>
new  < exit$3:>

5689:
old  <>
new  <	; UnsignedMultiply Â£temporary2671 Â£temporary2670 8>

5690:
old  < exit$14:>
new  <	xor rdx, rdx>

5691:
old  <	; BinarySubtract index index 1>
new  <	mul qword [Array_8#]>

5692:
old  <	dec dword [rbp + 28]>
new  <>

5693:
old  <>
new  < exit$4:>

5694:
old  < exit$15:>
new  <	; BinaryAdd Â£temporary2672 g_funcArray Â£temporary2671>

5695:
old  <	; Goto 1>
new  <	mov rsi, g_funcArray>

5696:
old  <	jmp exit$1>
new  <	add rsi, rax>

5698:
old  < exit$16:>
new  < exit$5:>

5699:
old  <	; AssignRegister rax 60>
new  <	; Dereference Â£temporary2669 -> Â£temporary2672 Â£temporary2672 0>

5700:
old  <	mov rax, 60>
new  <>

5701:
old  <>
new  < exit$6:>

5702:
old  < exit$17:>
new  <	; Equal 14 Â£temporary2669 -> Â£temporary2672 0>

5703:
old  <	; IntegralToIntegral Â£temporary2694 status>
new  <	cmp qword [rsi], 0>

5704:
old  <	mov edi, [rbp + 24]>
new  <	je exit$14>

5705:
old  <	mov rbx, 4294967295>
new  <>

5706:
old  <	and rdi, rbx>
new  < exit$7:>

5707:
old  <>
new  <	; IntegralToIntegral Â£temporary2675 index>

5708:
old  < exit$18:>
new  <	mov eax, [rbp + 28]>

5709:
old  <	; AssignRegister rdi Â£temporary2694>
new  <	mov rbx, 4294967295>

5710:
old  <>
new  <	and rax, rbx>

5711:
old  < exit$19:>
new  <>

5712:
old  <	; SysCall>
new  < exit$8:>

5713:
old  <	syscall>
new  <	; UnsignedMultiply Â£temporary2676 Â£temporary2675 8>

5714:
old  <>
new  <	xor rdx, rdx>

5715:
old  < exit$20:>
new  <	mul qword [Array_8#]>

5716:
old  <	; Return>
new  <>

5717:
old  <	mov rax, [rbp]>
new  < exit$9:>

5718:
old  <	mov rdi, [rbp + 16]>
new  <	; BinaryAdd Â£temporary2677 g_funcArray Â£temporary2676>

5719:
old  <	mov rbp, [rbp + 8]>
new  <	mov rbx, g_funcArray>

5720:
old  <	jmp rax>
new  <	add rbx, rax>

5722:
old  < exit$21:>
new  < exit$10:>

5723:
old  <	; FunctionEnd exit>
new  <	; Dereference Â£temporary2674 -> Â£temporary2677 Â£temporary2677 0>

5725:
old  <section .text>
new  < exit$11:>

5726:
old  <>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

5727:
old  < @4384$memswap:>
new  <	mov [rbp + 32], rbx>

5728:
old  <	; Assign index 0>
new  <>

5729:
old  <	mov dword [rbp + 44], 0>
new  < exit$12:>

5730:
old  <>
new  <	; Call 32 Â£temporary2674 -> Â£temporary2677 0>

5731:
old  < @4384$memswap$1:>
new  <	mov qword [rbp + 2080], exit$13>

5732:
old  <	; SignedGreaterThanEqual 19 index valueSize>
new  <	mov [rbp + 2088], rbp>

5733:
old  <	mov eax, [rbp + 40]>
new  <	mov rsi, rbp>

5734:
old  <	cmp [rbp + 44], eax>
new  <	mov rax, [rsi]>

5735:
old  <	jge @4384$memswap$19>
new  <	add rbp, 2080>

5736:
old  <>
new  <	jmp rax>

5737:
old  < @4384$memswap$2:>
new  <>

5738:
old  <	; IntegralToIntegral Â£temporary2698 index>
new  < exit$13:>

5739:
old  <	mov eax, [rbp + 44]>
new  <	; PostCall 32>

5740:
old  <	mov rbx, 4294967295>
new  <>

5741:
old  <	and rax, rbx>
new  < exit$14:>

5742:
old  <>
new  <	; BinarySubtract index index 1>

5743:
old  < @4384$memswap$3:>
new  <	dec dword [rbp + 28]>

5744:
old  <	; BinaryAdd Â£temporary2700 value1 Â£temporary2698>
new  <>

5745:
old  <	mov rsi, [rbp + 24]>
new  < exit$15:>

5746:
old  <	add rsi, rax>
new  <	; Goto 1>

5747:
old  <>
new  <	jmp exit$1>

5748:
old  < @4384$memswap$4:>
new  <>

5749:
old  <	; Dereference Â£temporary2697 -> Â£temporary2700 Â£temporary2700 0>
new  < exit$16:>

5750:
old  <>
new  <	; AssignRegister rax 60>

5751:
old  < @4384$memswap$5:>
new  <	mov rax, 60>

5752:
old  <	; Assign tempValue Â£temporary2697 -> Â£temporary2700>
new  <>

5753:
old  <	mov al, [rsi]>
new  < exit$17:>

5754:
old  <	mov [rbp + 48], al>
new  <	; IntegralToIntegral Â£temporary2681 status>

5755:
old  <>
new  <	mov edi, [rbp + 24]>

5756:
old  < @4384$memswap$6:>
new  <	mov rbx, 4294967295>

5757:
old  <	; IntegralToIntegral Â£temporary2702 index>
new  <	and rdi, rbx>

5758:
old  <	mov eax, [rbp + 44]>
new  <>

5759:
old  <	mov rbx, 4294967295>
new  < exit$18:>

5760:
old  <	and rax, rbx>
new  <	; AssignRegister rdi Â£temporary2681>

5762:
old  < @4384$memswap$7:>
new  < exit$19:>

5763:
old  <	; BinaryAdd Â£temporary2704 value1 Â£temporary2702>
new  <	; SysCall>

5764:
old  <	mov rsi, [rbp + 24]>
new  <	syscall>

5765:
old  <	add rsi, rax>
new  <>

5766:
old  <>
new  < exit$20:>

5767:
old  < @4384$memswap$8:>
new  <	; Return>

5768:
old  <	; Dereference Â£temporary2701 -> Â£temporary2704 Â£temporary2704 0>
new  <	mov rax, [rbp]>

5769:
old  <>
new  <	mov rdi, [rbp + 16]>

5770:
old  < @4384$memswap$9:>
new  <	mov rbp, [rbp + 8]>

5771:
old  <	; IntegralToIntegral Â£temporary2706 index>
new  <	jmp rax>

5772:
old  <	mov eax, [rbp + 44]>
new  <>

5773:
old  <	mov rbx, 4294967295>
new  < exit$21:>

5774:
old  <	and rax, rbx>
new  <	; FunctionEnd exit>

5776:
old  < @4384$memswap$10:>
new  <section .text>

5777:
old  <	; BinaryAdd Â£temporary2708 value2 Â£temporary2706>
new  <>

5778:
old  <	mov rdi, [rbp + 32]>
new  < @4380$memswap:>

5779:
old  <	add rdi, rax>
new  <	; Assign index 0>

5780:
old  <>
new  <	mov dword [rbp + 44], 0>

5781:
old  < @4384$memswap$11:>
new  <>

5782:
old  <	; Dereference Â£temporary2705 -> Â£temporary2708 Â£temporary2708 0>
new  < @4380$memswap$1:>

5783:
old  <>
new  <	; SignedGreaterThanEqual 19 index valueSize>

5784:
old  < @4384$memswap$12:>
new  <	mov eax, [rbp + 40]>

5785:
old  <	; Assign Â£temporary2701 -> Â£temporary2704 Â£temporary2705 -> Â£temporary2708>
new  <	cmp [rbp + 44], eax>

5786:
old  <	mov al, [rdi]>
new  <	jge @4380$memswap$19>

5787:
old  <	mov [rsi], al>
new  <>

5788:
old  <>
new  < @4380$memswap$2:>

5789:
old  < @4384$memswap$13:>
new  <	; IntegralToIntegral Â£temporary2685 index>

5790:
old  <	; IntegralToIntegral Â£temporary2710 index>
new  <	mov eax, [rbp + 44]>

5791:
old  <	mov eax, [rbp + 44]>
new  <	mov rbx, 4294967295>

5792:
old  <	mov rbx, 4294967295>
new  <	and rax, rbx>

5793:
old  <	and rax, rbx>
new  <>

5794:
old  <>
new  < @4380$memswap$3:>

5795:
old  < @4384$memswap$14:>
new  <	; BinaryAdd Â£temporary2687 value1 Â£temporary2685>

5796:
old  <	; BinaryAdd Â£temporary2712 value2 Â£temporary2710>
new  <	mov rsi, [rbp + 24]>

5797:
old  <	mov rsi, [rbp + 32]>
new  <	add rsi, rax>

5798:
old  <	add rsi, rax>
new  <>

5799:
old  <>
new  < @4380$memswap$4:>

5800:
old  < @4384$memswap$15:>
new  <	; Dereference Â£temporary2684 -> Â£temporary2687 Â£temporary2687 0>

5801:
old  <	; Dereference Â£temporary2709 -> Â£temporary2712 Â£temporary2712 0>
new  <>

5802:
old  <>
new  < @4380$memswap$5:>

5803:
old  < @4384$memswap$16:>
new  <	; Assign tempValue Â£temporary2684 -> Â£temporary2687>

5804:
old  <	; Assign Â£temporary2709 -> Â£temporary2712 tempValue>
new  <	mov al, [rsi]>

5805:
old  <	mov al, [rbp + 48]>
new  <	mov [rbp + 48], al>

5806:
old  <	mov [rsi], al>
new  <>

5807:
old  <>
new  < @4380$memswap$6:>

5808:
old  < @4384$memswap$17:>
new  <	; IntegralToIntegral Â£temporary2689 index>

5809:
old  <	; BinaryAdd index index 1>
new  <	mov eax, [rbp + 44]>

5810:
old  <	inc dword [rbp + 44]>
new  <	mov rbx, 4294967295>

5811:
old  <>
new  <	and rax, rbx>

5812:
old  < @4384$memswap$18:>
new  <>

5813:
old  <	; Goto 1>
new  < @4380$memswap$7:>

5814:
old  <	jmp @4384$memswap$1>
new  <	; BinaryAdd Â£temporary2691 value1 Â£temporary2689>

5815:
old  <>
new  <	mov rsi, [rbp + 24]>

5816:
old  < @4384$memswap$19:>
new  <	add rsi, rax>

5817:
old  <	; Return>
new  <>

5818:
old  <	mov rax, [rbp]>
new  < @4380$memswap$8:>

5819:
old  <	mov rdi, [rbp + 16]>
new  <	; Dereference Â£temporary2688 -> Â£temporary2691 Â£temporary2691 0>

5820:
old  <	mov rbp, [rbp + 8]>
new  <>

5821:
old  <	jmp rax>
new  < @4380$memswap$9:>

5822:
old  <>
new  <	; IntegralToIntegral Â£temporary2693 index>

5823:
old  < @4384$memswap$20:>
new  <	mov eax, [rbp + 44]>

5824:
old  <	; FunctionEnd memswap>
new  <	mov rbx, 4294967295>

5825:
old  <>
new  <	and rax, rbx>

5826:
old  <section .text>
new  <>

5827:
old  <>
new  < @4380$memswap$10:>

5828:
old  < qsort:>
new  <	; BinaryAdd Â£temporary2695 value2 Â£temporary2693>

5829:
old  <	; IntegralToIntegral Â£temporary2713 valueList>
new  <	mov rdi, [rbp + 32]>

5830:
old  <	mov rax, [rbp + 24]>
new  <	add rdi, rax>

5832:
old  < qsort$1:>
new  < @4380$memswap$11:>

5833:
old  <	; Assign charList Â£temporary2713>
new  <	; Dereference Â£temporary2692 -> Â£temporary2695 Â£temporary2695 0>

5834:
old  <	mov [rbp + 48], rax>
new  <>

5835:
old  <>
new  < @4380$memswap$12:>

5836:
old  < qsort$2:>
new  <	; Assign Â£temporary2688 -> Â£temporary2691 Â£temporary2692 -> Â£temporary2695>

5837:
old  <	; BinarySubtract size listSize 1>
new  <	mov al, [rdi]>

5838:
old  <	mov eax, [rbp + 32]>
new  <	mov [rsi], al>

5839:
old  <	dec eax>
new  <>

5840:
old  <	mov [rbp + 56], eax>
new  < @4380$memswap$13:>

5841:
old  <>
new  <	; IntegralToIntegral Â£temporary2697 index>

5842:
old  < qsort$3:>
new  <	mov eax, [rbp + 44]>

5843:
old  <	; SignedLessThanEqual 33 size 0>
new  <	mov rbx, 4294967295>

5844:
old  <	cmp dword [rbp + 56], 0>
new  <	and rax, rbx>

5845:
old  <	jle qsort$33>
new  <>

5846:
old  <>
new  < @4380$memswap$14:>

5847:
old  < qsort$4:>
new  <	; BinaryAdd Â£temporary2699 value2 Â£temporary2697>

5848:
old  <	; Assign update 0>
new  <	mov rsi, [rbp + 32]>

5849:
old  <	mov dword [rbp + 64], 0>
new  <	add rsi, rax>

5851:
old  < qsort$5:>
new  < @4380$memswap$15:>

5852:
old  <	; Assign index 0>
new  <	; Dereference Â£temporary2696 -> Â£temporary2699 Â£temporary2699 0>

5853:
old  <	mov dword [rbp + 60], 0>
new  <>

5854:
old  <>
new  < @4380$memswap$16:>

5855:
old  < qsort$6:>
new  <	; Assign Â£temporary2696 -> Â£temporary2699 tempValue>

5856:
old  <	; SignedGreaterThanEqual 30 index size>
new  <	mov al, [rbp + 48]>

5857:
old  <	mov eax, [rbp + 56]>
new  <	mov [rsi], al>

5858:
old  <	cmp [rbp + 60], eax>
new  <>

5859:
old  <	jge qsort$30>
new  < @4380$memswap$17:>

5860:
old  <>
new  <	; BinaryAdd index index 1>

5861:
old  < qsort$7:>
new  <	inc dword [rbp + 44]>

5862:
old  <	; SignedMultiply Â£temporary2719 index valueSize>
new  <>

5863:
old  <	mov eax, [rbp + 60]>
new  < @4380$memswap$18:>

5864:
old  <	xor edx, edx>
new  <	; Goto 1>

5865:
old  <	imul dword [rbp + 36]>
new  <	jmp @4380$memswap$1>

5867:
old  < qsort$8:>
new  < @4380$memswap$19:>

5868:
old  <	; IntegralToIntegral Â£temporary2720 Â£temporary2719>
new  <	; Return>

5869:
old  <	mov rbx, 4294967295>
new  <	mov rax, [rbp]>

5870:
old  <	and rax, rbx>
new  <	mov rdi, [rbp + 16]>

5871:
old  <>
new  <	mov rbp, [rbp + 8]>

5872:
old  < qsort$9:>
new  <	jmp rax>

5873:
old  <	; BinaryAdd valuePtr1 charList Â£temporary2720>
new  <>

5874:
old  <	mov rbx, [rbp + 48]>
new  < @4380$memswap$20:>

5875:
old  <	add rbx, rax>
new  <	; FunctionEnd memswap>

5876:
old  <	mov [rbp + 68], rbx>
new  <>

5877:
old  <>
new  <section .text>

5878:
old  < qsort$10:>
new  <>

5879:
old  <	; BinaryAdd Â£temporary2723 index 1>
new  < qsort:>

5880:
old  <	mov eax, [rbp + 60]>
new  <	; IntegralToIntegral Â£temporary2700 valueList>

5881:
old  <	inc eax>
new  <	mov rax, [rbp + 24]>

5883:
old  < qsort$11:>
new  < qsort$1:>

5884:
old  <	; SignedMultiply Â£temporary2724 Â£temporary2723 valueSize>
new  <	; Assign charList Â£temporary2700>

5885:
old  <	xor edx, edx>
new  <	mov [rbp + 48], rax>

5886:
old  <	imul dword [rbp + 36]>
new  <>

5887:
old  <>
new  < qsort$2:>

5888:
old  < qsort$12:>
new  <	; BinarySubtract size listSize 1>

5889:
old  <	; IntegralToIntegral Â£temporary2725 Â£temporary2724>
new  <	mov eax, [rbp + 32]>

5890:
old  <	mov rbx, 4294967295>
new  <	dec eax>

5891:
old  <	and rax, rbx>
new  <	mov [rbp + 56], eax>

5893:
old  < qsort$13:>
new  < qsort$3:>

5894:
old  <	; BinaryAdd valuePtr2 charList Â£temporary2725>
new  <	; SignedLessThanEqual 33 size 0>

5895:
old  <	mov rbx, [rbp + 48]>
new  <	cmp dword [rbp + 56], 0>

5896:
old  <	add rbx, rax>
new  <	jle qsort$33>

5897:
old  <	mov [rbp + 76], rbx>
new  <>

5898:
old  <>
new  < qsort$4:>

5899:
old  < qsort$14:>
new  <	; Assign update 0>

5900:
old  <	; PreCall 84 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov dword [rbp + 64], 0>

5902:
old  < qsort$15:>
new  < qsort$5:>

5903:
old  <	; Parameter 108 pointer valuePtr1>
new  <	; Assign index 0>

5904:
old  <	mov rax, [rbp + 68]>
new  <	mov dword [rbp + 60], 0>

5905:
old  <	mov [rbp + 108], rax>
new  <>

5906:
old  <>
new  < qsort$6:>

5907:
old  < qsort$16:>
new  <	; SignedGreaterThanEqual 30 index size>

5908:
old  <	; Parameter 116 pointer valuePtr2>
new  <	mov eax, [rbp + 56]>

5909:
old  <	mov rax, [rbp + 76]>
new  <	cmp [rbp + 60], eax>

5910:
old  <	mov [rbp + 116], rax>
new  <	jge qsort$30>

5912:
old  < qsort$17:>
new  < qsort$7:>

5913:
old  <	; Call 84 compare 0>
new  <	; SignedMultiply Â£temporary2706 index valueSize>

5914:
old  <	mov qword [rbp + 84], qsort$18>
new  <	mov eax, [rbp + 60]>

5915:
old  <	mov [rbp + 92], rbp>
new  <	xor edx, edx>

5916:
old  <	mov rax, [rbp + 40]>
new  <	imul dword [rbp + 36]>

5917:
old  <	add rbp, 84>
new  <>

5918:
old  <	jmp rax>
new  < qsort$8:>

5919:
old  <>
new  <	; IntegralToIntegral Â£temporary2707 Â£temporary2706>

5920:
old  < qsort$18:>
new  <	mov rbx, 4294967295>

5921:
old  <	; PostCall 84>
new  <	and rax, rbx>

5923:
old  < qsort$19:>
new  < qsort$9:>

5924:
old  <	; GetReturnValue Â£temporary2728>
new  <	; BinaryAdd valuePtr1 charList Â£temporary2707>

5925:
old  <>
new  <	mov rbx, [rbp + 48]>

5926:
old  < qsort$20:>
new  <	add rbx, rax>

5927:
old  <	; SignedLessThanEqual 28 Â£temporary2728 0>
new  <	mov [rbp + 68], rbx>

5928:
old  <	cmp ebx, 0>
new  <>

5929:
old  <	jle qsort$28>
new  < qsort$10:>

5930:
old  <>
new  <	; BinaryAdd Â£temporary2710 index 1>

5931:
old  < qsort$21:>
new  <	mov eax, [rbp + 60]>

5932:
old  <	; PreCall 84 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	inc eax>

5934:
old  < qsort$22:>
new  < qsort$11:>

5935:
old  <	; Parameter 108 pointer valuePtr1>
new  <	; SignedMultiply Â£temporary2711 Â£temporary2710 valueSize>

5936:
old  <	mov rax, [rbp + 68]>
new  <	xor edx, edx>

5937:
old  <	mov [rbp + 108], rax>
new  <	imul dword [rbp + 36]>

5939:
old  < qsort$23:>
new  < qsort$12:>

5940:
old  <	; Parameter 116 pointer valuePtr2>
new  <	; IntegralToIntegral Â£temporary2712 Â£temporary2711>

5941:
old  <	mov rax, [rbp + 76]>
new  <	mov rbx, 4294967295>

5942:
old  <	mov [rbp + 116], rax>
new  <	and rax, rbx>

5944:
old  < qsort$24:>
new  < qsort$13:>

5945:
old  <	; Parameter 124 signedint valueSize>
new  <	; BinaryAdd valuePtr2 charList Â£temporary2712>

5946:
old  <	mov eax, [rbp + 36]>
new  <	mov rbx, [rbp + 48]>

5947:
old  <	mov [rbp + 124], eax>
new  <	add rbx, rax>

5948:
old  <>
new  <	mov [rbp + 76], rbx>

5949:
old  < qsort$25:>
new  <>

5950:
old  <	; Call 84 memswap 0>
new  < qsort$14:>

5951:
old  <	mov qword [rbp + 84], qsort$26>
new  <	; PreCall 84 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

5952:
old  <	mov [rbp + 92], rbp>
new  <>

5953:
old  <	add rbp, 84>
new  < qsort$15:>

5954:
old  <	jmp @4384$memswap>
new  <	; Parameter 108 pointer valuePtr1>

5955:
old  <>
new  <	mov rax, [rbp + 68]>

5956:
old  < qsort$26:>
new  <	mov [rbp + 108], rax>

5957:
old  <	; PostCall 84>
new  <>

5958:
old  <>
new  < qsort$16:>

5959:
old  < qsort$27:>
new  <	; Parameter 116 pointer valuePtr2>

5960:
old  <	; Assign update 1>
new  <	mov rax, [rbp + 76]>

5961:
old  <	mov dword [rbp + 64], 1>
new  <	mov [rbp + 116], rax>

5963:
old  < qsort$28:>
new  < qsort$17:>

5964:
old  <	; BinaryAdd index index 1>
new  <	; Call 84 compare 0>

5965:
old  <	inc dword [rbp + 60]>
new  <	mov qword [rbp + 84], qsort$18>

5966:
old  <>
new  <	mov [rbp + 92], rbp>

5967:
old  < qsort$29:>
new  <	mov rax, [rbp + 40]>

5968:
old  <	; Goto 6>
new  <	add rbp, 84>

5969:
old  <	jmp qsort$6>
new  <	jmp rax>

5971:
old  < qsort$30:>
new  < qsort$18:>

5972:
old  <	; Equal 33 update 0>
new  <	; PostCall 84>

5973:
old  <	cmp dword [rbp + 64], 0>
new  <>

5974:
old  <	je qsort$33>
new  < qsort$19:>

5975:
old  <>
new  <	; GetReturnValue Â£temporary2715>

5976:
old  < qsort$31:>
new  <>

5977:
old  <	; BinarySubtract size size 1>
new  < qsort$20:>

5978:
old  <	dec dword [rbp + 56]>
new  <	; SignedLessThanEqual 28 Â£temporary2715 0>

5979:
old  <>
new  <	cmp ebx, 0>

5980:
old  < qsort$32:>
new  <	jle qsort$28>

5981:
old  <	; Goto 3>
new  <>

5982:
old  <	jmp qsort$3>
new  < qsort$21:>

5983:
old  <>
new  <	; PreCall 84 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

5984:
old  < qsort$33:>
new  <>

5985:
old  <	; Return>
new  < qsort$22:>

5986:
old  <	mov rax, [rbp]>
new  <	; Parameter 108 pointer valuePtr1>

5987:
old  <	mov rdi, [rbp + 16]>
new  <	mov rax, [rbp + 68]>

5988:
old  <	mov rbp, [rbp + 8]>
new  <	mov [rbp + 108], rax>

5989:
old  <	jmp rax>
new  <>

5990:
old  <>
new  < qsort$23:>

5991:
old  < qsort$34:>
new  <	; Parameter 116 pointer valuePtr2>

5992:
old  <	; FunctionEnd qsort>
new  <	mov rax, [rbp + 76]>

5993:
old  <>
new  <	mov [rbp + 116], rax>

5994:
old  <section .text>
new  <>

5995:
old  <>
new  < qsort$24:>

5996:
old  < @abs:>
new  <	; Parameter 124 signedint valueSize>

5997:
old  <	; SignedGreaterThanEqual 3 value 0>
new  <	mov eax, [rbp + 36]>

5998:
old  <	cmp dword [rbp + 24], 0>
new  <	mov [rbp + 124], eax>

5999:
old  <	jge @abs$3>
new  <>

6000:
old  <>
new  < qsort$25:>

6001:
old  < @abs$1:>
new  <	; Call 84 memswap 0>

6002:
old  <	; UnarySubtract Â£temporary2735 value>
new  <	mov qword [rbp + 84], qsort$26>

6003:
old  <	mov ebx, [rbp + 24]>
new  <	mov [rbp + 92], rbp>

6004:
old  <	neg ebx>
new  <	add rbp, 84>

6005:
old  <>
new  <	jmp @4380$memswap>

6006:
old  < @abs$2:>
new  <>

6007:
old  <	; Goto 4>
new  < qsort$26:>

6008:
old  <	jmp @abs$4>
new  <	; PostCall 84>

6010:
old  < @abs$3:>
new  < qsort$27:>

6011:
old  <	; Assign Â£temporary2735 value>
new  <	; Assign update 1>

6012:
old  <	mov ebx, [rbp + 24]>
new  <	mov dword [rbp + 64], 1>

6014:
old  < @abs$4:>
new  < qsort$28:>

6015:
old  <	; Return Â£temporary2735>
new  <	; BinaryAdd index index 1>

6016:
old  <	mov rax, [rbp]>
new  <	inc dword [rbp + 60]>

6017:
old  <	mov rdi, [rbp + 16]>
new  <>

6018:
old  <	mov rbp, [rbp + 8]>
new  < qsort$29:>

6019:
old  <	jmp rax>
new  <	; Goto 6>

6020:
old  <>
new  <	jmp qsort$6>

6021:
old  < @abs$5:>
new  <>

6022:
old  <	; FunctionEnd @abs>
new  < qsort$30:>

6023:
old  <>
new  <	; Equal 33 update 0>

6024:
old  <section .text>
new  <	cmp dword [rbp + 64], 0>

6025:
old  <>
new  <	je qsort$33>

6026:
old  < labs:>
new  <>

6027:
old  <	; SignedGreaterThanEqual 3 value 0>
new  < qsort$31:>

6028:
old  <	cmp qword [rbp + 24], 0>
new  <	; BinarySubtract size size 1>

6029:
old  <	jge labs$3>
new  <	dec dword [rbp + 56]>

6031:
old  < labs$1:>
new  < qsort$32:>

6032:
old  <	; UnarySubtract Â£temporary2738 value>
new  <	; Goto 3>

6033:
old  <	mov rbx, [rbp + 24]>
new  <	jmp qsort$3>

6034:
old  <	neg rbx>
new  <>

6035:
old  <>
new  < qsort$33:>

6036:
old  < labs$2:>
new  <	; Return>

6037:
old  <	; Goto 4>
new  <	mov rax, [rbp]>

6038:
old  <	jmp labs$4>
new  <	mov rdi, [rbp + 16]>

6039:
old  <>
new  <	mov rbp, [rbp + 8]>

6040:
old  < labs$3:>
new  <	jmp rax>

6041:
old  <	; Assign Â£temporary2738 value>
new  <>

6042:
old  <	mov rbx, [rbp + 24]>
new  < qsort$34:>

6043:
old  <>
new  <	; FunctionEnd qsort>

6044:
old  < labs$4:>
new  <>

6045:
old  <	; Return Â£temporary2738>
new  <section .text>

6046:
old  <	mov rax, [rbp]>
new  <>

6047:
old  <	mov rdi, [rbp + 16]>
new  < @abs:>

6048:
old  <	mov rbp, [rbp + 8]>
new  <	; SignedGreaterThanEqual 3 value 0>

6049:
old  <	jmp rax>
new  <	cmp dword [rbp + 24], 0>

6050:
old  <>
new  <	jge @abs$3>

6051:
old  < labs$5:>
new  <>

6052:
old  <	; FunctionEnd labs>
new  < @abs$1:>

6053:
old  <>
new  <	; UnarySubtract Â£temporary2722 value>

6054:
old  <section .text>
new  <	mov ebx, [rbp + 24]>

6055:
old  <>
new  <	neg ebx>

6056:
old  < div:>
new  <>

6057:
old  <	; Assign result.quot 0>
new  < @abs$2:>

6058:
old  <	mov dword [rbp + 32], 0>
new  <	; Goto 4>

6059:
old  <>
new  <	jmp @abs$4>

6060:
old  < div$1:>
new  <>

6061:
old  <	; Assign result.rem 0>
new  < @abs$3:>

6062:
old  <	mov dword [rbp + 36], 0>
new  <	; Assign Â£temporary2722 value>

6063:
old  <>
new  <	mov ebx, [rbp + 24]>

6064:
old  < div$2:>
new  <>

6065:
old  <	; NotEqual 5 denum 0>
new  < @abs$4:>

6066:
old  <	cmp dword [rbp + 28], 0>
new  <	; SetReturnValue>

6067:
old  <	jne div$5>
new  <>

6068:
old  <>
new  < @abs$5:>

6069:
old  < div$3:>
new  <	; Return Â£temporary2722>

6070:
old  <	; Assign errno 6>
new  <	mov rax, [rbp]>

6071:
old  <	mov dword [errno], 6>
new  <	mov rdi, [rbp + 16]>

6072:
old  <>
new  <	mov rbp, [rbp + 8]>

6073:
old  < div$4:>
new  <	jmp rax>

6074:
old  <	; Return result>
new  <>

6075:
old  <	mov rbx, rbp>
new  < @abs$6:>

6076:
old  <	add rbx, 32>
new  <	; FunctionEnd @abs>

6077:
old  <	mov rax, [rbp]>
new  <>

6078:
old  <	mov rdi, [rbp + 16]>
new  <section .text>

6079:
old  <	mov rbp, [rbp + 8]>
new  <>

6080:
old  <	jmp rax>
new  < labs:>

6081:
old  <>
new  <	; SignedGreaterThanEqual 3 value 0>

6082:
old  < div$5:>
new  <	cmp qword [rbp + 24], 0>

6083:
old  <	; SignedDivide result.quot num denum>
new  <	jge labs$3>

6084:
old  <	mov eax, [rbp + 24]>
new  <>

6085:
old  <	xor edx, edx>
new  < labs$1:>

6086:
old  <	idiv dword [rbp + 28]>
new  <	; UnarySubtract Â£temporary2725 value>

6087:
old  <	mov [rbp + 32], eax>
new  <	mov rbx, [rbp + 24]>

6088:
old  <>
new  <	neg rbx>

6089:
old  < div$6:>
new  <>

6090:
old  <	; SignedModulo result.rem num denum>
new  < labs$2:>

6091:
old  <	mov eax, [rbp + 24]>
new  <	; Goto 4>

6092:
old  <	xor edx, edx>
new  <	jmp labs$4>

6093:
old  <	idiv dword [rbp + 28]>
new  <>

6094:
old  <	mov [rbp + 36], edx>
new  < labs$3:>

6095:
old  <>
new  <	; Assign Â£temporary2725 value>

6096:
old  < div$7:>
new  <	mov rbx, [rbp + 24]>

6097:
old  <	; Return result>
new  <>

6098:
old  <	mov rbx, rbp>
new  < labs$4:>

6099:
old  <	add rbx, 32>
new  <	; SetReturnValue>

6100:
old  <	mov rax, [rbp]>
new  <>

6101:
old  <	mov rdi, [rbp + 16]>
new  < labs$5:>

6102:
old  <	mov rbp, [rbp + 8]>
new  <	; Return Â£temporary2725>

6103:
old  <	jmp rax>
new  <	mov rax, [rbp]>

6104:
old  <>
new  <	mov rdi, [rbp + 16]>

6105:
old  < div$8:>
new  <	mov rbp, [rbp + 8]>

6106:
old  <	; FunctionEnd div>
new  <	jmp rax>

6108:
old  <section .text>
new  < labs$6:>

6109:
old  <>
new  <	; FunctionEnd labs>

6110:
old  < ldiv:>
new  <>

6111:
old  <	; Assign result.quot 0>
new  <section .text>

6112:
old  <	mov qword [rbp + 40], 0>
new  <>

6113:
old  <>
new  < div:>

6114:
old  < ldiv$1:>
new  <	; Assign result.quot 0>

6115:
old  <	; Assign result.rem 0>
new  <	mov dword [rbp + 32], 0>

6116:
old  <	mov qword [rbp + 48], 0>
new  <>

6117:
old  <>
new  < div$1:>

6118:
old  < ldiv$2:>
new  <	; Assign result.rem 0>

6119:
old  <	; NotEqual 5 denum 0>
new  <	mov dword [rbp + 36], 0>

6120:
old  <	cmp qword [rbp + 32], 0>
new  <>

6121:
old  <	jne ldiv$5>
new  < div$2:>

6122:
old  <>
new  <	; NotEqual 6 denum 0>

6123:
old  < ldiv$3:>
new  <	cmp dword [rbp + 28], 0>

6124:
old  <	; Assign errno 6>
new  <	jne div$6>

6125:
old  <	mov dword [errno], 6>
new  <>

6126:
old  <>
new  < div$3:>

6127:
old  < ldiv$4:>
new  <	; Assign errno 6>

6128:
old  <	; Return result>
new  <	mov dword [errno], 6>

6129:
old  <	mov rbx, rbp>
new  <>

6130:
old  <	add rbx, 40>
new  < div$4:>

6131:
old  <	mov rax, [rbp]>
new  <	; SetReturnValue>

6132:
old  <	mov rdi, [rbp + 16]>
new  <>

6133:
old  <	mov rbp, [rbp + 8]>
new  < div$5:>

6134:
old  <	jmp rax>
new  <	; Return result>

6135:
old  <>
new  <	mov rbx, rbp>

6136:
old  < ldiv$5:>
new  <	add rbx, 32>

6137:
old  <	; SignedDivide result.quot num denum>
new  <	mov rax, [rbp]>

6138:
old  <	mov rax, [rbp + 24]>
new  <	mov rdi, [rbp + 16]>

6139:
old  <	xor rdx, rdx>
new  <	mov rbp, [rbp + 8]>

6140:
old  <	idiv qword [rbp + 32]>
new  <	jmp rax>

6141:
old  <	mov [rbp + 40], rax>
new  <>

6142:
old  <>
new  < div$6:>

6143:
old  < ldiv$6:>
new  <	; SignedDivide result.quot num denum>

6144:
old  <	; SignedModulo result.rem num denum>
new  <	mov eax, [rbp + 24]>

6145:
old  <	mov rax, [rbp + 24]>
new  <	xor edx, edx>

6146:
old  <	xor rdx, rdx>
new  <	idiv dword [rbp + 28]>

6147:
old  <	idiv qword [rbp + 32]>
new  <	mov [rbp + 32], eax>

6148:
old  <	mov [rbp + 48], rdx>
new  <>

6149:
old  <>
new  < div$7:>

6150:
old  < ldiv$7:>
new  <	; SignedModulo result.rem num denum>

6151:
old  <	; Return result>
new  <	mov eax, [rbp + 24]>

6152:
old  <	mov rbx, rbp>
new  <	xor edx, edx>

6153:
old  <	add rbx, 40>
new  <	idiv dword [rbp + 28]>

6154:
old  <	mov rax, [rbp]>
new  <	mov [rbp + 36], edx>

6155:
old  <	mov rdi, [rbp + 16]>
new  <>

6156:
old  <	mov rbp, [rbp + 8]>
new  < div$8:>

6157:
old  <	jmp rax>
new  <	; SetReturnValue>

6159:
old  < ldiv$8:>
new  < div$9:>

6160:
old  <	; FunctionEnd ldiv>
new  <	; Return result>

Time.asm
23:
old  <	; Return -1>
new  <	; SetReturnValue>

24:
old  <	mov rbx, -1>
new  <>

25:
old  <	mov rax, [rbp]>
new  < clock$1:>

26:
old  <	mov rdi, [rbp + 16]>
new  <	; Return -1>

27:
old  <	mov rbp, [rbp + 8]>
new  <	mov rbx, -1>

28:
old  <	jmp rax>
new  <	mov rax, [rbp]>

29:
old  <>
new  <	mov rdi, [rbp + 16]>

30:
old  < clock$1:>
new  <	mov rbp, [rbp + 8]>

31:
old  <	; FunctionEnd clock>
new  <	jmp rax>

33:
old  <section .data>
new  < clock$2:>

34:
old  <>
new  <	; FunctionEnd clock>

35:
old  <string_timezone2025i2025i2025i2025i0A#:>
new  <>

36:
old  <	; Initializer String timezone %i %i %i %i\n>
new  <section .data>

37:
old  <	db "timezone %i %i %i %i", 10, 0>
new  <>

38:
old  <>
new  <string_timezone2025i2025i2025i2025i0A#:>

39:
old  <section .text>
new  <	; Initializer String timezone %i %i %i %i\n>

40:
old  <>
new  <	db "timezone %i %i %i %i", 10, 0>

41:
old  < time:>
new  <>

42:
old  <	; AssignRegister rax 201>
new  <section .text>

43:
old  <	mov rax, 201>
new  <>

44:
old  <>
new  < time:>

45:
old  < time$1:>
new  <	; AssignRegister rax 201>

46:
old  <	; Address Â£temporary2759 time>
new  <	mov rax, 201>

47:
old  <	mov rdi, rbp>
new  <>

48:
old  <	add rdi, 32>
new  < time$1:>

49:
old  <>
new  <	; Address Â£temporary2746 time>

50:
old  < time$2:>
new  <	mov rdi, rbp>

51:
old  <	; IntegralToIntegral Â£temporary2760 Â£temporary2759>
new  <	add rdi, 32>

53:
old  < time$3:>
new  < time$2:>

54:
old  <	; AssignRegister rdi Â£temporary2760>
new  <	; IntegralToIntegral Â£temporary2747 Â£temporary2746>

56:
old  < time$4:>
new  < time$3:>

57:
old  <	; SysCall>
new  <	; AssignRegister rdi Â£temporary2747>

58:
old  <	syscall>
new  <>

59:
old  <>
new  < time$4:>

60:
old  < time$5:>
new  <	; SysCall>

61:
old  <	; AssignRegister rax 96>
new  <	syscall>

62:
old  <	mov rax, 96>
new  <>

63:
old  <>
new  < time$5:>

64:
old  < time$6:>
new  <	; AssignRegister rax 96>

65:
old  <	; Address Â£temporary2763 tv>
new  <	mov rax, 96>

66:
old  <	mov rdi, rbp>
new  <>

67:
old  <	add rdi, 40>
new  < time$6:>

68:
old  <>
new  <	; Address Â£temporary2750 tv>

69:
old  < time$7:>
new  <	mov rdi, rbp>

70:
old  <	; AssignRegister rdi Â£temporary2763>
new  <	add rdi, 40>

72:
old  < time$8:>
new  < time$7:>

73:
old  <	; Address Â£temporary2765 tz>
new  <	; AssignRegister rdi Â£temporary2750>

74:
old  <	mov rsi, rbp>
new  <>

75:
old  <	add rsi, 48>
new  < time$8:>

76:
old  <>
new  <	; Address Â£temporary2752 tz>

77:
old  < time$9:>
new  <	mov rsi, rbp>

78:
old  <	; AssignRegister rsi Â£temporary2765>
new  <	add rsi, 48>

80:
old  < time$10:>
new  < time$9:>

81:
old  <	; SysCall>
new  <	; AssignRegister rsi Â£temporary2752>

82:
old  <	syscall>
new  <>

83:
old  <>
new  < time$10:>

84:
old  < time$11:>
new  <	; SysCall>

85:
old  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	syscall>

87:
old  < time$12:>
new  < time$11:>

88:
old  <	; Parameter 80 pointer "timezone %i %i %i %i\n">
new  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

89:
old  <	mov qword [rbp + 80], string_timezone2025i2025i2025i2025i0A#>
new  <>

90:
old  <>
new  < time$12:>

91:
old  < time$13:>
new  <	; Parameter 80 pointer "timezone %i %i %i %i\n">

92:
old  <	; Parameter 88 signedint tv.tv_sec>
new  <	mov qword [rbp + 80], string_timezone2025i2025i2025i2025i0A#>

93:
old  <	mov eax, [rbp + 40]>
new  <>

94:
old  <	mov [rbp + 88], eax>
new  < time$13:>

95:
old  <>
new  <	; Parameter 88 signedint tv.tv_sec>

96:
old  < time$14:>
new  <	mov eax, [rbp + 40]>

97:
old  <	; Parameter 92 signedint tv.tv_usec>
new  <	mov [rbp + 88], eax>

98:
old  <	mov eax, [rbp + 44]>
new  <>

99:
old  <	mov [rbp + 92], eax>
new  < time$14:>

100:
old  <>
new  <	; Parameter 92 signedint tv.tv_usec>

101:
old  < time$15:>
new  <	mov eax, [rbp + 44]>

102:
old  <	; Parameter 96 signedint tz.tz_minuteswest>
new  <	mov [rbp + 92], eax>

103:
old  <	mov eax, [rbp + 48]>
new  <>

104:
old  <	mov [rbp + 96], eax>
new  < time$15:>

105:
old  <>
new  <	; Parameter 96 signedint tz.tz_minuteswest>

106:
old  < time$16:>
new  <	mov eax, [rbp + 48]>

107:
old  <	; Parameter 100 signedint tz.tz_dsttime>
new  <	mov [rbp + 96], eax>

108:
old  <	mov eax, [rbp + 52]>
new  <>

109:
old  <	mov [rbp + 100], eax>
new  < time$16:>

110:
old  <>
new  <	; Parameter 100 signedint tz.tz_dsttime>

111:
old  < time$17:>
new  <	mov eax, [rbp + 52]>

112:
old  <	; Call 56 printf 16>
new  <	mov [rbp + 100], eax>

113:
old  <	mov qword [rbp + 56], time$18>
new  <>

114:
old  <	mov [rbp + 64], rbp>
new  < time$17:>

115:
old  <	add rbp, 56>
new  <	; Call 56 printf 16>

116:
old  <	mov rdi, rbp>
new  <	mov qword [rbp + 56], time$18>

117:
old  <	add rdi, 16>
new  <	mov [rbp + 64], rbp>

118:
old  <	jmp printf>
new  <	add rbp, 56>

119:
old  <>
new  <	mov rdi, rbp>

120:
old  < time$18:>
new  <	add rdi, 16>

121:
old  <	; PostCall 56>
new  <	jmp printf>

123:
old  < time$19:>
new  < time$18:>

124:
old  <	; Equal 22 timePtr 0>
new  <	; PostCall 56>

125:
old  <	cmp qword [rbp + 24], 0>
new  <>

126:
old  <	je time$22>
new  < time$19:>

127:
old  <>
new  <	; Equal 22 timePtr 0>

128:
old  < time$20:>
new  <	cmp qword [rbp + 24], 0>

129:
old  <	; Dereference Â£temporary2772 -> timePtr timePtr 0>
new  <	je time$22>

130:
old  <	mov rsi, [rbp + 24]>
new  <>

131:
old  <>
new  < time$20:>

132:
old  < time$21:>
new  <	; Dereference Â£temporary2759 -> timePtr timePtr 0>

133:
old  <	; Assign Â£temporary2772 -> timePtr time>
new  <	mov rsi, [rbp + 24]>

134:
old  <	mov rax, [rbp + 32]>
new  <>

135:
old  <	mov [rsi], rax>
new  < time$21:>

136:
old  <>
new  <	; Assign Â£temporary2759 -> timePtr time>

137:
old  < time$22:>
new  <	mov rax, [rbp + 32]>

138:
old  <	; Return time>
new  <	mov [rsi], rax>

139:
old  <	mov rbx, [rbp + 32]>
new  <>

140:
old  <	mov rax, [rbp]>
new  < time$22:>

141:
old  <	mov rdi, [rbp + 16]>
new  <	; SetReturnValue>

142:
old  <	mov rbp, [rbp + 8]>
new  <>

143:
old  <	jmp rax>
new  < time$23:>

144:
old  <>
new  <	; Return time>

145:
old  < time$23:>
new  <	mov rbx, [rbp + 32]>

146:
old  <	; FunctionEnd time>
new  <	mov rax, [rbp]>

147:
old  <>
new  <	mov rdi, [rbp + 16]>

148:
old  <section .data>
new  <	mov rbp, [rbp + 8]>

149:
old  <>
new  <	jmp rax>

150:
old  <int4$4#:>
new  <>

151:
old  <	; Initializer SignedInt 4>
new  < time$24:>

152:
old  <	dd 4>
new  <	; FunctionEnd time>

156:
old  <int4$365#:>
new  <int4$4#:>

157:
old  <	; Initializer SignedInt 365>
new  <	; Initializer SignedInt 4>

158:
old  <	dd 365>
new  <	dd 4>

162:
old  <int8$86400#:>
new  <int4$365#:>

163:
old  <	; Initializer Signed_Long_Int 86400>
new  <	; Initializer SignedInt 365>

164:
old  <	dq 86400>
new  <	dd 365>

168:
old  <int8$3600#:>
new  <int8$86400#:>

169:
old  <	; Initializer Signed_Long_Int 3600>
new  <	; Initializer Signed_Long_Int 86400>

170:
old  <	dq 3600>
new  <	dq 86400>

174:
old  <int8$60#:>
new  <int8$3600#:>

175:
old  <	; Initializer Signed_Long_Int 60>
new  <	; Initializer Signed_Long_Int 3600>

176:
old  <	dq 60>
new  <	dq 3600>

178:
old  <section .text>
new  <section .data>

180:
old  < mktime:>
new  <int8$60#:>

181:
old  <	; Equal 27 tp 0>
new  <	; Initializer Signed_Long_Int 60>

182:
old  <	cmp qword [rbp + 24], 0>
new  <	dq 60>

183:
old  <	je mktime$27>
new  <>

184:
old  <>
new  <section .text>

185:
old  < mktime$1:>
new  <>

186:
old  <	; Dereference Â£temporary2777 -> tp tp 0>
new  < mktime:>

187:
old  <	mov rsi, [rbp + 24]>
new  <	; Equal 28 tp 0>

188:
old  <>
new  <	cmp qword [rbp + 24], 0>

189:
old  < mktime$2:>
new  <	je mktime$28>

190:
old  <	; BinarySubtract Â£temporary2778 Â£temporary2777 -> tp 69>
new  <>

191:
old  <	mov eax, [rsi + 20]>
new  < mktime$1:>

192:
old  <	sub eax, 69>
new  <	; Dereference Â£temporary2764 -> tp tp 0>

193:
old  <>
new  <	mov rsi, [rbp + 24]>

194:
old  < mktime$3:>
new  <>

195:
old  <	; SignedDivide Â£temporary2779 Â£temporary2778 4>
new  < mktime$2:>

196:
old  <	xor edx, edx>
new  <	; BinarySubtract Â£temporary2765 Â£temporary2764 -> tp 69>

197:
old  <	idiv dword [int4$4#]>
new  <	mov eax, [rsi + 20]>

198:
old  <>
new  <	sub eax, 69>

199:
old  < mktime$4:>
new  <>

200:
old  <	; IntegralToIntegral Â£temporary2780 Â£temporary2779>
new  < mktime$3:>

201:
old  <	mov rbx, 4294967295>
new  <	; SignedDivide Â£temporary2766 Â£temporary2765 4>

202:
old  <	and rax, rbx>
new  <	xor edx, edx>

203:
old  <	cmp eax, 0>
new  <	idiv dword [int4$4#]>

204:
old  <	jge mktime$5>
new  <>

205:
old  <	neg eax>
new  < mktime$4:>

206:
old  <	neg rax>
new  <	; IntegralToIntegral Â£temporary2767 Â£temporary2766>

207:
old  <>
new  <	mov rbx, 4294967295>

208:
old  < mktime$5:>
new  <	and rax, rbx>

209:
old  <	; Assign leapDays Â£temporary2780>
new  <	cmp eax, 0>

210:
old  <	mov [rbp + 32], rax>
new  <	jge mktime$5>

211:
old  <>
new  <	neg eax>

212:
old  < mktime$6:>
new  <	neg rax>

213:
old  <	; Dereference Â£temporary2781 -> tp tp 0>
new  <>

214:
old  <	mov rsi, [rbp + 24]>
new  < mktime$5:>

215:
old  <>
new  <	; Assign leapDays Â£temporary2767>

216:
old  < mktime$7:>
new  <	mov [rbp + 32], rax>

217:
old  <	; BinarySubtract Â£temporary2782 Â£temporary2781 -> tp 70>
new  <>

218:
old  <	mov eax, [rsi + 20]>
new  < mktime$6:>

219:
old  <	sub eax, 70>
new  <	; Dereference Â£temporary2768 -> tp tp 0>

220:
old  <>
new  <	mov rsi, [rbp + 24]>

221:
old  < mktime$8:>
new  <>

222:
old  <	; SignedMultiply Â£temporary2783 Â£temporary2782 365>
new  < mktime$7:>

223:
old  <	xor edx, edx>
new  <	; BinarySubtract Â£temporary2769 Â£temporary2768 -> tp 70>

224:
old  <	imul dword [int4$365#]>
new  <	mov eax, [rsi + 20]>

225:
old  <>
new  <	sub eax, 70>

226:
old  < mktime$9:>
new  <>

227:
old  <	; IntegralToIntegral Â£temporary2784 Â£temporary2783>
new  < mktime$8:>

228:
old  <	mov rbx, 4294967295>
new  <	; SignedMultiply Â£temporary2770 Â£temporary2769 365>

229:
old  <	and rax, rbx>
new  <	xor edx, edx>

230:
old  <	cmp eax, 0>
new  <	imul dword [int4$365#]>

231:
old  <	jge mktime$10>
new  <>

232:
old  <	neg eax>
new  < mktime$9:>

233:
old  <	neg rax>
new  <	; IntegralToIntegral Â£temporary2771 Â£temporary2770>

234:
old  <>
new  <	mov rbx, 4294967295>

235:
old  < mktime$10:>
new  <	and rax, rbx>

236:
old  <	; BinaryAdd Â£temporary2785 Â£temporary2784 leapDays>
new  <	cmp eax, 0>

237:
old  <	add rax, [rbp + 32]>
new  <	jge mktime$10>

238:
old  <>
new  <	neg eax>

239:
old  < mktime$11:>
new  <	neg rax>

240:
old  <	; Dereference Â£temporary2786 -> tp tp 0>
new  <>

241:
old  <	mov rsi, [rbp + 24]>
new  < mktime$10:>

242:
old  <>
new  <	; BinaryAdd Â£temporary2772 Â£temporary2771 leapDays>

243:
old  < mktime$12:>
new  <	add rax, [rbp + 32]>

244:
old  <	; IntegralToIntegral Â£temporary2787 Â£temporary2786 -> tp>
new  <>

245:
old  <	mov ebx, [rsi + 28]>
new  < mktime$11:>

246:
old  <	mov rcx, 4294967295>
new  <	; Dereference Â£temporary2773 -> tp tp 0>

247:
old  <	and rbx, rcx>
new  <	mov rsi, [rbp + 24]>

248:
old  <	cmp ebx, 0>
new  <>

249:
old  <	jge mktime$13>
new  < mktime$12:>

250:
old  <	neg ebx>
new  <	; IntegralToIntegral Â£temporary2774 Â£temporary2773 -> tp>

251:
old  <	neg rbx>
new  <	mov ebx, [rsi + 28]>

252:
old  <>
new  <	mov rcx, 4294967295>

253:
old  < mktime$13:>
new  <	and rbx, rcx>

254:
old  <	; BinaryAdd totalDays Â£temporary2785 Â£temporary2787>
new  <	cmp ebx, 0>

255:
old  <	add rax, rbx>
new  <	jge mktime$13>

256:
old  <	mov [rbp + 40], rax>
new  <	neg ebx>

257:
old  <>
new  <	neg rbx>

258:
old  < mktime$14:>
new  <>

259:
old  <	; SignedMultiply Â£temporary2789 totalDays 86400>
new  < mktime$13:>

260:
old  <	mov rax, [rbp + 40]>
new  <	; BinaryAdd totalDays Â£temporary2772 Â£temporary2774>

261:
old  <	xor rdx, rdx>
new  <	add rax, rbx>

262:
old  <	imul qword [int8$86400#]>
new  <	mov [rbp + 40], rax>

263:
old  <	mov rbx, rax>
new  <>

264:
old  <>
new  < mktime$14:>

265:
old  < mktime$15:>
new  <	; SignedMultiply Â£temporary2776 totalDays 86400>

266:
old  <	; Dereference Â£temporary2790 -> tp tp 0>
new  <	mov rax, [rbp + 40]>

267:
old  <	mov rsi, [rbp + 24]>
new  <	xor rdx, rdx>

268:
old  <>
new  <	imul qword [int8$86400#]>

269:
old  < mktime$16:>
new  <	mov rbx, rax>

270:
old  <	; IntegralToIntegral Â£temporary2791 Â£temporary2790 -> tp>
new  <>

271:
old  <	mov eax, [rsi + 8]>
new  < mktime$15:>

272:
old  <	mov rcx, 4294967295>
new  <	; Dereference Â£temporary2777 -> tp tp 0>

273:
old  <	and rax, rcx>
new  <	mov rsi, [rbp + 24]>

274:
old  <	cmp eax, 0>
new  <>

275:
old  <	jge mktime$17>
new  < mktime$16:>

276:
old  <	neg eax>
new  <	; IntegralToIntegral Â£temporary2778 Â£temporary2777 -> tp>

277:
old  <	neg rax>
new  <	mov eax, [rsi + 8]>

278:
old  <>
new  <	mov rcx, 4294967295>

279:
old  < mktime$17:>
new  <	and rax, rcx>

280:
old  <	; SignedMultiply Â£temporary2792 Â£temporary2791 3600>
new  <	cmp eax, 0>

281:
old  <	xor rdx, rdx>
new  <	jge mktime$17>

282:
old  <	imul qword [int8$3600#]>
new  <	neg eax>

283:
old  <>
new  <	neg rax>

284:
old  < mktime$18:>
new  <>

285:
old  <	; BinaryAdd Â£temporary2793 Â£temporary2789 Â£temporary2792>
new  < mktime$17:>

286:
old  <	add rbx, rax>
new  <	; SignedMultiply Â£temporary2779 Â£temporary2778 3600>

287:
old  <>
new  <	xor rdx, rdx>

288:
old  < mktime$19:>
new  <	imul qword [int8$3600#]>

289:
old  <	; Dereference Â£temporary2794 -> tp tp 0>
new  <>

290:
old  <	mov rsi, [rbp + 24]>
new  < mktime$18:>

291:
old  <>
new  <	; BinaryAdd Â£temporary2780 Â£temporary2776 Â£temporary2779>

292:
old  < mktime$20:>
new  <	add rbx, rax>

293:
old  <	; IntegralToIntegral Â£temporary2795 Â£temporary2794 -> tp>
new  <>

294:
old  <	mov eax, [rsi + 4]>
new  < mktime$19:>

295:
old  <	mov rcx, 4294967295>
new  <	; Dereference Â£temporary2781 -> tp tp 0>

296:
old  <	and rax, rcx>
new  <	mov rsi, [rbp + 24]>

297:
old  <	cmp eax, 0>
new  <>

298:
old  <	jge mktime$21>
new  < mktime$20:>

299:
old  <	neg eax>
new  <	; IntegralToIntegral Â£temporary2782 Â£temporary2781 -> tp>

300:
old  <	neg rax>
new  <	mov eax, [rsi + 4]>

301:
old  <>
new  <	mov rcx, 4294967295>

302:
old  < mktime$21:>
new  <	and rax, rcx>

303:
old  <	; SignedMultiply Â£temporary2796 Â£temporary2795 60>
new  <	cmp eax, 0>

304:
old  <	xor rdx, rdx>
new  <	jge mktime$21>

305:
old  <	imul qword [int8$60#]>
new  <	neg eax>

306:
old  <>
new  <	neg rax>

307:
old  < mktime$22:>
new  <>

308:
old  <	; BinaryAdd Â£temporary2797 Â£temporary2793 Â£temporary2796>
new  < mktime$21:>

309:
old  <	add rbx, rax>
new  <	; SignedMultiply Â£temporary2783 Â£temporary2782 60>

310:
old  <>
new  <	xor rdx, rdx>

311:
old  < mktime$23:>
new  <	imul qword [int8$60#]>

312:
old  <	; Dereference Â£temporary2798 -> tp tp 0>
new  <>

313:
old  <	mov rsi, [rbp + 24]>
new  < mktime$22:>

314:
old  <>
new  <	; BinaryAdd Â£temporary2784 Â£temporary2780 Â£temporary2783>

315:
old  < mktime$24:>
new  <	add rbx, rax>

316:
old  <	; IntegralToIntegral Â£temporary2799 Â£temporary2798 -> tp>
new  <>

317:
old  <	mov eax, [rsi]>
new  < mktime$23:>

318:
old  <	mov rcx, 4294967295>
new  <	; Dereference Â£temporary2785 -> tp tp 0>

319:
old  <	and rax, rcx>
new  <	mov rsi, [rbp + 24]>

320:
old  <	cmp eax, 0>
new  <>

321:
old  <	jge mktime$25>
new  < mktime$24:>

322:
old  <	neg eax>
new  <	; IntegralToIntegral Â£temporary2786 Â£temporary2785 -> tp>

323:
old  <	neg rax>
new  <	mov eax, [rsi]>

324:
old  <>
new  <	mov rcx, 4294967295>

325:
old  < mktime$25:>
new  <	and rax, rcx>

326:
old  <	; BinaryAdd Â£temporary2800 Â£temporary2797 Â£temporary2799>
new  <	cmp eax, 0>

327:
old  <	add rbx, rax>
new  <	jge mktime$25>

328:
old  <>
new  <	neg eax>

329:
old  < mktime$26:>
new  <	neg rax>

330:
old  <	; Return Â£temporary2800>
new  <>

331:
old  <	mov rax, [rbp]>
new  < mktime$25:>

332:
old  <	mov rdi, [rbp + 16]>
new  <	; BinaryAdd Â£temporary2787 Â£temporary2784 Â£temporary2786>

333:
old  <	mov rbp, [rbp + 8]>
new  <	add rbx, rax>

334:
old  <	jmp rax>
new  <>

335:
old  <>
new  < mktime$26:>

336:
old  < mktime$27:>
new  <	; SetReturnValue>

337:
old  <	; Return 0>
new  <>

338:
old  <	mov rbx, 0>
new  < mktime$27:>

339:
old  <	mov rax, [rbp]>
new  <	; Return Â£temporary2787>

340:
old  <	mov rdi, [rbp + 16]>
new  <	mov rax, [rbp]>

341:
old  <	mov rbp, [rbp + 8]>
new  <	mov rdi, [rbp + 16]>

342:
old  <	jmp rax>
new  <	mov rbp, [rbp + 8]>

343:
old  <>
new  <	jmp rax>

344:
old  < mktime$28:>
new  <>

345:
old  <	; FunctionEnd mktime>
new  < mktime$28:>

346:
old  <>
new  <	; SetReturnValue>

347:
old  <section .data>
new  <>

348:
old  <>
new  < mktime$29:>

349:
old  <@4752$g_timeStruct:>
new  <	; Return 0>

350:
old  <	; InitializerZero 36>
new  <	mov rbx, 0>

351:
old  <	times 36 db 0>
new  <	mov rax, [rbp]>

352:
old  <>
new  <	mov rdi, [rbp + 16]>

353:
old  <section .data>
new  <	mov rbp, [rbp + 8]>

354:
old  <>
new  <	jmp rax>

355:
old  <int4$100#:>
new  <>

356:
old  <	; Initializer SignedInt 100>
new  < mktime$30:>

357:
old  <	dd 100>
new  <	; FunctionEnd mktime>

361:
old  <int4$400#:>
new  <@4748$g_timeStruct:>

362:
old  <	; Initializer SignedInt 400>
new  <	; InitializerZero 36>

363:
old  <	dd 400>
new  <	times 36 db 0>

365:
old  <section .text>
new  <section .data>

367:
old  < @4754$isLeapYear:>
new  <int4$100#:>

368:
old  <	; SignedModulo Â£temporary2801 year 4>
new  <	; Initializer SignedInt 100>

369:
old  <	mov eax, [rbp + 24]>
new  <	dd 100>

370:
old  <	xor edx, edx>
new  <>

371:
old  <	idiv dword [int4$4#]>
new  <section .data>

373:
old  < @4754$isLeapYear$1:>
new  <int4$400#:>

374:
old  <	; NotEqual 4 Â£temporary2801 0>
new  <	; Initializer SignedInt 400>

375:
old  <	cmp edx, 0>
new  <	dd 400>

376:
old  <	jne @4754$isLeapYear$4>
new  <>

377:
old  <>
new  <section .text>

378:
old  < @4754$isLeapYear$2:>
new  <>

379:
old  <	; SignedModulo Â£temporary2803 year 100>
new  < @4750$isLeapYear:>

380:
old  <	mov eax, [rbp + 24]>
new  <	; SignedModulo Â£temporary2788 year 4>

381:
old  <	xor edx, edx>
new  <	mov eax, [rbp + 24]>

382:
old  <	idiv dword [int4$100#]>
new  <	xor edx, edx>

383:
old  <>
new  <	idiv dword [int4$4#]>

384:
old  < @4754$isLeapYear$3:>
new  <>

385:
old  <	; NotEqual 6 Â£temporary2803 0>
new  < @4750$isLeapYear$1:>

386:
old  <	cmp edx, 0>
new  <	; NotEqual 4 Â£temporary2788 0>

387:
old  <	jne @4754$isLeapYear$6>
new  <	cmp edx, 0>

388:
old  <>
new  <	jne @4750$isLeapYear$4>

389:
old  < @4754$isLeapYear$4:>
new  <>

390:
old  <	; SignedModulo Â£temporary2806 year 400>
new  < @4750$isLeapYear$2:>

391:
old  <	mov eax, [rbp + 24]>
new  <	; SignedModulo Â£temporary2790 year 100>

392:
old  <	xor edx, edx>
new  <	mov eax, [rbp + 24]>

393:
old  <	idiv dword [int4$400#]>
new  <	xor edx, edx>

394:
old  <>
new  <	idiv dword [int4$100#]>

395:
old  < @4754$isLeapYear$5:>
new  <>

396:
old  <	; NotEqual 8 Â£temporary2806 0>
new  < @4750$isLeapYear$3:>

397:
old  <	cmp edx, 0>
new  <	; NotEqual 6 Â£temporary2790 0>

398:
old  <	jne @4754$isLeapYear$8>
new  <	cmp edx, 0>

399:
old  <>
new  <	jne @4750$isLeapYear$6>

400:
old  < @4754$isLeapYear$6:>
new  <>

401:
old  <	; Assign Â£temporary2809 1>
new  < @4750$isLeapYear$4:>

402:
old  <	mov ebx, 1>
new  <	; SignedModulo Â£temporary2793 year 400>

403:
old  <>
new  <	mov eax, [rbp + 24]>

404:
old  < @4754$isLeapYear$7:>
new  <	xor edx, edx>

405:
old  <	; Goto 9>
new  <	idiv dword [int4$400#]>

406:
old  <	jmp @4754$isLeapYear$9>
new  <>

407:
old  <>
new  < @4750$isLeapYear$5:>

408:
old  < @4754$isLeapYear$8:>
new  <	; NotEqual 8 Â£temporary2793 0>

409:
old  <	; Assign Â£temporary2809 0>
new  <	cmp edx, 0>

410:
old  <	mov ebx, 0>
new  <	jne @4750$isLeapYear$8>

412:
old  < @4754$isLeapYear$9:>
new  < @4750$isLeapYear$6:>

413:
old  <	; Return Â£temporary2809>
new  <	; Assign Â£temporary2796 1>

414:
old  <	mov rax, [rbp]>
new  <	mov ebx, 1>

415:
old  <	mov rdi, [rbp + 16]>
new  <>

416:
old  <	mov rbp, [rbp + 8]>
new  < @4750$isLeapYear$7:>

417:
old  <	jmp rax>
new  <	; Goto 9>

418:
old  <>
new  <	jmp @4750$isLeapYear$9>

419:
old  < @4754$isLeapYear$10:>
new  <>

420:
old  <	; FunctionEnd isLeapYear>
new  < @4750$isLeapYear$8:>

421:
old  <>
new  <	; Assign Â£temporary2796 0>

422:
old  <section .data>
new  <	mov ebx, 0>

424:
old  <int8$7#:>
new  < @4750$isLeapYear$9:>

425:
old  <	; Initializer Signed_Long_Int 7>
new  <	; SetReturnValue>

426:
old  <	dq 7>
new  <>

427:
old  <>
new  < @4750$isLeapYear$10:>

428:
old  <section .data>
new  <	; Return Â£temporary2796>

429:
old  <>
new  <	mov rax, [rbp]>

430:
old  <int8$365#:>
new  <	mov rdi, [rbp + 16]>

431:
old  <	; Initializer Signed_Long_Int 365>
new  <	mov rbp, [rbp + 8]>

432:
old  <	dq 365>
new  <	jmp rax>

434:
old  <section .data>
new  < @4750$isLeapYear$11:>

435:
old  <>
new  <	; FunctionEnd isLeapYear>

436:
old  <Array_4#:>
new  <>

437:
old  <	; Initializer Array 4>
new  <section .data>

438:
old  <	dq 4>
new  <>

439:
old  <>
new  <int8$7#:>

440:
old  <section .text>
new  <	; Initializer Signed_Long_Int 7>

441:
old  <>
new  <	dq 7>

442:
old  < gmtime:>
new  <>

443:
old  <	; Equal 90 timePtr 0>
new  <section .data>

444:
old  <	cmp qword [rbp + 24], 0>
new  <>

445:
old  <	je gmtime$90>
new  <int8$365#:>

446:
old  <>
new  <	; Initializer Signed_Long_Int 365>

447:
old  < gmtime$1:>
new  <	dq 365>

448:
old  <	; Dereference Â£temporary2811 -> timePtr timePtr 0>
new  <>

449:
old  <	mov rsi, [rbp + 24]>
new  <section .data>

451:
old  < gmtime$2:>
new  <Array_4#:>

452:
old  <	; Assign time Â£temporary2811 -> timePtr>
new  <	; Initializer Array 4>

453:
old  <	mov rax, [rsi]>
new  <	dq 4>

454:
old  <	mov [rbp + 32], rax>
new  <>

455:
old  <>
new  <section .text>

456:
old  < gmtime$3:>
new  <>

457:
old  <	; SignedModulo secondsOfDay time 86400>
new  < gmtime:>

458:
old  <	mov rax, [rbp + 32]>
new  <	; Equal 91 timePtr 0>

459:
old  <	xor rdx, rdx>
new  <	cmp qword [rbp + 24], 0>

460:
old  <	idiv qword [int8$86400#]>
new  <	je gmtime$91>

461:
old  <	mov [rbp + 40], rdx>
new  <>

462:
old  <>
new  < gmtime$1:>

463:
old  < gmtime$4:>
new  <	; Dereference Â£temporary2798 -> timePtr timePtr 0>

464:
old  <	; SignedModulo secondsOfHour secondsOfDay 3600>
new  <	mov rsi, [rbp + 24]>

465:
old  <	mov rax, [rbp + 40]>
new  <>

466:
old  <	xor rdx, rdx>
new  < gmtime$2:>

467:
old  <	idiv qword [int8$3600#]>
new  <	; Assign time Â£temporary2798 -> timePtr>

468:
old  <	mov [rbp + 48], rdx>
new  <	mov rax, [rsi]>

469:
old  <>
new  <	mov [rbp + 32], rax>

470:
old  < gmtime$5:>
new  <>

471:
old  <	; SignedDivide Â£temporary2815 secondsOfDay 3600>
new  < gmtime$3:>

472:
old  <	mov rax, [rbp + 40]>
new  <	; SignedModulo secondsOfDay time 86400>

473:
old  <	xor rdx, rdx>
new  <	mov rax, [rbp + 32]>

474:
old  <	idiv qword [int8$3600#]>
new  <	xor rdx, rdx>

475:
old  <>
new  <	idiv qword [int8$86400#]>

476:
old  < gmtime$6:>
new  <	mov [rbp + 40], rdx>

477:
old  <	; IntegralToIntegral Â£temporary2816 Â£temporary2815>
new  <>

478:
old  <	cmp rax, 0>
new  < gmtime$4:>

479:
old  <	jge gmtime$7>
new  <	; SignedModulo secondsOfHour secondsOfDay 3600>

480:
old  <	neg rax>
new  <	mov rax, [rbp + 40]>

481:
old  <	neg eax>
new  <	xor rdx, rdx>

482:
old  <>
new  <	idiv qword [int8$3600#]>

483:
old  < gmtime$7:>
new  <	mov [rbp + 48], rdx>

484:
old  <	; Assign g_timeStruct.tm_hour Â£temporary2816>
new  <>

485:
old  <	mov [@4752$g_timeStruct + 8], eax>
new  < gmtime$5:>

486:
old  <>
new  <	; SignedDivide Â£temporary2802 secondsOfDay 3600>

487:
old  < gmtime$8:>
new  <	mov rax, [rbp + 40]>

488:
old  <	; SignedDivide Â£temporary2818 secondsOfHour 60>
new  <	xor rdx, rdx>

489:
old  <	mov rax, [rbp + 48]>
new  <	idiv qword [int8$3600#]>

490:
old  <	xor rdx, rdx>
new  <>

491:
old  <	idiv qword [int8$60#]>
new  < gmtime$6:>

492:
old  <>
new  <	; IntegralToIntegral Â£temporary2803 Â£temporary2802>

493:
old  < gmtime$9:>
new  <	cmp rax, 0>

494:
old  <	; IntegralToIntegral Â£temporary2819 Â£temporary2818>
new  <	jge gmtime$7>

495:
old  <	cmp rax, 0>
new  <	neg rax>

496:
old  <	jge gmtime$10>
new  <	neg eax>

497:
old  <	neg rax>
new  <>

498:
old  <	neg eax>
new  < gmtime$7:>

499:
old  <>
new  <	; Assign g_timeStruct.tm_hour Â£temporary2803>

500:
old  < gmtime$10:>
new  <	mov [@4748$g_timeStruct + 8], eax>

501:
old  <	; Assign g_timeStruct.tm_min Â£temporary2819>
new  <>

502:
old  <	mov [@4752$g_timeStruct + 4], eax>
new  < gmtime$8:>

503:
old  <>
new  <	; SignedDivide Â£temporary2805 secondsOfHour 60>

504:
old  < gmtime$11:>
new  <	mov rax, [rbp + 48]>

505:
old  <	; SignedModulo Â£temporary2821 secondsOfHour 60>
new  <	xor rdx, rdx>

506:
old  <	mov rax, [rbp + 48]>
new  <	idiv qword [int8$60#]>

507:
old  <	xor rdx, rdx>
new  <>

508:
old  <	idiv qword [int8$60#]>
new  < gmtime$9:>

509:
old  <>
new  <	; IntegralToIntegral Â£temporary2806 Â£temporary2805>

510:
old  < gmtime$12:>
new  <	cmp rax, 0>

511:
old  <	; IntegralToIntegral Â£temporary2822 Â£temporary2821>
new  <	jge gmtime$10>

512:
old  <	cmp rdx, 0>
new  <	neg rax>

513:
old  <	jge gmtime$13>
new  <	neg eax>

514:
old  <	neg rdx>
new  <>

515:
old  <	neg edx>
new  < gmtime$10:>

516:
old  <>
new  <	; Assign g_timeStruct.tm_min Â£temporary2806>

517:
old  < gmtime$13:>
new  <	mov [@4748$g_timeStruct + 4], eax>

518:
old  <	; Assign g_timeStruct.tm_sec Â£temporary2822>
new  <>

519:
old  <	mov [@4752$g_timeStruct], edx>
new  < gmtime$11:>

520:
old  <>
new  <	; SignedModulo Â£temporary2808 secondsOfHour 60>

521:
old  < gmtime$14:>
new  <	mov rax, [rbp + 48]>

522:
old  <	; SignedDivide totalDays time 86400>
new  <	xor rdx, rdx>

523:
old  <	mov rax, [rbp + 32]>
new  <	idiv qword [int8$60#]>

524:
old  <	xor rdx, rdx>
new  <>

525:
old  <	idiv qword [int8$86400#]>
new  < gmtime$12:>

526:
old  <	mov [rbp + 56], rax>
new  <	; IntegralToIntegral Â£temporary2809 Â£temporary2808>

527:
old  <>
new  <	cmp rdx, 0>

528:
old  < gmtime$15:>
new  <	jge gmtime$13>

529:
old  <	; SignedGreaterThanEqual 20 totalDays 3>
new  <	neg rdx>

530:
old  <	cmp qword [rbp + 56], 3>
new  <	neg edx>

531:
old  <	jge gmtime$20>
new  <>

532:
old  <>
new  < gmtime$13:>

533:
old  < gmtime$16:>
new  <	; Assign g_timeStruct.tm_sec Â£temporary2809>

534:
old  <	; BinaryAdd Â£temporary2826 totalDays 4>
new  <	mov [@4748$g_timeStruct], edx>

535:
old  <	mov rax, [rbp + 56]>
new  <>

536:
old  <	add rax, 4>
new  < gmtime$14:>

537:
old  <>
new  <	; SignedDivide totalDays time 86400>

538:
old  < gmtime$17:>
new  <	mov rax, [rbp + 32]>

539:
old  <	; IntegralToIntegral Â£temporary2827 Â£temporary2826>
new  <	xor rdx, rdx>

540:
old  <	cmp rax, 0>
new  <	idiv qword [int8$86400#]>

541:
old  <	jge gmtime$18>
new  <	mov [rbp + 56], rax>

542:
old  <	neg rax>
new  <>

543:
old  <	neg eax>
new  < gmtime$15:>

544:
old  <>
new  <	; SignedGreaterThanEqual 20 totalDays 3>

545:
old  < gmtime$18:>
new  <	cmp qword [rbp + 56], 3>

546:
old  <	; Assign g_timeStruct.tm_wday Â£temporary2827>
new  <	jge gmtime$20>

547:
old  <	mov [@4752$g_timeStruct + 24], eax>
new  <>

548:
old  <>
new  < gmtime$16:>

549:
old  < gmtime$19:>
new  <	; BinaryAdd Â£temporary2813 totalDays 4>

550:
old  <	; Goto 24>
new  <	mov rax, [rbp + 56]>

551:
old  <	jmp gmtime$24>
new  <	add rax, 4>

553:
old  < gmtime$20:>
new  < gmtime$17:>

554:
old  <	; BinarySubtract Â£temporary2829 totalDays 3>
new  <	; IntegralToIntegral Â£temporary2814 Â£temporary2813>

555:
old  <	mov rax, [rbp + 56]>
new  <	cmp rax, 0>

556:
old  <	sub rax, 3>
new  <	jge gmtime$18>

557:
old  <>
new  <	neg rax>

558:
old  < gmtime$21:>
new  <	neg eax>

559:
old  <	; SignedModulo Â£temporary2830 Â£temporary2829 7>
new  <>

560:
old  <	xor rdx, rdx>
new  < gmtime$18:>

561:
old  <	idiv qword [int8$7#]>
new  <	; Assign g_timeStruct.tm_wday Â£temporary2814>

562:
old  <>
new  <	mov [@4748$g_timeStruct + 24], eax>

563:
old  < gmtime$22:>
new  <>

564:
old  <	; IntegralToIntegral Â£temporary2831 Â£temporary2830>
new  < gmtime$19:>

565:
old  <	cmp rdx, 0>
new  <	; Goto 24>

566:
old  <	jge gmtime$23>
new  <	jmp gmtime$24>

567:
old  <	neg rdx>
new  <>

568:
old  <	neg edx>
new  < gmtime$20:>

569:
old  <>
new  <	; BinarySubtract Â£temporary2816 totalDays 3>

570:
old  < gmtime$23:>
new  <	mov rax, [rbp + 56]>

571:
old  <	; Assign g_timeStruct.tm_wday Â£temporary2831>
new  <	sub rax, 3>

572:
old  <	mov [@4752$g_timeStruct + 24], edx>
new  <>

573:
old  <>
new  < gmtime$21:>

574:
old  < gmtime$24:>
new  <	; SignedModulo Â£temporary2817 Â£temporary2816 7>

575:
old  <	; SignedDivide Â£temporary2832 totalDays 365>
new  <	xor rdx, rdx>

576:
old  <	mov rax, [rbp + 56]>
new  <	idiv qword [int8$7#]>

577:
old  <	xor rdx, rdx>
new  <>

578:
old  <	idiv qword [int8$365#]>
new  < gmtime$22:>

579:
old  <>
new  <	; IntegralToIntegral Â£temporary2818 Â£temporary2817>

580:
old  < gmtime$25:>
new  <	cmp rdx, 0>

581:
old  <	; BinaryAdd Â£temporary2833 Â£temporary2832 1970>
new  <	jge gmtime$23>

582:
old  <	add rax, 1970>
new  <	neg rdx>

583:
old  <>
new  <	neg edx>

584:
old  < gmtime$26:>
new  <>

585:
old  <	; IntegralToIntegral Â£temporary2834 Â£temporary2833>
new  < gmtime$23:>

586:
old  <	cmp rax, 0>
new  <	; Assign g_timeStruct.tm_wday Â£temporary2818>

587:
old  <	jge gmtime$27>
new  <	mov [@4748$g_timeStruct + 24], edx>

588:
old  <	neg rax>
new  <>

589:
old  <	neg eax>
new  < gmtime$24:>

590:
old  <>
new  <	; SignedDivide Â£temporary2819 totalDays 365>

591:
old  < gmtime$27:>
new  <	mov rax, [rbp + 56]>

592:
old  <	; Assign year Â£temporary2834>
new  <	xor rdx, rdx>

593:
old  <	mov [rbp + 64], eax>
new  <	idiv qword [int8$365#]>

595:
old  < gmtime$28:>
new  < gmtime$25:>

596:
old  <	; BinarySubtract Â£temporary2835 year 1969>
new  <	; BinaryAdd Â£temporary2820 Â£temporary2819 1970>

597:
old  <	mov eax, [rbp + 64]>
new  <	add rax, 1970>

598:
old  <	sub eax, 1969>
new  <>

599:
old  <>
new  < gmtime$26:>

600:
old  < gmtime$29:>
new  <	; IntegralToIntegral Â£temporary2821 Â£temporary2820>

601:
old  <	; SignedDivide leapDays Â£temporary2835 4>
new  <	cmp rax, 0>

602:
old  <	xor edx, edx>
new  <	jge gmtime$27>

603:
old  <	idiv dword [int4$4#]>
new  <	neg rax>

604:
old  <	mov [rbp + 68], eax>
new  <	neg eax>

606:
old  < gmtime$30:>
new  < gmtime$27:>

607:
old  <	; SignedModulo totalDays totalDays 365>
new  <	; Assign year Â£temporary2821>

608:
old  <	mov rax, [rbp + 56]>
new  <	mov [rbp + 64], eax>

609:
old  <	xor rdx, rdx>
new  <>

610:
old  <	idiv qword [int8$365#]>
new  < gmtime$28:>

611:
old  <	mov [rbp + 56], rdx>
new  <	; BinarySubtract Â£temporary2822 year 1969>

612:
old  <>
new  <	mov eax, [rbp + 64]>

613:
old  < gmtime$31:>
new  <	sub eax, 1969>

614:
old  <	; IntegralToIntegral Â£temporary2838 leapDays>
new  <>

615:
old  <	mov eax, [rbp + 68]>
new  < gmtime$29:>

616:
old  <	mov rbx, 4294967295>
new  <	; SignedDivide leapDays Â£temporary2822 4>

617:
old  <	and rax, rbx>
new  <	xor edx, edx>

618:
old  <	cmp eax, 0>
new  <	idiv dword [int4$4#]>

619:
old  <	jge gmtime$32>
new  <	mov [rbp + 68], eax>

620:
old  <	neg eax>
new  <>

621:
old  <	neg rax>
new  < gmtime$30:>

622:
old  <>
new  <	; SignedModulo totalDays totalDays 365>

623:
old  < gmtime$32:>
new  <	mov rax, [rbp + 56]>

624:
old  <	; BinarySubtract totalDays totalDays Â£temporary2838>
new  <	xor rdx, rdx>

625:
old  <	sub [rbp + 56], rax>
new  <	idiv qword [int8$365#]>

626:
old  <>
new  <	mov [rbp + 56], rdx>

627:
old  < gmtime$33:>
new  <>

628:
old  <	; SignedGreaterThanEqual 44 totalDays 0>
new  < gmtime$31:>

629:
old  <	cmp qword [rbp + 56], 0>
new  <	; IntegralToIntegral Â£temporary2825 leapDays>

630:
old  <	jge gmtime$44>
new  <	mov eax, [rbp + 68]>

631:
old  <>
new  <	mov rbx, 4294967295>

632:
old  < gmtime$34:>
new  <	and rax, rbx>

633:
old  <	; BinarySubtract year year 1>
new  <	cmp eax, 0>

634:
old  <	dec dword [rbp + 64]>
new  <	jge gmtime$32>

635:
old  <>
new  <	neg eax>

636:
old  < gmtime$35:>
new  <	neg rax>

637:
old  <	; PreCall 72 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

638:
old  <>
new  < gmtime$32:>

639:
old  < gmtime$36:>
new  <	; BinarySubtract totalDays totalDays Â£temporary2825>

640:
old  <	; Parameter 96 signedint year>
new  <	sub [rbp + 56], rax>

641:
old  <	mov eax, [rbp + 64]>
new  <>

642:
old  <	mov [rbp + 96], eax>
new  < gmtime$33:>

643:
old  <>
new  <	; SignedGreaterThanEqual 44 totalDays 0>

644:
old  < gmtime$37:>
new  <	cmp qword [rbp + 56], 0>

645:
old  <	; Call 72 isLeapYear 0>
new  <	jge gmtime$44>

646:
old  <	mov qword [rbp + 72], gmtime$38>
new  <>

647:
old  <	mov [rbp + 80], rbp>
new  < gmtime$34:>

648:
old  <	add rbp, 72>
new  <	; BinarySubtract year year 1>

649:
old  <	jmp @4754$isLeapYear>
new  <	dec dword [rbp + 64]>

651:
old  < gmtime$38:>
new  < gmtime$35:>

652:
old  <	; PostCall 72>
new  <	; PreCall 72 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

654:
old  < gmtime$39:>
new  < gmtime$36:>

655:
old  <	; GetReturnValue Â£temporary2842>
new  <	; Parameter 96 signedint year>

656:
old  <>
new  <	mov eax, [rbp + 64]>

657:
old  < gmtime$40:>
new  <	mov [rbp + 96], eax>

658:
old  <	; Equal 43 Â£temporary2842 0>
new  <>

659:
old  <	cmp ebx, 0>
new  < gmtime$37:>

660:
old  <	je gmtime$43>
new  <	; Call 72 isLeapYear 0>

661:
old  <>
new  <	mov qword [rbp + 72], gmtime$38>

662:
old  < gmtime$41:>
new  <	mov [rbp + 80], rbp>

663:
old  <	; BinaryAdd totalDays totalDays 366>
new  <	add rbp, 72>

664:
old  <	add qword [rbp + 56], 366>
new  <	jmp @4750$isLeapYear>

666:
old  < gmtime$42:>
new  < gmtime$38:>

667:
old  <	; Goto 44>
new  <	; PostCall 72>

668:
old  <	jmp gmtime$44>
new  <>

669:
old  <>
new  < gmtime$39:>

670:
old  < gmtime$43:>
new  <	; GetReturnValue Â£temporary2829>

671:
old  <	; BinaryAdd totalDays totalDays 365>
new  <>

672:
old  <	add qword [rbp + 56], 365>
new  < gmtime$40:>

673:
old  <>
new  <	; Equal 43 Â£temporary2829 0>

674:
old  < gmtime$44:>
new  <	cmp ebx, 0>

675:
old  <	; BinarySubtract g_timeStruct.tm_year year 1900>
new  <	je gmtime$43>

676:
old  <	mov eax, [rbp + 64]>
new  <>

677:
old  <	sub eax, 1900>
new  < gmtime$41:>

678:
old  <	mov [@4752$g_timeStruct + 20], eax>
new  <	; BinaryAdd totalDays totalDays 366>

679:
old  <>
new  <	add qword [rbp + 56], 366>

680:
old  < gmtime$45:>
new  <>

681:
old  <	; IntegralToIntegral Â£temporary2849 totalDays>
new  < gmtime$42:>

682:
old  <	mov rax, [rbp + 56]>
new  <	; Goto 44>

683:
old  <	cmp rax, 0>
new  <	jmp gmtime$44>

684:
old  <	jge gmtime$46>
new  <>

685:
old  <	neg rax>
new  < gmtime$43:>

686:
old  <	neg eax>
new  <	; BinaryAdd totalDays totalDays 365>

687:
old  <>
new  <	add qword [rbp + 56], 365>

688:
old  < gmtime$46:>
new  <>

689:
old  <	; Assign g_timeStruct.tm_yday Â£temporary2849>
new  < gmtime$44:>

690:
old  <	mov [@4752$g_timeStruct + 28], eax>
new  <	; BinarySubtract g_timeStruct.tm_year year 1900>

691:
old  <>
new  <	mov eax, [rbp + 64]>

692:
old  < gmtime$47:>
new  <	sub eax, 1900>

693:
old  <	; Assign daysOfMonths[0] 31>
new  <	mov [@4748$g_timeStruct + 20], eax>

694:
old  <	mov dword [rbp + 72], 31>
new  <>

695:
old  <>
new  < gmtime$45:>

696:
old  < gmtime$48:>
new  <	; IntegralToIntegral Â£temporary2836 totalDays>

697:
old  <	; PreCall 76 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov rax, [rbp + 56]>

698:
old  <>
new  <	cmp rax, 0>

699:
old  < gmtime$49:>
new  <	jge gmtime$46>

700:
old  <	; Parameter 100 signedint year>
new  <	neg rax>

701:
old  <	mov eax, [rbp + 64]>
new  <	neg eax>

702:
old  <	mov [rbp + 100], eax>
new  <>

703:
old  <>
new  < gmtime$46:>

704:
old  < gmtime$50:>
new  <	; Assign g_timeStruct.tm_yday Â£temporary2836>

705:
old  <	; Call 76 isLeapYear 0>
new  <	mov [@4748$g_timeStruct + 28], eax>

706:
old  <	mov qword [rbp + 76], gmtime$51>
new  <>

707:
old  <	mov [rbp + 84], rbp>
new  < gmtime$47:>

708:
old  <	add rbp, 76>
new  <	; Assign daysOfMonths[0] 31>

709:
old  <	jmp @4754$isLeapYear>
new  <	mov dword [rbp + 72], 31>

711:
old  < gmtime$51:>
new  < gmtime$48:>

712:
old  <	; PostCall 76>
new  <	; PreCall 76 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

714:
old  < gmtime$52:>
new  < gmtime$49:>

715:
old  <	; GetReturnValue Â£temporary2850>
new  <	; Parameter 100 signedint year>

716:
old  <>
new  <	mov eax, [rbp + 64]>

717:
old  < gmtime$53:>
new  <	mov [rbp + 100], eax>

718:
old  <	; Equal 56 Â£temporary2850 0>
new  <>

719:
old  <	cmp ebx, 0>
new  < gmtime$50:>

720:
old  <	je gmtime$56>
new  <	; Call 76 isLeapYear 0>

721:
old  <>
new  <	mov qword [rbp + 76], gmtime$51>

722:
old  < gmtime$54:>
new  <	mov [rbp + 84], rbp>

723:
old  <	; Assign Â£temporary2852 29>
new  <	add rbp, 76>

724:
old  <	mov eax, 29>
new  <	jmp @4750$isLeapYear>

726:
old  < gmtime$55:>
new  < gmtime$51:>

727:
old  <	; Goto 57>
new  <	; PostCall 76>

728:
old  <	jmp gmtime$57>
new  <>

729:
old  <>
new  < gmtime$52:>

730:
old  < gmtime$56:>
new  <	; GetReturnValue Â£temporary2837>

731:
old  <	; Assign Â£temporary2852 28>
new  <>

732:
old  <	mov eax, 28>
new  < gmtime$53:>

733:
old  <>
new  <	; Equal 56 Â£temporary2837 0>

734:
old  < gmtime$57:>
new  <	cmp ebx, 0>

735:
old  <	; Assign daysOfMonths[1] Â£temporary2852>
new  <	je gmtime$56>

736:
old  <	mov [rbp + 76], eax>
new  <>

737:
old  <>
new  < gmtime$54:>

738:
old  < gmtime$58:>
new  <	; Assign Â£temporary2839 29>

739:
old  <	; Assign daysOfMonths[2] 31>
new  <	mov eax, 29>

740:
old  <	mov dword [rbp + 80], 31>
new  <>

741:
old  <>
new  < gmtime$55:>

742:
old  < gmtime$59:>
new  <	; Goto 57>

743:
old  <	; Assign daysOfMonths[3] 30>
new  <	jmp gmtime$57>

744:
old  <	mov dword [rbp + 84], 30>
new  <>

745:
old  <>
new  < gmtime$56:>

746:
old  < gmtime$60:>
new  <	; Assign Â£temporary2839 28>

747:
old  <	; Assign daysOfMonths[4] 31>
new  <	mov eax, 28>

748:
old  <	mov dword [rbp + 88], 31>
new  <>

749:
old  <>
new  < gmtime$57:>

750:
old  < gmtime$61:>
new  <	; Assign daysOfMonths[1] Â£temporary2839>

751:
old  <	; Assign daysOfMonths[5] 30>
new  <	mov [rbp + 76], eax>

752:
old  <	mov dword [rbp + 92], 30>
new  <>

753:
old  <>
new  < gmtime$58:>

754:
old  < gmtime$62:>
new  <	; Assign daysOfMonths[2] 31>

755:
old  <	; Assign daysOfMonths[6] 31>
new  <	mov dword [rbp + 80], 31>

756:
old  <	mov dword [rbp + 96], 31>
new  <>

757:
old  <>
new  < gmtime$59:>

758:
old  < gmtime$63:>
new  <	; Assign daysOfMonths[3] 30>

759:
old  <	; Assign daysOfMonths[7] 31>
new  <	mov dword [rbp + 84], 30>

760:
old  <	mov dword [rbp + 100], 31>
new  <>

761:
old  <>
new  < gmtime$60:>

762:
old  < gmtime$64:>
new  <	; Assign daysOfMonths[4] 31>

763:
old  <	; Assign daysOfMonths[8] 30>
new  <	mov dword [rbp + 88], 31>

764:
old  <	mov dword [rbp + 104], 30>
new  <>

765:
old  <>
new  < gmtime$61:>

766:
old  < gmtime$65:>
new  <	; Assign daysOfMonths[5] 30>

767:
old  <	; Assign daysOfMonths[9] 31>
new  <	mov dword [rbp + 92], 30>

768:
old  <	mov dword [rbp + 108], 31>
new  <>

769:
old  <>
new  < gmtime$62:>

770:
old  < gmtime$66:>
new  <	; Assign daysOfMonths[6] 31>

771:
old  <	; Assign daysOfMonths[10] 30>
new  <	mov dword [rbp + 96], 31>

772:
old  <	mov dword [rbp + 112], 30>
new  <>

773:
old  <>
new  < gmtime$63:>

774:
old  < gmtime$67:>
new  <	; Assign daysOfMonths[7] 31>

775:
old  <	; Assign daysOfMonths[11] 31>
new  <	mov dword [rbp + 100], 31>

776:
old  <	mov dword [rbp + 116], 31>
new  <>

777:
old  <>
new  < gmtime$64:>

778:
old  < gmtime$68:>
new  <	; Assign daysOfMonths[8] 30>

779:
old  <	; Assign month 0>
new  <	mov dword [rbp + 104], 30>

780:
old  <	mov dword [rbp + 120], 0>
new  <>

781:
old  <>
new  < gmtime$65:>

782:
old  < gmtime$69:>
new  <	; Assign daysOfMonths[9] 31>

783:
old  <	; IntegralToIntegral Â£temporary2866 month>
new  <	mov dword [rbp + 108], 31>

784:
old  <	mov eax, [rbp + 120]>
new  <>

785:
old  <	mov rbx, 4294967295>
new  < gmtime$66:>

786:
old  <	and rax, rbx>
new  <	; Assign daysOfMonths[10] 30>

787:
old  <>
new  <	mov dword [rbp + 112], 30>

788:
old  < gmtime$70:>
new  <>

789:
old  <	; UnsignedMultiply Â£temporary2867 Â£temporary2866 4>
new  < gmtime$67:>

790:
old  <	xor rdx, rdx>
new  <	; Assign daysOfMonths[11] 31>

791:
old  <	mul qword [Array_4#]>
new  <	mov dword [rbp + 116], 31>

793:
old  < gmtime$71:>
new  < gmtime$68:>

794:
old  <	; BinaryAdd Â£temporary2868 daysOfMonths Â£temporary2867>
new  <	; Assign month 0>

795:
old  <	mov rsi, rbp>
new  <	mov dword [rbp + 120], 0>

796:
old  <	add rsi, 72>
new  <>

797:
old  <	add rsi, rax>
new  < gmtime$69:>

798:
old  <>
new  <	; IntegralToIntegral Â£temporary2853 month>

799:
old  < gmtime$72:>
new  <	mov eax, [rbp + 120]>

800:
old  <	; Dereference Â£temporary2865 -> Â£temporary2868 Â£temporary2868 0>
new  <	mov rbx, 4294967295>

801:
old  <>
new  <	and rax, rbx>

802:
old  < gmtime$73:>
new  <>

803:
old  <	; IntegralToIntegral Â£temporary2869 Â£temporary2865 -> Â£temporary2868>
new  < gmtime$70:>

804:
old  <	mov eax, [rsi]>
new  <	; UnsignedMultiply Â£temporary2854 Â£temporary2853 4>

805:
old  <	mov rbx, 4294967295>
new  <	xor rdx, rdx>

806:
old  <	and rax, rbx>
new  <	mul qword [Array_4#]>

807:
old  <	cmp eax, 0>
new  <>

808:
old  <	jge gmtime$74>
new  < gmtime$71:>

809:
old  <	neg eax>
new  <	; BinaryAdd Â£temporary2855 daysOfMonths Â£temporary2854>

810:
old  <	neg rax>
new  <	mov rsi, rbp>

811:
old  <>
new  <	add rsi, 72>

812:
old  < gmtime$74:>
new  <	add rsi, rax>

813:
old  <	; SignedLessThan 84 totalDays Â£temporary2869>
new  <>

814:
old  <	cmp [rbp + 56], rax>
new  < gmtime$72:>

815:
old  <	jl gmtime$84>
new  <	; Dereference Â£temporary2852 -> Â£temporary2855 Â£temporary2855 0>

817:
old  < gmtime$75:>
new  < gmtime$73:>

818:
old  <	; Assign Â£temporary2871 month>
new  <	; IntegralToIntegral Â£temporary2856 Â£temporary2852 -> Â£temporary2855>

819:
old  <	mov eax, [rbp + 120]>
new  <	mov eax, [rsi]>

820:
old  <>
new  <	mov rbx, 4294967295>

821:
old  < gmtime$76:>
new  <	and rax, rbx>

822:
old  <	; BinaryAdd month month 1>
new  <	cmp eax, 0>

823:
old  <	inc dword [rbp + 120]>
new  <	jge gmtime$74>

824:
old  <>
new  <	neg eax>

825:
old  < gmtime$77:>
new  <	neg rax>

826:
old  <	; IntegralToIntegral Â£temporary2873 Â£temporary2871>
new  <>

827:
old  <	mov rbx, 4294967295>
new  < gmtime$74:>

828:
old  <	and rax, rbx>
new  <	; SignedLessThan 84 totalDays Â£temporary2856>

829:
old  <>
new  <	cmp [rbp + 56], rax>

830:
old  < gmtime$78:>
new  <	jl gmtime$84>

831:
old  <	; UnsignedMultiply Â£temporary2874 Â£temporary2873 4>
new  <>

832:
old  <	xor rdx, rdx>
new  < gmtime$75:>

833:
old  <	mul qword [Array_4#]>
new  <	; Assign Â£temporary2858 month>

834:
old  <>
new  <	mov eax, [rbp + 120]>

835:
old  < gmtime$79:>
new  <>

836:
old  <	; BinaryAdd Â£temporary2875 daysOfMonths Â£temporary2874>
new  < gmtime$76:>

837:
old  <	mov rsi, rbp>
new  <	; BinaryAdd month month 1>

838:
old  <	add rsi, 72>
new  <	inc dword [rbp + 120]>

839:
old  <	add rsi, rax>
new  <>

840:
old  <>
new  < gmtime$77:>

841:
old  < gmtime$80:>
new  <	; IntegralToIntegral Â£temporary2860 Â£temporary2858>

842:
old  <	; Dereference Â£temporary2872 -> Â£temporary2875 Â£temporary2875 0>
new  <	mov rbx, 4294967295>

843:
old  <>
new  <	and rax, rbx>

844:
old  < gmtime$81:>
new  <>

845:
old  <	; IntegralToIntegral Â£temporary2876 Â£temporary2872 -> Â£temporary2875>
new  < gmtime$78:>

846:
old  <	mov eax, [rsi]>
new  <	; UnsignedMultiply Â£temporary2861 Â£temporary2860 4>

847:
old  <	mov rbx, 4294967295>
new  <	xor rdx, rdx>

848:
old  <	and rax, rbx>
new  <	mul qword [Array_4#]>

849:
old  <	cmp eax, 0>
new  <>

850:
old  <	jge gmtime$82>
new  < gmtime$79:>

851:
old  <	neg eax>
new  <	; BinaryAdd Â£temporary2862 daysOfMonths Â£temporary2861>

852:
old  <	neg rax>
new  <	mov rsi, rbp>

853:
old  <>
new  <	add rsi, 72>

854:
old  < gmtime$82:>
new  <	add rsi, rax>

855:
old  <	; BinarySubtract totalDays totalDays Â£temporary2876>
new  <>

856:
old  <	sub [rbp + 56], rax>
new  < gmtime$80:>

857:
old  <>
new  <	; Dereference Â£temporary2859 -> Â£temporary2862 Â£temporary2862 0>

858:
old  < gmtime$83:>
new  <>

859:
old  <	; Goto 69>
new  < gmtime$81:>

860:
old  <	jmp gmtime$69>
new  <	; IntegralToIntegral Â£temporary2863 Â£temporary2859 -> Â£temporary2862>

861:
old  <>
new  <	mov eax, [rsi]>

862:
old  < gmtime$84:>
new  <	mov rbx, 4294967295>

863:
old  <	; Assign g_timeStruct.tm_mon month>
new  <	and rax, rbx>

864:
old  <	mov eax, [rbp + 120]>
new  <	cmp eax, 0>

865:
old  <	mov [@4752$g_timeStruct + 16], eax>
new  <	jge gmtime$82>

866:
old  <>
new  <	neg eax>

867:
old  < gmtime$85:>
new  <	neg rax>

868:
old  <	; BinaryAdd Â£temporary2880 totalDays 1>
new  <>

869:
old  <	mov rax, [rbp + 56]>
new  < gmtime$82:>

870:
old  <	inc rax>
new  <	; BinarySubtract totalDays totalDays Â£temporary2863>

871:
old  <>
new  <	sub [rbp + 56], rax>

872:
old  < gmtime$86:>
new  <>

873:
old  <	; IntegralToIntegral Â£temporary2881 Â£temporary2880>
new  < gmtime$83:>

874:
old  <	cmp rax, 0>
new  <	; Goto 69>

875:
old  <	jge gmtime$87>
new  <	jmp gmtime$69>

876:
old  <	neg rax>
new  <>

877:
old  <	neg eax>
new  < gmtime$84:>

878:
old  <>
new  <	; Assign g_timeStruct.tm_mon month>

879:
old  < gmtime$87:>
new  <	mov eax, [rbp + 120]>

880:
old  <	; Assign g_timeStruct.tm_mday Â£temporary2881>
new  <	mov [@4748$g_timeStruct + 16], eax>

881:
old  <	mov [@4752$g_timeStruct + 12], eax>
new  <>

882:
old  <>
new  < gmtime$85:>

883:
old  < gmtime$88:>
new  <	; BinaryAdd Â£temporary2867 totalDays 1>

884:
old  <	; Assign g_timeStruct.tm_isdst -1>
new  <	mov rax, [rbp + 56]>

885:
old  <	mov dword [@4752$g_timeStruct + 32], -1>
new  <	inc rax>

887:
old  < gmtime$89:>
new  < gmtime$86:>

888:
old  <	; Return @4752$g_timeStruct>
new  <	; IntegralToIntegral Â£temporary2868 Â£temporary2867>

889:
old  <	mov rbx, @4752$g_timeStruct>
new  <	cmp rax, 0>

890:
old  <	mov rax, [rbp]>
new  <	jge gmtime$87>

891:
old  <	mov rdi, [rbp + 16]>
new  <	neg rax>

892:
old  <	mov rbp, [rbp + 8]>
new  <	neg eax>

893:
old  <	jmp rax>
new  <>

894:
old  <>
new  < gmtime$87:>

895:
old  < gmtime$90:>
new  <	; Assign g_timeStruct.tm_mday Â£temporary2868>

896:
old  <	; Return 0>
new  <	mov [@4748$g_timeStruct + 12], eax>

897:
old  <	mov rbx, 0>
new  <>

898:
old  <	mov rax, [rbp]>
new  < gmtime$88:>

899:
old  <	mov rdi, [rbp + 16]>
new  <	; Assign g_timeStruct.tm_isdst -1>

900:
old  <	mov rbp, [rbp + 8]>
new  <	mov dword [@4748$g_timeStruct + 32], -1>

901:
old  <	jmp rax>
new  <>

902:
old  <>
new  < gmtime$89:>

903:
old  < gmtime$91:>
new  <	; SetReturnValue>

904:
old  <	; FunctionEnd gmtime>
new  <>

905:
old  <>
new  < gmtime$90:>

906:
old  <section .data>
new  <	; Return @4748$g_timeStruct>

907:
old  <>
new  <	mov rbx, @4748$g_timeStruct>

908:
old  <container8bytes#:>
new  <	mov rax, [rbp]>

909:
old  <	; InitializerZero 8>
new  <	mov rdi, [rbp + 16]>

910:
old  <	times 8 db 0>
new  <	mov rbp, [rbp + 8]>

911:
old  <>
new  <	jmp rax>

912:
old  <section .text>
new  <>

913:
old  <>
new  < gmtime$91:>

914:
old  < difftime:>
new  <	; SetReturnValue>

915:
old  <	; BinarySubtract Â£temporary2883 time2 time1>
new  <>

916:
old  <	mov rax, [rbp + 32]>
new  < gmtime$92:>

917:
old  <	sub rax, [rbp + 24]>
new  <	; Return 0>

918:
old  <>
new  <	mov rbx, 0>

919:
old  < difftime$1:>
new  <	mov rax, [rbp]>

920:
old  <	; IntegralToFloating Â£temporary2884 Â£temporary2883>
new  <	mov rdi, [rbp + 16]>

921:
old  <	mov [container8bytes#], rax>
new  <	mov rbp, [rbp + 8]>

922:
old  <	fild qword [container8bytes#]>
new  <	jmp rax>

924:
old  < difftime$2:>
new  < gmtime$93:>

925:
old  <	; Return Â£temporary2884>
new  <	; FunctionEnd gmtime>

926:
old  <	mov rax, [rbp]>
new  <>

927:
old  <	mov rdi, [rbp + 16]>
new  <section .data>

928:
old  <	mov rbp, [rbp + 8]>
new  <>

929:
old  <	jmp rax>
new  <container8bytes#:>

930:
old  <>
new  <	; InitializerZero 8>

931:
old  < difftime$3:>
new  <	times 8 db 0>

932:
old  <	; FunctionEnd difftime>
new  <>

933:
old  <>
new  <section .text>

934:
old  <section .data>
new  <>

935:
old  <>
new  < difftime:>

936:
old  <@4768$g_timeString:>
new  <	; BinarySubtract Â£temporary2870 time2 time1>

937:
old  <	; InitializerZero 256>
new  <	mov rax, [rbp + 32]>

938:
old  <	times 256 db 0>
new  <	sub rax, [rbp + 24]>

940:
old  <section .data>
new  < difftime$1:>

941:
old  <>
new  <	; IntegralToFloating Â£temporary2871 Â£temporary2870>

942:
old  <string_Sun#:>
new  <	mov [container8bytes#], rax>

943:
old  <	; Initializer String Sun>
new  <	fild qword [container8bytes#]>

944:
old  <	db "Sun", 0>
new  <>

945:
old  <>
new  < difftime$2:>

946:
old  <section .data>
new  <	; SetReturnValue>

948:
old  <string_Mon#:>
new  < difftime$3:>

949:
old  <	; Initializer String Mon>
new  <	; Return Â£temporary2871>

950:
old  <	db "Mon", 0>
new  <	mov rax, [rbp]>

951:
old  <>
new  <	mov rdi, [rbp + 16]>

952:
old  <section .data>
new  <	mov rbp, [rbp + 8]>

953:
old  <>
new  <	jmp rax>

954:
old  <string_Tue#:>
new  <>

955:
old  <	; Initializer String Tue>
new  < difftime$4:>

956:
old  <	db "Tue", 0>
new  <	; FunctionEnd difftime>

960:
old  <string_Wed#:>
new  <@4764$g_timeString:>

961:
old  <	; Initializer String Wed>
new  <	; InitializerZero 256>

962:
old  <	db "Wed", 0>
new  <	times 256 db 0>

966:
old  <string_Thu#:>
new  <string_Sun#:>

967:
old  <	; Initializer String Thu>
new  <	; Initializer String Sun>

968:
old  <	db "Thu", 0>
new  <	db "Sun", 0>

972:
old  <string_Fri#:>
new  <string_Mon#:>

973:
old  <	; Initializer String Fri>
new  <	; Initializer String Mon>

974:
old  <	db "Fri", 0>
new  <	db "Mon", 0>

978:
old  <string_Sat#:>
new  <string_Tue#:>

979:
old  <	; Initializer String Sat>
new  <	; Initializer String Tue>

980:
old  <	db "Sat", 0>
new  <	db "Tue", 0>

984:
old  <@4769$g_defaultShortDayList:>
new  <string_Wed#:>

985:
old  <	; Initializer Pointer string_Sun#>
new  <	; Initializer String Wed>

986:
old  <	dq string_Sun#>
new  <	db "Wed", 0>

987:
old  <	; Initializer Pointer string_Mon#>
new  <>

988:
old  <	dq string_Mon#>
new  <section .data>

989:
old  <	; Initializer Pointer string_Tue#>
new  <>

990:
old  <	dq string_Tue#>
new  <string_Thu#:>

991:
old  <	; Initializer Pointer string_Wed#>
new  <	; Initializer String Thu>

992:
old  <	dq string_Wed#>
new  <	db "Thu", 0>

993:
old  <	; Initializer Pointer string_Thu#>
new  <>

994:
old  <	dq string_Thu#>
new  <section .data>

995:
old  <	; Initializer Pointer string_Fri#>
new  <>

996:
old  <	dq string_Fri#>
new  <string_Fri#:>

997:
old  <	; Initializer Pointer string_Sat#>
new  <	; Initializer String Fri>

998:
old  <	dq string_Sat#>
new  <	db "Fri", 0>

1002:
old  <string_Sunday#:>
new  <string_Sat#:>

1003:
old  <	; Initializer String Sunday>
new  <	; Initializer String Sat>

1004:
old  <	db "Sunday", 0>
new  <	db "Sat", 0>

1008:
old  <string_Monday#:>
new  <@4765$g_defaultShortDayList:>

1009:
old  <	; Initializer String Monday>
new  <	; Initializer Pointer string_Sun#>

1010:
old  <	db "Monday", 0>
new  <	dq string_Sun#>

1011:
old  <>
new  <	; Initializer Pointer string_Mon#>

1012:
old  <section .data>
new  <	dq string_Mon#>

1013:
old  <>
new  <	; Initializer Pointer string_Tue#>

1014:
old  <string_Tuesday#:>
new  <	dq string_Tue#>

1015:
old  <	; Initializer String Tuesday>
new  <	; Initializer Pointer string_Wed#>

1016:
old  <	db "Tuesday", 0>
new  <	dq string_Wed#>

1017:
old  <>
new  <	; Initializer Pointer string_Thu#>

1018:
old  <section .data>
new  <	dq string_Thu#>

1019:
old  <>
new  <	; Initializer Pointer string_Fri#>

1020:
old  <string_Wednesday#:>
new  <	dq string_Fri#>

1021:
old  <	; Initializer String Wednesday>
new  <	; Initializer Pointer string_Sat#>

1022:
old  <	db "Wednesday", 0>
new  <	dq string_Sat#>

1026:
old  <string_Thursday#:>
new  <string_Sunday#:>

1027:
old  <	; Initializer String Thursday>
new  <	; Initializer String Sunday>

1028:
old  <	db "Thursday", 0>
new  <	db "Sunday", 0>

1032:
old  <string_Friday#:>
new  <string_Monday#:>

1033:
old  <	; Initializer String Friday>
new  <	; Initializer String Monday>

1034:
old  <	db "Friday", 0>
new  <	db "Monday", 0>

1038:
old  <string_Saturday#:>
new  <string_Tuesday#:>

1039:
old  <	; Initializer String Saturday>
new  <	; Initializer String Tuesday>

1040:
old  <	db "Saturday", 0>
new  <	db "Tuesday", 0>

1044:
old  <@4770$g_defaultLongDayList:>
new  <string_Wednesday#:>

1045:
old  <	; Initializer Pointer string_Sunday#>
new  <	; Initializer String Wednesday>

1046:
old  <	dq string_Sunday#>
new  <	db "Wednesday", 0>

1047:
old  <	; Initializer Pointer string_Monday#>
new  <>

1048:
old  <	dq string_Monday#>
new  <section .data>

1049:
old  <	; Initializer Pointer string_Tuesday#>
new  <>

1050:
old  <	dq string_Tuesday#>
new  <string_Thursday#:>

1051:
old  <	; Initializer Pointer string_Wednesday#>
new  <	; Initializer String Thursday>

1052:
old  <	dq string_Wednesday#>
new  <	db "Thursday", 0>

1053:
old  <	; Initializer Pointer string_Thursday#>
new  <>

1054:
old  <	dq string_Thursday#>
new  <section .data>

1055:
old  <	; Initializer Pointer string_Friday#>
new  <>

1056:
old  <	dq string_Friday#>
new  <string_Friday#:>

1057:
old  <	; Initializer Pointer string_Saturday#>
new  <	; Initializer String Friday>

1058:
old  <	dq string_Saturday#>
new  <	db "Friday", 0>

1062:
old  <string_Jan#:>
new  <string_Saturday#:>

1063:
old  <	; Initializer String Jan>
new  <	; Initializer String Saturday>

1064:
old  <	db "Jan", 0>
new  <	db "Saturday", 0>

1068:
old  <string_Feb#:>
new  <@4766$g_defaultLongDayList:>

1069:
old  <	; Initializer String Feb>
new  <	; Initializer Pointer string_Sunday#>

1070:
old  <	db "Feb", 0>
new  <	dq string_Sunday#>

1071:
old  <>
new  <	; Initializer Pointer string_Monday#>

1072:
old  <section .data>
new  <	dq string_Monday#>

1073:
old  <>
new  <	; Initializer Pointer string_Tuesday#>

1074:
old  <string_Mar#:>
new  <	dq string_Tuesday#>

1075:
old  <	; Initializer String Mar>
new  <	; Initializer Pointer string_Wednesday#>

1076:
old  <	db "Mar", 0>
new  <	dq string_Wednesday#>

1077:
old  <>
new  <	; Initializer Pointer string_Thursday#>

1078:
old  <section .data>
new  <	dq string_Thursday#>

1079:
old  <>
new  <	; Initializer Pointer string_Friday#>

1080:
old  <string_Apr#:>
new  <	dq string_Friday#>

1081:
old  <	; Initializer String Apr>
new  <	; Initializer Pointer string_Saturday#>

1082:
old  <	db "Apr", 0>
new  <	dq string_Saturday#>

1086:
old  <string_May#:>
new  <string_Jan#:>

1087:
old  <	; Initializer String May>
new  <	; Initializer String Jan>

1088:
old  <	db "May", 0>
new  <	db "Jan", 0>

1092:
old  <string_Jun#:>
new  <string_Feb#:>

1093:
old  <	; Initializer String Jun>
new  <	; Initializer String Feb>

1094:
old  <	db "Jun", 0>
new  <	db "Feb", 0>

1098:
old  <string_Jul#:>
new  <string_Mar#:>

1099:
old  <	; Initializer String Jul>
new  <	; Initializer String Mar>

1100:
old  <	db "Jul", 0>
new  <	db "Mar", 0>

1104:
old  <string_Aug#:>
new  <string_Apr#:>

1105:
old  <	; Initializer String Aug>
new  <	; Initializer String Apr>

1106:
old  <	db "Aug", 0>
new  <	db "Apr", 0>

1110:
old  <string_Sep#:>
new  <string_May#:>

1111:
old  <	; Initializer String Sep>
new  <	; Initializer String May>

1112:
old  <	db "Sep", 0>
new  <	db "May", 0>

1116:
old  <string_Oct#:>
new  <string_Jun#:>

1117:
old  <	; Initializer String Oct>
new  <	; Initializer String Jun>

1118:
old  <	db "Oct", 0>
new  <	db "Jun", 0>

1122:
old  <string_Nov#:>
new  <string_Jul#:>

1123:
old  <	; Initializer String Nov>
new  <	; Initializer String Jul>

1124:
old  <	db "Nov", 0>
new  <	db "Jul", 0>

1128:
old  <string_Dec#:>
new  <string_Aug#:>

1129:
old  <	; Initializer String Dec>
new  <	; Initializer String Aug>

1130:
old  <	db "Dec", 0>
new  <	db "Aug", 0>

1134:
old  <@4771$g_defaultShortMonthList:>
new  <string_Sep#:>

1135:
old  <	; Initializer Pointer string_Jan#>
new  <	; Initializer String Sep>

1136:
old  <	dq string_Jan#>
new  <	db "Sep", 0>

1137:
old  <	; Initializer Pointer string_Feb#>
new  <>

1138:
old  <	dq string_Feb#>
new  <section .data>

1139:
old  <	; Initializer Pointer string_Mar#>
new  <>

1140:
old  <	dq string_Mar#>
new  <string_Oct#:>

1141:
old  <	; Initializer Pointer string_Apr#>
new  <	; Initializer String Oct>

1142:
old  <	dq string_Apr#>
new  <	db "Oct", 0>

1143:
old  <	; Initializer Pointer string_May#>
new  <>

1144:
old  <	dq string_May#>
new  <section .data>

1145:
old  <	; Initializer Pointer string_Jun#>
new  <>

1146:
old  <	dq string_Jun#>
new  <string_Nov#:>

1147:
old  <	; Initializer Pointer string_Jul#>
new  <	; Initializer String Nov>

1148:
old  <	dq string_Jul#>
new  <	db "Nov", 0>

1149:
old  <	; Initializer Pointer string_Aug#>
new  <>

1150:
old  <	dq string_Aug#>
new  <section .data>

1151:
old  <	; Initializer Pointer string_Sep#>
new  <>

1152:
old  <	dq string_Sep#>
new  <string_Dec#:>

1153:
old  <	; Initializer Pointer string_Oct#>
new  <	; Initializer String Dec>

1154:
old  <	dq string_Oct#>
new  <	db "Dec", 0>

1155:
old  <	; Initializer Pointer string_Nov#>
new  <>

1156:
old  <	dq string_Nov#>
new  <section .data>

1157:
old  <	; Initializer Pointer string_Dec#>
new  <>

1158:
old  <	dq string_Dec#>
new  <@4767$g_defaultShortMonthList:>

1159:
old  <>
new  <	; Initializer Pointer string_Jan#>

1160:
old  <section .data>
new  <	dq string_Jan#>

1161:
old  <>
new  <	; Initializer Pointer string_Feb#>

1162:
old  <string_January#:>
new  <	dq string_Feb#>

1163:
old  <	; Initializer String January>
new  <	; Initializer Pointer string_Mar#>

1164:
old  <	db "January", 0>
new  <	dq string_Mar#>

1165:
old  <>
new  <	; Initializer Pointer string_Apr#>

1166:
old  <section .data>
new  <	dq string_Apr#>

1167:
old  <>
new  <	; Initializer Pointer string_May#>

1168:
old  <string_February#:>
new  <	dq string_May#>

1169:
old  <	; Initializer String February>
new  <	; Initializer Pointer string_Jun#>

1170:
old  <	db "February", 0>
new  <	dq string_Jun#>

1171:
old  <>
new  <	; Initializer Pointer string_Jul#>

1172:
old  <section .data>
new  <	dq string_Jul#>

1173:
old  <>
new  <	; Initializer Pointer string_Aug#>

1174:
old  <string_March#:>
new  <	dq string_Aug#>

1175:
old  <	; Initializer String March>
new  <	; Initializer Pointer string_Sep#>

1176:
old  <	db "March", 0>
new  <	dq string_Sep#>

1177:
old  <>
new  <	; Initializer Pointer string_Oct#>

1178:
old  <section .data>
new  <	dq string_Oct#>

1179:
old  <>
new  <	; Initializer Pointer string_Nov#>

1180:
old  <string_April#:>
new  <	dq string_Nov#>

1181:
old  <	; Initializer String April>
new  <	; Initializer Pointer string_Dec#>

1182:
old  <	db "April", 0>
new  <	dq string_Dec#>

1186:
old  <string_June#:>
new  <string_January#:>

1187:
old  <	; Initializer String June>
new  <	; Initializer String January>

1188:
old  <	db "June", 0>
new  <	db "January", 0>

1192:
old  <string_July#:>
new  <string_February#:>

1193:
old  <	; Initializer String July>
new  <	; Initializer String February>

1194:
old  <	db "July", 0>
new  <	db "February", 0>

1198:
old  <string_August#:>
new  <string_March#:>

1199:
old  <	; Initializer String August>
new  <	; Initializer String March>

1200:
old  <	db "August", 0>
new  <	db "March", 0>

1204:
old  <string_September#:>
new  <string_April#:>

1205:
old  <	; Initializer String September>
new  <	; Initializer String April>

1206:
old  <	db "September", 0>
new  <	db "April", 0>

1210:
old  <string_October#:>
new  <string_June#:>

1211:
old  <	; Initializer String October>
new  <	; Initializer String June>

1212:
old  <	db "October", 0>
new  <	db "June", 0>

1216:
old  <string_November#:>
new  <string_July#:>

1217:
old  <	; Initializer String November>
new  <	; Initializer String July>

1218:
old  <	db "November", 0>
new  <	db "July", 0>

1222:
old  <string_December#:>
new  <string_August#:>

1223:
old  <	; Initializer String December>
new  <	; Initializer String August>

1224:
old  <	db "December", 0>
new  <	db "August", 0>

1228:
old  <@4772$g_defaultLongMonthList:>
new  <string_September#:>

1229:
old  <	; Initializer Pointer string_January#>
new  <	; Initializer String September>

1230:
old  <	dq string_January#>
new  <	db "September", 0>

1231:
old  <	; Initializer Pointer string_February#>
new  <>

1232:
old  <	dq string_February#>
new  <section .data>

1233:
old  <	; Initializer Pointer string_March#>
new  <>

1234:
old  <	dq string_March#>
new  <string_October#:>

1235:
old  <	; Initializer Pointer string_April#>
new  <	; Initializer String October>

1236:
old  <	dq string_April#>
new  <	db "October", 0>

1237:
old  <	; Initializer Pointer string_May#>
new  <>

1238:
old  <	dq string_May#>
new  <section .data>

1239:
old  <	; Initializer Pointer string_June#>
new  <>

1240:
old  <	dq string_June#>
new  <string_November#:>

1241:
old  <	; Initializer Pointer string_July#>
new  <	; Initializer String November>

1242:
old  <	dq string_July#>
new  <	db "November", 0>

1243:
old  <	; Initializer Pointer string_August#>
new  <>

1244:
old  <	dq string_August#>
new  <section .data>

1245:
old  <	; Initializer Pointer string_September#>
new  <>

1246:
old  <	dq string_September#>
new  <string_December#:>

1247:
old  <	; Initializer Pointer string_October#>
new  <	; Initializer String December>

1248:
old  <	dq string_October#>
new  <	db "December", 0>

1249:
old  <	; Initializer Pointer string_November#>
new  <>

1250:
old  <	dq string_November#>
new  <section .data>

1251:
old  <	; Initializer Pointer string_December#>
new  <>

1252:
old  <	dq string_December#>
new  <@4768$g_defaultLongMonthList:>

1253:
old  <>
new  <	; Initializer Pointer string_January#>

1254:
old  <section .data>
new  <	dq string_January#>

1255:
old  <>
new  <	; Initializer Pointer string_February#>

1256:
old  <string_25s2025s2025i202502i3A2502i3A2502i2025i#:>
new  <	dq string_February#>

1257:
old  <	; Initializer String %s %s %i %02i:%02i:%02i %i>
new  <	; Initializer Pointer string_March#>

1258:
old  <	db "%s %s %i %02i:%02i:%02i %i", 0>
new  <	dq string_March#>

1259:
old  <>
new  <	; Initializer Pointer string_April#>

1260:
old  <section .data>
new  <	dq string_April#>

1261:
old  <>
new  <	; Initializer Pointer string_May#>

1262:
old  <int8$8#:>
new  <	dq string_May#>

1263:
old  <	; Initializer Pointer 8>
new  <	; Initializer Pointer string_June#>

1264:
old  <	dq 8>
new  <	dq string_June#>

1265:
old  <>
new  <	; Initializer Pointer string_July#>

1266:
old  <section .text>
new  <	dq string_July#>

1267:
old  <>
new  <	; Initializer Pointer string_August#>

1268:
old  < asctime:>
new  <	dq string_August#>

1269:
old  <	; Assign localeConvPtr 0>
new  <	; Initializer Pointer string_September#>

1270:
old  <	mov qword [rbp + 32], 0>
new  <	dq string_September#>

1271:
old  <>
new  <	; Initializer Pointer string_October#>

1272:
old  < asctime$1:>
new  <	dq string_October#>

1273:
old  <	; Equal 5 localeConvPtr 0>
new  <	; Initializer Pointer string_November#>

1274:
old  <	cmp qword [rbp + 32], 0>
new  <	dq string_November#>

1275:
old  <	je asctime$5>
new  <	; Initializer Pointer string_December#>

1276:
old  <>
new  <	dq string_December#>

1277:
old  < asctime$2:>
new  <>

1278:
old  <	; Dereference Â£temporary2886 -> localeConvPtr localeConvPtr 0>
new  <section .data>

1279:
old  <	mov rsi, [rbp + 32]>
new  <>

1280:
old  <>
new  <string_25s2025s2025i202502i3A2502i3A2502i2025i#:>

1281:
old  < asctime$3:>
new  <	; Initializer String %s %s %i %02i:%02i:%02i %i>

1282:
old  <	; Assign Â£temporary2887 Â£temporary2886 -> localeConvPtr>
new  <	db "%s %s %i %02i:%02i:%02i %i", 0>

1283:
old  <	mov rax, [rsi + 8]>
new  <>

1284:
old  <>
new  <section .data>

1285:
old  < asctime$4:>
new  <>

1286:
old  <	; Goto 6>
new  <int8$8#:>

1287:
old  <	jmp asctime$6>
new  <	; Initializer Pointer 8>

1288:
old  <>
new  <	dq 8>

1289:
old  < asctime$5:>
new  <>

1290:
old  <	; Assign Â£temporary2887 0>
new  <section .text>

1291:
old  <	mov rax, 0>
new  <>

1292:
old  <>
new  < asctime:>

1293:
old  < asctime$6:>
new  <	; Assign localeConvPtr 0>

1294:
old  <	; Assign shortDayList Â£temporary2887>
new  <	mov qword [rbp + 32], 0>

1295:
old  <	mov [rbp + 40], rax>
new  <>

1296:
old  <>
new  < asctime$1:>

1297:
old  < asctime$7:>
new  <	; Equal 5 localeConvPtr 0>

1298:
old  <	; Equal 11 localeConvPtr 0>
new  <	cmp qword [rbp + 32], 0>

1299:
old  <	cmp qword [rbp + 32], 0>
new  <	je asctime$5>

1300:
old  <	je asctime$11>
new  <>

1301:
old  <>
new  < asctime$2:>

1302:
old  < asctime$8:>
new  <	; Dereference Â£temporary2873 -> localeConvPtr localeConvPtr 0>

1303:
old  <	; Dereference Â£temporary2889 -> localeConvPtr localeConvPtr 0>
new  <	mov rsi, [rbp + 32]>

1304:
old  <	mov rsi, [rbp + 32]>
new  <>

1305:
old  <>
new  < asctime$3:>

1306:
old  < asctime$9:>
new  <	; Assign Â£temporary2874 Â£temporary2873 -> localeConvPtr>

1307:
old  <	; Assign Â£temporary2890 Â£temporary2889 -> localeConvPtr>
new  <	mov rax, [rsi + 8]>

1308:
old  <	mov rax, [rsi + 24]>
new  <>

1309:
old  <>
new  < asctime$4:>

1310:
old  < asctime$10:>
new  <	; Goto 6>

1311:
old  <	; Goto 12>
new  <	jmp asctime$6>

1312:
old  <	jmp asctime$12>
new  <>

1313:
old  <>
new  < asctime$5:>

1314:
old  < asctime$11:>
new  <	; Assign Â£temporary2874 0>

1315:
old  <	; Assign Â£temporary2890 0>
new  <	mov rax, 0>

1316:
old  <	mov rax, 0>
new  <>

1317:
old  <>
new  < asctime$6:>

1318:
old  < asctime$12:>
new  <	; Assign shortDayList Â£temporary2874>

1319:
old  <	; Assign shortMonthList Â£temporary2890>
new  <	mov [rbp + 40], rax>

1320:
old  <	mov [rbp + 48], rax>
new  <>

1321:
old  <>
new  < asctime$7:>

1322:
old  < asctime$13:>
new  <	; Equal 11 localeConvPtr 0>

1323:
old  <	; Equal 16 shortDayList 0>
new  <	cmp qword [rbp + 32], 0>

1324:
old  <	cmp qword [rbp + 40], 0>
new  <	je asctime$11>

1325:
old  <	je asctime$16>
new  <>

1326:
old  <>
new  < asctime$8:>

1327:
old  < asctime$14:>
new  <	; Dereference Â£temporary2876 -> localeConvPtr localeConvPtr 0>

1328:
old  <	; Assign Â£temporary2892 shortDayList>
new  <	mov rsi, [rbp + 32]>

1329:
old  <	mov rax, [rbp + 40]>
new  <>

1330:
old  <>
new  < asctime$9:>

1331:
old  < asctime$15:>
new  <	; Assign Â£temporary2877 Â£temporary2876 -> localeConvPtr>

1332:
old  <	; Goto 17>
new  <	mov rax, [rsi + 24]>

1333:
old  <	jmp asctime$17>
new  <>

1334:
old  <>
new  < asctime$10:>

1335:
old  < asctime$16:>
new  <	; Goto 12>

1336:
old  <	; Assign Â£temporary2892 g_defaultShortDayList>
new  <	jmp asctime$12>

1337:
old  <	mov rax, @4769$g_defaultShortDayList>
new  <>

1338:
old  <>
new  < asctime$11:>

1339:
old  < asctime$17:>
new  <	; Assign Â£temporary2877 0>

1340:
old  <	; Assign shortDayList Â£temporary2892>
new  <	mov rax, 0>

1341:
old  <	mov [rbp + 40], rax>
new  <>

1342:
old  <>
new  < asctime$12:>

1343:
old  < asctime$18:>
new  <	; Assign shortMonthList Â£temporary2877>

1344:
old  <	; Equal 21 shortMonthList 0>
new  <	mov [rbp + 48], rax>

1345:
old  <	cmp qword [rbp + 48], 0>
new  <>

1346:
old  <	je asctime$21>
new  < asctime$13:>

1347:
old  <>
new  <	; Equal 16 shortDayList 0>

1348:
old  < asctime$19:>
new  <	cmp qword [rbp + 40], 0>

1349:
old  <	; Assign Â£temporary2894 shortMonthList>
new  <	je asctime$16>

1350:
old  <	mov rax, [rbp + 48]>
new  <>

1351:
old  <>
new  < asctime$14:>

1352:
old  < asctime$20:>
new  <	; Assign Â£temporary2879 shortDayList>

1353:
old  <	; Goto 22>
new  <	mov rax, [rbp + 40]>

1354:
old  <	jmp asctime$22>
new  <>

1355:
old  <>
new  < asctime$15:>

1356:
old  < asctime$21:>
new  <	; Goto 17>

1357:
old  <	; Assign Â£temporary2894 g_defaultShortMonthList>
new  <	jmp asctime$17>

1358:
old  <	mov rax, @4771$g_defaultShortMonthList>
new  <>

1359:
old  <>
new  < asctime$16:>

1360:
old  < asctime$22:>
new  <	; Assign Â£temporary2879 g_defaultShortDayList>

1361:
old  <	; Assign shortMonthList Â£temporary2894>
new  <	mov rax, @4765$g_defaultShortDayList>

1362:
old  <	mov [rbp + 48], rax>
new  <>

1363:
old  <>
new  < asctime$17:>

1364:
old  < asctime$23:>
new  <	; Assign shortDayList Â£temporary2879>

1365:
old  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov [rbp + 40], rax>

1367:
old  < asctime$24:>
new  < asctime$18:>

1368:
old  <	; Parameter 80 pointer g_timeString>
new  <	; Equal 21 shortMonthList 0>

1369:
old  <	mov qword [rbp + 80], @4768$g_timeString>
new  <	cmp qword [rbp + 48], 0>

1370:
old  <>
new  <	je asctime$21>

1371:
old  < asctime$25:>
new  <>

1372:
old  <	; Parameter 88 pointer "%s %s %i %02i:%02i:%02i %i">
new  < asctime$19:>

1373:
old  <	mov qword [rbp + 88], string_25s2025s2025i202502i3A2502i3A2502i2025i#>
new  <	; Assign Â£temporary2881 shortMonthList>

1374:
old  <>
new  <	mov rax, [rbp + 48]>

1375:
old  < asctime$26:>
new  <>

1376:
old  <	; Dereference Â£temporary2895 -> tp tp 0>
new  < asctime$20:>

1377:
old  <	mov rsi, [rbp + 24]>
new  <	; Goto 22>

1378:
old  <>
new  <	jmp asctime$22>

1379:
old  < asctime$27:>
new  <>

1380:
old  <	; IntegralToIntegral Â£temporary2897 Â£temporary2895 -> tp>
new  < asctime$21:>

1381:
old  <	mov eax, [rsi + 24]>
new  <	; Assign Â£temporary2881 g_defaultShortMonthList>

1382:
old  <	mov rbx, 4294967295>
new  <	mov rax, @4767$g_defaultShortMonthList>

1383:
old  <	and rax, rbx>
new  <>

1384:
old  <>
new  < asctime$22:>

1385:
old  < asctime$28:>
new  <	; Assign shortMonthList Â£temporary2881>

1386:
old  <	; UnsignedMultiply Â£temporary2898 Â£temporary2897 8>
new  <	mov [rbp + 48], rax>

1387:
old  <	xor rdx, rdx>
new  <>

1388:
old  <	mul qword [int8$8#]>
new  < asctime$23:>

1389:
old  <>
new  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1390:
old  < asctime$29:>
new  <>

1391:
old  <	; BinaryAdd Â£temporary2899 shortDayList Â£temporary2898>
new  < asctime$24:>

1392:
old  <	mov rsi, [rbp + 40]>
new  <	; Parameter 80 pointer g_timeString>

1393:
old  <	add rsi, rax>
new  <	mov qword [rbp + 80], @4764$g_timeString>

1395:
old  < asctime$30:>
new  < asctime$25:>

1396:
old  <	; Dereference Â£temporary2896 -> Â£temporary2899 Â£temporary2899 0>
new  <	; Parameter 88 pointer "%s %s %i %02i:%02i:%02i %i">

1397:
old  <>
new  <	mov qword [rbp + 88], string_25s2025s2025i202502i3A2502i3A2502i2025i#>

1398:
old  < asctime$31:>
new  <>

1399:
old  <	; Parameter 96 pointer Â£temporary2896 -> Â£temporary2899>
new  < asctime$26:>

1400:
old  <	mov rax, [rsi]>
new  <	; Dereference Â£temporary2882 -> tp tp 0>

1401:
old  <	mov [rbp + 96], rax>
new  <	mov rsi, [rbp + 24]>

1403:
old  < asctime$32:>
new  < asctime$27:>

1404:
old  <	; Dereference Â£temporary2900 -> tp tp 0>
new  <	; IntegralToIntegral Â£temporary2884 Â£temporary2882 -> tp>

1405:
old  <	mov rsi, [rbp + 24]>
new  <	mov eax, [rsi + 24]>

1406:
old  <>
new  <	mov rbx, 4294967295>

1407:
old  < asctime$33:>
new  <	and rax, rbx>

1408:
old  <	; IntegralToIntegral Â£temporary2902 Â£temporary2900 -> tp>
new  <>

1409:
old  <	mov eax, [rsi + 16]>
new  < asctime$28:>

1410:
old  <	mov rbx, 4294967295>
new  <	; UnsignedMultiply Â£temporary2885 Â£temporary2884 8>

1411:
old  <	and rax, rbx>
new  <	xor rdx, rdx>

1412:
old  <>
new  <	mul qword [int8$8#]>

1413:
old  < asctime$34:>
new  <>

1414:
old  <	; UnsignedMultiply Â£temporary2903 Â£temporary2902 8>
new  < asctime$29:>

1415:
old  <	xor rdx, rdx>
new  <	; BinaryAdd Â£temporary2886 shortDayList Â£temporary2885>

1416:
old  <	mul qword [int8$8#]>
new  <	mov rsi, [rbp + 40]>

1417:
old  <>
new  <	add rsi, rax>

1418:
old  < asctime$35:>
new  <>

1419:
old  <	; BinaryAdd Â£temporary2904 shortMonthList Â£temporary2903>
new  < asctime$30:>

1420:
old  <	mov rsi, [rbp + 48]>
new  <	; Dereference Â£temporary2883 -> Â£temporary2886 Â£temporary2886 0>

1421:
old  <	add rsi, rax>
new  <>

1422:
old  <>
new  < asctime$31:>

1423:
old  < asctime$36:>
new  <	; Parameter 96 pointer Â£temporary2883 -> Â£temporary2886>

1424:
old  <	; Dereference Â£temporary2901 -> Â£temporary2904 Â£temporary2904 0>
new  <	mov rax, [rsi]>

1425:
old  <>
new  <	mov [rbp + 96], rax>

1426:
old  < asctime$37:>
new  <>

1427:
old  <	; Parameter 104 pointer Â£temporary2901 -> Â£temporary2904>
new  < asctime$32:>

1428:
old  <	mov rax, [rsi]>
new  <	; Dereference Â£temporary2887 -> tp tp 0>

1429:
old  <	mov [rbp + 104], rax>
new  <	mov rsi, [rbp + 24]>

1431:
old  < asctime$38:>
new  < asctime$33:>

1432:
old  <	; Dereference Â£temporary2905 -> tp tp 0>
new  <	; IntegralToIntegral Â£temporary2889 Â£temporary2887 -> tp>

1433:
old  <	mov rsi, [rbp + 24]>
new  <	mov eax, [rsi + 16]>

1434:
old  <>
new  <	mov rbx, 4294967295>

1435:
old  < asctime$39:>
new  <	and rax, rbx>

1436:
old  <	; Parameter 112 signedint Â£temporary2905 -> tp>
new  <>

1437:
old  <	mov eax, [rsi + 12]>
new  < asctime$34:>

1438:
old  <	mov [rbp + 112], eax>
new  <	; UnsignedMultiply Â£temporary2890 Â£temporary2889 8>

1439:
old  <>
new  <	xor rdx, rdx>

1440:
old  < asctime$40:>
new  <	mul qword [int8$8#]>

1441:
old  <	; Dereference Â£temporary2906 -> tp tp 0>
new  <>

1442:
old  <	mov rsi, [rbp + 24]>
new  < asctime$35:>

1443:
old  <>
new  <	; BinaryAdd Â£temporary2891 shortMonthList Â£temporary2890>

1444:
old  < asctime$41:>
new  <	mov rsi, [rbp + 48]>

1445:
old  <	; Parameter 116 signedint Â£temporary2906 -> tp>
new  <	add rsi, rax>

1446:
old  <	mov eax, [rsi + 8]>
new  <>

1447:
old  <	mov [rbp + 116], eax>
new  < asctime$36:>

1448:
old  <>
new  <	; Dereference Â£temporary2888 -> Â£temporary2891 Â£temporary2891 0>

1449:
old  < asctime$42:>
new  <>

1450:
old  <	; Dereference Â£temporary2907 -> tp tp 0>
new  < asctime$37:>

1451:
old  <	mov rsi, [rbp + 24]>
new  <	; Parameter 104 pointer Â£temporary2888 -> Â£temporary2891>

1452:
old  <>
new  <	mov rax, [rsi]>

1453:
old  < asctime$43:>
new  <	mov [rbp + 104], rax>

1454:
old  <	; Parameter 120 signedint Â£temporary2907 -> tp>
new  <>

1455:
old  <	mov eax, [rsi + 4]>
new  < asctime$38:>

1456:
old  <	mov [rbp + 120], eax>
new  <	; Dereference Â£temporary2892 -> tp tp 0>

1457:
old  <>
new  <	mov rsi, [rbp + 24]>

1458:
old  < asctime$44:>
new  <>

1459:
old  <	; Dereference Â£temporary2908 -> tp tp 0>
new  < asctime$39:>

1460:
old  <	mov rsi, [rbp + 24]>
new  <	; Parameter 112 signedint Â£temporary2892 -> tp>

1461:
old  <>
new  <	mov eax, [rsi + 12]>

1462:
old  < asctime$45:>
new  <	mov [rbp + 112], eax>

1463:
old  <	; Parameter 124 signedint Â£temporary2908 -> tp>
new  <>

1464:
old  <	mov eax, [rsi]>
new  < asctime$40:>

1465:
old  <	mov [rbp + 124], eax>
new  <	; Dereference Â£temporary2893 -> tp tp 0>

1466:
old  <>
new  <	mov rsi, [rbp + 24]>

1467:
old  < asctime$46:>
new  <>

1468:
old  <	; Dereference Â£temporary2909 -> tp tp 0>
new  < asctime$41:>

1469:
old  <	mov rsi, [rbp + 24]>
new  <	; Parameter 116 signedint Â£temporary2893 -> tp>

1470:
old  <>
new  <	mov eax, [rsi + 8]>

1471:
old  < asctime$47:>
new  <	mov [rbp + 116], eax>

1472:
old  <	; BinaryAdd Â£temporary2910 Â£temporary2909 -> tp 1900>
new  <>

1473:
old  <	mov eax, [rsi + 20]>
new  < asctime$42:>

1474:
old  <	add eax, 1900>
new  <	; Dereference Â£temporary2894 -> tp tp 0>

1475:
old  <>
new  <	mov rsi, [rbp + 24]>

1476:
old  < asctime$48:>
new  <>

1477:
old  <	; Parameter 128 signedint Â£temporary2910>
new  < asctime$43:>

1478:
old  <	mov [rbp + 128], eax>
new  <	; Parameter 120 signedint Â£temporary2894 -> tp>

1479:
old  <>
new  <	mov eax, [rsi + 4]>

1480:
old  < asctime$49:>
new  <	mov [rbp + 120], eax>

1481:
old  <	; Call 56 sprintf 36>
new  <>

1482:
old  <	mov qword [rbp + 56], asctime$50>
new  < asctime$44:>

1483:
old  <	mov [rbp + 64], rbp>
new  <	; Dereference Â£temporary2895 -> tp tp 0>

1484:
old  <	add rbp, 56>
new  <	mov rsi, [rbp + 24]>

1485:
old  <	mov rdi, rbp>
new  <>

1486:
old  <	add rdi, 36>
new  < asctime$45:>

1487:
old  <	jmp sprintf>
new  <	; Parameter 124 signedint Â£temporary2895 -> tp>

1488:
old  <>
new  <	mov eax, [rsi]>

1489:
old  < asctime$50:>
new  <	mov [rbp + 124], eax>

1490:
old  <	; PostCall 56>
new  <>

1491:
old  <>
new  < asctime$46:>

1492:
old  < asctime$51:>
new  <	; Dereference Â£temporary2896 -> tp tp 0>

1493:
old  <	; Return g_timeString>
new  <	mov rsi, [rbp + 24]>

1494:
old  <	mov rbx, @4768$g_timeString>
new  <>

1495:
old  <	mov rax, [rbp]>
new  < asctime$47:>

1496:
old  <	mov rdi, [rbp + 16]>
new  <	; BinaryAdd Â£temporary2897 Â£temporary2896 -> tp 1900>

1497:
old  <	mov rbp, [rbp + 8]>
new  <	mov eax, [rsi + 20]>

1498:
old  <	jmp rax>
new  <	add eax, 1900>

1500:
old  < asctime$52:>
new  < asctime$48:>

1501:
old  <	; FunctionEnd asctime>
new  <	; Parameter 128 signedint Â£temporary2897>

1502:
old  <>
new  <	mov [rbp + 128], eax>

1503:
old  <section .text>
new  <>

1504:
old  <>
new  < asctime$49:>

1505:
old  < ctime:>
new  <	; Call 56 sprintf 36>

1506:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov qword [rbp + 56], asctime$50>

1507:
old  <>
new  <	mov [rbp + 64], rbp>

1508:
old  < ctime$1:>
new  <	add rbp, 56>

1509:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov rdi, rbp>

1510:
old  <>
new  <	add rdi, 36>

1511:
old  < ctime$2:>
new  <	jmp sprintf>

1512:
old  <	; Parameter 56 pointer time>
new  <>

1513:
old  <	mov rax, [rbp + 24]>
new  < asctime$50:>

1514:
old  <	mov [rbp + 56], rax>
new  <	; PostCall 56>

1516:
old  < ctime$3:>
new  < asctime$51:>

1517:
old  <	; Call 32 localtime 0>
new  <	; SetReturnValue>

1518:
old  <	mov qword [rbp + 32], ctime$4>
new  <>

1519:
old  <	mov [rbp + 40], rbp>
new  < asctime$52:>

1520:
old  <	add rbp, 32>
new  <	; Return g_timeString>

1521:
old  <	jmp localtime>
new  <	mov rbx, @4764$g_timeString>

1522:
old  <>
new  <	mov rax, [rbp]>

1523:
old  < ctime$4:>
new  <	mov rdi, [rbp + 16]>

1524:
old  <	; PostCall 32>
new  <	mov rbp, [rbp + 8]>

1525:
old  <>
new  <	jmp rax>

1526:
old  < ctime$5:>
new  <>

1527:
old  <	; GetReturnValue Â£temporary2912>
new  < asctime$53:>

1528:
old  <>
new  <	; FunctionEnd asctime>

1529:
old  < ctime$6:>
new  <>

1530:
old  <	; Parameter 56 pointer Â£temporary2912>
new  <section .text>

1531:
old  <	mov [rbp + 56], rbx>
new  <>

1532:
old  <>
new  < ctime:>

1533:
old  < ctime$7:>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1534:
old  <	; Call 32 asctime 0>
new  <>

1535:
old  <	mov qword [rbp + 32], ctime$8>
new  < ctime$1:>

1536:
old  <	mov [rbp + 40], rbp>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1537:
old  <	add rbp, 32>
new  <>

1538:
old  <	jmp asctime>
new  < ctime$2:>

1539:
old  <>
new  <	; Parameter 56 pointer time>

1540:
old  < ctime$8:>
new  <	mov rax, [rbp + 24]>

1541:
old  <	; PostCall 32>
new  <	mov [rbp + 56], rax>

1543:
old  < ctime$9:>
new  < ctime$3:>

1544:
old  <	; GetReturnValue Â£temporary2913>
new  <	; Call 32 localtime 0>

1545:
old  <>
new  <	mov qword [rbp + 32], ctime$4>

1546:
old  < ctime$10:>
new  <	mov [rbp + 40], rbp>

1547:
old  <	; Return Â£temporary2913>
new  <	add rbp, 32>

1548:
old  <	mov rax, [rbp]>
new  <	jmp localtime>

1549:
old  <	mov rdi, [rbp + 16]>
new  <>

1550:
old  <	mov rbp, [rbp + 8]>
new  < ctime$4:>

1551:
old  <	jmp rax>
new  <	; PostCall 32>

1553:
old  < ctime$11:>
new  < ctime$5:>

1554:
old  <	; FunctionEnd ctime>
new  <	; GetReturnValue Â£temporary2899>

1556:
old  <section .text>
new  < ctime$6:>

1557:
old  <>
new  <	; Parameter 56 pointer Â£temporary2899>

1558:
old  < localtime:>
new  <	mov [rbp + 56], rbx>

1559:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1560:
old  <>
new  < ctime$7:>

1561:
old  < localtime$1:>
new  <	; Call 32 asctime 0>

1562:
old  <	; Parameter 56 pointer timePtr>
new  <	mov qword [rbp + 32], ctime$8>

1563:
old  <	mov rax, [rbp + 24]>
new  <	mov [rbp + 40], rbp>

1564:
old  <	mov [rbp + 56], rax>
new  <	add rbp, 32>

1565:
old  <>
new  <	jmp asctime>

1566:
old  < localtime$2:>
new  <>

1567:
old  <	; Call 32 gmtime 0>
new  < ctime$8:>

1568:
old  <	mov qword [rbp + 32], localtime$3>
new  <	; PostCall 32>

1569:
old  <	mov [rbp + 40], rbp>
new  <>

1570:
old  <	add rbp, 32>
new  < ctime$9:>

1571:
old  <	jmp gmtime>
new  <	; GetReturnValue Â£temporary2900>

1573:
old  < localtime$3:>
new  < ctime$10:>

1574:
old  <	; PostCall 32>
new  <	; SetReturnValue>

1576:
old  < localtime$4:>
new  < ctime$11:>

1577:
old  <	; GetReturnValue Â£temporary2914>
new  <	; Return Â£temporary2900>

1578:
old  <>
new  <	mov rax, [rbp]>

1579:
old  < localtime$5:>
new  <	mov rdi, [rbp + 16]>

1580:
old  <	; Assign tmPtr Â£temporary2914>
new  <	mov rbp, [rbp + 8]>

1581:
old  <	mov [rbp + 32], rbx>
new  <	jmp rax>

1583:
old  < localtime$6:>
new  < ctime$12:>

1584:
old  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; FunctionEnd ctime>

1586:
old  < localtime$7:>
new  <section .text>

1587:
old  <	; Call 40 localeconv 0>
new  <>

1588:
old  <	mov qword [rbp + 40], localtime$8>
new  < localtime:>

1589:
old  <	mov [rbp + 48], rbp>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1590:
old  <	add rbp, 40>
new  <>

1591:
old  <	jmp localeconv>
new  < localtime$1:>

1592:
old  <>
new  <	; Parameter 56 pointer timePtr>

1593:
old  < localtime$8:>
new  <	mov rax, [rbp + 24]>

1594:
old  <	; PostCall 40>
new  <	mov [rbp + 56], rax>

1596:
old  < localtime$9:>
new  < localtime$2:>

1597:
old  <	; GetReturnValue Â£temporary2915>
new  <	; Call 32 gmtime 0>

1598:
old  <>
new  <	mov qword [rbp + 32], localtime$3>

1599:
old  < localtime$10:>
new  <	mov [rbp + 40], rbp>

1600:
old  <	; Assign localeConvPtr Â£temporary2915>
new  <	add rbp, 32>

1601:
old  <	mov [rbp + 40], rbx>
new  <	jmp gmtime>

1603:
old  < localtime$11:>
new  < localtime$3:>

1604:
old  <	; Assign timeZone 0>
new  <	; PostCall 32>

1605:
old  <	mov dword [rbp + 48], 0>
new  <>

1606:
old  <>
new  < localtime$4:>

1607:
old  < localtime$12:>
new  <	; GetReturnValue Â£temporary2901>

1608:
old  <	; Equal 21 localeConvPtr 0>
new  <>

1609:
old  <	cmp qword [rbp + 40], 0>
new  < localtime$5:>

1610:
old  <	je localtime$21>
new  <	; Assign tmPtr Â£temporary2901>

1611:
old  <>
new  <	mov [rbp + 32], rbx>

1612:
old  < localtime$13:>
new  <>

1613:
old  <	; Dereference Â£temporary2917 -> tmPtr tmPtr 0>
new  < localtime$6:>

1614:
old  <	mov rsi, [rbp + 32]>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1616:
old  < localtime$14:>
new  < localtime$7:>

1617:
old  <	; NotEqual 18 Â£temporary2917 -> tmPtr 1>
new  <	; Call 40 localeconv 0>

1618:
old  <	cmp dword [rsi + 32], 1>
new  <	mov qword [rbp + 40], localtime$8>

1619:
old  <	jne localtime$18>
new  <	mov [rbp + 48], rbp>

1620:
old  <>
new  <	add rbp, 40>

1621:
old  < localtime$15:>
new  <	jmp localeconv>

1622:
old  <	; Dereference Â£temporary2919 -> localeConvPtr localeConvPtr 0>
new  <>

1623:
old  <	mov rsi, [rbp + 40]>
new  < localtime$8:>

1624:
old  <>
new  <	; PostCall 40>

1625:
old  < localtime$16:>
new  <>

1626:
old  <	; Assign Â£temporary2921 Â£temporary2919 -> localeConvPtr>
new  < localtime$9:>

1627:
old  <	mov eax, [rsi]>
new  <	; GetReturnValue Â£temporary2902>

1629:
old  < localtime$17:>
new  < localtime$10:>

1630:
old  <	; Goto 20>
new  <	; Assign localeConvPtr Â£temporary2902>

1631:
old  <	jmp localtime$20>
new  <	mov [rbp + 40], rbx>

1633:
old  < localtime$18:>
new  < localtime$11:>

1634:
old  <	; Dereference Â£temporary2920 -> localeConvPtr localeConvPtr 0>
new  <	; Assign timeZone 0>

1635:
old  <	mov rsi, [rbp + 40]>
new  <	mov dword [rbp + 48], 0>

1637:
old  < localtime$19:>
new  < localtime$12:>

1638:
old  <	; Assign Â£temporary2921 Â£temporary2920 -> localeConvPtr>
new  <	; Equal 21 localeConvPtr 0>

1639:
old  <	mov eax, [rsi + 4]>
new  <	cmp qword [rbp + 40], 0>

1640:
old  <>
new  <	je localtime$21>

1641:
old  < localtime$20:>
new  <>

1642:
old  <	; Assign timeZone Â£temporary2921>
new  < localtime$13:>

1643:
old  <	mov [rbp + 48], eax>
new  <	; Dereference Â£temporary2904 -> tmPtr tmPtr 0>

1644:
old  <>
new  <	mov rsi, [rbp + 32]>

1645:
old  < localtime$21:>
new  <>

1646:
old  <	; Dereference Â£temporary2922 -> timePtr timePtr 0>
new  < localtime$14:>

1647:
old  <	mov rsi, [rbp + 24]>
new  <	; NotEqual 18 Â£temporary2904 -> tmPtr 1>

1648:
old  <>
new  <	cmp dword [rsi + 32], 1>

1649:
old  < localtime$22:>
new  <	jne localtime$18>

1650:
old  <	; IntegralToIntegral Â£temporary2923 timeZone>
new  <>

1651:
old  <	mov eax, [rbp + 48]>
new  < localtime$15:>

1652:
old  <	mov rbx, 4294967295>
new  <	; Dereference Â£temporary2906 -> localeConvPtr localeConvPtr 0>

1653:
old  <	and rax, rbx>
new  <	mov rsi, [rbp + 40]>

1654:
old  <	cmp eax, 0>
new  <>

1655:
old  <	jge localtime$23>
new  < localtime$16:>

1656:
old  <	neg eax>
new  <	; Assign Â£temporary2908 Â£temporary2906 -> localeConvPtr>

1657:
old  <	neg rax>
new  <	mov eax, [rsi]>

1659:
old  < localtime$23:>
new  < localtime$17:>

1660:
old  <	; SignedMultiply Â£temporary2924 Â£temporary2923 3600>
new  <	; Goto 20>

1661:
old  <	xor rdx, rdx>
new  <	jmp localtime$20>

1662:
old  <	imul qword [int8$3600#]>
new  <>

1663:
old  <>
new  < localtime$18:>

1664:
old  < localtime$24:>
new  <	; Dereference Â£temporary2907 -> localeConvPtr localeConvPtr 0>

1665:
old  <	; BinaryAdd t Â£temporary2922 -> timePtr Â£temporary2924>
new  <	mov rsi, [rbp + 40]>

1666:
old  <	mov rbx, [rsi]>
new  <>

1667:
old  <	add rbx, rax>
new  < localtime$19:>

1668:
old  <	mov [rbp + 52], rbx>
new  <	; Assign Â£temporary2908 Â£temporary2907 -> localeConvPtr>

1669:
old  <>
new  <	mov eax, [rsi + 4]>

1670:
old  < localtime$25:>
new  <>

1671:
old  <	; PreCall 60 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < localtime$20:>

1672:
old  <>
new  <	; Assign timeZone Â£temporary2908>

1673:
old  < localtime$26:>
new  <	mov [rbp + 48], eax>

1674:
old  <	; Address Â£temporary2926 t>
new  <>

1675:
old  <	mov rsi, rbp>
new  < localtime$21:>

1676:
old  <	add rsi, 52>
new  <	; Dereference Â£temporary2909 -> timePtr timePtr 0>

1677:
old  <>
new  <	mov rsi, [rbp + 24]>

1678:
old  < localtime$27:>
new  <>

1679:
old  <	; Parameter 84 pointer Â£temporary2926>
new  < localtime$22:>

1680:
old  <	mov [rbp + 84], rsi>
new  <	; IntegralToIntegral Â£temporary2910 timeZone>

1681:
old  <>
new  <	mov eax, [rbp + 48]>

1682:
old  < localtime$28:>
new  <	mov rbx, 4294967295>

1683:
old  <	; Call 60 gmtime 0>
new  <	and rax, rbx>

1684:
old  <	mov qword [rbp + 60], localtime$29>
new  <	cmp eax, 0>

1685:
old  <	mov [rbp + 68], rbp>
new  <	jge localtime$23>

1686:
old  <	add rbp, 60>
new  <	neg eax>

1687:
old  <	jmp gmtime>
new  <	neg rax>

1689:
old  < localtime$29:>
new  < localtime$23:>

1690:
old  <	; PostCall 60>
new  <	; SignedMultiply Â£temporary2911 Â£temporary2910 3600>

1691:
old  <>
new  <	xor rdx, rdx>

1692:
old  < localtime$30:>
new  <	imul qword [int8$3600#]>

1693:
old  <	; GetReturnValue Â£temporary2927>
new  <>

1694:
old  <>
new  < localtime$24:>

1695:
old  < localtime$31:>
new  <	; BinaryAdd t Â£temporary2909 -> timePtr Â£temporary2911>

1696:
old  <	; Return Â£temporary2927>
new  <	mov rbx, [rsi]>

1697:
old  <	mov rax, [rbp]>
new  <	add rbx, rax>

1698:
old  <	mov rdi, [rbp + 16]>
new  <	mov [rbp + 52], rbx>

1699:
old  <	mov rbp, [rbp + 8]>
new  <>

1700:
old  <	jmp rax>
new  < localtime$25:>

1701:
old  <>
new  <	; PreCall 60 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1702:
old  < localtime$32:>
new  <>

1703:
old  <	; FunctionEnd localtime>
new  < localtime$26:>

1704:
old  <>
new  <	; Address Â£temporary2913 t>

1705:
old  <section .data>
new  <	mov rsi, rbp>

1706:
old  <>
new  <	add rsi, 52>

1707:
old  <string_#:>
new  <>

1708:
old  <	; Initializer String >
new  < localtime$27:>

1709:
old  <	db 0>
new  <	; Parameter 84 pointer Â£temporary2913>

1710:
old  <>
new  <	mov [rbp + 84], rsi>

1711:
old  <section .data>
new  <>

1712:
old  <>
new  < localtime$28:>

1713:
old  <string_2502i2D2502i2D2502i202502i3A2502i3A2502i#:>
new  <	; Call 60 gmtime 0>

1714:
old  <	; Initializer String %02i-%02i-%02i %02i:%02i:%02i>
new  <	mov qword [rbp + 60], localtime$29>

1715:
old  <	db "%02i-%02i-%02i %02i:%02i:%02i", 0>
new  <	mov [rbp + 68], rbp>

1716:
old  <>
new  <	add rbp, 60>

1717:
old  <section .data>
new  <	jmp gmtime>

1719:
old  <string_25i#:>
new  < localtime$29:>

1720:
old  <	; Initializer String %i>
new  <	; PostCall 60>

1721:
old  <	db "%i", 0>
new  <>

1722:
old  <>
new  < localtime$30:>

1723:
old  <section .data>
new  <	; GetReturnValue Â£temporary2914>

1725:
old  <string_25s#:>
new  < localtime$31:>

1726:
old  <	; Initializer String %s>
new  <	; SetReturnValue>

1727:
old  <	db "%s", 0>
new  <>

1728:
old  <>
new  < localtime$32:>

1729:
old  <section .data>
new  <	; Return Â£temporary2914>

1730:
old  <>
new  <	mov rax, [rbp]>

1731:
old  <string_AM#:>
new  <	mov rdi, [rbp + 16]>

1732:
old  <	; Initializer String AM>
new  <	mov rbp, [rbp + 8]>

1733:
old  <	db "AM", 0>
new  <	jmp rax>

1735:
old  <section .data>
new  < localtime$33:>

1736:
old  <>
new  <	; FunctionEnd localtime>

1737:
old  <string_PM#:>
new  <>

1738:
old  <	; Initializer String PM>
new  <section .data>

1739:
old  <	db "PM", 0>
new  <>

1740:
old  <>
new  <string_#:>

1741:
old  <section .data>
new  <	; Initializer String >

1742:
old  <>
new  <	db 0>

1743:
old  <string_2502i3A2502i3A2502i#:>
new  <>

1744:
old  <	; Initializer String %02i:%02i:%02i>
new  <section .data>

1745:
old  <	db "%02i:%02i:%02i", 0>
new  <>

1746:
old  <>
new  <string_2502i2D2502i2D2502i202502i3A2502i3A2502i#:>

1747:
old  <section .data>
new  <	; Initializer String %02i-%02i-%02i %02i:%02i:%02i>

1748:
old  <>
new  <	db "%02i-%02i-%02i %02i:%02i:%02i", 0>

1749:
old  <string_25#:>
new  <>

1750:
old  <	; Initializer String %>
new  <section .data>

1751:
old  <	db "%", 0>
new  <>

1752:
old  <>
new  <string_25i#:>

1753:
old  <section .data>
new  <	; Initializer String %i>

1754:
old  <>
new  <	db "%i", 0>

1755:
old  <int4$12#:>
new  <>

1756:
old  <	; Initializer SignedInt 12>
new  <section .data>

1757:
old  <	dd 12>
new  <>

1758:
old  <>
new  <string_25s#:>

1759:
old  <section .text>
new  <	; Initializer String %s>

1760:
old  <>
new  <	db "%s", 0>

1761:
old  < strftime:>
new  <>

1762:
old  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <section .data>

1764:
old  < strftime$1:>
new  <string_AM#:>

1765:
old  <	; Call 52 localeconv 0>
new  <	; Initializer String AM>

1766:
old  <	mov qword [rbp + 52], strftime$2>
new  <	db "AM", 0>

1767:
old  <	mov [rbp + 60], rbp>
new  <>

1768:
old  <	add rbp, 52>
new  <section .data>

1769:
old  <	jmp localeconv>
new  <>

1770:
old  <>
new  <string_PM#:>

1771:
old  < strftime$2:>
new  <	; Initializer String PM>

1772:
old  <	; PostCall 52>
new  <	db "PM", 0>

1774:
old  < strftime$3:>
new  <section .data>

1775:
old  <	; GetReturnValue Â£temporary2929>
new  <>

1776:
old  <>
new  <string_2502i3A2502i3A2502i#:>

1777:
old  < strftime$4:>
new  <	; Initializer String %02i:%02i:%02i>

1778:
old  <	; Assign localeConvPtr Â£temporary2929>
new  <	db "%02i:%02i:%02i", 0>

1779:
old  <	mov [rbp + 52], rbx>
new  <>

1780:
old  <>
new  <section .data>

1781:
old  < strftime$5:>
new  <>

1782:
old  <	; Equal 9 localeConvPtr 0>
new  <string_25#:>

1783:
old  <	cmp qword [rbp + 52], 0>
new  <	; Initializer String %>

1784:
old  <	je strftime$9>
new  <	db "%", 0>

1786:
old  < strftime$6:>
new  <section .data>

1787:
old  <	; Dereference Â£temporary2931 -> localeConvPtr localeConvPtr 0>
new  <>

1788:
old  <	mov rsi, [rbp + 52]>
new  <int4$12#:>

1789:
old  <>
new  <	; Initializer SignedInt 12>

1790:
old  < strftime$7:>
new  <	dd 12>

1791:
old  <	; Assign Â£temporary2932 Â£temporary2931 -> localeConvPtr>
new  <>

1792:
old  <	mov rax, [rsi + 8]>
new  <section .text>

1794:
old  < strftime$8:>
new  < strftime:>

1795:
old  <	; Goto 10>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1796:
old  <	jmp strftime$10>
new  <>

1797:
old  <>
new  < strftime$1:>

1798:
old  < strftime$9:>
new  <	; Call 52 localeconv 0>

1799:
old  <	; Assign Â£temporary2932 0>
new  <	mov qword [rbp + 52], strftime$2>

1800:
old  <	mov rax, 0>
new  <	mov [rbp + 60], rbp>

1801:
old  <>
new  <	add rbp, 52>

1802:
old  < strftime$10:>
new  <	jmp localeconv>

1803:
old  <	; Assign shortDayList Â£temporary2932>
new  <>

1804:
old  <	mov [rbp + 60], rax>
new  < strftime$2:>

1805:
old  <>
new  <	; PostCall 52>

1806:
old  < strftime$11:>
new  <>

1807:
old  <	; Equal 15 localeConvPtr 0>
new  < strftime$3:>

1808:
old  <	cmp qword [rbp + 52], 0>
new  <	; GetReturnValue Â£temporary2916>

1809:
old  <	je strftime$15>
new  <>

1810:
old  <>
new  < strftime$4:>

1811:
old  < strftime$12:>
new  <	; Assign localeConvPtr Â£temporary2916>

1812:
old  <	; Dereference Â£temporary2934 -> localeConvPtr localeConvPtr 0>
new  <	mov [rbp + 52], rbx>

1813:
old  <	mov rsi, [rbp + 52]>
new  <>

1814:
old  <>
new  < strftime$5:>

1815:
old  < strftime$13:>
new  <	; Equal 9 localeConvPtr 0>

1816:
old  <	; Assign Â£temporary2935 Â£temporary2934 -> localeConvPtr>
new  <	cmp qword [rbp + 52], 0>

1817:
old  <	mov rax, [rsi + 24]>
new  <	je strftime$9>

1819:
old  < strftime$14:>
new  < strftime$6:>

1820:
old  <	; Goto 16>
new  <	; Dereference Â£temporary2918 -> localeConvPtr localeConvPtr 0>

1821:
old  <	jmp strftime$16>
new  <	mov rsi, [rbp + 52]>

1823:
old  < strftime$15:>
new  < strftime$7:>

1824:
old  <	; Assign Â£temporary2935 0>
new  <	; Assign Â£temporary2919 Â£temporary2918 -> localeConvPtr>

1825:
old  <	mov rax, 0>
new  <	mov rax, [rsi + 8]>

1827:
old  < strftime$16:>
new  < strftime$8:>

1828:
old  <	; Assign shortMonthList Â£temporary2935>
new  <	; Goto 10>

1829:
old  <	mov [rbp + 68], rax>
new  <	jmp strftime$10>

1831:
old  < strftime$17:>
new  < strftime$9:>

1832:
old  <	; Equal 21 localeConvPtr 0>
new  <	; Assign Â£temporary2919 0>

1833:
old  <	cmp qword [rbp + 52], 0>
new  <	mov rax, 0>

1834:
old  <	je strftime$21>
new  <>

1835:
old  <>
new  < strftime$10:>

1836:
old  < strftime$18:>
new  <	; Assign shortDayList Â£temporary2919>

1837:
old  <	; Dereference Â£temporary2937 -> localeConvPtr localeConvPtr 0>
new  <	mov [rbp + 60], rax>

1838:
old  <	mov rsi, [rbp + 52]>
new  <>

1839:
old  <>
new  < strftime$11:>

1840:
old  < strftime$19:>
new  <	; Equal 15 localeConvPtr 0>

1841:
old  <	; Assign Â£temporary2938 Â£temporary2937 -> localeConvPtr>
new  <	cmp qword [rbp + 52], 0>

1842:
old  <	mov rax, [rsi + 16]>
new  <	je strftime$15>

1844:
old  < strftime$20:>
new  < strftime$12:>

1845:
old  <	; Goto 22>
new  <	; Dereference Â£temporary2921 -> localeConvPtr localeConvPtr 0>

1846:
old  <	jmp strftime$22>
new  <	mov rsi, [rbp + 52]>

1848:
old  < strftime$21:>
new  < strftime$13:>

1849:
old  <	; Assign Â£temporary2938 0>
new  <	; Assign Â£temporary2922 Â£temporary2921 -> localeConvPtr>

1850:
old  <	mov rax, 0>
new  <	mov rax, [rsi + 24]>

1852:
old  < strftime$22:>
new  < strftime$14:>

1853:
old  <	; Assign longDayList Â£temporary2938>
new  <	; Goto 16>

1854:
old  <	mov [rbp + 76], rax>
new  <	jmp strftime$16>

1856:
old  < strftime$23:>
new  < strftime$15:>

1857:
old  <	; Equal 27 localeConvPtr 0>
new  <	; Assign Â£temporary2922 0>

1858:
old  <	cmp qword [rbp + 52], 0>
new  <	mov rax, 0>

1859:
old  <	je strftime$27>
new  <>

1860:
old  <>
new  < strftime$16:>

1861:
old  < strftime$24:>
new  <	; Assign shortMonthList Â£temporary2922>

1862:
old  <	; Dereference Â£temporary2940 -> localeConvPtr localeConvPtr 0>
new  <	mov [rbp + 68], rax>

1863:
old  <	mov rsi, [rbp + 52]>
new  <>

1864:
old  <>
new  < strftime$17:>

1865:
old  < strftime$25:>
new  <	; Equal 21 localeConvPtr 0>

1866:
old  <	; Assign Â£temporary2941 Â£temporary2940 -> localeConvPtr>
new  <	cmp qword [rbp + 52], 0>

1867:
old  <	mov rax, [rsi + 32]>
new  <	je strftime$21>

1869:
old  < strftime$26:>
new  < strftime$18:>

1870:
old  <	; Goto 28>
new  <	; Dereference Â£temporary2924 -> localeConvPtr localeConvPtr 0>

1871:
old  <	jmp strftime$28>
new  <	mov rsi, [rbp + 52]>

1873:
old  < strftime$27:>
new  < strftime$19:>

1874:
old  <	; Assign Â£temporary2941 0>
new  <	; Assign Â£temporary2925 Â£temporary2924 -> localeConvPtr>

1875:
old  <	mov rax, 0>
new  <	mov rax, [rsi + 16]>

1877:
old  < strftime$28:>
new  < strftime$20:>

1878:
old  <	; Assign longMonthList Â£temporary2941>
new  <	; Goto 22>

1879:
old  <	mov [rbp + 84], rax>
new  <	jmp strftime$22>

1881:
old  < strftime$29:>
new  < strftime$21:>

1882:
old  <	; Dereference Â£temporary2942 -> tp tp 0>
new  <	; Assign Â£temporary2925 0>

1883:
old  <	mov rsi, [rbp + 44]>
new  <	mov rax, 0>

1885:
old  < strftime$30:>
new  < strftime$22:>

1886:
old  <	; BinarySubtract Â£temporary2943 Â£temporary2942 -> tp 69>
new  <	; Assign longDayList Â£temporary2925>

1887:
old  <	mov eax, [rsi + 20]>
new  <	mov [rbp + 76], rax>

1888:
old  <	sub eax, 69>
new  <>

1889:
old  <>
new  < strftime$23:>

1890:
old  < strftime$31:>
new  <	; Equal 27 localeConvPtr 0>

1891:
old  <	; SignedDivide leapDays Â£temporary2943 4>
new  <	cmp qword [rbp + 52], 0>

1892:
old  <	xor edx, edx>
new  <	je strftime$27>

1893:
old  <	idiv dword [int4$4#]>
new  <>

1894:
old  <	mov [rbp + 92], eax>
new  < strftime$24:>

1895:
old  <>
new  <	; Dereference Â£temporary2927 -> localeConvPtr localeConvPtr 0>

1896:
old  < strftime$32:>
new  <	mov rsi, [rbp + 52]>

1897:
old  <	; Dereference Â£temporary2945 -> tp tp 0>
new  <>

1898:
old  <	mov rsi, [rbp + 44]>
new  < strftime$25:>

1899:
old  <>
new  <	; Assign Â£temporary2928 Â£temporary2927 -> localeConvPtr>

1900:
old  < strftime$33:>
new  <	mov rax, [rsi + 32]>

1901:
old  <	; BinarySubtract Â£temporary2946 Â£temporary2945 -> tp 70>
new  <>

1902:
old  <	mov eax, [rsi + 20]>
new  < strftime$26:>

1903:
old  <	sub eax, 70>
new  <	; Goto 28>

1904:
old  <>
new  <	jmp strftime$28>

1905:
old  < strftime$34:>
new  <>

1906:
old  <	; SignedMultiply Â£temporary2947 Â£temporary2946 365>
new  < strftime$27:>

1907:
old  <	xor edx, edx>
new  <	; Assign Â£temporary2928 0>

1908:
old  <	imul dword [int4$365#]>
new  <	mov rax, 0>

1910:
old  < strftime$35:>
new  < strftime$28:>

1911:
old  <	; BinaryAdd Â£temporary2948 Â£temporary2947 leapDays>
new  <	; Assign longMonthList Â£temporary2928>

1912:
old  <	add eax, [rbp + 92]>
new  <	mov [rbp + 84], rax>

1914:
old  < strftime$36:>
new  < strftime$29:>

1915:
old  <	; Dereference Â£temporary2949 -> tp tp 0>
new  <	; Dereference Â£temporary2929 -> tp tp 0>

1918:
old  < strftime$37:>
new  < strftime$30:>

1919:
old  <	; BinaryAdd Â£temporary2950 Â£temporary2948 Â£temporary2949 -> tp>
new  <	; BinarySubtract Â£temporary2930 Â£temporary2929 -> tp 69>

1920:
old  <	add eax, [rsi + 28]>
new  <	mov eax, [rsi + 20]>

1921:
old  <>
new  <	sub eax, 69>

1922:
old  < strftime$38:>
new  <>

1923:
old  <	; IntegralToIntegral Â£temporary2951 Â£temporary2950>
new  < strftime$31:>

1924:
old  <	mov rbx, 4294967295>
new  <	; SignedDivide leapDays Â£temporary2930 4>

1925:
old  <	and rax, rbx>
new  <	xor edx, edx>

1926:
old  <	cmp eax, 0>
new  <	idiv dword [int4$4#]>

1927:
old  <	jge strftime$39>
new  <	mov [rbp + 92], eax>

1928:
old  <	neg eax>
new  <>

1929:
old  <	neg rax>
new  < strftime$32:>

1930:
old  <>
new  <	; Dereference Â£temporary2932 -> tp tp 0>

1931:
old  < strftime$39:>
new  <	mov rsi, [rbp + 44]>

1932:
old  <	; Assign totalDays Â£temporary2951>
new  <>

1933:
old  <	mov [rbp + 96], rax>
new  < strftime$33:>

1934:
old  <>
new  <	; BinarySubtract Â£temporary2933 Â£temporary2932 -> tp 70>

1935:
old  < strftime$40:>
new  <	mov eax, [rsi + 20]>

1936:
old  <	; PreCall 112 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	sub eax, 70>

1938:
old  < strftime$41:>
new  < strftime$34:>

1939:
old  <	; Parameter 136 pointer s>
new  <	; SignedMultiply Â£temporary2934 Â£temporary2933 365>

1940:
old  <	mov rax, [rbp + 24]>
new  <	xor edx, edx>

1941:
old  <	mov [rbp + 136], rax>
new  <	imul dword [int4$365#]>

1943:
old  < strftime$42:>
new  < strftime$35:>

1944:
old  <	; Parameter 144 pointer "">
new  <	; BinaryAdd Â£temporary2935 Â£temporary2934 leapDays>

1945:
old  <	mov qword [rbp + 144], string_#>
new  <	add eax, [rbp + 92]>

1947:
old  < strftime$43:>
new  < strftime$36:>

1948:
old  <	; Call 112 strcpy 0>
new  <	; Dereference Â£temporary2936 -> tp tp 0>

1949:
old  <	mov qword [rbp + 112], strftime$44>
new  <	mov rsi, [rbp + 44]>

1950:
old  <	mov [rbp + 120], rbp>
new  <>

1951:
old  <	add rbp, 112>
new  < strftime$37:>

1952:
old  <	jmp strcpy>
new  <	; BinaryAdd Â£temporary2937 Â£temporary2935 Â£temporary2936 -> tp>

1953:
old  <>
new  <	add eax, [rsi + 28]>

1954:
old  < strftime$44:>
new  <>

1955:
old  <	; PostCall 112>
new  < strftime$38:>

1956:
old  <>
new  <	; IntegralToIntegral Â£temporary2938 Â£temporary2937>

1957:
old  < strftime$45:>
new  <	mov rbx, 4294967295>

1958:
old  <	; Equal 48 shortDayList 0>
new  <	and rax, rbx>

1959:
old  <	cmp qword [rbp + 60], 0>
new  <	cmp eax, 0>

1960:
old  <	je strftime$48>
new  <	jge strftime$39>

1961:
old  <>
new  <	neg eax>

1962:
old  < strftime$46:>
new  <	neg rax>

1963:
old  <	; Assign Â£temporary2954 shortDayList>
new  <>

1964:
old  <	mov rax, [rbp + 60]>
new  < strftime$39:>

1965:
old  <>
new  <	; Assign totalDays Â£temporary2938>

1966:
old  < strftime$47:>
new  <	mov [rbp + 96], rax>

1967:
old  <	; Goto 49>
new  <>

1968:
old  <	jmp strftime$49>
new  < strftime$40:>

1969:
old  <>
new  <	; PreCall 112 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1970:
old  < strftime$48:>
new  <>

1971:
old  <	; Assign Â£temporary2954 g_defaultShortDayList>
new  < strftime$41:>

1972:
old  <	mov rax, @4769$g_defaultShortDayList>
new  <	; Parameter 136 pointer s>

1973:
old  <>
new  <	mov rax, [rbp + 24]>

1974:
old  < strftime$49:>
new  <	mov [rbp + 136], rax>

1975:
old  <	; Assign shortDayList Â£temporary2954>
new  <>

1976:
old  <	mov [rbp + 60], rax>
new  < strftime$42:>

1977:
old  <>
new  <	; Parameter 144 pointer "">

1978:
old  < strftime$50:>
new  <	mov qword [rbp + 144], string_#>

1979:
old  <	; Equal 53 longDayList 0>
new  <>

1980:
old  <	cmp qword [rbp + 76], 0>
new  < strftime$43:>

1981:
old  <	je strftime$53>
new  <	; Call 112 strcpy 0>

1982:
old  <>
new  <	mov qword [rbp + 112], strftime$44>

1983:
old  < strftime$51:>
new  <	mov [rbp + 120], rbp>

1984:
old  <	; Assign Â£temporary2956 longDayList>
new  <	add rbp, 112>

1985:
old  <	mov rax, [rbp + 76]>
new  <	jmp strcpy>

1987:
old  < strftime$52:>
new  < strftime$44:>

1988:
old  <	; Goto 54>
new  <	; PostCall 112>

1989:
old  <	jmp strftime$54>
new  <>

1990:
old  <>
new  < strftime$45:>

1991:
old  < strftime$53:>
new  <	; Equal 48 shortDayList 0>

1992:
old  <	; Assign Â£temporary2956 g_defaultLongDayList>
new  <	cmp qword [rbp + 60], 0>

1993:
old  <	mov rax, @4770$g_defaultLongDayList>
new  <	je strftime$48>

1995:
old  < strftime$54:>
new  < strftime$46:>

1996:
old  <	; Assign longDayList Â£temporary2956>
new  <	; Assign Â£temporary2941 shortDayList>

1997:
old  <	mov [rbp + 76], rax>
new  <	mov rax, [rbp + 60]>

1999:
old  < strftime$55:>
new  < strftime$47:>

2000:
old  <	; Equal 58 shortMonthList 0>
new  <	; Goto 49>

2001:
old  <	cmp qword [rbp + 68], 0>
new  <	jmp strftime$49>

2002:
old  <	je strftime$58>
new  <>

2003:
old  <>
new  < strftime$48:>

2004:
old  < strftime$56:>
new  <	; Assign Â£temporary2941 g_defaultShortDayList>

2005:
old  <	; Assign Â£temporary2958 shortMonthList>
new  <	mov rax, @4765$g_defaultShortDayList>

2006:
old  <	mov rax, [rbp + 68]>
new  <>

2007:
old  <>
new  < strftime$49:>

2008:
old  < strftime$57:>
new  <	; Assign shortDayList Â£temporary2941>

2009:
old  <	; Goto 59>
new  <	mov [rbp + 60], rax>

2010:
old  <	jmp strftime$59>
new  <>

2011:
old  <>
new  < strftime$50:>

2012:
old  < strftime$58:>
new  <	; Equal 53 longDayList 0>

2013:
old  <	; Assign Â£temporary2958 g_defaultShortMonthList>
new  <	cmp qword [rbp + 76], 0>

2014:
old  <	mov rax, @4771$g_defaultShortMonthList>
new  <	je strftime$53>

2016:
old  < strftime$59:>
new  < strftime$51:>

2017:
old  <	; Assign shortMonthList Â£temporary2958>
new  <	; Assign Â£temporary2943 longDayList>

2018:
old  <	mov [rbp + 68], rax>
new  <	mov rax, [rbp + 76]>

2020:
old  < strftime$60:>
new  < strftime$52:>

2021:
old  <	; Equal 63 longMonthList 0>
new  <	; Goto 54>

2022:
old  <	cmp qword [rbp + 84], 0>
new  <	jmp strftime$54>

2023:
old  <	je strftime$63>
new  <>

2024:
old  <>
new  < strftime$53:>

2025:
old  < strftime$61:>
new  <	; Assign Â£temporary2943 g_defaultLongDayList>

2026:
old  <	; Assign Â£temporary2960 longMonthList>
new  <	mov rax, @4766$g_defaultLongDayList>

2027:
old  <	mov rax, [rbp + 84]>
new  <>

2028:
old  <>
new  < strftime$54:>

2029:
old  < strftime$62:>
new  <	; Assign longDayList Â£temporary2943>

2030:
old  <	; Goto 64>
new  <	mov [rbp + 76], rax>

2031:
old  <	jmp strftime$64>
new  <>

2032:
old  <>
new  < strftime$55:>

2033:
old  < strftime$63:>
new  <	; Equal 58 shortMonthList 0>

2034:
old  <	; Assign Â£temporary2960 g_defaultLongMonthList>
new  <	cmp qword [rbp + 68], 0>

2035:
old  <	mov rax, @4772$g_defaultLongMonthList>
new  <	je strftime$58>

2037:
old  < strftime$64:>
new  < strftime$56:>

2038:
old  <	; Assign longMonthList Â£temporary2960>
new  <	; Assign Â£temporary2945 shortMonthList>

2039:
old  <	mov [rbp + 84], rax>
new  <	mov rax, [rbp + 68]>

2041:
old  < strftime$65:>
new  < strftime$57:>

2042:
old  <	; SignedGreaterThanEqual 70 totalDays 3>
new  <	; Goto 59>

2043:
old  <	cmp qword [rbp + 96], 3>
new  <	jmp strftime$59>

2044:
old  <	jge strftime$70>
new  <>

2045:
old  <>
new  < strftime$58:>

2046:
old  < strftime$66:>
new  <	; Assign Â£temporary2945 g_defaultShortMonthList>

2047:
old  <	; BinaryAdd Â£temporary2962 totalDays 4>
new  <	mov rax, @4767$g_defaultShortMonthList>

2048:
old  <	mov rax, [rbp + 96]>
new  <>

2049:
old  <	add rax, 4>
new  < strftime$59:>

2050:
old  <>
new  <	; Assign shortMonthList Â£temporary2945>

2051:
old  < strftime$67:>
new  <	mov [rbp + 68], rax>

2052:
old  <	; IntegralToIntegral Â£temporary2963 Â£temporary2962>
new  <>

2053:
old  <	cmp rax, 0>
new  < strftime$60:>

2054:
old  <	jge strftime$68>
new  <	; Equal 63 longMonthList 0>

2055:
old  <	neg rax>
new  <	cmp qword [rbp + 84], 0>

2056:
old  <	neg eax>
new  <	je strftime$63>

2058:
old  < strftime$68:>
new  < strftime$61:>

2059:
old  <	; Assign yearDaySunday Â£temporary2963>
new  <	; Assign Â£temporary2947 longMonthList>

2060:
old  <	mov [rbp + 104], eax>
new  <	mov rax, [rbp + 84]>

2062:
old  < strftime$69:>
new  < strftime$62:>

2063:
old  <	; Goto 74>
new  <	; Goto 64>

2064:
old  <	jmp strftime$74>
new  <	jmp strftime$64>

2066:
old  < strftime$70:>
new  < strftime$63:>

2067:
old  <	; BinarySubtract Â£temporary2964 totalDays 3>
new  <	; Assign Â£temporary2947 g_defaultLongMonthList>

2068:
old  <	mov rax, [rbp + 96]>
new  <	mov rax, @4768$g_defaultLongMonthList>

2069:
old  <	sub rax, 3>
new  <>

2070:
old  <>
new  < strftime$64:>

2071:
old  < strftime$71:>
new  <	; Assign longMonthList Â£temporary2947>

2072:
old  <	; SignedModulo Â£temporary2965 Â£temporary2964 7>
new  <	mov [rbp + 84], rax>

2073:
old  <	xor rdx, rdx>
new  <>

2074:
old  <	idiv qword [int8$7#]>
new  < strftime$65:>

2075:
old  <>
new  <	; SignedGreaterThanEqual 70 totalDays 3>

2076:
old  < strftime$72:>
new  <	cmp qword [rbp + 96], 3>

2077:
old  <	; IntegralToIntegral Â£temporary2966 Â£temporary2965>
new  <	jge strftime$70>

2078:
old  <	cmp rdx, 0>
new  <>

2079:
old  <	jge strftime$73>
new  < strftime$66:>

2080:
old  <	neg rdx>
new  <	; BinaryAdd Â£temporary2949 totalDays 4>

2081:
old  <	neg edx>
new  <	mov rax, [rbp + 96]>

2082:
old  <>
new  <	add rax, 4>

2083:
old  < strftime$73:>
new  <>

2084:
old  <	; Assign yearDaySunday Â£temporary2966>
new  < strftime$67:>

2085:
old  <	mov [rbp + 104], edx>
new  <	; IntegralToIntegral Â£temporary2950 Â£temporary2949>

2086:
old  <>
new  <	cmp rax, 0>

2087:
old  < strftime$74:>
new  <	jge strftime$68>

2088:
old  <	; SignedGreaterThanEqual 79 totalDays 4>
new  <	neg rax>

2089:
old  <	cmp qword [rbp + 96], 4>
new  <	neg eax>

2090:
old  <	jge strftime$79>
new  <>

2091:
old  <>
new  < strftime$68:>

2092:
old  < strftime$75:>
new  <	; Assign yearDaySunday Â£temporary2950>

2093:
old  <	; BinaryAdd Â£temporary2968 totalDays 3>
new  <	mov [rbp + 104], eax>

2094:
old  <	mov rax, [rbp + 96]>
new  <>

2095:
old  <	add rax, 3>
new  < strftime$69:>

2096:
old  <>
new  <	; Goto 74>

2097:
old  < strftime$76:>
new  <	jmp strftime$74>

2098:
old  <	; IntegralToIntegral Â£temporary2969 Â£temporary2968>
new  <>

2099:
old  <	cmp rax, 0>
new  < strftime$70:>

2100:
old  <	jge strftime$77>
new  <	; BinarySubtract Â£temporary2951 totalDays 3>

2101:
old  <	neg rax>
new  <	mov rax, [rbp + 96]>

2102:
old  <	neg eax>
new  <	sub rax, 3>

2104:
old  < strftime$77:>
new  < strftime$71:>

2105:
old  <	; Assign yearDayMonday Â£temporary2969>
new  <	; SignedModulo Â£temporary2952 Â£temporary2951 7>

2106:
old  <	mov [rbp + 108], eax>
new  <	xor rdx, rdx>

2107:
old  <>
new  <	idiv qword [int8$7#]>

2108:
old  < strftime$78:>
new  <>

2109:
old  <	; Goto 83>
new  < strftime$72:>

2110:
old  <	jmp strftime$83>
new  <	; IntegralToIntegral Â£temporary2953 Â£temporary2952>

2111:
old  <>
new  <	cmp rdx, 0>

2112:
old  < strftime$79:>
new  <	jge strftime$73>

2113:
old  <	; BinarySubtract Â£temporary2970 totalDays 4>
new  <	neg rdx>

2114:
old  <	mov rax, [rbp + 96]>
new  <	neg edx>

2115:
old  <	sub rax, 4>
new  <>

2116:
old  <>
new  < strftime$73:>

2117:
old  < strftime$80:>
new  <	; Assign yearDaySunday Â£temporary2953>

2118:
old  <	; SignedModulo Â£temporary2971 Â£temporary2970 7>
new  <	mov [rbp + 104], edx>

2119:
old  <	xor rdx, rdx>
new  <>

2120:
old  <	idiv qword [int8$7#]>
new  < strftime$74:>

2121:
old  <>
new  <	; SignedGreaterThanEqual 79 totalDays 4>

2122:
old  < strftime$81:>
new  <	cmp qword [rbp + 96], 4>

2123:
old  <	; IntegralToIntegral Â£temporary2972 Â£temporary2971>
new  <	jge strftime$79>

2124:
old  <	cmp rdx, 0>
new  <>

2125:
old  <	jge strftime$82>
new  < strftime$75:>

2126:
old  <	neg rdx>
new  <	; BinaryAdd Â£temporary2955 totalDays 3>

2127:
old  <	neg edx>
new  <	mov rax, [rbp + 96]>

2128:
old  <>
new  <	add rax, 3>

2129:
old  < strftime$82:>
new  <>

2130:
old  <	; Assign yearDayMonday Â£temporary2972>
new  < strftime$76:>

2131:
old  <	mov [rbp + 108], edx>
new  <	; IntegralToIntegral Â£temporary2956 Â£temporary2955>

2132:
old  <>
new  <	cmp rax, 0>

2133:
old  < strftime$83:>
new  <	jge strftime$77>

2134:
old  <	; Assign index 0>
new  <	neg rax>

2135:
old  <	mov dword [rbp + 112], 0>
new  <	neg eax>

2137:
old  < strftime$84:>
new  < strftime$77:>

2138:
old  <	; IntegralToIntegral Â£temporary2974 index>
new  <	; Assign yearDayMonday Â£temporary2956>

2139:
old  <	mov eax, [rbp + 112]>
new  <	mov [rbp + 108], eax>

2140:
old  <	mov rbx, 4294967295>
new  <>

2141:
old  <	and rax, rbx>
new  < strftime$78:>

2142:
old  <>
new  <	; Goto 83>

2143:
old  < strftime$85:>
new  <	jmp strftime$83>

2144:
old  <	; BinaryAdd Â£temporary2976 fmt Â£temporary2974>
new  <>

2145:
old  <	mov rsi, [rbp + 36]>
new  < strftime$79:>

2146:
old  <	add rsi, rax>
new  <	; BinarySubtract Â£temporary2957 totalDays 4>

2147:
old  <>
new  <	mov rax, [rbp + 96]>

2148:
old  < strftime$86:>
new  <	sub rax, 4>

2149:
old  <	; Dereference Â£temporary2973 -> Â£temporary2976 Â£temporary2976 0>
new  <>

2150:
old  <>
new  < strftime$80:>

2151:
old  < strftime$87:>
new  <	; SignedModulo Â£temporary2958 Â£temporary2957 7>

2152:
old  <	; Equal 364 Â£temporary2973 -> Â£temporary2976 0>
new  <	xor rdx, rdx>

2153:
old  <	cmp byte [rsi], 0>
new  <	idiv qword [int8$7#]>

2154:
old  <	je strftime$364>
new  <>

2155:
old  <>
new  < strftime$81:>

2156:
old  < strftime$88:>
new  <	; IntegralToIntegral Â£temporary2959 Â£temporary2958>

2157:
old  <	; IntegralToIntegral Â£temporary2980 index>
new  <	cmp rdx, 0>

2158:
old  <	mov eax, [rbp + 112]>
new  <	jge strftime$82>

2159:
old  <	mov rbx, 4294967295>
new  <	neg rdx>

2160:
old  <	and rax, rbx>
new  <	neg edx>

2162:
old  < strftime$89:>
new  < strftime$82:>

2163:
old  <	; BinaryAdd Â£temporary2982 fmt Â£temporary2980>
new  <	; Assign yearDayMonday Â£temporary2959>

2164:
old  <	mov rsi, [rbp + 36]>
new  <	mov [rbp + 108], edx>

2165:
old  <	add rsi, rax>
new  <>

2166:
old  <>
new  < strftime$83:>

2167:
old  < strftime$90:>
new  <	; Assign index 0>

2168:
old  <	; Dereference Â£temporary2979 -> Â£temporary2982 Â£temporary2982 0>
new  <	mov dword [rbp + 112], 0>

2170:
old  < strftime$91:>
new  < strftime$84:>

2171:
old  <	; NotEqual 336 Â£temporary2979 -> Â£temporary2982 37>
new  <	; IntegralToIntegral Â£temporary2961 index>

2172:
old  <	cmp byte [rsi], 37>
new  <	mov eax, [rbp + 112]>

2173:
old  <	jne strftime$336>
new  <	mov rbx, 4294967295>

2174:
old  <>
new  <	and rax, rbx>

2175:
old  < strftime$92:>
new  <>

2176:
old  <	; BinaryAdd index index 1>
new  < strftime$85:>

2177:
old  <	inc dword [rbp + 112]>
new  <	; BinaryAdd Â£temporary2963 fmt Â£temporary2961>

2178:
old  <>
new  <	mov rsi, [rbp + 36]>

2179:
old  < strftime$93:>
new  <	add rsi, rax>

2180:
old  <	; Assign Â£temporary2984 index>
new  <>

2181:
old  <	mov eax, [rbp + 112]>
new  < strftime$86:>

2182:
old  <>
new  <	; Dereference Â£temporary2960 -> Â£temporary2963 Â£temporary2963 0>

2183:
old  < strftime$94:>
new  <>

2184:
old  <	; IntegralToIntegral Â£temporary2986 Â£temporary2984>
new  < strftime$87:>

2185:
old  <	mov rbx, 4294967295>
new  <	; Equal 364 Â£temporary2960 -> Â£temporary2963 0>

2186:
old  <	and rax, rbx>
new  <	cmp byte [rsi], 0>

2187:
old  <>
new  <	je strftime$364>

2188:
old  < strftime$95:>
new  <>

2189:
old  <	; BinaryAdd Â£temporary2988 fmt Â£temporary2986>
new  < strftime$88:>

2190:
old  <	mov rsi, [rbp + 36]>
new  <	; IntegralToIntegral Â£temporary2967 index>

2191:
old  <	add rsi, rax>
new  <	mov eax, [rbp + 112]>

2192:
old  <>
new  <	mov rbx, 4294967295>

2193:
old  < strftime$96:>
new  <	and rax, rbx>

2194:
old  <	; Dereference Â£temporary2985 -> Â£temporary2988 Â£temporary2988 0>
new  <>

2195:
old  <>
new  < strftime$89:>

2196:
old  < strftime$97:>
new  <	; BinaryAdd Â£temporary2969 fmt Â£temporary2967>

2197:
old  <	; Case 121 Â£temporary2985 -> Â£temporary2988 97>
new  <	mov rsi, [rbp + 36]>

2198:
old  <	mov al, [rsi]>
new  <	add rsi, rax>

2199:
old  <	cmp al, 97>
new  <>

2200:
old  <	je strftime$121>
new  < strftime$90:>

2201:
old  <>
new  <	; Dereference Â£temporary2966 -> Â£temporary2969 Â£temporary2969 0>

2202:
old  < strftime$98:>
new  <>

2203:
old  <	; Case 132 Â£temporary2985 -> Â£temporary2988 65>
new  < strftime$91:>

2204:
old  <	cmp al, 65>
new  <	; NotEqual 336 Â£temporary2966 -> Â£temporary2969 37>

2205:
old  <	je strftime$132>
new  <	cmp byte [rsi], 37>

2206:
old  <>
new  <	jne strftime$336>

2207:
old  < strftime$99:>
new  <>

2208:
old  <	; Case 143 Â£temporary2985 -> Â£temporary2988 98>
new  < strftime$92:>

2209:
old  <	cmp al, 98>
new  <	; BinaryAdd index index 1>

2210:
old  <	je strftime$143>
new  <	inc dword [rbp + 112]>

2212:
old  < strftime$100:>
new  < strftime$93:>

2213:
old  <	; Case 154 Â£temporary2985 -> Â£temporary2988 66>
new  <	; Assign Â£temporary2971 index>

2214:
old  <	cmp al, 66>
new  <	mov eax, [rbp + 112]>

2215:
old  <	je strftime$154>
new  <>

2216:
old  <>
new  < strftime$94:>

2217:
old  < strftime$101:>
new  <	; IntegralToIntegral Â£temporary2973 Â£temporary2971>

2218:
old  <	; Case 165 Â£temporary2985 -> Â£temporary2988 99>
new  <	mov rbx, 4294967295>

2219:
old  <	cmp al, 99>
new  <	and rax, rbx>

2220:
old  <	je strftime$165>
new  <>

2221:
old  <>
new  < strftime$95:>

2222:
old  < strftime$102:>
new  <	; BinaryAdd Â£temporary2975 fmt Â£temporary2973>

2223:
old  <	; Case 185 Â£temporary2985 -> Â£temporary2988 100>
new  <	mov rsi, [rbp + 36]>

2224:
old  <	cmp al, 100>
new  <	add rsi, rax>

2225:
old  <	je strftime$185>
new  <>

2226:
old  <>
new  < strftime$96:>

2227:
old  < strftime$103:>
new  <	; Dereference Â£temporary2972 -> Â£temporary2975 Â£temporary2975 0>

2228:
old  <	; Case 193 Â£temporary2985 -> Â£temporary2988 72>
new  <>

2229:
old  <	cmp al, 72>
new  < strftime$97:>

2230:
old  <	je strftime$193>
new  <	; Case 121 Â£temporary2972 -> Â£temporary2975 97>

2231:
old  <>
new  <	mov al, [rsi]>

2232:
old  < strftime$104:>
new  <	cmp al, 97>

2233:
old  <	; Case 201 Â£temporary2985 -> Â£temporary2988 73>
new  <	je strftime$121>

2234:
old  <	cmp al, 73>
new  <>

2235:
old  <	je strftime$201>
new  < strftime$98:>

2236:
old  <>
new  <	; Case 132 Â£temporary2972 -> Â£temporary2975 65>

2237:
old  < strftime$105:>
new  <	cmp al, 65>

2238:
old  <	; Case 210 Â£temporary2985 -> Â£temporary2988 106>
new  <	je strftime$132>

2239:
old  <	cmp al, 106>
new  <>

2240:
old  <	je strftime$210>
new  < strftime$99:>

2241:
old  <>
new  <	; Case 143 Â£temporary2972 -> Â£temporary2975 98>

2242:
old  < strftime$106:>
new  <	cmp al, 98>

2243:
old  <	; Case 218 Â£temporary2985 -> Â£temporary2988 109>
new  <	je strftime$143>

2244:
old  <	cmp al, 109>
new  <>

2245:
old  <	je strftime$218>
new  < strftime$100:>

2246:
old  <>
new  <	; Case 154 Â£temporary2972 -> Â£temporary2975 66>

2247:
old  < strftime$107:>
new  <	cmp al, 66>

2248:
old  <	; Case 227 Â£temporary2985 -> Â£temporary2988 77>
new  <	je strftime$154>

2249:
old  <	cmp al, 77>
new  <>

2250:
old  <	je strftime$227>
new  < strftime$101:>

2251:
old  <>
new  <	; Case 165 Â£temporary2972 -> Â£temporary2975 99>

2252:
old  < strftime$108:>
new  <	cmp al, 99>

2253:
old  <	; Case 235 Â£temporary2985 -> Â£temporary2988 112>
new  <	je strftime$165>

2254:
old  <	cmp al, 112>
new  <>

2255:
old  <	je strftime$235>
new  < strftime$102:>

2256:
old  <>
new  <	; Case 185 Â£temporary2972 -> Â£temporary2975 100>

2257:
old  < strftime$109:>
new  <	cmp al, 100>

2258:
old  <	; Case 247 Â£temporary2985 -> Â£temporary2988 83>
new  <	je strftime$185>

2259:
old  <	cmp al, 83>
new  <>

2260:
old  <	je strftime$247>
new  < strftime$103:>

2261:
old  <>
new  <	; Case 193 Â£temporary2972 -> Â£temporary2975 72>

2262:
old  < strftime$110:>
new  <	cmp al, 72>

2263:
old  <	; Case 255 Â£temporary2985 -> Â£temporary2988 85>
new  <	je strftime$193>

2264:
old  <	cmp al, 85>
new  <>

2265:
old  <	je strftime$255>
new  < strftime$104:>

2266:
old  <>
new  <	; Case 201 Â£temporary2972 -> Â£temporary2975 73>

2267:
old  < strftime$111:>
new  <	cmp al, 73>

2268:
old  <	; Case 262 Â£temporary2985 -> Â£temporary2988 119>
new  <	je strftime$201>

2269:
old  <	cmp al, 119>
new  <>

2270:
old  <	je strftime$262>
new  < strftime$105:>

2271:
old  <>
new  <	; Case 210 Â£temporary2972 -> Â£temporary2975 106>

2272:
old  < strftime$112:>
new  <	cmp al, 106>

2273:
old  <	; Case 270 Â£temporary2985 -> Â£temporary2988 87>
new  <	je strftime$210>

2274:
old  <	cmp al, 87>
new  <>

2275:
old  <	je strftime$270>
new  < strftime$106:>

2276:
old  <>
new  <	; Case 218 Â£temporary2972 -> Â£temporary2975 109>

2277:
old  < strftime$113:>
new  <	cmp al, 109>

2278:
old  <	; Case 277 Â£temporary2985 -> Â£temporary2988 120>
new  <	je strftime$218>

2279:
old  <	cmp al, 120>
new  <>

2280:
old  <	je strftime$277>
new  < strftime$107:>

2281:
old  <>
new  <	; Case 227 Â£temporary2972 -> Â£temporary2975 77>

2282:
old  < strftime$114:>
new  <	cmp al, 77>

2283:
old  <	; Case 289 Â£temporary2985 -> Â£temporary2988 88>
new  <	je strftime$227>

2284:
old  <	cmp al, 88>
new  <>

2285:
old  <	je strftime$289>
new  < strftime$108:>

2286:
old  <>
new  <	; Case 235 Â£temporary2972 -> Â£temporary2975 112>

2287:
old  < strftime$115:>
new  <	cmp al, 112>

2288:
old  <	; Case 301 Â£temporary2985 -> Â£temporary2988 121>
new  <	je strftime$235>

2289:
old  <	cmp al, 121>
new  <>

2290:
old  <	je strftime$301>
new  < strftime$109:>

2291:
old  <>
new  <	; Case 247 Â£temporary2972 -> Â£temporary2975 83>

2292:
old  < strftime$116:>
new  <	cmp al, 83>

2293:
old  <	; Case 310 Â£temporary2985 -> Â£temporary2988 89>
new  <	je strftime$247>

2294:
old  <	cmp al, 89>
new  <>

2295:
old  <	je strftime$310>
new  < strftime$110:>

2296:
old  <>
new  <	; Case 255 Â£temporary2972 -> Â£temporary2975 85>

2297:
old  < strftime$117:>
new  <	cmp al, 85>

2298:
old  <	; Case 319 Â£temporary2985 -> Â£temporary2988 90>
new  <	je strftime$255>

2299:
old  <	cmp al, 90>
new  <>

2300:
old  <	je strftime$319>
new  < strftime$111:>

2301:
old  <>
new  <	; Case 262 Â£temporary2972 -> Â£temporary2975 119>

2302:
old  < strftime$118:>
new  <	cmp al, 119>

2303:
old  <	; Case 325 Â£temporary2985 -> Â£temporary2988 37>
new  <	je strftime$262>

2304:
old  <	cmp al, 37>
new  <>

2305:
old  <	je strftime$325>
new  < strftime$112:>

2306:
old  <>
new  <	; Case 270 Â£temporary2972 -> Â£temporary2975 87>

2307:
old  < strftime$119:>
new  <	cmp al, 87>

2308:
old  <	; CaseEnd Â£temporary2985 -> Â£temporary2988>
new  <	je strftime$270>

2310:
old  < strftime$120:>
new  < strftime$113:>

2311:
old  <	; Goto 330>
new  <	; Case 277 Â£temporary2972 -> Â£temporary2975 120>

2312:
old  <	jmp strftime$330>
new  <	cmp al, 120>

2313:
old  <>
new  <	je strftime$277>

2314:
old  < strftime$121:>
new  <>

2315:
old  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < strftime$114:>

2316:
old  <>
new  <	; Case 289 Â£temporary2972 -> Â£temporary2975 88>

2317:
old  < strftime$122:>
new  <	cmp al, 88>

2318:
old  <	; Parameter 160 pointer add>
new  <	je strftime$289>

2319:
old  <	mov [rbp + 160], rbp>
new  <>

2320:
old  <	add qword [rbp + 160], 116>
new  < strftime$115:>

2321:
old  <>
new  <	; Case 301 Â£temporary2972 -> Â£temporary2975 121>

2322:
old  < strftime$123:>
new  <	cmp al, 121>

2323:
old  <	; Dereference Â£temporary2989 -> tp tp 0>
new  <	je strftime$301>

2324:
old  <	mov rsi, [rbp + 44]>
new  <>

2325:
old  <>
new  < strftime$116:>

2326:
old  < strftime$124:>
new  <	; Case 310 Â£temporary2972 -> Â£temporary2975 89>

2327:
old  <	; IntegralToIntegral Â£temporary2991 Â£temporary2989 -> tp>
new  <	cmp al, 89>

2328:
old  <	mov eax, [rsi + 24]>
new  <	je strftime$310>

2329:
old  <	mov rbx, 4294967295>
new  <>

2330:
old  <	and rax, rbx>
new  < strftime$117:>

2331:
old  <>
new  <	; Case 319 Â£temporary2972 -> Â£temporary2975 90>

2332:
old  < strftime$125:>
new  <	cmp al, 90>

2333:
old  <	; UnsignedMultiply Â£temporary2992 Â£temporary2991 8>
new  <	je strftime$319>

2334:
old  <	xor rdx, rdx>
new  <>

2335:
old  <	mul qword [int8$8#]>
new  < strftime$118:>

2336:
old  <>
new  <	; Case 325 Â£temporary2972 -> Â£temporary2975 37>

2337:
old  < strftime$126:>
new  <	cmp al, 37>

2338:
old  <	; BinaryAdd Â£temporary2993 shortDayList Â£temporary2992>
new  <	je strftime$325>

2339:
old  <	mov rsi, [rbp + 60]>
new  <>

2340:
old  <	add rsi, rax>
new  < strftime$119:>

2341:
old  <>
new  <	; CaseEnd Â£temporary2972 -> Â£temporary2975>

2342:
old  < strftime$127:>
new  <>

2343:
old  <	; Dereference Â£temporary2990 -> Â£temporary2993 Â£temporary2993 0>
new  < strftime$120:>

2344:
old  <>
new  <	; Goto 330>

2345:
old  < strftime$128:>
new  <	jmp strftime$330>

2346:
old  <	; Parameter 168 pointer Â£temporary2990 -> Â£temporary2993>
new  <>

2347:
old  <	mov rax, [rsi]>
new  < strftime$121:>

2348:
old  <	mov [rbp + 168], rax>
new  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2350:
old  < strftime$129:>
new  < strftime$122:>

2351:
old  <	; Call 136 strcpy 0>
new  <	; Parameter 160 pointer add>

2352:
old  <	mov qword [rbp + 136], strftime$130>
new  <	mov [rbp + 160], rbp>

2353:
old  <	mov [rbp + 144], rbp>
new  <	add qword [rbp + 160], 116>

2354:
old  <	add rbp, 136>
new  <>

2355:
old  <	jmp strcpy>
new  < strftime$123:>

2356:
old  <>
new  <	; Dereference Â£temporary2976 -> tp tp 0>

2357:
old  < strftime$130:>
new  <	mov rsi, [rbp + 44]>

2358:
old  <	; PostCall 136>
new  <>

2359:
old  <>
new  < strftime$124:>

2360:
old  < strftime$131:>
new  <	; IntegralToIntegral Â£temporary2978 Â£temporary2976 -> tp>

2361:
old  <	; Goto 343>
new  <	mov eax, [rsi + 24]>

2362:
old  <	jmp strftime$343>
new  <	mov rbx, 4294967295>

2363:
old  <>
new  <	and rax, rbx>

2364:
old  < strftime$132:>
new  <>

2365:
old  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < strftime$125:>

2366:
old  <>
new  <	; UnsignedMultiply Â£temporary2979 Â£temporary2978 8>

2367:
old  < strftime$133:>
new  <	xor rdx, rdx>

2368:
old  <	; Parameter 160 pointer add>
new  <	mul qword [int8$8#]>

2369:
old  <	mov [rbp + 160], rbp>
new  <>

2370:
old  <	add qword [rbp + 160], 116>
new  < strftime$126:>

2371:
old  <>
new  <	; BinaryAdd Â£temporary2980 shortDayList Â£temporary2979>

2372:
old  < strftime$134:>
new  <	mov rsi, [rbp + 60]>

2373:
old  <	; Dereference Â£temporary2995 -> tp tp 0>
new  <	add rsi, rax>

2374:
old  <	mov rsi, [rbp + 44]>
new  <>

2375:
old  <>
new  < strftime$127:>

2376:
old  < strftime$135:>
new  <	; Dereference Â£temporary2977 -> Â£temporary2980 Â£temporary2980 0>

2377:
old  <	; IntegralToIntegral Â£temporary2997 Â£temporary2995 -> tp>
new  <>

2378:
old  <	mov eax, [rsi + 24]>
new  < strftime$128:>

2379:
old  <	mov rbx, 4294967295>
new  <	; Parameter 168 pointer Â£temporary2977 -> Â£temporary2980>

2380:
old  <	and rax, rbx>
new  <	mov rax, [rsi]>

2381:
old  <>
new  <	mov [rbp + 168], rax>

2382:
old  < strftime$136:>
new  <>

2383:
old  <	; UnsignedMultiply Â£temporary2998 Â£temporary2997 8>
new  < strftime$129:>

2384:
old  <	xor rdx, rdx>
new  <	; Call 136 strcpy 0>

2385:
old  <	mul qword [int8$8#]>
new  <	mov qword [rbp + 136], strftime$130>

2386:
old  <>
new  <	mov [rbp + 144], rbp>

2387:
old  < strftime$137:>
new  <	add rbp, 136>

2388:
old  <	; BinaryAdd Â£temporary2999 longDayList Â£temporary2998>
new  <	jmp strcpy>

2389:
old  <	mov rsi, [rbp + 76]>
new  <>

2390:
old  <	add rsi, rax>
new  < strftime$130:>

2391:
old  <>
new  <	; PostCall 136>

2392:
old  < strftime$138:>
new  <>

2393:
old  <	; Dereference Â£temporary2996 -> Â£temporary2999 Â£temporary2999 0>
new  < strftime$131:>

2394:
old  <>
new  <	; Goto 343>

2395:
old  < strftime$139:>
new  <	jmp strftime$343>

2396:
old  <	; Parameter 168 pointer Â£temporary2996 -> Â£temporary2999>
new  <>

2397:
old  <	mov rax, [rsi]>
new  < strftime$132:>

2398:
old  <	mov [rbp + 168], rax>
new  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2400:
old  < strftime$140:>
new  < strftime$133:>

2401:
old  <	; Call 136 strcpy 0>
new  <	; Parameter 160 pointer add>

2402:
old  <	mov qword [rbp + 136], strftime$141>
new  <	mov [rbp + 160], rbp>

2403:
old  <	mov [rbp + 144], rbp>
new  <	add qword [rbp + 160], 116>

2404:
old  <	add rbp, 136>
new  <>

2405:
old  <	jmp strcpy>
new  < strftime$134:>

2406:
old  <>
new  <	; Dereference Â£temporary2982 -> tp tp 0>

2407:
old  < strftime$141:>
new  <	mov rsi, [rbp + 44]>

2408:
old  <	; PostCall 136>
new  <>

2409:
old  <>
new  < strftime$135:>

2410:
old  < strftime$142:>
new  <	; IntegralToIntegral Â£temporary2984 Â£temporary2982 -> tp>

2411:
old  <	; Goto 343>
new  <	mov eax, [rsi + 24]>

2412:
old  <	jmp strftime$343>
new  <	mov rbx, 4294967295>

2413:
old  <>
new  <	and rax, rbx>

2414:
old  < strftime$143:>
new  <>

2415:
old  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < strftime$136:>

2416:
old  <>
new  <	; UnsignedMultiply Â£temporary2985 Â£temporary2984 8>

2417:
old  < strftime$144:>
new  <	xor rdx, rdx>

2418:
old  <	; Parameter 160 pointer add>
new  <	mul qword [int8$8#]>

2419:
old  <	mov [rbp + 160], rbp>
new  <>

2420:
old  <	add qword [rbp + 160], 116>
new  < strftime$137:>

2421:
old  <>
new  <	; BinaryAdd Â£temporary2986 longDayList Â£temporary2985>

2422:
old  < strftime$145:>
new  <	mov rsi, [rbp + 76]>

2423:
old  <	; Dereference Â£temporary3001 -> tp tp 0>
new  <	add rsi, rax>

2424:
old  <	mov rsi, [rbp + 44]>
new  <>

2425:
old  <>
new  < strftime$138:>

2426:
old  < strftime$146:>
new  <	; Dereference Â£temporary2983 -> Â£temporary2986 Â£temporary2986 0>

2427:
old  <	; IntegralToIntegral Â£temporary3003 Â£temporary3001 -> tp>
new  <>

2428:
old  <	mov eax, [rsi + 16]>
new  < strftime$139:>

2429:
old  <	mov rbx, 4294967295>
new  <	; Parameter 168 pointer Â£temporary2983 -> Â£temporary2986>

2430:
old  <	and rax, rbx>
new  <	mov rax, [rsi]>

2431:
old  <>
new  <	mov [rbp + 168], rax>

2432:
old  < strftime$147:>
new  <>

2433:
old  <	; UnsignedMultiply Â£temporary3004 Â£temporary3003 8>
new  < strftime$140:>

2434:
old  <	xor rdx, rdx>
new  <	; Call 136 strcpy 0>

2435:
old  <	mul qword [int8$8#]>
new  <	mov qword [rbp + 136], strftime$141>

2436:
old  <>
new  <	mov [rbp + 144], rbp>

2437:
old  < strftime$148:>
new  <	add rbp, 136>

2438:
old  <	; BinaryAdd Â£temporary3005 shortMonthList Â£temporary3004>
new  <	jmp strcpy>

2439:
old  <	mov rsi, [rbp + 68]>
new  <>

2440:
old  <	add rsi, rax>
new  < strftime$141:>

2441:
old  <>
new  <	; PostCall 136>

2442:
old  < strftime$149:>
new  <>

2443:
old  <	; Dereference Â£temporary3002 -> Â£temporary3005 Â£temporary3005 0>
new  < strftime$142:>

2444:
old  <>
new  <	; Goto 343>

2445:
old  < strftime$150:>
new  <	jmp strftime$343>

2446:
old  <	; Parameter 168 pointer Â£temporary3002 -> Â£temporary3005>
new  <>

2447:
old  <	mov rax, [rsi]>
new  < strftime$143:>

2448:
old  <	mov [rbp + 168], rax>
new  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2450:
old  < strftime$151:>
new  < strftime$144:>

2451:
old  <	; Call 136 strcpy 0>
new  <	; Parameter 160 pointer add>

2452:
old  <	mov qword [rbp + 136], strftime$152>
new  <	mov [rbp + 160], rbp>

2453:
old  <	mov [rbp + 144], rbp>
new  <	add qword [rbp + 160], 116>

2454:
old  <	add rbp, 136>
new  <>

2455:
old  <	jmp strcpy>
new  < strftime$145:>

2456:
old  <>
new  <	; Dereference Â£temporary2988 -> tp tp 0>

2457:
old  < strftime$152:>
new  <	mov rsi, [rbp + 44]>

2458:
old  <	; PostCall 136>
new  <>

2459:
old  <>
new  < strftime$146:>

2460:
old  < strftime$153:>
new  <	; IntegralToIntegral Â£temporary2990 Â£temporary2988 -> tp>

2461:
old  <	; Goto 343>
new  <	mov eax, [rsi + 16]>

2462:
old  <	jmp strftime$343>
new  <	mov rbx, 4294967295>

2463:
old  <>
new  <	and rax, rbx>

2464:
old  < strftime$154:>
new  <>

2465:
old  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < strftime$147:>

2466:
old  <>
new  <	; UnsignedMultiply Â£temporary2991 Â£temporary2990 8>

2467:
old  < strftime$155:>
new  <	xor rdx, rdx>

2468:
old  <	; Parameter 160 pointer add>
new  <	mul qword [int8$8#]>

2469:
old  <	mov [rbp + 160], rbp>
new  <>

2470:
old  <	add qword [rbp + 160], 116>
new  < strftime$148:>

2471:
old  <>
new  <	; BinaryAdd Â£temporary2992 shortMonthList Â£temporary2991>

2472:
old  < strftime$156:>
new  <	mov rsi, [rbp + 68]>

2473:
old  <	; Dereference Â£temporary3007 -> tp tp 0>
new  <	add rsi, rax>

2474:
old  <	mov rsi, [rbp + 44]>
new  <>

2475:
old  <>
new  < strftime$149:>

2476:
old  < strftime$157:>
new  <	; Dereference Â£temporary2989 -> Â£temporary2992 Â£temporary2992 0>

2477:
old  <	; IntegralToIntegral Â£temporary3009 Â£temporary3007 -> tp>
new  <>

2478:
old  <	mov eax, [rsi + 16]>
new  < strftime$150:>

2479:
old  <	mov rbx, 4294967295>
new  <	; Parameter 168 pointer Â£temporary2989 -> Â£temporary2992>

2480:
old  <	and rax, rbx>
new  <	mov rax, [rsi]>

2481:
old  <>
new  <	mov [rbp + 168], rax>

2482:
old  < strftime$158:>
new  <>

2483:
old  <	; UnsignedMultiply Â£temporary3010 Â£temporary3009 8>
new  < strftime$151:>

2484:
old  <	xor rdx, rdx>
new  <	; Call 136 strcpy 0>

2485:
old  <	mul qword [int8$8#]>
new  <	mov qword [rbp + 136], strftime$152>

2486:
old  <>
new  <	mov [rbp + 144], rbp>

2487:
old  < strftime$159:>
new  <	add rbp, 136>

2488:
old  <	; BinaryAdd Â£temporary3011 longMonthList Â£temporary3010>
new  <	jmp strcpy>

2489:
old  <	mov rsi, [rbp + 84]>
new  <>

2490:
old  <	add rsi, rax>
new  < strftime$152:>

2491:
old  <>
new  <	; PostCall 136>

2492:
old  < strftime$160:>
new  <>

2493:
old  <	; Dereference Â£temporary3008 -> Â£temporary3011 Â£temporary3011 0>
new  < strftime$153:>

2494:
old  <>
new  <	; Goto 343>

2495:
old  < strftime$161:>
new  <	jmp strftime$343>

2496:
old  <	; Parameter 168 pointer Â£temporary3008 -> Â£temporary3011>
new  <>

2497:
old  <	mov rax, [rsi]>
new  < strftime$154:>

2498:
old  <	mov [rbp + 168], rax>
new  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2500:
old  < strftime$162:>
new  < strftime$155:>

2501:
old  <	; Call 136 strcpy 0>
new  <	; Parameter 160 pointer add>

2502:
old  <	mov qword [rbp + 136], strftime$163>
new  <	mov [rbp + 160], rbp>

2503:
old  <	mov [rbp + 144], rbp>
new  <	add qword [rbp + 160], 116>

2504:
old  <	add rbp, 136>
new  <>

2505:
old  <	jmp strcpy>
new  < strftime$156:>

2506:
old  <>
new  <	; Dereference Â£temporary2994 -> tp tp 0>

2507:
old  < strftime$163:>
new  <	mov rsi, [rbp + 44]>

2508:
old  <	; PostCall 136>
new  <>

2509:
old  <>
new  < strftime$157:>

2510:
old  < strftime$164:>
new  <	; IntegralToIntegral Â£temporary2996 Â£temporary2994 -> tp>

2511:
old  <	; Goto 343>
new  <	mov eax, [rsi + 16]>

2512:
old  <	jmp strftime$343>
new  <	mov rbx, 4294967295>

2513:
old  <>
new  <	and rax, rbx>

2514:
old  < strftime$165:>
new  <>

2515:
old  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < strftime$158:>

2516:
old  <>
new  <	; UnsignedMultiply Â£temporary2997 Â£temporary2996 8>

2517:
old  < strftime$166:>
new  <	xor rdx, rdx>

2518:
old  <	; Parameter 160 pointer add>
new  <	mul qword [int8$8#]>

2519:
old  <	mov [rbp + 160], rbp>
new  <>

2520:
old  <	add qword [rbp + 160], 116>
new  < strftime$159:>

2521:
old  <>
new  <	; BinaryAdd Â£temporary2998 longMonthList Â£temporary2997>

2522:
old  < strftime$167:>
new  <	mov rsi, [rbp + 84]>

2523:
old  <	; Parameter 168 pointer "%02i-%02i-%02i %02i:%02i:%02i">
new  <	add rsi, rax>

2524:
old  <	mov qword [rbp + 168], string_2502i2D2502i2D2502i202502i3A2502i3A2502i#>
new  <>

2525:
old  <>
new  < strftime$160:>

2526:
old  < strftime$168:>
new  <	; Dereference Â£temporary2995 -> Â£temporary2998 Â£temporary2998 0>

2527:
old  <	; Dereference Â£temporary3013 -> tp tp 0>
new  <>

2528:
old  <	mov rsi, [rbp + 44]>
new  < strftime$161:>

2529:
old  <>
new  <	; Parameter 168 pointer Â£temporary2995 -> Â£temporary2998>

2530:
old  < strftime$169:>
new  <	mov rax, [rsi]>

2531:
old  <	; BinaryAdd Â£temporary3014 Â£temporary3013 -> tp 1900>
new  <	mov [rbp + 168], rax>

2532:
old  <	mov eax, [rsi + 20]>
new  <>

2533:
old  <	add eax, 1900>
new  < strftime$162:>

2534:
old  <>
new  <	; Call 136 strcpy 0>

2535:
old  < strftime$170:>
new  <	mov qword [rbp + 136], strftime$163>

2536:
old  <	; Parameter 176 signedint Â£temporary3014>
new  <	mov [rbp + 144], rbp>

2537:
old  <	mov [rbp + 176], eax>
new  <	add rbp, 136>

2538:
old  <>
new  <	jmp strcpy>

2539:
old  < strftime$171:>
new  <>

2540:
old  <	; Dereference Â£temporary3015 -> tp tp 0>
new  < strftime$163:>

2541:
old  <	mov rsi, [rbp + 44]>
new  <	; PostCall 136>

2543:
old  < strftime$172:>
new  < strftime$164:>

2544:
old  <	; BinaryAdd Â£temporary3016 Â£temporary3015 -> tp 1>
new  <	; Goto 343>

2545:
old  <	mov eax, [rsi + 16]>
new  <	jmp strftime$343>

2546:
old  <	inc eax>
new  <>

2547:
old  <>
new  < strftime$165:>

2548:
old  < strftime$173:>
new  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2549:
old  <	; Parameter 180 signedint Â£temporary3016>
new  <>

2550:
old  <	mov [rbp + 180], eax>
new  < strftime$166:>

2551:
old  <>
new  <	; Parameter 160 pointer add>

2552:
old  < strftime$174:>
new  <	mov [rbp + 160], rbp>

2553:
old  <	; Dereference Â£temporary3017 -> tp tp 0>
new  <	add qword [rbp + 160], 116>

2554:
old  <	mov rsi, [rbp + 44]>
new  <>

2555:
old  <>
new  < strftime$167:>

2556:
old  < strftime$175:>
new  <	; Parameter 168 pointer "%02i-%02i-%02i %02i:%02i:%02i">

2557:
old  <	; Parameter 184 signedint Â£temporary3017 -> tp>
new  <	mov qword [rbp + 168], string_2502i2D2502i2D2502i202502i3A2502i3A2502i#>

2558:
old  <	mov eax, [rsi + 12]>
new  <>

2559:
old  <	mov [rbp + 184], eax>
new  < strftime$168:>

2560:
old  <>
new  <	; Dereference Â£temporary3000 -> tp tp 0>

2561:
old  < strftime$176:>
new  <	mov rsi, [rbp + 44]>

2562:
old  <	; Dereference Â£temporary3018 -> tp tp 0>
new  <>

2563:
old  <	mov rsi, [rbp + 44]>
new  < strftime$169:>

2564:
old  <>
new  <	; BinaryAdd Â£temporary3001 Â£temporary3000 -> tp 1900>

2565:
old  < strftime$177:>
new  <	mov eax, [rsi + 20]>

2566:
old  <	; Parameter 188 signedint Â£temporary3018 -> tp>
new  <	add eax, 1900>

2567:
old  <	mov eax, [rsi + 8]>
new  <>

2568:
old  <	mov [rbp + 188], eax>
new  < strftime$170:>

2569:
old  <>
new  <	; Parameter 176 signedint Â£temporary3001>

2570:
old  < strftime$178:>
new  <	mov [rbp + 176], eax>

2571:
old  <	; Dereference Â£temporary3019 -> tp tp 0>
new  <>

2572:
old  <	mov rsi, [rbp + 44]>
new  < strftime$171:>

2573:
old  <>
new  <	; Dereference Â£temporary3002 -> tp tp 0>

2574:
old  < strftime$179:>
new  <	mov rsi, [rbp + 44]>

2575:
old  <	; Parameter 192 signedint Â£temporary3019 -> tp>
new  <>

2576:
old  <	mov eax, [rsi + 4]>
new  < strftime$172:>

2577:
old  <	mov [rbp + 192], eax>
new  <	; BinaryAdd Â£temporary3003 Â£temporary3002 -> tp 1>

2578:
old  <>
new  <	mov eax, [rsi + 16]>

2579:
old  < strftime$180:>
new  <	inc eax>

2580:
old  <	; Dereference Â£temporary3020 -> tp tp 0>
new  <>

2581:
old  <	mov rsi, [rbp + 44]>
new  < strftime$173:>

2582:
old  <>
new  <	; Parameter 180 signedint Â£temporary3003>

2583:
old  < strftime$181:>
new  <	mov [rbp + 180], eax>

2584:
old  <	; Parameter 196 signedint Â£temporary3020 -> tp>
new  <>

2585:
old  <	mov eax, [rsi]>
new  < strftime$174:>

2586:
old  <	mov [rbp + 196], eax>
new  <	; Dereference Â£temporary3004 -> tp tp 0>

2587:
old  <>
new  <	mov rsi, [rbp + 44]>

2588:
old  < strftime$182:>
new  <>

2589:
old  <	; Call 136 sprintf 24>
new  < strftime$175:>

2590:
old  <	mov qword [rbp + 136], strftime$183>
new  <	; Parameter 184 signedint Â£temporary3004 -> tp>

2591:
old  <	mov [rbp + 144], rbp>
new  <	mov eax, [rsi + 12]>

2592:
old  <	add rbp, 136>
new  <	mov [rbp + 184], eax>

2593:
old  <	mov rdi, rbp>
new  <>

2594:
old  <	add rdi, 24>
new  < strftime$176:>

2595:
old  <	jmp sprintf>
new  <	; Dereference Â£temporary3005 -> tp tp 0>

2596:
old  <>
new  <	mov rsi, [rbp + 44]>

2597:
old  < strftime$183:>
new  <>

2598:
old  <	; PostCall 136>
new  < strftime$177:>

2599:
old  <>
new  <	; Parameter 188 signedint Â£temporary3005 -> tp>

2600:
old  < strftime$184:>
new  <	mov eax, [rsi + 8]>

2601:
old  <	; Goto 343>
new  <	mov [rbp + 188], eax>

2602:
old  <	jmp strftime$343>
new  <>

2603:
old  <>
new  < strftime$178:>

2604:
old  < strftime$185:>
new  <	; Dereference Â£temporary3006 -> tp tp 0>

2605:
old  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov rsi, [rbp + 44]>

2607:
old  < strftime$186:>
new  < strftime$179:>

2608:
old  <	; Parameter 160 pointer add>
new  <	; Parameter 192 signedint Â£temporary3006 -> tp>

2609:
old  <	mov [rbp + 160], rbp>
new  <	mov eax, [rsi + 4]>

2610:
old  <	add qword [rbp + 160], 116>
new  <	mov [rbp + 192], eax>

2612:
old  < strftime$187:>
new  < strftime$180:>

2613:
old  <	; Parameter 168 pointer "%i">
new  <	; Dereference Â£temporary3007 -> tp tp 0>

2614:
old  <	mov qword [rbp + 168], string_25i#>
new  <	mov rsi, [rbp + 44]>

2616:
old  < strftime$188:>
new  < strftime$181:>

2617:
old  <	; Dereference Â£temporary3022 -> tp tp 0>
new  <	; Parameter 196 signedint Â£temporary3007 -> tp>

2618:
old  <	mov rsi, [rbp + 44]>
new  <	mov eax, [rsi]>

2619:
old  <>
new  <	mov [rbp + 196], eax>

2620:
old  < strftime$189:>
new  <>

2621:
old  <	; Parameter 176 signedint Â£temporary3022 -> tp>
new  < strftime$182:>

2622:
old  <	mov eax, [rsi + 12]>
new  <	; Call 136 sprintf 24>

2623:
old  <	mov [rbp + 176], eax>
new  <	mov qword [rbp + 136], strftime$183>

2624:
old  <>
new  <	mov [rbp + 144], rbp>

2625:
old  < strftime$190:>
new  <	add rbp, 136>

2626:
old  <	; Call 136 sprintf 4>
new  <	mov rdi, rbp>

2627:
old  <	mov qword [rbp + 136], strftime$191>
new  <	add rdi, 24>

2628:
old  <	mov [rbp + 144], rbp>
new  <	jmp sprintf>

2629:
old  <	add rbp, 136>
new  <>

2630:
old  <	mov rdi, rbp>
new  < strftime$183:>

2631:
old  <	add rdi, 4>
new  <	; PostCall 136>

2632:
old  <	jmp sprintf>
new  <>

2633:
old  <>
new  < strftime$184:>

2634:
old  < strftime$191:>
new  <	; Goto 343>

2635:
old  <	; PostCall 136>
new  <	jmp strftime$343>

2637:
old  < strftime$192:>
new  < strftime$185:>

2638:
old  <	; Goto 343>
new  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2639:
old  <	jmp strftime$343>
new  <>

2640:
old  <>
new  < strftime$186:>

2641:
old  < strftime$193:>
new  <	; Parameter 160 pointer add>

2642:
old  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov [rbp + 160], rbp>

2643:
old  <>
new  <	add qword [rbp + 160], 116>

2644:
old  < strftime$194:>
new  <>

2645:
old  <	; Parameter 160 pointer add>
new  < strftime$187:>

2646:
old  <	mov [rbp + 160], rbp>
new  <	; Parameter 168 pointer "%i">

2647:
old  <	add qword [rbp + 160], 116>
new  <	mov qword [rbp + 168], string_25i#>

2649:
old  < strftime$195:>
new  < strftime$188:>

2650:
old  <	; Parameter 168 pointer "%i">
new  <	; Dereference Â£temporary3009 -> tp tp 0>

2651:
old  <	mov qword [rbp + 168], string_25i#>
new  <	mov rsi, [rbp + 44]>

2653:
old  < strftime$196:>
new  < strftime$189:>

2654:
old  <	; Dereference Â£temporary3024 -> tp tp 0>
new  <	; Parameter 176 signedint Â£temporary3009 -> tp>

2655:
old  <	mov rsi, [rbp + 44]>
new  <	mov eax, [rsi + 12]>

2656:
old  <>
new  <	mov [rbp + 176], eax>

2657:
old  < strftime$197:>
new  <>

2658:
old  <	; Parameter 176 signedint Â£temporary3024 -> tp>
new  < strftime$190:>

2659:
old  <	mov eax, [rsi + 8]>
new  <	; Call 136 sprintf 4>

2660:
old  <	mov [rbp + 176], eax>
new  <	mov qword [rbp + 136], strftime$191>

2661:
old  <>
new  <	mov [rbp + 144], rbp>

2662:
old  < strftime$198:>
new  <	add rbp, 136>

2663:
old  <	; Call 136 sprintf 4>
new  <	mov rdi, rbp>

2664:
old  <	mov qword [rbp + 136], strftime$199>
new  <	add rdi, 4>

2665:
old  <	mov [rbp + 144], rbp>
new  <	jmp sprintf>

2666:
old  <	add rbp, 136>
new  <>

2667:
old  <	mov rdi, rbp>
new  < strftime$191:>

2668:
old  <	add rdi, 4>
new  <	; PostCall 136>

2669:
old  <	jmp sprintf>
new  <>

2670:
old  <>
new  < strftime$192:>

2671:
old  < strftime$199:>
new  <	; Goto 343>

2672:
old  <	; PostCall 136>
new  <	jmp strftime$343>

2674:
old  < strftime$200:>
new  < strftime$193:>

2675:
old  <	; Goto 343>
new  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2676:
old  <	jmp strftime$343>
new  <>

2677:
old  <>
new  < strftime$194:>

2678:
old  < strftime$201:>
new  <	; Parameter 160 pointer add>

2679:
old  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov [rbp + 160], rbp>

2680:
old  <>
new  <	add qword [rbp + 160], 116>

2681:
old  < strftime$202:>
new  <>

2682:
old  <	; Parameter 160 pointer add>
new  < strftime$195:>

2683:
old  <	mov [rbp + 160], rbp>
new  <	; Parameter 168 pointer "%i">

2684:
old  <	add qword [rbp + 160], 116>
new  <	mov qword [rbp + 168], string_25i#>

2686:
old  < strftime$203:>
new  < strftime$196:>

2687:
old  <	; Parameter 168 pointer "%i">
new  <	; Dereference Â£temporary3011 -> tp tp 0>

2688:
old  <	mov qword [rbp + 168], string_25i#>
new  <	mov rsi, [rbp + 44]>

2690:
old  < strftime$204:>
new  < strftime$197:>

2691:
old  <	; Dereference Â£temporary3026 -> tp tp 0>
new  <	; Parameter 176 signedint Â£temporary3011 -> tp>

2692:
old  <	mov rsi, [rbp + 44]>
new  <	mov eax, [rsi + 8]>

2693:
old  <>
new  <	mov [rbp + 176], eax>

2694:
old  < strftime$205:>
new  <>

2695:
old  <	; SignedModulo Â£temporary3027 Â£temporary3026 -> tp 12>
new  < strftime$198:>

2696:
old  <	mov eax, [rsi + 8]>
new  <	; Call 136 sprintf 4>

2697:
old  <	xor edx, edx>
new  <	mov qword [rbp + 136], strftime$199>

2698:
old  <	idiv dword [int4$12#]>
new  <	mov [rbp + 144], rbp>

2699:
old  <>
new  <	add rbp, 136>

2700:
old  < strftime$206:>
new  <	mov rdi, rbp>

2701:
old  <	; Parameter 176 signedint Â£temporary3027>
new  <	add rdi, 4>

2702:
old  <	mov [rbp + 176], edx>
new  <	jmp sprintf>

2704:
old  < strftime$207:>
new  < strftime$199:>

2705:
old  <	; Call 136 sprintf 4>
new  <	; PostCall 136>

2706:
old  <	mov qword [rbp + 136], strftime$208>
new  <>

2707:
old  <	mov [rbp + 144], rbp>
new  < strftime$200:>

2708:
old  <	add rbp, 136>
new  <	; Goto 343>

2709:
old  <	mov rdi, rbp>
new  <	jmp strftime$343>

2710:
old  <	add rdi, 4>
new  <>

2711:
old  <	jmp sprintf>
new  < strftime$201:>

2712:
old  <>
new  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2713:
old  < strftime$208:>
new  <>

2714:
old  <	; PostCall 136>
new  < strftime$202:>

2715:
old  <>
new  <	; Parameter 160 pointer add>

2716:
old  < strftime$209:>
new  <	mov [rbp + 160], rbp>

2717:
old  <	; Goto 343>
new  <	add qword [rbp + 160], 116>

2718:
old  <	jmp strftime$343>
new  <>

2719:
old  <>
new  < strftime$203:>

2720:
old  < strftime$210:>
new  <	; Parameter 168 pointer "%i">

2721:
old  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov qword [rbp + 168], string_25i#>

2723:
old  < strftime$211:>
new  < strftime$204:>

2724:
old  <	; Parameter 160 pointer add>
new  <	; Dereference Â£temporary3013 -> tp tp 0>

2725:
old  <	mov [rbp + 160], rbp>
new  <	mov rsi, [rbp + 44]>

2726:
old  <	add qword [rbp + 160], 116>
new  <>

2727:
old  <>
new  < strftime$205:>

2728:
old  < strftime$212:>
new  <	; SignedModulo Â£temporary3014 Â£temporary3013 -> tp 12>

2729:
old  <	; Parameter 168 pointer "%i">
new  <	mov eax, [rsi + 8]>

2730:
old  <	mov qword [rbp + 168], string_25i#>
new  <	xor edx, edx>

2731:
old  <>
new  <	idiv dword [int4$12#]>

2732:
old  < strftime$213:>
new  <>

2733:
old  <	; Dereference Â£temporary3029 -> tp tp 0>
new  < strftime$206:>

2734:
old  <	mov rsi, [rbp + 44]>
new  <	; Parameter 176 signedint Â£temporary3014>

2735:
old  <>
new  <	mov [rbp + 176], edx>

2736:
old  < strftime$214:>
new  <>

2737:
old  <	; Parameter 176 signedint Â£temporary3029 -> tp>
new  < strftime$207:>

2738:
old  <	mov eax, [rsi + 28]>
new  <	; Call 136 sprintf 4>

2739:
old  <	mov [rbp + 176], eax>
new  <	mov qword [rbp + 136], strftime$208>

2740:
old  <>
new  <	mov [rbp + 144], rbp>

2741:
old  < strftime$215:>
new  <	add rbp, 136>

2742:
old  <	; Call 136 sprintf 4>
new  <	mov rdi, rbp>

2743:
old  <	mov qword [rbp + 136], strftime$216>
new  <	add rdi, 4>

2744:
old  <	mov [rbp + 144], rbp>
new  <	jmp sprintf>

2745:
old  <	add rbp, 136>
new  <>

2746:
old  <	mov rdi, rbp>
new  < strftime$208:>

2747:
old  <	add rdi, 4>
new  <	; PostCall 136>

2748:
old  <	jmp sprintf>
new  <>

2749:
old  <>
new  < strftime$209:>

2750:
old  < strftime$216:>
new  <	; Goto 343>

2751:
old  <	; PostCall 136>
new  <	jmp strftime$343>

2753:
old  < strftime$217:>
new  < strftime$210:>

2754:
old  <	; Goto 343>
new  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2755:
old  <	jmp strftime$343>
new  <>

2756:
old  <>
new  < strftime$211:>

2757:
old  < strftime$218:>
new  <	; Parameter 160 pointer add>

2758:
old  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov [rbp + 160], rbp>

2759:
old  <>
new  <	add qword [rbp + 160], 116>

2760:
old  < strftime$219:>
new  <>

2761:
old  <	; Parameter 160 pointer add>
new  < strftime$212:>

2762:
old  <	mov [rbp + 160], rbp>
new  <	; Parameter 168 pointer "%i">

2763:
old  <	add qword [rbp + 160], 116>
new  <	mov qword [rbp + 168], string_25i#>

2765:
old  < strftime$220:>
new  < strftime$213:>

2766:
old  <	; Parameter 168 pointer "%i">
new  <	; Dereference Â£temporary3016 -> tp tp 0>

2767:
old  <	mov qword [rbp + 168], string_25i#>
new  <	mov rsi, [rbp + 44]>

2769:
old  < strftime$221:>
new  < strftime$214:>

2770:
old  <	; Dereference Â£temporary3031 -> tp tp 0>
new  <	; Parameter 176 signedint Â£temporary3016 -> tp>

2771:
old  <	mov rsi, [rbp + 44]>
new  <	mov eax, [rsi + 28]>

2772:
old  <>
new  <	mov [rbp + 176], eax>

2773:
old  < strftime$222:>
new  <>

2774:
old  <	; BinaryAdd Â£temporary3032 Â£temporary3031 -> tp 1>
new  < strftime$215:>

2775:
old  <	mov eax, [rsi + 16]>
new  <	; Call 136 sprintf 4>

2776:
old  <	inc eax>
new  <	mov qword [rbp + 136], strftime$216>

2777:
old  <>
new  <	mov [rbp + 144], rbp>

2778:
old  < strftime$223:>
new  <	add rbp, 136>

2779:
old  <	; Parameter 176 signedint Â£temporary3032>
new  <	mov rdi, rbp>

2780:
old  <	mov [rbp + 176], eax>
new  <	add rdi, 4>

2781:
old  <>
new  <	jmp sprintf>

2782:
old  < strftime$224:>
new  <>

2783:
old  <	; Call 136 sprintf 4>
new  < strftime$216:>

2784:
old  <	mov qword [rbp + 136], strftime$225>
new  <	; PostCall 136>

2785:
old  <	mov [rbp + 144], rbp>
new  <>

2786:
old  <	add rbp, 136>
new  < strftime$217:>

2787:
old  <	mov rdi, rbp>
new  <	; Goto 343>

2788:
old  <	add rdi, 4>
new  <	jmp strftime$343>

2789:
old  <	jmp sprintf>
new  <>

2790:
old  <>
new  < strftime$218:>

2791:
old  < strftime$225:>
new  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2792:
old  <	; PostCall 136>
new  <>

2793:
old  <>
new  < strftime$219:>

2794:
old  < strftime$226:>
new  <	; Parameter 160 pointer add>

2795:
old  <	; Goto 343>
new  <	mov [rbp + 160], rbp>

2796:
old  <	jmp strftime$343>
new  <	add qword [rbp + 160], 116>

2798:
old  < strftime$227:>
new  < strftime$220:>

2799:
old  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter 168 pointer "%i">

2800:
old  <>
new  <	mov qword [rbp + 168], string_25i#>

2801:
old  < strftime$228:>
new  <>

2802:
old  <	; Parameter 160 pointer add>
new  < strftime$221:>

2803:
old  <	mov [rbp + 160], rbp>
new  <	; Dereference Â£temporary3018 -> tp tp 0>

2804:
old  <	add qword [rbp + 160], 116>
new  <	mov rsi, [rbp + 44]>

2806:
old  < strftime$229:>
new  < strftime$222:>

2807:
old  <	; Parameter 168 pointer "%i">
new  <	; BinaryAdd Â£temporary3019 Â£temporary3018 -> tp 1>

2808:
old  <	mov qword [rbp + 168], string_25i#>
new  <	mov eax, [rsi + 16]>

2809:
old  <>
new  <	inc eax>

2810:
old  < strftime$230:>
new  <>

2811:
old  <	; Dereference Â£temporary3034 -> tp tp 0>
new  < strftime$223:>

2812:
old  <	mov rsi, [rbp + 44]>
new  <	; Parameter 176 signedint Â£temporary3019>

2813:
old  <>
new  <	mov [rbp + 176], eax>

2814:
old  < strftime$231:>
new  <>

2815:
old  <	; Parameter 176 signedint Â£temporary3034 -> tp>
new  < strftime$224:>

2816:
old  <	mov eax, [rsi + 4]>
new  <	; Call 136 sprintf 4>

2817:
old  <	mov [rbp + 176], eax>
new  <	mov qword [rbp + 136], strftime$225>

2818:
old  <>
new  <	mov [rbp + 144], rbp>

2819:
old  < strftime$232:>
new  <	add rbp, 136>

2820:
old  <	; Call 136 sprintf 4>
new  <	mov rdi, rbp>

2821:
old  <	mov qword [rbp + 136], strftime$233>
new  <	add rdi, 4>

2822:
old  <	mov [rbp + 144], rbp>
new  <	jmp sprintf>

2823:
old  <	add rbp, 136>
new  <>

2824:
old  <	mov rdi, rbp>
new  < strftime$225:>

2825:
old  <	add rdi, 4>
new  <	; PostCall 136>

2826:
old  <	jmp sprintf>
new  <>

2827:
old  <>
new  < strftime$226:>

2828:
old  < strftime$233:>
new  <	; Goto 343>

2829:
old  <	; PostCall 136>
new  <	jmp strftime$343>

2831:
old  < strftime$234:>
new  < strftime$227:>

2832:
old  <	; Goto 343>
new  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2833:
old  <	jmp strftime$343>
new  <>

2834:
old  <>
new  < strftime$228:>

2835:
old  < strftime$235:>
new  <	; Parameter 160 pointer add>

2836:
old  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov [rbp + 160], rbp>

2837:
old  <>
new  <	add qword [rbp + 160], 116>

2838:
old  < strftime$236:>
new  <>

2839:
old  <	; Parameter 160 pointer add>
new  < strftime$229:>

2840:
old  <	mov [rbp + 160], rbp>
new  <	; Parameter 168 pointer "%i">

2841:
old  <	add qword [rbp + 160], 116>
new  <	mov qword [rbp + 168], string_25i#>

2843:
old  < strftime$237:>
new  < strftime$230:>

2844:
old  <	; Parameter 168 pointer "%s">
new  <	; Dereference Â£temporary3021 -> tp tp 0>

2845:
old  <	mov qword [rbp + 168], string_25s#>
new  <	mov rsi, [rbp + 44]>

2847:
old  < strftime$238:>
new  < strftime$231:>

2848:
old  <	; Dereference Â£temporary3036 -> tp tp 0>
new  <	; Parameter 176 signedint Â£temporary3021 -> tp>

2849:
old  <	mov rsi, [rbp + 44]>
new  <	mov eax, [rsi + 4]>

2850:
old  <>
new  <	mov [rbp + 176], eax>

2851:
old  < strftime$239:>
new  <>

2852:
old  <	; SignedGreaterThanEqual 242 Â£temporary3036 -> tp 12>
new  < strftime$232:>

2853:
old  <	cmp dword [rsi + 8], 12>
new  <	; Call 136 sprintf 4>

2854:
old  <	jge strftime$242>
new  <	mov qword [rbp + 136], strftime$233>

2855:
old  <>
new  <	mov [rbp + 144], rbp>

2856:
old  < strftime$240:>
new  <	add rbp, 136>

2857:
old  <	; Assign Â£temporary3038 "AM">
new  <	mov rdi, rbp>

2858:
old  <	mov eax, string_AM#>
new  <	add rdi, 4>

2859:
old  <>
new  <	jmp sprintf>

2860:
old  < strftime$241:>
new  <>

2861:
old  <	; Goto 243>
new  < strftime$233:>

2862:
old  <	jmp strftime$243>
new  <	; PostCall 136>

2864:
old  < strftime$242:>
new  < strftime$234:>

2865:
old  <	; Assign Â£temporary3038 "PM">
new  <	; Goto 343>

2866:
old  <	mov eax, string_PM#>
new  <	jmp strftime$343>

2868:
old  < strftime$243:>
new  < strftime$235:>

2869:
old  <	; Parameter 176 pointer Â£temporary3038>
new  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2870:
old  <	mov [rbp + 176], eax>
new  <>

2871:
old  <>
new  < strftime$236:>

2872:
old  < strftime$244:>
new  <	; Parameter 160 pointer add>

2873:
old  <	; Call 136 sprintf 8>
new  <	mov [rbp + 160], rbp>

2874:
old  <	mov qword [rbp + 136], strftime$245>
new  <	add qword [rbp + 160], 116>

2875:
old  <	mov [rbp + 144], rbp>
new  <>

2876:
old  <	add rbp, 136>
new  < strftime$237:>

2877:
old  <	mov rdi, rbp>
new  <	; Parameter 168 pointer "%s">

2878:
old  <	add rdi, 8>
new  <	mov qword [rbp + 168], string_25s#>

2879:
old  <	jmp sprintf>
new  <>

2880:
old  <>
new  < strftime$238:>

2881:
old  < strftime$245:>
new  <	; Dereference Â£temporary3023 -> tp tp 0>

2882:
old  <	; PostCall 136>
new  <	mov rsi, [rbp + 44]>

2884:
old  < strftime$246:>
new  < strftime$239:>

2885:
old  <	; Goto 343>
new  <	; SignedGreaterThanEqual 242 Â£temporary3023 -> tp 12>

2886:
old  <	jmp strftime$343>
new  <	cmp dword [rsi + 8], 12>

2887:
old  <>
new  <	jge strftime$242>

2888:
old  < strftime$247:>
new  <>

2889:
old  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < strftime$240:>

2890:
old  <>
new  <	; Assign Â£temporary3025 "AM">

2891:
old  < strftime$248:>
new  <	mov eax, string_AM#>

2892:
old  <	; Parameter 160 pointer add>
new  <>

2893:
old  <	mov [rbp + 160], rbp>
new  < strftime$241:>

2894:
old  <	add qword [rbp + 160], 116>
new  <	; Goto 243>

2895:
old  <>
new  <	jmp strftime$243>

2896:
old  < strftime$249:>
new  <>

2897:
old  <	; Parameter 168 pointer "%i">
new  < strftime$242:>

2898:
old  <	mov qword [rbp + 168], string_25i#>
new  <	; Assign Â£temporary3025 "PM">

2899:
old  <>
new  <	mov eax, string_PM#>

2900:
old  < strftime$250:>
new  <>

2901:
old  <	; Dereference Â£temporary3040 -> tp tp 0>
new  < strftime$243:>

2902:
old  <	mov rsi, [rbp + 44]>
new  <	; Parameter 176 pointer Â£temporary3025>

2903:
old  <>
new  <	mov [rbp + 176], eax>

2904:
old  < strftime$251:>
new  <>

2905:
old  <	; Parameter 176 signedint Â£temporary3040 -> tp>
new  < strftime$244:>

2906:
old  <	mov eax, [rsi]>
new  <	; Call 136 sprintf 8>

2907:
old  <	mov [rbp + 176], eax>
new  <	mov qword [rbp + 136], strftime$245>

2908:
old  <>
new  <	mov [rbp + 144], rbp>

2909:
old  < strftime$252:>
new  <	add rbp, 136>

2910:
old  <	; Call 136 sprintf 4>
new  <	mov rdi, rbp>

2911:
old  <	mov qword [rbp + 136], strftime$253>
new  <	add rdi, 8>

2912:
old  <	mov [rbp + 144], rbp>
new  <	jmp sprintf>

2913:
old  <	add rbp, 136>
new  <>

2914:
old  <	mov rdi, rbp>
new  < strftime$245:>

2915:
old  <	add rdi, 4>
new  <	; PostCall 136>

2916:
old  <	jmp sprintf>
new  <>

2917:
old  <>
new  < strftime$246:>

2918:
old  < strftime$253:>
new  <	; Goto 343>

2919:
old  <	; PostCall 136>
new  <	jmp strftime$343>

2921:
old  < strftime$254:>
new  < strftime$247:>

2922:
old  <	; Goto 343>
new  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2923:
old  <	jmp strftime$343>
new  <>

2924:
old  <>
new  < strftime$248:>

2925:
old  < strftime$255:>
new  <	; Parameter 160 pointer add>

2926:
old  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov [rbp + 160], rbp>

2927:
old  <>
new  <	add qword [rbp + 160], 116>

2928:
old  < strftime$256:>
new  <>

2929:
old  <	; Parameter 160 pointer add>
new  < strftime$249:>

2930:
old  <	mov [rbp + 160], rbp>
new  <	; Parameter 168 pointer "%i">

2931:
old  <	add qword [rbp + 160], 116>
new  <	mov qword [rbp + 168], string_25i#>

2933:
old  < strftime$257:>
new  < strftime$250:>

2934:
old  <	; Parameter 168 pointer "%i">
new  <	; Dereference Â£temporary3027 -> tp tp 0>

2935:
old  <	mov qword [rbp + 168], string_25i#>
new  <	mov rsi, [rbp + 44]>

2937:
old  < strftime$258:>
new  < strftime$251:>

2938:
old  <	; Parameter 176 signedint yearDaySunday>
new  <	; Parameter 176 signedint Â£temporary3027 -> tp>

2939:
old  <	mov eax, [rbp + 104]>
new  <	mov eax, [rsi]>

2942:
old  < strftime$259:>
new  < strftime$252:>

2944:
old  <	mov qword [rbp + 136], strftime$260>
new  <	mov qword [rbp + 136], strftime$253>

2951:
old  < strftime$260:>
new  < strftime$253:>

2954:
old  < strftime$261:>
new  < strftime$254:>

2958:
old  < strftime$262:>
new  < strftime$255:>

2961:
old  < strftime$263:>
new  < strftime$256:>

2966:
old  < strftime$264:>
new  < strftime$257:>

2970:
old  < strftime$265:>
new  < strftime$258:>

2971:
old  <	; Dereference Â£temporary3043 -> tp tp 0>
new  <	; Parameter 176 signedint yearDaySunday>

2972:
old  <	mov rsi, [rbp + 44]>
new  <	mov eax, [rbp + 104]>

2973:
old  <>
new  <	mov [rbp + 176], eax>

2974:
old  < strftime$266:>
new  <>

2975:
old  <	; Parameter 176 signedint Â£temporary3043 -> tp>
new  < strftime$259:>

2976:
old  <	mov eax, [rsi + 24]>
new  <	; Call 136 sprintf 4>

2977:
old  <	mov [rbp + 176], eax>
new  <	mov qword [rbp + 136], strftime$260>

2978:
old  <>
new  <	mov [rbp + 144], rbp>

2979:
old  < strftime$267:>
new  <	add rbp, 136>

2980:
old  <	; Call 136 sprintf 4>
new  <	mov rdi, rbp>

2981:
old  <	mov qword [rbp + 136], strftime$268>
new  <	add rdi, 4>

2982:
old  <	mov [rbp + 144], rbp>
new  <	jmp sprintf>

2983:
old  <	add rbp, 136>
new  <>

2984:
old  <	mov rdi, rbp>
new  < strftime$260:>

2985:
old  <	add rdi, 4>
new  <	; PostCall 136>

2986:
old  <	jmp sprintf>
new  <>

2987:
old  <>
new  < strftime$261:>

2988:
old  < strftime$268:>
new  <	; Goto 343>

2989:
old  <	; PostCall 136>
new  <	jmp strftime$343>

2991:
old  < strftime$269:>
new  < strftime$262:>

2992:
old  <	; Goto 343>
new  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2993:
old  <	jmp strftime$343>
new  <>

2994:
old  <>
new  < strftime$263:>

2995:
old  < strftime$270:>
new  <	; Parameter 160 pointer add>

2996:
old  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov [rbp + 160], rbp>

2997:
old  <>
new  <	add qword [rbp + 160], 116>

2998:
old  < strftime$271:>
new  <>

2999:
old  <	; Parameter 160 pointer add>
new  < strftime$264:>

3000:
old  <	mov [rbp + 160], rbp>
new  <	; Parameter 168 pointer "%i">

3001:
old  <	add qword [rbp + 160], 116>
new  <	mov qword [rbp + 168], string_25i#>

3003:
old  < strftime$272:>
new  < strftime$265:>

3004:
old  <	; Parameter 168 pointer "%i">
new  <	; Dereference Â£temporary3030 -> tp tp 0>

3005:
old  <	mov qword [rbp + 168], string_25i#>
new  <	mov rsi, [rbp + 44]>

3007:
old  < strftime$273:>
new  < strftime$266:>

3008:
old  <	; Parameter 176 signedint yearDayMonday>
new  <	; Parameter 176 signedint Â£temporary3030 -> tp>

3009:
old  <	mov eax, [rbp + 108]>
new  <	mov eax, [rsi + 24]>

3012:
old  < strftime$274:>
new  < strftime$267:>

3014:
old  <	mov qword [rbp + 136], strftime$275>
new  <	mov qword [rbp + 136], strftime$268>

3021:
old  < strftime$275:>
new  < strftime$268:>

3024:
old  < strftime$276:>
new  < strftime$269:>

3028:
old  < strftime$277:>
new  < strftime$270:>

3031:
old  < strftime$278:>
new  < strftime$271:>

3036:
old  < strftime$279:>
new  < strftime$272:>

3037:
old  <	; Parameter 168 pointer "%02i:%02i:%02i">
new  <	; Parameter 168 pointer "%i">

3038:
old  <	mov qword [rbp + 168], string_2502i3A2502i3A2502i#>
new  <	mov qword [rbp + 168], string_25i#>

3040:
old  < strftime$280:>
new  < strftime$273:>

3041:
old  <	; Dereference Â£temporary3046 -> tp tp 0>
new  <	; Parameter 176 signedint yearDayMonday>

3042:
old  <	mov rsi, [rbp + 44]>
new  <	mov eax, [rbp + 108]>

3043:
old  <>
new  <	mov [rbp + 176], eax>

3044:
old  < strftime$281:>
new  <>

3045:
old  <	; Parameter 176 signedint Â£temporary3046 -> tp>
new  < strftime$274:>

3046:
old  <	mov eax, [rsi + 8]>
new  <	; Call 136 sprintf 4>

3047:
old  <	mov [rbp + 176], eax>
new  <	mov qword [rbp + 136], strftime$275>

3048:
old  <>
new  <	mov [rbp + 144], rbp>

3049:
old  < strftime$282:>
new  <	add rbp, 136>

3050:
old  <	; Dereference Â£temporary3047 -> tp tp 0>
new  <	mov rdi, rbp>

3051:
old  <	mov rsi, [rbp + 44]>
new  <	add rdi, 4>

3052:
old  <>
new  <	jmp sprintf>

3053:
old  < strftime$283:>
new  <>

3054:
old  <	; Parameter 180 signedint Â£temporary3047 -> tp>
new  < strftime$275:>

3055:
old  <	mov eax, [rsi + 4]>
new  <	; PostCall 136>

3056:
old  <	mov [rbp + 180], eax>
new  <>

3057:
old  <>
new  < strftime$276:>

3058:
old  < strftime$284:>
new  <	; Goto 343>

3059:
old  <	; Dereference Â£temporary3048 -> tp tp 0>
new  <	jmp strftime$343>

3060:
old  <	mov rsi, [rbp + 44]>
new  <>

3061:
old  <>
new  < strftime$277:>

3062:
old  < strftime$285:>
new  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3063:
old  <	; Parameter 184 signedint Â£temporary3048 -> tp>
new  <>

3064:
old  <	mov eax, [rsi]>
new  < strftime$278:>

3065:
old  <	mov [rbp + 184], eax>
new  <	; Parameter 160 pointer add>

3066:
old  <>
new  <	mov [rbp + 160], rbp>

3067:
old  < strftime$286:>
new  <	add qword [rbp + 160], 116>

3068:
old  <	; Call 136 sprintf 12>
new  <>

3069:
old  <	mov qword [rbp + 136], strftime$287>
new  < strftime$279:>

3070:
old  <	mov [rbp + 144], rbp>
new  <	; Parameter 168 pointer "%02i:%02i:%02i">

3071:
old  <	add rbp, 136>
new  <	mov qword [rbp + 168], string_2502i3A2502i3A2502i#>

3072:
old  <	mov rdi, rbp>
new  <>

3073:
old  <	add rdi, 12>
new  < strftime$280:>

3074:
old  <	jmp sprintf>
new  <	; Dereference Â£temporary3033 -> tp tp 0>

3075:
old  <>
new  <	mov rsi, [rbp + 44]>

3076:
old  < strftime$287:>
new  <>

3077:
old  <	; PostCall 136>
new  < strftime$281:>

3078:
old  <>
new  <	; Parameter 176 signedint Â£temporary3033 -> tp>

3079:
old  < strftime$288:>
new  <	mov eax, [rsi + 8]>

3080:
old  <	; Goto 343>
new  <	mov [rbp + 176], eax>

3081:
old  <	jmp strftime$343>
new  <>

3082:
old  <>
new  < strftime$282:>

3083:
old  < strftime$289:>
new  <	; Dereference Â£temporary3034 -> tp tp 0>

3084:
old  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov rsi, [rbp + 44]>

3086:
old  < strftime$290:>
new  < strftime$283:>

3087:
old  <	; Parameter 160 pointer add>
new  <	; Parameter 180 signedint Â£temporary3034 -> tp>

3088:
old  <	mov [rbp + 160], rbp>
new  <	mov eax, [rsi + 4]>

3089:
old  <	add qword [rbp + 160], 116>
new  <	mov [rbp + 180], eax>

3091:
old  < strftime$291:>
new  < strftime$284:>

3092:
old  <	; Parameter 168 pointer "%02i:%02i:%02i">
new  <	; Dereference Â£temporary3035 -> tp tp 0>

3093:
old  <	mov qword [rbp + 168], string_2502i3A2502i3A2502i#>
new  <	mov rsi, [rbp + 44]>

3095:
old  < strftime$292:>
new  < strftime$285:>

3096:
old  <	; Dereference Â£temporary3050 -> tp tp 0>
new  <	; Parameter 184 signedint Â£temporary3035 -> tp>

3097:
old  <	mov rsi, [rbp + 44]>
new  <	mov eax, [rsi]>

3098:
old  <>
new  <	mov [rbp + 184], eax>

3099:
old  < strftime$293:>
new  <>

3100:
old  <	; Parameter 176 signedint Â£temporary3050 -> tp>
new  < strftime$286:>

3101:
old  <	mov eax, [rsi + 8]>
new  <	; Call 136 sprintf 12>

3102:
old  <	mov [rbp + 176], eax>
new  <	mov qword [rbp + 136], strftime$287>

3103:
old  <>
new  <	mov [rbp + 144], rbp>

3104:
old  < strftime$294:>
new  <	add rbp, 136>

3105:
old  <	; Dereference Â£temporary3051 -> tp tp 0>
new  <	mov rdi, rbp>

3106:
old  <	mov rsi, [rbp + 44]>
new  <	add rdi, 12>

3107:
old  <>
new  <	jmp sprintf>

3108:
old  < strftime$295:>
new  <>

3109:
old  <	; Parameter 180 signedint Â£temporary3051 -> tp>
new  < strftime$287:>

3110:
old  <	mov eax, [rsi + 4]>
new  <	; PostCall 136>

3111:
old  <	mov [rbp + 180], eax>
new  <>

3112:
old  <>
new  < strftime$288:>

3113:
old  < strftime$296:>
new  <	; Goto 343>

3114:
old  <	; Dereference Â£temporary3052 -> tp tp 0>
new  <	jmp strftime$343>

3115:
old  <	mov rsi, [rbp + 44]>
new  <>

3116:
old  <>
new  < strftime$289:>

3117:
old  < strftime$297:>
new  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3118:
old  <	; Parameter 184 signedint Â£temporary3052 -> tp>
new  <>

3119:
old  <	mov eax, [rsi]>
new  < strftime$290:>

3120:
old  <	mov [rbp + 184], eax>
new  <	; Parameter 160 pointer add>

3121:
old  <>
new  <	mov [rbp + 160], rbp>

3122:
old  < strftime$298:>
new  <	add qword [rbp + 160], 116>

3123:
old  <	; Call 136 sprintf 12>
new  <>

3124:
old  <	mov qword [rbp + 136], strftime$299>
new  < strftime$291:>

3125:
old  <	mov [rbp + 144], rbp>
new  <	; Parameter 168 pointer "%02i:%02i:%02i">

3126:
old  <	add rbp, 136>
new  <	mov qword [rbp + 168], string_2502i3A2502i3A2502i#>

3127:
old  <	mov rdi, rbp>
new  <>

3128:
old  <	add rdi, 12>
new  < strftime$292:>

3129:
old  <	jmp sprintf>
new  <	; Dereference Â£temporary3037 -> tp tp 0>

3130:
old  <>
new  <	mov rsi, [rbp + 44]>

3131:
old  < strftime$299:>
new  <>

3132:
old  <	; PostCall 136>
new  < strftime$293:>

3133:
old  <>
new  <	; Parameter 176 signedint Â£temporary3037 -> tp>

3134:
old  < strftime$300:>
new  <	mov eax, [rsi + 8]>

3135:
old  <	; Goto 343>
new  <	mov [rbp + 176], eax>

3136:
old  <	jmp strftime$343>
new  <>

3137:
old  <>
new  < strftime$294:>

3138:
old  < strftime$301:>
new  <	; Dereference Â£temporary3038 -> tp tp 0>

3139:
old  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov rsi, [rbp + 44]>

3141:
old  < strftime$302:>
new  < strftime$295:>

3142:
old  <	; Parameter 160 pointer add>
new  <	; Parameter 180 signedint Â£temporary3038 -> tp>

3143:
old  <	mov [rbp + 160], rbp>
new  <	mov eax, [rsi + 4]>

3144:
old  <	add qword [rbp + 160], 116>
new  <	mov [rbp + 180], eax>

3146:
old  < strftime$303:>
new  < strftime$296:>

3147:
old  <	; Parameter 168 pointer "%i">
new  <	; Dereference Â£temporary3039 -> tp tp 0>

3148:
old  <	mov qword [rbp + 168], string_25i#>
new  <	mov rsi, [rbp + 44]>

3150:
old  < strftime$304:>
new  < strftime$297:>

3151:
old  <	; Dereference Â£temporary3054 -> tp tp 0>
new  <	; Parameter 184 signedint Â£temporary3039 -> tp>

3152:
old  <	mov rsi, [rbp + 44]>
new  <	mov eax, [rsi]>

3153:
old  <>
new  <	mov [rbp + 184], eax>

3154:
old  < strftime$305:>
new  <>

3155:
old  <	; SignedModulo Â£temporary3055 Â£temporary3054 -> tp 100>
new  < strftime$298:>

3156:
old  <	mov eax, [rsi + 20]>
new  <	; Call 136 sprintf 12>

3157:
old  <	xor edx, edx>
new  <	mov qword [rbp + 136], strftime$299>

3158:
old  <	idiv dword [int4$100#]>
new  <	mov [rbp + 144], rbp>

3159:
old  <>
new  <	add rbp, 136>

3160:
old  < strftime$306:>
new  <	mov rdi, rbp>

3161:
old  <	; Parameter 176 signedint Â£temporary3055>
new  <	add rdi, 12>

3162:
old  <	mov [rbp + 176], edx>
new  <	jmp sprintf>

3164:
old  < strftime$307:>
new  < strftime$299:>

3165:
old  <	; Call 136 sprintf 4>
new  <	; PostCall 136>

3166:
old  <	mov qword [rbp + 136], strftime$308>
new  <>

3167:
old  <	mov [rbp + 144], rbp>
new  < strftime$300:>

3168:
old  <	add rbp, 136>
new  <	; Goto 343>

3169:
old  <	mov rdi, rbp>
new  <	jmp strftime$343>

3170:
old  <	add rdi, 4>
new  <>

3171:
old  <	jmp sprintf>
new  < strftime$301:>

3172:
old  <>
new  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3173:
old  < strftime$308:>
new  <>

3174:
old  <	; PostCall 136>
new  < strftime$302:>

3175:
old  <>
new  <	; Parameter 160 pointer add>

3176:
old  < strftime$309:>
new  <	mov [rbp + 160], rbp>

3177:
old  <	; Goto 343>
new  <	add qword [rbp + 160], 116>

3178:
old  <	jmp strftime$343>
new  <>

3179:
old  <>
new  < strftime$303:>

3180:
old  < strftime$310:>
new  <	; Parameter 168 pointer "%i">

3181:
old  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov qword [rbp + 168], string_25i#>

3183:
old  < strftime$311:>
new  < strftime$304:>

3184:
old  <	; Parameter 160 pointer add>
new  <	; Dereference Â£temporary3041 -> tp tp 0>

3185:
old  <	mov [rbp + 160], rbp>
new  <	mov rsi, [rbp + 44]>

3186:
old  <	add qword [rbp + 160], 116>
new  <>

3187:
old  <>
new  < strftime$305:>

3188:
old  < strftime$312:>
new  <	; SignedModulo Â£temporary3042 Â£temporary3041 -> tp 100>

3189:
old  <	; Parameter 168 pointer "%i">
new  <	mov eax, [rsi + 20]>

3190:
old  <	mov qword [rbp + 168], string_25i#>
new  <	xor edx, edx>

3191:
old  <>
new  <	idiv dword [int4$100#]>

3192:
old  < strftime$313:>
new  <>

3193:
old  <	; Dereference Â£temporary3057 -> tp tp 0>
new  < strftime$306:>

3194:
old  <	mov rsi, [rbp + 44]>
new  <	; Parameter 176 signedint Â£temporary3042>

3195:
old  <>
new  <	mov [rbp + 176], edx>

3196:
old  < strftime$314:>
new  <>

3197:
old  <	; BinaryAdd Â£temporary3058 Â£temporary3057 -> tp 1900>
new  < strftime$307:>

3198:
old  <	mov eax, [rsi + 20]>
new  <	; Call 136 sprintf 4>

3199:
old  <	add eax, 1900>
new  <	mov qword [rbp + 136], strftime$308>

3200:
old  <>
new  <	mov [rbp + 144], rbp>

3201:
old  < strftime$315:>
new  <	add rbp, 136>

3202:
old  <	; Parameter 176 signedint Â£temporary3058>
new  <	mov rdi, rbp>

3203:
old  <	mov [rbp + 176], eax>
new  <	add rdi, 4>

3204:
old  <>
new  <	jmp sprintf>

3205:
old  < strftime$316:>
new  <>

3206:
old  <	; Call 136 sprintf 4>
new  < strftime$308:>

3207:
old  <	mov qword [rbp + 136], strftime$317>
new  <	; PostCall 136>

3208:
old  <	mov [rbp + 144], rbp>
new  <>

3209:
old  <	add rbp, 136>
new  < strftime$309:>

3210:
old  <	mov rdi, rbp>
new  <	; Goto 343>

3211:
old  <	add rdi, 4>
new  <	jmp strftime$343>

3212:
old  <	jmp sprintf>
new  <>

3213:
old  <>
new  < strftime$310:>

3214:
old  < strftime$317:>
new  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3215:
old  <	; PostCall 136>
new  <>

3216:
old  <>
new  < strftime$311:>

3217:
old  < strftime$318:>
new  <	; Parameter 160 pointer add>

3218:
old  <	; Goto 343>
new  <	mov [rbp + 160], rbp>

3219:
old  <	jmp strftime$343>
new  <	add qword [rbp + 160], 116>

3221:
old  < strftime$319:>
new  < strftime$312:>

3222:
old  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter 168 pointer "%i">

3223:
old  <>
new  <	mov qword [rbp + 168], string_25i#>

3224:
old  < strftime$320:>
new  <>

3225:
old  <	; Parameter 160 pointer add>
new  < strftime$313:>

3226:
old  <	mov [rbp + 160], rbp>
new  <	; Dereference Â£temporary3044 -> tp tp 0>

3227:
old  <	add qword [rbp + 160], 116>
new  <	mov rsi, [rbp + 44]>

3229:
old  < strftime$321:>
new  < strftime$314:>

3230:
old  <	; Parameter 168 pointer "">
new  <	; BinaryAdd Â£temporary3045 Â£temporary3044 -> tp 1900>

3231:
old  <	mov qword [rbp + 168], string_#>
new  <	mov eax, [rsi + 20]>

3232:
old  <>
new  <	add eax, 1900>

3233:
old  < strftime$322:>
new  <>

3234:
old  <	; Call 136 strcpy 0>
new  < strftime$315:>

3235:
old  <	mov qword [rbp + 136], strftime$323>
new  <	; Parameter 176 signedint Â£temporary3045>

3236:
old  <	mov [rbp + 144], rbp>
new  <	mov [rbp + 176], eax>

3237:
old  <	add rbp, 136>
new  <>

3238:
old  <	jmp strcpy>
new  < strftime$316:>

3239:
old  <>
new  <	; Call 136 sprintf 4>

3240:
old  < strftime$323:>
new  <	mov qword [rbp + 136], strftime$317>

3241:
old  <	; PostCall 136>
new  <	mov [rbp + 144], rbp>

3242:
old  <>
new  <	add rbp, 136>

3243:
old  < strftime$324:>
new  <	mov rdi, rbp>

3244:
old  <	; Goto 343>
new  <	add rdi, 4>

3245:
old  <	jmp strftime$343>
new  <	jmp sprintf>

3247:
old  < strftime$325:>
new  < strftime$317:>

3248:
old  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; PostCall 136>

3250:
old  < strftime$326:>
new  < strftime$318:>

3251:
old  <	; Parameter 160 pointer add>
new  <	; Goto 343>

3252:
old  <	mov [rbp + 160], rbp>
new  <	jmp strftime$343>

3253:
old  <	add qword [rbp + 160], 116>
new  <>

3254:
old  <>
new  < strftime$319:>

3255:
old  < strftime$327:>
new  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3256:
old  <	; Parameter 168 pointer "%">
new  <>

3257:
old  <	mov qword [rbp + 168], string_25#>
new  < strftime$320:>

3258:
old  <>
new  <	; Parameter 160 pointer add>

3259:
old  < strftime$328:>
new  <	mov [rbp + 160], rbp>

3260:
old  <	; Call 136 strcpy 0>
new  <	add qword [rbp + 160], 116>

3261:
old  <	mov qword [rbp + 136], strftime$329>
new  <>

3262:
old  <	mov [rbp + 144], rbp>
new  < strftime$321:>

3263:
old  <	add rbp, 136>
new  <	; Parameter 168 pointer "">

3264:
old  <	jmp strcpy>
new  <	mov qword [rbp + 168], string_#>

3266:
old  < strftime$329:>
new  < strftime$322:>

3267:
old  <	; PostCall 136>
new  <	; Call 136 strcpy 0>

3268:
old  <>
new  <	mov qword [rbp + 136], strftime$323>

3269:
old  < strftime$330:>
new  <	mov [rbp + 144], rbp>

3270:
old  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	add rbp, 136>

3271:
old  <>
new  <	jmp strcpy>

3272:
old  < strftime$331:>
new  <>

3273:
old  <	; Parameter 160 pointer add>
new  < strftime$323:>

3274:
old  <	mov [rbp + 160], rbp>
new  <	; PostCall 136>

3275:
old  <	add qword [rbp + 160], 116>
new  <>

3276:
old  <>
new  < strftime$324:>

3277:
old  < strftime$332:>
new  <	; Goto 343>

3278:
old  <	; Parameter 168 pointer "">
new  <	jmp strftime$343>

3279:
old  <	mov qword [rbp + 168], string_#>
new  <>

3280:
old  <>
new  < strftime$325:>

3281:
old  < strftime$333:>
new  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3282:
old  <	; Call 136 strcpy 0>
new  <>

3283:
old  <	mov qword [rbp + 136], strftime$334>
new  < strftime$326:>

3284:
old  <	mov [rbp + 144], rbp>
new  <	; Parameter 160 pointer add>

3285:
old  <	add rbp, 136>
new  <	mov [rbp + 160], rbp>

3286:
old  <	jmp strcpy>
new  <	add qword [rbp + 160], 116>

3288:
old  < strftime$334:>
new  < strftime$327:>

3289:
old  <	; PostCall 136>
new  <	; Parameter 168 pointer "%">

3290:
old  <>
new  <	mov qword [rbp + 168], string_25#>

3291:
old  < strftime$335:>
new  <>

3292:
old  <	; Goto 343>
new  < strftime$328:>

3293:
old  <	jmp strftime$343>
new  <	; Call 136 strcpy 0>

3294:
old  <>
new  <	mov qword [rbp + 136], strftime$329>

3295:
old  < strftime$336:>
new  <	mov [rbp + 144], rbp>

3296:
old  <	; Dereference Â£temporary3063 -> add add 0>
new  <	add rbp, 136>

3297:
old  <	mov rsi, rbp>
new  <	jmp strcpy>

3298:
old  <	add rsi, 116>
new  <>

3299:
old  <>
new  < strftime$329:>

3300:
old  < strftime$337:>
new  <	; PostCall 136>

3301:
old  <	; IntegralToIntegral Â£temporary3065 index>
new  <>

3302:
old  <	mov eax, [rbp + 112]>
new  < strftime$330:>

3303:
old  <	mov rbx, 4294967295>
new  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3304:
old  <	and rax, rbx>
new  <>

3305:
old  <>
new  < strftime$331:>

3306:
old  < strftime$338:>
new  <	; Parameter 160 pointer add>

3307:
old  <	; BinaryAdd Â£temporary3067 fmt Â£temporary3065>
new  <	mov [rbp + 160], rbp>

3308:
old  <	mov rdi, [rbp + 36]>
new  <	add qword [rbp + 160], 116>

3309:
old  <	add rdi, rax>
new  <>

3310:
old  <>
new  < strftime$332:>

3311:
old  < strftime$339:>
new  <	; Parameter 168 pointer "">

3312:
old  <	; Dereference Â£temporary3064 -> Â£temporary3067 Â£temporary3067 0>
new  <	mov qword [rbp + 168], string_#>

3314:
old  < strftime$340:>
new  < strftime$333:>

3315:
old  <	; Assign Â£temporary3063 -> add Â£temporary3064 -> Â£temporary3067>
new  <	; Call 136 strcpy 0>

3316:
old  <	mov al, [rdi]>
new  <	mov qword [rbp + 136], strftime$334>

3317:
old  <	mov [rsi], al>
new  <	mov [rbp + 144], rbp>

3318:
old  <>
new  <	add rbp, 136>

3319:
old  < strftime$341:>
new  <	jmp strcpy>

3320:
old  <	; Dereference Â£temporary3068 -> add add 0>
new  <>

3321:
old  <	mov rsi, rbp>
new  < strftime$334:>

3322:
old  <	add rsi, 116>
new  <	; PostCall 136>

3324:
old  < strftime$342:>
new  < strftime$335:>

3325:
old  <	; Assign Â£temporary3068 -> add 0>
new  <	; Goto 343>

3326:
old  <	mov byte [rsi + 1], 0>
new  <	jmp strftime$343>

3328:
old  < strftime$343:>
new  < strftime$336:>

3329:
old  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Dereference Â£temporary3050 -> add add 0>

3330:
old  <>
new  <	mov rsi, rbp>

3331:
old  < strftime$344:>
new  <	add rsi, 116>

3332:
old  <	; Parameter 160 pointer s>
new  <>

3333:
old  <	mov rax, [rbp + 24]>
new  < strftime$337:>

3334:
old  <	mov [rbp + 160], rax>
new  <	; IntegralToIntegral Â£temporary3052 index>

3335:
old  <>
new  <	mov eax, [rbp + 112]>

3336:
old  < strftime$345:>
new  <	mov rbx, 4294967295>

3337:
old  <	; Call 136 strlen 0>
new  <	and rax, rbx>

3338:
old  <	mov qword [rbp + 136], strftime$346>
new  <>

3339:
old  <	mov [rbp + 144], rbp>
new  < strftime$338:>

3340:
old  <	add rbp, 136>
new  <	; BinaryAdd Â£temporary3054 fmt Â£temporary3052>

3341:
old  <	jmp strlen>
new  <	mov rdi, [rbp + 36]>

3342:
old  <>
new  <	add rdi, rax>

3343:
old  < strftime$346:>
new  <>

3344:
old  <	; PostCall 136>
new  < strftime$339:>

3345:
old  <>
new  <	; Dereference Â£temporary3051 -> Â£temporary3054 Â£temporary3054 0>

3346:
old  < strftime$347:>
new  <>

3347:
old  <	; GetReturnValue Â£temporary3069>
new  < strftime$340:>

3348:
old  <>
new  <	; Assign Â£temporary3050 -> add Â£temporary3051 -> Â£temporary3054>

3349:
old  < strftime$348:>
new  <	mov al, [rdi]>

3350:
old  <	; Assign x Â£temporary3069>
new  <	mov [rsi], al>

3351:
old  <	mov [rbp + 136], ebx>
new  <>

3352:
old  <>
new  < strftime$341:>

3353:
old  < strftime$349:>
new  <	; Dereference Â£temporary3055 -> add add 0>

3354:
old  <	; PreCall 140 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov rsi, rbp>

3355:
old  <>
new  <	add rsi, 116>

3356:
old  < strftime$350:>
new  <>

3357:
old  <	; Parameter 164 pointer add>
new  < strftime$342:>

3358:
old  <	mov [rbp + 164], rbp>
new  <	; Assign Â£temporary3055 -> add 0>

3359:
old  <	add qword [rbp + 164], 116>
new  <	mov byte [rsi + 1], 0>

3361:
old  < strftime$351:>
new  < strftime$343:>

3362:
old  <	; Call 140 strlen 0>
new  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3363:
old  <	mov qword [rbp + 140], strftime$352>
new  <>

3364:
old  <	mov [rbp + 148], rbp>
new  < strftime$344:>

3365:
old  <	add rbp, 140>
new  <	; Parameter 160 pointer s>

3366:
old  <	jmp strlen>
new  <	mov rax, [rbp + 24]>

3367:
old  <>
new  <	mov [rbp + 160], rax>

3368:
old  < strftime$352:>
new  <>

3369:
old  <	; PostCall 140>
new  < strftime$345:>

3370:
old  <>
new  <	; Call 136 strlen 0>

3371:
old  < strftime$353:>
new  <	mov qword [rbp + 136], strftime$346>

3372:
old  <	; GetReturnValue Â£temporary3070>
new  <	mov [rbp + 144], rbp>

3373:
old  <>
new  <	add rbp, 136>

3374:
old  < strftime$354:>
new  <	jmp strlen>

3375:
old  <	; Assign y Â£temporary3070>
new  <>

3376:
old  <	mov [rbp + 140], ebx>
new  < strftime$346:>

3377:
old  <>
new  <	; PostCall 136>

3378:
old  < strftime$355:>
new  <>

3379:
old  <	; BinaryAdd Â£temporary3071 x y>
new  < strftime$347:>

3380:
old  <	mov eax, [rbp + 136]>
new  <	; GetReturnValue Â£temporary3056>

3381:
old  <	add eax, [rbp + 140]>
new  <>

3382:
old  <>
new  < strftime$348:>

3383:
old  < strftime$356:>
new  <	; Assign x Â£temporary3056>

3384:
old  <	; SignedGreaterThanEqual 364 Â£temporary3071 smax>
new  <	mov [rbp + 136], ebx>

3385:
old  <	cmp eax, [rbp + 32]>
new  <>

3386:
old  <	jge strftime$364>
new  < strftime$349:>

3387:
old  <>
new  <	; PreCall 140 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3388:
old  < strftime$357:>
new  <>

3389:
old  <	; PreCall 144 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < strftime$350:>

3390:
old  <>
new  <	; Parameter 164 pointer add>

3391:
old  < strftime$358:>
new  <	mov [rbp + 164], rbp>

3392:
old  <	; Parameter 168 pointer s>
new  <	add qword [rbp + 164], 116>

3393:
old  <	mov rax, [rbp + 24]>
new  <>

3394:
old  <	mov [rbp + 168], rax>
new  < strftime$351:>

3395:
old  <>
new  <	; Call 140 strlen 0>

3396:
old  < strftime$359:>
new  <	mov qword [rbp + 140], strftime$352>

3397:
old  <	; Parameter 176 pointer add>
new  <	mov [rbp + 148], rbp>

3398:
old  <	mov [rbp + 176], rbp>
new  <	add rbp, 140>

3399:
old  <	add qword [rbp + 176], 116>
new  <	jmp strlen>

3401:
old  < strftime$360:>
new  < strftime$352:>

3402:
old  <	; Call 144 strcat 0>
new  <	; PostCall 140>

3403:
old  <	mov qword [rbp + 144], strftime$361>
new  <>

3404:
old  <	mov [rbp + 152], rbp>
new  < strftime$353:>

3405:
old  <	add rbp, 144>
new  <	; GetReturnValue Â£temporary3057>

3406:
old  <	jmp strcat>
new  <>

3407:
old  <>
new  < strftime$354:>

3408:
old  < strftime$361:>
new  <	; Assign y Â£temporary3057>

3409:
old  <	; PostCall 144>
new  <	mov [rbp + 140], ebx>

3411:
old  < strftime$362:>
new  < strftime$355:>

3412:
old  <	; BinaryAdd index index 1>
new  <	; BinaryAdd Â£temporary3058 x y>

3413:
old  <	inc dword [rbp + 112]>
new  <	mov eax, [rbp + 136]>

3414:
old  <>
new  <	add eax, [rbp + 140]>

3415:
old  < strftime$363:>
new  <>

3416:
old  <	; Goto 84>
new  < strftime$356:>

3417:
old  <	jmp strftime$84>
new  <	; SignedGreaterThanEqual 364 Â£temporary3058 smax>

3418:
old  <>
new  <	cmp eax, [rbp + 32]>

3419:
old  < strftime$364:>
new  <	jge strftime$364>

3420:
old  <	; PreCall 112 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

3421:
old  <>
new  < strftime$357:>

3422:
old  < strftime$365:>
new  <	; PreCall 144 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3423:
old  <	; Parameter 136 pointer s>
new  <>

3424:
old  <	mov rax, [rbp + 24]>
new  < strftime$358:>

3425:
old  <	mov [rbp + 136], rax>
new  <	; Parameter 168 pointer s>

3426:
old  <>
new  <	mov rax, [rbp + 24]>

3427:
old  < strftime$366:>
new  <	mov [rbp + 168], rax>

3428:
old  <	; Call 112 strlen 0>
new  <>

3429:
old  <	mov qword [rbp + 112], strftime$367>
new  < strftime$359:>

3430:
old  <	mov [rbp + 120], rbp>
new  <	; Parameter 176 pointer add>

3431:
old  <	add rbp, 112>
new  <	mov [rbp + 176], rbp>

3432:
old  <	jmp strlen>
new  <	add qword [rbp + 176], 116>

3434:
old  < strftime$367:>
new  < strftime$360:>

3435:
old  <	; PostCall 112>
new  <	; Call 144 strcat 0>

3436:
old  <>
new  <	mov qword [rbp + 144], strftime$361>

3437:
old  < strftime$368:>
new  <	mov [rbp + 152], rbp>

3438:
old  <	; GetReturnValue Â£temporary3074>
new  <	add rbp, 144>

3439:
old  <>
new  <	jmp strcat>

3440:
old  < strftime$369:>
new  <>

3441:
old  <	; Return Â£temporary3074>
new  < strftime$361:>

3442:
old  <	mov rax, [rbp]>
new  <	; PostCall 144>

3443:
old  <	mov rdi, [rbp + 16]>
new  <>

3444:
old  <	mov rbp, [rbp + 8]>
new  < strftime$362:>

3445:
old  <	jmp rax>
new  <	; BinaryAdd index index 1>

3446:
old  <>
new  <	inc dword [rbp + 112]>

3447:
old  < strftime$370:>
new  <>

3448:
old  <	; FunctionEnd strftime>
new  < strftime$363:>

String.asm
35:
old  <	; IntegralToIntegral Â£temporary3076 index>
new  <	; IntegralToIntegral Â£temporary3063 index>

41:
old  <	; BinaryAdd Â£temporary3078 source Â£temporary3076>
new  <	; BinaryAdd Â£temporary3065 source Â£temporary3063>

46:
old  <	; Dereference Â£temporary3075 -> Â£temporary3078 Â£temporary3078 0>
new  <	; Dereference Â£temporary3062 -> Â£temporary3065 Â£temporary3065 0>

49:
old  <	; Equal 14 Â£temporary3075 -> Â£temporary3078 0>
new  <	; Equal 14 Â£temporary3062 -> Â£temporary3065 0>

54:
old  <	; IntegralToIntegral Â£temporary3082 index>
new  <	; IntegralToIntegral Â£temporary3069 index>

60:
old  <	; BinaryAdd Â£temporary3084 target Â£temporary3082>
new  <	; BinaryAdd Â£temporary3071 target Â£temporary3069>

65:
old  <	; Dereference Â£temporary3081 -> Â£temporary3084 Â£temporary3084 0>
new  <	; Dereference Â£temporary3068 -> Â£temporary3071 Â£temporary3071 0>

68:
old  <	; IntegralToIntegral Â£temporary3086 index>
new  <	; IntegralToIntegral Â£temporary3073 index>

74:
old  <	; BinaryAdd Â£temporary3088 source Â£temporary3086>
new  <	; BinaryAdd Â£temporary3075 source Â£temporary3073>

79:
old  <	; Dereference Â£temporary3085 -> Â£temporary3088 Â£temporary3088 0>
new  <	; Dereference Â£temporary3072 -> Â£temporary3075 Â£temporary3075 0>

82:
old  <	; Assign Â£temporary3081 -> Â£temporary3084 Â£temporary3085 -> Â£temporary3088>
new  <	; Assign Â£temporary3068 -> Â£temporary3071 Â£temporary3072 -> Â£temporary3075>

95:
old  <	; IntegralToIntegral Â£temporary3090 index>
new  <	; IntegralToIntegral Â£temporary3077 index>

101:
old  <	; BinaryAdd Â£temporary3092 target Â£temporary3090>
new  <	; BinaryAdd Â£temporary3079 target Â£temporary3077>

106:
old  <	; Dereference Â£temporary3089 -> Â£temporary3092 Â£temporary3092 0>
new  <	; Dereference Â£temporary3076 -> Â£temporary3079 Â£temporary3079 0>

109:
old  <	; Assign Â£temporary3089 -> Â£temporary3092 0>
new  <	; Assign Â£temporary3076 -> Â£temporary3079 0>

113:
old  <	; Return target>
new  <	; SetReturnValue>

114:
old  <	mov rbx, [rbp + 24]>
new  <>

115:
old  <	mov rax, [rbp]>
new  < strcpy$19:>

116:
old  <	mov rdi, [rbp + 16]>
new  <	; Return target>

117:
old  <	mov rbp, [rbp + 8]>
new  <	mov rbx, [rbp + 24]>

118:
old  <	jmp rax>
new  <	mov rax, [rbp]>

119:
old  <>
new  <	mov rdi, [rbp + 16]>

120:
old  < strcpy$19:>
new  <	mov rbp, [rbp + 8]>

121:
old  <	; FunctionEnd strcpy>
new  <	jmp rax>

123:
old  <section .text>
new  < strcpy$20:>

124:
old  <>
new  <	; FunctionEnd strcpy>

125:
old  < strncpy:>
new  <>

126:
old  <	; Assign index 0>
new  <section .text>

127:
old  <	mov dword [rbp + 44], 0>
new  <>

128:
old  <>
new  < strncpy:>

129:
old  < strncpy$1:>
new  <	; Assign index 0>

130:
old  <	; SignedGreaterThanEqual 15 index size>
new  <	mov dword [rbp + 44], 0>

131:
old  <	mov eax, [rbp + 40]>
new  <>

132:
old  <	cmp [rbp + 44], eax>
new  < strncpy$1:>

133:
old  <	jge strncpy$15>
new  <	; SignedGreaterThanEqual 15 index size>

134:
old  <>
new  <	mov eax, [rbp + 40]>

135:
old  < strncpy$2:>
new  <	cmp [rbp + 44], eax>

136:
old  <	; IntegralToIntegral Â£temporary3095 index>
new  <	jge strncpy$15>

137:
old  <	mov eax, [rbp + 44]>
new  <>

138:
old  <	mov rbx, 4294967295>
new  < strncpy$2:>

139:
old  <	and rax, rbx>
new  <	; IntegralToIntegral Â£temporary3082 index>

140:
old  <>
new  <	mov eax, [rbp + 44]>

141:
old  < strncpy$3:>
new  <	mov rbx, 4294967295>

142:
old  <	; BinaryAdd Â£temporary3097 source Â£temporary3095>
new  <	and rax, rbx>

143:
old  <	mov rsi, [rbp + 32]>
new  <>

144:
old  <	add rsi, rax>
new  < strncpy$3:>

145:
old  <>
new  <	; BinaryAdd Â£temporary3084 source Â£temporary3082>

146:
old  < strncpy$4:>
new  <	mov rsi, [rbp + 32]>

147:
old  <	; Dereference Â£temporary3094 -> Â£temporary3097 Â£temporary3097 0>
new  <	add rsi, rax>

149:
old  < strncpy$5:>
new  < strncpy$4:>

150:
old  <	; Equal 15 Â£temporary3094 -> Â£temporary3097 0>
new  <	; Dereference Â£temporary3081 -> Â£temporary3084 Â£temporary3084 0>

151:
old  <	cmp byte [rsi], 0>
new  <>

152:
old  <	je strncpy$15>
new  < strncpy$5:>

153:
old  <>
new  <	; Equal 15 Â£temporary3081 -> Â£temporary3084 0>

154:
old  < strncpy$6:>
new  <	cmp byte [rsi], 0>

155:
old  <	; IntegralToIntegral Â£temporary3102 index>
new  <	je strncpy$15>

156:
old  <	mov eax, [rbp + 44]>
new  <>

157:
old  <	mov rbx, 4294967295>
new  < strncpy$6:>

158:
old  <	and rax, rbx>
new  <	; IntegralToIntegral Â£temporary3089 index>

159:
old  <>
new  <	mov eax, [rbp + 44]>

160:
old  < strncpy$7:>
new  <	mov rbx, 4294967295>

161:
old  <	; BinaryAdd Â£temporary3104 target Â£temporary3102>
new  <	and rax, rbx>

162:
old  <	mov rsi, [rbp + 24]>
new  <>

163:
old  <	add rsi, rax>
new  < strncpy$7:>

164:
old  <>
new  <	; BinaryAdd Â£temporary3091 target Â£temporary3089>

165:
old  < strncpy$8:>
new  <	mov rsi, [rbp + 24]>

166:
old  <	; Dereference Â£temporary3101 -> Â£temporary3104 Â£temporary3104 0>
new  <	add rsi, rax>

168:
old  < strncpy$9:>
new  < strncpy$8:>

169:
old  <	; IntegralToIntegral Â£temporary3106 index>
new  <	; Dereference Â£temporary3088 -> Â£temporary3091 Â£temporary3091 0>

170:
old  <	mov eax, [rbp + 44]>
new  <>

171:
old  <	mov rbx, 4294967295>
new  < strncpy$9:>

172:
old  <	and rax, rbx>
new  <	; IntegralToIntegral Â£temporary3093 index>

173:
old  <>
new  <	mov eax, [rbp + 44]>

174:
old  < strncpy$10:>
new  <	mov rbx, 4294967295>

175:
old  <	; BinaryAdd Â£temporary3108 source Â£temporary3106>
new  <	and rax, rbx>

176:
old  <	mov rdi, [rbp + 32]>
new  <>

177:
old  <	add rdi, rax>
new  < strncpy$10:>

178:
old  <>
new  <	; BinaryAdd Â£temporary3095 source Â£temporary3093>

179:
old  < strncpy$11:>
new  <	mov rdi, [rbp + 32]>

180:
old  <	; Dereference Â£temporary3105 -> Â£temporary3108 Â£temporary3108 0>
new  <	add rdi, rax>

182:
old  < strncpy$12:>
new  < strncpy$11:>

183:
old  <	; Assign Â£temporary3101 -> Â£temporary3104 Â£temporary3105 -> Â£temporary3108>
new  <	; Dereference Â£temporary3092 -> Â£temporary3095 Â£temporary3095 0>

184:
old  <	mov al, [rdi]>
new  <>

185:
old  <	mov [rsi], al>
new  < strncpy$12:>

186:
old  <>
new  <	; Assign Â£temporary3088 -> Â£temporary3091 Â£temporary3092 -> Â£temporary3095>

187:
old  < strncpy$13:>
new  <	mov al, [rdi]>

188:
old  <	; BinaryAdd index index 1>
new  <	mov [rsi], al>

189:
old  <	inc dword [rbp + 44]>
new  <>

190:
old  <>
new  < strncpy$13:>

191:
old  < strncpy$14:>
new  <	; BinaryAdd index index 1>

192:
old  <	; Goto 1>
new  <	inc dword [rbp + 44]>

193:
old  <	jmp strncpy$1>
new  <>

194:
old  <>
new  < strncpy$14:>

195:
old  < strncpy$15:>
new  <	; Goto 1>

196:
old  <	; SignedGreaterThanEqual 22 index size>
new  <	jmp strncpy$1>

197:
old  <	mov eax, [rbp + 40]>
new  <>

198:
old  <	cmp [rbp + 44], eax>
new  < strncpy$15:>

199:
old  <	jge strncpy$22>
new  <	; SignedGreaterThanEqual 22 index size>

200:
old  <>
new  <	mov eax, [rbp + 40]>

201:
old  < strncpy$16:>
new  <	cmp [rbp + 44], eax>

202:
old  <	; IntegralToIntegral Â£temporary3112 index>
new  <	jge strncpy$22>

203:
old  <	mov eax, [rbp + 44]>
new  <>

204:
old  <	mov rbx, 4294967295>
new  < strncpy$16:>

205:
old  <	and rax, rbx>
new  <	; IntegralToIntegral Â£temporary3099 index>

206:
old  <>
new  <	mov eax, [rbp + 44]>

207:
old  < strncpy$17:>
new  <	mov rbx, 4294967295>

208:
old  <	; BinaryAdd Â£temporary3114 target Â£temporary3112>
new  <	and rax, rbx>

209:
old  <	mov rsi, [rbp + 24]>
new  <>

210:
old  <	add rsi, rax>
new  < strncpy$17:>

211:
old  <>
new  <	; BinaryAdd Â£temporary3101 target Â£temporary3099>

212:
old  < strncpy$18:>
new  <	mov rsi, [rbp + 24]>

213:
old  <	; Dereference Â£temporary3111 -> Â£temporary3114 Â£temporary3114 0>
new  <	add rsi, rax>

215:
old  < strncpy$19:>
new  < strncpy$18:>

216:
old  <	; Assign Â£temporary3111 -> Â£temporary3114 0>
new  <	; Dereference Â£temporary3098 -> Â£temporary3101 Â£temporary3101 0>

217:
old  <	mov byte [rsi], 0>
new  <>

218:
old  <>
new  < strncpy$19:>

219:
old  < strncpy$20:>
new  <	; Assign Â£temporary3098 -> Â£temporary3101 0>

220:
old  <	; BinaryAdd index index 1>
new  <	mov byte [rsi], 0>

221:
old  <	inc dword [rbp + 44]>
new  <>

222:
old  <>
new  < strncpy$20:>

223:
old  < strncpy$21:>
new  <	; BinaryAdd index index 1>

224:
old  <	; Goto 15>
new  <	inc dword [rbp + 44]>

225:
old  <	jmp strncpy$15>
new  <>

226:
old  <>
new  < strncpy$21:>

227:
old  < strncpy$22:>
new  <	; Goto 15>

228:
old  <	; Return target>
new  <	jmp strncpy$15>

229:
old  <	mov rbx, [rbp + 24]>
new  <>

230:
old  <	mov rax, [rbp]>
new  < strncpy$22:>

231:
old  <	mov rdi, [rbp + 16]>
new  <	; SetReturnValue>

232:
old  <	mov rbp, [rbp + 8]>
new  <>

233:
old  <	jmp rax>
new  < strncpy$23:>

234:
old  <>
new  <	; Return target>

235:
old  < strncpy$23:>
new  <	mov rbx, [rbp + 24]>

236:
old  <	; FunctionEnd strncpy>
new  <	mov rax, [rbp]>

237:
old  <>
new  <	mov rdi, [rbp + 16]>

238:
old  <section .text>
new  <	mov rbp, [rbp + 8]>

239:
old  <>
new  <	jmp rax>

240:
old  < strcat:>
new  <>

241:
old  <	; PreCall 44 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < strncpy$24:>

242:
old  <>
new  <	; FunctionEnd strncpy>

243:
old  < strcat$1:>
new  <>

244:
old  <	; Parameter 68 pointer target>
new  <section .text>

245:
old  <	mov rax, [rbp + 24]>
new  <>

246:
old  <	mov [rbp + 68], rax>
new  < strcat:>

247:
old  <>
new  <	; PreCall 44 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

248:
old  < strcat$2:>
new  <>

249:
old  <	; Call 44 strlen 0>
new  < strcat$1:>

250:
old  <	mov qword [rbp + 44], strcat$3>
new  <	; Parameter 68 pointer target>

251:
old  <	mov [rbp + 52], rbp>
new  <	mov rax, [rbp + 24]>

252:
old  <	add rbp, 44>
new  <	mov [rbp + 68], rax>

253:
old  <	jmp strlen>
new  <>

254:
old  <>
new  < strcat$2:>

255:
old  < strcat$3:>
new  <	; Call 44 strlen 0>

256:
old  <	; PostCall 44>
new  <	mov qword [rbp + 44], strcat$3>

257:
old  <>
new  <	mov [rbp + 52], rbp>

258:
old  < strcat$4:>
new  <	add rbp, 44>

259:
old  <	; GetReturnValue Â£temporary3115>
new  <	jmp strlen>

261:
old  < strcat$5:>
new  < strcat$3:>

262:
old  <	; Assign targetLength Â£temporary3115>
new  <	; PostCall 44>

263:
old  <	mov [rbp + 44], ebx>
new  <>

264:
old  <>
new  < strcat$4:>

265:
old  < strcat$6:>
new  <	; GetReturnValue Â£temporary3102>

266:
old  <	; Assign index 0>
new  <>

267:
old  <	mov dword [rbp + 40], 0>
new  < strcat$5:>

268:
old  <>
new  <	; Assign targetLength Â£temporary3102>

269:
old  < strcat$7:>
new  <	mov [rbp + 44], ebx>

270:
old  <	; IntegralToIntegral Â£temporary3117 index>
new  <>

271:
old  <	mov eax, [rbp + 40]>
new  < strcat$6:>

272:
old  <	mov rbx, 4294967295>
new  <	; Assign index 0>

273:
old  <	and rax, rbx>
new  <	mov dword [rbp + 40], 0>

275:
old  < strcat$8:>
new  < strcat$7:>

276:
old  <	; BinaryAdd Â£temporary3119 source Â£temporary3117>
new  <	; IntegralToIntegral Â£temporary3104 index>

277:
old  <	mov rsi, [rbp + 32]>
new  <	mov eax, [rbp + 40]>

278:
old  <	add rsi, rax>
new  <	mov rbx, 4294967295>

279:
old  <>
new  <	and rax, rbx>

280:
old  < strcat$9:>
new  <>

281:
old  <	; Dereference Â£temporary3116 -> Â£temporary3119 Â£temporary3119 0>
new  < strcat$8:>

282:
old  <>
new  <	; BinaryAdd Â£temporary3106 source Â£temporary3104>

283:
old  < strcat$10:>
new  <	mov rsi, [rbp + 32]>

284:
old  <	; Equal 21 Â£temporary3116 -> Â£temporary3119 0>
new  <	add rsi, rax>

285:
old  <	cmp byte [rsi], 0>
new  <>

286:
old  <	je strcat$21>
new  < strcat$9:>

287:
old  <>
new  <	; Dereference Â£temporary3103 -> Â£temporary3106 Â£temporary3106 0>

288:
old  < strcat$11:>
new  <>

289:
old  <	; BinaryAdd Â£temporary3122 targetLength index>
new  < strcat$10:>

290:
old  <	mov eax, [rbp + 44]>
new  <	; Equal 21 Â£temporary3103 -> Â£temporary3106 0>

291:
old  <	add eax, [rbp + 40]>
new  <	cmp byte [rsi], 0>

292:
old  <>
new  <	je strcat$21>

293:
old  < strcat$12:>
new  <>

294:
old  <	; IntegralToIntegral Â£temporary3124 Â£temporary3122>
new  < strcat$11:>

295:
old  <	mov rbx, 4294967295>
new  <	; BinaryAdd Â£temporary3109 targetLength index>

296:
old  <	and rax, rbx>
new  <	mov eax, [rbp + 44]>

297:
old  <>
new  <	add eax, [rbp + 40]>

298:
old  < strcat$13:>
new  <>

299:
old  <	; BinaryAdd Â£temporary3126 target Â£temporary3124>
new  < strcat$12:>

300:
old  <	mov rsi, [rbp + 24]>
new  <	; IntegralToIntegral Â£temporary3111 Â£temporary3109>

301:
old  <	add rsi, rax>
new  <	mov rbx, 4294967295>

302:
old  <>
new  <	and rax, rbx>

303:
old  < strcat$14:>
new  <>

304:
old  <	; Dereference Â£temporary3123 -> Â£temporary3126 Â£temporary3126 0>
new  < strcat$13:>

305:
old  <>
new  <	; BinaryAdd Â£temporary3113 target Â£temporary3111>

306:
old  < strcat$15:>
new  <	mov rsi, [rbp + 24]>

307:
old  <	; IntegralToIntegral Â£temporary3128 index>
new  <	add rsi, rax>

308:
old  <	mov eax, [rbp + 40]>
new  <>

309:
old  <	mov rbx, 4294967295>
new  < strcat$14:>

310:
old  <	and rax, rbx>
new  <	; Dereference Â£temporary3110 -> Â£temporary3113 Â£temporary3113 0>

312:
old  < strcat$16:>
new  < strcat$15:>

313:
old  <	; BinaryAdd Â£temporary3130 source Â£temporary3128>
new  <	; IntegralToIntegral Â£temporary3115 index>

314:
old  <	mov rdi, [rbp + 32]>
new  <	mov eax, [rbp + 40]>

315:
old  <	add rdi, rax>
new  <	mov rbx, 4294967295>

316:
old  <>
new  <	and rax, rbx>

317:
old  < strcat$17:>
new  <>

318:
old  <	; Dereference Â£temporary3127 -> Â£temporary3130 Â£temporary3130 0>
new  < strcat$16:>

319:
old  <>
new  <	; BinaryAdd Â£temporary3117 source Â£temporary3115>

320:
old  < strcat$18:>
new  <	mov rdi, [rbp + 32]>

321:
old  <	; Assign Â£temporary3123 -> Â£temporary3126 Â£temporary3127 -> Â£temporary3130>
new  <	add rdi, rax>

322:
old  <	mov al, [rdi]>
new  <>

323:
old  <	mov [rsi], al>
new  < strcat$17:>

324:
old  <>
new  <	; Dereference Â£temporary3114 -> Â£temporary3117 Â£temporary3117 0>

325:
old  < strcat$19:>
new  <>

326:
old  <	; BinaryAdd index index 1>
new  < strcat$18:>

327:
old  <	inc dword [rbp + 40]>
new  <	; Assign Â£temporary3110 -> Â£temporary3113 Â£temporary3114 -> Â£temporary3117>

328:
old  <>
new  <	mov al, [rdi]>

329:
old  < strcat$20:>
new  <	mov [rsi], al>

330:
old  <	; Goto 7>
new  <>

331:
old  <	jmp strcat$7>
new  < strcat$19:>

332:
old  <>
new  <	; BinaryAdd index index 1>

333:
old  < strcat$21:>
new  <	inc dword [rbp + 40]>

334:
old  <	; BinaryAdd Â£temporary3131 targetLength index>
new  <>

335:
old  <	mov eax, [rbp + 44]>
new  < strcat$20:>

336:
old  <	add eax, [rbp + 40]>
new  <	; Goto 7>

337:
old  <>
new  <	jmp strcat$7>

338:
old  < strcat$22:>
new  <>

339:
old  <	; IntegralToIntegral Â£temporary3133 Â£temporary3131>
new  < strcat$21:>

340:
old  <	mov rbx, 4294967295>
new  <	; BinaryAdd Â£temporary3118 targetLength index>

341:
old  <	and rax, rbx>
new  <	mov eax, [rbp + 44]>

342:
old  <>
new  <	add eax, [rbp + 40]>

343:
old  < strcat$23:>
new  <>

344:
old  <	; BinaryAdd Â£temporary3135 target Â£temporary3133>
new  < strcat$22:>

345:
old  <	mov rsi, [rbp + 24]>
new  <	; IntegralToIntegral Â£temporary3120 Â£temporary3118>

346:
old  <	add rsi, rax>
new  <	mov rbx, 4294967295>

347:
old  <>
new  <	and rax, rbx>

348:
old  < strcat$24:>
new  <>

349:
old  <	; Dereference Â£temporary3132 -> Â£temporary3135 Â£temporary3135 0>
new  < strcat$23:>

350:
old  <>
new  <	; BinaryAdd Â£temporary3122 target Â£temporary3120>

351:
old  < strcat$25:>
new  <	mov rsi, [rbp + 24]>

352:
old  <	; Assign Â£temporary3132 -> Â£temporary3135 0>
new  <	add rsi, rax>

353:
old  <	mov byte [rsi], 0>
new  <>

354:
old  <>
new  < strcat$24:>

355:
old  < strcat$26:>
new  <	; Dereference Â£temporary3119 -> Â£temporary3122 Â£temporary3122 0>

356:
old  <	; Return target>
new  <>

357:
old  <	mov rbx, [rbp + 24]>
new  < strcat$25:>

358:
old  <	mov rax, [rbp]>
new  <	; Assign Â£temporary3119 -> Â£temporary3122 0>

359:
old  <	mov rdi, [rbp + 16]>
new  <	mov byte [rsi], 0>

360:
old  <	mov rbp, [rbp + 8]>
new  <>

361:
old  <	jmp rax>
new  < strcat$26:>

362:
old  <>
new  <	; SetReturnValue>

363:
old  < strcat$27:>
new  <>

364:
old  <	; FunctionEnd strcat>
new  < strcat$27:>

365:
old  <>
new  <	; Return target>

366:
old  <section .text>
new  <	mov rbx, [rbp + 24]>

367:
old  <>
new  <	mov rax, [rbp]>

368:
old  < strncat:>
new  <	mov rdi, [rbp + 16]>

369:
old  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov rbp, [rbp + 8]>

370:
old  <>
new  <	jmp rax>

371:
old  < strncat$1:>
new  <>

372:
old  <	; Parameter 72 pointer target>
new  < strcat$28:>

373:
old  <	mov rax, [rbp + 24]>
new  <	; FunctionEnd strcat>

374:
old  <	mov [rbp + 72], rax>
new  <>

375:
old  <>
new  <section .text>

376:
old  < strncat$2:>
new  <>

377:
old  <	; Call 48 strlen 0>
new  < strncat:>

378:
old  <	mov qword [rbp + 48], strncat$3>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

379:
old  <	mov [rbp + 56], rbp>
new  <>

380:
old  <	add rbp, 48>
new  < strncat$1:>

381:
old  <	jmp strlen>
new  <	; Parameter 72 pointer target>

382:
old  <>
new  <	mov rax, [rbp + 24]>

383:
old  < strncat$3:>
new  <	mov [rbp + 72], rax>

384:
old  <	; PostCall 48>
new  <>

385:
old  <>
new  < strncat$2:>

386:
old  < strncat$4:>
new  <	; Call 48 strlen 0>

387:
old  <	; GetReturnValue Â£temporary3136>
new  <	mov qword [rbp + 48], strncat$3>

388:
old  <>
new  <	mov [rbp + 56], rbp>

389:
old  < strncat$5:>
new  <	add rbp, 48>

390:
old  <	; Assign targetLength Â£temporary3136>
new  <	jmp strlen>

391:
old  <	mov [rbp + 48], ebx>
new  <>

392:
old  <>
new  < strncat$3:>

393:
old  < strncat$6:>
new  <	; PostCall 48>

394:
old  <	; Assign index 0>
new  <>

395:
old  <	mov dword [rbp + 44], 0>
new  < strncat$4:>

396:
old  <>
new  <	; GetReturnValue Â£temporary3123>

397:
old  < strncat$7:>
new  <>

398:
old  <	; BinarySubtract Â£temporary3137 size 1>
new  < strncat$5:>

399:
old  <	mov eax, [rbp + 40]>
new  <	; Assign targetLength Â£temporary3123>

400:
old  <	dec eax>
new  <	mov [rbp + 48], ebx>

402:
old  < strncat$8:>
new  < strncat$6:>

403:
old  <	; SignedGreaterThanEqual 23 index Â£temporary3137>
new  <	; Assign index 0>

404:
old  <	cmp [rbp + 44], eax>
new  <	mov dword [rbp + 44], 0>

405:
old  <	jge strncat$23>
new  <>

406:
old  <>
new  < strncat$7:>

407:
old  < strncat$9:>
new  <	; BinarySubtract Â£temporary3124 size 1>

408:
old  <	; IntegralToIntegral Â£temporary3140 index>
new  <	mov eax, [rbp + 40]>

409:
old  <	mov eax, [rbp + 44]>
new  <	dec eax>

410:
old  <	mov rbx, 4294967295>
new  <>

411:
old  <	and rax, rbx>
new  < strncat$8:>

412:
old  <>
new  <	; SignedGreaterThanEqual 23 index Â£temporary3124>

413:
old  < strncat$10:>
new  <	cmp [rbp + 44], eax>

414:
old  <	; BinaryAdd Â£temporary3142 source Â£temporary3140>
new  <	jge strncat$23>

415:
old  <	mov rsi, [rbp + 32]>
new  <>

416:
old  <	add rsi, rax>
new  < strncat$9:>

417:
old  <>
new  <	; IntegralToIntegral Â£temporary3127 index>

418:
old  < strncat$11:>
new  <	mov eax, [rbp + 44]>

419:
old  <	; Dereference Â£temporary3139 -> Â£temporary3142 Â£temporary3142 0>
new  <	mov rbx, 4294967295>

420:
old  <>
new  <	and rax, rbx>

421:
old  < strncat$12:>
new  <>

422:
old  <	; Equal 23 Â£temporary3139 -> Â£temporary3142 0>
new  < strncat$10:>

423:
old  <	cmp byte [rsi], 0>
new  <	; BinaryAdd Â£temporary3129 source Â£temporary3127>

424:
old  <	je strncat$23>
new  <	mov rsi, [rbp + 32]>

425:
old  <>
new  <	add rsi, rax>

426:
old  < strncat$13:>
new  <>

427:
old  <	; BinaryAdd Â£temporary3146 targetLength index>
new  < strncat$11:>

428:
old  <	mov eax, [rbp + 48]>
new  <	; Dereference Â£temporary3126 -> Â£temporary3129 Â£temporary3129 0>

429:
old  <	add eax, [rbp + 44]>
new  <>

430:
old  <>
new  < strncat$12:>

431:
old  < strncat$14:>
new  <	; Equal 23 Â£temporary3126 -> Â£temporary3129 0>

432:
old  <	; IntegralToIntegral Â£temporary3148 Â£temporary3146>
new  <	cmp byte [rsi], 0>

433:
old  <	mov rbx, 4294967295>
new  <	je strncat$23>

434:
old  <	and rax, rbx>
new  <>

435:
old  <>
new  < strncat$13:>

436:
old  < strncat$15:>
new  <	; BinaryAdd Â£temporary3133 targetLength index>

437:
old  <	; BinaryAdd Â£temporary3150 target Â£temporary3148>
new  <	mov eax, [rbp + 48]>

438:
old  <	mov rsi, [rbp + 24]>
new  <	add eax, [rbp + 44]>

439:
old  <	add rsi, rax>
new  <>

440:
old  <>
new  < strncat$14:>

441:
old  < strncat$16:>
new  <	; IntegralToIntegral Â£temporary3135 Â£temporary3133>

442:
old  <	; Dereference Â£temporary3147 -> Â£temporary3150 Â£temporary3150 0>
new  <	mov rbx, 4294967295>

443:
old  <>
new  <	and rax, rbx>

444:
old  < strncat$17:>
new  <>

445:
old  <	; IntegralToIntegral Â£temporary3152 index>
new  < strncat$15:>

446:
old  <	mov eax, [rbp + 44]>
new  <	; BinaryAdd Â£temporary3137 target Â£temporary3135>

447:
old  <	mov rbx, 4294967295>
new  <	mov rsi, [rbp + 24]>

448:
old  <	and rax, rbx>
new  <	add rsi, rax>

450:
old  < strncat$18:>
new  < strncat$16:>

451:
old  <	; BinaryAdd Â£temporary3154 source Â£temporary3152>
new  <	; Dereference Â£temporary3134 -> Â£temporary3137 Â£temporary3137 0>

452:
old  <	mov rdi, [rbp + 32]>
new  <>

453:
old  <	add rdi, rax>
new  < strncat$17:>

454:
old  <>
new  <	; IntegralToIntegral Â£temporary3139 index>

455:
old  < strncat$19:>
new  <	mov eax, [rbp + 44]>

456:
old  <	; Dereference Â£temporary3151 -> Â£temporary3154 Â£temporary3154 0>
new  <	mov rbx, 4294967295>

457:
old  <>
new  <	and rax, rbx>

458:
old  < strncat$20:>
new  <>

459:
old  <	; Assign Â£temporary3147 -> Â£temporary3150 Â£temporary3151 -> Â£temporary3154>
new  < strncat$18:>

460:
old  <	mov al, [rdi]>
new  <	; BinaryAdd Â£temporary3141 source Â£temporary3139>

461:
old  <	mov [rsi], al>
new  <	mov rdi, [rbp + 32]>

462:
old  <>
new  <	add rdi, rax>

463:
old  < strncat$21:>
new  <>

464:
old  <	; BinaryAdd index index 1>
new  < strncat$19:>

465:
old  <	inc dword [rbp + 44]>
new  <	; Dereference Â£temporary3138 -> Â£temporary3141 Â£temporary3141 0>

467:
old  < strncat$22:>
new  < strncat$20:>

468:
old  <	; Goto 7>
new  <	; Assign Â£temporary3134 -> Â£temporary3137 Â£temporary3138 -> Â£temporary3141>

469:
old  <	jmp strncat$7>
new  <	mov al, [rdi]>

470:
old  <>
new  <	mov [rsi], al>

471:
old  < strncat$23:>
new  <>

472:
old  <	; BinaryAdd Â£temporary3155 targetLength size>
new  < strncat$21:>

473:
old  <	mov eax, [rbp + 48]>
new  <	; BinaryAdd index index 1>

474:
old  <	add eax, [rbp + 40]>
new  <	inc dword [rbp + 44]>

476:
old  < strncat$24:>
new  < strncat$22:>

477:
old  <	; BinarySubtract Â£temporary3156 Â£temporary3155 1>
new  <	; Goto 7>

478:
old  <	dec eax>
new  <	jmp strncat$7>

480:
old  < strncat$25:>
new  < strncat$23:>

481:
old  <	; IntegralToIntegral Â£temporary3158 Â£temporary3156>
new  <	; BinaryAdd Â£temporary3142 targetLength size>

482:
old  <	mov rbx, 4294967295>
new  <	mov eax, [rbp + 48]>

483:
old  <	and rax, rbx>
new  <	add eax, [rbp + 40]>

485:
old  < strncat$26:>
new  < strncat$24:>

486:
old  <	; BinaryAdd Â£temporary3160 target Â£temporary3158>
new  <	; BinarySubtract Â£temporary3143 Â£temporary3142 1>

487:
old  <	mov rsi, [rbp + 24]>
new  <	dec eax>

488:
old  <	add rsi, rax>
new  <>

489:
old  <>
new  < strncat$25:>

490:
old  < strncat$27:>
new  <	; IntegralToIntegral Â£temporary3145 Â£temporary3143>

491:
old  <	; Dereference Â£temporary3157 -> Â£temporary3160 Â£temporary3160 0>
new  <	mov rbx, 4294967295>

492:
old  <>
new  <	and rax, rbx>

493:
old  < strncat$28:>
new  <>

494:
old  <	; Assign Â£temporary3157 -> Â£temporary3160 0>
new  < strncat$26:>

495:
old  <	mov byte [rsi], 0>
new  <	; BinaryAdd Â£temporary3147 target Â£temporary3145>

496:
old  <>
new  <	mov rsi, [rbp + 24]>

497:
old  < strncat$29:>
new  <	add rsi, rax>

498:
old  <	; Return target>
new  <>

499:
old  <	mov rbx, [rbp + 24]>
new  < strncat$27:>

500:
old  <	mov rax, [rbp]>
new  <	; Dereference Â£temporary3144 -> Â£temporary3147 Â£temporary3147 0>

501:
old  <	mov rdi, [rbp + 16]>
new  <>

502:
old  <	mov rbp, [rbp + 8]>
new  < strncat$28:>

503:
old  <	jmp rax>
new  <	; Assign Â£temporary3144 -> Â£temporary3147 0>

504:
old  <>
new  <	mov byte [rsi], 0>

505:
old  < strncat$30:>
new  <>

506:
old  <	; FunctionEnd strncat>
new  < strncat$29:>

507:
old  <>
new  <	; SetReturnValue>

508:
old  <section .text>
new  <>

509:
old  <>
new  < strncat$30:>

510:
old  < strcmp:>
new  <	; Return target>

511:
old  <	; Assign index 0>
new  <	mov rbx, [rbp + 24]>

512:
old  <	mov dword [rbp + 40], 0>
new  <	mov rax, [rbp]>

513:
old  <>
new  <	mov rdi, [rbp + 16]>

514:
old  < strcmp$1:>
new  <	mov rbp, [rbp + 8]>

515:
old  <	; IntegralToIntegral Â£temporary3163 index>
new  <	jmp rax>

516:
old  <	mov eax, [rbp + 40]>
new  <>

517:
old  <	mov rbx, 4294967295>
new  < strncat$31:>

518:
old  <	and rax, rbx>
new  <	; FunctionEnd strncat>

520:
old  < strcmp$2:>
new  <section .text>

521:
old  <	; BinaryAdd Â£temporary3165 left Â£temporary3163>
new  <>

522:
old  <	mov rsi, [rbp + 24]>
new  < strcmp:>

523:
old  <	add rsi, rax>
new  <	; Assign index 0>

524:
old  <>
new  <	mov dword [rbp + 40], 0>

525:
old  < strcmp$3:>
new  <>

526:
old  <	; Dereference Â£temporary3162 -> Â£temporary3165 Â£temporary3165 0>
new  < strcmp$1:>

527:
old  <>
new  <	; IntegralToIntegral Â£temporary3150 index>

528:
old  < strcmp$4:>
new  <	mov eax, [rbp + 40]>

529:
old  <	; NotEqual 10 Â£temporary3162 -> Â£temporary3165 0>
new  <	mov rbx, 4294967295>

530:
old  <	cmp byte [rsi], 0>
new  <	and rax, rbx>

531:
old  <	jne strcmp$10>
new  <>

532:
old  <>
new  < strcmp$2:>

533:
old  < strcmp$5:>
new  <	; BinaryAdd Â£temporary3152 left Â£temporary3150>

534:
old  <	; IntegralToIntegral Â£temporary3168 index>
new  <	mov rsi, [rbp + 24]>

535:
old  <	mov eax, [rbp + 40]>
new  <	add rsi, rax>

536:
old  <	mov rbx, 4294967295>
new  <>

537:
old  <	and rax, rbx>
new  < strcmp$3:>

538:
old  <>
new  <	; Dereference Â£temporary3149 -> Â£temporary3152 Â£temporary3152 0>

539:
old  < strcmp$6:>
new  <>

540:
old  <	; BinaryAdd Â£temporary3170 right Â£temporary3168>
new  < strcmp$4:>

541:
old  <	mov rsi, [rbp + 32]>
new  <	; NotEqual 11 Â£temporary3149 -> Â£temporary3152 0>

542:
old  <	add rsi, rax>
new  <	cmp byte [rsi], 0>

543:
old  <>
new  <	jne strcmp$11>

544:
old  < strcmp$7:>
new  <>

545:
old  <	; Dereference Â£temporary3167 -> Â£temporary3170 Â£temporary3170 0>
new  < strcmp$5:>

546:
old  <>
new  <	; IntegralToIntegral Â£temporary3155 index>

547:
old  < strcmp$8:>
new  <	mov eax, [rbp + 40]>

548:
old  <	; NotEqual 10 Â£temporary3167 -> Â£temporary3170 0>
new  <	mov rbx, 4294967295>

549:
old  <	cmp byte [rsi], 0>
new  <	and rax, rbx>

550:
old  <	jne strcmp$10>
new  <>

551:
old  <>
new  < strcmp$6:>

552:
old  < strcmp$9:>
new  <	; BinaryAdd Â£temporary3157 right Â£temporary3155>

553:
old  <	; Return 0>
new  <	mov rsi, [rbp + 32]>

554:
old  <	mov ebx, 0>
new  <	add rsi, rax>

555:
old  <	mov rax, [rbp]>
new  <>

556:
old  <	mov rdi, [rbp + 16]>
new  < strcmp$7:>

557:
old  <	mov rbp, [rbp + 8]>
new  <	; Dereference Â£temporary3154 -> Â£temporary3157 Â£temporary3157 0>

558:
old  <	jmp rax>
new  <>

559:
old  <>
new  < strcmp$8:>

560:
old  < strcmp$10:>
new  <	; NotEqual 11 Â£temporary3154 -> Â£temporary3157 0>

561:
old  <	; IntegralToIntegral Â£temporary3174 index>
new  <	cmp byte [rsi], 0>

562:
old  <	mov eax, [rbp + 40]>
new  <	jne strcmp$11>

563:
old  <	mov rbx, 4294967295>
new  <>

564:
old  <	and rax, rbx>
new  < strcmp$9:>

565:
old  <>
new  <	; SetReturnValue>

566:
old  < strcmp$11:>
new  <>

567:
old  <	; BinaryAdd Â£temporary3176 left Â£temporary3174>
new  < strcmp$10:>

568:
old  <	mov rsi, [rbp + 24]>
new  <	; Return 0>

569:
old  <	add rsi, rax>
new  <	mov ebx, 0>

570:
old  <>
new  <	mov rax, [rbp]>

571:
old  < strcmp$12:>
new  <	mov rdi, [rbp + 16]>

572:
old  <	; Dereference Â£temporary3173 -> Â£temporary3176 Â£temporary3176 0>
new  <	mov rbp, [rbp + 8]>

573:
old  <>
new  <	jmp rax>

574:
old  < strcmp$13:>
new  <>

575:
old  <	; NotEqual 15 Â£temporary3173 -> Â£temporary3176 0>
new  < strcmp$11:>

576:
old  <	cmp byte [rsi], 0>
new  <	; IntegralToIntegral Â£temporary3161 index>

577:
old  <	jne strcmp$15>
new  <	mov eax, [rbp + 40]>

578:
old  <>
new  <	mov rbx, 4294967295>

579:
old  < strcmp$14:>
new  <	and rax, rbx>

580:
old  <	; Return -1>
new  <>

581:
old  <	mov ebx, -1>
new  < strcmp$12:>

582:
old  <	mov rax, [rbp]>
new  <	; BinaryAdd Â£temporary3163 left Â£temporary3161>

583:
old  <	mov rdi, [rbp + 16]>
new  <	mov rsi, [rbp + 24]>

584:
old  <	mov rbp, [rbp + 8]>
new  <	add rsi, rax>

585:
old  <	jmp rax>
new  <>

586:
old  <>
new  < strcmp$13:>

587:
old  < strcmp$15:>
new  <	; Dereference Â£temporary3160 -> Â£temporary3163 Â£temporary3163 0>

588:
old  <	; IntegralToIntegral Â£temporary3179 index>
new  <>

589:
old  <	mov eax, [rbp + 40]>
new  < strcmp$14:>

590:
old  <	mov rbx, 4294967295>
new  <	; NotEqual 17 Â£temporary3160 -> Â£temporary3163 0>

591:
old  <	and rax, rbx>
new  <	cmp byte [rsi], 0>

592:
old  <>
new  <	jne strcmp$17>

593:
old  < strcmp$16:>
new  <>

594:
old  <	; BinaryAdd Â£temporary3181 right Â£temporary3179>
new  < strcmp$15:>

595:
old  <	mov rsi, [rbp + 32]>
new  <	; SetReturnValue>

596:
old  <	add rsi, rax>
new  <>

597:
old  <>
new  < strcmp$16:>

598:
old  < strcmp$17:>
new  <	; Return -1>

599:
old  <	; Dereference Â£temporary3178 -> Â£temporary3181 Â£temporary3181 0>
new  <	mov ebx, -1>

600:
old  <>
new  <	mov rax, [rbp]>

601:
old  < strcmp$18:>
new  <	mov rdi, [rbp + 16]>

602:
old  <	; NotEqual 20 Â£temporary3178 -> Â£temporary3181 0>
new  <	mov rbp, [rbp + 8]>

603:
old  <	cmp byte [rsi], 0>
new  <	jmp rax>

604:
old  <	jne strcmp$20>
new  <>

605:
old  <>
new  < strcmp$17:>

606:
old  < strcmp$19:>
new  <	; IntegralToIntegral Â£temporary3166 index>

607:
old  <	; Return 1>
new  <	mov eax, [rbp + 40]>

608:
old  <	mov ebx, 1>
new  <	mov rbx, 4294967295>

609:
old  <	mov rax, [rbp]>
new  <	and rax, rbx>

610:
old  <	mov rdi, [rbp + 16]>
new  <>

611:
old  <	mov rbp, [rbp + 8]>
new  < strcmp$18:>

612:
old  <	jmp rax>
new  <	; BinaryAdd Â£temporary3168 right Â£temporary3166>

613:
old  <>
new  <	mov rsi, [rbp + 32]>

614:
old  < strcmp$20:>
new  <	add rsi, rax>

615:
old  <	; IntegralToIntegral Â£temporary3184 index>
new  <>

616:
old  <	mov eax, [rbp + 40]>
new  < strcmp$19:>

617:
old  <	mov rbx, 4294967295>
new  <	; Dereference Â£temporary3165 -> Â£temporary3168 Â£temporary3168 0>

618:
old  <	and rax, rbx>
new  <>

619:
old  <>
new  < strcmp$20:>

620:
old  < strcmp$21:>
new  <	; NotEqual 23 Â£temporary3165 -> Â£temporary3168 0>

621:
old  <	; BinaryAdd Â£temporary3186 left Â£temporary3184>
new  <	cmp byte [rsi], 0>

622:
old  <	mov rsi, [rbp + 24]>
new  <	jne strcmp$23>

623:
old  <	add rsi, rax>
new  <>

624:
old  <>
new  < strcmp$21:>

625:
old  < strcmp$22:>
new  <	; SetReturnValue>

626:
old  <	; Dereference Â£temporary3183 -> Â£temporary3186 Â£temporary3186 0>
new  <>

627:
old  <>
new  < strcmp$22:>

628:
old  < strcmp$23:>
new  <	; Return 1>

629:
old  <	; IntegralToIntegral Â£temporary3188 index>
new  <	mov ebx, 1>

630:
old  <	mov eax, [rbp + 40]>
new  <	mov rax, [rbp]>

631:
old  <	mov rbx, 4294967295>
new  <	mov rdi, [rbp + 16]>

632:
old  <	and rax, rbx>
new  <	mov rbp, [rbp + 8]>

633:
old  <>
new  <	jmp rax>

634:
old  < strcmp$24:>
new  <>

635:
old  <	; BinaryAdd Â£temporary3190 right Â£temporary3188>
new  < strcmp$23:>

636:
old  <	mov rdi, [rbp + 32]>
new  <	; IntegralToIntegral Â£temporary3171 index>

637:
old  <	add rdi, rax>
new  <	mov eax, [rbp + 40]>

638:
old  <>
new  <	mov rbx, 4294967295>

639:
old  < strcmp$25:>
new  <	and rax, rbx>

640:
old  <	; Dereference Â£temporary3187 -> Â£temporary3190 Â£temporary3190 0>
new  <>

641:
old  <>
new  < strcmp$24:>

642:
old  < strcmp$26:>
new  <	; BinaryAdd Â£temporary3173 left Â£temporary3171>

643:
old  <	; SignedGreaterThanEqual 28 Â£temporary3183 -> Â£temporary3186 Â£temporary3187 -> Â£temporary3190>
new  <	mov rsi, [rbp + 24]>

644:
old  <	mov al, [rdi]>
new  <	add rsi, rax>

645:
old  <	cmp [rsi], al>
new  <>

646:
old  <	jge strcmp$28>
new  < strcmp$25:>

647:
old  <>
new  <	; Dereference Â£temporary3170 -> Â£temporary3173 Â£temporary3173 0>

648:
old  < strcmp$27:>
new  <>

649:
old  <	; Return -1>
new  < strcmp$26:>

650:
old  <	mov ebx, -1>
new  <	; IntegralToIntegral Â£temporary3175 index>

651:
old  <	mov rax, [rbp]>
new  <	mov eax, [rbp + 40]>

652:
old  <	mov rdi, [rbp + 16]>
new  <	mov rbx, 4294967295>

653:
old  <	mov rbp, [rbp + 8]>
new  <	and rax, rbx>

654:
old  <	jmp rax>
new  <>

655:
old  <>
new  < strcmp$27:>

656:
old  < strcmp$28:>
new  <	; BinaryAdd Â£temporary3177 right Â£temporary3175>

657:
old  <	; IntegralToIntegral Â£temporary3193 index>
new  <	mov rdi, [rbp + 32]>

658:
old  <	mov eax, [rbp + 40]>
new  <	add rdi, rax>

659:
old  <	mov rbx, 4294967295>
new  <>

660:
old  <	and rax, rbx>
new  < strcmp$28:>

661:
old  <>
new  <	; Dereference Â£temporary3174 -> Â£temporary3177 Â£temporary3177 0>

662:
old  < strcmp$29:>
new  <>

663:
old  <	; BinaryAdd Â£temporary3195 left Â£temporary3193>
new  < strcmp$29:>

664:
old  <	mov rsi, [rbp + 24]>
new  <	; SignedGreaterThanEqual 32 Â£temporary3170 -> Â£temporary3173 Â£temporary3174 -> Â£temporary3177>

665:
old  <	add rsi, rax>
new  <	mov al, [rdi]>

666:
old  <>
new  <	cmp [rsi], al>

667:
old  < strcmp$30:>
new  <	jge strcmp$32>

668:
old  <	; Dereference Â£temporary3192 -> Â£temporary3195 Â£temporary3195 0>
new  <>

669:
old  <>
new  < strcmp$30:>

670:
old  < strcmp$31:>
new  <	; SetReturnValue>

671:
old  <	; IntegralToIntegral Â£temporary3197 index>
new  <>

672:
old  <	mov eax, [rbp + 40]>
new  < strcmp$31:>

673:
old  <	mov rbx, 4294967295>
new  <	; Return -1>

674:
old  <	and rax, rbx>
new  <	mov ebx, -1>

675:
old  <>
new  <	mov rax, [rbp]>

676:
old  < strcmp$32:>
new  <	mov rdi, [rbp + 16]>

677:
old  <	; BinaryAdd Â£temporary3199 right Â£temporary3197>
new  <	mov rbp, [rbp + 8]>

678:
old  <	mov rdi, [rbp + 32]>
new  <	jmp rax>

679:
old  <	add rdi, rax>
new  <>

680:
old  <>
new  < strcmp$32:>

681:
old  < strcmp$33:>
new  <	; IntegralToIntegral Â£temporary3180 index>

682:
old  <	; Dereference Â£temporary3196 -> Â£temporary3199 Â£temporary3199 0>
new  <	mov eax, [rbp + 40]>

683:
old  <>
new  <	mov rbx, 4294967295>

684:
old  < strcmp$34:>
new  <	and rax, rbx>

685:
old  <	; SignedLessThanEqual 36 Â£temporary3192 -> Â£temporary3195 Â£temporary3196 -> Â£temporary3199>
new  <>

686:
old  <	mov al, [rdi]>
new  < strcmp$33:>

687:
old  <	cmp [rsi], al>
new  <	; BinaryAdd Â£temporary3182 left Â£temporary3180>

688:
old  <	jle strcmp$36>
new  <	mov rsi, [rbp + 24]>

689:
old  <>
new  <	add rsi, rax>

690:
old  < strcmp$35:>
new  <>

691:
old  <	; Return 1>
new  < strcmp$34:>

692:
old  <	mov ebx, 1>
new  <	; Dereference Â£temporary3179 -> Â£temporary3182 Â£temporary3182 0>

693:
old  <	mov rax, [rbp]>
new  <>

694:
old  <	mov rdi, [rbp + 16]>
new  < strcmp$35:>

695:
old  <	mov rbp, [rbp + 8]>
new  <	; IntegralToIntegral Â£temporary3184 index>

696:
old  <	jmp rax>
new  <	mov eax, [rbp + 40]>

697:
old  <>
new  <	mov rbx, 4294967295>

698:
old  < strcmp$36:>
new  <	and rax, rbx>

699:
old  <	; BinaryAdd index index 1>
new  <>

700:
old  <	inc dword [rbp + 40]>
new  < strcmp$36:>

701:
old  <>
new  <	; BinaryAdd Â£temporary3186 right Â£temporary3184>

702:
old  < strcmp$37:>
new  <	mov rdi, [rbp + 32]>

703:
old  <	; Goto 1>
new  <	add rdi, rax>

704:
old  <	jmp strcmp$1>
new  <>

705:
old  <>
new  < strcmp$37:>

706:
old  < strcmp$38:>
new  <	; Dereference Â£temporary3183 -> Â£temporary3186 Â£temporary3186 0>

707:
old  <	; FunctionEnd strcmp>
new  <>

708:
old  <>
new  < strcmp$38:>

709:
old  <section .text>
new  <	; SignedLessThanEqual 41 Â£temporary3179 -> Â£temporary3182 Â£temporary3183 -> Â£temporary3186>

710:
old  <>
new  <	mov al, [rdi]>

711:
old  < strncmp:>
new  <	cmp [rsi], al>

712:
old  <	; Assign index 0>
new  <	jle strcmp$41>

713:
old  <	mov dword [rbp + 44], 0>
new  <>

714:
old  <>
new  < strcmp$39:>

715:
old  < strncmp$1:>
new  <	; SetReturnValue>

716:
old  <	; SignedGreaterThanEqual 39 index size>
new  <>

717:
old  <	mov eax, [rbp + 40]>
new  < strcmp$40:>

718:
old  <	cmp [rbp + 44], eax>
new  <	; Return 1>

719:
old  <	jge strncmp$39>
new  <	mov ebx, 1>

720:
old  <>
new  <	mov rax, [rbp]>

721:
old  < strncmp$2:>
new  <	mov rdi, [rbp + 16]>

722:
old  <	; IntegralToIntegral Â£temporary3205 index>
new  <	mov rbp, [rbp + 8]>

723:
old  <	mov eax, [rbp + 44]>
new  <	jmp rax>

724:
old  <	mov rbx, 4294967295>
new  <>

725:
old  <	and rax, rbx>
new  < strcmp$41:>

726:
old  <>
new  <	; BinaryAdd index index 1>

727:
old  < strncmp$3:>
new  <	inc dword [rbp + 40]>

728:
old  <	; BinaryAdd Â£temporary3207 left Â£temporary3205>
new  <>

729:
old  <	mov rsi, [rbp + 24]>
new  < strcmp$42:>

730:
old  <	add rsi, rax>
new  <	; Goto 1>

731:
old  <>
new  <	jmp strcmp$1>

732:
old  < strncmp$4:>
new  <>

733:
old  <	; Dereference Â£temporary3204 -> Â£temporary3207 Â£temporary3207 0>
new  < strcmp$43:>

734:
old  <>
new  <	; FunctionEnd strcmp>

735:
old  < strncmp$5:>
new  <>

736:
old  <	; NotEqual 11 Â£temporary3204 -> Â£temporary3207 0>
new  <section .text>

737:
old  <	cmp byte [rsi], 0>
new  <>

738:
old  <	jne strncmp$11>
new  < strncmp:>

739:
old  <>
new  <	; Assign index 0>

740:
old  < strncmp$6:>
new  <	mov dword [rbp + 44], 0>

741:
old  <	; IntegralToIntegral Â£temporary3210 index>
new  <>

742:
old  <	mov eax, [rbp + 44]>
new  < strncmp$1:>

743:
old  <	mov rbx, 4294967295>
new  <	; SignedGreaterThanEqual 44 index size>

744:
old  <	and rax, rbx>
new  <	mov eax, [rbp + 40]>

745:
old  <>
new  <	cmp [rbp + 44], eax>

746:
old  < strncmp$7:>
new  <	jge strncmp$44>

747:
old  <	; BinaryAdd Â£temporary3212 right Â£temporary3210>
new  <>

748:
old  <	mov rsi, [rbp + 32]>
new  < strncmp$2:>

749:
old  <	add rsi, rax>
new  <	; IntegralToIntegral Â£temporary3192 index>

750:
old  <>
new  <	mov eax, [rbp + 44]>

751:
old  < strncmp$8:>
new  <	mov rbx, 4294967295>

752:
old  <	; Dereference Â£temporary3209 -> Â£temporary3212 Â£temporary3212 0>
new  <	and rax, rbx>

754:
old  < strncmp$9:>
new  < strncmp$3:>

755:
old  <	; NotEqual 11 Â£temporary3209 -> Â£temporary3212 0>
new  <	; BinaryAdd Â£temporary3194 left Â£temporary3192>

756:
old  <	cmp byte [rsi], 0>
new  <	mov rsi, [rbp + 24]>

757:
old  <	jne strncmp$11>
new  <	add rsi, rax>

759:
old  < strncmp$10:>
new  < strncmp$4:>

760:
old  <	; Return 0>
new  <	; Dereference Â£temporary3191 -> Â£temporary3194 Â£temporary3194 0>

761:
old  <	mov ebx, 0>
new  <>

762:
old  <	mov rax, [rbp]>
new  < strncmp$5:>

763:
old  <	mov rdi, [rbp + 16]>
new  <	; NotEqual 12 Â£temporary3191 -> Â£temporary3194 0>

764:
old  <	mov rbp, [rbp + 8]>
new  <	cmp byte [rsi], 0>

765:
old  <	jmp rax>
new  <	jne strncmp$12>

767:
old  < strncmp$11:>
new  < strncmp$6:>

768:
old  <	; IntegralToIntegral Â£temporary3216 index>
new  <	; IntegralToIntegral Â£temporary3197 index>

773:
old  < strncmp$12:>
new  < strncmp$7:>

774:
old  <	; BinaryAdd Â£temporary3218 left Â£temporary3216>
new  <	; BinaryAdd Â£temporary3199 right Â£temporary3197>

775:
old  <	mov rsi, [rbp + 24]>
new  <	mov rsi, [rbp + 32]>

778:
old  < strncmp$13:>
new  < strncmp$8:>

779:
old  <	; Dereference Â£temporary3215 -> Â£temporary3218 Â£temporary3218 0>
new  <	; Dereference Â£temporary3196 -> Â£temporary3199 Â£temporary3199 0>

781:
old  < strncmp$14:>
new  < strncmp$9:>

782:
old  <	; NotEqual 16 Â£temporary3215 -> Â£temporary3218 0>
new  <	; NotEqual 12 Â£temporary3196 -> Â£temporary3199 0>

784:
old  <	jne strncmp$16>
new  <	jne strncmp$12>

786:
old  < strncmp$15:>
new  < strncmp$10:>

787:
old  <	; Return -1>
new  <	; SetReturnValue>

788:
old  <	mov ebx, -1>
new  <>

789:
old  <	mov rax, [rbp]>
new  < strncmp$11:>

790:
old  <	mov rdi, [rbp + 16]>
new  <	; Return 0>

791:
old  <	mov rbp, [rbp + 8]>
new  <	mov ebx, 0>

792:
old  <	jmp rax>
new  <	mov rax, [rbp]>

793:
old  <>
new  <	mov rdi, [rbp + 16]>

794:
old  < strncmp$16:>
new  <	mov rbp, [rbp + 8]>

795:
old  <	; IntegralToIntegral Â£temporary3221 index>
new  <	jmp rax>

796:
old  <	mov eax, [rbp + 44]>
new  <>

797:
old  <	mov rbx, 4294967295>
new  < strncmp$12:>

798:
old  <	and rax, rbx>
new  <	; IntegralToIntegral Â£temporary3203 index>

799:
old  <>
new  <	mov eax, [rbp + 44]>

800:
old  < strncmp$17:>
new  <	mov rbx, 4294967295>

801:
old  <	; BinaryAdd Â£temporary3223 right Â£temporary3221>
new  <	and rax, rbx>

802:
old  <	mov rsi, [rbp + 32]>
new  <>

803:
old  <	add rsi, rax>
new  < strncmp$13:>

804:
old  <>
new  <	; BinaryAdd Â£temporary3205 left Â£temporary3203>

805:
old  < strncmp$18:>
new  <	mov rsi, [rbp + 24]>

806:
old  <	; Dereference Â£temporary3220 -> Â£temporary3223 Â£temporary3223 0>
new  <	add rsi, rax>

808:
old  < strncmp$19:>
new  < strncmp$14:>

809:
old  <	; NotEqual 21 Â£temporary3220 -> Â£temporary3223 0>
new  <	; Dereference Â£temporary3202 -> Â£temporary3205 Â£temporary3205 0>

810:
old  <	cmp byte [rsi], 0>
new  <>

811:
old  <	jne strncmp$21>
new  < strncmp$15:>

812:
old  <>
new  <	; NotEqual 18 Â£temporary3202 -> Â£temporary3205 0>

813:
old  < strncmp$20:>
new  <	cmp byte [rsi], 0>

814:
old  <	; Return 1>
new  <	jne strncmp$18>

815:
old  <	mov ebx, 1>
new  <>

816:
old  <	mov rax, [rbp]>
new  < strncmp$16:>

817:
old  <	mov rdi, [rbp + 16]>
new  <	; SetReturnValue>

818:
old  <	mov rbp, [rbp + 8]>
new  <>

819:
old  <	jmp rax>
new  < strncmp$17:>

820:
old  <>
new  <	; Return -1>

821:
old  < strncmp$21:>
new  <	mov ebx, -1>

822:
old  <	; IntegralToIntegral Â£temporary3226 index>
new  <	mov rax, [rbp]>

823:
old  <	mov eax, [rbp + 44]>
new  <	mov rdi, [rbp + 16]>

824:
old  <	mov rbx, 4294967295>
new  <	mov rbp, [rbp + 8]>

825:
old  <	and rax, rbx>
new  <	jmp rax>

827:
old  < strncmp$22:>
new  < strncmp$18:>

828:
old  <	; BinaryAdd Â£temporary3228 left Â£temporary3226>
new  <	; IntegralToIntegral Â£temporary3208 index>

829:
old  <	mov rsi, [rbp + 24]>
new  <	mov eax, [rbp + 44]>

830:
old  <	add rsi, rax>
new  <	mov rbx, 4294967295>

831:
old  <>
new  <	and rax, rbx>

832:
old  < strncmp$23:>
new  <>

833:
old  <	; Dereference Â£temporary3225 -> Â£temporary3228 Â£temporary3228 0>
new  < strncmp$19:>

834:
old  <>
new  <	; BinaryAdd Â£temporary3210 right Â£temporary3208>

835:
old  < strncmp$24:>
new  <	mov rsi, [rbp + 32]>

836:
old  <	; IntegralToIntegral Â£temporary3230 index>
new  <	add rsi, rax>

837:
old  <	mov eax, [rbp + 44]>
new  <>

838:
old  <	mov rbx, 4294967295>
new  < strncmp$20:>

839:
old  <	and rax, rbx>
new  <	; Dereference Â£temporary3207 -> Â£temporary3210 Â£temporary3210 0>

841:
old  < strncmp$25:>
new  < strncmp$21:>

842:
old  <	; BinaryAdd Â£temporary3232 right Â£temporary3230>
new  <	; NotEqual 24 Â£temporary3207 -> Â£temporary3210 0>

843:
old  <	mov rdi, [rbp + 32]>
new  <	cmp byte [rsi], 0>

844:
old  <	add rdi, rax>
new  <	jne strncmp$24>

846:
old  < strncmp$26:>
new  < strncmp$22:>

847:
old  <	; Dereference Â£temporary3229 -> Â£temporary3232 Â£temporary3232 0>
new  <	; SetReturnValue>

849:
old  < strncmp$27:>
new  < strncmp$23:>

850:
old  <	; SignedGreaterThanEqual 29 Â£temporary3225 -> Â£temporary3228 Â£temporary3229 -> Â£temporary3232>
new  <	; Return 1>

851:
old  <	mov al, [rdi]>
new  <	mov ebx, 1>

852:
old  <	cmp [rsi], al>
new  <	mov rax, [rbp]>

853:
old  <	jge strncmp$29>
new  <	mov rdi, [rbp + 16]>

854:
old  <>
new  <	mov rbp, [rbp + 8]>

855:
old  < strncmp$28:>
new  <	jmp rax>

856:
old  <	; Return -1>
new  <>

857:
old  <	mov ebx, -1>
new  < strncmp$24:>

858:
old  <	mov rax, [rbp]>
new  <	; IntegralToIntegral Â£temporary3213 index>

859:
old  <	mov rdi, [rbp + 16]>
new  <	mov eax, [rbp + 44]>

860:
old  <	mov rbp, [rbp + 8]>
new  <	mov rbx, 4294967295>

861:
old  <	jmp rax>
new  <	and rax, rbx>

863:
old  < strncmp$29:>
new  < strncmp$25:>

864:
old  <	; IntegralToIntegral Â£temporary3235 index>
new  <	; BinaryAdd Â£temporary3215 left Â£temporary3213>

865:
old  <	mov eax, [rbp + 44]>
new  <	mov rsi, [rbp + 24]>

866:
old  <	mov rbx, 4294967295>
new  <	add rsi, rax>

867:
old  <	and rax, rbx>
new  <>

868:
old  <>
new  < strncmp$26:>

869:
old  < strncmp$30:>
new  <	; Dereference Â£temporary3212 -> Â£temporary3215 Â£temporary3215 0>

870:
old  <	; BinaryAdd Â£temporary3237 left Â£temporary3235>
new  <>

871:
old  <	mov rsi, [rbp + 24]>
new  < strncmp$27:>

872:
old  <	add rsi, rax>
new  <	; IntegralToIntegral Â£temporary3217 index>

873:
old  <>
new  <	mov eax, [rbp + 44]>

874:
old  < strncmp$31:>
new  <	mov rbx, 4294967295>

875:
old  <	; Dereference Â£temporary3234 -> Â£temporary3237 Â£temporary3237 0>
new  <	and rax, rbx>

877:
old  < strncmp$32:>
new  < strncmp$28:>

878:
old  <	; IntegralToIntegral Â£temporary3239 index>
new  <	; BinaryAdd Â£temporary3219 right Â£temporary3217>

879:
old  <	mov eax, [rbp + 44]>
new  <	mov rdi, [rbp + 32]>

880:
old  <	mov rbx, 4294967295>
new  <	add rdi, rax>

881:
old  <	and rax, rbx>
new  <>

882:
old  <>
new  < strncmp$29:>

883:
old  < strncmp$33:>
new  <	; Dereference Â£temporary3216 -> Â£temporary3219 Â£temporary3219 0>

884:
old  <	; BinaryAdd Â£temporary3241 right Â£temporary3239>
new  <>

885:
old  <	mov rdi, [rbp + 32]>
new  < strncmp$30:>

886:
old  <	add rdi, rax>
new  <	; SignedGreaterThanEqual 33 Â£temporary3212 -> Â£temporary3215 Â£temporary3216 -> Â£temporary3219>

887:
old  <>
new  <	mov al, [rdi]>

888:
old  < strncmp$34:>
new  <	cmp [rsi], al>

889:
old  <	; Dereference Â£temporary3238 -> Â£temporary3241 Â£temporary3241 0>
new  <	jge strncmp$33>

891:
old  < strncmp$35:>
new  < strncmp$31:>

892:
old  <	; SignedLessThanEqual 37 Â£temporary3234 -> Â£temporary3237 Â£temporary3238 -> Â£temporary3241>
new  <	; SetReturnValue>

893:
old  <	mov al, [rdi]>
new  <>

894:
old  <	cmp [rsi], al>
new  < strncmp$32:>

895:
old  <	jle strncmp$37>
new  <	; Return -1>

896:
old  <>
new  <	mov ebx, -1>

897:
old  < strncmp$36:>
new  <	mov rax, [rbp]>

898:
old  <	; Return 1>
new  <	mov rdi, [rbp + 16]>

899:
old  <	mov ebx, 1>
new  <	mov rbp, [rbp + 8]>

900:
old  <	mov rax, [rbp]>
new  <	jmp rax>

901:
old  <	mov rdi, [rbp + 16]>
new  <>

902:
old  <	mov rbp, [rbp + 8]>
new  < strncmp$33:>

903:
old  <	jmp rax>
new  <	; IntegralToIntegral Â£temporary3222 index>

904:
old  <>
new  <	mov eax, [rbp + 44]>

905:
old  < strncmp$37:>
new  <	mov rbx, 4294967295>

906:
old  <	; BinaryAdd index index 1>
new  <	and rax, rbx>

907:
old  <	inc dword [rbp + 44]>
new  <>

908:
old  <>
new  < strncmp$34:>

909:
old  < strncmp$38:>
new  <	; BinaryAdd Â£temporary3224 left Â£temporary3222>

910:
old  <	; Goto 1>
new  <	mov rsi, [rbp + 24]>

911:
old  <	jmp strncmp$1>
new  <	add rsi, rax>

913:
old  < strncmp$39:>
new  < strncmp$35:>

914:
old  <	; Return 0>
new  <	; Dereference Â£temporary3221 -> Â£temporary3224 Â£temporary3224 0>

915:
old  <	mov ebx, 0>
new  <>

916:
old  <	mov rax, [rbp]>
new  < strncmp$36:>

917:
old  <	mov rdi, [rbp + 16]>
new  <	; IntegralToIntegral Â£temporary3226 index>

918:
old  <	mov rbp, [rbp + 8]>
new  <	mov eax, [rbp + 44]>

919:
old  <	jmp rax>
new  <	mov rbx, 4294967295>

920:
old  <>
new  <	and rax, rbx>

921:
old  < strncmp$40:>
new  <>

922:
old  <	; FunctionEnd strncmp>
new  < strncmp$37:>

923:
old  <>
new  <	; BinaryAdd Â£temporary3228 right Â£temporary3226>

924:
old  <section .text>
new  <	mov rdi, [rbp + 32]>

925:
old  <>
new  <	add rdi, rax>

926:
old  < strchr:>
new  <>

927:
old  <	; IntegralToIntegral Â£temporary3243 i>
new  < strncmp$38:>

928:
old  <	mov eax, [rbp + 32]>
new  <	; Dereference Â£temporary3225 -> Â£temporary3228 Â£temporary3228 0>

929:
old  <	cmp eax, 0>
new  <>

930:
old  <	jge strchr$1>
new  < strncmp$39:>

931:
old  <	neg eax>
new  <	; SignedLessThanEqual 42 Â£temporary3221 -> Â£temporary3224 Â£temporary3225 -> Â£temporary3228>

932:
old  <	neg al>
new  <	mov al, [rdi]>

933:
old  <>
new  <	cmp [rsi], al>

934:
old  < strchr$1:>
new  <	jle strncmp$42>

935:
old  <	; Assign c Â£temporary3243>
new  <>

936:
old  <	mov [rbp + 40], al>
new  < strncmp$40:>

937:
old  <>
new  <	; SetReturnValue>

938:
old  < strchr$2:>
new  <>

939:
old  <	; Assign index 0>
new  < strncmp$41:>

940:
old  <	mov dword [rbp + 36], 0>
new  <	; Return 1>

941:
old  <>
new  <	mov ebx, 1>

942:
old  < strchr$3:>
new  <	mov rax, [rbp]>

943:
old  <	; IntegralToIntegral Â£temporary3245 index>
new  <	mov rdi, [rbp + 16]>

944:
old  <	mov eax, [rbp + 36]>
new  <	mov rbp, [rbp + 8]>

945:
old  <	mov rbx, 4294967295>
new  <	jmp rax>

946:
old  <	and rax, rbx>
new  <>

947:
old  <>
new  < strncmp$42:>

948:
old  < strchr$4:>
new  <	; BinaryAdd index index 1>

949:
old  <	; BinaryAdd Â£temporary3247 text Â£temporary3245>
new  <	inc dword [rbp + 44]>

950:
old  <	mov rsi, [rbp + 24]>
new  <>

951:
old  <	add rsi, rax>
new  < strncmp$43:>

952:
old  <>
new  <	; Goto 1>

953:
old  < strchr$5:>
new  <	jmp strncmp$1>

954:
old  <	; Dereference Â£temporary3244 -> Â£temporary3247 Â£temporary3247 0>
new  <>

955:
old  <>
new  < strncmp$44:>

956:
old  < strchr$6:>
new  <	; SetReturnValue>

957:
old  <	; Equal 18 Â£temporary3244 -> Â£temporary3247 0>
new  <>

958:
old  <	cmp byte [rsi], 0>
new  < strncmp$45:>

959:
old  <	je strchr$18>
new  <	; Return 0>

960:
old  <>
new  <	mov ebx, 0>

961:
old  < strchr$7:>
new  <	mov rax, [rbp]>

962:
old  <	; IntegralToIntegral Â£temporary3251 index>
new  <	mov rdi, [rbp + 16]>

963:
old  <	mov eax, [rbp + 36]>
new  <	mov rbp, [rbp + 8]>

964:
old  <	mov rbx, 4294967295>
new  <	jmp rax>

965:
old  <	and rax, rbx>
new  <>

966:
old  <>
new  < strncmp$46:>

967:
old  < strchr$8:>
new  <	; FunctionEnd strncmp>

968:
old  <	; BinaryAdd Â£temporary3253 text Â£temporary3251>
new  <>

969:
old  <	mov rsi, [rbp + 24]>
new  <section .text>

970:
old  <	add rsi, rax>
new  <>

971:
old  <>
new  < strchr:>

972:
old  < strchr$9:>
new  <	; IntegralToIntegral Â£temporary3230 i>

973:
old  <	; Dereference Â£temporary3250 -> Â£temporary3253 Â£temporary3253 0>
new  <	mov eax, [rbp + 32]>

974:
old  <>
new  <	cmp eax, 0>

975:
old  < strchr$10:>
new  <	jge strchr$1>

976:
old  <	; NotEqual 16 Â£temporary3250 -> Â£temporary3253 c>
new  <	neg eax>

977:
old  <	mov al, [rbp + 40]>
new  <	neg al>

978:
old  <	cmp [rsi], al>
new  <>

979:
old  <	jne strchr$16>
new  < strchr$1:>

980:
old  <>
new  <	; Assign c Â£temporary3230>

981:
old  < strchr$11:>
new  <	mov [rbp + 40], al>

982:
old  <	; IntegralToIntegral Â£temporary3256 index>
new  <>

983:
old  <	mov eax, [rbp + 36]>
new  < strchr$2:>

984:
old  <	mov rbx, 4294967295>
new  <	; Assign index 0>

985:
old  <	and rax, rbx>
new  <	mov dword [rbp + 36], 0>

987:
old  < strchr$12:>
new  < strchr$3:>

988:
old  <	; BinaryAdd Â£temporary3258 text Â£temporary3256>
new  <	; IntegralToIntegral Â£temporary3232 index>

989:
old  <	mov rbx, [rbp + 24]>
new  <	mov eax, [rbp + 36]>

990:
old  <	add rbx, rax>
new  <	mov rbx, 4294967295>

991:
old  <>
new  <	and rax, rbx>

992:
old  < strchr$13:>
new  <>

993:
old  <	; Dereference Â£temporary3255 -> Â£temporary3258 Â£temporary3258 0>
new  < strchr$4:>

994:
old  <>
new  <	; BinaryAdd Â£temporary3234 text Â£temporary3232>

995:
old  < strchr$14:>
new  <	mov rsi, [rbp + 24]>

996:
old  <	; Address Â£temporary3259 Â£temporary3255 -> Â£temporary3258>
new  <	add rsi, rax>

998:
old  < strchr$15:>
new  < strchr$5:>

999:
old  <	; Return Â£temporary3259>
new  <	; Dereference Â£temporary3231 -> Â£temporary3234 Â£temporary3234 0>

1000:
old  <	mov rax, [rbp]>
new  <>

1001:
old  <	mov rdi, [rbp + 16]>
new  < strchr$6:>

1002:
old  <	mov rbp, [rbp + 8]>
new  <	; Equal 19 Â£temporary3231 -> Â£temporary3234 0>

1003:
old  <	jmp rax>
new  <	cmp byte [rsi], 0>

1004:
old  <>
new  <	je strchr$19>

1005:
old  < strchr$16:>
new  <>

1006:
old  <	; BinaryAdd index index 1>
new  < strchr$7:>

1007:
old  <	inc dword [rbp + 36]>
new  <	; IntegralToIntegral Â£temporary3238 index>

1008:
old  <>
new  <	mov eax, [rbp + 36]>

1009:
old  < strchr$17:>
new  <	mov rbx, 4294967295>

1010:
old  <	; Goto 3>
new  <	and rax, rbx>

1011:
old  <	jmp strchr$3>
new  <>

1012:
old  <>
new  < strchr$8:>

1013:
old  < strchr$18:>
new  <	; BinaryAdd Â£temporary3240 text Â£temporary3238>

1014:
old  <	; Return 0>
new  <	mov rsi, [rbp + 24]>

1015:
old  <	mov rbx, 0>
new  <	add rsi, rax>

1016:
old  <	mov rax, [rbp]>
new  <>

1017:
old  <	mov rdi, [rbp + 16]>
new  < strchr$9:>

1018:
old  <	mov rbp, [rbp + 8]>
new  <	; Dereference Â£temporary3237 -> Â£temporary3240 Â£temporary3240 0>

1019:
old  <	jmp rax>
new  <>

1020:
old  <>
new  < strchr$10:>

1021:
old  < strchr$19:>
new  <	; NotEqual 17 Â£temporary3237 -> Â£temporary3240 c>

1022:
old  <	; FunctionEnd strchr>
new  <	mov al, [rbp + 40]>

1023:
old  <>
new  <	cmp [rsi], al>

1024:
old  <section .text>
new  <	jne strchr$17>

1026:
old  < strrchr:>
new  < strchr$11:>

1027:
old  <	; Assign result 0>
new  <	; IntegralToIntegral Â£temporary3243 index>

1028:
old  <	mov qword [rbp + 40], 0>
new  <	mov eax, [rbp + 36]>

1029:
old  <>
new  <	mov rbx, 4294967295>

1030:
old  < strrchr$1:>
new  <	and rax, rbx>

1031:
old  <	; IntegralToIntegral Â£temporary3260 i>
new  <>

1032:
old  <	mov eax, [rbp + 32]>
new  < strchr$12:>

1033:
old  <	cmp eax, 0>
new  <	; BinaryAdd Â£temporary3245 text Â£temporary3243>

1034:
old  <	jge strrchr$2>
new  <	mov rbx, [rbp + 24]>

1035:
old  <	neg eax>
new  <	add rbx, rax>

1036:
old  <	neg al>
new  <>

1037:
old  <>
new  < strchr$13:>

1038:
old  < strrchr$2:>
new  <	; Dereference Â£temporary3242 -> Â£temporary3245 Â£temporary3245 0>

1039:
old  <	; Assign c Â£temporary3260>
new  <>

1040:
old  <	mov [rbp + 48], al>
new  < strchr$14:>

1041:
old  <>
new  <	; Address Â£temporary3246 Â£temporary3242 -> Â£temporary3245>

1042:
old  < strrchr$3:>
new  <>

1043:
old  <	; Assign index 0>
new  < strchr$15:>

1044:
old  <	mov dword [rbp + 36], 0>
new  <	; SetReturnValue>

1046:
old  < strrchr$4:>
new  < strchr$16:>

1047:
old  <	; IntegralToIntegral Â£temporary3262 index>
new  <	; Return Â£temporary3246>

1048:
old  <	mov eax, [rbp + 36]>
new  <	mov rax, [rbp]>

1049:
old  <	mov rbx, 4294967295>
new  <	mov rdi, [rbp + 16]>

1050:
old  <	and rax, rbx>
new  <	mov rbp, [rbp + 8]>

1051:
old  <>
new  <	jmp rax>

1052:
old  < strrchr$5:>
new  <>

1053:
old  <	; BinaryAdd Â£temporary3264 text Â£temporary3262>
new  < strchr$17:>

1054:
old  <	mov rsi, [rbp + 24]>
new  <	; BinaryAdd index index 1>

1055:
old  <	add rsi, rax>
new  <	inc dword [rbp + 36]>

1057:
old  < strrchr$6:>
new  < strchr$18:>

1058:
old  <	; Dereference Â£temporary3261 -> Â£temporary3264 Â£temporary3264 0>
new  <	; Goto 3>

1059:
old  <>
new  <	jmp strchr$3>

1060:
old  < strrchr$7:>
new  <>

1061:
old  <	; Equal 19 Â£temporary3261 -> Â£temporary3264 0>
new  < strchr$19:>

1062:
old  <	cmp byte [rsi], 0>
new  <	; SetReturnValue>

1063:
old  <	je strrchr$19>
new  <>

1064:
old  <>
new  < strchr$20:>

1065:
old  < strrchr$8:>
new  <	; Return 0>

1066:
old  <	; IntegralToIntegral Â£temporary3268 index>
new  <	mov rbx, 0>

1067:
old  <	mov eax, [rbp + 36]>
new  <	mov rax, [rbp]>

1068:
old  <	mov rbx, 4294967295>
new  <	mov rdi, [rbp + 16]>

1069:
old  <	and rax, rbx>
new  <	mov rbp, [rbp + 8]>

1070:
old  <>
new  <	jmp rax>

1071:
old  < strrchr$9:>
new  <>

1072:
old  <	; BinaryAdd Â£temporary3270 text Â£temporary3268>
new  < strchr$21:>

1073:
old  <	mov rsi, [rbp + 24]>
new  <	; FunctionEnd strchr>

1074:
old  <	add rsi, rax>
new  <>

1075:
old  <>
new  <section .text>

1076:
old  < strrchr$10:>
new  <>

1077:
old  <	; Dereference Â£temporary3267 -> Â£temporary3270 Â£temporary3270 0>
new  < strrchr:>

1078:
old  <>
new  <	; Assign result 0>

1079:
old  < strrchr$11:>
new  <	mov qword [rbp + 40], 0>

1080:
old  <	; NotEqual 17 Â£temporary3267 -> Â£temporary3270 c>
new  <>

1081:
old  <	mov al, [rbp + 48]>
new  < strrchr$1:>

1082:
old  <	cmp [rsi], al>
new  <	; IntegralToIntegral Â£temporary3247 i>

1083:
old  <	jne strrchr$17>
new  <	mov eax, [rbp + 32]>

1084:
old  <>
new  <	cmp eax, 0>

1085:
old  < strrchr$12:>
new  <	jge strrchr$2>

1086:
old  <	; IntegralToIntegral Â£temporary3273 index>
new  <	neg eax>

1087:
old  <	mov eax, [rbp + 36]>
new  <	neg al>

1088:
old  <	mov rbx, 4294967295>
new  <>

1089:
old  <	and rax, rbx>
new  < strrchr$2:>

1090:
old  <>
new  <	; Assign c Â£temporary3247>

1091:
old  < strrchr$13:>
new  <	mov [rbp + 48], al>

1092:
old  <	; BinaryAdd Â£temporary3275 text Â£temporary3273>
new  <>

1093:
old  <	mov rsi, [rbp + 24]>
new  < strrchr$3:>

1094:
old  <	add rsi, rax>
new  <	; Assign index 0>

1095:
old  <>
new  <	mov dword [rbp + 36], 0>

1096:
old  < strrchr$14:>
new  <>

1097:
old  <	; Dereference Â£temporary3272 -> Â£temporary3275 Â£temporary3275 0>
new  < strrchr$4:>

1098:
old  <>
new  <	; IntegralToIntegral Â£temporary3249 index>

1099:
old  < strrchr$15:>
new  <	mov eax, [rbp + 36]>

1100:
old  <	; Address Â£temporary3276 Â£temporary3272 -> Â£temporary3275>
new  <	mov rbx, 4294967295>

1101:
old  <>
new  <	and rax, rbx>

1102:
old  < strrchr$16:>
new  <>

1103:
old  <	; Assign result Â£temporary3276>
new  < strrchr$5:>

1104:
old  <	mov [rbp + 40], rsi>
new  <	; BinaryAdd Â£temporary3251 text Â£temporary3249>

1105:
old  <>
new  <	mov rsi, [rbp + 24]>

1106:
old  < strrchr$17:>
new  <	add rsi, rax>

1107:
old  <	; BinaryAdd index index 1>
new  <>

1108:
old  <	inc dword [rbp + 36]>
new  < strrchr$6:>

1109:
old  <>
new  <	; Dereference Â£temporary3248 -> Â£temporary3251 Â£temporary3251 0>

1110:
old  < strrchr$18:>
new  <>

1111:
old  <	; Goto 4>
new  < strrchr$7:>

1112:
old  <	jmp strrchr$4>
new  <	; Equal 19 Â£temporary3248 -> Â£temporary3251 0>

1113:
old  <>
new  <	cmp byte [rsi], 0>

1114:
old  < strrchr$19:>
new  <	je strrchr$19>

1115:
old  <	; Return result>
new  <>

1116:
old  <	mov rbx, [rbp + 40]>
new  < strrchr$8:>

1117:
old  <	mov rax, [rbp]>
new  <	; IntegralToIntegral Â£temporary3255 index>

1118:
old  <	mov rdi, [rbp + 16]>
new  <	mov eax, [rbp + 36]>

1119:
old  <	mov rbp, [rbp + 8]>
new  <	mov rbx, 4294967295>

1120:
old  <	jmp rax>
new  <	and rax, rbx>

1122:
old  < strrchr$20:>
new  < strrchr$9:>

1123:
old  <	; FunctionEnd strrchr>
new  <	; BinaryAdd Â£temporary3257 text Â£temporary3255>

1124:
old  <>
new  <	mov rsi, [rbp + 24]>

1125:
old  <section .text>
new  <	add rsi, rax>

1127:
old  < strspn:>
new  < strrchr$10:>

1128:
old  <	; Assign index 0>
new  <	; Dereference Â£temporary3254 -> Â£temporary3257 Â£temporary3257 0>

1129:
old  <	mov dword [rbp + 40], 0>
new  <>

1130:
old  <>
new  < strrchr$11:>

1131:
old  < strspn$1:>
new  <	; NotEqual 17 Â£temporary3254 -> Â£temporary3257 c>

1132:
old  <	; IntegralToIntegral Â£temporary3278 index>
new  <	mov al, [rbp + 48]>

1133:
old  <	mov eax, [rbp + 40]>
new  <	cmp [rsi], al>

1134:
old  <	mov rbx, 4294967295>
new  <	jne strrchr$17>

1135:
old  <	and rax, rbx>
new  <>

1136:
old  <>
new  < strrchr$12:>

1137:
old  < strspn$2:>
new  <	; IntegralToIntegral Â£temporary3260 index>

1138:
old  <	; BinaryAdd Â£temporary3280 mainString Â£temporary3278>
new  <	mov eax, [rbp + 36]>

1139:
old  <	mov rsi, [rbp + 24]>
new  <	mov rbx, 4294967295>

1140:
old  <	add rsi, rax>
new  <	and rax, rbx>

1142:
old  < strspn$3:>
new  < strrchr$13:>

1143:
old  <	; Dereference Â£temporary3277 -> Â£temporary3280 Â£temporary3280 0>
new  <	; BinaryAdd Â£temporary3262 text Â£temporary3260>

1144:
old  <>
new  <	mov rsi, [rbp + 24]>

1145:
old  < strspn$4:>
new  <	add rsi, rax>

1146:
old  <	; Equal 19 Â£temporary3277 -> Â£temporary3280 0>
new  <>

1147:
old  <	cmp byte [rsi], 0>
new  < strrchr$14:>

1148:
old  <	je strspn$19>
new  <	; Dereference Â£temporary3259 -> Â£temporary3262 Â£temporary3262 0>

1150:
old  < strspn$5:>
new  < strrchr$15:>

1151:
old  <	; PreCall 44 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Address Â£temporary3263 Â£temporary3259 -> Â£temporary3262>

1153:
old  < strspn$6:>
new  < strrchr$16:>

1154:
old  <	; Parameter 68 pointer charSet>
new  <	; Assign result Â£temporary3263>

1155:
old  <	mov rax, [rbp + 32]>
new  <	mov [rbp + 40], rsi>

1156:
old  <	mov [rbp + 68], rax>
new  <>

1157:
old  <>
new  < strrchr$17:>

1158:
old  < strspn$7:>
new  <	; BinaryAdd index index 1>

1159:
old  <	; IntegralToIntegral Â£temporary3284 index>
new  <	inc dword [rbp + 36]>

1160:
old  <	mov eax, [rbp + 40]>
new  <>

1161:
old  <	mov rbx, 4294967295>
new  < strrchr$18:>

1162:
old  <	and rax, rbx>
new  <	; Goto 4>

1163:
old  <>
new  <	jmp strrchr$4>

1164:
old  < strspn$8:>
new  <>

1165:
old  <	; BinaryAdd Â£temporary3286 mainString Â£temporary3284>
new  < strrchr$19:>

1166:
old  <	mov rsi, [rbp + 24]>
new  <	; SetReturnValue>

1167:
old  <	add rsi, rax>
new  <>

1168:
old  <>
new  < strrchr$20:>

1169:
old  < strspn$9:>
new  <	; Return result>

1170:
old  <	; Dereference Â£temporary3283 -> Â£temporary3286 Â£temporary3286 0>
new  <	mov rbx, [rbp + 40]>

1171:
old  <>
new  <	mov rax, [rbp]>

1172:
old  < strspn$10:>
new  <	mov rdi, [rbp + 16]>

1173:
old  <	; IntegralToIntegral Â£temporary3287 Â£temporary3283 -> Â£temporary3286>
new  <	mov rbp, [rbp + 8]>

1174:
old  <	mov al, [rsi]>
new  <	jmp rax>

1175:
old  <	and eax, 255>
new  <>

1176:
old  <	cmp al, 0>
new  < strrchr$21:>

1177:
old  <	jge strspn$11>
new  <	; FunctionEnd strrchr>

1178:
old  <	neg al>
new  <>

1179:
old  <	neg eax>
new  <section .text>

1181:
old  < strspn$11:>
new  < strspn:>

1182:
old  <	; Parameter 76 signedint Â£temporary3287>
new  <	; Assign index 0>

1183:
old  <	mov [rbp + 76], eax>
new  <	mov dword [rbp + 40], 0>

1185:
old  < strspn$12:>
new  < strspn$1:>

1186:
old  <	; Call 44 strchr 0>
new  <	; IntegralToIntegral Â£temporary3265 index>

1187:
old  <	mov qword [rbp + 44], strspn$13>
new  <	mov eax, [rbp + 40]>

1188:
old  <	mov [rbp + 52], rbp>
new  <	mov rbx, 4294967295>

1189:
old  <	add rbp, 44>
new  <	and rax, rbx>

1190:
old  <	jmp strchr>
new  <>

1191:
old  <>
new  < strspn$2:>

1192:
old  < strspn$13:>
new  <	; BinaryAdd Â£temporary3267 mainString Â£temporary3265>

1193:
old  <	; PostCall 44>
new  <	mov rsi, [rbp + 24]>

1194:
old  <>
new  <	add rsi, rax>

1195:
old  < strspn$14:>
new  <>

1196:
old  <	; GetReturnValue Â£temporary3288>
new  < strspn$3:>

1197:
old  <>
new  <	; Dereference Â£temporary3264 -> Â£temporary3267 Â£temporary3267 0>

1198:
old  < strspn$15:>
new  <>

1199:
old  <	; NotEqual 17 Â£temporary3288 0>
new  < strspn$4:>

1200:
old  <	cmp rbx, 0>
new  <	; Equal 20 Â£temporary3264 -> Â£temporary3267 0>

1201:
old  <	jne strspn$17>
new  <	cmp byte [rsi], 0>

1202:
old  <>
new  <	je strspn$20>

1203:
old  < strspn$16:>
new  <>

1204:
old  <	; Return index>
new  < strspn$5:>

1205:
old  <	mov ebx, [rbp + 40]>
new  <	; PreCall 44 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1206:
old  <	mov rax, [rbp]>
new  <>

1207:
old  <	mov rdi, [rbp + 16]>
new  < strspn$6:>

1208:
old  <	mov rbp, [rbp + 8]>
new  <	; Parameter 68 pointer charSet>

1209:
old  <	jmp rax>
new  <	mov rax, [rbp + 32]>

1210:
old  <>
new  <	mov [rbp + 68], rax>

1211:
old  < strspn$17:>
new  <>

1212:
old  <	; BinaryAdd index index 1>
new  < strspn$7:>

1213:
old  <	inc dword [rbp + 40]>
new  <	; IntegralToIntegral Â£temporary3271 index>

1214:
old  <>
new  <	mov eax, [rbp + 40]>

1215:
old  < strspn$18:>
new  <	mov rbx, 4294967295>

1216:
old  <	; Goto 1>
new  <	and rax, rbx>

1217:
old  <	jmp strspn$1>
new  <>

1218:
old  <>
new  < strspn$8:>

1219:
old  < strspn$19:>
new  <	; BinaryAdd Â£temporary3273 mainString Â£temporary3271>

1220:
old  <	; Return -1>
new  <	mov rsi, [rbp + 24]>

1221:
old  <	mov ebx, -1>
new  <	add rsi, rax>

1222:
old  <	mov rax, [rbp]>
new  <>

1223:
old  <	mov rdi, [rbp + 16]>
new  < strspn$9:>

1224:
old  <	mov rbp, [rbp + 8]>
new  <	; Dereference Â£temporary3270 -> Â£temporary3273 Â£temporary3273 0>

1225:
old  <	jmp rax>
new  <>

1226:
old  <>
new  < strspn$10:>

1227:
old  < strspn$20:>
new  <	; IntegralToIntegral Â£temporary3274 Â£temporary3270 -> Â£temporary3273>

1228:
old  <	; FunctionEnd strspn>
new  <	mov al, [rsi]>

1229:
old  <>
new  <	and eax, 255>

1230:
old  <section .text>
new  <	cmp al, 0>

1231:
old  <>
new  <	jge strspn$11>

1232:
old  < strcspn:>
new  <	neg al>

1233:
old  <	; Assign index 0>
new  <	neg eax>

1234:
old  <	mov dword [rbp + 40], 0>
new  <>

1235:
old  <>
new  < strspn$11:>

1236:
old  < strcspn$1:>
new  <	; Parameter 76 signedint Â£temporary3274>

1237:
old  <	; IntegralToIntegral Â£temporary3291 index>
new  <	mov [rbp + 76], eax>

1238:
old  <	mov eax, [rbp + 40]>
new  <>

1239:
old  <	mov rbx, 4294967295>
new  < strspn$12:>

1240:
old  <	and rax, rbx>
new  <	; Call 44 strchr 0>

1241:
old  <>
new  <	mov qword [rbp + 44], strspn$13>

1242:
old  < strcspn$2:>
new  <	mov [rbp + 52], rbp>

1243:
old  <	; BinaryAdd Â£temporary3293 mainString Â£temporary3291>
new  <	add rbp, 44>

1244:
old  <	mov rsi, [rbp + 24]>
new  <	jmp strchr>

1245:
old  <	add rsi, rax>
new  <>

1246:
old  <>
new  < strspn$13:>

1247:
old  < strcspn$3:>
new  <	; PostCall 44>

1248:
old  <	; Dereference Â£temporary3290 -> Â£temporary3293 Â£temporary3293 0>
new  <>

1249:
old  <>
new  < strspn$14:>

1250:
old  < strcspn$4:>
new  <	; GetReturnValue Â£temporary3275>

1251:
old  <	; Equal 19 Â£temporary3290 -> Â£temporary3293 0>
new  <>

1252:
old  <	cmp byte [rsi], 0>
new  < strspn$15:>

1253:
old  <	je strcspn$19>
new  <	; NotEqual 18 Â£temporary3275 0>

1254:
old  <>
new  <	cmp rbx, 0>

1255:
old  < strcspn$5:>
new  <	jne strspn$18>

1256:
old  <	; PreCall 44 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1257:
old  <>
new  < strspn$16:>

1258:
old  < strcspn$6:>
new  <	; SetReturnValue>

1259:
old  <	; Parameter 68 pointer charSet>
new  <>

1260:
old  <	mov rax, [rbp + 32]>
new  < strspn$17:>

1261:
old  <	mov [rbp + 68], rax>
new  <	; Return index>

1262:
old  <>
new  <	mov ebx, [rbp + 40]>

1263:
old  < strcspn$7:>
new  <	mov rax, [rbp]>

1264:
old  <	; IntegralToIntegral Â£temporary3297 index>
new  <	mov rdi, [rbp + 16]>

1265:
old  <	mov eax, [rbp + 40]>
new  <	mov rbp, [rbp + 8]>

1266:
old  <	mov rbx, 4294967295>
new  <	jmp rax>

1267:
old  <	and rax, rbx>
new  <>

1268:
old  <>
new  < strspn$18:>

1269:
old  < strcspn$8:>
new  <	; BinaryAdd index index 1>

1270:
old  <	; BinaryAdd Â£temporary3299 mainString Â£temporary3297>
new  <	inc dword [rbp + 40]>

1271:
old  <	mov rsi, [rbp + 24]>
new  <>

1272:
old  <	add rsi, rax>
new  < strspn$19:>

1273:
old  <>
new  <	; Goto 1>

1274:
old  < strcspn$9:>
new  <	jmp strspn$1>

1275:
old  <	; Dereference Â£temporary3296 -> Â£temporary3299 Â£temporary3299 0>
new  <>

1276:
old  <>
new  < strspn$20:>

1277:
old  < strcspn$10:>
new  <	; SetReturnValue>

1278:
old  <	; IntegralToIntegral Â£temporary3300 Â£temporary3296 -> Â£temporary3299>
new  <>

1279:
old  <	mov al, [rsi]>
new  < strspn$21:>

1280:
old  <	and eax, 255>
new  <	; Return -1>

1281:
old  <	cmp al, 0>
new  <	mov ebx, -1>

1282:
old  <	jge strcspn$11>
new  <	mov rax, [rbp]>

1283:
old  <	neg al>
new  <	mov rdi, [rbp + 16]>

1284:
old  <	neg eax>
new  <	mov rbp, [rbp + 8]>

1285:
old  <>
new  <	jmp rax>

1286:
old  < strcspn$11:>
new  <>

1287:
old  <	; Parameter 76 signedint Â£temporary3300>
new  < strspn$22:>

1288:
old  <	mov [rbp + 76], eax>
new  <	; FunctionEnd strspn>

1290:
old  < strcspn$12:>
new  <section .text>

1291:
old  <	; Call 44 strchr 0>
new  <>

1292:
old  <	mov qword [rbp + 44], strcspn$13>
new  < strcspn:>

1293:
old  <	mov [rbp + 52], rbp>
new  <	; Assign index 0>

1294:
old  <	add rbp, 44>
new  <	mov dword [rbp + 40], 0>

1295:
old  <	jmp strchr>
new  <>

1296:
old  <>
new  < strcspn$1:>

1297:
old  < strcspn$13:>
new  <	; IntegralToIntegral Â£temporary3278 index>

1298:
old  <	; PostCall 44>
new  <	mov eax, [rbp + 40]>

1299:
old  <>
new  <	mov rbx, 4294967295>

1300:
old  < strcspn$14:>
new  <	and rax, rbx>

1301:
old  <	; GetReturnValue Â£temporary3301>
new  <>

1302:
old  <>
new  < strcspn$2:>

1303:
old  < strcspn$15:>
new  <	; BinaryAdd Â£temporary3280 mainString Â£temporary3278>

1304:
old  <	; Equal 17 Â£temporary3301 0>
new  <	mov rsi, [rbp + 24]>

1305:
old  <	cmp rbx, 0>
new  <	add rsi, rax>

1306:
old  <	je strcspn$17>
new  <>

1307:
old  <>
new  < strcspn$3:>

1308:
old  < strcspn$16:>
new  <	; Dereference Â£temporary3277 -> Â£temporary3280 Â£temporary3280 0>

1309:
old  <	; Return index>
new  <>

1310:
old  <	mov ebx, [rbp + 40]>
new  < strcspn$4:>

1311:
old  <	mov rax, [rbp]>
new  <	; Equal 20 Â£temporary3277 -> Â£temporary3280 0>

1312:
old  <	mov rdi, [rbp + 16]>
new  <	cmp byte [rsi], 0>

1313:
old  <	mov rbp, [rbp + 8]>
new  <	je strcspn$20>

1314:
old  <	jmp rax>
new  <>

1315:
old  <>
new  < strcspn$5:>

1316:
old  < strcspn$17:>
new  <	; PreCall 44 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1317:
old  <	; BinaryAdd index index 1>
new  <>

1318:
old  <	inc dword [rbp + 40]>
new  < strcspn$6:>

1319:
old  <>
new  <	; Parameter 68 pointer charSet>

1320:
old  < strcspn$18:>
new  <	mov rax, [rbp + 32]>

1321:
old  <	; Goto 1>
new  <	mov [rbp + 68], rax>

1322:
old  <	jmp strcspn$1>
new  <>

1323:
old  <>
new  < strcspn$7:>

1324:
old  < strcspn$19:>
new  <	; IntegralToIntegral Â£temporary3284 index>

1325:
old  <	; Return -1>
new  <	mov eax, [rbp + 40]>

1326:
old  <	mov ebx, -1>
new  <	mov rbx, 4294967295>

1327:
old  <	mov rax, [rbp]>
new  <	and rax, rbx>

1328:
old  <	mov rdi, [rbp + 16]>
new  <>

1329:
old  <	mov rbp, [rbp + 8]>
new  < strcspn$8:>

1330:
old  <	jmp rax>
new  <	; BinaryAdd Â£temporary3286 mainString Â£temporary3284>

1331:
old  <>
new  <	mov rsi, [rbp + 24]>

1332:
old  < strcspn$20:>
new  <	add rsi, rax>

1333:
old  <	; FunctionEnd strcspn>
new  <>

1334:
old  <>
new  < strcspn$9:>

1335:
old  <section .text>
new  <	; Dereference Â£temporary3283 -> Â£temporary3286 Â£temporary3286 0>

1337:
old  < strpbrk:>
new  < strcspn$10:>

1338:
old  <	; Assign index 0>
new  <	; IntegralToIntegral Â£temporary3287 Â£temporary3283 -> Â£temporary3286>

1339:
old  <	mov dword [rbp + 40], 0>
new  <	mov al, [rsi]>

1340:
old  <>
new  <	and eax, 255>

1341:
old  < strpbrk$1:>
new  <	cmp al, 0>

1342:
old  <	; IntegralToIntegral Â£temporary3304 index>
new  <	jge strcspn$11>

1343:
old  <	mov eax, [rbp + 40]>
new  <	neg al>

1344:
old  <	mov rbx, 4294967295>
new  <	neg eax>

1345:
old  <	and rax, rbx>
new  <>

1346:
old  <>
new  < strcspn$11:>

1347:
old  < strpbrk$2:>
new  <	; Parameter 76 signedint Â£temporary3287>

1348:
old  <	; BinaryAdd Â£temporary3306 mainString Â£temporary3304>
new  <	mov [rbp + 76], eax>

1349:
old  <	mov rsi, [rbp + 24]>
new  <>

1350:
old  <	add rsi, rax>
new  < strcspn$12:>

1351:
old  <>
new  <	; Call 44 strchr 0>

1352:
old  < strpbrk$3:>
new  <	mov qword [rbp + 44], strcspn$13>

1353:
old  <	; Dereference Â£temporary3303 -> Â£temporary3306 Â£temporary3306 0>
new  <	mov [rbp + 52], rbp>

1354:
old  <>
new  <	add rbp, 44>

1355:
old  < strpbrk$4:>
new  <	jmp strchr>

1356:
old  <	; Equal 23 Â£temporary3303 -> Â£temporary3306 0>
new  <>

1357:
old  <	cmp byte [rsi], 0>
new  < strcspn$13:>

1358:
old  <	je strpbrk$23>
new  <	; PostCall 44>

1360:
old  < strpbrk$5:>
new  < strcspn$14:>

1361:
old  <	; PreCall 44 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; GetReturnValue Â£temporary3288>

1363:
old  < strpbrk$6:>
new  < strcspn$15:>

1364:
old  <	; Parameter 68 pointer charSet>
new  <	; Equal 18 Â£temporary3288 0>

1365:
old  <	mov rax, [rbp + 32]>
new  <	cmp rbx, 0>

1366:
old  <	mov [rbp + 68], rax>
new  <	je strcspn$18>

1368:
old  < strpbrk$7:>
new  < strcspn$16:>

1369:
old  <	; IntegralToIntegral Â£temporary3310 index>
new  <	; SetReturnValue>

1370:
old  <	mov eax, [rbp + 40]>
new  <>

1371:
old  <	mov rbx, 4294967295>
new  < strcspn$17:>

1372:
old  <	and rax, rbx>
new  <	; Return index>

1373:
old  <>
new  <	mov ebx, [rbp + 40]>

1374:
old  < strpbrk$8:>
new  <	mov rax, [rbp]>

1375:
old  <	; BinaryAdd Â£temporary3312 mainString Â£temporary3310>
new  <	mov rdi, [rbp + 16]>

1376:
old  <	mov rsi, [rbp + 24]>
new  <	mov rbp, [rbp + 8]>

1377:
old  <	add rsi, rax>
new  <	jmp rax>

1379:
old  < strpbrk$9:>
new  < strcspn$18:>

1380:
old  <	; Dereference Â£temporary3309 -> Â£temporary3312 Â£temporary3312 0>
new  <	; BinaryAdd index index 1>

1381:
old  <>
new  <	inc dword [rbp + 40]>

1382:
old  < strpbrk$10:>
new  <>

1383:
old  <	; IntegralToIntegral Â£temporary3313 Â£temporary3309 -> Â£temporary3312>
new  < strcspn$19:>

1384:
old  <	mov al, [rsi]>
new  <	; Goto 1>

1385:
old  <	and eax, 255>
new  <	jmp strcspn$1>

1386:
old  <	cmp al, 0>
new  <>

1387:
old  <	jge strpbrk$11>
new  < strcspn$20:>

1388:
old  <	neg al>
new  <	; SetReturnValue>

1389:
old  <	neg eax>
new  <>

1390:
old  <>
new  < strcspn$21:>

1391:
old  < strpbrk$11:>
new  <	; Return -1>

1392:
old  <	; Parameter 76 signedint Â£temporary3313>
new  <	mov ebx, -1>

1393:
old  <	mov [rbp + 76], eax>
new  <	mov rax, [rbp]>

1394:
old  <>
new  <	mov rdi, [rbp + 16]>

1395:
old  < strpbrk$12:>
new  <	mov rbp, [rbp + 8]>

1396:
old  <	; Call 44 strchr 0>
new  <	jmp rax>

1397:
old  <	mov qword [rbp + 44], strpbrk$13>
new  <>

1398:
old  <	mov [rbp + 52], rbp>
new  < strcspn$22:>

1399:
old  <	add rbp, 44>
new  <	; FunctionEnd strcspn>

1400:
old  <	jmp strchr>
new  <>

1401:
old  <>
new  <section .text>

1402:
old  < strpbrk$13:>
new  <>

1403:
old  <	; PostCall 44>
new  < strpbrk:>

1404:
old  <>
new  <	; Assign index 0>

1405:
old  < strpbrk$14:>
new  <	mov dword [rbp + 40], 0>

1406:
old  <	; GetReturnValue Â£temporary3314>
new  <>

1407:
old  <>
new  < strpbrk$1:>

1408:
old  < strpbrk$15:>
new  <	; IntegralToIntegral Â£temporary3291 index>

1409:
old  <	; Equal 21 Â£temporary3314 0>
new  <	mov eax, [rbp + 40]>

1410:
old  <	cmp rbx, 0>
new  <	mov rbx, 4294967295>

1411:
old  <	je strpbrk$21>
new  <	and rax, rbx>

1413:
old  < strpbrk$16:>
new  < strpbrk$2:>

1414:
old  <	; IntegralToIntegral Â£temporary3317 index>
new  <	; BinaryAdd Â£temporary3293 mainString Â£temporary3291>

1415:
old  <	mov eax, [rbp + 40]>
new  <	mov rsi, [rbp + 24]>

1416:
old  <	mov rbx, 4294967295>
new  <	add rsi, rax>

1417:
old  <	and rax, rbx>
new  <>

1418:
old  <>
new  < strpbrk$3:>

1419:
old  < strpbrk$17:>
new  <	; Dereference Â£temporary3290 -> Â£temporary3293 Â£temporary3293 0>

1420:
old  <	; BinaryAdd Â£temporary3319 mainString Â£temporary3317>
new  <>

1421:
old  <	mov rbx, [rbp + 24]>
new  < strpbrk$4:>

1422:
old  <	add rbx, rax>
new  <	; Equal 24 Â£temporary3290 -> Â£temporary3293 0>

1423:
old  <>
new  <	cmp byte [rsi], 0>

1424:
old  < strpbrk$18:>
new  <	je strpbrk$24>

1425:
old  <	; Dereference Â£temporary3316 -> Â£temporary3319 Â£temporary3319 0>
new  <>

1426:
old  <>
new  < strpbrk$5:>

1427:
old  < strpbrk$19:>
new  <	; PreCall 44 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1428:
old  <	; Address Â£temporary3320 Â£temporary3316 -> Â£temporary3319>
new  <>

1429:
old  <>
new  < strpbrk$6:>

1430:
old  < strpbrk$20:>
new  <	; Parameter 68 pointer charSet>

1431:
old  <	; Return Â£temporary3320>
new  <	mov rax, [rbp + 32]>

1432:
old  <	mov rax, [rbp]>
new  <	mov [rbp + 68], rax>

1433:
old  <	mov rdi, [rbp + 16]>
new  <>

1434:
old  <	mov rbp, [rbp + 8]>
new  < strpbrk$7:>

1435:
old  <	jmp rax>
new  <	; IntegralToIntegral Â£temporary3297 index>

1436:
old  <>
new  <	mov eax, [rbp + 40]>

1437:
old  < strpbrk$21:>
new  <	mov rbx, 4294967295>

1438:
old  <	; BinaryAdd index index 1>
new  <	and rax, rbx>

1439:
old  <	inc dword [rbp + 40]>
new  <>

1440:
old  <>
new  < strpbrk$8:>

1441:
old  < strpbrk$22:>
new  <	; BinaryAdd Â£temporary3299 mainString Â£temporary3297>

1442:
old  <	; Goto 1>
new  <	mov rsi, [rbp + 24]>

1443:
old  <	jmp strpbrk$1>
new  <	add rsi, rax>

1445:
old  < strpbrk$23:>
new  < strpbrk$9:>

1446:
old  <	; Return 0>
new  <	; Dereference Â£temporary3296 -> Â£temporary3299 Â£temporary3299 0>

1447:
old  <	mov rbx, 0>
new  <>

1448:
old  <	mov rax, [rbp]>
new  < strpbrk$10:>

1449:
old  <	mov rdi, [rbp + 16]>
new  <	; IntegralToIntegral Â£temporary3300 Â£temporary3296 -> Â£temporary3299>

1450:
old  <	mov rbp, [rbp + 8]>
new  <	mov al, [rsi]>

1451:
old  <	jmp rax>
new  <	and eax, 255>

1452:
old  <>
new  <	cmp al, 0>

1453:
old  < strpbrk$24:>
new  <	jge strpbrk$11>

1454:
old  <	; FunctionEnd strpbrk>
new  <	neg al>

1455:
old  <>
new  <	neg eax>

1456:
old  <section .text>
new  <>

1457:
old  <>
new  < strpbrk$11:>

1458:
old  < strstr:>
new  <	; Parameter 76 signedint Â£temporary3300>

1459:
old  <	; Assign index 0>
new  <	mov [rbp + 76], eax>

1460:
old  <	mov dword [rbp + 40], 0>
new  <>

1461:
old  <>
new  < strpbrk$12:>

1462:
old  < strstr$1:>
new  <	; Call 44 strchr 0>

1463:
old  <	; IntegralToIntegral Â£temporary3322 index>
new  <	mov qword [rbp + 44], strpbrk$13>

1464:
old  <	mov eax, [rbp + 40]>
new  <	mov [rbp + 52], rbp>

1465:
old  <	mov rbx, 4294967295>
new  <	add rbp, 44>

1466:
old  <	and rax, rbx>
new  <	jmp strchr>

1468:
old  < strstr$2:>
new  < strpbrk$13:>

1469:
old  <	; BinaryAdd Â£temporary3324 mainString Â£temporary3322>
new  <	; PostCall 44>

1470:
old  <	mov rsi, [rbp + 24]>
new  <>

1471:
old  <	add rsi, rax>
new  < strpbrk$14:>

1472:
old  <>
new  <	; GetReturnValue Â£temporary3301>

1473:
old  < strstr$3:>
new  <>

1474:
old  <	; Dereference Â£temporary3321 -> Â£temporary3324 Â£temporary3324 0>
new  < strpbrk$15:>

1475:
old  <>
new  <	; Equal 22 Â£temporary3301 0>

1476:
old  < strstr$4:>
new  <	cmp rbx, 0>

1477:
old  <	; Equal 21 Â£temporary3321 -> Â£temporary3324 0>
new  <	je strpbrk$22>

1478:
old  <	cmp byte [rsi], 0>
new  <>

1479:
old  <	je strstr$21>
new  < strpbrk$16:>

1480:
old  <>
new  <	; IntegralToIntegral Â£temporary3304 index>

1481:
old  < strstr$5:>
new  <	mov eax, [rbp + 40]>

1482:
old  <	; PreCall 44 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov rbx, 4294967295>

1483:
old  <>
new  <	and rax, rbx>

1484:
old  < strstr$6:>
new  <>

1485:
old  <	; IntegralToIntegral Â£temporary3327 index>
new  < strpbrk$17:>

1486:
old  <	mov eax, [rbp + 40]>
new  <	; BinaryAdd Â£temporary3306 mainString Â£temporary3304>

1487:
old  <	mov rbx, 4294967295>
new  <	mov rbx, [rbp + 24]>

1488:
old  <	and rax, rbx>
new  <	add rbx, rax>

1490:
old  < strstr$7:>
new  < strpbrk$18:>

1491:
old  <	; BinaryAdd Â£temporary3328 mainString Â£temporary3327>
new  <	; Dereference Â£temporary3303 -> Â£temporary3306 Â£temporary3306 0>

1492:
old  <	mov rbx, [rbp + 24]>
new  <>

1493:
old  <	add rbx, rax>
new  < strpbrk$19:>

1494:
old  <>
new  <	; Address Â£temporary3307 Â£temporary3303 -> Â£temporary3306>

1495:
old  < strstr$8:>
new  <>

1496:
old  <	; Parameter 68 pointer Â£temporary3328>
new  < strpbrk$20:>

1497:
old  <	mov [rbp + 68], rbx>
new  <	; SetReturnValue>

1499:
old  < strstr$9:>
new  < strpbrk$21:>

1500:
old  <	; Parameter 76 pointer subString>
new  <	; Return Â£temporary3307>

1501:
old  <	mov rax, [rbp + 32]>
new  <	mov rax, [rbp]>

1502:
old  <	mov [rbp + 76], rax>
new  <	mov rdi, [rbp + 16]>

1503:
old  <>
new  <	mov rbp, [rbp + 8]>

1504:
old  < strstr$10:>
new  <	jmp rax>

1505:
old  <	; Call 44 strcmp 0>
new  <>

1506:
old  <	mov qword [rbp + 44], strstr$11>
new  < strpbrk$22:>

1507:
old  <	mov [rbp + 52], rbp>
new  <	; BinaryAdd index index 1>

1508:
old  <	add rbp, 44>
new  <	inc dword [rbp + 40]>

1509:
old  <	jmp strcmp>
new  <>

1510:
old  <>
new  < strpbrk$23:>

1511:
old  < strstr$11:>
new  <	; Goto 1>

1512:
old  <	; PostCall 44>
new  <	jmp strpbrk$1>

1514:
old  < strstr$12:>
new  < strpbrk$24:>

1515:
old  <	; GetReturnValue Â£temporary3330>
new  <	; SetReturnValue>

1517:
old  < strstr$13:>
new  < strpbrk$25:>

1518:
old  <	; NotEqual 19 Â£temporary3330 0>
new  <	; Return 0>

1519:
old  <	cmp ebx, 0>
new  <	mov rbx, 0>

1520:
old  <	jne strstr$19>
new  <	mov rax, [rbp]>

1521:
old  <>
new  <	mov rdi, [rbp + 16]>

1522:
old  < strstr$14:>
new  <	mov rbp, [rbp + 8]>

1523:
old  <	; IntegralToIntegral Â£temporary3333 index>
new  <	jmp rax>

1524:
old  <	mov eax, [rbp + 40]>
new  <>

1525:
old  <	mov rbx, 4294967295>
new  < strpbrk$26:>

1526:
old  <	and rax, rbx>
new  <	; FunctionEnd strpbrk>

1528:
old  < strstr$15:>
new  <section .text>

1529:
old  <	; BinaryAdd Â£temporary3335 mainString Â£temporary3333>
new  <>

1530:
old  <	mov rbx, [rbp + 24]>
new  < strstr:>

1531:
old  <	add rbx, rax>
new  <	; Assign index 0>

1532:
old  <>
new  <	mov dword [rbp + 40], 0>

1533:
old  < strstr$16:>
new  <>

1534:
old  <	; Dereference Â£temporary3332 -> Â£temporary3335 Â£temporary3335 0>
new  < strstr$1:>

1535:
old  <>
new  <	; IntegralToIntegral Â£temporary3309 index>

1536:
old  < strstr$17:>
new  <	mov eax, [rbp + 40]>

1537:
old  <	; Address Â£temporary3336 Â£temporary3332 -> Â£temporary3335>
new  <	mov rbx, 4294967295>

1538:
old  <>
new  <	and rax, rbx>

1539:
old  < strstr$18:>
new  <>

1540:
old  <	; Return Â£temporary3336>
new  < strstr$2:>

1541:
old  <	mov rax, [rbp]>
new  <	; BinaryAdd Â£temporary3311 mainString Â£temporary3309>

1542:
old  <	mov rdi, [rbp + 16]>
new  <	mov rsi, [rbp + 24]>

1543:
old  <	mov rbp, [rbp + 8]>
new  <	add rsi, rax>

1544:
old  <	jmp rax>
new  <>

1545:
old  <>
new  < strstr$3:>

1546:
old  < strstr$19:>
new  <	; Dereference Â£temporary3308 -> Â£temporary3311 Â£temporary3311 0>

1547:
old  <	; BinaryAdd index index 1>
new  <>

1548:
old  <	inc dword [rbp + 40]>
new  < strstr$4:>

1549:
old  <>
new  <	; Equal 22 Â£temporary3308 -> Â£temporary3311 0>

1550:
old  < strstr$20:>
new  <	cmp byte [rsi], 0>

1551:
old  <	; Goto 1>
new  <	je strstr$22>

1552:
old  <	jmp strstr$1>
new  <>

1553:
old  <>
new  < strstr$5:>

1554:
old  < strstr$21:>
new  <	; PreCall 44 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1555:
old  <	; Return 0>
new  <>

1556:
old  <	mov rbx, 0>
new  < strstr$6:>

1557:
old  <	mov rax, [rbp]>
new  <	; IntegralToIntegral Â£temporary3314 index>

1558:
old  <	mov rdi, [rbp + 16]>
new  <	mov eax, [rbp + 40]>

1559:
old  <	mov rbp, [rbp + 8]>
new  <	mov rbx, 4294967295>

1560:
old  <	jmp rax>
new  <	and rax, rbx>

1562:
old  < strstr$22:>
new  < strstr$7:>

1563:
old  <	; FunctionEnd strstr>
new  <	; BinaryAdd Â£temporary3315 mainString Â£temporary3314>

1564:
old  <>
new  <	mov rbx, [rbp + 24]>

1565:
old  <section .text>
new  <	add rbx, rax>

1567:
old  < strlen:>
new  < strstr$8:>

1568:
old  <	; Assign index 0>
new  <	; Parameter 68 pointer Â£temporary3315>

1569:
old  <	mov dword [rbp + 32], 0>
new  <	mov [rbp + 68], rbx>

1571:
old  < strlen$1:>
new  < strstr$9:>

1572:
old  <	; IntegralToIntegral Â£temporary3338 index>
new  <	; Parameter 76 pointer subString>

1573:
old  <	mov eax, [rbp + 32]>
new  <	mov rax, [rbp + 32]>

1574:
old  <	mov rbx, 4294967295>
new  <	mov [rbp + 76], rax>

1575:
old  <	and rax, rbx>
new  <>

1576:
old  <>
new  < strstr$10:>

1577:
old  < strlen$2:>
new  <	; Call 44 strcmp 0>

1578:
old  <	; BinaryAdd Â£temporary3340 string Â£temporary3338>
new  <	mov qword [rbp + 44], strstr$11>

1579:
old  <	mov rsi, [rbp + 24]>
new  <	mov [rbp + 52], rbp>

1580:
old  <	add rsi, rax>
new  <	add rbp, 44>

1581:
old  <>
new  <	jmp strcmp>

1582:
old  < strlen$3:>
new  <>

1583:
old  <	; Dereference Â£temporary3337 -> Â£temporary3340 Â£temporary3340 0>
new  < strstr$11:>

1584:
old  <>
new  <	; PostCall 44>

1585:
old  < strlen$4:>
new  <>

1586:
old  <	; Equal 7 Â£temporary3337 -> Â£temporary3340 0>
new  < strstr$12:>

1587:
old  <	cmp byte [rsi], 0>
new  <	; GetReturnValue Â£temporary3317>

1588:
old  <	je strlen$7>
new  <>

1589:
old  <>
new  < strstr$13:>

1590:
old  < strlen$5:>
new  <	; NotEqual 20 Â£temporary3317 0>

1591:
old  <	; BinaryAdd index index 1>
new  <	cmp ebx, 0>

1592:
old  <	inc dword [rbp + 32]>
new  <	jne strstr$20>

1594:
old  < strlen$6:>
new  < strstr$14:>

1595:
old  <	; Goto 1>
new  <	; IntegralToIntegral Â£temporary3320 index>

1596:
old  <	jmp strlen$1>
new  <	mov eax, [rbp + 40]>

1597:
old  <>
new  <	mov rbx, 4294967295>

1598:
old  < strlen$7:>
new  <	and rax, rbx>

1599:
old  <	; Return index>
new  <>

1600:
old  <	mov ebx, [rbp + 32]>
new  < strstr$15:>

1601:
old  <	mov rax, [rbp]>
new  <	; BinaryAdd Â£temporary3322 mainString Â£temporary3320>

1602:
old  <	mov rdi, [rbp + 16]>
new  <	mov rbx, [rbp + 24]>

1603:
old  <	mov rbp, [rbp + 8]>
new  <	add rbx, rax>

1604:
old  <	jmp rax>
new  <>

1605:
old  <>
new  < strstr$16:>

1606:
old  < strlen$8:>
new  <	; Dereference Â£temporary3319 -> Â£temporary3322 Â£temporary3322 0>

1607:
old  <	; FunctionEnd strlen>
new  <>

1608:
old  <>
new  < strstr$17:>

1609:
old  <section .data>
new  <	; Address Â£temporary3323 Â£temporary3319 -> Â£temporary3322>

1611:
old  <int8$8#:>
new  < strstr$18:>

1612:
old  <	; Initializer Pointer 8>
new  <	; SetReturnValue>

1613:
old  <	dq 8>
new  <>

1614:
old  <>
new  < strstr$19:>

1615:
old  <section .text>
new  <	; Return Â£temporary3323>

1616:
old  <>
new  <	mov rax, [rbp]>

1617:
old  < strerror:>
new  <	mov rdi, [rbp + 16]>

1618:
old  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov rbp, [rbp + 8]>

1619:
old  <>
new  <	jmp rax>

1620:
old  < strerror$1:>
new  <>

1621:
old  <	; Call 28 localeconv 0>
new  < strstr$20:>

1622:
old  <	mov qword [rbp + 28], strerror$2>
new  <	; BinaryAdd index index 1>

1623:
old  <	mov [rbp + 36], rbp>
new  <	inc dword [rbp + 40]>

1624:
old  <	add rbp, 28>
new  <>

1625:
old  <	jmp localeconv>
new  < strstr$21:>

1626:
old  <>
new  <	; Goto 1>

1627:
old  < strerror$2:>
new  <	jmp strstr$1>

1628:
old  <	; PostCall 28>
new  <>

1629:
old  <>
new  < strstr$22:>

1630:
old  < strerror$3:>
new  <	; SetReturnValue>

1631:
old  <	; GetReturnValue Â£temporary3343>
new  <>

1632:
old  <>
new  < strstr$23:>

1633:
old  < strerror$4:>
new  <	; Return 0>

1634:
old  <	; Assign localeConvPtr Â£temporary3343>
new  <	mov rbx, 0>

1635:
old  <	mov [rbp + 28], rbx>
new  <	mov rax, [rbp]>

1636:
old  <>
new  <	mov rdi, [rbp + 16]>

1637:
old  < strerror$5:>
new  <	mov rbp, [rbp + 8]>

1638:
old  <	; Equal 9 localeConvPtr 0>
new  <	jmp rax>

1639:
old  <	cmp qword [rbp + 28], 0>
new  <>

1640:
old  <	je strerror$9>
new  < strstr$24:>

1641:
old  <>
new  <	; FunctionEnd strstr>

1642:
old  < strerror$6:>
new  <>

1643:
old  <	; Dereference Â£temporary3345 -> localeConvPtr localeConvPtr 0>
new  <section .text>

1644:
old  <	mov rsi, [rbp + 28]>
new  <>

1645:
old  <>
new  < strlen:>

1646:
old  < strerror$7:>
new  <	; Assign index 0>

1647:
old  <	; Assign Â£temporary3346 Â£temporary3345 -> localeConvPtr>
new  <	mov dword [rbp + 32], 0>

1648:
old  <	mov rax, [rsi + 56]>
new  <>

1649:
old  <>
new  < strlen$1:>

1650:
old  < strerror$8:>
new  <	; IntegralToIntegral Â£temporary3325 index>

1651:
old  <	; Goto 10>
new  <	mov eax, [rbp + 32]>

1652:
old  <	jmp strerror$10>
new  <	mov rbx, 4294967295>

1653:
old  <>
new  <	and rax, rbx>

1654:
old  < strerror$9:>
new  <>

1655:
old  <	; Assign Â£temporary3346 0>
new  < strlen$2:>

1656:
old  <	mov rax, 0>
new  <	; BinaryAdd Â£temporary3327 string Â£temporary3325>

1657:
old  <>
new  <	mov rsi, [rbp + 24]>

1658:
old  < strerror$10:>
new  <	add rsi, rax>

1659:
old  <	; Assign messageList Â£temporary3346>
new  <>

1660:
old  <	mov [rbp + 36], rax>
new  < strlen$3:>

1661:
old  <>
new  <	; Dereference Â£temporary3324 -> Â£temporary3327 Â£temporary3327 0>

1662:
old  < strerror$11:>
new  <>

1663:
old  <	; Equal 14 messageList 0>
new  < strlen$4:>

1664:
old  <	cmp qword [rbp + 36], 0>
new  <	; Equal 7 Â£temporary3324 -> Â£temporary3327 0>

1665:
old  <	je strerror$14>
new  <	cmp byte [rsi], 0>

1666:
old  <>
new  <	je strlen$7>

1667:
old  < strerror$12:>
new  <>

1668:
old  <	; Assign Â£temporary3348 messageList>
new  < strlen$5:>

1669:
old  <	mov rax, [rbp + 36]>
new  <	; BinaryAdd index index 1>

1670:
old  <>
new  <	inc dword [rbp + 32]>

1671:
old  < strerror$13:>
new  <>

1672:
old  <	; Goto 15>
new  < strlen$6:>

1673:
old  <	jmp strerror$15>
new  <	; Goto 1>

1674:
old  <>
new  <	jmp strlen$1>

1675:
old  < strerror$14:>
new  <>

1676:
old  <	; Assign Â£temporary3348 enMessageList>
new  < strlen$7:>

1677:
old  <	mov rax, enMessageList>
new  <	; SetReturnValue>

1679:
old  < strerror$15:>
new  < strlen$8:>

1680:
old  <	; Assign messageList Â£temporary3348>
new  <	; Return index>

1681:
old  <	mov [rbp + 36], rax>
new  <	mov ebx, [rbp + 32]>

1682:
old  <>
new  <	mov rax, [rbp]>

1683:
old  < strerror$16:>
new  <	mov rdi, [rbp + 16]>

1684:
old  <	; IntegralToIntegral Â£temporary3350 errno>
new  <	mov rbp, [rbp + 8]>

1685:
old  <	mov eax, [rbp + 24]>
new  <	jmp rax>

1686:
old  <	mov rbx, 4294967295>
new  <>

1687:
old  <	and rax, rbx>
new  < strlen$9:>

1688:
old  <>
new  <	; FunctionEnd strlen>

1689:
old  < strerror$17:>
new  <>

1690:
old  <	; UnsignedMultiply Â£temporary3351 Â£temporary3350 8>
new  <section .data>

1691:
old  <	xor rdx, rdx>
new  <>

1692:
old  <	mul qword [int8$8#]>
new  <int8$8#:>

1693:
old  <>
new  <	; Initializer Pointer 8>

1694:
old  < strerror$18:>
new  <	dq 8>

1695:
old  <	; BinaryAdd Â£temporary3352 messageList Â£temporary3351>
new  <>

1696:
old  <	mov rsi, [rbp + 36]>
new  <section .text>

1697:
old  <	add rsi, rax>
new  <>

1698:
old  <>
new  < strerror:>

1699:
old  < strerror$19:>
new  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1700:
old  <	; Dereference Â£temporary3349 -> Â£temporary3352 Â£temporary3352 0>
new  <>

1701:
old  <>
new  < strerror$1:>

1702:
old  < strerror$20:>
new  <	; Call 28 localeconv 0>

1703:
old  <	; Return Â£temporary3349 -> Â£temporary3352>
new  <	mov qword [rbp + 28], strerror$2>

1704:
old  <	mov rbx, [rsi]>
new  <	mov [rbp + 36], rbp>

1705:
old  <	mov rax, [rbp]>
new  <	add rbp, 28>

1706:
old  <	mov rdi, [rbp + 16]>
new  <	jmp localeconv>

1707:
old  <	mov rbp, [rbp + 8]>
new  <>

1708:
old  <	jmp rax>
new  < strerror$2:>

1709:
old  <>
new  <	; PostCall 28>

1710:
old  < strerror$21:>
new  <>

1711:
old  <	; FunctionEnd strerror>
new  < strerror$3:>

1712:
old  <>
new  <	; GetReturnValue Â£temporary3330>

1713:
old  <section .data>
new  <>

1714:
old  <>
new  < strerror$4:>

1715:
old  <token:>
new  <	; Assign localeConvPtr Â£temporary3330>

1716:
old  <	; Initializer Pointer 0>
new  <	mov [rbp + 28], rbx>

1717:
old  <	dq 0>
new  <>

1718:
old  <>
new  < strerror$5:>

1719:
old  <section .text>
new  <	; Equal 9 localeConvPtr 0>

1720:
old  <>
new  <	cmp qword [rbp + 28], 0>

1721:
old  < strtok:>
new  <	je strerror$9>

1722:
old  <	; Equal 39 string 0>
new  <>

1723:
old  <	cmp qword [rbp + 24], 0>
new  < strerror$6:>

1724:
old  <	je strtok$39>
new  <	; Dereference Â£temporary3332 -> localeConvPtr localeConvPtr 0>

1725:
old  <>
new  <	mov rsi, [rbp + 28]>

1726:
old  < strtok$1:>
new  <>

1727:
old  <	; Dereference Â£temporary3354 -> string string 0>
new  < strerror$7:>

1728:
old  <	mov rsi, [rbp + 24]>
new  <	; Assign Â£temporary3333 Â£temporary3332 -> localeConvPtr>

1729:
old  <>
new  <	mov rax, [rsi + 56]>

1730:
old  < strtok$2:>
new  <>

1731:
old  <	; NotEqual 4 Â£temporary3354 -> string 0>
new  < strerror$8:>

1732:
old  <	cmp byte [rsi], 0>
new  <	; Goto 10>

1733:
old  <	jne strtok$4>
new  <	jmp strerror$10>

1735:
old  < strtok$3:>
new  < strerror$9:>

1736:
old  <	; Return 0>
new  <	; Assign Â£temporary3333 0>

1737:
old  <	mov rbx, 0>
new  <	mov rax, 0>

1738:
old  <	mov rax, [rbp]>
new  <>

1739:
old  <	mov rdi, [rbp + 16]>
new  < strerror$10:>

1740:
old  <	mov rbp, [rbp + 8]>
new  <	; Assign messageList Â£temporary3333>

1741:
old  <	jmp rax>
new  <	mov [rbp + 36], rax>

1743:
old  < strtok$4:>
new  < strerror$11:>

1744:
old  <	; Assign index 0>
new  <	; Equal 14 messageList 0>

1745:
old  <	mov dword [rbp + 40], 0>
new  <	cmp qword [rbp + 36], 0>

1746:
old  <>
new  <	je strerror$14>

1747:
old  < strtok$5:>
new  <>

1748:
old  <	; IntegralToIntegral Â£temporary3357 index>
new  < strerror$12:>

1749:
old  <	mov eax, [rbp + 40]>
new  <	; Assign Â£temporary3335 messageList>

1750:
old  <	mov rbx, 4294967295>
new  <	mov rax, [rbp + 36]>

1751:
old  <	and rax, rbx>
new  <>

1752:
old  <>
new  < strerror$13:>

1753:
old  < strtok$6:>
new  <	; Goto 15>

1754:
old  <	; BinaryAdd Â£temporary3359 string Â£temporary3357>
new  <	jmp strerror$15>

1755:
old  <	mov rsi, [rbp + 24]>
new  <>

1756:
old  <	add rsi, rax>
new  < strerror$14:>

1757:
old  <>
new  <	; Assign Â£temporary3335 enMessageList>

1758:
old  < strtok$7:>
new  <	mov rax, enMessageList>

1759:
old  <	; Dereference Â£temporary3356 -> Â£temporary3359 Â£temporary3359 0>
new  <>

1760:
old  <>
new  < strerror$15:>

1761:
old  < strtok$8:>
new  <	; Assign messageList Â£temporary3335>

1762:
old  <	; Equal 33 Â£temporary3356 -> Â£temporary3359 0>
new  <	mov [rbp + 36], rax>

1763:
old  <	cmp byte [rsi], 0>
new  <>

1764:
old  <	je strtok$33>
new  < strerror$16:>

1765:
old  <>
new  <	; IntegralToIntegral Â£temporary3337 errno>

1766:
old  < strtok$9:>
new  <	mov eax, [rbp + 24]>

1767:
old  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov rbx, 4294967295>

1768:
old  <>
new  <	and rax, rbx>

1769:
old  < strtok$10:>
new  <>

1770:
old  <	; Parameter 76 pointer charSet>
new  < strerror$17:>

1771:
old  <	mov rax, [rbp + 32]>
new  <	; UnsignedMultiply Â£temporary3338 Â£temporary3337 8>

1772:
old  <	mov [rbp + 76], rax>
new  <	xor rdx, rdx>

1773:
old  <>
new  <	mul qword [int8$8#]>

1774:
old  < strtok$11:>
new  <>

1775:
old  <	; IntegralToIntegral Â£temporary3363 index>
new  < strerror$18:>

1776:
old  <	mov eax, [rbp + 40]>
new  <	; BinaryAdd Â£temporary3339 messageList Â£temporary3338>

1777:
old  <	mov rbx, 4294967295>
new  <	mov rsi, [rbp + 36]>

1778:
old  <	and rax, rbx>
new  <	add rsi, rax>

1780:
old  < strtok$12:>
new  < strerror$19:>

1781:
old  <	; BinaryAdd Â£temporary3365 string Â£temporary3363>
new  <	; Dereference Â£temporary3336 -> Â£temporary3339 Â£temporary3339 0>

1782:
old  <	mov rsi, [rbp + 24]>
new  <>

1783:
old  <	add rsi, rax>
new  < strerror$20:>

1784:
old  <>
new  <	; SetReturnValue>

1785:
old  < strtok$13:>
new  <>

1786:
old  <	; Dereference Â£temporary3362 -> Â£temporary3365 Â£temporary3365 0>
new  < strerror$21:>

1787:
old  <>
new  <	; Return Â£temporary3336 -> Â£temporary3339>

1788:
old  < strtok$14:>
new  <	mov rbx, [rsi]>

1789:
old  <	; IntegralToIntegral Â£temporary3366 Â£temporary3362 -> Â£temporary3365>
new  <	mov rax, [rbp]>

1790:
old  <	mov al, [rsi]>
new  <	mov rdi, [rbp + 16]>

1791:
old  <	and eax, 255>
new  <	mov rbp, [rbp + 8]>

1792:
old  <	cmp al, 0>
new  <	jmp rax>

1793:
old  <	jge strtok$15>
new  <>

1794:
old  <	neg al>
new  < strerror$22:>

1795:
old  <	neg eax>
new  <	; FunctionEnd strerror>

1797:
old  < strtok$15:>
new  <section .data>

1798:
old  <	; Parameter 84 signedint Â£temporary3366>
new  <>

1799:
old  <	mov [rbp + 84], eax>
new  <token:>

1800:
old  <>
new  <	; Initializer Pointer 0>

1801:
old  < strtok$16:>
new  <	dq 0>

1802:
old  <	; Call 52 strchr 0>
new  <>

1803:
old  <	mov qword [rbp + 52], strtok$17>
new  <section .text>

1804:
old  <	mov [rbp + 60], rbp>
new  <>

1805:
old  <	add rbp, 52>
new  < strtok:>

1806:
old  <	jmp strchr>
new  <	; Equal 42 string 0>

1807:
old  <>
new  <	cmp qword [rbp + 24], 0>

1808:
old  < strtok$17:>
new  <	je strtok$42>

1809:
old  <	; PostCall 52>
new  <>

1810:
old  <>
new  < strtok$1:>

1811:
old  < strtok$18:>
new  <	; Dereference Â£temporary3341 -> string string 0>

1812:
old  <	; GetReturnValue Â£temporary3367>
new  <	mov rsi, [rbp + 24]>

1814:
old  < strtok$19:>
new  < strtok$2:>

1815:
old  <	; Equal 31 Â£temporary3367 0>
new  <	; NotEqual 5 Â£temporary3341 -> string 0>

1816:
old  <	cmp rbx, 0>
new  <	cmp byte [rsi], 0>

1817:
old  <	je strtok$31>
new  <	jne strtok$5>

1819:
old  < strtok$20:>
new  < strtok$3:>

1820:
old  <	; IntegralToIntegral Â£temporary3370 index>
new  <	; SetReturnValue>

1821:
old  <	mov eax, [rbp + 40]>
new  <>

1822:
old  <	mov rbx, 4294967295>
new  < strtok$4:>

1823:
old  <	and rax, rbx>
new  <	; Return 0>

1824:
old  <>
new  <	mov rbx, 0>

1825:
old  < strtok$21:>
new  <	mov rax, [rbp]>

1826:
old  <	; BinaryAdd Â£temporary3372 string Â£temporary3370>
new  <	mov rdi, [rbp + 16]>

1827:
old  <	mov rsi, [rbp + 24]>
new  <	mov rbp, [rbp + 8]>

1828:
old  <	add rsi, rax>
new  <	jmp rax>

1830:
old  < strtok$22:>
new  < strtok$5:>

1831:
old  <	; Dereference Â£temporary3369 -> Â£temporary3372 Â£temporary3372 0>
new  <	; Assign index 0>

1832:
old  <>
new  <	mov dword [rbp + 40], 0>

1833:
old  < strtok$23:>
new  <>

1834:
old  <	; Assign Â£temporary3369 -> Â£temporary3372 0>
new  < strtok$6:>

1835:
old  <	mov byte [rsi], 0>
new  <	; IntegralToIntegral Â£temporary3344 index>

1836:
old  <>
new  <	mov eax, [rbp + 40]>

1837:
old  < strtok$24:>
new  <	mov rbx, 4294967295>

1838:
old  <	; BinaryAdd Â£temporary3373 index 1>
new  <	and rax, rbx>

1839:
old  <	mov eax, [rbp + 40]>
new  <>

1840:
old  <	inc eax>
new  < strtok$7:>

1841:
old  <>
new  <	; BinaryAdd Â£temporary3346 string Â£temporary3344>

1842:
old  < strtok$25:>
new  <	mov rsi, [rbp + 24]>

1843:
old  <	; IntegralToIntegral Â£temporary3375 Â£temporary3373>
new  <	add rsi, rax>

1844:
old  <	mov rbx, 4294967295>
new  <>

1845:
old  <	and rax, rbx>
new  < strtok$8:>

1846:
old  <>
new  <	; Dereference Â£temporary3343 -> Â£temporary3346 Â£temporary3346 0>

1847:
old  < strtok$26:>
new  <>

1848:
old  <	; BinaryAdd Â£temporary3377 string Â£temporary3375>
new  < strtok$9:>

1849:
old  <	mov rsi, [rbp + 24]>
new  <	; Equal 35 Â£temporary3343 -> Â£temporary3346 0>

1850:
old  <	add rsi, rax>
new  <	cmp byte [rsi], 0>

1851:
old  <>
new  <	je strtok$35>

1852:
old  < strtok$27:>
new  <>

1853:
old  <	; Dereference Â£temporary3374 -> Â£temporary3377 Â£temporary3377 0>
new  < strtok$10:>

1854:
old  <>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1855:
old  < strtok$28:>
new  <>

1856:
old  <	; Address Â£temporary3378 Â£temporary3374 -> Â£temporary3377>
new  < strtok$11:>

1857:
old  <>
new  <	; Parameter 76 pointer charSet>

1858:
old  < strtok$29:>
new  <	mov rax, [rbp + 32]>

1859:
old  <	; Assign token Â£temporary3378>
new  <	mov [rbp + 76], rax>

1860:
old  <	mov [token], rsi>
new  <>

1861:
old  <>
new  < strtok$12:>

1862:
old  < strtok$30:>
new  <	; IntegralToIntegral Â£temporary3350 index>

1863:
old  <	; Return string>
new  <	mov eax, [rbp + 40]>

1864:
old  <	mov rbx, [rbp + 24]>
new  <	mov rbx, 4294967295>

1865:
old  <	mov rax, [rbp]>
new  <	and rax, rbx>

1866:
old  <	mov rdi, [rbp + 16]>
new  <>

1867:
old  <	mov rbp, [rbp + 8]>
new  < strtok$13:>

1868:
old  <	jmp rax>
new  <	; BinaryAdd Â£temporary3352 string Â£temporary3350>

1869:
old  <>
new  <	mov rsi, [rbp + 24]>

1870:
old  < strtok$31:>
new  <	add rsi, rax>

1871:
old  <	; BinaryAdd index index 1>
new  <>

1872:
old  <	inc dword [rbp + 40]>
new  < strtok$14:>

1873:
old  <>
new  <	; Dereference Â£temporary3349 -> Â£temporary3352 Â£temporary3352 0>

1874:
old  < strtok$32:>
new  <>

1875:
old  <	; Goto 5>
new  < strtok$15:>

1876:
old  <	jmp strtok$5>
new  <	; IntegralToIntegral Â£temporary3353 Â£temporary3349 -> Â£temporary3352>

1877:
old  <>
new  <	mov al, [rsi]>

1878:
old  < strtok$33:>
new  <	and eax, 255>

1879:
old  <	; IntegralToIntegral Â£temporary3380 index>
new  <	cmp al, 0>

1880:
old  <	mov eax, [rbp + 40]>
new  <	jge strtok$16>

1881:
old  <	mov rbx, 4294967295>
new  <	neg al>

1882:
old  <	and rax, rbx>
new  <	neg eax>

1884:
old  < strtok$34:>
new  < strtok$16:>

1885:
old  <	; BinaryAdd Â£temporary3382 string Â£temporary3380>
new  <	; Parameter 84 signedint Â£temporary3353>

1886:
old  <	mov rsi, [rbp + 24]>
new  <	mov [rbp + 84], eax>

1887:
old  <	add rsi, rax>
new  <>

1888:
old  <>
new  < strtok$17:>

1889:
old  < strtok$35:>
new  <	; Call 52 strchr 0>

1890:
old  <	; Dereference Â£temporary3379 -> Â£temporary3382 Â£temporary3382 0>
new  <	mov qword [rbp + 52], strtok$18>

1891:
old  <>
new  <	mov [rbp + 60], rbp>

1892:
old  < strtok$36:>
new  <	add rbp, 52>

1893:
old  <	; Address Â£temporary3383 Â£temporary3379 -> Â£temporary3382>
new  <	jmp strchr>

1895:
old  < strtok$37:>
new  < strtok$18:>

1896:
old  <	; Assign token Â£temporary3383>
new  <	; PostCall 52>

1897:
old  <	mov [token], rsi>
new  <>

1898:
old  <>
new  < strtok$19:>

1899:
old  < strtok$38:>
new  <	; GetReturnValue Â£temporary3354>

1900:
old  <	; Return string>
new  <>

1901:
old  <	mov rbx, [rbp + 24]>
new  < strtok$20:>

1902:
old  <	mov rax, [rbp]>
new  <	; Equal 33 Â£temporary3354 0>

1903:
old  <	mov rdi, [rbp + 16]>
new  <	cmp rbx, 0>

1904:
old  <	mov rbp, [rbp + 8]>
new  <	je strtok$33>

1905:
old  <	jmp rax>
new  <>

1906:
old  <>
new  < strtok$21:>

1907:
old  < strtok$39:>
new  <	; IntegralToIntegral Â£temporary3357 index>

1908:
old  <	; NotEqual 41 token 0>
new  <	mov eax, [rbp + 40]>

1909:
old  <	cmp qword [token], 0>
new  <	mov rbx, 4294967295>

1910:
old  <	jne strtok$41>
new  <	and rax, rbx>

1912:
old  < strtok$40:>
new  < strtok$22:>

1913:
old  <	; Return 0>
new  <	; BinaryAdd Â£temporary3359 string Â£temporary3357>

1914:
old  <	mov rbx, 0>
new  <	mov rsi, [rbp + 24]>

1915:
old  <	mov rax, [rbp]>
new  <	add rsi, rax>

1916:
old  <	mov rdi, [rbp + 16]>
new  <>

1917:
old  <	mov rbp, [rbp + 8]>
new  < strtok$23:>

1918:
old  <	jmp rax>
new  <	; Dereference Â£temporary3356 -> Â£temporary3359 Â£temporary3359 0>

1920:
old  < strtok$41:>
new  < strtok$24:>

1921:
old  <	; Dereference Â£temporary3385 -> token token 0>
new  <	; Assign Â£temporary3356 -> Â£temporary3359 0>

1922:
old  <	mov rsi, [token]>
new  <	mov byte [rsi], 0>

1924:
old  < strtok$42:>
new  < strtok$25:>

1925:
old  <	; NotEqual 44 Â£temporary3385 -> token 0>
new  <	; BinaryAdd Â£temporary3360 index 1>

1926:
old  <	cmp byte [rsi], 0>
new  <	mov eax, [rbp + 40]>

1927:
old  <	jne strtok$44>
new  <	inc eax>

1929:
old  < strtok$43:>
new  < strtok$26:>

1930:
old  <	; Return 0>
new  <	; IntegralToIntegral Â£temporary3362 Â£temporary3360>

1931:
old  <	mov rbx, 0>
new  <	mov rbx, 4294967295>

1932:
old  <	mov rax, [rbp]>
new  <	and rax, rbx>

1933:
old  <	mov rdi, [rbp + 16]>
new  <>

1934:
old  <	mov rbp, [rbp + 8]>
new  < strtok$27:>

1935:
old  <	jmp rax>
new  <	; BinaryAdd Â£temporary3364 string Â£temporary3362>

1936:
old  <>
new  <	mov rsi, [rbp + 24]>

1937:
old  < strtok$44:>
new  <	add rsi, rax>

1938:
old  <	; Assign index 0>
new  <>

1939:
old  <	mov dword [rbp + 40], 0>
new  < strtok$28:>

1940:
old  <>
new  <	; Dereference Â£temporary3361 -> Â£temporary3364 Â£temporary3364 0>

1941:
old  < strtok$45:>
new  <>

1942:
old  <	; IntegralToIntegral Â£temporary3388 index>
new  < strtok$29:>

1943:
old  <	mov eax, [rbp + 40]>
new  <	; Address Â£temporary3365 Â£temporary3361 -> Â£temporary3364>

1944:
old  <	mov rbx, 4294967295>
new  <>

1945:
old  <	and rax, rbx>
new  < strtok$30:>

1946:
old  <>
new  <	; Assign token Â£temporary3365>

1947:
old  < strtok$46:>
new  <	mov [token], rsi>

1948:
old  <	; BinaryAdd Â£temporary3390 token Â£temporary3388>
new  <>

1949:
old  <	mov rsi, [token]>
new  < strtok$31:>

1950:
old  <	add rsi, rax>
new  <	; SetReturnValue>

1952:
old  < strtok$47:>
new  < strtok$32:>

1953:
old  <	; Dereference Â£temporary3387 -> Â£temporary3390 Â£temporary3390 0>
new  <	; Return string>

1954:
old  <>
new  <	mov rbx, [rbp + 24]>

1955:
old  < strtok$48:>
new  <	mov rax, [rbp]>

1956:
old  <	; Equal 74 Â£temporary3387 -> Â£temporary3390 0>
new  <	mov rdi, [rbp + 16]>

1957:
old  <	cmp byte [rsi], 0>
new  <	mov rbp, [rbp + 8]>

1958:
old  <	je strtok$74>
new  <	jmp rax>

1960:
old  < strtok$49:>
new  < strtok$33:>

1961:
old  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; BinaryAdd index index 1>

1962:
old  <>
new  <	inc dword [rbp + 40]>

1963:
old  < strtok$50:>
new  <>

1964:
old  <	; Parameter 76 pointer charSet>
new  < strtok$34:>

1965:
old  <	mov rax, [rbp + 32]>
new  <	; Goto 6>

1966:
old  <	mov [rbp + 76], rax>
new  <	jmp strtok$6>

1968:
old  < strtok$51:>
new  < strtok$35:>

1969:
old  <	; IntegralToIntegral Â£temporary3394 index>
new  <	; IntegralToIntegral Â£temporary3367 index>

1974:
old  < strtok$52:>
new  < strtok$36:>

1975:
old  <	; BinaryAdd Â£temporary3396 token Â£temporary3394>
new  <	; BinaryAdd Â£temporary3369 string Â£temporary3367>

1976:
old  <	mov rsi, [token]>
new  <	mov rsi, [rbp + 24]>

1979:
old  < strtok$53:>
new  < strtok$37:>

1980:
old  <	; Dereference Â£temporary3393 -> Â£temporary3396 Â£temporary3396 0>
new  <	; Dereference Â£temporary3366 -> Â£temporary3369 Â£temporary3369 0>

1982:
old  < strtok$54:>
new  < strtok$38:>

1983:
old  <	; IntegralToIntegral Â£temporary3397 Â£temporary3393 -> Â£temporary3396>
new  <	; Address Â£temporary3370 Â£temporary3366 -> Â£temporary3369>

1984:
old  <	mov al, [rsi]>
new  <>

1985:
old  <	and eax, 255>
new  < strtok$39:>

1986:
old  <	cmp al, 0>
new  <	; Assign token Â£temporary3370>

1987:
old  <	jge strtok$55>
new  <	mov [token], rsi>

1988:
old  <	neg al>
new  <>

1989:
old  <	neg eax>
new  < strtok$40:>

1990:
old  <>
new  <	; SetReturnValue>

1991:
old  < strtok$55:>
new  <>

1992:
old  <	; Parameter 84 signedint Â£temporary3397>
new  < strtok$41:>

1993:
old  <	mov [rbp + 84], eax>
new  <	; Return string>

1994:
old  <>
new  <	mov rbx, [rbp + 24]>

1995:
old  < strtok$56:>
new  <	mov rax, [rbp]>

1996:
old  <	; Call 52 strchr 0>
new  <	mov rdi, [rbp + 16]>

1997:
old  <	mov qword [rbp + 52], strtok$57>
new  <	mov rbp, [rbp + 8]>

1998:
old  <	mov [rbp + 60], rbp>
new  <	jmp rax>

1999:
old  <	add rbp, 52>
new  <>

2000:
old  <	jmp strchr>
new  < strtok$42:>

2001:
old  <>
new  <	; NotEqual 45 token 0>

2002:
old  < strtok$57:>
new  <	cmp qword [token], 0>

2003:
old  <	; PostCall 52>
new  <	jne strtok$45>

2005:
old  < strtok$58:>
new  < strtok$43:>

2006:
old  <	; GetReturnValue Â£temporary3398>
new  <	; SetReturnValue>

2008:
old  < strtok$59:>
new  < strtok$44:>

2009:
old  <	; Equal 72 Â£temporary3398 0>
new  <	; Return 0>

2010:
old  <	cmp rbx, 0>
new  <	mov rbx, 0>

2011:
old  <	je strtok$72>
new  <	mov rax, [rbp]>

2012:
old  <>
new  <	mov rdi, [rbp + 16]>

2013:
old  < strtok$60:>
new  <	mov rbp, [rbp + 8]>

2014:
old  <	; Assign tokenStart2 token>
new  <	jmp rax>

2015:
old  <	mov rax, [token]>
new  <>

2016:
old  <	mov [rbp + 52], rax>
new  < strtok$45:>

2017:
old  <>
new  <	; Dereference Â£temporary3372 -> token token 0>

2018:
old  < strtok$61:>
new  <	mov rsi, [token]>

2019:
old  <	; IntegralToIntegral Â£temporary3401 index>
new  <>

2020:
old  <	mov eax, [rbp + 40]>
new  < strtok$46:>

2021:
old  <	mov rbx, 4294967295>
new  <	; NotEqual 49 Â£temporary3372 -> token 0>

2022:
old  <	and rax, rbx>
new  <	cmp byte [rsi], 0>

2023:
old  <>
new  <	jne strtok$49>

2024:
old  < strtok$62:>
new  <>

2025:
old  <	; BinaryAdd Â£temporary3403 token Â£temporary3401>
new  < strtok$47:>

2026:
old  <	mov rsi, [token]>
new  <	; SetReturnValue>

2027:
old  <	add rsi, rax>
new  <>

2028:
old  <>
new  < strtok$48:>

2029:
old  < strtok$63:>
new  <	; Return 0>

2030:
old  <	; Dereference Â£temporary3400 -> Â£temporary3403 Â£temporary3403 0>
new  <	mov rbx, 0>

2031:
old  <>
new  <	mov rax, [rbp]>

2032:
old  < strtok$64:>
new  <	mov rdi, [rbp + 16]>

2033:
old  <	; Assign Â£temporary3400 -> Â£temporary3403 0>
new  <	mov rbp, [rbp + 8]>

2034:
old  <	mov byte [rsi], 0>
new  <	jmp rax>

2036:
old  < strtok$65:>
new  < strtok$49:>

2037:
old  <	; BinaryAdd Â£temporary3404 index 1>
new  <	; Assign index 0>

2038:
old  <	mov eax, [rbp + 40]>
new  <	mov dword [rbp + 40], 0>

2039:
old  <	inc eax>
new  <>

2040:
old  <>
new  < strtok$50:>

2041:
old  < strtok$66:>
new  <	; IntegralToIntegral Â£temporary3375 index>

2042:
old  <	; IntegralToIntegral Â£temporary3406 Â£temporary3404>
new  <	mov eax, [rbp + 40]>

2046:
old  < strtok$67:>
new  < strtok$51:>

2047:
old  <	; BinaryAdd Â£temporary3408 token Â£temporary3406>
new  <	; BinaryAdd Â£temporary3377 token Â£temporary3375>

2051:
old  < strtok$68:>
new  < strtok$52:>

2052:
old  <	; Dereference Â£temporary3405 -> Â£temporary3408 Â£temporary3408 0>
new  <	; Dereference Â£temporary3374 -> Â£temporary3377 Â£temporary3377 0>

2054:
old  < strtok$69:>
new  < strtok$53:>

2055:
old  <	; Address Â£temporary3409 Â£temporary3405 -> Â£temporary3408>
new  <	; Equal 80 Â£temporary3374 -> Â£temporary3377 0>

2056:
old  <>
new  <	cmp byte [rsi], 0>

2057:
old  < strtok$70:>
new  <	je strtok$80>

2058:
old  <	; Assign token Â£temporary3409>
new  <>

2059:
old  <	mov [token], rsi>
new  < strtok$54:>

2060:
old  <>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2061:
old  < strtok$71:>
new  <>

2062:
old  <	; Return tokenStart2>
new  < strtok$55:>

2063:
old  <	mov rbx, [rbp + 52]>
new  <	; Parameter 76 pointer charSet>

2064:
old  <	mov rax, [rbp]>
new  <	mov rax, [rbp + 32]>

2065:
old  <	mov rdi, [rbp + 16]>
new  <	mov [rbp + 76], rax>

2066:
old  <	mov rbp, [rbp + 8]>
new  <>

2067:
old  <	jmp rax>
new  < strtok$56:>

2068:
old  <>
new  <	; IntegralToIntegral Â£temporary3381 index>

2069:
old  < strtok$72:>
new  <	mov eax, [rbp + 40]>

2070:
old  <	; BinaryAdd index index 1>
new  <	mov rbx, 4294967295>

2071:
old  <	inc dword [rbp + 40]>
new  <	and rax, rbx>

2073:
old  < strtok$73:>
new  < strtok$57:>

2074:
old  <	; Goto 45>
new  <	; BinaryAdd Â£temporary3383 token Â£temporary3381>

2075:
old  <	jmp strtok$45>
new  <	mov rsi, [token]>

2076:
old  <>
new  <	add rsi, rax>

2077:
old  < strtok$74:>
new  <>

2078:
old  <	; Assign tokenStart token>
new  < strtok$58:>

2079:
old  <	mov rax, [token]>
new  <	; Dereference Â£temporary3380 -> Â£temporary3383 Â£temporary3383 0>

2080:
old  <	mov [rbp + 44], rax>
new  <>

2081:
old  <>
new  < strtok$59:>

2082:
old  < strtok$75:>
new  <	; IntegralToIntegral Â£temporary3384 Â£temporary3380 -> Â£temporary3383>

2083:
old  <	; IntegralToIntegral Â£temporary3411 index>
new  <	mov al, [rsi]>

2084:
old  <	mov eax, [rbp + 40]>
new  <	and eax, 255>

2085:
old  <	mov rbx, 4294967295>
new  <	cmp al, 0>

2086:
old  <	and rax, rbx>
new  <	jge strtok$60>

2087:
old  <>
new  <	neg al>

2088:
old  < strtok$76:>
new  <	neg eax>

2089:
old  <	; BinaryAdd Â£temporary3413 token Â£temporary3411>
new  <>

2090:
old  <	mov rsi, [token]>
new  < strtok$60:>

2091:
old  <	add rsi, rax>
new  <	; Parameter 84 signedint Â£temporary3384>

2092:
old  <>
new  <	mov [rbp + 84], eax>

2093:
old  < strtok$77:>
new  <>

2094:
old  <	; Dereference Â£temporary3410 -> Â£temporary3413 Â£temporary3413 0>
new  < strtok$61:>

2095:
old  <>
new  <	; Call 52 strchr 0>

2096:
old  < strtok$78:>
new  <	mov qword [rbp + 52], strtok$62>

2097:
old  <	; Address Â£temporary3414 Â£temporary3410 -> Â£temporary3413>
new  <	mov [rbp + 60], rbp>

2098:
old  <>
new  <	add rbp, 52>

2099:
old  < strtok$79:>
new  <	jmp strchr>

2100:
old  <	; Assign token Â£temporary3414>
new  <>

2101:
old  <	mov [token], rsi>
new  < strtok$62:>

2102:
old  <>
new  <	; PostCall 52>

2103:
old  < strtok$80:>
new  <>

2104:
old  <	; Return tokenStart>
new  < strtok$63:>

2105:
old  <	mov rbx, [rbp + 44]>
new  <	; GetReturnValue Â£temporary3385>

2106:
old  <	mov rax, [rbp]>
new  <>

2107:
old  <	mov rdi, [rbp + 16]>
new  < strtok$64:>

2108:
old  <	mov rbp, [rbp + 8]>
new  <	; Equal 78 Â£temporary3385 0>

2109:
old  <	jmp rax>
new  <	cmp rbx, 0>

2110:
old  <>
new  <	je strtok$78>

2111:
old  < strtok$81:>
new  <>

2112:
old  <	; FunctionEnd strtok>
new  < strtok$65:>

2113:
old  <>
new  <	; Assign tokenStart2 token>

2114:
old  <section .text>
new  <	mov rax, [token]>

2115:
old  <>
new  <	mov [rbp + 52], rax>

2116:
old  < memcpy:>
new  <>

2117:
old  <	; IntegralToIntegral Â£temporary3415 target>
new  < strtok$66:>

2118:
old  <	mov rax, [rbp + 24]>
new  <	; IntegralToIntegral Â£temporary3388 index>

2119:
old  <>
new  <	mov eax, [rbp + 40]>

2120:
old  < memcpy$1:>
new  <	mov rbx, 4294967295>

2121:
old  <	; Assign charTarget Â£temporary3415>
new  <	and rax, rbx>

2122:
old  <	mov [rbp + 44], rax>
new  <>

2123:
old  <>
new  < strtok$67:>

2124:
old  < memcpy$2:>
new  <	; BinaryAdd Â£temporary3390 token Â£temporary3388>

2125:
old  <	; IntegralToIntegral Â£temporary3416 source>
new  <	mov rsi, [token]>

2126:
old  <	mov rax, [rbp + 32]>
new  <	add rsi, rax>

2128:
old  < memcpy$3:>
new  < strtok$68:>

2129:
old  <	; Assign charSource Â£temporary3416>
new  <	; Dereference Â£temporary3387 -> Â£temporary3390 Â£temporary3390 0>

2130:
old  <	mov [rbp + 52], rax>
new  <>

2131:
old  <>
new  < strtok$69:>

2132:
old  < memcpy$4:>
new  <	; Assign Â£temporary3387 -> Â£temporary3390 0>

2133:
old  <	; Assign index 0>
new  <	mov byte [rsi], 0>

2134:
old  <	mov dword [rbp + 60], 0>
new  <>

2135:
old  <>
new  < strtok$70:>

2136:
old  < memcpy$5:>
new  <	; BinaryAdd Â£temporary3391 index 1>

2137:
old  <	; SignedGreaterThanEqual 15 index size>
new  <	mov eax, [rbp + 40]>

2138:
old  <	mov eax, [rbp + 40]>
new  <	inc eax>

2139:
old  <	cmp [rbp + 60], eax>
new  <>

2140:
old  <	jge memcpy$15>
new  < strtok$71:>

2141:
old  <>
new  <	; IntegralToIntegral Â£temporary3393 Â£temporary3391>

2142:
old  < memcpy$6:>
new  <	mov rbx, 4294967295>

2143:
old  <	; IntegralToIntegral Â£temporary3420 index>
new  <	and rax, rbx>

2144:
old  <	mov eax, [rbp + 60]>
new  <>

2145:
old  <	mov rbx, 4294967295>
new  < strtok$72:>

2146:
old  <	and rax, rbx>
new  <	; BinaryAdd Â£temporary3395 token Â£temporary3393>

2147:
old  <>
new  <	mov rsi, [token]>

2148:
old  < memcpy$7:>
new  <	add rsi, rax>

2149:
old  <	; BinaryAdd Â£temporary3422 charTarget Â£temporary3420>
new  <>

2150:
old  <	mov rsi, [rbp + 44]>
new  < strtok$73:>

2151:
old  <	add rsi, rax>
new  <	; Dereference Â£temporary3392 -> Â£temporary3395 Â£temporary3395 0>

2153:
old  < memcpy$8:>
new  < strtok$74:>

2154:
old  <	; Dereference Â£temporary3419 -> Â£temporary3422 Â£temporary3422 0>
new  <	; Address Â£temporary3396 Â£temporary3392 -> Â£temporary3395>

2156:
old  < memcpy$9:>
new  < strtok$75:>

2157:
old  <	; IntegralToIntegral Â£temporary3424 index>
new  <	; Assign token Â£temporary3396>

2158:
old  <	mov eax, [rbp + 60]>
new  <	mov [token], rsi>

2159:
old  <	mov rbx, 4294967295>
new  <>

2160:
old  <	and rax, rbx>
new  < strtok$76:>

2161:
old  <>
new  <	; SetReturnValue>

2162:
old  < memcpy$10:>
new  <>

2163:
old  <	; BinaryAdd Â£temporary3426 charSource Â£temporary3424>
new  < strtok$77:>

2164:
old  <	mov rdi, [rbp + 52]>
new  <	; Return tokenStart2>

2165:
old  <	add rdi, rax>
new  <	mov rbx, [rbp + 52]>

2166:
old  <>
new  <	mov rax, [rbp]>

2167:
old  < memcpy$11:>
new  <	mov rdi, [rbp + 16]>

2168:
old  <	; Dereference Â£temporary3423 -> Â£temporary3426 Â£temporary3426 0>
new  <	mov rbp, [rbp + 8]>

2169:
old  <>
new  <	jmp rax>

2170:
old  < memcpy$12:>
new  <>

2171:
old  <	; Assign Â£temporary3419 -> Â£temporary3422 Â£temporary3423 -> Â£temporary3426>
new  < strtok$78:>

2172:
old  <	mov al, [rdi]>
new  <	; BinaryAdd index index 1>

2173:
old  <	mov [rsi], al>
new  <	inc dword [rbp + 40]>

2175:
old  < memcpy$13:>
new  < strtok$79:>

2176:
old  <	; BinaryAdd index index 1>
new  <	; Goto 50>

2177:
old  <	inc dword [rbp + 60]>
new  <	jmp strtok$50>

2179:
old  < memcpy$14:>
new  < strtok$80:>

2180:
old  <	; Goto 5>
new  <	; Assign tokenStart token>

2181:
old  <	jmp memcpy$5>
new  <	mov rax, [token]>

2182:
old  <>
new  <	mov [rbp + 44], rax>

2183:
old  < memcpy$15:>
new  <>

2184:
old  <	; IntegralToIntegral Â£temporary3427 target>
new  < strtok$81:>

2185:
old  <	mov rbx, [rbp + 24]>
new  <	; IntegralToIntegral Â£temporary3398 index>

2186:
old  <>
new  <	mov eax, [rbp + 40]>

2187:
old  < memcpy$16:>
new  <	mov rbx, 4294967295>

2188:
old  <	; Return Â£temporary3427>
new  <	and rax, rbx>

2189:
old  <	mov rax, [rbp]>
new  <>

2190:
old  <	mov rdi, [rbp + 16]>
new  < strtok$82:>

2191:
old  <	mov rbp, [rbp + 8]>
new  <	; BinaryAdd Â£temporary3400 token Â£temporary3398>

2192:
old  <	jmp rax>
new  <	mov rsi, [token]>

2193:
old  <>
new  <	add rsi, rax>

2194:
old  < memcpy$17:>
new  <>

2195:
old  <	; FunctionEnd memcpy>
new  < strtok$83:>

2196:
old  <>
new  <	; Dereference Â£temporary3397 -> Â£temporary3400 Â£temporary3400 0>

2197:
old  <section .text>
new  <>

2198:
old  <>
new  < strtok$84:>

2199:
old  < memmove:>
new  <	; Address Â£temporary3401 Â£temporary3397 -> Â£temporary3400>

2200:
old  <	; IntegralToIntegral Â£temporary3428 target>
new  <>

2201:
old  <	mov rax, [rbp + 24]>
new  < strtok$85:>

2202:
old  <>
new  <	; Assign token Â£temporary3401>

2203:
old  < memmove$1:>
new  <	mov [token], rsi>

2204:
old  <	; Assign charTarget Â£temporary3428>
new  <>

2205:
old  <	mov [rbp + 44], rax>
new  < strtok$86:>

2206:
old  <>
new  <	; SetReturnValue>

2207:
old  < memmove$2:>
new  <>

2208:
old  <	; IntegralToIntegral Â£temporary3429 source>
new  < strtok$87:>

2209:
old  <	mov rax, [rbp + 32]>
new  <	; Return tokenStart>

2210:
old  <>
new  <	mov rbx, [rbp + 44]>

2211:
old  < memmove$3:>
new  <	mov rax, [rbp]>

2212:
old  <	; Assign charSource Â£temporary3429>
new  <	mov rdi, [rbp + 16]>

2213:
old  <	mov [rbp + 52], rax>
new  <	mov rbp, [rbp + 8]>

2214:
old  <>
new  <	jmp rax>

2215:
old  < memmove$4:>
new  <>

2216:
old  <	; SignedGreaterThanEqual 16 source target>
new  < strtok$88:>

2217:
old  <	mov rax, [rbp + 24]>
new  <	; FunctionEnd strtok>

2218:
old  <	cmp [rbp + 32], rax>
new  <>

2219:
old  <	jge memmove$16>
new  <section .text>

2221:
old  < memmove$5:>
new  < memcpy:>

2222:
old  <	; BinarySubtract index size 1>
new  <	; IntegralToIntegral Â£temporary3402 target>

2223:
old  <	mov eax, [rbp + 40]>
new  <	mov rax, [rbp + 24]>

2224:
old  <	dec eax>
new  <>

2225:
old  <	mov [rbp + 60], eax>
new  < memcpy$1:>

2226:
old  <>
new  <	; Assign charTarget Â£temporary3402>

2227:
old  < memmove$6:>
new  <	mov [rbp + 44], rax>

2228:
old  <	; SignedLessThan 27 index 0>
new  <>

2229:
old  <	cmp dword [rbp + 60], 0>
new  < memcpy$2:>

2230:
old  <	jl memmove$27>
new  <	; IntegralToIntegral Â£temporary3403 source>

2231:
old  <>
new  <	mov rax, [rbp + 32]>

2232:
old  < memmove$7:>
new  <>

2233:
old  <	; IntegralToIntegral Â£temporary3435 index>
new  < memcpy$3:>

2234:
old  <	mov eax, [rbp + 60]>
new  <	; Assign charSource Â£temporary3403>

2235:
old  <	mov rbx, 4294967295>
new  <	mov [rbp + 52], rax>

2236:
old  <	and rax, rbx>
new  <>

2237:
old  <>
new  < memcpy$4:>

2238:
old  < memmove$8:>
new  <	; Assign index 0>

2239:
old  <	; BinaryAdd Â£temporary3437 charTarget Â£temporary3435>
new  <	mov dword [rbp + 60], 0>

2240:
old  <	mov rsi, [rbp + 44]>
new  <>

2241:
old  <	add rsi, rax>
new  < memcpy$5:>

2242:
old  <>
new  <	; SignedGreaterThanEqual 15 index size>

2243:
old  < memmove$9:>
new  <	mov eax, [rbp + 40]>

2244:
old  <	; Dereference Â£temporary3434 -> Â£temporary3437 Â£temporary3437 0>
new  <	cmp [rbp + 60], eax>

2245:
old  <>
new  <	jge memcpy$15>

2246:
old  < memmove$10:>
new  <>

2247:
old  <	; IntegralToIntegral Â£temporary3439 index>
new  < memcpy$6:>

2248:
old  <	mov eax, [rbp + 60]>
new  <	; IntegralToIntegral Â£temporary3407 index>

2249:
old  <	mov rbx, 4294967295>
new  <	mov eax, [rbp + 60]>

2250:
old  <	and rax, rbx>
new  <	mov rbx, 4294967295>

2251:
old  <>
new  <	and rax, rbx>

2252:
old  < memmove$11:>
new  <>

2253:
old  <	; BinaryAdd Â£temporary3441 charSource Â£temporary3439>
new  < memcpy$7:>

2254:
old  <	mov rdi, [rbp + 52]>
new  <	; BinaryAdd Â£temporary3409 charTarget Â£temporary3407>

2255:
old  <	add rdi, rax>
new  <	mov rsi, [rbp + 44]>

2256:
old  <>
new  <	add rsi, rax>

2257:
old  < memmove$12:>
new  <>

2258:
old  <	; Dereference Â£temporary3438 -> Â£temporary3441 Â£temporary3441 0>
new  < memcpy$8:>

2259:
old  <>
new  <	; Dereference Â£temporary3406 -> Â£temporary3409 Â£temporary3409 0>

2260:
old  < memmove$13:>
new  <>

2261:
old  <	; Assign Â£temporary3434 -> Â£temporary3437 Â£temporary3438 -> Â£temporary3441>
new  < memcpy$9:>

2262:
old  <	mov al, [rdi]>
new  <	; IntegralToIntegral Â£temporary3411 index>

2263:
old  <	mov [rsi], al>
new  <	mov eax, [rbp + 60]>

2264:
old  <>
new  <	mov rbx, 4294967295>

2265:
old  < memmove$14:>
new  <	and rax, rbx>

2266:
old  <	; BinarySubtract index index 1>
new  <>

2267:
old  <	dec dword [rbp + 60]>
new  < memcpy$10:>

2268:
old  <>
new  <	; BinaryAdd Â£temporary3413 charSource Â£temporary3411>

2269:
old  < memmove$15:>
new  <	mov rdi, [rbp + 52]>

2270:
old  <	; Goto 6>
new  <	add rdi, rax>

2271:
old  <	jmp memmove$6>
new  <>

2272:
old  <>
new  < memcpy$11:>

2273:
old  < memmove$16:>
new  <	; Dereference Â£temporary3410 -> Â£temporary3413 Â£temporary3413 0>

2274:
old  <	; Assign index 0>
new  <>

2275:
old  <	mov dword [rbp + 60], 0>
new  < memcpy$12:>

2276:
old  <>
new  <	; Assign Â£temporary3406 -> Â£temporary3409 Â£temporary3410 -> Â£temporary3413>

2277:
old  < memmove$17:>
new  <	mov al, [rdi]>

2278:
old  <	; SignedGreaterThanEqual 27 index size>
new  <	mov [rsi], al>

2279:
old  <	mov eax, [rbp + 40]>
new  <>

2280:
old  <	cmp [rbp + 60], eax>
new  < memcpy$13:>

2281:
old  <	jge memmove$27>
new  <	; BinaryAdd index index 1>

2282:
old  <>
new  <	inc dword [rbp + 60]>

2283:
old  < memmove$18:>
new  <>

2284:
old  <	; IntegralToIntegral Â£temporary3445 index>
new  < memcpy$14:>

2285:
old  <	mov eax, [rbp + 60]>
new  <	; Goto 5>

2286:
old  <	mov rbx, 4294967295>
new  <	jmp memcpy$5>

2287:
old  <	and rax, rbx>
new  <>

2288:
old  <>
new  < memcpy$15:>

2289:
old  < memmove$19:>
new  <	; IntegralToIntegral Â£temporary3414 target>

2290:
old  <	; BinaryAdd Â£temporary3447 charTarget Â£temporary3445>
new  <	mov rbx, [rbp + 24]>

2291:
old  <	mov rsi, [rbp + 44]>
new  <>

2292:
old  <	add rsi, rax>
new  < memcpy$16:>

2293:
old  <>
new  <	; SetReturnValue>

2294:
old  < memmove$20:>
new  <>

2295:
old  <	; Dereference Â£temporary3444 -> Â£temporary3447 Â£temporary3447 0>
new  < memcpy$17:>

2296:
old  <>
new  <	; Return Â£temporary3414>

2297:
old  < memmove$21:>
new  <	mov rax, [rbp]>

2298:
old  <	; IntegralToIntegral Â£temporary3449 index>
new  <	mov rdi, [rbp + 16]>

2299:
old  <	mov eax, [rbp + 60]>
new  <	mov rbp, [rbp + 8]>

2300:
old  <	mov rbx, 4294967295>
new  <	jmp rax>

2301:
old  <	and rax, rbx>
new  <>

2302:
old  <>
new  < memcpy$18:>

2303:
old  < memmove$22:>
new  <	; FunctionEnd memcpy>

2304:
old  <	; BinaryAdd Â£temporary3451 charSource Â£temporary3449>
new  <>

2305:
old  <	mov rdi, [rbp + 52]>
new  <section .text>

2306:
old  <	add rdi, rax>
new  <>

2307:
old  <>
new  < memmove:>

2308:
old  < memmove$23:>
new  <	; IntegralToIntegral Â£temporary3415 target>

2309:
old  <	; Dereference Â£temporary3448 -> Â£temporary3451 Â£temporary3451 0>
new  <	mov rax, [rbp + 24]>

2311:
old  < memmove$24:>
new  < memmove$1:>

2312:
old  <	; Assign Â£temporary3444 -> Â£temporary3447 Â£temporary3448 -> Â£temporary3451>
new  <	; Assign charTarget Â£temporary3415>

2313:
old  <	mov al, [rdi]>
new  <	mov [rbp + 44], rax>

2314:
old  <	mov [rsi], al>
new  <>

2315:
old  <>
new  < memmove$2:>

2316:
old  < memmove$25:>
new  <	; IntegralToIntegral Â£temporary3416 source>

2317:
old  <	; BinaryAdd index index 1>
new  <	mov rax, [rbp + 32]>

2318:
old  <	inc dword [rbp + 60]>
new  <>

2319:
old  <>
new  < memmove$3:>

2320:
old  < memmove$26:>
new  <	; Assign charSource Â£temporary3416>

2321:
old  <	; Goto 17>
new  <	mov [rbp + 52], rax>

2322:
old  <	jmp memmove$17>
new  <>

2323:
old  <>
new  < memmove$4:>

2324:
old  < memmove$27:>
new  <	; SignedGreaterThanEqual 16 source target>

2325:
old  <	; IntegralToIntegral Â£temporary3452 target>
new  <	mov rax, [rbp + 24]>

2326:
old  <	mov rbx, [rbp + 24]>
new  <	cmp [rbp + 32], rax>

2327:
old  <>
new  <	jge memmove$16>

2328:
old  < memmove$28:>
new  <>

2329:
old  <	; Return Â£temporary3452>
new  < memmove$5:>

2330:
old  <	mov rax, [rbp]>
new  <	; BinarySubtract index size 1>

2331:
old  <	mov rdi, [rbp + 16]>
new  <	mov eax, [rbp + 40]>

2332:
old  <	mov rbp, [rbp + 8]>
new  <	dec eax>

2333:
old  <	jmp rax>
new  <	mov [rbp + 60], eax>

2335:
old  < memmove$29:>
new  < memmove$6:>

2336:
old  <	; FunctionEnd memmove>
new  <	; SignedLessThan 27 index 0>

2337:
old  <>
new  <	cmp dword [rbp + 60], 0>

2338:
old  <section .text>
new  <	jl memmove$27>

2340:
old  < memcmp:>
new  < memmove$7:>

2341:
old  <	; IntegralToIntegral Â£temporary3453 left>
new  <	; IntegralToIntegral Â£temporary3422 index>

2342:
old  <	mov rax, [rbp + 24]>
new  <	mov eax, [rbp + 60]>

2343:
old  <>
new  <	mov rbx, 4294967295>

2344:
old  < memcmp$1:>
new  <	and rax, rbx>

2345:
old  <	; Assign charLeft Â£temporary3453>
new  <>

2346:
old  <	mov [rbp + 44], rax>
new  < memmove$8:>

2347:
old  <>
new  <	; BinaryAdd Â£temporary3424 charTarget Â£temporary3422>

2348:
old  < memcmp$2:>
new  <	mov rsi, [rbp + 44]>

2349:
old  <	; IntegralToIntegral Â£temporary3454 right>
new  <	add rsi, rax>

2350:
old  <	mov rax, [rbp + 32]>
new  <>

2351:
old  <>
new  < memmove$9:>

2352:
old  < memcmp$3:>
new  <	; Dereference Â£temporary3421 -> Â£temporary3424 Â£temporary3424 0>

2353:
old  <	; Assign charRight Â£temporary3454>
new  <>

2354:
old  <	mov [rbp + 52], rax>
new  < memmove$10:>

2355:
old  <>
new  <	; IntegralToIntegral Â£temporary3426 index>

2356:
old  < memcmp$4:>
new  <	mov eax, [rbp + 60]>

2357:
old  <	; Assign index 0>
new  <	mov rbx, 4294967295>

2358:
old  <	mov dword [rbp + 60], 0>
new  <	and rax, rbx>

2360:
old  < memcmp$5:>
new  < memmove$11:>

2361:
old  <	; SignedGreaterThanEqual 24 index size>
new  <	; BinaryAdd Â£temporary3428 charSource Â£temporary3426>

2362:
old  <	mov eax, [rbp + 40]>
new  <	mov rdi, [rbp + 52]>

2363:
old  <	cmp [rbp + 60], eax>
new  <	add rdi, rax>

2364:
old  <	jge memcmp$24>
new  <>

2365:
old  <>
new  < memmove$12:>

2366:
old  < memcmp$6:>
new  <	; Dereference Â£temporary3425 -> Â£temporary3428 Â£temporary3428 0>

2367:
old  <	; IntegralToIntegral Â£temporary3458 index>
new  <>

2368:
old  <	mov eax, [rbp + 60]>
new  < memmove$13:>

2369:
old  <	mov rbx, 4294967295>
new  <	; Assign Â£temporary3421 -> Â£temporary3424 Â£temporary3425 -> Â£temporary3428>

2370:
old  <	and rax, rbx>
new  <	mov al, [rdi]>

2371:
old  <>
new  <	mov [rsi], al>

2372:
old  < memcmp$7:>
new  <>

2373:
old  <	; BinaryAdd Â£temporary3460 charLeft Â£temporary3458>
new  < memmove$14:>

2374:
old  <	mov rsi, [rbp + 44]>
new  <	; BinarySubtract index index 1>

2375:
old  <	add rsi, rax>
new  <	dec dword [rbp + 60]>

2377:
old  < memcmp$8:>
new  < memmove$15:>

2378:
old  <	; Dereference Â£temporary3457 -> Â£temporary3460 Â£temporary3460 0>
new  <	; Goto 6>

2379:
old  <>
new  <	jmp memmove$6>

2380:
old  < memcmp$9:>
new  <>

2381:
old  <	; IntegralToIntegral Â£temporary3462 index>
new  < memmove$16:>

2382:
old  <	mov eax, [rbp + 60]>
new  <	; Assign index 0>

2383:
old  <	mov rbx, 4294967295>
new  <	mov dword [rbp + 60], 0>

2384:
old  <	and rax, rbx>
new  <>

2385:
old  <>
new  < memmove$17:>

2386:
old  < memcmp$10:>
new  <	; SignedGreaterThanEqual 27 index size>

2387:
old  <	; BinaryAdd Â£temporary3464 charRight Â£temporary3462>
new  <	mov eax, [rbp + 40]>

2388:
old  <	mov rdi, [rbp + 52]>
new  <	cmp [rbp + 60], eax>

2389:
old  <	add rdi, rax>
new  <	jge memmove$27>

2391:
old  < memcmp$11:>
new  < memmove$18:>

2392:
old  <	; Dereference Â£temporary3461 -> Â£temporary3464 Â£temporary3464 0>
new  <	; IntegralToIntegral Â£temporary3432 index>

2393:
old  <>
new  <	mov eax, [rbp + 60]>

2394:
old  < memcmp$12:>
new  <	mov rbx, 4294967295>

2395:
old  <	; SignedGreaterThanEqual 14 Â£temporary3457 -> Â£temporary3460 Â£temporary3461 -> Â£temporary3464>
new  <	and rax, rbx>

2396:
old  <	mov al, [rdi]>
new  <>

2397:
old  <	cmp [rsi], al>
new  < memmove$19:>

2398:
old  <	jge memcmp$14>
new  <	; BinaryAdd Â£temporary3434 charTarget Â£temporary3432>

2399:
old  <>
new  <	mov rsi, [rbp + 44]>

2400:
old  < memcmp$13:>
new  <	add rsi, rax>

2401:
old  <	; Return -1>
new  <>

2402:
old  <	mov ebx, -1>
new  < memmove$20:>

2403:
old  <	mov rax, [rbp]>
new  <	; Dereference Â£temporary3431 -> Â£temporary3434 Â£temporary3434 0>

2404:
old  <	mov rdi, [rbp + 16]>
new  <>

2405:
old  <	mov rbp, [rbp + 8]>
new  < memmove$21:>

2406:
old  <	jmp rax>
new  <	; IntegralToIntegral Â£temporary3436 index>

2407:
old  <>
new  <	mov eax, [rbp + 60]>

2408:
old  < memcmp$14:>
new  <	mov rbx, 4294967295>

2409:
old  <	; IntegralToIntegral Â£temporary3467 index>
new  <	and rax, rbx>

2410:
old  <	mov eax, [rbp + 60]>
new  <>

2411:
old  <	mov rbx, 4294967295>
new  < memmove$22:>

2412:
old  <	and rax, rbx>
new  <	; BinaryAdd Â£temporary3438 charSource Â£temporary3436>

2413:
old  <>
new  <	mov rdi, [rbp + 52]>

2414:
old  < memcmp$15:>
new  <	add rdi, rax>

2415:
old  <	; BinaryAdd Â£temporary3469 charLeft Â£temporary3467>
new  <>

2416:
old  <	mov rsi, [rbp + 44]>
new  < memmove$23:>

2417:
old  <	add rsi, rax>
new  <	; Dereference Â£temporary3435 -> Â£temporary3438 Â£temporary3438 0>

2419:
old  < memcmp$16:>
new  < memmove$24:>

2420:
old  <	; Dereference Â£temporary3466 -> Â£temporary3469 Â£temporary3469 0>
new  <	; Assign Â£temporary3431 -> Â£temporary3434 Â£temporary3435 -> Â£temporary3438>

2421:
old  <>
new  <	mov al, [rdi]>

2422:
old  < memcmp$17:>
new  <	mov [rsi], al>

2423:
old  <	; IntegralToIntegral Â£temporary3471 index>
new  <>

2424:
old  <	mov eax, [rbp + 60]>
new  < memmove$25:>

2425:
old  <	mov rbx, 4294967295>
new  <	; BinaryAdd index index 1>

2426:
old  <	and rax, rbx>
new  <	inc dword [rbp + 60]>

2428:
old  < memcmp$18:>
new  < memmove$26:>

2429:
old  <	; BinaryAdd Â£temporary3473 charRight Â£temporary3471>
new  <	; Goto 17>

2430:
old  <	mov rdi, [rbp + 52]>
new  <	jmp memmove$17>

2431:
old  <	add rdi, rax>
new  <>

2432:
old  <>
new  < memmove$27:>

2433:
old  < memcmp$19:>
new  <	; IntegralToIntegral Â£temporary3439 target>

2434:
old  <	; Dereference Â£temporary3470 -> Â£temporary3473 Â£temporary3473 0>
new  <	mov rbx, [rbp + 24]>

2436:
old  < memcmp$20:>
new  < memmove$28:>

2437:
old  <	; SignedLessThanEqual 22 Â£temporary3466 -> Â£temporary3469 Â£temporary3470 -> Â£temporary3473>
new  <	; SetReturnValue>

2438:
old  <	mov al, [rdi]>
new  <>

2439:
old  <	cmp [rsi], al>
new  < memmove$29:>

2440:
old  <	jle memcmp$22>
new  <	; Return Â£temporary3439>

2441:
old  <>
new  <	mov rax, [rbp]>

2442:
old  < memcmp$21:>
new  <	mov rdi, [rbp + 16]>

2443:
old  <	; Return 1>
new  <	mov rbp, [rbp + 8]>

2444:
old  <	mov ebx, 1>
new  <	jmp rax>

2445:
old  <	mov rax, [rbp]>
new  <>

2446:
old  <	mov rdi, [rbp + 16]>
new  < memmove$30:>

2447:
old  <	mov rbp, [rbp + 8]>
new  <	; FunctionEnd memmove>

2448:
old  <	jmp rax>
new  <>

2449:
old  <>
new  <section .text>

2450:
old  < memcmp$22:>
new  <>

2451:
old  <	; BinaryAdd index index 1>
new  < memcmp:>

2452:
old  <	inc dword [rbp + 60]>
new  <	; IntegralToIntegral Â£temporary3440 left>

2453:
old  <>
new  <	mov rax, [rbp + 24]>

2454:
old  < memcmp$23:>
new  <>

2455:
old  <	; Goto 5>
new  < memcmp$1:>

2456:
old  <	jmp memcmp$5>
new  <	; Assign charLeft Â£temporary3440>

2457:
old  <>
new  <	mov [rbp + 44], rax>

2458:
old  < memcmp$24:>
new  <>

2459:
old  <	; Return 0>
new  < memcmp$2:>

2460:
old  <	mov ebx, 0>
new  <	; IntegralToIntegral Â£temporary3441 right>

2461:
old  <	mov rax, [rbp]>
new  <	mov rax, [rbp + 32]>

2462:
old  <	mov rdi, [rbp + 16]>
new  <>

2463:
old  <	mov rbp, [rbp + 8]>
new  < memcmp$3:>

2464:
old  <	jmp rax>
new  <	; Assign charRight Â£temporary3441>

2465:
old  <>
new  <	mov [rbp + 52], rax>

2466:
old  < memcmp$25:>
new  <>

2467:
old  <	; FunctionEnd memcmp>
new  < memcmp$4:>

2468:
old  <>
new  <	; Assign index 0>

2469:
old  <section .text>
new  <	mov dword [rbp + 60], 0>

2471:
old  < memchr:>
new  < memcmp$5:>

2472:
old  <	; IntegralToIntegral Â£temporary3475 block>
new  <	; SignedGreaterThanEqual 26 index size>

2473:
old  <	mov rax, [rbp + 24]>
new  <	mov eax, [rbp + 40]>

2474:
old  <>
new  <	cmp [rbp + 60], eax>

2475:
old  < memchr$1:>
new  <	jge memcmp$26>

2476:
old  <	; Assign charBlock Â£temporary3475>
new  <>

2477:
old  <	mov [rbp + 44], rax>
new  < memcmp$6:>

2478:
old  <>
new  <	; IntegralToIntegral Â£temporary3445 index>

2479:
old  < memchr$2:>
new  <	mov eax, [rbp + 60]>

2480:
old  <	; IntegralToIntegral Â£temporary3476 i>
new  <	mov rbx, 4294967295>

2481:
old  <	mov eax, [rbp + 32]>
new  <	and rax, rbx>

2482:
old  <	cmp eax, 0>
new  <>

2483:
old  <	jge memchr$3>
new  < memcmp$7:>

2484:
old  <	neg eax>
new  <	; BinaryAdd Â£temporary3447 charLeft Â£temporary3445>

2485:
old  <	neg al>
new  <	mov rsi, [rbp + 44]>

2486:
old  <>
new  <	add rsi, rax>

2487:
old  < memchr$3:>
new  <>

2488:
old  <	; Assign c Â£temporary3476>
new  < memcmp$8:>

2489:
old  <	mov [rbp + 52], al>
new  <	; Dereference Â£temporary3444 -> Â£temporary3447 Â£temporary3447 0>

2491:
old  < memchr$4:>
new  < memcmp$9:>

2492:
old  <	; Assign index 0>
new  <	; IntegralToIntegral Â£temporary3449 index>

2493:
old  <	mov dword [rbp + 40], 0>
new  <	mov eax, [rbp + 60]>

2494:
old  <>
new  <	mov rbx, 4294967295>

2495:
old  < memchr$5:>
new  <	and rax, rbx>

2496:
old  <	; SignedGreaterThanEqual 18 index size>
new  <>

2497:
old  <	mov eax, [rbp + 36]>
new  < memcmp$10:>

2498:
old  <	cmp [rbp + 40], eax>
new  <	; BinaryAdd Â£temporary3451 charRight Â£temporary3449>

2499:
old  <	jge memchr$18>
new  <	mov rdi, [rbp + 52]>

2500:
old  <>
new  <	add rdi, rax>

2501:
old  < memchr$6:>
new  <>

2502:
old  <	; IntegralToIntegral Â£temporary3480 index>
new  < memcmp$11:>

2503:
old  <	mov eax, [rbp + 40]>
new  <	; Dereference Â£temporary3448 -> Â£temporary3451 Â£temporary3451 0>

2504:
old  <	mov rbx, 4294967295>
new  <>

2505:
old  <	and rax, rbx>
new  < memcmp$12:>

2506:
old  <>
new  <	; SignedGreaterThanEqual 15 Â£temporary3444 -> Â£temporary3447 Â£temporary3448 -> Â£temporary3451>

2507:
old  < memchr$7:>
new  <	mov al, [rdi]>

2508:
old  <	; BinaryAdd Â£temporary3482 charBlock Â£temporary3480>
new  <	cmp [rsi], al>

2509:
old  <	mov rsi, [rbp + 44]>
new  <	jge memcmp$15>

2510:
old  <	add rsi, rax>
new  <>

2511:
old  <>
new  < memcmp$13:>

2512:
old  < memchr$8:>
new  <	; SetReturnValue>

2513:
old  <	; Dereference Â£temporary3479 -> Â£temporary3482 Â£temporary3482 0>
new  <>

2514:
old  <>
new  < memcmp$14:>

2515:
old  < memchr$9:>
new  <	; Return -1>

2516:
old  <	; NotEqual 16 Â£temporary3479 -> Â£temporary3482 c>
new  <	mov ebx, -1>

2517:
old  <	mov al, [rbp + 52]>
new  <	mov rax, [rbp]>

2518:
old  <	cmp [rsi], al>
new  <	mov rdi, [rbp + 16]>

2519:
old  <	jne memchr$16>
new  <	mov rbp, [rbp + 8]>

2520:
old  <>
new  <	jmp rax>

2521:
old  < memchr$10:>
new  <>

2522:
old  <	; IntegralToIntegral Â£temporary3485 index>
new  < memcmp$15:>

2523:
old  <	mov eax, [rbp + 40]>
new  <	; IntegralToIntegral Â£temporary3454 index>

2524:
old  <	mov rbx, 4294967295>
new  <	mov eax, [rbp + 60]>

2525:
old  <	and rax, rbx>
new  <	mov rbx, 4294967295>

2526:
old  <>
new  <	and rax, rbx>

2527:
old  < memchr$11:>
new  <>

2528:
old  <	; BinaryAdd Â£temporary3487 charBlock Â£temporary3485>
new  < memcmp$16:>

2529:
old  <	mov rbx, [rbp + 44]>
new  <	; BinaryAdd Â£temporary3456 charLeft Â£temporary3454>

2530:
old  <	add rbx, rax>
new  <	mov rsi, [rbp + 44]>

2531:
old  <>
new  <	add rsi, rax>

2532:
old  < memchr$12:>
new  <>

2533:
old  <	; Dereference Â£temporary3484 -> Â£temporary3487 Â£temporary3487 0>
new  < memcmp$17:>

2534:
old  <>
new  <	; Dereference Â£temporary3453 -> Â£temporary3456 Â£temporary3456 0>

2535:
old  < memchr$13:>
new  <>

2536:
old  <	; Address Â£temporary3488 Â£temporary3484 -> Â£temporary3487>
new  < memcmp$18:>

2537:
old  <>
new  <	; IntegralToIntegral Â£temporary3458 index>

2538:
old  < memchr$14:>
new  <	mov eax, [rbp + 60]>

2539:
old  <	; IntegralToIntegral Â£temporary3489 Â£temporary3488>
new  <	mov rbx, 4294967295>

2540:
old  <>
new  <	and rax, rbx>

2541:
old  < memchr$15:>
new  <>

2542:
old  <	; Return Â£temporary3489>
new  < memcmp$19:>

2543:
old  <	mov rax, [rbp]>
new  <	; BinaryAdd Â£temporary3460 charRight Â£temporary3458>

2544:
old  <	mov rdi, [rbp + 16]>
new  <	mov rdi, [rbp + 52]>

2545:
old  <	mov rbp, [rbp + 8]>
new  <	add rdi, rax>

2546:
old  <	jmp rax>
new  <>

2547:
old  <>
new  < memcmp$20:>

2548:
old  < memchr$16:>
new  <	; Dereference Â£temporary3457 -> Â£temporary3460 Â£temporary3460 0>

2549:
old  <	; BinaryAdd index index 1>
new  <>

2550:
old  <	inc dword [rbp + 40]>
new  < memcmp$21:>

2551:
old  <>
new  <	; SignedLessThanEqual 24 Â£temporary3453 -> Â£temporary3456 Â£temporary3457 -> Â£temporary3460>

2552:
old  < memchr$17:>
new  <	mov al, [rdi]>

2553:
old  <	; Goto 5>
new  <	cmp [rsi], al>

2554:
old  <	jmp memchr$5>
new  <	jle memcmp$24>

2556:
old  < memchr$18:>
new  < memcmp$22:>

2557:
old  <	; Return 0>
new  <	; SetReturnValue>

2558:
old  <	mov rbx, 0>
new  <>

2559:
old  <	mov rax, [rbp]>
new  < memcmp$23:>

2560:
old  <	mov rdi, [rbp + 16]>
new  <	; Return 1>

2561:
old  <	mov rbp, [rbp + 8]>
new  <	mov ebx, 1>

2562:
old  <	jmp rax>
new  <	mov rax, [rbp]>

2563:
old  <>
new  <	mov rdi, [rbp + 16]>

2564:
old  < memchr$19:>
new  <	mov rbp, [rbp + 8]>

2565:
old  <	; FunctionEnd memchr>
new  <	jmp rax>

2567:
old  <section .text>
new  < memcmp$24:>

2568:
old  <>
new  <	; BinaryAdd index index 1>

2569:
old  < memset:>
new  <	inc dword [rbp + 60]>

2570:
old  <	; IntegralToIntegral Â£temporary3490 block>
new  <>

2571:
old  <	mov rax, [rbp + 24]>
new  < memcmp$25:>

2572:
old  <>
new  <	; Goto 5>

2573:
old  < memset$1:>
new  <	jmp memcmp$5>

2574:
old  <	; Assign charBlock Â£temporary3490>
new  <>

2575:
old  <	mov [rbp + 40], rax>
new  < memcmp$26:>

2576:
old  <>
new  <	; SetReturnValue>

2577:
old  < memset$2:>
new  <>

2578:
old  <	; IntegralToIntegral Â£temporary3491 i>
new  < memcmp$27:>

2579:
old  <	mov eax, [rbp + 32]>
new  <	; Return 0>

2580:
old  <	cmp eax, 0>
new  <	mov ebx, 0>

2581:
old  <	jge memset$3>
new  <	mov rax, [rbp]>

2582:
old  <	neg eax>
new  <	mov rdi, [rbp + 16]>

2583:
old  <	neg al>
new  <	mov rbp, [rbp + 8]>

2584:
old  <>
new  <	jmp rax>

2585:
old  < memset$3:>
new  <>

2586:
old  <	; Assign c Â£temporary3491>
new  < memcmp$28:>

2587:
old  <	mov [rbp + 48], al>
new  <	; FunctionEnd memcmp>

2589:
old  < memset$4:>
new  <section .text>

2590:
old  <	; Assign index 0>
new  <>

2591:
old  <	mov dword [rbp + 49], 0>
new  < memchr:>

2592:
old  <>
new  <	; IntegralToIntegral Â£temporary3462 block>

2593:
old  < memset$5:>
new  <	mov rax, [rbp + 24]>

2594:
old  <	; SignedGreaterThanEqual 12 index size>
new  <>

2595:
old  <	mov eax, [rbp + 36]>
new  < memchr$1:>

2596:
old  <	cmp [rbp + 49], eax>
new  <	; Assign charBlock Â£temporary3462>

2597:
old  <	jge memset$12>
new  <	mov [rbp + 44], rax>

2599:
old  < memset$6:>
new  < memchr$2:>

2600:
old  <	; IntegralToIntegral Â£temporary3495 index>
new  <	; IntegralToIntegral Â£temporary3463 i>

2601:
old  <	mov eax, [rbp + 49]>
new  <	mov eax, [rbp + 32]>

2602:
old  <	mov rbx, 4294967295>
new  <	cmp eax, 0>

2603:
old  <	and rax, rbx>
new  <	jge memchr$3>

2604:
old  <>
new  <	neg eax>

2605:
old  < memset$7:>
new  <	neg al>

2606:
old  <	; BinaryAdd Â£temporary3497 charBlock Â£temporary3495>
new  <>

2607:
old  <	mov rsi, [rbp + 40]>
new  < memchr$3:>

2608:
old  <	add rsi, rax>
new  <	; Assign c Â£temporary3463>

2609:
old  <>
new  <	mov [rbp + 52], al>

2610:
old  < memset$8:>
new  <>

2611:
old  <	; Dereference Â£temporary3494 -> Â£temporary3497 Â£temporary3497 0>
new  < memchr$4:>

2612:
old  <>
new  <	; Assign index 0>

2613:
old  < memset$9:>
new  <	mov dword [rbp + 40], 0>

2614:
old  <	; Assign Â£temporary3494 -> Â£temporary3497 c>
new  <>

2615:
old  <	mov al, [rbp + 48]>
new  < memchr$5:>

2616:
old  <	mov [rsi], al>
new  <	; SignedGreaterThanEqual 19 index size>

2617:
old  <>
new  <	mov eax, [rbp + 36]>

2618:
old  < memset$10:>
new  <	cmp [rbp + 40], eax>

2619:
old  <	; BinaryAdd index index 1>
new  <	jge memchr$19>

2620:
old  <	inc dword [rbp + 49]>
new  <>

2621:
old  <>
new  < memchr$6:>

2622:
old  < memset$11:>
new  <	; IntegralToIntegral Â£temporary3467 index>

2623:
old  <	; Goto 5>
new  <	mov eax, [rbp + 40]>

2624:
old  <	jmp memset$5>
new  <	mov rbx, 4294967295>

2625:
old  <>
new  <	and rax, rbx>

2626:
old  < memset$12:>
new  <>

2627:
old  <	; Return block>
new  < memchr$7:>

2628:
old  <	mov rbx, [rbp + 24]>
new  <	; BinaryAdd Â£temporary3469 charBlock Â£temporary3467>

2629:
old  <	mov rax, [rbp]>
new  <	mov rsi, [rbp + 44]>

2630:
old  <	mov rdi, [rbp + 16]>
new  <	add rsi, rax>

2631:
old  <	mov rbp, [rbp + 8]>
new  <>

2632:
old  <	jmp rax>
new  < memchr$8:>

2633:
old  <>
new  <	; Dereference Â£temporary3466 -> Â£temporary3469 Â£temporary3469 0>

2634:
old  < memset$13:>
new  <>

2635:
old  <	; FunctionEnd memset>
new  < memchr$9:>

PrintTest.asm
CharacterTest.asm
126:
old  <	; IntegralToIntegral Â£temporary3530 c>
new  <	; IntegralToIntegral Â£temporary3517 c>

135:
old  <	; Parameter 57 signedint Â£temporary3530>
new  <	; Parameter 57 signedint Â£temporary3517>

158:
old  <	; IntegralToIntegral Â£temporary3532 c>
new  <	; IntegralToIntegral Â£temporary3519 c>

167:
old  <	; Parameter 57 signedint Â£temporary3532>
new  <	; Parameter 57 signedint Â£temporary3519>

174:
old  <	; IntegralToIntegral Â£temporary3533 c>
new  <	; IntegralToIntegral Â£temporary3520 c>

183:
old  <	; Parameter 85 signedint Â£temporary3533>
new  <	; Parameter 85 signedint Â£temporary3520>

197:
old  <	; GetReturnValue Â£temporary3534>
new  <	; GetReturnValue Â£temporary3521>

200:
old  <	; Equal 19 Â£temporary3534 0>
new  <	; Equal 19 Â£temporary3521 0>

205:
old  <	; Assign Â£temporary3536 "Yes">
new  <	; Assign Â£temporary3523 "Yes">

213:
old  <	; Assign Â£temporary3536 "No">
new  <	; Assign Â£temporary3523 "No">

217:
old  <	; Parameter 61 pointer Â£temporary3536>
new  <	; Parameter 61 pointer Â£temporary3523>

240:
old  <	; IntegralToIntegral Â£temporary3538 c>
new  <	; IntegralToIntegral Â£temporary3525 c>

249:
old  <	; Parameter 57 signedint Â£temporary3538>
new  <	; Parameter 57 signedint Â£temporary3525>

256:
old  <	; IntegralToIntegral Â£temporary3539 c>
new  <	; IntegralToIntegral Â£temporary3526 c>

265:
old  <	; Parameter 85 signedint Â£temporary3539>
new  <	; Parameter 85 signedint Â£temporary3526>

279:
old  <	; GetReturnValue Â£temporary3540>
new  <	; GetReturnValue Â£temporary3527>

282:
old  <	; Equal 36 Â£temporary3540 0>
new  <	; Equal 36 Â£temporary3527 0>

287:
old  <	; Assign Â£temporary3542 "Yes">
new  <	; Assign Â£temporary3529 "Yes">

295:
old  <	; Assign Â£temporary3542 "No">
new  <	; Assign Â£temporary3529 "No">

299:
old  <	; Parameter 61 pointer Â£temporary3542>
new  <	; Parameter 61 pointer Â£temporary3529>

322:
old  <	; IntegralToIntegral Â£temporary3544 c>
new  <	; IntegralToIntegral Â£temporary3531 c>

331:
old  <	; Parameter 57 signedint Â£temporary3544>
new  <	; Parameter 57 signedint Â£temporary3531>

338:
old  <	; IntegralToIntegral Â£temporary3545 c>
new  <	; IntegralToIntegral Â£temporary3532 c>

347:
old  <	; Parameter 85 signedint Â£temporary3545>
new  <	; Parameter 85 signedint Â£temporary3532>

361:
old  <	; GetReturnValue Â£temporary3546>
new  <	; GetReturnValue Â£temporary3533>

364:
old  <	; Equal 53 Â£temporary3546 0>
new  <	; Equal 53 Â£temporary3533 0>

369:
old  <	; Assign Â£temporary3548 "Yes">
new  <	; Assign Â£temporary3535 "Yes">

377:
old  <	; Assign Â£temporary3548 "No">
new  <	; Assign Â£temporary3535 "No">

381:
old  <	; Parameter 61 pointer Â£temporary3548>
new  <	; Parameter 61 pointer Â£temporary3535>

404:
old  <	; IntegralToIntegral Â£temporary3550 c>
new  <	; IntegralToIntegral Â£temporary3537 c>

413:
old  <	; Parameter 57 signedint Â£temporary3550>
new  <	; Parameter 57 signedint Â£temporary3537>

420:
old  <	; IntegralToIntegral Â£temporary3551 c>
new  <	; IntegralToIntegral Â£temporary3538 c>

429:
old  <	; Parameter 85 signedint Â£temporary3551>
new  <	; Parameter 85 signedint Â£temporary3538>

443:
old  <	; GetReturnValue Â£temporary3552>
new  <	; GetReturnValue Â£temporary3539>

446:
old  <	; Equal 70 Â£temporary3552 0>
new  <	; Equal 70 Â£temporary3539 0>

451:
old  <	; Assign Â£temporary3554 "Yes">
new  <	; Assign Â£temporary3541 "Yes">

459:
old  <	; Assign Â£temporary3554 "No">
new  <	; Assign Â£temporary3541 "No">

463:
old  <	; Parameter 61 pointer Â£temporary3554>
new  <	; Parameter 61 pointer Â£temporary3541>

486:
old  <	; IntegralToIntegral Â£temporary3556 c>
new  <	; IntegralToIntegral Â£temporary3543 c>

495:
old  <	; Parameter 57 signedint Â£temporary3556>
new  <	; Parameter 57 signedint Â£temporary3543>

502:
old  <	; IntegralToIntegral Â£temporary3557 c>
new  <	; IntegralToIntegral Â£temporary3544 c>

511:
old  <	; Parameter 85 signedint Â£temporary3557>
new  <	; Parameter 85 signedint Â£temporary3544>

525:
old  <	; GetReturnValue Â£temporary3558>
new  <	; GetReturnValue Â£temporary3545>

528:
old  <	; Equal 87 Â£temporary3558 0>
new  <	; Equal 87 Â£temporary3545 0>

533:
old  <	; Assign Â£temporary3560 "Yes">
new  <	; Assign Â£temporary3547 "Yes">

541:
old  <	; Assign Â£temporary3560 "No">
new  <	; Assign Â£temporary3547 "No">

545:
old  <	; Parameter 61 pointer Â£temporary3560>
new  <	; Parameter 61 pointer Â£temporary3547>

568:
old  <	; IntegralToIntegral Â£temporary3562 c>
new  <	; IntegralToIntegral Â£temporary3549 c>

577:
old  <	; Parameter 57 signedint Â£temporary3562>
new  <	; Parameter 57 signedint Â£temporary3549>

584:
old  <	; IntegralToIntegral Â£temporary3563 c>
new  <	; IntegralToIntegral Â£temporary3550 c>

593:
old  <	; Parameter 85 signedint Â£temporary3563>
new  <	; Parameter 85 signedint Â£temporary3550>

607:
old  <	; GetReturnValue Â£temporary3564>
new  <	; GetReturnValue Â£temporary3551>

610:
old  <	; Equal 104 Â£temporary3564 0>
new  <	; Equal 104 Â£temporary3551 0>

615:
old  <	; Assign Â£temporary3566 "Yes">
new  <	; Assign Â£temporary3553 "Yes">

623:
old  <	; Assign Â£temporary3566 "No">
new  <	; Assign Â£temporary3553 "No">

627:
old  <	; Parameter 61 pointer Â£temporary3566>
new  <	; Parameter 61 pointer Â£temporary3553>

650:
old  <	; IntegralToIntegral Â£temporary3568 c>
new  <	; IntegralToIntegral Â£temporary3555 c>

659:
old  <	; Parameter 57 signedint Â£temporary3568>
new  <	; Parameter 57 signedint Â£temporary3555>

666:
old  <	; IntegralToIntegral Â£temporary3569 c>
new  <	; IntegralToIntegral Â£temporary3556 c>

675:
old  <	; Parameter 85 signedint Â£temporary3569>
new  <	; Parameter 85 signedint Â£temporary3556>

689:
old  <	; GetReturnValue Â£temporary3570>
new  <	; GetReturnValue Â£temporary3557>

692:
old  <	; Equal 121 Â£temporary3570 0>
new  <	; Equal 121 Â£temporary3557 0>

697:
old  <	; Assign Â£temporary3572 "Yes">
new  <	; Assign Â£temporary3559 "Yes">

705:
old  <	; Assign Â£temporary3572 "No">
new  <	; Assign Â£temporary3559 "No">

709:
old  <	; Parameter 61 pointer Â£temporary3572>
new  <	; Parameter 61 pointer Â£temporary3559>

732:
old  <	; IntegralToIntegral Â£temporary3574 c>
new  <	; IntegralToIntegral Â£temporary3561 c>

741:
old  <	; Parameter 57 signedint Â£temporary3574>
new  <	; Parameter 57 signedint Â£temporary3561>

748:
old  <	; IntegralToIntegral Â£temporary3575 c>
new  <	; IntegralToIntegral Â£temporary3562 c>

757:
old  <	; Parameter 85 signedint Â£temporary3575>
new  <	; Parameter 85 signedint Â£temporary3562>

771:
old  <	; GetReturnValue Â£temporary3576>
new  <	; GetReturnValue Â£temporary3563>

774:
old  <	; Equal 138 Â£temporary3576 0>
new  <	; Equal 138 Â£temporary3563 0>

779:
old  <	; Assign Â£temporary3578 "Yes">
new  <	; Assign Â£temporary3565 "Yes">

787:
old  <	; Assign Â£temporary3578 "No">
new  <	; Assign Â£temporary3565 "No">

791:
old  <	; Parameter 61 pointer Â£temporary3578>
new  <	; Parameter 61 pointer Â£temporary3565>

814:
old  <	; IntegralToIntegral Â£temporary3580 c>
new  <	; IntegralToIntegral Â£temporary3567 c>

823:
old  <	; Parameter 57 signedint Â£temporary3580>
new  <	; Parameter 57 signedint Â£temporary3567>

830:
old  <	; IntegralToIntegral Â£temporary3581 c>
new  <	; IntegralToIntegral Â£temporary3568 c>

839:
old  <	; Parameter 85 signedint Â£temporary3581>
new  <	; Parameter 85 signedint Â£temporary3568>

853:
old  <	; GetReturnValue Â£temporary3582>
new  <	; GetReturnValue Â£temporary3569>

856:
old  <	; Equal 155 Â£temporary3582 0>
new  <	; Equal 155 Â£temporary3569 0>

861:
old  <	; Assign Â£temporary3584 "Yes">
new  <	; Assign Â£temporary3571 "Yes">

869:
old  <	; Assign Â£temporary3584 "No">
new  <	; Assign Â£temporary3571 "No">

873:
old  <	; Parameter 61 pointer Â£temporary3584>
new  <	; Parameter 61 pointer Â£temporary3571>

896:
old  <	; IntegralToIntegral Â£temporary3586 c>
new  <	; IntegralToIntegral Â£temporary3573 c>

905:
old  <	; Parameter 57 signedint Â£temporary3586>
new  <	; Parameter 57 signedint Â£temporary3573>

912:
old  <	; IntegralToIntegral Â£temporary3587 c>
new  <	; IntegralToIntegral Â£temporary3574 c>

921:
old  <	; Parameter 85 signedint Â£temporary3587>
new  <	; Parameter 85 signedint Â£temporary3574>

935:
old  <	; GetReturnValue Â£temporary3588>
new  <	; GetReturnValue Â£temporary3575>

938:
old  <	; Equal 172 Â£temporary3588 0>
new  <	; Equal 172 Â£temporary3575 0>

943:
old  <	; Assign Â£temporary3590 "Yes">
new  <	; Assign Â£temporary3577 "Yes">

951:
old  <	; Assign Â£temporary3590 "No">
new  <	; Assign Â£temporary3577 "No">

955:
old  <	; Parameter 61 pointer Â£temporary3590>
new  <	; Parameter 61 pointer Â£temporary3577>

978:
old  <	; IntegralToIntegral Â£temporary3592 c>
new  <	; IntegralToIntegral Â£temporary3579 c>

987:
old  <	; Parameter 57 signedint Â£temporary3592>
new  <	; Parameter 57 signedint Â£temporary3579>

994:
old  <	; IntegralToIntegral Â£temporary3593 c>
new  <	; IntegralToIntegral Â£temporary3580 c>

1003:
old  <	; Parameter 85 signedint Â£temporary3593>
new  <	; Parameter 85 signedint Â£temporary3580>

1017:
old  <	; GetReturnValue Â£temporary3594>
new  <	; GetReturnValue Â£temporary3581>

1020:
old  <	; Equal 189 Â£temporary3594 0>
new  <	; Equal 189 Â£temporary3581 0>

1025:
old  <	; Assign Â£temporary3596 "Yes">
new  <	; Assign Â£temporary3583 "Yes">

1033:
old  <	; Assign Â£temporary3596 "No">
new  <	; Assign Â£temporary3583 "No">

1037:
old  <	; Parameter 61 pointer Â£temporary3596>
new  <	; Parameter 61 pointer Â£temporary3583>

1060:
old  <	; IntegralToIntegral Â£temporary3598 c>
new  <	; IntegralToIntegral Â£temporary3585 c>

1069:
old  <	; Parameter 57 signedint Â£temporary3598>
new  <	; Parameter 57 signedint Â£temporary3585>

1076:
old  <	; IntegralToIntegral Â£temporary3599 c>
new  <	; IntegralToIntegral Â£temporary3586 c>

1085:
old  <	; Parameter 85 signedint Â£temporary3599>
new  <	; Parameter 85 signedint Â£temporary3586>

1099:
old  <	; GetReturnValue Â£temporary3600>
new  <	; GetReturnValue Â£temporary3587>

1102:
old  <	; IntegralToIntegral Â£temporary3601 Â£temporary3600>
new  <	; IntegralToIntegral Â£temporary3588 Â£temporary3587>

1109:
old  <	; IntegralToIntegral Â£temporary3602 Â£temporary3601>
new  <	; IntegralToIntegral Â£temporary3589 Â£temporary3588>

1117:
old  <	; Parameter 61 signedint Â£temporary3602>
new  <	; Parameter 61 signedint Â£temporary3589>

1140:
old  <	; IntegralToIntegral Â£temporary3604 c>
new  <	; IntegralToIntegral Â£temporary3591 c>

1149:
old  <	; Parameter 57 signedint Â£temporary3604>
new  <	; Parameter 57 signedint Â£temporary3591>

1156:
old  <	; IntegralToIntegral Â£temporary3605 c>
new  <	; IntegralToIntegral Â£temporary3592 c>

1165:
old  <	; Parameter 85 signedint Â£temporary3605>
new  <	; Parameter 85 signedint Â£temporary3592>

1179:
old  <	; GetReturnValue Â£temporary3606>
new  <	; GetReturnValue Â£temporary3593>

1182:
old  <	; IntegralToIntegral Â£temporary3607 Â£temporary3606>
new  <	; IntegralToIntegral Â£temporary3594 Â£temporary3593>

1189:
old  <	; IntegralToIntegral Â£temporary3608 Â£temporary3607>
new  <	; IntegralToIntegral Â£temporary3595 Â£temporary3594>

1197:
old  <	; Parameter 61 signedint Â£temporary3608>
new  <	; Parameter 61 signedint Â£temporary3595>

FloatTest.asm
LimitsTest.asm
AssertTest.asm
75:
old  <	; Address Â£temporary3626 n>
new  <	; Address Â£temporary3613 n>

80:
old  <	; Parameter 60 pointer Â£temporary3626>
new  <	; Parameter 60 pointer Â£temporary3613>

StringTest.asm
183:
old  <	; GetReturnValue Â£temporary3638>
new  <	; GetReturnValue Â£temporary3625>

186:
old  <	; Parameter 284 signedint Â£temporary3638>
new  <	; Parameter 284 signedint Â£temporary3625>

252:
old  <	; Dereference Â£temporary3642 -> u u 0>
new  <	; Dereference Â£temporary3629 -> u u 0>

257:
old  <	; Assign Â£temporary3642 -> u 0>
new  <	; Assign Â£temporary3629 -> u 0>

330:
old  <	; GetReturnValue Â£temporary3645>
new  <	; GetReturnValue Â£temporary3632>

333:
old  <	; Assign i Â£temporary3645>
new  <	; Assign i Â£temporary3632>

363:
old  <	; BinaryAdd Â£temporary3647 i 2>
new  <	; BinaryAdd Â£temporary3634 i 2>

368:
old  <	; IntegralToIntegral Â£temporary3649 Â£temporary3647>
new  <	; IntegralToIntegral Â£temporary3636 Â£temporary3634>

373:
old  <	; BinaryAdd Â£temporary3651 u Â£temporary3649>
new  <	; BinaryAdd Â£temporary3638 u Â£temporary3636>

379:
old  <	; Dereference Â£temporary3648 -> Â£temporary3651 Â£temporary3651 0>
new  <	; Dereference Â£temporary3635 -> Â£temporary3638 Â£temporary3638 0>

382:
old  <	; Assign Â£temporary3648 -> Â£temporary3651 0>
new  <	; Assign Â£temporary3635 -> Â£temporary3638 0>

445:
old  <	; GetReturnValue Â£temporary3653>
new  <	; GetReturnValue Â£temporary3640>

448:
old  <	; Parameter 276 signedint Â£temporary3653>
new  <	; Parameter 276 signedint Â£temporary3640>

498:
old  <	; GetReturnValue Â£temporary3655>
new  <	; GetReturnValue Â£temporary3642>

501:
old  <	; Parameter 276 signedint Â£temporary3655>
new  <	; Parameter 276 signedint Â£temporary3642>

539:
old  <	; GetReturnValue Â£temporary3657>
new  <	; GetReturnValue Â£temporary3644>

542:
old  <	; Assign p Â£temporary3657>
new  <	; Assign p Â£temporary3644>

558:
old  <	; BinarySubtract Â£temporary3660 p s>
new  <	; BinarySubtract Â£temporary3647 p s>

563:
old  <	; IntegralToIntegral Â£temporary3662 Â£temporary3660>
new  <	; IntegralToIntegral Â£temporary3649 Â£temporary3647>

570:
old  <	; Assign Â£temporary3662 -1>
new  <	; Assign Â£temporary3649 -1>

574:
old  <	; Parameter 276 signedint Â£temporary3662>
new  <	; Parameter 276 signedint Â£temporary3649>

612:
old  <	; GetReturnValue Â£temporary3664>
new  <	; GetReturnValue Â£temporary3651>

615:
old  <	; Assign p Â£temporary3664>
new  <	; Assign p Â£temporary3651>

631:
old  <	; BinarySubtract Â£temporary3667 p s>
new  <	; BinarySubtract Â£temporary3654 p s>

636:
old  <	; IntegralToIntegral Â£temporary3669 Â£temporary3667>
new  <	; IntegralToIntegral Â£temporary3656 Â£temporary3654>

643:
old  <	; Assign Â£temporary3669 -1>
new  <	; Assign Â£temporary3656 -1>

647:
old  <	; Parameter 276 signedint Â£temporary3669>
new  <	; Parameter 276 signedint Â£temporary3656>

685:
old  <	; GetReturnValue Â£temporary3671>
new  <	; GetReturnValue Â£temporary3658>

688:
old  <	; Assign p Â£temporary3671>
new  <	; Assign p Â£temporary3658>

704:
old  <	; BinarySubtract Â£temporary3674 p s>
new  <	; BinarySubtract Â£temporary3661 p s>

709:
old  <	; IntegralToIntegral Â£temporary3676 Â£temporary3674>
new  <	; IntegralToIntegral Â£temporary3663 Â£temporary3661>

716:
old  <	; Assign Â£temporary3676 -1>
new  <	; Assign Â£temporary3663 -1>

720:
old  <	; Parameter 276 signedint Â£temporary3676>
new  <	; Parameter 276 signedint Â£temporary3663>

758:
old  <	; GetReturnValue Â£temporary3678>
new  <	; GetReturnValue Â£temporary3665>

761:
old  <	; Assign p Â£temporary3678>
new  <	; Assign p Â£temporary3665>

777:
old  <	; BinarySubtract Â£temporary3681 p s>
new  <	; BinarySubtract Â£temporary3668 p s>

782:
old  <	; IntegralToIntegral Â£temporary3683 Â£temporary3681>
new  <	; IntegralToIntegral Â£temporary3670 Â£temporary3668>

789:
old  <	; Assign Â£temporary3683 -1>
new  <	; Assign Â£temporary3670 -1>

793:
old  <	; Parameter 276 signedint Â£temporary3683>
new  <	; Parameter 276 signedint Â£temporary3670>

887:
old  <	; Dereference Â£temporary3688 -> u u 0>
new  <	; Dereference Â£temporary3675 -> u u 0>

892:
old  <	; Assign Â£temporary3688 -> u 0>
new  <	; Assign Â£temporary3675 -> u 0>

956:
old  <	; GetReturnValue Â£temporary3690>
new  <	; GetReturnValue Â£temporary3677>

959:
old  <	; Assign p Â£temporary3690>
new  <	; Assign p Â£temporary3677>

975:
old  <	; BinarySubtract Â£temporary3693 p s>
new  <	; BinarySubtract Â£temporary3680 p s>

980:
old  <	; IntegralToIntegral Â£temporary3695 Â£temporary3693>
new  <	; IntegralToIntegral Â£temporary3682 Â£temporary3680>

987:
old  <	; Assign Â£temporary3695 -1>
new  <	; Assign Â£temporary3682 -1>

991:
old  <	; Parameter 276 signedint Â£temporary3695>
new  <	; Parameter 276 signedint Â£temporary3682>

1033:
old  <	; GetReturnValue Â£temporary3697>
new  <	; GetReturnValue Â£temporary3684>

1036:
old  <	; Assign p Â£temporary3697>
new  <	; Assign p Â£temporary3684>

1052:
old  <	; BinarySubtract Â£temporary3700 p s>
new  <	; BinarySubtract Â£temporary3687 p s>

1057:
old  <	; IntegralToIntegral Â£temporary3702 Â£temporary3700>
new  <	; IntegralToIntegral Â£temporary3689 Â£temporary3687>

1064:
old  <	; Assign Â£temporary3702 -1>
new  <	; Assign Â£temporary3689 -1>

1068:
old  <	; Parameter 276 signedint Â£temporary3702>
new  <	; Parameter 276 signedint Â£temporary3689>

1118:
old  <	; GetReturnValue Â£temporary3704>
new  <	; GetReturnValue Â£temporary3691>

1121:
old  <	; Parameter 276 signedint Â£temporary3704>
new  <	; Parameter 276 signedint Â£temporary3691>

1166:
old  <	; GetReturnValue Â£temporary3706>
new  <	; GetReturnValue Â£temporary3693>

1169:
old  <	; Parameter 276 signedint Â£temporary3706>
new  <	; Parameter 276 signedint Â£temporary3693>

1214:
old  <	; GetReturnValue Â£temporary3708>
new  <	; GetReturnValue Â£temporary3695>

1217:
old  <	; Parameter 276 signedint Â£temporary3708>
new  <	; Parameter 276 signedint Â£temporary3695>

1258:
old  <	; GetReturnValue Â£temporary3710>
new  <	; GetReturnValue Â£temporary3697>

1261:
old  <	; Parameter 276 pointer Â£temporary3710>
new  <	; Parameter 276 pointer Â£temporary3697>

1299:
old  <	; GetReturnValue Â£temporary3712>
new  <	; GetReturnValue Â£temporary3699>

1302:
old  <	; Assign p Â£temporary3712>
new  <	; Assign p Â£temporary3699>

1356:
old  <	; GetReturnValue Â£temporary3715>
new  <	; GetReturnValue Â£temporary3702>

1359:
old  <	; Assign p Â£temporary3715>
new  <	; Assign p Â£temporary3702>

SetJmpTest.asm
45:
old  < @6945$main:>
new  < @6941$main:>

48:
old  < @6945$main$1:>
new  < @6941$main$1:>

52:
old  < @6945$main$2:>
new  < @6941$main$2:>

54:
old  <	mov qword [rbp + 40], @6945$main$3>
new  <	mov qword [rbp + 40], @6941$main$3>

60:
old  < @6945$main$3:>
new  < @6941$main$3:>

63:
old  < @6945$main$4:>
new  < @6941$main$4:>

66:
old  < @6945$main$5:>
new  < @6941$main$5:>

70:
old  < @6945$main$6:>
new  < @6941$main$6:>

71:
old  <	; Address Â£temporary3717 x>
new  <	; Address Â£temporary3704 x>

75:
old  < @6945$main$7:>
new  < @6941$main$7:>

76:
old  <	; Parameter 72 pointer Â£temporary3717>
new  <	; Parameter 72 pointer Â£temporary3704>

79:
old  < @6945$main$8:>
new  < @6941$main$8:>

81:
old  <	mov qword [rbp + 40], @6945$main$9>
new  <	mov qword [rbp + 40], @6941$main$9>

88:
old  < @6945$main$9:>
new  < @6941$main$9:>

91:
old  < @6945$main$10:>
new  < @6941$main$10:>

94:
old  < @6945$main$11:>
new  < @6941$main$11:>

98:
old  < @6945$main$12:>
new  < @6941$main$12:>

100:
old  <	mov qword [rbp + 40], @6945$main$13>
new  <	mov qword [rbp + 40], @6941$main$13>

105:
old  < @6945$main$13:>
new  < @6941$main$13:>

108:
old  < @6945$main$14:>
new  < @6941$main$14:>

109:
old  <	; GetReturnValue Â£temporary3719>
new  <	; GetReturnValue Â£temporary3706>

111:
old  < @6945$main$15:>
new  < @6941$main$15:>

112:
old  <	; IntegralToIntegral Â£temporary3720 Â£temporary3719>
new  <	; IntegralToIntegral Â£temporary3707 Â£temporary3706>

116:
old  < @6945$main$16:>
new  < @6941$main$16:>

117:
old  <	; Assign message Â£temporary3720>
new  <	; Assign message Â£temporary3707>

120:
old  < @6945$main$17:>
new  < @6941$main$17:>

123:
old  <	jne @6945$main$32>
new  <	jne @6941$main$32>

125:
old  < @6945$main$18:>
new  < @6941$main$18:>

128:
old  < @6945$main$19:>
new  < @6941$main$19:>

132:
old  < @6945$main$20:>
new  < @6941$main$20:>

136:
old  < @6945$main$21:>
new  < @6941$main$21:>

140:
old  < @6945$main$22:>
new  < @6941$main$22:>

143:
old  < @6945$main$23:>
new  < @6941$main$23:>

147:
old  < @6945$main$24:>
new  < @6941$main$24:>

151:
old  < @6945$main$25:>
new  < @6941$main$25:>

153:
old  <	mov qword [rbp + 80], @6945$main$26>
new  <	mov qword [rbp + 80], @6941$main$26>

158:
old  < @6945$main$26:>
new  < @6941$main$26:>

161:
old  < @6945$main$27:>
new  < @6941$main$27:>

162:
old  <	; GetReturnValue Â£temporary3722>
new  <	; GetReturnValue Â£temporary3709>

164:
old  < @6945$main$28:>
new  < @6941$main$28:>

165:
old  <	; Parameter 80 double Â£temporary3722>
new  <	; Parameter 80 double Â£temporary3709>

168:
old  < @6945$main$29:>
new  < @6941$main$29:>

170:
old  <	mov qword [rbp + 40], @6945$main$30>
new  <	mov qword [rbp + 40], @6941$main$30>

177:
old  < @6945$main$30:>
new  < @6941$main$30:>

180:
old  < @6945$main$31:>
new  < @6941$main$31:>

182:
old  <	jmp @6945$main$37>
new  <	jmp @6941$main$37>

184:
old  < @6945$main$32:>
new  < @6941$main$32:>

187:
old  < @6945$main$33:>
new  < @6941$main$33:>

191:
old  < @6945$main$34:>
new  < @6941$main$34:>

196:
old  < @6945$main$35:>
new  < @6941$main$35:>

198:
old  <	mov qword [rbp + 40], @6945$main$36>
new  <	mov qword [rbp + 40], @6941$main$36>

205:
old  < @6945$main$36:>
new  < @6941$main$36:>

208:
old  < @6945$main$37:>
new  < @6941$main$37:>

215:
old  < @6945$main$38:>
new  < @6941$main$38:>

250:
old  <	; GetReturnValue Â£temporary3729>
new  <	; GetReturnValue Â£temporary3716>

253:
old  <	; Return Â£temporary3729>
new  <	; SetReturnValue>

254:
old  <	mov rax, [rbp]>
new  <>

255:
old  <	mov rdi, [rbp + 16]>
new  < inverse$9:>

256:
old  <	mov rbp, [rbp + 8]>
new  <	; Return Â£temporary3716>

257:
old  <	jmp rax>
new  <	mov rax, [rbp]>

258:
old  <>
new  <	mov rdi, [rbp + 16]>

259:
old  < inverse$9:>
new  <	mov rbp, [rbp + 8]>

260:
old  <	; FunctionEnd inverse>
new  <	jmp rax>

262:
old  <section .data>
new  < inverse$10:>

263:
old  <>
new  <	; FunctionEnd inverse>

264:
old  <string_Division20by20Zero2E#:>
new  <>

265:
old  <	; Initializer String Division by Zero.>
new  <section .data>

266:
old  <	db "Division by Zero.", 0>
new  <>

267:
old  <>
new  <string_Division20by20Zero2E#:>

268:
old  <section .text>
new  <	; Initializer String Division by Zero.>

269:
old  <>
new  <	db "Division by Zero.", 0>

270:
old  < divide:>
new  <>

271:
old  <	; PushFloat y>
new  <section .text>

272:
old  <	fld qword [rbp + 32]>
new  <>

273:
old  <>
new  < divide:>

274:
old  < divide$1:>
new  <	; PushFloat y>

275:
old  <	; PushFloat 0>
new  <	fld qword [rbp + 32]>

276:
old  <	fldz>
new  <>

277:
old  <>
new  < divide$1:>

278:
old  < divide$2:>
new  <	; PushFloat 0>

279:
old  <	; Equal 7 y 0>
new  <	fldz>

280:
old  <	fcompp>
new  <>

281:
old  <	fstsw ax>
new  < divide$2:>

282:
old  <	sahf>
new  <	; Equal 8 y 0>

283:
old  <	je divide$7>
new  <	fcompp>

284:
old  <>
new  <	fstsw ax>

285:
old  < divide$3:>
new  <	sahf>

286:
old  <	; PushFloat x>
new  <	je divide$8>

287:
old  <	fld qword [rbp + 24]>
new  <>

288:
old  <>
new  < divide$3:>

289:
old  < divide$4:>
new  <	; PushFloat x>

290:
old  <	; PushFloat y>
new  <	fld qword [rbp + 24]>

291:
old  <	fld qword [rbp + 32]>
new  <>

292:
old  <>
new  < divide$4:>

293:
old  < divide$5:>
new  <	; PushFloat y>

294:
old  <	; SignedDivide Â£temporary3733 x y>
new  <	fld qword [rbp + 32]>

295:
old  <	fdiv>
new  <>

296:
old  <>
new  < divide$5:>

297:
old  < divide$6:>
new  <	; SignedDivide Â£temporary3720 x y>

298:
old  <	; Return Â£temporary3733>
new  <	fdiv>

299:
old  <	mov rax, [rbp]>
new  <>

300:
old  <	mov rdi, [rbp + 16]>
new  < divide$6:>

301:
old  <	mov rbp, [rbp + 8]>
new  <	; SetReturnValue>

302:
old  <	jmp rax>
new  <>

303:
old  <>
new  < divide$7:>

304:
old  < divide$7:>
new  <	; Return Â£temporary3720>

305:
old  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov rax, [rbp]>

306:
old  <>
new  <	mov rdi, [rbp + 16]>

307:
old  < divide$8:>
new  <	mov rbp, [rbp + 8]>

308:
old  <	; Parameter 64 pointer buffer>
new  <	jmp rax>

309:
old  <	mov qword [rbp + 64], buffer>
new  <>

310:
old  <>
new  < divide$8:>

311:
old  < divide$9:>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

312:
old  <	; IntegralToIntegral Â£temporary3734 "Division by Zero.">
new  <>

313:
old  <	mov eax, string_Division20by20Zero2E#>
new  < divide$9:>

314:
old  <>
new  <	; Parameter 64 pointer buffer>

315:
old  < divide$10:>
new  <	mov qword [rbp + 64], buffer>

316:
old  <	; Parameter 72 signedint Â£temporary3734>
new  <>

317:
old  <	mov [rbp + 72], eax>
new  < divide$10:>

318:
old  <>
new  <	; IntegralToIntegral Â£temporary3721 "Division by Zero.">

319:
old  < divide$11:>
new  <	mov eax, string_Division20by20Zero2E#>

320:
old  <	; Call 40 longjmp 0>
new  <>

321:
old  <	mov qword [rbp + 40], divide$12>
new  < divide$11:>

322:
old  <	mov [rbp + 48], rbp>
new  <	; Parameter 72 signedint Â£temporary3721>

323:
old  <	add rbp, 40>
new  <	mov [rbp + 72], eax>

324:
old  <	jmp longjmp>
new  <>

325:
old  <>
new  < divide$12:>

326:
old  < divide$12:>
new  <	; Call 40 longjmp 0>

327:
old  <	; PostCall 40>
new  <	mov qword [rbp + 40], divide$13>

328:
old  <>
new  <	mov [rbp + 48], rbp>

329:
old  < divide$13:>
new  <	add rbp, 40>

330:
old  <	; PushFloat 0>
new  <	jmp longjmp>

331:
old  <	fldz>
new  <>

332:
old  <>
new  < divide$13:>

333:
old  < divide$14:>
new  <	; PostCall 40>

334:
old  <	; Return 0>
new  <>

335:
old  <	mov rax, [rbp]>
new  < divide$14:>

336:
old  <	mov rdi, [rbp + 16]>
new  <	; PushFloat 0>

337:
old  <	mov rbp, [rbp + 8]>
new  <	fldz>

338:
old  <	jmp rax>
new  <>

339:
old  <>
new  < divide$15:>

340:
old  < divide$15:>
new  <	; SetReturnValue>

341:
old  <	; FunctionEnd divide>
new  <>

342:
old  <>
new  < divide$16:>

343:
old  <section .text>
new  <	; Return 0>

344:
old  <>
new  <	mov rax, [rbp]>

345:
old  < setjmp_test:>
new  <	mov rdi, [rbp + 16]>

346:
old  <	; Return>
new  <	mov rbp, [rbp + 8]>

347:
old  <	mov rax, [rbp]>
new  <	jmp rax>

348:
old  <	mov rdi, [rbp + 16]>
new  <>

349:
old  <	mov rbp, [rbp + 8]>
new  < divide$17:>

350:
old  <	jmp rax>
new  <	; FunctionEnd divide>

352:
old  < setjmp_test$1:>
new  <section .text>

353:
old  <	; FunctionEnd setjmp_test>
new  <>

MathTest.asm
324:
old  <	; GetReturnValue Â£temporary3754>
new  <	; GetReturnValue Â£temporary3741>

327:
old  <	; Parameter 72 double Â£temporary3754>
new  <	; Parameter 72 double Â£temporary3741>

406:
old  <	; GetReturnValue Â£temporary3759>
new  <	; GetReturnValue Â£temporary3746>

409:
old  <	; Parameter 72 double Â£temporary3759>
new  <	; Parameter 72 double Â£temporary3746>

1407:
old  <	; GetReturnValue Â£temporary3832>
new  <	; GetReturnValue Â£temporary3819>

1410:
old  <	; Parameter 72 double Â£temporary3832>
new  <	; Parameter 72 double Â£temporary3819>

1471:
old  <	; GetReturnValue Â£temporary3834>
new  <	; GetReturnValue Â£temporary3821>

1474:
old  <	; Parameter 72 double Â£temporary3834>
new  <	; Parameter 72 double Â£temporary3821>

1535:
old  <	; GetReturnValue Â£temporary3836>
new  <	; GetReturnValue Â£temporary3823>

1538:
old  <	; Parameter 72 double Â£temporary3836>
new  <	; Parameter 72 double Â£temporary3823>

1599:
old  <	; GetReturnValue Â£temporary3838>
new  <	; GetReturnValue Â£temporary3825>

1602:
old  <	; Parameter 72 double Â£temporary3838>
new  <	; Parameter 72 double Â£temporary3825>

1663:
old  <	; GetReturnValue Â£temporary3840>
new  <	; GetReturnValue Â£temporary3827>

1666:
old  <	; Parameter 72 double Â£temporary3840>
new  <	; Parameter 72 double Â£temporary3827>

1727:
old  <	; GetReturnValue Â£temporary3842>
new  <	; GetReturnValue Â£temporary3829>

1730:
old  <	; Parameter 72 double Â£temporary3842>
new  <	; Parameter 72 double Â£temporary3829>

1791:
old  <	; GetReturnValue Â£temporary3844>
new  <	; GetReturnValue Â£temporary3831>

1794:
old  <	; Parameter 72 double Â£temporary3844>
new  <	; Parameter 72 double Â£temporary3831>

1855:
old  <	; GetReturnValue Â£temporary3846>
new  <	; GetReturnValue Â£temporary3833>

1858:
old  <	; Parameter 72 double Â£temporary3846>
new  <	; Parameter 72 double Â£temporary3833>

1919:
old  <	; GetReturnValue Â£temporary3848>
new  <	; GetReturnValue Â£temporary3835>

1922:
old  <	; Parameter 72 double Â£temporary3848>
new  <	; Parameter 72 double Â£temporary3835>

1983:
old  <	; GetReturnValue Â£temporary3850>
new  <	; GetReturnValue Â£temporary3837>

1986:
old  <	; Parameter 72 double Â£temporary3850>
new  <	; Parameter 72 double Â£temporary3837>

2047:
old  <	; GetReturnValue Â£temporary3852>
new  <	; GetReturnValue Â£temporary3839>

2050:
old  <	; Parameter 72 double Â£temporary3852>
new  <	; Parameter 72 double Â£temporary3839>

2111:
old  <	; GetReturnValue Â£temporary3854>
new  <	; GetReturnValue Â£temporary3841>

2114:
old  <	; Parameter 72 double Â£temporary3854>
new  <	; Parameter 72 double Â£temporary3841>

2175:
old  <	; GetReturnValue Â£temporary3856>
new  <	; GetReturnValue Â£temporary3843>

2178:
old  <	; Parameter 72 double Â£temporary3856>
new  <	; Parameter 72 double Â£temporary3843>

2239:
old  <	; GetReturnValue Â£temporary3858>
new  <	; GetReturnValue Â£temporary3845>

2242:
old  <	; Parameter 72 double Â£temporary3858>
new  <	; Parameter 72 double Â£temporary3845>

2303:
old  <	; GetReturnValue Â£temporary3860>
new  <	; GetReturnValue Â£temporary3847>

2306:
old  <	; Parameter 72 double Â£temporary3860>
new  <	; Parameter 72 double Â£temporary3847>

2367:
old  <	; GetReturnValue Â£temporary3862>
new  <	; GetReturnValue Â£temporary3849>

2370:
old  <	; Parameter 72 double Â£temporary3862>
new  <	; Parameter 72 double Â£temporary3849>

2410:
old  <	; Address Â£temporary3864 j>
new  <	; Address Â£temporary3851 j>

2415:
old  <	; Parameter 68 pointer Â£temporary3864>
new  <	; Parameter 68 pointer Â£temporary3851>

2429:
old  <	; GetReturnValue Â£temporary3865>
new  <	; GetReturnValue Â£temporary3852>

2526:
old  <	; Address Â£temporary3869 w>
new  <	; Address Â£temporary3856 w>

2531:
old  <	; Parameter 72 pointer Â£temporary3869>
new  <	; Parameter 72 pointer Â£temporary3856>

2545:
old  <	; GetReturnValue Â£temporary3870>
new  <	; GetReturnValue Â£temporary3857>

2738:
old  <	; GetReturnValue Â£temporary3933>
new  <	; GetReturnValue Â£temporary3920>

2741:
old  <	; Parameter 88 double Â£temporary3933>
new  <	; Parameter 88 double Â£temporary3920>

2818:
old  <	; GetReturnValue Â£temporary3935>
new  <	; GetReturnValue Â£temporary3922>

2821:
old  <	; Parameter 88 double Â£temporary3935>
new  <	; Parameter 88 double Â£temporary3922>

2898:
old  <	; GetReturnValue Â£temporary3937>
new  <	; GetReturnValue Â£temporary3924>

2901:
old  <	; Parameter 88 double Â£temporary3937>
new  <	; Parameter 88 double Â£temporary3924>

2963:
old  <	; FloatingToIntegral Â£temporary3940 y>
new  <	; FloatingToIntegral Â£temporary3927 y>

2968:
old  <	; Parameter 80 signedint Â£temporary3940>
new  <	; Parameter 80 signedint Â£temporary3927>

2987:
old  <	; FloatingToIntegral Â£temporary3941 y>
new  <	; FloatingToIntegral Â£temporary3928 y>

2992:
old  <	; Parameter 116 signedint Â£temporary3941>
new  <	; Parameter 116 signedint Â£temporary3928>

3006:
old  <	; GetReturnValue Â£temporary3942>
new  <	; GetReturnValue Â£temporary3929>

3009:
old  <	; Parameter 84 double Â£temporary3942>
new  <	; Parameter 84 double Â£temporary3929>

FileTest.asm
7:
old  <	extern fscanf>
new  <	extern feof>

8:
old  <	extern sqrt>
new  <	extern fscanf>

9:
old  <	extern fclose>
new  <	extern sqrt>

10:
old  <	extern rename>
new  <	extern printf>

11:
old  <	extern printf>
new  <	extern fclose>

12:
old  <	extern errno>
new  <	extern rename>

13:
old  <	extern strerror>
new  <	extern errno>

14:
old  <	extern remove>
new  <	extern strerror>

15:
old  <	extern fgetc>
new  <	extern remove>

16:
old  <	extern putc>
new  <	extern fgetc>

17:
old  <	extern fwrite>
new  <	extern putc>

18:
old  <	extern fread>
new  <	extern fwrite>

19:
old  <	extern malloc>
new  <	extern fread>

20:
old  <	extern free>
new  <	extern malloc>

21:
old  <	extern feof>
new  <	extern free>

22:
old  <	extern fseek>
new  <	extern $StackTop>

23:
old  <	extern ftell>
new  <>

24:
old  <	extern putchar>
new  <>

25:
old  <	extern fileexists>
new  <section .data>

26:
old  <	extern tmpfile>
new  <>

27:
old  <	extern toupper>
new  <string_in2Etxt#:>

28:
old  <	extern rewind>
new  <	; Initializer String in.txt>

29:
old  <	extern $StackTop>
new  <	db "in.txt", 0>

31:
old  <>
new  <section .data>

32:
old  <section .data>
new  <>

33:
old  <>
new  <string_r#:>

34:
old  <string_r#:>
new  <	; Initializer String r>

35:
old  <	; Initializer String r>
new  <	db "r", 0>

36:
old  <	db "r", 0>
new  <>

37:
old  <>
new  <section .data>

38:
old  <section .data>
new  <>

39:
old  <>
new  <string_outX2Etxt#:>

40:
old  <string_w#:>
new  <	; Initializer String outX.txt>

41:
old  <	; Initializer String w>
new  <	db "outX.txt", 0>

42:
old  <	db "w", 0>
new  <>

43:
old  <>
new  <section .data>

44:
old  <section .data>
new  <>

45:
old  <>
new  <string_w#:>

46:
old  <string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#:>
new  <	; Initializer String w>

47:
old  <	; Initializer String Assertion failed: "%s" in file %s at line %i\n>
new  <	db "w", 0>

48:
old  <	db "Assertion failed: ", 34, "%s", 34, " in file %s at line %i", 10, 0>
new  <>

49:
old  <>
new  <section .data>

50:
old  <section .data>
new  <>

51:
old  <>
new  <string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#:>

52:
old  <string_inFilePtrPtr20213D20NULL#:>
new  <	; Initializer String Assertion failed: "%s" in file %s at line %i\n>

53:
old  <	; Initializer String inFilePtrPtr != NULL>
new  <	db "Assertion failed: ", 34, "%s", 34, " in file %s at line %i", 10, 0>

54:
old  <	db "inFilePtrPtr != NULL", 0>
new  <>

55:
old  <>
new  <section .data>

56:
old  <section .data>
new  <>

57:
old  <>
new  <string_inFilePtr20213D20NULL#:>

58:
old  <string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CFileTest2Ec#:>
new  <	; Initializer String inFilePtr != NULL>

59:
old  <	; Initializer String C:\Users\Stefan\Documents\vagrant\homestead\code\code\FileTest.c>
new  <	db "inFilePtr != NULL", 0>

60:
old  <	db "C:\Users\Stefan\Documents\vagrant\homestead\code\code\FileTest.c", 0>
new  <>

61:
old  <>
new  <section .data>

62:
old  <section .data>
new  <>

63:
old  <>
new  <string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CFileTest2Ec#:>

64:
old  <string_outFilePtrPtr20213D20NULL#:>
new  <	; Initializer String C:\Users\Stefan\Documents\vagrant\homestead\code\code\FileTest.c>

65:
old  <	; Initializer String outFilePtrPtr != NULL>
new  <	db "C:\Users\Stefan\Documents\vagrant\homestead\code\code\FileTest.c", 0>

66:
old  <	db "outFilePtrPtr != NULL", 0>
new  <>

67:
old  <>
new  <section .data>

68:
old  <section .data>
new  <>

69:
old  <>
new  <string_outFilePtr20213D20NULL#:>

70:
old  <string_25i#:>
new  <	; Initializer String outFilePtr != NULL>

71:
old  <	; Initializer String %i>
new  <	db "outFilePtr != NULL", 0>

72:
old  <	db "%i", 0>
new  <>

73:
old  <>
new  <section .data>

74:
old  <section .data>
new  <>

75:
old  <>
new  <string_25lf#:>

76:
old  <string_25lf#:>
new  <	; Initializer String %lf>

77:
old  <	; Initializer String %lf>
new  <	db "%lf", 0>

78:
old  <	db "%lf", 0>
new  <>

79:
old  <>
new  <section .data>

80:
old  <section .data>
new  <>

81:
old  <>
new  <string_X2025f0A#:>

82:
old  <string_25f0A#:>
new  <	; Initializer String X %f\n>

83:
old  <	; Initializer String %f\n>
new  <	db "X %f", 10, 0>

84:
old  <	db "%f", 10, 0>
new  <>

85:
old  <>
new  <section .data>

86:
old  <section .data>
new  <>

87:
old  <>
new  <string_0A#:>

88:
old  <string_X#:>
new  <	; Initializer String \n>

89:
old  <	; Initializer String X>
new  <	db 10, 0>

90:
old  <	db "X", 0>
new  <>

91:
old  <>
new  <section .data>

92:
old  <section .data>
new  <>

93:
old  <>
new  <string_outY2Etxt#:>

94:
old  <string_Y#:>
new  <	; Initializer String outY.txt>

95:
old  <	; Initializer String Y>
new  <	db "outY.txt", 0>

96:
old  <	db "Y", 0>
new  <>

97:
old  <>
new  <section .data>

98:
old  <section .data>
new  <>

99:
old  <>
new  <string_25i#:>

100:
old  <string_2225s2220has20been20renamed20to202225s222E0A#:>
new  <	; Initializer String %i>

101:
old  <	; Initializer String "%s" has been renamed to "%s".\n>
new  <	db "%i", 0>

102:
old  <	db 34, "%s", 34, " has been renamed to ", 34, "%s", 34, ".", 10, 0>
new  <>

103:
old  <>
new  <section .data>

104:
old  <section .data>
new  <>

105:
old  <>
new  <string_size2025i0A#:>

106:
old  <string_Error2025i3A2025s2E0A#:>
new  <	; Initializer String size %i\n>

107:
old  <	; Initializer String Error %i: %s.\n>
new  <	db "size %i", 10, 0>

108:
old  <	db "Error %i: %s.", 10, 0>
new  <>

109:
old  <>
new  <section .data>

110:
old  <section .data>
new  <>

111:
old  <>
new  <string_Y20size2025i0A#:>

112:
old  <string_Z#:>
new  <	; Initializer String Y size %i\n>

113:
old  <	; Initializer String Z>
new  <	db "Y size %i", 10, 0>

114:
old  <	db "Z", 0>
new  <>

115:
old  <>
new  <section .data>

116:
old  <section .data>
new  <>

117:
old  <>
new  <string_Y2025f0A#:>

118:
old  <string_2225s2220has20been20removed2E0A#:>
new  <	; Initializer String Y %f\n>

119:
old  <	; Initializer String "%s" has been removed.\n>
new  <	db "Y %f", 10, 0>

120:
old  <	db 34, "%s", 34, " has been removed.", 10, 0>
new  <>

121:
old  <>
new  <section .data>

122:
old  <section .data>
new  <>

123:
old  <>
new  <string_X#:>

124:
old  <string_PBook2Etxt#:>
new  <	; Initializer String X>

125:
old  <	; Initializer String PBook.txt>
new  <	db "X", 0>

126:
old  <	db "PBook.txt", 0>
new  <>

127:
old  <>
new  <section .data>

128:
old  <section .data>
new  <>

129:
old  <>
new  <string_Y#:>

130:
old  <string_inFilePtr20213D20NULL#:>
new  <	; Initializer String Y>

131:
old  <	; Initializer String inFilePtr != NULL>
new  <	db "Y", 0>

132:
old  <	db "inFilePtr != NULL", 0>
new  <>

133:
old  <>
new  <section .data>

134:
old  <section .data>
new  <>

135:
old  <>
new  <string_Hello20X#:>

136:
old  <string_0A252D24s20252D24s0A#:>
new  <	; Initializer String Hello X>

137:
old  <	; Initializer String \n%-24s %-24s\n>
new  <	db "Hello X", 0>

138:
old  <	db 10, "%-24s %-24s", 10, 0>
new  <>

139:
old  <>
new  <section .data>

140:
old  <section .data>
new  <>

141:
old  <>
new  <string_2225s2220has20been20renamed20to202225s222E0A#:>

142:
old  <string_Name#:>
new  <	; Initializer String "%s" has been renamed to "%s".\n>

143:
old  <	; Initializer String Name>
new  <	db 34, "%s", 34, " has been renamed to ", 34, "%s", 34, ".", 10, 0>

144:
old  <	db "Name", 0>
new  <>

145:
old  <>
new  <section .data>

146:
old  <section .data>
new  <>

147:
old  <>
new  <string_Error2025i3A2025s2E0A#:>

148:
old  <string_Phone#:>
new  <	; Initializer String Error %i: %s.\n>

149:
old  <	; Initializer String Phone>
new  <	db "Error %i: %s.", 10, 0>

150:
old  <	db "Phone", 0>
new  <>

151:
old  <>
new  <section .data>

152:
old  <section .data>
new  <>

153:
old  <>
new  <string_Z#:>

154:
old  <string_252D24s20252D24s0A#:>
new  <	; Initializer String Z>

155:
old  <	; Initializer String %-24s %-24s\n>
new  <	db "Z", 0>

156:
old  <	db "%-24s %-24s", 10, 0>
new  <>

157:
old  <>
new  <section .data>

158:
old  <section .data>
new  <>

159:
old  <>
new  <string_Hello20Z#:>

160:
old  <string_3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D#:>
new  <	; Initializer String Hello Z>

161:
old  <	; Initializer String ========================>
new  <	db "Hello Z", 0>

162:
old  <	db "========================", 0>
new  <>

163:
old  <>
new  <section .data>

164:
old  <section .data>
new  <>

165:
old  <>
new  <string_2225s2220has20been20removed2E0A#:>

166:
old  <string_25s25s#:>
new  <	; Initializer String "%s" has been removed.\n>

167:
old  <	; Initializer String %s%s>
new  <	db 34, "%s", 34, " has been removed.", 10, 0>

168:
old  <	db "%s%s", 0>
new  <>

169:
old  <>
new  <section .data>

170:
old  <section .data>
new  <>

171:
old  <>
new  <string_PBook2Etxt#:>

172:
old  <string_0A#:>
new  <	; Initializer String PBook.txt>

173:
old  <	; Initializer String \n>
new  <	db "PBook.txt", 0>

174:
old  <	db 10, 0>
new  <>

175:
old  <>
new  <section .data>

176:
old  <section .data>
new  <>

177:
old  <>
new  <string_0A252D24s20252D24s0A#:>

178:
old  <string_Flow12Etxt#:>
new  <	; Initializer String \n%-24s %-24s\n>

179:
old  <	; Initializer String Flow1.txt>
new  <	db 10, "%-24s %-24s", 10, 0>

180:
old  <	db "Flow1.txt", 0>
new  <>

181:
old  <>
new  <section .data>

182:
old  <section .data>
new  <>

183:
old  <>
new  <string_Name#:>

184:
old  <string_Flow22Etxt#:>
new  <	; Initializer String Name>

185:
old  <	; Initializer String Flow2.txt>
new  <	db "Name", 0>

186:
old  <	db "Flow2.txt", 0>
new  <>

187:
old  <>
new  <section .data>

188:
old  <section .data>
new  <>

189:
old  <>
new  <string_Phone#:>

190:
old  <string_outFilePtr20213D20NULL#:>
new  <	; Initializer String Phone>

191:
old  <	; Initializer String outFilePtr != NULL>
new  <	db "Phone", 0>

192:
old  <	db "outFilePtr != NULL", 0>
new  <>

193:
old  <>
new  <section .data>

194:
old  <section .data>
new  <>

195:
old  <>
new  <string_252D24s20252D24s0A#:>

196:
old  <string_Test2Ebin#:>
new  <	; Initializer String %-24s %-24s\n>

197:
old  <	; Initializer String Test.bin>
new  <	db "%-24s %-24s", 10, 0>

198:
old  <	db "Test.bin", 0>
new  <>

199:
old  <>
new  <section .data>

200:
old  <section .data>
new  <>

201:
old  <>
new  <string_3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D#:>

202:
old  <string_size12025i0A#:>
new  <	; Initializer String ========================>

203:
old  <	; Initializer String size1 %i\n>
new  <	db "========================", 0>

204:
old  <	db "size1 %i", 10, 0>
new  <>

205:
old  <>
new  <section .data>

206:
old  <section .data>
new  <>

207:
old  <>
new  <string_25s25s#:>

208:
old  <string_index12025i3A20value2025f0A#:>
new  <	; Initializer String %s%s>

209:
old  <	; Initializer String index1 %i: value %f\n>
new  <	db "%s%s", 0>

210:
old  <	db "index1 %i: value %f", 10, 0>
new  <>

211:
old  <>
new  <section .data>

212:
old  <section .data>
new  <>

213:
old  <>
new  <string_Flow12Etxt#:>

214:
old  <string_size22025i0A#:>
new  <	; Initializer String Flow1.txt>

215:
old  <	; Initializer String size2 %i\n>
new  <	db "Flow1.txt", 0>

216:
old  <	db "size2 %i", 10, 0>
new  <>

217:
old  <>
new  <section .data>

218:
old  <section .data>
new  <>

219:
old  <>
new  <string_Flow22Etxt#:>

220:
old  <string_index22025i3A20value2025f0A#:>
new  <	; Initializer String Flow2.txt>

221:
old  <	; Initializer String index2 %i: value %f\n>
new  <	db "Flow2.txt", 0>

222:
old  <	db "index2 %i: value %f", 10, 0>
new  <>

223:
old  <>
new  <section .data>

224:
old  <section .data>
new  <>

225:
old  <>
new  <string_TestX2Ebin#:>

226:
old  <string_size32025i20total2025i0A#:>
new  <	; Initializer String TestX.bin>

227:
old  <	; Initializer String size3 %i total %i\n>
new  <	db "TestX.bin", 0>

228:
old  <	db "size3 %i total %i", 10, 0>
new  <>

229:
old  <>
new  <section .data>

230:
old  <section .data>
new  <>

231:
old  <>
new  <string_size13A2025i0A#:>

232:
old  <string_p20213D20NULL#:>
new  <	; Initializer String size1: %i\n>

233:
old  <	; Initializer String p != NULL>
new  <	db "size1: %i", 10, 0>

234:
old  <	db "p != NULL", 0>
new  <>

235:
old  <>
new  <section .data>

236:
old  <section .data>
new  <>

237:
old  <>
new  <string_index13A2025i3A20value2025f0A#:>

238:
old  <string_malloc2025u2025u2025u0A#:>
new  <	; Initializer String index1: %i: value %f\n>

239:
old  <	; Initializer String malloc %u %u %u\n>
new  <	db "index1: %i: value %f", 10, 0>

240:
old  <	db "malloc %u %u %u", 10, 0>
new  <>

241:
old  <>
new  <section .data>

242:
old  <section .data>
new  <>

243:
old  <>
new  <string_TestY2Ebin#:>

244:
old  <string_index32025i3A20value2025f0A#:>
new  <	; Initializer String TestY.bin>

245:
old  <	; Initializer String index3 %i: value %f\n>
new  <	db "TestY.bin", 0>

246:
old  <	db "index3 %i: value %f", 10, 0>
new  <>

247:
old  <>
new  <section .data>

248:
old  <section .data>
new  <>

249:
old  <>
new  <string_index23A2025i3A20value2025f0A#:>

250:
old  <string_Adam20Bertilsson#:>
new  <	; Initializer String index2: %i: value %f\n>

251:
old  <	; Initializer String Adam Bertilsson>
new  <	db "index2: %i: value %f", 10, 0>

252:
old  <	db "Adam Bertilsson", 0>
new  <>

253:
old  <>
new  <section .data>

254:
old  <section .data>
new  <>

255:
old  <>
new  <string_index33A2025i3A20value2025f0A#:>

256:
old  <string_Bertil20Ceasarsson#:>
new  <	; Initializer String index3: %i: value %f\n>

257:
old  <	; Initializer String Bertil Ceasarsson>
new  <	db "index3: %i: value %f", 10, 0>

258:
old  <	db "Bertil Ceasarsson", 0>
new  <>

259:
old  <>
new  <section .data>

260:
old  <section .data>
new  <>

261:
old  <>
new  <string_size43A2025i20total2025i0A#:>

262:
old  <string_Ceasar20Davidsson#:>
new  <	; Initializer String size4: %i total %i\n>

263:
old  <	; Initializer String Ceasar Davidsson>
new  <	db "size4: %i total %i", 10, 0>

264:
old  <	db "Ceasar Davidsson", 0>
new  <>

265:
old  <>
new  <section .data>

266:
old  <section .data>
new  <>

267:
old  <>
new  <string_p20213D20NULL#:>

268:
old  <string_Block2Ebin#:>
new  <	; Initializer String p != NULL>

269:
old  <	; Initializer String Block.bin>
new  <	db "p != NULL", 0>

270:
old  <	db "Block.bin", 0>
new  <>

271:
old  <>
new  <section .data>

272:
old  <section .data>
new  <>

273:
old  <>
new  <string_malloc43A2025u2025u2025u0A#:>

274:
old  <string_Name20203A2025s0A#:>
new  <	; Initializer String malloc4: %u %u %u\n>

275:
old  <	; Initializer String Name  : %s\n>
new  <	db "malloc4: %u %u %u", 10, 0>

276:
old  <	db "Name  : %s", 10, 0>
new  <>

277:
old  <>
new  <section .data>

278:
old  <section .data>
new  <>

279:
old  <>
new  <string_index43A2025i3A20value2025f0A#:>

280:
old  <string_Phone203A2025d0A#:>
new  <	; Initializer String index4: %i: value %f\n>

281:
old  <	; Initializer String Phone : %d\n>
new  <	db "index4: %i: value %f", 10, 0>

282:
old  <	db "Phone : %d", 10, 0>
new  <>

283:
old  <>
new  <section .data>

284:
old  <section .data>
new  <>

285:
old  <>
new  <string_Adam20Bertilsson#:>

286:
old  <string_Test12Etxt#:>
new  <	; Initializer String Adam Bertilsson>

287:
old  <	; Initializer String Test1.txt>
new  <	db "Adam Bertilsson", 0>

288:
old  <	db "Test1.txt", 0>
new  <>

289:
old  <>
new  <section .data>

290:
old  <section .data>
new  <>

291:
old  <>
new  <string_Bertil20Ceasarsson#:>

292:
old  <string_0A0A#:>
new  <	; Initializer String Bertil Ceasarsson>

293:
old  <	; Initializer String \n\n>
new  <	db "Bertil Ceasarsson", 0>

294:
old  <	db 10, 10, 0>
new  <>

295:
old  <>
new  <section .data>

296:
old  <section .data>
new  <>

297:
old  <>
new  <string_Ceasar20Davidsson#:>

298:
old  <string_fileexists20X2025s0A#:>
new  <	; Initializer String Ceasar Davidsson>

299:
old  <	; Initializer String fileexists X %s\n>
new  <	db "Ceasar Davidsson", 0>

300:
old  <	db "fileexists X %s", 10, 0>
new  <>

301:
old  <>
new  <section .data>

302:
old  <section .data>
new  <>

303:
old  <>
new  <string_Block2Ebin#:>

304:
old  <string_Yes#:>
new  <	; Initializer String Block.bin>

305:
old  <	; Initializer String Yes>
new  <	db "Block.bin", 0>

306:
old  <	db "Yes", 0>
new  <>

307:
old  <>
new  <section .data>

308:
old  <section .data>
new  <>

309:
old  <>
new  <string_Name20203A2025s0A#:>

310:
old  <string_No#:>
new  <	; Initializer String Name  : %s\n>

311:
old  <	; Initializer String No>
new  <	db "Name  : %s", 10, 0>

312:
old  <	db "No", 0>
new  <>

313:
old  <>
new  <section .data>

314:
old  <section .data>
new  <>

315:
old  <>
new  <string_Phone203A2025d0A#:>

316:
old  <string_fileexists20Y2025s0A0A#:>
new  <	; Initializer String Phone : %d\n>

317:
old  <	; Initializer String fileexists Y %s\n\n>
new  <	db "Phone : %d", 10, 0>

318:
old  <	db "fileexists Y %s", 10, 10, 0>
new  <>

319:
old  <>
new  <section .data>

320:
old  <section .data>
new  <>

321:
old  <>
new  <container4bytes#:>

322:
old  <string_PBookX2Etxt#:>
new  <	; InitializerZero 4>

323:
old  <	; Initializer String PBookX.txt>
new  <	times 4 db 0>

324:
old  <	db "PBookX.txt", 0>
new  <>

325:
old  <>
new  <section .data>

326:
old  <section .data>
new  <>

327:
old  <>
new  <int4$8#:>

328:
old  <string_r2B#:>
new  <	; Initializer SignedInt 8>

329:
old  <	; Initializer String r+>
new  <	dd 8>

330:
old  <	db "r+", 0>
new  <>

331:
old  <>
new  <section .data>

332:
old  <section .data>
new  <>

333:
old  <>
new  <int8$8#:>

334:
old  <string_inOutFilePtr20213D20NULL#:>
new  <	; Initializer Pointer 8>

335:
old  <	; Initializer String inOutFilePtr != NULL>
new  <	dq 8>

336:
old  <	db "inOutFilePtr != NULL", 0>
new  <>

337:
old  <>
new  <section .text>

338:
old  <section .data>
new  <>

339:
old  <>
new  < file_test:>

340:
old  <string_tempFilePtr20213D20NULL#:>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

341:
old  <	; Initializer String tempFilePtr != NULL>
new  <>

342:
old  <	db "tempFilePtr != NULL", 0>
new  < file_test$1:>

343:
old  <>
new  <	; Parameter 48 pointer "in.txt">

344:
old  <section .data>
new  <	mov qword [rbp + 48], string_in2Etxt#>

346:
old  <string_0A2D2D2D2D2D2D2D2D2D2D2D2D0A#:>
new  < file_test$2:>

347:
old  <	; Initializer String \n------------\n>
new  <	; Parameter 56 pointer "r">

348:
old  <	db 10, "------------", 10, 0>
new  <	mov qword [rbp + 56], string_r#>

350:
old  <section .data>
new  < file_test$3:>

351:
old  <>
new  <	; Call 24 fopen 0>

352:
old  <container4bytes#:>
new  <	mov qword [rbp + 24], file_test$4>

353:
old  <	; InitializerZero 4>
new  <	mov [rbp + 32], rbp>

354:
old  <	times 4 db 0>
new  <	add rbp, 24>

355:
old  <>
new  <	jmp fopen>

356:
old  <section .data>
new  <>

357:
old  <>
new  < file_test$4:>

358:
old  <Array_8#:>
new  <	; PostCall 24>

359:
old  <	; Initializer Array 8>
new  <>

360:
old  <	dq 8>
new  < file_test$5:>

361:
old  <>
new  <	; GetReturnValue Â£temporary3949>

362:
old  <section .data>
new  <>

363:
old  <>
new  < file_test$6:>

364:
old  <int4$8#:>
new  <	; Assign inFilePtr Â£temporary3949>

365:
old  <	; Initializer SignedInt 8>
new  <	mov [rbp + 24], rbx>

366:
old  <	dd 8>
new  <>

367:
old  <>
new  < file_test$7:>

368:
old  <section .data>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

370:
old  <int8$8#:>
new  < file_test$8:>

371:
old  <	; Initializer Pointer 8>
new  <	; Parameter 56 pointer "outX.txt">

372:
old  <	dq 8>
new  <	mov qword [rbp + 56], string_outX2Etxt#>

374:
old  <section .text>
new  < file_test$9:>

375:
old  <>
new  <	; Parameter 64 pointer "w">

376:
old  < file_test:>
new  <	mov qword [rbp + 64], string_w#>

377:
old  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

378:
old  <>
new  < file_test$10:>

379:
old  < file_test$1:>
new  <	; Call 32 fopen 0>

380:
old  <	; Parameter 64 pointer inFilePtrName>
new  <	mov qword [rbp + 32], file_test$11>

381:
old  <	mov rax, [rbp + 24]>
new  <	mov [rbp + 40], rbp>

382:
old  <	mov [rbp + 64], rax>
new  <	add rbp, 32>

383:
old  <>
new  <	jmp fopen>

384:
old  < file_test$2:>
new  <>

385:
old  <	; Parameter 72 pointer "r">
new  < file_test$11:>

386:
old  <	mov qword [rbp + 72], string_r#>
new  <	; PostCall 32>

388:
old  < file_test$3:>
new  < file_test$12:>

389:
old  <	; Call 40 fopen 0>
new  <	; GetReturnValue Â£temporary3950>

390:
old  <	mov qword [rbp + 40], file_test$4>
new  <>

391:
old  <	mov [rbp + 48], rbp>
new  < file_test$13:>

392:
old  <	add rbp, 40>
new  <	; Assign outFilePtr Â£temporary3950>

393:
old  <	jmp fopen>
new  <	mov [rbp + 32], rbx>

395:
old  < file_test$4:>
new  < file_test$14:>

396:
old  <	; PostCall 40>
new  <	; NotEqual 26 inFilePtr 0>

397:
old  <>
new  <	cmp qword [rbp + 24], 0>

398:
old  < file_test$5:>
new  <	jne file_test$26>

399:
old  <	; GetReturnValue Â£temporary3962>
new  <>

400:
old  <>
new  < file_test$15:>

401:
old  < file_test$6:>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

402:
old  <	; Assign inFilePtrPtr Â£temporary3962>
new  <>

403:
old  <	mov [rbp + 40], rbx>
new  < file_test$16:>

404:
old  <>
new  <	; Parameter 64 pointer stderr>

405:
old  < file_test$7:>
new  <	mov rax, [stderr]>

406:
old  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov [rbp + 64], rax>

408:
old  < file_test$8:>
new  < file_test$17:>

409:
old  <	; Parameter 72 pointer outFilePtrName>
new  <	; Parameter 72 pointer "Assertion failed: "%s" in file %s at line %i\n">

410:
old  <	mov rax, [rbp + 32]>
new  <	mov qword [rbp + 72], string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#>

411:
old  <	mov [rbp + 72], rax>
new  <>

412:
old  <>
new  < file_test$18:>

413:
old  < file_test$9:>
new  <	; Parameter 80 pointer "inFilePtr != NULL">

414:
old  <	; Parameter 80 pointer "w">
new  <	mov qword [rbp + 80], string_inFilePtr20213D20NULL#>

415:
old  <	mov qword [rbp + 80], string_w#>
new  <>

416:
old  <>
new  < file_test$19:>

417:
old  < file_test$10:>
new  <	; Parameter 88 pointer "C:\Users\Stefan\Documents\vagrant\homestead\code\code\FileTest.c">

418:
old  <	; Call 48 fopen 0>
new  <	mov qword [rbp + 88], string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CFileTest2Ec#>

419:
old  <	mov qword [rbp + 48], file_test$11>
new  <>

420:
old  <	mov [rbp + 56], rbp>
new  < file_test$20:>

421:
old  <	add rbp, 48>
new  <	; Parameter 96 signedint 12>

422:
old  <	jmp fopen>
new  <	mov dword [rbp + 96], 12>

424:
old  < file_test$11:>
new  < file_test$21:>

425:
old  <	; PostCall 48>
new  <	; Call 40 fprintf 20>

426:
old  <>
new  <	mov qword [rbp + 40], file_test$22>

427:
old  < file_test$12:>
new  <	mov [rbp + 48], rbp>

428:
old  <	; GetReturnValue Â£temporary3963>
new  <	add rbp, 40>

429:
old  <>
new  <	mov rdi, rbp>

430:
old  < file_test$13:>
new  <	add rdi, 20>

431:
old  <	; Assign outFilePtrPtr Â£temporary3963>
new  <	jmp fprintf>

432:
old  <	mov [rbp + 48], rbx>
new  <>

433:
old  <>
new  < file_test$22:>

434:
old  < file_test$14:>
new  <	; PostCall 40>

435:
old  <	; NotEqual 26 inFilePtrPtr 0>
new  <>

436:
old  <	cmp qword [rbp + 40], 0>
new  < file_test$23:>

437:
old  <	jne file_test$26>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

439:
old  < file_test$15:>
new  < file_test$24:>

440:
old  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Call 40 abort 0>

441:
old  <>
new  <	mov qword [rbp + 40], file_test$25>

442:
old  < file_test$16:>
new  <	mov [rbp + 48], rbp>

443:
old  <	; Parameter 80 pointer stderr>
new  <	add rbp, 40>

444:
old  <	mov rax, [stderr]>
new  <	jmp abort>

445:
old  <	mov [rbp + 80], rax>
new  <>

446:
old  <>
new  < file_test$25:>

447:
old  < file_test$17:>
new  <	; PostCall 40>

448:
old  <	; Parameter 88 pointer "Assertion failed: "%s" in file %s at line %i\n">
new  <>

449:
old  <	mov qword [rbp + 88], string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#>
new  < file_test$26:>

450:
old  <>
new  <	; NotEqual 38 outFilePtr 0>

451:
old  < file_test$18:>
new  <	cmp qword [rbp + 32], 0>

452:
old  <	; Parameter 96 pointer "inFilePtrPtr != NULL">
new  <	jne file_test$38>

453:
old  <	mov qword [rbp + 96], string_inFilePtrPtr20213D20NULL#>
new  <>

454:
old  <>
new  < file_test$27:>

455:
old  < file_test$19:>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

456:
old  <	; Parameter 104 pointer "C:\Users\Stefan\Documents\vagrant\homestead\code\code\FileTest.c">
new  <>

457:
old  <	mov qword [rbp + 104], string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CFileTest2Ec#>
new  < file_test$28:>

458:
old  <>
new  <	; Parameter 64 pointer stderr>

459:
old  < file_test$20:>
new  <	mov rax, [stderr]>

460:
old  <	; Parameter 112 signedint 11>
new  <	mov [rbp + 64], rax>

461:
old  <	mov dword [rbp + 112], 11>
new  <>

462:
old  <>
new  < file_test$29:>

463:
old  < file_test$21:>
new  <	; Parameter 72 pointer "Assertion failed: "%s" in file %s at line %i\n">

464:
old  <	; Call 56 fprintf 20>
new  <	mov qword [rbp + 72], string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#>

465:
old  <	mov qword [rbp + 56], file_test$22>
new  <>

466:
old  <	mov [rbp + 64], rbp>
new  < file_test$30:>

467:
old  <	add rbp, 56>
new  <	; Parameter 80 pointer "outFilePtr != NULL">

468:
old  <	mov rdi, rbp>
new  <	mov qword [rbp + 80], string_outFilePtr20213D20NULL#>

469:
old  <	add rdi, 20>
new  <>

470:
old  <	jmp fprintf>
new  < file_test$31:>

471:
old  <>
new  <	; Parameter 88 pointer "C:\Users\Stefan\Documents\vagrant\homestead\code\code\FileTest.c">

472:
old  < file_test$22:>
new  <	mov qword [rbp + 88], string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CFileTest2Ec#>

473:
old  <	; PostCall 56>
new  <>

474:
old  <>
new  < file_test$32:>

475:
old  < file_test$23:>
new  <	; Parameter 96 signedint 13>

476:
old  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov dword [rbp + 96], 13>

478:
old  < file_test$24:>
new  < file_test$33:>

479:
old  <	; Call 56 abort 0>
new  <	; Call 40 fprintf 20>

480:
old  <	mov qword [rbp + 56], file_test$25>
new  <	mov qword [rbp + 40], file_test$34>

481:
old  <	mov [rbp + 64], rbp>
new  <	mov [rbp + 48], rbp>

482:
old  <	add rbp, 56>
new  <	add rbp, 40>

483:
old  <	jmp abort>
new  <	mov rdi, rbp>

484:
old  <>
new  <	add rdi, 20>

485:
old  < file_test$25:>
new  <	jmp fprintf>

486:
old  <	; PostCall 56>
new  <>

487:
old  <>
new  < file_test$34:>

488:
old  < file_test$26:>
new  <	; PostCall 40>

489:
old  <	; NotEqual 38 outFilePtrPtr 0>
new  <>

490:
old  <	cmp qword [rbp + 48], 0>
new  < file_test$35:>

491:
old  <	jne file_test$38>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

493:
old  < file_test$27:>
new  < file_test$36:>

494:
old  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Call 40 abort 0>

495:
old  <>
new  <	mov qword [rbp + 40], file_test$37>

496:
old  < file_test$28:>
new  <	mov [rbp + 48], rbp>

497:
old  <	; Parameter 80 pointer stderr>
new  <	add rbp, 40>

498:
old  <	mov rax, [stderr]>
new  <	jmp abort>

499:
old  <	mov [rbp + 80], rax>
new  <>

500:
old  <>
new  < file_test$37:>

501:
old  < file_test$29:>
new  <	; PostCall 40>

502:
old  <	; Parameter 88 pointer "Assertion failed: "%s" in file %s at line %i\n">
new  <>

503:
old  <	mov qword [rbp + 88], string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#>
new  < file_test$38:>

504:
old  <>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

505:
old  < file_test$30:>
new  <>

506:
old  <	; Parameter 96 pointer "outFilePtrPtr != NULL">
new  < file_test$39:>

507:
old  <	mov qword [rbp + 96], string_outFilePtrPtr20213D20NULL#>
new  <	; Parameter 64 pointer inFilePtr>

508:
old  <>
new  <	mov rax, [rbp + 24]>

509:
old  < file_test$31:>
new  <	mov [rbp + 64], rax>

510:
old  <	; Parameter 104 pointer "C:\Users\Stefan\Documents\vagrant\homestead\code\code\FileTest.c">
new  <>

511:
old  <	mov qword [rbp + 104], string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CFileTest2Ec#>
new  < file_test$40:>

512:
old  <>
new  <	; Call 40 feof 0>

513:
old  < file_test$32:>
new  <	mov qword [rbp + 40], file_test$41>

514:
old  <	; Parameter 112 signedint 12>
new  <	mov [rbp + 48], rbp>

515:
old  <	mov dword [rbp + 112], 12>
new  <	add rbp, 40>

516:
old  <>
new  <	jmp feof>

517:
old  < file_test$33:>
new  <>

518:
old  <	; Call 56 fprintf 20>
new  < file_test$41:>

519:
old  <	mov qword [rbp + 56], file_test$34>
new  <	; PostCall 40>

520:
old  <	mov [rbp + 64], rbp>
new  <>

521:
old  <	add rbp, 56>
new  < file_test$42:>

522:
old  <	mov rdi, rbp>
new  <	; GetReturnValue Â£temporary3959>

523:
old  <	add rdi, 20>
new  <>

524:
old  <	jmp fprintf>
new  < file_test$43:>

525:
old  <>
new  <	; NotEqual 75 Â£temporary3959 0>

526:
old  < file_test$34:>
new  <	cmp ebx, 0>

527:
old  <	; PostCall 56>
new  <	jne file_test$75>

529:
old  < file_test$35:>
new  < file_test$44:>

530:
old  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

532:
old  < file_test$36:>
new  < file_test$45:>

533:
old  <	; Call 56 abort 0>
new  <	; Parameter 72 pointer inFilePtr>

534:
old  <	mov qword [rbp + 56], file_test$37>
new  <	mov rax, [rbp + 24]>

535:
old  <	mov [rbp + 64], rbp>
new  <	mov [rbp + 72], rax>

536:
old  <	add rbp, 56>
new  <>

537:
old  <	jmp abort>
new  < file_test$46:>

538:
old  <>
new  <	; Parameter 80 pointer "%lf">

539:
old  < file_test$37:>
new  <	mov qword [rbp + 80], string_25lf#>

540:
old  <	; PostCall 56>
new  <>

541:
old  <>
new  < file_test$47:>

542:
old  < file_test$38:>
new  <	; Address Â£temporary3962 value>

543:
old  <	; Assign size 0>
new  <	mov rsi, rbp>

544:
old  <	mov dword [rbp + 56], 0>
new  <	add rsi, 40>

546:
old  < file_test$39:>
new  < file_test$48:>

547:
old  <	; PreCall 64 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter 88 pointer Â£temporary3962>

548:
old  <>
new  <	mov [rbp + 88], rsi>

549:
old  < file_test$40:>
new  <>

550:
old  <	; Parameter 88 pointer inFilePtrPtr>
new  < file_test$49:>

551:
old  <	mov rax, [rbp + 40]>
new  <	; Call 48 fscanf 8>

552:
old  <	mov [rbp + 88], rax>
new  <	mov qword [rbp + 48], file_test$50>

553:
old  <>
new  <	mov [rbp + 56], rbp>

554:
old  < file_test$41:>
new  <	add rbp, 48>

555:
old  <	; Parameter 96 pointer "%i">
new  <	mov rdi, rbp>

556:
old  <	mov qword [rbp + 96], string_25i#>
new  <	add rdi, 8>

557:
old  <>
new  <	jmp fscanf>

558:
old  < file_test$42:>
new  <>

559:
old  <	; Address Â£temporary3972 size>
new  < file_test$50:>

560:
old  <	mov rsi, rbp>
new  <	; PostCall 48>

561:
old  <	add rsi, 56>
new  <>

562:
old  <>
new  < file_test$51:>

563:
old  < file_test$43:>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

564:
old  <	; Parameter 104 pointer Â£temporary3972>
new  <>

565:
old  <	mov [rbp + 104], rsi>
new  < file_test$52:>

566:
old  <>
new  <	; Parameter 72 pointer "X %f\n">

567:
old  < file_test$44:>
new  <	mov qword [rbp + 72], string_X2025f0A#>

568:
old  <	; Call 64 fscanf 8>
new  <>

569:
old  <	mov qword [rbp + 64], file_test$45>
new  < file_test$53:>

570:
old  <	mov [rbp + 72], rbp>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

571:
old  <	add rbp, 64>
new  <>

572:
old  <	mov rdi, rbp>
new  < file_test$54:>

573:
old  <	add rdi, 8>
new  <	; PushFloat value>

574:
old  <	jmp fscanf>
new  <	fld qword [rbp + 40]>

576:
old  < file_test$45:>
new  < file_test$55:>

577:
old  <	; PostCall 64>
new  <	; Parameter 104 double value>

578:
old  <>
new  <	fstp qword [rbp + 104]>

579:
old  < file_test$46:>
new  <>

580:
old  <	; Assign index 0>
new  < file_test$56:>

581:
old  <	mov dword [rbp + 60], 0>
new  <	; Call 80 sqrt 0>

582:
old  <>
new  <	mov qword [rbp + 80], file_test$57>

583:
old  < file_test$47:>
new  <	mov [rbp + 88], rbp>

584:
old  <	; SignedGreaterThanEqual 73 index size>
new  <	add rbp, 80>

585:
old  <	mov eax, [rbp + 56]>
new  <	jmp sqrt>

586:
old  <	cmp [rbp + 60], eax>
new  <>

587:
old  <	jge file_test$73>
new  < file_test$57:>

588:
old  <>
new  <	; PostCall 80>

589:
old  < file_test$48:>
new  <>

590:
old  <	; PushFloat 0>
new  < file_test$58:>

591:
old  <	fldz>
new  <	; GetReturnValue Â£temporary3964>

593:
old  < file_test$49:>
new  < file_test$59:>

594:
old  <	; PopFloat inValue>
new  <	; Parameter 80 double Â£temporary3964>

595:
old  <	fstp qword [rbp + 64]>
new  <	fstp qword [rbp + 80]>

597:
old  < file_test$50:>
new  < file_test$60:>

598:
old  <	; PreCall 72 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Call 48 printf 8>

599:
old  <>
new  <	mov qword [rbp + 48], file_test$61>

600:
old  < file_test$51:>
new  <	mov [rbp + 56], rbp>

601:
old  <	; PushFloat inValue>
new  <	add rbp, 48>

602:
old  <	fld qword [rbp + 64]>
new  <	mov rdi, rbp>

603:
old  <>
new  <	add rdi, 8>

604:
old  < file_test$52:>
new  <	jmp printf>

605:
old  <	; Parameter 96 double Â£temporary3976>
new  <>

606:
old  <	fstp qword [rbp + 96]>
new  < file_test$61:>

607:
old  <>
new  <	; PostCall 48>

608:
old  < file_test$53:>
new  <>

609:
old  <	; Call 72 sqrt 0>
new  < file_test$62:>

610:
old  <	mov qword [rbp + 72], file_test$54>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

611:
old  <	mov [rbp + 80], rbp>
new  <>

612:
old  <	add rbp, 72>
new  < file_test$63:>

613:
old  <	jmp sqrt>
new  <	; Parameter 72 pointer outFilePtr>

614:
old  <>
new  <	mov rax, [rbp + 32]>

615:
old  < file_test$54:>
new  <	mov [rbp + 72], rax>

616:
old  <	; PostCall 72>
new  <>

617:
old  <>
new  < file_test$64:>

618:
old  < file_test$55:>
new  <	; Parameter 80 pointer "X %f\n">

619:
old  <	; GetReturnValue Â£temporary3977>
new  <	mov qword [rbp + 80], string_X2025f0A#>

621:
old  < file_test$56:>
new  < file_test$65:>

622:
old  <	; PopFloat outValue>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

623:
old  <	fstp qword [rbp + 72]>
new  <>

624:
old  <>
new  < file_test$66:>

625:
old  < file_test$57:>
new  <	; PushFloat value>

626:
old  <	; PreCall 80 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	fld qword [rbp + 40]>

628:
old  < file_test$58:>
new  < file_test$67:>

629:
old  <	; Parameter 104 pointer inFilePtrPtr>
new  <	; Parameter 112 double value>

630:
old  <	mov rax, [rbp + 40]>
new  <	fstp qword [rbp + 112]>

631:
old  <	mov [rbp + 104], rax>
new  <>

632:
old  <>
new  < file_test$68:>

633:
old  < file_test$59:>
new  <	; Call 88 sqrt 0>

634:
old  <	; Parameter 112 pointer "%lf">
new  <	mov qword [rbp + 88], file_test$69>

635:
old  <	mov qword [rbp + 112], string_25lf#>
new  <	mov [rbp + 96], rbp>

636:
old  <>
new  <	add rbp, 88>

637:
old  < file_test$60:>
new  <	jmp sqrt>

638:
old  <	; Address Â£temporary3978 inValue>
new  <>

639:
old  <	mov rsi, rbp>
new  < file_test$69:>

640:
old  <	add rsi, 64>
new  <	; PostCall 88>

642:
old  < file_test$61:>
new  < file_test$70:>

643:
old  <	; Parameter 120 pointer Â£temporary3978>
new  <	; GetReturnValue Â£temporary3966>

644:
old  <	mov [rbp + 120], rsi>
new  <>

645:
old  <>
new  < file_test$71:>

646:
old  < file_test$62:>
new  <	; Parameter 88 double Â£temporary3966>

647:
old  <	; Call 80 fscanf 8>
new  <	fstp qword [rbp + 88]>

648:
old  <	mov qword [rbp + 80], file_test$63>
new  <>

649:
old  <	mov [rbp + 88], rbp>
new  < file_test$72:>

650:
old  <	add rbp, 80>
new  <	; Call 48 fprintf 8>

651:
old  <	mov rdi, rbp>
new  <	mov qword [rbp + 48], file_test$73>

652:
old  <	add rdi, 8>
new  <	mov [rbp + 56], rbp>

653:
old  <	jmp fscanf>
new  <	add rbp, 48>

654:
old  <>
new  <	mov rdi, rbp>

655:
old  < file_test$63:>
new  <	add rdi, 8>

656:
old  <	; PostCall 80>
new  <	jmp fprintf>

658:
old  < file_test$64:>
new  < file_test$73:>

659:
old  <	; PreCall 80 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; PostCall 48>

661:
old  < file_test$65:>
new  < file_test$74:>

662:
old  <	; Parameter 104 pointer outFilePtrPtr>
new  <	; Goto 38>

663:
old  <	mov rax, [rbp + 48]>
new  <	jmp file_test$38>

664:
old  <	mov [rbp + 104], rax>
new  <>

665:
old  <>
new  < file_test$75:>

666:
old  < file_test$66:>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

667:
old  <	; Parameter 112 pointer "%f\n">
new  <>

668:
old  <	mov qword [rbp + 112], string_25f0A#>
new  < file_test$76:>

669:
old  <>
new  <	; Parameter 64 pointer "\n">

670:
old  < file_test$67:>
new  <	mov qword [rbp + 64], string_0A#>

671:
old  <	; PushFloat outValue>
new  <>

672:
old  <	fld qword [rbp + 72]>
new  < file_test$77:>

673:
old  <>
new  <	; Call 40 printf 0>

674:
old  < file_test$68:>
new  <	mov qword [rbp + 40], file_test$78>

675:
old  <	; Parameter 120 double outValue>
new  <	mov [rbp + 48], rbp>

676:
old  <	fstp qword [rbp + 120]>
new  <	add rbp, 40>

677:
old  <>
new  <	mov rdi, rbp>

678:
old  < file_test$69:>
new  <	jmp printf>

679:
old  <	; Call 80 fprintf 8>
new  <>

680:
old  <	mov qword [rbp + 80], file_test$70>
new  < file_test$78:>

681:
old  <	mov [rbp + 88], rbp>
new  <	; PostCall 40>

682:
old  <	add rbp, 80>
new  <>

683:
old  <	mov rdi, rbp>
new  < file_test$79:>

684:
old  <	add rdi, 8>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

685:
old  <	jmp fprintf>
new  <>

686:
old  <>
new  < file_test$80:>

687:
old  < file_test$70:>
new  <	; Parameter 64 pointer inFilePtr>

688:
old  <	; PostCall 80>
new  <	mov rax, [rbp + 24]>

689:
old  <>
new  <	mov [rbp + 64], rax>

690:
old  < file_test$71:>
new  <>

691:
old  <	; BinaryAdd index index 1>
new  < file_test$81:>

692:
old  <	inc dword [rbp + 60]>
new  <	; Call 40 fclose 0>

693:
old  <>
new  <	mov qword [rbp + 40], file_test$82>

694:
old  < file_test$72:>
new  <	mov [rbp + 48], rbp>

695:
old  <	; Goto 47>
new  <	add rbp, 40>

696:
old  <	jmp file_test$47>
new  <	jmp fclose>

698:
old  < file_test$73:>
new  < file_test$82:>

699:
old  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; PostCall 40>

701:
old  < file_test$74:>
new  < file_test$83:>

702:
old  <	; Parameter 80 pointer inFilePtrPtr>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

703:
old  <	mov rax, [rbp + 40]>
new  <>

704:
old  <	mov [rbp + 80], rax>
new  < file_test$84:>

705:
old  <>
new  <	; Parameter 64 pointer outFilePtr>

706:
old  < file_test$75:>
new  <	mov rax, [rbp + 32]>

707:
old  <	; Call 56 fclose 0>
new  <	mov [rbp + 64], rax>

708:
old  <	mov qword [rbp + 56], file_test$76>
new  <>

709:
old  <	mov [rbp + 64], rbp>
new  < file_test$85:>

710:
old  <	add rbp, 56>
new  <	; Call 40 fclose 0>

711:
old  <	jmp fclose>
new  <	mov qword [rbp + 40], file_test$86>

712:
old  <>
new  <	mov [rbp + 48], rbp>

713:
old  < file_test$76:>
new  <	add rbp, 40>

714:
old  <	; PostCall 56>
new  <	jmp fclose>

716:
old  < file_test$77:>
new  < file_test$86:>

717:
old  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; PostCall 40>

719:
old  < file_test$78:>
new  < file_test$87:>

720:
old  <	; Parameter 80 pointer outFilePtrPtr>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

721:
old  <	mov rax, [rbp + 48]>
new  <>

722:
old  <	mov [rbp + 80], rax>
new  < file_test$88:>

723:
old  <>
new  <	; Parameter 48 pointer "in.txt">

724:
old  < file_test$79:>
new  <	mov qword [rbp + 48], string_in2Etxt#>

725:
old  <	; Call 56 fclose 0>
new  <>

726:
old  <	mov qword [rbp + 56], file_test$80>
new  < file_test$89:>

727:
old  <	mov [rbp + 64], rbp>
new  <	; Parameter 56 pointer "r">

728:
old  <	add rbp, 56>
new  <	mov qword [rbp + 56], string_r#>

729:
old  <	jmp fclose>
new  <>

730:
old  <>
new  < file_test$90:>

731:
old  < file_test$80:>
new  <	; Call 24 fopen 0>

732:
old  <	; PostCall 56>
new  <	mov qword [rbp + 24], file_test$91>

733:
old  <>
new  <	mov [rbp + 32], rbp>

734:
old  < file_test$81:>
new  <	add rbp, 24>

735:
old  <	; Assign sourceFilePtr "X">
new  <	jmp fopen>

736:
old  <	mov qword [rbp + 40], string_X#>
new  <>

737:
old  <>
new  < file_test$91:>

738:
old  < file_test$82:>
new  <	; PostCall 24>

739:
old  <	; Assign targetFilePtr "Y">
new  <>

740:
old  <	mov qword [rbp + 48], string_Y#>
new  < file_test$92:>

741:
old  <>
new  <	; GetReturnValue Â£temporary3971>

742:
old  < file_test$83:>
new  <>

743:
old  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < file_test$93:>

744:
old  <>
new  <	; Assign inFilePtr Â£temporary3971>

745:
old  < file_test$84:>
new  <	mov [rbp + 24], rbx>

746:
old  <	; Parameter 80 pointer sourceFilePtr>
new  <>

747:
old  <	mov rax, [rbp + 40]>
new  < file_test$94:>

748:
old  <	mov [rbp + 80], rax>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

750:
old  < file_test$85:>
new  < file_test$95:>

751:
old  <	; Parameter 88 pointer targetFilePtr>
new  <	; Parameter 56 pointer "outY.txt">

752:
old  <	mov rax, [rbp + 48]>
new  <	mov qword [rbp + 56], string_outY2Etxt#>

753:
old  <	mov [rbp + 88], rax>
new  <>

754:
old  <>
new  < file_test$96:>

755:
old  < file_test$86:>
new  <	; Parameter 64 pointer "w">

756:
old  <	; Call 56 rename 0>
new  <	mov qword [rbp + 64], string_w#>

757:
old  <	mov qword [rbp + 56], file_test$87>
new  <>

758:
old  <	mov [rbp + 64], rbp>
new  < file_test$97:>

759:
old  <	add rbp, 56>
new  <	; Call 32 fopen 0>

760:
old  <	jmp rename>
new  <	mov qword [rbp + 32], file_test$98>

761:
old  <>
new  <	mov [rbp + 40], rbp>

762:
old  < file_test$87:>
new  <	add rbp, 32>

763:
old  <	; PostCall 56>
new  <	jmp fopen>

765:
old  < file_test$88:>
new  < file_test$98:>

766:
old  <	; GetReturnValue Â£temporary3983>
new  <	; PostCall 32>

768:
old  < file_test$89:>
new  < file_test$99:>

769:
old  <	; NotEqual 97 Â£temporary3983 0>
new  <	; GetReturnValue Â£temporary3972>

770:
old  <	cmp ebx, 0>
new  <>

771:
old  <	jne file_test$97>
new  < file_test$100:>

772:
old  <>
new  <	; Assign outFilePtr Â£temporary3972>

773:
old  < file_test$90:>
new  <	mov [rbp + 32], rbx>

774:
old  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

775:
old  <>
new  < file_test$101:>

776:
old  < file_test$91:>
new  <	; NotEqual 113 inFilePtr 0>

777:
old  <	; Parameter 80 pointer ""%s" has been renamed to "%s".\n">
new  <	cmp qword [rbp + 24], 0>

778:
old  <	mov qword [rbp + 80], string_2225s2220has20been20renamed20to202225s222E0A#>
new  <	jne file_test$113>

780:
old  < file_test$92:>
new  < file_test$102:>

781:
old  <	; Parameter 88 pointer sourceFilePtr>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

782:
old  <	mov rax, [rbp + 40]>
new  <>

783:
old  <	mov [rbp + 88], rax>
new  < file_test$103:>

784:
old  <>
new  <	; Parameter 64 pointer stderr>

785:
old  < file_test$93:>
new  <	mov rax, [stderr]>

786:
old  <	; Parameter 96 pointer targetFilePtr>
new  <	mov [rbp + 64], rax>

787:
old  <	mov rax, [rbp + 48]>
new  <>

788:
old  <	mov [rbp + 96], rax>
new  < file_test$104:>

789:
old  <>
new  <	; Parameter 72 pointer "Assertion failed: "%s" in file %s at line %i\n">

790:
old  < file_test$94:>
new  <	mov qword [rbp + 72], string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#>

791:
old  <	; Call 56 printf 16>
new  <>

792:
old  <	mov qword [rbp + 56], file_test$95>
new  < file_test$105:>

793:
old  <	mov [rbp + 64], rbp>
new  <	; Parameter 80 pointer "inFilePtr != NULL">

794:
old  <	add rbp, 56>
new  <	mov qword [rbp + 80], string_inFilePtr20213D20NULL#>

795:
old  <	mov rdi, rbp>
new  <>

796:
old  <	add rdi, 16>
new  < file_test$106:>

797:
old  <	jmp printf>
new  <	; Parameter 88 pointer "C:\Users\Stefan\Documents\vagrant\homestead\code\code\FileTest.c">

798:
old  <>
new  <	mov qword [rbp + 88], string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CFileTest2Ec#>

799:
old  < file_test$95:>
new  <>

800:
old  <	; PostCall 56>
new  < file_test$107:>

801:
old  <>
new  <	; Parameter 96 signedint 30>

802:
old  < file_test$96:>
new  <	mov dword [rbp + 96], 30>

803:
old  <	; Goto 108>
new  <>

804:
old  <	jmp file_test$108>
new  < file_test$108:>

805:
old  <>
new  <	; Call 40 fprintf 20>

806:
old  < file_test$97:>
new  <	mov qword [rbp + 40], file_test$109>

807:
old  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov [rbp + 48], rbp>

808:
old  <>
new  <	add rbp, 40>

809:
old  < file_test$98:>
new  <	mov rdi, rbp>

810:
old  <	; Parameter 80 pointer "Error %i: %s.\n">
new  <	add rdi, 20>

811:
old  <	mov qword [rbp + 80], string_Error2025i3A2025s2E0A#>
new  <	jmp fprintf>

813:
old  < file_test$99:>
new  < file_test$109:>

814:
old  <	; Parameter 88 signedint errno>
new  <	; PostCall 40>

815:
old  <	mov eax, [errno]>
new  <>

816:
old  <	mov [rbp + 88], eax>
new  < file_test$110:>

817:
old  <>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

818:
old  < file_test$100:>
new  <>

819:
old  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < file_test$111:>

820:
old  <>
new  <	; Call 40 abort 0>

821:
old  < file_test$101:>
new  <	mov qword [rbp + 40], file_test$112>

822:
old  <	; Parameter 116 signedint errno>
new  <	mov [rbp + 48], rbp>

823:
old  <	mov eax, [errno]>
new  <	add rbp, 40>

824:
old  <	mov [rbp + 116], eax>
new  <	jmp abort>

826:
old  < file_test$102:>
new  < file_test$112:>

827:
old  <	; Call 92 strerror 0>
new  <	; PostCall 40>

828:
old  <	mov qword [rbp + 92], file_test$103>
new  <>

829:
old  <	mov [rbp + 100], rbp>
new  < file_test$113:>

830:
old  <	add rbp, 92>
new  <	; NotEqual 125 outFilePtr 0>

831:
old  <	jmp strerror>
new  <	cmp qword [rbp + 32], 0>

832:
old  <>
new  <	jne file_test$125>

833:
old  < file_test$103:>
new  <>

834:
old  <	; PostCall 92>
new  < file_test$114:>

835:
old  <>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

836:
old  < file_test$104:>
new  <>

837:
old  <	; GetReturnValue Â£temporary3986>
new  < file_test$115:>

838:
old  <>
new  <	; Parameter 64 pointer stderr>

839:
old  < file_test$105:>
new  <	mov rax, [stderr]>

840:
old  <	; Parameter 92 pointer Â£temporary3986>
new  <	mov [rbp + 64], rax>

841:
old  <	mov [rbp + 92], rbx>
new  <>

842:
old  <>
new  < file_test$116:>

843:
old  < file_test$106:>
new  <	; Parameter 72 pointer "Assertion failed: "%s" in file %s at line %i\n">

844:
old  <	; Call 56 printf 12>
new  <	mov qword [rbp + 72], string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#>

845:
old  <	mov qword [rbp + 56], file_test$107>
new  <>

846:
old  <	mov [rbp + 64], rbp>
new  < file_test$117:>

847:
old  <	add rbp, 56>
new  <	; Parameter 80 pointer "outFilePtr != NULL">

848:
old  <	mov rdi, rbp>
new  <	mov qword [rbp + 80], string_outFilePtr20213D20NULL#>

849:
old  <	add rdi, 12>
new  <>

850:
old  <	jmp printf>
new  < file_test$118:>

851:
old  <>
new  <	; Parameter 88 pointer "C:\Users\Stefan\Documents\vagrant\homestead\code\code\FileTest.c">

852:
old  < file_test$107:>
new  <	mov qword [rbp + 88], string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CFileTest2Ec#>

853:
old  <	; PostCall 56>
new  <>

854:
old  <>
new  < file_test$119:>

855:
old  < file_test$108:>
new  <	; Parameter 96 signedint 31>

856:
old  <	; Assign targetFilePtr "Z">
new  <	mov dword [rbp + 96], 31>

857:
old  <	mov qword [rbp + 40], string_Z#>
new  <>

858:
old  <>
new  < file_test$120:>

859:
old  < file_test$109:>
new  <	; Call 40 fprintf 20>

860:
old  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov qword [rbp + 40], file_test$121>

861:
old  <>
new  <	mov [rbp + 48], rbp>

862:
old  < file_test$110:>
new  <	add rbp, 40>

863:
old  <	; Parameter 72 pointer targetFilePtr>
new  <	mov rdi, rbp>

864:
old  <	mov rax, [rbp + 40]>
new  <	add rdi, 20>

865:
old  <	mov [rbp + 72], rax>
new  <	jmp fprintf>

867:
old  < file_test$111:>
new  < file_test$121:>

868:
old  <	; Call 48 remove 0>
new  <	; PostCall 40>

869:
old  <	mov qword [rbp + 48], file_test$112>
new  <>

870:
old  <	mov [rbp + 56], rbp>
new  < file_test$122:>

871:
old  <	add rbp, 48>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

872:
old  <	jmp remove>
new  <>

873:
old  <>
new  < file_test$123:>

874:
old  < file_test$112:>
new  <	; Call 40 abort 0>

875:
old  <	; PostCall 48>
new  <	mov qword [rbp + 40], file_test$124>

876:
old  <>
new  <	mov [rbp + 48], rbp>

877:
old  < file_test$113:>
new  <	add rbp, 40>

878:
old  <	; GetReturnValue Â£temporary3988>
new  <	jmp abort>

880:
old  < file_test$114:>
new  < file_test$124:>

881:
old  <	; NotEqual 121 Â£temporary3988 0>
new  <	; PostCall 40>

882:
old  <	cmp ebx, 0>
new  <>

883:
old  <	jne file_test$121>
new  < file_test$125:>

884:
old  <>
new  <	; Assign size 0>

885:
old  < file_test$115:>
new  <	mov dword [rbp + 40], 0>

886:
old  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

887:
old  <>
new  < file_test$126:>

888:
old  < file_test$116:>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

889:
old  <	; Parameter 72 pointer ""%s" has been removed.\n">
new  <>

890:
old  <	mov qword [rbp + 72], string_2225s2220has20been20removed2E0A#>
new  < file_test$127:>

891:
old  <>
new  <	; Parameter 72 pointer inFilePtr>

892:
old  < file_test$117:>
new  <	mov rax, [rbp + 24]>

893:
old  <	; Parameter 80 pointer targetFilePtr>
new  <	mov [rbp + 72], rax>

894:
old  <	mov rax, [rbp + 40]>
new  <>

895:
old  <	mov [rbp + 80], rax>
new  < file_test$128:>

896:
old  <>
new  <	; Parameter 80 pointer "%i">

897:
old  < file_test$118:>
new  <	mov qword [rbp + 80], string_25i#>

898:
old  <	; Call 48 printf 8>
new  <>

899:
old  <	mov qword [rbp + 48], file_test$119>
new  < file_test$129:>

900:
old  <	mov [rbp + 56], rbp>
new  <	; Address Â£temporary3981 size>

901:
old  <	add rbp, 48>
new  <	mov rsi, rbp>

902:
old  <	mov rdi, rbp>
new  <	add rsi, 40>

903:
old  <	add rdi, 8>
new  <>

904:
old  <	jmp printf>
new  < file_test$130:>

905:
old  <>
new  <	; Parameter 88 pointer Â£temporary3981>

906:
old  < file_test$119:>
new  <	mov [rbp + 88], rsi>

907:
old  <	; PostCall 48>
new  <>

908:
old  <>
new  < file_test$131:>

909:
old  < file_test$120:>
new  <	; Call 48 fscanf 8>

910:
old  <	; Goto 132>
new  <	mov qword [rbp + 48], file_test$132>

911:
old  <	jmp file_test$132>
new  <	mov [rbp + 56], rbp>

912:
old  <>
new  <	add rbp, 48>

913:
old  < file_test$121:>
new  <	mov rdi, rbp>

914:
old  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	add rdi, 8>

915:
old  <>
new  <	jmp fscanf>

916:
old  < file_test$122:>
new  <>

917:
old  <	; Parameter 72 pointer "Error %i: %s.\n">
new  < file_test$132:>

918:
old  <	mov qword [rbp + 72], string_Error2025i3A2025s2E0A#>
new  <	; PostCall 48>

920:
old  < file_test$123:>
new  < file_test$133:>

921:
old  <	; Parameter 80 signedint errno>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

922:
old  <	mov eax, [errno]>
new  <>

923:
old  <	mov [rbp + 80], eax>
new  < file_test$134:>

924:
old  <>
new  <	; Parameter 72 pointer "size %i\n">

925:
old  < file_test$124:>
new  <	mov qword [rbp + 72], string_size2025i0A#>

926:
old  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

927:
old  <>
new  < file_test$135:>

928:
old  < file_test$125:>
new  <	; Parameter 80 signedint size>

929:
old  <	; Parameter 108 signedint errno>
new  <	mov eax, [rbp + 40]>

930:
old  <	mov eax, [errno]>
new  <	mov [rbp + 80], eax>

931:
old  <	mov [rbp + 108], eax>
new  <>

932:
old  <>
new  < file_test$136:>

933:
old  < file_test$126:>
new  <	; Call 48 printf 4>

934:
old  <	; Call 84 strerror 0>
new  <	mov qword [rbp + 48], file_test$137>

935:
old  <	mov qword [rbp + 84], file_test$127>
new  <	mov [rbp + 56], rbp>

936:
old  <	mov [rbp + 92], rbp>
new  <	add rbp, 48>

937:
old  <	add rbp, 84>
new  <	mov rdi, rbp>

938:
old  <	jmp strerror>
new  <	add rdi, 4>

939:
old  <>
new  <	jmp printf>

940:
old  < file_test$127:>
new  <>

941:
old  <	; PostCall 84>
new  < file_test$137:>

942:
old  <>
new  <	; PostCall 48>

943:
old  < file_test$128:>
new  <>

944:
old  <	; GetReturnValue Â£temporary3991>
new  < file_test$138:>

945:
old  <>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

946:
old  < file_test$129:>
new  <>

947:
old  <	; Parameter 84 pointer Â£temporary3991>
new  < file_test$139:>

948:
old  <	mov [rbp + 84], rbx>
new  <	; Parameter 72 pointer outFilePtr>

949:
old  <>
new  <	mov rax, [rbp + 32]>

950:
old  < file_test$130:>
new  <	mov [rbp + 72], rax>

951:
old  <	; Call 48 printf 12>
new  <>

952:
old  <	mov qword [rbp + 48], file_test$131>
new  < file_test$140:>

953:
old  <	mov [rbp + 56], rbp>
new  <	; Parameter 80 pointer "Y size %i\n">

954:
old  <	add rbp, 48>
new  <	mov qword [rbp + 80], string_Y20size2025i0A#>

955:
old  <	mov rdi, rbp>
new  <>

956:
old  <	add rdi, 12>
new  < file_test$141:>

957:
old  <	jmp printf>
new  <	; Parameter 88 signedint size>

958:
old  <>
new  <	mov eax, [rbp + 40]>

959:
old  < file_test$131:>
new  <	mov [rbp + 88], eax>

960:
old  <	; PostCall 48>
new  <>

961:
old  <>
new  < file_test$142:>

962:
old  < file_test$132:>
new  <	; Call 48 fprintf 4>

963:
old  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov qword [rbp + 48], file_test$143>

964:
old  <>
new  <	mov [rbp + 56], rbp>

965:
old  < file_test$133:>
new  <	add rbp, 48>

966:
old  <	; Parameter 64 pointer "PBook.txt">
new  <	mov rdi, rbp>

967:
old  <	mov qword [rbp + 64], string_PBook2Etxt#>
new  <	add rdi, 4>

968:
old  <>
new  <	jmp fprintf>

969:
old  < file_test$134:>
new  <>

970:
old  <	; Parameter 72 pointer "r">
new  < file_test$143:>

971:
old  <	mov qword [rbp + 72], string_r#>
new  <	; PostCall 48>

973:
old  < file_test$135:>
new  < file_test$144:>

974:
old  <	; Call 40 fopen 0>
new  <	; Assign index 0>

975:
old  <	mov qword [rbp + 40], file_test$136>
new  <	mov dword [rbp + 44], 0>

976:
old  <	mov [rbp + 48], rbp>
new  <>

977:
old  <	add rbp, 40>
new  < file_test$145:>

978:
old  <	jmp fopen>
new  <	; SignedGreaterThanEqual 178 index size>

979:
old  <>
new  <	mov eax, [rbp + 40]>

980:
old  < file_test$136:>
new  <	cmp [rbp + 44], eax>

981:
old  <	; PostCall 40>
new  <	jge file_test$178>

983:
old  < file_test$137:>
new  < file_test$146:>

984:
old  <	; GetReturnValue Â£temporary3993>
new  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

986:
old  < file_test$138:>
new  < file_test$147:>

987:
old  <	; Assign inFilePtr Â£temporary3993>
new  <	; Parameter 80 pointer inFilePtr>

988:
old  <	mov [rbp + 40], rbx>
new  <	mov rax, [rbp + 24]>

989:
old  <>
new  <	mov [rbp + 80], rax>

990:
old  < file_test$139:>
new  <>

991:
old  <	; NotEqual 151 inFilePtr 0>
new  < file_test$148:>

992:
old  <	cmp qword [rbp + 40], 0>
new  <	; Parameter 88 pointer "%lf">

993:
old  <	jne file_test$151>
new  <	mov qword [rbp + 88], string_25lf#>

995:
old  < file_test$140:>
new  < file_test$149:>

996:
old  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Address Â£temporary3987 value>

997:
old  <>
new  <	mov rsi, rbp>

998:
old  < file_test$141:>
new  <	add rsi, 48>

999:
old  <	; Parameter 72 pointer stderr>
new  <>

1000:
old  <	mov rax, [stderr]>
new  < file_test$150:>

1001:
old  <	mov [rbp + 72], rax>
new  <	; Parameter 96 pointer Â£temporary3987>

1002:
old  <>
new  <	mov [rbp + 96], rsi>

1003:
old  < file_test$142:>
new  <>

1004:
old  <	; Parameter 80 pointer "Assertion failed: "%s" in file %s at line %i\n">
new  < file_test$151:>

1005:
old  <	mov qword [rbp + 80], string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#>
new  <	; Call 56 fscanf 8>

1006:
old  <>
new  <	mov qword [rbp + 56], file_test$152>

1007:
old  < file_test$143:>
new  <	mov [rbp + 64], rbp>

1008:
old  <	; Parameter 88 pointer "inFilePtr != NULL">
new  <	add rbp, 56>

1009:
old  <	mov qword [rbp + 88], string_inFilePtr20213D20NULL#>
new  <	mov rdi, rbp>

1010:
old  <>
new  <	add rdi, 8>

1011:
old  < file_test$144:>
new  <	jmp fscanf>

1012:
old  <	; Parameter 96 pointer "C:\Users\Stefan\Documents\vagrant\homestead\code\code\FileTest.c">
new  <>

1013:
old  <	mov qword [rbp + 96], string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CFileTest2Ec#>
new  < file_test$152:>

1014:
old  <>
new  <	; PostCall 56>

1015:
old  < file_test$145:>
new  <>

1016:
old  <	; Parameter 104 signedint 50>
new  < file_test$153:>

1017:
old  <	mov dword [rbp + 104], 50>
new  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1019:
old  < file_test$146:>
new  < file_test$154:>

1020:
old  <	; Call 48 fprintf 20>
new  <	; Parameter 80 pointer "Y %f\n">

1021:
old  <	mov qword [rbp + 48], file_test$147>
new  <	mov qword [rbp + 80], string_Y2025f0A#>

1022:
old  <	mov [rbp + 56], rbp>
new  <>

1023:
old  <	add rbp, 48>
new  < file_test$155:>

1024:
old  <	mov rdi, rbp>
new  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1025:
old  <	add rdi, 20>
new  <>

1026:
old  <	jmp fprintf>
new  < file_test$156:>

1027:
old  <>
new  <	; PushFloat value>

1028:
old  < file_test$147:>
new  <	fld qword [rbp + 48]>

1029:
old  <	; PostCall 48>
new  <>

1030:
old  <>
new  < file_test$157:>

1031:
old  < file_test$148:>
new  <	; Parameter 112 double value>

1032:
old  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	fstp qword [rbp + 112]>

1034:
old  < file_test$149:>
new  < file_test$158:>

1035:
old  <	; Call 48 abort 0>
new  <	; Call 88 sqrt 0>

1036:
old  <	mov qword [rbp + 48], file_test$150>
new  <	mov qword [rbp + 88], file_test$159>

1037:
old  <	mov [rbp + 56], rbp>
new  <	mov [rbp + 96], rbp>

1038:
old  <	add rbp, 48>
new  <	add rbp, 88>

1039:
old  <	jmp abort>
new  <	jmp sqrt>

1041:
old  < file_test$150:>
new  < file_test$159:>

1042:
old  <	; PostCall 48>
new  <	; PostCall 88>

1044:
old  < file_test$151:>
new  < file_test$160:>

1045:
old  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; GetReturnValue Â£temporary3989>

1047:
old  < file_test$152:>
new  < file_test$161:>

1048:
old  <	; Parameter 72 pointer "\n%-24s %-24s\n">
new  <	; Parameter 88 double Â£temporary3989>

1049:
old  <	mov qword [rbp + 72], string_0A252D24s20252D24s0A#>
new  <	fstp qword [rbp + 88]>

1051:
old  < file_test$153:>
new  < file_test$162:>

1052:
old  <	; Parameter 80 pointer "Name">
new  <	; Call 56 printf 8>

1053:
old  <	mov qword [rbp + 80], string_Name#>
new  <	mov qword [rbp + 56], file_test$163>

1054:
old  <>
new  <	mov [rbp + 64], rbp>

1055:
old  < file_test$154:>
new  <	add rbp, 56>

1056:
old  <	; Parameter 88 pointer "Phone">
new  <	mov rdi, rbp>

1057:
old  <	mov qword [rbp + 88], string_Phone#>
new  <	add rdi, 8>

1058:
old  <>
new  <	jmp printf>

1059:
old  < file_test$155:>
new  <>

1060:
old  <	; Call 48 printf 16>
new  < file_test$163:>

1061:
old  <	mov qword [rbp + 48], file_test$156>
new  <	; PostCall 56>

1062:
old  <	mov [rbp + 56], rbp>
new  <>

1063:
old  <	add rbp, 48>
new  < file_test$164:>

1064:
old  <	mov rdi, rbp>
new  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1065:
old  <	add rdi, 16>
new  <>

1066:
old  <	jmp printf>
new  < file_test$165:>

1067:
old  <>
new  <	; Parameter 80 pointer outFilePtr>

1068:
old  < file_test$156:>
new  <	mov rax, [rbp + 32]>

1069:
old  <	; PostCall 48>
new  <	mov [rbp + 80], rax>

1071:
old  < file_test$157:>
new  < file_test$166:>

1072:
old  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter 88 pointer "Y %f\n">

1073:
old  <>
new  <	mov qword [rbp + 88], string_Y2025f0A#>

1074:
old  < file_test$158:>
new  <>

1075:
old  <	; Parameter 72 pointer "%-24s %-24s\n">
new  < file_test$167:>

1076:
old  <	mov qword [rbp + 72], string_252D24s20252D24s0A#>
new  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1078:
old  < file_test$159:>
new  < file_test$168:>

1079:
old  <	; Parameter 80 pointer "========================">
new  <	; PushFloat value>

1080:
old  <	mov qword [rbp + 80], string_3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D#>
new  <	fld qword [rbp + 48]>

1082:
old  < file_test$160:>
new  < file_test$169:>

1083:
old  <	; Parameter 88 pointer "========================">
new  <	; Parameter 120 double value>

1084:
old  <	mov qword [rbp + 88], string_3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D#>
new  <	fstp qword [rbp + 120]>

1086:
old  < file_test$161:>
new  < file_test$170:>

1087:
old  <	; Call 48 printf 16>
new  <	; Call 96 sqrt 0>

1088:
old  <	mov qword [rbp + 48], file_test$162>
new  <	mov qword [rbp + 96], file_test$171>

1089:
old  <	mov [rbp + 56], rbp>
new  <	mov [rbp + 104], rbp>

1090:
old  <	add rbp, 48>
new  <	add rbp, 96>

1091:
old  <	mov rdi, rbp>
new  <	jmp sqrt>

1092:
old  <	add rdi, 16>
new  <>

1093:
old  <	jmp printf>
new  < file_test$171:>

1094:
old  <>
new  <	; PostCall 96>

1095:
old  < file_test$162:>
new  <>

1096:
old  <	; PostCall 48>
new  < file_test$172:>

1097:
old  <>
new  <	; GetReturnValue Â£temporary3991>

1098:
old  < file_test$163:>
new  <>

1099:
old  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < file_test$173:>

1100:
old  <>
new  <	; Parameter 96 double Â£temporary3991>

1101:
old  < file_test$164:>
new  <	fstp qword [rbp + 96]>

1102:
old  <	; Parameter 80 pointer inFilePtr>
new  <>

1103:
old  <	mov rax, [rbp + 40]>
new  < file_test$174:>

1104:
old  <	mov [rbp + 80], rax>
new  <	; Call 56 fprintf 8>

1105:
old  <>
new  <	mov qword [rbp + 56], file_test$175>

1106:
old  < file_test$165:>
new  <	mov [rbp + 64], rbp>

1107:
old  <	; Parameter 88 pointer "%i">
new  <	add rbp, 56>

1108:
old  <	mov qword [rbp + 88], string_25i#>
new  <	mov rdi, rbp>

1109:
old  <>
new  <	add rdi, 8>

1110:
old  < file_test$166:>
new  <	jmp fprintf>

1111:
old  <	; Address Â£temporary4000 size>
new  <>

1112:
old  <	mov rsi, rbp>
new  < file_test$175:>

1113:
old  <	add rsi, 52>
new  <	; PostCall 56>

1115:
old  < file_test$167:>
new  < file_test$176:>

1116:
old  <	; Parameter 96 pointer Â£temporary4000>
new  <	; BinaryAdd index index 1>

1117:
old  <	mov [rbp + 96], rsi>
new  <	inc dword [rbp + 44]>

1119:
old  < file_test$168:>
new  < file_test$177:>

1120:
old  <	; Call 56 fscanf 8>
new  <	; Goto 145>

1121:
old  <	mov qword [rbp + 56], file_test$169>
new  <	jmp file_test$145>

1122:
old  <	mov [rbp + 64], rbp>
new  <>

1123:
old  <	add rbp, 56>
new  < file_test$178:>

1124:
old  <	mov rdi, rbp>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1125:
old  <	add rdi, 8>
new  <>

1126:
old  <	jmp fscanf>
new  < file_test$179:>

1127:
old  <>
new  <	; Parameter 72 pointer "\n">

1128:
old  < file_test$169:>
new  <	mov qword [rbp + 72], string_0A#>

1129:
old  <	; PostCall 56>
new  <>

1130:
old  <>
new  < file_test$180:>

1131:
old  < file_test$170:>
new  <	; Call 48 printf 0>

1132:
old  <	; Assign count 0>
new  <	mov qword [rbp + 48], file_test$181>

1133:
old  <	mov dword [rbp + 48], 0>
new  <	mov [rbp + 56], rbp>

1134:
old  <>
new  <	add rbp, 48>

1135:
old  < file_test$171:>
new  <	mov rdi, rbp>

1136:
old  <	; SignedGreaterThanEqual 187 count size>
new  <	jmp printf>

1137:
old  <	mov eax, [rbp + 52]>
new  <>

1138:
old  <	cmp [rbp + 48], eax>
new  < file_test$181:>

1139:
old  <	jge file_test$187>
new  <	; PostCall 48>

1141:
old  < file_test$172:>
new  < file_test$182:>

1142:
old  <	; PreCall 96 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1144:
old  < file_test$173:>
new  < file_test$183:>

1145:
old  <	; Parameter 120 pointer inFilePtr>
new  <	; Parameter 64 pointer inFilePtr>

1146:
old  <	mov rax, [rbp + 40]>
new  <	mov rax, [rbp + 24]>

1147:
old  <	mov [rbp + 120], rax>
new  <	mov [rbp + 64], rax>

1149:
old  < file_test$174:>
new  < file_test$184:>

1150:
old  <	; Parameter 128 pointer "%s%s">
new  <	; Call 40 fclose 0>

1151:
old  <	mov qword [rbp + 128], string_25s25s#>
new  <	mov qword [rbp + 40], file_test$185>

1152:
old  <>
new  <	mov [rbp + 48], rbp>

1153:
old  < file_test$175:>
new  <	add rbp, 40>

1154:
old  <	; Parameter 136 pointer name>
new  <	jmp fclose>

1155:
old  <	mov [rbp + 136], rbp>
new  <>

1156:
old  <	add qword [rbp + 136], 56>
new  < file_test$185:>

1157:
old  <>
new  <	; PostCall 40>

1158:
old  < file_test$176:>
new  <>

1159:
old  <	; Parameter 144 pointer phone>
new  < file_test$186:>

1160:
old  <	mov [rbp + 144], rbp>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1161:
old  <	add qword [rbp + 144], 76>
new  <>

1162:
old  <>
new  < file_test$187:>

1163:
old  < file_test$177:>
new  <	; Parameter 64 pointer outFilePtr>

1164:
old  <	; Call 96 fscanf 16>
new  <	mov rax, [rbp + 32]>

1165:
old  <	mov qword [rbp + 96], file_test$178>
new  <	mov [rbp + 64], rax>

1166:
old  <	mov [rbp + 104], rbp>
new  <>

1167:
old  <	add rbp, 96>
new  < file_test$188:>

1168:
old  <	mov rdi, rbp>
new  <	; Call 40 fclose 0>

1169:
old  <	add rdi, 16>
new  <	mov qword [rbp + 40], file_test$189>

1170:
old  <	jmp fscanf>
new  <	mov [rbp + 48], rbp>

1171:
old  <>
new  <	add rbp, 40>

1172:
old  < file_test$178:>
new  <	jmp fclose>

1173:
old  <	; PostCall 96>
new  <>

1174:
old  <>
new  < file_test$189:>

1175:
old  < file_test$179:>
new  <	; PostCall 40>

1176:
old  <	; PreCall 96 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1177:
old  <>
new  < file_test$190:>

1178:
old  < file_test$180:>
new  <	; Assign sourceFilePtr "X">

1179:
old  <	; Parameter 120 pointer "%-24s %-24s\n">
new  <	mov qword [rbp + 24], string_X#>

1180:
old  <	mov qword [rbp + 120], string_252D24s20252D24s0A#>
new  <>

1181:
old  <>
new  < file_test$191:>

1182:
old  < file_test$181:>
new  <	; Assign targetFilePtr "Y">

1183:
old  <	; Parameter 128 pointer name>
new  <	mov qword [rbp + 32], string_Y#>

1184:
old  <	mov [rbp + 128], rbp>
new  <>

1185:
old  <	add qword [rbp + 128], 56>
new  < file_test$192:>

1186:
old  <>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1187:
old  < file_test$182:>
new  <>

1188:
old  <	; Parameter 136 pointer phone>
new  < file_test$193:>

1189:
old  <	mov [rbp + 136], rbp>
new  <	; Parameter 64 pointer sourceFilePtr>

1190:
old  <	add qword [rbp + 136], 76>
new  <	mov rax, [rbp + 24]>

1191:
old  <>
new  <	mov [rbp + 64], rax>

1192:
old  < file_test$183:>
new  <>

1193:
old  <	; Call 96 printf 16>
new  < file_test$194:>

1194:
old  <	mov qword [rbp + 96], file_test$184>
new  <	; Parameter 72 pointer "w">

1195:
old  <	mov [rbp + 104], rbp>
new  <	mov qword [rbp + 72], string_w#>

1196:
old  <	add rbp, 96>
new  <>

1197:
old  <	mov rdi, rbp>
new  < file_test$195:>

1198:
old  <	add rdi, 16>
new  <	; Call 40 fopen 0>

1199:
old  <	jmp printf>
new  <	mov qword [rbp + 40], file_test$196>

1200:
old  <>
new  <	mov [rbp + 48], rbp>

1201:
old  < file_test$184:>
new  <	add rbp, 40>

1202:
old  <	; PostCall 96>
new  <	jmp fopen>

1204:
old  < file_test$185:>
new  < file_test$196:>

1205:
old  <	; BinaryAdd count count 1>
new  <	; PostCall 40>

1206:
old  <	inc dword [rbp + 48]>
new  <>

1207:
old  <>
new  < file_test$197:>

1208:
old  < file_test$186:>
new  <	; GetReturnValue Â£temporary3996>

1209:
old  <	; Goto 171>
new  <>

1210:
old  <	jmp file_test$171>
new  < file_test$198:>

1211:
old  <>
new  <	; Assign filePtr Â£temporary3996>

1212:
old  < file_test$187:>
new  <	mov [rbp + 40], rbx>

1213:
old  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1214:
old  <>
new  < file_test$199:>

1215:
old  < file_test$188:>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1216:
old  <	; Parameter 72 pointer "\n">
new  <>

1217:
old  <	mov qword [rbp + 72], string_0A#>
new  < file_test$200:>

1218:
old  <>
new  <	; Parameter 72 pointer filePtr>

1219:
old  < file_test$189:>
new  <	mov rax, [rbp + 40]>

1220:
old  <	; Call 48 printf 0>
new  <	mov [rbp + 72], rax>

1221:
old  <	mov qword [rbp + 48], file_test$190>
new  <>

1222:
old  <	mov [rbp + 56], rbp>
new  < file_test$201:>

1223:
old  <	add rbp, 48>
new  <	; Parameter 80 pointer "Hello X">

1224:
old  <	mov rdi, rbp>
new  <	mov qword [rbp + 80], string_Hello20X#>

1225:
old  <	jmp printf>
new  <>

1226:
old  <>
new  < file_test$202:>

1227:
old  < file_test$190:>
new  <	; Call 48 fprintf 0>

1228:
old  <	; PostCall 48>
new  <	mov qword [rbp + 48], file_test$203>

1229:
old  <>
new  <	mov [rbp + 56], rbp>

1230:
old  < file_test$191:>
new  <	add rbp, 48>

1231:
old  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov rdi, rbp>

1232:
old  <>
new  <	jmp fprintf>

1233:
old  < file_test$192:>
new  <>

1234:
old  <	; Parameter 72 pointer inFilePtr>
new  < file_test$203:>

1235:
old  <	mov rax, [rbp + 40]>
new  <	; PostCall 48>

1236:
old  <	mov [rbp + 72], rax>
new  <>

1237:
old  <>
new  < file_test$204:>

1238:
old  < file_test$193:>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1239:
old  <	; Call 48 fclose 0>
new  <>

1240:
old  <	mov qword [rbp + 48], file_test$194>
new  < file_test$205:>

1241:
old  <	mov [rbp + 56], rbp>
new  <	; Parameter 72 pointer filePtr>

1242:
old  <	add rbp, 48>
new  <	mov rax, [rbp + 40]>

1243:
old  <	jmp fclose>
new  <	mov [rbp + 72], rax>

1245:
old  < file_test$194:>
new  < file_test$206:>

1246:
old  <	; PostCall 48>
new  <	; Call 48 fclose 0>

1247:
old  <>
new  <	mov qword [rbp + 48], file_test$207>

1248:
old  < file_test$195:>
new  <	mov [rbp + 56], rbp>

1249:
old  <	; Assign sourceFilePtr "Flow1.txt">
new  <	add rbp, 48>

1250:
old  <	mov qword [rbp + 40], string_Flow12Etxt#>
new  <	jmp fclose>

1252:
old  < file_test$196:>
new  < file_test$207:>

1253:
old  <	; Assign targetFilePtr "Flow2.txt">
new  <	; PostCall 48>

1254:
old  <	mov qword [rbp + 48], string_Flow22Etxt#>
new  <>

1255:
old  <>
new  < file_test$208:>

1256:
old  < file_test$197:>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1257:
old  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1258:
old  <>
new  < file_test$209:>

1259:
old  < file_test$198:>
new  <	; Parameter 72 pointer sourceFilePtr>

1260:
old  <	; Parameter 80 pointer sourceFilePtr>
new  <	mov rax, [rbp + 24]>

1261:
old  <	mov rax, [rbp + 40]>
new  <	mov [rbp + 72], rax>

1262:
old  <	mov [rbp + 80], rax>
new  <>

1263:
old  <>
new  < file_test$210:>

1264:
old  < file_test$199:>
new  <	; Parameter 80 pointer targetFilePtr>

1265:
old  <	; Parameter 88 pointer "r">
new  <	mov rax, [rbp + 32]>

1266:
old  <	mov qword [rbp + 88], string_r#>
new  <	mov [rbp + 80], rax>

1268:
old  < file_test$200:>
new  < file_test$211:>

1269:
old  <	; Call 56 fopen 0>
new  <	; Call 48 rename 0>

1270:
old  <	mov qword [rbp + 56], file_test$201>
new  <	mov qword [rbp + 48], file_test$212>

1271:
old  <	mov [rbp + 64], rbp>
new  <	mov [rbp + 56], rbp>

1272:
old  <	add rbp, 56>
new  <	add rbp, 48>

1273:
old  <	jmp fopen>
new  <	jmp rename>

1275:
old  < file_test$201:>
new  < file_test$212:>

1276:
old  <	; PostCall 56>
new  <	; PostCall 48>

1278:
old  < file_test$202:>
new  < file_test$213:>

1279:
old  <	; GetReturnValue Â£temporary4008>
new  <	; GetReturnValue Â£temporary3999>

1281:
old  < file_test$203:>
new  < file_test$214:>

1282:
old  <	; Assign inFilePtr Â£temporary4008>
new  <	; NotEqual 222 Â£temporary3999 0>

1283:
old  <	mov [rbp + 56], rbx>
new  <	cmp ebx, 0>

1284:
old  <>
new  <	jne file_test$222>

1285:
old  < file_test$204:>
new  <>

1286:
old  <	; PreCall 64 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < file_test$215:>

1287:
old  <>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1288:
old  < file_test$205:>
new  <>

1289:
old  <	; Parameter 88 pointer targetFilePtr>
new  < file_test$216:>

1290:
old  <	mov rax, [rbp + 48]>
new  <	; Parameter 72 pointer ""%s" has been renamed to "%s".\n">

1291:
old  <	mov [rbp + 88], rax>
new  <	mov qword [rbp + 72], string_2225s2220has20been20renamed20to202225s222E0A#>

1293:
old  < file_test$206:>
new  < file_test$217:>

1294:
old  <	; Parameter 96 pointer "w">
new  <	; Parameter 80 pointer sourceFilePtr>

1295:
old  <	mov qword [rbp + 96], string_w#>
new  <	mov rax, [rbp + 24]>

1296:
old  <>
new  <	mov [rbp + 80], rax>

1297:
old  < file_test$207:>
new  <>

1298:
old  <	; Call 64 fopen 0>
new  < file_test$218:>

1299:
old  <	mov qword [rbp + 64], file_test$208>
new  <	; Parameter 88 pointer targetFilePtr>

1300:
old  <	mov [rbp + 72], rbp>
new  <	mov rax, [rbp + 32]>

1301:
old  <	add rbp, 64>
new  <	mov [rbp + 88], rax>

1302:
old  <	jmp fopen>
new  <>

1303:
old  <>
new  < file_test$219:>

1304:
old  < file_test$208:>
new  <	; Call 48 printf 16>

1305:
old  <	; PostCall 64>
new  <	mov qword [rbp + 48], file_test$220>

1306:
old  <>
new  <	mov [rbp + 56], rbp>

1307:
old  < file_test$209:>
new  <	add rbp, 48>

1308:
old  <	; GetReturnValue Â£temporary4009>
new  <	mov rdi, rbp>

1309:
old  <>
new  <	add rdi, 16>

1310:
old  < file_test$210:>
new  <	jmp printf>

1311:
old  <	; Assign outFilePtr Â£temporary4009>
new  <>

1312:
old  <	mov [rbp + 64], rbx>
new  < file_test$220:>

1313:
old  <>
new  <	; PostCall 48>

1314:
old  < file_test$211:>
new  <>

1315:
old  <	; NotEqual 223 inFilePtr 0>
new  < file_test$221:>

1316:
old  <	cmp qword [rbp + 56], 0>
new  <	; Goto 233>

1317:
old  <	jne file_test$223>
new  <	jmp file_test$233>

1319:
old  < file_test$212:>
new  < file_test$222:>

1320:
old  <	; PreCall 72 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1322:
old  < file_test$213:>
new  < file_test$223:>

1323:
old  <	; Parameter 96 pointer stderr>
new  <	; Parameter 72 pointer "Error %i: %s.\n">

1324:
old  <	mov rax, [stderr]>
new  <	mov qword [rbp + 72], string_Error2025i3A2025s2E0A#>

1325:
old  <	mov [rbp + 96], rax>
new  <>

1326:
old  <>
new  < file_test$224:>

1327:
old  < file_test$214:>
new  <	; Parameter 80 signedint errno>

1328:
old  <	; Parameter 104 pointer "Assertion failed: "%s" in file %s at line %i\n">
new  <	mov eax, [errno]>

1329:
old  <	mov qword [rbp + 104], string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#>
new  <	mov [rbp + 80], eax>

1331:
old  < file_test$215:>
new  < file_test$225:>

1332:
old  <	; Parameter 112 pointer "inFilePtr != NULL">
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1333:
old  <	mov qword [rbp + 112], string_inFilePtr20213D20NULL#>
new  <>

1334:
old  <>
new  < file_test$226:>

1335:
old  < file_test$216:>
new  <	; Parameter 108 signedint errno>

1336:
old  <	; Parameter 120 pointer "C:\Users\Stefan\Documents\vagrant\homestead\code\code\FileTest.c">
new  <	mov eax, [errno]>

1337:
old  <	mov qword [rbp + 120], string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CFileTest2Ec#>
new  <	mov [rbp + 108], eax>

1339:
old  < file_test$217:>
new  < file_test$227:>

1340:
old  <	; Parameter 128 signedint 79>
new  <	; Call 84 strerror 0>

1341:
old  <	mov dword [rbp + 128], 79>
new  <	mov qword [rbp + 84], file_test$228>

1342:
old  <>
new  <	mov [rbp + 92], rbp>

1343:
old  < file_test$218:>
new  <	add rbp, 84>

1344:
old  <	; Call 72 fprintf 20>
new  <	jmp strerror>

1345:
old  <	mov qword [rbp + 72], file_test$219>
new  <>

1346:
old  <	mov [rbp + 80], rbp>
new  < file_test$228:>

1347:
old  <	add rbp, 72>
new  <	; PostCall 84>

1348:
old  <	mov rdi, rbp>
new  <>

1349:
old  <	add rdi, 20>
new  < file_test$229:>

1350:
old  <	jmp fprintf>
new  <	; GetReturnValue Â£temporary4002>

1352:
old  < file_test$219:>
new  < file_test$230:>

1353:
old  <	; PostCall 72>
new  <	; Parameter 84 pointer Â£temporary4002>

1354:
old  <>
new  <	mov [rbp + 84], rbx>

1355:
old  < file_test$220:>
new  <>

1356:
old  <	; PreCall 72 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < file_test$231:>

1357:
old  <>
new  <	; Call 48 printf 12>

1358:
old  < file_test$221:>
new  <	mov qword [rbp + 48], file_test$232>

1359:
old  <	; Call 72 abort 0>
new  <	mov [rbp + 56], rbp>

1360:
old  <	mov qword [rbp + 72], file_test$222>
new  <	add rbp, 48>

1361:
old  <	mov [rbp + 80], rbp>
new  <	mov rdi, rbp>

1362:
old  <	add rbp, 72>
new  <	add rdi, 12>

1363:
old  <	jmp abort>
new  <	jmp printf>

1365:
old  < file_test$222:>
new  < file_test$232:>

1366:
old  <	; PostCall 72>
new  <	; PostCall 48>

1368:
old  < file_test$223:>
new  < file_test$233:>

1369:
old  <	; NotEqual 235 outFilePtr 0>
new  <	; Assign targetFilePtr "Z">

1370:
old  <	cmp qword [rbp + 64], 0>
new  <	mov qword [rbp + 24], string_Z#>

1371:
old  <	jne file_test$235>
new  <>

1372:
old  <>
new  < file_test$234:>

1373:
old  < file_test$224:>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1374:
old  <	; PreCall 72 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1375:
old  <>
new  < file_test$235:>

1376:
old  < file_test$225:>
new  <	; Parameter 56 pointer "Z">

1377:
old  <	; Parameter 96 pointer stderr>
new  <	mov qword [rbp + 56], string_Z#>

1378:
old  <	mov rax, [stderr]>
new  <>

1379:
old  <	mov [rbp + 96], rax>
new  < file_test$236:>

1380:
old  <>
new  <	; Parameter 64 pointer "w">

1381:
old  < file_test$226:>
new  <	mov qword [rbp + 64], string_w#>

1382:
old  <	; Parameter 104 pointer "Assertion failed: "%s" in file %s at line %i\n">
new  <>

1383:
old  <	mov qword [rbp + 104], string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#>
new  < file_test$237:>

1384:
old  <>
new  <	; Call 32 fopen 0>

1385:
old  < file_test$227:>
new  <	mov qword [rbp + 32], file_test$238>

1386:
old  <	; Parameter 112 pointer "outFilePtr != NULL">
new  <	mov [rbp + 40], rbp>

1387:
old  <	mov qword [rbp + 112], string_outFilePtr20213D20NULL#>
new  <	add rbp, 32>

1388:
old  <>
new  <	jmp fopen>

1389:
old  < file_test$228:>
new  <>

1390:
old  <	; Parameter 120 pointer "C:\Users\Stefan\Documents\vagrant\homestead\code\code\FileTest.c">
new  < file_test$238:>

1391:
old  <	mov qword [rbp + 120], string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CFileTest2Ec#>
new  <	; PostCall 32>

1393:
old  < file_test$229:>
new  < file_test$239:>

1394:
old  <	; Parameter 128 signedint 80>
new  <	; GetReturnValue Â£temporary4004>

1395:
old  <	mov dword [rbp + 128], 80>
new  <>

1396:
old  <>
new  < file_test$240:>

1397:
old  < file_test$230:>
new  <	; Assign filePtr Â£temporary4004>

1398:
old  <	; Call 72 fprintf 20>
new  <	mov [rbp + 32], rbx>

1399:
old  <	mov qword [rbp + 72], file_test$231>
new  <>

1400:
old  <	mov [rbp + 80], rbp>
new  < file_test$241:>

1401:
old  <	add rbp, 72>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1402:
old  <	mov rdi, rbp>
new  <>

1403:
old  <	add rdi, 20>
new  < file_test$242:>

1404:
old  <	jmp fprintf>
new  <	; Parameter 64 pointer filePtr>

1405:
old  <>
new  <	mov rax, [rbp + 32]>

1406:
old  < file_test$231:>
new  <	mov [rbp + 64], rax>

1407:
old  <	; PostCall 72>
new  <>

1408:
old  <>
new  < file_test$243:>

1409:
old  < file_test$232:>
new  <	; Parameter 72 pointer "Hello Z">

1410:
old  <	; PreCall 72 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov qword [rbp + 72], string_Hello20Z#>

1412:
old  < file_test$233:>
new  < file_test$244:>

1413:
old  <	; Call 72 abort 0>
new  <	; Call 40 fprintf 0>

1414:
old  <	mov qword [rbp + 72], file_test$234>
new  <	mov qword [rbp + 40], file_test$245>

1415:
old  <	mov [rbp + 80], rbp>
new  <	mov [rbp + 48], rbp>

1416:
old  <	add rbp, 72>
new  <	add rbp, 40>

1417:
old  <	jmp abort>
new  <	mov rdi, rbp>

1418:
old  <>
new  <	jmp fprintf>

1419:
old  < file_test$234:>
new  <>

1420:
old  <	; PostCall 72>
new  < file_test$245:>

1421:
old  <>
new  <	; PostCall 40>

1422:
old  < file_test$235:>
new  <>

1423:
old  <	; PreCall 72 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < file_test$246:>

1424:
old  <>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1425:
old  < file_test$236:>
new  <>

1426:
old  <	; Parameter 96 pointer inFilePtr>
new  < file_test$247:>

1427:
old  <	mov rax, [rbp + 56]>
new  <	; Parameter 64 pointer filePtr>

1428:
old  <	mov [rbp + 96], rax>
new  <	mov rax, [rbp + 32]>

1429:
old  <>
new  <	mov [rbp + 64], rax>

1430:
old  < file_test$237:>
new  <>

1431:
old  <	; Call 72 fgetc 0>
new  < file_test$248:>

1432:
old  <	mov qword [rbp + 72], file_test$238>
new  <	; Call 40 fclose 0>

1433:
old  <	mov [rbp + 80], rbp>
new  <	mov qword [rbp + 40], file_test$249>

1434:
old  <	add rbp, 72>
new  <	mov [rbp + 48], rbp>

1435:
old  <	jmp fgetc>
new  <	add rbp, 40>

1436:
old  <>
new  <	jmp fclose>

1437:
old  < file_test$238:>
new  <>

1438:
old  <	; PostCall 72>
new  < file_test$249:>

1439:
old  <>
new  <	; PostCall 40>

1440:
old  < file_test$239:>
new  <>

1441:
old  <	; GetReturnValue Â£temporary4018>
new  < file_test$250:>

1442:
old  <>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1443:
old  < file_test$240:>
new  <>

1444:
old  <	; IntegralToIntegral Â£temporary4019 Â£temporary4018>
new  < file_test$251:>

1445:
old  <	cmp ebx, 0>
new  <	; Parameter 64 pointer targetFilePtr>

1446:
old  <	jge file_test$241>
new  <	mov rax, [rbp + 24]>

1447:
old  <	neg ebx>
new  <	mov [rbp + 64], rax>

1448:
old  <	neg bl>
new  <>

1449:
old  <>
new  < file_test$252:>

1450:
old  < file_test$241:>
new  <	; Call 40 remove 0>

1451:
old  <	; Assign c Â£temporary4019>
new  <	mov qword [rbp + 40], file_test$253>

1452:
old  <	mov [rbp + 72], bl>
new  <	mov [rbp + 48], rbp>

1453:
old  <>
new  <	add rbp, 40>

1454:
old  < file_test$242:>
new  <	jmp remove>

1455:
old  <	; IntegralToIntegral Â£temporary4020 c>
new  <>

1456:
old  <	mov al, [rbp + 72]>
new  < file_test$253:>

1457:
old  <	and eax, 255>
new  <	; PostCall 40>

1458:
old  <	cmp al, 0>
new  <>

1459:
old  <	jge file_test$243>
new  < file_test$254:>

1460:
old  <	neg al>
new  <	; GetReturnValue Â£temporary4007>

1461:
old  <	neg eax>
new  <>

1462:
old  <>
new  < file_test$255:>

1463:
old  < file_test$243:>
new  <	; NotEqual 262 Â£temporary4007 0>

1464:
old  <	; Equal 257 Â£temporary4020 -1>
new  <	cmp ebx, 0>

1465:
old  <	cmp eax, -1>
new  <	jne file_test$262>

1466:
old  <	je file_test$257>
new  <>

1467:
old  <>
new  < file_test$256:>

1468:
old  < file_test$244:>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1469:
old  <	; PreCall 73 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1470:
old  <>
new  < file_test$257:>

1471:
old  < file_test$245:>
new  <	; Parameter 64 pointer ""%s" has been removed.\n">

1472:
old  <	; IntegralToIntegral Â£temporary4022 c>
new  <	mov qword [rbp + 64], string_2225s2220has20been20removed2E0A#>

1473:
old  <	mov al, [rbp + 72]>
new  <>

1474:
old  <	and eax, 255>
new  < file_test$258:>

1475:
old  <	cmp al, 0>
new  <	; Parameter 72 pointer targetFilePtr>

1476:
old  <	jge file_test$246>
new  <	mov rax, [rbp + 24]>

1477:
old  <	neg al>
new  <	mov [rbp + 72], rax>

1478:
old  <	neg eax>
new  <>

1479:
old  <>
new  < file_test$259:>

1480:
old  < file_test$246:>
new  <	; Call 40 printf 8>

1481:
old  <	; Parameter 97 signedint Â£temporary4022>
new  <	mov qword [rbp + 40], file_test$260>

1482:
old  <	mov [rbp + 97], eax>
new  <	mov [rbp + 48], rbp>

1483:
old  <>
new  <	add rbp, 40>

1484:
old  < file_test$247:>
new  <	mov rdi, rbp>

1485:
old  <	; Parameter 101 pointer outFilePtr>
new  <	add rdi, 8>

1486:
old  <	mov rax, [rbp + 64]>
new  <	jmp printf>

1487:
old  <	mov [rbp + 101], rax>
new  <>

1488:
old  <>
new  < file_test$260:>

1489:
old  < file_test$248:>
new  <	; PostCall 40>

1490:
old  <	; Call 73 putc 0>
new  <>

1491:
old  <	mov qword [rbp + 73], file_test$249>
new  < file_test$261:>

1492:
old  <	mov [rbp + 81], rbp>
new  <	; Goto 273>

1493:
old  <	add rbp, 73>
new  <	jmp file_test$273>

1494:
old  <	jmp putc>
new  <>

1495:
old  <>
new  < file_test$262:>

1496:
old  < file_test$249:>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1497:
old  <	; PostCall 73>
new  <>

1498:
old  <>
new  < file_test$263:>

1499:
old  < file_test$250:>
new  <	; Parameter 64 pointer "Error %i: %s.\n">

1500:
old  <	; NotEqual 235 c 10>
new  <	mov qword [rbp + 64], string_Error2025i3A2025s2E0A#>

1501:
old  <	cmp byte [rbp + 72], 10>
new  <>

1502:
old  <	jne file_test$235>
new  < file_test$264:>

1503:
old  <>
new  <	; Parameter 72 signedint errno>

1504:
old  < file_test$251:>
new  <	mov eax, [errno]>

1505:
old  <	; PreCall 73 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov [rbp + 72], eax>

1507:
old  < file_test$252:>
new  < file_test$265:>

1508:
old  <	; Parameter 97 signedint 10>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1509:
old  <	mov dword [rbp + 97], 10>
new  <>

1510:
old  <>
new  < file_test$266:>

1511:
old  < file_test$253:>
new  <	; Parameter 100 signedint errno>

1512:
old  <	; Parameter 101 pointer outFilePtr>
new  <	mov eax, [errno]>

1513:
old  <	mov rax, [rbp + 64]>
new  <	mov [rbp + 100], eax>

1514:
old  <	mov [rbp + 101], rax>
new  <>

1515:
old  <>
new  < file_test$267:>

1516:
old  < file_test$254:>
new  <	; Call 76 strerror 0>

1517:
old  <	; Call 73 putc 0>
new  <	mov qword [rbp + 76], file_test$268>

1518:
old  <	mov qword [rbp + 73], file_test$255>
new  <	mov [rbp + 84], rbp>

1519:
old  <	mov [rbp + 81], rbp>
new  <	add rbp, 76>

1520:
old  <	add rbp, 73>
new  <	jmp strerror>

1521:
old  <	jmp putc>
new  <>

1522:
old  <>
new  < file_test$268:>

1523:
old  < file_test$255:>
new  <	; PostCall 76>

1524:
old  <	; PostCall 73>
new  <>

1525:
old  <>
new  < file_test$269:>

1526:
old  < file_test$256:>
new  <	; GetReturnValue Â£temporary4010>

1527:
old  <	; Goto 235>
new  <>

1528:
old  <	jmp file_test$235>
new  < file_test$270:>

1529:
old  <>
new  <	; Parameter 76 pointer Â£temporary4010>

1530:
old  < file_test$257:>
new  <	mov [rbp + 76], rbx>

1531:
old  <	; PreCall 72 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1532:
old  <>
new  < file_test$271:>

1533:
old  < file_test$258:>
new  <	; Call 40 printf 12>

1534:
old  <	; Parameter 96 pointer inFilePtr>
new  <	mov qword [rbp + 40], file_test$272>

1535:
old  <	mov rax, [rbp + 56]>
new  <	mov [rbp + 48], rbp>

1536:
old  <	mov [rbp + 96], rax>
new  <	add rbp, 40>

1537:
old  <>
new  <	mov rdi, rbp>

1538:
old  < file_test$259:>
new  <	add rdi, 12>

1539:
old  <	; Call 72 fclose 0>
new  <	jmp printf>

1540:
old  <	mov qword [rbp + 72], file_test$260>
new  <>

1541:
old  <	mov [rbp + 80], rbp>
new  < file_test$272:>

1542:
old  <	add rbp, 72>
new  <	; PostCall 40>

1543:
old  <	jmp fclose>
new  <>

1544:
old  <>
new  < file_test$273:>

1545:
old  < file_test$260:>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1546:
old  <	; PostCall 72>
new  <>

1547:
old  <>
new  < file_test$274:>

1548:
old  < file_test$261:>
new  <	; Parameter 48 pointer "PBook.txt">

1549:
old  <	; PreCall 72 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov qword [rbp + 48], string_PBook2Etxt#>

1551:
old  < file_test$262:>
new  < file_test$275:>

1552:
old  <	; Parameter 96 pointer outFilePtr>
new  <	; Parameter 56 pointer "r">

1553:
old  <	mov rax, [rbp + 64]>
new  <	mov qword [rbp + 56], string_r#>

1554:
old  <	mov [rbp + 96], rax>
new  <>

1555:
old  <>
new  < file_test$276:>

1556:
old  < file_test$263:>
new  <	; Call 24 fopen 0>

1557:
old  <	; Call 72 fclose 0>
new  <	mov qword [rbp + 24], file_test$277>

1558:
old  <	mov qword [rbp + 72], file_test$264>
new  <	mov [rbp + 32], rbp>

1559:
old  <	mov [rbp + 80], rbp>
new  <	add rbp, 24>

1560:
old  <	add rbp, 72>
new  <	jmp fopen>

1561:
old  <	jmp fclose>
new  <>

1562:
old  <>
new  < file_test$277:>

1563:
old  < file_test$264:>
new  <	; PostCall 24>

1564:
old  <	; PostCall 72>
new  <>

1565:
old  <>
new  < file_test$278:>

1566:
old  < file_test$265:>
new  <	; GetReturnValue Â£temporary4012>

1567:
old  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1568:
old  <>
new  < file_test$279:>

1569:
old  < file_test$266:>
new  <	; Assign inFilePtr Â£temporary4012>

1570:
old  <	; Parameter 64 pointer "Test.bin">
new  <	mov [rbp + 24], rbx>

1571:
old  <	mov qword [rbp + 64], string_Test2Ebin#>
new  <>

1572:
old  <>
new  < file_test$280:>

1573:
old  < file_test$267:>
new  <	; NotEqual 292 inFilePtr 0>

1574:
old  <	; Parameter 72 pointer "w">
new  <	cmp qword [rbp + 24], 0>

1575:
old  <	mov qword [rbp + 72], string_w#>
new  <	jne file_test$292>

1577:
old  < file_test$268:>
new  < file_test$281:>

1578:
old  <	; Call 40 fopen 0>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1579:
old  <	mov qword [rbp + 40], file_test$269>
new  <>

1580:
old  <	mov [rbp + 48], rbp>
new  < file_test$282:>

1581:
old  <	add rbp, 40>
new  <	; Parameter 56 pointer stderr>

1582:
old  <	jmp fopen>
new  <	mov rax, [stderr]>

1583:
old  <>
new  <	mov [rbp + 56], rax>

1584:
old  < file_test$269:>
new  <>

1585:
old  <	; PostCall 40>
new  < file_test$283:>

1586:
old  <>
new  <	; Parameter 64 pointer "Assertion failed: "%s" in file %s at line %i\n">

1587:
old  < file_test$270:>
new  <	mov qword [rbp + 64], string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#>

1588:
old  <	; GetReturnValue Â£temporary4029>
new  <>

1589:
old  <>
new  < file_test$284:>

1590:
old  < file_test$271:>
new  <	; Parameter 72 pointer "inFilePtr != NULL">

1591:
old  <	; Assign outFilePtr Â£temporary4029>
new  <	mov qword [rbp + 72], string_inFilePtr20213D20NULL#>

1592:
old  <	mov [rbp + 40], rbx>
new  <>

1593:
old  <>
new  < file_test$285:>

1594:
old  < file_test$272:>
new  <	; Parameter 80 pointer "C:\Users\Stefan\Documents\vagrant\homestead\code\code\FileTest.c">

1595:
old  <	; NotEqual 284 outFilePtr 0>
new  <	mov qword [rbp + 80], string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CFileTest2Ec#>

1596:
old  <	cmp qword [rbp + 40], 0>
new  <>

1597:
old  <	jne file_test$284>
new  < file_test$286:>

1598:
old  <>
new  <	; Parameter 88 signedint 82>

1599:
old  < file_test$273:>
new  <	mov dword [rbp + 88], 82>

1600:
old  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1601:
old  <>
new  < file_test$287:>

1602:
old  < file_test$274:>
new  <	; Call 32 fprintf 20>

1603:
old  <	; Parameter 72 pointer stderr>
new  <	mov qword [rbp + 32], file_test$288>

1604:
old  <	mov rax, [stderr]>
new  <	mov [rbp + 40], rbp>

1605:
old  <	mov [rbp + 72], rax>
new  <	add rbp, 32>

1606:
old  <>
new  <	mov rdi, rbp>

1607:
old  < file_test$275:>
new  <	add rdi, 20>

1608:
old  <	; Parameter 80 pointer "Assertion failed: "%s" in file %s at line %i\n">
new  <	jmp fprintf>

1609:
old  <	mov qword [rbp + 80], string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#>
new  <>

1610:
old  <>
new  < file_test$288:>

1611:
old  < file_test$276:>
new  <	; PostCall 32>

1612:
old  <	; Parameter 88 pointer "outFilePtr != NULL">
new  <>

1613:
old  <	mov qword [rbp + 88], string_outFilePtr20213D20NULL#>
new  < file_test$289:>

1614:
old  <>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1615:
old  < file_test$277:>
new  <>

1616:
old  <	; Parameter 96 pointer "C:\Users\Stefan\Documents\vagrant\homestead\code\code\FileTest.c">
new  < file_test$290:>

1617:
old  <	mov qword [rbp + 96], string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CFileTest2Ec#>
new  <	; Call 32 abort 0>

1618:
old  <>
new  <	mov qword [rbp + 32], file_test$291>

1619:
old  < file_test$278:>
new  <	mov [rbp + 40], rbp>

1620:
old  <	; Parameter 104 signedint 101>
new  <	add rbp, 32>

1621:
old  <	mov dword [rbp + 104], 101>
new  <	jmp abort>

1623:
old  < file_test$279:>
new  < file_test$291:>

1624:
old  <	; Call 48 fprintf 20>
new  <	; PostCall 32>

1625:
old  <	mov qword [rbp + 48], file_test$280>
new  <>

1626:
old  <	mov [rbp + 56], rbp>
new  < file_test$292:>

1627:
old  <	add rbp, 48>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1628:
old  <	mov rdi, rbp>
new  <>

1629:
old  <	add rdi, 20>
new  < file_test$293:>

1630:
old  <	jmp fprintf>
new  <	; Parameter 56 pointer "\n%-24s %-24s\n">

1631:
old  <>
new  <	mov qword [rbp + 56], string_0A252D24s20252D24s0A#>

1632:
old  < file_test$280:>
new  <>

1633:
old  <	; PostCall 48>
new  < file_test$294:>

1634:
old  <>
new  <	; Parameter 64 pointer "Name">

1635:
old  < file_test$281:>
new  <	mov qword [rbp + 64], string_Name#>

1636:
old  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1637:
old  <>
new  < file_test$295:>

1638:
old  < file_test$282:>
new  <	; Parameter 72 pointer "Phone">

1639:
old  <	; Call 48 abort 0>
new  <	mov qword [rbp + 72], string_Phone#>

1640:
old  <	mov qword [rbp + 48], file_test$283>
new  <>

1641:
old  <	mov [rbp + 56], rbp>
new  < file_test$296:>

1642:
old  <	add rbp, 48>
new  <	; Call 32 printf 16>

1643:
old  <	jmp abort>
new  <	mov qword [rbp + 32], file_test$297>

1644:
old  <>
new  <	mov [rbp + 40], rbp>

1645:
old  < file_test$283:>
new  <	add rbp, 32>

1646:
old  <	; PostCall 48>
new  <	mov rdi, rbp>

1647:
old  <>
new  <	add rdi, 16>

1648:
old  < file_test$284:>
new  <	jmp printf>

1649:
old  <	; Assign size 10>
new  <>

1650:
old  <	mov dword [rbp + 48], 10>
new  < file_test$297:>

1651:
old  <>
new  <	; PostCall 32>

1652:
old  < file_test$285:>
new  <>

1653:
old  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < file_test$298:>

1654:
old  <>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1655:
old  < file_test$286:>
new  <>

1656:
old  <	; Address Â£temporary4034 size>
new  < file_test$299:>

1657:
old  <	mov rsi, rbp>
new  <	; Parameter 56 pointer "%-24s %-24s\n">

1658:
old  <	add rsi, 48>
new  <	mov qword [rbp + 56], string_252D24s20252D24s0A#>

1660:
old  < file_test$287:>
new  < file_test$300:>

1661:
old  <	; Parameter 80 pointer Â£temporary4034>
new  <	; Parameter 64 pointer "========================">

1662:
old  <	mov [rbp + 80], rsi>
new  <	mov qword [rbp + 64], string_3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D#>

1664:
old  < file_test$288:>
new  < file_test$301:>

1665:
old  <	; Parameter 88 signedint 4>
new  <	; Parameter 72 pointer "========================">

1666:
old  <	mov dword [rbp + 88], 4>
new  <	mov qword [rbp + 72], string_3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D#>

1668:
old  < file_test$289:>
new  < file_test$302:>

1669:
old  <	; Parameter 92 signedint 1>
new  <	; Call 32 printf 16>

1670:
old  <	mov dword [rbp + 92], 1>
new  <	mov qword [rbp + 32], file_test$303>

1671:
old  <>
new  <	mov [rbp + 40], rbp>

1672:
old  < file_test$290:>
new  <	add rbp, 32>

1673:
old  <	; Parameter 96 pointer outFilePtr>
new  <	mov rdi, rbp>

1674:
old  <	mov rax, [rbp + 40]>
new  <	add rdi, 16>

1675:
old  <	mov [rbp + 96], rax>
new  <	jmp printf>

1677:
old  < file_test$291:>
new  < file_test$303:>

1678:
old  <	; Call 56 fwrite 0>
new  <	; PostCall 32>

1679:
old  <	mov qword [rbp + 56], file_test$292>
new  <>

1680:
old  <	mov [rbp + 64], rbp>
new  < file_test$304:>

1681:
old  <	add rbp, 56>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1682:
old  <	jmp fwrite>
new  <>

1683:
old  <>
new  < file_test$305:>

1684:
old  < file_test$292:>
new  <	; Parameter 64 pointer inFilePtr>

1685:
old  <	; PostCall 56>
new  <	mov rax, [rbp + 24]>

1686:
old  <>
new  <	mov [rbp + 64], rax>

1687:
old  < file_test$293:>
new  <>

1688:
old  <	; Assign index 0>
new  < file_test$306:>

1689:
old  <	mov dword [rbp + 52], 0>
new  <	; Parameter 72 pointer "%i">

1690:
old  <>
new  <	mov qword [rbp + 72], string_25i#>

1691:
old  < file_test$294:>
new  <>

1692:
old  <	; SignedGreaterThanEqual 308 index size>
new  < file_test$307:>

1693:
old  <	mov eax, [rbp + 48]>
new  <	; Address Â£temporary4019 size>

1694:
old  <	cmp [rbp + 52], eax>
new  <	mov rsi, rbp>

1695:
old  <	jge file_test$308>
new  <	add rsi, 36>

1697:
old  < file_test$295:>
new  < file_test$308:>

1698:
old  <	; SignedMultiply Â£temporary4038 index index>
new  <	; Parameter 80 pointer Â£temporary4019>

1699:
old  <	mov eax, [rbp + 52]>
new  <	mov [rbp + 80], rsi>

1700:
old  <	xor edx, edx>
new  <>

1701:
old  <	imul dword [rbp + 52]>
new  < file_test$309:>

1702:
old  <>
new  <	; Call 40 fscanf 8>

1703:
old  < file_test$296:>
new  <	mov qword [rbp + 40], file_test$310>

1704:
old  <	; IntegralToFloating Â£temporary4039 Â£temporary4038>
new  <	mov [rbp + 48], rbp>

1705:
old  <	mov [container4bytes#], eax>
new  <	add rbp, 40>

1706:
old  <	fild dword [container4bytes#]>
new  <	mov rdi, rbp>

1707:
old  <>
new  <	add rdi, 8>

1708:
old  < file_test$297:>
new  <	jmp fscanf>

1709:
old  <	; PopFloat value>
new  <>

1710:
old  <	fstp qword [rbp + 56]>
new  < file_test$310:>

1711:
old  <>
new  <	; PostCall 40>

1712:
old  < file_test$298:>
new  <>

1713:
old  <	; PreCall 64 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < file_test$311:>

1714:
old  <>
new  <	; Assign count 0>

1715:
old  < file_test$299:>
new  <	mov dword [rbp + 32], 0>

1716:
old  <	; Address Â£temporary4040 value>
new  <>

1717:
old  <	mov rsi, rbp>
new  < file_test$312:>

1718:
old  <	add rsi, 56>
new  <	; SignedGreaterThanEqual 328 count size>

1719:
old  <>
new  <	mov eax, [rbp + 36]>

1720:
old  < file_test$300:>
new  <	cmp [rbp + 32], eax>

1721:
old  <	; Parameter 88 pointer Â£temporary4040>
new  <	jge file_test$328>

1722:
old  <	mov [rbp + 88], rsi>
new  <>

1723:
old  <>
new  < file_test$313:>

1724:
old  < file_test$301:>
new  <	; PreCall 80 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1725:
old  <	; Parameter 96 signedint 8>
new  <>

1726:
old  <	mov dword [rbp + 96], 8>
new  < file_test$314:>

1727:
old  <>
new  <	; Parameter 104 pointer inFilePtr>

1728:
old  < file_test$302:>
new  <	mov rax, [rbp + 24]>

1729:
old  <	; Parameter 100 signedint 1>
new  <	mov [rbp + 104], rax>

1730:
old  <	mov dword [rbp + 100], 1>
new  <>

1731:
old  <>
new  < file_test$315:>

1732:
old  < file_test$303:>
new  <	; Parameter 112 pointer "%s%s">

1733:
old  <	; Parameter 104 pointer outFilePtr>
new  <	mov qword [rbp + 112], string_25s25s#>

1734:
old  <	mov rax, [rbp + 40]>
new  <>

1735:
old  <	mov [rbp + 104], rax>
new  < file_test$316:>

1736:
old  <>
new  <	; Parameter 120 pointer name>

1737:
old  < file_test$304:>
new  <	mov [rbp + 120], rbp>

1738:
old  <	; Call 64 fwrite 0>
new  <	add qword [rbp + 120], 40>

1739:
old  <	mov qword [rbp + 64], file_test$305>
new  <>

1740:
old  <	mov [rbp + 72], rbp>
new  < file_test$317:>

1741:
old  <	add rbp, 64>
new  <	; Parameter 128 pointer phone>

1742:
old  <	jmp fwrite>
new  <	mov [rbp + 128], rbp>

1743:
old  <>
new  <	add qword [rbp + 128], 60>

1744:
old  < file_test$305:>
new  <>

1745:
old  <	; PostCall 64>
new  < file_test$318:>

1746:
old  <>
new  <	; Call 80 fscanf 16>

1747:
old  < file_test$306:>
new  <	mov qword [rbp + 80], file_test$319>

1748:
old  <	; BinaryAdd index index 1>
new  <	mov [rbp + 88], rbp>

1749:
old  <	inc dword [rbp + 52]>
new  <	add rbp, 80>

1750:
old  <>
new  <	mov rdi, rbp>

1751:
old  < file_test$307:>
new  <	add rdi, 16>

1752:
old  <	; Goto 294>
new  <	jmp fscanf>

1753:
old  <	jmp file_test$294>
new  <>

1754:
old  <>
new  < file_test$319:>

1755:
old  < file_test$308:>
new  <	; PostCall 80>

1756:
old  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1757:
old  <>
new  < file_test$320:>

1758:
old  < file_test$309:>
new  <	; PreCall 80 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1759:
old  <	; Parameter 80 pointer outFilePtr>
new  <>

1760:
old  <	mov rax, [rbp + 40]>
new  < file_test$321:>

1761:
old  <	mov [rbp + 80], rax>
new  <	; Parameter 104 pointer "%-24s %-24s\n">

1762:
old  <>
new  <	mov qword [rbp + 104], string_252D24s20252D24s0A#>

1763:
old  < file_test$310:>
new  <>

1764:
old  <	; Call 56 fclose 0>
new  < file_test$322:>

1765:
old  <	mov qword [rbp + 56], file_test$311>
new  <	; Parameter 112 pointer name>

1766:
old  <	mov [rbp + 64], rbp>
new  <	mov [rbp + 112], rbp>

1767:
old  <	add rbp, 56>
new  <	add qword [rbp + 112], 40>

1768:
old  <	jmp fclose>
new  <>

1769:
old  <>
new  < file_test$323:>

1770:
old  < file_test$311:>
new  <	; Parameter 120 pointer phone>

1771:
old  <	; PostCall 56>
new  <	mov [rbp + 120], rbp>

1772:
old  <>
new  <	add qword [rbp + 120], 60>

1773:
old  < file_test$312:>
new  <>

1774:
old  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < file_test$324:>

1775:
old  <>
new  <	; Call 80 printf 16>

1776:
old  < file_test$313:>
new  <	mov qword [rbp + 80], file_test$325>

1777:
old  <	; Parameter 64 pointer "Test.bin">
new  <	mov [rbp + 88], rbp>

1778:
old  <	mov qword [rbp + 64], string_Test2Ebin#>
new  <	add rbp, 80>

1779:
old  <>
new  <	mov rdi, rbp>

1780:
old  < file_test$314:>
new  <	add rdi, 16>

1781:
old  <	; Parameter 72 pointer "r">
new  <	jmp printf>

1782:
old  <	mov qword [rbp + 72], string_r#>
new  <>

1783:
old  <>
new  < file_test$325:>

1784:
old  < file_test$315:>
new  <	; PostCall 80>

1785:
old  <	; Call 40 fopen 0>
new  <>

1786:
old  <	mov qword [rbp + 40], file_test$316>
new  < file_test$326:>

1787:
old  <	mov [rbp + 48], rbp>
new  <	; BinaryAdd count count 1>

1788:
old  <	add rbp, 40>
new  <	inc dword [rbp + 32]>

1789:
old  <	jmp fopen>
new  <>

1790:
old  <>
new  < file_test$327:>

1791:
old  < file_test$316:>
new  <	; Goto 312>

1792:
old  <	; PostCall 40>
new  <	jmp file_test$312>

1794:
old  < file_test$317:>
new  < file_test$328:>

1795:
old  <	; GetReturnValue Â£temporary4043>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1797:
old  < file_test$318:>
new  < file_test$329:>

1798:
old  <	; Assign inFilePtr Â£temporary4043>
new  <	; Parameter 56 pointer "\n">

1799:
old  <	mov [rbp + 40], rbx>
new  <	mov qword [rbp + 56], string_0A#>

1801:
old  < file_test$319:>
new  < file_test$330:>

1802:
old  <	; NotEqual 331 inFilePtr 0>
new  <	; Call 32 printf 0>

1803:
old  <	cmp qword [rbp + 40], 0>
new  <	mov qword [rbp + 32], file_test$331>

1804:
old  <	jne file_test$331>
new  <	mov [rbp + 40], rbp>

1805:
old  <>
new  <	add rbp, 32>

1806:
old  < file_test$320:>
new  <	mov rdi, rbp>

1807:
old  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	jmp printf>

1809:
old  < file_test$321:>
new  < file_test$331:>

1810:
old  <	; Parameter 72 pointer stderr>
new  <	; PostCall 32>

1811:
old  <	mov rax, [stderr]>
new  <>

1812:
old  <	mov [rbp + 72], rax>
new  < file_test$332:>

1813:
old  <>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1814:
old  < file_test$322:>
new  <>

1815:
old  <	; Parameter 80 pointer "Assertion failed: "%s" in file %s at line %i\n">
new  < file_test$333:>

1816:
old  <	mov qword [rbp + 80], string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#>
new  <	; Parameter 56 pointer inFilePtr>

1817:
old  <>
new  <	mov rax, [rbp + 24]>

1818:
old  < file_test$323:>
new  <	mov [rbp + 56], rax>

1819:
old  <	; Parameter 88 pointer "inFilePtr != NULL">
new  <>

1820:
old  <	mov qword [rbp + 88], string_inFilePtr20213D20NULL#>
new  < file_test$334:>

1821:
old  <>
new  <	; Call 32 fclose 0>

1822:
old  < file_test$324:>
new  <	mov qword [rbp + 32], file_test$335>

1823:
old  <	; Parameter 96 pointer "C:\Users\Stefan\Documents\vagrant\homestead\code\code\FileTest.c">
new  <	mov [rbp + 40], rbp>

1824:
old  <	mov qword [rbp + 96], string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CFileTest2Ec#>
new  <	add rbp, 32>

1825:
old  <>
new  <	jmp fclose>

1826:
old  < file_test$325:>
new  <>

1827:
old  <	; Parameter 104 signedint 116>
new  < file_test$335:>

1828:
old  <	mov dword [rbp + 104], 116>
new  <	; PostCall 32>

1830:
old  < file_test$326:>
new  < file_test$336:>

1831:
old  <	; Call 48 fprintf 20>
new  <	; Assign sourceFilePtr "Flow1.txt">

1832:
old  <	mov qword [rbp + 48], file_test$327>
new  <	mov qword [rbp + 24], string_Flow12Etxt#>

1833:
old  <	mov [rbp + 56], rbp>
new  <>

1834:
old  <	add rbp, 48>
new  < file_test$337:>

1835:
old  <	mov rdi, rbp>
new  <	; Assign targetFilePtr "Flow2.txt">

1836:
old  <	add rdi, 20>
new  <	mov qword [rbp + 32], string_Flow22Etxt#>

1837:
old  <	jmp fprintf>
new  <>

1838:
old  <>
new  < file_test$338:>

1839:
old  < file_test$327:>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1840:
old  <	; PostCall 48>
new  <>

1841:
old  <>
new  < file_test$339:>

1842:
old  < file_test$328:>
new  <	; Parameter 64 pointer sourceFilePtr>

1843:
old  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov rax, [rbp + 24]>

1844:
old  <>
new  <	mov [rbp + 64], rax>

1845:
old  < file_test$329:>
new  <>

1846:
old  <	; Call 48 abort 0>
new  < file_test$340:>

1847:
old  <	mov qword [rbp + 48], file_test$330>
new  <	; Parameter 72 pointer "r">

1848:
old  <	mov [rbp + 56], rbp>
new  <	mov qword [rbp + 72], string_r#>

1849:
old  <	add rbp, 48>
new  <>

1850:
old  <	jmp abort>
new  < file_test$341:>

1851:
old  <>
new  <	; Call 40 fopen 0>

1852:
old  < file_test$330:>
new  <	mov qword [rbp + 40], file_test$342>

1853:
old  <	; PostCall 48>
new  <	mov [rbp + 48], rbp>

1854:
old  <>
new  <	add rbp, 40>

1855:
old  < file_test$331:>
new  <	jmp fopen>

1856:
old  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1857:
old  <>
new  < file_test$342:>

1858:
old  < file_test$332:>
new  <	; PostCall 40>

1859:
old  <	; Address Â£temporary4048 size>
new  <>

1860:
old  <	mov rsi, rbp>
new  < file_test$343:>

1861:
old  <	add rsi, 48>
new  <	; GetReturnValue Â£temporary4027>

1863:
old  < file_test$333:>
new  < file_test$344:>

1864:
old  <	; Parameter 160 pointer Â£temporary4048>
new  <	; Assign inFilePtr Â£temporary4027>

1865:
old  <	mov [rbp + 160], rsi>
new  <	mov [rbp + 40], rbx>

1867:
old  < file_test$334:>
new  < file_test$345:>

1868:
old  <	; Parameter 168 signedint 4>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1869:
old  <	mov dword [rbp + 168], 4>
new  <>

1870:
old  <>
new  < file_test$346:>

1871:
old  < file_test$335:>
new  <	; Parameter 72 pointer targetFilePtr>

1872:
old  <	; Parameter 172 signedint 1>
new  <	mov rax, [rbp + 32]>

1873:
old  <	mov dword [rbp + 172], 1>
new  <	mov [rbp + 72], rax>

1875:
old  < file_test$336:>
new  < file_test$347:>

1876:
old  <	; Parameter 176 pointer inFilePtr>
new  <	; Parameter 80 pointer "w">

1877:
old  <	mov rax, [rbp + 40]>
new  <	mov qword [rbp + 80], string_w#>

1878:
old  <	mov [rbp + 176], rax>
new  <>

1879:
old  <>
new  < file_test$348:>

1880:
old  < file_test$337:>
new  <	; Call 48 fopen 0>

1881:
old  <	; Call 136 fread 0>
new  <	mov qword [rbp + 48], file_test$349>

1882:
old  <	mov qword [rbp + 136], file_test$338>
new  <	mov [rbp + 56], rbp>

1883:
old  <	mov [rbp + 144], rbp>
new  <	add rbp, 48>

1884:
old  <	add rbp, 136>
new  <	jmp fopen>

1885:
old  <	jmp fread>
new  <>

1886:
old  <>
new  < file_test$349:>

1887:
old  < file_test$338:>
new  <	; PostCall 48>

1888:
old  <	; PostCall 136>
new  <>

1889:
old  <>
new  < file_test$350:>

1890:
old  < file_test$339:>
new  <	; GetReturnValue Â£temporary4028>

1891:
old  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1892:
old  <>
new  < file_test$351:>

1893:
old  < file_test$340:>
new  <	; Assign outFilePtr Â£temporary4028>

1894:
old  <	; Parameter 160 pointer "size1 %i\n">
new  <	mov [rbp + 48], rbx>

1895:
old  <	mov qword [rbp + 160], string_size12025i0A#>
new  <>

1896:
old  <>
new  < file_test$352:>

1897:
old  < file_test$341:>
new  <	; NotEqual 364 inFilePtr 0>

1898:
old  <	; Parameter 168 signedint size>
new  <	cmp qword [rbp + 40], 0>

1899:
old  <	mov eax, [rbp + 48]>
new  <	jne file_test$364>

1900:
old  <	mov [rbp + 168], eax>
new  <>

1901:
old  <>
new  < file_test$353:>

1902:
old  < file_test$342:>
new  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1903:
old  <	; Call 136 printf 4>
new  <>

1904:
old  <	mov qword [rbp + 136], file_test$343>
new  < file_test$354:>

1905:
old  <	mov [rbp + 144], rbp>
new  <	; Parameter 80 pointer stderr>

1906:
old  <	add rbp, 136>
new  <	mov rax, [stderr]>

1907:
old  <	mov rdi, rbp>
new  <	mov [rbp + 80], rax>

1908:
old  <	add rdi, 4>
new  <>

1909:
old  <	jmp printf>
new  < file_test$355:>

1910:
old  <>
new  <	; Parameter 88 pointer "Assertion failed: "%s" in file %s at line %i\n">

1911:
old  < file_test$343:>
new  <	mov qword [rbp + 88], string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#>

1912:
old  <	; PostCall 136>
new  <>

1913:
old  <>
new  < file_test$356:>

1914:
old  < file_test$344:>
new  <	; Parameter 96 pointer "inFilePtr != NULL">

1915:
old  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov qword [rbp + 96], string_inFilePtr20213D20NULL#>

1917:
old  < file_test$345:>
new  < file_test$357:>

1918:
old  <	; Address Â£temporary4051 arr>
new  <	; Parameter 104 pointer "C:\Users\Stefan\Documents\vagrant\homestead\code\code\FileTest.c">

1919:
old  <	mov rsi, rbp>
new  <	mov qword [rbp + 104], string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CFileTest2Ec#>

1920:
old  <	add rsi, 56>
new  <>

1921:
old  <>
new  < file_test$358:>

1922:
old  < file_test$346:>
new  <	; Parameter 112 signedint 111>

1923:
old  <	; Parameter 160 pointer Â£temporary4051>
new  <	mov dword [rbp + 112], 111>

1924:
old  <	mov [rbp + 160], rsi>
new  <>

1925:
old  <>
new  < file_test$359:>

1926:
old  < file_test$347:>
new  <	; Call 56 fprintf 20>

1927:
old  <	; Parameter 168 signedint 80>
new  <	mov qword [rbp + 56], file_test$360>

1928:
old  <	mov dword [rbp + 168], 80>
new  <	mov [rbp + 64], rbp>

1929:
old  <>
new  <	add rbp, 56>

1930:
old  < file_test$348:>
new  <	mov rdi, rbp>

1931:
old  <	; Parameter 172 signedint 1>
new  <	add rdi, 20>

1932:
old  <	mov dword [rbp + 172], 1>
new  <	jmp fprintf>

1934:
old  < file_test$349:>
new  < file_test$360:>

1935:
old  <	; Parameter 176 pointer inFilePtr>
new  <	; PostCall 56>

1936:
old  <	mov rax, [rbp + 40]>
new  <>

1937:
old  <	mov [rbp + 176], rax>
new  < file_test$361:>

1938:
old  <>
new  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1939:
old  < file_test$350:>
new  <>

1940:
old  <	; Call 136 fread 0>
new  < file_test$362:>

1941:
old  <	mov qword [rbp + 136], file_test$351>
new  <	; Call 56 abort 0>

1942:
old  <	mov [rbp + 144], rbp>
new  <	mov qword [rbp + 56], file_test$363>

1943:
old  <	add rbp, 136>
new  <	mov [rbp + 64], rbp>

1944:
old  <	jmp fread>
new  <	add rbp, 56>

1945:
old  <>
new  <	jmp abort>

1946:
old  < file_test$351:>
new  <>

1947:
old  <	; PostCall 136>
new  < file_test$363:>

1948:
old  <>
new  <	; PostCall 56>

1949:
old  < file_test$352:>
new  <>

1950:
old  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < file_test$364:>

1951:
old  <>
new  <	; NotEqual 376 outFilePtr 0>

1952:
old  < file_test$353:>
new  <	cmp qword [rbp + 48], 0>

1953:
old  <	; Parameter 160 pointer inFilePtr>
new  <	jne file_test$376>

1954:
old  <	mov rax, [rbp + 40]>
new  <>

1955:
old  <	mov [rbp + 160], rax>
new  < file_test$365:>

1956:
old  <>
new  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1957:
old  < file_test$354:>
new  <>

1958:
old  <	; Call 136 fclose 0>
new  < file_test$366:>

1959:
old  <	mov qword [rbp + 136], file_test$355>
new  <	; Parameter 80 pointer stderr>

1960:
old  <	mov [rbp + 144], rbp>
new  <	mov rax, [stderr]>

1961:
old  <	add rbp, 136>
new  <	mov [rbp + 80], rax>

1962:
old  <	jmp fclose>
new  <>

1963:
old  <>
new  < file_test$367:>

1964:
old  < file_test$355:>
new  <	; Parameter 88 pointer "Assertion failed: "%s" in file %s at line %i\n">

1965:
old  <	; PostCall 136>
new  <	mov qword [rbp + 88], string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#>

1967:
old  < file_test$356:>
new  < file_test$368:>

1968:
old  <	; Assign index 0>
new  <	; Parameter 96 pointer "outFilePtr != NULL">

1969:
old  <	mov dword [rbp + 52], 0>
new  <	mov qword [rbp + 96], string_outFilePtr20213D20NULL#>

1971:
old  < file_test$357:>
new  < file_test$369:>

1972:
old  <	; SignedGreaterThanEqual 371 index 10>
new  <	; Parameter 104 pointer "C:\Users\Stefan\Documents\vagrant\homestead\code\code\FileTest.c">

1973:
old  <	cmp dword [rbp + 52], 10>
new  <	mov qword [rbp + 104], string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CFileTest2Ec#>

1974:
old  <	jge file_test$371>
new  <>

1975:
old  <>
new  < file_test$370:>

1976:
old  < file_test$358:>
new  <	; Parameter 112 signedint 112>

1977:
old  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov dword [rbp + 112], 112>

1979:
old  < file_test$359:>
new  < file_test$371:>

1980:
old  <	; Parameter 160 pointer "index1 %i: value %f\n">
new  <	; Call 56 fprintf 20>

1981:
old  <	mov qword [rbp + 160], string_index12025i3A20value2025f0A#>
new  <	mov qword [rbp + 56], file_test$372>

1982:
old  <>
new  <	mov [rbp + 64], rbp>

1983:
old  < file_test$360:>
new  <	add rbp, 56>

1984:
old  <	; Parameter 168 signedint index>
new  <	mov rdi, rbp>

1985:
old  <	mov eax, [rbp + 52]>
new  <	add rdi, 20>

1986:
old  <	mov [rbp + 168], eax>
new  <	jmp fprintf>

1988:
old  < file_test$361:>
new  < file_test$372:>

1989:
old  <	; IntegralToIntegral Â£temporary4057 index>
new  <	; PostCall 56>

1990:
old  <	mov eax, [rbp + 52]>
new  <>

1991:
old  <	mov rbx, 4294967295>
new  < file_test$373:>

1992:
old  <	and rax, rbx>
new  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1994:
old  < file_test$362:>
new  < file_test$374:>

1995:
old  <	; UnsignedMultiply Â£temporary4058 Â£temporary4057 8>
new  <	; Call 56 abort 0>

1996:
old  <	xor rdx, rdx>
new  <	mov qword [rbp + 56], file_test$375>

1997:
old  <	mul qword [Array_8#]>
new  <	mov [rbp + 64], rbp>

1998:
old  <>
new  <	add rbp, 56>

1999:
old  < file_test$363:>
new  <	jmp abort>

2000:
old  <	; BinaryAdd Â£temporary4059 arr Â£temporary4058>
new  <>

2001:
old  <	mov rsi, rbp>
new  < file_test$375:>

2002:
old  <	add rsi, 56>
new  <	; PostCall 56>

2003:
old  <	add rsi, rax>
new  <>

2004:
old  <>
new  < file_test$376:>

2005:
old  < file_test$364:>
new  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2006:
old  <	; Dereference Â£temporary4056 -> Â£temporary4059 Â£temporary4059 0>
new  <>

2007:
old  <>
new  < file_test$377:>

2008:
old  < file_test$365:>
new  <	; Parameter 80 pointer inFilePtr>

2009:
old  <	; PushFloat Â£temporary4056 -> Â£temporary4059>
new  <	mov rax, [rbp + 40]>

2010:
old  <	fld qword [rsi]>
new  <	mov [rbp + 80], rax>

2012:
old  < file_test$366:>
new  < file_test$378:>

2013:
old  <	; Parameter 172 double Â£temporary4056 -> Â£temporary4059>
new  <	; Call 56 fgetc 0>

2014:
old  <	fstp qword [rbp + 172]>
new  <	mov qword [rbp + 56], file_test$379>

2015:
old  <>
new  <	mov [rbp + 64], rbp>

2016:
old  < file_test$367:>
new  <	add rbp, 56>

2017:
old  <	; Call 136 printf 12>
new  <	jmp fgetc>

2018:
old  <	mov qword [rbp + 136], file_test$368>
new  <>

2019:
old  <	mov [rbp + 144], rbp>
new  < file_test$379:>

2020:
old  <	add rbp, 136>
new  <	; PostCall 56>

2021:
old  <	mov rdi, rbp>
new  <>

2022:
old  <	add rdi, 12>
new  < file_test$380:>

2023:
old  <	jmp printf>
new  <	; GetReturnValue Â£temporary4037>

2025:
old  < file_test$368:>
new  < file_test$381:>

2026:
old  <	; PostCall 136>
new  <	; IntegralToIntegral Â£temporary4038 Â£temporary4037>

2027:
old  <>
new  <	cmp ebx, 0>

2028:
old  < file_test$369:>
new  <	jge file_test$382>

2029:
old  <	; BinaryAdd index index 1>
new  <	neg ebx>

2030:
old  <	inc dword [rbp + 52]>
new  <	neg bl>

2032:
old  < file_test$370:>
new  < file_test$382:>

2033:
old  <	; Goto 357>
new  <	; Assign c Â£temporary4038>

2034:
old  <	jmp file_test$357>
new  <	mov [rbp + 56], bl>

2036:
old  < file_test$371:>
new  < file_test$383:>

2037:
old  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; IntegralToIntegral Â£temporary4039 c>

2038:
old  <>
new  <	mov al, [rbp + 56]>

2039:
old  < file_test$372:>
new  <	and eax, 255>

2040:
old  <	; Parameter 72 pointer "\n">
new  <	cmp al, 0>

2041:
old  <	mov qword [rbp + 72], string_0A#>
new  <	jge file_test$384>

2042:
old  <>
new  <	neg al>

2043:
old  < file_test$373:>
new  <	neg eax>

2044:
old  <	; Call 48 printf 0>
new  <>

2045:
old  <	mov qword [rbp + 48], file_test$374>
new  < file_test$384:>

2046:
old  <	mov [rbp + 56], rbp>
new  <	; Equal 398 Â£temporary4039 -1>

2047:
old  <	add rbp, 48>
new  <	cmp eax, -1>

2048:
old  <	mov rdi, rbp>
new  <	je file_test$398>

2049:
old  <	jmp printf>
new  <>

2050:
old  <>
new  < file_test$385:>

2051:
old  < file_test$374:>
new  <	; PreCall 57 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2052:
old  <	; PostCall 48>
new  <>

2053:
old  <>
new  < file_test$386:>

2054:
old  < file_test$375:>
new  <	; IntegralToIntegral Â£temporary4041 c>

2055:
old  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov al, [rbp + 56]>

2056:
old  <>
new  <	and eax, 255>

2057:
old  < file_test$376:>
new  <	cmp al, 0>

2058:
old  <	; Parameter 64 pointer "Test.bin">
new  <	jge file_test$387>

2059:
old  <	mov qword [rbp + 64], string_Test2Ebin#>
new  <	neg al>

2060:
old  <>
new  <	neg eax>

2061:
old  < file_test$377:>
new  <>

2062:
old  <	; Parameter 72 pointer "r">
new  < file_test$387:>

2063:
old  <	mov qword [rbp + 72], string_r#>
new  <	; Parameter 81 signedint Â£temporary4041>

2064:
old  <>
new  <	mov [rbp + 81], eax>

2065:
old  < file_test$378:>
new  <>

2066:
old  <	; Call 40 fopen 0>
new  < file_test$388:>

2067:
old  <	mov qword [rbp + 40], file_test$379>
new  <	; Parameter 85 pointer outFilePtr>

2068:
old  <	mov [rbp + 48], rbp>
new  <	mov rax, [rbp + 48]>

2069:
old  <	add rbp, 40>
new  <	mov [rbp + 85], rax>

2070:
old  <	jmp fopen>
new  <>

2071:
old  <>
new  < file_test$389:>

2072:
old  < file_test$379:>
new  <	; Call 57 putc 0>

2073:
old  <	; PostCall 40>
new  <	mov qword [rbp + 57], file_test$390>

2074:
old  <>
new  <	mov [rbp + 65], rbp>

2075:
old  < file_test$380:>
new  <	add rbp, 57>

2076:
old  <	; GetReturnValue Â£temporary4062>
new  <	jmp putc>

2078:
old  < file_test$381:>
new  < file_test$390:>

2079:
old  <	; Assign inFilePtr Â£temporary4062>
new  <	; PostCall 57>

2080:
old  <	mov [rbp + 40], rbx>
new  <>

2081:
old  <>
new  < file_test$391:>

2082:
old  < file_test$382:>
new  <	; NotEqual 376 c 10>

2083:
old  <	; NotEqual 394 inFilePtr 0>
new  <	cmp byte [rbp + 56], 10>

2084:
old  <	cmp qword [rbp + 40], 0>
new  <	jne file_test$376>

2085:
old  <	jne file_test$394>
new  <>

2086:
old  <>
new  < file_test$392:>

2087:
old  < file_test$383:>
new  <	; PreCall 57 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2088:
old  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

2089:
old  <>
new  < file_test$393:>

2090:
old  < file_test$384:>
new  <	; Parameter 81 signedint 10>

2091:
old  <	; Parameter 80 pointer stderr>
new  <	mov dword [rbp + 81], 10>

2092:
old  <	mov rax, [stderr]>
new  <>

2093:
old  <	mov [rbp + 80], rax>
new  < file_test$394:>

2094:
old  <>
new  <	; Parameter 85 pointer outFilePtr>

2095:
old  < file_test$385:>
new  <	mov rax, [rbp + 48]>

2096:
old  <	; Parameter 88 pointer "Assertion failed: "%s" in file %s at line %i\n">
new  <	mov [rbp + 85], rax>

2097:
old  <	mov qword [rbp + 88], string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#>
new  <>

2098:
old  <>
new  < file_test$395:>

2099:
old  < file_test$386:>
new  <	; Call 57 putc 0>

2100:
old  <	; Parameter 96 pointer "inFilePtr != NULL">
new  <	mov qword [rbp + 57], file_test$396>

2101:
old  <	mov qword [rbp + 96], string_inFilePtr20213D20NULL#>
new  <	mov [rbp + 65], rbp>

2102:
old  <>
new  <	add rbp, 57>

2103:
old  < file_test$387:>
new  <	jmp putc>

2104:
old  <	; Parameter 104 pointer "C:\Users\Stefan\Documents\vagrant\homestead\code\code\FileTest.c">
new  <>

2105:
old  <	mov qword [rbp + 104], string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CFileTest2Ec#>
new  < file_test$396:>

2106:
old  <>
new  <	; PostCall 57>

2107:
old  < file_test$388:>
new  <>

2108:
old  <	; Parameter 112 signedint 137>
new  < file_test$397:>

2109:
old  <	mov dword [rbp + 112], 137>
new  <	; Goto 376>

2110:
old  <>
new  <	jmp file_test$376>

2111:
old  < file_test$389:>
new  <>

2112:
old  <	; Call 56 fprintf 20>
new  < file_test$398:>

2113:
old  <	mov qword [rbp + 56], file_test$390>
new  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2114:
old  <	mov [rbp + 64], rbp>
new  <>

2115:
old  <	add rbp, 56>
new  < file_test$399:>

2116:
old  <	mov rdi, rbp>
new  <	; Parameter 80 pointer inFilePtr>

2117:
old  <	add rdi, 20>
new  <	mov rax, [rbp + 40]>

2118:
old  <	jmp fprintf>
new  <	mov [rbp + 80], rax>

2120:
old  < file_test$390:>
new  < file_test$400:>

2121:
old  <	; PostCall 56>
new  <	; Call 56 fclose 0>

2122:
old  <>
new  <	mov qword [rbp + 56], file_test$401>

2123:
old  < file_test$391:>
new  <	mov [rbp + 64], rbp>

2124:
old  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	add rbp, 56>

2125:
old  <>
new  <	jmp fclose>

2126:
old  < file_test$392:>
new  <>

2127:
old  <	; Call 56 abort 0>
new  < file_test$401:>

2128:
old  <	mov qword [rbp + 56], file_test$393>
new  <	; PostCall 56>

2129:
old  <	mov [rbp + 64], rbp>
new  <>

2130:
old  <	add rbp, 56>
new  < file_test$402:>

2131:
old  <	jmp abort>
new  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2133:
old  < file_test$393:>
new  < file_test$403:>

2134:
old  <	; PostCall 56>
new  <	; Parameter 80 pointer outFilePtr>

2135:
old  <>
new  <	mov rax, [rbp + 48]>

2136:
old  < file_test$394:>
new  <	mov [rbp + 80], rax>

2137:
old  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

2138:
old  <>
new  < file_test$404:>

2139:
old  < file_test$395:>
new  <	; Call 56 fclose 0>

2140:
old  <	; Address Â£temporary4067 size>
new  <	mov qword [rbp + 56], file_test$405>

2141:
old  <	mov rsi, rbp>
new  <	mov [rbp + 64], rbp>

2142:
old  <	add rsi, 48>
new  <	add rbp, 56>

2143:
old  <>
new  <	jmp fclose>

2144:
old  < file_test$396:>
new  <>

2145:
old  <	; Parameter 80 pointer Â£temporary4067>
new  < file_test$405:>

2146:
old  <	mov [rbp + 80], rsi>
new  <	; PostCall 56>

2148:
old  < file_test$397:>
new  < file_test$406:>

2149:
old  <	; Parameter 88 signedint 4>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2150:
old  <	mov dword [rbp + 88], 4>
new  <>

2151:
old  <>
new  < file_test$407:>

2152:
old  < file_test$398:>
new  <	; Parameter 48 pointer "TestX.bin">

2153:
old  <	; Parameter 92 signedint 1>
new  <	mov qword [rbp + 48], string_TestX2Ebin#>

2154:
old  <	mov dword [rbp + 92], 1>
new  <>

2155:
old  <>
new  < file_test$408:>

2156:
old  < file_test$399:>
new  <	; Parameter 56 pointer "w">

2157:
old  <	; Parameter 96 pointer inFilePtr>
new  <	mov qword [rbp + 56], string_w#>

2158:
old  <	mov rax, [rbp + 40]>
new  <>

2159:
old  <	mov [rbp + 96], rax>
new  < file_test$409:>

2160:
old  <>
new  <	; Call 24 fopen 0>

2161:
old  < file_test$400:>
new  <	mov qword [rbp + 24], file_test$410>

2162:
old  <	; Call 56 fread 0>
new  <	mov [rbp + 32], rbp>

2163:
old  <	mov qword [rbp + 56], file_test$401>
new  <	add rbp, 24>

2164:
old  <	mov [rbp + 64], rbp>
new  <	jmp fopen>

2165:
old  <	add rbp, 56>
new  <>

2166:
old  <	jmp fread>
new  < file_test$410:>

2167:
old  <>
new  <	; PostCall 24>

2168:
old  < file_test$401:>
new  <>

2169:
old  <	; PostCall 56>
new  < file_test$411:>

2170:
old  <>
new  <	; GetReturnValue Â£temporary4048>

2171:
old  < file_test$402:>
new  <>

2172:
old  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < file_test$412:>

2173:
old  <>
new  <	; Assign outFilePtr Â£temporary4048>

2174:
old  < file_test$403:>
new  <	mov [rbp + 24], rbx>

2175:
old  <	; Parameter 80 pointer "size2 %i\n">
new  <>

2176:
old  <	mov qword [rbp + 80], string_size22025i0A#>
new  < file_test$413:>

2177:
old  <>
new  <	; NotEqual 425 outFilePtr 0>

2178:
old  < file_test$404:>
new  <	cmp qword [rbp + 24], 0>

2179:
old  <	; Parameter 88 signedint size>
new  <	jne file_test$425>

2180:
old  <	mov eax, [rbp + 48]>
new  <>

2181:
old  <	mov [rbp + 88], eax>
new  < file_test$414:>

2182:
old  <>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2183:
old  < file_test$405:>
new  <>

2184:
old  <	; Call 56 printf 4>
new  < file_test$415:>

2185:
old  <	mov qword [rbp + 56], file_test$406>
new  <	; Parameter 56 pointer stderr>

2186:
old  <	mov [rbp + 64], rbp>
new  <	mov rax, [stderr]>

2187:
old  <	add rbp, 56>
new  <	mov [rbp + 56], rax>

2188:
old  <	mov rdi, rbp>
new  <>

2189:
old  <	add rdi, 4>
new  < file_test$416:>

2190:
old  <	jmp printf>
new  <	; Parameter 64 pointer "Assertion failed: "%s" in file %s at line %i\n">

2191:
old  <>
new  <	mov qword [rbp + 64], string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#>

2192:
old  < file_test$406:>
new  <>

2193:
old  <	; PostCall 56>
new  < file_test$417:>

2194:
old  <>
new  <	; Parameter 72 pointer "outFilePtr != NULL">

2195:
old  < file_test$407:>
new  <	mov qword [rbp + 72], string_outFilePtr20213D20NULL#>

2196:
old  <	; Assign index 0>
new  <>

2197:
old  <	mov dword [rbp + 52], 0>
new  < file_test$418:>

2198:
old  <>
new  <	; Parameter 80 pointer "C:\Users\Stefan\Documents\vagrant\homestead\code\code\FileTest.c">

2199:
old  < file_test$408:>
new  <	mov qword [rbp + 80], string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CFileTest2Ec#>

2200:
old  <	; SignedGreaterThanEqual 426 index size>
new  <>

2201:
old  <	mov eax, [rbp + 48]>
new  < file_test$419:>

2202:
old  <	cmp [rbp + 52], eax>
new  <	; Parameter 88 signedint 151>

2203:
old  <	jge file_test$426>
new  <	mov dword [rbp + 88], 151>

2205:
old  < file_test$409:>
new  < file_test$420:>

2206:
old  <	; PreCall 64 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Call 32 fprintf 20>

2207:
old  <>
new  <	mov qword [rbp + 32], file_test$421>

2208:
old  < file_test$410:>
new  <	mov [rbp + 40], rbp>

2209:
old  <	; Address Â£temporary4072 value>
new  <	add rbp, 32>

2210:
old  <	mov rsi, rbp>
new  <	mov rdi, rbp>

2211:
old  <	add rsi, 56>
new  <	add rdi, 20>

2212:
old  <>
new  <	jmp fprintf>

2213:
old  < file_test$411:>
new  <>

2214:
old  <	; Parameter 88 pointer Â£temporary4072>
new  < file_test$421:>

2215:
old  <	mov [rbp + 88], rsi>
new  <	; PostCall 32>

2217:
old  < file_test$412:>
new  < file_test$422:>

2218:
old  <	; Parameter 96 signedint 8>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2219:
old  <	mov dword [rbp + 96], 8>
new  <>

2220:
old  <>
new  < file_test$423:>

2221:
old  < file_test$413:>
new  <	; Call 32 abort 0>

2222:
old  <	; Parameter 100 signedint 1>
new  <	mov qword [rbp + 32], file_test$424>

2223:
old  <	mov dword [rbp + 100], 1>
new  <	mov [rbp + 40], rbp>

2224:
old  <>
new  <	add rbp, 32>

2225:
old  < file_test$414:>
new  <	jmp abort>

2226:
old  <	; Parameter 104 pointer inFilePtr>
new  <>

2227:
old  <	mov rax, [rbp + 40]>
new  < file_test$424:>

2228:
old  <	mov [rbp + 104], rax>
new  <	; PostCall 32>

2230:
old  < file_test$415:>
new  < file_test$425:>

2231:
old  <	; Call 64 fread 0>
new  <	; Assign size 10>

2232:
old  <	mov qword [rbp + 64], file_test$416>
new  <	mov dword [rbp + 32], 10>

2233:
old  <	mov [rbp + 72], rbp>
new  <>

2234:
old  <	add rbp, 64>
new  < file_test$426:>

2235:
old  <	jmp fread>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2237:
old  < file_test$416:>
new  < file_test$427:>

2238:
old  <	; PostCall 64>
new  <	; Address Â£temporary4053 size>

2239:
old  <>
new  <	mov rsi, rbp>

2240:
old  < file_test$417:>
new  <	add rsi, 32>

2241:
old  <	; PreCall 64 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

2242:
old  <>
new  < file_test$428:>

2243:
old  < file_test$418:>
new  <	; Parameter 64 pointer Â£temporary4053>

2244:
old  <	; Parameter 88 pointer "index2 %i: value %f\n">
new  <	mov [rbp + 64], rsi>

2245:
old  <	mov qword [rbp + 88], string_index22025i3A20value2025f0A#>
new  <>

2246:
old  <>
new  < file_test$429:>

2247:
old  < file_test$419:>
new  <	; Parameter 72 signedint 4>

2248:
old  <	; Parameter 96 signedint index>
new  <	mov dword [rbp + 72], 4>

2249:
old  <	mov eax, [rbp + 52]>
new  <>

2250:
old  <	mov [rbp + 96], eax>
new  < file_test$430:>

2251:
old  <>
new  <	; Parameter 76 signedint 1>

2252:
old  < file_test$420:>
new  <	mov dword [rbp + 76], 1>

2253:
old  <	; PushFloat value>
new  <>

2254:
old  <	fld qword [rbp + 56]>
new  < file_test$431:>

2255:
old  <>
new  <	; Parameter 80 pointer outFilePtr>

2256:
old  < file_test$421:>
new  <	mov rax, [rbp + 24]>

2257:
old  <	; Parameter 100 double value>
new  <	mov [rbp + 80], rax>

2258:
old  <	fstp qword [rbp + 100]>
new  <>

2259:
old  <>
new  < file_test$432:>

2260:
old  < file_test$422:>
new  <	; Call 40 fwrite 0>

2261:
old  <	; Call 64 printf 12>
new  <	mov qword [rbp + 40], file_test$433>

2262:
old  <	mov qword [rbp + 64], file_test$423>
new  <	mov [rbp + 48], rbp>

2263:
old  <	mov [rbp + 72], rbp>
new  <	add rbp, 40>

2264:
old  <	add rbp, 64>
new  <	jmp fwrite>

2265:
old  <	mov rdi, rbp>
new  <>

2266:
old  <	add rdi, 12>
new  < file_test$433:>

2267:
old  <	jmp printf>
new  <	; PostCall 40>

2269:
old  < file_test$423:>
new  < file_test$434:>

2270:
old  <	; PostCall 64>
new  <	; Assign index 0>

2271:
old  <>
new  <	mov dword [rbp + 36], 0>

2272:
old  < file_test$424:>
new  <>

2273:
old  <	; BinaryAdd index index 1>
new  < file_test$435:>

2274:
old  <	inc dword [rbp + 52]>
new  <	; SignedGreaterThanEqual 449 index size>

2275:
old  <>
new  <	mov eax, [rbp + 32]>

2276:
old  < file_test$425:>
new  <	cmp [rbp + 36], eax>

2277:
old  <	; Goto 408>
new  <	jge file_test$449>

2278:
old  <	jmp file_test$408>
new  <>

2279:
old  <>
new  < file_test$436:>

2280:
old  < file_test$426:>
new  <	; SignedMultiply Â£temporary4057 index index>

2281:
old  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov eax, [rbp + 36]>

2282:
old  <>
new  <	xor edx, edx>

2283:
old  < file_test$427:>
new  <	imul dword [rbp + 36]>

2284:
old  <	; Parameter 80 pointer "\n">
new  <>

2285:
old  <	mov qword [rbp + 80], string_0A#>
new  < file_test$437:>

2286:
old  <>
new  <	; IntegralToFloating Â£temporary4058 Â£temporary4057>

2287:
old  < file_test$428:>
new  <	mov [container4bytes#], eax>

2288:
old  <	; Call 56 printf 0>
new  <	fild dword [container4bytes#]>

2289:
old  <	mov qword [rbp + 56], file_test$429>
new  <>

2290:
old  <	mov [rbp + 64], rbp>
new  < file_test$438:>

2291:
old  <	add rbp, 56>
new  <	; PopFloat value>

2292:
old  <	mov rdi, rbp>
new  <	fstp qword [rbp + 40]>

2293:
old  <	jmp printf>
new  <>

2294:
old  <>
new  < file_test$439:>

2295:
old  < file_test$429:>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2296:
old  <	; PostCall 56>
new  <>

2297:
old  <>
new  < file_test$440:>

2298:
old  < file_test$430:>
new  <	; Address Â£temporary4059 value>

2299:
old  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov rsi, rbp>

2300:
old  <>
new  <	add rsi, 40>

2301:
old  < file_test$431:>
new  <>

2302:
old  <	; Parameter 80 pointer inFilePtr>
new  < file_test$441:>

2303:
old  <	mov rax, [rbp + 40]>
new  <	; Parameter 72 pointer Â£temporary4059>

2304:
old  <	mov [rbp + 80], rax>
new  <	mov [rbp + 72], rsi>

2306:
old  < file_test$432:>
new  < file_test$442:>

2307:
old  <	; Call 56 fclose 0>
new  <	; Parameter 80 signedint 8>

2308:
old  <	mov qword [rbp + 56], file_test$433>
new  <	mov dword [rbp + 80], 8>

2309:
old  <	mov [rbp + 64], rbp>
new  <>

2310:
old  <	add rbp, 56>
new  < file_test$443:>

2311:
old  <	jmp fclose>
new  <	; Parameter 84 signedint 1>

2312:
old  <>
new  <	mov dword [rbp + 84], 1>

2313:
old  < file_test$433:>
new  <>

2314:
old  <	; PostCall 56>
new  < file_test$444:>

2315:
old  <>
new  <	; Parameter 88 pointer outFilePtr>

2316:
old  < file_test$434:>
new  <	mov rax, [rbp + 24]>

2317:
old  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov [rbp + 88], rax>

2319:
old  < file_test$435:>
new  < file_test$445:>

2320:
old  <	; Parameter 64 pointer "Test.bin">
new  <	; Call 48 fwrite 0>

2321:
old  <	mov qword [rbp + 64], string_Test2Ebin#>
new  <	mov qword [rbp + 48], file_test$446>

2322:
old  <>
new  <	mov [rbp + 56], rbp>

2323:
old  < file_test$436:>
new  <	add rbp, 48>

2324:
old  <	; Parameter 72 pointer "r">
new  <	jmp fwrite>

2325:
old  <	mov qword [rbp + 72], string_r#>
new  <>

2326:
old  <>
new  < file_test$446:>

2327:
old  < file_test$437:>
new  <	; PostCall 48>

2328:
old  <	; Call 40 fopen 0>
new  <>

2329:
old  <	mov qword [rbp + 40], file_test$438>
new  < file_test$447:>

2330:
old  <	mov [rbp + 48], rbp>
new  <	; BinaryAdd index index 1>

2331:
old  <	add rbp, 40>
new  <	inc dword [rbp + 36]>

2332:
old  <	jmp fopen>
new  <>

2333:
old  <>
new  < file_test$448:>

2334:
old  < file_test$438:>
new  <	; Goto 435>

2335:
old  <	; PostCall 40>
new  <	jmp file_test$435>

2337:
old  < file_test$439:>
new  < file_test$449:>

2338:
old  <	; GetReturnValue Â£temporary4077>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2340:
old  < file_test$440:>
new  < file_test$450:>

2341:
old  <	; Assign inFilePtr Â£temporary4077>
new  <	; Parameter 64 pointer outFilePtr>

2342:
old  <	mov [rbp + 40], rbx>
new  <	mov rax, [rbp + 24]>

2343:
old  <>
new  <	mov [rbp + 64], rax>

2344:
old  < file_test$441:>
new  <>

2345:
old  <	; NotEqual 453 inFilePtr 0>
new  < file_test$451:>

2346:
old  <	cmp qword [rbp + 40], 0>
new  <	; Call 40 fclose 0>

2347:
old  <	jne file_test$453>
new  <	mov qword [rbp + 40], file_test$452>

2348:
old  <>
new  <	mov [rbp + 48], rbp>

2349:
old  < file_test$442:>
new  <	add rbp, 40>

2350:
old  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	jmp fclose>

2352:
old  < file_test$443:>
new  < file_test$452:>

2353:
old  <	; Parameter 76 pointer stderr>
new  <	; PostCall 40>

2354:
old  <	mov rax, [stderr]>
new  <>

2355:
old  <	mov [rbp + 76], rax>
new  < file_test$453:>

2356:
old  <>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2357:
old  < file_test$444:>
new  <>

2358:
old  <	; Parameter 84 pointer "Assertion failed: "%s" in file %s at line %i\n">
new  < file_test$454:>

2359:
old  <	mov qword [rbp + 84], string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#>
new  <	; Parameter 48 pointer "TestX.bin">

2360:
old  <>
new  <	mov qword [rbp + 48], string_TestX2Ebin#>

2361:
old  < file_test$445:>
new  <>

2362:
old  <	; Parameter 92 pointer "inFilePtr != NULL">
new  < file_test$455:>

2363:
old  <	mov qword [rbp + 92], string_inFilePtr20213D20NULL#>
new  <	; Parameter 56 pointer "r">

2364:
old  <>
new  <	mov qword [rbp + 56], string_r#>

2365:
old  < file_test$446:>
new  <>

2366:
old  <	; Parameter 100 pointer "C:\Users\Stefan\Documents\vagrant\homestead\code\code\FileTest.c">
new  < file_test$456:>

2367:
old  <	mov qword [rbp + 100], string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CFileTest2Ec#>
new  <	; Call 24 fopen 0>

2368:
old  <>
new  <	mov qword [rbp + 24], file_test$457>

2369:
old  < file_test$447:>
new  <	mov [rbp + 32], rbp>

2370:
old  <	; Parameter 108 signedint 154>
new  <	add rbp, 24>

2371:
old  <	mov dword [rbp + 108], 154>
new  <	jmp fopen>

2373:
old  < file_test$448:>
new  < file_test$457:>

2374:
old  <	; Call 52 fprintf 20>
new  <	; PostCall 24>

2375:
old  <	mov qword [rbp + 52], file_test$449>
new  <>

2376:
old  <	mov [rbp + 60], rbp>
new  < file_test$458:>

2377:
old  <	add rbp, 52>
new  <	; GetReturnValue Â£temporary4062>

2378:
old  <	mov rdi, rbp>
new  <>

2379:
old  <	add rdi, 20>
new  < file_test$459:>

2380:
old  <	jmp fprintf>
new  <	; Assign inFilePtr Â£temporary4062>

2381:
old  <>
new  <	mov [rbp + 24], rbx>

2382:
old  < file_test$449:>
new  <>

2383:
old  <	; PostCall 52>
new  < file_test$460:>

2384:
old  <>
new  <	; NotEqual 472 inFilePtr 0>

2385:
old  < file_test$450:>
new  <	cmp qword [rbp + 24], 0>

2386:
old  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	jne file_test$472>

2388:
old  < file_test$451:>
new  < file_test$461:>

2389:
old  <	; Call 52 abort 0>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2390:
old  <	mov qword [rbp + 52], file_test$452>
new  <>

2391:
old  <	mov [rbp + 60], rbp>
new  < file_test$462:>

2392:
old  <	add rbp, 52>
new  <	; Parameter 64 pointer stderr>

2393:
old  <	jmp abort>
new  <	mov rax, [stderr]>

2394:
old  <>
new  <	mov [rbp + 64], rax>

2395:
old  < file_test$452:>
new  <>

2396:
old  <	; PostCall 52>
new  < file_test$463:>

2397:
old  <>
new  <	; Parameter 72 pointer "Assertion failed: "%s" in file %s at line %i\n">

2398:
old  < file_test$453:>
new  <	mov qword [rbp + 72], string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#>

2399:
old  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

2400:
old  <>
new  < file_test$464:>

2401:
old  < file_test$454:>
new  <	; Parameter 80 pointer "inFilePtr != NULL">

2402:
old  <	; Address Â£temporary4082 size>
new  <	mov qword [rbp + 80], string_inFilePtr20213D20NULL#>

2403:
old  <	mov rsi, rbp>
new  <>

2404:
old  <	add rsi, 48>
new  < file_test$465:>

2405:
old  <>
new  <	; Parameter 88 pointer "C:\Users\Stefan\Documents\vagrant\homestead\code\code\FileTest.c">

2406:
old  < file_test$455:>
new  <	mov qword [rbp + 88], string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CFileTest2Ec#>

2407:
old  <	; Parameter 76 pointer Â£temporary4082>
new  <>

2408:
old  <	mov [rbp + 76], rsi>
new  < file_test$466:>

2409:
old  <>
new  <	; Parameter 96 signedint 168>

2410:
old  < file_test$456:>
new  <	mov dword [rbp + 96], 168>

2411:
old  <	; Parameter 84 signedint 4>
new  <>

2412:
old  <	mov dword [rbp + 84], 4>
new  < file_test$467:>

2413:
old  <>
new  <	; Call 40 fprintf 20>

2414:
old  < file_test$457:>
new  <	mov qword [rbp + 40], file_test$468>

2415:
old  <	; Parameter 88 signedint 1>
new  <	mov [rbp + 48], rbp>

2416:
old  <	mov dword [rbp + 88], 1>
new  <	add rbp, 40>

2417:
old  <>
new  <	mov rdi, rbp>

2418:
old  < file_test$458:>
new  <	add rdi, 20>

2419:
old  <	; Parameter 92 pointer inFilePtr>
new  <	jmp fprintf>

2420:
old  <	mov rax, [rbp + 40]>
new  <>

2421:
old  <	mov [rbp + 92], rax>
new  < file_test$468:>

2422:
old  <>
new  <	; PostCall 40>

2423:
old  < file_test$459:>
new  <>

2424:
old  <	; Call 52 fread 0>
new  < file_test$469:>

2425:
old  <	mov qword [rbp + 52], file_test$460>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2426:
old  <	mov [rbp + 60], rbp>
new  <>

2427:
old  <	add rbp, 52>
new  < file_test$470:>

2428:
old  <	jmp fread>
new  <	; Call 40 abort 0>

2429:
old  <>
new  <	mov qword [rbp + 40], file_test$471>

2430:
old  < file_test$460:>
new  <	mov [rbp + 48], rbp>

2431:
old  <	; PostCall 52>
new  <	add rbp, 40>

2432:
old  <>
new  <	jmp abort>

2433:
old  < file_test$461:>
new  <>

2434:
old  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < file_test$471:>

2435:
old  <>
new  <	; PostCall 40>

2436:
old  < file_test$462:>
new  <>

2437:
old  <	; Parameter 76 pointer "size3 %i total %i\n">
new  < file_test$472:>

2438:
old  <	mov qword [rbp + 76], string_size32025i20total2025i0A#>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2440:
old  < file_test$463:>
new  < file_test$473:>

2441:
old  <	; Parameter 84 signedint size>
new  <	; Address Â£temporary4067 size>

2442:
old  <	mov eax, [rbp + 48]>
new  <	mov rsi, rbp>

2443:
old  <	mov [rbp + 84], eax>
new  <	add rsi, 32>

2445:
old  < file_test$464:>
new  < file_test$474:>

2446:
old  <	; SignedMultiply Â£temporary4084 size 8>
new  <	; Parameter 64 pointer Â£temporary4067>

2447:
old  <	mov eax, [rbp + 48]>
new  <	mov [rbp + 64], rsi>

2448:
old  <	xor edx, edx>
new  <>

2449:
old  <	imul dword [int4$8#]>
new  < file_test$475:>

2450:
old  <>
new  <	; Parameter 72 signedint 4>

2451:
old  < file_test$465:>
new  <	mov dword [rbp + 72], 4>

2452:
old  <	; Parameter 88 signedint Â£temporary4084>
new  <>

2453:
old  <	mov [rbp + 88], eax>
new  < file_test$476:>

2454:
old  <>
new  <	; Parameter 76 signedint 1>

2455:
old  < file_test$466:>
new  <	mov dword [rbp + 76], 1>

2456:
old  <	; Call 52 printf 8>
new  <>

2457:
old  <	mov qword [rbp + 52], file_test$467>
new  < file_test$477:>

2458:
old  <	mov [rbp + 60], rbp>
new  <	; Parameter 80 pointer inFilePtr>

2459:
old  <	add rbp, 52>
new  <	mov rax, [rbp + 24]>

2460:
old  <	mov rdi, rbp>
new  <	mov [rbp + 80], rax>

2461:
old  <	add rdi, 8>
new  <>

2462:
old  <	jmp printf>
new  < file_test$478:>

2463:
old  <>
new  <	; Call 40 fread 0>

2464:
old  < file_test$467:>
new  <	mov qword [rbp + 40], file_test$479>

2465:
old  <	; PostCall 52>
new  <	mov [rbp + 48], rbp>

2466:
old  <>
new  <	add rbp, 40>

2467:
old  < file_test$468:>
new  <	jmp fread>

2468:
old  <	; SignedMultiply total size 8>
new  <>

2469:
old  <	mov eax, [rbp + 48]>
new  < file_test$479:>

2470:
old  <	xor edx, edx>
new  <	; PostCall 40>

2471:
old  <	imul dword [int4$8#]>
new  <>

2472:
old  <	mov [rbp + 52], eax>
new  < file_test$480:>

2473:
old  <>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2474:
old  < file_test$469:>
new  <>

2475:
old  <	; PreCall 60 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < file_test$481:>

2476:
old  <>
new  <	; Parameter 64 pointer "size1: %i\n">

2477:
old  < file_test$470:>
new  <	mov qword [rbp + 64], string_size13A2025i0A#>

2478:
old  <	; Parameter 84 signedint total>
new  <>

2479:
old  <	mov eax, [rbp + 52]>
new  < file_test$482:>

2480:
old  <	mov [rbp + 84], eax>
new  <	; Parameter 72 signedint size>

2481:
old  <>
new  <	mov eax, [rbp + 32]>

2482:
old  < file_test$471:>
new  <	mov [rbp + 72], eax>

2483:
old  <	; Call 60 malloc 0>
new  <>

2484:
old  <	mov qword [rbp + 60], file_test$472>
new  < file_test$483:>

2485:
old  <	mov [rbp + 68], rbp>
new  <	; Call 40 printf 4>

2486:
old  <	add rbp, 60>
new  <	mov qword [rbp + 40], file_test$484>

2487:
old  <	jmp malloc>
new  <	mov [rbp + 48], rbp>

2488:
old  <>
new  <	add rbp, 40>

2489:
old  < file_test$472:>
new  <	mov rdi, rbp>

2490:
old  <	; PostCall 60>
new  <	add rdi, 4>

2491:
old  <>
new  <	jmp printf>

2492:
old  < file_test$473:>
new  <>

2493:
old  <	; GetReturnValue Â£temporary4087>
new  < file_test$484:>

2494:
old  <>
new  <	; PostCall 40>

2495:
old  < file_test$474:>
new  <>

2496:
old  <	; Assign p Â£temporary4087>
new  < file_test$485:>

2497:
old  <	mov [rbp + 60], rbx>
new  <	; Assign index 0>

2498:
old  <>
new  <	mov dword [rbp + 36], 0>

2499:
old  < file_test$475:>
new  <>

2500:
old  <	; IntegralToIntegral Â£temporary4088 size>
new  < file_test$486:>

2501:
old  <	mov eax, [rbp + 48]>
new  <	; SignedGreaterThanEqual 504 index size>

2502:
old  <	mov rbx, 4294967295>
new  <	mov eax, [rbp + 32]>

2503:
old  <	and rax, rbx>
new  <	cmp [rbp + 36], eax>

2504:
old  <>
new  <	jge file_test$504>

2505:
old  < file_test$476:>
new  <>

2506:
old  <	; UnsignedMultiply Â£temporary4090 Â£temporary4088 8>
new  < file_test$487:>

2507:
old  <	xor rdx, rdx>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2508:
old  <	mul qword [int8$8#]>
new  <>

2509:
old  <>
new  < file_test$488:>

2510:
old  < file_test$477:>
new  <	; Address Â£temporary4072 value>

2511:
old  <	; BinaryAdd endPtr p Â£temporary4090>
new  <	mov rsi, rbp>

2512:
old  <	mov rbx, [rbp + 60]>
new  <	add rsi, 40>

2513:
old  <	add rbx, rax>
new  <>

2514:
old  <	mov [rbp + 68], rbx>
new  < file_test$489:>

2515:
old  <>
new  <	; Parameter 72 pointer Â£temporary4072>

2516:
old  < file_test$478:>
new  <	mov [rbp + 72], rsi>

2517:
old  <	; NotEqual 490 p 0>
new  <>

2518:
old  <	cmp qword [rbp + 60], 0>
new  < file_test$490:>

2519:
old  <	jne file_test$490>
new  <	; Parameter 80 signedint 8>

2520:
old  <>
new  <	mov dword [rbp + 80], 8>

2521:
old  < file_test$479:>
new  <>

2522:
old  <	; PreCall 76 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < file_test$491:>

2523:
old  <>
new  <	; Parameter 84 signedint 1>

2524:
old  < file_test$480:>
new  <	mov dword [rbp + 84], 1>

2525:
old  <	; Parameter 100 pointer stderr>
new  <>

2526:
old  <	mov rax, [stderr]>
new  < file_test$492:>

2527:
old  <	mov [rbp + 100], rax>
new  <	; Parameter 88 pointer inFilePtr>

2528:
old  <>
new  <	mov rax, [rbp + 24]>

2529:
old  < file_test$481:>
new  <	mov [rbp + 88], rax>

2530:
old  <	; Parameter 108 pointer "Assertion failed: "%s" in file %s at line %i\n">
new  <>

2531:
old  <	mov qword [rbp + 108], string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#>
new  < file_test$493:>

2532:
old  <>
new  <	; Call 48 fread 0>

2533:
old  < file_test$482:>
new  <	mov qword [rbp + 48], file_test$494>

2534:
old  <	; Parameter 116 pointer "p != NULL">
new  <	mov [rbp + 56], rbp>

2535:
old  <	mov qword [rbp + 116], string_p20213D20NULL#>
new  <	add rbp, 48>

2536:
old  <>
new  <	jmp fread>

2537:
old  < file_test$483:>
new  <>

2538:
old  <	; Parameter 124 pointer "C:\Users\Stefan\Documents\vagrant\homestead\code\code\FileTest.c">
new  < file_test$494:>

2539:
old  <	mov qword [rbp + 124], string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CFileTest2Ec#>
new  <	; PostCall 48>

2541:
old  < file_test$484:>
new  < file_test$495:>

2542:
old  <	; Parameter 132 signedint 161>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2543:
old  <	mov dword [rbp + 132], 161>
new  <>

2544:
old  <>
new  < file_test$496:>

2545:
old  < file_test$485:>
new  <	; Parameter 72 pointer "index1: %i: value %f\n">

2546:
old  <	; Call 76 fprintf 20>
new  <	mov qword [rbp + 72], string_index13A2025i3A20value2025f0A#>

2547:
old  <	mov qword [rbp + 76], file_test$486>
new  <>

2548:
old  <	mov [rbp + 84], rbp>
new  < file_test$497:>

2549:
old  <	add rbp, 76>
new  <	; Parameter 80 signedint index>

2550:
old  <	mov rdi, rbp>
new  <	mov eax, [rbp + 36]>

2551:
old  <	add rdi, 20>
new  <	mov [rbp + 80], eax>

2552:
old  <	jmp fprintf>
new  <>

2553:
old  <>
new  < file_test$498:>

2554:
old  < file_test$486:>
new  <	; PushFloat value>

2555:
old  <	; PostCall 76>
new  <	fld qword [rbp + 40]>

2557:
old  < file_test$487:>
new  < file_test$499:>

2558:
old  <	; PreCall 76 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter 84 double value>

2559:
old  <>
new  <	fstp qword [rbp + 84]>

2560:
old  < file_test$488:>
new  <>

2561:
old  <	; Call 76 abort 0>
new  < file_test$500:>

2562:
old  <	mov qword [rbp + 76], file_test$489>
new  <	; Call 48 printf 12>

2563:
old  <	mov [rbp + 84], rbp>
new  <	mov qword [rbp + 48], file_test$501>

2564:
old  <	add rbp, 76>
new  <	mov [rbp + 56], rbp>

2565:
old  <	jmp abort>
new  <	add rbp, 48>

2566:
old  <>
new  <	mov rdi, rbp>

2567:
old  < file_test$489:>
new  <	add rdi, 12>

2568:
old  <	; PostCall 76>
new  <	jmp printf>

2570:
old  < file_test$490:>
new  < file_test$501:>

2571:
old  <	; PreCall 76 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; PostCall 48>

2573:
old  < file_test$491:>
new  < file_test$502:>

2574:
old  <	; Parameter 100 pointer "malloc %u %u %u\n">
new  <	; BinaryAdd index index 1>

2575:
old  <	mov qword [rbp + 100], string_malloc2025u2025u2025u0A#>
new  <	inc dword [rbp + 36]>

2577:
old  < file_test$492:>
new  < file_test$503:>

2578:
old  <	; Parameter 108 pointer p>
new  <	; Goto 486>

2579:
old  <	mov rax, [rbp + 60]>
new  <	jmp file_test$486>

2580:
old  <	mov [rbp + 108], rax>
new  <>

2581:
old  <>
new  < file_test$504:>

2582:
old  < file_test$493:>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2583:
old  <	; Parameter 116 signedint total>
new  <>

2584:
old  <	mov eax, [rbp + 52]>
new  < file_test$505:>

2585:
old  <	mov [rbp + 116], eax>
new  <	; Parameter 64 pointer "\n">

2586:
old  <>
new  <	mov qword [rbp + 64], string_0A#>

2587:
old  < file_test$494:>
new  <>

2588:
old  <	; Parameter 120 pointer endPtr>
new  < file_test$506:>

2589:
old  <	mov rax, [rbp + 68]>
new  <	; Call 40 printf 0>

2590:
old  <	mov [rbp + 120], rax>
new  <	mov qword [rbp + 40], file_test$507>

2591:
old  <>
new  <	mov [rbp + 48], rbp>

2592:
old  < file_test$495:>
new  <	add rbp, 40>

2593:
old  <	; Call 76 printf 20>
new  <	mov rdi, rbp>

2594:
old  <	mov qword [rbp + 76], file_test$496>
new  <	jmp printf>

2595:
old  <	mov [rbp + 84], rbp>
new  <>

2596:
old  <	add rbp, 76>
new  < file_test$507:>

2597:
old  <	mov rdi, rbp>
new  <	; PostCall 40>

2598:
old  <	add rdi, 20>
new  <>

2599:
old  <	jmp printf>
new  < file_test$508:>

2600:
old  <>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2601:
old  < file_test$496:>
new  <>

2602:
old  <	; PostCall 76>
new  < file_test$509:>

2603:
old  <>
new  <	; Parameter 64 pointer inFilePtr>

2604:
old  < file_test$497:>
new  <	mov rax, [rbp + 24]>

2605:
old  <	; PreCall 76 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov [rbp + 64], rax>

2607:
old  < file_test$498:>
new  < file_test$510:>

2608:
old  <	; Parameter 100 pointer p>
new  <	; Call 40 fclose 0>

2609:
old  <	mov rax, [rbp + 60]>
new  <	mov qword [rbp + 40], file_test$511>

2610:
old  <	mov [rbp + 100], rax>
new  <	mov [rbp + 48], rbp>

2611:
old  <>
new  <	add rbp, 40>

2612:
old  < file_test$499:>
new  <	jmp fclose>

2613:
old  <	; Parameter 108 signedint total>
new  <>

2614:
old  <	mov eax, [rbp + 52]>
new  < file_test$511:>

2615:
old  <	mov [rbp + 108], eax>
new  <	; PostCall 40>

2617:
old  < file_test$500:>
new  < file_test$512:>

2618:
old  <	; Parameter 112 signedint 1>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2619:
old  <	mov dword [rbp + 112], 1>
new  <>

2620:
old  <>
new  < file_test$513:>

2621:
old  < file_test$501:>
new  <	; Parameter 48 pointer "TestY.bin">

2622:
old  <	; Parameter 116 pointer inFilePtr>
new  <	mov qword [rbp + 48], string_TestY2Ebin#>

2623:
old  <	mov rax, [rbp + 40]>
new  <>

2624:
old  <	mov [rbp + 116], rax>
new  < file_test$514:>

2625:
old  <>
new  <	; Parameter 56 pointer "w">

2626:
old  < file_test$502:>
new  <	mov qword [rbp + 56], string_w#>

2627:
old  <	; Call 76 fread 0>
new  <>

2628:
old  <	mov qword [rbp + 76], file_test$503>
new  < file_test$515:>

2629:
old  <	mov [rbp + 84], rbp>
new  <	; Call 24 fopen 0>

2630:
old  <	add rbp, 76>
new  <	mov qword [rbp + 24], file_test$516>

2631:
old  <	jmp fread>
new  <	mov [rbp + 32], rbp>

2632:
old  <>
new  <	add rbp, 24>

2633:
old  < file_test$503:>
new  <	jmp fopen>

2634:
old  <	; PostCall 76>
new  <>

2635:
old  <>
new  < file_test$516:>

2636:
old  < file_test$504:>
new  <	; PostCall 24>

2637:
old  <	; Assign index 0>
new  <>

2638:
old  <	mov dword [rbp + 56], 0>
new  < file_test$517:>

2639:
old  <>
new  <	; GetReturnValue Â£temporary4077>

2640:
old  < file_test$505:>
new  <>

2641:
old  <	; SignedGreaterThanEqual 519 index size>
new  < file_test$518:>

2642:
old  <	mov eax, [rbp + 48]>
new  <	; Assign outFilePtr Â£temporary4077>

2643:
old  <	cmp [rbp + 56], eax>
new  <	mov [rbp + 24], rbx>

2644:
old  <	jge file_test$519>
new  <>

2645:
old  <>
new  < file_test$519:>

2646:
old  < file_test$506:>
new  <	; NotEqual 531 outFilePtr 0>

2647:
old  <	; PreCall 76 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	cmp qword [rbp + 24], 0>

2648:
old  <>
new  <	jne file_test$531>

2649:
old  < file_test$507:>
new  <>

2650:
old  <	; Parameter 100 pointer "index3 %i: value %f\n">
new  < file_test$520:>

2651:
old  <	mov qword [rbp + 100], string_index32025i3A20value2025f0A#>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2653:
old  < file_test$508:>
new  < file_test$521:>

2654:
old  <	; Parameter 108 signedint index>
new  <	; Parameter 56 pointer stderr>

2655:
old  <	mov eax, [rbp + 56]>
new  <	mov rax, [stderr]>

2656:
old  <	mov [rbp + 108], eax>
new  <	mov [rbp + 56], rax>

2658:
old  < file_test$509:>
new  < file_test$522:>

2659:
old  <	; IntegralToIntegral Â£temporary4100 index>
new  <	; Parameter 64 pointer "Assertion failed: "%s" in file %s at line %i\n">

2660:
old  <	mov eax, [rbp + 56]>
new  <	mov qword [rbp + 64], string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#>

2661:
old  <	mov rbx, 4294967295>
new  <>

2662:
old  <	and rax, rbx>
new  < file_test$523:>

2663:
old  <>
new  <	; Parameter 72 pointer "outFilePtr != NULL">

2664:
old  < file_test$510:>
new  <	mov qword [rbp + 72], string_outFilePtr20213D20NULL#>

2665:
old  <	; UnsignedMultiply Â£temporary4101 Â£temporary4100 8>
new  <>

2666:
old  <	xor rdx, rdx>
new  < file_test$524:>

2667:
old  <	mul qword [int8$8#]>
new  <	; Parameter 80 pointer "C:\Users\Stefan\Documents\vagrant\homestead\code\code\FileTest.c">

2668:
old  <>
new  <	mov qword [rbp + 80], string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CFileTest2Ec#>

2669:
old  < file_test$511:>
new  <>

2670:
old  <	; BinaryAdd Â£temporary4102 p Â£temporary4101>
new  < file_test$525:>

2671:
old  <	mov rsi, [rbp + 60]>
new  <	; Parameter 88 signedint 183>

2672:
old  <	add rsi, rax>
new  <	mov dword [rbp + 88], 183>

2674:
old  < file_test$512:>
new  < file_test$526:>

2675:
old  <	; Dereference Â£temporary4099 -> Â£temporary4102 Â£temporary4102 0>
new  <	; Call 32 fprintf 20>

2676:
old  <>
new  <	mov qword [rbp + 32], file_test$527>

2677:
old  < file_test$513:>
new  <	mov [rbp + 40], rbp>

2678:
old  <	; PushFloat Â£temporary4099 -> Â£temporary4102>
new  <	add rbp, 32>

2679:
old  <	fld qword [rsi]>
new  <	mov rdi, rbp>

2680:
old  <>
new  <	add rdi, 20>

2681:
old  < file_test$514:>
new  <	jmp fprintf>

2682:
old  <	; Parameter 112 double Â£temporary4099 -> Â£temporary4102>
new  <>

2683:
old  <	fstp qword [rbp + 112]>
new  < file_test$527:>

2684:
old  <>
new  <	; PostCall 32>

2685:
old  < file_test$515:>
new  <>

2686:
old  <	; Call 76 printf 12>
new  < file_test$528:>

2687:
old  <	mov qword [rbp + 76], file_test$516>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2688:
old  <	mov [rbp + 84], rbp>
new  <>

2689:
old  <	add rbp, 76>
new  < file_test$529:>

2690:
old  <	mov rdi, rbp>
new  <	; Call 32 abort 0>

2691:
old  <	add rdi, 12>
new  <	mov qword [rbp + 32], file_test$530>

2692:
old  <	jmp printf>
new  <	mov [rbp + 40], rbp>

2693:
old  <>
new  <	add rbp, 32>

2694:
old  < file_test$516:>
new  <	jmp abort>

2695:
old  <	; PostCall 76>
new  <>

2696:
old  <>
new  < file_test$530:>

2697:
old  < file_test$517:>
new  <	; PostCall 32>

2698:
old  <	; BinaryAdd index index 1>
new  <>

2699:
old  <	inc dword [rbp + 56]>
new  < file_test$531:>

2700:
old  <>
new  <	; Assign size 10>

2701:
old  < file_test$518:>
new  <	mov dword [rbp + 32], 10>

2702:
old  <	; Goto 505>
new  <>

2703:
old  <	jmp file_test$505>
new  < file_test$532:>

2704:
old  <>
new  <	; Assign index 0>

2705:
old  < file_test$519:>
new  <	mov dword [rbp + 36], 0>

2706:
old  <	; PreCall 76 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

2707:
old  <>
new  < file_test$533:>

2708:
old  < file_test$520:>
new  <	; SignedGreaterThanEqual 547 index size>

2709:
old  <	; Parameter 100 pointer "\n">
new  <	mov eax, [rbp + 32]>

2710:
old  <	mov qword [rbp + 100], string_0A#>
new  <	cmp [rbp + 36], eax>

2711:
old  <>
new  <	jge file_test$547>

2712:
old  < file_test$521:>
new  <>

2713:
old  <	; Call 76 printf 0>
new  < file_test$534:>

2714:
old  <	mov qword [rbp + 76], file_test$522>
new  <	; SignedMultiply Â£temporary4084 index index>

2715:
old  <	mov [rbp + 84], rbp>
new  <	mov eax, [rbp + 36]>

2716:
old  <	add rbp, 76>
new  <	xor edx, edx>

2717:
old  <	mov rdi, rbp>
new  <	imul dword [rbp + 36]>

2718:
old  <	jmp printf>
new  <>

2719:
old  <>
new  < file_test$535:>

2720:
old  < file_test$522:>
new  <	; IntegralToFloating Â£temporary4085 Â£temporary4084>

2721:
old  <	; PostCall 76>
new  <	mov [container4bytes#], eax>

2722:
old  <>
new  <	fild dword [container4bytes#]>

2723:
old  < file_test$523:>
new  <>

2724:
old  <	; PreCall 76 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < file_test$536:>

2725:
old  <>
new  <	; PopFloat value>

2726:
old  < file_test$524:>
new  <	fstp qword [rbp + 40]>

2727:
old  <	; Parameter 100 pointer p>
new  <>

2728:
old  <	mov rax, [rbp + 60]>
new  < file_test$537:>

2729:
old  <	mov [rbp + 100], rax>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2731:
old  < file_test$525:>
new  < file_test$538:>

2732:
old  <	; Call 76 free 0>
new  <	; Address Â£temporary4086 value>

2733:
old  <	mov qword [rbp + 76], file_test$526>
new  <	mov rsi, rbp>

2734:
old  <	mov [rbp + 84], rbp>
new  <	add rsi, 40>

2735:
old  <	add rbp, 76>
new  <>

2736:
old  <	jmp free>
new  < file_test$539:>

2737:
old  <>
new  <	; Parameter 72 pointer Â£temporary4086>

2738:
old  < file_test$526:>
new  <	mov [rbp + 72], rsi>

2739:
old  <	; PostCall 76>
new  <>

2740:
old  <>
new  < file_test$540:>

2741:
old  < file_test$527:>
new  <	; Parameter 80 signedint 8>

2742:
old  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov dword [rbp + 80], 8>

2744:
old  < file_test$528:>
new  < file_test$541:>

2745:
old  <	; Parameter 76 pointer inFilePtr>
new  <	; Parameter 84 signedint 1>

2746:
old  <	mov rax, [rbp + 40]>
new  <	mov dword [rbp + 84], 1>

2747:
old  <	mov [rbp + 76], rax>
new  <>

2748:
old  <>
new  < file_test$542:>

2749:
old  < file_test$529:>
new  <	; Parameter 88 pointer outFilePtr>

2750:
old  <	; Call 52 fclose 0>
new  <	mov rax, [rbp + 24]>

2751:
old  <	mov qword [rbp + 52], file_test$530>
new  <	mov [rbp + 88], rax>

2752:
old  <	mov [rbp + 60], rbp>
new  <>

2753:
old  <	add rbp, 52>
new  < file_test$543:>

2754:
old  <	jmp fclose>
new  <	; Call 48 fwrite 0>

2755:
old  <>
new  <	mov qword [rbp + 48], file_test$544>

2756:
old  < file_test$530:>
new  <	mov [rbp + 56], rbp>

2757:
old  <	; PostCall 52>
new  <	add rbp, 48>

2758:
old  <>
new  <	jmp fwrite>

2759:
old  < file_test$531:>
new  <>

2760:
old  <	; Assign personVector[0].name[0] 65>
new  < file_test$544:>

2761:
old  <	mov byte [rbp + 40], 65>
new  <	; PostCall 48>

2763:
old  < file_test$532:>
new  < file_test$545:>

2764:
old  <	; Assign personVector[0].name[1] 100>
new  <	; BinaryAdd index index 1>

2765:
old  <	mov byte [rbp + 41], 100>
new  <	inc dword [rbp + 36]>

2767:
old  < file_test$533:>
new  < file_test$546:>

2768:
old  <	; Assign personVector[0].name[2] 97>
new  <	; Goto 533>

2769:
old  <	mov byte [rbp + 42], 97>
new  <	jmp file_test$533>

2771:
old  < file_test$534:>
new  < file_test$547:>

2772:
old  <	; Assign personVector[0].name[3] 109>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2773:
old  <	mov byte [rbp + 43], 109>
new  <>

2774:
old  <>
new  < file_test$548:>

2775:
old  < file_test$535:>
new  <	; Parameter 64 pointer outFilePtr>

2776:
old  <	; Assign personVector[0].name[4] 32>
new  <	mov rax, [rbp + 24]>

2777:
old  <	mov byte [rbp + 44], 32>
new  <	mov [rbp + 64], rax>

2779:
old  < file_test$536:>
new  < file_test$549:>

2780:
old  <	; Assign personVector[0].name[5] 66>
new  <	; Call 40 fclose 0>

2781:
old  <	mov byte [rbp + 45], 66>
new  <	mov qword [rbp + 40], file_test$550>

2782:
old  <>
new  <	mov [rbp + 48], rbp>

2783:
old  < file_test$537:>
new  <	add rbp, 40>

2784:
old  <	; Assign personVector[0].name[6] 101>
new  <	jmp fclose>

2785:
old  <	mov byte [rbp + 46], 101>
new  <>

2786:
old  <>
new  < file_test$550:>

2787:
old  < file_test$538:>
new  <	; PostCall 40>

2788:
old  <	; Assign personVector[0].name[7] 114>
new  <>

2789:
old  <	mov byte [rbp + 47], 114>
new  < file_test$551:>

2790:
old  <>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2791:
old  < file_test$539:>
new  <>

2792:
old  <	; Assign personVector[0].name[8] 116>
new  < file_test$552:>

2793:
old  <	mov byte [rbp + 48], 116>
new  <	; Parameter 48 pointer "TestY.bin">

2794:
old  <>
new  <	mov qword [rbp + 48], string_TestY2Ebin#>

2795:
old  < file_test$540:>
new  <>

2796:
old  <	; Assign personVector[0].name[9] 105>
new  < file_test$553:>

2797:
old  <	mov byte [rbp + 49], 105>
new  <	; Parameter 56 pointer "r">

2798:
old  <>
new  <	mov qword [rbp + 56], string_r#>

2799:
old  < file_test$541:>
new  <>

2800:
old  <	; Assign personVector[0].name[10] 108>
new  < file_test$554:>

2801:
old  <	mov byte [rbp + 50], 108>
new  <	; Call 24 fopen 0>

2802:
old  <>
new  <	mov qword [rbp + 24], file_test$555>

2803:
old  < file_test$542:>
new  <	mov [rbp + 32], rbp>

2804:
old  <	; Assign personVector[0].name[11] 115>
new  <	add rbp, 24>

2805:
old  <	mov byte [rbp + 51], 115>
new  <	jmp fopen>

2807:
old  < file_test$543:>
new  < file_test$555:>

2808:
old  <	; Assign personVector[0].name[12] 115>
new  <	; PostCall 24>

2809:
old  <	mov byte [rbp + 52], 115>
new  <>

2810:
old  <>
new  < file_test$556:>

2811:
old  < file_test$544:>
new  <	; GetReturnValue Â£temporary4089>

2812:
old  <	; Assign personVector[0].name[13] 111>
new  <>

2813:
old  <	mov byte [rbp + 53], 111>
new  < file_test$557:>

2814:
old  <>
new  <	; Assign inFilePtr Â£temporary4089>

2815:
old  < file_test$545:>
new  <	mov [rbp + 24], rbx>

2816:
old  <	; Assign personVector[0].name[14] 110>
new  <>

2817:
old  <	mov byte [rbp + 54], 110>
new  < file_test$558:>

2818:
old  <>
new  <	; NotEqual 570 inFilePtr 0>

2819:
old  < file_test$546:>
new  <	cmp qword [rbp + 24], 0>

2820:
old  <	; Assign personVector[0].name[15] 0>
new  <	jne file_test$570>

2821:
old  <	mov byte [rbp + 55], 0>
new  <>

2822:
old  <>
new  < file_test$559:>

2823:
old  < file_test$547:>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2824:
old  <	; Assign personVector[0].phone 12345>
new  <>

2825:
old  <	mov dword [rbp + 88], 12345>
new  < file_test$560:>

2826:
old  <>
new  <	; Parameter 56 pointer stderr>

2827:
old  < file_test$548:>
new  <	mov rax, [stderr]>

2828:
old  <	; Assign personVector[1].name[0] 66>
new  <	mov [rbp + 56], rax>

2829:
old  <	mov byte [rbp + 92], 66>
new  <>

2830:
old  <>
new  < file_test$561:>

2831:
old  < file_test$549:>
new  <	; Parameter 64 pointer "Assertion failed: "%s" in file %s at line %i\n">

2832:
old  <	; Assign personVector[1].name[1] 101>
new  <	mov qword [rbp + 64], string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#>

2833:
old  <	mov byte [rbp + 93], 101>
new  <>

2834:
old  <>
new  < file_test$562:>

2835:
old  < file_test$550:>
new  <	; Parameter 72 pointer "inFilePtr != NULL">

2836:
old  <	; Assign personVector[1].name[2] 114>
new  <	mov qword [rbp + 72], string_inFilePtr20213D20NULL#>

2837:
old  <	mov byte [rbp + 94], 114>
new  <>

2838:
old  <>
new  < file_test$563:>

2839:
old  < file_test$551:>
new  <	; Parameter 80 pointer "C:\Users\Stefan\Documents\vagrant\homestead\code\code\FileTest.c">

2840:
old  <	; Assign personVector[1].name[3] 116>
new  <	mov qword [rbp + 80], string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CFileTest2Ec#>

2841:
old  <	mov byte [rbp + 95], 116>
new  <>

2842:
old  <>
new  < file_test$564:>

2843:
old  < file_test$552:>
new  <	; Parameter 88 signedint 197>

2844:
old  <	; Assign personVector[1].name[4] 105>
new  <	mov dword [rbp + 88], 197>

2845:
old  <	mov byte [rbp + 96], 105>
new  <>

2846:
old  <>
new  < file_test$565:>

2847:
old  < file_test$553:>
new  <	; Call 32 fprintf 20>

2848:
old  <	; Assign personVector[1].name[5] 108>
new  <	mov qword [rbp + 32], file_test$566>

2849:
old  <	mov byte [rbp + 97], 108>
new  <	mov [rbp + 40], rbp>

2850:
old  <>
new  <	add rbp, 32>

2851:
old  < file_test$554:>
new  <	mov rdi, rbp>

2852:
old  <	; Assign personVector[1].name[6] 32>
new  <	add rdi, 20>

2853:
old  <	mov byte [rbp + 98], 32>
new  <	jmp fprintf>

2855:
old  < file_test$555:>
new  < file_test$566:>

2856:
old  <	; Assign personVector[1].name[7] 67>
new  <	; PostCall 32>

2857:
old  <	mov byte [rbp + 99], 67>
new  <>

2858:
old  <>
new  < file_test$567:>

2859:
old  < file_test$556:>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2860:
old  <	; Assign personVector[1].name[8] 101>
new  <>

2861:
old  <	mov byte [rbp + 100], 101>
new  < file_test$568:>

2862:
old  <>
new  <	; Call 32 abort 0>

2863:
old  < file_test$557:>
new  <	mov qword [rbp + 32], file_test$569>

2864:
old  <	; Assign personVector[1].name[9] 97>
new  <	mov [rbp + 40], rbp>

2865:
old  <	mov byte [rbp + 101], 97>
new  <	add rbp, 32>

2866:
old  <>
new  <	jmp abort>

2867:
old  < file_test$558:>
new  <>

2868:
old  <	; Assign personVector[1].name[10] 115>
new  < file_test$569:>

2869:
old  <	mov byte [rbp + 102], 115>
new  <	; PostCall 32>

2871:
old  < file_test$559:>
new  < file_test$570:>

2872:
old  <	; Assign personVector[1].name[11] 97>
new  <	; Assign index 0>

2873:
old  <	mov byte [rbp + 103], 97>
new  <	mov dword [rbp + 32], 0>

2875:
old  < file_test$560:>
new  < file_test$571:>

2876:
old  <	; Assign personVector[1].name[12] 114>
new  <	; PreCall 44 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2877:
old  <	mov byte [rbp + 104], 114>
new  <>

2878:
old  <>
new  < file_test$572:>

2879:
old  < file_test$561:>
new  <	; Address Â£temporary4094 value>

2880:
old  <	; Assign personVector[1].name[13] 115>
new  <	mov rsi, rbp>

2881:
old  <	mov byte [rbp + 105], 115>
new  <	add rsi, 36>

2883:
old  < file_test$562:>
new  < file_test$573:>

2884:
old  <	; Assign personVector[1].name[14] 115>
new  <	; Parameter 68 pointer Â£temporary4094>

2885:
old  <	mov byte [rbp + 106], 115>
new  <	mov [rbp + 68], rsi>

2887:
old  < file_test$563:>
new  < file_test$574:>

2888:
old  <	; Assign personVector[1].name[15] 111>
new  <	; Parameter 76 signedint 8>

2889:
old  <	mov byte [rbp + 107], 111>
new  <	mov dword [rbp + 76], 8>

2891:
old  < file_test$564:>
new  < file_test$575:>

2892:
old  <	; Assign personVector[1].name[16] 110>
new  <	; Parameter 80 signedint 1>

2893:
old  <	mov byte [rbp + 108], 110>
new  <	mov dword [rbp + 80], 1>

2895:
old  < file_test$565:>
new  < file_test$576:>

2896:
old  <	; Assign personVector[1].name[17] 0>
new  <	; Parameter 84 pointer inFilePtr>

2897:
old  <	mov byte [rbp + 109], 0>
new  <	mov rax, [rbp + 24]>

2898:
old  <>
new  <	mov [rbp + 84], rax>

2899:
old  < file_test$566:>
new  <>

2900:
old  <	; Assign personVector[1].phone 23456>
new  < file_test$577:>

2901:
old  <	mov dword [rbp + 140], 23456>
new  <	; Call 44 fread 0>

2902:
old  <>
new  <	mov qword [rbp + 44], file_test$578>

2903:
old  < file_test$567:>
new  <	mov [rbp + 52], rbp>

2904:
old  <	; Assign personVector[2].name[0] 67>
new  <	add rbp, 44>

2905:
old  <	mov byte [rbp + 144], 67>
new  <	jmp fread>

2907:
old  < file_test$568:>
new  < file_test$578:>

2908:
old  <	; Assign personVector[2].name[1] 101>
new  <	; PostCall 44>

2909:
old  <	mov byte [rbp + 145], 101>
new  <>

2910:
old  <>
new  < file_test$579:>

2911:
old  < file_test$569:>
new  <	; GetReturnValue Â£temporary4095>

2912:
old  <	; Assign personVector[2].name[2] 97>
new  <>

2913:
old  <	mov byte [rbp + 146], 97>
new  < file_test$580:>

2914:
old  <>
new  <	; Equal 591 Â£temporary4095 0>

2915:
old  < file_test$570:>
new  <	cmp ebx, 0>

2916:
old  <	; Assign personVector[2].name[3] 115>
new  <	je file_test$591>

2917:
old  <	mov byte [rbp + 147], 115>
new  <>

2918:
old  <>
new  < file_test$581:>

2919:
old  < file_test$571:>
new  <	; PreCall 44 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2920:
old  <	; Assign personVector[2].name[4] 97>
new  <>

2921:
old  <	mov byte [rbp + 148], 97>
new  < file_test$582:>

2922:
old  <>
new  <	; Parameter 68 pointer "index2: %i: value %f\n">

2923:
old  < file_test$572:>
new  <	mov qword [rbp + 68], string_index23A2025i3A20value2025f0A#>

2924:
old  <	; Assign personVector[2].name[5] 114>
new  <>

2925:
old  <	mov byte [rbp + 149], 114>
new  < file_test$583:>

2926:
old  <>
new  <	; Assign Â£temporary4097 index>

2927:
old  < file_test$573:>
new  <	mov eax, [rbp + 32]>

2928:
old  <	; Assign personVector[2].name[6] 32>
new  <>

2929:
old  <	mov byte [rbp + 150], 32>
new  < file_test$584:>

2930:
old  <>
new  <	; BinaryAdd index index 1>

2931:
old  < file_test$574:>
new  <	inc dword [rbp + 32]>

2932:
old  <	; Assign personVector[2].name[7] 68>
new  <>

2933:
old  <	mov byte [rbp + 151], 68>
new  < file_test$585:>

2934:
old  <>
new  <	; Parameter 76 signedint Â£temporary4097>

2935:
old  < file_test$575:>
new  <	mov [rbp + 76], eax>

2936:
old  <	; Assign personVector[2].name[8] 97>
new  <>

2937:
old  <	mov byte [rbp + 152], 97>
new  < file_test$586:>

2938:
old  <>
new  <	; PushFloat value>

2939:
old  < file_test$576:>
new  <	fld qword [rbp + 36]>

2940:
old  <	; Assign personVector[2].name[9] 118>
new  <>

2941:
old  <	mov byte [rbp + 153], 118>
new  < file_test$587:>

2942:
old  <>
new  <	; Parameter 80 double value>

2943:
old  < file_test$577:>
new  <	fstp qword [rbp + 80]>

2944:
old  <	; Assign personVector[2].name[10] 105>
new  <>

2945:
old  <	mov byte [rbp + 154], 105>
new  < file_test$588:>

2946:
old  <>
new  <	; Call 44 printf 12>

2947:
old  < file_test$578:>
new  <	mov qword [rbp + 44], file_test$589>

2948:
old  <	; Assign personVector[2].name[11] 100>
new  <	mov [rbp + 52], rbp>

2949:
old  <	mov byte [rbp + 155], 100>
new  <	add rbp, 44>

2950:
old  <>
new  <	mov rdi, rbp>

2951:
old  < file_test$579:>
new  <	add rdi, 12>

2952:
old  <	; Assign personVector[2].name[12] 115>
new  <	jmp printf>

2953:
old  <	mov byte [rbp + 156], 115>
new  <>

2954:
old  <>
new  < file_test$589:>

2955:
old  < file_test$580:>
new  <	; PostCall 44>

2956:
old  <	; Assign personVector[2].name[13] 115>
new  <>

2957:
old  <	mov byte [rbp + 157], 115>
new  < file_test$590:>

2958:
old  <>
new  <	; Goto 571>

2959:
old  < file_test$581:>
new  <	jmp file_test$571>

2960:
old  <	; Assign personVector[2].name[14] 111>
new  <>

2961:
old  <	mov byte [rbp + 158], 111>
new  < file_test$591:>

2962:
old  <>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2963:
old  < file_test$582:>
new  <>

2964:
old  <	; Assign personVector[2].name[15] 110>
new  < file_test$592:>

2965:
old  <	mov byte [rbp + 159], 110>
new  <	; Parameter 56 pointer "\n">

2966:
old  <>
new  <	mov qword [rbp + 56], string_0A#>

2967:
old  < file_test$583:>
new  <>

2968:
old  <	; Assign personVector[2].name[16] 0>
new  < file_test$593:>

2969:
old  <	mov byte [rbp + 160], 0>
new  <	; Call 32 printf 0>

2970:
old  <>
new  <	mov qword [rbp + 32], file_test$594>

2971:
old  < file_test$584:>
new  <	mov [rbp + 40], rbp>

2972:
old  <	; Assign personVector[2].phone 24567>
new  <	add rbp, 32>

2973:
old  <	mov dword [rbp + 192], 24567>
new  <	mov rdi, rbp>

2974:
old  <>
new  <	jmp printf>

2975:
old  < file_test$585:>
new  <>

2976:
old  <	; PreCall 248 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < file_test$594:>

2977:
old  <>
new  <	; PostCall 32>

2978:
old  < file_test$586:>
new  <>

2979:
old  <	; Parameter 272 pointer "Block.bin">
new  < file_test$595:>

2980:
old  <	mov qword [rbp + 272], string_Block2Ebin#>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2982:
old  < file_test$587:>
new  < file_test$596:>

2983:
old  <	; Parameter 280 pointer "w">
new  <	; Parameter 56 pointer inFilePtr>

2984:
old  <	mov qword [rbp + 280], string_w#>
new  <	mov rax, [rbp + 24]>

2985:
old  <>
new  <	mov [rbp + 56], rax>

2986:
old  < file_test$588:>
new  <>

2987:
old  <	; Call 248 fopen 0>
new  < file_test$597:>

2988:
old  <	mov qword [rbp + 248], file_test$589>
new  <	; Call 32 fclose 0>

2989:
old  <	mov [rbp + 256], rbp>
new  <	mov qword [rbp + 32], file_test$598>

2990:
old  <	add rbp, 248>
new  <	mov [rbp + 40], rbp>

2991:
old  <	jmp fopen>
new  <	add rbp, 32>

2992:
old  <>
new  <	jmp fclose>

2993:
old  < file_test$589:>
new  <>

2994:
old  <	; PostCall 248>
new  < file_test$598:>

2995:
old  <>
new  <	; PostCall 32>

2996:
old  < file_test$590:>
new  <>

2997:
old  <	; GetReturnValue Â£temporary4167>
new  < file_test$599:>

2998:
old  <>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2999:
old  < file_test$591:>
new  <>

3000:
old  <	; Assign outFilePtr Â£temporary4167>
new  < file_test$600:>

3001:
old  <	mov [rbp + 248], rbx>
new  <	; Parameter 48 pointer "TestY.bin">

3002:
old  <>
new  <	mov qword [rbp + 48], string_TestY2Ebin#>

3003:
old  < file_test$592:>
new  <>

3004:
old  <	; PreCall 256 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < file_test$601:>

3005:
old  <>
new  <	; Parameter 56 pointer "r">

3006:
old  < file_test$593:>
new  <	mov qword [rbp + 56], string_r#>

3007:
old  <	; Parameter 280 pointer "Block.bin">
new  <>

3008:
old  <	mov qword [rbp + 280], string_Block2Ebin#>
new  < file_test$602:>

3009:
old  <>
new  <	; Call 24 fopen 0>

3010:
old  < file_test$594:>
new  <	mov qword [rbp + 24], file_test$603>

3011:
old  <	; Parameter 288 pointer "r">
new  <	mov [rbp + 32], rbp>

3012:
old  <	mov qword [rbp + 288], string_r#>
new  <	add rbp, 24>

3013:
old  <>
new  <	jmp fopen>

3014:
old  < file_test$595:>
new  <>

3015:
old  <	; Call 256 fopen 0>
new  < file_test$603:>

3016:
old  <	mov qword [rbp + 256], file_test$596>
new  <	; PostCall 24>

3017:
old  <	mov [rbp + 264], rbp>
new  <>

3018:
old  <	add rbp, 256>
new  < file_test$604:>

3019:
old  <	jmp fopen>
new  <	; GetReturnValue Â£temporary4102>

3021:
old  < file_test$596:>
new  < file_test$605:>

3022:
old  <	; PostCall 256>
new  <	; Assign inFilePtr Â£temporary4102>

3023:
old  <>
new  <	mov [rbp + 24], rbx>

3024:
old  < file_test$597:>
new  <>

3025:
old  <	; GetReturnValue Â£temporary4168>
new  < file_test$606:>

3026:
old  <>
new  <	; NotEqual 618 inFilePtr 0>

3027:
old  < file_test$598:>
new  <	cmp qword [rbp + 24], 0>

3028:
old  <	; Assign inFilePtr Â£temporary4168>
new  <	jne file_test$618>

3029:
old  <	mov [rbp + 256], rbx>
new  <>

3030:
old  <>
new  < file_test$607:>

3031:
old  < file_test$599:>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3032:
old  <	; NotEqual 611 outFilePtr 0>
new  <>

3033:
old  <	cmp qword [rbp + 248], 0>
new  < file_test$608:>

3034:
old  <	jne file_test$611>
new  <	; Parameter 56 pointer stderr>

3035:
old  <>
new  <	mov rax, [stderr]>

3036:
old  < file_test$600:>
new  <	mov [rbp + 56], rax>

3037:
old  <	; PreCall 264 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

3038:
old  <>
new  < file_test$609:>

3039:
old  < file_test$601:>
new  <	; Parameter 64 pointer "Assertion failed: "%s" in file %s at line %i\n">

3040:
old  <	; Parameter 288 pointer stderr>
new  <	mov qword [rbp + 64], string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#>

3041:
old  <	mov rax, [stderr]>
new  <>

3042:
old  <	mov [rbp + 288], rax>
new  < file_test$610:>

3043:
old  <>
new  <	; Parameter 72 pointer "inFilePtr != NULL">

3044:
old  < file_test$602:>
new  <	mov qword [rbp + 72], string_inFilePtr20213D20NULL#>

3045:
old  <	; Parameter 296 pointer "Assertion failed: "%s" in file %s at line %i\n">
new  <>

3046:
old  <	mov qword [rbp + 296], string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#>
new  < file_test$611:>

3047:
old  <>
new  <	; Parameter 80 pointer "C:\Users\Stefan\Documents\vagrant\homestead\code\code\FileTest.c">

3048:
old  < file_test$603:>
new  <	mov qword [rbp + 80], string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CFileTest2Ec#>

3049:
old  <	; Parameter 304 pointer "outFilePtr != NULL">
new  <>

3050:
old  <	mov qword [rbp + 304], string_outFilePtr20213D20NULL#>
new  < file_test$612:>

3051:
old  <>
new  <	; Parameter 88 signedint 217>

3052:
old  < file_test$604:>
new  <	mov dword [rbp + 88], 217>

3053:
old  <	; Parameter 312 pointer "C:\Users\Stefan\Documents\vagrant\homestead\code\code\FileTest.c">
new  <>

3054:
old  <	mov qword [rbp + 312], string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CFileTest2Ec#>
new  < file_test$613:>

3055:
old  <>
new  <	; Call 32 fprintf 20>

3056:
old  < file_test$605:>
new  <	mov qword [rbp + 32], file_test$614>

3057:
old  <	; Parameter 320 signedint 188>
new  <	mov [rbp + 40], rbp>

3058:
old  <	mov dword [rbp + 320], 188>
new  <	add rbp, 32>

3059:
old  <>
new  <	mov rdi, rbp>

3060:
old  < file_test$606:>
new  <	add rdi, 20>

3061:
old  <	; Call 264 fprintf 20>
new  <	jmp fprintf>

3062:
old  <	mov qword [rbp + 264], file_test$607>
new  <>

3063:
old  <	mov [rbp + 272], rbp>
new  < file_test$614:>

3064:
old  <	add rbp, 264>
new  <	; PostCall 32>

3065:
old  <	mov rdi, rbp>
new  <>

3066:
old  <	add rdi, 20>
new  < file_test$615:>

3067:
old  <	jmp fprintf>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3069:
old  < file_test$607:>
new  < file_test$616:>

3070:
old  <	; PostCall 264>
new  <	; Call 32 abort 0>

3071:
old  <>
new  <	mov qword [rbp + 32], file_test$617>

3072:
old  < file_test$608:>
new  <	mov [rbp + 40], rbp>

3073:
old  <	; PreCall 264 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	add rbp, 32>

3074:
old  <>
new  <	jmp abort>

3075:
old  < file_test$609:>
new  <>

3076:
old  <	; Call 264 abort 0>
new  < file_test$617:>

3077:
old  <	mov qword [rbp + 264], file_test$610>
new  <	; PostCall 32>

3078:
old  <	mov [rbp + 272], rbp>
new  <>

3079:
old  <	add rbp, 264>
new  < file_test$618:>

3080:
old  <	jmp abort>
new  <	; Assign index 0>

3081:
old  <>
new  <	mov dword [rbp + 32], 0>

3082:
old  < file_test$610:>
new  <>

3083:
old  <	; PostCall 264>
new  < file_test$619:>

3084:
old  <>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3085:
old  < file_test$611:>
new  <>

3086:
old  <	; NotEqual 623 inFilePtr 0>
new  < file_test$620:>

3087:
old  <	cmp qword [rbp + 256], 0>
new  <	; Parameter 60 pointer inFilePtr>

3088:
old  <	jne file_test$623>
new  <	mov rax, [rbp + 24]>

3089:
old  <>
new  <	mov [rbp + 60], rax>

3090:
old  < file_test$612:>
new  <>

3091:
old  <	; PreCall 264 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < file_test$621:>

3092:
old  <>
new  <	; Call 36 feof 0>

3093:
old  < file_test$613:>
new  <	mov qword [rbp + 36], file_test$622>

3094:
old  <	; Parameter 288 pointer stderr>
new  <	mov [rbp + 44], rbp>

3095:
old  <	mov rax, [stderr]>
new  <	add rbp, 36>

3096:
old  <	mov [rbp + 288], rax>
new  <	jmp feof>

3098:
old  < file_test$614:>
new  < file_test$622:>

3099:
old  <	; Parameter 296 pointer "Assertion failed: "%s" in file %s at line %i\n">
new  <	; PostCall 36>

3100:
old  <	mov qword [rbp + 296], string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#>
new  <>

3101:
old  <>
new  < file_test$623:>

3102:
old  < file_test$615:>
new  <	; GetReturnValue Â£temporary4107>

3103:
old  <	; Parameter 304 pointer "inFilePtr != NULL">
new  <>

3104:
old  <	mov qword [rbp + 304], string_inFilePtr20213D20NULL#>
new  < file_test$624:>

3105:
old  <>
new  <	; NotEqual 643 Â£temporary4107 0>

3106:
old  < file_test$616:>
new  <	cmp ebx, 0>

3107:
old  <	; Parameter 312 pointer "C:\Users\Stefan\Documents\vagrant\homestead\code\code\FileTest.c">
new  <	jne file_test$643>

3108:
old  <	mov qword [rbp + 312], string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CFileTest2Ec#>
new  <>

3109:
old  <>
new  < file_test$625:>

3110:
old  < file_test$617:>
new  <	; PreCall 44 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3111:
old  <	; Parameter 320 signedint 189>
new  <>

3112:
old  <	mov dword [rbp + 320], 189>
new  < file_test$626:>

3113:
old  <>
new  <	; Address Â£temporary4110 value>

3114:
old  < file_test$618:>
new  <	mov rsi, rbp>

3115:
old  <	; Call 264 fprintf 20>
new  <	add rsi, 36>

3116:
old  <	mov qword [rbp + 264], file_test$619>
new  <>

3117:
old  <	mov [rbp + 272], rbp>
new  < file_test$627:>

3118:
old  <	add rbp, 264>
new  <	; Parameter 68 pointer Â£temporary4110>

3119:
old  <	mov rdi, rbp>
new  <	mov [rbp + 68], rsi>

3120:
old  <	add rdi, 20>
new  <>

3121:
old  <	jmp fprintf>
new  < file_test$628:>

3122:
old  <>
new  <	; Parameter 76 signedint 8>

3123:
old  < file_test$619:>
new  <	mov dword [rbp + 76], 8>

3124:
old  <	; PostCall 264>
new  <>

3125:
old  <>
new  < file_test$629:>

3126:
old  < file_test$620:>
new  <	; Parameter 80 signedint 1>

3127:
old  <	; PreCall 264 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov dword [rbp + 80], 1>

3129:
old  < file_test$621:>
new  < file_test$630:>

3130:
old  <	; Call 264 abort 0>
new  <	; Parameter 84 pointer inFilePtr>

3131:
old  <	mov qword [rbp + 264], file_test$622>
new  <	mov rax, [rbp + 24]>

3132:
old  <	mov [rbp + 272], rbp>
new  <	mov [rbp + 84], rax>

3133:
old  <	add rbp, 264>
new  <>

3134:
old  <	jmp abort>
new  < file_test$631:>

3135:
old  <>
new  <	; Call 44 fread 0>

3136:
old  < file_test$622:>
new  <	mov qword [rbp + 44], file_test$632>

3137:
old  <	; PostCall 264>
new  <	mov [rbp + 52], rbp>

3138:
old  <>
new  <	add rbp, 44>

3139:
old  < file_test$623:>
new  <	jmp fread>

3140:
old  <	; PreCall 264 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

3141:
old  <>
new  < file_test$632:>

3142:
old  < file_test$624:>
new  <	; PostCall 44>

3143:
old  <	; Parameter 288 pointer personVector>
new  <>

3144:
old  <	mov [rbp + 288], rbp>
new  < file_test$633:>

3145:
old  <	add qword [rbp + 288], 40>
new  <	; PreCall 44 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3147:
old  < file_test$625:>
new  < file_test$634:>

3148:
old  <	; Parameter 296 signedint 156>
new  <	; Parameter 68 pointer "index3: %i: value %f\n">

3149:
old  <	mov dword [rbp + 296], 156>
new  <	mov qword [rbp + 68], string_index33A2025i3A20value2025f0A#>

3151:
old  < file_test$626:>
new  < file_test$635:>

3152:
old  <	; Parameter 300 signedint 1>
new  <	; Assign Â£temporary4112 index>

3153:
old  <	mov dword [rbp + 300], 1>
new  <	mov eax, [rbp + 32]>

3155:
old  < file_test$627:>
new  < file_test$636:>

3156:
old  <	; Parameter 304 pointer outFilePtr>
new  <	; BinaryAdd index index 1>

3157:
old  <	mov rax, [rbp + 248]>
new  <	inc dword [rbp + 32]>

3158:
old  <	mov [rbp + 304], rax>
new  <>

3159:
old  <>
new  < file_test$637:>

3160:
old  < file_test$628:>
new  <	; Parameter 76 signedint Â£temporary4112>

3161:
old  <	; Call 264 fwrite 0>
new  <	mov [rbp + 76], eax>

3162:
old  <	mov qword [rbp + 264], file_test$629>
new  <>

3163:
old  <	mov [rbp + 272], rbp>
new  < file_test$638:>

3164:
old  <	add rbp, 264>
new  <	; PushFloat value>

3165:
old  <	jmp fwrite>
new  <	fld qword [rbp + 36]>

3167:
old  < file_test$629:>
new  < file_test$639:>

3168:
old  <	; PostCall 264>
new  <	; Parameter 80 double value>

3169:
old  <>
new  <	fstp qword [rbp + 80]>

3170:
old  < file_test$630:>
new  <>

3171:
old  <	; PreCall 264 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < file_test$640:>

3172:
old  <>
new  <	; Call 44 printf 12>

3173:
old  < file_test$631:>
new  <	mov qword [rbp + 44], file_test$641>

3174:
old  <	; Parameter 288 pointer outFilePtr>
new  <	mov [rbp + 52], rbp>

3175:
old  <	mov rax, [rbp + 248]>
new  <	add rbp, 44>

3176:
old  <	mov [rbp + 288], rax>
new  <	mov rdi, rbp>

3177:
old  <>
new  <	add rdi, 12>

3178:
old  < file_test$632:>
new  <	jmp printf>

3179:
old  <	; Call 264 fclose 0>
new  <>

3180:
old  <	mov qword [rbp + 264], file_test$633>
new  < file_test$641:>

3181:
old  <	mov [rbp + 272], rbp>
new  <	; PostCall 44>

3182:
old  <	add rbp, 264>
new  <>

3183:
old  <	jmp fclose>
new  < file_test$642:>

3184:
old  <>
new  <	; Goto 619>

3185:
old  < file_test$633:>
new  <	jmp file_test$619>

3186:
old  <	; PostCall 264>
new  <>

3187:
old  <>
new  < file_test$643:>

3188:
old  < file_test$634:>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3189:
old  <	; PreCall 264 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

3190:
old  <>
new  < file_test$644:>

3191:
old  < file_test$635:>
new  <	; Parameter 56 pointer "\n">

3192:
old  <	; Parameter 288 pointer inFilePtr>
new  <	mov qword [rbp + 56], string_0A#>

3193:
old  <	mov rax, [rbp + 256]>
new  <>

3194:
old  <	mov [rbp + 288], rax>
new  < file_test$645:>

3195:
old  <>
new  <	; Call 32 printf 0>

3196:
old  < file_test$636:>
new  <	mov qword [rbp + 32], file_test$646>

3197:
old  <	; Call 264 feof 0>
new  <	mov [rbp + 40], rbp>

3198:
old  <	mov qword [rbp + 264], file_test$637>
new  <	add rbp, 32>

3199:
old  <	mov [rbp + 272], rbp>
new  <	mov rdi, rbp>

3200:
old  <	add rbp, 264>
new  <	jmp printf>

3201:
old  <	jmp feof>
new  <>

3202:
old  <>
new  < file_test$646:>

3203:
old  < file_test$637:>
new  <	; PostCall 32>

3204:
old  <	; PostCall 264>
new  <>

3205:
old  <>
new  < file_test$647:>

3206:
old  < file_test$638:>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3207:
old  <	; GetReturnValue Â£temporary4179>
new  <>

3208:
old  <>
new  < file_test$648:>

3209:
old  < file_test$639:>
new  <	; Parameter 56 pointer inFilePtr>

3210:
old  <	; NotEqual 659 Â£temporary4179 0>
new  <	mov rax, [rbp + 24]>

3211:
old  <	cmp ebx, 0>
new  <	mov [rbp + 56], rax>

3212:
old  <	jne file_test$659>
new  <>

3213:
old  <>
new  < file_test$649:>

3214:
old  < file_test$640:>
new  <	; Call 32 fclose 0>

3215:
old  <	; PreCall 264 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov qword [rbp + 32], file_test$650>

3216:
old  <>
new  <	mov [rbp + 40], rbp>

3217:
old  < file_test$641:>
new  <	add rbp, 32>

3218:
old  <	; Address Â£temporary4182 person>
new  <	jmp fclose>

3219:
old  <	mov rsi, rbp>
new  <>

3220:
old  <	add rsi, 196>
new  < file_test$650:>

3221:
old  <>
new  <	; PostCall 32>

3222:
old  < file_test$642:>
new  <>

3223:
old  <	; Parameter 288 pointer Â£temporary4182>
new  < file_test$651:>

3224:
old  <	mov [rbp + 288], rsi>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3226:
old  < file_test$643:>
new  < file_test$652:>

3227:
old  <	; Parameter 296 signedint 52>
new  <	; Parameter 48 pointer "TestX.bin">

3228:
old  <	mov dword [rbp + 296], 52>
new  <	mov qword [rbp + 48], string_TestX2Ebin#>

3230:
old  < file_test$644:>
new  < file_test$653:>

3231:
old  <	; Parameter 300 signedint 1>
new  <	; Parameter 56 pointer "r">

3232:
old  <	mov dword [rbp + 300], 1>
new  <	mov qword [rbp + 56], string_r#>

3234:
old  < file_test$645:>
new  < file_test$654:>

3235:
old  <	; Parameter 304 pointer inFilePtr>
new  <	; Call 24 fopen 0>

3236:
old  <	mov rax, [rbp + 256]>
new  <	mov qword [rbp + 24], file_test$655>

3237:
old  <	mov [rbp + 304], rax>
new  <	mov [rbp + 32], rbp>

3238:
old  <>
new  <	add rbp, 24>

3239:
old  < file_test$646:>
new  <	jmp fopen>

3240:
old  <	; Call 264 fread 0>
new  <>

3241:
old  <	mov qword [rbp + 264], file_test$647>
new  < file_test$655:>

3242:
old  <	mov [rbp + 272], rbp>
new  <	; PostCall 24>

3243:
old  <	add rbp, 264>
new  <>

3244:
old  <	jmp fread>
new  < file_test$656:>

3245:
old  <>
new  <	; GetReturnValue Â£temporary4116>

3246:
old  < file_test$647:>
new  <>

3247:
old  <	; PostCall 264>
new  < file_test$657:>

3248:
old  <>
new  <	; Assign inFilePtr Â£temporary4116>

3249:
old  < file_test$648:>
new  <	mov [rbp + 24], rbx>

3250:
old  <	; PreCall 264 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

3251:
old  <>
new  < file_test$658:>

3252:
old  < file_test$649:>
new  <	; NotEqual 670 inFilePtr 0>

3253:
old  <	; Parameter 288 pointer "Name  : %s\n">
new  <	cmp qword [rbp + 24], 0>

3254:
old  <	mov qword [rbp + 288], string_Name20203A2025s0A#>
new  <	jne file_test$670>

3256:
old  < file_test$650:>
new  < file_test$659:>

3257:
old  <	; Parameter 296 pointer person.name>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3258:
old  <	mov [rbp + 296], rbp>
new  <>

3259:
old  <	add qword [rbp + 296], 196>
new  < file_test$660:>

3260:
old  <>
new  <	; Parameter 60 pointer stderr>

3261:
old  < file_test$651:>
new  <	mov rax, [stderr]>

3262:
old  <	; Call 264 printf 8>
new  <	mov [rbp + 60], rax>

3263:
old  <	mov qword [rbp + 264], file_test$652>
new  <>

3264:
old  <	mov [rbp + 272], rbp>
new  < file_test$661:>

3265:
old  <	add rbp, 264>
new  <	; Parameter 68 pointer "Assertion failed: "%s" in file %s at line %i\n">

3266:
old  <	mov rdi, rbp>
new  <	mov qword [rbp + 68], string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#>

3267:
old  <	add rdi, 8>
new  <>

3268:
old  <	jmp printf>
new  < file_test$662:>

3269:
old  <>
new  <	; Parameter 76 pointer "inFilePtr != NULL">

3270:
old  < file_test$652:>
new  <	mov qword [rbp + 76], string_inFilePtr20213D20NULL#>

3271:
old  <	; PostCall 264>
new  <>

3272:
old  <>
new  < file_test$663:>

3273:
old  < file_test$653:>
new  <	; Parameter 84 pointer "C:\Users\Stefan\Documents\vagrant\homestead\code\code\FileTest.c">

3274:
old  <	; PreCall 264 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov qword [rbp + 84], string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CFileTest2Ec#>

3276:
old  < file_test$654:>
new  < file_test$664:>

3277:
old  <	; Parameter 288 pointer "Phone : %d\n">
new  <	; Parameter 92 signedint 235>

3278:
old  <	mov qword [rbp + 288], string_Phone203A2025d0A#>
new  <	mov dword [rbp + 92], 235>

3280:
old  < file_test$655:>
new  < file_test$665:>

3281:
old  <	; Parameter 296 signedint person.phone>
new  <	; Call 36 fprintf 20>

3282:
old  <	mov eax, [rbp + 244]>
new  <	mov qword [rbp + 36], file_test$666>

3283:
old  <	mov [rbp + 296], eax>
new  <	mov [rbp + 44], rbp>

3284:
old  <>
new  <	add rbp, 36>

3285:
old  < file_test$656:>
new  <	mov rdi, rbp>

3286:
old  <	; Call 264 printf 4>
new  <	add rdi, 20>

3287:
old  <	mov qword [rbp + 264], file_test$657>
new  <	jmp fprintf>

3288:
old  <	mov [rbp + 272], rbp>
new  <>

3289:
old  <	add rbp, 264>
new  < file_test$666:>

3290:
old  <	mov rdi, rbp>
new  <	; PostCall 36>

3291:
old  <	add rdi, 4>
new  <>

3292:
old  <	jmp printf>
new  < file_test$667:>

3293:
old  <>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3294:
old  < file_test$657:>
new  <>

3295:
old  <	; PostCall 264>
new  < file_test$668:>

3296:
old  <>
new  <	; Call 36 abort 0>

3297:
old  < file_test$658:>
new  <	mov qword [rbp + 36], file_test$669>

3298:
old  <	; Goto 634>
new  <	mov [rbp + 44], rbp>

3299:
old  <	jmp file_test$634>
new  <	add rbp, 36>

3300:
old  <>
new  <	jmp abort>

3301:
old  < file_test$659:>
new  <>

3302:
old  <	; PreCall 264 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < file_test$669:>

3303:
old  <>
new  <	; PostCall 36>

3304:
old  < file_test$660:>
new  <>

3305:
old  <	; Parameter 288 pointer inFilePtr>
new  < file_test$670:>

3306:
old  <	mov rax, [rbp + 256]>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3307:
old  <	mov [rbp + 288], rax>
new  <>

3308:
old  <>
new  < file_test$671:>

3309:
old  < file_test$661:>
new  <	; Address Â£temporary4121 size>

3310:
old  <	; Call 264 fclose 0>
new  <	mov rsi, rbp>

3311:
old  <	mov qword [rbp + 264], file_test$662>
new  <	add rsi, 32>

3312:
old  <	mov [rbp + 272], rbp>
new  <>

3313:
old  <	add rbp, 264>
new  < file_test$672:>

3314:
old  <	jmp fclose>
new  <	; Parameter 60 pointer Â£temporary4121>

3315:
old  <>
new  <	mov [rbp + 60], rsi>

3316:
old  < file_test$662:>
new  <>

3317:
old  <	; PostCall 264>
new  < file_test$673:>

3318:
old  <>
new  <	; Parameter 68 signedint 4>

3319:
old  < file_test$663:>
new  <	mov dword [rbp + 68], 4>

3320:
old  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

3321:
old  <>
new  < file_test$674:>

3322:
old  < file_test$664:>
new  <	; Parameter 72 signedint 1>

3323:
old  <	; Parameter 64 pointer "Test1.txt">
new  <	mov dword [rbp + 72], 1>

3324:
old  <	mov qword [rbp + 64], string_Test12Etxt#>
new  <>

3325:
old  <>
new  < file_test$675:>

3326:
old  < file_test$665:>
new  <	; Parameter 76 pointer inFilePtr>

3327:
old  <	; Parameter 72 pointer "r">
new  <	mov rax, [rbp + 24]>

3328:
old  <	mov qword [rbp + 72], string_r#>
new  <	mov [rbp + 76], rax>

3330:
old  < file_test$666:>
new  < file_test$676:>

3331:
old  <	; Call 40 fopen 0>
new  <	; Call 36 fread 0>

3332:
old  <	mov qword [rbp + 40], file_test$667>
new  <	mov qword [rbp + 36], file_test$677>

3333:
old  <	mov [rbp + 48], rbp>
new  <	mov [rbp + 44], rbp>

3334:
old  <	add rbp, 40>
new  <	add rbp, 36>

3335:
old  <	jmp fopen>
new  <	jmp fread>

3337:
old  < file_test$667:>
new  < file_test$677:>

3338:
old  <	; PostCall 40>
new  <	; PostCall 36>

3340:
old  < file_test$668:>
new  < file_test$678:>

3341:
old  <	; GetReturnValue Â£temporary4189>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3343:
old  < file_test$669:>
new  < file_test$679:>

3344:
old  <	; Assign inFilePtr Â£temporary4189>
new  <	; Parameter 60 pointer "size4: %i total %i\n">

3345:
old  <	mov [rbp + 40], rbx>
new  <	mov qword [rbp + 60], string_size43A2025i20total2025i0A#>

3347:
old  < file_test$670:>
new  < file_test$680:>

3348:
old  <	; NotEqual 682 inFilePtr 0>
new  <	; Parameter 68 signedint size>

3349:
old  <	cmp qword [rbp + 40], 0>
new  <	mov eax, [rbp + 32]>

3350:
old  <	jne file_test$682>
new  <	mov [rbp + 68], eax>

3352:
old  < file_test$671:>
new  < file_test$681:>

3353:
old  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; SignedMultiply Â£temporary4123 size 8>

3354:
old  <>
new  <	mov eax, [rbp + 32]>

3355:
old  < file_test$672:>
new  <	xor edx, edx>

3356:
old  <	; Parameter 76 pointer stderr>
new  <	imul dword [int4$8#]>

3357:
old  <	mov rax, [stderr]>
new  <>

3358:
old  <	mov [rbp + 76], rax>
new  < file_test$682:>

3359:
old  <>
new  <	; Parameter 72 signedint Â£temporary4123>

3360:
old  < file_test$673:>
new  <	mov [rbp + 72], eax>

3361:
old  <	; Parameter 84 pointer "Assertion failed: "%s" in file %s at line %i\n">
new  <>

3362:
old  <	mov qword [rbp + 84], string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#>
new  < file_test$683:>

3363:
old  <>
new  <	; Call 36 printf 8>

3364:
old  < file_test$674:>
new  <	mov qword [rbp + 36], file_test$684>

3365:
old  <	; Parameter 92 pointer "inFilePtr != NULL">
new  <	mov [rbp + 44], rbp>

3366:
old  <	mov qword [rbp + 92], string_inFilePtr20213D20NULL#>
new  <	add rbp, 36>

3367:
old  <>
new  <	mov rdi, rbp>

3368:
old  < file_test$675:>
new  <	add rdi, 8>

3369:
old  <	; Parameter 100 pointer "C:\Users\Stefan\Documents\vagrant\homestead\code\code\FileTest.c">
new  <	jmp printf>

3370:
old  <	mov qword [rbp + 100], string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CFileTest2Ec#>
new  <>

3371:
old  <>
new  < file_test$684:>

3372:
old  < file_test$676:>
new  <	; PostCall 36>

3373:
old  <	; Parameter 108 signedint 206>
new  <>

3374:
old  <	mov dword [rbp + 108], 206>
new  < file_test$685:>

3375:
old  <>
new  <	; SignedMultiply total size 8>

3376:
old  < file_test$677:>
new  <	mov eax, [rbp + 32]>

3377:
old  <	; Call 52 fprintf 20>
new  <	xor edx, edx>

3378:
old  <	mov qword [rbp + 52], file_test$678>
new  <	imul dword [int4$8#]>

3379:
old  <	mov [rbp + 60], rbp>
new  <	mov [rbp + 36], eax>

3380:
old  <	add rbp, 52>
new  <>

3381:
old  <	mov rdi, rbp>
new  < file_test$686:>

3382:
old  <	add rdi, 20>
new  <	; PreCall 44 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3383:
old  <	jmp fprintf>
new  <>

3384:
old  <>
new  < file_test$687:>

3385:
old  < file_test$678:>
new  <	; Parameter 68 signedint total>

3386:
old  <	; PostCall 52>
new  <	mov eax, [rbp + 36]>

3387:
old  <>
new  <	mov [rbp + 68], eax>

3388:
old  < file_test$679:>
new  <>

3389:
old  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < file_test$688:>

3390:
old  <>
new  <	; Call 44 malloc 0>

3391:
old  < file_test$680:>
new  <	mov qword [rbp + 44], file_test$689>

3392:
old  <	; Call 52 abort 0>
new  <	mov [rbp + 52], rbp>

3393:
old  <	mov qword [rbp + 52], file_test$681>
new  <	add rbp, 44>

3394:
old  <	mov [rbp + 60], rbp>
new  <	jmp malloc>

3395:
old  <	add rbp, 52>
new  <>

3396:
old  <	jmp abort>
new  < file_test$689:>

3397:
old  <>
new  <	; PostCall 44>

3398:
old  < file_test$681:>
new  <>

3399:
old  <	; PostCall 52>
new  < file_test$690:>

3400:
old  <>
new  <	; GetReturnValue Â£temporary4126>

3401:
old  < file_test$682:>
new  <>

3402:
old  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < file_test$691:>

3403:
old  <>
new  <	; Assign p Â£temporary4126>

3404:
old  < file_test$683:>
new  <	mov [rbp + 44], rbx>

3405:
old  <	; Parameter 76 pointer inFilePtr>
new  <>

3406:
old  <	mov rax, [rbp + 40]>
new  < file_test$692:>

3407:
old  <	mov [rbp + 76], rax>
new  <	; IntegralToIntegral Â£temporary4127 size>

3408:
old  <>
new  <	mov eax, [rbp + 32]>

3409:
old  < file_test$684:>
new  <	mov rbx, 4294967295>

3410:
old  <	; Parameter 84 signedint -1>
new  <	and rax, rbx>

3411:
old  <	mov dword [rbp + 84], -1>
new  <>

3412:
old  <>
new  < file_test$693:>

3413:
old  < file_test$685:>
new  <	; UnsignedMultiply Â£temporary4129 Â£temporary4127 8>

3414:
old  <	; Parameter 88 signedint 2>
new  <	xor rdx, rdx>

3415:
old  <	mov dword [rbp + 88], 2>
new  <	mul qword [int8$8#]>

3417:
old  < file_test$686:>
new  < file_test$694:>

3418:
old  <	; Call 52 fseek 0>
new  <	; BinaryAdd endPtr p Â£temporary4129>

3419:
old  <	mov qword [rbp + 52], file_test$687>
new  <	mov rbx, [rbp + 44]>

3420:
old  <	mov [rbp + 60], rbp>
new  <	add rbx, rax>

3421:
old  <	add rbp, 52>
new  <	mov [rbp + 52], rbx>

3422:
old  <	jmp fseek>
new  <>

3423:
old  <>
new  < file_test$695:>

3424:
old  < file_test$687:>
new  <	; NotEqual 707 p 0>

3425:
old  <	; PostCall 52>
new  <	cmp qword [rbp + 44], 0>

3426:
old  <>
new  <	jne file_test$707>

3427:
old  < file_test$688:>
new  <>

3428:
old  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < file_test$696:>

3429:
old  <>
new  <	; PreCall 60 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3430:
old  < file_test$689:>
new  <>

3431:
old  <	; Parameter 76 pointer inFilePtr>
new  < file_test$697:>

3432:
old  <	mov rax, [rbp + 40]>
new  <	; Parameter 84 pointer stderr>

3433:
old  <	mov [rbp + 76], rax>
new  <	mov rax, [stderr]>

3434:
old  <>
new  <	mov [rbp + 84], rax>

3435:
old  < file_test$690:>
new  <>

3436:
old  <	; Call 52 ftell 0>
new  < file_test$698:>

3437:
old  <	mov qword [rbp + 52], file_test$691>
new  <	; Parameter 92 pointer "Assertion failed: "%s" in file %s at line %i\n">

3438:
old  <	mov [rbp + 60], rbp>
new  <	mov qword [rbp + 92], string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#>

3439:
old  <	add rbp, 52>
new  <>

3440:
old  <	jmp ftell>
new  < file_test$699:>

3441:
old  <>
new  <	; Parameter 100 pointer "p != NULL">

3442:
old  < file_test$691:>
new  <	mov qword [rbp + 100], string_p20213D20NULL#>

3443:
old  <	; PostCall 52>
new  <>

3444:
old  <>
new  < file_test$700:>

3445:
old  < file_test$692:>
new  <	; Parameter 108 pointer "C:\Users\Stefan\Documents\vagrant\homestead\code\code\FileTest.c">

3446:
old  <	; GetReturnValue Â£temporary4195>
new  <	mov qword [rbp + 108], string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CFileTest2Ec#>

3448:
old  < file_test$693:>
new  < file_test$701:>

3449:
old  <	; IntegralToIntegral Â£temporary4196 Â£temporary4195>
new  <	; Parameter 116 signedint 242>

3450:
old  <>
new  <	mov dword [rbp + 116], 242>

3451:
old  < file_test$694:>
new  <>

3452:
old  <	; Assign u Â£temporary4196>
new  < file_test$702:>

3453:
old  <	mov [rbp + 48], ebx>
new  <	; Call 60 fprintf 20>

3454:
old  <>
new  <	mov qword [rbp + 60], file_test$703>

3455:
old  < file_test$695:>
new  <	mov [rbp + 68], rbp>

3456:
old  <	; UnsignedLessThan 716 u 0>
new  <	add rbp, 60>

3457:
old  <	cmp dword [rbp + 48], 0>
new  <	mov rdi, rbp>

3458:
old  <	jb file_test$716>
new  <	add rdi, 20>

3459:
old  <>
new  <	jmp fprintf>

3460:
old  < file_test$696:>
new  <>

3461:
old  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < file_test$703:>

3462:
old  <>
new  <	; PostCall 60>

3463:
old  < file_test$697:>
new  <>

3464:
old  <	; Parameter 76 pointer inFilePtr>
new  < file_test$704:>

3465:
old  <	mov rax, [rbp + 40]>
new  <	; PreCall 60 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3466:
old  <	mov [rbp + 76], rax>
new  <>

3467:
old  <>
new  < file_test$705:>

3468:
old  < file_test$698:>
new  <	; Call 60 abort 0>

3469:
old  <	; Call 52 fgetc 0>
new  <	mov qword [rbp + 60], file_test$706>

3470:
old  <	mov qword [rbp + 52], file_test$699>
new  <	mov [rbp + 68], rbp>

3471:
old  <	mov [rbp + 60], rbp>
new  <	add rbp, 60>

3472:
old  <	add rbp, 52>
new  <	jmp abort>

3473:
old  <	jmp fgetc>
new  <>

3474:
old  <>
new  < file_test$706:>

3475:
old  < file_test$699:>
new  <	; PostCall 60>

3476:
old  <	; PostCall 52>
new  <>

3477:
old  <>
new  < file_test$707:>

3478:
old  < file_test$700:>
new  <	; PreCall 60 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3479:
old  <	; GetReturnValue Â£temporary4198>
new  <>

3480:
old  <>
new  < file_test$708:>

3481:
old  < file_test$701:>
new  <	; Parameter 84 pointer "malloc4: %u %u %u\n">

3482:
old  <	; IntegralToIntegral Â£temporary4199 Â£temporary4198>
new  <	mov qword [rbp + 84], string_malloc43A2025u2025u2025u0A#>

3483:
old  <	cmp ebx, 0>
new  <>

3484:
old  <	jge file_test$702>
new  < file_test$709:>

3485:
old  <	neg ebx>
new  <	; Parameter 92 pointer p>

3486:
old  <	neg bl>
new  <	mov rax, [rbp + 44]>

3487:
old  <>
new  <	mov [rbp + 92], rax>

3488:
old  < file_test$702:>
new  <>

3489:
old  <	; Assign c Â£temporary4199>
new  < file_test$710:>

3490:
old  <	mov [rbp + 52], bl>
new  <	; Parameter 100 signedint total>

3491:
old  <>
new  <	mov eax, [rbp + 36]>

3492:
old  < file_test$703:>
new  <	mov [rbp + 100], eax>

3493:
old  <	; PreCall 53 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

3494:
old  <>
new  < file_test$711:>

3495:
old  < file_test$704:>
new  <	; Parameter 104 pointer endPtr>

3496:
old  <	; IntegralToIntegral Â£temporary4200 c>
new  <	mov rax, [rbp + 52]>

3497:
old  <	mov al, [rbp + 52]>
new  <	mov [rbp + 104], rax>

3498:
old  <	and eax, 255>
new  <>

3499:
old  <	cmp al, 0>
new  < file_test$712:>

3500:
old  <	jge file_test$705>
new  <	; Call 60 printf 20>

3501:
old  <	neg al>
new  <	mov qword [rbp + 60], file_test$713>

3502:
old  <	neg eax>
new  <	mov [rbp + 68], rbp>

3503:
old  <>
new  <	add rbp, 60>

3504:
old  < file_test$705:>
new  <	mov rdi, rbp>

3505:
old  <	; Parameter 77 signedint Â£temporary4200>
new  <	add rdi, 20>

3506:
old  <	mov [rbp + 77], eax>
new  <	jmp printf>

3508:
old  < file_test$706:>
new  < file_test$713:>

3509:
old  <	; Call 53 putchar 0>
new  <	; PostCall 60>

3510:
old  <	mov qword [rbp + 53], file_test$707>
new  <>

3511:
old  <	mov [rbp + 61], rbp>
new  < file_test$714:>

3512:
old  <	add rbp, 53>
new  <	; PreCall 60 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3513:
old  <	jmp putchar>
new  <>

3514:
old  <>
new  < file_test$715:>

3515:
old  < file_test$707:>
new  <	; Parameter 84 pointer p>

3516:
old  <	; PostCall 53>
new  <	mov rax, [rbp + 44]>

3517:
old  <>
new  <	mov [rbp + 84], rax>

3518:
old  < file_test$708:>
new  <>

3519:
old  <	; Equal 716 u 0>
new  < file_test$716:>

3520:
old  <	cmp dword [rbp + 48], 0>
new  <	; Parameter 92 signedint total>

3521:
old  <	je file_test$716>
new  <	mov eax, [rbp + 36]>

3522:
old  <>
new  <	mov [rbp + 92], eax>

3523:
old  < file_test$709:>
new  <>

3524:
old  <	; PreCall 53 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < file_test$717:>

3525:
old  <>
new  <	; Parameter 96 signedint 1>

3526:
old  < file_test$710:>
new  <	mov dword [rbp + 96], 1>

3527:
old  <	; Parameter 77 pointer inFilePtr>
new  <>

3528:
old  <	mov rax, [rbp + 40]>
new  < file_test$718:>

3529:
old  <	mov [rbp + 77], rax>
new  <	; Parameter 100 pointer inFilePtr>

3530:
old  <>
new  <	mov rax, [rbp + 24]>

3531:
old  < file_test$711:>
new  <	mov [rbp + 100], rax>

3532:
old  <	; Parameter 85 signedint -2>
new  <>

3533:
old  <	mov dword [rbp + 85], -2>
new  < file_test$719:>

3534:
old  <>
new  <	; Call 60 fread 0>

3535:
old  < file_test$712:>
new  <	mov qword [rbp + 60], file_test$720>

3536:
old  <	; Parameter 89 signedint 1>
new  <	mov [rbp + 68], rbp>

3537:
old  <	mov dword [rbp + 89], 1>
new  <	add rbp, 60>

3538:
old  <>
new  <	jmp fread>

3539:
old  < file_test$713:>
new  <>

3540:
old  <	; Call 53 fseek 0>
new  < file_test$720:>

3541:
old  <	mov qword [rbp + 53], file_test$714>
new  <	; PostCall 60>

3542:
old  <	mov [rbp + 61], rbp>
new  <>

3543:
old  <	add rbp, 53>
new  < file_test$721:>

3544:
old  <	jmp fseek>
new  <	; Assign index 0>

3545:
old  <>
new  <	mov dword [rbp + 40], 0>

3546:
old  < file_test$714:>
new  <>

3547:
old  <	; PostCall 53>
new  < file_test$722:>

3548:
old  <>
new  <	; SignedGreaterThanEqual 736 index size>

3549:
old  < file_test$715:>
new  <	mov eax, [rbp + 32]>

3550:
old  <	; Goto 688>
new  <	cmp [rbp + 40], eax>

3551:
old  <	jmp file_test$688>
new  <	jge file_test$736>

3553:
old  < file_test$716:>
new  < file_test$723:>

3554:
old  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; PreCall 60 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3556:
old  < file_test$717:>
new  < file_test$724:>

3557:
old  <	; Parameter 76 pointer "\n\n">
new  <	; Parameter 84 pointer "index4: %i: value %f\n">

3558:
old  <	mov qword [rbp + 76], string_0A0A#>
new  <	mov qword [rbp + 84], string_index43A2025i3A20value2025f0A#>

3560:
old  < file_test$718:>
new  < file_test$725:>

3561:
old  <	; Call 52 printf 0>
new  <	; Parameter 92 signedint index>

3562:
old  <	mov qword [rbp + 52], file_test$719>
new  <	mov eax, [rbp + 40]>

3563:
old  <	mov [rbp + 60], rbp>
new  <	mov [rbp + 92], eax>

3564:
old  <	add rbp, 52>
new  <>

3565:
old  <	mov rdi, rbp>
new  < file_test$726:>

3566:
old  <	jmp printf>
new  <	; IntegralToIntegral Â£temporary4139 index>

3567:
old  <>
new  <	mov eax, [rbp + 40]>

3568:
old  < file_test$719:>
new  <	mov rbx, 4294967295>

3569:
old  <	; PostCall 52>
new  <	and rax, rbx>

3571:
old  < file_test$720:>
new  < file_test$727:>

3572:
old  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; UnsignedMultiply Â£temporary4140 Â£temporary4139 8>

3573:
old  <>
new  <	xor rdx, rdx>

3574:
old  < file_test$721:>
new  <	mul qword [int8$8#]>

3575:
old  <	; Parameter 76 pointer inFilePtr>
new  <>

3576:
old  <	mov rax, [rbp + 40]>
new  < file_test$728:>

3577:
old  <	mov [rbp + 76], rax>
new  <	; BinaryAdd Â£temporary4141 p Â£temporary4140>

3578:
old  <>
new  <	mov rsi, [rbp + 44]>

3579:
old  < file_test$722:>
new  <	add rsi, rax>

3580:
old  <	; Call 52 fclose 0>
new  <>

3581:
old  <	mov qword [rbp + 52], file_test$723>
new  < file_test$729:>

3582:
old  <	mov [rbp + 60], rbp>
new  <	; Dereference Â£temporary4138 -> Â£temporary4141 Â£temporary4141 0>

3583:
old  <	add rbp, 52>
new  <>

3584:
old  <	jmp fclose>
new  < file_test$730:>

3585:
old  <>
new  <	; PushFloat Â£temporary4138 -> Â£temporary4141>

3586:
old  < file_test$723:>
new  <	fld qword [rsi]>

3587:
old  <	; PostCall 52>
new  <>

3588:
old  <>
new  < file_test$731:>

3589:
old  < file_test$724:>
new  <	; Parameter 96 double Â£temporary4138 -> Â£temporary4141>

3590:
old  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	fstp qword [rbp + 96]>

3592:
old  < file_test$725:>
new  < file_test$732:>

3593:
old  <	; Parameter 64 pointer "fileexists X %s\n">
new  <	; Call 60 printf 12>

3594:
old  <	mov qword [rbp + 64], string_fileexists20X2025s0A#>
new  <	mov qword [rbp + 60], file_test$733>

3595:
old  <>
new  <	mov [rbp + 68], rbp>

3596:
old  < file_test$726:>
new  <	add rbp, 60>

3597:
old  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov rdi, rbp>

3598:
old  <>
new  <	add rdi, 12>

3599:
old  < file_test$727:>
new  <	jmp printf>

3600:
old  <	; Parameter 96 pointer "X">
new  <>

3601:
old  <	mov qword [rbp + 96], string_X#>
new  < file_test$733:>

3602:
old  <>
new  <	; PostCall 60>

3603:
old  < file_test$728:>
new  <>

3604:
old  <	; Call 72 fileexists 0>
new  < file_test$734:>

3605:
old  <	mov qword [rbp + 72], file_test$729>
new  <	; BinaryAdd index index 1>

3606:
old  <	mov [rbp + 80], rbp>
new  <	inc dword [rbp + 40]>

3607:
old  <	add rbp, 72>
new  <>

3608:
old  <	jmp fileexists>
new  < file_test$735:>

3609:
old  <>
new  <	; Goto 722>

3610:
old  < file_test$729:>
new  <	jmp file_test$722>

3611:
old  <	; PostCall 72>
new  <>

3612:
old  <>
new  < file_test$736:>

3613:
old  < file_test$730:>
new  <	; PreCall 60 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3614:
old  <	; GetReturnValue Â£temporary4206>
new  <>

3615:
old  <>
new  < file_test$737:>

3616:
old  < file_test$731:>
new  <	; Parameter 84 pointer "\n">

3617:
old  <	; Equal 734 Â£temporary4206 0>
new  <	mov qword [rbp + 84], string_0A#>

3618:
old  <	cmp ebx, 0>
new  <>

3619:
old  <	je file_test$734>
new  < file_test$738:>

3620:
old  <>
new  <	; Call 60 printf 0>

3621:
old  < file_test$732:>
new  <	mov qword [rbp + 60], file_test$739>

3622:
old  <	; Assign Â£temporary4208 "Yes">
new  <	mov [rbp + 68], rbp>

3623:
old  <	mov eax, string_Yes#>
new  <	add rbp, 60>

3624:
old  <>
new  <	mov rdi, rbp>

3625:
old  < file_test$733:>
new  <	jmp printf>

3626:
old  <	; Goto 735>
new  <>

3627:
old  <	jmp file_test$735>
new  < file_test$739:>

3628:
old  <>
new  <	; PostCall 60>

3629:
old  < file_test$734:>
new  <>

3630:
old  <	; Assign Â£temporary4208 "No">
new  < file_test$740:>

3631:
old  <	mov eax, string_No#>
new  <	; PreCall 60 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3633:
old  < file_test$735:>
new  < file_test$741:>

3634:
old  <	; Parameter 72 pointer Â£temporary4208>
new  <	; Parameter 84 pointer p>

3635:
old  <	mov [rbp + 72], eax>
new  <	mov rax, [rbp + 44]>

3636:
old  <>
new  <	mov [rbp + 84], rax>

3637:
old  < file_test$736:>
new  <>

3638:
old  <	; Call 40 printf 8>
new  < file_test$742:>

3639:
old  <	mov qword [rbp + 40], file_test$737>
new  <	; Call 60 free 0>

3640:
old  <	mov [rbp + 48], rbp>
new  <	mov qword [rbp + 60], file_test$743>

3641:
old  <	add rbp, 40>
new  <	mov [rbp + 68], rbp>

3642:
old  <	mov rdi, rbp>
new  <	add rbp, 60>

3643:
old  <	add rdi, 8>
new  <	jmp free>

3644:
old  <	jmp printf>
new  <>

3645:
old  <>
new  < file_test$743:>

3646:
old  < file_test$737:>
new  <	; PostCall 60>

3647:
old  <	; PostCall 40>
new  <>

3648:
old  <>
new  < file_test$744:>

3649:
old  < file_test$738:>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3650:
old  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

3651:
old  <>
new  < file_test$745:>

3652:
old  < file_test$739:>
new  <	; Parameter 60 pointer inFilePtr>

3653:
old  <	; Parameter 64 pointer "fileexists Y %s\n\n">
new  <	mov rax, [rbp + 24]>

3654:
old  <	mov qword [rbp + 64], string_fileexists20Y2025s0A0A#>
new  <	mov [rbp + 60], rax>

3656:
old  < file_test$740:>
new  < file_test$746:>

3657:
old  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Call 36 fclose 0>

3658:
old  <>
new  <	mov qword [rbp + 36], file_test$747>

3659:
old  < file_test$741:>
new  <	mov [rbp + 44], rbp>

3660:
old  <	; Parameter 96 pointer "Y">
new  <	add rbp, 36>

3661:
old  <	mov qword [rbp + 96], string_Y#>
new  <	jmp fclose>

3663:
old  < file_test$742:>
new  < file_test$747:>

3664:
old  <	; Call 72 fileexists 0>
new  <	; PostCall 36>

3665:
old  <	mov qword [rbp + 72], file_test$743>
new  <>

3666:
old  <	mov [rbp + 80], rbp>
new  < file_test$748:>

3667:
old  <	add rbp, 72>
new  <	; Assign personVector[0].name[0] 65>

3668:
old  <	jmp fileexists>
new  <	mov byte [rbp + 24], 65>

3670:
old  < file_test$743:>
new  < file_test$749:>

3671:
old  <	; PostCall 72>
new  <	; Assign personVector[0].name[1] 100>

3672:
old  <>
new  <	mov byte [rbp + 25], 100>

3673:
old  < file_test$744:>
new  <>

3674:
old  <	; GetReturnValue Â£temporary4210>
new  < file_test$750:>

3675:
old  <>
new  <	; Assign personVector[0].name[2] 97>

3676:
old  < file_test$745:>
new  <	mov byte [rbp + 26], 97>

3677:
old  <	; Equal 748 Â£temporary4210 0>
new  <>

3678:
old  <	cmp ebx, 0>
new  < file_test$751:>

3679:
old  <	je file_test$748>
new  <	; Assign personVector[0].name[3] 109>

3680:
old  <>
new  <	mov byte [rbp + 27], 109>

3681:
old  < file_test$746:>
new  <>

3682:
old  <	; Assign Â£temporary4212 "Yes">
new  < file_test$752:>

3683:
old  <	mov eax, string_Yes#>
new  <	; Assign personVector[0].name[4] 32>

3684:
old  <>
new  <	mov byte [rbp + 28], 32>

3685:
old  < file_test$747:>
new  <>

3686:
old  <	; Goto 749>
new  < file_test$753:>

3687:
old  <	jmp file_test$749>
new  <	; Assign personVector[0].name[5] 66>

3688:
old  <>
new  <	mov byte [rbp + 29], 66>

3689:
old  < file_test$748:>
new  <>

3690:
old  <	; Assign Â£temporary4212 "No">
new  < file_test$754:>

3691:
old  <	mov eax, string_No#>
new  <	; Assign personVector[0].name[6] 101>

3692:
old  <>
new  <	mov byte [rbp + 30], 101>

3693:
old  < file_test$749:>
new  <>

3694:
old  <	; Parameter 72 pointer Â£temporary4212>
new  < file_test$755:>

3695:
old  <	mov [rbp + 72], eax>
new  <	; Assign personVector[0].name[7] 114>

3696:
old  <>
new  <	mov byte [rbp + 31], 114>

3697:
old  < file_test$750:>
new  <>

3698:
old  <	; Call 40 printf 8>
new  < file_test$756:>

3699:
old  <	mov qword [rbp + 40], file_test$751>
new  <	; Assign personVector[0].name[8] 116>

3700:
old  <	mov [rbp + 48], rbp>
new  <	mov byte [rbp + 32], 116>

3701:
old  <	add rbp, 40>
new  <>

3702:
old  <	mov rdi, rbp>
new  < file_test$757:>

3703:
old  <	add rdi, 8>
new  <	; Assign personVector[0].name[9] 105>

3704:
old  <	jmp printf>
new  <	mov byte [rbp + 33], 105>

3706:
old  < file_test$751:>
new  < file_test$758:>

3707:
old  <	; PostCall 40>
new  <	; Assign personVector[0].name[10] 108>

3708:
old  <>
new  <	mov byte [rbp + 34], 108>

3709:
old  < file_test$752:>
new  <>

3710:
old  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < file_test$759:>

3711:
old  <>
new  <	; Assign personVector[0].name[11] 115>

3712:
old  < file_test$753:>
new  <	mov byte [rbp + 35], 115>

3713:
old  <	; Parameter 72 pointer "PBookX.txt">
new  <>

3714:
old  <	mov qword [rbp + 72], string_PBookX2Etxt#>
new  < file_test$760:>

3715:
old  <>
new  <	; Assign personVector[0].name[12] 115>

3716:
old  < file_test$754:>
new  <	mov byte [rbp + 36], 115>

3717:
old  <	; Parameter 80 pointer "r+">
new  <>

3718:
old  <	mov qword [rbp + 80], string_r2B#>
new  < file_test$761:>

3719:
old  <>
new  <	; Assign personVector[0].name[13] 111>

3720:
old  < file_test$755:>
new  <	mov byte [rbp + 37], 111>

3721:
old  <	; Call 48 fopen 0>
new  <>

3722:
old  <	mov qword [rbp + 48], file_test$756>
new  < file_test$762:>

3723:
old  <	mov [rbp + 56], rbp>
new  <	; Assign personVector[0].name[14] 110>

3724:
old  <	add rbp, 48>
new  <	mov byte [rbp + 38], 110>

3725:
old  <	jmp fopen>
new  <>

3726:
old  <>
new  < file_test$763:>

3727:
old  < file_test$756:>
new  <	; Assign personVector[0].name[15] 0>

3728:
old  <	; PostCall 48>
new  <	mov byte [rbp + 39], 0>

3730:
old  < file_test$757:>
new  < file_test$764:>

3731:
old  <	; GetReturnValue Â£temporary4214>
new  <	; Assign personVector[0].phone 12345>

3732:
old  <>
new  <	mov dword [rbp + 72], 12345>

3733:
old  < file_test$758:>
new  <>

3734:
old  <	; Assign inOutFilePtr Â£temporary4214>
new  < file_test$765:>

3735:
old  <	mov [rbp + 48], rbx>
new  <	; Assign personVector[1].name[0] 66>

3736:
old  <>
new  <	mov byte [rbp + 76], 66>

3737:
old  < file_test$759:>
new  <>

3738:
old  <	; NotEqual 771 inOutFilePtr 0>
new  < file_test$766:>

3739:
old  <	cmp qword [rbp + 48], 0>
new  <	; Assign personVector[1].name[1] 101>

3740:
old  <	jne file_test$771>
new  <	mov byte [rbp + 77], 101>

3742:
old  < file_test$760:>
new  < file_test$767:>

3743:
old  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Assign personVector[1].name[2] 114>

3744:
old  <>
new  <	mov byte [rbp + 78], 114>

3745:
old  < file_test$761:>
new  <>

3746:
old  <	; Parameter 80 pointer stderr>
new  < file_test$768:>

3747:
old  <	mov rax, [stderr]>
new  <	; Assign personVector[1].name[3] 116>

3748:
old  <	mov [rbp + 80], rax>
new  <	mov byte [rbp + 79], 116>

3750:
old  < file_test$762:>
new  < file_test$769:>

3751:
old  <	; Parameter 88 pointer "Assertion failed: "%s" in file %s at line %i\n">
new  <	; Assign personVector[1].name[4] 105>

3752:
old  <	mov qword [rbp + 88], string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#>
new  <	mov byte [rbp + 80], 105>

3754:
old  < file_test$763:>
new  < file_test$770:>

3755:
old  <	; Parameter 96 pointer "inOutFilePtr != NULL">
new  <	; Assign personVector[1].name[5] 108>

3756:
old  <	mov qword [rbp + 96], string_inOutFilePtr20213D20NULL#>
new  <	mov byte [rbp + 81], 108>

3758:
old  < file_test$764:>
new  < file_test$771:>

3759:
old  <	; Parameter 104 pointer "C:\Users\Stefan\Documents\vagrant\homestead\code\code\FileTest.c">
new  <	; Assign personVector[1].name[6] 32>

3760:
old  <	mov qword [rbp + 104], string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CFileTest2Ec#>
new  <	mov byte [rbp + 82], 32>

3762:
old  < file_test$765:>
new  < file_test$772:>

3763:
old  <	; Parameter 112 signedint 229>
new  <	; Assign personVector[1].name[7] 67>

3764:
old  <	mov dword [rbp + 112], 229>
new  <	mov byte [rbp + 83], 67>

3766:
old  < file_test$766:>
new  < file_test$773:>

3767:
old  <	; Call 56 fprintf 20>
new  <	; Assign personVector[1].name[8] 101>

3768:
old  <	mov qword [rbp + 56], file_test$767>
new  <	mov byte [rbp + 84], 101>

3769:
old  <	mov [rbp + 64], rbp>
new  <>

3770:
old  <	add rbp, 56>
new  < file_test$774:>

3771:
old  <	mov rdi, rbp>
new  <	; Assign personVector[1].name[9] 97>

3772:
old  <	add rdi, 20>
new  <	mov byte [rbp + 85], 97>

3773:
old  <	jmp fprintf>
new  <>

3774:
old  <>
new  < file_test$775:>

3775:
old  < file_test$767:>
new  <	; Assign personVector[1].name[10] 115>

3776:
old  <	; PostCall 56>
new  <	mov byte [rbp + 86], 115>

3778:
old  < file_test$768:>
new  < file_test$776:>

3779:
old  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Assign personVector[1].name[11] 97>

3780:
old  <>
new  <	mov byte [rbp + 87], 97>

3781:
old  < file_test$769:>
new  <>

3782:
old  <	; Call 56 abort 0>
new  < file_test$777:>

3783:
old  <	mov qword [rbp + 56], file_test$770>
new  <	; Assign personVector[1].name[12] 114>

3784:
old  <	mov [rbp + 64], rbp>
new  <	mov byte [rbp + 88], 114>

3785:
old  <	add rbp, 56>
new  <>

3786:
old  <	jmp abort>
new  < file_test$778:>

3787:
old  <>
new  <	; Assign personVector[1].name[13] 115>

3788:
old  < file_test$770:>
new  <	mov byte [rbp + 89], 115>

3789:
old  <	; PostCall 56>
new  <>

3790:
old  <>
new  < file_test$779:>

3791:
old  < file_test$771:>
new  <	; Assign personVector[1].name[14] 115>

3792:
old  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov byte [rbp + 90], 115>

3794:
old  < file_test$772:>
new  < file_test$780:>

3795:
old  <	; Call 56 tmpfile 0>
new  <	; Assign personVector[1].name[15] 111>

3796:
old  <	mov qword [rbp + 56], file_test$773>
new  <	mov byte [rbp + 91], 111>

3797:
old  <	mov [rbp + 64], rbp>
new  <>

3798:
old  <	add rbp, 56>
new  < file_test$781:>

3799:
old  <	jmp tmpfile>
new  <	; Assign personVector[1].name[16] 110>

3800:
old  <>
new  <	mov byte [rbp + 92], 110>

3801:
old  < file_test$773:>
new  <>

3802:
old  <	; PostCall 56>
new  < file_test$782:>

3803:
old  <>
new  <	; Assign personVector[1].name[17] 0>

3804:
old  < file_test$774:>
new  <	mov byte [rbp + 93], 0>

3805:
old  <	; GetReturnValue Â£temporary4219>
new  <>

3806:
old  <>
new  < file_test$783:>

3807:
old  < file_test$775:>
new  <	; Assign personVector[1].phone 23456>

3808:
old  <	; Assign tempFilePtr Â£temporary4219>
new  <	mov dword [rbp + 124], 23456>

3809:
old  <	mov [rbp + 40], rbx>
new  <>

3810:
old  <>
new  < file_test$784:>

3811:
old  < file_test$776:>
new  <	; Assign personVector[2].name[0] 67>

3812:
old  <	; NotEqual 788 tempFilePtr 0>
new  <	mov byte [rbp + 128], 67>

3813:
old  <	cmp qword [rbp + 40], 0>
new  <>

3814:
old  <	jne file_test$788>
new  < file_test$785:>

3815:
old  <>
new  <	; Assign personVector[2].name[1] 101>

3816:
old  < file_test$777:>
new  <	mov byte [rbp + 129], 101>

3817:
old  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

3818:
old  <>
new  < file_test$786:>

3819:
old  < file_test$778:>
new  <	; Assign personVector[2].name[2] 97>

3820:
old  <	; Parameter 80 pointer stderr>
new  <	mov byte [rbp + 130], 97>

3821:
old  <	mov rax, [stderr]>
new  <>

3822:
old  <	mov [rbp + 80], rax>
new  < file_test$787:>

3823:
old  <>
new  <	; Assign personVector[2].name[3] 115>

3824:
old  < file_test$779:>
new  <	mov byte [rbp + 131], 115>

3825:
old  <	; Parameter 88 pointer "Assertion failed: "%s" in file %s at line %i\n">
new  <>

3826:
old  <	mov qword [rbp + 88], string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#>
new  < file_test$788:>

3827:
old  <>
new  <	; Assign personVector[2].name[4] 97>

3828:
old  < file_test$780:>
new  <	mov byte [rbp + 132], 97>

3829:
old  <	; Parameter 96 pointer "tempFilePtr != NULL">
new  <>

3830:
old  <	mov qword [rbp + 96], string_tempFilePtr20213D20NULL#>
new  < file_test$789:>

3831:
old  <>
new  <	; Assign personVector[2].name[5] 114>

3832:
old  < file_test$781:>
new  <	mov byte [rbp + 133], 114>

3833:
old  <	; Parameter 104 pointer "C:\Users\Stefan\Documents\vagrant\homestead\code\code\FileTest.c">
new  <>

3834:
old  <	mov qword [rbp + 104], string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CFileTest2Ec#>
new  < file_test$790:>

3835:
old  <>
new  <	; Assign personVector[2].name[6] 32>

3836:
old  < file_test$782:>
new  <	mov byte [rbp + 134], 32>

3837:
old  <	; Parameter 112 signedint 232>
new  <>

3838:
old  <	mov dword [rbp + 112], 232>
new  < file_test$791:>

3839:
old  <>
new  <	; Assign personVector[2].name[7] 68>

3840:
old  < file_test$783:>
new  <	mov byte [rbp + 135], 68>

3841:
old  <	; Call 56 fprintf 20>
new  <>

3842:
old  <	mov qword [rbp + 56], file_test$784>
new  < file_test$792:>

3843:
old  <	mov [rbp + 64], rbp>
new  <	; Assign personVector[2].name[8] 97>

3844:
old  <	add rbp, 56>
new  <	mov byte [rbp + 136], 97>

3845:
old  <	mov rdi, rbp>
new  <>

3846:
old  <	add rdi, 20>
new  < file_test$793:>

3847:
old  <	jmp fprintf>
new  <	; Assign personVector[2].name[9] 118>

3848:
old  <>
new  <	mov byte [rbp + 137], 118>

3849:
old  < file_test$784:>
new  <>

3850:
old  <	; PostCall 56>
new  < file_test$794:>

3851:
old  <>
new  <	; Assign personVector[2].name[10] 105>

3852:
old  < file_test$785:>
new  <	mov byte [rbp + 138], 105>

3853:
old  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

3854:
old  <>
new  < file_test$795:>

3855:
old  < file_test$786:>
new  <	; Assign personVector[2].name[11] 100>

3856:
old  <	; Call 56 abort 0>
new  <	mov byte [rbp + 139], 100>

3857:
old  <	mov qword [rbp + 56], file_test$787>
new  <>

3858:
old  <	mov [rbp + 64], rbp>
new  < file_test$796:>

3859:
old  <	add rbp, 56>
new  <	; Assign personVector[2].name[12] 115>

3860:
old  <	jmp abort>
new  <	mov byte [rbp + 140], 115>

3862:
old  < file_test$787:>
new  < file_test$797:>

3863:
old  <	; PostCall 56>
new  <	; Assign personVector[2].name[13] 115>

3864:
old  <>
new  <	mov byte [rbp + 141], 115>

3865:
old  < file_test$788:>
new  <>

3866:
old  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < file_test$798:>

3867:
old  <>
new  <	; Assign personVector[2].name[14] 111>

3868:
old  < file_test$789:>
new  <	mov byte [rbp + 142], 111>

3869:
old  <	; Parameter 80 pointer inOutFilePtr>
new  <>

3870:
old  <	mov rax, [rbp + 48]>
new  < file_test$799:>

3871:
old  <	mov [rbp + 80], rax>
new  <	; Assign personVector[2].name[15] 110>

3872:
old  <>
new  <	mov byte [rbp + 143], 110>

3873:
old  < file_test$790:>
new  <>

3874:
old  <	; Call 56 fgetc 0>
new  < file_test$800:>

3875:
old  <	mov qword [rbp + 56], file_test$791>
new  <	; Assign personVector[2].name[16] 0>

3876:
old  <	mov [rbp + 64], rbp>
new  <	mov byte [rbp + 144], 0>

3877:
old  <	add rbp, 56>
new  <>

3878:
old  <	jmp fgetc>
new  < file_test$801:>

3879:
old  <>
new  <	; Assign personVector[2].phone 24567>

3880:
old  < file_test$791:>
new  <	mov dword [rbp + 176], 24567>

3881:
old  <	; PostCall 56>
new  <>

3882:
old  <>
new  < file_test$802:>

3883:
old  < file_test$792:>
new  <	; PreCall 232 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3884:
old  <	; GetReturnValue Â£temporary4224>
new  <>

3885:
old  <>
new  < file_test$803:>

3886:
old  < file_test$793:>
new  <	; Parameter 256 pointer "Block.bin">

3887:
old  <	; IntegralToIntegral Â£temporary4225 Â£temporary4224>
new  <	mov qword [rbp + 256], string_Block2Ebin#>

3888:
old  <	cmp ebx, 0>
new  <>

3889:
old  <	jge file_test$794>
new  < file_test$804:>

3890:
old  <	neg ebx>
new  <	; Parameter 264 pointer "w">

3891:
old  <	neg bl>
new  <	mov qword [rbp + 264], string_w#>

3893:
old  < file_test$794:>
new  < file_test$805:>

3894:
old  <	; Assign c Â£temporary4225>
new  <	; Call 232 fopen 0>

3895:
old  <	mov [rbp + 56], bl>
new  <	mov qword [rbp + 232], file_test$806>

3896:
old  <>
new  <	mov [rbp + 240], rbp>

3897:
old  < file_test$795:>
new  <	add rbp, 232>

3898:
old  <	; IntegralToIntegral Â£temporary4226 c>
new  <	jmp fopen>

3899:
old  <	mov al, [rbp + 56]>
new  <>

3900:
old  <	and eax, 255>
new  < file_test$806:>

3901:
old  <	cmp al, 0>
new  <	; PostCall 232>

3902:
old  <	jge file_test$796>
new  <>

3903:
old  <	neg al>
new  < file_test$807:>

3904:
old  <	neg eax>
new  <	; GetReturnValue Â£temporary4206>

3906:
old  < file_test$796:>
new  < file_test$808:>

3907:
old  <	; Equal 809 Â£temporary4226 -1>
new  <	; Assign outFilePtr Â£temporary4206>

3908:
old  <	cmp eax, -1>
new  <	mov [rbp + 232], rbx>

3909:
old  <	je file_test$809>
new  <>

3910:
old  <>
new  < file_test$809:>

3911:
old  < file_test$797:>
new  <	; PreCall 240 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3912:
old  <	; PreCall 57 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

3913:
old  <>
new  < file_test$810:>

3914:
old  < file_test$798:>
new  <	; Parameter 264 pointer "Block.bin">

3915:
old  <	; PreCall 57 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov qword [rbp + 264], string_Block2Ebin#>

3917:
old  < file_test$799:>
new  < file_test$811:>

3918:
old  <	; IntegralToIntegral Â£temporary4228 c>
new  <	; Parameter 272 pointer "r">

3919:
old  <	mov al, [rbp + 56]>
new  <	mov qword [rbp + 272], string_r#>

3920:
old  <	and eax, 255>
new  <>

3921:
old  <	cmp al, 0>
new  < file_test$812:>

3922:
old  <	jge file_test$800>
new  <	; Call 240 fopen 0>

3923:
old  <	neg al>
new  <	mov qword [rbp + 240], file_test$813>

3924:
old  <	neg eax>
new  <	mov [rbp + 248], rbp>

3925:
old  <>
new  <	add rbp, 240>

3926:
old  < file_test$800:>
new  <	jmp fopen>

3927:
old  <	; Parameter 81 signedint Â£temporary4228>
new  <>

3928:
old  <	mov [rbp + 81], eax>
new  < file_test$813:>

3929:
old  <>
new  <	; PostCall 240>

3930:
old  < file_test$801:>
new  <>

3931:
old  <	; Call 57 toupper 0>
new  < file_test$814:>

3932:
old  <	mov qword [rbp + 57], file_test$802>
new  <	; GetReturnValue Â£temporary4207>

3933:
old  <	mov [rbp + 65], rbp>
new  <>

3934:
old  <	add rbp, 57>
new  < file_test$815:>

3935:
old  <	jmp toupper>
new  <	; Assign inFilePtr Â£temporary4207>

3936:
old  <>
new  <	mov [rbp + 240], rbx>

3937:
old  < file_test$802:>
new  <>

3938:
old  <	; PostCall 57>
new  < file_test$816:>

3939:
old  <>
new  <	; NotEqual 828 outFilePtr 0>

3940:
old  < file_test$803:>
new  <	cmp qword [rbp + 232], 0>

3941:
old  <	; GetReturnValue Â£temporary4229>
new  <	jne file_test$828>

3943:
old  < file_test$804:>
new  < file_test$817:>

3944:
old  <	; Parameter 81 signedint Â£temporary4229>
new  <	; PreCall 248 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3945:
old  <	mov [rbp + 81], ebx>
new  <>

3946:
old  <>
new  < file_test$818:>

3947:
old  < file_test$805:>
new  <	; Parameter 272 pointer stderr>

3948:
old  <	; Parameter 85 pointer tempFilePtr>
new  <	mov rax, [stderr]>

3949:
old  <	mov rax, [rbp + 40]>
new  <	mov [rbp + 272], rax>

3950:
old  <	mov [rbp + 85], rax>
new  <>

3951:
old  <>
new  < file_test$819:>

3952:
old  < file_test$806:>
new  <	; Parameter 280 pointer "Assertion failed: "%s" in file %s at line %i\n">

3953:
old  <	; Call 57 putc 0>
new  <	mov qword [rbp + 280], string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#>

3954:
old  <	mov qword [rbp + 57], file_test$807>
new  <>

3955:
old  <	mov [rbp + 65], rbp>
new  < file_test$820:>

3956:
old  <	add rbp, 57>
new  <	; Parameter 288 pointer "outFilePtr != NULL">

3957:
old  <	jmp putc>
new  <	mov qword [rbp + 288], string_outFilePtr20213D20NULL#>

3959:
old  < file_test$807:>
new  < file_test$821:>

3960:
old  <	; PostCall 57>
new  <	; Parameter 296 pointer "C:\Users\Stefan\Documents\vagrant\homestead\code\code\FileTest.c">

3961:
old  <>
new  <	mov qword [rbp + 296], string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CFileTest2Ec#>

3962:
old  < file_test$808:>
new  <>

3963:
old  <	; Goto 788>
new  < file_test$822:>

3964:
old  <	jmp file_test$788>
new  <	; Parameter 304 signedint 269>

3965:
old  <>
new  <	mov dword [rbp + 304], 269>

3966:
old  < file_test$809:>
new  <>

3967:
old  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < file_test$823:>

3968:
old  <>
new  <	; Call 248 fprintf 20>

3969:
old  < file_test$810:>
new  <	mov qword [rbp + 248], file_test$824>

3970:
old  <	; Parameter 80 pointer tempFilePtr>
new  <	mov [rbp + 256], rbp>

3971:
old  <	mov rax, [rbp + 40]>
new  <	add rbp, 248>

3972:
old  <	mov [rbp + 80], rax>
new  <	mov rdi, rbp>

3973:
old  <>
new  <	add rdi, 20>

3974:
old  < file_test$811:>
new  <	jmp fprintf>

3975:
old  <	; Call 56 rewind 0>
new  <>

3976:
old  <	mov qword [rbp + 56], file_test$812>
new  < file_test$824:>

3977:
old  <	mov [rbp + 64], rbp>
new  <	; PostCall 248>

3978:
old  <	add rbp, 56>
new  <>

3979:
old  <	jmp rewind>
new  < file_test$825:>

3980:
old  <>
new  <	; PreCall 248 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3981:
old  < file_test$812:>
new  <>

3982:
old  <	; PostCall 56>
new  < file_test$826:>

3983:
old  <>
new  <	; Call 248 abort 0>

3984:
old  < file_test$813:>
new  <	mov qword [rbp + 248], file_test$827>

3985:
old  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov [rbp + 256], rbp>

3986:
old  <>
new  <	add rbp, 248>

3987:
old  < file_test$814:>
new  <	jmp abort>

3988:
old  <	; Parameter 80 pointer inOutFilePtr>
new  <>

3989:
old  <	mov rax, [rbp + 48]>
new  < file_test$827:>

3990:
old  <	mov [rbp + 80], rax>
new  <	; PostCall 248>

3992:
old  < file_test$815:>
new  < file_test$828:>

3993:
old  <	; Parameter 88 pointer "\n------------\n">
new  <	; NotEqual 840 inFilePtr 0>

3994:
old  <	mov qword [rbp + 88], string_0A2D2D2D2D2D2D2D2D2D2D2D2D0A#>
new  <	cmp qword [rbp + 240], 0>

3995:
old  <>
new  <	jne file_test$840>

3996:
old  < file_test$816:>
new  <>

3997:
old  <	; Call 56 fprintf 0>
new  < file_test$829:>

3998:
old  <	mov qword [rbp + 56], file_test$817>
new  <	; PreCall 248 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3999:
old  <	mov [rbp + 64], rbp>
new  <>

4000:
old  <	add rbp, 56>
new  < file_test$830:>

4001:
old  <	mov rdi, rbp>
new  <	; Parameter 272 pointer stderr>

4002:
old  <	jmp fprintf>
new  <	mov rax, [stderr]>

4003:
old  <>
new  <	mov [rbp + 272], rax>

4004:
old  < file_test$817:>
new  <>

4005:
old  <	; PostCall 56>
new  < file_test$831:>

4006:
old  <>
new  <	; Parameter 280 pointer "Assertion failed: "%s" in file %s at line %i\n">

4007:
old  < file_test$818:>
new  <	mov qword [rbp + 280], string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#>

4008:
old  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

4009:
old  <>
new  < file_test$832:>

4010:
old  < file_test$819:>
new  <	; Parameter 288 pointer "inFilePtr != NULL">

4011:
old  <	; Parameter 80 pointer tempFilePtr>
new  <	mov qword [rbp + 288], string_inFilePtr20213D20NULL#>

4012:
old  <	mov rax, [rbp + 40]>
new  <>

4013:
old  <	mov [rbp + 80], rax>
new  < file_test$833:>

4014:
old  <>
new  <	; Parameter 296 pointer "C:\Users\Stefan\Documents\vagrant\homestead\code\code\FileTest.c">

4015:
old  < file_test$820:>
new  <	mov qword [rbp + 296], string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CFileTest2Ec#>

4016:
old  <	; Call 56 fgetc 0>
new  <>

4017:
old  <	mov qword [rbp + 56], file_test$821>
new  < file_test$834:>

4018:
old  <	mov [rbp + 64], rbp>
new  <	; Parameter 304 signedint 270>

4019:
old  <	add rbp, 56>
new  <	mov dword [rbp + 304], 270>

4020:
old  <	jmp fgetc>
new  <>

4021:
old  <>
new  < file_test$835:>

4022:
old  < file_test$821:>
new  <	; Call 248 fprintf 20>

4023:
old  <	; PostCall 56>
new  <	mov qword [rbp + 248], file_test$836>

4024:
old  <>
new  <	mov [rbp + 256], rbp>

4025:
old  < file_test$822:>
new  <	add rbp, 248>

4026:
old  <	; GetReturnValue Â£temporary4234>
new  <	mov rdi, rbp>

4027:
old  <>
new  <	add rdi, 20>

4028:
old  < file_test$823:>
new  <	jmp fprintf>

4029:
old  <	; IntegralToIntegral Â£temporary4235 Â£temporary4234>
new  <>

4030:
old  <	cmp ebx, 0>
new  < file_test$836:>

4031:
old  <	jge file_test$824>
new  <	; PostCall 248>

4032:
old  <	neg ebx>
new  <>

4033:
old  <	neg bl>
new  < file_test$837:>

4034:
old  <>
new  <	; PreCall 248 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

4035:
old  < file_test$824:>
new  <>

4036:
old  <	; Assign c Â£temporary4235>
new  < file_test$838:>

4037:
old  <	mov [rbp + 56], bl>
new  <	; Call 248 abort 0>

4038:
old  <>
new  <	mov qword [rbp + 248], file_test$839>

4039:
old  < file_test$825:>
new  <	mov [rbp + 256], rbp>

4040:
old  <	; IntegralToIntegral Â£temporary4236 c>
new  <	add rbp, 248>

4041:
old  <	mov al, [rbp + 56]>
new  <	jmp abort>

4042:
old  <	and eax, 255>
new  <>

4043:
old  <	cmp al, 0>
new  < file_test$839:>

4044:
old  <	jge file_test$826>
new  <	; PostCall 248>

4045:
old  <	neg al>
new  <>

4046:
old  <	neg eax>
new  < file_test$840:>

4047:
old  <>
new  <	; PreCall 248 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

4048:
old  < file_test$826:>
new  <>

4049:
old  <	; Equal 834 Â£temporary4236 -1>
new  < file_test$841:>

4050:
old  <	cmp eax, -1>
new  <	; Parameter 272 pointer personVector>

4051:
old  <	je file_test$834>
new  <	mov [rbp + 272], rbp>

4052:
old  <>
new  <	add qword [rbp + 272], 24>

4053:
old  < file_test$827:>
new  <>

4054:
old  <	; PreCall 57 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < file_test$842:>

4055:
old  <>
new  <	; Parameter 280 signedint 156>

4056:
old  < file_test$828:>
new  <	mov dword [rbp + 280], 156>

4057:
old  <	; IntegralToIntegral Â£temporary4238 c>
new  <>

4058:
old  <	mov al, [rbp + 56]>
new  < file_test$843:>

4059:
old  <	and eax, 255>
new  <	; Parameter 284 signedint 1>

4060:
old  <	cmp al, 0>
new  <	mov dword [rbp + 284], 1>

4061:
old  <	jge file_test$829>
new  <>

4062:
old  <	neg al>
new  < file_test$844:>

4063:
old  <	neg eax>
new  <	; Parameter 288 pointer outFilePtr>

4064:
old  <>
new  <	mov rax, [rbp + 232]>

4065:
old  < file_test$829:>
new  <	mov [rbp + 288], rax>

4066:
old  <	; Parameter 81 signedint Â£temporary4238>
new  <>

4067:
old  <	mov [rbp + 81], eax>
new  < file_test$845:>

4068:
old  <>
new  <	; Call 248 fwrite 0>

4069:
old  < file_test$830:>
new  <	mov qword [rbp + 248], file_test$846>

4070:
old  <	; Parameter 85 pointer inOutFilePtr>
new  <	mov [rbp + 256], rbp>

4071:
old  <	mov rax, [rbp + 48]>
new  <	add rbp, 248>

4072:
old  <	mov [rbp + 85], rax>
new  <	jmp fwrite>

4074:
old  < file_test$831:>
new  < file_test$846:>

4075:
old  <	; Call 57 putc 0>
new  <	; PostCall 248>

4076:
old  <	mov qword [rbp + 57], file_test$832>
new  <>

4077:
old  <	mov [rbp + 65], rbp>
new  < file_test$847:>

4078:
old  <	add rbp, 57>
new  <	; PreCall 248 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

4079:
old  <	jmp putc>
new  <>

4080:
old  <>
new  < file_test$848:>

4081:
old  < file_test$832:>
new  <	; Parameter 272 pointer outFilePtr>

4082:
old  <	; PostCall 57>
new  <	mov rax, [rbp + 232]>

4083:
old  <>
new  <	mov [rbp + 272], rax>

4084:
old  < file_test$833:>
new  <>

4085:
old  <	; Goto 818>
new  < file_test$849:>

4086:
old  <	jmp file_test$818>
new  <	; Call 248 fclose 0>

4087:
old  <>
new  <	mov qword [rbp + 248], file_test$850>

4088:
old  < file_test$834:>
new  <	mov [rbp + 256], rbp>

4089:
old  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	add rbp, 248>

4090:
old  <>
new  <	jmp fclose>

4091:
old  < file_test$835:>
new  <>

4092:
old  <	; Parameter 80 pointer inOutFilePtr>
new  < file_test$850:>

4093:
old  <	mov rax, [rbp + 48]>
new  <	; PostCall 248>

4094:
old  <	mov [rbp + 80], rax>
new  <>

4095:
old  <>
new  < file_test$851:>

4096:
old  < file_test$836:>
new  <	; PreCall 248 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

4097:
old  <	; Call 56 fclose 0>
new  <>

4098:
old  <	mov qword [rbp + 56], file_test$837>
new  < file_test$852:>

4099:
old  <	mov [rbp + 64], rbp>
new  <	; Parameter 272 pointer inFilePtr>

4100:
old  <	add rbp, 56>
new  <	mov rax, [rbp + 240]>

4101:
old  <	jmp fclose>
new  <	mov [rbp + 272], rax>

4103:
old  < file_test$837:>
new  < file_test$853:>

4104:
old  <	; PostCall 56>
new  <	; Call 248 feof 0>

4105:
old  <>
new  <	mov qword [rbp + 248], file_test$854>

4106:
old  < file_test$838:>
new  <	mov [rbp + 256], rbp>

4107:
old  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	add rbp, 248>

4108:
old  <>
new  <	jmp feof>

4109:
old  < file_test$839:>
new  <>

4110:
old  <	; Parameter 80 pointer tempFilePtr>
new  < file_test$854:>

4111:
old  <	mov rax, [rbp + 40]>
new  <	; PostCall 248>

4112:
old  <	mov [rbp + 80], rax>
new  <>

4113:
old  <>
new  < file_test$855:>

4114:
old  < file_test$840:>
new  <	; GetReturnValue Â£temporary4218>

4115:
old  <	; Call 56 fclose 0>
new  <>

4116:
old  <	mov qword [rbp + 56], file_test$841>
new  < file_test$856:>

4117:
old  <	mov [rbp + 64], rbp>
new  <	; NotEqual 876 Â£temporary4218 0>

4118:
old  <	add rbp, 56>
new  <	cmp ebx, 0>

4119:
old  <	jmp fclose>
new  <	jne file_test$876>

4121:
old  < file_test$841:>
new  < file_test$857:>

4122:
old  <	; PostCall 56>
new  <	; PreCall 248 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

4124:
old  < file_test$842:>
new  < file_test$858:>

4125:
old  <	; Return>
new  <	; Address Â£temporary4221 person>

4126:
old  <	mov rax, [rbp]>
new  <	mov rsi, rbp>

4127:
old  <	mov rdi, [rbp + 16]>
new  <	add rsi, 180>

4128:
old  <	mov rbp, [rbp + 8]>
new  <>

4129:
old  <	jmp rax>
new  < file_test$859:>

4130:
old  <>
new  <	; Parameter 272 pointer Â£temporary4221>

4131:
old  < file_test$843:>
new  <	mov [rbp + 272], rsi>

4132:
old  <	; FunctionEnd file_test>
new  <>

StdIOTest.asm
213:
old  <	; Address Â£temporary4259 n>
new  <	; Address Â£temporary4253 n>

218:
old  <	; Assign p Â£temporary4259>
new  <	; Assign p Â£temporary4253>

SignalTest.asm
StackTest.asm
11:
old  <@8738$i:>
new  <@8750$i:>

31:
old  <	; Assign Â£temporary4365 i>
new  <	; Assign Â£temporary4359 i>

32:
old  <	mov eax, [@8738$i]>
new  <	mov eax, [@8750$i]>

36:
old  <	inc dword [@8738$i]>
new  <	inc dword [@8750$i]>

39:
old  <	; Parameter 56 signedint Â£temporary4365>
new  <	; Parameter 56 signedint Â£temporary4359>

107:
old  <	; GetReturnValue Â£temporary4368>
new  <	; GetReturnValue Â£temporary4362>

110:
old  <	; Assign pointer Â£temporary4368>
new  <	; Assign pointer Â£temporary4362>

126:
old  <	; Assign Â£temporary4370 count>
new  <	; Assign Â£temporary4364 count>

134:
old  <	; Parameter 68 signedint Â£temporary4370>
new  <	; Parameter 68 signedint Â£temporary4364>

MallocTest.asm
45:
old  <	; GetReturnValue Â£temporary4372>
new  <	; GetReturnValue Â£temporary4366>

48:
old  <	; Assign q Â£temporary4372>
new  <	; Assign q Â£temporary4366>

78:
old  <	; GetReturnValue Â£temporary4375>
new  <	; GetReturnValue Â£temporary4369>

81:
old  <	; Assign p Â£temporary4375>
new  <	; Assign p Â£temporary4369>

359:
old  <	; GetReturnValue Â£temporary4390>
new  <	; GetReturnValue Â£temporary4384>

362:
old  <	; Assign a Â£temporary4390>
new  <	; Assign a Â£temporary4384>

387:
old  <	; GetReturnValue Â£temporary4391>
new  <	; GetReturnValue Â£temporary4385>

390:
old  <	; Assign b Â£temporary4391>
new  <	; Assign b Â£temporary4385>

415:
old  <	; GetReturnValue Â£temporary4392>
new  <	; GetReturnValue Â£temporary4386>

418:
old  <	; Assign c Â£temporary4392>
new  <	; Assign c Â£temporary4386>

443:
old  <	; GetReturnValue Â£temporary4393>
new  <	; GetReturnValue Â£temporary4387>

446:
old  <	; Assign d Â£temporary4393>
new  <	; Assign d Â£temporary4387>

471:
old  <	; GetReturnValue Â£temporary4394>
new  <	; GetReturnValue Â£temporary4388>

474:
old  <	; Assign e Â£temporary4394>
new  <	; Assign e Â£temporary4388>

616:
old  <	; InspectRegister Â£temporary4402 bp>
new  <	; InspectRegister Â£temporary4396 bp>

619:
old  <	; IntegralToIntegral Â£temporary4403 Â£temporary4402>
new  <	; IntegralToIntegral Â£temporary4397 Â£temporary4396>

623:
old  <	; Assign stackTop Â£temporary4403>
new  <	; Assign stackTop Â£temporary4397>

639:
old  <	; Dereference Â£temporary4404 -> lowHeapPtr lowHeapPtr 0>
new  <	; Dereference Â£temporary4398 -> lowHeapPtr lowHeapPtr 0>

643:
old  <	; Parameter 72 unsigned int Â£temporary4404 -> lowHeapPtr>
new  <	; Parameter 72 unsigned int Â£temporary4398 -> lowHeapPtr>

727:
old  <	; GetReturnValue Â£temporary4408>
new  <	; GetReturnValue Â£temporary4402>

730:
old  <	; Assign b Â£temporary4408>
new  <	; Assign b Â£temporary4402>

751:
old  <	; GetReturnValue Â£temporary4409>
new  <	; GetReturnValue Â£temporary4403>

754:
old  <	; Assign c Â£temporary4409>
new  <	; Assign c Â£temporary4403>

775:
old  <	; GetReturnValue Â£temporary4410>
new  <	; GetReturnValue Â£temporary4404>

778:
old  <	; Assign d Â£temporary4410>
new  <	; Assign d Â£temporary4404>

944:
old  <	; InspectRegister Â£temporary4420 bp>
new  <	; InspectRegister Â£temporary4414 bp>

947:
old  <	; IntegralToIntegral Â£temporary4421 Â£temporary4420>
new  <	; IntegralToIntegral Â£temporary4415 Â£temporary4414>

951:
old  <	; Assign stackTop Â£temporary4421>
new  <	; Assign stackTop Â£temporary4415>

981:
old  <	; GetReturnValue Â£temporary4424>
new  <	; GetReturnValue Â£temporary4418>

984:
old  <	; Assign p Â£temporary4424>
new  <	; Assign p Â£temporary4418>

1010:
old  <	; Dereference Â£temporary4425 -> lowHeapPtr lowHeapPtr 0>
new  <	; Dereference Â£temporary4419 -> lowHeapPtr lowHeapPtr 0>

1014:
old  <	; Parameter 96 unsigned int Â£temporary4425 -> lowHeapPtr>
new  <	; Parameter 96 unsigned int Â£temporary4419 -> lowHeapPtr>

StdLibTest.asm
30:
old  <	; IntegralToIntegral Â£temporary4427 valuePtr1>
new  <	; IntegralToIntegral Â£temporary4421 valuePtr1>

34:
old  <	; Dereference Â£temporary4428 -> Â£temporary4427 Â£temporary4427 0>
new  <	; Dereference Â£temporary4422 -> Â£temporary4421 Â£temporary4421 0>

37:
old  <	; Assign intValue1 Â£temporary4428 -> Â£temporary4427>
new  <	; Assign intValue1 Â£temporary4422 -> Â£temporary4421>

42:
old  <	; IntegralToIntegral Â£temporary4429 valuePtr2>
new  <	; IntegralToIntegral Â£temporary4423 valuePtr2>

46:
old  <	; Dereference Â£temporary4430 -> Â£temporary4429 Â£temporary4429 0>
new  <	; Dereference Â£temporary4424 -> Â£temporary4423 Â£temporary4423 0>

49:
old  <	; Assign intValue2 Â£temporary4430 -> Â£temporary4429>
new  <	; Assign intValue2 Â£temporary4424 -> Â£temporary4423>

60:
old  <	; Assign Â£temporary4434 -1>
new  <	; Assign Â£temporary4428 -1>

74:
old  <	; Assign Â£temporary4434 0>
new  <	; Assign Â£temporary4428 0>

82:
old  <	; Assign Â£temporary4434 1>
new  <	; Assign Â£temporary4428 1>

86:
old  <	; Return Â£temporary4434>
new  <	; SetReturnValue>

87:
old  <	mov rax, [rbp]>
new  <>

88:
old  <	mov rdi, [rbp + 16]>
new  < compare$14:>

89:
old  <	mov rbp, [rbp + 8]>
new  <	; Return Â£temporary4428>

90:
old  <	jmp rax>
new  <	mov rax, [rbp]>

91:
old  <>
new  <	mov rdi, [rbp + 16]>

92:
old  < compare$14:>
new  <	mov rbp, [rbp + 8]>

93:
old  <	; FunctionEnd compare>
new  <	jmp rax>

95:
old  <section .text>
new  < compare$15:>

96:
old  <>
new  <	; FunctionEnd compare>

97:
old  < reverse_compare:>
new  <>

98:
old  <	; IntegralToIntegral Â£temporary4435 valuePtr1>
new  <section .text>

99:
old  <	mov rsi, [rbp + 24]>
new  <>

100:
old  <>
new  < reverse_compare:>

101:
old  < reverse_compare$1:>
new  <	; IntegralToIntegral Â£temporary4429 valuePtr1>

102:
old  <	; Dereference Â£temporary4436 -> Â£temporary4435 Â£temporary4435 0>
new  <	mov rsi, [rbp + 24]>

104:
old  < reverse_compare$2:>
new  < reverse_compare$1:>

105:
old  <	; Assign intValue1 Â£temporary4436 -> Â£temporary4435>
new  <	; Dereference Â£temporary4430 -> Â£temporary4429 Â£temporary4429 0>

106:
old  <	mov eax, [rsi]>
new  <>

107:
old  <	mov [rbp + 40], eax>
new  < reverse_compare$2:>

108:
old  <>
new  <	; Assign intValue1 Â£temporary4430 -> Â£temporary4429>

109:
old  < reverse_compare$3:>
new  <	mov eax, [rsi]>

110:
old  <	; IntegralToIntegral Â£temporary4437 valuePtr2>
new  <	mov [rbp + 40], eax>

111:
old  <	mov rsi, [rbp + 32]>
new  <>

112:
old  <>
new  < reverse_compare$3:>

113:
old  < reverse_compare$4:>
new  <	; IntegralToIntegral Â£temporary4431 valuePtr2>

114:
old  <	; Dereference Â£temporary4438 -> Â£temporary4437 Â£temporary4437 0>
new  <	mov rsi, [rbp + 32]>

116:
old  < reverse_compare$5:>
new  < reverse_compare$4:>

117:
old  <	; Assign intValue2 Â£temporary4438 -> Â£temporary4437>
new  <	; Dereference Â£temporary4432 -> Â£temporary4431 Â£temporary4431 0>

118:
old  <	mov eax, [rsi]>
new  <>

119:
old  <	mov [rbp + 44], eax>
new  < reverse_compare$5:>

120:
old  <>
new  <	; Assign intValue2 Â£temporary4432 -> Â£temporary4431>

121:
old  < reverse_compare$6:>
new  <	mov eax, [rsi]>

122:
old  <	; SignedGreaterThanEqual 9 intValue1 intValue2>
new  <	mov [rbp + 44], eax>

123:
old  <	mov eax, [rbp + 44]>
new  <>

124:
old  <	cmp [rbp + 40], eax>
new  < reverse_compare$6:>

125:
old  <	jge reverse_compare$9>
new  <	; SignedGreaterThanEqual 9 intValue1 intValue2>

126:
old  <>
new  <	mov eax, [rbp + 44]>

127:
old  < reverse_compare$7:>
new  <	cmp [rbp + 40], eax>

128:
old  <	; Assign Â£temporary4442 1>
new  <	jge reverse_compare$9>

129:
old  <	mov ebx, 1>
new  <>

130:
old  <>
new  < reverse_compare$7:>

131:
old  < reverse_compare$8:>
new  <	; Assign Â£temporary4436 1>

132:
old  <	; Goto 13>
new  <	mov ebx, 1>

133:
old  <	jmp reverse_compare$13>
new  <>

134:
old  <>
new  < reverse_compare$8:>

135:
old  < reverse_compare$9:>
new  <	; Goto 13>

136:
old  <	; NotEqual 12 intValue1 intValue2>
new  <	jmp reverse_compare$13>

137:
old  <	mov eax, [rbp + 44]>
new  <>

138:
old  <	cmp [rbp + 40], eax>
new  < reverse_compare$9:>

139:
old  <	jne reverse_compare$12>
new  <	; NotEqual 12 intValue1 intValue2>

140:
old  <>
new  <	mov eax, [rbp + 44]>

141:
old  < reverse_compare$10:>
new  <	cmp [rbp + 40], eax>

142:
old  <	; Assign Â£temporary4442 0>
new  <	jne reverse_compare$12>

143:
old  <	mov ebx, 0>
new  <>

144:
old  <>
new  < reverse_compare$10:>

145:
old  < reverse_compare$11:>
new  <	; Assign Â£temporary4436 0>

146:
old  <	; Goto 13>
new  <	mov ebx, 0>

147:
old  <	jmp reverse_compare$13>
new  <>

148:
old  <>
new  < reverse_compare$11:>

149:
old  < reverse_compare$12:>
new  <	; Goto 13>

150:
old  <	; Assign Â£temporary4442 -1>
new  <	jmp reverse_compare$13>

151:
old  <	mov ebx, -1>
new  <>

152:
old  <>
new  < reverse_compare$12:>

153:
old  < reverse_compare$13:>
new  <	; Assign Â£temporary4436 -1>

154:
old  <	; Return Â£temporary4442>
new  <	mov ebx, -1>

155:
old  <	mov rax, [rbp]>
new  <>

156:
old  <	mov rdi, [rbp + 16]>
new  < reverse_compare$13:>

157:
old  <	mov rbp, [rbp + 8]>
new  <	; SetReturnValue>

158:
old  <	jmp rax>
new  <>

159:
old  <>
new  < reverse_compare$14:>

160:
old  < reverse_compare$14:>
new  <	; Return Â£temporary4436>

161:
old  <	; FunctionEnd reverse_compare>
new  <	mov rax, [rbp]>

162:
old  <>
new  <	mov rdi, [rbp + 16]>

163:
old  <section .data>
new  <	mov rbp, [rbp + 8]>

164:
old  <>
new  <	jmp rax>

165:
old  <string_div_t20quot2025i20rem2025i0A#:>
new  <>

166:
old  <	; Initializer String div_t quot %i rem %i\n>
new  < reverse_compare$15:>

167:
old  <	db "div_t quot %i rem %i", 10, 0>
new  <	; FunctionEnd reverse_compare>

169:
old  <section .text>
new  <section .data>

171:
old  < print_div:>
new  <string_div_t20quot2025i20rem2025i0A#:>

172:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Initializer String div_t quot %i rem %i\n>

173:
old  <>
new  <	db "div_t quot %i rem %i", 10, 0>

174:
old  < print_div$1:>
new  <>

175:
old  <	; Parameter 56 pointer "div_t quot %i rem %i\n">
new  <section .text>

176:
old  <	mov qword [rbp + 56], string_div_t20quot2025i20rem2025i0A#>
new  <>

177:
old  <>
new  < print_div:>

178:
old  < print_div$2:>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

179:
old  <	; Parameter 64 signedint d.quot>
new  <>

180:
old  <	mov eax, [rbp + 24]>
new  < print_div$1:>

181:
old  <	mov [rbp + 64], eax>
new  <	; Parameter 56 pointer "div_t quot %i rem %i\n">

182:
old  <>
new  <	mov qword [rbp + 56], string_div_t20quot2025i20rem2025i0A#>

183:
old  < print_div$3:>
new  <>

184:
old  <	; Parameter 68 signedint d.rem>
new  < print_div$2:>

185:
old  <	mov eax, [rbp + 28]>
new  <	; Parameter 64 signedint d.quot>

186:
old  <	mov [rbp + 68], eax>
new  <	mov eax, [rbp + 24]>

187:
old  <>
new  <	mov [rbp + 64], eax>

188:
old  < print_div$4:>
new  <>

189:
old  <	; Call 32 printf 8>
new  < print_div$3:>

190:
old  <	mov qword [rbp + 32], print_div$5>
new  <	; Parameter 68 signedint d.rem>

191:
old  <	mov [rbp + 40], rbp>
new  <	mov eax, [rbp + 28]>

192:
old  <	add rbp, 32>
new  <	mov [rbp + 68], eax>

193:
old  <	mov rdi, rbp>
new  <>

194:
old  <	add rdi, 8>
new  < print_div$4:>

195:
old  <	jmp printf>
new  <	; Call 32 printf 8>

196:
old  <>
new  <	mov qword [rbp + 32], print_div$5>

197:
old  < print_div$5:>
new  <	mov [rbp + 40], rbp>

198:
old  <	; PostCall 32>
new  <	add rbp, 32>

199:
old  <>
new  <	mov rdi, rbp>

200:
old  < print_div$6:>
new  <	add rdi, 8>

201:
old  <	; BinaryAdd d.quot d.quot 1>
new  <	jmp printf>

202:
old  <	inc dword [rbp + 24]>
new  <>

203:
old  <>
new  < print_div$5:>

204:
old  < print_div$7:>
new  <	; PostCall 32>

205:
old  <	; BinaryAdd d.rem d.rem 1>
new  <>

206:
old  <	inc dword [rbp + 28]>
new  < print_div$6:>

207:
old  <>
new  <	; BinaryAdd d.quot d.quot 1>

208:
old  < print_div$8:>
new  <	inc dword [rbp + 24]>

209:
old  <	; Return d>
new  <>

210:
old  <	mov rbx, rbp>
new  < print_div$7:>

211:
old  <	add rbx, 24>
new  <	; BinaryAdd d.rem d.rem 1>

212:
old  <	mov rax, [rbp]>
new  <	inc dword [rbp + 28]>

213:
old  <	mov rdi, [rbp + 16]>
new  <>

214:
old  <	mov rbp, [rbp + 8]>
new  < print_div$8:>

215:
old  <	jmp rax>
new  <	; SetReturnValue>

218:
old  <	; FunctionEnd print_div>
new  <	; Return d>

219:
old  <>
new  <	mov rbx, rbp>

220:
old  <section .data>
new  <	add rbx, 24>

221:
old  <>
new  <	mov rax, [rbp]>

222:
old  <string_ldiv_t20quot2025li20rem2025li0A#:>
new  <	mov rdi, [rbp + 16]>

223:
old  <	; Initializer String ldiv_t quot %li rem %li\n>
new  <	mov rbp, [rbp + 8]>

224:
old  <	db "ldiv_t quot %li rem %li", 10, 0>
new  <	jmp rax>

226:
old  <section .text>
new  < print_div$10:>

227:
old  <>
new  <	; FunctionEnd print_div>

228:
old  < print_ldiv:>
new  <>

229:
old  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <section .data>

231:
old  < print_ldiv$1:>
new  <string_ldiv_t20quot2025li20rem2025li0A#:>

232:
old  <	; Parameter 64 pointer "ldiv_t quot %li rem %li\n">
new  <	; Initializer String ldiv_t quot %li rem %li\n>

233:
old  <	mov qword [rbp + 64], string_ldiv_t20quot2025li20rem2025li0A#>
new  <	db "ldiv_t quot %li rem %li", 10, 0>

235:
old  < print_ldiv$2:>
new  <section .text>

236:
old  <	; Parameter 72 signed long int ld.quot>
new  <>

237:
old  <	mov rax, [rbp + 24]>
new  < print_ldiv:>

238:
old  <	mov [rbp + 72], rax>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

240:
old  < print_ldiv$3:>
new  < print_ldiv$1:>

241:
old  <	; Parameter 80 signed long int ld.rem>
new  <	; Parameter 64 pointer "ldiv_t quot %li rem %li\n">

242:
old  <	mov rax, [rbp + 32]>
new  <	mov qword [rbp + 64], string_ldiv_t20quot2025li20rem2025li0A#>

243:
old  <	mov [rbp + 80], rax>
new  <>

244:
old  <>
new  < print_ldiv$2:>

245:
old  < print_ldiv$4:>
new  <	; Parameter 72 signed long int ld.quot>

246:
old  <	; Call 40 printf 16>
new  <	mov rax, [rbp + 24]>

247:
old  <	mov qword [rbp + 40], print_ldiv$5>
new  <	mov [rbp + 72], rax>

248:
old  <	mov [rbp + 48], rbp>
new  <>

249:
old  <	add rbp, 40>
new  < print_ldiv$3:>

250:
old  <	mov rdi, rbp>
new  <	; Parameter 80 signed long int ld.rem>

251:
old  <	add rdi, 16>
new  <	mov rax, [rbp + 32]>

252:
old  <	jmp printf>
new  <	mov [rbp + 80], rax>

254:
old  < print_ldiv$5:>
new  < print_ldiv$4:>

255:
old  <	; PostCall 40>
new  <	; Call 40 printf 16>

256:
old  <>
new  <	mov qword [rbp + 40], print_ldiv$5>

257:
old  < print_ldiv$6:>
new  <	mov [rbp + 48], rbp>

258:
old  <	; BinarySubtract ld.quot ld.quot 1>
new  <	add rbp, 40>

259:
old  <	dec qword [rbp + 24]>
new  <	mov rdi, rbp>

260:
old  <>
new  <	add rdi, 16>

261:
old  < print_ldiv$7:>
new  <	jmp printf>

262:
old  <	; BinarySubtract ld.rem ld.rem 1>
new  <>

263:
old  <	dec qword [rbp + 32]>
new  < print_ldiv$5:>

264:
old  <>
new  <	; PostCall 40>

265:
old  < print_ldiv$8:>
new  <>

266:
old  <	; Return ld>
new  < print_ldiv$6:>

267:
old  <	mov rbx, rbp>
new  <	; BinarySubtract ld.quot ld.quot 1>

268:
old  <	add rbx, 24>
new  <	dec qword [rbp + 24]>

269:
old  <	mov rax, [rbp]>
new  <>

270:
old  <	mov rdi, [rbp + 16]>
new  < print_ldiv$7:>

271:
old  <	mov rbp, [rbp + 8]>
new  <	; BinarySubtract ld.rem ld.rem 1>

272:
old  <	jmp rax>
new  <	dec qword [rbp + 32]>

274:
old  < print_ldiv$9:>
new  < print_ldiv$8:>

275:
old  <	; FunctionEnd print_ldiv>
new  <	; SetReturnValue>

277:
old  <section .data>
new  < print_ldiv$9:>

278:
old  <>
new  <	; Return ld>

279:
old  <string_exit10A#:>
new  <	mov rbx, rbp>

280:
old  <	; Initializer String exit1\n>
new  <	add rbx, 24>

281:
old  <	db "exit1", 10, 0>
new  <	mov rax, [rbp]>

282:
old  <>
new  <	mov rdi, [rbp + 16]>

283:
old  <section .text>
new  <	mov rbp, [rbp + 8]>

284:
old  <>
new  <	jmp rax>

285:
old  < exit_handle1x:>
new  <>

286:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < print_ldiv$10:>

287:
old  <>
new  <	; FunctionEnd print_ldiv>

288:
old  < exit_handle1x$1:>
new  <>

289:
old  <	; Parameter 48 pointer "exit1\n">
new  <section .data>

290:
old  <	mov qword [rbp + 48], string_exit10A#>
new  <>

291:
old  <>
new  <string_exit10A#:>

292:
old  < exit_handle1x$2:>
new  <	; Initializer String exit1\n>

293:
old  <	; Call 24 printf 0>
new  <	db "exit1", 10, 0>

294:
old  <	mov qword [rbp + 24], exit_handle1x$3>
new  <>

295:
old  <	mov [rbp + 32], rbp>
new  <section .text>

296:
old  <	add rbp, 24>
new  <>

297:
old  <	mov rdi, rbp>
new  < exit_handle1x:>

298:
old  <	jmp printf>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

300:
old  < exit_handle1x$3:>
new  < exit_handle1x$1:>

301:
old  <	; PostCall 24>
new  <	; Parameter 48 pointer "exit1\n">

302:
old  <>
new  <	mov qword [rbp + 48], string_exit10A#>

303:
old  < exit_handle1x$4:>
new  <>

304:
old  <	; Return>
new  < exit_handle1x$2:>

305:
old  <	mov rax, [rbp]>
new  <	; Call 24 printf 0>

306:
old  <	mov rdi, [rbp + 16]>
new  <	mov qword [rbp + 24], exit_handle1x$3>

307:
old  <	mov rbp, [rbp + 8]>
new  <	mov [rbp + 32], rbp>

308:
old  <	jmp rax>
new  <	add rbp, 24>

309:
old  <>
new  <	mov rdi, rbp>

310:
old  < exit_handle1x$5:>
new  <	jmp printf>

311:
old  <	; FunctionEnd exit_handle1x>
new  <>

312:
old  <>
new  < exit_handle1x$3:>

313:
old  <section .data>
new  <	; PostCall 24>

315:
old  <string_exit20A#:>
new  < exit_handle1x$4:>

316:
old  <	; Initializer String exit2\n>
new  <	; Return>

317:
old  <	db "exit2", 10, 0>
new  <	mov rax, [rbp]>

318:
old  <>
new  <	mov rdi, [rbp + 16]>

319:
old  <section .text>
new  <	mov rbp, [rbp + 8]>

320:
old  <>
new  <	jmp rax>

321:
old  < exit_handle2x:>
new  <>

322:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < exit_handle1x$5:>

323:
old  <>
new  <	; FunctionEnd exit_handle1x>

324:
old  < exit_handle2x$1:>
new  <>

325:
old  <	; Parameter 48 pointer "exit2\n">
new  <section .data>

326:
old  <	mov qword [rbp + 48], string_exit20A#>
new  <>

327:
old  <>
new  <string_exit20A#:>

328:
old  < exit_handle2x$2:>
new  <	; Initializer String exit2\n>

329:
old  <	; Call 24 printf 0>
new  <	db "exit2", 10, 0>

330:
old  <	mov qword [rbp + 24], exit_handle2x$3>
new  <>

331:
old  <	mov [rbp + 32], rbp>
new  <section .text>

332:
old  <	add rbp, 24>
new  <>

333:
old  <	mov rdi, rbp>
new  < exit_handle2x:>

334:
old  <	jmp printf>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

336:
old  < exit_handle2x$3:>
new  < exit_handle2x$1:>

337:
old  <	; PostCall 24>
new  <	; Parameter 48 pointer "exit2\n">

338:
old  <>
new  <	mov qword [rbp + 48], string_exit20A#>

339:
old  < exit_handle2x$4:>
new  <>

340:
old  <	; Return>
new  < exit_handle2x$2:>

341:
old  <	mov rax, [rbp]>
new  <	; Call 24 printf 0>

342:
old  <	mov rdi, [rbp + 16]>
new  <	mov qword [rbp + 24], exit_handle2x$3>

343:
old  <	mov rbp, [rbp + 8]>
new  <	mov [rbp + 32], rbp>

344:
old  <	jmp rax>
new  <	add rbp, 24>

345:
old  <>
new  <	mov rdi, rbp>

346:
old  < exit_handle2x$5:>
new  <	jmp printf>

347:
old  <	; FunctionEnd exit_handle2x>
new  <>

348:
old  <>
new  < exit_handle2x$3:>

349:
old  <section .data>
new  <	; PostCall 24>

351:
old  <string_exit30A#:>
new  < exit_handle2x$4:>

352:
old  <	; Initializer String exit3\n>
new  <	; Return>

353:
old  <	db "exit3", 10, 0>
new  <	mov rax, [rbp]>

354:
old  <>
new  <	mov rdi, [rbp + 16]>

355:
old  <section .text>
new  <	mov rbp, [rbp + 8]>

356:
old  <>
new  <	jmp rax>

357:
old  < exit_handle3x:>
new  <>

358:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < exit_handle2x$5:>

359:
old  <>
new  <	; FunctionEnd exit_handle2x>

360:
old  < exit_handle3x$1:>
new  <>

361:
old  <	; Parameter 48 pointer "exit3\n">
new  <section .data>

362:
old  <	mov qword [rbp + 48], string_exit30A#>
new  <>

363:
old  <>
new  <string_exit30A#:>

364:
old  < exit_handle3x$2:>
new  <	; Initializer String exit3\n>

365:
old  <	; Call 24 printf 0>
new  <	db "exit3", 10, 0>

366:
old  <	mov qword [rbp + 24], exit_handle3x$3>
new  <>

367:
old  <	mov [rbp + 32], rbp>
new  <section .text>

368:
old  <	add rbp, 24>
new  <>

369:
old  <	mov rdi, rbp>
new  < exit_handle3x:>

370:
old  <	jmp printf>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

372:
old  < exit_handle3x$3:>
new  < exit_handle3x$1:>

373:
old  <	; PostCall 24>
new  <	; Parameter 48 pointer "exit3\n">

374:
old  <>
new  <	mov qword [rbp + 48], string_exit30A#>

375:
old  < exit_handle3x$4:>
new  <>

376:
old  <	; Return>
new  < exit_handle3x$2:>

377:
old  <	mov rax, [rbp]>
new  <	; Call 24 printf 0>

378:
old  <	mov rdi, [rbp + 16]>
new  <	mov qword [rbp + 24], exit_handle3x$3>

379:
old  <	mov rbp, [rbp + 8]>
new  <	mov [rbp + 32], rbp>

380:
old  <	jmp rax>
new  <	add rbp, 24>

381:
old  <>
new  <	mov rdi, rbp>

382:
old  < exit_handle3x$5:>
new  <	jmp printf>

383:
old  <	; FunctionEnd exit_handle3x>
new  <>

384:
old  <>
new  < exit_handle3x$3:>

385:
old  <section .data>
new  <	; PostCall 24>

387:
old  <string_HelloFFF#:>
new  < exit_handle3x$4:>

388:
old  <	; Initializer String HelloFFF>
new  <	; Return>

389:
old  <	db "HelloFFF", 0>
new  <	mov rax, [rbp]>

390:
old  <>
new  <	mov rdi, [rbp + 16]>

391:
old  <section .text>
new  <	mov rbp, [rbp + 8]>

392:
old  <>
new  <	jmp rax>

393:
old  < hello:>
new  <>

394:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < exit_handle3x$5:>

395:
old  <>
new  <	; FunctionEnd exit_handle3x>

396:
old  < hello$1:>
new  <>

397:
old  <	; Parameter 48 pointer "HelloFFF">
new  <section .data>

398:
old  <	mov qword [rbp + 48], string_HelloFFF#>
new  <>

399:
old  <>
new  <string_HelloFFF#:>

400:
old  < hello$2:>
new  <	; Initializer String HelloFFF>

401:
old  <	; Call 24 printf 0>
new  <	db "HelloFFF", 0>

402:
old  <	mov qword [rbp + 24], hello$3>
new  <>

403:
old  <	mov [rbp + 32], rbp>
new  <section .text>

404:
old  <	add rbp, 24>
new  <>

405:
old  <	mov rdi, rbp>
new  < hello:>

406:
old  <	jmp printf>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

408:
old  < hello$3:>
new  < hello$1:>

409:
old  <	; PostCall 24>
new  <	; Parameter 48 pointer "HelloFFF">

410:
old  <>
new  <	mov qword [rbp + 48], string_HelloFFF#>

411:
old  < hello$4:>
new  <>

412:
old  <	; Return>
new  < hello$2:>

413:
old  <	mov rax, [rbp]>
new  <	; Call 24 printf 0>

414:
old  <	mov rdi, [rbp + 16]>
new  <	mov qword [rbp + 24], hello$3>

415:
old  <	mov rbp, [rbp + 8]>
new  <	mov [rbp + 32], rbp>

416:
old  <	jmp rax>
new  <	add rbp, 24>

417:
old  <>
new  <	mov rdi, rbp>

418:
old  < hello$5:>
new  <	jmp printf>

419:
old  <	; FunctionEnd hello>
new  <>

420:
old  <>
new  < hello$3:>

421:
old  <section .data>
new  <	; PostCall 24>

423:
old  <string_f3A2025u0A#:>
new  < hello$4:>

424:
old  <	; Initializer String f: %u\n>
new  <	; Return>

425:
old  <	db "f: %u", 10, 0>
new  <	mov rax, [rbp]>

426:
old  <>
new  <	mov rdi, [rbp + 16]>

427:
old  <section .text>
new  <	mov rbp, [rbp + 8]>

428:
old  <>
new  <	jmp rax>

429:
old  < qtest:>
new  <>

430:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < hello$5:>

431:
old  <>
new  <	; FunctionEnd hello>

432:
old  < qtest$1:>
new  <>

433:
old  <	; Parameter 56 pointer "f: %u\n">
new  <section .data>

434:
old  <	mov qword [rbp + 56], string_f3A2025u0A#>
new  <>

435:
old  <>
new  <string_f3A2025u0A#:>

436:
old  < qtest$2:>
new  <	; Initializer String f: %u\n>

437:
old  <	; IntegralToIntegral Â£temporary4463 f>
new  <	db "f: %u", 10, 0>

438:
old  <	mov rax, [rbp + 24]>
new  <>

439:
old  <>
new  <section .text>

440:
old  < qtest$3:>
new  <>

441:
old  <	; Parameter 64 unsigned int Â£temporary4463>
new  < qtest:>

442:
old  <	mov [rbp + 64], eax>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

444:
old  < qtest$4:>
new  < qtest$1:>

445:
old  <	; Call 32 printf 4>
new  <	; Parameter 56 pointer "f: %u\n">

446:
old  <	mov qword [rbp + 32], qtest$5>
new  <	mov qword [rbp + 56], string_f3A2025u0A#>

447:
old  <	mov [rbp + 40], rbp>
new  <>

448:
old  <	add rbp, 32>
new  < qtest$2:>

449:
old  <	mov rdi, rbp>
new  <	; IntegralToIntegral Â£temporary4457 f>

450:
old  <	add rdi, 4>
new  <	mov rax, [rbp + 24]>

451:
old  <	jmp printf>
new  <>

452:
old  <>
new  < qtest$3:>

453:
old  < qtest$5:>
new  <	; Parameter 64 unsigned int Â£temporary4457>

454:
old  <	; PostCall 32>
new  <	mov [rbp + 64], eax>

456:
old  < qtest$6:>
new  < qtest$4:>

457:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Call 32 printf 4>

458:
old  <>
new  <	mov qword [rbp + 32], qtest$5>

459:
old  < qtest$7:>
new  <	mov [rbp + 40], rbp>

460:
old  <	; Call 32 f 0>
new  <	add rbp, 32>

461:
old  <	mov qword [rbp + 32], qtest$8>
new  <	mov rdi, rbp>

462:
old  <	mov [rbp + 40], rbp>
new  <	add rdi, 4>

463:
old  <	mov rax, [rbp + 24]>
new  <	jmp printf>

464:
old  <	add rbp, 32>
new  <>

465:
old  <	jmp rax>
new  < qtest$5:>

466:
old  <>
new  <	; PostCall 32>

467:
old  < qtest$8:>
new  <>

468:
old  <	; PostCall 32>
new  < qtest$6:>

469:
old  <>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

470:
old  < qtest$9:>
new  <>

471:
old  <	; Return>
new  < qtest$7:>

472:
old  <	mov rax, [rbp]>
new  <	; Call 32 f 0>

473:
old  <	mov rdi, [rbp + 16]>
new  <	mov qword [rbp + 32], qtest$8>

474:
old  <	mov rbp, [rbp + 8]>
new  <	mov [rbp + 40], rbp>

475:
old  <	jmp rax>
new  <	mov rax, [rbp + 24]>

476:
old  <>
new  <	add rbp, 32>

477:
old  < qtest$10:>
new  <	jmp rax>

478:
old  <	; FunctionEnd qtest>
new  <>

479:
old  <>
new  < qtest$8:>

480:
old  <section .data>
new  <	; PostCall 32>

482:
old  <string_hello3A2025u0A#:>
new  < qtest$9:>

483:
old  <	; Initializer String hello: %u\n>
new  <	; Return>

484:
old  <	db "hello: %u", 10, 0>
new  <	mov rax, [rbp]>

485:
old  <>
new  <	mov rdi, [rbp + 16]>

486:
old  <section .data>
new  <	mov rbp, [rbp + 8]>

487:
old  <>
new  <	jmp rax>

488:
old  <string_Y#:>
new  <>

489:
old  <	; Initializer String Y>
new  < qtest$10:>

490:
old  <	db "Y", 0>
new  <	; FunctionEnd qtest>

492:
old  <section .text>
new  <section .data>

494:
old  < stdlib_testZ:>
new  <string_hello3A2025u0A#:>

495:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Initializer String hello: %u\n>

496:
old  <>
new  <	db "hello: %u", 10, 0>

497:
old  < stdlib_testZ$1:>
new  <>

498:
old  <	; Parameter 48 pointer "hello: %u\n">
new  <section .data>

499:
old  <	mov qword [rbp + 48], string_hello3A2025u0A#>
new  <>

500:
old  <>
new  <string_Y#:>

501:
old  < stdlib_testZ$2:>
new  <	; Initializer String Y>

502:
old  <	; IntegralToIntegral Â£temporary4466 hello>
new  <	db "Y", 0>

503:
old  <	mov rax, hello>
new  <>

504:
old  <>
new  <section .text>

505:
old  < stdlib_testZ$3:>
new  <>

506:
old  <	; Parameter 56 unsigned int Â£temporary4466>
new  < stdlib_testZ:>

507:
old  <	mov [rbp + 56], eax>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

509:
old  < stdlib_testZ$4:>
new  < stdlib_testZ$1:>

510:
old  <	; Call 24 printf 4>
new  <	; Parameter 48 pointer "hello: %u\n">

511:
old  <	mov qword [rbp + 24], stdlib_testZ$5>
new  <	mov qword [rbp + 48], string_hello3A2025u0A#>

512:
old  <	mov [rbp + 32], rbp>
new  <>

513:
old  <	add rbp, 24>
new  < stdlib_testZ$2:>

514:
old  <	mov rdi, rbp>
new  <	; IntegralToIntegral Â£temporary4460 hello>

515:
old  <	add rdi, 4>
new  <	mov rax, hello>

516:
old  <	jmp printf>
new  <>

517:
old  <>
new  < stdlib_testZ$3:>

518:
old  < stdlib_testZ$5:>
new  <	; Parameter 56 unsigned int Â£temporary4460>

519:
old  <	; PostCall 24>
new  <	mov [rbp + 56], eax>

521:
old  < stdlib_testZ$6:>
new  < stdlib_testZ$4:>

522:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Call 24 printf 4>

523:
old  <>
new  <	mov qword [rbp + 24], stdlib_testZ$5>

524:
old  < stdlib_testZ$7:>
new  <	mov [rbp + 32], rbp>

525:
old  <	; Parameter 48 pointer hello>
new  <	add rbp, 24>

526:
old  <	mov qword [rbp + 48], hello>
new  <	mov rdi, rbp>

527:
old  <>
new  <	add rdi, 4>

528:
old  < stdlib_testZ$8:>
new  <	jmp printf>

529:
old  <	; Call 24 qtest 0>
new  <>

530:
old  <	mov qword [rbp + 24], stdlib_testZ$9>
new  < stdlib_testZ$5:>

531:
old  <	mov [rbp + 32], rbp>
new  <	; PostCall 24>

532:
old  <	add rbp, 24>
new  <>

533:
old  <	jmp qtest>
new  < stdlib_testZ$6:>

534:
old  <>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

535:
old  < stdlib_testZ$9:>
new  <>

536:
old  <	; PostCall 24>
new  < stdlib_testZ$7:>

537:
old  <>
new  <	; Parameter 48 pointer hello>

538:
old  < stdlib_testZ$10:>
new  <	mov qword [rbp + 48], hello>

539:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

540:
old  <>
new  < stdlib_testZ$8:>

541:
old  < stdlib_testZ$11:>
new  <	; Call 24 qtest 0>

542:
old  <	; Parameter 48 pointer "Y">
new  <	mov qword [rbp + 24], stdlib_testZ$9>

543:
old  <	mov qword [rbp + 48], string_Y#>
new  <	mov [rbp + 32], rbp>

544:
old  <>
new  <	add rbp, 24>

545:
old  < stdlib_testZ$12:>
new  <	jmp qtest>

546:
old  <	; Call 24 printf 0>
new  <>

547:
old  <	mov qword [rbp + 24], stdlib_testZ$13>
new  < stdlib_testZ$9:>

548:
old  <	mov [rbp + 32], rbp>
new  <	; PostCall 24>

549:
old  <	add rbp, 24>
new  <>

550:
old  <	mov rdi, rbp>
new  < stdlib_testZ$10:>

551:
old  <	jmp printf>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

553:
old  < stdlib_testZ$13:>
new  < stdlib_testZ$11:>

554:
old  <	; PostCall 24>
new  <	; Parameter 48 pointer "Y">

555:
old  <>
new  <	mov qword [rbp + 48], string_Y#>

556:
old  < stdlib_testZ$14:>
new  <>

557:
old  <	; Return>
new  < stdlib_testZ$12:>

558:
old  <	mov rax, [rbp]>
new  <	; Call 24 printf 0>

559:
old  <	mov rdi, [rbp + 16]>
new  <	mov qword [rbp + 24], stdlib_testZ$13>

560:
old  <	mov rbp, [rbp + 8]>
new  <	mov [rbp + 32], rbp>

561:
old  <	jmp rax>
new  <	add rbp, 24>

562:
old  <>
new  <	mov rdi, rbp>

563:
old  < stdlib_testZ$15:>
new  <	jmp printf>

564:
old  <	; FunctionEnd stdlib_testZ>
new  <>

565:
old  <>
new  < stdlib_testZ$13:>

566:
old  <section .data>
new  <	; PostCall 24>

568:
old  <string_atof28221232E4562229203D2025f0A#:>
new  < stdlib_testZ$14:>

569:
old  <	; Initializer String atof("123.456") = %f\n>
new  <	; Return>

570:
old  <	db "atof(", 34, "123.456", 34, ") = %f", 10, 0>
new  <	mov rax, [rbp]>

571:
old  <>
new  <	mov rdi, [rbp + 16]>

572:
old  <section .data>
new  <	mov rbp, [rbp + 8]>

573:
old  <>
new  <	jmp rax>

574:
old  <string_1232E456#:>
new  <>

575:
old  <	; Initializer String 123.456>
new  < stdlib_testZ$15:>

576:
old  <	db "123.456", 0>
new  <	; FunctionEnd stdlib_testZ>

580:
old  <string_strtod28221232E456789abc222C2026p29203D202825f2C2025s290A#:>
new  <string_atof28221232E4562229203D2025f0A#:>

581:
old  <	; Initializer String strtod("123.456789abc", &p) = (%f, %s)\n>
new  <	; Initializer String atof("123.456") = %f\n>

582:
old  <	db "strtod(", 34, "123.456789abc", 34, ", &p) = (%f, %s)", 10, 0>
new  <	db "atof(", 34, "123.456", 34, ") = %f", 10, 0>

586:
old  <string_1232E456789abc#:>
new  <string_1232E456#:>

587:
old  <	; Initializer String 123.456789abc>
new  <	; Initializer String 123.456>

588:
old  <	db "123.456789abc", 0>
new  <	db "123.456", 0>

592:
old  <string_0Agetenv2822path2229203D2025s0A#:>
new  <string_strtod28221232E456789abc222C2026p29203D202825f2C2025s290A#:>

593:
old  <	; Initializer String \ngetenv("path") = %s\n>
new  <	; Initializer String strtod("123.456789abc", &p) = (%f, %s)\n>

594:
old  <	db 10, "getenv(", 34, "path", 34, ") = %s", 10, 0>
new  <	db "strtod(", 34, "123.456789abc", 34, ", &p) = (%f, %s)", 10, 0>

598:
old  <string_path#:>
new  <string_1232E456789abc#:>

599:
old  <	; Initializer String path>
new  <	; Initializer String 123.456789abc>

600:
old  <	db "path", 0>
new  <	db "123.456789abc", 0>

604:
old  <string_system2822dir22290A#:>
new  <string_0Agetenv2822path2229203D2025s0A#:>

605:
old  <	; Initializer String system("dir")\n>
new  <	; Initializer String \ngetenv("path") = %s\n>

606:
old  <	db "system(", 34, "dir", 34, ")", 10, 0>
new  <	db 10, "getenv(", 34, "path", 34, ") = %s", 10, 0>

610:
old  <string_dir#:>
new  <string_path#:>

611:
old  <	; Initializer String dir>
new  <	; Initializer String path>

612:
old  <	db "dir", 0>
new  <	db "path", 0>

616:
old  <string_0Aabs282D329203D2025i2C20abs28329203D2025i0A#:>
new  <string_system2822dir22290A#:>

617:
old  <	; Initializer String \nabs(-3) = %i, abs(3) = %i\n>
new  <	; Initializer String system("dir")\n>

618:
old  <	db 10, "abs(-3) = %i, abs(3) = %i", 10, 0>
new  <	db "system(", 34, "dir", 34, ")", 10, 0>

622:
old  <string_labs282D3l29203D2025li2C20labs283l29203D2025li0A0A#:>
new  <string_dir#:>

623:
old  <	; Initializer String labs(-3l) = %li, labs(3l) = %li\n\n>
new  <	; Initializer String dir>

624:
old  <	db "labs(-3l) = %li, labs(3l) = %li", 10, 10, 0>
new  <	db "dir", 0>

628:
old  <string_div_t28102C20329203D202825i2C2025i290A#:>
new  <string_0Aabs282D329203D2025i2C20abs28329203D2025i0A#:>

629:
old  <	; Initializer String div_t(10, 3) = (%i, %i)\n>
new  <	; Initializer String \nabs(-3) = %i, abs(3) = %i\n>

630:
old  <	db "div_t(10, 3) = (%i, %i)", 10, 0>
new  <	db 10, "abs(-3) = %i, abs(3) = %i", 10, 0>

634:
old  <string_div_t28102C20329203D202825i2C2025i290A0A#:>
new  <string_labs282D3l29203D2025li2C20labs283l29203D2025li0A0A#:>

635:
old  <	; Initializer String div_t(10, 3) = (%i, %i)\n\n>
new  <	; Initializer String labs(-3l) = %li, labs(3l) = %li\n\n>

636:
old  <	db "div_t(10, 3) = (%i, %i)", 10, 10, 0>
new  <	db "labs(-3l) = %li, labs(3l) = %li", 10, 10, 0>

640:
old  <string_ldiv_t28102C20329203D202825li2C2025li290A#:>
new  <string_div_t28102C20329203D202825i2C2025i290A#:>

641:
old  <	; Initializer String ldiv_t(10, 3) = (%li, %li)\n>
new  <	; Initializer String div_t(10, 3) = (%i, %i)\n>

642:
old  <	db "ldiv_t(10, 3) = (%li, %li)", 10, 0>
new  <	db "div_t(10, 3) = (%i, %i)", 10, 0>

646:
old  <string_ldiv_t28102C20329203D202825li2C2025li290A0A#:>
new  <string_div_t28102C20329203D202825i2C2025i290A0A#:>

647:
old  <	; Initializer String ldiv_t(10, 3) = (%li, %li)\n\n>
new  <	; Initializer String div_t(10, 3) = (%i, %i)\n\n>

648:
old  <	db "ldiv_t(10, 3) = (%li, %li)", 10, 10, 0>
new  <	db "div_t(10, 3) = (%i, %i)", 10, 10, 0>

652:
old  <string_0AA20List2013A20#:>
new  <string_ldiv_t28102C20329203D202825li2C2025li290A#:>

653:
old  <	; Initializer String \nA List 1: >
new  <	; Initializer String ldiv_t(10, 3) = (%li, %li)\n>

654:
old  <	db 10, "A List 1: ", 0>
new  <	db "ldiv_t(10, 3) = (%li, %li)", 10, 0>

658:
old  <string_25i20#:>
new  <string_ldiv_t28102C20329203D202825li2C2025li290A0A#:>

659:
old  <	; Initializer String %i >
new  <	; Initializer String ldiv_t(10, 3) = (%li, %li)\n\n>

660:
old  <	db "%i ", 0>
new  <	db "ldiv_t(10, 3) = (%li, %li)", 10, 10, 0>

664:
old  <string_0AB20List2023A20#:>
new  <string_0AA20List2013A20#:>

665:
old  <	; Initializer String \nB List 2: >
new  <	; Initializer String \nA List 1: >

666:
old  <	db 10, "B List 2: ", 0>
new  <	db 10, "A List 1: ", 0>

670:
old  <string_0AC20List2033A20#:>
new  <string_25i20#:>

671:
old  <	; Initializer String \nC List 3: >
new  <	; Initializer String %i >

672:
old  <	db 10, "C List 3: ", 0>
new  <	db "%i ", 0>

676:
old  <string_0A0ASearch3A0A#:>
new  <string_0AB20List2023A20#:>

677:
old  <	; Initializer String \n\nSearch:\n>
new  <	; Initializer String \nB List 2: >

678:
old  <	db 10, 10, "Search:", 10, 0>
new  <	db 10, "B List 2: ", 0>

682:
old  <string_20202825i2C2025i290A#:>
new  <string_0AC20List2033A20#:>

683:
old  <	; Initializer String   (%i, %i)\n>
new  <	; Initializer String \nC List 3: >

684:
old  <	db "  (%i, %i)", 10, 0>
new  <	db 10, "C List 3: ", 0>

688:
old  <string_0A#:>
new  <string_0A0ASearch3A0A#:>

689:
old  <	; Initializer String \n>
new  <	; Initializer String \n\nSearch:\n>

690:
old  <	db 10, 0>
new  <	db 10, 10, "Search:", 10, 0>

694:
old  <int8$4#:>
new  <string_20202825i2C2025i290A#:>

695:
old  <	; Initializer Pointer 4>
new  <	; Initializer String   (%i, %i)\n>

696:
old  <	dq 4>
new  <	db "  (%i, %i)", 10, 0>

698:
old  <section .text>
new  <section .data>

700:
old  < stdlib_test:>
new  <string_0A#:>

701:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Initializer String \n>

702:
old  <>
new  <	db 10, 0>

703:
old  < stdlib_test$1:>
new  <>

704:
old  <	; Parameter 56 pointer "atof("123.456") = %f\n">
new  <section .data>

705:
old  <	mov qword [rbp + 56], string_atof28221232E4562229203D2025f0A#>
new  <>

706:
old  <>
new  <int8$4#:>

707:
old  < stdlib_test$2:>
new  <	; Initializer Pointer 4>

708:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	dq 4>

710:
old  < stdlib_test$3:>
new  <section .text>

711:
old  <	; Parameter 88 pointer "123.456">
new  <>

712:
old  <	mov qword [rbp + 88], string_1232E456#>
new  < stdlib_test:>

713:
old  <>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

714:
old  < stdlib_test$4:>
new  <>

715:
old  <	; Call 64 atof 0>
new  < stdlib_test$1:>

716:
old  <	mov qword [rbp + 64], stdlib_test$5>
new  <	; Parameter 56 pointer "atof("123.456") = %f\n">

717:
old  <	mov [rbp + 72], rbp>
new  <	mov qword [rbp + 56], string_atof28221232E4562229203D2025f0A#>

718:
old  <	add rbp, 64>
new  <>

719:
old  <	jmp atof>
new  < stdlib_test$2:>

720:
old  <>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

721:
old  < stdlib_test$5:>
new  <>

722:
old  <	; PostCall 64>
new  < stdlib_test$3:>

723:
old  <>
new  <	; Parameter 88 pointer "123.456">

724:
old  < stdlib_test$6:>
new  <	mov qword [rbp + 88], string_1232E456#>

725:
old  <	; GetReturnValue Â£temporary4470>
new  <>

726:
old  <>
new  < stdlib_test$4:>

727:
old  < stdlib_test$7:>
new  <	; Call 64 atof 0>

728:
old  <	; Parameter 64 double Â£temporary4470>
new  <	mov qword [rbp + 64], stdlib_test$5>

729:
old  <	fstp qword [rbp + 64]>
new  <	mov [rbp + 72], rbp>

730:
old  <>
new  <	add rbp, 64>

731:
old  < stdlib_test$8:>
new  <	jmp atof>

732:
old  <	; Call 32 printf 8>
new  <>

733:
old  <	mov qword [rbp + 32], stdlib_test$9>
new  < stdlib_test$5:>

734:
old  <	mov [rbp + 40], rbp>
new  <	; PostCall 64>

735:
old  <	add rbp, 32>
new  <>

736:
old  <	mov rdi, rbp>
new  < stdlib_test$6:>

737:
old  <	add rdi, 8>
new  <	; GetReturnValue Â£temporary4464>

738:
old  <	jmp printf>
new  <>

739:
old  <>
new  < stdlib_test$7:>

740:
old  < stdlib_test$9:>
new  <	; Parameter 64 double Â£temporary4464>

741:
old  <	; PostCall 32>
new  <	fstp qword [rbp + 64]>

743:
old  < stdlib_test$10:>
new  < stdlib_test$8:>

744:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Call 32 printf 8>

745:
old  <>
new  <	mov qword [rbp + 32], stdlib_test$9>

746:
old  < stdlib_test$11:>
new  <	mov [rbp + 40], rbp>

747:
old  <	; Parameter 56 pointer "strtod("123.456789abc", &p) = (%f, %s)\n">
new  <	add rbp, 32>

748:
old  <	mov qword [rbp + 56], string_strtod28221232E456789abc222C2026p29203D202825f2C2025s290A#>
new  <	mov rdi, rbp>

749:
old  <>
new  <	add rdi, 8>

750:
old  < stdlib_test$12:>
new  <	jmp printf>

751:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

752:
old  <>
new  < stdlib_test$9:>

753:
old  < stdlib_test$13:>
new  <	; PostCall 32>

754:
old  <	; Parameter 88 pointer "123.456789abc">
new  <>

755:
old  <	mov qword [rbp + 88], string_1232E456789abc#>
new  < stdlib_test$10:>

756:
old  <>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

757:
old  < stdlib_test$14:>
new  <>

758:
old  <	; Address Â£temporary4472 p>
new  < stdlib_test$11:>

759:
old  <	mov rsi, rbp>
new  <	; Parameter 56 pointer "strtod("123.456789abc", &p) = (%f, %s)\n">

760:
old  <	add rsi, 24>
new  <	mov qword [rbp + 56], string_strtod28221232E456789abc222C2026p29203D202825f2C2025s290A#>

762:
old  < stdlib_test$15:>
new  < stdlib_test$12:>

763:
old  <	; Parameter 96 pointer Â£temporary4472>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

764:
old  <	mov [rbp + 96], rsi>
new  <>

765:
old  <>
new  < stdlib_test$13:>

766:
old  < stdlib_test$16:>
new  <	; Parameter 88 pointer "123.456789abc">

767:
old  <	; Call 64 strtod 0>
new  <	mov qword [rbp + 88], string_1232E456789abc#>

768:
old  <	mov qword [rbp + 64], stdlib_test$17>
new  <>

769:
old  <	mov [rbp + 72], rbp>
new  < stdlib_test$14:>

770:
old  <	add rbp, 64>
new  <	; Address Â£temporary4466 p>

771:
old  <	jmp strtod>
new  <	mov rsi, rbp>

772:
old  <>
new  <	add rsi, 24>

773:
old  < stdlib_test$17:>
new  <>

774:
old  <	; PostCall 64>
new  < stdlib_test$15:>

775:
old  <>
new  <	; Parameter 96 pointer Â£temporary4466>

776:
old  < stdlib_test$18:>
new  <	mov [rbp + 96], rsi>

777:
old  <	; GetReturnValue Â£temporary4473>
new  <>

778:
old  <>
new  < stdlib_test$16:>

779:
old  < stdlib_test$19:>
new  <	; Call 64 strtod 0>

780:
old  <	; Parameter 64 double Â£temporary4473>
new  <	mov qword [rbp + 64], stdlib_test$17>

781:
old  <	fstp qword [rbp + 64]>
new  <	mov [rbp + 72], rbp>

782:
old  <>
new  <	add rbp, 64>

783:
old  < stdlib_test$20:>
new  <	jmp strtod>

784:
old  <	; Parameter 72 pointer p>
new  <>

785:
old  <	mov rax, [rbp + 24]>
new  < stdlib_test$17:>

786:
old  <	mov [rbp + 72], rax>
new  <	; PostCall 64>

788:
old  < stdlib_test$21:>
new  < stdlib_test$18:>

789:
old  <	; Call 32 printf 16>
new  <	; GetReturnValue Â£temporary4467>

790:
old  <	mov qword [rbp + 32], stdlib_test$22>
new  <>

791:
old  <	mov [rbp + 40], rbp>
new  < stdlib_test$19:>

792:
old  <	add rbp, 32>
new  <	; Parameter 64 double Â£temporary4467>

793:
old  <	mov rdi, rbp>
new  <	fstp qword [rbp + 64]>

794:
old  <	add rdi, 16>
new  <>

795:
old  <	jmp printf>
new  < stdlib_test$20:>

796:
old  <>
new  <	; Parameter 72 pointer p>

797:
old  < stdlib_test$22:>
new  <	mov rax, [rbp + 24]>

798:
old  <	; PostCall 32>
new  <	mov [rbp + 72], rax>

800:
old  < stdlib_test$23:>
new  < stdlib_test$21:>

801:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Call 32 printf 16>

802:
old  <>
new  <	mov qword [rbp + 32], stdlib_test$22>

803:
old  < stdlib_test$24:>
new  <	mov [rbp + 40], rbp>

804:
old  <	; Parameter 48 pointer "\ngetenv("path") = %s\n">
new  <	add rbp, 32>

805:
old  <	mov qword [rbp + 48], string_0Agetenv2822path2229203D2025s0A#>
new  <	mov rdi, rbp>

806:
old  <>
new  <	add rdi, 16>

807:
old  < stdlib_test$25:>
new  <	jmp printf>

808:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

809:
old  <>
new  < stdlib_test$22:>

810:
old  < stdlib_test$26:>
new  <	; PostCall 32>

811:
old  <	; Parameter 80 pointer "path">
new  <>

812:
old  <	mov qword [rbp + 80], string_path#>
new  < stdlib_test$23:>

813:
old  <>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

814:
old  < stdlib_test$27:>
new  <>

815:
old  <	; Call 56 getenv 0>
new  < stdlib_test$24:>

816:
old  <	mov qword [rbp + 56], stdlib_test$28>
new  <	; Parameter 48 pointer "\ngetenv("path") = %s\n">

817:
old  <	mov [rbp + 64], rbp>
new  <	mov qword [rbp + 48], string_0Agetenv2822path2229203D2025s0A#>

818:
old  <	add rbp, 56>
new  <>

819:
old  <	jmp getenv>
new  < stdlib_test$25:>

820:
old  <>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

821:
old  < stdlib_test$28:>
new  <>

822:
old  <	; PostCall 56>
new  < stdlib_test$26:>

823:
old  <>
new  <	; Parameter 80 pointer "path">

824:
old  < stdlib_test$29:>
new  <	mov qword [rbp + 80], string_path#>

825:
old  <	; GetReturnValue Â£temporary4475>
new  <>

826:
old  <>
new  < stdlib_test$27:>

827:
old  < stdlib_test$30:>
new  <	; Call 56 getenv 0>

828:
old  <	; Parameter 56 pointer Â£temporary4475>
new  <	mov qword [rbp + 56], stdlib_test$28>

829:
old  <	mov [rbp + 56], rbx>
new  <	mov [rbp + 64], rbp>

830:
old  <>
new  <	add rbp, 56>

831:
old  < stdlib_test$31:>
new  <	jmp getenv>

832:
old  <	; Call 24 printf 8>
new  <>

833:
old  <	mov qword [rbp + 24], stdlib_test$32>
new  < stdlib_test$28:>

834:
old  <	mov [rbp + 32], rbp>
new  <	; PostCall 56>

835:
old  <	add rbp, 24>
new  <>

836:
old  <	mov rdi, rbp>
new  < stdlib_test$29:>

837:
old  <	add rdi, 8>
new  <	; GetReturnValue Â£temporary4469>

838:
old  <	jmp printf>
new  <>

839:
old  <>
new  < stdlib_test$30:>

840:
old  < stdlib_test$32:>
new  <	; Parameter 56 pointer Â£temporary4469>

841:
old  <	; PostCall 24>
new  <	mov [rbp + 56], rbx>

843:
old  < stdlib_test$33:>
new  < stdlib_test$31:>

844:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Call 24 printf 8>

845:
old  <>
new  <	mov qword [rbp + 24], stdlib_test$32>

846:
old  < stdlib_test$34:>
new  <	mov [rbp + 32], rbp>

847:
old  <	; Parameter 48 pointer "system("dir")\n">
new  <	add rbp, 24>

848:
old  <	mov qword [rbp + 48], string_system2822dir22290A#>
new  <	mov rdi, rbp>

849:
old  <>
new  <	add rdi, 8>

850:
old  < stdlib_test$35:>
new  <	jmp printf>

851:
old  <	; Call 24 printf 0>
new  <>

852:
old  <	mov qword [rbp + 24], stdlib_test$36>
new  < stdlib_test$32:>

853:
old  <	mov [rbp + 32], rbp>
new  <	; PostCall 24>

854:
old  <	add rbp, 24>
new  <>

855:
old  <	mov rdi, rbp>
new  < stdlib_test$33:>

856:
old  <	jmp printf>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

858:
old  < stdlib_test$36:>
new  < stdlib_test$34:>

859:
old  <	; PostCall 24>
new  <	; Parameter 48 pointer "system("dir")\n">

860:
old  <>
new  <	mov qword [rbp + 48], string_system2822dir22290A#>

861:
old  < stdlib_test$37:>
new  <>

862:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < stdlib_test$35:>

863:
old  <>
new  <	; Call 24 printf 0>

864:
old  < stdlib_test$38:>
new  <	mov qword [rbp + 24], stdlib_test$36>

865:
old  <	; Parameter 48 pointer "dir">
new  <	mov [rbp + 32], rbp>

866:
old  <	mov qword [rbp + 48], string_dir#>
new  <	add rbp, 24>

867:
old  <>
new  <	mov rdi, rbp>

868:
old  < stdlib_test$39:>
new  <	jmp printf>

869:
old  <	; Call 24 system 0>
new  <>

870:
old  <	mov qword [rbp + 24], stdlib_test$40>
new  < stdlib_test$36:>

871:
old  <	mov [rbp + 32], rbp>
new  <	; PostCall 24>

872:
old  <	add rbp, 24>
new  <>

873:
old  <	jmp system>
new  < stdlib_test$37:>

874:
old  <>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

875:
old  < stdlib_test$40:>
new  <>

876:
old  <	; PostCall 24>
new  < stdlib_test$38:>

877:
old  <>
new  <	; Parameter 48 pointer "dir">

878:
old  < stdlib_test$41:>
new  <	mov qword [rbp + 48], string_dir#>

879:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

880:
old  <>
new  < stdlib_test$39:>

881:
old  < stdlib_test$42:>
new  <	; Call 24 system 0>

882:
old  <	; Parameter 48 pointer "\nabs(-3) = %i, abs(3) = %i\n">
new  <	mov qword [rbp + 24], stdlib_test$40>

883:
old  <	mov qword [rbp + 48], string_0Aabs282D329203D2025i2C20abs28329203D2025i0A#>
new  <	mov [rbp + 32], rbp>

884:
old  <>
new  <	add rbp, 24>

885:
old  < stdlib_test$43:>
new  <	jmp system>

886:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

887:
old  <>
new  < stdlib_test$40:>

888:
old  < stdlib_test$44:>
new  <	; PostCall 24>

889:
old  <	; Parameter 80 signedint -3>
new  <>

890:
old  <	mov dword [rbp + 80], -3>
new  < stdlib_test$41:>

891:
old  <>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

892:
old  < stdlib_test$45:>
new  <>

893:
old  <	; Call 56 @abs 0>
new  < stdlib_test$42:>

894:
old  <	mov qword [rbp + 56], stdlib_test$46>
new  <	; Parameter 48 pointer "\nabs(-3) = %i, abs(3) = %i\n">

895:
old  <	mov [rbp + 64], rbp>
new  <	mov qword [rbp + 48], string_0Aabs282D329203D2025i2C20abs28329203D2025i0A#>

896:
old  <	add rbp, 56>
new  <>

897:
old  <	jmp @abs>
new  < stdlib_test$43:>

898:
old  <>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

899:
old  < stdlib_test$46:>
new  <>

900:
old  <	; PostCall 56>
new  < stdlib_test$44:>

901:
old  <>
new  <	; Parameter 80 signedint -3>

902:
old  < stdlib_test$47:>
new  <	mov dword [rbp + 80], -3>

903:
old  <	; GetReturnValue Â£temporary4479>
new  <>

904:
old  <>
new  < stdlib_test$45:>

905:
old  < stdlib_test$48:>
new  <	; Call 56 @abs 0>

906:
old  <	; Parameter 56 signedint Â£temporary4479>
new  <	mov qword [rbp + 56], stdlib_test$46>

907:
old  <	mov [rbp + 56], ebx>
new  <	mov [rbp + 64], rbp>

908:
old  <>
new  <	add rbp, 56>

909:
old  < stdlib_test$49:>
new  <	jmp @abs>

910:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

911:
old  <>
new  < stdlib_test$46:>

912:
old  < stdlib_test$50:>
new  <	; PostCall 56>

913:
old  <	; Parameter 84 signedint 3>
new  <>

914:
old  <	mov dword [rbp + 84], 3>
new  < stdlib_test$47:>

915:
old  <>
new  <	; GetReturnValue Â£temporary4473>

916:
old  < stdlib_test$51:>
new  <>

917:
old  <	; Call 60 @abs 0>
new  < stdlib_test$48:>

918:
old  <	mov qword [rbp + 60], stdlib_test$52>
new  <	; Parameter 56 signedint Â£temporary4473>

919:
old  <	mov [rbp + 68], rbp>
new  <	mov [rbp + 56], ebx>

920:
old  <	add rbp, 60>
new  <>

921:
old  <	jmp @abs>
new  < stdlib_test$49:>

922:
old  <>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

923:
old  < stdlib_test$52:>
new  <>

924:
old  <	; PostCall 60>
new  < stdlib_test$50:>

925:
old  <>
new  <	; Parameter 84 signedint 3>

926:
old  < stdlib_test$53:>
new  <	mov dword [rbp + 84], 3>

927:
old  <	; GetReturnValue Â£temporary4480>
new  <>

928:
old  <>
new  < stdlib_test$51:>

929:
old  < stdlib_test$54:>
new  <	; Call 60 @abs 0>

930:
old  <	; Parameter 60 signedint Â£temporary4480>
new  <	mov qword [rbp + 60], stdlib_test$52>

931:
old  <	mov [rbp + 60], ebx>
new  <	mov [rbp + 68], rbp>

932:
old  <>
new  <	add rbp, 60>

933:
old  < stdlib_test$55:>
new  <	jmp @abs>

934:
old  <	; Call 24 printf 8>
new  <>

935:
old  <	mov qword [rbp + 24], stdlib_test$56>
new  < stdlib_test$52:>

936:
old  <	mov [rbp + 32], rbp>
new  <	; PostCall 60>

937:
old  <	add rbp, 24>
new  <>

938:
old  <	mov rdi, rbp>
new  < stdlib_test$53:>

939:
old  <	add rdi, 8>
new  <	; GetReturnValue Â£temporary4474>

940:
old  <	jmp printf>
new  <>

941:
old  <>
new  < stdlib_test$54:>

942:
old  < stdlib_test$56:>
new  <	; Parameter 60 signedint Â£temporary4474>

943:
old  <	; PostCall 24>
new  <	mov [rbp + 60], ebx>

945:
old  < stdlib_test$57:>
new  < stdlib_test$55:>

946:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Call 24 printf 8>

947:
old  <>
new  <	mov qword [rbp + 24], stdlib_test$56>

948:
old  < stdlib_test$58:>
new  <	mov [rbp + 32], rbp>

949:
old  <	; Parameter 48 pointer "labs(-3l) = %li, labs(3l) = %li\n\n">
new  <	add rbp, 24>

950:
old  <	mov qword [rbp + 48], string_labs282D3l29203D2025li2C20labs283l29203D2025li0A0A#>
new  <	mov rdi, rbp>

951:
old  <>
new  <	add rdi, 8>

952:
old  < stdlib_test$59:>
new  <	jmp printf>

953:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

954:
old  <>
new  < stdlib_test$56:>

955:
old  < stdlib_test$60:>
new  <	; PostCall 24>

956:
old  <	; Parameter 80 signed long int -3>
new  <>

957:
old  <	mov qword [rbp + 80], -3>
new  < stdlib_test$57:>

958:
old  <>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

959:
old  < stdlib_test$61:>
new  <>

960:
old  <	; Call 56 labs 0>
new  < stdlib_test$58:>

961:
old  <	mov qword [rbp + 56], stdlib_test$62>
new  <	; Parameter 48 pointer "labs(-3l) = %li, labs(3l) = %li\n\n">

962:
old  <	mov [rbp + 64], rbp>
new  <	mov qword [rbp + 48], string_labs282D3l29203D2025li2C20labs283l29203D2025li0A0A#>

963:
old  <	add rbp, 56>
new  <>

964:
old  <	jmp labs>
new  < stdlib_test$59:>

965:
old  <>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

966:
old  < stdlib_test$62:>
new  <>

967:
old  <	; PostCall 56>
new  < stdlib_test$60:>

968:
old  <>
new  <	; Parameter 80 signed long int -3>

969:
old  < stdlib_test$63:>
new  <	mov qword [rbp + 80], -3>

970:
old  <	; GetReturnValue Â£temporary4482>
new  <>

971:
old  <>
new  < stdlib_test$61:>

972:
old  < stdlib_test$64:>
new  <	; Call 56 labs 0>

973:
old  <	; Parameter 56 signed long int Â£temporary4482>
new  <	mov qword [rbp + 56], stdlib_test$62>

974:
old  <	mov [rbp + 56], rbx>
new  <	mov [rbp + 64], rbp>

975:
old  <>
new  <	add rbp, 56>

976:
old  < stdlib_test$65:>
new  <	jmp labs>

977:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

978:
old  <>
new  < stdlib_test$62:>

979:
old  < stdlib_test$66:>
new  <	; PostCall 56>

980:
old  <	; Parameter 88 signed long int 3>
new  <>

981:
old  <	mov qword [rbp + 88], 3>
new  < stdlib_test$63:>

982:
old  <>
new  <	; GetReturnValue Â£temporary4476>

983:
old  < stdlib_test$67:>
new  <>

984:
old  <	; Call 64 labs 0>
new  < stdlib_test$64:>

985:
old  <	mov qword [rbp + 64], stdlib_test$68>
new  <	; Parameter 56 signed long int Â£temporary4476>

986:
old  <	mov [rbp + 72], rbp>
new  <	mov [rbp + 56], rbx>

987:
old  <	add rbp, 64>
new  <>

988:
old  <	jmp labs>
new  < stdlib_test$65:>

989:
old  <>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

990:
old  < stdlib_test$68:>
new  <>

991:
old  <	; PostCall 64>
new  < stdlib_test$66:>

992:
old  <>
new  <	; Parameter 88 signed long int 3>

993:
old  < stdlib_test$69:>
new  <	mov qword [rbp + 88], 3>

994:
old  <	; GetReturnValue Â£temporary4483>
new  <>

995:
old  <>
new  < stdlib_test$67:>

996:
old  < stdlib_test$70:>
new  <	; Call 64 labs 0>

997:
old  <	; Parameter 64 signed long int Â£temporary4483>
new  <	mov qword [rbp + 64], stdlib_test$68>

998:
old  <	mov [rbp + 64], rbx>
new  <	mov [rbp + 72], rbp>

999:
old  <>
new  <	add rbp, 64>

1000:
old  < stdlib_test$71:>
new  <	jmp labs>

1001:
old  <	; Call 24 printf 16>
new  <>

1002:
old  <	mov qword [rbp + 24], stdlib_test$72>
new  < stdlib_test$68:>

1003:
old  <	mov [rbp + 32], rbp>
new  <	; PostCall 64>

1004:
old  <	add rbp, 24>
new  <>

1005:
old  <	mov rdi, rbp>
new  < stdlib_test$69:>

1006:
old  <	add rdi, 16>
new  <	; GetReturnValue Â£temporary4477>

1007:
old  <	jmp printf>
new  <>

1008:
old  <>
new  < stdlib_test$70:>

1009:
old  < stdlib_test$72:>
new  <	; Parameter 64 signed long int Â£temporary4477>

1010:
old  <	; PostCall 24>
new  <	mov [rbp + 64], rbx>

1012:
old  < stdlib_test$73:>
new  < stdlib_test$71:>

1013:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Call 24 printf 16>

1014:
old  <>
new  <	mov qword [rbp + 24], stdlib_test$72>

1015:
old  < stdlib_test$74:>
new  <	mov [rbp + 32], rbp>

1016:
old  <	; Parameter 48 signedint 10>
new  <	add rbp, 24>

1017:
old  <	mov dword [rbp + 48], 10>
new  <	mov rdi, rbp>

1018:
old  <>
new  <	add rdi, 16>

1019:
old  < stdlib_test$75:>
new  <	jmp printf>

1020:
old  <	; Parameter 52 signedint 3>
new  <>

1021:
old  <	mov dword [rbp + 52], 3>
new  < stdlib_test$72:>

1022:
old  <>
new  <	; PostCall 24>

1023:
old  < stdlib_test$76:>
new  <>

1024:
old  <	; Call 24 div 0>
new  < stdlib_test$73:>

1025:
old  <	mov qword [rbp + 24], stdlib_test$77>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1026:
old  <	mov [rbp + 32], rbp>
new  <>

1027:
old  <	add rbp, 24>
new  < stdlib_test$74:>

1028:
old  <	jmp div>
new  <	; Parameter 48 signedint 10>

1029:
old  <>
new  <	mov dword [rbp + 48], 10>

1030:
old  < stdlib_test$77:>
new  <>

1031:
old  <	; PostCall 24>
new  < stdlib_test$75:>

1032:
old  <>
new  <	; Parameter 52 signedint 3>

1033:
old  < stdlib_test$78:>
new  <	mov dword [rbp + 52], 3>

1034:
old  <	; GetReturnValue Â£temporary4485 -> Â£temporary4486>
new  <>

1035:
old  <>
new  < stdlib_test$76:>

1036:
old  < stdlib_test$79:>
new  <	; Call 24 div 0>

1037:
old  <	; AssignInitSize i Â£temporary4485 -> Â£temporary4486>
new  <	mov qword [rbp + 24], stdlib_test$77>

1038:
old  <	mov rsi, rbp>
new  <	mov [rbp + 32], rbp>

1039:
old  <	add rsi, 24>
new  <	add rbp, 24>

1040:
old  <	mov al, 8>
new  <	jmp div>

1042:
old  < stdlib_test$80:>
new  < stdlib_test$77:>

1043:
old  <	; Assign i Â£temporary4485 -> Â£temporary4486>
new  <	; PostCall 24>

1044:
old  <	mov ah, [rbx]>
new  <>

1045:
old  <	mov [rsi], ah>
new  < stdlib_test$78:>

1046:
old  <	inc rbx>
new  <	; GetReturnValue Â£temporary4479 -> Â£temporary4480>

1047:
old  <	inc rsi>
new  <>

1048:
old  <	dec al>
new  < stdlib_test$79:>

1049:
old  <	cmp al, 0>
new  <	; AssignInitSize i Â£temporary4479 -> Â£temporary4480>

1050:
old  <	jne stdlib_test$80>
new  <	mov rsi, rbp>

1051:
old  <>
new  <	add rsi, 24>

1052:
old  < stdlib_test$81:>
new  <	mov al, 8>

1053:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1054:
old  <>
new  < stdlib_test$80:>

1055:
old  < stdlib_test$82:>
new  <	; Assign i Â£temporary4479 -> Â£temporary4480>

1056:
old  <	; Parameter 56 pointer "div_t(10, 3) = (%i, %i)\n">
new  <	mov ah, [rbx]>

1057:
old  <	mov qword [rbp + 56], string_div_t28102C20329203D202825i2C2025i290A#>
new  <	mov [rsi], ah>

1058:
old  <>
new  <	inc rbx>

1059:
old  < stdlib_test$83:>
new  <	inc rsi>

1060:
old  <	; Parameter 64 signedint i.quot>
new  <	dec al>

1061:
old  <	mov eax, [rbp + 24]>
new  <	cmp al, 0>

1062:
old  <	mov [rbp + 64], eax>
new  <	jne stdlib_test$80>

1064:
old  < stdlib_test$84:>
new  < stdlib_test$81:>

1065:
old  <	; Parameter 68 signedint i.rem>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1066:
old  <	mov eax, [rbp + 28]>
new  <>

1067:
old  <	mov [rbp + 68], eax>
new  < stdlib_test$82:>

1068:
old  <>
new  <	; Parameter 56 pointer "div_t(10, 3) = (%i, %i)\n">

1069:
old  < stdlib_test$85:>
new  <	mov qword [rbp + 56], string_div_t28102C20329203D202825i2C2025i290A#>

1070:
old  <	; Call 32 printf 8>
new  <>

1071:
old  <	mov qword [rbp + 32], stdlib_test$86>
new  < stdlib_test$83:>

1072:
old  <	mov [rbp + 40], rbp>
new  <	; Parameter 64 signedint i.quot>

1073:
old  <	add rbp, 32>
new  <	mov eax, [rbp + 24]>

1074:
old  <	mov rdi, rbp>
new  <	mov [rbp + 64], eax>

1075:
old  <	add rdi, 8>
new  <>

1076:
old  <	jmp printf>
new  < stdlib_test$84:>

1077:
old  <>
new  <	; Parameter 68 signedint i.rem>

1078:
old  < stdlib_test$86:>
new  <	mov eax, [rbp + 28]>

1079:
old  <	; PostCall 32>
new  <	mov [rbp + 68], eax>

1081:
old  < stdlib_test$87:>
new  < stdlib_test$85:>

1082:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Call 32 printf 8>

1083:
old  <>
new  <	mov qword [rbp + 32], stdlib_test$86>

1084:
old  < stdlib_test$88:>
new  <	mov [rbp + 40], rbp>

1085:
old  <	; ParameterInitSize 56 struct i>
new  <	add rbp, 32>

1086:
old  <	mov rsi, rbp>
new  <	mov rdi, rbp>

1087:
old  <	add rsi, 24>
new  <	add rdi, 8>

1088:
old  <	mov rdi, rbp>
new  <	jmp printf>

1089:
old  <	add rdi, 56>
new  <>

1090:
old  <	mov al, 8>
new  < stdlib_test$86:>

1091:
old  <>
new  <	; PostCall 32>

1092:
old  < stdlib_test$89:>
new  <>

1093:
old  <	; Parameter 56 struct i>
new  < stdlib_test$87:>

1094:
old  <	mov ah, [rsi]>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1095:
old  <	mov [rdi], ah>
new  <>

1096:
old  <	inc rsi>
new  < stdlib_test$88:>

1097:
old  <	inc rdi>
new  <	; ParameterInitSize 56 struct i>

1098:
old  <	dec al>
new  <	mov rsi, rbp>

1099:
old  <	cmp al, 0>
new  <	add rsi, 24>

1100:
old  <	jne stdlib_test$89>
new  <	mov rdi, rbp>

1101:
old  <>
new  <	add rdi, 56>

1102:
old  < stdlib_test$90:>
new  <	mov al, 8>

1103:
old  <	; Call 32 print_div 0>
new  <>

1104:
old  <	mov qword [rbp + 32], stdlib_test$91>
new  < stdlib_test$89:>

1105:
old  <	mov [rbp + 40], rbp>
new  <	; Parameter 56 struct i>

1106:
old  <	add rbp, 32>
new  <	mov ah, [rsi]>

1107:
old  <	jmp print_div>
new  <	mov [rdi], ah>

1108:
old  <>
new  <	inc rsi>

1109:
old  < stdlib_test$91:>
new  <	inc rdi>

1110:
old  <	; PostCall 32>
new  <	dec al>

1111:
old  <>
new  <	cmp al, 0>

1112:
old  < stdlib_test$92:>
new  <	jne stdlib_test$89>

1113:
old  <	; GetReturnValue Â£temporary4490 -> Â£temporary4491>
new  <>

1114:
old  <>
new  < stdlib_test$90:>

1115:
old  < stdlib_test$93:>
new  <	; Call 32 print_div 0>

1116:
old  <	; AssignInitSize j Â£temporary4490 -> Â£temporary4491>
new  <	mov qword [rbp + 32], stdlib_test$91>

1117:
old  <	mov rsi, rbp>
new  <	mov [rbp + 40], rbp>

1118:
old  <	add rsi, 32>
new  <	add rbp, 32>

1119:
old  <	mov al, 8>
new  <	jmp print_div>

1121:
old  < stdlib_test$94:>
new  < stdlib_test$91:>

1122:
old  <	; Assign j Â£temporary4490 -> Â£temporary4491>
new  <	; PostCall 32>

1123:
old  <	mov ah, [rbx]>
new  <>

1124:
old  <	mov [rsi], ah>
new  < stdlib_test$92:>

1125:
old  <	inc rbx>
new  <	; GetReturnValue Â£temporary4484 -> Â£temporary4485>

1126:
old  <	inc rsi>
new  <>

1127:
old  <	dec al>
new  < stdlib_test$93:>

1128:
old  <	cmp al, 0>
new  <	; AssignInitSize j Â£temporary4484 -> Â£temporary4485>

1129:
old  <	jne stdlib_test$94>
new  <	mov rsi, rbp>

1130:
old  <>
new  <	add rsi, 32>

1131:
old  < stdlib_test$95:>
new  <	mov al, 8>

1132:
old  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1133:
old  <>
new  < stdlib_test$94:>

1134:
old  < stdlib_test$96:>
new  <	; Assign j Â£temporary4484 -> Â£temporary4485>

1135:
old  <	; Parameter 64 pointer "div_t(10, 3) = (%i, %i)\n\n">
new  <	mov ah, [rbx]>

1136:
old  <	mov qword [rbp + 64], string_div_t28102C20329203D202825i2C2025i290A0A#>
new  <	mov [rsi], ah>

1137:
old  <>
new  <	inc rbx>

1138:
old  < stdlib_test$97:>
new  <	inc rsi>

1139:
old  <	; Parameter 72 signedint j.quot>
new  <	dec al>

1140:
old  <	mov eax, [rbp + 32]>
new  <	cmp al, 0>

1141:
old  <	mov [rbp + 72], eax>
new  <	jne stdlib_test$94>

1143:
old  < stdlib_test$98:>
new  < stdlib_test$95:>

1144:
old  <	; Parameter 76 signedint j.rem>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1145:
old  <	mov eax, [rbp + 36]>
new  <>

1146:
old  <	mov [rbp + 76], eax>
new  < stdlib_test$96:>

1147:
old  <>
new  <	; Parameter 64 pointer "div_t(10, 3) = (%i, %i)\n\n">

1148:
old  < stdlib_test$99:>
new  <	mov qword [rbp + 64], string_div_t28102C20329203D202825i2C2025i290A0A#>

1149:
old  <	; Call 40 printf 8>
new  <>

1150:
old  <	mov qword [rbp + 40], stdlib_test$100>
new  < stdlib_test$97:>

1151:
old  <	mov [rbp + 48], rbp>
new  <	; Parameter 72 signedint j.quot>

1152:
old  <	add rbp, 40>
new  <	mov eax, [rbp + 32]>

1153:
old  <	mov rdi, rbp>
new  <	mov [rbp + 72], eax>

1154:
old  <	add rdi, 8>
new  <>

1155:
old  <	jmp printf>
new  < stdlib_test$98:>

1156:
old  <>
new  <	; Parameter 76 signedint j.rem>

1157:
old  < stdlib_test$100:>
new  <	mov eax, [rbp + 36]>

1158:
old  <	; PostCall 40>
new  <	mov [rbp + 76], eax>

1160:
old  < stdlib_test$101:>
new  < stdlib_test$99:>

1161:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Call 40 printf 8>

1162:
old  <>
new  <	mov qword [rbp + 40], stdlib_test$100>

1163:
old  < stdlib_test$102:>
new  <	mov [rbp + 48], rbp>

1164:
old  <	; Parameter 48 signed long int 10>
new  <	add rbp, 40>

1165:
old  <	mov qword [rbp + 48], 10>
new  <	mov rdi, rbp>

1166:
old  <>
new  <	add rdi, 8>

1167:
old  < stdlib_test$103:>
new  <	jmp printf>

1168:
old  <	; Parameter 56 signed long int 3>
new  <>

1169:
old  <	mov qword [rbp + 56], 3>
new  < stdlib_test$100:>

1170:
old  <>
new  <	; PostCall 40>

1171:
old  < stdlib_test$104:>
new  <>

1172:
old  <	; Call 24 ldiv 0>
new  < stdlib_test$101:>

1173:
old  <	mov qword [rbp + 24], stdlib_test$105>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1174:
old  <	mov [rbp + 32], rbp>
new  <>

1175:
old  <	add rbp, 24>
new  < stdlib_test$102:>

1176:
old  <	jmp ldiv>
new  <	; Parameter 48 signed long int 10>

1177:
old  <>
new  <	mov qword [rbp + 48], 10>

1178:
old  < stdlib_test$105:>
new  <>

1179:
old  <	; PostCall 24>
new  < stdlib_test$103:>

1180:
old  <>
new  <	; Parameter 56 signed long int 3>

1181:
old  < stdlib_test$106:>
new  <	mov qword [rbp + 56], 3>

1182:
old  <	; GetReturnValue Â£temporary4495 -> Â£temporary4496>
new  <>

1183:
old  <>
new  < stdlib_test$104:>

1184:
old  < stdlib_test$107:>
new  <	; Call 24 ldiv 0>

1185:
old  <	; AssignInitSize li Â£temporary4495 -> Â£temporary4496>
new  <	mov qword [rbp + 24], stdlib_test$105>

1186:
old  <	mov rsi, rbp>
new  <	mov [rbp + 32], rbp>

1187:
old  <	add rsi, 24>
new  <	add rbp, 24>

1188:
old  <	mov al, 16>
new  <	jmp ldiv>

1190:
old  < stdlib_test$108:>
new  < stdlib_test$105:>

1191:
old  <	; Assign li Â£temporary4495 -> Â£temporary4496>
new  <	; PostCall 24>

1192:
old  <	mov ah, [rbx]>
new  <>

1193:
old  <	mov [rsi], ah>
new  < stdlib_test$106:>

1194:
old  <	inc rbx>
new  <	; GetReturnValue Â£temporary4489 -> Â£temporary4490>

1195:
old  <	inc rsi>
new  <>

1196:
old  <	dec al>
new  < stdlib_test$107:>

1197:
old  <	cmp al, 0>
new  <	; AssignInitSize li Â£temporary4489 -> Â£temporary4490>

1198:
old  <	jne stdlib_test$108>
new  <	mov rsi, rbp>

1199:
old  <>
new  <	add rsi, 24>

1200:
old  < stdlib_test$109:>
new  <	mov al, 16>

1201:
old  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1202:
old  <>
new  < stdlib_test$108:>

1203:
old  < stdlib_test$110:>
new  <	; Assign li Â£temporary4489 -> Â£temporary4490>

1204:
old  <	; Parameter 64 pointer "ldiv_t(10, 3) = (%li, %li)\n">
new  <	mov ah, [rbx]>

1205:
old  <	mov qword [rbp + 64], string_ldiv_t28102C20329203D202825li2C2025li290A#>
new  <	mov [rsi], ah>

1206:
old  <>
new  <	inc rbx>

1207:
old  < stdlib_test$111:>
new  <	inc rsi>

1208:
old  <	; Parameter 72 signed long int li.quot>
new  <	dec al>

1209:
old  <	mov rax, [rbp + 24]>
new  <	cmp al, 0>

1210:
old  <	mov [rbp + 72], rax>
new  <	jne stdlib_test$108>

1212:
old  < stdlib_test$112:>
new  < stdlib_test$109:>

1213:
old  <	; Parameter 80 signed long int li.rem>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1214:
old  <	mov rax, [rbp + 32]>
new  <>

1215:
old  <	mov [rbp + 80], rax>
new  < stdlib_test$110:>

1216:
old  <>
new  <	; Parameter 64 pointer "ldiv_t(10, 3) = (%li, %li)\n">

1217:
old  < stdlib_test$113:>
new  <	mov qword [rbp + 64], string_ldiv_t28102C20329203D202825li2C2025li290A#>

1218:
old  <	; Call 40 printf 16>
new  <>

1219:
old  <	mov qword [rbp + 40], stdlib_test$114>
new  < stdlib_test$111:>

1220:
old  <	mov [rbp + 48], rbp>
new  <	; Parameter 72 signed long int li.quot>

1221:
old  <	add rbp, 40>
new  <	mov rax, [rbp + 24]>

1222:
old  <	mov rdi, rbp>
new  <	mov [rbp + 72], rax>

1223:
old  <	add rdi, 16>
new  <>

1224:
old  <	jmp printf>
new  < stdlib_test$112:>

1225:
old  <>
new  <	; Parameter 80 signed long int li.rem>

1226:
old  < stdlib_test$114:>
new  <	mov rax, [rbp + 32]>

1227:
old  <	; PostCall 40>
new  <	mov [rbp + 80], rax>

1229:
old  < stdlib_test$115:>
new  < stdlib_test$113:>

1230:
old  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Call 40 printf 16>

1231:
old  <>
new  <	mov qword [rbp + 40], stdlib_test$114>

1232:
old  < stdlib_test$116:>
new  <	mov [rbp + 48], rbp>

1233:
old  <	; ParameterInitSize 64 struct li>
new  <	add rbp, 40>

1234:
old  <	mov rsi, rbp>
new  <	mov rdi, rbp>

1235:
old  <	add rsi, 24>
new  <	add rdi, 16>

1236:
old  <	mov rdi, rbp>
new  <	jmp printf>

1237:
old  <	add rdi, 64>
new  <>

1238:
old  <	mov al, 16>
new  < stdlib_test$114:>

1239:
old  <>
new  <	; PostCall 40>

1240:
old  < stdlib_test$117:>
new  <>

1241:
old  <	; Parameter 64 struct li>
new  < stdlib_test$115:>

1242:
old  <	mov ah, [rsi]>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1243:
old  <	mov [rdi], ah>
new  <>

1244:
old  <	inc rsi>
new  < stdlib_test$116:>

1245:
old  <	inc rdi>
new  <	; ParameterInitSize 64 struct li>

1246:
old  <	dec al>
new  <	mov rsi, rbp>

1247:
old  <	cmp al, 0>
new  <	add rsi, 24>

1248:
old  <	jne stdlib_test$117>
new  <	mov rdi, rbp>

1249:
old  <>
new  <	add rdi, 64>

1250:
old  < stdlib_test$118:>
new  <	mov al, 16>

1251:
old  <	; Call 40 print_ldiv 0>
new  <>

1252:
old  <	mov qword [rbp + 40], stdlib_test$119>
new  < stdlib_test$117:>

1253:
old  <	mov [rbp + 48], rbp>
new  <	; Parameter 64 struct li>

1254:
old  <	add rbp, 40>
new  <	mov ah, [rsi]>

1255:
old  <	jmp print_ldiv>
new  <	mov [rdi], ah>

1256:
old  <>
new  <	inc rsi>

1257:
old  < stdlib_test$119:>
new  <	inc rdi>

1258:
old  <	; PostCall 40>
new  <	dec al>

1259:
old  <>
new  <	cmp al, 0>

1260:
old  < stdlib_test$120:>
new  <	jne stdlib_test$117>

1261:
old  <	; GetReturnValue Â£temporary4500 -> Â£temporary4501>
new  <>

1262:
old  <>
new  < stdlib_test$118:>

1263:
old  < stdlib_test$121:>
new  <	; Call 40 print_ldiv 0>

1264:
old  <	; AssignInitSize lj Â£temporary4500 -> Â£temporary4501>
new  <	mov qword [rbp + 40], stdlib_test$119>

1265:
old  <	mov rsi, rbp>
new  <	mov [rbp + 48], rbp>

1266:
old  <	add rsi, 40>
new  <	add rbp, 40>

1267:
old  <	mov al, 16>
new  <	jmp print_ldiv>

1269:
old  < stdlib_test$122:>
new  < stdlib_test$119:>

1270:
old  <	; Assign lj Â£temporary4500 -> Â£temporary4501>
new  <	; PostCall 40>

1271:
old  <	mov ah, [rbx]>
new  <>

1272:
old  <	mov [rsi], ah>
new  < stdlib_test$120:>

1273:
old  <	inc rbx>
new  <	; GetReturnValue Â£temporary4494 -> Â£temporary4495>

1274:
old  <	inc rsi>
new  <>

1275:
old  <	dec al>
new  < stdlib_test$121:>

1276:
old  <	cmp al, 0>
new  <	; AssignInitSize lj Â£temporary4494 -> Â£temporary4495>

1277:
old  <	jne stdlib_test$122>
new  <	mov rsi, rbp>

1278:
old  <>
new  <	add rsi, 40>

1279:
old  < stdlib_test$123:>
new  <	mov al, 16>

1280:
old  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1281:
old  <>
new  < stdlib_test$122:>

1282:
old  < stdlib_test$124:>
new  <	; Assign lj Â£temporary4494 -> Â£temporary4495>

1283:
old  <	; Parameter 80 pointer "ldiv_t(10, 3) = (%li, %li)\n\n">
new  <	mov ah, [rbx]>

1284:
old  <	mov qword [rbp + 80], string_ldiv_t28102C20329203D202825li2C2025li290A0A#>
new  <	mov [rsi], ah>

1285:
old  <>
new  <	inc rbx>

1286:
old  < stdlib_test$125:>
new  <	inc rsi>

1287:
old  <	; Parameter 88 signed long int lj.quot>
new  <	dec al>

1288:
old  <	mov rax, [rbp + 40]>
new  <	cmp al, 0>

1289:
old  <	mov [rbp + 88], rax>
new  <	jne stdlib_test$122>

1291:
old  < stdlib_test$126:>
new  < stdlib_test$123:>

1292:
old  <	; Parameter 96 signed long int lj.rem>
new  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1293:
old  <	mov rax, [rbp + 48]>
new  <>

1294:
old  <	mov [rbp + 96], rax>
new  < stdlib_test$124:>

1295:
old  <>
new  <	; Parameter 80 pointer "ldiv_t(10, 3) = (%li, %li)\n\n">

1296:
old  < stdlib_test$127:>
new  <	mov qword [rbp + 80], string_ldiv_t28102C20329203D202825li2C2025li290A0A#>

1297:
old  <	; Call 56 printf 16>
new  <>

1298:
old  <	mov qword [rbp + 56], stdlib_test$128>
new  < stdlib_test$125:>

1299:
old  <	mov [rbp + 64], rbp>
new  <	; Parameter 88 signed long int lj.quot>

1300:
old  <	add rbp, 56>
new  <	mov rax, [rbp + 40]>

1301:
old  <	mov rdi, rbp>
new  <	mov [rbp + 88], rax>

1302:
old  <	add rdi, 16>
new  <>

1303:
old  <	jmp printf>
new  < stdlib_test$126:>

1304:
old  <>
new  <	; Parameter 96 signed long int lj.rem>

1305:
old  < stdlib_test$128:>
new  <	mov rax, [rbp + 48]>

1306:
old  <	; PostCall 56>
new  <	mov [rbp + 96], rax>

1308:
old  < stdlib_test$129:>
new  < stdlib_test$127:>

1309:
old  <	; Assign list[0] 3>
new  <	; Call 56 printf 16>

1310:
old  <	mov dword [rbp + 24], 3>
new  <	mov qword [rbp + 56], stdlib_test$128>

1311:
old  <>
new  <	mov [rbp + 64], rbp>

1312:
old  < stdlib_test$130:>
new  <	add rbp, 56>

1313:
old  <	; Assign list[1] 4>
new  <	mov rdi, rbp>

1314:
old  <	mov dword [rbp + 28], 4>
new  <	add rdi, 16>

1315:
old  <>
new  <	jmp printf>

1316:
old  < stdlib_test$131:>
new  <>

1317:
old  <	; Assign list[2] 2>
new  < stdlib_test$128:>

1318:
old  <	mov dword [rbp + 32], 2>
new  <	; PostCall 56>

1320:
old  < stdlib_test$132:>
new  < stdlib_test$129:>

1321:
old  <	; Assign list[3] 1>
new  <	; Assign list[0] 3>

1322:
old  <	mov dword [rbp + 36], 1>
new  <	mov dword [rbp + 24], 3>

1324:
old  < stdlib_test$133:>
new  < stdlib_test$130:>

1325:
old  <	; Assign size 4>
new  <	; Assign list[1] 4>

1326:
old  <	mov dword [rbp + 40], 4>
new  <	mov dword [rbp + 28], 4>

1328:
old  < stdlib_test$134:>
new  < stdlib_test$131:>

1329:
old  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Assign list[2] 2>

1330:
old  <>
new  <	mov dword [rbp + 32], 2>

1331:
old  < stdlib_test$135:>
new  <>

1332:
old  <	; Parameter 72 pointer "\nA List 1: ">
new  < stdlib_test$132:>

1333:
old  <	mov qword [rbp + 72], string_0AA20List2013A20#>
new  <	; Assign list[3] 1>

1334:
old  <>
new  <	mov dword [rbp + 36], 1>

1335:
old  < stdlib_test$136:>
new  <>

1336:
old  <	; Call 48 printf 0>
new  < stdlib_test$133:>

1337:
old  <	mov qword [rbp + 48], stdlib_test$137>
new  <	; Assign size 4>

1338:
old  <	mov [rbp + 56], rbp>
new  <	mov dword [rbp + 40], 4>

1339:
old  <	add rbp, 48>
new  <>

1340:
old  <	mov rdi, rbp>
new  < stdlib_test$134:>

1341:
old  <	jmp printf>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1343:
old  < stdlib_test$137:>
new  < stdlib_test$135:>

1344:
old  <	; PostCall 48>
new  <	; Parameter 72 pointer "\nA List 1: ">

1345:
old  <>
new  <	mov qword [rbp + 72], string_0AA20List2013A20#>

1346:
old  < stdlib_test$138:>
new  <>

1347:
old  <	; Assign index 0>
new  < stdlib_test$136:>

1348:
old  <	mov dword [rbp + 44], 0>
new  <	; Call 48 printf 0>

1349:
old  <>
new  <	mov qword [rbp + 48], stdlib_test$137>

1350:
old  < stdlib_test$139:>
new  <	mov [rbp + 56], rbp>

1351:
old  <	; SignedGreaterThanEqual 151 index size>
new  <	add rbp, 48>

1352:
old  <	mov eax, [rbp + 40]>
new  <	mov rdi, rbp>

1353:
old  <	cmp [rbp + 44], eax>
new  <	jmp printf>

1354:
old  <	jge stdlib_test$151>
new  <>

1355:
old  <>
new  < stdlib_test$137:>

1356:
old  < stdlib_test$140:>
new  <	; PostCall 48>

1357:
old  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1358:
old  <>
new  < stdlib_test$138:>

1359:
old  < stdlib_test$141:>
new  <	; Assign index 0>

1360:
old  <	; Parameter 72 pointer "%i ">
new  <	mov dword [rbp + 44], 0>

1361:
old  <	mov qword [rbp + 72], string_25i20#>
new  <>

1362:
old  <>
new  < stdlib_test$139:>

1363:
old  < stdlib_test$142:>
new  <	; SignedGreaterThanEqual 151 index size>

1364:
old  <	; IntegralToIntegral Â£temporary4513 index>
new  <	mov eax, [rbp + 40]>

1365:
old  <	mov eax, [rbp + 44]>
new  <	cmp [rbp + 44], eax>

1366:
old  <	mov rbx, 4294967295>
new  <	jge stdlib_test$151>

1367:
old  <	and rax, rbx>
new  <>

1368:
old  <>
new  < stdlib_test$140:>

1369:
old  < stdlib_test$143:>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1370:
old  <	; UnsignedMultiply Â£temporary4515 Â£temporary4513 4>
new  <>

1371:
old  <	xor rdx, rdx>
new  < stdlib_test$141:>

1372:
old  <	mul qword [int8$4#]>
new  <	; Parameter 72 pointer "%i ">

1373:
old  <>
new  <	mov qword [rbp + 72], string_25i20#>

1374:
old  < stdlib_test$144:>
new  <>

1375:
old  <	; BinaryAdd Â£temporary4514 list Â£temporary4515>
new  < stdlib_test$142:>

1376:
old  <	mov rsi, rbp>
new  <	; IntegralToIntegral Â£temporary4507 index>

1377:
old  <	add rsi, 24>
new  <	mov eax, [rbp + 44]>

1378:
old  <	add rsi, rax>
new  <	mov rbx, 4294967295>

1379:
old  <>
new  <	and rax, rbx>

1380:
old  < stdlib_test$145:>
new  <>

1381:
old  <	; Dereference Â£temporary4516 -> Â£temporary4514 Â£temporary4514 0>
new  < stdlib_test$143:>

1382:
old  <>
new  <	; UnsignedMultiply Â£temporary4509 Â£temporary4507 4>

1383:
old  < stdlib_test$146:>
new  <	xor rdx, rdx>

1384:
old  <	; Parameter 80 signedint Â£temporary4516 -> Â£temporary4514>
new  <	mul qword [int8$4#]>

1385:
old  <	mov eax, [rsi]>
new  <>

1386:
old  <	mov [rbp + 80], eax>
new  < stdlib_test$144:>

1387:
old  <>
new  <	; BinaryAdd Â£temporary4508 list Â£temporary4509>

1388:
old  < stdlib_test$147:>
new  <	mov rsi, rbp>

1389:
old  <	; Call 48 printf 4>
new  <	add rsi, 24>

1390:
old  <	mov qword [rbp + 48], stdlib_test$148>
new  <	add rsi, rax>

1391:
old  <	mov [rbp + 56], rbp>
new  <>

1392:
old  <	add rbp, 48>
new  < stdlib_test$145:>

1393:
old  <	mov rdi, rbp>
new  <	; Dereference Â£temporary4510 -> Â£temporary4508 Â£temporary4508 0>

1394:
old  <	add rdi, 4>
new  <>

1395:
old  <	jmp printf>
new  < stdlib_test$146:>

1396:
old  <>
new  <	; Parameter 80 signedint Â£temporary4510 -> Â£temporary4508>

1397:
old  < stdlib_test$148:>
new  <	mov eax, [rsi]>

1398:
old  <	; PostCall 48>
new  <	mov [rbp + 80], eax>

1400:
old  < stdlib_test$149:>
new  < stdlib_test$147:>

1401:
old  <	; BinaryAdd index index 1>
new  <	; Call 48 printf 4>

1402:
old  <	inc dword [rbp + 44]>
new  <	mov qword [rbp + 48], stdlib_test$148>

1403:
old  <>
new  <	mov [rbp + 56], rbp>

1404:
old  < stdlib_test$150:>
new  <	add rbp, 48>

1405:
old  <	; Goto 139>
new  <	mov rdi, rbp>

1406:
old  <	jmp stdlib_test$139>
new  <	add rdi, 4>

1407:
old  <>
new  <	jmp printf>

1408:
old  < stdlib_test$151:>
new  <>

1409:
old  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < stdlib_test$148:>

1410:
old  <>
new  <	; PostCall 48>

1411:
old  < stdlib_test$152:>
new  <>

1412:
old  <	; Parameter 72 pointer "\nB List 2: ">
new  < stdlib_test$149:>

1413:
old  <	mov qword [rbp + 72], string_0AB20List2023A20#>
new  <	; BinaryAdd index index 1>

1414:
old  <>
new  <	inc dword [rbp + 44]>

1415:
old  < stdlib_test$153:>
new  <>

1416:
old  <	; Call 48 printf 0>
new  < stdlib_test$150:>

1417:
old  <	mov qword [rbp + 48], stdlib_test$154>
new  <	; Goto 139>

1418:
old  <	mov [rbp + 56], rbp>
new  <	jmp stdlib_test$139>

1419:
old  <	add rbp, 48>
new  <>

1420:
old  <	mov rdi, rbp>
new  < stdlib_test$151:>

1421:
old  <	jmp printf>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1423:
old  < stdlib_test$154:>
new  < stdlib_test$152:>

1424:
old  <	; PostCall 48>
new  <	; Parameter 72 pointer "\nB List 2: ">

1425:
old  <>
new  <	mov qword [rbp + 72], string_0AB20List2023A20#>

1426:
old  < stdlib_test$155:>
new  <>

1427:
old  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < stdlib_test$153:>

1428:
old  <>
new  <	; Call 48 printf 0>

1429:
old  < stdlib_test$156:>
new  <	mov qword [rbp + 48], stdlib_test$154>

1430:
old  <	; Parameter 72 pointer list>
new  <	mov [rbp + 56], rbp>

1431:
old  <	mov [rbp + 72], rbp>
new  <	add rbp, 48>

1432:
old  <	add qword [rbp + 72], 24>
new  <	mov rdi, rbp>

1433:
old  <>
new  <	jmp printf>

1434:
old  < stdlib_test$157:>
new  <>

1435:
old  <	; Parameter 80 signedint size>
new  < stdlib_test$154:>

1436:
old  <	mov eax, [rbp + 40]>
new  <	; PostCall 48>

1437:
old  <	mov [rbp + 80], eax>
new  <>

1438:
old  <>
new  < stdlib_test$155:>

1439:
old  < stdlib_test$158:>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1440:
old  <	; Parameter 84 signedint 4>
new  <>

1441:
old  <	mov dword [rbp + 84], 4>
new  < stdlib_test$156:>

1442:
old  <>
new  <	; Parameter 72 pointer list>

1443:
old  < stdlib_test$159:>
new  <	mov [rbp + 72], rbp>

1444:
old  <	; Parameter 88 pointer compare>
new  <	add qword [rbp + 72], 24>

1445:
old  <	mov qword [rbp + 88], compare>
new  <>

1446:
old  <>
new  < stdlib_test$157:>

1447:
old  < stdlib_test$160:>
new  <	; Parameter 80 signedint size>

1448:
old  <	; Call 48 qsort 0>
new  <	mov eax, [rbp + 40]>

1449:
old  <	mov qword [rbp + 48], stdlib_test$161>
new  <	mov [rbp + 80], eax>

1450:
old  <	mov [rbp + 56], rbp>
new  <>

1451:
old  <	add rbp, 48>
new  < stdlib_test$158:>

1452:
old  <	jmp qsort>
new  <	; Parameter 84 signedint 4>

1453:
old  <>
new  <	mov dword [rbp + 84], 4>

1454:
old  < stdlib_test$161:>
new  <>

1455:
old  <	; PostCall 48>
new  < stdlib_test$159:>

1456:
old  <>
new  <	; Parameter 88 pointer compare>

1457:
old  < stdlib_test$162:>
new  <	mov qword [rbp + 88], compare>

1458:
old  <	; Assign index 0>
new  <>

1459:
old  <	mov dword [rbp + 44], 0>
new  < stdlib_test$160:>

1460:
old  <>
new  <	; Call 48 qsort 0>

1461:
old  < stdlib_test$163:>
new  <	mov qword [rbp + 48], stdlib_test$161>

1462:
old  <	; SignedGreaterThanEqual 175 index size>
new  <	mov [rbp + 56], rbp>

1463:
old  <	mov eax, [rbp + 40]>
new  <	add rbp, 48>

1464:
old  <	cmp [rbp + 44], eax>
new  <	jmp qsort>

1465:
old  <	jge stdlib_test$175>
new  <>

1466:
old  <>
new  < stdlib_test$161:>

1467:
old  < stdlib_test$164:>
new  <	; PostCall 48>

1468:
old  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1469:
old  <>
new  < stdlib_test$162:>

1470:
old  < stdlib_test$165:>
new  <	; Assign index 0>

1471:
old  <	; Parameter 72 pointer "%i ">
new  <	mov dword [rbp + 44], 0>

1472:
old  <	mov qword [rbp + 72], string_25i20#>
new  <>

1473:
old  <>
new  < stdlib_test$163:>

1474:
old  < stdlib_test$166:>
new  <	; SignedGreaterThanEqual 175 index size>

1475:
old  <	; IntegralToIntegral Â£temporary4523 index>
new  <	mov eax, [rbp + 40]>

1476:
old  <	mov eax, [rbp + 44]>
new  <	cmp [rbp + 44], eax>

1477:
old  <	mov rbx, 4294967295>
new  <	jge stdlib_test$175>

1478:
old  <	and rax, rbx>
new  <>

1479:
old  <>
new  < stdlib_test$164:>

1480:
old  < stdlib_test$167:>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1481:
old  <	; UnsignedMultiply Â£temporary4525 Â£temporary4523 4>
new  <>

1482:
old  <	xor rdx, rdx>
new  < stdlib_test$165:>

1483:
old  <	mul qword [int8$4#]>
new  <	; Parameter 72 pointer "%i ">

1484:
old  <>
new  <	mov qword [rbp + 72], string_25i20#>

1485:
old  < stdlib_test$168:>
new  <>

1486:
old  <	; BinaryAdd Â£temporary4524 list Â£temporary4525>
new  < stdlib_test$166:>

1487:
old  <	mov rsi, rbp>
new  <	; IntegralToIntegral Â£temporary4517 index>

1488:
old  <	add rsi, 24>
new  <	mov eax, [rbp + 44]>

1489:
old  <	add rsi, rax>
new  <	mov rbx, 4294967295>

1490:
old  <>
new  <	and rax, rbx>

1491:
old  < stdlib_test$169:>
new  <>

1492:
old  <	; Dereference Â£temporary4526 -> Â£temporary4524 Â£temporary4524 0>
new  < stdlib_test$167:>

1493:
old  <>
new  <	; UnsignedMultiply Â£temporary4519 Â£temporary4517 4>

1494:
old  < stdlib_test$170:>
new  <	xor rdx, rdx>

1495:
old  <	; Parameter 80 signedint Â£temporary4526 -> Â£temporary4524>
new  <	mul qword [int8$4#]>

1496:
old  <	mov eax, [rsi]>
new  <>

1497:
old  <	mov [rbp + 80], eax>
new  < stdlib_test$168:>

1498:
old  <>
new  <	; BinaryAdd Â£temporary4518 list Â£temporary4519>

1499:
old  < stdlib_test$171:>
new  <	mov rsi, rbp>

1500:
old  <	; Call 48 printf 4>
new  <	add rsi, 24>

1501:
old  <	mov qword [rbp + 48], stdlib_test$172>
new  <	add rsi, rax>

1502:
old  <	mov [rbp + 56], rbp>
new  <>

1503:
old  <	add rbp, 48>
new  < stdlib_test$169:>

1504:
old  <	mov rdi, rbp>
new  <	; Dereference Â£temporary4520 -> Â£temporary4518 Â£temporary4518 0>

1505:
old  <	add rdi, 4>
new  <>

1506:
old  <	jmp printf>
new  < stdlib_test$170:>

1507:
old  <>
new  <	; Parameter 80 signedint Â£temporary4520 -> Â£temporary4518>

1508:
old  < stdlib_test$172:>
new  <	mov eax, [rsi]>

1509:
old  <	; PostCall 48>
new  <	mov [rbp + 80], eax>

1511:
old  < stdlib_test$173:>
new  < stdlib_test$171:>

1512:
old  <	; BinaryAdd index index 1>
new  <	; Call 48 printf 4>

1513:
old  <	inc dword [rbp + 44]>
new  <	mov qword [rbp + 48], stdlib_test$172>

1514:
old  <>
new  <	mov [rbp + 56], rbp>

1515:
old  < stdlib_test$174:>
new  <	add rbp, 48>

1516:
old  <	; Goto 163>
new  <	mov rdi, rbp>

1517:
old  <	jmp stdlib_test$163>
new  <	add rdi, 4>

1518:
old  <>
new  <	jmp printf>

1519:
old  < stdlib_test$175:>
new  <>

1520:
old  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < stdlib_test$172:>

1521:
old  <>
new  <	; PostCall 48>

1522:
old  < stdlib_test$176:>
new  <>

1523:
old  <	; Parameter 72 pointer "\nC List 3: ">
new  < stdlib_test$173:>

1524:
old  <	mov qword [rbp + 72], string_0AC20List2033A20#>
new  <	; BinaryAdd index index 1>

1525:
old  <>
new  <	inc dword [rbp + 44]>

1526:
old  < stdlib_test$177:>
new  <>

1527:
old  <	; Call 48 printf 0>
new  < stdlib_test$174:>

1528:
old  <	mov qword [rbp + 48], stdlib_test$178>
new  <	; Goto 163>

1529:
old  <	mov [rbp + 56], rbp>
new  <	jmp stdlib_test$163>

1530:
old  <	add rbp, 48>
new  <>

1531:
old  <	mov rdi, rbp>
new  < stdlib_test$175:>

1532:
old  <	jmp printf>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1534:
old  < stdlib_test$178:>
new  < stdlib_test$176:>

1535:
old  <	; PostCall 48>
new  <	; Parameter 72 pointer "\nC List 3: ">

1536:
old  <>
new  <	mov qword [rbp + 72], string_0AC20List2033A20#>

1537:
old  < stdlib_test$179:>
new  <>

1538:
old  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < stdlib_test$177:>

1539:
old  <>
new  <	; Call 48 printf 0>

1540:
old  < stdlib_test$180:>
new  <	mov qword [rbp + 48], stdlib_test$178>

1541:
old  <	; Parameter 72 pointer list>
new  <	mov [rbp + 56], rbp>

1542:
old  <	mov [rbp + 72], rbp>
new  <	add rbp, 48>

1543:
old  <	add qword [rbp + 72], 24>
new  <	mov rdi, rbp>

1544:
old  <>
new  <	jmp printf>

1545:
old  < stdlib_test$181:>
new  <>

1546:
old  <	; Parameter 80 signedint size>
new  < stdlib_test$178:>

1547:
old  <	mov eax, [rbp + 40]>
new  <	; PostCall 48>

1548:
old  <	mov [rbp + 80], eax>
new  <>

1549:
old  <>
new  < stdlib_test$179:>

1550:
old  < stdlib_test$182:>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1551:
old  <	; Parameter 84 signedint 4>
new  <>

1552:
old  <	mov dword [rbp + 84], 4>
new  < stdlib_test$180:>

1553:
old  <>
new  <	; Parameter 72 pointer list>

1554:
old  < stdlib_test$183:>
new  <	mov [rbp + 72], rbp>

1555:
old  <	; Parameter 88 pointer reverse_compare>
new  <	add qword [rbp + 72], 24>

1556:
old  <	mov qword [rbp + 88], reverse_compare>
new  <>

1557:
old  <>
new  < stdlib_test$181:>

1558:
old  < stdlib_test$184:>
new  <	; Parameter 80 signedint size>

1559:
old  <	; Call 48 qsort 0>
new  <	mov eax, [rbp + 40]>

1560:
old  <	mov qword [rbp + 48], stdlib_test$185>
new  <	mov [rbp + 80], eax>

1561:
old  <	mov [rbp + 56], rbp>
new  <>

1562:
old  <	add rbp, 48>
new  < stdlib_test$182:>

1563:
old  <	jmp qsort>
new  <	; Parameter 84 signedint 4>

1564:
old  <>
new  <	mov dword [rbp + 84], 4>

1565:
old  < stdlib_test$185:>
new  <>

1566:
old  <	; PostCall 48>
new  < stdlib_test$183:>

1567:
old  <>
new  <	; Parameter 88 pointer reverse_compare>

1568:
old  < stdlib_test$186:>
new  <	mov qword [rbp + 88], reverse_compare>

1569:
old  <	; Assign index 0>
new  <>

1570:
old  <	mov dword [rbp + 44], 0>
new  < stdlib_test$184:>

1571:
old  <>
new  <	; Call 48 qsort 0>

1572:
old  < stdlib_test$187:>
new  <	mov qword [rbp + 48], stdlib_test$185>

1573:
old  <	; SignedGreaterThanEqual 199 index size>
new  <	mov [rbp + 56], rbp>

1574:
old  <	mov eax, [rbp + 40]>
new  <	add rbp, 48>

1575:
old  <	cmp [rbp + 44], eax>
new  <	jmp qsort>

1576:
old  <	jge stdlib_test$199>
new  <>

1577:
old  <>
new  < stdlib_test$185:>

1578:
old  < stdlib_test$188:>
new  <	; PostCall 48>

1579:
old  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1580:
old  <>
new  < stdlib_test$186:>

1581:
old  < stdlib_test$189:>
new  <	; Assign index 0>

1582:
old  <	; Parameter 72 pointer "%i ">
new  <	mov dword [rbp + 44], 0>

1583:
old  <	mov qword [rbp + 72], string_25i20#>
new  <>

1584:
old  <>
new  < stdlib_test$187:>

1585:
old  < stdlib_test$190:>
new  <	; SignedGreaterThanEqual 199 index size>

1586:
old  <	; IntegralToIntegral Â£temporary4533 index>
new  <	mov eax, [rbp + 40]>

1587:
old  <	mov eax, [rbp + 44]>
new  <	cmp [rbp + 44], eax>

1588:
old  <	mov rbx, 4294967295>
new  <	jge stdlib_test$199>

1589:
old  <	and rax, rbx>
new  <>

1590:
old  <>
new  < stdlib_test$188:>

1591:
old  < stdlib_test$191:>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1592:
old  <	; UnsignedMultiply Â£temporary4535 Â£temporary4533 4>
new  <>

1593:
old  <	xor rdx, rdx>
new  < stdlib_test$189:>

1594:
old  <	mul qword [int8$4#]>
new  <	; Parameter 72 pointer "%i ">

1595:
old  <>
new  <	mov qword [rbp + 72], string_25i20#>

1596:
old  < stdlib_test$192:>
new  <>

1597:
old  <	; BinaryAdd Â£temporary4534 list Â£temporary4535>
new  < stdlib_test$190:>

1598:
old  <	mov rsi, rbp>
new  <	; IntegralToIntegral Â£temporary4527 index>

1599:
old  <	add rsi, 24>
new  <	mov eax, [rbp + 44]>

1600:
old  <	add rsi, rax>
new  <	mov rbx, 4294967295>

1601:
old  <>
new  <	and rax, rbx>

1602:
old  < stdlib_test$193:>
new  <>

1603:
old  <	; Dereference Â£temporary4536 -> Â£temporary4534 Â£temporary4534 0>
new  < stdlib_test$191:>

1604:
old  <>
new  <	; UnsignedMultiply Â£temporary4529 Â£temporary4527 4>

1605:
old  < stdlib_test$194:>
new  <	xor rdx, rdx>

1606:
old  <	; Parameter 80 signedint Â£temporary4536 -> Â£temporary4534>
new  <	mul qword [int8$4#]>

1607:
old  <	mov eax, [rsi]>
new  <>

1608:
old  <	mov [rbp + 80], eax>
new  < stdlib_test$192:>

1609:
old  <>
new  <	; BinaryAdd Â£temporary4528 list Â£temporary4529>

1610:
old  < stdlib_test$195:>
new  <	mov rsi, rbp>

1611:
old  <	; Call 48 printf 4>
new  <	add rsi, 24>

1612:
old  <	mov qword [rbp + 48], stdlib_test$196>
new  <	add rsi, rax>

1613:
old  <	mov [rbp + 56], rbp>
new  <>

1614:
old  <	add rbp, 48>
new  < stdlib_test$193:>

1615:
old  <	mov rdi, rbp>
new  <	; Dereference Â£temporary4530 -> Â£temporary4528 Â£temporary4528 0>

1616:
old  <	add rdi, 4>
new  <>

1617:
old  <	jmp printf>
new  < stdlib_test$194:>

1618:
old  <>
new  <	; Parameter 80 signedint Â£temporary4530 -> Â£temporary4528>

1619:
old  < stdlib_test$196:>
new  <	mov eax, [rsi]>

1620:
old  <	; PostCall 48>
new  <	mov [rbp + 80], eax>

1622:
old  < stdlib_test$197:>
new  < stdlib_test$195:>

1623:
old  <	; BinaryAdd index index 1>
new  <	; Call 48 printf 4>

1624:
old  <	inc dword [rbp + 44]>
new  <	mov qword [rbp + 48], stdlib_test$196>

1625:
old  <>
new  <	mov [rbp + 56], rbp>

1626:
old  < stdlib_test$198:>
new  <	add rbp, 48>

1627:
old  <	; Goto 187>
new  <	mov rdi, rbp>

1628:
old  <	jmp stdlib_test$187>
new  <	add rdi, 4>

1629:
old  <>
new  <	jmp printf>

1630:
old  < stdlib_test$199:>
new  <>

1631:
old  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < stdlib_test$196:>

1632:
old  <>
new  <	; PostCall 48>

1633:
old  < stdlib_test$200:>
new  <>

1634:
old  <	; Parameter 72 pointer "\n\nSearch:\n">
new  < stdlib_test$197:>

1635:
old  <	mov qword [rbp + 72], string_0A0ASearch3A0A#>
new  <	; BinaryAdd index index 1>

1636:
old  <>
new  <	inc dword [rbp + 44]>

1637:
old  < stdlib_test$201:>
new  <>

1638:
old  <	; Call 48 printf 0>
new  < stdlib_test$198:>

1639:
old  <	mov qword [rbp + 48], stdlib_test$202>
new  <	; Goto 187>

1640:
old  <	mov [rbp + 56], rbp>
new  <	jmp stdlib_test$187>

1641:
old  <	add rbp, 48>
new  <>

1642:
old  <	mov rdi, rbp>
new  < stdlib_test$199:>

1643:
old  <	jmp printf>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1645:
old  < stdlib_test$202:>
new  < stdlib_test$200:>

1646:
old  <	; PostCall 48>
new  <	; Parameter 72 pointer "\n\nSearch:\n">

1647:
old  <>
new  <	mov qword [rbp + 72], string_0A0ASearch3A0A#>

1648:
old  < stdlib_test$203:>
new  <>

1649:
old  <	; Assign key 0>
new  < stdlib_test$201:>

1650:
old  <	mov dword [rbp + 44], 0>
new  <	; Call 48 printf 0>

1651:
old  <>
new  <	mov qword [rbp + 48], stdlib_test$202>

1652:
old  < stdlib_test$204:>
new  <	mov [rbp + 56], rbp>

1653:
old  <	; SignedGreaterThanEqual 232 key 6>
new  <	add rbp, 48>

1654:
old  <	cmp dword [rbp + 44], 6>
new  <	mov rdi, rbp>

1655:
old  <	jge stdlib_test$232>
new  <	jmp printf>

1657:
old  < stdlib_test$205:>
new  < stdlib_test$202:>

1658:
old  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; PostCall 48>

1660:
old  < stdlib_test$206:>
new  < stdlib_test$203:>

1661:
old  <	; Address Â£temporary4541 key>
new  <	; Assign key 0>

1662:
old  <	mov rsi, rbp>
new  <	mov dword [rbp + 44], 0>

1663:
old  <	add rsi, 44>
new  <>

1664:
old  <>
new  < stdlib_test$204:>

1665:
old  < stdlib_test$207:>
new  <	; SignedGreaterThanEqual 232 key 6>

1666:
old  <	; Parameter 72 pointer Â£temporary4541>
new  <	cmp dword [rbp + 44], 6>

1667:
old  <	mov [rbp + 72], rsi>
new  <	jge stdlib_test$232>

1669:
old  < stdlib_test$208:>
new  < stdlib_test$205:>

1670:
old  <	; Parameter 80 pointer list>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1671:
old  <	mov [rbp + 80], rbp>
new  <>

1672:
old  <	add qword [rbp + 80], 24>
new  < stdlib_test$206:>

1673:
old  <>
new  <	; Address Â£temporary4535 key>

1674:
old  < stdlib_test$209:>
new  <	mov rsi, rbp>

1675:
old  <	; Parameter 88 signedint size>
new  <	add rsi, 44>

1676:
old  <	mov eax, [rbp + 40]>
new  <>

1677:
old  <	mov [rbp + 88], eax>
new  < stdlib_test$207:>

1678:
old  <>
new  <	; Parameter 72 pointer Â£temporary4535>

1679:
old  < stdlib_test$210:>
new  <	mov [rbp + 72], rsi>

1680:
old  <	; Parameter 92 signedint 4>
new  <>

1681:
old  <	mov dword [rbp + 92], 4>
new  < stdlib_test$208:>

1682:
old  <>
new  <	; Parameter 80 pointer list>

1683:
old  < stdlib_test$211:>
new  <	mov [rbp + 80], rbp>

1684:
old  <	; Parameter 96 pointer compare>
new  <	add qword [rbp + 80], 24>

1685:
old  <	mov qword [rbp + 96], compare>
new  <>

1686:
old  <>
new  < stdlib_test$209:>

1687:
old  < stdlib_test$212:>
new  <	; Parameter 88 signedint size>

1688:
old  <	; Call 48 bsearch 0>
new  <	mov eax, [rbp + 40]>

1689:
old  <	mov qword [rbp + 48], stdlib_test$213>
new  <	mov [rbp + 88], eax>

1690:
old  <	mov [rbp + 56], rbp>
new  <>

1691:
old  <	add rbp, 48>
new  < stdlib_test$210:>

1692:
old  <	jmp bsearch>
new  <	; Parameter 92 signedint 4>

1693:
old  <>
new  <	mov dword [rbp + 92], 4>

1694:
old  < stdlib_test$213:>
new  <>

1695:
old  <	; PostCall 48>
new  < stdlib_test$211:>

1696:
old  <>
new  <	; Parameter 96 pointer compare>

1697:
old  < stdlib_test$214:>
new  <	mov qword [rbp + 96], compare>

1698:
old  <	; GetReturnValue Â£temporary4543>
new  <>

1699:
old  <>
new  < stdlib_test$212:>

1700:
old  < stdlib_test$215:>
new  <	; Call 48 bsearch 0>

1701:
old  <	; IntegralToIntegral Â£temporary4544 Â£temporary4543>
new  <	mov qword [rbp + 48], stdlib_test$213>

1702:
old  <>
new  <	mov [rbp + 56], rbp>

1703:
old  < stdlib_test$216:>
new  <	add rbp, 48>

1704:
old  <	; Assign p Â£temporary4544>
new  <	jmp bsearch>

1705:
old  <	mov [rbp + 48], rbx>
new  <>

1706:
old  <>
new  < stdlib_test$213:>

1707:
old  < stdlib_test$217:>
new  <	; PostCall 48>

1708:
old  <	; Equal 222 p 0>
new  <>

1709:
old  <	cmp qword [rbp + 48], 0>
new  < stdlib_test$214:>

1710:
old  <	je stdlib_test$222>
new  <	; GetReturnValue Â£temporary4537>

1712:
old  < stdlib_test$218:>
new  < stdlib_test$215:>

1713:
old  <	; BinarySubtract Â£temporary4547 p list>
new  <	; IntegralToIntegral Â£temporary4538 Â£temporary4537>

1714:
old  <	mov rax, [rbp + 48]>
new  <>

1715:
old  <	mov rbx, rbp>
new  < stdlib_test$216:>

1716:
old  <	add rbx, 24>
new  <	; Assign p Â£temporary4538>

1717:
old  <	sub rax, rbx>
new  <	mov [rbp + 48], rbx>

1719:
old  < stdlib_test$219:>
new  < stdlib_test$217:>

1720:
old  <	; UnsignedDivide Â£temporary4546 Â£temporary4547 4>
new  <	; Equal 222 p 0>

1721:
old  <	xor rdx, rdx>
new  <	cmp qword [rbp + 48], 0>

1722:
old  <	div qword [int8$4#]>
new  <	je stdlib_test$222>

1724:
old  < stdlib_test$220:>
new  < stdlib_test$218:>

1725:
old  <	; IntegralToIntegral Â£temporary4549 Â£temporary4546>
new  <	; BinarySubtract Â£temporary4541 p list>

1726:
old  <>
new  <	mov rax, [rbp + 48]>

1727:
old  < stdlib_test$221:>
new  <	mov rbx, rbp>

1728:
old  <	; Goto 223>
new  <	add rbx, 24>

1729:
old  <	jmp stdlib_test$223>
new  <	sub rax, rbx>

1731:
old  < stdlib_test$222:>
new  < stdlib_test$219:>

1732:
old  <	; Assign Â£temporary4549 -1>
new  <	; UnsignedDivide Â£temporary4540 Â£temporary4541 4>

1733:
old  <	mov eax, -1>
new  <	xor rdx, rdx>

1734:
old  <>
new  <	div qword [int8$4#]>

1735:
old  < stdlib_test$223:>
new  <>

1736:
old  <	; Assign index Â£temporary4549>
new  < stdlib_test$220:>

1737:
old  <	mov [rbp + 56], eax>
new  <	; IntegralToIntegral Â£temporary4543 Â£temporary4540>

1739:
old  < stdlib_test$224:>
new  < stdlib_test$221:>

1740:
old  <	; PreCall 60 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Goto 223>

1741:
old  <>
new  <	jmp stdlib_test$223>

1742:
old  < stdlib_test$225:>
new  <>

1743:
old  <	; Parameter 84 pointer "  (%i, %i)\n">
new  < stdlib_test$222:>

1744:
old  <	mov qword [rbp + 84], string_20202825i2C2025i290A#>
new  <	; Assign Â£temporary4543 -1>

1745:
old  <>
new  <	mov eax, -1>

1746:
old  < stdlib_test$226:>
new  <>

1747:
old  <	; Parameter 92 signedint key>
new  < stdlib_test$223:>

1748:
old  <	mov eax, [rbp + 44]>
new  <	; Assign index Â£temporary4543>

1749:
old  <	mov [rbp + 92], eax>
new  <	mov [rbp + 56], eax>

1751:
old  < stdlib_test$227:>
new  < stdlib_test$224:>

1752:
old  <	; Parameter 96 signedint index>
new  <	; PreCall 60 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1753:
old  <	mov eax, [rbp + 56]>
new  <>

1754:
old  <	mov [rbp + 96], eax>
new  < stdlib_test$225:>

1755:
old  <>
new  <	; Parameter 84 pointer "  (%i, %i)\n">

1756:
old  < stdlib_test$228:>
new  <	mov qword [rbp + 84], string_20202825i2C2025i290A#>

1757:
old  <	; Call 60 printf 8>
new  <>

1758:
old  <	mov qword [rbp + 60], stdlib_test$229>
new  < stdlib_test$226:>

1759:
old  <	mov [rbp + 68], rbp>
new  <	; Parameter 92 signedint key>

1760:
old  <	add rbp, 60>
new  <	mov eax, [rbp + 44]>

1761:
old  <	mov rdi, rbp>
new  <	mov [rbp + 92], eax>

1762:
old  <	add rdi, 8>
new  <>

1763:
old  <	jmp printf>
new  < stdlib_test$227:>

1764:
old  <>
new  <	; Parameter 96 signedint index>

1765:
old  < stdlib_test$229:>
new  <	mov eax, [rbp + 56]>

1766:
old  <	; PostCall 60>
new  <	mov [rbp + 96], eax>

1768:
old  < stdlib_test$230:>
new  < stdlib_test$228:>

1769:
old  <	; BinaryAdd key key 1>
new  <	; Call 60 printf 8>

1770:
old  <	inc dword [rbp + 44]>
new  <	mov qword [rbp + 60], stdlib_test$229>

1771:
old  <>
new  <	mov [rbp + 68], rbp>

1772:
old  < stdlib_test$231:>
new  <	add rbp, 60>

1773:
old  <	; Goto 204>
new  <	mov rdi, rbp>

1774:
old  <	jmp stdlib_test$204>
new  <	add rdi, 8>

1775:
old  <>
new  <	jmp printf>

1776:
old  < stdlib_test$232:>
new  <>

1777:
old  <	; PreCall 44 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < stdlib_test$229:>

1778:
old  <>
new  <	; PostCall 60>

1779:
old  < stdlib_test$233:>
new  <>

1780:
old  <	; Parameter 68 pointer "\n">
new  < stdlib_test$230:>

1781:
old  <	mov qword [rbp + 68], string_0A#>
new  <	; BinaryAdd key key 1>

1782:
old  <>
new  <	inc dword [rbp + 44]>

1783:
old  < stdlib_test$234:>
new  <>

1784:
old  <	; Call 44 printf 0>
new  < stdlib_test$231:>

1785:
old  <	mov qword [rbp + 44], stdlib_test$235>
new  <	; Goto 204>

1786:
old  <	mov [rbp + 52], rbp>
new  <	jmp stdlib_test$204>

1787:
old  <	add rbp, 44>
new  <>

1788:
old  <	mov rdi, rbp>
new  < stdlib_test$232:>

1789:
old  <	jmp printf>
new  <	; PreCall 44 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1791:
old  < stdlib_test$235:>
new  < stdlib_test$233:>

1792:
old  <	; PostCall 44>
new  <	; Parameter 68 pointer "\n">

1793:
old  <>
new  <	mov qword [rbp + 68], string_0A#>

1794:
old  < stdlib_test$236:>
new  <>

1795:
old  <	; Return>
new  < stdlib_test$234:>

1796:
old  <	mov rax, [rbp]>
new  <	; Call 44 printf 0>

1797:
old  <	mov rdi, [rbp + 16]>
new  <	mov qword [rbp + 44], stdlib_test$235>

1798:
old  <	mov rbp, [rbp + 8]>
new  <	mov [rbp + 52], rbp>

1799:
old  <	jmp rax>
new  <	add rbp, 44>

1800:
old  <>
new  <	mov rdi, rbp>

1801:
old  < stdlib_test$237:>
new  <	jmp printf>

1802:
old  <	; FunctionEnd stdlib_test>
new  <>

TimeTest.asm
154:
old  <	; GetReturnValue Â£temporary4573>
new  <	; GetReturnValue Â£temporary4567>

157:
old  <	; Assign now1 Â£temporary4573>
new  <	; Assign now1 Â£temporary4567>

164:
old  <	; Address Â£temporary4574 now1>
new  <	; Address Â£temporary4568 now1>

169:
old  <	; Parameter 112 pointer Â£temporary4574>
new  <	; Parameter 112 pointer Â£temporary4568>

183:
old  <	; GetReturnValue Â£temporary4575>
new  <	; GetReturnValue Â£temporary4569>

186:
old  <	; Dereference Â£temporary4576 -> Â£temporary4575 Â£temporary4575 0>
new  <	; Dereference Â£temporary4570 -> Â£temporary4569 Â£temporary4569 0>

189:
old  <	; AssignInitSize s Â£temporary4576 -> Â£temporary4575>
new  <	; AssignInitSize s Â£temporary4570 -> Â£temporary4569>

195:
old  <	; Assign s Â£temporary4576 -> Â£temporary4575>
new  <	; Assign s Â£temporary4570 -> Â£temporary4569>

208:
old  <	; Address Â£temporary4577 now1>
new  <	; Address Â£temporary4571 now1>

213:
old  <	; Parameter 148 pointer Â£temporary4577>
new  <	; Parameter 148 pointer Â£temporary4571>

227:
old  <	; GetReturnValue Â£temporary4578>
new  <	; GetReturnValue Â£temporary4572>

230:
old  <	; Dereference Â£temporary4579 -> Â£temporary4578 Â£temporary4578 0>
new  <	; Dereference Â£temporary4573 -> Â£temporary4572 Â£temporary4572 0>

233:
old  <	; AssignInitSize t Â£temporary4579 -> Â£temporary4578>
new  <	; AssignInitSize t Â£temporary4573 -> Â£temporary4572>

239:
old  <	; Assign t Â£temporary4579 -> Â£temporary4578>
new  <	; Assign t Â£temporary4573 -> Â£temporary4572>

252:
old  <	; Address Â£temporary4580 s>
new  <	; Address Â£temporary4574 s>

257:
old  <	; Parameter 184 pointer Â£temporary4580>
new  <	; Parameter 184 pointer Â£temporary4574>

271:
old  <	; GetReturnValue Â£temporary4581>
new  <	; GetReturnValue Â£temporary4575>

274:
old  <	; Assign now2 Â£temporary4581>
new  <	; Assign now2 Â£temporary4575>

333:
old  <	; IntegralToIntegral Â£temporary4586 s.tm_wday>
new  <	; IntegralToIntegral Â£temporary4580 s.tm_wday>

339:
old  <	; UnsignedMultiply Â£temporary4587 Â£temporary4586 8>
new  <	; UnsignedMultiply Â£temporary4581 Â£temporary4580 8>

344:
old  <	; BinaryAdd Â£temporary4588 weekdays Â£temporary4587>
new  <	; BinaryAdd Â£temporary4582 weekdays Â£temporary4581>

350:
old  <	; Dereference Â£temporary4585 -> Â£temporary4588 Â£temporary4588 0>
new  <	; Dereference Â£temporary4579 -> Â£temporary4582 Â£temporary4582 0>

353:
old  <	; Parameter 200 pointer Â£temporary4585 -> Â£temporary4588>
new  <	; Parameter 200 pointer Â£temporary4579 -> Â£temporary4582>

358:
old  <	; BinaryAdd Â£temporary4590 s.tm_year 1900>
new  <	; BinaryAdd Â£temporary4584 s.tm_year 1900>

363:
old  <	; Parameter 208 signedint Â£temporary4590>
new  <	; Parameter 208 signedint Â£temporary4584>

367:
old  <	; BinaryAdd Â£temporary4592 s.tm_mon 1>
new  <	; BinaryAdd Â£temporary4586 s.tm_mon 1>

372:
old  <	; Parameter 212 signedint Â£temporary4592>
new  <	; Parameter 212 signedint Â£temporary4586>

430:
old  <	; IntegralToIntegral Â£temporary4603 t.tm_wday>
new  <	; IntegralToIntegral Â£temporary4597 t.tm_wday>

436:
old  <	; UnsignedMultiply Â£temporary4604 Â£temporary4603 8>
new  <	; UnsignedMultiply Â£temporary4598 Â£temporary4597 8>

441:
old  <	; BinaryAdd Â£temporary4605 weekdays Â£temporary4604>
new  <	; BinaryAdd Â£temporary4599 weekdays Â£temporary4598>

447:
old  <	; Dereference Â£temporary4602 -> Â£temporary4605 Â£temporary4605 0>
new  <	; Dereference Â£temporary4596 -> Â£temporary4599 Â£temporary4599 0>

450:
old  <	; Parameter 200 pointer Â£temporary4602 -> Â£temporary4605>
new  <	; Parameter 200 pointer Â£temporary4596 -> Â£temporary4599>

455:
old  <	; BinaryAdd Â£temporary4607 t.tm_year 1900>
new  <	; BinaryAdd Â£temporary4601 t.tm_year 1900>

460:
old  <	; Parameter 208 signedint Â£temporary4607>
new  <	; Parameter 208 signedint Â£temporary4601>

464:
old  <	; BinaryAdd Â£temporary4609 t.tm_mon 1>
new  <	; BinaryAdd Â£temporary4603 t.tm_mon 1>

469:
old  <	; Parameter 212 signedint Â£temporary4609>
new  <	; Parameter 212 signedint Â£temporary4603>

531:
old  <	; Address Â£temporary4618 s>
new  <	; Address Â£temporary4612 s>

536:
old  <	; Parameter 728 pointer Â£temporary4618>
new  <	; Parameter 728 pointer Â£temporary4612>

550:
old  <	; GetReturnValue Â£temporary4619>
new  <	; GetReturnValue Â£temporary4613>

553:
old  <	; Parameter 704 pointer Â£temporary4619>
new  <	; Parameter 704 pointer Â£temporary4613>

578:
old  <	; Address Â£temporary4621 now1>
new  <	; Address Â£temporary4615 now1>

583:
old  <	; Parameter 728 pointer Â£temporary4621>
new  <	; Parameter 728 pointer Â£temporary4615>

597:
old  <	; GetReturnValue Â£temporary4622>
new  <	; GetReturnValue Â£temporary4616>

600:
old  <	; Parameter 704 pointer Â£temporary4622>
new  <	; Parameter 704 pointer Â£temporary4616>

659:
old  <	; Address Â£temporary4625 t>
new  <	; Address Â£temporary4619 t>

664:
old  <	; Parameter 716 pointer Â£temporary4625>
new  <	; Parameter 716 pointer Â£temporary4619>

678:
old  <	; GetReturnValue Â£temporary4626>
new  <	; GetReturnValue Â£temporary4620>

681:
old  <	; Assign i Â£temporary4626>
new  <	; Assign i Â£temporary4620>

715:
old  <	; GetReturnValue Â£temporary4627>
new  <	; GetReturnValue Â£temporary4621>

718:
old  <	; Parameter 708 signedint Â£temporary4627>
new  <	; Parameter 708 signedint Â£temporary4621>

