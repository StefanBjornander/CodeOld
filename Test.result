11:
old  <	global main>
new  <	global mainm>

12:
old  <	global main3>
new  <	global maina>

13:
old  <	global mains2>
new  <	global main>

14:
old  <	global char_main>
new  <	global main3>

15:
old  <	global assert_test>
new  <	global mains2>

16:
old  <	global assert_test2>
new  <	global char_main>

17:
old  <>
new  <	global assert_test>

18:
old  <	extern file_test>
new  <	global assert_test2>

19:
old  <	extern printf>
new  <>

20:
old  <	extern stdout>
new  <	extern file_test>

21:
old  <	extern g_outDevice>
new  <	extern printf>

22:
old  <	extern printChar>
new  <	extern stdout>

23:
old  <	extern scanf>
new  <	extern g_outDevice>

24:
old  <	extern limits_test>
new  <	extern printChar>

25:
old  <	extern time_test>
new  <	extern scanf>

26:
old  <	extern malloc_test>
new  <	extern limits_test>

27:
old  <	extern setjmp_test>
new  <	extern time_test>

28:
old  <	extern mktime>
new  <	extern malloc_test>

29:
old  <	extern character_test>
new  <	extern setjmp_test>

30:
old  <	extern stderr>
new  <	extern main_math>

31:
old  <	extern fprintf>
new  <	extern stderr>

32:
old  <	extern abort>
new  <	extern fprintf>

33:
old  <	global _start>
new  <	extern abort>

34:
old  <	global $StackTop>
new  <	extern mktime>

35:
old  <>
new  <	extern character_test>

36:
old  <>
new  <	global _start>

37:
old  <section .text>
new  <	global $StackTop>

39:
old  < @334$malloc:>
new  <>

40:
old  <	; Return 0>
new  <section .text>

41:
old  <	mov rbx, 0>
new  <>

42:
old  <	mov rax, [rbp]>
new  < @334$malloc:>

43:
old  <	mov rdi, [rbp + 16]>
new  <	; Return 0>

44:
old  <	mov rbp, [rbp + 8]>
new  <	mov rbx, 0>

45:
old  <	jmp rax>
new  <	mov rax, [rbp]>

46:
old  <>
new  <	mov rdi, [rbp + 16]>

47:
old  < @334$malloc$1:>
new  <	mov rbp, [rbp + 8]>

48:
old  <	; FunctionEnd malloc>
new  <	jmp rax>

50:
old  <section .data>
new  < @334$malloc$1:>

51:
old  <>
new  <	; FunctionEnd malloc>

52:
old  <a:>
new  <>

53:
old  <	; InitializerZero 16>
new  <section .data>

54:
old  <	times 16 db 0>
new  <>

55:
old  <>
new  <a:>

56:
old  <section .data>
new  <	; InitializerZero 16>

57:
old  <>
new  <	times 16 db 0>

58:
old  <string_test12Etxt#:>
new  <>

59:
old  <	; Initializer String test1.txt>
new  <section .data>

60:
old  <	db "test1.txt", 0>
new  <>

61:
old  <>
new  <string_test12Etxt#:>

62:
old  <section .data>
new  <	; Initializer String test1.txt>

63:
old  <>
new  <	db "test1.txt", 0>

64:
old  <string_test22Etxt#:>
new  <>

65:
old  <	; Initializer String test2.txt>
new  <section .data>

66:
old  <	db "test2.txt", 0>
new  <>

67:
old  <>
new  <string_test22Etxt#:>

68:
old  <section .text>
new  <	; Initializer String test2.txt>

69:
old  <>
new  <	db "test2.txt", 0>

70:
old  < main2:>
new  <>

71:
old  <	; Empty>
new  <section .text>

73:
old  < main2$1:>
new  < main2:>

77:
old  < main2$2:>
new  < main2$1:>

81:
old  < main2$3:>
new  < main2$2:>

84:
old  < main2$4:>
new  < main2$3:>

88:
old  < main2$5:>
new  < main2$4:>

92:
old  < main2$6:>
new  < main2$5:>

94:
old  <	mov qword [rbp + 24], main2$7>
new  <	mov qword [rbp + 24], main2$6>

99:
old  < main2$7:>
new  < main2$6:>

102:
old  < main2$8:>
new  < main2$7:>

109:
old  < main2$9:>
new  < main2$8:>

291:
old  <	; Empty>
new  <	; PreCall 25 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

294:
old  <	; PreCall 25 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter pointer "Please write a character: " 49>

295:
old  <>
new  <	mov qword [rbp + 49], string_Please20write20a20character3A20#>

296:
old  < mainc$2:>
new  <>

297:
old  <	; Parameter pointer "Please write a character: " 49>
new  < mainc$2:>

298:
old  <	mov qword [rbp + 49], string_Please20write20a20character3A20#>
new  <	; Call printf 25 0>

299:
old  <>
new  <	mov qword [rbp + 25], mainc$3>

300:
old  < mainc$3:>
new  <	mov [rbp + 33], rbp>

301:
old  <	; Call printf 25 0>
new  <	add rbp, 25>

302:
old  <	mov qword [rbp + 25], mainc$4>
new  <	mov rdi, rbp>

303:
old  <	mov [rbp + 33], rbp>
new  <	jmp printf>

304:
old  <	add rbp, 25>
new  <>

305:
old  <	mov rdi, rbp>
new  < mainc$3:>

306:
old  <	jmp printf>
new  <	; PostCall 25>

309:
old  <	; PostCall 25>
new  <	; PreCall 25 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

312:
old  <	; PreCall 25 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter pointer "%c" 49>

313:
old  <>
new  <	mov qword [rbp + 49], string_25c#>

314:
old  < mainc$6:>
new  <>

315:
old  <	; Parameter pointer "%c" 49>
new  < mainc$6:>

316:
old  <	mov qword [rbp + 49], string_25c#>
new  <	; Address Â£temporary19 c>

317:
old  <>
new  <	mov rsi, rbp>

318:
old  < mainc$7:>
new  <	add rsi, 24>

319:
old  <	; Address Â£temporary19 c>
new  <>

320:
old  <	mov rsi, rbp>
new  < mainc$7:>

321:
old  <	add rsi, 24>
new  <	; Parameter pointer Â£temporary19 57>

322:
old  <>
new  <	mov [rbp + 57], rsi>

323:
old  < mainc$8:>
new  <>

324:
old  <	; Parameter pointer Â£temporary19 57>
new  < mainc$8:>

325:
old  <	mov [rbp + 57], rsi>
new  <	; Call scanf 25 8>

326:
old  <>
new  <	mov qword [rbp + 25], mainc$9>

327:
old  < mainc$9:>
new  <	mov [rbp + 33], rbp>

328:
old  <	; Call scanf 25 8>
new  <	add rbp, 25>

329:
old  <	mov qword [rbp + 25], mainc$10>
new  <	mov rdi, rbp>

330:
old  <	mov [rbp + 33], rbp>
new  <	add rdi, 8>

331:
old  <	add rbp, 25>
new  <	jmp scanf>

332:
old  <	mov rdi, rbp>
new  <>

333:
old  <	add rdi, 8>
new  < mainc$9:>

334:
old  <	jmp scanf>
new  <	; PostCall 25>

337:
old  <	; PostCall 25>
new  <	; PreCall 25 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

340:
old  <	; PreCall 25 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter pointer "You wrote the character '%c'.\n" 49>

341:
old  <>
new  <	mov qword [rbp + 49], string_You20wrote20the20character202725c272E0A#>

342:
old  < mainc$12:>
new  <>

343:
old  <	; Parameter pointer "You wrote the character '%c'.\n" 49>
new  < mainc$12:>

344:
old  <	mov qword [rbp + 49], string_You20wrote20the20character202725c272E0A#>
new  <	; IntegralToIntegral Â£temporary21 c>

345:
old  <>
new  <	mov al, [rbp + 24]>

346:
old  < mainc$13:>
new  <	and eax, 255>

347:
old  <	; IntegralToIntegral Â£temporary21 c>
new  <	cmp al, 0>

348:
old  <	mov al, [rbp + 24]>
new  <	jge mainc$13>

349:
old  <	and eax, 255>
new  <	neg al>

350:
old  <	cmp al, 0>
new  <	neg eax>

351:
old  <	jge mainc$14>
new  <>

352:
old  <	neg al>
new  < mainc$13:>

353:
old  <	neg eax>
new  <	; Parameter signedint Â£temporary21 57>

354:
old  <>
new  <	mov [rbp + 57], eax>

355:
old  < mainc$14:>
new  <>

356:
old  <	; Parameter signedint Â£temporary21 57>
new  < mainc$14:>

357:
old  <	mov [rbp + 57], eax>
new  <	; Call printf 25 4>

358:
old  <>
new  <	mov qword [rbp + 25], mainc$15>

359:
old  < mainc$15:>
new  <	mov [rbp + 33], rbp>

360:
old  <	; Call printf 25 4>
new  <	add rbp, 25>

361:
old  <	mov qword [rbp + 25], mainc$16>
new  <	mov rdi, rbp>

362:
old  <	mov [rbp + 33], rbp>
new  <	add rdi, 4>

363:
old  <	add rbp, 25>
new  <	jmp printf>

364:
old  <	mov rdi, rbp>
new  <>

365:
old  <	add rdi, 4>
new  < mainc$15:>

366:
old  <	jmp printf>
new  <	; PostCall 25>

369:
old  <	; PostCall 25>
new  <	; Return>

370:
old  <>
new  <	mov rax, [rbp]>

371:
old  < mainc$17:>
new  <	mov rdi, [rbp + 16]>

372:
old  <	; Return>
new  <	mov rbp, [rbp + 8]>

373:
old  <	mov rax, [rbp]>
new  <	jmp rax>

374:
old  <	mov rdi, [rbp + 16]>
new  <>

375:
old  <	mov rbp, [rbp + 8]>
new  < mainc$17:>

376:
old  <	jmp rax>
new  <	; FunctionEnd mainc>

378:
old  < mainc$18:>
new  <section .data>

379:
old  <	; FunctionEnd mainc>
new  <>

380:
old  <>
new  <string_Please20write20an20integer3A20#:>

381:
old  <section .data>
new  <	; Initializer String Please write an integer: >

382:
old  <>
new  <	db "Please write an integer: ", 0>

383:
old  <string_Please20write20an20integer3A20#:>
new  <>

384:
old  <	; Initializer String Please write an integer: >
new  <section .data>

385:
old  <	db "Please write an integer: ", 0>
new  <>

386:
old  <>
new  <string_25i#:>

387:
old  <section .data>
new  <	; Initializer String %i>

388:
old  <>
new  <	db "%i", 0>

389:
old  <string_25i#:>
new  <>

390:
old  <	; Initializer String %i>
new  <section .data>

391:
old  <	db "%i", 0>
new  <>

392:
old  <>
new  <string_You20wrote20the20integer2025i2E0A#:>

393:
old  <section .data>
new  <	; Initializer String You wrote the integer %i.\n>

394:
old  <>
new  <	db "You wrote the integer %i.", 10, 0>

395:
old  <string_You20wrote20the20integer2025i2E0A#:>
new  <>

396:
old  <	; Initializer String You wrote the integer %i.\n>
new  <section .text>

397:
old  <	db "You wrote the integer %i.", 10, 0>
new  <>

398:
old  <>
new  < maini:>

399:
old  <section .text>
new  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

401:
old  < maini:>
new  < maini$1:>

402:
old  <	; Empty>
new  <	; Parameter pointer "Please write an integer: " 52>

403:
old  <>
new  <	mov qword [rbp + 52], string_Please20write20an20integer3A20#>

404:
old  < maini$1:>
new  <>

405:
old  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < maini$2:>

406:
old  <>
new  <	; Call printf 28 0>

407:
old  < maini$2:>
new  <	mov qword [rbp + 28], maini$3>

408:
old  <	; Parameter pointer "Please write an integer: " 52>
new  <	mov [rbp + 36], rbp>

409:
old  <	mov qword [rbp + 52], string_Please20write20an20integer3A20#>
new  <	add rbp, 28>

410:
old  <>
new  <	mov rdi, rbp>

411:
old  < maini$3:>
new  <	jmp printf>

412:
old  <	; Call printf 28 0>
new  <>

413:
old  <	mov qword [rbp + 28], maini$4>
new  < maini$3:>

414:
old  <	mov [rbp + 36], rbp>
new  <	; PostCall 28>

415:
old  <	add rbp, 28>
new  <>

416:
old  <	mov rdi, rbp>
new  < maini$4:>

417:
old  <	jmp printf>
new  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

419:
old  < maini$4:>
new  < maini$5:>

420:
old  <	; PostCall 28>
new  <	; Parameter pointer "%i" 52>

421:
old  <>
new  <	mov qword [rbp + 52], string_25i#>

422:
old  < maini$5:>
new  <>

423:
old  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < maini$6:>

424:
old  <>
new  <	; Address Â£temporary25 i>

425:
old  < maini$6:>
new  <	mov rsi, rbp>

426:
old  <	; Parameter pointer "%i" 52>
new  <	add rsi, 24>

427:
old  <	mov qword [rbp + 52], string_25i#>
new  <>

428:
old  <>
new  < maini$7:>

429:
old  < maini$7:>
new  <	; Parameter pointer Â£temporary25 60>

430:
old  <	; Address Â£temporary25 i>
new  <	mov [rbp + 60], rsi>

431:
old  <	mov rsi, rbp>
new  <>

432:
old  <	add rsi, 24>
new  < maini$8:>

433:
old  <>
new  <	; Call scanf 28 8>

434:
old  < maini$8:>
new  <	mov qword [rbp + 28], maini$9>

435:
old  <	; Parameter pointer Â£temporary25 60>
new  <	mov [rbp + 36], rbp>

436:
old  <	mov [rbp + 60], rsi>
new  <	add rbp, 28>

437:
old  <>
new  <	mov rdi, rbp>

438:
old  < maini$9:>
new  <	add rdi, 8>

439:
old  <	; Call scanf 28 8>
new  <	jmp scanf>

440:
old  <	mov qword [rbp + 28], maini$10>
new  <>

441:
old  <	mov [rbp + 36], rbp>
new  < maini$9:>

442:
old  <	add rbp, 28>
new  <	; PostCall 28>

443:
old  <	mov rdi, rbp>
new  <>

444:
old  <	add rdi, 8>
new  < maini$10:>

445:
old  <	jmp scanf>
new  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

447:
old  < maini$10:>
new  < maini$11:>

448:
old  <	; PostCall 28>
new  <	; Parameter pointer "You wrote the integer %i.\n" 52>

449:
old  <>
new  <	mov qword [rbp + 52], string_You20wrote20the20integer2025i2E0A#>

450:
old  < maini$11:>
new  <>

451:
old  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < maini$12:>

452:
old  <>
new  <	; Parameter signedint i 60>

453:
old  < maini$12:>
new  <	mov eax, [rbp + 24]>

454:
old  <	; Parameter pointer "You wrote the integer %i.\n" 52>
new  <	mov [rbp + 60], eax>

455:
old  <	mov qword [rbp + 52], string_You20wrote20the20integer2025i2E0A#>
new  <>

456:
old  <>
new  < maini$13:>

457:
old  < maini$13:>
new  <	; Call printf 28 4>

458:
old  <	; Parameter signedint i 60>
new  <	mov qword [rbp + 28], maini$14>

459:
old  <	mov eax, [rbp + 24]>
new  <	mov [rbp + 36], rbp>

460:
old  <	mov [rbp + 60], eax>
new  <	add rbp, 28>

461:
old  <>
new  <	mov rdi, rbp>

462:
old  < maini$14:>
new  <	add rdi, 4>

463:
old  <	; Call printf 28 4>
new  <	jmp printf>

464:
old  <	mov qword [rbp + 28], maini$15>
new  <>

465:
old  <	mov [rbp + 36], rbp>
new  < maini$14:>

466:
old  <	add rbp, 28>
new  <	; PostCall 28>

467:
old  <	mov rdi, rbp>
new  <>

468:
old  <	add rdi, 4>
new  < maini$15:>

469:
old  <	jmp printf>
new  <	; Return>

470:
old  <>
new  <	mov rax, [rbp]>

471:
old  < maini$15:>
new  <	mov rdi, [rbp + 16]>

472:
old  <	; PostCall 28>
new  <	mov rbp, [rbp + 8]>

473:
old  <>
new  <	jmp rax>

474:
old  < maini$16:>
new  <>

475:
old  <	; Return>
new  < maini$16:>

476:
old  <	mov rax, [rbp]>
new  <	; FunctionEnd maini>

477:
old  <	mov rdi, [rbp + 16]>
new  <>

478:
old  <	mov rbp, [rbp + 8]>
new  <section .data>

479:
old  <	jmp rax>
new  <>

480:
old  <>
new  <string_Please20write20a20string3A20#:>

481:
old  < maini$17:>
new  <	; Initializer String Please write a string: >

482:
old  <	; FunctionEnd maini>
new  <	db "Please write a string: ", 0>

486:
old  <string_Please20write20a20string3A20#:>
new  <string_25s#:>

487:
old  <	; Initializer String Please write a string: >
new  <	; Initializer String %s>

488:
old  <	db "Please write a string: ", 0>
new  <	db "%s", 0>

492:
old  <string_25s#:>
new  <string_You20wrote20the20string202225s222E0A#:>

493:
old  <	; Initializer String %s>
new  <	; Initializer String You wrote the string "%s".\n>

494:
old  <	db "%s", 0>
new  <	db "You wrote the string ", 34, "%s", 34, ".", 10, 0>

496:
old  <section .data>
new  <section .text>

498:
old  <string_You20wrote20the20string202225s222E0A#:>
new  < mains:>

499:
old  <	; Initializer String You wrote the string "%s".\n>
new  <	; PreCall 44 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

500:
old  <	db "You wrote the string ", 34, "%s", 34, ".", 10, 0>
new  <>

501:
old  <>
new  < mains$1:>

502:
old  <section .text>
new  <	; Parameter pointer "Please write a string: " 68>

503:
old  <>
new  <	mov qword [rbp + 68], string_Please20write20a20string3A20#>

504:
old  < mains:>
new  <>

505:
old  <	; Empty>
new  < mains$2:>

506:
old  <>
new  <	; Call printf 44 0>

507:
old  < mains$1:>
new  <	mov qword [rbp + 44], mains$3>

508:
old  <	; PreCall 44 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov [rbp + 52], rbp>

509:
old  <>
new  <	add rbp, 44>

510:
old  < mains$2:>
new  <	mov rdi, rbp>

511:
old  <	; Parameter pointer "Please write a string: " 68>
new  <	jmp printf>

512:
old  <	mov qword [rbp + 68], string_Please20write20a20string3A20#>
new  <>

513:
old  <>
new  < mains$3:>

514:
old  < mains$3:>
new  <	; PostCall 44>

515:
old  <	; Call printf 44 0>
new  <>

516:
old  <	mov qword [rbp + 44], mains$4>
new  < mains$4:>

517:
old  <	mov [rbp + 52], rbp>
new  <	; PreCall 44 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

518:
old  <	add rbp, 44>
new  <>

519:
old  <	mov rdi, rbp>
new  < mains$5:>

520:
old  <	jmp printf>
new  <	; Parameter pointer "%s" 68>

521:
old  <>
new  <	mov qword [rbp + 68], string_25s#>

522:
old  < mains$4:>
new  <>

523:
old  <	; PostCall 44>
new  < mains$6:>

524:
old  <>
new  <	; Parameter pointer s 76>

525:
old  < mains$5:>
new  <	mov [rbp + 76], rbp>

526:
old  <	; PreCall 44 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	add qword [rbp + 76], 24>

528:
old  < mains$6:>
new  < mains$7:>

529:
old  <	; Parameter pointer "%s" 68>
new  <	; Call scanf 44 8>

530:
old  <	mov qword [rbp + 68], string_25s#>
new  <	mov qword [rbp + 44], mains$8>

531:
old  <>
new  <	mov [rbp + 52], rbp>

532:
old  < mains$7:>
new  <	add rbp, 44>

533:
old  <	; Parameter pointer s 76>
new  <	mov rdi, rbp>

534:
old  <	mov [rbp + 76], rbp>
new  <	add rdi, 8>

535:
old  <	add qword [rbp + 76], 24>
new  <	jmp scanf>

538:
old  <	; Call scanf 44 8>
new  <	; PostCall 44>

539:
old  <	mov qword [rbp + 44], mains$9>
new  <>

540:
old  <	mov [rbp + 52], rbp>
new  < mains$9:>

541:
old  <	add rbp, 44>
new  <	; PreCall 44 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

542:
old  <	mov rdi, rbp>
new  <>

543:
old  <	add rdi, 8>
new  < mains$10:>

544:
old  <	jmp scanf>
new  <	; Parameter pointer "You wrote the string "%s".\n" 68>

545:
old  <>
new  <	mov qword [rbp + 68], string_You20wrote20the20string202225s222E0A#>

546:
old  < mains$9:>
new  <>

547:
old  <	; PostCall 44>
new  < mains$11:>

548:
old  <>
new  <	; Parameter pointer s 76>

549:
old  < mains$10:>
new  <	mov [rbp + 76], rbp>

550:
old  <	; PreCall 44 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	add qword [rbp + 76], 24>

552:
old  < mains$11:>
new  < mains$12:>

553:
old  <	; Parameter pointer "You wrote the string "%s".\n" 68>
new  <	; Call printf 44 8>

554:
old  <	mov qword [rbp + 68], string_You20wrote20the20string202225s222E0A#>
new  <	mov qword [rbp + 44], mains$13>

555:
old  <>
new  <	mov [rbp + 52], rbp>

556:
old  < mains$12:>
new  <	add rbp, 44>

557:
old  <	; Parameter pointer s 76>
new  <	mov rdi, rbp>

558:
old  <	mov [rbp + 76], rbp>
new  <	add rdi, 8>

559:
old  <	add qword [rbp + 76], 24>
new  <	jmp printf>

562:
old  <	; Call printf 44 8>
new  <	; PostCall 44>

563:
old  <	mov qword [rbp + 44], mains$14>
new  <>

564:
old  <	mov [rbp + 52], rbp>
new  < mains$14:>

565:
old  <	add rbp, 44>
new  <	; Return>

566:
old  <	mov rdi, rbp>
new  <	mov rax, [rbp]>

567:
old  <	add rdi, 8>
new  <	mov rdi, [rbp + 16]>

568:
old  <	jmp printf>
new  <	mov rbp, [rbp + 8]>

569:
old  <>
new  <	jmp rax>

570:
old  < mains$14:>
new  <>

571:
old  <	; PostCall 44>
new  < mains$15:>

572:
old  <>
new  <	; FunctionEnd mains>

573:
old  < mains$15:>
new  <>

574:
old  <	; Return>
new  <section .text>

575:
old  <	mov rax, [rbp]>
new  <>

576:
old  <	mov rdi, [rbp + 16]>
new  < maint:>

577:
old  <	mov rbp, [rbp + 8]>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

578:
old  <	jmp rax>
new  <>

579:
old  <>
new  < maint$1:>

580:
old  < mains$16:>
new  <	; Call limits_test 24 0>

581:
old  <	; FunctionEnd mains>
new  <	mov qword [rbp + 24], maint$2>

582:
old  <>
new  <	mov [rbp + 32], rbp>

583:
old  <section .text>
new  <	add rbp, 24>

584:
old  <>
new  <	jmp limits_test>

585:
old  < maint:>
new  <>

586:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < maint$2:>

587:
old  <>
new  <	; PostCall 24>

588:
old  < maint$1:>
new  <>

589:
old  <	; Call limits_test 24 0>
new  < maint$3:>

590:
old  <	mov qword [rbp + 24], maint$2>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

591:
old  <	mov [rbp + 32], rbp>
new  <>

592:
old  <	add rbp, 24>
new  < maint$4:>

593:
old  <	jmp limits_test>
new  <	; Call time_test 24 0>

594:
old  <>
new  <	mov qword [rbp + 24], maint$5>

595:
old  < maint$2:>
new  <	mov [rbp + 32], rbp>

596:
old  <	; PostCall 24>
new  <	add rbp, 24>

597:
old  <>
new  <	jmp time_test>

598:
old  < maint$3:>
new  <>

599:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < maint$5:>

600:
old  <>
new  <	; PostCall 24>

601:
old  < maint$4:>
new  <>

602:
old  <	; Call time_test 24 0>
new  < maint$6:>

603:
old  <	mov qword [rbp + 24], maint$5>
new  <	; Return>

604:
old  <	mov [rbp + 32], rbp>
new  <	mov rax, [rbp]>

605:
old  <	add rbp, 24>
new  <	mov rdi, [rbp + 16]>

606:
old  <	jmp time_test>
new  <	mov rbp, [rbp + 8]>

607:
old  <>
new  <	jmp rax>

608:
old  < maint$5:>
new  <>

609:
old  <	; PostCall 24>
new  < maint$7:>

610:
old  <>
new  <	; FunctionEnd maint>

611:
old  < maint$6:>
new  <>

612:
old  <	; Return>
new  <section .data>

613:
old  <	mov rax, [rbp]>
new  <>

614:
old  <	mov rdi, [rbp + 16]>
new  <float8$10#:>

615:
old  <	mov rbp, [rbp + 8]>
new  <	; Initializer Double 10>

616:
old  <	jmp rax>
new  <	dq 10.0>

618:
old  < maint$7:>
new  <section .text>

619:
old  <	; FunctionEnd maint>
new  <>

620:
old  <>
new  < mainY:>

621:
old  <section .data>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

623:
old  <float8$10#:>
new  < mainY$1:>

624:
old  <	; Initializer Double 10>
new  <	; Call malloc_test 24 0>

625:
old  <	dq 10.0>
new  <	mov qword [rbp + 24], mainY$2>

626:
old  <>
new  <	mov [rbp + 32], rbp>

627:
old  <section .text>
new  <	add rbp, 24>

628:
old  <>
new  <	jmp malloc_test>

629:
old  < mainY:>
new  <>

630:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < mainY$2:>

631:
old  <>
new  <	; PostCall 24>

632:
old  < mainY$1:>
new  <>

633:
old  <	; Call malloc_test 24 0>
new  < mainY$3:>

634:
old  <	mov qword [rbp + 24], mainY$2>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

635:
old  <	mov [rbp + 32], rbp>
new  <>

636:
old  <	add rbp, 24>
new  < mainY$4:>

637:
old  <	jmp malloc_test>
new  <	; PushFloat 10>

638:
old  <>
new  <	fld qword [float8$10#]>

639:
old  < mainY$2:>
new  <>

640:
old  <	; PostCall 24>
new  < mainY$5:>

641:
old  <>
new  <	; Parameter double 10 48>

642:
old  < mainY$3:>
new  <	fstp qword [rbp + 48]>

643:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

644:
old  <>
new  < mainY$6:>

645:
old  < mainY$4:>
new  <	; Call setjmp_test 24 0>

646:
old  <	; PushFloat 10>
new  <	mov qword [rbp + 24], mainY$7>

647:
old  <	fld qword [float8$10#]>
new  <	mov [rbp + 32], rbp>

648:
old  <>
new  <	add rbp, 24>

649:
old  < mainY$5:>
new  <	jmp setjmp_test>

650:
old  <	; Parameter double 10 48>
new  <>

651:
old  <	fstp qword [rbp + 48]>
new  < mainY$7:>

652:
old  <>
new  <	; PostCall 24>

653:
old  < mainY$6:>
new  <>

654:
old  <	; Call setjmp_test 24 0>
new  < mainY$8:>

655:
old  <	mov qword [rbp + 24], mainY$7>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

656:
old  <	mov [rbp + 32], rbp>
new  <>

657:
old  <	add rbp, 24>
new  < mainY$9:>

658:
old  <	jmp setjmp_test>
new  <	; PushFloat 0>

659:
old  <>
new  <	fldz>

660:
old  < mainY$7:>
new  <>

661:
old  <	; PostCall 24>
new  < mainY$10:>

662:
old  <>
new  <	; Parameter double 0 48>

663:
old  < mainY$8:>
new  <	fstp qword [rbp + 48]>

664:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

665:
old  <>
new  < mainY$11:>

666:
old  < mainY$9:>
new  <	; Call setjmp_test 24 0>

667:
old  <	; PushFloat 0>
new  <	mov qword [rbp + 24], mainY$12>

668:
old  <	fldz>
new  <	mov [rbp + 32], rbp>

669:
old  <>
new  <	add rbp, 24>

670:
old  < mainY$10:>
new  <	jmp setjmp_test>

671:
old  <	; Parameter double 0 48>
new  <>

672:
old  <	fstp qword [rbp + 48]>
new  < mainY$12:>

673:
old  <>
new  <	; PostCall 24>

674:
old  < mainY$11:>
new  <>

675:
old  <	; Call setjmp_test 24 0>
new  < mainY$13:>

676:
old  <	mov qword [rbp + 24], mainY$12>
new  <	; Return>

677:
old  <	mov [rbp + 32], rbp>
new  <	mov rax, [rbp]>

678:
old  <	add rbp, 24>
new  <	mov rdi, [rbp + 16]>

679:
old  <	jmp setjmp_test>
new  <	mov rbp, [rbp + 8]>

680:
old  <>
new  <	jmp rax>

681:
old  < mainY$12:>
new  <>

682:
old  <	; PostCall 24>
new  < mainY$14:>

683:
old  <>
new  <	; FunctionEnd mainY>

684:
old  < mainY$13:>
new  <>

685:
old  <	; Return>
new  <section .data>

686:
old  <	mov rax, [rbp]>
new  <>

687:
old  <	mov rdi, [rbp + 16]>
new  <string_25i3A2025i203C25c3E0A#:>

688:
old  <	mov rbp, [rbp + 8]>
new  <	; Initializer String %i: %i <%c>\n>

689:
old  <	jmp rax>
new  <	db "%i: %i <%c>", 10, 0>

691:
old  < mainY$14:>
new  <section .data>

692:
old  <	; FunctionEnd mainY>
new  <>

693:
old  <>
new  <string_0Aargc3A2025i0A#:>

694:
old  <section .data>
new  <	; Initializer String \nargc: %i\n>

695:
old  <>
new  <	db 10, "argc: %i", 10, 0>

696:
old  <string_25i3A2025i203C25c3E0A#:>
new  <>

697:
old  <	; Initializer String %i: %i <%c>\n>
new  <section .data>

698:
old  <	db "%i: %i <%c>", 10, 0>
new  <>

699:
old  <>
new  <string_25i3A203C25s3E0A#:>

700:
old  <section .data>
new  <	; Initializer String %i: <%s>\n>

701:
old  <>
new  <	db "%i: <%s>", 10, 0>

702:
old  <string_0Aargc3A2025i0A#:>
new  <>

703:
old  <	; Initializer String \nargc: %i\n>
new  <section .data>

704:
old  <	db 10, "argc: %i", 10, 0>
new  <>

705:
old  <>
new  <string_0A#:>

706:
old  <section .data>
new  <	; Initializer String \n>

707:
old  <>
new  <	db 10, 0>

708:
old  <string_25i3A203C25s3E0A#:>
new  <>

709:
old  <	; Initializer String %i: <%s>\n>
new  <section .data>

710:
old  <	db "%i: <%s>", 10, 0>
new  <>

711:
old  <>
new  <int8$8#:>

712:
old  <section .data>
new  <	; Initializer Pointer 8>

713:
old  <>
new  <	dq 8>

714:
old  <string_0A#:>
new  <>

715:
old  <	; Initializer String \n>
new  <section .text>

716:
old  <	db 10, 0>
new  <>

717:
old  <>
new  < mainX:>

718:
old  <section .data>
new  <	; Assign index 129>

719:
old  <>
new  <	mov dword [rbp + 36], 129>

720:
old  <int8$8#:>
new  <>

721:
old  <	; Initializer Pointer 8>
new  < mainX$1:>

722:
old  <	dq 8>
new  <	; SignedGreaterThanEqual 16 index 255>

723:
old  <>
new  <	cmp dword [rbp + 36], 255>

724:
old  <section .text>
new  <	jge mainX$16>

726:
old  < mainX:>
new  < mainX$2:>

727:
old  <	; Empty>
new  <	; IntegralToIntegral Â£temporary41 index>

728:
old  <>
new  <	mov esi, [rbp + 36]>

729:
old  < mainX$1:>
new  <	mov rax, 4294967295>

730:
old  <	; Assign index 129>
new  <	and rsi, rax>

731:
old  <	mov dword [rbp + 36], 129>
new  <>

732:
old  <>
new  < mainX$3:>

733:
old  < mainX$2:>
new  <	; Dereference Â£temporary42 -> Â£temporary41 Â£temporary41 0>

734:
old  <	; SignedGreaterThanEqual 17 index 255>
new  <>

735:
old  <	cmp dword [rbp + 36], 255>
new  < mainX$4:>

736:
old  <	jge mainX$17>
new  <	; Assign c Â£temporary42 -> Â£temporary41>

737:
old  <>
new  <	mov al, [rsi]>

738:
old  < mainX$3:>
new  <	mov [rbp + 40], al>

739:
old  <	; IntegralToIntegral Â£temporary41 index>
new  <>

740:
old  <	mov esi, [rbp + 36]>
new  < mainX$5:>

741:
old  <	mov rax, 4294967295>
new  <	; PreCall 41 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

742:
old  <	and rsi, rax>
new  <>

743:
old  <>
new  < mainX$6:>

744:
old  < mainX$4:>
new  <	; Parameter pointer "%i: %i <%c>\n" 65>

745:
old  <	; Dereference Â£temporary42 -> Â£temporary41 Â£temporary41 0>
new  <	mov qword [rbp + 65], string_25i3A2025i203C25c3E0A#>

747:
old  < mainX$5:>
new  < mainX$7:>

748:
old  <	; Assign c Â£temporary42 -> Â£temporary41>
new  <	; Parameter signedint index 73>

749:
old  <	mov al, [rsi]>
new  <	mov eax, [rbp + 36]>

750:
old  <	mov [rbp + 40], al>
new  <	mov [rbp + 73], eax>

752:
old  < mainX$6:>
new  < mainX$8:>

753:
old  <	; PreCall 41 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; IntegralToIntegral Â£temporary43 c>

754:
old  <>
new  <	mov al, [rbp + 40]>

755:
old  < mainX$7:>
new  <	and eax, 255>

756:
old  <	; Parameter pointer "%i: %i <%c>\n" 65>
new  <	cmp al, 0>

757:
old  <	mov qword [rbp + 65], string_25i3A2025i203C25c3E0A#>
new  <	jge mainX$9>

758:
old  <>
new  <	neg al>

759:
old  < mainX$8:>
new  <	neg eax>

760:
old  <	; Parameter signedint index 73>
new  <>

761:
old  <	mov eax, [rbp + 36]>
new  < mainX$9:>

762:
old  <	mov [rbp + 73], eax>
new  <	; Parameter signedint Â£temporary43 77>

763:
old  <>
new  <	mov [rbp + 77], eax>

764:
old  < mainX$9:>
new  <>

765:
old  <	; IntegralToIntegral Â£temporary43 c>
new  < mainX$10:>

766:
old  <	mov al, [rbp + 40]>
new  <	; IntegralToIntegral Â£temporary44 c>

767:
old  <	and eax, 255>
new  <	mov al, [rbp + 40]>

768:
old  <	cmp al, 0>
new  <	and eax, 255>

769:
old  <	jge mainX$10>
new  <	cmp al, 0>

770:
old  <	neg al>
new  <	jge mainX$11>

771:
old  <	neg eax>
new  <	neg al>

772:
old  <>
new  <	neg eax>

773:
old  < mainX$10:>
new  <>

774:
old  <	; Parameter signedint Â£temporary43 77>
new  < mainX$11:>

775:
old  <	mov [rbp + 77], eax>
new  <	; Parameter signedint Â£temporary44 81>

776:
old  <>
new  <	mov [rbp + 81], eax>

777:
old  < mainX$11:>
new  <>

778:
old  <	; IntegralToIntegral Â£temporary44 c>
new  < mainX$12:>

779:
old  <	mov al, [rbp + 40]>
new  <	; Call printf 41 12>

780:
old  <	and eax, 255>
new  <	mov qword [rbp + 41], mainX$13>

781:
old  <	cmp al, 0>
new  <	mov [rbp + 49], rbp>

782:
old  <	jge mainX$12>
new  <	add rbp, 41>

783:
old  <	neg al>
new  <	mov rdi, rbp>

784:
old  <	neg eax>
new  <	add rdi, 12>

785:
old  <>
new  <	jmp printf>

786:
old  < mainX$12:>
new  <>

787:
old  <	; Parameter signedint Â£temporary44 81>
new  < mainX$13:>

788:
old  <	mov [rbp + 81], eax>
new  <	; PostCall 41>

790:
old  < mainX$13:>
new  < mainX$14:>

791:
old  <	; Call printf 41 12>
new  <	; BinaryAdd index index 1>

792:
old  <	mov qword [rbp + 41], mainX$14>
new  <	inc dword [rbp + 36]>

793:
old  <	mov [rbp + 49], rbp>
new  <>

794:
old  <	add rbp, 41>
new  < mainX$15:>

795:
old  <	mov rdi, rbp>
new  <	; Goto 1>

796:
old  <	add rdi, 12>
new  <	jmp mainX$1>

797:
old  <	jmp printf>
new  <>

798:
old  <>
new  < mainX$16:>

799:
old  < mainX$14:>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

800:
old  <	; PostCall 41>
new  <>

801:
old  <>
new  < mainX$17:>

802:
old  < mainX$15:>
new  <	; Parameter pointer "\nargc: %i\n" 64>

803:
old  <	; BinaryAdd index index 1>
new  <	mov qword [rbp + 64], string_0Aargc3A2025i0A#>

804:
old  <	inc dword [rbp + 36]>
new  <>

805:
old  <>
new  < mainX$18:>

806:
old  < mainX$16:>
new  <	; Parameter signedint argc 72>

807:
old  <	; Goto 2>
new  <	mov eax, [rbp + 24]>

808:
old  <	jmp mainX$2>
new  <	mov [rbp + 72], eax>

810:
old  < mainX$17:>
new  < mainX$19:>

811:
old  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Call printf 40 4>

812:
old  <>
new  <	mov qword [rbp + 40], mainX$20>

813:
old  < mainX$18:>
new  <	mov [rbp + 48], rbp>

814:
old  <	; Parameter pointer "\nargc: %i\n" 64>
new  <	add rbp, 40>

815:
old  <	mov qword [rbp + 64], string_0Aargc3A2025i0A#>
new  <	mov rdi, rbp>

816:
old  <>
new  <	add rdi, 4>

817:
old  < mainX$19:>
new  <	jmp printf>

818:
old  <	; Parameter signedint argc 72>
new  <>

819:
old  <	mov eax, [rbp + 24]>
new  < mainX$20:>

820:
old  <	mov [rbp + 72], eax>
new  <	; PostCall 40>

822:
old  < mainX$20:>
new  < mainX$21:>

823:
old  <	; Call printf 40 4>
new  <	; Assign index 0>

824:
old  <	mov qword [rbp + 40], mainX$21>
new  <	mov dword [rbp + 36], 0>

825:
old  <	mov [rbp + 48], rbp>
new  <>

826:
old  <	add rbp, 40>
new  < mainX$22:>

827:
old  <	mov rdi, rbp>
new  <	; SignedGreaterThanEqual 35 index argc>

828:
old  <	add rdi, 4>
new  <	mov eax, [rbp + 24]>

829:
old  <	jmp printf>
new  <	cmp [rbp + 36], eax>

830:
old  <>
new  <	jge mainX$35>

831:
old  < mainX$21:>
new  <>

832:
old  <	; PostCall 40>
new  < mainX$23:>

833:
old  <>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

834:
old  < mainX$22:>
new  <>

835:
old  <	; Assign index 0>
new  < mainX$24:>

836:
old  <	mov dword [rbp + 36], 0>
new  <	; Parameter pointer "%i: <%s>\n" 64>

837:
old  <>
new  <	mov qword [rbp + 64], string_25i3A203C25s3E0A#>

838:
old  < mainX$23:>
new  <>

839:
old  <	; SignedGreaterThanEqual 36 index argc>
new  < mainX$25:>

840:
old  <	mov eax, [rbp + 24]>
new  <	; Parameter signedint index 72>

841:
old  <	cmp [rbp + 36], eax>
new  <	mov eax, [rbp + 36]>

842:
old  <	jge mainX$36>
new  <	mov [rbp + 72], eax>

844:
old  < mainX$24:>
new  < mainX$26:>

845:
old  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; IntegralToIntegral Â£temporary50 index>

846:
old  <>
new  <	mov eax, [rbp + 36]>

847:
old  < mainX$25:>
new  <	mov rbx, 4294967295>

848:
old  <	; Parameter pointer "%i: <%s>\n" 64>
new  <	and rax, rbx>

849:
old  <	mov qword [rbp + 64], string_25i3A203C25s3E0A#>
new  <>

850:
old  <>
new  < mainX$27:>

851:
old  < mainX$26:>
new  <	; UnsignedMultiply Â£temporary51 Â£temporary50 8>

852:
old  <	; Parameter signedint index 72>
new  <	xor rdx, rdx>

853:
old  <	mov eax, [rbp + 36]>
new  <	mul qword [int8$8#]>

854:
old  <	mov [rbp + 72], eax>
new  <>

855:
old  <>
new  < mainX$28:>

856:
old  < mainX$27:>
new  <	; BinaryAdd Â£temporary52 argv Â£temporary51>

857:
old  <	; IntegralToIntegral Â£temporary50 index>
new  <	mov rsi, [rbp + 28]>

858:
old  <	mov eax, [rbp + 36]>
new  <	add rsi, rax>

859:
old  <	mov rbx, 4294967295>
new  <>

860:
old  <	and rax, rbx>
new  < mainX$29:>

861:
old  <>
new  <	; Dereference Â£temporary49 -> Â£temporary52 Â£temporary52 0>

862:
old  < mainX$28:>
new  <>

863:
old  <	; UnsignedMultiply Â£temporary51 Â£temporary50 8>
new  < mainX$30:>

864:
old  <	xor rdx, rdx>
new  <	; Parameter pointer Â£temporary49 -> Â£temporary52 76>

865:
old  <	mul qword [int8$8#]>
new  <	mov rax, [rsi]>

866:
old  <>
new  <	mov [rbp + 76], rax>

867:
old  < mainX$29:>
new  <>

868:
old  <	; BinaryAdd Â£temporary52 argv Â£temporary51>
new  < mainX$31:>

869:
old  <	mov rsi, [rbp + 28]>
new  <	; Call printf 40 12>

870:
old  <	add rsi, rax>
new  <	mov qword [rbp + 40], mainX$32>

871:
old  <>
new  <	mov [rbp + 48], rbp>

872:
old  < mainX$30:>
new  <	add rbp, 40>

873:
old  <	; Dereference Â£temporary49 -> Â£temporary52 Â£temporary52 0>
new  <	mov rdi, rbp>

874:
old  <>
new  <	add rdi, 12>

875:
old  < mainX$31:>
new  <	jmp printf>

876:
old  <	; Parameter pointer Â£temporary49 -> Â£temporary52 76>
new  <>

877:
old  <	mov rax, [rsi]>
new  < mainX$32:>

878:
old  <	mov [rbp + 76], rax>
new  <	; PostCall 40>

880:
old  < mainX$32:>
new  < mainX$33:>

881:
old  <	; Call printf 40 12>
new  <	; BinaryAdd index index 1>

882:
old  <	mov qword [rbp + 40], mainX$33>
new  <	inc dword [rbp + 36]>

883:
old  <	mov [rbp + 48], rbp>
new  <>

884:
old  <	add rbp, 40>
new  < mainX$34:>

885:
old  <	mov rdi, rbp>
new  <	; Goto 22>

886:
old  <	add rdi, 12>
new  <	jmp mainX$22>

887:
old  <	jmp printf>
new  <>

888:
old  <>
new  < mainX$35:>

889:
old  < mainX$33:>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

890:
old  <	; PostCall 40>
new  <>

891:
old  <>
new  < mainX$36:>

892:
old  < mainX$34:>
new  <	; Parameter pointer "\n" 64>

893:
old  <	; BinaryAdd index index 1>
new  <	mov qword [rbp + 64], string_0A#>

894:
old  <	inc dword [rbp + 36]>
new  <>

895:
old  <>
new  < mainX$37:>

896:
old  < mainX$35:>
new  <	; Call printf 40 0>

897:
old  <	; Goto 23>
new  <	mov qword [rbp + 40], mainX$38>

898:
old  <	jmp mainX$23>
new  <	mov [rbp + 48], rbp>

899:
old  <>
new  <	add rbp, 40>

900:
old  < mainX$36:>
new  <	mov rdi, rbp>

901:
old  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	jmp printf>

903:
old  < mainX$37:>
new  < mainX$38:>

904:
old  <	; Parameter pointer "\n" 64>
new  <	; PostCall 40>

905:
old  <	mov qword [rbp + 64], string_0A#>
new  <>

906:
old  <>
new  < mainX$39:>

907:
old  < mainX$38:>
new  <	; Assign index 0>

908:
old  <	; Call printf 40 0>
new  <	mov dword [rbp + 36], 0>

909:
old  <	mov qword [rbp + 40], mainX$39>
new  <>

910:
old  <	mov [rbp + 48], rbp>
new  < mainX$40:>

911:
old  <	add rbp, 40>
new  <	; IntegralToIntegral Â£temporary56 index>

912:
old  <	mov rdi, rbp>
new  <	mov eax, [rbp + 36]>

913:
old  <	jmp printf>
new  <	mov rbx, 4294967295>

914:
old  <>
new  <	and rax, rbx>

915:
old  < mainX$39:>
new  <>

916:
old  <	; PostCall 40>
new  < mainX$41:>

917:
old  <>
new  <	; UnsignedMultiply Â£temporary57 Â£temporary56 8>

918:
old  < mainX$40:>
new  <	xor rdx, rdx>

919:
old  <	; Assign index 0>
new  <	mul qword [int8$8#]>

920:
old  <	mov dword [rbp + 36], 0>
new  <>

921:
old  <>
new  < mainX$42:>

922:
old  < mainX$41:>
new  <	; BinaryAdd Â£temporary58 argv Â£temporary57>

923:
old  <	; IntegralToIntegral Â£temporary56 index>
new  <	mov rsi, [rbp + 28]>

924:
old  <	mov eax, [rbp + 36]>
new  <	add rsi, rax>

925:
old  <	mov rbx, 4294967295>
new  <>

926:
old  <	and rax, rbx>
new  < mainX$43:>

927:
old  <>
new  <	; Dereference Â£temporary55 -> Â£temporary58 Â£temporary58 0>

928:
old  < mainX$42:>
new  <>

929:
old  <	; UnsignedMultiply Â£temporary57 Â£temporary56 8>
new  < mainX$44:>

930:
old  <	xor rdx, rdx>
new  <	; Equal 57 Â£temporary55 -> Â£temporary58 0>

931:
old  <	mul qword [int8$8#]>
new  <	cmp qword [rsi], 0>

932:
old  <>
new  <	je mainX$57>

933:
old  < mainX$43:>
new  <>

934:
old  <	; BinaryAdd Â£temporary58 argv Â£temporary57>
new  < mainX$45:>

935:
old  <	mov rsi, [rbp + 28]>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

936:
old  <	add rsi, rax>
new  <>

937:
old  <>
new  < mainX$46:>

938:
old  < mainX$44:>
new  <	; Parameter pointer "%i: <%s>\n" 64>

939:
old  <	; Dereference Â£temporary55 -> Â£temporary58 Â£temporary58 0>
new  <	mov qword [rbp + 64], string_25i3A203C25s3E0A#>

941:
old  < mainX$45:>
new  < mainX$47:>

942:
old  <	; Equal 58 Â£temporary55 -> Â£temporary58 0>
new  <	; Parameter signedint index 72>

943:
old  <	cmp qword [rsi], 0>
new  <	mov eax, [rbp + 36]>

944:
old  <	je mainX$58>
new  <	mov [rbp + 72], eax>

946:
old  < mainX$46:>
new  < mainX$48:>

947:
old  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; IntegralToIntegral Â£temporary62 index>

948:
old  <>
new  <	mov eax, [rbp + 36]>

949:
old  < mainX$47:>
new  <	mov rbx, 4294967295>

950:
old  <	; Parameter pointer "%i: <%s>\n" 64>
new  <	and rax, rbx>

951:
old  <	mov qword [rbp + 64], string_25i3A203C25s3E0A#>
new  <>

952:
old  <>
new  < mainX$49:>

953:
old  < mainX$48:>
new  <	; UnsignedMultiply Â£temporary63 Â£temporary62 8>

954:
old  <	; Parameter signedint index 72>
new  <	xor rdx, rdx>

955:
old  <	mov eax, [rbp + 36]>
new  <	mul qword [int8$8#]>

956:
old  <	mov [rbp + 72], eax>
new  <>

957:
old  <>
new  < mainX$50:>

958:
old  < mainX$49:>
new  <	; BinaryAdd Â£temporary64 argv Â£temporary63>

959:
old  <	; IntegralToIntegral Â£temporary62 index>
new  <	mov rsi, [rbp + 28]>

960:
old  <	mov eax, [rbp + 36]>
new  <	add rsi, rax>

961:
old  <	mov rbx, 4294967295>
new  <>

962:
old  <	and rax, rbx>
new  < mainX$51:>

963:
old  <>
new  <	; Dereference Â£temporary61 -> Â£temporary64 Â£temporary64 0>

964:
old  < mainX$50:>
new  <>

965:
old  <	; UnsignedMultiply Â£temporary63 Â£temporary62 8>
new  < mainX$52:>

966:
old  <	xor rdx, rdx>
new  <	; Parameter pointer Â£temporary61 -> Â£temporary64 76>

967:
old  <	mul qword [int8$8#]>
new  <	mov rax, [rsi]>

968:
old  <>
new  <	mov [rbp + 76], rax>

969:
old  < mainX$51:>
new  <>

970:
old  <	; BinaryAdd Â£temporary64 argv Â£temporary63>
new  < mainX$53:>

971:
old  <	mov rsi, [rbp + 28]>
new  <	; Call printf 40 12>

972:
old  <	add rsi, rax>
new  <	mov qword [rbp + 40], mainX$54>

973:
old  <>
new  <	mov [rbp + 48], rbp>

974:
old  < mainX$52:>
new  <	add rbp, 40>

975:
old  <	; Dereference Â£temporary61 -> Â£temporary64 Â£temporary64 0>
new  <	mov rdi, rbp>

976:
old  <>
new  <	add rdi, 12>

977:
old  < mainX$53:>
new  <	jmp printf>

978:
old  <	; Parameter pointer Â£temporary61 -> Â£temporary64 76>
new  <>

979:
old  <	mov rax, [rsi]>
new  < mainX$54:>

980:
old  <	mov [rbp + 76], rax>
new  <	; PostCall 40>

982:
old  < mainX$54:>
new  < mainX$55:>

983:
old  <	; Call printf 40 12>
new  <	; BinaryAdd index index 1>

984:
old  <	mov qword [rbp + 40], mainX$55>
new  <	inc dword [rbp + 36]>

985:
old  <	mov [rbp + 48], rbp>
new  <>

986:
old  <	add rbp, 40>
new  < mainX$56:>

987:
old  <	mov rdi, rbp>
new  <	; Goto 40>

988:
old  <	add rdi, 12>
new  <	jmp mainX$40>

989:
old  <	jmp printf>
new  <>

990:
old  <>
new  < mainX$57:>

991:
old  < mainX$55:>
new  <	; Return>

992:
old  <	; PostCall 40>
new  <	mov rax, [rbp]>

993:
old  <>
new  <	mov rdi, [rbp + 16]>

994:
old  < mainX$56:>
new  <	mov rbp, [rbp + 8]>

995:
old  <	; BinaryAdd index index 1>
new  <	jmp rax>

996:
old  <	inc dword [rbp + 36]>
new  <>

997:
old  <>
new  < mainX$58:>

998:
old  < mainX$57:>
new  <	; FunctionEnd mainX>

999:
old  <	; Goto 41>
new  <>

1000:
old  <	jmp mainX$41>
new  <section .text>

1002:
old  < mainX$58:>
new  < mainm:>

1003:
old  <	; Return>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1004:
old  <	mov rax, [rbp]>
new  <>

1005:
old  <	mov rdi, [rbp + 16]>
new  < mainm$1:>

1006:
old  <	mov rbp, [rbp + 8]>
new  <	; Call main_math 36 0>

1007:
old  <	jmp rax>
new  <	mov qword [rbp + 36], mainm$2>

1008:
old  <>
new  <	mov [rbp + 44], rbp>

1009:
old  < mainX$59:>
new  <	add rbp, 36>

1010:
old  <	; FunctionEnd mainX>
new  <	jmp main_math>

1012:
old  <section .data>
new  < mainm$2:>

1013:
old  <>
new  <	; PostCall 36>

1014:
old  <@416$ZERO:>
new  <>

1015:
old  <	; Initializer SignedInt 0>
new  < mainm$3:>

1016:
old  <	dd 0>
new  <	; Return>

1017:
old  <>
new  <	mov rax, [rbp]>

1018:
old  <section .data>
new  <	mov rdi, [rbp + 16]>

1019:
old  <>
new  <	mov rbp, [rbp + 8]>

1020:
old  <@417$ONE:>
new  <	jmp rax>

1021:
old  <	; Initializer SignedInt 1>
new  <>

1022:
old  <	dd 1>
new  < mainm$4:>

1023:
old  <>
new  <	; FunctionEnd mainm>

1024:
old  <section .data>
new  <>

1025:
old  <>
new  <section .data>

1026:
old  <@420$TWO:>
new  <>

1027:
old  <	; Initializer SignedInt 2>
new  <string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#:>

1028:
old  <	dd 2>
new  <	; Initializer String Assertion failed: "%s" in file %s at line %i\n>

1029:
old  <>
new  <	db "Assertion failed: ", 34, "%s", 34, " in file %s at line %i", 10, 0>

1030:
old  <section .data>
new  <>

1031:
old  <>
new  <section .data>

1032:
old  <@421$THREE:>
new  <>

1033:
old  <	; Initializer SignedInt 3>
new  <string_1203C202#:>

1034:
old  <	dd 3>
new  <	; Initializer String 1 < 2>

1035:
old  <>
new  <	db "1 < 2", 0>

1036:
old  <section .data>
new  <>

1037:
old  <>
new  <section .data>

1038:
old  <string_argc3A2025i0A#:>
new  <>

1039:
old  <	; Initializer String argc: %i\n>
new  <string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CMain2Ec#:>

1040:
old  <	db "argc: %i", 10, 0>
new  <	; Initializer String C:\Users\Stefan\Documents\vagrant\homestead\code\code\Main.c>

1041:
old  <>
new  <	db "C:\Users\Stefan\Documents\vagrant\homestead\code\code\Main.c", 0>

1042:
old  <section .data>
new  <>

1043:
old  <>
new  <section .data>

1044:
old  <string_Hello210A#:>
new  <>

1045:
old  <	; Initializer String Hello!\n>
new  <string_1203E202#:>

1046:
old  <	db "Hello!", 10, 0>
new  <	; Initializer String 1 > 2>

1047:
old  <>
new  <	db "1 > 2", 0>

1048:
old  <section .data>
new  <>

1049:
old  <>
new  <section .text>

1050:
old  <string_Please20write20a20character2C20a20string2C20an20integer2C20and20a20double3A20#:>
new  <>

1051:
old  <	; Initializer String Please write a character, a string, an integer, and a double: >
new  < maina:>

1052:
old  <	db "Please write a character, a string, an integer, and a double: ", 0>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1054:
old  <section .data>
new  < maina$1:>

1055:
old  <>
new  <	; Parameter pointer stderr 48>

1056:
old  <string_25c2025s2025i2025lf#:>
new  <	mov rax, [stderr]>

1057:
old  <	; Initializer String %c %s %i %lf>
new  <	mov [rbp + 48], rax>

1058:
old  <	db "%c %s %i %lf", 0>
new  <>

1059:
old  <>
new  < maina$2:>

1060:
old  <section .data>
new  <	; Parameter pointer "Assertion failed: "%s" in file %s at line %i\n" 56>

1061:
old  <>
new  <	mov qword [rbp + 56], string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#>

1062:
old  <string_You20wrote20the20character202725c272C20the20string202225s222C20the20integer2025i2C20and20the20double2025f2E0A#:>
new  <>

1063:
old  <	; Initializer String You wrote the character '%c', the string "%s", the integer %i, and the double %f.\n>
new  < maina$3:>

1064:
old  <	db "You wrote the character ", 39, "%c", 39, ", the string ", 34, "%s", 34, ", the integer %i, and the double %f.", 10, 0>
new  <	; Parameter pointer "1 > 2" 64>

1065:
old  <>
new  <	mov qword [rbp + 64], string_1203E202#>

1066:
old  <section .text>
new  <>

1067:
old  <>
new  < maina$4:>

1068:
old  < _start:>
new  <	; Parameter pointer "C:\Users\Stefan\Documents\vagrant\homestead\code\code\Main.c" 72>

1069:
old  <	; Initializerialize Stack Pointer>
new  <	mov qword [rbp + 72], string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CMain2Ec#>

1070:
old  <	mov rbp, $StackTop>
new  <>

1071:
old  <	; Initializerialize Heap Pointer>
new  < maina$5:>

1072:
old  <	mov dword [$StackTop + 65534], $StackTop>
new  <	; Parameter signedint 199 80>

1073:
old  <	add dword [$StackTop + 65534], 65534>
new  <	mov dword [rbp + 80], 199>

1074:
old  <	; Initializerialize FPU Control Word, truncate mode => set bit 10 and 11.>
new  <>

1075:
old  <	fstcw [rbp]>
new  < maina$6:>

1076:
old  <	or word [rbp], 3072>
new  <	; Call fprintf 24 20>

1077:
old  <	fldcw [rbp]>
new  <	mov qword [rbp + 24], maina$7>

1078:
old  <	mov qword [$StackTop], 0>
new  <	mov [rbp + 32], rbp>

1079:
old  <	; Initialize Command Line Arguments>
new  <	add rbp, 24>

1080:
old  <	pop rbx>
new  <	mov rdi, rbp>

1081:
old  <	mov rax, rbx>
new  <	add rdi, 20>

1082:
old  <	mov rdx, rbp>
new  <	jmp fprintf>

1084:
old  < $args$loop:>
new  < maina$7:>

1085:
old  <	cmp rbx, 0>
new  <	; PostCall 24>

1086:
old  <	je $args$exit>
new  <>

1087:
old  <	pop rsi>
new  < maina$8:>

1088:
old  <	mov [rbp], rsi>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1089:
old  <	add rbp, 8>
new  <>

1090:
old  <	dec rbx>
new  < maina$9:>

1091:
old  <	jmp $args$loop>
new  <	; Call abort 24 0>

1092:
old  <>
new  <	mov qword [rbp + 24], maina$10>

1093:
old  < $args$exit:>
new  <	mov [rbp + 32], rbp>

1094:
old  <	mov qword [rbp], 0>
new  <	add rbp, 24>

1095:
old  <	add rbp, 8>
new  <	jmp abort>

1096:
old  <	mov qword [rbp], 0>
new  <>

1097:
old  <	mov [rbp + 24], eax>
new  < maina$10:>

1098:
old  <	mov [rbp + 28], rdx>
new  <	; PostCall 24>

1100:
old  < main:>
new  < maina$11:>

1101:
old  <	; Empty>
new  <	; Return>

1102:
old  <>
new  <	mov rax, [rbp]>

1103:
old  < main$1:>
new  <	mov rdi, [rbp + 16]>

1104:
old  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov rbp, [rbp + 8]>

1105:
old  <>
new  <	jmp rax>

1106:
old  < main$2:>
new  <>

1107:
old  <	; Parameter pointer "argc: %i\n" 60>
new  < maina$12:>

1108:
old  <	mov qword [rbp + 60], string_argc3A2025i0A#>
new  <	; FunctionEnd maina>

1110:
old  < main$3:>
new  <section .data>

1111:
old  <	; Parameter signedint argc 68>
new  <>

1112:
old  <	mov eax, [rbp + 24]>
new  <@423$ZERO:>

1113:
old  <	mov [rbp + 68], eax>
new  <	; Initializer SignedInt 0>

1114:
old  <>
new  <	dd 0>

1115:
old  < main$4:>
new  <>

1116:
old  <	; Call printf 36 4>
new  <section .data>

1117:
old  <	mov qword [rbp + 36], main$5>
new  <>

1118:
old  <	mov [rbp + 44], rbp>
new  <@424$ONE:>

1119:
old  <	add rbp, 36>
new  <	; Initializer SignedInt 1>

1120:
old  <	mov rdi, rbp>
new  <	dd 1>

1121:
old  <	add rdi, 4>
new  <>

1122:
old  <	jmp printf>
new  <section .data>

1124:
old  < main$5:>
new  <@427$TWO:>

1125:
old  <	; PostCall 36>
new  <	; Initializer SignedInt 2>

1126:
old  <>
new  <	dd 2>

1127:
old  < main$6:>
new  <>

1128:
old  <	; Assign index 0>
new  <section .data>

1129:
old  <	mov dword [rbp + 36], 0>
new  <>

1130:
old  <>
new  <@428$THREE:>

1131:
old  < main$7:>
new  <	; Initializer SignedInt 3>

1132:
old  <	; SignedGreaterThanEqual 20 index argc>
new  <	dd 3>

1133:
old  <	mov eax, [rbp + 24]>
new  <>

1134:
old  <	cmp [rbp + 36], eax>
new  <section .data>

1135:
old  <	jge main$20>
new  <>

1136:
old  <>
new  <string_argc3A2025i0A#:>

1137:
old  < main$8:>
new  <	; Initializer String argc: %i\n>

1138:
old  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	db "argc: %i", 10, 0>

1140:
old  < main$9:>
new  <section .data>

1141:
old  <	; Parameter pointer "%i: <%s>\n" 64>
new  <>

1142:
old  <	mov qword [rbp + 64], string_25i3A203C25s3E0A#>
new  <string_Hello210A#:>

1143:
old  <>
new  <	; Initializer String Hello!\n>

1144:
old  < main$10:>
new  <	db "Hello!", 10, 0>

1145:
old  <	; Parameter signedint index 72>
new  <>

1146:
old  <	mov eax, [rbp + 36]>
new  <section .data>

1147:
old  <	mov [rbp + 72], eax>
new  <>

1148:
old  <>
new  <string_Please20write20a20character2C20a20string2C20an20integer2C20and20a20double3A20#:>

1149:
old  < main$11:>
new  <	; Initializer String Please write a character, a string, an integer, and a double: >

1150:
old  <	; IntegralToIntegral Â£temporary70 index>
new  <	db "Please write a character, a string, an integer, and a double: ", 0>

1151:
old  <	mov eax, [rbp + 36]>
new  <>

1152:
old  <	mov rbx, 4294967295>
new  <section .data>

1153:
old  <	and rax, rbx>
new  <>

1154:
old  <>
new  <string_25c2025s2025i2025lf#:>

1155:
old  < main$12:>
new  <	; Initializer String %c %s %i %lf>

1156:
old  <	; UnsignedMultiply Â£temporary71 Â£temporary70 8>
new  <	db "%c %s %i %lf", 0>

1157:
old  <	xor rdx, rdx>
new  <>

1158:
old  <	mul qword [int8$8#]>
new  <section .data>

1160:
old  < main$13:>
new  <string_You20wrote20the20character202725c272C20the20string202225s222C20the20integer2025i2C20and20the20double2025f2E0A#:>

1161:
old  <	; BinaryAdd Â£temporary72 argv Â£temporary71>
new  <	; Initializer String You wrote the character '%c', the string "%s", the integer %i, and the double %f.\n>

1162:
old  <	mov rsi, [rbp + 28]>
new  <	db "You wrote the character ", 39, "%c", 39, ", the string ", 34, "%s", 34, ", the integer %i, and the double %f.", 10, 0>

1163:
old  <	add rsi, rax>
new  <>

1164:
old  <>
new  <section .text>

1165:
old  < main$14:>
new  <>

1166:
old  <	; Dereference Â£temporary69 -> Â£temporary72 Â£temporary72 0>
new  < _start:>

1167:
old  <>
new  <	; Initializerialize Stack Pointer>

1168:
old  < main$15:>
new  <	mov rbp, $StackTop>

1169:
old  <	; Parameter pointer Â£temporary69 -> Â£temporary72 76>
new  <	; Initializerialize Heap Pointer>

1170:
old  <	mov rax, [rsi]>
new  <	mov dword [$StackTop + 65534], $StackTop>

1171:
old  <	mov [rbp + 76], rax>
new  <	add dword [$StackTop + 65534], 65534>

1172:
old  <>
new  <	; Initializerialize FPU Control Word, truncate mode => set bit 10 and 11.>

1173:
old  < main$16:>
new  <	fstcw [rbp]>

1174:
old  <	; Call printf 40 12>
new  <	or word [rbp], 3072>

1175:
old  <	mov qword [rbp + 40], main$17>
new  <	fldcw [rbp]>

1176:
old  <	mov [rbp + 48], rbp>
new  <	mov qword [$StackTop], 0>

1177:
old  <	add rbp, 40>
new  <	; Initialize Command Line Arguments>

1178:
old  <	mov rdi, rbp>
new  <	pop rbx>

1179:
old  <	add rdi, 12>
new  <	mov rax, rbx>

1180:
old  <	jmp printf>
new  <	mov rdx, rbp>

1182:
old  < main$17:>
new  < $args$loop:>

1183:
old  <	; PostCall 40>
new  <	cmp rbx, 0>

1184:
old  <>
new  <	je $args$exit>

1185:
old  < main$18:>
new  <	pop rsi>

1186:
old  <	; BinaryAdd index index 1>
new  <	mov [rbp], rsi>

1187:
old  <	inc dword [rbp + 36]>
new  <	add rbp, 8>

1188:
old  <>
new  <	dec rbx>

1189:
old  < main$19:>
new  <	jmp $args$loop>

1190:
old  <	; Goto 7>
new  <>

1191:
old  <	jmp main$7>
new  < $args$exit:>

1192:
old  <>
new  <	mov qword [rbp], 0>

1193:
old  < main$20:>
new  <	add rbp, 8>

1194:
old  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov qword [rbp], 0>

1195:
old  <>
new  <	mov [rbp + 24], eax>

1196:
old  < main$21:>
new  <	mov [rbp + 28], rdx>

1197:
old  <	; Parameter pointer "\n" 64>
new  <>

1198:
old  <	mov qword [rbp + 64], string_0A#>
new  < main:>

1199:
old  <>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1200:
old  < main$22:>
new  <>

1201:
old  <	; Call printf 40 0>
new  < main$1:>

1202:
old  <	mov qword [rbp + 40], main$23>
new  <	; Parameter pointer "argc: %i\n" 60>

1203:
old  <	mov [rbp + 48], rbp>
new  <	mov qword [rbp + 60], string_argc3A2025i0A#>

1204:
old  <	add rbp, 40>
new  <>

1205:
old  <	mov rdi, rbp>
new  < main$2:>

1206:
old  <	jmp printf>
new  <	; Parameter signedint argc 68>

1207:
old  <>
new  <	mov eax, [rbp + 24]>

1208:
old  < main$23:>
new  <	mov [rbp + 68], eax>

1209:
old  <	; PostCall 40>
new  <>

1210:
old  <>
new  < main$3:>

1211:
old  < main$24:>
new  <	; Call printf 36 4>

1212:
old  <	; Assign index 0>
new  <	mov qword [rbp + 36], main$4>

1213:
old  <	mov dword [rbp + 36], 0>
new  <	mov [rbp + 44], rbp>

1214:
old  <>
new  <	add rbp, 36>

1215:
old  < main$25:>
new  <	mov rdi, rbp>

1216:
old  <	; IntegralToIntegral Â£temporary76 index>
new  <	add rdi, 4>

1217:
old  <	mov eax, [rbp + 36]>
new  <	jmp printf>

1218:
old  <	mov rbx, 4294967295>
new  <>

1219:
old  <	and rax, rbx>
new  < main$4:>

1220:
old  <>
new  <	; PostCall 36>

1221:
old  < main$26:>
new  <>

1222:
old  <	; UnsignedMultiply Â£temporary77 Â£temporary76 8>
new  < main$5:>

1223:
old  <	xor rdx, rdx>
new  <	; Assign index 0>

1224:
old  <	mul qword [int8$8#]>
new  <	mov dword [rbp + 36], 0>

1226:
old  < main$27:>
new  < main$6:>

1227:
old  <	; BinaryAdd Â£temporary78 argv Â£temporary77>
new  <	; SignedGreaterThanEqual 19 index argc>

1228:
old  <	mov rsi, [rbp + 28]>
new  <	mov eax, [rbp + 24]>

1229:
old  <	add rsi, rax>
new  <	cmp [rbp + 36], eax>

1230:
old  <>
new  <	jge main$19>

1231:
old  < main$28:>
new  <>

1232:
old  <	; Dereference Â£temporary75 -> Â£temporary78 Â£temporary78 0>
new  < main$7:>

1233:
old  <>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1234:
old  < main$29:>
new  <>

1235:
old  <	; Equal 42 Â£temporary75 -> Â£temporary78 0>
new  < main$8:>

1236:
old  <	cmp qword [rsi], 0>
new  <	; Parameter pointer "%i: <%s>\n" 64>

1237:
old  <	je main$42>
new  <	mov qword [rbp + 64], string_25i3A203C25s3E0A#>

1239:
old  < main$30:>
new  < main$9:>

1240:
old  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter signedint index 72>

1241:
old  <>
new  <	mov eax, [rbp + 36]>

1242:
old  < main$31:>
new  <	mov [rbp + 72], eax>

1243:
old  <	; Parameter pointer "%i: <%s>\n" 64>
new  <>

1244:
old  <	mov qword [rbp + 64], string_25i3A203C25s3E0A#>
new  < main$10:>

1245:
old  <>
new  <	; IntegralToIntegral Â£temporary79 index>

1246:
old  < main$32:>
new  <	mov eax, [rbp + 36]>

1247:
old  <	; Parameter signedint index 72>
new  <	mov rbx, 4294967295>

1248:
old  <	mov eax, [rbp + 36]>
new  <	and rax, rbx>

1249:
old  <	mov [rbp + 72], eax>
new  <>

1250:
old  <>
new  < main$11:>

1251:
old  < main$33:>
new  <	; UnsignedMultiply Â£temporary80 Â£temporary79 8>

1252:
old  <	; IntegralToIntegral Â£temporary82 index>
new  <	xor rdx, rdx>

1253:
old  <	mov eax, [rbp + 36]>
new  <	mul qword [int8$8#]>

1254:
old  <	mov rbx, 4294967295>
new  <>

1255:
old  <	and rax, rbx>
new  < main$12:>

1256:
old  <>
new  <	; BinaryAdd Â£temporary81 argv Â£temporary80>

1257:
old  < main$34:>
new  <	mov rsi, [rbp + 28]>

1258:
old  <	; UnsignedMultiply Â£temporary83 Â£temporary82 8>
new  <	add rsi, rax>

1259:
old  <	xor rdx, rdx>
new  <>

1260:
old  <	mul qword [int8$8#]>
new  < main$13:>

1261:
old  <>
new  <	; Dereference Â£temporary78 -> Â£temporary81 Â£temporary81 0>

1262:
old  < main$35:>
new  <>

1263:
old  <	; BinaryAdd Â£temporary84 argv Â£temporary83>
new  < main$14:>

1264:
old  <	mov rsi, [rbp + 28]>
new  <	; Parameter pointer Â£temporary78 -> Â£temporary81 76>

1265:
old  <	add rsi, rax>
new  <	mov rax, [rsi]>

1266:
old  <>
new  <	mov [rbp + 76], rax>

1267:
old  < main$36:>
new  <>

1268:
old  <	; Dereference Â£temporary81 -> Â£temporary84 Â£temporary84 0>
new  < main$15:>

1269:
old  <>
new  <	; Call printf 40 12>

1270:
old  < main$37:>
new  <	mov qword [rbp + 40], main$16>

1271:
old  <	; Parameter pointer Â£temporary81 -> Â£temporary84 76>
new  <	mov [rbp + 48], rbp>

1272:
old  <	mov rax, [rsi]>
new  <	add rbp, 40>

1273:
old  <	mov [rbp + 76], rax>
new  <	mov rdi, rbp>

1274:
old  <>
new  <	add rdi, 12>

1275:
old  < main$38:>
new  <	jmp printf>

1276:
old  <	; Call printf 40 12>
new  <>

1277:
old  <	mov qword [rbp + 40], main$39>
new  < main$16:>

1278:
old  <	mov [rbp + 48], rbp>
new  <	; PostCall 40>

1279:
old  <	add rbp, 40>
new  <>

1280:
old  <	mov rdi, rbp>
new  < main$17:>

1281:
old  <	add rdi, 12>
new  <	; BinaryAdd index index 1>

1282:
old  <	jmp printf>
new  <	inc dword [rbp + 36]>

1284:
old  < main$39:>
new  < main$18:>

1285:
old  <	; PostCall 40>
new  <	; Goto 6>

1286:
old  <>
new  <	jmp main$6>

1287:
old  < main$40:>
new  <>

1288:
old  <	; BinaryAdd index index 1>
new  < main$19:>

1289:
old  <	inc dword [rbp + 36]>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1291:
old  < main$41:>
new  < main$20:>

1292:
old  <	; Goto 25>
new  <	; Parameter pointer "\n" 64>

1293:
old  <	jmp main$25>
new  <	mov qword [rbp + 64], string_0A#>

1295:
old  < main$42:>
new  < main$21:>

1296:
old  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Call printf 40 0>

1297:
old  <>
new  <	mov qword [rbp + 40], main$22>

1298:
old  < main$43:>
new  <	mov [rbp + 48], rbp>

1299:
old  <	; Parameter pointer "\n" 64>
new  <	add rbp, 40>

1300:
old  <	mov qword [rbp + 64], string_0A#>
new  <	mov rdi, rbp>

1301:
old  <>
new  <	jmp printf>

1302:
old  < main$44:>
new  <>

1303:
old  <	; Call printf 40 0>
new  < main$22:>

1304:
old  <	mov qword [rbp + 40], main$45>
new  <	; PostCall 40>

1305:
old  <	mov [rbp + 48], rbp>
new  <>

1306:
old  <	add rbp, 40>
new  < main$23:>

1307:
old  <	mov rdi, rbp>
new  <	; Assign index 0>

1308:
old  <	jmp printf>
new  <	mov dword [rbp + 36], 0>

1310:
old  < main$45:>
new  < main$24:>

1311:
old  <	; PostCall 40>
new  <	; IntegralToIntegral Â£temporary85 index>

1312:
old  <>
new  <	mov eax, [rbp + 36]>

1313:
old  < main$46:>
new  <	mov rbx, 4294967295>

1314:
old  <	; PreCall 73 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	and rax, rbx>

1316:
old  < main$47:>
new  < main$25:>

1317:
old  <	; Parameter pointer 0 97>
new  <	; UnsignedMultiply Â£temporary86 Â£temporary85 8>

1318:
old  <	mov qword [rbp + 97], 0>
new  <	xor rdx, rdx>

1319:
old  <>
new  <	mul qword [int8$8#]>

1320:
old  < main$48:>
new  <>

1321:
old  <	; Call mktime 73 0>
new  < main$26:>

1322:
old  <	mov qword [rbp + 73], main$49>
new  <	; BinaryAdd Â£temporary87 argv Â£temporary86>

1323:
old  <	mov [rbp + 81], rbp>
new  <	mov rsi, [rbp + 28]>

1324:
old  <	add rbp, 73>
new  <	add rsi, rax>

1325:
old  <	jmp mktime>
new  <>

1326:
old  <>
new  < main$27:>

1327:
old  < main$49:>
new  <	; Dereference Â£temporary84 -> Â£temporary87 Â£temporary87 0>

1328:
old  <	; PostCall 73>
new  <>

1329:
old  <>
new  < main$28:>

1330:
old  < main$50:>
new  <	; Equal 41 Â£temporary84 -> Â£temporary87 0>

1331:
old  <	; PreCall 73 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	cmp qword [rsi], 0>

1332:
old  <>
new  <	je main$41>

1333:
old  < main$51:>
new  <>

1334:
old  <	; Parameter pointer "Hello!\n" 97>
new  < main$29:>

1335:
old  <	mov qword [rbp + 97], string_Hello210A#>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1337:
old  < main$52:>
new  < main$30:>

1338:
old  <	; Call printf 73 0>
new  <	; Parameter pointer "%i: <%s>\n" 64>

1339:
old  <	mov qword [rbp + 73], main$53>
new  <	mov qword [rbp + 64], string_25i3A203C25s3E0A#>

1340:
old  <	mov [rbp + 81], rbp>
new  <>

1341:
old  <	add rbp, 73>
new  < main$31:>

1342:
old  <	mov rdi, rbp>
new  <	; Parameter signedint index 72>

1343:
old  <	jmp printf>
new  <	mov eax, [rbp + 36]>

1344:
old  <>
new  <	mov [rbp + 72], eax>

1345:
old  < main$53:>
new  <>

1346:
old  <	; PostCall 73>
new  < main$32:>

1347:
old  <>
new  <	; IntegralToIntegral Â£temporary91 index>

1348:
old  < main$54:>
new  <	mov eax, [rbp + 36]>

1349:
old  <	; PreCall 73 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov rbx, 4294967295>

1350:
old  <>
new  <	and rax, rbx>

1351:
old  < main$55:>
new  <>

1352:
old  <	; Parameter pointer "Please write a character, a string, an integer, and a double: " 97>
new  < main$33:>

1353:
old  <	mov qword [rbp + 97], string_Please20write20a20character2C20a20string2C20an20integer2C20and20a20double3A20#>
new  <	; UnsignedMultiply Â£temporary92 Â£temporary91 8>

1354:
old  <>
new  <	xor rdx, rdx>

1355:
old  < main$56:>
new  <	mul qword [int8$8#]>

1356:
old  <	; Call printf 73 0>
new  <>

1357:
old  <	mov qword [rbp + 73], main$57>
new  < main$34:>

1358:
old  <	mov [rbp + 81], rbp>
new  <	; BinaryAdd Â£temporary93 argv Â£temporary92>

1359:
old  <	add rbp, 73>
new  <	mov rsi, [rbp + 28]>

1360:
old  <	mov rdi, rbp>
new  <	add rsi, rax>

1361:
old  <	jmp printf>
new  <>

1362:
old  <>
new  < main$35:>

1363:
old  < main$57:>
new  <	; Dereference Â£temporary90 -> Â£temporary93 Â£temporary93 0>

1364:
old  <	; PostCall 73>
new  <>

1365:
old  <>
new  < main$36:>

1366:
old  < main$58:>
new  <	; Parameter pointer Â£temporary90 -> Â£temporary93 76>

1367:
old  <	; PreCall 73 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov rax, [rsi]>

1368:
old  <>
new  <	mov [rbp + 76], rax>

1369:
old  < main$59:>
new  <>

1370:
old  <	; Parameter pointer "%c %s %i %lf" 97>
new  < main$37:>

1371:
old  <	mov qword [rbp + 97], string_25c2025s2025i2025lf#>
new  <	; Call printf 40 12>

1372:
old  <>
new  <	mov qword [rbp + 40], main$38>

1373:
old  < main$60:>
new  <	mov [rbp + 48], rbp>

1374:
old  <	; Address Â£temporary90 c>
new  <	add rbp, 40>

1375:
old  <	mov rsi, rbp>
new  <	mov rdi, rbp>

1376:
old  <	add rsi, 52>
new  <	add rdi, 12>

1377:
old  <>
new  <	jmp printf>

1378:
old  < main$61:>
new  <>

1379:
old  <	; Parameter pointer Â£temporary90 105>
new  < main$38:>

1380:
old  <	mov [rbp + 105], rsi>
new  <	; PostCall 40>

1382:
old  < main$62:>
new  < main$39:>

1383:
old  <	; Parameter pointer s 113>
new  <	; BinaryAdd index index 1>

1384:
old  <	mov [rbp + 113], rbp>
new  <	inc dword [rbp + 36]>

1385:
old  <	add qword [rbp + 113], 53>
new  <>

1386:
old  <>
new  < main$40:>

1387:
old  < main$63:>
new  <	; Goto 24>

1388:
old  <	; Address Â£temporary91 i>
new  <	jmp main$24>

1389:
old  <	mov rsi, rbp>
new  <>

1390:
old  <	add rsi, 40>
new  < main$41:>

1391:
old  <>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1392:
old  < main$64:>
new  <>

1393:
old  <	; Parameter pointer Â£temporary91 121>
new  < main$42:>

1394:
old  <	mov [rbp + 121], rsi>
new  <	; Parameter pointer "\n" 64>

1395:
old  <>
new  <	mov qword [rbp + 64], string_0A#>

1396:
old  < main$65:>
new  <>

1397:
old  <	; Address Â£temporary92 d>
new  < main$43:>

1398:
old  <	mov rsi, rbp>
new  <	; Call printf 40 0>

1399:
old  <	add rsi, 44>
new  <	mov qword [rbp + 40], main$44>

1400:
old  <>
new  <	mov [rbp + 48], rbp>

1401:
old  < main$66:>
new  <	add rbp, 40>

1402:
old  <	; Parameter pointer Â£temporary92 129>
new  <	mov rdi, rbp>

1403:
old  <	mov [rbp + 129], rsi>
new  <	jmp printf>

1405:
old  < main$67:>
new  < main$44:>

1406:
old  <	; Call scanf 73 32>
new  <	; PostCall 40>

1407:
old  <	mov qword [rbp + 73], main$68>
new  <>

1408:
old  <	mov [rbp + 81], rbp>
new  < main$45:>

1409:
old  <	add rbp, 73>
new  <	; PreCall 73 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1410:
old  <	mov rdi, rbp>
new  <>

1411:
old  <	add rdi, 32>
new  < main$46:>

1412:
old  <	jmp scanf>
new  <	; Parameter pointer 0 97>

1413:
old  <>
new  <	mov qword [rbp + 97], 0>

1414:
old  < main$68:>
new  <>

1415:
old  <	; PostCall 73>
new  < main$47:>

1416:
old  <>
new  <	; Call mktime 73 0>

1417:
old  < main$69:>
new  <	mov qword [rbp + 73], main$48>

1418:
old  <	; PreCall 73 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov [rbp + 81], rbp>

1419:
old  <>
new  <	add rbp, 73>

1420:
old  < main$70:>
new  <	jmp mktime>

1421:
old  <	; Parameter pointer "You wrote the character '%c', the string "%s", the integer %i, and the double %f.\n" 97>
new  <>

1422:
old  <	mov qword [rbp + 97], string_You20wrote20the20character202725c272C20the20string202225s222C20the20integer2025i2C20and20the20double2025f2E0A#>
new  < main$48:>

1423:
old  <>
new  <	; PostCall 73>

1424:
old  < main$71:>
new  <>

1425:
old  <	; IntegralToIntegral Â£temporary94 c>
new  < main$49:>

1426:
old  <	mov al, [rbp + 52]>
new  <	; PreCall 73 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1427:
old  <	and eax, 255>
new  <>

1428:
old  <	cmp al, 0>
new  < main$50:>

1429:
old  <	jge main$72>
new  <	; Parameter pointer "Hello!\n" 97>

1430:
old  <	neg al>
new  <	mov qword [rbp + 97], string_Hello210A#>

1431:
old  <	neg eax>
new  <>

1432:
old  <>
new  < main$51:>

1433:
old  < main$72:>
new  <	; Call printf 73 0>

1434:
old  <	; Parameter signedint Â£temporary94 105>
new  <	mov qword [rbp + 73], main$52>

1435:
old  <	mov [rbp + 105], eax>
new  <	mov [rbp + 81], rbp>

1436:
old  <>
new  <	add rbp, 73>

1437:
old  < main$73:>
new  <	mov rdi, rbp>

1438:
old  <	; Parameter pointer s 109>
new  <	jmp printf>

1439:
old  <	mov [rbp + 109], rbp>
new  <>

1440:
old  <	add qword [rbp + 109], 53>
new  < main$52:>

1441:
old  <>
new  <	; PostCall 73>

1442:
old  < main$74:>
new  <>

1443:
old  <	; Parameter signedint i 117>
new  < main$53:>

1444:
old  <	mov eax, [rbp + 40]>
new  <	; PreCall 73 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1445:
old  <	mov [rbp + 117], eax>
new  <>

1446:
old  <>
new  < main$54:>

1447:
old  < main$75:>
new  <	; Parameter pointer "Please write a character, a string, an integer, and a double: " 97>

1448:
old  <	; PushFloat d>
new  <	mov qword [rbp + 97], string_Please20write20a20character2C20a20string2C20an20integer2C20and20a20double3A20#>

1449:
old  <	fld qword [rbp + 44]>
new  <>

1450:
old  <>
new  < main$55:>

1451:
old  < main$76:>
new  <	; Call printf 73 0>

1452:
old  <	; Parameter double d 121>
new  <	mov qword [rbp + 73], main$56>

1453:
old  <	fstp qword [rbp + 121]>
new  <	mov [rbp + 81], rbp>

1454:
old  <>
new  <	add rbp, 73>

1455:
old  < main$77:>
new  <	mov rdi, rbp>

1456:
old  <	; Call printf 73 24>
new  <	jmp printf>

1457:
old  <	mov qword [rbp + 73], main$78>
new  <>

1458:
old  <	mov [rbp + 81], rbp>
new  < main$56:>

1459:
old  <	add rbp, 73>
new  <	; PostCall 73>

1460:
old  <	mov rdi, rbp>
new  <>

1461:
old  <	add rdi, 24>
new  < main$57:>

1462:
old  <	jmp printf>
new  <	; PreCall 73 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1464:
old  < main$78:>
new  < main$58:>

1465:
old  <	; PostCall 73>
new  <	; Parameter pointer "%c %s %i %lf" 97>

1466:
old  <>
new  <	mov qword [rbp + 97], string_25c2025s2025i2025lf#>

1467:
old  < main$79:>
new  <>

1468:
old  <	; Return>
new  < main$59:>

1469:
old  <	cmp qword [rbp], 0>
new  <	; Address Â£temporary99 c>

1470:
old  <	je label$0>
new  <	mov rsi, rbp>

1471:
old  <	mov rax, [rbp]>
new  <	add rsi, 52>

1472:
old  <	mov rdi, [rbp + 16]>
new  <>

1473:
old  <	mov rbp, [rbp + 8]>
new  < main$60:>

1474:
old  <	jmp rax>
new  <	; Parameter pointer Â£temporary99 105>

1475:
old  <>
new  <	mov [rbp + 105], rsi>

1476:
old  < label$0:>
new  <>

1477:
old  <	mov rdi, 0>
new  < main$61:>

1478:
old  <	mov rax, 60>
new  <	; Parameter pointer s 113>

1479:
old  <	syscall>
new  <	mov [rbp + 113], rbp>

1480:
old  <>
new  <	add qword [rbp + 113], 53>

1481:
old  < main$80:>
new  <>

1482:
old  <	; FunctionEnd main>
new  < main$62:>

1483:
old  <>
new  <	; Address Â£temporary100 i>

1484:
old  <section .data>
new  <	mov rsi, rbp>

1485:
old  <>
new  <	add rsi, 40>

1486:
old  <string_3A20#:>
new  <>

1487:
old  <	; Initializer String : >
new  < main$63:>

1488:
old  <	db ": ", 0>
new  <	; Parameter pointer Â£temporary100 121>

1489:
old  <>
new  <	mov [rbp + 121], rsi>

1490:
old  <section .data>
new  <>

1491:
old  <>
new  < main$64:>

1492:
old  <string_25lf#:>
new  <	; Address Â£temporary101 d>

1493:
old  <	; Initializer String %lf>
new  <	mov rsi, rbp>

1494:
old  <	db "%lf", 0>
new  <	add rsi, 44>

1496:
old  <section .data>
new  < main$65:>

1497:
old  <>
new  <	; Parameter pointer Â£temporary101 129>

1498:
old  <string_3C25f3E#:>
new  <	mov [rbp + 129], rsi>

1499:
old  <	; Initializer String <%f>>
new  <>

1500:
old  <	db "<%f>", 0>
new  < main$66:>

1501:
old  <>
new  <	; Call scanf 73 32>

1502:
old  <section .text>
new  <	mov qword [rbp + 73], main$67>

1503:
old  <>
new  <	mov [rbp + 81], rbp>

1504:
old  < main3:>
new  <	add rbp, 73>

1505:
old  <	; Empty>
new  <	mov rdi, rbp>

1506:
old  <>
new  <	add rdi, 32>

1507:
old  < main3$1:>
new  <	jmp scanf>

1508:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1509:
old  <>
new  < main$67:>

1510:
old  < main3$2:>
new  <	; PostCall 73>

1511:
old  <	; Parameter pointer ": " 56>
new  <>

1512:
old  <	mov qword [rbp + 56], string_3A20#>
new  < main$68:>

1513:
old  <>
new  <	; PreCall 73 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1514:
old  < main3$3:>
new  <>

1515:
old  <	; Call printf 32 0>
new  < main$69:>

1516:
old  <	mov qword [rbp + 32], main3$4>
new  <	; Parameter pointer "You wrote the character '%c', the string "%s", the integer %i, and the double %f.\n" 97>

1517:
old  <	mov [rbp + 40], rbp>
new  <	mov qword [rbp + 97], string_You20wrote20the20character202725c272C20the20string202225s222C20the20integer2025i2C20and20the20double2025f2E0A#>

1518:
old  <	add rbp, 32>
new  <>

1519:
old  <	mov rdi, rbp>
new  < main$70:>

1520:
old  <	jmp printf>
new  <	; IntegralToIntegral Â£temporary103 c>

1521:
old  <>
new  <	mov al, [rbp + 52]>

1522:
old  < main3$4:>
new  <	and eax, 255>

1523:
old  <	; PostCall 32>
new  <	cmp al, 0>

1524:
old  <>
new  <	jge main$71>

1525:
old  < main3$5:>
new  <	neg al>

1526:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	neg eax>

1528:
old  < main3$6:>
new  < main$71:>

1529:
old  <	; Parameter pointer "%lf" 56>
new  <	; Parameter signedint Â£temporary103 105>

1530:
old  <	mov qword [rbp + 56], string_25lf#>
new  <	mov [rbp + 105], eax>

1532:
old  < main3$7:>
new  < main$72:>

1533:
old  <	; Address Â£temporary101 x>
new  <	; Parameter pointer s 109>

1534:
old  <	mov rsi, rbp>
new  <	mov [rbp + 109], rbp>

1535:
old  <	add rsi, 24>
new  <	add qword [rbp + 109], 53>

1537:
old  < main3$8:>
new  < main$73:>

1538:
old  <	; Parameter pointer Â£temporary101 64>
new  <	; Parameter signedint i 117>

1539:
old  <	mov [rbp + 64], rsi>
new  <	mov eax, [rbp + 40]>

1540:
old  <>
new  <	mov [rbp + 117], eax>

1541:
old  < main3$9:>
new  <>

1542:
old  <	; Call scanf 32 8>
new  < main$74:>

1543:
old  <	mov qword [rbp + 32], main3$10>
new  <	; PushFloat d>

1544:
old  <	mov [rbp + 40], rbp>
new  <	fld qword [rbp + 44]>

1545:
old  <	add rbp, 32>
new  <>

1546:
old  <	mov rdi, rbp>
new  < main$75:>

1547:
old  <	add rdi, 8>
new  <	; Parameter double d 121>

1548:
old  <	jmp scanf>
new  <	fstp qword [rbp + 121]>

1550:
old  < main3$10:>
new  < main$76:>

1551:
old  <	; PostCall 32>
new  <	; Call printf 73 24>

1552:
old  <>
new  <	mov qword [rbp + 73], main$77>

1553:
old  < main3$11:>
new  <	mov [rbp + 81], rbp>

1554:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	add rbp, 73>

1555:
old  <>
new  <	mov rdi, rbp>

1556:
old  < main3$12:>
new  <	add rdi, 24>

1557:
old  <	; Parameter pointer "<%f>" 56>
new  <	jmp printf>

1558:
old  <	mov qword [rbp + 56], string_3C25f3E#>
new  <>

1559:
old  <>
new  < main$77:>

1560:
old  < main3$13:>
new  <	; PostCall 73>

1561:
old  <	; PushFloat x>
new  <>

1562:
old  <	fld qword [rbp + 24]>
new  < main$78:>

1563:
old  <>
new  <	; Return>

1564:
old  < main3$14:>
new  <	cmp qword [rbp], 0>

1565:
old  <	; Parameter double x 64>
new  <	je label$0>

1566:
old  <	fstp qword [rbp + 64]>
new  <	mov rax, [rbp]>

1567:
old  <>
new  <	mov rdi, [rbp + 16]>

1568:
old  < main3$15:>
new  <	mov rbp, [rbp + 8]>

1569:
old  <	; Call printf 32 8>
new  <	jmp rax>

1570:
old  <	mov qword [rbp + 32], main3$16>
new  <>

1571:
old  <	mov [rbp + 40], rbp>
new  < label$0:>

1572:
old  <	add rbp, 32>
new  <	mov rdi, 0>

1573:
old  <	mov rdi, rbp>
new  <	mov rax, 60>

1574:
old  <	add rdi, 8>
new  <	syscall>

1575:
old  <	jmp printf>
new  <>

1576:
old  <>
new  < main$79:>

1577:
old  < main3$16:>
new  <	; FunctionEnd main>

1578:
old  <	; PostCall 32>
new  <>

1579:
old  <>
new  <section .data>

1580:
old  < main3$17:>
new  <>

1581:
old  <	; Return>
new  <string_3A20#:>

1582:
old  <	mov rax, [rbp]>
new  <	; Initializer String : >

1583:
old  <	mov rdi, [rbp + 16]>
new  <	db ": ", 0>

1584:
old  <	mov rbp, [rbp + 8]>
new  <>

1585:
old  <	jmp rax>
new  <section .data>

1587:
old  < main3$18:>
new  <string_25lf#:>

1588:
old  <	; FunctionEnd main3>
new  <	; Initializer String %lf>

1589:
old  <>
new  <	db "%lf", 0>

1590:
old  <section .data>
new  <>

1591:
old  <>
new  <section .data>

1592:
old  <string_2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D0A#:>
new  <>

1593:
old  <	; Initializer String ---------------------------------------------\n>
new  <string_3C25f3E#:>

1594:
old  <	db "---------------------------------------------", 10, 0>
new  <	; Initializer String <%f>>

1595:
old  <>
new  <	db "<%f>", 0>

1596:
old  <section .data>
new  <>

1597:
old  <>
new  <section .text>

1598:
old  <float8$3.14#:>
new  <>

1599:
old  <	; Initializer Double 3.14>
new  < main3:>

1600:
old  <	dq 3.14>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1602:
old  <section .data>
new  < main3$1:>

1603:
old  <>
new  <	; Parameter pointer ": " 56>

1604:
old  <float8$2.71#:>
new  <	mov qword [rbp + 56], string_3A20#>

1605:
old  <	; Initializer Double 2.71>
new  <>

1606:
old  <	dq 2.71>
new  < main3$2:>

1607:
old  <>
new  <	; Call printf 32 0>

1608:
old  <section .text>
new  <	mov qword [rbp + 32], main3$3>

1609:
old  <>
new  <	mov [rbp + 40], rbp>

1610:
old  < mains2:>
new  <	add rbp, 32>

1611:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov rdi, rbp>

1612:
old  <>
new  <	jmp printf>

1613:
old  < mains2$1:>
new  <>

1614:
old  <	; PushFloat 3.14>
new  < main3$3:>

1615:
old  <	fld qword [float8$3.14#]>
new  <	; PostCall 32>

1617:
old  < mains2$2:>
new  < main3$4:>

1618:
old  <	; Parameter double 3.14 48>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1619:
old  <	fstp qword [rbp + 48]>
new  <>

1620:
old  <>
new  < main3$5:>

1621:
old  < mains2$3:>
new  <	; Parameter pointer "%lf" 56>

1622:
old  <	; Call setjmp_test 24 0>
new  <	mov qword [rbp + 56], string_25lf#>

1623:
old  <	mov qword [rbp + 24], mains2$4>
new  <>

1624:
old  <	mov [rbp + 32], rbp>
new  < main3$6:>

1625:
old  <	add rbp, 24>
new  <	; Address Â£temporary110 x>

1626:
old  <	jmp setjmp_test>
new  <	mov rsi, rbp>

1627:
old  <>
new  <	add rsi, 24>

1628:
old  < mains2$4:>
new  <>

1629:
old  <	; PostCall 24>
new  < main3$7:>

1630:
old  <>
new  <	; Parameter pointer Â£temporary110 64>

1631:
old  < mains2$5:>
new  <	mov [rbp + 64], rsi>

1632:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1633:
old  <>
new  < main3$8:>

1634:
old  < mains2$6:>
new  <	; Call scanf 32 8>

1635:
old  <	; Parameter pointer "---------------------------------------------\n" 48>
new  <	mov qword [rbp + 32], main3$9>

1636:
old  <	mov qword [rbp + 48], string_2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D0A#>
new  <	mov [rbp + 40], rbp>

1637:
old  <>
new  <	add rbp, 32>

1638:
old  < mains2$7:>
new  <	mov rdi, rbp>

1639:
old  <	; Call printf 24 0>
new  <	add rdi, 8>

1640:
old  <	mov qword [rbp + 24], mains2$8>
new  <	jmp scanf>

1641:
old  <	mov [rbp + 32], rbp>
new  <>

1642:
old  <	add rbp, 24>
new  < main3$9:>

1643:
old  <	mov rdi, rbp>
new  <	; PostCall 32>

1644:
old  <	jmp printf>
new  <>

1645:
old  <>
new  < main3$10:>

1646:
old  < mains2$8:>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1647:
old  <	; PostCall 24>
new  <>

1648:
old  <>
new  < main3$11:>

1649:
old  < mains2$9:>
new  <	; Parameter pointer "<%f>" 56>

1650:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov qword [rbp + 56], string_3C25f3E#>

1652:
old  < mains2$10:>
new  < main3$12:>

1653:
old  <	; PushFloat 0>
new  <	; PushFloat x>

1654:
old  <	fldz>
new  <	fld qword [rbp + 24]>

1656:
old  < mains2$11:>
new  < main3$13:>

1657:
old  <	; Parameter double 0 48>
new  <	; Parameter double x 64>

1658:
old  <	fstp qword [rbp + 48]>
new  <	fstp qword [rbp + 64]>

1660:
old  < mains2$12:>
new  < main3$14:>

1661:
old  <	; Call setjmp_test 24 0>
new  <	; Call printf 32 8>

1662:
old  <	mov qword [rbp + 24], mains2$13>
new  <	mov qword [rbp + 32], main3$15>

1663:
old  <	mov [rbp + 32], rbp>
new  <	mov [rbp + 40], rbp>

1664:
old  <	add rbp, 24>
new  <	add rbp, 32>

1665:
old  <	jmp setjmp_test>
new  <	mov rdi, rbp>

1666:
old  <>
new  <	add rdi, 8>

1667:
old  < mains2$13:>
new  <	jmp printf>

1668:
old  <	; PostCall 24>
new  <>

1669:
old  <>
new  < main3$15:>

1670:
old  < mains2$14:>
new  <	; PostCall 32>

1671:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1672:
old  <>
new  < main3$16:>

1673:
old  < mains2$15:>
new  <	; Return>

1674:
old  <	; Parameter pointer "---------------------------------------------\n" 48>
new  <	mov rax, [rbp]>

1675:
old  <	mov qword [rbp + 48], string_2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D0A#>
new  <	mov rdi, [rbp + 16]>

1676:
old  <>
new  <	mov rbp, [rbp + 8]>

1677:
old  < mains2$16:>
new  <	jmp rax>

1678:
old  <	; Call printf 24 0>
new  <>

1679:
old  <	mov qword [rbp + 24], mains2$17>
new  < main3$17:>

1680:
old  <	mov [rbp + 32], rbp>
new  <	; FunctionEnd main3>

1681:
old  <	add rbp, 24>
new  <>

1682:
old  <	mov rdi, rbp>
new  <section .data>

1683:
old  <	jmp printf>
new  <>

1684:
old  <>
new  <string_2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D0A#:>

1685:
old  < mains2$17:>
new  <	; Initializer String ---------------------------------------------\n>

1686:
old  <	; PostCall 24>
new  <	db "---------------------------------------------", 10, 0>

1688:
old  < mains2$18:>
new  <section .data>

1689:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1690:
old  <>
new  <float8$3.14#:>

1691:
old  < mains2$19:>
new  <	; Initializer Double 3.14>

1692:
old  <	; PushFloat 2.71>
new  <	dq 3.14>

1693:
old  <	fld qword [float8$2.71#]>
new  <>

1694:
old  <>
new  <section .data>

1695:
old  < mains2$20:>
new  <>

1696:
old  <	; Parameter double 2.71 48>
new  <float8$2.71#:>

1697:
old  <	fstp qword [rbp + 48]>
new  <	; Initializer Double 2.71>

1698:
old  <>
new  <	dq 2.71>

1699:
old  < mains2$21:>
new  <>

1700:
old  <	; Call setjmp_test 24 0>
new  <section .text>

1701:
old  <	mov qword [rbp + 24], mains2$22>
new  <>

1702:
old  <	mov [rbp + 32], rbp>
new  < mains2:>

1703:
old  <	add rbp, 24>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1704:
old  <	jmp setjmp_test>
new  <>

1705:
old  <>
new  < mains2$1:>

1706:
old  < mains2$22:>
new  <	; PushFloat 3.14>

1707:
old  <	; PostCall 24>
new  <	fld qword [float8$3.14#]>

1709:
old  < mains2$23:>
new  < mains2$2:>

1710:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter double 3.14 48>

1711:
old  <>
new  <	fstp qword [rbp + 48]>

1712:
old  < mains2$24:>
new  <>

1713:
old  <	; Parameter pointer "---------------------------------------------\n" 48>
new  < mains2$3:>

1714:
old  <	mov qword [rbp + 48], string_2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D0A#>
new  <	; Call setjmp_test 24 0>

1715:
old  <>
new  <	mov qword [rbp + 24], mains2$4>

1716:
old  < mains2$25:>
new  <	mov [rbp + 32], rbp>

1717:
old  <	; Call printf 24 0>
new  <	add rbp, 24>

1718:
old  <	mov qword [rbp + 24], mains2$26>
new  <	jmp setjmp_test>

1719:
old  <	mov [rbp + 32], rbp>
new  <>

1720:
old  <	add rbp, 24>
new  < mains2$4:>

1721:
old  <	mov rdi, rbp>
new  <	; PostCall 24>

1722:
old  <	jmp printf>
new  <>

1723:
old  <>
new  < mains2$5:>

1724:
old  < mains2$26:>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1725:
old  <	; PostCall 24>
new  <>

1726:
old  <>
new  < mains2$6:>

1727:
old  < mains2$27:>
new  <	; Parameter pointer "---------------------------------------------\n" 48>

1728:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov qword [rbp + 48], string_2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D0A#>

1730:
old  < mains2$28:>
new  < mains2$7:>

1731:
old  <	; PushFloat 0>
new  <	; Call printf 24 0>

1732:
old  <	fldz>
new  <	mov qword [rbp + 24], mains2$8>

1733:
old  <>
new  <	mov [rbp + 32], rbp>

1734:
old  < mains2$29:>
new  <	add rbp, 24>

1735:
old  <	; Parameter double 0 48>
new  <	mov rdi, rbp>

1736:
old  <	fstp qword [rbp + 48]>
new  <	jmp printf>

1738:
old  < mains2$30:>
new  < mains2$8:>

1739:
old  <	; Call setjmp_test 24 0>
new  <	; PostCall 24>

1740:
old  <	mov qword [rbp + 24], mains2$31>
new  <>

1741:
old  <	mov [rbp + 32], rbp>
new  < mains2$9:>

1742:
old  <	add rbp, 24>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1743:
old  <	jmp setjmp_test>
new  <>

1744:
old  <>
new  < mains2$10:>

1745:
old  < mains2$31:>
new  <	; PushFloat 0>

1746:
old  <	; PostCall 24>
new  <	fldz>

1748:
old  < mains2$32:>
new  < mains2$11:>

1749:
old  <	; Return>
new  <	; Parameter double 0 48>

1750:
old  <	mov rax, [rbp]>
new  <	fstp qword [rbp + 48]>

1751:
old  <	mov rdi, [rbp + 16]>
new  <>

1752:
old  <	mov rbp, [rbp + 8]>
new  < mains2$12:>

1753:
old  <	jmp rax>
new  <	; Call setjmp_test 24 0>

1754:
old  <>
new  <	mov qword [rbp + 24], mains2$13>

1755:
old  < mains2$33:>
new  <	mov [rbp + 32], rbp>

1756:
old  <	; FunctionEnd mains2>
new  <	add rbp, 24>

1757:
old  <>
new  <	jmp setjmp_test>

1758:
old  <section .text>
new  <>

1759:
old  <>
new  < mains2$13:>

1760:
old  < char_main:>
new  <	; PostCall 24>

1761:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1762:
old  <>
new  < mains2$14:>

1763:
old  < char_main$1:>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1764:
old  <	; Parameter signedchar 97 48>
new  <>

1765:
old  <	mov byte [rbp + 48], 97>
new  < mains2$15:>

1766:
old  <>
new  <	; Parameter pointer "---------------------------------------------\n" 48>

1767:
old  < char_main$2:>
new  <	mov qword [rbp + 48], string_2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D0A#>

1768:
old  <	; Call character_test 24 0>
new  <>

1769:
old  <	mov qword [rbp + 24], char_main$3>
new  < mains2$16:>

1770:
old  <	mov [rbp + 32], rbp>
new  <	; Call printf 24 0>

1771:
old  <	add rbp, 24>
new  <	mov qword [rbp + 24], mains2$17>

1772:
old  <	jmp character_test>
new  <	mov [rbp + 32], rbp>

1773:
old  <>
new  <	add rbp, 24>

1774:
old  < char_main$3:>
new  <	mov rdi, rbp>

1775:
old  <	; PostCall 24>
new  <	jmp printf>

1777:
old  < char_main$4:>
new  < mains2$17:>

1778:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; PostCall 24>

1780:
old  < char_main$5:>
new  < mains2$18:>

1781:
old  <	; Parameter signedchar 66 48>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1782:
old  <	mov byte [rbp + 48], 66>
new  <>

1783:
old  <>
new  < mains2$19:>

1784:
old  < char_main$6:>
new  <	; PushFloat 2.71>

1785:
old  <	; Call character_test 24 0>
new  <	fld qword [float8$2.71#]>

1786:
old  <	mov qword [rbp + 24], char_main$7>
new  <>

1787:
old  <	mov [rbp + 32], rbp>
new  < mains2$20:>

1788:
old  <	add rbp, 24>
new  <	; Parameter double 2.71 48>

1789:
old  <	jmp character_test>
new  <	fstp qword [rbp + 48]>

1791:
old  < char_main$7:>
new  < mains2$21:>

1792:
old  <	; PostCall 24>
new  <	; Call setjmp_test 24 0>

1793:
old  <>
new  <	mov qword [rbp + 24], mains2$22>

1794:
old  < char_main$8:>
new  <	mov [rbp + 32], rbp>

1795:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	add rbp, 24>

1796:
old  <>
new  <	jmp setjmp_test>

1797:
old  < char_main$9:>
new  <>

1798:
old  <	; Parameter signedchar 49 48>
new  < mains2$22:>

1799:
old  <	mov byte [rbp + 48], 49>
new  <	; PostCall 24>

1801:
old  < char_main$10:>
new  < mains2$23:>

1802:
old  <	; Call character_test 24 0>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1803:
old  <	mov qword [rbp + 24], char_main$11>
new  <>

1804:
old  <	mov [rbp + 32], rbp>
new  < mains2$24:>

1805:
old  <	add rbp, 24>
new  <	; Parameter pointer "---------------------------------------------\n" 48>

1806:
old  <	jmp character_test>
new  <	mov qword [rbp + 48], string_2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D0A#>

1808:
old  < char_main$11:>
new  < mains2$25:>

1809:
old  <	; PostCall 24>
new  <	; Call printf 24 0>

1810:
old  <>
new  <	mov qword [rbp + 24], mains2$26>

1811:
old  < char_main$12:>
new  <	mov [rbp + 32], rbp>

1812:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	add rbp, 24>

1813:
old  <>
new  <	mov rdi, rbp>

1814:
old  < char_main$13:>
new  <	jmp printf>

1815:
old  <	; Parameter signedchar 46 48>
new  <>

1816:
old  <	mov byte [rbp + 48], 46>
new  < mains2$26:>

1817:
old  <>
new  <	; PostCall 24>

1818:
old  < char_main$14:>
new  <>

1819:
old  <	; Call character_test 24 0>
new  < mains2$27:>

1820:
old  <	mov qword [rbp + 24], char_main$15>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1821:
old  <	mov [rbp + 32], rbp>
new  <>

1822:
old  <	add rbp, 24>
new  < mains2$28:>

1823:
old  <	jmp character_test>
new  <	; PushFloat 0>

1824:
old  <>
new  <	fldz>

1825:
old  < char_main$15:>
new  <>

1826:
old  <	; PostCall 24>
new  < mains2$29:>

1827:
old  <>
new  <	; Parameter double 0 48>

1828:
old  < char_main$16:>
new  <	fstp qword [rbp + 48]>

1829:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1830:
old  <>
new  < mains2$30:>

1831:
old  < char_main$17:>
new  <	; Call setjmp_test 24 0>

1832:
old  <	; Parameter signedchar 10 48>
new  <	mov qword [rbp + 24], mains2$31>

1833:
old  <	mov byte [rbp + 48], 10>
new  <	mov [rbp + 32], rbp>

1834:
old  <>
new  <	add rbp, 24>

1835:
old  < char_main$18:>
new  <	jmp setjmp_test>

1836:
old  <	; Call character_test 24 0>
new  <>

1837:
old  <	mov qword [rbp + 24], char_main$19>
new  < mains2$31:>

1838:
old  <	mov [rbp + 32], rbp>
new  <	; PostCall 24>

1839:
old  <	add rbp, 24>
new  <>

1840:
old  <	jmp character_test>
new  < mains2$32:>

1841:
old  <>
new  <	; Return>

1842:
old  < char_main$19:>
new  <	mov rax, [rbp]>

1843:
old  <	; PostCall 24>
new  <	mov rdi, [rbp + 16]>

1844:
old  <>
new  <	mov rbp, [rbp + 8]>

1845:
old  < char_main$20:>
new  <	jmp rax>

1846:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1847:
old  <>
new  < mains2$33:>

1848:
old  < char_main$21:>
new  <	; FunctionEnd mains2>

1849:
old  <	; Parameter signedchar 102 48>
new  <>

1850:
old  <	mov byte [rbp + 48], 102>
new  <section .text>

1852:
old  < char_main$22:>
new  < char_main:>

1853:
old  <	; Call character_test 24 0>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1854:
old  <	mov qword [rbp + 24], char_main$23>
new  <>

1855:
old  <	mov [rbp + 32], rbp>
new  < char_main$1:>

1856:
old  <	add rbp, 24>
new  <	; Parameter signedchar 97 48>

1857:
old  <	jmp character_test>
new  <	mov byte [rbp + 48], 97>

1859:
old  < char_main$23:>
new  < char_main$2:>

1860:
old  <	; PostCall 24>
new  <	; Call character_test 24 0>

1861:
old  <>
new  <	mov qword [rbp + 24], char_main$3>

1862:
old  < char_main$24:>
new  <	mov [rbp + 32], rbp>

1863:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	add rbp, 24>

1864:
old  <>
new  <	jmp character_test>

1865:
old  < char_main$25:>
new  <>

1866:
old  <	; Parameter signedchar 103 48>
new  < char_main$3:>

1867:
old  <	mov byte [rbp + 48], 103>
new  <	; PostCall 24>

1869:
old  < char_main$26:>
new  < char_main$4:>

1870:
old  <	; Call character_test 24 0>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1871:
old  <	mov qword [rbp + 24], char_main$27>
new  <>

1872:
old  <	mov [rbp + 32], rbp>
new  < char_main$5:>

1873:
old  <	add rbp, 24>
new  <	; Parameter signedchar 66 48>

1874:
old  <	jmp character_test>
new  <	mov byte [rbp + 48], 66>

1876:
old  < char_main$27:>
new  < char_main$6:>

1877:
old  <	; PostCall 24>
new  <	; Call character_test 24 0>

1878:
old  <>
new  <	mov qword [rbp + 24], char_main$7>

1879:
old  < char_main$28:>
new  <	mov [rbp + 32], rbp>

1880:
old  <	; Return>
new  <	add rbp, 24>

1881:
old  <	mov rax, [rbp]>
new  <	jmp character_test>

1882:
old  <	mov rdi, [rbp + 16]>
new  <>

1883:
old  <	mov rbp, [rbp + 8]>
new  < char_main$7:>

1884:
old  <	jmp rax>
new  <	; PostCall 24>

1886:
old  < char_main$29:>
new  < char_main$8:>

1887:
old  <	; FunctionEnd char_main>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1889:
old  <section .data>
new  < char_main$9:>

1890:
old  <>
new  <	; Parameter signedchar 49 48>

1891:
old  <string_Please20write20a20number2028not20620or207293A20#:>
new  <	mov byte [rbp + 48], 49>

1892:
old  <	; Initializer String Please write a number (not 6 or 7): >
new  <>

1893:
old  <	db "Please write a number (not 6 or 7): ", 0>
new  < char_main$10:>

1894:
old  <>
new  <	; Call character_test 24 0>

1895:
old  <section .data>
new  <	mov qword [rbp + 24], char_main$11>

1896:
old  <>
new  <	mov [rbp + 32], rbp>

1897:
old  <string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#:>
new  <	add rbp, 24>

1898:
old  <	; Initializer String Assertion failed: "%s" in file %s at line %i\n>
new  <	jmp character_test>

1899:
old  <	db "Assertion failed: ", 34, "%s", 34, " in file %s at line %i", 10, 0>
new  <>

1900:
old  <>
new  < char_main$11:>

1901:
old  <section .data>
new  <	; PostCall 24>

1903:
old  <string_n20213D206#:>
new  < char_main$12:>

1904:
old  <	; Initializer String n != 6>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1905:
old  <	db "n != 6", 0>
new  <>

1906:
old  <>
new  < char_main$13:>

1907:
old  <section .data>
new  <	; Parameter signedchar 46 48>

1908:
old  <>
new  <	mov byte [rbp + 48], 46>

1909:
old  <string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CMain2Ec#:>
new  <>

1910:
old  <	; Initializer String C:\Users\Stefan\Documents\vagrant\homestead\code\code\Main.c>
new  < char_main$14:>

1911:
old  <	db "C:\Users\Stefan\Documents\vagrant\homestead\code\code\Main.c", 0>
new  <	; Call character_test 24 0>

1912:
old  <>
new  <	mov qword [rbp + 24], char_main$15>

1913:
old  <section .text>
new  <	mov [rbp + 32], rbp>

1914:
old  <>
new  <	add rbp, 24>

1915:
old  < assert_test:>
new  <	jmp character_test>

1916:
old  <	; Assign n 0>
new  <>

1917:
old  <	mov dword [rbp + 24], 0>
new  < char_main$15:>

1918:
old  <>
new  <	; PostCall 24>

1919:
old  < assert_test$1:>
new  <>

1920:
old  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < char_main$16:>

1921:
old  <>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1922:
old  < assert_test$2:>
new  <>

1923:
old  <	; Parameter pointer "Please write a number (not 6 or 7): " 52>
new  < char_main$17:>

1924:
old  <	mov qword [rbp + 52], string_Please20write20a20number2028not20620or207293A20#>
new  <	; Parameter signedchar 10 48>

1925:
old  <>
new  <	mov byte [rbp + 48], 10>

1926:
old  < assert_test$3:>
new  <>

1927:
old  <	; Call printf 28 0>
new  < char_main$18:>

1928:
old  <	mov qword [rbp + 28], assert_test$4>
new  <	; Call character_test 24 0>

1929:
old  <	mov [rbp + 36], rbp>
new  <	mov qword [rbp + 24], char_main$19>

1930:
old  <	add rbp, 28>
new  <	mov [rbp + 32], rbp>

1931:
old  <	mov rdi, rbp>
new  <	add rbp, 24>

1932:
old  <	jmp printf>
new  <	jmp character_test>

1934:
old  < assert_test$4:>
new  < char_main$19:>

1935:
old  <	; PostCall 28>
new  <	; PostCall 24>

1937:
old  < assert_test$5:>
new  < char_main$20:>

1938:
old  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1940:
old  < assert_test$6:>
new  < char_main$21:>

1941:
old  <	; Parameter pointer "%i" 52>
new  <	; Parameter signedchar 102 48>

1942:
old  <	mov qword [rbp + 52], string_25i#>
new  <	mov byte [rbp + 48], 102>

1944:
old  < assert_test$7:>
new  < char_main$22:>

1945:
old  <	; Address Â£temporary125 n>
new  <	; Call character_test 24 0>

1946:
old  <	mov rsi, rbp>
new  <	mov qword [rbp + 24], char_main$23>

1947:
old  <	add rsi, 24>
new  <	mov [rbp + 32], rbp>

1948:
old  <>
new  <	add rbp, 24>

1949:
old  < assert_test$8:>
new  <	jmp character_test>

1950:
old  <	; Parameter pointer Â£temporary125 60>
new  <>

1951:
old  <	mov [rbp + 60], rsi>
new  < char_main$23:>

1952:
old  <>
new  <	; PostCall 24>

1953:
old  < assert_test$9:>
new  <>

1954:
old  <	; Call scanf 28 8>
new  < char_main$24:>

1955:
old  <	mov qword [rbp + 28], assert_test$10>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1956:
old  <	mov [rbp + 36], rbp>
new  <>

1957:
old  <	add rbp, 28>
new  < char_main$25:>

1958:
old  <	mov rdi, rbp>
new  <	; Parameter signedchar 103 48>

1959:
old  <	add rdi, 8>
new  <	mov byte [rbp + 48], 103>

1960:
old  <	jmp scanf>
new  <>

1961:
old  <>
new  < char_main$26:>

1962:
old  < assert_test$10:>
new  <	; Call character_test 24 0>

1963:
old  <	; PostCall 28>
new  <	mov qword [rbp + 24], char_main$27>

1964:
old  <>
new  <	mov [rbp + 32], rbp>

1965:
old  < assert_test$11:>
new  <	add rbp, 24>

1966:
old  <	; NotEqual 23 n 6>
new  <	jmp character_test>

1967:
old  <	cmp dword [rbp + 24], 6>
new  <>

1968:
old  <	jne assert_test$23>
new  < char_main$27:>

1969:
old  <>
new  <	; PostCall 24>

1970:
old  < assert_test$12:>
new  <>

1971:
old  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < char_main$28:>

1972:
old  <>
new  <	; Return>

1973:
old  < assert_test$13:>
new  <	mov rax, [rbp]>

1974:
old  <	; Parameter pointer stderr 52>
new  <	mov rdi, [rbp + 16]>

1975:
old  <	mov rax, [stderr]>
new  <	mov rbp, [rbp + 8]>

1976:
old  <	mov [rbp + 52], rax>
new  <	jmp rax>

1978:
old  < assert_test$14:>
new  < char_main$29:>

1979:
old  <	; Parameter pointer "Assertion failed: "%s" in file %s at line %i\n" 60>
new  <	; FunctionEnd char_main>

1980:
old  <	mov qword [rbp + 60], string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#>
new  <>

1981:
old  <>
new  <section .data>

1982:
old  < assert_test$15:>
new  <>

1983:
old  <	; Parameter pointer "n != 6" 68>
new  <string_Please20write20a20number2028not20620or207293A20#:>

1984:
old  <	mov qword [rbp + 68], string_n20213D206#>
new  <	; Initializer String Please write a number (not 6 or 7): >

1985:
old  <>
new  <	db "Please write a number (not 6 or 7): ", 0>

1986:
old  < assert_test$16:>
new  <>

1987:
old  <	; Parameter pointer "C:\Users\Stefan\Documents\vagrant\homestead\code\code\Main.c" 76>
new  <section .data>

1988:
old  <	mov qword [rbp + 76], string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CMain2Ec#>
new  <>

1989:
old  <>
new  <string_n20213D206#:>

1990:
old  < assert_test$17:>
new  <	; Initializer String n != 6>

1991:
old  <	; Parameter signedint 848 84>
new  <	db "n != 6", 0>

1992:
old  <	mov dword [rbp + 84], 848>
new  <>

1993:
old  <>
new  <section .text>

1994:
old  < assert_test$18:>
new  <>

1995:
old  <	; Call fprintf 28 20>
new  < assert_test:>

1996:
old  <	mov qword [rbp + 28], assert_test$19>
new  <	; Assign n 0>

1997:
old  <	mov [rbp + 36], rbp>
new  <	mov dword [rbp + 24], 0>

1998:
old  <	add rbp, 28>
new  <>

1999:
old  <	mov rdi, rbp>
new  < assert_test$1:>

2000:
old  <	add rdi, 20>
new  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2001:
old  <	jmp fprintf>
new  <>

2002:
old  <>
new  < assert_test$2:>

2003:
old  < assert_test$19:>
new  <	; Parameter pointer "Please write a number (not 6 or 7): " 52>

2004:
old  <	; PostCall 28>
new  <	mov qword [rbp + 52], string_Please20write20a20number2028not20620or207293A20#>

2006:
old  < assert_test$20:>
new  < assert_test$3:>

2007:
old  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Call printf 28 0>

2008:
old  <>
new  <	mov qword [rbp + 28], assert_test$4>

2009:
old  < assert_test$21:>
new  <	mov [rbp + 36], rbp>

2010:
old  <	; Call abort 28 0>
new  <	add rbp, 28>

2011:
old  <	mov qword [rbp + 28], assert_test$22>
new  <	mov rdi, rbp>

2012:
old  <	mov [rbp + 36], rbp>
new  <	jmp printf>

2013:
old  <	add rbp, 28>
new  <>

2014:
old  <	jmp abort>
new  < assert_test$4:>

2015:
old  <>
new  <	; PostCall 28>

2016:
old  < assert_test$22:>
new  <>

2017:
old  <	; PostCall 28>
new  < assert_test$5:>

2018:
old  <>
new  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2019:
old  < assert_test$23:>
new  <>

2020:
old  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < assert_test$6:>

2021:
old  <>
new  <	; Parameter pointer "%i" 52>

2022:
old  < assert_test$24:>
new  <	mov qword [rbp + 52], string_25i#>

2023:
old  <	; Parameter signedint n 52>
new  <>

2024:
old  <	mov eax, [rbp + 24]>
new  < assert_test$7:>

2025:
old  <	mov [rbp + 52], eax>
new  <	; Address Â£temporary134 n>

2026:
old  <>
new  <	mov rsi, rbp>

2027:
old  < assert_test$25:>
new  <	add rsi, 24>

2028:
old  <	; Call assert_test2 28 0>
new  <>

2029:
old  <	mov qword [rbp + 28], assert_test$26>
new  < assert_test$8:>

2030:
old  <	mov [rbp + 36], rbp>
new  <	; Parameter pointer Â£temporary134 60>

2031:
old  <	add rbp, 28>
new  <	mov [rbp + 60], rsi>

2032:
old  <	jmp assert_test2>
new  <>

2033:
old  <>
new  < assert_test$9:>

2034:
old  < assert_test$26:>
new  <	; Call scanf 28 8>

2035:
old  <	; PostCall 28>
new  <	mov qword [rbp + 28], assert_test$10>

2036:
old  <>
new  <	mov [rbp + 36], rbp>

2037:
old  < assert_test$27:>
new  <	add rbp, 28>

2038:
old  <	; Return>
new  <	mov rdi, rbp>

2039:
old  <	mov rax, [rbp]>
new  <	add rdi, 8>

2040:
old  <	mov rdi, [rbp + 16]>
new  <	jmp scanf>

2041:
old  <	mov rbp, [rbp + 8]>
new  <>

2042:
old  <	jmp rax>
new  < assert_test$10:>

2043:
old  <>
new  <	; PostCall 28>

2044:
old  < assert_test$28:>
new  <>

2045:
old  <	; FunctionEnd assert_test>
new  < assert_test$11:>

2046:
old  <>
new  <	; NotEqual 23 n 6>

2047:
old  <section .data>
new  <	cmp dword [rbp + 24], 6>

2048:
old  <>
new  <	jne assert_test$23>

2049:
old  <string_n20213D207#:>
new  <>

2050:
old  <	; Initializer String n != 7>
new  < assert_test$12:>

2051:
old  <	db "n != 7", 0>
new  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2053:
old  <section .text>
new  < assert_test$13:>

2054:
old  <>
new  <	; Parameter pointer stderr 52>

2055:
old  < assert_test2:>
new  <	mov rax, [stderr]>

2056:
old  <	; NotEqual 12 n 7>
new  <	mov [rbp + 52], rax>

2057:
old  <	cmp dword [rbp + 24], 7>
new  <>

2058:
old  <	jne assert_test2$12>
new  < assert_test$14:>

2059:
old  <>
new  <	; Parameter pointer "Assertion failed: "%s" in file %s at line %i\n" 60>

2060:
old  < assert_test2$1:>
new  <	mov qword [rbp + 60], string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#>

2061:
old  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

2062:
old  <>
new  < assert_test$15:>

2063:
old  < assert_test2$2:>
new  <	; Parameter pointer "n != 6" 68>

2064:
old  <	; Parameter pointer stderr 52>
new  <	mov qword [rbp + 68], string_n20213D206#>

2065:
old  <	mov rax, [stderr]>
new  <>

2066:
old  <	mov [rbp + 52], rax>
new  < assert_test$16:>

2067:
old  <>
new  <	; Parameter pointer "C:\Users\Stefan\Documents\vagrant\homestead\code\code\Main.c" 76>

2068:
old  < assert_test2$3:>
new  <	mov qword [rbp + 76], string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CMain2Ec#>

2069:
old  <	; Parameter pointer "Assertion failed: "%s" in file %s at line %i\n" 60>
new  <>

2070:
old  <	mov qword [rbp + 60], string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#>
new  < assert_test$17:>

2071:
old  <>
new  <	; Parameter signedint 858 84>

2072:
old  < assert_test2$4:>
new  <	mov dword [rbp + 84], 858>

2073:
old  <	; Parameter pointer "n != 7" 68>
new  <>

2074:
old  <	mov qword [rbp + 68], string_n20213D207#>
new  < assert_test$18:>

2075:
old  <>
new  <	; Call fprintf 28 20>

2076:
old  < assert_test2$5:>
new  <	mov qword [rbp + 28], assert_test$19>

2077:
old  <	; Parameter pointer "C:\Users\Stefan\Documents\vagrant\homestead\code\code\Main.c" 76>
new  <	mov [rbp + 36], rbp>

2078:
old  <	mov qword [rbp + 76], string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CMain2Ec#>
new  <	add rbp, 28>

2079:
old  <>
new  <	mov rdi, rbp>

2080:
old  < assert_test2$6:>
new  <	add rdi, 20>

2081:
old  <	; Parameter signedint 853 84>
new  <	jmp fprintf>

2082:
old  <	mov dword [rbp + 84], 853>
new  <>

2083:
old  <>
new  < assert_test$19:>

2084:
old  < assert_test2$7:>
new  <	; PostCall 28>

2085:
old  <	; Call fprintf 28 20>
new  <>

2086:
old  <	mov qword [rbp + 28], assert_test2$8>
new  < assert_test$20:>

2087:
old  <	mov [rbp + 36], rbp>
new  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2088:
old  <	add rbp, 28>
new  <>

2089:
old  <	mov rdi, rbp>
new  < assert_test$21:>

2090:
old  <	add rdi, 20>
new  <	; Call abort 28 0>

2091:
old  <	jmp fprintf>
new  <	mov qword [rbp + 28], assert_test$22>

2092:
old  <>
new  <	mov [rbp + 36], rbp>

2093:
old  < assert_test2$8:>
new  <	add rbp, 28>

2094:
old  <	; PostCall 28>
new  <	jmp abort>

2096:
old  < assert_test2$9:>
new  < assert_test$22:>

2097:
old  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; PostCall 28>

2099:
old  < assert_test2$10:>
new  < assert_test$23:>

2100:
old  <	; Call abort 28 0>
new  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2101:
old  <	mov qword [rbp + 28], assert_test2$11>
new  <>

2102:
old  <	mov [rbp + 36], rbp>
new  < assert_test$24:>

2103:
old  <	add rbp, 28>
new  <	; Parameter signedint n 52>

2104:
old  <	jmp abort>
new  <	mov eax, [rbp + 24]>

2105:
old  <>
new  <	mov [rbp + 52], eax>

2106:
old  < assert_test2$11:>
new  <>

2107:
old  <	; PostCall 28>
new  < assert_test$25:>

2108:
old  <>
new  <	; Call assert_test2 28 0>

2109:
old  < assert_test2$12:>
new  <	mov qword [rbp + 28], assert_test$26>

2110:
old  <	; Return>
new  <	mov [rbp + 36], rbp>

2111:
old  <	mov rax, [rbp]>
new  <	add rbp, 28>

2112:
old  <	mov rdi, [rbp + 16]>
new  <	jmp assert_test2>

2113:
old  <	mov rbp, [rbp + 8]>
new  <>

2114:
old  <	jmp rax>
new  < assert_test$26:>

2115:
old  <>
new  <	; PostCall 28>

2116:
old  < assert_test2$13:>
new  <>

2117:
old  <	; FunctionEnd assert_test2>
new  < assert_test$27:>

2118:
old  <>
new  <	; Return>

2119:
old  <section .data>
new  <	mov rax, [rbp]>

2120:
old  <$StackTop:	times 1048576 db 0>
new  <	mov rdi, [rbp + 16]>

69:
old  <	; Parameter signedint 26 84>
new  <	; Parameter signedint 25 84>

70:
old  <	mov dword [rbp + 84], 26>
new  <	mov dword [rbp + 84], 25>

111:
old  <	; IntegralToIntegral Â£temporary142 memorySize>
new  <	; IntegralToIntegral Â£temporary151 memorySize>

115:
old  <	; BinaryAdd newBlockSize Â£temporary142 12>
new  <	; BinaryAdd newBlockSize Â£temporary151 12>

124:
old  <	; StackTop Â£temporary144>
new  <	; StackTop Â£temporary153>

128:
old  <	; BinaryAdd Â£temporary145 Â£temporary144 1048572>
new  <	; BinaryAdd Â£temporary154 Â£temporary153 1048572>

132:
old  <	; IntegralToIntegral Â£temporary147 Â£temporary145>
new  <	; IntegralToIntegral Â£temporary156 Â£temporary154>

135:
old  <	; Assign lastAddress Â£temporary147>
new  <	; Assign lastAddress Â£temporary156>

161:
old  <	; IntegralToIntegral Â£temporary149 currBlockPtr>
new  <	; IntegralToIntegral Â£temporary158 currBlockPtr>

165:
old  <	; Assign currAddress Â£temporary149>
new  <	; Assign currAddress Â£temporary158>

169:
old  <	; Dereference Â£temporary150 -> currBlockPtr currBlockPtr 0>
new  <	; Dereference Â£temporary159 -> currBlockPtr currBlockPtr 0>

173:
old  <	; BinaryAdd Â£temporary151 currAddress Â£temporary150 -> currBlockPtr>
new  <	; BinaryAdd Â£temporary160 currAddress Â£temporary159 -> currBlockPtr>

178:
old  <	; BinaryAdd Â£temporary152 Â£temporary151 12>
new  <	; BinaryAdd Â£temporary161 Â£temporary160 12>

182:
old  <	; BinarySubtract currGap lastAddress Â£temporary152>
new  <	; BinarySubtract currGap lastAddress Â£temporary161>

230:
old  <	; Dereference Â£temporary159 -> currBlockPtr currBlockPtr 0>
new  <	; Dereference Â£temporary168 -> currBlockPtr currBlockPtr 0>

234:
old  <	; Assign currBlockPtr Â£temporary159 -> currBlockPtr>
new  <	; Assign currBlockPtr Â£temporary168 -> currBlockPtr>

248:
old  <	; IntegralToIntegral Â£temporary161 minBlockPtr>
new  <	; IntegralToIntegral Â£temporary170 minBlockPtr>

252:
old  <	; Dereference Â£temporary162 -> minBlockPtr minBlockPtr 0>
new  <	; Dereference Â£temporary171 -> minBlockPtr minBlockPtr 0>

256:
old  <	; BinaryAdd Â£temporary163 Â£temporary161 Â£temporary162 -> minBlockPtr>
new  <	; BinaryAdd Â£temporary172 Â£temporary170 Â£temporary171 -> minBlockPtr>

260:
old  <	; BinaryAdd newAddress Â£temporary163 12>
new  <	; BinaryAdd newAddress Â£temporary172 12>

265:
old  <	; IntegralToIntegral Â£temporary165 newAddress>
new  <	; IntegralToIntegral Â£temporary174 newAddress>

271:
old  <	; Assign newBlockPtr Â£temporary165>
new  <	; Assign newBlockPtr Â£temporary174>

275:
old  <	; Dereference Â£temporary166 -> newBlockPtr newBlockPtr 0>
new  <	; Dereference Â£temporary175 -> newBlockPtr newBlockPtr 0>

279:
old  <	; Assign Â£temporary166 -> newBlockPtr memorySize>
new  <	; Assign Â£temporary175 -> newBlockPtr memorySize>

284:
old  <	; Dereference Â£temporary167 -> newBlockPtr newBlockPtr 0>
new  <	; Dereference Â£temporary176 -> newBlockPtr newBlockPtr 0>

288:
old  <	; Assign Â£temporary167 -> newBlockPtr minBlockPtr>
new  <	; Assign Â£temporary176 -> newBlockPtr minBlockPtr>

298:
old  <	; Dereference Â£temporary169 -> minPrevBlockPtr minPrevBlockPtr 0>
new  <	; Dereference Â£temporary178 -> minPrevBlockPtr minPrevBlockPtr 0>

302:
old  <	; Assign Â£temporary169 -> minPrevBlockPtr newBlockPtr>
new  <	; Assign Â£temporary178 -> minPrevBlockPtr newBlockPtr>

316:
old  <	; BinaryAdd Â£temporary170 newAddress 12>
new  <	; BinaryAdd Â£temporary179 newAddress 12>

321:
old  <	; IntegralToIntegral Â£temporary171 Â£temporary170>
new  <	; IntegralToIntegral Â£temporary180 Â£temporary179>

326:
old  <	; Return Â£temporary171>
new  <	; Return Â£temporary180>

339:
old  <	; InspectRegister Â£temporary173 rbp>
new  <	; InspectRegister Â£temporary182 rbp>

342:
old  <	; IntegralToIntegral Â£temporary174 Â£temporary173>
new  <	; IntegralToIntegral Â£temporary183 Â£temporary182>

345:
old  <	; Assign stackTop Â£temporary174>
new  <	; Assign stackTop Â£temporary183>

355:
old  <	; IntegralToIntegral Â£temporary176 newAddress>
new  <	; IntegralToIntegral Â£temporary185 newAddress>

361:
old  <	; Assign newBlockPtr Â£temporary176>
new  <	; Assign newBlockPtr Â£temporary185>

365:
old  <	; Dereference Â£temporary177 -> newBlockPtr newBlockPtr 0>
new  <	; Dereference Â£temporary186 -> newBlockPtr newBlockPtr 0>

369:
old  <	; Assign Â£temporary177 -> newBlockPtr memorySize>
new  <	; Assign Â£temporary186 -> newBlockPtr memorySize>

374:
old  <	; Dereference Â£temporary178 -> newBlockPtr newBlockPtr 0>
new  <	; Dereference Â£temporary187 -> newBlockPtr newBlockPtr 0>

378:
old  <	; Assign Â£temporary178 -> newBlockPtr 0>
new  <	; Assign Â£temporary187 -> newBlockPtr 0>

387:
old  <	; Dereference Â£temporary180 -> prevBlockPtr prevBlockPtr 0>
new  <	; Dereference Â£temporary189 -> prevBlockPtr prevBlockPtr 0>

391:
old  <	; Assign Â£temporary180 -> prevBlockPtr newBlockPtr>
new  <	; Assign Â£temporary189 -> prevBlockPtr newBlockPtr>

405:
old  <	; BinaryAdd Â£temporary181 newAddress 12>
new  <	; BinaryAdd Â£temporary190 newAddress 12>

410:
old  <	; IntegralToIntegral Â£temporary182 Â£temporary181>
new  <	; IntegralToIntegral Â£temporary191 Â£temporary190>

415:
old  <	; Return Â£temporary182>
new  <	; Return Â£temporary191>

438:
old  <	; SignedMultiply Â£temporary183 number size>
new  <	; SignedMultiply Â£temporary192 number size>

444:
old  <	; Parameter signedint Â£temporary183 56>
new  <	; Parameter signedint Â£temporary192 56>

458:
old  <	; GetReturnValue Â£temporary184>
new  <	; GetReturnValue Â£temporary193>

461:
old  <	; Assign pointer Â£temporary184>
new  <	; Assign pointer Â£temporary193>

522:
old  <	; IntegralToIntegral Â£temporary188 freeMemoryPtr>
new  <	; IntegralToIntegral Â£temporary197 freeMemoryPtr>

526:
old  <	; BinarySubtract Â£temporary189 Â£temporary188 12>
new  <	; BinarySubtract Â£temporary198 Â£temporary197 12>

530:
old  <	; IntegralToIntegral Â£temporary190 Â£temporary189>
new  <	; IntegralToIntegral Â£temporary199 Â£temporary198>

535:
old  <	; Assign freeBlockPtr Â£temporary190>
new  <	; Assign freeBlockPtr Â£temporary199>

564:
old  <	; Dereference Â£temporary194 -> currBlockPtr currBlockPtr 0>
new  <	; Dereference Â£temporary203 -> currBlockPtr currBlockPtr 0>

568:
old  <	; NotEqual 15 Â£temporary194 -> currBlockPtr 0>
new  <	; NotEqual 15 Â£temporary203 -> currBlockPtr 0>

586:
old  <	; Dereference Â£temporary198 -> currBlockPtr currBlockPtr 0>
new  <	; Dereference Â£temporary207 -> currBlockPtr currBlockPtr 0>

590:
old  <	; Assign g_firstBlockPtr Â£temporary198 -> currBlockPtr>
new  <	; Assign g_firstBlockPtr Â£temporary207 -> currBlockPtr>

599:
old  <	; Dereference Â£temporary199 -> currBlockPtr currBlockPtr 0>
new  <	; Dereference Â£temporary208 -> currBlockPtr currBlockPtr 0>

603:
old  <	; NotEqual 24 Â£temporary199 -> currBlockPtr 0>
new  <	; NotEqual 24 Â£temporary208 -> currBlockPtr 0>

608:
old  <	; Dereference Â£temporary201 -> prevBlockPtr prevBlockPtr 0>
new  <	; Dereference Â£temporary210 -> prevBlockPtr prevBlockPtr 0>

612:
old  <	; Assign Â£temporary201 -> prevBlockPtr 0>
new  <	; Assign Â£temporary210 -> prevBlockPtr 0>

620:
old  <	; Dereference Â£temporary202 -> prevBlockPtr prevBlockPtr 0>
new  <	; Dereference Â£temporary211 -> prevBlockPtr prevBlockPtr 0>

624:
old  <	; Dereference Â£temporary203 -> currBlockPtr currBlockPtr 0>
new  <	; Dereference Â£temporary212 -> currBlockPtr currBlockPtr 0>

628:
old  <	; Assign Â£temporary202 -> prevBlockPtr Â£temporary203 -> currBlockPtr>
new  <	; Assign Â£temporary211 -> prevBlockPtr Â£temporary212 -> currBlockPtr>

645:
old  <	; Dereference Â£temporary204 -> currBlockPtr currBlockPtr 0>
new  <	; Dereference Â£temporary213 -> currBlockPtr currBlockPtr 0>

649:
old  <	; Assign currBlockPtr Â£temporary204 -> currBlockPtr>
new  <	; Assign currBlockPtr Â£temporary213 -> currBlockPtr>

707:
old  <	; Parameter signedint 260 92>
new  <	; Parameter signedint 259 92>

708:
old  <	mov dword [rbp + 92], 260>
new  <	mov dword [rbp + 92], 259>

766:
old  <	; Parameter signedint 261 92>
new  <	; Parameter signedint 260 92>

767:
old  <	mov dword [rbp + 92], 261>
new  <	mov dword [rbp + 92], 260>

818:
old  <	; GetReturnValue Â£temporary216>
new  <	; GetReturnValue Â£temporary225>

821:
old  <	; Return Â£temporary216>
new  <	; Return Â£temporary225>

859:
old  <	; IntegralToIntegral Â£temporary219 newMemorySize>
new  <	; IntegralToIntegral Â£temporary228 newMemorySize>

863:
old  <	; BinaryAdd newBlockSize Â£temporary219 12>
new  <	; BinaryAdd newBlockSize Â£temporary228 12>

868:
old  <	; IntegralToIntegral Â£temporary221 oldMemoryPtr>
new  <	; IntegralToIntegral Â£temporary230 oldMemoryPtr>

872:
old  <	; BinarySubtract Â£temporary222 Â£temporary221 12>
new  <	; BinarySubtract Â£temporary231 Â£temporary230 12>

876:
old  <	; IntegralToIntegral Â£temporary223 Â£temporary222>
new  <	; IntegralToIntegral Â£temporary232 Â£temporary231>

881:
old  <	; Assign oldBlockPtr Â£temporary223>
new  <	; Assign oldBlockPtr Â£temporary232>

885:
old  <	; Dereference Â£temporary224 -> oldBlockPtr oldBlockPtr 0>
new  <	; Dereference Â£temporary233 -> oldBlockPtr oldBlockPtr 0>

889:
old  <	; UnsignedGreaterThan 49 newBlockSize Â£temporary224 -> oldBlockPtr>
new  <	; UnsignedGreaterThan 49 newBlockSize Â£temporary233 -> oldBlockPtr>

895:
old  <	; Dereference Â£temporary226 -> oldBlockPtr oldBlockPtr 0>
new  <	; Dereference Â£temporary235 -> oldBlockPtr oldBlockPtr 0>

899:
old  <	; Assign Â£temporary226 -> oldBlockPtr newBlockSize>
new  <	; Assign Â£temporary235 -> oldBlockPtr newBlockSize>

912:
old  <	; StackTop Â£temporary227>
new  <	; StackTop Â£temporary236>

916:
old  <	; BinaryAdd Â£temporary228 Â£temporary227 1048572>
new  <	; BinaryAdd Â£temporary237 Â£temporary236 1048572>

920:
old  <	; IntegralToIntegral Â£temporary230 Â£temporary228>
new  <	; IntegralToIntegral Â£temporary239 Â£temporary237>

923:
old  <	; Assign lastAddress Â£temporary230>
new  <	; Assign lastAddress Â£temporary239>

943:
old  <	; IntegralToIntegral Â£temporary233 currBlockPtr>
new  <	; IntegralToIntegral Â£temporary242 currBlockPtr>

947:
old  <	; BinarySubtract availableSize lastAddress Â£temporary233>
new  <	; BinarySubtract availableSize lastAddress Â£temporary242>

959:
old  <	; Dereference Â£temporary236 -> oldBlockPtr oldBlockPtr 0>
new  <	; Dereference Â£temporary245 -> oldBlockPtr oldBlockPtr 0>

963:
old  <	; Assign Â£temporary236 -> oldBlockPtr newBlockSize>
new  <	; Assign Â£temporary245 -> oldBlockPtr newBlockSize>

976:
old  <	; IntegralToIntegral Â£temporary237 currBlockPtr>
new  <	; IntegralToIntegral Â£temporary246 currBlockPtr>

980:
old  <	; Assign lastAddress Â£temporary237>
new  <	; Assign lastAddress Â£temporary246>

984:
old  <	; Dereference Â£temporary238 -> currBlockPtr currBlockPtr 0>
new  <	; Dereference Â£temporary247 -> currBlockPtr currBlockPtr 0>

988:
old  <	; Assign currBlockPtr Â£temporary238 -> currBlockPtr>
new  <	; Assign currBlockPtr Â£temporary247 -> currBlockPtr>

1015:
old  <	; GetReturnValue Â£temporary239>
new  <	; GetReturnValue Â£temporary248>

1018:
old  <	; Assign newMemoryPtr Â£temporary239>
new  <	; Assign newMemoryPtr Â£temporary248>

1147:
old  <	; IntegralToIntegral Â£temporary245 currBlockPtr>
new  <	; IntegralToIntegral Â£temporary254 currBlockPtr>

1151:
old  <	; Parameter unsigned int Â£temporary245 64>
new  <	; Parameter unsigned int Â£temporary254 64>

1155:
old  <	; Dereference Â£temporary246 -> currBlockPtr currBlockPtr 0>
new  <	; Dereference Â£temporary255 -> currBlockPtr currBlockPtr 0>

1159:
old  <	; Parameter unsigned int Â£temporary246 -> currBlockPtr 68>
new  <	; Parameter unsigned int Â£temporary255 -> currBlockPtr 68>

1176:
old  <	; Dereference Â£temporary248 -> currBlockPtr currBlockPtr 0>
new  <	; Dereference Â£temporary257 -> currBlockPtr currBlockPtr 0>

1180:
old  <	; Assign currBlockPtr Â£temporary248 -> currBlockPtr>
new  <	; Assign currBlockPtr Â£temporary257 -> currBlockPtr>

2:
old  <	global islowerX>
new  <	global isupper>

3:
old  <	global isupperX>
new  <	global isalpha>

4:
old  <	global isupper>
new  <	global isdigit>

5:
old  <	global isalpha>
new  <	global isalnum>

6:
old  <	global isdigit>
new  <	global isxdigit>

7:
old  <	global isalnum>
new  <	global isgraph>

8:
old  <	global isxdigit>
new  <	global isprint>

9:
old  <	global isgraph>
new  <	global ispunct>

10:
old  <	global isprint>
new  <	global iscntrl>

11:
old  <	global ispunct>
new  <	global isspace>

12:
old  <	global iscntrl>
new  <	global tolower>

13:
old  <	global isspace>
new  <	global toupper>

14:
old  <	global tolowerX>
new  <>

15:
old  <	global tolower>
new  <	extern localeconv>

16:
old  <	global toupperX>
new  <	extern strchr>

17:
old  <	global toupper>
new  <	extern $StackTop>

19:
old  <	extern localeconv>
new  <>

20:
old  <	extern strchr>
new  <section .text>

21:
old  <	extern $StackTop>
new  <>

22:
old  <>
new  < islower:>

23:
old  <>
new  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

24:
old  <section .text>
new  <>

25:
old  <>
new  < islower$1:>

26:
old  < islower:>
new  <	; Call localeconv 28 0>

27:
old  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov qword [rbp + 28], islower$2>

28:
old  <>
new  <	mov [rbp + 36], rbp>

29:
old  < islower$1:>
new  <	add rbp, 28>

30:
old  <	; Call localeconv 28 0>
new  <	jmp localeconv>

31:
old  <	mov qword [rbp + 28], islower$2>
new  <>

32:
old  <	mov [rbp + 36], rbp>
new  < islower$2:>

33:
old  <	add rbp, 28>
new  <	; PostCall 28>

34:
old  <	jmp localeconv>
new  <>

35:
old  <>
new  < islower$3:>

36:
old  < islower$2:>
new  <	; GetReturnValue Â£temporary259>

37:
old  <	; PostCall 28>
new  <>

38:
old  <>
new  < islower$4:>

39:
old  < islower$3:>
new  <	; Assign localeConvPtr Â£temporary259>

40:
old  <	; GetReturnValue Â£temporary250>
new  <	mov [rbp + 28], rbx>

42:
old  < islower$4:>
new  < islower$5:>

43:
old  <	; Assign localeConvPtr Â£temporary250>
new  <	; Equal 18 localeConvPtr 0>

44:
old  <	mov [rbp + 28], rbx>
new  <	cmp qword [rbp + 28], 0>

45:
old  <>
new  <	je islower$18>

46:
old  < islower$5:>
new  <>

47:
old  <	; Equal 18 localeConvPtr 0>
new  < islower$6:>

48:
old  <	cmp qword [rbp + 28], 0>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

49:
old  <	je islower$18>
new  <>

50:
old  <>
new  < islower$7:>

51:
old  < islower$6:>
new  <	; Dereference Â£temporary261 -> localeConvPtr localeConvPtr 0>

52:
old  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov rsi, [rbp + 28]>

54:
old  < islower$7:>
new  < islower$8:>

55:
old  <	; Dereference Â£temporary252 -> localeConvPtr localeConvPtr 0>
new  <	; Parameter pointer Â£temporary261 -> localeConvPtr 60>

56:
old  <	mov rsi, [rbp + 28]>
new  <	mov rax, [rsi + 40]>

57:
old  <>
new  <	mov [rbp + 60], rax>

58:
old  < islower$8:>
new  <>

59:
old  <	; Parameter pointer Â£temporary252 -> localeConvPtr 60>
new  < islower$9:>

60:
old  <	mov rax, [rsi + 40]>
new  <	; Parameter signedint c 68>

61:
old  <	mov [rbp + 60], rax>
new  <	mov eax, [rbp + 24]>

62:
old  <>
new  <	mov [rbp + 68], eax>

63:
old  < islower$9:>
new  <>

64:
old  <	; Parameter signedint c 68>
new  < islower$10:>

65:
old  <	mov eax, [rbp + 24]>
new  <	; Call strchr 36 0>

66:
old  <	mov [rbp + 68], eax>
new  <	mov qword [rbp + 36], islower$11>

67:
old  <>
new  <	mov [rbp + 44], rbp>

68:
old  < islower$10:>
new  <	add rbp, 36>

69:
old  <	; Call strchr 36 0>
new  <	jmp strchr>

70:
old  <	mov qword [rbp + 36], islower$11>
new  <>

71:
old  <	mov [rbp + 44], rbp>
new  < islower$11:>

72:
old  <	add rbp, 36>
new  <	; PostCall 36>

73:
old  <	jmp strchr>
new  <>

74:
old  <>
new  < islower$12:>

75:
old  < islower$11:>
new  <	; GetReturnValue Â£temporary262>

76:
old  <	; PostCall 36>
new  <>

77:
old  <>
new  < islower$13:>

78:
old  < islower$12:>
new  <	; Equal 16 Â£temporary262 0>

79:
old  <	; GetReturnValue Â£temporary253>
new  <	cmp rbx, 0>

80:
old  <>
new  <	je islower$16>

81:
old  < islower$13:>
new  <>

82:
old  <	; Equal 16 Â£temporary253 0>
new  < islower$14:>

83:
old  <	cmp rbx, 0>
new  <	; Assign Â£temporary264 1>

84:
old  <	je islower$16>
new  <	mov ebx, 1>

86:
old  < islower$14:>
new  < islower$15:>

87:
old  <	; Assign Â£temporary255 1>
new  <	; Goto 17>

88:
old  <	mov ebx, 1>
new  <	jmp islower$17>

90:
old  < islower$15:>
new  < islower$16:>

91:
old  <	; Goto 17>
new  <	; Assign Â£temporary264 0>

92:
old  <	jmp islower$17>
new  <	mov ebx, 0>

94:
old  < islower$16:>
new  < islower$17:>

95:
old  <	; Assign Â£temporary255 0>
new  <	; Return Â£temporary264>

96:
old  <	mov ebx, 0>
new  <	mov rax, [rbp]>

97:
old  <>
new  <	mov rdi, [rbp + 16]>

98:
old  < islower$17:>
new  <	mov rbp, [rbp + 8]>

99:
old  <	; Return Â£temporary255>
new  <	jmp rax>

100:
old  <	mov rax, [rbp]>
new  <>

101:
old  <	mov rdi, [rbp + 16]>
new  < islower$18:>

102:
old  <	mov rbp, [rbp + 8]>
new  <	; SignedLessThan 22 c 97>

103:
old  <	jmp rax>
new  <	cmp dword [rbp + 24], 97>

104:
old  <>
new  <	jl islower$22>

105:
old  < islower$18:>
new  <>

106:
old  <	; SignedLessThan 22 c 97>
new  < islower$19:>

107:
old  <	cmp dword [rbp + 24], 97>
new  <	; SignedGreaterThan 22 c 122>

108:
old  <	jl islower$22>
new  <	cmp dword [rbp + 24], 122>

109:
old  <>
new  <	jg islower$22>

110:
old  < islower$19:>
new  <>

111:
old  <	; SignedGreaterThan 22 c 122>
new  < islower$20:>

112:
old  <	cmp dword [rbp + 24], 122>
new  <	; Assign Â£temporary268 1>

113:
old  <	jg islower$22>
new  <	mov ebx, 1>

115:
old  < islower$20:>
new  < islower$21:>

116:
old  <	; Assign Â£temporary259 1>
new  <	; Goto 23>

117:
old  <	mov ebx, 1>
new  <	jmp islower$23>

119:
old  < islower$21:>
new  < islower$22:>

120:
old  <	; Goto 23>
new  <	; Assign Â£temporary268 0>

121:
old  <	jmp islower$23>
new  <	mov ebx, 0>

123:
old  < islower$22:>
new  < islower$23:>

124:
old  <	; Assign Â£temporary259 0>
new  <	; Return Â£temporary268>

125:
old  <	mov ebx, 0>
new  <	mov rax, [rbp]>

126:
old  <>
new  <	mov rdi, [rbp + 16]>

127:
old  < islower$23:>
new  <	mov rbp, [rbp + 8]>

128:
old  <	; Return Â£temporary259>
new  <	jmp rax>

129:
old  <	mov rax, [rbp]>
new  <>

130:
old  <	mov rdi, [rbp + 16]>
new  < islower$24:>

131:
old  <	mov rbp, [rbp + 8]>
new  <	; FunctionEnd islower>

132:
old  <	jmp rax>
new  <>

133:
old  <>
new  <section .text>

134:
old  < islower$24:>
new  <>

135:
old  <	; FunctionEnd islower>
new  < isupper:>

136:
old  <>
new  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

137:
old  <section .text>
new  <>

138:
old  <>
new  < isupper$1:>

139:
old  < islowerX:>
new  <	; Call localeconv 28 0>

140:
old  <	; SignedLessThan 4 c 97>
new  <	mov qword [rbp + 28], isupper$2>

141:
old  <	cmp dword [rbp + 24], 97>
new  <	mov [rbp + 36], rbp>

142:
old  <	jl islowerX$4>
new  <	add rbp, 28>

143:
old  <>
new  <	jmp localeconv>

144:
old  < islowerX$1:>
new  <>

145:
old  <	; SignedGreaterThan 4 c 122>
new  < isupper$2:>

146:
old  <	cmp dword [rbp + 24], 122>
new  <	; PostCall 28>

147:
old  <	jg islowerX$4>
new  <>

148:
old  <>
new  < isupper$3:>

149:
old  < islowerX$2:>
new  <	; GetReturnValue Â£temporary269>

150:
old  <	; Assign Â£temporary263 1>
new  <>

151:
old  <	mov ebx, 1>
new  < isupper$4:>

152:
old  <>
new  <	; Assign localeConvPtr Â£temporary269>

153:
old  < islowerX$3:>
new  <	mov [rbp + 28], rbx>

154:
old  <	; Goto 5>
new  <>

155:
old  <	jmp islowerX$5>
new  < isupper$5:>

156:
old  <>
new  <	; Equal 18 localeConvPtr 0>

157:
old  < islowerX$4:>
new  <	cmp qword [rbp + 28], 0>

158:
old  <	; Assign Â£temporary263 0>
new  <	je isupper$18>

159:
old  <	mov ebx, 0>
new  <>

160:
old  <>
new  < isupper$6:>

161:
old  < islowerX$5:>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

162:
old  <	; Return Â£temporary263>
new  <>

163:
old  <	mov rax, [rbp]>
new  < isupper$7:>

164:
old  <	mov rdi, [rbp + 16]>
new  <	; Dereference Â£temporary271 -> localeConvPtr localeConvPtr 0>

165:
old  <	mov rbp, [rbp + 8]>
new  <	mov rsi, [rbp + 28]>

166:
old  <	jmp rax>
new  <>

167:
old  <>
new  < isupper$8:>

168:
old  < islowerX$6:>
new  <	; Parameter pointer Â£temporary271 -> localeConvPtr 60>

169:
old  <	; FunctionEnd islowerX>
new  <	mov rax, [rsi + 48]>

170:
old  <>
new  <	mov [rbp + 60], rax>

171:
old  <section .text>
new  <>

172:
old  <>
new  < isupper$9:>

173:
old  < isupperX:>
new  <	; Parameter signedint c 68>

174:
old  <	; SignedLessThan 4 c 65>
new  <	mov eax, [rbp + 24]>

175:
old  <	cmp dword [rbp + 24], 65>
new  <	mov [rbp + 68], eax>

176:
old  <	jl isupperX$4>
new  <>

177:
old  <>
new  < isupper$10:>

178:
old  < isupperX$1:>
new  <	; Call strchr 36 0>

179:
old  <	; SignedGreaterThan 4 c 90>
new  <	mov qword [rbp + 36], isupper$11>

180:
old  <	cmp dword [rbp + 24], 90>
new  <	mov [rbp + 44], rbp>

181:
old  <	jg isupperX$4>
new  <	add rbp, 36>

182:
old  <>
new  <	jmp strchr>

183:
old  < isupperX$2:>
new  <>

184:
old  <	; Assign Â£temporary267 1>
new  < isupper$11:>

185:
old  <	mov ebx, 1>
new  <	; PostCall 36>

187:
old  < isupperX$3:>
new  < isupper$12:>

188:
old  <	; Goto 5>
new  <	; GetReturnValue Â£temporary272>

189:
old  <	jmp isupperX$5>
new  <>

190:
old  <>
new  < isupper$13:>

191:
old  < isupperX$4:>
new  <	; Equal 16 Â£temporary272 0>

192:
old  <	; Assign Â£temporary267 0>
new  <	cmp rbx, 0>

193:
old  <	mov ebx, 0>
new  <	je isupper$16>

195:
old  < isupperX$5:>
new  < isupper$14:>

196:
old  <	; Return Â£temporary267>
new  <	; Assign Â£temporary274 1>

197:
old  <	mov rax, [rbp]>
new  <	mov ebx, 1>

198:
old  <	mov rdi, [rbp + 16]>
new  <>

199:
old  <	mov rbp, [rbp + 8]>
new  < isupper$15:>

200:
old  <	jmp rax>
new  <	; Goto 17>

201:
old  <>
new  <	jmp isupper$17>

202:
old  < isupperX$6:>
new  <>

203:
old  <	; FunctionEnd isupperX>
new  < isupper$16:>

204:
old  <>
new  <	; Assign Â£temporary274 0>

205:
old  <section .text>
new  <	mov ebx, 0>

207:
old  < isupper:>
new  < isupper$17:>

208:
old  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Return Â£temporary274>

209:
old  <>
new  <	mov rax, [rbp]>

210:
old  < isupper$1:>
new  <	mov rdi, [rbp + 16]>

211:
old  <	; Call localeconv 28 0>
new  <	mov rbp, [rbp + 8]>

212:
old  <	mov qword [rbp + 28], isupper$2>
new  <	jmp rax>

213:
old  <	mov [rbp + 36], rbp>
new  <>

214:
old  <	add rbp, 28>
new  < isupper$18:>

215:
old  <	jmp localeconv>
new  <	; SignedLessThan 22 c 65>

216:
old  <>
new  <	cmp dword [rbp + 24], 65>

217:
old  < isupper$2:>
new  <	jl isupper$22>

218:
old  <	; PostCall 28>
new  <>

219:
old  <>
new  < isupper$19:>

220:
old  < isupper$3:>
new  <	; SignedGreaterThan 22 c 90>

221:
old  <	; GetReturnValue Â£temporary268>
new  <	cmp dword [rbp + 24], 90>

222:
old  <>
new  <	jg isupper$22>

223:
old  < isupper$4:>
new  <>

224:
old  <	; Assign localeConvPtr Â£temporary268>
new  < isupper$20:>

225:
old  <	mov [rbp + 28], rbx>
new  <	; Assign Â£temporary278 1>

226:
old  <>
new  <	mov ebx, 1>

227:
old  < isupper$5:>
new  <>

228:
old  <	; Equal 18 localeConvPtr 0>
new  < isupper$21:>

229:
old  <	cmp qword [rbp + 28], 0>
new  <	; Goto 23>

230:
old  <	je isupper$18>
new  <	jmp isupper$23>

232:
old  < isupper$6:>
new  < isupper$22:>

233:
old  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Assign Â£temporary278 0>

234:
old  <>
new  <	mov ebx, 0>

235:
old  < isupper$7:>
new  <>

236:
old  <	; Dereference Â£temporary270 -> localeConvPtr localeConvPtr 0>
new  < isupper$23:>

237:
old  <	mov rsi, [rbp + 28]>
new  <	; Return Â£temporary278>

238:
old  <>
new  <	mov rax, [rbp]>

239:
old  < isupper$8:>
new  <	mov rdi, [rbp + 16]>

240:
old  <	; Parameter pointer Â£temporary270 -> localeConvPtr 60>
new  <	mov rbp, [rbp + 8]>

241:
old  <	mov rax, [rsi + 48]>
new  <	jmp rax>

242:
old  <	mov [rbp + 60], rax>
new  <>

243:
old  <>
new  < isupper$24:>

244:
old  < isupper$9:>
new  <	; FunctionEnd isupper>

245:
old  <	; Parameter signedint c 68>
new  <>

246:
old  <	mov eax, [rbp + 24]>
new  <section .text>

247:
old  <	mov [rbp + 68], eax>
new  <>

248:
old  <>
new  < isalpha:>

249:
old  < isupper$10:>
new  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

250:
old  <	; Call strchr 36 0>
new  <>

251:
old  <	mov qword [rbp + 36], isupper$11>
new  < isalpha$1:>

252:
old  <	mov [rbp + 44], rbp>
new  <	; Parameter signedint c 52>

253:
old  <	add rbp, 36>
new  <	mov eax, [rbp + 24]>

254:
old  <	jmp strchr>
new  <	mov [rbp + 52], eax>

256:
old  < isupper$11:>
new  < isalpha$2:>

257:
old  <	; PostCall 36>
new  <	; Call islower 28 0>

258:
old  <>
new  <	mov qword [rbp + 28], isalpha$3>

259:
old  < isupper$12:>
new  <	mov [rbp + 36], rbp>

260:
old  <	; GetReturnValue Â£temporary271>
new  <	add rbp, 28>

261:
old  <>
new  <	jmp islower>

262:
old  < isupper$13:>
new  <>

263:
old  <	; Equal 16 Â£temporary271 0>
new  < isalpha$3:>

264:
old  <	cmp rbx, 0>
new  <	; PostCall 28>

265:
old  <	je isupper$16>
new  <>

266:
old  <>
new  < isalpha$4:>

267:
old  < isupper$14:>
new  <	; GetReturnValue Â£temporary279>

268:
old  <	; Assign Â£temporary273 1>
new  <>

269:
old  <	mov ebx, 1>
new  < isalpha$5:>

270:
old  <>
new  <	; NotEqual 12 Â£temporary279 0>

271:
old  < isupper$15:>
new  <	cmp ebx, 0>

272:
old  <	; Goto 17>
new  <	jne isalpha$12>

273:
old  <	jmp isupper$17>
new  <>

274:
old  <>
new  < isalpha$6:>

275:
old  < isupper$16:>
new  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

276:
old  <	; Assign Â£temporary273 0>
new  <>

277:
old  <	mov ebx, 0>
new  < isalpha$7:>

278:
old  <>
new  <	; Parameter signedint c 52>

279:
old  < isupper$17:>
new  <	mov eax, [rbp + 24]>

280:
old  <	; Return Â£temporary273>
new  <	mov [rbp + 52], eax>

281:
old  <	mov rax, [rbp]>
new  <>

282:
old  <	mov rdi, [rbp + 16]>
new  < isalpha$8:>

283:
old  <	mov rbp, [rbp + 8]>
new  <	; Call isupper 28 0>

284:
old  <	jmp rax>
new  <	mov qword [rbp + 28], isalpha$9>

285:
old  <>
new  <	mov [rbp + 36], rbp>

286:
old  < isupper$18:>
new  <	add rbp, 28>

287:
old  <	; SignedLessThan 22 c 65>
new  <	jmp isupper>

288:
old  <	cmp dword [rbp + 24], 65>
new  <>

289:
old  <	jl isupper$22>
new  < isalpha$9:>

290:
old  <>
new  <	; PostCall 28>

291:
old  < isupper$19:>
new  <>

292:
old  <	; SignedGreaterThan 22 c 90>
new  < isalpha$10:>

293:
old  <	cmp dword [rbp + 24], 90>
new  <	; GetReturnValue Â£temporary280>

294:
old  <	jg isupper$22>
new  <>

295:
old  <>
new  < isalpha$11:>

296:
old  < isupper$20:>
new  <	; Equal 14 Â£temporary280 0>

297:
old  <	; Assign Â£temporary277 1>
new  <	cmp ebx, 0>

298:
old  <	mov ebx, 1>
new  <	je isalpha$14>

300:
old  < isupper$21:>
new  < isalpha$12:>

301:
old  <	; Goto 23>
new  <	; Assign Â£temporary284 1>

302:
old  <	jmp isupper$23>
new  <	mov ebx, 1>

304:
old  < isupper$22:>
new  < isalpha$13:>

305:
old  <	; Assign Â£temporary277 0>
new  <	; Goto 15>

306:
old  <	mov ebx, 0>
new  <	jmp isalpha$15>

308:
old  < isupper$23:>
new  < isalpha$14:>

309:
old  <	; Return Â£temporary277>
new  <	; Assign Â£temporary284 0>

310:
old  <	mov rax, [rbp]>
new  <	mov ebx, 0>

311:
old  <	mov rdi, [rbp + 16]>
new  <>

312:
old  <	mov rbp, [rbp + 8]>
new  < isalpha$15:>

313:
old  <	jmp rax>
new  <	; Return Â£temporary284>

314:
old  <>
new  <	mov rax, [rbp]>

315:
old  < isupper$24:>
new  <	mov rdi, [rbp + 16]>

316:
old  <	; FunctionEnd isupper>
new  <	mov rbp, [rbp + 8]>

317:
old  <>
new  <	jmp rax>

318:
old  <section .text>
new  <>

319:
old  <>
new  < isalpha$16:>

320:
old  < isalpha:>
new  <	; FunctionEnd isalpha>

321:
old  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

322:
old  <>
new  <section .text>

323:
old  < isalpha$1:>
new  <>

324:
old  <	; Parameter signedint c 52>
new  < isdigit:>

325:
old  <	mov eax, [rbp + 24]>
new  <	; SignedLessThan 4 c 48>

326:
old  <	mov [rbp + 52], eax>
new  <	cmp dword [rbp + 24], 48>

327:
old  <>
new  <	jl isdigit$4>

328:
old  < isalpha$2:>
new  <>

329:
old  <	; Call islower 28 0>
new  < isdigit$1:>

330:
old  <	mov qword [rbp + 28], isalpha$3>
new  <	; SignedGreaterThan 4 c 57>

331:
old  <	mov [rbp + 36], rbp>
new  <	cmp dword [rbp + 24], 57>

332:
old  <	add rbp, 28>
new  <	jg isdigit$4>

333:
old  <	jmp islower>
new  <>

334:
old  <>
new  < isdigit$2:>

335:
old  < isalpha$3:>
new  <	; Assign Â£temporary288 1>

336:
old  <	; PostCall 28>
new  <	mov ebx, 1>

338:
old  < isalpha$4:>
new  < isdigit$3:>

339:
old  <	; GetReturnValue Â£temporary278>
new  <	; Goto 5>

340:
old  <>
new  <	jmp isdigit$5>

341:
old  < isalpha$5:>
new  <>

342:
old  <	; NotEqual 12 Â£temporary278 0>
new  < isdigit$4:>

343:
old  <	cmp ebx, 0>
new  <	; Assign Â£temporary288 0>

344:
old  <	jne isalpha$12>
new  <	mov ebx, 0>

346:
old  < isalpha$6:>
new  < isdigit$5:>

347:
old  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Return Â£temporary288>

348:
old  <>
new  <	mov rax, [rbp]>

349:
old  < isalpha$7:>
new  <	mov rdi, [rbp + 16]>

350:
old  <	; Parameter signedint c 52>
new  <	mov rbp, [rbp + 8]>

351:
old  <	mov eax, [rbp + 24]>
new  <	jmp rax>

352:
old  <	mov [rbp + 52], eax>
new  <>

353:
old  <>
new  < isdigit$6:>

354:
old  < isalpha$8:>
new  <	; FunctionEnd isdigit>

355:
old  <	; Call isupper 28 0>
new  <>

356:
old  <	mov qword [rbp + 28], isalpha$9>
new  <section .text>

357:
old  <	mov [rbp + 36], rbp>
new  <>

358:
old  <	add rbp, 28>
new  < isalnum:>

359:
old  <	jmp isupper>
new  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

361:
old  < isalpha$9:>
new  < isalnum$1:>

362:
old  <	; PostCall 28>
new  <	; Parameter signedint c 52>

363:
old  <>
new  <	mov eax, [rbp + 24]>

364:
old  < isalpha$10:>
new  <	mov [rbp + 52], eax>

365:
old  <	; GetReturnValue Â£temporary279>
new  <>

366:
old  <>
new  < isalnum$2:>

367:
old  < isalpha$11:>
new  <	; Call isalpha 28 0>

368:
old  <	; Equal 14 Â£temporary279 0>
new  <	mov qword [rbp + 28], isalnum$3>

369:
old  <	cmp ebx, 0>
new  <	mov [rbp + 36], rbp>

370:
old  <	je isalpha$14>
new  <	add rbp, 28>

371:
old  <>
new  <	jmp isalpha>

372:
old  < isalpha$12:>
new  <>

373:
old  <	; Assign Â£temporary283 1>
new  < isalnum$3:>

374:
old  <	mov ebx, 1>
new  <	; PostCall 28>

376:
old  < isalpha$13:>
new  < isalnum$4:>

377:
old  <	; Goto 15>
new  <	; GetReturnValue Â£temporary289>

378:
old  <	jmp isalpha$15>
new  <>

379:
old  <>
new  < isalnum$5:>

380:
old  < isalpha$14:>
new  <	; NotEqual 12 Â£temporary289 0>

381:
old  <	; Assign Â£temporary283 0>
new  <	cmp ebx, 0>

382:
old  <	mov ebx, 0>
new  <	jne isalnum$12>

384:
old  < isalpha$15:>
new  < isalnum$6:>

385:
old  <	; Return Â£temporary283>
new  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

386:
old  <	mov rax, [rbp]>
new  <>

387:
old  <	mov rdi, [rbp + 16]>
new  < isalnum$7:>

388:
old  <	mov rbp, [rbp + 8]>
new  <	; Parameter signedint c 52>

389:
old  <	jmp rax>
new  <	mov eax, [rbp + 24]>

390:
old  <>
new  <	mov [rbp + 52], eax>

391:
old  < isalpha$16:>
new  <>

392:
old  <	; FunctionEnd isalpha>
new  < isalnum$8:>

393:
old  <>
new  <	; Call isdigit 28 0>

394:
old  <section .text>
new  <	mov qword [rbp + 28], isalnum$9>

395:
old  <>
new  <	mov [rbp + 36], rbp>

396:
old  < isdigit:>
new  <	add rbp, 28>

397:
old  <	; SignedLessThan 4 c 48>
new  <	jmp isdigit>

398:
old  <	cmp dword [rbp + 24], 48>
new  <>

399:
old  <	jl isdigit$4>
new  < isalnum$9:>

400:
old  <>
new  <	; PostCall 28>

401:
old  < isdigit$1:>
new  <>

402:
old  <	; SignedGreaterThan 4 c 57>
new  < isalnum$10:>

403:
old  <	cmp dword [rbp + 24], 57>
new  <	; GetReturnValue Â£temporary290>

404:
old  <	jg isdigit$4>
new  <>

405:
old  <>
new  < isalnum$11:>

406:
old  < isdigit$2:>
new  <	; Equal 14 Â£temporary290 0>

407:
old  <	; Assign Â£temporary287 1>
new  <	cmp ebx, 0>

408:
old  <	mov ebx, 1>
new  <	je isalnum$14>

410:
old  < isdigit$3:>
new  < isalnum$12:>

411:
old  <	; Goto 5>
new  <	; Assign Â£temporary294 1>

412:
old  <	jmp isdigit$5>
new  <	mov ebx, 1>

414:
old  < isdigit$4:>
new  < isalnum$13:>

415:
old  <	; Assign Â£temporary287 0>
new  <	; Goto 15>

416:
old  <	mov ebx, 0>
new  <	jmp isalnum$15>

418:
old  < isdigit$5:>
new  < isalnum$14:>

419:
old  <	; Return Â£temporary287>
new  <	; Assign Â£temporary294 0>

420:
old  <	mov rax, [rbp]>
new  <	mov ebx, 0>

421:
old  <	mov rdi, [rbp + 16]>
new  <>

422:
old  <	mov rbp, [rbp + 8]>
new  < isalnum$15:>

423:
old  <	jmp rax>
new  <	; Return Â£temporary294>

424:
old  <>
new  <	mov rax, [rbp]>

425:
old  < isdigit$6:>
new  <	mov rdi, [rbp + 16]>

426:
old  <	; FunctionEnd isdigit>
new  <	mov rbp, [rbp + 8]>

427:
old  <>
new  <	jmp rax>

428:
old  <section .text>
new  <>

429:
old  <>
new  < isalnum$16:>

430:
old  < isalnum:>
new  <	; FunctionEnd isalnum>

431:
old  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

432:
old  <>
new  <section .text>

433:
old  < isalnum$1:>
new  <>

434:
old  <	; Parameter signedint c 52>
new  < isxdigit:>

435:
old  <	mov eax, [rbp + 24]>
new  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

436:
old  <	mov [rbp + 52], eax>
new  <>

437:
old  <>
new  < isxdigit$1:>

438:
old  < isalnum$2:>
new  <	; Parameter signedint c 52>

439:
old  <	; Call isalpha 28 0>
new  <	mov eax, [rbp + 24]>

440:
old  <	mov qword [rbp + 28], isalnum$3>
new  <	mov [rbp + 52], eax>

441:
old  <	mov [rbp + 36], rbp>
new  <>

442:
old  <	add rbp, 28>
new  < isxdigit$2:>

443:
old  <	jmp isalpha>
new  <	; Call isdigit 28 0>

444:
old  <>
new  <	mov qword [rbp + 28], isxdigit$3>

445:
old  < isalnum$3:>
new  <	mov [rbp + 36], rbp>

446:
old  <	; PostCall 28>
new  <	add rbp, 28>

447:
old  <>
new  <	jmp isdigit>

448:
old  < isalnum$4:>
new  <>

449:
old  <	; GetReturnValue Â£temporary288>
new  < isxdigit$3:>

450:
old  <>
new  <	; PostCall 28>

451:
old  < isalnum$5:>
new  <>

452:
old  <	; NotEqual 12 Â£temporary288 0>
new  < isxdigit$4:>

453:
old  <	cmp ebx, 0>
new  <	; GetReturnValue Â£temporary295>

454:
old  <	jne isalnum$12>
new  <>

455:
old  <>
new  < isxdigit$5:>

456:
old  < isalnum$6:>
new  <	; NotEqual 10 Â£temporary295 0>

457:
old  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	cmp ebx, 0>

458:
old  <>
new  <	jne isxdigit$10>

459:
old  < isalnum$7:>
new  <>

460:
old  <	; Parameter signedint c 52>
new  < isxdigit$6:>

461:
old  <	mov eax, [rbp + 24]>
new  <	; SignedLessThan 8 c 97>

462:
old  <	mov [rbp + 52], eax>
new  <	cmp dword [rbp + 24], 97>

463:
old  <>
new  <	jl isxdigit$8>

464:
old  < isalnum$8:>
new  <>

465:
old  <	; Call isdigit 28 0>
new  < isxdigit$7:>

466:
old  <	mov qword [rbp + 28], isalnum$9>
new  <	; SignedLessThanEqual 10 c 102>

467:
old  <	mov [rbp + 36], rbp>
new  <	cmp dword [rbp + 24], 102>

468:
old  <	add rbp, 28>
new  <	jle isxdigit$10>

469:
old  <	jmp isdigit>
new  <>

470:
old  <>
new  < isxdigit$8:>

471:
old  < isalnum$9:>
new  <	; SignedLessThan 12 c 65>

472:
old  <	; PostCall 28>
new  <	cmp dword [rbp + 24], 65>

473:
old  <>
new  <	jl isxdigit$12>

474:
old  < isalnum$10:>
new  <>

475:
old  <	; GetReturnValue Â£temporary289>
new  < isxdigit$9:>

476:
old  <>
new  <	; SignedGreaterThan 12 c 70>

477:
old  < isalnum$11:>
new  <	cmp dword [rbp + 24], 70>

478:
old  <	; Equal 14 Â£temporary289 0>
new  <	jg isxdigit$12>

479:
old  <	cmp ebx, 0>
new  <>

480:
old  <	je isalnum$14>
new  < isxdigit$10:>

481:
old  <>
new  <	; Assign Â£temporary305 1>

482:
old  < isalnum$12:>
new  <	mov ebx, 1>

483:
old  <	; Assign Â£temporary293 1>
new  <>

484:
old  <	mov ebx, 1>
new  < isxdigit$11:>

485:
old  <>
new  <	; Goto 13>

486:
old  < isalnum$13:>
new  <	jmp isxdigit$13>

487:
old  <	; Goto 15>
new  <>

488:
old  <	jmp isalnum$15>
new  < isxdigit$12:>

489:
old  <>
new  <	; Assign Â£temporary305 0>

490:
old  < isalnum$14:>
new  <	mov ebx, 0>

491:
old  <	; Assign Â£temporary293 0>
new  <>

492:
old  <	mov ebx, 0>
new  < isxdigit$13:>

493:
old  <>
new  <	; Return Â£temporary305>

494:
old  < isalnum$15:>
new  <	mov rax, [rbp]>

495:
old  <	; Return Â£temporary293>
new  <	mov rdi, [rbp + 16]>

496:
old  <	mov rax, [rbp]>
new  <	mov rbp, [rbp + 8]>

497:
old  <	mov rdi, [rbp + 16]>
new  <	jmp rax>

498:
old  <	mov rbp, [rbp + 8]>
new  <>

499:
old  <	jmp rax>
new  < isxdigit$14:>

500:
old  <>
new  <	; FunctionEnd isxdigit>

501:
old  < isalnum$16:>
new  <>

502:
old  <	; FunctionEnd isalnum>
new  <section .text>

504:
old  <section .text>
new  < isgraph:>

505:
old  <>
new  <	; SignedLessThan 4 c 32>

506:
old  < isxdigit:>
new  <	cmp dword [rbp + 24], 32>

507:
old  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	jl isgraph$4>

509:
old  < isxdigit$1:>
new  < isgraph$1:>

510:
old  <	; Parameter signedint c 52>
new  <	; SignedGreaterThan 4 c 126>

511:
old  <	mov eax, [rbp + 24]>
new  <	cmp dword [rbp + 24], 126>

512:
old  <	mov [rbp + 52], eax>
new  <	jg isgraph$4>

514:
old  < isxdigit$2:>
new  < isgraph$2:>

515:
old  <	; Call isdigit 28 0>
new  <	; Assign Â£temporary309 1>

516:
old  <	mov qword [rbp + 28], isxdigit$3>
new  <	mov ebx, 1>

517:
old  <	mov [rbp + 36], rbp>
new  <>

518:
old  <	add rbp, 28>
new  < isgraph$3:>

519:
old  <	jmp isdigit>
new  <	; Goto 5>

520:
old  <>
new  <	jmp isgraph$5>

521:
old  < isxdigit$3:>
new  <>

522:
old  <	; PostCall 28>
new  < isgraph$4:>

523:
old  <>
new  <	; Assign Â£temporary309 0>

524:
old  < isxdigit$4:>
new  <	mov ebx, 0>

525:
old  <	; GetReturnValue Â£temporary294>
new  <>

526:
old  <>
new  < isgraph$5:>

527:
old  < isxdigit$5:>
new  <	; Return Â£temporary309>

528:
old  <	; NotEqual 10 Â£temporary294 0>
new  <	mov rax, [rbp]>

529:
old  <	cmp ebx, 0>
new  <	mov rdi, [rbp + 16]>

530:
old  <	jne isxdigit$10>
new  <	mov rbp, [rbp + 8]>

531:
old  <>
new  <	jmp rax>

532:
old  < isxdigit$6:>
new  <>

533:
old  <	; SignedLessThan 8 c 97>
new  < isgraph$6:>

534:
old  <	cmp dword [rbp + 24], 97>
new  <	; FunctionEnd isgraph>

535:
old  <	jl isxdigit$8>
new  <>

536:
old  <>
new  <section .text>

537:
old  < isxdigit$7:>
new  <>

538:
old  <	; SignedLessThanEqual 10 c 102>
new  < isprint:>

539:
old  <	cmp dword [rbp + 24], 102>
new  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

540:
old  <	jle isxdigit$10>
new  <>

541:
old  <>
new  < isprint$1:>

542:
old  < isxdigit$8:>
new  <	; Parameter signedint c 52>

543:
old  <	; SignedLessThan 12 c 65>
new  <	mov eax, [rbp + 24]>

544:
old  <	cmp dword [rbp + 24], 65>
new  <	mov [rbp + 52], eax>

545:
old  <	jl isxdigit$12>
new  <>

546:
old  <>
new  < isprint$2:>

547:
old  < isxdigit$9:>
new  <	; Call isgraph 28 0>

548:
old  <	; SignedGreaterThan 12 c 70>
new  <	mov qword [rbp + 28], isprint$3>

549:
old  <	cmp dword [rbp + 24], 70>
new  <	mov [rbp + 36], rbp>

550:
old  <	jg isxdigit$12>
new  <	add rbp, 28>

551:
old  <>
new  <	jmp isgraph>

552:
old  < isxdigit$10:>
new  <>

553:
old  <	; Assign Â£temporary304 1>
new  < isprint$3:>

554:
old  <	mov ebx, 1>
new  <	; PostCall 28>

556:
old  < isxdigit$11:>
new  < isprint$4:>

557:
old  <	; Goto 13>
new  <	; GetReturnValue Â£temporary310>

558:
old  <	jmp isxdigit$13>
new  <>

559:
old  <>
new  < isprint$5:>

560:
old  < isxdigit$12:>
new  <	; Equal 9 Â£temporary310 0>

561:
old  <	; Assign Â£temporary304 0>
new  <	cmp ebx, 0>

562:
old  <	mov ebx, 0>
new  <	je isprint$9>

564:
old  < isxdigit$13:>
new  < isprint$6:>

565:
old  <	; Return Â£temporary304>
new  <	; Equal 9 c 32>

566:
old  <	mov rax, [rbp]>
new  <	cmp dword [rbp + 24], 32>

567:
old  <	mov rdi, [rbp + 16]>
new  <	je isprint$9>

568:
old  <	mov rbp, [rbp + 8]>
new  <>

569:
old  <	jmp rax>
new  < isprint$7:>

570:
old  <>
new  <	; Assign Â£temporary314 1>

571:
old  < isxdigit$14:>
new  <	mov ebx, 1>

572:
old  <	; FunctionEnd isxdigit>
new  <>

573:
old  <>
new  < isprint$8:>

574:
old  <section .text>
new  <	; Goto 10>

575:
old  <>
new  <	jmp isprint$10>

576:
old  < isgraph:>
new  <>

577:
old  <	; SignedLessThan 4 c 32>
new  < isprint$9:>

578:
old  <	cmp dword [rbp + 24], 32>
new  <	; Assign Â£temporary314 0>

579:
old  <	jl isgraph$4>
new  <	mov ebx, 0>

581:
old  < isgraph$1:>
new  < isprint$10:>

582:
old  <	; SignedGreaterThan 4 c 126>
new  <	; Return Â£temporary314>

583:
old  <	cmp dword [rbp + 24], 126>
new  <	mov rax, [rbp]>

584:
old  <	jg isgraph$4>
new  <	mov rdi, [rbp + 16]>

585:
old  <>
new  <	mov rbp, [rbp + 8]>

586:
old  < isgraph$2:>
new  <	jmp rax>

587:
old  <	; Assign Â£temporary308 1>
new  <>

588:
old  <	mov ebx, 1>
new  < isprint$11:>

589:
old  <>
new  <	; FunctionEnd isprint>

590:
old  < isgraph$3:>
new  <>

591:
old  <	; Goto 5>
new  <section .text>

592:
old  <	jmp isgraph$5>
new  <>

593:
old  <>
new  < ispunct:>

594:
old  < isgraph$4:>
new  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

595:
old  <	; Assign Â£temporary308 0>
new  <>

596:
old  <	mov ebx, 0>
new  < ispunct$1:>

597:
old  <>
new  <	; Parameter signedint c 52>

598:
old  < isgraph$5:>
new  <	mov eax, [rbp + 24]>

599:
old  <	; Return Â£temporary308>
new  <	mov [rbp + 52], eax>

600:
old  <	mov rax, [rbp]>
new  <>

601:
old  <	mov rdi, [rbp + 16]>
new  < ispunct$2:>

602:
old  <	mov rbp, [rbp + 8]>
new  <	; Call isgraph 28 0>

603:
old  <	jmp rax>
new  <	mov qword [rbp + 28], ispunct$3>

604:
old  <>
new  <	mov [rbp + 36], rbp>

605:
old  < isgraph$6:>
new  <	add rbp, 28>

606:
old  <	; FunctionEnd isgraph>
new  <	jmp isgraph>

608:
old  <section .text>
new  < ispunct$3:>

609:
old  <>
new  <	; PostCall 28>

610:
old  < isprint:>
new  <>

611:
old  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < ispunct$4:>

612:
old  <>
new  <	; GetReturnValue Â£temporary315>

613:
old  < isprint$1:>
new  <>

614:
old  <	; Parameter signedint c 52>
new  < ispunct$5:>

615:
old  <	mov eax, [rbp + 24]>
new  <	; Equal 14 Â£temporary315 0>

616:
old  <	mov [rbp + 52], eax>
new  <	cmp ebx, 0>

617:
old  <>
new  <	je ispunct$14>

618:
old  < isprint$2:>
new  <>

619:
old  <	; Call isgraph 28 0>
new  < ispunct$6:>

620:
old  <	mov qword [rbp + 28], isprint$3>
new  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

621:
old  <	mov [rbp + 36], rbp>
new  <>

622:
old  <	add rbp, 28>
new  < ispunct$7:>

623:
old  <	jmp isgraph>
new  <	; Parameter signedint c 52>

624:
old  <>
new  <	mov eax, [rbp + 24]>

625:
old  < isprint$3:>
new  <	mov [rbp + 52], eax>

626:
old  <	; PostCall 28>
new  <>

627:
old  <>
new  < ispunct$8:>

628:
old  < isprint$4:>
new  <	; Call isalnum 28 0>

629:
old  <	; GetReturnValue Â£temporary309>
new  <	mov qword [rbp + 28], ispunct$9>

630:
old  <>
new  <	mov [rbp + 36], rbp>

631:
old  < isprint$5:>
new  <	add rbp, 28>

632:
old  <	; Equal 9 Â£temporary309 0>
new  <	jmp isalnum>

633:
old  <	cmp ebx, 0>
new  <>

634:
old  <	je isprint$9>
new  < ispunct$9:>

635:
old  <>
new  <	; PostCall 28>

636:
old  < isprint$6:>
new  <>

637:
old  <	; Equal 9 c 32>
new  < ispunct$10:>

638:
old  <	cmp dword [rbp + 24], 32>
new  <	; GetReturnValue Â£temporary317>

639:
old  <	je isprint$9>
new  <>

640:
old  <>
new  < ispunct$11:>

641:
old  < isprint$7:>
new  <	; NotEqual 14 Â£temporary317 0>

642:
old  <	; Assign Â£temporary313 1>
new  <	cmp ebx, 0>

643:
old  <	mov ebx, 1>
new  <	jne ispunct$14>

645:
old  < isprint$8:>
new  < ispunct$12:>

646:
old  <	; Goto 10>
new  <	; Assign Â£temporary321 1>

647:
old  <	jmp isprint$10>
new  <	mov ebx, 1>

649:
old  < isprint$9:>
new  < ispunct$13:>

650:
old  <	; Assign Â£temporary313 0>
new  <	; Goto 15>

651:
old  <	mov ebx, 0>
new  <	jmp ispunct$15>

653:
old  < isprint$10:>
new  < ispunct$14:>

654:
old  <	; Return Â£temporary313>
new  <	; Assign Â£temporary321 0>

655:
old  <	mov rax, [rbp]>
new  <	mov ebx, 0>

656:
old  <	mov rdi, [rbp + 16]>
new  <>

657:
old  <	mov rbp, [rbp + 8]>
new  < ispunct$15:>

658:
old  <	jmp rax>
new  <	; Return Â£temporary321>

659:
old  <>
new  <	mov rax, [rbp]>

660:
old  < isprint$11:>
new  <	mov rdi, [rbp + 16]>

661:
old  <	; FunctionEnd isprint>
new  <	mov rbp, [rbp + 8]>

662:
old  <>
new  <	jmp rax>

663:
old  <section .text>
new  <>

664:
old  <>
new  < ispunct$16:>

665:
old  < ispunct:>
new  <	; FunctionEnd ispunct>

666:
old  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

667:
old  <>
new  <section .text>

668:
old  < ispunct$1:>
new  <>

669:
old  <	; Parameter signedint c 52>
new  < iscntrl:>

670:
old  <	mov eax, [rbp + 24]>
new  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

671:
old  <	mov [rbp + 52], eax>
new  <>

672:
old  <>
new  < iscntrl$1:>

673:
old  < ispunct$2:>
new  <	; Parameter signedint c 52>

674:
old  <	; Call isgraph 28 0>
new  <	mov eax, [rbp + 24]>

675:
old  <	mov qword [rbp + 28], ispunct$3>
new  <	mov [rbp + 52], eax>

676:
old  <	mov [rbp + 36], rbp>
new  <>

677:
old  <	add rbp, 28>
new  < iscntrl$2:>

678:
old  <	jmp isgraph>
new  <	; Call isprint 28 0>

679:
old  <>
new  <	mov qword [rbp + 28], iscntrl$3>

680:
old  < ispunct$3:>
new  <	mov [rbp + 36], rbp>

681:
old  <	; PostCall 28>
new  <	add rbp, 28>

682:
old  <>
new  <	jmp isprint>

683:
old  < ispunct$4:>
new  <>

684:
old  <	; GetReturnValue Â£temporary314>
new  < iscntrl$3:>

685:
old  <>
new  <	; PostCall 28>

686:
old  < ispunct$5:>
new  <>

687:
old  <	; Equal 14 Â£temporary314 0>
new  < iscntrl$4:>

688:
old  <	cmp ebx, 0>
new  <	; GetReturnValue Â£temporary322>

689:
old  <	je ispunct$14>
new  <>

690:
old  <>
new  < iscntrl$5:>

691:
old  < ispunct$6:>
new  <	; NotEqual 8 Â£temporary322 0>

692:
old  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	cmp ebx, 0>

693:
old  <>
new  <	jne iscntrl$8>

694:
old  < ispunct$7:>
new  <>

695:
old  <	; Parameter signedint c 52>
new  < iscntrl$6:>

696:
old  <	mov eax, [rbp + 24]>
new  <	; Assign Â£temporary325 1>

697:
old  <	mov [rbp + 52], eax>
new  <	mov ebx, 1>

699:
old  < ispunct$8:>
new  < iscntrl$7:>

700:
old  <	; Call isalnum 28 0>
new  <	; Goto 9>

701:
old  <	mov qword [rbp + 28], ispunct$9>
new  <	jmp iscntrl$9>

702:
old  <	mov [rbp + 36], rbp>
new  <>

703:
old  <	add rbp, 28>
new  < iscntrl$8:>

704:
old  <	jmp isalnum>
new  <	; Assign Â£temporary325 0>

705:
old  <>
new  <	mov ebx, 0>

706:
old  < ispunct$9:>
new  <>

707:
old  <	; PostCall 28>
new  < iscntrl$9:>

708:
old  <>
new  <	; Return Â£temporary325>

709:
old  < ispunct$10:>
new  <	mov rax, [rbp]>

710:
old  <	; GetReturnValue Â£temporary316>
new  <	mov rdi, [rbp + 16]>

711:
old  <>
new  <	mov rbp, [rbp + 8]>

712:
old  < ispunct$11:>
new  <	jmp rax>

713:
old  <	; NotEqual 14 Â£temporary316 0>
new  <>

714:
old  <	cmp ebx, 0>
new  < iscntrl$10:>

715:
old  <	jne ispunct$14>
new  <	; FunctionEnd iscntrl>

717:
old  < ispunct$12:>
new  <section .text>

718:
old  <	; Assign Â£temporary320 1>
new  <>

719:
old  <	mov ebx, 1>
new  < isspace:>

720:
old  <>
new  <	; Equal 6 c 32>

721:
old  < ispunct$13:>
new  <	cmp dword [rbp + 24], 32>

722:
old  <	; Goto 15>
new  <	je isspace$6>

723:
old  <	jmp ispunct$15>
new  <>

724:
old  <>
new  < isspace$1:>

725:
old  < ispunct$14:>
new  <	; Equal 6 c 12>

726:
old  <	; Assign Â£temporary320 0>
new  <	cmp dword [rbp + 24], 12>

727:
old  <	mov ebx, 0>
new  <	je isspace$6>

729:
old  < ispunct$15:>
new  < isspace$2:>

730:
old  <	; Return Â£temporary320>
new  <	; Equal 6 c 10>

731:
old  <	mov rax, [rbp]>
new  <	cmp dword [rbp + 24], 10>

732:
old  <	mov rdi, [rbp + 16]>
new  <	je isspace$6>

733:
old  <	mov rbp, [rbp + 8]>
new  <>

734:
old  <	jmp rax>
new  < isspace$3:>

735:
old  <>
new  <	; Equal 6 c 13>

736:
old  < ispunct$16:>
new  <	cmp dword [rbp + 24], 13>

737:
old  <	; FunctionEnd ispunct>
new  <	je isspace$6>

739:
old  <section .text>
new  < isspace$4:>

740:
old  <>
new  <	; Equal 6 c 9>

741:
old  < iscntrl:>
new  <	cmp dword [rbp + 24], 9>

742:
old  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	je isspace$6>

744:
old  < iscntrl$1:>
new  < isspace$5:>

745:
old  <	; Parameter signedint c 52>
new  <	; NotEqual 8 c 11>

746:
old  <	mov eax, [rbp + 24]>
new  <	cmp dword [rbp + 24], 11>

747:
old  <	mov [rbp + 52], eax>
new  <	jne isspace$8>

749:
old  < iscntrl$2:>
new  < isspace$6:>

750:
old  <	; Call isprint 28 0>
new  <	; Assign Â£temporary337 1>

751:
old  <	mov qword [rbp + 28], iscntrl$3>
new  <	mov ebx, 1>

752:
old  <	mov [rbp + 36], rbp>
new  <>

753:
old  <	add rbp, 28>
new  < isspace$7:>

754:
old  <	jmp isprint>
new  <	; Goto 9>

755:
old  <>
new  <	jmp isspace$9>

756:
old  < iscntrl$3:>
new  <>

757:
old  <	; PostCall 28>
new  < isspace$8:>

758:
old  <>
new  <	; Assign Â£temporary337 0>

759:
old  < iscntrl$4:>
new  <	mov ebx, 0>

760:
old  <	; GetReturnValue Â£temporary321>
new  <>

761:
old  <>
new  < isspace$9:>

762:
old  < iscntrl$5:>
new  <	; Return Â£temporary337>

763:
old  <	; NotEqual 8 Â£temporary321 0>
new  <	mov rax, [rbp]>

764:
old  <	cmp ebx, 0>
new  <	mov rdi, [rbp + 16]>

765:
old  <	jne iscntrl$8>
new  <	mov rbp, [rbp + 8]>

766:
old  <>
new  <	jmp rax>

767:
old  < iscntrl$6:>
new  <>

768:
old  <	; Assign Â£temporary324 1>
new  < isspace$10:>

769:
old  <	mov ebx, 1>
new  <	; FunctionEnd isspace>

771:
old  < iscntrl$7:>
new  <section .text>

772:
old  <	; Goto 9>
new  <>

773:
old  <	jmp iscntrl$9>
new  < tolower:>

774:
old  <>
new  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

775:
old  < iscntrl$8:>
new  <>

776:
old  <	; Assign Â£temporary324 0>
new  < tolower$1:>

777:
old  <	mov ebx, 0>
new  <	; Parameter signedint c 52>

778:
old  <>
new  <	mov eax, [rbp + 24]>

779:
old  < iscntrl$9:>
new  <	mov [rbp + 52], eax>

780:
old  <	; Return Â£temporary324>
new  <>

781:
old  <	mov rax, [rbp]>
new  < tolower$2:>

782:
old  <	mov rdi, [rbp + 16]>
new  <	; Call isupper 28 0>

783:
old  <	mov rbp, [rbp + 8]>
new  <	mov qword [rbp + 28], tolower$3>

784:
old  <	jmp rax>
new  <	mov [rbp + 36], rbp>

785:
old  <>
new  <	add rbp, 28>

786:
old  < iscntrl$10:>
new  <	jmp isupper>

787:
old  <	; FunctionEnd iscntrl>
new  <>

788:
old  <>
new  < tolower$3:>

789:
old  <section .text>
new  <	; PostCall 28>

791:
old  < isspace:>
new  < tolower$4:>

792:
old  <	; Equal 6 c 32>
new  <	; GetReturnValue Â£temporary338>

793:
old  <	cmp dword [rbp + 24], 32>
new  <>

794:
old  <	je isspace$6>
new  < tolower$5:>

795:
old  <>
new  <	; Equal 32 Â£temporary338 0>

796:
old  < isspace$1:>
new  <	cmp ebx, 0>

797:
old  <	; Equal 6 c 12>
new  <	je tolower$32>

798:
old  <	cmp dword [rbp + 24], 12>
new  <>

799:
old  <	je isspace$6>
new  < tolower$6:>

800:
old  <>
new  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

801:
old  < isspace$2:>
new  <>

802:
old  <	; Equal 6 c 10>
new  < tolower$7:>

803:
old  <	cmp dword [rbp + 24], 10>
new  <	; Call localeconv 28 0>

804:
old  <	je isspace$6>
new  <	mov qword [rbp + 28], tolower$8>

805:
old  <>
new  <	mov [rbp + 36], rbp>

806:
old  < isspace$3:>
new  <	add rbp, 28>

807:
old  <	; Equal 6 c 13>
new  <	jmp localeconv>

808:
old  <	cmp dword [rbp + 24], 13>
new  <>

809:
old  <	je isspace$6>
new  < tolower$8:>

810:
old  <>
new  <	; PostCall 28>

811:
old  < isspace$4:>
new  <>

812:
old  <	; Equal 6 c 9>
new  < tolower$9:>

813:
old  <	cmp dword [rbp + 24], 9>
new  <	; GetReturnValue Â£temporary339>

814:
old  <	je isspace$6>
new  <>

815:
old  <>
new  < tolower$10:>

816:
old  < isspace$5:>
new  <	; Assign localeConvPtr Â£temporary339>

817:
old  <	; NotEqual 8 c 11>
new  <	mov [rbp + 28], rbx>

818:
old  <	cmp dword [rbp + 24], 11>
new  <>

819:
old  <	jne isspace$8>
new  < tolower$11:>

820:
old  <>
new  <	; Equal 30 localeConvPtr 0>

821:
old  < isspace$6:>
new  <	cmp qword [rbp + 28], 0>

822:
old  <	; Assign Â£temporary336 1>
new  <	je tolower$30>

823:
old  <	mov ebx, 1>
new  <>

824:
old  <>
new  < tolower$12:>

825:
old  < isspace$7:>
new  <	; Dereference Â£temporary341 -> localeConvPtr localeConvPtr 0>

826:
old  <	; Goto 9>
new  <	mov rsi, [rbp + 28]>

827:
old  <	jmp isspace$9>
new  <>

828:
old  <>
new  < tolower$13:>

829:
old  < isspace$8:>
new  <	; Assign lowerCase Â£temporary341 -> localeConvPtr>

830:
old  <	; Assign Â£temporary336 0>
new  <	mov rax, [rsi + 40]>

831:
old  <	mov ebx, 0>
new  <	mov [rbp + 36], rax>

833:
old  < isspace$9:>
new  < tolower$14:>

834:
old  <	; Return Â£temporary336>
new  <	; Dereference Â£temporary342 -> localeConvPtr localeConvPtr 0>

835:
old  <	mov rax, [rbp]>
new  <	mov rsi, [rbp + 28]>

836:
old  <	mov rdi, [rbp + 16]>
new  <>

837:
old  <	mov rbp, [rbp + 8]>
new  < tolower$15:>

838:
old  <	jmp rax>
new  <	; Assign upperCase Â£temporary342 -> localeConvPtr>

839:
old  <>
new  <	mov rax, [rsi + 48]>

840:
old  < isspace$10:>
new  <	mov [rbp + 44], rax>

841:
old  <	; FunctionEnd isspace>
new  <>

842:
old  <>
new  < tolower$16:>

843:
old  <section .text>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

845:
old  < tolowerX:>
new  < tolower$17:>

846:
old  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter pointer upperCase 76>

847:
old  <>
new  <	mov rax, [rbp + 44]>

848:
old  < tolowerX$1:>
new  <	mov [rbp + 76], rax>

849:
old  <	; Parameter signedint c 52>
new  <>

850:
old  <	mov eax, [rbp + 24]>
new  < tolower$18:>

851:
old  <	mov [rbp + 52], eax>
new  <	; Parameter signedint c 84>

852:
old  <>
new  <	mov eax, [rbp + 24]>

853:
old  < tolowerX$2:>
new  <	mov [rbp + 84], eax>

854:
old  <	; Call isupper 28 0>
new  <>

855:
old  <	mov qword [rbp + 28], tolowerX$3>
new  < tolower$19:>

856:
old  <	mov [rbp + 36], rbp>
new  <	; Call strchr 52 0>

857:
old  <	add rbp, 28>
new  <	mov qword [rbp + 52], tolower$20>

858:
old  <	jmp isupper>
new  <	mov [rbp + 60], rbp>

859:
old  <>
new  <	add rbp, 52>

860:
old  < tolowerX$3:>
new  <	jmp strchr>

861:
old  <	; PostCall 28>
new  <>

862:
old  <>
new  < tolower$20:>

863:
old  < tolowerX$4:>
new  <	; PostCall 52>

864:
old  <	; GetReturnValue Â£temporary337>
new  <>

865:
old  <>
new  < tolower$21:>

866:
old  < tolowerX$5:>
new  <	; GetReturnValue Â£temporary343>

867:
old  <	; Equal 8 Â£temporary337 0>
new  <>

868:
old  <	cmp ebx, 0>
new  < tolower$22:>

869:
old  <	je tolowerX$8>
new  <	; BinarySubtract Â£temporary345 Â£temporary343 upperCase>

870:
old  <>
new  <	sub rbx, [rbp + 44]>

871:
old  < tolowerX$6:>
new  <>

872:
old  <	; BinaryAdd Â£temporary340 c 32>
new  < tolower$23:>

873:
old  <	mov ebx, [rbp + 24]>
new  <	; IntegralToIntegral Â£temporary346 Â£temporary345>

874:
old  <	add ebx, 32>
new  <>

875:
old  <>
new  < tolower$24:>

876:
old  < tolowerX$7:>
new  <	; Assign index Â£temporary346>

877:
old  <	; Goto 9>
new  <	mov [rbp + 52], ebx>

878:
old  <	jmp tolowerX$9>
new  <>

879:
old  <>
new  < tolower$25:>

880:
old  < tolowerX$8:>
new  <	; IntegralToIntegral Â£temporary348 index>

881:
old  <	; Assign Â£temporary340 c>
new  <	mov eax, [rbp + 52]>

882:
old  <	mov ebx, [rbp + 24]>
new  <	mov rbx, 4294967295>

883:
old  <>
new  <	and rax, rbx>

884:
old  < tolowerX$9:>
new  <>

885:
old  <	; Return Â£temporary340>
new  < tolower$26:>

886:
old  <	mov rax, [rbp]>
new  <	; BinaryAdd Â£temporary350 lowerCase Â£temporary348>

887:
old  <	mov rdi, [rbp + 16]>
new  <	mov rsi, [rbp + 36]>

888:
old  <	mov rbp, [rbp + 8]>
new  <	add rsi, rax>

889:
old  <	jmp rax>
new  <>

890:
old  <>
new  < tolower$27:>

891:
old  < tolowerX$10:>
new  <	; Dereference Â£temporary347 -> Â£temporary350 Â£temporary350 0>

892:
old  <	; FunctionEnd tolowerX>
new  <>

893:
old  <>
new  < tolower$28:>

894:
old  <section .text>
new  <	; IntegralToIntegral Â£temporary351 Â£temporary347 -> Â£temporary350>

895:
old  <>
new  <	mov bl, [rsi]>

896:
old  < tolower:>
new  <	and ebx, 255>

897:
old  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	cmp bl, 0>

898:
old  <>
new  <	jge tolower$29>

899:
old  < tolower$1:>
new  <	neg bl>

900:
old  <	; Parameter signedint c 52>
new  <	neg ebx>

901:
old  <	mov eax, [rbp + 24]>
new  <>

902:
old  <	mov [rbp + 52], eax>
new  < tolower$29:>

903:
old  <>
new  <	; Return Â£temporary351>

904:
old  < tolower$2:>
new  <	mov rax, [rbp]>

905:
old  <	; Call isupper 28 0>
new  <	mov rdi, [rbp + 16]>

906:
old  <	mov qword [rbp + 28], tolower$3>
new  <	mov rbp, [rbp + 8]>

907:
old  <	mov [rbp + 36], rbp>
new  <	jmp rax>

908:
old  <	add rbp, 28>
new  <>

909:
old  <	jmp isupper>
new  < tolower$30:>

910:
old  <>
new  <	; BinaryAdd Â£temporary352 c 32>

911:
old  < tolower$3:>
new  <	mov ebx, [rbp + 24]>

912:
old  <	; PostCall 28>
new  <	add ebx, 32>

914:
old  < tolower$4:>
new  < tolower$31:>

915:
old  <	; GetReturnValue Â£temporary341>
new  <	; Return Â£temporary352>

916:
old  <>
new  <	mov rax, [rbp]>

917:
old  < tolower$5:>
new  <	mov rdi, [rbp + 16]>

918:
old  <	; Equal 32 Â£temporary341 0>
new  <	mov rbp, [rbp + 8]>

919:
old  <	cmp ebx, 0>
new  <	jmp rax>

920:
old  <	je tolower$32>
new  <>

921:
old  <>
new  < tolower$32:>

922:
old  < tolower$6:>
new  <	; Return c>

923:
old  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov ebx, [rbp + 24]>

924:
old  <>
new  <	mov rax, [rbp]>

925:
old  < tolower$7:>
new  <	mov rdi, [rbp + 16]>

926:
old  <	; Call localeconv 28 0>
new  <	mov rbp, [rbp + 8]>

927:
old  <	mov qword [rbp + 28], tolower$8>
new  <	jmp rax>

928:
old  <	mov [rbp + 36], rbp>
new  <>

929:
old  <	add rbp, 28>
new  < tolower$33:>

930:
old  <	jmp localeconv>
new  <	; FunctionEnd tolower>

932:
old  < tolower$8:>
new  <section .text>

933:
old  <	; PostCall 28>
new  <>

934:
old  <>
new  < toupper:>

935:
old  < tolower$9:>
new  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

936:
old  <	; GetReturnValue Â£temporary342>
new  <>

937:
old  <>
new  < toupper$1:>

938:
old  < tolower$10:>
new  <	; Parameter signedint c 52>

939:
old  <	; Assign localeConvPtr Â£temporary342>
new  <	mov eax, [rbp + 24]>

940:
old  <	mov [rbp + 28], rbx>
new  <	mov [rbp + 52], eax>

942:
old  < tolower$11:>
new  < toupper$2:>

943:
old  <	; Equal 30 localeConvPtr 0>
new  <	; Call islower 28 0>

944:
old  <	cmp qword [rbp + 28], 0>
new  <	mov qword [rbp + 28], toupper$3>

945:
old  <	je tolower$30>
new  <	mov [rbp + 36], rbp>

946:
old  <>
new  <	add rbp, 28>

947:
old  < tolower$12:>
new  <	jmp islower>

948:
old  <	; Dereference Â£temporary344 -> localeConvPtr localeConvPtr 0>
new  <>

949:
old  <	mov rsi, [rbp + 28]>
new  < toupper$3:>

950:
old  <>
new  <	; PostCall 28>

951:
old  < tolower$13:>
new  <>

952:
old  <	; Assign lowerCase Â£temporary344 -> localeConvPtr>
new  < toupper$4:>

953:
old  <	mov rax, [rsi + 40]>
new  <	; GetReturnValue Â£temporary354>

954:
old  <	mov [rbp + 36], rax>
new  <>

955:
old  <>
new  < toupper$5:>

956:
old  < tolower$14:>
new  <	; Equal 32 Â£temporary354 0>

957:
old  <	; Dereference Â£temporary345 -> localeConvPtr localeConvPtr 0>
new  <	cmp ebx, 0>

958:
old  <	mov rsi, [rbp + 28]>
new  <	je toupper$32>

960:
old  < tolower$15:>
new  < toupper$6:>

961:
old  <	; Assign upperCase Â£temporary345 -> localeConvPtr>
new  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

962:
old  <	mov rax, [rsi + 48]>
new  <>

963:
old  <	mov [rbp + 44], rax>
new  < toupper$7:>

964:
old  <>
new  <	; Call localeconv 28 0>

965:
old  < tolower$16:>
new  <	mov qword [rbp + 28], toupper$8>

966:
old  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov [rbp + 36], rbp>

967:
old  <>
new  <	add rbp, 28>

968:
old  < tolower$17:>
new  <	jmp localeconv>

969:
old  <	; Parameter pointer upperCase 76>
new  <>

970:
old  <	mov rax, [rbp + 44]>
new  < toupper$8:>

971:
old  <	mov [rbp + 76], rax>
new  <	; PostCall 28>

973:
old  < tolower$18:>
new  < toupper$9:>

974:
old  <	; Parameter signedint c 84>
new  <	; GetReturnValue Â£temporary355>

975:
old  <	mov eax, [rbp + 24]>
new  <>

976:
old  <	mov [rbp + 84], eax>
new  < toupper$10:>

977:
old  <>
new  <	; Assign localeConvPtr Â£temporary355>

978:
old  < tolower$19:>
new  <	mov [rbp + 28], rbx>

979:
old  <	; Call strchr 52 0>
new  <>

980:
old  <	mov qword [rbp + 52], tolower$20>
new  < toupper$11:>

981:
old  <	mov [rbp + 60], rbp>
new  <	; Equal 30 localeConvPtr 0>

982:
old  <	add rbp, 52>
new  <	cmp qword [rbp + 28], 0>

983:
old  <	jmp strchr>
new  <	je toupper$30>

985:
old  < tolower$20:>
new  < toupper$12:>

986:
old  <	; PostCall 52>
new  <	; Dereference Â£temporary357 -> localeConvPtr localeConvPtr 0>

987:
old  <>
new  <	mov rsi, [rbp + 28]>

988:
old  < tolower$21:>
new  <>

989:
old  <	; GetReturnValue Â£temporary346>
new  < toupper$13:>

990:
old  <>
new  <	; Assign lowerCase Â£temporary357 -> localeConvPtr>

991:
old  < tolower$22:>
new  <	mov rax, [rsi + 40]>

992:
old  <	; BinarySubtract Â£temporary348 Â£temporary346 upperCase>
new  <	mov [rbp + 36], rax>

993:
old  <	sub rbx, [rbp + 44]>
new  <>

994:
old  <>
new  < toupper$14:>

995:
old  < tolower$23:>
new  <	; Dereference Â£temporary358 -> localeConvPtr localeConvPtr 0>

996:
old  <	; IntegralToIntegral Â£temporary349 Â£temporary348>
new  <	mov rsi, [rbp + 28]>

998:
old  < tolower$24:>
new  < toupper$15:>

999:
old  <	; Assign index Â£temporary349>
new  <	; Assign upperCase Â£temporary358 -> localeConvPtr>

1000:
old  <	mov [rbp + 52], ebx>
new  <	mov rax, [rsi + 48]>

1001:
old  <>
new  <	mov [rbp + 44], rax>

1002:
old  < tolower$25:>
new  <>

1003:
old  <	; IntegralToIntegral Â£temporary351 index>
new  < toupper$16:>

1004:
old  <	mov eax, [rbp + 52]>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1005:
old  <	mov rbx, 4294967295>
new  <>

1006:
old  <	and rax, rbx>
new  < toupper$17:>

1007:
old  <>
new  <	; Parameter pointer lowerCase 76>

1008:
old  < tolower$26:>
new  <	mov rax, [rbp + 36]>

1009:
old  <	; BinaryAdd Â£temporary353 lowerCase Â£temporary351>
new  <	mov [rbp + 76], rax>

1010:
old  <	mov rsi, [rbp + 36]>
new  <>

1011:
old  <	add rsi, rax>
new  < toupper$18:>

1012:
old  <>
new  <	; Parameter signedint c 84>

1013:
old  < tolower$27:>
new  <	mov eax, [rbp + 24]>

1014:
old  <	; Dereference Â£temporary350 -> Â£temporary353 Â£temporary353 0>
new  <	mov [rbp + 84], eax>

1016:
old  < tolower$28:>
new  < toupper$19:>

1017:
old  <	; IntegralToIntegral Â£temporary354 Â£temporary350 -> Â£temporary353>
new  <	; Call strchr 52 0>

1018:
old  <	mov bl, [rsi]>
new  <	mov qword [rbp + 52], toupper$20>

1019:
old  <	and ebx, 255>
new  <	mov [rbp + 60], rbp>

1020:
old  <	cmp bl, 0>
new  <	add rbp, 52>

1021:
old  <	jge tolower$29>
new  <	jmp strchr>

1022:
old  <	neg bl>
new  <>

1023:
old  <	neg ebx>
new  < toupper$20:>

1024:
old  <>
new  <	; PostCall 52>

1025:
old  < tolower$29:>
new  <>

1026:
old  <	; Return Â£temporary354>
new  < toupper$21:>

1027:
old  <	mov rax, [rbp]>
new  <	; GetReturnValue Â£temporary359>

1028:
old  <	mov rdi, [rbp + 16]>
new  <>

1029:
old  <	mov rbp, [rbp + 8]>
new  < toupper$22:>

1030:
old  <	jmp rax>
new  <	; BinarySubtract Â£temporary361 Â£temporary359 lowerCase>

1031:
old  <>
new  <	sub rbx, [rbp + 36]>

1032:
old  < tolower$30:>
new  <>

1033:
old  <	; BinaryAdd Â£temporary355 c 32>
new  < toupper$23:>

1034:
old  <	mov ebx, [rbp + 24]>
new  <	; IntegralToIntegral Â£temporary362 Â£temporary361>

1035:
old  <	add ebx, 32>
new  <>

1036:
old  <>
new  < toupper$24:>

1037:
old  < tolower$31:>
new  <	; Assign index Â£temporary362>

1038:
old  <	; Return Â£temporary355>
new  <	mov [rbp + 52], ebx>

1039:
old  <	mov rax, [rbp]>
new  <>

1040:
old  <	mov rdi, [rbp + 16]>
new  < toupper$25:>

1041:
old  <	mov rbp, [rbp + 8]>
new  <	; IntegralToIntegral Â£temporary364 index>

1042:
old  <	jmp rax>
new  <	mov eax, [rbp + 52]>

1043:
old  <>
new  <	mov rbx, 4294967295>

1044:
old  < tolower$32:>
new  <	and rax, rbx>

1045:
old  <	; Return c>
new  <>

1046:
old  <	mov ebx, [rbp + 24]>
new  < toupper$26:>

1047:
old  <	mov rax, [rbp]>
new  <	; BinaryAdd Â£temporary366 upperCase Â£temporary364>

1048:
old  <	mov rdi, [rbp + 16]>
new  <	mov rsi, [rbp + 44]>

1049:
old  <	mov rbp, [rbp + 8]>
new  <	add rsi, rax>

1050:
old  <	jmp rax>
new  <>

1051:
old  <>
new  < toupper$27:>

1052:
old  < tolower$33:>
new  <	; Dereference Â£temporary363 -> Â£temporary366 Â£temporary366 0>

1053:
old  <	; FunctionEnd tolower>
new  <>

1054:
old  <>
new  < toupper$28:>

1055:
old  <section .text>
new  <	; IntegralToIntegral Â£temporary367 Â£temporary363 -> Â£temporary366>

1056:
old  <>
new  <	mov bl, [rsi]>

1057:
old  < toupperX:>
new  <	and ebx, 255>

1058:
old  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	cmp bl, 0>

1059:
old  <>
new  <	jge toupper$29>

1060:
old  < toupperX$1:>
new  <	neg bl>

1061:
old  <	; Parameter signedint c 52>
new  <	neg ebx>

1062:
old  <	mov eax, [rbp + 24]>
new  <>

1063:
old  <	mov [rbp + 52], eax>
new  < toupper$29:>

1064:
old  <>
new  <	; Return Â£temporary367>

1065:
old  < toupperX$2:>
new  <	mov rax, [rbp]>

1066:
old  <	; Call islower 28 0>
new  <	mov rdi, [rbp + 16]>

1067:
old  <	mov qword [rbp + 28], toupperX$3>
new  <	mov rbp, [rbp + 8]>

1068:
old  <	mov [rbp + 36], rbp>
new  <	jmp rax>

1069:
old  <	add rbp, 28>
new  <>

1070:
old  <	jmp islower>
new  < toupper$30:>

1071:
old  <>
new  <	; BinarySubtract Â£temporary368 c 32>

1072:
old  < toupperX$3:>
new  <	mov ebx, [rbp + 24]>

1073:
old  <	; PostCall 28>
new  <	sub ebx, 32>

1075:
old  < toupperX$4:>
new  < toupper$31:>

1076:
old  <	; GetReturnValue Â£temporary357>
new  <	; Return Â£temporary368>

1077:
old  <>
new  <	mov rax, [rbp]>

1078:
old  < toupperX$5:>
new  <	mov rdi, [rbp + 16]>

1079:
old  <	; Equal 8 Â£temporary357 0>
new  <	mov rbp, [rbp + 8]>

1080:
old  <	cmp ebx, 0>
new  <	jmp rax>

1081:
old  <	je toupperX$8>
new  <>

1082:
old  <>
new  < toupper$32:>

1083:
old  < toupperX$6:>
new  <	; Return c>

1084:
old  <	; BinarySubtract Â£temporary360 c 32>
new  <	mov ebx, [rbp + 24]>

1085:
old  <	mov ebx, [rbp + 24]>
new  <	mov rax, [rbp]>

1086:
old  <	sub ebx, 32>
new  <	mov rdi, [rbp + 16]>

1087:
old  <>
new  <	mov rbp, [rbp + 8]>

1088:
old  < toupperX$7:>
new  <	jmp rax>

1089:
old  <	; Goto 9>
new  <>

1090:
old  <	jmp toupperX$9>
new  < toupper$33:>

1091:
old  <>
new  <	; FunctionEnd toupper>

8:
old  <@1175$NO_ERROR:>
new  <@1176$NO_ERROR:>

14:
old  <@1176$NO_FUNCTION:>
new  <@1177$NO_FUNCTION:>

20:
old  <@1177$NO_FILE:>
new  <@1178$NO_FILE:>

26:
old  <@1178$NO_PATH:>
new  <@1179$NO_PATH:>

32:
old  <@1179$NO_HANDLE:>
new  <@1180$NO_HANDLE:>

38:
old  <@1180$NO_ACCESS:>
new  <@1181$NO_ACCESS:>

44:
old  <@1181$EDOM:>
new  <@1182$EDOM:>

50:
old  <@1182$ERANGE:>
new  <@1183$ERANGE:>

56:
old  <@1183$EILSEQ:>
new  <@1184$EILSEQ:>

62:
old  <@1184$FOPEN:>
new  <@1185$FOPEN:>

68:
old  <@1185$FFLUSH:>
new  <@1186$FFLUSH:>

74:
old  <@1186$FCLOSE:>
new  <@1187$FCLOSE:>

80:
old  <@1187$NO_MODE:>
new  <@1188$NO_MODE:>

86:
old  <@1188$FWRITE:>
new  <@1189$FWRITE:>

92:
old  <@1189$FREAD:>
new  <@1190$FREAD:>

98:
old  <@1190$FSEEK:>
new  <@1191$FSEEK:>

104:
old  <@1191$FTELL:>
new  <@1192$FTELL:>

110:
old  <@1192$FSIZE:>
new  <@1193$FSIZE:>

116:
old  <@1193$FREMOVE:>
new  <@1194$FREMOVE:>

122:
old  <@1194$FRENAME:>
new  <@1195$FRENAME:>

128:
old  <@1195$FTEMPNAME:>
new  <@1196$FTEMPNAME:>

134:
old  <@1196$FTEMPFILE:>
new  <@1197$FTEMPFILE:>

53:
old  <@1497$enShortDayList:>
new  <@1498$enShortDayList:>

113:
old  <@1498$enLongDayList:>
new  <@1499$enLongDayList:>

203:
old  <@1499$enShortMonthList:>
new  <@1500$enShortMonthList:>

297:
old  <@1500$enLongMonthList:>
new  <@1501$enLongMonthList:>

501:
old  <@1523$en_US_utf8:>
new  <@1524$en_US_utf8:>

506:
old  <	; Initializer Pointer @1497$enShortDayList>
new  <	; Initializer Pointer @1498$enShortDayList>

507:
old  <	dq @1497$enShortDayList>
new  <	dq @1498$enShortDayList>

508:
old  <	; Initializer Pointer @1498$enLongDayList>
new  <	; Initializer Pointer @1499$enLongDayList>

509:
old  <	dq @1498$enLongDayList>
new  <	dq @1499$enLongDayList>

510:
old  <	; Initializer Pointer @1499$enShortMonthList>
new  <	; Initializer Pointer @1500$enShortMonthList>

511:
old  <	dq @1499$enShortMonthList>
new  <	dq @1500$enShortMonthList>

512:
old  <	; Initializer Pointer @1500$enLongMonthList>
new  <	; Initializer Pointer @1501$enLongMonthList>

513:
old  <	dq @1500$enLongMonthList>
new  <	dq @1501$enLongMonthList>

565:
old  <@1524$swShortDayList:>
new  <@1525$swShortDayList:>

625:
old  <@1525$swLongDayList:>
new  <@1526$swLongDayList:>

655:
old  <@1526$swShortMonthList:>
new  <@1527$swShortMonthList:>

725:
old  <@1527$swLongMonthList:>
new  <@1528$swLongMonthList:>

867:
old  <@1528$swMessageList:>
new  <@1529$swMessageList:>

909:
old  <@1529$sw_EN_utf8:>
new  <@1530$sw_EN_utf8:>

914:
old  <	; Initializer Pointer @1524$swShortDayList>
new  <	; Initializer Pointer @1525$swShortDayList>

915:
old  <	dq @1524$swShortDayList>
new  <	dq @1525$swShortDayList>

916:
old  <	; Initializer Pointer @1525$swLongDayList>
new  <	; Initializer Pointer @1526$swLongDayList>

917:
old  <	dq @1525$swLongDayList>
new  <	dq @1526$swLongDayList>

918:
old  <	; Initializer Pointer @1499$enShortMonthList>
new  <	; Initializer Pointer @1500$enShortMonthList>

919:
old  <	dq @1499$enShortMonthList>
new  <	dq @1500$enShortMonthList>

920:
old  <	; Initializer Pointer @1527$swLongMonthList>
new  <	; Initializer Pointer @1528$swLongMonthList>

921:
old  <	dq @1527$swLongMonthList>
new  <	dq @1528$swLongMonthList>

926:
old  <	; Initializer Pointer @1528$swMessageList>
new  <	; Initializer Pointer @1529$swMessageList>

927:
old  <	dq @1528$swMessageList>
new  <	dq @1529$swMessageList>

955:
old  <@1532$sArray:>
new  <@1533$sArray:>

958:
old  <	; Initializer Pointer @1529$sw_EN_utf8>
new  <	; Initializer Pointer @1530$sw_EN_utf8>

959:
old  <	dq @1529$sw_EN_utf8>
new  <	dq @1530$sw_EN_utf8>

962:
old  <	; Initializer Pointer @1523$en_US_utf8>
new  <	; Initializer Pointer @1524$en_US_utf8>

963:
old  <	dq @1523$en_US_utf8>
new  <	dq @1524$en_US_utf8>

966:
old  <	; Initializer Pointer @1523$en_US_utf8>
new  <	; Initializer Pointer @1524$en_US_utf8>

967:
old  <	dq @1523$en_US_utf8>
new  <	dq @1524$en_US_utf8>

970:
old  <	; Initializer Pointer @1529$sw_EN_utf8>
new  <	; Initializer Pointer @1530$sw_EN_utf8>

971:
old  <	dq @1529$sw_EN_utf8>
new  <	dq @1530$sw_EN_utf8>

975:
old  <@1533$sSize:>
new  <@1534$sSize:>

981:
old  <@1534$g_currStructPtr:>
new  <@1535$g_currStructPtr:>

982:
old  <	; Initializer Pointer @1532$sArray>
new  <	; Initializer Pointer @1533$sArray>

983:
old  <	dq @1532$sArray>
new  <	dq @1533$sArray>

994:
old  <	; Empty>
new  <	; Equal 4 g_currStructPtr 0>

995:
old  <>
new  <	cmp qword [@1535$g_currStructPtr], 0>

996:
old  < setlocale$1:>
new  <	je setlocale$4>

997:
old  <	; Equal 5 g_currStructPtr 0>
new  <>

998:
old  <	cmp qword [@1534$g_currStructPtr], 0>
new  < setlocale$1:>

999:
old  <	je setlocale$5>
new  <	; Dereference Â£temporary371 -> g_currStructPtr g_currStructPtr 0>

1000:
old  <>
new  <	mov rsi, [@1535$g_currStructPtr]>

1001:
old  < setlocale$2:>
new  <>

1002:
old  <	; Dereference Â£temporary378 -> g_currStructPtr g_currStructPtr 0>
new  < setlocale$2:>

1003:
old  <	mov rsi, [@1534$g_currStructPtr]>
new  <	; Assign Â£temporary372 Â£temporary371 -> g_currStructPtr>

1004:
old  <>
new  <	mov rax, [rsi]>

1005:
old  < setlocale$3:>
new  <>

1006:
old  <	; Assign Â£temporary379 Â£temporary378 -> g_currStructPtr>
new  < setlocale$3:>

1007:
old  <	mov rax, [rsi]>
new  <	; Goto 5>

1008:
old  <>
new  <	jmp setlocale$5>

1009:
old  < setlocale$4:>
new  <>

1010:
old  <	; Goto 6>
new  < setlocale$4:>

1011:
old  <	jmp setlocale$6>
new  <	; Assign Â£temporary372 0>

1012:
old  <>
new  <	mov rax, 0>

1013:
old  < setlocale$5:>
new  <>

1014:
old  <	; Assign Â£temporary379 0>
new  < setlocale$5:>

1015:
old  <	mov rax, 0>
new  <	; Assign oldName Â£temporary372>

1016:
old  <>
new  <	mov [rbp + 40], rax>

1017:
old  < setlocale$6:>
new  <>

1018:
old  <	; Assign oldName Â£temporary379>
new  < setlocale$6:>

1019:
old  <	mov [rbp + 40], rax>
new  <	; Assign g_currStructPtr 0>

1020:
old  <>
new  <	mov qword [@1535$g_currStructPtr], 0>

1021:
old  < setlocale$7:>
new  <>

1022:
old  <	; Assign g_currStructPtr 0>
new  < setlocale$7:>

1023:
old  <	mov qword [@1534$g_currStructPtr], 0>
new  <	; Equal 30 newName 0>

1024:
old  <>
new  <	cmp qword [rbp + 28], 0>

1025:
old  < setlocale$8:>
new  <	je setlocale$30>

1026:
old  <	; Equal 31 newName 0>
new  <>

1027:
old  <	cmp qword [rbp + 28], 0>
new  < setlocale$8:>

1028:
old  <	je setlocale$31>
new  <	; Assign index 0>

1029:
old  <>
new  <	mov dword [rbp + 36], 0>

1030:
old  < setlocale$9:>
new  <>

1031:
old  <	; Assign index 0>
new  < setlocale$9:>

1032:
old  <	mov dword [rbp + 36], 0>
new  <	; SignedGreaterThanEqual 30 index sSize>

1033:
old  <>
new  <	mov eax, [@1534$sSize]>

1034:
old  < setlocale$10:>
new  <	cmp [rbp + 36], eax>

1035:
old  <	; SignedGreaterThanEqual 31 index sSize>
new  <	jge setlocale$30>

1036:
old  <	mov eax, [@1533$sSize]>
new  <>

1037:
old  <	cmp [rbp + 36], eax>
new  < setlocale$10:>

1038:
old  <	jge setlocale$31>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1041:
old  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter pointer newName 72>

1042:
old  <>
new  <	mov rax, [rbp + 28]>

1043:
old  < setlocale$12:>
new  <	mov [rbp + 72], rax>

1044:
old  <	; Parameter pointer newName 72>
new  <>

1045:
old  <	mov rax, [rbp + 28]>
new  < setlocale$12:>

1046:
old  <	mov [rbp + 72], rax>
new  <	; IntegralToIntegral Â£temporary377 index>

1047:
old  <>
new  <	mov eax, [rbp + 36]>

1048:
old  < setlocale$13:>
new  <	mov rbx, 4294967295>

1049:
old  <	; IntegralToIntegral Â£temporary384 index>
new  <	and rax, rbx>

1050:
old  <	mov eax, [rbp + 36]>
new  <>

1051:
old  <	mov rbx, 4294967295>
new  < setlocale$13:>

1052:
old  <	and rax, rbx>
new  <	; UnsignedMultiply Â£temporary378 Â£temporary377 16>

1053:
old  <>
new  <	xor rdx, rdx>

1054:
old  < setlocale$14:>
new  <	mul qword [Array_16#]>

1055:
old  <	; UnsignedMultiply Â£temporary385 Â£temporary384 16>
new  <>

1056:
old  <	xor rdx, rdx>
new  < setlocale$14:>

1057:
old  <	mul qword [Array_16#]>
new  <	; BinaryAdd Â£temporary379 sArray Â£temporary378>

1058:
old  <>
new  <	mov rsi, @1533$sArray>

1059:
old  < setlocale$15:>
new  <	add rsi, rax>

1060:
old  <	; BinaryAdd Â£temporary386 sArray Â£temporary385>
new  <>

1061:
old  <	mov rsi, @1532$sArray>
new  < setlocale$15:>

1062:
old  <	add rsi, rax>
new  <	; Dereference Â£temporary376 -> Â£temporary379 Â£temporary379 0>

1065:
old  <	; Dereference Â£temporary383 -> Â£temporary386 Â£temporary386 0>
new  <	; Parameter pointer Â£temporary376.name -> Â£temporary379 80>

1066:
old  <>
new  <	mov rax, [rsi]>

1067:
old  < setlocale$17:>
new  <	mov [rbp + 80], rax>

1068:
old  <	; Parameter pointer Â£temporary383.name -> Â£temporary386 80>
new  <>

1069:
old  <	mov rax, [rsi]>
new  < setlocale$17:>

1070:
old  <	mov [rbp + 80], rax>
new  <	; Call strcmp 48 0>

1071:
old  <>
new  <	mov qword [rbp + 48], setlocale$18>

1072:
old  < setlocale$18:>
new  <	mov [rbp + 56], rbp>

1073:
old  <	; Call strcmp 48 0>
new  <	add rbp, 48>

1074:
old  <	mov qword [rbp + 48], setlocale$19>
new  <	jmp strcmp>

1075:
old  <	mov [rbp + 56], rbp>
new  <>

1076:
old  <	add rbp, 48>
new  < setlocale$18:>

1077:
old  <	jmp strcmp>
new  <	; PostCall 48>

1080:
old  <	; PostCall 48>
new  <	; GetReturnValue Â£temporary380>

1083:
old  <	; GetReturnValue Â£temporary387>
new  <	; NotEqual 28 Â£temporary380 0>

1084:
old  <>
new  <	cmp ebx, 0>

1085:
old  < setlocale$21:>
new  <	jne setlocale$28>

1086:
old  <	; NotEqual 29 Â£temporary387 0>
new  <>

1087:
old  <	cmp ebx, 0>
new  < setlocale$21:>

1088:
old  <	jne setlocale$29>
new  <	; IntegralToIntegral Â£temporary383 index>

1089:
old  <>
new  <	mov eax, [rbp + 36]>

1090:
old  < setlocale$22:>
new  <	mov rbx, 4294967295>

1091:
old  <	; IntegralToIntegral Â£temporary390 index>
new  <	and rax, rbx>

1092:
old  <	mov eax, [rbp + 36]>
new  <>

1093:
old  <	mov rbx, 4294967295>
new  < setlocale$22:>

1094:
old  <	and rax, rbx>
new  <	; UnsignedMultiply Â£temporary384 Â£temporary383 16>

1095:
old  <>
new  <	xor rdx, rdx>

1096:
old  < setlocale$23:>
new  <	mul qword [Array_16#]>

1097:
old  <	; UnsignedMultiply Â£temporary391 Â£temporary390 16>
new  <>

1098:
old  <	xor rdx, rdx>
new  < setlocale$23:>

1099:
old  <	mul qword [Array_16#]>
new  <	; BinaryAdd Â£temporary385 sArray Â£temporary384>

1100:
old  <>
new  <	mov rsi, @1533$sArray>

1101:
old  < setlocale$24:>
new  <	add rsi, rax>

1102:
old  <	; BinaryAdd Â£temporary392 sArray Â£temporary391>
new  <>

1103:
old  <	mov rsi, @1532$sArray>
new  < setlocale$24:>

1104:
old  <	add rsi, rax>
new  <	; Dereference Â£temporary382 -> Â£temporary385 Â£temporary385 0>

1107:
old  <	; Dereference Â£temporary389 -> Â£temporary392 Â£temporary392 0>
new  <	; Address Â£temporary386 Â£temporary382 -> Â£temporary385>

1110:
old  <	; Address Â£temporary393 Â£temporary389 -> Â£temporary392>
new  <	; Assign g_currStructPtr Â£temporary386>

1111:
old  <>
new  <	mov [@1535$g_currStructPtr], rsi>

1112:
old  < setlocale$27:>
new  <>

1113:
old  <	; Assign g_currStructPtr Â£temporary393>
new  < setlocale$27:>

1114:
old  <	mov [@1534$g_currStructPtr], rsi>
new  <	; Goto 30>

1115:
old  <>
new  <	jmp setlocale$30>

1116:
old  < setlocale$28:>
new  <>

1117:
old  <	; Goto 31>
new  < setlocale$28:>

1118:
old  <	jmp setlocale$31>
new  <	; BinaryAdd index index 1>

1119:
old  <>
new  <	inc dword [rbp + 36]>

1120:
old  < setlocale$29:>
new  <>

1121:
old  <	; BinaryAdd index index 1>
new  < setlocale$29:>

1122:
old  <	inc dword [rbp + 36]>
new  <	; Goto 9>

1123:
old  <>
new  <	jmp setlocale$9>

1124:
old  < setlocale$30:>
new  <>

1125:
old  <	; Goto 10>
new  < setlocale$30:>

1126:
old  <	jmp setlocale$10>
new  <	; Return oldName>

1127:
old  <>
new  <	mov rbx, [rbp + 40]>

1128:
old  < setlocale$31:>
new  <	mov rax, [rbp]>

1129:
old  <	; Return oldName>
new  <	mov rdi, [rbp + 16]>

1130:
old  <	mov rbx, [rbp + 40]>
new  <	mov rbp, [rbp + 8]>

1131:
old  <	mov rax, [rbp]>
new  <	jmp rax>

1132:
old  <	mov rdi, [rbp + 16]>
new  <>

1133:
old  <	mov rbp, [rbp + 8]>
new  < setlocale$31:>

1134:
old  <	jmp rax>
new  <	; FunctionEnd setlocale>

1136:
old  < setlocale$32:>
new  <section .text>

1137:
old  <	; FunctionEnd setlocale>
new  <>

1138:
old  <>
new  < localeconv:>

1139:
old  <section .text>
new  <	; Equal 4 g_currStructPtr 0>

1140:
old  <>
new  <	cmp qword [@1535$g_currStructPtr], 0>

1141:
old  < localeconv:>
new  <	je localeconv$4>

1142:
old  <	; Equal 4 g_currStructPtr 0>
new  <>

1143:
old  <	cmp qword [@1534$g_currStructPtr], 0>
new  < localeconv$1:>

1144:
old  <	je localeconv$4>
new  <	; Dereference Â£temporary388 -> g_currStructPtr g_currStructPtr 0>

1145:
old  <>
new  <	mov rsi, [@1535$g_currStructPtr]>

1146:
old  < localeconv$1:>
new  <>

1147:
old  <	; Dereference Â£temporary395 -> g_currStructPtr g_currStructPtr 0>
new  < localeconv$2:>

1148:
old  <	mov rsi, [@1534$g_currStructPtr]>
new  <	; Assign Â£temporary389 Â£temporary388 -> g_currStructPtr>

1149:
old  <>
new  <	mov rbx, [rsi + 8]>

1150:
old  < localeconv$2:>
new  <>

1151:
old  <	; Assign Â£temporary396 Â£temporary395 -> g_currStructPtr>
new  < localeconv$3:>

1152:
old  <	mov rbx, [rsi + 8]>
new  <	; Goto 5>

1153:
old  <>
new  <	jmp localeconv$5>

1154:
old  < localeconv$3:>
new  <>

1155:
old  <	; Goto 5>
new  < localeconv$4:>

1156:
old  <	jmp localeconv$5>
new  <	; Assign Â£temporary389 0>

1157:
old  <>
new  <	mov rbx, 0>

1158:
old  < localeconv$4:>
new  <>

1159:
old  <	; Assign Â£temporary396 0>
new  < localeconv$5:>

1160:
old  <	mov rbx, 0>
new  <	; Return Â£temporary389>

1161:
old  <>
new  <	mov rax, [rbp]>

1162:
old  < localeconv$5:>
new  <	mov rdi, [rbp + 16]>

1163:
old  <	; Return Â£temporary396>
new  <	mov rbp, [rbp + 8]>

1164:
old  <	mov rax, [rbp]>
new  <	jmp rax>

1165:
old  <	mov rdi, [rbp + 16]>
new  <>

1166:
old  <	mov rbp, [rbp + 8]>
new  < localeconv$6:>

1167:
old  <	jmp rax>
new  <	; FunctionEnd localeconv>

38:
old  <	; PushFloat 0>
new  <	; PushFloat 1>

39:
old  <	fldz>
new  <	fld1>

42:
old  <	; PopFloat i>
new  <	; PopFloat index>

46:
old  <	; PushFloat 0>
new  <	; PushFloat 1>

47:
old  <	fldz>
new  <	fld1>

62:
old  <	; PushFloat 1>
new  <	; PushFloat x>

63:
old  <	fld1>
new  <	fld qword [rbp + 24]>

66:
old  <	; TopFloat power>
new  <	; PopFloat power>

67:
old  <	fst qword [rbp + 64]>
new  <	fstp qword [rbp + 64]>

70:
old  <	; PushFloat faculty>
new  <	; PushFloat power>

71:
old  <	fld qword [rbp + 56]>
new  <	fld qword [rbp + 64]>

74:
old  <	; SignedDivide Â£temporary397 power faculty>
new  <	; PushFloat faculty>

75:
old  <	fdiv>
new  <	fld qword [rbp + 56]>

78:
old  <	; PopFloat term>
new  <	; SignedDivide Â£temporary390 power faculty>

79:
old  <	fstp qword [rbp + 40]>
new  <	fdiv>

82:
old  <	; PushFloat sum>
new  <	; PopFloat term>

83:
old  <	fld qword [rbp + 48]>
new  <	fstp qword [rbp + 40]>

86:
old  <	; PushFloat term>
new  <	; PushFloat sum>

87:
old  <	fld qword [rbp + 40]>
new  <	fld qword [rbp + 48]>

90:
old  <	; BinaryAdd Â£temporary398 sum term>
new  <	; PushFloat term>

91:
old  <	fadd>
new  <	fld qword [rbp + 40]>

94:
old  <	; PopFloat sum>
new  <	; BinaryAdd Â£temporary391 sum term>

95:
old  <	fstp qword [rbp + 48]>
new  <	fadd>

98:
old  <	; PushFloat power>
new  <	; PopFloat sum>

99:
old  <	fld qword [rbp + 64]>
new  <	fstp qword [rbp + 48]>

102:
old  <	; PushFloat x>
new  <	; PushFloat power>

103:
old  <	fld qword [rbp + 24]>
new  <	fld qword [rbp + 64]>

106:
old  <	; SignedMultiply Â£temporary399 power x>
new  <	; PushFloat x>

107:
old  <	fmul>
new  <	fld qword [rbp + 24]>

110:
old  <	; PopFloat power>
new  <	; SignedMultiply Â£temporary392 power x>

111:
old  <	fstp qword [rbp + 64]>
new  <	fmul>

114:
old  <	; PushFloat faculty>
new  <	; PopFloat power>

115:
old  <	fld qword [rbp + 56]>
new  <	fstp qword [rbp + 64]>

118:
old  <	; PushFloat i>
new  <	; PushFloat faculty>

119:
old  <	fld qword [rbp + 32]>
new  <	fld qword [rbp + 56]>

122:
old  <	; SignedMultiply Â£temporary400 faculty i>
new  <	; PushFloat index>

123:
old  <	fmul>
new  <	fld qword [rbp + 32]>

126:
old  <	; PopFloat faculty>
new  <	; PushOne>

127:
old  <	fstp qword [rbp + 56]>
new  <	fld1>

130:
old  <	; CheckTrackMapFloatStack>
new  <	; BinaryAdd index index 1>

131:
old  <>
new  <	fadd>

132:
old  < exp$24:>
new  <>

133:
old  <	; PreCall 72 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < exp$24:>

134:
old  <>
new  <	; TopFloat index>

135:
old  < exp$25:>
new  <	fst qword [rbp + 32]>

136:
old  <	; PushFloat term>
new  <>

137:
old  <	fld qword [rbp + 40]>
new  < exp$25:>

138:
old  <>
new  <	; SignedMultiply Â£temporary394 faculty Â£temporary393>

139:
old  < exp$26:>
new  <	fmul>

140:
old  <	; Parameter double term 96>
new  <>

141:
old  <	fstp qword [rbp + 96]>
new  < exp$26:>

142:
old  <>
new  <	; PopFloat faculty>

143:
old  < exp$27:>
new  <	fstp qword [rbp + 56]>

144:
old  <	; Call fabs 72 0>
new  <>

145:
old  <	mov qword [rbp + 72], exp$28>
new  < exp$27:>

146:
old  <	mov [rbp + 80], rbp>
new  <	; CheckTrackMapFloatStack>

147:
old  <	add rbp, 72>
new  <>

148:
old  <	jmp fabs>
new  < exp$28:>

149:
old  <>
new  <	; PreCall 72 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

150:
old  < exp$28:>
new  <>

151:
old  <	; PostCall 72>
new  < exp$29:>

152:
old  <>
new  <	; PushFloat term>

153:
old  < exp$29:>
new  <	fld qword [rbp + 40]>

154:
old  <	; GetReturnValue Â£temporary401>
new  <>

155:
old  <>
new  < exp$30:>

156:
old  < exp$30:>
new  <	; Parameter double term 96>

157:
old  <	; PushFloat 0.000000001>
new  <	fstp qword [rbp + 96]>

158:
old  <	fld qword [float8$0.000000001#]>
new  <>

159:
old  <>
new  < exp$31:>

160:
old  < exp$31:>
new  <	; Call fabs 72 0>

161:
old  <	; SignedGreaterThanEqual 8 Â£temporary401 0.000000001>
new  <	mov qword [rbp + 72], exp$32>

162:
old  <	fcompp>
new  <	mov [rbp + 80], rbp>

163:
old  <	fstsw ax>
new  <	add rbp, 72>

164:
old  <	sahf>
new  <	jmp fabs>

165:
old  <	jbe exp$8>
new  <>

166:
old  <>
new  < exp$32:>

167:
old  < exp$32:>
new  <	; PostCall 72>

168:
old  <	; PushFloat sum>
new  <>

169:
old  <	fld qword [rbp + 48]>
new  < exp$33:>

170:
old  <>
new  <	; GetReturnValue Â£temporary395>

171:
old  < exp$33:>
new  <>

172:
old  <	; Return sum>
new  < exp$34:>

173:
old  <	mov rax, [rbp]>
new  <	; PushFloat 0.000000001>

174:
old  <	mov rdi, [rbp + 16]>
new  <	fld qword [float8$0.000000001#]>

175:
old  <	mov rbp, [rbp + 8]>
new  <>

176:
old  <	jmp rax>
new  < exp$35:>

177:
old  <>
new  <	; SignedGreaterThanEqual 8 Â£temporary395 0.000000001>

178:
old  < exp$34:>
new  <	fcompp>

179:
old  <	; FunctionEnd exp>
new  <	fstsw ax>

180:
old  <>
new  <	sahf>

181:
old  <section .data>
new  <	jbe exp$8>

183:
old  <float8$2.7182818284590452353602874#:>
new  < exp$36:>

184:
old  <	; Initializer Double 2.7182818284590452353602874>
new  <	; PushFloat sum>

185:
old  <	dq 2.7182818284590452353602874>
new  <	fld qword [rbp + 48]>

187:
old  <section .data>
new  < exp$37:>

188:
old  <>
new  <	; Return sum>

189:
old  <float8$0.3678794411714423215955237798#:>
new  <	mov rax, [rbp]>

190:
old  <	; Initializer Double 0.3678794411714423215955237798>
new  <	mov rdi, [rbp + 16]>

191:
old  <	dq 0.3678794411714423215955237798>
new  <	mov rbp, [rbp + 8]>

192:
old  <>
new  <	jmp rax>

193:
old  <section .data>
new  <>

194:
old  <>
new  < exp$38:>

195:
old  <float8$minus1.0#:>
new  <	; FunctionEnd exp>

196:
old  <	; Initializer Double -1.0>
new  <>

197:
old  <	dq -1.0>
new  <section .data>

199:
old  <section .text>
new  <float8$2.7182818284590452353602874#:>

200:
old  <>
new  <	; Initializer Double 2.7182818284590452353602874>

201:
old  < log:>
new  <	dq 2.7182818284590452353602874>

202:
old  <	; PushFloat x>
new  <>

203:
old  <	fld qword [rbp + 24]>
new  <section .data>

205:
old  < log$1:>
new  <float8$0.3678794411714423215955237798#:>

206:
old  <	; PushFloat 0>
new  <	; Initializer Double 0.3678794411714423215955237798>

207:
old  <	fldz>
new  <	dq 0.3678794411714423215955237798>

209:
old  < log$2:>
new  <section .data>

210:
old  <	; SignedLessThanEqual 72 x 0>
new  <>

211:
old  <	fcompp>
new  <float8$minus1.0#:>

212:
old  <	fstsw ax>
new  <	; Initializer Double -1.0>

213:
old  <	sahf>
new  <	dq -1.0>

214:
old  <	jae log$72>
new  <>

215:
old  <>
new  <section .text>

216:
old  < log$3:>
new  <>

217:
old  <	; Assign n 0>
new  < log:>

218:
old  <	mov dword [rbp + 32], 0>
new  <	; PushFloat x>

219:
old  <>
new  <	fld qword [rbp + 24]>

220:
old  < log$4:>
new  <>

221:
old  <	; PushFloat x>
new  < log$1:>

222:
old  <	fld qword [rbp + 24]>
new  <	; PushFloat 0>

223:
old  <>
new  <	fldz>

224:
old  < log$5:>
new  <>

225:
old  <	; PushFloat 1>
new  < log$2:>

226:
old  <	fld1>
new  <	; SignedLessThanEqual 76 x 0>

227:
old  <>
new  <	fcompp>

228:
old  < log$6:>
new  <	fstsw ax>

229:
old  <	; SignedLessThanEqual 16 x 1>
new  <	sahf>

230:
old  <	fcompp>
new  <	jae log$76>

231:
old  <	fstsw ax>
new  <>

232:
old  <	sahf>
new  < log$3:>

233:
old  <	jae log$16>
new  <	; Assign n 0>

234:
old  <>
new  <	mov dword [rbp + 32], 0>

235:
old  < log$7:>
new  <>

236:
old  <	; PushFloat x>
new  < log$4:>

237:
old  <	fld qword [rbp + 24]>
new  <	; PushFloat x>

238:
old  <>
new  <	fld qword [rbp + 24]>

239:
old  < log$8:>
new  <>

240:
old  <	; PushFloat 1>
new  < log$5:>

241:
old  <	fld1>
new  <	; PushFloat 1>

242:
old  <>
new  <	fld1>

243:
old  < log$9:>
new  <>

244:
old  <	; SignedLessThanEqual 28 x 1>
new  < log$6:>

245:
old  <	fcompp>
new  <	; SignedLessThanEqual 16 x 1>

246:
old  <	fstsw ax>
new  <	fcompp>

247:
old  <	sahf>
new  <	fstsw ax>

248:
old  <	jae log$28>
new  <	sahf>

249:
old  <>
new  <	jae log$16>

250:
old  < log$10:>
new  <>

251:
old  <	; PushFloat x>
new  < log$7:>

252:
old  <	fld qword [rbp + 24]>
new  <	; PushFloat x>

253:
old  <>
new  <	fld qword [rbp + 24]>

254:
old  < log$11:>
new  <>

255:
old  <	; PushFloat 2.7182818284590452353602874>
new  < log$8:>

256:
old  <	fld qword [float8$2.7182818284590452353602874#]>
new  <	; PushFloat 1>

257:
old  <>
new  <	fld1>

258:
old  < log$12:>
new  <>

259:
old  <	; SignedDivide Â£temporary407 x 2.7182818284590452353602874>
new  < log$9:>

260:
old  <	fdiv>
new  <	; SignedLessThanEqual 28 x 1>

261:
old  <>
new  <	fcompp>

262:
old  < log$13:>
new  <	fstsw ax>

263:
old  <	; PopFloat x>
new  <	sahf>

264:
old  <	fstp qword [rbp + 24]>
new  <	jae log$28>

266:
old  < log$14:>
new  < log$10:>

267:
old  <	; BinaryAdd n n 1>
new  <	; PushFloat x>

268:
old  <	inc dword [rbp + 32]>
new  <	fld qword [rbp + 24]>

270:
old  < log$15:>
new  < log$11:>

271:
old  <	; Goto 7>
new  <	; PushFloat 2.7182818284590452353602874>

272:
old  <	jmp log$7>
new  <	fld qword [float8$2.7182818284590452353602874#]>

274:
old  < log$16:>
new  < log$12:>

275:
old  <	; PushFloat x>
new  <	; SignedDivide Â£temporary401 x 2.7182818284590452353602874>

276:
old  <	fld qword [rbp + 24]>
new  <	fdiv>

278:
old  < log$17:>
new  < log$13:>

279:
old  <	; PushFloat 0.3678794411714423215955237798>
new  <	; PopFloat x>

280:
old  <	fld qword [float8$0.3678794411714423215955237798#]>
new  <	fstp qword [rbp + 24]>

282:
old  < log$18:>
new  < log$14:>

283:
old  <	; SignedGreaterThanEqual 28 x 0.3678794411714423215955237798>
new  <	; BinaryAdd n n 1>

284:
old  <	fcompp>
new  <	inc dword [rbp + 32]>

285:
old  <	fstsw ax>
new  <>

286:
old  <	sahf>
new  < log$15:>

287:
old  <	jbe log$28>
new  <	; Goto 7>

288:
old  <>
new  <	jmp log$7>

289:
old  < log$19:>
new  <>

290:
old  <	; PushFloat x>
new  < log$16:>

291:
old  <	fld qword [rbp + 24]>
new  <	; PushFloat x>

292:
old  <>
new  <	fld qword [rbp + 24]>

293:
old  < log$20:>
new  <>

294:
old  <	; PushFloat 0.3678794411714423215955237798>
new  < log$17:>

295:
old  <	fld qword [float8$0.3678794411714423215955237798#]>
new  <	; PushFloat 0.3678794411714423215955237798>

296:
old  <>
new  <	fld qword [float8$0.3678794411714423215955237798#]>

297:
old  < log$21:>
new  <>

298:
old  <	; SignedGreaterThanEqual 28 x 0.3678794411714423215955237798>
new  < log$18:>

299:
old  <	fcompp>
new  <	; SignedGreaterThanEqual 28 x 0.3678794411714423215955237798>

300:
old  <	fstsw ax>
new  <	fcompp>

301:
old  <	sahf>
new  <	fstsw ax>

302:
old  <	jbe log$28>
new  <	sahf>

303:
old  <>
new  <	jbe log$28>

304:
old  < log$22:>
new  <>

305:
old  <	; PushFloat x>
new  < log$19:>

306:
old  <	fld qword [rbp + 24]>
new  <	; PushFloat x>

307:
old  <>
new  <	fld qword [rbp + 24]>

308:
old  < log$23:>
new  <>

309:
old  <	; PushFloat 2.7182818284590452353602874>
new  < log$20:>

310:
old  <	fld qword [float8$2.7182818284590452353602874#]>
new  <	; PushFloat 0.3678794411714423215955237798>

311:
old  <>
new  <	fld qword [float8$0.3678794411714423215955237798#]>

312:
old  < log$24:>
new  <>

313:
old  <	; SignedMultiply Â£temporary411 x 2.7182818284590452353602874>
new  < log$21:>

314:
old  <	fmul>
new  <	; SignedGreaterThanEqual 28 x 0.3678794411714423215955237798>

315:
old  <>
new  <	fcompp>

316:
old  < log$25:>
new  <	fstsw ax>

317:
old  <	; PopFloat x>
new  <	sahf>

318:
old  <	fstp qword [rbp + 24]>
new  <	jbe log$28>

320:
old  < log$26:>
new  < log$22:>

321:
old  <	; BinarySubtract n n 1>
new  <	; PushFloat x>

322:
old  <	dec dword [rbp + 32]>
new  <	fld qword [rbp + 24]>

324:
old  < log$27:>
new  < log$23:>

325:
old  <	; Goto 19>
new  <	; PushFloat 2.7182818284590452353602874>

326:
old  <	jmp log$19>
new  <	fld qword [float8$2.7182818284590452353602874#]>

328:
old  < log$28:>
new  < log$24:>

329:
old  <	; PushFloat 1>
new  <	; SignedMultiply Â£temporary405 x 2.7182818284590452353602874>

330:
old  <	fld1>
new  <	fmul>

332:
old  < log$29:>
new  < log$25:>

333:
old  <	; PopFloat i>
new  <	; PopFloat x>

334:
old  <	fstp qword [rbp + 36]>
new  <	fstp qword [rbp + 24]>

336:
old  < log$30:>
new  < log$26:>

337:
old  <	; PushFloat 1>
new  <	; BinarySubtract n n 1>

338:
old  <	fld1>
new  <	dec dword [rbp + 32]>

340:
old  < log$31:>
new  < log$27:>

341:
old  <	; PopFloat term>
new  <	; Goto 19>

342:
old  <	fstp qword [rbp + 44]>
new  <	jmp log$19>

344:
old  < log$32:>
new  < log$28:>

345:
old  <	; PushFloat 0>
new  <	; PushFloat 1>

346:
old  <	fldz>
new  <	fld1>

348:
old  < log$33:>
new  < log$29:>

349:
old  <	; PopFloat sum>
new  <	; PopFloat index>

350:
old  <	fstp qword [rbp + 52]>
new  <	fstp qword [rbp + 36]>

352:
old  < log$34:>
new  < log$30:>

353:
old  <	; PushFloat 1>
new  <	; PushFloat 0>

354:
old  <	fld1>
new  <	fldz>

356:
old  < log$35:>
new  < log$31:>

357:
old  <	; PopFloat sign>
new  <	; PopFloat sum>

358:
old  <	fstp qword [rbp + 60]>
new  <	fstp qword [rbp + 52]>

360:
old  < log$36:>
new  < log$32:>

361:
old  <	; PushFloat x>
new  <	; PushFloat 1>

362:
old  <	fld qword [rbp + 24]>
new  <	fld1>

364:
old  < log$37:>
new  < log$33:>

365:
old  <	; PushFloat 1>
new  <	; PopFloat sign>

366:
old  <	fld1>
new  <	fstp qword [rbp + 60]>

368:
old  < log$38:>
new  < log$34:>

369:
old  <	; BinarySubtract Â£temporary413 x 1>
new  <	; PushFloat x>

370:
old  <	fsub>
new  <	fld qword [rbp + 24]>

372:
old  < log$39:>
new  < log$35:>

373:
old  <	; TopFloat x_minus_1>
new  <	; PushFloat 1>

374:
old  <	fst qword [rbp + 68]>
new  <	fld1>

376:
old  < log$40:>
new  < log$36:>

377:
old  <	; PopFloat power>
new  <	; BinarySubtract Â£temporary407 x 1>

378:
old  <	fstp qword [rbp + 76]>
new  <	fsub>

380:
old  < log$41:>
new  < log$37:>

381:
old  <	; PushFloat sign>
new  <	; PopFloat x_minus_1>

382:
old  <	fld qword [rbp + 60]>
new  <	fstp qword [rbp + 68]>

384:
old  < log$42:>
new  < log$38:>

385:
old  <	; PushFloat power>
new  <	; PushFloat x_minus_1>

386:
old  <	fld qword [rbp + 76]>
new  <	fld qword [rbp + 68]>

388:
old  < log$43:>
new  < log$39:>

389:
old  <	; SignedMultiply Â£temporary414 sign power>
new  <	; PopFloat power>

390:
old  <	fmul>
new  <	fstp qword [rbp + 76]>

392:
old  < log$44:>
new  < log$40:>

393:
old  <	; PushFloat i>
new  <	; PushFloat sign>

394:
old  <	fld qword [rbp + 36]>
new  <	fld qword [rbp + 60]>

396:
old  < log$45:>
new  < log$41:>

397:
old  <	; SignedDivide Â£temporary415 Â£temporary414 i>
new  <	; PushFloat power>

398:
old  <	fdiv>
new  <	fld qword [rbp + 76]>

400:
old  < log$46:>
new  < log$42:>

401:
old  <	; PopFloat term>
new  <	; SignedMultiply Â£temporary408 sign power>

402:
old  <	fstp qword [rbp + 44]>
new  <	fmul>

404:
old  < log$47:>
new  < log$43:>

405:
old  <	; PushFloat sum>
new  <	; PushFloat index>

406:
old  <	fld qword [rbp + 52]>
new  <	fld qword [rbp + 36]>

408:
old  < log$48:>
new  < log$44:>

409:
old  <	; PushFloat term>
new  <	; PushOne>

410:
old  <	fld qword [rbp + 44]>
new  <	fld1>

412:
old  < log$49:>
new  < log$45:>

413:
old  <	; BinaryAdd Â£temporary416 sum term>
new  <	; BinaryAdd index index 1>

416:
old  < log$50:>
new  < log$46:>

417:
old  <	; PopFloat sum>
new  <	; TopFloat index>

418:
old  <	fstp qword [rbp + 52]>
new  <	fst qword [rbp + 36]>

420:
old  < log$51:>
new  < log$47:>

421:
old  <	; PushFloat power>
new  <	; PushOne>

422:
old  <	fld qword [rbp + 76]>
new  <	fld1>

424:
old  < log$52:>
new  < log$48:>

425:
old  <	; PushFloat x_minus_1>
new  <	; BinarySubtract index index 1>

426:
old  <	fld qword [rbp + 68]>
new  <	fsub>

428:
old  < log$53:>
new  < log$49:>

429:
old  <	; SignedMultiply Â£temporary417 power x_minus_1>
new  <	; SignedDivide Â£temporary410 Â£temporary408 Â£temporary409>

430:
old  <	fmul>
new  <	fdiv>

432:
old  < log$54:>
new  < log$50:>

433:
old  <	; PopFloat power>
new  <	; PopFloat term>

434:
old  <	fstp qword [rbp + 76]>
new  <	fstp qword [rbp + 44]>

436:
old  < log$55:>
new  < log$51:>

437:
old  <	; PushFloat sign>
new  <	; PushFloat sum>

438:
old  <	fld qword [rbp + 60]>
new  <	fld qword [rbp + 52]>

440:
old  < log$56:>
new  < log$52:>

441:
old  <	; PushFloat -1.0>
new  <	; PushFloat term>

442:
old  <	fld qword [float8$minus1.0#]>
new  <	fld qword [rbp + 44]>

444:
old  < log$57:>
new  < log$53:>

445:
old  <	; SignedMultiply Â£temporary418 sign -1.0>
new  <	; BinaryAdd Â£temporary411 sum term>

446:
old  <	fmul>
new  <	fadd>

448:
old  < log$58:>
new  < log$54:>

449:
old  <	; PopFloat sign>
new  <	; PopFloat sum>

450:
old  <	fstp qword [rbp + 60]>
new  <	fstp qword [rbp + 52]>

452:
old  < log$59:>
new  < log$55:>

453:
old  <	; CheckTrackMapFloatStack>
new  <	; PushFloat power>

454:
old  <>
new  <	fld qword [rbp + 76]>

455:
old  < log$60:>
new  <>

456:
old  <	; PreCall 84 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < log$56:>

457:
old  <>
new  <	; PushFloat x_minus_1>

458:
old  < log$61:>
new  <	fld qword [rbp + 68]>

459:
old  <	; PushFloat term>
new  <>

460:
old  <	fld qword [rbp + 44]>
new  < log$57:>

461:
old  <>
new  <	; SignedMultiply Â£temporary412 power x_minus_1>

462:
old  < log$62:>
new  <	fmul>

463:
old  <	; Parameter double term 108>
new  <>

464:
old  <	fstp qword [rbp + 108]>
new  < log$58:>

465:
old  <>
new  <	; PopFloat power>

466:
old  < log$63:>
new  <	fstp qword [rbp + 76]>

467:
old  <	; Call fabs 84 0>
new  <>

468:
old  <	mov qword [rbp + 84], log$64>
new  < log$59:>

469:
old  <	mov [rbp + 92], rbp>
new  <	; PushFloat sign>

470:
old  <	add rbp, 84>
new  <	fld qword [rbp + 60]>

471:
old  <	jmp fabs>
new  <>

472:
old  <>
new  < log$60:>

473:
old  < log$64:>
new  <	; PushFloat -1.0>

474:
old  <	; PostCall 84>
new  <	fld qword [float8$minus1.0#]>

476:
old  < log$65:>
new  < log$61:>

477:
old  <	; GetReturnValue Â£temporary419>
new  <	; SignedMultiply Â£temporary413 sign -1.0>

478:
old  <>
new  <	fmul>

479:
old  < log$66:>
new  <>

480:
old  <	; PushFloat 0.000000001>
new  < log$62:>

481:
old  <	fld qword [float8$0.000000001#]>
new  <	; PopFloat sign>

482:
old  <>
new  <	fstp qword [rbp + 60]>

483:
old  < log$67:>
new  <>

484:
old  <	; SignedGreaterThanEqual 41 Â£temporary419 0.000000001>
new  < log$63:>

485:
old  <	fcompp>
new  <	; CheckTrackMapFloatStack>

486:
old  <	fstsw ax>
new  <>

487:
old  <	sahf>
new  < log$64:>

488:
old  <	jbe log$41>
new  <	; PreCall 84 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

490:
old  < log$68:>
new  < log$65:>

491:
old  <	; PushFloat sum>
new  <	; PushFloat term>

492:
old  <	fld qword [rbp + 52]>
new  <	fld qword [rbp + 44]>

494:
old  < log$69:>
new  < log$66:>

495:
old  <	; IntegralToFloating Â£temporary421 n>
new  <	; Parameter double term 108>

496:
old  <	fild dword [rbp + 32]>
new  <	fstp qword [rbp + 108]>

498:
old  < log$70:>
new  < log$67:>

499:
old  <	; BinaryAdd Â£temporary422 sum Â£temporary421>
new  <	; Call fabs 84 0>

500:
old  <	fadd>
new  <	mov qword [rbp + 84], log$68>

501:
old  <>
new  <	mov [rbp + 92], rbp>

502:
old  < log$71:>
new  <	add rbp, 84>

503:
old  <	; Return Â£temporary422>
new  <	jmp fabs>

504:
old  <	mov rax, [rbp]>
new  <>

505:
old  <	mov rdi, [rbp + 16]>
new  < log$68:>

506:
old  <	mov rbp, [rbp + 8]>
new  <	; PostCall 84>

507:
old  <	jmp rax>
new  <>

508:
old  <>
new  < log$69:>

509:
old  < log$72:>
new  <	; GetReturnValue Â£temporary414>

510:
old  <	; Assign errno 6>
new  <>

511:
old  <	mov dword [errno], 6>
new  < log$70:>

512:
old  <>
new  <	; PushFloat 0.000000001>

513:
old  < log$73:>
new  <	fld qword [float8$0.000000001#]>

514:
old  <	; PushFloat 0>
new  <>

515:
old  <	fldz>
new  < log$71:>

516:
old  <>
new  <	; SignedGreaterThanEqual 40 Â£temporary414 0.000000001>

517:
old  < log$74:>
new  <	fcompp>

518:
old  <	; Return 0>
new  <	fstsw ax>

519:
old  <	mov rax, [rbp]>
new  <	sahf>

520:
old  <	mov rdi, [rbp + 16]>
new  <	jbe log$40>

521:
old  <	mov rbp, [rbp + 8]>
new  <>

522:
old  <	jmp rax>
new  < log$72:>

523:
old  <>
new  <	; PushFloat sum>

524:
old  < log$75:>
new  <	fld qword [rbp + 52]>

525:
old  <	; FunctionEnd log>
new  <>

526:
old  <>
new  < log$73:>

527:
old  <section .data>
new  <	; IntegralToFloating Â£temporary416 n>

528:
old  <>
new  <	fild dword [rbp + 32]>

529:
old  <float8$2.3025850929940456840179914#:>
new  <>

530:
old  <	; Initializer Double 2.3025850929940456840179914>
new  < log$74:>

531:
old  <	dq 2.3025850929940456840179914>
new  <	; BinaryAdd Â£temporary417 sum Â£temporary416>

532:
old  <>
new  <	fadd>

533:
old  <section .text>
new  <>

534:
old  <>
new  < log$75:>

535:
old  < log10:>
new  <	; Return Â£temporary417>

536:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov rax, [rbp]>

537:
old  <>
new  <	mov rdi, [rbp + 16]>

538:
old  < log10$1:>
new  <	mov rbp, [rbp + 8]>

539:
old  <	; PushFloat x>
new  <	jmp rax>

540:
old  <	fld qword [rbp + 24]>
new  <>

541:
old  <>
new  < log$76:>

542:
old  < log10$2:>
new  <	; Assign errno 6>

543:
old  <	; Parameter double x 56>
new  <	mov dword [errno], 6>

544:
old  <	fstp qword [rbp + 56]>
new  <>

545:
old  <>
new  < log$77:>

546:
old  < log10$3:>
new  <	; PushFloat 0>

547:
old  <	; Call log 32 0>
new  <	fldz>

548:
old  <	mov qword [rbp + 32], log10$4>
new  <>

549:
old  <	mov [rbp + 40], rbp>
new  < log$78:>

550:
old  <	add rbp, 32>
new  <	; Return 0>

551:
old  <	jmp log>
new  <	mov rax, [rbp]>

552:
old  <>
new  <	mov rdi, [rbp + 16]>

553:
old  < log10$4:>
new  <	mov rbp, [rbp + 8]>

554:
old  <	; PostCall 32>
new  <	jmp rax>

556:
old  < log10$5:>
new  < log$79:>

557:
old  <	; GetReturnValue Â£temporary424>
new  <	; FunctionEnd log>

559:
old  < log10$6:>
new  <section .data>

560:
old  <	; PushFloat 2.3025850929940456840179914>
new  <>

561:
old  <	fld qword [float8$2.3025850929940456840179914#]>
new  <float8$2.3025850929940456840179914#:>

562:
old  <>
new  <	; Initializer Double 2.3025850929940456840179914>

563:
old  < log10$7:>
new  <	dq 2.3025850929940456840179914>

564:
old  <	; SignedDivide Â£temporary425 Â£temporary424 2.3025850929940456840179914>
new  <>

565:
old  <	fdiv>
new  <section .text>

567:
old  < log10$8:>
new  < log10:>

568:
old  <	; Return Â£temporary425>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

569:
old  <	mov rax, [rbp]>
new  <>

570:
old  <	mov rdi, [rbp + 16]>
new  < log10$1:>

571:
old  <	mov rbp, [rbp + 8]>
new  <	; PushFloat x>

572:
old  <	jmp rax>
new  <	fld qword [rbp + 24]>

574:
old  < log10$9:>
new  < log10$2:>

575:
old  <	; FunctionEnd log10>
new  <	; Parameter double x 56>

576:
old  <>
new  <	fstp qword [rbp + 56]>

577:
old  <section .data>
new  <>

578:
old  <>
new  < log10$3:>

579:
old  <container8bytes#:>
new  <	; Call log 32 0>

580:
old  <	; InitializerZero 8>
new  <	mov qword [rbp + 32], log10$4>

581:
old  <	times 8 db 0>
new  <	mov [rbp + 40], rbp>

582:
old  <>
new  <	add rbp, 32>

583:
old  <section .data>
new  <	jmp log>

585:
old  <int8$2#:>
new  < log10$4:>

586:
old  <	; Initializer Signed_Long_Int 2>
new  <	; PostCall 32>

587:
old  <	dq 2>
new  <>

588:
old  <>
new  < log10$5:>

589:
old  <section .text>
new  <	; GetReturnValue Â£temporary419>

591:
old  < pow:>
new  < log10$6:>

592:
old  <	; PushFloat x>
new  <	; PushFloat 2.3025850929940456840179914>

593:
old  <	fld qword [rbp + 24]>
new  <	fld qword [float8$2.3025850929940456840179914#]>

595:
old  < pow$1:>
new  < log10$7:>

596:
old  <	; PushFloat 0>
new  <	; SignedDivide Â£temporary420 Â£temporary419 2.3025850929940456840179914>

597:
old  <	fldz>
new  <	fdiv>

599:
old  < pow$2:>
new  < log10$8:>

600:
old  <	; SignedLessThanEqual 17 x 0>
new  <	; Return Â£temporary420>

601:
old  <	fcompp>
new  <	mov rax, [rbp]>

602:
old  <	fstsw ax>
new  <	mov rdi, [rbp + 16]>

603:
old  <	sahf>
new  <	mov rbp, [rbp + 8]>

604:
old  <	jae pow$17>
new  <	jmp rax>

606:
old  < pow$3:>
new  < log10$9:>

607:
old  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; FunctionEnd log10>

609:
old  < pow$4:>
new  <section .data>

610:
old  <	; PushFloat y>
new  <>

611:
old  <	fld qword [rbp + 32]>
new  <container8bytes#:>

612:
old  <>
new  <	; InitializerZero 8>

613:
old  < pow$5:>
new  <	times 8 db 0>

614:
old  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 1>
new  <>

615:
old  <	fstp qword [rbp + 40]>
new  <section .data>

617:
old  < pow$6:>
new  <int8$2#:>

618:
old  <	; PushFloat x>
new  <	; Initializer Signed_Long_Int 2>

619:
old  <	fld qword [rbp + 24]>
new  <	dq 2>

621:
old  < pow$7:>
new  <section .text>

622:
old  <	; Parameter double x 64>
new  <>

623:
old  <	fstp qword [rbp + 72]>
new  < pow:>

624:
old  <>
new  <	; PushFloat x>

625:
old  < pow$8:>
new  <	fld qword [rbp + 24]>

626:
old  <	; Call log 40 0>
new  <>

627:
old  <	mov qword [rbp + 48], pow$9>
new  < pow$1:>

628:
old  <	mov [rbp + 56], rbp>
new  <	; PushFloat 0>

629:
old  <	add rbp, 48>
new  <	fldz>

630:
old  <	jmp log>
new  <>

631:
old  <>
new  < pow$2:>

632:
old  < pow$9:>
new  <	; SignedLessThanEqual 17 x 0>

633:
old  <	; PostCall 40>
new  <	fcompp>

634:
old  <	fstp qword [rbp + 48]>
new  <	fstsw ax>

635:
old  <	fld qword [rbp + 40]>
new  <	sahf>

636:
old  <	fld qword [rbp + 48]>
new  <	jae pow$17>

638:
old  < pow$10:>
new  < pow$3:>

639:
old  <	; GetReturnValue Â£temporary428>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

641:
old  < pow$11:>
new  < pow$4:>

642:
old  <	; SignedMultiply Â£temporary429 y Â£temporary428>
new  <	; PushFloat y>

643:
old  <	fmul>
new  <	fld qword [rbp + 32]>

645:
old  < pow$12:>
new  < pow$5:>

646:
old  <	; Parameter double Â£temporary429 64>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 1>

647:
old  <	fstp qword [rbp + 64]>
new  <	fstp qword [rbp + 40]>

649:
old  < pow$13:>
new  < pow$6:>

650:
old  <	; Call exp 40 0>
new  <	; PushFloat x>

651:
old  <	mov qword [rbp + 40], pow$14>
new  <	fld qword [rbp + 24]>

652:
old  <	mov [rbp + 48], rbp>
new  <>

653:
old  <	add rbp, 40>
new  < pow$7:>

654:
old  <	jmp exp>
new  <	; Parameter double x 64>

655:
old  <>
new  <	fstp qword [rbp + 72]>

656:
old  < pow$14:>
new  <>

657:
old  <	; PostCall 40>
new  < pow$8:>

658:
old  <>
new  <	; Call log 40 0>

659:
old  < pow$15:>
new  <	mov qword [rbp + 48], pow$9>

660:
old  <	; GetReturnValue Â£temporary430>
new  <	mov [rbp + 56], rbp>

661:
old  <>
new  <	add rbp, 48>

662:
old  < pow$16:>
new  <	jmp log>

663:
old  <	; Return Â£temporary430>
new  <>

664:
old  <	mov rax, [rbp]>
new  < pow$9:>

665:
old  <	mov rdi, [rbp + 16]>
new  <	; PostCall 40>

666:
old  <	mov rbp, [rbp + 8]>
new  <	fstp qword [rbp + 48]>

667:
old  <	jmp rax>
new  <	fld qword [rbp + 40]>

668:
old  <>
new  <	fld qword [rbp + 48]>

669:
old  < pow$17:>
new  <>

670:
old  <	; PushFloat x>
new  < pow$10:>

671:
old  <	fld qword [rbp + 24]>
new  <	; GetReturnValue Â£temporary423>

673:
old  < pow$18:>
new  < pow$11:>

674:
old  <	; PushFloat 0>
new  <	; SignedMultiply Â£temporary424 y Â£temporary423>

675:
old  <	fldz>
new  <	fmul>

677:
old  < pow$19:>
new  < pow$12:>

678:
old  <	; NotEqual 25 x 0>
new  <	; Parameter double Â£temporary424 64>

679:
old  <	fcompp>
new  <	fstp qword [rbp + 64]>

680:
old  <	fstsw ax>
new  <>

681:
old  <	sahf>
new  < pow$13:>

682:
old  <	jne pow$25>
new  <	; Call exp 40 0>

683:
old  <>
new  <	mov qword [rbp + 40], pow$14>

684:
old  < pow$20:>
new  <	mov [rbp + 48], rbp>

685:
old  <	; PushFloat y>
new  <	add rbp, 40>

686:
old  <	fld qword [rbp + 32]>
new  <	jmp exp>

688:
old  < pow$21:>
new  < pow$14:>

689:
old  <	; PushFloat 0>
new  <	; PostCall 40>

690:
old  <	fldz>
new  <>

691:
old  <>
new  < pow$15:>

692:
old  < pow$22:>
new  <	; GetReturnValue Â£temporary425>

693:
old  <	; SignedLessThanEqual 25 y 0>
new  <>

694:
old  <	fcompp>
new  < pow$16:>

695:
old  <	fstsw ax>
new  <	; Return Â£temporary425>

696:
old  <	sahf>
new  <	mov rax, [rbp]>

697:
old  <	jae pow$25>
new  <	mov rdi, [rbp + 16]>

698:
old  <>
new  <	mov rbp, [rbp + 8]>

699:
old  < pow$23:>
new  <	jmp rax>

700:
old  <	; PushFloat 0>
new  <>

701:
old  <	fldz>
new  < pow$17:>

702:
old  <>
new  <	; PushFloat x>

703:
old  < pow$24:>
new  <	fld qword [rbp + 24]>

704:
old  <	; Return 0>
new  <>

705:
old  <	mov rax, [rbp]>
new  < pow$18:>

706:
old  <	mov rdi, [rbp + 16]>
new  <	; PushFloat 0>

707:
old  <	mov rbp, [rbp + 8]>
new  <	fldz>

708:
old  <	jmp rax>
new  <>

709:
old  <>
new  < pow$19:>

710:
old  < pow$25:>
new  <	; NotEqual 25 x 0>

711:
old  <	; PushFloat x>
new  <	fcompp>

712:
old  <	fld qword [rbp + 24]>
new  <	fstsw ax>

713:
old  <>
new  <	sahf>

714:
old  < pow$26:>
new  <	jne pow$25>

715:
old  <	; PushFloat 0>
new  <>

716:
old  <	fldz>
new  < pow$20:>

717:
old  <>
new  <	; PushFloat y>

718:
old  < pow$27:>
new  <	fld qword [rbp + 32]>

719:
old  <	; SignedGreaterThanEqual 77 x 0>
new  <>

720:
old  <	fcompp>
new  < pow$21:>

721:
old  <	fstsw ax>
new  <	; PushFloat 0>

722:
old  <	sahf>
new  <	fldz>

723:
old  <	jbe pow$77>
new  <>

724:
old  <>
new  < pow$22:>

725:
old  < pow$28:>
new  <	; NotEqual 25 y 0>

726:
old  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	fcompp>

727:
old  <>
new  <	fstsw ax>

728:
old  < pow$29:>
new  <	sahf>

729:
old  <	; PushFloat y>
new  <	jne pow$25>

730:
old  <	fld qword [rbp + 32]>
new  <>

731:
old  <>
new  < pow$23:>

732:
old  < pow$30:>
new  <	; PushFloat 1>

733:
old  <	; Parameter double y 64>
new  <	fld1>

734:
old  <	fstp qword [rbp + 64]>
new  <>

735:
old  <>
new  < pow$24:>

736:
old  < pow$31:>
new  <	; Return 1>

737:
old  <	; Call floor 40 0>
new  <	mov rax, [rbp]>

738:
old  <	mov qword [rbp + 40], pow$32>
new  <	mov rdi, [rbp + 16]>

739:
old  <	mov [rbp + 48], rbp>
new  <	mov rbp, [rbp + 8]>

740:
old  <	add rbp, 40>
new  <	jmp rax>

741:
old  <	jmp floor>
new  <>

742:
old  <>
new  < pow$25:>

743:
old  < pow$32:>
new  <	; PushFloat x>

744:
old  <	; PostCall 40>
new  <	fld qword [rbp + 24]>

746:
old  < pow$33:>
new  < pow$26:>

747:
old  <	; GetReturnValue Â£temporary435>
new  <	; PushFloat 0>

748:
old  <>
new  <	fldz>

749:
old  < pow$34:>
new  <>

750:
old  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 1>
new  < pow$27:>

751:
old  <	fstp qword [rbp + 40]>
new  <	; NotEqual 33 x 0>

752:
old  <>
new  <	fcompp>

753:
old  < pow$35:>
new  <	fstsw ax>

754:
old  <	; PushFloat y>
new  <	sahf>

755:
old  <	fld qword [rbp + 32]>
new  <	jne pow$33>

757:
old  < pow$36:>
new  < pow$28:>

758:
old  <	; Parameter double y 64>
new  <	; PushFloat y>

759:
old  <	fstp qword [rbp + 72]>
new  <	fld qword [rbp + 32]>

761:
old  < pow$37:>
new  < pow$29:>

762:
old  <	; Call ceil 40 0>
new  <	; PushFloat 0>

763:
old  <	mov qword [rbp + 48], pow$38>
new  <	fldz>

764:
old  <	mov [rbp + 56], rbp>
new  <>

765:
old  <	add rbp, 48>
new  < pow$30:>

766:
old  <	jmp ceil>
new  <	; SignedLessThanEqual 33 y 0>

767:
old  <>
new  <	fcompp>

768:
old  < pow$38:>
new  <	fstsw ax>

769:
old  <	; PostCall 40>
new  <	sahf>

770:
old  <	fstp qword [rbp + 48]>
new  <	jae pow$33>

771:
old  <	fld qword [rbp + 40]>
new  <>

772:
old  <	fld qword [rbp + 48]>
new  < pow$31:>

773:
old  <>
new  <	; PushFloat 0>

774:
old  < pow$39:>
new  <	fldz>

775:
old  <	; GetReturnValue Â£temporary436>
new  <>

776:
old  <>
new  < pow$32:>

777:
old  < pow$40:>
new  <	; Return 0>

778:
old  <	; NotEqual 77 Â£temporary435 Â£temporary436>
new  <	mov rax, [rbp]>

779:
old  <	fcompp>
new  <	mov rdi, [rbp + 16]>

780:
old  <	fstsw ax>
new  <	mov rbp, [rbp + 8]>

781:
old  <	sahf>
new  <	jmp rax>

782:
old  <	jne pow$77>
new  <>

783:
old  <>
new  < pow$33:>

784:
old  < pow$41:>
new  <	; PushFloat x>

785:
old  <	; PushFloat y>
new  <	fld qword [rbp + 24]>

786:
old  <	fld qword [rbp + 32]>
new  <>

787:
old  <>
new  < pow$34:>

788:
old  < pow$42:>
new  <	; PushFloat 0>

789:
old  <	; FloatingToIntegral Â£temporary439 y>
new  <	fldz>

790:
old  <	fistp qword [container8bytes#]>
new  <>

791:
old  <	mov rax, [container8bytes#]>
new  < pow$35:>

792:
old  <>
new  <	; SignedGreaterThanEqual 85 x 0>

793:
old  < pow$43:>
new  <	fcompp>

794:
old  <	; Assign long_y Â£temporary439>
new  <	fstsw ax>

795:
old  <	mov [rbp + 40], rax>
new  <	sahf>

796:
old  <>
new  <	jbe pow$85>

797:
old  < pow$44:>
new  <>

798:
old  <	; SignedModulo Â£temporary440 long_y 2>
new  < pow$36:>

799:
old  <	mov rax, [rbp + 40]>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

800:
old  <	xor rdx, rdx>
new  <>

801:
old  <	idiv qword [int8$2#]>
new  < pow$37:>

802:
old  <>
new  <	; PushFloat y>

803:
old  < pow$45:>
new  <	fld qword [rbp + 32]>

804:
old  <	; NotEqual 61 Â£temporary440 0>
new  <>

805:
old  <	cmp rdx, 0>
new  < pow$38:>

806:
old  <	jne pow$61>
new  <	; Parameter double y 64>

807:
old  <>
new  <	fstp qword [rbp + 64]>

808:
old  < pow$46:>
new  <>

809:
old  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < pow$39:>

810:
old  <>
new  <	; Call floor 40 0>

811:
old  < pow$47:>
new  <	mov qword [rbp + 40], pow$40>

812:
old  <	; PushFloat y>
new  <	mov [rbp + 48], rbp>

813:
old  <	fld qword [rbp + 32]>
new  <	add rbp, 40>

814:
old  <>
new  <	jmp floor>

815:
old  < pow$48:>
new  <>

816:
old  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 1>
new  < pow$40:>

817:
old  <	fstp qword [rbp + 48]>
new  <	; PostCall 40>

819:
old  < pow$49:>
new  < pow$41:>

820:
old  <	; PushFloat x>
new  <	; GetReturnValue Â£temporary433>

821:
old  <	fld qword [rbp + 24]>
new  <>

822:
old  <>
new  < pow$42:>

823:
old  < pow$50:>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 1>

824:
old  <	; UnarySubtract Â£temporary442 x>
new  <	fstp qword [rbp + 40]>

825:
old  <	fchs>
new  <>

826:
old  <>
new  < pow$43:>

827:
old  < pow$51:>
new  <	; PushFloat y>

828:
old  <	; Parameter double Â£temporary442 72>
new  <	fld qword [rbp + 32]>

829:
old  <	fstp qword [rbp + 80]>
new  <>

830:
old  <>
new  < pow$44:>

831:
old  < pow$52:>
new  <	; Parameter double y 64>

832:
old  <	; Call log 48 0>
new  <	fstp qword [rbp + 72]>

833:
old  <	mov qword [rbp + 56], pow$53>
new  <>

834:
old  <	mov [rbp + 64], rbp>
new  < pow$45:>

835:
old  <	add rbp, 56>
new  <	; Call ceil 40 0>

836:
old  <	jmp log>
new  <	mov qword [rbp + 48], pow$46>

837:
old  <>
new  <	mov [rbp + 56], rbp>

838:
old  < pow$53:>
new  <	add rbp, 48>

839:
old  <	; PostCall 48>
new  <	jmp ceil>

840:
old  <	fstp qword [rbp + 56]>
new  <>

841:
old  <	fld qword [rbp + 48]>
new  < pow$46:>

842:
old  <	fld qword [rbp + 56]>
new  <	; PostCall 40>

843:
old  <>
new  <	fstp qword [rbp + 48]>

844:
old  < pow$54:>
new  <	fld qword [rbp + 40]>

845:
old  <	; GetReturnValue Â£temporary443>
new  <	fld qword [rbp + 48]>

847:
old  < pow$55:>
new  < pow$47:>

848:
old  <	; SignedMultiply Â£temporary444 y Â£temporary443>
new  <	; GetReturnValue Â£temporary434>

849:
old  <	fmul>
new  <>

850:
old  <>
new  < pow$48:>

851:
old  < pow$56:>
new  <	; NotEqual 85 Â£temporary433 Â£temporary434>

852:
old  <	; Parameter double Â£temporary444 72>
new  <	fcompp>

853:
old  <	fstp qword [rbp + 72]>
new  <	fstsw ax>

854:
old  <>
new  <	sahf>

855:
old  < pow$57:>
new  <	jne pow$85>

856:
old  <	; Call exp 48 0>
new  <>

857:
old  <	mov qword [rbp + 48], pow$58>
new  < pow$49:>

858:
old  <	mov [rbp + 56], rbp>
new  <	; PushFloat y>

859:
old  <	add rbp, 48>
new  <	fld qword [rbp + 32]>

860:
old  <	jmp exp>
new  <>

861:
old  <>
new  < pow$50:>

862:
old  < pow$58:>
new  <	; FloatingToIntegral Â£temporary437 y>

863:
old  <	; PostCall 48>
new  <	fistp qword [container8bytes#]>

864:
old  <>
new  <	mov rax, [container8bytes#]>

865:
old  < pow$59:>
new  <>

866:
old  <	; GetReturnValue Â£temporary445>
new  < pow$51:>

867:
old  <>
new  <	; Assign long_y Â£temporary437>

868:
old  < pow$60:>
new  <	mov [rbp + 40], rax>

869:
old  <	; Return Â£temporary445>
new  <>

870:
old  <	mov rax, [rbp]>
new  < pow$52:>

871:
old  <	mov rdi, [rbp + 16]>
new  <	; SignedModulo Â£temporary438 long_y 2>

872:
old  <	mov rbp, [rbp + 8]>
new  <	mov rax, [rbp + 40]>

873:
old  <	jmp rax>
new  <	xor rdx, rdx>

874:
old  <>
new  <	idiv qword [int8$2#]>

875:
old  < pow$61:>
new  <>

876:
old  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < pow$53:>

877:
old  <>
new  <	; NotEqual 69 Â£temporary438 0>

878:
old  < pow$62:>
new  <	cmp rdx, 0>

879:
old  <	; PushFloat y>
new  <	jne pow$69>

880:
old  <	fld qword [rbp + 32]>
new  <>

881:
old  <>
new  < pow$54:>

882:
old  < pow$63:>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

883:
old  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 1>
new  <>

884:
old  <	fstp qword [rbp + 48]>
new  < pow$55:>

885:
old  <>
new  <	; PushFloat y>

886:
old  < pow$64:>
new  <	fld qword [rbp + 32]>

887:
old  <	; PushFloat x>
new  <>

888:
old  <	fld qword [rbp + 24]>
new  < pow$56:>

889:
old  <>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 1>

890:
old  < pow$65:>
new  <	fstp qword [rbp + 48]>

891:
old  <	; UnarySubtract Â£temporary446 x>
new  <>

892:
old  <	fchs>
new  < pow$57:>

893:
old  <>
new  <	; PushFloat x>

894:
old  < pow$66:>
new  <	fld qword [rbp + 24]>

895:
old  <	; Parameter double Â£temporary446 72>
new  <>

896:
old  <	fstp qword [rbp + 80]>
new  < pow$58:>

897:
old  <>
new  <	; UnarySubtract Â£temporary440 x>

898:
old  < pow$67:>
new  <	fchs>

899:
old  <	; Call log 48 0>
new  <>

900:
old  <	mov qword [rbp + 56], pow$68>
new  < pow$59:>

901:
old  <	mov [rbp + 64], rbp>
new  <	; Parameter double Â£temporary440 72>

902:
old  <	add rbp, 56>
new  <	fstp qword [rbp + 80]>

903:
old  <	jmp log>
new  <>

904:
old  <>
new  < pow$60:>

905:
old  < pow$68:>
new  <	; Call log 48 0>

906:
old  <	; PostCall 48>
new  <	mov qword [rbp + 56], pow$61>

907:
old  <	fstp qword [rbp + 56]>
new  <	mov [rbp + 64], rbp>

908:
old  <	fld qword [rbp + 48]>
new  <	add rbp, 56>

909:
old  <	fld qword [rbp + 56]>
new  <	jmp log>

911:
old  < pow$69:>
new  < pow$61:>

912:
old  <	; GetReturnValue Â£temporary447>
new  <	; PostCall 48>

913:
old  <>
new  <	fstp qword [rbp + 56]>

914:
old  < pow$70:>
new  <	fld qword [rbp + 48]>

915:
old  <	; SignedMultiply Â£temporary448 y Â£temporary447>
new  <	fld qword [rbp + 56]>

916:
old  <	fmul>
new  <>

917:
old  <>
new  < pow$62:>

918:
old  < pow$71:>
new  <	; GetReturnValue Â£temporary441>

919:
old  <	; Parameter double Â£temporary448 72>
new  <>

920:
old  <	fstp qword [rbp + 72]>
new  < pow$63:>

921:
old  <>
new  <	; SignedMultiply Â£temporary442 y Â£temporary441>

922:
old  < pow$72:>
new  <	fmul>

923:
old  <	; Call exp 48 0>
new  <>

924:
old  <	mov qword [rbp + 48], pow$73>
new  < pow$64:>

925:
old  <	mov [rbp + 56], rbp>
new  <	; Parameter double Â£temporary442 72>

926:
old  <	add rbp, 48>
new  <	fstp qword [rbp + 72]>

927:
old  <	jmp exp>
new  <>

928:
old  <>
new  < pow$65:>

929:
old  < pow$73:>
new  <	; Call exp 48 0>

930:
old  <	; PostCall 48>
new  <	mov qword [rbp + 48], pow$66>

931:
old  <>
new  <	mov [rbp + 56], rbp>

932:
old  < pow$74:>
new  <	add rbp, 48>

933:
old  <	; GetReturnValue Â£temporary449>
new  <	jmp exp>

935:
old  < pow$75:>
new  < pow$66:>

936:
old  <	; UnarySubtract Â£temporary450 Â£temporary449>
new  <	; PostCall 48>

937:
old  <	fchs>
new  <>

938:
old  <>
new  < pow$67:>

939:
old  < pow$76:>
new  <	; GetReturnValue Â£temporary443>

940:
old  <	; Return Â£temporary450>
new  <>

941:
old  <	mov rax, [rbp]>
new  < pow$68:>

942:
old  <	mov rdi, [rbp + 16]>
new  <	; Return Â£temporary443>

943:
old  <	mov rbp, [rbp + 8]>
new  <	mov rax, [rbp]>

944:
old  <	jmp rax>
new  <	mov rdi, [rbp + 16]>

945:
old  <>
new  <	mov rbp, [rbp + 8]>

946:
old  < pow$77:>
new  <	jmp rax>

947:
old  <	; Assign errno 6>
new  <>

948:
old  <	mov dword [errno], 6>
new  < pow$69:>

949:
old  <>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

950:
old  < pow$78:>
new  <>

951:
old  <	; PushFloat 0>
new  < pow$70:>

952:
old  <	fldz>
new  <	; PushFloat y>

953:
old  <>
new  <	fld qword [rbp + 32]>

954:
old  < pow$79:>
new  <>

955:
old  <	; Return 0>
new  < pow$71:>

956:
old  <	mov rax, [rbp]>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 1>

957:
old  <	mov rdi, [rbp + 16]>
new  <	fstp qword [rbp + 48]>

958:
old  <	mov rbp, [rbp + 8]>
new  <>

959:
old  <	jmp rax>
new  < pow$72:>

960:
old  <>
new  <	; PushFloat x>

961:
old  < pow$80:>
new  <	fld qword [rbp + 24]>

962:
old  <	; FunctionEnd pow>
new  <>

963:
old  <>
new  < pow$73:>

964:
old  <section .data>
new  <	; UnarySubtract Â£temporary444 x>

965:
old  <>
new  <	fchs>

966:
old  <float8$2#:>
new  <>

967:
old  <	; Initializer Double 2>
new  < pow$74:>

968:
old  <	dq 2.0>
new  <	; Parameter double Â£temporary444 72>

969:
old  <>
new  <	fstp qword [rbp + 80]>

970:
old  <section .text>
new  <>

971:
old  <>
new  < pow$75:>

972:
old  < ldexp:>
new  <	; Call log 48 0>

973:
old  <	; PushFloat x>
new  <	mov qword [rbp + 56], pow$76>

974:
old  <	fld qword [rbp + 24]>
new  <	mov [rbp + 64], rbp>

975:
old  <>
new  <	add rbp, 56>

976:
old  < ldexp$1:>
new  <	jmp log>

977:
old  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 1>
new  <>

978:
old  <	fstp qword [rbp + 36]>
new  < pow$76:>

979:
old  <>
new  <	; PostCall 48>

980:
old  < ldexp$2:>
new  <	fstp qword [rbp + 56]>

981:
old  <	; PushFloat 2>
new  <	fld qword [rbp + 48]>

982:
old  <	fld qword [float8$2#]>
new  <	fld qword [rbp + 56]>

984:
old  < ldexp$3:>
new  < pow$77:>

985:
old  <	; Parameter double 2 60>
new  <	; GetReturnValue Â£temporary445>

986:
old  <	fstp qword [rbp + 68]>
new  <>

987:
old  <>
new  < pow$78:>

988:
old  < ldexp$4:>
new  <	; SignedMultiply Â£temporary446 y Â£temporary445>

989:
old  <	; IntegralToFloating Â£temporary459 n>
new  <	fmul>

990:
old  <	fild dword [rbp + 32]>
new  <>

991:
old  <>
new  < pow$79:>

992:
old  < ldexp$5:>
new  <	; Parameter double Â£temporary446 72>

993:
old  <	; Parameter double Â£temporary459 68>
new  <	fstp qword [rbp + 72]>

994:
old  <	fstp qword [rbp + 76]>
new  <>

995:
old  <>
new  < pow$80:>

996:
old  < ldexp$6:>
new  <	; Call exp 48 0>

997:
old  <	; Call pow 36 0>
new  <	mov qword [rbp + 48], pow$81>

998:
old  <	mov qword [rbp + 44], ldexp$7>
new  <	mov [rbp + 56], rbp>

999:
old  <	mov [rbp + 52], rbp>
new  <	add rbp, 48>

1000:
old  <	add rbp, 44>
new  <	jmp exp>

1001:
old  <	jmp pow>
new  <>

1002:
old  <>
new  < pow$81:>

1003:
old  < ldexp$7:>
new  <	; PostCall 48>

1004:
old  <	; PostCall 36>
new  <>

1005:
old  <	fstp qword [rbp + 44]>
new  < pow$82:>

1006:
old  <	fld qword [rbp + 36]>
new  <	; GetReturnValue Â£temporary447>

1007:
old  <	fld qword [rbp + 44]>
new  <>

1008:
old  <>
new  < pow$83:>

1009:
old  < ldexp$8:>
new  <	; UnarySubtract Â£temporary448 Â£temporary447>

1010:
old  <	; GetReturnValue Â£temporary460>
new  <	fchs>

1012:
old  < ldexp$9:>
new  < pow$84:>

1013:
old  <	; SignedMultiply Â£temporary461 x Â£temporary460>
new  <	; Return Â£temporary448>

1014:
old  <	fmul>
new  <	mov rax, [rbp]>

1015:
old  <>
new  <	mov rdi, [rbp + 16]>

1016:
old  < ldexp$10:>
new  <	mov rbp, [rbp + 8]>

1017:
old  <	; Return Â£temporary461>
new  <	jmp rax>

1018:
old  <	mov rax, [rbp]>
new  <>

1019:
old  <	mov rdi, [rbp + 16]>
new  < pow$85:>

1020:
old  <	mov rbp, [rbp + 8]>
new  <	; Assign errno 6>

1021:
old  <	jmp rax>
new  <	mov dword [errno], 6>

1023:
old  < ldexp$11:>
new  < pow$86:>

1024:
old  <	; FunctionEnd ldexp>
new  <	; PushFloat 0>

1025:
old  <>
new  <	fldz>

1026:
old  <section .data>
new  <>

1027:
old  <>
new  < pow$87:>

1028:
old  <float8$0.6931471805599453094172321#:>
new  <	; Return 0>

1029:
old  <	; Initializer Double 0.6931471805599453094172321>
new  <	mov rax, [rbp]>

1030:
old  <	dq 0.6931471805599453094172321>
new  <	mov rdi, [rbp + 16]>

1031:
old  <>
new  <	mov rbp, [rbp + 8]>

1032:
old  <section .data>
new  <	jmp rax>

1034:
old  <container4bytes#:>
new  < pow$88:>

1035:
old  <	; InitializerZero 4>
new  <	; FunctionEnd pow>

1036:
old  <	times 4 db 0>
new  <>

1037:
old  <>
new  <section .data>

1038:
old  <section .text>
new  <>

1039:
old  <>
new  <float8$2#:>

1040:
old  < @1828$log2:>
new  <	; Initializer Double 2>

1041:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	dq 2.0>

1043:
old  < @1828$log2$1:>
new  <section .text>

1044:
old  <	; PushFloat x>
new  <>

1045:
old  <	fld qword [rbp + 24]>
new  < ldexp:>

1046:
old  <>
new  <	; PushFloat x>

1047:
old  < @1828$log2$2:>
new  <	fld qword [rbp + 24]>

1048:
old  <	; Parameter double x 56>
new  <>

1049:
old  <	fstp qword [rbp + 56]>
new  < ldexp$1:>

1050:
old  <>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 1>

1051:
old  < @1828$log2$3:>
new  <	fstp qword [rbp + 36]>

1052:
old  <	; Call log 32 0>
new  <>

1053:
old  <	mov qword [rbp + 32], @1828$log2$4>
new  < ldexp$2:>

1054:
old  <	mov [rbp + 40], rbp>
new  <	; PushFloat 2>

1055:
old  <	add rbp, 32>
new  <	fld qword [float8$2#]>

1056:
old  <	jmp log>
new  <>

1057:
old  <>
new  < ldexp$3:>

1058:
old  < @1828$log2$4:>
new  <	; Parameter double 2 60>

1059:
old  <	; PostCall 32>
new  <	fstp qword [rbp + 68]>

1061:
old  < @1828$log2$5:>
new  < ldexp$4:>

1062:
old  <	; GetReturnValue Â£temporary464>
new  <	; IntegralToFloating Â£temporary457 n>

1063:
old  <>
new  <	fild dword [rbp + 32]>

1064:
old  < @1828$log2$6:>
new  <>

1065:
old  <	; PushFloat 0.6931471805599453094172321>
new  < ldexp$5:>

1066:
old  <	fld qword [float8$0.6931471805599453094172321#]>
new  <	; Parameter double Â£temporary457 68>

1067:
old  <>
new  <	fstp qword [rbp + 76]>

1068:
old  < @1828$log2$7:>
new  <>

1069:
old  <	; SignedDivide Â£temporary465 Â£temporary464 0.6931471805599453094172321>
new  < ldexp$6:>

1070:
old  <	fdiv>
new  <	; Call pow 36 0>

1071:
old  <>
new  <	mov qword [rbp + 44], ldexp$7>

1072:
old  < @1828$log2$8:>
new  <	mov [rbp + 52], rbp>

1073:
old  <	; FloatingToIntegral Â£temporary466 Â£temporary465>
new  <	add rbp, 44>

1074:
old  <	fistp dword [container4bytes#]>
new  <	jmp pow>

1075:
old  <	mov ebx, [container4bytes#]>
new  <>

1076:
old  <>
new  < ldexp$7:>

1077:
old  < @1828$log2$9:>
new  <	; PostCall 36>

1078:
old  <	; Return Â£temporary466>
new  <	fstp qword [rbp + 44]>

1079:
old  <	mov rax, [rbp]>
new  <	fld qword [rbp + 36]>

1080:
old  <	mov rdi, [rbp + 16]>
new  <	fld qword [rbp + 44]>

1081:
old  <	mov rbp, [rbp + 8]>
new  <>

1082:
old  <	jmp rax>
new  < ldexp$8:>

1083:
old  <>
new  <	; GetReturnValue Â£temporary458>

1084:
old  < @1828$log2$10:>
new  <>

1085:
old  <	; FunctionEnd log2>
new  < ldexp$9:>

1086:
old  <>
new  <	; SignedMultiply Â£temporary459 x Â£temporary458>

1087:
old  <section .text>
new  <	fmul>

1089:
old  < frexp:>
new  < ldexp$10:>

1090:
old  <	; PushFloat x>
new  <	; Return Â£temporary459>

1091:
old  <	fld qword [rbp + 24]>
new  <	mov rax, [rbp]>

1092:
old  <>
new  <	mov rdi, [rbp + 16]>

1093:
old  < frexp$1:>
new  <	mov rbp, [rbp + 8]>

1094:
old  <	; PushFloat 0>
new  <	jmp rax>

1095:
old  <	fldz>
new  <>

1096:
old  <>
new  < ldexp$11:>

1097:
old  < frexp$2:>
new  <	; FunctionEnd ldexp>

1098:
old  <	; Equal 31 x 0>
new  <>

1099:
old  <	fcompp>
new  <section .data>

1100:
old  <	fstsw ax>
new  <>

1101:
old  <	sahf>
new  <float8$0.6931471805599453094172321#:>

1102:
old  <	je frexp$31>
new  <	; Initializer Double 0.6931471805599453094172321>

1103:
old  <>
new  <	dq 0.6931471805599453094172321>

1104:
old  < frexp$3:>
new  <>

1105:
old  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <section .data>

1107:
old  < frexp$4:>
new  <container4bytes#:>

1108:
old  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; InitializerZero 4>

1109:
old  <>
new  <	times 4 db 0>

1110:
old  < frexp$5:>
new  <>

1111:
old  <	; PushFloat x>
new  <section .text>

1112:
old  <	fld qword [rbp + 24]>
new  <>

1113:
old  <>
new  < @1669$log2:>

1114:
old  < frexp$6:>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1115:
old  <	; Parameter double x 64>
new  <>

1116:
old  <	fstp qword [rbp + 64]>
new  < @1669$log2$1:>

1117:
old  <>
new  <	; PushFloat x>

1118:
old  < frexp$7:>
new  <	fld qword [rbp + 24]>

1119:
old  <	; Call fabs 40 0>
new  <>

1120:
old  <	mov qword [rbp + 40], frexp$8>
new  < @1669$log2$2:>

1121:
old  <	mov [rbp + 48], rbp>
new  <	; Parameter double x 56>

1122:
old  <	add rbp, 40>
new  <	fstp qword [rbp + 56]>

1123:
old  <	jmp fabs>
new  <>

1124:
old  <>
new  < @1669$log2$3:>

1125:
old  < frexp$8:>
new  <	; Call log 32 0>

1126:
old  <	; PostCall 40>
new  <	mov qword [rbp + 32], @1669$log2$4>

1127:
old  <>
new  <	mov [rbp + 40], rbp>

1128:
old  < frexp$9:>
new  <	add rbp, 32>

1129:
old  <	; GetReturnValue Â£temporary469>
new  <	jmp log>

1131:
old  < frexp$10:>
new  < @1669$log2$4:>

1132:
old  <	; Parameter double Â£temporary469 64>
new  <	; PostCall 32>

1133:
old  <	fstp qword [rbp + 64]>
new  <>

1134:
old  <>
new  < @1669$log2$5:>

1135:
old  < frexp$11:>
new  <	; GetReturnValue Â£temporary462>

1136:
old  <	; Call log2 40 0>
new  <>

1137:
old  <	mov qword [rbp + 40], frexp$12>
new  < @1669$log2$6:>

1138:
old  <	mov [rbp + 48], rbp>
new  <	; PushFloat 0.6931471805599453094172321>

1139:
old  <	add rbp, 40>
new  <	fld qword [float8$0.6931471805599453094172321#]>

1140:
old  <	jmp @1828$log2>
new  <>

1141:
old  <>
new  < @1669$log2$7:>

1142:
old  < frexp$12:>
new  <	; SignedDivide Â£temporary463 Â£temporary462 0.6931471805599453094172321>

1143:
old  <	; PostCall 40>
new  <	fdiv>

1145:
old  < frexp$13:>
new  < @1669$log2$8:>

1146:
old  <	; GetReturnValue Â£temporary470>
new  <	; FloatingToIntegral Â£temporary464 Â£temporary463>

1147:
old  <>
new  <	fistp dword [container4bytes#]>

1148:
old  < frexp$14:>
new  <	mov ebx, [container4bytes#]>

1149:
old  <	; BinaryAdd Â£temporary471 Â£temporary470 1>
new  <>

1150:
old  <	inc ebx>
new  < @1669$log2$9:>

1151:
old  <>
new  <	; Return Â£temporary464>

1152:
old  < frexp$15:>
new  <	mov rax, [rbp]>

1153:
old  <	; IntegralToIntegral Â£temporary472 Â£temporary471>
new  <	mov rdi, [rbp + 16]>

1154:
old  <>
new  <	mov rbp, [rbp + 8]>

1155:
old  < frexp$16:>
new  <	jmp rax>

1156:
old  <	; Assign exponent Â£temporary472>
new  <>

1157:
old  <	mov [rbp + 40], ebx>
new  < @1669$log2$10:>

1158:
old  <>
new  <	; FunctionEnd log2>

1159:
old  < frexp$17:>
new  <>

1160:
old  <	; Equal 20 p 0>
new  <section .text>

1161:
old  <	cmp qword [rbp + 32], 0>
new  <>

1162:
old  <	je frexp$20>
new  < frexp:>

1163:
old  <>
new  <	; PushFloat x>

1164:
old  < frexp$18:>
new  <	fld qword [rbp + 24]>

1165:
old  <	; Dereference Â£temporary474 -> p p 0>
new  <>

1166:
old  <	mov rsi, [rbp + 32]>
new  < frexp$1:>

1167:
old  <>
new  <	; PushFloat 0>

1168:
old  < frexp$19:>
new  <	fldz>

1169:
old  <	; Assign Â£temporary474 -> p exponent>
new  <>

1170:
old  <	mov eax, [rbp + 40]>
new  < frexp$2:>

1171:
old  <	mov [rsi], eax>
new  <	; Equal 41 x 0>

1172:
old  <>
new  <	fcompp>

1173:
old  < frexp$20:>
new  <	fstsw ax>

1174:
old  <	; PushFloat x>
new  <	sahf>

1175:
old  <	fld qword [rbp + 24]>
new  <	je frexp$41>

1177:
old  < frexp$21:>
new  < frexp$3:>

1178:
old  <	; PreCall 44 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 1>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1179:
old  <	fstp qword [rbp + 44]>
new  <>

1180:
old  <>
new  < frexp$4:>

1181:
old  < frexp$22:>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1182:
old  <	; PushFloat 2>
new  <>

1183:
old  <	fld qword [float8$2#]>
new  < frexp$5:>

1184:
old  <>
new  <	; PushFloat x>

1185:
old  < frexp$23:>
new  <	fld qword [rbp + 24]>

1186:
old  <	; Parameter double 2 68>
new  <>

1187:
old  <	fstp qword [rbp + 76]>
new  < frexp$6:>

1188:
old  <>
new  <	; Parameter double x 64>

1189:
old  < frexp$24:>
new  <	fstp qword [rbp + 64]>

1190:
old  <	; IntegralToFloating Â£temporary475 exponent>
new  <>

1191:
old  <	fild dword [rbp + 40]>
new  < frexp$7:>

1192:
old  <>
new  <	; Call fabs 40 0>

1193:
old  < frexp$25:>
new  <	mov qword [rbp + 40], frexp$8>

1194:
old  <	; Parameter double Â£temporary475 76>
new  <	mov [rbp + 48], rbp>

1195:
old  <	fstp qword [rbp + 84]>
new  <	add rbp, 40>

1196:
old  <>
new  <	jmp fabs>

1197:
old  < frexp$26:>
new  <>

1198:
old  <	; Call pow 44 0>
new  < frexp$8:>

1199:
old  <	mov qword [rbp + 52], frexp$27>
new  <	; PostCall 40>

1200:
old  <	mov [rbp + 60], rbp>
new  <>

1201:
old  <	add rbp, 52>
new  < frexp$9:>

1202:
old  <	jmp pow>
new  <	; GetReturnValue Â£temporary467>

1204:
old  < frexp$27:>
new  < frexp$10:>

1205:
old  <	; PostCall 44>
new  <	; Parameter double Â£temporary467 64>

1206:
old  <	fstp qword [rbp + 52]>
new  <	fstp qword [rbp + 64]>

1207:
old  <	fld qword [rbp + 44]>
new  <>

1208:
old  <	fld qword [rbp + 52]>
new  < frexp$11:>

1209:
old  <>
new  <	; Call log2 40 0>

1210:
old  < frexp$28:>
new  <	mov qword [rbp + 40], frexp$12>

1211:
old  <	; GetReturnValue Â£temporary476>
new  <	mov [rbp + 48], rbp>

1212:
old  <>
new  <	add rbp, 40>

1213:
old  < frexp$29:>
new  <	jmp @1669$log2>

1214:
old  <	; SignedDivide Â£temporary477 x Â£temporary476>
new  <>

1215:
old  <	fdiv>
new  < frexp$12:>

1216:
old  <>
new  <	; PostCall 40>

1217:
old  < frexp$30:>
new  <>

1218:
old  <	; Return Â£temporary477>
new  < frexp$13:>

1219:
old  <	mov rax, [rbp]>
new  <	; GetReturnValue Â£temporary468>

1220:
old  <	mov rdi, [rbp + 16]>
new  <>

1221:
old  <	mov rbp, [rbp + 8]>
new  < frexp$14:>

1222:
old  <	jmp rax>
new  <	; IntegralToIntegral Â£temporary469 Â£temporary468>

1224:
old  < frexp$31:>
new  < frexp$15:>

1225:
old  <	; Equal 34 p 0>
new  <	; Assign exponent Â£temporary469>

1226:
old  <	cmp qword [rbp + 32], 0>
new  <	mov [rbp + 40], ebx>

1227:
old  <	je frexp$34>
new  <>

1228:
old  <>
new  < frexp$16:>

1229:
old  < frexp$32:>
new  <	; PreCall 44 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1230:
old  <	; Dereference Â£temporary479 -> p p 0>
new  <>

1231:
old  <	mov rsi, [rbp + 32]>
new  < frexp$17:>

1232:
old  <>
new  <	; PushFloat 2>

1233:
old  < frexp$33:>
new  <	fld qword [float8$2#]>

1234:
old  <	; Assign Â£temporary479 -> p 0>
new  <>

1235:
old  <	mov dword [rsi], 0>
new  < frexp$18:>

1236:
old  <>
new  <	; Parameter double 2 68>

1237:
old  < frexp$34:>
new  <	fstp qword [rbp + 68]>

1238:
old  <	; PushFloat 0>
new  <>

1239:
old  <	fldz>
new  < frexp$19:>

1240:
old  <>
new  <	; IntegralToFloating Â£temporary470 exponent>

1241:
old  < frexp$35:>
new  <	fild dword [rbp + 40]>

1242:
old  <	; Return 0>
new  <>

1243:
old  <	mov rax, [rbp]>
new  < frexp$20:>

1244:
old  <	mov rdi, [rbp + 16]>
new  <	; Parameter double Â£temporary470 76>

1245:
old  <	mov rbp, [rbp + 8]>
new  <	fstp qword [rbp + 76]>

1246:
old  <	jmp rax>
new  <>

1247:
old  <>
new  < frexp$21:>

1248:
old  < frexp$36:>
new  <	; Call pow 44 0>

1249:
old  <	; FunctionEnd frexp>
new  <	mov qword [rbp + 44], frexp$22>

1250:
old  <>
new  <	mov [rbp + 52], rbp>

1251:
old  <section .text>
new  <	add rbp, 44>

1252:
old  <>
new  <	jmp pow>

1253:
old  < sqrt:>
new  <>

1254:
old  <	; PushFloat x>
new  < frexp$22:>

1255:
old  <	fld qword [rbp + 24]>
new  <	; PostCall 44>

1257:
old  < sqrt$1:>
new  < frexp$23:>

1258:
old  <	; PushFloat 0>
new  <	; GetReturnValue Â£temporary471>

1259:
old  <	fldz>
new  <>

1260:
old  <>
new  < frexp$24:>

1261:
old  < sqrt$2:>
new  <	; PushFloat x>

1262:
old  <	; SignedLessThan 26 x 0>
new  <	fld qword [rbp + 24]>

1263:
old  <	fcompp>
new  <>

1264:
old  <	fstsw ax>
new  < frexp$25:>

1265:
old  <	sahf>
new  <	; SignedGreaterThanEqual 27 Â£temporary471 x>

1266:
old  <	ja sqrt$26>
new  <	fcompp>

1267:
old  <>
new  <	fstsw ax>

1268:
old  < sqrt$3:>
new  <	sahf>

1269:
old  <	; PushFloat 1>
new  <	jbe frexp$27>

1270:
old  <	fld1>
new  <>

1271:
old  <>
new  < frexp$26:>

1272:
old  < sqrt$4:>
new  <	; BinaryAdd exponent exponent 1>

1273:
old  <	; TopFloat root_i_plus_1>
new  <	inc dword [rbp + 40]>

1274:
old  <	fst qword [rbp + 40]>
new  <>

1275:
old  <>
new  < frexp$27:>

1276:
old  < sqrt$5:>
new  <	; Equal 30 p 0>

1277:
old  <	; TopFloat root_i>
new  <	cmp qword [rbp + 32], 0>

1278:
old  <	fst qword [rbp + 32]>
new  <	je frexp$30>

1280:
old  < sqrt$6:>
new  < frexp$28:>

1281:
old  <	; PushFloat x>
new  <	; Dereference Â£temporary475 -> p p 0>

1282:
old  <	fld qword [rbp + 24]>
new  <	mov rsi, [rbp + 32]>

1284:
old  < sqrt$7:>
new  < frexp$29:>

1285:
old  <	; PushFloat root_i>
new  <	; Assign Â£temporary475 -> p exponent>

1286:
old  <	fld qword [rbp + 32]>
new  <	mov eax, [rbp + 40]>

1287:
old  <>
new  <	mov [rsi], eax>

1288:
old  < sqrt$8:>
new  <>

1289:
old  <	; SignedDivide Â£temporary485 x root_i>
new  < frexp$30:>

1290:
old  <	fdiv>
new  <	; PushFloat x>

1291:
old  <>
new  <	fld qword [rbp + 24]>

1292:
old  < sqrt$9:>
new  <>

1293:
old  <	; BinaryAdd Â£temporary486 root_i Â£temporary485>
new  < frexp$31:>

1294:
old  <	fadd>
new  <	; PreCall 44 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 1>

1295:
old  <>
new  <	fstp qword [rbp + 44]>

1296:
old  < sqrt$10:>
new  <>

1297:
old  <	; PushFloat 2>
new  < frexp$32:>

1298:
old  <	fld qword [float8$2#]>
new  <	; PushFloat 2>

1299:
old  <>
new  <	fld qword [float8$2#]>

1300:
old  < sqrt$11:>
new  <>

1301:
old  <	; SignedDivide Â£temporary487 Â£temporary486 2>
new  < frexp$33:>

1302:
old  <	fdiv>
new  <	; Parameter double 2 68>

1303:
old  <>
new  <	fstp qword [rbp + 76]>

1304:
old  < sqrt$12:>
new  <>

1305:
old  <	; PopFloat root_i_plus_1>
new  < frexp$34:>

1306:
old  <	fstp qword [rbp + 40]>
new  <	; IntegralToFloating Â£temporary476 exponent>

1307:
old  <>
new  <	fild dword [rbp + 40]>

1308:
old  < sqrt$13:>
new  <>

1309:
old  <	; CheckTrackMapFloatStack>
new  < frexp$35:>

1310:
old  <>
new  <	; Parameter double Â£temporary476 76>

1311:
old  < sqrt$14:>
new  <	fstp qword [rbp + 84]>

1312:
old  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1313:
old  <>
new  < frexp$36:>

1314:
old  < sqrt$15:>
new  <	; Call pow 44 0>

1315:
old  <	; PushFloat root_i_plus_1>
new  <	mov qword [rbp + 52], frexp$37>

1316:
old  <	fld qword [rbp + 40]>
new  <	mov [rbp + 60], rbp>

1317:
old  <>
new  <	add rbp, 52>

1318:
old  < sqrt$16:>
new  <	jmp pow>

1319:
old  <	; PushFloat root_i>
new  <>

1320:
old  <	fld qword [rbp + 32]>
new  < frexp$37:>

1321:
old  <>
new  <	; PostCall 44>

1322:
old  < sqrt$17:>
new  <	fstp qword [rbp + 52]>

1323:
old  <	; BinarySubtract Â£temporary488 root_i_plus_1 root_i>
new  <	fld qword [rbp + 44]>

1324:
old  <	fsub>
new  <	fld qword [rbp + 52]>

1326:
old  < sqrt$18:>
new  < frexp$38:>

1327:
old  <	; Parameter double Â£temporary488 72>
new  <	; GetReturnValue Â£temporary477>

1328:
old  <	fstp qword [rbp + 72]>
new  <>

1329:
old  <>
new  < frexp$39:>

1330:
old  < sqrt$19:>
new  <	; SignedDivide Â£temporary478 x Â£temporary477>

1331:
old  <	; Call fabs 48 0>
new  <	fdiv>

1332:
old  <	mov qword [rbp + 48], sqrt$20>
new  <>

1333:
old  <	mov [rbp + 56], rbp>
new  < frexp$40:>

1334:
old  <	add rbp, 48>
new  <	; Return Â£temporary478>

1335:
old  <	jmp fabs>
new  <	mov rax, [rbp]>

1336:
old  <>
new  <	mov rdi, [rbp + 16]>

1337:
old  < sqrt$20:>
new  <	mov rbp, [rbp + 8]>

1338:
old  <	; PostCall 48>
new  <	jmp rax>

1340:
old  < sqrt$21:>
new  < frexp$41:>

1341:
old  <	; GetReturnValue Â£temporary489>
new  <	; Equal 44 p 0>

1342:
old  <>
new  <	cmp qword [rbp + 32], 0>

1343:
old  < sqrt$22:>
new  <	je frexp$44>

1344:
old  <	; PushFloat 0.000000001>
new  <>

1345:
old  <	fld qword [float8$0.000000001#]>
new  < frexp$42:>

1346:
old  <>
new  <	; Dereference Â£temporary480 -> p p 0>

1347:
old  < sqrt$23:>
new  <	mov rsi, [rbp + 32]>

1348:
old  <	; SignedGreaterThanEqual 5 Â£temporary489 0.000000001>
new  <>

1349:
old  <	fcompp>
new  < frexp$43:>

1350:
old  <	fstsw ax>
new  <	; Assign Â£temporary480 -> p 0>

1351:
old  <	sahf>
new  <	mov dword [rsi], 0>

1352:
old  <	jbe sqrt$5>
new  <>

1353:
old  <>
new  < frexp$44:>

1354:
old  < sqrt$24:>
new  <	; PushFloat 0>

1355:
old  <	; PushFloat root_i_plus_1>
new  <	fldz>

1356:
old  <	fld qword [rbp + 40]>
new  <>

1357:
old  <>
new  < frexp$45:>

1358:
old  < sqrt$25:>
new  <	; Return 0>

1359:
old  <	; Return root_i_plus_1>
new  <	mov rax, [rbp]>

1360:
old  <	mov rax, [rbp]>
new  <	mov rdi, [rbp + 16]>

1361:
old  <	mov rdi, [rbp + 16]>
new  <	mov rbp, [rbp + 8]>

1362:
old  <	mov rbp, [rbp + 8]>
new  <	jmp rax>

1363:
old  <	jmp rax>
new  <>

1364:
old  <>
new  < frexp$46:>

1365:
old  < sqrt$26:>
new  <	; FunctionEnd frexp>

1366:
old  <	; Assign errno 6>
new  <>

1367:
old  <	mov dword [errno], 6>
new  <section .text>

1369:
old  < sqrt$27:>
new  < sqrt:>

1370:
old  <	; PushFloat 0>
new  <	; PushFloat x>

1371:
old  <	fldz>
new  <	fld qword [rbp + 24]>

1373:
old  < sqrt$28:>
new  < sqrt$1:>

1374:
old  <	; Return 0>
new  <	; PushFloat 0>

1375:
old  <	mov rax, [rbp]>
new  <	fldz>

1376:
old  <	mov rdi, [rbp + 16]>
new  <>

1377:
old  <	mov rbp, [rbp + 8]>
new  < sqrt$2:>

1378:
old  <	jmp rax>
new  <	; SignedLessThan 28 x 0>

1379:
old  <>
new  <	fcompp>

1380:
old  < sqrt$29:>
new  <	fstsw ax>

1381:
old  <	; FunctionEnd sqrt>
new  <	sahf>

1382:
old  <>
new  <	ja sqrt$28>

1383:
old  <section .text>
new  <>

1384:
old  <>
new  < sqrt$3:>

1385:
old  < modf:>
new  <	; PushFloat 1>

1386:
old  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	fld1>

1388:
old  < modf$1:>
new  < sqrt$4:>

1389:
old  <	; PushFloat x>
new  <	; PopFloat root_i_plus_1>

1390:
old  <	fld qword [rbp + 24]>
new  <	fstp qword [rbp + 40]>

1392:
old  < modf$2:>
new  < sqrt$5:>

1393:
old  <	; Parameter double x 64>
new  <	; PushFloat root_i_plus_1>

1394:
old  <	fstp qword [rbp + 64]>
new  <	fld qword [rbp + 40]>

1396:
old  < modf$3:>
new  < sqrt$6:>

1397:
old  <	; Call fabs 40 0>
new  <	; PopFloat root_i>

1398:
old  <	mov qword [rbp + 40], modf$4>
new  <	fstp qword [rbp + 32]>

1399:
old  <	mov [rbp + 48], rbp>
new  <>

1400:
old  <	add rbp, 40>
new  < sqrt$7:>

1401:
old  <	jmp fabs>
new  <	; PushFloat root_i>

1402:
old  <>
new  <	fld qword [rbp + 32]>

1403:
old  < modf$4:>
new  <>

1404:
old  <	; PostCall 40>
new  < sqrt$8:>

1405:
old  <>
new  <	; PushFloat x>

1406:
old  < modf$5:>
new  <	fld qword [rbp + 24]>

1407:
old  <	; GetReturnValue Â£temporary492>
new  <>

1408:
old  <>
new  < sqrt$9:>

1409:
old  < modf$6:>
new  <	; PushFloat root_i>

1410:
old  <	; TopFloat abs_x>
new  <	fld qword [rbp + 32]>

1411:
old  <	fst qword [rbp + 40]>
new  <>

1412:
old  <>
new  < sqrt$10:>

1413:
old  < modf$7:>
new  <	; SignedDivide Â£temporary488 x root_i>

1414:
old  <	; FloatingToIntegral Â£temporary493 abs_x>
new  <	fdiv>

1415:
old  <	fistp qword [container8bytes#]>
new  <>

1416:
old  <	mov rax, [container8bytes#]>
new  < sqrt$11:>

1417:
old  <>
new  <	; BinaryAdd Â£temporary489 root_i Â£temporary488>

1418:
old  < modf$8:>
new  <	fadd>

1419:
old  <	; IntegralToFloating Â£temporary494 Â£temporary493>
new  <>

1420:
old  <	mov [container8bytes#], rax>
new  < sqrt$12:>

1421:
old  <	fild qword [container8bytes#]>
new  <	; PushFloat 2>

1422:
old  <>
new  <	fld qword [float8$2#]>

1423:
old  < modf$9:>
new  <>

1424:
old  <	; PopFloat integral>
new  < sqrt$13:>

1425:
old  <	fstp qword [rbp + 48]>
new  <	; SignedDivide Â£temporary490 Â£temporary489 2>

1426:
old  <>
new  <	fdiv>

1427:
old  < modf$10:>
new  <>

1428:
old  <	; PushFloat abs_x>
new  < sqrt$14:>

1429:
old  <	fld qword [rbp + 40]>
new  <	; PopFloat root_i_plus_1>

1430:
old  <>
new  <	fstp qword [rbp + 40]>

1431:
old  < modf$11:>
new  <>

1432:
old  <	; PushFloat integral>
new  < sqrt$15:>

1433:
old  <	fld qword [rbp + 48]>
new  <	; CheckTrackMapFloatStack>

1435:
old  < modf$12:>
new  < sqrt$16:>

1436:
old  <	; BinarySubtract Â£temporary495 abs_x integral>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1437:
old  <	fsub>
new  <>

1438:
old  <>
new  < sqrt$17:>

1439:
old  < modf$13:>
new  <	; PushFloat root_i_plus_1>

1440:
old  <	; PopFloat fractional>
new  <	fld qword [rbp + 40]>

1441:
old  <	fstp qword [rbp + 56]>
new  <>

1442:
old  <>
new  < sqrt$18:>

1443:
old  < modf$14:>
new  <	; PushFloat root_i>

1444:
old  <	; Equal 25 p 0>
new  <	fld qword [rbp + 32]>

1445:
old  <	cmp qword [rbp + 32], 0>
new  <>

1446:
old  <	je modf$25>
new  < sqrt$19:>

1447:
old  <>
new  <	; BinarySubtract Â£temporary491 root_i_plus_1 root_i>

1448:
old  < modf$15:>
new  <	fsub>

1449:
old  <	; Dereference Â£temporary497 -> p p 0>
new  <>

1450:
old  <	mov rsi, [rbp + 32]>
new  < sqrt$20:>

1451:
old  <>
new  <	; Parameter double Â£temporary491 72>

1452:
old  < modf$16:>
new  <	fstp qword [rbp + 72]>

1453:
old  <	; PushFloat x>
new  <>

1454:
old  <	fld qword [rbp + 24]>
new  < sqrt$21:>

1455:
old  <>
new  <	; Call fabs 48 0>

1456:
old  < modf$17:>
new  <	mov qword [rbp + 48], sqrt$22>

1457:
old  <	; PushFloat 0>
new  <	mov [rbp + 56], rbp>

1458:
old  <	fldz>
new  <	add rbp, 48>

1459:
old  <>
new  <	jmp fabs>

1460:
old  < modf$18:>
new  <>

1461:
old  <	; SignedLessThanEqual 22 x 0>
new  < sqrt$22:>

1462:
old  <	fcompp>
new  <	; PostCall 48>

1463:
old  <	fstsw ax>
new  <>

1464:
old  <	sahf>
new  < sqrt$23:>

1465:
old  <	jae modf$22>
new  <	; GetReturnValue Â£temporary492>

1467:
old  < modf$19:>
new  < sqrt$24:>

1468:
old  <	; PushFloat fractional>
new  <	; PushFloat 0.000000001>

1469:
old  <	fld qword [rbp + 56]>
new  <	fld qword [float8$0.000000001#]>

1471:
old  < modf$20:>
new  < sqrt$25:>

1472:
old  <	; DecreaseStack>
new  <	; SignedGreaterThanEqual 5 Â£temporary492 0.000000001>

1473:
old  <>
new  <	fcompp>

1474:
old  < modf$21:>
new  <	fstsw ax>

1475:
old  <	; Goto 24>
new  <	sahf>

1476:
old  <	jmp modf$24>
new  <	jbe sqrt$5>

1478:
old  < modf$22:>
new  < sqrt$26:>

1479:
old  <	; PushFloat fractional>
new  <	; PushFloat root_i_plus_1>

1480:
old  <	fld qword [rbp + 56]>
new  <	fld qword [rbp + 40]>

1482:
old  < modf$23:>
new  < sqrt$27:>

1483:
old  <	; UnarySubtract Â£temporary499 fractional>
new  <	; Return root_i_plus_1>

1484:
old  <	fchs>
new  <	mov rax, [rbp]>

1485:
old  <>
new  <	mov rdi, [rbp + 16]>

1486:
old  < modf$24:>
new  <	mov rbp, [rbp + 8]>

1487:
old  <	; PopFloat Â£temporary497 -> p>
new  <	jmp rax>

1488:
old  <	fstp qword [rsi]>
new  <>

1489:
old  <>
new  < sqrt$28:>

1490:
old  < modf$25:>
new  <	; Assign errno 6>

1491:
old  <	; PushFloat x>
new  <	mov dword [errno], 6>

1492:
old  <	fld qword [rbp + 24]>
new  <>

1493:
old  <>
new  < sqrt$29:>

1494:
old  < modf$26:>
new  <	; PushFloat 0>

1495:
old  <	; PushFloat 0>
new  <	fldz>

1496:
old  <	fldz>
new  <>

1497:
old  <>
new  < sqrt$30:>

1498:
old  < modf$27:>
new  <	; Return 0>

1499:
old  <	; SignedLessThanEqual 31 x 0>
new  <	mov rax, [rbp]>

1500:
old  <	fcompp>
new  <	mov rdi, [rbp + 16]>

1501:
old  <	fstsw ax>
new  <	mov rbp, [rbp + 8]>

1502:
old  <	sahf>
new  <	jmp rax>

1503:
old  <	jae modf$31>
new  <>

1504:
old  <>
new  < sqrt$31:>

1505:
old  < modf$28:>
new  <	; FunctionEnd sqrt>

1506:
old  <	; PushFloat integral>
new  <>

1507:
old  <	fld qword [rbp + 48]>
new  <section .text>

1509:
old  < modf$29:>
new  < modf:>

1510:
old  <	; DecreaseStack>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1512:
old  < modf$30:>
new  < modf$1:>

1513:
old  <	; Goto 33>
new  <	; PushFloat x>

1514:
old  <	jmp modf$33>
new  <	fld qword [rbp + 24]>

1516:
old  < modf$31:>
new  < modf$2:>

1517:
old  <	; PushFloat integral>
new  <	; Parameter double x 64>

1518:
old  <	fld qword [rbp + 48]>
new  <	fstp qword [rbp + 64]>

1520:
old  < modf$32:>
new  < modf$3:>

1521:
old  <	; UnarySubtract Â£temporary502 integral>
new  <	; Call fabs 40 0>

1522:
old  <	fchs>
new  <	mov qword [rbp + 40], modf$4>

1523:
old  <>
new  <	mov [rbp + 48], rbp>

1524:
old  < modf$33:>
new  <	add rbp, 40>

1525:
old  <	; Return Â£temporary503>
new  <	jmp fabs>

1526:
old  <	mov rax, [rbp]>
new  <>

1527:
old  <	mov rdi, [rbp + 16]>
new  < modf$4:>

1528:
old  <	mov rbp, [rbp + 8]>
new  <	; PostCall 40>

1529:
old  <	jmp rax>
new  <>

1530:
old  <>
new  < modf$5:>

1531:
old  < modf$34:>
new  <	; GetReturnValue Â£temporary495>

1532:
old  <	; FunctionEnd modf>
new  <>

1533:
old  <>
new  < modf$6:>

1534:
old  <section .text>
new  <	; PopFloat abs_x>

1535:
old  <>
new  <	fstp qword [rbp + 40]>

1536:
old  < fmod:>
new  <>

1537:
old  <	; PushFloat y>
new  < modf$7:>

1538:
old  <	fld qword [rbp + 32]>
new  <	; PushFloat abs_x>

1539:
old  <>
new  <	fld qword [rbp + 40]>

1540:
old  < fmod$1:>
new  <>

1541:
old  <	; PushFloat 0>
new  < modf$8:>

1542:
old  <	fldz>
new  <	; FloatingToIntegral Â£temporary496 abs_x>

1543:
old  <>
new  <	fistp qword [container8bytes#]>

1544:
old  < fmod$2:>
new  <	mov rax, [container8bytes#]>

1545:
old  <	; Equal 27 y 0>
new  <>

1546:
old  <	fcompp>
new  < modf$9:>

1547:
old  <	fstsw ax>
new  <	; IntegralToFloating Â£temporary497 Â£temporary496>

1548:
old  <	sahf>
new  <	mov [container8bytes#], rax>

1549:
old  <	je fmod$27>
new  <	fild qword [container8bytes#]>

1551:
old  < fmod$3:>
new  < modf$10:>

1552:
old  <	; PushFloat x>
new  <	; PopFloat integral>

1553:
old  <	fld qword [rbp + 24]>
new  <	fstp qword [rbp + 48]>

1555:
old  < fmod$4:>
new  < modf$11:>

1556:
old  <	; PushFloat y>
new  <	; PushFloat abs_x>

1557:
old  <	fld qword [rbp + 32]>
new  <	fld qword [rbp + 40]>

1559:
old  < fmod$5:>
new  < modf$12:>

1560:
old  <	; SignedDivide Â£temporary506 x y>
new  <	; PushFloat integral>

1561:
old  <	fdiv>
new  <	fld qword [rbp + 48]>

1563:
old  < fmod$6:>
new  < modf$13:>

1564:
old  <	; PopFloat quotient>
new  <	; BinarySubtract Â£temporary498 abs_x integral>

1565:
old  <	fstp qword [rbp + 40]>
new  <	fsub>

1567:
old  < fmod$7:>
new  < modf$14:>

1568:
old  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; PopFloat fractional>

1569:
old  <>
new  <	fstp qword [rbp + 56]>

1570:
old  < fmod$8:>
new  <>

1571:
old  <	; PushFloat quotient>
new  < modf$15:>

1572:
old  <	fld qword [rbp + 40]>
new  <	; Equal 26 p 0>

1573:
old  <>
new  <	cmp qword [rbp + 32], 0>

1574:
old  < fmod$9:>
new  <	je modf$26>

1575:
old  <	; PushFloat quotient>
new  <>

1576:
old  <	fld qword [rbp + 40]>
new  < modf$16:>

1577:
old  <>
new  <	; Dereference Â£temporary500 -> p p 0>

1578:
old  < fmod$10:>
new  <	mov rsi, [rbp + 32]>

1579:
old  <	; FloatingToIntegral Â£temporary507 quotient>
new  <>

1580:
old  <	fistp qword [container8bytes#]>
new  < modf$17:>

1581:
old  <	mov rax, [container8bytes#]>
new  <	; PushFloat x>

1582:
old  <>
new  <	fld qword [rbp + 24]>

1583:
old  < fmod$11:>
new  <>

1584:
old  <	; IntegralToFloating Â£temporary508 Â£temporary507>
new  < modf$18:>

1585:
old  <	mov [container8bytes#], rax>
new  <	; PushFloat 0>

1586:
old  <	fild qword [container8bytes#]>
new  <	fldz>

1588:
old  < fmod$12:>
new  < modf$19:>

1589:
old  <	; BinarySubtract Â£temporary509 quotient Â£temporary508>
new  <	; SignedLessThanEqual 23 x 0>

1590:
old  <	fsub>
new  <	fcompp>

1591:
old  <>
new  <	fstsw ax>

1592:
old  < fmod$13:>
new  <	sahf>

1593:
old  <	; Parameter double Â£temporary509 72>
new  <	jae modf$23>

1594:
old  <	fstp qword [rbp + 72]>
new  <>

1595:
old  <>
new  < modf$20:>

1596:
old  < fmod$14:>
new  <	; PushFloat integral>

1597:
old  <	; Call fabs 48 0>
new  <	fld qword [rbp + 48]>

1598:
old  <	mov qword [rbp + 48], fmod$15>
new  <>

1599:
old  <	mov [rbp + 56], rbp>
new  < modf$21:>

1600:
old  <	add rbp, 48>
new  <	; DecreaseStack>

1601:
old  <	jmp fabs>
new  <>

1602:
old  <>
new  < modf$22:>

1603:
old  < fmod$15:>
new  <	; Goto 25>

1604:
old  <	; PostCall 48>
new  <	jmp modf$25>

1606:
old  < fmod$16:>
new  < modf$23:>

1607:
old  <	; GetReturnValue Â£temporary510>
new  <	; PushFloat integral>

1608:
old  <>
new  <	fld qword [rbp + 48]>

1609:
old  < fmod$17:>
new  <>

1610:
old  <	; PopFloat remainder>
new  < modf$24:>

1611:
old  <	fstp qword [rbp + 48]>
new  <	; UnarySubtract Â£temporary502 integral>

1612:
old  <>
new  <	fchs>

1613:
old  < fmod$18:>
new  <>

1614:
old  <	; PushFloat x>
new  < modf$25:>

1615:
old  <	fld qword [rbp + 24]>
new  <	; PopFloat Â£temporary500 -> p>

1616:
old  <>
new  <	fstp qword [rsi]>

1617:
old  < fmod$19:>
new  <>

1618:
old  <	; PushFloat 0>
new  < modf$26:>

1619:
old  <	fldz>
new  <	; PushFloat x>

1620:
old  <>
new  <	fld qword [rbp + 24]>

1621:
old  < fmod$20:>
new  <>

1622:
old  <	; SignedLessThanEqual 24 x 0>
new  < modf$27:>

1623:
old  <	fcompp>
new  <	; PushFloat 0>

1624:
old  <	fstsw ax>
new  <	fldz>

1625:
old  <	sahf>
new  <>

1626:
old  <	jae fmod$24>
new  < modf$28:>

1627:
old  <>
new  <	; SignedLessThanEqual 32 x 0>

1628:
old  < fmod$21:>
new  <	fcompp>

1629:
old  <	; PushFloat remainder>
new  <	fstsw ax>

1630:
old  <	fld qword [rbp + 48]>
new  <	sahf>

1631:
old  <>
new  <	jae modf$32>

1632:
old  < fmod$22:>
new  <>

1633:
old  <	; DecreaseStack>
new  < modf$29:>

1634:
old  <>
new  <	; PushFloat fractional>

1635:
old  < fmod$23:>
new  <	fld qword [rbp + 56]>

1636:
old  <	; Goto 26>
new  <>

1637:
old  <	jmp fmod$26>
new  < modf$30:>

1638:
old  <>
new  <	; DecreaseStack>

1639:
old  < fmod$24:>
new  <>

1640:
old  <	; PushFloat remainder>
new  < modf$31:>

1641:
old  <	fld qword [rbp + 48]>
new  <	; Goto 34>

1642:
old  <>
new  <	jmp modf$34>

1643:
old  < fmod$25:>
new  <>

1644:
old  <	; UnarySubtract Â£temporary512 remainder>
new  < modf$32:>

1645:
old  <	fchs>
new  <	; PushFloat fractional>

1646:
old  <>
new  <	fld qword [rbp + 56]>

1647:
old  < fmod$26:>
new  <>

1648:
old  <	; Return Â£temporary513>
new  < modf$33:>

1649:
old  <	mov rax, [rbp]>
new  <	; UnarySubtract Â£temporary505 fractional>

1650:
old  <	mov rdi, [rbp + 16]>
new  <	fchs>

1651:
old  <	mov rbp, [rbp + 8]>
new  <>

1652:
old  <	jmp rax>
new  < modf$34:>

1653:
old  <>
new  <	; Return Â£temporary506>

1654:
old  < fmod$27:>
new  <	mov rax, [rbp]>

1655:
old  <	; Assign errno 6>
new  <	mov rdi, [rbp + 16]>

1656:
old  <	mov dword [errno], 6>
new  <	mov rbp, [rbp + 8]>

1657:
old  <>
new  <	jmp rax>

1658:
old  < fmod$28:>
new  <>

1659:
old  <	; PushFloat 0>
new  < modf$35:>

1660:
old  <	fldz>
new  <	; FunctionEnd modf>

1662:
old  < fmod$29:>
new  <section .text>

1663:
old  <	; Return 0>
new  <>

1664:
old  <	mov rax, [rbp]>
new  < fmod:>

1665:
old  <	mov rdi, [rbp + 16]>
new  <	; PushFloat y>

1666:
old  <	mov rbp, [rbp + 8]>
new  <	fld qword [rbp + 32]>

1667:
old  <	jmp rax>
new  <>

1668:
old  <>
new  < fmod$1:>

1669:
old  < fmod$30:>
new  <	; PushFloat 0>

1670:
old  <	; FunctionEnd fmod>
new  <	fldz>

1672:
old  <section .data>
new  < fmod$2:>

1673:
old  <>
new  <	; Equal 27 y 0>

1674:
old  <float8$6.2831853071795864769252866#:>
new  <	fcompp>

1675:
old  <	; Initializer Double 6.2831853071795864769252866>
new  <	fstsw ax>

1676:
old  <	dq 6.2831853071795864769252866>
new  <	sahf>

1677:
old  <>
new  <	je fmod$27>

1678:
old  <section .data>
new  <>

1679:
old  <>
new  < fmod$3:>

1680:
old  <float8$minus1#:>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1681:
old  <	; Initializer Double -1>
new  <>

1682:
old  <	dq -1.0>
new  < fmod$4:>

1683:
old  <>
new  <	; PushFloat x>

1684:
old  <section .text>
new  <	fld qword [rbp + 24]>

1686:
old  < sin:>
new  < fmod$5:>

1687:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; PushFloat y>

1688:
old  <>
new  <	fld qword [rbp + 32]>

1689:
old  < sin$1:>
new  <>

1690:
old  <	; PushFloat x>
new  < fmod$6:>

1691:
old  <	fld qword [rbp + 24]>
new  <	; PushFloat x>

1692:
old  <>
new  <	fld qword [rbp + 24]>

1693:
old  < sin$2:>
new  <>

1694:
old  <	; Parameter double x 56>
new  < fmod$7:>

1695:
old  <	fstp qword [rbp + 56]>
new  <	; PushFloat y>

1696:
old  <>
new  <	fld qword [rbp + 32]>

1697:
old  < sin$3:>
new  <>

1698:
old  <	; Call fabs 32 0>
new  < fmod$8:>

1699:
old  <	mov qword [rbp + 32], sin$4>
new  <	; SignedDivide Â£temporary509 x y>

1700:
old  <	mov [rbp + 40], rbp>
new  <	fdiv>

1701:
old  <	add rbp, 32>
new  <>

1702:
old  <	jmp fabs>
new  < fmod$9:>

1703:
old  <>
new  <	; FloatingToIntegral Â£temporary510 Â£temporary509>

1704:
old  < sin$4:>
new  <	fistp dword [container4bytes#]>

1705:
old  <	; PostCall 32>
new  <	mov eax, [container4bytes#]>

1707:
old  < sin$5:>
new  < fmod$10:>

1708:
old  <	; GetReturnValue Â£temporary515>
new  <	; IntegralToFloating Â£temporary511 Â£temporary510>

1709:
old  <>
new  <	mov [container4bytes#], eax>

1710:
old  < sin$6:>
new  <	fild dword [container4bytes#]>

1711:
old  <	; PushFloat 6.2831853071795864769252866>
new  <>

1712:
old  <	fld qword [float8$6.2831853071795864769252866#]>
new  < fmod$11:>

1713:
old  <>
new  <	; SignedMultiply Â£temporary512 y Â£temporary511>

1714:
old  < sin$7:>
new  <	fmul>

1715:
old  <	; SignedLessThanEqual 17 Â£temporary515 6.2831853071795864769252866>
new  <>

1716:
old  <	fcompp>
new  < fmod$12:>

1717:
old  <	fstsw ax>
new  <	; BinarySubtract Â£temporary513 x Â£temporary512>

1718:
old  <	sahf>
new  <	fsub>

1719:
old  <	jae sin$17>
new  <>

1720:
old  <>
new  < fmod$13:>

1721:
old  < sin$8:>
new  <	; Parameter double Â£temporary513 64>

1722:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	fstp qword [rbp + 64]>

1724:
old  < sin$9:>
new  < fmod$14:>

1725:
old  <	; PushFloat x>
new  <	; Call fabs 40 0>

1726:
old  <	fld qword [rbp + 24]>
new  <	mov qword [rbp + 40], fmod$15>

1727:
old  <>
new  <	mov [rbp + 48], rbp>

1728:
old  < sin$10:>
new  <	add rbp, 40>

1729:
old  <	; Parameter double x 56>
new  <	jmp fabs>

1730:
old  <	fstp qword [rbp + 56]>
new  <>

1731:
old  <>
new  < fmod$15:>

1732:
old  < sin$11:>
new  <	; PostCall 40>

1733:
old  <	; PushFloat 6.2831853071795864769252866>
new  <>

1734:
old  <	fld qword [float8$6.2831853071795864769252866#]>
new  < fmod$16:>

1735:
old  <>
new  <	; GetReturnValue Â£temporary514>

1736:
old  < sin$12:>
new  <>

1737:
old  <	; Parameter double 6.2831853071795864769252866 64>
new  < fmod$17:>

1738:
old  <	fstp qword [rbp + 64]>
new  <	; PopFloat remainder>

1739:
old  <>
new  <	fstp qword [rbp + 40]>

1740:
old  < sin$13:>
new  <>

1741:
old  <	; Call fmod 32 0>
new  < fmod$18:>

1742:
old  <	mov qword [rbp + 32], sin$14>
new  <	; PushFloat x>

1743:
old  <	mov [rbp + 40], rbp>
new  <	fld qword [rbp + 24]>

1744:
old  <	add rbp, 32>
new  <>

1745:
old  <	jmp fmod>
new  < fmod$19:>

1746:
old  <>
new  <	; PushFloat 0>

1747:
old  < sin$14:>
new  <	fldz>

1748:
old  <	; PostCall 32>
new  <>

1749:
old  <>
new  < fmod$20:>

1750:
old  < sin$15:>
new  <	; SignedLessThanEqual 24 x 0>

1751:
old  <	; GetReturnValue Â£temporary517>
new  <	fcompp>

1752:
old  <>
new  <	fstsw ax>

1753:
old  < sin$16:>
new  <	sahf>

1754:
old  <	; PopFloat x>
new  <	jae fmod$24>

1755:
old  <	fstp qword [rbp + 24]>
new  <>

1756:
old  <>
new  < fmod$21:>

1757:
old  < sin$17:>
new  <	; PushFloat remainder>

1758:
old  <	; PushFloat 0>
new  <	fld qword [rbp + 40]>

1759:
old  <	fldz>
new  <>

1760:
old  <>
new  < fmod$22:>

1761:
old  < sin$18:>
new  <	; DecreaseStack>

1762:
old  <	; PopFloat i>
new  <>

1763:
old  <	fstp qword [rbp + 32]>
new  < fmod$23:>

1764:
old  <>
new  <	; Goto 26>

1765:
old  < sin$19:>
new  <	jmp fmod$26>

1766:
old  <	; PushFloat 0>
new  <>

1767:
old  <	fldz>
new  < fmod$24:>

1768:
old  <>
new  <	; PushFloat remainder>

1769:
old  < sin$20:>
new  <	fld qword [rbp + 40]>

1770:
old  <	; PopFloat sum>
new  <>

1771:
old  <	fstp qword [rbp + 48]>
new  < fmod$25:>

1772:
old  <>
new  <	; UnarySubtract Â£temporary516 remainder>

1773:
old  < sin$21:>
new  <	fchs>

1774:
old  <	; PushFloat 1>
new  <>

1775:
old  <	fld1>
new  < fmod$26:>

1776:
old  <>
new  <	; Return Â£temporary517>

1777:
old  < sin$22:>
new  <	mov rax, [rbp]>

1778:
old  <	; PopFloat sign>
new  <	mov rdi, [rbp + 16]>

1779:
old  <	fstp qword [rbp + 56]>
new  <	mov rbp, [rbp + 8]>

1780:
old  <>
new  <	jmp rax>

1781:
old  < sin$23:>
new  <>

1782:
old  <	; PushFloat x>
new  < fmod$27:>

1783:
old  <	fld qword [rbp + 24]>
new  <	; Assign errno 6>

1784:
old  <>
new  <	mov dword [errno], 6>

1785:
old  < sin$24:>
new  <>

1786:
old  <	; PopFloat power>
new  < fmod$28:>

1787:
old  <	fstp qword [rbp + 64]>
new  <	; PushFloat 0>

1788:
old  <>
new  <	fldz>

1789:
old  < sin$25:>
new  <>

1790:
old  <	; PushFloat 1>
new  < fmod$29:>

1791:
old  <	fld1>
new  <	; Return 0>

1792:
old  <>
new  <	mov rax, [rbp]>

1793:
old  < sin$26:>
new  <	mov rdi, [rbp + 16]>

1794:
old  <	; PopFloat faculty>
new  <	mov rbp, [rbp + 8]>

1795:
old  <	fstp qword [rbp + 72]>
new  <	jmp rax>

1797:
old  < sin$27:>
new  < fmod$30:>

1798:
old  <	; PushFloat sign>
new  <	; FunctionEnd fmod>

1799:
old  <	fld qword [rbp + 56]>
new  <>

1800:
old  <>
new  <section .data>

1801:
old  < sin$28:>
new  <>

1802:
old  <	; PushFloat power>
new  <float8$6.2831853071795864769252866#:>

1803:
old  <	fld qword [rbp + 64]>
new  <	; Initializer Double 6.2831853071795864769252866>

1804:
old  <>
new  <	dq 6.2831853071795864769252866>

1805:
old  < sin$29:>
new  <>

1806:
old  <	; SignedMultiply Â£temporary518 sign power>
new  <section .data>

1807:
old  <	fmul>
new  <>

1808:
old  <>
new  <float8$minus1#:>

1809:
old  < sin$30:>
new  <	; Initializer Double -1>

1810:
old  <	; PushFloat faculty>
new  <	dq -1.0>

1811:
old  <	fld qword [rbp + 72]>
new  <>

1812:
old  <>
new  <section .text>

1813:
old  < sin$31:>
new  <>

1814:
old  <	; SignedDivide Â£temporary519 Â£temporary518 faculty>
new  < sin:>

1815:
old  <	fdiv>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1817:
old  < sin$32:>
new  < sin$1:>

1818:
old  <	; PopFloat term>
new  <	; PushFloat x>

1819:
old  <	fstp qword [rbp + 40]>
new  <	fld qword [rbp + 24]>

1821:
old  < sin$33:>
new  < sin$2:>

1822:
old  <	; PushFloat sum>
new  <	; Parameter double x 56>

1823:
old  <	fld qword [rbp + 48]>
new  <	fstp qword [rbp + 56]>

1825:
old  < sin$34:>
new  < sin$3:>

1826:
old  <	; PushFloat term>
new  <	; Call fabs 32 0>

1827:
old  <	fld qword [rbp + 40]>
new  <	mov qword [rbp + 32], sin$4>

1828:
old  <>
new  <	mov [rbp + 40], rbp>

1829:
old  < sin$35:>
new  <	add rbp, 32>

1830:
old  <	; BinaryAdd Â£temporary520 sum term>
new  <	jmp fabs>

1831:
old  <	fadd>
new  <>

1832:
old  <>
new  < sin$4:>

1833:
old  < sin$36:>
new  <	; PostCall 32>

1834:
old  <	; PopFloat sum>
new  <>

1835:
old  <	fstp qword [rbp + 48]>
new  < sin$5:>

1836:
old  <>
new  <	; GetReturnValue Â£temporary519>

1837:
old  < sin$37:>
new  <>

1838:
old  <	; PushFloat sign>
new  < sin$6:>

1839:
old  <	fld qword [rbp + 56]>
new  <	; PushFloat 6.2831853071795864769252866>

1840:
old  <>
new  <	fld qword [float8$6.2831853071795864769252866#]>

1841:
old  < sin$38:>
new  <>

1842:
old  <	; PushFloat -1>
new  < sin$7:>

1843:
old  <	fld qword [float8$minus1#]>
new  <	; SignedLessThanEqual 17 Â£temporary519 6.2831853071795864769252866>

1844:
old  <>
new  <	fcompp>

1845:
old  < sin$39:>
new  <	fstsw ax>

1846:
old  <	; SignedMultiply Â£temporary521 sign -1>
new  <	sahf>

1847:
old  <	fmul>
new  <	jae sin$17>

1849:
old  < sin$40:>
new  < sin$8:>

1850:
old  <	; PopFloat sign>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1851:
old  <	fstp qword [rbp + 56]>
new  <>

1852:
old  <>
new  < sin$9:>

1853:
old  < sin$41:>
new  <	; PushFloat x>

1854:
old  <	; PushFloat power>
new  <	fld qword [rbp + 24]>

1855:
old  <	fld qword [rbp + 64]>
new  <>

1856:
old  <>
new  < sin$10:>

1857:
old  < sin$42:>
new  <	; Parameter double x 56>

1858:
old  <	; PushFloat x>
new  <	fstp qword [rbp + 56]>

1859:
old  <	fld qword [rbp + 24]>
new  <>

1860:
old  <>
new  < sin$11:>

1861:
old  < sin$43:>
new  <	; PushFloat 6.2831853071795864769252866>

1862:
old  <	; PushFloat x>
new  <	fld qword [float8$6.2831853071795864769252866#]>

1863:
old  <	fld qword [rbp + 24]>
new  <>

1864:
old  <>
new  < sin$12:>

1865:
old  < sin$44:>
new  <	; Parameter double 6.2831853071795864769252866 64>

1866:
old  <	; SignedMultiply Â£temporary522 x x>
new  <	fstp qword [rbp + 64]>

1867:
old  <	fmul>
new  <>

1868:
old  <>
new  < sin$13:>

1869:
old  < sin$45:>
new  <	; Call fmod 32 0>

1870:
old  <	; SignedMultiply Â£temporary523 power Â£temporary522>
new  <	mov qword [rbp + 32], sin$14>

1871:
old  <	fmul>
new  <	mov [rbp + 40], rbp>

1872:
old  <>
new  <	add rbp, 32>

1873:
old  < sin$46:>
new  <	jmp fmod>

1874:
old  <	; PopFloat power>
new  <>

1875:
old  <	fstp qword [rbp + 64]>
new  < sin$14:>

1876:
old  <>
new  <	; PostCall 32>

1877:
old  < sin$47:>
new  <>

1878:
old  <	; PushFloat faculty>
new  < sin$15:>

1879:
old  <	fld qword [rbp + 72]>
new  <	; GetReturnValue Â£temporary521>

1881:
old  < sin$48:>
new  < sin$16:>

1882:
old  <	; PushFloat i>
new  <	; PopFloat x>

1883:
old  <	fld qword [rbp + 32]>
new  <	fstp qword [rbp + 24]>

1885:
old  < sin$49:>
new  < sin$17:>

1886:
old  <	; PushOne>
new  <	; PushFloat 1>

1889:
old  < sin$50:>
new  < sin$18:>

1890:
old  <	; BinaryAdd i i 1>
new  <	; PopFloat index>

1891:
old  <	fadd>
new  <	fstp qword [rbp + 32]>

1893:
old  < sin$51:>
new  < sin$19:>

1894:
old  <	; TopFloat i>
new  <	; PushFloat 0>

1895:
old  <	fst qword [rbp + 32]>
new  <	fldz>

1897:
old  < sin$52:>
new  < sin$20:>

1898:
old  <	; PushFloat i>
new  <	; PopFloat sum>

1899:
old  <	fld qword [rbp + 32]>
new  <	fstp qword [rbp + 48]>

1901:
old  < sin$53:>
new  < sin$21:>

1902:
old  <	; PushOne>
new  <	; PushFloat 1>

1905:
old  < sin$54:>
new  < sin$22:>

1906:
old  <	; BinaryAdd i i 1>
new  <	; PopFloat sign>

1907:
old  <	fadd>
new  <	fstp qword [rbp + 56]>

1909:
old  < sin$55:>
new  < sin$23:>

1910:
old  <	; TopFloat i>
new  <	; PushFloat x>

1911:
old  <	fst qword [rbp + 32]>
new  <	fld qword [rbp + 24]>

1913:
old  < sin$56:>
new  < sin$24:>

1914:
old  <	; SignedMultiply Â£temporary526 Â£temporary524 Â£temporary525>
new  <	; PopFloat power>

1915:
old  <	fmul>
new  <	fstp qword [rbp + 64]>

1917:
old  < sin$57:>
new  < sin$25:>

1918:
old  <	; SignedMultiply Â£temporary527 faculty Â£temporary526>
new  <	; PushFloat 1>

1919:
old  <	fmul>
new  <	fld1>

1921:
old  < sin$58:>
new  < sin$26:>

1925:
old  < sin$59:>
new  < sin$27:>

1926:
old  <	; CheckTrackMapFloatStack>
new  <	; PushFloat sign>

1927:
old  <>
new  <	fld qword [rbp + 56]>

1928:
old  < sin$60:>
new  <>

1929:
old  <	; PreCall 80 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < sin$28:>

1930:
old  <>
new  <	; PushFloat power>

1931:
old  < sin$61:>
new  <	fld qword [rbp + 64]>

1932:
old  <	; PushFloat term>
new  <>

1933:
old  <	fld qword [rbp + 40]>
new  < sin$29:>

1934:
old  <>
new  <	; SignedMultiply Â£temporary522 sign power>

1935:
old  < sin$62:>
new  <	fmul>

1936:
old  <	; Parameter double term 104>
new  <>

1937:
old  <	fstp qword [rbp + 104]>
new  < sin$30:>

1938:
old  <>
new  <	; PushFloat faculty>

1939:
old  < sin$63:>
new  <	fld qword [rbp + 72]>

1940:
old  <	; Call fabs 80 0>
new  <>

1941:
old  <	mov qword [rbp + 80], sin$64>
new  < sin$31:>

1942:
old  <	mov [rbp + 88], rbp>
new  <	; SignedDivide Â£temporary523 Â£temporary522 faculty>

1943:
old  <	add rbp, 80>
new  <	fdiv>

1944:
old  <	jmp fabs>
new  <>

1945:
old  <>
new  < sin$32:>

1946:
old  < sin$64:>
new  <	; PopFloat term>

1947:
old  <	; PostCall 80>
new  <	fstp qword [rbp + 40]>

1949:
old  < sin$65:>
new  < sin$33:>

1950:
old  <	; GetReturnValue Â£temporary528>
new  <	; PushFloat sum>

1951:
old  <>
new  <	fld qword [rbp + 48]>

1952:
old  < sin$66:>
new  <>

1953:
old  <	; PushFloat 0.000000001>
new  < sin$34:>

1954:
old  <	fld qword [float8$0.000000001#]>
new  <	; PushFloat term>

1955:
old  <>
new  <	fld qword [rbp + 40]>

1956:
old  < sin$67:>
new  <>

1957:
old  <	; SignedGreaterThanEqual 27 Â£temporary528 0.000000001>
new  < sin$35:>

1958:
old  <	fcompp>
new  <	; BinaryAdd Â£temporary524 sum term>

1959:
old  <	fstsw ax>
new  <	fadd>

1960:
old  <	sahf>
new  <>

1961:
old  <	jbe sin$27>
new  < sin$36:>

1962:
old  <>
new  <	; PopFloat sum>

1963:
old  < sin$68:>
new  <	fstp qword [rbp + 48]>

1964:
old  <	; PushFloat sum>
new  <>

1965:
old  <	fld qword [rbp + 48]>
new  < sin$37:>

1966:
old  <>
new  <	; PushFloat sign>

1967:
old  < sin$69:>
new  <	fld qword [rbp + 56]>

1968:
old  <	; Return sum>
new  <>

1969:
old  <	mov rax, [rbp]>
new  < sin$38:>

1970:
old  <	mov rdi, [rbp + 16]>
new  <	; PushFloat -1>

1971:
old  <	mov rbp, [rbp + 8]>
new  <	fld qword [float8$minus1#]>

1972:
old  <	jmp rax>
new  <>

1973:
old  <>
new  < sin$39:>

1974:
old  < sin$70:>
new  <	; SignedMultiply Â£temporary525 sign -1>

1975:
old  <	; FunctionEnd sin>
new  <	fmul>

1977:
old  <section .text>
new  < sin$40:>

1978:
old  <>
new  <	; PopFloat sign>

1979:
old  < cos:>
new  <	fstp qword [rbp + 56]>

1980:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1981:
old  <>
new  < sin$41:>

1982:
old  < cos$1:>
new  <	; PushFloat power>

1983:
old  <	; PushFloat x>
new  <	fld qword [rbp + 64]>

1984:
old  <	fld qword [rbp + 24]>
new  <>

1985:
old  <>
new  < sin$42:>

1986:
old  < cos$2:>
new  <	; PushFloat x>

1987:
old  <	; Parameter double x 56>
new  <	fld qword [rbp + 24]>

1988:
old  <	fstp qword [rbp + 56]>
new  <>

1989:
old  <>
new  < sin$43:>

1990:
old  < cos$3:>
new  <	; PushFloat x>

1991:
old  <	; Call fabs 32 0>
new  <	fld qword [rbp + 24]>

1992:
old  <	mov qword [rbp + 32], cos$4>
new  <>

1993:
old  <	mov [rbp + 40], rbp>
new  < sin$44:>

1994:
old  <	add rbp, 32>
new  <	; SignedMultiply Â£temporary526 x x>

1995:
old  <	jmp fabs>
new  <	fmul>

1997:
old  < cos$4:>
new  < sin$45:>

1998:
old  <	; PostCall 32>
new  <	; SignedMultiply Â£temporary527 power Â£temporary526>

1999:
old  <>
new  <	fmul>

2000:
old  < cos$5:>
new  <>

2001:
old  <	; GetReturnValue Â£temporary534>
new  < sin$46:>

2002:
old  <>
new  <	; PopFloat power>

2003:
old  < cos$6:>
new  <	fstp qword [rbp + 64]>

2004:
old  <	; PushFloat 6.2831853071795864769252866>
new  <>

2005:
old  <	fld qword [float8$6.2831853071795864769252866#]>
new  < sin$47:>

2006:
old  <>
new  <	; PushFloat faculty>

2007:
old  < cos$7:>
new  <	fld qword [rbp + 72]>

2008:
old  <	; SignedLessThanEqual 17 Â£temporary534 6.2831853071795864769252866>
new  <>

2009:
old  <	fcompp>
new  < sin$48:>

2010:
old  <	fstsw ax>
new  <	; PushFloat index>

2011:
old  <	sahf>
new  <	fld qword [rbp + 32]>

2012:
old  <	jae cos$17>
new  <>

2013:
old  <>
new  < sin$49:>

2014:
old  < cos$8:>
new  <	; PushOne>

2015:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	fld1>

2017:
old  < cos$9:>
new  < sin$50:>

2018:
old  <	; PushFloat x>
new  <	; BinaryAdd index index 1>

2019:
old  <	fld qword [rbp + 24]>
new  <	fadd>

2021:
old  < cos$10:>
new  < sin$51:>

2022:
old  <	; Parameter double x 56>
new  <	; TopFloat index>

2023:
old  <	fstp qword [rbp + 56]>
new  <	fst qword [rbp + 32]>

2025:
old  < cos$11:>
new  < sin$52:>

2026:
old  <	; PushFloat 6.2831853071795864769252866>
new  <	; PushFloat index>

2027:
old  <	fld qword [float8$6.2831853071795864769252866#]>
new  <	fld qword [rbp + 32]>

2029:
old  < cos$12:>
new  < sin$53:>

2030:
old  <	; Parameter double 6.2831853071795864769252866 64>
new  <	; PushOne>

2031:
old  <	fstp qword [rbp + 64]>
new  <	fld1>

2033:
old  < cos$13:>
new  < sin$54:>

2034:
old  <	; Call fmod 32 0>
new  <	; BinaryAdd index index 1>

2035:
old  <	mov qword [rbp + 32], cos$14>
new  <	fadd>

2036:
old  <	mov [rbp + 40], rbp>
new  <>

2037:
old  <	add rbp, 32>
new  < sin$55:>

2038:
old  <	jmp fmod>
new  <	; TopFloat index>

2039:
old  <>
new  <	fst qword [rbp + 32]>

2040:
old  < cos$14:>
new  <>

2041:
old  <	; PostCall 32>
new  < sin$56:>

2042:
old  <>
new  <	; SignedMultiply Â£temporary530 Â£temporary528 Â£temporary529>

2043:
old  < cos$15:>
new  <	fmul>

2044:
old  <	; GetReturnValue Â£temporary536>
new  <>

2045:
old  <>
new  < sin$57:>

2046:
old  < cos$16:>
new  <	; SignedMultiply Â£temporary531 faculty Â£temporary530>

2047:
old  <	; PopFloat x>
new  <	fmul>

2048:
old  <	fstp qword [rbp + 24]>
new  <>

2049:
old  <>
new  < sin$58:>

2050:
old  < cos$17:>
new  <	; PopFloat faculty>

2051:
old  <	; PushFloat 0>
new  <	fstp qword [rbp + 72]>

2052:
old  <	fldz>
new  <>

2053:
old  <>
new  < sin$59:>

2054:
old  < cos$18:>
new  <	; CheckTrackMapFloatStack>

2055:
old  <	; PopFloat i>
new  <>

2056:
old  <	fstp qword [rbp + 32]>
new  < sin$60:>

2057:
old  <>
new  <	; PreCall 80 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2058:
old  < cos$19:>
new  <>

2059:
old  <	; PushFloat 0>
new  < sin$61:>

2060:
old  <	fldz>
new  <	; PushFloat term>

2061:
old  <>
new  <	fld qword [rbp + 40]>

2062:
old  < cos$20:>
new  <>

2063:
old  <	; PopFloat sum>
new  < sin$62:>

2064:
old  <	fstp qword [rbp + 48]>
new  <	; Parameter double term 104>

2065:
old  <>
new  <	fstp qword [rbp + 104]>

2066:
old  < cos$21:>
new  <>

2067:
old  <	; PushFloat 1>
new  < sin$63:>

2068:
old  <	fld1>
new  <	; Call fabs 80 0>

2069:
old  <>
new  <	mov qword [rbp + 80], sin$64>

2070:
old  < cos$22:>
new  <	mov [rbp + 88], rbp>

2071:
old  <	; PopFloat sign>
new  <	add rbp, 80>

2072:
old  <	fstp qword [rbp + 56]>
new  <	jmp fabs>

2074:
old  < cos$23:>
new  < sin$64:>

2075:
old  <	; PushFloat 1>
new  <	; PostCall 80>

2076:
old  <	fld1>
new  <>

2077:
old  <>
new  < sin$65:>

2078:
old  < cos$24:>
new  <	; GetReturnValue Â£temporary532>

2079:
old  <	; PopFloat power>
new  <>

2080:
old  <	fstp qword [rbp + 64]>
new  < sin$66:>

2081:
old  <>
new  <	; PushFloat 0.000000001>

2082:
old  < cos$25:>
new  <	fld qword [float8$0.000000001#]>

2083:
old  <	; PushFloat 1>
new  <>

2084:
old  <	fld1>
new  < sin$67:>

2085:
old  <>
new  <	; SignedGreaterThanEqual 27 Â£temporary532 0.000000001>

2086:
old  < cos$26:>
new  <	fcompp>

2087:
old  <	; PopFloat faculty>
new  <	fstsw ax>

2088:
old  <	fstp qword [rbp + 72]>
new  <	sahf>

2089:
old  <>
new  <	jbe sin$27>

2090:
old  < cos$27:>
new  <>

2091:
old  <	; PushFloat sign>
new  < sin$68:>

2092:
old  <	fld qword [rbp + 56]>
new  <	; PushFloat sum>

2093:
old  <>
new  <	fld qword [rbp + 48]>

2094:
old  < cos$28:>
new  <>

2095:
old  <	; PushFloat power>
new  < sin$69:>

2096:
old  <	fld qword [rbp + 64]>
new  <	; Return sum>

2097:
old  <>
new  <	mov rax, [rbp]>

2098:
old  < cos$29:>
new  <	mov rdi, [rbp + 16]>

2099:
old  <	; SignedMultiply Â£temporary537 sign power>
new  <	mov rbp, [rbp + 8]>

2100:
old  <	fmul>
new  <	jmp rax>

2102:
old  < cos$30:>
new  < sin$70:>

2103:
old  <	; PushFloat faculty>
new  <	; FunctionEnd sin>

2104:
old  <	fld qword [rbp + 72]>
new  <>

2105:
old  <>
new  <section .text>

2106:
old  < cos$31:>
new  <>

2107:
old  <	; SignedDivide Â£temporary538 Â£temporary537 faculty>
new  < cos:>

2108:
old  <	fdiv>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2110:
old  < cos$32:>
new  < cos$1:>

2111:
old  <	; PopFloat term>
new  <	; PushFloat x>

2112:
old  <	fstp qword [rbp + 40]>
new  <	fld qword [rbp + 24]>

2114:
old  < cos$33:>
new  < cos$2:>

2115:
old  <	; PushFloat sum>
new  <	; Parameter double x 56>

2116:
old  <	fld qword [rbp + 48]>
new  <	fstp qword [rbp + 56]>

2118:
old  < cos$34:>
new  < cos$3:>

2119:
old  <	; PushFloat term>
new  <	; Call fabs 32 0>

2120:
old  <	fld qword [rbp + 40]>
new  <	mov qword [rbp + 32], cos$4>

2121:
old  <>
new  <	mov [rbp + 40], rbp>

2122:
old  < cos$35:>
new  <	add rbp, 32>

2123:
old  <	; BinaryAdd Â£temporary539 sum term>
new  <	jmp fabs>

2124:
old  <	fadd>
new  <>

2125:
old  <>
new  < cos$4:>

2126:
old  < cos$36:>
new  <	; PostCall 32>

2127:
old  <	; PopFloat sum>
new  <>

2128:
old  <	fstp qword [rbp + 48]>
new  < cos$5:>

2129:
old  <>
new  <	; GetReturnValue Â£temporary538>

2130:
old  < cos$37:>
new  <>

2131:
old  <	; PushFloat sign>
new  < cos$6:>

2132:
old  <	fld qword [rbp + 56]>
new  <	; PushFloat 6.2831853071795864769252866>

2133:
old  <>
new  <	fld qword [float8$6.2831853071795864769252866#]>

2134:
old  < cos$38:>
new  <>

2135:
old  <	; PushFloat -1>
new  < cos$7:>

2136:
old  <	fld qword [float8$minus1#]>
new  <	; SignedLessThanEqual 17 Â£temporary538 6.2831853071795864769252866>

2137:
old  <>
new  <	fcompp>

2138:
old  < cos$39:>
new  <	fstsw ax>

2139:
old  <	; SignedMultiply Â£temporary540 sign -1>
new  <	sahf>

2140:
old  <	fmul>
new  <	jae cos$17>

2142:
old  < cos$40:>
new  < cos$8:>

2143:
old  <	; PopFloat sign>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2144:
old  <	fstp qword [rbp + 56]>
new  <>

2145:
old  <>
new  < cos$9:>

2146:
old  < cos$41:>
new  <	; PushFloat x>

2147:
old  <	; PushFloat power>
new  <	fld qword [rbp + 24]>

2148:
old  <	fld qword [rbp + 64]>
new  <>

2149:
old  <>
new  < cos$10:>

2150:
old  < cos$42:>
new  <	; Parameter double x 56>

2151:
old  <	; PushFloat x>
new  <	fstp qword [rbp + 56]>

2152:
old  <	fld qword [rbp + 24]>
new  <>

2153:
old  <>
new  < cos$11:>

2154:
old  < cos$43:>
new  <	; PushFloat 6.2831853071795864769252866>

2155:
old  <	; PushFloat x>
new  <	fld qword [float8$6.2831853071795864769252866#]>

2156:
old  <	fld qword [rbp + 24]>
new  <>

2157:
old  <>
new  < cos$12:>

2158:
old  < cos$44:>
new  <	; Parameter double 6.2831853071795864769252866 64>

2159:
old  <	; SignedMultiply Â£temporary541 x x>
new  <	fstp qword [rbp + 64]>

2160:
old  <	fmul>
new  <>

2161:
old  <>
new  < cos$13:>

2162:
old  < cos$45:>
new  <	; Call fmod 32 0>

2163:
old  <	; SignedMultiply Â£temporary542 power Â£temporary541>
new  <	mov qword [rbp + 32], cos$14>

2164:
old  <	fmul>
new  <	mov [rbp + 40], rbp>

2165:
old  <>
new  <	add rbp, 32>

2166:
old  < cos$46:>
new  <	jmp fmod>

2167:
old  <	; PopFloat power>
new  <>

2168:
old  <	fstp qword [rbp + 64]>
new  < cos$14:>

2169:
old  <>
new  <	; PostCall 32>

2170:
old  < cos$47:>
new  <>

2171:
old  <	; PushFloat faculty>
new  < cos$15:>

2172:
old  <	fld qword [rbp + 72]>
new  <	; GetReturnValue Â£temporary540>

2174:
old  < cos$48:>
new  < cos$16:>

2175:
old  <	; PushFloat i>
new  <	; PopFloat x>

2176:
old  <	fld qword [rbp + 32]>
new  <	fstp qword [rbp + 24]>

2178:
old  < cos$49:>
new  < cos$17:>

2179:
old  <	; PushOne>
new  <	; PushFloat 0>

2180:
old  <	fld1>
new  <	fldz>

2182:
old  < cos$50:>
new  < cos$18:>

2183:
old  <	; BinaryAdd i i 1>
new  <	; PopFloat index>

2184:
old  <	fadd>
new  <	fstp qword [rbp + 32]>

2186:
old  < cos$51:>
new  < cos$19:>

2187:
old  <	; TopFloat i>
new  <	; PushFloat 0>

2188:
old  <	fst qword [rbp + 32]>
new  <	fldz>

2190:
old  < cos$52:>
new  < cos$20:>

2191:
old  <	; PushFloat i>
new  <	; PopFloat sum>

2192:
old  <	fld qword [rbp + 32]>
new  <	fstp qword [rbp + 48]>

2194:
old  < cos$53:>
new  < cos$21:>

2195:
old  <	; PushOne>
new  <	; PushFloat 1>

2198:
old  < cos$54:>
new  < cos$22:>

2199:
old  <	; BinaryAdd i i 1>
new  <	; PopFloat sign>

2200:
old  <	fadd>
new  <	fstp qword [rbp + 56]>

2202:
old  < cos$55:>
new  < cos$23:>

2203:
old  <	; TopFloat i>
new  <	; PushFloat 1>

2204:
old  <	fst qword [rbp + 32]>
new  <	fld1>

2206:
old  < cos$56:>
new  < cos$24:>

2207:
old  <	; SignedMultiply Â£temporary545 Â£temporary543 Â£temporary544>
new  <	; PopFloat power>

2208:
old  <	fmul>
new  <	fstp qword [rbp + 64]>

2210:
old  < cos$57:>
new  < cos$25:>

2211:
old  <	; SignedMultiply Â£temporary546 faculty Â£temporary545>
new  <	; PushFloat 1>

2212:
old  <	fmul>
new  <	fld1>

2214:
old  < cos$58:>
new  < cos$26:>

2218:
old  < cos$59:>
new  < cos$27:>

2219:
old  <	; CheckTrackMapFloatStack>
new  <	; PushFloat sign>

2220:
old  <>
new  <	fld qword [rbp + 56]>

2221:
old  < cos$60:>
new  <>

2222:
old  <	; PreCall 80 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < cos$28:>

2223:
old  <>
new  <	; PushFloat power>

2224:
old  < cos$61:>
new  <	fld qword [rbp + 64]>

2225:
old  <	; PushFloat term>
new  <>

2226:
old  <	fld qword [rbp + 40]>
new  < cos$29:>

2227:
old  <>
new  <	; SignedMultiply Â£temporary541 sign power>

2228:
old  < cos$62:>
new  <	fmul>

2229:
old  <	; Parameter double term 104>
new  <>

2230:
old  <	fstp qword [rbp + 104]>
new  < cos$30:>

2231:
old  <>
new  <	; PushFloat faculty>

2232:
old  < cos$63:>
new  <	fld qword [rbp + 72]>

2233:
old  <	; Call fabs 80 0>
new  <>

2234:
old  <	mov qword [rbp + 80], cos$64>
new  < cos$31:>

2235:
old  <	mov [rbp + 88], rbp>
new  <	; SignedDivide Â£temporary542 Â£temporary541 faculty>

2236:
old  <	add rbp, 80>
new  <	fdiv>

2237:
old  <	jmp fabs>
new  <>

2238:
old  <>
new  < cos$32:>

2239:
old  < cos$64:>
new  <	; PopFloat term>

2240:
old  <	; PostCall 80>
new  <	fstp qword [rbp + 40]>

2242:
old  < cos$65:>
new  < cos$33:>

2243:
old  <	; GetReturnValue Â£temporary547>
new  <	; PushFloat sum>

2244:
old  <>
new  <	fld qword [rbp + 48]>

2245:
old  < cos$66:>
new  <>

2246:
old  <	; PushFloat 0.000000001>
new  < cos$34:>

2247:
old  <	fld qword [float8$0.000000001#]>
new  <	; PushFloat term>

2248:
old  <>
new  <	fld qword [rbp + 40]>

2249:
old  < cos$67:>
new  <>

2250:
old  <	; SignedGreaterThanEqual 27 Â£temporary547 0.000000001>
new  < cos$35:>

2251:
old  <	fcompp>
new  <	; BinaryAdd Â£temporary543 sum term>

2252:
old  <	fstsw ax>
new  <	fadd>

2253:
old  <	sahf>
new  <>

2254:
old  <	jbe cos$27>
new  < cos$36:>

2255:
old  <>
new  <	; PopFloat sum>

2256:
old  < cos$68:>
new  <	fstp qword [rbp + 48]>

2257:
old  <	; PushFloat sum>
new  <>

2258:
old  <	fld qword [rbp + 48]>
new  < cos$37:>

2259:
old  <>
new  <	; PushFloat sign>

2260:
old  < cos$69:>
new  <	fld qword [rbp + 56]>

2261:
old  <	; Return sum>
new  <>

2262:
old  <	mov rax, [rbp]>
new  < cos$38:>

2263:
old  <	mov rdi, [rbp + 16]>
new  <	; PushFloat -1>

2264:
old  <	mov rbp, [rbp + 8]>
new  <	fld qword [float8$minus1#]>

2265:
old  <	jmp rax>
new  <>

2266:
old  <>
new  < cos$39:>

2267:
old  < cos$70:>
new  <	; SignedMultiply Â£temporary544 sign -1>

2268:
old  <	; FunctionEnd cos>
new  <	fmul>

2270:
old  <section .text>
new  < cos$40:>

2271:
old  <>
new  <	; PopFloat sign>

2272:
old  < tan:>
new  <	fstp qword [rbp + 56]>

2273:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

2274:
old  <>
new  < cos$41:>

2275:
old  < tan$1:>
new  <	; PushFloat power>

2276:
old  <	; PushFloat x>
new  <	fld qword [rbp + 64]>

2277:
old  <	fld qword [rbp + 24]>
new  <>

2278:
old  <>
new  < cos$42:>

2279:
old  < tan$2:>
new  <	; PushFloat x>

2280:
old  <	; Parameter double x 56>
new  <	fld qword [rbp + 24]>

2281:
old  <	fstp qword [rbp + 56]>
new  <>

2282:
old  <>
new  < cos$43:>

2283:
old  < tan$3:>
new  <	; PushFloat x>

2284:
old  <	; Call cos 32 0>
new  <	fld qword [rbp + 24]>

2285:
old  <	mov qword [rbp + 32], tan$4>
new  <>

2286:
old  <	mov [rbp + 40], rbp>
new  < cos$44:>

2287:
old  <	add rbp, 32>
new  <	; SignedMultiply Â£temporary545 x x>

2288:
old  <	jmp cos>
new  <	fmul>

2290:
old  < tan$4:>
new  < cos$45:>

2291:
old  <	; PostCall 32>
new  <	; SignedMultiply Â£temporary546 power Â£temporary545>

2292:
old  <>
new  <	fmul>

2293:
old  < tan$5:>
new  <>

2294:
old  <	; GetReturnValue Â£temporary553>
new  < cos$46:>

2295:
old  <>
new  <	; PopFloat power>

2296:
old  < tan$6:>
new  <	fstp qword [rbp + 64]>

2297:
old  <	; TopFloat cos_x>
new  <>

2298:
old  <	fst qword [rbp + 32]>
new  < cos$47:>

2299:
old  <>
new  <	; PushFloat faculty>

2300:
old  < tan$7:>
new  <	fld qword [rbp + 72]>

2301:
old  <	; PushFloat 0>
new  <>

2302:
old  <	fldz>
new  < cos$48:>

2303:
old  <>
new  <	; PushFloat index>

2304:
old  < tan$8:>
new  <	fld qword [rbp + 32]>

2305:
old  <	; Equal 18 cos_x 0>
new  <>

2306:
old  <	fcompp>
new  < cos$49:>

2307:
old  <	fstsw ax>
new  <	; PushOne>

2308:
old  <	sahf>
new  <	fld1>

2309:
old  <	je tan$18>
new  <>

2310:
old  <>
new  < cos$50:>

2311:
old  < tan$9:>
new  <	; BinaryAdd index index 1>

2312:
old  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	fadd>

2314:
old  < tan$10:>
new  < cos$51:>

2315:
old  <	; PushFloat x>
new  <	; TopFloat index>

2316:
old  <	fld qword [rbp + 24]>
new  <	fst qword [rbp + 32]>

2318:
old  < tan$11:>
new  < cos$52:>

2319:
old  <	; Parameter double x 64>
new  <	; PushFloat index>

2320:
old  <	fstp qword [rbp + 64]>
new  <	fld qword [rbp + 32]>

2322:
old  < tan$12:>
new  < cos$53:>

2323:
old  <	; Call sin 40 0>
new  <	; PushOne>

2324:
old  <	mov qword [rbp + 40], tan$13>
new  <	fld1>

2325:
old  <	mov [rbp + 48], rbp>
new  <>

2326:
old  <	add rbp, 40>
new  < cos$54:>

2327:
old  <	jmp sin>
new  <	; BinaryAdd index index 1>

2328:
old  <>
new  <	fadd>

2329:
old  < tan$13:>
new  <>

2330:
old  <	; PostCall 40>
new  < cos$55:>

2331:
old  <>
new  <	; TopFloat index>

2332:
old  < tan$14:>
new  <	fst qword [rbp + 32]>

2333:
old  <	; GetReturnValue Â£temporary555>
new  <>

2334:
old  <>
new  < cos$56:>

2335:
old  < tan$15:>
new  <	; SignedMultiply Â£temporary549 Â£temporary547 Â£temporary548>

2336:
old  <	; PushFloat cos_x>
new  <	fmul>

2337:
old  <	fld qword [rbp + 32]>
new  <>

2338:
old  <>
new  < cos$57:>

2339:
old  < tan$16:>
new  <	; SignedMultiply Â£temporary550 faculty Â£temporary549>

2340:
old  <	; SignedDivide Â£temporary556 Â£temporary555 cos_x>
new  <	fmul>

2341:
old  <	fdiv>
new  <>

2342:
old  <>
new  < cos$58:>

2343:
old  < tan$17:>
new  <	; PopFloat faculty>

2344:
old  <	; Return Â£temporary556>
new  <	fstp qword [rbp + 72]>

2345:
old  <	mov rax, [rbp]>
new  <>

2346:
old  <	mov rdi, [rbp + 16]>
new  < cos$59:>

2347:
old  <	mov rbp, [rbp + 8]>
new  <	; CheckTrackMapFloatStack>

2348:
old  <	jmp rax>
new  <>

2349:
old  <>
new  < cos$60:>

2350:
old  < tan$18:>
new  <	; PreCall 80 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2351:
old  <	; Assign errno 6>
new  <>

2352:
old  <	mov dword [errno], 6>
new  < cos$61:>

2353:
old  <>
new  <	; PushFloat term>

2354:
old  < tan$19:>
new  <	fld qword [rbp + 40]>

2355:
old  <	; PushFloat 0>
new  <>

2356:
old  <	fldz>
new  < cos$62:>

2357:
old  <>
new  <	; Parameter double term 104>

2358:
old  < tan$20:>
new  <	fstp qword [rbp + 104]>

2359:
old  <	; Return 0>
new  <>

2360:
old  <	mov rax, [rbp]>
new  < cos$63:>

2361:
old  <	mov rdi, [rbp + 16]>
new  <	; Call fabs 80 0>

2362:
old  <	mov rbp, [rbp + 8]>
new  <	mov qword [rbp + 80], cos$64>

2363:
old  <	jmp rax>
new  <	mov [rbp + 88], rbp>

2364:
old  <>
new  <	add rbp, 80>

2365:
old  < tan$21:>
new  <	jmp fabs>

2366:
old  <	; FunctionEnd tan>
new  <>

2367:
old  <>
new  < cos$64:>

2368:
old  <section .data>
new  <	; PostCall 80>

2370:
old  <float8$1.57079632679489661923132165#:>
new  < cos$65:>

2371:
old  <	; Initializer Double 1.57079632679489661923132165>
new  <	; GetReturnValue Â£temporary551>

2372:
old  <	dq 1.57079632679489661923132165>
new  <>

2373:
old  <>
new  < cos$66:>

2374:
old  <section .data>
new  <	; PushFloat 0.000000001>

2375:
old  <>
new  <	fld qword [float8$0.000000001#]>

2376:
old  <float8$minus1.57079632679489661923132165#:>
new  <>

2377:
old  <	; Initializer Double -1.57079632679489661923132165>
new  < cos$67:>

2378:
old  <	dq -1.57079632679489661923132165>
new  <	; SignedGreaterThanEqual 27 Â£temporary551 0.000000001>

2379:
old  <>
new  <	fcompp>

2380:
old  <section .text>
new  <	fstsw ax>

2381:
old  <>
new  <	sahf>

2382:
old  < asin:>
new  <	jbe cos$27>

2383:
old  <	; PushFloat x>
new  <>

2384:
old  <	fld qword [rbp + 24]>
new  < cos$68:>

2385:
old  <>
new  <	; PushFloat sum>

2386:
old  < asin$1:>
new  <	fld qword [rbp + 48]>

2387:
old  <	; PushFloat 1>
new  <>

2388:
old  <	fld1>
new  < cos$69:>

2389:
old  <>
new  <	; Return sum>

2390:
old  < asin$2:>
new  <	mov rax, [rbp]>

2391:
old  <	; NotEqual 5 x 1>
new  <	mov rdi, [rbp + 16]>

2392:
old  <	fcompp>
new  <	mov rbp, [rbp + 8]>

2393:
old  <	fstsw ax>
new  <	jmp rax>

2394:
old  <	sahf>
new  <>

2395:
old  <	jne asin$5>
new  < cos$70:>

2396:
old  <>
new  <	; FunctionEnd cos>

2397:
old  < asin$3:>
new  <>

2398:
old  <	; PushFloat 1.57079632679489661923132165>
new  <section .text>

2399:
old  <	fld qword [float8$1.57079632679489661923132165#]>
new  <>

2400:
old  <>
new  < tan:>

2401:
old  < asin$4:>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2402:
old  <	; Return 1.57079632679489661923132165>
new  <>

2403:
old  <	mov rax, [rbp]>
new  < tan$1:>

2404:
old  <	mov rdi, [rbp + 16]>
new  <	; PushFloat x>

2405:
old  <	mov rbp, [rbp + 8]>
new  <	fld qword [rbp + 24]>

2406:
old  <	jmp rax>
new  <>

2407:
old  <>
new  < tan$2:>

2408:
old  < asin$5:>
new  <	; Parameter double x 56>

2409:
old  <	; PushFloat x>
new  <	fstp qword [rbp + 56]>

2410:
old  <	fld qword [rbp + 24]>
new  <>

2411:
old  <>
new  < tan$3:>

2412:
old  < asin$6:>
new  <	; Call cos 32 0>

2413:
old  <	; PushFloat -1>
new  <	mov qword [rbp + 32], tan$4>

2414:
old  <	fld qword [float8$minus1#]>
new  <	mov [rbp + 40], rbp>

2415:
old  <>
new  <	add rbp, 32>

2416:
old  < asin$7:>
new  <	jmp cos>

2417:
old  <	; NotEqual 10 x -1>
new  <>

2418:
old  <	fcompp>
new  < tan$4:>

2419:
old  <	fstsw ax>
new  <	; PostCall 32>

2420:
old  <	sahf>
new  <>

2421:
old  <	jne asin$10>
new  < tan$5:>

2422:
old  <>
new  <	; GetReturnValue Â£temporary557>

2423:
old  < asin$8:>
new  <>

2424:
old  <	; PushFloat -1.57079632679489661923132165>
new  < tan$6:>

2425:
old  <	fld qword [float8$minus1.57079632679489661923132165#]>
new  <	; PopFloat cos_of_x>

2426:
old  <>
new  <	fstp qword [rbp + 32]>

2427:
old  < asin$9:>
new  <>

2428:
old  <	; Return -1.57079632679489661923132165>
new  < tan$7:>

2429:
old  <	mov rax, [rbp]>
new  <	; PushFloat cos_of_x>

2430:
old  <	mov rdi, [rbp + 16]>
new  <	fld qword [rbp + 32]>

2431:
old  <	mov rbp, [rbp + 8]>
new  <>

2432:
old  <	jmp rax>
new  < tan$8:>

2433:
old  <>
new  <	; PushFloat 0>

2434:
old  < asin$10:>
new  <	fldz>

2435:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

2436:
old  <>
new  < tan$9:>

2437:
old  < asin$11:>
new  <	; Equal 19 cos_of_x 0>

2438:
old  <	; PushFloat x>
new  <	fcompp>

2439:
old  <	fld qword [rbp + 24]>
new  <	fstsw ax>

2440:
old  <>
new  <	sahf>

2441:
old  < asin$12:>
new  <	je tan$19>

2442:
old  <	; Parameter double x 56>
new  <>

2443:
old  <	fstp qword [rbp + 56]>
new  < tan$10:>

2444:
old  <>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2445:
old  < asin$13:>
new  <>

2446:
old  <	; Call fabs 32 0>
new  < tan$11:>

2447:
old  <	mov qword [rbp + 32], asin$14>
new  <	; PushFloat x>

2448:
old  <	mov [rbp + 40], rbp>
new  <	fld qword [rbp + 24]>

2449:
old  <	add rbp, 32>
new  <>

2450:
old  <	jmp fabs>
new  < tan$12:>

2451:
old  <>
new  <	; Parameter double x 64>

2452:
old  < asin$14:>
new  <	fstp qword [rbp + 64]>

2453:
old  <	; PostCall 32>
new  <>

2454:
old  <>
new  < tan$13:>

2455:
old  < asin$15:>
new  <	; Call sin 40 0>

2456:
old  <	; GetReturnValue Â£temporary561>
new  <	mov qword [rbp + 40], tan$14>

2457:
old  <>
new  <	mov [rbp + 48], rbp>

2458:
old  < asin$16:>
new  <	add rbp, 40>

2459:
old  <	; PushFloat 1>
new  <	jmp sin>

2460:
old  <	fld1>
new  <>

2461:
old  <>
new  < tan$14:>

2462:
old  < asin$17:>
new  <	; PostCall 40>

2463:
old  <	; SignedGreaterThanEqual 36 Â£temporary561 1>
new  <>

2464:
old  <	fcompp>
new  < tan$15:>

2465:
old  <	fstsw ax>
new  <	; GetReturnValue Â£temporary559>

2466:
old  <	sahf>
new  <>

2467:
old  <	jbe asin$36>
new  < tan$16:>

2468:
old  <>
new  <	; PushFloat cos_of_x>

2469:
old  < asin$18:>
new  <	fld qword [rbp + 32]>

2470:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

2471:
old  <>
new  < tan$17:>

2472:
old  < asin$19:>
new  <	; SignedDivide Â£temporary560 Â£temporary559 cos_of_x>

2473:
old  <	; PushFloat x>
new  <	fdiv>

2474:
old  <	fld qword [rbp + 24]>
new  <>

2475:
old  <>
new  < tan$18:>

2476:
old  < asin$20:>
new  <	; Return Â£temporary560>

2477:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 1>
new  <	mov rax, [rbp]>

2478:
old  <	fstp qword [rbp + 32]>
new  <	mov rdi, [rbp + 16]>

2479:
old  <>
new  <	mov rbp, [rbp + 8]>

2480:
old  < asin$21:>
new  <	jmp rax>

2481:
old  <	; PushFloat 1>
new  <>

2482:
old  <	fld1>
new  < tan$19:>

2483:
old  <>
new  <	; Assign errno 6>

2484:
old  < asin$22:>
new  <	mov dword [errno], 6>

2485:
old  <	; PushFloat x>
new  <>

2486:
old  <	fld qword [rbp + 24]>
new  < tan$20:>

2487:
old  <>
new  <	; PushFloat 0>

2488:
old  < asin$23:>
new  <	fldz>

2489:
old  <	; PushFloat x>
new  <>

2490:
old  <	fld qword [rbp + 24]>
new  < tan$21:>

2491:
old  <>
new  <	; Return 0>

2492:
old  < asin$24:>
new  <	mov rax, [rbp]>

2493:
old  <	; SignedMultiply Â£temporary563 x x>
new  <	mov rdi, [rbp + 16]>

2494:
old  <	fmul>
new  <	mov rbp, [rbp + 8]>

2495:
old  <>
new  <	jmp rax>

2496:
old  < asin$25:>
new  <>

2497:
old  <	; BinarySubtract Â£temporary564 1 Â£temporary563>
new  < tan$22:>

2498:
old  <	fsub>
new  <	; FunctionEnd tan>

2500:
old  < asin$26:>
new  <section .data>

2501:
old  <	; Parameter double Â£temporary564 56>
new  <>

2502:
old  <	fstp qword [rbp + 64]>
new  <float8$1.57079632679489661923132165#:>

2503:
old  <>
new  <	; Initializer Double 1.57079632679489661923132165>

2504:
old  < asin$27:>
new  <	dq 1.57079632679489661923132165>

2505:
old  <	; Call sqrt 32 0>
new  <>

2506:
old  <	mov qword [rbp + 40], asin$28>
new  <section .text>

2507:
old  <	mov [rbp + 48], rbp>
new  <>

2508:
old  <	add rbp, 40>
new  < asin:>

2509:
old  <	jmp sqrt>
new  <	; PushFloat x>

2510:
old  <>
new  <	fld qword [rbp + 24]>

2511:
old  < asin$28:>
new  <>

2512:
old  <	; PostCall 32>
new  < asin$1:>

2513:
old  <	fstp qword [rbp + 40]>
new  <	; PushFloat 1>

2514:
old  <	fld qword [rbp + 32]>
new  <	fld1>

2515:
old  <	fld qword [rbp + 40]>
new  <>

2516:
old  <>
new  < asin$2:>

2517:
old  < asin$29:>
new  <	; NotEqual 5 x 1>

2518:
old  <	; GetReturnValue Â£temporary565>
new  <	fcompp>

2519:
old  <>
new  <	fstsw ax>

2520:
old  < asin$30:>
new  <	sahf>

2521:
old  <	; SignedDivide Â£temporary566 x Â£temporary565>
new  <	jne asin$5>

2522:
old  <	fdiv>
new  <>

2523:
old  <>
new  < asin$3:>

2524:
old  < asin$31:>
new  <	; PushFloat 1.57079632679489661923132165>

2525:
old  <	; Parameter double Â£temporary566 56>
new  <	fld qword [float8$1.57079632679489661923132165#]>

2526:
old  <	fstp qword [rbp + 56]>
new  <>

2527:
old  <>
new  < asin$4:>

2528:
old  < asin$32:>
new  <	; Return 1.57079632679489661923132165>

2529:
old  <	; Call atan 32 0>
new  <	mov rax, [rbp]>

2530:
old  <	mov qword [rbp + 32], asin$33>
new  <	mov rdi, [rbp + 16]>

2531:
old  <	mov [rbp + 40], rbp>
new  <	mov rbp, [rbp + 8]>

2532:
old  <	add rbp, 32>
new  <	jmp rax>

2533:
old  <	jmp atan>
new  <>

2534:
old  <>
new  < asin$5:>

2535:
old  < asin$33:>
new  <	; PushFloat x>

2536:
old  <	; PostCall 32>
new  <	fld qword [rbp + 24]>

2538:
old  < asin$34:>
new  < asin$6:>

2539:
old  <	; GetReturnValue Â£temporary567>
new  <	; PushFloat 0>

2540:
old  <>
new  <	fldz>

2541:
old  < asin$35:>
new  <>

2542:
old  <	; Return Â£temporary567>
new  < asin$7:>

2543:
old  <	mov rax, [rbp]>
new  <	; SignedGreaterThanEqual 17 x 0>

2544:
old  <	mov rdi, [rbp + 16]>
new  <	fcompp>

2545:
old  <	mov rbp, [rbp + 8]>
new  <	fstsw ax>

2546:
old  <	jmp rax>
new  <	sahf>

2547:
old  <>
new  <	jbe asin$17>

2548:
old  < asin$36:>
new  <>

2549:
old  <	; Assign errno 6>
new  < asin$8:>

2550:
old  <	mov dword [errno], 6>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2552:
old  < asin$37:>
new  < asin$9:>

2553:
old  <	; PushFloat 0>
new  <	; PushFloat x>

2554:
old  <	fldz>
new  <	fld qword [rbp + 24]>

2556:
old  < asin$38:>
new  < asin$10:>

2557:
old  <	; Return 0>
new  <	; UnarySubtract Â£temporary565 x>

2558:
old  <	mov rax, [rbp]>
new  <	fchs>

2559:
old  <	mov rdi, [rbp + 16]>
new  <>

2560:
old  <	mov rbp, [rbp + 8]>
new  < asin$11:>

2561:
old  <	jmp rax>
new  <	; Parameter double Â£temporary565 56>

2562:
old  <>
new  <	fstp qword [rbp + 56]>

2563:
old  < asin$39:>
new  <>

2564:
old  <	; FunctionEnd asin>
new  < asin$12:>

2565:
old  <>
new  <	; Call asin 32 0>

2566:
old  <section .text>
new  <	mov qword [rbp + 32], asin$13>

2567:
old  <>
new  <	mov [rbp + 40], rbp>

2568:
old  < acos:>
new  <	add rbp, 32>

2569:
old  <	; PushFloat x>
new  <	jmp asin>

2570:
old  <	fld qword [rbp + 24]>
new  <>

2571:
old  <>
new  < asin$13:>

2572:
old  < acos$1:>
new  <	; PostCall 32>

2573:
old  <	; PushFloat 0>
new  <>

2574:
old  <	fldz>
new  < asin$14:>

2575:
old  <>
new  <	; GetReturnValue Â£temporary566>

2576:
old  < acos$2:>
new  <>

2577:
old  <	; NotEqual 5 x 0>
new  < asin$15:>

2578:
old  <	fcompp>
new  <	; UnarySubtract Â£temporary567 Â£temporary566>

2579:
old  <	fstsw ax>
new  <	fchs>

2580:
old  <	sahf>
new  <>

2581:
old  <	jne acos$5>
new  < asin$16:>

2582:
old  <>
new  <	; Return Â£temporary567>

2583:
old  < acos$3:>
new  <	mov rax, [rbp]>

2584:
old  <	; PushFloat 1.57079632679489661923132165>
new  <	mov rdi, [rbp + 16]>

2585:
old  <	fld qword [float8$1.57079632679489661923132165#]>
new  <	mov rbp, [rbp + 8]>

2586:
old  <>
new  <	jmp rax>

2587:
old  < acos$4:>
new  <>

2588:
old  <	; Return 1.57079632679489661923132165>
new  < asin$17:>

2589:
old  <	mov rax, [rbp]>
new  <	; PushFloat x>

2590:
old  <	mov rdi, [rbp + 16]>
new  <	fld qword [rbp + 24]>

2591:
old  <	mov rbp, [rbp + 8]>
new  <>

2592:
old  <	jmp rax>
new  < asin$18:>

2593:
old  <>
new  <	; PushFloat 1>

2594:
old  < acos$5:>
new  <	fld1>

2595:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

2596:
old  <>
new  < asin$19:>

2597:
old  < acos$6:>
new  <	; SignedGreaterThanEqual 38 x 1>

2598:
old  <	; PushFloat x>
new  <	fcompp>

2599:
old  <	fld qword [rbp + 24]>
new  <	fstsw ax>

2600:
old  <>
new  <	sahf>

2601:
old  < acos$7:>
new  <	jbe asin$38>

2602:
old  <	; Parameter double x 56>
new  <>

2603:
old  <	fstp qword [rbp + 56]>
new  < asin$20:>

2604:
old  <>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2605:
old  < acos$8:>
new  <>

2606:
old  <	; Call fabs 32 0>
new  < asin$21:>

2607:
old  <	mov qword [rbp + 32], acos$9>
new  <	; PushFloat x>

2608:
old  <	mov [rbp + 40], rbp>
new  <	fld qword [rbp + 24]>

2609:
old  <	add rbp, 32>
new  <>

2610:
old  <	jmp fabs>
new  < asin$22:>

2611:
old  <>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 1>

2612:
old  < acos$9:>
new  <	fstp qword [rbp + 32]>

2613:
old  <	; PostCall 32>
new  <>

2614:
old  <>
new  < asin$23:>

2615:
old  < acos$10:>
new  <	; PushFloat 1>

2616:
old  <	; GetReturnValue Â£temporary572>
new  <	fld1>

2618:
old  < acos$11:>
new  < asin$24:>

2619:
old  <	; PushFloat 1>
new  <	; PushFloat x>

2620:
old  <	fld1>
new  <	fld qword [rbp + 24]>

2622:
old  < acos$12:>
new  < asin$25:>

2623:
old  <	; SignedGreaterThanEqual 31 Â£temporary572 1>
new  <	; PushFloat x>

2624:
old  <	fcompp>
new  <	fld qword [rbp + 24]>

2625:
old  <	fstsw ax>
new  <>

2626:
old  <	sahf>
new  < asin$26:>

2627:
old  <	jbe acos$31>
new  <	; SignedMultiply Â£temporary569 x x>

2628:
old  <>
new  <	fmul>

2629:
old  < acos$13:>
new  <>

2630:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < asin$27:>

2631:
old  <>
new  <	; BinarySubtract Â£temporary570 1 Â£temporary569>

2632:
old  < acos$14:>
new  <	fsub>

2633:
old  <	; PushFloat x>
new  <>

2634:
old  <	fld qword [rbp + 24]>
new  < asin$28:>

2635:
old  <>
new  <	; Parameter double Â£temporary570 56>

2636:
old  < acos$15:>
new  <	fstp qword [rbp + 64]>

2637:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 1>
new  <>

2638:
old  <	fstp qword [rbp + 32]>
new  < asin$29:>

2639:
old  <>
new  <	; Call sqrt 32 0>

2640:
old  < acos$16:>
new  <	mov qword [rbp + 40], asin$30>

2641:
old  <	; PushFloat 1>
new  <	mov [rbp + 48], rbp>

2642:
old  <	fld1>
new  <	add rbp, 40>

2643:
old  <>
new  <	jmp sqrt>

2644:
old  < acos$17:>
new  <>

2645:
old  <	; PushFloat x>
new  < asin$30:>

2646:
old  <	fld qword [rbp + 24]>
new  <	; PostCall 32>

2647:
old  <>
new  <	fstp qword [rbp + 40]>

2648:
old  < acos$18:>
new  <	fld qword [rbp + 32]>

2649:
old  <	; PushFloat x>
new  <	fld qword [rbp + 40]>

2650:
old  <	fld qword [rbp + 24]>
new  <>

2651:
old  <>
new  < asin$31:>

2652:
old  < acos$19:>
new  <	; GetReturnValue Â£temporary571>

2653:
old  <	; SignedMultiply Â£temporary574 x x>
new  <>

2654:
old  <	fmul>
new  < asin$32:>

2655:
old  <>
new  <	; SignedDivide Â£temporary572 x Â£temporary571>

2656:
old  < acos$20:>
new  <	fdiv>

2657:
old  <	; BinarySubtract Â£temporary575 1 Â£temporary574>
new  <>

2658:
old  <	fsub>
new  < asin$33:>

2659:
old  <>
new  <	; Parameter double Â£temporary572 56>

2660:
old  < acos$21:>
new  <	fstp qword [rbp + 56]>

2661:
old  <	; Parameter double Â£temporary575 56>
new  <>

2662:
old  <	fstp qword [rbp + 64]>
new  < asin$34:>

2663:
old  <>
new  <	; Call atan 32 0>

2664:
old  < acos$22:>
new  <	mov qword [rbp + 32], asin$35>

2665:
old  <	; Call sqrt 32 0>
new  <	mov [rbp + 40], rbp>

2666:
old  <	mov qword [rbp + 40], acos$23>
new  <	add rbp, 32>

2667:
old  <	mov [rbp + 48], rbp>
new  <	jmp atan>

2668:
old  <	add rbp, 40>
new  <>

2669:
old  <	jmp sqrt>
new  < asin$35:>

2670:
old  <>
new  <	; PostCall 32>

2671:
old  < acos$23:>
new  <>

2672:
old  <	; PostCall 32>
new  < asin$36:>

2673:
old  <	fstp qword [rbp + 40]>
new  <	; GetReturnValue Â£temporary573>

2674:
old  <	fld qword [rbp + 32]>
new  <>

2675:
old  <	fld qword [rbp + 40]>
new  < asin$37:>

2676:
old  <>
new  <	; Return Â£temporary573>

2677:
old  < acos$24:>
new  <	mov rax, [rbp]>

2678:
old  <	; GetReturnValue Â£temporary576>
new  <	mov rdi, [rbp + 16]>

2679:
old  <>
new  <	mov rbp, [rbp + 8]>

2680:
old  < acos$25:>
new  <	jmp rax>

2681:
old  <	; SignedDivide Â£temporary577 x Â£temporary576>
new  <>

2682:
old  <	fdiv>
new  < asin$38:>

2683:
old  <>
new  <	; Assign errno 6>

2684:
old  < acos$26:>
new  <	mov dword [errno], 6>

2685:
old  <	; Parameter double Â£temporary577 56>
new  <>

2686:
old  <	fstp qword [rbp + 56]>
new  < asin$39:>

2687:
old  <>
new  <	; PushFloat 0>

2688:
old  < acos$27:>
new  <	fldz>

2689:
old  <	; Call atan 32 0>
new  <>

2690:
old  <	mov qword [rbp + 32], acos$28>
new  < asin$40:>

2691:
old  <	mov [rbp + 40], rbp>
new  <	; Return 0>

2692:
old  <	add rbp, 32>
new  <	mov rax, [rbp]>

2693:
old  <	jmp atan>
new  <	mov rdi, [rbp + 16]>

2694:
old  <>
new  <	mov rbp, [rbp + 8]>

2695:
old  < acos$28:>
new  <	jmp rax>

2696:
old  <	; PostCall 32>
new  <>

2697:
old  <>
new  < asin$41:>

2698:
old  < acos$29:>
new  <	; FunctionEnd asin>

2699:
old  <	; GetReturnValue Â£temporary578>
new  <>

2700:
old  <>
new  <section .data>

2701:
old  < acos$30:>
new  <>

2702:
old  <	; Return Â£temporary578>
new  <float8$3.1415926535897932384626433#:>

2703:
old  <	mov rax, [rbp]>
new  <	; Initializer Double 3.1415926535897932384626433>

2704:
old  <	mov rdi, [rbp + 16]>
new  <	dq 3.1415926535897932384626433>

2705:
old  <	mov rbp, [rbp + 8]>
new  <>

2706:
old  <	jmp rax>
new  <section .text>

2708:
old  < acos$31:>
new  < acos:>

2709:
old  <	; Assign errno 6>
new  <	; PushFloat x>

2710:
old  <	mov dword [errno], 6>
new  <	fld qword [rbp + 24]>

2712:
old  < acos$32:>
new  < acos$1:>

2716:
old  < acos$33:>
new  < acos$2:>

2717:
old  <	; Return 0>
new  <	; NotEqual 5 x 0>

2718:
old  <	mov rax, [rbp]>
new  <	fcompp>

2719:
old  <	mov rdi, [rbp + 16]>
new  <	fstsw ax>

2720:
old  <	mov rbp, [rbp + 8]>
new  <	sahf>

2721:
old  <	jmp rax>
new  <	jne acos$5>

2723:
old  < acos$34:>
new  < acos$3:>

2724:
old  <	; FunctionEnd acos>
new  <	; PushFloat 1.57079632679489661923132165>

2725:
old  <>
new  <	fld qword [float8$1.57079632679489661923132165#]>

2726:
old  <section .data>
new  <>

2727:
old  <>
new  < acos$4:>

2728:
old  <float8$0.5#:>
new  <	; Return 1.57079632679489661923132165>

2729:
old  <	; Initializer Double 0.5>
new  <	mov rax, [rbp]>

2730:
old  <	dq 0.5>
new  <	mov rdi, [rbp + 16]>

2731:
old  <>
new  <	mov rbp, [rbp + 8]>

2732:
old  <section .text>
new  <	jmp rax>

2734:
old  < atan:>
new  < acos$5:>

2738:
old  < atan$1:>
new  < acos$6:>

2742:
old  < atan$2:>
new  < acos$7:>

2743:
old  <	; SignedGreaterThanEqual 12 x 0>
new  <	; SignedGreaterThanEqual 18 x 0>

2747:
old  <	jbe atan$12>
new  <	jbe acos$18>

2749:
old  < atan$3:>
new  < acos$8:>

2750:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; PushFloat 3.1415926535897932384626433>

2751:
old  <>
new  <	fld qword [float8$3.1415926535897932384626433#]>

2752:
old  < atan$4:>
new  <>

2753:
old  <	; PushFloat x>
new  < acos$9:>

2754:
old  <	fld qword [rbp + 24]>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 1>

2755:
old  <>
new  <	fstp qword [rbp + 32]>

2756:
old  < atan$5:>
new  <>

2757:
old  <	; UnarySubtract Â£temporary583 x>
new  < acos$10:>

2758:
old  <	fchs>
new  <	; PushFloat x>

2759:
old  <>
new  <	fld qword [rbp + 24]>

2760:
old  < atan$6:>
new  <>

2761:
old  <	; Parameter double Â£temporary583 56>
new  < acos$11:>

2762:
old  <	fstp qword [rbp + 56]>
new  <	; UnarySubtract Â£temporary579 x>

2763:
old  <>
new  <	fchs>

2764:
old  < atan$7:>
new  <>

2765:
old  <	; Call atan 32 0>
new  < acos$12:>

2766:
old  <	mov qword [rbp + 32], atan$8>
new  <	; Parameter double Â£temporary579 56>

2767:
old  <	mov [rbp + 40], rbp>
new  <	fstp qword [rbp + 64]>

2768:
old  <	add rbp, 32>
new  <>

2769:
old  <	jmp atan>
new  < acos$13:>

2770:
old  <>
new  <	; Call acos 32 0>

2771:
old  < atan$8:>
new  <	mov qword [rbp + 40], acos$14>

2772:
old  <	; PostCall 32>
new  <	mov [rbp + 48], rbp>

2773:
old  <>
new  <	add rbp, 40>

2774:
old  < atan$9:>
new  <	jmp acos>

2775:
old  <	; GetReturnValue Â£temporary584>
new  <>

2776:
old  <>
new  < acos$14:>

2777:
old  < atan$10:>
new  <	; PostCall 32>

2778:
old  <	; UnarySubtract Â£temporary585 Â£temporary584>
new  <	fstp qword [rbp + 40]>

2779:
old  <	fchs>
new  <	fld qword [rbp + 32]>

2780:
old  <>
new  <	fld qword [rbp + 40]>

2781:
old  < atan$11:>
new  <>

2782:
old  <	; Return Â£temporary585>
new  < acos$15:>

2783:
old  <	mov rax, [rbp]>
new  <	; GetReturnValue Â£temporary580>

2784:
old  <	mov rdi, [rbp + 16]>
new  <>

2785:
old  <	mov rbp, [rbp + 8]>
new  < acos$16:>

2786:
old  <	jmp rax>
new  <	; BinarySubtract Â£temporary581 3.1415926535897932384626433 Â£temporary580>

2787:
old  <>
new  <	fsub>

2788:
old  < atan$12:>
new  <>

2789:
old  <	; PushFloat x>
new  < acos$17:>

2790:
old  <	fld qword [rbp + 24]>
new  <	; Return Â£temporary581>

2791:
old  <>
new  <	mov rax, [rbp]>

2792:
old  < atan$13:>
new  <	mov rdi, [rbp + 16]>

2793:
old  <	; PushFloat 1>
new  <	mov rbp, [rbp + 8]>

2794:
old  <	fld1>
new  <	jmp rax>

2796:
old  < atan$14:>
new  < acos$18:>

2797:
old  <	; SignedLessThanEqual 26 x 1>
new  <	; PushFloat x>

2798:
old  <	fcompp>
new  <	fld qword [rbp + 24]>

2799:
old  <	fstsw ax>
new  <>

2800:
old  <	sahf>
new  < acos$19:>

2801:
old  <	jae atan$26>
new  <	; PushFloat 1>

2802:
old  <>
new  <	fld1>

2803:
old  < atan$15:>
new  <>

2804:
old  <	; PushFloat 1.57079632679489661923132165>
new  < acos$20:>

2805:
old  <	fld qword [float8$1.57079632679489661923132165#]>
new  <	; SignedGreaterThan 39 x 1>

2806:
old  <>
new  <	fcompp>

2807:
old  < atan$16:>
new  <	fstsw ax>

2808:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 1>
new  <	sahf>

2809:
old  <	fstp qword [rbp + 32]>
new  <	jb acos$39>

2811:
old  < atan$17:>
new  < acos$21:>

2812:
old  <	; PushFloat 1>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2813:
old  <	fld1>
new  <>

2814:
old  <>
new  < acos$22:>

2815:
old  < atan$18:>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2816:
old  <	; PushFloat x>
new  <>

2817:
old  <	fld qword [rbp + 24]>
new  < acos$23:>

2818:
old  <>
new  <	; PushFloat 1>

2819:
old  < atan$19:>
new  <	fld1>

2820:
old  <	; SignedDivide Â£temporary587 1 x>
new  <>

2821:
old  <	fdiv>
new  < acos$24:>

2822:
old  <>
new  <	; PushFloat x>

2823:
old  < atan$20:>
new  <	fld qword [rbp + 24]>

2824:
old  <	; Parameter double Â£temporary587 56>
new  <>

2825:
old  <	fstp qword [rbp + 64]>
new  < acos$25:>

2826:
old  <>
new  <	; PushFloat x>

2827:
old  < atan$21:>
new  <	fld qword [rbp + 24]>

2828:
old  <	; Call atan 32 0>
new  <>

2829:
old  <	mov qword [rbp + 40], atan$22>
new  < acos$26:>

2830:
old  <	mov [rbp + 48], rbp>
new  <	; SignedMultiply Â£temporary583 x x>

2831:
old  <	add rbp, 40>
new  <	fmul>

2832:
old  <	jmp atan>
new  <>

2833:
old  <>
new  < acos$27:>

2834:
old  < atan$22:>
new  <	; BinarySubtract Â£temporary584 1 Â£temporary583>

2835:
old  <	; PostCall 32>
new  <	fsub>

2836:
old  <	fstp qword [rbp + 40]>
new  <>

2837:
old  <	fld qword [rbp + 32]>
new  < acos$28:>

2838:
old  <	fld qword [rbp + 40]>
new  <	; Parameter double Â£temporary584 56>

2839:
old  <>
new  <	fstp qword [rbp + 56]>

2840:
old  < atan$23:>
new  <>

2841:
old  <	; GetReturnValue Â£temporary588>
new  < acos$29:>

2842:
old  <>
new  <	; Call sqrt 32 0>

2843:
old  < atan$24:>
new  <	mov qword [rbp + 32], acos$30>

2844:
old  <	; BinarySubtract Â£temporary589 1.57079632679489661923132165 Â£temporary588>
new  <	mov [rbp + 40], rbp>

2845:
old  <	fsub>
new  <	add rbp, 32>

2846:
old  <>
new  <	jmp sqrt>

2847:
old  < atan$25:>
new  <>

2848:
old  <	; Return Â£temporary589>
new  < acos$30:>

2849:
old  <	mov rax, [rbp]>
new  <	; PostCall 32>

2850:
old  <	mov rdi, [rbp + 16]>
new  <>

2851:
old  <	mov rbp, [rbp + 8]>
new  < acos$31:>

2852:
old  <	jmp rax>
new  <	; GetReturnValue Â£temporary585>

2854:
old  < atan$26:>
new  < acos$32:>

2858:
old  < atan$27:>
new  < acos$33:>

2859:
old  <	; PushFloat 0.5>
new  <	; SignedDivide Â£temporary586 Â£temporary585 x>

2860:
old  <	fld qword [float8$0.5#]>
new  <	fdiv>

2862:
old  < atan$28:>
new  < acos$34:>

2863:
old  <	; SignedLessThanEqual 51 x 0.5>
new  <	; Parameter double Â£temporary586 56>

2864:
old  <	fcompp>
new  <	fstp qword [rbp + 56]>

2865:
old  <	fstsw ax>
new  <>

2866:
old  <	sahf>
new  < acos$35:>

2867:
old  <	jae atan$51>
new  <	; Call atan 32 0>

2868:
old  <>
new  <	mov qword [rbp + 32], acos$36>

2869:
old  < atan$29:>
new  <	mov [rbp + 40], rbp>

2870:
old  <	; PushFloat 2>
new  <	add rbp, 32>

2871:
old  <	fld qword [float8$2#]>
new  <	jmp atan>

2873:
old  < atan$30:>
new  < acos$36:>

2874:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 1>
new  <	; PostCall 32>

2875:
old  <	fstp qword [rbp + 32]>
new  <>

2876:
old  <>
new  < acos$37:>

2877:
old  < atan$31:>
new  <	; GetReturnValue Â£temporary587>

2878:
old  <	; PushFloat x>
new  <>

2879:
old  <	fld qword [rbp + 24]>
new  < acos$38:>

2880:
old  <>
new  <	; Return Â£temporary587>

2881:
old  < atan$32:>
new  <	mov rax, [rbp]>

2882:
old  <	; PushFloat 1>
new  <	mov rdi, [rbp + 16]>

2883:
old  <	fld1>
new  <	mov rbp, [rbp + 8]>

2884:
old  <>
new  <	jmp rax>

2885:
old  < atan$33:>
new  <>

2886:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 3>
new  < acos$39:>

2887:
old  <	fstp qword [rbp + 32]>
new  <	; Assign errno 6>

2888:
old  <	fstp qword [rbp + 40]>
new  <	mov dword [errno], 6>

2889:
old  <	fstp qword [rbp + 48]>
new  <>

2890:
old  <>
new  < acos$40:>

2891:
old  < atan$34:>
new  <	; PushFloat 0>

2892:
old  <	; PushFloat 1>
new  <	fldz>

2893:
old  <	fld1>
new  <>

2894:
old  <>
new  < acos$41:>

2895:
old  < atan$35:>
new  <	; Return 0>

2896:
old  <	; PushFloat x>
new  <	mov rax, [rbp]>

2897:
old  <	fld qword [rbp + 24]>
new  <	mov rdi, [rbp + 16]>

2898:
old  <>
new  <	mov rbp, [rbp + 8]>

2899:
old  < atan$36:>
new  <	jmp rax>

2900:
old  <	; PushFloat x>
new  <>

2901:
old  <	fld qword [rbp + 24]>
new  < acos$42:>

2902:
old  <>
new  <	; FunctionEnd acos>

2903:
old  < atan$37:>
new  <>

2904:
old  <	; SignedMultiply Â£temporary591 x x>
new  <section .data>

2905:
old  <	fmul>
new  <>

2906:
old  <>
new  <float8$0.5#:>

2907:
old  < atan$38:>
new  <	; Initializer Double 0.5>

2908:
old  <	; BinaryAdd Â£temporary592 1 Â£temporary591>
new  <	dq 0.5>

2909:
old  <	fadd>
new  <>

2910:
old  <>
new  <section .text>

2911:
old  < atan$39:>
new  <>

2912:
old  <	; Parameter double Â£temporary592 56>
new  < atan:>

2913:
old  <	fstp qword [rbp + 88]>
new  <	; PushFloat x>

2914:
old  <>
new  <	fld qword [rbp + 24]>

2915:
old  < atan$40:>
new  <>

2916:
old  <	; Call sqrt 32 0>
new  < atan$1:>

2917:
old  <	mov qword [rbp + 64], atan$41>
new  <	; PushFloat 0>

2918:
old  <	mov [rbp + 72], rbp>
new  <	fldz>

2919:
old  <	add rbp, 64>
new  <>

2920:
old  <	jmp sqrt>
new  < atan$2:>

2921:
old  <>
new  <	; SignedGreaterThanEqual 12 x 0>

2922:
old  < atan$41:>
new  <	fcompp>

2923:
old  <	; PostCall 32>
new  <	fstsw ax>

2924:
old  <	fstp qword [rbp + 56]>
new  <	sahf>

2925:
old  <	fld qword [rbp + 48]>
new  <	jbe atan$12>

2926:
old  <	fld qword [rbp + 40]>
new  <>

2927:
old  <	fld qword [rbp + 32]>
new  < atan$3:>

2928:
old  <	fld qword [rbp + 56]>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2930:
old  < atan$42:>
new  < atan$4:>

2931:
old  <	; GetReturnValue Â£temporary593>
new  <	; PushFloat x>

2932:
old  <>
new  <	fld qword [rbp + 24]>

2933:
old  < atan$43:>
new  <>

2934:
old  <	; BinaryAdd Â£temporary594 1 Â£temporary593>
new  < atan$5:>

2935:
old  <	fadd>
new  <	; UnarySubtract Â£temporary592 x>

2936:
old  <>
new  <	fchs>

2937:
old  < atan$44:>
new  <>

2938:
old  <	; SignedDivide Â£temporary595 x Â£temporary594>
new  < atan$6:>

2939:
old  <	fdiv>
new  <	; Parameter double Â£temporary592 56>

2940:
old  <>
new  <	fstp qword [rbp + 56]>

2941:
old  < atan$45:>
new  <>

2942:
old  <	; Parameter double Â£temporary595 56>
new  < atan$7:>

2943:
old  <	fstp qword [rbp + 64]>
new  <	; Call atan 32 0>

2944:
old  <>
new  <	mov qword [rbp + 32], atan$8>

2945:
old  < atan$46:>
new  <	mov [rbp + 40], rbp>

2946:
old  <	; Call atan 32 0>
new  <	add rbp, 32>

2947:
old  <	mov qword [rbp + 40], atan$47>
new  <	jmp atan>

2948:
old  <	mov [rbp + 48], rbp>
new  <>

2949:
old  <	add rbp, 40>
new  < atan$8:>

2950:
old  <	jmp atan>
new  <	; PostCall 32>

2952:
old  < atan$47:>
new  < atan$9:>

2953:
old  <	; PostCall 32>
new  <	; GetReturnValue Â£temporary593>

2954:
old  <	fstp qword [rbp + 40]>
new  <>

2955:
old  <	fld qword [rbp + 32]>
new  < atan$10:>

2956:
old  <	fld qword [rbp + 40]>
new  <	; UnarySubtract Â£temporary594 Â£temporary593>

2957:
old  <>
new  <	fchs>

2958:
old  < atan$48:>
new  <>

2959:
old  <	; GetReturnValue Â£temporary596>
new  < atan$11:>

2960:
old  <>
new  <	; Return Â£temporary594>

2961:
old  < atan$49:>
new  <	mov rax, [rbp]>

2962:
old  <	; SignedMultiply Â£temporary597 2 Â£temporary596>
new  <	mov rdi, [rbp + 16]>

2963:
old  <	fmul>
new  <	mov rbp, [rbp + 8]>

2964:
old  <>
new  <	jmp rax>

2965:
old  < atan$50:>
new  <>

2966:
old  <	; Return Â£temporary597>
new  < atan$12:>

2967:
old  <	mov rax, [rbp]>
new  <	; PushFloat x>

2968:
old  <	mov rdi, [rbp + 16]>
new  <	fld qword [rbp + 24]>

2969:
old  <	mov rbp, [rbp + 8]>
new  <>

2970:
old  <	jmp rax>
new  < atan$13:>

2971:
old  <>
new  <	; PushFloat 1>

2972:
old  < atan$51:>
new  <	fld1>

2973:
old  <	; PushFloat 0>
new  <>

2974:
old  <	fldz>
new  < atan$14:>

2975:
old  <>
new  <	; SignedLessThanEqual 26 x 1>

2976:
old  < atan$52:>
new  <	fcompp>

2977:
old  <	; PopFloat sum>
new  <	fstsw ax>

2978:
old  <	fstp qword [rbp + 40]>
new  <	sahf>

2979:
old  <>
new  <	jae atan$26>

2980:
old  < atan$53:>
new  <>

2981:
old  <	; PushFloat 1>
new  < atan$15:>

2982:
old  <	fld1>
new  <	; PushFloat 1.57079632679489661923132165>

2983:
old  <>
new  <	fld qword [float8$1.57079632679489661923132165#]>

2984:
old  < atan$54:>
new  <>

2985:
old  <	; PopFloat sign>
new  < atan$16:>

2986:
old  <	fstp qword [rbp + 48]>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 1>

2987:
old  <>
new  <	fstp qword [rbp + 32]>

2988:
old  < atan$55:>
new  <>

2989:
old  <	; PushFloat 1>
new  < atan$17:>

2990:
old  <	fld1>
new  <	; PushFloat 1>

2991:
old  <>
new  <	fld1>

2992:
old  < atan$56:>
new  <>

2993:
old  <	; PopFloat denominator>
new  < atan$18:>

2994:
old  <	fstp qword [rbp + 56]>
new  <	; PushFloat x>

2995:
old  <>
new  <	fld qword [rbp + 24]>

2996:
old  < atan$57:>
new  <>

2997:
old  <	; PushFloat x>
new  < atan$19:>

2998:
old  <	fld qword [rbp + 24]>
new  <	; SignedDivide Â£temporary596 1 x>

2999:
old  <>
new  <	fdiv>

3000:
old  < atan$58:>
new  <>

3001:
old  <	; PopFloat product>
new  < atan$20:>

3002:
old  <	fstp qword [rbp + 64]>
new  <	; Parameter double Â£temporary596 56>

3003:
old  <>
new  <	fstp qword [rbp + 64]>

3004:
old  < atan$59:>
new  <>

3005:
old  <	; PushFloat sign>
new  < atan$21:>

3006:
old  <	fld qword [rbp + 48]>
new  <	; Call atan 32 0>

3007:
old  <>
new  <	mov qword [rbp + 40], atan$22>

3008:
old  < atan$60:>
new  <	mov [rbp + 48], rbp>

3009:
old  <	; PushFloat product>
new  <	add rbp, 40>

3010:
old  <	fld qword [rbp + 64]>
new  <	jmp atan>

3012:
old  < atan$61:>
new  < atan$22:>

3013:
old  <	; SignedMultiply Â£temporary598 sign product>
new  <	; PostCall 32>

3014:
old  <	fmul>
new  <	fstp qword [rbp + 40]>

3015:
old  <>
new  <	fld qword [rbp + 32]>

3016:
old  < atan$62:>
new  <	fld qword [rbp + 40]>

3017:
old  <	; PushFloat denominator>
new  <>

3018:
old  <	fld qword [rbp + 56]>
new  < atan$23:>

3019:
old  <>
new  <	; GetReturnValue Â£temporary597>

3020:
old  < atan$63:>
new  <>

3021:
old  <	; SignedDivide Â£temporary599 Â£temporary598 denominator>
new  < atan$24:>

3022:
old  <	fdiv>
new  <	; BinarySubtract Â£temporary598 1.57079632679489661923132165 Â£temporary597>

3023:
old  <>
new  <	fsub>

3024:
old  < atan$64:>
new  <>

3025:
old  <	; PopFloat term>
new  < atan$25:>

3026:
old  <	fstp qword [rbp + 32]>
new  <	; Return Â£temporary598>

3027:
old  <>
new  <	mov rax, [rbp]>

3028:
old  < atan$65:>
new  <	mov rdi, [rbp + 16]>

3029:
old  <	; PushFloat sum>
new  <	mov rbp, [rbp + 8]>

3030:
old  <	fld qword [rbp + 40]>
new  <	jmp rax>

3032:
old  < atan$66:>
new  < atan$26:>

3033:
old  <	; PushFloat term>
new  <	; PushFloat x>

3034:
old  <	fld qword [rbp + 32]>
new  <	fld qword [rbp + 24]>

3036:
old  < atan$67:>
new  < atan$27:>

3037:
old  <	; BinaryAdd Â£temporary600 sum term>
new  <	; PushFloat 0.5>

3038:
old  <	fadd>
new  <	fld qword [float8$0.5#]>

3040:
old  < atan$68:>
new  < atan$28:>

3041:
old  <	; PopFloat sum>
new  <	; SignedLessThanEqual 51 x 0.5>

3042:
old  <	fstp qword [rbp + 40]>
new  <	fcompp>

3043:
old  <>
new  <	fstsw ax>

3044:
old  < atan$69:>
new  <	sahf>

3045:
old  <	; PushFloat sign>
new  <	jae atan$51>

3046:
old  <	fld qword [rbp + 48]>
new  <>

3047:
old  <>
new  < atan$29:>

3048:
old  < atan$70:>
new  <	; PushFloat 2>

3049:
old  <	; UnarySubtract Â£temporary601 sign>
new  <	fld qword [float8$2#]>

3050:
old  <	fchs>
new  <>

3051:
old  <>
new  < atan$30:>

3052:
old  < atan$71:>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 1>

3053:
old  <	; PopFloat sign>
new  <	fstp qword [rbp + 32]>

3054:
old  <	fstp qword [rbp + 48]>
new  <>

3055:
old  <>
new  < atan$31:>

3056:
old  < atan$72:>
new  <	; PushFloat x>

3057:
old  <	; PushFloat product>
new  <	fld qword [rbp + 24]>

3058:
old  <	fld qword [rbp + 64]>
new  <>

3059:
old  <>
new  < atan$32:>

3060:
old  < atan$73:>
new  <	; PushFloat 1>

3061:
old  <	; PushFloat x>
new  <	fld1>

3062:
old  <	fld qword [rbp + 24]>
new  <>

3063:
old  <>
new  < atan$33:>

3064:
old  < atan$74:>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 3>

3065:
old  <	; PushFloat x>
new  <	fstp qword [rbp + 40]>

3066:
old  <	fld qword [rbp + 24]>
new  <	fstp qword [rbp + 48]>

3068:
old  < atan$75:>
new  < atan$34:>

3069:
old  <	; SignedMultiply Â£temporary602 x x>
new  <	; PushFloat 1>

3070:
old  <	fmul>
new  <	fld1>

3072:
old  < atan$76:>
new  < atan$35:>

3073:
old  <	; SignedMultiply Â£temporary603 product Â£temporary602>
new  <	; PushFloat x>

3074:
old  <	fmul>
new  <	fld qword [rbp + 24]>

3076:
old  < atan$77:>
new  < atan$36:>

3077:
old  <	; PopFloat product>
new  <	; PushFloat x>

3078:
old  <	fstp qword [rbp + 64]>
new  <	fld qword [rbp + 24]>

3080:
old  < atan$78:>
new  < atan$37:>

3081:
old  <	; PushFloat denominator>
new  <	; SignedMultiply Â£temporary600 x x>

3082:
old  <	fld qword [rbp + 56]>
new  <	fmul>

3084:
old  < atan$79:>
new  < atan$38:>

3085:
old  <	; PushFloat 2>
new  <	; BinaryAdd Â£temporary601 1 Â£temporary600>

3086:
old  <	fld qword [float8$2#]>
new  <	fadd>

3088:
old  < atan$80:>
new  < atan$39:>

3089:
old  <	; BinaryAdd Â£temporary604 denominator 2>
new  <	; Parameter double Â£temporary601 56>

3090:
old  <	fadd>
new  <	fstp qword [rbp + 88]>

3092:
old  < atan$81:>
new  < atan$40:>

3093:
old  <	; PopFloat denominator>
new  <	; Call sqrt 32 0>

3094:
old  <	fstp qword [rbp + 56]>
new  <	mov qword [rbp + 64], atan$41>

3095:
old  <>
new  <	mov [rbp + 72], rbp>

3096:
old  < atan$82:>
new  <	add rbp, 64>

3097:
old  <	; CheckTrackMapFloatStack>
new  <	jmp sqrt>

3099:
old  < atan$83:>
new  < atan$41:>

3100:
old  <	; PreCall 72 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; PostCall 32>

3101:
old  <>
new  <	fstp qword [rbp + 56]>

3102:
old  < atan$84:>
new  <	fld qword [rbp + 48]>

3103:
old  <	; PushFloat term>
new  <	fld qword [rbp + 40]>

3104:
old  <	fld qword [rbp + 32]>
new  <	fld qword [rbp + 56]>

3106:
old  < atan$85:>
new  < atan$42:>

3107:
old  <	; Parameter double term 96>
new  <	; GetReturnValue Â£temporary602>

3108:
old  <	fstp qword [rbp + 96]>
new  <>

3109:
old  <>
new  < atan$43:>

3110:
old  < atan$86:>
new  <	; BinaryAdd Â£temporary603 1 Â£temporary602>

3111:
old  <	; Call fabs 72 0>
new  <	fadd>

3112:
old  <	mov qword [rbp + 72], atan$87>
new  <>

3113:
old  <	mov [rbp + 80], rbp>
new  < atan$44:>

3114:
old  <	add rbp, 72>
new  <	; SignedDivide Â£temporary604 x Â£temporary603>

3115:
old  <	jmp fabs>
new  <	fdiv>

3117:
old  < atan$87:>
new  < atan$45:>

3118:
old  <	; PostCall 72>
new  <	; Parameter double Â£temporary604 56>

3119:
old  <>
new  <	fstp qword [rbp + 64]>

3120:
old  < atan$88:>
new  <>

3121:
old  <	; GetReturnValue Â£temporary605>
new  < atan$46:>

3122:
old  <>
new  <	; Call atan 32 0>

3123:
old  < atan$89:>
new  <	mov qword [rbp + 40], atan$47>

3124:
old  <	; PushFloat 0.000000001>
new  <	mov [rbp + 48], rbp>

3125:
old  <	fld qword [float8$0.000000001#]>
new  <	add rbp, 40>

3126:
old  <>
new  <	jmp atan>

3127:
old  < atan$90:>
new  <>

3128:
old  <	; SignedGreaterThanEqual 59 Â£temporary605 0.000000001>
new  < atan$47:>

3129:
old  <	fcompp>
new  <	; PostCall 32>

3130:
old  <	fstsw ax>
new  <	fstp qword [rbp + 40]>

3131:
old  <	sahf>
new  <	fld qword [rbp + 32]>

3132:
old  <	jbe atan$59>
new  <	fld qword [rbp + 40]>

3134:
old  < atan$91:>
new  < atan$48:>

3135:
old  <	; PushFloat sum>
new  <	; GetReturnValue Â£temporary605>

3136:
old  <	fld qword [rbp + 40]>
new  <>

3137:
old  <>
new  < atan$49:>

3138:
old  < atan$92:>
new  <	; SignedMultiply Â£temporary606 2 Â£temporary605>

3139:
old  <	; Return sum>
new  <	fmul>

3140:
old  <	mov rax, [rbp]>
new  <>

3141:
old  <	mov rdi, [rbp + 16]>
new  < atan$50:>

3142:
old  <	mov rbp, [rbp + 8]>
new  <	; Return Â£temporary606>

3143:
old  <	jmp rax>
new  <	mov rax, [rbp]>

3144:
old  <>
new  <	mov rdi, [rbp + 16]>

3145:
old  < atan$93:>
new  <	mov rbp, [rbp + 8]>

3146:
old  <	; FunctionEnd atan>
new  <	jmp rax>

3148:
old  <section .text>
new  < atan$51:>

3149:
old  <>
new  <	; PushFloat 0>

3150:
old  < atan2:>
new  <	fldz>

3151:
old  <	; PushFloat y>
new  <>

3152:
old  <	fld qword [rbp + 32]>
new  < atan$52:>

3153:
old  <>
new  <	; PopFloat sum>

3154:
old  < atan2$1:>
new  <	fstp qword [rbp + 40]>

3155:
old  <	; PushFloat 0>
new  <>

3156:
old  <	fldz>
new  < atan$53:>

3157:
old  <>
new  <	; PushFloat 1>

3158:
old  < atan2$2:>
new  <	fld1>

3159:
old  <	; Equal 12 y 0>
new  <>

3160:
old  <	fcompp>
new  < atan$54:>

3161:
old  <	fstsw ax>
new  <	; PopFloat sign>

3162:
old  <	sahf>
new  <	fstp qword [rbp + 48]>

3163:
old  <	je atan2$12>
new  <>

3164:
old  <>
new  < atan$55:>

3165:
old  < atan2$3:>
new  <	; PushFloat 1>

3166:
old  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	fld1>

3168:
old  < atan2$4:>
new  < atan$56:>

3169:
old  <	; PushFloat x>
new  <	; PopFloat denominator>

3170:
old  <	fld qword [rbp + 24]>
new  <	fstp qword [rbp + 56]>

3172:
old  < atan2$5:>
new  < atan$57:>

3173:
old  <	; PushFloat y>
new  <	; PushFloat x>

3174:
old  <	fld qword [rbp + 32]>
new  <	fld qword [rbp + 24]>

3176:
old  < atan2$6:>
new  < atan$58:>

3177:
old  <	; SignedDivide Â£temporary613 x y>
new  <	; PopFloat product>

3178:
old  <	fdiv>
new  <	fstp qword [rbp + 64]>

3180:
old  < atan2$7:>
new  < atan$59:>

3181:
old  <	; Parameter double Â£temporary613 64>
new  <	; PushFloat sign>

3182:
old  <	fstp qword [rbp + 64]>
new  <	fld qword [rbp + 48]>

3184:
old  < atan2$8:>
new  < atan$60:>

3185:
old  <	; Call atan 40 0>
new  <	; PushFloat product>

3186:
old  <	mov qword [rbp + 40], atan2$9>
new  <	fld qword [rbp + 64]>

3187:
old  <	mov [rbp + 48], rbp>
new  <>

3188:
old  <	add rbp, 40>
new  < atan$61:>

3189:
old  <	jmp atan>
new  <	; SignedMultiply Â£temporary607 sign product>

3190:
old  <>
new  <	fmul>

3191:
old  < atan2$9:>
new  <>

3192:
old  <	; PostCall 40>
new  < atan$62:>

3193:
old  <>
new  <	; PushFloat denominator>

3194:
old  < atan2$10:>
new  <	fld qword [rbp + 56]>

3195:
old  <	; GetReturnValue Â£temporary614>
new  <>

3196:
old  <>
new  < atan$63:>

3197:
old  < atan2$11:>
new  <	; SignedDivide Â£temporary608 Â£temporary607 denominator>

3198:
old  <	; Return Â£temporary614>
new  <	fdiv>

3199:
old  <	mov rax, [rbp]>
new  <>

3200:
old  <	mov rdi, [rbp + 16]>
new  < atan$64:>

3201:
old  <	mov rbp, [rbp + 8]>
new  <	; PopFloat term>

3202:
old  <	jmp rax>
new  <	fstp qword [rbp + 32]>

3204:
old  < atan2$12:>
new  < atan$65:>

3205:
old  <	; Assign errno 6>
new  <	; PushFloat sum>

3206:
old  <	mov dword [errno], 6>
new  <	fld qword [rbp + 40]>

3208:
old  < atan2$13:>
new  < atan$66:>

3209:
old  <	; PushFloat 0>
new  <	; PushFloat term>

3210:
old  <	fldz>
new  <	fld qword [rbp + 32]>

3212:
old  < atan2$14:>
new  < atan$67:>

3213:
old  <	; Return 0>
new  <	; BinaryAdd Â£temporary609 sum term>

3214:
old  <	mov rax, [rbp]>
new  <	fadd>

3215:
old  <	mov rdi, [rbp + 16]>
new  <>

3216:
old  <	mov rbp, [rbp + 8]>
new  < atan$68:>

3217:
old  <	jmp rax>
new  <	; PopFloat sum>

3218:
old  <>
new  <	fstp qword [rbp + 40]>

3219:
old  < atan2$15:>
new  <>

3220:
old  <	; FunctionEnd atan2>
new  < atan$69:>

3221:
old  <>
new  <	; PushFloat sign>

3222:
old  <section .text>
new  <	fld qword [rbp + 48]>

3224:
old  < sinh:>
new  < atan$70:>

3225:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; UnarySubtract Â£temporary610 sign>

3226:
old  <>
new  <	fchs>

3227:
old  < sinh$1:>
new  <>

3228:
old  <	; PushFloat x>
new  < atan$71:>

3229:
old  <	fld qword [rbp + 24]>
new  <	; PopFloat sign>

3230:
old  <>
new  <	fstp qword [rbp + 48]>

3231:
old  < sinh$2:>
new  <>

3232:
old  <	; Parameter double x 56>
new  < atan$72:>

3233:
old  <	fstp qword [rbp + 56]>
new  <	; PushFloat product>

3234:
old  <>
new  <	fld qword [rbp + 64]>

3235:
old  < sinh$3:>
new  <>

3236:
old  <	; Call exp 32 0>
new  < atan$73:>

3237:
old  <	mov qword [rbp + 32], sinh$4>
new  <	; PushFloat x>

3238:
old  <	mov [rbp + 40], rbp>
new  <	fld qword [rbp + 24]>

3239:
old  <	add rbp, 32>
new  <>

3240:
old  <	jmp exp>
new  < atan$74:>

3241:
old  <>
new  <	; PushFloat x>

3242:
old  < sinh$4:>
new  <	fld qword [rbp + 24]>

3243:
old  <	; PostCall 32>
new  <>

3244:
old  <>
new  < atan$75:>

3245:
old  < sinh$5:>
new  <	; SignedMultiply Â£temporary611 x x>

3246:
old  <	; GetReturnValue Â£temporary616>
new  <	fmul>

3248:
old  < sinh$6:>
new  < atan$76:>

3249:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 1>
new  <	; SignedMultiply Â£temporary612 product Â£temporary611>

3250:
old  <	fstp qword [rbp + 32]>
new  <	fmul>

3252:
old  < sinh$7:>
new  < atan$77:>

3253:
old  <	; PushFloat x>
new  <	; PopFloat product>

3254:
old  <	fld qword [rbp + 24]>
new  <	fstp qword [rbp + 64]>

3256:
old  < sinh$8:>
new  < atan$78:>

3257:
old  <	; UnarySubtract Â£temporary617 x>
new  <	; PushFloat denominator>

3258:
old  <	fchs>
new  <	fld qword [rbp + 56]>

3260:
old  < sinh$9:>
new  < atan$79:>

3261:
old  <	; Parameter double Â£temporary617 56>
new  <	; PushFloat 2>

3262:
old  <	fstp qword [rbp + 64]>
new  <	fld qword [float8$2#]>

3264:
old  < sinh$10:>
new  < atan$80:>

3265:
old  <	; Call exp 32 0>
new  <	; BinaryAdd Â£temporary613 denominator 2>

3266:
old  <	mov qword [rbp + 40], sinh$11>
new  <	fadd>

3267:
old  <	mov [rbp + 48], rbp>
new  <>

3268:
old  <	add rbp, 40>
new  < atan$81:>

3269:
old  <	jmp exp>
new  <	; PopFloat denominator>

3270:
old  <>
new  <	fstp qword [rbp + 56]>

3271:
old  < sinh$11:>
new  <>

3272:
old  <	; PostCall 32>
new  < atan$82:>

3273:
old  <	fstp qword [rbp + 40]>
new  <	; CheckTrackMapFloatStack>

3274:
old  <	fld qword [rbp + 32]>
new  <>

3275:
old  <	fld qword [rbp + 40]>
new  < atan$83:>

3276:
old  <>
new  <	; PreCall 72 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3277:
old  < sinh$12:>
new  <>

3278:
old  <	; GetReturnValue Â£temporary618>
new  < atan$84:>

3279:
old  <>
new  <	; PushFloat term>

3280:
old  < sinh$13:>
new  <	fld qword [rbp + 32]>

3281:
old  <	; BinarySubtract Â£temporary619 Â£temporary616 Â£temporary618>
new  <>

3282:
old  <	fsub>
new  < atan$85:>

3283:
old  <>
new  <	; Parameter double term 96>

3284:
old  < sinh$14:>
new  <	fstp qword [rbp + 96]>

3285:
old  <	; PushFloat 2>
new  <>

3286:
old  <	fld qword [float8$2#]>
new  < atan$86:>

3287:
old  <>
new  <	; Call fabs 72 0>

3288:
old  < sinh$15:>
new  <	mov qword [rbp + 72], atan$87>

3289:
old  <	; SignedDivide Â£temporary620 Â£temporary619 2>
new  <	mov [rbp + 80], rbp>

3290:
old  <	fdiv>
new  <	add rbp, 72>

3291:
old  <>
new  <	jmp fabs>

3292:
old  < sinh$16:>
new  <>

3293:
old  <	; Return Â£temporary620>
new  < atan$87:>

3294:
old  <	mov rax, [rbp]>
new  <	; PostCall 72>

3295:
old  <	mov rdi, [rbp + 16]>
new  <>

3296:
old  <	mov rbp, [rbp + 8]>
new  < atan$88:>

3297:
old  <	jmp rax>
new  <	; GetReturnValue Â£temporary614>

3299:
old  < sinh$17:>
new  < atan$89:>

3300:
old  <	; FunctionEnd sinh>
new  <	; PushFloat 0.000000001>

3301:
old  <>
new  <	fld qword [float8$0.000000001#]>

3302:
old  <section .text>
new  <>

3303:
old  <>
new  < atan$90:>

3304:
old  < cosh:>
new  <	; SignedGreaterThanEqual 59 Â£temporary614 0.000000001>

3305:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	fcompp>

3306:
old  <>
new  <	fstsw ax>

3307:
old  < cosh$1:>
new  <	sahf>

3308:
old  <	; PushFloat x>
new  <	jbe atan$59>

3309:
old  <	fld qword [rbp + 24]>
new  <>

3310:
old  <>
new  < atan$91:>

3311:
old  < cosh$2:>
new  <	; PushFloat sum>

3312:
old  <	; Parameter double x 56>
new  <	fld qword [rbp + 40]>

3313:
old  <	fstp qword [rbp + 56]>
new  <>

3314:
old  <>
new  < atan$92:>

3315:
old  < cosh$3:>
new  <	; Return sum>

3316:
old  <	; Call exp 32 0>
new  <	mov rax, [rbp]>

3317:
old  <	mov qword [rbp + 32], cosh$4>
new  <	mov rdi, [rbp + 16]>

3318:
old  <	mov [rbp + 40], rbp>
new  <	mov rbp, [rbp + 8]>

3319:
old  <	add rbp, 32>
new  <	jmp rax>

3320:
old  <	jmp exp>
new  <>

3321:
old  <>
new  < atan$93:>

3322:
old  < cosh$4:>
new  <	; FunctionEnd atan>

3323:
old  <	; PostCall 32>
new  <>

3324:
old  <>
new  <section .data>

3325:
old  < cosh$5:>
new  <>

3326:
old  <	; GetReturnValue Â£temporary623>
new  <float8$minus3.1415926535897932384626433#:>

3327:
old  <>
new  <	; Initializer Double -3.1415926535897932384626433>

3328:
old  < cosh$6:>
new  <	dq -3.1415926535897932384626433>

3329:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 1>
new  <>

3330:
old  <	fstp qword [rbp + 32]>
new  <section .data>

3332:
old  < cosh$7:>
new  <float8$minus1.57079632679489661923132165#:>

3333:
old  <	; PushFloat x>
new  <	; Initializer Double -1.57079632679489661923132165>

3334:
old  <	fld qword [rbp + 24]>
new  <	dq -1.57079632679489661923132165>

3336:
old  < cosh$8:>
new  <section .text>

3337:
old  <	; UnarySubtract Â£temporary624 x>
new  <>

3338:
old  <	fchs>
new  < atan2:>

3339:
old  <>
new  <	; PushFloat y>

3340:
old  < cosh$9:>
new  <	fld qword [rbp + 32]>

3341:
old  <	; Parameter double Â£temporary624 56>
new  <>

3342:
old  <	fstp qword [rbp + 64]>
new  < atan2$1:>

3343:
old  <>
new  <	; PushFloat 0>

3344:
old  < cosh$10:>
new  <	fldz>

3345:
old  <	; Call exp 32 0>
new  <>

3346:
old  <	mov qword [rbp + 40], cosh$11>
new  < atan2$2:>

3347:
old  <	mov [rbp + 48], rbp>
new  <	; SignedLessThanEqual 12 y 0>

3348:
old  <	add rbp, 40>
new  <	fcompp>

3349:
old  <	jmp exp>
new  <	fstsw ax>

3350:
old  <>
new  <	sahf>

3351:
old  < cosh$11:>
new  <	jae atan2$12>

3352:
old  <	; PostCall 32>
new  <>

3353:
old  <	fstp qword [rbp + 40]>
new  < atan2$3:>

3354:
old  <	fld qword [rbp + 32]>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3355:
old  <	fld qword [rbp + 40]>
new  <>

3356:
old  <>
new  < atan2$4:>

3357:
old  < cosh$12:>
new  <	; PushFloat x>

3358:
old  <	; GetReturnValue Â£temporary625>
new  <	fld qword [rbp + 24]>

3360:
old  < cosh$13:>
new  < atan2$5:>

3361:
old  <	; BinaryAdd Â£temporary626 Â£temporary623 Â£temporary625>
new  <	; PushFloat y>

3362:
old  <	fadd>
new  <	fld qword [rbp + 32]>

3364:
old  < cosh$14:>
new  < atan2$6:>

3365:
old  <	; PushFloat 2>
new  <	; SignedDivide Â£temporary622 x y>

3366:
old  <	fld qword [float8$2#]>
new  <	fdiv>

3368:
old  < cosh$15:>
new  < atan2$7:>

3369:
old  <	; SignedDivide Â£temporary627 Â£temporary626 2>
new  <	; Parameter double Â£temporary622 64>

3370:
old  <	fdiv>
new  <	fstp qword [rbp + 64]>

3372:
old  < cosh$16:>
new  < atan2$8:>

3373:
old  <	; Return Â£temporary627>
new  <	; Call atan 40 0>

3374:
old  <	mov rax, [rbp]>
new  <	mov qword [rbp + 40], atan2$9>

3375:
old  <	mov rdi, [rbp + 16]>
new  <	mov [rbp + 48], rbp>

3376:
old  <	mov rbp, [rbp + 8]>
new  <	add rbp, 40>

3377:
old  <	jmp rax>
new  <	jmp atan>

3379:
old  < cosh$17:>
new  < atan2$9:>

3380:
old  <	; FunctionEnd cosh>
new  <	; PostCall 40>

3382:
old  <section .text>
new  < atan2$10:>

3383:
old  <>
new  <	; GetReturnValue Â£temporary623>

3384:
old  < tanh:>
new  <>

3385:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < atan2$11:>

3386:
old  <>
new  <	; Return Â£temporary623>

3387:
old  < tanh$1:>
new  <	mov rax, [rbp]>

3388:
old  <	; PushFloat x>
new  <	mov rdi, [rbp + 16]>

3389:
old  <	fld qword [rbp + 24]>
new  <	mov rbp, [rbp + 8]>

3390:
old  <>
new  <	jmp rax>

3391:
old  < tanh$2:>
new  <>

3392:
old  <	; Parameter double x 56>
new  < atan2$12:>

3393:
old  <	fstp qword [rbp + 56]>
new  <	; PushFloat x>

3394:
old  <>
new  <	fld qword [rbp + 24]>

3395:
old  < tanh$3:>
new  <>

3396:
old  <	; Call sinh 32 0>
new  < atan2$13:>

3397:
old  <	mov qword [rbp + 32], tanh$4>
new  <	; PushFloat 0>

3398:
old  <	mov [rbp + 40], rbp>
new  <	fldz>

3399:
old  <	add rbp, 32>
new  <>

3400:
old  <	jmp sinh>
new  < atan2$14:>

3401:
old  <>
new  <	; SignedLessThan 29 x 0>

3402:
old  < tanh$4:>
new  <	fcompp>

3403:
old  <	; PostCall 32>
new  <	fstsw ax>

3404:
old  <>
new  <	sahf>

3405:
old  < tanh$5:>
new  <	ja atan2$29>

3406:
old  <	; GetReturnValue Â£temporary630>
new  <>

3407:
old  <>
new  < atan2$15:>

3408:
old  < tanh$6:>
new  <	; PushFloat y>

3409:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 1>
new  <	fld qword [rbp + 32]>

3410:
old  <	fstp qword [rbp + 32]>
new  <>

3411:
old  <>
new  < atan2$16:>

3412:
old  < tanh$7:>
new  <	; PushFloat 0>

3413:
old  <	; PushFloat x>
new  <	fldz>

3414:
old  <	fld qword [rbp + 24]>
new  <>

3415:
old  <>
new  < atan2$17:>

3416:
old  < tanh$8:>
new  <	; SignedGreaterThanEqual 29 y 0>

3417:
old  <	; Parameter double x 56>
new  <	fcompp>

3418:
old  <	fstp qword [rbp + 64]>
new  <	fstsw ax>

3419:
old  <>
new  <	sahf>

3420:
old  < tanh$9:>
new  <	jbe atan2$29>

3421:
old  <	; Call cosh 32 0>
new  <>

3422:
old  <	mov qword [rbp + 40], tanh$10>
new  < atan2$18:>

3423:
old  <	mov [rbp + 48], rbp>
new  <	; PushFloat 3.1415926535897932384626433>

3424:
old  <	add rbp, 40>
new  <	fld qword [float8$3.1415926535897932384626433#]>

3425:
old  <	jmp cosh>
new  <>

3426:
old  <>
new  < atan2$19:>

3427:
old  < tanh$10:>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 1>

3428:
old  <	; PostCall 32>
new  <	fstp qword [rbp + 40]>

3429:
old  <	fstp qword [rbp + 40]>
new  <>

3430:
old  <	fld qword [rbp + 32]>
new  < atan2$20:>

3431:
old  <	fld qword [rbp + 40]>
new  <	; PushFloat x>

3432:
old  <>
new  <	fld qword [rbp + 24]>

3433:
old  < tanh$11:>
new  <>

3434:
old  <	; GetReturnValue Â£temporary631>
new  < atan2$21:>

3435:
old  <>
new  <	; PushFloat y>

3436:
old  < tanh$12:>
new  <	fld qword [rbp + 32]>

3437:
old  <	; SignedDivide Â£temporary632 Â£temporary630 Â£temporary631>
new  <>

3438:
old  <	fdiv>
new  < atan2$22:>

3439:
old  <>
new  <	; SignedDivide Â£temporary627 x y>

3440:
old  < tanh$13:>
new  <	fdiv>

3441:
old  <	; Return Â£temporary632>
new  <>

3442:
old  <	mov rax, [rbp]>
new  < atan2$23:>

3443:
old  <	mov rdi, [rbp + 16]>
new  <	; Parameter double Â£temporary627 64>

3444:
old  <	mov rbp, [rbp + 8]>
new  <	fstp qword [rbp + 72]>

3445:
old  <	jmp rax>
new  <>

3446:
old  <>
new  < atan2$24:>

3447:
old  < tanh$14:>
new  <	; Call atan 40 0>

3448:
old  <	; FunctionEnd tanh>
new  <	mov qword [rbp + 48], atan2$25>

3449:
old  <>
new  <	mov [rbp + 56], rbp>

3450:
old  <section .text>
new  <	add rbp, 48>

3451:
old  <>
new  <	jmp atan>

3452:
old  < floor:>
new  <>

3453:
old  <	; PushFloat x>
new  < atan2$25:>

3454:
old  <	fld qword [rbp + 24]>
new  <	; PostCall 40>

3455:
old  <>
new  <	fstp qword [rbp + 48]>

3456:
old  < floor$1:>
new  <	fld qword [rbp + 40]>

3457:
old  <	; PushFloat 0>
new  <	fld qword [rbp + 48]>

3458:
old  <	fldz>
new  <>

3459:
old  <>
new  < atan2$26:>

3460:
old  < floor$2:>
new  <	; GetReturnValue Â£temporary628>

3461:
old  <	; SignedGreaterThanEqual 12 x 0>
new  <>

3462:
old  <	fcompp>
new  < atan2$27:>

3463:
old  <	fstsw ax>
new  <	; BinaryAdd Â£temporary629 3.1415926535897932384626433 Â£temporary628>

3464:
old  <	sahf>
new  <	fadd>

3465:
old  <	jbe floor$12>
new  <>

3466:
old  <>
new  < atan2$28:>

3467:
old  < floor$3:>
new  <	; Return Â£temporary629>

3468:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov rax, [rbp]>

3469:
old  <>
new  <	mov rdi, [rbp + 16]>

3470:
old  < floor$4:>
new  <	mov rbp, [rbp + 8]>

3471:
old  <	; PushFloat x>
new  <	jmp rax>

3472:
old  <	fld qword [rbp + 24]>
new  <>

3473:
old  <>
new  < atan2$29:>

3474:
old  < floor$5:>
new  <	; PushFloat x>

3475:
old  <	; UnarySubtract Â£temporary636 x>
new  <	fld qword [rbp + 24]>

3476:
old  <	fchs>
new  <>

3477:
old  <>
new  < atan2$30:>

3478:
old  < floor$6:>
new  <	; PushFloat 0>

3479:
old  <	; Parameter double Â£temporary636 56>
new  <	fldz>

3480:
old  <	fstp qword [rbp + 56]>
new  <>

3481:
old  <>
new  < atan2$31:>

3482:
old  < floor$7:>
new  <	; SignedGreaterThanEqual 46 x 0>

3483:
old  <	; Call ceil 32 0>
new  <	fcompp>

3484:
old  <	mov qword [rbp + 32], floor$8>
new  <	fstsw ax>

3485:
old  <	mov [rbp + 40], rbp>
new  <	sahf>

3486:
old  <	add rbp, 32>
new  <	jbe atan2$46>

3487:
old  <	jmp ceil>
new  <>

3488:
old  <>
new  < atan2$32:>

3489:
old  < floor$8:>
new  <	; PushFloat y>

3490:
old  <	; PostCall 32>
new  <	fld qword [rbp + 32]>

3492:
old  < floor$9:>
new  < atan2$33:>

3493:
old  <	; GetReturnValue Â£temporary637>
new  <	; PushFloat 0>

3494:
old  <>
new  <	fldz>

3495:
old  < floor$10:>
new  <>

3496:
old  <	; UnarySubtract Â£temporary638 Â£temporary637>
new  < atan2$34:>

3497:
old  <	fchs>
new  <	; SignedGreaterThanEqual 46 y 0>

3498:
old  <>
new  <	fcompp>

3499:
old  < floor$11:>
new  <	fstsw ax>

3500:
old  <	; Return Â£temporary638>
new  <	sahf>

3501:
old  <	mov rax, [rbp]>
new  <	jbe atan2$46>

3502:
old  <	mov rdi, [rbp + 16]>
new  <>

3503:
old  <	mov rbp, [rbp + 8]>
new  < atan2$35:>

3504:
old  <	jmp rax>
new  <	; PushFloat -3.1415926535897932384626433>

3505:
old  <>
new  <	fld qword [float8$minus3.1415926535897932384626433#]>

3506:
old  < floor$12:>
new  <>

3507:
old  <	; PushFloat x>
new  < atan2$36:>

3508:
old  <	fld qword [rbp + 24]>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 1>

3509:
old  <>
new  <	fstp qword [rbp + 40]>

3510:
old  < floor$13:>
new  <>

3511:
old  <	; FloatingToIntegral Â£temporary639 x>
new  < atan2$37:>

3512:
old  <	fistp qword [container8bytes#]>
new  <	; PushFloat x>

3513:
old  <	mov rax, [container8bytes#]>
new  <	fld qword [rbp + 24]>

3515:
old  < floor$14:>
new  < atan2$38:>

3516:
old  <	; IntegralToFloating Â£temporary640 Â£temporary639>
new  <	; PushFloat y>

3517:
old  <	mov [container8bytes#], rax>
new  <	fld qword [rbp + 32]>

3518:
old  <	fild qword [container8bytes#]>
new  <>

3519:
old  <>
new  < atan2$39:>

3520:
old  < floor$15:>
new  <	; SignedDivide Â£temporary633 x y>

3521:
old  <	; Return Â£temporary640>
new  <	fdiv>

3522:
old  <	mov rax, [rbp]>
new  <>

3523:
old  <	mov rdi, [rbp + 16]>
new  < atan2$40:>

3524:
old  <	mov rbp, [rbp + 8]>
new  <	; Parameter double Â£temporary633 64>

3525:
old  <	jmp rax>
new  <	fstp qword [rbp + 72]>

3527:
old  < floor$16:>
new  < atan2$41:>

3528:
old  <	; FunctionEnd floor>
new  <	; Call atan 40 0>

3529:
old  <>
new  <	mov qword [rbp + 48], atan2$42>

3530:
old  <section .data>
new  <	mov [rbp + 56], rbp>

3531:
old  <>
new  <	add rbp, 48>

3532:
old  <float8$0.999999999999#:>
new  <	jmp atan>

3533:
old  <	; Initializer Double 0.999999999999>
new  <>

3534:
old  <	dq 0.999999999999>
new  < atan2$42:>

3535:
old  <>
new  <	; PostCall 40>

3536:
old  <section .text>
new  <	fstp qword [rbp + 48]>

3537:
old  <>
new  <	fld qword [rbp + 40]>

3538:
old  < ceil:>
new  <	fld qword [rbp + 48]>

3539:
old  <	; PushFloat x>
new  <>

3540:
old  <	fld qword [rbp + 24]>
new  < atan2$43:>

3541:
old  <>
new  <	; GetReturnValue Â£temporary634>

3542:
old  < ceil$1:>
new  <>

3543:
old  <	; PushFloat 0>
new  < atan2$44:>

3544:
old  <	fldz>
new  <	; BinaryAdd Â£temporary635 -3.1415926535897932384626433 Â£temporary634>

3545:
old  <>
new  <	fadd>

3546:
old  < ceil$2:>
new  <>

3547:
old  <	; SignedGreaterThanEqual 12 x 0>
new  < atan2$45:>

3548:
old  <	fcompp>
new  <	; Return Â£temporary635>

3549:
old  <	fstsw ax>
new  <	mov rax, [rbp]>

3550:
old  <	sahf>
new  <	mov rdi, [rbp + 16]>

3551:
old  <	jbe ceil$12>
new  <	mov rbp, [rbp + 8]>

3552:
old  <>
new  <	jmp rax>

3553:
old  < ceil$3:>
new  <>

3554:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < atan2$46:>

3555:
old  <>
new  <	; PushFloat x>

3556:
old  < ceil$4:>
new  <	fld qword [rbp + 24]>

3557:
old  <	; PushFloat x>
new  <>

3558:
old  <	fld qword [rbp + 24]>
new  < atan2$47:>

3559:
old  <>
new  <	; PushFloat 0>

3560:
old  < ceil$5:>
new  <	fldz>

3561:
old  <	; UnarySubtract Â£temporary643 x>
new  <>

3562:
old  <	fchs>
new  < atan2$48:>

3563:
old  <>
new  <	; SignedLessThanEqual 54 x 0>

3564:
old  < ceil$6:>
new  <	fcompp>

3565:
old  <	; Parameter double Â£temporary643 56>
new  <	fstsw ax>

3566:
old  <	fstp qword [rbp + 56]>
new  <	sahf>

3567:
old  <>
new  <	jae atan2$54>

3568:
old  < ceil$7:>
new  <>

3569:
old  <	; Call floor 32 0>
new  < atan2$49:>

3570:
old  <	mov qword [rbp + 32], ceil$8>
new  <	; PushFloat y>

3571:
old  <	mov [rbp + 40], rbp>
new  <	fld qword [rbp + 32]>

3572:
old  <	add rbp, 32>
new  <>

3573:
old  <	jmp floor>
new  < atan2$50:>

3574:
old  <>
new  <	; PushFloat 0>

3575:
old  < ceil$8:>
new  <	fldz>

3576:
old  <	; PostCall 32>
new  <>

3577:
old  <>
new  < atan2$51:>

3578:
old  < ceil$9:>
new  <	; NotEqual 54 y 0>

3579:
old  <	; GetReturnValue Â£temporary644>
new  <	fcompp>

3580:
old  <>
new  <	fstsw ax>

3581:
old  < ceil$10:>
new  <	sahf>

3582:
old  <	; UnarySubtract Â£temporary645 Â£temporary644>
new  <	jne atan2$54>

3583:
old  <	fchs>
new  <>

3584:
old  <>
new  < atan2$52:>

3585:
old  < ceil$11:>
new  <	; PushFloat 1.57079632679489661923132165>

3586:
old  <	; Return Â£temporary645>
new  <	fld qword [float8$1.57079632679489661923132165#]>

3587:
old  <	mov rax, [rbp]>
new  <>

3588:
old  <	mov rdi, [rbp + 16]>
new  < atan2$53:>

3589:
old  <	mov rbp, [rbp + 8]>
new  <	; Return 1.57079632679489661923132165>

3590:
old  <	jmp rax>
new  <	mov rax, [rbp]>

3591:
old  <>
new  <	mov rdi, [rbp + 16]>

3592:
old  < ceil$12:>
new  <	mov rbp, [rbp + 8]>

3593:
old  <	; PushFloat x>
new  <	jmp rax>

3594:
old  <	fld qword [rbp + 24]>
new  <>

3595:
old  <>
new  < atan2$54:>

3596:
old  < ceil$13:>
new  <	; PushFloat x>

3597:
old  <	; PushFloat 0.999999999999>
new  <	fld qword [rbp + 24]>

3598:
old  <	fld qword [float8$0.999999999999#]>
new  <>

3599:
old  <>
new  < atan2$55:>

3600:
old  < ceil$14:>
new  <	; PushFloat 0>

3601:
old  <	; BinaryAdd Â£temporary646 x 0.999999999999>
new  <	fldz>

3602:
old  <	fadd>
new  <>

3603:
old  <>
new  < atan2$56:>

3604:
old  < ceil$15:>
new  <	; SignedGreaterThanEqual 62 x 0>

3605:
old  <	; FloatingToIntegral Â£temporary647 Â£temporary646>
new  <	fcompp>

3606:
old  <	fistp qword [container8bytes#]>
new  <	fstsw ax>

3607:
old  <	mov rax, [container8bytes#]>
new  <	sahf>

3608:
old  <>
new  <	jbe atan2$62>

3609:
old  < ceil$16:>
new  <>

3610:
old  <	; IntegralToFloating Â£temporary648 Â£temporary647>
new  < atan2$57:>

3611:
old  <	mov [container8bytes#], rax>
new  <	; PushFloat y>

3612:
old  <	fild qword [container8bytes#]>
new  <	fld qword [rbp + 32]>

3614:
old  < ceil$17:>
new  < atan2$58:>

3615:
old  <	; Return Â£temporary648>
new  <	; PushFloat 0>

3616:
old  <	mov rax, [rbp]>
new  <	fldz>

3617:
old  <	mov rdi, [rbp + 16]>
new  <>

3618:
old  <	mov rbp, [rbp + 8]>
new  < atan2$59:>

3619:
old  <	jmp rax>
new  <	; NotEqual 62 y 0>

3620:
old  <>
new  <	fcompp>

3621:
old  < ceil$18:>
new  <	fstsw ax>

3622:
old  <	; FunctionEnd ceil>
new  <	sahf>

3623:
old  <>
new  <	jne atan2$62>

3624:
old  <section .text>
new  <>

3625:
old  <>
new  < atan2$60:>

3626:
old  < round:>
new  <	; PushFloat -1.57079632679489661923132165>

3627:
old  <	; PushFloat x>
new  <	fld qword [float8$minus1.57079632679489661923132165#]>

3628:
old  <	fld qword [rbp + 24]>
new  <>

3629:
old  <>
new  < atan2$61:>

3630:
old  < round$1:>
new  <	; Return -1.57079632679489661923132165>

3631:
old  <	; PushFloat 0>
new  <	mov rax, [rbp]>

3632:
old  <	fldz>
new  <	mov rdi, [rbp + 16]>

3633:
old  <>
new  <	mov rbp, [rbp + 8]>

3634:
old  < round$2:>
new  <	jmp rax>

3635:
old  <	; SignedGreaterThanEqual 8 x 0>
new  <>

3636:
old  <	fcompp>
new  < atan2$62:>

3637:
old  <	fstsw ax>
new  <	; Assign errno 6>

3638:
old  <	sahf>
new  <	mov dword [errno], 6>

3639:
old  <	jbe round$8>
new  <>

3640:
old  <>
new  < atan2$63:>

3641:
old  < round$3:>
new  <	; PushFloat 0>

3642:
old  <	; PushFloat x>
new  <	fldz>

3643:
old  <	fld qword [rbp + 24]>
new  <>

3644:
old  <>
new  < atan2$64:>

3645:
old  < round$4:>
new  <	; Return 0>

3646:
old  <	; PushFloat 0.5>
new  <	mov rax, [rbp]>

3647:
old  <	fld qword [float8$0.5#]>
new  <	mov rdi, [rbp + 16]>

3648:
old  <>
new  <	mov rbp, [rbp + 8]>

3649:
old  < round$5:>
new  <	jmp rax>

3650:
old  <	; BinarySubtract Â£temporary651 x 0.5>
new  <>

3651:
old  <	fsub>
new  < atan2$65:>

3652:
old  <>
new  <	; FunctionEnd atan2>

3653:
old  < round$6:>
new  <>

3654:
old  <	; DecreaseStack>
new  <section .text>

3656:
old  < round$7:>
new  < sinh:>

3657:
old  <	; Goto 11>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3658:
old  <	jmp round$11>
new  <>

3659:
old  <>
new  < sinh$1:>

3660:
old  < round$8:>
new  <	; PushFloat x>

3661:
old  <	; PushFloat x>
new  <	fld qword [rbp + 24]>

3662:
old  <	fld qword [rbp + 24]>
new  <>

3663:
old  <>
new  < sinh$2:>

3664:
old  < round$9:>
new  <	; Parameter double x 56>

3665:
old  <	; PushFloat 0.5>
new  <	fstp qword [rbp + 56]>

3666:
old  <	fld qword [float8$0.5#]>
new  <>

3667:
old  <>
new  < sinh$3:>

3668:
old  < round$10:>
new  <	; Call exp 32 0>

3669:
old  <	; BinaryAdd Â£temporary652 x 0.5>
new  <	mov qword [rbp + 32], sinh$4>

3670:
old  <	fadd>
new  <	mov [rbp + 40], rbp>

3671:
old  <>
new  <	add rbp, 32>

3672:
old  < round$11:>
new  <	jmp exp>

3673:
old  <	; FloatingToIntegral Â£temporary654 Â£temporary653>
new  <>

3674:
old  <	fistp qword [container8bytes#]>
new  < sinh$4:>

3675:
old  <	mov rax, [container8bytes#]>
new  <	; PostCall 32>

3677:
old  < round$12:>
new  < sinh$5:>

3678:
old  <	; IntegralToFloating Â£temporary655 Â£temporary654>
new  <	; GetReturnValue Â£temporary645>

3679:
old  <	mov [container8bytes#], rax>
new  <>

3680:
old  <	fild qword [container8bytes#]>
new  < sinh$6:>

3681:
old  <>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 1>

3682:
old  < round$13:>
new  <	fstp qword [rbp + 32]>

3683:
old  <	; Return Â£temporary655>
new  <>

3684:
old  <	mov rax, [rbp]>
new  < sinh$7:>

3685:
old  <	mov rdi, [rbp + 16]>
new  <	; PushFloat x>

3686:
old  <	mov rbp, [rbp + 8]>
new  <	fld qword [rbp + 24]>

3687:
old  <	jmp rax>
new  <>

3688:
old  <>
new  < sinh$8:>

3689:
old  < round$14:>
new  <	; UnarySubtract Â£temporary646 x>

3690:
old  <	; FunctionEnd round>
new  <	fchs>

3692:
old  <section .text>
new  < sinh$9:>

3693:
old  <>
new  <	; Parameter double Â£temporary646 56>

3694:
old  < fabs:>
new  <	fstp qword [rbp + 64]>

3695:
old  <	; PushFloat x>
new  <>

3696:
old  <	fld qword [rbp + 24]>
new  < sinh$10:>

3697:
old  <>
new  <	; Call exp 32 0>

3698:
old  < fabs$1:>
new  <	mov qword [rbp + 40], sinh$11>

3699:
old  <	; PushFloat 0>
new  <	mov [rbp + 48], rbp>

3700:
old  <	fldz>
new  <	add rbp, 40>

3701:
old  <>
new  <	jmp exp>

3702:
old  < fabs$2:>
new  <>

3703:
old  <	; SignedGreaterThanEqual 7 x 0>
new  < sinh$11:>

3704:
old  <	fcompp>
new  <	; PostCall 32>

3705:
old  <	fstsw ax>
new  <	fstp qword [rbp + 40]>

3706:
old  <	sahf>
new  <	fld qword [rbp + 32]>

3707:
old  <	jbe fabs$7>
new  <	fld qword [rbp + 40]>

3709:
old  < fabs$3:>
new  < sinh$12:>

3710:
old  <	; PushFloat x>
new  <	; GetReturnValue Â£temporary647>

3711:
old  <	fld qword [rbp + 24]>
new  <>

3712:
old  <>
new  < sinh$13:>

3713:
old  < fabs$4:>
new  <	; BinarySubtract Â£temporary648 Â£temporary645 Â£temporary647>

3714:
old  <	; UnarySubtract Â£temporary657 x>
new  <	fsub>

3715:
old  <	fchs>
new  <>

3716:
old  <>
new  < sinh$14:>

3717:
old  < fabs$5:>
new  <	; PushFloat 2>

3718:
old  <	; DecreaseStack>
new  <	fld qword [float8$2#]>

3720:
old  < fabs$6:>
new  < sinh$15:>

3721:
old  <	; Goto 8>
new  <	; SignedDivide Â£temporary649 Â£temporary648 2>

3722:
old  <	jmp fabs$8>
new  <	fdiv>

3724:
old  < fabs$7:>
new  < sinh$16:>

3725:
old  <	; PushFloat x>
new  <	; Return Â£temporary649>

3726:
old  <	fld qword [rbp + 24]>
new  <	mov rax, [rbp]>

3727:
old  <>
new  <	mov rdi, [rbp + 16]>

3728:
old  < fabs$8:>
new  <	mov rbp, [rbp + 8]>

3729:
old  <	; Return Â£temporary658>
new  <	jmp rax>

3730:
old  <	mov rax, [rbp]>
new  <>

3731:
old  <	mov rdi, [rbp + 16]>
new  < sinh$17:>

3732:
old  <	mov rbp, [rbp + 8]>
new  <	; FunctionEnd sinh>

3733:
old  <	jmp rax>
new  <>

3734:
old  <>
new  <section .text>

3735:
old  < fabs$9:>
new  <>

3736:
old  <	; FunctionEnd fabs>
new  < cosh:>

10:
old  <	; InspectRegister Â£temporary659 rbp>
new  <	; InspectRegister Â£temporary688 rbp>

13:
old  <	; Assign rbp_pointer Â£temporary659>
new  <	; Assign rbp_pointer Â£temporary688>

17:
old  <	; Dereference Â£temporary660 -> buf buf 0>
new  <	; Dereference Â£temporary689 -> buf buf 0>

21:
old  <	; Dereference Â£temporary661 -> rbp_pointer rbp_pointer 0>
new  <	; Dereference Â£temporary690 -> rbp_pointer rbp_pointer 0>

25:
old  <	; Assign Â£temporary660 -> buf Â£temporary661 -> rbp_pointer>
new  <	; Assign Â£temporary689 -> buf Â£temporary690 -> rbp_pointer>

30:
old  <	; Dereference Â£temporary662 -> buf buf 0>
new  <	; Dereference Â£temporary691 -> buf buf 0>

34:
old  <	; Dereference Â£temporary663 -> rbp_pointer rbp_pointer 0>
new  <	; Dereference Â£temporary692 -> rbp_pointer rbp_pointer 0>

38:
old  <	; Assign Â£temporary662 -> buf Â£temporary663 -> rbp_pointer>
new  <	; Assign Â£temporary691 -> buf Â£temporary692 -> rbp_pointer>

43:
old  <	; Dereference Â£temporary664 -> buf buf 0>
new  <	; Dereference Â£temporary693 -> buf buf 0>

47:
old  <	; Dereference Â£temporary665 -> rbp_pointer rbp_pointer 0>
new  <	; Dereference Â£temporary694 -> rbp_pointer rbp_pointer 0>

51:
old  <	; Assign Â£temporary664 -> buf Â£temporary665 -> rbp_pointer>
new  <	; Assign Â£temporary693 -> buf Â£temporary694 -> rbp_pointer>

73:
old  <	; Dereference Â£temporary668 -> buf buf 0>
new  <	; Dereference Â£temporary697 -> buf buf 0>

77:
old  <	; AssignRegister rcx Â£temporary668 -> buf>
new  <	; AssignRegister rcx Â£temporary697 -> buf>

81:
old  <	; Dereference Â£temporary670 -> buf buf 0>
new  <	; Dereference Â£temporary699 -> buf buf 0>

85:
old  <	; AssignRegister rdi Â£temporary670 -> buf>
new  <	; AssignRegister rdi Â£temporary699 -> buf>

89:
old  <	; Dereference Â£temporary672 -> buf buf 0>
new  <	; Dereference Â£temporary701 -> buf buf 0>

93:
old  <	; AssignRegister rbp Â£temporary672 -> buf>
new  <	; AssignRegister rbp Â£temporary701 -> buf>

11:
old  <	; Empty>
new  <	; Return>

12:
old  <>
new  <	mov rax, [rbp]>

13:
old  < signal$1:>
new  <	mov rdi, [rbp + 16]>

14:
old  <	; Return>
new  <	mov rbp, [rbp + 8]>

15:
old  <	mov rax, [rbp]>
new  <	jmp rax>

16:
old  <	mov rdi, [rbp + 16]>
new  <>

17:
old  <	mov rbp, [rbp + 8]>
new  < signal$1:>

18:
old  <	jmp rax>
new  <	; FunctionEnd signal>

20:
old  < signal$2:>
new  <section .data>

21:
old  <	; FunctionEnd signal>
new  <>

22:
old  <>
new  <string_Raise20default0A#:>

23:
old  <section .data>
new  <	; Initializer String Raise default\n>

24:
old  <>
new  <	db "Raise default", 10, 0>

25:
old  <string_Raise20default0A#:>
new  <>

26:
old  <	; Initializer String Raise default\n>
new  <section .data>

27:
old  <	db "Raise default", 10, 0>
new  <>

28:
old  <>
new  <string_Raise20error0A#:>

29:
old  <section .data>
new  <	; Initializer String Raise error\n>

30:
old  <>
new  <	db "Raise error", 10, 0>

31:
old  <string_Raise20error0A#:>
new  <>

32:
old  <	; Initializer String Raise error\n>
new  <section .data>

33:
old  <	db "Raise error", 10, 0>
new  <>

34:
old  <>
new  <string_Raise20function2C20calling2025i20with2025i0A#:>

35:
old  <section .data>
new  <	; Initializer String Raise function, calling %i with %i\n>

36:
old  <>
new  <	db "Raise function, calling %i with %i", 10, 0>

37:
old  <string_Raise20function2C20calling2025i20with2025i0A#:>
new  <>

38:
old  <	; Initializer String Raise function, calling %i with %i\n>
new  <section .text>

39:
old  <	db "Raise function, calling %i with %i", 10, 0>
new  <>

40:
old  <>
new  < raise:>

41:
old  <section .text>
new  <	; Assign func 0>

42:
old  <>
new  <	mov qword [rbp + 28], 0>

43:
old  < raise:>
new  <>

44:
old  <	; Assign func 0>
new  < raise$1:>

45:
old  <	mov qword [rbp + 28], 0>
new  <	; NotEqual 7 func 0>

46:
old  <>
new  <	cmp qword [rbp + 28], 0>

47:
old  < raise$1:>
new  <	jne raise$7>

48:
old  <	; NotEqual 7 func 0>
new  <>

49:
old  <	cmp qword [rbp + 28], 0>
new  < raise$2:>

50:
old  <	jne raise$7>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

52:
old  < raise$2:>
new  < raise$3:>

53:
old  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter pointer "Raise default\n" 60>

54:
old  <>
new  <	mov qword [rbp + 60], string_Raise20default0A#>

55:
old  < raise$3:>
new  <>

56:
old  <	; Parameter pointer "Raise default\n" 60>
new  < raise$4:>

57:
old  <	mov qword [rbp + 60], string_Raise20default0A#>
new  <	; Call printf 36 0>

58:
old  <>
new  <	mov qword [rbp + 36], raise$5>

59:
old  < raise$4:>
new  <	mov [rbp + 44], rbp>

60:
old  <	; Call printf 36 0>
new  <	add rbp, 36>

61:
old  <	mov qword [rbp + 36], raise$5>
new  <	mov rdi, rbp>

62:
old  <	mov [rbp + 44], rbp>
new  <	jmp printf>

63:
old  <	add rbp, 36>
new  <>

64:
old  <	mov rdi, rbp>
new  < raise$5:>

65:
old  <	jmp printf>
new  <	; PostCall 36>

67:
old  < raise$5:>
new  < raise$6:>

68:
old  <	; PostCall 36>
new  <	; Return 1>

69:
old  <>
new  <	mov ebx, 1>

70:
old  < raise$6:>
new  <	mov rax, [rbp]>

71:
old  <	; Return 1>
new  <	mov rdi, [rbp + 16]>

72:
old  <	mov ebx, 1>
new  <	mov rbp, [rbp + 8]>

73:
old  <	mov rax, [rbp]>
new  <	jmp rax>

74:
old  <	mov rdi, [rbp + 16]>
new  <>

75:
old  <	mov rbp, [rbp + 8]>
new  < raise$7:>

76:
old  <	jmp rax>
new  <	; NotEqual 13 func 0>

77:
old  <>
new  <	cmp qword [rbp + 28], 0>

78:
old  < raise$7:>
new  <	jne raise$13>

79:
old  <	; NotEqual 13 func 0>
new  <>

80:
old  <	cmp qword [rbp + 28], 0>
new  < raise$8:>

81:
old  <	jne raise$13>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

83:
old  < raise$8:>
new  < raise$9:>

84:
old  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter pointer "Raise error\n" 60>

85:
old  <>
new  <	mov qword [rbp + 60], string_Raise20error0A#>

86:
old  < raise$9:>
new  <>

87:
old  <	; Parameter pointer "Raise error\n" 60>
new  < raise$10:>

88:
old  <	mov qword [rbp + 60], string_Raise20error0A#>
new  <	; Call printf 36 0>

89:
old  <>
new  <	mov qword [rbp + 36], raise$11>

90:
old  < raise$10:>
new  <	mov [rbp + 44], rbp>

91:
old  <	; Call printf 36 0>
new  <	add rbp, 36>

92:
old  <	mov qword [rbp + 36], raise$11>
new  <	mov rdi, rbp>

93:
old  <	mov [rbp + 44], rbp>
new  <	jmp printf>

94:
old  <	add rbp, 36>
new  <>

95:
old  <	mov rdi, rbp>
new  < raise$11:>

96:
old  <	jmp printf>
new  <	; PostCall 36>

98:
old  < raise$11:>
new  < raise$12:>

99:
old  <	; PostCall 36>
new  <	; Return 0>

100:
old  <>
new  <	mov ebx, 0>

101:
old  < raise$12:>
new  <	mov rax, [rbp]>

102:
old  <	; Return 0>
new  <	mov rdi, [rbp + 16]>

103:
old  <	mov ebx, 0>
new  <	mov rbp, [rbp + 8]>

104:
old  <	mov rax, [rbp]>
new  <	jmp rax>

105:
old  <	mov rdi, [rbp + 16]>
new  <>

106:
old  <	mov rbp, [rbp + 8]>
new  < raise$13:>

107:
old  <	jmp rax>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

109:
old  < raise$13:>
new  < raise$14:>

110:
old  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter pointer "Raise function, calling %i with %i\n" 60>

111:
old  <>
new  <	mov qword [rbp + 60], string_Raise20function2C20calling2025i20with2025i0A#>

112:
old  < raise$14:>
new  <>

113:
old  <	; Parameter pointer "Raise function, calling %i with %i\n" 60>
new  < raise$15:>

114:
old  <	mov qword [rbp + 60], string_Raise20function2C20calling2025i20with2025i0A#>
new  <	; Parameter pointer func 68>

115:
old  <>
new  <	mov rax, [rbp + 28]>

116:
old  < raise$15:>
new  <	mov [rbp + 68], rax>

117:
old  <	; Parameter pointer func 68>
new  <>

118:
old  <	mov rax, [rbp + 28]>
new  < raise$16:>

119:
old  <	mov [rbp + 68], rax>
new  <	; Parameter signedint sig 76>

120:
old  <>
new  <	mov eax, [rbp + 24]>

121:
old  < raise$16:>
new  <	mov [rbp + 76], eax>

122:
old  <	; Parameter signedint sig 76>
new  <>

123:
old  <	mov eax, [rbp + 24]>
new  < raise$17:>

124:
old  <	mov [rbp + 76], eax>
new  <	; Call printf 36 12>

125:
old  <>
new  <	mov qword [rbp + 36], raise$18>

126:
old  < raise$17:>
new  <	mov [rbp + 44], rbp>

127:
old  <	; Call printf 36 12>
new  <	add rbp, 36>

128:
old  <	mov qword [rbp + 36], raise$18>
new  <	mov rdi, rbp>

129:
old  <	mov [rbp + 44], rbp>
new  <	add rdi, 12>

130:
old  <	add rbp, 36>
new  <	jmp printf>

131:
old  <	mov rdi, rbp>
new  <>

132:
old  <	add rdi, 12>
new  < raise$18:>

133:
old  <	jmp printf>
new  <	; PostCall 36>

135:
old  < raise$18:>
new  < raise$19:>

136:
old  <	; PostCall 36>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

138:
old  < raise$19:>
new  < raise$20:>

139:
old  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter signedint sig 60>

140:
old  <>
new  <	mov eax, [rbp + 24]>

141:
old  < raise$20:>
new  <	mov [rbp + 60], eax>

142:
old  <	; Parameter signedint sig 60>
new  <>

143:
old  <	mov eax, [rbp + 24]>
new  < raise$21:>

144:
old  <	mov [rbp + 60], eax>
new  <	; Call func 36 0>

145:
old  <>
new  <	mov qword [rbp + 36], raise$22>

146:
old  < raise$21:>
new  <	mov [rbp + 44], rbp>

147:
old  <	; Call func 36 0>
new  <	add rbp, 36>

148:
old  <	mov qword [rbp + 36], raise$22>
new  <	mov rax, [rbp + 28]>

149:
old  <	mov [rbp + 44], rbp>
new  <	jmp rax>

150:
old  <	add rbp, 36>
new  <>

151:
old  <	mov rax, [rbp + 28]>
new  < raise$22:>

152:
old  <	jmp rax>
new  <	; PostCall 36>

154:
old  < raise$22:>
new  < raise$23:>

155:
old  <	; PostCall 36>
new  <	; Return 1>

156:
old  <>
new  <	mov ebx, 1>

157:
old  < raise$23:>
new  <	mov rax, [rbp]>

158:
old  <	; Return 1>
new  <	mov rdi, [rbp + 16]>

159:
old  <	mov ebx, 1>
new  <	mov rbp, [rbp + 8]>

160:
old  <	mov rax, [rbp]>
new  <	jmp rax>

161:
old  <	mov rdi, [rbp + 16]>
new  <>

162:
old  <	mov rbp, [rbp + 8]>
new  < raise$24:>

163:
old  <	jmp rax>
new  <	; FunctionEnd raise>

88:
old  <@2547$EEXIST:>
new  <@2198$EEXIST:>

94:
old  <@2548$ENOENT:>
new  <@2199$ENOENT:>

100:
old  <@2549$EACCES:>
new  <@2200$EACCES:>

106:
old  <@2550$SEEK_SET:>
new  <@2201$SEEK_SET:>

112:
old  <@2551$SEEK_CUR:>
new  <@2202$SEEK_CUR:>

118:
old  <@2552$SEEK_END:>
new  <@2203$SEEK_END:>

124:
old  <@2553$READ:>
new  <@2204$READ:>

130:
old  <@2554$WRITE:>
new  <@2205$WRITE:>

136:
old  <@2555$READ_WRITE:>
new  <@2206$READ_WRITE:>

142:
old  < @2557$filecreate:>
new  < @2208$filecreate:>

146:
old  < @2557$filecreate$1:>
new  < @2208$filecreate$1:>

147:
old  <	; IntegralToIntegral Â£temporary681 name>
new  <	; IntegralToIntegral Â£temporary710 name>

150:
old  < @2557$filecreate$2:>
new  < @2208$filecreate$2:>

151:
old  <	; AssignRegister rdi Â£temporary681>
new  <	; AssignRegister rdi Â£temporary710>

153:
old  < @2557$filecreate$3:>
new  < @2208$filecreate$3:>

157:
old  < @2557$filecreate$4:>
new  < @2208$filecreate$4:>

161:
old  < @2557$filecreate$5:>
new  < @2208$filecreate$5:>

169:
old  < @2557$filecreate$6:>
new  < @2208$filecreate$6:>

187:
old  < @2561$fileopen:>
new  < @2212$fileopen:>

191:
old  < @2561$fileopen$1:>
new  < @2212$fileopen$1:>

192:
old  <	; IntegralToIntegral Â£temporary685 name>
new  <	; IntegralToIntegral Â£temporary714 name>

195:
old  < @2561$fileopen$2:>
new  < @2212$fileopen$2:>

196:
old  <	; AssignRegister rdi Â£temporary685>
new  <	; AssignRegister rdi Â£temporary714>

198:
old  < @2561$fileopen$3:>
new  < @2212$fileopen$3:>

199:
old  <	; IntegralToIntegral Â£temporary687 mode>
new  <	; IntegralToIntegral Â£temporary716 mode>

204:
old  < @2561$fileopen$4:>
new  < @2212$fileopen$4:>

205:
old  <	; AssignRegister rsi Â£temporary687>
new  <	; AssignRegister rsi Â£temporary716>

207:
old  < @2561$fileopen$5:>
new  < @2212$fileopen$5:>

211:
old  < @2561$fileopen$6:>
new  < @2212$fileopen$6:>

212:
old  <	; InspectRegister Â£temporary688 rax>
new  <	; InspectRegister Â£temporary717 rax>

214:
old  < @2561$fileopen$7:>
new  < @2212$fileopen$7:>

215:
old  <	; IntegralToIntegral Â£temporary689 Â£temporary688>
new  <	; IntegralToIntegral Â£temporary718 Â£temporary717>

217:
old  < @2561$fileopen$8:>
new  < @2212$fileopen$8:>

218:
old  <	; Return Â£temporary689>
new  <	; Return Â£temporary718>

225:
old  < @2561$fileopen$9:>
new  < @2212$fileopen$9:>

237:
old  <	; Empty>
new  <	; Assign index 0>

238:
old  <>
new  <	mov dword [rbp + 40], 0>

239:
old  < fopen$1:>
new  <>

240:
old  <	; Assign index 0>
new  < fopen$1:>

241:
old  <	mov dword [rbp + 40], 0>
new  <	; SignedGreaterThanEqual 22 index 20>

242:
old  <>
new  <	cmp dword [rbp + 40], 20>

243:
old  < fopen$2:>
new  <	jge fopen$22>

244:
old  <	; SignedGreaterThanEqual 23 index 20>
new  <>

245:
old  <	cmp dword [rbp + 40], 20>
new  < fopen$2:>

246:
old  <	jge fopen$23>
new  <	; IntegralToIntegral Â£temporary722 index>

247:
old  <>
new  <	mov eax, [rbp + 40]>

248:
old  < fopen$3:>
new  <	mov rbx, 4294967295>

249:
old  <	; IntegralToIntegral Â£temporary693 index>
new  <	and rax, rbx>

250:
old  <	mov eax, [rbp + 40]>
new  <>

251:
old  <	mov rbx, 4294967295>
new  < fopen$3:>

252:
old  <	and rax, rbx>
new  <	; UnsignedMultiply Â£temporary723 Â£temporary722 41>

253:
old  <>
new  <	xor rdx, rdx>

254:
old  < fopen$4:>
new  <	mul qword [Array_41#]>

255:
old  <	; UnsignedMultiply Â£temporary694 Â£temporary693 41>
new  <>

256:
old  <	xor rdx, rdx>
new  < fopen$4:>

257:
old  <	mul qword [Array_41#]>
new  <	; BinaryAdd Â£temporary724 g_fileArray Â£temporary723>

258:
old  <>
new  <	mov rsi, g_fileArray>

259:
old  < fopen$5:>
new  <	add rsi, rax>

260:
old  <	; BinaryAdd Â£temporary695 g_fileArray Â£temporary694>
new  <>

261:
old  <	mov rsi, g_fileArray>
new  < fopen$5:>

262:
old  <	add rsi, rax>
new  <	; Dereference Â£temporary721 -> Â£temporary724 Â£temporary724 0>

265:
old  <	; Dereference Â£temporary692 -> Â£temporary695 Â£temporary695 0>
new  <	; NotEqual 20 Â£temporary721.open -> Â£temporary724 0>

266:
old  <>
new  <	cmp dword [rsi], 0>

267:
old  < fopen$7:>
new  <	jne fopen$20>

268:
old  <	; NotEqual 21 Â£temporary692.open -> Â£temporary695 0>
new  <>

269:
old  <	cmp dword [rsi], 0>
new  < fopen$7:>

270:
old  <	jne fopen$21>
new  <	; PreCall 44 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

273:
old  <	; PreCall 44 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter pointer name 68>

274:
old  <>
new  <	mov rax, [rbp + 24]>

275:
old  < fopen$9:>
new  <	mov [rbp + 68], rax>

276:
old  <	; Parameter pointer name 68>
new  <>

277:
old  <	mov rax, [rbp + 24]>
new  < fopen$9:>

278:
old  <	mov [rbp + 68], rax>
new  <	; Parameter pointer mode 76>

279:
old  <>
new  <	mov rax, [rbp + 32]>

280:
old  < fopen$10:>
new  <	mov [rbp + 76], rax>

281:
old  <	; Parameter pointer mode 76>
new  <>

282:
old  <	mov rax, [rbp + 32]>
new  < fopen$10:>

283:
old  <	mov [rbp + 76], rax>
new  <	; IntegralToIntegral Â£temporary728 index>

284:
old  <>
new  <	mov eax, [rbp + 40]>

285:
old  < fopen$11:>
new  <	mov rbx, 4294967295>

286:
old  <	; IntegralToIntegral Â£temporary699 index>
new  <	and rax, rbx>

287:
old  <	mov eax, [rbp + 40]>
new  <>

288:
old  <	mov rbx, 4294967295>
new  < fopen$11:>

289:
old  <	and rax, rbx>
new  <	; UnsignedMultiply Â£temporary729 Â£temporary728 41>

290:
old  <>
new  <	xor rdx, rdx>

291:
old  < fopen$12:>
new  <	mul qword [Array_41#]>

292:
old  <	; UnsignedMultiply Â£temporary700 Â£temporary699 41>
new  <>

293:
old  <	xor rdx, rdx>
new  < fopen$12:>

294:
old  <	mul qword [Array_41#]>
new  <	; BinaryAdd Â£temporary730 g_fileArray Â£temporary729>

295:
old  <>
new  <	mov rsi, g_fileArray>

296:
old  < fopen$13:>
new  <	add rsi, rax>

297:
old  <	; BinaryAdd Â£temporary701 g_fileArray Â£temporary700>
new  <>

298:
old  <	mov rsi, g_fileArray>
new  < fopen$13:>

299:
old  <	add rsi, rax>
new  <	; Dereference Â£temporary727 -> Â£temporary730 Â£temporary730 0>

302:
old  <	; Dereference Â£temporary698 -> Â£temporary701 Â£temporary701 0>
new  <	; Address Â£temporary731 Â£temporary727 -> Â£temporary730>

305:
old  <	; Address Â£temporary702 Â£temporary698 -> Â£temporary701>
new  <	; Parameter pointer Â£temporary731 84>

306:
old  <>
new  <	mov [rbp + 84], rsi>

307:
old  < fopen$16:>
new  <>

308:
old  <	; Parameter pointer Â£temporary702 84>
new  < fopen$16:>

309:
old  <	mov [rbp + 84], rsi>
new  <	; Call freopen 44 0>

310:
old  <>
new  <	mov qword [rbp + 44], fopen$17>

311:
old  < fopen$17:>
new  <	mov [rbp + 52], rbp>

312:
old  <	; Call freopen 44 0>
new  <	add rbp, 44>

313:
old  <	mov qword [rbp + 44], fopen$18>
new  <	jmp freopen>

314:
old  <	mov [rbp + 52], rbp>
new  <>

315:
old  <	add rbp, 44>
new  < fopen$17:>

316:
old  <	jmp freopen>
new  <	; PostCall 44>

319:
old  <	; PostCall 44>
new  <	; GetReturnValue Â£temporary732>

322:
old  <	; GetReturnValue Â£temporary703>
new  <	; Return Â£temporary732>

323:
old  <>
new  <	mov rax, [rbp]>

324:
old  < fopen$20:>
new  <	mov rdi, [rbp + 16]>

325:
old  <	; Return Â£temporary703>
new  <	mov rbp, [rbp + 8]>

326:
old  <	mov rax, [rbp]>
new  <	jmp rax>

327:
old  <	mov rdi, [rbp + 16]>
new  <>

328:
old  <	mov rbp, [rbp + 8]>
new  < fopen$20:>

329:
old  <	jmp rax>
new  <	; BinaryAdd index index 1>

330:
old  <>
new  <	inc dword [rbp + 40]>

331:
old  < fopen$21:>
new  <>

332:
old  <	; BinaryAdd index index 1>
new  < fopen$21:>

333:
old  <	inc dword [rbp + 40]>
new  <	; Goto 1>

334:
old  <>
new  <	jmp fopen$1>

335:
old  < fopen$22:>
new  <>

336:
old  <	; Goto 2>
new  < fopen$22:>

337:
old  <	jmp fopen$2>
new  <	; Return 0>

338:
old  <>
new  <	mov rbx, 0>

339:
old  < fopen$23:>
new  <	mov rax, [rbp]>

340:
old  <	; Return 0>
new  <	mov rdi, [rbp + 16]>

341:
old  <	mov rbx, 0>
new  <	mov rbp, [rbp + 8]>

342:
old  <	mov rax, [rbp]>
new  <	jmp rax>

343:
old  <	mov rdi, [rbp + 16]>
new  <>

344:
old  <	mov rbp, [rbp + 8]>
new  < fopen$23:>

345:
old  <	jmp rax>
new  <	; FunctionEnd fopen>

347:
old  < fopen$24:>
new  <section .data>

348:
old  <	; FunctionEnd fopen>
new  <>

349:
old  <>
new  <string_r#:>

350:
old  <section .data>
new  <	; Initializer String r>

351:
old  <>
new  <	db "r", 0>

352:
old  <string_r#:>
new  <>

353:
old  <	; Initializer String r>
new  <section .data>

354:
old  <	db "r", 0>
new  <>

355:
old  <>
new  <string_w#:>

356:
old  <section .data>
new  <	; Initializer String w>

357:
old  <>
new  <	db "w", 0>

358:
old  <string_w#:>
new  <>

359:
old  <	; Initializer String w>
new  <section .data>

360:
old  <	db "w", 0>
new  <>

361:
old  <>
new  <string_a#:>

362:
old  <section .data>
new  <	; Initializer String a>

363:
old  <>
new  <	db "a", 0>

364:
old  <string_a#:>
new  <>

365:
old  <	; Initializer String a>
new  <section .data>

366:
old  <	db "a", 0>
new  <>

367:
old  <>
new  <string_r2B#:>

368:
old  <section .data>
new  <	; Initializer String r+>

369:
old  <>
new  <	db "r+", 0>

370:
old  <string_r2B#:>
new  <>

371:
old  <	; Initializer String r+>
new  <section .data>

372:
old  <	db "r+", 0>
new  <>

373:
old  <>
new  <string_w2B#:>

374:
old  <section .data>
new  <	; Initializer String w+>

375:
old  <>
new  <	db "w+", 0>

376:
old  <string_w2B#:>
new  <>

377:
old  <	; Initializer String w+>
new  <section .data>

378:
old  <	db "w+", 0>
new  <>

379:
old  <>
new  <string_a2B#:>

380:
old  <section .data>
new  <	; Initializer String a+>

381:
old  <>
new  <	db "a+", 0>

382:
old  <string_a2B#:>
new  <>

383:
old  <	; Initializer String a+>
new  <section .text>

384:
old  <	db "a+", 0>
new  <>

385:
old  <>
new  < freopen:>

386:
old  <section .text>
new  <	; Assign handle -1>

387:
old  <>
new  <	mov dword [rbp + 48], -1>

388:
old  < freopen:>
new  <>

389:
old  <	; Assign handle -1>
new  < freopen$1:>

390:
old  <	mov dword [rbp + 48], -1>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

392:
old  < freopen$1:>
new  < freopen$2:>

393:
old  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter pointer mode 76>

394:
old  <>
new  <	mov rax, [rbp + 32]>

395:
old  < freopen$2:>
new  <	mov [rbp + 76], rax>

396:
old  <	; Parameter pointer mode 76>
new  <>

397:
old  <	mov rax, [rbp + 32]>
new  < freopen$3:>

398:
old  <	mov [rbp + 76], rax>
new  <	; Parameter pointer "r" 84>

399:
old  <>
new  <	mov qword [rbp + 84], string_r#>

400:
old  < freopen$3:>
new  <>

401:
old  <	; Parameter pointer "r" 84>
new  < freopen$4:>

402:
old  <	mov qword [rbp + 84], string_r#>
new  <	; Call strcmp 52 0>

403:
old  <>
new  <	mov qword [rbp + 52], freopen$5>

404:
old  < freopen$4:>
new  <	mov [rbp + 60], rbp>

405:
old  <	; Call strcmp 52 0>
new  <	add rbp, 52>

406:
old  <	mov qword [rbp + 52], freopen$5>
new  <	jmp strcmp>

407:
old  <	mov [rbp + 60], rbp>
new  <>

408:
old  <	add rbp, 52>
new  < freopen$5:>

409:
old  <	jmp strcmp>
new  <	; PostCall 52>

411:
old  < freopen$5:>
new  < freopen$6:>

412:
old  <	; PostCall 52>
new  <	; GetReturnValue Â£temporary733>

414:
old  < freopen$6:>
new  < freopen$7:>

415:
old  <	; GetReturnValue Â£temporary704>
new  <	; NotEqual 16 Â£temporary733 0>

416:
old  <>
new  <	cmp ebx, 0>

417:
old  < freopen$7:>
new  <	jne freopen$16>

418:
old  <	; NotEqual 16 Â£temporary704 0>
new  <>

419:
old  <	cmp ebx, 0>
new  < freopen$8:>

420:
old  <	jne freopen$16>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

422:
old  < freopen$8:>
new  < freopen$9:>

423:
old  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter pointer name 76>

424:
old  <>
new  <	mov rax, [rbp + 24]>

425:
old  < freopen$9:>
new  <	mov [rbp + 76], rax>

426:
old  <	; Parameter pointer name 76>
new  <>

427:
old  <	mov rax, [rbp + 24]>
new  < freopen$10:>

428:
old  <	mov [rbp + 76], rax>
new  <	; Parameter unsignedshortint 64 84>

429:
old  <>
new  <	mov word [rbp + 84], 64>

430:
old  < freopen$10:>
new  <>

431:
old  <	; Parameter unsignedshortint 64 84>
new  < freopen$11:>

432:
old  <	mov word [rbp + 84], 64>
new  <	; Call fileopen 52 0>

433:
old  <>
new  <	mov qword [rbp + 52], freopen$12>

434:
old  < freopen$11:>
new  <	mov [rbp + 60], rbp>

435:
old  <	; Call fileopen 52 0>
new  <	add rbp, 52>

436:
old  <	mov qword [rbp + 52], freopen$12>
new  <	jmp @2212$fileopen>

437:
old  <	mov [rbp + 60], rbp>
new  <>

438:
old  <	add rbp, 52>
new  < freopen$12:>

439:
old  <	jmp @2561$fileopen>
new  <	; PostCall 52>

441:
old  < freopen$12:>
new  < freopen$13:>

442:
old  <	; PostCall 52>
new  <	; GetReturnValue Â£temporary735>

444:
old  < freopen$13:>
new  < freopen$14:>

445:
old  <	; GetReturnValue Â£temporary706>
new  <	; Assign handle Â£temporary735>

446:
old  <>
new  <	mov [rbp + 48], ebx>

447:
old  < freopen$14:>
new  <>

448:
old  <	; Assign handle Â£temporary706>
new  < freopen$15:>

449:
old  <	mov [rbp + 48], ebx>
new  <	; Goto 130>

450:
old  <>
new  <	jmp freopen$130>

451:
old  < freopen$15:>
new  <>

452:
old  <	; Goto 130>
new  < freopen$16:>

453:
old  <	jmp freopen$130>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

455:
old  < freopen$16:>
new  < freopen$17:>

456:
old  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter pointer mode 76>

457:
old  <>
new  <	mov rax, [rbp + 32]>

458:
old  < freopen$17:>
new  <	mov [rbp + 76], rax>

459:
old  <	; Parameter pointer mode 76>
new  <>

460:
old  <	mov rax, [rbp + 32]>
new  < freopen$18:>

461:
old  <	mov [rbp + 76], rax>
new  <	; Parameter pointer "w" 84>

462:
old  <>
new  <	mov qword [rbp + 84], string_w#>

463:
old  < freopen$18:>
new  <>

464:
old  <	; Parameter pointer "w" 84>
new  < freopen$19:>

465:
old  <	mov qword [rbp + 84], string_w#>
new  <	; Call strcmp 52 0>

466:
old  <>
new  <	mov qword [rbp + 52], freopen$20>

467:
old  < freopen$19:>
new  <	mov [rbp + 60], rbp>

468:
old  <	; Call strcmp 52 0>
new  <	add rbp, 52>

469:
old  <	mov qword [rbp + 52], freopen$20>
new  <	jmp strcmp>

470:
old  <	mov [rbp + 60], rbp>
new  <>

471:
old  <	add rbp, 52>
new  < freopen$20:>

472:
old  <	jmp strcmp>
new  <	; PostCall 52>

474:
old  < freopen$20:>
new  < freopen$21:>

475:
old  <	; PostCall 52>
new  <	; GetReturnValue Â£temporary736>

477:
old  < freopen$21:>
new  < freopen$22:>

478:
old  <	; GetReturnValue Â£temporary707>
new  <	; NotEqual 30 Â£temporary736 0>

479:
old  <>
new  <	cmp ebx, 0>

480:
old  < freopen$22:>
new  <	jne freopen$30>

481:
old  <	; NotEqual 30 Â£temporary707 0>
new  <>

482:
old  <	cmp ebx, 0>
new  < freopen$23:>

483:
old  <	jne freopen$30>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

485:
old  < freopen$23:>
new  < freopen$24:>

486:
old  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter pointer name 76>

487:
old  <>
new  <	mov rax, [rbp + 24]>

488:
old  < freopen$24:>
new  <	mov [rbp + 76], rax>

489:
old  <	; Parameter pointer name 76>
new  <>

490:
old  <	mov rax, [rbp + 24]>
new  < freopen$25:>

491:
old  <	mov [rbp + 76], rax>
new  <	; Call filecreate 52 0>

492:
old  <>
new  <	mov qword [rbp + 52], freopen$26>

493:
old  < freopen$25:>
new  <	mov [rbp + 60], rbp>

494:
old  <	; Call filecreate 52 0>
new  <	add rbp, 52>

495:
old  <	mov qword [rbp + 52], freopen$26>
new  <	jmp @2208$filecreate>

496:
old  <	mov [rbp + 60], rbp>
new  <>

497:
old  <	add rbp, 52>
new  < freopen$26:>

498:
old  <	jmp @2557$filecreate>
new  <	; PostCall 52>

500:
old  < freopen$26:>
new  < freopen$27:>

501:
old  <	; PostCall 52>
new  <	; GetReturnValue Â£temporary738>

503:
old  < freopen$27:>
new  < freopen$28:>

504:
old  <	; GetReturnValue Â£temporary709>
new  <	; Assign handle Â£temporary738>

505:
old  <>
new  <	mov [rbp + 48], ebx>

506:
old  < freopen$28:>
new  <>

507:
old  <	; Assign handle Â£temporary709>
new  < freopen$29:>

508:
old  <	mov [rbp + 48], ebx>
new  <	; Goto 130>

509:
old  <>
new  <	jmp freopen$130>

510:
old  < freopen$29:>
new  <>

511:
old  <	; Goto 130>
new  < freopen$30:>

512:
old  <	jmp freopen$130>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

514:
old  < freopen$30:>
new  < freopen$31:>

515:
old  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter pointer mode 76>

516:
old  <>
new  <	mov rax, [rbp + 32]>

517:
old  < freopen$31:>
new  <	mov [rbp + 76], rax>

518:
old  <	; Parameter pointer mode 76>
new  <>

519:
old  <	mov rax, [rbp + 32]>
new  < freopen$32:>

520:
old  <	mov [rbp + 76], rax>
new  <	; Parameter pointer "a" 84>

521:
old  <>
new  <	mov qword [rbp + 84], string_a#>

522:
old  < freopen$32:>
new  <>

523:
old  <	; Parameter pointer "a" 84>
new  < freopen$33:>

524:
old  <	mov qword [rbp + 84], string_a#>
new  <	; Call strcmp 52 0>

525:
old  <>
new  <	mov qword [rbp + 52], freopen$34>

526:
old  < freopen$33:>
new  <	mov [rbp + 60], rbp>

527:
old  <	; Call strcmp 52 0>
new  <	add rbp, 52>

528:
old  <	mov qword [rbp + 52], freopen$34>
new  <	jmp strcmp>

529:
old  <	mov [rbp + 60], rbp>
new  <>

530:
old  <	add rbp, 52>
new  < freopen$34:>

531:
old  <	jmp strcmp>
new  <	; PostCall 52>

533:
old  < freopen$34:>
new  < freopen$35:>

534:
old  <	; PostCall 52>
new  <	; GetReturnValue Â£temporary739>

536:
old  < freopen$35:>
new  < freopen$36:>

537:
old  <	; GetReturnValue Â£temporary710>
new  <	; NotEqual 59 Â£temporary739 0>

538:
old  <>
new  <	cmp ebx, 0>

539:
old  < freopen$36:>
new  <	jne freopen$59>

540:
old  <	; NotEqual 59 Â£temporary710 0>
new  <>

541:
old  <	cmp ebx, 0>
new  < freopen$37:>

542:
old  <	jne freopen$59>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

544:
old  < freopen$37:>
new  < freopen$38:>

545:
old  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter pointer name 76>

546:
old  <>
new  <	mov rax, [rbp + 24]>

547:
old  < freopen$38:>
new  <	mov [rbp + 76], rax>

548:
old  <	; Parameter pointer name 76>
new  <>

549:
old  <	mov rax, [rbp + 24]>
new  < freopen$39:>

550:
old  <	mov [rbp + 76], rax>
new  <	; Parameter unsignedshortint 65 84>

551:
old  <>
new  <	mov word [rbp + 84], 65>

552:
old  < freopen$39:>
new  <>

553:
old  <	; Parameter unsignedshortint 65 84>
new  < freopen$40:>

554:
old  <	mov word [rbp + 84], 65>
new  <	; Call fileopen 52 0>

555:
old  <>
new  <	mov qword [rbp + 52], freopen$41>

556:
old  < freopen$40:>
new  <	mov [rbp + 60], rbp>

557:
old  <	; Call fileopen 52 0>
new  <	add rbp, 52>

558:
old  <	mov qword [rbp + 52], freopen$41>
new  <	jmp @2212$fileopen>

559:
old  <	mov [rbp + 60], rbp>
new  <>

560:
old  <	add rbp, 52>
new  < freopen$41:>

561:
old  <	jmp @2561$fileopen>
new  <	; PostCall 52>

563:
old  < freopen$41:>
new  < freopen$42:>

564:
old  <	; PostCall 52>
new  <	; GetReturnValue Â£temporary741>

566:
old  < freopen$42:>
new  < freopen$43:>

567:
old  <	; GetReturnValue Â£temporary712>
new  <	; Assign handle Â£temporary741>

568:
old  <>
new  <	mov [rbp + 48], ebx>

569:
old  < freopen$43:>
new  <>

570:
old  <	; Assign handle Â£temporary712>
new  < freopen$44:>

571:
old  <	mov [rbp + 48], ebx>
new  <	; Equal 52 handle -1>

572:
old  <>
new  <	cmp dword [rbp + 48], -1>

573:
old  < freopen$44:>
new  <	je freopen$52>

574:
old  <	; Equal 52 handle -1>
new  <>

575:
old  <	cmp dword [rbp + 48], -1>
new  < freopen$45:>

576:
old  <	je freopen$52>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

578:
old  < freopen$45:>
new  < freopen$46:>

579:
old  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter pointer stream 76>

580:
old  <>
new  <	mov rax, [rbp + 40]>

581:
old  < freopen$46:>
new  <	mov [rbp + 76], rax>

582:
old  <	; Parameter pointer stream 76>
new  <>

583:
old  <	mov rax, [rbp + 40]>
new  < freopen$47:>

584:
old  <	mov [rbp + 76], rax>
new  <	; Parameter signedint 0 84>

585:
old  <>
new  <	mov dword [rbp + 84], 0>

586:
old  < freopen$47:>
new  <>

587:
old  <	; Parameter signedint 0 84>
new  < freopen$48:>

588:
old  <	mov dword [rbp + 84], 0>
new  <	; Parameter signedint 2 88>

589:
old  <>
new  <	mov dword [rbp + 88], 2>

590:
old  < freopen$48:>
new  <>

591:
old  <	; Parameter signedint 2 88>
new  < freopen$49:>

592:
old  <	mov dword [rbp + 88], 2>
new  <	; Call fseek 52 0>

593:
old  <>
new  <	mov qword [rbp + 52], freopen$50>

594:
old  < freopen$49:>
new  <	mov [rbp + 60], rbp>

595:
old  <	; Call fseek 52 0>
new  <	add rbp, 52>

596:
old  <	mov qword [rbp + 52], freopen$50>
new  <	jmp fseek>

597:
old  <	mov [rbp + 60], rbp>
new  <>

598:
old  <	add rbp, 52>
new  < freopen$50:>

599:
old  <	jmp fseek>
new  <	; PostCall 52>

601:
old  < freopen$50:>
new  < freopen$51:>

602:
old  <	; PostCall 52>
new  <	; Goto 130>

603:
old  <>
new  <	jmp freopen$130>

604:
old  < freopen$51:>
new  <>

605:
old  <	; Goto 130>
new  < freopen$52:>

606:
old  <	jmp freopen$130>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

608:
old  < freopen$52:>
new  < freopen$53:>

609:
old  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter pointer name 76>

610:
old  <>
new  <	mov rax, [rbp + 24]>

611:
old  < freopen$53:>
new  <	mov [rbp + 76], rax>

612:
old  <	; Parameter pointer name 76>
new  <>

613:
old  <	mov rax, [rbp + 24]>
new  < freopen$54:>

614:
old  <	mov [rbp + 76], rax>
new  <	; Call filecreate 52 0>

615:
old  <>
new  <	mov qword [rbp + 52], freopen$55>

616:
old  < freopen$54:>
new  <	mov [rbp + 60], rbp>

617:
old  <	; Call filecreate 52 0>
new  <	add rbp, 52>

618:
old  <	mov qword [rbp + 52], freopen$55>
new  <	jmp @2208$filecreate>

619:
old  <	mov [rbp + 60], rbp>
new  <>

620:
old  <	add rbp, 52>
new  < freopen$55:>

621:
old  <	jmp @2557$filecreate>
new  <	; PostCall 52>

623:
old  < freopen$55:>
new  < freopen$56:>

624:
old  <	; PostCall 52>
new  <	; GetReturnValue Â£temporary744>

626:
old  < freopen$56:>
new  < freopen$57:>

627:
old  <	; GetReturnValue Â£temporary715>
new  <	; Assign handle Â£temporary744>

628:
old  <>
new  <	mov [rbp + 48], ebx>

629:
old  < freopen$57:>
new  <>

630:
old  <	; Assign handle Â£temporary715>
new  < freopen$58:>

631:
old  <	mov [rbp + 48], ebx>
new  <	; Goto 130>

632:
old  <>
new  <	jmp freopen$130>

633:
old  < freopen$58:>
new  <>

634:
old  <	; Goto 130>
new  < freopen$59:>

635:
old  <	jmp freopen$130>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

637:
old  < freopen$59:>
new  < freopen$60:>

638:
old  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter pointer mode 76>

639:
old  <>
new  <	mov rax, [rbp + 32]>

640:
old  < freopen$60:>
new  <	mov [rbp + 76], rax>

641:
old  <	; Parameter pointer mode 76>
new  <>

642:
old  <	mov rax, [rbp + 32]>
new  < freopen$61:>

643:
old  <	mov [rbp + 76], rax>
new  <	; Parameter pointer "r+" 84>

644:
old  <>
new  <	mov qword [rbp + 84], string_r2B#>

645:
old  < freopen$61:>
new  <>

646:
old  <	; Parameter pointer "r+" 84>
new  < freopen$62:>

647:
old  <	mov qword [rbp + 84], string_r2B#>
new  <	; Call strcmp 52 0>

648:
old  <>
new  <	mov qword [rbp + 52], freopen$63>

649:
old  < freopen$62:>
new  <	mov [rbp + 60], rbp>

650:
old  <	; Call strcmp 52 0>
new  <	add rbp, 52>

651:
old  <	mov qword [rbp + 52], freopen$63>
new  <	jmp strcmp>

652:
old  <	mov [rbp + 60], rbp>
new  <>

653:
old  <	add rbp, 52>
new  < freopen$63:>

654:
old  <	jmp strcmp>
new  <	; PostCall 52>

656:
old  < freopen$63:>
new  < freopen$64:>

657:
old  <	; PostCall 52>
new  <	; GetReturnValue Â£temporary745>

659:
old  < freopen$64:>
new  < freopen$65:>

660:
old  <	; GetReturnValue Â£temporary716>
new  <	; NotEqual 74 Â£temporary745 0>

661:
old  <>
new  <	cmp ebx, 0>

662:
old  < freopen$65:>
new  <	jne freopen$74>

663:
old  <	; NotEqual 74 Â£temporary716 0>
new  <>

664:
old  <	cmp ebx, 0>
new  < freopen$66:>

665:
old  <	jne freopen$74>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

667:
old  < freopen$66:>
new  < freopen$67:>

668:
old  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter pointer name 76>

669:
old  <>
new  <	mov rax, [rbp + 24]>

670:
old  < freopen$67:>
new  <	mov [rbp + 76], rax>

671:
old  <	; Parameter pointer name 76>
new  <>

672:
old  <	mov rax, [rbp + 24]>
new  < freopen$68:>

673:
old  <	mov [rbp + 76], rax>
new  <	; Parameter unsignedshortint 66 84>

674:
old  <>
new  <	mov word [rbp + 84], 66>

675:
old  < freopen$68:>
new  <>

676:
old  <	; Parameter unsignedshortint 66 84>
new  < freopen$69:>

677:
old  <	mov word [rbp + 84], 66>
new  <	; Call fileopen 52 0>

678:
old  <>
new  <	mov qword [rbp + 52], freopen$70>

679:
old  < freopen$69:>
new  <	mov [rbp + 60], rbp>

680:
old  <	; Call fileopen 52 0>
new  <	add rbp, 52>

681:
old  <	mov qword [rbp + 52], freopen$70>
new  <	jmp @2212$fileopen>

682:
old  <	mov [rbp + 60], rbp>
new  <>

683:
old  <	add rbp, 52>
new  < freopen$70:>

684:
old  <	jmp @2561$fileopen>
new  <	; PostCall 52>

686:
old  < freopen$70:>
new  < freopen$71:>

687:
old  <	; PostCall 52>
new  <	; GetReturnValue Â£temporary747>

689:
old  < freopen$71:>
new  < freopen$72:>

690:
old  <	; GetReturnValue Â£temporary718>
new  <	; Assign handle Â£temporary747>

691:
old  <>
new  <	mov [rbp + 48], ebx>

692:
old  < freopen$72:>
new  <>

693:
old  <	; Assign handle Â£temporary718>
new  < freopen$73:>

694:
old  <	mov [rbp + 48], ebx>
new  <	; Goto 130>

695:
old  <>
new  <	jmp freopen$130>

696:
old  < freopen$73:>
new  <>

697:
old  <	; Goto 130>
new  < freopen$74:>

698:
old  <	jmp freopen$130>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

700:
old  < freopen$74:>
new  < freopen$75:>

701:
old  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter pointer mode 76>

702:
old  <>
new  <	mov rax, [rbp + 32]>

703:
old  < freopen$75:>
new  <	mov [rbp + 76], rax>

704:
old  <	; Parameter pointer mode 76>
new  <>

705:
old  <	mov rax, [rbp + 32]>
new  < freopen$76:>

706:
old  <	mov [rbp + 76], rax>
new  <	; Parameter pointer "w+" 84>

707:
old  <>
new  <	mov qword [rbp + 84], string_w2B#>

708:
old  < freopen$76:>
new  <>

709:
old  <	; Parameter pointer "w+" 84>
new  < freopen$77:>

710:
old  <	mov qword [rbp + 84], string_w2B#>
new  <	; Call strcmp 52 0>

711:
old  <>
new  <	mov qword [rbp + 52], freopen$78>

712:
old  < freopen$77:>
new  <	mov [rbp + 60], rbp>

713:
old  <	; Call strcmp 52 0>
new  <	add rbp, 52>

714:
old  <	mov qword [rbp + 52], freopen$78>
new  <	jmp strcmp>

715:
old  <	mov [rbp + 60], rbp>
new  <>

716:
old  <	add rbp, 52>
new  < freopen$78:>

717:
old  <	jmp strcmp>
new  <	; PostCall 52>

719:
old  < freopen$78:>
new  < freopen$79:>

720:
old  <	; PostCall 52>
new  <	; GetReturnValue Â£temporary748>

722:
old  < freopen$79:>
new  < freopen$80:>

723:
old  <	; GetReturnValue Â£temporary719>
new  <	; NotEqual 102 Â£temporary748 0>

724:
old  <>
new  <	cmp ebx, 0>

725:
old  < freopen$80:>
new  <	jne freopen$102>

726:
old  <	; NotEqual 102 Â£temporary719 0>
new  <>

727:
old  <	cmp ebx, 0>
new  < freopen$81:>

728:
old  <	jne freopen$102>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

730:
old  < freopen$81:>
new  < freopen$82:>

731:
old  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter pointer name 76>

732:
old  <>
new  <	mov rax, [rbp + 24]>

733:
old  < freopen$82:>
new  <	mov [rbp + 76], rax>

734:
old  <	; Parameter pointer name 76>
new  <>

735:
old  <	mov rax, [rbp + 24]>
new  < freopen$83:>

736:
old  <	mov [rbp + 76], rax>
new  <	; Call fileexists 52 0>

737:
old  <>
new  <	mov qword [rbp + 52], freopen$84>

738:
old  < freopen$83:>
new  <	mov [rbp + 60], rbp>

739:
old  <	; Call fileexists 52 0>
new  <	add rbp, 52>

740:
old  <	mov qword [rbp + 52], freopen$84>
new  <	jmp fileexists>

741:
old  <	mov [rbp + 60], rbp>
new  <>

742:
old  <	add rbp, 52>
new  < freopen$84:>

743:
old  <	jmp fileexists>
new  <	; PostCall 52>

745:
old  < freopen$84:>
new  < freopen$85:>

746:
old  <	; PostCall 52>
new  <	; GetReturnValue Â£temporary750>

748:
old  < freopen$85:>
new  < freopen$86:>

749:
old  <	; GetReturnValue Â£temporary721>
new  <	; Equal 95 Â£temporary750 0>

750:
old  <>
new  <	cmp ebx, 0>

751:
old  < freopen$86:>
new  <	je freopen$95>

752:
old  <	; Equal 95 Â£temporary721 0>
new  <>

753:
old  <	cmp ebx, 0>
new  < freopen$87:>

754:
old  <	je freopen$95>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

756:
old  < freopen$87:>
new  < freopen$88:>

757:
old  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter pointer name 76>

758:
old  <>
new  <	mov rax, [rbp + 24]>

759:
old  < freopen$88:>
new  <	mov [rbp + 76], rax>

760:
old  <	; Parameter pointer name 76>
new  <>

761:
old  <	mov rax, [rbp + 24]>
new  < freopen$89:>

762:
old  <	mov [rbp + 76], rax>
new  <	; Parameter unsignedshortint 66 84>

763:
old  <>
new  <	mov word [rbp + 84], 66>

764:
old  < freopen$89:>
new  <>

765:
old  <	; Parameter unsignedshortint 66 84>
new  < freopen$90:>

766:
old  <	mov word [rbp + 84], 66>
new  <	; Call fileopen 52 0>

767:
old  <>
new  <	mov qword [rbp + 52], freopen$91>

768:
old  < freopen$90:>
new  <	mov [rbp + 60], rbp>

769:
old  <	; Call fileopen 52 0>
new  <	add rbp, 52>

770:
old  <	mov qword [rbp + 52], freopen$91>
new  <	jmp @2212$fileopen>

771:
old  <	mov [rbp + 60], rbp>
new  <>

772:
old  <	add rbp, 52>
new  < freopen$91:>

773:
old  <	jmp @2561$fileopen>
new  <	; PostCall 52>

775:
old  < freopen$91:>
new  < freopen$92:>

776:
old  <	; PostCall 52>
new  <	; GetReturnValue Â£temporary751>

778:
old  < freopen$92:>
new  < freopen$93:>

779:
old  <	; GetReturnValue Â£temporary722>
new  <	; Assign handle Â£temporary751>

780:
old  <>
new  <	mov [rbp + 48], ebx>

781:
old  < freopen$93:>
new  <>

782:
old  <	; Assign handle Â£temporary722>
new  < freopen$94:>

783:
old  <	mov [rbp + 48], ebx>
new  <	; Goto 130>

784:
old  <>
new  <	jmp freopen$130>

785:
old  < freopen$94:>
new  <>

786:
old  <	; Goto 130>
new  < freopen$95:>

787:
old  <	jmp freopen$130>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

789:
old  < freopen$95:>
new  < freopen$96:>

790:
old  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter pointer name 76>

791:
old  <>
new  <	mov rax, [rbp + 24]>

792:
old  < freopen$96:>
new  <	mov [rbp + 76], rax>

793:
old  <	; Parameter pointer name 76>
new  <>

794:
old  <	mov rax, [rbp + 24]>
new  < freopen$97:>

795:
old  <	mov [rbp + 76], rax>
new  <	; Call filecreate 52 0>

796:
old  <>
new  <	mov qword [rbp + 52], freopen$98>

797:
old  < freopen$97:>
new  <	mov [rbp + 60], rbp>

798:
old  <	; Call filecreate 52 0>
new  <	add rbp, 52>

799:
old  <	mov qword [rbp + 52], freopen$98>
new  <	jmp @2208$filecreate>

800:
old  <	mov [rbp + 60], rbp>
new  <>

801:
old  <	add rbp, 52>
new  < freopen$98:>

802:
old  <	jmp @2557$filecreate>
new  <	; PostCall 52>

804:
old  < freopen$98:>
new  < freopen$99:>

805:
old  <	; PostCall 52>
new  <	; GetReturnValue Â£temporary752>

807:
old  < freopen$99:>
new  < freopen$100:>

808:
old  <	; GetReturnValue Â£temporary723>
new  <	; Assign handle Â£temporary752>

809:
old  <>
new  <	mov [rbp + 48], ebx>

810:
old  < freopen$100:>
new  <>

811:
old  <	; Assign handle Â£temporary723>
new  < freopen$101:>

812:
old  <	mov [rbp + 48], ebx>
new  <	; Goto 130>

813:
old  <>
new  <	jmp freopen$130>

814:
old  < freopen$101:>
new  <>

815:
old  <	; Goto 130>
new  < freopen$102:>

816:
old  <	jmp freopen$130>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

818:
old  < freopen$102:>
new  < freopen$103:>

819:
old  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter pointer mode 76>

820:
old  <>
new  <	mov rax, [rbp + 32]>

821:
old  < freopen$103:>
new  <	mov [rbp + 76], rax>

822:
old  <	; Parameter pointer mode 76>
new  <>

823:
old  <	mov rax, [rbp + 32]>
new  < freopen$104:>

824:
old  <	mov [rbp + 76], rax>
new  <	; Parameter pointer "a+" 84>

825:
old  <>
new  <	mov qword [rbp + 84], string_a2B#>

826:
old  < freopen$104:>
new  <>

827:
old  <	; Parameter pointer "a+" 84>
new  < freopen$105:>

828:
old  <	mov qword [rbp + 84], string_a2B#>
new  <	; Call strcmp 52 0>

829:
old  <>
new  <	mov qword [rbp + 52], freopen$106>

830:
old  < freopen$105:>
new  <	mov [rbp + 60], rbp>

831:
old  <	; Call strcmp 52 0>
new  <	add rbp, 52>

832:
old  <	mov qword [rbp + 52], freopen$106>
new  <	jmp strcmp>

833:
old  <	mov [rbp + 60], rbp>
new  <>

834:
old  <	add rbp, 52>
new  < freopen$106:>

835:
old  <	jmp strcmp>
new  <	; PostCall 52>

837:
old  < freopen$106:>
new  < freopen$107:>

838:
old  <	; PostCall 52>
new  <	; GetReturnValue Â£temporary754>

840:
old  < freopen$107:>
new  < freopen$108:>

841:
old  <	; GetReturnValue Â£temporary725>
new  <	; NotEqual 130 Â£temporary754 0>

842:
old  <>
new  <	cmp ebx, 0>

843:
old  < freopen$108:>
new  <	jne freopen$130>

844:
old  <	; NotEqual 130 Â£temporary725 0>
new  <>

845:
old  <	cmp ebx, 0>
new  < freopen$109:>

846:
old  <	jne freopen$130>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

848:
old  < freopen$109:>
new  < freopen$110:>

849:
old  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter pointer name 76>

850:
old  <>
new  <	mov rax, [rbp + 24]>

851:
old  < freopen$110:>
new  <	mov [rbp + 76], rax>

852:
old  <	; Parameter pointer name 76>
new  <>

853:
old  <	mov rax, [rbp + 24]>
new  < freopen$111:>

854:
old  <	mov [rbp + 76], rax>
new  <	; Parameter unsignedshortint 66 84>

855:
old  <>
new  <	mov word [rbp + 84], 66>

856:
old  < freopen$111:>
new  <>

857:
old  <	; Parameter unsignedshortint 66 84>
new  < freopen$112:>

858:
old  <	mov word [rbp + 84], 66>
new  <	; Call fileopen 52 0>

859:
old  <>
new  <	mov qword [rbp + 52], freopen$113>

860:
old  < freopen$112:>
new  <	mov [rbp + 60], rbp>

861:
old  <	; Call fileopen 52 0>
new  <	add rbp, 52>

862:
old  <	mov qword [rbp + 52], freopen$113>
new  <	jmp @2212$fileopen>

863:
old  <	mov [rbp + 60], rbp>
new  <>

864:
old  <	add rbp, 52>
new  < freopen$113:>

865:
old  <	jmp @2561$fileopen>
new  <	; PostCall 52>

867:
old  < freopen$113:>
new  < freopen$114:>

868:
old  <	; PostCall 52>
new  <	; GetReturnValue Â£temporary756>

870:
old  < freopen$114:>
new  < freopen$115:>

871:
old  <	; GetReturnValue Â£temporary727>
new  <	; Assign handle Â£temporary756>

872:
old  <>
new  <	mov [rbp + 48], ebx>

873:
old  < freopen$115:>
new  <>

874:
old  <	; Assign handle Â£temporary727>
new  < freopen$116:>

875:
old  <	mov [rbp + 48], ebx>
new  <	; Equal 124 handle -1>

876:
old  <>
new  <	cmp dword [rbp + 48], -1>

877:
old  < freopen$116:>
new  <	je freopen$124>

878:
old  <	; Equal 124 handle -1>
new  <>

879:
old  <	cmp dword [rbp + 48], -1>
new  < freopen$117:>

880:
old  <	je freopen$124>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

882:
old  < freopen$117:>
new  < freopen$118:>

883:
old  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter pointer stream 76>

884:
old  <>
new  <	mov rax, [rbp + 40]>

885:
old  < freopen$118:>
new  <	mov [rbp + 76], rax>

886:
old  <	; Parameter pointer stream 76>
new  <>

887:
old  <	mov rax, [rbp + 40]>
new  < freopen$119:>

888:
old  <	mov [rbp + 76], rax>
new  <	; Parameter signedint 0 84>

889:
old  <>
new  <	mov dword [rbp + 84], 0>

890:
old  < freopen$119:>
new  <>

891:
old  <	; Parameter signedint 0 84>
new  < freopen$120:>

892:
old  <	mov dword [rbp + 84], 0>
new  <	; Parameter signedint 2 88>

893:
old  <>
new  <	mov dword [rbp + 88], 2>

894:
old  < freopen$120:>
new  <>

895:
old  <	; Parameter signedint 2 88>
new  < freopen$121:>

896:
old  <	mov dword [rbp + 88], 2>
new  <	; Call fseek 52 0>

897:
old  <>
new  <	mov qword [rbp + 52], freopen$122>

898:
old  < freopen$121:>
new  <	mov [rbp + 60], rbp>

899:
old  <	; Call fseek 52 0>
new  <	add rbp, 52>

900:
old  <	mov qword [rbp + 52], freopen$122>
new  <	jmp fseek>

901:
old  <	mov [rbp + 60], rbp>
new  <>

902:
old  <	add rbp, 52>
new  < freopen$122:>

903:
old  <	jmp fseek>
new  <	; PostCall 52>

905:
old  < freopen$122:>
new  < freopen$123:>

906:
old  <	; PostCall 52>
new  <	; Goto 130>

907:
old  <>
new  <	jmp freopen$130>

908:
old  < freopen$123:>
new  <>

909:
old  <	; Goto 130>
new  < freopen$124:>

910:
old  <	jmp freopen$130>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

912:
old  < freopen$124:>
new  < freopen$125:>

913:
old  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter pointer name 76>

914:
old  <>
new  <	mov rax, [rbp + 24]>

915:
old  < freopen$125:>
new  <	mov [rbp + 76], rax>

916:
old  <	; Parameter pointer name 76>
new  <>

917:
old  <	mov rax, [rbp + 24]>
new  < freopen$126:>

918:
old  <	mov [rbp + 76], rax>
new  <	; Call filecreate 52 0>

919:
old  <>
new  <	mov qword [rbp + 52], freopen$127>

920:
old  < freopen$126:>
new  <	mov [rbp + 60], rbp>

921:
old  <	; Call filecreate 52 0>
new  <	add rbp, 52>

922:
old  <	mov qword [rbp + 52], freopen$127>
new  <	jmp @2208$filecreate>

923:
old  <	mov [rbp + 60], rbp>
new  <>

924:
old  <	add rbp, 52>
new  < freopen$127:>

925:
old  <	jmp @2557$filecreate>
new  <	; PostCall 52>

927:
old  < freopen$127:>
new  < freopen$128:>

928:
old  <	; PostCall 52>
new  <	; GetReturnValue Â£temporary759>

930:
old  < freopen$128:>
new  < freopen$129:>

931:
old  <	; GetReturnValue Â£temporary730>
new  <	; Assign handle Â£temporary759>

932:
old  <>
new  <	mov [rbp + 48], ebx>

933:
old  < freopen$129:>
new  <>

934:
old  <	; Assign handle Â£temporary730>
new  < freopen$130:>

935:
old  <	mov [rbp + 48], ebx>
new  <	; Equal 146 handle -1>

936:
old  <>
new  <	cmp dword [rbp + 48], -1>

937:
old  < freopen$130:>
new  <	je freopen$146>

938:
old  <	; Equal 146 handle -1>
new  <>

939:
old  <	cmp dword [rbp + 48], -1>
new  < freopen$131:>

940:
old  <	je freopen$146>
new  <	; Dereference Â£temporary761 -> stream stream 0>

941:
old  <>
new  <	mov rsi, [rbp + 40]>

942:
old  < freopen$131:>
new  <>

943:
old  <	; Dereference Â£temporary732 -> stream stream 0>
new  < freopen$132:>

944:
old  <	mov rsi, [rbp + 40]>
new  <	; Assign Â£temporary761 -> stream 1>

945:
old  <>
new  <	mov dword [rsi], 1>

946:
old  < freopen$132:>
new  <>

947:
old  <	; Assign Â£temporary732 -> stream 1>
new  < freopen$133:>

948:
old  <	mov dword [rsi], 1>
new  <	; Dereference Â£temporary762 -> stream stream 0>

949:
old  <>
new  <	mov rsi, [rbp + 40]>

950:
old  < freopen$133:>
new  <>

951:
old  <	; Dereference Â£temporary733 -> stream stream 0>
new  < freopen$134:>

952:
old  <	mov rsi, [rbp + 40]>
new  <	; Assign Â£temporary762 -> stream handle>

953:
old  <>
new  <	mov eax, [rbp + 48]>

954:
old  < freopen$134:>
new  <	mov [rsi + 4], eax>

955:
old  <	; Assign Â£temporary733 -> stream handle>
new  <>

956:
old  <	mov eax, [rbp + 48]>
new  < freopen$135:>

957:
old  <	mov [rsi + 4], eax>
new  <	; Dereference Â£temporary763 -> stream stream 0>

958:
old  <>
new  <	mov rsi, [rbp + 40]>

959:
old  < freopen$135:>
new  <>

960:
old  <	; Dereference Â£temporary734 -> stream stream 0>
new  < freopen$136:>

961:
old  <	mov rsi, [rbp + 40]>
new  <	; Assign Â£temporary763 -> stream 0>

962:
old  <>
new  <	mov dword [rsi + 33], 0>

963:
old  < freopen$136:>
new  <>

964:
old  <	; Assign Â£temporary734 -> stream 0>
new  < freopen$137:>

965:
old  <	mov dword [rsi + 33], 0>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

967:
old  < freopen$137:>
new  < freopen$138:>

968:
old  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Dereference Â£temporary764 -> stream stream 0>

969:
old  <>
new  <	mov rsi, [rbp + 40]>

970:
old  < freopen$138:>
new  <>

971:
old  <	; Dereference Â£temporary735 -> stream stream 0>
new  < freopen$139:>

972:
old  <	mov rsi, [rbp + 40]>
new  <	; Parameter pointer Â£temporary764 -> stream 76>

973:
old  <>
new  <	mov [rbp + 76], rsi>

974:
old  < freopen$139:>
new  <	add qword [rbp + 76], 8>

975:
old  <	; Parameter pointer Â£temporary735 -> stream 76>
new  <>

976:
old  <	mov [rbp + 76], rsi>
new  < freopen$140:>

977:
old  <	add qword [rbp + 76], 8>
new  <	; Parameter pointer name 84>

978:
old  <>
new  <	mov rax, [rbp + 24]>

979:
old  < freopen$140:>
new  <	mov [rbp + 84], rax>

980:
old  <	; Parameter pointer name 84>
new  <>

981:
old  <	mov rax, [rbp + 24]>
new  < freopen$141:>

982:
old  <	mov [rbp + 84], rax>
new  <	; Call strcpy 52 0>

983:
old  <>
new  <	mov qword [rbp + 52], freopen$142>

984:
old  < freopen$141:>
new  <	mov [rbp + 60], rbp>

985:
old  <	; Call strcpy 52 0>
new  <	add rbp, 52>

986:
old  <	mov qword [rbp + 52], freopen$142>
new  <	jmp strcpy>

987:
old  <	mov [rbp + 60], rbp>
new  <>

988:
old  <	add rbp, 52>
new  < freopen$142:>

989:
old  <	jmp strcpy>
new  <	; PostCall 52>

991:
old  < freopen$142:>
new  < freopen$143:>

992:
old  <	; PostCall 52>
new  <	; Dereference Â£temporary766 -> stream stream 0>

993:
old  <>
new  <	mov rsi, [rbp + 40]>

994:
old  < freopen$143:>
new  <>

995:
old  <	; Dereference Â£temporary737 -> stream stream 0>
new  < freopen$144:>

996:
old  <	mov rsi, [rbp + 40]>
new  <	; Assign Â£temporary766 -> stream 0>

997:
old  <>
new  <	mov dword [rsi + 37], 0>

998:
old  < freopen$144:>
new  <>

999:
old  <	; Assign Â£temporary737 -> stream 0>
new  < freopen$145:>

1000:
old  <	mov dword [rsi + 37], 0>
new  <	; Return stream>

1001:
old  <>
new  <	mov rbx, [rbp + 40]>

1002:
old  < freopen$145:>
new  <	mov rax, [rbp]>

1003:
old  <	; Return stream>
new  <	mov rdi, [rbp + 16]>

1004:
old  <	mov rbx, [rbp + 40]>
new  <	mov rbp, [rbp + 8]>

1005:
old  <	mov rax, [rbp]>
new  <	jmp rax>

1006:
old  <	mov rdi, [rbp + 16]>
new  <>

1007:
old  <	mov rbp, [rbp + 8]>
new  < freopen$146:>

1008:
old  <	jmp rax>
new  <	; Dereference Â£temporary767 -> stream stream 0>

1009:
old  <>
new  <	mov rsi, [rbp + 40]>

1010:
old  < freopen$146:>
new  <>

1011:
old  <	; Dereference Â£temporary738 -> stream stream 0>
new  < freopen$147:>

1012:
old  <	mov rsi, [rbp + 40]>
new  <	; Assign Â£temporary767 -> stream 0>

1013:
old  <>
new  <	mov dword [rsi], 0>

1014:
old  < freopen$147:>
new  <>

1015:
old  <	; Assign Â£temporary738 -> stream 0>
new  < freopen$148:>

1016:
old  <	mov dword [rsi], 0>
new  <	; Return 0>

1017:
old  <>
new  <	mov rbx, 0>

1018:
old  < freopen$148:>
new  <	mov rax, [rbp]>

1019:
old  <	; Return 0>
new  <	mov rdi, [rbp + 16]>

1020:
old  <	mov rbx, 0>
new  <	mov rbp, [rbp + 8]>

1021:
old  <	mov rax, [rbp]>
new  <	jmp rax>

1022:
old  <	mov rdi, [rbp + 16]>
new  <>

1023:
old  <	mov rbp, [rbp + 8]>
new  < freopen$149:>

1024:
old  <	jmp rax>
new  <	; FunctionEnd freopen>

1026:
old  < freopen$149:>
new  <section .text>

1027:
old  <	; FunctionEnd freopen>
new  <>

1028:
old  <>
new  < fflush:>

1029:
old  <section .text>
new  <	; NotEqual 22 stream 0>

1030:
old  <>
new  <	cmp qword [rbp + 24], 0>

1031:
old  < fflush:>
new  <	jne fflush$22>

1032:
old  <	; NotEqual 22 stream 0>
new  <>

1033:
old  <	cmp qword [rbp + 24], 0>
new  < fflush$1:>

1034:
old  <	jne fflush$22>
new  <	; Assign index 0>

1035:
old  <>
new  <	mov dword [rbp + 32], 0>

1036:
old  < fflush$1:>
new  <>

1037:
old  <	; Assign index 0>
new  < fflush$2:>

1038:
old  <	mov dword [rbp + 32], 0>
new  <	; SignedGreaterThanEqual 22 index 20>

1039:
old  <>
new  <	cmp dword [rbp + 32], 20>

1040:
old  < fflush$2:>
new  <	jge fflush$22>

1041:
old  <	; SignedGreaterThanEqual 22 index 20>
new  <>

1042:
old  <	cmp dword [rbp + 32], 20>
new  < fflush$3:>

1043:
old  <	jge fflush$22>
new  <	; IntegralToIntegral Â£temporary772 index>

1044:
old  <>
new  <	mov eax, [rbp + 32]>

1045:
old  < fflush$3:>
new  <	mov rbx, 4294967295>

1046:
old  <	; IntegralToIntegral Â£temporary743 index>
new  <	and rax, rbx>

1047:
old  <	mov eax, [rbp + 32]>
new  <>

1048:
old  <	mov rbx, 4294967295>
new  < fflush$4:>

1049:
old  <	and rax, rbx>
new  <	; UnsignedMultiply Â£temporary773 Â£temporary772 41>

1050:
old  <>
new  <	xor rdx, rdx>

1051:
old  < fflush$4:>
new  <	mul qword [Array_41#]>

1052:
old  <	; UnsignedMultiply Â£temporary744 Â£temporary743 41>
new  <>

1053:
old  <	xor rdx, rdx>
new  < fflush$5:>

1054:
old  <	mul qword [Array_41#]>
new  <	; BinaryAdd Â£temporary774 g_fileArray Â£temporary773>

1055:
old  <>
new  <	mov rsi, g_fileArray>

1056:
old  < fflush$5:>
new  <	add rsi, rax>

1057:
old  <	; BinaryAdd Â£temporary745 g_fileArray Â£temporary744>
new  <>

1058:
old  <	mov rsi, g_fileArray>
new  < fflush$6:>

1059:
old  <	add rsi, rax>
new  <	; Dereference Â£temporary771 -> Â£temporary774 Â£temporary774 0>

1061:
old  < fflush$6:>
new  < fflush$7:>

1062:
old  <	; Dereference Â£temporary742 -> Â£temporary745 Â£temporary745 0>
new  <	; Equal 20 Â£temporary771.open -> Â£temporary774 0>

1063:
old  <>
new  <	cmp dword [rsi], 0>

1064:
old  < fflush$7:>
new  <	je fflush$20>

1065:
old  <	; Equal 20 Â£temporary742.open -> Â£temporary745 0>
new  <>

1066:
old  <	cmp dword [rsi], 0>
new  < fflush$8:>

1067:
old  <	je fflush$20>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1069:
old  < fflush$8:>
new  < fflush$9:>

1070:
old  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; IntegralToIntegral Â£temporary776 index>

1071:
old  <>
new  <	mov eax, [rbp + 32]>

1072:
old  < fflush$9:>
new  <	mov rbx, 4294967295>

1073:
old  <	; IntegralToIntegral Â£temporary747 index>
new  <	and rax, rbx>

1074:
old  <	mov eax, [rbp + 32]>
new  <>

1075:
old  <	mov rbx, 4294967295>
new  < fflush$10:>

1076:
old  <	and rax, rbx>
new  <	; UnsignedMultiply Â£temporary777 Â£temporary776 41>

1077:
old  <>
new  <	xor rdx, rdx>

1078:
old  < fflush$10:>
new  <	mul qword [Array_41#]>

1079:
old  <	; UnsignedMultiply Â£temporary748 Â£temporary747 41>
new  <>

1080:
old  <	xor rdx, rdx>
new  < fflush$11:>

1081:
old  <	mul qword [Array_41#]>
new  <	; BinaryAdd Â£temporary778 g_fileArray Â£temporary777>

1082:
old  <>
new  <	mov rsi, g_fileArray>

1083:
old  < fflush$11:>
new  <	add rsi, rax>

1084:
old  <	; BinaryAdd Â£temporary749 g_fileArray Â£temporary748>
new  <>

1085:
old  <	mov rsi, g_fileArray>
new  < fflush$12:>

1086:
old  <	add rsi, rax>
new  <	; Dereference Â£temporary775 -> Â£temporary778 Â£temporary778 0>

1088:
old  < fflush$12:>
new  < fflush$13:>

1089:
old  <	; Dereference Â£temporary746 -> Â£temporary749 Â£temporary749 0>
new  <	; Address Â£temporary779 Â£temporary775 -> Â£temporary778>

1091:
old  < fflush$13:>
new  < fflush$14:>

1092:
old  <	; Address Â£temporary750 Â£temporary746 -> Â£temporary749>
new  <	; Parameter pointer Â£temporary779 60>

1093:
old  <>
new  <	mov [rbp + 60], rsi>

1094:
old  < fflush$14:>
new  <>

1095:
old  <	; Parameter pointer Â£temporary750 60>
new  < fflush$15:>

1096:
old  <	mov [rbp + 60], rsi>
new  <	; Call fflush 36 0>

1097:
old  <>
new  <	mov qword [rbp + 36], fflush$16>

1098:
old  < fflush$15:>
new  <	mov [rbp + 44], rbp>

1099:
old  <	; Call fflush 36 0>
new  <	add rbp, 36>

1100:
old  <	mov qword [rbp + 36], fflush$16>
new  <	jmp fflush>

1101:
old  <	mov [rbp + 44], rbp>
new  <>

1102:
old  <	add rbp, 36>
new  < fflush$16:>

1103:
old  <	jmp fflush>
new  <	; PostCall 36>

1105:
old  < fflush$16:>
new  < fflush$17:>

1106:
old  <	; PostCall 36>
new  <	; GetReturnValue Â£temporary780>

1108:
old  < fflush$17:>
new  < fflush$18:>

1109:
old  <	; GetReturnValue Â£temporary751>
new  <	; NotEqual 20 Â£temporary780 -1>

1110:
old  <>
new  <	cmp ebx, -1>

1111:
old  < fflush$18:>
new  <	jne fflush$20>

1112:
old  <	; NotEqual 20 Â£temporary751 -1>
new  <>

1113:
old  <	cmp ebx, -1>
new  < fflush$19:>

1114:
old  <	jne fflush$20>
new  <	; Return -1>

1115:
old  <>
new  <	mov ebx, -1>

1116:
old  < fflush$19:>
new  <	mov rax, [rbp]>

1117:
old  <	; Return -1>
new  <	mov rdi, [rbp + 16]>

1118:
old  <	mov ebx, -1>
new  <	mov rbp, [rbp + 8]>

1119:
old  <	mov rax, [rbp]>
new  <	jmp rax>

1120:
old  <	mov rdi, [rbp + 16]>
new  <>

1121:
old  <	mov rbp, [rbp + 8]>
new  < fflush$20:>

1122:
old  <	jmp rax>
new  <	; BinaryAdd index index 1>

1123:
old  <>
new  <	inc dword [rbp + 32]>

1124:
old  < fflush$20:>
new  <>

1125:
old  <	; BinaryAdd index index 1>
new  < fflush$21:>

1126:
old  <	inc dword [rbp + 32]>
new  <	; Goto 2>

1127:
old  <>
new  <	jmp fflush$2>

1128:
old  < fflush$21:>
new  <>

1129:
old  <	; Goto 2>
new  < fflush$22:>

1130:
old  <	jmp fflush$2>
new  <	; Return 0>

1131:
old  <>
new  <	mov ebx, 0>

1132:
old  < fflush$22:>
new  <	mov rax, [rbp]>

1133:
old  <	; Return 0>
new  <	mov rdi, [rbp + 16]>

1134:
old  <	mov ebx, 0>
new  <	mov rbp, [rbp + 8]>

1135:
old  <	mov rax, [rbp]>
new  <	jmp rax>

1136:
old  <	mov rdi, [rbp + 16]>
new  <>

1137:
old  <	mov rbp, [rbp + 8]>
new  < fflush$23:>

1138:
old  <	jmp rax>
new  <	; FunctionEnd fflush>

1140:
old  < fflush$23:>
new  <section .text>

1141:
old  <	; FunctionEnd fflush>
new  <>

1142:
old  <>
new  < fclose:>

1143:
old  <section .text>
new  <	; Equal 7 stream 0>

1144:
old  <>
new  <	cmp qword [rbp + 24], 0>

1145:
old  < fclose:>
new  <	je fclose$7>

1146:
old  <	; Equal 7 stream 0>
new  <>

1147:
old  <	cmp qword [rbp + 24], 0>
new  < fclose$1:>

1148:
old  <	je fclose$7>
new  <	; AssignRegister rax 3>

1149:
old  <>
new  <	mov rax, 3>

1150:
old  < fclose$1:>
new  <>

1151:
old  <	; AssignRegister rax 3>
new  < fclose$2:>

1152:
old  <	mov rax, 3>
new  <	; Dereference Â£temporary786 -> stream stream 0>

1153:
old  <>
new  <	mov rsi, [rbp + 24]>

1154:
old  < fclose$2:>
new  <>

1155:
old  <	; Dereference Â£temporary757 -> stream stream 0>
new  < fclose$3:>

1156:
old  <	mov rsi, [rbp + 24]>
new  <	; IntegralToIntegral Â£temporary787 Â£temporary786 -> stream>

1157:
old  <>
new  <	mov edi, [rsi + 4]>

1158:
old  < fclose$3:>
new  <	mov rbx, 4294967295>

1159:
old  <	; IntegralToIntegral Â£temporary758 Â£temporary757 -> stream>
new  <	and rdi, rbx>

1160:
old  <	mov edi, [rsi + 4]>
new  <>

1161:
old  <	mov rbx, 4294967295>
new  < fclose$4:>

1162:
old  <	and rdi, rbx>
new  <	; AssignRegister rdi Â£temporary787>

1164:
old  < fclose$4:>
new  < fclose$5:>

1165:
old  <	; AssignRegister rdi Â£temporary758>
new  <	; SysCall>

1166:
old  <>
new  <	syscall>

1167:
old  < fclose$5:>
new  <>

1168:
old  <	; SysCall>
new  < fclose$6:>

1169:
old  <	syscall>
new  <	; Return 0>

1170:
old  <>
new  <	mov ebx, 0>

1171:
old  < fclose$6:>
new  <	mov rax, [rbp]>

1172:
old  <	; Return 0>
new  <	mov rdi, [rbp + 16]>

1173:
old  <	mov ebx, 0>
new  <	mov rbp, [rbp + 8]>

1174:
old  <	mov rax, [rbp]>
new  <	jmp rax>

1175:
old  <	mov rdi, [rbp + 16]>
new  <>

1176:
old  <	mov rbp, [rbp + 8]>
new  < fclose$7:>

1177:
old  <	jmp rax>
new  <	; Assign index 0>

1178:
old  <>
new  <	mov dword [rbp + 32], 0>

1179:
old  < fclose$7:>
new  <>

1180:
old  <	; Assign index 0>
new  < fclose$8:>

1181:
old  <	mov dword [rbp + 32], 0>
new  <	; SignedGreaterThanEqual 28 index 20>

1182:
old  <>
new  <	cmp dword [rbp + 32], 20>

1183:
old  < fclose$8:>
new  <	jge fclose$28>

1184:
old  <	; SignedGreaterThanEqual 28 index 20>
new  <>

1185:
old  <	cmp dword [rbp + 32], 20>
new  < fclose$9:>

1186:
old  <	jge fclose$28>
new  <	; IntegralToIntegral Â£temporary791 index>

1187:
old  <>
new  <	mov eax, [rbp + 32]>

1188:
old  < fclose$9:>
new  <	mov rbx, 4294967295>

1189:
old  <	; IntegralToIntegral Â£temporary762 index>
new  <	and rax, rbx>

1190:
old  <	mov eax, [rbp + 32]>
new  <>

1191:
old  <	mov rbx, 4294967295>
new  < fclose$10:>

1192:
old  <	and rax, rbx>
new  <	; UnsignedMultiply Â£temporary792 Â£temporary791 41>

1193:
old  <>
new  <	xor rdx, rdx>

1194:
old  < fclose$10:>
new  <	mul qword [Array_41#]>

1195:
old  <	; UnsignedMultiply Â£temporary763 Â£temporary762 41>
new  <>

1196:
old  <	xor rdx, rdx>
new  < fclose$11:>

1197:
old  <	mul qword [Array_41#]>
new  <	; BinaryAdd Â£temporary793 g_fileArray Â£temporary792>

1198:
old  <>
new  <	mov rsi, g_fileArray>

1199:
old  < fclose$11:>
new  <	add rsi, rax>

1200:
old  <	; BinaryAdd Â£temporary764 g_fileArray Â£temporary763>
new  <>

1201:
old  <	mov rsi, g_fileArray>
new  < fclose$12:>

1202:
old  <	add rsi, rax>
new  <	; Dereference Â£temporary790 -> Â£temporary793 Â£temporary793 0>

1204:
old  < fclose$12:>
new  < fclose$13:>

1205:
old  <	; Dereference Â£temporary761 -> Â£temporary764 Â£temporary764 0>
new  <	; Equal 26 Â£temporary790.open -> Â£temporary793 0>

1206:
old  <>
new  <	cmp dword [rsi], 0>

1207:
old  < fclose$13:>
new  <	je fclose$26>

1208:
old  <	; Equal 26 Â£temporary761.open -> Â£temporary764 0>
new  <>

1209:
old  <	cmp dword [rsi], 0>
new  < fclose$14:>

1210:
old  <	je fclose$26>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1212:
old  < fclose$14:>
new  < fclose$15:>

1213:
old  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; IntegralToIntegral Â£temporary795 index>

1214:
old  <>
new  <	mov eax, [rbp + 32]>

1215:
old  < fclose$15:>
new  <	mov rbx, 4294967295>

1216:
old  <	; IntegralToIntegral Â£temporary766 index>
new  <	and rax, rbx>

1217:
old  <	mov eax, [rbp + 32]>
new  <>

1218:
old  <	mov rbx, 4294967295>
new  < fclose$16:>

1219:
old  <	and rax, rbx>
new  <	; UnsignedMultiply Â£temporary796 Â£temporary795 41>

1220:
old  <>
new  <	xor rdx, rdx>

1221:
old  < fclose$16:>
new  <	mul qword [Array_41#]>

1222:
old  <	; UnsignedMultiply Â£temporary767 Â£temporary766 41>
new  <>

1223:
old  <	xor rdx, rdx>
new  < fclose$17:>

1224:
old  <	mul qword [Array_41#]>
new  <	; BinaryAdd Â£temporary797 g_fileArray Â£temporary796>

1225:
old  <>
new  <	mov rsi, g_fileArray>

1226:
old  < fclose$17:>
new  <	add rsi, rax>

1227:
old  <	; BinaryAdd Â£temporary768 g_fileArray Â£temporary767>
new  <>

1228:
old  <	mov rsi, g_fileArray>
new  < fclose$18:>

1229:
old  <	add rsi, rax>
new  <	; Dereference Â£temporary794 -> Â£temporary797 Â£temporary797 0>

1231:
old  < fclose$18:>
new  < fclose$19:>

1232:
old  <	; Dereference Â£temporary765 -> Â£temporary768 Â£temporary768 0>
new  <	; Address Â£temporary798 Â£temporary794 -> Â£temporary797>

1234:
old  < fclose$19:>
new  < fclose$20:>

1235:
old  <	; Address Â£temporary769 Â£temporary765 -> Â£temporary768>
new  <	; Parameter pointer Â£temporary798 60>

1236:
old  <>
new  <	mov [rbp + 60], rsi>

1237:
old  < fclose$20:>
new  <>

1238:
old  <	; Parameter pointer Â£temporary769 60>
new  < fclose$21:>

1239:
old  <	mov [rbp + 60], rsi>
new  <	; Call fclose 36 0>

1240:
old  <>
new  <	mov qword [rbp + 36], fclose$22>

1241:
old  < fclose$21:>
new  <	mov [rbp + 44], rbp>

1242:
old  <	; Call fclose 36 0>
new  <	add rbp, 36>

1243:
old  <	mov qword [rbp + 36], fclose$22>
new  <	jmp fclose>

1244:
old  <	mov [rbp + 44], rbp>
new  <>

1245:
old  <	add rbp, 36>
new  < fclose$22:>

1246:
old  <	jmp fclose>
new  <	; PostCall 36>

1248:
old  < fclose$22:>
new  < fclose$23:>

1249:
old  <	; PostCall 36>
new  <	; GetReturnValue Â£temporary799>

1251:
old  < fclose$23:>
new  < fclose$24:>

1252:
old  <	; GetReturnValue Â£temporary770>
new  <	; NotEqual 26 Â£temporary799 -1>

1253:
old  <>
new  <	cmp ebx, -1>

1254:
old  < fclose$24:>
new  <	jne fclose$26>

1255:
old  <	; NotEqual 26 Â£temporary770 -1>
new  <>

1256:
old  <	cmp ebx, -1>
new  < fclose$25:>

1257:
old  <	jne fclose$26>
new  <	; Return -1>

1258:
old  <>
new  <	mov ebx, -1>

1259:
old  < fclose$25:>
new  <	mov rax, [rbp]>

1260:
old  <	; Return -1>
new  <	mov rdi, [rbp + 16]>

1261:
old  <	mov ebx, -1>
new  <	mov rbp, [rbp + 8]>

1262:
old  <	mov rax, [rbp]>
new  <	jmp rax>

1263:
old  <	mov rdi, [rbp + 16]>
new  <>

1264:
old  <	mov rbp, [rbp + 8]>
new  < fclose$26:>

1265:
old  <	jmp rax>
new  <	; BinaryAdd index index 1>

1266:
old  <>
new  <	inc dword [rbp + 32]>

1267:
old  < fclose$26:>
new  <>

1268:
old  <	; BinaryAdd index index 1>
new  < fclose$27:>

1269:
old  <	inc dword [rbp + 32]>
new  <	; Goto 8>

1270:
old  <>
new  <	jmp fclose$8>

1271:
old  < fclose$27:>
new  <>

1272:
old  <	; Goto 8>
new  < fclose$28:>

1273:
old  <	jmp fclose$8>
new  <	; Return 0>

1274:
old  <>
new  <	mov ebx, 0>

1275:
old  < fclose$28:>
new  <	mov rax, [rbp]>

1276:
old  <	; Return 0>
new  <	mov rdi, [rbp + 16]>

1277:
old  <	mov ebx, 0>
new  <	mov rbp, [rbp + 8]>

1278:
old  <	mov rax, [rbp]>
new  <	jmp rax>

1279:
old  <	mov rdi, [rbp + 16]>
new  <>

1280:
old  <	mov rbp, [rbp + 8]>
new  < fclose$29:>

1281:
old  <	jmp rax>
new  <	; FunctionEnd fclose>

1283:
old  < fclose$29:>
new  <section .text>

1284:
old  <	; FunctionEnd fclose>
new  <>

1285:
old  <>
new  < remove:>

1286:
old  <section .text>
new  <	; AssignRegister rax 88>

1287:
old  <>
new  <	mov rax, 88>

1288:
old  < remove:>
new  <>

1289:
old  <	; AssignRegister rax 88>
new  < remove$1:>

1290:
old  <	mov rax, 88>
new  <	; IntegralToIntegral Â£temporary804 name>

1291:
old  <>
new  <	mov rdi, [rbp + 24]>

1292:
old  < remove$1:>
new  <>

1293:
old  <	; IntegralToIntegral Â£temporary775 name>
new  < remove$2:>

1294:
old  <	mov rdi, [rbp + 24]>
new  <	; AssignRegister rdi Â£temporary804>

1296:
old  < remove$2:>
new  < remove$3:>

1297:
old  <	; AssignRegister rdi Â£temporary775>
new  <	; SysCall>

1298:
old  <>
new  <	syscall>

1299:
old  < remove$3:>
new  <>

1300:
old  <	; SysCall>
new  < remove$4:>

1301:
old  <	syscall>
new  <	; Return 0>

1302:
old  <>
new  <	mov ebx, 0>

1303:
old  < remove$4:>
new  <	mov rax, [rbp]>

1304:
old  <	; Return 0>
new  <	mov rdi, [rbp + 16]>

1305:
old  <	mov ebx, 0>
new  <	mov rbp, [rbp + 8]>

1306:
old  <	mov rax, [rbp]>
new  <	jmp rax>

1307:
old  <	mov rdi, [rbp + 16]>
new  <>

1308:
old  <	mov rbp, [rbp + 8]>
new  < remove$5:>

1309:
old  <	jmp rax>
new  <	; FunctionEnd remove>

1311:
old  < remove$5:>
new  <section .text>

1312:
old  <	; FunctionEnd remove>
new  <>

1313:
old  <>
new  < rename:>

1314:
old  <section .text>
new  <	; AssignRegister rax 82>

1315:
old  <>
new  <	mov rax, 82>

1316:
old  < rename:>
new  <>

1317:
old  <	; AssignRegister rax 82>
new  < rename$1:>

1318:
old  <	mov rax, 82>
new  <	; IntegralToIntegral Â£temporary807 oldName>

1319:
old  <>
new  <	mov rdi, [rbp + 24]>

1320:
old  < rename$1:>
new  <>

1321:
old  <	; IntegralToIntegral Â£temporary778 oldName>
new  < rename$2:>

1322:
old  <	mov rdi, [rbp + 24]>
new  <	; AssignRegister rdi Â£temporary807>

1324:
old  < rename$2:>
new  < rename$3:>

1325:
old  <	; AssignRegister rdi Â£temporary778>
new  <	; IntegralToIntegral Â£temporary809 newName>

1326:
old  <>
new  <	mov rsi, [rbp + 32]>

1327:
old  < rename$3:>
new  <>

1328:
old  <	; IntegralToIntegral Â£temporary780 newName>
new  < rename$4:>

1329:
old  <	mov rsi, [rbp + 32]>
new  <	; AssignRegister rsi Â£temporary809>

1331:
old  < rename$4:>
new  < rename$5:>

1332:
old  <	; AssignRegister rsi Â£temporary780>
new  <	; SysCall>

1333:
old  <>
new  <	syscall>

1334:
old  < rename$5:>
new  <>

1335:
old  <	; SysCall>
new  < rename$6:>

1336:
old  <	syscall>
new  <	; Return 0>

1337:
old  <>
new  <	mov ebx, 0>

1338:
old  < rename$6:>
new  <	mov rax, [rbp]>

1339:
old  <	; Return 0>
new  <	mov rdi, [rbp + 16]>

1340:
old  <	mov ebx, 0>
new  <	mov rbp, [rbp + 8]>

1341:
old  <	mov rax, [rbp]>
new  <	jmp rax>

1342:
old  <	mov rdi, [rbp + 16]>
new  <>

1343:
old  <	mov rbp, [rbp + 8]>
new  < rename$7:>

1344:
old  <	jmp rax>
new  <	; FunctionEnd rename>

1346:
old  < rename$7:>
new  <section .text>

1347:
old  <	; FunctionEnd rename>
new  <>

1348:
old  <>
new  < setvbuf:>

1349:
old  <section .text>
new  <	; Return 0>

1350:
old  <>
new  <	mov ebx, 0>

1351:
old  < setvbuf:>
new  <	mov rax, [rbp]>

1352:
old  <	; Return 0>
new  <	mov rdi, [rbp + 16]>

1353:
old  <	mov ebx, 0>
new  <	mov rbp, [rbp + 8]>

1354:
old  <	mov rax, [rbp]>
new  <	jmp rax>

1355:
old  <	mov rdi, [rbp + 16]>
new  <>

1356:
old  <	mov rbp, [rbp + 8]>
new  < setvbuf$1:>

1357:
old  <	jmp rax>
new  <	; FunctionEnd setvbuf>

1359:
old  < setvbuf$1:>
new  <section .text>

1360:
old  <	; FunctionEnd setvbuf>
new  <>

1361:
old  <>
new  < setbuf:>

1362:
old  <section .text>
new  <	; Return>

1363:
old  <>
new  <	mov rax, [rbp]>

1364:
old  < setbuf:>
new  <	mov rdi, [rbp + 16]>

1365:
old  <	; Empty>
new  <	mov rbp, [rbp + 8]>

1366:
old  <>
new  <	jmp rax>

1367:
old  < setbuf$1:>
new  <>

1368:
old  <	; Return>
new  < setbuf$1:>

1369:
old  <	mov rax, [rbp]>
new  <	; FunctionEnd setbuf>

1370:
old  <	mov rdi, [rbp + 16]>
new  <>

1371:
old  <	mov rbp, [rbp + 8]>
new  <section .text>

1372:
old  <	jmp rax>
new  <>

1373:
old  <>
new  < fgetc:>

1374:
old  < setbuf$2:>
new  <	; Assign c 0>

1375:
old  <	; FunctionEnd setbuf>
new  <	mov byte [rbp + 32], 0>

1377:
old  <section .text>
new  < fgetc$1:>

1378:
old  <>
new  <	; PreCall 33 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1379:
old  < fgetc:>
new  <>

1380:
old  <	; Assign c 0>
new  < fgetc$2:>

1381:
old  <	mov byte [rbp + 32], 0>
new  <	; Address Â£temporary810 c>

1382:
old  <>
new  <	mov rsi, rbp>

1383:
old  < fgetc$1:>
new  <	add rsi, 32>

1384:
old  <	; PreCall 33 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1385:
old  <>
new  < fgetc$3:>

1386:
old  < fgetc$2:>
new  <	; Parameter pointer Â£temporary810 57>

1387:
old  <	; Address Â£temporary781 c>
new  <	mov [rbp + 57], rsi>

1388:
old  <	mov rsi, rbp>
new  <>

1389:
old  <	add rsi, 32>
new  < fgetc$4:>

1390:
old  <>
new  <	; Parameter signedint 1 65>

1391:
old  < fgetc$3:>
new  <	mov dword [rbp + 65], 1>

1392:
old  <	; Parameter pointer Â£temporary781 57>
new  <>

1393:
old  <	mov [rbp + 57], rsi>
new  < fgetc$5:>

1394:
old  <>
new  <	; Parameter signedint 1 69>

1395:
old  < fgetc$4:>
new  <	mov dword [rbp + 69], 1>

1396:
old  <	; Parameter signedint 1 65>
new  <>

1397:
old  <	mov dword [rbp + 65], 1>
new  < fgetc$6:>

1398:
old  <>
new  <	; Parameter pointer stream 73>

1399:
old  < fgetc$5:>
new  <	mov rax, [rbp + 24]>

1400:
old  <	; Parameter signedint 1 69>
new  <	mov [rbp + 73], rax>

1401:
old  <	mov dword [rbp + 69], 1>
new  <>

1402:
old  <>
new  < fgetc$7:>

1403:
old  < fgetc$6:>
new  <	; Call fread 33 0>

1404:
old  <	; Parameter pointer stream 73>
new  <	mov qword [rbp + 33], fgetc$8>

1405:
old  <	mov rax, [rbp + 24]>
new  <	mov [rbp + 41], rbp>

1406:
old  <	mov [rbp + 73], rax>
new  <	add rbp, 33>

1407:
old  <>
new  <	jmp fread>

1408:
old  < fgetc$7:>
new  <>

1409:
old  <	; Call fread 33 0>
new  < fgetc$8:>

1410:
old  <	mov qword [rbp + 33], fgetc$8>
new  <	; PostCall 33>

1411:
old  <	mov [rbp + 41], rbp>
new  <>

1412:
old  <	add rbp, 33>
new  < fgetc$9:>

1413:
old  <	jmp fread>
new  <	; GetReturnValue Â£temporary811>

1415:
old  < fgetc$8:>
new  < fgetc$10:>

1416:
old  <	; PostCall 33>
new  <	; SignedLessThanEqual 13 Â£temporary811 0>

1417:
old  <>
new  <	cmp ebx, 0>

1418:
old  < fgetc$9:>
new  <	jle fgetc$13>

1419:
old  <	; GetReturnValue Â£temporary782>
new  <>

1420:
old  <>
new  < fgetc$11:>

1421:
old  < fgetc$10:>
new  <	; IntegralToIntegral Â£temporary813 c>

1422:
old  <	; SignedLessThanEqual 13 Â£temporary782 0>
new  <	mov bl, [rbp + 32]>

1423:
old  <	cmp ebx, 0>
new  <	and ebx, 255>

1424:
old  <	jle fgetc$13>
new  <	cmp bl, 0>

1425:
old  <>
new  <	jge fgetc$12>

1426:
old  < fgetc$11:>
new  <	neg bl>

1427:
old  <	; IntegralToIntegral Â£temporary784 c>
new  <	neg ebx>

1428:
old  <	mov bl, [rbp + 32]>
new  <>

1429:
old  <	and ebx, 255>
new  < fgetc$12:>

1430:
old  <	cmp bl, 0>
new  <	; Return Â£temporary813>

1431:
old  <	jge fgetc$12>
new  <	mov rax, [rbp]>

1432:
old  <	neg bl>
new  <	mov rdi, [rbp + 16]>

1433:
old  <	neg ebx>
new  <	mov rbp, [rbp + 8]>

1434:
old  <>
new  <	jmp rax>

1435:
old  < fgetc$12:>
new  <>

1436:
old  <	; Return Â£temporary784>
new  < fgetc$13:>

1437:
old  <	mov rax, [rbp]>
new  <	; Return -1>

1438:
old  <	mov rdi, [rbp + 16]>
new  <	mov ebx, -1>

1439:
old  <	mov rbp, [rbp + 8]>
new  <	mov rax, [rbp]>

1440:
old  <	jmp rax>
new  <	mov rdi, [rbp + 16]>

1441:
old  <>
new  <	mov rbp, [rbp + 8]>

1442:
old  < fgetc$13:>
new  <	jmp rax>

1443:
old  <	; Return -1>
new  <>

1444:
old  <	mov ebx, -1>
new  < fgetc$14:>

1445:
old  <	mov rax, [rbp]>
new  <	; FunctionEnd fgetc>

1446:
old  <	mov rdi, [rbp + 16]>
new  <>

1447:
old  <	mov rbp, [rbp + 8]>
new  <section .data>

1448:
old  <	jmp rax>
new  <>

1449:
old  <>
new  <string_25c#:>

1450:
old  < fgetc$14:>
new  <	; Initializer String %c>

1451:
old  <	; FunctionEnd fgetc>
new  <	db "%c", 0>

1453:
old  <section .data>
new  <section .text>

1455:
old  <string_25c#:>
new  < fgets:>

1456:
old  <	; Initializer String %c>
new  <	; Assign count 0>

1457:
old  <	db "%c", 0>
new  <	mov dword [rbp + 44], 0>

1459:
old  <section .text>
new  < fgets$1:>

1460:
old  <>
new  <	; Assign prevChar 0>

1461:
old  < fgets:>
new  <	mov byte [rbp + 48], 0>

1462:
old  <	; Assign count 0>
new  <>

1463:
old  <	mov dword [rbp + 44], 0>
new  < fgets$2:>

1464:
old  <>
new  <	; BinarySubtract Â£temporary815 size 1>

1465:
old  < fgets$1:>
new  <	mov eax, [rbp + 32]>

1466:
old  <	; Assign prevChar 0>
new  <	dec eax>

1467:
old  <	mov byte [rbp + 48], 0>
new  <>

1468:
old  <>
new  < fgets$3:>

1469:
old  < fgets$2:>
new  <	; SignedGreaterThanEqual 36 count Â£temporary815>

1470:
old  <	; BinarySubtract Â£temporary786 size 1>
new  <	cmp [rbp + 44], eax>

1471:
old  <	mov eax, [rbp + 32]>
new  <	jge fgets$36>

1472:
old  <	dec eax>
new  <>

1473:
old  <>
new  < fgets$4:>

1474:
old  < fgets$3:>
new  <	; Assign currChar 0>

1475:
old  <	; SignedGreaterThanEqual 36 count Â£temporary786>
new  <	mov byte [rbp + 49], 0>

1476:
old  <	cmp [rbp + 44], eax>
new  <>

1477:
old  <	jge fgets$36>
new  < fgets$5:>

1478:
old  <>
new  <	; PreCall 50 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1479:
old  < fgets$4:>
new  <>

1480:
old  <	; Assign currChar 0>
new  < fgets$6:>

1481:
old  <	mov byte [rbp + 49], 0>
new  <	; Parameter pointer stream 74>

1482:
old  <>
new  <	mov rax, [rbp + 36]>

1483:
old  < fgets$5:>
new  <	mov [rbp + 74], rax>

1484:
old  <	; PreCall 50 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1485:
old  <>
new  < fgets$7:>

1486:
old  < fgets$6:>
new  <	; Parameter pointer "%c" 82>

1487:
old  <	; Parameter pointer stream 74>
new  <	mov qword [rbp + 82], string_25c#>

1488:
old  <	mov rax, [rbp + 36]>
new  <>

1489:
old  <	mov [rbp + 74], rax>
new  < fgets$8:>

1490:
old  <>
new  <	; Address Â£temporary817 currChar>

1491:
old  < fgets$7:>
new  <	mov rsi, rbp>

1492:
old  <	; Parameter pointer "%c" 82>
new  <	add rsi, 49>

1493:
old  <	mov qword [rbp + 82], string_25c#>
new  <>

1494:
old  <>
new  < fgets$9:>

1495:
old  < fgets$8:>
new  <	; Parameter pointer Â£temporary817 90>

1496:
old  <	; Address Â£temporary788 currChar>
new  <	mov [rbp + 90], rsi>

1497:
old  <	mov rsi, rbp>
new  <>

1498:
old  <	add rsi, 49>
new  < fgets$10:>

1499:
old  <>
new  <	; Call fscanf 50 8>

1500:
old  < fgets$9:>
new  <	mov qword [rbp + 50], fgets$11>

1501:
old  <	; Parameter pointer Â£temporary788 90>
new  <	mov [rbp + 58], rbp>

1502:
old  <	mov [rbp + 90], rsi>
new  <	add rbp, 50>

1503:
old  <>
new  <	mov rdi, rbp>

1504:
old  < fgets$10:>
new  <	add rdi, 8>

1505:
old  <	; Call fscanf 50 8>
new  <	jmp fscanf>

1506:
old  <	mov qword [rbp + 50], fgets$11>
new  <>

1507:
old  <	mov [rbp + 58], rbp>
new  < fgets$11:>

1508:
old  <	add rbp, 50>
new  <	; PostCall 50>

1509:
old  <	mov rdi, rbp>
new  <>

1510:
old  <	add rdi, 8>
new  < fgets$12:>

1511:
old  <	jmp fscanf>
new  <	; NotEqual 19 prevChar 13>

1512:
old  <>
new  <	cmp byte [rbp + 48], 13>

1513:
old  < fgets$11:>
new  <	jne fgets$19>

1514:
old  <	; PostCall 50>
new  <>

1515:
old  <>
new  < fgets$13:>

1516:
old  < fgets$12:>
new  <	; NotEqual 19 currChar 10>

1517:
old  <	; NotEqual 19 prevChar 13>
new  <	cmp byte [rbp + 49], 10>

1518:
old  <	cmp byte [rbp + 48], 13>
new  <	jne fgets$19>

1519:
old  <	jne fgets$19>
new  <>

1520:
old  <>
new  < fgets$14:>

1521:
old  < fgets$13:>
new  <	; IntegralToIntegral Â£temporary823 count>

1522:
old  <	; NotEqual 19 currChar 10>
new  <	mov eax, [rbp + 44]>

1523:
old  <	cmp byte [rbp + 49], 10>
new  <	mov rbx, 4294967295>

1524:
old  <	jne fgets$19>
new  <	and rax, rbx>

1526:
old  < fgets$14:>
new  < fgets$15:>

1527:
old  <	; IntegralToIntegral Â£temporary794 count>
new  <	; BinaryAdd Â£temporary825 text Â£temporary823>

1528:
old  <	mov eax, [rbp + 44]>
new  <	mov rsi, [rbp + 24]>

1529:
old  <	mov rbx, 4294967295>
new  <	add rsi, rax>

1530:
old  <	and rax, rbx>
new  <>

1531:
old  <>
new  < fgets$16:>

1532:
old  < fgets$15:>
new  <	; Dereference Â£temporary822 -> Â£temporary825 Â£temporary825 0>

1533:
old  <	; BinaryAdd Â£temporary796 text Â£temporary794>
new  <>

1534:
old  <	mov rsi, [rbp + 24]>
new  < fgets$17:>

1535:
old  <	add rsi, rax>
new  <	; Assign Â£temporary822 -> Â£temporary825 0>

1536:
old  <>
new  <	mov byte [rsi], 0>

1537:
old  < fgets$16:>
new  <>

1538:
old  <	; Dereference Â£temporary793 -> Â£temporary796 Â£temporary796 0>
new  < fgets$18:>

1539:
old  <>
new  <	; Goto 36>

1540:
old  < fgets$17:>
new  <	jmp fgets$36>

1541:
old  <	; Assign Â£temporary793 -> Â£temporary796 0>
new  <>

1542:
old  <	mov byte [rsi], 0>
new  < fgets$19:>

1543:
old  <>
new  <	; IntegralToIntegral Â£temporary826 currChar>

1544:
old  < fgets$18:>
new  <	mov al, [rbp + 49]>

1545:
old  <	; Goto 36>
new  <	and eax, 255>

1546:
old  <	jmp fgets$36>
new  <	cmp al, 0>

1547:
old  <>
new  <	jge fgets$20>

1548:
old  < fgets$19:>
new  <	neg al>

1549:
old  <	; IntegralToIntegral Â£temporary797 currChar>
new  <	neg eax>

1550:
old  <	mov al, [rbp + 49]>
new  <>

1551:
old  <	and eax, 255>
new  < fgets$20:>

1552:
old  <	cmp al, 0>
new  <	; NotEqual 26 Â£temporary826 -1>

1553:
old  <	jge fgets$20>
new  <	cmp eax, -1>

1554:
old  <	neg al>
new  <	jne fgets$26>

1555:
old  <	neg eax>
new  <>

1556:
old  <>
new  < fgets$21:>

1557:
old  < fgets$20:>
new  <	; IntegralToIntegral Â£temporary829 count>

1558:
old  <	; NotEqual 26 Â£temporary797 -1>
new  <	mov eax, [rbp + 44]>

1559:
old  <	cmp eax, -1>
new  <	mov rbx, 4294967295>

1560:
old  <	jne fgets$26>
new  <	and rax, rbx>

1562:
old  < fgets$21:>
new  < fgets$22:>

1563:
old  <	; IntegralToIntegral Â£temporary800 count>
new  <	; BinaryAdd Â£temporary831 text Â£temporary829>

1564:
old  <	mov eax, [rbp + 44]>
new  <	mov rsi, [rbp + 24]>

1565:
old  <	mov rbx, 4294967295>
new  <	add rsi, rax>

1566:
old  <	and rax, rbx>
new  <>

1567:
old  <>
new  < fgets$23:>

1568:
old  < fgets$22:>
new  <	; Dereference Â£temporary828 -> Â£temporary831 Â£temporary831 0>

1569:
old  <	; BinaryAdd Â£temporary802 text Â£temporary800>
new  <>

1570:
old  <	mov rsi, [rbp + 24]>
new  < fgets$24:>

1571:
old  <	add rsi, rax>
new  <	; Assign Â£temporary828 -> Â£temporary831 0>

1572:
old  <>
new  <	mov byte [rsi], 0>

1573:
old  < fgets$23:>
new  <>

1574:
old  <	; Dereference Â£temporary799 -> Â£temporary802 Â£temporary802 0>
new  < fgets$25:>

1575:
old  <>
new  <	; Goto 36>

1576:
old  < fgets$24:>
new  <	jmp fgets$36>

1577:
old  <	; Assign Â£temporary799 -> Â£temporary802 0>
new  <>

1578:
old  <	mov byte [rsi], 0>
new  < fgets$26:>

1579:
old  <>
new  <	; Equal 34 currChar 13>

1580:
old  < fgets$25:>
new  <	cmp byte [rbp + 49], 13>

1581:
old  <	; Goto 36>
new  <	je fgets$34>

1582:
old  <	jmp fgets$36>
new  <>

1583:
old  <>
new  < fgets$27:>

1584:
old  < fgets$26:>
new  <	; Equal 34 currChar 10>

1585:
old  <	; Equal 34 currChar 13>
new  <	cmp byte [rbp + 49], 10>

1586:
old  <	cmp byte [rbp + 49], 13>
new  <	je fgets$34>

1587:
old  <	je fgets$34>
new  <>

1588:
old  <>
new  < fgets$28:>

1589:
old  < fgets$27:>
new  <	; Assign Â£temporary835 count>

1590:
old  <	; Equal 34 currChar 10>
new  <	mov eax, [rbp + 44]>

1591:
old  <	cmp byte [rbp + 49], 10>
new  <>

1592:
old  <	je fgets$34>
new  < fgets$29:>

1593:
old  <>
new  <	; BinaryAdd count count 1>

1594:
old  < fgets$28:>
new  <	inc dword [rbp + 44]>

1595:
old  <	; Assign Â£temporary806 count>
new  <>

1596:
old  <	mov eax, [rbp + 44]>
new  < fgets$30:>

1597:
old  <>
new  <	; IntegralToIntegral Â£temporary837 Â£temporary835>

1598:
old  < fgets$29:>
new  <	mov rbx, 4294967295>

1599:
old  <	; BinaryAdd count count 1>
new  <	and rax, rbx>

1600:
old  <	inc dword [rbp + 44]>
new  <>

1601:
old  <>
new  < fgets$31:>

1602:
old  < fgets$30:>
new  <	; BinaryAdd Â£temporary839 text Â£temporary837>

1603:
old  <	; IntegralToIntegral Â£temporary808 Â£temporary806>
new  <	mov rsi, [rbp + 24]>

1604:
old  <	mov rbx, 4294967295>
new  <	add rsi, rax>

1605:
old  <	and rax, rbx>
new  <>

1606:
old  <>
new  < fgets$32:>

1607:
old  < fgets$31:>
new  <	; Dereference Â£temporary836 -> Â£temporary839 Â£temporary839 0>

1608:
old  <	; BinaryAdd Â£temporary810 text Â£temporary808>
new  <>

1609:
old  <	mov rsi, [rbp + 24]>
new  < fgets$33:>

1610:
old  <	add rsi, rax>
new  <	; Assign Â£temporary836 -> Â£temporary839 currChar>

1611:
old  <>
new  <	mov al, [rbp + 49]>

1612:
old  < fgets$32:>
new  <	mov [rsi], al>

1613:
old  <	; Dereference Â£temporary807 -> Â£temporary810 Â£temporary810 0>
new  <>

1614:
old  <>
new  < fgets$34:>

1615:
old  < fgets$33:>
new  <	; Assign prevChar currChar>

1616:
old  <	; Assign Â£temporary807 -> Â£temporary810 currChar>
new  <	mov al, [rbp + 49]>

1617:
old  <	mov al, [rbp + 49]>
new  <	mov [rbp + 48], al>

1618:
old  <	mov [rsi], al>
new  <>

1619:
old  <>
new  < fgets$35:>

1620:
old  < fgets$34:>
new  <	; Goto 2>

1621:
old  <	; Assign prevChar currChar>
new  <	jmp fgets$2>

1622:
old  <	mov al, [rbp + 49]>
new  <>

1623:
old  <	mov [rbp + 48], al>
new  < fgets$36:>

1624:
old  <>
new  <	; Return text>

1625:
old  < fgets$35:>
new  <	mov rbx, [rbp + 24]>

1626:
old  <	; Goto 2>
new  <	mov rax, [rbp]>

1627:
old  <	jmp fgets$2>
new  <	mov rdi, [rbp + 16]>

1628:
old  <>
new  <	mov rbp, [rbp + 8]>

1629:
old  < fgets$36:>
new  <	jmp rax>

1630:
old  <	; Return text>
new  <>

1631:
old  <	mov rbx, [rbp + 24]>
new  < fgets$37:>

1632:
old  <	mov rax, [rbp]>
new  <	; FunctionEnd fgets>

1633:
old  <	mov rdi, [rbp + 16]>
new  <>

1634:
old  <	mov rbp, [rbp + 8]>
new  <section .text>

1635:
old  <	jmp rax>
new  <>

1636:
old  <>
new  < fputs:>

1637:
old  < fgets$37:>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1638:
old  <	; FunctionEnd fgets>
new  <>

1639:
old  <>
new  < fputs$1:>

1640:
old  <section .text>
new  <	; Parameter pointer s 64>

1641:
old  <>
new  <	mov rax, [rbp + 24]>

1642:
old  < fputs:>
new  <	mov [rbp + 64], rax>

1643:
old  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1644:
old  <>
new  < fputs$2:>

1645:
old  < fputs$1:>
new  <	; Call strlen 40 0>

1646:
old  <	; Parameter pointer s 64>
new  <	mov qword [rbp + 40], fputs$3>

1647:
old  <	mov rax, [rbp + 24]>
new  <	mov [rbp + 48], rbp>

1648:
old  <	mov [rbp + 64], rax>
new  <	add rbp, 40>

1649:
old  <>
new  <	jmp strlen>

1650:
old  < fputs$2:>
new  <>

1651:
old  <	; Call strlen 40 0>
new  < fputs$3:>

1652:
old  <	mov qword [rbp + 40], fputs$3>
new  <	; PostCall 40>

1653:
old  <	mov [rbp + 48], rbp>
new  <>

1654:
old  <	add rbp, 40>
new  < fputs$4:>

1655:
old  <	jmp strlen>
new  <	; GetReturnValue Â£temporary841>

1657:
old  < fputs$3:>
new  < fputs$5:>

1658:
old  <	; PostCall 40>
new  <	; BinaryAdd size Â£temporary841 1>

1659:
old  <>
new  <	inc ebx>

1660:
old  < fputs$4:>
new  <	mov [rbp + 40], ebx>

1661:
old  <	; GetReturnValue Â£temporary812>
new  <>

1662:
old  <>
new  < fputs$6:>

1663:
old  < fputs$5:>
new  <	; PreCall 44 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1664:
old  <	; BinaryAdd size Â£temporary812 1>
new  <>

1665:
old  <	inc ebx>
new  < fputs$7:>

1666:
old  <	mov [rbp + 40], ebx>
new  <	; Parameter pointer s 68>

1667:
old  <>
new  <	mov rax, [rbp + 24]>

1668:
old  < fputs$6:>
new  <	mov [rbp + 68], rax>

1669:
old  <	; PreCall 44 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1670:
old  <>
new  < fputs$8:>

1671:
old  < fputs$7:>
new  <	; Parameter signedint size 76>

1672:
old  <	; Parameter pointer s 68>
new  <	mov eax, [rbp + 40]>

1673:
old  <	mov rax, [rbp + 24]>
new  <	mov [rbp + 76], eax>

1674:
old  <	mov [rbp + 68], rax>
new  <>

1675:
old  <>
new  < fputs$9:>

1676:
old  < fputs$8:>
new  <	; Parameter signedint 1 80>

1677:
old  <	; Parameter signedint size 76>
new  <	mov dword [rbp + 80], 1>

1678:
old  <	mov eax, [rbp + 40]>
new  <>

1679:
old  <	mov [rbp + 76], eax>
new  < fputs$10:>

1680:
old  <>
new  <	; Parameter pointer stream 84>

1681:
old  < fputs$9:>
new  <	mov rax, [rbp + 32]>

1682:
old  <	; Parameter signedint 1 80>
new  <	mov [rbp + 84], rax>

1683:
old  <	mov dword [rbp + 80], 1>
new  <>

1684:
old  <>
new  < fputs$11:>

1685:
old  < fputs$10:>
new  <	; Call fwrite 44 0>

1686:
old  <	; Parameter pointer stream 84>
new  <	mov qword [rbp + 44], fputs$12>

1687:
old  <	mov rax, [rbp + 32]>
new  <	mov [rbp + 52], rbp>

1688:
old  <	mov [rbp + 84], rax>
new  <	add rbp, 44>

1689:
old  <>
new  <	jmp fwrite>

1690:
old  < fputs$11:>
new  <>

1691:
old  <	; Call fwrite 44 0>
new  < fputs$12:>

1692:
old  <	mov qword [rbp + 44], fputs$12>
new  <	; PostCall 44>

1693:
old  <	mov [rbp + 52], rbp>
new  <>

1694:
old  <	add rbp, 44>
new  < fputs$13:>

1695:
old  <	jmp fwrite>
new  <	; GetReturnValue Â£temporary844>

1697:
old  < fputs$12:>
new  < fputs$14:>

1698:
old  <	; PostCall 44>
new  <	; NotEqual 17 Â£temporary844 size>

1699:
old  <>
new  <	cmp ebx, [rbp + 40]>

1700:
old  < fputs$13:>
new  <	jne fputs$17>

1701:
old  <	; GetReturnValue Â£temporary815>
new  <>

1702:
old  <>
new  < fputs$15:>

1703:
old  < fputs$14:>
new  <	; Assign Â£temporary846 0>

1704:
old  <	; NotEqual 17 Â£temporary815 size>
new  <	mov ebx, 0>

1705:
old  <	cmp ebx, [rbp + 40]>
new  <>

1706:
old  <	jne fputs$17>
new  < fputs$16:>

1707:
old  <>
new  <	; Goto 18>

1708:
old  < fputs$15:>
new  <	jmp fputs$18>

1709:
old  <	; Assign Â£temporary817 0>
new  <>

1710:
old  <	mov ebx, 0>
new  < fputs$17:>

1711:
old  <>
new  <	; Assign Â£temporary846 -1>

1712:
old  < fputs$16:>
new  <	mov ebx, -1>

1713:
old  <	; Goto 18>
new  <>

1714:
old  <	jmp fputs$18>
new  < fputs$18:>

1715:
old  <>
new  <	; Return Â£temporary846>

1716:
old  < fputs$17:>
new  <	mov rax, [rbp]>

1717:
old  <	; Assign Â£temporary817 -1>
new  <	mov rdi, [rbp + 16]>

1718:
old  <	mov ebx, -1>
new  <	mov rbp, [rbp + 8]>

1719:
old  <>
new  <	jmp rax>

1720:
old  < fputs$18:>
new  <>

1721:
old  <	; Return Â£temporary817>
new  < fputs$19:>

1722:
old  <	mov rax, [rbp]>
new  <	; FunctionEnd fputs>

1723:
old  <	mov rdi, [rbp + 16]>
new  <>

1724:
old  <	mov rbp, [rbp + 8]>
new  <section .text>

1725:
old  <	jmp rax>
new  <>

1726:
old  <>
new  < getchar:>

1727:
old  < fputs$19:>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1728:
old  <	; FunctionEnd fputs>
new  <>

1729:
old  <>
new  < getchar$1:>

1730:
old  <section .text>
new  <	; Parameter pointer stdin 48>

1731:
old  <>
new  <	mov rax, [stdin]>

1732:
old  < getchar:>
new  <	mov [rbp + 48], rax>

1733:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1734:
old  <>
new  < getchar$2:>

1735:
old  < getchar$1:>
new  <	; Call fgetc 24 0>

1736:
old  <	; Parameter pointer stdin 48>
new  <	mov qword [rbp + 24], getchar$3>

1737:
old  <	mov rax, [stdin]>
new  <	mov [rbp + 32], rbp>

1738:
old  <	mov [rbp + 48], rax>
new  <	add rbp, 24>

1739:
old  <>
new  <	jmp fgetc>

1740:
old  < getchar$2:>
new  <>

1741:
old  <	; Call fgetc 24 0>
new  < getchar$3:>

1742:
old  <	mov qword [rbp + 24], getchar$3>
new  <	; PostCall 24>

1743:
old  <	mov [rbp + 32], rbp>
new  <>

1744:
old  <	add rbp, 24>
new  < getchar$4:>

1745:
old  <	jmp fgetc>
new  <	; GetReturnValue Â£temporary847>

1747:
old  < getchar$3:>
new  < getchar$5:>

1748:
old  <	; PostCall 24>
new  <	; Return Â£temporary847>

1749:
old  <>
new  <	mov rax, [rbp]>

1750:
old  < getchar$4:>
new  <	mov rdi, [rbp + 16]>

1751:
old  <	; GetReturnValue Â£temporary818>
new  <	mov rbp, [rbp + 8]>

1752:
old  <>
new  <	jmp rax>

1753:
old  < getchar$5:>
new  <>

1754:
old  <	; Return Â£temporary818>
new  < getchar$6:>

1755:
old  <	mov rax, [rbp]>
new  <	; FunctionEnd getchar>

1756:
old  <	mov rdi, [rbp + 16]>
new  <>

1757:
old  <	mov rbp, [rbp + 8]>
new  <section .text>

1758:
old  <	jmp rax>
new  <>

1759:
old  <>
new  < gets:>

1760:
old  < getchar$6:>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1761:
old  <	; FunctionEnd getchar>
new  <>

1762:
old  <>
new  < gets$1:>

1763:
old  <section .text>
new  <	; Parameter pointer s 56>

1764:
old  <>
new  <	mov rax, [rbp + 24]>

1765:
old  < gets:>
new  <	mov [rbp + 56], rax>

1766:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1767:
old  <>
new  < gets$2:>

1768:
old  < gets$1:>
new  <	; Parameter signedint -1 64>

1769:
old  <	; Parameter pointer s 56>
new  <	mov dword [rbp + 64], -1>

1770:
old  <	mov rax, [rbp + 24]>
new  <>

1771:
old  <	mov [rbp + 56], rax>
new  < gets$3:>

1772:
old  <>
new  <	; Parameter pointer stdin 68>

1773:
old  < gets$2:>
new  <	mov rax, [stdin]>

1774:
old  <	; Parameter signedint -1 64>
new  <	mov [rbp + 68], rax>

1775:
old  <	mov dword [rbp + 64], -1>
new  <>

1776:
old  <>
new  < gets$4:>

1777:
old  < gets$3:>
new  <	; Call fgets 32 0>

1778:
old  <	; Parameter pointer stdin 68>
new  <	mov qword [rbp + 32], gets$5>

1779:
old  <	mov rax, [stdin]>
new  <	mov [rbp + 40], rbp>

1780:
old  <	mov [rbp + 68], rax>
new  <	add rbp, 32>

1781:
old  <>
new  <	jmp fgets>

1782:
old  < gets$4:>
new  <>

1783:
old  <	; Call fgets 32 0>
new  < gets$5:>

1784:
old  <	mov qword [rbp + 32], gets$5>
new  <	; PostCall 32>

1785:
old  <	mov [rbp + 40], rbp>
new  <>

1786:
old  <	add rbp, 32>
new  < gets$6:>

1787:
old  <	jmp fgets>
new  <	; GetReturnValue Â£temporary848>

1789:
old  < gets$5:>
new  < gets$7:>

1790:
old  <	; PostCall 32>
new  <	; Equal 21 Â£temporary848 0>

1791:
old  <>
new  <	cmp rbx, 0>

1792:
old  < gets$6:>
new  <	je gets$21>

1793:
old  <	; GetReturnValue Â£temporary819>
new  <>

1794:
old  <>
new  < gets$8:>

1795:
old  < gets$7:>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1796:
old  <	; Equal 21 Â£temporary819 0>
new  <>

1797:
old  <	cmp rbx, 0>
new  < gets$9:>

1798:
old  <	je gets$21>
new  <	; Parameter pointer s 56>

1799:
old  <>
new  <	mov rax, [rbp + 24]>

1800:
old  < gets$8:>
new  <	mov [rbp + 56], rax>

1801:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1802:
old  <>
new  < gets$10:>

1803:
old  < gets$9:>
new  <	; Call strlen 32 0>

1804:
old  <	; Parameter pointer s 56>
new  <	mov qword [rbp + 32], gets$11>

1805:
old  <	mov rax, [rbp + 24]>
new  <	mov [rbp + 40], rbp>

1806:
old  <	mov [rbp + 56], rax>
new  <	add rbp, 32>

1807:
old  <>
new  <	jmp strlen>

1808:
old  < gets$10:>
new  <>

1809:
old  <	; Call strlen 32 0>
new  < gets$11:>

1810:
old  <	mov qword [rbp + 32], gets$11>
new  <	; PostCall 32>

1811:
old  <	mov [rbp + 40], rbp>
new  <>

1812:
old  <	add rbp, 32>
new  < gets$12:>

1813:
old  <	jmp strlen>
new  <	; GetReturnValue Â£temporary850>

1815:
old  < gets$11:>
new  < gets$13:>

1816:
old  <	; PostCall 32>
new  <	; Assign size Â£temporary850>

1817:
old  <>
new  <	mov [rbp + 32], ebx>

1818:
old  < gets$12:>
new  <>

1819:
old  <	; GetReturnValue Â£temporary821>
new  < gets$14:>

1820:
old  <>
new  <	; SignedLessThanEqual 20 size 0>

1821:
old  < gets$13:>
new  <	cmp dword [rbp + 32], 0>

1822:
old  <	; Assign size Â£temporary821>
new  <	jle gets$20>

1823:
old  <	mov [rbp + 32], ebx>
new  <>

1824:
old  <>
new  < gets$15:>

1825:
old  < gets$14:>
new  <	; BinarySubtract Â£temporary852 size 1>

1826:
old  <	; SignedLessThanEqual 20 size 0>
new  <	mov eax, [rbp + 32]>

1827:
old  <	cmp dword [rbp + 32], 0>
new  <	dec eax>

1828:
old  <	jle gets$20>
new  <>

1829:
old  <>
new  < gets$16:>

1830:
old  < gets$15:>
new  <	; IntegralToIntegral Â£temporary854 Â£temporary852>

1831:
old  <	; BinarySubtract Â£temporary823 size 1>
new  <	mov rbx, 4294967295>

1832:
old  <	mov eax, [rbp + 32]>
new  <	and rax, rbx>

1833:
old  <	dec eax>
new  <>

1834:
old  <>
new  < gets$17:>

1835:
old  < gets$16:>
new  <	; BinaryAdd Â£temporary856 s Â£temporary854>

1836:
old  <	; IntegralToIntegral Â£temporary825 Â£temporary823>
new  <	mov rsi, [rbp + 24]>

1837:
old  <	mov rbx, 4294967295>
new  <	add rsi, rax>

1838:
old  <	and rax, rbx>
new  <>

1839:
old  <>
new  < gets$18:>

1840:
old  < gets$17:>
new  <	; Dereference Â£temporary853 -> Â£temporary856 Â£temporary856 0>

1841:
old  <	; BinaryAdd Â£temporary827 s Â£temporary825>
new  <>

1842:
old  <	mov rsi, [rbp + 24]>
new  < gets$19:>

1843:
old  <	add rsi, rax>
new  <	; Assign Â£temporary853 -> Â£temporary856 0>

1844:
old  <>
new  <	mov byte [rsi], 0>

1845:
old  < gets$18:>
new  <>

1846:
old  <	; Dereference Â£temporary824 -> Â£temporary827 Â£temporary827 0>
new  < gets$20:>

1847:
old  <>
new  <	; Return s>

1848:
old  < gets$19:>
new  <	mov rbx, [rbp + 24]>

1849:
old  <	; Assign Â£temporary824 -> Â£temporary827 0>
new  <	mov rax, [rbp]>

1850:
old  <	mov byte [rsi], 0>
new  <	mov rdi, [rbp + 16]>

1851:
old  <>
new  <	mov rbp, [rbp + 8]>

1852:
old  < gets$20:>
new  <	jmp rax>

1853:
old  <	; Return s>
new  <>

1854:
old  <	mov rbx, [rbp + 24]>
new  < gets$21:>

1855:
old  <	mov rax, [rbp]>
new  <	; Return 0>

1856:
old  <	mov rdi, [rbp + 16]>
new  <	mov rbx, 0>

1857:
old  <	mov rbp, [rbp + 8]>
new  <	mov rax, [rbp]>

1858:
old  <	jmp rax>
new  <	mov rdi, [rbp + 16]>

1859:
old  <>
new  <	mov rbp, [rbp + 8]>

1860:
old  < gets$21:>
new  <	jmp rax>

1861:
old  <	; Return 0>
new  <>

1862:
old  <	mov rbx, 0>
new  < gets$22:>

1863:
old  <	mov rax, [rbp]>
new  <	; FunctionEnd gets>

1864:
old  <	mov rdi, [rbp + 16]>
new  <>

1865:
old  <	mov rbp, [rbp + 8]>
new  <section .text>

1866:
old  <	jmp rax>
new  <>

1867:
old  <>
new  < puts:>

1868:
old  < gets$22:>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1869:
old  <	; FunctionEnd gets>
new  <>

1870:
old  <>
new  < puts$1:>

1871:
old  <section .text>
new  <	; Parameter pointer s 56>

1872:
old  <>
new  <	mov rax, [rbp + 24]>

1873:
old  < puts:>
new  <	mov [rbp + 56], rax>

1874:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1875:
old  <>
new  < puts$2:>

1876:
old  < puts$1:>
new  <	; Parameter pointer stdout 64>

1877:
old  <	; Parameter pointer s 56>
new  <	mov rax, [stdout]>

1878:
old  <	mov rax, [rbp + 24]>
new  <	mov [rbp + 64], rax>

1879:
old  <	mov [rbp + 56], rax>
new  <>

1880:
old  <>
new  < puts$3:>

1881:
old  < puts$2:>
new  <	; Call fputs 32 0>

1882:
old  <	; Parameter pointer stdout 64>
new  <	mov qword [rbp + 32], puts$4>

1883:
old  <	mov rax, [stdout]>
new  <	mov [rbp + 40], rbp>

1884:
old  <	mov [rbp + 64], rax>
new  <	add rbp, 32>

1885:
old  <>
new  <	jmp fputs>

1886:
old  < puts$3:>
new  <>

1887:
old  <	; Call fputs 32 0>
new  < puts$4:>

1888:
old  <	mov qword [rbp + 32], puts$4>
new  <	; PostCall 32>

1889:
old  <	mov [rbp + 40], rbp>
new  <>

1890:
old  <	add rbp, 32>
new  < puts$5:>

1891:
old  <	jmp fputs>
new  <	; GetReturnValue Â£temporary857>

1893:
old  < puts$4:>
new  < puts$6:>

1894:
old  <	; PostCall 32>
new  <	; Equal 14 Â£temporary857 0>

1895:
old  <>
new  <	cmp ebx, 0>

1896:
old  < puts$5:>
new  <	je puts$14>

1897:
old  <	; GetReturnValue Â£temporary828>
new  <>

1898:
old  <>
new  < puts$7:>

1899:
old  < puts$6:>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1900:
old  <	; Equal 14 Â£temporary828 0>
new  <>

1901:
old  <	cmp ebx, 0>
new  < puts$8:>

1902:
old  <	je puts$14>
new  <	; Parameter signedint 10 56>

1903:
old  <>
new  <	mov dword [rbp + 56], 10>

1904:
old  < puts$7:>
new  <>

1905:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < puts$9:>

1906:
old  <>
new  <	; Parameter pointer stdout 60>

1907:
old  < puts$8:>
new  <	mov rax, [stdout]>

1908:
old  <	; Parameter signedint 10 56>
new  <	mov [rbp + 60], rax>

1909:
old  <	mov dword [rbp + 56], 10>
new  <>

1910:
old  <>
new  < puts$10:>

1911:
old  < puts$9:>
new  <	; Call fputc 32 0>

1912:
old  <	; Parameter pointer stdout 60>
new  <	mov qword [rbp + 32], puts$11>

1913:
old  <	mov rax, [stdout]>
new  <	mov [rbp + 40], rbp>

1914:
old  <	mov [rbp + 60], rax>
new  <	add rbp, 32>

1915:
old  <>
new  <	jmp fputc>

1916:
old  < puts$10:>
new  <>

1917:
old  <	; Call fputc 32 0>
new  < puts$11:>

1918:
old  <	mov qword [rbp + 32], puts$11>
new  <	; PostCall 32>

1919:
old  <	mov [rbp + 40], rbp>
new  <>

1920:
old  <	add rbp, 32>
new  < puts$12:>

1921:
old  <	jmp fputc>
new  <	; GetReturnValue Â£temporary859>

1923:
old  < puts$11:>
new  < puts$13:>

1924:
old  <	; PostCall 32>
new  <	; Return Â£temporary859>

1925:
old  <>
new  <	mov rax, [rbp]>

1926:
old  < puts$12:>
new  <	mov rdi, [rbp + 16]>

1927:
old  <	; GetReturnValue Â£temporary830>
new  <	mov rbp, [rbp + 8]>

1928:
old  <>
new  <	jmp rax>

1929:
old  < puts$13:>
new  <>

1930:
old  <	; Return Â£temporary830>
new  < puts$14:>

1931:
old  <	mov rax, [rbp]>
new  <	; Return -1>

1932:
old  <	mov rdi, [rbp + 16]>
new  <	mov ebx, -1>

1933:
old  <	mov rbp, [rbp + 8]>
new  <	mov rax, [rbp]>

1934:
old  <	jmp rax>
new  <	mov rdi, [rbp + 16]>

1935:
old  <>
new  <	mov rbp, [rbp + 8]>

1936:
old  < puts$14:>
new  <	jmp rax>

1937:
old  <	; Return -1>
new  <>

1938:
old  <	mov ebx, -1>
new  < puts$15:>

1939:
old  <	mov rax, [rbp]>
new  <	; FunctionEnd puts>

1940:
old  <	mov rdi, [rbp + 16]>
new  <>

1941:
old  <	mov rbp, [rbp + 8]>
new  <section .text>

1942:
old  <	jmp rax>
new  <>

1943:
old  <>
new  < ungetc:>

1944:
old  < puts$15:>
new  <	; Dereference Â£temporary860 -> stream stream 0>

1945:
old  <	; FunctionEnd puts>
new  <	mov rsi, [rbp + 28]>

1947:
old  <section .text>
new  < ungetc$1:>

1948:
old  <>
new  <	; IntegralToIntegral Â£temporary861 Â£temporary860 -> stream>

1949:
old  < ungetc:>
new  <	mov al, [rsi + 24]>

1950:
old  <	; Dereference Â£temporary831 -> stream stream 0>
new  <	and eax, 255>

1951:
old  <	mov rsi, [rbp + 28]>
new  <	cmp al, 0>

1952:
old  <>
new  <	jge ungetc$2>

1953:
old  < ungetc$1:>
new  <	neg al>

1954:
old  <	; IntegralToIntegral Â£temporary832 Â£temporary831 -> stream>
new  <	neg eax>

1955:
old  <	mov al, [rsi + 24]>
new  <>

1956:
old  <	and eax, 255>
new  < ungetc$2:>

1957:
old  <	cmp al, 0>
new  <	; Equal 6 Â£temporary861 -1>

1958:
old  <	jge ungetc$2>
new  <	cmp eax, -1>

1959:
old  <	neg al>
new  <	je ungetc$6>

1960:
old  <	neg eax>
new  <>

1961:
old  <>
new  < ungetc$3:>

1962:
old  < ungetc$2:>
new  <	; Dereference Â£temporary863 -> stream stream 0>

1963:
old  <	; Equal 6 Â£temporary832 -1>
new  <	mov rsi, [rbp + 28]>

1964:
old  <	cmp eax, -1>
new  <>

1965:
old  <	je ungetc$6>
new  < ungetc$4:>

1966:
old  <>
new  <	; IntegralToIntegral Â£temporary864 c>

1967:
old  < ungetc$3:>
new  <	mov eax, [rbp + 24]>

1968:
old  <	; Dereference Â£temporary834 -> stream stream 0>
new  <	cmp eax, 0>

1969:
old  <	mov rsi, [rbp + 28]>
new  <	jge ungetc$5>

1970:
old  <>
new  <	neg eax>

1971:
old  < ungetc$4:>
new  <	neg al>

1972:
old  <	; IntegralToIntegral Â£temporary835 c>
new  <>

1973:
old  <	mov eax, [rbp + 24]>
new  < ungetc$5:>

1974:
old  <	cmp eax, 0>
new  <	; Assign Â£temporary863 -> stream Â£temporary864>

1975:
old  <	jge ungetc$5>
new  <	mov [rsi + 24], al>

1976:
old  <	neg eax>
new  <>

1977:
old  <	neg al>
new  < ungetc$6:>

1978:
old  <>
new  <	; Return c>

1979:
old  < ungetc$5:>
new  <	mov ebx, [rbp + 24]>

1980:
old  <	; Assign Â£temporary834 -> stream Â£temporary835>
new  <	mov rax, [rbp]>

1981:
old  <	mov [rsi + 24], al>
new  <	mov rdi, [rbp + 16]>

1982:
old  <>
new  <	mov rbp, [rbp + 8]>

1983:
old  < ungetc$6:>
new  <	jmp rax>

1984:
old  <	; Return c>
new  <>

1985:
old  <	mov ebx, [rbp + 24]>
new  < ungetc$7:>

1986:
old  <	mov rax, [rbp]>
new  <	; FunctionEnd ungetc>

1987:
old  <	mov rdi, [rbp + 16]>
new  <>

1988:
old  <	mov rbp, [rbp + 8]>
new  <section .text>

1989:
old  <	jmp rax>
new  <>

1990:
old  <>
new  < fread:>

1991:
old  < ungetc$7:>
new  <	; AssignRegister rax 0>

1992:
old  <	; FunctionEnd ungetc>
new  <	mov rax, 0>

1994:
old  <section .text>
new  < fread$1:>

1995:
old  <>
new  <	; Dereference Â£temporary867 -> stream stream 0>

1996:
old  < fread:>
new  <	mov rsi, [rbp + 40]>

1997:
old  <	; AssignRegister rax 0>
new  <>

1998:
old  <	mov rax, 0>
new  < fread$2:>

1999:
old  <>
new  <	; IntegralToIntegral Â£temporary868 Â£temporary867 -> stream>

2000:
old  < fread$1:>
new  <	mov edi, [rsi + 4]>

2001:
old  <	; Dereference Â£temporary838 -> stream stream 0>
new  <	mov rbx, 4294967295>

2002:
old  <	mov rsi, [rbp + 40]>
new  <	and rdi, rbx>

2004:
old  < fread$2:>
new  < fread$3:>

2005:
old  <	; IntegralToIntegral Â£temporary839 Â£temporary838 -> stream>
new  <	; AssignRegister rdi Â£temporary868>

2006:
old  <	mov edi, [rsi + 4]>
new  <>

2007:
old  <	mov rbx, 4294967295>
new  < fread$4:>

2008:
old  <	and rdi, rbx>
new  <	; IntegralToIntegral Â£temporary870 ptr>

2009:
old  <>
new  <	mov rsi, [rbp + 24]>

2010:
old  < fread$3:>
new  <>

2011:
old  <	; AssignRegister rdi Â£temporary839>
new  < fread$5:>

2012:
old  <>
new  <	; AssignRegister rsi Â£temporary870>

2013:
old  < fread$4:>
new  <>

2014:
old  <	; IntegralToIntegral Â£temporary841 ptr>
new  < fread$6:>

2015:
old  <	mov rsi, [rbp + 24]>
new  <	; SignedMultiply Â£temporary872 size nobj>

2016:
old  <>
new  <	mov eax, [rbp + 32]>

2017:
old  < fread$5:>
new  <	xor edx, edx>

2018:
old  <	; AssignRegister rsi Â£temporary841>
new  <	imul dword [rbp + 36]>

2020:
old  < fread$6:>
new  < fread$7:>

2021:
old  <	; SignedMultiply Â£temporary843 size nobj>
new  <	; IntegralToIntegral Â£temporary873 Â£temporary872>

2022:
old  <	mov eax, [rbp + 32]>
new  <	mov rbx, 4294967295>

2023:
old  <	xor edx, edx>
new  <	and rax, rbx>

2024:
old  <	imul dword [rbp + 36]>
new  <>

2025:
old  <>
new  < fread$8:>

2026:
old  < fread$7:>
new  <	; AssignRegister rdx Â£temporary873>

2027:
old  <	; IntegralToIntegral Â£temporary844 Â£temporary843>
new  <	mov rdx, rax>

2028:
old  <	mov rbx, 4294967295>
new  <>

2029:
old  <	and rax, rbx>
new  < fread$9:>

2030:
old  <>
new  <	; SysCall>

2031:
old  < fread$8:>
new  <	syscall>

2032:
old  <	; AssignRegister rdx Â£temporary844>
new  <>

2033:
old  <	mov rdx, rax>
new  < fread$10:>

2034:
old  <>
new  <	; Return 0>

2035:
old  < fread$9:>
new  <	mov ebx, 0>

2036:
old  <	; SysCall>
new  <	mov rax, [rbp]>

2037:
old  <	syscall>
new  <	mov rdi, [rbp + 16]>

2038:
old  <>
new  <	mov rbp, [rbp + 8]>

2039:
old  < fread$10:>
new  <	jmp rax>

2040:
old  <	; Return 0>
new  <>

2041:
old  <	mov ebx, 0>
new  < fread$11:>

2042:
old  <	mov rax, [rbp]>
new  <	; FunctionEnd fread>

2043:
old  <	mov rdi, [rbp + 16]>
new  <>

2044:
old  <	mov rbp, [rbp + 8]>
new  <section .text>

2045:
old  <	jmp rax>
new  <>

2046:
old  <>
new  < fwrite:>

2047:
old  < fread$11:>
new  <	; AssignRegister rax 0>

2048:
old  <	; FunctionEnd fread>
new  <	mov rax, 0>

2050:
old  <section .text>
new  < fwrite$1:>

2051:
old  <>
new  <	; Dereference Â£temporary876 -> stream stream 0>

2052:
old  < fwrite:>
new  <	mov rsi, [rbp + 40]>

2053:
old  <	; AssignRegister rax 0>
new  <>

2054:
old  <	mov rax, 0>
new  < fwrite$2:>

2055:
old  <>
new  <	; IntegralToIntegral Â£temporary877 Â£temporary876 -> stream>

2056:
old  < fwrite$1:>
new  <	mov edi, [rsi + 4]>

2057:
old  <	; Dereference Â£temporary847 -> stream stream 0>
new  <	mov rbx, 4294967295>

2058:
old  <	mov rsi, [rbp + 40]>
new  <	and rdi, rbx>

2060:
old  < fwrite$2:>
new  < fwrite$3:>

2061:
old  <	; IntegralToIntegral Â£temporary848 Â£temporary847 -> stream>
new  <	; AssignRegister rdi Â£temporary877>

2062:
old  <	mov edi, [rsi + 4]>
new  <>

2063:
old  <	mov rbx, 4294967295>
new  < fwrite$4:>

2064:
old  <	and rdi, rbx>
new  <	; IntegralToIntegral Â£temporary879 ptr>

2065:
old  <>
new  <	mov rsi, [rbp + 24]>

2066:
old  < fwrite$3:>
new  <>

2067:
old  <	; AssignRegister rdi Â£temporary848>
new  < fwrite$5:>

2068:
old  <>
new  <	; AssignRegister rsi Â£temporary879>

2069:
old  < fwrite$4:>
new  <>

2070:
old  <	; IntegralToIntegral Â£temporary850 ptr>
new  < fwrite$6:>

2071:
old  <	mov rsi, [rbp + 24]>
new  <	; SignedMultiply Â£temporary881 size nobj>

2072:
old  <>
new  <	mov eax, [rbp + 32]>

2073:
old  < fwrite$5:>
new  <	xor edx, edx>

2074:
old  <	; AssignRegister rsi Â£temporary850>
new  <	imul dword [rbp + 36]>

2076:
old  < fwrite$6:>
new  < fwrite$7:>

2077:
old  <	; SignedMultiply Â£temporary852 size nobj>
new  <	; IntegralToIntegral Â£temporary882 Â£temporary881>

2078:
old  <	mov eax, [rbp + 32]>
new  <	mov rbx, 4294967295>

2079:
old  <	xor edx, edx>
new  <	and rax, rbx>

2080:
old  <	imul dword [rbp + 36]>
new  <>

2081:
old  <>
new  < fwrite$8:>

2082:
old  < fwrite$7:>
new  <	; AssignRegister rdx Â£temporary882>

2083:
old  <	; IntegralToIntegral Â£temporary853 Â£temporary852>
new  <	mov rdx, rax>

2084:
old  <	mov rbx, 4294967295>
new  <>

2085:
old  <	and rax, rbx>
new  < fwrite$9:>

2086:
old  <>
new  <	; SysCall>

2087:
old  < fwrite$8:>
new  <	syscall>

2088:
old  <	; AssignRegister rdx Â£temporary853>
new  <>

2089:
old  <	mov rdx, rax>
new  < fwrite$10:>

2090:
old  <>
new  <	; Return 0>

2091:
old  < fwrite$9:>
new  <	mov ebx, 0>

2092:
old  <	; SysCall>
new  <	mov rax, [rbp]>

2093:
old  <	syscall>
new  <	mov rdi, [rbp + 16]>

2094:
old  <>
new  <	mov rbp, [rbp + 8]>

2095:
old  < fwrite$10:>
new  <	jmp rax>

2096:
old  <	; Return 0>
new  <>

2097:
old  <	mov ebx, 0>
new  < fwrite$11:>

2098:
old  <	mov rax, [rbp]>
new  <	; FunctionEnd fwrite>

2099:
old  <	mov rdi, [rbp + 16]>
new  <>

2100:
old  <	mov rbp, [rbp + 8]>
new  <section .text>

2101:
old  <	jmp rax>
new  <>

2102:
old  <>
new  < fseek:>

2103:
old  < fwrite$11:>
new  <	; AssignRegister rax 8>

2104:
old  <	; FunctionEnd fwrite>
new  <	mov rax, 8>

2106:
old  <section .text>
new  < fseek$1:>

2107:
old  <>
new  <	; Dereference Â£temporary885 -> stream stream 0>

2108:
old  < fseek:>
new  <	mov rsi, [rbp + 24]>

2109:
old  <	; AssignRegister rax 8>
new  <>

2110:
old  <	mov rax, 8>
new  < fseek$2:>

2111:
old  <>
new  <	; IntegralToIntegral Â£temporary886 Â£temporary885 -> stream>

2112:
old  < fseek$1:>
new  <	mov edi, [rsi + 4]>

2113:
old  <	; Dereference Â£temporary856 -> stream stream 0>
new  <	mov rbx, 4294967295>

2114:
old  <	mov rsi, [rbp + 24]>
new  <	and rdi, rbx>

2116:
old  < fseek$2:>
new  < fseek$3:>

2117:
old  <	; IntegralToIntegral Â£temporary857 Â£temporary856 -> stream>
new  <	; AssignRegister rdi Â£temporary886>

2118:
old  <	mov edi, [rsi + 4]>
new  <>

2119:
old  <	mov rbx, 4294967295>
new  < fseek$4:>

2120:
old  <	and rdi, rbx>
new  <	; IntegralToIntegral Â£temporary888 offset>

2121:
old  <>
new  <	mov esi, [rbp + 32]>

2122:
old  < fseek$3:>
new  <	mov rbx, 4294967295>

2123:
old  <	; AssignRegister rdi Â£temporary857>
new  <	and rsi, rbx>

2125:
old  < fseek$4:>
new  < fseek$5:>

2126:
old  <	; IntegralToIntegral Â£temporary859 offset>
new  <	; AssignRegister rsi Â£temporary888>

2127:
old  <	mov esi, [rbp + 32]>
new  <>

2128:
old  <	mov rbx, 4294967295>
new  < fseek$6:>

2129:
old  <	and rsi, rbx>
new  <	; IntegralToIntegral Â£temporary890 origin>

2130:
old  <>
new  <	mov edx, [rbp + 36]>

2131:
old  < fseek$5:>
new  <	mov rbx, 4294967295>

2132:
old  <	; AssignRegister rsi Â£temporary859>
new  <	and rdx, rbx>

2134:
old  < fseek$6:>
new  < fseek$7:>

2135:
old  <	; IntegralToIntegral Â£temporary861 origin>
new  <	; AssignRegister rdx Â£temporary890>

2136:
old  <	mov edx, [rbp + 36]>
new  <>

2137:
old  <	mov rbx, 4294967295>
new  < fseek$8:>

2138:
old  <	and rdx, rbx>
new  <	; SysCall>

2139:
old  <>
new  <	syscall>

2140:
old  < fseek$7:>
new  <>

2141:
old  <	; AssignRegister rdx Â£temporary861>
new  < fseek$9:>

2142:
old  <>
new  <	; Return 0>

2143:
old  < fseek$8:>
new  <	mov ebx, 0>

2144:
old  <	; SysCall>
new  <	mov rax, [rbp]>

2145:
old  <	syscall>
new  <	mov rdi, [rbp + 16]>

2146:
old  <>
new  <	mov rbp, [rbp + 8]>

2147:
old  < fseek$9:>
new  <	jmp rax>

2148:
old  <	; Return 0>
new  <>

2149:
old  <	mov ebx, 0>
new  < fseek$10:>

2150:
old  <	mov rax, [rbp]>
new  <	; FunctionEnd fseek>

2151:
old  <	mov rdi, [rbp + 16]>
new  <>

2152:
old  <	mov rbp, [rbp + 8]>
new  <section .text>

2153:
old  <	jmp rax>
new  <>

2154:
old  <>
new  < ftell:>

2155:
old  < fseek$10:>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2156:
old  <	; FunctionEnd fseek>
new  <>

2157:
old  <>
new  < ftell$1:>

2158:
old  <section .text>
new  <	; Parameter pointer stream 56>

2159:
old  <>
new  <	mov rax, [rbp + 24]>

2160:
old  < ftell:>
new  <	mov [rbp + 56], rax>

2161:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

2162:
old  <>
new  < ftell$2:>

2163:
old  < ftell$1:>
new  <	; Parameter signedint 0 64>

2164:
old  <	; Parameter pointer stream 56>
new  <	mov dword [rbp + 64], 0>

2165:
old  <	mov rax, [rbp + 24]>
new  <>

2166:
old  <	mov [rbp + 56], rax>
new  < ftell$3:>

2167:
old  <>
new  <	; Parameter signedint 1 68>

2168:
old  < ftell$2:>
new  <	mov dword [rbp + 68], 1>

2169:
old  <	; Parameter signedint 0 64>
new  <>

2170:
old  <	mov dword [rbp + 64], 0>
new  < ftell$4:>

2171:
old  <>
new  <	; Call fseek 32 0>

2172:
old  < ftell$3:>
new  <	mov qword [rbp + 32], ftell$5>

2173:
old  <	; Parameter signedint 1 68>
new  <	mov [rbp + 40], rbp>

2174:
old  <	mov dword [rbp + 68], 1>
new  <	add rbp, 32>

2175:
old  <>
new  <	jmp fseek>

2176:
old  < ftell$4:>
new  <>

2177:
old  <	; Call fseek 32 0>
new  < ftell$5:>

2178:
old  <	mov qword [rbp + 32], ftell$5>
new  <	; PostCall 32>

2179:
old  <	mov [rbp + 40], rbp>
new  <>

2180:
old  <	add rbp, 32>
new  < ftell$6:>

2181:
old  <	jmp fseek>
new  <	; GetReturnValue Â£temporary891>

2183:
old  < ftell$5:>
new  < ftell$7:>

2184:
old  <	; PostCall 32>
new  <	; Return Â£temporary891>

2185:
old  <>
new  <	mov rax, [rbp]>

2186:
old  < ftell$6:>
new  <	mov rdi, [rbp + 16]>

2187:
old  <	; GetReturnValue Â£temporary862>
new  <	mov rbp, [rbp + 8]>

2188:
old  <>
new  <	jmp rax>

2189:
old  < ftell$7:>
new  <>

2190:
old  <	; Return Â£temporary862>
new  < ftell$8:>

2191:
old  <	mov rax, [rbp]>
new  <	; FunctionEnd ftell>

2192:
old  <	mov rdi, [rbp + 16]>
new  <>

2193:
old  <	mov rbp, [rbp + 8]>
new  <section .text>

2194:
old  <	jmp rax>
new  <>

2195:
old  <>
new  < rewind:>

2196:
old  < ftell$8:>
new  <	; Return>

2197:
old  <	; FunctionEnd ftell>
new  <	mov rax, [rbp]>

2198:
old  <>
new  <	mov rdi, [rbp + 16]>

2199:
old  <section .text>
new  <	mov rbp, [rbp + 8]>

2200:
old  <>
new  <	jmp rax>

2201:
old  < rewind:>
new  <>

2202:
old  <	; Empty>
new  < rewind$1:>

2203:
old  <>
new  <	; FunctionEnd rewind>

2204:
old  < rewind$1:>
new  <>

2205:
old  <	; Return>
new  <section .text>

2206:
old  <	mov rax, [rbp]>
new  <>

2207:
old  <	mov rdi, [rbp + 16]>
new  < fgetpos:>

2208:
old  <	mov rbp, [rbp + 8]>
new  <	; Dereference Â£temporary894 -> ptr ptr 0>

2209:
old  <	jmp rax>
new  <	mov rsi, [rbp + 32]>

2211:
old  < rewind$2:>
new  < fgetpos$1:>

2212:
old  <	; FunctionEnd rewind>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2213:
old  <>
new  <	mov [rbp + 40], rsi>

2214:
old  <section .text>
new  <>

2215:
old  <>
new  < fgetpos$2:>

2216:
old  < fgetpos:>
new  <	; Parameter pointer stream 64>

2217:
old  <	; Dereference Â£temporary865 -> ptr ptr 0>
new  <	mov rax, [rbp + 24]>

2218:
old  <	mov rsi, [rbp + 32]>
new  <	mov [rbp + 72], rax>

2220:
old  < fgetpos$1:>
new  < fgetpos$3:>

2221:
old  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Call ftell 40 0>

2222:
old  <	mov [rbp + 40], rsi>
new  <	mov qword [rbp + 48], fgetpos$4>

2223:
old  <>
new  <	mov [rbp + 56], rbp>

2224:
old  < fgetpos$2:>
new  <	add rbp, 48>

2225:
old  <	; Parameter pointer stream 64>
new  <	jmp ftell>

2226:
old  <	mov rax, [rbp + 24]>
new  <>

2227:
old  <	mov [rbp + 72], rax>
new  < fgetpos$4:>

2228:
old  <>
new  <	; PostCall 40>

2229:
old  < fgetpos$3:>
new  <	mov rsi, [rbp + 40]>

2230:
old  <	; Call ftell 40 0>
new  <>

2231:
old  <	mov qword [rbp + 48], fgetpos$4>
new  < fgetpos$5:>

2232:
old  <	mov [rbp + 56], rbp>
new  <	; GetReturnValue Â£temporary895>

2233:
old  <	add rbp, 48>
new  <>

2234:
old  <	jmp ftell>
new  < fgetpos$6:>

2235:
old  <>
new  <	; IntegralToIntegral Â£temporary896 Â£temporary895>

2236:
old  < fgetpos$4:>
new  <>

2237:
old  <	; PostCall 40>
new  < fgetpos$7:>

2238:
old  <	mov rsi, [rbp + 40]>
new  <	; Assign Â£temporary894 -> ptr Â£temporary896>

2239:
old  <>
new  <	mov [rsi], ebx>

2240:
old  < fgetpos$5:>
new  <>

2241:
old  <	; GetReturnValue Â£temporary866>
new  < fgetpos$8:>

2242:
old  <>
new  <	; Return 0>

2243:
old  < fgetpos$6:>
new  <	mov ebx, 0>

2244:
old  <	; IntegralToIntegral Â£temporary867 Â£temporary866>
new  <	mov rax, [rbp]>

2245:
old  <>
new  <	mov rdi, [rbp + 16]>

2246:
old  < fgetpos$7:>
new  <	mov rbp, [rbp + 8]>

2247:
old  <	; Assign Â£temporary865 -> ptr Â£temporary867>
new  <	jmp rax>

2248:
old  <	mov [rsi], ebx>
new  <>

2249:
old  <>
new  < fgetpos$9:>

2250:
old  < fgetpos$8:>
new  <	; FunctionEnd fgetpos>

2251:
old  <	; Return 0>
new  <>

2252:
old  <	mov ebx, 0>
new  <section .text>

2253:
old  <	mov rax, [rbp]>
new  <>

2254:
old  <	mov rdi, [rbp + 16]>
new  < fsetpos:>

2255:
old  <	mov rbp, [rbp + 8]>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2256:
old  <	jmp rax>
new  <>

2257:
old  <>
new  < fsetpos$1:>

2258:
old  < fgetpos$9:>
new  <	; Parameter pointer stream 64>

2259:
old  <	; FunctionEnd fgetpos>
new  <	mov rax, [rbp + 24]>

2260:
old  <>
new  <	mov [rbp + 64], rax>

2261:
old  <section .text>
new  <>

2262:
old  <>
new  < fsetpos$2:>

2263:
old  < fsetpos:>
new  <	; Dereference Â£temporary897 -> ptr ptr 0>

2264:
old  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov rsi, [rbp + 32]>

2266:
old  < fsetpos$1:>
new  < fsetpos$3:>

2267:
old  <	; Parameter pointer stream 64>
new  <	; Parameter signedint Â£temporary897 -> ptr 72>

2268:
old  <	mov rax, [rbp + 24]>
new  <	mov eax, [rsi]>

2269:
old  <	mov [rbp + 64], rax>
new  <	mov [rbp + 72], eax>

2271:
old  < fsetpos$2:>
new  < fsetpos$4:>

2272:
old  <	; Dereference Â£temporary868 -> ptr ptr 0>
new  <	; Parameter signedint 0 76>

2273:
old  <	mov rsi, [rbp + 32]>
new  <	mov dword [rbp + 76], 0>

2275:
old  < fsetpos$3:>
new  < fsetpos$5:>

2276:
old  <	; Parameter signedint Â£temporary868 -> ptr 72>
new  <	; Call fseek 40 0>

2277:
old  <	mov eax, [rsi]>
new  <	mov qword [rbp + 40], fsetpos$6>

2278:
old  <	mov [rbp + 72], eax>
new  <	mov [rbp + 48], rbp>

2279:
old  <>
new  <	add rbp, 40>

2280:
old  < fsetpos$4:>
new  <	jmp fseek>

2281:
old  <	; Parameter signedint 0 76>
new  <>

2282:
old  <	mov dword [rbp + 76], 0>
new  < fsetpos$6:>

2283:
old  <>
new  <	; PostCall 40>

2284:
old  < fsetpos$5:>
new  <>

2285:
old  <	; Call fseek 40 0>
new  < fsetpos$7:>

2286:
old  <	mov qword [rbp + 40], fsetpos$6>
new  <	; GetReturnValue Â£temporary898>

2287:
old  <	mov [rbp + 48], rbp>
new  <>

2288:
old  <	add rbp, 40>
new  < fsetpos$8:>

2289:
old  <	jmp fseek>
new  <	; IntegralToIntegral Â£temporary899 Â£temporary898>

2291:
old  < fsetpos$6:>
new  < fsetpos$9:>

2292:
old  <	; PostCall 40>
new  <	; Return Â£temporary899>

2293:
old  <>
new  <	mov rax, [rbp]>

2294:
old  < fsetpos$7:>
new  <	mov rdi, [rbp + 16]>

2295:
old  <	; GetReturnValue Â£temporary869>
new  <	mov rbp, [rbp + 8]>

2296:
old  <>
new  <	jmp rax>

2297:
old  < fsetpos$8:>
new  <>

2298:
old  <	; IntegralToIntegral Â£temporary870 Â£temporary869>
new  < fsetpos$10:>

2299:
old  <>
new  <	; FunctionEnd fsetpos>

2300:
old  < fsetpos$9:>
new  <>

2301:
old  <	; Return Â£temporary870>
new  <section .text>

2302:
old  <	mov rax, [rbp]>
new  <>

2303:
old  <	mov rdi, [rbp + 16]>
new  < clearerr:>

2304:
old  <	mov rbp, [rbp + 8]>
new  <	; Dereference Â£temporary900 -> stream stream 0>

2305:
old  <	jmp rax>
new  <	mov rsi, [rbp + 24]>

2307:
old  < fsetpos$10:>
new  < clearerr$1:>

2308:
old  <	; FunctionEnd fsetpos>
new  <	; Assign errno 0>

2309:
old  <>
new  <	mov dword [errno], 0>

2310:
old  <section .text>
new  <>

2311:
old  <>
new  < clearerr$2:>

2312:
old  < clearerr:>
new  <	; Assign Â£temporary900 -> stream errno>

2313:
old  <	; Dereference Â£temporary871 -> stream stream 0>
new  <	mov eax, [errno]>

2314:
old  <	mov rsi, [rbp + 24]>
new  <	mov [rsi + 25], eax>

2316:
old  < clearerr$1:>
new  < clearerr$3:>

2317:
old  <	; Assign errno 0>
new  <	; Return>

2318:
old  <	mov dword [errno], 0>
new  <	mov rax, [rbp]>

2319:
old  <>
new  <	mov rdi, [rbp + 16]>

2320:
old  < clearerr$2:>
new  <	mov rbp, [rbp + 8]>

2321:
old  <	; Assign Â£temporary871 -> stream errno>
new  <	jmp rax>

2322:
old  <	mov eax, [errno]>
new  <>

2323:
old  <	mov [rsi + 25], eax>
new  < clearerr$4:>

2324:
old  <>
new  <	; FunctionEnd clearerr>

2325:
old  < clearerr$3:>
new  <>

2326:
old  <	; Return>
new  <section .text>

2327:
old  <	mov rax, [rbp]>
new  <>

2328:
old  <	mov rdi, [rbp + 16]>
new  < feof:>

2329:
old  <	mov rbp, [rbp + 8]>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2330:
old  <	jmp rax>
new  <>

2331:
old  <>
new  < feof$1:>

2332:
old  < clearerr$4:>
new  <	; Parameter pointer stream 56>

2333:
old  <	; FunctionEnd clearerr>
new  <	mov rax, [rbp + 24]>

2334:
old  <>
new  <	mov [rbp + 56], rax>

2335:
old  <section .text>
new  <>

2336:
old  <>
new  < feof$2:>

2337:
old  < feof:>
new  <	; Parameter signedint 0 64>

2338:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov dword [rbp + 64], 0>

2340:
old  < feof$1:>
new  < feof$3:>

2341:
old  <	; Parameter pointer stream 56>
new  <	; Parameter signedint 1 68>

2342:
old  <	mov rax, [rbp + 24]>
new  <	mov dword [rbp + 68], 1>

2343:
old  <	mov [rbp + 56], rax>
new  <>

2344:
old  <>
new  < feof$4:>

2345:
old  < feof$2:>
new  <	; Call fseek 32 0>

2346:
old  <	; Parameter signedint 0 64>
new  <	mov qword [rbp + 32], feof$5>

2347:
old  <	mov dword [rbp + 64], 0>
new  <	mov [rbp + 40], rbp>

2348:
old  <>
new  <	add rbp, 32>

2349:
old  < feof$3:>
new  <	jmp fseek>

2350:
old  <	; Parameter signedint 1 68>
new  <>

2351:
old  <	mov dword [rbp + 68], 1>
new  < feof$5:>

2352:
old  <>
new  <	; PostCall 32>

2353:
old  < feof$4:>
new  <>

2354:
old  <	; Call fseek 32 0>
new  < feof$6:>

2355:
old  <	mov qword [rbp + 32], feof$5>
new  <	; GetReturnValue Â£temporary901>

2356:
old  <	mov [rbp + 40], rbp>
new  <>

2357:
old  <	add rbp, 32>
new  < feof$7:>

2358:
old  <	jmp fseek>
new  <	; IntegralToIntegral Â£temporary902 Â£temporary901>

2359:
old  <>
new  <	mov rax, 4294967295>

2360:
old  < feof$5:>
new  <	and rbx, rax>

2361:
old  <	; PostCall 32>
new  <>

2362:
old  <>
new  < feof$8:>

2363:
old  < feof$6:>
new  <	; Assign currPosition Â£temporary902>

2364:
old  <	; GetReturnValue Â£temporary872>
new  <	mov [rbp + 32], rbx>

2366:
old  < feof$7:>
new  < feof$9:>

2367:
old  <	; IntegralToIntegral Â£temporary873 Â£temporary872>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2368:
old  <	mov rax, 4294967295>
new  <>

2369:
old  <	and rbx, rax>
new  < feof$10:>

2370:
old  <>
new  <	; Parameter pointer stream 64>

2371:
old  < feof$8:>
new  <	mov rax, [rbp + 24]>

2372:
old  <	; Assign currPosition Â£temporary873>
new  <	mov [rbp + 64], rax>

2373:
old  <	mov [rbp + 32], rbx>
new  <>

2374:
old  <>
new  < feof$11:>

2375:
old  < feof$9:>
new  <	; Parameter signedint 0 72>

2376:
old  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov dword [rbp + 72], 0>

2378:
old  < feof$10:>
new  < feof$12:>

2379:
old  <	; Parameter pointer stream 64>
new  <	; Parameter signedint 2 76>

2380:
old  <	mov rax, [rbp + 24]>
new  <	mov dword [rbp + 76], 2>

2381:
old  <	mov [rbp + 64], rax>
new  <>

2382:
old  <>
new  < feof$13:>

2383:
old  < feof$11:>
new  <	; Call fseek 40 0>

2384:
old  <	; Parameter signedint 0 72>
new  <	mov qword [rbp + 40], feof$14>

2385:
old  <	mov dword [rbp + 72], 0>
new  <	mov [rbp + 48], rbp>

2386:
old  <>
new  <	add rbp, 40>

2387:
old  < feof$12:>
new  <	jmp fseek>

2388:
old  <	; Parameter signedint 2 76>
new  <>

2389:
old  <	mov dword [rbp + 76], 2>
new  < feof$14:>

2390:
old  <>
new  <	; PostCall 40>

2391:
old  < feof$13:>
new  <>

2392:
old  <	; Call fseek 40 0>
new  < feof$15:>

2393:
old  <	mov qword [rbp + 40], feof$14>
new  <	; GetReturnValue Â£temporary903>

2394:
old  <	mov [rbp + 48], rbp>
new  <>

2395:
old  <	add rbp, 40>
new  < feof$16:>

2396:
old  <	jmp fseek>
new  <	; IntegralToIntegral Â£temporary904 Â£temporary903>

2397:
old  <>
new  <	mov rax, 4294967295>

2398:
old  < feof$14:>
new  <	and rbx, rax>

2399:
old  <	; PostCall 40>
new  <>

2400:
old  <>
new  < feof$17:>

2401:
old  < feof$15:>
new  <	; Assign lastPosition Â£temporary904>

2402:
old  <	; GetReturnValue Â£temporary874>
new  <	mov [rbp + 40], rbx>

2404:
old  < feof$16:>
new  < feof$18:>

2405:
old  <	; IntegralToIntegral Â£temporary875 Â£temporary874>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2406:
old  <	mov rax, 4294967295>
new  <>

2407:
old  <	and rbx, rax>
new  < feof$19:>

2408:
old  <>
new  <	; Parameter pointer stream 72>

2409:
old  < feof$17:>
new  <	mov rax, [rbp + 24]>

2410:
old  <	; Assign lastPosition Â£temporary875>
new  <	mov [rbp + 72], rax>

2411:
old  <	mov [rbp + 40], rbx>
new  <>

2412:
old  <>
new  < feof$20:>

2413:
old  < feof$18:>
new  <	; IntegralToIntegral Â£temporary905 currPosition>

2414:
old  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov rax, [rbp + 32]>

2416:
old  < feof$19:>
new  < feof$21:>

2417:
old  <	; Parameter pointer stream 72>
new  <	; Parameter signedint Â£temporary905 80>

2418:
old  <	mov rax, [rbp + 24]>
new  <	mov [rbp + 80], eax>

2419:
old  <	mov [rbp + 72], rax>
new  <>

2420:
old  <>
new  < feof$22:>

2421:
old  < feof$20:>
new  <	; Parameter signedint 0 84>

2422:
old  <	; IntegralToIntegral Â£temporary876 currPosition>
new  <	mov dword [rbp + 84], 0>

2423:
old  <	mov rax, [rbp + 32]>
new  <>

2424:
old  <>
new  < feof$23:>

2425:
old  < feof$21:>
new  <	; Call fseek 48 0>

2426:
old  <	; Parameter signedint Â£temporary876 80>
new  <	mov qword [rbp + 48], feof$24>

2427:
old  <	mov [rbp + 80], eax>
new  <	mov [rbp + 56], rbp>

2428:
old  <>
new  <	add rbp, 48>

2429:
old  < feof$22:>
new  <	jmp fseek>

2430:
old  <	; Parameter signedint 0 84>
new  <>

2431:
old  <	mov dword [rbp + 84], 0>
new  < feof$24:>

2432:
old  <>
new  <	; PostCall 48>

2433:
old  < feof$23:>
new  <>

2434:
old  <	; Call fseek 48 0>
new  < feof$25:>

2435:
old  <	mov qword [rbp + 48], feof$24>
new  <	; NotEqual 28 currPosition lastPosition>

2436:
old  <	mov [rbp + 56], rbp>
new  <	mov rax, [rbp + 40]>

2437:
old  <	add rbp, 48>
new  <	cmp [rbp + 32], rax>

2438:
old  <	jmp fseek>
new  <	jne feof$28>

2440:
old  < feof$24:>
new  < feof$26:>

2441:
old  <	; PostCall 48>
new  <	; Assign Â£temporary908 1>

2442:
old  <>
new  <	mov eax, 1>

2443:
old  < feof$25:>
new  <>

2444:
old  <	; NotEqual 28 currPosition lastPosition>
new  < feof$27:>

2445:
old  <	mov rax, [rbp + 40]>
new  <	; Goto 29>

2446:
old  <	cmp [rbp + 32], rax>
new  <	jmp feof$29>

2447:
old  <	jne feof$28>
new  <>

2448:
old  <>
new  < feof$28:>

2449:
old  < feof$26:>
new  <	; Assign Â£temporary908 0>

2450:
old  <	; Assign Â£temporary879 1>
new  <	mov eax, 0>

2451:
old  <	mov eax, 1>
new  <>

2452:
old  <>
new  < feof$29:>

2453:
old  < feof$27:>
new  <	; Assign endOfFile Â£temporary908>

2454:
old  <	; Goto 29>
new  <	mov [rbp + 48], eax>

2455:
old  <	jmp feof$29>
new  <>

2456:
old  <>
new  < feof$30:>

2457:
old  < feof$28:>
new  <	; Return endOfFile>

2458:
old  <	; Assign Â£temporary879 0>
new  <	mov ebx, [rbp + 48]>

2459:
old  <	mov eax, 0>
new  <	mov rax, [rbp]>

2460:
old  <>
new  <	mov rdi, [rbp + 16]>

2461:
old  < feof$29:>
new  <	mov rbp, [rbp + 8]>

2462:
old  <	; Assign endOfFile Â£temporary879>
new  <	jmp rax>

2463:
old  <	mov [rbp + 48], eax>
new  <>

2464:
old  <>
new  < feof$31:>

2465:
old  < feof$30:>
new  <	; FunctionEnd feof>

2466:
old  <	; Return endOfFile>
new  <>

2467:
old  <	mov ebx, [rbp + 48]>
new  <section .text>

2468:
old  <	mov rax, [rbp]>
new  <>

2469:
old  <	mov rdi, [rbp + 16]>
new  < ferror:>

2470:
old  <	mov rbp, [rbp + 8]>
new  <	; Dereference Â£temporary909 -> stream stream 0>

2471:
old  <	jmp rax>
new  <	mov rsi, [rbp + 24]>

2473:
old  < feof$31:>
new  < ferror$1:>

2474:
old  <	; FunctionEnd feof>
new  <	; Return Â£temporary909 -> stream>

2475:
old  <>
new  <	mov ebx, [rsi + 25]>

2476:
old  <section .text>
new  <	mov rax, [rbp]>

2477:
old  <>
new  <	mov rdi, [rbp + 16]>

2478:
old  < ferror:>
new  <	mov rbp, [rbp + 8]>

2479:
old  <	; Dereference Â£temporary880 -> stream stream 0>
new  <	jmp rax>

2480:
old  <	mov rsi, [rbp + 24]>
new  <>

2481:
old  <>
new  < ferror$2:>

2482:
old  < ferror$1:>
new  <	; FunctionEnd ferror>

2483:
old  <	; Return Â£temporary880 -> stream>
new  <>

2484:
old  <	mov ebx, [rsi + 25]>
new  <section .data>

2485:
old  <	mov rax, [rbp]>
new  <>

2486:
old  <	mov rdi, [rbp + 16]>
new  <string_25s3A2025s2E0A#:>

2487:
old  <	mov rbp, [rbp + 8]>
new  <	; Initializer String %s: %s.\n>

2488:
old  <	jmp rax>
new  <	db "%s: %s.", 10, 0>

2490:
old  < ferror$2:>
new  <section .text>

2491:
old  <	; FunctionEnd ferror>
new  <>

2492:
old  <>
new  < perror:>

2493:
old  <section .data>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2495:
old  <string_25s3A2025s2E0A#:>
new  < perror$1:>

2496:
old  <	; Initializer String %s: %s.\n>
new  <	; Parameter pointer "%s: %s.\n" 56>

2497:
old  <	db "%s: %s.", 10, 0>
new  <	mov qword [rbp + 56], string_25s3A2025s2E0A#>

2499:
old  <section .text>
new  < perror$2:>

2500:
old  <>
new  <	; Parameter pointer s 64>

2501:
old  < perror:>
new  <	mov rax, [rbp + 24]>

2502:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov [rbp + 64], rax>

2504:
old  < perror$1:>
new  < perror$3:>

2505:
old  <	; Parameter pointer "%s: %s.\n" 56>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2506:
old  <	mov qword [rbp + 56], string_25s3A2025s2E0A#>
new  <>

2507:
old  <>
new  < perror$4:>

2508:
old  < perror$2:>
new  <	; Parameter signedint errno 96>

2509:
old  <	; Parameter pointer s 64>
new  <	mov eax, [errno]>

2510:
old  <	mov rax, [rbp + 24]>
new  <	mov [rbp + 96], eax>

2511:
old  <	mov [rbp + 64], rax>
new  <>

2512:
old  <>
new  < perror$5:>

2513:
old  < perror$3:>
new  <	; Call strerror 72 0>

2514:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov qword [rbp + 72], perror$6>

2515:
old  <>
new  <	mov [rbp + 80], rbp>

2516:
old  < perror$4:>
new  <	add rbp, 72>

2517:
old  <	; Parameter signedint errno 96>
new  <	jmp strerror>

2518:
old  <	mov eax, [errno]>
new  <>

2519:
old  <	mov [rbp + 96], eax>
new  < perror$6:>

2520:
old  <>
new  <	; PostCall 72>

2521:
old  < perror$5:>
new  <>

2522:
old  <	; Call strerror 72 0>
new  < perror$7:>

2523:
old  <	mov qword [rbp + 72], perror$6>
new  <	; GetReturnValue Â£temporary910>

2524:
old  <	mov [rbp + 80], rbp>
new  <>

2525:
old  <	add rbp, 72>
new  < perror$8:>

2526:
old  <	jmp strerror>
new  <	; Parameter pointer Â£temporary910 72>

2527:
old  <>
new  <	mov [rbp + 72], rbx>

2528:
old  < perror$6:>
new  <>

2529:
old  <	; PostCall 72>
new  < perror$9:>

2530:
old  <>
new  <	; Call printf 32 16>

2531:
old  < perror$7:>
new  <	mov qword [rbp + 32], perror$10>

2532:
old  <	; GetReturnValue Â£temporary881>
new  <	mov [rbp + 40], rbp>

2533:
old  <>
new  <	add rbp, 32>

2534:
old  < perror$8:>
new  <	mov rdi, rbp>

2535:
old  <	; Parameter pointer Â£temporary881 72>
new  <	add rdi, 16>

2536:
old  <	mov [rbp + 72], rbx>
new  <	jmp printf>

2538:
old  < perror$9:>
new  < perror$10:>

2539:
old  <	; Call printf 32 16>
new  <	; PostCall 32>

2540:
old  <	mov qword [rbp + 32], perror$10>
new  <>

2541:
old  <	mov [rbp + 40], rbp>
new  < perror$11:>

2542:
old  <	add rbp, 32>
new  <	; Return>

2543:
old  <	mov rdi, rbp>
new  <	mov rax, [rbp]>

2544:
old  <	add rdi, 16>
new  <	mov rdi, [rbp + 16]>

2545:
old  <	jmp printf>
new  <	mov rbp, [rbp + 8]>

2546:
old  <>
new  <	jmp rax>

2547:
old  < perror$10:>
new  <>

2548:
old  <	; PostCall 32>
new  < perror$12:>

2549:
old  <>
new  <	; FunctionEnd perror>

13:
old  <@2942$g_tempArray:>
new  <@2593$g_tempArray:>

19:
old  <@2943$g_tempSize:>
new  <@2594$g_tempSize:>

31:
old  < @2945$existsTempName:>
new  < @2596$existsTempName:>

32:
old  <	; Empty>
new  <	; Assign index 0>

33:
old  <>
new  <	mov dword [rbp + 32], 0>

34:
old  < @2945$existsTempName$1:>
new  <>

35:
old  <	; Assign index 0>
new  < @2596$existsTempName$1:>

36:
old  <	mov dword [rbp + 32], 0>
new  <	; SignedGreaterThanEqual 16 index g_tempSize>

37:
old  <>
new  <	mov eax, [@2594$g_tempSize]>

38:
old  < @2945$existsTempName$2:>
new  <	cmp [rbp + 32], eax>

39:
old  <	; SignedGreaterThanEqual 17 index g_tempSize>
new  <	jge @2596$existsTempName$16>

40:
old  <	mov eax, [@2943$g_tempSize]>
new  <>

41:
old  <	cmp [rbp + 32], eax>
new  < @2596$existsTempName$2:>

42:
old  <	jge @2945$existsTempName$17>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

44:
old  < @2945$existsTempName$3:>
new  < @2596$existsTempName$3:>

45:
old  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter pointer name 60>

46:
old  <>
new  <	mov rax, [rbp + 24]>

47:
old  < @2945$existsTempName$4:>
new  <	mov [rbp + 60], rax>

48:
old  <	; Parameter pointer name 60>
new  <>

49:
old  <	mov rax, [rbp + 24]>
new  < @2596$existsTempName$4:>

50:
old  <	mov [rbp + 60], rax>
new  <	; IntegralToIntegral Â£temporary915 index>

51:
old  <>
new  <	mov eax, [rbp + 32]>

52:
old  < @2945$existsTempName$5:>
new  <	mov rbx, 4294967295>

53:
old  <	; IntegralToIntegral Â£temporary886 index>
new  <	and rax, rbx>

54:
old  <	mov eax, [rbp + 32]>
new  <>

55:
old  <	mov rbx, 4294967295>
new  < @2596$existsTempName$5:>

56:
old  <	and rax, rbx>
new  <	; UnsignedMultiply Â£temporary916 Â£temporary915 4>

57:
old  <>
new  <	xor rdx, rdx>

58:
old  < @2945$existsTempName$6:>
new  <	mul qword [Array_4#]>

59:
old  <	; UnsignedMultiply Â£temporary887 Â£temporary886 4>
new  <>

60:
old  <	xor rdx, rdx>
new  < @2596$existsTempName$6:>

61:
old  <	mul qword [Array_4#]>
new  <	; BinaryAdd Â£temporary917 g_tempArray Â£temporary916>

62:
old  <>
new  <	mov rsi, @2593$g_tempArray>

63:
old  < @2945$existsTempName$7:>
new  <	add rsi, rax>

64:
old  <	; BinaryAdd Â£temporary888 g_tempArray Â£temporary887>
new  <>

65:
old  <	mov rsi, @2942$g_tempArray>
new  < @2596$existsTempName$7:>

66:
old  <	add rsi, rax>
new  <	; Dereference Â£temporary914 -> Â£temporary917 Â£temporary917 0>

68:
old  < @2945$existsTempName$8:>
new  < @2596$existsTempName$8:>

69:
old  <	; Dereference Â£temporary885 -> Â£temporary888 Â£temporary888 0>
new  <	; Parameter pointer Â£temporary914 -> Â£temporary917 68>

70:
old  <>
new  <	mov [rbp + 68], rsi>

71:
old  < @2945$existsTempName$9:>
new  <>

72:
old  <	; Parameter pointer Â£temporary885 -> Â£temporary888 68>
new  < @2596$existsTempName$9:>

73:
old  <	mov [rbp + 68], rsi>
new  <	; Call strcmp 36 0>

74:
old  <>
new  <	mov qword [rbp + 36], @2596$existsTempName$10>

75:
old  < @2945$existsTempName$10:>
new  <	mov [rbp + 44], rbp>

76:
old  <	; Call strcmp 36 0>
new  <	add rbp, 36>

77:
old  <	mov qword [rbp + 36], @2945$existsTempName$11>
new  <	jmp strcmp>

78:
old  <	mov [rbp + 44], rbp>
new  <>

79:
old  <	add rbp, 36>
new  < @2596$existsTempName$10:>

80:
old  <	jmp strcmp>
new  <	; PostCall 36>

82:
old  < @2945$existsTempName$11:>
new  < @2596$existsTempName$11:>

83:
old  <	; PostCall 36>
new  <	; GetReturnValue Â£temporary918>

85:
old  < @2945$existsTempName$12:>
new  < @2596$existsTempName$12:>

86:
old  <	; GetReturnValue Â£temporary889>
new  <	; NotEqual 14 Â£temporary918 0>

87:
old  <>
new  <	cmp ebx, 0>

88:
old  < @2945$existsTempName$13:>
new  <	jne @2596$existsTempName$14>

89:
old  <	; NotEqual 15 Â£temporary889 0>
new  <>

90:
old  <	cmp ebx, 0>
new  < @2596$existsTempName$13:>

91:
old  <	jne @2945$existsTempName$15>
new  <	; Return 1>

92:
old  <>
new  <	mov ebx, 1>

93:
old  < @2945$existsTempName$14:>
new  <	mov rax, [rbp]>

94:
old  <	; Return 1>
new  <	mov rdi, [rbp + 16]>

95:
old  <	mov ebx, 1>
new  <	mov rbp, [rbp + 8]>

96:
old  <	mov rax, [rbp]>
new  <	jmp rax>

97:
old  <	mov rdi, [rbp + 16]>
new  <>

98:
old  <	mov rbp, [rbp + 8]>
new  < @2596$existsTempName$14:>

99:
old  <	jmp rax>
new  <	; BinaryAdd index index 1>

100:
old  <>
new  <	inc dword [rbp + 32]>

101:
old  < @2945$existsTempName$15:>
new  <>

102:
old  <	; BinaryAdd index index 1>
new  < @2596$existsTempName$15:>

103:
old  <	inc dword [rbp + 32]>
new  <	; Goto 1>

104:
old  <>
new  <	jmp @2596$existsTempName$1>

105:
old  < @2945$existsTempName$16:>
new  <>

106:
old  <	; Goto 2>
new  < @2596$existsTempName$16:>

107:
old  <	jmp @2945$existsTempName$2>
new  <	; Return 0>

108:
old  <>
new  <	mov ebx, 0>

109:
old  < @2945$existsTempName$17:>
new  <	mov rax, [rbp]>

110:
old  <	; Return 0>
new  <	mov rdi, [rbp + 16]>

111:
old  <	mov ebx, 0>
new  <	mov rbp, [rbp + 8]>

112:
old  <	mov rax, [rbp]>
new  <	jmp rax>

113:
old  <	mov rdi, [rbp + 16]>
new  <>

114:
old  <	mov rbp, [rbp + 8]>
new  < @2596$existsTempName$17:>

115:
old  <	jmp rax>
new  <	; FunctionEnd existsTempName>

117:
old  < @2945$existsTempName$18:>
new  <section .text>

118:
old  <	; FunctionEnd existsTempName>
new  <>

119:
old  <>
new  < @2603$generateTempName:>

120:
old  <section .text>
new  <	; SignedGreaterThanEqual 58 size 5>

121:
old  <>
new  <	cmp dword [rbp + 32], 5>

122:
old  < @2952$generateTempName:>
new  <	jge @2603$generateTempName$58>

123:
old  <	; SignedGreaterThanEqual 58 size 5>
new  <>

124:
old  <	cmp dword [rbp + 32], 5>
new  < @2603$generateTempName$1:>

125:
old  <	jge @2952$generateTempName$58>
new  <	; Assign c 97>

126:
old  <>
new  <	mov byte [rbp + 40], 97>

127:
old  < @2952$generateTempName$1:>
new  <>

128:
old  <	; Assign c 97>
new  < @2603$generateTempName$2:>

129:
old  <	mov byte [rbp + 40], 97>
new  <	; SignedGreaterThan 58 c 122>

130:
old  <>
new  <	cmp byte [rbp + 40], 122>

131:
old  < @2952$generateTempName$2:>
new  <	jg @2603$generateTempName$58>

132:
old  <	; SignedGreaterThan 58 c 122>
new  <>

133:
old  <	cmp byte [rbp + 40], 122>
new  < @2603$generateTempName$3:>

134:
old  <	jg @2952$generateTempName$58>
new  <	; IntegralToIntegral Â£temporary924 size>

135:
old  <>
new  <	mov eax, [rbp + 32]>

136:
old  < @2952$generateTempName$3:>
new  <	mov rbx, 4294967295>

137:
old  <	; IntegralToIntegral Â£temporary895 size>
new  <	and rax, rbx>

138:
old  <	mov eax, [rbp + 32]>
new  <>

139:
old  <	mov rbx, 4294967295>
new  < @2603$generateTempName$4:>

140:
old  <	and rax, rbx>
new  <	; BinaryAdd Â£temporary926 name Â£temporary924>

141:
old  <>
new  <	mov rsi, [rbp + 24]>

142:
old  < @2952$generateTempName$4:>
new  <	add rsi, rax>

143:
old  <	; BinaryAdd Â£temporary897 name Â£temporary895>
new  <>

144:
old  <	mov rsi, [rbp + 24]>
new  < @2603$generateTempName$5:>

145:
old  <	add rsi, rax>
new  <	; Dereference Â£temporary923 -> Â£temporary926 Â£temporary926 0>

147:
old  < @2952$generateTempName$5:>
new  < @2603$generateTempName$6:>

148:
old  <	; Dereference Â£temporary894 -> Â£temporary897 Â£temporary897 0>
new  <	; Assign Â£temporary923 -> Â£temporary926 c>

149:
old  <>
new  <	mov al, [rbp + 40]>

150:
old  < @2952$generateTempName$6:>
new  <	mov [rsi], al>

151:
old  <	; Assign Â£temporary894 -> Â£temporary897 c>
new  <>

152:
old  <	mov al, [rbp + 40]>
new  < @2603$generateTempName$7:>

153:
old  <	mov [rsi], al>
new  <	; BinaryAdd Â£temporary927 size 1>

154:
old  <>
new  <	mov eax, [rbp + 32]>

155:
old  < @2952$generateTempName$7:>
new  <	inc eax>

156:
old  <	; BinaryAdd Â£temporary898 size 1>
new  <>

157:
old  <	mov eax, [rbp + 32]>
new  < @2603$generateTempName$8:>

158:
old  <	inc eax>
new  <	; IntegralToIntegral Â£temporary929 Â£temporary927>

159:
old  <>
new  <	mov rbx, 4294967295>

160:
old  < @2952$generateTempName$8:>
new  <	and rax, rbx>

161:
old  <	; IntegralToIntegral Â£temporary900 Â£temporary898>
new  <>

162:
old  <	mov rbx, 4294967295>
new  < @2603$generateTempName$9:>

163:
old  <	and rax, rbx>
new  <	; BinaryAdd Â£temporary931 name Â£temporary929>

164:
old  <>
new  <	mov rsi, [rbp + 24]>

165:
old  < @2952$generateTempName$9:>
new  <	add rsi, rax>

166:
old  <	; BinaryAdd Â£temporary902 name Â£temporary900>
new  <>

167:
old  <	mov rsi, [rbp + 24]>
new  < @2603$generateTempName$10:>

168:
old  <	add rsi, rax>
new  <	; Dereference Â£temporary928 -> Â£temporary931 Â£temporary931 0>

170:
old  < @2952$generateTempName$10:>
new  < @2603$generateTempName$11:>

171:
old  <	; Dereference Â£temporary899 -> Â£temporary902 Â£temporary902 0>
new  <	; Assign Â£temporary928 -> Â£temporary931 0>

172:
old  <>
new  <	mov byte [rsi], 0>

173:
old  < @2952$generateTempName$11:>
new  <>

174:
old  <	; Assign Â£temporary899 -> Â£temporary902 0>
new  < @2603$generateTempName$12:>

175:
old  <	mov byte [rsi], 0>
new  <	; PreCall 41 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

177:
old  < @2952$generateTempName$12:>
new  < @2603$generateTempName$13:>

178:
old  <	; PreCall 41 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter pointer name 65>

179:
old  <>
new  <	mov rax, [rbp + 24]>

180:
old  < @2952$generateTempName$13:>
new  <	mov [rbp + 65], rax>

181:
old  <	; Parameter pointer name 65>
new  <>

182:
old  <	mov rax, [rbp + 24]>
new  < @2603$generateTempName$14:>

183:
old  <	mov [rbp + 65], rax>
new  <	; Call fileexists 41 0>

184:
old  <>
new  <	mov qword [rbp + 41], @2603$generateTempName$15>

185:
old  < @2952$generateTempName$14:>
new  <	mov [rbp + 49], rbp>

186:
old  <	; Call fileexists 41 0>
new  <	add rbp, 41>

187:
old  <	mov qword [rbp + 41], @2952$generateTempName$15>
new  <	jmp fileexists>

188:
old  <	mov [rbp + 49], rbp>
new  <>

189:
old  <	add rbp, 41>
new  < @2603$generateTempName$15:>

190:
old  <	jmp fileexists>
new  <	; PostCall 41>

192:
old  < @2952$generateTempName$15:>
new  < @2603$generateTempName$16:>

193:
old  <	; PostCall 41>
new  <	; GetReturnValue Â£temporary932>

195:
old  < @2952$generateTempName$16:>
new  < @2603$generateTempName$17:>

196:
old  <	; GetReturnValue Â£temporary903>
new  <	; NotEqual 45 Â£temporary932 0>

197:
old  <>
new  <	cmp ebx, 0>

198:
old  < @2952$generateTempName$17:>
new  <	jne @2603$generateTempName$45>

199:
old  <	; NotEqual 45 Â£temporary903 0>
new  <>

200:
old  <	cmp ebx, 0>
new  < @2603$generateTempName$18:>

201:
old  <	jne @2952$generateTempName$45>
new  <	; Case 22 status 0>

202:
old  <>
new  <	mov eax, [rbp + 36]>

203:
old  < @2952$generateTempName$18:>
new  <	cmp eax, 0>

204:
old  <	; Case 22 status 0>
new  <	je @2603$generateTempName$22>

205:
old  <	mov eax, [rbp + 36]>
new  <>

206:
old  <	cmp eax, 0>
new  < @2603$generateTempName$19:>

207:
old  <	je @2952$generateTempName$22>
new  <	; Case 23 status 1>

208:
old  <>
new  <	cmp eax, 1>

209:
old  < @2952$generateTempName$19:>
new  <	je @2603$generateTempName$23>

210:
old  <	; Case 23 status 1>
new  <>

211:
old  <	cmp eax, 1>
new  < @2603$generateTempName$20:>

212:
old  <	je @2952$generateTempName$23>
new  <	; CaseEnd status>

214:
old  < @2952$generateTempName$20:>
new  < @2603$generateTempName$21:>

215:
old  <	; CaseEnd status>
new  <	; Goto 45>

216:
old  <>
new  <	jmp @2603$generateTempName$45>

217:
old  < @2952$generateTempName$21:>
new  <>

218:
old  <	; Goto 45>
new  < @2603$generateTempName$22:>

219:
old  <	jmp @2952$generateTempName$45>
new  <	; Return name>

220:
old  <>
new  <	mov rbx, [rbp + 24]>

221:
old  < @2952$generateTempName$22:>
new  <	mov rax, [rbp]>

222:
old  <	; Return name>
new  <	mov rdi, [rbp + 16]>

223:
old  <	mov rbx, [rbp + 24]>
new  <	mov rbp, [rbp + 8]>

224:
old  <	mov rax, [rbp]>
new  <	jmp rax>

225:
old  <	mov rdi, [rbp + 16]>
new  <>

226:
old  <	mov rbp, [rbp + 8]>
new  < @2603$generateTempName$23:>

227:
old  <	jmp rax>
new  <	; PreCall 41 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

229:
old  < @2952$generateTempName$23:>
new  < @2603$generateTempName$24:>

230:
old  <	; PreCall 41 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter pointer name 65>

231:
old  <>
new  <	mov rax, [rbp + 24]>

232:
old  < @2952$generateTempName$24:>
new  <	mov [rbp + 65], rax>

233:
old  <	; Parameter pointer name 65>
new  <>

234:
old  <	mov rax, [rbp + 24]>
new  < @2603$generateTempName$25:>

235:
old  <	mov [rbp + 65], rax>
new  <	; Call existsTempName 41 0>

236:
old  <>
new  <	mov qword [rbp + 41], @2603$generateTempName$26>

237:
old  < @2952$generateTempName$25:>
new  <	mov [rbp + 49], rbp>

238:
old  <	; Call existsTempName 41 0>
new  <	add rbp, 41>

239:
old  <	mov qword [rbp + 41], @2952$generateTempName$26>
new  <	jmp @2596$existsTempName>

240:
old  <	mov [rbp + 49], rbp>
new  <>

241:
old  <	add rbp, 41>
new  < @2603$generateTempName$26:>

242:
old  <	jmp @2945$existsTempName>
new  <	; PostCall 41>

244:
old  < @2952$generateTempName$26:>
new  < @2603$generateTempName$27:>

245:
old  <	; PostCall 41>
new  <	; GetReturnValue Â£temporary935>

247:
old  < @2952$generateTempName$27:>
new  < @2603$generateTempName$28:>

248:
old  <	; GetReturnValue Â£temporary906>
new  <	; NotEqual 45 Â£temporary935 0>

249:
old  <>
new  <	cmp ebx, 0>

250:
old  < @2952$generateTempName$28:>
new  <	jne @2603$generateTempName$45>

251:
old  <	; NotEqual 45 Â£temporary906 0>
new  <>

252:
old  <	cmp ebx, 0>
new  < @2603$generateTempName$29:>

253:
old  <	jne @2952$generateTempName$45>
new  <	; PreCall 41 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

255:
old  < @2952$generateTempName$29:>
new  < @2603$generateTempName$30:>

256:
old  <	; PreCall 41 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; IntegralToIntegral Â£temporary939 g_tempSize>

257:
old  <>
new  <	mov eax, [@2594$g_tempSize]>

258:
old  < @2952$generateTempName$30:>
new  <	mov rbx, 4294967295>

259:
old  <	; IntegralToIntegral Â£temporary910 g_tempSize>
new  <	and rax, rbx>

260:
old  <	mov eax, [@2943$g_tempSize]>
new  <>

261:
old  <	mov rbx, 4294967295>
new  < @2603$generateTempName$31:>

262:
old  <	and rax, rbx>
new  <	; UnsignedMultiply Â£temporary940 Â£temporary939 4>

263:
old  <>
new  <	xor rdx, rdx>

264:
old  < @2952$generateTempName$31:>
new  <	mul qword [Array_4#]>

265:
old  <	; UnsignedMultiply Â£temporary911 Â£temporary910 4>
new  <>

266:
old  <	xor rdx, rdx>
new  < @2603$generateTempName$32:>

267:
old  <	mul qword [Array_4#]>
new  <	; BinaryAdd Â£temporary941 g_tempArray Â£temporary940>

268:
old  <>
new  <	mov rsi, @2593$g_tempArray>

269:
old  < @2952$generateTempName$32:>
new  <	add rsi, rax>

270:
old  <	; BinaryAdd Â£temporary912 g_tempArray Â£temporary911>
new  <>

271:
old  <	mov rsi, @2942$g_tempArray>
new  < @2603$generateTempName$33:>

272:
old  <	add rsi, rax>
new  <	; Dereference Â£temporary938 -> Â£temporary941 Â£temporary941 0>

274:
old  < @2952$generateTempName$33:>
new  < @2603$generateTempName$34:>

275:
old  <	; Dereference Â£temporary909 -> Â£temporary912 Â£temporary912 0>
new  <	; Parameter pointer Â£temporary938 -> Â£temporary941 65>

276:
old  <>
new  <	mov [rbp + 65], rsi>

277:
old  < @2952$generateTempName$34:>
new  <>

278:
old  <	; Parameter pointer Â£temporary909 -> Â£temporary912 65>
new  < @2603$generateTempName$35:>

279:
old  <	mov [rbp + 65], rsi>
new  <	; Parameter pointer name 73>

280:
old  <>
new  <	mov rax, [rbp + 24]>

281:
old  < @2952$generateTempName$35:>
new  <	mov [rbp + 73], rax>

282:
old  <	; Parameter pointer name 73>
new  <>

283:
old  <	mov rax, [rbp + 24]>
new  < @2603$generateTempName$36:>

284:
old  <	mov [rbp + 73], rax>
new  <	; Call strcpy 41 0>

285:
old  <>
new  <	mov qword [rbp + 41], @2603$generateTempName$37>

286:
old  < @2952$generateTempName$36:>
new  <	mov [rbp + 49], rbp>

287:
old  <	; Call strcpy 41 0>
new  <	add rbp, 41>

288:
old  <	mov qword [rbp + 41], @2952$generateTempName$37>
new  <	jmp strcpy>

289:
old  <	mov [rbp + 49], rbp>
new  <>

290:
old  <	add rbp, 41>
new  < @2603$generateTempName$37:>

291:
old  <	jmp strcpy>
new  <	; PostCall 41>

293:
old  < @2952$generateTempName$37:>
new  < @2603$generateTempName$38:>

294:
old  <	; PostCall 41>
new  <	; Assign Â£temporary943 g_tempSize>

295:
old  <>
new  <	mov eax, [@2594$g_tempSize]>

296:
old  < @2952$generateTempName$38:>
new  <>

297:
old  <	; Assign Â£temporary914 g_tempSize>
new  < @2603$generateTempName$39:>

298:
old  <	mov eax, [@2943$g_tempSize]>
new  <	; BinaryAdd g_tempSize g_tempSize 1>

299:
old  <>
new  <	inc dword [@2594$g_tempSize]>

300:
old  < @2952$generateTempName$39:>
new  <>

301:
old  <	; BinaryAdd g_tempSize g_tempSize 1>
new  < @2603$generateTempName$40:>

302:
old  <	inc dword [@2943$g_tempSize]>
new  <	; IntegralToIntegral Â£temporary945 Â£temporary943>

303:
old  <>
new  <	mov rbx, 4294967295>

304:
old  < @2952$generateTempName$40:>
new  <	and rax, rbx>

305:
old  <	; IntegralToIntegral Â£temporary916 Â£temporary914>
new  <>

306:
old  <	mov rbx, 4294967295>
new  < @2603$generateTempName$41:>

307:
old  <	and rax, rbx>
new  <	; UnsignedMultiply Â£temporary946 Â£temporary945 4>

308:
old  <>
new  <	xor rdx, rdx>

309:
old  < @2952$generateTempName$41:>
new  <	mul qword [Array_4#]>

310:
old  <	; UnsignedMultiply Â£temporary917 Â£temporary916 4>
new  <>

311:
old  <	xor rdx, rdx>
new  < @2603$generateTempName$42:>

312:
old  <	mul qword [Array_4#]>
new  <	; BinaryAdd Â£temporary947 g_tempArray Â£temporary946>

313:
old  <>
new  <	mov rsi, @2593$g_tempArray>

314:
old  < @2952$generateTempName$42:>
new  <	add rsi, rax>

315:
old  <	; BinaryAdd Â£temporary918 g_tempArray Â£temporary917>
new  <>

316:
old  <	mov rsi, @2942$g_tempArray>
new  < @2603$generateTempName$43:>

317:
old  <	add rsi, rax>
new  <	; Dereference Â£temporary944 -> Â£temporary947 Â£temporary947 0>

319:
old  < @2952$generateTempName$43:>
new  < @2603$generateTempName$44:>

320:
old  <	; Dereference Â£temporary915 -> Â£temporary918 Â£temporary918 0>
new  <	; Return Â£temporary944 -> Â£temporary947>

321:
old  <>
new  <	mov rbx, rsi>

322:
old  < @2952$generateTempName$44:>
new  <	mov rax, [rbp]>

323:
old  <	; Return Â£temporary915 -> Â£temporary918>
new  <	mov rdi, [rbp + 16]>

324:
old  <	mov rbx, rsi>
new  <	mov rbp, [rbp + 8]>

325:
old  <	mov rax, [rbp]>
new  <	jmp rax>

326:
old  <	mov rdi, [rbp + 16]>
new  <>

327:
old  <	mov rbp, [rbp + 8]>
new  < @2603$generateTempName$45:>

328:
old  <	jmp rax>
new  <	; PreCall 41 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

330:
old  < @2952$generateTempName$45:>
new  < @2603$generateTempName$46:>

331:
old  <	; PreCall 41 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter pointer name 65>

332:
old  <>
new  <	mov rax, [rbp + 24]>

333:
old  < @2952$generateTempName$46:>
new  <	mov [rbp + 65], rax>

334:
old  <	; Parameter pointer name 65>
new  <>

335:
old  <	mov rax, [rbp + 24]>
new  < @2603$generateTempName$47:>

336:
old  <	mov [rbp + 65], rax>
new  <	; BinaryAdd Â£temporary948 size 1>

337:
old  <>
new  <	mov eax, [rbp + 32]>

338:
old  < @2952$generateTempName$47:>
new  <	inc eax>

339:
old  <	; BinaryAdd Â£temporary919 size 1>
new  <>

340:
old  <	mov eax, [rbp + 32]>
new  < @2603$generateTempName$48:>

341:
old  <	inc eax>
new  <	; Parameter signedint Â£temporary948 73>

342:
old  <>
new  <	mov [rbp + 73], eax>

343:
old  < @2952$generateTempName$48:>
new  <>

344:
old  <	; Parameter signedint Â£temporary919 73>
new  < @2603$generateTempName$49:>

345:
old  <	mov [rbp + 73], eax>
new  <	; Parameter signedint status 77>

346:
old  <>
new  <	mov eax, [rbp + 36]>

347:
old  < @2952$generateTempName$49:>
new  <	mov [rbp + 77], eax>

348:
old  <	; Parameter signedint status 77>
new  <>

349:
old  <	mov eax, [rbp + 36]>
new  < @2603$generateTempName$50:>

350:
old  <	mov [rbp + 77], eax>
new  <	; Call generateTempName 41 0>

351:
old  <>
new  <	mov qword [rbp + 41], @2603$generateTempName$51>

352:
old  < @2952$generateTempName$50:>
new  <	mov [rbp + 49], rbp>

353:
old  <	; Call generateTempName 41 0>
new  <	add rbp, 41>

354:
old  <	mov qword [rbp + 41], @2952$generateTempName$51>
new  <	jmp @2603$generateTempName>

355:
old  <	mov [rbp + 49], rbp>
new  <>

356:
old  <	add rbp, 41>
new  < @2603$generateTempName$51:>

357:
old  <	jmp @2952$generateTempName>
new  <	; PostCall 41>

359:
old  < @2952$generateTempName$51:>
new  < @2603$generateTempName$52:>

360:
old  <	; PostCall 41>
new  <	; GetReturnValue Â£temporary949>

362:
old  < @2952$generateTempName$52:>
new  < @2603$generateTempName$53:>

363:
old  <	; GetReturnValue Â£temporary920>
new  <	; Assign result Â£temporary949>

364:
old  <>
new  <	mov [rbp + 41], rbx>

365:
old  < @2952$generateTempName$53:>
new  <>

366:
old  <	; Assign result Â£temporary920>
new  < @2603$generateTempName$54:>

367:
old  <	mov [rbp + 41], rbx>
new  <	; Equal 56 result 0>

368:
old  <>
new  <	cmp qword [rbp + 41], 0>

369:
old  < @2952$generateTempName$54:>
new  <	je @2603$generateTempName$56>

370:
old  <	; Equal 56 result 0>
new  <>

371:
old  <	cmp qword [rbp + 41], 0>
new  < @2603$generateTempName$55:>

372:
old  <	je @2952$generateTempName$56>
new  <	; Return result>

373:
old  <>
new  <	mov rbx, [rbp + 41]>

374:
old  < @2952$generateTempName$55:>
new  <	mov rax, [rbp]>

375:
old  <	; Return result>
new  <	mov rdi, [rbp + 16]>

376:
old  <	mov rbx, [rbp + 41]>
new  <	mov rbp, [rbp + 8]>

377:
old  <	mov rax, [rbp]>
new  <	jmp rax>

378:
old  <	mov rdi, [rbp + 16]>
new  <>

379:
old  <	mov rbp, [rbp + 8]>
new  < @2603$generateTempName$56:>

380:
old  <	jmp rax>
new  <	; BinaryAdd c c 1>

381:
old  <>
new  <	inc byte [rbp + 40]>

382:
old  < @2952$generateTempName$56:>
new  <>

383:
old  <	; BinaryAdd c c 1>
new  < @2603$generateTempName$57:>

384:
old  <	inc byte [rbp + 40]>
new  <	; Goto 2>

385:
old  <>
new  <	jmp @2603$generateTempName$2>

386:
old  < @2952$generateTempName$57:>
new  <>

387:
old  <	; Goto 2>
new  < @2603$generateTempName$58:>

388:
old  <	jmp @2952$generateTempName$2>
new  <	; Return 0>

389:
old  <>
new  <	mov rbx, 0>

390:
old  < @2952$generateTempName$58:>
new  <	mov rax, [rbp]>

391:
old  <	; Return 0>
new  <	mov rdi, [rbp + 16]>

392:
old  <	mov rbx, 0>
new  <	mov rbp, [rbp + 8]>

393:
old  <	mov rax, [rbp]>
new  <	jmp rax>

394:
old  <	mov rdi, [rbp + 16]>
new  <>

395:
old  <	mov rbp, [rbp + 8]>
new  < @2603$generateTempName$59:>

396:
old  <	jmp rax>
new  <	; FunctionEnd generateTempName>

398:
old  < @2952$generateTempName$59:>
new  <section .data>

399:
old  <	; FunctionEnd generateTempName>
new  <>

400:
old  <>
new  <string_w#:>

401:
old  <section .data>
new  <	; Initializer String w>

402:
old  <>
new  <	db "w", 0>

403:
old  <string_w#:>
new  <>

404:
old  <	; Initializer String w>
new  <section .text>

405:
old  <	db "w", 0>
new  <>

406:
old  <>
new  < tmpfile:>

407:
old  <section .text>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

409:
old  < tmpfile:>
new  < tmpfile$1:>

410:
old  <	; Empty>
new  <	; Parameter pointer name 60>

411:
old  <>
new  <	mov [rbp + 60], rbp>

412:
old  < tmpfile$1:>
new  <	add qword [rbp + 60], 32>

413:
old  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

414:
old  <>
new  < tmpfile$2:>

415:
old  < tmpfile$2:>
new  <	; Parameter signedint 0 68>

416:
old  <	; Parameter pointer name 60>
new  <	mov dword [rbp + 68], 0>

417:
old  <	mov [rbp + 60], rbp>
new  <>

418:
old  <	add qword [rbp + 60], 32>
new  < tmpfile$3:>

419:
old  <>
new  <	; Parameter signedint 0 72>

420:
old  < tmpfile$3:>
new  <	mov dword [rbp + 72], 0>

421:
old  <	; Parameter signedint 0 68>
new  <>

422:
old  <	mov dword [rbp + 68], 0>
new  < tmpfile$4:>

423:
old  <>
new  <	; Call generateTempName 36 0>

424:
old  < tmpfile$4:>
new  <	mov qword [rbp + 36], tmpfile$5>

425:
old  <	; Parameter signedint 0 72>
new  <	mov [rbp + 44], rbp>

426:
old  <	mov dword [rbp + 72], 0>
new  <	add rbp, 36>

427:
old  <>
new  <	jmp @2603$generateTempName>

428:
old  < tmpfile$5:>
new  <>

429:
old  <	; Call generateTempName 36 0>
new  < tmpfile$5:>

430:
old  <	mov qword [rbp + 36], tmpfile$6>
new  <	; PostCall 36>

431:
old  <	mov [rbp + 44], rbp>
new  <>

432:
old  <	add rbp, 36>
new  < tmpfile$6:>

433:
old  <	jmp @2952$generateTempName>
new  <	; GetReturnValue Â£temporary951>

435:
old  < tmpfile$6:>
new  < tmpfile$7:>

436:
old  <	; PostCall 36>
new  <	; Equal 19 Â£temporary951 0>

437:
old  <>
new  <	cmp rbx, 0>

438:
old  < tmpfile$7:>
new  <	je tmpfile$19>

439:
old  <	; GetReturnValue Â£temporary922>
new  <>

440:
old  <>
new  < tmpfile$8:>

441:
old  < tmpfile$8:>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

442:
old  <	; Equal 20 Â£temporary922 0>
new  <>

443:
old  <	cmp rbx, 0>
new  < tmpfile$9:>

444:
old  <	je tmpfile$20>
new  <	; Parameter pointer name 60>

445:
old  <>
new  <	mov [rbp + 60], rbp>

446:
old  < tmpfile$9:>
new  <	add qword [rbp + 60], 32>

447:
old  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

448:
old  <>
new  < tmpfile$10:>

449:
old  < tmpfile$10:>
new  <	; Parameter pointer "w" 68>

450:
old  <	; Parameter pointer name 60>
new  <	mov qword [rbp + 68], string_w#>

451:
old  <	mov [rbp + 60], rbp>
new  <>

452:
old  <	add qword [rbp + 60], 32>
new  < tmpfile$11:>

453:
old  <>
new  <	; Call fopen 36 0>

454:
old  < tmpfile$11:>
new  <	mov qword [rbp + 36], tmpfile$12>

455:
old  <	; Parameter pointer "w" 68>
new  <	mov [rbp + 44], rbp>

456:
old  <	mov qword [rbp + 68], string_w#>
new  <	add rbp, 36>

457:
old  <>
new  <	jmp fopen>

458:
old  < tmpfile$12:>
new  <>

459:
old  <	; Call fopen 36 0>
new  < tmpfile$12:>

460:
old  <	mov qword [rbp + 36], tmpfile$13>
new  <	; PostCall 36>

461:
old  <	mov [rbp + 44], rbp>
new  <>

462:
old  <	add rbp, 36>
new  < tmpfile$13:>

463:
old  <	jmp fopen>
new  <	; GetReturnValue Â£temporary952>

465:
old  < tmpfile$13:>
new  < tmpfile$14:>

466:
old  <	; PostCall 36>
new  <	; Assign stream Â£temporary952>

467:
old  <>
new  <	mov [rbp + 24], rbx>

468:
old  < tmpfile$14:>
new  <>

469:
old  <	; GetReturnValue Â£temporary923>
new  < tmpfile$15:>

470:
old  <>
new  <	; Equal 19 stream 0>

471:
old  < tmpfile$15:>
new  <	cmp qword [rbp + 24], 0>

472:
old  <	; Assign stream Â£temporary923>
new  <	je tmpfile$19>

473:
old  <	mov [rbp + 24], rbx>
new  <>

474:
old  <>
new  < tmpfile$16:>

475:
old  < tmpfile$16:>
new  <	; Dereference Â£temporary956 -> stream stream 0>

476:
old  <	; Equal 20 stream 0>
new  <	mov rsi, [rbp + 24]>

477:
old  <	cmp qword [rbp + 24], 0>
new  <>

478:
old  <	je tmpfile$20>
new  < tmpfile$17:>

479:
old  <>
new  <	; Assign Â£temporary956 -> stream 1>

480:
old  < tmpfile$17:>
new  <	mov dword [rsi + 37], 1>

481:
old  <	; Dereference Â£temporary927 -> stream stream 0>
new  <>

482:
old  <	mov rsi, [rbp + 24]>
new  < tmpfile$18:>

483:
old  <>
new  <	; Return stream>

484:
old  < tmpfile$18:>
new  <	mov rbx, [rbp + 24]>

485:
old  <	; Assign Â£temporary927 -> stream 1>
new  <	mov rax, [rbp]>

486:
old  <	mov dword [rsi + 37], 1>
new  <	mov rdi, [rbp + 16]>

487:
old  <>
new  <	mov rbp, [rbp + 8]>

488:
old  < tmpfile$19:>
new  <	jmp rax>

489:
old  <	; Return stream>
new  <>

490:
old  <	mov rbx, [rbp + 24]>
new  < tmpfile$19:>

491:
old  <	mov rax, [rbp]>
new  <	; Return 0>

492:
old  <	mov rdi, [rbp + 16]>
new  <	mov rbx, 0>

493:
old  <	mov rbp, [rbp + 8]>
new  <	mov rax, [rbp]>

494:
old  <	jmp rax>
new  <	mov rdi, [rbp + 16]>

495:
old  <>
new  <	mov rbp, [rbp + 8]>

496:
old  < tmpfile$20:>
new  <	jmp rax>

497:
old  <	; Return 0>
new  <>

498:
old  <	mov rbx, 0>
new  < tmpfile$20:>

499:
old  <	mov rax, [rbp]>
new  <	; FunctionEnd tmpfile>

500:
old  <	mov rdi, [rbp + 16]>
new  <>

501:
old  <	mov rbp, [rbp + 8]>
new  <section .text>

502:
old  <	jmp rax>
new  <>

503:
old  <>
new  < tmpnam:>

504:
old  < tmpfile$21:>
new  <	; SignedGreaterThanEqual 9 g_tempSize 16>

505:
old  <	; FunctionEnd tmpfile>
new  <	cmp dword [@2594$g_tempSize], 16>

506:
old  <>
new  <	jge tmpnam$9>

507:
old  <section .text>
new  <>

508:
old  <>
new  < tmpnam$1:>

509:
old  < tmpnam:>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

510:
old  <	; SignedGreaterThanEqual 9 g_tempSize 16>
new  <>

511:
old  <	cmp dword [@2943$g_tempSize], 16>
new  < tmpnam$2:>

512:
old  <	jge tmpnam$9>
new  <	; Parameter pointer name 56>

513:
old  <>
new  <	mov rax, [rbp + 24]>

514:
old  < tmpnam$1:>
new  <	mov [rbp + 56], rax>

515:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

516:
old  <>
new  < tmpnam$3:>

517:
old  < tmpnam$2:>
new  <	; Parameter signedint 0 64>

518:
old  <	; Parameter pointer name 56>
new  <	mov dword [rbp + 64], 0>

519:
old  <	mov rax, [rbp + 24]>
new  <>

520:
old  <	mov [rbp + 56], rax>
new  < tmpnam$4:>

521:
old  <>
new  <	; Parameter signedint 1 68>

522:
old  < tmpnam$3:>
new  <	mov dword [rbp + 68], 1>

523:
old  <	; Parameter signedint 0 64>
new  <>

524:
old  <	mov dword [rbp + 64], 0>
new  < tmpnam$5:>

525:
old  <>
new  <	; Call generateTempName 32 0>

526:
old  < tmpnam$4:>
new  <	mov qword [rbp + 32], tmpnam$6>

527:
old  <	; Parameter signedint 1 68>
new  <	mov [rbp + 40], rbp>

528:
old  <	mov dword [rbp + 68], 1>
new  <	add rbp, 32>

529:
old  <>
new  <	jmp @2603$generateTempName>

530:
old  < tmpnam$5:>
new  <>

531:
old  <	; Call generateTempName 32 0>
new  < tmpnam$6:>

532:
old  <	mov qword [rbp + 32], tmpnam$6>
new  <	; PostCall 32>

533:
old  <	mov [rbp + 40], rbp>
new  <>

534:
old  <	add rbp, 32>
new  < tmpnam$7:>

535:
old  <	jmp @2952$generateTempName>
new  <	; GetReturnValue Â£temporary958>

537:
old  < tmpnam$6:>
new  < tmpnam$8:>

538:
old  <	; PostCall 32>
new  <	; Return Â£temporary958>

539:
old  <>
new  <	mov rax, [rbp]>

540:
old  < tmpnam$7:>
new  <	mov rdi, [rbp + 16]>

541:
old  <	; GetReturnValue Â£temporary929>
new  <	mov rbp, [rbp + 8]>

542:
old  <>
new  <	jmp rax>

543:
old  < tmpnam$8:>
new  <>

544:
old  <	; Return Â£temporary929>
new  < tmpnam$9:>

545:
old  <	mov rax, [rbp]>
new  <	; Return 0>

546:
old  <	mov rdi, [rbp + 16]>
new  <	mov rbx, 0>

547:
old  <	mov rbp, [rbp + 8]>
new  <	mov rax, [rbp]>

548:
old  <	jmp rax>
new  <	mov rdi, [rbp + 16]>

549:
old  <>
new  <	mov rbp, [rbp + 8]>

550:
old  < tmpnam$9:>
new  <	jmp rax>

551:
old  <	; Return 0>
new  <>

552:
old  <	mov rbx, 0>
new  < tmpnam$10:>

553:
old  <	mov rax, [rbp]>
new  <	; FunctionEnd tmpnam>

82:
old  <	; IntegralToIntegral Â£temporary930 g_inDevice>
new  <	; IntegralToIntegral Â£temporary959 g_inDevice>

86:
old  <	; Assign stream Â£temporary930>
new  <	; Assign stream Â£temporary959>

90:
old  <	; Dereference Â£temporary931 -> stream stream 0>
new  <	; Dereference Â£temporary960 -> stream stream 0>

94:
old  <	; Assign handle Â£temporary931 -> stream>
new  <	; Assign handle Â£temporary960 -> stream>

103:
old  <	; Dereference Â£temporary934 -> stream stream 0>
new  <	; Dereference Â£temporary963 -> stream stream 0>

107:
old  <	; IntegralToIntegral Â£temporary935 Â£temporary934 -> stream>
new  <	; IntegralToIntegral Â£temporary964 Â£temporary963 -> stream>

113:
old  <	; AssignRegister rdi Â£temporary935>
new  <	; AssignRegister rdi Â£temporary964>

116:
old  <	; Address Â£temporary937 c>
new  <	; Address Â£temporary966 c>

121:
old  <	; IntegralToIntegral Â£temporary938 Â£temporary937>
new  <	; IntegralToIntegral Â£temporary967 Â£temporary966>

124:
old  <	; AssignRegister rsi Â£temporary938>
new  <	; AssignRegister rsi Â£temporary967>

147:
old  <	; IntegralToIntegral Â£temporary941 g_inDevice>
new  <	; IntegralToIntegral Â£temporary970 g_inDevice>

151:
old  <	; Assign inString Â£temporary941>
new  <	; Assign inString Â£temporary970>

155:
old  <	; Assign Â£temporary942 g_inChars>
new  <	; Assign Â£temporary971 g_inChars>

163:
old  <	; IntegralToIntegral Â£temporary944 Â£temporary942>
new  <	; IntegralToIntegral Â£temporary973 Â£temporary971>

168:
old  <	; BinaryAdd Â£temporary946 inString Â£temporary944>
new  <	; BinaryAdd Â£temporary975 inString Â£temporary973>

173:
old  <	; Dereference Â£temporary943 -> Â£temporary946 Â£temporary946 0>
new  <	; Dereference Â£temporary972 -> Â£temporary975 Â£temporary975 0>

176:
old  <	; Return Â£temporary943 -> Â£temporary946>
new  <	; Return Â£temporary972 -> Â£temporary975>

256:
old  <	; GetReturnValue Â£temporary950>
new  <	; GetReturnValue Â£temporary979>

259:
old  <	; Assign input Â£temporary950>
new  <	; Assign input Â£temporary979>

266:
old  <	; IntegralToIntegral Â£temporary951 input>
new  <	; IntegralToIntegral Â£temporary980 input>

275:
old  <	; Parameter signedint Â£temporary951 73>
new  <	; Parameter signedint Â£temporary980 73>

289:
old  <	; GetReturnValue Â£temporary952>
new  <	; GetReturnValue Â£temporary981>

292:
old  <	; Equal 19 Â£temporary952 0>
new  <	; Equal 19 Â£temporary981 0>

310:
old  <	; GetReturnValue Â£temporary953>
new  <	; GetReturnValue Â£temporary982>

313:
old  <	; Assign input Â£temporary953>
new  <	; Assign input Â£temporary982>

339:
old  <	; IntegralToIntegral Â£temporary958 input>
new  <	; IntegralToIntegral Â£temporary987 input>

348:
old  <	; Parameter signedint Â£temporary958 81>
new  <	; Parameter signedint Â£temporary987 81>

362:
old  <	; GetReturnValue Â£temporary959>
new  <	; GetReturnValue Â£temporary988>

365:
old  <	; NotEqual 38 Â£temporary959 0>
new  <	; NotEqual 38 Â£temporary988 0>

383:
old  <	; IntegralToIntegral Â£temporary962 input>
new  <	; IntegralToIntegral Â£temporary991 input>

392:
old  <	; Parameter signedint Â£temporary962 81>
new  <	; Parameter signedint Â£temporary991 81>

406:
old  <	; GetReturnValue Â£temporary963>
new  <	; GetReturnValue Â£temporary992>

409:
old  <	; NotEqual 50 Â£temporary963 0>
new  <	; NotEqual 50 Â£temporary992 0>

414:
old  <	; Assign Â£temporary969 index>
new  <	; Assign Â£temporary998 index>

422:
old  <	; IntegralToIntegral Â£temporary971 Â£temporary969>
new  <	; IntegralToIntegral Â£temporary1000 Â£temporary998>

427:
old  <	; BinaryAdd Â£temporary973 string Â£temporary971>
new  <	; BinaryAdd Â£temporary1002 string Â£temporary1000>

432:
old  <	; Dereference Â£temporary970 -> Â£temporary973 Â£temporary973 0>
new  <	; Dereference Â£temporary999 -> Â£temporary1002 Â£temporary1002 0>

435:
old  <	; Assign Â£temporary970 -> Â£temporary973 input>
new  <	; Assign Â£temporary999 -> Â£temporary1002 input>

453:
old  <	; GetReturnValue Â£temporary974>
new  <	; GetReturnValue Â£temporary1003>

456:
old  <	; Assign input Â£temporary974>
new  <	; Assign input Â£temporary1003>

464:
old  <	; IntegralToIntegral Â£temporary976 index>
new  <	; IntegralToIntegral Â£temporary1005 index>

470:
old  <	; BinaryAdd Â£temporary978 string Â£temporary976>
new  <	; BinaryAdd Â£temporary1007 string Â£temporary1005>

475:
old  <	; Dereference Â£temporary975 -> Â£temporary978 Â£temporary978 0>
new  <	; Dereference Â£temporary1004 -> Â£temporary1007 Â£temporary1007 0>

478:
old  <	; Assign Â£temporary975 -> Â£temporary978 0>
new  <	; Assign Â£temporary1004 -> Â£temporary1007 0>

499:
old  <	; IntegralToIntegral Â£temporary981 input>
new  <	; IntegralToIntegral Â£temporary1010 input>

508:
old  <	; Parameter signedint Â£temporary981 81>
new  <	; Parameter signedint Â£temporary1010 81>

522:
old  <	; GetReturnValue Â£temporary982>
new  <	; GetReturnValue Â£temporary1011>

525:
old  <	; NotEqual 73 Â£temporary982 0>
new  <	; NotEqual 73 Â£temporary1011 0>

543:
old  <	; IntegralToIntegral Â£temporary985 input>
new  <	; IntegralToIntegral Â£temporary1014 input>

552:
old  <	; Parameter signedint Â£temporary985 81>
new  <	; Parameter signedint Â£temporary1014 81>

566:
old  <	; GetReturnValue Â£temporary986>
new  <	; GetReturnValue Â£temporary1015>

569:
old  <	; NotEqual 79 Â£temporary986 0>
new  <	; NotEqual 79 Â£temporary1015 0>

587:
old  <	; GetReturnValue Â£temporary992>
new  <	; GetReturnValue Â£temporary1021>

590:
old  <	; Assign input Â£temporary992>
new  <	; Assign input Â£temporary1021>

627:
old  <	; GetReturnValue Â£temporary993>
new  <	; GetReturnValue Â£temporary1022>

630:
old  <	; Assign input Â£temporary993>
new  <	; Assign input Â£temporary1022>

641:
old  <	; IntegralToIntegral Â£temporary994 input>
new  <	; IntegralToIntegral Â£temporary1023 input>

650:
old  <	; Parameter signedint Â£temporary994 69>
new  <	; Parameter signedint Â£temporary1023 69>

664:
old  <	; GetReturnValue Â£temporary995>
new  <	; GetReturnValue Â£temporary1024>

667:
old  <	; Equal 20 Â£temporary995 0>
new  <	; Equal 20 Â£temporary1024 0>

685:
old  <	; GetReturnValue Â£temporary996>
new  <	; GetReturnValue Â£temporary1025>

688:
old  <	; Assign input Â£temporary996>
new  <	; Assign input Â£temporary1025>

709:
old  <	; IntegralToIntegral Â£temporary1000 input>
new  <	; IntegralToIntegral Â£temporary1029 input>

718:
old  <	; Parameter signedint Â£temporary1000 69>
new  <	; Parameter signedint Â£temporary1029 69>

732:
old  <	; GetReturnValue Â£temporary1001>
new  <	; GetReturnValue Â£temporary1030>

735:
old  <	; NotEqual 46 Â£temporary1001 0>
new  <	; NotEqual 46 Â£temporary1030 0>

740:
old  <	; IntegralToIntegral Â£temporary1004 input>
new  <	; IntegralToIntegral Â£temporary1033 input>

749:
old  <	; Equal 46 Â£temporary1004 -1>
new  <	; Equal 46 Â£temporary1033 -1>

759:
old  <	; Assign Â£temporary1009 index>
new  <	; Assign Â£temporary1038 index>

767:
old  <	; IntegralToIntegral Â£temporary1011 Â£temporary1009>
new  <	; IntegralToIntegral Â£temporary1040 Â£temporary1038>

772:
old  <	; BinaryAdd Â£temporary1013 string Â£temporary1011>
new  <	; BinaryAdd Â£temporary1042 string Â£temporary1040>

777:
old  <	; Dereference Â£temporary1010 -> Â£temporary1013 Â£temporary1013 0>
new  <	; Dereference Â£temporary1039 -> Â£temporary1042 Â£temporary1042 0>

780:
old  <	; Assign Â£temporary1010 -> Â£temporary1013 input>
new  <	; Assign Â£temporary1039 -> Â£temporary1042 input>

798:
old  <	; GetReturnValue Â£temporary1014>
new  <	; GetReturnValue Â£temporary1043>

801:
old  <	; Assign input Â£temporary1014>
new  <	; Assign input Â£temporary1043>

817:
old  <	; IntegralToIntegral Â£temporary1017 index>
new  <	; IntegralToIntegral Â£temporary1046 index>

823:
old  <	; BinaryAdd Â£temporary1019 string Â£temporary1017>
new  <	; BinaryAdd Â£temporary1048 string Â£temporary1046>

828:
old  <	; Dereference Â£temporary1016 -> Â£temporary1019 Â£temporary1019 0>
new  <	; Dereference Â£temporary1045 -> Â£temporary1048 Â£temporary1048 0>

831:
old  <	; Assign Â£temporary1016 -> Â£temporary1019 0>
new  <	; Assign Â£temporary1045 -> Â£temporary1048 0>

843:
old  <	; Assign Â£temporary1021 precision>
new  <	; Assign Â£temporary1050 precision>

851:
old  <	; SignedLessThanEqual 79 Â£temporary1021 0>
new  <	; SignedLessThanEqual 79 Â£temporary1050 0>

859:
old  <	; IntegralToIntegral Â£temporary1023 input>
new  <	; IntegralToIntegral Â£temporary1052 input>

868:
old  <	; Parameter signedint Â£temporary1023 69>
new  <	; Parameter signedint Â£temporary1052 69>

882:
old  <	; GetReturnValue Â£temporary1024>
new  <	; GetReturnValue Â£temporary1053>

885:
old  <	; NotEqual 79 Â£temporary1024 0>
new  <	; NotEqual 79 Â£temporary1053 0>

890:
old  <	; IntegralToIntegral Â£temporary1027 input>
new  <	; IntegralToIntegral Â£temporary1056 input>

899:
old  <	; Equal 79 Â£temporary1027 -1>
new  <	; Equal 79 Â£temporary1056 -1>

909:
old  <	; Assign Â£temporary1033 index>
new  <	; Assign Â£temporary1062 index>

917:
old  <	; IntegralToIntegral Â£temporary1035 Â£temporary1033>
new  <	; IntegralToIntegral Â£temporary1064 Â£temporary1062>

922:
old  <	; BinaryAdd Â£temporary1037 string Â£temporary1035>
new  <	; BinaryAdd Â£temporary1066 string Â£temporary1064>

927:
old  <	; Dereference Â£temporary1034 -> Â£temporary1037 Â£temporary1037 0>
new  <	; Dereference Â£temporary1063 -> Â£temporary1066 Â£temporary1066 0>

930:
old  <	; Assign Â£temporary1034 -> Â£temporary1037 input>
new  <	; Assign Â£temporary1063 -> Â£temporary1066 input>

948:
old  <	; GetReturnValue Â£temporary1038>
new  <	; GetReturnValue Â£temporary1067>

951:
old  <	; Assign input Â£temporary1038>
new  <	; Assign input Â£temporary1067>

972:
old  <	; IntegralToIntegral Â£temporary1042 index>
new  <	; IntegralToIntegral Â£temporary1071 index>

978:
old  <	; BinaryAdd Â£temporary1044 string Â£temporary1042>
new  <	; BinaryAdd Â£temporary1073 string Â£temporary1071>

983:
old  <	; Dereference Â£temporary1041 -> Â£temporary1044 Â£temporary1044 0>
new  <	; Dereference Â£temporary1070 -> Â£temporary1073 Â£temporary1073 0>

986:
old  <	; Assign Â£temporary1041 -> Â£temporary1044 0>
new  <	; Assign Â£temporary1070 -> Â£temporary1073 0>

1006:
old  <	; IntegralToIntegral Â£temporary1047 input>
new  <	; IntegralToIntegral Â£temporary1076 input>

1015:
old  <	; Parameter signedint Â£temporary1047 69>
new  <	; Parameter signedint Â£temporary1076 69>

1029:
old  <	; GetReturnValue Â£temporary1048>
new  <	; GetReturnValue Â£temporary1077>

1032:
old  <	; NotEqual 105 Â£temporary1048 0>
new  <	; NotEqual 105 Â£temporary1077 0>

1037:
old  <	; IntegralToIntegral Â£temporary1051 input>
new  <	; IntegralToIntegral Â£temporary1080 input>

1046:
old  <	; Equal 105 Â£temporary1051 -1>
new  <	; Equal 105 Â£temporary1080 -1>

1069:
old  <	; GetReturnValue Â£temporary1056>
new  <	; GetReturnValue Â£temporary1085>

1072:
old  <	; Assign input Â£temporary1056>
new  <	; Assign input Â£temporary1085>

1096:
old  <	; Assign Â£temporary1059 precision>
new  <	; Assign Â£temporary1088 precision>

1104:
old  <	; SignedLessThanEqual 128 Â£temporary1059 0>
new  <	; SignedLessThanEqual 128 Â£temporary1088 0>

1112:
old  <	; IntegralToIntegral Â£temporary1061 input>
new  <	; IntegralToIntegral Â£temporary1090 input>

1121:
old  <	; Parameter signedint Â£temporary1061 69>
new  <	; Parameter signedint Â£temporary1090 69>

1135:
old  <	; GetReturnValue Â£temporary1062>
new  <	; GetReturnValue Â£temporary1091>

1138:
old  <	; NotEqual 128 Â£temporary1062 0>
new  <	; NotEqual 128 Â£temporary1091 0>

1143:
old  <	; IntegralToIntegral Â£temporary1065 input>
new  <	; IntegralToIntegral Â£temporary1094 input>

1152:
old  <	; Equal 128 Â£temporary1065 -1>
new  <	; Equal 128 Â£temporary1094 -1>

1175:
old  <	; GetReturnValue Â£temporary1071>
new  <	; GetReturnValue Â£temporary1100>

1178:
old  <	; Assign input Â£temporary1071>
new  <	; Assign input Â£temporary1100>

1227:
old  <	; IntegralToIntegral Â£temporary1077 input>
new  <	; IntegralToIntegral Â£temporary1106 input>

1236:
old  <	; Parameter signedint Â£temporary1077 49>
new  <	; Parameter signedint Â£temporary1106 49>

1250:
old  <	; GetReturnValue Â£temporary1078>
new  <	; GetReturnValue Â£temporary1107>

1253:
old  <	; Equal 10 Â£temporary1078 0>
new  <	; Equal 10 Â£temporary1107 0>

1258:
old  <	; BinarySubtract Â£temporary1079 input 48>
new  <	; BinarySubtract Â£temporary1108 input 48>

1263:
old  <	; IntegralToIntegral Â£temporary1080 Â£temporary1079>
new  <	; IntegralToIntegral Â£temporary1109 Â£temporary1108>

1268:
old  <	; Return Â£temporary1080>
new  <	; Return Â£temporary1109>

1278:
old  <	; IntegralToIntegral Â£temporary1081 input>
new  <	; IntegralToIntegral Â£temporary1110 input>

1287:
old  <	; Parameter signedint Â£temporary1081 49>
new  <	; Parameter signedint Â£temporary1110 49>

1301:
old  <	; GetReturnValue Â£temporary1082>
new  <	; GetReturnValue Â£temporary1111>

1304:
old  <	; Equal 21 Â£temporary1082 0>
new  <	; Equal 21 Â£temporary1111 0>

1309:
old  <	; BinarySubtract Â£temporary1083 input 97>
new  <	; BinarySubtract Â£temporary1112 input 97>

1314:
old  <	; IntegralToIntegral Â£temporary1084 Â£temporary1083>
new  <	; IntegralToIntegral Â£temporary1113 Â£temporary1112>

1319:
old  <	; BinaryAdd Â£temporary1085 Â£temporary1084 10>
new  <	; BinaryAdd Â£temporary1114 Â£temporary1113 10>

1323:
old  <	; Return Â£temporary1085>
new  <	; Return Â£temporary1114>

1330:
old  <	; BinarySubtract Â£temporary1086 input 65>
new  <	; BinarySubtract Â£temporary1115 input 65>

1335:
old  <	; IntegralToIntegral Â£temporary1087 Â£temporary1086>
new  <	; IntegralToIntegral Â£temporary1116 Â£temporary1115>

1340:
old  <	; BinaryAdd Â£temporary1088 Â£temporary1087 10>
new  <	; BinaryAdd Â£temporary1117 Â£temporary1116 10>

1344:
old  <	; Return Â£temporary1088>
new  <	; Return Â£temporary1117>

1387:
old  <	; GetReturnValue Â£temporary1091>
new  <	; GetReturnValue Â£temporary1120>

1390:
old  <	; Assign input Â£temporary1091>
new  <	; Assign input Â£temporary1120>

1397:
old  <	; IntegralToIntegral Â£temporary1092 input>
new  <	; IntegralToIntegral Â£temporary1121 input>

1406:
old  <	; Parameter signedint Â£temporary1092 65>
new  <	; Parameter signedint Â£temporary1121 65>

1420:
old  <	; GetReturnValue Â£temporary1093>
new  <	; GetReturnValue Â£temporary1122>

1423:
old  <	; Equal 21 Â£temporary1093 0>
new  <	; Equal 21 Â£temporary1122 0>

1441:
old  <	; GetReturnValue Â£temporary1094>
new  <	; GetReturnValue Â£temporary1123>

1444:
old  <	; Assign input Â£temporary1094>
new  <	; Assign input Â£temporary1123>

1470:
old  <	; GetReturnValue Â£temporary1097>
new  <	; GetReturnValue Â£temporary1126>

1473:
old  <	; Assign input Â£temporary1097>
new  <	; Assign input Â£temporary1126>

1503:
old  <	; GetReturnValue Â£temporary1099>
new  <	; GetReturnValue Â£temporary1128>

1506:
old  <	; Assign input Â£temporary1099>
new  <	; Assign input Â£temporary1128>

1513:
old  <	; IntegralToIntegral Â£temporary1100 input>
new  <	; IntegralToIntegral Â£temporary1129 input>

1522:
old  <	; Parameter signedint Â£temporary1100 65>
new  <	; Parameter signedint Â£temporary1129 65>

1536:
old  <	; GetReturnValue Â£temporary1101>
new  <	; GetReturnValue Â£temporary1130>

1539:
old  <	; Equal 53 Â£temporary1101 0>
new  <	; Equal 53 Â£temporary1130 0>

1544:
old  <	; SignedMultiply Â£temporary1102 longValue 10>
new  <	; SignedMultiply Â£temporary1131 longValue 10>

1550:
old  <	; BinarySubtract Â£temporary1103 input 48>
new  <	; BinarySubtract Â£temporary1132 input 48>

1555:
old  <	; IntegralToIntegral Â£temporary1104 Â£temporary1103>
new  <	; IntegralToIntegral Â£temporary1133 Â£temporary1132>

1564:
old  <	; BinaryAdd longValue Â£temporary1102 Â£temporary1104>
new  <	; BinaryAdd longValue Â£temporary1131 Â£temporary1133>

1582:
old  <	; GetReturnValue Â£temporary1106>
new  <	; GetReturnValue Â£temporary1135>

1585:
old  <	; Assign input Â£temporary1106>
new  <	; Assign input Â£temporary1135>

1602:
old  <	; UnarySubtract Â£temporary1108 longValue>
new  <	; UnarySubtract Â£temporary1137 longValue>

1607:
old  <	; Assign longValue Â£temporary1108>
new  <	; Assign longValue Â£temporary1137>

1668:
old  <	; GetReturnValue Â£temporary1113>
new  <	; GetReturnValue Â£temporary1142>

1671:
old  <	; Assign input Â£temporary1113>
new  <	; Assign input Â£temporary1142>

1682:
old  <	; IntegralToIntegral Â£temporary1114 input>
new  <	; IntegralToIntegral Â£temporary1143 input>

1691:
old  <	; Parameter signedint Â£temporary1114 77>
new  <	; Parameter signedint Â£temporary1143 77>

1705:
old  <	; GetReturnValue Â£temporary1115>
new  <	; GetReturnValue Â£temporary1144>

1708:
old  <	; Equal 20 Â£temporary1115 0>
new  <	; Equal 20 Â£temporary1144 0>

1726:
old  <	; GetReturnValue Â£temporary1116>
new  <	; GetReturnValue Â£temporary1145>

1729:
old  <	; Assign input Â£temporary1116>
new  <	; Assign input Â£temporary1145>

1755:
old  <	; GetReturnValue Â£temporary1119>
new  <	; GetReturnValue Â£temporary1148>

1758:
old  <	; Assign input Â£temporary1119>
new  <	; Assign input Â£temporary1148>

1765:
old  <	; IntegralToIntegral Â£temporary1120 input>
new  <	; IntegralToIntegral Â£temporary1149 input>

1774:
old  <	; Parameter signedint Â£temporary1120 77>
new  <	; Parameter signedint Â£temporary1149 77>

1788:
old  <	; GetReturnValue Â£temporary1121>
new  <	; GetReturnValue Â£temporary1150>

1791:
old  <	; NotEqual 44 Â£temporary1121 120>
new  <	; NotEqual 44 Â£temporary1150 120>

1801:
old  <	; Assign Â£temporary1124 16>
new  <	; Assign Â£temporary1153 16>

1809:
old  <	; Assign Â£temporary1124 base>
new  <	; Assign Â£temporary1153 base>

1813:
old  <	; Assign base Â£temporary1124>
new  <	; Assign base Â£temporary1153>

1830:
old  <	; GetReturnValue Â£temporary1125>
new  <	; GetReturnValue Â£temporary1154>

1833:
old  <	; Assign input Â£temporary1125>
new  <	; Assign input Â£temporary1154>

1846:
old  <	; Assign Â£temporary1127 8>
new  <	; Assign Â£temporary1156 8>

1854:
old  <	; Assign Â£temporary1127 base>
new  <	; Assign Â£temporary1156 base>

1858:
old  <	; Assign base Â£temporary1127>
new  <	; Assign base Â£temporary1156>

1874:
old  <	; IntegralToIntegral Â£temporary1129 input>
new  <	; IntegralToIntegral Â£temporary1158 input>

1883:
old  <	; Parameter signedint Â£temporary1129 77>
new  <	; Parameter signedint Â£temporary1158 77>

1897:
old  <	; GetReturnValue Â£temporary1130>
new  <	; GetReturnValue Â£temporary1159>

1900:
old  <	; Equal 74 Â£temporary1130 0>
new  <	; Equal 74 Â£temporary1159 0>

1923:
old  <	; GetReturnValue Â£temporary1131>
new  <	; GetReturnValue Â£temporary1160>

1926:
old  <	; Assign digit Â£temporary1131>
new  <	; Assign digit Â£temporary1160>

1936:
old  <	; UnsignedMultiply Â£temporary1133 unsignedLongValue base>
new  <	; UnsignedMultiply Â£temporary1162 unsignedLongValue base>

1942:
old  <	; BinaryAdd unsignedLongValue Â£temporary1133 digit>
new  <	; BinaryAdd unsignedLongValue Â£temporary1162 digit>

1964:
old  <	; GetReturnValue Â£temporary1135>
new  <	; GetReturnValue Â£temporary1164>

1967:
old  <	; Assign input Â£temporary1135>
new  <	; Assign input Â£temporary1164>

2070:
old  <	; GetReturnValue Â£temporary1140>
new  <	; GetReturnValue Â£temporary1169>

2073:
old  <	; Assign input Â£temporary1140>
new  <	; Assign input Â£temporary1169>

2080:
old  <	; IntegralToIntegral Â£temporary1141 input>
new  <	; IntegralToIntegral Â£temporary1170 input>

2089:
old  <	; Parameter signedint Â£temporary1141 73>
new  <	; Parameter signedint Â£temporary1170 73>

2103:
old  <	; GetReturnValue Â£temporary1142>
new  <	; GetReturnValue Â£temporary1171>

2106:
old  <	; Equal 24 Â£temporary1142 0>
new  <	; Equal 24 Â£temporary1171 0>

2124:
old  <	; GetReturnValue Â£temporary1143>
new  <	; GetReturnValue Â£temporary1172>

2127:
old  <	; Assign input Â£temporary1143>
new  <	; Assign input Â£temporary1172>

2153:
old  <	; GetReturnValue Â£temporary1146>
new  <	; GetReturnValue Â£temporary1175>

2156:
old  <	; Assign input Â£temporary1146>
new  <	; Assign input Â£temporary1175>

2186:
old  <	; GetReturnValue Â£temporary1148>
new  <	; GetReturnValue Â£temporary1177>

2189:
old  <	; Assign input Â£temporary1148>
new  <	; Assign input Â£temporary1177>

2196:
old  <	; IntegralToIntegral Â£temporary1149 input>
new  <	; IntegralToIntegral Â£temporary1178 input>

2205:
old  <	; Parameter signedint Â£temporary1149 73>
new  <	; Parameter signedint Â£temporary1178 73>

2219:
old  <	; GetReturnValue Â£temporary1150>
new  <	; GetReturnValue Â£temporary1179>

2222:
old  <	; Equal 60 Â£temporary1150 0>
new  <	; Equal 60 Â£temporary1179 0>

2235:
old  <	; SignedMultiply Â£temporary1151 10.0 value>
new  <	; SignedMultiply Â£temporary1180 10.0 value>

2239:
old  <	; BinarySubtract Â£temporary1152 input 48>
new  <	; BinarySubtract Â£temporary1181 input 48>

2244:
old  <	; IntegralToIntegral Â£temporary1154 Â£temporary1152>
new  <	; IntegralToIntegral Â£temporary1183 Â£temporary1181>

2252:
old  <	; IntegralToFloating Â£temporary1153 Â£temporary1154>
new  <	; IntegralToFloating Â£temporary1182 Â£temporary1183>

2257:
old  <	; BinaryAdd Â£temporary1155 Â£temporary1151 Â£temporary1153>
new  <	; BinaryAdd Â£temporary1184 Â£temporary1180 Â£temporary1182>

2278:
old  <	; GetReturnValue Â£temporary1156>
new  <	; GetReturnValue Â£temporary1185>

2281:
old  <	; Assign input Â£temporary1156>
new  <	; Assign input Â£temporary1185>

2311:
old  <	; GetReturnValue Â£temporary1159>
new  <	; GetReturnValue Â£temporary1188>

2314:
old  <	; Assign input Â£temporary1159>
new  <	; Assign input Â£temporary1188>

2321:
old  <	; IntegralToIntegral Â£temporary1160 input>
new  <	; IntegralToIntegral Â£temporary1189 input>

2330:
old  <	; Parameter signedint Â£temporary1160 73>
new  <	; Parameter signedint Â£temporary1189 73>

2344:
old  <	; GetReturnValue Â£temporary1161>
new  <	; GetReturnValue Â£temporary1190>

2347:
old  <	; Equal 92 Â£temporary1161 0>
new  <	; Equal 92 Â£temporary1190 0>

2360:
old  <	; SignedDivide Â£temporary1162 factor 10.0>
new  <	; SignedDivide Â£temporary1191 factor 10.0>

2376:
old  <	; BinarySubtract Â£temporary1163 input 48>
new  <	; BinarySubtract Â£temporary1192 input 48>

2381:
old  <	; IntegralToIntegral Â£temporary1165 Â£temporary1163>
new  <	; IntegralToIntegral Â£temporary1194 Â£temporary1192>

2389:
old  <	; IntegralToFloating Â£temporary1164 Â£temporary1165>
new  <	; IntegralToFloating Â£temporary1193 Â£temporary1194>

2394:
old  <	; SignedMultiply Â£temporary1166 factor Â£temporary1164>
new  <	; SignedMultiply Â£temporary1195 factor Â£temporary1193>

2398:
old  <	; BinaryAdd Â£temporary1167 value Â£temporary1166>
new  <	; BinaryAdd Â£temporary1196 value Â£temporary1195>

2419:
old  <	; GetReturnValue Â£temporary1168>
new  <	; GetReturnValue Â£temporary1197>

2422:
old  <	; Assign input Â£temporary1168>
new  <	; Assign input Â£temporary1197>

2455:
old  <	; IntegralToIntegral Â£temporary1171 input>
new  <	; IntegralToIntegral Â£temporary1200 input>

2464:
old  <	; Parameter signedint Â£temporary1171 73>
new  <	; Parameter signedint Â£temporary1200 73>

2478:
old  <	; GetReturnValue Â£temporary1172>
new  <	; GetReturnValue Â£temporary1201>

2481:
old  <	; NotEqual 121 Â£temporary1172 101>
new  <	; NotEqual 121 Â£temporary1201 101>

2499:
old  <	; GetReturnValue Â£temporary1174>
new  <	; GetReturnValue Â£temporary1203>

2502:
old  <	; IntegralToFloating Â£temporary1175 Â£temporary1174>
new  <	; IntegralToFloating Â£temporary1204 Â£temporary1203>

2548:
old  <	; GetReturnValue Â£temporary1176>
new  <	; GetReturnValue Â£temporary1205>

2551:
old  <	; SignedMultiply Â£temporary1177 value Â£temporary1176>
new  <	; SignedMultiply Â£temporary1206 value Â£temporary1205>

2590:
old  <	; UnarySubtract Â£temporary1179 value>
new  <	; UnarySubtract Â£temporary1208 value>

2629:
old  <	; Empty>
new  <	; Assign percent 0>

2630:
old  <>
new  <	mov dword [rbp + 49], 0>

2631:
old  < scanFormat$1:>
new  <>

2632:
old  <	; Assign percent 0>
new  < scanFormat$1:>

2633:
old  <	mov dword [rbp + 49], 0>
new  <	; Assign shortInt 0>

2634:
old  <>
new  <	mov dword [rbp + 53], 0>

2635:
old  < scanFormat$2:>
new  <>

2636:
old  <	; Assign shortInt 0>
new  < scanFormat$2:>

2637:
old  <	mov dword [rbp + 53], 0>
new  <	; Assign longIntOrDouble 0>

2638:
old  <>
new  <	mov dword [rbp + 57], 0>

2639:
old  < scanFormat$3:>
new  <>

2640:
old  <	; Assign longIntOrDouble 0>
new  < scanFormat$3:>

2641:
old  <	mov dword [rbp + 57], 0>
new  <	; Assign longDouble 0>

2642:
old  <>
new  <	mov dword [rbp + 61], 0>

2643:
old  < scanFormat$4:>
new  <>

2644:
old  <	; Assign longDouble 0>
new  < scanFormat$4:>

2645:
old  <	mov dword [rbp + 61], 0>
new  <	; Assign star 0>

2646:
old  <>
new  <	mov dword [rbp + 65], 0>

2647:
old  < scanFormat$5:>
new  <>

2648:
old  <	; Assign star 0>
new  < scanFormat$5:>

2649:
old  <	mov dword [rbp + 65], 0>
new  <	; Assign g_inCount 0>

2650:
old  <>
new  <	mov dword [g_inCount], 0>

2651:
old  < scanFormat$6:>
new  <>

2652:
old  <	; Assign g_inCount 0>
new  < scanFormat$6:>

2653:
old  <	mov dword [g_inCount], 0>
new  <	; Assign g_inChars 0>

2654:
old  <>
new  <	mov dword [g_inChars], 0>

2655:
old  < scanFormat$7:>
new  <>

2656:
old  <	; Assign g_inChars 0>
new  < scanFormat$7:>

2657:
old  <	mov dword [g_inChars], 0>
new  <	; Assign index 0>

2658:
old  <>
new  <	mov dword [rbp + 93], 0>

2659:
old  < scanFormat$8:>
new  <>

2660:
old  <	; Assign index 0>
new  < scanFormat$8:>

2661:
old  <	mov dword [rbp + 93], 0>
new  <	; IntegralToIntegral Â£temporary1215 index>

2662:
old  <>
new  <	mov eax, [rbp + 93]>

2663:
old  < scanFormat$9:>
new  <	mov rbx, 4294967295>

2664:
old  <	; IntegralToIntegral Â£temporary1186 index>
new  <	and rax, rbx>

2665:
old  <	mov eax, [rbp + 93]>
new  <>

2666:
old  <	mov rbx, 4294967295>
new  < scanFormat$9:>

2667:
old  <	and rax, rbx>
new  <	; BinaryAdd Â£temporary1217 format Â£temporary1215>

2668:
old  <>
new  <	mov rsi, [rbp + 24]>

2669:
old  < scanFormat$10:>
new  <	add rsi, rax>

2670:
old  <	; BinaryAdd Â£temporary1188 format Â£temporary1186>
new  <>

2671:
old  <	mov rsi, [rbp + 24]>
new  < scanFormat$10:>

2672:
old  <	add rsi, rax>
new  <	; Dereference Â£temporary1214 -> Â£temporary1217 Â£temporary1217 0>

2675:
old  <	; Dereference Â£temporary1185 -> Â£temporary1188 Â£temporary1188 0>
new  <	; Equal 332 Â£temporary1214 -> Â£temporary1217 0>

2676:
old  <>
new  <	cmp byte [rsi], 0>

2677:
old  < scanFormat$12:>
new  <	je scanFormat$332>

2678:
old  <	; Equal 333 Â£temporary1185 -> Â£temporary1188 0>
new  <>

2679:
old  <	cmp byte [rsi], 0>
new  < scanFormat$12:>

2680:
old  <	je scanFormat$333>
new  <	; IntegralToIntegral Â£temporary1221 index>

2681:
old  <>
new  <	mov eax, [rbp + 93]>

2682:
old  < scanFormat$13:>
new  <	mov rbx, 4294967295>

2683:
old  <	; IntegralToIntegral Â£temporary1192 index>
new  <	and rax, rbx>

2684:
old  <	mov eax, [rbp + 93]>
new  <>

2685:
old  <	mov rbx, 4294967295>
new  < scanFormat$13:>

2686:
old  <	and rax, rbx>
new  <	; BinaryAdd Â£temporary1223 format Â£temporary1221>

2687:
old  <>
new  <	mov rsi, [rbp + 24]>

2688:
old  < scanFormat$14:>
new  <	add rsi, rax>

2689:
old  <	; BinaryAdd Â£temporary1194 format Â£temporary1192>
new  <>

2690:
old  <	mov rsi, [rbp + 24]>
new  < scanFormat$14:>

2691:
old  <	add rsi, rax>
new  <	; Dereference Â£temporary1220 -> Â£temporary1223 Â£temporary1223 0>

2694:
old  <	; Dereference Â£temporary1191 -> Â£temporary1194 Â£temporary1194 0>
new  <	; Assign c Â£temporary1220 -> Â£temporary1223>

2695:
old  <>
new  <	mov al, [rsi]>

2696:
old  < scanFormat$16:>
new  <	mov [rbp + 40], al>

2697:
old  <	; Assign c Â£temporary1191 -> Â£temporary1194>
new  <>

2698:
old  <	mov al, [rsi]>
new  < scanFormat$16:>

2699:
old  <	mov [rbp + 40], al>
new  <	; IntegralToIntegral Â£temporary1224 c>

2700:
old  <>
new  <	mov al, [rbp + 40]>

2701:
old  < scanFormat$17:>
new  <	and eax, 255>

2702:
old  <	; IntegralToIntegral Â£temporary1195 c>
new  <	cmp al, 0>

2703:
old  <	mov al, [rbp + 40]>
new  <	jge scanFormat$17>

2704:
old  <	and eax, 255>
new  <	neg al>

2705:
old  <	cmp al, 0>
new  <	neg eax>

2706:
old  <	jge scanFormat$18>
new  <>

2707:
old  <	neg al>
new  < scanFormat$17:>

2708:
old  <	neg eax>
new  <	; BinaryAdd d Â£temporary1224 1>

2709:
old  <>
new  <	inc eax>

2710:
old  < scanFormat$18:>
new  <	mov [rbp + 153], eax>

2711:
old  <	; BinaryAdd d Â£temporary1195 1>
new  <>

2712:
old  <	inc eax>
new  < scanFormat$18:>

2713:
old  <	mov [rbp + 153], eax>
new  <	; Equal 324 percent 0>

2714:
old  <>
new  <	cmp dword [rbp + 49], 0>

2715:
old  < scanFormat$19:>
new  <	je scanFormat$324>

2716:
old  <	; Equal 325 percent 0>
new  <>

2717:
old  <	cmp dword [rbp + 49], 0>
new  < scanFormat$19:>

2718:
old  <	je scanFormat$325>
new  <	; BinarySubtract Â£temporary1226 d 1>

2719:
old  <>
new  <	mov eax, [rbp + 153]>

2720:
old  < scanFormat$20:>
new  <	dec eax>

2721:
old  <	; BinarySubtract Â£temporary1197 d 1>
new  <>

2722:
old  <	mov eax, [rbp + 153]>
new  < scanFormat$20:>

2723:
old  <	dec eax>
new  <	; Case 38 Â£temporary1226 104>

2724:
old  <>
new  <	cmp eax, 104>

2725:
old  < scanFormat$21:>
new  <	je scanFormat$38>

2726:
old  <	; Case 39 Â£temporary1197 104>
new  <>

2727:
old  <	cmp eax, 104>
new  < scanFormat$21:>

2728:
old  <	je scanFormat$39>
new  <	; Case 40 Â£temporary1226 108>

2729:
old  <>
new  <	cmp eax, 108>

2730:
old  < scanFormat$22:>
new  <	je scanFormat$40>

2731:
old  <	; Case 41 Â£temporary1197 108>
new  <>

2732:
old  <	cmp eax, 108>
new  < scanFormat$22:>

2733:
old  <	je scanFormat$41>
new  <	; Case 42 Â£temporary1226 76>

2734:
old  <>
new  <	cmp eax, 76>

2735:
old  < scanFormat$23:>
new  <	je scanFormat$42>

2736:
old  <	; Case 43 Â£temporary1197 76>
new  <>

2737:
old  <	cmp eax, 76>
new  < scanFormat$23:>

2738:
old  <	je scanFormat$43>
new  <	; Case 44 Â£temporary1226 42>

2739:
old  <>
new  <	cmp eax, 42>

2740:
old  < scanFormat$24:>
new  <	je scanFormat$44>

2741:
old  <	; Case 45 Â£temporary1197 42>
new  <>

2742:
old  <	cmp eax, 42>
new  < scanFormat$24:>

2743:
old  <	je scanFormat$45>
new  <	; Case 46 Â£temporary1226 99>

2744:
old  <>
new  <	cmp eax, 99>

2745:
old  < scanFormat$25:>
new  <	je scanFormat$46>

2746:
old  <	; Case 47 Â£temporary1197 99>
new  <>

2747:
old  <	cmp eax, 99>
new  < scanFormat$25:>

2748:
old  <	je scanFormat$47>
new  <	; Case 64 Â£temporary1226 115>

2749:
old  <>
new  <	cmp eax, 115>

2750:
old  < scanFormat$26:>
new  <	je scanFormat$64>

2751:
old  <	; Case 65 Â£temporary1197 115>
new  <>

2752:
old  <	cmp eax, 115>
new  < scanFormat$26:>

2753:
old  <	je scanFormat$65>
new  <	; Case 83 Â£temporary1226 100>

2754:
old  <>
new  <	cmp eax, 100>

2755:
old  < scanFormat$27:>
new  <	je scanFormat$83>

2756:
old  <	; Case 84 Â£temporary1197 100>
new  <>

2757:
old  <	cmp eax, 100>
new  < scanFormat$27:>

2758:
old  <	je scanFormat$84>
new  <	; Case 83 Â£temporary1226 105>

2759:
old  <>
new  <	cmp eax, 105>

2760:
old  < scanFormat$28:>
new  <	je scanFormat$83>

2761:
old  <	; Case 84 Â£temporary1197 105>
new  <>

2762:
old  <	cmp eax, 105>
new  < scanFormat$28:>

2763:
old  <	je scanFormat$84>
new  <	; Case 118 Â£temporary1226 111>

2764:
old  <>
new  <	cmp eax, 111>

2765:
old  < scanFormat$29:>
new  <	je scanFormat$118>

2766:
old  <	; Case 119 Â£temporary1197 111>
new  <>

2767:
old  <	cmp eax, 111>
new  < scanFormat$29:>

2768:
old  <	je scanFormat$119>
new  <	; Case 154 Â£temporary1226 120>

2769:
old  <>
new  <	cmp eax, 120>

2770:
old  < scanFormat$30:>
new  <	je scanFormat$154>

2771:
old  <	; Case 155 Â£temporary1197 120>
new  <>

2772:
old  <	cmp eax, 120>
new  < scanFormat$30:>

2773:
old  <	je scanFormat$155>
new  <	; Case 190 Â£temporary1226 117>

2774:
old  <>
new  <	cmp eax, 117>

2775:
old  < scanFormat$31:>
new  <	je scanFormat$190>

2776:
old  <	; Case 191 Â£temporary1197 117>
new  <>

2777:
old  <	cmp eax, 117>
new  < scanFormat$31:>

2778:
old  <	je scanFormat$191>
new  <	; Case 226 Â£temporary1226 103>

2779:
old  <>
new  <	cmp eax, 103>

2780:
old  < scanFormat$32:>
new  <	je scanFormat$226>

2781:
old  <	; Case 227 Â£temporary1197 103>
new  <>

2782:
old  <	cmp eax, 103>
new  < scanFormat$32:>

2783:
old  <	je scanFormat$227>
new  <	; Case 226 Â£temporary1226 102>

2784:
old  <>
new  <	cmp eax, 102>

2785:
old  < scanFormat$33:>
new  <	je scanFormat$226>

2786:
old  <	; Case 227 Â£temporary1197 102>
new  <>

2787:
old  <	cmp eax, 102>
new  < scanFormat$33:>

2788:
old  <	je scanFormat$227>
new  <	; Case 226 Â£temporary1226 101>

2789:
old  <>
new  <	cmp eax, 101>

2790:
old  < scanFormat$34:>
new  <	je scanFormat$226>

2791:
old  <	; Case 227 Â£temporary1197 101>
new  <>

2792:
old  <	cmp eax, 101>
new  < scanFormat$34:>

2793:
old  <	je scanFormat$227>
new  <	; Case 262 Â£temporary1226 91>

2794:
old  <>
new  <	cmp eax, 91>

2795:
old  < scanFormat$35:>
new  <	je scanFormat$262>

2796:
old  <	; Case 263 Â£temporary1197 91>
new  <>

2797:
old  <	cmp eax, 91>
new  < scanFormat$35:>

2798:
old  <	je scanFormat$263>
new  <	; Case 308 Â£temporary1226 110>

2799:
old  <>
new  <	cmp eax, 110>

2800:
old  < scanFormat$36:>
new  <	je scanFormat$308>

2801:
old  <	; Case 309 Â£temporary1197 110>
new  <>

2802:
old  <	cmp eax, 110>
new  < scanFormat$36:>

2803:
old  <	je scanFormat$309>
new  <	; CaseEnd Â£temporary1226>

2806:
old  <	; CaseEnd Â£temporary1197>
new  <	; Goto 317>

2807:
old  <>
new  <	jmp scanFormat$317>

2808:
old  < scanFormat$38:>
new  <>

2809:
old  <	; Goto 318>
new  < scanFormat$38:>

2810:
old  <	jmp scanFormat$318>
new  <	; Assign shortInt 1>

2811:
old  <>
new  <	mov dword [rbp + 53], 1>

2812:
old  < scanFormat$39:>
new  <>

2813:
old  <	; Assign shortInt 1>
new  < scanFormat$39:>

2814:
old  <	mov dword [rbp + 53], 1>
new  <	; Goto 330>

2815:
old  <>
new  <	jmp scanFormat$330>

2816:
old  < scanFormat$40:>
new  <>

2817:
old  <	; Goto 331>
new  < scanFormat$40:>

2818:
old  <	jmp scanFormat$331>
new  <	; Assign longIntOrDouble 1>

2819:
old  <>
new  <	mov dword [rbp + 57], 1>

2820:
old  < scanFormat$41:>
new  <>

2821:
old  <	; Assign longIntOrDouble 1>
new  < scanFormat$41:>

2822:
old  <	mov dword [rbp + 57], 1>
new  <	; Goto 330>

2823:
old  <>
new  <	jmp scanFormat$330>

2824:
old  < scanFormat$42:>
new  <>

2825:
old  <	; Goto 331>
new  < scanFormat$42:>

2826:
old  <	jmp scanFormat$331>
new  <	; Assign longDouble 1>

2827:
old  <>
new  <	mov dword [rbp + 61], 1>

2828:
old  < scanFormat$43:>
new  <>

2829:
old  <	; Assign longDouble 1>
new  < scanFormat$43:>

2830:
old  <	mov dword [rbp + 61], 1>
new  <	; Goto 330>

2831:
old  <>
new  <	jmp scanFormat$330>

2832:
old  < scanFormat$44:>
new  <>

2833:
old  <	; Goto 331>
new  < scanFormat$44:>

2834:
old  <	jmp scanFormat$331>
new  <	; Assign star 1>

2835:
old  <>
new  <	mov dword [rbp + 65], 1>

2836:
old  < scanFormat$45:>
new  <>

2837:
old  <	; Assign star 1>
new  < scanFormat$45:>

2838:
old  <	mov dword [rbp + 65], 1>
new  <	; Goto 330>

2839:
old  <>
new  <	jmp scanFormat$330>

2840:
old  < scanFormat$46:>
new  <>

2841:
old  <	; Goto 331>
new  < scanFormat$46:>

2842:
old  <	jmp scanFormat$331>
new  <	; PreCall 157 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2845:
old  <	; PreCall 157 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Call scanChar 157 0>

2846:
old  <>
new  <	mov qword [rbp + 157], scanFormat$48>

2847:
old  < scanFormat$48:>
new  <	mov [rbp + 165], rbp>

2848:
old  <	; Call scanChar 157 0>
new  <	add rbp, 157>

2849:
old  <	mov qword [rbp + 157], scanFormat$49>
new  <	jmp scanChar>

2850:
old  <	mov [rbp + 165], rbp>
new  <>

2851:
old  <	add rbp, 157>
new  < scanFormat$48:>

2852:
old  <	jmp scanChar>
new  <	; PostCall 157>

2855:
old  <	; PostCall 157>
new  <	; GetReturnValue Â£temporary1227>

2858:
old  <	; GetReturnValue Â£temporary1198>
new  <	; Assign charValue Â£temporary1227>

2859:
old  <>
new  <	mov [rbp + 157], bl>

2860:
old  < scanFormat$51:>
new  <>

2861:
old  <	; Assign charValue Â£temporary1198>
new  < scanFormat$51:>

2862:
old  <	mov [rbp + 157], bl>
new  <	; NotEqual 59 star 0>

2863:
old  <>
new  <	cmp dword [rbp + 65], 0>

2864:
old  < scanFormat$52:>
new  <	jne scanFormat$59>

2865:
old  <	; NotEqual 60 star 0>
new  <>

2866:
old  <	cmp dword [rbp + 65], 0>
new  < scanFormat$52:>

2867:
old  <	jne scanFormat$60>
new  <	; BinaryAdd arg_list arg_list 8>

2868:
old  <>
new  <	add qword [rbp + 32], 8>

2869:
old  < scanFormat$53:>
new  <>

2870:
old  <	; BinaryAdd arg_list arg_list 8>
new  < scanFormat$53:>

2871:
old  <	add qword [rbp + 32], 8>
new  <	; BinarySubtract Â£temporary1232 arg_list 8>

2872:
old  <>
new  <	mov rsi, [rbp + 32]>

2873:
old  < scanFormat$54:>
new  <	sub rsi, 8>

2874:
old  <	; BinarySubtract Â£temporary1203 arg_list 8>
new  <>

2875:
old  <	mov rsi, [rbp + 32]>
new  < scanFormat$54:>

2876:
old  <	sub rsi, 8>
new  <	; IntegralToIntegral Â£temporary1234 Â£temporary1232>

2879:
old  <	; IntegralToIntegral Â£temporary1205 Â£temporary1203>
new  <	; Dereference Â£temporary1235 -> Â£temporary1234 Â£temporary1234 0>

2882:
old  <	; Dereference Â£temporary1206 -> Â£temporary1205 Â£temporary1205 0>
new  <	; Assign charPtr Â£temporary1235 -> Â£temporary1234>

2883:
old  <>
new  <	mov rax, [rsi]>

2884:
old  < scanFormat$57:>
new  <	mov [rbp + 41], rax>

2885:
old  <	; Assign charPtr Â£temporary1206 -> Â£temporary1205>
new  <>

2886:
old  <	mov rax, [rsi]>
new  < scanFormat$57:>

2887:
old  <	mov [rbp + 41], rax>
new  <	; Dereference Â£temporary1236 -> charPtr charPtr 0>

2888:
old  <>
new  <	mov rsi, [rbp + 41]>

2889:
old  < scanFormat$58:>
new  <>

2890:
old  <	; Dereference Â£temporary1207 -> charPtr charPtr 0>
new  < scanFormat$58:>

2891:
old  <	mov rsi, [rbp + 41]>
new  <	; Assign Â£temporary1236 -> charPtr charValue>

2892:
old  <>
new  <	mov al, [rbp + 157]>

2893:
old  < scanFormat$59:>
new  <	mov [rsi], al>

2894:
old  <	; Assign Â£temporary1207 -> charPtr charValue>
new  <>

2895:
old  <	mov al, [rbp + 157]>
new  < scanFormat$59:>

2896:
old  <	mov [rsi], al>
new  <	; Assign percent 0>

2897:
old  <>
new  <	mov dword [rbp + 49], 0>

2898:
old  < scanFormat$60:>
new  <>

2899:
old  <	; Assign percent 0>
new  < scanFormat$60:>

2900:
old  <	mov dword [rbp + 49], 0>
new  <	; IntegralToIntegral Â£temporary1237 charValue>

2901:
old  <>
new  <	mov al, [rbp + 157]>

2902:
old  < scanFormat$61:>
new  <	and eax, 255>

2903:
old  <	; IntegralToIntegral Â£temporary1208 charValue>
new  <	cmp al, 0>

2904:
old  <	mov al, [rbp + 157]>
new  <	jge scanFormat$61>

2905:
old  <	and eax, 255>
new  <	neg al>

2906:
old  <	cmp al, 0>
new  <	neg eax>

2907:
old  <	jge scanFormat$62>
new  <>

2908:
old  <	neg al>
new  < scanFormat$61:>

2909:
old  <	neg eax>
new  <	; Equal 330 Â£temporary1237 -1>

2910:
old  <>
new  <	cmp eax, -1>

2911:
old  < scanFormat$62:>
new  <	je scanFormat$330>

2912:
old  <	; Equal 331 Â£temporary1208 -1>
new  <>

2913:
old  <	cmp eax, -1>
new  < scanFormat$62:>

2914:
old  <	je scanFormat$331>
new  <	; BinaryAdd g_inCount g_inCount 1>

2915:
old  <>
new  <	inc dword [g_inCount]>

2916:
old  < scanFormat$63:>
new  <>

2917:
old  <	; BinaryAdd g_inCount g_inCount 1>
new  < scanFormat$63:>

2918:
old  <	inc dword [g_inCount]>
new  <	; Goto 330>

2919:
old  <>
new  <	jmp scanFormat$330>

2920:
old  < scanFormat$64:>
new  <>

2921:
old  <	; Goto 331>
new  < scanFormat$64:>

2922:
old  <	jmp scanFormat$331>
new  <	; NotEqual 76 star 0>

2923:
old  <>
new  <	cmp dword [rbp + 65], 0>

2924:
old  < scanFormat$65:>
new  <	jne scanFormat$76>

2925:
old  <	; NotEqual 77 star 0>
new  <>

2926:
old  <	cmp dword [rbp + 65], 0>
new  < scanFormat$65:>

2927:
old  <	jne scanFormat$77>
new  <	; BinaryAdd arg_list arg_list 8>

2928:
old  <>
new  <	add qword [rbp + 32], 8>

2929:
old  < scanFormat$66:>
new  <>

2930:
old  <	; BinaryAdd arg_list arg_list 8>
new  < scanFormat$66:>

2931:
old  <	add qword [rbp + 32], 8>
new  <	; BinarySubtract Â£temporary1244 arg_list 8>

2932:
old  <>
new  <	mov rsi, [rbp + 32]>

2933:
old  < scanFormat$67:>
new  <	sub rsi, 8>

2934:
old  <	; BinarySubtract Â£temporary1215 arg_list 8>
new  <>

2935:
old  <	mov rsi, [rbp + 32]>
new  < scanFormat$67:>

2936:
old  <	sub rsi, 8>
new  <	; IntegralToIntegral Â£temporary1246 Â£temporary1244>

2939:
old  <	; IntegralToIntegral Â£temporary1217 Â£temporary1215>
new  <	; Dereference Â£temporary1247 -> Â£temporary1246 Â£temporary1246 0>

2942:
old  <	; Dereference Â£temporary1218 -> Â£temporary1217 Â£temporary1217 0>
new  <	; Assign charPtr Â£temporary1247 -> Â£temporary1246>

2943:
old  <>
new  <	mov rax, [rsi]>

2944:
old  < scanFormat$70:>
new  <	mov [rbp + 41], rax>

2945:
old  <	; Assign charPtr Â£temporary1218 -> Â£temporary1217>
new  <>

2946:
old  <	mov rax, [rsi]>
new  < scanFormat$70:>

2947:
old  <	mov [rbp + 41], rax>
new  <	; PreCall 157 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2950:
old  <	; PreCall 157 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter pointer charPtr 181>

2951:
old  <>
new  <	mov rax, [rbp + 41]>

2952:
old  < scanFormat$72:>
new  <	mov [rbp + 181], rax>

2953:
old  <	; Parameter pointer charPtr 181>
new  <>

2954:
old  <	mov rax, [rbp + 41]>
new  < scanFormat$72:>

2955:
old  <	mov [rbp + 181], rax>
new  <	; Parameter signedint 0 189>

2956:
old  <>
new  <	mov dword [rbp + 189], 0>

2957:
old  < scanFormat$73:>
new  <>

2958:
old  <	; Parameter signedint 0 189>
new  < scanFormat$73:>

2959:
old  <	mov dword [rbp + 189], 0>
new  <	; Call scanString 157 0>

2960:
old  <>
new  <	mov qword [rbp + 157], scanFormat$74>

2961:
old  < scanFormat$74:>
new  <	mov [rbp + 165], rbp>

2962:
old  <	; Call scanString 157 0>
new  <	add rbp, 157>

2963:
old  <	mov qword [rbp + 157], scanFormat$75>
new  <	jmp scanString>

2964:
old  <	mov [rbp + 165], rbp>
new  <>

2965:
old  <	add rbp, 157>
new  < scanFormat$74:>

2966:
old  <	jmp scanString>
new  <	; PostCall 157>

2969:
old  <	; PostCall 157>
new  <	; Goto 81>

2970:
old  <>
new  <	jmp scanFormat$81>

2971:
old  < scanFormat$76:>
new  <>

2972:
old  <	; Goto 82>
new  < scanFormat$76:>

2973:
old  <	jmp scanFormat$82>
new  <	; PreCall 157 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2976:
old  <	; PreCall 157 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter pointer 0 181>

2977:
old  <>
new  <	mov qword [rbp + 181], 0>

2978:
old  < scanFormat$78:>
new  <>

2979:
old  <	; Parameter pointer 0 181>
new  < scanFormat$78:>

2980:
old  <	mov qword [rbp + 181], 0>
new  <	; Parameter signedint 0 189>

2981:
old  <>
new  <	mov dword [rbp + 189], 0>

2982:
old  < scanFormat$79:>
new  <>

2983:
old  <	; Parameter signedint 0 189>
new  < scanFormat$79:>

2984:
old  <	mov dword [rbp + 189], 0>
new  <	; Call scanString 157 0>

2985:
old  <>
new  <	mov qword [rbp + 157], scanFormat$80>

2986:
old  < scanFormat$80:>
new  <	mov [rbp + 165], rbp>

2987:
old  <	; Call scanString 157 0>
new  <	add rbp, 157>

2988:
old  <	mov qword [rbp + 157], scanFormat$81>
new  <	jmp scanString>

2989:
old  <	mov [rbp + 165], rbp>
new  <>

2990:
old  <	add rbp, 157>
new  < scanFormat$80:>

2991:
old  <	jmp scanString>
new  <	; PostCall 157>

2994:
old  <	; PostCall 157>
new  <	; Assign percent 0>

2995:
old  <>
new  <	mov dword [rbp + 49], 0>

2996:
old  < scanFormat$82:>
new  <>

2997:
old  <	; Assign percent 0>
new  < scanFormat$82:>

2998:
old  <	mov dword [rbp + 49], 0>
new  <	; Goto 330>

2999:
old  <>
new  <	jmp scanFormat$330>

3000:
old  < scanFormat$83:>
new  <>

3001:
old  <	; Goto 331>
new  < scanFormat$83:>

3002:
old  <	jmp scanFormat$331>
new  <	; PreCall 157 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3005:
old  <	; PreCall 157 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Call scanLongInt 157 0>

3006:
old  <>
new  <	mov qword [rbp + 157], scanFormat$85>

3007:
old  < scanFormat$85:>
new  <	mov [rbp + 165], rbp>

3008:
old  <	; Call scanLongInt 157 0>
new  <	add rbp, 157>

3009:
old  <	mov qword [rbp + 157], scanFormat$86>
new  <	jmp scanLongInt>

3010:
old  <	mov [rbp + 165], rbp>
new  <>

3011:
old  <	add rbp, 157>
new  < scanFormat$85:>

3012:
old  <	jmp scanLongInt>
new  <	; PostCall 157>

3015:
old  <	; PostCall 157>
new  <	; GetReturnValue Â£temporary1250>

3018:
old  <	; GetReturnValue Â£temporary1221>
new  <	; Assign longValue Â£temporary1250>

3019:
old  <>
new  <	mov [rbp + 69], rbx>

3020:
old  < scanFormat$88:>
new  <>

3021:
old  <	; Assign longValue Â£temporary1221>
new  < scanFormat$88:>

3022:
old  <	mov [rbp + 69], rbx>
new  <	; NotEqual 116 star 0>

3023:
old  <>
new  <	cmp dword [rbp + 65], 0>

3024:
old  < scanFormat$89:>
new  <	jne scanFormat$116>

3025:
old  <	; NotEqual 117 star 0>
new  <>

3026:
old  <	cmp dword [rbp + 65], 0>
new  < scanFormat$89:>

3027:
old  <	jne scanFormat$117>
new  <	; Equal 99 shortInt 0>

3028:
old  <>
new  <	cmp dword [rbp + 53], 0>

3029:
old  < scanFormat$90:>
new  <	je scanFormat$99>

3030:
old  <	; Equal 100 shortInt 0>
new  <>

3031:
old  <	cmp dword [rbp + 53], 0>
new  < scanFormat$90:>

3032:
old  <	je scanFormat$100>
new  <	; BinaryAdd arg_list arg_list 8>

3033:
old  <>
new  <	add qword [rbp + 32], 8>

3034:
old  < scanFormat$91:>
new  <>

3035:
old  <	; BinaryAdd arg_list arg_list 8>
new  < scanFormat$91:>

3036:
old  <	add qword [rbp + 32], 8>
new  <	; BinarySubtract Â£temporary1255 arg_list 8>

3037:
old  <>
new  <	mov rsi, [rbp + 32]>

3038:
old  < scanFormat$92:>
new  <	sub rsi, 8>

3039:
old  <	; BinarySubtract Â£temporary1226 arg_list 8>
new  <>

3040:
old  <	mov rsi, [rbp + 32]>
new  < scanFormat$92:>

3041:
old  <	sub rsi, 8>
new  <	; IntegralToIntegral Â£temporary1257 Â£temporary1255>

3044:
old  <	; IntegralToIntegral Â£temporary1228 Â£temporary1226>
new  <	; Dereference Â£temporary1258 -> Â£temporary1257 Â£temporary1257 0>

3047:
old  <	; Dereference Â£temporary1229 -> Â£temporary1228 Â£temporary1228 0>
new  <	; Assign shortPtr Â£temporary1258 -> Â£temporary1257>

3048:
old  <>
new  <	mov rax, [rsi]>

3049:
old  < scanFormat$95:>
new  <	mov [rbp + 85], rax>

3050:
old  <	; Assign shortPtr Â£temporary1229 -> Â£temporary1228>
new  <>

3051:
old  <	mov rax, [rsi]>
new  < scanFormat$95:>

3052:
old  <	mov [rbp + 85], rax>
new  <	; Dereference Â£temporary1259 -> shortPtr shortPtr 0>

3053:
old  <>
new  <	mov rsi, [rbp + 85]>

3054:
old  < scanFormat$96:>
new  <>

3055:
old  <	; Dereference Â£temporary1230 -> shortPtr shortPtr 0>
new  < scanFormat$96:>

3056:
old  <	mov rsi, [rbp + 85]>
new  <	; IntegralToIntegral Â£temporary1260 longValue>

3057:
old  <>
new  <	mov rax, [rbp + 69]>

3058:
old  < scanFormat$97:>
new  <	cmp rax, 0>

3059:
old  <	; IntegralToIntegral Â£temporary1231 longValue>
new  <	jge scanFormat$97>

3060:
old  <	mov rax, [rbp + 69]>
new  <	neg rax>

3061:
old  <	cmp rax, 0>
new  <	neg ax>

3062:
old  <	jge scanFormat$98>
new  <>

3063:
old  <	neg rax>
new  < scanFormat$97:>

3064:
old  <	neg ax>
new  <	; Assign Â£temporary1259 -> shortPtr Â£temporary1260>

3065:
old  <>
new  <	mov [rsi], ax>

3066:
old  < scanFormat$98:>
new  <>

3067:
old  <	; Assign Â£temporary1230 -> shortPtr Â£temporary1231>
new  < scanFormat$98:>

3068:
old  <	mov [rsi], ax>
new  <	; Goto 116>

3069:
old  <>
new  <	jmp scanFormat$116>

3070:
old  < scanFormat$99:>
new  <>

3071:
old  <	; Goto 117>
new  < scanFormat$99:>

3072:
old  <	jmp scanFormat$117>
new  <	; NotEqual 109 longIntOrDouble 0>

3073:
old  <>
new  <	cmp dword [rbp + 57], 0>

3074:
old  < scanFormat$100:>
new  <	jne scanFormat$109>

3075:
old  <	; NotEqual 110 longIntOrDouble 0>
new  <>

3076:
old  <	cmp dword [rbp + 57], 0>
new  < scanFormat$100:>

3077:
old  <	jne scanFormat$110>
new  <	; BinaryAdd arg_list arg_list 8>

3078:
old  <>
new  <	add qword [rbp + 32], 8>

3079:
old  < scanFormat$101:>
new  <>

3080:
old  <	; BinaryAdd arg_list arg_list 8>
new  < scanFormat$101:>

3081:
old  <	add qword [rbp + 32], 8>
new  <	; BinarySubtract Â£temporary1265 arg_list 8>

3082:
old  <>
new  <	mov rsi, [rbp + 32]>

3083:
old  < scanFormat$102:>
new  <	sub rsi, 8>

3084:
old  <	; BinarySubtract Â£temporary1236 arg_list 8>
new  <>

3085:
old  <	mov rsi, [rbp + 32]>
new  < scanFormat$102:>

3086:
old  <	sub rsi, 8>
new  <	; IntegralToIntegral Â£temporary1267 Â£temporary1265>

3089:
old  <	; IntegralToIntegral Â£temporary1238 Â£temporary1236>
new  <	; Dereference Â£temporary1268 -> Â£temporary1267 Â£temporary1267 0>

3092:
old  <	; Dereference Â£temporary1239 -> Â£temporary1238 Â£temporary1238 0>
new  <	; Assign intPtr Â£temporary1268 -> Â£temporary1267>

3093:
old  <>
new  <	mov rax, [rsi]>

3094:
old  < scanFormat$105:>
new  <	mov [rbp + 97], rax>

3095:
old  <	; Assign intPtr Â£temporary1239 -> Â£temporary1238>
new  <>

3096:
old  <	mov rax, [rsi]>
new  < scanFormat$105:>

3097:
old  <	mov [rbp + 97], rax>
new  <	; Dereference Â£temporary1269 -> intPtr intPtr 0>

3098:
old  <>
new  <	mov rsi, [rbp + 97]>

3099:
old  < scanFormat$106:>
new  <>

3100:
old  <	; Dereference Â£temporary1240 -> intPtr intPtr 0>
new  < scanFormat$106:>

3101:
old  <	mov rsi, [rbp + 97]>
new  <	; IntegralToIntegral Â£temporary1270 longValue>

3102:
old  <>
new  <	mov rax, [rbp + 69]>

3103:
old  < scanFormat$107:>
new  <	cmp rax, 0>

3104:
old  <	; IntegralToIntegral Â£temporary1241 longValue>
new  <	jge scanFormat$107>

3105:
old  <	mov rax, [rbp + 69]>
new  <	neg rax>

3106:
old  <	cmp rax, 0>
new  <	neg eax>

3107:
old  <	jge scanFormat$108>
new  <>

3108:
old  <	neg rax>
new  < scanFormat$107:>

3109:
old  <	neg eax>
new  <	; Assign Â£temporary1269 -> intPtr Â£temporary1270>

3110:
old  <>
new  <	mov [rsi], eax>

3111:
old  < scanFormat$108:>
new  <>

3112:
old  <	; Assign Â£temporary1240 -> intPtr Â£temporary1241>
new  < scanFormat$108:>

3113:
old  <	mov [rsi], eax>
new  <	; Goto 116>

3114:
old  <>
new  <	jmp scanFormat$116>

3115:
old  < scanFormat$109:>
new  <>

3116:
old  <	; Goto 117>
new  < scanFormat$109:>

3117:
old  <	jmp scanFormat$117>
new  <	; BinaryAdd arg_list arg_list 8>

3118:
old  <>
new  <	add qword [rbp + 32], 8>

3119:
old  < scanFormat$110:>
new  <>

3120:
old  <	; BinaryAdd arg_list arg_list 8>
new  < scanFormat$110:>

3121:
old  <	add qword [rbp + 32], 8>
new  <	; BinarySubtract Â£temporary1273 arg_list 8>

3122:
old  <>
new  <	mov rsi, [rbp + 32]>

3123:
old  < scanFormat$111:>
new  <	sub rsi, 8>

3124:
old  <	; BinarySubtract Â£temporary1244 arg_list 8>
new  <>

3125:
old  <	mov rsi, [rbp + 32]>
new  < scanFormat$111:>

3126:
old  <	sub rsi, 8>
new  <	; IntegralToIntegral Â£temporary1275 Â£temporary1273>

3129:
old  <	; IntegralToIntegral Â£temporary1246 Â£temporary1244>
new  <	; Dereference Â£temporary1276 -> Â£temporary1275 Â£temporary1275 0>

3132:
old  <	; Dereference Â£temporary1247 -> Â£temporary1246 Â£temporary1246 0>
new  <	; Assign longPtr Â£temporary1276 -> Â£temporary1275>

3133:
old  <>
new  <	mov rax, [rsi]>

3134:
old  < scanFormat$114:>
new  <	mov [rbp + 77], rax>

3135:
old  <	; Assign longPtr Â£temporary1247 -> Â£temporary1246>
new  <>

3136:
old  <	mov rax, [rsi]>
new  < scanFormat$114:>

3137:
old  <	mov [rbp + 77], rax>
new  <	; Dereference Â£temporary1277 -> longPtr longPtr 0>

3138:
old  <>
new  <	mov rsi, [rbp + 77]>

3139:
old  < scanFormat$115:>
new  <>

3140:
old  <	; Dereference Â£temporary1248 -> longPtr longPtr 0>
new  < scanFormat$115:>

3141:
old  <	mov rsi, [rbp + 77]>
new  <	; Assign Â£temporary1277 -> longPtr longValue>

3142:
old  <>
new  <	mov rax, [rbp + 69]>

3143:
old  < scanFormat$116:>
new  <	mov [rsi], rax>

3144:
old  <	; Assign Â£temporary1248 -> longPtr longValue>
new  <>

3145:
old  <	mov rax, [rbp + 69]>
new  < scanFormat$116:>

3146:
old  <	mov [rsi], rax>
new  <	; Assign percent 0>

3147:
old  <>
new  <	mov dword [rbp + 49], 0>

3148:
old  < scanFormat$117:>
new  <>

3149:
old  <	; Assign percent 0>
new  < scanFormat$117:>

3150:
old  <	mov dword [rbp + 49], 0>
new  <	; Goto 330>

3151:
old  <>
new  <	jmp scanFormat$330>

3152:
old  < scanFormat$118:>
new  <>

3153:
old  <	; Goto 331>
new  < scanFormat$118:>

3154:
old  <	jmp scanFormat$331>
new  <	; PreCall 157 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3157:
old  <	; PreCall 157 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter unsignedlongint 8 181>

3158:
old  <>
new  <	mov qword [rbp + 181], 8>

3159:
old  < scanFormat$120:>
new  <>

3160:
old  <	; Parameter unsignedlongint 8 181>
new  < scanFormat$120:>

3161:
old  <	mov qword [rbp + 181], 8>
new  <	; Call scanUnsignedLongInt 157 0>

3162:
old  <>
new  <	mov qword [rbp + 157], scanFormat$121>

3163:
old  < scanFormat$121:>
new  <	mov [rbp + 165], rbp>

3164:
old  <	; Call scanUnsignedLongInt 157 0>
new  <	add rbp, 157>

3165:
old  <	mov qword [rbp + 157], scanFormat$122>
new  <	jmp scanUnsignedLongInt>

3166:
old  <	mov [rbp + 165], rbp>
new  <>

3167:
old  <	add rbp, 157>
new  < scanFormat$121:>

3168:
old  <	jmp scanUnsignedLongInt>
new  <	; PostCall 157>

3171:
old  <	; PostCall 157>
new  <	; GetReturnValue Â£temporary1279>

3174:
old  <	; GetReturnValue Â£temporary1250>
new  <	; Assign unsignedLongValue Â£temporary1279>

3175:
old  <>
new  <	mov [rbp + 113], rbx>

3176:
old  < scanFormat$124:>
new  <>

3177:
old  <	; Assign unsignedLongValue Â£temporary1250>
new  < scanFormat$124:>

3178:
old  <	mov [rbp + 113], rbx>
new  <	; NotEqual 152 star 0>

3179:
old  <>
new  <	cmp dword [rbp + 65], 0>

3180:
old  < scanFormat$125:>
new  <	jne scanFormat$152>

3181:
old  <	; NotEqual 153 star 0>
new  <>

3182:
old  <	cmp dword [rbp + 65], 0>
new  < scanFormat$125:>

3183:
old  <	jne scanFormat$153>
new  <	; Equal 135 shortInt 0>

3184:
old  <>
new  <	cmp dword [rbp + 53], 0>

3185:
old  < scanFormat$126:>
new  <	je scanFormat$135>

3186:
old  <	; Equal 136 shortInt 0>
new  <>

3187:
old  <	cmp dword [rbp + 53], 0>
new  < scanFormat$126:>

3188:
old  <	je scanFormat$136>
new  <	; BinaryAdd arg_list arg_list 8>

3189:
old  <>
new  <	add qword [rbp + 32], 8>

3190:
old  < scanFormat$127:>
new  <>

3191:
old  <	; BinaryAdd arg_list arg_list 8>
new  < scanFormat$127:>

3192:
old  <	add qword [rbp + 32], 8>
new  <	; BinarySubtract Â£temporary1284 arg_list 8>

3193:
old  <>
new  <	mov rsi, [rbp + 32]>

3194:
old  < scanFormat$128:>
new  <	sub rsi, 8>

3195:
old  <	; BinarySubtract Â£temporary1255 arg_list 8>
new  <>

3196:
old  <	mov rsi, [rbp + 32]>
new  < scanFormat$128:>

3197:
old  <	sub rsi, 8>
new  <	; IntegralToIntegral Â£temporary1286 Â£temporary1284>

3200:
old  <	; IntegralToIntegral Â£temporary1257 Â£temporary1255>
new  <	; Dereference Â£temporary1287 -> Â£temporary1286 Â£temporary1286 0>

3203:
old  <	; Dereference Â£temporary1258 -> Â£temporary1257 Â£temporary1257 0>
new  <	; Assign unsignedShortPtr Â£temporary1287 -> Â£temporary1286>

3204:
old  <>
new  <	mov rax, [rsi]>

3205:
old  < scanFormat$131:>
new  <	mov [rbp + 129], rax>

3206:
old  <	; Assign unsignedShortPtr Â£temporary1258 -> Â£temporary1257>
new  <>

3207:
old  <	mov rax, [rsi]>
new  < scanFormat$131:>

3208:
old  <	mov [rbp + 129], rax>
new  <	; Dereference Â£temporary1288 -> unsignedShortPtr unsignedShortPtr 0>

3209:
old  <>
new  <	mov rsi, [rbp + 129]>

3210:
old  < scanFormat$132:>
new  <>

3211:
old  <	; Dereference Â£temporary1259 -> unsignedShortPtr unsignedShortPtr 0>
new  < scanFormat$132:>

3212:
old  <	mov rsi, [rbp + 129]>
new  <	; IntegralToIntegral Â£temporary1289 unsignedLongValue>

3213:
old  <>
new  <	mov rax, [rbp + 113]>

3214:
old  < scanFormat$133:>
new  <>

3215:
old  <	; IntegralToIntegral Â£temporary1260 unsignedLongValue>
new  < scanFormat$133:>

3216:
old  <	mov rax, [rbp + 113]>
new  <	; Assign Â£temporary1288 -> unsignedShortPtr Â£temporary1289>

3217:
old  <>
new  <	mov [rsi], ax>

3218:
old  < scanFormat$134:>
new  <>

3219:
old  <	; Assign Â£temporary1259 -> unsignedShortPtr Â£temporary1260>
new  < scanFormat$134:>

3220:
old  <	mov [rsi], ax>
new  <	; Goto 152>

3221:
old  <>
new  <	jmp scanFormat$152>

3222:
old  < scanFormat$135:>
new  <>

3223:
old  <	; Goto 153>
new  < scanFormat$135:>

3224:
old  <	jmp scanFormat$153>
new  <	; NotEqual 145 longIntOrDouble 0>

3225:
old  <>
new  <	cmp dword [rbp + 57], 0>

3226:
old  < scanFormat$136:>
new  <	jne scanFormat$145>

3227:
old  <	; NotEqual 146 longIntOrDouble 0>
new  <>

3228:
old  <	cmp dword [rbp + 57], 0>
new  < scanFormat$136:>

3229:
old  <	jne scanFormat$146>
new  <	; BinaryAdd arg_list arg_list 8>

3230:
old  <>
new  <	add qword [rbp + 32], 8>

3231:
old  < scanFormat$137:>
new  <>

3232:
old  <	; BinaryAdd arg_list arg_list 8>
new  < scanFormat$137:>

3233:
old  <	add qword [rbp + 32], 8>
new  <	; BinarySubtract Â£temporary1294 arg_list 8>

3234:
old  <>
new  <	mov rsi, [rbp + 32]>

3235:
old  < scanFormat$138:>
new  <	sub rsi, 8>

3236:
old  <	; BinarySubtract Â£temporary1265 arg_list 8>
new  <>

3237:
old  <	mov rsi, [rbp + 32]>
new  < scanFormat$138:>

3238:
old  <	sub rsi, 8>
new  <	; IntegralToIntegral Â£temporary1296 Â£temporary1294>

3241:
old  <	; IntegralToIntegral Â£temporary1267 Â£temporary1265>
new  <	; Dereference Â£temporary1297 -> Â£temporary1296 Â£temporary1296 0>

3244:
old  <	; Dereference Â£temporary1268 -> Â£temporary1267 Â£temporary1267 0>
new  <	; Assign unsignedIntPtr Â£temporary1297 -> Â£temporary1296>

3245:
old  <>
new  <	mov rax, [rsi]>

3246:
old  < scanFormat$141:>
new  <	mov [rbp + 137], rax>

3247:
old  <	; Assign unsignedIntPtr Â£temporary1268 -> Â£temporary1267>
new  <>

3248:
old  <	mov rax, [rsi]>
new  < scanFormat$141:>

3249:
old  <	mov [rbp + 137], rax>
new  <	; Dereference Â£temporary1298 -> unsignedIntPtr unsignedIntPtr 0>

3250:
old  <>
new  <	mov rsi, [rbp + 137]>

3251:
old  < scanFormat$142:>
new  <>

3252:
old  <	; Dereference Â£temporary1269 -> unsignedIntPtr unsignedIntPtr 0>
new  < scanFormat$142:>

3253:
old  <	mov rsi, [rbp + 137]>
new  <	; IntegralToIntegral Â£temporary1299 unsignedLongValue>

3254:
old  <>
new  <	mov rax, [rbp + 113]>

3255:
old  < scanFormat$143:>
new  <>

3256:
old  <	; IntegralToIntegral Â£temporary1270 unsignedLongValue>
new  < scanFormat$143:>

3257:
old  <	mov rax, [rbp + 113]>
new  <	; Assign Â£temporary1298 -> unsignedIntPtr Â£temporary1299>

3258:
old  <>
new  <	mov [rsi], eax>

3259:
old  < scanFormat$144:>
new  <>

3260:
old  <	; Assign Â£temporary1269 -> unsignedIntPtr Â£temporary1270>
new  < scanFormat$144:>

3261:
old  <	mov [rsi], eax>
new  <	; Goto 152>

3262:
old  <>
new  <	jmp scanFormat$152>

3263:
old  < scanFormat$145:>
new  <>

3264:
old  <	; Goto 153>
new  < scanFormat$145:>

3265:
old  <	jmp scanFormat$153>
new  <	; BinaryAdd arg_list arg_list 8>

3266:
old  <>
new  <	add qword [rbp + 32], 8>

3267:
old  < scanFormat$146:>
new  <>

3268:
old  <	; BinaryAdd arg_list arg_list 8>
new  < scanFormat$146:>

3269:
old  <	add qword [rbp + 32], 8>
new  <	; BinarySubtract Â£temporary1302 arg_list 8>

3270:
old  <>
new  <	mov rsi, [rbp + 32]>

3271:
old  < scanFormat$147:>
new  <	sub rsi, 8>

3272:
old  <	; BinarySubtract Â£temporary1273 arg_list 8>
new  <>

3273:
old  <	mov rsi, [rbp + 32]>
new  < scanFormat$147:>

3274:
old  <	sub rsi, 8>
new  <	; IntegralToIntegral Â£temporary1304 Â£temporary1302>

3277:
old  <	; IntegralToIntegral Â£temporary1275 Â£temporary1273>
new  <	; Dereference Â£temporary1305 -> Â£temporary1304 Â£temporary1304 0>

3280:
old  <	; Dereference Â£temporary1276 -> Â£temporary1275 Â£temporary1275 0>
new  <	; Assign unsignedLongPtr Â£temporary1305 -> Â£temporary1304>

3281:
old  <>
new  <	mov rax, [rsi]>

3282:
old  < scanFormat$150:>
new  <	mov [rbp + 121], rax>

3283:
old  <	; Assign unsignedLongPtr Â£temporary1276 -> Â£temporary1275>
new  <>

3284:
old  <	mov rax, [rsi]>
new  < scanFormat$150:>

3285:
old  <	mov [rbp + 121], rax>
new  <	; Dereference Â£temporary1306 -> unsignedLongPtr unsignedLongPtr 0>

3286:
old  <>
new  <	mov rsi, [rbp + 121]>

3287:
old  < scanFormat$151:>
new  <>

3288:
old  <	; Dereference Â£temporary1277 -> unsignedLongPtr unsignedLongPtr 0>
new  < scanFormat$151:>

3289:
old  <	mov rsi, [rbp + 121]>
new  <	; Assign Â£temporary1306 -> unsignedLongPtr unsignedLongValue>

3290:
old  <>
new  <	mov rax, [rbp + 113]>

3291:
old  < scanFormat$152:>
new  <	mov [rsi], rax>

3292:
old  <	; Assign Â£temporary1277 -> unsignedLongPtr unsignedLongValue>
new  <>

3293:
old  <	mov rax, [rbp + 113]>
new  < scanFormat$152:>

3294:
old  <	mov [rsi], rax>
new  <	; Assign percent 0>

3295:
old  <>
new  <	mov dword [rbp + 49], 0>

3296:
old  < scanFormat$153:>
new  <>

3297:
old  <	; Assign percent 0>
new  < scanFormat$153:>

3298:
old  <	mov dword [rbp + 49], 0>
new  <	; Goto 330>

3299:
old  <>
new  <	jmp scanFormat$330>

3300:
old  < scanFormat$154:>
new  <>

3301:
old  <	; Goto 331>
new  < scanFormat$154:>

3302:
old  <	jmp scanFormat$331>
new  <	; PreCall 157 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3305:
old  <	; PreCall 157 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter unsignedlongint 16 181>

3306:
old  <>
new  <	mov qword [rbp + 181], 16>

3307:
old  < scanFormat$156:>
new  <>

3308:
old  <	; Parameter unsignedlongint 16 181>
new  < scanFormat$156:>

3309:
old  <	mov qword [rbp + 181], 16>
new  <	; Call scanUnsignedLongInt 157 0>

3310:
old  <>
new  <	mov qword [rbp + 157], scanFormat$157>

3311:
old  < scanFormat$157:>
new  <	mov [rbp + 165], rbp>

3312:
old  <	; Call scanUnsignedLongInt 157 0>
new  <	add rbp, 157>

3313:
old  <	mov qword [rbp + 157], scanFormat$158>
new  <	jmp scanUnsignedLongInt>

3314:
old  <	mov [rbp + 165], rbp>
new  <>

3315:
old  <	add rbp, 157>
new  < scanFormat$157:>

3316:
old  <	jmp scanUnsignedLongInt>
new  <	; PostCall 157>

3319:
old  <	; PostCall 157>
new  <	; GetReturnValue Â£temporary1308>

3322:
old  <	; GetReturnValue Â£temporary1279>
new  <	; Assign unsignedLongValue Â£temporary1308>

3323:
old  <>
new  <	mov [rbp + 113], rbx>

3324:
old  < scanFormat$160:>
new  <>

3325:
old  <	; Assign unsignedLongValue Â£temporary1279>
new  < scanFormat$160:>

3326:
old  <	mov [rbp + 113], rbx>
new  <	; NotEqual 188 star 0>

3327:
old  <>
new  <	cmp dword [rbp + 65], 0>

3328:
old  < scanFormat$161:>
new  <	jne scanFormat$188>

3329:
old  <	; NotEqual 189 star 0>
new  <>

3330:
old  <	cmp dword [rbp + 65], 0>
new  < scanFormat$161:>

3331:
old  <	jne scanFormat$189>
new  <	; Equal 171 shortInt 0>

3332:
old  <>
new  <	cmp dword [rbp + 53], 0>

3333:
old  < scanFormat$162:>
new  <	je scanFormat$171>

3334:
old  <	; Equal 172 shortInt 0>
new  <>

3335:
old  <	cmp dword [rbp + 53], 0>
new  < scanFormat$162:>

3336:
old  <	je scanFormat$172>
new  <	; BinaryAdd arg_list arg_list 8>

3337:
old  <>
new  <	add qword [rbp + 32], 8>

3338:
old  < scanFormat$163:>
new  <>

3339:
old  <	; BinaryAdd arg_list arg_list 8>
new  < scanFormat$163:>

3340:
old  <	add qword [rbp + 32], 8>
new  <	; BinarySubtract Â£temporary1313 arg_list 8>

3341:
old  <>
new  <	mov rsi, [rbp + 32]>

3342:
old  < scanFormat$164:>
new  <	sub rsi, 8>

3343:
old  <	; BinarySubtract Â£temporary1284 arg_list 8>
new  <>

3344:
old  <	mov rsi, [rbp + 32]>
new  < scanFormat$164:>

3345:
old  <	sub rsi, 8>
new  <	; IntegralToIntegral Â£temporary1315 Â£temporary1313>

3348:
old  <	; IntegralToIntegral Â£temporary1286 Â£temporary1284>
new  <	; Dereference Â£temporary1316 -> Â£temporary1315 Â£temporary1315 0>

3351:
old  <	; Dereference Â£temporary1287 -> Â£temporary1286 Â£temporary1286 0>
new  <	; Assign unsignedShortPtr Â£temporary1316 -> Â£temporary1315>

3352:
old  <>
new  <	mov rax, [rsi]>

3353:
old  < scanFormat$167:>
new  <	mov [rbp + 129], rax>

3354:
old  <	; Assign unsignedShortPtr Â£temporary1287 -> Â£temporary1286>
new  <>

3355:
old  <	mov rax, [rsi]>
new  < scanFormat$167:>

3356:
old  <	mov [rbp + 129], rax>
new  <	; Dereference Â£temporary1317 -> unsignedShortPtr unsignedShortPtr 0>

3357:
old  <>
new  <	mov rsi, [rbp + 129]>

3358:
old  < scanFormat$168:>
new  <>

3359:
old  <	; Dereference Â£temporary1288 -> unsignedShortPtr unsignedShortPtr 0>
new  < scanFormat$168:>

3360:
old  <	mov rsi, [rbp + 129]>
new  <	; IntegralToIntegral Â£temporary1318 unsignedLongValue>

3361:
old  <>
new  <	mov rax, [rbp + 113]>

3362:
old  < scanFormat$169:>
new  <>

3363:
old  <	; IntegralToIntegral Â£temporary1289 unsignedLongValue>
new  < scanFormat$169:>

3364:
old  <	mov rax, [rbp + 113]>
new  <	; Assign Â£temporary1317 -> unsignedShortPtr Â£temporary1318>

3365:
old  <>
new  <	mov [rsi], ax>

3366:
old  < scanFormat$170:>
new  <>

3367:
old  <	; Assign Â£temporary1288 -> unsignedShortPtr Â£temporary1289>
new  < scanFormat$170:>

3368:
old  <	mov [rsi], ax>
new  <	; Goto 188>

3369:
old  <>
new  <	jmp scanFormat$188>

3370:
old  < scanFormat$171:>
new  <>

3371:
old  <	; Goto 189>
new  < scanFormat$171:>

3372:
old  <	jmp scanFormat$189>
new  <	; NotEqual 181 longIntOrDouble 0>

3373:
old  <>
new  <	cmp dword [rbp + 57], 0>

3374:
old  < scanFormat$172:>
new  <	jne scanFormat$181>

3375:
old  <	; NotEqual 182 longIntOrDouble 0>
new  <>

3376:
old  <	cmp dword [rbp + 57], 0>
new  < scanFormat$172:>

3377:
old  <	jne scanFormat$182>
new  <	; BinaryAdd arg_list arg_list 8>

3378:
old  <>
new  <	add qword [rbp + 32], 8>

3379:
old  < scanFormat$173:>
new  <>

3380:
old  <	; BinaryAdd arg_list arg_list 8>
new  < scanFormat$173:>

3381:
old  <	add qword [rbp + 32], 8>
new  <	; BinarySubtract Â£temporary1323 arg_list 8>

3382:
old  <>
new  <	mov rsi, [rbp + 32]>

3383:
old  < scanFormat$174:>
new  <	sub rsi, 8>

3384:
old  <	; BinarySubtract Â£temporary1294 arg_list 8>
new  <>

3385:
old  <	mov rsi, [rbp + 32]>
new  < scanFormat$174:>

3386:
old  <	sub rsi, 8>
new  <	; IntegralToIntegral Â£temporary1325 Â£temporary1323>

3389:
old  <	; IntegralToIntegral Â£temporary1296 Â£temporary1294>
new  <	; Dereference Â£temporary1326 -> Â£temporary1325 Â£temporary1325 0>

3392:
old  <	; Dereference Â£temporary1297 -> Â£temporary1296 Â£temporary1296 0>
new  <	; Assign unsignedIntPtr Â£temporary1326 -> Â£temporary1325>

3393:
old  <>
new  <	mov rax, [rsi]>

3394:
old  < scanFormat$177:>
new  <	mov [rbp + 137], rax>

3395:
old  <	; Assign unsignedIntPtr Â£temporary1297 -> Â£temporary1296>
new  <>

3396:
old  <	mov rax, [rsi]>
new  < scanFormat$177:>

3397:
old  <	mov [rbp + 137], rax>
new  <	; Dereference Â£temporary1327 -> unsignedIntPtr unsignedIntPtr 0>

3398:
old  <>
new  <	mov rsi, [rbp + 137]>

3399:
old  < scanFormat$178:>
new  <>

3400:
old  <	; Dereference Â£temporary1298 -> unsignedIntPtr unsignedIntPtr 0>
new  < scanFormat$178:>

3401:
old  <	mov rsi, [rbp + 137]>
new  <	; IntegralToIntegral Â£temporary1328 unsignedLongValue>

3402:
old  <>
new  <	mov rax, [rbp + 113]>

3403:
old  < scanFormat$179:>
new  <>

3404:
old  <	; IntegralToIntegral Â£temporary1299 unsignedLongValue>
new  < scanFormat$179:>

3405:
old  <	mov rax, [rbp + 113]>
new  <	; Assign Â£temporary1327 -> unsignedIntPtr Â£temporary1328>

3406:
old  <>
new  <	mov [rsi], eax>

3407:
old  < scanFormat$180:>
new  <>

3408:
old  <	; Assign Â£temporary1298 -> unsignedIntPtr Â£temporary1299>
new  < scanFormat$180:>

3409:
old  <	mov [rsi], eax>
new  <	; Goto 188>

3410:
old  <>
new  <	jmp scanFormat$188>

3411:
old  < scanFormat$181:>
new  <>

3412:
old  <	; Goto 189>
new  < scanFormat$181:>

3413:
old  <	jmp scanFormat$189>
new  <	; BinaryAdd arg_list arg_list 8>

3414:
old  <>
new  <	add qword [rbp + 32], 8>

3415:
old  < scanFormat$182:>
new  <>

3416:
old  <	; BinaryAdd arg_list arg_list 8>
new  < scanFormat$182:>

3417:
old  <	add qword [rbp + 32], 8>
new  <	; BinarySubtract Â£temporary1331 arg_list 8>

3418:
old  <>
new  <	mov rsi, [rbp + 32]>

3419:
old  < scanFormat$183:>
new  <	sub rsi, 8>

3420:
old  <	; BinarySubtract Â£temporary1302 arg_list 8>
new  <>

3421:
old  <	mov rsi, [rbp + 32]>
new  < scanFormat$183:>

3422:
old  <	sub rsi, 8>
new  <	; IntegralToIntegral Â£temporary1333 Â£temporary1331>

3425:
old  <	; IntegralToIntegral Â£temporary1304 Â£temporary1302>
new  <	; Dereference Â£temporary1334 -> Â£temporary1333 Â£temporary1333 0>

3428:
old  <	; Dereference Â£temporary1305 -> Â£temporary1304 Â£temporary1304 0>
new  <	; Assign unsignedLongPtr Â£temporary1334 -> Â£temporary1333>

3429:
old  <>
new  <	mov rax, [rsi]>

3430:
old  < scanFormat$186:>
new  <	mov [rbp + 121], rax>

3431:
old  <	; Assign unsignedLongPtr Â£temporary1305 -> Â£temporary1304>
new  <>

3432:
old  <	mov rax, [rsi]>
new  < scanFormat$186:>

3433:
old  <	mov [rbp + 121], rax>
new  <	; Dereference Â£temporary1335 -> unsignedLongPtr unsignedLongPtr 0>

3434:
old  <>
new  <	mov rsi, [rbp + 121]>

3435:
old  < scanFormat$187:>
new  <>

3436:
old  <	; Dereference Â£temporary1306 -> unsignedLongPtr unsignedLongPtr 0>
new  < scanFormat$187:>

3437:
old  <	mov rsi, [rbp + 121]>
new  <	; Assign Â£temporary1335 -> unsignedLongPtr unsignedLongValue>

3438:
old  <>
new  <	mov rax, [rbp + 113]>

3439:
old  < scanFormat$188:>
new  <	mov [rsi], rax>

3440:
old  <	; Assign Â£temporary1306 -> unsignedLongPtr unsignedLongValue>
new  <>

3441:
old  <	mov rax, [rbp + 113]>
new  < scanFormat$188:>

3442:
old  <	mov [rsi], rax>
new  <	; Assign percent 0>

3443:
old  <>
new  <	mov dword [rbp + 49], 0>

3444:
old  < scanFormat$189:>
new  <>

3445:
old  <	; Assign percent 0>
new  < scanFormat$189:>

3446:
old  <	mov dword [rbp + 49], 0>
new  <	; Goto 330>

3447:
old  <>
new  <	jmp scanFormat$330>

3448:
old  < scanFormat$190:>
new  <>

3449:
old  <	; Goto 331>
new  < scanFormat$190:>

3450:
old  <	jmp scanFormat$331>
new  <	; PreCall 157 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3453:
old  <	; PreCall 157 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter unsignedlongint 0 181>

3454:
old  <>
new  <	mov qword [rbp + 181], 0>

3455:
old  < scanFormat$192:>
new  <>

3456:
old  <	; Parameter unsignedlongint 0 181>
new  < scanFormat$192:>

3457:
old  <	mov qword [rbp + 181], 0>
new  <	; Call scanUnsignedLongInt 157 0>

3458:
old  <>
new  <	mov qword [rbp + 157], scanFormat$193>

3459:
old  < scanFormat$193:>
new  <	mov [rbp + 165], rbp>

3460:
old  <	; Call scanUnsignedLongInt 157 0>
new  <	add rbp, 157>

3461:
old  <	mov qword [rbp + 157], scanFormat$194>
new  <	jmp scanUnsignedLongInt>

3462:
old  <	mov [rbp + 165], rbp>
new  <>

3463:
old  <	add rbp, 157>
new  < scanFormat$193:>

3464:
old  <	jmp scanUnsignedLongInt>
new  <	; PostCall 157>

3467:
old  <	; PostCall 157>
new  <	; GetReturnValue Â£temporary1337>

3470:
old  <	; GetReturnValue Â£temporary1308>
new  <	; Assign unsignedLongValue Â£temporary1337>

3471:
old  <>
new  <	mov [rbp + 113], rbx>

3472:
old  < scanFormat$196:>
new  <>

3473:
old  <	; Assign unsignedLongValue Â£temporary1308>
new  < scanFormat$196:>

3474:
old  <	mov [rbp + 113], rbx>
new  <	; NotEqual 224 star 0>

3475:
old  <>
new  <	cmp dword [rbp + 65], 0>

3476:
old  < scanFormat$197:>
new  <	jne scanFormat$224>

3477:
old  <	; NotEqual 225 star 0>
new  <>

3478:
old  <	cmp dword [rbp + 65], 0>
new  < scanFormat$197:>

3479:
old  <	jne scanFormat$225>
new  <	; Equal 207 shortInt 0>

3480:
old  <>
new  <	cmp dword [rbp + 53], 0>

3481:
old  < scanFormat$198:>
new  <	je scanFormat$207>

3482:
old  <	; Equal 208 shortInt 0>
new  <>

3483:
old  <	cmp dword [rbp + 53], 0>
new  < scanFormat$198:>

3484:
old  <	je scanFormat$208>
new  <	; BinaryAdd arg_list arg_list 8>

3485:
old  <>
new  <	add qword [rbp + 32], 8>

3486:
old  < scanFormat$199:>
new  <>

3487:
old  <	; BinaryAdd arg_list arg_list 8>
new  < scanFormat$199:>

3488:
old  <	add qword [rbp + 32], 8>
new  <	; BinarySubtract Â£temporary1342 arg_list 8>

3489:
old  <>
new  <	mov rsi, [rbp + 32]>

3490:
old  < scanFormat$200:>
new  <	sub rsi, 8>

3491:
old  <	; BinarySubtract Â£temporary1313 arg_list 8>
new  <>

3492:
old  <	mov rsi, [rbp + 32]>
new  < scanFormat$200:>

3493:
old  <	sub rsi, 8>
new  <	; IntegralToIntegral Â£temporary1344 Â£temporary1342>

3496:
old  <	; IntegralToIntegral Â£temporary1315 Â£temporary1313>
new  <	; Dereference Â£temporary1345 -> Â£temporary1344 Â£temporary1344 0>

3499:
old  <	; Dereference Â£temporary1316 -> Â£temporary1315 Â£temporary1315 0>
new  <	; Assign unsignedShortPtr Â£temporary1345 -> Â£temporary1344>

3500:
old  <>
new  <	mov rax, [rsi]>

3501:
old  < scanFormat$203:>
new  <	mov [rbp + 129], rax>

3502:
old  <	; Assign unsignedShortPtr Â£temporary1316 -> Â£temporary1315>
new  <>

3503:
old  <	mov rax, [rsi]>
new  < scanFormat$203:>

3504:
old  <	mov [rbp + 129], rax>
new  <	; Dereference Â£temporary1346 -> unsignedShortPtr unsignedShortPtr 0>

3505:
old  <>
new  <	mov rsi, [rbp + 129]>

3506:
old  < scanFormat$204:>
new  <>

3507:
old  <	; Dereference Â£temporary1317 -> unsignedShortPtr unsignedShortPtr 0>
new  < scanFormat$204:>

3508:
old  <	mov rsi, [rbp + 129]>
new  <	; IntegralToIntegral Â£temporary1347 unsignedLongValue>

3509:
old  <>
new  <	mov rax, [rbp + 113]>

3510:
old  < scanFormat$205:>
new  <>

3511:
old  <	; IntegralToIntegral Â£temporary1318 unsignedLongValue>
new  < scanFormat$205:>

3512:
old  <	mov rax, [rbp + 113]>
new  <	; Assign Â£temporary1346 -> unsignedShortPtr Â£temporary1347>

3513:
old  <>
new  <	mov [rsi], ax>

3514:
old  < scanFormat$206:>
new  <>

3515:
old  <	; Assign Â£temporary1317 -> unsignedShortPtr Â£temporary1318>
new  < scanFormat$206:>

3516:
old  <	mov [rsi], ax>
new  <	; Goto 224>

3517:
old  <>
new  <	jmp scanFormat$224>

3518:
old  < scanFormat$207:>
new  <>

3519:
old  <	; Goto 225>
new  < scanFormat$207:>

3520:
old  <	jmp scanFormat$225>
new  <	; NotEqual 217 longIntOrDouble 0>

3521:
old  <>
new  <	cmp dword [rbp + 57], 0>

3522:
old  < scanFormat$208:>
new  <	jne scanFormat$217>

3523:
old  <	; NotEqual 218 longIntOrDouble 0>
new  <>

3524:
old  <	cmp dword [rbp + 57], 0>
new  < scanFormat$208:>

3525:
old  <	jne scanFormat$218>
new  <	; BinaryAdd arg_list arg_list 8>

3526:
old  <>
new  <	add qword [rbp + 32], 8>

3527:
old  < scanFormat$209:>
new  <>

3528:
old  <	; BinaryAdd arg_list arg_list 8>
new  < scanFormat$209:>

3529:
old  <	add qword [rbp + 32], 8>
new  <	; BinarySubtract Â£temporary1352 arg_list 8>

3530:
old  <>
new  <	mov rsi, [rbp + 32]>

3531:
old  < scanFormat$210:>
new  <	sub rsi, 8>

3532:
old  <	; BinarySubtract Â£temporary1323 arg_list 8>
new  <>

3533:
old  <	mov rsi, [rbp + 32]>
new  < scanFormat$210:>

3534:
old  <	sub rsi, 8>
new  <	; IntegralToIntegral Â£temporary1354 Â£temporary1352>

3537:
old  <	; IntegralToIntegral Â£temporary1325 Â£temporary1323>
new  <	; Dereference Â£temporary1355 -> Â£temporary1354 Â£temporary1354 0>

3540:
old  <	; Dereference Â£temporary1326 -> Â£temporary1325 Â£temporary1325 0>
new  <	; Assign unsignedIntPtr Â£temporary1355 -> Â£temporary1354>

3541:
old  <>
new  <	mov rax, [rsi]>

3542:
old  < scanFormat$213:>
new  <	mov [rbp + 137], rax>

3543:
old  <	; Assign unsignedIntPtr Â£temporary1326 -> Â£temporary1325>
new  <>

3544:
old  <	mov rax, [rsi]>
new  < scanFormat$213:>

3545:
old  <	mov [rbp + 137], rax>
new  <	; Dereference Â£temporary1356 -> unsignedIntPtr unsignedIntPtr 0>

3546:
old  <>
new  <	mov rsi, [rbp + 137]>

3547:
old  < scanFormat$214:>
new  <>

3548:
old  <	; Dereference Â£temporary1327 -> unsignedIntPtr unsignedIntPtr 0>
new  < scanFormat$214:>

3549:
old  <	mov rsi, [rbp + 137]>
new  <	; IntegralToIntegral Â£temporary1357 unsignedLongValue>

3550:
old  <>
new  <	mov rax, [rbp + 113]>

3551:
old  < scanFormat$215:>
new  <>

3552:
old  <	; IntegralToIntegral Â£temporary1328 unsignedLongValue>
new  < scanFormat$215:>

3553:
old  <	mov rax, [rbp + 113]>
new  <	; Assign Â£temporary1356 -> unsignedIntPtr Â£temporary1357>

3554:
old  <>
new  <	mov [rsi], eax>

3555:
old  < scanFormat$216:>
new  <>

3556:
old  <	; Assign Â£temporary1327 -> unsignedIntPtr Â£temporary1328>
new  < scanFormat$216:>

3557:
old  <	mov [rsi], eax>
new  <	; Goto 224>

3558:
old  <>
new  <	jmp scanFormat$224>

3559:
old  < scanFormat$217:>
new  <>

3560:
old  <	; Goto 225>
new  < scanFormat$217:>

3561:
old  <	jmp scanFormat$225>
new  <	; BinaryAdd arg_list arg_list 8>

3562:
old  <>
new  <	add qword [rbp + 32], 8>

3563:
old  < scanFormat$218:>
new  <>

3564:
old  <	; BinaryAdd arg_list arg_list 8>
new  < scanFormat$218:>

3565:
old  <	add qword [rbp + 32], 8>
new  <	; BinarySubtract Â£temporary1360 arg_list 8>

3566:
old  <>
new  <	mov rsi, [rbp + 32]>

3567:
old  < scanFormat$219:>
new  <	sub rsi, 8>

3568:
old  <	; BinarySubtract Â£temporary1331 arg_list 8>
new  <>

3569:
old  <	mov rsi, [rbp + 32]>
new  < scanFormat$219:>

3570:
old  <	sub rsi, 8>
new  <	; IntegralToIntegral Â£temporary1362 Â£temporary1360>

3573:
old  <	; IntegralToIntegral Â£temporary1333 Â£temporary1331>
new  <	; Dereference Â£temporary1363 -> Â£temporary1362 Â£temporary1362 0>

3576:
old  <	; Dereference Â£temporary1334 -> Â£temporary1333 Â£temporary1333 0>
new  <	; Assign unsignedLongPtr Â£temporary1363 -> Â£temporary1362>

3577:
old  <>
new  <	mov rax, [rsi]>

3578:
old  < scanFormat$222:>
new  <	mov [rbp + 121], rax>

3579:
old  <	; Assign unsignedLongPtr Â£temporary1334 -> Â£temporary1333>
new  <>

3580:
old  <	mov rax, [rsi]>
new  < scanFormat$222:>

3581:
old  <	mov [rbp + 121], rax>
new  <	; Dereference Â£temporary1364 -> unsignedLongPtr unsignedLongPtr 0>

3582:
old  <>
new  <	mov rsi, [rbp + 121]>

3583:
old  < scanFormat$223:>
new  <>

3584:
old  <	; Dereference Â£temporary1335 -> unsignedLongPtr unsignedLongPtr 0>
new  < scanFormat$223:>

3585:
old  <	mov rsi, [rbp + 121]>
new  <	; Assign Â£temporary1364 -> unsignedLongPtr unsignedLongValue>

3586:
old  <>
new  <	mov rax, [rbp + 113]>

3587:
old  < scanFormat$224:>
new  <	mov [rsi], rax>

3588:
old  <	; Assign Â£temporary1335 -> unsignedLongPtr unsignedLongValue>
new  <>

3589:
old  <	mov rax, [rbp + 113]>
new  < scanFormat$224:>

3590:
old  <	mov [rsi], rax>
new  <	; Assign percent 0>

3591:
old  <>
new  <	mov dword [rbp + 49], 0>

3592:
old  < scanFormat$225:>
new  <>

3593:
old  <	; Assign percent 0>
new  < scanFormat$225:>

3594:
old  <	mov dword [rbp + 49], 0>
new  <	; Goto 330>

3595:
old  <>
new  <	jmp scanFormat$330>

3596:
old  < scanFormat$226:>
new  <>

3597:
old  <	; Goto 331>
new  < scanFormat$226:>

3598:
old  <	jmp scanFormat$331>
new  <	; PreCall 157 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3601:
old  <	; PreCall 157 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Call scanLongDouble 157 0>

3602:
old  <>
new  <	mov qword [rbp + 157], scanFormat$228>

3603:
old  < scanFormat$228:>
new  <	mov [rbp + 165], rbp>

3604:
old  <	; Call scanLongDouble 157 0>
new  <	add rbp, 157>

3605:
old  <	mov qword [rbp + 157], scanFormat$229>
new  <	jmp scanLongDouble>

3606:
old  <	mov [rbp + 165], rbp>
new  <>

3607:
old  <	add rbp, 157>
new  < scanFormat$228:>

3608:
old  <	jmp scanLongDouble>
new  <	; PostCall 157>

3611:
old  <	; PostCall 157>
new  <	; GetReturnValue Â£temporary1366>

3614:
old  <	; GetReturnValue Â£temporary1337>
new  <	; PopFloat longDoubleValue>

3615:
old  <>
new  <	fstp qword [rbp + 145]>

3616:
old  < scanFormat$231:>
new  <>

3617:
old  <	; PopFloat longDoubleValue>
new  < scanFormat$231:>

3618:
old  <	fstp qword [rbp + 145]>
new  <	; NotEqual 260 star 0>

3619:
old  <>
new  <	cmp dword [rbp + 65], 0>

3620:
old  < scanFormat$232:>
new  <	jne scanFormat$260>

3621:
old  <	; NotEqual 261 star 0>
new  <>

3622:
old  <	cmp dword [rbp + 65], 0>
new  < scanFormat$232:>

3623:
old  <	jne scanFormat$261>
new  <	; Equal 242 longIntOrDouble 0>

3624:
old  <>
new  <	cmp dword [rbp + 57], 0>

3625:
old  < scanFormat$233:>
new  <	je scanFormat$242>

3626:
old  <	; Equal 243 longIntOrDouble 0>
new  <>

3627:
old  <	cmp dword [rbp + 57], 0>
new  < scanFormat$233:>

3628:
old  <	je scanFormat$243>
new  <	; BinaryAdd arg_list arg_list 8>

3629:
old  <>
new  <	add qword [rbp + 32], 8>

3630:
old  < scanFormat$234:>
new  <>

3631:
old  <	; BinaryAdd arg_list arg_list 8>
new  < scanFormat$234:>

3632:
old  <	add qword [rbp + 32], 8>
new  <	; BinarySubtract Â£temporary1371 arg_list 8>

3633:
old  <>
new  <	mov rsi, [rbp + 32]>

3634:
old  < scanFormat$235:>
new  <	sub rsi, 8>

3635:
old  <	; BinarySubtract Â£temporary1342 arg_list 8>
new  <>

3636:
old  <	mov rsi, [rbp + 32]>
new  < scanFormat$235:>

3637:
old  <	sub rsi, 8>
new  <	; IntegralToIntegral Â£temporary1373 Â£temporary1371>

3640:
old  <	; IntegralToIntegral Â£temporary1344 Â£temporary1342>
new  <	; Dereference Â£temporary1374 -> Â£temporary1373 Â£temporary1373 0>

3643:
old  <	; Dereference Â£temporary1345 -> Â£temporary1344 Â£temporary1344 0>
new  <	; Assign doublePtr Â£temporary1374 -> Â£temporary1373>

3644:
old  <>
new  <	mov rax, [rsi]>

3645:
old  < scanFormat$238:>
new  <	mov [rbp + 157], rax>

3646:
old  <	; Assign doublePtr Â£temporary1345 -> Â£temporary1344>
new  <>

3647:
old  <	mov rax, [rsi]>
new  < scanFormat$238:>

3648:
old  <	mov [rbp + 157], rax>
new  <	; Dereference Â£temporary1375 -> doublePtr doublePtr 0>

3649:
old  <>
new  <	mov rsi, [rbp + 157]>

3650:
old  < scanFormat$239:>
new  <>

3651:
old  <	; Dereference Â£temporary1346 -> doublePtr doublePtr 0>
new  < scanFormat$239:>

3652:
old  <	mov rsi, [rbp + 157]>
new  <	; PushFloat longDoubleValue>

3653:
old  <>
new  <	fld qword [rbp + 145]>

3654:
old  < scanFormat$240:>
new  <>

3655:
old  <	; PushFloat longDoubleValue>
new  < scanFormat$240:>

3656:
old  <	fld qword [rbp + 145]>
new  <	; PopFloat Â£temporary1375 -> doublePtr>

3657:
old  <>
new  <	fstp qword [rsi]>

3658:
old  < scanFormat$241:>
new  <>

3659:
old  <	; PopFloat Â£temporary1346 -> doublePtr>
new  < scanFormat$241:>

3660:
old  <	fstp qword [rsi]>
new  <	; Goto 260>

3661:
old  <>
new  <	jmp scanFormat$260>

3662:
old  < scanFormat$242:>
new  <>

3663:
old  <	; Goto 261>
new  < scanFormat$242:>

3664:
old  <	jmp scanFormat$261>
new  <	; Equal 252 longDouble 0>

3665:
old  <>
new  <	cmp dword [rbp + 61], 0>

3666:
old  < scanFormat$243:>
new  <	je scanFormat$252>

3667:
old  <	; Equal 253 longDouble 0>
new  <>

3668:
old  <	cmp dword [rbp + 61], 0>
new  < scanFormat$243:>

3669:
old  <	je scanFormat$253>
new  <	; BinaryAdd arg_list arg_list 8>

3670:
old  <>
new  <	add qword [rbp + 32], 8>

3671:
old  < scanFormat$244:>
new  <>

3672:
old  <	; BinaryAdd arg_list arg_list 8>
new  < scanFormat$244:>

3673:
old  <	add qword [rbp + 32], 8>
new  <	; BinarySubtract Â£temporary1379 arg_list 8>

3674:
old  <>
new  <	mov rsi, [rbp + 32]>

3675:
old  < scanFormat$245:>
new  <	sub rsi, 8>

3676:
old  <	; BinarySubtract Â£temporary1350 arg_list 8>
new  <>

3677:
old  <	mov rsi, [rbp + 32]>
new  < scanFormat$245:>

3678:
old  <	sub rsi, 8>
new  <	; IntegralToIntegral Â£temporary1381 Â£temporary1379>

3681:
old  <	; IntegralToIntegral Â£temporary1352 Â£temporary1350>
new  <	; Dereference Â£temporary1382 -> Â£temporary1381 Â£temporary1381 0>

3684:
old  <	; Dereference Â£temporary1353 -> Â£temporary1352 Â£temporary1352 0>
new  <	; Assign longDoublePtr Â£temporary1382 -> Â£temporary1381>

3685:
old  <>
new  <	mov rax, [rsi]>

3686:
old  < scanFormat$248:>
new  <	mov [rbp + 157], rax>

3687:
old  <	; Assign longDoublePtr Â£temporary1353 -> Â£temporary1352>
new  <>

3688:
old  <	mov rax, [rsi]>
new  < scanFormat$248:>

3689:
old  <	mov [rbp + 157], rax>
new  <	; Dereference Â£temporary1383 -> longDoublePtr longDoublePtr 0>

3690:
old  <>
new  <	mov rsi, [rbp + 157]>

3691:
old  < scanFormat$249:>
new  <>

3692:
old  <	; Dereference Â£temporary1354 -> longDoublePtr longDoublePtr 0>
new  < scanFormat$249:>

3693:
old  <	mov rsi, [rbp + 157]>
new  <	; PushFloat longDoubleValue>

3694:
old  <>
new  <	fld qword [rbp + 145]>

3695:
old  < scanFormat$250:>
new  <>

3696:
old  <	; PushFloat longDoubleValue>
new  < scanFormat$250:>

3697:
old  <	fld qword [rbp + 145]>
new  <	; PopFloat Â£temporary1383 -> longDoublePtr>

3698:
old  <>
new  <	fstp qword [rsi]>

3699:
old  < scanFormat$251:>
new  <>

3700:
old  <	; PopFloat Â£temporary1354 -> longDoublePtr>
new  < scanFormat$251:>

3701:
old  <	fstp qword [rsi]>
new  <	; Goto 260>

3702:
old  <>
new  <	jmp scanFormat$260>

3703:
old  < scanFormat$252:>
new  <>

3704:
old  <	; Goto 261>
new  < scanFormat$252:>

3705:
old  <	jmp scanFormat$261>
new  <	; BinaryAdd arg_list arg_list 8>

3706:
old  <>
new  <	add qword [rbp + 32], 8>

3707:
old  < scanFormat$253:>
new  <>

3708:
old  <	; BinaryAdd arg_list arg_list 8>
new  < scanFormat$253:>

3709:
old  <	add qword [rbp + 32], 8>
new  <	; BinarySubtract Â£temporary1386 arg_list 8>

3710:
old  <>
new  <	mov rsi, [rbp + 32]>

3711:
old  < scanFormat$254:>
new  <	sub rsi, 8>

3712:
old  <	; BinarySubtract Â£temporary1357 arg_list 8>
new  <>

3713:
old  <	mov rsi, [rbp + 32]>
new  < scanFormat$254:>

3714:
old  <	sub rsi, 8>
new  <	; IntegralToIntegral Â£temporary1388 Â£temporary1386>

3717:
old  <	; IntegralToIntegral Â£temporary1359 Â£temporary1357>
new  <	; Dereference Â£temporary1389 -> Â£temporary1388 Â£temporary1388 0>

3720:
old  <	; Dereference Â£temporary1360 -> Â£temporary1359 Â£temporary1359 0>
new  <	; Assign floatPtr Â£temporary1389 -> Â£temporary1388>

3721:
old  <>
new  <	mov rax, [rsi]>

3722:
old  < scanFormat$257:>
new  <	mov [rbp + 157], rax>

3723:
old  <	; Assign floatPtr Â£temporary1360 -> Â£temporary1359>
new  <>

3724:
old  <	mov rax, [rsi]>
new  < scanFormat$257:>

3725:
old  <	mov [rbp + 157], rax>
new  <	; Dereference Â£temporary1390 -> floatPtr floatPtr 0>

3726:
old  <>
new  <	mov rsi, [rbp + 157]>

3727:
old  < scanFormat$258:>
new  <>

3728:
old  <	; Dereference Â£temporary1361 -> floatPtr floatPtr 0>
new  < scanFormat$258:>

3729:
old  <	mov rsi, [rbp + 157]>
new  <	; PushFloat longDoubleValue>

3730:
old  <>
new  <	fld qword [rbp + 145]>

3731:
old  < scanFormat$259:>
new  <>

3732:
old  <	; PushFloat longDoubleValue>
new  < scanFormat$259:>

3733:
old  <	fld qword [rbp + 145]>
new  <	; PopFloat Â£temporary1390 -> floatPtr>

3734:
old  <>
new  <	fstp dword [rsi]>

3735:
old  < scanFormat$260:>
new  <>

3736:
old  <	; PopFloat Â£temporary1361 -> floatPtr>
new  < scanFormat$260:>

3737:
old  <	fstp dword [rsi]>
new  <	; Assign percent 0>

3738:
old  <>
new  <	mov dword [rbp + 49], 0>

3739:
old  < scanFormat$261:>
new  <>

3740:
old  <	; Assign percent 0>
new  < scanFormat$261:>

3741:
old  <	mov dword [rbp + 49], 0>
new  <	; Goto 330>

3742:
old  <>
new  <	jmp scanFormat$330>

3743:
old  < scanFormat$262:>
new  <>

3744:
old  <	; Goto 331>
new  < scanFormat$262:>

3745:
old  <	jmp scanFormat$331>
new  <	; Assign not 0>

3746:
old  <>
new  <	mov dword [rbp + 157], 0>

3747:
old  < scanFormat$263:>
new  <>

3748:
old  <	; Assign not 0>
new  < scanFormat$263:>

3749:
old  <	mov dword [rbp + 157], 0>
new  <	; BinaryAdd index index 1>

3750:
old  <>
new  <	inc dword [rbp + 93]>

3751:
old  < scanFormat$264:>
new  <>

3752:
old  <	; BinaryAdd index index 1>
new  < scanFormat$264:>

3753:
old  <	inc dword [rbp + 93]>
new  <	; IntegralToIntegral Â£temporary1396 index>

3754:
old  <>
new  <	mov eax, [rbp + 93]>

3755:
old  < scanFormat$265:>
new  <	mov rbx, 4294967295>

3756:
old  <	; IntegralToIntegral Â£temporary1367 index>
new  <	and rax, rbx>

3757:
old  <	mov eax, [rbp + 93]>
new  <>

3758:
old  <	mov rbx, 4294967295>
new  < scanFormat$265:>

3759:
old  <	and rax, rbx>
new  <	; BinaryAdd Â£temporary1398 format Â£temporary1396>

3760:
old  <>
new  <	mov rsi, [rbp + 24]>

3761:
old  < scanFormat$266:>
new  <	add rsi, rax>

3762:
old  <	; BinaryAdd Â£temporary1369 format Â£temporary1367>
new  <>

3763:
old  <	mov rsi, [rbp + 24]>
new  < scanFormat$266:>

3764:
old  <	add rsi, rax>
new  <	; Dereference Â£temporary1395 -> Â£temporary1398 Â£temporary1398 0>

3767:
old  <	; Dereference Â£temporary1366 -> Â£temporary1369 Â£temporary1369 0>
new  <	; NotEqual 270 Â£temporary1395 -> Â£temporary1398 94>

3768:
old  <>
new  <	cmp byte [rsi], 94>

3769:
old  < scanFormat$268:>
new  <	jne scanFormat$270>

3770:
old  <	; NotEqual 271 Â£temporary1366 -> Â£temporary1369 94>
new  <>

3771:
old  <	cmp byte [rsi], 94>
new  < scanFormat$268:>

3772:
old  <	jne scanFormat$271>
new  <	; Assign not 1>

3773:
old  <>
new  <	mov dword [rbp + 157], 1>

3774:
old  < scanFormat$269:>
new  <>

3775:
old  <	; Assign not 1>
new  < scanFormat$269:>

3776:
old  <	mov dword [rbp + 157], 1>
new  <	; BinaryAdd startIndex index 1>

3777:
old  <>
new  <	mov eax, [rbp + 93]>

3778:
old  < scanFormat$270:>
new  <	inc eax>

3779:
old  <	; BinaryAdd startIndex index 1>
new  <	mov [rbp + 161], eax>

3780:
old  <	mov eax, [rbp + 93]>
new  <>

3781:
old  <	inc eax>
new  < scanFormat$270:>

3782:
old  <	mov [rbp + 161], eax>
new  <	; IntegralToIntegral Â£temporary1402 index>

3783:
old  <>
new  <	mov eax, [rbp + 93]>

3784:
old  < scanFormat$271:>
new  <	mov rbx, 4294967295>

3785:
old  <	; IntegralToIntegral Â£temporary1373 index>
new  <	and rax, rbx>

3786:
old  <	mov eax, [rbp + 93]>
new  <>

3787:
old  <	mov rbx, 4294967295>
new  < scanFormat$271:>

3788:
old  <	and rax, rbx>
new  <	; BinaryAdd Â£temporary1404 format Â£temporary1402>

3789:
old  <>
new  <	mov rsi, [rbp + 24]>

3790:
old  < scanFormat$272:>
new  <	add rsi, rax>

3791:
old  <	; BinaryAdd Â£temporary1375 format Â£temporary1373>
new  <>

3792:
old  <	mov rsi, [rbp + 24]>
new  < scanFormat$272:>

3793:
old  <	add rsi, rax>
new  <	; Dereference Â£temporary1401 -> Â£temporary1404 Â£temporary1404 0>

3796:
old  <	; Dereference Â£temporary1372 -> Â£temporary1375 Â£temporary1375 0>
new  <	; Equal 276 Â£temporary1401 -> Â£temporary1404 93>

3797:
old  <>
new  <	cmp byte [rsi], 93>

3798:
old  < scanFormat$274:>
new  <	je scanFormat$276>

3799:
old  <	; Equal 277 Â£temporary1372 -> Â£temporary1375 93>
new  <>

3800:
old  <	cmp byte [rsi], 93>
new  < scanFormat$274:>

3801:
old  <	je scanFormat$277>
new  <	; BinaryAdd index index 1>

3802:
old  <>
new  <	inc dword [rbp + 93]>

3803:
old  < scanFormat$275:>
new  <>

3804:
old  <	; BinaryAdd index index 1>
new  < scanFormat$275:>

3805:
old  <	inc dword [rbp + 93]>
new  <	; Goto 270>

3806:
old  <>
new  <	jmp scanFormat$270>

3807:
old  < scanFormat$276:>
new  <>

3808:
old  <	; Goto 271>
new  < scanFormat$276:>

3809:
old  <	jmp scanFormat$271>
new  <	; IntegralToIntegral Â£temporary1408 index>

3810:
old  <>
new  <	mov eax, [rbp + 93]>

3811:
old  < scanFormat$277:>
new  <	mov rbx, 4294967295>

3812:
old  <	; IntegralToIntegral Â£temporary1379 index>
new  <	and rax, rbx>

3813:
old  <	mov eax, [rbp + 93]>
new  <>

3814:
old  <	mov rbx, 4294967295>
new  < scanFormat$277:>

3815:
old  <	and rax, rbx>
new  <	; BinaryAdd Â£temporary1410 format Â£temporary1408>

3816:
old  <>
new  <	mov rsi, [rbp + 24]>

3817:
old  < scanFormat$278:>
new  <	add rsi, rax>

3818:
old  <	; BinaryAdd Â£temporary1381 format Â£temporary1379>
new  <>

3819:
old  <	mov rsi, [rbp + 24]>
new  < scanFormat$278:>

3820:
old  <	add rsi, rax>
new  <	; Dereference Â£temporary1407 -> Â£temporary1410 Â£temporary1410 0>

3823:
old  <	; Dereference Â£temporary1378 -> Â£temporary1381 Â£temporary1381 0>
new  <	; Assign Â£temporary1407 -> Â£temporary1410 0>

3824:
old  <>
new  <	mov byte [rsi], 0>

3825:
old  < scanFormat$280:>
new  <>

3826:
old  <	; Assign Â£temporary1378 -> Â£temporary1381 0>
new  < scanFormat$280:>

3827:
old  <	mov byte [rsi], 0>
new  <	; NotEqual 297 star 0>

3828:
old  <>
new  <	cmp dword [rbp + 65], 0>

3829:
old  < scanFormat$281:>
new  <	jne scanFormat$297>

3830:
old  <	; NotEqual 298 star 0>
new  <>

3831:
old  <	cmp dword [rbp + 65], 0>
new  < scanFormat$281:>

3832:
old  <	jne scanFormat$298>
new  <	; BinaryAdd arg_list arg_list 8>

3833:
old  <>
new  <	add qword [rbp + 32], 8>

3834:
old  < scanFormat$282:>
new  <>

3835:
old  <	; BinaryAdd arg_list arg_list 8>
new  < scanFormat$282:>

3836:
old  <	add qword [rbp + 32], 8>
new  <	; BinarySubtract Â£temporary1415 arg_list 8>

3837:
old  <>
new  <	mov rsi, [rbp + 32]>

3838:
old  < scanFormat$283:>
new  <	sub rsi, 8>

3839:
old  <	; BinarySubtract Â£temporary1386 arg_list 8>
new  <>

3840:
old  <	mov rsi, [rbp + 32]>
new  < scanFormat$283:>

3841:
old  <	sub rsi, 8>
new  <	; IntegralToIntegral Â£temporary1417 Â£temporary1415>

3844:
old  <	; IntegralToIntegral Â£temporary1388 Â£temporary1386>
new  <	; Dereference Â£temporary1418 -> Â£temporary1417 Â£temporary1417 0>

3847:
old  <	; Dereference Â£temporary1389 -> Â£temporary1388 Â£temporary1388 0>
new  <	; Assign string Â£temporary1418 -> Â£temporary1417>

3848:
old  <>
new  <	mov rax, [rsi]>

3849:
old  < scanFormat$286:>
new  <	mov [rbp + 165], rax>

3850:
old  <	; Assign string Â£temporary1389 -> Â£temporary1388>
new  <>

3851:
old  <	mov rax, [rsi]>
new  < scanFormat$286:>

3852:
old  <	mov [rbp + 165], rax>
new  <	; PreCall 173 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3855:
old  <	; PreCall 173 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter pointer string 197>

3856:
old  <>
new  <	mov rax, [rbp + 165]>

3857:
old  < scanFormat$288:>
new  <	mov [rbp + 197], rax>

3858:
old  <	; Parameter pointer string 197>
new  <>

3859:
old  <	mov rax, [rbp + 165]>
new  < scanFormat$288:>

3860:
old  <	mov [rbp + 197], rax>
new  <	; IntegralToIntegral Â£temporary1420 startIndex>

3861:
old  <>
new  <	mov eax, [rbp + 161]>

3862:
old  < scanFormat$289:>
new  <	mov rbx, 4294967295>

3863:
old  <	; IntegralToIntegral Â£temporary1391 startIndex>
new  <	and rax, rbx>

3864:
old  <	mov eax, [rbp + 161]>
new  <>

3865:
old  <	mov rbx, 4294967295>
new  < scanFormat$289:>

3866:
old  <	and rax, rbx>
new  <	; BinaryAdd Â£temporary1422 format Â£temporary1420>

3867:
old  <>
new  <	mov rsi, [rbp + 24]>

3868:
old  < scanFormat$290:>
new  <	add rsi, rax>

3869:
old  <	; BinaryAdd Â£temporary1393 format Â£temporary1391>
new  <>

3870:
old  <	mov rsi, [rbp + 24]>
new  < scanFormat$290:>

3871:
old  <	add rsi, rax>
new  <	; Dereference Â£temporary1419 -> Â£temporary1422 Â£temporary1422 0>

3874:
old  <	; Dereference Â£temporary1390 -> Â£temporary1393 Â£temporary1393 0>
new  <	; Address Â£temporary1423 Â£temporary1419 -> Â£temporary1422>

3877:
old  <	; Address Â£temporary1394 Â£temporary1390 -> Â£temporary1393>
new  <	; Parameter pointer Â£temporary1423 205>

3878:
old  <>
new  <	mov [rbp + 205], rsi>

3879:
old  < scanFormat$293:>
new  <>

3880:
old  <	; Parameter pointer Â£temporary1394 205>
new  < scanFormat$293:>

3881:
old  <	mov [rbp + 205], rsi>
new  <	; Parameter signedint not 213>

3882:
old  <>
new  <	mov eax, [rbp + 157]>

3883:
old  < scanFormat$294:>
new  <	mov [rbp + 213], eax>

3884:
old  <	; Parameter signedint not 213>
new  <>

3885:
old  <	mov eax, [rbp + 157]>
new  < scanFormat$294:>

3886:
old  <	mov [rbp + 213], eax>
new  <	; Call scanPattern 173 0>

3887:
old  <>
new  <	mov qword [rbp + 173], scanFormat$295>

3888:
old  < scanFormat$295:>
new  <	mov [rbp + 181], rbp>

3889:
old  <	; Call scanPattern 173 0>
new  <	add rbp, 173>

3890:
old  <	mov qword [rbp + 173], scanFormat$296>
new  <	jmp scanPattern>

3891:
old  <	mov [rbp + 181], rbp>
new  <>

3892:
old  <	add rbp, 173>
new  < scanFormat$295:>

3893:
old  <	jmp scanPattern>
new  <	; PostCall 173>

3896:
old  <	; PostCall 173>
new  <	; Goto 330>

3897:
old  <>
new  <	jmp scanFormat$330>

3898:
old  < scanFormat$297:>
new  <>

3899:
old  <	; Goto 331>
new  < scanFormat$297:>

3900:
old  <	jmp scanFormat$331>
new  <	; PreCall 165 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3903:
old  <	; PreCall 165 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter pointer 0 189>

3904:
old  <>
new  <	mov qword [rbp + 189], 0>

3905:
old  < scanFormat$299:>
new  <>

3906:
old  <	; Parameter pointer 0 189>
new  < scanFormat$299:>

3907:
old  <	mov qword [rbp + 189], 0>
new  <	; IntegralToIntegral Â£temporary1426 startIndex>

3908:
old  <>
new  <	mov eax, [rbp + 161]>

3909:
old  < scanFormat$300:>
new  <	mov rbx, 4294967295>

3910:
old  <	; IntegralToIntegral Â£temporary1397 startIndex>
new  <	and rax, rbx>

3911:
old  <	mov eax, [rbp + 161]>
new  <>

3912:
old  <	mov rbx, 4294967295>
new  < scanFormat$300:>

3913:
old  <	and rax, rbx>
new  <	; BinaryAdd Â£temporary1428 format Â£temporary1426>

3914:
old  <>
new  <	mov rsi, [rbp + 24]>

3915:
old  < scanFormat$301:>
new  <	add rsi, rax>

3916:
old  <	; BinaryAdd Â£temporary1399 format Â£temporary1397>
new  <>

3917:
old  <	mov rsi, [rbp + 24]>
new  < scanFormat$301:>

3918:
old  <	add rsi, rax>
new  <	; Dereference Â£temporary1425 -> Â£temporary1428 Â£temporary1428 0>

3921:
old  <	; Dereference Â£temporary1396 -> Â£temporary1399 Â£temporary1399 0>
new  <	; Address Â£temporary1429 Â£temporary1425 -> Â£temporary1428>

3924:
old  <	; Address Â£temporary1400 Â£temporary1396 -> Â£temporary1399>
new  <	; Parameter pointer Â£temporary1429 197>

3925:
old  <>
new  <	mov [rbp + 197], rsi>

3926:
old  < scanFormat$304:>
new  <>

3927:
old  <	; Parameter pointer Â£temporary1400 197>
new  < scanFormat$304:>

3928:
old  <	mov [rbp + 197], rsi>
new  <	; Parameter signedint not 205>

3929:
old  <>
new  <	mov eax, [rbp + 157]>

3930:
old  < scanFormat$305:>
new  <	mov [rbp + 205], eax>

3931:
old  <	; Parameter signedint not 205>
new  <>

3932:
old  <	mov eax, [rbp + 157]>
new  < scanFormat$305:>

3933:
old  <	mov [rbp + 205], eax>
new  <	; Call scanPattern 165 0>

3934:
old  <>
new  <	mov qword [rbp + 165], scanFormat$306>

3935:
old  < scanFormat$306:>
new  <	mov [rbp + 173], rbp>

3936:
old  <	; Call scanPattern 165 0>
new  <	add rbp, 165>

3937:
old  <	mov qword [rbp + 165], scanFormat$307>
new  <	jmp scanPattern>

3938:
old  <	mov [rbp + 173], rbp>
new  <>

3939:
old  <	add rbp, 165>
new  < scanFormat$306:>

3940:
old  <	jmp scanPattern>
new  <	; PostCall 165>

3943:
old  <	; PostCall 165>
new  <	; Goto 330>

3944:
old  <>
new  <	jmp scanFormat$330>

3945:
old  < scanFormat$308:>
new  <>

3946:
old  <	; Goto 331>
new  < scanFormat$308:>

3947:
old  <	jmp scanFormat$331>
new  <	; BinaryAdd arg_list arg_list 8>

3948:
old  <>
new  <	add qword [rbp + 32], 8>

3949:
old  < scanFormat$309:>
new  <>

3950:
old  <	; BinaryAdd arg_list arg_list 8>
new  < scanFormat$309:>

3951:
old  <	add qword [rbp + 32], 8>
new  <	; BinarySubtract Â£temporary1433 arg_list 8>

3952:
old  <>
new  <	mov rsi, [rbp + 32]>

3953:
old  < scanFormat$310:>
new  <	sub rsi, 8>

3954:
old  <	; BinarySubtract Â£temporary1404 arg_list 8>
new  <>

3955:
old  <	mov rsi, [rbp + 32]>
new  < scanFormat$310:>

3956:
old  <	sub rsi, 8>
new  <	; IntegralToIntegral Â£temporary1435 Â£temporary1433>

3959:
old  <	; IntegralToIntegral Â£temporary1406 Â£temporary1404>
new  <	; Dereference Â£temporary1436 -> Â£temporary1435 Â£temporary1435 0>

3962:
old  <	; Dereference Â£temporary1407 -> Â£temporary1406 Â£temporary1406 0>
new  <	; Assign charsPtr Â£temporary1436 -> Â£temporary1435>

3963:
old  <>
new  <	mov rax, [rsi]>

3964:
old  < scanFormat$313:>
new  <	mov [rbp + 105], rax>

3965:
old  <	; Assign charsPtr Â£temporary1407 -> Â£temporary1406>
new  <>

3966:
old  <	mov rax, [rsi]>
new  < scanFormat$313:>

3967:
old  <	mov [rbp + 105], rax>
new  <	; Dereference Â£temporary1437 -> charsPtr charsPtr 0>

3968:
old  <>
new  <	mov rsi, [rbp + 105]>

3969:
old  < scanFormat$314:>
new  <>

3970:
old  <	; Dereference Â£temporary1408 -> charsPtr charsPtr 0>
new  < scanFormat$314:>

3971:
old  <	mov rsi, [rbp + 105]>
new  <	; Assign Â£temporary1437 -> charsPtr g_inChars>

3972:
old  <>
new  <	mov eax, [g_inChars]>

3973:
old  < scanFormat$315:>
new  <	mov [rsi], eax>

3974:
old  <	; Assign Â£temporary1408 -> charsPtr g_inChars>
new  <>

3975:
old  <	mov eax, [g_inChars]>
new  < scanFormat$315:>

3976:
old  <	mov [rsi], eax>
new  <	; Assign percent 0>

3977:
old  <>
new  <	mov dword [rbp + 49], 0>

3978:
old  < scanFormat$316:>
new  <>

3979:
old  <	; Assign percent 0>
new  < scanFormat$316:>

3980:
old  <	mov dword [rbp + 49], 0>
new  <	; Goto 330>

3981:
old  <>
new  <	jmp scanFormat$330>

3982:
old  < scanFormat$317:>
new  <>

3983:
old  <	; Goto 331>
new  < scanFormat$317:>

3984:
old  <	jmp scanFormat$331>
new  <	; PreCall 157 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3987:
old  <	; PreCall 157 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter pointer "scanFormat c = '%c'\n" 181>

3988:
old  <>
new  <	mov qword [rbp + 181], string_scanFormat20c203D202725c270A#>

3989:
old  < scanFormat$319:>
new  <>

3990:
old  <	; Parameter pointer "scanFormat c = '%c'\n" 181>
new  < scanFormat$319:>

3991:
old  <	mov qword [rbp + 181], string_scanFormat20c203D202725c270A#>
new  <	; IntegralToIntegral Â£temporary1438 c>

3992:
old  <>
new  <	mov al, [rbp + 40]>

3993:
old  < scanFormat$320:>
new  <	and eax, 255>

3994:
old  <	; IntegralToIntegral Â£temporary1409 c>
new  <	cmp al, 0>

3995:
old  <	mov al, [rbp + 40]>
new  <	jge scanFormat$320>

3996:
old  <	and eax, 255>
new  <	neg al>

3997:
old  <	cmp al, 0>
new  <	neg eax>

3998:
old  <	jge scanFormat$321>
new  <>

3999:
old  <	neg al>
new  < scanFormat$320:>

4000:
old  <	neg eax>
new  <	; Parameter signedint Â£temporary1438 189>

4001:
old  <>
new  <	mov [rbp + 189], eax>

4002:
old  < scanFormat$321:>
new  <>

4003:
old  <	; Parameter signedint Â£temporary1409 189>
new  < scanFormat$321:>

4004:
old  <	mov [rbp + 189], eax>
new  <	; Call printf 157 4>

4005:
old  <>
new  <	mov qword [rbp + 157], scanFormat$322>

4006:
old  < scanFormat$322:>
new  <	mov [rbp + 165], rbp>

4007:
old  <	; Call printf 157 4>
new  <	add rbp, 157>

4008:
old  <	mov qword [rbp + 157], scanFormat$323>
new  <	mov rdi, rbp>

4009:
old  <	mov [rbp + 165], rbp>
new  <	add rdi, 4>

4010:
old  <	add rbp, 157>
new  <	jmp printf>

4011:
old  <	mov rdi, rbp>
new  <>

4012:
old  <	add rdi, 4>
new  < scanFormat$322:>

4013:
old  <	jmp printf>
new  <	; PostCall 157>

4016:
old  <	; PostCall 157>
new  <	; Goto 330>

4017:
old  <>
new  <	jmp scanFormat$330>

4018:
old  < scanFormat$324:>
new  <>

4019:
old  <	; Goto 331>
new  < scanFormat$324:>

4020:
old  <	jmp scanFormat$331>
new  <	; NotEqual 330 c 37>

4021:
old  <>
new  <	cmp byte [rbp + 40], 37>

4022:
old  < scanFormat$325:>
new  <	jne scanFormat$330>

4023:
old  <	; NotEqual 331 c 37>
new  <>

4024:
old  <	cmp byte [rbp + 40], 37>
new  < scanFormat$325:>

4025:
old  <	jne scanFormat$331>
new  <	; Assign percent 1>

4026:
old  <>
new  <	mov dword [rbp + 49], 1>

4027:
old  < scanFormat$326:>
new  <>

4028:
old  <	; Assign percent 1>
new  < scanFormat$326:>

4029:
old  <	mov dword [rbp + 49], 1>
new  <	; Assign shortInt 0>

4030:
old  <>
new  <	mov dword [rbp + 53], 0>

4031:
old  < scanFormat$327:>
new  <>

4032:
old  <	; Assign shortInt 0>
new  < scanFormat$327:>

4033:
old  <	mov dword [rbp + 53], 0>
new  <	; Assign longIntOrDouble 0>

4034:
old  <>
new  <	mov dword [rbp + 57], 0>

4035:
old  < scanFormat$328:>
new  <>

4036:
old  <	; Assign longIntOrDouble 0>
new  < scanFormat$328:>

4037:
old  <	mov dword [rbp + 57], 0>
new  <	; Assign longDouble 0>

4038:
old  <>
new  <	mov dword [rbp + 61], 0>

4039:
old  < scanFormat$329:>
new  <>

4040:
old  <	; Assign longDouble 0>
new  < scanFormat$329:>

4041:
old  <	mov dword [rbp + 61], 0>
new  <	; Assign star 0>

4042:
old  <>
new  <	mov dword [rbp + 65], 0>

4043:
old  < scanFormat$330:>
new  <>

4044:
old  <	; Assign star 0>
new  < scanFormat$330:>

4045:
old  <	mov dword [rbp + 65], 0>
new  <	; BinaryAdd index index 1>

4046:
old  <>
new  <	inc dword [rbp + 93]>

4047:
old  < scanFormat$331:>
new  <>

4048:
old  <	; BinaryAdd index index 1>
new  < scanFormat$331:>

4049:
old  <	inc dword [rbp + 93]>
new  <	; Goto 8>

4050:
old  <>
new  <	jmp scanFormat$8>

4051:
old  < scanFormat$332:>
new  <>

4052:
old  <	; Goto 9>
new  < scanFormat$332:>

4053:
old  <	jmp scanFormat$9>
new  <	; Return g_inCount>

4054:
old  <>
new  <	mov ebx, [g_inCount]>

4055:
old  < scanFormat$333:>
new  <	mov rax, [rbp]>

4056:
old  <	; Return g_inCount>
new  <	mov rdi, [rbp + 16]>

4057:
old  <	mov ebx, [g_inCount]>
new  <	mov rbp, [rbp + 8]>

4058:
old  <	mov rax, [rbp]>
new  <	jmp rax>

4059:
old  <	mov rdi, [rbp + 16]>
new  <>

4060:
old  <	mov rbp, [rbp + 8]>
new  < scanFormat$333:>

4061:
old  <	jmp rax>
new  <	; FunctionEnd scanFormat>

4063:
old  < scanFormat$334:>
new  <section .text>

4064:
old  <	; FunctionEnd scanFormat>
new  <>

4065:
old  <>
new  < scanf:>

4066:
old  <section .text>
new  <	; Address Â£temporary1442 format>

4067:
old  <>
new  <	mov rsi, rbp>

4068:
old  < scanf:>
new  <	add rsi, 24>

4069:
old  <	; Empty>
new  <>

4070:
old  <>
new  < scanf$1:>

4071:
old  < scanf$1:>
new  <	; IntegralToIntegral Â£temporary1443 Â£temporary1442>

4072:
old  <	; Address Â£temporary1413 format>
new  <>

4073:
old  <	mov rsi, rbp>
new  < scanf$2:>

4074:
old  <	add rsi, 24>
new  <	; BinaryAdd arg_list Â£temporary1443 8>

4075:
old  <>
new  <	add rsi, 8>

4076:
old  < scanf$2:>
new  <	mov [rdi + 32], rsi>

4077:
old  <	; IntegralToIntegral Â£temporary1414 Â£temporary1413>
new  <>

4078:
old  <>
new  < scanf$3:>

4079:
old  < scanf$3:>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

4080:
old  <	; BinaryAdd arg_list Â£temporary1414 8>
new  <>

4081:
old  <	add rsi, 8>
new  < scanf$4:>

4082:
old  <	mov [rdi + 32], rsi>
new  <	; Parameter pointer format 64>

4083:
old  <>
new  <	mov rax, [rbp + 24]>

4084:
old  < scanf$4:>
new  <	mov [rdi + 64], rax>

4085:
old  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

4086:
old  <>
new  < scanf$5:>

4087:
old  < scanf$5:>
new  <	; Parameter pointer arg_list 72>

4088:
old  <	; Parameter pointer format 64>
new  <	mov rax, [rdi + 32]>

4089:
old  <	mov rax, [rbp + 24]>
new  <	mov [rdi + 72], rax>

4090:
old  <	mov [rdi + 64], rax>
new  <>

4091:
old  <>
new  < scanf$6:>

4092:
old  < scanf$6:>
new  <	; Call vscanf 40 0>

4093:
old  <	; Parameter pointer arg_list 72>
new  <	mov qword [rdi + 40], scanf$7>

4094:
old  <	mov rax, [rdi + 32]>
new  <	mov [rdi + 48], rbp>

4095:
old  <	mov [rdi + 72], rax>
new  <	mov [rdi + 56], rdi>

4096:
old  <>
new  <	add rdi, 40>

4097:
old  < scanf$7:>
new  <	mov rbp, rdi>

4098:
old  <	; Call vscanf 40 0>
new  <	jmp vscanf>

4099:
old  <	mov qword [rdi + 40], scanf$8>
new  <>

4100:
old  <	mov [rdi + 48], rbp>
new  < scanf$7:>

4101:
old  <	mov [rdi + 56], rdi>
new  <	; PostCall 40>

4102:
old  <	add rdi, 40>
new  <>

4103:
old  <	mov rbp, rdi>
new  < scanf$8:>

4104:
old  <	jmp vscanf>
new  <	; GetReturnValue Â£temporary1446>

4106:
old  < scanf$8:>
new  < scanf$9:>

4107:
old  <	; PostCall 40>
new  <	; Return Â£temporary1446>

4108:
old  <>
new  <	mov rax, [rbp]>

4109:
old  < scanf$9:>
new  <	mov rdi, [rbp + 16]>

4110:
old  <	; GetReturnValue Â£temporary1417>
new  <	mov rbp, [rbp + 8]>

4111:
old  <>
new  <	jmp rax>

4112:
old  < scanf$10:>
new  <>

4113:
old  <	; Return Â£temporary1417>
new  < scanf$10:>

4114:
old  <	mov rax, [rbp]>
new  <	; FunctionEnd scanf>

4115:
old  <	mov rdi, [rbp + 16]>
new  <>

4116:
old  <	mov rbp, [rbp + 8]>
new  <section .text>

4117:
old  <	jmp rax>
new  <>

4118:
old  <>
new  < vscanf:>

4119:
old  < scanf$11:>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

4120:
old  <	; FunctionEnd scanf>
new  <>

4121:
old  <>
new  < vscanf$1:>

4122:
old  <section .text>
new  <	; Parameter pointer stdin 64>

4123:
old  <>
new  <	mov rax, [stdin]>

4124:
old  < vscanf:>
new  <	mov [rbp + 64], rax>

4125:
old  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

4126:
old  <>
new  < vscanf$2:>

4127:
old  < vscanf$1:>
new  <	; Parameter pointer format 72>

4128:
old  <	; Parameter pointer stdin 64>
new  <	mov rax, [rbp + 24]>

4129:
old  <	mov rax, [stdin]>
new  <	mov [rbp + 72], rax>

4130:
old  <	mov [rbp + 64], rax>
new  <>

4131:
old  <>
new  < vscanf$3:>

4132:
old  < vscanf$2:>
new  <	; Parameter pointer arg_list 80>

4133:
old  <	; Parameter pointer format 72>
new  <	mov rax, [rbp + 32]>

4134:
old  <	mov rax, [rbp + 24]>
new  <	mov [rbp + 80], rax>

4135:
old  <	mov [rbp + 72], rax>
new  <>

4136:
old  <>
new  < vscanf$4:>

4137:
old  < vscanf$3:>
new  <	; Call vfscanf 40 0>

4138:
old  <	; Parameter pointer arg_list 80>
new  <	mov qword [rbp + 40], vscanf$5>

4139:
old  <	mov rax, [rbp + 32]>
new  <	mov [rbp + 48], rbp>

4140:
old  <	mov [rbp + 80], rax>
new  <	add rbp, 40>

4141:
old  <>
new  <	jmp vfscanf>

4142:
old  < vscanf$4:>
new  <>

4143:
old  <	; Call vfscanf 40 0>
new  < vscanf$5:>

4144:
old  <	mov qword [rbp + 40], vscanf$5>
new  <	; PostCall 40>

4145:
old  <	mov [rbp + 48], rbp>
new  <>

4146:
old  <	add rbp, 40>
new  < vscanf$6:>

4147:
old  <	jmp vfscanf>
new  <	; GetReturnValue Â£temporary1448>

4149:
old  < vscanf$5:>
new  < vscanf$7:>

4150:
old  <	; PostCall 40>
new  <	; Return Â£temporary1448>

4151:
old  <>
new  <	mov rax, [rbp]>

4152:
old  < vscanf$6:>
new  <	mov rdi, [rbp + 16]>

4153:
old  <	; GetReturnValue Â£temporary1419>
new  <	mov rbp, [rbp + 8]>

4154:
old  <>
new  <	jmp rax>

4155:
old  < vscanf$7:>
new  <>

4156:
old  <	; Return Â£temporary1419>
new  < vscanf$8:>

4157:
old  <	mov rax, [rbp]>
new  <	; FunctionEnd vscanf>

4158:
old  <	mov rdi, [rbp + 16]>
new  <>

4159:
old  <	mov rbp, [rbp + 8]>
new  <section .text>

4160:
old  <	jmp rax>
new  <>

4161:
old  <>
new  < fscanf:>

4162:
old  < vscanf$8:>
new  <	; Address Â£temporary1449 format>

4163:
old  <	; FunctionEnd vscanf>
new  <	mov rsi, rbp>

4164:
old  <>
new  <	add rsi, 32>

4165:
old  <section .text>
new  <>

4166:
old  <>
new  < fscanf$1:>

4167:
old  < fscanf:>
new  <	; IntegralToIntegral Â£temporary1450 Â£temporary1449>

4168:
old  <	; Empty>
new  <>

4169:
old  <>
new  < fscanf$2:>

4170:
old  < fscanf$1:>
new  <	; BinaryAdd arg_list Â£temporary1450 8>

4171:
old  <	; Address Â£temporary1420 format>
new  <	add rsi, 8>

4172:
old  <	mov rsi, rbp>
new  <	mov [rdi + 40], rsi>

4173:
old  <	add rsi, 32>
new  <>

4174:
old  <>
new  < fscanf$3:>

4175:
old  < fscanf$2:>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

4176:
old  <	; IntegralToIntegral Â£temporary1421 Â£temporary1420>
new  <>

4177:
old  <>
new  < fscanf$4:>

4178:
old  < fscanf$3:>
new  <	; Parameter pointer inStream 72>

4179:
old  <	; BinaryAdd arg_list Â£temporary1421 8>
new  <	mov rax, [rbp + 24]>

4180:
old  <	add rsi, 8>
new  <	mov [rdi + 72], rax>

4181:
old  <	mov [rdi + 40], rsi>
new  <>

4182:
old  <>
new  < fscanf$5:>

4183:
old  < fscanf$4:>
new  <	; Parameter pointer format 80>

4184:
old  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov rax, [rbp + 32]>

4185:
old  <>
new  <	mov [rdi + 80], rax>

4186:
old  < fscanf$5:>
new  <>

4187:
old  <	; Parameter pointer inStream 72>
new  < fscanf$6:>

4188:
old  <	mov rax, [rbp + 24]>
new  <	; Parameter pointer arg_list 88>

4189:
old  <	mov [rdi + 72], rax>
new  <	mov rax, [rdi + 40]>

4190:
old  <>
new  <	mov [rdi + 88], rax>

4191:
old  < fscanf$6:>
new  <>

4192:
old  <	; Parameter pointer format 80>
new  < fscanf$7:>

4193:
old  <	mov rax, [rbp + 32]>
new  <	; Call vfscanf 48 0>

4194:
old  <	mov [rdi + 80], rax>
new  <	mov qword [rdi + 48], fscanf$8>

4195:
old  <>
new  <	mov [rdi + 56], rbp>

4196:
old  < fscanf$7:>
new  <	mov [rdi + 64], rdi>

4197:
old  <	; Parameter pointer arg_list 88>
new  <	add rdi, 48>

4198:
old  <	mov rax, [rdi + 40]>
new  <	mov rbp, rdi>

4199:
old  <	mov [rdi + 88], rax>
new  <	jmp vfscanf>

4202:
old  <	; Call vfscanf 48 0>
new  <	; PostCall 48>

4203:
old  <	mov qword [rdi + 48], fscanf$9>
new  <>

4204:
old  <	mov [rdi + 56], rbp>
new  < fscanf$9:>

4205:
old  <	mov [rdi + 64], rdi>
new  <	; GetReturnValue Â£temporary1453>

4206:
old  <	add rdi, 48>
new  <>

4207:
old  <	mov rbp, rdi>
new  < fscanf$10:>

4208:
old  <	jmp vfscanf>
new  <	; Return Â£temporary1453>

4209:
old  <>
new  <	mov rax, [rbp]>

4210:
old  < fscanf$9:>
new  <	mov rdi, [rbp + 16]>

4211:
old  <	; PostCall 48>
new  <	mov rbp, [rbp + 8]>

4212:
old  <>
new  <	jmp rax>

4213:
old  < fscanf$10:>
new  <>

4214:
old  <	; GetReturnValue Â£temporary1424>
new  < fscanf$11:>

4215:
old  <>
new  <	; FunctionEnd fscanf>

4216:
old  < fscanf$11:>
new  <>

4217:
old  <	; Return Â£temporary1424>
new  <section .text>

4218:
old  <	mov rax, [rbp]>
new  <>

4219:
old  <	mov rdi, [rbp + 16]>
new  < vfscanf:>

4220:
old  <	mov rbp, [rbp + 8]>
new  <	; Assign g_inStatus 0>

4221:
old  <	jmp rax>
new  <	mov dword [g_inStatus], 0>

4223:
old  < fscanf$12:>
new  < vfscanf$1:>

4224:
old  <	; FunctionEnd fscanf>
new  <	; IntegralToIntegral Â£temporary1455 inStream>

4225:
old  <>
new  <	mov rax, [rbp + 24]>

4226:
old  <section .text>
new  <>

4227:
old  <>
new  < vfscanf$2:>

4228:
old  < vfscanf:>
new  <	; Assign g_inDevice Â£temporary1455>

4229:
old  <	; Assign g_inStatus 0>
new  <	mov [g_inDevice], rax>

4230:
old  <	mov dword [g_inStatus], 0>
new  <>

4231:
old  <>
new  < vfscanf$3:>

4232:
old  < vfscanf$1:>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

4233:
old  <	; IntegralToIntegral Â£temporary1426 inStream>
new  <>

4234:
old  <	mov rax, [rbp + 24]>
new  < vfscanf$4:>

4235:
old  <>
new  <	; Parameter pointer format 72>

4236:
old  < vfscanf$2:>
new  <	mov rax, [rbp + 32]>

4237:
old  <	; Assign g_inDevice Â£temporary1426>
new  <	mov [rbp + 72], rax>

4238:
old  <	mov [g_inDevice], rax>
new  <>

4239:
old  <>
new  < vfscanf$5:>

4240:
old  < vfscanf$3:>
new  <	; Parameter pointer arg_list 80>

4241:
old  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov rax, [rbp + 40]>

4242:
old  <>
new  <	mov [rbp + 80], rax>

4243:
old  < vfscanf$4:>
new  <>

4244:
old  <	; Parameter pointer format 72>
new  < vfscanf$6:>

4245:
old  <	mov rax, [rbp + 32]>
new  <	; Call scanFormat 48 0>

4246:
old  <	mov [rbp + 72], rax>
new  <	mov qword [rbp + 48], vfscanf$7>

4247:
old  <>
new  <	mov [rbp + 56], rbp>

4248:
old  < vfscanf$5:>
new  <	add rbp, 48>

4249:
old  <	; Parameter pointer arg_list 80>
new  <	jmp scanFormat>

4250:
old  <	mov rax, [rbp + 40]>
new  <>

4251:
old  <	mov [rbp + 80], rax>
new  < vfscanf$7:>

4252:
old  <>
new  <	; PostCall 48>

4253:
old  < vfscanf$6:>
new  <>

4254:
old  <	; Call scanFormat 48 0>
new  < vfscanf$8:>

4255:
old  <	mov qword [rbp + 48], vfscanf$7>
new  <	; GetReturnValue Â£temporary1456>

4256:
old  <	mov [rbp + 56], rbp>
new  <>

4257:
old  <	add rbp, 48>
new  < vfscanf$9:>

4258:
old  <	jmp scanFormat>
new  <	; Return Â£temporary1456>

4259:
old  <>
new  <	mov rax, [rbp]>

4260:
old  < vfscanf$7:>
new  <	mov rdi, [rbp + 16]>

4261:
old  <	; PostCall 48>
new  <	mov rbp, [rbp + 8]>

4262:
old  <>
new  <	jmp rax>

4263:
old  < vfscanf$8:>
new  <>

4264:
old  <	; GetReturnValue Â£temporary1427>
new  < vfscanf$10:>

4265:
old  <>
new  <	; FunctionEnd vfscanf>

4266:
old  < vfscanf$9:>
new  <>

4267:
old  <	; Return Â£temporary1427>
new  <section .text>

4268:
old  <	mov rax, [rbp]>
new  <>

4269:
old  <	mov rdi, [rbp + 16]>
new  < sscanf:>

4270:
old  <	mov rbp, [rbp + 8]>
new  <	; Address Â£temporary1457 format>

4271:
old  <	jmp rax>
new  <	mov rsi, rbp>

4272:
old  <>
new  <	add rsi, 32>

4273:
old  < vfscanf$10:>
new  <>

4274:
old  <	; FunctionEnd vfscanf>
new  < sscanf$1:>

4275:
old  <>
new  <	; IntegralToIntegral Â£temporary1458 Â£temporary1457>

4276:
old  <section .text>
new  <>

4277:
old  <>
new  < sscanf$2:>

4278:
old  < sscanf:>
new  <	; BinaryAdd arg_list Â£temporary1458 8>

4279:
old  <	; Empty>
new  <	add rsi, 8>

4280:
old  <>
new  <	mov [rdi + 40], rsi>

4281:
old  < sscanf$1:>
new  <>

4282:
old  <	; Address Â£temporary1428 format>
new  < sscanf$3:>

4283:
old  <	mov rsi, rbp>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

4284:
old  <	add rsi, 32>
new  <>

4285:
old  <>
new  < sscanf$4:>

4286:
old  < sscanf$2:>
new  <	; Parameter pointer inString 72>

4287:
old  <	; IntegralToIntegral Â£temporary1429 Â£temporary1428>
new  <	mov rax, [rbp + 24]>

4288:
old  <>
new  <	mov [rdi + 72], rax>

4289:
old  < sscanf$3:>
new  <>

4290:
old  <	; BinaryAdd arg_list Â£temporary1429 8>
new  < sscanf$5:>

4291:
old  <	add rsi, 8>
new  <	; Parameter pointer format 80>

4292:
old  <	mov [rdi + 40], rsi>
new  <	mov rax, [rbp + 32]>

4293:
old  <>
new  <	mov [rdi + 80], rax>

4294:
old  < sscanf$4:>
new  <>

4295:
old  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < sscanf$6:>

4296:
old  <>
new  <	; Parameter pointer arg_list 88>

4297:
old  < sscanf$5:>
new  <	mov rax, [rdi + 40]>

4298:
old  <	; Parameter pointer inString 72>
new  <	mov [rdi + 88], rax>

4299:
old  <	mov rax, [rbp + 24]>
new  <>

4300:
old  <	mov [rdi + 72], rax>
new  < sscanf$7:>

4301:
old  <>
new  <	; Call vsscanf 48 0>

4302:
old  < sscanf$6:>
new  <	mov qword [rdi + 48], sscanf$8>

4303:
old  <	; Parameter pointer format 80>
new  <	mov [rdi + 56], rbp>

4304:
old  <	mov rax, [rbp + 32]>
new  <	mov [rdi + 64], rdi>

4305:
old  <	mov [rdi + 80], rax>
new  <	add rdi, 48>

4306:
old  <>
new  <	mov rbp, rdi>

4307:
old  < sscanf$7:>
new  <	jmp vsscanf>

4308:
old  <	; Parameter pointer arg_list 88>
new  <>

4309:
old  <	mov rax, [rdi + 40]>
new  < sscanf$8:>

4310:
old  <	mov [rdi + 88], rax>
new  <	; PostCall 48>

4312:
old  < sscanf$8:>
new  < sscanf$9:>

4313:
old  <	; Call vsscanf 48 0>
new  <	; GetReturnValue Â£temporary1461>

4314:
old  <	mov qword [rdi + 48], sscanf$9>
new  <>

4315:
old  <	mov [rdi + 56], rbp>
new  < sscanf$10:>

4316:
old  <	mov [rdi + 64], rdi>
new  <	; Return Â£temporary1461>

4317:
old  <	add rdi, 48>
new  <	mov rax, [rbp]>

4318:
old  <	mov rbp, rdi>
new  <	mov rdi, [rbp + 16]>

4319:
old  <	jmp vsscanf>
new  <	mov rbp, [rbp + 8]>

4320:
old  <>
new  <	jmp rax>

4321:
old  < sscanf$9:>
new  <>

4322:
old  <	; PostCall 48>
new  < sscanf$11:>

4323:
old  <>
new  <	; FunctionEnd sscanf>

4324:
old  < sscanf$10:>
new  <>

4325:
old  <	; GetReturnValue Â£temporary1432>
new  <section .text>

4327:
old  < sscanf$11:>
new  < vsscanf:>

4328:
old  <	; Return Â£temporary1432>
new  <	; Assign g_inStatus 1>

4329:
old  <	mov rax, [rbp]>
new  <	mov dword [g_inStatus], 1>

4330:
old  <	mov rdi, [rbp + 16]>
new  <>

4331:
old  <	mov rbp, [rbp + 8]>
new  < vsscanf$1:>

4332:
old  <	jmp rax>
new  <	; IntegralToIntegral Â£temporary1463 inString>

4333:
old  <>
new  <	mov rax, [rbp + 24]>

4334:
old  < sscanf$12:>
new  <>

4335:
old  <	; FunctionEnd sscanf>
new  < vsscanf$2:>

4336:
old  <>
new  <	; Assign g_inDevice Â£temporary1463>

4337:
old  <section .text>
new  <	mov [g_inDevice], rax>

4339:
old  < vsscanf:>
new  < vsscanf$3:>

4340:
old  <	; Assign g_inStatus 1>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

4341:
old  <	mov dword [g_inStatus], 1>
new  <>

4342:
old  <>
new  < vsscanf$4:>

4343:
old  < vsscanf$1:>
new  <	; Parameter pointer format 72>

4344:
old  <	; IntegralToIntegral Â£temporary1434 inString>
new  <	mov rax, [rbp + 32]>

4345:
old  <	mov rax, [rbp + 24]>
new  <	mov [rbp + 72], rax>

4347:
old  < vsscanf$2:>
new  < vsscanf$5:>

4348:
old  <	; Assign g_inDevice Â£temporary1434>
new  <	; Parameter pointer arg_list 80>

4349:
old  <	mov [g_inDevice], rax>
new  <	mov rax, [rbp + 40]>

4350:
old  <>
new  <	mov [rbp + 80], rax>

4351:
old  < vsscanf$3:>
new  <>

4352:
old  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < vsscanf$6:>

4353:
old  <>
new  <	; Call scanFormat 48 0>

4354:
old  < vsscanf$4:>
new  <	mov qword [rbp + 48], vsscanf$7>

4355:
old  <	; Parameter pointer format 72>
new  <	mov [rbp + 56], rbp>

4356:
old  <	mov rax, [rbp + 32]>
new  <	add rbp, 48>

4357:
old  <	mov [rbp + 72], rax>
new  <	jmp scanFormat>

4359:
old  < vsscanf$5:>
new  < vsscanf$7:>

4360:
old  <	; Parameter pointer arg_list 80>
new  <	; PostCall 48>

4361:
old  <	mov rax, [rbp + 40]>
new  <>

4362:
old  <	mov [rbp + 80], rax>
new  < vsscanf$8:>

4363:
old  <>
new  <	; GetReturnValue Â£temporary1464>

4364:
old  < vsscanf$6:>
new  <>

4365:
old  <	; Call scanFormat 48 0>
new  < vsscanf$9:>

4366:
old  <	mov qword [rbp + 48], vsscanf$7>
new  <	; Return Â£temporary1464>

4367:
old  <	mov [rbp + 56], rbp>
new  <	mov rax, [rbp]>

4368:
old  <	add rbp, 48>
new  <	mov rdi, [rbp + 16]>

4369:
old  <	jmp scanFormat>
new  <	mov rbp, [rbp + 8]>

4370:
old  <>
new  <	jmp rax>

4371:
old  < vsscanf$7:>
new  <>

4372:
old  <	; PostCall 48>
new  < vsscanf$10:>

4373:
old  <>
new  <	; FunctionEnd vsscanf>

18:
old  <	global testY>
new  <	global printArgument>

19:
old  <	global testX>
new  <	global printFormat>

20:
old  <	global printArgument>
new  <	global printf>

21:
old  <	global printFormat>
new  <	global vprintf>

22:
old  <	global printf>
new  <	global fprintf>

23:
old  <	global vprintf>
new  <	global vfprintf>

24:
old  <	global fprintf>
new  <	global sprintf>

25:
old  <	global vfprintf>
new  <	global vsprintf>

26:
old  <	global sprintf>
new  <>

27:
old  <	global vsprintf>
new  <	extern stdout>

28:
old  <>
new  <	extern log10>

29:
old  <	extern stdout>
new  <	extern pow>

30:
old  <	extern log10>
new  <	extern labs>

31:
old  <	extern pow>
new  <	extern isupper>

32:
old  <	extern labs>
new  <	extern fabs>

33:
old  <	extern isupper>
new  <	extern tolower>

34:
old  <	extern fabs>
new  <	extern isdigit>

35:
old  <	extern tolower>
new  <	extern $StackTop>

36:
old  <	extern isdigit>
new  <>

37:
old  <	extern $StackTop>
new  <>

38:
old  <>
new  <section .data>

40:
old  <section .data>
new  <g_outStatus:>

41:
old  <>
new  <	; InitializerZero 4>

42:
old  <g_outStatus:>
new  <	times 4 db 0>

43:
old  <	; InitializerZero 4>
new  <>

44:
old  <	times 4 db 0>
new  <section .data>

46:
old  <section .data>
new  <g_outChars:>

47:
old  <>
new  <	; InitializerZero 4>

48:
old  <g_outChars:>
new  <	times 4 db 0>

49:
old  <	; InitializerZero 4>
new  <>

50:
old  <	times 4 db 0>
new  <section .data>

52:
old  <section .data>
new  <g_outDevice:>

53:
old  <>
new  <	; InitializerZero 8>

54:
old  <g_outDevice:>
new  <	times 8 db 0>

55:
old  <	; InitializerZero 8>
new  <>

56:
old  <	times 8 db 0>
new  <section .text>

58:
old  <section .text>
new  < putc:>

59:
old  <>
new  <	; Assign g_outStatus 0>

60:
old  < putc:>
new  <	mov dword [g_outStatus], 0>

61:
old  <	; Assign g_outStatus 0>
new  <>

62:
old  <	mov dword [g_outStatus], 0>
new  < putc$1:>

63:
old  <>
new  <	; IntegralToIntegral Â£temporary1465 stream>

64:
old  < putc$1:>
new  <	mov rax, [rbp + 28]>

65:
old  <	; IntegralToIntegral Â£temporary1436 stream>
new  <>

66:
old  <	mov rax, [rbp + 28]>
new  < putc$2:>

67:
old  <>
new  <	; Assign g_outDevice Â£temporary1465>

68:
old  < putc$2:>
new  <	mov [g_outDevice], rax>

69:
old  <	; Assign g_outDevice Â£temporary1436>
new  <>

70:
old  <	mov [g_outDevice], rax>
new  < putc$3:>

71:
old  <>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

72:
old  < putc$3:>
new  <>

73:
old  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < putc$4:>

74:
old  <>
new  <	; IntegralToIntegral Â£temporary1466 i>

75:
old  < putc$4:>
new  <	mov eax, [rbp + 24]>

76:
old  <	; IntegralToIntegral Â£temporary1437 i>
new  <	cmp eax, 0>

77:
old  <	mov eax, [rbp + 24]>
new  <	jge putc$5>

78:
old  <	cmp eax, 0>
new  <	neg eax>

79:
old  <	jge putc$5>
new  <	neg al>

80:
old  <	neg eax>
new  <>

81:
old  <	neg al>
new  < putc$5:>

82:
old  <>
new  <	; Parameter signedchar Â£temporary1466 60>

83:
old  < putc$5:>
new  <	mov [rbp + 60], al>

84:
old  <	; Parameter signedchar Â£temporary1437 60>
new  <>

85:
old  <	mov [rbp + 60], al>
new  < putc$6:>

86:
old  <>
new  <	; Call printChar 36 0>

87:
old  < putc$6:>
new  <	mov qword [rbp + 36], putc$7>

88:
old  <	; Call printChar 36 0>
new  <	mov [rbp + 44], rbp>

89:
old  <	mov qword [rbp + 36], putc$7>
new  <	add rbp, 36>

90:
old  <	mov [rbp + 44], rbp>
new  <	jmp printChar>

91:
old  <	add rbp, 36>
new  <>

92:
old  <	jmp printChar>
new  < putc$7:>

93:
old  <>
new  <	; PostCall 36>

94:
old  < putc$7:>
new  <>

95:
old  <	; PostCall 36>
new  < putc$8:>

96:
old  <>
new  <	; Return 1>

97:
old  < putc$8:>
new  <	mov ebx, 1>

98:
old  <	; Return 1>
new  <	mov rax, [rbp]>

99:
old  <	mov ebx, 1>
new  <	mov rdi, [rbp + 16]>

100:
old  <	mov rax, [rbp]>
new  <	mov rbp, [rbp + 8]>

101:
old  <	mov rdi, [rbp + 16]>
new  <	jmp rax>

102:
old  <	mov rbp, [rbp + 8]>
new  <>

103:
old  <	jmp rax>
new  < putc$9:>

104:
old  <>
new  <	; FunctionEnd putc>

105:
old  < putc$9:>
new  <>

106:
old  <	; FunctionEnd putc>
new  <section .text>

108:
old  <section .text>
new  < fputc:>

109:
old  <>
new  <	; Assign g_outStatus 0>

110:
old  < fputc:>
new  <	mov dword [g_outStatus], 0>

111:
old  <	; Assign g_outStatus 0>
new  <>

112:
old  <	mov dword [g_outStatus], 0>
new  < fputc$1:>

113:
old  <>
new  <	; IntegralToIntegral Â£temporary1468 stream>

114:
old  < fputc$1:>
new  <	mov rax, [rbp + 28]>

115:
old  <	; IntegralToIntegral Â£temporary1439 stream>
new  <>

116:
old  <	mov rax, [rbp + 28]>
new  < fputc$2:>

117:
old  <>
new  <	; Assign g_outDevice Â£temporary1468>

118:
old  < fputc$2:>
new  <	mov [g_outDevice], rax>

119:
old  <	; Assign g_outDevice Â£temporary1439>
new  <>

120:
old  <	mov [g_outDevice], rax>
new  < fputc$3:>

121:
old  <>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

122:
old  < fputc$3:>
new  <>

123:
old  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < fputc$4:>

124:
old  <>
new  <	; IntegralToIntegral Â£temporary1469 i>

125:
old  < fputc$4:>
new  <	mov eax, [rbp + 24]>

126:
old  <	; IntegralToIntegral Â£temporary1440 i>
new  <	cmp eax, 0>

127:
old  <	mov eax, [rbp + 24]>
new  <	jge fputc$5>

128:
old  <	cmp eax, 0>
new  <	neg eax>

129:
old  <	jge fputc$5>
new  <	neg al>

130:
old  <	neg eax>
new  <>

131:
old  <	neg al>
new  < fputc$5:>

132:
old  <>
new  <	; Parameter signedchar Â£temporary1469 60>

133:
old  < fputc$5:>
new  <	mov [rbp + 60], al>

134:
old  <	; Parameter signedchar Â£temporary1440 60>
new  <>

135:
old  <	mov [rbp + 60], al>
new  < fputc$6:>

136:
old  <>
new  <	; Call printChar 36 0>

137:
old  < fputc$6:>
new  <	mov qword [rbp + 36], fputc$7>

138:
old  <	; Call printChar 36 0>
new  <	mov [rbp + 44], rbp>

139:
old  <	mov qword [rbp + 36], fputc$7>
new  <	add rbp, 36>

140:
old  <	mov [rbp + 44], rbp>
new  <	jmp printChar>

141:
old  <	add rbp, 36>
new  <>

142:
old  <	jmp printChar>
new  < fputc$7:>

143:
old  <>
new  <	; PostCall 36>

144:
old  < fputc$7:>
new  <>

145:
old  <	; PostCall 36>
new  < fputc$8:>

146:
old  <>
new  <	; Return 1>

147:
old  < fputc$8:>
new  <	mov ebx, 1>

148:
old  <	; Return 1>
new  <	mov rax, [rbp]>

149:
old  <	mov ebx, 1>
new  <	mov rdi, [rbp + 16]>

150:
old  <	mov rax, [rbp]>
new  <	mov rbp, [rbp + 8]>

151:
old  <	mov rdi, [rbp + 16]>
new  <	jmp rax>

152:
old  <	mov rbp, [rbp + 8]>
new  <>

153:
old  <	jmp rax>
new  < fputc$9:>

154:
old  <>
new  <	; FunctionEnd fputc>

155:
old  < fputc$9:>
new  <>

156:
old  <	; FunctionEnd fputc>
new  <section .text>

158:
old  <section .text>
new  < putchar:>

159:
old  <>
new  <	; Assign g_outStatus 0>

160:
old  < putchar:>
new  <	mov dword [g_outStatus], 0>

161:
old  <	; Assign g_outStatus 0>
new  <>

162:
old  <	mov dword [g_outStatus], 0>
new  < putchar$1:>

163:
old  <>
new  <	; IntegralToIntegral Â£temporary1471 stdout>

164:
old  < putchar$1:>
new  <	mov rax, [stdout]>

165:
old  <	; IntegralToIntegral Â£temporary1442 stdout>
new  <>

166:
old  <	mov rax, [stdout]>
new  < putchar$2:>

167:
old  <>
new  <	; Assign g_outDevice Â£temporary1471>

168:
old  < putchar$2:>
new  <	mov [g_outDevice], rax>

169:
old  <	; Assign g_outDevice Â£temporary1442>
new  <>

170:
old  <	mov [g_outDevice], rax>
new  < putchar$3:>

171:
old  <>
new  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

172:
old  < putchar$3:>
new  <>

173:
old  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < putchar$4:>

174:
old  <>
new  <	; IntegralToIntegral Â£temporary1472 i>

175:
old  < putchar$4:>
new  <	mov eax, [rbp + 24]>

176:
old  <	; IntegralToIntegral Â£temporary1443 i>
new  <	cmp eax, 0>

177:
old  <	mov eax, [rbp + 24]>
new  <	jge putchar$5>

178:
old  <	cmp eax, 0>
new  <	neg eax>

179:
old  <	jge putchar$5>
new  <	neg al>

180:
old  <	neg eax>
new  <>

181:
old  <	neg al>
new  < putchar$5:>

182:
old  <>
new  <	; Parameter signedchar Â£temporary1472 52>

183:
old  < putchar$5:>
new  <	mov [rbp + 52], al>

184:
old  <	; Parameter signedchar Â£temporary1443 52>
new  <>

185:
old  <	mov [rbp + 52], al>
new  < putchar$6:>

186:
old  <>
new  <	; Call printChar 28 0>

187:
old  < putchar$6:>
new  <	mov qword [rbp + 28], putchar$7>

188:
old  <	; Call printChar 28 0>
new  <	mov [rbp + 36], rbp>

189:
old  <	mov qword [rbp + 28], putchar$7>
new  <	add rbp, 28>

190:
old  <	mov [rbp + 36], rbp>
new  <	jmp printChar>

191:
old  <	add rbp, 28>
new  <>

192:
old  <	jmp printChar>
new  < putchar$7:>

193:
old  <>
new  <	; PostCall 28>

194:
old  < putchar$7:>
new  <>

195:
old  <	; PostCall 28>
new  < putchar$8:>

196:
old  <>
new  <	; Return 1>

197:
old  < putchar$8:>
new  <	mov ebx, 1>

198:
old  <	; Return 1>
new  <	mov rax, [rbp]>

199:
old  <	mov ebx, 1>
new  <	mov rdi, [rbp + 16]>

200:
old  <	mov rax, [rbp]>
new  <	mov rbp, [rbp + 8]>

201:
old  <	mov rdi, [rbp + 16]>
new  <	jmp rax>

202:
old  <	mov rbp, [rbp + 8]>
new  <>

203:
old  <	jmp rax>
new  < putchar$9:>

204:
old  <>
new  <	; FunctionEnd putchar>

205:
old  < putchar$9:>
new  <>

206:
old  <	; FunctionEnd putchar>
new  <section .text>

208:
old  <section .text>
new  < printChar:>

209:
old  <>
new  <	; Case 5 g_outStatus 0>

210:
old  < printChar:>
new  <	mov eax, [g_outStatus]>

211:
old  <	; Empty>
new  <	cmp eax, 0>

212:
old  <>
new  <	je printChar$5>

213:
old  < printChar$1:>
new  <>

214:
old  <	; Case 6 g_outStatus 0>
new  < printChar$1:>

215:
old  <	mov eax, [g_outStatus]>
new  <	; Case 18 g_outStatus 1>

216:
old  <	cmp eax, 0>
new  <	cmp eax, 1>

217:
old  <	je printChar$6>
new  <	je printChar$18>

220:
old  <	; Case 19 g_outStatus 1>
new  <	; Case 27 g_outStatus 2>

221:
old  <	cmp eax, 1>
new  <	cmp eax, 2>

222:
old  <	je printChar$19>
new  <	je printChar$27>

225:
old  <	; Case 28 g_outStatus 2>
new  <	; CaseEnd g_outStatus>

226:
old  <	cmp eax, 2>
new  <>

227:
old  <	je printChar$28>
new  < printChar$4:>

228:
old  <>
new  <	; Goto 28>

229:
old  < printChar$4:>
new  <	jmp printChar$28>

230:
old  <	; CaseEnd g_outStatus>
new  <>

231:
old  <>
new  < printChar$5:>

232:
old  < printChar$5:>
new  <	; IntegralToIntegral Â£temporary1474 g_outDevice>

233:
old  <	; Goto 29>
new  <	mov rax, [g_outDevice]>

234:
old  <	jmp printChar$29>
new  <>

235:
old  <>
new  < printChar$6:>

236:
old  < printChar$6:>
new  <	; Assign stream Â£temporary1474>

237:
old  <	; IntegralToIntegral Â£temporary1445 g_outDevice>
new  <	mov [rbp + 37], rax>

238:
old  <	mov rax, [g_outDevice]>
new  <>

239:
old  <>
new  < printChar$7:>

240:
old  < printChar$7:>
new  <	; AssignRegister rax 1>

241:
old  <	; Assign stream Â£temporary1445>
new  <	mov rax, 1>

242:
old  <	mov [rbp + 37], rax>
new  <>

243:
old  <>
new  < printChar$8:>

244:
old  < printChar$8:>
new  <	; Dereference Â£temporary1477 -> stream stream 0>

245:
old  <	; AssignRegister rax 1>
new  <	mov rsi, [rbp + 37]>

246:
old  <	mov rax, 1>
new  <>

247:
old  <>
new  < printChar$9:>

248:
old  < printChar$9:>
new  <	; IntegralToIntegral Â£temporary1478 Â£temporary1477 -> stream>

249:
old  <	; Dereference Â£temporary1448 -> stream stream 0>
new  <	mov edi, [rsi + 4]>

250:
old  <	mov rsi, [rbp + 37]>
new  <	mov rbx, 4294967295>

251:
old  <>
new  <	and rdi, rbx>

252:
old  < printChar$10:>
new  <>

253:
old  <	; IntegralToIntegral Â£temporary1449 Â£temporary1448 -> stream>
new  < printChar$10:>

254:
old  <	mov edi, [rsi + 4]>
new  <	; AssignRegister rdi Â£temporary1478>

255:
old  <	mov rbx, 4294967295>
new  <>

256:
old  <	and rdi, rbx>
new  < printChar$11:>

257:
old  <>
new  <	; Address Â£temporary1480 c>

258:
old  < printChar$11:>
new  <	mov rsi, rbp>

259:
old  <	; AssignRegister rdi Â£temporary1449>
new  <	add rsi, 24>

262:
old  <	; Address Â£temporary1451 c>
new  <	; IntegralToIntegral Â£temporary1481 Â£temporary1480>

263:
old  <	mov rsi, rbp>
new  <>

264:
old  <	add rsi, 24>
new  < printChar$13:>

265:
old  <>
new  <	; AssignRegister rsi Â£temporary1481>

266:
old  < printChar$13:>
new  <>

267:
old  <	; IntegralToIntegral Â£temporary1452 Â£temporary1451>
new  < printChar$14:>

268:
old  <>
new  <	; AssignRegister rdx 1>

269:
old  < printChar$14:>
new  <	mov rdx, 1>

270:
old  <	; AssignRegister rsi Â£temporary1452>
new  <>

271:
old  <>
new  < printChar$15:>

272:
old  < printChar$15:>
new  <	; SysCall>

273:
old  <	; AssignRegister rdx 1>
new  <	syscall>

274:
old  <	mov rdx, 1>
new  <>

275:
old  <>
new  < printChar$16:>

276:
old  < printChar$16:>
new  <	; BinaryAdd g_outChars g_outChars 1>

277:
old  <	; SysCall>
new  <	inc dword [g_outChars]>

278:
old  <	syscall>
new  <>

279:
old  <>
new  < printChar$17:>

280:
old  < printChar$17:>
new  <	; Goto 28>

281:
old  <	; BinaryAdd g_outChars g_outChars 1>
new  <	jmp printChar$28>

282:
old  <	inc dword [g_outChars]>
new  <>

283:
old  <>
new  < printChar$18:>

284:
old  < printChar$18:>
new  <	; IntegralToIntegral Â£temporary1484 g_outDevice>

285:
old  <	; Goto 29>
new  <	mov rax, [g_outDevice]>

286:
old  <	jmp printChar$29>
new  <>

287:
old  <>
new  < printChar$19:>

288:
old  < printChar$19:>
new  <	; Assign outString Â£temporary1484>

289:
old  <	; IntegralToIntegral Â£temporary1455 g_outDevice>
new  <	mov [rbp + 29], rax>

290:
old  <	mov rax, [g_outDevice]>
new  <>

291:
old  <>
new  < printChar$20:>

292:
old  < printChar$20:>
new  <	; Assign Â£temporary1485 g_outChars>

293:
old  <	; Assign outString Â£temporary1455>
new  <	mov eax, [g_outChars]>

294:
old  <	mov [rbp + 29], rax>
new  <>

295:
old  <>
new  < printChar$21:>

296:
old  < printChar$21:>
new  <	; BinaryAdd g_outChars g_outChars 1>

297:
old  <	; Assign Â£temporary1456 g_outChars>
new  <	inc dword [g_outChars]>

298:
old  <	mov eax, [g_outChars]>
new  <>

299:
old  <>
new  < printChar$22:>

300:
old  < printChar$22:>
new  <	; IntegralToIntegral Â£temporary1487 Â£temporary1485>

301:
old  <	; BinaryAdd g_outChars g_outChars 1>
new  <	mov rbx, 4294967295>

302:
old  <	inc dword [g_outChars]>
new  <	and rax, rbx>

305:
old  <	; IntegralToIntegral Â£temporary1458 Â£temporary1456>
new  <	; BinaryAdd Â£temporary1489 outString Â£temporary1487>

306:
old  <	mov rbx, 4294967295>
new  <	mov rsi, [rbp + 29]>

307:
old  <	and rax, rbx>
new  <	add rsi, rax>

310:
old  <	; BinaryAdd Â£temporary1460 outString Â£temporary1458>
new  <	; Dereference Â£temporary1486 -> Â£temporary1489 Â£temporary1489 0>

311:
old  <	mov rsi, [rbp + 29]>
new  <>

312:
old  <	add rsi, rax>
new  < printChar$25:>

313:
old  <>
new  <	; Assign Â£temporary1486 -> Â£temporary1489 c>

314:
old  < printChar$25:>
new  <	mov al, [rbp + 24]>

315:
old  <	; Dereference Â£temporary1457 -> Â£temporary1460 Â£temporary1460 0>
new  <	mov [rsi], al>

318:
old  <	; Assign Â£temporary1457 -> Â£temporary1460 c>
new  <	; Goto 28>

319:
old  <	mov al, [rbp + 24]>
new  <	jmp printChar$28>

320:
old  <	mov [rsi], al>
new  <>

321:
old  <>
new  < printChar$27:>

322:
old  < printChar$27:>
new  <	; BinaryAdd g_outChars g_outChars 1>

323:
old  <	; Goto 29>
new  <	inc dword [g_outChars]>

324:
old  <	jmp printChar$29>
new  <>

325:
old  <>
new  < printChar$28:>

326:
old  < printChar$28:>
new  <	; Return>

327:
old  <	; BinaryAdd g_outChars g_outChars 1>
new  <	mov rax, [rbp]>

328:
old  <	inc dword [g_outChars]>
new  <	mov rdi, [rbp + 16]>

329:
old  <>
new  <	mov rbp, [rbp + 8]>

330:
old  < printChar$29:>
new  <	jmp rax>

331:
old  <	; Return>
new  <>

332:
old  <	mov rax, [rbp]>
new  < printChar$29:>

333:
old  <	mov rdi, [rbp + 16]>
new  <	; FunctionEnd printChar>

334:
old  <	mov rbp, [rbp + 8]>
new  <>

335:
old  <	jmp rax>
new  <section .text>

337:
old  < printChar$30:>
new  < printString:>

338:
old  <	; FunctionEnd printChar>
new  <	; Equal 33 s 0>

339:
old  <>
new  <	cmp qword [rbp + 24], 0>

340:
old  <section .text>
new  <	je printString$33>

342:
old  < printString:>
new  < printString$1:>

343:
old  <	; Equal 33 s 0>
new  <	; NotEqual 16 precision 0>

344:
old  <	cmp qword [rbp + 24], 0>
new  <	cmp dword [rbp + 32], 0>

345:
old  <	je printString$33>
new  <	jne printString$16>

347:
old  < printString$1:>
new  < printString$2:>

348:
old  <	; NotEqual 16 precision 0>
new  <	; Assign index 0>

349:
old  <	cmp dword [rbp + 32], 0>
new  <	mov dword [rbp + 36], 0>

350:
old  <	jne printString$16>
new  <>

351:
old  <>
new  < printString$3:>

352:
old  < printString$2:>
new  <	; IntegralToIntegral Â£temporary1495 index>

353:
old  <	; Assign index 0>
new  <	mov eax, [rbp + 36]>

354:
old  <	mov dword [rbp + 36], 0>
new  <	mov rbx, 4294967295>

355:
old  <>
new  <	and rax, rbx>

356:
old  < printString$3:>
new  <>

357:
old  <	; IntegralToIntegral Â£temporary1466 index>
new  < printString$4:>

358:
old  <	mov eax, [rbp + 36]>
new  <	; BinaryAdd Â£temporary1497 s Â£temporary1495>

359:
old  <	mov rbx, 4294967295>
new  <	mov rsi, [rbp + 24]>

360:
old  <	and rax, rbx>
new  <	add rsi, rax>

362:
old  < printString$4:>
new  < printString$5:>

363:
old  <	; BinaryAdd Â£temporary1468 s Â£temporary1466>
new  <	; Dereference Â£temporary1494 -> Â£temporary1497 Â£temporary1497 0>

364:
old  <	mov rsi, [rbp + 24]>
new  <>

365:
old  <	add rsi, rax>
new  < printString$6:>

366:
old  <>
new  <	; Equal 57 Â£temporary1494 -> Â£temporary1497 0>

367:
old  < printString$5:>
new  <	cmp byte [rsi], 0>

368:
old  <	; Dereference Â£temporary1465 -> Â£temporary1468 Â£temporary1468 0>
new  <	je printString$57>

370:
old  < printString$6:>
new  < printString$7:>

371:
old  <	; Equal 57 Â£temporary1465 -> Â£temporary1468 0>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

372:
old  <	cmp byte [rsi], 0>
new  <>

373:
old  <	je printString$57>
new  < printString$8:>

374:
old  <>
new  <	; IntegralToIntegral Â£temporary1501 index>

375:
old  < printString$7:>
new  <	mov eax, [rbp + 36]>

376:
old  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov rbx, 4294967295>

377:
old  <>
new  <	and rax, rbx>

378:
old  < printString$8:>
new  <>

379:
old  <	; IntegralToIntegral Â£temporary1472 index>
new  < printString$9:>

380:
old  <	mov eax, [rbp + 36]>
new  <	; BinaryAdd Â£temporary1503 s Â£temporary1501>

381:
old  <	mov rbx, 4294967295>
new  <	mov rsi, [rbp + 24]>

382:
old  <	and rax, rbx>
new  <	add rsi, rax>

384:
old  < printString$9:>
new  < printString$10:>

385:
old  <	; BinaryAdd Â£temporary1474 s Â£temporary1472>
new  <	; Dereference Â£temporary1500 -> Â£temporary1503 Â£temporary1503 0>

386:
old  <	mov rsi, [rbp + 24]>
new  <>

387:
old  <	add rsi, rax>
new  < printString$11:>

388:
old  <>
new  <	; Parameter signedchar Â£temporary1500 -> Â£temporary1503 64>

389:
old  < printString$10:>
new  <	mov al, [rsi]>

390:
old  <	; Dereference Â£temporary1471 -> Â£temporary1474 Â£temporary1474 0>
new  <	mov [rbp + 64], al>

392:
old  < printString$11:>
new  < printString$12:>

393:
old  <	; Parameter signedchar Â£temporary1471 -> Â£temporary1474 64>
new  <	; Call printChar 40 0>

394:
old  <	mov al, [rsi]>
new  <	mov qword [rbp + 40], printString$13>

395:
old  <	mov [rbp + 64], al>
new  <	mov [rbp + 48], rbp>

396:
old  <>
new  <	add rbp, 40>

397:
old  < printString$12:>
new  <	jmp printChar>

398:
old  <	; Call printChar 40 0>
new  <>

399:
old  <	mov qword [rbp + 40], printString$13>
new  < printString$13:>

400:
old  <	mov [rbp + 48], rbp>
new  <	; PostCall 40>

401:
old  <	add rbp, 40>
new  <>

402:
old  <	jmp printChar>
new  < printString$14:>

403:
old  <>
new  <	; BinaryAdd index index 1>

404:
old  < printString$13:>
new  <	inc dword [rbp + 36]>

405:
old  <	; PostCall 40>
new  <>

406:
old  <>
new  < printString$15:>

407:
old  < printString$14:>
new  <	; Goto 3>

408:
old  <	; BinaryAdd index index 1>
new  <	jmp printString$3>

409:
old  <	inc dword [rbp + 36]>
new  <>

410:
old  <>
new  < printString$16:>

411:
old  < printString$15:>
new  <	; Assign index 0>

412:
old  <	; Goto 3>
new  <	mov dword [rbp + 36], 0>

413:
old  <	jmp printString$3>
new  <>

414:
old  <>
new  < printString$17:>

415:
old  < printString$16:>
new  <	; Assign Â£temporary1505 precision>

416:
old  <	; Assign index 0>
new  <	mov eax, [rbp + 32]>

417:
old  <	mov dword [rbp + 36], 0>
new  <>

418:
old  <>
new  < printString$18:>

419:
old  < printString$17:>
new  <	; BinarySubtract precision precision 1>

420:
old  <	; Assign Â£temporary1476 precision>
new  <	dec dword [rbp + 32]>

421:
old  <	mov eax, [rbp + 32]>
new  <>

422:
old  <>
new  < printString$19:>

423:
old  < printString$18:>
new  <	; SignedLessThanEqual 57 Â£temporary1505 0>

424:
old  <	; BinarySubtract precision precision 1>
new  <	cmp eax, 0>

425:
old  <	dec dword [rbp + 32]>
new  <	jle printString$57>

427:
old  < printString$19:>
new  < printString$20:>

428:
old  <	; SignedLessThanEqual 57 Â£temporary1476 0>
new  <	; IntegralToIntegral Â£temporary1508 index>

429:
old  <	cmp eax, 0>
new  <	mov eax, [rbp + 36]>

430:
old  <	jle printString$57>
new  <	mov rbx, 4294967295>

431:
old  <>
new  <	and rax, rbx>

432:
old  < printString$20:>
new  <>

433:
old  <	; IntegralToIntegral Â£temporary1479 index>
new  < printString$21:>

434:
old  <	mov eax, [rbp + 36]>
new  <	; BinaryAdd Â£temporary1510 s Â£temporary1508>

435:
old  <	mov rbx, 4294967295>
new  <	mov rsi, [rbp + 24]>

436:
old  <	and rax, rbx>
new  <	add rsi, rax>

438:
old  < printString$21:>
new  < printString$22:>

439:
old  <	; BinaryAdd Â£temporary1481 s Â£temporary1479>
new  <	; Dereference Â£temporary1507 -> Â£temporary1510 Â£temporary1510 0>

440:
old  <	mov rsi, [rbp + 24]>
new  <>

441:
old  <	add rsi, rax>
new  < printString$23:>

442:
old  <>
new  <	; Equal 57 Â£temporary1507 -> Â£temporary1510 0>

443:
old  < printString$22:>
new  <	cmp byte [rsi], 0>

444:
old  <	; Dereference Â£temporary1478 -> Â£temporary1481 Â£temporary1481 0>
new  <	je printString$57>

446:
old  < printString$23:>
new  < printString$24:>

447:
old  <	; Equal 57 Â£temporary1478 -> Â£temporary1481 0>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

448:
old  <	cmp byte [rsi], 0>
new  <>

449:
old  <	je printString$57>
new  < printString$25:>

450:
old  <>
new  <	; IntegralToIntegral Â£temporary1515 index>

451:
old  < printString$24:>
new  <	mov eax, [rbp + 36]>

452:
old  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov rbx, 4294967295>

453:
old  <>
new  <	and rax, rbx>

454:
old  < printString$25:>
new  <>

455:
old  <	; IntegralToIntegral Â£temporary1486 index>
new  < printString$26:>

456:
old  <	mov eax, [rbp + 36]>
new  <	; BinaryAdd Â£temporary1517 s Â£temporary1515>

457:
old  <	mov rbx, 4294967295>
new  <	mov rsi, [rbp + 24]>

458:
old  <	and rax, rbx>
new  <	add rsi, rax>

460:
old  < printString$26:>
new  < printString$27:>

461:
old  <	; BinaryAdd Â£temporary1488 s Â£temporary1486>
new  <	; Dereference Â£temporary1514 -> Â£temporary1517 Â£temporary1517 0>

462:
old  <	mov rsi, [rbp + 24]>
new  <>

463:
old  <	add rsi, rax>
new  < printString$28:>

464:
old  <>
new  <	; Parameter signedchar Â£temporary1514 -> Â£temporary1517 64>

465:
old  < printString$27:>
new  <	mov al, [rsi]>

466:
old  <	; Dereference Â£temporary1485 -> Â£temporary1488 Â£temporary1488 0>
new  <	mov [rbp + 64], al>

468:
old  < printString$28:>
new  < printString$29:>

469:
old  <	; Parameter signedchar Â£temporary1485 -> Â£temporary1488 64>
new  <	; Call printChar 40 0>

470:
old  <	mov al, [rsi]>
new  <	mov qword [rbp + 40], printString$30>

471:
old  <	mov [rbp + 64], al>
new  <	mov [rbp + 48], rbp>

472:
old  <>
new  <	add rbp, 40>

473:
old  < printString$29:>
new  <	jmp printChar>

474:
old  <	; Call printChar 40 0>
new  <>

475:
old  <	mov qword [rbp + 40], printString$30>
new  < printString$30:>

476:
old  <	mov [rbp + 48], rbp>
new  <	; PostCall 40>

477:
old  <	add rbp, 40>
new  <>

478:
old  <	jmp printChar>
new  < printString$31:>

479:
old  <>
new  <	; BinaryAdd index index 1>

480:
old  < printString$30:>
new  <	inc dword [rbp + 36]>

481:
old  <	; PostCall 40>
new  <>

482:
old  <>
new  < printString$32:>

483:
old  < printString$31:>
new  <	; Goto 17>

484:
old  <	; BinaryAdd index index 1>
new  <	jmp printString$17>

485:
old  <	inc dword [rbp + 36]>
new  <>

486:
old  <>
new  < printString$33:>

487:
old  < printString$32:>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

488:
old  <	; Goto 17>
new  <>

489:
old  <	jmp printString$17>
new  < printString$34:>

490:
old  <>
new  <	; Parameter signedchar 60 60>

491:
old  < printString$33:>
new  <	mov byte [rbp + 60], 60>

492:
old  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

493:
old  <>
new  < printString$35:>

494:
old  < printString$34:>
new  <	; Call printChar 36 0>

495:
old  <	; Parameter signedchar 60 60>
new  <	mov qword [rbp + 36], printString$36>

496:
old  <	mov byte [rbp + 60], 60>
new  <	mov [rbp + 44], rbp>

497:
old  <>
new  <	add rbp, 36>

498:
old  < printString$35:>
new  <	jmp printChar>

499:
old  <	; Call printChar 36 0>
new  <>

500:
old  <	mov qword [rbp + 36], printString$36>
new  < printString$36:>

501:
old  <	mov [rbp + 44], rbp>
new  <	; PostCall 36>

502:
old  <	add rbp, 36>
new  <>

503:
old  <	jmp printChar>
new  < printString$37:>

504:
old  <>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

505:
old  < printString$36:>
new  <>

506:
old  <	; PostCall 36>
new  < printString$38:>

507:
old  <>
new  <	; Parameter signedchar 78 60>

508:
old  < printString$37:>
new  <	mov byte [rbp + 60], 78>

509:
old  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

510:
old  <>
new  < printString$39:>

511:
old  < printString$38:>
new  <	; Call printChar 36 0>

512:
old  <	; Parameter signedchar 78 60>
new  <	mov qword [rbp + 36], printString$40>

513:
old  <	mov byte [rbp + 60], 78>
new  <	mov [rbp + 44], rbp>

514:
old  <>
new  <	add rbp, 36>

515:
old  < printString$39:>
new  <	jmp printChar>

516:
old  <	; Call printChar 36 0>
new  <>

517:
old  <	mov qword [rbp + 36], printString$40>
new  < printString$40:>

518:
old  <	mov [rbp + 44], rbp>
new  <	; PostCall 36>

519:
old  <	add rbp, 36>
new  <>

520:
old  <	jmp printChar>
new  < printString$41:>

521:
old  <>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

522:
old  < printString$40:>
new  <>

523:
old  <	; PostCall 36>
new  < printString$42:>

524:
old  <>
new  <	; Parameter signedchar 85 60>

525:
old  < printString$41:>
new  <	mov byte [rbp + 60], 85>

526:
old  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

527:
old  <>
new  < printString$43:>

528:
old  < printString$42:>
new  <	; Call printChar 36 0>

529:
old  <	; Parameter signedchar 85 60>
new  <	mov qword [rbp + 36], printString$44>

530:
old  <	mov byte [rbp + 60], 85>
new  <	mov [rbp + 44], rbp>

531:
old  <>
new  <	add rbp, 36>

532:
old  < printString$43:>
new  <	jmp printChar>

533:
old  <	; Call printChar 36 0>
new  <>

534:
old  <	mov qword [rbp + 36], printString$44>
new  < printString$44:>

535:
old  <	mov [rbp + 44], rbp>
new  <	; PostCall 36>

536:
old  <	add rbp, 36>
new  <>

537:
old  <	jmp printChar>
new  < printString$45:>

538:
old  <>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

539:
old  < printString$44:>
new  <>

540:
old  <	; PostCall 36>
new  < printString$46:>

541:
old  <>
new  <	; Parameter signedchar 76 60>

542:
old  < printString$45:>
new  <	mov byte [rbp + 60], 76>

543:
old  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

544:
old  <>
new  < printString$47:>

545:
old  < printString$46:>
new  <	; Call printChar 36 0>

546:
old  <	; Parameter signedchar 76 60>
new  <	mov qword [rbp + 36], printString$48>

547:
old  <	mov byte [rbp + 60], 76>
new  <	mov [rbp + 44], rbp>

548:
old  <>
new  <	add rbp, 36>

549:
old  < printString$47:>
new  <	jmp printChar>

550:
old  <	; Call printChar 36 0>
new  <>

551:
old  <	mov qword [rbp + 36], printString$48>
new  < printString$48:>

552:
old  <	mov [rbp + 44], rbp>
new  <	; PostCall 36>

553:
old  <	add rbp, 36>
new  <>

554:
old  <	jmp printChar>
new  < printString$49:>

555:
old  <>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

556:
old  < printString$48:>
new  <>

557:
old  <	; PostCall 36>
new  < printString$50:>

558:
old  <>
new  <	; Parameter signedchar 76 60>

559:
old  < printString$49:>
new  <	mov byte [rbp + 60], 76>

560:
old  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

561:
old  <>
new  < printString$51:>

562:
old  < printString$50:>
new  <	; Call printChar 36 0>

563:
old  <	; Parameter signedchar 76 60>
new  <	mov qword [rbp + 36], printString$52>

564:
old  <	mov byte [rbp + 60], 76>
new  <	mov [rbp + 44], rbp>

565:
old  <>
new  <	add rbp, 36>

566:
old  < printString$51:>
new  <	jmp printChar>

567:
old  <	; Call printChar 36 0>
new  <>

568:
old  <	mov qword [rbp + 36], printString$52>
new  < printString$52:>

569:
old  <	mov [rbp + 44], rbp>
new  <	; PostCall 36>

570:
old  <	add rbp, 36>
new  <>

571:
old  <	jmp printChar>
new  < printString$53:>

572:
old  <>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

573:
old  < printString$52:>
new  <>

574:
old  <	; PostCall 36>
new  < printString$54:>

575:
old  <>
new  <	; Parameter signedchar 62 60>

576:
old  < printString$53:>
new  <	mov byte [rbp + 60], 62>

577:
old  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

578:
old  <>
new  < printString$55:>

579:
old  < printString$54:>
new  <	; Call printChar 36 0>

580:
old  <	; Parameter signedchar 62 60>
new  <	mov qword [rbp + 36], printString$56>

581:
old  <	mov byte [rbp + 60], 62>
new  <	mov [rbp + 44], rbp>

582:
old  <>
new  <	add rbp, 36>

583:
old  < printString$55:>
new  <	jmp printChar>

584:
old  <	; Call printChar 36 0>
new  <>

585:
old  <	mov qword [rbp + 36], printString$56>
new  < printString$56:>

586:
old  <	mov [rbp + 44], rbp>
new  <	; PostCall 36>

587:
old  <	add rbp, 36>
new  <>

588:
old  <	jmp printChar>
new  < printString$57:>

589:
old  <>
new  <	; Return>

590:
old  < printString$56:>
new  <	mov rax, [rbp]>

591:
old  <	; PostCall 36>
new  <	mov rdi, [rbp + 16]>

592:
old  <>
new  <	mov rbp, [rbp + 8]>

593:
old  < printString$57:>
new  <	jmp rax>

594:
old  <	; Return>
new  <>

595:
old  <	mov rax, [rbp]>
new  < printString$58:>

596:
old  <	mov rdi, [rbp + 16]>
new  <	; FunctionEnd printString>

597:
old  <	mov rbp, [rbp + 8]>
new  <>

598:
old  <	jmp rax>
new  <section .data>

600:
old  < printString$58:>
new  <int8$10#:>

601:
old  <	; FunctionEnd printString>
new  <	; Initializer Signed_Long_Int 10>

602:
old  <>
new  <	dq 10>

603:
old  <section .data>
new  <>

604:
old  <>
new  <section .text>

605:
old  <int8$10#:>
new  <>

606:
old  <	; Initializer Signed_Long_Int 10>
new  < printLongIntRec:>

607:
old  <	dq 10>
new  <	; Equal 15 longValue 0>

608:
old  <>
new  <	cmp qword [rbp + 24], 0>

609:
old  <section .text>
new  <	je printLongIntRec$15>

611:
old  < printLongIntRec:>
new  < printLongIntRec$1:>

612:
old  <	; Equal 15 longValue 0>
new  <	; SignedModulo Â£temporary1526 longValue 10>

613:
old  <	cmp qword [rbp + 24], 0>
new  <	mov rax, [rbp + 24]>

614:
old  <	je printLongIntRec$15>
new  <	xor rdx, rdx>

615:
old  <>
new  <	idiv qword [int8$10#]>

616:
old  < printLongIntRec$1:>
new  <>

617:
old  <	; SignedModulo Â£temporary1497 longValue 10>
new  < printLongIntRec$2:>

618:
old  <	mov rax, [rbp + 24]>
new  <	; IntegralToIntegral Â£temporary1527 Â£temporary1526>

619:
old  <	xor rdx, rdx>
new  <	cmp rdx, 0>

620:
old  <	idiv qword [int8$10#]>
new  <	jge printLongIntRec$3>

621:
old  <>
new  <	neg rdx>

622:
old  < printLongIntRec$2:>
new  <	neg edx>

623:
old  <	; IntegralToIntegral Â£temporary1498 Â£temporary1497>
new  <>

624:
old  <	cmp rdx, 0>
new  < printLongIntRec$3:>

625:
old  <	jge printLongIntRec$3>
new  <	; Assign digit Â£temporary1527>

626:
old  <	neg rdx>
new  <	mov [rbp + 32], edx>

627:
old  <	neg edx>
new  <>

628:
old  <>
new  < printLongIntRec$4:>

629:
old  < printLongIntRec$3:>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

630:
old  <	; Assign digit Â£temporary1498>
new  <>

631:
old  <	mov [rbp + 32], edx>
new  < printLongIntRec$5:>

632:
old  <>
new  <	; SignedDivide Â£temporary1528 longValue 10>

633:
old  < printLongIntRec$4:>
new  <	mov rax, [rbp + 24]>

634:
old  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	xor rdx, rdx>

635:
old  <>
new  <	idiv qword [int8$10#]>

636:
old  < printLongIntRec$5:>
new  <>

637:
old  <	; SignedDivide Â£temporary1499 longValue 10>
new  < printLongIntRec$6:>

638:
old  <	mov rax, [rbp + 24]>
new  <	; Parameter signed long int Â£temporary1528 60>

639:
old  <	xor rdx, rdx>
new  <	mov [rbp + 60], rax>

640:
old  <	idiv qword [int8$10#]>
new  <>

641:
old  <>
new  < printLongIntRec$7:>

642:
old  < printLongIntRec$6:>
new  <	; Call printLongIntRec 36 0>

643:
old  <	; Parameter signed long int Â£temporary1499 60>
new  <	mov qword [rbp + 36], printLongIntRec$8>

644:
old  <	mov [rbp + 60], rax>
new  <	mov [rbp + 44], rbp>

645:
old  <>
new  <	add rbp, 36>

646:
old  < printLongIntRec$7:>
new  <	jmp printLongIntRec>

647:
old  <	; Call printLongIntRec 36 0>
new  <>

648:
old  <	mov qword [rbp + 36], printLongIntRec$8>
new  < printLongIntRec$8:>

649:
old  <	mov [rbp + 44], rbp>
new  <	; PostCall 36>

650:
old  <	add rbp, 36>
new  <>

651:
old  <	jmp printLongIntRec>
new  < printLongIntRec$9:>

652:
old  <>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

653:
old  < printLongIntRec$8:>
new  <>

654:
old  <	; PostCall 36>
new  < printLongIntRec$10:>

655:
old  <>
new  <	; BinaryAdd Â£temporary1530 digit 48>

656:
old  < printLongIntRec$9:>
new  <	mov eax, [rbp + 32]>

657:
old  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	add eax, 48>

659:
old  < printLongIntRec$10:>
new  < printLongIntRec$11:>

660:
old  <	; BinaryAdd Â£temporary1501 digit 48>
new  <	; IntegralToIntegral Â£temporary1531 Â£temporary1530>

661:
old  <	mov eax, [rbp + 32]>
new  <	cmp eax, 0>

662:
old  <	add eax, 48>
new  <	jge printLongIntRec$12>

663:
old  <>
new  <	neg eax>

664:
old  < printLongIntRec$11:>
new  <	neg al>

665:
old  <	; IntegralToIntegral Â£temporary1502 Â£temporary1501>
new  <>

666:
old  <	cmp eax, 0>
new  < printLongIntRec$12:>

667:
old  <	jge printLongIntRec$12>
new  <	; Parameter signedchar Â£temporary1531 60>

668:
old  <	neg eax>
new  <	mov [rbp + 60], al>

669:
old  <	neg al>
new  <>

670:
old  <>
new  < printLongIntRec$13:>

671:
old  < printLongIntRec$12:>
new  <	; Call printChar 36 0>

672:
old  <	; Parameter signedchar Â£temporary1502 60>
new  <	mov qword [rbp + 36], printLongIntRec$14>

673:
old  <	mov [rbp + 60], al>
new  <	mov [rbp + 44], rbp>

674:
old  <>
new  <	add rbp, 36>

675:
old  < printLongIntRec$13:>
new  <	jmp printChar>

676:
old  <	; Call printChar 36 0>
new  <>

677:
old  <	mov qword [rbp + 36], printLongIntRec$14>
new  < printLongIntRec$14:>

678:
old  <	mov [rbp + 44], rbp>
new  <	; PostCall 36>

679:
old  <	add rbp, 36>
new  <>

680:
old  <	jmp printChar>
new  < printLongIntRec$15:>

681:
old  <>
new  <	; Return>

682:
old  < printLongIntRec$14:>
new  <	mov rax, [rbp]>

683:
old  <	; PostCall 36>
new  <	mov rdi, [rbp + 16]>

684:
old  <>
new  <	mov rbp, [rbp + 8]>

685:
old  < printLongIntRec$15:>
new  <	jmp rax>

686:
old  <	; Return>
new  <>

687:
old  <	mov rax, [rbp]>
new  < printLongIntRec$16:>

688:
old  <	mov rdi, [rbp + 16]>
new  <	; FunctionEnd printLongIntRec>

689:
old  <	mov rbp, [rbp + 8]>
new  <>

690:
old  <	jmp rax>
new  <section .text>

692:
old  < printLongIntRec$16:>
new  < printLongInt:>

693:
old  <	; FunctionEnd printLongIntRec>
new  <	; SignedGreaterThanEqual 8 longValue 0>

694:
old  <>
new  <	cmp qword [rbp + 24], 0>

695:
old  <section .text>
new  <	jge printLongInt$8>

697:
old  < printLongInt:>
new  < printLongInt$1:>

698:
old  <	; SignedGreaterThanEqual 8 longValue 0>
new  <	; UnarySubtract Â£temporary1534 longValue>

699:
old  <	cmp qword [rbp + 24], 0>
new  <	mov rax, [rbp + 24]>

700:
old  <	jge printLongInt$8>
new  <	neg rax>

702:
old  < printLongInt$1:>
new  < printLongInt$2:>

703:
old  <	; UnarySubtract Â£temporary1505 longValue>
new  <	; Assign longValue Â£temporary1534>

704:
old  <	mov rax, [rbp + 24]>
new  <	mov [rbp + 24], rax>

705:
old  <	neg rax>
new  <>

706:
old  <>
new  < printLongInt$3:>

707:
old  < printLongInt$2:>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

708:
old  <	; Assign longValue Â£temporary1505>
new  <>

709:
old  <	mov [rbp + 24], rax>
new  < printLongInt$4:>

710:
old  <>
new  <	; Parameter signedchar 45 64>

711:
old  < printLongInt$3:>
new  <	mov byte [rbp + 64], 45>

712:
old  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

713:
old  <>
new  < printLongInt$5:>

714:
old  < printLongInt$4:>
new  <	; Call printChar 40 0>

715:
old  <	; Parameter signedchar 45 64>
new  <	mov qword [rbp + 40], printLongInt$6>

716:
old  <	mov byte [rbp + 64], 45>
new  <	mov [rbp + 48], rbp>

717:
old  <>
new  <	add rbp, 40>

718:
old  < printLongInt$5:>
new  <	jmp printChar>

719:
old  <	; Call printChar 40 0>
new  <>

720:
old  <	mov qword [rbp + 40], printLongInt$6>
new  < printLongInt$6:>

721:
old  <	mov [rbp + 48], rbp>
new  <	; PostCall 40>

722:
old  <	add rbp, 40>
new  <>

723:
old  <	jmp printChar>
new  < printLongInt$7:>

724:
old  <>
new  <	; Goto 19>

725:
old  < printLongInt$6:>
new  <	jmp printLongInt$19>

726:
old  <	; PostCall 40>
new  <>

727:
old  <>
new  < printLongInt$8:>

728:
old  < printLongInt$7:>
new  <	; Equal 14 space 0>

729:
old  <	; Goto 19>
new  <	cmp dword [rbp + 36], 0>

730:
old  <	jmp printLongInt$19>
new  <	je printLongInt$14>

732:
old  < printLongInt$8:>
new  < printLongInt$9:>

733:
old  <	; Equal 14 space 0>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

734:
old  <	cmp dword [rbp + 36], 0>
new  <>

735:
old  <	je printLongInt$14>
new  < printLongInt$10:>

736:
old  <>
new  <	; Parameter signedchar 32 64>

737:
old  < printLongInt$9:>
new  <	mov byte [rbp + 64], 32>

738:
old  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

739:
old  <>
new  < printLongInt$11:>

740:
old  < printLongInt$10:>
new  <	; Call printChar 40 0>

741:
old  <	; Parameter signedchar 32 64>
new  <	mov qword [rbp + 40], printLongInt$12>

742:
old  <	mov byte [rbp + 64], 32>
new  <	mov [rbp + 48], rbp>

743:
old  <>
new  <	add rbp, 40>

744:
old  < printLongInt$11:>
new  <	jmp printChar>

745:
old  <	; Call printChar 40 0>
new  <>

746:
old  <	mov qword [rbp + 40], printLongInt$12>
new  < printLongInt$12:>

747:
old  <	mov [rbp + 48], rbp>
new  <	; PostCall 40>

748:
old  <	add rbp, 40>
new  <>

749:
old  <	jmp printChar>
new  < printLongInt$13:>

750:
old  <>
new  <	; Goto 19>

751:
old  < printLongInt$12:>
new  <	jmp printLongInt$19>

752:
old  <	; PostCall 40>
new  <>

753:
old  <>
new  < printLongInt$14:>

754:
old  < printLongInt$13:>
new  <	; Equal 19 plus 0>

755:
old  <	; Goto 19>
new  <	cmp dword [rbp + 32], 0>

756:
old  <	jmp printLongInt$19>
new  <	je printLongInt$19>

758:
old  < printLongInt$14:>
new  < printLongInt$15:>

759:
old  <	; Equal 19 plus 0>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

760:
old  <	cmp dword [rbp + 32], 0>
new  <>

761:
old  <	je printLongInt$19>
new  < printLongInt$16:>

762:
old  <>
new  <	; Parameter signedchar 43 64>

763:
old  < printLongInt$15:>
new  <	mov byte [rbp + 64], 43>

764:
old  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

765:
old  <>
new  < printLongInt$17:>

766:
old  < printLongInt$16:>
new  <	; Call printChar 40 0>

767:
old  <	; Parameter signedchar 43 64>
new  <	mov qword [rbp + 40], printLongInt$18>

768:
old  <	mov byte [rbp + 64], 43>
new  <	mov [rbp + 48], rbp>

769:
old  <>
new  <	add rbp, 40>

770:
old  < printLongInt$17:>
new  <	jmp printChar>

771:
old  <	; Call printChar 40 0>
new  <>

772:
old  <	mov qword [rbp + 40], printLongInt$18>
new  < printLongInt$18:>

773:
old  <	mov [rbp + 48], rbp>
new  <	; PostCall 40>

774:
old  <	add rbp, 40>
new  <>

775:
old  <	jmp printChar>
new  < printLongInt$19:>

776:
old  <>
new  <	; NotEqual 25 longValue 0>

777:
old  < printLongInt$18:>
new  <	cmp qword [rbp + 24], 0>

778:
old  <	; PostCall 40>
new  <	jne printLongInt$25>

780:
old  < printLongInt$19:>
new  < printLongInt$20:>

781:
old  <	; NotEqual 25 longValue 0>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

782:
old  <	cmp qword [rbp + 24], 0>
new  <>

783:
old  <	jne printLongInt$25>
new  < printLongInt$21:>

784:
old  <>
new  <	; Parameter signedchar 48 64>

785:
old  < printLongInt$20:>
new  <	mov byte [rbp + 64], 48>

786:
old  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

787:
old  <>
new  < printLongInt$22:>

788:
old  < printLongInt$21:>
new  <	; Call printChar 40 0>

789:
old  <	; Parameter signedchar 48 64>
new  <	mov qword [rbp + 40], printLongInt$23>

790:
old  <	mov byte [rbp + 64], 48>
new  <	mov [rbp + 48], rbp>

791:
old  <>
new  <	add rbp, 40>

792:
old  < printLongInt$22:>
new  <	jmp printChar>

793:
old  <	; Call printChar 40 0>
new  <>

794:
old  <	mov qword [rbp + 40], printLongInt$23>
new  < printLongInt$23:>

795:
old  <	mov [rbp + 48], rbp>
new  <	; PostCall 40>

796:
old  <	add rbp, 40>
new  <>

797:
old  <	jmp printChar>
new  < printLongInt$24:>

798:
old  <>
new  <	; Goto 29>

799:
old  < printLongInt$23:>
new  <	jmp printLongInt$29>

800:
old  <	; PostCall 40>
new  <>

801:
old  <>
new  < printLongInt$25:>

802:
old  < printLongInt$24:>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

803:
old  <	; Goto 29>
new  <>

804:
old  <	jmp printLongInt$29>
new  < printLongInt$26:>

805:
old  <>
new  <	; Parameter signed long int longValue 64>

806:
old  < printLongInt$25:>
new  <	mov rax, [rbp + 24]>

807:
old  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov [rbp + 64], rax>

809:
old  < printLongInt$26:>
new  < printLongInt$27:>

810:
old  <	; Parameter signed long int longValue 64>
new  <	; Call printLongIntRec 40 0>

811:
old  <	mov rax, [rbp + 24]>
new  <	mov qword [rbp + 40], printLongInt$28>

812:
old  <	mov [rbp + 64], rax>
new  <	mov [rbp + 48], rbp>

813:
old  <>
new  <	add rbp, 40>

814:
old  < printLongInt$27:>
new  <	jmp printLongIntRec>

815:
old  <	; Call printLongIntRec 40 0>
new  <>

816:
old  <	mov qword [rbp + 40], printLongInt$28>
new  < printLongInt$28:>

817:
old  <	mov [rbp + 48], rbp>
new  <	; PostCall 40>

818:
old  <	add rbp, 40>
new  <>

819:
old  <	jmp printLongIntRec>
new  < printLongInt$29:>

820:
old  <>
new  <	; Return>

821:
old  < printLongInt$28:>
new  <	mov rax, [rbp]>

822:
old  <	; PostCall 40>
new  <	mov rdi, [rbp + 16]>

823:
old  <>
new  <	mov rbp, [rbp + 8]>

824:
old  < printLongInt$29:>
new  <	jmp rax>

825:
old  <	; Return>
new  <>

826:
old  <	mov rax, [rbp]>
new  < printLongInt$30:>

827:
old  <	mov rdi, [rbp + 16]>
new  <	; FunctionEnd printLongInt>

828:
old  <	mov rbp, [rbp + 8]>
new  <>

829:
old  <	jmp rax>
new  <section .text>

831:
old  < printLongInt$30:>
new  < digitToChar:>

832:
old  <	; FunctionEnd printLongInt>
new  <	; SignedGreaterThanEqual 4 digit 10>

833:
old  <>
new  <	cmp dword [rbp + 24], 10>

834:
old  <section .text>
new  <	jge digitToChar$4>

836:
old  < digitToChar:>
new  < digitToChar$1:>

837:
old  <	; SignedGreaterThanEqual 4 digit 10>
new  <	; BinaryAdd Â£temporary1544 digit 48>

838:
old  <	cmp dword [rbp + 24], 10>
new  <	mov ebx, [rbp + 24]>

839:
old  <	jge digitToChar$4>
new  <	add ebx, 48>

841:
old  < digitToChar$1:>
new  < digitToChar$2:>

842:
old  <	; BinaryAdd Â£temporary1515 digit 48>
new  <	; IntegralToIntegral Â£temporary1545 Â£temporary1544>

843:
old  <	mov ebx, [rbp + 24]>
new  <	cmp ebx, 0>

844:
old  <	add ebx, 48>
new  <	jge digitToChar$3>

845:
old  <>
new  <	neg ebx>

846:
old  < digitToChar$2:>
new  <	neg bl>

847:
old  <	; IntegralToIntegral Â£temporary1516 Â£temporary1515>
new  <>

848:
old  <	cmp ebx, 0>
new  < digitToChar$3:>

849:
old  <	jge digitToChar$3>
new  <	; Return Â£temporary1545>

850:
old  <	neg ebx>
new  <	mov rax, [rbp]>

851:
old  <	neg bl>
new  <	mov rdi, [rbp + 16]>

852:
old  <>
new  <	mov rbp, [rbp + 8]>

853:
old  < digitToChar$3:>
new  <	jmp rax>

854:
old  <	; Return Â£temporary1516>
new  <>

855:
old  <	mov rax, [rbp]>
new  < digitToChar$4:>

856:
old  <	mov rdi, [rbp + 16]>
new  <	; Equal 9 capital 0>

857:
old  <	mov rbp, [rbp + 8]>
new  <	cmp dword [rbp + 28], 0>

858:
old  <	jmp rax>
new  <	je digitToChar$9>

860:
old  < digitToChar$4:>
new  < digitToChar$5:>

861:
old  <	; Equal 9 capital 0>
new  <	; BinarySubtract Â£temporary1546 digit 10>

862:
old  <	cmp dword [rbp + 28], 0>
new  <	mov ebx, [rbp + 24]>

863:
old  <	je digitToChar$9>
new  <	sub ebx, 10>

865:
old  < digitToChar$5:>
new  < digitToChar$6:>

866:
old  <	; BinarySubtract Â£temporary1517 digit 10>
new  <	; BinaryAdd Â£temporary1547 Â£temporary1546 65>

867:
old  <	mov ebx, [rbp + 24]>
new  <	add ebx, 65>

868:
old  <	sub ebx, 10>
new  <>

869:
old  <>
new  < digitToChar$7:>

870:
old  < digitToChar$6:>
new  <	; IntegralToIntegral Â£temporary1548 Â£temporary1547>

871:
old  <	; BinaryAdd Â£temporary1518 Â£temporary1517 65>
new  <	cmp ebx, 0>

872:
old  <	add ebx, 65>
new  <	jge digitToChar$8>

873:
old  <>
new  <	neg ebx>

874:
old  < digitToChar$7:>
new  <	neg bl>

875:
old  <	; IntegralToIntegral Â£temporary1519 Â£temporary1518>
new  <>

876:
old  <	cmp ebx, 0>
new  < digitToChar$8:>

877:
old  <	jge digitToChar$8>
new  <	; Return Â£temporary1548>

878:
old  <	neg ebx>
new  <	mov rax, [rbp]>

879:
old  <	neg bl>
new  <	mov rdi, [rbp + 16]>

880:
old  <>
new  <	mov rbp, [rbp + 8]>

881:
old  < digitToChar$8:>
new  <	jmp rax>

882:
old  <	; Return Â£temporary1519>
new  <>

883:
old  <	mov rax, [rbp]>
new  < digitToChar$9:>

884:
old  <	mov rdi, [rbp + 16]>
new  <	; BinarySubtract Â£temporary1549 digit 10>

885:
old  <	mov rbp, [rbp + 8]>
new  <	mov ebx, [rbp + 24]>

886:
old  <	jmp rax>
new  <	sub ebx, 10>

888:
old  < digitToChar$9:>
new  < digitToChar$10:>

889:
old  <	; BinarySubtract Â£temporary1520 digit 10>
new  <	; BinaryAdd Â£temporary1550 Â£temporary1549 97>

890:
old  <	mov ebx, [rbp + 24]>
new  <	add ebx, 97>

891:
old  <	sub ebx, 10>
new  <>

892:
old  <>
new  < digitToChar$11:>

893:
old  < digitToChar$10:>
new  <	; IntegralToIntegral Â£temporary1551 Â£temporary1550>

894:
old  <	; BinaryAdd Â£temporary1521 Â£temporary1520 97>
new  <	cmp ebx, 0>

895:
old  <	add ebx, 97>
new  <	jge digitToChar$12>

896:
old  <>
new  <	neg ebx>

897:
old  < digitToChar$11:>
new  <	neg bl>

898:
old  <	; IntegralToIntegral Â£temporary1522 Â£temporary1521>
new  <>

899:
old  <	cmp ebx, 0>
new  < digitToChar$12:>

900:
old  <	jge digitToChar$12>
new  <	; Return Â£temporary1551>

901:
old  <	neg ebx>
new  <	mov rax, [rbp]>

902:
old  <	neg bl>
new  <	mov rdi, [rbp + 16]>

903:
old  <>
new  <	mov rbp, [rbp + 8]>

904:
old  < digitToChar$12:>
new  <	jmp rax>

905:
old  <	; Return Â£temporary1522>
new  <>

906:
old  <	mov rax, [rbp]>
new  < digitToChar$13:>

907:
old  <	mov rdi, [rbp + 16]>
new  <	; FunctionEnd digitToChar>

908:
old  <	mov rbp, [rbp + 8]>
new  <>

909:
old  <	jmp rax>
new  <section .text>

911:
old  < digitToChar$13:>
new  < printUnsignedLongRec:>

912:
old  <	; FunctionEnd digitToChar>
new  <	; UnsignedLessThanEqual 22 unsignedValue 0>

913:
old  <>
new  <	cmp qword [rbp + 24], 0>

914:
old  <section .text>
new  <	jbe printUnsignedLongRec$22>

916:
old  < printUnsignedLongRec:>
new  < printUnsignedLongRec$1:>

917:
old  <	; UnsignedLessThanEqual 22 unsignedValue 0>
new  <	; UnsignedModulo Â£temporary1554 unsignedValue base>

918:
old  <	cmp qword [rbp + 24], 0>
new  <	mov rax, [rbp + 24]>

919:
old  <	jbe printUnsignedLongRec$22>
new  <	xor rdx, rdx>

920:
old  <>
new  <	div qword [rbp + 32]>

921:
old  < printUnsignedLongRec$1:>
new  <>

922:
old  <	; UnsignedModulo Â£temporary1525 unsignedValue base>
new  < printUnsignedLongRec$2:>

923:
old  <	mov rax, [rbp + 24]>
new  <	; IntegralToIntegral Â£temporary1555 Â£temporary1554>

924:
old  <	xor rdx, rdx>
new  <>

925:
old  <	div qword [rbp + 32]>
new  < printUnsignedLongRec$3:>

926:
old  <>
new  <	; Assign digit Â£temporary1555>

927:
old  < printUnsignedLongRec$2:>
new  <	mov [rbp + 44], edx>

928:
old  <	; IntegralToIntegral Â£temporary1526 Â£temporary1525>
new  <>

929:
old  <>
new  < printUnsignedLongRec$4:>

930:
old  < printUnsignedLongRec$3:>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

931:
old  <	; Assign digit Â£temporary1526>
new  <>

932:
old  <	mov [rbp + 44], edx>
new  < printUnsignedLongRec$5:>

933:
old  <>
new  <	; UnsignedDivide Â£temporary1556 unsignedValue base>

934:
old  < printUnsignedLongRec$4:>
new  <	mov rax, [rbp + 24]>

935:
old  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	xor rdx, rdx>

936:
old  <>
new  <	div qword [rbp + 32]>

937:
old  < printUnsignedLongRec$5:>
new  <>

938:
old  <	; UnsignedDivide Â£temporary1527 unsignedValue base>
new  < printUnsignedLongRec$6:>

939:
old  <	mov rax, [rbp + 24]>
new  <	; Parameter unsignedlongint Â£temporary1556 72>

940:
old  <	xor rdx, rdx>
new  <	mov [rbp + 72], rax>

941:
old  <	div qword [rbp + 32]>
new  <>

942:
old  <>
new  < printUnsignedLongRec$7:>

943:
old  < printUnsignedLongRec$6:>
new  <	; Parameter unsignedlongint base 80>

944:
old  <	; Parameter unsignedlongint Â£temporary1527 72>
new  <	mov rax, [rbp + 32]>

945:
old  <	mov [rbp + 72], rax>
new  <	mov [rbp + 80], rax>

947:
old  < printUnsignedLongRec$7:>
new  < printUnsignedLongRec$8:>

948:
old  <	; Parameter unsignedlongint base 80>
new  <	; Parameter signedint capital 88>

949:
old  <	mov rax, [rbp + 32]>
new  <	mov eax, [rbp + 40]>

950:
old  <	mov [rbp + 80], rax>
new  <	mov [rbp + 88], eax>

952:
old  < printUnsignedLongRec$8:>
new  < printUnsignedLongRec$9:>

953:
old  <	; Parameter signedint capital 88>
new  <	; Call printUnsignedLongRec 48 0>

954:
old  <	mov eax, [rbp + 40]>
new  <	mov qword [rbp + 48], printUnsignedLongRec$10>

955:
old  <	mov [rbp + 88], eax>
new  <	mov [rbp + 56], rbp>

956:
old  <>
new  <	add rbp, 48>

957:
old  < printUnsignedLongRec$9:>
new  <	jmp printUnsignedLongRec>

958:
old  <	; Call printUnsignedLongRec 48 0>
new  <>

959:
old  <	mov qword [rbp + 48], printUnsignedLongRec$10>
new  < printUnsignedLongRec$10:>

960:
old  <	mov [rbp + 56], rbp>
new  <	; PostCall 48>

961:
old  <	add rbp, 48>
new  <>

962:
old  <	jmp printUnsignedLongRec>
new  < printUnsignedLongRec$11:>

963:
old  <>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

964:
old  < printUnsignedLongRec$10:>
new  <>

965:
old  <	; PostCall 48>
new  < printUnsignedLongRec$12:>

966:
old  <>
new  <	; Parameter signedint digit 72>

967:
old  < printUnsignedLongRec$11:>
new  <	mov eax, [rbp + 44]>

968:
old  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov [rbp + 72], eax>

970:
old  < printUnsignedLongRec$12:>
new  < printUnsignedLongRec$13:>

971:
old  <	; Parameter signedint digit 72>
new  <	; Parameter signedint capital 76>

972:
old  <	mov eax, [rbp + 44]>
new  <	mov eax, [rbp + 40]>

973:
old  <	mov [rbp + 72], eax>
new  <	mov [rbp + 76], eax>

975:
old  < printUnsignedLongRec$13:>
new  < printUnsignedLongRec$14:>

976:
old  <	; Parameter signedint capital 76>
new  <	; Call digitToChar 48 0>

977:
old  <	mov eax, [rbp + 40]>
new  <	mov qword [rbp + 48], printUnsignedLongRec$15>

978:
old  <	mov [rbp + 76], eax>
new  <	mov [rbp + 56], rbp>

979:
old  <>
new  <	add rbp, 48>

980:
old  < printUnsignedLongRec$14:>
new  <	jmp digitToChar>

981:
old  <	; Call digitToChar 48 0>
new  <>

982:
old  <	mov qword [rbp + 48], printUnsignedLongRec$15>
new  < printUnsignedLongRec$15:>

983:
old  <	mov [rbp + 56], rbp>
new  <	; PostCall 48>

984:
old  <	add rbp, 48>
new  <>

985:
old  <	jmp digitToChar>
new  < printUnsignedLongRec$16:>

986:
old  <>
new  <	; GetReturnValue Â£temporary1558>

987:
old  < printUnsignedLongRec$15:>
new  <>

988:
old  <	; PostCall 48>
new  < printUnsignedLongRec$17:>

989:
old  <>
new  <	; Assign c Â£temporary1558>

990:
old  < printUnsignedLongRec$16:>
new  <	mov [rbp + 48], bl>

991:
old  <	; GetReturnValue Â£temporary1529>
new  <>

992:
old  <>
new  < printUnsignedLongRec$18:>

993:
old  < printUnsignedLongRec$17:>
new  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

994:
old  <	; Assign c Â£temporary1529>
new  <>

995:
old  <	mov [rbp + 48], bl>
new  < printUnsignedLongRec$19:>

996:
old  <>
new  <	; Parameter signedchar c 73>

997:
old  < printUnsignedLongRec$18:>
new  <	mov al, [rbp + 48]>

998:
old  <	; PreCall 49 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov [rbp + 73], al>

1000:
old  < printUnsignedLongRec$19:>
new  < printUnsignedLongRec$20:>

1001:
old  <	; Parameter signedchar c 73>
new  <	; Call printChar 49 0>

1002:
old  <	mov al, [rbp + 48]>
new  <	mov qword [rbp + 49], printUnsignedLongRec$21>

1003:
old  <	mov [rbp + 73], al>
new  <	mov [rbp + 57], rbp>

1004:
old  <>
new  <	add rbp, 49>

1005:
old  < printUnsignedLongRec$20:>
new  <	jmp printChar>

1006:
old  <	; Call printChar 49 0>
new  <>

1007:
old  <	mov qword [rbp + 49], printUnsignedLongRec$21>
new  < printUnsignedLongRec$21:>

1008:
old  <	mov [rbp + 57], rbp>
new  <	; PostCall 49>

1009:
old  <	add rbp, 49>
new  <>

1010:
old  <	jmp printChar>
new  < printUnsignedLongRec$22:>

1011:
old  <>
new  <	; Return>

1012:
old  < printUnsignedLongRec$21:>
new  <	mov rax, [rbp]>

1013:
old  <	; PostCall 49>
new  <	mov rdi, [rbp + 16]>

1014:
old  <>
new  <	mov rbp, [rbp + 8]>

1015:
old  < printUnsignedLongRec$22:>
new  <	jmp rax>

1016:
old  <	; Return>
new  <>

1017:
old  <	mov rax, [rbp]>
new  < printUnsignedLongRec$23:>

1018:
old  <	mov rdi, [rbp + 16]>
new  <	; FunctionEnd printUnsignedLongRec>

1019:
old  <	mov rbp, [rbp + 8]>
new  <>

1020:
old  <	jmp rax>
new  <section .text>

1022:
old  < printUnsignedLongRec$23:>
new  < printUnsignedLong:>

1023:
old  <	; FunctionEnd printUnsignedLongRec>
new  <	; Equal 5 plus 0>

1024:
old  <>
new  <	cmp dword [rbp + 32], 0>

1025:
old  <section .text>
new  <	je printUnsignedLong$5>

1027:
old  < printUnsignedLong:>
new  < printUnsignedLong$1:>

1028:
old  <	; Equal 5 plus 0>
new  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1029:
old  <	cmp dword [rbp + 32], 0>
new  <>

1030:
old  <	je printUnsignedLong$5>
new  < printUnsignedLong$2:>

1031:
old  <>
new  <	; Parameter signedchar 43 80>

1032:
old  < printUnsignedLong$1:>
new  <	mov byte [rbp + 80], 43>

1033:
old  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1034:
old  <>
new  < printUnsignedLong$3:>

1035:
old  < printUnsignedLong$2:>
new  <	; Call printChar 56 0>

1036:
old  <	; Parameter signedchar 43 80>
new  <	mov qword [rbp + 56], printUnsignedLong$4>

1037:
old  <	mov byte [rbp + 80], 43>
new  <	mov [rbp + 64], rbp>

1038:
old  <>
new  <	add rbp, 56>

1039:
old  < printUnsignedLong$3:>
new  <	jmp printChar>

1040:
old  <	; Call printChar 56 0>
new  <>

1041:
old  <	mov qword [rbp + 56], printUnsignedLong$4>
new  < printUnsignedLong$4:>

1042:
old  <	mov [rbp + 64], rbp>
new  <	; PostCall 56>

1043:
old  <	add rbp, 56>
new  <>

1044:
old  <	jmp printChar>
new  < printUnsignedLong$5:>

1045:
old  <>
new  <	; Equal 10 space 0>

1046:
old  < printUnsignedLong$4:>
new  <	cmp dword [rbp + 36], 0>

1047:
old  <	; PostCall 56>
new  <	je printUnsignedLong$10>

1049:
old  < printUnsignedLong$5:>
new  < printUnsignedLong$6:>

1050:
old  <	; Equal 10 space 0>
new  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1051:
old  <	cmp dword [rbp + 36], 0>
new  <>

1052:
old  <	je printUnsignedLong$10>
new  < printUnsignedLong$7:>

1053:
old  <>
new  <	; Parameter signedchar 32 80>

1054:
old  < printUnsignedLong$6:>
new  <	mov byte [rbp + 80], 32>

1055:
old  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1056:
old  <>
new  < printUnsignedLong$8:>

1057:
old  < printUnsignedLong$7:>
new  <	; Call printChar 56 0>

1058:
old  <	; Parameter signedchar 32 80>
new  <	mov qword [rbp + 56], printUnsignedLong$9>

1059:
old  <	mov byte [rbp + 80], 32>
new  <	mov [rbp + 64], rbp>

1060:
old  <>
new  <	add rbp, 56>

1061:
old  < printUnsignedLong$8:>
new  <	jmp printChar>

1062:
old  <	; Call printChar 56 0>
new  <>

1063:
old  <	mov qword [rbp + 56], printUnsignedLong$9>
new  < printUnsignedLong$9:>

1064:
old  <	mov [rbp + 64], rbp>
new  <	; PostCall 56>

1065:
old  <	add rbp, 56>
new  <>

1066:
old  <	jmp printChar>
new  < printUnsignedLong$10:>

1067:
old  <>
new  <	; Equal 29 grid 0>

1068:
old  < printUnsignedLong$9:>
new  <	cmp dword [rbp + 40], 0>

1069:
old  <	; PostCall 56>
new  <	je printUnsignedLong$29>

1071:
old  < printUnsignedLong$10:>
new  < printUnsignedLong$11:>

1072:
old  <	; Equal 29 grid 0>
new  <	; NotEqual 16 base 8>

1073:
old  <	cmp dword [rbp + 40], 0>
new  <	cmp qword [rbp + 44], 8>

1074:
old  <	je printUnsignedLong$29>
new  <	jne printUnsignedLong$16>

1076:
old  < printUnsignedLong$11:>
new  < printUnsignedLong$12:>

1077:
old  <	; NotEqual 16 base 8>
new  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1078:
old  <	cmp qword [rbp + 44], 8>
new  <>

1079:
old  <	jne printUnsignedLong$16>
new  < printUnsignedLong$13:>

1080:
old  <>
new  <	; Parameter signedchar 48 80>

1081:
old  < printUnsignedLong$12:>
new  <	mov byte [rbp + 80], 48>

1082:
old  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1083:
old  <>
new  < printUnsignedLong$14:>

1084:
old  < printUnsignedLong$13:>
new  <	; Call printChar 56 0>

1085:
old  <	; Parameter signedchar 48 80>
new  <	mov qword [rbp + 56], printUnsignedLong$15>

1086:
old  <	mov byte [rbp + 80], 48>
new  <	mov [rbp + 64], rbp>

1087:
old  <>
new  <	add rbp, 56>

1088:
old  < printUnsignedLong$14:>
new  <	jmp printChar>

1089:
old  <	; Call printChar 56 0>
new  <>

1090:
old  <	mov qword [rbp + 56], printUnsignedLong$15>
new  < printUnsignedLong$15:>

1091:
old  <	mov [rbp + 64], rbp>
new  <	; PostCall 56>

1092:
old  <	add rbp, 56>
new  <>

1093:
old  <	jmp printChar>
new  < printUnsignedLong$16:>

1094:
old  <>
new  <	; NotEqual 29 base 16>

1095:
old  < printUnsignedLong$15:>
new  <	cmp qword [rbp + 44], 16>

1096:
old  <	; PostCall 56>
new  <	jne printUnsignedLong$29>

1098:
old  < printUnsignedLong$16:>
new  < printUnsignedLong$17:>

1099:
old  <	; NotEqual 29 base 16>
new  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1100:
old  <	cmp qword [rbp + 44], 16>
new  <>

1101:
old  <	jne printUnsignedLong$29>
new  < printUnsignedLong$18:>

1102:
old  <>
new  <	; Parameter signedchar 48 80>

1103:
old  < printUnsignedLong$17:>
new  <	mov byte [rbp + 80], 48>

1104:
old  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1105:
old  <>
new  < printUnsignedLong$19:>

1106:
old  < printUnsignedLong$18:>
new  <	; Call printChar 56 0>

1107:
old  <	; Parameter signedchar 48 80>
new  <	mov qword [rbp + 56], printUnsignedLong$20>

1108:
old  <	mov byte [rbp + 80], 48>
new  <	mov [rbp + 64], rbp>

1109:
old  <>
new  <	add rbp, 56>

1110:
old  < printUnsignedLong$19:>
new  <	jmp printChar>

1111:
old  <	; Call printChar 56 0>
new  <>

1112:
old  <	mov qword [rbp + 56], printUnsignedLong$20>
new  < printUnsignedLong$20:>

1113:
old  <	mov [rbp + 64], rbp>
new  <	; PostCall 56>

1114:
old  <	add rbp, 56>
new  <>

1115:
old  <	jmp printChar>
new  < printUnsignedLong$21:>

1116:
old  <>
new  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1117:
old  < printUnsignedLong$20:>
new  <>

1118:
old  <	; PostCall 56>
new  < printUnsignedLong$22:>

1119:
old  <>
new  <	; Equal 25 capital 0>

1120:
old  < printUnsignedLong$21:>
new  <	cmp dword [rbp + 52], 0>

1121:
old  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	je printUnsignedLong$25>

1123:
old  < printUnsignedLong$22:>
new  < printUnsignedLong$23:>

1124:
old  <	; Equal 25 capital 0>
new  <	; Assign Â£temporary1569 88>

1125:
old  <	cmp dword [rbp + 52], 0>
new  <	mov al, 88>

1126:
old  <	je printUnsignedLong$25>
new  <>

1127:
old  <>
new  < printUnsignedLong$24:>

1128:
old  < printUnsignedLong$23:>
new  <	; Goto 26>

1129:
old  <	; Assign Â£temporary1540 88>
new  <	jmp printUnsignedLong$26>

1130:
old  <	mov al, 88>
new  <>

1131:
old  <>
new  < printUnsignedLong$25:>

1132:
old  < printUnsignedLong$24:>
new  <	; Assign Â£temporary1569 120>

1133:
old  <	; Goto 26>
new  <	mov al, 120>

1134:
old  <	jmp printUnsignedLong$26>
new  <>

1135:
old  <>
new  < printUnsignedLong$26:>

1136:
old  < printUnsignedLong$25:>
new  <	; Parameter signedchar Â£temporary1569 80>

1137:
old  <	; Assign Â£temporary1540 120>
new  <	mov [rbp + 80], al>

1138:
old  <	mov al, 120>
new  <>

1139:
old  <>
new  < printUnsignedLong$27:>

1140:
old  < printUnsignedLong$26:>
new  <	; Call printChar 56 0>

1141:
old  <	; Parameter signedchar Â£temporary1540 80>
new  <	mov qword [rbp + 56], printUnsignedLong$28>

1142:
old  <	mov [rbp + 80], al>
new  <	mov [rbp + 64], rbp>

1143:
old  <>
new  <	add rbp, 56>

1144:
old  < printUnsignedLong$27:>
new  <	jmp printChar>

1145:
old  <	; Call printChar 56 0>
new  <>

1146:
old  <	mov qword [rbp + 56], printUnsignedLong$28>
new  < printUnsignedLong$28:>

1147:
old  <	mov [rbp + 64], rbp>
new  <	; PostCall 56>

1148:
old  <	add rbp, 56>
new  <>

1149:
old  <	jmp printChar>
new  < printUnsignedLong$29:>

1150:
old  <>
new  <	; NotEqual 35 unsignedValue 0>

1151:
old  < printUnsignedLong$28:>
new  <	cmp qword [rbp + 24], 0>

1152:
old  <	; PostCall 56>
new  <	jne printUnsignedLong$35>

1154:
old  < printUnsignedLong$29:>
new  < printUnsignedLong$30:>

1155:
old  <	; NotEqual 35 unsignedValue 0>
new  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1156:
old  <	cmp qword [rbp + 24], 0>
new  <>

1157:
old  <	jne printUnsignedLong$35>
new  < printUnsignedLong$31:>

1158:
old  <>
new  <	; Parameter signedchar 48 80>

1159:
old  < printUnsignedLong$30:>
new  <	mov byte [rbp + 80], 48>

1160:
old  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1161:
old  <>
new  < printUnsignedLong$32:>

1162:
old  < printUnsignedLong$31:>
new  <	; Call printChar 56 0>

1163:
old  <	; Parameter signedchar 48 80>
new  <	mov qword [rbp + 56], printUnsignedLong$33>

1164:
old  <	mov byte [rbp + 80], 48>
new  <	mov [rbp + 64], rbp>

1165:
old  <>
new  <	add rbp, 56>

1166:
old  < printUnsignedLong$32:>
new  <	jmp printChar>

1167:
old  <	; Call printChar 56 0>
new  <>

1168:
old  <	mov qword [rbp + 56], printUnsignedLong$33>
new  < printUnsignedLong$33:>

1169:
old  <	mov [rbp + 64], rbp>
new  <	; PostCall 56>

1170:
old  <	add rbp, 56>
new  <>

1171:
old  <	jmp printChar>
new  < printUnsignedLong$34:>

1172:
old  <>
new  <	; Goto 41>

1173:
old  < printUnsignedLong$33:>
new  <	jmp printUnsignedLong$41>

1174:
old  <	; PostCall 56>
new  <>

1175:
old  <>
new  < printUnsignedLong$35:>

1176:
old  < printUnsignedLong$34:>
new  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1177:
old  <	; Goto 41>
new  <>

1178:
old  <	jmp printUnsignedLong$41>
new  < printUnsignedLong$36:>

1179:
old  <>
new  <	; Parameter unsignedlongint unsignedValue 80>

1180:
old  < printUnsignedLong$35:>
new  <	mov rax, [rbp + 24]>

1181:
old  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov [rbp + 80], rax>

1183:
old  < printUnsignedLong$36:>
new  < printUnsignedLong$37:>

1184:
old  <	; Parameter unsignedlongint unsignedValue 80>
new  <	; Parameter unsignedlongint base 88>

1185:
old  <	mov rax, [rbp + 24]>
new  <	mov rax, [rbp + 44]>

1186:
old  <	mov [rbp + 80], rax>
new  <	mov [rbp + 88], rax>

1188:
old  < printUnsignedLong$37:>
new  < printUnsignedLong$38:>

1189:
old  <	; Parameter unsignedlongint base 88>
new  <	; Parameter signedint capital 96>

1190:
old  <	mov rax, [rbp + 44]>
new  <	mov eax, [rbp + 52]>

1191:
old  <	mov [rbp + 88], rax>
new  <	mov [rbp + 96], eax>

1193:
old  < printUnsignedLong$38:>
new  < printUnsignedLong$39:>

1194:
old  <	; Parameter signedint capital 96>
new  <	; Call printUnsignedLongRec 56 0>

1195:
old  <	mov eax, [rbp + 52]>
new  <	mov qword [rbp + 56], printUnsignedLong$40>

1196:
old  <	mov [rbp + 96], eax>
new  <	mov [rbp + 64], rbp>

1197:
old  <>
new  <	add rbp, 56>

1198:
old  < printUnsignedLong$39:>
new  <	jmp printUnsignedLongRec>

1199:
old  <	; Call printUnsignedLongRec 56 0>
new  <>

1200:
old  <	mov qword [rbp + 56], printUnsignedLong$40>
new  < printUnsignedLong$40:>

1201:
old  <	mov [rbp + 64], rbp>
new  <	; PostCall 56>

1202:
old  <	add rbp, 56>
new  <>

1203:
old  <	jmp printUnsignedLongRec>
new  < printUnsignedLong$41:>

1204:
old  <>
new  <	; Return>

1205:
old  < printUnsignedLong$40:>
new  <	mov rax, [rbp]>

1206:
old  <	; PostCall 56>
new  <	mov rdi, [rbp + 16]>

1207:
old  <>
new  <	mov rbp, [rbp + 8]>

1208:
old  < printUnsignedLong$41:>
new  <	jmp rax>

1209:
old  <	; Return>
new  <>

1210:
old  <	mov rax, [rbp]>
new  < printUnsignedLong$42:>

1211:
old  <	mov rdi, [rbp + 16]>
new  <	; FunctionEnd printUnsignedLong>

1212:
old  <	mov rbp, [rbp + 8]>
new  <>

1213:
old  <	jmp rax>
new  <section .data>

1215:
old  < printUnsignedLong$42:>
new  <container8bytes#:>

1216:
old  <	; FunctionEnd printUnsignedLong>
new  <	; InitializerZero 8>

1217:
old  <>
new  <	times 8 db 0>

1218:
old  <section .data>
new  <>

1219:
old  <>
new  <section .data>

1220:
old  <container8bytes#:>
new  <>

1221:
old  <	; InitializerZero 8>
new  <float8$10.0#:>

1222:
old  <	times 8 db 0>
new  <	; Initializer LongDouble 10.0>

1223:
old  <>
new  <	dq 10.0>

1224:
old  <section .data>
new  <>

1225:
old  <>
new  <section .data>

1226:
old  <float8$10.0#:>
new  <>

1227:
old  <	; Initializer LongDouble 10.0>
new  <container4bytes#:>

1228:
old  <	dq 10.0>
new  <	; InitializerZero 4>

1229:
old  <>
new  <	times 4 db 0>

1230:
old  <section .data>
new  <>

1231:
old  <>
new  <section .text>

1232:
old  <container4bytes#:>
new  <>

1233:
old  <	; InitializerZero 4>
new  < printLongDoubleFraction:>

1234:
old  <	times 4 db 0>
new  <	; PushFloat longDoubleValue>

1235:
old  <>
new  <	fld qword [rbp + 24]>

1236:
old  <section .text>
new  <>

1237:
old  <>
new  < printLongDoubleFraction$1:>

1238:
old  < printLongDoubleFraction:>
new  <	; PushFloat longDoubleValue>

1239:
old  <	; PushFloat longDoubleValue>
new  <	fld qword [rbp + 24]>

1240:
old  <	fld qword [rbp + 24]>
new  <>

1241:
old  <>
new  < printLongDoubleFraction$2:>

1242:
old  < printLongDoubleFraction$1:>
new  <	; FloatingToIntegral Â£temporary1575 longDoubleValue>

1243:
old  <	; PushFloat longDoubleValue>
new  <	fistp qword [container8bytes#]>

1244:
old  <	fld qword [rbp + 24]>
new  <	mov rax, [container8bytes#]>

1246:
old  < printLongDoubleFraction$2:>
new  < printLongDoubleFraction$3:>

1247:
old  <	; FloatingToIntegral Â£temporary1546 longDoubleValue>
new  <	; IntegralToFloating Â£temporary1576 Â£temporary1575>

1248:
old  <	fistp qword [container8bytes#]>
new  <	mov [container8bytes#], rax>

1249:
old  <	mov rax, [container8bytes#]>
new  <	fild qword [container8bytes#]>

1251:
old  < printLongDoubleFraction$3:>
new  < printLongDoubleFraction$4:>

1252:
old  <	; IntegralToFloating Â£temporary1547 Â£temporary1546>
new  <	; BinarySubtract Â£temporary1577 longDoubleValue Â£temporary1576>

1253:
old  <	mov [container8bytes#], rax>
new  <	fsub>

1254:
old  <	fild qword [container8bytes#]>
new  <>

1255:
old  <>
new  < printLongDoubleFraction$5:>

1256:
old  < printLongDoubleFraction$4:>
new  <	; PopFloat longDoubleValue>

1257:
old  <	; BinarySubtract Â£temporary1548 longDoubleValue Â£temporary1547>
new  <	fstp qword [rbp + 24]>

1258:
old  <	fsub>
new  <>

1259:
old  <>
new  < printLongDoubleFraction$6:>

1260:
old  < printLongDoubleFraction$5:>
new  <	; NotEqual 8 precision 0>

1261:
old  <	; PopFloat longDoubleValue>
new  <	cmp dword [rbp + 36], 0>

1262:
old  <	fstp qword [rbp + 24]>
new  <	jne printLongDoubleFraction$8>

1264:
old  < printLongDoubleFraction$6:>
new  < printLongDoubleFraction$7:>

1265:
old  <	; NotEqual 8 precision 0>
new  <	; Assign precision 6>

1266:
old  <	cmp dword [rbp + 36], 0>
new  <	mov dword [rbp + 36], 6>

1267:
old  <	jne printLongDoubleFraction$8>
new  <>

1268:
old  <>
new  < printLongDoubleFraction$8:>

1269:
old  < printLongDoubleFraction$7:>
new  <	; NotEqual 10 grid 0>

1270:
old  <	; Assign precision 9>
new  <	cmp dword [rbp + 32], 0>

1271:
old  <	mov dword [rbp + 36], 9>
new  <	jne printLongDoubleFraction$10>

1273:
old  < printLongDoubleFraction$8:>
new  < printLongDoubleFraction$9:>

1274:
old  <	; NotEqual 10 grid 0>
new  <	; SignedLessThanEqual 14 precision 0>

1275:
old  <	cmp dword [rbp + 32], 0>
new  <	cmp dword [rbp + 36], 0>

1276:
old  <	jne printLongDoubleFraction$10>
new  <	jle printLongDoubleFraction$14>

1278:
old  < printLongDoubleFraction$9:>
new  < printLongDoubleFraction$10:>

1279:
old  <	; SignedLessThanEqual 14 precision 0>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1280:
old  <	cmp dword [rbp + 36], 0>
new  <>

1281:
old  <	jle printLongDoubleFraction$14>
new  < printLongDoubleFraction$11:>

1282:
old  <>
new  <	; Parameter signedchar 46 64>

1283:
old  < printLongDoubleFraction$10:>
new  <	mov byte [rbp + 64], 46>

1284:
old  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1285:
old  <>
new  < printLongDoubleFraction$12:>

1286:
old  < printLongDoubleFraction$11:>
new  <	; Call printChar 40 0>

1287:
old  <	; Parameter signedchar 46 64>
new  <	mov qword [rbp + 40], printLongDoubleFraction$13>

1288:
old  <	mov byte [rbp + 64], 46>
new  <	mov [rbp + 48], rbp>

1289:
old  <>
new  <	add rbp, 40>

1290:
old  < printLongDoubleFraction$12:>
new  <	jmp printChar>

1291:
old  <	; Call printChar 40 0>
new  <>

1292:
old  <	mov qword [rbp + 40], printLongDoubleFraction$13>
new  < printLongDoubleFraction$13:>

1293:
old  <	mov [rbp + 48], rbp>
new  <	; PostCall 40>

1294:
old  <	add rbp, 40>
new  <>

1295:
old  <	jmp printChar>
new  < printLongDoubleFraction$14:>

1296:
old  <>
new  <	; Assign Â£temporary1583 precision>

1297:
old  < printLongDoubleFraction$13:>
new  <	mov eax, [rbp + 36]>

1298:
old  <	; PostCall 40>
new  <>

1299:
old  <>
new  < printLongDoubleFraction$15:>

1300:
old  < printLongDoubleFraction$14:>
new  <	; BinarySubtract precision precision 1>

1301:
old  <	; Assign Â£temporary1554 precision>
new  <	dec dword [rbp + 36]>

1302:
old  <	mov eax, [rbp + 36]>
new  <>

1303:
old  <>
new  < printLongDoubleFraction$16:>

1304:
old  < printLongDoubleFraction$15:>
new  <	; SignedLessThanEqual 35 Â£temporary1583 0>

1305:
old  <	; BinarySubtract precision precision 1>
new  <	cmp eax, 0>

1306:
old  <	dec dword [rbp + 36]>
new  <	jle printLongDoubleFraction$35>

1308:
old  < printLongDoubleFraction$16:>
new  < printLongDoubleFraction$17:>

1309:
old  <	; SignedLessThanEqual 34 Â£temporary1554 0>
new  <	; PushFloat 10.0>

1310:
old  <	cmp eax, 0>
new  <	fld qword [float8$10.0#]>

1311:
old  <	jle printLongDoubleFraction$34>
new  <>

1312:
old  <>
new  < printLongDoubleFraction$18:>

1313:
old  < printLongDoubleFraction$17:>
new  <	; PushFloat longDoubleValue>

1314:
old  <	; PushFloat 10.0>
new  <	fld qword [rbp + 24]>

1315:
old  <	fld qword [float8$10.0#]>
new  <>

1316:
old  <>
new  < printLongDoubleFraction$19:>

1317:
old  < printLongDoubleFraction$18:>
new  <	; SignedMultiply Â£temporary1585 10.0 longDoubleValue>

1318:
old  <	; PushFloat longDoubleValue>
new  <	fmul>

1319:
old  <	fld qword [rbp + 24]>
new  <>

1320:
old  <>
new  < printLongDoubleFraction$20:>

1321:
old  < printLongDoubleFraction$19:>
new  <	; PopFloat longDoubleValue10>

1322:
old  <	; SignedMultiply Â£temporary1556 10.0 longDoubleValue>
new  <	fstp qword [rbp + 40]>

1323:
old  <	fmul>
new  <>

1324:
old  <>
new  < printLongDoubleFraction$21:>

1325:
old  < printLongDoubleFraction$20:>
new  <	; PushFloat longDoubleValue10>

1326:
old  <	; TopFloat longDoubleValue10>
new  <	fld qword [rbp + 40]>

1327:
old  <	fst qword [rbp + 40]>
new  <>

1328:
old  <>
new  < printLongDoubleFraction$22:>

1329:
old  < printLongDoubleFraction$21:>
new  <	; FloatingToIntegral Â£temporary1586 longDoubleValue10>

1330:
old  <	; FloatingToIntegral Â£temporary1557 longDoubleValue10>
new  <	fistp dword [container4bytes#]>

1331:
old  <	fistp dword [container4bytes#]>
new  <	mov eax, [container4bytes#]>

1332:
old  <	mov eax, [container4bytes#]>
new  <>

1333:
old  <>
new  < printLongDoubleFraction$23:>

1334:
old  < printLongDoubleFraction$22:>
new  <	; Assign digitValue Â£temporary1586>

1335:
old  <	; Assign digitValue Â£temporary1557>
new  <	mov [rbp + 48], eax>

1336:
old  <	mov [rbp + 48], eax>
new  <>

1337:
old  <>
new  < printLongDoubleFraction$24:>

1338:
old  < printLongDoubleFraction$23:>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1339:
old  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1340:
old  <>
new  < printLongDoubleFraction$25:>

1341:
old  < printLongDoubleFraction$24:>
new  <	; BinaryAdd Â£temporary1587 digitValue 48>

1342:
old  <	; BinaryAdd Â£temporary1558 digitValue 48>
new  <	mov eax, [rbp + 48]>

1343:
old  <	mov eax, [rbp + 48]>
new  <	add eax, 48>

1344:
old  <	add eax, 48>
new  <>

1345:
old  <>
new  < printLongDoubleFraction$26:>

1346:
old  < printLongDoubleFraction$25:>
new  <	; IntegralToIntegral Â£temporary1588 Â£temporary1587>

1347:
old  <	; IntegralToIntegral Â£temporary1559 Â£temporary1558>
new  <	cmp eax, 0>

1348:
old  <	cmp eax, 0>
new  <	jge printLongDoubleFraction$27>

1349:
old  <	jge printLongDoubleFraction$26>
new  <	neg eax>

1350:
old  <	neg eax>
new  <	neg al>

1351:
old  <	neg al>
new  <>

1352:
old  <>
new  < printLongDoubleFraction$27:>

1353:
old  < printLongDoubleFraction$26:>
new  <	; Parameter signedchar Â£temporary1588 76>

1354:
old  <	; Parameter signedchar Â£temporary1559 76>
new  <	mov [rbp + 76], al>

1355:
old  <	mov [rbp + 76], al>
new  <>

1356:
old  <>
new  < printLongDoubleFraction$28:>

1357:
old  < printLongDoubleFraction$27:>
new  <	; Call printChar 52 0>

1358:
old  <	; Call printChar 52 0>
new  <	mov qword [rbp + 52], printLongDoubleFraction$29>

1359:
old  <	mov qword [rbp + 52], printLongDoubleFraction$28>
new  <	mov [rbp + 60], rbp>

1360:
old  <	mov [rbp + 60], rbp>
new  <	add rbp, 52>

1361:
old  <	add rbp, 52>
new  <	jmp printChar>

1362:
old  <	jmp printChar>
new  <>

1363:
old  <>
new  < printLongDoubleFraction$29:>

1364:
old  < printLongDoubleFraction$28:>
new  <	; PostCall 52>

1365:
old  <	; PostCall 52>
new  <>

1366:
old  <>
new  < printLongDoubleFraction$30:>

1367:
old  < printLongDoubleFraction$29:>
new  <	; PushFloat longDoubleValue10>

1368:
old  <	; PushFloat longDoubleValue10>
new  <	fld qword [rbp + 40]>

1369:
old  <	fld qword [rbp + 40]>
new  <>

1370:
old  <>
new  < printLongDoubleFraction$31:>

1371:
old  < printLongDoubleFraction$30:>
new  <	; IntegralToFloating Â£temporary1590 digitValue>

1372:
old  <	; IntegralToFloating Â£temporary1561 digitValue>
new  <	fild dword [rbp + 48]>

1373:
old  <	fild dword [rbp + 48]>
new  <>

1374:
old  <>
new  < printLongDoubleFraction$32:>

1375:
old  < printLongDoubleFraction$31:>
new  <	; BinarySubtract Â£temporary1591 longDoubleValue10 Â£temporary1590>

1376:
old  <	; BinarySubtract Â£temporary1562 longDoubleValue10 Â£temporary1561>
new  <	fsub>

1377:
old  <	fsub>
new  <>

1378:
old  <>
new  < printLongDoubleFraction$33:>

1379:
old  < printLongDoubleFraction$32:>
new  <	; PopFloat longDoubleValue>

1380:
old  <	; PopFloat longDoubleValue>
new  <	fstp qword [rbp + 24]>

1381:
old  <	fstp qword [rbp + 24]>
new  <>

1382:
old  <>
new  < printLongDoubleFraction$34:>

1383:
old  < printLongDoubleFraction$33:>
new  <	; Goto 14>

1384:
old  <	; Goto 14>
new  <	jmp printLongDoubleFraction$14>

1385:
old  <	jmp printLongDoubleFraction$14>
new  <>

1386:
old  <>
new  < printLongDoubleFraction$35:>

1387:
old  < printLongDoubleFraction$34:>
new  <	; Return>

1388:
old  <	; Return>
new  <	mov rax, [rbp]>

1389:
old  <	mov rax, [rbp]>
new  <	mov rdi, [rbp + 16]>

1390:
old  <	mov rdi, [rbp + 16]>
new  <	mov rbp, [rbp + 8]>

1391:
old  <	mov rbp, [rbp + 8]>
new  <	jmp rax>

1392:
old  <	jmp rax>
new  <>

1393:
old  <>
new  < printLongDoubleFraction$36:>

1394:
old  < printLongDoubleFraction$35:>
new  <	; FunctionEnd printLongDoubleFraction>

1395:
old  <	; FunctionEnd printLongDoubleFraction>
new  <>

1396:
old  <>
new  <section .text>

1397:
old  <section .text>
new  <>

1398:
old  <>
new  < printLongDoublePlain:>

1399:
old  < printLongDoublePlain:>
new  <	; PushFloat longDoubleValue>

1400:
old  <	; PushFloat longDoubleValue>
new  <	fld qword [rbp + 24]>

1401:
old  <	fld qword [rbp + 24]>
new  <>

1402:
old  <>
new  < printLongDoublePlain$1:>

1403:
old  < printLongDoublePlain$1:>
new  <	; PushFloat 0.0>

1404:
old  <	; PushFloat 0.0>
new  <	fldz>

1405:
old  <	fldz>
new  <>

1406:
old  <>
new  < printLongDoublePlain$2:>

1407:
old  < printLongDoublePlain$2:>
new  <	; SignedGreaterThanEqual 12 longDoubleValue 0.0>

1408:
old  <	; SignedGreaterThanEqual 12 longDoubleValue 0.0>
new  <	fcompp>

1409:
old  <	fcompp>
new  <	fstsw ax>

1410:
old  <	fstsw ax>
new  <	sahf>

1411:
old  <	sahf>
new  <	jbe printLongDoublePlain$12>

1412:
old  <	jbe printLongDoublePlain$12>
new  <>

1413:
old  <>
new  < printLongDoublePlain$3:>

1414:
old  < printLongDoublePlain$3:>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1415:
old  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1416:
old  <>
new  < printLongDoublePlain$4:>

1417:
old  < printLongDoublePlain$4:>
new  <	; Parameter signedchar 45 72>

1418:
old  <	; Parameter signedchar 45 72>
new  <	mov byte [rbp + 72], 45>

1419:
old  <	mov byte [rbp + 72], 45>
new  <>

1420:
old  <>
new  < printLongDoublePlain$5:>

1421:
old  < printLongDoublePlain$5:>
new  <	; Call printChar 48 0>

1422:
old  <	; Call printChar 48 0>
new  <	mov qword [rbp + 48], printLongDoublePlain$6>

1423:
old  <	mov qword [rbp + 48], printLongDoublePlain$6>
new  <	mov [rbp + 56], rbp>

1424:
old  <	mov [rbp + 56], rbp>
new  <	add rbp, 48>

1425:
old  <	add rbp, 48>
new  <	jmp printChar>

1426:
old  <	jmp printChar>
new  <>

1427:
old  <>
new  < printLongDoublePlain$6:>

1428:
old  < printLongDoublePlain$6:>
new  <	; PostCall 48>

1429:
old  <	; PostCall 48>
new  <>

1430:
old  <>
new  < printLongDoublePlain$7:>

1431:
old  < printLongDoublePlain$7:>
new  <	; PushFloat longDoubleValue>

1432:
old  <	; PushFloat longDoubleValue>
new  <	fld qword [rbp + 24]>

1433:
old  <	fld qword [rbp + 24]>
new  <>

1434:
old  <>
new  < printLongDoublePlain$8:>

1435:
old  < printLongDoublePlain$8:>
new  <	; UnarySubtract Â£temporary1594 longDoubleValue>

1436:
old  <	; UnarySubtract Â£temporary1565 longDoubleValue>
new  <	fchs>

1437:
old  <	fchs>
new  <>

1438:
old  <>
new  < printLongDoublePlain$9:>

1439:
old  < printLongDoublePlain$9:>
new  <	; PopFloat longDoubleValue>

1440:
old  <	; PopFloat longDoubleValue>
new  <	fstp qword [rbp + 24]>

1441:
old  <	fstp qword [rbp + 24]>
new  <>

1442:
old  <>
new  < printLongDoublePlain$10:>

1443:
old  < printLongDoublePlain$10:>
new  <	; Assign plus 0>

1444:
old  <	; Assign plus 0>
new  <	mov dword [rbp + 32], 0>

1445:
old  <	mov dword [rbp + 32], 0>
new  <>

1446:
old  <>
new  < printLongDoublePlain$11:>

1447:
old  < printLongDoublePlain$11:>
new  <	; Assign space 0>

1448:
old  <	; Assign space 0>
new  <	mov dword [rbp + 36], 0>

1449:
old  <	mov dword [rbp + 36], 0>
new  <>

1450:
old  <>
new  < printLongDoublePlain$12:>

1451:
old  < printLongDoublePlain$12:>
new  <	; PushFloat longDoubleValue>

1452:
old  <	; PushFloat longDoubleValue>
new  <	fld qword [rbp + 24]>

1453:
old  <	fld qword [rbp + 24]>
new  <>

1454:
old  <>
new  < printLongDoublePlain$13:>

1455:
old  < printLongDoublePlain$13:>
new  <	; FloatingToIntegral Â£temporary1595 longDoubleValue>

1456:
old  <	; FloatingToIntegral Â£temporary1566 longDoubleValue>
new  <	fistp qword [container8bytes#]>

1457:
old  <	fistp qword [container8bytes#]>
new  <	mov rax, [container8bytes#]>

1458:
old  <	mov rax, [container8bytes#]>
new  <>

1459:
old  <>
new  < printLongDoublePlain$14:>

1460:
old  < printLongDoublePlain$14:>
new  <	; Assign longValue Â£temporary1595>

1461:
old  <	; Assign longValue Â£temporary1566>
new  <	mov [rbp + 48], rax>

1462:
old  <	mov [rbp + 48], rax>
new  <>

1463:
old  <>
new  < printLongDoublePlain$15:>

1464:
old  < printLongDoublePlain$15:>
new  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1465:
old  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1466:
old  <>
new  < printLongDoublePlain$16:>

1467:
old  < printLongDoublePlain$16:>
new  <	; Parameter signed long int longValue 80>

1468:
old  <	; Parameter signed long int longValue 80>
new  <	mov rax, [rbp + 48]>

1469:
old  <	mov rax, [rbp + 48]>
new  <	mov [rbp + 80], rax>

1470:
old  <	mov [rbp + 80], rax>
new  <>

1471:
old  <>
new  < printLongDoublePlain$17:>

1472:
old  < printLongDoublePlain$17:>
new  <	; Parameter signedint plus 88>

1473:
old  <	; Parameter signedint plus 88>
new  <	mov eax, [rbp + 32]>

1474:
old  <	mov eax, [rbp + 32]>
new  <	mov [rbp + 88], eax>

1475:
old  <	mov [rbp + 88], eax>
new  <>

1476:
old  <>
new  < printLongDoublePlain$18:>

1477:
old  < printLongDoublePlain$18:>
new  <	; Parameter signedint space 92>

1478:
old  <	; Parameter signedint space 92>
new  <	mov eax, [rbp + 36]>

1479:
old  <	mov eax, [rbp + 36]>
new  <	mov [rbp + 92], eax>

1480:
old  <	mov [rbp + 92], eax>
new  <>

1481:
old  <>
new  < printLongDoublePlain$19:>

1482:
old  < printLongDoublePlain$19:>
new  <	; Call printLongInt 56 0>

1483:
old  <	; Call printLongInt 56 0>
new  <	mov qword [rbp + 56], printLongDoublePlain$20>

1484:
old  <	mov qword [rbp + 56], printLongDoublePlain$20>
new  <	mov [rbp + 64], rbp>

1485:
old  <	mov [rbp + 64], rbp>
new  <	add rbp, 56>

1486:
old  <	add rbp, 56>
new  <	jmp printLongInt>

1487:
old  <	jmp printLongInt>
new  <>

1488:
old  <>
new  < printLongDoublePlain$20:>

1489:
old  < printLongDoublePlain$20:>
new  <	; PostCall 56>

1490:
old  <	; PostCall 56>
new  <>

1491:
old  <>
new  < printLongDoublePlain$21:>

1492:
old  < printLongDoublePlain$21:>
new  <	; PushFloat longDoubleValue>

1493:
old  <	; PushFloat longDoubleValue>
new  <	fld qword [rbp + 24]>

1494:
old  <	fld qword [rbp + 24]>
new  <>

1495:
old  <>
new  < printLongDoublePlain$22:>

1496:
old  < printLongDoublePlain$22:>
new  <	; IntegralToFloating Â£temporary1597 longValue>

1497:
old  <	; IntegralToFloating Â£temporary1568 longValue>
new  <	fild qword [rbp + 48]>

1498:
old  <	fild qword [rbp + 48]>
new  <>

1499:
old  <>
new  < printLongDoublePlain$23:>

1500:
old  < printLongDoublePlain$23:>
new  <	; BinarySubtract Â£temporary1598 longDoubleValue Â£temporary1597>

1501:
old  <	; BinarySubtract Â£temporary1569 longDoubleValue Â£temporary1568>
new  <	fsub>

1502:
old  <	fsub>
new  <>

1503:
old  <>
new  < printLongDoublePlain$24:>

1504:
old  < printLongDoublePlain$24:>
new  <	; PopFloat longDoubleValue>

1505:
old  <	; PopFloat longDoubleValue>
new  <	fstp qword [rbp + 24]>

1506:
old  <	fstp qword [rbp + 24]>
new  <>

1507:
old  <>
new  < printLongDoublePlain$25:>

1508:
old  < printLongDoublePlain$25:>
new  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1509:
old  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1510:
old  <>
new  < printLongDoublePlain$26:>

1511:
old  < printLongDoublePlain$26:>
new  <	; PushFloat longDoubleValue>

1512:
old  <	; PushFloat longDoubleValue>
new  <	fld qword [rbp + 24]>

1513:
old  <	fld qword [rbp + 24]>
new  <>

1514:
old  <>
new  < printLongDoublePlain$27:>

1515:
old  < printLongDoublePlain$27:>
new  <	; Parameter longdouble longDoubleValue 80>

1516:
old  <	; Parameter longdouble longDoubleValue 80>
new  <	fstp qword [rbp + 80]>

1517:
old  <	fstp qword [rbp + 80]>
new  <>

1518:
old  <>
new  < printLongDoublePlain$28:>

1519:
old  < printLongDoublePlain$28:>
new  <	; Parameter signedint grid 88>

1520:
old  <	; Parameter signedint grid 88>
new  <	mov eax, [rbp + 40]>

1521:
old  <	mov eax, [rbp + 40]>
new  <	mov [rbp + 88], eax>

1522:
old  <	mov [rbp + 88], eax>
new  <>

1523:
old  <>
new  < printLongDoublePlain$29:>

1524:
old  < printLongDoublePlain$29:>
new  <	; Parameter signedint precision 92>

1525:
old  <	; Parameter signedint precision 92>
new  <	mov eax, [rbp + 44]>

1526:
old  <	mov eax, [rbp + 44]>
new  <	mov [rbp + 92], eax>

1527:
old  <	mov [rbp + 92], eax>
new  <>

1528:
old  <>
new  < printLongDoublePlain$30:>

1529:
old  < printLongDoublePlain$30:>
new  <	; Call printLongDoubleFraction 56 0>

1530:
old  <	; Call printLongDoubleFraction 56 0>
new  <	mov qword [rbp + 56], printLongDoublePlain$31>

1531:
old  <	mov qword [rbp + 56], printLongDoublePlain$31>
new  <	mov [rbp + 64], rbp>

1532:
old  <	mov [rbp + 64], rbp>
new  <	add rbp, 56>

1533:
old  <	add rbp, 56>
new  <	jmp printLongDoubleFraction>

1534:
old  <	jmp printLongDoubleFraction>
new  <>

1535:
old  <>
new  < printLongDoublePlain$31:>

1536:
old  < printLongDoublePlain$31:>
new  <	; PostCall 56>

1537:
old  <	; PostCall 56>
new  <>

1538:
old  <>
new  < printLongDoublePlain$32:>

1539:
old  < printLongDoublePlain$32:>
new  <	; Return>

1540:
old  <	; Return>
new  <	mov rax, [rbp]>

1541:
old  <	mov rax, [rbp]>
new  <	mov rdi, [rbp + 16]>

1542:
old  <	mov rdi, [rbp + 16]>
new  <	mov rbp, [rbp + 8]>

1543:
old  <	mov rbp, [rbp + 8]>
new  <	jmp rax>

1544:
old  <	jmp rax>
new  <>

1545:
old  <>
new  < printLongDoublePlain$33:>

1546:
old  < printLongDoublePlain$33:>
new  <	; FunctionEnd printLongDoublePlain>

1547:
old  <	; FunctionEnd printLongDoublePlain>
new  <>

1548:
old  <>
new  <section .text>

1549:
old  <section .text>
new  <>

1550:
old  <>
new  < printLongDoubleExpo:>

1551:
old  < printLongDoubleExpo:>
new  <	; PushFloat value>

1552:
old  <	; PushFloat value>
new  <	fld qword [rbp + 24]>

1553:
old  <	fld qword [rbp + 24]>
new  <>

1554:
old  <>
new  < printLongDoubleExpo$1:>

1555:
old  < printLongDoubleExpo$1:>
new  <	; PushFloat 0.0>

1556:
old  <	; PushFloat 0.0>
new  <	fldz>

1557:
old  <	fldz>
new  <>

1558:
old  <>
new  < printLongDoubleExpo$2:>

1559:
old  < printLongDoubleExpo$2:>
new  <	; NotEqual 27 value 0.0>

1560:
old  <	; NotEqual 27 value 0.0>
new  <	fcompp>

1561:
old  <	fcompp>
new  <	fstsw ax>

1562:
old  <	fstsw ax>
new  <	sahf>

1563:
old  <	sahf>
new  <	jne printLongDoubleExpo$27>

1564:
old  <	jne printLongDoubleExpo$27>
new  <>

1565:
old  <>
new  < printLongDoubleExpo$3:>

1566:
old  < printLongDoubleExpo$3:>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1567:
old  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1568:
old  <>
new  < printLongDoubleExpo$4:>

1569:
old  < printLongDoubleExpo$4:>
new  <	; Parameter signedchar 48 76>

1570:
old  <	; Parameter signedchar 48 76>
new  <	mov byte [rbp + 76], 48>

1571:
old  <	mov byte [rbp + 76], 48>
new  <>

1572:
old  <>
new  < printLongDoubleExpo$5:>

1573:
old  < printLongDoubleExpo$5:>
new  <	; Call printChar 52 0>

1574:
old  <	; Call printChar 52 0>
new  <	mov qword [rbp + 52], printLongDoubleExpo$6>

1575:
old  <	mov qword [rbp + 52], printLongDoubleExpo$6>
new  <	mov [rbp + 60], rbp>

1576:
old  <	mov [rbp + 60], rbp>
new  <	add rbp, 52>

1577:
old  <	add rbp, 52>
new  <	jmp printChar>

1578:
old  <	jmp printChar>
new  <>

1579:
old  <>
new  < printLongDoubleExpo$6:>

1580:
old  < printLongDoubleExpo$6:>
new  <	; PostCall 52>

1581:
old  <	; PostCall 52>
new  <>

1582:
old  <>
new  < printLongDoubleExpo$7:>

1583:
old  < printLongDoubleExpo$7:>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1584:
old  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1585:
old  <>
new  < printLongDoubleExpo$8:>

1586:
old  < printLongDoubleExpo$8:>
new  <	; PushFloat 0.0>

1587:
old  <	; PushFloat 0.0>
new  <	fldz>

1588:
old  <	fldz>
new  <>

1589:
old  <>
new  < printLongDoubleExpo$9:>

1590:
old  < printLongDoubleExpo$9:>
new  <	; Parameter longdouble 0.0 76>

1591:
old  <	; Parameter longdouble 0.0 76>
new  <	fstp qword [rbp + 76]>

1592:
old  <	fstp qword [rbp + 76]>
new  <>

1593:
old  <>
new  < printLongDoubleExpo$10:>

1594:
old  < printLongDoubleExpo$10:>
new  <	; Parameter signedint precision 84>

1595:
old  <	; Parameter signedint precision 84>
new  <	mov eax, [rbp + 44]>

1596:
old  <	mov eax, [rbp + 44]>
new  <	mov [rbp + 84], eax>

1597:
old  <	mov [rbp + 84], eax>
new  <>

1598:
old  <>
new  < printLongDoubleExpo$11:>

1599:
old  < printLongDoubleExpo$11:>
new  <	; Parameter signedint grid 88>

1600:
old  <	; Parameter signedint grid 88>
new  <	mov eax, [rbp + 40]>

1601:
old  <	mov eax, [rbp + 40]>
new  <	mov [rbp + 88], eax>

1602:
old  <	mov [rbp + 88], eax>
new  <>

1603:
old  <>
new  < printLongDoubleExpo$12:>

1604:
old  < printLongDoubleExpo$12:>
new  <	; Call printLongDoubleFraction 52 0>

1605:
old  <	; Call printLongDoubleFraction 52 0>
new  <	mov qword [rbp + 52], printLongDoubleExpo$13>

1606:
old  <	mov qword [rbp + 52], printLongDoubleExpo$13>
new  <	mov [rbp + 60], rbp>

1607:
old  <	mov [rbp + 60], rbp>
new  <	add rbp, 52>

1608:
old  <	add rbp, 52>
new  <	jmp printLongDoubleFraction>

1609:
old  <	jmp printLongDoubleFraction>
new  <>

1610:
old  <>
new  < printLongDoubleExpo$13:>

1611:
old  < printLongDoubleExpo$13:>
new  <	; PostCall 52>

1612:
old  <	; PostCall 52>
new  <>

1613:
old  <>
new  < printLongDoubleExpo$14:>

1614:
old  < printLongDoubleExpo$14:>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1615:
old  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1616:
old  <>
new  < printLongDoubleExpo$15:>

1617:
old  < printLongDoubleExpo$15:>
new  <	; Equal 18 capital 0>

1618:
old  <	; Equal 18 capital 0>
new  <	cmp dword [rbp + 48], 0>

1619:
old  <	cmp dword [rbp + 48], 0>
new  <	je printLongDoubleExpo$18>

1620:
old  <	je printLongDoubleExpo$18>
new  <>

1621:
old  <>
new  < printLongDoubleExpo$16:>

1622:
old  < printLongDoubleExpo$16:>
new  <	; Assign Â£temporary1605 69>

1623:
old  <	; Assign Â£temporary1576 69>
new  <	mov al, 69>

1624:
old  <	mov al, 69>
new  <>

1625:
old  <>
new  < printLongDoubleExpo$17:>

1626:
old  < printLongDoubleExpo$17:>
new  <	; Goto 19>

1627:
old  <	; Goto 19>
new  <	jmp printLongDoubleExpo$19>

1628:
old  <	jmp printLongDoubleExpo$19>
new  <>

1629:
old  <>
new  < printLongDoubleExpo$18:>

1630:
old  < printLongDoubleExpo$18:>
new  <	; Assign Â£temporary1605 101>

1631:
old  <	; Assign Â£temporary1576 101>
new  <	mov al, 101>

1632:
old  <	mov al, 101>
new  <>

1633:
old  <>
new  < printLongDoubleExpo$19:>

1634:
old  < printLongDoubleExpo$19:>
new  <	; Parameter signedchar Â£temporary1605 76>

1635:
old  <	; Parameter signedchar Â£temporary1576 76>
new  <	mov [rbp + 76], al>

1636:
old  <	mov [rbp + 76], al>
new  <>

1637:
old  <>
new  < printLongDoubleExpo$20:>

1638:
old  < printLongDoubleExpo$20:>
new  <	; Call printChar 52 0>

1639:
old  <	; Call printChar 52 0>
new  <	mov qword [rbp + 52], printLongDoubleExpo$21>

1640:
old  <	mov qword [rbp + 52], printLongDoubleExpo$21>
new  <	mov [rbp + 60], rbp>

1641:
old  <	mov [rbp + 60], rbp>
new  <	add rbp, 52>

1642:
old  <	add rbp, 52>
new  <	jmp printChar>

1643:
old  <	jmp printChar>
new  <>

1644:
old  <>
new  < printLongDoubleExpo$21:>

1645:
old  < printLongDoubleExpo$21:>
new  <	; PostCall 52>

1646:
old  <	; PostCall 52>
new  <>

1647:
old  <>
new  < printLongDoubleExpo$22:>

1648:
old  < printLongDoubleExpo$22:>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1649:
old  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1650:
old  <>
new  < printLongDoubleExpo$23:>

1651:
old  < printLongDoubleExpo$23:>
new  <	; Parameter signedchar 48 76>

1652:
old  <	; Parameter signedchar 48 76>
new  <	mov byte [rbp + 76], 48>

1653:
old  <	mov byte [rbp + 76], 48>
new  <>

1654:
old  <>
new  < printLongDoubleExpo$24:>

1655:
old  < printLongDoubleExpo$24:>
new  <	; Call printChar 52 0>

1656:
old  <	; Call printChar 52 0>
new  <	mov qword [rbp + 52], printLongDoubleExpo$25>

1657:
old  <	mov qword [rbp + 52], printLongDoubleExpo$25>
new  <	mov [rbp + 60], rbp>

1658:
old  <	mov [rbp + 60], rbp>
new  <	add rbp, 52>

1659:
old  <	add rbp, 52>
new  <	jmp printChar>

1660:
old  <	jmp printChar>
new  <>

1661:
old  <>
new  < printLongDoubleExpo$25:>

1662:
old  < printLongDoubleExpo$25:>
new  <	; PostCall 52>

1663:
old  <	; PostCall 52>
new  <>

1664:
old  <>
new  < printLongDoubleExpo$26:>

1665:
old  < printLongDoubleExpo$26:>
new  <	; Goto 80>

1666:
old  <	; Goto 80>
new  <	jmp printLongDoubleExpo$80>

1667:
old  <	jmp printLongDoubleExpo$80>
new  <>

1668:
old  <>
new  < printLongDoubleExpo$27:>

1669:
old  < printLongDoubleExpo$27:>
new  <	; PushFloat value>

1670:
old  <	; PushFloat value>
new  <	fld qword [rbp + 24]>

1671:
old  <	fld qword [rbp + 24]>
new  <>

1672:
old  <>
new  < printLongDoubleExpo$28:>

1673:
old  < printLongDoubleExpo$28:>
new  <	; PushFloat 0.0>

1674:
old  <	; PushFloat 0.0>
new  <	fldz>

1675:
old  <	fldz>
new  <>

1676:
old  <>
new  < printLongDoubleExpo$29:>

1677:
old  < printLongDoubleExpo$29:>
new  <	; SignedGreaterThanEqual 37 value 0.0>

1678:
old  <	; SignedGreaterThanEqual 37 value 0.0>
new  <	fcompp>

1679:
old  <	fcompp>
new  <	fstsw ax>

1680:
old  <	fstsw ax>
new  <	sahf>

1681:
old  <	sahf>
new  <	jbe printLongDoubleExpo$37>

1682:
old  <	jbe printLongDoubleExpo$37>
new  <>

1683:
old  <>
new  < printLongDoubleExpo$30:>

1684:
old  < printLongDoubleExpo$30:>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1685:
old  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1686:
old  <>
new  < printLongDoubleExpo$31:>

1687:
old  < printLongDoubleExpo$31:>
new  <	; Parameter signedchar 45 76>

1688:
old  <	; Parameter signedchar 45 76>
new  <	mov byte [rbp + 76], 45>

1689:
old  <	mov byte [rbp + 76], 45>
new  <>

1690:
old  <>
new  < printLongDoubleExpo$32:>

1691:
old  < printLongDoubleExpo$32:>
new  <	; Call printChar 52 0>

1692:
old  <	; Call printChar 52 0>
new  <	mov qword [rbp + 52], printLongDoubleExpo$33>

1693:
old  <	mov qword [rbp + 52], printLongDoubleExpo$33>
new  <	mov [rbp + 60], rbp>

1694:
old  <	mov [rbp + 60], rbp>
new  <	add rbp, 52>

1695:
old  <	add rbp, 52>
new  <	jmp printChar>

1696:
old  <	jmp printChar>
new  <>

1697:
old  <>
new  < printLongDoubleExpo$33:>

1698:
old  < printLongDoubleExpo$33:>
new  <	; PostCall 52>

1699:
old  <	; PostCall 52>
new  <>

1700:
old  <>
new  < printLongDoubleExpo$34:>

1701:
old  < printLongDoubleExpo$34:>
new  <	; PushFloat value>

1702:
old  <	; PushFloat value>
new  <	fld qword [rbp + 24]>

1703:
old  <	fld qword [rbp + 24]>
new  <>

1704:
old  <>
new  < printLongDoubleExpo$35:>

1705:
old  < printLongDoubleExpo$35:>
new  <	; UnarySubtract Â£temporary1610 value>

1706:
old  <	; UnarySubtract Â£temporary1581 value>
new  <	fchs>

1707:
old  <	fchs>
new  <>

1708:
old  <>
new  < printLongDoubleExpo$36:>

1709:
old  < printLongDoubleExpo$36:>
new  <	; PopFloat value>

1710:
old  <	; PopFloat value>
new  <	fstp qword [rbp + 24]>

1711:
old  <	fstp qword [rbp + 24]>
new  <>

1712:
old  <>
new  < printLongDoubleExpo$37:>

1713:
old  < printLongDoubleExpo$37:>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1714:
old  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1715:
old  <>
new  < printLongDoubleExpo$38:>

1716:
old  < printLongDoubleExpo$38:>
new  <	; PushFloat value>

1717:
old  <	; PushFloat value>
new  <	fld qword [rbp + 24]>

1718:
old  <	fld qword [rbp + 24]>
new  <>

1719:
old  <>
new  < printLongDoubleExpo$39:>

1720:
old  < printLongDoubleExpo$39:>
new  <	; Parameter double value 76>

1721:
old  <	; Parameter double value 76>
new  <	fstp qword [rbp + 76]>

1722:
old  <	fstp qword [rbp + 76]>
new  <>

1723:
old  <>
new  < printLongDoubleExpo$40:>

1724:
old  < printLongDoubleExpo$40:>
new  <	; Call log10 52 0>

1725:
old  <	; Call log10 52 0>
new  <	mov qword [rbp + 52], printLongDoubleExpo$41>

1726:
old  <	mov qword [rbp + 52], printLongDoubleExpo$41>
new  <	mov [rbp + 60], rbp>

1727:
old  <	mov [rbp + 60], rbp>
new  <	add rbp, 52>

1728:
old  <	add rbp, 52>
new  <	jmp log10>

1729:
old  <	jmp log10>
new  <>

1730:
old  <>
new  < printLongDoubleExpo$41:>

1731:
old  < printLongDoubleExpo$41:>
new  <	; PostCall 52>

1732:
old  <	; PostCall 52>
new  <>

1733:
old  <>
new  < printLongDoubleExpo$42:>

1734:
old  < printLongDoubleExpo$42:>
new  <	; GetReturnValue Â£temporary1611>

1735:
old  <	; GetReturnValue Â£temporary1582>
new  <>

1736:
old  <>
new  < printLongDoubleExpo$43:>

1737:
old  < printLongDoubleExpo$43:>
new  <	; FloatingToIntegral Â£temporary1612 Â£temporary1611>

1738:
old  <	; FloatingToIntegral Â£temporary1583 Â£temporary1582>
new  <	fistp dword [container4bytes#]>

1739:
old  <	fistp dword [container4bytes#]>
new  <	mov eax, [container4bytes#]>

1740:
old  <	mov eax, [container4bytes#]>
new  <>

1741:
old  <>
new  < printLongDoubleExpo$44:>

1742:
old  < printLongDoubleExpo$44:>
new  <	; Assign expo Â£temporary1612>

1743:
old  <	; Assign expo Â£temporary1583>
new  <	mov [rbp + 52], eax>

1744:
old  <	mov [rbp + 52], eax>
new  <>

1745:
old  <>
new  < printLongDoubleExpo$45:>

1746:
old  < printLongDoubleExpo$45:>
new  <	; PushFloat value>

1747:
old  <	; PushFloat value>
new  <	fld qword [rbp + 24]>

1748:
old  <	fld qword [rbp + 24]>
new  <>

1749:
old  <>
new  < printLongDoubleExpo$46:>

1750:
old  < printLongDoubleExpo$46:>
new  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 1>

1751:
old  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 1>
new  <	fstp qword [rbp + 56]>

1752:
old  <	fstp qword [rbp + 56]>
new  <>

1753:
old  <>
new  < printLongDoubleExpo$47:>

1754:
old  < printLongDoubleExpo$47:>
new  <	; PushFloat 10.0>

1755:
old  <	; PushFloat 10.0>
new  <	fld qword [float8$10.0#]>

1756:
old  <	fld qword [float8$10.0#]>
new  <>

1757:
old  <>
new  < printLongDoubleExpo$48:>

1758:
old  < printLongDoubleExpo$48:>
new  <	; Parameter double 10.0 80>

1759:
old  <	; Parameter double 10.0 80>
new  <	fstp qword [rbp + 88]>

1760:
old  <	fstp qword [rbp + 88]>
new  <>

1761:
old  <>
new  < printLongDoubleExpo$49:>

1762:
old  < printLongDoubleExpo$49:>
new  <	; IntegralToFloating Â£temporary1613 expo>

1763:
old  <	; IntegralToFloating Â£temporary1584 expo>
new  <	fild dword [rbp + 52]>

1764:
old  <	fild dword [rbp + 52]>
new  <>

1765:
old  <>
new  < printLongDoubleExpo$50:>

1766:
old  < printLongDoubleExpo$50:>
new  <	; Parameter double Â£temporary1613 88>

1767:
old  <	; Parameter double Â£temporary1584 88>
new  <	fstp qword [rbp + 96]>

1768:
old  <	fstp qword [rbp + 96]>
new  <>

1769:
old  <>
new  < printLongDoubleExpo$51:>

1770:
old  < printLongDoubleExpo$51:>
new  <	; Call pow 56 0>

1771:
old  <	; Call pow 56 0>
new  <	mov qword [rbp + 64], printLongDoubleExpo$52>

1772:
old  <	mov qword [rbp + 64], printLongDoubleExpo$52>
new  <	mov [rbp + 72], rbp>

1773:
old  <	mov [rbp + 72], rbp>
new  <	add rbp, 64>

1774:
old  <	add rbp, 64>
new  <	jmp pow>

1775:
old  <	jmp pow>
new  <>

1776:
old  <>
new  < printLongDoubleExpo$52:>

1777:
old  < printLongDoubleExpo$52:>
new  <	; PostCall 56>

1778:
old  <	; PostCall 56>
new  <	fstp qword [rbp + 64]>

1779:
old  <	fstp qword [rbp + 64]>
new  <	fld qword [rbp + 56]>

1780:
old  <	fld qword [rbp + 56]>
new  <	fld qword [rbp + 64]>

1781:
old  <	fld qword [rbp + 64]>
new  <>

1782:
old  <>
new  < printLongDoubleExpo$53:>

1783:
old  < printLongDoubleExpo$53:>
new  <	; GetReturnValue Â£temporary1614>

1784:
old  <	; GetReturnValue Â£temporary1585>
new  <>

1785:
old  <>
new  < printLongDoubleExpo$54:>

1786:
old  < printLongDoubleExpo$54:>
new  <	; SignedDivide Â£temporary1615 value Â£temporary1614>

1787:
old  <	; SignedDivide Â£temporary1586 value Â£temporary1585>
new  <	fdiv>

1788:
old  <	fdiv>
new  <>

1789:
old  <>
new  < printLongDoubleExpo$55:>

1790:
old  < printLongDoubleExpo$55:>
new  <	; PopFloat value>

1791:
old  <	; PopFloat value>
new  <	fstp qword [rbp + 24]>

1792:
old  <	fstp qword [rbp + 24]>
new  <>

1793:
old  <>
new  < printLongDoubleExpo$56:>

1794:
old  < printLongDoubleExpo$56:>
new  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1795:
old  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1796:
old  <>
new  < printLongDoubleExpo$57:>

1797:
old  < printLongDoubleExpo$57:>
new  <	; PushFloat value>

1798:
old  <	; PushFloat value>
new  <	fld qword [rbp + 24]>

1799:
old  <	fld qword [rbp + 24]>
new  <>

1800:
old  <>
new  < printLongDoubleExpo$58:>

1801:
old  < printLongDoubleExpo$58:>
new  <	; Parameter longdouble value 80>

1802:
old  <	; Parameter longdouble value 80>
new  <	fstp qword [rbp + 80]>

1803:
old  <	fstp qword [rbp + 80]>
new  <>

1804:
old  <>
new  < printLongDoubleExpo$59:>

1805:
old  < printLongDoubleExpo$59:>
new  <	; Parameter signedint plus 88>

1806:
old  <	; Parameter signedint plus 88>
new  <	mov eax, [rbp + 32]>

1807:
old  <	mov eax, [rbp + 32]>
new  <	mov [rbp + 88], eax>

1808:
old  <	mov [rbp + 88], eax>
new  <>

1809:
old  <>
new  < printLongDoubleExpo$60:>

1810:
old  < printLongDoubleExpo$60:>
new  <	; Parameter signedint space 92>

1811:
old  <	; Parameter signedint space 92>
new  <	mov eax, [rbp + 36]>

1812:
old  <	mov eax, [rbp + 36]>
new  <	mov [rbp + 92], eax>

1813:
old  <	mov [rbp + 92], eax>
new  <>

1814:
old  <>
new  < printLongDoubleExpo$61:>

1815:
old  < printLongDoubleExpo$61:>
new  <	; Parameter signedint grid 96>

1816:
old  <	; Parameter signedint grid 96>
new  <	mov eax, [rbp + 40]>

1817:
old  <	mov eax, [rbp + 40]>
new  <	mov [rbp + 96], eax>

1818:
old  <	mov [rbp + 96], eax>
new  <>

1819:
old  <>
new  < printLongDoubleExpo$62:>

1820:
old  < printLongDoubleExpo$62:>
new  <	; Parameter signedint precision 100>

1821:
old  <	; Parameter signedint precision 100>
new  <	mov eax, [rbp + 44]>

1822:
old  <	mov eax, [rbp + 44]>
new  <	mov [rbp + 100], eax>

1823:
old  <	mov [rbp + 100], eax>
new  <>

1824:
old  <>
new  < printLongDoubleExpo$63:>

1825:
old  < printLongDoubleExpo$63:>
new  <	; Call printLongDoublePlain 56 0>

1826:
old  <	; Call printLongDoublePlain 56 0>
new  <	mov qword [rbp + 56], printLongDoubleExpo$64>

1827:
old  <	mov qword [rbp + 56], printLongDoubleExpo$64>
new  <	mov [rbp + 64], rbp>

1828:
old  <	mov [rbp + 64], rbp>
new  <	add rbp, 56>

1829:
old  <	add rbp, 56>
new  <	jmp printLongDoublePlain>

1830:
old  <	jmp printLongDoublePlain>
new  <>

1831:
old  <>
new  < printLongDoubleExpo$64:>

1832:
old  < printLongDoubleExpo$64:>
new  <	; PostCall 56>

1833:
old  <	; PostCall 56>
new  <>

1834:
old  <>
new  < printLongDoubleExpo$65:>

1835:
old  < printLongDoubleExpo$65:>
new  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1836:
old  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1837:
old  <>
new  < printLongDoubleExpo$66:>

1838:
old  < printLongDoubleExpo$66:>
new  <	; Equal 69 capital 0>

1839:
old  <	; Equal 69 capital 0>
new  <	cmp dword [rbp + 48], 0>

1840:
old  <	cmp dword [rbp + 48], 0>
new  <	je printLongDoubleExpo$69>

1841:
old  <	je printLongDoubleExpo$69>
new  <>

1842:
old  <>
new  < printLongDoubleExpo$67:>

1843:
old  < printLongDoubleExpo$67:>
new  <	; Assign Â£temporary1618 69>

1844:
old  <	; Assign Â£temporary1589 69>
new  <	mov al, 69>

1845:
old  <	mov al, 69>
new  <>

1846:
old  <>
new  < printLongDoubleExpo$68:>

1847:
old  < printLongDoubleExpo$68:>
new  <	; Goto 70>

1848:
old  <	; Goto 70>
new  <	jmp printLongDoubleExpo$70>

1849:
old  <	jmp printLongDoubleExpo$70>
new  <>

1850:
old  <>
new  < printLongDoubleExpo$69:>

1851:
old  < printLongDoubleExpo$69:>
new  <	; Assign Â£temporary1618 101>

1852:
old  <	; Assign Â£temporary1589 101>
new  <	mov al, 101>

1853:
old  <	mov al, 101>
new  <>

1854:
old  <>
new  < printLongDoubleExpo$70:>

1855:
old  < printLongDoubleExpo$70:>
new  <	; Parameter signedchar Â£temporary1618 80>

1856:
old  <	; Parameter signedchar Â£temporary1589 80>
new  <	mov [rbp + 80], al>

1857:
old  <	mov [rbp + 80], al>
new  <>

1858:
old  <>
new  < printLongDoubleExpo$71:>

1859:
old  < printLongDoubleExpo$71:>
new  <	; Call printChar 56 0>

1860:
old  <	; Call printChar 56 0>
new  <	mov qword [rbp + 56], printLongDoubleExpo$72>

1861:
old  <	mov qword [rbp + 56], printLongDoubleExpo$72>
new  <	mov [rbp + 64], rbp>

1862:
old  <	mov [rbp + 64], rbp>
new  <	add rbp, 56>

1863:
old  <	add rbp, 56>
new  <	jmp printChar>

1864:
old  <	jmp printChar>
new  <>

1865:
old  <>
new  < printLongDoubleExpo$72:>

1866:
old  < printLongDoubleExpo$72:>
new  <	; PostCall 56>

1867:
old  <	; PostCall 56>
new  <>

1868:
old  <>
new  < printLongDoubleExpo$73:>

1869:
old  < printLongDoubleExpo$73:>
new  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1870:
old  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1871:
old  <>
new  < printLongDoubleExpo$74:>

1872:
old  < printLongDoubleExpo$74:>
new  <	; IntegralToIntegral Â£temporary1620 expo>

1873:
old  <	; IntegralToIntegral Â£temporary1591 expo>
new  <	mov eax, [rbp + 52]>

1874:
old  <	mov eax, [rbp + 52]>
new  <	mov rbx, 4294967295>

1875:
old  <	mov rbx, 4294967295>
new  <	and rax, rbx>

1876:
old  <	and rax, rbx>
new  <	cmp eax, 0>

1877:
old  <	cmp eax, 0>
new  <	jge printLongDoubleExpo$75>

1878:
old  <	jge printLongDoubleExpo$75>
new  <	neg eax>

1879:
old  <	neg eax>
new  <	neg rax>

1880:
old  <	neg rax>
new  <>

1881:
old  <>
new  < printLongDoubleExpo$75:>

1882:
old  < printLongDoubleExpo$75:>
new  <	; Parameter signed long int Â£temporary1620 80>

1883:
old  <	; Parameter signed long int Â£temporary1591 80>
new  <	mov [rbp + 80], rax>

1884:
old  <	mov [rbp + 80], rax>
new  <>

1885:
old  <>
new  < printLongDoubleExpo$76:>

1886:
old  < printLongDoubleExpo$76:>
new  <	; Parameter signedint 1 88>

1887:
old  <	; Parameter signedint 1 88>
new  <	mov dword [rbp + 88], 1>

1888:
old  <	mov dword [rbp + 88], 1>
new  <>

1889:
old  <>
new  < printLongDoubleExpo$77:>

1890:
old  < printLongDoubleExpo$77:>
new  <	; Parameter signedint 0 92>

1891:
old  <	; Parameter signedint 0 92>
new  <	mov dword [rbp + 92], 0>

1892:
old  <	mov dword [rbp + 92], 0>
new  <>

1893:
old  <>
new  < printLongDoubleExpo$78:>

1894:
old  < printLongDoubleExpo$78:>
new  <	; Call printLongInt 56 0>

1895:
old  <	; Call printLongInt 56 0>
new  <	mov qword [rbp + 56], printLongDoubleExpo$79>

1896:
old  <	mov qword [rbp + 56], printLongDoubleExpo$79>
new  <	mov [rbp + 64], rbp>

1897:
old  <	mov [rbp + 64], rbp>
new  <	add rbp, 56>

1898:
old  <	add rbp, 56>
new  <	jmp printLongInt>

1899:
old  <	jmp printLongInt>
new  <>

1900:
old  <>
new  < printLongDoubleExpo$79:>

1901:
old  < printLongDoubleExpo$79:>
new  <	; PostCall 56>

1902:
old  <	; PostCall 56>
new  <>

1903:
old  <>
new  < printLongDoubleExpo$80:>

1904:
old  < printLongDoubleExpo$80:>
new  <	; Return>

1905:
old  <	; Return>
new  <	mov rax, [rbp]>

1906:
old  <	mov rax, [rbp]>
new  <	mov rdi, [rbp + 16]>

1907:
old  <	mov rdi, [rbp + 16]>
new  <	mov rbp, [rbp + 8]>

1908:
old  <	mov rbp, [rbp + 8]>
new  <	jmp rax>

1909:
old  <	jmp rax>
new  <>

1910:
old  <>
new  < printLongDoubleExpo$81:>

1911:
old  < printLongDoubleExpo$81:>
new  <	; FunctionEnd printLongDoubleExpo>

1912:
old  <	; FunctionEnd printLongDoubleExpo>
new  <>

1913:
old  <>
new  <section .text>

1914:
old  <section .text>
new  <>

1915:
old  <>
new  < checkWidthAndPrecision:>

1916:
old  < checkWidthAndPrecision:>
new  <	; Equal 9 widthPtr 0>

1917:
old  <	; Equal 9 widthPtr 0>
new  <	cmp qword [rbp + 32], 0>

1918:
old  <	cmp qword [rbp + 32], 0>
new  <	je checkWidthAndPrecision$9>

1919:
old  <	je checkWidthAndPrecision$9>
new  <>

1920:
old  <>
new  < checkWidthAndPrecision$1:>

1921:
old  < checkWidthAndPrecision$1:>
new  <	; Dereference Â£temporary1628 -> widthPtr widthPtr 0>

1922:
old  <	; Dereference Â£temporary1599 -> widthPtr widthPtr 0>
new  <	mov rsi, [rbp + 32]>

1923:
old  <	mov rsi, [rbp + 32]>
new  <>

1924:
old  <>
new  < checkWidthAndPrecision$2:>

1925:
old  < checkWidthAndPrecision$2:>
new  <	; NotEqual 9 Â£temporary1628 -> widthPtr -1>

1926:
old  <	; NotEqual 9 Â£temporary1599 -> widthPtr -1>
new  <	cmp dword [rsi], -1>

1927:
old  <	cmp dword [rsi], -1>
new  <	jne checkWidthAndPrecision$9>

1928:
old  <	jne checkWidthAndPrecision$9>
new  <>

1929:
old  <>
new  < checkWidthAndPrecision$3:>

1930:
old  < checkWidthAndPrecision$3:>
new  <	; Dereference Â£temporary1631 -> widthPtr widthPtr 0>

1931:
old  <	; Dereference Â£temporary1602 -> widthPtr widthPtr 0>
new  <	mov rsi, [rbp + 32]>

1932:
old  <	mov rsi, [rbp + 32]>
new  <>

1933:
old  <>
new  < checkWidthAndPrecision$4:>

1934:
old  < checkWidthAndPrecision$4:>
new  <	; BinaryAdd arg_list arg_list 4>

1935:
old  <	; BinaryAdd arg_list arg_list 4>
new  <	add qword [rbp + 24], 4>

1936:
old  <	add qword [rbp + 24], 4>
new  <>

1937:
old  <>
new  < checkWidthAndPrecision$5:>

1938:
old  < checkWidthAndPrecision$5:>
new  <	; BinarySubtract Â£temporary1634 arg_list 4>

1939:
old  <	; BinarySubtract Â£temporary1605 arg_list 4>
new  <	mov rdi, [rbp + 24]>

1940:
old  <	mov rdi, [rbp + 24]>
new  <	sub rdi, 4>

1941:
old  <	sub rdi, 4>
new  <>

1942:
old  <>
new  < checkWidthAndPrecision$6:>

1943:
old  < checkWidthAndPrecision$6:>
new  <	; IntegralToIntegral Â£temporary1636 Â£temporary1634>

1944:
old  <	; IntegralToIntegral Â£temporary1607 Â£temporary1605>
new  <>

1945:
old  <>
new  < checkWidthAndPrecision$7:>

1946:
old  < checkWidthAndPrecision$7:>
new  <	; Dereference Â£temporary1637 -> Â£temporary1636 Â£temporary1636 0>

1947:
old  <	; Dereference Â£temporary1608 -> Â£temporary1607 Â£temporary1607 0>
new  <>

1948:
old  <>
new  < checkWidthAndPrecision$8:>

1949:
old  < checkWidthAndPrecision$8:>
new  <	; Assign Â£temporary1631 -> widthPtr Â£temporary1637 -> Â£temporary1636>

1950:
old  <	; Assign Â£temporary1602 -> widthPtr Â£temporary1608 -> Â£temporary1607>
new  <	mov eax, [rdi]>

1951:
old  <	mov eax, [rdi]>
new  <	mov [rsi], eax>

1952:
old  <	mov [rsi], eax>
new  <>

1953:
old  <>
new  < checkWidthAndPrecision$9:>

1954:
old  < checkWidthAndPrecision$9:>
new  <	; Equal 18 precisionPtr 0>

1955:
old  <	; Equal 18 precisionPtr 0>
new  <	cmp qword [rbp + 40], 0>

1956:
old  <	cmp qword [rbp + 40], 0>
new  <	je checkWidthAndPrecision$18>

1957:
old  <	je checkWidthAndPrecision$18>
new  <>

1958:
old  <>
new  < checkWidthAndPrecision$10:>

1959:
old  < checkWidthAndPrecision$10:>
new  <	; Dereference Â£temporary1639 -> precisionPtr precisionPtr 0>

1960:
old  <	; Dereference Â£temporary1610 -> precisionPtr precisionPtr 0>
new  <	mov rsi, [rbp + 40]>

1961:
old  <	mov rsi, [rbp + 40]>
new  <>

1962:
old  <>
new  < checkWidthAndPrecision$11:>

1963:
old  < checkWidthAndPrecision$11:>
new  <	; NotEqual 18 Â£temporary1639 -> precisionPtr -1>

1964:
old  <	; NotEqual 18 Â£temporary1610 -> precisionPtr -1>
new  <	cmp dword [rsi], -1>

1965:
old  <	cmp dword [rsi], -1>
new  <	jne checkWidthAndPrecision$18>

1966:
old  <	jne checkWidthAndPrecision$18>
new  <>

1967:
old  <>
new  < checkWidthAndPrecision$12:>

1968:
old  < checkWidthAndPrecision$12:>
new  <	; Dereference Â£temporary1642 -> precisionPtr precisionPtr 0>

1969:
old  <	; Dereference Â£temporary1613 -> precisionPtr precisionPtr 0>
new  <	mov rsi, [rbp + 40]>

1970:
old  <	mov rsi, [rbp + 40]>
new  <>

1971:
old  <>
new  < checkWidthAndPrecision$13:>

1972:
old  < checkWidthAndPrecision$13:>
new  <	; BinaryAdd arg_list arg_list 4>

1973:
old  <	; BinaryAdd arg_list arg_list 4>
new  <	add qword [rbp + 24], 4>

1974:
old  <	add qword [rbp + 24], 4>
new  <>

1975:
old  <>
new  < checkWidthAndPrecision$14:>

1976:
old  < checkWidthAndPrecision$14:>
new  <	; BinarySubtract Â£temporary1645 arg_list 4>

1977:
old  <	; BinarySubtract Â£temporary1616 arg_list 4>
new  <	mov rdi, [rbp + 24]>

1978:
old  <	mov rdi, [rbp + 24]>
new  <	sub rdi, 4>

1979:
old  <	sub rdi, 4>
new  <>

1980:
old  <>
new  < checkWidthAndPrecision$15:>

1981:
old  < checkWidthAndPrecision$15:>
new  <	; IntegralToIntegral Â£temporary1647 Â£temporary1645>

1982:
old  <	; IntegralToIntegral Â£temporary1618 Â£temporary1616>
new  <>

1983:
old  <>
new  < checkWidthAndPrecision$16:>

1984:
old  < checkWidthAndPrecision$16:>
new  <	; Dereference Â£temporary1648 -> Â£temporary1647 Â£temporary1647 0>

1985:
old  <	; Dereference Â£temporary1619 -> Â£temporary1618 Â£temporary1618 0>
new  <>

1986:
old  <>
new  < checkWidthAndPrecision$17:>

1987:
old  < checkWidthAndPrecision$17:>
new  <	; Assign Â£temporary1642 -> precisionPtr Â£temporary1648 -> Â£temporary1647>

1988:
old  <	; Assign Â£temporary1613 -> precisionPtr Â£temporary1619 -> Â£temporary1618>
new  <	mov eax, [rdi]>

1989:
old  <	mov eax, [rdi]>
new  <	mov [rsi], eax>

1990:
old  <	mov [rsi], eax>
new  <>

1991:
old  <>
new  < checkWidthAndPrecision$18:>

1992:
old  < checkWidthAndPrecision$18:>
new  <	; Return arg_list>

1993:
old  <	; Return arg_list>
new  <	mov rbx, [rbp + 24]>

1994:
old  <	mov rbx, [rbp + 24]>
new  <	mov rax, [rbp]>

1995:
old  <	mov rax, [rbp]>
new  <	mov rdi, [rbp + 16]>

1996:
old  <	mov rdi, [rbp + 16]>
new  <	mov rbp, [rbp + 8]>

1997:
old  <	mov rbp, [rbp + 8]>
new  <	jmp rax>

1998:
old  <	jmp rax>
new  <>

1999:
old  <>
new  < checkWidthAndPrecision$19:>

2000:
old  < checkWidthAndPrecision$19:>
new  <	; FunctionEnd checkWidthAndPrecision>

2001:
old  <	; FunctionEnd checkWidthAndPrecision>
new  <>

2002:
old  <>
new  <section .text>

2003:
old  <section .text>
new  <>

2004:
old  <>
new  < printArgument:>

2005:
old  < testY:>
new  <	; Dereference Â£temporary1649 -> format format 0>

2006:
old  <	; Empty>
new  <	mov rsi, [rbp + 24]>

2008:
old  < testY$1:>
new  < printArgument$1:>

2009:
old  <	; Return>
new  <	; Assign c Â£temporary1649 -> format>

2010:
old  <	mov rax, [rbp]>
new  <	mov al, [rsi]>

2011:
old  <	mov rdi, [rbp + 16]>
new  <	mov [rbp + 88], al>

2012:
old  <	mov rbp, [rbp + 8]>
new  <>

2013:
old  <	jmp rax>
new  < printArgument$2:>

2014:
old  <>
new  <	; Case 21 c 100>

2015:
old  < testY$2:>
new  <	mov al, [rbp + 88]>

2016:
old  <	; FunctionEnd testY>
new  <	cmp al, 100>

2017:
old  <>
new  <	je printArgument$21>

2018:
old  <section .text>
new  <>

2019:
old  <>
new  < printArgument$3:>

2020:
old  < testX:>
new  <	; Case 21 c 105>

2021:
old  <	; Empty>
new  <	cmp al, 105>

2022:
old  <>
new  <	je printArgument$21>

2023:
old  < testX$1:>
new  <>

2024:
old  <	; NotEqual 4 j 1>
new  < printArgument$4:>

2025:
old  <	cmp dword [rbp + 28], 1>
new  <	; Case 73 c 99>

2026:
old  <	jne testX$4>
new  <	cmp al, 99>

2027:
old  <>
new  <	je printArgument$73>

2028:
old  < testX$2:>
new  <>

2029:
old  <	; Assign i 1>
new  < printArgument$5:>

2030:
old  <	mov dword [rbp + 24], 1>
new  <	; Case 93 c 115>

2031:
old  <>
new  <	cmp al, 115>

2032:
old  < testX$3:>
new  <	je printArgument$93>

2033:
old  <	; Goto 5>
new  <>

2034:
old  <	jmp testX$5>
new  < printArgument$6:>

2035:
old  <>
new  <	; Case 113 c 88>

2036:
old  < testX$4:>
new  <	cmp al, 88>

2037:
old  <	; Assign i 2>
new  <	je printArgument$113>

2038:
old  <	mov dword [rbp + 24], 2>
new  <>

2039:
old  <>
new  < printArgument$7:>

2040:
old  < testX$5:>
new  <	; Case 113 c 120>

2041:
old  <	; Assign j i>
new  <	cmp al, 120>

2042:
old  <	mov eax, [rbp + 24]>
new  <	je printArgument$113>

2043:
old  <	mov [rbp + 28], eax>
new  <>

2044:
old  <>
new  < printArgument$8:>

2045:
old  < testX$6:>
new  <	; Case 113 c 98>

2046:
old  <	; Return>
new  <	cmp al, 98>

2047:
old  <	mov rax, [rbp]>
new  <	je printArgument$113>

2048:
old  <	mov rdi, [rbp + 16]>
new  <>

2049:
old  <	mov rbp, [rbp + 8]>
new  < printArgument$9:>

2050:
old  <	jmp rax>
new  <	; Case 113 c 111>

2051:
old  <>
new  <	cmp al, 111>

2052:
old  < testX$7:>
new  <	je printArgument$113>

2053:
old  <	; FunctionEnd testX>
new  <>

2054:
old  <>
new  < printArgument$10:>

2055:
old  <section .text>
new  <	; Case 113 c 117>

2056:
old  <>
new  <	cmp al, 117>

2057:
old  < printArgument:>
new  <	je printArgument$113>

2058:
old  <	; Dereference Â£temporary1621 -> format format 0>
new  <>

2059:
old  <	mov rsi, [rbp + 24]>
new  < printArgument$11:>

2060:
old  <>
new  <	; Case 173 c 71>

2061:
old  < printArgument$1:>
new  <	cmp al, 71>

2062:
old  <	; Assign c Â£temporary1621 -> format>
new  <	je printArgument$173>

2063:
old  <	mov al, [rsi]>
new  <>

2064:
old  <	mov [rbp + 88], al>
new  < printArgument$12:>

2065:
old  <>
new  <	; Case 173 c 103>

2066:
old  < printArgument$2:>
new  <	cmp al, 103>

2067:
old  <	; Case 21 c 100>
new  <	je printArgument$173>

2068:
old  <	mov al, [rbp + 88]>
new  <>

2069:
old  <	cmp al, 100>
new  < printArgument$13:>

2070:
old  <	je printArgument$21>
new  <	; Case 173 c 69>

2071:
old  <>
new  <	cmp al, 69>

2072:
old  < printArgument$3:>
new  <	je printArgument$173>

2073:
old  <	; Case 21 c 105>
new  <>

2074:
old  <	cmp al, 105>
new  < printArgument$14:>

2075:
old  <	je printArgument$21>
new  <	; Case 173 c 101>

2076:
old  <>
new  <	cmp al, 101>

2077:
old  < printArgument$4:>
new  <	je printArgument$173>

2078:
old  <	; Case 73 c 99>
new  <>

2079:
old  <	cmp al, 99>
new  < printArgument$15:>

2080:
old  <	je printArgument$73>
new  <	; Case 173 c 102>

2081:
old  <>
new  <	cmp al, 102>

2082:
old  < printArgument$5:>
new  <	je printArgument$173>

2083:
old  <	; Case 93 c 115>
new  <>

2084:
old  <	cmp al, 115>
new  < printArgument$16:>

2085:
old  <	je printArgument$93>
new  <	; Case 299 c 112>

2086:
old  <>
new  <	cmp al, 112>

2087:
old  < printArgument$6:>
new  <	je printArgument$299>

2088:
old  <	; Case 113 c 88>
new  <>

2089:
old  <	cmp al, 88>
new  < printArgument$17:>

2090:
old  <	je printArgument$113>
new  <	; Case 324 c 110>

2091:
old  <>
new  <	cmp al, 110>

2092:
old  < printArgument$7:>
new  <	je printArgument$324>

2093:
old  <	; Case 113 c 120>
new  <>

2094:
old  <	cmp al, 120>
new  < printArgument$18:>

2095:
old  <	je printArgument$113>
new  <	; Case 346 c 37>

2096:
old  <>
new  <	cmp al, 37>

2097:
old  < printArgument$8:>
new  <	je printArgument$346>

2098:
old  <	; Case 113 c 98>
new  <>

2099:
old  <	cmp al, 98>
new  < printArgument$19:>

2100:
old  <	je printArgument$113>
new  <	; CaseEnd c>

2102:
old  < printArgument$9:>
new  < printArgument$20:>

2103:
old  <	; Case 113 c 111>
new  <	; Goto 359>

2104:
old  <	cmp al, 111>
new  <	jmp printArgument$359>

2105:
old  <	je printArgument$113>
new  <>

2106:
old  <>
new  < printArgument$21:>

2107:
old  < printArgument$10:>
new  <	; Equal 30 shortInt 0>

2108:
old  <	; Case 113 c 117>
new  <	cmp dword [rbp + 64], 0>

2109:
old  <	cmp al, 117>
new  <	je printArgument$30>

2110:
old  <	je printArgument$113>
new  <>

2111:
old  <>
new  < printArgument$22:>

2112:
old  < printArgument$11:>
new  <	; BinaryAdd arg_list arg_list 4>

2113:
old  <	; Case 173 c 71>
new  <	add qword [rbp + 32], 4>

2114:
old  <	cmp al, 71>
new  <>

2115:
old  <	je printArgument$173>
new  < printArgument$23:>

2116:
old  <>
new  <	; BinarySubtract Â£temporary1652 arg_list 4>

2117:
old  < printArgument$12:>
new  <	mov rsi, [rbp + 32]>

2118:
old  <	; Case 173 c 103>
new  <	sub rsi, 4>

2119:
old  <	cmp al, 103>
new  <>

2120:
old  <	je printArgument$173>
new  < printArgument$24:>

2121:
old  <>
new  <	; IntegralToIntegral Â£temporary1654 Â£temporary1652>

2122:
old  < printArgument$13:>
new  <>

2123:
old  <	; Case 173 c 69>
new  < printArgument$25:>

2124:
old  <	cmp al, 69>
new  <	; Dereference Â£temporary1655 -> Â£temporary1654 Â£temporary1654 0>

2125:
old  <	je printArgument$173>
new  <>

2126:
old  <>
new  < printArgument$26:>

2127:
old  < printArgument$14:>
new  <	; IntegralToIntegral Â£temporary1656 Â£temporary1655 -> Â£temporary1654>

2128:
old  <	; Case 173 c 101>
new  <	mov eax, [rsi]>

2129:
old  <	cmp al, 101>
new  <	cmp eax, 0>

2130:
old  <	je printArgument$173>
new  <	jge printArgument$27>

2131:
old  <>
new  <	neg eax>

2132:
old  < printArgument$15:>
new  <	neg ax>

2133:
old  <	; Case 173 c 102>
new  <>

2134:
old  <	cmp al, 102>
new  < printArgument$27:>

2135:
old  <	je printArgument$173>
new  <	; IntegralToIntegral Â£temporary1657 Â£temporary1656>

2136:
old  <>
new  <	mov rbx, 65535>

2137:
old  < printArgument$16:>
new  <	and rax, rbx>

2138:
old  <	; Case 299 c 112>
new  <	cmp ax, 0>

2139:
old  <	cmp al, 112>
new  <	jge printArgument$28>

2140:
old  <	je printArgument$299>
new  <	neg ax>

2141:
old  <>
new  <	neg rax>

2142:
old  < printArgument$17:>
new  <>

2143:
old  <	; Case 324 c 110>
new  < printArgument$28:>

2144:
old  <	cmp al, 110>
new  <	; Assign longValue Â£temporary1657>

2145:
old  <	je printArgument$324>
new  <	mov [rbp + 114], rax>

2147:
old  < printArgument$18:>
new  < printArgument$29:>

2148:
old  <	; Case 346 c 37>
new  <	; Goto 43>

2149:
old  <	cmp al, 37>
new  <	jmp printArgument$43>

2150:
old  <	je printArgument$346>
new  <>

2151:
old  <>
new  < printArgument$30:>

2152:
old  < printArgument$19:>
new  <	; Equal 37 longInt 0>

2153:
old  <	; CaseEnd c>
new  <	cmp dword [rbp + 68], 0>

2154:
old  <>
new  <	je printArgument$37>

2155:
old  < printArgument$20:>
new  <>

2156:
old  <	; Goto 359>
new  < printArgument$31:>

2157:
old  <	jmp printArgument$359>
new  <	; BinaryAdd arg_list arg_list 8>

2158:
old  <>
new  <	add qword [rbp + 32], 8>

2159:
old  < printArgument$21:>
new  <>

2160:
old  <	; Equal 30 shortInt 0>
new  < printArgument$32:>

2161:
old  <	cmp dword [rbp + 64], 0>
new  <	; BinarySubtract Â£temporary1660 arg_list 8>

2162:
old  <	je printArgument$30>
new  <	mov rsi, [rbp + 32]>

2163:
old  <>
new  <	sub rsi, 8>

2164:
old  < printArgument$22:>
new  <>

2165:
old  <	; BinaryAdd arg_list arg_list 4>
new  < printArgument$33:>

2166:
old  <	add qword [rbp + 32], 4>
new  <	; IntegralToIntegral Â£temporary1662 Â£temporary1660>

2168:
old  < printArgument$23:>
new  < printArgument$34:>

2169:
old  <	; BinarySubtract Â£temporary1624 arg_list 4>
new  <	; Dereference Â£temporary1663 -> Â£temporary1662 Â£temporary1662 0>

2170:
old  <	mov rsi, [rbp + 32]>
new  <>

2171:
old  <	sub rsi, 4>
new  < printArgument$35:>

2172:
old  <>
new  <	; Assign longValue Â£temporary1663 -> Â£temporary1662>

2173:
old  < printArgument$24:>
new  <	mov rax, [rsi]>

2174:
old  <	; IntegralToIntegral Â£temporary1626 Â£temporary1624>
new  <	mov [rbp + 114], rax>

2176:
old  < printArgument$25:>
new  < printArgument$36:>

2177:
old  <	; Dereference Â£temporary1627 -> Â£temporary1626 Â£temporary1626 0>
new  <	; Goto 43>

2178:
old  <>
new  <	jmp printArgument$43>

2179:
old  < printArgument$26:>
new  <>

2180:
old  <	; IntegralToIntegral Â£temporary1628 Â£temporary1627 -> Â£temporary1626>
new  < printArgument$37:>

2181:
old  <	mov eax, [rsi]>
new  <	; BinaryAdd arg_list arg_list 4>

2182:
old  <	cmp eax, 0>
new  <	add qword [rbp + 32], 4>

2183:
old  <	jge printArgument$27>
new  <>

2184:
old  <	neg eax>
new  < printArgument$38:>

2185:
old  <	neg ax>
new  <	; BinarySubtract Â£temporary1666 arg_list 4>

2186:
old  <>
new  <	mov rsi, [rbp + 32]>

2187:
old  < printArgument$27:>
new  <	sub rsi, 4>

2188:
old  <	; IntegralToIntegral Â£temporary1629 Â£temporary1628>
new  <>

2189:
old  <	mov rbx, 65535>
new  < printArgument$39:>

2190:
old  <	and rax, rbx>
new  <	; IntegralToIntegral Â£temporary1668 Â£temporary1666>

2191:
old  <	cmp ax, 0>
new  <>

2192:
old  <	jge printArgument$28>
new  < printArgument$40:>

2193:
old  <	neg ax>
new  <	; Dereference Â£temporary1669 -> Â£temporary1668 Â£temporary1668 0>

2194:
old  <	neg rax>
new  <>

2195:
old  <>
new  < printArgument$41:>

2196:
old  < printArgument$28:>
new  <	; IntegralToIntegral Â£temporary1670 Â£temporary1669 -> Â£temporary1668>

2197:
old  <	; Assign longValue Â£temporary1629>
new  <	mov eax, [rsi]>

2198:
old  <	mov [rbp + 114], rax>
new  <	mov rbx, 4294967295>

2199:
old  <>
new  <	and rax, rbx>

2200:
old  < printArgument$29:>
new  <	cmp eax, 0>

2201:
old  <	; Goto 43>
new  <	jge printArgument$42>

2202:
old  <	jmp printArgument$43>
new  <	neg eax>

2203:
old  <>
new  <	neg rax>

2204:
old  < printArgument$30:>
new  <>

2205:
old  <	; Equal 37 longInt 0>
new  < printArgument$42:>

2206:
old  <	cmp dword [rbp + 68], 0>
new  <	; Assign longValue Â£temporary1670>

2207:
old  <	je printArgument$37>
new  <	mov [rbp + 114], rax>

2209:
old  < printArgument$31:>
new  < printArgument$43:>

2210:
old  <	; BinaryAdd arg_list arg_list 8>
new  <	; Equal 50 negativePtr 0>

2211:
old  <	add qword [rbp + 32], 8>
new  <	cmp qword [rbp + 80], 0>

2212:
old  <>
new  <	je printArgument$50>

2213:
old  < printArgument$32:>
new  <>

2214:
old  <	; BinarySubtract Â£temporary1632 arg_list 8>
new  < printArgument$44:>

2215:
old  <	mov rsi, [rbp + 32]>
new  <	; Dereference Â£temporary1674 -> negativePtr negativePtr 0>

2216:
old  <	sub rsi, 8>
new  <	mov rsi, [rbp + 80]>

2218:
old  < printArgument$33:>
new  < printArgument$45:>

2219:
old  <	; IntegralToIntegral Â£temporary1634 Â£temporary1632>
new  <	; SignedGreaterThanEqual 48 longValue 0>

2220:
old  <>
new  <	cmp qword [rbp + 114], 0>

2221:
old  < printArgument$34:>
new  <	jge printArgument$48>

2222:
old  <	; Dereference Â£temporary1635 -> Â£temporary1634 Â£temporary1634 0>
new  <>

2223:
old  <>
new  < printArgument$46:>

2224:
old  < printArgument$35:>
new  <	; Assign Â£temporary1676 1>

2225:
old  <	; Assign longValue Â£temporary1635 -> Â£temporary1634>
new  <	mov eax, 1>

2226:
old  <	mov rax, [rsi]>
new  <>

2227:
old  <	mov [rbp + 114], rax>
new  < printArgument$47:>

2228:
old  <>
new  <	; Goto 49>

2229:
old  < printArgument$36:>
new  <	jmp printArgument$49>

2230:
old  <	; Goto 43>
new  <>

2231:
old  <	jmp printArgument$43>
new  < printArgument$48:>

2232:
old  <>
new  <	; Assign Â£temporary1676 0>

2233:
old  < printArgument$37:>
new  <	mov eax, 0>

2234:
old  <	; BinaryAdd arg_list arg_list 4>
new  <>

2235:
old  <	add qword [rbp + 32], 4>
new  < printArgument$49:>

2236:
old  <>
new  <	; Assign Â£temporary1674 -> negativePtr Â£temporary1676>

2237:
old  < printArgument$38:>
new  <	mov [rsi], eax>

2238:
old  <	; BinarySubtract Â£temporary1638 arg_list 4>
new  <>

2239:
old  <	mov rsi, [rbp + 32]>
new  < printArgument$50:>

2240:
old  <	sub rsi, 4>
new  <	; NotEqual 57 sign 0>

2241:
old  <>
new  <	cmp dword [rbp + 76], 0>

2242:
old  < printArgument$39:>
new  <	jne printArgument$57>

2243:
old  <	; IntegralToIntegral Â£temporary1640 Â£temporary1638>
new  <>

2244:
old  <>
new  < printArgument$51:>

2245:
old  < printArgument$40:>
new  <	; PreCall 122 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2246:
old  <	; Dereference Â£temporary1641 -> Â£temporary1640 Â£temporary1640 0>
new  <>

2247:
old  <>
new  < printArgument$52:>

2248:
old  < printArgument$41:>
new  <	; Parameter signed long int longValue 146>

2249:
old  <	; IntegralToIntegral Â£temporary1642 Â£temporary1641 -> Â£temporary1640>
new  <	mov rax, [rbp + 114]>

2250:
old  <	mov eax, [rsi]>
new  <	mov [rbp + 146], rax>

2251:
old  <	mov rbx, 4294967295>
new  <>

2252:
old  <	and rax, rbx>
new  < printArgument$53:>

2253:
old  <	cmp eax, 0>
new  <	; Call labs 122 0>

2254:
old  <	jge printArgument$42>
new  <	mov qword [rbp + 122], printArgument$54>

2255:
old  <	neg eax>
new  <	mov [rbp + 130], rbp>

2256:
old  <	neg rax>
new  <	add rbp, 122>

2257:
old  <>
new  <	jmp labs>

2258:
old  < printArgument$42:>
new  <>

2259:
old  <	; Assign longValue Â£temporary1642>
new  < printArgument$54:>

2260:
old  <	mov [rbp + 114], rax>
new  <	; PostCall 122>

2262:
old  < printArgument$43:>
new  < printArgument$55:>

2263:
old  <	; Equal 50 negativePtr 0>
new  <	; GetReturnValue Â£temporary1679>

2264:
old  <	cmp qword [rbp + 80], 0>
new  <>

2265:
old  <	je printArgument$50>
new  < printArgument$56:>

2266:
old  <>
new  <	; Assign longValue Â£temporary1679>

2267:
old  < printArgument$44:>
new  <	mov [rbp + 114], rbx>

2268:
old  <	; Dereference Â£temporary1646 -> negativePtr negativePtr 0>
new  <>

2269:
old  <	mov rsi, [rbp + 80]>
new  < printArgument$57:>

2270:
old  <>
new  <	; PreCall 122 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2271:
old  < printArgument$45:>
new  <>

2272:
old  <	; SignedGreaterThanEqual 48 longValue 0>
new  < printArgument$58:>

2273:
old  <	cmp qword [rbp + 114], 0>
new  <	; Parameter pointer arg_list 146>

2274:
old  <	jge printArgument$48>
new  <	mov rax, [rbp + 32]>

2275:
old  <>
new  <	mov [rbp + 146], rax>

2276:
old  < printArgument$46:>
new  <>

2277:
old  <	; Assign Â£temporary1648 1>
new  < printArgument$59:>

2278:
old  <	mov eax, 1>
new  <	; Parameter pointer widthPtr 154>

2279:
old  <>
new  <	mov rax, [rbp + 52]>

2280:
old  < printArgument$47:>
new  <	mov [rbp + 154], rax>

2281:
old  <	; Goto 49>
new  <>

2282:
old  <	jmp printArgument$49>
new  < printArgument$60:>

2283:
old  <>
new  <	; Address Â£temporary1680 precision>

2284:
old  < printArgument$48:>
new  <	mov rsi, rbp>

2285:
old  <	; Assign Â£temporary1648 0>
new  <	add rsi, 60>

2286:
old  <	mov eax, 0>
new  <>

2287:
old  <>
new  < printArgument$61:>

2288:
old  < printArgument$49:>
new  <	; Parameter pointer Â£temporary1680 162>

2289:
old  <	; Assign Â£temporary1646 -> negativePtr Â£temporary1648>
new  <	mov [rbp + 162], rsi>

2290:
old  <	mov [rsi], eax>
new  <>

2291:
old  <>
new  < printArgument$62:>

2292:
old  < printArgument$50:>
new  <	; Call checkWidthAndPrecision 122 0>

2293:
old  <	; NotEqual 57 sign 0>
new  <	mov qword [rbp + 122], printArgument$63>

2294:
old  <	cmp dword [rbp + 76], 0>
new  <	mov [rbp + 130], rbp>

2295:
old  <	jne printArgument$57>
new  <	add rbp, 122>

2296:
old  <>
new  <	jmp checkWidthAndPrecision>

2297:
old  < printArgument$51:>
new  <>

2298:
old  <	; PreCall 122 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < printArgument$63:>

2299:
old  <>
new  <	; PostCall 122>

2300:
old  < printArgument$52:>
new  <>

2301:
old  <	; Parameter signed long int longValue 146>
new  < printArgument$64:>

2302:
old  <	mov rax, [rbp + 114]>
new  <	; GetReturnValue Â£temporary1681>

2303:
old  <	mov [rbp + 146], rax>
new  <>

2304:
old  <>
new  < printArgument$65:>

2305:
old  < printArgument$53:>
new  <	; Assign arg_list Â£temporary1681>

2306:
old  <	; Call labs 122 0>
new  <	mov [rbp + 32], rbx>

2307:
old  <	mov qword [rbp + 122], printArgument$54>
new  <>

2308:
old  <	mov [rbp + 130], rbp>
new  < printArgument$66:>

2309:
old  <	add rbp, 122>
new  <	; PreCall 122 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2310:
old  <	jmp labs>
new  <>

2311:
old  <>
new  < printArgument$67:>

2312:
old  < printArgument$54:>
new  <	; Parameter signed long int longValue 146>

2313:
old  <	; PostCall 122>
new  <	mov rax, [rbp + 114]>

2314:
old  <>
new  <	mov [rbp + 146], rax>

2315:
old  < printArgument$55:>
new  <>

2316:
old  <	; GetReturnValue Â£temporary1651>
new  < printArgument$68:>

2317:
old  <>
new  <	; Parameter signedint plus 154>

2318:
old  < printArgument$56:>
new  <	mov eax, [rbp + 40]>

2319:
old  <	; Assign longValue Â£temporary1651>
new  <	mov [rbp + 154], eax>

2320:
old  <	mov [rbp + 114], rbx>
new  <>

2321:
old  <>
new  < printArgument$69:>

2322:
old  < printArgument$57:>
new  <	; Parameter signedint space 158>

2323:
old  <	; PreCall 122 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov eax, [rbp + 44]>

2324:
old  <>
new  <	mov [rbp + 158], eax>

2325:
old  < printArgument$58:>
new  <>

2326:
old  <	; Parameter pointer arg_list 146>
new  < printArgument$70:>

2327:
old  <	mov rax, [rbp + 32]>
new  <	; Call printLongInt 122 0>

2328:
old  <	mov [rbp + 146], rax>
new  <	mov qword [rbp + 122], printArgument$71>

2329:
old  <>
new  <	mov [rbp + 130], rbp>

2330:
old  < printArgument$59:>
new  <	add rbp, 122>

2331:
old  <	; Parameter pointer widthPtr 154>
new  <	jmp printLongInt>

2332:
old  <	mov rax, [rbp + 52]>
new  <>

2333:
old  <	mov [rbp + 154], rax>
new  < printArgument$71:>

2334:
old  <>
new  <	; PostCall 122>

2335:
old  < printArgument$60:>
new  <>

2336:
old  <	; Address Â£temporary1652 precision>
new  < printArgument$72:>

2337:
old  <	mov rsi, rbp>
new  <	; Goto 359>

2338:
old  <	add rsi, 60>
new  <	jmp printArgument$359>

2340:
old  < printArgument$61:>
new  < printArgument$73:>

2341:
old  <	; Parameter pointer Â£temporary1652 162>
new  <	; BinaryAdd arg_list arg_list 4>

2342:
old  <	mov [rbp + 162], rsi>
new  <	add qword [rbp + 32], 4>

2344:
old  < printArgument$62:>
new  < printArgument$74:>

2345:
old  <	; Call checkWidthAndPrecision 122 0>
new  <	; BinarySubtract Â£temporary1685 arg_list 4>

2346:
old  <	mov qword [rbp + 122], printArgument$63>
new  <	mov rsi, [rbp + 32]>

2347:
old  <	mov [rbp + 130], rbp>
new  <	sub rsi, 4>

2348:
old  <	add rbp, 122>
new  <>

2349:
old  <	jmp checkWidthAndPrecision>
new  < printArgument$75:>

2350:
old  <>
new  <	; IntegralToIntegral Â£temporary1687 Â£temporary1685>

2351:
old  < printArgument$63:>
new  <>

2352:
old  <	; PostCall 122>
new  < printArgument$76:>

2353:
old  <>
new  <	; Dereference Â£temporary1688 -> Â£temporary1687 Â£temporary1687 0>

2354:
old  < printArgument$64:>
new  <>

2355:
old  <	; GetReturnValue Â£temporary1653>
new  < printArgument$77:>

2356:
old  <>
new  <	; IntegralToIntegral Â£temporary1689 Â£temporary1688 -> Â£temporary1687>

2357:
old  < printArgument$65:>
new  <	mov eax, [rsi]>

2358:
old  <	; Assign arg_list Â£temporary1653>
new  <	cmp eax, 0>

2359:
old  <	mov [rbp + 32], rbx>
new  <	jge printArgument$78>

2360:
old  <>
new  <	neg eax>

2361:
old  < printArgument$66:>
new  <	neg al>

2362:
old  <	; PreCall 122 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

2363:
old  <>
new  < printArgument$78:>

2364:
old  < printArgument$67:>
new  <	; Assign charValue Â£temporary1689>

2365:
old  <	; Parameter signed long int longValue 146>
new  <	mov [rbp + 89], al>

2366:
old  <	mov rax, [rbp + 114]>
new  <>

2367:
old  <	mov [rbp + 146], rax>
new  < printArgument$79:>

2368:
old  <>
new  <	; PreCall 114 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2369:
old  < printArgument$68:>
new  <>

2370:
old  <	; Parameter signedint plus 154>
new  < printArgument$80:>

2371:
old  <	mov eax, [rbp + 40]>
new  <	; Parameter pointer arg_list 138>

2372:
old  <	mov [rbp + 154], eax>
new  <	mov rax, [rbp + 32]>

2373:
old  <>
new  <	mov [rbp + 138], rax>

2374:
old  < printArgument$69:>
new  <>

2375:
old  <	; Parameter signedint space 158>
new  < printArgument$81:>

2376:
old  <	mov eax, [rbp + 44]>
new  <	; Parameter pointer widthPtr 146>

2377:
old  <	mov [rbp + 158], eax>
new  <	mov rax, [rbp + 52]>

2378:
old  <>
new  <	mov [rbp + 146], rax>

2379:
old  < printArgument$70:>
new  <>

2380:
old  <	; Call printLongInt 122 0>
new  < printArgument$82:>

2381:
old  <	mov qword [rbp + 122], printArgument$71>
new  <	; Address Â£temporary1690 precision>

2382:
old  <	mov [rbp + 130], rbp>
new  <	mov rsi, rbp>

2383:
old  <	add rbp, 122>
new  <	add rsi, 60>

2384:
old  <	jmp printLongInt>
new  <>

2385:
old  <>
new  < printArgument$83:>

2386:
old  < printArgument$71:>
new  <	; Parameter pointer Â£temporary1690 154>

2387:
old  <	; PostCall 122>
new  <	mov [rbp + 154], rsi>

2389:
old  < printArgument$72:>
new  < printArgument$84:>

2390:
old  <	; Goto 359>
new  <	; Call checkWidthAndPrecision 114 0>

2391:
old  <	jmp printArgument$359>
new  <	mov qword [rbp + 114], printArgument$85>

2392:
old  <>
new  <	mov [rbp + 122], rbp>

2393:
old  < printArgument$73:>
new  <	add rbp, 114>

2394:
old  <	; BinaryAdd arg_list arg_list 4>
new  <	jmp checkWidthAndPrecision>

2395:
old  <	add qword [rbp + 32], 4>
new  <>

2396:
old  <>
new  < printArgument$85:>

2397:
old  < printArgument$74:>
new  <	; PostCall 114>

2398:
old  <	; BinarySubtract Â£temporary1657 arg_list 4>
new  <>

2399:
old  <	mov rsi, [rbp + 32]>
new  < printArgument$86:>

2400:
old  <	sub rsi, 4>
new  <	; GetReturnValue Â£temporary1691>

2402:
old  < printArgument$75:>
new  < printArgument$87:>

2403:
old  <	; IntegralToIntegral Â£temporary1659 Â£temporary1657>
new  <	; Assign arg_list Â£temporary1691>

2404:
old  <>
new  <	mov [rbp + 32], rbx>

2405:
old  < printArgument$76:>
new  <>

2406:
old  <	; Dereference Â£temporary1660 -> Â£temporary1659 Â£temporary1659 0>
new  < printArgument$88:>

2407:
old  <>
new  <	; PreCall 114 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2408:
old  < printArgument$77:>
new  <>

2409:
old  <	; IntegralToIntegral Â£temporary1661 Â£temporary1660 -> Â£temporary1659>
new  < printArgument$89:>

2410:
old  <	mov eax, [rsi]>
new  <	; Parameter signedchar charValue 138>

2411:
old  <	cmp eax, 0>
new  <	mov al, [rbp + 89]>

2412:
old  <	jge printArgument$78>
new  <	mov [rbp + 138], al>

2413:
old  <	neg eax>
new  <>

2414:
old  <	neg al>
new  < printArgument$90:>

2415:
old  <>
new  <	; Call printChar 114 0>

2416:
old  < printArgument$78:>
new  <	mov qword [rbp + 114], printArgument$91>

2417:
old  <	; Assign charValue Â£temporary1661>
new  <	mov [rbp + 122], rbp>

2418:
old  <	mov [rbp + 89], al>
new  <	add rbp, 114>

2419:
old  <>
new  <	jmp printChar>

2420:
old  < printArgument$79:>
new  <>

2421:
old  <	; PreCall 114 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < printArgument$91:>

2422:
old  <>
new  <	; PostCall 114>

2423:
old  < printArgument$80:>
new  <>

2424:
old  <	; Parameter pointer arg_list 138>
new  < printArgument$92:>

2425:
old  <	mov rax, [rbp + 32]>
new  <	; Goto 359>

2426:
old  <	mov [rbp + 138], rax>
new  <	jmp printArgument$359>

2428:
old  < printArgument$81:>
new  < printArgument$93:>

2429:
old  <	; Parameter pointer widthPtr 146>
new  <	; BinaryAdd arg_list arg_list 8>

2430:
old  <	mov rax, [rbp + 52]>
new  <	add qword [rbp + 32], 8>

2431:
old  <	mov [rbp + 146], rax>
new  <>

2432:
old  <>
new  < printArgument$94:>

2433:
old  < printArgument$82:>
new  <	; BinarySubtract Â£temporary1695 arg_list 8>

2434:
old  <	; Address Â£temporary1662 precision>
new  <	mov rsi, [rbp + 32]>

2435:
old  <	mov rsi, rbp>
new  <	sub rsi, 8>

2436:
old  <	add rsi, 60>
new  <>

2437:
old  <>
new  < printArgument$95:>

2438:
old  < printArgument$83:>
new  <	; IntegralToIntegral Â£temporary1697 Â£temporary1695>

2439:
old  <	; Parameter pointer Â£temporary1662 154>
new  <>

2440:
old  <	mov [rbp + 154], rsi>
new  < printArgument$96:>

2441:
old  <>
new  <	; Dereference Â£temporary1698 -> Â£temporary1697 Â£temporary1697 0>

2442:
old  < printArgument$84:>
new  <>

2443:
old  <	; Call checkWidthAndPrecision 114 0>
new  < printArgument$97:>

2444:
old  <	mov qword [rbp + 114], printArgument$85>
new  <	; Assign stringValue Â£temporary1698 -> Â£temporary1697>

2445:
old  <	mov [rbp + 122], rbp>
new  <	mov rax, [rsi]>

2446:
old  <	add rbp, 114>
new  <	mov [rbp + 114], rax>

2447:
old  <	jmp checkWidthAndPrecision>
new  <>

2448:
old  <>
new  < printArgument$98:>

2449:
old  < printArgument$85:>
new  <	; PreCall 122 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2450:
old  <	; PostCall 114>
new  <>

2451:
old  <>
new  < printArgument$99:>

2452:
old  < printArgument$86:>
new  <	; Parameter pointer arg_list 146>

2453:
old  <	; GetReturnValue Â£temporary1663>
new  <	mov rax, [rbp + 32]>

2454:
old  <>
new  <	mov [rbp + 146], rax>

2455:
old  < printArgument$87:>
new  <>

2456:
old  <	; Assign arg_list Â£temporary1663>
new  < printArgument$100:>

2457:
old  <	mov [rbp + 32], rbx>
new  <	; Parameter pointer widthPtr 154>

2458:
old  <>
new  <	mov rax, [rbp + 52]>

2459:
old  < printArgument$88:>
new  <	mov [rbp + 154], rax>

2460:
old  <	; PreCall 114 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

2461:
old  <>
new  < printArgument$101:>

2462:
old  < printArgument$89:>
new  <	; Address Â£temporary1699 precision>

2463:
old  <	; Parameter signedchar charValue 138>
new  <	mov rsi, rbp>

2464:
old  <	mov al, [rbp + 89]>
new  <	add rsi, 60>

2465:
old  <	mov [rbp + 138], al>
new  <>

2466:
old  <>
new  < printArgument$102:>

2467:
old  < printArgument$90:>
new  <	; Parameter pointer Â£temporary1699 162>

2468:
old  <	; Call printChar 114 0>
new  <	mov [rbp + 162], rsi>

2469:
old  <	mov qword [rbp + 114], printArgument$91>
new  <>

2470:
old  <	mov [rbp + 122], rbp>
new  < printArgument$103:>

2471:
old  <	add rbp, 114>
new  <	; Call checkWidthAndPrecision 122 0>

2472:
old  <	jmp printChar>
new  <	mov qword [rbp + 122], printArgument$104>

2473:
old  <>
new  <	mov [rbp + 130], rbp>

2474:
old  < printArgument$91:>
new  <	add rbp, 122>

2475:
old  <	; PostCall 114>
new  <	jmp checkWidthAndPrecision>

2477:
old  < printArgument$92:>
new  < printArgument$104:>

2478:
old  <	; Goto 359>
new  <	; PostCall 122>

2479:
old  <	jmp printArgument$359>
new  <>

2480:
old  <>
new  < printArgument$105:>

2481:
old  < printArgument$93:>
new  <	; GetReturnValue Â£temporary1700>

2482:
old  <	; BinaryAdd arg_list arg_list 8>
new  <>

2483:
old  <	add qword [rbp + 32], 8>
new  < printArgument$106:>

2484:
old  <>
new  <	; Assign arg_list Â£temporary1700>

2485:
old  < printArgument$94:>
new  <	mov [rbp + 32], rbx>

2486:
old  <	; BinarySubtract Â£temporary1667 arg_list 8>
new  <>

2487:
old  <	mov rsi, [rbp + 32]>
new  < printArgument$107:>

2488:
old  <	sub rsi, 8>
new  <	; PreCall 122 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2490:
old  < printArgument$95:>
new  < printArgument$108:>

2491:
old  <	; IntegralToIntegral Â£temporary1669 Â£temporary1667>
new  <	; Parameter pointer stringValue 146>

2492:
old  <>
new  <	mov rax, [rbp + 114]>

2493:
old  < printArgument$96:>
new  <	mov [rbp + 146], rax>

2494:
old  <	; Dereference Â£temporary1670 -> Â£temporary1669 Â£temporary1669 0>
new  <>

2495:
old  <>
new  < printArgument$109:>

2496:
old  < printArgument$97:>
new  <	; Parameter signedint precision 154>

2497:
old  <	; Assign stringValue Â£temporary1670 -> Â£temporary1669>
new  <	mov eax, [rbp + 60]>

2498:
old  <	mov rax, [rsi]>
new  <	mov [rbp + 154], eax>

2499:
old  <	mov [rbp + 114], rax>
new  <>

2500:
old  <>
new  < printArgument$110:>

2501:
old  < printArgument$98:>
new  <	; Call printString 122 0>

2502:
old  <	; PreCall 122 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov qword [rbp + 122], printArgument$111>

2503:
old  <>
new  <	mov [rbp + 130], rbp>

2504:
old  < printArgument$99:>
new  <	add rbp, 122>

2505:
old  <	; Parameter pointer arg_list 146>
new  <	jmp printString>

2506:
old  <	mov rax, [rbp + 32]>
new  <>

2507:
old  <	mov [rbp + 146], rax>
new  < printArgument$111:>

2508:
old  <>
new  <	; PostCall 122>

2509:
old  < printArgument$100:>
new  <>

2510:
old  <	; Parameter pointer widthPtr 154>
new  < printArgument$112:>

2511:
old  <	mov rax, [rbp + 52]>
new  <	; Goto 359>

2512:
old  <	mov [rbp + 154], rax>
new  <	jmp printArgument$359>

2514:
old  < printArgument$101:>
new  < printArgument$113:>

2515:
old  <	; Address Â£temporary1671 precision>
new  <	; NotEqual 116 c 117>

2516:
old  <	mov rsi, rbp>
new  <	cmp byte [rbp + 88], 117>

2517:
old  <	add rsi, 60>
new  <	jne printArgument$116>

2519:
old  < printArgument$102:>
new  < printArgument$114:>

2520:
old  <	; Parameter pointer Â£temporary1671 162>
new  <	; Assign Â£temporary1707 10>

2521:
old  <	mov [rbp + 162], rsi>
new  <	mov rax, 10>

2523:
old  < printArgument$103:>
new  < printArgument$115:>

2524:
old  <	; Call checkWidthAndPrecision 122 0>
new  <	; Goto 125>

2525:
old  <	mov qword [rbp + 122], printArgument$104>
new  <	jmp printArgument$125>

2526:
old  <	mov [rbp + 130], rbp>
new  <>

2527:
old  <	add rbp, 122>
new  < printArgument$116:>

2528:
old  <	jmp checkWidthAndPrecision>
new  <	; NotEqual 119 c 111>

2529:
old  <>
new  <	cmp byte [rbp + 88], 111>

2530:
old  < printArgument$104:>
new  <	jne printArgument$119>

2531:
old  <	; PostCall 122>
new  <>

2532:
old  <>
new  < printArgument$117:>

2533:
old  < printArgument$105:>
new  <	; Assign Â£temporary1706 8>

2534:
old  <	; GetReturnValue Â£temporary1672>
new  <	mov rax, 8>

2536:
old  < printArgument$106:>
new  < printArgument$118:>

2537:
old  <	; Assign arg_list Â£temporary1672>
new  <	; Goto 124>

2538:
old  <	mov [rbp + 32], rbx>
new  <	jmp printArgument$124>

2540:
old  < printArgument$107:>
new  < printArgument$119:>

2541:
old  <	; PreCall 122 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; NotEqual 122 c 98>

2542:
old  <>
new  <	cmp byte [rbp + 88], 98>

2543:
old  < printArgument$108:>
new  <	jne printArgument$122>

2544:
old  <	; Parameter pointer stringValue 146>
new  <>

2545:
old  <	mov rax, [rbp + 114]>
new  < printArgument$120:>

2546:
old  <	mov [rbp + 146], rax>
new  <	; Assign Â£temporary1705 2>

2547:
old  <>
new  <	mov rax, 2>

2548:
old  < printArgument$109:>
new  <>

2549:
old  <	; Parameter signedint precision 154>
new  < printArgument$121:>

2550:
old  <	mov eax, [rbp + 60]>
new  <	; Goto 123>

2551:
old  <	mov [rbp + 154], eax>
new  <	jmp printArgument$123>

2553:
old  < printArgument$110:>
new  < printArgument$122:>

2554:
old  <	; Call printString 122 0>
new  <	; Assign Â£temporary1705 16>

2555:
old  <	mov qword [rbp + 122], printArgument$111>
new  <	mov rax, 16>

2556:
old  <	mov [rbp + 130], rbp>
new  <>

2557:
old  <	add rbp, 122>
new  < printArgument$123:>

2558:
old  <	jmp printString>
new  <	; Assign Â£temporary1706 Â£temporary1705>

2560:
old  < printArgument$111:>
new  < printArgument$124:>

2561:
old  <	; PostCall 122>
new  <	; Assign Â£temporary1707 Â£temporary1706>

2563:
old  < printArgument$112:>
new  < printArgument$125:>

2564:
old  <	; Goto 359>
new  <	; Assign base Â£temporary1707>

2565:
old  <	jmp printArgument$359>
new  <	mov [rbp + 114], rax>

2567:
old  < printArgument$113:>
new  < printArgument$126:>

2568:
old  <	; NotEqual 116 c 117>
new  <	; Equal 135 shortInt 0>

2569:
old  <	cmp byte [rbp + 88], 117>
new  <	cmp dword [rbp + 64], 0>

2570:
old  <	jne printArgument$116>
new  <	je printArgument$135>

2572:
old  < printArgument$114:>
new  < printArgument$127:>

2573:
old  <	; Assign Â£temporary1679 10>
new  <	; BinaryAdd arg_list arg_list 4>

2574:
old  <	mov rax, 10>
new  <	add qword [rbp + 32], 4>

2576:
old  < printArgument$115:>
new  < printArgument$128:>

2577:
old  <	; Goto 125>
new  <	; BinarySubtract Â£temporary1710 arg_list 4>

2578:
old  <	jmp printArgument$125>
new  <	mov rsi, [rbp + 32]>

2579:
old  <>
new  <	sub rsi, 4>

2580:
old  < printArgument$116:>
new  <>

2581:
old  <	; NotEqual 119 c 111>
new  < printArgument$129:>

2582:
old  <	cmp byte [rbp + 88], 111>
new  <	; IntegralToIntegral Â£temporary1712 Â£temporary1710>

2583:
old  <	jne printArgument$119>
new  <>

2584:
old  <>
new  < printArgument$130:>

2585:
old  < printArgument$117:>
new  <	; Dereference Â£temporary1713 -> Â£temporary1712 Â£temporary1712 0>

2586:
old  <	; Assign Â£temporary1678 8>
new  <>

2587:
old  <	mov rax, 8>
new  < printArgument$131:>

2588:
old  <>
new  <	; IntegralToIntegral Â£temporary1714 Â£temporary1713 -> Â£temporary1712>

2589:
old  < printArgument$118:>
new  <	mov eax, [rsi]>

2590:
old  <	; Goto 124>
new  <>

2591:
old  <	jmp printArgument$124>
new  < printArgument$132:>

2592:
old  <>
new  <	; IntegralToIntegral Â£temporary1715 Â£temporary1714>

2593:
old  < printArgument$119:>
new  <	mov rbx, 65535>

2594:
old  <	; NotEqual 122 c 98>
new  <	and rax, rbx>

2595:
old  <	cmp byte [rbp + 88], 98>
new  <>

2596:
old  <	jne printArgument$122>
new  < printArgument$133:>

2597:
old  <>
new  <	; Assign value Â£temporary1715>

2598:
old  < printArgument$120:>
new  <	mov [rbp + 122], rax>

2599:
old  <	; Assign Â£temporary1677 2>
new  <>

2600:
old  <	mov rax, 2>
new  < printArgument$134:>

2601:
old  <>
new  <	; Goto 148>

2602:
old  < printArgument$121:>
new  <	jmp printArgument$148>

2603:
old  <	; Goto 123>
new  <>

2604:
old  <	jmp printArgument$123>
new  < printArgument$135:>

2605:
old  <>
new  <	; Equal 142 longInt 0>

2606:
old  < printArgument$122:>
new  <	cmp dword [rbp + 68], 0>

2607:
old  <	; Assign Â£temporary1677 16>
new  <	je printArgument$142>

2608:
old  <	mov rax, 16>
new  <>

2609:
old  <>
new  < printArgument$136:>

2610:
old  < printArgument$123:>
new  <	; BinaryAdd arg_list arg_list 8>

2611:
old  <	; Assign Â£temporary1678 Â£temporary1677>
new  <	add qword [rbp + 32], 8>

2613:
old  < printArgument$124:>
new  < printArgument$137:>

2614:
old  <	; Assign Â£temporary1679 Â£temporary1678>
new  <	; BinarySubtract Â£temporary1718 arg_list 8>

2615:
old  <>
new  <	mov rsi, [rbp + 32]>

2616:
old  < printArgument$125:>
new  <	sub rsi, 8>

2617:
old  <	; Assign base Â£temporary1679>
new  <>

2618:
old  <	mov [rbp + 114], rax>
new  < printArgument$138:>

2619:
old  <>
new  <	; IntegralToIntegral Â£temporary1720 Â£temporary1718>

2620:
old  < printArgument$126:>
new  <>

2621:
old  <	; Equal 135 shortInt 0>
new  < printArgument$139:>

2622:
old  <	cmp dword [rbp + 64], 0>
new  <	; Dereference Â£temporary1721 -> Â£temporary1720 Â£temporary1720 0>

2623:
old  <	je printArgument$135>
new  <>

2624:
old  <>
new  < printArgument$140:>

2625:
old  < printArgument$127:>
new  <	; Assign value Â£temporary1721 -> Â£temporary1720>

2626:
old  <	; BinaryAdd arg_list arg_list 4>
new  <	mov rax, [rsi]>

2627:
old  <	add qword [rbp + 32], 4>
new  <	mov [rbp + 122], rax>

2629:
old  < printArgument$128:>
new  < printArgument$141:>

2630:
old  <	; BinarySubtract Â£temporary1682 arg_list 4>
new  <	; Goto 148>

2631:
old  <	mov rsi, [rbp + 32]>
new  <	jmp printArgument$148>

2632:
old  <	sub rsi, 4>
new  <>

2633:
old  <>
new  < printArgument$142:>

2634:
old  < printArgument$129:>
new  <	; BinaryAdd arg_list arg_list 4>

2635:
old  <	; IntegralToIntegral Â£temporary1684 Â£temporary1682>
new  <	add qword [rbp + 32], 4>

2637:
old  < printArgument$130:>
new  < printArgument$143:>

2638:
old  <	; Dereference Â£temporary1685 -> Â£temporary1684 Â£temporary1684 0>
new  <	; BinarySubtract Â£temporary1724 arg_list 4>

2639:
old  <>
new  <	mov rsi, [rbp + 32]>

2640:
old  < printArgument$131:>
new  <	sub rsi, 4>

2641:
old  <	; IntegralToIntegral Â£temporary1686 Â£temporary1685 -> Â£temporary1684>
new  <>

2642:
old  <	mov eax, [rsi]>
new  < printArgument$144:>

2643:
old  <>
new  <	; IntegralToIntegral Â£temporary1726 Â£temporary1724>

2644:
old  < printArgument$132:>
new  <>

2645:
old  <	; IntegralToIntegral Â£temporary1687 Â£temporary1686>
new  < printArgument$145:>

2646:
old  <	mov rbx, 65535>
new  <	; Dereference Â£temporary1727 -> Â£temporary1726 Â£temporary1726 0>

2647:
old  <	and rax, rbx>
new  <>

2648:
old  <>
new  < printArgument$146:>

2649:
old  < printArgument$133:>
new  <	; IntegralToIntegral Â£temporary1728 Â£temporary1727 -> Â£temporary1726>

2650:
old  <	; Assign value Â£temporary1687>
new  <	mov eax, [rsi]>

2651:
old  <	mov [rbp + 122], rax>
new  <	mov rbx, 4294967295>

2652:
old  <>
new  <	and rax, rbx>

2653:
old  < printArgument$134:>
new  <>

2654:
old  <	; Goto 148>
new  < printArgument$147:>

2655:
old  <	jmp printArgument$148>
new  <	; Assign value Â£temporary1728>

2656:
old  <>
new  <	mov [rbp + 122], rax>

2657:
old  < printArgument$135:>
new  <>

2658:
old  <	; Equal 142 longInt 0>
new  < printArgument$148:>

2659:
old  <	cmp dword [rbp + 68], 0>
new  <	; PreCall 130 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2660:
old  <	je printArgument$142>
new  <>

2661:
old  <>
new  < printArgument$149:>

2662:
old  < printArgument$136:>
new  <	; Parameter pointer arg_list 154>

2663:
old  <	; BinaryAdd arg_list arg_list 8>
new  <	mov rax, [rbp + 32]>

2664:
old  <	add qword [rbp + 32], 8>
new  <	mov [rbp + 154], rax>

2666:
old  < printArgument$137:>
new  < printArgument$150:>

2667:
old  <	; BinarySubtract Â£temporary1690 arg_list 8>
new  <	; Parameter pointer widthPtr 162>

2668:
old  <	mov rsi, [rbp + 32]>
new  <	mov rax, [rbp + 52]>

2669:
old  <	sub rsi, 8>
new  <	mov [rbp + 162], rax>

2671:
old  < printArgument$138:>
new  < printArgument$151:>

2672:
old  <	; IntegralToIntegral Â£temporary1692 Â£temporary1690>
new  <	; Address Â£temporary1731 precision>

2673:
old  <>
new  <	mov rsi, rbp>

2674:
old  < printArgument$139:>
new  <	add rsi, 60>

2675:
old  <	; Dereference Â£temporary1693 -> Â£temporary1692 Â£temporary1692 0>
new  <>

2676:
old  <>
new  < printArgument$152:>

2677:
old  < printArgument$140:>
new  <	; Parameter pointer Â£temporary1731 170>

2678:
old  <	; Assign value Â£temporary1693 -> Â£temporary1692>
new  <	mov [rbp + 170], rsi>

2679:
old  <	mov rax, [rsi]>
new  <>

2680:
old  <	mov [rbp + 122], rax>
new  < printArgument$153:>

2681:
old  <>
new  <	; Call checkWidthAndPrecision 130 0>

2682:
old  < printArgument$141:>
new  <	mov qword [rbp + 130], printArgument$154>

2683:
old  <	; Goto 148>
new  <	mov [rbp + 138], rbp>

2684:
old  <	jmp printArgument$148>
new  <	add rbp, 130>

2685:
old  <>
new  <	jmp checkWidthAndPrecision>

2686:
old  < printArgument$142:>
new  <>

2687:
old  <	; BinaryAdd arg_list arg_list 4>
new  < printArgument$154:>

2688:
old  <	add qword [rbp + 32], 4>
new  <	; PostCall 130>

2690:
old  < printArgument$143:>
new  < printArgument$155:>

2691:
old  <	; BinarySubtract Â£temporary1696 arg_list 4>
new  <	; GetReturnValue Â£temporary1732>

2692:
old  <	mov rsi, [rbp + 32]>
new  <>

2693:
old  <	sub rsi, 4>
new  < printArgument$156:>

2694:
old  <>
new  <	; Assign arg_list Â£temporary1732>

2695:
old  < printArgument$144:>
new  <	mov [rbp + 32], rbx>

2696:
old  <	; IntegralToIntegral Â£temporary1698 Â£temporary1696>
new  <>

2697:
old  <>
new  < printArgument$157:>

2698:
old  < printArgument$145:>
new  <	; PreCall 130 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2699:
old  <	; Dereference Â£temporary1699 -> Â£temporary1698 Â£temporary1698 0>
new  <>

2700:
old  <>
new  < printArgument$158:>

2701:
old  < printArgument$146:>
new  <	; Parameter unsignedlongint value 154>

2702:
old  <	; IntegralToIntegral Â£temporary1700 Â£temporary1699 -> Â£temporary1698>
new  <	mov rax, [rbp + 122]>

2703:
old  <	mov eax, [rsi]>
new  <	mov [rbp + 154], rax>

2704:
old  <	mov rbx, 4294967295>
new  <>

2705:
old  <	and rax, rbx>
new  < printArgument$159:>

2706:
old  <>
new  <	; Parameter signedint plus 162>

2707:
old  < printArgument$147:>
new  <	mov eax, [rbp + 40]>

2708:
old  <	; Assign value Â£temporary1700>
new  <	mov [rbp + 162], eax>

2709:
old  <	mov [rbp + 122], rax>
new  <>

2710:
old  <>
new  < printArgument$160:>

2711:
old  < printArgument$148:>
new  <	; Parameter signedint space 166>

2712:
old  <	; PreCall 130 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov eax, [rbp + 44]>

2713:
old  <>
new  <	mov [rbp + 166], eax>

2714:
old  < printArgument$149:>
new  <>

2715:
old  <	; Parameter pointer arg_list 154>
new  < printArgument$161:>

2716:
old  <	mov rax, [rbp + 32]>
new  <	; Parameter signedint grid 170>

2717:
old  <	mov [rbp + 154], rax>
new  <	mov eax, [rbp + 48]>

2718:
old  <>
new  <	mov [rbp + 170], eax>

2719:
old  < printArgument$150:>
new  <>

2720:
old  <	; Parameter pointer widthPtr 162>
new  < printArgument$162:>

2721:
old  <	mov rax, [rbp + 52]>
new  <	; Parameter unsignedlongint base 174>

2722:
old  <	mov [rbp + 162], rax>
new  <	mov rax, [rbp + 114]>

2723:
old  <>
new  <	mov [rbp + 174], rax>

2724:
old  < printArgument$151:>
new  <>

2725:
old  <	; Address Â£temporary1703 precision>
new  < printArgument$163:>

2726:
old  <	mov rsi, rbp>
new  <	; PreCall 130 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2727:
old  <	add rsi, 60>
new  <>

2728:
old  <>
new  < printArgument$164:>

2729:
old  < printArgument$152:>
new  <	; IntegralToIntegral Â£temporary1733 c>

2730:
old  <	; Parameter pointer Â£temporary1703 170>
new  <	mov al, [rbp + 88]>

2731:
old  <	mov [rbp + 170], rsi>
new  <	and eax, 255>

2732:
old  <>
new  <	cmp al, 0>

2733:
old  < printArgument$153:>
new  <	jge printArgument$165>

2734:
old  <	; Call checkWidthAndPrecision 130 0>
new  <	neg al>

2735:
old  <	mov qword [rbp + 130], printArgument$154>
new  <	neg eax>

2736:
old  <	mov [rbp + 138], rbp>
new  <>

2737:
old  <	add rbp, 130>
new  < printArgument$165:>

2738:
old  <	jmp checkWidthAndPrecision>
new  <	; Parameter signedint Â£temporary1733 206>

2739:
old  <>
new  <	mov [rbp + 206], eax>

2740:
old  < printArgument$154:>
new  <>

2741:
old  <	; PostCall 130>
new  < printArgument$166:>

2742:
old  <>
new  <	; Call isupper 182 0>

2743:
old  < printArgument$155:>
new  <	mov qword [rbp + 182], printArgument$167>

2744:
old  <	; GetReturnValue Â£temporary1704>
new  <	mov [rbp + 190], rbp>

2745:
old  <>
new  <	add rbp, 182>

2746:
old  < printArgument$156:>
new  <	jmp isupper>

2747:
old  <	; Assign arg_list Â£temporary1704>
new  <>

2748:
old  <	mov [rbp + 32], rbx>
new  < printArgument$167:>

2749:
old  <>
new  <	; PostCall 182>

2750:
old  < printArgument$157:>
new  <>

2751:
old  <	; PreCall 130 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < printArgument$168:>

2752:
old  <>
new  <	; GetReturnValue Â£temporary1734>

2753:
old  < printArgument$158:>
new  <>

2754:
old  <	; Parameter unsignedlongint value 154>
new  < printArgument$169:>

2755:
old  <	mov rax, [rbp + 122]>
new  <	; Parameter signedint Â£temporary1734 182>

2756:
old  <	mov [rbp + 154], rax>
new  <	mov [rbp + 182], ebx>

2758:
old  < printArgument$159:>
new  < printArgument$170:>

2759:
old  <	; Parameter signedint plus 162>
new  <	; Call printUnsignedLong 130 0>

2760:
old  <	mov eax, [rbp + 40]>
new  <	mov qword [rbp + 130], printArgument$171>

2761:
old  <	mov [rbp + 162], eax>
new  <	mov [rbp + 138], rbp>

2762:
old  <>
new  <	add rbp, 130>

2763:
old  < printArgument$160:>
new  <	jmp printUnsignedLong>

2764:
old  <	; Parameter signedint space 166>
new  <>

2765:
old  <	mov eax, [rbp + 44]>
new  < printArgument$171:>

2766:
old  <	mov [rbp + 166], eax>
new  <	; PostCall 130>

2768:
old  < printArgument$161:>
new  < printArgument$172:>

2769:
old  <	; Parameter signedint grid 170>
new  <	; Goto 359>

2770:
old  <	mov eax, [rbp + 48]>
new  <	jmp printArgument$359>

2771:
old  <	mov [rbp + 170], eax>
new  <>

2772:
old  <>
new  < printArgument$173:>

2773:
old  < printArgument$162:>
new  <	; Equal 190 longDouble 0>

2774:
old  <	; Parameter unsignedlongint base 174>
new  <	cmp dword [rbp + 72], 0>

2775:
old  <	mov rax, [rbp + 114]>
new  <	je printArgument$190>

2776:
old  <	mov [rbp + 174], rax>
new  <>

2777:
old  <>
new  < printArgument$174:>

2778:
old  < printArgument$163:>
new  <	; BinaryAdd arg_list arg_list 8>

2779:
old  <	; PreCall 130 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	add qword [rbp + 32], 8>

2781:
old  < printArgument$164:>
new  < printArgument$175:>

2782:
old  <	; IntegralToIntegral Â£temporary1705 c>
new  <	; BinarySubtract Â£temporary1738 arg_list 8>

2783:
old  <	mov al, [rbp + 88]>
new  <	mov rsi, [rbp + 32]>

2784:
old  <	and eax, 255>
new  <	sub rsi, 8>

2785:
old  <	cmp al, 0>
new  <>

2786:
old  <	jge printArgument$165>
new  < printArgument$176:>

2787:
old  <	neg al>
new  <	; IntegralToIntegral Â£temporary1740 Â£temporary1738>

2788:
old  <	neg eax>
new  <>

2789:
old  <>
new  < printArgument$177:>

2790:
old  < printArgument$165:>
new  <	; Dereference Â£temporary1741 -> Â£temporary1740 Â£temporary1740 0>

2791:
old  <	; Parameter signedint Â£temporary1705 206>
new  <>

2792:
old  <	mov [rbp + 206], eax>
new  < printArgument$178:>

2793:
old  <>
new  <	; PushFloat Â£temporary1741 -> Â£temporary1740>

2794:
old  < printArgument$166:>
new  <	fld qword [rsi]>

2795:
old  <	; Call isupper 182 0>
new  <>

2796:
old  <	mov qword [rbp + 182], printArgument$167>
new  < printArgument$179:>

2797:
old  <	mov [rbp + 190], rbp>
new  <	; PopFloat longDoubleValue>

2798:
old  <	add rbp, 182>
new  <	fstp qword [rbp + 98]>

2799:
old  <	jmp isupper>
new  <>

2800:
old  <>
new  < printArgument$180:>

2801:
old  < printArgument$167:>
new  <	; PreCall 114 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2802:
old  <	; PostCall 182>
new  <>

2803:
old  <>
new  < printArgument$181:>

2804:
old  < printArgument$168:>
new  <	; PushFloat longDoubleValue>

2805:
old  <	; GetReturnValue Â£temporary1706>
new  <	fld qword [rbp + 98]>

2807:
old  < printArgument$169:>
new  < printArgument$182:>

2808:
old  <	; Parameter signedint Â£temporary1706 182>
new  <	; Parameter longdouble longDoubleValue 138>

2809:
old  <	mov [rbp + 182], ebx>
new  <	fstp qword [rbp + 138]>

2811:
old  < printArgument$170:>
new  < printArgument$183:>

2812:
old  <	; Call printUnsignedLong 130 0>
new  <	; Parameter signedint 0 146>

2813:
old  <	mov qword [rbp + 130], printArgument$171>
new  <	mov dword [rbp + 146], 0>

2814:
old  <	mov [rbp + 138], rbp>
new  <>

2815:
old  <	add rbp, 130>
new  < printArgument$184:>

2816:
old  <	jmp printUnsignedLong>
new  <	; Parameter signedint 0 150>

2817:
old  <>
new  <	mov dword [rbp + 150], 0>

2818:
old  < printArgument$171:>
new  <>

2819:
old  <	; PostCall 130>
new  < printArgument$185:>

2820:
old  <>
new  <	; Parameter signedint 0 154>

2821:
old  < printArgument$172:>
new  <	mov dword [rbp + 154], 0>

2822:
old  <	; Goto 359>
new  <>

2823:
old  <	jmp printArgument$359>
new  < printArgument$186:>

2824:
old  <>
new  <	; Parameter signedint 3 158>

2825:
old  < printArgument$173:>
new  <	mov dword [rbp + 158], 3>

2826:
old  <	; Equal 190 longDouble 0>
new  <>

2827:
old  <	cmp dword [rbp + 72], 0>
new  < printArgument$187:>

2828:
old  <	je printArgument$190>
new  <	; Call printLongDoublePlain 114 0>

2829:
old  <>
new  <	mov qword [rbp + 114], printArgument$188>

2830:
old  < printArgument$174:>
new  <	mov [rbp + 122], rbp>

2831:
old  <	; BinaryAdd arg_list arg_list 8>
new  <	add rbp, 114>

2832:
old  <	add qword [rbp + 32], 8>
new  <	jmp printLongDoublePlain>

2834:
old  < printArgument$175:>
new  < printArgument$188:>

2835:
old  <	; BinarySubtract Â£temporary1710 arg_list 8>
new  <	; PostCall 114>

2836:
old  <	mov rsi, [rbp + 32]>
new  <>

2837:
old  <	sub rsi, 8>
new  < printArgument$189:>

2838:
old  <>
new  <	; Goto 196>

2839:
old  < printArgument$176:>
new  <	jmp printArgument$196>

2840:
old  <	; IntegralToIntegral Â£temporary1712 Â£temporary1710>
new  <>

2841:
old  <>
new  < printArgument$190:>

2842:
old  < printArgument$177:>
new  <	; BinaryAdd arg_list arg_list 8>

2843:
old  <	; Dereference Â£temporary1713 -> Â£temporary1712 Â£temporary1712 0>
new  <	add qword [rbp + 32], 8>

2845:
old  < printArgument$178:>
new  < printArgument$191:>

2846:
old  <	; PushFloat Â£temporary1713 -> Â£temporary1712>
new  <	; BinarySubtract Â£temporary1745 arg_list 8>

2847:
old  <	fld qword [rsi]>
new  <	mov rsi, [rbp + 32]>

2848:
old  <>
new  <	sub rsi, 8>

2849:
old  < printArgument$179:>
new  <>

2850:
old  <	; PopFloat longDoubleValue>
new  < printArgument$192:>

2851:
old  <	fstp qword [rbp + 98]>
new  <	; IntegralToIntegral Â£temporary1747 Â£temporary1745>

2853:
old  < printArgument$180:>
new  < printArgument$193:>

2854:
old  <	; PreCall 114 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Dereference Â£temporary1748 -> Â£temporary1747 Â£temporary1747 0>

2856:
old  < printArgument$181:>
new  < printArgument$194:>

2857:
old  <	; PushFloat longDoubleValue>
new  <	; PushFloat Â£temporary1748 -> Â£temporary1747>

2858:
old  <	fld qword [rbp + 98]>
new  <	fld qword [rsi]>

2860:
old  < printArgument$182:>
new  < printArgument$195:>

2861:
old  <	; Parameter longdouble longDoubleValue 138>
new  <	; PopFloat longDoubleValue>

2862:
old  <	fstp qword [rbp + 138]>
new  <	fstp qword [rbp + 98]>

2864:
old  < printArgument$183:>
new  < printArgument$196:>

2865:
old  <	; Parameter signedint 0 146>
new  <	; Equal 205 negativePtr 0>

2866:
old  <	mov dword [rbp + 146], 0>
new  <	cmp qword [rbp + 80], 0>

2867:
old  <>
new  <	je printArgument$205>

2868:
old  < printArgument$184:>
new  <>

2869:
old  <	; Parameter signedint 0 150>
new  < printArgument$197:>

2870:
old  <	mov dword [rbp + 150], 0>
new  <	; Dereference Â£temporary1752 -> negativePtr negativePtr 0>

2871:
old  <>
new  <	mov rsi, [rbp + 80]>

2872:
old  < printArgument$185:>
new  <>

2873:
old  <	; Parameter signedint 0 154>
new  < printArgument$198:>

2874:
old  <	mov dword [rbp + 154], 0>
new  <	; PushFloat longDoubleValue>

2875:
old  <>
new  <	fld qword [rbp + 98]>

2876:
old  < printArgument$186:>
new  <>

2877:
old  <	; Parameter signedint 3 158>
new  < printArgument$199:>

2878:
old  <	mov dword [rbp + 158], 3>
new  <	; PushFloat 0>

2879:
old  <>
new  <	fldz>

2880:
old  < printArgument$187:>
new  <>

2881:
old  <	; Call printLongDoublePlain 114 0>
new  < printArgument$200:>

2882:
old  <	mov qword [rbp + 114], printArgument$188>
new  <	; SignedGreaterThanEqual 203 longDoubleValue 0>

2883:
old  <	mov [rbp + 122], rbp>
new  <	fcompp>

2884:
old  <	add rbp, 114>
new  <	fstsw ax>

2885:
old  <	jmp printLongDoublePlain>
new  <	sahf>

2886:
old  <>
new  <	jbe printArgument$203>

2887:
old  < printArgument$188:>
new  <>

2888:
old  <	; PostCall 114>
new  < printArgument$201:>

2889:
old  <>
new  <	; Assign Â£temporary1754 1>

2890:
old  < printArgument$189:>
new  <	mov eax, 1>

2891:
old  <	; Goto 196>
new  <>

2892:
old  <	jmp printArgument$196>
new  < printArgument$202:>

2893:
old  <>
new  <	; Goto 204>

2894:
old  < printArgument$190:>
new  <	jmp printArgument$204>

2895:
old  <	; BinaryAdd arg_list arg_list 8>
new  <>

2896:
old  <	add qword [rbp + 32], 8>
new  < printArgument$203:>

2897:
old  <>
new  <	; Assign Â£temporary1754 0>

2898:
old  < printArgument$191:>
new  <	mov eax, 0>

2899:
old  <	; BinarySubtract Â£temporary1717 arg_list 8>
new  <>

2900:
old  <	mov rsi, [rbp + 32]>
new  < printArgument$204:>

2901:
old  <	sub rsi, 8>
new  <	; Assign Â£temporary1752 -> negativePtr Â£temporary1754>

2902:
old  <>
new  <	mov [rsi], eax>

2903:
old  < printArgument$192:>
new  <>

2904:
old  <	; IntegralToIntegral Â£temporary1719 Â£temporary1717>
new  < printArgument$205:>

2905:
old  <>
new  <	; NotEqual 213 sign 0>

2906:
old  < printArgument$193:>
new  <	cmp dword [rbp + 76], 0>

2907:
old  <	; Dereference Â£temporary1720 -> Â£temporary1719 Â£temporary1719 0>
new  <	jne printArgument$213>

2909:
old  < printArgument$194:>
new  < printArgument$206:>

2910:
old  <	; PushFloat Â£temporary1720 -> Â£temporary1719>
new  <	; PreCall 114 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2911:
old  <	fld qword [rsi]>
new  <>

2912:
old  <>
new  < printArgument$207:>

2913:
old  < printArgument$195:>
new  <	; PushFloat longDoubleValue>

2914:
old  <	; PopFloat longDoubleValue>
new  <	fld qword [rbp + 98]>

2915:
old  <	fstp qword [rbp + 98]>
new  <>

2916:
old  <>
new  < printArgument$208:>

2917:
old  < printArgument$196:>
new  <	; Parameter double longDoubleValue 138>

2918:
old  <	; Equal 205 negativePtr 0>
new  <	fstp qword [rbp + 138]>

2919:
old  <	cmp qword [rbp + 80], 0>
new  <>

2920:
old  <	je printArgument$205>
new  < printArgument$209:>

2921:
old  <>
new  <	; Call fabs 114 0>

2922:
old  < printArgument$197:>
new  <	mov qword [rbp + 114], printArgument$210>

2923:
old  <	; Dereference Â£temporary1724 -> negativePtr negativePtr 0>
new  <	mov [rbp + 122], rbp>

2924:
old  <	mov rsi, [rbp + 80]>
new  <	add rbp, 114>

2925:
old  <>
new  <	jmp fabs>

2926:
old  < printArgument$198:>
new  <>

2927:
old  <	; PushFloat longDoubleValue>
new  < printArgument$210:>

2928:
old  <	fld qword [rbp + 98]>
new  <	; PostCall 114>

2930:
old  < printArgument$199:>
new  < printArgument$211:>

2931:
old  <	; PushFloat 0>
new  <	; GetReturnValue Â£temporary1757>

2932:
old  <	fldz>
new  <>

2933:
old  <>
new  < printArgument$212:>

2934:
old  < printArgument$200:>
new  <	; PopFloat longDoubleValue>

2935:
old  <	; SignedGreaterThanEqual 203 longDoubleValue 0>
new  <	fstp qword [rbp + 98]>

2936:
old  <	fcompp>
new  <>

2937:
old  <	fstsw ax>
new  < printArgument$213:>

2938:
old  <	sahf>
new  <	; PreCall 114 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2939:
old  <	jbe printArgument$203>
new  <>

2940:
old  <>
new  < printArgument$214:>

2941:
old  < printArgument$201:>
new  <	; Parameter pointer arg_list 138>

2942:
old  <	; Assign Â£temporary1726 1>
new  <	mov rax, [rbp + 32]>

2943:
old  <	mov eax, 1>
new  <	mov [rbp + 138], rax>

2945:
old  < printArgument$202:>
new  < printArgument$215:>

2946:
old  <	; Goto 204>
new  <	; Parameter pointer widthPtr 146>

2947:
old  <	jmp printArgument$204>
new  <	mov rax, [rbp + 52]>

2948:
old  <>
new  <	mov [rbp + 146], rax>

2949:
old  < printArgument$203:>
new  <>

2950:
old  <	; Assign Â£temporary1726 0>
new  < printArgument$216:>

2951:
old  <	mov eax, 0>
new  <	; Address Â£temporary1758 precision>

2952:
old  <>
new  <	mov rsi, rbp>

2953:
old  < printArgument$204:>
new  <	add rsi, 60>

2954:
old  <	; Assign Â£temporary1724 -> negativePtr Â£temporary1726>
new  <>

2955:
old  <	mov [rsi], eax>
new  < printArgument$217:>

2956:
old  <>
new  <	; Parameter pointer Â£temporary1758 154>

2957:
old  < printArgument$205:>
new  <	mov [rbp + 154], rsi>

2958:
old  <	; NotEqual 213 sign 0>
new  <>

2959:
old  <	cmp dword [rbp + 76], 0>
new  < printArgument$218:>

2960:
old  <	jne printArgument$213>
new  <	; Call checkWidthAndPrecision 114 0>

2961:
old  <>
new  <	mov qword [rbp + 114], printArgument$219>

2962:
old  < printArgument$206:>
new  <	mov [rbp + 122], rbp>

2963:
old  <	; PreCall 114 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	add rbp, 114>

2964:
old  <>
new  <	jmp checkWidthAndPrecision>

2965:
old  < printArgument$207:>
new  <>

2966:
old  <	; PushFloat longDoubleValue>
new  < printArgument$219:>

2967:
old  <	fld qword [rbp + 98]>
new  <	; PostCall 114>

2969:
old  < printArgument$208:>
new  < printArgument$220:>

2970:
old  <	; Parameter double longDoubleValue 138>
new  <	; GetReturnValue Â£temporary1759>

2971:
old  <	fstp qword [rbp + 138]>
new  <>

2972:
old  <>
new  < printArgument$221:>

2973:
old  < printArgument$209:>
new  <	; Assign arg_list Â£temporary1759>

2974:
old  <	; Call fabs 114 0>
new  <	mov [rbp + 32], rbx>

2975:
old  <	mov qword [rbp + 114], printArgument$210>
new  <>

2976:
old  <	mov [rbp + 122], rbp>
new  < printArgument$222:>

2977:
old  <	add rbp, 114>
new  <	; NotEqual 233 c 102>

2978:
old  <	jmp fabs>
new  <	cmp byte [rbp + 88], 102>

2979:
old  <>
new  <	jne printArgument$233>

2980:
old  < printArgument$210:>
new  <>

2981:
old  <	; PostCall 114>
new  < printArgument$223:>

2982:
old  <>
new  <	; PreCall 114 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2983:
old  < printArgument$211:>
new  <>

2984:
old  <	; GetReturnValue Â£temporary1729>
new  < printArgument$224:>

2985:
old  <>
new  <	; PushFloat longDoubleValue>

2986:
old  < printArgument$212:>
new  <	fld qword [rbp + 98]>

2987:
old  <	; PopFloat longDoubleValue>
new  <>

2988:
old  <	fstp qword [rbp + 98]>
new  < printArgument$225:>

2989:
old  <>
new  <	; Parameter longdouble longDoubleValue 138>

2990:
old  < printArgument$213:>
new  <	fstp qword [rbp + 138]>

2991:
old  <	; PreCall 114 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

2992:
old  <>
new  < printArgument$226:>

2993:
old  < printArgument$214:>
new  <	; Parameter signedint plus 146>

2994:
old  <	; Parameter pointer arg_list 138>
new  <	mov eax, [rbp + 40]>

2995:
old  <	mov rax, [rbp + 32]>
new  <	mov [rbp + 146], eax>

2996:
old  <	mov [rbp + 138], rax>
new  <>

2997:
old  <>
new  < printArgument$227:>

2998:
old  < printArgument$215:>
new  <	; Parameter signedint space 150>

2999:
old  <	; Parameter pointer widthPtr 146>
new  <	mov eax, [rbp + 44]>

3000:
old  <	mov rax, [rbp + 52]>
new  <	mov [rbp + 150], eax>

3001:
old  <	mov [rbp + 146], rax>
new  <>

3002:
old  <>
new  < printArgument$228:>

3003:
old  < printArgument$216:>
new  <	; Parameter signedint grid 154>

3004:
old  <	; Address Â£temporary1730 precision>
new  <	mov eax, [rbp + 48]>

3005:
old  <	mov rsi, rbp>
new  <	mov [rbp + 154], eax>

3006:
old  <	add rsi, 60>
new  <>

3007:
old  <>
new  < printArgument$229:>

3008:
old  < printArgument$217:>
new  <	; Parameter signedint precision 158>

3009:
old  <	; Parameter pointer Â£temporary1730 154>
new  <	mov eax, [rbp + 60]>

3010:
old  <	mov [rbp + 154], rsi>
new  <	mov [rbp + 158], eax>

3012:
old  < printArgument$218:>
new  < printArgument$230:>

3013:
old  <	; Call checkWidthAndPrecision 114 0>
new  <	; Call printLongDoublePlain 114 0>

3014:
old  <	mov qword [rbp + 114], printArgument$219>
new  <	mov qword [rbp + 114], printArgument$231>

3017:
old  <	jmp checkWidthAndPrecision>
new  <	jmp printLongDoublePlain>

3019:
old  < printArgument$219:>
new  < printArgument$231:>

3022:
old  < printArgument$220:>
new  < printArgument$232:>

3023:
old  <	; GetReturnValue Â£temporary1731>
new  <	; Goto 359>

3024:
old  <>
new  <	jmp printArgument$359>

3025:
old  < printArgument$221:>
new  <>

3026:
old  <	; Assign arg_list Â£temporary1731>
new  < printArgument$233:>

3027:
old  <	mov [rbp + 32], rbx>
new  <	; PreCall 114 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3029:
old  < printArgument$222:>
new  < printArgument$234:>

3030:
old  <	; NotEqual 233 c 102>
new  <	; IntegralToIntegral Â£temporary1762 c>

3031:
old  <	cmp byte [rbp + 88], 102>
new  <	mov al, [rbp + 88]>

3032:
old  <	jne printArgument$233>
new  <	and eax, 255>

3033:
old  <>
new  <	cmp al, 0>

3034:
old  < printArgument$223:>
new  <	jge printArgument$235>

3035:
old  <	; PreCall 114 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	neg al>

3036:
old  <>
new  <	neg eax>

3037:
old  < printArgument$224:>
new  <>

3038:
old  <	; PushFloat longDoubleValue>
new  < printArgument$235:>

3039:
old  <	fld qword [rbp + 98]>
new  <	; Parameter signedint Â£temporary1762 138>

3040:
old  <>
new  <	mov [rbp + 138], eax>

3041:
old  < printArgument$225:>
new  <>

3042:
old  <	; Parameter longdouble longDoubleValue 138>
new  < printArgument$236:>

3043:
old  <	fstp qword [rbp + 138]>
new  <	; Call tolower 114 0>

3044:
old  <>
new  <	mov qword [rbp + 114], printArgument$237>

3045:
old  < printArgument$226:>
new  <	mov [rbp + 122], rbp>

3046:
old  <	; Parameter signedint plus 146>
new  <	add rbp, 114>

3047:
old  <	mov eax, [rbp + 40]>
new  <	jmp tolower>

3048:
old  <	mov [rbp + 146], eax>
new  <>

3049:
old  <>
new  < printArgument$237:>

3050:
old  < printArgument$227:>
new  <	; PostCall 114>

3051:
old  <	; Parameter signedint space 150>
new  <>

3052:
old  <	mov eax, [rbp + 44]>
new  < printArgument$238:>

3053:
old  <	mov [rbp + 150], eax>
new  <	; GetReturnValue Â£temporary1763>

3055:
old  < printArgument$228:>
new  < printArgument$239:>

3056:
old  <	; Parameter signedint grid 154>
new  <	; NotEqual 257 Â£temporary1763 101>

3057:
old  <	mov eax, [rbp + 48]>
new  <	cmp ebx, 101>

3058:
old  <	mov [rbp + 154], eax>
new  <	jne printArgument$257>

3060:
old  < printArgument$229:>
new  < printArgument$240:>

3061:
old  <	; Parameter signedint precision 158>
new  <	; PreCall 114 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3062:
old  <	mov eax, [rbp + 60]>
new  <>

3063:
old  <	mov [rbp + 158], eax>
new  < printArgument$241:>

3064:
old  <>
new  <	; PushFloat longDoubleValue>

3065:
old  < printArgument$230:>
new  <	fld qword [rbp + 98]>

3066:
old  <	; Call printLongDoublePlain 114 0>
new  <>

3067:
old  <	mov qword [rbp + 114], printArgument$231>
new  < printArgument$242:>

3068:
old  <	mov [rbp + 122], rbp>
new  <	; Parameter longdouble longDoubleValue 138>

3069:
old  <	add rbp, 114>
new  <	fstp qword [rbp + 138]>

3070:
old  <	jmp printLongDoublePlain>
new  <>

3071:
old  <>
new  < printArgument$243:>

3072:
old  < printArgument$231:>
new  <	; Parameter signedint plus 146>

3073:
old  <	; PostCall 114>
new  <	mov eax, [rbp + 40]>

3074:
old  <>
new  <	mov [rbp + 146], eax>

3075:
old  < printArgument$232:>
new  <>

3076:
old  <	; Goto 359>
new  < printArgument$244:>

3077:
old  <	jmp printArgument$359>
new  <	; Parameter signedint space 150>

3078:
old  <>
new  <	mov eax, [rbp + 44]>

3079:
old  < printArgument$233:>
new  <	mov [rbp + 150], eax>

3080:
old  <	; PreCall 114 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

3081:
old  <>
new  < printArgument$245:>

3082:
old  < printArgument$234:>
new  <	; Parameter signedint grid 154>

3083:
old  <	; IntegralToIntegral Â£temporary1734 c>
new  <	mov eax, [rbp + 48]>

3084:
old  <	mov al, [rbp + 88]>
new  <	mov [rbp + 154], eax>

3085:
old  <	and eax, 255>
new  <>

3086:
old  <	cmp al, 0>
new  < printArgument$246:>

3087:
old  <	jge printArgument$235>
new  <	; Parameter signedint precision 158>

3088:
old  <	neg al>
new  <	mov eax, [rbp + 60]>

3089:
old  <	neg eax>
new  <	mov [rbp + 158], eax>

3091:
old  < printArgument$235:>
new  < printArgument$247:>

3092:
old  <	; Parameter signedint Â£temporary1734 138>
new  <	; PreCall 114 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3093:
old  <	mov [rbp + 138], eax>
new  <>

3094:
old  <>
new  < printArgument$248:>

3095:
old  < printArgument$236:>
new  <	; IntegralToIntegral Â£temporary1765 c>

3096:
old  <	; Call tolower 114 0>
new  <	mov al, [rbp + 88]>

3097:
old  <	mov qword [rbp + 114], printArgument$237>
new  <	and eax, 255>

3098:
old  <	mov [rbp + 122], rbp>
new  <	cmp al, 0>

3099:
old  <	add rbp, 114>
new  <	jge printArgument$249>

3100:
old  <	jmp tolower>
new  <	neg al>

3101:
old  <>
new  <	neg eax>

3102:
old  < printArgument$237:>
new  <>

3103:
old  <	; PostCall 114>
new  < printArgument$249:>

3104:
old  <>
new  <	; Parameter signedint Â£temporary1765 186>

3105:
old  < printArgument$238:>
new  <	mov [rbp + 186], eax>

3106:
old  <	; GetReturnValue Â£temporary1735>
new  <>

3107:
old  <>
new  < printArgument$250:>

3108:
old  < printArgument$239:>
new  <	; Call isupper 162 0>

3109:
old  <	; NotEqual 257 Â£temporary1735 101>
new  <	mov qword [rbp + 162], printArgument$251>

3110:
old  <	cmp ebx, 101>
new  <	mov [rbp + 170], rbp>

3111:
old  <	jne printArgument$257>
new  <	add rbp, 162>

3112:
old  <>
new  <	jmp isupper>

3113:
old  < printArgument$240:>
new  <>

3114:
old  <	; PreCall 114 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < printArgument$251:>

3115:
old  <>
new  <	; PostCall 162>

3116:
old  < printArgument$241:>
new  <>

3117:
old  <	; PushFloat longDoubleValue>
new  < printArgument$252:>

3118:
old  <	fld qword [rbp + 98]>
new  <	; GetReturnValue Â£temporary1766>

3120:
old  < printArgument$242:>
new  < printArgument$253:>

3121:
old  <	; Parameter longdouble longDoubleValue 138>
new  <	; Parameter signedint Â£temporary1766 162>

3122:
old  <	fstp qword [rbp + 138]>
new  <	mov [rbp + 162], ebx>

3124:
old  < printArgument$243:>
new  < printArgument$254:>

3125:
old  <	; Parameter signedint plus 146>
new  <	; Call printLongDoubleExpo 114 0>

3126:
old  <	mov eax, [rbp + 40]>
new  <	mov qword [rbp + 114], printArgument$255>

3127:
old  <	mov [rbp + 146], eax>
new  <	mov [rbp + 122], rbp>

3128:
old  <>
new  <	add rbp, 114>

3129:
old  < printArgument$244:>
new  <	jmp printLongDoubleExpo>

3130:
old  <	; Parameter signedint space 150>
new  <>

3131:
old  <	mov eax, [rbp + 44]>
new  < printArgument$255:>

3132:
old  <	mov [rbp + 150], eax>
new  <	; PostCall 114>

3134:
old  < printArgument$245:>
new  < printArgument$256:>

3135:
old  <	; Parameter signedint grid 154>
new  <	; Goto 359>

3136:
old  <	mov eax, [rbp + 48]>
new  <	jmp printArgument$359>

3137:
old  <	mov [rbp + 154], eax>
new  <>

3138:
old  <>
new  < printArgument$257:>

3139:
old  < printArgument$246:>
new  <	; PreCall 114 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3140:
old  <	; Parameter signedint precision 158>
new  <>

3141:
old  <	mov eax, [rbp + 60]>
new  < printArgument$258:>

3142:
old  <	mov [rbp + 158], eax>
new  <	; PreCall 114 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3144:
old  < printArgument$247:>
new  < printArgument$259:>

3145:
old  <	; PreCall 114 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; PushFloat longDoubleValue>

3146:
old  <>
new  <	fld qword [rbp + 98]>

3147:
old  < printArgument$248:>
new  <>

3148:
old  <	; IntegralToIntegral Â£temporary1737 c>
new  < printArgument$260:>

3149:
old  <	mov al, [rbp + 88]>
new  <	; Parameter double longDoubleValue 138>

3150:
old  <	and eax, 255>
new  <	fstp qword [rbp + 138]>

3151:
old  <	cmp al, 0>
new  <>

3152:
old  <	jge printArgument$249>
new  < printArgument$261:>

3153:
old  <	neg al>
new  <	; Call fabs 114 0>

3154:
old  <	neg eax>
new  <	mov qword [rbp + 114], printArgument$262>

3155:
old  <>
new  <	mov [rbp + 122], rbp>

3156:
old  < printArgument$249:>
new  <	add rbp, 114>

3157:
old  <	; Parameter signedint Â£temporary1737 186>
new  <	jmp fabs>

3158:
old  <	mov [rbp + 186], eax>
new  <>

3159:
old  <>
new  < printArgument$262:>

3160:
old  < printArgument$250:>
new  <	; PostCall 114>

3161:
old  <	; Call isupper 162 0>
new  <>

3162:
old  <	mov qword [rbp + 162], printArgument$251>
new  < printArgument$263:>

3163:
old  <	mov [rbp + 170], rbp>
new  <	; GetReturnValue Â£temporary1768>

3164:
old  <	add rbp, 162>
new  <>

3165:
old  <	jmp isupper>
new  < printArgument$264:>

3166:
old  <>
new  <	; Parameter double Â£temporary1768 138>

3167:
old  < printArgument$251:>
new  <	fstp qword [rbp + 138]>

3168:
old  <	; PostCall 162>
new  <>

3169:
old  <>
new  < printArgument$265:>

3170:
old  < printArgument$252:>
new  <	; Call log10 114 0>

3171:
old  <	; GetReturnValue Â£temporary1738>
new  <	mov qword [rbp + 114], printArgument$266>

3172:
old  <>
new  <	mov [rbp + 122], rbp>

3173:
old  < printArgument$253:>
new  <	add rbp, 114>

3174:
old  <	; Parameter signedint Â£temporary1738 162>
new  <	jmp log10>

3175:
old  <	mov [rbp + 162], ebx>
new  <>

3176:
old  <>
new  < printArgument$266:>

3177:
old  < printArgument$254:>
new  <	; PostCall 114>

3178:
old  <	; Call printLongDoubleExpo 114 0>
new  <>

3179:
old  <	mov qword [rbp + 114], printArgument$255>
new  < printArgument$267:>

3180:
old  <	mov [rbp + 122], rbp>
new  <	; GetReturnValue Â£temporary1769>

3181:
old  <	add rbp, 114>
new  <>

3182:
old  <	jmp printLongDoubleExpo>
new  < printArgument$268:>

3183:
old  <>
new  <	; FloatingToIntegral Â£temporary1770 Â£temporary1769>

3184:
old  < printArgument$255:>
new  <	fistp dword [container4bytes#]>

3185:
old  <	; PostCall 114>
new  <	mov eax, [container4bytes#]>

3187:
old  < printArgument$256:>
new  < printArgument$269:>

3188:
old  <	; Goto 359>
new  <	; Assign expo Â£temporary1770>

3189:
old  <	jmp printArgument$359>
new  <	mov [rbp + 114], eax>

3191:
old  < printArgument$257:>
new  < printArgument$270:>

3192:
old  <	; PreCall 114 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; SignedLessThan 282 expo -3>

3193:
old  <>
new  <	cmp dword [rbp + 114], -3>

3194:
old  < printArgument$258:>
new  <	jl printArgument$282>

3195:
old  <	; PreCall 114 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

3196:
old  <>
new  < printArgument$271:>

3197:
old  < printArgument$259:>
new  <	; SignedGreaterThan 282 expo 2>

3198:
old  <	; PushFloat longDoubleValue>
new  <	cmp dword [rbp + 114], 2>

3199:
old  <	fld qword [rbp + 98]>
new  <	jg printArgument$282>

3201:
old  < printArgument$260:>
new  < printArgument$272:>

3202:
old  <	; Parameter double longDoubleValue 138>
new  <	; PreCall 118 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3203:
old  <	fstp qword [rbp + 138]>
new  <>

3204:
old  <>
new  < printArgument$273:>

3205:
old  < printArgument$261:>
new  <	; PushFloat longDoubleValue>

3206:
old  <	; Call fabs 114 0>
new  <	fld qword [rbp + 98]>

3207:
old  <	mov qword [rbp + 114], printArgument$262>
new  <>

3208:
old  <	mov [rbp + 122], rbp>
new  < printArgument$274:>

3209:
old  <	add rbp, 114>
new  <	; Parameter longdouble longDoubleValue 142>

3210:
old  <	jmp fabs>
new  <	fstp qword [rbp + 142]>

3212:
old  < printArgument$262:>
new  < printArgument$275:>

3213:
old  <	; PostCall 114>
new  <	; Parameter signedint plus 150>

3214:
old  <>
new  <	mov eax, [rbp + 40]>

3215:
old  < printArgument$263:>
new  <	mov [rbp + 150], eax>

3216:
old  <	; GetReturnValue Â£temporary1740>
new  <>

3217:
old  <>
new  < printArgument$276:>

3218:
old  < printArgument$264:>
new  <	; Parameter signedint space 154>

3219:
old  <	; Parameter double Â£temporary1740 138>
new  <	mov eax, [rbp + 44]>

3220:
old  <	fstp qword [rbp + 138]>
new  <	mov [rbp + 154], eax>

3222:
old  < printArgument$265:>
new  < printArgument$277:>

3223:
old  <	; Call log10 114 0>
new  <	; Parameter signedint grid 158>

3224:
old  <	mov qword [rbp + 114], printArgument$266>
new  <	mov eax, [rbp + 48]>

3225:
old  <	mov [rbp + 122], rbp>
new  <	mov [rbp + 158], eax>

3226:
old  <	add rbp, 114>
new  <>

3227:
old  <	jmp log10>
new  < printArgument$278:>

3228:
old  <>
new  <	; Parameter signedint precision 162>

3229:
old  < printArgument$266:>
new  <	mov eax, [rbp + 60]>

3230:
old  <	; PostCall 114>
new  <	mov [rbp + 162], eax>

3232:
old  < printArgument$267:>
new  < printArgument$279:>

3233:
old  <	; GetReturnValue Â£temporary1741>
new  <	; Call printLongDoublePlain 118 0>

3234:
old  <>
new  <	mov qword [rbp + 118], printArgument$280>

3235:
old  < printArgument$268:>
new  <	mov [rbp + 126], rbp>

3236:
old  <	; FloatingToIntegral Â£temporary1742 Â£temporary1741>
new  <	add rbp, 118>

3237:
old  <	fistp dword [container4bytes#]>
new  <	jmp printLongDoublePlain>

3238:
old  <	mov eax, [container4bytes#]>
new  <>

3239:
old  <>
new  < printArgument$280:>

3240:
old  < printArgument$269:>
new  <	; PostCall 118>

3241:
old  <	; Assign expo Â£temporary1742>
new  <>

3242:
old  <	mov [rbp + 114], eax>
new  < printArgument$281:>

3243:
old  <>
new  <	; Goto 359>

3244:
old  < printArgument$270:>
new  <	jmp printArgument$359>

3245:
old  <	; SignedLessThan 282 expo -3>
new  <>

3246:
old  <	cmp dword [rbp + 114], -3>
new  < printArgument$282:>

3247:
old  <	jl printArgument$282>
new  <	; PreCall 118 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3249:
old  < printArgument$271:>
new  < printArgument$283:>

3250:
old  <	; SignedGreaterThan 282 expo 2>
new  <	; PushFloat longDoubleValue>

3251:
old  <	cmp dword [rbp + 114], 2>
new  <	fld qword [rbp + 98]>

3252:
old  <	jg printArgument$282>
new  <>

3253:
old  <>
new  < printArgument$284:>

3254:
old  < printArgument$272:>
new  <	; Parameter longdouble longDoubleValue 142>

3255:
old  <	; PreCall 118 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	fstp qword [rbp + 142]>

3257:
old  < printArgument$273:>
new  < printArgument$285:>

3258:
old  <	; PushFloat longDoubleValue>
new  <	; Parameter signedint plus 150>

3259:
old  <	fld qword [rbp + 98]>
new  <	mov eax, [rbp + 40]>

3260:
old  <>
new  <	mov [rbp + 150], eax>

3261:
old  < printArgument$274:>
new  <>

3262:
old  <	; Parameter longdouble longDoubleValue 142>
new  < printArgument$286:>

3263:
old  <	fstp qword [rbp + 142]>
new  <	; Parameter signedint space 154>

3264:
old  <>
new  <	mov eax, [rbp + 44]>

3265:
old  < printArgument$275:>
new  <	mov [rbp + 154], eax>

3266:
old  <	; Parameter signedint plus 150>
new  <>

3267:
old  <	mov eax, [rbp + 40]>
new  < printArgument$287:>

3268:
old  <	mov [rbp + 150], eax>
new  <	; Parameter signedint grid 158>

3269:
old  <>
new  <	mov eax, [rbp + 48]>

3270:
old  < printArgument$276:>
new  <	mov [rbp + 158], eax>

3271:
old  <	; Parameter signedint space 154>
new  <>

3272:
old  <	mov eax, [rbp + 44]>
new  < printArgument$288:>

3273:
old  <	mov [rbp + 154], eax>
new  <	; Parameter signedint precision 162>

3274:
old  <>
new  <	mov eax, [rbp + 60]>

3275:
old  < printArgument$277:>
new  <	mov [rbp + 162], eax>

3276:
old  <	; Parameter signedint grid 158>
new  <>

3277:
old  <	mov eax, [rbp + 48]>
new  < printArgument$289:>

3278:
old  <	mov [rbp + 158], eax>
new  <	; PreCall 118 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3280:
old  < printArgument$278:>
new  < printArgument$290:>

3281:
old  <	; Parameter signedint precision 162>
new  <	; IntegralToIntegral Â£temporary1775 c>

3282:
old  <	mov eax, [rbp + 60]>
new  <	mov al, [rbp + 88]>

3283:
old  <	mov [rbp + 162], eax>
new  <	and eax, 255>

3284:
old  <>
new  <	cmp al, 0>

3285:
old  < printArgument$279:>
new  <	jge printArgument$291>

3286:
old  <	; Call printLongDoublePlain 118 0>
new  <	neg al>

3287:
old  <	mov qword [rbp + 118], printArgument$280>
new  <	neg eax>

3288:
old  <	mov [rbp + 126], rbp>
new  <>

3289:
old  <	add rbp, 118>
new  < printArgument$291:>

3290:
old  <	jmp printLongDoublePlain>
new  <	; Parameter signedint Â£temporary1775 190>

3291:
old  <>
new  <	mov [rbp + 190], eax>

3292:
old  < printArgument$280:>
new  <>

3293:
old  <	; PostCall 118>
new  < printArgument$292:>

3294:
old  <>
new  <	; Call isupper 166 0>

3295:
old  < printArgument$281:>
new  <	mov qword [rbp + 166], printArgument$293>

3296:
old  <	; Goto 359>
new  <	mov [rbp + 174], rbp>

3297:
old  <	jmp printArgument$359>
new  <	add rbp, 166>

3298:
old  <>
new  <	jmp isupper>

3299:
old  < printArgument$282:>
new  <>

3300:
old  <	; PreCall 118 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < printArgument$293:>

3301:
old  <>
new  <	; PostCall 166>

3302:
old  < printArgument$283:>
new  <>

3303:
old  <	; PushFloat longDoubleValue>
new  < printArgument$294:>

3304:
old  <	fld qword [rbp + 98]>
new  <	; GetReturnValue Â£temporary1776>

3306:
old  < printArgument$284:>
new  < printArgument$295:>

3307:
old  <	; Parameter longdouble longDoubleValue 142>
new  <	; Parameter signedint Â£temporary1776 166>

3308:
old  <	fstp qword [rbp + 142]>
new  <	mov [rbp + 166], ebx>

3310:
old  < printArgument$285:>
new  < printArgument$296:>

3311:
old  <	; Parameter signedint plus 150>
new  <	; Call printLongDoubleExpo 118 0>

3312:
old  <	mov eax, [rbp + 40]>
new  <	mov qword [rbp + 118], printArgument$297>

3313:
old  <	mov [rbp + 150], eax>
new  <	mov [rbp + 126], rbp>

3314:
old  <>
new  <	add rbp, 118>

3315:
old  < printArgument$286:>
new  <	jmp printLongDoubleExpo>

3316:
old  <	; Parameter signedint space 154>
new  <>

3317:
old  <	mov eax, [rbp + 44]>
new  < printArgument$297:>

3318:
old  <	mov [rbp + 154], eax>
new  <	; PostCall 118>

3320:
old  < printArgument$287:>
new  < printArgument$298:>

3321:
old  <	; Parameter signedint grid 158>
new  <	; Goto 359>

3322:
old  <	mov eax, [rbp + 48]>
new  <	jmp printArgument$359>

3323:
old  <	mov [rbp + 158], eax>
new  <>

3324:
old  <>
new  < printArgument$299:>

3325:
old  < printArgument$288:>
new  <	; BinaryAdd arg_list arg_list 8>

3326:
old  <	; Parameter signedint precision 162>
new  <	add qword [rbp + 32], 8>

3327:
old  <	mov eax, [rbp + 60]>
new  <>

3328:
old  <	mov [rbp + 162], eax>
new  < printArgument$300:>

3329:
old  <>
new  <	; BinarySubtract Â£temporary1780 arg_list 8>

3330:
old  < printArgument$289:>
new  <	mov rsi, [rbp + 32]>

3331:
old  <	; PreCall 118 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	sub rsi, 8>

3333:
old  < printArgument$290:>
new  < printArgument$301:>

3334:
old  <	; IntegralToIntegral Â£temporary1747 c>
new  <	; IntegralToIntegral Â£temporary1782 Â£temporary1780>

3335:
old  <	mov al, [rbp + 88]>
new  <>

3336:
old  <	and eax, 255>
new  < printArgument$302:>

3337:
old  <	cmp al, 0>
new  <	; Dereference Â£temporary1783 -> Â£temporary1782 Â£temporary1782 0>

3338:
old  <	jge printArgument$291>
new  <>

3339:
old  <	neg al>
new  < printArgument$303:>

3340:
old  <	neg eax>
new  <	; Assign ptrValue Â£temporary1783 -> Â£temporary1782>

3341:
old  <>
new  <	mov rax, [rsi]>

3342:
old  < printArgument$291:>
new  <	mov [rbp + 106], rax>

3343:
old  <	; Parameter signedint Â£temporary1747 190>
new  <>

3344:
old  <	mov [rbp + 190], eax>
new  < printArgument$304:>

3345:
old  <>
new  <	; PreCall 114 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3346:
old  < printArgument$292:>
new  <>

3347:
old  <	; Call isupper 166 0>
new  < printArgument$305:>

3348:
old  <	mov qword [rbp + 166], printArgument$293>
new  <	; Parameter pointer arg_list 138>

3349:
old  <	mov [rbp + 174], rbp>
new  <	mov rax, [rbp + 32]>

3350:
old  <	add rbp, 166>
new  <	mov [rbp + 138], rax>

3351:
old  <	jmp isupper>
new  <>

3352:
old  <>
new  < printArgument$306:>

3353:
old  < printArgument$293:>
new  <	; Parameter pointer widthPtr 146>

3354:
old  <	; PostCall 166>
new  <	mov rax, [rbp + 52]>

3355:
old  <>
new  <	mov [rbp + 146], rax>

3356:
old  < printArgument$294:>
new  <>

3357:
old  <	; GetReturnValue Â£temporary1748>
new  < printArgument$307:>

3358:
old  <>
new  <	; Address Â£temporary1784 precision>

3359:
old  < printArgument$295:>
new  <	mov rsi, rbp>

3360:
old  <	; Parameter signedint Â£temporary1748 166>
new  <	add rsi, 60>

3361:
old  <	mov [rbp + 166], ebx>
new  <>

3362:
old  <>
new  < printArgument$308:>

3363:
old  < printArgument$296:>
new  <	; Parameter pointer Â£temporary1784 154>

3364:
old  <	; Call printLongDoubleExpo 118 0>
new  <	mov [rbp + 154], rsi>

3365:
old  <	mov qword [rbp + 118], printArgument$297>
new  <>

3366:
old  <	mov [rbp + 126], rbp>
new  < printArgument$309:>

3367:
old  <	add rbp, 118>
new  <	; Call checkWidthAndPrecision 114 0>

3368:
old  <	jmp printLongDoubleExpo>
new  <	mov qword [rbp + 114], printArgument$310>

3369:
old  <>
new  <	mov [rbp + 122], rbp>

3370:
old  < printArgument$297:>
new  <	add rbp, 114>

3371:
old  <	; PostCall 118>
new  <	jmp checkWidthAndPrecision>

3373:
old  < printArgument$298:>
new  < printArgument$310:>

3374:
old  <	; Goto 359>
new  <	; PostCall 114>

3375:
old  <	jmp printArgument$359>
new  <>

3376:
old  <>
new  < printArgument$311:>

3377:
old  < printArgument$299:>
new  <	; GetReturnValue Â£temporary1785>

3378:
old  <	; BinaryAdd arg_list arg_list 8>
new  <>

3379:
old  <	add qword [rbp + 32], 8>
new  < printArgument$312:>

3380:
old  <>
new  <	; Assign arg_list Â£temporary1785>

3381:
old  < printArgument$300:>
new  <	mov [rbp + 32], rbx>

3382:
old  <	; BinarySubtract Â£temporary1752 arg_list 8>
new  <>

3383:
old  <	mov rsi, [rbp + 32]>
new  < printArgument$313:>

3384:
old  <	sub rsi, 8>
new  <	; PreCall 114 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3386:
old  < printArgument$301:>
new  < printArgument$314:>

3387:
old  <	; IntegralToIntegral Â£temporary1754 Â£temporary1752>
new  <	; IntegralToIntegral Â£temporary1786 ptrValue>

3388:
old  <>
new  <	mov rax, [rbp + 106]>

3389:
old  < printArgument$302:>
new  <>

3390:
old  <	; Dereference Â£temporary1755 -> Â£temporary1754 Â£temporary1754 0>
new  < printArgument$315:>

3391:
old  <>
new  <	; Parameter unsignedlongint Â£temporary1786 138>

3392:
old  < printArgument$303:>
new  <	mov [rbp + 138], rax>

3393:
old  <	; Assign ptrValue Â£temporary1755 -> Â£temporary1754>
new  <>

3394:
old  <	mov rax, [rsi]>
new  < printArgument$316:>

3395:
old  <	mov [rbp + 106], rax>
new  <	; Parameter signedint 0 146>

3396:
old  <>
new  <	mov dword [rbp + 146], 0>

3397:
old  < printArgument$304:>
new  <>

3398:
old  <	; PreCall 114 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < printArgument$317:>

3399:
old  <>
new  <	; Parameter signedint 0 150>

3400:
old  < printArgument$305:>
new  <	mov dword [rbp + 150], 0>

3401:
old  <	; Parameter pointer arg_list 138>
new  <>

3402:
old  <	mov rax, [rbp + 32]>
new  < printArgument$318:>

3403:
old  <	mov [rbp + 138], rax>
new  <	; Parameter signedint 0 154>

3404:
old  <>
new  <	mov dword [rbp + 154], 0>

3405:
old  < printArgument$306:>
new  <>

3406:
old  <	; Parameter pointer widthPtr 146>
new  < printArgument$319:>

3407:
old  <	mov rax, [rbp + 52]>
new  <	; Parameter unsignedlongint 10 158>

3408:
old  <	mov [rbp + 146], rax>
new  <	mov qword [rbp + 158], 10>

3410:
old  < printArgument$307:>
new  < printArgument$320:>

3411:
old  <	; Address Â£temporary1756 precision>
new  <	; Parameter signedint 0 166>

3412:
old  <	mov rsi, rbp>
new  <	mov dword [rbp + 166], 0>

3413:
old  <	add rsi, 60>
new  <>

3414:
old  <>
new  < printArgument$321:>

3415:
old  < printArgument$308:>
new  <	; Call printUnsignedLong 114 0>

3416:
old  <	; Parameter pointer Â£temporary1756 154>
new  <	mov qword [rbp + 114], printArgument$322>

3417:
old  <	mov [rbp + 154], rsi>
new  <	mov [rbp + 122], rbp>

3418:
old  <>
new  <	add rbp, 114>

3419:
old  < printArgument$309:>
new  <	jmp printUnsignedLong>

3420:
old  <	; Call checkWidthAndPrecision 114 0>
new  <>

3421:
old  <	mov qword [rbp + 114], printArgument$310>
new  < printArgument$322:>

3422:
old  <	mov [rbp + 122], rbp>
new  <	; PostCall 114>

3423:
old  <	add rbp, 114>
new  <>

3424:
old  <	jmp checkWidthAndPrecision>
new  < printArgument$323:>

3425:
old  <>
new  <	; Goto 359>

3426:
old  < printArgument$310:>
new  <	jmp printArgument$359>

3427:
old  <	; PostCall 114>
new  <>

3428:
old  <>
new  < printArgument$324:>

3429:
old  < printArgument$311:>
new  <	; BinaryAdd arg_list arg_list 8>

3430:
old  <	; GetReturnValue Â£temporary1757>
new  <	add qword [rbp + 32], 8>

3432:
old  < printArgument$312:>
new  < printArgument$325:>

3433:
old  <	; Assign arg_list Â£temporary1757>
new  <	; BinarySubtract Â£temporary1790 arg_list 8>

3434:
old  <	mov [rbp + 32], rbx>
new  <	mov rsi, [rbp + 32]>

3435:
old  <>
new  <	sub rsi, 8>

3436:
old  < printArgument$313:>
new  <>

3437:
old  <	; PreCall 114 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < printArgument$326:>

3438:
old  <>
new  <	; IntegralToIntegral Â£temporary1792 Â£temporary1790>

3439:
old  < printArgument$314:>
new  <>

3440:
old  <	; IntegralToIntegral Â£temporary1758 ptrValue>
new  < printArgument$327:>

3441:
old  <	mov rax, [rbp + 106]>
new  <	; Dereference Â£temporary1793 -> Â£temporary1792 Â£temporary1792 0>

3443:
old  < printArgument$315:>
new  < printArgument$328:>

3444:
old  <	; Parameter unsignedlongint Â£temporary1758 138>
new  <	; Assign ptrValue Â£temporary1793 -> Â£temporary1792>

3445:
old  <	mov [rbp + 138], rax>
new  <	mov rax, [rsi]>

3446:
old  <>
new  <	mov [rbp + 106], rax>

3447:
old  < printArgument$316:>
new  <>

3448:
old  <	; Parameter signedint 0 146>
new  < printArgument$329:>

3449:
old  <	mov dword [rbp + 146], 0>
new  <	; BinaryAdd arg_list arg_list 8>

3450:
old  <>
new  <	add qword [rbp + 32], 8>

3451:
old  < printArgument$317:>
new  <>

3452:
old  <	; Parameter signedint 0 150>
new  < printArgument$330:>

3453:
old  <	mov dword [rbp + 150], 0>
new  <	; BinarySubtract Â£temporary1796 arg_list 8>

3454:
old  <>
new  <	mov rsi, [rbp + 32]>

3455:
old  < printArgument$318:>
new  <	sub rsi, 8>

3456:
old  <	; Parameter signedint 0 154>
new  <>

3457:
old  <	mov dword [rbp + 154], 0>
new  < printArgument$331:>

3458:
old  <>
new  <	; IntegralToIntegral Â£temporary1798 Â£temporary1796>

3459:
old  < printArgument$319:>
new  <>

3460:
old  <	; Parameter unsignedlongint 10 158>
new  < printArgument$332:>

3461:
old  <	mov qword [rbp + 158], 10>
new  <	; Dereference Â£temporary1799 -> Â£temporary1798 Â£temporary1798 0>

3463:
old  < printArgument$320:>
new  < printArgument$333:>

3464:
old  <	; Parameter signedint 0 166>
new  <	; Assign intPtr Â£temporary1799 -> Â£temporary1798>

3465:
old  <	mov dword [rbp + 166], 0>
new  <	mov rax, [rsi]>

3466:
old  <>
new  <	mov [rbp + 90], rax>

3467:
old  < printArgument$321:>
new  <>

3468:
old  <	; Call printUnsignedLong 114 0>
new  < printArgument$334:>

3469:
old  <	mov qword [rbp + 114], printArgument$322>
new  <	; PreCall 114 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3470:
old  <	mov [rbp + 122], rbp>
new  <>

3471:
old  <	add rbp, 114>
new  < printArgument$335:>

3472:
old  <	jmp printUnsignedLong>
new  <	; Parameter pointer arg_list 138>

3473:
old  <>
new  <	mov rax, [rbp + 32]>

3474:
old  < printArgument$322:>
new  <	mov [rbp + 138], rax>

3475:
old  <	; PostCall 114>
new  <>

3476:
old  <>
new  < printArgument$336:>

3477:
old  < printArgument$323:>
new  <	; Parameter pointer widthPtr 146>

3478:
old  <	; Goto 359>
new  <	mov rax, [rbp + 52]>

3479:
old  <	jmp printArgument$359>
new  <	mov [rbp + 146], rax>

3481:
old  < printArgument$324:>
new  < printArgument$337:>

3482:
old  <	; BinaryAdd arg_list arg_list 8>
new  <	; Address Â£temporary1800 precision>

3483:
old  <	add qword [rbp + 32], 8>
new  <	mov rsi, rbp>

3484:
old  <>
new  <	add rsi, 60>

3485:
old  < printArgument$325:>
new  <>

3486:
old  <	; BinarySubtract Â£temporary1762 arg_list 8>
new  < printArgument$338:>

3487:
old  <	mov rsi, [rbp + 32]>
new  <	; Parameter pointer Â£temporary1800 154>

3488:
old  <	sub rsi, 8>
new  <	mov [rbp + 154], rsi>

3490:
old  < printArgument$326:>
new  < printArgument$339:>

3491:
old  <	; IntegralToIntegral Â£temporary1764 Â£temporary1762>
new  <	; Call checkWidthAndPrecision 114 0>

3492:
old  <>
new  <	mov qword [rbp + 114], printArgument$340>

3493:
old  < printArgument$327:>
new  <	mov [rbp + 122], rbp>

3494:
old  <	; Dereference Â£temporary1765 -> Â£temporary1764 Â£temporary1764 0>
new  <	add rbp, 114>

3495:
old  <>
new  <	jmp checkWidthAndPrecision>

3496:
old  < printArgument$328:>
new  <>

3497:
old  <	; Assign ptrValue Â£temporary1765 -> Â£temporary1764>
new  < printArgument$340:>

3498:
old  <	mov rax, [rsi]>
new  <	; PostCall 114>

3499:
old  <	mov [rbp + 106], rax>
new  <>

3500:
old  <>
new  < printArgument$341:>

3501:
old  < printArgument$329:>
new  <	; GetReturnValue Â£temporary1801>

3502:
old  <	; BinaryAdd arg_list arg_list 8>
new  <>

3503:
old  <	add qword [rbp + 32], 8>
new  < printArgument$342:>

3504:
old  <>
new  <	; Assign arg_list Â£temporary1801>

3505:
old  < printArgument$330:>
new  <	mov [rbp + 32], rbx>

3506:
old  <	; BinarySubtract Â£temporary1768 arg_list 8>
new  <>

3507:
old  <	mov rsi, [rbp + 32]>
new  < printArgument$343:>

3508:
old  <	sub rsi, 8>
new  <	; Dereference Â£temporary1802 -> intPtr intPtr 0>

3509:
old  <>
new  <	mov rsi, [rbp + 90]>

3510:
old  < printArgument$331:>
new  <>

3511:
old  <	; IntegralToIntegral Â£temporary1770 Â£temporary1768>
new  < printArgument$344:>

3512:
old  <>
new  <	; Assign Â£temporary1802 -> intPtr g_outChars>

3513:
old  < printArgument$332:>
new  <	mov eax, [g_outChars]>

3514:
old  <	; Dereference Â£temporary1771 -> Â£temporary1770 Â£temporary1770 0>
new  <	mov [rsi], eax>

3516:
old  < printArgument$333:>
new  < printArgument$345:>

3517:
old  <	; Assign intPtr Â£temporary1771 -> Â£temporary1770>
new  <	; Goto 359>

3518:
old  <	mov rax, [rsi]>
new  <	jmp printArgument$359>

3519:
old  <	mov [rbp + 90], rax>
new  <>

3520:
old  <>
new  < printArgument$346:>

3521:
old  < printArgument$334:>
new  <	; PreCall 114 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3522:
old  <	; PreCall 114 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

3523:
old  <>
new  < printArgument$347:>

3524:
old  < printArgument$335:>
new  <	; Parameter pointer arg_list 138>

3525:
old  <	; Parameter pointer arg_list 138>
new  <	mov rax, [rbp + 32]>

3526:
old  <	mov rax, [rbp + 32]>
new  <	mov [rbp + 138], rax>

3527:
old  <	mov [rbp + 138], rax>
new  <>

3528:
old  <>
new  < printArgument$348:>

3529:
old  < printArgument$336:>
new  <	; Parameter pointer widthPtr 146>

3530:
old  <	; Parameter pointer widthPtr 146>
new  <	mov rax, [rbp + 52]>

3531:
old  <	mov rax, [rbp + 52]>
new  <	mov [rbp + 146], rax>

3532:
old  <	mov [rbp + 146], rax>
new  <>

3533:
old  <>
new  < printArgument$349:>

3534:
old  < printArgument$337:>
new  <	; Address Â£temporary1803 precision>

3535:
old  <	; Address Â£temporary1772 precision>
new  <	mov rsi, rbp>

3536:
old  <	mov rsi, rbp>
new  <	add rsi, 60>

3537:
old  <	add rsi, 60>
new  <>

3538:
old  <>
new  < printArgument$350:>

3539:
old  < printArgument$338:>
new  <	; Parameter pointer Â£temporary1803 154>

3540:
old  <	; Parameter pointer Â£temporary1772 154>
new  <	mov [rbp + 154], rsi>

3541:
old  <	mov [rbp + 154], rsi>
new  <>

3542:
old  <>
new  < printArgument$351:>

3543:
old  < printArgument$339:>
new  <	; Call checkWidthAndPrecision 114 0>

3544:
old  <	; Call checkWidthAndPrecision 114 0>
new  <	mov qword [rbp + 114], printArgument$352>

3545:
old  <	mov qword [rbp + 114], printArgument$340>
new  <	mov [rbp + 122], rbp>

3546:
old  <	mov [rbp + 122], rbp>
new  <	add rbp, 114>

3547:
old  <	add rbp, 114>
new  <	jmp checkWidthAndPrecision>

3548:
old  <	jmp checkWidthAndPrecision>
new  <>

3549:
old  <>
new  < printArgument$352:>

3550:
old  < printArgument$340:>
new  <	; PostCall 114>

3551:
old  <	; PostCall 114>
new  <>

3552:
old  <>
new  < printArgument$353:>

3553:
old  < printArgument$341:>
new  <	; GetReturnValue Â£temporary1804>

3554:
old  <	; GetReturnValue Â£temporary1773>
new  <>

3555:
old  <>
new  < printArgument$354:>

3556:
old  < printArgument$342:>
new  <	; Assign arg_list Â£temporary1804>

3557:
old  <	; Assign arg_list Â£temporary1773>
new  <	mov [rbp + 32], rbx>

3558:
old  <	mov [rbp + 32], rbx>
new  <>

3559:
old  <>
new  < printArgument$355:>

3560:
old  < printArgument$343:>
new  <	; PreCall 114 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3561:
old  <	; Dereference Â£temporary1774 -> intPtr intPtr 0>
new  <>

3562:
old  <	mov rsi, [rbp + 90]>
new  < printArgument$356:>

3563:
old  <>
new  <	; Parameter signedchar 37 138>

3564:
old  < printArgument$344:>
new  <	mov byte [rbp + 138], 37>

3565:
old  <	; Assign Â£temporary1774 -> intPtr g_outChars>
new  <>

3566:
old  <	mov eax, [g_outChars]>
new  < printArgument$357:>

3567:
old  <	mov [rsi], eax>
new  <	; Call printChar 114 0>

3568:
old  <>
new  <	mov qword [rbp + 114], printArgument$358>

3569:
old  < printArgument$345:>
new  <	mov [rbp + 122], rbp>

3570:
old  <	; Goto 359>
new  <	add rbp, 114>

3571:
old  <	jmp printArgument$359>
new  <	jmp printChar>

3573:
old  < printArgument$346:>
new  < printArgument$358:>

3574:
old  <	; PreCall 114 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; PostCall 114>

3576:
old  < printArgument$347:>
new  < printArgument$359:>

3577:
old  <	; Parameter pointer arg_list 138>
new  <	; Return arg_list>

3578:
old  <	mov rax, [rbp + 32]>
new  <	mov rbx, [rbp + 32]>

3579:
old  <	mov [rbp + 138], rax>
new  <	mov rax, [rbp]>

3580:
old  <>
new  <	mov rdi, [rbp + 16]>

3581:
old  < printArgument$348:>
new  <	mov rbp, [rbp + 8]>

3582:
old  <	; Parameter pointer widthPtr 146>
new  <	jmp rax>

3583:
old  <	mov rax, [rbp + 52]>
new  <>

3584:
old  <	mov [rbp + 146], rax>
new  < printArgument$360:>

3585:
old  <>
new  <	; FunctionEnd printArgument>

3586:
old  < printArgument$349:>
new  <>

3587:
old  <	; Address Â£temporary1775 precision>
new  <section .data>

3588:
old  <	mov rsi, rbp>
new  <>

3589:
old  <	add rsi, 60>
new  <int4$10#:>

3590:
old  <>
new  <	; Initializer SignedInt 10>

3591:
old  < printArgument$350:>
new  <	dd 10>

3592:
old  <	; Parameter pointer Â£temporary1775 154>
new  <>

3593:
old  <	mov [rbp + 154], rsi>
new  <section .text>

3595:
old  < printArgument$351:>
new  < printFormat:>

3596:
old  <	; Call checkWidthAndPrecision 114 0>
new  <	; Assign width 0>

3597:
old  <	mov qword [rbp + 114], printArgument$352>
new  <	mov dword [rbp + 44], 0>

3598:
old  <	mov [rbp + 122], rbp>
new  <>

3599:
old  <	add rbp, 114>
new  < printFormat$1:>

3600:
old  <	jmp checkWidthAndPrecision>
new  <	; Assign precision 0>

3601:
old  <>
new  <	mov dword [rbp + 48], 0>

3602:
old  < printArgument$352:>
new  <>

3603:
old  <	; PostCall 114>
new  < printFormat$2:>

3604:
old  <>
new  <	; Assign percent 0>

3605:
old  < printArgument$353:>
new  <	mov dword [rbp + 52], 0>

3606:
old  <	; GetReturnValue Â£temporary1776>
new  <>

3607:
old  <>
new  < printFormat$3:>

3608:
old  < printArgument$354:>
new  <	; Assign plus 0>

3609:
old  <	; Assign arg_list Â£temporary1776>
new  <	mov dword [rbp + 56], 0>

3610:
old  <	mov [rbp + 32], rbx>
new  <>

3611:
old  <>
new  < printFormat$4:>

3612:
old  < printArgument$355:>
new  <	; Assign minus 0>

3613:
old  <	; PreCall 114 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov dword [rbp + 60], 0>

3615:
old  < printArgument$356:>
new  < printFormat$5:>

3616:
old  <	; Parameter signedchar 37 138>
new  <	; Assign space 0>

3617:
old  <	mov byte [rbp + 138], 37>
new  <	mov dword [rbp + 64], 0>

3619:
old  < printArgument$357:>
new  < printFormat$6:>

3620:
old  <	; Call printChar 114 0>
new  <	; Assign zero 0>

3621:
old  <	mov qword [rbp + 114], printArgument$358>
new  <	mov dword [rbp + 68], 0>

3622:
old  <	mov [rbp + 122], rbp>
new  <>

3623:
old  <	add rbp, 114>
new  < printFormat$7:>

3624:
old  <	jmp printChar>
new  <	; Assign grid 0>

3625:
old  <>
new  <	mov dword [rbp + 72], 0>

3626:
old  < printArgument$358:>
new  <>

3627:
old  <	; PostCall 114>
new  < printFormat$8:>

3628:
old  <>
new  <	; Assign widthStar 0>

3629:
old  < printArgument$359:>
new  <	mov dword [rbp + 76], 0>

3630:
old  <	; Return arg_list>
new  <>

3631:
old  <	mov rbx, [rbp + 32]>
new  < printFormat$9:>

3632:
old  <	mov rax, [rbp]>
new  <	; Assign period 0>

3633:
old  <	mov rdi, [rbp + 16]>
new  <	mov dword [rbp + 80], 0>

3634:
old  <	mov rbp, [rbp + 8]>
new  <>

3635:
old  <	jmp rax>
new  < printFormat$10:>

3636:
old  <>
new  <	; Assign precisionStar 0>

3637:
old  < printArgument$360:>
new  <	mov dword [rbp + 84], 0>

3638:
old  <	; FunctionEnd printArgument>
new  <>

3639:
old  <>
new  < printFormat$11:>

3640:
old  <section .data>
new  <	; Assign shortInt 0>

3641:
old  <>
new  <	mov dword [rbp + 88], 0>

3642:
old  <int4$10#:>
new  <>

3643:
old  <	; Initializer SignedInt 10>
new  < printFormat$12:>

3644:
old  <	dd 10>
new  <	; Assign longInt 0>

3645:
old  <>
new  <	mov dword [rbp + 92], 0>

3646:
old  <section .text>
new  <>

3647:
old  <>
new  < printFormat$13:>

3648:
old  < printFormat:>
new  <	; Assign longDouble 0>

3649:
old  <	; Assign width 0>
new  <	mov dword [rbp + 96], 0>

3650:
old  <	mov dword [rbp + 44], 0>
new  <>

3651:
old  <>
new  < printFormat$14:>

3652:
old  < printFormat$1:>
new  <	; Assign g_outChars 0>

3653:
old  <	; Assign precision 0>
new  <	mov dword [g_outChars], 0>

3654:
old  <	mov dword [rbp + 48], 0>
new  <>

3655:
old  <>
new  < printFormat$15:>

3656:
old  < printFormat$2:>
new  <	; Assign index 0>

3657:
old  <	; Assign percent 0>
new  <	mov dword [rbp + 40], 0>

3658:
old  <	mov dword [rbp + 52], 0>
new  <>

3659:
old  <>
new  < printFormat$16:>

3660:
old  < printFormat$3:>
new  <	; IntegralToIntegral Â£temporary1823 index>

3661:
old  <	; Assign plus 0>
new  <	mov eax, [rbp + 40]>

3662:
old  <	mov dword [rbp + 56], 0>
new  <	mov rbx, 4294967295>

3663:
old  <>
new  <	and rax, rbx>

3664:
old  < printFormat$4:>
new  <>

3665:
old  <	; Assign minus 0>
new  < printFormat$17:>

3666:
old  <	mov dword [rbp + 60], 0>
new  <	; BinaryAdd Â£temporary1825 format Â£temporary1823>

3667:
old  <>
new  <	mov rsi, [rbp + 24]>

3668:
old  < printFormat$5:>
new  <	add rsi, rax>

3669:
old  <	; Assign space 0>
new  <>

3670:
old  <	mov dword [rbp + 64], 0>
new  < printFormat$18:>

3671:
old  <>
new  <	; Dereference Â£temporary1822 -> Â£temporary1825 Â£temporary1825 0>

3672:
old  < printFormat$6:>
new  <>

3673:
old  <	; Assign zero 0>
new  < printFormat$19:>

3674:
old  <	mov dword [rbp + 68], 0>
new  <	; Equal 294 Â£temporary1822 -> Â£temporary1825 0>

3675:
old  <>
new  <	cmp byte [rsi], 0>

3676:
old  < printFormat$7:>
new  <	je printFormat$294>

3677:
old  <	; Assign grid 0>
new  <>

3678:
old  <	mov dword [rbp + 72], 0>
new  < printFormat$20:>

3679:
old  <>
new  <	; IntegralToIntegral Â£temporary1829 index>

3680:
old  < printFormat$8:>
new  <	mov eax, [rbp + 40]>

3681:
old  <	; Assign widthStar 0>
new  <	mov rbx, 4294967295>

3682:
old  <	mov dword [rbp + 76], 0>
new  <	and rax, rbx>

3684:
old  < printFormat$9:>
new  < printFormat$21:>

3685:
old  <	; Assign period 0>
new  <	; BinaryAdd Â£temporary1831 format Â£temporary1829>

3686:
old  <	mov dword [rbp + 80], 0>
new  <	mov rsi, [rbp + 24]>

3687:
old  <>
new  <	add rsi, rax>

3688:
old  < printFormat$10:>
new  <>

3689:
old  <	; Assign precisionStar 0>
new  < printFormat$22:>

3690:
old  <	mov dword [rbp + 84], 0>
new  <	; Dereference Â£temporary1828 -> Â£temporary1831 Â£temporary1831 0>

3692:
old  < printFormat$11:>
new  < printFormat$23:>

3693:
old  <	; Assign shortInt 0>
new  <	; Assign c Â£temporary1828 -> Â£temporary1831>

3694:
old  <	mov dword [rbp + 88], 0>
new  <	mov al, [rsi]>

3695:
old  <>
new  <	mov [rbp + 100], al>

3696:
old  < printFormat$12:>
new  <>

3697:
old  <	; Assign longInt 0>
new  < printFormat$24:>

3698:
old  <	mov dword [rbp + 92], 0>
new  <	; Equal 272 percent 0>

3699:
old  <>
new  <	cmp dword [rbp + 52], 0>

3700:
old  < printFormat$13:>
new  <	je printFormat$272>

3701:
old  <	; Assign longDouble 0>
new  <>

3702:
old  <	mov dword [rbp + 96], 0>
new  < printFormat$25:>

3703:
old  <>
new  <	; Case 54 c 43>

3704:
old  < printFormat$14:>
new  <	mov al, [rbp + 100]>

3705:
old  <	; Assign g_outChars 0>
new  <	cmp al, 43>

3706:
old  <	mov dword [g_outChars], 0>
new  <	je printFormat$54>

3708:
old  < printFormat$15:>
new  < printFormat$26:>

3709:
old  <	; Assign index 0>
new  <	; Case 56 c 45>

3710:
old  <	mov dword [rbp + 40], 0>
new  <	cmp al, 45>

3711:
old  <>
new  <	je printFormat$56>

3712:
old  < printFormat$16:>
new  <>

3713:
old  <	; IntegralToIntegral Â£temporary1795 index>
new  < printFormat$27:>

3714:
old  <	mov eax, [rbp + 40]>
new  <	; Case 58 c 32>

3715:
old  <	mov rbx, 4294967295>
new  <	cmp al, 32>

3716:
old  <	and rax, rbx>
new  <	je printFormat$58>

3718:
old  < printFormat$17:>
new  < printFormat$28:>

3719:
old  <	; BinaryAdd Â£temporary1797 format Â£temporary1795>
new  <	; Case 60 c 48>

3720:
old  <	mov rsi, [rbp + 24]>
new  <	cmp al, 48>

3721:
old  <	add rsi, rax>
new  <	je printFormat$60>

3723:
old  < printFormat$18:>
new  < printFormat$29:>

3724:
old  <	; Dereference Â£temporary1794 -> Â£temporary1797 Â£temporary1797 0>
new  <	; Case 62 c 35>

3725:
old  <>
new  <	cmp al, 35>

3726:
old  < printFormat$19:>
new  <	je printFormat$62>

3727:
old  <	; Equal 290 Â£temporary1794 -> Â£temporary1797 0>
new  <>

3728:
old  <	cmp byte [rsi], 0>
new  < printFormat$30:>

3729:
old  <	je printFormat$290>
new  <	; Case 64 c 46>

3730:
old  <>
new  <	cmp al, 46>

3731:
old  < printFormat$20:>
new  <	je printFormat$64>

3732:
old  <	; IntegralToIntegral Â£temporary1801 index>
new  <>

3733:
old  <	mov eax, [rbp + 40]>
new  < printFormat$31:>

3734:
old  <	mov rbx, 4294967295>
new  <	; Case 66 c 42>

3735:
old  <	and rax, rbx>
new  <	cmp al, 42>

3736:
old  <>
new  <	je printFormat$66>

3737:
old  < printFormat$21:>
new  <>

3738:
old  <	; BinaryAdd Â£temporary1803 format Â£temporary1801>
new  < printFormat$32:>

3739:
old  <	mov rsi, [rbp + 24]>
new  <	; Case 71 c 104>

3740:
old  <	add rsi, rax>
new  <	cmp al, 104>

3741:
old  <>
new  <	je printFormat$71>

3742:
old  < printFormat$22:>
new  <>

3743:
old  <	; Dereference Â£temporary1800 -> Â£temporary1803 Â£temporary1803 0>
new  < printFormat$33:>

3744:
old  <>
new  <	; Case 73 c 108>

3745:
old  < printFormat$23:>
new  <	cmp al, 108>

3746:
old  <	; Assign c Â£temporary1800 -> Â£temporary1803>
new  <	je printFormat$73>

3747:
old  <	mov al, [rsi]>
new  <>

3748:
old  <	mov [rbp + 100], al>
new  < printFormat$34:>

3749:
old  <>
new  <	; Case 75 c 76>

3750:
old  < printFormat$24:>
new  <	cmp al, 76>

3751:
old  <	; Equal 268 percent 0>
new  <	je printFormat$75>

3752:
old  <	cmp dword [rbp + 52], 0>
new  <>

3753:
old  <	je printFormat$268>
new  < printFormat$35:>

3754:
old  <>
new  <	; Case 77 c 37>

3755:
old  < printFormat$25:>
new  <	cmp al, 37>

3756:
old  <	; Case 54 c 43>
new  <	je printFormat$77>

3757:
old  <	mov al, [rbp + 100]>
new  <>

3758:
old  <	cmp al, 43>
new  < printFormat$36:>

3759:
old  <	je printFormat$54>
new  <	; Case 77 c 110>

3760:
old  <>
new  <	cmp al, 110>

3761:
old  < printFormat$26:>
new  <	je printFormat$77>

3762:
old  <	; Case 56 c 45>
new  <>

3763:
old  <	cmp al, 45>
new  < printFormat$37:>

3764:
old  <	je printFormat$56>
new  <	; Case 77 c 112>

3765:
old  <>
new  <	cmp al, 112>

3766:
old  < printFormat$27:>
new  <	je printFormat$77>

3767:
old  <	; Case 58 c 32>
new  <>

3768:
old  <	cmp al, 32>
new  < printFormat$38:>

3769:
old  <	je printFormat$58>
new  <	; Case 77 c 71>

3770:
old  <>
new  <	cmp al, 71>

3771:
old  < printFormat$28:>
new  <	je printFormat$77>

3772:
old  <	; Case 60 c 48>
new  <>

3773:
old  <	cmp al, 48>
new  < printFormat$39:>

3774:
old  <	je printFormat$60>
new  <	; Case 77 c 103>

3775:
old  <>
new  <	cmp al, 103>

3776:
old  < printFormat$29:>
new  <	je printFormat$77>

3777:
old  <	; Case 62 c 35>
new  <>

3778:
old  <	cmp al, 35>
new  < printFormat$40:>

3779:
old  <	je printFormat$62>
new  <	; Case 77 c 69>

3780:
old  <>
new  <	cmp al, 69>

3781:
old  < printFormat$30:>
new  <	je printFormat$77>

3782:
old  <	; Case 64 c 46>
new  <>

3783:
old  <	cmp al, 46>
new  < printFormat$41:>

3784:
old  <	je printFormat$64>
new  <	; Case 77 c 101>

3785:
old  <>
new  <	cmp al, 101>

3786:
old  < printFormat$31:>
new  <	je printFormat$77>

3787:
old  <	; Case 66 c 42>
new  <>

3788:
old  <	cmp al, 42>
new  < printFormat$42:>

3789:
old  <	je printFormat$66>
new  <	; Case 77 c 102>

3790:
old  <>
new  <	cmp al, 102>

3791:
old  < printFormat$32:>
new  <	je printFormat$77>

3792:
old  <	; Case 71 c 104>
new  <>

3793:
old  <	cmp al, 104>
new  < printFormat$43:>

3794:
old  <	je printFormat$71>
new  <	; Case 77 c 115>

3795:
old  <>
new  <	cmp al, 115>

3796:
old  < printFormat$33:>
new  <	je printFormat$77>

3797:
old  <	; Case 73 c 108>
new  <>

3798:
old  <	cmp al, 108>
new  < printFormat$44:>

3799:
old  <	je printFormat$73>
new  <	; Case 77 c 99>

3800:
old  <>
new  <	cmp al, 99>

3801:
old  < printFormat$34:>
new  <	je printFormat$77>

3802:
old  <	; Case 75 c 76>
new  <>

3803:
old  <	cmp al, 76>
new  < printFormat$45:>

3804:
old  <	je printFormat$75>
new  <	; Case 77 c 88>

3805:
old  <>
new  <	cmp al, 88>

3806:
old  < printFormat$35:>
new  <	je printFormat$77>

3807:
old  <	; Case 77 c 37>
new  <>

3808:
old  <	cmp al, 37>
new  < printFormat$46:>

3809:
old  <	je printFormat$77>
new  <	; Case 77 c 120>

3810:
old  <>
new  <	cmp al, 120>

3811:
old  < printFormat$36:>
new  <	je printFormat$77>

3812:
old  <	; Case 77 c 110>
new  <>

3813:
old  <	cmp al, 110>
new  < printFormat$47:>

3814:
old  <	je printFormat$77>
new  <	; Case 77 c 111>

3815:
old  <>
new  <	cmp al, 111>

3816:
old  < printFormat$37:>
new  <	je printFormat$77>

3817:
old  <	; Case 77 c 112>
new  <>

3818:
old  <	cmp al, 112>
new  < printFormat$48:>

3819:
old  <	je printFormat$77>
new  <	; Case 77 c 98>

3820:
old  <>
new  <	cmp al, 98>

3821:
old  < printFormat$38:>
new  <	je printFormat$77>

3822:
old  <	; Case 77 c 71>
new  <>

3823:
old  <	cmp al, 71>
new  < printFormat$49:>

3824:
old  <	je printFormat$77>
new  <	; Case 77 c 117>

3825:
old  <>
new  <	cmp al, 117>

3826:
old  < printFormat$39:>
new  <	je printFormat$77>

3827:
old  <	; Case 77 c 103>
new  <>

3828:
old  <	cmp al, 103>
new  < printFormat$50:>

3829:
old  <	je printFormat$77>
new  <	; Case 77 c 100>

3830:
old  <>
new  <	cmp al, 100>

3831:
old  < printFormat$40:>
new  <	je printFormat$77>

3832:
old  <	; Case 77 c 69>
new  <>

3833:
old  <	cmp al, 69>
new  < printFormat$51:>

3834:
old  <	je printFormat$77>
new  <	; Case 77 c 105>

3835:
old  <>
new  <	cmp al, 105>

3836:
old  < printFormat$41:>
new  <	je printFormat$77>

3837:
old  <	; Case 77 c 101>
new  <>

3838:
old  <	cmp al, 101>
new  < printFormat$52:>

3839:
old  <	je printFormat$77>
new  <	; CaseEnd c>

3841:
old  < printFormat$42:>
new  < printFormat$53:>

3842:
old  <	; Case 77 c 102>
new  <	; Goto 248>

3843:
old  <	cmp al, 102>
new  <	jmp printFormat$248>

3844:
old  <	je printFormat$77>
new  <>

3845:
old  <>
new  < printFormat$54:>

3846:
old  < printFormat$43:>
new  <	; Assign plus 1>

3847:
old  <	; Case 77 c 115>
new  <	mov dword [rbp + 56], 1>

3848:
old  <	cmp al, 115>
new  <>

3849:
old  <	je printFormat$77>
new  < printFormat$55:>

3850:
old  <>
new  <	; Goto 292>

3851:
old  < printFormat$44:>
new  <	jmp printFormat$292>

3852:
old  <	; Case 77 c 99>
new  <>

3853:
old  <	cmp al, 99>
new  < printFormat$56:>

3854:
old  <	je printFormat$77>
new  <	; Assign minus 1>

3855:
old  <>
new  <	mov dword [rbp + 60], 1>

3856:
old  < printFormat$45:>
new  <>

3857:
old  <	; Case 77 c 88>
new  < printFormat$57:>

3858:
old  <	cmp al, 88>
new  <	; Goto 292>

3859:
old  <	je printFormat$77>
new  <	jmp printFormat$292>

3861:
old  < printFormat$46:>
new  < printFormat$58:>

3862:
old  <	; Case 77 c 120>
new  <	; Assign space 1>

3863:
old  <	cmp al, 120>
new  <	mov dword [rbp + 64], 1>

3864:
old  <	je printFormat$77>
new  <>

3865:
old  <>
new  < printFormat$59:>

3866:
old  < printFormat$47:>
new  <	; Goto 292>

3867:
old  <	; Case 77 c 111>
new  <	jmp printFormat$292>

3868:
old  <	cmp al, 111>
new  <>

3869:
old  <	je printFormat$77>
new  < printFormat$60:>

3870:
old  <>
new  <	; Assign zero 1>

3871:
old  < printFormat$48:>
new  <	mov dword [rbp + 68], 1>

3872:
old  <	; Case 77 c 98>
new  <>

3873:
old  <	cmp al, 98>
new  < printFormat$61:>

3874:
old  <	je printFormat$77>
new  <	; Goto 292>

3875:
old  <>
new  <	jmp printFormat$292>

3876:
old  < printFormat$49:>
new  <>

3877:
old  <	; Case 77 c 117>
new  < printFormat$62:>

3878:
old  <	cmp al, 117>
new  <	; Assign grid 1>

3879:
old  <	je printFormat$77>
new  <	mov dword [rbp + 72], 1>

3881:
old  < printFormat$50:>
new  < printFormat$63:>

3882:
old  <	; Case 77 c 100>
new  <	; Goto 292>

3883:
old  <	cmp al, 100>
new  <	jmp printFormat$292>

3884:
old  <	je printFormat$77>
new  <>

3885:
old  <>
new  < printFormat$64:>

3886:
old  < printFormat$51:>
new  <	; Assign period 1>

3887:
old  <	; Case 77 c 105>
new  <	mov dword [rbp + 80], 1>

3888:
old  <	cmp al, 105>
new  <>

3889:
old  <	je printFormat$77>
new  < printFormat$65:>

3890:
old  <>
new  <	; Goto 292>

3891:
old  < printFormat$52:>
new  <	jmp printFormat$292>

3892:
old  <	; CaseEnd c>
new  <>

3893:
old  <>
new  < printFormat$66:>

3894:
old  < printFormat$53:>
new  <	; NotEqual 69 period 0>

3895:
old  <	; Goto 244>
new  <	cmp dword [rbp + 80], 0>

3896:
old  <	jmp printFormat$244>
new  <	jne printFormat$69>

3898:
old  < printFormat$54:>
new  < printFormat$67:>

3899:
old  <	; Assign plus 1>
new  <	; Assign width -1>

3900:
old  <	mov dword [rbp + 56], 1>
new  <	mov dword [rbp + 44], -1>

3902:
old  < printFormat$55:>
new  < printFormat$68:>

3903:
old  <	; Goto 288>
new  <	; Goto 292>

3904:
old  <	jmp printFormat$288>
new  <	jmp printFormat$292>

3906:
old  < printFormat$56:>
new  < printFormat$69:>

3907:
old  <	; Assign minus 1>
new  <	; Assign precision -1>

3908:
old  <	mov dword [rbp + 60], 1>
new  <	mov dword [rbp + 48], -1>

3910:
old  < printFormat$57:>
new  < printFormat$70:>

3911:
old  <	; Goto 288>
new  <	; Goto 292>

3912:
old  <	jmp printFormat$288>
new  <	jmp printFormat$292>

3914:
old  < printFormat$58:>
new  < printFormat$71:>

3915:
old  <	; Assign space 1>
new  <	; Assign shortInt 1>

3916:
old  <	mov dword [rbp + 64], 1>
new  <	mov dword [rbp + 88], 1>

3918:
old  < printFormat$59:>
new  < printFormat$72:>

3919:
old  <	; Goto 288>
new  <	; Goto 292>

3920:
old  <	jmp printFormat$288>
new  <	jmp printFormat$292>

3922:
old  < printFormat$60:>
new  < printFormat$73:>

3923:
old  <	; Assign zero 1>
new  <	; Assign longInt 1>

3924:
old  <	mov dword [rbp + 68], 1>
new  <	mov dword [rbp + 92], 1>

3926:
old  < printFormat$61:>
new  < printFormat$74:>

3927:
old  <	; Goto 288>
new  <	; Goto 292>

3928:
old  <	jmp printFormat$288>
new  <	jmp printFormat$292>

3930:
old  < printFormat$62:>
new  < printFormat$75:>

3931:
old  <	; Assign grid 1>
new  <	; Assign longDouble 1>

3932:
old  <	mov dword [rbp + 72], 1>
new  <	mov dword [rbp + 96], 1>

3934:
old  < printFormat$63:>
new  < printFormat$76:>

3935:
old  <	; Goto 288>
new  <	; Goto 292>

3936:
old  <	jmp printFormat$288>
new  <	jmp printFormat$292>

3938:
old  < printFormat$64:>
new  < printFormat$77:>

3939:
old  <	; Assign period 1>
new  <	; Equal 109 minus 0>

3940:
old  <	mov dword [rbp + 80], 1>
new  <	cmp dword [rbp + 60], 0>

3941:
old  <>
new  <	je printFormat$109>

3942:
old  < printFormat$65:>
new  <>

3943:
old  <	; Goto 288>
new  < printFormat$78:>

3944:
old  <	jmp printFormat$288>
new  <	; Assign startChars g_outChars>

3945:
old  <>
new  <	mov eax, [g_outChars]>

3946:
old  < printFormat$66:>
new  <	mov [rbp + 101], eax>

3947:
old  <	; NotEqual 69 period 0>
new  <>

3948:
old  <	cmp dword [rbp + 80], 0>
new  < printFormat$79:>

3949:
old  <	jne printFormat$69>
new  <	; PreCall 105 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3951:
old  < printFormat$67:>
new  < printFormat$80:>

3952:
old  <	; Assign width -1>
new  <	; IntegralToIntegral Â£temporary1835 index>

3953:
old  <	mov dword [rbp + 44], -1>
new  <	mov eax, [rbp + 40]>

3954:
old  <>
new  <	mov rbx, 4294967295>

3955:
old  < printFormat$68:>
new  <	and rax, rbx>

3956:
old  <	; Goto 288>
new  <>

3957:
old  <	jmp printFormat$288>
new  < printFormat$81:>

3958:
old  <>
new  <	; BinaryAdd Â£temporary1837 format Â£temporary1835>

3959:
old  < printFormat$69:>
new  <	mov rsi, [rbp + 24]>

3960:
old  <	; Assign precision -1>
new  <	add rsi, rax>

3961:
old  <	mov dword [rbp + 48], -1>
new  <>

3962:
old  <>
new  < printFormat$82:>

3963:
old  < printFormat$70:>
new  <	; Dereference Â£temporary1834 -> Â£temporary1837 Â£temporary1837 0>

3964:
old  <	; Goto 288>
new  <>

3965:
old  <	jmp printFormat$288>
new  < printFormat$83:>

3966:
old  <>
new  <	; Address Â£temporary1838 Â£temporary1834 -> Â£temporary1837>

3967:
old  < printFormat$71:>
new  <>

3968:
old  <	; Assign shortInt 1>
new  < printFormat$84:>

3969:
old  <	mov dword [rbp + 88], 1>
new  <	; Parameter pointer Â£temporary1838 129>

3970:
old  <>
new  <	mov [rbp + 129], rsi>

3971:
old  < printFormat$72:>
new  <>

3972:
old  <	; Goto 288>
new  < printFormat$85:>

3973:
old  <	jmp printFormat$288>
new  <	; Parameter pointer arg_list 137>

3974:
old  <>
new  <	mov rax, [rbp + 32]>

3975:
old  < printFormat$73:>
new  <	mov [rbp + 137], rax>

3976:
old  <	; Assign longInt 1>
new  <>

3977:
old  <	mov dword [rbp + 92], 1>
new  < printFormat$86:>

3978:
old  <>
new  <	; Parameter signedint plus 145>

3979:
old  < printFormat$74:>
new  <	mov eax, [rbp + 56]>

3980:
old  <	; Goto 288>
new  <	mov [rbp + 145], eax>

3981:
old  <	jmp printFormat$288>
new  <>

3982:
old  <>
new  < printFormat$87:>

3983:
old  < printFormat$75:>
new  <	; Parameter signedint space 149>

3984:
old  <	; Assign longDouble 1>
new  <	mov eax, [rbp + 64]>

3985:
old  <	mov dword [rbp + 96], 1>
new  <	mov [rbp + 149], eax>

3987:
old  < printFormat$76:>
new  < printFormat$88:>

3988:
old  <	; Goto 288>
new  <	; Parameter signedint grid 153>

3989:
old  <	jmp printFormat$288>
new  <	mov eax, [rbp + 72]>

3990:
old  <>
new  <	mov [rbp + 153], eax>

3991:
old  < printFormat$77:>
new  <>

3992:
old  <	; Equal 109 minus 0>
new  < printFormat$89:>

3993:
old  <	cmp dword [rbp + 60], 0>
new  <	; Address Â£temporary1839 width>

3994:
old  <	je printFormat$109>
new  <	mov rsi, rbp>

3995:
old  <>
new  <	add rsi, 44>

3996:
old  < printFormat$78:>
new  <>

3997:
old  <	; Assign startChars g_outChars>
new  < printFormat$90:>

3998:
old  <	mov eax, [g_outChars]>
new  <	; Parameter pointer Â£temporary1839 157>

3999:
old  <	mov [rbp + 101], eax>
new  <	mov [rbp + 157], rsi>

4001:
old  < printFormat$79:>
new  < printFormat$91:>

4002:
old  <	; PreCall 105 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter signedint precision 165>

4003:
old  <>
new  <	mov eax, [rbp + 48]>

4004:
old  < printFormat$80:>
new  <	mov [rbp + 165], eax>

4005:
old  <	; IntegralToIntegral Â£temporary1807 index>
new  <>

4006:
old  <	mov eax, [rbp + 40]>
new  < printFormat$92:>

4007:
old  <	mov rbx, 4294967295>
new  <	; Parameter signedint shortInt 169>

4008:
old  <	and rax, rbx>
new  <	mov eax, [rbp + 88]>

4009:
old  <>
new  <	mov [rbp + 169], eax>

4010:
old  < printFormat$81:>
new  <>

4011:
old  <	; BinaryAdd Â£temporary1809 format Â£temporary1807>
new  < printFormat$93:>

4012:
old  <	mov rsi, [rbp + 24]>
new  <	; Parameter signedint longInt 173>

4013:
old  <	add rsi, rax>
new  <	mov eax, [rbp + 92]>

4014:
old  <>
new  <	mov [rbp + 173], eax>

4015:
old  < printFormat$82:>
new  <>

4016:
old  <	; Dereference Â£temporary1806 -> Â£temporary1809 Â£temporary1809 0>
new  < printFormat$94:>

4017:
old  <>
new  <	; Parameter signedint longDouble 177>

4018:
old  < printFormat$83:>
new  <	mov eax, [rbp + 96]>

4019:
old  <	; Address Â£temporary1810 Â£temporary1806 -> Â£temporary1809>
new  <	mov [rbp + 177], eax>

4021:
old  < printFormat$84:>
new  < printFormat$95:>

4022:
old  <	; Parameter pointer Â£temporary1810 129>
new  <	; Parameter signedint 1 181>

4023:
old  <	mov [rbp + 129], rsi>
new  <	mov dword [rbp + 181], 1>

4025:
old  < printFormat$85:>
new  < printFormat$96:>

4026:
old  <	; Parameter pointer arg_list 137>
new  <	; Parameter pointer 0 185>

4027:
old  <	mov rax, [rbp + 32]>
new  <	mov qword [rbp + 185], 0>

4028:
old  <	mov [rbp + 137], rax>
new  <>

4029:
old  <>
new  < printFormat$97:>

4030:
old  < printFormat$86:>
new  <	; Call printArgument 105 0>

4031:
old  <	; Parameter signedint plus 145>
new  <	mov qword [rbp + 105], printFormat$98>

4032:
old  <	mov eax, [rbp + 56]>
new  <	mov [rbp + 113], rbp>

4033:
old  <	mov [rbp + 145], eax>
new  <	add rbp, 105>

4034:
old  <>
new  <	jmp printArgument>

4035:
old  < printFormat$87:>
new  <>

4036:
old  <	; Parameter signedint space 149>
new  < printFormat$98:>

4037:
old  <	mov eax, [rbp + 64]>
new  <	; PostCall 105>

4038:
old  <	mov [rbp + 149], eax>
new  <>

4039:
old  <>
new  < printFormat$99:>

4040:
old  < printFormat$88:>
new  <	; GetReturnValue Â£temporary1840>

4041:
old  <	; Parameter signedint grid 153>
new  <>

4042:
old  <	mov eax, [rbp + 72]>
new  < printFormat$100:>

4043:
old  <	mov [rbp + 153], eax>
new  <	; Assign arg_list Â£temporary1840>

4044:
old  <>
new  <	mov [rbp + 32], rbx>

4045:
old  < printFormat$89:>
new  <>

4046:
old  <	; Address Â£temporary1811 width>
new  < printFormat$101:>

4047:
old  <	mov rsi, rbp>
new  <	; BinarySubtract Â£temporary1842 g_outChars startChars>

4048:
old  <	add rsi, 44>
new  <	mov eax, [g_outChars]>

4049:
old  <>
new  <	sub eax, [rbp + 101]>

4050:
old  < printFormat$90:>
new  <>

4051:
old  <	; Parameter pointer Â£temporary1811 157>
new  < printFormat$102:>

4052:
old  <	mov [rbp + 157], rsi>
new  <	; BinaryAdd field field 1>

4053:
old  <>
new  <	inc dword [rbp + 105]>

4054:
old  < printFormat$91:>
new  <>

4055:
old  <	; Parameter signedint precision 165>
new  < printFormat$103:>

4056:
old  <	mov eax, [rbp + 48]>
new  <	; SignedGreaterThanEqual 246 Â£temporary1842 width>

4057:
old  <	mov [rbp + 165], eax>
new  <	cmp eax, [rbp + 44]>

4058:
old  <>
new  <	jge printFormat$246>

4059:
old  < printFormat$92:>
new  <>

4060:
old  <	; Parameter signedint shortInt 169>
new  < printFormat$104:>

4061:
old  <	mov eax, [rbp + 88]>
new  <	; PreCall 109 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

4062:
old  <	mov [rbp + 169], eax>
new  <>

4063:
old  <>
new  < printFormat$105:>

4064:
old  < printFormat$93:>
new  <	; Parameter signedchar 32 133>

4065:
old  <	; Parameter signedint longInt 173>
new  <	mov byte [rbp + 133], 32>

4066:
old  <	mov eax, [rbp + 92]>
new  <>

4067:
old  <	mov [rbp + 173], eax>
new  < printFormat$106:>

4068:
old  <>
new  <	; Call printChar 109 0>

4069:
old  < printFormat$94:>
new  <	mov qword [rbp + 109], printFormat$107>

4070:
old  <	; Parameter signedint longDouble 177>
new  <	mov [rbp + 117], rbp>

4071:
old  <	mov eax, [rbp + 96]>
new  <	add rbp, 109>

4072:
old  <	mov [rbp + 177], eax>
new  <	jmp printChar>

4074:
old  < printFormat$95:>
new  < printFormat$107:>

4075:
old  <	; Parameter signedint 1 181>
new  <	; PostCall 109>

4076:
old  <	mov dword [rbp + 181], 1>
new  <>

4077:
old  <>
new  < printFormat$108:>

4078:
old  < printFormat$96:>
new  <	; Goto 102>

4079:
old  <	; Parameter pointer 0 185>
new  <	jmp printFormat$102>

4080:
old  <	mov qword [rbp + 185], 0>
new  <>

4081:
old  <>
new  < printFormat$109:>

4082:
old  < printFormat$97:>
new  <	; Equal 191 zero 0>

4083:
old  <	; Call printArgument 105 0>
new  <	cmp dword [rbp + 68], 0>

4084:
old  <	mov qword [rbp + 105], printFormat$98>
new  <	je printFormat$191>

4085:
old  <	mov [rbp + 113], rbp>
new  <>

4086:
old  <	add rbp, 105>
new  < printFormat$110:>

4087:
old  <	jmp printArgument>
new  <	; Assign startChars g_outChars>

4088:
old  <>
new  <	mov eax, [g_outChars]>

4089:
old  < printFormat$98:>
new  <	mov [rbp + 101], eax>

4090:
old  <	; PostCall 105>
new  <>

4091:
old  <>
new  < printFormat$111:>

4092:
old  < printFormat$99:>
new  <	; Assign oldOutStatus g_outStatus>

4093:
old  <	; GetReturnValue Â£temporary1812>
new  <	mov eax, [g_outStatus]>

4094:
old  <>
new  <	mov [rbp + 105], eax>

4095:
old  < printFormat$100:>
new  <>

4096:
old  <	; Assign arg_list Â£temporary1812>
new  < printFormat$112:>

4097:
old  <	mov [rbp + 32], rbx>
new  <	; Assign negative 0>

4098:
old  <>
new  <	mov dword [rbp + 109], 0>

4099:
old  < printFormat$101:>
new  <>

4100:
old  <	; BinarySubtract Â£temporary1814 g_outChars startChars>
new  < printFormat$113:>

4101:
old  <	mov eax, [g_outChars]>
new  <	; Assign g_outStatus 2>

4102:
old  <	sub eax, [rbp + 101]>
new  <	mov dword [g_outStatus], 2>

4104:
old  < printFormat$102:>
new  < printFormat$114:>

4105:
old  <	; BinaryAdd field field 1>
new  <	; PreCall 113 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

4106:
old  <	inc dword [rbp + 105]>
new  <>

4107:
old  <>
new  < printFormat$115:>

4108:
old  < printFormat$103:>
new  <	; IntegralToIntegral Â£temporary1846 index>

4109:
old  <	; SignedGreaterThanEqual 242 Â£temporary1814 width>
new  <	mov eax, [rbp + 40]>

4110:
old  <	cmp eax, [rbp + 44]>
new  <	mov rbx, 4294967295>

4111:
old  <	jge printFormat$242>
new  <	and rax, rbx>

4113:
old  < printFormat$104:>
new  < printFormat$116:>

4114:
old  <	; PreCall 109 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; BinaryAdd Â£temporary1848 format Â£temporary1846>

4115:
old  <>
new  <	mov rsi, [rbp + 24]>

4116:
old  < printFormat$105:>
new  <	add rsi, rax>

4117:
old  <	; Parameter signedchar 32 133>
new  <>

4118:
old  <	mov byte [rbp + 133], 32>
new  < printFormat$117:>

4119:
old  <>
new  <	; Dereference Â£temporary1845 -> Â£temporary1848 Â£temporary1848 0>

4120:
old  < printFormat$106:>
new  <>

4121:
old  <	; Call printChar 109 0>
new  < printFormat$118:>

4122:
old  <	mov qword [rbp + 109], printFormat$107>
new  <	; Address Â£temporary1849 Â£temporary1845 -> Â£temporary1848>

4123:
old  <	mov [rbp + 117], rbp>
new  <>

4124:
old  <	add rbp, 109>
new  < printFormat$119:>

4125:
old  <	jmp printChar>
new  <	; Parameter pointer Â£temporary1849 137>

4126:
old  <>
new  <	mov [rbp + 137], rsi>

4127:
old  < printFormat$107:>
new  <>

4128:
old  <	; PostCall 109>
new  < printFormat$120:>

4129:
old  <>
new  <	; Parameter pointer arg_list 145>

4130:
old  < printFormat$108:>
new  <	mov rax, [rbp + 32]>

4131:
old  <	; Goto 102>
new  <	mov [rbp + 145], rax>

4132:
old  <	jmp printFormat$102>
new  <>

4133:
old  <>
new  < printFormat$121:>

4134:
old  < printFormat$109:>
new  <	; Parameter signedint 0 153>

4135:
old  <	; Equal 187 zero 0>
new  <	mov dword [rbp + 153], 0>

4136:
old  <	cmp dword [rbp + 68], 0>
new  <>

4137:
old  <	je printFormat$187>
new  < printFormat$122:>

4138:
old  <>
new  <	; Parameter signedint 0 157>

4139:
old  < printFormat$110:>
new  <	mov dword [rbp + 157], 0>

4140:
old  <	; Assign startChars g_outChars>
new  <>

4141:
old  <	mov eax, [g_outChars]>
new  < printFormat$123:>

4142:
old  <	mov [rbp + 101], eax>
new  <	; Parameter signedint grid 161>

4143:
old  <>
new  <	mov eax, [rbp + 72]>

4144:
old  < printFormat$111:>
new  <	mov [rbp + 161], eax>

4145:
old  <	; Assign oldOutStatus g_outStatus>
new  <>

4146:
old  <	mov eax, [g_outStatus]>
new  < printFormat$124:>

4147:
old  <	mov [rbp + 105], eax>
new  <	; Address Â£temporary1850 width>

4148:
old  <>
new  <	mov rsi, rbp>

4149:
old  < printFormat$112:>
new  <	add rsi, 44>

4150:
old  <	; Assign negative 0>
new  <>

4151:
old  <	mov dword [rbp + 109], 0>
new  < printFormat$125:>

4152:
old  <>
new  <	; Parameter pointer Â£temporary1850 165>

4153:
old  < printFormat$113:>
new  <	mov [rbp + 165], rsi>

4154:
old  <	; Assign g_outStatus 2>
new  <>

4155:
old  <	mov dword [g_outStatus], 2>
new  < printFormat$126:>

4156:
old  <>
new  <	; Parameter signedint precision 173>

4157:
old  < printFormat$114:>
new  <	mov eax, [rbp + 48]>

4158:
old  <	; PreCall 113 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov [rbp + 173], eax>

4160:
old  < printFormat$115:>
new  < printFormat$127:>

4161:
old  <	; IntegralToIntegral Â£temporary1818 index>
new  <	; Parameter signedint shortInt 177>

4162:
old  <	mov eax, [rbp + 40]>
new  <	mov eax, [rbp + 88]>

4163:
old  <	mov rbx, 4294967295>
new  <	mov [rbp + 177], eax>

4164:
old  <	and rax, rbx>
new  <>

4165:
old  <>
new  < printFormat$128:>

4166:
old  < printFormat$116:>
new  <	; Parameter signedint longInt 181>

4167:
old  <	; BinaryAdd Â£temporary1820 format Â£temporary1818>
new  <	mov eax, [rbp + 92]>

4168:
old  <	mov rsi, [rbp + 24]>
new  <	mov [rbp + 181], eax>

4169:
old  <	add rsi, rax>
new  <>

4170:
old  <>
new  < printFormat$129:>

4171:
old  < printFormat$117:>
new  <	; Parameter signedint longDouble 185>

4172:
old  <	; Dereference Â£temporary1817 -> Â£temporary1820 Â£temporary1820 0>
new  <	mov eax, [rbp + 96]>

4173:
old  <>
new  <	mov [rbp + 185], eax>

4174:
old  < printFormat$118:>
new  <>

4175:
old  <	; Address Â£temporary1821 Â£temporary1817 -> Â£temporary1820>
new  < printFormat$130:>

4176:
old  <>
new  <	; Parameter signedint 0 189>

4177:
old  < printFormat$119:>
new  <	mov dword [rbp + 189], 0>

4178:
old  <	; Parameter pointer Â£temporary1821 137>
new  <>

4179:
old  <	mov [rbp + 137], rsi>
new  < printFormat$131:>

4180:
old  <>
new  <	; Address Â£temporary1851 negative>

4181:
old  < printFormat$120:>
new  <	mov rsi, rbp>

4182:
old  <	; Parameter pointer arg_list 145>
new  <	add rsi, 109>

4183:
old  <	mov rax, [rbp + 32]>
new  <>

4184:
old  <	mov [rbp + 145], rax>
new  < printFormat$132:>

4185:
old  <>
new  <	; Parameter pointer Â£temporary1851 193>

4186:
old  < printFormat$121:>
new  <	mov [rbp + 193], rsi>

4187:
old  <	; Parameter signedint 0 153>
new  <>

4188:
old  <	mov dword [rbp + 153], 0>
new  < printFormat$133:>

4189:
old  <>
new  <	; Call printArgument 113 0>

4190:
old  < printFormat$122:>
new  <	mov qword [rbp + 113], printFormat$134>

4191:
old  <	; Parameter signedint 0 157>
new  <	mov [rbp + 121], rbp>

4192:
old  <	mov dword [rbp + 157], 0>
new  <	add rbp, 113>

4193:
old  <>
new  <	jmp printArgument>

4194:
old  < printFormat$123:>
new  <>

4195:
old  <	; Parameter signedint grid 161>
new  < printFormat$134:>

4196:
old  <	mov eax, [rbp + 72]>
new  <	; PostCall 113>

4197:
old  <	mov [rbp + 161], eax>
new  <>

4198:
old  <>
new  < printFormat$135:>

4199:
old  < printFormat$124:>
new  <	; Assign g_outStatus oldOutStatus>

4200:
old  <	; Address Â£temporary1822 width>
new  <	mov eax, [rbp + 105]>

4201:
old  <	mov rsi, rbp>
new  <	mov [g_outStatus], eax>

4202:
old  <	add rsi, 44>
new  <>

4203:
old  <>
new  < printFormat$136:>

4204:
old  < printFormat$125:>
new  <	; BinarySubtract field g_outChars startChars>

4205:
old  <	; Parameter pointer Â£temporary1822 165>
new  <	mov eax, [g_outChars]>

4206:
old  <	mov [rbp + 165], rsi>
new  <	sub eax, [rbp + 101]>

4207:
old  <>
new  <	mov [rbp + 113], eax>

4208:
old  < printFormat$126:>
new  <>

4209:
old  <	; Parameter signedint precision 173>
new  < printFormat$137:>

4210:
old  <	mov eax, [rbp + 48]>
new  <	; Assign g_outChars startChars>

4211:
old  <	mov [rbp + 173], eax>
new  <	mov eax, [rbp + 101]>

4212:
old  <>
new  <	mov [g_outChars], eax>

4213:
old  < printFormat$127:>
new  <>

4214:
old  <	; Parameter signedint shortInt 177>
new  < printFormat$138:>

4215:
old  <	mov eax, [rbp + 88]>
new  <	; Equal 149 negative 0>

4216:
old  <	mov [rbp + 177], eax>
new  <	cmp dword [rbp + 109], 0>

4217:
old  <>
new  <	je printFormat$149>

4218:
old  < printFormat$128:>
new  <>

4219:
old  <	; Parameter signedint longInt 181>
new  < printFormat$139:>

4220:
old  <	mov eax, [rbp + 92]>
new  <	; PreCall 117 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

4221:
old  <	mov [rbp + 181], eax>
new  <>

4222:
old  <>
new  < printFormat$140:>

4223:
old  < printFormat$129:>
new  <	; Parameter signedchar 88 141>

4224:
old  <	; Parameter signedint longDouble 185>
new  <	mov byte [rbp + 141], 88>

4225:
old  <	mov eax, [rbp + 96]>
new  <>

4226:
old  <	mov [rbp + 185], eax>
new  < printFormat$141:>

4227:
old  <>
new  <	; Call printChar 117 0>

4228:
old  < printFormat$130:>
new  <	mov qword [rbp + 117], printFormat$142>

4229:
old  <	; Parameter signedint 0 189>
new  <	mov [rbp + 125], rbp>

4230:
old  <	mov dword [rbp + 189], 0>
new  <	add rbp, 117>

4231:
old  <>
new  <	jmp printChar>

4232:
old  < printFormat$131:>
new  <>

4233:
old  <	; Address Â£temporary1823 negative>
new  < printFormat$142:>

4234:
old  <	mov rsi, rbp>
new  <	; PostCall 117>

4235:
old  <	add rsi, 109>
new  <>

4236:
old  <>
new  < printFormat$143:>

4237:
old  < printFormat$132:>
new  <	; PreCall 117 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

4238:
old  <	; Parameter pointer Â£temporary1823 193>
new  <>

4239:
old  <	mov [rbp + 193], rsi>
new  < printFormat$144:>

4240:
old  <>
new  <	; Parameter signedchar 45 141>

4241:
old  < printFormat$133:>
new  <	mov byte [rbp + 141], 45>

4242:
old  <	; Call printArgument 113 0>
new  <>

4243:
old  <	mov qword [rbp + 113], printFormat$134>
new  < printFormat$145:>

4244:
old  <	mov [rbp + 121], rbp>
new  <	; Call printChar 117 0>

4245:
old  <	add rbp, 113>
new  <	mov qword [rbp + 117], printFormat$146>

4246:
old  <	jmp printArgument>
new  <	mov [rbp + 125], rbp>

4247:
old  <>
new  <	add rbp, 117>

4248:
old  < printFormat$134:>
new  <	jmp printChar>

4249:
old  <	; PostCall 113>
new  <>

4250:
old  <>
new  < printFormat$146:>

4251:
old  < printFormat$135:>
new  <	; PostCall 117>

4252:
old  <	; Assign g_outStatus oldOutStatus>
new  <>

4253:
old  <	mov eax, [rbp + 105]>
new  < printFormat$147:>

4254:
old  <	mov [g_outStatus], eax>
new  <	; BinaryAdd field field 1>

4255:
old  <>
new  <	inc dword [rbp + 113]>

4256:
old  < printFormat$136:>
new  <>

4257:
old  <	; BinarySubtract field g_outChars startChars>
new  < printFormat$148:>

4258:
old  <	mov eax, [g_outChars]>
new  <	; Goto 162>

4259:
old  <	sub eax, [rbp + 101]>
new  <	jmp printFormat$162>

4260:
old  <	mov [rbp + 113], eax>
new  <>

4261:
old  <>
new  < printFormat$149:>

4262:
old  < printFormat$137:>
new  <	; Equal 156 plus 0>

4263:
old  <	; Assign g_outChars startChars>
new  <	cmp dword [rbp + 56], 0>

4264:
old  <	mov eax, [rbp + 101]>
new  <	je printFormat$156>

4265:
old  <	mov [g_outChars], eax>
new  <>

4266:
old  <>
new  < printFormat$150:>

4267:
old  < printFormat$138:>
new  <	; PreCall 117 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

4268:
old  <	; Equal 145 negative 0>
new  <>

4269:
old  <	cmp dword [rbp + 109], 0>
new  < printFormat$151:>

4270:
old  <	je printFormat$145>
new  <	; Parameter signedchar 43 141>

4271:
old  <>
new  <	mov byte [rbp + 141], 43>

4272:
old  < printFormat$139:>
new  <>

4273:
old  <	; PreCall 117 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < printFormat$152:>

4274:
old  <>
new  <	; Call printChar 117 0>

4275:
old  < printFormat$140:>
new  <	mov qword [rbp + 117], printFormat$153>

4276:
old  <	; Parameter signedchar 45 141>
new  <	mov [rbp + 125], rbp>

4277:
old  <	mov byte [rbp + 141], 45>
new  <	add rbp, 117>

4278:
old  <>
new  <	jmp printChar>

4279:
old  < printFormat$141:>
new  <>

4280:
old  <	; Call printChar 117 0>
new  < printFormat$153:>

4281:
old  <	mov qword [rbp + 117], printFormat$142>
new  <	; PostCall 117>

4282:
old  <	mov [rbp + 125], rbp>
new  <>

4283:
old  <	add rbp, 117>
new  < printFormat$154:>

4284:
old  <	jmp printChar>
new  <	; BinaryAdd field field 1>

4285:
old  <>
new  <	inc dword [rbp + 113]>

4286:
old  < printFormat$142:>
new  <>

4287:
old  <	; PostCall 117>
new  < printFormat$155:>

4288:
old  <>
new  <	; Goto 162>

4289:
old  < printFormat$143:>
new  <	jmp printFormat$162>

4290:
old  <	; BinaryAdd field field 1>
new  <>

4291:
old  <	inc dword [rbp + 113]>
new  < printFormat$156:>

4292:
old  <>
new  <	; Equal 162 space 0>

4293:
old  < printFormat$144:>
new  <	cmp dword [rbp + 64], 0>

4294:
old  <	; Goto 158>
new  <	je printFormat$162>

4295:
old  <	jmp printFormat$158>
new  <>

4296:
old  <>
new  < printFormat$157:>

4297:
old  < printFormat$145:>
new  <	; PreCall 117 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

4298:
old  <	; Equal 152 plus 0>
new  <>

4299:
old  <	cmp dword [rbp + 56], 0>
new  < printFormat$158:>

4300:
old  <	je printFormat$152>
new  <	; Parameter signedchar 32 141>

4301:
old  <>
new  <	mov byte [rbp + 141], 32>

4302:
old  < printFormat$146:>
new  <>

4303:
old  <	; PreCall 117 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < printFormat$159:>

4304:
old  <>
new  <	; Call printChar 117 0>

4305:
old  < printFormat$147:>
new  <	mov qword [rbp + 117], printFormat$160>

4306:
old  <	; Parameter signedchar 43 141>
new  <	mov [rbp + 125], rbp>

4307:
old  <	mov byte [rbp + 141], 43>
new  <	add rbp, 117>

4308:
old  <>
new  <	jmp printChar>

4309:
old  < printFormat$148:>
new  <>

4310:
old  <	; Call printChar 117 0>
new  < printFormat$160:>

4311:
old  <	mov qword [rbp + 117], printFormat$149>
new  <	; PostCall 117>

4312:
old  <	mov [rbp + 125], rbp>
new  <>

4313:
old  <	add rbp, 117>
new  < printFormat$161:>

4314:
old  <	jmp printChar>
new  <	; BinaryAdd Â£temporary1864 field 1>

4315:
old  <>
new  <	mov eax, [rbp + 113]>

4316:
old  < printFormat$149:>
new  <	inc eax>

4317:
old  <	; PostCall 117>
new  <>

4318:
old  <>
new  < printFormat$162:>

4319:
old  < printFormat$150:>
new  <	; BinaryAdd field field 1>

4320:
old  <	; BinaryAdd field field 1>
new  <	inc dword [rbp + 113]>

4321:
old  <	inc dword [rbp + 113]>
new  <>

4322:
old  <>
new  < printFormat$163:>

4323:
old  < printFormat$151:>
new  <	; SignedGreaterThanEqual 169 Â£temporary1864 width>

4324:
old  <	; Goto 158>
new  <	cmp eax, [rbp + 44]>

4325:
old  <	jmp printFormat$158>
new  <	jge printFormat$169>

4327:
old  < printFormat$152:>
new  < printFormat$164:>

4328:
old  <	; Equal 158 space 0>
new  <	; PreCall 117 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

4329:
old  <	cmp dword [rbp + 64], 0>
new  <>

4330:
old  <	je printFormat$158>
new  < printFormat$165:>

4331:
old  <>
new  <	; Parameter signedchar 48 141>

4332:
old  < printFormat$153:>
new  <	mov byte [rbp + 141], 48>

4333:
old  <	; PreCall 117 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

4334:
old  <>
new  < printFormat$166:>

4335:
old  < printFormat$154:>
new  <	; Call printChar 117 0>

4336:
old  <	; Parameter signedchar 32 141>
new  <	mov qword [rbp + 117], printFormat$167>

4337:
old  <	mov byte [rbp + 141], 32>
new  <	mov [rbp + 125], rbp>

4338:
old  <>
new  <	add rbp, 117>

4339:
old  < printFormat$155:>
new  <	jmp printChar>

4340:
old  <	; Call printChar 117 0>
new  <>

4341:
old  <	mov qword [rbp + 117], printFormat$156>
new  < printFormat$167:>

4342:
old  <	mov [rbp + 125], rbp>
new  <	; PostCall 117>

4343:
old  <	add rbp, 117>
new  <>

4344:
old  <	jmp printChar>
new  < printFormat$168:>

4345:
old  <>
new  <	; Goto 162>

4346:
old  < printFormat$156:>
new  <	jmp printFormat$162>

4347:
old  <	; PostCall 117>
new  <>

4348:
old  <>
new  < printFormat$169:>

4349:
old  < printFormat$157:>
new  <	; PreCall 117 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

4350:
old  <	; BinaryAdd Â£temporary1835 field 1>
new  <>

4351:
old  <	mov eax, [rbp + 113]>
new  < printFormat$170:>

4352:
old  <	inc eax>
new  <	; IntegralToIntegral Â£temporary1868 index>

4353:
old  <>
new  <	mov eax, [rbp + 40]>

4354:
old  < printFormat$158:>
new  <	mov rbx, 4294967295>

4355:
old  <	; BinaryAdd field field 1>
new  <	and rax, rbx>

4356:
old  <	inc dword [rbp + 113]>
new  <>

4357:
old  <>
new  < printFormat$171:>

4358:
old  < printFormat$159:>
new  <	; BinaryAdd Â£temporary1870 format Â£temporary1868>

4359:
old  <	; SignedGreaterThanEqual 165 Â£temporary1835 width>
new  <	mov rsi, [rbp + 24]>

4360:
old  <	cmp eax, [rbp + 44]>
new  <	add rsi, rax>

4361:
old  <	jge printFormat$165>
new  <>

4362:
old  <>
new  < printFormat$172:>

4363:
old  < printFormat$160:>
new  <	; Dereference Â£temporary1867 -> Â£temporary1870 Â£temporary1870 0>

4364:
old  <	; PreCall 117 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

4365:
old  <>
new  < printFormat$173:>

4366:
old  < printFormat$161:>
new  <	; Address Â£temporary1871 Â£temporary1867 -> Â£temporary1870>

4367:
old  <	; Parameter signedchar 48 141>
new  <>

4368:
old  <	mov byte [rbp + 141], 48>
new  < printFormat$174:>

4369:
old  <>
new  <	; Parameter pointer Â£temporary1871 141>

4370:
old  < printFormat$162:>
new  <	mov [rbp + 141], rsi>

4371:
old  <	; Call printChar 117 0>
new  <>

4372:
old  <	mov qword [rbp + 117], printFormat$163>
new  < printFormat$175:>

4373:
old  <	mov [rbp + 125], rbp>
new  <	; Parameter pointer arg_list 149>

4374:
old  <	add rbp, 117>
new  <	mov rax, [rbp + 32]>

4375:
old  <	jmp printChar>
new  <	mov [rbp + 149], rax>

4377:
old  < printFormat$163:>
new  < printFormat$176:>

4378:
old  <	; PostCall 117>
new  <	; Parameter signedint 0 157>

4379:
old  <>
new  <	mov dword [rbp + 157], 0>

4380:
old  < printFormat$164:>
new  <>

4381:
old  <	; Goto 158>
new  < printFormat$177:>

4382:
old  <	jmp printFormat$158>
new  <	; Parameter signedint 0 161>

4383:
old  <>
new  <	mov dword [rbp + 161], 0>

4384:
old  < printFormat$165:>
new  <>

4385:
old  <	; PreCall 117 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < printFormat$178:>

4386:
old  <>
new  <	; Parameter signedint grid 165>

4387:
old  < printFormat$166:>
new  <	mov eax, [rbp + 72]>

4388:
old  <	; IntegralToIntegral Â£temporary1839 index>
new  <	mov [rbp + 165], eax>

4389:
old  <	mov eax, [rbp + 40]>
new  <>

4390:
old  <	mov rbx, 4294967295>
new  < printFormat$179:>

4391:
old  <	and rax, rbx>
new  <	; Parameter pointer 0 169>

4392:
old  <>
new  <	mov qword [rbp + 169], 0>

4393:
old  < printFormat$167:>
new  <>

4394:
old  <	; BinaryAdd Â£temporary1841 format Â£temporary1839>
new  < printFormat$180:>

4395:
old  <	mov rsi, [rbp + 24]>
new  <	; Parameter signedint precision 177>

4396:
old  <	add rsi, rax>
new  <	mov eax, [rbp + 48]>

4397:
old  <>
new  <	mov [rbp + 177], eax>

4398:
old  < printFormat$168:>
new  <>

4399:
old  <	; Dereference Â£temporary1838 -> Â£temporary1841 Â£temporary1841 0>
new  < printFormat$181:>

4400:
old  <>
new  <	; Parameter signedint shortInt 181>

4401:
old  < printFormat$169:>
new  <	mov eax, [rbp + 88]>

4402:
old  <	; Address Â£temporary1842 Â£temporary1838 -> Â£temporary1841>
new  <	mov [rbp + 181], eax>

4404:
old  < printFormat$170:>
new  < printFormat$182:>

4405:
old  <	; Parameter pointer Â£temporary1842 141>
new  <	; Parameter signedint longInt 185>

4406:
old  <	mov [rbp + 141], rsi>
new  <	mov eax, [rbp + 92]>

4407:
old  <>
new  <	mov [rbp + 185], eax>

4408:
old  < printFormat$171:>
new  <>

4409:
old  <	; Parameter pointer arg_list 149>
new  < printFormat$183:>

4410:
old  <	mov rax, [rbp + 32]>
new  <	; Parameter signedint longDouble 189>

4411:
old  <	mov [rbp + 149], rax>
new  <	mov eax, [rbp + 96]>

4412:
old  <>
new  <	mov [rbp + 189], eax>

4413:
old  < printFormat$172:>
new  <>

4414:
old  <	; Parameter signedint 0 157>
new  < printFormat$184:>

4415:
old  <	mov dword [rbp + 157], 0>
new  <	; Parameter signedint 0 193>

4416:
old  <>
new  <	mov dword [rbp + 193], 0>

4417:
old  < printFormat$173:>
new  <>

4418:
old  <	; Parameter signedint 0 161>
new  < printFormat$185:>

4419:
old  <	mov dword [rbp + 161], 0>
new  <	; Parameter pointer 0 197>

4420:
old  <>
new  <	mov qword [rbp + 197], 0>

4421:
old  < printFormat$174:>
new  <>

4422:
old  <	; Parameter signedint grid 165>
new  < printFormat$186:>

4423:
old  <	mov eax, [rbp + 72]>
new  <	; Call printArgument 117 0>

4424:
old  <	mov [rbp + 165], eax>
new  <	mov qword [rbp + 117], printFormat$187>

4425:
old  <>
new  <	mov [rbp + 125], rbp>

4426:
old  < printFormat$175:>
new  <	add rbp, 117>

4427:
old  <	; Parameter pointer 0 169>
new  <	jmp printArgument>

4428:
old  <	mov qword [rbp + 169], 0>
new  <>

4429:
old  <>
new  < printFormat$187:>

4430:
old  < printFormat$176:>
new  <	; PostCall 117>

4431:
old  <	; Parameter signedint precision 177>
new  <>

4432:
old  <	mov eax, [rbp + 48]>
new  < printFormat$188:>

4433:
old  <	mov [rbp + 177], eax>
new  <	; GetReturnValue Â£temporary1872>

4435:
old  < printFormat$177:>
new  < printFormat$189:>

4436:
old  <	; Parameter signedint shortInt 181>
new  <	; Assign arg_list Â£temporary1872>

4437:
old  <	mov eax, [rbp + 88]>
new  <	mov [rbp + 32], rbx>

4438:
old  <	mov [rbp + 181], eax>
new  <>

4439:
old  <>
new  < printFormat$190:>

4440:
old  < printFormat$178:>
new  <	; Goto 246>

4441:
old  <	; Parameter signedint longInt 185>
new  <	jmp printFormat$246>

4442:
old  <	mov eax, [rbp + 92]>
new  <>

4443:
old  <	mov [rbp + 185], eax>
new  < printFormat$191:>

4444:
old  <>
new  <	; Assign startChars g_outChars>

4445:
old  < printFormat$179:>
new  <	mov eax, [g_outChars]>

4446:
old  <	; Parameter signedint longDouble 189>
new  <	mov [rbp + 101], eax>

4447:
old  <	mov eax, [rbp + 96]>
new  <>

4448:
old  <	mov [rbp + 189], eax>
new  < printFormat$192:>

4449:
old  <>
new  <	; Assign oldOutStatus g_outStatus>

4450:
old  < printFormat$180:>
new  <	mov eax, [g_outStatus]>

4451:
old  <	; Parameter signedint 0 193>
new  <	mov [rbp + 105], eax>

4452:
old  <	mov dword [rbp + 193], 0>
new  <>

4453:
old  <>
new  < printFormat$193:>

4454:
old  < printFormat$181:>
new  <	; Assign g_outStatus 2>

4455:
old  <	; Parameter pointer 0 197>
new  <	mov dword [g_outStatus], 2>

4456:
old  <	mov qword [rbp + 197], 0>
new  <>

4457:
old  <>
new  < printFormat$194:>

4458:
old  < printFormat$182:>
new  <	; PreCall 109 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

4459:
old  <	; Call printArgument 117 0>
new  <>

4460:
old  <	mov qword [rbp + 117], printFormat$183>
new  < printFormat$195:>

4461:
old  <	mov [rbp + 125], rbp>
new  <	; IntegralToIntegral Â£temporary1874 index>

4462:
old  <	add rbp, 117>
new  <	mov eax, [rbp + 40]>

4463:
old  <	jmp printArgument>
new  <	mov rbx, 4294967295>

4464:
old  <>
new  <	and rax, rbx>

4465:
old  < printFormat$183:>
new  <>

4466:
old  <	; PostCall 117>
new  < printFormat$196:>

4467:
old  <>
new  <	; BinaryAdd Â£temporary1876 format Â£temporary1874>

4468:
old  < printFormat$184:>
new  <	mov rsi, [rbp + 24]>

4469:
old  <	; GetReturnValue Â£temporary1843>
new  <	add rsi, rax>

4471:
old  < printFormat$185:>
new  < printFormat$197:>

4472:
old  <	; Assign arg_list Â£temporary1843>
new  <	; Dereference Â£temporary1873 -> Â£temporary1876 Â£temporary1876 0>

4473:
old  <	mov [rbp + 32], rbx>
new  <>

4474:
old  <>
new  < printFormat$198:>

4475:
old  < printFormat$186:>
new  <	; Address Â£temporary1877 Â£temporary1873 -> Â£temporary1876>

4476:
old  <	; Goto 242>
new  <>

4477:
old  <	jmp printFormat$242>
new  < printFormat$199:>

4478:
old  <>
new  <	; Parameter pointer Â£temporary1877 133>

4479:
old  < printFormat$187:>
new  <	mov [rbp + 133], rsi>

4480:
old  <	; Assign startChars g_outChars>
new  <>

4481:
old  <	mov eax, [g_outChars]>
new  < printFormat$200:>

4482:
old  <	mov [rbp + 101], eax>
new  <	; Parameter pointer arg_list 141>

4483:
old  <>
new  <	mov rax, [rbp + 32]>

4484:
old  < printFormat$188:>
new  <	mov [rbp + 141], rax>

4485:
old  <	; Assign oldOutStatus g_outStatus>
new  <>

4486:
old  <	mov eax, [g_outStatus]>
new  < printFormat$201:>

4487:
old  <	mov [rbp + 105], eax>
new  <	; Parameter signedint plus 149>

4488:
old  <>
new  <	mov eax, [rbp + 56]>

4489:
old  < printFormat$189:>
new  <	mov [rbp + 149], eax>

4490:
old  <	; Assign g_outStatus 2>
new  <>

4491:
old  <	mov dword [g_outStatus], 2>
new  < printFormat$202:>

4492:
old  <>
new  <	; Parameter signedint space 153>

4493:
old  < printFormat$190:>
new  <	mov eax, [rbp + 64]>

4494:
old  <	; PreCall 109 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov [rbp + 153], eax>

4496:
old  < printFormat$191:>
new  < printFormat$203:>

4497:
old  <	; IntegralToIntegral Â£temporary1845 index>
new  <	; Parameter signedint grid 157>

4498:
old  <	mov eax, [rbp + 40]>
new  <	mov eax, [rbp + 72]>

4499:
old  <	mov rbx, 4294967295>
new  <	mov [rbp + 157], eax>

4500:
old  <	and rax, rbx>
new  <>

4501:
old  <>
new  < printFormat$204:>

4502:
old  < printFormat$192:>
new  <	; Address Â£temporary1878 width>

4503:
old  <	; BinaryAdd Â£temporary1847 format Â£temporary1845>
new  <	mov rsi, rbp>

4504:
old  <	mov rsi, [rbp + 24]>
new  <	add rsi, 44>

4505:
old  <	add rsi, rax>
new  <>

4506:
old  <>
new  < printFormat$205:>

4507:
old  < printFormat$193:>
new  <	; Parameter pointer Â£temporary1878 161>

4508:
old  <	; Dereference Â£temporary1844 -> Â£temporary1847 Â£temporary1847 0>
new  <	mov [rbp + 161], rsi>

4510:
old  < printFormat$194:>
new  < printFormat$206:>

4511:
old  <	; Address Â£temporary1848 Â£temporary1844 -> Â£temporary1847>
new  <	; Parameter signedint precision 169>

4512:
old  <>
new  <	mov eax, [rbp + 48]>

4513:
old  < printFormat$195:>
new  <	mov [rbp + 169], eax>

4514:
old  <	; Parameter pointer Â£temporary1848 133>
new  <>

4515:
old  <	mov [rbp + 133], rsi>
new  < printFormat$207:>

4516:
old  <>
new  <	; Parameter signedint shortInt 173>

4517:
old  < printFormat$196:>
new  <	mov eax, [rbp + 88]>

4518:
old  <	; Parameter pointer arg_list 141>
new  <	mov [rbp + 173], eax>

4519:
old  <	mov rax, [rbp + 32]>
new  <>

4520:
old  <	mov [rbp + 141], rax>
new  < printFormat$208:>

4521:
old  <>
new  <	; Parameter signedint longInt 177>

4522:
old  < printFormat$197:>
new  <	mov eax, [rbp + 92]>

4523:
old  <	; Parameter signedint plus 149>
new  <	mov [rbp + 177], eax>

4524:
old  <	mov eax, [rbp + 56]>
new  <>

4525:
old  <	mov [rbp + 149], eax>
new  < printFormat$209:>

4526:
old  <>
new  <	; Parameter signedint longDouble 181>

4527:
old  < printFormat$198:>
new  <	mov eax, [rbp + 96]>

4528:
old  <	; Parameter signedint space 153>
new  <	mov [rbp + 181], eax>

4529:
old  <	mov eax, [rbp + 64]>
new  <>

4530:
old  <	mov [rbp + 153], eax>
new  < printFormat$210:>

4531:
old  <>
new  <	; Parameter signedint 1 185>

4532:
old  < printFormat$199:>
new  <	mov dword [rbp + 185], 1>

4533:
old  <	; Parameter signedint grid 157>
new  <>

4534:
old  <	mov eax, [rbp + 72]>
new  < printFormat$211:>

4535:
old  <	mov [rbp + 157], eax>
new  <	; Parameter pointer 0 189>

4536:
old  <>
new  <	mov qword [rbp + 189], 0>

4537:
old  < printFormat$200:>
new  <>

4538:
old  <	; Address Â£temporary1849 width>
new  < printFormat$212:>

4539:
old  <	mov rsi, rbp>
new  <	; Call printArgument 109 0>

4540:
old  <	add rsi, 44>
new  <	mov qword [rbp + 109], printFormat$213>

4541:
old  <>
new  <	mov [rbp + 117], rbp>

4542:
old  < printFormat$201:>
new  <	add rbp, 109>

4543:
old  <	; Parameter pointer Â£temporary1849 161>
new  <	jmp printArgument>

4544:
old  <	mov [rbp + 161], rsi>
new  <>

4545:
old  <>
new  < printFormat$213:>

4546:
old  < printFormat$202:>
new  <	; PostCall 109>

4547:
old  <	; Parameter signedint precision 169>
new  <>

4548:
old  <	mov eax, [rbp + 48]>
new  < printFormat$214:>

4549:
old  <	mov [rbp + 169], eax>
new  <	; Assign g_outStatus oldOutStatus>

4550:
old  <>
new  <	mov eax, [rbp + 105]>

4551:
old  < printFormat$203:>
new  <	mov [g_outStatus], eax>

4552:
old  <	; Parameter signedint shortInt 173>
new  <>

4553:
old  <	mov eax, [rbp + 88]>
new  < printFormat$215:>

4554:
old  <	mov [rbp + 173], eax>
new  <	; BinarySubtract field g_outChars startChars>

4555:
old  <>
new  <	mov eax, [g_outChars]>

4556:
old  < printFormat$204:>
new  <	sub eax, [rbp + 101]>

4557:
old  <	; Parameter signedint longInt 177>
new  <	mov [rbp + 109], eax>

4558:
old  <	mov eax, [rbp + 92]>
new  <>

4559:
old  <	mov [rbp + 177], eax>
new  < printFormat$216:>

4560:
old  <>
new  <	; Assign g_outChars startChars>

4561:
old  < printFormat$205:>
new  <	mov eax, [rbp + 101]>

4562:
old  <	; Parameter signedint longDouble 181>
new  <	mov [g_outChars], eax>

4563:
old  <	mov eax, [rbp + 96]>
new  <>

4564:
old  <	mov [rbp + 181], eax>
new  < printFormat$217:>

4565:
old  <>
new  <	; Assign Â£temporary1881 field>

4566:
old  < printFormat$206:>
new  <	mov eax, [rbp + 109]>

4567:
old  <	; Parameter signedint 1 185>
new  <>

4568:
old  <	mov dword [rbp + 185], 1>
new  < printFormat$218:>

4569:
old  <>
new  <	; BinaryAdd field field 1>

4570:
old  < printFormat$207:>
new  <	inc dword [rbp + 109]>

4571:
old  <	; Parameter pointer 0 189>
new  <>

4572:
old  <	mov qword [rbp + 189], 0>
new  < printFormat$219:>

4573:
old  <>
new  <	; SignedGreaterThanEqual 225 Â£temporary1881 width>

4574:
old  < printFormat$208:>
new  <	cmp eax, [rbp + 44]>

4575:
old  <	; Call printArgument 109 0>
new  <	jge printFormat$225>

4576:
old  <	mov qword [rbp + 109], printFormat$209>
new  <>

4577:
old  <	mov [rbp + 117], rbp>
new  < printFormat$220:>

4578:
old  <	add rbp, 109>
new  <	; PreCall 113 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

4579:
old  <	jmp printArgument>
new  <>

4580:
old  <>
new  < printFormat$221:>

4581:
old  < printFormat$209:>
new  <	; Parameter signedchar 32 137>

4582:
old  <	; PostCall 109>
new  <	mov byte [rbp + 137], 32>

4584:
old  < printFormat$210:>
new  < printFormat$222:>

4585:
old  <	; Assign g_outStatus oldOutStatus>
new  <	; Call printChar 113 0>

4586:
old  <	mov eax, [rbp + 105]>
new  <	mov qword [rbp + 113], printFormat$223>

4587:
old  <	mov [g_outStatus], eax>
new  <	mov [rbp + 121], rbp>

4588:
old  <>
new  <	add rbp, 113>

4589:
old  < printFormat$211:>
new  <	jmp printChar>

4590:
old  <	; BinarySubtract field g_outChars startChars>
new  <>

4591:
old  <	mov eax, [g_outChars]>
new  < printFormat$223:>

4592:
old  <	sub eax, [rbp + 101]>
new  <	; PostCall 113>

4593:
old  <	mov [rbp + 109], eax>
new  <>

4594:
old  <>
new  < printFormat$224:>

4595:
old  < printFormat$212:>
new  <	; Goto 217>

4596:
old  <	; Assign g_outChars startChars>
new  <	jmp printFormat$217>

4597:
old  <	mov eax, [rbp + 101]>
new  <>

4598:
old  <	mov [g_outChars], eax>
new  < printFormat$225:>

4599:
old  <>
new  <	; PreCall 113 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

4600:
old  < printFormat$213:>
new  <>

4601:
old  <	; Assign Â£temporary1852 field>
new  < printFormat$226:>

4602:
old  <	mov eax, [rbp + 109]>
new  <	; IntegralToIntegral Â£temporary1885 index>

4603:
old  <>
new  <	mov eax, [rbp + 40]>

4604:
old  < printFormat$214:>
new  <	mov rbx, 4294967295>

4605:
old  <	; BinaryAdd field field 1>
new  <	and rax, rbx>

4606:
old  <	inc dword [rbp + 109]>
new  <>

4607:
old  <>
new  < printFormat$227:>

4608:
old  < printFormat$215:>
new  <	; BinaryAdd Â£temporary1887 format Â£temporary1885>

4609:
old  <	; SignedGreaterThanEqual 221 Â£temporary1852 width>
new  <	mov rsi, [rbp + 24]>

4610:
old  <	cmp eax, [rbp + 44]>
new  <	add rsi, rax>

4611:
old  <	jge printFormat$221>
new  <>

4612:
old  <>
new  < printFormat$228:>

4613:
old  < printFormat$216:>
new  <	; Dereference Â£temporary1884 -> Â£temporary1887 Â£temporary1887 0>

4614:
old  <	; PreCall 113 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

4615:
old  <>
new  < printFormat$229:>

4616:
old  < printFormat$217:>
new  <	; Address Â£temporary1888 Â£temporary1884 -> Â£temporary1887>

4617:
old  <	; Parameter signedchar 32 137>
new  <>

4618:
old  <	mov byte [rbp + 137], 32>
new  < printFormat$230:>

4619:
old  <>
new  <	; Parameter pointer Â£temporary1888 137>

4620:
old  < printFormat$218:>
new  <	mov [rbp + 137], rsi>

4621:
old  <	; Call printChar 113 0>
new  <>

4622:
old  <	mov qword [rbp + 113], printFormat$219>
new  < printFormat$231:>

4623:
old  <	mov [rbp + 121], rbp>
new  <	; Parameter pointer arg_list 145>

4624:
old  <	add rbp, 113>
new  <	mov rax, [rbp + 32]>

4625:
old  <	jmp printChar>
new  <	mov [rbp + 145], rax>

4627:
old  < printFormat$219:>
new  < printFormat$232:>

4628:
old  <	; PostCall 113>
new  <	; Parameter signedint plus 153>

4629:
old  <>
new  <	mov eax, [rbp + 56]>

4630:
old  < printFormat$220:>
new  <	mov [rbp + 153], eax>

4631:
old  <	; Goto 213>
new  <>

4632:
old  <	jmp printFormat$213>
new  < printFormat$233:>

4633:
old  <>
new  <	; Parameter signedint space 157>

4634:
old  < printFormat$221:>
new  <	mov eax, [rbp + 64]>

4635:
old  <	; PreCall 113 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov [rbp + 157], eax>

4637:
old  < printFormat$222:>
new  < printFormat$234:>

4638:
old  <	; IntegralToIntegral Â£temporary1856 index>
new  <	; Parameter signedint grid 161>

4639:
old  <	mov eax, [rbp + 40]>
new  <	mov eax, [rbp + 72]>

4640:
old  <	mov rbx, 4294967295>
new  <	mov [rbp + 161], eax>

4641:
old  <	and rax, rbx>
new  <>

4642:
old  <>
new  < printFormat$235:>

4643:
old  < printFormat$223:>
new  <	; Parameter pointer 0 165>

4644:
old  <	; BinaryAdd Â£temporary1858 format Â£temporary1856>
new  <	mov qword [rbp + 165], 0>

4645:
old  <	mov rsi, [rbp + 24]>
new  <>

4646:
old  <	add rsi, rax>
new  < printFormat$236:>

4647:
old  <>
new  <	; Parameter signedint precision 173>

4648:
old  < printFormat$224:>
new  <	mov eax, [rbp + 48]>

4649:
old  <	; Dereference Â£temporary1855 -> Â£temporary1858 Â£temporary1858 0>
new  <	mov [rbp + 173], eax>

4651:
old  < printFormat$225:>
new  < printFormat$237:>

4652:
old  <	; Address Â£temporary1859 Â£temporary1855 -> Â£temporary1858>
new  <	; Parameter signedint shortInt 177>

4653:
old  <>
new  <	mov eax, [rbp + 88]>

4654:
old  < printFormat$226:>
new  <	mov [rbp + 177], eax>

4655:
old  <	; Parameter pointer Â£temporary1859 137>
new  <>

4656:
old  <	mov [rbp + 137], rsi>
new  < printFormat$238:>

4657:
old  <>
new  <	; Parameter signedint longInt 181>

4658:
old  < printFormat$227:>
new  <	mov eax, [rbp + 92]>

4659:
old  <	; Parameter pointer arg_list 145>
new  <	mov [rbp + 181], eax>

4660:
old  <	mov rax, [rbp + 32]>
new  <>

4661:
old  <	mov [rbp + 145], rax>
new  < printFormat$239:>

4662:
old  <>
new  <	; Parameter signedint longDouble 185>

4663:
old  < printFormat$228:>
new  <	mov eax, [rbp + 96]>

4664:
old  <	; Parameter signedint plus 153>
new  <	mov [rbp + 185], eax>

4665:
old  <	mov eax, [rbp + 56]>
new  <>

4666:
old  <	mov [rbp + 153], eax>
new  < printFormat$240:>

4667:
old  <>
new  <	; Parameter signedint 1 189>

4668:
old  < printFormat$229:>
new  <	mov dword [rbp + 189], 1>

4669:
old  <	; Parameter signedint space 157>
new  <>

4670:
old  <	mov eax, [rbp + 64]>
new  < printFormat$241:>

4671:
old  <	mov [rbp + 157], eax>
new  <	; Parameter pointer 0 193>

4672:
old  <>
new  <	mov qword [rbp + 193], 0>

4673:
old  < printFormat$230:>
new  <>

4674:
old  <	; Parameter signedint grid 161>
new  < printFormat$242:>

4675:
old  <	mov eax, [rbp + 72]>
new  <	; Call printArgument 113 0>

4676:
old  <	mov [rbp + 161], eax>
new  <	mov qword [rbp + 113], printFormat$243>

4677:
old  <>
new  <	mov [rbp + 121], rbp>

4678:
old  < printFormat$231:>
new  <	add rbp, 113>

4679:
old  <	; Parameter pointer 0 165>
new  <	jmp printArgument>

4680:
old  <	mov qword [rbp + 165], 0>
new  <>

4681:
old  <>
new  < printFormat$243:>

4682:
old  < printFormat$232:>
new  <	; PostCall 113>

4683:
old  <	; Parameter signedint precision 173>
new  <>

4684:
old  <	mov eax, [rbp + 48]>
new  < printFormat$244:>

4685:
old  <	mov [rbp + 173], eax>
new  <	; GetReturnValue Â£temporary1889>

4687:
old  < printFormat$233:>
new  < printFormat$245:>

4688:
old  <	; Parameter signedint shortInt 177>
new  <	; Assign arg_list Â£temporary1889>

4689:
old  <	mov eax, [rbp + 88]>
new  <	mov [rbp + 32], rbx>

4690:
old  <	mov [rbp + 177], eax>
new  <>

4691:
old  <>
new  < printFormat$246:>

4692:
old  < printFormat$234:>
new  <	; Assign percent 0>

4693:
old  <	; Parameter signedint longInt 181>
new  <	mov dword [rbp + 52], 0>

4694:
old  <	mov eax, [rbp + 92]>
new  <>

4695:
old  <	mov [rbp + 181], eax>
new  < printFormat$247:>

4696:
old  <>
new  <	; Goto 292>

4697:
old  < printFormat$235:>
new  <	jmp printFormat$292>

4698:
old  <	; Parameter signedint longDouble 185>
new  <>

4699:
old  <	mov eax, [rbp + 96]>
new  < printFormat$248:>

4700:
old  <	mov [rbp + 185], eax>
new  <	; Assign value 0>

4701:
old  <>
new  <	mov dword [rbp + 101], 0>

4702:
old  < printFormat$236:>
new  <>

4703:
old  <	; Parameter signedint 1 189>
new  < printFormat$249:>

4704:
old  <	mov dword [rbp + 189], 1>
new  <	; PreCall 105 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

4706:
old  < printFormat$237:>
new  < printFormat$250:>

4707:
old  <	; Parameter pointer 0 193>
new  <	; IntegralToIntegral Â£temporary1892 c>

4708:
old  <	mov qword [rbp + 193], 0>
new  <	mov al, [rbp + 100]>

4709:
old  <>
new  <	and eax, 255>

4710:
old  < printFormat$238:>
new  <	cmp al, 0>

4711:
old  <	; Call printArgument 113 0>
new  <	jge printFormat$251>

4712:
old  <	mov qword [rbp + 113], printFormat$239>
new  <	neg al>

4713:
old  <	mov [rbp + 121], rbp>
new  <	neg eax>

4714:
old  <	add rbp, 113>
new  <>

4715:
old  <	jmp printArgument>
new  < printFormat$251:>

4716:
old  <>
new  <	; Parameter signedint Â£temporary1892 129>

4717:
old  < printFormat$239:>
new  <	mov [rbp + 129], eax>

4718:
old  <	; PostCall 113>
new  <>

4719:
old  <>
new  < printFormat$252:>

4720:
old  < printFormat$240:>
new  <	; Call isdigit 105 0>

4721:
old  <	; GetReturnValue Â£temporary1860>
new  <	mov qword [rbp + 105], printFormat$253>

4722:
old  <>
new  <	mov [rbp + 113], rbp>

4723:
old  < printFormat$241:>
new  <	add rbp, 105>

4724:
old  <	; Assign arg_list Â£temporary1860>
new  <	jmp isdigit>

4725:
old  <	mov [rbp + 32], rbx>
new  <>

4726:
old  <>
new  < printFormat$253:>

4727:
old  < printFormat$242:>
new  <	; PostCall 105>

4728:
old  <	; Assign percent 0>
new  <>

4729:
old  <	mov dword [rbp + 52], 0>
new  < printFormat$254:>

4730:
old  <>
new  <	; GetReturnValue Â£temporary1893>

4731:
old  < printFormat$243:>
new  <>

4732:
old  <	; Goto 288>
new  < printFormat$255:>

4733:
old  <	jmp printFormat$288>
new  <	; Equal 266 Â£temporary1893 0>

4734:
old  <>
new  <	cmp ebx, 0>

4735:
old  < printFormat$244:>
new  <	je printFormat$266>

4736:
old  <	; Assign value 0>
new  <>

4737:
old  <	mov dword [rbp + 101], 0>
new  < printFormat$256:>

4738:
old  <>
new  <	; SignedMultiply Â£temporary1894 value 10>

4739:
old  < printFormat$245:>
new  <	mov eax, [rbp + 101]>

4740:
old  <	; PreCall 105 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	xor edx, edx>

4741:
old  <>
new  <	imul dword [int4$10#]>

4742:
old  < printFormat$246:>
new  <>

4743:
old  <	; IntegralToIntegral Â£temporary1863 c>
new  < printFormat$257:>

4744:
old  <	mov al, [rbp + 100]>
new  <	; BinarySubtract Â£temporary1895 c 48>

4745:
old  <	and eax, 255>
new  <	mov bl, [rbp + 100]>

4746:
old  <	cmp al, 0>
new  <	sub bl, 48>

4747:
old  <	jge printFormat$247>
new  <>

4748:
old  <	neg al>
new  < printFormat$258:>

4749:
old  <	neg eax>
new  <	; IntegralToIntegral Â£temporary1896 Â£temporary1895>

4750:
old  <>
new  <	and ebx, 255>

4751:
old  < printFormat$247:>
new  <	cmp bl, 0>

4752:
old  <	; Parameter signedint Â£temporary1863 129>
new  <	jge printFormat$259>

4753:
old  <	mov [rbp + 129], eax>
new  <	neg bl>

4754:
old  <>
new  <	neg ebx>

4755:
old  < printFormat$248:>
new  <>

4756:
old  <	; Call isdigit 105 0>
new  < printFormat$259:>

4757:
old  <	mov qword [rbp + 105], printFormat$249>
new  <	; BinaryAdd value Â£temporary1894 Â£temporary1896>

4758:
old  <	mov [rbp + 113], rbp>
new  <	add eax, ebx>

4759:
old  <	add rbp, 105>
new  <	mov [rbp + 101], eax>

4760:
old  <	jmp isdigit>
new  <>

4761:
old  <>
new  < printFormat$260:>

4762:
old  < printFormat$249:>
new  <	; BinaryAdd Â£temporary1898 index 1>

4763:
old  <	; PostCall 105>
new  <	mov eax, [rbp + 40]>

4764:
old  <>
new  <	inc eax>

4765:
old  < printFormat$250:>
new  <>

4766:
old  <	; GetReturnValue Â£temporary1864>
new  < printFormat$261:>

4767:
old  <>
new  <	; IntegralToIntegral Â£temporary1900 Â£temporary1898>

4768:
old  < printFormat$251:>
new  <	mov rbx, 4294967295>

4769:
old  <	; Equal 262 Â£temporary1864 0>
new  <	and rax, rbx>

4770:
old  <	cmp ebx, 0>
new  <>

4771:
old  <	je printFormat$262>
new  < printFormat$262:>

4772:
old  <>
new  <	; BinaryAdd Â£temporary1902 format Â£temporary1900>

4773:
old  < printFormat$252:>
new  <	mov rsi, [rbp + 24]>

4774:
old  <	; SignedMultiply Â£temporary1865 value 10>
new  <	add rsi, rax>

4775:
old  <	mov eax, [rbp + 101]>
new  <>

4776:
old  <	xor edx, edx>
new  < printFormat$263:>

4777:
old  <	imul dword [int4$10#]>
new  <	; Dereference Â£temporary1899 -> Â£temporary1902 Â£temporary1902 0>

4779:
old  < printFormat$253:>
new  < printFormat$264:>

4780:
old  <	; BinarySubtract Â£temporary1866 c 48>
new  <	; Assign c Â£temporary1899 -> Â£temporary1902>

4781:
old  <	mov bl, [rbp + 100]>
new  <	mov al, [rsi]>

4782:
old  <	sub bl, 48>
new  <	mov [rbp + 100], al>

4784:
old  < printFormat$254:>
new  < printFormat$265:>

4785:
old  <	; IntegralToIntegral Â£temporary1867 Â£temporary1866>
new  <	; Goto 249>

4786:
old  <	and ebx, 255>
new  <	jmp printFormat$249>

4787:
old  <	cmp bl, 0>
new  <>

4788:
old  <	jge printFormat$255>
new  < printFormat$266:>

4789:
old  <	neg bl>
new  <	; BinarySubtract index index 1>

4790:
old  <	neg ebx>
new  <	dec dword [rbp + 40]>

4792:
old  < printFormat$255:>
new  < printFormat$267:>

4793:
old  <	; BinaryAdd value Â£temporary1865 Â£temporary1867>
new  <	; NotEqual 270 period 0>

4794:
old  <	add eax, ebx>
new  <	cmp dword [rbp + 80], 0>

4795:
old  <	mov [rbp + 101], eax>
new  <	jne printFormat$270>

4797:
old  < printFormat$256:>
new  < printFormat$268:>

4798:
old  <	; BinaryAdd Â£temporary1869 index 1>
new  <	; Assign width value>

4799:
old  <	mov eax, [rbp + 40]>
new  <	mov eax, [rbp + 101]>

4800:
old  <	inc eax>
new  <	mov [rbp + 44], eax>

4802:
old  < printFormat$257:>
new  < printFormat$269:>

4803:
old  <	; IntegralToIntegral Â£temporary1871 Â£temporary1869>
new  <	; Goto 292>

4804:
old  <	mov rbx, 4294967295>
new  <	jmp printFormat$292>

4805:
old  <	and rax, rbx>
new  <>

4806:
old  <>
new  < printFormat$270:>

4807:
old  < printFormat$258:>
new  <	; Assign precision value>

4808:
old  <	; BinaryAdd Â£temporary1873 format Â£temporary1871>
new  <	mov eax, [rbp + 101]>

4809:
old  <	mov rsi, [rbp + 24]>
new  <	mov [rbp + 48], eax>

4810:
old  <	add rsi, rax>
new  <>

4811:
old  <>
new  < printFormat$271:>

4812:
old  < printFormat$259:>
new  <	; Goto 292>

4813:
old  <	; Dereference Â£temporary1870 -> Â£temporary1873 Â£temporary1873 0>
new  <	jmp printFormat$292>

4815:
old  < printFormat$260:>
new  < printFormat$272:>

4816:
old  <	; Assign c Â£temporary1870 -> Â£temporary1873>
new  <	; NotEqual 288 c 37>

4817:
old  <	mov al, [rsi]>
new  <	cmp byte [rbp + 100], 37>

4818:
old  <	mov [rbp + 100], al>
new  <	jne printFormat$288>

4820:
old  < printFormat$261:>
new  < printFormat$273:>

4821:
old  <	; Goto 245>
new  <	; Assign percent 1>

4822:
old  <	jmp printFormat$245>
new  <	mov dword [rbp + 52], 1>

4824:
old  < printFormat$262:>
new  < printFormat$274:>

4825:
old  <	; BinarySubtract index index 1>
new  <	; Assign plus 0>

4826:
old  <	dec dword [rbp + 40]>
new  <	mov dword [rbp + 56], 0>

4828:
old  < printFormat$263:>
new  < printFormat$275:>

4829:
old  <	; NotEqual 266 period 0>
new  <	; Assign minus 0>

4830:
old  <	cmp dword [rbp + 80], 0>
new  <	mov dword [rbp + 60], 0>

4831:
old  <	jne printFormat$266>
new  <>

4832:
old  <>
new  < printFormat$276:>

4833:
old  < printFormat$264:>
new  <	; Assign space 0>

4834:
old  <	; Assign width value>
new  <	mov dword [rbp + 64], 0>

4835:
old  <	mov eax, [rbp + 101]>
new  <>

4836:
old  <	mov [rbp + 44], eax>
new  < printFormat$277:>

4837:
old  <>
new  <	; Assign zero 0>

4838:
old  < printFormat$265:>
new  <	mov dword [rbp + 68], 0>

4839:
old  <	; Goto 288>
new  <>

4840:
old  <	jmp printFormat$288>
new  < printFormat$278:>

4841:
old  <>
new  <	; Assign grid 0>

4842:
old  < printFormat$266:>
new  <	mov dword [rbp + 72], 0>

4843:
old  <	; Assign precision value>
new  <>

4844:
old  <	mov eax, [rbp + 101]>
new  < printFormat$279:>

4845:
old  <	mov [rbp + 48], eax>
new  <	; Assign widthStar 0>

4846:
old  <>
new  <	mov dword [rbp + 76], 0>

4847:
old  < printFormat$267:>
new  <>

4848:
old  <	; Goto 288>
new  < printFormat$280:>

4849:
old  <	jmp printFormat$288>
new  <	; Assign period 0>

4850:
old  <>
new  <	mov dword [rbp + 80], 0>

4851:
old  < printFormat$268:>
new  <>

4852:
old  <	; NotEqual 284 c 37>
new  < printFormat$281:>

4853:
old  <	cmp byte [rbp + 100], 37>
new  <	; Assign precisionStar 0>

4854:
old  <	jne printFormat$284>
new  <	mov dword [rbp + 84], 0>

4856:
old  < printFormat$269:>
new  < printFormat$282:>

4857:
old  <	; Assign percent 1>
new  <	; Assign shortInt 0>

4858:
old  <	mov dword [rbp + 52], 1>
new  <	mov dword [rbp + 88], 0>

4860:
old  < printFormat$270:>
new  < printFormat$283:>

4861:
old  <	; Assign plus 0>
new  <	; Assign longInt 0>

4862:
old  <	mov dword [rbp + 56], 0>
new  <	mov dword [rbp + 92], 0>

4864:
old  < printFormat$271:>
new  < printFormat$284:>

4865:
old  <	; Assign minus 0>
new  <	; Assign longDouble 0>

4866:
old  <	mov dword [rbp + 60], 0>
new  <	mov dword [rbp + 96], 0>

4868:
old  < printFormat$272:>
new  < printFormat$285:>

4869:
old  <	; Assign space 0>
new  <	; Assign width 0>

4870:
old  <	mov dword [rbp + 64], 0>
new  <	mov dword [rbp + 44], 0>

4872:
old  < printFormat$273:>
new  < printFormat$286:>

4873:
old  <	; Assign zero 0>
new  <	; Assign precision 0>

4874:
old  <	mov dword [rbp + 68], 0>
new  <	mov dword [rbp + 48], 0>

4876:
old  < printFormat$274:>
new  < printFormat$287:>

4877:
old  <	; Assign grid 0>
new  <	; Goto 292>

4878:
old  <	mov dword [rbp + 72], 0>
new  <	jmp printFormat$292>

4880:
old  < printFormat$275:>
new  < printFormat$288:>

4881:
old  <	; Assign widthStar 0>
new  <	; PreCall 101 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

4882:
old  <	mov dword [rbp + 76], 0>
new  <>

4883:
old  <>
new  < printFormat$289:>

4884:
old  < printFormat$276:>
new  <	; Parameter signedchar c 125>

4885:
old  <	; Assign period 0>
new  <	mov al, [rbp + 100]>

4886:
old  <	mov dword [rbp + 80], 0>
new  <	mov [rbp + 125], al>

4888:
old  < printFormat$277:>
new  < printFormat$290:>

4889:
old  <	; Assign precisionStar 0>
new  <	; Call printChar 101 0>

4890:
old  <	mov dword [rbp + 84], 0>
new  <	mov qword [rbp + 101], printFormat$291>

4891:
old  <>
new  <	mov [rbp + 109], rbp>

4892:
old  < printFormat$278:>
new  <	add rbp, 101>

4893:
old  <	; Assign shortInt 0>
new  <	jmp printChar>

4894:
old  <	mov dword [rbp + 88], 0>
new  <>

4895:
old  <>
new  < printFormat$291:>

4896:
old  < printFormat$279:>
new  <	; PostCall 101>

4897:
old  <	; Assign longInt 0>
new  <>

4898:
old  <	mov dword [rbp + 92], 0>
new  < printFormat$292:>

4899:
old  <>
new  <	; BinaryAdd index index 1>

4900:
old  < printFormat$280:>
new  <	inc dword [rbp + 40]>

4901:
old  <	; Assign longDouble 0>
new  <>

4902:
old  <	mov dword [rbp + 96], 0>
new  < printFormat$293:>

4903:
old  <>
new  <	; Goto 16>

4904:
old  < printFormat$281:>
new  <	jmp printFormat$16>

4905:
old  <	; Assign width 0>
new  <>

4906:
old  <	mov dword [rbp + 44], 0>
new  < printFormat$294:>

4907:
old  <>
new  <	; NotEqual 301 g_outStatus 1>

4908:
old  < printFormat$282:>
new  <	cmp dword [g_outStatus], 1>

4909:
old  <	; Assign precision 0>
new  <	jne printFormat$301>

4910:
old  <	mov dword [rbp + 48], 0>
new  <>

4911:
old  <>
new  < printFormat$295:>

4912:
old  < printFormat$283:>
new  <	; IntegralToIntegral Â£temporary1911 g_outDevice>

4913:
old  <	; Goto 288>
new  <	mov rax, [g_outDevice]>

4914:
old  <	jmp printFormat$288>
new  <>

4915:
old  <>
new  < printFormat$296:>

4916:
old  < printFormat$284:>
new  <	; Assign outString Â£temporary1911>

4917:
old  <	; PreCall 101 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov [rbp + 100], rax>

4919:
old  < printFormat$285:>
new  < printFormat$297:>

4920:
old  <	; Parameter signedchar c 125>
new  <	; IntegralToIntegral Â£temporary1913 g_outChars>

4921:
old  <	mov al, [rbp + 100]>
new  <	mov eax, [g_outChars]>

4922:
old  <	mov [rbp + 125], al>
new  <	mov rbx, 4294967295>

4923:
old  <>
new  <	and rax, rbx>

4924:
old  < printFormat$286:>
new  <>

4925:
old  <	; Call printChar 101 0>
new  < printFormat$298:>

4926:
old  <	mov qword [rbp + 101], printFormat$287>
new  <	; BinaryAdd Â£temporary1915 outString Â£temporary1913>

4927:
old  <	mov [rbp + 109], rbp>
new  <	mov rsi, [rbp + 100]>

4928:
old  <	add rbp, 101>
new  <	add rsi, rax>

4929:
old  <	jmp printChar>
new  <>

4930:
old  <>
new  < printFormat$299:>

4931:
old  < printFormat$287:>
new  <	; Dereference Â£temporary1912 -> Â£temporary1915 Â£temporary1915 0>

4932:
old  <	; PostCall 101>
new  <>

4933:
old  <>
new  < printFormat$300:>

4934:
old  < printFormat$288:>
new  <	; Assign Â£temporary1912 -> Â£temporary1915 0>

4935:
old  <	; BinaryAdd index index 1>
new  <	mov byte [rsi], 0>

4936:
old  <	inc dword [rbp + 40]>
new  <>

4937:
old  <>
new  < printFormat$301:>

4938:
old  < printFormat$289:>
new  <	; Return g_outChars>

4939:
old  <	; Goto 16>
new  <	mov ebx, [g_outChars]>

4940:
old  <	jmp printFormat$16>
new  <	mov rax, [rbp]>

4941:
old  <>
new  <	mov rdi, [rbp + 16]>

4942:
old  < printFormat$290:>
new  <	mov rbp, [rbp + 8]>

4943:
old  <	; NotEqual 297 g_outStatus 1>
new  <	jmp rax>

4944:
old  <	cmp dword [g_outStatus], 1>
new  <>

4945:
old  <	jne printFormat$297>
new  < printFormat$302:>

4946:
old  <>
new  <	; FunctionEnd printFormat>

4947:
old  < printFormat$291:>
new  <>

4948:
old  <	; IntegralToIntegral Â£temporary1882 g_outDevice>
new  <section .text>

4949:
old  <	mov rax, [g_outDevice]>
new  <>

4950:
old  <>
new  < printf:>

4951:
old  < printFormat$292:>
new  <	; Address Â£temporary1920 format>

4952:
old  <	; Assign outString Â£temporary1882>
new  <	mov rsi, rbp>

4953:
old  <	mov [rbp + 100], rax>
new  <	add rsi, 24>

4955:
old  < printFormat$293:>
new  < printf$1:>

4956:
old  <	; IntegralToIntegral Â£temporary1884 g_outChars>
new  <	; IntegralToIntegral Â£temporary1921 Â£temporary1920>

4957:
old  <	mov eax, [g_outChars]>
new  <>

4958:
old  <	mov rbx, 4294967295>
new  < printf$2:>

4959:
old  <	and rax, rbx>
new  <	; BinaryAdd arg_list Â£temporary1921 8>

4960:
old  <>
new  <	add rsi, 8>

4961:
old  < printFormat$294:>
new  <	mov [rdi + 32], rsi>

4962:
old  <	; BinaryAdd Â£temporary1886 outString Â£temporary1884>
new  <>

4963:
old  <	mov rsi, [rbp + 100]>
new  < printf$3:>

4964:
old  <	add rsi, rax>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

4966:
old  < printFormat$295:>
new  < printf$4:>

4967:
old  <	; Dereference Â£temporary1883 -> Â£temporary1886 Â£temporary1886 0>
new  <	; Parameter pointer format 64>

4968:
old  <>
new  <	mov rax, [rbp + 24]>

4969:
old  < printFormat$296:>
new  <	mov [rdi + 64], rax>

4970:
old  <	; Assign Â£temporary1883 -> Â£temporary1886 0>
new  <>

4971:
old  <	mov byte [rsi], 0>
new  < printf$5:>

4972:
old  <>
new  <	; Parameter pointer arg_list 72>

4973:
old  < printFormat$297:>
new  <	mov rax, [rdi + 32]>

4974:
old  <	; Return g_outChars>
new  <	mov [rdi + 72], rax>

4975:
old  <	mov ebx, [g_outChars]>
new  <>

4976:
old  <	mov rax, [rbp]>
new  < printf$6:>

4977:
old  <	mov rdi, [rbp + 16]>
new  <	; Call vprintf 40 0>

4978:
old  <	mov rbp, [rbp + 8]>
new  <	mov qword [rdi + 40], printf$7>

4979:
old  <	jmp rax>
new  <	mov [rdi + 48], rbp>

4980:
old  <>
new  <	mov [rdi + 56], rdi>

4981:
old  < printFormat$298:>
new  <	add rdi, 40>

4982:
old  <	; FunctionEnd printFormat>
new  <	mov rbp, rdi>

4983:
old  <>
new  <	jmp vprintf>

4984:
old  <section .text>
new  <>

4985:
old  <>
new  < printf$7:>

4986:
old  < printf:>
new  <	; PostCall 40>

4987:
old  <	; Empty>
new  <>

4988:
old  <>
new  < printf$8:>

4989:
old  < printf$1:>
new  <	; GetReturnValue Â£temporary1924>

4990:
old  <	; Address Â£temporary1891 format>
new  <>

4991:
old  <	mov rsi, rbp>
new  < printf$9:>

4992:
old  <	add rsi, 24>
new  <	; Return Â£temporary1924>

4993:
old  <>
new  <	mov rax, [rbp]>

4994:
old  < printf$2:>
new  <	mov rdi, [rbp + 16]>

4995:
old  <	; IntegralToIntegral Â£temporary1892 Â£temporary1891>
new  <	mov rbp, [rbp + 8]>

4996:
old  <>
new  <	jmp rax>

4997:
old  < printf$3:>
new  <>

4998:
old  <	; BinaryAdd arg_list Â£temporary1892 8>
new  < printf$10:>

4999:
old  <	add rsi, 8>
new  <	; FunctionEnd printf>

5000:
old  <	mov [rdi + 32], rsi>
new  <>

5001:
old  <>
new  <section .text>

5002:
old  < printf$4:>
new  <>

5003:
old  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < vprintf:>

5004:
old  <>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

5005:
old  < printf$5:>
new  <>

5006:
old  <	; Parameter pointer format 64>
new  < vprintf$1:>

5007:
old  <	mov rax, [rbp + 24]>
new  <	; Parameter pointer stdout 64>

5008:
old  <	mov [rdi + 64], rax>
new  <	mov rax, [stdout]>

5009:
old  <>
new  <	mov [rbp + 64], rax>

5010:
old  < printf$6:>
new  <>

5011:
old  <	; Parameter pointer arg_list 72>
new  < vprintf$2:>

5012:
old  <	mov rax, [rdi + 32]>
new  <	; Parameter pointer format 72>

5013:
old  <	mov [rdi + 72], rax>
new  <	mov rax, [rbp + 24]>

5014:
old  <>
new  <	mov [rbp + 72], rax>

5015:
old  < printf$7:>
new  <>

5016:
old  <	; Call vprintf 40 0>
new  < vprintf$3:>

5017:
old  <	mov qword [rdi + 40], printf$8>
new  <	; Parameter pointer arg_list 80>

5018:
old  <	mov [rdi + 48], rbp>
new  <	mov rax, [rbp + 32]>

5019:
old  <	mov [rdi + 56], rdi>
new  <	mov [rbp + 80], rax>

5020:
old  <	add rdi, 40>
new  <>

5021:
old  <	mov rbp, rdi>
new  < vprintf$4:>

5022:
old  <	jmp vprintf>
new  <	; Call vfprintf 40 0>

5023:
old  <>
new  <	mov qword [rbp + 40], vprintf$5>

5024:
old  < printf$8:>
new  <	mov [rbp + 48], rbp>

5025:
old  <	; PostCall 40>
new  <	add rbp, 40>

5026:
old  <>
new  <	jmp vfprintf>

5027:
old  < printf$9:>
new  <>

5028:
old  <	; GetReturnValue Â£temporary1895>
new  < vprintf$5:>

5029:
old  <>
new  <	; PostCall 40>

5030:
old  < printf$10:>
new  <>

5031:
old  <	; Return Â£temporary1895>
new  < vprintf$6:>

5032:
old  <	mov rax, [rbp]>
new  <	; GetReturnValue Â£temporary1926>

5033:
old  <	mov rdi, [rbp + 16]>
new  <>

5034:
old  <	mov rbp, [rbp + 8]>
new  < vprintf$7:>

5035:
old  <	jmp rax>
new  <	; Return Â£temporary1926>

5036:
old  <>
new  <	mov rax, [rbp]>

5037:
old  < printf$11:>
new  <	mov rdi, [rbp + 16]>

5038:
old  <	; FunctionEnd printf>
new  <	mov rbp, [rbp + 8]>

5039:
old  <>
new  <	jmp rax>

5040:
old  <section .text>
new  <>

5041:
old  <>
new  < vprintf$8:>

5042:
old  < vprintf:>
new  <	; FunctionEnd vprintf>

5043:
old  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

5044:
old  <>
new  <section .text>

5045:
old  < vprintf$1:>
new  <>

5046:
old  <	; Parameter pointer stdout 64>
new  < fprintf:>

5047:
old  <	mov rax, [stdout]>
new  <	; Address Â£temporary1927 format>

5048:
old  <	mov [rbp + 64], rax>
new  <	mov rsi, rbp>

5049:
old  <>
new  <	add rsi, 32>

5050:
old  < vprintf$2:>
new  <>

5051:
old  <	; Parameter pointer format 72>
new  < fprintf$1:>

5052:
old  <	mov rax, [rbp + 24]>
new  <	; IntegralToIntegral Â£temporary1928 Â£temporary1927>

5053:
old  <	mov [rbp + 72], rax>
new  <>

5054:
old  <>
new  < fprintf$2:>

5055:
old  < vprintf$3:>
new  <	; BinaryAdd arg_list Â£temporary1928 8>

5056:
old  <	; Parameter pointer arg_list 80>
new  <	add rsi, 8>

5057:
old  <	mov rax, [rbp + 32]>
new  <	mov [rdi + 40], rsi>

5058:
old  <	mov [rbp + 80], rax>
new  <>

5059:
old  <>
new  < fprintf$3:>

5060:
old  < vprintf$4:>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

5061:
old  <	; Call vfprintf 40 0>
new  <>

5062:
old  <	mov qword [rbp + 40], vprintf$5>
new  < fprintf$4:>

5063:
old  <	mov [rbp + 48], rbp>
new  <	; Parameter pointer outStream 72>

5064:
old  <	add rbp, 40>
new  <	mov rax, [rbp + 24]>

5065:
old  <	jmp vfprintf>
new  <	mov [rdi + 72], rax>

5067:
old  < vprintf$5:>
new  < fprintf$5:>

5068:
old  <	; PostCall 40>
new  <	; Parameter pointer format 80>

5069:
old  <>
new  <	mov rax, [rbp + 32]>

5070:
old  < vprintf$6:>
new  <	mov [rdi + 80], rax>

5071:
old  <	; GetReturnValue Â£temporary1897>
new  <>

5072:
old  <>
new  < fprintf$6:>

5073:
old  < vprintf$7:>
new  <	; Parameter pointer arg_list 88>

5074:
old  <	; Return Â£temporary1897>
new  <	mov rax, [rdi + 40]>

5075:
old  <	mov rax, [rbp]>
new  <	mov [rdi + 88], rax>

5076:
old  <	mov rdi, [rbp + 16]>
new  <>

5077:
old  <	mov rbp, [rbp + 8]>
new  < fprintf$7:>

5078:
old  <	jmp rax>
new  <	; Call vfprintf 48 0>

5079:
old  <>
new  <	mov qword [rdi + 48], fprintf$8>

5080:
old  < vprintf$8:>
new  <	mov [rdi + 56], rbp>

5081:
old  <	; FunctionEnd vprintf>
new  <	mov [rdi + 64], rdi>

5082:
old  <>
new  <	add rdi, 48>

5083:
old  <section .text>
new  <	mov rbp, rdi>

5084:
old  <>
new  <	jmp vfprintf>

5085:
old  < fprintf:>
new  <>

5086:
old  <	; Empty>
new  < fprintf$8:>

5087:
old  <>
new  <	; PostCall 48>

5088:
old  < fprintf$1:>
new  <>

5089:
old  <	; Address Â£temporary1898 format>
new  < fprintf$9:>

5090:
old  <	mov rsi, rbp>
new  <	; GetReturnValue Â£temporary1931>

5091:
old  <	add rsi, 32>
new  <>

5092:
old  <>
new  < fprintf$10:>

5093:
old  < fprintf$2:>
new  <	; Return Â£temporary1931>

5094:
old  <	; IntegralToIntegral Â£temporary1899 Â£temporary1898>
new  <	mov rax, [rbp]>

5095:
old  <>
new  <	mov rdi, [rbp + 16]>

5096:
old  < fprintf$3:>
new  <	mov rbp, [rbp + 8]>

5097:
old  <	; BinaryAdd arg_list Â£temporary1899 8>
new  <	jmp rax>

5098:
old  <	add rsi, 8>
new  <>

5099:
old  <	mov [rdi + 40], rsi>
new  < fprintf$11:>

5100:
old  <>
new  <	; FunctionEnd fprintf>

5101:
old  < fprintf$4:>
new  <>

5102:
old  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <section .text>

5104:
old  < fprintf$5:>
new  < vfprintf:>

5105:
old  <	; Parameter pointer outStream 72>
new  <	; Assign g_outStatus 0>

5106:
old  <	mov rax, [rbp + 24]>
new  <	mov dword [g_outStatus], 0>

5107:
old  <	mov [rdi + 72], rax>
new  <>

5108:
old  <>
new  < vfprintf$1:>

5109:
old  < fprintf$6:>
new  <	; IntegralToIntegral Â£temporary1933 outStream>

5110:
old  <	; Parameter pointer format 80>
new  <	mov rax, [rbp + 24]>

5111:
old  <	mov rax, [rbp + 32]>
new  <>

5112:
old  <	mov [rdi + 80], rax>
new  < vfprintf$2:>

5113:
old  <>
new  <	; Assign g_outDevice Â£temporary1933>

5114:
old  < fprintf$7:>
new  <	mov [g_outDevice], rax>

5115:
old  <	; Parameter pointer arg_list 88>
new  <>

5116:
old  <	mov rax, [rdi + 40]>
new  < vfprintf$3:>

5117:
old  <	mov [rdi + 88], rax>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

5119:
old  < fprintf$8:>
new  < vfprintf$4:>

5120:
old  <	; Call vfprintf 48 0>
new  <	; Parameter pointer format 72>

5121:
old  <	mov qword [rdi + 48], fprintf$9>
new  <	mov rax, [rbp + 32]>

5122:
old  <	mov [rdi + 56], rbp>
new  <	mov [rbp + 72], rax>

5123:
old  <	mov [rdi + 64], rdi>
new  <>

5124:
old  <	add rdi, 48>
new  < vfprintf$5:>

5125:
old  <	mov rbp, rdi>
new  <	; Parameter pointer arg_list 80>

5126:
old  <	jmp vfprintf>
new  <	mov rax, [rbp + 40]>

5127:
old  <>
new  <	mov [rbp + 80], rax>

5128:
old  < fprintf$9:>
new  <>

5129:
old  <	; PostCall 48>
new  < vfprintf$6:>

5130:
old  <>
new  <	; Call printFormat 48 0>

5131:
old  < fprintf$10:>
new  <	mov qword [rbp + 48], vfprintf$7>

5132:
old  <	; GetReturnValue Â£temporary1902>
new  <	mov [rbp + 56], rbp>

5133:
old  <>
new  <	add rbp, 48>

5134:
old  < fprintf$11:>
new  <	jmp printFormat>

5135:
old  <	; Return Â£temporary1902>
new  <>

5136:
old  <	mov rax, [rbp]>
new  < vfprintf$7:>

5137:
old  <	mov rdi, [rbp + 16]>
new  <	; PostCall 48>

5138:
old  <	mov rbp, [rbp + 8]>
new  <>

5139:
old  <	jmp rax>
new  < vfprintf$8:>

5140:
old  <>
new  <	; GetReturnValue Â£temporary1934>

5141:
old  < fprintf$12:>
new  <>

5142:
old  <	; FunctionEnd fprintf>
new  < vfprintf$9:>

5143:
old  <>
new  <	; Return Â£temporary1934>

5144:
old  <section .text>
new  <	mov rax, [rbp]>

5145:
old  <>
new  <	mov rdi, [rbp + 16]>

5146:
old  < vfprintf:>
new  <	mov rbp, [rbp + 8]>

5147:
old  <	; Assign g_outStatus 0>
new  <	jmp rax>

5148:
old  <	mov dword [g_outStatus], 0>
new  <>

5149:
old  <>
new  < vfprintf$10:>

5150:
old  < vfprintf$1:>
new  <	; FunctionEnd vfprintf>

5151:
old  <	; IntegralToIntegral Â£temporary1904 outStream>
new  <>

5152:
old  <	mov rax, [rbp + 24]>
new  <section .text>

5154:
old  < vfprintf$2:>
new  < sprintf:>

5155:
old  <	; Assign g_outDevice Â£temporary1904>
new  <	; Address Â£temporary1935 format>

5156:
old  <	mov [g_outDevice], rax>
new  <	mov rsi, rbp>

5157:
old  <>
new  <	add rsi, 32>

5158:
old  < vfprintf$3:>
new  <>

5159:
old  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < sprintf$1:>

5160:
old  <>
new  <	; IntegralToIntegral Â£temporary1936 Â£temporary1935>

5161:
old  < vfprintf$4:>
new  <>

5162:
old  <	; Parameter pointer format 72>
new  < sprintf$2:>

5163:
old  <	mov rax, [rbp + 32]>
new  <	; BinaryAdd arg_list Â£temporary1936 8>

5164:
old  <	mov [rbp + 72], rax>
new  <	add rsi, 8>

5165:
old  <>
new  <	mov [rdi + 40], rsi>

5166:
old  < vfprintf$5:>
new  <>

5167:
old  <	; Parameter pointer arg_list 80>
new  < sprintf$3:>

5168:
old  <	mov rax, [rbp + 40]>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

5169:
old  <	mov [rbp + 80], rax>
new  <>

5170:
old  <>
new  < sprintf$4:>

5171:
old  < vfprintf$6:>
new  <	; Parameter pointer outString 72>

5172:
old  <	; Call printFormat 48 0>
new  <	mov rax, [rbp + 24]>

5173:
old  <	mov qword [rbp + 48], vfprintf$7>
new  <	mov [rdi + 72], rax>

5174:
old  <	mov [rbp + 56], rbp>
new  <>

5175:
old  <	add rbp, 48>
new  < sprintf$5:>

5176:
old  <	jmp printFormat>
new  <	; Parameter pointer format 80>

5177:
old  <>
new  <	mov rax, [rbp + 32]>

5178:
old  < vfprintf$7:>
new  <	mov [rdi + 80], rax>

5179:
old  <	; PostCall 48>
new  <>

5180:
old  <>
new  < sprintf$6:>

5181:
old  < vfprintf$8:>
new  <	; Parameter pointer arg_list 88>

5182:
old  <	; GetReturnValue Â£temporary1905>
new  <	mov rax, [rdi + 40]>

5183:
old  <>
new  <	mov [rdi + 88], rax>

5184:
old  < vfprintf$9:>
new  <>

5185:
old  <	; Return Â£temporary1905>
new  < sprintf$7:>

5186:
old  <	mov rax, [rbp]>
new  <	; Call vsprintf 48 0>

5187:
old  <	mov rdi, [rbp + 16]>
new  <	mov qword [rdi + 48], sprintf$8>

5188:
old  <	mov rbp, [rbp + 8]>
new  <	mov [rdi + 56], rbp>

5189:
old  <	jmp rax>
new  <	mov [rdi + 64], rdi>

5190:
old  <>
new  <	add rdi, 48>

5191:
old  < vfprintf$10:>
new  <	mov rbp, rdi>

5192:
old  <	; FunctionEnd vfprintf>
new  <	jmp vsprintf>

5194:
old  <section .text>
new  < sprintf$8:>

5195:
old  <>
new  <	; PostCall 48>

5196:
old  < sprintf:>
new  <>

5197:
old  <	; Empty>
new  < sprintf$9:>

5198:
old  <>
new  <	; GetReturnValue Â£temporary1939>

5199:
old  < sprintf$1:>
new  <>

5200:
old  <	; Address Â£temporary1906 format>
new  < sprintf$10:>

5201:
old  <	mov rsi, rbp>
new  <	; Return Â£temporary1939>

5202:
old  <	add rsi, 32>
new  <	mov rax, [rbp]>

5203:
old  <>
new  <	mov rdi, [rbp + 16]>

5204:
old  < sprintf$2:>
new  <	mov rbp, [rbp + 8]>

5205:
old  <	; IntegralToIntegral Â£temporary1907 Â£temporary1906>
new  <	jmp rax>

5207:
old  < sprintf$3:>
new  < sprintf$11:>

5208:
old  <	; BinaryAdd arg_list Â£temporary1907 8>
new  <	; FunctionEnd sprintf>

5209:
old  <	add rsi, 8>
new  <>

5210:
old  <	mov [rdi + 40], rsi>
new  <section .text>

5212:
old  < sprintf$4:>
new  < vsprintf:>

5213:
old  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Assign g_outStatus 1>

5214:
old  <>
new  <	mov dword [g_outStatus], 1>

5215:
old  < sprintf$5:>
new  <>

5216:
old  <	; Parameter pointer outString 72>
new  < vsprintf$1:>

5217:
old  <	mov rax, [rbp + 24]>
new  <	; IntegralToIntegral Â£temporary1941 outString>

5218:
old  <	mov [rdi + 72], rax>
new  <	mov rax, [rbp + 24]>

5220:
old  < sprintf$6:>
new  < vsprintf$2:>

5221:
old  <	; Parameter pointer format 80>
new  <	; Assign g_outDevice Â£temporary1941>

5222:
old  <	mov rax, [rbp + 32]>
new  <	mov [g_outDevice], rax>

5223:
old  <	mov [rdi + 80], rax>
new  <>

5224:
old  <>
new  < vsprintf$3:>

5225:
old  < sprintf$7:>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

5226:
old  <	; Parameter pointer arg_list 88>
new  <>

5227:
old  <	mov rax, [rdi + 40]>
new  < vsprintf$4:>

5228:
old  <	mov [rdi + 88], rax>
new  <	; Parameter pointer format 72>

5229:
old  <>
new  <	mov rax, [rbp + 32]>

5230:
old  < sprintf$8:>
new  <	mov [rbp + 72], rax>

5231:
old  <	; Call vsprintf 48 0>
new  <>

5232:
old  <	mov qword [rdi + 48], sprintf$9>
new  < vsprintf$5:>

5233:
old  <	mov [rdi + 56], rbp>
new  <	; Parameter pointer arg_list 80>

5234:
old  <	mov [rdi + 64], rdi>
new  <	mov rax, [rbp + 40]>

5235:
old  <	add rdi, 48>
new  <	mov [rbp + 80], rax>

5236:
old  <	mov rbp, rdi>
new  <>

5237:
old  <	jmp vsprintf>
new  < vsprintf$6:>

5238:
old  <>
new  <	; Call printFormat 48 0>

5239:
old  < sprintf$9:>
new  <	mov qword [rbp + 48], vsprintf$7>

5240:
old  <	; PostCall 48>
new  <	mov [rbp + 56], rbp>

5241:
old  <>
new  <	add rbp, 48>

5242:
old  < sprintf$10:>
new  <	jmp printFormat>

5243:
old  <	; GetReturnValue Â£temporary1910>
new  <>

5244:
old  <>
new  < vsprintf$7:>

5245:
old  < sprintf$11:>
new  <	; PostCall 48>

5246:
old  <	; Return Â£temporary1910>
new  <>

5247:
old  <	mov rax, [rbp]>
new  < vsprintf$8:>

5248:
old  <	mov rdi, [rbp + 16]>
new  <	; GetReturnValue Â£temporary1942>

5249:
old  <	mov rbp, [rbp + 8]>
new  <>

5250:
old  <	jmp rax>
new  < vsprintf$9:>

5251:
old  <>
new  <	; Return Â£temporary1942>

5252:
old  < sprintf$12:>
new  <	mov rax, [rbp]>

5253:
old  <	; FunctionEnd sprintf>
new  <	mov rdi, [rbp + 16]>

5254:
old  <>
new  <	mov rbp, [rbp + 8]>

5255:
old  <section .text>
new  <	jmp rax>

5257:
old  < vsprintf:>
new  < vsprintf$10:>

5258:
old  <	; Assign g_outStatus 1>
new  <	; FunctionEnd vsprintf>

14:
old  <	global print_heap2>
new  <	global g_funcArray>

15:
old  <	global g_funcArray>
new  <	global atexit>

16:
old  <	global atexit>
new  <	global exit>

17:
old  <	global exit>
new  <	global swap>

18:
old  <	global swap>
new  <	global qsort>

19:
old  <	global qsort>
new  <	global @abs>

20:
old  <	global @abs>
new  <	global labs>

21:
old  <	global labs>
new  <	global div>

22:
old  <	global div>
new  <	global ldiv>

23:
old  <	global ldiv>
new  <>

24:
old  <>
new  <	extern sscanf>

25:
old  <	extern sscanf>
new  <	extern errno>

26:
old  <	extern printf>
new  <	extern $StackTop>

27:
old  <	extern errno>
new  <>

28:
old  <	extern $StackTop>
new  <>

29:
old  <>
new  <section .text>

31:
old  <section .text>
new  < atoi:>

32:
old  <>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

33:
old  < atoi:>
new  <>

34:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < atoi$1:>

35:
old  <>
new  <	; Parameter pointer s 56>

36:
old  < atoi$1:>
new  <	mov rax, [rbp + 24]>

37:
old  <	; Parameter pointer s 56>
new  <	mov [rbp + 56], rax>

38:
old  <	mov rax, [rbp + 24]>
new  <>

39:
old  <	mov [rbp + 56], rax>
new  < atoi$2:>

40:
old  <>
new  <	; Parameter pointer 0 64>

41:
old  < atoi$2:>
new  <	mov qword [rbp + 64], 0>

42:
old  <	; Parameter pointer 0 64>
new  <>

43:
old  <	mov qword [rbp + 64], 0>
new  < atoi$3:>

44:
old  <>
new  <	; Parameter signedint 10 72>

45:
old  < atoi$3:>
new  <	mov dword [rbp + 72], 10>

46:
old  <	; Parameter signedint 10 72>
new  <>

47:
old  <	mov dword [rbp + 72], 10>
new  < atoi$4:>

48:
old  <>
new  <	; Call strtol 32 0>

49:
old  < atoi$4:>
new  <	mov qword [rbp + 32], atoi$5>

50:
old  <	; Call strtol 32 0>
new  <	mov [rbp + 40], rbp>

51:
old  <	mov qword [rbp + 32], atoi$5>
new  <	add rbp, 32>

52:
old  <	mov [rbp + 40], rbp>
new  <	jmp strtol>

53:
old  <	add rbp, 32>
new  <>

54:
old  <	jmp strtol>
new  < atoi$5:>

55:
old  <>
new  <	; PostCall 32>

56:
old  < atoi$5:>
new  <>

57:
old  <	; PostCall 32>
new  < atoi$6:>

58:
old  <>
new  <	; GetReturnValue Â£temporary1943>

59:
old  < atoi$6:>
new  <>

60:
old  <	; GetReturnValue Â£temporary1914>
new  < atoi$7:>

61:
old  <>
new  <	; IntegralToIntegral Â£temporary1944 Â£temporary1943>

62:
old  < atoi$7:>
new  <	cmp rbx, 0>

63:
old  <	; IntegralToIntegral Â£temporary1915 Â£temporary1914>
new  <	jge atoi$8>

64:
old  <	cmp rbx, 0>
new  <	neg rbx>

65:
old  <	jge atoi$8>
new  <	neg ebx>

66:
old  <	neg rbx>
new  <>

67:
old  <	neg ebx>
new  < atoi$8:>

68:
old  <>
new  <	; Return Â£temporary1944>

69:
old  < atoi$8:>
new  <	mov rax, [rbp]>

70:
old  <	; Return Â£temporary1915>
new  <	mov rdi, [rbp + 16]>

71:
old  <	mov rax, [rbp]>
new  <	mov rbp, [rbp + 8]>

72:
old  <	mov rdi, [rbp + 16]>
new  <	jmp rax>

73:
old  <	mov rbp, [rbp + 8]>
new  <>

74:
old  <	jmp rax>
new  < atoi$9:>

75:
old  <>
new  <	; FunctionEnd atoi>

76:
old  < atoi$9:>
new  <>

77:
old  <	; FunctionEnd atoi>
new  <section .text>

79:
old  <section .text>
new  < atol:>

80:
old  <>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

81:
old  < atol:>
new  <>

82:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < atol$1:>

83:
old  <>
new  <	; Parameter pointer s 56>

84:
old  < atol$1:>
new  <	mov rax, [rbp + 24]>

85:
old  <	; Parameter pointer s 56>
new  <	mov [rbp + 56], rax>

86:
old  <	mov rax, [rbp + 24]>
new  <>

87:
old  <	mov [rbp + 56], rax>
new  < atol$2:>

88:
old  <>
new  <	; Parameter pointer 0 64>

89:
old  < atol$2:>
new  <	mov qword [rbp + 64], 0>

90:
old  <	; Parameter pointer 0 64>
new  <>

91:
old  <	mov qword [rbp + 64], 0>
new  < atol$3:>

92:
old  <>
new  <	; Parameter signedint 10 72>

93:
old  < atol$3:>
new  <	mov dword [rbp + 72], 10>

94:
old  <	; Parameter signedint 10 72>
new  <>

95:
old  <	mov dword [rbp + 72], 10>
new  < atol$4:>

96:
old  <>
new  <	; Call strtol 32 0>

97:
old  < atol$4:>
new  <	mov qword [rbp + 32], atol$5>

98:
old  <	; Call strtol 32 0>
new  <	mov [rbp + 40], rbp>

99:
old  <	mov qword [rbp + 32], atol$5>
new  <	add rbp, 32>

100:
old  <	mov [rbp + 40], rbp>
new  <	jmp strtol>

101:
old  <	add rbp, 32>
new  <>

102:
old  <	jmp strtol>
new  < atol$5:>

103:
old  <>
new  <	; PostCall 32>

104:
old  < atol$5:>
new  <>

105:
old  <	; PostCall 32>
new  < atol$6:>

106:
old  <>
new  <	; GetReturnValue Â£temporary1945>

107:
old  < atol$6:>
new  <>

108:
old  <	; GetReturnValue Â£temporary1916>
new  < atol$7:>

109:
old  <>
new  <	; Return Â£temporary1945>

110:
old  < atol$7:>
new  <	mov rax, [rbp]>

111:
old  <	; Return Â£temporary1916>
new  <	mov rdi, [rbp + 16]>

112:
old  <	mov rax, [rbp]>
new  <	mov rbp, [rbp + 8]>

113:
old  <	mov rdi, [rbp + 16]>
new  <	jmp rax>

114:
old  <	mov rbp, [rbp + 8]>
new  <>

115:
old  <	jmp rax>
new  < atol$8:>

116:
old  <>
new  <	; FunctionEnd atol>

117:
old  < atol$8:>
new  <>

118:
old  <	; FunctionEnd atol>
new  <section .data>

120:
old  <section .data>
new  <string_25li25n#:>

121:
old  <>
new  <	; Initializer String %li%n>

122:
old  <string_25li25n#:>
new  <	db "%li%n", 0>

123:
old  <	; Initializer String %li%n>
new  <>

124:
old  <	db "%li%n", 0>
new  <section .text>

126:
old  <section .text>
new  < strtol:>

127:
old  <>
new  <	; Assign chars 0>

128:
old  < strtol:>
new  <	mov dword [rbp + 44], 0>

129:
old  <	; Assign chars 0>
new  <>

130:
old  <	mov dword [rbp + 44], 0>
new  < strtol$1:>

131:
old  <>
new  <	; Assign value 0>

132:
old  < strtol$1:>
new  <	mov qword [rbp + 48], 0>

133:
old  <	; Assign value 0>
new  <>

134:
old  <	mov qword [rbp + 48], 0>
new  < strtol$2:>

135:
old  <>
new  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

136:
old  < strtol$2:>
new  <>

137:
old  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < strtol$3:>

138:
old  <>
new  <	; Parameter pointer s 80>

139:
old  < strtol$3:>
new  <	mov rax, [rbp + 24]>

140:
old  <	; Parameter pointer s 80>
new  <	mov [rbp + 80], rax>

141:
old  <	mov rax, [rbp + 24]>
new  <>

142:
old  <	mov [rbp + 80], rax>
new  < strtol$4:>

143:
old  <>
new  <	; Parameter pointer "%li%n" 88>

144:
old  < strtol$4:>
new  <	mov qword [rbp + 88], string_25li25n#>

145:
old  <	; Parameter pointer "%li%n" 88>
new  <>

146:
old  <	mov qword [rbp + 88], string_25li25n#>
new  < strtol$5:>

147:
old  <>
new  <	; Address Â£temporary1946 value>

148:
old  < strtol$5:>
new  <	mov rsi, rbp>

149:
old  <	; Address Â£temporary1917 value>
new  <	add rsi, 48>

150:
old  <	mov rsi, rbp>
new  <>

151:
old  <	add rsi, 48>
new  < strtol$6:>

152:
old  <>
new  <	; Parameter pointer Â£temporary1946 96>

153:
old  < strtol$6:>
new  <	mov [rbp + 96], rsi>

154:
old  <	; Parameter pointer Â£temporary1917 96>
new  <>

155:
old  <	mov [rbp + 96], rsi>
new  < strtol$7:>

156:
old  <>
new  <	; Address Â£temporary1947 chars>

157:
old  < strtol$7:>
new  <	mov rsi, rbp>

158:
old  <	; Address Â£temporary1918 chars>
new  <	add rsi, 44>

159:
old  <	mov rsi, rbp>
new  <>

160:
old  <	add rsi, 44>
new  < strtol$8:>

161:
old  <>
new  <	; Parameter pointer Â£temporary1947 104>

162:
old  < strtol$8:>
new  <	mov [rbp + 104], rsi>

163:
old  <	; Parameter pointer Â£temporary1918 104>
new  <>

164:
old  <	mov [rbp + 104], rsi>
new  < strtol$9:>

165:
old  <>
new  <	; Call sscanf 56 16>

166:
old  < strtol$9:>
new  <	mov qword [rbp + 56], strtol$10>

167:
old  <	; Call sscanf 56 16>
new  <	mov [rbp + 64], rbp>

168:
old  <	mov qword [rbp + 56], strtol$10>
new  <	add rbp, 56>

169:
old  <	mov [rbp + 64], rbp>
new  <	mov rdi, rbp>

170:
old  <	add rbp, 56>
new  <	add rdi, 16>

171:
old  <	mov rdi, rbp>
new  <	jmp sscanf>

172:
old  <	add rdi, 16>
new  <>

173:
old  <	jmp sscanf>
new  < strtol$10:>

174:
old  <>
new  <	; PostCall 56>

175:
old  < strtol$10:>
new  <>

176:
old  <	; PostCall 56>
new  < strtol$11:>

177:
old  <>
new  <	; Equal 15 endp 0>

178:
old  < strtol$11:>
new  <	cmp qword [rbp + 32], 0>

179:
old  <	; Equal 15 endp 0>
new  <	je strtol$15>

180:
old  <	cmp qword [rbp + 32], 0>
new  <>

181:
old  <	je strtol$15>
new  < strtol$12:>

182:
old  <>
new  <	; Dereference Â£temporary1950 -> endp endp 0>

183:
old  < strtol$12:>
new  <	mov rsi, [rbp + 32]>

184:
old  <	; Dereference Â£temporary1921 -> endp endp 0>
new  <>

185:
old  <	mov rsi, [rbp + 32]>
new  < strtol$13:>

186:
old  <>
new  <	; IntegralToIntegral Â£temporary1951 chars>

187:
old  < strtol$13:>
new  <	mov eax, [rbp + 44]>

188:
old  <	; IntegralToIntegral Â£temporary1922 chars>
new  <	mov rbx, 4294967295>

189:
old  <	mov eax, [rbp + 44]>
new  <	and rax, rbx>

190:
old  <	mov rbx, 4294967295>
new  <>

191:
old  <	and rax, rbx>
new  < strtol$14:>

192:
old  <>
new  <	; BinaryAdd Â£temporary1950 -> endp s Â£temporary1951>

193:
old  < strtol$14:>
new  <	mov rbx, [rbp + 24]>

194:
old  <	; BinaryAdd Â£temporary1921 -> endp s Â£temporary1922>
new  <	add rbx, rax>

195:
old  <	mov rbx, [rbp + 24]>
new  <	mov [rsi], rbx>

196:
old  <	add rbx, rax>
new  <>

197:
old  <	mov [rsi], rbx>
new  < strtol$15:>

198:
old  <>
new  <	; Return value>

199:
old  < strtol$15:>
new  <	mov rbx, [rbp + 48]>

200:
old  <	; Return value>
new  <	mov rax, [rbp]>

201:
old  <	mov rbx, [rbp + 48]>
new  <	mov rdi, [rbp + 16]>

202:
old  <	mov rax, [rbp]>
new  <	mov rbp, [rbp + 8]>

203:
old  <	mov rdi, [rbp + 16]>
new  <	jmp rax>

204:
old  <	mov rbp, [rbp + 8]>
new  <>

205:
old  <	jmp rax>
new  < strtol$16:>

206:
old  <>
new  <	; FunctionEnd strtol>

207:
old  < strtol$16:>
new  <>

208:
old  <	; FunctionEnd strtol>
new  <section .data>

210:
old  <section .data>
new  <string_25lu25n#:>

211:
old  <>
new  <	; Initializer String %lu%n>

212:
old  <string_25lu25n#:>
new  <	db "%lu%n", 0>

213:
old  <	; Initializer String %lu%n>
new  <>

214:
old  <	db "%lu%n", 0>
new  <section .text>

216:
old  <section .text>
new  < strtoul:>

217:
old  <>
new  <	; Assign chars 0>

218:
old  < strtoul:>
new  <	mov dword [rbp + 44], 0>

219:
old  <	; Assign chars 0>
new  <>

220:
old  <	mov dword [rbp + 44], 0>
new  < strtoul$1:>

221:
old  <>
new  <	; Assign value 0>

222:
old  < strtoul$1:>
new  <	mov qword [rbp + 48], 0>

223:
old  <	; Assign value 0>
new  <>

224:
old  <	mov qword [rbp + 48], 0>
new  < strtoul$2:>

225:
old  <>
new  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

226:
old  < strtoul$2:>
new  <>

227:
old  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < strtoul$3:>

228:
old  <>
new  <	; Parameter pointer s 80>

229:
old  < strtoul$3:>
new  <	mov rax, [rbp + 24]>

230:
old  <	; Parameter pointer s 80>
new  <	mov [rbp + 80], rax>

231:
old  <	mov rax, [rbp + 24]>
new  <>

232:
old  <	mov [rbp + 80], rax>
new  < strtoul$4:>

233:
old  <>
new  <	; Parameter pointer "%lu%n" 88>

234:
old  < strtoul$4:>
new  <	mov qword [rbp + 88], string_25lu25n#>

235:
old  <	; Parameter pointer "%lu%n" 88>
new  <>

236:
old  <	mov qword [rbp + 88], string_25lu25n#>
new  < strtoul$5:>

237:
old  <>
new  <	; Address Â£temporary1956 value>

238:
old  < strtoul$5:>
new  <	mov rsi, rbp>

239:
old  <	; Address Â£temporary1927 value>
new  <	add rsi, 48>

240:
old  <	mov rsi, rbp>
new  <>

241:
old  <	add rsi, 48>
new  < strtoul$6:>

242:
old  <>
new  <	; Parameter pointer Â£temporary1956 96>

243:
old  < strtoul$6:>
new  <	mov [rbp + 96], rsi>

244:
old  <	; Parameter pointer Â£temporary1927 96>
new  <>

245:
old  <	mov [rbp + 96], rsi>
new  < strtoul$7:>

246:
old  <>
new  <	; Address Â£temporary1957 chars>

247:
old  < strtoul$7:>
new  <	mov rsi, rbp>

248:
old  <	; Address Â£temporary1928 chars>
new  <	add rsi, 44>

249:
old  <	mov rsi, rbp>
new  <>

250:
old  <	add rsi, 44>
new  < strtoul$8:>

251:
old  <>
new  <	; Parameter pointer Â£temporary1957 104>

252:
old  < strtoul$8:>
new  <	mov [rbp + 104], rsi>

253:
old  <	; Parameter pointer Â£temporary1928 104>
new  <>

254:
old  <	mov [rbp + 104], rsi>
new  < strtoul$9:>

255:
old  <>
new  <	; Call sscanf 56 16>

256:
old  < strtoul$9:>
new  <	mov qword [rbp + 56], strtoul$10>

257:
old  <	; Call sscanf 56 16>
new  <	mov [rbp + 64], rbp>

258:
old  <	mov qword [rbp + 56], strtoul$10>
new  <	add rbp, 56>

259:
old  <	mov [rbp + 64], rbp>
new  <	mov rdi, rbp>

260:
old  <	add rbp, 56>
new  <	add rdi, 16>

261:
old  <	mov rdi, rbp>
new  <	jmp sscanf>

262:
old  <	add rdi, 16>
new  <>

263:
old  <	jmp sscanf>
new  < strtoul$10:>

264:
old  <>
new  <	; PostCall 56>

265:
old  < strtoul$10:>
new  <>

266:
old  <	; PostCall 56>
new  < strtoul$11:>

267:
old  <>
new  <	; Equal 15 endp 0>

268:
old  < strtoul$11:>
new  <	cmp qword [rbp + 32], 0>

269:
old  <	; Equal 15 endp 0>
new  <	je strtoul$15>

270:
old  <	cmp qword [rbp + 32], 0>
new  <>

271:
old  <	je strtoul$15>
new  < strtoul$12:>

272:
old  <>
new  <	; Dereference Â£temporary1960 -> endp endp 0>

273:
old  < strtoul$12:>
new  <	mov rsi, [rbp + 32]>

274:
old  <	; Dereference Â£temporary1931 -> endp endp 0>
new  <>

275:
old  <	mov rsi, [rbp + 32]>
new  < strtoul$13:>

276:
old  <>
new  <	; IntegralToIntegral Â£temporary1961 chars>

277:
old  < strtoul$13:>
new  <	mov eax, [rbp + 44]>

278:
old  <	; IntegralToIntegral Â£temporary1932 chars>
new  <	mov rbx, 4294967295>

279:
old  <	mov eax, [rbp + 44]>
new  <	and rax, rbx>

280:
old  <	mov rbx, 4294967295>
new  <>

281:
old  <	and rax, rbx>
new  < strtoul$14:>

282:
old  <>
new  <	; BinaryAdd Â£temporary1960 -> endp s Â£temporary1961>

283:
old  < strtoul$14:>
new  <	mov rbx, [rbp + 24]>

284:
old  <	; BinaryAdd Â£temporary1931 -> endp s Â£temporary1932>
new  <	add rbx, rax>

285:
old  <	mov rbx, [rbp + 24]>
new  <	mov [rsi], rbx>

286:
old  <	add rbx, rax>
new  <>

287:
old  <	mov [rsi], rbx>
new  < strtoul$15:>

288:
old  <>
new  <	; Return value>

289:
old  < strtoul$15:>
new  <	mov rbx, [rbp + 48]>

290:
old  <	; Return value>
new  <	mov rax, [rbp]>

291:
old  <	mov rbx, [rbp + 48]>
new  <	mov rdi, [rbp + 16]>

292:
old  <	mov rax, [rbp]>
new  <	mov rbp, [rbp + 8]>

293:
old  <	mov rdi, [rbp + 16]>
new  <	jmp rax>

294:
old  <	mov rbp, [rbp + 8]>
new  <>

295:
old  <	jmp rax>
new  < strtoul$16:>

296:
old  <>
new  <	; FunctionEnd strtoul>

297:
old  < strtoul$16:>
new  <>

298:
old  <	; FunctionEnd strtoul>
new  <section .text>

300:
old  <section .text>
new  < atof:>

301:
old  <>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

302:
old  < atof:>
new  <>

303:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < atof$1:>

304:
old  <>
new  <	; Parameter pointer s 56>

305:
old  < atof$1:>
new  <	mov rax, [rbp + 24]>

306:
old  <	; Parameter pointer s 56>
new  <	mov [rbp + 56], rax>

307:
old  <	mov rax, [rbp + 24]>
new  <>

308:
old  <	mov [rbp + 56], rax>
new  < atof$2:>

309:
old  <>
new  <	; Parameter pointer 0 64>

310:
old  < atof$2:>
new  <	mov qword [rbp + 64], 0>

311:
old  <	; Parameter pointer 0 64>
new  <>

312:
old  <	mov qword [rbp + 64], 0>
new  < atof$3:>

313:
old  <>
new  <	; Call strtod 32 0>

314:
old  < atof$3:>
new  <	mov qword [rbp + 32], atof$4>

315:
old  <	; Call strtod 32 0>
new  <	mov [rbp + 40], rbp>

316:
old  <	mov qword [rbp + 32], atof$4>
new  <	add rbp, 32>

317:
old  <	mov [rbp + 40], rbp>
new  <	jmp strtod>

318:
old  <	add rbp, 32>
new  <>

319:
old  <	jmp strtod>
new  < atof$4:>

320:
old  <>
new  <	; PostCall 32>

321:
old  < atof$4:>
new  <>

322:
old  <	; PostCall 32>
new  < atof$5:>

323:
old  <>
new  <	; GetReturnValue Â£temporary1966>

324:
old  < atof$5:>
new  <>

325:
old  <	; GetReturnValue Â£temporary1937>
new  < atof$6:>

326:
old  <>
new  <	; Return Â£temporary1966>

327:
old  < atof$6:>
new  <	mov rax, [rbp]>

328:
old  <	; Return Â£temporary1937>
new  <	mov rdi, [rbp + 16]>

329:
old  <	mov rax, [rbp]>
new  <	mov rbp, [rbp + 8]>

330:
old  <	mov rdi, [rbp + 16]>
new  <	jmp rax>

331:
old  <	mov rbp, [rbp + 8]>
new  <>

332:
old  <	jmp rax>
new  < atof$7:>

333:
old  <>
new  <	; FunctionEnd atof>

334:
old  < atof$7:>
new  <>

335:
old  <	; FunctionEnd atof>
new  <section .data>

337:
old  <section .data>
new  <string_25lf25n#:>

338:
old  <>
new  <	; Initializer String %lf%n>

339:
old  <string_25lf25n#:>
new  <	db "%lf%n", 0>

340:
old  <	; Initializer String %lf%n>
new  <>

341:
old  <	db "%lf%n", 0>
new  <section .text>

343:
old  <section .text>
new  < strtod:>

344:
old  <>
new  <	; Assign chars 0>

345:
old  < strtod:>
new  <	mov dword [rbp + 40], 0>

346:
old  <	; Assign chars 0>
new  <>

347:
old  <	mov dword [rbp + 40], 0>
new  < strtod$1:>

348:
old  <>
new  <	; PushFloat 0>

349:
old  < strtod$1:>
new  <	fldz>

350:
old  <	; PushFloat 0>
new  <>

351:
old  <	fldz>
new  < strtod$2:>

352:
old  <>
new  <	; PopFloat value>

353:
old  < strtod$2:>
new  <	fstp qword [rbp + 44]>

354:
old  <	; PopFloat value>
new  <>

355:
old  <	fstp qword [rbp + 44]>
new  < strtod$3:>

356:
old  <>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

357:
old  < strtod$3:>
new  <>

358:
old  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < strtod$4:>

359:
old  <>
new  <	; Parameter pointer s 76>

360:
old  < strtod$4:>
new  <	mov rax, [rbp + 24]>

361:
old  <	; Parameter pointer s 76>
new  <	mov [rbp + 76], rax>

362:
old  <	mov rax, [rbp + 24]>
new  <>

363:
old  <	mov [rbp + 76], rax>
new  < strtod$5:>

364:
old  <>
new  <	; Parameter pointer "%lf%n" 84>

365:
old  < strtod$5:>
new  <	mov qword [rbp + 84], string_25lf25n#>

366:
old  <	; Parameter pointer "%lf%n" 84>
new  <>

367:
old  <	mov qword [rbp + 84], string_25lf25n#>
new  < strtod$6:>

368:
old  <>
new  <	; Address Â£temporary1967 value>

369:
old  < strtod$6:>
new  <	mov rsi, rbp>

370:
old  <	; Address Â£temporary1938 value>
new  <	add rsi, 44>

371:
old  <	mov rsi, rbp>
new  <>

372:
old  <	add rsi, 44>
new  < strtod$7:>

373:
old  <>
new  <	; Parameter pointer Â£temporary1967 92>

374:
old  < strtod$7:>
new  <	mov [rbp + 92], rsi>

375:
old  <	; Parameter pointer Â£temporary1938 92>
new  <>

376:
old  <	mov [rbp + 92], rsi>
new  < strtod$8:>

377:
old  <>
new  <	; Address Â£temporary1968 chars>

378:
old  < strtod$8:>
new  <	mov rsi, rbp>

379:
old  <	; Address Â£temporary1939 chars>
new  <	add rsi, 40>

380:
old  <	mov rsi, rbp>
new  <>

381:
old  <	add rsi, 40>
new  < strtod$9:>

382:
old  <>
new  <	; Parameter pointer Â£temporary1968 100>

383:
old  < strtod$9:>
new  <	mov [rbp + 100], rsi>

384:
old  <	; Parameter pointer Â£temporary1939 100>
new  <>

385:
old  <	mov [rbp + 100], rsi>
new  < strtod$10:>

386:
old  <>
new  <	; Call sscanf 52 16>

387:
old  < strtod$10:>
new  <	mov qword [rbp + 52], strtod$11>

388:
old  <	; Call sscanf 52 16>
new  <	mov [rbp + 60], rbp>

389:
old  <	mov qword [rbp + 52], strtod$11>
new  <	add rbp, 52>

390:
old  <	mov [rbp + 60], rbp>
new  <	mov rdi, rbp>

391:
old  <	add rbp, 52>
new  <	add rdi, 16>

392:
old  <	mov rdi, rbp>
new  <	jmp sscanf>

393:
old  <	add rdi, 16>
new  <>

394:
old  <	jmp sscanf>
new  < strtod$11:>

395:
old  <>
new  <	; PostCall 52>

396:
old  < strtod$11:>
new  <>

397:
old  <	; PostCall 52>
new  < strtod$12:>

398:
old  <>
new  <	; Equal 16 endp 0>

399:
old  < strtod$12:>
new  <	cmp qword [rbp + 32], 0>

400:
old  <	; Equal 16 endp 0>
new  <	je strtod$16>

401:
old  <	cmp qword [rbp + 32], 0>
new  <>

402:
old  <	je strtod$16>
new  < strtod$13:>

403:
old  <>
new  <	; Dereference Â£temporary1971 -> endp endp 0>

404:
old  < strtod$13:>
new  <	mov rsi, [rbp + 32]>

405:
old  <	; Dereference Â£temporary1942 -> endp endp 0>
new  <>

406:
old  <	mov rsi, [rbp + 32]>
new  < strtod$14:>

407:
old  <>
new  <	; IntegralToIntegral Â£temporary1972 chars>

408:
old  < strtod$14:>
new  <	mov eax, [rbp + 40]>

409:
old  <	; IntegralToIntegral Â£temporary1943 chars>
new  <	mov rbx, 4294967295>

410:
old  <	mov eax, [rbp + 40]>
new  <	and rax, rbx>

411:
old  <	mov rbx, 4294967295>
new  <>

412:
old  <	and rax, rbx>
new  < strtod$15:>

413:
old  <>
new  <	; BinaryAdd Â£temporary1971 -> endp s Â£temporary1972>

414:
old  < strtod$15:>
new  <	mov rbx, [rbp + 24]>

415:
old  <	; BinaryAdd Â£temporary1942 -> endp s Â£temporary1943>
new  <	add rbx, rax>

416:
old  <	mov rbx, [rbp + 24]>
new  <	mov [rsi], rbx>

417:
old  <	add rbx, rax>
new  <>

418:
old  <	mov [rsi], rbx>
new  < strtod$16:>

419:
old  <>
new  <	; PushFloat value>

420:
old  < strtod$16:>
new  <	fld qword [rbp + 44]>

421:
old  <	; PushFloat value>
new  <>

422:
old  <	fld qword [rbp + 44]>
new  < strtod$17:>

423:
old  <>
new  <	; Return value>

424:
old  < strtod$17:>
new  <	mov rax, [rbp]>

425:
old  <	; Return value>
new  <	mov rdi, [rbp + 16]>

426:
old  <	mov rax, [rbp]>
new  <	mov rbp, [rbp + 8]>

427:
old  <	mov rdi, [rbp + 16]>
new  <	jmp rax>

428:
old  <	mov rbp, [rbp + 8]>
new  <>

429:
old  <	jmp rax>
new  < strtod$18:>

430:
old  <>
new  <	; FunctionEnd strtod>

431:
old  < strtod$18:>
new  <>

432:
old  <	; FunctionEnd strtod>
new  <section .text>

434:
old  <section .text>
new  < abort:>

435:
old  <>
new  <	; AssignRegister rax 60>

436:
old  < abort:>
new  <	mov rax, 60>

437:
old  <	; AssignRegister rax 60>
new  <>

438:
old  <	mov rax, 60>
new  < abort$1:>

439:
old  <>
new  <	; AssignRegister rdi -1>

440:
old  < abort$1:>
new  <	mov rdi, -1>

441:
old  <	; AssignRegister rdi -1>
new  <>

442:
old  <	mov rdi, -1>
new  < abort$2:>

443:
old  <>
new  <	; SysCall>

444:
old  < abort$2:>
new  <	syscall>

445:
old  <	; SysCall>
new  <>

446:
old  <	syscall>
new  < abort$3:>

447:
old  <>
new  <	; Return>

448:
old  < abort$3:>
new  <	mov rax, [rbp]>

449:
old  <	; Return>
new  <	mov rdi, [rbp + 16]>

450:
old  <	mov rax, [rbp]>
new  <	mov rbp, [rbp + 8]>

451:
old  <	mov rdi, [rbp + 16]>
new  <	jmp rax>

452:
old  <	mov rbp, [rbp + 8]>
new  <>

453:
old  <	jmp rax>
new  < abort$4:>

454:
old  <>
new  <	; FunctionEnd abort>

455:
old  < abort$4:>
new  <>

456:
old  <	; FunctionEnd abort>
new  <section .text>

458:
old  <section .text>
new  < getenv:>

459:
old  <>
new  <	; Return 0>

460:
old  < getenv:>
new  <	mov rbx, 0>

461:
old  <	; Return 0>
new  <	mov rax, [rbp]>

462:
old  <	mov rbx, 0>
new  <	mov rdi, [rbp + 16]>

463:
old  <	mov rax, [rbp]>
new  <	mov rbp, [rbp + 8]>

464:
old  <	mov rdi, [rbp + 16]>
new  <	jmp rax>

465:
old  <	mov rbp, [rbp + 8]>
new  <>

466:
old  <	jmp rax>
new  < getenv$1:>

467:
old  <>
new  <	; FunctionEnd getenv>

468:
old  < getenv$1:>
new  <>

469:
old  <	; FunctionEnd getenv>
new  <section .text>

471:
old  <section .text>
new  < system:>

472:
old  <>
new  <	; Return -1>

473:
old  < system:>
new  <	mov ebx, -1>

474:
old  <	; Return -1>
new  <	mov rax, [rbp]>

475:
old  <	mov ebx, -1>
new  <	mov rdi, [rbp + 16]>

476:
old  <	mov rax, [rbp]>
new  <	mov rbp, [rbp + 8]>

477:
old  <	mov rdi, [rbp + 16]>
new  <	jmp rax>

478:
old  <	mov rbp, [rbp + 8]>
new  <>

479:
old  <	jmp rax>
new  < system$1:>

480:
old  <>
new  <	; FunctionEnd system>

481:
old  < system$1:>
new  <>

482:
old  <	; FunctionEnd system>
new  <section .text>

484:
old  <section .text>
new  < memswp:>

485:
old  <>
new  <	; IntegralToIntegral Â£temporary1979 value1>

486:
old  < memswp:>
new  <	mov rax, [rbp + 24]>

487:
old  <	; IntegralToIntegral Â£temporary1950 value1>
new  <>

488:
old  <	mov rax, [rbp + 24]>
new  < memswp$1:>

489:
old  <>
new  <	; Assign charValue1 Â£temporary1979>

490:
old  < memswp$1:>
new  <	mov [rbp + 44], rax>

491:
old  <	; Assign charValue1 Â£temporary1950>
new  <>

492:
old  <	mov [rbp + 44], rax>
new  < memswp$2:>

493:
old  <>
new  <	; IntegralToIntegral Â£temporary1980 value2>

494:
old  < memswp$2:>
new  <	mov rax, [rbp + 32]>

495:
old  <	; IntegralToIntegral Â£temporary1951 value2>
new  <>

496:
old  <	mov rax, [rbp + 32]>
new  < memswp$3:>

497:
old  <>
new  <	; Assign charValue2 Â£temporary1980>

498:
old  < memswp$3:>
new  <	mov [rbp + 52], rax>

499:
old  <	; Assign charValue2 Â£temporary1951>
new  <>

500:
old  <	mov [rbp + 52], rax>
new  < memswp$4:>

501:
old  <>
new  <	; Assign index 0>

502:
old  < memswp$4:>
new  <	mov dword [rbp + 60], 0>

503:
old  <	; Assign index 0>
new  <>

504:
old  <	mov dword [rbp + 60], 0>
new  < memswp$5:>

505:
old  <>
new  <	; SignedGreaterThanEqual 23 index valueSize>

506:
old  < memswp$5:>
new  <	mov eax, [rbp + 40]>

507:
old  <	; SignedGreaterThanEqual 23 index valueSize>
new  <	cmp [rbp + 60], eax>

508:
old  <	mov eax, [rbp + 40]>
new  <	jge memswp$23>

509:
old  <	cmp [rbp + 60], eax>
new  <>

510:
old  <	jge memswp$23>
new  < memswp$6:>

511:
old  <>
new  <	; IntegralToIntegral Â£temporary1984 index>

512:
old  < memswp$6:>
new  <	mov eax, [rbp + 60]>

513:
old  <	; IntegralToIntegral Â£temporary1955 index>
new  <	mov rbx, 4294967295>

514:
old  <	mov eax, [rbp + 60]>
new  <	and rax, rbx>

515:
old  <	mov rbx, 4294967295>
new  <>

516:
old  <	and rax, rbx>
new  < memswp$7:>

517:
old  <>
new  <	; BinaryAdd Â£temporary1986 charValue1 Â£temporary1984>

518:
old  < memswp$7:>
new  <	mov rsi, [rbp + 44]>

519:
old  <	; BinaryAdd Â£temporary1957 charValue1 Â£temporary1955>
new  <	add rsi, rax>

520:
old  <	mov rsi, [rbp + 44]>
new  <>

521:
old  <	add rsi, rax>
new  < memswp$8:>

522:
old  <>
new  <	; Dereference Â£temporary1983 -> Â£temporary1986 Â£temporary1986 0>

523:
old  < memswp$8:>
new  <>

524:
old  <	; Dereference Â£temporary1954 -> Â£temporary1957 Â£temporary1957 0>
new  < memswp$9:>

525:
old  <>
new  <	; Assign tempValue Â£temporary1983 -> Â£temporary1986>

526:
old  < memswp$9:>
new  <	mov al, [rsi]>

527:
old  <	; Assign tempValue Â£temporary1954 -> Â£temporary1957>
new  <	mov [rbp + 64], al>

528:
old  <	mov al, [rsi]>
new  <>

529:
old  <	mov [rbp + 64], al>
new  < memswp$10:>

530:
old  <>
new  <	; IntegralToIntegral Â£temporary1988 index>

531:
old  < memswp$10:>
new  <	mov eax, [rbp + 60]>

532:
old  <	; IntegralToIntegral Â£temporary1959 index>
new  <	mov rbx, 4294967295>

533:
old  <	mov eax, [rbp + 60]>
new  <	and rax, rbx>

534:
old  <	mov rbx, 4294967295>
new  <>

535:
old  <	and rax, rbx>
new  < memswp$11:>

536:
old  <>
new  <	; BinaryAdd Â£temporary1990 charValue1 Â£temporary1988>

537:
old  < memswp$11:>
new  <	mov rsi, [rbp + 44]>

538:
old  <	; BinaryAdd Â£temporary1961 charValue1 Â£temporary1959>
new  <	add rsi, rax>

539:
old  <	mov rsi, [rbp + 44]>
new  <>

540:
old  <	add rsi, rax>
new  < memswp$12:>

541:
old  <>
new  <	; Dereference Â£temporary1987 -> Â£temporary1990 Â£temporary1990 0>

542:
old  < memswp$12:>
new  <>

543:
old  <	; Dereference Â£temporary1958 -> Â£temporary1961 Â£temporary1961 0>
new  < memswp$13:>

544:
old  <>
new  <	; IntegralToIntegral Â£temporary1992 index>

545:
old  < memswp$13:>
new  <	mov eax, [rbp + 60]>

546:
old  <	; IntegralToIntegral Â£temporary1963 index>
new  <	mov rbx, 4294967295>

547:
old  <	mov eax, [rbp + 60]>
new  <	and rax, rbx>

548:
old  <	mov rbx, 4294967295>
new  <>

549:
old  <	and rax, rbx>
new  < memswp$14:>

550:
old  <>
new  <	; BinaryAdd Â£temporary1994 charValue2 Â£temporary1992>

551:
old  < memswp$14:>
new  <	mov rdi, [rbp + 52]>

552:
old  <	; BinaryAdd Â£temporary1965 charValue2 Â£temporary1963>
new  <	add rdi, rax>

553:
old  <	mov rdi, [rbp + 52]>
new  <>

554:
old  <	add rdi, rax>
new  < memswp$15:>

555:
old  <>
new  <	; Dereference Â£temporary1991 -> Â£temporary1994 Â£temporary1994 0>

556:
old  < memswp$15:>
new  <>

557:
old  <	; Dereference Â£temporary1962 -> Â£temporary1965 Â£temporary1965 0>
new  < memswp$16:>

558:
old  <>
new  <	; Assign Â£temporary1987 -> Â£temporary1990 Â£temporary1991 -> Â£temporary1994>

559:
old  < memswp$16:>
new  <	mov al, [rdi]>

560:
old  <	; Assign Â£temporary1958 -> Â£temporary1961 Â£temporary1962 -> Â£temporary1965>
new  <	mov [rsi], al>

561:
old  <	mov al, [rdi]>
new  <>

562:
old  <	mov [rsi], al>
new  < memswp$17:>

563:
old  <>
new  <	; IntegralToIntegral Â£temporary1996 index>

564:
old  < memswp$17:>
new  <	mov eax, [rbp + 60]>

565:
old  <	; IntegralToIntegral Â£temporary1967 index>
new  <	mov rbx, 4294967295>

566:
old  <	mov eax, [rbp + 60]>
new  <	and rax, rbx>

567:
old  <	mov rbx, 4294967295>
new  <>

568:
old  <	and rax, rbx>
new  < memswp$18:>

569:
old  <>
new  <	; BinaryAdd Â£temporary1998 charValue2 Â£temporary1996>

570:
old  < memswp$18:>
new  <	mov rsi, [rbp + 52]>

571:
old  <	; BinaryAdd Â£temporary1969 charValue2 Â£temporary1967>
new  <	add rsi, rax>

572:
old  <	mov rsi, [rbp + 52]>
new  <>

573:
old  <	add rsi, rax>
new  < memswp$19:>

574:
old  <>
new  <	; Dereference Â£temporary1995 -> Â£temporary1998 Â£temporary1998 0>

575:
old  < memswp$19:>
new  <>

576:
old  <	; Dereference Â£temporary1966 -> Â£temporary1969 Â£temporary1969 0>
new  < memswp$20:>

577:
old  <>
new  <	; Assign Â£temporary1995 -> Â£temporary1998 tempValue>

578:
old  < memswp$20:>
new  <	mov al, [rbp + 64]>

579:
old  <	; Assign Â£temporary1966 -> Â£temporary1969 tempValue>
new  <	mov [rsi], al>

580:
old  <	mov al, [rbp + 64]>
new  <>

581:
old  <	mov [rsi], al>
new  < memswp$21:>

582:
old  <>
new  <	; BinaryAdd index index 1>

583:
old  < memswp$21:>
new  <	inc dword [rbp + 60]>

584:
old  <	; BinaryAdd index index 1>
new  <>

585:
old  <	inc dword [rbp + 60]>
new  < memswp$22:>

586:
old  <>
new  <	; Goto 5>

587:
old  < memswp$22:>
new  <	jmp memswp$5>

588:
old  <	; Goto 5>
new  <>

589:
old  <	jmp memswp$5>
new  < memswp$23:>

590:
old  <>
new  <	; Return>

591:
old  < memswp$23:>
new  <	mov rax, [rbp]>

592:
old  <	; Return>
new  <	mov rdi, [rbp + 16]>

593:
old  <	mov rax, [rbp]>
new  <	mov rbp, [rbp + 8]>

594:
old  <	mov rdi, [rbp + 16]>
new  <	jmp rax>

595:
old  <	mov rbp, [rbp + 8]>
new  <>

596:
old  <	jmp rax>
new  < memswp$24:>

597:
old  <>
new  <	; FunctionEnd memswp>

598:
old  < memswp$24:>
new  <>

599:
old  <	; FunctionEnd memswp>
new  <section .data>

601:
old  <section .data>
new  <int4$2#:>

602:
old  <>
new  <	; Initializer SignedInt 2>

603:
old  <int4$2#:>
new  <	dd 2>

604:
old  <	; Initializer SignedInt 2>
new  <>

605:
old  <	dd 2>
new  <section .text>

607:
old  <section .text>
new  < bsearch:>

608:
old  <>
new  <	; Assign firstIndex 0>

609:
old  < bsearch:>
new  <	mov dword [rbp + 56], 0>

610:
old  <	; Assign firstIndex 0>
new  <>

611:
old  <	mov dword [rbp + 56], 0>
new  < bsearch$1:>

612:
old  <>
new  <	; BinarySubtract lastIndex listSize 1>

613:
old  < bsearch$1:>
new  <	mov eax, [rbp + 40]>

614:
old  <	; BinarySubtract lastIndex listSize 1>
new  <	dec eax>

615:
old  <	mov eax, [rbp + 40]>
new  <	mov [rbp + 60], eax>

616:
old  <	dec eax>
new  <>

617:
old  <	mov [rbp + 60], eax>
new  < bsearch$2:>

618:
old  <>
new  <	; NotEqual 4 listSize 0>

619:
old  < bsearch$2:>
new  <	cmp dword [rbp + 40], 0>

620:
old  <	; NotEqual 4 listSize 0>
new  <	jne bsearch$4>

621:
old  <	cmp dword [rbp + 40], 0>
new  <>

622:
old  <	jne bsearch$4>
new  < bsearch$3:>

623:
old  <>
new  <	; Return 0>

624:
old  < bsearch$3:>
new  <	mov rbx, 0>

625:
old  <	; Return 0>
new  <	mov rax, [rbp]>

626:
old  <	mov rbx, 0>
new  <	mov rdi, [rbp + 16]>

627:
old  <	mov rax, [rbp]>
new  <	mov rbp, [rbp + 8]>

628:
old  <	mov rdi, [rbp + 16]>
new  <	jmp rax>

629:
old  <	mov rbp, [rbp + 8]>
new  <>

630:
old  <	jmp rax>
new  < bsearch$4:>

631:
old  <>
new  <	; IntegralToIntegral Â£temporary2001 valueList>

632:
old  < bsearch$4:>
new  <	mov rbx, [rbp + 32]>

633:
old  <	; IntegralToIntegral Â£temporary1972 valueList>
new  <>

634:
old  <	mov rbx, [rbp + 32]>
new  < bsearch$5:>

635:
old  <>
new  <	; SignedMultiply Â£temporary2002 firstIndex valueSize>

636:
old  < bsearch$5:>
new  <	mov eax, [rbp + 56]>

637:
old  <	; SignedMultiply Â£temporary1973 firstIndex valueSize>
new  <	xor edx, edx>

638:
old  <	mov eax, [rbp + 56]>
new  <	imul dword [rbp + 44]>

639:
old  <	xor edx, edx>
new  <>

640:
old  <	imul dword [rbp + 44]>
new  < bsearch$6:>

641:
old  <>
new  <	; IntegralToIntegral Â£temporary2003 Â£temporary2002>

642:
old  < bsearch$6:>
new  <	mov rcx, 4294967295>

643:
old  <	; IntegralToIntegral Â£temporary1974 Â£temporary1973>
new  <	and rax, rcx>

644:
old  <	mov rcx, 4294967295>
new  <>

645:
old  <	and rax, rcx>
new  < bsearch$7:>

646:
old  <>
new  <	; BinaryAdd firstValuePtr Â£temporary2001 Â£temporary2003>

647:
old  < bsearch$7:>
new  <	add rbx, rax>

648:
old  <	; BinaryAdd firstValuePtr Â£temporary1972 Â£temporary1974>
new  <	mov [rbp + 64], rbx>

649:
old  <	add rbx, rax>
new  <>

650:
old  <	mov [rbp + 64], rbx>
new  < bsearch$8:>

651:
old  <>
new  <	; PreCall 72 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

652:
old  < bsearch$8:>
new  <>

653:
old  <	; PreCall 72 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < bsearch$9:>

654:
old  <>
new  <	; Parameter pointer keyPtr 96>

655:
old  < bsearch$9:>
new  <	mov rax, [rbp + 24]>

656:
old  <	; Parameter pointer keyPtr 96>
new  <	mov [rbp + 96], rax>

657:
old  <	mov rax, [rbp + 24]>
new  <>

658:
old  <	mov [rbp + 96], rax>
new  < bsearch$10:>

659:
old  <>
new  <	; Parameter pointer firstValuePtr 104>

660:
old  < bsearch$10:>
new  <	mov rax, [rbp + 64]>

661:
old  <	; Parameter pointer firstValuePtr 104>
new  <	mov [rbp + 104], rax>

662:
old  <	mov rax, [rbp + 64]>
new  <>

663:
old  <	mov [rbp + 104], rax>
new  < bsearch$11:>

664:
old  <>
new  <	; Call compare 72 0>

665:
old  < bsearch$11:>
new  <	mov qword [rbp + 72], bsearch$12>

666:
old  <	; Call compare 72 0>
new  <	mov [rbp + 80], rbp>

667:
old  <	mov qword [rbp + 72], bsearch$12>
new  <	add rbp, 72>

668:
old  <	mov [rbp + 80], rbp>
new  <	mov rax, [rbp + 48]>

669:
old  <	add rbp, 72>
new  <	jmp rax>

670:
old  <	mov rax, [rbp + 48]>
new  <>

671:
old  <	jmp rax>
new  < bsearch$12:>

672:
old  <>
new  <	; PostCall 72>

673:
old  < bsearch$12:>
new  <>

674:
old  <	; PostCall 72>
new  < bsearch$13:>

675:
old  <>
new  <	; GetReturnValue Â£temporary2006>

676:
old  < bsearch$13:>
new  <>

677:
old  <	; GetReturnValue Â£temporary1977>
new  < bsearch$14:>

678:
old  <>
new  <	; Assign firstCompare Â£temporary2006>

679:
old  < bsearch$14:>
new  <	mov [rbp + 72], ebx>

680:
old  <	; Assign firstCompare Â£temporary1977>
new  <>

681:
old  <	mov [rbp + 72], ebx>
new  < bsearch$15:>

682:
old  <>
new  <	; SignedGreaterThanEqual 17 firstCompare 0>

683:
old  < bsearch$15:>
new  <	cmp dword [rbp + 72], 0>

684:
old  <	; SignedGreaterThanEqual 17 firstCompare 0>
new  <	jge bsearch$17>

685:
old  <	cmp dword [rbp + 72], 0>
new  <>

686:
old  <	jge bsearch$17>
new  < bsearch$16:>

687:
old  <>
new  <	; Return 0>

688:
old  < bsearch$16:>
new  <	mov rbx, 0>

689:
old  <	; Return 0>
new  <	mov rax, [rbp]>

690:
old  <	mov rbx, 0>
new  <	mov rdi, [rbp + 16]>

691:
old  <	mov rax, [rbp]>
new  <	mov rbp, [rbp + 8]>

692:
old  <	mov rdi, [rbp + 16]>
new  <	jmp rax>

693:
old  <	mov rbp, [rbp + 8]>
new  <>

694:
old  <	jmp rax>
new  < bsearch$17:>

695:
old  <>
new  <	; NotEqual 19 firstCompare 0>

696:
old  < bsearch$17:>
new  <	cmp dword [rbp + 72], 0>

697:
old  <	; NotEqual 19 firstCompare 0>
new  <	jne bsearch$19>

698:
old  <	cmp dword [rbp + 72], 0>
new  <>

699:
old  <	jne bsearch$19>
new  < bsearch$18:>

700:
old  <>
new  <	; Return firstValuePtr>

701:
old  < bsearch$18:>
new  <	mov rbx, [rbp + 64]>

702:
old  <	; Return firstValuePtr>
new  <	mov rax, [rbp]>

703:
old  <	mov rbx, [rbp + 64]>
new  <	mov rdi, [rbp + 16]>

704:
old  <	mov rax, [rbp]>
new  <	mov rbp, [rbp + 8]>

705:
old  <	mov rdi, [rbp + 16]>
new  <	jmp rax>

706:
old  <	mov rbp, [rbp + 8]>
new  <>

707:
old  <	jmp rax>
new  < bsearch$19:>

708:
old  <>
new  <	; IntegralToIntegral Â£temporary2009 valueList>

709:
old  < bsearch$19:>
new  <	mov rbx, [rbp + 32]>

710:
old  <	; IntegralToIntegral Â£temporary1980 valueList>
new  <>

711:
old  <	mov rbx, [rbp + 32]>
new  < bsearch$20:>

712:
old  <>
new  <	; SignedMultiply Â£temporary2010 lastIndex valueSize>

713:
old  < bsearch$20:>
new  <	mov eax, [rbp + 60]>

714:
old  <	; SignedMultiply Â£temporary1981 lastIndex valueSize>
new  <	xor edx, edx>

715:
old  <	mov eax, [rbp + 60]>
new  <	imul dword [rbp + 44]>

716:
old  <	xor edx, edx>
new  <>

717:
old  <	imul dword [rbp + 44]>
new  < bsearch$21:>

718:
old  <>
new  <	; IntegralToIntegral Â£temporary2011 Â£temporary2010>

719:
old  < bsearch$21:>
new  <	mov rcx, 4294967295>

720:
old  <	; IntegralToIntegral Â£temporary1982 Â£temporary1981>
new  <	and rax, rcx>

721:
old  <	mov rcx, 4294967295>
new  <>

722:
old  <	and rax, rcx>
new  < bsearch$22:>

723:
old  <>
new  <	; BinaryAdd lastValuePtr Â£temporary2009 Â£temporary2011>

724:
old  < bsearch$22:>
new  <	add rbx, rax>

725:
old  <	; BinaryAdd lastValuePtr Â£temporary1980 Â£temporary1982>
new  <	mov [rbp + 64], rbx>

726:
old  <	add rbx, rax>
new  <>

727:
old  <	mov [rbp + 64], rbx>
new  < bsearch$23:>

728:
old  <>
new  <	; PreCall 72 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

729:
old  < bsearch$23:>
new  <>

730:
old  <	; PreCall 72 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < bsearch$24:>

731:
old  <>
new  <	; Parameter pointer keyPtr 96>

732:
old  < bsearch$24:>
new  <	mov rax, [rbp + 24]>

733:
old  <	; Parameter pointer keyPtr 96>
new  <	mov [rbp + 96], rax>

734:
old  <	mov rax, [rbp + 24]>
new  <>

735:
old  <	mov [rbp + 96], rax>
new  < bsearch$25:>

736:
old  <>
new  <	; Parameter pointer lastValuePtr 104>

737:
old  < bsearch$25:>
new  <	mov rax, [rbp + 64]>

738:
old  <	; Parameter pointer lastValuePtr 104>
new  <	mov [rbp + 104], rax>

739:
old  <	mov rax, [rbp + 64]>
new  <>

740:
old  <	mov [rbp + 104], rax>
new  < bsearch$26:>

741:
old  <>
new  <	; Call compare 72 0>

742:
old  < bsearch$26:>
new  <	mov qword [rbp + 72], bsearch$27>

743:
old  <	; Call compare 72 0>
new  <	mov [rbp + 80], rbp>

744:
old  <	mov qword [rbp + 72], bsearch$27>
new  <	add rbp, 72>

745:
old  <	mov [rbp + 80], rbp>
new  <	mov rax, [rbp + 48]>

746:
old  <	add rbp, 72>
new  <	jmp rax>

747:
old  <	mov rax, [rbp + 48]>
new  <>

748:
old  <	jmp rax>
new  < bsearch$27:>

749:
old  <>
new  <	; PostCall 72>

750:
old  < bsearch$27:>
new  <>

751:
old  <	; PostCall 72>
new  < bsearch$28:>

752:
old  <>
new  <	; GetReturnValue Â£temporary2014>

753:
old  < bsearch$28:>
new  <>

754:
old  <	; GetReturnValue Â£temporary1985>
new  < bsearch$29:>

755:
old  <>
new  <	; Assign lastCompare Â£temporary2014>

756:
old  < bsearch$29:>
new  <	mov [rbp + 72], ebx>

757:
old  <	; Assign lastCompare Â£temporary1985>
new  <>

758:
old  <	mov [rbp + 72], ebx>
new  < bsearch$30:>

759:
old  <>
new  <	; SignedLessThanEqual 32 lastCompare 0>

760:
old  < bsearch$30:>
new  <	cmp dword [rbp + 72], 0>

761:
old  <	; SignedLessThanEqual 32 lastCompare 0>
new  <	jle bsearch$32>

762:
old  <	cmp dword [rbp + 72], 0>
new  <>

763:
old  <	jle bsearch$32>
new  < bsearch$31:>

764:
old  <>
new  <	; Return 0>

765:
old  < bsearch$31:>
new  <	mov rbx, 0>

766:
old  <	; Return 0>
new  <	mov rax, [rbp]>

767:
old  <	mov rbx, 0>
new  <	mov rdi, [rbp + 16]>

768:
old  <	mov rax, [rbp]>
new  <	mov rbp, [rbp + 8]>

769:
old  <	mov rdi, [rbp + 16]>
new  <	jmp rax>

770:
old  <	mov rbp, [rbp + 8]>
new  <>

771:
old  <	jmp rax>
new  < bsearch$32:>

772:
old  <>
new  <	; NotEqual 34 lastCompare 0>

773:
old  < bsearch$32:>
new  <	cmp dword [rbp + 72], 0>

774:
old  <	; NotEqual 34 lastCompare 0>
new  <	jne bsearch$34>

775:
old  <	cmp dword [rbp + 72], 0>
new  <>

776:
old  <	jne bsearch$34>
new  < bsearch$33:>

777:
old  <>
new  <	; Return lastValuePtr>

778:
old  < bsearch$33:>
new  <	mov rbx, [rbp + 64]>

779:
old  <	; Return lastValuePtr>
new  <	mov rax, [rbp]>

780:
old  <	mov rbx, [rbp + 64]>
new  <	mov rdi, [rbp + 16]>

781:
old  <	mov rax, [rbp]>
new  <	mov rbp, [rbp + 8]>

782:
old  <	mov rdi, [rbp + 16]>
new  <	jmp rax>

783:
old  <	mov rbp, [rbp + 8]>
new  <>

784:
old  <	jmp rax>
new  < bsearch$34:>

785:
old  <>
new  <	; BinaryAdd Â£temporary2017 firstIndex lastIndex>

786:
old  < bsearch$34:>
new  <	mov eax, [rbp + 56]>

787:
old  <	; BinaryAdd Â£temporary1988 firstIndex lastIndex>
new  <	add eax, [rbp + 60]>

788:
old  <	mov eax, [rbp + 56]>
new  <>

789:
old  <	add eax, [rbp + 60]>
new  < bsearch$35:>

790:
old  <>
new  <	; SignedDivide middleIndex Â£temporary2017 2>

791:
old  < bsearch$35:>
new  <	xor edx, edx>

792:
old  <	; SignedDivide middleIndex Â£temporary1988 2>
new  <	idiv dword [int4$2#]>

793:
old  <	xor edx, edx>
new  <	mov [rbp + 64], eax>

794:
old  <	idiv dword [int4$2#]>
new  <>

795:
old  <	mov [rbp + 64], eax>
new  < bsearch$36:>

796:
old  <>
new  <	; IntegralToIntegral Â£temporary2019 valueList>

797:
old  < bsearch$36:>
new  <	mov rbx, [rbp + 32]>

798:
old  <	; IntegralToIntegral Â£temporary1990 valueList>
new  <>

799:
old  <	mov rbx, [rbp + 32]>
new  < bsearch$37:>

800:
old  <>
new  <	; SignedMultiply Â£temporary2020 middleIndex valueSize>

801:
old  < bsearch$37:>
new  <	mov eax, [rbp + 64]>

802:
old  <	; SignedMultiply Â£temporary1991 middleIndex valueSize>
new  <	xor edx, edx>

803:
old  <	mov eax, [rbp + 64]>
new  <	imul dword [rbp + 44]>

804:
old  <	xor edx, edx>
new  <>

805:
old  <	imul dword [rbp + 44]>
new  < bsearch$38:>

806:
old  <>
new  <	; IntegralToIntegral Â£temporary2021 Â£temporary2020>

807:
old  < bsearch$38:>
new  <	mov rcx, 4294967295>

808:
old  <	; IntegralToIntegral Â£temporary1992 Â£temporary1991>
new  <	and rax, rcx>

809:
old  <	mov rcx, 4294967295>
new  <>

810:
old  <	and rax, rcx>
new  < bsearch$39:>

811:
old  <>
new  <	; BinaryAdd middleValuePtr Â£temporary2019 Â£temporary2021>

812:
old  < bsearch$39:>
new  <	add rbx, rax>

813:
old  <	; BinaryAdd middleValuePtr Â£temporary1990 Â£temporary1992>
new  <	mov [rbp + 68], rbx>

814:
old  <	add rbx, rax>
new  <>

815:
old  <	mov [rbp + 68], rbx>
new  < bsearch$40:>

816:
old  <>
new  <	; PreCall 76 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

817:
old  < bsearch$40:>
new  <>

818:
old  <	; PreCall 76 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < bsearch$41:>

819:
old  <>
new  <	; Parameter pointer keyPtr 100>

820:
old  < bsearch$41:>
new  <	mov rax, [rbp + 24]>

821:
old  <	; Parameter pointer keyPtr 100>
new  <	mov [rbp + 100], rax>

822:
old  <	mov rax, [rbp + 24]>
new  <>

823:
old  <	mov [rbp + 100], rax>
new  < bsearch$42:>

824:
old  <>
new  <	; Parameter pointer middleValuePtr 108>

825:
old  < bsearch$42:>
new  <	mov rax, [rbp + 68]>

826:
old  <	; Parameter pointer middleValuePtr 108>
new  <	mov [rbp + 108], rax>

827:
old  <	mov rax, [rbp + 68]>
new  <>

828:
old  <	mov [rbp + 108], rax>
new  < bsearch$43:>

829:
old  <>
new  <	; Call compare 76 0>

830:
old  < bsearch$43:>
new  <	mov qword [rbp + 76], bsearch$44>

831:
old  <	; Call compare 76 0>
new  <	mov [rbp + 84], rbp>

832:
old  <	mov qword [rbp + 76], bsearch$44>
new  <	add rbp, 76>

833:
old  <	mov [rbp + 84], rbp>
new  <	mov rax, [rbp + 48]>

834:
old  <	add rbp, 76>
new  <	jmp rax>

835:
old  <	mov rax, [rbp + 48]>
new  <>

836:
old  <	jmp rax>
new  < bsearch$44:>

837:
old  <>
new  <	; PostCall 76>

838:
old  < bsearch$44:>
new  <>

839:
old  <	; PostCall 76>
new  < bsearch$45:>

840:
old  <>
new  <	; GetReturnValue Â£temporary2024>

841:
old  < bsearch$45:>
new  <>

842:
old  <	; GetReturnValue Â£temporary1995>
new  < bsearch$46:>

843:
old  <>
new  <	; Assign middleCompare Â£temporary2024>

844:
old  < bsearch$46:>
new  <	mov [rbp + 76], ebx>

845:
old  <	; Assign middleCompare Â£temporary1995>
new  <>

846:
old  <	mov [rbp + 76], ebx>
new  < bsearch$47:>

847:
old  <>
new  <	; SignedGreaterThanEqual 50 middleCompare 0>

848:
old  < bsearch$47:>
new  <	cmp dword [rbp + 76], 0>

849:
old  <	; SignedGreaterThanEqual 50 middleCompare 0>
new  <	jge bsearch$50>

850:
old  <	cmp dword [rbp + 76], 0>
new  <>

851:
old  <	jge bsearch$50>
new  < bsearch$48:>

852:
old  <>
new  <	; Assign lastIndex middleIndex>

853:
old  < bsearch$48:>
new  <	mov eax, [rbp + 64]>

854:
old  <	; Assign lastIndex middleIndex>
new  <	mov [rbp + 60], eax>

855:
old  <	mov eax, [rbp + 64]>
new  <>

856:
old  <	mov [rbp + 60], eax>
new  < bsearch$49:>

857:
old  <>
new  <	; Goto 4>

858:
old  < bsearch$49:>
new  <	jmp bsearch$4>

859:
old  <	; Goto 4>
new  <>

860:
old  <	jmp bsearch$4>
new  < bsearch$50:>

861:
old  <>
new  <	; SignedLessThanEqual 53 middleCompare 0>

862:
old  < bsearch$50:>
new  <	cmp dword [rbp + 76], 0>

863:
old  <	; SignedLessThanEqual 53 middleCompare 0>
new  <	jle bsearch$53>

864:
old  <	cmp dword [rbp + 76], 0>
new  <>

865:
old  <	jle bsearch$53>
new  < bsearch$51:>

866:
old  <>
new  <	; Assign firstIndex middleIndex>

867:
old  < bsearch$51:>
new  <	mov eax, [rbp + 64]>

868:
old  <	; Assign firstIndex middleIndex>
new  <	mov [rbp + 56], eax>

869:
old  <	mov eax, [rbp + 64]>
new  <>

870:
old  <	mov [rbp + 56], eax>
new  < bsearch$52:>

871:
old  <>
new  <	; Goto 4>

872:
old  < bsearch$52:>
new  <	jmp bsearch$4>

873:
old  <	; Goto 4>
new  <>

874:
old  <	jmp bsearch$4>
new  < bsearch$53:>

875:
old  <>
new  <	; Return middleValuePtr>

876:
old  < bsearch$53:>
new  <	mov rbx, [rbp + 68]>

877:
old  <	; Return middleValuePtr>
new  <	mov rax, [rbp]>

878:
old  <	mov rbx, [rbp + 68]>
new  <	mov rdi, [rbp + 16]>

879:
old  <	mov rax, [rbp]>
new  <	mov rbp, [rbp + 8]>

880:
old  <	mov rdi, [rbp + 16]>
new  <	jmp rax>

881:
old  <	mov rbp, [rbp + 8]>
new  <>

882:
old  <	jmp rax>
new  < bsearch$54:>

883:
old  <>
new  <	; FunctionEnd bsearch>

884:
old  < bsearch$54:>
new  <>

885:
old  <	; FunctionEnd bsearch>
new  <section .data>

887:
old  <section .data>
new  <@3946$g_randValue:>

888:
old  <>
new  <	; InitializerZero 8>

889:
old  <@4296$g_randValue:>
new  <	times 8 db 0>

890:
old  <	; InitializerZero 8>
new  <>

891:
old  <	times 8 db 0>
new  <section .data>

893:
old  <section .data>
new  <int8$1664525#:>

894:
old  <>
new  <	; Initializer Signed_Long_Int 1664525>

895:
old  <int8$1664525#:>
new  <	dq 1664525>

896:
old  <	; Initializer Signed_Long_Int 1664525>
new  <>

897:
old  <	dq 1664525>
new  <section .data>

899:
old  <section .data>
new  <int8$127#:>

900:
old  <>
new  <	; Initializer Signed_Long_Int 127>

901:
old  <int8$127#:>
new  <	dq 127>

902:
old  <	; Initializer Signed_Long_Int 127>
new  <>

903:
old  <	dq 127>
new  <section .text>

905:
old  <section .text>
new  < rand:>

906:
old  <>
new  <	; SignedMultiply Â£temporary2028 g_randValue 1664525>

907:
old  < rand:>
new  <	mov rax, [@3946$g_randValue]>

908:
old  <	; SignedMultiply Â£temporary1999 g_randValue 1664525>
new  <	xor rdx, rdx>

909:
old  <	mov rax, [@4296$g_randValue]>
new  <	imul qword [int8$1664525#]>

910:
old  <	xor rdx, rdx>
new  <>

911:
old  <	imul qword [int8$1664525#]>
new  < rand$1:>

912:
old  <>
new  <	; BinaryAdd Â£temporary2029 Â£temporary2028 1013904223>

913:
old  < rand$1:>
new  <	add rax, 1013904223>

914:
old  <	; BinaryAdd Â£temporary2000 Â£temporary1999 1013904223>
new  <>

915:
old  <	add rax, 1013904223>
new  < rand$2:>

916:
old  <>
new  <	; SignedModulo g_randValue Â£temporary2029 127>

917:
old  < rand$2:>
new  <	xor rdx, rdx>

918:
old  <	; SignedModulo g_randValue Â£temporary2000 127>
new  <	idiv qword [int8$127#]>

919:
old  <	xor rdx, rdx>
new  <	mov [@3946$g_randValue], rdx>

920:
old  <	idiv qword [int8$127#]>
new  <>

921:
old  <	mov [@4296$g_randValue], rdx>
new  < rand$3:>

922:
old  <>
new  <	; IntegralToIntegral Â£temporary2031 g_randValue>

923:
old  < rand$3:>
new  <	mov rbx, [@3946$g_randValue]>

924:
old  <	; IntegralToIntegral Â£temporary2002 g_randValue>
new  <	cmp rbx, 0>

925:
old  <	mov rbx, [@4296$g_randValue]>
new  <	jge rand$4>

926:
old  <	cmp rbx, 0>
new  <	neg rbx>

927:
old  <	jge rand$4>
new  <	neg ebx>

928:
old  <	neg rbx>
new  <>

929:
old  <	neg ebx>
new  < rand$4:>

930:
old  <>
new  <	; Return Â£temporary2031>

931:
old  < rand$4:>
new  <	mov rax, [rbp]>

932:
old  <	; Return Â£temporary2002>
new  <	mov rdi, [rbp + 16]>

933:
old  <	mov rax, [rbp]>
new  <	mov rbp, [rbp + 8]>

934:
old  <	mov rdi, [rbp + 16]>
new  <	jmp rax>

935:
old  <	mov rbp, [rbp + 8]>
new  <>

936:
old  <	jmp rax>
new  < rand$5:>

937:
old  <>
new  <	; FunctionEnd rand>

938:
old  < rand$5:>
new  <>

939:
old  <	; FunctionEnd rand>
new  <section .text>

941:
old  <section .text>
new  < srand:>

942:
old  <>
new  <	; IntegralToIntegral Â£temporary2032 seed>

943:
old  < srand:>
new  <	mov eax, [rbp + 24]>

944:
old  <	; IntegralToIntegral Â£temporary2003 seed>
new  <	mov rbx, 4294967295>

945:
old  <	mov eax, [rbp + 24]>
new  <	and rax, rbx>

946:
old  <	mov rbx, 4294967295>
new  <>

947:
old  <	and rax, rbx>
new  < srand$1:>

948:
old  <>
new  <	; Assign g_randValue Â£temporary2032>

949:
old  < srand$1:>
new  <	mov [@3946$g_randValue], rax>

950:
old  <	; Assign g_randValue Â£temporary2003>
new  <>

951:
old  <	mov [@4296$g_randValue], rax>
new  < srand$2:>

952:
old  <>
new  <	; Return>

953:
old  < srand$2:>
new  <	mov rax, [rbp]>

954:
old  <	; Return>
new  <	mov rdi, [rbp + 16]>

955:
old  <	mov rax, [rbp]>
new  <	mov rbp, [rbp + 8]>

956:
old  <	mov rdi, [rbp + 16]>
new  <	jmp rax>

957:
old  <	mov rbp, [rbp + 8]>
new  <>

958:
old  <	jmp rax>
new  < srand$3:>

959:
old  <>
new  <	; FunctionEnd srand>

960:
old  < srand$3:>
new  <>

961:
old  <	; FunctionEnd srand>
new  <section .data>

963:
old  <section .data>
new  <g_funcArray:>

964:
old  <>
new  <	; Initializer Pointer 0>

965:
old  <string_stack20top2025u2C20heap20top2025u2C20heap20bottom2025u0A#:>
new  <	dq 0>

966:
old  <	; Initializer String stack top %u, heap top %u, heap bottom %u\n>
new  <	; InitializerZero 2040>

967:
old  <	db "stack top %u, heap top %u, heap bottom %u", 10, 0>
new  <	times 2040 db 0>

971:
old  <string_2020index2025u2C20address2025u2C20size2025u0A#:>
new  <Array_8#:>

972:
old  <	; Initializer String   index %u, address %u, size %u\n>
new  <	; Initializer Array 8>

973:
old  <	db "  index %u, address %u, size %u", 10, 0>
new  <	dq 8>

975:
old  <section .data>
new  <section .text>

977:
old  <string_0A#:>
new  < atexit:>

978:
old  <	; Initializer String \n>
new  <	; Assign index 0>

979:
old  <	db 10, 0>
new  <	mov dword [rbp + 32], 0>

981:
old  <section .text>
new  < atexit$1:>

982:
old  <>
new  <	; SignedGreaterThanEqual 15 index 256>

983:
old  < print_heap2:>
new  <	cmp dword [rbp + 32], 256>

984:
old  <	; Dereference Â£temporary2004 -> 32764 32764 0>
new  <	jge atexit$15>

985:
old  <	mov rsi, 32764>
new  <>

986:
old  <>
new  < atexit$2:>

987:
old  < print_heap2$1:>
new  <	; IntegralToIntegral Â£temporary2036 index>

988:
old  <	; Assign heapBottom Â£temporary2004 -> 32764>
new  <	mov eax, [rbp + 32]>

989:
old  <	mov eax, [rsi]>
new  <	mov rbx, 4294967295>

990:
old  <	mov [rbp + 24], eax>
new  <	and rax, rbx>

992:
old  < print_heap2$2:>
new  < atexit$3:>

993:
old  <	; Dereference Â£temporary2005 -> 32766 32766 0>
new  <	; UnsignedMultiply Â£temporary2037 Â£temporary2036 8>

994:
old  <	mov rsi, 32766>
new  <	xor rdx, rdx>

995:
old  <>
new  <	mul qword [Array_8#]>

996:
old  < print_heap2$3:>
new  <>

997:
old  <	; Assign topStack Â£temporary2005 -> 32766>
new  < atexit$4:>

998:
old  <	mov eax, [rsi]>
new  <	; BinaryAdd Â£temporary2038 g_funcArray Â£temporary2037>

999:
old  <	mov [rbp + 28], eax>
new  <	mov rsi, g_funcArray>

1000:
old  <>
new  <	add rsi, rax>

1001:
old  < print_heap2$4:>
new  <>

1002:
old  <	; Dereference Â£temporary2006 -> 32762 32762 0>
new  < atexit$5:>

1003:
old  <	mov rsi, 32762>
new  <	; Dereference Â£temporary2035 -> Â£temporary2038 Â£temporary2038 0>

1005:
old  < print_heap2$5:>
new  < atexit$6:>

1006:
old  <	; Assign heapTop Â£temporary2006 -> 32762>
new  <	; NotEqual 13 Â£temporary2035 -> Â£temporary2038 0>

1007:
old  <	mov eax, [rsi]>
new  <	cmp qword [rsi], 0>

1008:
old  <	mov [rbp + 32], eax>
new  <	jne atexit$13>

1010:
old  < print_heap2$6:>
new  < atexit$7:>

1011:
old  <	; Assign index 0>
new  <	; IntegralToIntegral Â£temporary2041 index>

1012:
old  <	mov dword [rbp + 36], 0>
new  <	mov eax, [rbp + 32]>

1013:
old  <>
new  <	mov rbx, 4294967295>

1014:
old  < print_heap2$7:>
new  <	and rax, rbx>

1015:
old  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1016:
old  <>
new  < atexit$8:>

1017:
old  < print_heap2$8:>
new  <	; UnsignedMultiply Â£temporary2042 Â£temporary2041 8>

1018:
old  <	; Parameter pointer "stack top %u, heap top %u, heap bottom %u\n" 64>
new  <	xor rdx, rdx>

1019:
old  <	mov qword [rbp + 64], string_stack20top2025u2C20heap20top2025u2C20heap20bottom2025u0A#>
new  <	mul qword [Array_8#]>

1021:
old  < print_heap2$9:>
new  < atexit$9:>

1022:
old  <	; Parameter unsigned int topStack 72>
new  <	; BinaryAdd Â£temporary2043 g_funcArray Â£temporary2042>

1023:
old  <	mov eax, [rbp + 28]>
new  <	mov rsi, g_funcArray>

1024:
old  <	mov [rbp + 72], eax>
new  <	add rsi, rax>

1026:
old  < print_heap2$10:>
new  < atexit$10:>

1027:
old  <	; Parameter unsigned int heapTop 76>
new  <	; Dereference Â£temporary2040 -> Â£temporary2043 Â£temporary2043 0>

1028:
old  <	mov eax, [rbp + 32]>
new  <>

1029:
old  <	mov [rbp + 76], eax>
new  < atexit$11:>

1030:
old  <>
new  <	; Assign Â£temporary2040 -> Â£temporary2043 fcn>

1031:
old  < print_heap2$11:>
new  <	mov rax, [rbp + 24]>

1032:
old  <	; Parameter unsigned int heapBottom 80>
new  <	mov [rsi], rax>

1033:
old  <	mov eax, [rbp + 24]>
new  <>

1034:
old  <	mov [rbp + 80], eax>
new  < atexit$12:>

1035:
old  <>
new  <	; Return 0>

1036:
old  < print_heap2$12:>
new  <	mov ebx, 0>

1037:
old  <	; Call printf 40 12>
new  <	mov rax, [rbp]>

1038:
old  <	mov qword [rbp + 40], print_heap2$13>
new  <	mov rdi, [rbp + 16]>

1039:
old  <	mov [rbp + 48], rbp>
new  <	mov rbp, [rbp + 8]>

1040:
old  <	add rbp, 40>
new  <	jmp rax>

1041:
old  <	mov rdi, rbp>
new  <>

1042:
old  <	add rdi, 12>
new  < atexit$13:>

1043:
old  <	jmp printf>
new  <	; BinaryAdd index index 1>

1044:
old  <>
new  <	inc dword [rbp + 32]>

1045:
old  < print_heap2$13:>
new  <>

1046:
old  <	; PostCall 40>
new  < atexit$14:>

1047:
old  <>
new  <	; Goto 1>

1048:
old  < print_heap2$14:>
new  <	jmp atexit$1>

1049:
old  <	; Equal 32 heapTop 0>
new  <>

1050:
old  <	cmp dword [rbp + 32], 0>
new  < atexit$15:>

1051:
old  <	je print_heap2$32>
new  <	; Return -1>

1052:
old  <>
new  <	mov ebx, -1>

1053:
old  < print_heap2$15:>
new  <	mov rax, [rbp]>

1054:
old  <	; IntegralToIntegral Â£temporary2009 heapTop>
new  <	mov rdi, [rbp + 16]>

1055:
old  <	mov esi, [rbp + 32]>
new  <	mov rbp, [rbp + 8]>

1056:
old  <	mov rax, 4294967295>
new  <	jmp rax>

1057:
old  <	and rsi, rax>
new  <>

1058:
old  <>
new  < atexit$16:>

1059:
old  < print_heap2$16:>
new  <	; FunctionEnd atexit>

1060:
old  <	; BinaryAdd Â£temporary2010 Â£temporary2009 4>
new  <>

1061:
old  <	add rsi, 4>
new  <section .text>

1063:
old  < print_heap2$17:>
new  < exit:>

1064:
old  <	; Dereference Â£temporary2012 -> Â£temporary2010 Â£temporary2010 0>
new  <	; Assign index 257>

1065:
old  <>
new  <	mov dword [rbp + 28], 257>

1066:
old  < print_heap2$18:>
new  <>

1067:
old  <	; Assign size Â£temporary2012 -> Â£temporary2010>
new  < exit$1:>

1068:
old  <	mov eax, [rsi]>
new  <	; SignedLessThan 16 index 0>

1069:
old  <	mov [rbp + 40], eax>
new  <	cmp dword [rbp + 28], 0>

1070:
old  <>
new  <	jl exit$16>

1071:
old  < print_heap2$19:>
new  <>

1072:
old  <	; PreCall 44 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < exit$2:>

1073:
old  <>
new  <	; IntegralToIntegral Â£temporary2047 index>

1074:
old  < print_heap2$20:>
new  <	mov eax, [rbp + 28]>

1075:
old  <	; Parameter pointer "  index %u, address %u, size %u\n" 68>
new  <	mov rbx, 4294967295>

1076:
old  <	mov qword [rbp + 68], string_2020index2025u2C20address2025u2C20size2025u0A#>
new  <	and rax, rbx>

1078:
old  < print_heap2$21:>
new  < exit$3:>

1079:
old  <	; Assign Â£temporary2013 index>
new  <	; UnsignedMultiply Â£temporary2048 Â£temporary2047 8>

1080:
old  <	mov eax, [rbp + 36]>
new  <	xor rdx, rdx>

1081:
old  <>
new  <	mul qword [Array_8#]>

1082:
old  < print_heap2$22:>
new  <>

1083:
old  <	; BinaryAdd index index 1>
new  < exit$4:>

1084:
old  <	inc dword [rbp + 36]>
new  <	; BinaryAdd Â£temporary2049 g_funcArray Â£temporary2048>

1085:
old  <>
new  <	mov rsi, g_funcArray>

1086:
old  < print_heap2$23:>
new  <	add rsi, rax>

1087:
old  <	; Parameter unsigned int Â£temporary2013 76>
new  <>

1088:
old  <	mov [rbp + 76], eax>
new  < exit$5:>

1089:
old  <>
new  <	; Dereference Â£temporary2046 -> Â£temporary2049 Â£temporary2049 0>

1090:
old  < print_heap2$24:>
new  <>

1091:
old  <	; Parameter unsigned int heapTop 80>
new  < exit$6:>

1092:
old  <	mov eax, [rbp + 32]>
new  <	; Equal 14 Â£temporary2046 -> Â£temporary2049 0>

1093:
old  <	mov [rbp + 80], eax>
new  <	cmp qword [rsi], 0>

1094:
old  <>
new  <	je exit$14>

1095:
old  < print_heap2$25:>
new  <>

1096:
old  <	; Parameter unsigned int size 84>
new  < exit$7:>

1097:
old  <	mov eax, [rbp + 40]>
new  <	; IntegralToIntegral Â£temporary2052 index>

1098:
old  <	mov [rbp + 84], eax>
new  <	mov eax, [rbp + 28]>

1099:
old  <>
new  <	mov rbx, 4294967295>

1100:
old  < print_heap2$26:>
new  <	and rax, rbx>

1101:
old  <	; Call printf 44 12>
new  <>

1102:
old  <	mov qword [rbp + 44], print_heap2$27>
new  < exit$8:>

1103:
old  <	mov [rbp + 52], rbp>
new  <	; UnsignedMultiply Â£temporary2053 Â£temporary2052 8>

1104:
old  <	add rbp, 44>
new  <	xor rdx, rdx>

1105:
old  <	mov rdi, rbp>
new  <	mul qword [Array_8#]>

1106:
old  <	add rdi, 12>
new  <>

1107:
old  <	jmp printf>
new  < exit$9:>

1108:
old  <>
new  <	; BinaryAdd Â£temporary2054 g_funcArray Â£temporary2053>

1109:
old  < print_heap2$27:>
new  <	mov rbx, g_funcArray>

1110:
old  <	; PostCall 44>
new  <	add rbx, rax>

1112:
old  < print_heap2$28:>
new  < exit$10:>

1113:
old  <	; IntegralToIntegral Â£temporary2015 heapTop>
new  <	; Dereference Â£temporary2051 -> Â£temporary2054 Â£temporary2054 0>

1114:
old  <	mov esi, [rbp + 32]>
new  <>

1115:
old  <	mov rax, 4294967295>
new  < exit$11:>

1116:
old  <	and rsi, rax>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1117:
old  <>
new  <	mov [rbp + 32], rbx>

1118:
old  < print_heap2$29:>
new  <>

1119:
old  <	; Dereference Â£temporary2016 -> Â£temporary2015 Â£temporary2015 0>
new  < exit$12:>

1120:
old  <>
new  <	; Call Â£temporary2051 -> Â£temporary2054 32 0>

1121:
old  < print_heap2$30:>
new  <	mov qword [rbp + 2080], exit$13>

1122:
old  <	; Assign heapTop Â£temporary2016 -> Â£temporary2015>
new  <	mov [rbp + 2088], rbp>

1123:
old  <	mov eax, [rsi]>
new  <	add rbp, 2080>

1124:
old  <	mov [rbp + 32], eax>
new  <	mov rsi, rbp>

1125:
old  <>
new  <	mov rax, [rsi]>

1126:
old  < print_heap2$31:>
new  <	jmp rax>

1127:
old  <	; Goto 14>
new  <>

1128:
old  <	jmp print_heap2$14>
new  < exit$13:>

1129:
old  <>
new  <	; PostCall 32>

1130:
old  < print_heap2$32:>
new  <	mov rbx, [rbp + 32]>

1131:
old  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1132:
old  <>
new  < exit$14:>

1133:
old  < print_heap2$33:>
new  <	; BinarySubtract index index 1>

1134:
old  <	; Parameter pointer "\n" 64>
new  <	dec dword [rbp + 28]>

1135:
old  <	mov qword [rbp + 64], string_0A#>
new  <>

1136:
old  <>
new  < exit$15:>

1137:
old  < print_heap2$34:>
new  <	; Goto 1>

1138:
old  <	; Call printf 40 0>
new  <	jmp exit$1>

1139:
old  <	mov qword [rbp + 40], print_heap2$35>
new  <>

1140:
old  <	mov [rbp + 48], rbp>
new  < exit$16:>

1141:
old  <	add rbp, 40>
new  <	; AssignRegister rax 60>

1142:
old  <	mov rdi, rbp>
new  <	mov rax, 60>

1143:
old  <	jmp printf>
new  <>

1144:
old  <>
new  < exit$17:>

1145:
old  < print_heap2$35:>
new  <	; IntegralToIntegral Â£temporary2058 status>

1146:
old  <	; PostCall 40>
new  <	mov edi, [rbp + 24]>

1147:
old  <>
new  <	mov rbx, 4294967295>

1148:
old  < print_heap2$36:>
new  <	and rdi, rbx>

1149:
old  <	; Return>
new  <>

1150:
old  <	mov rax, [rbp]>
new  < exit$18:>

1151:
old  <	mov rdi, [rbp + 16]>
new  <	; AssignRegister rdi Â£temporary2058>

1152:
old  <	mov rbp, [rbp + 8]>
new  <>

1153:
old  <	jmp rax>
new  < exit$19:>

1154:
old  <>
new  <	; SysCall>

1155:
old  < print_heap2$37:>
new  <	syscall>

1156:
old  <	; FunctionEnd print_heap2>
new  <>

1157:
old  <>
new  < exit$20:>

1158:
old  <section .data>
new  <	; Return>

1159:
old  <>
new  <	mov rax, [rbp]>

1160:
old  <g_funcArray:>
new  <	mov rdi, [rbp + 16]>

1161:
old  <	; Initializer Pointer 0>
new  <	mov rbp, [rbp + 8]>

1162:
old  <	dq 0>
new  <	jmp rax>

1163:
old  <	; InitializerZero 2040>
new  <>

1164:
old  <	times 2040 db 0>
new  < exit$21:>

1165:
old  <>
new  <	; FunctionEnd exit>

1166:
old  <section .data>
new  <>

1167:
old  <>
new  <section .text>

1168:
old  <string_Added20function20index2025i3A2025i0A#:>
new  <>

1169:
old  <	; Initializer String Added function index %i: %i\n>
new  < swap:>

1170:
old  <	db "Added function index %i: %i", 10, 0>
new  <	; Assign index 0>

1171:
old  <>
new  <	mov dword [rbp + 44], 0>

1172:
old  <section .data>
new  <>

1173:
old  <>
new  < swap$1:>

1174:
old  <Array_8#:>
new  <	; SignedGreaterThanEqual 19 index valueSize>

1175:
old  <	; Initializer Array 8>
new  <	mov eax, [rbp + 40]>

1176:
old  <	dq 8>
new  <	cmp [rbp + 44], eax>

1177:
old  <>
new  <	jge swap$19>

1178:
old  <section .text>
new  <>

1179:
old  <>
new  < swap$2:>

1180:
old  < atexit:>
new  <	; IntegralToIntegral Â£temporary2062 index>

1181:
old  <	; Empty>
new  <	mov eax, [rbp + 44]>

1182:
old  <>
new  <	mov rbx, 4294967295>

1183:
old  < atexit$1:>
new  <	and rax, rbx>

1184:
old  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1185:
old  <>
new  < swap$3:>

1186:
old  < atexit$2:>
new  <	; BinaryAdd Â£temporary2064 leftValuePtr Â£temporary2062>

1187:
old  <	; Parameter pointer "\n" 60>
new  <	mov rsi, [rbp + 24]>

1188:
old  <	mov qword [rbp + 60], string_0A#>
new  <	add rsi, rax>

1190:
old  < atexit$3:>
new  < swap$4:>

1191:
old  <	; Call printf 36 0>
new  <	; Dereference Â£temporary2061 -> Â£temporary2064 Â£temporary2064 0>

1192:
old  <	mov qword [rbp + 36], atexit$4>
new  <>

1193:
old  <	mov [rbp + 44], rbp>
new  < swap$5:>

1194:
old  <	add rbp, 36>
new  <	; Assign tempValue Â£temporary2061 -> Â£temporary2064>

1195:
old  <	mov rdi, rbp>
new  <	mov al, [rsi]>

1196:
old  <	jmp printf>
new  <	mov [rbp + 48], al>

1198:
old  < atexit$4:>
new  < swap$6:>

1199:
old  <	; PostCall 36>
new  <	; IntegralToIntegral Â£temporary2066 index>

1200:
old  <>
new  <	mov eax, [rbp + 44]>

1201:
old  < atexit$5:>
new  <	mov rbx, 4294967295>

1202:
old  <	; Assign index 0>
new  <	and rax, rbx>

1203:
old  <	mov dword [rbp + 32], 0>
new  <>

1204:
old  <>
new  < swap$7:>

1205:
old  < atexit$6:>
new  <	; BinaryAdd Â£temporary2068 leftValuePtr Â£temporary2066>

1206:
old  <	; SignedGreaterThanEqual 30 index 256>
new  <	mov rsi, [rbp + 24]>

1207:
old  <	cmp dword [rbp + 32], 256>
new  <	add rsi, rax>

1208:
old  <	jge atexit$30>
new  <>

1209:
old  <>
new  < swap$8:>

1210:
old  < atexit$7:>
new  <	; Dereference Â£temporary2065 -> Â£temporary2068 Â£temporary2068 0>

1211:
old  <	; IntegralToIntegral Â£temporary2022 index>
new  <>

1212:
old  <	mov eax, [rbp + 32]>
new  < swap$9:>

1213:
old  <	mov rbx, 4294967295>
new  <	; IntegralToIntegral Â£temporary2070 index>

1214:
old  <	and rax, rbx>
new  <	mov eax, [rbp + 44]>

1215:
old  <>
new  <	mov rbx, 4294967295>

1216:
old  < atexit$8:>
new  <	and rax, rbx>

1217:
old  <	; UnsignedMultiply Â£temporary2023 Â£temporary2022 8>
new  <>

1218:
old  <	xor rdx, rdx>
new  < swap$10:>

1219:
old  <	mul qword [Array_8#]>
new  <	; BinaryAdd Â£temporary2072 rightValuePtr Â£temporary2070>

1220:
old  <>
new  <	mov rdi, [rbp + 32]>

1221:
old  < atexit$9:>
new  <	add rdi, rax>

1222:
old  <	; BinaryAdd Â£temporary2024 g_funcArray Â£temporary2023>
new  <>

1223:
old  <	mov rsi, g_funcArray>
new  < swap$11:>

1224:
old  <	add rsi, rax>
new  <	; Dereference Â£temporary2069 -> Â£temporary2072 Â£temporary2072 0>

1226:
old  < atexit$10:>
new  < swap$12:>

1227:
old  <	; Dereference Â£temporary2021 -> Â£temporary2024 Â£temporary2024 0>
new  <	; Assign Â£temporary2065 -> Â£temporary2068 Â£temporary2069 -> Â£temporary2072>

1228:
old  <>
new  <	mov al, [rdi]>

1229:
old  < atexit$11:>
new  <	mov [rsi], al>

1230:
old  <	; NotEqual 28 Â£temporary2021 -> Â£temporary2024 0>
new  <>

1231:
old  <	cmp qword [rsi], 0>
new  < swap$13:>

1232:
old  <	jne atexit$28>
new  <	; IntegralToIntegral Â£temporary2074 index>

1233:
old  <>
new  <	mov eax, [rbp + 44]>

1234:
old  < atexit$12:>
new  <	mov rbx, 4294967295>

1235:
old  <	; IntegralToIntegral Â£temporary2027 index>
new  <	and rax, rbx>

1236:
old  <	mov eax, [rbp + 32]>
new  <>

1237:
old  <	mov rbx, 4294967295>
new  < swap$14:>

1238:
old  <	and rax, rbx>
new  <	; BinaryAdd Â£temporary2076 rightValuePtr Â£temporary2074>

1239:
old  <>
new  <	mov rsi, [rbp + 32]>

1240:
old  < atexit$13:>
new  <	add rsi, rax>

1241:
old  <	; UnsignedMultiply Â£temporary2028 Â£temporary2027 8>
new  <>

1242:
old  <	xor rdx, rdx>
new  < swap$15:>

1243:
old  <	mul qword [Array_8#]>
new  <	; Dereference Â£temporary2073 -> Â£temporary2076 Â£temporary2076 0>

1245:
old  < atexit$14:>
new  < swap$16:>

1246:
old  <	; BinaryAdd Â£temporary2029 g_funcArray Â£temporary2028>
new  <	; Assign Â£temporary2073 -> Â£temporary2076 tempValue>

1247:
old  <	mov rsi, g_funcArray>
new  <	mov al, [rbp + 48]>

1248:
old  <	add rsi, rax>
new  <	mov [rsi], al>

1250:
old  < atexit$15:>
new  < swap$17:>

1251:
old  <	; Dereference Â£temporary2026 -> Â£temporary2029 Â£temporary2029 0>
new  <	; BinaryAdd index index 1>

1252:
old  <>
new  <	inc dword [rbp + 44]>

1253:
old  < atexit$16:>
new  <>

1254:
old  <	; Assign Â£temporary2026 -> Â£temporary2029 fcn>
new  < swap$18:>

1255:
old  <	mov rax, [rbp + 24]>
new  <	; Goto 1>

1256:
old  <	mov [rsi], rax>
new  <	jmp swap$1>

1258:
old  < atexit$17:>
new  < swap$19:>

1259:
old  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Return>

1260:
old  <>
new  <	mov rax, [rbp]>

1261:
old  < atexit$18:>
new  <	mov rdi, [rbp + 16]>

1262:
old  <	; Parameter pointer "Added function index %i: %i\n" 60>
new  <	mov rbp, [rbp + 8]>

1263:
old  <	mov qword [rbp + 60], string_Added20function20index2025i3A2025i0A#>
new  <	jmp rax>

1265:
old  < atexit$19:>
new  < swap$20:>

1266:
old  <	; Parameter signedint index 68>
new  <	; FunctionEnd swap>

1267:
old  <	mov eax, [rbp + 32]>
new  <>

1268:
old  <	mov [rbp + 68], eax>
new  <section .text>

1270:
old  < atexit$20:>
new  < qsort:>

1271:
old  <	; IntegralToIntegral Â£temporary2031 index>
new  <	; IntegralToIntegral Â£temporary2077 valueList>

1272:
old  <	mov eax, [rbp + 32]>
new  <	mov rax, [rbp + 24]>

1273:
old  <	mov rbx, 4294967295>
new  <>

1274:
old  <	and rax, rbx>
new  < qsort$1:>

1275:
old  <>
new  <	; Assign charList Â£temporary2077>

1276:
old  < atexit$21:>
new  <	mov [rbp + 52], rax>

1277:
old  <	; UnsignedMultiply Â£temporary2032 Â£temporary2031 8>
new  <>

1278:
old  <	xor rdx, rdx>
new  < qsort$2:>

1279:
old  <	mul qword [Array_8#]>
new  <	; BinarySubtract index1 listSize 1>

1280:
old  <>
new  <	mov eax, [rbp + 32]>

1281:
old  < atexit$22:>
new  <	dec eax>

1282:
old  <	; BinaryAdd Â£temporary2033 g_funcArray Â£temporary2032>
new  <	mov [rbp + 60], eax>

1283:
old  <	mov rsi, g_funcArray>
new  <>

1284:
old  <	add rsi, rax>
new  < qsort$3:>

1285:
old  <>
new  <	; SignedLessThanEqual 33 index1 0>

1286:
old  < atexit$23:>
new  <	cmp dword [rbp + 60], 0>

1287:
old  <	; Dereference Â£temporary2030 -> Â£temporary2033 Â£temporary2033 0>
new  <	jle qsort$33>

1289:
old  < atexit$24:>
new  < qsort$4:>

1290:
old  <	; Parameter pointer Â£temporary2030 -> Â£temporary2033 72>
new  <	; Assign update 0>

1291:
old  <	mov rax, [rsi]>
new  <	mov dword [rbp + 48], 0>

1292:
old  <	mov [rbp + 72], rax>
new  <>

1293:
old  <>
new  < qsort$5:>

1294:
old  < atexit$25:>
new  <	; Assign index2 0>

1295:
old  <	; Call printf 36 12>
new  <	mov dword [rbp + 64], 0>

1296:
old  <	mov qword [rbp + 36], atexit$26>
new  <>

1297:
old  <	mov [rbp + 44], rbp>
new  < qsort$6:>

1298:
old  <	add rbp, 36>
new  <	; SignedGreaterThanEqual 30 index2 index1>

1299:
old  <	mov rdi, rbp>
new  <	mov eax, [rbp + 60]>

1300:
old  <	add rdi, 12>
new  <	cmp [rbp + 64], eax>

1301:
old  <	jmp printf>
new  <	jge qsort$30>

1303:
old  < atexit$26:>
new  < qsort$7:>

1304:
old  <	; PostCall 36>
new  <	; SignedMultiply Â£temporary2083 index2 valueSize>

1305:
old  <>
new  <	mov eax, [rbp + 64]>

1306:
old  < atexit$27:>
new  <	xor edx, edx>

1307:
old  <	; Return 0>
new  <	imul dword [rbp + 36]>

1308:
old  <	mov ebx, 0>
new  <>

1309:
old  <	mov rax, [rbp]>
new  < qsort$8:>

1310:
old  <	mov rdi, [rbp + 16]>
new  <	; IntegralToIntegral Â£temporary2084 Â£temporary2083>

1311:
old  <	mov rbp, [rbp + 8]>
new  <	mov rbx, 4294967295>

1312:
old  <	jmp rax>
new  <	and rax, rbx>

1314:
old  < atexit$28:>
new  < qsort$9:>

1315:
old  <	; BinaryAdd index index 1>
new  <	; BinaryAdd valuePtr1 charList Â£temporary2084>

1316:
old  <	inc dword [rbp + 32]>
new  <	mov rbx, [rbp + 52]>

1317:
old  <>
new  <	add rbx, rax>

1318:
old  < atexit$29:>
new  <	mov [rbp + 68], rbx>

1319:
old  <	; Goto 6>
new  <>

1320:
old  <	jmp atexit$6>
new  < qsort$10:>

1321:
old  <>
new  <	; BinaryAdd Â£temporary2087 index2 1>

1322:
old  < atexit$30:>
new  <	mov eax, [rbp + 64]>

1323:
old  <	; Return -1>
new  <	inc eax>

1324:
old  <	mov ebx, -1>
new  <>

1325:
old  <	mov rax, [rbp]>
new  < qsort$11:>

1326:
old  <	mov rdi, [rbp + 16]>
new  <	; SignedMultiply Â£temporary2088 Â£temporary2087 valueSize>

1327:
old  <	mov rbp, [rbp + 8]>
new  <	xor edx, edx>

1328:
old  <	jmp rax>
new  <	imul dword [rbp + 36]>

1330:
old  < atexit$31:>
new  < qsort$12:>

1331:
old  <	; FunctionEnd atexit>
new  <	; IntegralToIntegral Â£temporary2089 Â£temporary2088>

1332:
old  <>
new  <	mov rbx, 4294967295>

1333:
old  <section .data>
new  <	and rax, rbx>

1335:
old  <string_Called20function20index2025i3A2025i0A#:>
new  < qsort$13:>

1336:
old  <	; Initializer String Called function index %i: %i\n>
new  <	; BinaryAdd valuePtr2 charList Â£temporary2089>

1337:
old  <	db "Called function index %i: %i", 10, 0>
new  <	mov rbx, [rbp + 52]>

1338:
old  <>
new  <	add rbx, rax>

1339:
old  <section .text>
new  <	mov [rbp + 76], rbx>

1341:
old  < exit:>
new  < qsort$14:>

1342:
old  <	; Empty>
new  <	; PreCall 84 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1344:
old  < exit$1:>
new  < qsort$15:>

1345:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter pointer valuePtr1 108>

1346:
old  <>
new  <	mov rax, [rbp + 68]>

1347:
old  < exit$2:>
new  <	mov [rbp + 108], rax>

1348:
old  <	; Parameter pointer "\n" 56>
new  <>

1349:
old  <	mov qword [rbp + 56], string_0A#>
new  < qsort$16:>

1350:
old  <>
new  <	; Parameter pointer valuePtr2 116>

1351:
old  < exit$3:>
new  <	mov rax, [rbp + 76]>

1352:
old  <	; Call printf 32 0>
new  <	mov [rbp + 116], rax>

1353:
old  <	mov qword [rbp + 32], exit$4>
new  <>

1354:
old  <	mov [rbp + 40], rbp>
new  < qsort$17:>

1355:
old  <	add rbp, 32>
new  <	; Call compare 84 0>

1356:
old  <	mov rdi, rbp>
new  <	mov qword [rbp + 84], qsort$18>

1357:
old  <	jmp printf>
new  <	mov [rbp + 92], rbp>

1358:
old  <>
new  <	add rbp, 84>

1359:
old  < exit$4:>
new  <	mov rax, [rbp + 40]>

1360:
old  <	; PostCall 32>
new  <	jmp rax>

1362:
old  < exit$5:>
new  < qsort$18:>

1363:
old  <	; Assign index 257>
new  <	; PostCall 84>

1364:
old  <	mov dword [rbp + 28], 257>
new  <>

1365:
old  <>
new  < qsort$19:>

1366:
old  < exit$6:>
new  <	; GetReturnValue Â£temporary2092>

1367:
old  <	; SignedLessThan 31 index 0>
new  <>

1368:
old  <	cmp dword [rbp + 28], 0>
new  < qsort$20:>

1369:
old  <	jl exit$31>
new  <	; SignedLessThanEqual 28 Â£temporary2092 0>

1370:
old  <>
new  <	cmp ebx, 0>

1371:
old  < exit$7:>
new  <	jle qsort$28>

1372:
old  <	; IntegralToIntegral Â£temporary2039 index>
new  <>

1373:
old  <	mov eax, [rbp + 28]>
new  < qsort$21:>

1374:
old  <	mov rbx, 4294967295>
new  <	; PreCall 84 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1375:
old  <	and rax, rbx>
new  <>

1376:
old  <>
new  < qsort$22:>

1377:
old  < exit$8:>
new  <	; Parameter pointer valuePtr1 108>

1378:
old  <	; UnsignedMultiply Â£temporary2040 Â£temporary2039 8>
new  <	mov rax, [rbp + 68]>

1379:
old  <	xor rdx, rdx>
new  <	mov [rbp + 108], rax>

1380:
old  <	mul qword [Array_8#]>
new  <>

1381:
old  <>
new  < qsort$23:>

1382:
old  < exit$9:>
new  <	; Parameter pointer valuePtr2 116>

1383:
old  <	; BinaryAdd Â£temporary2041 g_funcArray Â£temporary2040>
new  <	mov rax, [rbp + 76]>

1384:
old  <	mov rsi, g_funcArray>
new  <	mov [rbp + 116], rax>

1385:
old  <	add rsi, rax>
new  <>

1386:
old  <>
new  < qsort$24:>

1387:
old  < exit$10:>
new  <	; Parameter signedint valueSize 124>

1388:
old  <	; Dereference Â£temporary2038 -> Â£temporary2041 Â£temporary2041 0>
new  <	mov eax, [rbp + 36]>

1389:
old  <>
new  <	mov [rbp + 124], eax>

1390:
old  < exit$11:>
new  <>

1391:
old  <	; Equal 29 Â£temporary2038 -> Â£temporary2041 0>
new  < qsort$25:>

1392:
old  <	cmp qword [rsi], 0>
new  <	; Call swap 84 0>

1393:
old  <	je exit$29>
new  <	mov qword [rbp + 84], qsort$26>

1394:
old  <>
new  <	mov [rbp + 92], rbp>

1395:
old  < exit$12:>
new  <	add rbp, 84>

1396:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	jmp swap>

1398:
old  < exit$13:>
new  < qsort$26:>

1399:
old  <	; Parameter pointer "Called function index %i: %i\n" 56>
new  <	; PostCall 84>

1400:
old  <	mov qword [rbp + 56], string_Called20function20index2025i3A2025i0A#>
new  <>

1401:
old  <>
new  < qsort$27:>

1402:
old  < exit$14:>
new  <	; Assign update 1>

1403:
old  <	; Parameter signedint index 64>
new  <	mov dword [rbp + 48], 1>

1404:
old  <	mov eax, [rbp + 28]>
new  <>

1405:
old  <	mov [rbp + 64], eax>
new  < qsort$28:>

1406:
old  <>
new  <	; BinaryAdd index2 index2 1>

1407:
old  < exit$15:>
new  <	inc dword [rbp + 64]>

1408:
old  <	; IntegralToIntegral Â£temporary2044 index>
new  <>

1409:
old  <	mov eax, [rbp + 28]>
new  < qsort$29:>

1410:
old  <	mov rbx, 4294967295>
new  <	; Goto 6>

1411:
old  <	and rax, rbx>
new  <	jmp qsort$6>

1413:
old  < exit$16:>
new  < qsort$30:>

1414:
old  <	; UnsignedMultiply Â£temporary2045 Â£temporary2044 8>
new  <	; Equal 33 update 0>

1415:
old  <	xor rdx, rdx>
new  <	cmp dword [rbp + 48], 0>

1416:
old  <	mul qword [Array_8#]>
new  <	je qsort$33>

1418:
old  < exit$17:>
new  < qsort$31:>

1419:
old  <	; BinaryAdd Â£temporary2046 g_funcArray Â£temporary2045>
new  <	; BinarySubtract index1 index1 1>

1420:
old  <	mov rsi, g_funcArray>
new  <	dec dword [rbp + 60]>

1421:
old  <	add rsi, rax>
new  <>

1422:
old  <>
new  < qsort$32:>

1423:
old  < exit$18:>
new  <	; Goto 3>

1424:
old  <	; Dereference Â£temporary2043 -> Â£temporary2046 Â£temporary2046 0>
new  <	jmp qsort$3>

1426:
old  < exit$19:>
new  < qsort$33:>

1427:
old  <	; Parameter pointer Â£temporary2043 -> Â£temporary2046 68>
new  <	; Return>

1428:
old  <	mov rax, [rsi]>
new  <	mov rax, [rbp]>

1429:
old  <	mov [rbp + 68], rax>
new  <	mov rdi, [rbp + 16]>

1430:
old  <>
new  <	mov rbp, [rbp + 8]>

1431:
old  < exit$20:>
new  <	jmp rax>

1432:
old  <	; Call printf 32 12>
new  <>

1433:
old  <	mov qword [rbp + 32], exit$21>
new  < qsort$34:>

1434:
old  <	mov [rbp + 40], rbp>
new  <	; FunctionEnd qsort>

1435:
old  <	add rbp, 32>
new  <>

1436:
old  <	mov rdi, rbp>
new  <section .text>

1437:
old  <	add rdi, 12>
new  <>

1438:
old  <	jmp printf>
new  < @abs:>

1439:
old  <>
new  <	; SignedGreaterThanEqual 4 value 0>

1440:
old  < exit$21:>
new  <	cmp dword [rbp + 24], 0>

1441:
old  <	; PostCall 32>
new  <	jge @abs$4>

1443:
old  < exit$22:>
new  < @abs$1:>

1444:
old  <	; IntegralToIntegral Â£temporary2049 index>
new  <	; UnarySubtract Â£temporary2098 value>

1445:
old  <	mov eax, [rbp + 28]>
new  <	mov ebx, [rbp + 24]>

1446:
old  <	mov rbx, 4294967295>
new  <	neg ebx>

1447:
old  <	and rax, rbx>
new  <>

1448:
old  <>
new  < @abs$2:>

1449:
old  < exit$23:>
new  <	; Assign Â£temporary2099 Â£temporary2098>

1450:
old  <	; UnsignedMultiply Â£temporary2050 Â£temporary2049 8>
new  <>

1451:
old  <	xor rdx, rdx>
new  < @abs$3:>

1452:
old  <	mul qword [Array_8#]>
new  <	; Goto 5>

1453:
old  <>
new  <	jmp @abs$5>

1454:
old  < exit$24:>
new  <>

1455:
old  <	; BinaryAdd Â£temporary2051 g_funcArray Â£temporary2050>
new  < @abs$4:>

1456:
old  <	mov rbx, g_funcArray>
new  <	; Assign Â£temporary2099 value>

1457:
old  <	add rbx, rax>
new  <	mov ebx, [rbp + 24]>

1459:
old  < exit$25:>
new  < @abs$5:>

1460:
old  <	; Dereference Â£temporary2048 -> Â£temporary2051 Â£temporary2051 0>
new  <	; Return Â£temporary2099>

1461:
old  <>
new  <	mov rax, [rbp]>

1462:
old  < exit$26:>
new  <	mov rdi, [rbp + 16]>

1463:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov rbp, [rbp + 8]>

1464:
old  <	mov [rbp + 32], rbx>
new  <	jmp rax>

1466:
old  < exit$27:>
new  < @abs$6:>

1467:
old  <	; Call Â£temporary2048 -> Â£temporary2051 32 0>
new  <	; FunctionEnd @abs>

1468:
old  <	mov qword [rbp + 2080], exit$28>
new  <>

1469:
old  <	mov [rbp + 2088], rbp>
new  <section .text>

1470:
old  <	add rbp, 2080>
new  <>

1471:
old  <	mov rsi, rbp>
new  < labs:>

1472:
old  <	mov rax, [rsi]>
new  <	; SignedGreaterThanEqual 4 value 0>

1473:
old  <	jmp rax>
new  <	cmp qword [rbp + 24], 0>

1474:
old  <>
new  <	jge labs$4>

1475:
old  < exit$28:>
new  <>

1476:
old  <	; PostCall 32>
new  < labs$1:>

1477:
old  <	mov rbx, [rbp + 32]>
new  <	; UnarySubtract Â£temporary2101 value>

1478:
old  <>
new  <	mov rbx, [rbp + 24]>

1479:
old  < exit$29:>
new  <	neg rbx>

1480:
old  <	; BinarySubtract index index 1>
new  <>

1481:
old  <	dec dword [rbp + 28]>
new  < labs$2:>

1482:
old  <>
new  <	; Assign Â£temporary2102 Â£temporary2101>

1483:
old  < exit$30:>
new  <>

1484:
old  <	; Goto 6>
new  < labs$3:>

1485:
old  <	jmp exit$6>
new  <	; Goto 5>

1486:
old  <>
new  <	jmp labs$5>

1487:
old  < exit$31:>
new  <>

1488:
old  <	; AssignRegister rax 60>
new  < labs$4:>

1489:
old  <	mov rax, 60>
new  <	; Assign Â£temporary2102 value>

1490:
old  <>
new  <	mov rbx, [rbp + 24]>

1491:
old  < exit$32:>
new  <>

1492:
old  <	; IntegralToIntegral Â£temporary2055 status>
new  < labs$5:>

1493:
old  <	mov edi, [rbp + 24]>
new  <	; Return Â£temporary2102>

1494:
old  <	mov rbx, 4294967295>
new  <	mov rax, [rbp]>

1495:
old  <	and rdi, rbx>
new  <	mov rdi, [rbp + 16]>

1496:
old  <>
new  <	mov rbp, [rbp + 8]>

1497:
old  < exit$33:>
new  <	jmp rax>

1498:
old  <	; AssignRegister rdi Â£temporary2055>
new  <>

1499:
old  <>
new  < labs$6:>

1500:
old  < exit$34:>
new  <	; FunctionEnd labs>

1501:
old  <	; SysCall>
new  <>

1502:
old  <	syscall>
new  <section .text>

1504:
old  < exit$35:>
new  < div:>

1505:
old  <	; Return>
new  <	; Assign result.quot 0>

1506:
old  <	mov rax, [rbp]>
new  <	mov dword [rbp + 32], 0>

1507:
old  <	mov rdi, [rbp + 16]>
new  <>

1508:
old  <	mov rbp, [rbp + 8]>
new  < div$1:>

1509:
old  <	jmp rax>
new  <	; Assign result.rem 0>

1510:
old  <>
new  <	mov dword [rbp + 36], 0>

1511:
old  < exit$36:>
new  <>

1512:
old  <	; FunctionEnd exit>
new  < div$2:>

1513:
old  <>
new  <	; NotEqual 5 denum 0>

1514:
old  <section .text>
new  <	cmp dword [rbp + 28], 0>

1515:
old  <>
new  <	jne div$5>

1516:
old  < swap:>
new  <>

1517:
old  <	; Empty>
new  < div$3:>

1518:
old  <>
new  <	; Assign errno 6>

1519:
old  < swap$1:>
new  <	mov dword [errno], 6>

1520:
old  <	; Assign index 0>
new  <>

1521:
old  <	mov dword [rbp + 44], 0>
new  < div$4:>

1522:
old  <>
new  <	; Return result>

1523:
old  < swap$2:>
new  <	mov rbx, rbp>

1524:
old  <	; SignedGreaterThanEqual 20 index valueSize>
new  <	add rbx, 32>

1525:
old  <	mov eax, [rbp + 40]>
new  <	mov rax, [rbp]>

1526:
old  <	cmp [rbp + 44], eax>
new  <	mov rdi, [rbp + 16]>

1527:
old  <	jge swap$20>
new  <	mov rbp, [rbp + 8]>

1528:
old  <>
new  <	jmp rax>

1529:
old  < swap$3:>
new  <>

1530:
old  <	; IntegralToIntegral Â£temporary2059 index>
new  < div$5:>

1531:
old  <	mov eax, [rbp + 44]>
new  <	; SignedDivide result.quot num denum>

1532:
old  <	mov rbx, 4294967295>
new  <	mov eax, [rbp + 24]>

1533:
old  <	and rax, rbx>
new  <	xor edx, edx>

1534:
old  <>
new  <	idiv dword [rbp + 28]>

1535:
old  < swap$4:>
new  <	mov [rbp + 32], eax>

1536:
old  <	; BinaryAdd Â£temporary2061 leftValuePtr Â£temporary2059>
new  <>

1537:
old  <	mov rsi, [rbp + 24]>
new  < div$6:>

1538:
old  <	add rsi, rax>
new  <	; SignedModulo result.rem num denum>

1539:
old  <>
new  <	mov eax, [rbp + 24]>

1540:
old  < swap$5:>
new  <	xor edx, edx>

1541:
old  <	; Dereference Â£temporary2058 -> Â£temporary2061 Â£temporary2061 0>
new  <	idiv dword [rbp + 28]>

1542:
old  <>
new  <	mov [rbp + 36], edx>

1543:
old  < swap$6:>
new  <>

1544:
old  <	; Assign tempValue Â£temporary2058 -> Â£temporary2061>
new  < div$7:>

1545:
old  <	mov al, [rsi]>
new  <	; Return result>

1546:
old  <	mov [rbp + 48], al>
new  <	mov rbx, rbp>

1547:
old  <>
new  <	add rbx, 32>

1548:
old  < swap$7:>
new  <	mov rax, [rbp]>

1549:
old  <	; IntegralToIntegral Â£temporary2063 index>
new  <	mov rdi, [rbp + 16]>

1550:
old  <	mov eax, [rbp + 44]>
new  <	mov rbp, [rbp + 8]>

1551:
old  <	mov rbx, 4294967295>
new  <	jmp rax>

1552:
old  <	and rax, rbx>
new  <>

1553:
old  <>
new  < div$8:>

1554:
old  < swap$8:>
new  <	; FunctionEnd div>

1555:
old  <	; BinaryAdd Â£temporary2065 leftValuePtr Â£temporary2063>
new  <>

1556:
old  <	mov rsi, [rbp + 24]>
new  <section .text>

1557:
old  <	add rsi, rax>
new  <>

1558:
old  <>
new  < ldiv:>

1559:
old  < swap$9:>
new  <	; Assign result.quot 0>

1560:
old  <	; Dereference Â£temporary2062 -> Â£temporary2065 Â£temporary2065 0>
new  <	mov qword [rbp + 40], 0>

1562:
old  < swap$10:>
new  < ldiv$1:>

1563:
old  <	; IntegralToIntegral Â£temporary2067 index>
new  <	; Assign result.rem 0>

1564:
old  <	mov eax, [rbp + 44]>
new  <	mov qword [rbp + 48], 0>

1565:
old  <	mov rbx, 4294967295>
new  <>

1566:
old  <	and rax, rbx>
new  < ldiv$2:>

1567:
old  <>
new  <	; NotEqual 5 denum 0>

1568:
old  < swap$11:>
new  <	cmp qword [rbp + 32], 0>

1569:
old  <	; BinaryAdd Â£temporary2069 rightValuePtr Â£temporary2067>
new  <	jne ldiv$5>

1570:
old  <	mov rdi, [rbp + 32]>
new  <>

1571:
old  <	add rdi, rax>
new  < ldiv$3:>

1572:
old  <>
new  <	; Assign errno 6>

1573:
old  < swap$12:>
new  <	mov dword [errno], 6>

1574:
old  <	; Dereference Â£temporary2066 -> Â£temporary2069 Â£temporary2069 0>
new  <>

1575:
old  <>
new  < ldiv$4:>

1576:
old  < swap$13:>
new  <	; Return result>

1577:
old  <	; Assign Â£temporary2062 -> Â£temporary2065 Â£temporary2066 -> Â£temporary2069>
new  <	mov rbx, rbp>

1578:
old  <	mov al, [rdi]>
new  <	add rbx, 40>

1579:
old  <	mov [rsi], al>
new  <	mov rax, [rbp]>

1580:
old  <>
new  <	mov rdi, [rbp + 16]>

1581:
old  < swap$14:>
new  <	mov rbp, [rbp + 8]>

1582:
old  <	; IntegralToIntegral Â£temporary2071 index>
new  <	jmp rax>

1583:
old  <	mov eax, [rbp + 44]>
new  <>

1584:
old  <	mov rbx, 4294967295>
new  < ldiv$5:>

1585:
old  <	and rax, rbx>
new  <	; SignedDivide result.quot num denum>

1586:
old  <>
new  <	mov rax, [rbp + 24]>

1587:
old  < swap$15:>
new  <	xor rdx, rdx>

1588:
old  <	; BinaryAdd Â£temporary2073 rightValuePtr Â£temporary2071>
new  <	idiv qword [rbp + 32]>

1589:
old  <	mov rsi, [rbp + 32]>
new  <	mov [rbp + 40], rax>

1590:
old  <	add rsi, rax>
new  <>

1591:
old  <>
new  < ldiv$6:>

1592:
old  < swap$16:>
new  <	; SignedModulo result.rem num denum>

1593:
old  <	; Dereference Â£temporary2070 -> Â£temporary2073 Â£temporary2073 0>
new  <	mov rax, [rbp + 24]>

1594:
old  <>
new  <	xor rdx, rdx>

1595:
old  < swap$17:>
new  <	idiv qword [rbp + 32]>

1596:
old  <	; Assign Â£temporary2070 -> Â£temporary2073 tempValue>
new  <	mov [rbp + 48], rdx>

1597:
old  <	mov al, [rbp + 48]>
new  <>

1598:
old  <	mov [rsi], al>
new  < ldiv$7:>

1599:
old  <>
new  <	; Return result>

1600:
old  < swap$18:>
new  <	mov rbx, rbp>

1601:
old  <	; BinaryAdd index index 1>
new  <	add rbx, 40>

1602:
old  <	inc dword [rbp + 44]>
new  <	mov rax, [rbp]>

1603:
old  <>
new  <	mov rdi, [rbp + 16]>

1604:
old  < swap$19:>
new  <	mov rbp, [rbp + 8]>

1605:
old  <	; Goto 2>
new  <	jmp rax>

1606:
old  <	jmp swap$2>
new  <>

1607:
old  <>
new  < ldiv$8:>

1608:
old  < swap$20:>
new  <	; FunctionEnd ldiv>

6:
old  <	global default_test>
new  <	global asctime>

7:
old  <	global asctime>
new  <	global ctime>

8:
old  <	global ctime>
new  <	global localtime>

9:
old  <	global localtime>
new  <	global strftime>

10:
old  <	global strftime>
new  <>

11:
old  <>
new  <	extern sprintf>

12:
old  <	extern sprintf>
new  <	extern localeconv>

13:
old  <	extern localeconv>
new  <	extern strcpy>

14:
old  <	extern strcpy>
new  <	extern strlen>

15:
old  <	extern printf>
new  <	extern strcat>

16:
old  <	extern strlen>
new  <	extern $StackTop>

17:
old  <	extern strcat>
new  <>

18:
old  <	extern $StackTop>
new  <>

19:
old  <>
new  <section .text>

21:
old  <section .text>
new  < clock:>

22:
old  <>
new  <	; Return -1>

23:
old  < clock:>
new  <	mov rbx, -1>

24:
old  <	; Return -1>
new  <	mov rax, [rbp]>

25:
old  <	mov rbx, -1>
new  <	mov rdi, [rbp + 16]>

26:
old  <	mov rax, [rbp]>
new  <	mov rbp, [rbp + 8]>

27:
old  <	mov rdi, [rbp + 16]>
new  <	jmp rax>

28:
old  <	mov rbp, [rbp + 8]>
new  <>

29:
old  <	jmp rax>
new  < clock$1:>

30:
old  <>
new  <	; FunctionEnd clock>

31:
old  < clock$1:>
new  <>

32:
old  <	; FunctionEnd clock>
new  <section .text>

34:
old  <section .text>
new  < time:>

35:
old  <>
new  <	; AssignRegister rax 201>

36:
old  < time:>
new  <	mov rax, 201>

37:
old  <	; Empty>
new  <>

38:
old  <>
new  < time$1:>

39:
old  < time$1:>
new  <	; Address Â£temporary2123 time>

40:
old  <	; AssignRegister rax 201>
new  <	mov rdi, rbp>

41:
old  <	mov rax, 201>
new  <	add rdi, 32>

44:
old  <	; Address Â£temporary2120 time>
new  <	; IntegralToIntegral Â£temporary2124 Â£temporary2123>

45:
old  <	mov rdi, rbp>
new  <>

46:
old  <	add rdi, 32>
new  < time$3:>

47:
old  <>
new  <	; AssignRegister rdi Â£temporary2124>

48:
old  < time$3:>
new  <>

49:
old  <	; IntegralToIntegral Â£temporary2121 Â£temporary2120>
new  < time$4:>

50:
old  <>
new  <	; SysCall>

51:
old  < time$4:>
new  <	syscall>

52:
old  <	; AssignRegister rdi Â£temporary2121>
new  <>

53:
old  <>
new  < time$5:>

54:
old  < time$5:>
new  <	; Equal 8 timePtr 0>

55:
old  <	; SysCall>
new  <	cmp qword [rbp + 24], 0>

56:
old  <	syscall>
new  <	je time$8>

59:
old  <	; Equal 9 timePtr 0>
new  <	; Dereference Â£temporary2126 -> timePtr timePtr 0>

60:
old  <	cmp qword [rbp + 24], 0>
new  <	mov rsi, [rbp + 24]>

61:
old  <	je time$9>
new  <>

62:
old  <>
new  < time$7:>

63:
old  < time$7:>
new  <	; Assign Â£temporary2126 -> timePtr time>

64:
old  <	; Dereference Â£temporary2123 -> timePtr timePtr 0>
new  <	mov rax, [rbp + 32]>

65:
old  <	mov rsi, [rbp + 24]>
new  <	mov [rsi], rax>

68:
old  <	; Assign Â£temporary2123 -> timePtr time>
new  <	; Return time>

69:
old  <	mov rax, [rbp + 32]>
new  <	mov rbx, [rbp + 32]>

70:
old  <	mov [rsi], rax>
new  <	mov rax, [rbp]>

71:
old  <>
new  <	mov rdi, [rbp + 16]>

72:
old  < time$9:>
new  <	mov rbp, [rbp + 8]>

73:
old  <	; Return time>
new  <	jmp rax>

74:
old  <	mov rbx, [rbp + 32]>
new  <>

75:
old  <	mov rax, [rbp]>
new  < time$9:>

76:
old  <	mov rdi, [rbp + 16]>
new  <	; FunctionEnd time>

77:
old  <	mov rbp, [rbp + 8]>
new  <>

78:
old  <	jmp rax>
new  <section .data>

80:
old  < time$10:>
new  <int4$4#:>

81:
old  <	; FunctionEnd time>
new  <	; Initializer SignedInt 4>

82:
old  <>
new  <	dd 4>

83:
old  <section .data>
new  <>

84:
old  <>
new  <section .data>

85:
old  <int4$4#:>
new  <>

86:
old  <	; Initializer SignedInt 4>
new  <int4$365#:>

87:
old  <	dd 4>
new  <	; Initializer SignedInt 365>

88:
old  <>
new  <	dd 365>

89:
old  <section .data>
new  <>

90:
old  <>
new  <section .data>

91:
old  <int4$365#:>
new  <>

92:
old  <	; Initializer SignedInt 365>
new  <int8$86400#:>

93:
old  <	dd 365>
new  <	; Initializer Signed_Long_Int 86400>

94:
old  <>
new  <	dq 86400>

95:
old  <section .data>
new  <>

96:
old  <>
new  <section .data>

97:
old  <int8$86400#:>
new  <>

98:
old  <	; Initializer Signed_Long_Int 86400>
new  <int8$3600#:>

99:
old  <	dq 86400>
new  <	; Initializer Signed_Long_Int 3600>

100:
old  <>
new  <	dq 3600>

101:
old  <section .data>
new  <>

102:
old  <>
new  <section .data>

103:
old  <int8$3600#:>
new  <>

104:
old  <	; Initializer Signed_Long_Int 3600>
new  <int8$60#:>

105:
old  <	dq 3600>
new  <	; Initializer Signed_Long_Int 60>

106:
old  <>
new  <	dq 60>

107:
old  <section .data>
new  <>

108:
old  <>
new  <section .text>

109:
old  <int8$60#:>
new  <>

110:
old  <	; Initializer Signed_Long_Int 60>
new  < mktime:>

111:
old  <	dq 60>
new  <	; Equal 27 tp 0>

112:
old  <>
new  <	cmp qword [rbp + 24], 0>

113:
old  <section .text>
new  <	je mktime$27>

115:
old  < mktime:>
new  < mktime$1:>

116:
old  <	; Equal 27 tp 0>
new  <	; Dereference Â£temporary2129 -> tp tp 0>

117:
old  <	cmp qword [rbp + 24], 0>
new  <	mov rsi, [rbp + 24]>

118:
old  <	je mktime$27>
new  <>

119:
old  <>
new  < mktime$2:>

120:
old  < mktime$1:>
new  <	; BinarySubtract Â£temporary2130 Â£temporary2129 -> tp 69>

121:
old  <	; Dereference Â£temporary2126 -> tp tp 0>
new  <	mov eax, [rsi + 20]>

122:
old  <	mov rsi, [rbp + 24]>
new  <	sub eax, 69>

124:
old  < mktime$2:>
new  < mktime$3:>

125:
old  <	; BinarySubtract Â£temporary2127 Â£temporary2126 -> tp 69>
new  <	; SignedDivide Â£temporary2131 Â£temporary2130 4>

126:
old  <	mov eax, [rsi + 20]>
new  <	xor edx, edx>

127:
old  <	sub eax, 69>
new  <	idiv dword [int4$4#]>

129:
old  < mktime$3:>
new  < mktime$4:>

130:
old  <	; SignedDivide Â£temporary2128 Â£temporary2127 4>
new  <	; IntegralToIntegral Â£temporary2132 Â£temporary2131>

131:
old  <	xor edx, edx>
new  <	mov rbx, 4294967295>

132:
old  <	idiv dword [int4$4#]>
new  <	and rax, rbx>

133:
old  <>
new  <	cmp eax, 0>

134:
old  < mktime$4:>
new  <	jge mktime$5>

135:
old  <	; IntegralToIntegral Â£temporary2129 Â£temporary2128>
new  <	neg eax>

136:
old  <	mov rbx, 4294967295>
new  <	neg rax>

137:
old  <	and rax, rbx>
new  <>

138:
old  <	cmp eax, 0>
new  < mktime$5:>

139:
old  <	jge mktime$5>
new  <	; Assign leapDays Â£temporary2132>

140:
old  <	neg eax>
new  <	mov [rbp + 32], rax>

141:
old  <	neg rax>
new  <>

142:
old  <>
new  < mktime$6:>

143:
old  < mktime$5:>
new  <	; Dereference Â£temporary2133 -> tp tp 0>

144:
old  <	; Assign leapDays Â£temporary2129>
new  <	mov rsi, [rbp + 24]>

145:
old  <	mov [rbp + 32], rax>
new  <>

146:
old  <>
new  < mktime$7:>

147:
old  < mktime$6:>
new  <	; BinarySubtract Â£temporary2134 Â£temporary2133 -> tp 70>

148:
old  <	; Dereference Â£temporary2130 -> tp tp 0>
new  <	mov eax, [rsi + 20]>

149:
old  <	mov rsi, [rbp + 24]>
new  <	sub eax, 70>

151:
old  < mktime$7:>
new  < mktime$8:>

152:
old  <	; BinarySubtract Â£temporary2131 Â£temporary2130 -> tp 70>
new  <	; SignedMultiply Â£temporary2135 Â£temporary2134 365>

153:
old  <	mov eax, [rsi + 20]>
new  <	xor edx, edx>

154:
old  <	sub eax, 70>
new  <	imul dword [int4$365#]>

156:
old  < mktime$8:>
new  < mktime$9:>

157:
old  <	; SignedMultiply Â£temporary2132 Â£temporary2131 365>
new  <	; IntegralToIntegral Â£temporary2136 Â£temporary2135>

158:
old  <	xor edx, edx>
new  <	mov rbx, 4294967295>

159:
old  <	imul dword [int4$365#]>
new  <	and rax, rbx>

160:
old  <>
new  <	cmp eax, 0>

161:
old  < mktime$9:>
new  <	jge mktime$10>

162:
old  <	; IntegralToIntegral Â£temporary2133 Â£temporary2132>
new  <	neg eax>

163:
old  <	mov rbx, 4294967295>
new  <	neg rax>

164:
old  <	and rax, rbx>
new  <>

165:
old  <	cmp eax, 0>
new  < mktime$10:>

166:
old  <	jge mktime$10>
new  <	; BinaryAdd Â£temporary2137 Â£temporary2136 leapDays>

167:
old  <	neg eax>
new  <	add rax, [rbp + 32]>

168:
old  <	neg rax>
new  <>

169:
old  <>
new  < mktime$11:>

170:
old  < mktime$10:>
new  <	; Dereference Â£temporary2138 -> tp tp 0>

171:
old  <	; BinaryAdd Â£temporary2134 Â£temporary2133 leapDays>
new  <	mov rsi, [rbp + 24]>

172:
old  <	add rax, [rbp + 32]>
new  <>

173:
old  <>
new  < mktime$12:>

174:
old  < mktime$11:>
new  <	; IntegralToIntegral Â£temporary2139 Â£temporary2138 -> tp>

175:
old  <	; Dereference Â£temporary2135 -> tp tp 0>
new  <	mov ebx, [rsi + 28]>

176:
old  <	mov rsi, [rbp + 24]>
new  <	mov rcx, 4294967295>

177:
old  <>
new  <	and rbx, rcx>

178:
old  < mktime$12:>
new  <	cmp ebx, 0>

179:
old  <	; IntegralToIntegral Â£temporary2136 Â£temporary2135 -> tp>
new  <	jge mktime$13>

180:
old  <	mov ebx, [rsi + 28]>
new  <	neg ebx>

181:
old  <	mov rcx, 4294967295>
new  <	neg rbx>

182:
old  <	and rbx, rcx>
new  <>

183:
old  <	cmp ebx, 0>
new  < mktime$13:>

184:
old  <	jge mktime$13>
new  <	; BinaryAdd totalDays Â£temporary2137 Â£temporary2139>

185:
old  <	neg ebx>
new  <	add rax, rbx>

186:
old  <	neg rbx>
new  <	mov [rbp + 40], rax>

188:
old  < mktime$13:>
new  < mktime$14:>

189:
old  <	; BinaryAdd totalDays Â£temporary2134 Â£temporary2136>
new  <	; SignedMultiply Â£temporary2141 totalDays 86400>

190:
old  <	add rax, rbx>
new  <	mov rax, [rbp + 40]>

191:
old  <	mov [rbp + 40], rax>
new  <	xor rdx, rdx>

192:
old  <>
new  <	imul qword [int8$86400#]>

193:
old  < mktime$14:>
new  <	mov rbx, rax>

194:
old  <	; SignedMultiply Â£temporary2138 totalDays 86400>
new  <>

195:
old  <	mov rax, [rbp + 40]>
new  < mktime$15:>

196:
old  <	xor rdx, rdx>
new  <	; Dereference Â£temporary2142 -> tp tp 0>

197:
old  <	imul qword [int8$86400#]>
new  <	mov rsi, [rbp + 24]>

198:
old  <	mov rbx, rax>
new  <>

199:
old  <>
new  < mktime$16:>

200:
old  < mktime$15:>
new  <	; IntegralToIntegral Â£temporary2143 Â£temporary2142 -> tp>

201:
old  <	; Dereference Â£temporary2139 -> tp tp 0>
new  <	mov eax, [rsi + 8]>

202:
old  <	mov rsi, [rbp + 24]>
new  <	mov rcx, 4294967295>

203:
old  <>
new  <	and rax, rcx>

204:
old  < mktime$16:>
new  <	cmp eax, 0>

205:
old  <	; IntegralToIntegral Â£temporary2140 Â£temporary2139 -> tp>
new  <	jge mktime$17>

206:
old  <	mov eax, [rsi + 8]>
new  <	neg eax>

207:
old  <	mov rcx, 4294967295>
new  <	neg rax>

208:
old  <	and rax, rcx>
new  <>

209:
old  <	cmp eax, 0>
new  < mktime$17:>

210:
old  <	jge mktime$17>
new  <	; SignedMultiply Â£temporary2144 Â£temporary2143 3600>

211:
old  <	neg eax>
new  <	xor rdx, rdx>

212:
old  <	neg rax>
new  <	imul qword [int8$3600#]>

214:
old  < mktime$17:>
new  < mktime$18:>

215:
old  <	; SignedMultiply Â£temporary2141 Â£temporary2140 3600>
new  <	; BinaryAdd Â£temporary2145 Â£temporary2141 Â£temporary2144>

216:
old  <	xor rdx, rdx>
new  <	add rbx, rax>

217:
old  <	imul qword [int8$3600#]>
new  <>

218:
old  <>
new  < mktime$19:>

219:
old  < mktime$18:>
new  <	; Dereference Â£temporary2146 -> tp tp 0>

220:
old  <	; BinaryAdd Â£temporary2142 Â£temporary2138 Â£temporary2141>
new  <	mov rsi, [rbp + 24]>

221:
old  <	add rbx, rax>
new  <>

222:
old  <>
new  < mktime$20:>

223:
old  < mktime$19:>
new  <	; IntegralToIntegral Â£temporary2147 Â£temporary2146 -> tp>

224:
old  <	; Dereference Â£temporary2143 -> tp tp 0>
new  <	mov eax, [rsi + 4]>

225:
old  <	mov rsi, [rbp + 24]>
new  <	mov rcx, 4294967295>

226:
old  <>
new  <	and rax, rcx>

227:
old  < mktime$20:>
new  <	cmp eax, 0>

228:
old  <	; IntegralToIntegral Â£temporary2144 Â£temporary2143 -> tp>
new  <	jge mktime$21>

229:
old  <	mov eax, [rsi + 4]>
new  <	neg eax>

230:
old  <	mov rcx, 4294967295>
new  <	neg rax>

231:
old  <	and rax, rcx>
new  <>

232:
old  <	cmp eax, 0>
new  < mktime$21:>

233:
old  <	jge mktime$21>
new  <	; SignedMultiply Â£temporary2148 Â£temporary2147 60>

234:
old  <	neg eax>
new  <	xor rdx, rdx>

235:
old  <	neg rax>
new  <	imul qword [int8$60#]>

237:
old  < mktime$21:>
new  < mktime$22:>

238:
old  <	; SignedMultiply Â£temporary2145 Â£temporary2144 60>
new  <	; BinaryAdd Â£temporary2149 Â£temporary2145 Â£temporary2148>

239:
old  <	xor rdx, rdx>
new  <	add rbx, rax>

240:
old  <	imul qword [int8$60#]>
new  <>

241:
old  <>
new  < mktime$23:>

242:
old  < mktime$22:>
new  <	; Dereference Â£temporary2150 -> tp tp 0>

243:
old  <	; BinaryAdd Â£temporary2146 Â£temporary2142 Â£temporary2145>
new  <	mov rsi, [rbp + 24]>

244:
old  <	add rbx, rax>
new  <>

245:
old  <>
new  < mktime$24:>

246:
old  < mktime$23:>
new  <	; IntegralToIntegral Â£temporary2151 Â£temporary2150 -> tp>

247:
old  <	; Dereference Â£temporary2147 -> tp tp 0>
new  <	mov eax, [rsi]>

248:
old  <	mov rsi, [rbp + 24]>
new  <	mov rcx, 4294967295>

249:
old  <>
new  <	and rax, rcx>

250:
old  < mktime$24:>
new  <	cmp eax, 0>

251:
old  <	; IntegralToIntegral Â£temporary2148 Â£temporary2147 -> tp>
new  <	jge mktime$25>

252:
old  <	mov eax, [rsi]>
new  <	neg eax>

253:
old  <	mov rcx, 4294967295>
new  <	neg rax>

254:
old  <	and rax, rcx>
new  <>

255:
old  <	cmp eax, 0>
new  < mktime$25:>

256:
old  <	jge mktime$25>
new  <	; BinaryAdd Â£temporary2152 Â£temporary2149 Â£temporary2151>

257:
old  <	neg eax>
new  <	add rbx, rax>

258:
old  <	neg rax>
new  <>

259:
old  <>
new  < mktime$26:>

260:
old  < mktime$25:>
new  <	; Return Â£temporary2152>

261:
old  <	; BinaryAdd Â£temporary2149 Â£temporary2146 Â£temporary2148>
new  <	mov rax, [rbp]>

262:
old  <	add rbx, rax>
new  <	mov rdi, [rbp + 16]>

263:
old  <>
new  <	mov rbp, [rbp + 8]>

264:
old  < mktime$26:>
new  <	jmp rax>

265:
old  <	; Return Â£temporary2149>
new  <>

266:
old  <	mov rax, [rbp]>
new  < mktime$27:>

267:
old  <	mov rdi, [rbp + 16]>
new  <	; Return 0>

268:
old  <	mov rbp, [rbp + 8]>
new  <	mov rbx, 0>

269:
old  <	jmp rax>
new  <	mov rax, [rbp]>

270:
old  <>
new  <	mov rdi, [rbp + 16]>

271:
old  < mktime$27:>
new  <	mov rbp, [rbp + 8]>

272:
old  <	; Return 0>
new  <	jmp rax>

273:
old  <	mov rbx, 0>
new  <>

274:
old  <	mov rax, [rbp]>
new  < mktime$28:>

275:
old  <	mov rdi, [rbp + 16]>
new  <	; FunctionEnd mktime>

276:
old  <	mov rbp, [rbp + 8]>
new  <>

277:
old  <	jmp rax>
new  <section .data>

279:
old  < mktime$28:>
new  <@4312$g_timeStruct:>

280:
old  <	; FunctionEnd mktime>
new  <	; InitializerZero 36>

281:
old  <>
new  <	times 36 db 0>

282:
old  <section .data>
new  <>

283:
old  <>
new  <section .data>

284:
old  <@4684$g_timeStruct:>
new  <>

285:
old  <	; InitializerZero 36>
new  <int8$7#:>

286:
old  <	times 36 db 0>
new  <	; Initializer Signed_Long_Int 7>

287:
old  <>
new  <	dq 7>

288:
old  <section .data>
new  <>

289:
old  <>
new  <section .data>

290:
old  <int8$7#:>
new  <>

291:
old  <	; Initializer Signed_Long_Int 7>
new  <int4$100#:>

292:
old  <	dq 7>
new  <	; Initializer SignedInt 100>

293:
old  <>
new  <	dd 100>

294:
old  <section .data>
new  <>

295:
old  <>
new  <section .data>

296:
old  <int4$100#:>
new  <>

297:
old  <	; Initializer SignedInt 100>
new  <int4$400#:>

298:
old  <	dd 100>
new  <	; Initializer SignedInt 400>

299:
old  <>
new  <	dd 400>

300:
old  <section .data>
new  <>

301:
old  <>
new  <section .data>

302:
old  <int4$400#:>
new  <>

303:
old  <	; Initializer SignedInt 400>
new  <Array_4#:>

304:
old  <	dd 400>
new  <	; Initializer Array 4>

305:
old  <>
new  <	dq 4>

306:
old  <section .data>
new  <>

307:
old  <>
new  <section .text>

308:
old  <Array_4#:>
new  <>

309:
old  <	; Initializer Array 4>
new  < gmtime:>

310:
old  <	dq 4>
new  <	; Assign year 1970>

311:
old  <>
new  <	mov dword [rbp + 32], 1970>

312:
old  <section .text>
new  <>

313:
old  <>
new  < gmtime$1:>

314:
old  < gmtime:>
new  <	; Equal 87 timePtr 0>

315:
old  <	; Assign year 1970>
new  <	cmp qword [rbp + 24], 0>

316:
old  <	mov dword [rbp + 32], 1970>
new  <	je gmtime$87>

318:
old  < gmtime$1:>
new  < gmtime$2:>

319:
old  <	; Equal 87 timePtr 0>
new  <	; Dereference Â£temporary2154 -> timePtr timePtr 0>

320:
old  <	cmp qword [rbp + 24], 0>
new  <	mov rsi, [rbp + 24]>

321:
old  <	je gmtime$87>
new  <>

322:
old  <>
new  < gmtime$3:>

323:
old  < gmtime$2:>
new  <	; Assign time Â£temporary2154 -> timePtr>

324:
old  <	; Dereference Â£temporary2151 -> timePtr timePtr 0>
new  <	mov rax, [rsi]>

325:
old  <	mov rsi, [rbp + 24]>
new  <	mov [rbp + 36], rax>

327:
old  < gmtime$3:>
new  < gmtime$4:>

328:
old  <	; Assign time Â£temporary2151 -> timePtr>
new  <	; SignedModulo secondsOfDay time 86400>

329:
old  <	mov rax, [rsi]>
new  <	mov rax, [rbp + 36]>

330:
old  <	mov [rbp + 36], rax>
new  <	xor rdx, rdx>

331:
old  <>
new  <	idiv qword [int8$86400#]>

332:
old  < gmtime$4:>
new  <	mov [rbp + 44], rdx>

333:
old  <	; SignedModulo secondsOfDay time 86400>
new  <>

334:
old  <	mov rax, [rbp + 36]>
new  < gmtime$5:>

335:
old  <	xor rdx, rdx>
new  <	; SignedDivide Â£temporary2157 secondsOfDay 3600>

336:
old  <	idiv qword [int8$86400#]>
new  <	mov rax, [rbp + 44]>

337:
old  <	mov [rbp + 44], rdx>
new  <	xor rdx, rdx>

338:
old  <>
new  <	idiv qword [int8$3600#]>

339:
old  < gmtime$5:>
new  <>

340:
old  <	; SignedDivide Â£temporary2154 secondsOfDay 3600>
new  < gmtime$6:>

341:
old  <	mov rax, [rbp + 44]>
new  <	; IntegralToIntegral Â£temporary2158 Â£temporary2157>

342:
old  <	xor rdx, rdx>
new  <	cmp rax, 0>

343:
old  <	idiv qword [int8$3600#]>
new  <	jge gmtime$7>

344:
old  <>
new  <	neg rax>

345:
old  < gmtime$6:>
new  <	neg eax>

346:
old  <	; IntegralToIntegral Â£temporary2155 Â£temporary2154>
new  <>

347:
old  <	cmp rax, 0>
new  < gmtime$7:>

348:
old  <	jge gmtime$7>
new  <	; Assign g_timeStruct.tm_hour Â£temporary2158>

349:
old  <	neg rax>
new  <	mov [@4312$g_timeStruct + 8], eax>

350:
old  <	neg eax>
new  <>

351:
old  <>
new  < gmtime$8:>

352:
old  < gmtime$7:>
new  <	; SignedModulo Â£temporary2160 secondsOfDay 3600>

353:
old  <	; Assign g_timeStruct.tm_hour Â£temporary2155>
new  <	mov rax, [rbp + 44]>

354:
old  <	mov [@4684$g_timeStruct + 8], eax>
new  <	xor rdx, rdx>

355:
old  <>
new  <	idiv qword [int8$3600#]>

356:
old  < gmtime$8:>
new  <>

357:
old  <	; SignedModulo Â£temporary2157 secondsOfDay 3600>
new  < gmtime$9:>

358:
old  <	mov rax, [rbp + 44]>
new  <	; SignedDivide Â£temporary2161 Â£temporary2160 60>

359:
old  <	xor rdx, rdx>
new  <	mov rax, rdx>

360:
old  <	idiv qword [int8$3600#]>
new  <	xor rdx, rdx>

361:
old  <>
new  <	idiv qword [int8$60#]>

362:
old  < gmtime$9:>
new  <>

363:
old  <	; SignedDivide Â£temporary2158 Â£temporary2157 60>
new  < gmtime$10:>

364:
old  <	mov rax, rdx>
new  <	; IntegralToIntegral Â£temporary2162 Â£temporary2161>

365:
old  <	xor rdx, rdx>
new  <	cmp rax, 0>

366:
old  <	idiv qword [int8$60#]>
new  <	jge gmtime$11>

367:
old  <>
new  <	neg rax>

368:
old  < gmtime$10:>
new  <	neg eax>

369:
old  <	; IntegralToIntegral Â£temporary2159 Â£temporary2158>
new  <>

370:
old  <	cmp rax, 0>
new  < gmtime$11:>

371:
old  <	jge gmtime$11>
new  <	; Assign g_timeStruct.tm_min Â£temporary2162>

372:
old  <	neg rax>
new  <	mov [@4312$g_timeStruct + 4], eax>

373:
old  <	neg eax>
new  <>

374:
old  <>
new  < gmtime$12:>

375:
old  < gmtime$11:>
new  <	; SignedModulo Â£temporary2164 secondsOfDay 3600>

376:
old  <	; Assign g_timeStruct.tm_min Â£temporary2159>
new  <	mov rax, [rbp + 44]>

377:
old  <	mov [@4684$g_timeStruct + 4], eax>
new  <	xor rdx, rdx>

378:
old  <>
new  <	idiv qword [int8$3600#]>

379:
old  < gmtime$12:>
new  <>

380:
old  <	; SignedModulo Â£temporary2161 secondsOfDay 3600>
new  < gmtime$13:>

381:
old  <	mov rax, [rbp + 44]>
new  <	; SignedModulo Â£temporary2165 Â£temporary2164 60>

382:
old  <	xor rdx, rdx>
new  <	mov rax, rdx>

383:
old  <	idiv qword [int8$3600#]>
new  <	xor rdx, rdx>

384:
old  <>
new  <	idiv qword [int8$60#]>

385:
old  < gmtime$13:>
new  <>

386:
old  <	; SignedModulo Â£temporary2162 Â£temporary2161 60>
new  < gmtime$14:>

387:
old  <	mov rax, rdx>
new  <	; IntegralToIntegral Â£temporary2166 Â£temporary2165>

388:
old  <	xor rdx, rdx>
new  <	cmp rdx, 0>

389:
old  <	idiv qword [int8$60#]>
new  <	jge gmtime$15>

390:
old  <>
new  <	neg rdx>

391:
old  < gmtime$14:>
new  <	neg edx>

392:
old  <	; IntegralToIntegral Â£temporary2163 Â£temporary2162>
new  <>

393:
old  <	cmp rdx, 0>
new  < gmtime$15:>

394:
old  <	jge gmtime$15>
new  <	; Assign g_timeStruct.tm_sec Â£temporary2166>

395:
old  <	neg rdx>
new  <	mov [@4312$g_timeStruct], edx>

396:
old  <	neg edx>
new  <>

397:
old  <>
new  < gmtime$16:>

398:
old  < gmtime$15:>
new  <	; SignedDivide totalDays time 86400>

399:
old  <	; Assign g_timeStruct.tm_sec Â£temporary2163>
new  <	mov rax, [rbp + 36]>

400:
old  <	mov [@4684$g_timeStruct], edx>
new  <	xor rdx, rdx>

401:
old  <>
new  <	idiv qword [int8$86400#]>

402:
old  < gmtime$16:>
new  <	mov [rbp + 52], rax>

403:
old  <	; SignedDivide totalDays time 86400>
new  <>

404:
old  <	mov rax, [rbp + 36]>
new  < gmtime$17:>

405:
old  <	xor rdx, rdx>
new  <	; SignedGreaterThanEqual 22 totalDays 3>

406:
old  <	idiv qword [int8$86400#]>
new  <	cmp qword [rbp + 52], 3>

407:
old  <	mov [rbp + 52], rax>
new  <	jge gmtime$22>

409:
old  < gmtime$17:>
new  < gmtime$18:>

410:
old  <	; SignedGreaterThanEqual 22 totalDays 3>
new  <	; BinaryAdd Â£temporary2170 totalDays 4>

411:
old  <	cmp qword [rbp + 52], 3>
new  <	mov rax, [rbp + 52]>

412:
old  <	jge gmtime$22>
new  <	add rax, 4>

414:
old  < gmtime$18:>
new  < gmtime$19:>

415:
old  <	; BinaryAdd Â£temporary2167 totalDays 4>
new  <	; IntegralToIntegral Â£temporary2171 Â£temporary2170>

416:
old  <	mov rax, [rbp + 52]>
new  <	cmp rax, 0>

417:
old  <	add rax, 4>
new  <	jge gmtime$20>

418:
old  <>
new  <	neg rax>

419:
old  < gmtime$19:>
new  <	neg eax>

420:
old  <	; IntegralToIntegral Â£temporary2168 Â£temporary2167>
new  <>

421:
old  <	cmp rax, 0>
new  < gmtime$20:>

422:
old  <	jge gmtime$20>
new  <	; Assign g_timeStruct.tm_wday Â£temporary2171>

423:
old  <	neg rax>
new  <	mov [@4312$g_timeStruct + 24], eax>

424:
old  <	neg eax>
new  <>

425:
old  <>
new  < gmtime$21:>

426:
old  < gmtime$20:>
new  <	; Goto 26>

427:
old  <	; Assign g_timeStruct.tm_wday Â£temporary2168>
new  <	jmp gmtime$26>

428:
old  <	mov [@4684$g_timeStruct + 24], eax>
new  <>

429:
old  <>
new  < gmtime$22:>

430:
old  < gmtime$21:>
new  <	; BinarySubtract Â£temporary2173 totalDays 3>

431:
old  <	; Goto 26>
new  <	mov rax, [rbp + 52]>

432:
old  <	jmp gmtime$26>
new  <	sub rax, 3>

434:
old  < gmtime$22:>
new  < gmtime$23:>

435:
old  <	; BinarySubtract Â£temporary2170 totalDays 3>
new  <	; SignedModulo Â£temporary2174 Â£temporary2173 7>

436:
old  <	mov rax, [rbp + 52]>
new  <	xor rdx, rdx>

437:
old  <	sub rax, 3>
new  <	idiv qword [int8$7#]>

439:
old  < gmtime$23:>
new  < gmtime$24:>

440:
old  <	; SignedModulo Â£temporary2171 Â£temporary2170 7>
new  <	; IntegralToIntegral Â£temporary2175 Â£temporary2174>

441:
old  <	xor rdx, rdx>
new  <	cmp rdx, 0>

442:
old  <	idiv qword [int8$7#]>
new  <	jge gmtime$25>

443:
old  <>
new  <	neg rdx>

444:
old  < gmtime$24:>
new  <	neg edx>

445:
old  <	; IntegralToIntegral Â£temporary2172 Â£temporary2171>
new  <>

446:
old  <	cmp rdx, 0>
new  < gmtime$25:>

447:
old  <	jge gmtime$25>
new  <	; Assign g_timeStruct.tm_wday Â£temporary2175>

448:
old  <	neg rdx>
new  <	mov [@4312$g_timeStruct + 24], edx>

449:
old  <	neg edx>
new  <>

450:
old  <>
new  < gmtime$26:>

451:
old  < gmtime$25:>
new  <	; SignedModulo Â£temporary2176 year 4>

452:
old  <	; Assign g_timeStruct.tm_wday Â£temporary2172>
new  <	mov eax, [rbp + 32]>

453:
old  <	mov [@4684$g_timeStruct + 24], edx>
new  <	xor edx, edx>

454:
old  <>
new  <	idiv dword [int4$4#]>

455:
old  < gmtime$26:>
new  <>

456:
old  <	; SignedModulo Â£temporary2173 year 4>
new  < gmtime$27:>

457:
old  <	mov eax, [rbp + 32]>
new  <	; NotEqual 30 Â£temporary2176 0>

458:
old  <	xor edx, edx>
new  <	cmp edx, 0>

459:
old  <	idiv dword [int4$4#]>
new  <	jne gmtime$30>

461:
old  < gmtime$27:>
new  < gmtime$28:>

462:
old  <	; NotEqual 30 Â£temporary2173 0>
new  <	; SignedModulo Â£temporary2178 year 100>

463:
old  <	cmp edx, 0>
new  <	mov eax, [rbp + 32]>

464:
old  <	jne gmtime$30>
new  <	xor edx, edx>

465:
old  <>
new  <	idiv dword [int4$100#]>

466:
old  < gmtime$28:>
new  <>

467:
old  <	; SignedModulo Â£temporary2175 year 100>
new  < gmtime$29:>

468:
old  <	mov eax, [rbp + 32]>
new  <	; NotEqual 32 Â£temporary2178 0>

469:
old  <	xor edx, edx>
new  <	cmp edx, 0>

470:
old  <	idiv dword [int4$100#]>
new  <	jne gmtime$32>

472:
old  < gmtime$29:>
new  < gmtime$30:>

473:
old  <	; NotEqual 32 Â£temporary2175 0>
new  <	; SignedModulo Â£temporary2181 year 400>

474:
old  <	cmp edx, 0>
new  <	mov eax, [rbp + 32]>

475:
old  <	jne gmtime$32>
new  <	xor edx, edx>

476:
old  <>
new  <	idiv dword [int4$400#]>

477:
old  < gmtime$30:>
new  <>

478:
old  <	; SignedModulo Â£temporary2178 year 400>
new  < gmtime$31:>

479:
old  <	mov eax, [rbp + 32]>
new  <	; NotEqual 34 Â£temporary2181 0>

480:
old  <	xor edx, edx>
new  <	cmp edx, 0>

481:
old  <	idiv dword [int4$400#]>
new  <	jne gmtime$34>

483:
old  < gmtime$31:>
new  < gmtime$32:>

484:
old  <	; NotEqual 34 Â£temporary2178 0>
new  <	; Assign Â£temporary2184 1>

485:
old  <	cmp edx, 0>
new  <	mov eax, 1>

486:
old  <	jne gmtime$34>
new  <>

487:
old  <>
new  < gmtime$33:>

488:
old  < gmtime$32:>
new  <	; Goto 35>

489:
old  <	; Assign Â£temporary2181 1>
new  <	jmp gmtime$35>

490:
old  <	mov eax, 1>
new  <>

491:
old  <>
new  < gmtime$34:>

492:
old  < gmtime$33:>
new  <	; Assign Â£temporary2184 0>

493:
old  <	; Goto 35>
new  <	mov eax, 0>

494:
old  <	jmp gmtime$35>
new  <>

495:
old  <>
new  < gmtime$35:>

496:
old  < gmtime$34:>
new  <	; Assign leapYear Â£temporary2184>

497:
old  <	; Assign Â£temporary2181 0>
new  <	mov [rbp + 60], eax>

498:
old  <	mov eax, 0>
new  <>

499:
old  <>
new  < gmtime$36:>

500:
old  < gmtime$35:>
new  <	; Equal 39 leapYear 0>

501:
old  <	; Assign leapYear Â£temporary2181>
new  <	cmp dword [rbp + 60], 0>

502:
old  <	mov [rbp + 60], eax>
new  <	je gmtime$39>

504:
old  < gmtime$36:>
new  < gmtime$37:>

505:
old  <	; Equal 39 leapYear 0>
new  <	; Assign Â£temporary2186 366>

506:
old  <	cmp dword [rbp + 60], 0>
new  <	mov eax, 366>

507:
old  <	je gmtime$39>
new  <>

508:
old  <>
new  < gmtime$38:>

509:
old  < gmtime$37:>
new  <	; Goto 40>

510:
old  <	; Assign Â£temporary2183 366>
new  <	jmp gmtime$40>

511:
old  <	mov eax, 366>
new  <>

512:
old  <>
new  < gmtime$39:>

513:
old  < gmtime$38:>
new  <	; Assign Â£temporary2186 365>

514:
old  <	; Goto 40>
new  <	mov eax, 365>

515:
old  <	jmp gmtime$40>
new  <>

516:
old  <>
new  < gmtime$40:>

517:
old  < gmtime$39:>
new  <	; Assign daysOfYear Â£temporary2186>

518:
old  <	; Assign Â£temporary2183 365>
new  <	mov [rbp + 64], eax>

519:
old  <	mov eax, 365>
new  <>

520:
old  <>
new  < gmtime$41:>

521:
old  < gmtime$40:>
new  <	; IntegralToIntegral Â£temporary2187 daysOfYear>

522:
old  <	; Assign daysOfYear Â£temporary2183>
new  <	mov eax, [rbp + 64]>

523:
old  <	mov [rbp + 64], eax>
new  <	mov rbx, 4294967295>

524:
old  <>
new  <	and rax, rbx>

525:
old  < gmtime$41:>
new  <	cmp eax, 0>

526:
old  <	; IntegralToIntegral Â£temporary2184 daysOfYear>
new  <	jge gmtime$42>

527:
old  <	mov eax, [rbp + 64]>
new  <	neg eax>

528:
old  <	mov rbx, 4294967295>
new  <	neg rax>

529:
old  <	and rax, rbx>
new  <>

530:
old  <	cmp eax, 0>
new  < gmtime$42:>

531:
old  <	jge gmtime$42>
new  <	; SignedGreaterThanEqual 83 totalDays Â£temporary2187>

532:
old  <	neg eax>
new  <	cmp [rbp + 52], rax>

533:
old  <	neg rax>
new  <	jge gmtime$83>

535:
old  < gmtime$42:>
new  < gmtime$43:>

536:
old  <	; SignedGreaterThanEqual 83 totalDays Â£temporary2184>
new  <	; BinarySubtract g_timeStruct.tm_year year 1900>

537:
old  <	cmp [rbp + 52], rax>
new  <	mov eax, [rbp + 32]>

538:
old  <	jge gmtime$83>
new  <	sub eax, 1900>

539:
old  <>
new  <	mov [@4312$g_timeStruct + 20], eax>

540:
old  < gmtime$43:>
new  <>

541:
old  <	; BinarySubtract g_timeStruct.tm_year year 1900>
new  < gmtime$44:>

542:
old  <	mov eax, [rbp + 32]>
new  <	; IntegralToIntegral Â£temporary2192 totalDays>

543:
old  <	sub eax, 1900>
new  <	mov rax, [rbp + 52]>

544:
old  <	mov [@4684$g_timeStruct + 20], eax>
new  <	cmp rax, 0>

545:
old  <>
new  <	jge gmtime$45>

546:
old  < gmtime$44:>
new  <	neg rax>

547:
old  <	; IntegralToIntegral Â£temporary2189 totalDays>
new  <	neg eax>

548:
old  <	mov rax, [rbp + 52]>
new  <>

549:
old  <	cmp rax, 0>
new  < gmtime$45:>

550:
old  <	jge gmtime$45>
new  <	; Assign g_timeStruct.tm_yday Â£temporary2192>

551:
old  <	neg rax>
new  <	mov [@4312$g_timeStruct + 28], eax>

552:
old  <	neg eax>
new  <>

553:
old  <>
new  < gmtime$46:>

554:
old  < gmtime$45:>
new  <	; Assign daysOfMonths[0] 31>

555:
old  <	; Assign g_timeStruct.tm_yday Â£temporary2189>
new  <	mov dword [rbp + 68], 31>

556:
old  <	mov [@4684$g_timeStruct + 28], eax>
new  <>

557:
old  <>
new  < gmtime$47:>

558:
old  < gmtime$46:>
new  <	; Equal 50 leapYear 0>

559:
old  <	; Assign daysOfMonths[0] 31>
new  <	cmp dword [rbp + 60], 0>

560:
old  <	mov dword [rbp + 68], 31>
new  <	je gmtime$50>

562:
old  < gmtime$47:>
new  < gmtime$48:>

563:
old  <	; Equal 50 leapYear 0>
new  <	; Assign Â£temporary2194 29>

564:
old  <	cmp dword [rbp + 60], 0>
new  <	mov eax, 29>

565:
old  <	je gmtime$50>
new  <>

566:
old  <>
new  < gmtime$49:>

567:
old  < gmtime$48:>
new  <	; Goto 51>

568:
old  <	; Assign Â£temporary2191 29>
new  <	jmp gmtime$51>

569:
old  <	mov eax, 29>
new  <>

570:
old  <>
new  < gmtime$50:>

571:
old  < gmtime$49:>
new  <	; Assign Â£temporary2194 28>

572:
old  <	; Goto 51>
new  <	mov eax, 28>

573:
old  <	jmp gmtime$51>
new  <>

574:
old  <>
new  < gmtime$51:>

575:
old  < gmtime$50:>
new  <	; Assign daysOfMonths[1] Â£temporary2194>

576:
old  <	; Assign Â£temporary2191 28>
new  <	mov [rbp + 72], eax>

577:
old  <	mov eax, 28>
new  <>

578:
old  <>
new  < gmtime$52:>

579:
old  < gmtime$51:>
new  <	; Assign daysOfMonths[2] 31>

580:
old  <	; Assign daysOfMonths[1] Â£temporary2191>
new  <	mov dword [rbp + 76], 31>

581:
old  <	mov [rbp + 72], eax>
new  <>

582:
old  <>
new  < gmtime$53:>

583:
old  < gmtime$52:>
new  <	; Assign daysOfMonths[3] 30>

584:
old  <	; Assign daysOfMonths[2] 31>
new  <	mov dword [rbp + 80], 30>

585:
old  <	mov dword [rbp + 76], 31>
new  <>

586:
old  <>
new  < gmtime$54:>

587:
old  < gmtime$53:>
new  <	; Assign daysOfMonths[4] 31>

588:
old  <	; Assign daysOfMonths[3] 30>
new  <	mov dword [rbp + 84], 31>

589:
old  <	mov dword [rbp + 80], 30>
new  <>

590:
old  <>
new  < gmtime$55:>

591:
old  < gmtime$54:>
new  <	; Assign daysOfMonths[5] 30>

592:
old  <	; Assign daysOfMonths[4] 31>
new  <	mov dword [rbp + 88], 30>

593:
old  <	mov dword [rbp + 84], 31>
new  <>

594:
old  <>
new  < gmtime$56:>

595:
old  < gmtime$55:>
new  <	; Assign daysOfMonths[6] 30>

596:
old  <	; Assign daysOfMonths[5] 30>
new  <	mov dword [rbp + 92], 30>

597:
old  <	mov dword [rbp + 88], 30>
new  <>

598:
old  <>
new  < gmtime$57:>

599:
old  < gmtime$56:>
new  <	; Assign daysOfMonths[7] 31>

600:
old  <	; Assign daysOfMonths[6] 30>
new  <	mov dword [rbp + 96], 31>

601:
old  <	mov dword [rbp + 92], 30>
new  <>

602:
old  <>
new  < gmtime$58:>

603:
old  < gmtime$57:>
new  <	; Assign daysOfMonths[8] 30>

604:
old  <	; Assign daysOfMonths[7] 31>
new  <	mov dword [rbp + 100], 30>

605:
old  <	mov dword [rbp + 96], 31>
new  <>

606:
old  <>
new  < gmtime$59:>

607:
old  < gmtime$58:>
new  <	; Assign daysOfMonths[9] 31>

608:
old  <	; Assign daysOfMonths[8] 30>
new  <	mov dword [rbp + 104], 31>

609:
old  <	mov dword [rbp + 100], 30>
new  <>

610:
old  <>
new  < gmtime$60:>

611:
old  < gmtime$59:>
new  <	; Assign daysOfMonths[10] 30>

612:
old  <	; Assign daysOfMonths[9] 31>
new  <	mov dword [rbp + 108], 30>

613:
old  <	mov dword [rbp + 104], 31>
new  <>

614:
old  <>
new  < gmtime$61:>

615:
old  < gmtime$60:>
new  <	; Assign daysOfMonths[11] 31>

616:
old  <	; Assign daysOfMonths[10] 30>
new  <	mov dword [rbp + 112], 31>

617:
old  <	mov dword [rbp + 108], 30>
new  <>

618:
old  <>
new  < gmtime$62:>

619:
old  < gmtime$61:>
new  <	; Assign month 0>

620:
old  <	; Assign daysOfMonths[11] 31>
new  <	mov dword [rbp + 116], 0>

621:
old  <	mov dword [rbp + 112], 31>
new  <>

622:
old  <>
new  < gmtime$63:>

623:
old  < gmtime$62:>
new  <	; IntegralToIntegral Â£temporary2208 month>

624:
old  <	; Assign month 0>
new  <	mov eax, [rbp + 116]>

625:
old  <	mov dword [rbp + 116], 0>
new  <	mov rbx, 4294967295>

626:
old  <>
new  <	and rax, rbx>

627:
old  < gmtime$63:>
new  <>

628:
old  <	; IntegralToIntegral Â£temporary2205 month>
new  < gmtime$64:>

629:
old  <	mov eax, [rbp + 116]>
new  <	; UnsignedMultiply Â£temporary2209 Â£temporary2208 4>

630:
old  <	mov rbx, 4294967295>
new  <	xor rdx, rdx>

631:
old  <	and rax, rbx>
new  <	mul qword [Array_4#]>

633:
old  < gmtime$64:>
new  < gmtime$65:>

634:
old  <	; UnsignedMultiply Â£temporary2206 Â£temporary2205 4>
new  <	; BinaryAdd Â£temporary2210 daysOfMonths Â£temporary2209>

635:
old  <	xor rdx, rdx>
new  <	mov rsi, rbp>

636:
old  <	mul qword [Array_4#]>
new  <	add rsi, 68>

637:
old  <>
new  <	add rsi, rax>

638:
old  < gmtime$65:>
new  <>

639:
old  <	; BinaryAdd Â£temporary2207 daysOfMonths Â£temporary2206>
new  < gmtime$66:>

640:
old  <	mov rsi, rbp>
new  <	; Dereference Â£temporary2207 -> Â£temporary2210 Â£temporary2210 0>

641:
old  <	add rsi, 68>
new  <>

642:
old  <	add rsi, rax>
new  < gmtime$67:>

643:
old  <>
new  <	; IntegralToIntegral Â£temporary2211 Â£temporary2207 -> Â£temporary2210>

644:
old  < gmtime$66:>
new  <	mov eax, [rsi]>

645:
old  <	; Dereference Â£temporary2204 -> Â£temporary2207 Â£temporary2207 0>
new  <	mov rbx, 4294967295>

646:
old  <>
new  <	and rax, rbx>

647:
old  < gmtime$67:>
new  <	cmp eax, 0>

648:
old  <	; IntegralToIntegral Â£temporary2208 Â£temporary2204 -> Â£temporary2207>
new  <	jge gmtime$68>

649:
old  <	mov eax, [rsi]>
new  <	neg eax>

650:
old  <	mov rbx, 4294967295>
new  <	neg rax>

651:
old  <	and rax, rbx>
new  <>

652:
old  <	cmp eax, 0>
new  < gmtime$68:>

653:
old  <	jge gmtime$68>
new  <	; SignedLessThan 77 totalDays Â£temporary2211>

654:
old  <	neg eax>
new  <	cmp [rbp + 52], rax>

655:
old  <	neg rax>
new  <	jl gmtime$77>

657:
old  < gmtime$68:>
new  < gmtime$69:>

658:
old  <	; SignedLessThan 77 totalDays Â£temporary2208>
new  <	; IntegralToIntegral Â£temporary2214 month>

659:
old  <	cmp [rbp + 52], rax>
new  <	mov eax, [rbp + 116]>

660:
old  <	jl gmtime$77>
new  <	mov rbx, 4294967295>

661:
old  <>
new  <	and rax, rbx>

662:
old  < gmtime$69:>
new  <>

663:
old  <	; IntegralToIntegral Â£temporary2211 month>
new  < gmtime$70:>

664:
old  <	mov eax, [rbp + 116]>
new  <	; UnsignedMultiply Â£temporary2215 Â£temporary2214 4>

665:
old  <	mov rbx, 4294967295>
new  <	xor rdx, rdx>

666:
old  <	and rax, rbx>
new  <	mul qword [Array_4#]>

668:
old  < gmtime$70:>
new  < gmtime$71:>

669:
old  <	; UnsignedMultiply Â£temporary2212 Â£temporary2211 4>
new  <	; BinaryAdd Â£temporary2216 daysOfMonths Â£temporary2215>

670:
old  <	xor rdx, rdx>
new  <	mov rsi, rbp>

671:
old  <	mul qword [Array_4#]>
new  <	add rsi, 68>

672:
old  <>
new  <	add rsi, rax>

673:
old  < gmtime$71:>
new  <>

674:
old  <	; BinaryAdd Â£temporary2213 daysOfMonths Â£temporary2212>
new  < gmtime$72:>

675:
old  <	mov rsi, rbp>
new  <	; Dereference Â£temporary2213 -> Â£temporary2216 Â£temporary2216 0>

676:
old  <	add rsi, 68>
new  <>

677:
old  <	add rsi, rax>
new  < gmtime$73:>

678:
old  <>
new  <	; IntegralToIntegral Â£temporary2217 Â£temporary2213 -> Â£temporary2216>

679:
old  < gmtime$72:>
new  <	mov eax, [rsi]>

680:
old  <	; Dereference Â£temporary2210 -> Â£temporary2213 Â£temporary2213 0>
new  <	mov rbx, 4294967295>

681:
old  <>
new  <	and rax, rbx>

682:
old  < gmtime$73:>
new  <	cmp eax, 0>

683:
old  <	; IntegralToIntegral Â£temporary2214 Â£temporary2210 -> Â£temporary2213>
new  <	jge gmtime$74>

684:
old  <	mov eax, [rsi]>
new  <	neg eax>

685:
old  <	mov rbx, 4294967295>
new  <	neg rax>

686:
old  <	and rax, rbx>
new  <>

687:
old  <	cmp eax, 0>
new  < gmtime$74:>

688:
old  <	jge gmtime$74>
new  <	; BinarySubtract totalDays totalDays Â£temporary2217>

689:
old  <	neg eax>
new  <	sub [rbp + 52], rax>

690:
old  <	neg rax>
new  <>

691:
old  <>
new  < gmtime$75:>

692:
old  < gmtime$74:>
new  <	; BinaryAdd month month 1>

693:
old  <	; BinarySubtract totalDays totalDays Â£temporary2214>
new  <	inc dword [rbp + 116]>

694:
old  <	sub [rbp + 52], rax>
new  <>

695:
old  <>
new  < gmtime$76:>

696:
old  < gmtime$75:>
new  <	; Goto 63>

697:
old  <	; BinaryAdd month month 1>
new  <	jmp gmtime$63>

698:
old  <	inc dword [rbp + 116]>
new  <>

699:
old  <>
new  < gmtime$77:>

700:
old  < gmtime$76:>
new  <	; Assign g_timeStruct.tm_mon month>

701:
old  <	; Goto 63>
new  <	mov eax, [rbp + 116]>

702:
old  <	jmp gmtime$63>
new  <	mov [@4312$g_timeStruct + 16], eax>

704:
old  < gmtime$77:>
new  < gmtime$78:>

705:
old  <	; Assign g_timeStruct.tm_mon month>
new  <	; BinaryAdd Â£temporary2222 totalDays 1>

706:
old  <	mov eax, [rbp + 116]>
new  <	mov rax, [rbp + 52]>

707:
old  <	mov [@4684$g_timeStruct + 16], eax>
new  <	inc rax>

709:
old  < gmtime$78:>
new  < gmtime$79:>

710:
old  <	; BinaryAdd Â£temporary2219 totalDays 1>
new  <	; IntegralToIntegral Â£temporary2223 Â£temporary2222>

711:
old  <	mov rax, [rbp + 52]>
new  <	cmp rax, 0>

712:
old  <	inc rax>
new  <	jge gmtime$80>

713:
old  <>
new  <	neg rax>

714:
old  < gmtime$79:>
new  <	neg eax>

715:
old  <	; IntegralToIntegral Â£temporary2220 Â£temporary2219>
new  <>

716:
old  <	cmp rax, 0>
new  < gmtime$80:>

717:
old  <	jge gmtime$80>
new  <	; Assign g_timeStruct.tm_mday Â£temporary2223>

718:
old  <	neg rax>
new  <	mov [@4312$g_timeStruct + 12], eax>

719:
old  <	neg eax>
new  <>

720:
old  <>
new  < gmtime$81:>

721:
old  < gmtime$80:>
new  <	; Assign g_timeStruct.tm_isdst -1>

722:
old  <	; Assign g_timeStruct.tm_mday Â£temporary2220>
new  <	mov dword [@4312$g_timeStruct + 32], -1>

723:
old  <	mov [@4684$g_timeStruct + 12], eax>
new  <>

724:
old  <>
new  < gmtime$82:>

725:
old  < gmtime$81:>
new  <	; Return @4312$g_timeStruct>

726:
old  <	; Assign g_timeStruct.tm_isdst -1>
new  <	mov rbx, @4312$g_timeStruct>

727:
old  <	mov dword [@4684$g_timeStruct + 32], -1>
new  <	mov rax, [rbp]>

728:
old  <>
new  <	mov rdi, [rbp + 16]>

729:
old  < gmtime$82:>
new  <	mov rbp, [rbp + 8]>

730:
old  <	; Return @4684$g_timeStruct>
new  <	jmp rax>

731:
old  <	mov rbx, @4684$g_timeStruct>
new  <>

732:
old  <	mov rax, [rbp]>
new  < gmtime$83:>

733:
old  <	mov rdi, [rbp + 16]>
new  <	; BinaryAdd year year 1>

734:
old  <	mov rbp, [rbp + 8]>
new  <	inc dword [rbp + 32]>

735:
old  <	jmp rax>
new  <>

736:
old  <>
new  < gmtime$84:>

737:
old  < gmtime$83:>
new  <	; IntegralToIntegral Â£temporary2226 daysOfYear>

738:
old  <	; BinaryAdd year year 1>
new  <	mov eax, [rbp + 64]>

739:
old  <	inc dword [rbp + 32]>
new  <	mov rbx, 4294967295>

740:
old  <>
new  <	and rax, rbx>

741:
old  < gmtime$84:>
new  <	cmp eax, 0>

742:
old  <	; IntegralToIntegral Â£temporary2223 daysOfYear>
new  <	jge gmtime$85>

743:
old  <	mov eax, [rbp + 64]>
new  <	neg eax>

744:
old  <	mov rbx, 4294967295>
new  <	neg rax>

745:
old  <	and rax, rbx>
new  <>

746:
old  <	cmp eax, 0>
new  < gmtime$85:>

747:
old  <	jge gmtime$85>
new  <	; BinarySubtract totalDays totalDays Â£temporary2226>

748:
old  <	neg eax>
new  <	sub [rbp + 52], rax>

749:
old  <	neg rax>
new  <>

750:
old  <>
new  < gmtime$86:>

751:
old  < gmtime$85:>
new  <	; Goto 26>

752:
old  <	; BinarySubtract totalDays totalDays Â£temporary2223>
new  <	jmp gmtime$26>

753:
old  <	sub [rbp + 52], rax>
new  <>

754:
old  <>
new  < gmtime$87:>

755:
old  < gmtime$86:>
new  <	; Return 0>

756:
old  <	; Goto 26>
new  <	mov rbx, 0>

757:
old  <	jmp gmtime$26>
new  <	mov rax, [rbp]>

758:
old  <>
new  <	mov rdi, [rbp + 16]>

759:
old  < gmtime$87:>
new  <	mov rbp, [rbp + 8]>

760:
old  <	; Return 0>
new  <	jmp rax>

761:
old  <	mov rbx, 0>
new  <>

762:
old  <	mov rax, [rbp]>
new  < gmtime$88:>

763:
old  <	mov rdi, [rbp + 16]>
new  <	; FunctionEnd gmtime>

764:
old  <	mov rbp, [rbp + 8]>
new  <>

765:
old  <	jmp rax>
new  <section .data>

767:
old  < gmtime$88:>
new  <container8bytes#:>

768:
old  <	; FunctionEnd gmtime>
new  <	; InitializerZero 8>

769:
old  <>
new  <	times 8 db 0>

770:
old  <section .data>
new  <>

771:
old  <>
new  <section .text>

772:
old  <container8bytes#:>
new  <>

773:
old  <	; InitializerZero 8>
new  < difftime:>

774:
old  <	times 8 db 0>
new  <	; BinarySubtract Â£temporary2229 time2 time1>

775:
old  <>
new  <	mov rax, [rbp + 32]>

776:
old  <section .text>
new  <	sub rax, [rbp + 24]>

778:
old  < difftime:>
new  < difftime$1:>

779:
old  <	; BinarySubtract Â£temporary2226 time2 time1>
new  <	; IntegralToFloating Â£temporary2230 Â£temporary2229>

780:
old  <	mov rax, [rbp + 32]>
new  <	mov [container8bytes#], rax>

781:
old  <	sub rax, [rbp + 24]>
new  <	fild qword [container8bytes#]>

783:
old  < difftime$1:>
new  < difftime$2:>

784:
old  <	; IntegralToFloating Â£temporary2227 Â£temporary2226>
new  <	; Return Â£temporary2230>

785:
old  <	mov [container8bytes#], rax>
new  <	mov rax, [rbp]>

786:
old  <	fild qword [container8bytes#]>
new  <	mov rdi, [rbp + 16]>

787:
old  <>
new  <	mov rbp, [rbp + 8]>

788:
old  < difftime$2:>
new  <	jmp rax>

789:
old  <	; Return Â£temporary2227>
new  <>

790:
old  <	mov rax, [rbp]>
new  < difftime$3:>

791:
old  <	mov rdi, [rbp + 16]>
new  <	; FunctionEnd difftime>

792:
old  <	mov rbp, [rbp + 8]>
new  <>

793:
old  <	jmp rax>
new  <section .data>

795:
old  < difftime$3:>
new  <@4324$g_timeString:>

796:
old  <	; FunctionEnd difftime>
new  <	; InitializerZero 256>

797:
old  <>
new  <	times 256 db 0>

798:
old  <section .data>
new  <>

799:
old  <>
new  <section .data>

800:
old  <@4696$g_timeString:>
new  <>

801:
old  <	; InitializerZero 256>
new  <string_Sun#:>

802:
old  <	times 256 db 0>
new  <	; Initializer String Sun>

803:
old  <>
new  <	db "Sun", 0>

804:
old  <section .data>
new  <>

805:
old  <>
new  <section .data>

806:
old  <string_Sun#:>
new  <>

807:
old  <	; Initializer String Sun>
new  <string_Mon#:>

808:
old  <	db "Sun", 0>
new  <	; Initializer String Mon>

809:
old  <>
new  <	db "Mon", 0>

810:
old  <section .data>
new  <>

811:
old  <>
new  <section .data>

812:
old  <string_Mon#:>
new  <>

813:
old  <	; Initializer String Mon>
new  <string_Tue#:>

814:
old  <	db "Mon", 0>
new  <	; Initializer String Tue>

815:
old  <>
new  <	db "Tue", 0>

816:
old  <section .data>
new  <>

817:
old  <>
new  <section .data>

818:
old  <string_Tue#:>
new  <>

819:
old  <	; Initializer String Tue>
new  <string_Wed#:>

820:
old  <	db "Tue", 0>
new  <	; Initializer String Wed>

821:
old  <>
new  <	db "Wed", 0>

822:
old  <section .data>
new  <>

823:
old  <>
new  <section .data>

824:
old  <string_Wed#:>
new  <>

825:
old  <	; Initializer String Wed>
new  <string_Thu#:>

826:
old  <	db "Wed", 0>
new  <	; Initializer String Thu>

827:
old  <>
new  <	db "Thu", 0>

828:
old  <section .data>
new  <>

829:
old  <>
new  <section .data>

830:
old  <string_Thu#:>
new  <>

831:
old  <	; Initializer String Thu>
new  <string_Fri#:>

832:
old  <	db "Thu", 0>
new  <	; Initializer String Fri>

833:
old  <>
new  <	db "Fri", 0>

834:
old  <section .data>
new  <>

835:
old  <>
new  <section .data>

836:
old  <string_Fri#:>
new  <>

837:
old  <	; Initializer String Fri>
new  <string_Sat#:>

838:
old  <	db "Fri", 0>
new  <	; Initializer String Sat>

839:
old  <>
new  <	db "Sat", 0>

840:
old  <section .data>
new  <>

841:
old  <>
new  <section .data>

842:
old  <string_Sat#:>
new  <>

843:
old  <	; Initializer String Sat>
new  <@4325$g_defaultShortDayList:>

844:
old  <	db "Sat", 0>
new  <	; Initializer Pointer string_Sun#>

845:
old  <>
new  <	dq string_Sun#>

846:
old  <section .data>
new  <	; Initializer Pointer string_Mon#>

847:
old  <>
new  <	dq string_Mon#>

848:
old  <@4697$g_defaultShortDayList:>
new  <	; Initializer Pointer string_Tue#>

849:
old  <	; Initializer Pointer string_Sun#>
new  <	dq string_Tue#>

850:
old  <	dq string_Sun#>
new  <	; Initializer Pointer string_Wed#>

851:
old  <	; Initializer Pointer string_Mon#>
new  <	dq string_Wed#>

852:
old  <	dq string_Mon#>
new  <	; Initializer Pointer string_Thu#>

853:
old  <	; Initializer Pointer string_Tue#>
new  <	dq string_Thu#>

854:
old  <	dq string_Tue#>
new  <	; Initializer Pointer string_Fri#>

855:
old  <	; Initializer Pointer string_Wed#>
new  <	dq string_Fri#>

856:
old  <	dq string_Wed#>
new  <	; Initializer Pointer string_Sat#>

857:
old  <	; Initializer Pointer string_Thu#>
new  <	dq string_Sat#>

858:
old  <	dq string_Thu#>
new  <>

859:
old  <	; Initializer Pointer string_Fri#>
new  <section .data>

860:
old  <	dq string_Fri#>
new  <>

861:
old  <	; Initializer Pointer string_Sat#>
new  <string_Sunday#:>

862:
old  <	dq string_Sat#>
new  <	; Initializer String Sunday>

863:
old  <>
new  <	db "Sunday", 0>

864:
old  <section .data>
new  <>

865:
old  <>
new  <section .data>

866:
old  <string_Sunday#:>
new  <>

867:
old  <	; Initializer String Sunday>
new  <string_Monday#:>

868:
old  <	db "Sunday", 0>
new  <	; Initializer String Monday>

869:
old  <>
new  <	db "Monday", 0>

870:
old  <section .data>
new  <>

871:
old  <>
new  <section .data>

872:
old  <string_Monday#:>
new  <>

873:
old  <	; Initializer String Monday>
new  <string_Tuesday#:>

874:
old  <	db "Monday", 0>
new  <	; Initializer String Tuesday>

875:
old  <>
new  <	db "Tuesday", 0>

876:
old  <section .data>
new  <>

877:
old  <>
new  <section .data>

878:
old  <string_Tuesday#:>
new  <>

879:
old  <	; Initializer String Tuesday>
new  <string_Wednesday#:>

880:
old  <	db "Tuesday", 0>
new  <	; Initializer String Wednesday>

881:
old  <>
new  <	db "Wednesday", 0>

882:
old  <section .data>
new  <>

883:
old  <>
new  <section .data>

884:
old  <string_Wednesday#:>
new  <>

885:
old  <	; Initializer String Wednesday>
new  <string_Thursday#:>

886:
old  <	db "Wednesday", 0>
new  <	; Initializer String Thursday>

887:
old  <>
new  <	db "Thursday", 0>

888:
old  <section .data>
new  <>

889:
old  <>
new  <section .data>

890:
old  <string_Thursday#:>
new  <>

891:
old  <	; Initializer String Thursday>
new  <string_Friday#:>

892:
old  <	db "Thursday", 0>
new  <	; Initializer String Friday>

893:
old  <>
new  <	db "Friday", 0>

894:
old  <section .data>
new  <>

895:
old  <>
new  <section .data>

896:
old  <string_Friday#:>
new  <>

897:
old  <	; Initializer String Friday>
new  <string_Saturday#:>

898:
old  <	db "Friday", 0>
new  <	; Initializer String Saturday>

899:
old  <>
new  <	db "Saturday", 0>

900:
old  <section .data>
new  <>

901:
old  <>
new  <section .data>

902:
old  <string_Saturday#:>
new  <>

903:
old  <	; Initializer String Saturday>
new  <@4326$g_defaultLongDayList:>

904:
old  <	db "Saturday", 0>
new  <	; Initializer Pointer string_Sunday#>

905:
old  <>
new  <	dq string_Sunday#>

906:
old  <section .data>
new  <	; Initializer Pointer string_Monday#>

907:
old  <>
new  <	dq string_Monday#>

908:
old  <@4698$g_defaultLongDayList:>
new  <	; Initializer Pointer string_Tuesday#>

909:
old  <	; Initializer Pointer string_Sunday#>
new  <	dq string_Tuesday#>

910:
old  <	dq string_Sunday#>
new  <	; Initializer Pointer string_Wednesday#>

911:
old  <	; Initializer Pointer string_Monday#>
new  <	dq string_Wednesday#>

912:
old  <	dq string_Monday#>
new  <	; Initializer Pointer string_Thursday#>

913:
old  <	; Initializer Pointer string_Tuesday#>
new  <	dq string_Thursday#>

914:
old  <	dq string_Tuesday#>
new  <	; Initializer Pointer string_Friday#>

915:
old  <	; Initializer Pointer string_Wednesday#>
new  <	dq string_Friday#>

916:
old  <	dq string_Wednesday#>
new  <	; Initializer Pointer string_Saturday#>

917:
old  <	; Initializer Pointer string_Thursday#>
new  <	dq string_Saturday#>

918:
old  <	dq string_Thursday#>
new  <>

919:
old  <	; Initializer Pointer string_Friday#>
new  <section .data>

920:
old  <	dq string_Friday#>
new  <>

921:
old  <	; Initializer Pointer string_Saturday#>
new  <string_Jan#:>

922:
old  <	dq string_Saturday#>
new  <	; Initializer String Jan>

923:
old  <>
new  <	db "Jan", 0>

924:
old  <section .data>
new  <>

925:
old  <>
new  <section .data>

926:
old  <string_Jan#:>
new  <>

927:
old  <	; Initializer String Jan>
new  <string_Feb#:>

928:
old  <	db "Jan", 0>
new  <	; Initializer String Feb>

929:
old  <>
new  <	db "Feb", 0>

930:
old  <section .data>
new  <>

931:
old  <>
new  <section .data>

932:
old  <string_Feb#:>
new  <>

933:
old  <	; Initializer String Feb>
new  <string_Mar#:>

934:
old  <	db "Feb", 0>
new  <	; Initializer String Mar>

935:
old  <>
new  <	db "Mar", 0>

936:
old  <section .data>
new  <>

937:
old  <>
new  <section .data>

938:
old  <string_Mar#:>
new  <>

939:
old  <	; Initializer String Mar>
new  <string_Apr#:>

940:
old  <	db "Mar", 0>
new  <	; Initializer String Apr>

941:
old  <>
new  <	db "Apr", 0>

942:
old  <section .data>
new  <>

943:
old  <>
new  <section .data>

944:
old  <string_Apr#:>
new  <>

945:
old  <	; Initializer String Apr>
new  <string_May#:>

946:
old  <	db "Apr", 0>
new  <	; Initializer String May>

947:
old  <>
new  <	db "May", 0>

948:
old  <section .data>
new  <>

949:
old  <>
new  <section .data>

950:
old  <string_May#:>
new  <>

951:
old  <	; Initializer String May>
new  <string_Jun#:>

952:
old  <	db "May", 0>
new  <	; Initializer String Jun>

953:
old  <>
new  <	db "Jun", 0>

954:
old  <section .data>
new  <>

955:
old  <>
new  <section .data>

956:
old  <string_Jun#:>
new  <>

957:
old  <	; Initializer String Jun>
new  <string_Jul#:>

958:
old  <	db "Jun", 0>
new  <	; Initializer String Jul>

959:
old  <>
new  <	db "Jul", 0>

960:
old  <section .data>
new  <>

961:
old  <>
new  <section .data>

962:
old  <string_Jul#:>
new  <>

963:
old  <	; Initializer String Jul>
new  <string_Aug#:>

964:
old  <	db "Jul", 0>
new  <	; Initializer String Aug>

965:
old  <>
new  <	db "Aug", 0>

966:
old  <section .data>
new  <>

967:
old  <>
new  <section .data>

968:
old  <string_Aug#:>
new  <>

969:
old  <	; Initializer String Aug>
new  <string_Sep#:>

970:
old  <	db "Aug", 0>
new  <	; Initializer String Sep>

971:
old  <>
new  <	db "Sep", 0>

972:
old  <section .data>
new  <>

973:
old  <>
new  <section .data>

974:
old  <string_Sep#:>
new  <>

975:
old  <	; Initializer String Sep>
new  <string_Oct#:>

976:
old  <	db "Sep", 0>
new  <	; Initializer String Oct>

977:
old  <>
new  <	db "Oct", 0>

978:
old  <section .data>
new  <>

979:
old  <>
new  <section .data>

980:
old  <string_Oct#:>
new  <>

981:
old  <	; Initializer String Oct>
new  <string_Nov#:>

982:
old  <	db "Oct", 0>
new  <	; Initializer String Nov>

983:
old  <>
new  <	db "Nov", 0>

984:
old  <section .data>
new  <>

985:
old  <>
new  <section .data>

986:
old  <string_Nov#:>
new  <>

987:
old  <	; Initializer String Nov>
new  <string_Dec#:>

988:
old  <	db "Nov", 0>
new  <	; Initializer String Dec>

989:
old  <>
new  <	db "Dec", 0>

990:
old  <section .data>
new  <>

991:
old  <>
new  <section .data>

992:
old  <string_Dec#:>
new  <>

993:
old  <	; Initializer String Dec>
new  <@4327$g_defaultShortMonthList:>

994:
old  <	db "Dec", 0>
new  <	; Initializer Pointer string_Jan#>

995:
old  <>
new  <	dq string_Jan#>

996:
old  <section .data>
new  <	; Initializer Pointer string_Feb#>

997:
old  <>
new  <	dq string_Feb#>

998:
old  <@4699$g_defaultShortMonthList:>
new  <	; Initializer Pointer string_Mar#>

999:
old  <	; Initializer Pointer string_Jan#>
new  <	dq string_Mar#>

1000:
old  <	dq string_Jan#>
new  <	; Initializer Pointer string_Apr#>

1001:
old  <	; Initializer Pointer string_Feb#>
new  <	dq string_Apr#>

1002:
old  <	dq string_Feb#>
new  <	; Initializer Pointer string_May#>

1003:
old  <	; Initializer Pointer string_Mar#>
new  <	dq string_May#>

1004:
old  <	dq string_Mar#>
new  <	; Initializer Pointer string_Jun#>

1005:
old  <	; Initializer Pointer string_Apr#>
new  <	dq string_Jun#>

1006:
old  <	dq string_Apr#>
new  <	; Initializer Pointer string_Jul#>

1007:
old  <	; Initializer Pointer string_May#>
new  <	dq string_Jul#>

1008:
old  <	dq string_May#>
new  <	; Initializer Pointer string_Aug#>

1009:
old  <	; Initializer Pointer string_Jun#>
new  <	dq string_Aug#>

1010:
old  <	dq string_Jun#>
new  <	; Initializer Pointer string_Sep#>

1011:
old  <	; Initializer Pointer string_Jul#>
new  <	dq string_Sep#>

1012:
old  <	dq string_Jul#>
new  <	; Initializer Pointer string_Oct#>

1013:
old  <	; Initializer Pointer string_Aug#>
new  <	dq string_Oct#>

1014:
old  <	dq string_Aug#>
new  <	; Initializer Pointer string_Nov#>

1015:
old  <	; Initializer Pointer string_Sep#>
new  <	dq string_Nov#>

1016:
old  <	dq string_Sep#>
new  <	; Initializer Pointer string_Dec#>

1017:
old  <	; Initializer Pointer string_Oct#>
new  <	dq string_Dec#>

1018:
old  <	dq string_Oct#>
new  <>

1019:
old  <	; Initializer Pointer string_Nov#>
new  <section .data>

1020:
old  <	dq string_Nov#>
new  <>

1021:
old  <	; Initializer Pointer string_Dec#>
new  <string_January#:>

1022:
old  <	dq string_Dec#>
new  <	; Initializer String January>

1023:
old  <>
new  <	db "January", 0>

1024:
old  <section .data>
new  <>

1025:
old  <>
new  <section .data>

1026:
old  <string_January#:>
new  <>

1027:
old  <	; Initializer String January>
new  <string_February#:>

1028:
old  <	db "January", 0>
new  <	; Initializer String February>

1029:
old  <>
new  <	db "February", 0>

1030:
old  <section .data>
new  <>

1031:
old  <>
new  <section .data>

1032:
old  <string_February#:>
new  <>

1033:
old  <	; Initializer String February>
new  <string_March#:>

1034:
old  <	db "February", 0>
new  <	; Initializer String March>

1035:
old  <>
new  <	db "March", 0>

1036:
old  <section .data>
new  <>

1037:
old  <>
new  <section .data>

1038:
old  <string_March#:>
new  <>

1039:
old  <	; Initializer String March>
new  <string_April#:>

1040:
old  <	db "March", 0>
new  <	; Initializer String April>

1041:
old  <>
new  <	db "April", 0>

1042:
old  <section .data>
new  <>

1043:
old  <>
new  <section .data>

1044:
old  <string_April#:>
new  <>

1045:
old  <	; Initializer String April>
new  <string_June#:>

1046:
old  <	db "April", 0>
new  <	; Initializer String June>

1047:
old  <>
new  <	db "June", 0>

1048:
old  <section .data>
new  <>

1049:
old  <>
new  <section .data>

1050:
old  <string_June#:>
new  <>

1051:
old  <	; Initializer String June>
new  <string_July#:>

1052:
old  <	db "June", 0>
new  <	; Initializer String July>

1053:
old  <>
new  <	db "July", 0>

1054:
old  <section .data>
new  <>

1055:
old  <>
new  <section .data>

1056:
old  <string_July#:>
new  <>

1057:
old  <	; Initializer String July>
new  <string_August#:>

1058:
old  <	db "July", 0>
new  <	; Initializer String August>

1059:
old  <>
new  <	db "August", 0>

1060:
old  <section .data>
new  <>

1061:
old  <>
new  <section .data>

1062:
old  <string_August#:>
new  <>

1063:
old  <	; Initializer String August>
new  <string_September#:>

1064:
old  <	db "August", 0>
new  <	; Initializer String September>

1065:
old  <>
new  <	db "September", 0>

1066:
old  <section .data>
new  <>

1067:
old  <>
new  <section .data>

1068:
old  <string_September#:>
new  <>

1069:
old  <	; Initializer String September>
new  <string_October#:>

1070:
old  <	db "September", 0>
new  <	; Initializer String October>

1071:
old  <>
new  <	db "October", 0>

1072:
old  <section .data>
new  <>

1073:
old  <>
new  <section .data>

1074:
old  <string_October#:>
new  <>

1075:
old  <	; Initializer String October>
new  <string_November#:>

1076:
old  <	db "October", 0>
new  <	; Initializer String November>

1077:
old  <>
new  <	db "November", 0>

1078:
old  <section .data>
new  <>

1079:
old  <>
new  <section .data>

1080:
old  <string_November#:>
new  <>

1081:
old  <	; Initializer String November>
new  <string_December#:>

1082:
old  <	db "November", 0>
new  <	; Initializer String December>

1083:
old  <>
new  <	db "December", 0>

1084:
old  <section .data>
new  <>

1085:
old  <>
new  <section .data>

1086:
old  <string_December#:>
new  <>

1087:
old  <	; Initializer String December>
new  <@4328$g_defaultLongMonthList:>

1088:
old  <	db "December", 0>
new  <	; Initializer Pointer string_January#>

1089:
old  <>
new  <	dq string_January#>

1090:
old  <section .data>
new  <	; Initializer Pointer string_February#>

1091:
old  <>
new  <	dq string_February#>

1092:
old  <@4700$g_defaultLongMonthList:>
new  <	; Initializer Pointer string_March#>

1093:
old  <	; Initializer Pointer string_January#>
new  <	dq string_March#>

1094:
old  <	dq string_January#>
new  <	; Initializer Pointer string_April#>

1095:
old  <	; Initializer Pointer string_February#>
new  <	dq string_April#>

1096:
old  <	dq string_February#>
new  <	; Initializer Pointer string_May#>

1097:
old  <	; Initializer Pointer string_March#>
new  <	dq string_May#>

1098:
old  <	dq string_March#>
new  <	; Initializer Pointer string_June#>

1099:
old  <	; Initializer Pointer string_April#>
new  <	dq string_June#>

1100:
old  <	dq string_April#>
new  <	; Initializer Pointer string_July#>

1101:
old  <	; Initializer Pointer string_May#>
new  <	dq string_July#>

1102:
old  <	dq string_May#>
new  <	; Initializer Pointer string_August#>

1103:
old  <	; Initializer Pointer string_June#>
new  <	dq string_August#>

1104:
old  <	dq string_June#>
new  <	; Initializer Pointer string_September#>

1105:
old  <	; Initializer Pointer string_July#>
new  <	dq string_September#>

1106:
old  <	dq string_July#>
new  <	; Initializer Pointer string_October#>

1107:
old  <	; Initializer Pointer string_August#>
new  <	dq string_October#>

1108:
old  <	dq string_August#>
new  <	; Initializer Pointer string_November#>

1109:
old  <	; Initializer Pointer string_September#>
new  <	dq string_November#>

1110:
old  <	dq string_September#>
new  <	; Initializer Pointer string_December#>

1111:
old  <	; Initializer Pointer string_October#>
new  <	dq string_December#>

1112:
old  <	dq string_October#>
new  <>

1113:
old  <	; Initializer Pointer string_November#>
new  <section .data>

1114:
old  <	dq string_November#>
new  <>

1115:
old  <	; Initializer Pointer string_December#>
new  <string_25s2025s20252i202502i3A2502i3A2502i202504i#:>

1116:
old  <	dq string_December#>
new  <	; Initializer String %s %s %2i %02i:%02i:%02i %04i>

1117:
old  <>
new  <	db "%s %s %2i %02i:%02i:%02i %04i", 0>

1118:
old  <section .text>
new  <>

1119:
old  <>
new  <section .data>

1120:
old  < default_test:>
new  <>

1121:
old  <	; Empty>
new  <int8$8#:>

1122:
old  <>
new  <	; Initializer Pointer 8>

1123:
old  < default_test$1:>
new  <	dq 8>

1124:
old  <	; Return>
new  <>

1125:
old  <	mov rax, [rbp]>
new  <section .text>

1126:
old  <	mov rdi, [rbp + 16]>
new  <>

1127:
old  <	mov rbp, [rbp + 8]>
new  < asctime:>

1128:
old  <	jmp rax>
new  <	; Assign localeConvPtr 0>

1129:
old  <>
new  <	mov qword [rbp + 32], 0>

1130:
old  < default_test$2:>
new  <>

1131:
old  <	; FunctionEnd default_test>
new  < asctime$1:>

1132:
old  <>
new  <	; Equal 5 localeConvPtr 0>

1133:
old  <section .data>
new  <	cmp qword [rbp + 32], 0>

1134:
old  <>
new  <	je asctime$5>

1135:
old  <string_25s2025s20252i202502i3A2502i3A2502i202504i#:>
new  <>

1136:
old  <	; Initializer String %s %s %2i %02i:%02i:%02i %04i>
new  < asctime$2:>

1137:
old  <	db "%s %s %2i %02i:%02i:%02i %04i", 0>
new  <	; Dereference Â£temporary2232 -> localeConvPtr localeConvPtr 0>

1138:
old  <>
new  <	mov rsi, [rbp + 32]>

1139:
old  <section .data>
new  <>

1140:
old  <>
new  < asctime$3:>

1141:
old  <int8$8#:>
new  <	; Assign Â£temporary2233 Â£temporary2232 -> localeConvPtr>

1142:
old  <	; Initializer Pointer 8>
new  <	mov rax, [rsi + 8]>

1143:
old  <	dq 8>
new  <>

1144:
old  <>
new  < asctime$4:>

1145:
old  <section .text>
new  <	; Goto 6>

1146:
old  <>
new  <	jmp asctime$6>

1147:
old  < asctime:>
new  <>

1148:
old  <	; Assign localeConvPtr 0>
new  < asctime$5:>

1149:
old  <	mov qword [rbp + 32], 0>
new  <	; Assign Â£temporary2233 0>

1150:
old  <>
new  <	mov rax, 0>

1151:
old  < asctime$1:>
new  <>

1152:
old  <	; Equal 5 localeConvPtr 0>
new  < asctime$6:>

1153:
old  <	cmp qword [rbp + 32], 0>
new  <	; Assign shortDayList Â£temporary2233>

1154:
old  <	je asctime$5>
new  <	mov [rbp + 40], rax>

1156:
old  < asctime$2:>
new  < asctime$7:>

1157:
old  <	; Dereference Â£temporary2229 -> localeConvPtr localeConvPtr 0>
new  <	; Equal 11 localeConvPtr 0>

1158:
old  <	mov rsi, [rbp + 32]>
new  <	cmp qword [rbp + 32], 0>

1159:
old  <>
new  <	je asctime$11>

1160:
old  < asctime$3:>
new  <>

1161:
old  <	; Assign Â£temporary2230 Â£temporary2229 -> localeConvPtr>
new  < asctime$8:>

1162:
old  <	mov rax, [rsi + 8]>
new  <	; Dereference Â£temporary2235 -> localeConvPtr localeConvPtr 0>

1163:
old  <>
new  <	mov rsi, [rbp + 32]>

1164:
old  < asctime$4:>
new  <>

1165:
old  <	; Goto 6>
new  < asctime$9:>

1166:
old  <	jmp asctime$6>
new  <	; Assign Â£temporary2236 Â£temporary2235 -> localeConvPtr>

1167:
old  <>
new  <	mov rax, [rsi + 24]>

1168:
old  < asctime$5:>
new  <>

1169:
old  <	; Assign Â£temporary2230 0>
new  < asctime$10:>

1170:
old  <	mov rax, 0>
new  <	; Goto 12>

1171:
old  <>
new  <	jmp asctime$12>

1172:
old  < asctime$6:>
new  <>

1173:
old  <	; Assign shortDayList Â£temporary2230>
new  < asctime$11:>

1174:
old  <	mov [rbp + 40], rax>
new  <	; Assign Â£temporary2236 0>

1175:
old  <>
new  <	mov rax, 0>

1176:
old  < asctime$7:>
new  <>

1177:
old  <	; Equal 11 localeConvPtr 0>
new  < asctime$12:>

1178:
old  <	cmp qword [rbp + 32], 0>
new  <	; Assign shortMonthList Â£temporary2236>

1179:
old  <	je asctime$11>
new  <	mov [rbp + 48], rax>

1181:
old  < asctime$8:>
new  < asctime$13:>

1182:
old  <	; Dereference Â£temporary2232 -> localeConvPtr localeConvPtr 0>
new  <	; Equal 16 shortDayList 0>

1183:
old  <	mov rsi, [rbp + 32]>
new  <	cmp qword [rbp + 40], 0>

1184:
old  <>
new  <	je asctime$16>

1185:
old  < asctime$9:>
new  <>

1186:
old  <	; Assign Â£temporary2233 Â£temporary2232 -> localeConvPtr>
new  < asctime$14:>

1187:
old  <	mov rax, [rsi + 24]>
new  <	; Assign Â£temporary2238 shortDayList>

1188:
old  <>
new  <	mov rax, [rbp + 40]>

1189:
old  < asctime$10:>
new  <>

1190:
old  <	; Goto 12>
new  < asctime$15:>

1191:
old  <	jmp asctime$12>
new  <	; Goto 17>

1192:
old  <>
new  <	jmp asctime$17>

1193:
old  < asctime$11:>
new  <>

1194:
old  <	; Assign Â£temporary2233 0>
new  < asctime$16:>

1195:
old  <	mov rax, 0>
new  <	; Assign Â£temporary2238 g_defaultShortDayList>

1196:
old  <>
new  <	mov rax, @4325$g_defaultShortDayList>

1197:
old  < asctime$12:>
new  <>

1198:
old  <	; Assign shortMonthList Â£temporary2233>
new  < asctime$17:>

1199:
old  <	mov [rbp + 48], rax>
new  <	; Assign shortDayList Â£temporary2238>

1200:
old  <>
new  <	mov [rbp + 40], rax>

1201:
old  < asctime$13:>
new  <>

1202:
old  <	; Equal 16 shortDayList 0>
new  < asctime$18:>

1203:
old  <	cmp qword [rbp + 40], 0>
new  <	; Equal 21 shortMonthList 0>

1204:
old  <	je asctime$16>
new  <	cmp qword [rbp + 48], 0>

1205:
old  <>
new  <	je asctime$21>

1206:
old  < asctime$14:>
new  <>

1207:
old  <	; Assign Â£temporary2235 shortDayList>
new  < asctime$19:>

1208:
old  <	mov rax, [rbp + 40]>
new  <	; Assign Â£temporary2240 shortMonthList>

1209:
old  <>
new  <	mov rax, [rbp + 48]>

1210:
old  < asctime$15:>
new  <>

1211:
old  <	; Goto 17>
new  < asctime$20:>

1212:
old  <	jmp asctime$17>
new  <	; Goto 22>

1213:
old  <>
new  <	jmp asctime$22>

1214:
old  < asctime$16:>
new  <>

1215:
old  <	; Assign Â£temporary2235 g_defaultShortDayList>
new  < asctime$21:>

1216:
old  <	mov rax, @4697$g_defaultShortDayList>
new  <	; Assign Â£temporary2240 g_defaultShortMonthList>

1217:
old  <>
new  <	mov rax, @4327$g_defaultShortMonthList>

1218:
old  < asctime$17:>
new  <>

1219:
old  <	; Assign shortDayList Â£temporary2235>
new  < asctime$22:>

1220:
old  <	mov [rbp + 40], rax>
new  <	; Assign shortMonthList Â£temporary2240>

1221:
old  <>
new  <	mov [rbp + 48], rax>

1222:
old  < asctime$18:>
new  <>

1223:
old  <	; Equal 21 shortMonthList 0>
new  < asctime$23:>

1224:
old  <	cmp qword [rbp + 48], 0>
new  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1225:
old  <	je asctime$21>
new  <>

1226:
old  <>
new  < asctime$24:>

1227:
old  < asctime$19:>
new  <	; Parameter pointer g_timeString 80>

1228:
old  <	; Assign Â£temporary2237 shortMonthList>
new  <	mov qword [rbp + 80], @4324$g_timeString>

1229:
old  <	mov rax, [rbp + 48]>
new  <>

1230:
old  <>
new  < asctime$25:>

1231:
old  < asctime$20:>
new  <	; Parameter pointer "%s %s %2i %02i:%02i:%02i %04i" 88>

1232:
old  <	; Goto 22>
new  <	mov qword [rbp + 88], string_25s2025s20252i202502i3A2502i3A2502i202504i#>

1233:
old  <	jmp asctime$22>
new  <>

1234:
old  <>
new  < asctime$26:>

1235:
old  < asctime$21:>
new  <	; Dereference Â£temporary2241 -> tp tp 0>

1236:
old  <	; Assign Â£temporary2237 g_defaultShortMonthList>
new  <	mov rsi, [rbp + 24]>

1237:
old  <	mov rax, @4699$g_defaultShortMonthList>
new  <>

1238:
old  <>
new  < asctime$27:>

1239:
old  < asctime$22:>
new  <	; IntegralToIntegral Â£temporary2243 Â£temporary2241 -> tp>

1240:
old  <	; Assign shortMonthList Â£temporary2237>
new  <	mov eax, [rsi + 24]>

1241:
old  <	mov [rbp + 48], rax>
new  <	mov rbx, 4294967295>

1242:
old  <>
new  <	and rax, rbx>

1243:
old  < asctime$23:>
new  <>

1244:
old  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < asctime$28:>

1245:
old  <>
new  <	; UnsignedMultiply Â£temporary2244 Â£temporary2243 8>

1246:
old  < asctime$24:>
new  <	xor rdx, rdx>

1247:
old  <	; Parameter pointer g_timeString 80>
new  <	mul qword [int8$8#]>

1248:
old  <	mov qword [rbp + 80], @4696$g_timeString>
new  <>

1249:
old  <>
new  < asctime$29:>

1250:
old  < asctime$25:>
new  <	; BinaryAdd Â£temporary2245 shortDayList Â£temporary2244>

1251:
old  <	; Parameter pointer "%s %s %2i %02i:%02i:%02i %04i" 88>
new  <	mov rsi, [rbp + 40]>

1252:
old  <	mov qword [rbp + 88], string_25s2025s20252i202502i3A2502i3A2502i202504i#>
new  <	add rsi, rax>

1254:
old  < asctime$26:>
new  < asctime$30:>

1255:
old  <	; Dereference Â£temporary2238 -> tp tp 0>
new  <	; Dereference Â£temporary2242 -> Â£temporary2245 Â£temporary2245 0>

1256:
old  <	mov rsi, [rbp + 24]>
new  <>

1257:
old  <>
new  < asctime$31:>

1258:
old  < asctime$27:>
new  <	; Parameter pointer Â£temporary2242 -> Â£temporary2245 96>

1259:
old  <	; IntegralToIntegral Â£temporary2240 Â£temporary2238 -> tp>
new  <	mov rax, [rsi]>

1260:
old  <	mov eax, [rsi + 24]>
new  <	mov [rbp + 96], rax>

1261:
old  <	mov rbx, 4294967295>
new  <>

1262:
old  <	and rax, rbx>
new  < asctime$32:>

1263:
old  <>
new  <	; Dereference Â£temporary2246 -> tp tp 0>

1264:
old  < asctime$28:>
new  <	mov rsi, [rbp + 24]>

1265:
old  <	; UnsignedMultiply Â£temporary2241 Â£temporary2240 8>
new  <>

1266:
old  <	xor rdx, rdx>
new  < asctime$33:>

1267:
old  <	mul qword [int8$8#]>
new  <	; IntegralToIntegral Â£temporary2248 Â£temporary2246 -> tp>

1268:
old  <>
new  <	mov eax, [rsi + 16]>

1269:
old  < asctime$29:>
new  <	mov rbx, 4294967295>

1270:
old  <	; BinaryAdd Â£temporary2242 shortDayList Â£temporary2241>
new  <	and rax, rbx>

1271:
old  <	mov rsi, [rbp + 40]>
new  <>

1272:
old  <	add rsi, rax>
new  < asctime$34:>

1273:
old  <>
new  <	; UnsignedMultiply Â£temporary2249 Â£temporary2248 8>

1274:
old  < asctime$30:>
new  <	xor rdx, rdx>

1275:
old  <	; Dereference Â£temporary2239 -> Â£temporary2242 Â£temporary2242 0>
new  <	mul qword [int8$8#]>

1277:
old  < asctime$31:>
new  < asctime$35:>

1278:
old  <	; Parameter pointer Â£temporary2239 -> Â£temporary2242 96>
new  <	; BinaryAdd Â£temporary2250 shortMonthList Â£temporary2249>

1279:
old  <	mov rax, [rsi]>
new  <	mov rsi, [rbp + 48]>

1280:
old  <	mov [rbp + 96], rax>
new  <	add rsi, rax>

1282:
old  < asctime$32:>
new  < asctime$36:>

1283:
old  <	; Dereference Â£temporary2243 -> tp tp 0>
new  <	; Dereference Â£temporary2247 -> Â£temporary2250 Â£temporary2250 0>

1284:
old  <	mov rsi, [rbp + 24]>
new  <>

1285:
old  <>
new  < asctime$37:>

1286:
old  < asctime$33:>
new  <	; Parameter pointer Â£temporary2247 -> Â£temporary2250 104>

1287:
old  <	; IntegralToIntegral Â£temporary2245 Â£temporary2243 -> tp>
new  <	mov rax, [rsi]>

1288:
old  <	mov eax, [rsi + 16]>
new  <	mov [rbp + 104], rax>

1289:
old  <	mov rbx, 4294967295>
new  <>

1290:
old  <	and rax, rbx>
new  < asctime$38:>

1291:
old  <>
new  <	; Dereference Â£temporary2251 -> tp tp 0>

1292:
old  < asctime$34:>
new  <	mov rsi, [rbp + 24]>

1293:
old  <	; UnsignedMultiply Â£temporary2246 Â£temporary2245 8>
new  <>

1294:
old  <	xor rdx, rdx>
new  < asctime$39:>

1295:
old  <	mul qword [int8$8#]>
new  <	; Parameter signedint Â£temporary2251 -> tp 112>

1296:
old  <>
new  <	mov eax, [rsi + 12]>

1297:
old  < asctime$35:>
new  <	mov [rbp + 112], eax>

1298:
old  <	; BinaryAdd Â£temporary2247 shortMonthList Â£temporary2246>
new  <>

1299:
old  <	mov rsi, [rbp + 48]>
new  < asctime$40:>

1300:
old  <	add rsi, rax>
new  <	; Dereference Â£temporary2252 -> tp tp 0>

1301:
old  <>
new  <	mov rsi, [rbp + 24]>

1302:
old  < asctime$36:>
new  <>

1303:
old  <	; Dereference Â£temporary2244 -> Â£temporary2247 Â£temporary2247 0>
new  < asctime$41:>

1304:
old  <>
new  <	; Parameter signedint Â£temporary2252 -> tp 116>

1305:
old  < asctime$37:>
new  <	mov eax, [rsi + 8]>

1306:
old  <	; Parameter pointer Â£temporary2244 -> Â£temporary2247 104>
new  <	mov [rbp + 116], eax>

1307:
old  <	mov rax, [rsi]>
new  <>

1308:
old  <	mov [rbp + 104], rax>
new  < asctime$42:>

1309:
old  <>
new  <	; Dereference Â£temporary2253 -> tp tp 0>

1310:
old  < asctime$38:>
new  <	mov rsi, [rbp + 24]>

1311:
old  <	; Dereference Â£temporary2248 -> tp tp 0>
new  <>

1312:
old  <	mov rsi, [rbp + 24]>
new  < asctime$43:>

1313:
old  <>
new  <	; Parameter signedint Â£temporary2253 -> tp 120>

1314:
old  < asctime$39:>
new  <	mov eax, [rsi + 4]>

1315:
old  <	; Parameter signedint Â£temporary2248 -> tp 112>
new  <	mov [rbp + 120], eax>

1316:
old  <	mov eax, [rsi + 12]>
new  <>

1317:
old  <	mov [rbp + 112], eax>
new  < asctime$44:>

1318:
old  <>
new  <	; Dereference Â£temporary2254 -> tp tp 0>

1319:
old  < asctime$40:>
new  <	mov rsi, [rbp + 24]>

1320:
old  <	; Dereference Â£temporary2249 -> tp tp 0>
new  <>

1321:
old  <	mov rsi, [rbp + 24]>
new  < asctime$45:>

1322:
old  <>
new  <	; Parameter signedint Â£temporary2254 -> tp 124>

1323:
old  < asctime$41:>
new  <	mov eax, [rsi]>

1324:
old  <	; Parameter signedint Â£temporary2249 -> tp 116>
new  <	mov [rbp + 124], eax>

1325:
old  <	mov eax, [rsi + 8]>
new  <>

1326:
old  <	mov [rbp + 116], eax>
new  < asctime$46:>

1327:
old  <>
new  <	; Dereference Â£temporary2255 -> tp tp 0>

1328:
old  < asctime$42:>
new  <	mov rsi, [rbp + 24]>

1329:
old  <	; Dereference Â£temporary2250 -> tp tp 0>
new  <>

1330:
old  <	mov rsi, [rbp + 24]>
new  < asctime$47:>

1331:
old  <>
new  <	; BinaryAdd Â£temporary2256 Â£temporary2255 -> tp 1900>

1332:
old  < asctime$43:>
new  <	mov eax, [rsi + 20]>

1333:
old  <	; Parameter signedint Â£temporary2250 -> tp 120>
new  <	add eax, 1900>

1334:
old  <	mov eax, [rsi + 4]>
new  <>

1335:
old  <	mov [rbp + 120], eax>
new  < asctime$48:>

1336:
old  <>
new  <	; Parameter signedint Â£temporary2256 128>

1337:
old  < asctime$44:>
new  <	mov [rbp + 128], eax>

1338:
old  <	; Dereference Â£temporary2251 -> tp tp 0>
new  <>

1339:
old  <	mov rsi, [rbp + 24]>
new  < asctime$49:>

1340:
old  <>
new  <	; Call sprintf 56 36>

1341:
old  < asctime$45:>
new  <	mov qword [rbp + 56], asctime$50>

1342:
old  <	; Parameter signedint Â£temporary2251 -> tp 124>
new  <	mov [rbp + 64], rbp>

1343:
old  <	mov eax, [rsi]>
new  <	add rbp, 56>

1344:
old  <	mov [rbp + 124], eax>
new  <	mov rdi, rbp>

1345:
old  <>
new  <	add rdi, 36>

1346:
old  < asctime$46:>
new  <	jmp sprintf>

1347:
old  <	; Dereference Â£temporary2252 -> tp tp 0>
new  <>

1348:
old  <	mov rsi, [rbp + 24]>
new  < asctime$50:>

1349:
old  <>
new  <	; PostCall 56>

1350:
old  < asctime$47:>
new  <>

1351:
old  <	; BinaryAdd Â£temporary2253 Â£temporary2252 -> tp 1900>
new  < asctime$51:>

1352:
old  <	mov eax, [rsi + 20]>
new  <	; Return g_timeString>

1353:
old  <	add eax, 1900>
new  <	mov rbx, @4324$g_timeString>

1354:
old  <>
new  <	mov rax, [rbp]>

1355:
old  < asctime$48:>
new  <	mov rdi, [rbp + 16]>

1356:
old  <	; Parameter signedint Â£temporary2253 128>
new  <	mov rbp, [rbp + 8]>

1357:
old  <	mov [rbp + 128], eax>
new  <	jmp rax>

1359:
old  < asctime$49:>
new  < asctime$52:>

1360:
old  <	; Call sprintf 56 36>
new  <	; FunctionEnd asctime>

1361:
old  <	mov qword [rbp + 56], asctime$50>
new  <>

1362:
old  <	mov [rbp + 64], rbp>
new  <section .text>

1363:
old  <	add rbp, 56>
new  <>

1364:
old  <	mov rdi, rbp>
new  < ctime:>

1365:
old  <	add rdi, 36>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1366:
old  <	jmp sprintf>
new  <>

1367:
old  <>
new  < ctime$1:>

1368:
old  < asctime$50:>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1369:
old  <	; PostCall 56>
new  <>

1370:
old  <>
new  < ctime$2:>

1371:
old  < asctime$51:>
new  <	; Parameter pointer time 56>

1372:
old  <	; Return g_timeString>
new  <	mov rax, [rbp + 24]>

1373:
old  <	mov rbx, @4696$g_timeString>
new  <	mov [rbp + 56], rax>

1374:
old  <	mov rax, [rbp]>
new  <>

1375:
old  <	mov rdi, [rbp + 16]>
new  < ctime$3:>

1376:
old  <	mov rbp, [rbp + 8]>
new  <	; Call localtime 32 0>

1377:
old  <	jmp rax>
new  <	mov qword [rbp + 32], ctime$4>

1378:
old  <>
new  <	mov [rbp + 40], rbp>

1379:
old  < asctime$52:>
new  <	add rbp, 32>

1380:
old  <	; FunctionEnd asctime>
new  <	jmp localtime>

1382:
old  <section .text>
new  < ctime$4:>

1383:
old  <>
new  <	; PostCall 32>

1384:
old  < ctime:>
new  <>

1385:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < ctime$5:>

1386:
old  <>
new  <	; GetReturnValue Â£temporary2258>

1387:
old  < ctime$1:>
new  <>

1388:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < ctime$6:>

1389:
old  <>
new  <	; Parameter pointer Â£temporary2258 56>

1390:
old  < ctime$2:>
new  <	mov [rbp + 56], rbx>

1391:
old  <	; Parameter pointer time 56>
new  <>

1392:
old  <	mov rax, [rbp + 24]>
new  < ctime$7:>

1393:
old  <	mov [rbp + 56], rax>
new  <	; Call asctime 32 0>

1394:
old  <>
new  <	mov qword [rbp + 32], ctime$8>

1395:
old  < ctime$3:>
new  <	mov [rbp + 40], rbp>

1396:
old  <	; Call localtime 32 0>
new  <	add rbp, 32>

1397:
old  <	mov qword [rbp + 32], ctime$4>
new  <	jmp asctime>

1398:
old  <	mov [rbp + 40], rbp>
new  <>

1399:
old  <	add rbp, 32>
new  < ctime$8:>

1400:
old  <	jmp localtime>
new  <	; PostCall 32>

1402:
old  < ctime$4:>
new  < ctime$9:>

1403:
old  <	; PostCall 32>
new  <	; GetReturnValue Â£temporary2259>

1405:
old  < ctime$5:>
new  < ctime$10:>

1406:
old  <	; GetReturnValue Â£temporary2255>
new  <	; Return Â£temporary2259>

1407:
old  <>
new  <	mov rax, [rbp]>

1408:
old  < ctime$6:>
new  <	mov rdi, [rbp + 16]>

1409:
old  <	; Parameter pointer Â£temporary2255 56>
new  <	mov rbp, [rbp + 8]>

1410:
old  <	mov [rbp + 56], rbx>
new  <	jmp rax>

1412:
old  < ctime$7:>
new  < ctime$11:>

1413:
old  <	; Call asctime 32 0>
new  <	; FunctionEnd ctime>

1414:
old  <	mov qword [rbp + 32], ctime$8>
new  <>

1415:
old  <	mov [rbp + 40], rbp>
new  <section .data>

1416:
old  <	add rbp, 32>
new  <>

1417:
old  <	jmp asctime>
new  <int4$3600#:>

1418:
old  <>
new  <	; Initializer SignedInt 3600>

1419:
old  < ctime$8:>
new  <	dd 3600>

1420:
old  <	; PostCall 32>
new  <>

1421:
old  <>
new  <section .text>

1422:
old  < ctime$9:>
new  <>

1423:
old  <	; GetReturnValue Â£temporary2256>
new  < localtime:>

1424:
old  <>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1425:
old  < ctime$10:>
new  <>

1426:
old  <	; Return Â£temporary2256>
new  < localtime$1:>

1427:
old  <	mov rax, [rbp]>
new  <	; Parameter pointer timePtr 56>

1428:
old  <	mov rdi, [rbp + 16]>
new  <	mov rax, [rbp + 24]>

1429:
old  <	mov rbp, [rbp + 8]>
new  <	mov [rbp + 56], rax>

1430:
old  <	jmp rax>
new  <>

1431:
old  <>
new  < localtime$2:>

1432:
old  < ctime$11:>
new  <	; Call gmtime 32 0>

1433:
old  <	; FunctionEnd ctime>
new  <	mov qword [rbp + 32], localtime$3>

1434:
old  <>
new  <	mov [rbp + 40], rbp>

1435:
old  <section .data>
new  <	add rbp, 32>

1436:
old  <>
new  <	jmp gmtime>

1437:
old  <int4$3600#:>
new  <>

1438:
old  <	; Initializer SignedInt 3600>
new  < localtime$3:>

1439:
old  <	dd 3600>
new  <	; PostCall 32>

1441:
old  <section .text>
new  < localtime$4:>

1442:
old  <>
new  <	; GetReturnValue Â£temporary2260>

1443:
old  < localtime:>
new  <>

1444:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < localtime$5:>

1445:
old  <>
new  <	; Assign tmPtr Â£temporary2260>

1446:
old  < localtime$1:>
new  <	mov [rbp + 32], rbx>

1447:
old  <	; Parameter pointer timePtr 56>
new  <>

1448:
old  <	mov rax, [rbp + 24]>
new  < localtime$6:>

1449:
old  <	mov [rbp + 56], rax>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1451:
old  < localtime$2:>
new  < localtime$7:>

1452:
old  <	; Call gmtime 32 0>
new  <	; Call localeconv 40 0>

1453:
old  <	mov qword [rbp + 32], localtime$3>
new  <	mov qword [rbp + 40], localtime$8>

1454:
old  <	mov [rbp + 40], rbp>
new  <	mov [rbp + 48], rbp>

1455:
old  <	add rbp, 32>
new  <	add rbp, 40>

1456:
old  <	jmp gmtime>
new  <	jmp localeconv>

1458:
old  < localtime$3:>
new  < localtime$8:>

1459:
old  <	; PostCall 32>
new  <	; PostCall 40>

1461:
old  < localtime$4:>
new  < localtime$9:>

1462:
old  <	; GetReturnValue Â£temporary2257>
new  <	; GetReturnValue Â£temporary2261>

1464:
old  < localtime$5:>
new  < localtime$10:>

1465:
old  <	; Assign tmPtr Â£temporary2257>
new  <	; Assign localeConvPtr Â£temporary2261>

1466:
old  <	mov [rbp + 32], rbx>
new  <	mov [rbp + 40], rbx>

1468:
old  < localtime$6:>
new  < localtime$11:>

1469:
old  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Assign timeZone 0>

1470:
old  <>
new  <	mov dword [rbp + 48], 0>

1471:
old  < localtime$7:>
new  <>

1472:
old  <	; Call localeconv 40 0>
new  < localtime$12:>

1473:
old  <	mov qword [rbp + 40], localtime$8>
new  <	; Equal 21 localeConvPtr 0>

1474:
old  <	mov [rbp + 48], rbp>
new  <	cmp qword [rbp + 40], 0>

1475:
old  <	add rbp, 40>
new  <	je localtime$21>

1476:
old  <	jmp localeconv>
new  <>

1477:
old  <>
new  < localtime$13:>

1478:
old  < localtime$8:>
new  <	; Dereference Â£temporary2263 -> tmPtr tmPtr 0>

1479:
old  <	; PostCall 40>
new  <	mov rsi, [rbp + 32]>

1481:
old  < localtime$9:>
new  < localtime$14:>

1482:
old  <	; GetReturnValue Â£temporary2258>
new  <	; Equal 18 Â£temporary2263 -> tmPtr 0>

1483:
old  <>
new  <	cmp dword [rsi + 32], 0>

1484:
old  < localtime$10:>
new  <	je localtime$18>

1485:
old  <	; Assign localeConvPtr Â£temporary2258>
new  <>

1486:
old  <	mov [rbp + 40], rbx>
new  < localtime$15:>

1487:
old  <>
new  <	; Dereference Â£temporary2264 -> localeConvPtr localeConvPtr 0>

1488:
old  < localtime$11:>
new  <	mov rsi, [rbp + 40]>

1489:
old  <	; Assign timeZone 0>
new  <>

1490:
old  <	mov dword [rbp + 48], 0>
new  < localtime$16:>

1491:
old  <>
new  <	; Assign Â£temporary2267 Â£temporary2264 -> localeConvPtr>

1492:
old  < localtime$12:>
new  <	mov eax, [rsi]>

1493:
old  <	; Equal 21 localeConvPtr 0>
new  <>

1494:
old  <	cmp qword [rbp + 40], 0>
new  < localtime$17:>

1495:
old  <	je localtime$21>
new  <	; Goto 20>

1496:
old  <>
new  <	jmp localtime$20>

1497:
old  < localtime$13:>
new  <>

1498:
old  <	; Dereference Â£temporary2260 -> tmPtr tmPtr 0>
new  < localtime$18:>

1499:
old  <	mov rsi, [rbp + 32]>
new  <	; Dereference Â£temporary2265 -> localeConvPtr localeConvPtr 0>

1500:
old  <>
new  <	mov rsi, [rbp + 40]>

1501:
old  < localtime$14:>
new  <>

1502:
old  <	; Equal 18 Â£temporary2260 -> tmPtr 0>
new  < localtime$19:>

1503:
old  <	cmp dword [rsi + 32], 0>
new  <	; Assign Â£temporary2267 Â£temporary2265 -> localeConvPtr>

1504:
old  <	je localtime$18>
new  <	mov eax, [rsi + 4]>

1506:
old  < localtime$15:>
new  < localtime$20:>

1507:
old  <	; Dereference Â£temporary2261 -> localeConvPtr localeConvPtr 0>
new  <	; Assign timeZone Â£temporary2267>

1508:
old  <	mov rsi, [rbp + 40]>
new  <	mov [rbp + 48], eax>

1510:
old  < localtime$16:>
new  < localtime$21:>

1511:
old  <	; Assign Â£temporary2264 Â£temporary2261 -> localeConvPtr>
new  <	; Dereference Â£temporary2268 -> timePtr timePtr 0>

1512:
old  <	mov eax, [rsi]>
new  <	mov rsi, [rbp + 24]>

1514:
old  < localtime$17:>
new  < localtime$22:>

1515:
old  <	; Goto 20>
new  <	; SignedMultiply Â£temporary2269 timeZone 3600>

1516:
old  <	jmp localtime$20>
new  <	mov eax, [rbp + 48]>

1517:
old  <>
new  <	xor edx, edx>

1518:
old  < localtime$18:>
new  <	imul dword [int4$3600#]>

1519:
old  <	; Dereference Â£temporary2262 -> localeConvPtr localeConvPtr 0>
new  <>

1520:
old  <	mov rsi, [rbp + 40]>
new  < localtime$23:>

1521:
old  <>
new  <	; IntegralToIntegral Â£temporary2270 Â£temporary2269>

1522:
old  < localtime$19:>
new  <	mov rbx, 4294967295>

1523:
old  <	; Assign Â£temporary2264 Â£temporary2262 -> localeConvPtr>
new  <	and rax, rbx>

1524:
old  <	mov eax, [rsi + 4]>
new  <>

1525:
old  <>
new  < localtime$24:>

1526:
old  < localtime$20:>
new  <	; BinaryAdd time Â£temporary2268 -> timePtr Â£temporary2270>

1527:
old  <	; Assign timeZone Â£temporary2264>
new  <	mov rbx, [rsi]>

1528:
old  <	mov [rbp + 48], eax>
new  <	add rbx, rax>

1529:
old  <>
new  <	mov [rbp + 52], rbx>

1530:
old  < localtime$21:>
new  <>

1531:
old  <	; Dereference Â£temporary2265 -> timePtr timePtr 0>
new  < localtime$25:>

1532:
old  <	mov rsi, [rbp + 24]>
new  <	; PreCall 60 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1534:
old  < localtime$22:>
new  < localtime$26:>

1535:
old  <	; SignedMultiply Â£temporary2266 timeZone 3600>
new  <	; Address Â£temporary2272 time>

1536:
old  <	mov eax, [rbp + 48]>
new  <	mov rsi, rbp>

1537:
old  <	xor edx, edx>
new  <	add rsi, 52>

1538:
old  <	imul dword [int4$3600#]>
new  <>

1539:
old  <>
new  < localtime$27:>

1540:
old  < localtime$23:>
new  <	; Parameter pointer Â£temporary2272 84>

1541:
old  <	; IntegralToIntegral Â£temporary2267 Â£temporary2266>
new  <	mov [rbp + 84], rsi>

1542:
old  <	mov rbx, 4294967295>
new  <>

1543:
old  <	and rax, rbx>
new  < localtime$28:>

1544:
old  <>
new  <	; Call gmtime 60 0>

1545:
old  < localtime$24:>
new  <	mov qword [rbp + 60], localtime$29>

1546:
old  <	; BinaryAdd time Â£temporary2265 -> timePtr Â£temporary2267>
new  <	mov [rbp + 68], rbp>

1547:
old  <	mov rbx, [rsi]>
new  <	add rbp, 60>

1548:
old  <	add rbx, rax>
new  <	jmp gmtime>

1549:
old  <	mov [rbp + 52], rbx>
new  <>

1550:
old  <>
new  < localtime$29:>

1551:
old  < localtime$25:>
new  <	; PostCall 60>

1552:
old  <	; PreCall 60 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1553:
old  <>
new  < localtime$30:>

1554:
old  < localtime$26:>
new  <	; GetReturnValue Â£temporary2273>

1555:
old  <	; Address Â£temporary2269 time>
new  <>

1556:
old  <	mov rsi, rbp>
new  < localtime$31:>

1557:
old  <	add rsi, 52>
new  <	; Return Â£temporary2273>

1558:
old  <>
new  <	mov rax, [rbp]>

1559:
old  < localtime$27:>
new  <	mov rdi, [rbp + 16]>

1560:
old  <	; Parameter pointer Â£temporary2269 84>
new  <	mov rbp, [rbp + 8]>

1561:
old  <	mov [rbp + 84], rsi>
new  <	jmp rax>

1563:
old  < localtime$28:>
new  < localtime$32:>

1564:
old  <	; Call gmtime 60 0>
new  <	; FunctionEnd localtime>

1565:
old  <	mov qword [rbp + 60], localtime$29>
new  <>

1566:
old  <	mov [rbp + 68], rbp>
new  <section .data>

1567:
old  <	add rbp, 60>
new  <>

1568:
old  <	jmp gmtime>
new  <string_#:>

1569:
old  <>
new  <	; Initializer String >

1570:
old  < localtime$29:>
new  <	db 0>

1571:
old  <	; PostCall 60>
new  <>

1572:
old  <>
new  <section .data>

1573:
old  < localtime$30:>
new  <>

1574:
old  <	; GetReturnValue Â£temporary2270>
new  <string_2504d2D2502d2D2502d202502d3A2502d3A2502d#:>

1575:
old  <>
new  <	; Initializer String %04d-%02d-%02d %02d:%02d:%02d>

1576:
old  < localtime$31:>
new  <	db "%04d-%02d-%02d %02d:%02d:%02d", 0>

1577:
old  <	; Return Â£temporary2270>
new  <>

1578:
old  <	mov rax, [rbp]>
new  <section .data>

1579:
old  <	mov rdi, [rbp + 16]>
new  <>

1580:
old  <	mov rbp, [rbp + 8]>
new  <string_2502d#:>

1581:
old  <	jmp rax>
new  <	; Initializer String %02d>

1582:
old  <>
new  <	db "%02d", 0>

1583:
old  < localtime$32:>
new  <>

1584:
old  <	; FunctionEnd localtime>
new  <section .data>

1586:
old  <section .data>
new  <string_2503d#:>

1587:
old  <>
new  <	; Initializer String %03d>

1588:
old  <string_#:>
new  <	db "%03d", 0>

1589:
old  <	; Initializer String >
new  <>

1590:
old  <	db 0>
new  <section .data>

1592:
old  <section .data>
new  <string_25s#:>

1593:
old  <>
new  <	; Initializer String %s>

1594:
old  <string_leap20days2025i2C20total20days2025lu0A#:>
new  <	db "%s", 0>

1595:
old  <	; Initializer String leap days %i, total days %lu\n>
new  <>

1596:
old  <	db "leap days %i, total days %lu", 10, 0>
new  <section .data>

1598:
old  <section .data>
new  <string_AM#:>

1599:
old  <>
new  <	; Initializer String AM>

1600:
old  <string_yearDaySunday2025i0A#:>
new  <	db "AM", 0>

1601:
old  <	; Initializer String yearDaySunday %i\n>
new  <>

1602:
old  <	db "yearDaySunday %i", 10, 0>
new  <section .data>

1604:
old  <section .data>
new  <string_PM#:>

1605:
old  <>
new  <	; Initializer String PM>

1606:
old  <string_yearDayMonday2025i0A#:>
new  <	db "PM", 0>

1607:
old  <	; Initializer String yearDayMonday %i\n>
new  <>

1608:
old  <	db "yearDayMonday %i", 10, 0>
new  <section .data>

1610:
old  <section .data>
new  <string_2504d2D2502d2D2502d#:>

1611:
old  <>
new  <	; Initializer String %04d-%02d-%02d>

1612:
old  <string_2504d2D2502d2D2502d202502d3A2502d3A2502d#:>
new  <	db "%04d-%02d-%02d", 0>

1613:
old  <	; Initializer String %04d-%02d-%02d %02d:%02d:%02d>
new  <>

1614:
old  <	db "%04d-%02d-%02d %02d:%02d:%02d", 0>
new  <section .data>

1616:
old  <section .data>
new  <string_2502d3A2502d3A2502d#:>

1617:
old  <>
new  <	; Initializer String %02d:%02d:%02d>

1618:
old  <string_2502d#:>
new  <	db "%02d:%02d:%02d", 0>

1619:
old  <	; Initializer String %02d>
new  <>

1620:
old  <	db "%02d", 0>
new  <section .data>

1622:
old  <section .data>
new  <string_2504d#:>

1623:
old  <>
new  <	; Initializer String %04d>

1624:
old  <string_2503d#:>
new  <	db "%04d", 0>

1625:
old  <	; Initializer String %03d>
new  <>

1626:
old  <	db "%03d", 0>
new  <section .data>

1628:
old  <section .data>
new  <string_25#:>

1629:
old  <>
new  <	; Initializer String %>

1630:
old  <string_25s#:>
new  <	db "%", 0>

1631:
old  <	; Initializer String %s>
new  <>

1632:
old  <	db "%s", 0>
new  <section .data>

1634:
old  <section .data>
new  <int4$12#:>

1635:
old  <>
new  <	; Initializer SignedInt 12>

1636:
old  <string_AM#:>
new  <	dd 12>

1637:
old  <	; Initializer String AM>
new  <>

1638:
old  <	db "AM", 0>
new  <section .text>

1640:
old  <section .data>
new  < strftime:>

1641:
old  <>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1642:
old  <string_PM#:>
new  <>

1643:
old  <	; Initializer String PM>
new  < strftime$1:>

1644:
old  <	db "PM", 0>
new  <	; Call localeconv 52 0>

1645:
old  <>
new  <	mov qword [rbp + 52], strftime$2>

1646:
old  <section .data>
new  <	mov [rbp + 60], rbp>

1647:
old  <>
new  <	add rbp, 52>

1648:
old  <string_2504d2D2502d2D2502d#:>
new  <	jmp localeconv>

1649:
old  <	; Initializer String %04d-%02d-%02d>
new  <>

1650:
old  <	db "%04d-%02d-%02d", 0>
new  < strftime$2:>

1651:
old  <>
new  <	; PostCall 52>

1652:
old  <section .data>
new  <>

1653:
old  <>
new  < strftime$3:>

1654:
old  <string_2502d3A2502d3A2502d#:>
new  <	; GetReturnValue Â£temporary2275>

1655:
old  <	; Initializer String %02d:%02d:%02d>
new  <>

1656:
old  <	db "%02d:%02d:%02d", 0>
new  < strftime$4:>

1657:
old  <>
new  <	; Assign localeConvPtr Â£temporary2275>

1658:
old  <section .data>
new  <	mov [rbp + 52], rbx>

1660:
old  <string_2504d#:>
new  < strftime$5:>

1661:
old  <	; Initializer String %04d>
new  <	; Equal 9 localeConvPtr 0>

1662:
old  <	db "%04d", 0>
new  <	cmp qword [rbp + 52], 0>

1663:
old  <>
new  <	je strftime$9>

1664:
old  <section .data>
new  <>

1665:
old  <>
new  < strftime$6:>

1666:
old  <string_25#:>
new  <	; Dereference Â£temporary2277 -> localeConvPtr localeConvPtr 0>

1667:
old  <	; Initializer String %>
new  <	mov rsi, [rbp + 52]>

1668:
old  <	db "%", 0>
new  <>

1669:
old  <>
new  < strftime$7:>

1670:
old  <section .data>
new  <	; Assign Â£temporary2278 Â£temporary2277 -> localeConvPtr>

1671:
old  <>
new  <	mov rax, [rsi + 8]>

1672:
old  <int4$12#:>
new  <>

1673:
old  <	; Initializer SignedInt 12>
new  < strftime$8:>

1674:
old  <	dd 12>
new  <	; Goto 10>

1675:
old  <>
new  <	jmp strftime$10>

1676:
old  <section .text>
new  <>

1677:
old  <>
new  < strftime$9:>

1678:
old  < strftime:>
new  <	; Assign Â£temporary2278 0>

1679:
old  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov rax, 0>

1681:
old  < strftime$1:>
new  < strftime$10:>

1682:
old  <	; Call localeconv 52 0>
new  <	; Assign shortDayList Â£temporary2278>

1683:
old  <	mov qword [rbp + 52], strftime$2>
new  <	mov [rbp + 60], rax>

1684:
old  <	mov [rbp + 60], rbp>
new  <>

1685:
old  <	add rbp, 52>
new  < strftime$11:>

1686:
old  <	jmp localeconv>
new  <	; Equal 15 localeConvPtr 0>

1687:
old  <>
new  <	cmp qword [rbp + 52], 0>

1688:
old  < strftime$2:>
new  <	je strftime$15>

1689:
old  <	; PostCall 52>
new  <>

1690:
old  <>
new  < strftime$12:>

1691:
old  < strftime$3:>
new  <	; Dereference Â£temporary2280 -> localeConvPtr localeConvPtr 0>

1692:
old  <	; GetReturnValue Â£temporary2272>
new  <	mov rsi, [rbp + 52]>

1694:
old  < strftime$4:>
new  < strftime$13:>

1695:
old  <	; Assign localeConvPtr Â£temporary2272>
new  <	; Assign Â£temporary2281 Â£temporary2280 -> localeConvPtr>

1696:
old  <	mov [rbp + 52], rbx>
new  <	mov rax, [rsi + 24]>

1698:
old  < strftime$5:>
new  < strftime$14:>

1699:
old  <	; Equal 9 localeConvPtr 0>
new  <	; Goto 16>

1700:
old  <	cmp qword [rbp + 52], 0>
new  <	jmp strftime$16>

1701:
old  <	je strftime$9>
new  <>

1702:
old  <>
new  < strftime$15:>

1703:
old  < strftime$6:>
new  <	; Assign Â£temporary2281 0>

1704:
old  <	; Dereference Â£temporary2274 -> localeConvPtr localeConvPtr 0>
new  <	mov rax, 0>

1705:
old  <	mov rsi, [rbp + 52]>
new  <>

1706:
old  <>
new  < strftime$16:>

1707:
old  < strftime$7:>
new  <	; Assign shortMonthList Â£temporary2281>

1708:
old  <	; Assign Â£temporary2275 Â£temporary2274 -> localeConvPtr>
new  <	mov [rbp + 68], rax>

1709:
old  <	mov rax, [rsi + 8]>
new  <>

1710:
old  <>
new  < strftime$17:>

1711:
old  < strftime$8:>
new  <	; Equal 21 localeConvPtr 0>

1712:
old  <	; Goto 10>
new  <	cmp qword [rbp + 52], 0>

1713:
old  <	jmp strftime$10>
new  <	je strftime$21>

1715:
old  < strftime$9:>
new  < strftime$18:>

1716:
old  <	; Assign Â£temporary2275 0>
new  <	; Dereference Â£temporary2283 -> localeConvPtr localeConvPtr 0>

1717:
old  <	mov rax, 0>
new  <	mov rsi, [rbp + 52]>

1719:
old  < strftime$10:>
new  < strftime$19:>

1720:
old  <	; Assign shortDayList Â£temporary2275>
new  <	; Assign Â£temporary2284 Â£temporary2283 -> localeConvPtr>

1721:
old  <	mov [rbp + 60], rax>
new  <	mov rax, [rsi + 16]>

1723:
old  < strftime$11:>
new  < strftime$20:>

1724:
old  <	; Equal 15 localeConvPtr 0>
new  <	; Goto 22>

1725:
old  <	cmp qword [rbp + 52], 0>
new  <	jmp strftime$22>

1726:
old  <	je strftime$15>
new  <>

1727:
old  <>
new  < strftime$21:>

1728:
old  < strftime$12:>
new  <	; Assign Â£temporary2284 0>

1729:
old  <	; Dereference Â£temporary2277 -> localeConvPtr localeConvPtr 0>
new  <	mov rax, 0>

1730:
old  <	mov rsi, [rbp + 52]>
new  <>

1731:
old  <>
new  < strftime$22:>

1732:
old  < strftime$13:>
new  <	; Assign longDayList Â£temporary2284>

1733:
old  <	; Assign Â£temporary2278 Â£temporary2277 -> localeConvPtr>
new  <	mov [rbp + 76], rax>

1734:
old  <	mov rax, [rsi + 24]>
new  <>

1735:
old  <>
new  < strftime$23:>

1736:
old  < strftime$14:>
new  <	; Equal 27 localeConvPtr 0>

1737:
old  <	; Goto 16>
new  <	cmp qword [rbp + 52], 0>

1738:
old  <	jmp strftime$16>
new  <	je strftime$27>

1740:
old  < strftime$15:>
new  < strftime$24:>

1741:
old  <	; Assign Â£temporary2278 0>
new  <	; Dereference Â£temporary2286 -> localeConvPtr localeConvPtr 0>

1742:
old  <	mov rax, 0>
new  <	mov rsi, [rbp + 52]>

1744:
old  < strftime$16:>
new  < strftime$25:>

1745:
old  <	; Assign shortMonthList Â£temporary2278>
new  <	; Assign Â£temporary2287 Â£temporary2286 -> localeConvPtr>

1746:
old  <	mov [rbp + 68], rax>
new  <	mov rax, [rsi + 32]>

1748:
old  < strftime$17:>
new  < strftime$26:>

1749:
old  <	; Equal 21 localeConvPtr 0>
new  <	; Goto 28>

1750:
old  <	cmp qword [rbp + 52], 0>
new  <	jmp strftime$28>

1751:
old  <	je strftime$21>
new  <>

1752:
old  <>
new  < strftime$27:>

1753:
old  < strftime$18:>
new  <	; Assign Â£temporary2287 0>

1754:
old  <	; Dereference Â£temporary2280 -> localeConvPtr localeConvPtr 0>
new  <	mov rax, 0>

1755:
old  <	mov rsi, [rbp + 52]>
new  <>

1756:
old  <>
new  < strftime$28:>

1757:
old  < strftime$19:>
new  <	; Assign longMonthList Â£temporary2287>

1758:
old  <	; Assign Â£temporary2281 Â£temporary2280 -> localeConvPtr>
new  <	mov [rbp + 84], rax>

1759:
old  <	mov rax, [rsi + 16]>
new  <>

1760:
old  <>
new  < strftime$29:>

1761:
old  < strftime$20:>
new  <	; PreCall 92 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1762:
old  <	; Goto 22>
new  <>

1763:
old  <	jmp strftime$22>
new  < strftime$30:>

1764:
old  <>
new  <	; Parameter pointer s 116>

1765:
old  < strftime$21:>
new  <	mov rax, [rbp + 24]>

1766:
old  <	; Assign Â£temporary2281 0>
new  <	mov [rbp + 116], rax>

1767:
old  <	mov rax, 0>
new  <>

1768:
old  <>
new  < strftime$31:>

1769:
old  < strftime$22:>
new  <	; Parameter pointer "" 124>

1770:
old  <	; Assign longDayList Â£temporary2281>
new  <	mov qword [rbp + 124], string_#>

1771:
old  <	mov [rbp + 76], rax>
new  <>

1772:
old  <>
new  < strftime$32:>

1773:
old  < strftime$23:>
new  <	; Call strcpy 92 0>

1774:
old  <	; Equal 27 localeConvPtr 0>
new  <	mov qword [rbp + 92], strftime$33>

1775:
old  <	cmp qword [rbp + 52], 0>
new  <	mov [rbp + 100], rbp>

1776:
old  <	je strftime$27>
new  <	add rbp, 92>

1777:
old  <>
new  <	jmp strcpy>

1778:
old  < strftime$24:>
new  <>

1779:
old  <	; Dereference Â£temporary2283 -> localeConvPtr localeConvPtr 0>
new  < strftime$33:>

1780:
old  <	mov rsi, [rbp + 52]>
new  <	; PostCall 92>

1782:
old  < strftime$25:>
new  < strftime$34:>

1783:
old  <	; Assign Â£temporary2284 Â£temporary2283 -> localeConvPtr>
new  <	; Equal 37 shortDayList 0>

1784:
old  <	mov rax, [rsi + 32]>
new  <	cmp qword [rbp + 60], 0>

1785:
old  <>
new  <	je strftime$37>

1786:
old  < strftime$26:>
new  <>

1787:
old  <	; Goto 28>
new  < strftime$35:>

1788:
old  <	jmp strftime$28>
new  <	; Assign Â£temporary2290 shortDayList>

1789:
old  <>
new  <	mov rax, [rbp + 60]>

1790:
old  < strftime$27:>
new  <>

1791:
old  <	; Assign Â£temporary2284 0>
new  < strftime$36:>

1792:
old  <	mov rax, 0>
new  <	; Goto 38>

1793:
old  <>
new  <	jmp strftime$38>

1794:
old  < strftime$28:>
new  <>

1795:
old  <	; Assign longMonthList Â£temporary2284>
new  < strftime$37:>

1796:
old  <	mov [rbp + 84], rax>
new  <	; Assign Â£temporary2290 g_defaultShortDayList>

1797:
old  <>
new  <	mov rax, @4325$g_defaultShortDayList>

1798:
old  < strftime$29:>
new  <>

1799:
old  <	; PreCall 92 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < strftime$38:>

1800:
old  <>
new  <	; Assign shortDayList Â£temporary2290>

1801:
old  < strftime$30:>
new  <	mov [rbp + 60], rax>

1802:
old  <	; Parameter pointer s 116>
new  <>

1803:
old  <	mov rax, [rbp + 24]>
new  < strftime$39:>

1804:
old  <	mov [rbp + 116], rax>
new  <	; Equal 42 longDayList 0>

1805:
old  <>
new  <	cmp qword [rbp + 76], 0>

1806:
old  < strftime$31:>
new  <	je strftime$42>

1807:
old  <	; Parameter pointer "" 124>
new  <>

1808:
old  <	mov qword [rbp + 124], string_#>
new  < strftime$40:>

1809:
old  <>
new  <	; Assign Â£temporary2292 longDayList>

1810:
old  < strftime$32:>
new  <	mov rax, [rbp + 76]>

1811:
old  <	; Call strcpy 92 0>
new  <>

1812:
old  <	mov qword [rbp + 92], strftime$33>
new  < strftime$41:>

1813:
old  <	mov [rbp + 100], rbp>
new  <	; Goto 43>

1814:
old  <	add rbp, 92>
new  <	jmp strftime$43>

1815:
old  <	jmp strcpy>
new  <>

1816:
old  <>
new  < strftime$42:>

1817:
old  < strftime$33:>
new  <	; Assign Â£temporary2292 g_defaultLongDayList>

1818:
old  <	; PostCall 92>
new  <	mov rax, @4326$g_defaultLongDayList>

1820:
old  < strftime$34:>
new  < strftime$43:>

1821:
old  <	; Equal 37 shortDayList 0>
new  <	; Assign longDayList Â£temporary2292>

1822:
old  <	cmp qword [rbp + 60], 0>
new  <	mov [rbp + 76], rax>

1823:
old  <	je strftime$37>
new  <>

1824:
old  <>
new  < strftime$44:>

1825:
old  < strftime$35:>
new  <	; Equal 47 shortMonthList 0>

1826:
old  <	; Assign Â£temporary2287 shortDayList>
new  <	cmp qword [rbp + 68], 0>

1827:
old  <	mov rax, [rbp + 60]>
new  <	je strftime$47>

1829:
old  < strftime$36:>
new  < strftime$45:>

1830:
old  <	; Goto 38>
new  <	; Assign Â£temporary2294 shortMonthList>

1831:
old  <	jmp strftime$38>
new  <	mov rax, [rbp + 68]>

1833:
old  < strftime$37:>
new  < strftime$46:>

1834:
old  <	; Assign Â£temporary2287 g_defaultShortDayList>
new  <	; Goto 48>

1835:
old  <	mov rax, @4697$g_defaultShortDayList>
new  <	jmp strftime$48>

1837:
old  < strftime$38:>
new  < strftime$47:>

1838:
old  <	; Assign shortDayList Â£temporary2287>
new  <	; Assign Â£temporary2294 g_defaultShortMonthList>

1839:
old  <	mov [rbp + 60], rax>
new  <	mov rax, @4327$g_defaultShortMonthList>

1841:
old  < strftime$39:>
new  < strftime$48:>

1842:
old  <	; Equal 42 longDayList 0>
new  <	; Assign shortMonthList Â£temporary2294>

1843:
old  <	cmp qword [rbp + 76], 0>
new  <	mov [rbp + 68], rax>

1844:
old  <	je strftime$42>
new  <>

1845:
old  <>
new  < strftime$49:>

1846:
old  < strftime$40:>
new  <	; Equal 52 longMonthList 0>

1847:
old  <	; Assign Â£temporary2289 longDayList>
new  <	cmp qword [rbp + 84], 0>

1848:
old  <	mov rax, [rbp + 76]>
new  <	je strftime$52>

1850:
old  < strftime$41:>
new  < strftime$50:>

1851:
old  <	; Goto 43>
new  <	; Assign Â£temporary2296 longMonthList>

1852:
old  <	jmp strftime$43>
new  <	mov rax, [rbp + 84]>

1854:
old  < strftime$42:>
new  < strftime$51:>

1855:
old  <	; Assign Â£temporary2289 g_defaultLongDayList>
new  <	; Goto 53>

1856:
old  <	mov rax, @4698$g_defaultLongDayList>
new  <	jmp strftime$53>

1858:
old  < strftime$43:>
new  < strftime$52:>

1859:
old  <	; Assign longDayList Â£temporary2289>
new  <	; Assign Â£temporary2296 g_defaultLongMonthList>

1860:
old  <	mov [rbp + 76], rax>
new  <	mov rax, @4328$g_defaultLongMonthList>

1862:
old  < strftime$44:>
new  < strftime$53:>

1863:
old  <	; Equal 47 shortMonthList 0>
new  <	; Assign longMonthList Â£temporary2296>

1864:
old  <	cmp qword [rbp + 68], 0>
new  <	mov [rbp + 84], rax>

1865:
old  <	je strftime$47>
new  <>

1866:
old  <>
new  < strftime$54:>

1867:
old  < strftime$45:>
new  <	; Dereference Â£temporary2297 -> tp tp 0>

1868:
old  <	; Assign Â£temporary2291 shortMonthList>
new  <	mov rsi, [rbp + 44]>

1869:
old  <	mov rax, [rbp + 68]>
new  <>

1870:
old  <>
new  < strftime$55:>

1871:
old  < strftime$46:>
new  <	; BinarySubtract Â£temporary2298 Â£temporary2297 -> tp 69>

1872:
old  <	; Goto 48>
new  <	mov eax, [rsi + 20]>

1873:
old  <	jmp strftime$48>
new  <	sub eax, 69>

1875:
old  < strftime$47:>
new  < strftime$56:>

1876:
old  <	; Assign Â£temporary2291 g_defaultShortMonthList>
new  <	; SignedDivide leapDays Â£temporary2298 4>

1877:
old  <	mov rax, @4699$g_defaultShortMonthList>
new  <	xor edx, edx>

1878:
old  <>
new  <	idiv dword [int4$4#]>

1879:
old  < strftime$48:>
new  <	mov [rbp + 92], eax>

1880:
old  <	; Assign shortMonthList Â£temporary2291>
new  <>

1881:
old  <	mov [rbp + 68], rax>
new  < strftime$57:>

1882:
old  <>
new  <	; Dereference Â£temporary2300 -> tp tp 0>

1883:
old  < strftime$49:>
new  <	mov rsi, [rbp + 44]>

1884:
old  <	; Equal 52 longMonthList 0>
new  <>

1885:
old  <	cmp qword [rbp + 84], 0>
new  < strftime$58:>

1886:
old  <	je strftime$52>
new  <	; BinarySubtract Â£temporary2301 Â£temporary2300 -> tp 70>

1887:
old  <>
new  <	mov eax, [rsi + 20]>

1888:
old  < strftime$50:>
new  <	sub eax, 70>

1889:
old  <	; Assign Â£temporary2293 longMonthList>
new  <>

1890:
old  <	mov rax, [rbp + 84]>
new  < strftime$59:>

1891:
old  <>
new  <	; SignedMultiply Â£temporary2302 Â£temporary2301 365>

1892:
old  < strftime$51:>
new  <	xor edx, edx>

1893:
old  <	; Goto 53>
new  <	imul dword [int4$365#]>

1894:
old  <	jmp strftime$53>
new  <>

1895:
old  <>
new  < strftime$60:>

1896:
old  < strftime$52:>
new  <	; BinaryAdd Â£temporary2303 Â£temporary2302 leapDays>

1897:
old  <	; Assign Â£temporary2293 g_defaultLongMonthList>
new  <	add eax, [rbp + 92]>

1898:
old  <	mov rax, @4700$g_defaultLongMonthList>
new  <>

1899:
old  <>
new  < strftime$61:>

1900:
old  < strftime$53:>
new  <	; Dereference Â£temporary2304 -> tp tp 0>

1901:
old  <	; Assign longMonthList Â£temporary2293>
new  <	mov rsi, [rbp + 44]>

1902:
old  <	mov [rbp + 84], rax>
new  <>

1903:
old  <>
new  < strftime$62:>

1904:
old  < strftime$54:>
new  <	; BinaryAdd Â£temporary2305 Â£temporary2303 Â£temporary2304 -> tp>

1905:
old  <	; Dereference Â£temporary2294 -> tp tp 0>
new  <	add eax, [rsi + 28]>

1906:
old  <	mov rsi, [rbp + 44]>
new  <>

1907:
old  <>
new  < strftime$63:>

1908:
old  < strftime$55:>
new  <	; IntegralToIntegral Â£temporary2306 Â£temporary2305>

1909:
old  <	; BinarySubtract Â£temporary2295 Â£temporary2294 -> tp 69>
new  <	mov rbx, 4294967295>

1910:
old  <	mov eax, [rsi + 20]>
new  <	and rax, rbx>

1911:
old  <	sub eax, 69>
new  <	cmp eax, 0>

1912:
old  <>
new  <	jge strftime$64>

1913:
old  < strftime$56:>
new  <	neg eax>

1914:
old  <	; SignedDivide leapDays Â£temporary2295 4>
new  <	neg rax>

1915:
old  <	xor edx, edx>
new  <>

1916:
old  <	idiv dword [int4$4#]>
new  < strftime$64:>

1917:
old  <	mov [rbp + 92], eax>
new  <	; Assign totalDays Â£temporary2306>

1918:
old  <>
new  <	mov [rbp + 96], rax>

1919:
old  < strftime$57:>
new  <>

1920:
old  <	; Dereference Â£temporary2297 -> tp tp 0>
new  < strftime$65:>

1921:
old  <	mov rsi, [rbp + 44]>
new  <	; SignedGreaterThanEqual 70 totalDays 3>

1922:
old  <>
new  <	cmp qword [rbp + 96], 3>

1923:
old  < strftime$58:>
new  <	jge strftime$70>

1924:
old  <	; BinarySubtract Â£temporary2298 Â£temporary2297 -> tp 70>
new  <>

1925:
old  <	mov eax, [rsi + 20]>
new  < strftime$66:>

1926:
old  <	sub eax, 70>
new  <	; BinaryAdd Â£temporary2308 totalDays 4>

1927:
old  <>
new  <	mov rax, [rbp + 96]>

1928:
old  < strftime$59:>
new  <	add rax, 4>

1929:
old  <	; SignedMultiply Â£temporary2299 Â£temporary2298 365>
new  <>

1930:
old  <	xor edx, edx>
new  < strftime$67:>

1931:
old  <	imul dword [int4$365#]>
new  <	; IntegralToIntegral Â£temporary2309 Â£temporary2308>

1932:
old  <>
new  <	cmp rax, 0>

1933:
old  < strftime$60:>
new  <	jge strftime$68>

1934:
old  <	; BinaryAdd Â£temporary2300 Â£temporary2299 leapDays>
new  <	neg rax>

1935:
old  <	add eax, [rbp + 92]>
new  <	neg eax>

1937:
old  < strftime$61:>
new  < strftime$68:>

1938:
old  <	; Dereference Â£temporary2301 -> tp tp 0>
new  <	; Assign yearDaySunday Â£temporary2309>

1939:
old  <	mov rsi, [rbp + 44]>
new  <	mov [rbp + 104], eax>

1941:
old  < strftime$62:>
new  < strftime$69:>

1942:
old  <	; BinaryAdd Â£temporary2302 Â£temporary2300 Â£temporary2301 -> tp>
new  <	; Goto 74>

1943:
old  <	add eax, [rsi + 28]>
new  <	jmp strftime$74>

1945:
old  < strftime$63:>
new  < strftime$70:>

1946:
old  <	; IntegralToIntegral Â£temporary2303 Â£temporary2302>
new  <	; BinarySubtract Â£temporary2310 totalDays 3>

1947:
old  <	mov rbx, 4294967295>
new  <	mov rax, [rbp + 96]>

1948:
old  <	and rax, rbx>
new  <	sub rax, 3>

1949:
old  <	cmp eax, 0>
new  <>

1950:
old  <	jge strftime$64>
new  < strftime$71:>

1951:
old  <	neg eax>
new  <	; SignedModulo Â£temporary2311 Â£temporary2310 7>

1952:
old  <	neg rax>
new  <	xor rdx, rdx>

1953:
old  <>
new  <	idiv qword [int8$7#]>

1954:
old  < strftime$64:>
new  <>

1955:
old  <	; Assign totalDays Â£temporary2303>
new  < strftime$72:>

1956:
old  <	mov [rbp + 96], rax>
new  <	; IntegralToIntegral Â£temporary2312 Â£temporary2311>

1957:
old  <>
new  <	cmp rdx, 0>

1958:
old  < strftime$65:>
new  <	jge strftime$73>

1959:
old  <	; PreCall 104 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	neg rdx>

1960:
old  <>
new  <	neg edx>

1961:
old  < strftime$66:>
new  <>

1962:
old  <	; Parameter pointer "leap days %i, total days %lu\n" 128>
new  < strftime$73:>

1963:
old  <	mov qword [rbp + 128], string_leap20days2025i2C20total20days2025lu0A#>
new  <	; Assign yearDaySunday Â£temporary2312>

1964:
old  <>
new  <	mov [rbp + 104], edx>

1965:
old  < strftime$67:>
new  <>

1966:
old  <	; Parameter signedint leapDays 136>
new  < strftime$74:>

1967:
old  <	mov eax, [rbp + 92]>
new  <	; SignedGreaterThanEqual 79 totalDays 4>

1968:
old  <	mov [rbp + 136], eax>
new  <	cmp qword [rbp + 96], 4>

1969:
old  <>
new  <	jge strftime$79>

1970:
old  < strftime$68:>
new  <>

1971:
old  <	; Parameter signed long int totalDays 140>
new  < strftime$75:>

1972:
old  <	mov rax, [rbp + 96]>
new  <	; BinaryAdd Â£temporary2314 totalDays 3>

1973:
old  <	mov [rbp + 140], rax>
new  <	mov rax, [rbp + 96]>

1974:
old  <>
new  <	add rax, 3>

1975:
old  < strftime$69:>
new  <>

1976:
old  <	; Call printf 104 12>
new  < strftime$76:>

1977:
old  <	mov qword [rbp + 104], strftime$70>
new  <	; IntegralToIntegral Â£temporary2315 Â£temporary2314>

1978:
old  <	mov [rbp + 112], rbp>
new  <	cmp rax, 0>

1979:
old  <	add rbp, 104>
new  <	jge strftime$77>

1980:
old  <	mov rdi, rbp>
new  <	neg rax>

1981:
old  <	add rdi, 12>
new  <	neg eax>

1982:
old  <	jmp printf>
new  <>

1983:
old  <>
new  < strftime$77:>

1984:
old  < strftime$70:>
new  <	; Assign yearDayMonday Â£temporary2315>

1985:
old  <	; PostCall 104>
new  <	mov [rbp + 108], eax>

1987:
old  < strftime$71:>
new  < strftime$78:>

1988:
old  <	; SignedGreaterThanEqual 76 totalDays 3>
new  <	; Goto 83>

1989:
old  <	cmp qword [rbp + 96], 3>
new  <	jmp strftime$83>

1990:
old  <	jge strftime$76>
new  <>

1991:
old  <>
new  < strftime$79:>

1992:
old  < strftime$72:>
new  <	; BinarySubtract Â£temporary2316 totalDays 4>

1993:
old  <	; BinaryAdd Â£temporary2306 totalDays 4>
new  <	mov rax, [rbp + 96]>

1994:
old  <	mov rax, [rbp + 96]>
new  <	sub rax, 4>

1995:
old  <	add rax, 4>
new  <>

1996:
old  <>
new  < strftime$80:>

1997:
old  < strftime$73:>
new  <	; SignedModulo Â£temporary2317 Â£temporary2316 7>

1998:
old  <	; IntegralToIntegral Â£temporary2307 Â£temporary2306>
new  <	xor rdx, rdx>

1999:
old  <	cmp rax, 0>
new  <	idiv qword [int8$7#]>

2000:
old  <	jge strftime$74>
new  <>

2001:
old  <	neg rax>
new  < strftime$81:>

2002:
old  <	neg eax>
new  <	; IntegralToIntegral Â£temporary2318 Â£temporary2317>

2003:
old  <>
new  <	cmp rdx, 0>

2004:
old  < strftime$74:>
new  <	jge strftime$82>

2005:
old  <	; Assign yearDaySunday Â£temporary2307>
new  <	neg rdx>

2006:
old  <	mov [rbp + 104], eax>
new  <	neg edx>

2008:
old  < strftime$75:>
new  < strftime$82:>

2009:
old  <	; Goto 80>
new  <	; Assign yearDayMonday Â£temporary2318>

2010:
old  <	jmp strftime$80>
new  <	mov [rbp + 108], edx>

2012:
old  < strftime$76:>
new  < strftime$83:>

2013:
old  <	; BinarySubtract Â£temporary2308 totalDays 3>
new  <	; Assign index 0>

2014:
old  <	mov rax, [rbp + 96]>
new  <	mov dword [rbp + 112], 0>

2015:
old  <	sub rax, 3>
new  <>

2016:
old  <>
new  < strftime$84:>

2017:
old  < strftime$77:>
new  <	; IntegralToIntegral Â£temporary2320 index>

2018:
old  <	; SignedModulo Â£temporary2309 Â£temporary2308 7>
new  <	mov eax, [rbp + 112]>

2019:
old  <	xor rdx, rdx>
new  <	mov rbx, 4294967295>

2020:
old  <	idiv qword [int8$7#]>
new  <	and rax, rbx>

2022:
old  < strftime$78:>
new  < strftime$85:>

2023:
old  <	; IntegralToIntegral Â£temporary2310 Â£temporary2309>
new  <	; BinaryAdd Â£temporary2322 fmt Â£temporary2320>

2024:
old  <	cmp rdx, 0>
new  <	mov rsi, [rbp + 36]>

2025:
old  <	jge strftime$79>
new  <	add rsi, rax>

2026:
old  <	neg rdx>
new  <>

2027:
old  <	neg edx>
new  < strftime$86:>

2028:
old  <>
new  <	; Dereference Â£temporary2319 -> Â£temporary2322 Â£temporary2322 0>

2029:
old  < strftime$79:>
new  <>

2030:
old  <	; Assign yearDaySunday Â£temporary2310>
new  < strftime$87:>

2031:
old  <	mov [rbp + 104], edx>
new  <	; Equal 358 Â£temporary2319 -> Â£temporary2322 0>

2032:
old  <>
new  <	cmp byte [rsi], 0>

2033:
old  < strftime$80:>
new  <	je strftime$358>

2034:
old  <	; PreCall 112 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

2035:
old  <>
new  < strftime$88:>

2036:
old  < strftime$81:>
new  <	; IntegralToIntegral Â£temporary2326 index>

2037:
old  <	; Parameter pointer "yearDaySunday %i\n" 136>
new  <	mov eax, [rbp + 112]>

2038:
old  <	mov qword [rbp + 136], string_yearDaySunday2025i0A#>
new  <	mov rbx, 4294967295>

2039:
old  <>
new  <	and rax, rbx>

2040:
old  < strftime$82:>
new  <>

2041:
old  <	; Parameter signedint yearDaySunday 144>
new  < strftime$89:>

2042:
old  <	mov eax, [rbp + 104]>
new  <	; BinaryAdd Â£temporary2328 fmt Â£temporary2326>

2043:
old  <	mov [rbp + 144], eax>
new  <	mov rsi, [rbp + 36]>

2044:
old  <>
new  <	add rsi, rax>

2045:
old  < strftime$83:>
new  <>

2046:
old  <	; Call printf 112 4>
new  < strftime$90:>

2047:
old  <	mov qword [rbp + 112], strftime$84>
new  <	; Dereference Â£temporary2325 -> Â£temporary2328 Â£temporary2328 0>

2048:
old  <	mov [rbp + 120], rbp>
new  <>

2049:
old  <	add rbp, 112>
new  < strftime$91:>

2050:
old  <	mov rdi, rbp>
new  <	; NotEqual 332 Â£temporary2325 -> Â£temporary2328 37>

2051:
old  <	add rdi, 4>
new  <	cmp byte [rsi], 37>

2052:
old  <	jmp printf>
new  <	jne strftime$332>

2054:
old  < strftime$84:>
new  < strftime$92:>

2055:
old  <	; PostCall 112>
new  <	; BinaryAdd Â£temporary2330 index 1>

2056:
old  <>
new  <	mov eax, [rbp + 112]>

2057:
old  < strftime$85:>
new  <	inc eax>

2058:
old  <	; SignedGreaterThanEqual 90 totalDays 4>
new  <>

2059:
old  <	cmp qword [rbp + 96], 4>
new  < strftime$93:>

2060:
old  <	jge strftime$90>
new  <	; IntegralToIntegral Â£temporary2332 Â£temporary2330>

2061:
old  <>
new  <	mov rbx, 4294967295>

2062:
old  < strftime$86:>
new  <	and rax, rbx>

2063:
old  <	; BinaryAdd Â£temporary2313 totalDays 3>
new  <>

2064:
old  <	mov rax, [rbp + 96]>
new  < strftime$94:>

2065:
old  <	add rax, 3>
new  <	; BinaryAdd Â£temporary2334 fmt Â£temporary2332>

2066:
old  <>
new  <	mov rsi, [rbp + 36]>

2067:
old  < strftime$87:>
new  <	add rsi, rax>

2068:
old  <	; IntegralToIntegral Â£temporary2314 Â£temporary2313>
new  <>

2069:
old  <	cmp rax, 0>
new  < strftime$95:>

2070:
old  <	jge strftime$88>
new  <	; Dereference Â£temporary2331 -> Â£temporary2334 Â£temporary2334 0>

2071:
old  <	neg rax>
new  <>

2072:
old  <	neg eax>
new  < strftime$96:>

2073:
old  <>
new  <	; Case 120 Â£temporary2331 -> Â£temporary2334 97>

2074:
old  < strftime$88:>
new  <	mov al, [rsi]>

2075:
old  <	; Assign yearDayMonday Â£temporary2314>
new  <	cmp al, 97>

2076:
old  <	mov [rbp + 108], eax>
new  <	je strftime$120>

2078:
old  < strftime$89:>
new  < strftime$97:>

2079:
old  <	; Goto 94>
new  <	; Case 131 Â£temporary2331 -> Â£temporary2334 65>

2080:
old  <	jmp strftime$94>
new  <	cmp al, 65>

2081:
old  <>
new  <	je strftime$131>

2082:
old  < strftime$90:>
new  <>

2083:
old  <	; BinarySubtract Â£temporary2315 totalDays 4>
new  < strftime$98:>

2084:
old  <	mov rax, [rbp + 96]>
new  <	; Case 142 Â£temporary2331 -> Â£temporary2334 98>

2085:
old  <	sub rax, 4>
new  <	cmp al, 98>

2086:
old  <>
new  <	je strftime$142>

2087:
old  < strftime$91:>
new  <>

2088:
old  <	; SignedModulo Â£temporary2316 Â£temporary2315 7>
new  < strftime$99:>

2089:
old  <	xor rdx, rdx>
new  <	; Case 153 Â£temporary2331 -> Â£temporary2334 66>

2090:
old  <	idiv qword [int8$7#]>
new  <	cmp al, 66>

2091:
old  <>
new  <	je strftime$153>

2092:
old  < strftime$92:>
new  <>

2093:
old  <	; IntegralToIntegral Â£temporary2317 Â£temporary2316>
new  < strftime$100:>

2094:
old  <	cmp rdx, 0>
new  <	; Case 164 Â£temporary2331 -> Â£temporary2334 99>

2095:
old  <	jge strftime$93>
new  <	cmp al, 99>

2096:
old  <	neg rdx>
new  <	je strftime$164>

2097:
old  <	neg edx>
new  <>

2098:
old  <>
new  < strftime$101:>

2099:
old  < strftime$93:>
new  <	; Case 184 Â£temporary2331 -> Â£temporary2334 100>

2100:
old  <	; Assign yearDayMonday Â£temporary2317>
new  <	cmp al, 100>

2101:
old  <	mov [rbp + 108], edx>
new  <	je strftime$184>

2103:
old  < strftime$94:>
new  < strftime$102:>

2104:
old  <	; PreCall 112 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Case 192 Â£temporary2331 -> Â£temporary2334 72>

2105:
old  <>
new  <	cmp al, 72>

2106:
old  < strftime$95:>
new  <	je strftime$192>

2107:
old  <	; Parameter pointer "yearDayMonday %i\n" 136>
new  <>

2108:
old  <	mov qword [rbp + 136], string_yearDayMonday2025i0A#>
new  < strftime$103:>

2109:
old  <>
new  <	; Case 200 Â£temporary2331 -> Â£temporary2334 73>

2110:
old  < strftime$96:>
new  <	cmp al, 73>

2111:
old  <	; Parameter signedint yearDayMonday 144>
new  <	je strftime$200>

2112:
old  <	mov eax, [rbp + 108]>
new  <>

2113:
old  <	mov [rbp + 144], eax>
new  < strftime$104:>

2114:
old  <>
new  <	; Case 209 Â£temporary2331 -> Â£temporary2334 106>

2115:
old  < strftime$97:>
new  <	cmp al, 106>

2116:
old  <	; Call printf 112 4>
new  <	je strftime$209>

2117:
old  <	mov qword [rbp + 112], strftime$98>
new  <>

2118:
old  <	mov [rbp + 120], rbp>
new  < strftime$105:>

2119:
old  <	add rbp, 112>
new  <	; Case 217 Â£temporary2331 -> Â£temporary2334 109>

2120:
old  <	mov rdi, rbp>
new  <	cmp al, 109>

2121:
old  <	add rdi, 4>
new  <	je strftime$217>

2122:
old  <	jmp printf>
new  <>

2123:
old  <>
new  < strftime$106:>

2124:
old  < strftime$98:>
new  <	; Case 226 Â£temporary2331 -> Â£temporary2334 77>

2125:
old  <	; PostCall 112>
new  <	cmp al, 77>

2126:
old  <>
new  <	je strftime$226>

2127:
old  < strftime$99:>
new  <>

2128:
old  <	; Assign index 0>
new  < strftime$107:>

2129:
old  <	mov dword [rbp + 112], 0>
new  <	; Case 234 Â£temporary2331 -> Â£temporary2334 112>

2130:
old  <>
new  <	cmp al, 112>

2131:
old  < strftime$100:>
new  <	je strftime$234>

2132:
old  <	; IntegralToIntegral Â£temporary2320 index>
new  <>

2133:
old  <	mov eax, [rbp + 112]>
new  < strftime$108:>

2134:
old  <	mov rbx, 4294967295>
new  <	; Case 246 Â£temporary2331 -> Â£temporary2334 83>

2135:
old  <	and rax, rbx>
new  <	cmp al, 83>

2136:
old  <>
new  <	je strftime$246>

2137:
old  < strftime$101:>
new  <>

2138:
old  <	; BinaryAdd Â£temporary2322 fmt Â£temporary2320>
new  < strftime$109:>

2139:
old  <	mov rsi, [rbp + 36]>
new  <	; Case 254 Â£temporary2331 -> Â£temporary2334 85>

2140:
old  <	add rsi, rax>
new  <	cmp al, 85>

2141:
old  <>
new  <	je strftime$254>

2142:
old  < strftime$102:>
new  <>

2143:
old  <	; Dereference Â£temporary2319 -> Â£temporary2322 Â£temporary2322 0>
new  < strftime$110:>

2144:
old  <>
new  <	; Case 261 Â£temporary2331 -> Â£temporary2334 119>

2145:
old  < strftime$103:>
new  <	cmp al, 119>

2146:
old  <	; Equal 374 Â£temporary2319 -> Â£temporary2322 0>
new  <	je strftime$261>

2147:
old  <	cmp byte [rsi], 0>
new  <>

2148:
old  <	je strftime$374>
new  < strftime$111:>

2149:
old  <>
new  <	; Case 269 Â£temporary2331 -> Â£temporary2334 87>

2150:
old  < strftime$104:>
new  <	cmp al, 87>

2151:
old  <	; IntegralToIntegral Â£temporary2326 index>
new  <	je strftime$269>

2152:
old  <	mov eax, [rbp + 112]>
new  <>

2153:
old  <	mov rbx, 4294967295>
new  < strftime$112:>

2154:
old  <	and rax, rbx>
new  <	; Case 276 Â£temporary2331 -> Â£temporary2334 120>

2155:
old  <>
new  <	cmp al, 120>

2156:
old  < strftime$105:>
new  <	je strftime$276>

2157:
old  <	; BinaryAdd Â£temporary2328 fmt Â£temporary2326>
new  <>

2158:
old  <	mov rsi, [rbp + 36]>
new  < strftime$113:>

2159:
old  <	add rsi, rax>
new  <	; Case 290 Â£temporary2331 -> Â£temporary2334 88>

2160:
old  <>
new  <	cmp al, 88>

2161:
old  < strftime$106:>
new  <	je strftime$290>

2162:
old  <	; Dereference Â£temporary2325 -> Â£temporary2328 Â£temporary2328 0>
new  <>

2163:
old  <>
new  < strftime$114:>

2164:
old  < strftime$107:>
new  <	; Case 302 Â£temporary2331 -> Â£temporary2334 121>

2165:
old  <	; NotEqual 348 Â£temporary2325 -> Â£temporary2328 37>
new  <	cmp al, 121>

2166:
old  <	cmp byte [rsi], 37>
new  <	je strftime$302>

2167:
old  <	jne strftime$348>
new  <>

2168:
old  <>
new  < strftime$115:>

2169:
old  < strftime$108:>
new  <	; Case 311 Â£temporary2331 -> Â£temporary2334 89>

2170:
old  <	; BinaryAdd Â£temporary2330 index 1>
new  <	cmp al, 89>

2171:
old  <	mov eax, [rbp + 112]>
new  <	je strftime$311>

2172:
old  <	inc eax>
new  <>

2173:
old  <>
new  < strftime$116:>

2174:
old  < strftime$109:>
new  <	; Case 320 Â£temporary2331 -> Â£temporary2334 90>

2175:
old  <	; IntegralToIntegral Â£temporary2332 Â£temporary2330>
new  <	cmp al, 90>

2176:
old  <	mov rbx, 4294967295>
new  <	je strftime$320>

2177:
old  <	and rax, rbx>
new  <>

2178:
old  <>
new  < strftime$117:>

2179:
old  < strftime$110:>
new  <	; Case 326 Â£temporary2331 -> Â£temporary2334 37>

2180:
old  <	; BinaryAdd Â£temporary2334 fmt Â£temporary2332>
new  <	cmp al, 37>

2181:
old  <	mov rsi, [rbp + 36]>
new  <	je strftime$326>

2182:
old  <	add rsi, rax>
new  <>

2183:
old  <>
new  < strftime$118:>

2184:
old  < strftime$111:>
new  <	; CaseEnd Â£temporary2331 -> Â£temporary2334>

2185:
old  <	; Dereference Â£temporary2331 -> Â£temporary2334 Â£temporary2334 0>
new  <>

2186:
old  <>
new  < strftime$119:>

2187:
old  < strftime$112:>
new  <	; Goto 339>

2188:
old  <	; Case 136 Â£temporary2331 -> Â£temporary2334 97>
new  <	jmp strftime$339>

2189:
old  <	mov al, [rsi]>
new  <>

2190:
old  <	cmp al, 97>
new  < strftime$120:>

2191:
old  <	je strftime$136>
new  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2193:
old  < strftime$113:>
new  < strftime$121:>

2194:
old  <	; Case 147 Â£temporary2331 -> Â£temporary2334 65>
new  <	; Parameter pointer add 160>

2195:
old  <	cmp al, 65>
new  <	mov [rbp + 160], rbp>

2196:
old  <	je strftime$147>
new  <	add qword [rbp + 160], 116>

2198:
old  < strftime$114:>
new  < strftime$122:>

2199:
old  <	; Case 158 Â£temporary2331 -> Â£temporary2334 98>
new  <	; Dereference Â£temporary2335 -> tp tp 0>

2200:
old  <	cmp al, 98>
new  <	mov rsi, [rbp + 44]>

2201:
old  <	je strftime$158>
new  <>

2202:
old  <>
new  < strftime$123:>

2203:
old  < strftime$115:>
new  <	; IntegralToIntegral Â£temporary2337 Â£temporary2335 -> tp>

2204:
old  <	; Case 169 Â£temporary2331 -> Â£temporary2334 66>
new  <	mov eax, [rsi + 24]>

2205:
old  <	cmp al, 66>
new  <	mov rbx, 4294967295>

2206:
old  <	je strftime$169>
new  <	and rax, rbx>

2208:
old  < strftime$116:>
new  < strftime$124:>

2209:
old  <	; Case 180 Â£temporary2331 -> Â£temporary2334 99>
new  <	; UnsignedMultiply Â£temporary2338 Â£temporary2337 8>

2210:
old  <	cmp al, 99>
new  <	xor rdx, rdx>

2211:
old  <	je strftime$180>
new  <	mul qword [int8$8#]>

2213:
old  < strftime$117:>
new  < strftime$125:>

2214:
old  <	; Case 200 Â£temporary2331 -> Â£temporary2334 100>
new  <	; BinaryAdd Â£temporary2339 shortDayList Â£temporary2338>

2215:
old  <	cmp al, 100>
new  <	mov rsi, [rbp + 60]>

2216:
old  <	je strftime$200>
new  <	add rsi, rax>

2218:
old  < strftime$118:>
new  < strftime$126:>

2219:
old  <	; Case 208 Â£temporary2331 -> Â£temporary2334 72>
new  <	; Dereference Â£temporary2336 -> Â£temporary2339 Â£temporary2339 0>

2220:
old  <	cmp al, 72>
new  <>

2221:
old  <	je strftime$208>
new  < strftime$127:>

2222:
old  <>
new  <	; Parameter pointer Â£temporary2336 -> Â£temporary2339 168>

2223:
old  < strftime$119:>
new  <	mov rax, [rsi]>

2224:
old  <	; Case 216 Â£temporary2331 -> Â£temporary2334 73>
new  <	mov [rbp + 168], rax>

2225:
old  <	cmp al, 73>
new  <>

2226:
old  <	je strftime$216>
new  < strftime$128:>

2227:
old  <>
new  <	; Call strcpy 136 0>

2228:
old  < strftime$120:>
new  <	mov qword [rbp + 136], strftime$129>

2229:
old  <	; Case 225 Â£temporary2331 -> Â£temporary2334 106>
new  <	mov [rbp + 144], rbp>

2230:
old  <	cmp al, 106>
new  <	add rbp, 136>

2231:
old  <	je strftime$225>
new  <	jmp strcpy>

2233:
old  < strftime$121:>
new  < strftime$129:>

2234:
old  <	; Case 233 Â£temporary2331 -> Â£temporary2334 109>
new  <	; PostCall 136>

2235:
old  <	cmp al, 109>
new  <>

2236:
old  <	je strftime$233>
new  < strftime$130:>

2237:
old  <>
new  <	; Goto 339>

2238:
old  < strftime$122:>
new  <	jmp strftime$339>

2239:
old  <	; Case 242 Â£temporary2331 -> Â£temporary2334 77>
new  <>

2240:
old  <	cmp al, 77>
new  < strftime$131:>

2241:
old  <	je strftime$242>
new  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2243:
old  < strftime$123:>
new  < strftime$132:>

2244:
old  <	; Case 250 Â£temporary2331 -> Â£temporary2334 112>
new  <	; Parameter pointer add 160>

2245:
old  <	cmp al, 112>
new  <	mov [rbp + 160], rbp>

2246:
old  <	je strftime$250>
new  <	add qword [rbp + 160], 116>

2248:
old  < strftime$124:>
new  < strftime$133:>

2249:
old  <	; Case 262 Â£temporary2331 -> Â£temporary2334 83>
new  <	; Dereference Â£temporary2341 -> tp tp 0>

2250:
old  <	cmp al, 83>
new  <	mov rsi, [rbp + 44]>

2251:
old  <	je strftime$262>
new  <>

2252:
old  <>
new  < strftime$134:>

2253:
old  < strftime$125:>
new  <	; IntegralToIntegral Â£temporary2343 Â£temporary2341 -> tp>

2254:
old  <	; Case 270 Â£temporary2331 -> Â£temporary2334 85>
new  <	mov eax, [rsi + 24]>

2255:
old  <	cmp al, 85>
new  <	mov rbx, 4294967295>

2256:
old  <	je strftime$270>
new  <	and rax, rbx>

2258:
old  < strftime$126:>
new  < strftime$135:>

2259:
old  <	; Case 277 Â£temporary2331 -> Â£temporary2334 119>
new  <	; UnsignedMultiply Â£temporary2344 Â£temporary2343 8>

2260:
old  <	cmp al, 119>
new  <	xor rdx, rdx>

2261:
old  <	je strftime$277>
new  <	mul qword [int8$8#]>

2263:
old  < strftime$127:>
new  < strftime$136:>

2264:
old  <	; Case 285 Â£temporary2331 -> Â£temporary2334 87>
new  <	; BinaryAdd Â£temporary2345 longDayList Â£temporary2344>

2265:
old  <	cmp al, 87>
new  <	mov rsi, [rbp + 76]>

2266:
old  <	je strftime$285>
new  <	add rsi, rax>

2268:
old  < strftime$128:>
new  < strftime$137:>

2269:
old  <	; Case 292 Â£temporary2331 -> Â£temporary2334 120>
new  <	; Dereference Â£temporary2342 -> Â£temporary2345 Â£temporary2345 0>

2270:
old  <	cmp al, 120>
new  <>

2271:
old  <	je strftime$292>
new  < strftime$138:>

2272:
old  <>
new  <	; Parameter pointer Â£temporary2342 -> Â£temporary2345 168>

2273:
old  < strftime$129:>
new  <	mov rax, [rsi]>

2274:
old  <	; Case 306 Â£temporary2331 -> Â£temporary2334 88>
new  <	mov [rbp + 168], rax>

2275:
old  <	cmp al, 88>
new  <>

2276:
old  <	je strftime$306>
new  < strftime$139:>

2277:
old  <>
new  <	; Call strcpy 136 0>

2278:
old  < strftime$130:>
new  <	mov qword [rbp + 136], strftime$140>

2279:
old  <	; Case 318 Â£temporary2331 -> Â£temporary2334 121>
new  <	mov [rbp + 144], rbp>

2280:
old  <	cmp al, 121>
new  <	add rbp, 136>

2281:
old  <	je strftime$318>
new  <	jmp strcpy>

2283:
old  < strftime$131:>
new  < strftime$140:>

2284:
old  <	; Case 327 Â£temporary2331 -> Â£temporary2334 89>
new  <	; PostCall 136>

2285:
old  <	cmp al, 89>
new  <>

2286:
old  <	je strftime$327>
new  < strftime$141:>

2287:
old  <>
new  <	; Goto 339>

2288:
old  < strftime$132:>
new  <	jmp strftime$339>

2289:
old  <	; Case 336 Â£temporary2331 -> Â£temporary2334 90>
new  <>

2290:
old  <	cmp al, 90>
new  < strftime$142:>

2291:
old  <	je strftime$336>
new  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2293:
old  < strftime$133:>
new  < strftime$143:>

2294:
old  <	; Case 342 Â£temporary2331 -> Â£temporary2334 37>
new  <	; Parameter pointer add 160>

2295:
old  <	cmp al, 37>
new  <	mov [rbp + 160], rbp>

2296:
old  <	je strftime$342>
new  <	add qword [rbp + 160], 116>

2298:
old  < strftime$134:>
new  < strftime$144:>

2299:
old  <	; CaseEnd Â£temporary2331 -> Â£temporary2334>
new  <	; Dereference Â£temporary2347 -> tp tp 0>

2300:
old  <>
new  <	mov rsi, [rbp + 44]>

2301:
old  < strftime$135:>
new  <>

2302:
old  <	; Goto 355>
new  < strftime$145:>

2303:
old  <	jmp strftime$355>
new  <	; IntegralToIntegral Â£temporary2349 Â£temporary2347 -> tp>

2304:
old  <>
new  <	mov eax, [rsi + 16]>

2305:
old  < strftime$136:>
new  <	mov rbx, 4294967295>

2306:
old  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	and rax, rbx>

2308:
old  < strftime$137:>
new  < strftime$146:>

2309:
old  <	; Parameter pointer add 160>
new  <	; UnsignedMultiply Â£temporary2350 Â£temporary2349 8>

2310:
old  <	mov [rbp + 160], rbp>
new  <	xor rdx, rdx>

2311:
old  <	add qword [rbp + 160], 116>
new  <	mul qword [int8$8#]>

2313:
old  < strftime$138:>
new  < strftime$147:>

2314:
old  <	; Dereference Â£temporary2335 -> tp tp 0>
new  <	; BinaryAdd Â£temporary2351 shortMonthList Â£temporary2350>

2315:
old  <	mov rsi, [rbp + 44]>
new  <	mov rsi, [rbp + 68]>

2316:
old  <>
new  <	add rsi, rax>

2317:
old  < strftime$139:>
new  <>

2318:
old  <	; IntegralToIntegral Â£temporary2337 Â£temporary2335 -> tp>
new  < strftime$148:>

2319:
old  <	mov eax, [rsi + 24]>
new  <	; Dereference Â£temporary2348 -> Â£temporary2351 Â£temporary2351 0>

2320:
old  <	mov rbx, 4294967295>
new  <>

2321:
old  <	and rax, rbx>
new  < strftime$149:>

2322:
old  <>
new  <	; Parameter pointer Â£temporary2348 -> Â£temporary2351 168>

2323:
old  < strftime$140:>
new  <	mov rax, [rsi]>

2324:
old  <	; UnsignedMultiply Â£temporary2338 Â£temporary2337 8>
new  <	mov [rbp + 168], rax>

2325:
old  <	xor rdx, rdx>
new  <>

2326:
old  <	mul qword [int8$8#]>
new  < strftime$150:>

2327:
old  <>
new  <	; Call strcpy 136 0>

2328:
old  < strftime$141:>
new  <	mov qword [rbp + 136], strftime$151>

2329:
old  <	; BinaryAdd Â£temporary2339 shortDayList Â£temporary2338>
new  <	mov [rbp + 144], rbp>

2330:
old  <	mov rsi, [rbp + 60]>
new  <	add rbp, 136>

2331:
old  <	add rsi, rax>
new  <	jmp strcpy>

2333:
old  < strftime$142:>
new  < strftime$151:>

2334:
old  <	; Dereference Â£temporary2336 -> Â£temporary2339 Â£temporary2339 0>
new  <	; PostCall 136>

2336:
old  < strftime$143:>
new  < strftime$152:>

2337:
old  <	; Parameter pointer Â£temporary2336 -> Â£temporary2339 168>
new  <	; Goto 339>

2338:
old  <	mov rax, [rsi]>
new  <	jmp strftime$339>

2339:
old  <	mov [rbp + 168], rax>
new  <>

2340:
old  <>
new  < strftime$153:>

2341:
old  < strftime$144:>
new  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2342:
old  <	; Call strcpy 136 0>
new  <>

2343:
old  <	mov qword [rbp + 136], strftime$145>
new  < strftime$154:>

2344:
old  <	mov [rbp + 144], rbp>
new  <	; Parameter pointer add 160>

2345:
old  <	add rbp, 136>
new  <	mov [rbp + 160], rbp>

2346:
old  <	jmp strcpy>
new  <	add qword [rbp + 160], 116>

2348:
old  < strftime$145:>
new  < strftime$155:>

2349:
old  <	; PostCall 136>
new  <	; Dereference Â£temporary2353 -> tp tp 0>

2350:
old  <>
new  <	mov rsi, [rbp + 44]>

2351:
old  < strftime$146:>
new  <>

2352:
old  <	; Goto 355>
new  < strftime$156:>

2353:
old  <	jmp strftime$355>
new  <	; IntegralToIntegral Â£temporary2355 Â£temporary2353 -> tp>

2354:
old  <>
new  <	mov eax, [rsi + 16]>

2355:
old  < strftime$147:>
new  <	mov rbx, 4294967295>

2356:
old  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	and rax, rbx>

2358:
old  < strftime$148:>
new  < strftime$157:>

2359:
old  <	; Parameter pointer add 160>
new  <	; UnsignedMultiply Â£temporary2356 Â£temporary2355 8>

2360:
old  <	mov [rbp + 160], rbp>
new  <	xor rdx, rdx>

2361:
old  <	add qword [rbp + 160], 116>
new  <	mul qword [int8$8#]>

2363:
old  < strftime$149:>
new  < strftime$158:>

2364:
old  <	; Dereference Â£temporary2341 -> tp tp 0>
new  <	; BinaryAdd Â£temporary2357 longMonthList Â£temporary2356>

2365:
old  <	mov rsi, [rbp + 44]>
new  <	mov rsi, [rbp + 84]>

2366:
old  <>
new  <	add rsi, rax>

2367:
old  < strftime$150:>
new  <>

2368:
old  <	; IntegralToIntegral Â£temporary2343 Â£temporary2341 -> tp>
new  < strftime$159:>

2369:
old  <	mov eax, [rsi + 24]>
new  <	; Dereference Â£temporary2354 -> Â£temporary2357 Â£temporary2357 0>

2370:
old  <	mov rbx, 4294967295>
new  <>

2371:
old  <	and rax, rbx>
new  < strftime$160:>

2372:
old  <>
new  <	; Parameter pointer Â£temporary2354 -> Â£temporary2357 168>

2373:
old  < strftime$151:>
new  <	mov rax, [rsi]>

2374:
old  <	; UnsignedMultiply Â£temporary2344 Â£temporary2343 8>
new  <	mov [rbp + 168], rax>

2375:
old  <	xor rdx, rdx>
new  <>

2376:
old  <	mul qword [int8$8#]>
new  < strftime$161:>

2377:
old  <>
new  <	; Call strcpy 136 0>

2378:
old  < strftime$152:>
new  <	mov qword [rbp + 136], strftime$162>

2379:
old  <	; BinaryAdd Â£temporary2345 longDayList Â£temporary2344>
new  <	mov [rbp + 144], rbp>

2380:
old  <	mov rsi, [rbp + 76]>
new  <	add rbp, 136>

2381:
old  <	add rsi, rax>
new  <	jmp strcpy>

2383:
old  < strftime$153:>
new  < strftime$162:>

2384:
old  <	; Dereference Â£temporary2342 -> Â£temporary2345 Â£temporary2345 0>
new  <	; PostCall 136>

2386:
old  < strftime$154:>
new  < strftime$163:>

2387:
old  <	; Parameter pointer Â£temporary2342 -> Â£temporary2345 168>
new  <	; Goto 339>

2388:
old  <	mov rax, [rsi]>
new  <	jmp strftime$339>

2389:
old  <	mov [rbp + 168], rax>
new  <>

2390:
old  <>
new  < strftime$164:>

2391:
old  < strftime$155:>
new  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2392:
old  <	; Call strcpy 136 0>
new  <>

2393:
old  <	mov qword [rbp + 136], strftime$156>
new  < strftime$165:>

2394:
old  <	mov [rbp + 144], rbp>
new  <	; Parameter pointer add 160>

2395:
old  <	add rbp, 136>
new  <	mov [rbp + 160], rbp>

2396:
old  <	jmp strcpy>
new  <	add qword [rbp + 160], 116>

2398:
old  < strftime$156:>
new  < strftime$166:>

2399:
old  <	; PostCall 136>
new  <	; Parameter pointer "%04d-%02d-%02d %02d:%02d:%02d" 168>

2400:
old  <>
new  <	mov qword [rbp + 168], string_2504d2D2502d2D2502d202502d3A2502d3A2502d#>

2401:
old  < strftime$157:>
new  <>

2402:
old  <	; Goto 355>
new  < strftime$167:>

2403:
old  <	jmp strftime$355>
new  <	; Dereference Â£temporary2359 -> tp tp 0>

2404:
old  <>
new  <	mov rsi, [rbp + 44]>

2405:
old  < strftime$158:>
new  <>

2406:
old  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < strftime$168:>

2407:
old  <>
new  <	; BinaryAdd Â£temporary2360 Â£temporary2359 -> tp 1900>

2408:
old  < strftime$159:>
new  <	mov eax, [rsi + 20]>

2409:
old  <	; Parameter pointer add 160>
new  <	add eax, 1900>

2410:
old  <	mov [rbp + 160], rbp>
new  <>

2411:
old  <	add qword [rbp + 160], 116>
new  < strftime$169:>

2412:
old  <>
new  <	; Parameter signedint Â£temporary2360 176>

2413:
old  < strftime$160:>
new  <	mov [rbp + 176], eax>

2414:
old  <	; Dereference Â£temporary2347 -> tp tp 0>
new  <>

2415:
old  <	mov rsi, [rbp + 44]>
new  < strftime$170:>

2416:
old  <>
new  <	; Dereference Â£temporary2361 -> tp tp 0>

2417:
old  < strftime$161:>
new  <	mov rsi, [rbp + 44]>

2418:
old  <	; IntegralToIntegral Â£temporary2349 Â£temporary2347 -> tp>
new  <>

2419:
old  <	mov eax, [rsi + 16]>
new  < strftime$171:>

2420:
old  <	mov rbx, 4294967295>
new  <	; BinaryAdd Â£temporary2362 Â£temporary2361 -> tp 1>

2421:
old  <	and rax, rbx>
new  <	mov eax, [rsi + 16]>

2422:
old  <>
new  <	inc eax>

2423:
old  < strftime$162:>
new  <>

2424:
old  <	; UnsignedMultiply Â£temporary2350 Â£temporary2349 8>
new  < strftime$172:>

2425:
old  <	xor rdx, rdx>
new  <	; Parameter signedint Â£temporary2362 180>

2426:
old  <	mul qword [int8$8#]>
new  <	mov [rbp + 180], eax>

2428:
old  < strftime$163:>
new  < strftime$173:>

2429:
old  <	; BinaryAdd Â£temporary2351 shortMonthList Â£temporary2350>
new  <	; Dereference Â£temporary2363 -> tp tp 0>

2430:
old  <	mov rsi, [rbp + 68]>
new  <	mov rsi, [rbp + 44]>

2431:
old  <	add rsi, rax>
new  <>

2432:
old  <>
new  < strftime$174:>

2433:
old  < strftime$164:>
new  <	; Parameter signedint Â£temporary2363 -> tp 184>

2434:
old  <	; Dereference Â£temporary2348 -> Â£temporary2351 Â£temporary2351 0>
new  <	mov eax, [rsi + 12]>

2435:
old  <>
new  <	mov [rbp + 184], eax>

2436:
old  < strftime$165:>
new  <>

2437:
old  <	; Parameter pointer Â£temporary2348 -> Â£temporary2351 168>
new  < strftime$175:>

2438:
old  <	mov rax, [rsi]>
new  <	; Dereference Â£temporary2364 -> tp tp 0>

2439:
old  <	mov [rbp + 168], rax>
new  <	mov rsi, [rbp + 44]>

2441:
old  < strftime$166:>
new  < strftime$176:>

2442:
old  <	; Call strcpy 136 0>
new  <	; Parameter signedint Â£temporary2364 -> tp 188>

2443:
old  <	mov qword [rbp + 136], strftime$167>
new  <	mov eax, [rsi + 8]>

2444:
old  <	mov [rbp + 144], rbp>
new  <	mov [rbp + 188], eax>

2445:
old  <	add rbp, 136>
new  <>

2446:
old  <	jmp strcpy>
new  < strftime$177:>

2447:
old  <>
new  <	; Dereference Â£temporary2365 -> tp tp 0>

2448:
old  < strftime$167:>
new  <	mov rsi, [rbp + 44]>

2449:
old  <	; PostCall 136>
new  <>

2450:
old  <>
new  < strftime$178:>

2451:
old  < strftime$168:>
new  <	; Parameter signedint Â£temporary2365 -> tp 192>

2452:
old  <	; Goto 355>
new  <	mov eax, [rsi + 4]>

2453:
old  <	jmp strftime$355>
new  <	mov [rbp + 192], eax>

2455:
old  < strftime$169:>
new  < strftime$179:>

2456:
old  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Dereference Â£temporary2366 -> tp tp 0>

2457:
old  <>
new  <	mov rsi, [rbp + 44]>

2458:
old  < strftime$170:>
new  <>

2459:
old  <	; Parameter pointer add 160>
new  < strftime$180:>

2460:
old  <	mov [rbp + 160], rbp>
new  <	; Parameter signedint Â£temporary2366 -> tp 196>

2461:
old  <	add qword [rbp + 160], 116>
new  <	mov eax, [rsi]>

2462:
old  <>
new  <	mov [rbp + 196], eax>

2463:
old  < strftime$171:>
new  <>

2464:
old  <	; Dereference Â£temporary2353 -> tp tp 0>
new  < strftime$181:>

2465:
old  <	mov rsi, [rbp + 44]>
new  <	; Call sprintf 136 24>

2466:
old  <>
new  <	mov qword [rbp + 136], strftime$182>

2467:
old  < strftime$172:>
new  <	mov [rbp + 144], rbp>

2468:
old  <	; IntegralToIntegral Â£temporary2355 Â£temporary2353 -> tp>
new  <	add rbp, 136>

2469:
old  <	mov eax, [rsi + 16]>
new  <	mov rdi, rbp>

2470:
old  <	mov rbx, 4294967295>
new  <	add rdi, 24>

2471:
old  <	and rax, rbx>
new  <	jmp sprintf>

2473:
old  < strftime$173:>
new  < strftime$182:>

2474:
old  <	; UnsignedMultiply Â£temporary2356 Â£temporary2355 8>
new  <	; PostCall 136>

2475:
old  <	xor rdx, rdx>
new  <>

2476:
old  <	mul qword [int8$8#]>
new  < strftime$183:>

2477:
old  <>
new  <	; Goto 339>

2478:
old  < strftime$174:>
new  <	jmp strftime$339>

2479:
old  <	; BinaryAdd Â£temporary2357 longMonthList Â£temporary2356>
new  <>

2480:
old  <	mov rsi, [rbp + 84]>
new  < strftime$184:>

2481:
old  <	add rsi, rax>
new  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2483:
old  < strftime$175:>
new  < strftime$185:>

2484:
old  <	; Dereference Â£temporary2354 -> Â£temporary2357 Â£temporary2357 0>
new  <	; Parameter pointer add 160>

2485:
old  <>
new  <	mov [rbp + 160], rbp>

2486:
old  < strftime$176:>
new  <	add qword [rbp + 160], 116>

2487:
old  <	; Parameter pointer Â£temporary2354 -> Â£temporary2357 168>
new  <>

2488:
old  <	mov rax, [rsi]>
new  < strftime$186:>

2489:
old  <	mov [rbp + 168], rax>
new  <	; Parameter pointer "%02d" 168>

2490:
old  <>
new  <	mov qword [rbp + 168], string_2502d#>

2491:
old  < strftime$177:>
new  <>

2492:
old  <	; Call strcpy 136 0>
new  < strftime$187:>

2493:
old  <	mov qword [rbp + 136], strftime$178>
new  <	; Dereference Â£temporary2368 -> tp tp 0>

2494:
old  <	mov [rbp + 144], rbp>
new  <	mov rsi, [rbp + 44]>

2495:
old  <	add rbp, 136>
new  <>

2496:
old  <	jmp strcpy>
new  < strftime$188:>

2497:
old  <>
new  <	; Parameter signedint Â£temporary2368 -> tp 176>

2498:
old  < strftime$178:>
new  <	mov eax, [rsi + 12]>

2499:
old  <	; PostCall 136>
new  <	mov [rbp + 176], eax>

2501:
old  < strftime$179:>
new  < strftime$189:>

2502:
old  <	; Goto 355>
new  <	; Call sprintf 136 4>

2503:
old  <	jmp strftime$355>
new  <	mov qword [rbp + 136], strftime$190>

2504:
old  <>
new  <	mov [rbp + 144], rbp>

2505:
old  < strftime$180:>
new  <	add rbp, 136>

2506:
old  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov rdi, rbp>

2507:
old  <>
new  <	add rdi, 4>

2508:
old  < strftime$181:>
new  <	jmp sprintf>

2509:
old  <	; Parameter pointer add 160>
new  <>

2510:
old  <	mov [rbp + 160], rbp>
new  < strftime$190:>

2511:
old  <	add qword [rbp + 160], 116>
new  <	; PostCall 136>

2513:
old  < strftime$182:>
new  < strftime$191:>

2514:
old  <	; Parameter pointer "%04d-%02d-%02d %02d:%02d:%02d" 168>
new  <	; Goto 339>

2515:
old  <	mov qword [rbp + 168], string_2504d2D2502d2D2502d202502d3A2502d3A2502d#>
new  <	jmp strftime$339>

2517:
old  < strftime$183:>
new  < strftime$192:>

2518:
old  <	; Dereference Â£temporary2359 -> tp tp 0>
new  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2519:
old  <	mov rsi, [rbp + 44]>
new  <>

2520:
old  <>
new  < strftime$193:>

2521:
old  < strftime$184:>
new  <	; Parameter pointer add 160>

2522:
old  <	; BinaryAdd Â£temporary2360 Â£temporary2359 -> tp 1900>
new  <	mov [rbp + 160], rbp>

2523:
old  <	mov eax, [rsi + 20]>
new  <	add qword [rbp + 160], 116>

2524:
old  <	add eax, 1900>
new  <>

2525:
old  <>
new  < strftime$194:>

2526:
old  < strftime$185:>
new  <	; Parameter pointer "%02d" 168>

2527:
old  <	; Parameter signedint Â£temporary2360 176>
new  <	mov qword [rbp + 168], string_2502d#>

2528:
old  <	mov [rbp + 176], eax>
new  <>

2529:
old  <>
new  < strftime$195:>

2530:
old  < strftime$186:>
new  <	; Dereference Â£temporary2370 -> tp tp 0>

2531:
old  <	; Dereference Â£temporary2361 -> tp tp 0>
new  <	mov rsi, [rbp + 44]>

2532:
old  <	mov rsi, [rbp + 44]>
new  <>

2533:
old  <>
new  < strftime$196:>

2534:
old  < strftime$187:>
new  <	; Parameter signedint Â£temporary2370 -> tp 176>

2535:
old  <	; BinaryAdd Â£temporary2362 Â£temporary2361 -> tp 1>
new  <	mov eax, [rsi + 8]>

2536:
old  <	mov eax, [rsi + 16]>
new  <	mov [rbp + 176], eax>

2537:
old  <	inc eax>
new  <>

2538:
old  <>
new  < strftime$197:>

2539:
old  < strftime$188:>
new  <	; Call sprintf 136 4>

2540:
old  <	; Parameter signedint Â£temporary2362 180>
new  <	mov qword [rbp + 136], strftime$198>

2541:
old  <	mov [rbp + 180], eax>
new  <	mov [rbp + 144], rbp>

2542:
old  <>
new  <	add rbp, 136>

2543:
old  < strftime$189:>
new  <	mov rdi, rbp>

2544:
old  <	; Dereference Â£temporary2363 -> tp tp 0>
new  <	add rdi, 4>

2545:
old  <	mov rsi, [rbp + 44]>
new  <	jmp sprintf>

2547:
old  < strftime$190:>
new  < strftime$198:>

2548:
old  <	; Parameter signedint Â£temporary2363 -> tp 184>
new  <	; PostCall 136>

2549:
old  <	mov eax, [rsi + 12]>
new  <>

2550:
old  <	mov [rbp + 184], eax>
new  < strftime$199:>

2551:
old  <>
new  <	; Goto 339>

2552:
old  < strftime$191:>
new  <	jmp strftime$339>

2553:
old  <	; Dereference Â£temporary2364 -> tp tp 0>
new  <>

2554:
old  <	mov rsi, [rbp + 44]>
new  < strftime$200:>

2555:
old  <>
new  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2556:
old  < strftime$192:>
new  <>

2557:
old  <	; Parameter signedint Â£temporary2364 -> tp 188>
new  < strftime$201:>

2558:
old  <	mov eax, [rsi + 8]>
new  <	; Parameter pointer add 160>

2559:
old  <	mov [rbp + 188], eax>
new  <	mov [rbp + 160], rbp>

2560:
old  <>
new  <	add qword [rbp + 160], 116>

2561:
old  < strftime$193:>
new  <>

2562:
old  <	; Dereference Â£temporary2365 -> tp tp 0>
new  < strftime$202:>

2563:
old  <	mov rsi, [rbp + 44]>
new  <	; Parameter pointer "%02d" 168>

2564:
old  <>
new  <	mov qword [rbp + 168], string_2502d#>

2565:
old  < strftime$194:>
new  <>

2566:
old  <	; Parameter signedint Â£temporary2365 -> tp 192>
new  < strftime$203:>

2567:
old  <	mov eax, [rsi + 4]>
new  <	; Dereference Â£temporary2372 -> tp tp 0>

2568:
old  <	mov [rbp + 192], eax>
new  <	mov rsi, [rbp + 44]>

2570:
old  < strftime$195:>
new  < strftime$204:>

2571:
old  <	; Dereference Â£temporary2366 -> tp tp 0>
new  <	; SignedModulo Â£temporary2373 Â£temporary2372 -> tp 12>

2572:
old  <	mov rsi, [rbp + 44]>
new  <	mov eax, [rsi + 8]>

2573:
old  <>
new  <	xor edx, edx>

2574:
old  < strftime$196:>
new  <	idiv dword [int4$12#]>

2575:
old  <	; Parameter signedint Â£temporary2366 -> tp 196>
new  <>

2576:
old  <	mov eax, [rsi]>
new  < strftime$205:>

2577:
old  <	mov [rbp + 196], eax>
new  <	; Parameter signedint Â£temporary2373 176>

2578:
old  <>
new  <	mov [rbp + 176], edx>

2579:
old  < strftime$197:>
new  <>

2580:
old  <	; Call sprintf 136 24>
new  < strftime$206:>

2581:
old  <	mov qword [rbp + 136], strftime$198>
new  <	; Call sprintf 136 4>

2582:
old  <	mov [rbp + 144], rbp>
new  <	mov qword [rbp + 136], strftime$207>

2583:
old  <	add rbp, 136>
new  <	mov [rbp + 144], rbp>

2584:
old  <	mov rdi, rbp>
new  <	add rbp, 136>

2585:
old  <	add rdi, 24>
new  <	mov rdi, rbp>

2586:
old  <	jmp sprintf>
new  <	add rdi, 4>

2587:
old  <>
new  <	jmp sprintf>

2588:
old  < strftime$198:>
new  <>

2589:
old  <	; PostCall 136>
new  < strftime$207:>

2590:
old  <>
new  <	; PostCall 136>

2591:
old  < strftime$199:>
new  <>

2592:
old  <	; Goto 355>
new  < strftime$208:>

2593:
old  <	jmp strftime$355>
new  <	; Goto 339>

2594:
old  <>
new  <	jmp strftime$339>

2595:
old  < strftime$200:>
new  <>

2596:
old  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < strftime$209:>

2597:
old  <>
new  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2598:
old  < strftime$201:>
new  <>

2599:
old  <	; Parameter pointer add 160>
new  < strftime$210:>

2600:
old  <	mov [rbp + 160], rbp>
new  <	; Parameter pointer add 160>

2601:
old  <	add qword [rbp + 160], 116>
new  <	mov [rbp + 160], rbp>

2602:
old  <>
new  <	add qword [rbp + 160], 116>

2603:
old  < strftime$202:>
new  <>

2604:
old  <	; Parameter pointer "%02d" 168>
new  < strftime$211:>

2605:
old  <	mov qword [rbp + 168], string_2502d#>
new  <	; Parameter pointer "%03d" 168>

2606:
old  <>
new  <	mov qword [rbp + 168], string_2503d#>

2607:
old  < strftime$203:>
new  <>

2608:
old  <	; Dereference Â£temporary2368 -> tp tp 0>
new  < strftime$212:>

2609:
old  <	mov rsi, [rbp + 44]>
new  <	; Dereference Â£temporary2375 -> tp tp 0>

2610:
old  <>
new  <	mov rsi, [rbp + 44]>

2611:
old  < strftime$204:>
new  <>

2612:
old  <	; Parameter signedint Â£temporary2368 -> tp 176>
new  < strftime$213:>

2613:
old  <	mov eax, [rsi + 12]>
new  <	; Parameter signedint Â£temporary2375 -> tp 176>

2614:
old  <	mov [rbp + 176], eax>
new  <	mov eax, [rsi + 28]>

2615:
old  <>
new  <	mov [rbp + 176], eax>

2616:
old  < strftime$205:>
new  <>

2617:
old  <	; Call sprintf 136 4>
new  < strftime$214:>

2618:
old  <	mov qword [rbp + 136], strftime$206>
new  <	; Call sprintf 136 4>

2619:
old  <	mov [rbp + 144], rbp>
new  <	mov qword [rbp + 136], strftime$215>

2620:
old  <	add rbp, 136>
new  <	mov [rbp + 144], rbp>

2621:
old  <	mov rdi, rbp>
new  <	add rbp, 136>

2622:
old  <	add rdi, 4>
new  <	mov rdi, rbp>

2623:
old  <	jmp sprintf>
new  <	add rdi, 4>

2624:
old  <>
new  <	jmp sprintf>

2625:
old  < strftime$206:>
new  <>

2626:
old  <	; PostCall 136>
new  < strftime$215:>

2627:
old  <>
new  <	; PostCall 136>

2628:
old  < strftime$207:>
new  <>

2629:
old  <	; Goto 355>
new  < strftime$216:>

2630:
old  <	jmp strftime$355>
new  <	; Goto 339>

2631:
old  <>
new  <	jmp strftime$339>

2632:
old  < strftime$208:>
new  <>

2633:
old  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < strftime$217:>

2634:
old  <>
new  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2635:
old  < strftime$209:>
new  <>

2636:
old  <	; Parameter pointer add 160>
new  < strftime$218:>

2637:
old  <	mov [rbp + 160], rbp>
new  <	; Parameter pointer add 160>

2638:
old  <	add qword [rbp + 160], 116>
new  <	mov [rbp + 160], rbp>

2639:
old  <>
new  <	add qword [rbp + 160], 116>

2640:
old  < strftime$210:>
new  <>

2641:
old  <	; Parameter pointer "%02d" 168>
new  < strftime$219:>

2642:
old  <	mov qword [rbp + 168], string_2502d#>
new  <	; Parameter pointer "%02d" 168>

2643:
old  <>
new  <	mov qword [rbp + 168], string_2502d#>

2644:
old  < strftime$211:>
new  <>

2645:
old  <	; Dereference Â£temporary2370 -> tp tp 0>
new  < strftime$220:>

2646:
old  <	mov rsi, [rbp + 44]>
new  <	; Dereference Â£temporary2377 -> tp tp 0>

2647:
old  <>
new  <	mov rsi, [rbp + 44]>

2648:
old  < strftime$212:>
new  <>

2649:
old  <	; Parameter signedint Â£temporary2370 -> tp 176>
new  < strftime$221:>

2650:
old  <	mov eax, [rsi + 8]>
new  <	; BinaryAdd Â£temporary2378 Â£temporary2377 -> tp 1>

2651:
old  <	mov [rbp + 176], eax>
new  <	mov eax, [rsi + 16]>

2652:
old  <>
new  <	inc eax>

2653:
old  < strftime$213:>
new  <>

2654:
old  <	; Call sprintf 136 4>
new  < strftime$222:>

2655:
old  <	mov qword [rbp + 136], strftime$214>
new  <	; Parameter signedint Â£temporary2378 176>

2656:
old  <	mov [rbp + 144], rbp>
new  <	mov [rbp + 176], eax>

2657:
old  <	add rbp, 136>
new  <>

2658:
old  <	mov rdi, rbp>
new  < strftime$223:>

2659:
old  <	add rdi, 4>
new  <	; Call sprintf 136 4>

2660:
old  <	jmp sprintf>
new  <	mov qword [rbp + 136], strftime$224>

2661:
old  <>
new  <	mov [rbp + 144], rbp>

2662:
old  < strftime$214:>
new  <	add rbp, 136>

2663:
old  <	; PostCall 136>
new  <	mov rdi, rbp>

2664:
old  <>
new  <	add rdi, 4>

2665:
old  < strftime$215:>
new  <	jmp sprintf>

2666:
old  <	; Goto 355>
new  <>

2667:
old  <	jmp strftime$355>
new  < strftime$224:>

2668:
old  <>
new  <	; PostCall 136>

2669:
old  < strftime$216:>
new  <>

2670:
old  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < strftime$225:>

2671:
old  <>
new  <	; Goto 339>

2672:
old  < strftime$217:>
new  <	jmp strftime$339>

2673:
old  <	; Parameter pointer add 160>
new  <>

2674:
old  <	mov [rbp + 160], rbp>
new  < strftime$226:>

2675:
old  <	add qword [rbp + 160], 116>
new  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2677:
old  < strftime$218:>
new  < strftime$227:>

2678:
old  <	; Parameter pointer "%02d" 168>
new  <	; Parameter pointer add 160>

2679:
old  <	mov qword [rbp + 168], string_2502d#>
new  <	mov [rbp + 160], rbp>

2680:
old  <>
new  <	add qword [rbp + 160], 116>

2681:
old  < strftime$219:>
new  <>

2682:
old  <	; Dereference Â£temporary2372 -> tp tp 0>
new  < strftime$228:>

2683:
old  <	mov rsi, [rbp + 44]>
new  <	; Parameter pointer "%02d" 168>

2684:
old  <>
new  <	mov qword [rbp + 168], string_2502d#>

2685:
old  < strftime$220:>
new  <>

2686:
old  <	; SignedModulo Â£temporary2373 Â£temporary2372 -> tp 12>
new  < strftime$229:>

2687:
old  <	mov eax, [rsi + 8]>
new  <	; Dereference Â£temporary2380 -> tp tp 0>

2688:
old  <	xor edx, edx>
new  <	mov rsi, [rbp + 44]>

2689:
old  <	idiv dword [int4$12#]>
new  <>

2690:
old  <>
new  < strftime$230:>

2691:
old  < strftime$221:>
new  <	; Parameter signedint Â£temporary2380 -> tp 176>

2692:
old  <	; Parameter signedint Â£temporary2373 176>
new  <	mov eax, [rsi + 4]>

2693:
old  <	mov [rbp + 176], edx>
new  <	mov [rbp + 176], eax>

2695:
old  < strftime$222:>
new  < strftime$231:>

2697:
old  <	mov qword [rbp + 136], strftime$223>
new  <	mov qword [rbp + 136], strftime$232>

2704:
old  < strftime$223:>
new  < strftime$232:>

2707:
old  < strftime$224:>
new  < strftime$233:>

2708:
old  <	; Goto 355>
new  <	; Goto 339>

2709:
old  <	jmp strftime$355>
new  <	jmp strftime$339>

2711:
old  < strftime$225:>
new  < strftime$234:>

2714:
old  < strftime$226:>
new  < strftime$235:>

2719:
old  < strftime$227:>
new  < strftime$236:>

2720:
old  <	; Parameter pointer "%03d" 168>
new  <	; Parameter pointer "%s" 168>

2721:
old  <	mov qword [rbp + 168], string_2503d#>
new  <	mov qword [rbp + 168], string_25s#>

2723:
old  < strftime$228:>
new  < strftime$237:>

2724:
old  <	; Dereference Â£temporary2375 -> tp tp 0>
new  <	; Dereference Â£temporary2382 -> tp tp 0>

2727:
old  < strftime$229:>
new  < strftime$238:>

2728:
old  <	; Parameter signedint Â£temporary2375 -> tp 176>
new  <	; SignedGreaterThanEqual 241 Â£temporary2382 -> tp 12>

2729:
old  <	mov eax, [rsi + 28]>
new  <	cmp dword [rsi + 8], 12>

2730:
old  <	mov [rbp + 176], eax>
new  <	jge strftime$241>

2732:
old  < strftime$230:>
new  < strftime$239:>

2733:
old  <	; Call sprintf 136 4>
new  <	; Assign Â£temporary2384 "AM">

2734:
old  <	mov qword [rbp + 136], strftime$231>
new  <	mov rax, string_AM#>

2735:
old  <	mov [rbp + 144], rbp>
new  <>

2736:
old  <	add rbp, 136>
new  < strftime$240:>

2737:
old  <	mov rdi, rbp>
new  <	; Goto 242>

2738:
old  <	add rdi, 4>
new  <	jmp strftime$242>

2739:
old  <	jmp sprintf>
new  <>

2740:
old  <>
new  < strftime$241:>

2741:
old  < strftime$231:>
new  <	; Assign Â£temporary2384 "PM">

2742:
old  <	; PostCall 136>
new  <	mov rax, string_PM#>

2744:
old  < strftime$232:>
new  < strftime$242:>

2745:
old  <	; Goto 355>
new  <	; Parameter pointer Â£temporary2384 176>

2746:
old  <	jmp strftime$355>
new  <	mov [rbp + 176], rax>

2748:
old  < strftime$233:>
new  < strftime$243:>

2749:
old  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Call sprintf 136 8>

2750:
old  <>
new  <	mov qword [rbp + 136], strftime$244>

2751:
old  < strftime$234:>
new  <	mov [rbp + 144], rbp>

2752:
old  <	; Parameter pointer add 160>
new  <	add rbp, 136>

2753:
old  <	mov [rbp + 160], rbp>
new  <	mov rdi, rbp>

2754:
old  <	add qword [rbp + 160], 116>
new  <	add rdi, 8>

2755:
old  <>
new  <	jmp sprintf>

2756:
old  < strftime$235:>
new  <>

2757:
old  <	; Parameter pointer "%02d" 168>
new  < strftime$244:>

2758:
old  <	mov qword [rbp + 168], string_2502d#>
new  <	; PostCall 136>

2760:
old  < strftime$236:>
new  < strftime$245:>

2761:
old  <	; Dereference Â£temporary2377 -> tp tp 0>
new  <	; Goto 339>

2762:
old  <	mov rsi, [rbp + 44]>
new  <	jmp strftime$339>

2764:
old  < strftime$237:>
new  < strftime$246:>

2765:
old  <	; BinaryAdd Â£temporary2378 Â£temporary2377 -> tp 1>
new  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2766:
old  <	mov eax, [rsi + 16]>
new  <>

2767:
old  <	inc eax>
new  < strftime$247:>

2768:
old  <>
new  <	; Parameter pointer add 160>

2769:
old  < strftime$238:>
new  <	mov [rbp + 160], rbp>

2770:
old  <	; Parameter signedint Â£temporary2378 176>
new  <	add qword [rbp + 160], 116>

2771:
old  <	mov [rbp + 176], eax>
new  <>

2772:
old  <>
new  < strftime$248:>

2773:
old  < strftime$239:>
new  <	; Parameter pointer "%02d" 168>

2774:
old  <	; Call sprintf 136 4>
new  <	mov qword [rbp + 168], string_2502d#>

2775:
old  <	mov qword [rbp + 136], strftime$240>
new  <>

2776:
old  <	mov [rbp + 144], rbp>
new  < strftime$249:>

2777:
old  <	add rbp, 136>
new  <	; Dereference Â£temporary2386 -> tp tp 0>

2778:
old  <	mov rdi, rbp>
new  <	mov rsi, [rbp + 44]>

2779:
old  <	add rdi, 4>
new  <>

2780:
old  <	jmp sprintf>
new  < strftime$250:>

2781:
old  <>
new  <	; Parameter signedint Â£temporary2386 -> tp 176>

2782:
old  < strftime$240:>
new  <	mov eax, [rsi]>

2783:
old  <	; PostCall 136>
new  <	mov [rbp + 176], eax>

2785:
old  < strftime$241:>
new  < strftime$251:>

2786:
old  <	; Goto 355>
new  <	; Call sprintf 136 4>

2787:
old  <	jmp strftime$355>
new  <	mov qword [rbp + 136], strftime$252>

2788:
old  <>
new  <	mov [rbp + 144], rbp>

2789:
old  < strftime$242:>
new  <	add rbp, 136>

2790:
old  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov rdi, rbp>

2791:
old  <>
new  <	add rdi, 4>

2792:
old  < strftime$243:>
new  <	jmp sprintf>

2793:
old  <	; Parameter pointer add 160>
new  <>

2794:
old  <	mov [rbp + 160], rbp>
new  < strftime$252:>

2795:
old  <	add qword [rbp + 160], 116>
new  <	; PostCall 136>

2797:
old  < strftime$244:>
new  < strftime$253:>

2798:
old  <	; Parameter pointer "%02d" 168>
new  <	; Goto 339>

2799:
old  <	mov qword [rbp + 168], string_2502d#>
new  <	jmp strftime$339>

2801:
old  < strftime$245:>
new  < strftime$254:>

2802:
old  <	; Dereference Â£temporary2380 -> tp tp 0>
new  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2803:
old  <	mov rsi, [rbp + 44]>
new  <>

2804:
old  <>
new  < strftime$255:>

2805:
old  < strftime$246:>
new  <	; Parameter pointer add 160>

2806:
old  <	; Parameter signedint Â£temporary2380 -> tp 176>
new  <	mov [rbp + 160], rbp>

2807:
old  <	mov eax, [rsi + 4]>
new  <	add qword [rbp + 160], 116>

2808:
old  <	mov [rbp + 176], eax>
new  <>

2809:
old  <>
new  < strftime$256:>

2810:
old  < strftime$247:>
new  <	; Parameter pointer "%02d" 168>

2811:
old  <	; Call sprintf 136 4>
new  <	mov qword [rbp + 168], string_2502d#>

2812:
old  <	mov qword [rbp + 136], strftime$248>
new  <>

2813:
old  <	mov [rbp + 144], rbp>
new  < strftime$257:>

2814:
old  <	add rbp, 136>
new  <	; Parameter signedint yearDaySunday 176>

2815:
old  <	mov rdi, rbp>
new  <	mov eax, [rbp + 104]>

2816:
old  <	add rdi, 4>
new  <	mov [rbp + 176], eax>

2817:
old  <	jmp sprintf>
new  <>

2818:
old  <>
new  < strftime$258:>

2819:
old  < strftime$248:>
new  <	; Call sprintf 136 4>

2820:
old  <	; PostCall 136>
new  <	mov qword [rbp + 136], strftime$259>

2821:
old  <>
new  <	mov [rbp + 144], rbp>

2822:
old  < strftime$249:>
new  <	add rbp, 136>

2823:
old  <	; Goto 355>
new  <	mov rdi, rbp>

2824:
old  <	jmp strftime$355>
new  <	add rdi, 4>

2825:
old  <>
new  <	jmp sprintf>

2826:
old  < strftime$250:>
new  <>

2827:
old  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < strftime$259:>

2828:
old  <>
new  <	; PostCall 136>

2829:
old  < strftime$251:>
new  <>

2830:
old  <	; Parameter pointer add 160>
new  < strftime$260:>

2831:
old  <	mov [rbp + 160], rbp>
new  <	; Goto 339>

2832:
old  <	add qword [rbp + 160], 116>
new  <	jmp strftime$339>

2834:
old  < strftime$252:>
new  < strftime$261:>

2835:
old  <	; Parameter pointer "%s" 168>
new  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2836:
old  <	mov qword [rbp + 168], string_25s#>
new  <>

2837:
old  <>
new  < strftime$262:>

2838:
old  < strftime$253:>
new  <	; Parameter pointer add 160>

2839:
old  <	; Dereference Â£temporary2382 -> tp tp 0>
new  <	mov [rbp + 160], rbp>

2840:
old  <	mov rsi, [rbp + 44]>
new  <	add qword [rbp + 160], 116>

2842:
old  < strftime$254:>
new  < strftime$263:>

2843:
old  <	; SignedGreaterThanEqual 257 Â£temporary2382 -> tp 12>
new  <	; Parameter pointer "%02d" 168>

2844:
old  <	cmp dword [rsi + 8], 12>
new  <	mov qword [rbp + 168], string_2502d#>

2845:
old  <	jge strftime$257>
new  <>

2846:
old  <>
new  < strftime$264:>

2847:
old  < strftime$255:>
new  <	; Dereference Â£temporary2389 -> tp tp 0>

2848:
old  <	; Assign Â£temporary2384 "AM">
new  <	mov rsi, [rbp + 44]>

2849:
old  <	mov rax, string_AM#>
new  <>

2850:
old  <>
new  < strftime$265:>

2851:
old  < strftime$256:>
new  <	; Parameter signedint Â£temporary2389 -> tp 176>

2852:
old  <	; Goto 258>
new  <	mov eax, [rsi + 24]>

2853:
old  <	jmp strftime$258>
new  <	mov [rbp + 176], eax>

2855:
old  < strftime$257:>
new  < strftime$266:>

2856:
old  <	; Assign Â£temporary2384 "PM">
new  <	; Call sprintf 136 4>

2857:
old  <	mov rax, string_PM#>
new  <	mov qword [rbp + 136], strftime$267>

2858:
old  <>
new  <	mov [rbp + 144], rbp>

2859:
old  < strftime$258:>
new  <	add rbp, 136>

2860:
old  <	; Parameter pointer Â£temporary2384 176>
new  <	mov rdi, rbp>

2861:
old  <	mov [rbp + 176], rax>
new  <	add rdi, 4>

2862:
old  <>
new  <	jmp sprintf>

2863:
old  < strftime$259:>
new  <>

2864:
old  <	; Call sprintf 136 8>
new  < strftime$267:>

2865:
old  <	mov qword [rbp + 136], strftime$260>
new  <	; PostCall 136>

2866:
old  <	mov [rbp + 144], rbp>
new  <>

2867:
old  <	add rbp, 136>
new  < strftime$268:>

2868:
old  <	mov rdi, rbp>
new  <	; Goto 339>

2869:
old  <	add rdi, 8>
new  <	jmp strftime$339>

2870:
old  <	jmp sprintf>
new  <>

2871:
old  <>
new  < strftime$269:>

2872:
old  < strftime$260:>
new  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2873:
old  <	; PostCall 136>
new  <>

2874:
old  <>
new  < strftime$270:>

2875:
old  < strftime$261:>
new  <	; Parameter pointer add 160>

2876:
old  <	; Goto 355>
new  <	mov [rbp + 160], rbp>

2877:
old  <	jmp strftime$355>
new  <	add qword [rbp + 160], 116>

2879:
old  < strftime$262:>
new  < strftime$271:>

2880:
old  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter pointer "%02d" 168>

2881:
old  <>
new  <	mov qword [rbp + 168], string_2502d#>

2882:
old  < strftime$263:>
new  <>

2883:
old  <	; Parameter pointer add 160>
new  < strftime$272:>

2884:
old  <	mov [rbp + 160], rbp>
new  <	; Parameter signedint yearDayMonday 176>

2885:
old  <	add qword [rbp + 160], 116>
new  <	mov eax, [rbp + 108]>

2886:
old  <>
new  <	mov [rbp + 176], eax>

2887:
old  < strftime$264:>
new  <>

2888:
old  <	; Parameter pointer "%02d" 168>
new  < strftime$273:>

2889:
old  <	mov qword [rbp + 168], string_2502d#>
new  <	; Call sprintf 136 4>

2890:
old  <>
new  <	mov qword [rbp + 136], strftime$274>

2891:
old  < strftime$265:>
new  <	mov [rbp + 144], rbp>

2892:
old  <	; Dereference Â£temporary2386 -> tp tp 0>
new  <	add rbp, 136>

2893:
old  <	mov rsi, [rbp + 44]>
new  <	mov rdi, rbp>

2894:
old  <>
new  <	add rdi, 4>

2895:
old  < strftime$266:>
new  <	jmp sprintf>

2896:
old  <	; Parameter signedint Â£temporary2386 -> tp 176>
new  <>

2897:
old  <	mov eax, [rsi]>
new  < strftime$274:>

2898:
old  <	mov [rbp + 176], eax>
new  <	; PostCall 136>

2900:
old  < strftime$267:>
new  < strftime$275:>

2901:
old  <	; Call sprintf 136 4>
new  <	; Goto 339>

2902:
old  <	mov qword [rbp + 136], strftime$268>
new  <	jmp strftime$339>

2903:
old  <	mov [rbp + 144], rbp>
new  <>

2904:
old  <	add rbp, 136>
new  < strftime$276:>

2905:
old  <	mov rdi, rbp>
new  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2906:
old  <	add rdi, 4>
new  <>

2907:
old  <	jmp sprintf>
new  < strftime$277:>

2908:
old  <>
new  <	; Parameter pointer add 160>

2909:
old  < strftime$268:>
new  <	mov [rbp + 160], rbp>

2910:
old  <	; PostCall 136>
new  <	add qword [rbp + 160], 116>

2912:
old  < strftime$269:>
new  < strftime$278:>

2913:
old  <	; Goto 355>
new  <	; Parameter pointer "%04d-%02d-%02d" 168>

2914:
old  <	jmp strftime$355>
new  <	mov qword [rbp + 168], string_2504d2D2502d2D2502d#>

2916:
old  < strftime$270:>
new  < strftime$279:>

2917:
old  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Dereference Â£temporary2392 -> tp tp 0>

2918:
old  <>
new  <	mov rsi, [rbp + 44]>

2919:
old  < strftime$271:>
new  <>

2920:
old  <	; Parameter pointer add 160>
new  < strftime$280:>

2921:
old  <	mov [rbp + 160], rbp>
new  <	; BinaryAdd Â£temporary2393 Â£temporary2392 -> tp 1900>

2922:
old  <	add qword [rbp + 160], 116>
new  <	mov eax, [rsi + 20]>

2923:
old  <>
new  <	add eax, 1900>

2924:
old  < strftime$272:>
new  <>

2925:
old  <	; Parameter pointer "%02d" 168>
new  < strftime$281:>

2926:
old  <	mov qword [rbp + 168], string_2502d#>
new  <	; Parameter signedint Â£temporary2393 176>

2927:
old  <>
new  <	mov [rbp + 176], eax>

2928:
old  < strftime$273:>
new  <>

2929:
old  <	; Parameter signedint yearDaySunday 176>
new  < strftime$282:>

2930:
old  <	mov eax, [rbp + 104]>
new  <	; Dereference Â£temporary2394 -> tp tp 0>

2931:
old  <	mov [rbp + 176], eax>
new  <	mov rsi, [rbp + 44]>

2933:
old  < strftime$274:>
new  < strftime$283:>

2934:
old  <	; Call sprintf 136 4>
new  <	; BinaryAdd Â£temporary2395 Â£temporary2394 -> tp 1>

2935:
old  <	mov qword [rbp + 136], strftime$275>
new  <	mov eax, [rsi + 16]>

2936:
old  <	mov [rbp + 144], rbp>
new  <	inc eax>

2937:
old  <	add rbp, 136>
new  <>

2938:
old  <	mov rdi, rbp>
new  < strftime$284:>

2939:
old  <	add rdi, 4>
new  <	; Parameter signedint Â£temporary2395 180>

2940:
old  <	jmp sprintf>
new  <	mov [rbp + 180], eax>

2942:
old  < strftime$275:>
new  < strftime$285:>

2943:
old  <	; PostCall 136>
new  <	; Dereference Â£temporary2396 -> tp tp 0>

2944:
old  <>
new  <	mov rsi, [rbp + 44]>

2945:
old  < strftime$276:>
new  <>

2946:
old  <	; Goto 355>
new  < strftime$286:>

2947:
old  <	jmp strftime$355>
new  <	; Parameter signedint Â£temporary2396 -> tp 184>

2948:
old  <>
new  <	mov eax, [rsi + 12]>

2949:
old  < strftime$277:>
new  <	mov [rbp + 184], eax>

2950:
old  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

2951:
old  <>
new  < strftime$287:>

2952:
old  < strftime$278:>
new  <	; Call sprintf 136 12>

2953:
old  <	; Parameter pointer add 160>
new  <	mov qword [rbp + 136], strftime$288>

2954:
old  <	mov [rbp + 160], rbp>
new  <	mov [rbp + 144], rbp>

2955:
old  <	add qword [rbp + 160], 116>
new  <	add rbp, 136>

2956:
old  <>
new  <	mov rdi, rbp>

2957:
old  < strftime$279:>
new  <	add rdi, 12>

2958:
old  <	; Parameter pointer "%02d" 168>
new  <	jmp sprintf>

2959:
old  <	mov qword [rbp + 168], string_2502d#>
new  <>

2960:
old  <>
new  < strftime$288:>

2961:
old  < strftime$280:>
new  <	; PostCall 136>

2962:
old  <	; Dereference Â£temporary2389 -> tp tp 0>
new  <>

2963:
old  <	mov rsi, [rbp + 44]>
new  < strftime$289:>

2964:
old  <>
new  <	; Goto 339>

2965:
old  < strftime$281:>
new  <	jmp strftime$339>

2966:
old  <	; Parameter signedint Â£temporary2389 -> tp 176>
new  <>

2967:
old  <	mov eax, [rsi + 24]>
new  < strftime$290:>

2968:
old  <	mov [rbp + 176], eax>
new  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2970:
old  < strftime$282:>
new  < strftime$291:>

2971:
old  <	; Call sprintf 136 4>
new  <	; Parameter pointer add 160>

2972:
old  <	mov qword [rbp + 136], strftime$283>
new  <	mov [rbp + 160], rbp>

2973:
old  <	mov [rbp + 144], rbp>
new  <	add qword [rbp + 160], 116>

2974:
old  <	add rbp, 136>
new  <>

2975:
old  <	mov rdi, rbp>
new  < strftime$292:>

2976:
old  <	add rdi, 4>
new  <	; Parameter pointer "%02d:%02d:%02d" 168>

2977:
old  <	jmp sprintf>
new  <	mov qword [rbp + 168], string_2502d3A2502d3A2502d#>

2979:
old  < strftime$283:>
new  < strftime$293:>

2980:
old  <	; PostCall 136>
new  <	; Dereference Â£temporary2398 -> tp tp 0>

2981:
old  <>
new  <	mov rsi, [rbp + 44]>

2982:
old  < strftime$284:>
new  <>

2983:
old  <	; Goto 355>
new  < strftime$294:>

2984:
old  <	jmp strftime$355>
new  <	; Parameter signedint Â£temporary2398 -> tp 176>

2985:
old  <>
new  <	mov eax, [rsi + 8]>

2986:
old  < strftime$285:>
new  <	mov [rbp + 176], eax>

2987:
old  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

2988:
old  <>
new  < strftime$295:>

2989:
old  < strftime$286:>
new  <	; Dereference Â£temporary2399 -> tp tp 0>

2990:
old  <	; Parameter pointer add 160>
new  <	mov rsi, [rbp + 44]>

2991:
old  <	mov [rbp + 160], rbp>
new  <>

2992:
old  <	add qword [rbp + 160], 116>
new  < strftime$296:>

2993:
old  <>
new  <	; Parameter signedint Â£temporary2399 -> tp 180>

2994:
old  < strftime$287:>
new  <	mov eax, [rsi + 4]>

2995:
old  <	; Parameter pointer "%02d" 168>
new  <	mov [rbp + 180], eax>

2996:
old  <	mov qword [rbp + 168], string_2502d#>
new  <>

2997:
old  <>
new  < strftime$297:>

2998:
old  < strftime$288:>
new  <	; Dereference Â£temporary2400 -> tp tp 0>

2999:
old  <	; Parameter signedint yearDayMonday 176>
new  <	mov rsi, [rbp + 44]>

3000:
old  <	mov eax, [rbp + 108]>
new  <>

3001:
old  <	mov [rbp + 176], eax>
new  < strftime$298:>

3002:
old  <>
new  <	; Parameter signedint Â£temporary2400 -> tp 184>

3003:
old  < strftime$289:>
new  <	mov eax, [rsi]>

3004:
old  <	; Call sprintf 136 4>
new  <	mov [rbp + 184], eax>

3005:
old  <	mov qword [rbp + 136], strftime$290>
new  <>

3006:
old  <	mov [rbp + 144], rbp>
new  < strftime$299:>

3007:
old  <	add rbp, 136>
new  <	; Call sprintf 136 12>

3008:
old  <	mov rdi, rbp>
new  <	mov qword [rbp + 136], strftime$300>

3009:
old  <	add rdi, 4>
new  <	mov [rbp + 144], rbp>

3010:
old  <	jmp sprintf>
new  <	add rbp, 136>

3011:
old  <>
new  <	mov rdi, rbp>

3012:
old  < strftime$290:>
new  <	add rdi, 12>

3013:
old  <	; PostCall 136>
new  <	jmp sprintf>

3015:
old  < strftime$291:>
new  < strftime$300:>

3016:
old  <	; Goto 355>
new  <	; PostCall 136>

3017:
old  <	jmp strftime$355>
new  <>

3018:
old  <>
new  < strftime$301:>

3019:
old  < strftime$292:>
new  <	; Goto 339>

3020:
old  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	jmp strftime$339>

3022:
old  < strftime$293:>
new  < strftime$302:>

3023:
old  <	; Parameter pointer add 160>
new  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3024:
old  <	mov [rbp + 160], rbp>
new  <>

3025:
old  <	add qword [rbp + 160], 116>
new  < strftime$303:>

3026:
old  <>
new  <	; Parameter pointer add 160>

3027:
old  < strftime$294:>
new  <	mov [rbp + 160], rbp>

3028:
old  <	; Parameter pointer "%04d-%02d-%02d" 168>
new  <	add qword [rbp + 160], 116>

3029:
old  <	mov qword [rbp + 168], string_2504d2D2502d2D2502d#>
new  <>

3030:
old  <>
new  < strftime$304:>

3031:
old  < strftime$295:>
new  <	; Parameter pointer "%02d" 168>

3032:
old  <	; Dereference Â£temporary2392 -> tp tp 0>
new  <	mov qword [rbp + 168], string_2502d#>

3033:
old  <	mov rsi, [rbp + 44]>
new  <>

3034:
old  <>
new  < strftime$305:>

3035:
old  < strftime$296:>
new  <	; Dereference Â£temporary2402 -> tp tp 0>

3036:
old  <	; BinaryAdd Â£temporary2393 Â£temporary2392 -> tp 1900>
new  <	mov rsi, [rbp + 44]>

3037:
old  <	mov eax, [rsi + 20]>
new  <>

3038:
old  <	add eax, 1900>
new  < strftime$306:>

3039:
old  <>
new  <	; SignedModulo Â£temporary2403 Â£temporary2402 -> tp 100>

3040:
old  < strftime$297:>
new  <	mov eax, [rsi + 20]>

3041:
old  <	; Parameter signedint Â£temporary2393 176>
new  <	xor edx, edx>

3042:
old  <	mov [rbp + 176], eax>
new  <	idiv dword [int4$100#]>

3044:
old  < strftime$298:>
new  < strftime$307:>

3045:
old  <	; Dereference Â£temporary2394 -> tp tp 0>
new  <	; Parameter signedint Â£temporary2403 176>

3046:
old  <	mov rsi, [rbp + 44]>
new  <	mov [rbp + 176], edx>

3048:
old  < strftime$299:>
new  < strftime$308:>

3049:
old  <	; BinaryAdd Â£temporary2395 Â£temporary2394 -> tp 1>
new  <	; Call sprintf 136 4>

3050:
old  <	mov eax, [rsi + 16]>
new  <	mov qword [rbp + 136], strftime$309>

3051:
old  <	inc eax>
new  <	mov [rbp + 144], rbp>

3052:
old  <>
new  <	add rbp, 136>

3053:
old  < strftime$300:>
new  <	mov rdi, rbp>

3054:
old  <	; Parameter signedint Â£temporary2395 180>
new  <	add rdi, 4>

3055:
old  <	mov [rbp + 180], eax>
new  <	jmp sprintf>

3057:
old  < strftime$301:>
new  < strftime$309:>

3058:
old  <	; Dereference Â£temporary2396 -> tp tp 0>
new  <	; PostCall 136>

3059:
old  <	mov rsi, [rbp + 44]>
new  <>

3060:
old  <>
new  < strftime$310:>

3061:
old  < strftime$302:>
new  <	; Goto 339>

3062:
old  <	; Parameter signedint Â£temporary2396 -> tp 184>
new  <	jmp strftime$339>

3063:
old  <	mov eax, [rsi + 12]>
new  <>

3064:
old  <	mov [rbp + 184], eax>
new  < strftime$311:>

3065:
old  <>
new  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3066:
old  < strftime$303:>
new  <>

3067:
old  <	; Call sprintf 136 12>
new  < strftime$312:>

3068:
old  <	mov qword [rbp + 136], strftime$304>
new  <	; Parameter pointer add 160>

3069:
old  <	mov [rbp + 144], rbp>
new  <	mov [rbp + 160], rbp>

3070:
old  <	add rbp, 136>
new  <	add qword [rbp + 160], 116>

3071:
old  <	mov rdi, rbp>
new  <>

3072:
old  <	add rdi, 12>
new  < strftime$313:>

3073:
old  <	jmp sprintf>
new  <	; Parameter pointer "%04d" 168>

3074:
old  <>
new  <	mov qword [rbp + 168], string_2504d#>

3075:
old  < strftime$304:>
new  <>

3076:
old  <	; PostCall 136>
new  < strftime$314:>

3077:
old  <>
new  <	; Dereference Â£temporary2405 -> tp tp 0>

3078:
old  < strftime$305:>
new  <	mov rsi, [rbp + 44]>

3079:
old  <	; Goto 355>
new  <>

3080:
old  <	jmp strftime$355>
new  < strftime$315:>

3081:
old  <>
new  <	; BinaryAdd Â£temporary2406 Â£temporary2405 -> tp 1900>

3082:
old  < strftime$306:>
new  <	mov eax, [rsi + 20]>

3083:
old  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	add eax, 1900>

3085:
old  < strftime$307:>
new  < strftime$316:>

3086:
old  <	; Parameter pointer add 160>
new  <	; Parameter signedint Â£temporary2406 176>

3087:
old  <	mov [rbp + 160], rbp>
new  <	mov [rbp + 176], eax>

3088:
old  <	add qword [rbp + 160], 116>
new  <>

3089:
old  <>
new  < strftime$317:>

3090:
old  < strftime$308:>
new  <	; Call sprintf 136 4>

3091:
old  <	; Parameter pointer "%02d:%02d:%02d" 168>
new  <	mov qword [rbp + 136], strftime$318>

3092:
old  <	mov qword [rbp + 168], string_2502d3A2502d3A2502d#>
new  <	mov [rbp + 144], rbp>

3093:
old  <>
new  <	add rbp, 136>

3094:
old  < strftime$309:>
new  <	mov rdi, rbp>

3095:
old  <	; Dereference Â£temporary2398 -> tp tp 0>
new  <	add rdi, 4>

3096:
old  <	mov rsi, [rbp + 44]>
new  <	jmp sprintf>

3098:
old  < strftime$310:>
new  < strftime$318:>

3099:
old  <	; Parameter signedint Â£temporary2398 -> tp 176>
new  <	; PostCall 136>

3100:
old  <	mov eax, [rsi + 8]>
new  <>

3101:
old  <	mov [rbp + 176], eax>
new  < strftime$319:>

3102:
old  <>
new  <	; Goto 339>

3103:
old  < strftime$311:>
new  <	jmp strftime$339>

3104:
old  <	; Dereference Â£temporary2399 -> tp tp 0>
new  <>

3105:
old  <	mov rsi, [rbp + 44]>
new  < strftime$320:>

3106:
old  <>
new  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3107:
old  < strftime$312:>
new  <>

3108:
old  <	; Parameter signedint Â£temporary2399 -> tp 180>
new  < strftime$321:>

3109:
old  <	mov eax, [rsi + 4]>
new  <	; Parameter pointer add 160>

3110:
old  <	mov [rbp + 180], eax>
new  <	mov [rbp + 160], rbp>

3111:
old  <>
new  <	add qword [rbp + 160], 116>

3112:
old  < strftime$313:>
new  <>

3113:
old  <	; Dereference Â£temporary2400 -> tp tp 0>
new  < strftime$322:>

3114:
old  <	mov rsi, [rbp + 44]>
new  <	; Parameter pointer "" 168>

3115:
old  <>
new  <	mov qword [rbp + 168], string_#>

3116:
old  < strftime$314:>
new  <>

3117:
old  <	; Parameter signedint Â£temporary2400 -> tp 184>
new  < strftime$323:>

3118:
old  <	mov eax, [rsi]>
new  <	; Call strcpy 136 0>

3119:
old  <	mov [rbp + 184], eax>
new  <	mov qword [rbp + 136], strftime$324>

3120:
old  <>
new  <	mov [rbp + 144], rbp>

3121:
old  < strftime$315:>
new  <	add rbp, 136>

3122:
old  <	; Call sprintf 136 12>
new  <	jmp strcpy>

3123:
old  <	mov qword [rbp + 136], strftime$316>
new  <>

3124:
old  <	mov [rbp + 144], rbp>
new  < strftime$324:>

3125:
old  <	add rbp, 136>
new  <	; PostCall 136>

3126:
old  <	mov rdi, rbp>
new  <>

3127:
old  <	add rdi, 12>
new  < strftime$325:>

3128:
old  <	jmp sprintf>
new  <	; Goto 339>

3129:
old  <>
new  <	jmp strftime$339>

3130:
old  < strftime$316:>
new  <>

3131:
old  <	; PostCall 136>
new  < strftime$326:>

3132:
old  <>
new  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3133:
old  < strftime$317:>
new  <>

3134:
old  <	; Goto 355>
new  < strftime$327:>

3135:
old  <	jmp strftime$355>
new  <	; Parameter pointer add 160>

3136:
old  <>
new  <	mov [rbp + 160], rbp>

3137:
old  < strftime$318:>
new  <	add qword [rbp + 160], 116>

3138:
old  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

3139:
old  <>
new  < strftime$328:>

3140:
old  < strftime$319:>
new  <	; Parameter pointer "%" 168>

3141:
old  <	; Parameter pointer add 160>
new  <	mov qword [rbp + 168], string_25#>

3142:
old  <	mov [rbp + 160], rbp>
new  <>

3143:
old  <	add qword [rbp + 160], 116>
new  < strftime$329:>

3144:
old  <>
new  <	; Call strcpy 136 0>

3145:
old  < strftime$320:>
new  <	mov qword [rbp + 136], strftime$330>

3146:
old  <	; Parameter pointer "%02d" 168>
new  <	mov [rbp + 144], rbp>

3147:
old  <	mov qword [rbp + 168], string_2502d#>
new  <	add rbp, 136>

3148:
old  <>
new  <	jmp strcpy>

3149:
old  < strftime$321:>
new  <>

3150:
old  <	; Dereference Â£temporary2402 -> tp tp 0>
new  < strftime$330:>

3151:
old  <	mov rsi, [rbp + 44]>
new  <	; PostCall 136>

3153:
old  < strftime$322:>
new  < strftime$331:>

3154:
old  <	; SignedModulo Â£temporary2403 Â£temporary2402 -> tp 100>
new  <	; Goto 339>

3155:
old  <	mov eax, [rsi + 20]>
new  <	jmp strftime$339>

3156:
old  <	xor edx, edx>
new  <>

3157:
old  <	idiv dword [int4$100#]>
new  < strftime$332:>

3158:
old  <>
new  <	; Dereference Â£temporary2410 -> add add 0>

3159:
old  < strftime$323:>
new  <	mov rsi, rbp>

3160:
old  <	; Parameter signedint Â£temporary2403 176>
new  <	add rsi, 116>

3161:
old  <	mov [rbp + 176], edx>
new  <>

3162:
old  <>
new  < strftime$333:>

3163:
old  < strftime$324:>
new  <	; IntegralToIntegral Â£temporary2412 index>

3164:
old  <	; Call sprintf 136 4>
new  <	mov eax, [rbp + 112]>

3165:
old  <	mov qword [rbp + 136], strftime$325>
new  <	mov rbx, 4294967295>

3166:
old  <	mov [rbp + 144], rbp>
new  <	and rax, rbx>

3167:
old  <	add rbp, 136>
new  <>

3168:
old  <	mov rdi, rbp>
new  < strftime$334:>

3169:
old  <	add rdi, 4>
new  <	; BinaryAdd Â£temporary2414 fmt Â£temporary2412>

3170:
old  <	jmp sprintf>
new  <	mov rdi, [rbp + 36]>

3171:
old  <>
new  <	add rdi, rax>

3172:
old  < strftime$325:>
new  <>

3173:
old  <	; PostCall 136>
new  < strftime$335:>

3174:
old  <>
new  <	; Dereference Â£temporary2411 -> Â£temporary2414 Â£temporary2414 0>

3175:
old  < strftime$326:>
new  <>

3176:
old  <	; Goto 355>
new  < strftime$336:>

3177:
old  <	jmp strftime$355>
new  <	; Assign Â£temporary2410 -> add Â£temporary2411 -> Â£temporary2414>

3178:
old  <>
new  <	mov al, [rdi]>

3179:
old  < strftime$327:>
new  <	mov [rsi], al>

3180:
old  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

3181:
old  <>
new  < strftime$337:>

3182:
old  < strftime$328:>
new  <	; Dereference Â£temporary2415 -> add add 0>

3183:
old  <	; Parameter pointer add 160>
new  <	mov rsi, rbp>

3184:
old  <	mov [rbp + 160], rbp>
new  <	add rsi, 116>

3185:
old  <	add qword [rbp + 160], 116>
new  <>

3186:
old  <>
new  < strftime$338:>

3187:
old  < strftime$329:>
new  <	; Assign Â£temporary2415 -> add 0>

3188:
old  <	; Parameter pointer "%04d" 168>
new  <	mov byte [rsi + 1], 0>

3189:
old  <	mov qword [rbp + 168], string_2504d#>
new  <>

3190:
old  <>
new  < strftime$339:>

3191:
old  < strftime$330:>
new  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3192:
old  <	; Dereference Â£temporary2405 -> tp tp 0>
new  <>

3193:
old  <	mov rsi, [rbp + 44]>
new  < strftime$340:>

3194:
old  <>
new  <	; Parameter pointer s 160>

3195:
old  < strftime$331:>
new  <	mov rax, [rbp + 24]>

3196:
old  <	; BinaryAdd Â£temporary2406 Â£temporary2405 -> tp 1900>
new  <	mov [rbp + 160], rax>

3197:
old  <	mov eax, [rsi + 20]>
new  <>

3198:
old  <	add eax, 1900>
new  < strftime$341:>

3199:
old  <>
new  <	; Call strlen 136 0>

3200:
old  < strftime$332:>
new  <	mov qword [rbp + 136], strftime$342>

3201:
old  <	; Parameter signedint Â£temporary2406 176>
new  <	mov [rbp + 144], rbp>

3202:
old  <	mov [rbp + 176], eax>
new  <	add rbp, 136>

3203:
old  <>
new  <	jmp strlen>

3204:
old  < strftime$333:>
new  <>

3205:
old  <	; Call sprintf 136 4>
new  < strftime$342:>

3206:
old  <	mov qword [rbp + 136], strftime$334>
new  <	; PostCall 136>

3207:
old  <	mov [rbp + 144], rbp>
new  <>

3208:
old  <	add rbp, 136>
new  < strftime$343:>

3209:
old  <	mov rdi, rbp>
new  <	; GetReturnValue Â£temporary2416>

3210:
old  <	add rdi, 4>
new  <>

3211:
old  <	jmp sprintf>
new  < strftime$344:>

3212:
old  <>
new  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3213:
old  < strftime$334:>
new  <	mov [rbp + 136], ebx>

3214:
old  <	; PostCall 136>
new  <>

3215:
old  <>
new  < strftime$345:>

3216:
old  < strftime$335:>
new  <	; Parameter pointer add 160>

3217:
old  <	; Goto 355>
new  <	mov [rbp + 164], rbp>

3218:
old  <	jmp strftime$355>
new  <	add qword [rbp + 164], 116>

3220:
old  < strftime$336:>
new  < strftime$346:>

3221:
old  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Call strlen 136 0>

3222:
old  <>
new  <	mov qword [rbp + 140], strftime$347>

3223:
old  < strftime$337:>
new  <	mov [rbp + 148], rbp>

3224:
old  <	; Parameter pointer add 160>
new  <	add rbp, 140>

3225:
old  <	mov [rbp + 160], rbp>
new  <	jmp strlen>

3226:
old  <	add qword [rbp + 160], 116>
new  <>

3227:
old  <>
new  < strftime$347:>

3228:
old  < strftime$338:>
new  <	; PostCall 136>

3229:
old  <	; Parameter pointer "" 168>
new  <	mov ebx, [rbp + 136]>

3230:
old  <	mov qword [rbp + 168], string_#>
new  <	mov eax, ebx>

3232:
old  < strftime$339:>
new  < strftime$348:>

3233:
old  <	; Call strcpy 136 0>
new  <	; GetReturnValue Â£temporary2417>

3234:
old  <	mov qword [rbp + 136], strftime$340>
new  <>

3235:
old  <	mov [rbp + 144], rbp>
new  < strftime$349:>

3236:
old  <	add rbp, 136>
new  <	; BinaryAdd Â£temporary2418 Â£temporary2416 Â£temporary2417>

3237:
old  <	jmp strcpy>
new  <	add eax, ebx>

3239:
old  < strftime$340:>
new  < strftime$350:>

3240:
old  <	; PostCall 136>
new  <	; SignedGreaterThanEqual 358 Â£temporary2418 smax>

3241:
old  <>
new  <	cmp eax, [rbp + 32]>

3242:
old  < strftime$341:>
new  <	jge strftime$358>

3243:
old  <	; Goto 355>
new  <>

3244:
old  <	jmp strftime$355>
new  < strftime$351:>

3245:
old  <>
new  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3246:
old  < strftime$342:>
new  <>

3247:
old  <	; PreCall 136 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < strftime$352:>

3248:
old  <>
new  <	; Parameter pointer s 160>

3249:
old  < strftime$343:>
new  <	mov rax, [rbp + 24]>

3250:
old  <	; Parameter pointer add 160>
new  <	mov [rbp + 160], rax>

3251:
old  <	mov [rbp + 160], rbp>
new  <>

3252:
old  <	add qword [rbp + 160], 116>
new  < strftime$353:>

3253:
old  <>
new  <	; Parameter pointer add 168>

3254:
old  < strftime$344:>
new  <	mov [rbp + 168], rbp>

3255:
old  <	; Parameter pointer "%" 168>
new  <	add qword [rbp + 168], 116>

3256:
old  <	mov qword [rbp + 168], string_25#>
new  <>

3257:
old  <>
new  < strftime$354:>

3258:
old  < strftime$345:>
new  <	; Call strcat 136 0>

3259:
old  <	; Call strcpy 136 0>
new  <	mov qword [rbp + 136], strftime$355>

3260:
old  <	mov qword [rbp + 136], strftime$346>
new  <	mov [rbp + 144], rbp>

3261:
old  <	mov [rbp + 144], rbp>
new  <	add rbp, 136>

3262:
old  <	add rbp, 136>
new  <	jmp strcat>

3263:
old  <	jmp strcpy>
new  <>

3264:
old  <>
new  < strftime$355:>

3265:
old  < strftime$346:>
new  <	; PostCall 136>

3266:
old  <	; PostCall 136>
new  <>

3267:
old  <>
new  < strftime$356:>

3268:
old  < strftime$347:>
new  <	; BinaryAdd index index 1>

3269:
old  <	; Goto 355>
new  <	inc dword [rbp + 112]>

3270:
old  <	jmp strftime$355>
new  <>

3271:
old  <>
new  < strftime$357:>

3272:
old  < strftime$348:>
new  <	; Goto 84>

3273:
old  <	; Dereference Â£temporary2410 -> add add 0>
new  <	jmp strftime$84>

3274:
old  <	mov rsi, rbp>
new  <>

3275:
old  <	add rsi, 116>
new  < strftime$358:>

3276:
old  <>
new  <	; PreCall 116 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

3277:
old  < strftime$349:>
new  <>

3278:
old  <	; IntegralToIntegral Â£temporary2412 index>
new  < strftime$359:>

3279:
old  <	mov eax, [rbp + 112]>
new  <	; Parameter pointer s 140>

3280:
old  <	mov rbx, 4294967295>
new  <	mov rax, [rbp + 24]>

3281:
old  <	and rax, rbx>
new  <	mov [rbp + 140], rax>

3283:
old  < strftime$350:>
new  < strftime$360:>

3284:
old  <	; BinaryAdd Â£temporary2414 fmt Â£temporary2412>
new  <	; Call strlen 116 0>

3285:
old  <	mov rdi, [rbp + 36]>
new  <	mov qword [rbp + 116], strftime$361>

3286:
old  <	add rdi, rax>
new  <	mov [rbp + 124], rbp>

3287:
old  <>
new  <	add rbp, 116>

3288:
old  < strftime$351:>
new  <	jmp strlen>

3289:
old  <	; Dereference Â£temporary2411 -> Â£temporary2414 Â£temporary2414 0>
new  <>

3290:
old  <>
new  < strftime$361:>

3291:
old  < strftime$352:>
new  <	; PostCall 116>

3292:
old  <	; Assign Â£temporary2410 -> add Â£temporary2411 -> Â£temporary2414>
new  <>

3293:
old  <	mov al, [rdi]>
new  < strftime$362:>

3294:
old  <	mov [rsi], al>
new  <	; GetReturnValue Â£temporary2421>

3296:
old  < strftime$353:>
new  < strftime$363:>

3297:
old  <	; Dereference Â£temporary2415 -> add add 0>
new  <	; Return Â£temporary2421>

3298:
old  <	mov rsi, rbp>
new  <	mov rax, [rbp]>

3299:
old  <	add rsi, 116>
new  <	mov rdi, [rbp + 16]>

3300:
old  <>
new  <	mov rbp, [rbp + 8]>

3301:
old  < strftime$354:>
new  <	jmp rax>

3302:
old  <	; Assign Â£temporary2415 -> add 0>
new  <>

3303:
old  <	mov byte [rsi + 1], 0>
new  < strftime$364:>

3304:
old  <>
new  <	; FunctionEnd strftime>

31:
old  <	; Empty>
new  <	; Assign index 0>

32:
old  <>
new  <	mov dword [rbp + 40], 0>

33:
old  < strcpy$1:>
new  <>

34:
old  <	; Assign index 0>
new  < strcpy$1:>

35:
old  <	mov dword [rbp + 40], 0>
new  <	; IntegralToIntegral Â£temporary2423 index>

36:
old  <>
new  <	mov eax, [rbp + 40]>

37:
old  < strcpy$2:>
new  <	mov rbx, 4294967295>

38:
old  <	; IntegralToIntegral Â£temporary2423 index>
new  <	and rax, rbx>

39:
old  <	mov eax, [rbp + 40]>
new  <>

40:
old  <	mov rbx, 4294967295>
new  < strcpy$2:>

41:
old  <	and rax, rbx>
new  <	; BinaryAdd Â£temporary2425 source Â£temporary2423>

42:
old  <>
new  <	mov rsi, [rbp + 32]>

43:
old  < strcpy$3:>
new  <	add rsi, rax>

44:
old  <	; BinaryAdd Â£temporary2425 source Â£temporary2423>
new  <>

45:
old  <	mov rsi, [rbp + 32]>
new  < strcpy$3:>

46:
old  <	add rsi, rax>
new  <	; Dereference Â£temporary2422 -> Â£temporary2425 Â£temporary2425 0>

49:
old  <	; Dereference Â£temporary2422 -> Â£temporary2425 Â£temporary2425 0>
new  <	; Equal 14 Â£temporary2422 -> Â£temporary2425 0>

50:
old  <>
new  <	cmp byte [rsi], 0>

51:
old  < strcpy$5:>
new  <	je strcpy$14>

52:
old  <	; Equal 15 Â£temporary2422 -> Â£temporary2425 0>
new  <>

53:
old  <	cmp byte [rsi], 0>
new  < strcpy$5:>

54:
old  <	je strcpy$15>
new  <	; IntegralToIntegral Â£temporary2429 index>

55:
old  <>
new  <	mov eax, [rbp + 40]>

56:
old  < strcpy$6:>
new  <	mov rbx, 4294967295>

57:
old  <	; IntegralToIntegral Â£temporary2429 index>
new  <	and rax, rbx>

58:
old  <	mov eax, [rbp + 40]>
new  <>

59:
old  <	mov rbx, 4294967295>
new  < strcpy$6:>

60:
old  <	and rax, rbx>
new  <	; BinaryAdd Â£temporary2431 target Â£temporary2429>

61:
old  <>
new  <	mov rsi, [rbp + 24]>

62:
old  < strcpy$7:>
new  <	add rsi, rax>

63:
old  <	; BinaryAdd Â£temporary2431 target Â£temporary2429>
new  <>

64:
old  <	mov rsi, [rbp + 24]>
new  < strcpy$7:>

65:
old  <	add rsi, rax>
new  <	; Dereference Â£temporary2428 -> Â£temporary2431 Â£temporary2431 0>

68:
old  <	; Dereference Â£temporary2428 -> Â£temporary2431 Â£temporary2431 0>
new  <	; IntegralToIntegral Â£temporary2433 index>

69:
old  <>
new  <	mov eax, [rbp + 40]>

70:
old  < strcpy$9:>
new  <	mov rbx, 4294967295>

71:
old  <	; IntegralToIntegral Â£temporary2433 index>
new  <	and rax, rbx>

72:
old  <	mov eax, [rbp + 40]>
new  <>

73:
old  <	mov rbx, 4294967295>
new  < strcpy$9:>

74:
old  <	and rax, rbx>
new  <	; BinaryAdd Â£temporary2435 source Â£temporary2433>

75:
old  <>
new  <	mov rdi, [rbp + 32]>

76:
old  < strcpy$10:>
new  <	add rdi, rax>

77:
old  <	; BinaryAdd Â£temporary2435 source Â£temporary2433>
new  <>

78:
old  <	mov rdi, [rbp + 32]>
new  < strcpy$10:>

79:
old  <	add rdi, rax>
new  <	; Dereference Â£temporary2432 -> Â£temporary2435 Â£temporary2435 0>

82:
old  <	; Dereference Â£temporary2432 -> Â£temporary2435 Â£temporary2435 0>
new  <	; Assign Â£temporary2428 -> Â£temporary2431 Â£temporary2432 -> Â£temporary2435>

83:
old  <>
new  <	mov al, [rdi]>

84:
old  < strcpy$12:>
new  <	mov [rsi], al>

85:
old  <	; Assign Â£temporary2428 -> Â£temporary2431 Â£temporary2432 -> Â£temporary2435>
new  <>

86:
old  <	mov al, [rdi]>
new  < strcpy$12:>

87:
old  <	mov [rsi], al>
new  <	; BinaryAdd index index 1>

88:
old  <>
new  <	inc dword [rbp + 40]>

89:
old  < strcpy$13:>
new  <>

90:
old  <	; BinaryAdd index index 1>
new  < strcpy$13:>

91:
old  <	inc dword [rbp + 40]>
new  <	; Goto 1>

92:
old  <>
new  <	jmp strcpy$1>

93:
old  < strcpy$14:>
new  <>

94:
old  <	; Goto 2>
new  < strcpy$14:>

95:
old  <	jmp strcpy$2>
new  <	; IntegralToIntegral Â£temporary2437 index>

96:
old  <>
new  <	mov eax, [rbp + 40]>

97:
old  < strcpy$15:>
new  <	mov rbx, 4294967295>

98:
old  <	; IntegralToIntegral Â£temporary2437 index>
new  <	and rax, rbx>

99:
old  <	mov eax, [rbp + 40]>
new  <>

100:
old  <	mov rbx, 4294967295>
new  < strcpy$15:>

101:
old  <	and rax, rbx>
new  <	; BinaryAdd Â£temporary2439 target Â£temporary2437>

102:
old  <>
new  <	mov rsi, [rbp + 24]>

103:
old  < strcpy$16:>
new  <	add rsi, rax>

104:
old  <	; BinaryAdd Â£temporary2439 target Â£temporary2437>
new  <>

105:
old  <	mov rsi, [rbp + 24]>
new  < strcpy$16:>

106:
old  <	add rsi, rax>
new  <	; Dereference Â£temporary2436 -> Â£temporary2439 Â£temporary2439 0>

109:
old  <	; Dereference Â£temporary2436 -> Â£temporary2439 Â£temporary2439 0>
new  <	; Assign Â£temporary2436 -> Â£temporary2439 0>

110:
old  <>
new  <	mov byte [rsi], 0>

111:
old  < strcpy$18:>
new  <>

112:
old  <	; Assign Â£temporary2436 -> Â£temporary2439 0>
new  < strcpy$18:>

113:
old  <	mov byte [rsi], 0>
new  <	; Return target>

114:
old  <>
new  <	mov rbx, [rbp + 24]>

115:
old  < strcpy$19:>
new  <	mov rax, [rbp]>

116:
old  <	; Return target>
new  <	mov rdi, [rbp + 16]>

117:
old  <	mov rbx, [rbp + 24]>
new  <	mov rbp, [rbp + 8]>

118:
old  <	mov rax, [rbp]>
new  <	jmp rax>

119:
old  <	mov rdi, [rbp + 16]>
new  <>

120:
old  <	mov rbp, [rbp + 8]>
new  < strcpy$19:>

121:
old  <	jmp rax>
new  <	; FunctionEnd strcpy>

123:
old  < strcpy$20:>
new  <section .text>

124:
old  <	; FunctionEnd strcpy>
new  <>

125:
old  <>
new  < strncpy:>

126:
old  <section .text>
new  <	; Assign index 0>

127:
old  <>
new  <	mov dword [rbp + 44], 0>

128:
old  < strncpy:>
new  <>

129:
old  <	; Empty>
new  < strncpy$1:>

130:
old  <>
new  <	; SignedGreaterThanEqual 15 index size>

131:
old  < strncpy$1:>
new  <	mov eax, [rbp + 40]>

132:
old  <	; Assign index 0>
new  <	cmp [rbp + 44], eax>

133:
old  <	mov dword [rbp + 44], 0>
new  <	jge strncpy$15>

136:
old  <	; SignedGreaterThanEqual 16 index size>
new  <	; IntegralToIntegral Â£temporary2442 index>

137:
old  <	mov eax, [rbp + 40]>
new  <	mov eax, [rbp + 44]>

138:
old  <	cmp [rbp + 44], eax>
new  <	mov rbx, 4294967295>

139:
old  <	jge strncpy$16>
new  <	and rax, rbx>

142:
old  <	; IntegralToIntegral Â£temporary2442 index>
new  <	; BinaryAdd Â£temporary2444 source Â£temporary2442>

143:
old  <	mov eax, [rbp + 44]>
new  <	mov rsi, [rbp + 32]>

144:
old  <	mov rbx, 4294967295>
new  <	add rsi, rax>

145:
old  <	and rax, rbx>
new  <>

146:
old  <>
new  < strncpy$4:>

147:
old  < strncpy$4:>
new  <	; Dereference Â£temporary2441 -> Â£temporary2444 Â£temporary2444 0>

148:
old  <	; BinaryAdd Â£temporary2444 source Â£temporary2442>
new  <>

149:
old  <	mov rsi, [rbp + 32]>
new  < strncpy$5:>

150:
old  <	add rsi, rax>
new  <	; Equal 15 Â£temporary2441 -> Â£temporary2444 0>

151:
old  <>
new  <	cmp byte [rsi], 0>

152:
old  < strncpy$5:>
new  <	je strncpy$15>

153:
old  <	; Dereference Â£temporary2441 -> Â£temporary2444 Â£temporary2444 0>
new  <>

154:
old  <>
new  < strncpy$6:>

155:
old  < strncpy$6:>
new  <	; IntegralToIntegral Â£temporary2449 index>

156:
old  <	; Equal 16 Â£temporary2441 -> Â£temporary2444 0>
new  <	mov eax, [rbp + 44]>

157:
old  <	cmp byte [rsi], 0>
new  <	mov rbx, 4294967295>

158:
old  <	je strncpy$16>
new  <	and rax, rbx>

161:
old  <	; IntegralToIntegral Â£temporary2449 index>
new  <	; BinaryAdd Â£temporary2451 target Â£temporary2449>

162:
old  <	mov eax, [rbp + 44]>
new  <	mov rsi, [rbp + 24]>

163:
old  <	mov rbx, 4294967295>
new  <	add rsi, rax>

164:
old  <	and rax, rbx>
new  <>

165:
old  <>
new  < strncpy$8:>

166:
old  < strncpy$8:>
new  <	; Dereference Â£temporary2448 -> Â£temporary2451 Â£temporary2451 0>

167:
old  <	; BinaryAdd Â£temporary2451 target Â£temporary2449>
new  <>

168:
old  <	mov rsi, [rbp + 24]>
new  < strncpy$9:>

169:
old  <	add rsi, rax>
new  <	; IntegralToIntegral Â£temporary2453 index>

170:
old  <>
new  <	mov eax, [rbp + 44]>

171:
old  < strncpy$9:>
new  <	mov rbx, 4294967295>

172:
old  <	; Dereference Â£temporary2448 -> Â£temporary2451 Â£temporary2451 0>
new  <	and rax, rbx>

175:
old  <	; IntegralToIntegral Â£temporary2453 index>
new  <	; BinaryAdd Â£temporary2455 source Â£temporary2453>

176:
old  <	mov eax, [rbp + 44]>
new  <	mov rdi, [rbp + 32]>

177:
old  <	mov rbx, 4294967295>
new  <	add rdi, rax>

178:
old  <	and rax, rbx>
new  <>

179:
old  <>
new  < strncpy$11:>

180:
old  < strncpy$11:>
new  <	; Dereference Â£temporary2452 -> Â£temporary2455 Â£temporary2455 0>

181:
old  <	; BinaryAdd Â£temporary2455 source Â£temporary2453>
new  <>

182:
old  <	mov rdi, [rbp + 32]>
new  < strncpy$12:>

183:
old  <	add rdi, rax>
new  <	; Assign Â£temporary2448 -> Â£temporary2451 Â£temporary2452 -> Â£temporary2455>

184:
old  <>
new  <	mov al, [rdi]>

185:
old  < strncpy$12:>
new  <	mov [rsi], al>

186:
old  <	; Dereference Â£temporary2452 -> Â£temporary2455 Â£temporary2455 0>
new  <>

187:
old  <>
new  < strncpy$13:>

188:
old  < strncpy$13:>
new  <	; BinaryAdd index index 1>

189:
old  <	; Assign Â£temporary2448 -> Â£temporary2451 Â£temporary2452 -> Â£temporary2455>
new  <	inc dword [rbp + 44]>

190:
old  <	mov al, [rdi]>
new  <>

191:
old  <	mov [rsi], al>
new  < strncpy$14:>

192:
old  <>
new  <	; Goto 1>

193:
old  < strncpy$14:>
new  <	jmp strncpy$1>

194:
old  <	; BinaryAdd index index 1>
new  <>

195:
old  <	inc dword [rbp + 44]>
new  < strncpy$15:>

196:
old  <>
new  <	; SignedGreaterThanEqual 22 index size>

197:
old  < strncpy$15:>
new  <	mov eax, [rbp + 40]>

198:
old  <	; Goto 2>
new  <	cmp [rbp + 44], eax>

199:
old  <	jmp strncpy$2>
new  <	jge strncpy$22>

202:
old  <	; SignedGreaterThanEqual 23 index size>
new  <	; IntegralToIntegral Â£temporary2459 index>

203:
old  <	mov eax, [rbp + 40]>
new  <	mov eax, [rbp + 44]>

204:
old  <	cmp [rbp + 44], eax>
new  <	mov rbx, 4294967295>

205:
old  <	jge strncpy$23>
new  <	and rax, rbx>

208:
old  <	; IntegralToIntegral Â£temporary2459 index>
new  <	; BinaryAdd Â£temporary2461 target Â£temporary2459>

209:
old  <	mov eax, [rbp + 44]>
new  <	mov rsi, [rbp + 24]>

210:
old  <	mov rbx, 4294967295>
new  <	add rsi, rax>

211:
old  <	and rax, rbx>
new  <>

212:
old  <>
new  < strncpy$18:>

213:
old  < strncpy$18:>
new  <	; Dereference Â£temporary2458 -> Â£temporary2461 Â£temporary2461 0>

214:
old  <	; BinaryAdd Â£temporary2461 target Â£temporary2459>
new  <>

215:
old  <	mov rsi, [rbp + 24]>
new  < strncpy$19:>

216:
old  <	add rsi, rax>
new  <	; Assign Â£temporary2458 -> Â£temporary2461 0>

217:
old  <>
new  <	mov byte [rsi], 0>

218:
old  < strncpy$19:>
new  <>

219:
old  <	; Dereference Â£temporary2458 -> Â£temporary2461 Â£temporary2461 0>
new  < strncpy$20:>

220:
old  <>
new  <	; BinaryAdd index index 1>

221:
old  < strncpy$20:>
new  <	inc dword [rbp + 44]>

222:
old  <	; Assign Â£temporary2458 -> Â£temporary2461 0>
new  <>

223:
old  <	mov byte [rsi], 0>
new  < strncpy$21:>

224:
old  <>
new  <	; Goto 15>

225:
old  < strncpy$21:>
new  <	jmp strncpy$15>

226:
old  <	; BinaryAdd index index 1>
new  <>

227:
old  <	inc dword [rbp + 44]>
new  < strncpy$22:>

228:
old  <>
new  <	; Return target>

229:
old  < strncpy$22:>
new  <	mov rbx, [rbp + 24]>

230:
old  <	; Goto 16>
new  <	mov rax, [rbp]>

231:
old  <	jmp strncpy$16>
new  <	mov rdi, [rbp + 16]>

232:
old  <>
new  <	mov rbp, [rbp + 8]>

233:
old  < strncpy$23:>
new  <	jmp rax>

234:
old  <	; Return target>
new  <>

235:
old  <	mov rbx, [rbp + 24]>
new  < strncpy$23:>

236:
old  <	mov rax, [rbp]>
new  <	; FunctionEnd strncpy>

237:
old  <	mov rdi, [rbp + 16]>
new  <>

238:
old  <	mov rbp, [rbp + 8]>
new  <section .text>

239:
old  <	jmp rax>
new  <>

240:
old  <>
new  < strcat:>

241:
old  < strncpy$24:>
new  <	; PreCall 44 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

242:
old  <	; FunctionEnd strncpy>
new  <>

243:
old  <>
new  < strcat$1:>

244:
old  <section .text>
new  <	; Parameter pointer target 68>

245:
old  <>
new  <	mov rax, [rbp + 24]>

246:
old  < strcat:>
new  <	mov [rbp + 68], rax>

247:
old  <	; Empty>
new  <>

248:
old  <>
new  < strcat$2:>

249:
old  < strcat$1:>
new  <	; Call strlen 44 0>

250:
old  <	; PreCall 44 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov qword [rbp + 44], strcat$3>

251:
old  <>
new  <	mov [rbp + 52], rbp>

252:
old  < strcat$2:>
new  <	add rbp, 44>

253:
old  <	; Parameter pointer target 68>
new  <	jmp strlen>

254:
old  <	mov rax, [rbp + 24]>
new  <>

255:
old  <	mov [rbp + 68], rax>
new  < strcat$3:>

256:
old  <>
new  <	; PostCall 44>

257:
old  < strcat$3:>
new  <>

258:
old  <	; Call strlen 44 0>
new  < strcat$4:>

259:
old  <	mov qword [rbp + 44], strcat$4>
new  <	; GetReturnValue Â£temporary2462>

260:
old  <	mov [rbp + 52], rbp>
new  <>

261:
old  <	add rbp, 44>
new  < strcat$5:>

262:
old  <	jmp strlen>
new  <	; Assign targetLength Â£temporary2462>

263:
old  <>
new  <	mov [rbp + 44], ebx>

264:
old  < strcat$4:>
new  <>

265:
old  <	; PostCall 44>
new  < strcat$6:>

266:
old  <>
new  <	; Assign index 0>

267:
old  < strcat$5:>
new  <	mov dword [rbp + 40], 0>

268:
old  <	; GetReturnValue Â£temporary2462>
new  <>

269:
old  <>
new  < strcat$7:>

270:
old  < strcat$6:>
new  <	; IntegralToIntegral Â£temporary2464 index>

271:
old  <	; Assign targetLength Â£temporary2462>
new  <	mov eax, [rbp + 40]>

272:
old  <	mov [rbp + 44], ebx>
new  <	mov rbx, 4294967295>

273:
old  <>
new  <	and rax, rbx>

274:
old  < strcat$7:>
new  <>

275:
old  <	; Assign index 0>
new  < strcat$8:>

276:
old  <	mov dword [rbp + 40], 0>
new  <	; BinaryAdd Â£temporary2466 source Â£temporary2464>

277:
old  <>
new  <	mov rsi, [rbp + 32]>

278:
old  < strcat$8:>
new  <	add rsi, rax>

279:
old  <	; IntegralToIntegral Â£temporary2464 index>
new  <>

280:
old  <	mov eax, [rbp + 40]>
new  < strcat$9:>

281:
old  <	mov rbx, 4294967295>
new  <	; Dereference Â£temporary2463 -> Â£temporary2466 Â£temporary2466 0>

282:
old  <	and rax, rbx>
new  <>

283:
old  <>
new  < strcat$10:>

284:
old  < strcat$9:>
new  <	; Equal 21 Â£temporary2463 -> Â£temporary2466 0>

285:
old  <	; BinaryAdd Â£temporary2466 source Â£temporary2464>
new  <	cmp byte [rsi], 0>

286:
old  <	mov rsi, [rbp + 32]>
new  <	je strcat$21>

287:
old  <	add rsi, rax>
new  <>

288:
old  <>
new  < strcat$11:>

289:
old  < strcat$10:>
new  <	; BinaryAdd Â£temporary2469 targetLength index>

290:
old  <	; Dereference Â£temporary2463 -> Â£temporary2466 Â£temporary2466 0>
new  <	mov eax, [rbp + 44]>

291:
old  <>
new  <	add eax, [rbp + 40]>

292:
old  < strcat$11:>
new  <>

293:
old  <	; Equal 22 Â£temporary2463 -> Â£temporary2466 0>
new  < strcat$12:>

294:
old  <	cmp byte [rsi], 0>
new  <	; IntegralToIntegral Â£temporary2471 Â£temporary2469>

295:
old  <	je strcat$22>
new  <	mov rbx, 4294967295>

296:
old  <>
new  <	and rax, rbx>

297:
old  < strcat$12:>
new  <>

298:
old  <	; BinaryAdd Â£temporary2469 targetLength index>
new  < strcat$13:>

299:
old  <	mov eax, [rbp + 44]>
new  <	; BinaryAdd Â£temporary2473 target Â£temporary2471>

300:
old  <	add eax, [rbp + 40]>
new  <	mov rsi, [rbp + 24]>

301:
old  <>
new  <	add rsi, rax>

302:
old  < strcat$13:>
new  <>

303:
old  <	; IntegralToIntegral Â£temporary2471 Â£temporary2469>
new  < strcat$14:>

304:
old  <	mov rbx, 4294967295>
new  <	; Dereference Â£temporary2470 -> Â£temporary2473 Â£temporary2473 0>

305:
old  <	and rax, rbx>
new  <>

306:
old  <>
new  < strcat$15:>

307:
old  < strcat$14:>
new  <	; IntegralToIntegral Â£temporary2475 index>

308:
old  <	; BinaryAdd Â£temporary2473 target Â£temporary2471>
new  <	mov eax, [rbp + 40]>

309:
old  <	mov rsi, [rbp + 24]>
new  <	mov rbx, 4294967295>

310:
old  <	add rsi, rax>
new  <	and rax, rbx>

312:
old  < strcat$15:>
new  < strcat$16:>

313:
old  <	; Dereference Â£temporary2470 -> Â£temporary2473 Â£temporary2473 0>
new  <	; BinaryAdd Â£temporary2477 source Â£temporary2475>

314:
old  <>
new  <	mov rdi, [rbp + 32]>

315:
old  < strcat$16:>
new  <	add rdi, rax>

316:
old  <	; IntegralToIntegral Â£temporary2475 index>
new  <>

317:
old  <	mov eax, [rbp + 40]>
new  < strcat$17:>

318:
old  <	mov rbx, 4294967295>
new  <	; Dereference Â£temporary2474 -> Â£temporary2477 Â£temporary2477 0>

319:
old  <	and rax, rbx>
new  <>

320:
old  <>
new  < strcat$18:>

321:
old  < strcat$17:>
new  <	; Assign Â£temporary2470 -> Â£temporary2473 Â£temporary2474 -> Â£temporary2477>

322:
old  <	; BinaryAdd Â£temporary2477 source Â£temporary2475>
new  <	mov al, [rdi]>

323:
old  <	mov rdi, [rbp + 32]>
new  <	mov [rsi], al>

324:
old  <	add rdi, rax>
new  <>

325:
old  <>
new  < strcat$19:>

326:
old  < strcat$18:>
new  <	; BinaryAdd index index 1>

327:
old  <	; Dereference Â£temporary2474 -> Â£temporary2477 Â£temporary2477 0>
new  <	inc dword [rbp + 40]>

329:
old  < strcat$19:>
new  < strcat$20:>

330:
old  <	; Assign Â£temporary2470 -> Â£temporary2473 Â£temporary2474 -> Â£temporary2477>
new  <	; Goto 7>

331:
old  <	mov al, [rdi]>
new  <	jmp strcat$7>

332:
old  <	mov [rsi], al>
new  <>

333:
old  <>
new  < strcat$21:>

334:
old  < strcat$20:>
new  <	; BinaryAdd Â£temporary2478 targetLength index>

335:
old  <	; BinaryAdd index index 1>
new  <	mov eax, [rbp + 44]>

336:
old  <	inc dword [rbp + 40]>
new  <	add eax, [rbp + 40]>

338:
old  < strcat$21:>
new  < strcat$22:>

339:
old  <	; Goto 8>
new  <	; IntegralToIntegral Â£temporary2480 Â£temporary2478>

340:
old  <	jmp strcat$8>
new  <	mov rbx, 4294967295>

341:
old  <>
new  <	and rax, rbx>

342:
old  < strcat$22:>
new  <>

343:
old  <	; BinaryAdd Â£temporary2478 targetLength index>
new  < strcat$23:>

344:
old  <	mov eax, [rbp + 44]>
new  <	; BinaryAdd Â£temporary2482 target Â£temporary2480>

345:
old  <	add eax, [rbp + 40]>
new  <	mov rsi, [rbp + 24]>

346:
old  <>
new  <	add rsi, rax>

347:
old  < strcat$23:>
new  <>

348:
old  <	; IntegralToIntegral Â£temporary2480 Â£temporary2478>
new  < strcat$24:>

349:
old  <	mov rbx, 4294967295>
new  <	; Dereference Â£temporary2479 -> Â£temporary2482 Â£temporary2482 0>

350:
old  <	and rax, rbx>
new  <>

351:
old  <>
new  < strcat$25:>

352:
old  < strcat$24:>
new  <	; Assign Â£temporary2479 -> Â£temporary2482 0>

353:
old  <	; BinaryAdd Â£temporary2482 target Â£temporary2480>
new  <	mov byte [rsi], 0>

354:
old  <	mov rsi, [rbp + 24]>
new  <>

355:
old  <	add rsi, rax>
new  < strcat$26:>

356:
old  <>
new  <	; Return target>

357:
old  < strcat$25:>
new  <	mov rbx, [rbp + 24]>

358:
old  <	; Dereference Â£temporary2479 -> Â£temporary2482 Â£temporary2482 0>
new  <	mov rax, [rbp]>

359:
old  <>
new  <	mov rdi, [rbp + 16]>

360:
old  < strcat$26:>
new  <	mov rbp, [rbp + 8]>

361:
old  <	; Assign Â£temporary2479 -> Â£temporary2482 0>
new  <	jmp rax>

362:
old  <	mov byte [rsi], 0>
new  <>

363:
old  <>
new  < strcat$27:>

364:
old  < strcat$27:>
new  <	; FunctionEnd strcat>

365:
old  <	; Return target>
new  <>

366:
old  <	mov rbx, [rbp + 24]>
new  <section .text>

367:
old  <	mov rax, [rbp]>
new  <>

368:
old  <	mov rdi, [rbp + 16]>
new  < strncat:>

369:
old  <	mov rbp, [rbp + 8]>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

370:
old  <	jmp rax>
new  <>

371:
old  <>
new  < strncat$1:>

372:
old  < strcat$28:>
new  <	; Parameter pointer target 72>

373:
old  <	; FunctionEnd strcat>
new  <	mov rax, [rbp + 24]>

374:
old  <>
new  <	mov [rbp + 72], rax>

375:
old  <section .text>
new  <>

376:
old  <>
new  < strncat$2:>

377:
old  < strncat:>
new  <	; Call strlen 48 0>

378:
old  <	; Empty>
new  <	mov qword [rbp + 48], strncat$3>

379:
old  <>
new  <	mov [rbp + 56], rbp>

380:
old  < strncat$1:>
new  <	add rbp, 48>

381:
old  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	jmp strlen>

383:
old  < strncat$2:>
new  < strncat$3:>

384:
old  <	; Parameter pointer target 72>
new  <	; PostCall 48>

385:
old  <	mov rax, [rbp + 24]>
new  <>

386:
old  <	mov [rbp + 72], rax>
new  < strncat$4:>

387:
old  <>
new  <	; GetReturnValue Â£temporary2483>

388:
old  < strncat$3:>
new  <>

389:
old  <	; Call strlen 48 0>
new  < strncat$5:>

390:
old  <	mov qword [rbp + 48], strncat$4>
new  <	; Assign targetLength Â£temporary2483>

391:
old  <	mov [rbp + 56], rbp>
new  <	mov [rbp + 48], ebx>

392:
old  <	add rbp, 48>
new  <>

393:
old  <	jmp strlen>
new  < strncat$6:>

394:
old  <>
new  <	; Assign index 0>

395:
old  < strncat$4:>
new  <	mov dword [rbp + 44], 0>

396:
old  <	; PostCall 48>
new  <>

397:
old  <>
new  < strncat$7:>

398:
old  < strncat$5:>
new  <	; BinarySubtract Â£temporary2484 size 1>

399:
old  <	; GetReturnValue Â£temporary2483>
new  <	mov eax, [rbp + 40]>

400:
old  <>
new  <	dec eax>

401:
old  < strncat$6:>
new  <>

402:
old  <	; Assign targetLength Â£temporary2483>
new  < strncat$8:>

403:
old  <	mov [rbp + 48], ebx>
new  <	; SignedGreaterThanEqual 23 index Â£temporary2484>

404:
old  <>
new  <	cmp [rbp + 44], eax>

405:
old  < strncat$7:>
new  <	jge strncat$23>

406:
old  <	; Assign index 0>
new  <>

407:
old  <	mov dword [rbp + 44], 0>
new  < strncat$9:>

408:
old  <>
new  <	; IntegralToIntegral Â£temporary2487 index>

409:
old  < strncat$8:>
new  <	mov eax, [rbp + 44]>

410:
old  <	; BinarySubtract Â£temporary2484 size 1>
new  <	mov rbx, 4294967295>

411:
old  <	mov eax, [rbp + 40]>
new  <	and rax, rbx>

412:
old  <	dec eax>
new  <>

413:
old  <>
new  < strncat$10:>

414:
old  < strncat$9:>
new  <	; BinaryAdd Â£temporary2489 source Â£temporary2487>

415:
old  <	; SignedGreaterThanEqual 24 index Â£temporary2484>
new  <	mov rsi, [rbp + 32]>

416:
old  <	cmp [rbp + 44], eax>
new  <	add rsi, rax>

417:
old  <	jge strncat$24>
new  <>

418:
old  <>
new  < strncat$11:>

419:
old  < strncat$10:>
new  <	; Dereference Â£temporary2486 -> Â£temporary2489 Â£temporary2489 0>

420:
old  <	; IntegralToIntegral Â£temporary2487 index>
new  <>

421:
old  <	mov eax, [rbp + 44]>
new  < strncat$12:>

422:
old  <	mov rbx, 4294967295>
new  <	; Equal 23 Â£temporary2486 -> Â£temporary2489 0>

423:
old  <	and rax, rbx>
new  <	cmp byte [rsi], 0>

424:
old  <>
new  <	je strncat$23>

425:
old  < strncat$11:>
new  <>

426:
old  <	; BinaryAdd Â£temporary2489 source Â£temporary2487>
new  < strncat$13:>

427:
old  <	mov rsi, [rbp + 32]>
new  <	; BinaryAdd Â£temporary2493 targetLength index>

428:
old  <	add rsi, rax>
new  <	mov eax, [rbp + 48]>

429:
old  <>
new  <	add eax, [rbp + 44]>

430:
old  < strncat$12:>
new  <>

431:
old  <	; Dereference Â£temporary2486 -> Â£temporary2489 Â£temporary2489 0>
new  < strncat$14:>

432:
old  <>
new  <	; IntegralToIntegral Â£temporary2495 Â£temporary2493>

433:
old  < strncat$13:>
new  <	mov rbx, 4294967295>

434:
old  <	; Equal 24 Â£temporary2486 -> Â£temporary2489 0>
new  <	and rax, rbx>

435:
old  <	cmp byte [rsi], 0>
new  <>

436:
old  <	je strncat$24>
new  < strncat$15:>

437:
old  <>
new  <	; BinaryAdd Â£temporary2497 target Â£temporary2495>

438:
old  < strncat$14:>
new  <	mov rsi, [rbp + 24]>

439:
old  <	; BinaryAdd Â£temporary2493 targetLength index>
new  <	add rsi, rax>

440:
old  <	mov eax, [rbp + 48]>
new  <>

441:
old  <	add eax, [rbp + 44]>
new  < strncat$16:>

442:
old  <>
new  <	; Dereference Â£temporary2494 -> Â£temporary2497 Â£temporary2497 0>

443:
old  < strncat$15:>
new  <>

444:
old  <	; IntegralToIntegral Â£temporary2495 Â£temporary2493>
new  < strncat$17:>

445:
old  <	mov rbx, 4294967295>
new  <	; IntegralToIntegral Â£temporary2499 index>

446:
old  <	and rax, rbx>
new  <	mov eax, [rbp + 44]>

447:
old  <>
new  <	mov rbx, 4294967295>

448:
old  < strncat$16:>
new  <	and rax, rbx>

449:
old  <	; BinaryAdd Â£temporary2497 target Â£temporary2495>
new  <>

450:
old  <	mov rsi, [rbp + 24]>
new  < strncat$18:>

451:
old  <	add rsi, rax>
new  <	; BinaryAdd Â£temporary2501 source Â£temporary2499>

452:
old  <>
new  <	mov rdi, [rbp + 32]>

453:
old  < strncat$17:>
new  <	add rdi, rax>

454:
old  <	; Dereference Â£temporary2494 -> Â£temporary2497 Â£temporary2497 0>
new  <>

455:
old  <>
new  < strncat$19:>

456:
old  < strncat$18:>
new  <	; Dereference Â£temporary2498 -> Â£temporary2501 Â£temporary2501 0>

457:
old  <	; IntegralToIntegral Â£temporary2499 index>
new  <>

458:
old  <	mov eax, [rbp + 44]>
new  < strncat$20:>

459:
old  <	mov rbx, 4294967295>
new  <	; Assign Â£temporary2494 -> Â£temporary2497 Â£temporary2498 -> Â£temporary2501>

460:
old  <	and rax, rbx>
new  <	mov al, [rdi]>

461:
old  <>
new  <	mov [rsi], al>

462:
old  < strncat$19:>
new  <>

463:
old  <	; BinaryAdd Â£temporary2501 source Â£temporary2499>
new  < strncat$21:>

464:
old  <	mov rdi, [rbp + 32]>
new  <	; BinaryAdd index index 1>

465:
old  <	add rdi, rax>
new  <	inc dword [rbp + 44]>

467:
old  < strncat$20:>
new  < strncat$22:>

468:
old  <	; Dereference Â£temporary2498 -> Â£temporary2501 Â£temporary2501 0>
new  <	; Goto 7>

469:
old  <>
new  <	jmp strncat$7>

470:
old  < strncat$21:>
new  <>

471:
old  <	; Assign Â£temporary2494 -> Â£temporary2497 Â£temporary2498 -> Â£temporary2501>
new  < strncat$23:>

472:
old  <	mov al, [rdi]>
new  <	; BinaryAdd Â£temporary2502 targetLength size>

473:
old  <	mov [rsi], al>
new  <	mov eax, [rbp + 48]>

474:
old  <>
new  <	add eax, [rbp + 40]>

475:
old  < strncat$22:>
new  <>

476:
old  <	; BinaryAdd index index 1>
new  < strncat$24:>

477:
old  <	inc dword [rbp + 44]>
new  <	; BinarySubtract Â£temporary2503 Â£temporary2502 1>

478:
old  <>
new  <	dec eax>

479:
old  < strncat$23:>
new  <>

480:
old  <	; Goto 8>
new  < strncat$25:>

481:
old  <	jmp strncat$8>
new  <	; IntegralToIntegral Â£temporary2505 Â£temporary2503>

482:
old  <>
new  <	mov rbx, 4294967295>

483:
old  < strncat$24:>
new  <	and rax, rbx>

484:
old  <	; BinaryAdd Â£temporary2502 targetLength size>
new  <>

485:
old  <	mov eax, [rbp + 48]>
new  < strncat$26:>

486:
old  <	add eax, [rbp + 40]>
new  <	; BinaryAdd Â£temporary2507 target Â£temporary2505>

487:
old  <>
new  <	mov rsi, [rbp + 24]>

488:
old  < strncat$25:>
new  <	add rsi, rax>

489:
old  <	; BinarySubtract Â£temporary2503 Â£temporary2502 1>
new  <>

490:
old  <	dec eax>
new  < strncat$27:>

491:
old  <>
new  <	; Dereference Â£temporary2504 -> Â£temporary2507 Â£temporary2507 0>

492:
old  < strncat$26:>
new  <>

493:
old  <	; IntegralToIntegral Â£temporary2505 Â£temporary2503>
new  < strncat$28:>

494:
old  <	mov rbx, 4294967295>
new  <	; Assign Â£temporary2504 -> Â£temporary2507 0>

495:
old  <	and rax, rbx>
new  <	mov byte [rsi], 0>

497:
old  < strncat$27:>
new  < strncat$29:>

498:
old  <	; BinaryAdd Â£temporary2507 target Â£temporary2505>
new  <	; Return target>

499:
old  <	mov rsi, [rbp + 24]>
new  <	mov rbx, [rbp + 24]>

500:
old  <	add rsi, rax>
new  <	mov rax, [rbp]>

501:
old  <>
new  <	mov rdi, [rbp + 16]>

502:
old  < strncat$28:>
new  <	mov rbp, [rbp + 8]>

503:
old  <	; Dereference Â£temporary2504 -> Â£temporary2507 Â£temporary2507 0>
new  <	jmp rax>

505:
old  < strncat$29:>
new  < strncat$30:>

506:
old  <	; Assign Â£temporary2504 -> Â£temporary2507 0>
new  <	; FunctionEnd strncat>

507:
old  <	mov byte [rsi], 0>
new  <>

508:
old  <>
new  <section .text>

509:
old  < strncat$30:>
new  <>

510:
old  <	; Return target>
new  < strcmp:>

511:
old  <	mov rbx, [rbp + 24]>
new  <	; Assign index 0>

512:
old  <	mov rax, [rbp]>
new  <	mov dword [rbp + 40], 0>

513:
old  <	mov rdi, [rbp + 16]>
new  <>

514:
old  <	mov rbp, [rbp + 8]>
new  < strcmp$1:>

515:
old  <	jmp rax>
new  <	; IntegralToIntegral Â£temporary2510 index>

516:
old  <>
new  <	mov eax, [rbp + 40]>

517:
old  < strncat$31:>
new  <	mov rbx, 4294967295>

518:
old  <	; FunctionEnd strncat>
new  <	and rax, rbx>

520:
old  <section .text>
new  < strcmp$2:>

521:
old  <>
new  <	; BinaryAdd Â£temporary2512 left Â£temporary2510>

522:
old  < strcmp:>
new  <	mov rsi, [rbp + 24]>

523:
old  <	; Empty>
new  <	add rsi, rax>

525:
old  < strcmp$1:>
new  < strcmp$3:>

526:
old  <	; Assign index 0>
new  <	; Dereference Â£temporary2509 -> Â£temporary2512 Â£temporary2512 0>

527:
old  <	mov dword [rbp + 40], 0>
new  <>

528:
old  <>
new  < strcmp$4:>

529:
old  < strcmp$2:>
new  <	; NotEqual 10 Â£temporary2509 -> Â£temporary2512 0>

530:
old  <	; IntegralToIntegral Â£temporary2510 index>
new  <	cmp byte [rsi], 0>

531:
old  <	mov eax, [rbp + 40]>
new  <	jne strcmp$10>

532:
old  <	mov rbx, 4294967295>
new  <>

533:
old  <	and rax, rbx>
new  < strcmp$5:>

534:
old  <>
new  <	; IntegralToIntegral Â£temporary2515 index>

535:
old  < strcmp$3:>
new  <	mov eax, [rbp + 40]>

536:
old  <	; BinaryAdd Â£temporary2512 left Â£temporary2510>
new  <	mov rbx, 4294967295>

537:
old  <	mov rsi, [rbp + 24]>
new  <	and rax, rbx>

538:
old  <	add rsi, rax>
new  <>

539:
old  <>
new  < strcmp$6:>

540:
old  < strcmp$4:>
new  <	; BinaryAdd Â£temporary2517 right Â£temporary2515>

541:
old  <	; Dereference Â£temporary2509 -> Â£temporary2512 Â£temporary2512 0>
new  <	mov rsi, [rbp + 32]>

542:
old  <>
new  <	add rsi, rax>

543:
old  < strcmp$5:>
new  <>

544:
old  <	; NotEqual 11 Â£temporary2509 -> Â£temporary2512 0>
new  < strcmp$7:>

545:
old  <	cmp byte [rsi], 0>
new  <	; Dereference Â£temporary2514 -> Â£temporary2517 Â£temporary2517 0>

546:
old  <	jne strcmp$11>
new  <>

547:
old  <>
new  < strcmp$8:>

548:
old  < strcmp$6:>
new  <	; NotEqual 10 Â£temporary2514 -> Â£temporary2517 0>

549:
old  <	; IntegralToIntegral Â£temporary2515 index>
new  <	cmp byte [rsi], 0>

550:
old  <	mov eax, [rbp + 40]>
new  <	jne strcmp$10>

551:
old  <	mov rbx, 4294967295>
new  <>

552:
old  <	and rax, rbx>
new  < strcmp$9:>

553:
old  <>
new  <	; Return 0>

554:
old  < strcmp$7:>
new  <	mov ebx, 0>

555:
old  <	; BinaryAdd Â£temporary2517 right Â£temporary2515>
new  <	mov rax, [rbp]>

556:
old  <	mov rsi, [rbp + 32]>
new  <	mov rdi, [rbp + 16]>

557:
old  <	add rsi, rax>
new  <	mov rbp, [rbp + 8]>

558:
old  <>
new  <	jmp rax>

559:
old  < strcmp$8:>
new  <>

560:
old  <	; Dereference Â£temporary2514 -> Â£temporary2517 Â£temporary2517 0>
new  < strcmp$10:>

561:
old  <>
new  <	; IntegralToIntegral Â£temporary2521 index>

562:
old  < strcmp$9:>
new  <	mov eax, [rbp + 40]>

563:
old  <	; NotEqual 11 Â£temporary2514 -> Â£temporary2517 0>
new  <	mov rbx, 4294967295>

564:
old  <	cmp byte [rsi], 0>
new  <	and rax, rbx>

565:
old  <	jne strcmp$11>
new  <>

566:
old  <>
new  < strcmp$11:>

567:
old  < strcmp$10:>
new  <	; BinaryAdd Â£temporary2523 left Â£temporary2521>

568:
old  <	; Return 0>
new  <	mov rsi, [rbp + 24]>

569:
old  <	mov ebx, 0>
new  <	add rsi, rax>

570:
old  <	mov rax, [rbp]>
new  <>

571:
old  <	mov rdi, [rbp + 16]>
new  < strcmp$12:>

572:
old  <	mov rbp, [rbp + 8]>
new  <	; Dereference Â£temporary2520 -> Â£temporary2523 Â£temporary2523 0>

573:
old  <	jmp rax>
new  <>

574:
old  <>
new  < strcmp$13:>

575:
old  < strcmp$11:>
new  <	; NotEqual 15 Â£temporary2520 -> Â£temporary2523 0>

576:
old  <	; IntegralToIntegral Â£temporary2521 index>
new  <	cmp byte [rsi], 0>

577:
old  <	mov eax, [rbp + 40]>
new  <	jne strcmp$15>

578:
old  <	mov rbx, 4294967295>
new  <>

579:
old  <	and rax, rbx>
new  < strcmp$14:>

580:
old  <>
new  <	; Return -1>

581:
old  < strcmp$12:>
new  <	mov ebx, -1>

582:
old  <	; BinaryAdd Â£temporary2523 left Â£temporary2521>
new  <	mov rax, [rbp]>

583:
old  <	mov rsi, [rbp + 24]>
new  <	mov rdi, [rbp + 16]>

584:
old  <	add rsi, rax>
new  <	mov rbp, [rbp + 8]>

585:
old  <>
new  <	jmp rax>

586:
old  < strcmp$13:>
new  <>

587:
old  <	; Dereference Â£temporary2520 -> Â£temporary2523 Â£temporary2523 0>
new  < strcmp$15:>

588:
old  <>
new  <	; IntegralToIntegral Â£temporary2526 index>

589:
old  < strcmp$14:>
new  <	mov eax, [rbp + 40]>

590:
old  <	; NotEqual 16 Â£temporary2520 -> Â£temporary2523 0>
new  <	mov rbx, 4294967295>

591:
old  <	cmp byte [rsi], 0>
new  <	and rax, rbx>

592:
old  <	jne strcmp$16>
new  <>

593:
old  <>
new  < strcmp$16:>

594:
old  < strcmp$15:>
new  <	; BinaryAdd Â£temporary2528 right Â£temporary2526>

595:
old  <	; Return -1>
new  <	mov rsi, [rbp + 32]>

596:
old  <	mov ebx, -1>
new  <	add rsi, rax>

597:
old  <	mov rax, [rbp]>
new  <>

598:
old  <	mov rdi, [rbp + 16]>
new  < strcmp$17:>

599:
old  <	mov rbp, [rbp + 8]>
new  <	; Dereference Â£temporary2525 -> Â£temporary2528 Â£temporary2528 0>

600:
old  <	jmp rax>
new  <>

601:
old  <>
new  < strcmp$18:>

602:
old  < strcmp$16:>
new  <	; NotEqual 20 Â£temporary2525 -> Â£temporary2528 0>

603:
old  <	; IntegralToIntegral Â£temporary2526 index>
new  <	cmp byte [rsi], 0>

604:
old  <	mov eax, [rbp + 40]>
new  <	jne strcmp$20>

605:
old  <	mov rbx, 4294967295>
new  <>

606:
old  <	and rax, rbx>
new  < strcmp$19:>

607:
old  <>
new  <	; Return 1>

608:
old  < strcmp$17:>
new  <	mov ebx, 1>

609:
old  <	; BinaryAdd Â£temporary2528 right Â£temporary2526>
new  <	mov rax, [rbp]>

610:
old  <	mov rsi, [rbp + 32]>
new  <	mov rdi, [rbp + 16]>

611:
old  <	add rsi, rax>
new  <	mov rbp, [rbp + 8]>

612:
old  <>
new  <	jmp rax>

613:
old  < strcmp$18:>
new  <>

614:
old  <	; Dereference Â£temporary2525 -> Â£temporary2528 Â£temporary2528 0>
new  < strcmp$20:>

615:
old  <>
new  <	; IntegralToIntegral Â£temporary2531 index>

616:
old  < strcmp$19:>
new  <	mov eax, [rbp + 40]>

617:
old  <	; NotEqual 21 Â£temporary2525 -> Â£temporary2528 0>
new  <	mov rbx, 4294967295>

618:
old  <	cmp byte [rsi], 0>
new  <	and rax, rbx>

619:
old  <	jne strcmp$21>
new  <>

620:
old  <>
new  < strcmp$21:>

621:
old  < strcmp$20:>
new  <	; BinaryAdd Â£temporary2533 left Â£temporary2531>

622:
old  <	; Return 1>
new  <	mov rsi, [rbp + 24]>

623:
old  <	mov ebx, 1>
new  <	add rsi, rax>

624:
old  <	mov rax, [rbp]>
new  <>

625:
old  <	mov rdi, [rbp + 16]>
new  < strcmp$22:>

626:
old  <	mov rbp, [rbp + 8]>
new  <	; Dereference Â£temporary2530 -> Â£temporary2533 Â£temporary2533 0>

627:
old  <	jmp rax>
new  <>

628:
old  <>
new  < strcmp$23:>

629:
old  < strcmp$21:>
new  <	; IntegralToIntegral Â£temporary2535 index>

630:
old  <	; IntegralToIntegral Â£temporary2531 index>
new  <	mov eax, [rbp + 40]>

631:
old  <	mov eax, [rbp + 40]>
new  <	mov rbx, 4294967295>

632:
old  <	mov rbx, 4294967295>
new  <	and rax, rbx>

633:
old  <	and rax, rbx>
new  <>

634:
old  <>
new  < strcmp$24:>

635:
old  < strcmp$22:>
new  <	; BinaryAdd Â£temporary2537 right Â£temporary2535>

636:
old  <	; BinaryAdd Â£temporary2533 left Â£temporary2531>
new  <	mov rdi, [rbp + 32]>

637:
old  <	mov rsi, [rbp + 24]>
new  <	add rdi, rax>

638:
old  <	add rsi, rax>
new  <>

639:
old  <>
new  < strcmp$25:>

640:
old  < strcmp$23:>
new  <	; Dereference Â£temporary2534 -> Â£temporary2537 Â£temporary2537 0>

641:
old  <	; Dereference Â£temporary2530 -> Â£temporary2533 Â£temporary2533 0>
new  <>

642:
old  <>
new  < strcmp$26:>

643:
old  < strcmp$24:>
new  <	; SignedGreaterThanEqual 28 Â£temporary2530 -> Â£temporary2533 Â£temporary2534 -> Â£temporary2537>

644:
old  <	; IntegralToIntegral Â£temporary2535 index>
new  <	mov al, [rdi]>

645:
old  <	mov eax, [rbp + 40]>
new  <	cmp [rsi], al>

646:
old  <	mov rbx, 4294967295>
new  <	jge strcmp$28>

647:
old  <	and rax, rbx>
new  <>

648:
old  <>
new  < strcmp$27:>

649:
old  < strcmp$25:>
new  <	; Return -1>

650:
old  <	; BinaryAdd Â£temporary2537 right Â£temporary2535>
new  <	mov ebx, -1>

651:
old  <	mov rdi, [rbp + 32]>
new  <	mov rax, [rbp]>

652:
old  <	add rdi, rax>
new  <	mov rdi, [rbp + 16]>

653:
old  <>
new  <	mov rbp, [rbp + 8]>

654:
old  < strcmp$26:>
new  <	jmp rax>

655:
old  <	; Dereference Â£temporary2534 -> Â£temporary2537 Â£temporary2537 0>
new  <>

656:
old  <>
new  < strcmp$28:>

657:
old  < strcmp$27:>
new  <	; IntegralToIntegral Â£temporary2540 index>

658:
old  <	; SignedGreaterThanEqual 29 Â£temporary2530 -> Â£temporary2533 Â£temporary2534 -> Â£temporary2537>
new  <	mov eax, [rbp + 40]>

659:
old  <	mov al, [rdi]>
new  <	mov rbx, 4294967295>

660:
old  <	cmp [rsi], al>
new  <	and rax, rbx>

661:
old  <	jge strcmp$29>
new  <>

662:
old  <>
new  < strcmp$29:>

663:
old  < strcmp$28:>
new  <	; BinaryAdd Â£temporary2542 left Â£temporary2540>

664:
old  <	; Return -1>
new  <	mov rsi, [rbp + 24]>

665:
old  <	mov ebx, -1>
new  <	add rsi, rax>

666:
old  <	mov rax, [rbp]>
new  <>

667:
old  <	mov rdi, [rbp + 16]>
new  < strcmp$30:>

668:
old  <	mov rbp, [rbp + 8]>
new  <	; Dereference Â£temporary2539 -> Â£temporary2542 Â£temporary2542 0>

669:
old  <	jmp rax>
new  <>

670:
old  <>
new  < strcmp$31:>

671:
old  < strcmp$29:>
new  <	; IntegralToIntegral Â£temporary2544 index>

672:
old  <	; IntegralToIntegral Â£temporary2540 index>
new  <	mov eax, [rbp + 40]>

673:
old  <	mov eax, [rbp + 40]>
new  <	mov rbx, 4294967295>

674:
old  <	mov rbx, 4294967295>
new  <	and rax, rbx>

675:
old  <	and rax, rbx>
new  <>

676:
old  <>
new  < strcmp$32:>

677:
old  < strcmp$30:>
new  <	; BinaryAdd Â£temporary2546 right Â£temporary2544>

678:
old  <	; BinaryAdd Â£temporary2542 left Â£temporary2540>
new  <	mov rdi, [rbp + 32]>

679:
old  <	mov rsi, [rbp + 24]>
new  <	add rdi, rax>

680:
old  <	add rsi, rax>
new  <>

681:
old  <>
new  < strcmp$33:>

682:
old  < strcmp$31:>
new  <	; Dereference Â£temporary2543 -> Â£temporary2546 Â£temporary2546 0>

683:
old  <	; Dereference Â£temporary2539 -> Â£temporary2542 Â£temporary2542 0>
new  <>

684:
old  <>
new  < strcmp$34:>

685:
old  < strcmp$32:>
new  <	; SignedLessThanEqual 36 Â£temporary2539 -> Â£temporary2542 Â£temporary2543 -> Â£temporary2546>

686:
old  <	; IntegralToIntegral Â£temporary2544 index>
new  <	mov al, [rdi]>

687:
old  <	mov eax, [rbp + 40]>
new  <	cmp [rsi], al>

688:
old  <	mov rbx, 4294967295>
new  <	jle strcmp$36>

689:
old  <	and rax, rbx>
new  <>

690:
old  <>
new  < strcmp$35:>

691:
old  < strcmp$33:>
new  <	; Return 1>

692:
old  <	; BinaryAdd Â£temporary2546 right Â£temporary2544>
new  <	mov ebx, 1>

693:
old  <	mov rdi, [rbp + 32]>
new  <	mov rax, [rbp]>

694:
old  <	add rdi, rax>
new  <	mov rdi, [rbp + 16]>

695:
old  <>
new  <	mov rbp, [rbp + 8]>

696:
old  < strcmp$34:>
new  <	jmp rax>

697:
old  <	; Dereference Â£temporary2543 -> Â£temporary2546 Â£temporary2546 0>
new  <>

698:
old  <>
new  < strcmp$36:>

699:
old  < strcmp$35:>
new  <	; BinaryAdd index index 1>

700:
old  <	; SignedLessThanEqual 37 Â£temporary2539 -> Â£temporary2542 Â£temporary2543 -> Â£temporary2546>
new  <	inc dword [rbp + 40]>

701:
old  <	mov al, [rdi]>
new  <>

702:
old  <	cmp [rsi], al>
new  < strcmp$37:>

703:
old  <	jle strcmp$37>
new  <	; Goto 1>

704:
old  <>
new  <	jmp strcmp$1>

705:
old  < strcmp$36:>
new  <>

706:
old  <	; Return 1>
new  < strcmp$38:>

707:
old  <	mov ebx, 1>
new  <	; FunctionEnd strcmp>

708:
old  <	mov rax, [rbp]>
new  <>

709:
old  <	mov rdi, [rbp + 16]>
new  <section .text>

710:
old  <	mov rbp, [rbp + 8]>
new  <>

711:
old  <	jmp rax>
new  < strncmp:>

712:
old  <>
new  <	; Assign index 0>

713:
old  < strcmp$37:>
new  <	mov dword [rbp + 44], 0>

714:
old  <	; BinaryAdd index index 1>
new  <>

715:
old  <	inc dword [rbp + 40]>
new  < strncmp$1:>

716:
old  <>
new  <	; SignedGreaterThanEqual 39 index size>

717:
old  < strcmp$38:>
new  <	mov eax, [rbp + 40]>

718:
old  <	; Goto 2>
new  <	cmp [rbp + 44], eax>

719:
old  <	jmp strcmp$2>
new  <	jge strncmp$39>

721:
old  < strcmp$39:>
new  < strncmp$2:>

722:
old  <	; FunctionEnd strcmp>
new  <	; IntegralToIntegral Â£temporary2552 index>

723:
old  <>
new  <	mov eax, [rbp + 44]>

724:
old  <section .text>
new  <	mov rbx, 4294967295>

725:
old  <>
new  <	and rax, rbx>

726:
old  < strncmp:>
new  <>

727:
old  <	; Empty>
new  < strncmp$3:>

728:
old  <>
new  <	; BinaryAdd Â£temporary2554 left Â£temporary2552>

729:
old  < strncmp$1:>
new  <	mov rsi, [rbp + 24]>

730:
old  <	; Assign index 0>
new  <	add rsi, rax>

731:
old  <	mov dword [rbp + 44], 0>
new  <>

732:
old  <>
new  < strncmp$4:>

733:
old  < strncmp$2:>
new  <	; Dereference Â£temporary2551 -> Â£temporary2554 Â£temporary2554 0>

734:
old  <	; SignedGreaterThanEqual 40 index size>
new  <>

735:
old  <	mov eax, [rbp + 40]>
new  < strncmp$5:>

736:
old  <	cmp [rbp + 44], eax>
new  <	; NotEqual 11 Â£temporary2551 -> Â£temporary2554 0>

737:
old  <	jge strncmp$40>
new  <	cmp byte [rsi], 0>

738:
old  <>
new  <	jne strncmp$11>

739:
old  < strncmp$3:>
new  <>

740:
old  <	; IntegralToIntegral Â£temporary2552 index>
new  < strncmp$6:>

741:
old  <	mov eax, [rbp + 44]>
new  <	; IntegralToIntegral Â£temporary2557 index>

742:
old  <	mov rbx, 4294967295>
new  <	mov eax, [rbp + 44]>

743:
old  <	and rax, rbx>
new  <	mov rbx, 4294967295>

744:
old  <>
new  <	and rax, rbx>

745:
old  < strncmp$4:>
new  <>

746:
old  <	; BinaryAdd Â£temporary2554 left Â£temporary2552>
new  < strncmp$7:>

747:
old  <	mov rsi, [rbp + 24]>
new  <	; BinaryAdd Â£temporary2559 right Â£temporary2557>

748:
old  <	add rsi, rax>
new  <	mov rsi, [rbp + 32]>

749:
old  <>
new  <	add rsi, rax>

750:
old  < strncmp$5:>
new  <>

751:
old  <	; Dereference Â£temporary2551 -> Â£temporary2554 Â£temporary2554 0>
new  < strncmp$8:>

752:
old  <>
new  <	; Dereference Â£temporary2556 -> Â£temporary2559 Â£temporary2559 0>

753:
old  < strncmp$6:>
new  <>

754:
old  <	; NotEqual 12 Â£temporary2551 -> Â£temporary2554 0>
new  < strncmp$9:>

755:
old  <	cmp byte [rsi], 0>
new  <	; NotEqual 11 Â£temporary2556 -> Â£temporary2559 0>

756:
old  <	jne strncmp$12>
new  <	cmp byte [rsi], 0>

757:
old  <>
new  <	jne strncmp$11>

758:
old  < strncmp$7:>
new  <>

759:
old  <	; IntegralToIntegral Â£temporary2557 index>
new  < strncmp$10:>

760:
old  <	mov eax, [rbp + 44]>
new  <	; Return 0>

761:
old  <	mov rbx, 4294967295>
new  <	mov ebx, 0>

762:
old  <	and rax, rbx>
new  <	mov rax, [rbp]>

763:
old  <>
new  <	mov rdi, [rbp + 16]>

764:
old  < strncmp$8:>
new  <	mov rbp, [rbp + 8]>

765:
old  <	; BinaryAdd Â£temporary2559 right Â£temporary2557>
new  <	jmp rax>

766:
old  <	mov rsi, [rbp + 32]>
new  <>

767:
old  <	add rsi, rax>
new  < strncmp$11:>

768:
old  <>
new  <	; IntegralToIntegral Â£temporary2563 index>

769:
old  < strncmp$9:>
new  <	mov eax, [rbp + 44]>

770:
old  <	; Dereference Â£temporary2556 -> Â£temporary2559 Â£temporary2559 0>
new  <	mov rbx, 4294967295>

771:
old  <>
new  <	and rax, rbx>

772:
old  < strncmp$10:>
new  <>

773:
old  <	; NotEqual 12 Â£temporary2556 -> Â£temporary2559 0>
new  < strncmp$12:>

774:
old  <	cmp byte [rsi], 0>
new  <	; BinaryAdd Â£temporary2565 left Â£temporary2563>

775:
old  <	jne strncmp$12>
new  <	mov rsi, [rbp + 24]>

776:
old  <>
new  <	add rsi, rax>

777:
old  < strncmp$11:>
new  <>

778:
old  <	; Return 0>
new  < strncmp$13:>

779:
old  <	mov ebx, 0>
new  <	; Dereference Â£temporary2562 -> Â£temporary2565 Â£temporary2565 0>

780:
old  <	mov rax, [rbp]>
new  <>

781:
old  <	mov rdi, [rbp + 16]>
new  < strncmp$14:>

782:
old  <	mov rbp, [rbp + 8]>
new  <	; NotEqual 16 Â£temporary2562 -> Â£temporary2565 0>

783:
old  <	jmp rax>
new  <	cmp byte [rsi], 0>

784:
old  <>
new  <	jne strncmp$16>

785:
old  < strncmp$12:>
new  <>

786:
old  <	; IntegralToIntegral Â£temporary2563 index>
new  < strncmp$15:>

787:
old  <	mov eax, [rbp + 44]>
new  <	; Return -1>

788:
old  <	mov rbx, 4294967295>
new  <	mov ebx, -1>

789:
old  <	and rax, rbx>
new  <	mov rax, [rbp]>

790:
old  <>
new  <	mov rdi, [rbp + 16]>

791:
old  < strncmp$13:>
new  <	mov rbp, [rbp + 8]>

792:
old  <	; BinaryAdd Â£temporary2565 left Â£temporary2563>
new  <	jmp rax>

793:
old  <	mov rsi, [rbp + 24]>
new  <>

794:
old  <	add rsi, rax>
new  < strncmp$16:>

795:
old  <>
new  <	; IntegralToIntegral Â£temporary2568 index>

796:
old  < strncmp$14:>
new  <	mov eax, [rbp + 44]>

797:
old  <	; Dereference Â£temporary2562 -> Â£temporary2565 Â£temporary2565 0>
new  <	mov rbx, 4294967295>

798:
old  <>
new  <	and rax, rbx>

799:
old  < strncmp$15:>
new  <>

800:
old  <	; NotEqual 17 Â£temporary2562 -> Â£temporary2565 0>
new  < strncmp$17:>

801:
old  <	cmp byte [rsi], 0>
new  <	; BinaryAdd Â£temporary2570 right Â£temporary2568>

802:
old  <	jne strncmp$17>
new  <	mov rsi, [rbp + 32]>

803:
old  <>
new  <	add rsi, rax>

804:
old  < strncmp$16:>
new  <>

805:
old  <	; Return -1>
new  < strncmp$18:>

806:
old  <	mov ebx, -1>
new  <	; Dereference Â£temporary2567 -> Â£temporary2570 Â£temporary2570 0>

807:
old  <	mov rax, [rbp]>
new  <>

808:
old  <	mov rdi, [rbp + 16]>
new  < strncmp$19:>

809:
old  <	mov rbp, [rbp + 8]>
new  <	; NotEqual 21 Â£temporary2567 -> Â£temporary2570 0>

810:
old  <	jmp rax>
new  <	cmp byte [rsi], 0>

811:
old  <>
new  <	jne strncmp$21>

812:
old  < strncmp$17:>
new  <>

813:
old  <	; IntegralToIntegral Â£temporary2568 index>
new  < strncmp$20:>

814:
old  <	mov eax, [rbp + 44]>
new  <	; Return 1>

815:
old  <	mov rbx, 4294967295>
new  <	mov ebx, 1>

816:
old  <	and rax, rbx>
new  <	mov rax, [rbp]>

817:
old  <>
new  <	mov rdi, [rbp + 16]>

818:
old  < strncmp$18:>
new  <	mov rbp, [rbp + 8]>

819:
old  <	; BinaryAdd Â£temporary2570 right Â£temporary2568>
new  <	jmp rax>

820:
old  <	mov rsi, [rbp + 32]>
new  <>

821:
old  <	add rsi, rax>
new  < strncmp$21:>

822:
old  <>
new  <	; IntegralToIntegral Â£temporary2573 index>

823:
old  < strncmp$19:>
new  <	mov eax, [rbp + 44]>

824:
old  <	; Dereference Â£temporary2567 -> Â£temporary2570 Â£temporary2570 0>
new  <	mov rbx, 4294967295>

825:
old  <>
new  <	and rax, rbx>

826:
old  < strncmp$20:>
new  <>

827:
old  <	; NotEqual 22 Â£temporary2567 -> Â£temporary2570 0>
new  < strncmp$22:>

828:
old  <	cmp byte [rsi], 0>
new  <	; BinaryAdd Â£temporary2575 left Â£temporary2573>

829:
old  <	jne strncmp$22>
new  <	mov rsi, [rbp + 24]>

830:
old  <>
new  <	add rsi, rax>

831:
old  < strncmp$21:>
new  <>

832:
old  <	; Return 1>
new  < strncmp$23:>

833:
old  <	mov ebx, 1>
new  <	; Dereference Â£temporary2572 -> Â£temporary2575 Â£temporary2575 0>

834:
old  <	mov rax, [rbp]>
new  <>

835:
old  <	mov rdi, [rbp + 16]>
new  < strncmp$24:>

836:
old  <	mov rbp, [rbp + 8]>
new  <	; IntegralToIntegral Â£temporary2577 index>

837:
old  <	jmp rax>
new  <	mov eax, [rbp + 44]>

838:
old  <>
new  <	mov rbx, 4294967295>

839:
old  < strncmp$22:>
new  <	and rax, rbx>

840:
old  <	; IntegralToIntegral Â£temporary2573 index>
new  <>

841:
old  <	mov eax, [rbp + 44]>
new  < strncmp$25:>

842:
old  <	mov rbx, 4294967295>
new  <	; BinaryAdd Â£temporary2579 right Â£temporary2577>

843:
old  <	and rax, rbx>
new  <	mov rdi, [rbp + 32]>

844:
old  <>
new  <	add rdi, rax>

845:
old  < strncmp$23:>
new  <>

846:
old  <	; BinaryAdd Â£temporary2575 left Â£temporary2573>
new  < strncmp$26:>

847:
old  <	mov rsi, [rbp + 24]>
new  <	; Dereference Â£temporary2576 -> Â£temporary2579 Â£temporary2579 0>

848:
old  <	add rsi, rax>
new  <>

849:
old  <>
new  < strncmp$27:>

850:
old  < strncmp$24:>
new  <	; SignedGreaterThanEqual 29 Â£temporary2572 -> Â£temporary2575 Â£temporary2576 -> Â£temporary2579>

851:
old  <	; Dereference Â£temporary2572 -> Â£temporary2575 Â£temporary2575 0>
new  <	mov al, [rdi]>

852:
old  <>
new  <	cmp [rsi], al>

853:
old  < strncmp$25:>
new  <	jge strncmp$29>

854:
old  <	; IntegralToIntegral Â£temporary2577 index>
new  <>

855:
old  <	mov eax, [rbp + 44]>
new  < strncmp$28:>

856:
old  <	mov rbx, 4294967295>
new  <	; Return -1>

857:
old  <	and rax, rbx>
new  <	mov ebx, -1>

858:
old  <>
new  <	mov rax, [rbp]>

859:
old  < strncmp$26:>
new  <	mov rdi, [rbp + 16]>

860:
old  <	; BinaryAdd Â£temporary2579 right Â£temporary2577>
new  <	mov rbp, [rbp + 8]>

861:
old  <	mov rdi, [rbp + 32]>
new  <	jmp rax>

862:
old  <	add rdi, rax>
new  <>

863:
old  <>
new  < strncmp$29:>

864:
old  < strncmp$27:>
new  <	; IntegralToIntegral Â£temporary2582 index>

865:
old  <	; Dereference Â£temporary2576 -> Â£temporary2579 Â£temporary2579 0>
new  <	mov eax, [rbp + 44]>

866:
old  <>
new  <	mov rbx, 4294967295>

867:
old  < strncmp$28:>
new  <	and rax, rbx>

868:
old  <	; SignedGreaterThanEqual 30 Â£temporary2572 -> Â£temporary2575 Â£temporary2576 -> Â£temporary2579>
new  <>

869:
old  <	mov al, [rdi]>
new  < strncmp$30:>

870:
old  <	cmp [rsi], al>
new  <	; BinaryAdd Â£temporary2584 left Â£temporary2582>

871:
old  <	jge strncmp$30>
new  <	mov rsi, [rbp + 24]>

872:
old  <>
new  <	add rsi, rax>

873:
old  < strncmp$29:>
new  <>

874:
old  <	; Return -1>
new  < strncmp$31:>

875:
old  <	mov ebx, -1>
new  <	; Dereference Â£temporary2581 -> Â£temporary2584 Â£temporary2584 0>

876:
old  <	mov rax, [rbp]>
new  <>

877:
old  <	mov rdi, [rbp + 16]>
new  < strncmp$32:>

878:
old  <	mov rbp, [rbp + 8]>
new  <	; IntegralToIntegral Â£temporary2586 index>

879:
old  <	jmp rax>
new  <	mov eax, [rbp + 44]>

880:
old  <>
new  <	mov rbx, 4294967295>

881:
old  < strncmp$30:>
new  <	and rax, rbx>

882:
old  <	; IntegralToIntegral Â£temporary2582 index>
new  <>

883:
old  <	mov eax, [rbp + 44]>
new  < strncmp$33:>

884:
old  <	mov rbx, 4294967295>
new  <	; BinaryAdd Â£temporary2588 right Â£temporary2586>

885:
old  <	and rax, rbx>
new  <	mov rdi, [rbp + 32]>

886:
old  <>
new  <	add rdi, rax>

887:
old  < strncmp$31:>
new  <>

888:
old  <	; BinaryAdd Â£temporary2584 left Â£temporary2582>
new  < strncmp$34:>

889:
old  <	mov rsi, [rbp + 24]>
new  <	; Dereference Â£temporary2585 -> Â£temporary2588 Â£temporary2588 0>

890:
old  <	add rsi, rax>
new  <>

891:
old  <>
new  < strncmp$35:>

892:
old  < strncmp$32:>
new  <	; SignedLessThanEqual 37 Â£temporary2581 -> Â£temporary2584 Â£temporary2585 -> Â£temporary2588>

893:
old  <	; Dereference Â£temporary2581 -> Â£temporary2584 Â£temporary2584 0>
new  <	mov al, [rdi]>

894:
old  <>
new  <	cmp [rsi], al>

895:
old  < strncmp$33:>
new  <	jle strncmp$37>

896:
old  <	; IntegralToIntegral Â£temporary2586 index>
new  <>

897:
old  <	mov eax, [rbp + 44]>
new  < strncmp$36:>

898:
old  <	mov rbx, 4294967295>
new  <	; Return 1>

899:
old  <	and rax, rbx>
new  <	mov ebx, 1>

900:
old  <>
new  <	mov rax, [rbp]>

901:
old  < strncmp$34:>
new  <	mov rdi, [rbp + 16]>

902:
old  <	; BinaryAdd Â£temporary2588 right Â£temporary2586>
new  <	mov rbp, [rbp + 8]>

903:
old  <	mov rdi, [rbp + 32]>
new  <	jmp rax>

904:
old  <	add rdi, rax>
new  <>

905:
old  <>
new  < strncmp$37:>

906:
old  < strncmp$35:>
new  <	; BinaryAdd index index 1>

907:
old  <	; Dereference Â£temporary2585 -> Â£temporary2588 Â£temporary2588 0>
new  <	inc dword [rbp + 44]>

909:
old  < strncmp$36:>
new  < strncmp$38:>

910:
old  <	; SignedLessThanEqual 38 Â£temporary2581 -> Â£temporary2584 Â£temporary2585 -> Â£temporary2588>
new  <	; Goto 1>

911:
old  <	mov al, [rdi]>
new  <	jmp strncmp$1>

912:
old  <	cmp [rsi], al>
new  <>

913:
old  <	jle strncmp$38>
new  < strncmp$39:>

914:
old  <>
new  <	; Return 0>

915:
old  < strncmp$37:>
new  <	mov ebx, 0>

916:
old  <	; Return 1>
new  <	mov rax, [rbp]>

917:
old  <	mov ebx, 1>
new  <	mov rdi, [rbp + 16]>

918:
old  <	mov rax, [rbp]>
new  <	mov rbp, [rbp + 8]>

919:
old  <	mov rdi, [rbp + 16]>
new  <	jmp rax>

920:
old  <	mov rbp, [rbp + 8]>
new  <>

921:
old  <	jmp rax>
new  < strncmp$40:>

922:
old  <>
new  <	; FunctionEnd strncmp>

923:
old  < strncmp$38:>
new  <>

924:
old  <	; BinaryAdd index index 1>
new  <section .text>

925:
old  <	inc dword [rbp + 44]>
new  <>

926:
old  <>
new  < strchr:>

927:
old  < strncmp$39:>
new  <	; IntegralToIntegral Â£temporary2590 i>

928:
old  <	; Goto 2>
new  <	mov eax, [rbp + 32]>

929:
old  <	jmp strncmp$2>
new  <	cmp eax, 0>

930:
old  <>
new  <	jge strchr$1>

931:
old  < strncmp$40:>
new  <	neg eax>

932:
old  <	; Return 0>
new  <	neg al>

933:
old  <	mov ebx, 0>
new  <>

934:
old  <	mov rax, [rbp]>
new  < strchr$1:>

935:
old  <	mov rdi, [rbp + 16]>
new  <	; Assign c Â£temporary2590>

936:
old  <	mov rbp, [rbp + 8]>
new  <	mov [rbp + 40], al>

937:
old  <	jmp rax>
new  <>

938:
old  <>
new  < strchr$2:>

939:
old  < strncmp$41:>
new  <	; Assign index 0>

940:
old  <	; FunctionEnd strncmp>
new  <	mov dword [rbp + 36], 0>

942:
old  <section .text>
new  < strchr$3:>

943:
old  <>
new  <	; IntegralToIntegral Â£temporary2592 index>

944:
old  < strchr:>
new  <	mov eax, [rbp + 36]>

945:
old  <	; Empty>
new  <	mov rbx, 4294967295>

946:
old  <>
new  <	and rax, rbx>

947:
old  < strchr$1:>
new  <>

948:
old  <	; IntegralToIntegral Â£temporary2590 i>
new  < strchr$4:>

949:
old  <	mov eax, [rbp + 32]>
new  <	; BinaryAdd Â£temporary2594 text Â£temporary2592>

950:
old  <	cmp eax, 0>
new  <	mov rsi, [rbp + 24]>

951:
old  <	jge strchr$2>
new  <	add rsi, rax>

952:
old  <	neg eax>
new  <>

953:
old  <	neg al>
new  < strchr$5:>

954:
old  <>
new  <	; Dereference Â£temporary2591 -> Â£temporary2594 Â£temporary2594 0>

955:
old  < strchr$2:>
new  <>

956:
old  <	; Assign c Â£temporary2590>
new  < strchr$6:>

957:
old  <	mov [rbp + 40], al>
new  <	; Equal 18 Â£temporary2591 -> Â£temporary2594 0>

958:
old  <>
new  <	cmp byte [rsi], 0>

959:
old  < strchr$3:>
new  <	je strchr$18>

960:
old  <	; Assign index 0>
new  <>

961:
old  <	mov dword [rbp + 36], 0>
new  < strchr$7:>

962:
old  <>
new  <	; IntegralToIntegral Â£temporary2598 index>

963:
old  < strchr$4:>
new  <	mov eax, [rbp + 36]>

964:
old  <	; IntegralToIntegral Â£temporary2592 index>
new  <	mov rbx, 4294967295>

965:
old  <	mov eax, [rbp + 36]>
new  <	and rax, rbx>

966:
old  <	mov rbx, 4294967295>
new  <>

967:
old  <	and rax, rbx>
new  < strchr$8:>

968:
old  <>
new  <	; BinaryAdd Â£temporary2600 text Â£temporary2598>

969:
old  < strchr$5:>
new  <	mov rsi, [rbp + 24]>

970:
old  <	; BinaryAdd Â£temporary2594 text Â£temporary2592>
new  <	add rsi, rax>

971:
old  <	mov rsi, [rbp + 24]>
new  <>

972:
old  <	add rsi, rax>
new  < strchr$9:>

973:
old  <>
new  <	; Dereference Â£temporary2597 -> Â£temporary2600 Â£temporary2600 0>

974:
old  < strchr$6:>
new  <>

975:
old  <	; Dereference Â£temporary2591 -> Â£temporary2594 Â£temporary2594 0>
new  < strchr$10:>

976:
old  <>
new  <	; NotEqual 16 Â£temporary2597 -> Â£temporary2600 c>

977:
old  < strchr$7:>
new  <	mov al, [rbp + 40]>

978:
old  <	; Equal 19 Â£temporary2591 -> Â£temporary2594 0>
new  <	cmp [rsi], al>

979:
old  <	cmp byte [rsi], 0>
new  <	jne strchr$16>

980:
old  <	je strchr$19>
new  <>

981:
old  <>
new  < strchr$11:>

982:
old  < strchr$8:>
new  <	; IntegralToIntegral Â£temporary2603 index>

983:
old  <	; IntegralToIntegral Â£temporary2598 index>
new  <	mov eax, [rbp + 36]>

984:
old  <	mov eax, [rbp + 36]>
new  <	mov rbx, 4294967295>

985:
old  <	mov rbx, 4294967295>
new  <	and rax, rbx>

986:
old  <	and rax, rbx>
new  <>

987:
old  <>
new  < strchr$12:>

988:
old  < strchr$9:>
new  <	; BinaryAdd Â£temporary2605 text Â£temporary2603>

989:
old  <	; BinaryAdd Â£temporary2600 text Â£temporary2598>
new  <	mov rbx, [rbp + 24]>

990:
old  <	mov rsi, [rbp + 24]>
new  <	add rbx, rax>

991:
old  <	add rsi, rax>
new  <>

992:
old  <>
new  < strchr$13:>

993:
old  < strchr$10:>
new  <	; Dereference Â£temporary2602 -> Â£temporary2605 Â£temporary2605 0>

994:
old  <	; Dereference Â£temporary2597 -> Â£temporary2600 Â£temporary2600 0>
new  <>

995:
old  <>
new  < strchr$14:>

996:
old  < strchr$11:>
new  <	; Address Â£temporary2606 Â£temporary2602 -> Â£temporary2605>

997:
old  <	; NotEqual 17 Â£temporary2597 -> Â£temporary2600 c>
new  <>

998:
old  <	mov al, [rbp + 40]>
new  < strchr$15:>

999:
old  <	cmp [rsi], al>
new  <	; Return Â£temporary2606>

1000:
old  <	jne strchr$17>
new  <	mov rax, [rbp]>

1001:
old  <>
new  <	mov rdi, [rbp + 16]>

1002:
old  < strchr$12:>
new  <	mov rbp, [rbp + 8]>

1003:
old  <	; IntegralToIntegral Â£temporary2603 index>
new  <	jmp rax>

1004:
old  <	mov eax, [rbp + 36]>
new  <>

1005:
old  <	mov rbx, 4294967295>
new  < strchr$16:>

1006:
old  <	and rax, rbx>
new  <	; BinaryAdd index index 1>

1007:
old  <>
new  <	inc dword [rbp + 36]>

1008:
old  < strchr$13:>
new  <>

1009:
old  <	; BinaryAdd Â£temporary2605 text Â£temporary2603>
new  < strchr$17:>

1010:
old  <	mov rbx, [rbp + 24]>
new  <	; Goto 3>

1011:
old  <	add rbx, rax>
new  <	jmp strchr$3>

1013:
old  < strchr$14:>
new  < strchr$18:>

1014:
old  <	; Dereference Â£temporary2602 -> Â£temporary2605 Â£temporary2605 0>
new  <	; Return 0>

1015:
old  <>
new  <	mov rbx, 0>

1016:
old  < strchr$15:>
new  <	mov rax, [rbp]>

1017:
old  <	; Address Â£temporary2606 Â£temporary2602 -> Â£temporary2605>
new  <	mov rdi, [rbp + 16]>

1018:
old  <>
new  <	mov rbp, [rbp + 8]>

1019:
old  < strchr$16:>
new  <	jmp rax>

1020:
old  <	; Return Â£temporary2606>
new  <>

1021:
old  <	mov rax, [rbp]>
new  < strchr$19:>

1022:
old  <	mov rdi, [rbp + 16]>
new  <	; FunctionEnd strchr>

1023:
old  <	mov rbp, [rbp + 8]>
new  <>

1024:
old  <	jmp rax>
new  <section .text>

1026:
old  < strchr$17:>
new  < strrchr:>

1027:
old  <	; BinaryAdd index index 1>
new  <	; Assign result 0>

1028:
old  <	inc dword [rbp + 36]>
new  <	mov qword [rbp + 40], 0>

1030:
old  < strchr$18:>
new  < strrchr$1:>

1031:
old  <	; Goto 4>
new  <	; IntegralToIntegral Â£temporary2607 i>

1032:
old  <	jmp strchr$4>
new  <	mov eax, [rbp + 32]>

1033:
old  <>
new  <	cmp eax, 0>

1034:
old  < strchr$19:>
new  <	jge strrchr$2>

1035:
old  <	; Return 0>
new  <	neg eax>

1036:
old  <	mov rbx, 0>
new  <	neg al>

1037:
old  <	mov rax, [rbp]>
new  <>

1038:
old  <	mov rdi, [rbp + 16]>
new  < strrchr$2:>

1039:
old  <	mov rbp, [rbp + 8]>
new  <	; Assign c Â£temporary2607>

1040:
old  <	jmp rax>
new  <	mov [rbp + 48], al>

1042:
old  < strchr$20:>
new  < strrchr$3:>

1043:
old  <	; FunctionEnd strchr>
new  <	; Assign index 0>

1044:
old  <>
new  <	mov dword [rbp + 36], 0>

1045:
old  <section .text>
new  <>

1046:
old  <>
new  < strrchr$4:>

1047:
old  < strrchr:>
new  <	; IntegralToIntegral Â£temporary2609 index>

1048:
old  <	; Empty>
new  <	mov eax, [rbp + 36]>

1049:
old  <>
new  <	mov rbx, 4294967295>

1050:
old  < strrchr$1:>
new  <	and rax, rbx>

1051:
old  <	; Assign result 0>
new  <>

1052:
old  <	mov qword [rbp + 40], 0>
new  < strrchr$5:>

1053:
old  <>
new  <	; BinaryAdd Â£temporary2611 text Â£temporary2609>

1054:
old  < strrchr$2:>
new  <	mov rsi, [rbp + 24]>

1055:
old  <	; IntegralToIntegral Â£temporary2607 i>
new  <	add rsi, rax>

1056:
old  <	mov eax, [rbp + 32]>
new  <>

1057:
old  <	cmp eax, 0>
new  < strrchr$6:>

1058:
old  <	jge strrchr$3>
new  <	; Dereference Â£temporary2608 -> Â£temporary2611 Â£temporary2611 0>

1059:
old  <	neg eax>
new  <>

1060:
old  <	neg al>
new  < strrchr$7:>

1061:
old  <>
new  <	; Equal 19 Â£temporary2608 -> Â£temporary2611 0>

1062:
old  < strrchr$3:>
new  <	cmp byte [rsi], 0>

1063:
old  <	; Assign c Â£temporary2607>
new  <	je strrchr$19>

1064:
old  <	mov [rbp + 48], al>
new  <>

1065:
old  <>
new  < strrchr$8:>

1066:
old  < strrchr$4:>
new  <	; IntegralToIntegral Â£temporary2615 index>

1067:
old  <	; Assign index 0>
new  <	mov eax, [rbp + 36]>

1068:
old  <	mov dword [rbp + 36], 0>
new  <	mov rbx, 4294967295>

1069:
old  <>
new  <	and rax, rbx>

1070:
old  < strrchr$5:>
new  <>

1071:
old  <	; IntegralToIntegral Â£temporary2609 index>
new  < strrchr$9:>

1072:
old  <	mov eax, [rbp + 36]>
new  <	; BinaryAdd Â£temporary2617 text Â£temporary2615>

1073:
old  <	mov rbx, 4294967295>
new  <	mov rsi, [rbp + 24]>

1074:
old  <	and rax, rbx>
new  <	add rsi, rax>

1076:
old  < strrchr$6:>
new  < strrchr$10:>

1077:
old  <	; BinaryAdd Â£temporary2611 text Â£temporary2609>
new  <	; Dereference Â£temporary2614 -> Â£temporary2617 Â£temporary2617 0>

1078:
old  <	mov rsi, [rbp + 24]>
new  <>

1079:
old  <	add rsi, rax>
new  < strrchr$11:>

1080:
old  <>
new  <	; NotEqual 17 Â£temporary2614 -> Â£temporary2617 c>

1081:
old  < strrchr$7:>
new  <	mov al, [rbp + 48]>

1082:
old  <	; Dereference Â£temporary2608 -> Â£temporary2611 Â£temporary2611 0>
new  <	cmp [rsi], al>

1083:
old  <>
new  <	jne strrchr$17>

1084:
old  < strrchr$8:>
new  <>

1085:
old  <	; Equal 20 Â£temporary2608 -> Â£temporary2611 0>
new  < strrchr$12:>

1086:
old  <	cmp byte [rsi], 0>
new  <	; IntegralToIntegral Â£temporary2620 index>

1087:
old  <	je strrchr$20>
new  <	mov eax, [rbp + 36]>

1088:
old  <>
new  <	mov rbx, 4294967295>

1089:
old  < strrchr$9:>
new  <	and rax, rbx>

1090:
old  <	; IntegralToIntegral Â£temporary2615 index>
new  <>

1091:
old  <	mov eax, [rbp + 36]>
new  < strrchr$13:>

1092:
old  <	mov rbx, 4294967295>
new  <	; BinaryAdd Â£temporary2622 text Â£temporary2620>

1093:
old  <	and rax, rbx>
new  <	mov rsi, [rbp + 24]>

1094:
old  <>
new  <	add rsi, rax>

1095:
old  < strrchr$10:>
new  <>

1096:
old  <	; BinaryAdd Â£temporary2617 text Â£temporary2615>
new  < strrchr$14:>

1097:
old  <	mov rsi, [rbp + 24]>
new  <	; Dereference Â£temporary2619 -> Â£temporary2622 Â£temporary2622 0>

1098:
old  <	add rsi, rax>
new  <>

1099:
old  <>
new  < strrchr$15:>

1100:
old  < strrchr$11:>
new  <	; Address Â£temporary2623 Â£temporary2619 -> Â£temporary2622>

1101:
old  <	; Dereference Â£temporary2614 -> Â£temporary2617 Â£temporary2617 0>
new  <>

1102:
old  <>
new  < strrchr$16:>

1103:
old  < strrchr$12:>
new  <	; Assign result Â£temporary2623>

1104:
old  <	; NotEqual 18 Â£temporary2614 -> Â£temporary2617 c>
new  <	mov [rbp + 40], rsi>

1105:
old  <	mov al, [rbp + 48]>
new  <>

1106:
old  <	cmp [rsi], al>
new  < strrchr$17:>

1107:
old  <	jne strrchr$18>
new  <	; BinaryAdd index index 1>

1108:
old  <>
new  <	inc dword [rbp + 36]>

1109:
old  < strrchr$13:>
new  <>

1110:
old  <	; IntegralToIntegral Â£temporary2620 index>
new  < strrchr$18:>

1111:
old  <	mov eax, [rbp + 36]>
new  <	; Goto 4>

1112:
old  <	mov rbx, 4294967295>
new  <	jmp strrchr$4>

1113:
old  <	and rax, rbx>
new  <>

1114:
old  <>
new  < strrchr$19:>

1115:
old  < strrchr$14:>
new  <	; Return result>

1116:
old  <	; BinaryAdd Â£temporary2622 text Â£temporary2620>
new  <	mov rbx, [rbp + 40]>

1117:
old  <	mov rsi, [rbp + 24]>
new  <	mov rax, [rbp]>

1118:
old  <	add rsi, rax>
new  <	mov rdi, [rbp + 16]>

1119:
old  <>
new  <	mov rbp, [rbp + 8]>

1120:
old  < strrchr$15:>
new  <	jmp rax>

1121:
old  <	; Dereference Â£temporary2619 -> Â£temporary2622 Â£temporary2622 0>
new  <>

1122:
old  <>
new  < strrchr$20:>

1123:
old  < strrchr$16:>
new  <	; FunctionEnd strrchr>

1124:
old  <	; Address Â£temporary2623 Â£temporary2619 -> Â£temporary2622>
new  <>

1125:
old  <>
new  <section .text>

1126:
old  < strrchr$17:>
new  <>

1127:
old  <	; Assign result Â£temporary2623>
new  < strspn:>

1128:
old  <	mov [rbp + 40], rsi>
new  <	; Assign index 0>

1129:
old  <>
new  <	mov dword [rbp + 40], 0>

1130:
old  < strrchr$18:>
new  <>

1131:
old  <	; BinaryAdd index index 1>
new  < strspn$1:>

1132:
old  <	inc dword [rbp + 36]>
new  <	; IntegralToIntegral Â£temporary2625 index>

1133:
old  <>
new  <	mov eax, [rbp + 40]>

1134:
old  < strrchr$19:>
new  <	mov rbx, 4294967295>

1135:
old  <	; Goto 5>
new  <	and rax, rbx>

1136:
old  <	jmp strrchr$5>
new  <>

1137:
old  <>
new  < strspn$2:>

1138:
old  < strrchr$20:>
new  <	; BinaryAdd Â£temporary2627 mainString Â£temporary2625>

1139:
old  <	; Return result>
new  <	mov rsi, [rbp + 24]>

1140:
old  <	mov rbx, [rbp + 40]>
new  <	add rsi, rax>

1141:
old  <	mov rax, [rbp]>
new  <>

1142:
old  <	mov rdi, [rbp + 16]>
new  < strspn$3:>

1143:
old  <	mov rbp, [rbp + 8]>
new  <	; Dereference Â£temporary2624 -> Â£temporary2627 Â£temporary2627 0>

1144:
old  <	jmp rax>
new  <>

1145:
old  <>
new  < strspn$4:>

1146:
old  < strrchr$21:>
new  <	; Equal 19 Â£temporary2624 -> Â£temporary2627 0>

1147:
old  <	; FunctionEnd strrchr>
new  <	cmp byte [rsi], 0>

1148:
old  <>
new  <	je strspn$19>

1149:
old  <section .text>
new  <>

1150:
old  <>
new  < strspn$5:>

1151:
old  < strspn:>
new  <	; PreCall 44 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1152:
old  <	; Empty>
new  <>

1153:
old  <>
new  < strspn$6:>

1154:
old  < strspn$1:>
new  <	; Parameter pointer charSet 68>

1155:
old  <	; Assign index 0>
new  <	mov rax, [rbp + 32]>

1156:
old  <	mov dword [rbp + 40], 0>
new  <	mov [rbp + 68], rax>

1158:
old  < strspn$2:>
new  < strspn$7:>

1159:
old  <	; IntegralToIntegral Â£temporary2625 index>
new  <	; IntegralToIntegral Â£temporary2631 index>

1164:
old  < strspn$3:>
new  < strspn$8:>

1165:
old  <	; BinaryAdd Â£temporary2627 mainString Â£temporary2625>
new  <	; BinaryAdd Â£temporary2633 mainString Â£temporary2631>

1169:
old  < strspn$4:>
new  < strspn$9:>

1170:
old  <	; Dereference Â£temporary2624 -> Â£temporary2627 Â£temporary2627 0>
new  <	; Dereference Â£temporary2630 -> Â£temporary2633 Â£temporary2633 0>

1172:
old  < strspn$5:>
new  < strspn$10:>

1173:
old  <	; Equal 20 Â£temporary2624 -> Â£temporary2627 0>
new  <	; IntegralToIntegral Â£temporary2634 Â£temporary2630 -> Â£temporary2633>

1174:
old  <	cmp byte [rsi], 0>
new  <	mov al, [rsi]>

1175:
old  <	je strspn$20>
new  <	and eax, 255>

1176:
old  <>
new  <	cmp al, 0>

1177:
old  < strspn$6:>
new  <	jge strspn$11>

1178:
old  <	; PreCall 44 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	neg al>

1179:
old  <>
new  <	neg eax>

1180:
old  < strspn$7:>
new  <>

1181:
old  <	; Parameter pointer charSet 68>
new  < strspn$11:>

1182:
old  <	mov rax, [rbp + 32]>
new  <	; Parameter signedint Â£temporary2634 76>

1183:
old  <	mov [rbp + 68], rax>
new  <	mov [rbp + 76], eax>

1185:
old  < strspn$8:>
new  < strspn$12:>

1186:
old  <	; IntegralToIntegral Â£temporary2631 index>
new  <	; Call strchr 44 0>

1187:
old  <	mov eax, [rbp + 40]>
new  <	mov qword [rbp + 44], strspn$13>

1188:
old  <	mov rbx, 4294967295>
new  <	mov [rbp + 52], rbp>

1189:
old  <	and rax, rbx>
new  <	add rbp, 44>

1190:
old  <>
new  <	jmp strchr>

1191:
old  < strspn$9:>
new  <>

1192:
old  <	; BinaryAdd Â£temporary2633 mainString Â£temporary2631>
new  < strspn$13:>

1193:
old  <	mov rsi, [rbp + 24]>
new  <	; PostCall 44>

1194:
old  <	add rsi, rax>
new  <>

1195:
old  <>
new  < strspn$14:>

1196:
old  < strspn$10:>
new  <	; GetReturnValue Â£temporary2635>

1197:
old  <	; Dereference Â£temporary2630 -> Â£temporary2633 Â£temporary2633 0>
new  <>

1198:
old  <>
new  < strspn$15:>

1199:
old  < strspn$11:>
new  <	; NotEqual 17 Â£temporary2635 0>

1200:
old  <	; IntegralToIntegral Â£temporary2634 Â£temporary2630 -> Â£temporary2633>
new  <	cmp rbx, 0>

1201:
old  <	mov al, [rsi]>
new  <	jne strspn$17>

1202:
old  <	and eax, 255>
new  <>

1203:
old  <	cmp al, 0>
new  < strspn$16:>

1204:
old  <	jge strspn$12>
new  <	; Return index>

1205:
old  <	neg al>
new  <	mov ebx, [rbp + 40]>

1206:
old  <	neg eax>
new  <	mov rax, [rbp]>

1207:
old  <>
new  <	mov rdi, [rbp + 16]>

1208:
old  < strspn$12:>
new  <	mov rbp, [rbp + 8]>

1209:
old  <	; Parameter signedint Â£temporary2634 76>
new  <	jmp rax>

1210:
old  <	mov [rbp + 76], eax>
new  <>

1211:
old  <>
new  < strspn$17:>

1212:
old  < strspn$13:>
new  <	; BinaryAdd index index 1>

1213:
old  <	; Call strchr 44 0>
new  <	inc dword [rbp + 40]>

1214:
old  <	mov qword [rbp + 44], strspn$14>
new  <>

1215:
old  <	mov [rbp + 52], rbp>
new  < strspn$18:>

1216:
old  <	add rbp, 44>
new  <	; Goto 1>

1217:
old  <	jmp strchr>
new  <	jmp strspn$1>

1219:
old  < strspn$14:>
new  < strspn$19:>

1220:
old  <	; PostCall 44>
new  <	; Return -1>

1221:
old  <>
new  <	mov ebx, -1>

1222:
old  < strspn$15:>
new  <	mov rax, [rbp]>

1223:
old  <	; GetReturnValue Â£temporary2635>
new  <	mov rdi, [rbp + 16]>

1224:
old  <>
new  <	mov rbp, [rbp + 8]>

1225:
old  < strspn$16:>
new  <	jmp rax>

1226:
old  <	; NotEqual 18 Â£temporary2635 0>
new  <>

1227:
old  <	cmp rbx, 0>
new  < strspn$20:>

1228:
old  <	jne strspn$18>
new  <	; FunctionEnd strspn>

1230:
old  < strspn$17:>
new  <section .text>

1231:
old  <	; Return index>
new  <>

1232:
old  <	mov ebx, [rbp + 40]>
new  < strcspn:>

1233:
old  <	mov rax, [rbp]>
new  <	; Assign index 0>

1234:
old  <	mov rdi, [rbp + 16]>
new  <	mov dword [rbp + 40], 0>

1235:
old  <	mov rbp, [rbp + 8]>
new  <>

1236:
old  <	jmp rax>
new  < strcspn$1:>

1237:
old  <>
new  <	; IntegralToIntegral Â£temporary2638 index>

1238:
old  < strspn$18:>
new  <	mov eax, [rbp + 40]>

1239:
old  <	; BinaryAdd index index 1>
new  <	mov rbx, 4294967295>

1240:
old  <	inc dword [rbp + 40]>
new  <	and rax, rbx>

1242:
old  < strspn$19:>
new  < strcspn$2:>

1243:
old  <	; Goto 2>
new  <	; BinaryAdd Â£temporary2640 mainString Â£temporary2638>

1244:
old  <	jmp strspn$2>
new  <	mov rsi, [rbp + 24]>

1245:
old  <>
new  <	add rsi, rax>

1246:
old  < strspn$20:>
new  <>

1247:
old  <	; Return -1>
new  < strcspn$3:>

1248:
old  <	mov ebx, -1>
new  <	; Dereference Â£temporary2637 -> Â£temporary2640 Â£temporary2640 0>

1249:
old  <	mov rax, [rbp]>
new  <>

1250:
old  <	mov rdi, [rbp + 16]>
new  < strcspn$4:>

1251:
old  <	mov rbp, [rbp + 8]>
new  <	; Equal 19 Â£temporary2637 -> Â£temporary2640 0>

1252:
old  <	jmp rax>
new  <	cmp byte [rsi], 0>

1253:
old  <>
new  <	je strcspn$19>

1254:
old  < strspn$21:>
new  <>

1255:
old  <	; FunctionEnd strspn>
new  < strcspn$5:>

1256:
old  <>
new  <	; PreCall 44 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1257:
old  <section .text>
new  <>

1258:
old  <>
new  < strcspn$6:>

1259:
old  < strcspn:>
new  <	; Parameter pointer charSet 68>

1260:
old  <	; Empty>
new  <	mov rax, [rbp + 32]>

1261:
old  <>
new  <	mov [rbp + 68], rax>

1262:
old  < strcspn$1:>
new  <>

1263:
old  <	; Assign index 0>
new  < strcspn$7:>

1264:
old  <	mov dword [rbp + 40], 0>
new  <	; IntegralToIntegral Â£temporary2644 index>

1265:
old  <>
new  <	mov eax, [rbp + 40]>

1266:
old  < strcspn$2:>
new  <	mov rbx, 4294967295>

1267:
old  <	; IntegralToIntegral Â£temporary2638 index>
new  <	and rax, rbx>

1268:
old  <	mov eax, [rbp + 40]>
new  <>

1269:
old  <	mov rbx, 4294967295>
new  < strcspn$8:>

1270:
old  <	and rax, rbx>
new  <	; BinaryAdd Â£temporary2646 mainString Â£temporary2644>

1271:
old  <>
new  <	mov rsi, [rbp + 24]>

1272:
old  < strcspn$3:>
new  <	add rsi, rax>

1273:
old  <	; BinaryAdd Â£temporary2640 mainString Â£temporary2638>
new  <>

1274:
old  <	mov rsi, [rbp + 24]>
new  < strcspn$9:>

1275:
old  <	add rsi, rax>
new  <	; Dereference Â£temporary2643 -> Â£temporary2646 Â£temporary2646 0>

1277:
old  < strcspn$4:>
new  < strcspn$10:>

1278:
old  <	; Dereference Â£temporary2637 -> Â£temporary2640 Â£temporary2640 0>
new  <	; IntegralToIntegral Â£temporary2647 Â£temporary2643 -> Â£temporary2646>

1279:
old  <>
new  <	mov al, [rsi]>

1280:
old  < strcspn$5:>
new  <	and eax, 255>

1281:
old  <	; Equal 20 Â£temporary2637 -> Â£temporary2640 0>
new  <	cmp al, 0>

1282:
old  <	cmp byte [rsi], 0>
new  <	jge strcspn$11>

1283:
old  <	je strcspn$20>
new  <	neg al>

1284:
old  <>
new  <	neg eax>

1285:
old  < strcspn$6:>
new  <>

1286:
old  <	; PreCall 44 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < strcspn$11:>

1287:
old  <>
new  <	; Parameter signedint Â£temporary2647 76>

1288:
old  < strcspn$7:>
new  <	mov [rbp + 76], eax>

1289:
old  <	; Parameter pointer charSet 68>
new  <>

1290:
old  <	mov rax, [rbp + 32]>
new  < strcspn$12:>

1291:
old  <	mov [rbp + 68], rax>
new  <	; Call strchr 44 0>

1292:
old  <>
new  <	mov qword [rbp + 44], strcspn$13>

1293:
old  < strcspn$8:>
new  <	mov [rbp + 52], rbp>

1294:
old  <	; IntegralToIntegral Â£temporary2644 index>
new  <	add rbp, 44>

1295:
old  <	mov eax, [rbp + 40]>
new  <	jmp strchr>

1296:
old  <	mov rbx, 4294967295>
new  <>

1297:
old  <	and rax, rbx>
new  < strcspn$13:>

1298:
old  <>
new  <	; PostCall 44>

1299:
old  < strcspn$9:>
new  <>

1300:
old  <	; BinaryAdd Â£temporary2646 mainString Â£temporary2644>
new  < strcspn$14:>

1301:
old  <	mov rsi, [rbp + 24]>
new  <	; GetReturnValue Â£temporary2648>

1302:
old  <	add rsi, rax>
new  <>

1303:
old  <>
new  < strcspn$15:>

1304:
old  < strcspn$10:>
new  <	; Equal 17 Â£temporary2648 0>

1305:
old  <	; Dereference Â£temporary2643 -> Â£temporary2646 Â£temporary2646 0>
new  <	cmp rbx, 0>

1306:
old  <>
new  <	je strcspn$17>

1307:
old  < strcspn$11:>
new  <>

1308:
old  <	; IntegralToIntegral Â£temporary2647 Â£temporary2643 -> Â£temporary2646>
new  < strcspn$16:>

1309:
old  <	mov al, [rsi]>
new  <	; Return index>

1310:
old  <	and eax, 255>
new  <	mov ebx, [rbp + 40]>

1311:
old  <	cmp al, 0>
new  <	mov rax, [rbp]>

1312:
old  <	jge strcspn$12>
new  <	mov rdi, [rbp + 16]>

1313:
old  <	neg al>
new  <	mov rbp, [rbp + 8]>

1314:
old  <	neg eax>
new  <	jmp rax>

1316:
old  < strcspn$12:>
new  < strcspn$17:>

1317:
old  <	; Parameter signedint Â£temporary2647 76>
new  <	; BinaryAdd index index 1>

1318:
old  <	mov [rbp + 76], eax>
new  <	inc dword [rbp + 40]>

1320:
old  < strcspn$13:>
new  < strcspn$18:>

1321:
old  <	; Call strchr 44 0>
new  <	; Goto 1>

1322:
old  <	mov qword [rbp + 44], strcspn$14>
new  <	jmp strcspn$1>

1323:
old  <	mov [rbp + 52], rbp>
new  <>

1324:
old  <	add rbp, 44>
new  < strcspn$19:>

1325:
old  <	jmp strchr>
new  <	; Return -1>

1326:
old  <>
new  <	mov ebx, -1>

1327:
old  < strcspn$14:>
new  <	mov rax, [rbp]>

1328:
old  <	; PostCall 44>
new  <	mov rdi, [rbp + 16]>

1329:
old  <>
new  <	mov rbp, [rbp + 8]>

1330:
old  < strcspn$15:>
new  <	jmp rax>

1331:
old  <	; GetReturnValue Â£temporary2648>
new  <>

1332:
old  <>
new  < strcspn$20:>

1333:
old  < strcspn$16:>
new  <	; FunctionEnd strcspn>

1334:
old  <	; Equal 18 Â£temporary2648 0>
new  <>

1335:
old  <	cmp rbx, 0>
new  <section .text>

1336:
old  <	je strcspn$18>
new  <>

1337:
old  <>
new  < strpbrk:>

1338:
old  < strcspn$17:>
new  <	; Assign index 0>

1339:
old  <	; Return index>
new  <	mov dword [rbp + 40], 0>

1340:
old  <	mov ebx, [rbp + 40]>
new  <>

1341:
old  <	mov rax, [rbp]>
new  < strpbrk$1:>

1342:
old  <	mov rdi, [rbp + 16]>
new  <	; IntegralToIntegral Â£temporary2651 index>

1343:
old  <	mov rbp, [rbp + 8]>
new  <	mov eax, [rbp + 40]>

1344:
old  <	jmp rax>
new  <	mov rbx, 4294967295>

1345:
old  <>
new  <	and rax, rbx>

1346:
old  < strcspn$18:>
new  <>

1347:
old  <	; BinaryAdd index index 1>
new  < strpbrk$2:>

1348:
old  <	inc dword [rbp + 40]>
new  <	; BinaryAdd Â£temporary2653 mainString Â£temporary2651>

1349:
old  <>
new  <	mov rsi, [rbp + 24]>

1350:
old  < strcspn$19:>
new  <	add rsi, rax>

1351:
old  <	; Goto 2>
new  <>

1352:
old  <	jmp strcspn$2>
new  < strpbrk$3:>

1353:
old  <>
new  <	; Dereference Â£temporary2650 -> Â£temporary2653 Â£temporary2653 0>

1354:
old  < strcspn$20:>
new  <>

1355:
old  <	; Return -1>
new  < strpbrk$4:>

1356:
old  <	mov ebx, -1>
new  <	; Equal 23 Â£temporary2650 -> Â£temporary2653 0>

1357:
old  <	mov rax, [rbp]>
new  <	cmp byte [rsi], 0>

1358:
old  <	mov rdi, [rbp + 16]>
new  <	je strpbrk$23>

1359:
old  <	mov rbp, [rbp + 8]>
new  <>

1360:
old  <	jmp rax>
new  < strpbrk$5:>

1361:
old  <>
new  <	; PreCall 44 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1362:
old  < strcspn$21:>
new  <>

1363:
old  <	; FunctionEnd strcspn>
new  < strpbrk$6:>

1364:
old  <>
new  <	; Parameter pointer charSet 68>

1365:
old  <section .text>
new  <	mov rax, [rbp + 32]>

1366:
old  <>
new  <	mov [rbp + 68], rax>

1367:
old  < strpbrk:>
new  <>

1368:
old  <	; Empty>
new  < strpbrk$7:>

1369:
old  <>
new  <	; IntegralToIntegral Â£temporary2657 index>

1370:
old  < strpbrk$1:>
new  <	mov eax, [rbp + 40]>

1371:
old  <	; Assign index 0>
new  <	mov rbx, 4294967295>

1372:
old  <	mov dword [rbp + 40], 0>
new  <	and rax, rbx>

1374:
old  < strpbrk$2:>
new  < strpbrk$8:>

1375:
old  <	; IntegralToIntegral Â£temporary2651 index>
new  <	; BinaryAdd Â£temporary2659 mainString Â£temporary2657>

1376:
old  <	mov eax, [rbp + 40]>
new  <	mov rsi, [rbp + 24]>

1377:
old  <	mov rbx, 4294967295>
new  <	add rsi, rax>

1378:
old  <	and rax, rbx>
new  <>

1379:
old  <>
new  < strpbrk$9:>

1380:
old  < strpbrk$3:>
new  <	; Dereference Â£temporary2656 -> Â£temporary2659 Â£temporary2659 0>

1381:
old  <	; BinaryAdd Â£temporary2653 mainString Â£temporary2651>
new  <>

1382:
old  <	mov rsi, [rbp + 24]>
new  < strpbrk$10:>

1383:
old  <	add rsi, rax>
new  <	; IntegralToIntegral Â£temporary2660 Â£temporary2656 -> Â£temporary2659>

1384:
old  <>
new  <	mov al, [rsi]>

1385:
old  < strpbrk$4:>
new  <	and eax, 255>

1386:
old  <	; Dereference Â£temporary2650 -> Â£temporary2653 Â£temporary2653 0>
new  <	cmp al, 0>

1387:
old  <>
new  <	jge strpbrk$11>

1388:
old  < strpbrk$5:>
new  <	neg al>

1389:
old  <	; Equal 24 Â£temporary2650 -> Â£temporary2653 0>
new  <	neg eax>

1390:
old  <	cmp byte [rsi], 0>
new  <>

1391:
old  <	je strpbrk$24>
new  < strpbrk$11:>

1392:
old  <>
new  <	; Parameter signedint Â£temporary2660 76>

1393:
old  < strpbrk$6:>
new  <	mov [rbp + 76], eax>

1394:
old  <	; PreCall 44 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1395:
old  <>
new  < strpbrk$12:>

1396:
old  < strpbrk$7:>
new  <	; Call strchr 44 0>

1397:
old  <	; Parameter pointer charSet 68>
new  <	mov qword [rbp + 44], strpbrk$13>

1398:
old  <	mov rax, [rbp + 32]>
new  <	mov [rbp + 52], rbp>

1399:
old  <	mov [rbp + 68], rax>
new  <	add rbp, 44>

1400:
old  <>
new  <	jmp strchr>

1401:
old  < strpbrk$8:>
new  <>

1402:
old  <	; IntegralToIntegral Â£temporary2657 index>
new  < strpbrk$13:>

1403:
old  <	mov eax, [rbp + 40]>
new  <	; PostCall 44>

1404:
old  <	mov rbx, 4294967295>
new  <>

1405:
old  <	and rax, rbx>
new  < strpbrk$14:>

1406:
old  <>
new  <	; GetReturnValue Â£temporary2661>

1407:
old  < strpbrk$9:>
new  <>

1408:
old  <	; BinaryAdd Â£temporary2659 mainString Â£temporary2657>
new  < strpbrk$15:>

1409:
old  <	mov rsi, [rbp + 24]>
new  <	; Equal 21 Â£temporary2661 0>

1410:
old  <	add rsi, rax>
new  <	cmp rbx, 0>

1411:
old  <>
new  <	je strpbrk$21>

1412:
old  < strpbrk$10:>
new  <>

1413:
old  <	; Dereference Â£temporary2656 -> Â£temporary2659 Â£temporary2659 0>
new  < strpbrk$16:>

1414:
old  <>
new  <	; IntegralToIntegral Â£temporary2664 index>

1415:
old  < strpbrk$11:>
new  <	mov eax, [rbp + 40]>

1416:
old  <	; IntegralToIntegral Â£temporary2660 Â£temporary2656 -> Â£temporary2659>
new  <	mov rbx, 4294967295>

1417:
old  <	mov al, [rsi]>
new  <	and rax, rbx>

1418:
old  <	and eax, 255>
new  <>

1419:
old  <	cmp al, 0>
new  < strpbrk$17:>

1420:
old  <	jge strpbrk$12>
new  <	; BinaryAdd Â£temporary2666 mainString Â£temporary2664>

1421:
old  <	neg al>
new  <	mov rbx, [rbp + 24]>

1422:
old  <	neg eax>
new  <	add rbx, rax>

1424:
old  < strpbrk$12:>
new  < strpbrk$18:>

1425:
old  <	; Parameter signedint Â£temporary2660 76>
new  <	; Dereference Â£temporary2663 -> Â£temporary2666 Â£temporary2666 0>

1426:
old  <	mov [rbp + 76], eax>
new  <>

1427:
old  <>
new  < strpbrk$19:>

1428:
old  < strpbrk$13:>
new  <	; Address Â£temporary2667 Â£temporary2663 -> Â£temporary2666>

1429:
old  <	; Call strchr 44 0>
new  <>

1430:
old  <	mov qword [rbp + 44], strpbrk$14>
new  < strpbrk$20:>

1431:
old  <	mov [rbp + 52], rbp>
new  <	; Return Â£temporary2667>

1432:
old  <	add rbp, 44>
new  <	mov rax, [rbp]>

1433:
old  <	jmp strchr>
new  <	mov rdi, [rbp + 16]>

1434:
old  <>
new  <	mov rbp, [rbp + 8]>

1435:
old  < strpbrk$14:>
new  <	jmp rax>

1436:
old  <	; PostCall 44>
new  <>

1437:
old  <>
new  < strpbrk$21:>

1438:
old  < strpbrk$15:>
new  <	; BinaryAdd index index 1>

1439:
old  <	; GetReturnValue Â£temporary2661>
new  <	inc dword [rbp + 40]>

1441:
old  < strpbrk$16:>
new  < strpbrk$22:>

1442:
old  <	; Equal 22 Â£temporary2661 0>
new  <	; Goto 1>

1443:
old  <	cmp rbx, 0>
new  <	jmp strpbrk$1>

1444:
old  <	je strpbrk$22>
new  <>

1445:
old  <>
new  < strpbrk$23:>

1446:
old  < strpbrk$17:>
new  <	; Return 0>

1447:
old  <	; IntegralToIntegral Â£temporary2664 index>
new  <	mov rbx, 0>

1448:
old  <	mov eax, [rbp + 40]>
new  <	mov rax, [rbp]>

1449:
old  <	mov rbx, 4294967295>
new  <	mov rdi, [rbp + 16]>

1450:
old  <	and rax, rbx>
new  <	mov rbp, [rbp + 8]>

1451:
old  <>
new  <	jmp rax>

1452:
old  < strpbrk$18:>
new  <>

1453:
old  <	; BinaryAdd Â£temporary2666 mainString Â£temporary2664>
new  < strpbrk$24:>

1454:
old  <	mov rbx, [rbp + 24]>
new  <	; FunctionEnd strpbrk>

1455:
old  <	add rbx, rax>
new  <>

1456:
old  <>
new  <section .text>

1457:
old  < strpbrk$19:>
new  <>

1458:
old  <	; Dereference Â£temporary2663 -> Â£temporary2666 Â£temporary2666 0>
new  < strstr:>

1459:
old  <>
new  <	; Assign index 0>

1460:
old  < strpbrk$20:>
new  <	mov dword [rbp + 40], 0>

1461:
old  <	; Address Â£temporary2667 Â£temporary2663 -> Â£temporary2666>
new  <>

1462:
old  <>
new  < strstr$1:>

1463:
old  < strpbrk$21:>
new  <	; IntegralToIntegral Â£temporary2669 index>

1464:
old  <	; Return Â£temporary2667>
new  <	mov eax, [rbp + 40]>

1465:
old  <	mov rax, [rbp]>
new  <	mov rbx, 4294967295>

1466:
old  <	mov rdi, [rbp + 16]>
new  <	and rax, rbx>

1467:
old  <	mov rbp, [rbp + 8]>
new  <>

1468:
old  <	jmp rax>
new  < strstr$2:>

1469:
old  <>
new  <	; BinaryAdd Â£temporary2671 mainString Â£temporary2669>

1470:
old  < strpbrk$22:>
new  <	mov rsi, [rbp + 24]>

1471:
old  <	; BinaryAdd index index 1>
new  <	add rsi, rax>

1472:
old  <	inc dword [rbp + 40]>
new  <>

1473:
old  <>
new  < strstr$3:>

1474:
old  < strpbrk$23:>
new  <	; Dereference Â£temporary2668 -> Â£temporary2671 Â£temporary2671 0>

1475:
old  <	; Goto 2>
new  <>

1476:
old  <	jmp strpbrk$2>
new  < strstr$4:>

1477:
old  <>
new  <	; Equal 21 Â£temporary2668 -> Â£temporary2671 0>

1478:
old  < strpbrk$24:>
new  <	cmp byte [rsi], 0>

1479:
old  <	; Return 0>
new  <	je strstr$21>

1480:
old  <	mov rbx, 0>
new  <>

1481:
old  <	mov rax, [rbp]>
new  < strstr$5:>

1482:
old  <	mov rdi, [rbp + 16]>
new  <	; PreCall 44 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1483:
old  <	mov rbp, [rbp + 8]>
new  <>

1484:
old  <	jmp rax>
new  < strstr$6:>

1485:
old  <>
new  <	; IntegralToIntegral Â£temporary2674 index>

1486:
old  < strpbrk$25:>
new  <	mov eax, [rbp + 40]>

1487:
old  <	; FunctionEnd strpbrk>
new  <	mov rbx, 4294967295>

1488:
old  <>
new  <	and rax, rbx>

1489:
old  <section .text>
new  <>

1490:
old  <>
new  < strstr$7:>

1491:
old  < strstr:>
new  <	; BinaryAdd Â£temporary2675 mainString Â£temporary2674>

1492:
old  <	; Empty>
new  <	mov rbx, [rbp + 24]>

1493:
old  <>
new  <	add rbx, rax>

1494:
old  < strstr$1:>
new  <>

1495:
old  <	; Assign index 0>
new  < strstr$8:>

1496:
old  <	mov dword [rbp + 40], 0>
new  <	; Parameter pointer Â£temporary2675 68>

1497:
old  <>
new  <	mov [rbp + 68], rbx>

1498:
old  < strstr$2:>
new  <>

1499:
old  <	; IntegralToIntegral Â£temporary2669 index>
new  < strstr$9:>

1500:
old  <	mov eax, [rbp + 40]>
new  <	; Parameter pointer subString 76>

1501:
old  <	mov rbx, 4294967295>
new  <	mov rax, [rbp + 32]>

1502:
old  <	and rax, rbx>
new  <	mov [rbp + 76], rax>

1504:
old  < strstr$3:>
new  < strstr$10:>

1505:
old  <	; BinaryAdd Â£temporary2671 mainString Â£temporary2669>
new  <	; Call strcmp 44 0>

1506:
old  <	mov rsi, [rbp + 24]>
new  <	mov qword [rbp + 44], strstr$11>

1507:
old  <	add rsi, rax>
new  <	mov [rbp + 52], rbp>

1508:
old  <>
new  <	add rbp, 44>

1509:
old  < strstr$4:>
new  <	jmp strcmp>

1510:
old  <	; Dereference Â£temporary2668 -> Â£temporary2671 Â£temporary2671 0>
new  <>

1511:
old  <>
new  < strstr$11:>

1512:
old  < strstr$5:>
new  <	; PostCall 44>

1513:
old  <	; Equal 22 Â£temporary2668 -> Â£temporary2671 0>
new  <>

1514:
old  <	cmp byte [rsi], 0>
new  < strstr$12:>

1515:
old  <	je strstr$22>
new  <	; GetReturnValue Â£temporary2677>

1517:
old  < strstr$6:>
new  < strstr$13:>

1518:
old  <	; PreCall 44 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; NotEqual 19 Â£temporary2677 0>

1519:
old  <>
new  <	cmp ebx, 0>

1520:
old  < strstr$7:>
new  <	jne strstr$19>

1521:
old  <	; IntegralToIntegral Â£temporary2674 index>
new  <>

1522:
old  <	mov eax, [rbp + 40]>
new  < strstr$14:>

1523:
old  <	mov rbx, 4294967295>
new  <	; IntegralToIntegral Â£temporary2680 index>

1524:
old  <	and rax, rbx>
new  <	mov eax, [rbp + 40]>

1525:
old  <>
new  <	mov rbx, 4294967295>

1526:
old  < strstr$8:>
new  <	and rax, rbx>

1527:
old  <	; BinaryAdd Â£temporary2675 mainString Â£temporary2674>
new  <>

1528:
old  <	mov rbx, [rbp + 24]>
new  < strstr$15:>

1529:
old  <	add rbx, rax>
new  <	; BinaryAdd Â£temporary2682 mainString Â£temporary2680>

1530:
old  <>
new  <	mov rbx, [rbp + 24]>

1531:
old  < strstr$9:>
new  <	add rbx, rax>

1532:
old  <	; Parameter pointer Â£temporary2675 68>
new  <>

1533:
old  <	mov [rbp + 68], rbx>
new  < strstr$16:>

1534:
old  <>
new  <	; Dereference Â£temporary2679 -> Â£temporary2682 Â£temporary2682 0>

1535:
old  < strstr$10:>
new  <>

1536:
old  <	; Parameter pointer subString 76>
new  < strstr$17:>

1537:
old  <	mov rax, [rbp + 32]>
new  <	; Address Â£temporary2683 Â£temporary2679 -> Â£temporary2682>

1538:
old  <	mov [rbp + 76], rax>
new  <>

1539:
old  <>
new  < strstr$18:>

1540:
old  < strstr$11:>
new  <	; Return Â£temporary2683>

1541:
old  <	; Call strcmp 44 0>
new  <	mov rax, [rbp]>

1542:
old  <	mov qword [rbp + 44], strstr$12>
new  <	mov rdi, [rbp + 16]>

1543:
old  <	mov [rbp + 52], rbp>
new  <	mov rbp, [rbp + 8]>

1544:
old  <	add rbp, 44>
new  <	jmp rax>

1545:
old  <	jmp strcmp>
new  <>

1546:
old  <>
new  < strstr$19:>

1547:
old  < strstr$12:>
new  <	; BinaryAdd index index 1>

1548:
old  <	; PostCall 44>
new  <	inc dword [rbp + 40]>

1550:
old  < strstr$13:>
new  < strstr$20:>

1551:
old  <	; GetReturnValue Â£temporary2677>
new  <	; Goto 1>

1552:
old  <>
new  <	jmp strstr$1>

1553:
old  < strstr$14:>
new  <>

1554:
old  <	; NotEqual 20 Â£temporary2677 0>
new  < strstr$21:>

1555:
old  <	cmp ebx, 0>
new  <	; Return 0>

1556:
old  <	jne strstr$20>
new  <	mov rbx, 0>

1557:
old  <>
new  <	mov rax, [rbp]>

1558:
old  < strstr$15:>
new  <	mov rdi, [rbp + 16]>

1559:
old  <	; IntegralToIntegral Â£temporary2680 index>
new  <	mov rbp, [rbp + 8]>

1560:
old  <	mov eax, [rbp + 40]>
new  <	jmp rax>

1561:
old  <	mov rbx, 4294967295>
new  <>

1562:
old  <	and rax, rbx>
new  < strstr$22:>

1563:
old  <>
new  <	; FunctionEnd strstr>

1564:
old  < strstr$16:>
new  <>

1565:
old  <	; BinaryAdd Â£temporary2682 mainString Â£temporary2680>
new  <section .text>

1566:
old  <	mov rbx, [rbp + 24]>
new  <>

1567:
old  <	add rbx, rax>
new  < strlen:>

1568:
old  <>
new  <	; Assign index 0>

1569:
old  < strstr$17:>
new  <	mov dword [rbp + 32], 0>

1570:
old  <	; Dereference Â£temporary2679 -> Â£temporary2682 Â£temporary2682 0>
new  <>

1571:
old  <>
new  < strlen$1:>

1572:
old  < strstr$18:>
new  <	; IntegralToIntegral Â£temporary2685 index>

1573:
old  <	; Address Â£temporary2683 Â£temporary2679 -> Â£temporary2682>
new  <	mov eax, [rbp + 32]>

1574:
old  <>
new  <	mov rbx, 4294967295>

1575:
old  < strstr$19:>
new  <	and rax, rbx>

1576:
old  <	; Return Â£temporary2683>
new  <>

1577:
old  <	mov rax, [rbp]>
new  < strlen$2:>

1578:
old  <	mov rdi, [rbp + 16]>
new  <	; BinaryAdd Â£temporary2687 string Â£temporary2685>

1579:
old  <	mov rbp, [rbp + 8]>
new  <	mov rsi, [rbp + 24]>

1580:
old  <	jmp rax>
new  <	add rsi, rax>

1582:
old  < strstr$20:>
new  < strlen$3:>

1583:
old  <	; BinaryAdd index index 1>
new  <	; Dereference Â£temporary2684 -> Â£temporary2687 Â£temporary2687 0>

1584:
old  <	inc dword [rbp + 40]>
new  <>

1585:
old  <>
new  < strlen$4:>

1586:
old  < strstr$21:>
new  <	; Equal 7 Â£temporary2684 -> Â£temporary2687 0>

1587:
old  <	; Goto 2>
new  <	cmp byte [rsi], 0>

1588:
old  <	jmp strstr$2>
new  <	je strlen$7>

1590:
old  < strstr$22:>
new  < strlen$5:>

1591:
old  <	; Return 0>
new  <	; BinaryAdd index index 1>

1592:
old  <	mov rbx, 0>
new  <	inc dword [rbp + 32]>

1593:
old  <	mov rax, [rbp]>
new  <>

1594:
old  <	mov rdi, [rbp + 16]>
new  < strlen$6:>

1595:
old  <	mov rbp, [rbp + 8]>
new  <	; Goto 1>

1596:
old  <	jmp rax>
new  <	jmp strlen$1>

1598:
old  < strstr$23:>
new  < strlen$7:>

1599:
old  <	; FunctionEnd strstr>
new  <	; Return index>

1600:
old  <>
new  <	mov ebx, [rbp + 32]>

1601:
old  <section .text>
new  <	mov rax, [rbp]>

1602:
old  <>
new  <	mov rdi, [rbp + 16]>

1603:
old  < strlen:>
new  <	mov rbp, [rbp + 8]>

1604:
old  <	; Empty>
new  <	jmp rax>

1606:
old  < strlen$1:>
new  < strlen$8:>

1607:
old  <	; Assign index 0>
new  <	; FunctionEnd strlen>

1608:
old  <	mov dword [rbp + 32], 0>
new  <>

1609:
old  <>
new  <section .data>

1610:
old  < strlen$2:>
new  <>

1611:
old  <	; IntegralToIntegral Â£temporary2685 index>
new  <int8$8#:>

1612:
old  <	mov eax, [rbp + 32]>
new  <	; Initializer Pointer 8>

1613:
old  <	mov rbx, 4294967295>
new  <	dq 8>

1614:
old  <	and rax, rbx>
new  <>

1615:
old  <>
new  <section .text>

1616:
old  < strlen$3:>
new  <>

1617:
old  <	; BinaryAdd Â£temporary2687 string Â£temporary2685>
new  < strerror:>

1618:
old  <	mov rsi, [rbp + 24]>
new  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1619:
old  <	add rsi, rax>
new  <>

1620:
old  <>
new  < strerror$1:>

1621:
old  < strlen$4:>
new  <	; Call localeconv 28 0>

1622:
old  <	; Dereference Â£temporary2684 -> Â£temporary2687 Â£temporary2687 0>
new  <	mov qword [rbp + 28], strerror$2>

1623:
old  <>
new  <	mov [rbp + 36], rbp>

1624:
old  < strlen$5:>
new  <	add rbp, 28>

1625:
old  <	; Equal 8 Â£temporary2684 -> Â£temporary2687 0>
new  <	jmp localeconv>

1626:
old  <	cmp byte [rsi], 0>
new  <>

1627:
old  <	je strlen$8>
new  < strerror$2:>

1628:
old  <>
new  <	; PostCall 28>

1629:
old  < strlen$6:>
new  <>

1630:
old  <	; BinaryAdd index index 1>
new  < strerror$3:>

1631:
old  <	inc dword [rbp + 32]>
new  <	; GetReturnValue Â£temporary2690>

1633:
old  < strlen$7:>
new  < strerror$4:>

1634:
old  <	; Goto 2>
new  <	; Assign localeConvPtr Â£temporary2690>

1635:
old  <	jmp strlen$2>
new  <	mov [rbp + 28], rbx>

1637:
old  < strlen$8:>
new  < strerror$5:>

1638:
old  <	; Return index>
new  <	; Equal 9 localeConvPtr 0>

1639:
old  <	mov ebx, [rbp + 32]>
new  <	cmp qword [rbp + 28], 0>

1640:
old  <	mov rax, [rbp]>
new  <	je strerror$9>

1641:
old  <	mov rdi, [rbp + 16]>
new  <>

1642:
old  <	mov rbp, [rbp + 8]>
new  < strerror$6:>

1643:
old  <	jmp rax>
new  <	; Dereference Â£temporary2692 -> localeConvPtr localeConvPtr 0>

1644:
old  <>
new  <	mov rsi, [rbp + 28]>

1645:
old  < strlen$9:>
new  <>

1646:
old  <	; FunctionEnd strlen>
new  < strerror$7:>

1647:
old  <>
new  <	; Assign Â£temporary2693 Â£temporary2692 -> localeConvPtr>

1648:
old  <section .data>
new  <	mov rax, [rsi + 56]>

1650:
old  <int8$8#:>
new  < strerror$8:>

1651:
old  <	; Initializer Pointer 8>
new  <	; Goto 10>

1652:
old  <	dq 8>
new  <	jmp strerror$10>

1654:
old  <section .text>
new  < strerror$9:>

1655:
old  <>
new  <	; Assign Â£temporary2693 0>

1656:
old  < strerror:>
new  <	mov rax, 0>

1657:
old  <	; PreCall 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1658:
old  <>
new  < strerror$10:>

1659:
old  < strerror$1:>
new  <	; Assign messageList Â£temporary2693>

1660:
old  <	; Call localeconv 28 0>
new  <	mov [rbp + 36], rax>

1661:
old  <	mov qword [rbp + 28], strerror$2>
new  <>

1662:
old  <	mov [rbp + 36], rbp>
new  < strerror$11:>

1663:
old  <	add rbp, 28>
new  <	; Equal 14 messageList 0>

1664:
old  <	jmp localeconv>
new  <	cmp qword [rbp + 36], 0>

1665:
old  <>
new  <	je strerror$14>

1666:
old  < strerror$2:>
new  <>

1667:
old  <	; PostCall 28>
new  < strerror$12:>

1668:
old  <>
new  <	; Assign Â£temporary2695 messageList>

1669:
old  < strerror$3:>
new  <	mov rax, [rbp + 36]>

1670:
old  <	; GetReturnValue Â£temporary2690>
new  <>

1671:
old  <>
new  < strerror$13:>

1672:
old  < strerror$4:>
new  <	; Goto 15>

1673:
old  <	; Assign localeConvPtr Â£temporary2690>
new  <	jmp strerror$15>

1674:
old  <	mov [rbp + 28], rbx>
new  <>

1675:
old  <>
new  < strerror$14:>

1676:
old  < strerror$5:>
new  <	; Assign Â£temporary2695 enMessageList>

1677:
old  <	; Equal 9 localeConvPtr 0>
new  <	mov rax, enMessageList>

1678:
old  <	cmp qword [rbp + 28], 0>
new  <>

1679:
old  <	je strerror$9>
new  < strerror$15:>

1680:
old  <>
new  <	; Assign messageList Â£temporary2695>

1681:
old  < strerror$6:>
new  <	mov [rbp + 36], rax>

1682:
old  <	; Dereference Â£temporary2692 -> localeConvPtr localeConvPtr 0>
new  <>

1683:
old  <	mov rsi, [rbp + 28]>
new  < strerror$16:>

1684:
old  <>
new  <	; IntegralToIntegral Â£temporary2697 errno>

1685:
old  < strerror$7:>
new  <	mov eax, [rbp + 24]>

1686:
old  <	; Assign Â£temporary2693 Â£temporary2692 -> localeConvPtr>
new  <	mov rbx, 4294967295>

1687:
old  <	mov rax, [rsi + 56]>
new  <	and rax, rbx>

1689:
old  < strerror$8:>
new  < strerror$17:>

1690:
old  <	; Goto 10>
new  <	; UnsignedMultiply Â£temporary2698 Â£temporary2697 8>

1691:
old  <	jmp strerror$10>
new  <	xor rdx, rdx>

1692:
old  <>
new  <	mul qword [int8$8#]>

1693:
old  < strerror$9:>
new  <>

1694:
old  <	; Assign Â£temporary2693 0>
new  < strerror$18:>

1695:
old  <	mov rax, 0>
new  <	; BinaryAdd Â£temporary2699 messageList Â£temporary2698>

1696:
old  <>
new  <	mov rsi, [rbp + 36]>

1697:
old  < strerror$10:>
new  <	add rsi, rax>

1698:
old  <	; Assign messageList Â£temporary2693>
new  <>

1699:
old  <	mov [rbp + 36], rax>
new  < strerror$19:>

1700:
old  <>
new  <	; Dereference Â£temporary2696 -> Â£temporary2699 Â£temporary2699 0>

1701:
old  < strerror$11:>
new  <>

1702:
old  <	; Equal 14 messageList 0>
new  < strerror$20:>

1703:
old  <	cmp qword [rbp + 36], 0>
new  <	; Return Â£temporary2696 -> Â£temporary2699>

1704:
old  <	je strerror$14>
new  <	mov rbx, [rsi]>

1705:
old  <>
new  <	mov rax, [rbp]>

1706:
old  < strerror$12:>
new  <	mov rdi, [rbp + 16]>

1707:
old  <	; Assign Â£temporary2695 messageList>
new  <	mov rbp, [rbp + 8]>

1708:
old  <	mov rax, [rbp + 36]>
new  <	jmp rax>

1710:
old  < strerror$13:>
new  < strerror$21:>

1711:
old  <	; Goto 15>
new  <	; FunctionEnd strerror>

1712:
old  <	jmp strerror$15>
new  <>

1713:
old  <>
new  <section .data>

1714:
old  < strerror$14:>
new  <>

1715:
old  <	; Assign Â£temporary2695 enMessageList>
new  <token:>

1716:
old  <	mov rax, enMessageList>
new  <	; Initializer Pointer 0>

1717:
old  <>
new  <	dq 0>

1718:
old  < strerror$15:>
new  <>

1719:
old  <	; Assign messageList Â£temporary2695>
new  <section .text>

1720:
old  <	mov [rbp + 36], rax>
new  <>

1721:
old  <>
new  < strtok:>

1722:
old  < strerror$16:>
new  <	; Equal 39 string 0>

1723:
old  <	; IntegralToIntegral Â£temporary2697 errno>
new  <	cmp qword [rbp + 24], 0>

1724:
old  <	mov eax, [rbp + 24]>
new  <	je strtok$39>

1725:
old  <	mov rbx, 4294967295>
new  <>

1726:
old  <	and rax, rbx>
new  < strtok$1:>

1727:
old  <>
new  <	; Dereference Â£temporary2701 -> string string 0>

1728:
old  < strerror$17:>
new  <	mov rsi, [rbp + 24]>

1729:
old  <	; UnsignedMultiply Â£temporary2698 Â£temporary2697 8>
new  <>

1730:
old  <	xor rdx, rdx>
new  < strtok$2:>

1731:
old  <	mul qword [int8$8#]>
new  <	; NotEqual 4 Â£temporary2701 -> string 0>

1732:
old  <>
new  <	cmp byte [rsi], 0>

1733:
old  < strerror$18:>
new  <	jne strtok$4>

1734:
old  <	; BinaryAdd Â£temporary2699 messageList Â£temporary2698>
new  <>

1735:
old  <	mov rsi, [rbp + 36]>
new  < strtok$3:>

1736:
old  <	add rsi, rax>
new  <	; Return 0>

1737:
old  <>
new  <	mov rbx, 0>

1738:
old  < strerror$19:>
new  <	mov rax, [rbp]>

1739:
old  <	; Dereference Â£temporary2696 -> Â£temporary2699 Â£temporary2699 0>
new  <	mov rdi, [rbp + 16]>

1740:
old  <>
new  <	mov rbp, [rbp + 8]>

1741:
old  < strerror$20:>
new  <	jmp rax>

1742:
old  <	; Return Â£temporary2696 -> Â£temporary2699>
new  <>

1743:
old  <	mov rbx, [rsi]>
new  < strtok$4:>

1744:
old  <	mov rax, [rbp]>
new  <	; Assign index 0>

1745:
old  <	mov rdi, [rbp + 16]>
new  <	mov dword [rbp + 40], 0>

1746:
old  <	mov rbp, [rbp + 8]>
new  <>

1747:
old  <	jmp rax>
new  < strtok$5:>

1748:
old  <>
new  <	; IntegralToIntegral Â£temporary2704 index>

1749:
old  < strerror$21:>
new  <	mov eax, [rbp + 40]>

1750:
old  <	; FunctionEnd strerror>
new  <	mov rbx, 4294967295>

1751:
old  <>
new  <	and rax, rbx>

1752:
old  <section .data>
new  <>

1753:
old  <>
new  < strtok$6:>

1754:
old  <token:>
new  <	; BinaryAdd Â£temporary2706 string Â£temporary2704>

1755:
old  <	; Initializer Pointer 0>
new  <	mov rsi, [rbp + 24]>

1756:
old  <	dq 0>
new  <	add rsi, rax>

1758:
old  <section .text>
new  < strtok$7:>

1759:
old  <>
new  <	; Dereference Â£temporary2703 -> Â£temporary2706 Â£temporary2706 0>

1760:
old  < strtok:>
new  <>

1761:
old  <	; Empty>
new  < strtok$8:>

1762:
old  <>
new  <	; Equal 33 Â£temporary2703 -> Â£temporary2706 0>

1763:
old  < strtok$1:>
new  <	cmp byte [rsi], 0>

1764:
old  <	; Equal 40 string 0>
new  <	je strtok$33>

1765:
old  <	cmp qword [rbp + 24], 0>
new  <>

1766:
old  <	je strtok$40>
new  < strtok$9:>

1767:
old  <>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1768:
old  < strtok$2:>
new  <>

1769:
old  <	; Dereference Â£temporary2701 -> string string 0>
new  < strtok$10:>

1770:
old  <	mov rsi, [rbp + 24]>
new  <	; Parameter pointer charSet 76>

1771:
old  <>
new  <	mov rax, [rbp + 32]>

1772:
old  < strtok$3:>
new  <	mov [rbp + 76], rax>

1773:
old  <	; NotEqual 5 Â£temporary2701 -> string 0>
new  <>

1774:
old  <	cmp byte [rsi], 0>
new  < strtok$11:>

1775:
old  <	jne strtok$5>
new  <	; IntegralToIntegral Â£temporary2710 index>

1776:
old  <>
new  <	mov eax, [rbp + 40]>

1777:
old  < strtok$4:>
new  <	mov rbx, 4294967295>

1778:
old  <	; Return 0>
new  <	and rax, rbx>

1779:
old  <	mov rbx, 0>
new  <>

1780:
old  <	mov rax, [rbp]>
new  < strtok$12:>

1781:
old  <	mov rdi, [rbp + 16]>
new  <	; BinaryAdd Â£temporary2712 string Â£temporary2710>

1782:
old  <	mov rbp, [rbp + 8]>
new  <	mov rsi, [rbp + 24]>

1783:
old  <	jmp rax>
new  <	add rsi, rax>

1785:
old  < strtok$5:>
new  < strtok$13:>

1786:
old  <	; Assign index 0>
new  <	; Dereference Â£temporary2709 -> Â£temporary2712 Â£temporary2712 0>

1787:
old  <	mov dword [rbp + 40], 0>
new  <>

1788:
old  <>
new  < strtok$14:>

1789:
old  < strtok$6:>
new  <	; IntegralToIntegral Â£temporary2713 Â£temporary2709 -> Â£temporary2712>

1790:
old  <	; IntegralToIntegral Â£temporary2704 index>
new  <	mov al, [rsi]>

1791:
old  <	mov eax, [rbp + 40]>
new  <	and eax, 255>

1792:
old  <	mov rbx, 4294967295>
new  <	cmp al, 0>

1793:
old  <	and rax, rbx>
new  <	jge strtok$15>

1794:
old  <>
new  <	neg al>

1795:
old  < strtok$7:>
new  <	neg eax>

1796:
old  <	; BinaryAdd Â£temporary2706 string Â£temporary2704>
new  <>

1797:
old  <	mov rsi, [rbp + 24]>
new  < strtok$15:>

1798:
old  <	add rsi, rax>
new  <	; Parameter signedint Â£temporary2713 84>

1799:
old  <>
new  <	mov [rbp + 84], eax>

1800:
old  < strtok$8:>
new  <>

1801:
old  <	; Dereference Â£temporary2703 -> Â£temporary2706 Â£temporary2706 0>
new  < strtok$16:>

1802:
old  <>
new  <	; Call strchr 52 0>

1803:
old  < strtok$9:>
new  <	mov qword [rbp + 52], strtok$17>

1804:
old  <	; Equal 34 Â£temporary2703 -> Â£temporary2706 0>
new  <	mov [rbp + 60], rbp>

1805:
old  <	cmp byte [rsi], 0>
new  <	add rbp, 52>

1806:
old  <	je strtok$34>
new  <	jmp strchr>

1808:
old  < strtok$10:>
new  < strtok$17:>

1809:
old  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; PostCall 52>

1811:
old  < strtok$11:>
new  < strtok$18:>

1812:
old  <	; Parameter pointer charSet 76>
new  <	; GetReturnValue Â£temporary2714>

1813:
old  <	mov rax, [rbp + 32]>
new  <>

1814:
old  <	mov [rbp + 76], rax>
new  < strtok$19:>

1815:
old  <>
new  <	; Equal 31 Â£temporary2714 0>

1816:
old  < strtok$12:>
new  <	cmp rbx, 0>

1817:
old  <	; IntegralToIntegral Â£temporary2710 index>
new  <	je strtok$31>

1818:
old  <	mov eax, [rbp + 40]>
new  <>

1819:
old  <	mov rbx, 4294967295>
new  < strtok$20:>

1820:
old  <	and rax, rbx>
new  <	; IntegralToIntegral Â£temporary2717 index>

1821:
old  <>
new  <	mov eax, [rbp + 40]>

1822:
old  < strtok$13:>
new  <	mov rbx, 4294967295>

1823:
old  <	; BinaryAdd Â£temporary2712 string Â£temporary2710>
new  <	and rax, rbx>

1824:
old  <	mov rsi, [rbp + 24]>
new  <>

1825:
old  <	add rsi, rax>
new  < strtok$21:>

1826:
old  <>
new  <	; BinaryAdd Â£temporary2719 string Â£temporary2717>

1827:
old  < strtok$14:>
new  <	mov rsi, [rbp + 24]>

1828:
old  <	; Dereference Â£temporary2709 -> Â£temporary2712 Â£temporary2712 0>
new  <	add rsi, rax>

1830:
old  < strtok$15:>
new  < strtok$22:>

1831:
old  <	; IntegralToIntegral Â£temporary2713 Â£temporary2709 -> Â£temporary2712>
new  <	; Dereference Â£temporary2716 -> Â£temporary2719 Â£temporary2719 0>

1832:
old  <	mov al, [rsi]>
new  <>

1833:
old  <	and eax, 255>
new  < strtok$23:>

1834:
old  <	cmp al, 0>
new  <	; Assign Â£temporary2716 -> Â£temporary2719 0>

1835:
old  <	jge strtok$16>
new  <	mov byte [rsi], 0>

1836:
old  <	neg al>
new  <>

1837:
old  <	neg eax>
new  < strtok$24:>

1838:
old  <>
new  <	; BinaryAdd Â£temporary2720 index 1>

1839:
old  < strtok$16:>
new  <	mov eax, [rbp + 40]>

1840:
old  <	; Parameter signedint Â£temporary2713 84>
new  <	inc eax>

1841:
old  <	mov [rbp + 84], eax>
new  <>

1842:
old  <>
new  < strtok$25:>

1843:
old  < strtok$17:>
new  <	; IntegralToIntegral Â£temporary2722 Â£temporary2720>

1844:
old  <	; Call strchr 52 0>
new  <	mov rbx, 4294967295>

1845:
old  <	mov qword [rbp + 52], strtok$18>
new  <	and rax, rbx>

1846:
old  <	mov [rbp + 60], rbp>
new  <>

1847:
old  <	add rbp, 52>
new  < strtok$26:>

1848:
old  <	jmp strchr>
new  <	; BinaryAdd Â£temporary2724 string Â£temporary2722>

1849:
old  <>
new  <	mov rsi, [rbp + 24]>

1850:
old  < strtok$18:>
new  <	add rsi, rax>

1851:
old  <	; PostCall 52>
new  <>

1852:
old  <>
new  < strtok$27:>

1853:
old  < strtok$19:>
new  <	; Dereference Â£temporary2721 -> Â£temporary2724 Â£temporary2724 0>

1854:
old  <	; GetReturnValue Â£temporary2714>
new  <>

1855:
old  <>
new  < strtok$28:>

1856:
old  < strtok$20:>
new  <	; Address Â£temporary2725 Â£temporary2721 -> Â£temporary2724>

1857:
old  <	; Equal 32 Â£temporary2714 0>
new  <>

1858:
old  <	cmp rbx, 0>
new  < strtok$29:>

1859:
old  <	je strtok$32>
new  <	; Assign token Â£temporary2725>

1860:
old  <>
new  <	mov [token], rsi>

1861:
old  < strtok$21:>
new  <>

1862:
old  <	; IntegralToIntegral Â£temporary2717 index>
new  < strtok$30:>

1863:
old  <	mov eax, [rbp + 40]>
new  <	; Return string>

1864:
old  <	mov rbx, 4294967295>
new  <	mov rbx, [rbp + 24]>

1865:
old  <	and rax, rbx>
new  <	mov rax, [rbp]>

1866:
old  <>
new  <	mov rdi, [rbp + 16]>

1867:
old  < strtok$22:>
new  <	mov rbp, [rbp + 8]>

1868:
old  <	; BinaryAdd Â£temporary2719 string Â£temporary2717>
new  <	jmp rax>

1869:
old  <	mov rsi, [rbp + 24]>
new  <>

1870:
old  <	add rsi, rax>
new  < strtok$31:>

1871:
old  <>
new  <	; BinaryAdd index index 1>

1872:
old  < strtok$23:>
new  <	inc dword [rbp + 40]>

1873:
old  <	; Dereference Â£temporary2716 -> Â£temporary2719 Â£temporary2719 0>
new  <>

1874:
old  <>
new  < strtok$32:>

1875:
old  < strtok$24:>
new  <	; Goto 5>

1876:
old  <	; Assign Â£temporary2716 -> Â£temporary2719 0>
new  <	jmp strtok$5>

1877:
old  <	mov byte [rsi], 0>
new  <>

1878:
old  <>
new  < strtok$33:>

1879:
old  < strtok$25:>
new  <	; IntegralToIntegral Â£temporary2727 index>

1880:
old  <	; BinaryAdd Â£temporary2720 index 1>
new  <	mov eax, [rbp + 40]>

1881:
old  <	mov eax, [rbp + 40]>
new  <	mov rbx, 4294967295>

1882:
old  <	inc eax>
new  <	and rax, rbx>

1884:
old  < strtok$26:>
new  < strtok$34:>

1885:
old  <	; IntegralToIntegral Â£temporary2722 Â£temporary2720>
new  <	; BinaryAdd Â£temporary2729 string Â£temporary2727>

1886:
old  <	mov rbx, 4294967295>
new  <	mov rsi, [rbp + 24]>

1887:
old  <	and rax, rbx>
new  <	add rsi, rax>

1889:
old  < strtok$27:>
new  < strtok$35:>

1890:
old  <	; BinaryAdd Â£temporary2724 string Â£temporary2722>
new  <	; Dereference Â£temporary2726 -> Â£temporary2729 Â£temporary2729 0>

1891:
old  <	mov rsi, [rbp + 24]>
new  <>

1892:
old  <	add rsi, rax>
new  < strtok$36:>

1893:
old  <>
new  <	; Address Â£temporary2730 Â£temporary2726 -> Â£temporary2729>

1894:
old  < strtok$28:>
new  <>

1895:
old  <	; Dereference Â£temporary2721 -> Â£temporary2724 Â£temporary2724 0>
new  < strtok$37:>

1896:
old  <>
new  <	; Assign token Â£temporary2730>

1897:
old  < strtok$29:>
new  <	mov [token], rsi>

1898:
old  <	; Address Â£temporary2725 Â£temporary2721 -> Â£temporary2724>
new  <>

1899:
old  <>
new  < strtok$38:>

1900:
old  < strtok$30:>
new  <	; Return string>

1901:
old  <	; Assign token Â£temporary2725>
new  <	mov rbx, [rbp + 24]>

1902:
old  <	mov [token], rsi>
new  <	mov rax, [rbp]>

1903:
old  <>
new  <	mov rdi, [rbp + 16]>

1904:
old  < strtok$31:>
new  <	mov rbp, [rbp + 8]>

1905:
old  <	; Return string>
new  <	jmp rax>

1906:
old  <	mov rbx, [rbp + 24]>
new  <>

1907:
old  <	mov rax, [rbp]>
new  < strtok$39:>

1908:
old  <	mov rdi, [rbp + 16]>
new  <	; NotEqual 41 token 0>

1909:
old  <	mov rbp, [rbp + 8]>
new  <	cmp qword [token], 0>

1910:
old  <	jmp rax>
new  <	jne strtok$41>

1912:
old  < strtok$32:>
new  < strtok$40:>

1913:
old  <	; BinaryAdd index index 1>
new  <	; Return 0>

1914:
old  <	inc dword [rbp + 40]>
new  <	mov rbx, 0>

1915:
old  <>
new  <	mov rax, [rbp]>

1916:
old  < strtok$33:>
new  <	mov rdi, [rbp + 16]>

1917:
old  <	; Goto 6>
new  <	mov rbp, [rbp + 8]>

1918:
old  <	jmp strtok$6>
new  <	jmp rax>

1920:
old  < strtok$34:>
new  < strtok$41:>

1921:
old  <	; IntegralToIntegral Â£temporary2727 index>
new  <	; Dereference Â£temporary2732 -> token token 0>

1922:
old  <	mov eax, [rbp + 40]>
new  <	mov rsi, [token]>

1923:
old  <	mov rbx, 4294967295>
new  <>

1924:
old  <	and rax, rbx>
new  < strtok$42:>

1925:
old  <>
new  <	; NotEqual 44 Â£temporary2732 -> token 0>

1926:
old  < strtok$35:>
new  <	cmp byte [rsi], 0>

1927:
old  <	; BinaryAdd Â£temporary2729 string Â£temporary2727>
new  <	jne strtok$44>

1928:
old  <	mov rsi, [rbp + 24]>
new  <>

1929:
old  <	add rsi, rax>
new  < strtok$43:>

1930:
old  <>
new  <	; Return 0>

1931:
old  < strtok$36:>
new  <	mov rbx, 0>

1932:
old  <	; Dereference Â£temporary2726 -> Â£temporary2729 Â£temporary2729 0>
new  <	mov rax, [rbp]>

1933:
old  <>
new  <	mov rdi, [rbp + 16]>

1934:
old  < strtok$37:>
new  <	mov rbp, [rbp + 8]>

1935:
old  <	; Address Â£temporary2730 Â£temporary2726 -> Â£temporary2729>
new  <	jmp rax>

1937:
old  < strtok$38:>
new  < strtok$44:>

1938:
old  <	; Assign token Â£temporary2730>
new  <	; Assign index 0>

1939:
old  <	mov [token], rsi>
new  <	mov dword [rbp + 40], 0>

1941:
old  < strtok$39:>
new  < strtok$45:>

1942:
old  <	; Return string>
new  <	; IntegralToIntegral Â£temporary2735 index>

1943:
old  <	mov rbx, [rbp + 24]>
new  <	mov eax, [rbp + 40]>

1944:
old  <	mov rax, [rbp]>
new  <	mov rbx, 4294967295>

1945:
old  <	mov rdi, [rbp + 16]>
new  <	and rax, rbx>

1946:
old  <	mov rbp, [rbp + 8]>
new  <>

1947:
old  <	jmp rax>
new  < strtok$46:>

1948:
old  <>
new  <	; BinaryAdd Â£temporary2737 token Â£temporary2735>

1949:
old  < strtok$40:>
new  <	mov rsi, [token]>

1950:
old  <	; NotEqual 42 token 0>
new  <	add rsi, rax>

1951:
old  <	cmp qword [token], 0>
new  <>

1952:
old  <	jne strtok$42>
new  < strtok$47:>

1953:
old  <>
new  <	; Dereference Â£temporary2734 -> Â£temporary2737 Â£temporary2737 0>

1954:
old  < strtok$41:>
new  <>

1955:
old  <	; Return 0>
new  < strtok$48:>

1956:
old  <	mov rbx, 0>
new  <	; Equal 74 Â£temporary2734 -> Â£temporary2737 0>

1957:
old  <	mov rax, [rbp]>
new  <	cmp byte [rsi], 0>

1958:
old  <	mov rdi, [rbp + 16]>
new  <	je strtok$74>

1959:
old  <	mov rbp, [rbp + 8]>
new  <>

1960:
old  <	jmp rax>
new  < strtok$49:>

1961:
old  <>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1962:
old  < strtok$42:>
new  <>

1963:
old  <	; Dereference Â£temporary2732 -> token token 0>
new  < strtok$50:>

1964:
old  <	mov rsi, [token]>
new  <	; Parameter pointer charSet 76>

1965:
old  <>
new  <	mov rax, [rbp + 32]>

1966:
old  < strtok$43:>
new  <	mov [rbp + 76], rax>

1967:
old  <	; NotEqual 45 Â£temporary2732 -> token 0>
new  <>

1968:
old  <	cmp byte [rsi], 0>
new  < strtok$51:>

1969:
old  <	jne strtok$45>
new  <	; IntegralToIntegral Â£temporary2741 index>

1970:
old  <>
new  <	mov eax, [rbp + 40]>

1971:
old  < strtok$44:>
new  <	mov rbx, 4294967295>

1972:
old  <	; Return 0>
new  <	and rax, rbx>

1973:
old  <	mov rbx, 0>
new  <>

1974:
old  <	mov rax, [rbp]>
new  < strtok$52:>

1975:
old  <	mov rdi, [rbp + 16]>
new  <	; BinaryAdd Â£temporary2743 token Â£temporary2741>

1976:
old  <	mov rbp, [rbp + 8]>
new  <	mov rsi, [token]>

1977:
old  <	jmp rax>
new  <	add rsi, rax>

1979:
old  < strtok$45:>
new  < strtok$53:>

1980:
old  <	; Assign index 0>
new  <	; Dereference Â£temporary2740 -> Â£temporary2743 Â£temporary2743 0>

1981:
old  <	mov dword [rbp + 40], 0>
new  <>

1982:
old  <>
new  < strtok$54:>

1983:
old  < strtok$46:>
new  <	; IntegralToIntegral Â£temporary2744 Â£temporary2740 -> Â£temporary2743>

1984:
old  <	; IntegralToIntegral Â£temporary2735 index>
new  <	mov al, [rsi]>

1985:
old  <	mov eax, [rbp + 40]>
new  <	and eax, 255>

1986:
old  <	mov rbx, 4294967295>
new  <	cmp al, 0>

1987:
old  <	and rax, rbx>
new  <	jge strtok$55>

1988:
old  <>
new  <	neg al>

1989:
old  < strtok$47:>
new  <	neg eax>

1990:
old  <	; BinaryAdd Â£temporary2737 token Â£temporary2735>
new  <>

1991:
old  <	mov rsi, [token]>
new  < strtok$55:>

1992:
old  <	add rsi, rax>
new  <	; Parameter signedint Â£temporary2744 84>

1993:
old  <>
new  <	mov [rbp + 84], eax>

1994:
old  < strtok$48:>
new  <>

1995:
old  <	; Dereference Â£temporary2734 -> Â£temporary2737 Â£temporary2737 0>
new  < strtok$56:>

1996:
old  <>
new  <	; Call strchr 52 0>

1997:
old  < strtok$49:>
new  <	mov qword [rbp + 52], strtok$57>

1998:
old  <	; Equal 75 Â£temporary2734 -> Â£temporary2737 0>
new  <	mov [rbp + 60], rbp>

1999:
old  <	cmp byte [rsi], 0>
new  <	add rbp, 52>

2000:
old  <	je strtok$75>
new  <	jmp strchr>

2002:
old  < strtok$50:>
new  < strtok$57:>

2003:
old  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; PostCall 52>

2005:
old  < strtok$51:>
new  < strtok$58:>

2006:
old  <	; Parameter pointer charSet 76>
new  <	; GetReturnValue Â£temporary2745>

2007:
old  <	mov rax, [rbp + 32]>
new  <>

2008:
old  <	mov [rbp + 76], rax>
new  < strtok$59:>

2009:
old  <>
new  <	; Equal 72 Â£temporary2745 0>

2010:
old  < strtok$52:>
new  <	cmp rbx, 0>

2011:
old  <	; IntegralToIntegral Â£temporary2741 index>
new  <	je strtok$72>

2012:
old  <	mov eax, [rbp + 40]>
new  <>

2013:
old  <	mov rbx, 4294967295>
new  < strtok$60:>

2014:
old  <	and rax, rbx>
new  <	; Assign tokenStart2 token>

2015:
old  <>
new  <	mov rax, [token]>

2016:
old  < strtok$53:>
new  <	mov [rbp + 52], rax>

2017:
old  <	; BinaryAdd Â£temporary2743 token Â£temporary2741>
new  <>

2018:
old  <	mov rsi, [token]>
new  < strtok$61:>

2019:
old  <	add rsi, rax>
new  <	; IntegralToIntegral Â£temporary2748 index>

2020:
old  <>
new  <	mov eax, [rbp + 40]>

2021:
old  < strtok$54:>
new  <	mov rbx, 4294967295>

2022:
old  <	; Dereference Â£temporary2740 -> Â£temporary2743 Â£temporary2743 0>
new  <	and rax, rbx>

2024:
old  < strtok$55:>
new  < strtok$62:>

2025:
old  <	; IntegralToIntegral Â£temporary2744 Â£temporary2740 -> Â£temporary2743>
new  <	; BinaryAdd Â£temporary2750 token Â£temporary2748>

2026:
old  <	mov al, [rsi]>
new  <	mov rsi, [token]>

2027:
old  <	and eax, 255>
new  <	add rsi, rax>

2028:
old  <	cmp al, 0>
new  <>

2029:
old  <	jge strtok$56>
new  < strtok$63:>

2030:
old  <	neg al>
new  <	; Dereference Â£temporary2747 -> Â£temporary2750 Â£temporary2750 0>

2031:
old  <	neg eax>
new  <>

2032:
old  <>
new  < strtok$64:>

2033:
old  < strtok$56:>
new  <	; Assign Â£temporary2747 -> Â£temporary2750 0>

2034:
old  <	; Parameter signedint Â£temporary2744 84>
new  <	mov byte [rsi], 0>

2035:
old  <	mov [rbp + 84], eax>
new  <>

2036:
old  <>
new  < strtok$65:>

2037:
old  < strtok$57:>
new  <	; BinaryAdd Â£temporary2751 index 1>

2038:
old  <	; Call strchr 52 0>
new  <	mov eax, [rbp + 40]>

2039:
old  <	mov qword [rbp + 52], strtok$58>
new  <	inc eax>

2040:
old  <	mov [rbp + 60], rbp>
new  <>

2041:
old  <	add rbp, 52>
new  < strtok$66:>

2042:
old  <	jmp strchr>
new  <	; IntegralToIntegral Â£temporary2753 Â£temporary2751>

2043:
old  <>
new  <	mov rbx, 4294967295>

2044:
old  < strtok$58:>
new  <	and rax, rbx>

2045:
old  <	; PostCall 52>
new  <>

2046:
old  <>
new  < strtok$67:>

2047:
old  < strtok$59:>
new  <	; BinaryAdd Â£temporary2755 token Â£temporary2753>

2048:
old  <	; GetReturnValue Â£temporary2745>
new  <	mov rsi, [token]>

2049:
old  <>
new  <	add rsi, rax>

2050:
old  < strtok$60:>
new  <>

2051:
old  <	; Equal 73 Â£temporary2745 0>
new  < strtok$68:>

2052:
old  <	cmp rbx, 0>
new  <	; Dereference Â£temporary2752 -> Â£temporary2755 Â£temporary2755 0>

2053:
old  <	je strtok$73>
new  <>

2054:
old  <>
new  < strtok$69:>

2055:
old  < strtok$61:>
new  <	; Address Â£temporary2756 Â£temporary2752 -> Â£temporary2755>

2056:
old  <	; Assign tokenStart2 token>
new  <>

2057:
old  <	mov rax, [token]>
new  < strtok$70:>

2058:
old  <	mov [rbp + 52], rax>
new  <	; Assign token Â£temporary2756>

2059:
old  <>
new  <	mov [token], rsi>

2060:
old  < strtok$62:>
new  <>

2061:
old  <	; IntegralToIntegral Â£temporary2748 index>
new  < strtok$71:>

2062:
old  <	mov eax, [rbp + 40]>
new  <	; Return tokenStart2>

2063:
old  <	mov rbx, 4294967295>
new  <	mov rbx, [rbp + 52]>

2064:
old  <	and rax, rbx>
new  <	mov rax, [rbp]>

2065:
old  <>
new  <	mov rdi, [rbp + 16]>

2066:
old  < strtok$63:>
new  <	mov rbp, [rbp + 8]>

2067:
old  <	; BinaryAdd Â£temporary2750 token Â£temporary2748>
new  <	jmp rax>

2068:
old  <	mov rsi, [token]>
new  <>

2069:
old  <	add rsi, rax>
new  < strtok$72:>

2070:
old  <>
new  <	; BinaryAdd index index 1>

2071:
old  < strtok$64:>
new  <	inc dword [rbp + 40]>

2072:
old  <	; Dereference Â£temporary2747 -> Â£temporary2750 Â£temporary2750 0>
new  <>

2073:
old  <>
new  < strtok$73:>

2074:
old  < strtok$65:>
new  <	; Goto 45>

2075:
old  <	; Assign Â£temporary2747 -> Â£temporary2750 0>
new  <	jmp strtok$45>

2076:
old  <	mov byte [rsi], 0>
new  <>

2077:
old  <>
new  < strtok$74:>

2078:
old  < strtok$66:>
new  <	; Assign tokenStart token>

2079:
old  <	; BinaryAdd Â£temporary2751 index 1>
new  <	mov rax, [token]>

2080:
old  <	mov eax, [rbp + 40]>
new  <	mov [rbp + 44], rax>

2081:
old  <	inc eax>
new  <>

2082:
old  <>
new  < strtok$75:>

2083:
old  < strtok$67:>
new  <	; IntegralToIntegral Â£temporary2758 index>

2084:
old  <	; IntegralToIntegral Â£temporary2753 Â£temporary2751>
new  <	mov eax, [rbp + 40]>

2088:
old  < strtok$68:>
new  < strtok$76:>

2089:
old  <	; BinaryAdd Â£temporary2755 token Â£temporary2753>
new  <	; BinaryAdd Â£temporary2760 token Â£temporary2758>

2093:
old  < strtok$69:>
new  < strtok$77:>

2094:
old  <	; Dereference Â£temporary2752 -> Â£temporary2755 Â£temporary2755 0>
new  <	; Dereference Â£temporary2757 -> Â£temporary2760 Â£temporary2760 0>

2096:
old  < strtok$70:>
new  < strtok$78:>

2097:
old  <	; Address Â£temporary2756 Â£temporary2752 -> Â£temporary2755>
new  <	; Address Â£temporary2761 Â£temporary2757 -> Â£temporary2760>

2099:
old  < strtok$71:>
new  < strtok$79:>

2100:
old  <	; Assign token Â£temporary2756>
new  <	; Assign token Â£temporary2761>

2103:
old  < strtok$72:>
new  < strtok$80:>

2104:
old  <	; Return tokenStart2>
new  <	; Return tokenStart>

2105:
old  <	mov rbx, [rbp + 52]>
new  <	mov rbx, [rbp + 44]>

2111:
old  < strtok$73:>
new  < strtok$81:>

2112:
old  <	; BinaryAdd index index 1>
new  <	; FunctionEnd strtok>

2113:
old  <	inc dword [rbp + 40]>
new  <>

2114:
old  <>
new  <section .text>

2115:
old  < strtok$74:>
new  <>

2116:
old  <	; Goto 46>
new  < memcpy:>

2117:
old  <	jmp strtok$46>
new  <	; IntegralToIntegral Â£temporary2762 target>

2118:
old  <>
new  <	mov rax, [rbp + 24]>

2119:
old  < strtok$75:>
new  <>

2120:
old  <	; Assign tokenStart token>
new  < memcpy$1:>

2121:
old  <	mov rax, [token]>
new  <	; Assign charTarget Â£temporary2762>

2124:
old  < strtok$76:>
new  < memcpy$2:>

2125:
old  <	; IntegralToIntegral Â£temporary2758 index>
new  <	; IntegralToIntegral Â£temporary2763 source>

2126:
old  <	mov eax, [rbp + 40]>
new  <	mov rax, [rbp + 32]>

2127:
old  <	mov rbx, 4294967295>
new  <>

2128:
old  <	and rax, rbx>
new  < memcpy$3:>

2129:
old  <>
new  <	; Assign charSource Â£temporary2763>

2130:
old  < strtok$77:>
new  <	mov [rbp + 52], rax>

2131:
old  <	; BinaryAdd Â£temporary2760 token Â£temporary2758>
new  <>

2132:
old  <	mov rsi, [token]>
new  < memcpy$4:>

2133:
old  <	add rsi, rax>
new  <	; Assign index 0>

2134:
old  <>
new  <	mov dword [rbp + 60], 0>

2135:
old  < strtok$78:>
new  <>

2136:
old  <	; Dereference Â£temporary2757 -> Â£temporary2760 Â£temporary2760 0>
new  < memcpy$5:>

2137:
old  <>
new  <	; SignedGreaterThanEqual 15 index size>

2138:
old  < strtok$79:>
new  <	mov eax, [rbp + 40]>

2139:
old  <	; Address Â£temporary2761 Â£temporary2757 -> Â£temporary2760>
new  <	cmp [rbp + 60], eax>

2140:
old  <>
new  <	jge memcpy$15>

2141:
old  < strtok$80:>
new  <>

2142:
old  <	; Assign token Â£temporary2761>
new  < memcpy$6:>

2143:
old  <	mov [token], rsi>
new  <	; IntegralToIntegral Â£temporary2767 index>

2144:
old  <>
new  <	mov eax, [rbp + 60]>

2145:
old  < strtok$81:>
new  <	mov rbx, 4294967295>

2146:
old  <	; Return tokenStart>
new  <	and rax, rbx>

2147:
old  <	mov rbx, [rbp + 44]>
new  <>

2148:
old  <	mov rax, [rbp]>
new  < memcpy$7:>

2149:
old  <	mov rdi, [rbp + 16]>
new  <	; BinaryAdd Â£temporary2769 charTarget Â£temporary2767>

2150:
old  <	mov rbp, [rbp + 8]>
new  <	mov rsi, [rbp + 44]>

2151:
old  <	jmp rax>
new  <	add rsi, rax>

2153:
old  < strtok$82:>
new  < memcpy$8:>

2154:
old  <	; FunctionEnd strtok>
new  <	; Dereference Â£temporary2766 -> Â£temporary2769 Â£temporary2769 0>

2156:
old  <section .text>
new  < memcpy$9:>

2157:
old  <>
new  <	; IntegralToIntegral Â£temporary2771 index>

2158:
old  < memcpy:>
new  <	mov eax, [rbp + 60]>

2159:
old  <	; IntegralToIntegral Â£temporary2762 target>
new  <	mov rbx, 4294967295>

2160:
old  <	mov rax, [rbp + 24]>
new  <	and rax, rbx>

2162:
old  < memcpy$1:>
new  < memcpy$10:>

2163:
old  <	; Assign charTarget Â£temporary2762>
new  <	; BinaryAdd Â£temporary2773 charSource Â£temporary2771>

2164:
old  <	mov [rbp + 44], rax>
new  <	mov rdi, [rbp + 52]>

2165:
old  <>
new  <	add rdi, rax>

2166:
old  < memcpy$2:>
new  <>

2167:
old  <	; IntegralToIntegral Â£temporary2763 source>
new  < memcpy$11:>

2168:
old  <	mov rax, [rbp + 32]>
new  <	; Dereference Â£temporary2770 -> Â£temporary2773 Â£temporary2773 0>

2170:
old  < memcpy$3:>
new  < memcpy$12:>

2171:
old  <	; Assign charSource Â£temporary2763>
new  <	; Assign Â£temporary2766 -> Â£temporary2769 Â£temporary2770 -> Â£temporary2773>

2172:
old  <	mov [rbp + 52], rax>
new  <	mov al, [rdi]>

2173:
old  <>
new  <	mov [rsi], al>

2174:
old  < memcpy$4:>
new  <>

2175:
old  <	; Assign index 0>
new  < memcpy$13:>

2176:
old  <	mov dword [rbp + 60], 0>
new  <	; BinaryAdd index index 1>

2177:
old  <>
new  <	inc dword [rbp + 60]>

2178:
old  < memcpy$5:>
new  <>

2179:
old  <	; SignedGreaterThanEqual 15 index size>
new  < memcpy$14:>

2180:
old  <	mov eax, [rbp + 40]>
new  <	; Goto 5>

2181:
old  <	cmp [rbp + 60], eax>
new  <	jmp memcpy$5>

2182:
old  <	jge memcpy$15>
new  <>

2183:
old  <>
new  < memcpy$15:>

2184:
old  < memcpy$6:>
new  <	; IntegralToIntegral Â£temporary2774 target>

2185:
old  <	; IntegralToIntegral Â£temporary2767 index>
new  <	mov rbx, [rbp + 24]>

2186:
old  <	mov eax, [rbp + 60]>
new  <>

2187:
old  <	mov rbx, 4294967295>
new  < memcpy$16:>

2188:
old  <	and rax, rbx>
new  <	; Return Â£temporary2774>

2189:
old  <>
new  <	mov rax, [rbp]>

2190:
old  < memcpy$7:>
new  <	mov rdi, [rbp + 16]>

2191:
old  <	; BinaryAdd Â£temporary2769 charTarget Â£temporary2767>
new  <	mov rbp, [rbp + 8]>

2192:
old  <	mov rsi, [rbp + 44]>
new  <	jmp rax>

2193:
old  <	add rsi, rax>
new  <>

2194:
old  <>
new  < memcpy$17:>

2195:
old  < memcpy$8:>
new  <	; FunctionEnd memcpy>

2196:
old  <	; Dereference Â£temporary2766 -> Â£temporary2769 Â£temporary2769 0>
new  <>

2197:
old  <>
new  <section .text>

2198:
old  < memcpy$9:>
new  <>

2199:
old  <	; IntegralToIntegral Â£temporary2771 index>
new  < memmove:>

2200:
old  <	mov eax, [rbp + 60]>
new  <	; IntegralToIntegral Â£temporary2775 target>

2201:
old  <	mov rbx, 4294967295>
new  <	mov rax, [rbp + 24]>

2202:
old  <	and rax, rbx>
new  <>

2203:
old  <>
new  < memmove$1:>

2204:
old  < memcpy$10:>
new  <	; Assign charTarget Â£temporary2775>

2205:
old  <	; BinaryAdd Â£temporary2773 charSource Â£temporary2771>
new  <	mov [rbp + 44], rax>

2206:
old  <	mov rdi, [rbp + 52]>
new  <>

2207:
old  <	add rdi, rax>
new  < memmove$2:>

2208:
old  <>
new  <	; IntegralToIntegral Â£temporary2776 source>

2209:
old  < memcpy$11:>
new  <	mov rax, [rbp + 32]>

2210:
old  <	; Dereference Â£temporary2770 -> Â£temporary2773 Â£temporary2773 0>
new  <>

2211:
old  <>
new  < memmove$3:>

2212:
old  < memcpy$12:>
new  <	; Assign charSource Â£temporary2776>

2213:
old  <	; Assign Â£temporary2766 -> Â£temporary2769 Â£temporary2770 -> Â£temporary2773>
new  <	mov [rbp + 52], rax>

2214:
old  <	mov al, [rdi]>
new  <>

2215:
old  <	mov [rsi], al>
new  < memmove$4:>

2216:
old  <>
new  <	; SignedGreaterThanEqual 16 source target>

2217:
old  < memcpy$13:>
new  <	mov rax, [rbp + 24]>

2218:
old  <	; BinaryAdd index index 1>
new  <	cmp [rbp + 32], rax>

2219:
old  <	inc dword [rbp + 60]>
new  <	jge memmove$16>

2221:
old  < memcpy$14:>
new  < memmove$5:>

2222:
old  <	; Goto 5>
new  <	; BinarySubtract index size 1>

2223:
old  <	jmp memcpy$5>
new  <	mov eax, [rbp + 40]>

2224:
old  <>
new  <	dec eax>

2225:
old  < memcpy$15:>
new  <	mov [rbp + 60], eax>

2226:
old  <	; IntegralToIntegral Â£temporary2774 target>
new  <>

2227:
old  <	mov rbx, [rbp + 24]>
new  < memmove$6:>

2228:
old  <>
new  <	; SignedLessThan 27 index 0>

2229:
old  < memcpy$16:>
new  <	cmp dword [rbp + 60], 0>

2230:
old  <	; Return Â£temporary2774>
new  <	jl memmove$27>

2231:
old  <	mov rax, [rbp]>
new  <>

2232:
old  <	mov rdi, [rbp + 16]>
new  < memmove$7:>

2233:
old  <	mov rbp, [rbp + 8]>
new  <	; IntegralToIntegral Â£temporary2782 index>

2234:
old  <	jmp rax>
new  <	mov eax, [rbp + 60]>

2235:
old  <>
new  <	mov rbx, 4294967295>

2236:
old  < memcpy$17:>
new  <	and rax, rbx>

2237:
old  <	; FunctionEnd memcpy>
new  <>

2238:
old  <>
new  < memmove$8:>

2239:
old  <section .text>
new  <	; BinaryAdd Â£temporary2784 charTarget Â£temporary2782>

2240:
old  <>
new  <	mov rsi, [rbp + 44]>

2241:
old  < memmove:>
new  <	add rsi, rax>

2242:
old  <	; IntegralToIntegral Â£temporary2775 target>
new  <>

2243:
old  <	mov rax, [rbp + 24]>
new  < memmove$9:>

2244:
old  <>
new  <	; Dereference Â£temporary2781 -> Â£temporary2784 Â£temporary2784 0>

2245:
old  < memmove$1:>
new  <>

2246:
old  <	; Assign charTarget Â£temporary2775>
new  < memmove$10:>

2247:
old  <	mov [rbp + 44], rax>
new  <	; IntegralToIntegral Â£temporary2786 index>

2248:
old  <>
new  <	mov eax, [rbp + 60]>

2249:
old  < memmove$2:>
new  <	mov rbx, 4294967295>

2250:
old  <	; IntegralToIntegral Â£temporary2776 source>
new  <	and rax, rbx>

2251:
old  <	mov rax, [rbp + 32]>
new  <>

2252:
old  <>
new  < memmove$11:>

2253:
old  < memmove$3:>
new  <	; BinaryAdd Â£temporary2788 charSource Â£temporary2786>

2254:
old  <	; Assign charSource Â£temporary2776>
new  <	mov rdi, [rbp + 52]>

2255:
old  <	mov [rbp + 52], rax>
new  <	add rdi, rax>

2257:
old  < memmove$4:>
new  < memmove$12:>

2258:
old  <	; SignedGreaterThanEqual 16 source target>
new  <	; Dereference Â£temporary2785 -> Â£temporary2788 Â£temporary2788 0>

2259:
old  <	mov rax, [rbp + 24]>
new  <>

2260:
old  <	cmp [rbp + 32], rax>
new  < memmove$13:>

2261:
old  <	jge memmove$16>
new  <	; Assign Â£temporary2781 -> Â£temporary2784 Â£temporary2785 -> Â£temporary2788>

2262:
old  <>
new  <	mov al, [rdi]>

2263:
old  < memmove$5:>
new  <	mov [rsi], al>

2264:
old  <	; BinarySubtract index size 1>
new  <>

2265:
old  <	mov eax, [rbp + 40]>
new  < memmove$14:>

2266:
old  <	dec eax>
new  <	; BinarySubtract index index 1>

2267:
old  <	mov [rbp + 60], eax>
new  <	dec dword [rbp + 60]>

2269:
old  < memmove$6:>
new  < memmove$15:>

2270:
old  <	; SignedLessThan 27 index 0>
new  <	; Goto 6>

2271:
old  <	cmp dword [rbp + 60], 0>
new  <	jmp memmove$6>

2272:
old  <	jl memmove$27>
new  <>

2273:
old  <>
new  < memmove$16:>

2274:
old  < memmove$7:>
new  <	; Assign index 0>

2275:
old  <	; IntegralToIntegral Â£temporary2782 index>
new  <	mov dword [rbp + 60], 0>

2276:
old  <	mov eax, [rbp + 60]>
new  <>

2277:
old  <	mov rbx, 4294967295>
new  < memmove$17:>

2278:
old  <	and rax, rbx>
new  <	; SignedGreaterThanEqual 27 index size>

2279:
old  <>
new  <	mov eax, [rbp + 40]>

2280:
old  < memmove$8:>
new  <	cmp [rbp + 60], eax>

2281:
old  <	; BinaryAdd Â£temporary2784 charTarget Â£temporary2782>
new  <	jge memmove$27>

2282:
old  <	mov rsi, [rbp + 44]>
new  <>

2283:
old  <	add rsi, rax>
new  < memmove$18:>

2284:
old  <>
new  <	; IntegralToIntegral Â£temporary2792 index>

2285:
old  < memmove$9:>
new  <	mov eax, [rbp + 60]>

2286:
old  <	; Dereference Â£temporary2781 -> Â£temporary2784 Â£temporary2784 0>
new  <	mov rbx, 4294967295>

2287:
old  <>
new  <	and rax, rbx>

2288:
old  < memmove$10:>
new  <>

2289:
old  <	; IntegralToIntegral Â£temporary2786 index>
new  < memmove$19:>

2290:
old  <	mov eax, [rbp + 60]>
new  <	; BinaryAdd Â£temporary2794 charTarget Â£temporary2792>

2291:
old  <	mov rbx, 4294967295>
new  <	mov rsi, [rbp + 44]>

2292:
old  <	and rax, rbx>
new  <	add rsi, rax>

2294:
old  < memmove$11:>
new  < memmove$20:>

2295:
old  <	; BinaryAdd Â£temporary2788 charSource Â£temporary2786>
new  <	; Dereference Â£temporary2791 -> Â£temporary2794 Â£temporary2794 0>

2296:
old  <	mov rdi, [rbp + 52]>
new  <>

2297:
old  <	add rdi, rax>
new  < memmove$21:>

2298:
old  <>
new  <	; IntegralToIntegral Â£temporary2796 index>

2299:
old  < memmove$12:>
new  <	mov eax, [rbp + 60]>

2300:
old  <	; Dereference Â£temporary2785 -> Â£temporary2788 Â£temporary2788 0>
new  <	mov rbx, 4294967295>

2301:
old  <>
new  <	and rax, rbx>

2302:
old  < memmove$13:>
new  <>

2303:
old  <	; Assign Â£temporary2781 -> Â£temporary2784 Â£temporary2785 -> Â£temporary2788>
new  < memmove$22:>

2304:
old  <	mov al, [rdi]>
new  <	; BinaryAdd Â£temporary2798 charSource Â£temporary2796>

2305:
old  <	mov [rsi], al>
new  <	mov rdi, [rbp + 52]>

2306:
old  <>
new  <	add rdi, rax>

2307:
old  < memmove$14:>
new  <>

2308:
old  <	; BinarySubtract index index 1>
new  < memmove$23:>

2309:
old  <	dec dword [rbp + 60]>
new  <	; Dereference Â£temporary2795 -> Â£temporary2798 Â£temporary2798 0>

2311:
old  < memmove$15:>
new  < memmove$24:>

2312:
old  <	; Goto 6>
new  <	; Assign Â£temporary2791 -> Â£temporary2794 Â£temporary2795 -> Â£temporary2798>

2313:
old  <	jmp memmove$6>
new  <	mov al, [rdi]>

2314:
old  <>
new  <	mov [rsi], al>

2315:
old  < memmove$16:>
new  <>

2316:
old  <	; Assign index 0>
new  < memmove$25:>

2317:
old  <	mov dword [rbp + 60], 0>
new  <	; BinaryAdd index index 1>

2318:
old  <>
new  <	inc dword [rbp + 60]>

2319:
old  < memmove$17:>
new  <>

2320:
old  <	; SignedGreaterThanEqual 27 index size>
new  < memmove$26:>

2321:
old  <	mov eax, [rbp + 40]>
new  <	; Goto 17>

2322:
old  <	cmp [rbp + 60], eax>
new  <	jmp memmove$17>

2323:
old  <	jge memmove$27>
new  <>

2324:
old  <>
new  < memmove$27:>

2325:
old  < memmove$18:>
new  <	; IntegralToIntegral Â£temporary2799 target>

2326:
old  <	; IntegralToIntegral Â£temporary2792 index>
new  <	mov rbx, [rbp + 24]>

2327:
old  <	mov eax, [rbp + 60]>
new  <>

2328:
old  <	mov rbx, 4294967295>
new  < memmove$28:>

2329:
old  <	and rax, rbx>
new  <	; Return Â£temporary2799>

2330:
old  <>
new  <	mov rax, [rbp]>

2331:
old  < memmove$19:>
new  <	mov rdi, [rbp + 16]>

2332:
old  <	; BinaryAdd Â£temporary2794 charTarget Â£temporary2792>
new  <	mov rbp, [rbp + 8]>

2333:
old  <	mov rsi, [rbp + 44]>
new  <	jmp rax>

2334:
old  <	add rsi, rax>
new  <>

2335:
old  <>
new  < memmove$29:>

2336:
old  < memmove$20:>
new  <	; FunctionEnd memmove>

2337:
old  <	; Dereference Â£temporary2791 -> Â£temporary2794 Â£temporary2794 0>
new  <>

2338:
old  <>
new  <section .text>

2339:
old  < memmove$21:>
new  <>

2340:
old  <	; IntegralToIntegral Â£temporary2796 index>
new  < memcmp:>

2341:
old  <	mov eax, [rbp + 60]>
new  <	; IntegralToIntegral Â£temporary2800 left>

2342:
old  <	mov rbx, 4294967295>
new  <	mov rax, [rbp + 24]>

2343:
old  <	and rax, rbx>
new  <>

2344:
old  <>
new  < memcmp$1:>

2345:
old  < memmove$22:>
new  <	; Assign charLeft Â£temporary2800>

2346:
old  <	; BinaryAdd Â£temporary2798 charSource Â£temporary2796>
new  <	mov [rbp + 44], rax>

2347:
old  <	mov rdi, [rbp + 52]>
new  <>

2348:
old  <	add rdi, rax>
new  < memcmp$2:>

2349:
old  <>
new  <	; IntegralToIntegral Â£temporary2801 right>

2350:
old  < memmove$23:>
new  <	mov rax, [rbp + 32]>

2351:
old  <	; Dereference Â£temporary2795 -> Â£temporary2798 Â£temporary2798 0>
new  <>

2352:
old  <>
new  < memcmp$3:>

2353:
old  < memmove$24:>
new  <	; Assign charRight Â£temporary2801>

2354:
old  <	; Assign Â£temporary2791 -> Â£temporary2794 Â£temporary2795 -> Â£temporary2798>
new  <	mov [rbp + 52], rax>

2355:
old  <	mov al, [rdi]>
new  <>

2356:
old  <	mov [rsi], al>
new  < memcmp$4:>

2357:
old  <>
new  <	; Assign index 0>

2358:
old  < memmove$25:>
new  <	mov dword [rbp + 60], 0>

2359:
old  <	; BinaryAdd index index 1>
new  <>

2360:
old  <	inc dword [rbp + 60]>
new  < memcmp$5:>

2361:
old  <>
new  <	; SignedGreaterThanEqual 24 index size>

2362:
old  < memmove$26:>
new  <	mov eax, [rbp + 40]>

2363:
old  <	; Goto 17>
new  <	cmp [rbp + 60], eax>

2364:
old  <	jmp memmove$17>
new  <	jge memcmp$24>

2366:
old  < memmove$27:>
new  < memcmp$6:>

2367:
old  <	; IntegralToIntegral Â£temporary2799 target>
new  <	; IntegralToIntegral Â£temporary2805 index>

2368:
old  <	mov rbx, [rbp + 24]>
new  <	mov eax, [rbp + 60]>

2369:
old  <>
new  <	mov rbx, 4294967295>

2370:
old  < memmove$28:>
new  <	and rax, rbx>

2371:
old  <	; Return Â£temporary2799>
new  <>

2372:
old  <	mov rax, [rbp]>
new  < memcmp$7:>

2373:
old  <	mov rdi, [rbp + 16]>
new  <	; BinaryAdd Â£temporary2807 charLeft Â£temporary2805>

2374:
old  <	mov rbp, [rbp + 8]>
new  <	mov rsi, [rbp + 44]>

2375:
old  <	jmp rax>
new  <	add rsi, rax>

2377:
old  < memmove$29:>
new  < memcmp$8:>

2378:
old  <	; FunctionEnd memmove>
new  <	; Dereference Â£temporary2804 -> Â£temporary2807 Â£temporary2807 0>

2380:
old  <section .text>
new  < memcmp$9:>

2381:
old  <>
new  <	; IntegralToIntegral Â£temporary2809 index>

2382:
old  < memcmp:>
new  <	mov eax, [rbp + 60]>

2383:
old  <	; IntegralToIntegral Â£temporary2800 left>
new  <	mov rbx, 4294967295>

2384:
old  <	mov rax, [rbp + 24]>
new  <	and rax, rbx>

2386:
old  < memcmp$1:>
new  < memcmp$10:>

2387:
old  <	; Assign charLeft Â£temporary2800>
new  <	; BinaryAdd Â£temporary2811 charRight Â£temporary2809>

2388:
old  <	mov [rbp + 44], rax>
new  <	mov rdi, [rbp + 52]>

2389:
old  <>
new  <	add rdi, rax>

2390:
old  < memcmp$2:>
new  <>

2391:
old  <	; IntegralToIntegral Â£temporary2801 right>
new  < memcmp$11:>

2392:
old  <	mov rax, [rbp + 32]>
new  <	; Dereference Â£temporary2808 -> Â£temporary2811 Â£temporary2811 0>

2394:
old  < memcmp$3:>
new  < memcmp$12:>

2395:
old  <	; Assign charRight Â£temporary2801>
new  <	; SignedGreaterThanEqual 14 Â£temporary2804 -> Â£temporary2807 Â£temporary2808 -> Â£temporary2811>

2396:
old  <	mov [rbp + 52], rax>
new  <	mov al, [rdi]>

2397:
old  <>
new  <	cmp [rsi], al>

2398:
old  < memcmp$4:>
new  <	jge memcmp$14>

2399:
old  <	; Assign index 0>
new  <>

2400:
old  <	mov dword [rbp + 60], 0>
new  < memcmp$13:>

2401:
old  <>
new  <	; Return -1>

2402:
old  < memcmp$5:>
new  <	mov ebx, -1>

2403:
old  <	; SignedGreaterThanEqual 24 index size>
new  <	mov rax, [rbp]>

2404:
old  <	mov eax, [rbp + 40]>
new  <	mov rdi, [rbp + 16]>

2405:
old  <	cmp [rbp + 60], eax>
new  <	mov rbp, [rbp + 8]>

2406:
old  <	jge memcmp$24>
new  <	jmp rax>

2408:
old  < memcmp$6:>
new  < memcmp$14:>

2409:
old  <	; IntegralToIntegral Â£temporary2805 index>
new  <	; IntegralToIntegral Â£temporary2814 index>

2414:
old  < memcmp$7:>
new  < memcmp$15:>

2415:
old  <	; BinaryAdd Â£temporary2807 charLeft Â£temporary2805>
new  <	; BinaryAdd Â£temporary2816 charLeft Â£temporary2814>

2419:
old  < memcmp$8:>
new  < memcmp$16:>

2420:
old  <	; Dereference Â£temporary2804 -> Â£temporary2807 Â£temporary2807 0>
new  <	; Dereference Â£temporary2813 -> Â£temporary2816 Â£temporary2816 0>

2422:
old  < memcmp$9:>
new  < memcmp$17:>

2423:
old  <	; IntegralToIntegral Â£temporary2809 index>
new  <	; IntegralToIntegral Â£temporary2818 index>

2428:
old  < memcmp$10:>
new  < memcmp$18:>

2429:
old  <	; BinaryAdd Â£temporary2811 charRight Â£temporary2809>
new  <	; BinaryAdd Â£temporary2820 charRight Â£temporary2818>

2433:
old  < memcmp$11:>
new  < memcmp$19:>

2434:
old  <	; Dereference Â£temporary2808 -> Â£temporary2811 Â£temporary2811 0>
new  <	; Dereference Â£temporary2817 -> Â£temporary2820 Â£temporary2820 0>

2436:
old  < memcmp$12:>
new  < memcmp$20:>

2437:
old  <	; SignedGreaterThanEqual 14 Â£temporary2804 -> Â£temporary2807 Â£temporary2808 -> Â£temporary2811>
new  <	; SignedLessThanEqual 22 Â£temporary2813 -> Â£temporary2816 Â£temporary2817 -> Â£temporary2820>

2440:
old  <	jge memcmp$14>
new  <	jle memcmp$22>

2442:
old  < memcmp$13:>
new  < memcmp$21:>

2443:
old  <	; Return -1>
new  <	; Return 1>

2444:
old  <	mov ebx, -1>
new  <	mov ebx, 1>

2450:
old  < memcmp$14:>
new  < memcmp$22:>

2451:
old  <	; IntegralToIntegral Â£temporary2814 index>
new  <	; BinaryAdd index index 1>

2452:
old  <	mov eax, [rbp + 60]>
new  <	inc dword [rbp + 60]>

2453:
old  <	mov rbx, 4294967295>
new  <>

2454:
old  <	and rax, rbx>
new  < memcmp$23:>

2455:
old  <>
new  <	; Goto 5>

2456:
old  < memcmp$15:>
new  <	jmp memcmp$5>

2457:
old  <	; BinaryAdd Â£temporary2816 charLeft Â£temporary2814>
new  <>

2458:
old  <	mov rsi, [rbp + 44]>
new  < memcmp$24:>

2459:
old  <	add rsi, rax>
new  <	; Return 0>

2460:
old  <>
new  <	mov ebx, 0>

2461:
old  < memcmp$16:>
new  <	mov rax, [rbp]>

2462:
old  <	; Dereference Â£temporary2813 -> Â£temporary2816 Â£temporary2816 0>
new  <	mov rdi, [rbp + 16]>

2463:
old  <>
new  <	mov rbp, [rbp + 8]>

2464:
old  < memcmp$17:>
new  <	jmp rax>

2465:
old  <	; IntegralToIntegral Â£temporary2818 index>
new  <>

2466:
old  <	mov eax, [rbp + 60]>
new  < memcmp$25:>

2467:
old  <	mov rbx, 4294967295>
new  <	; FunctionEnd memcmp>

2468:
old  <	and rax, rbx>
new  <>

2469:
old  <>
new  <section .text>

2470:
old  < memcmp$18:>
new  <>

2471:
old  <	; BinaryAdd Â£temporary2820 charRight Â£temporary2818>
new  < memchr:>

2472:
old  <	mov rdi, [rbp + 52]>
new  <	; IntegralToIntegral Â£temporary2822 block>

2473:
old  <	add rdi, rax>
new  <	mov rax, [rbp + 24]>

2475:
old  < memcmp$19:>
new  < memchr$1:>

2476:
old  <	; Dereference Â£temporary2817 -> Â£temporary2820 Â£temporary2820 0>
new  <	; Assign charBlock Â£temporary2822>

2477:
old  <>
new  <	mov [rbp + 44], rax>

2478:
old  < memcmp$20:>
new  <>

2479:
old  <	; SignedLessThanEqual 22 Â£temporary2813 -> Â£temporary2816 Â£temporary2817 -> Â£temporary2820>
new  < memchr$2:>

2480:
old  <	mov al, [rdi]>
new  <	; IntegralToIntegral Â£temporary2823 i>

2481:
old  <	cmp [rsi], al>
new  <	mov eax, [rbp + 32]>

2482:
old  <	jle memcmp$22>
new  <	cmp eax, 0>

2483:
old  <>
new  <	jge memchr$3>

2484:
old  < memcmp$21:>
new  <	neg eax>

2485:
old  <	; Return 1>
new  <	neg al>

2486:
old  <	mov ebx, 1>
new  <>

2487:
old  <	mov rax, [rbp]>
new  < memchr$3:>

2488:
old  <	mov rdi, [rbp + 16]>
new  <	; Assign c Â£temporary2823>

2489:
old  <	mov rbp, [rbp + 8]>
new  <	mov [rbp + 52], al>

2490:
old  <	jmp rax>
new  <>

2491:
old  <>
new  < memchr$4:>

2492:
old  < memcmp$22:>
new  <	; Assign index 0>

2493:
old  <	; BinaryAdd index index 1>
new  <	mov dword [rbp + 40], 0>

2494:
old  <	inc dword [rbp + 60]>
new  <>

2495:
old  <>
new  < memchr$5:>

2496:
old  < memcmp$23:>
new  <	; SignedGreaterThanEqual 18 index size>

2497:
old  <	; Goto 5>
new  <	mov eax, [rbp + 36]>

2498:
old  <	jmp memcmp$5>
new  <	cmp [rbp + 40], eax>

2499:
old  <>
new  <	jge memchr$18>

2500:
old  < memcmp$24:>
new  <>

2501:
old  <	; Return 0>
new  < memchr$6:>

2502:
old  <	mov ebx, 0>
new  <	; IntegralToIntegral Â£temporary2827 index>

2503:
old  <	mov rax, [rbp]>
new  <	mov eax, [rbp + 40]>

2504:
old  <	mov rdi, [rbp + 16]>
new  <	mov rbx, 4294967295>

2505:
old  <	mov rbp, [rbp + 8]>
new  <	and rax, rbx>

2506:
old  <	jmp rax>
new  <>

2507:
old  <>
new  < memchr$7:>

2508:
old  < memcmp$25:>
new  <	; BinaryAdd Â£temporary2829 charBlock Â£temporary2827>

2509:
old  <	; FunctionEnd memcmp>
new  <	mov rsi, [rbp + 44]>

2510:
old  <>
new  <	add rsi, rax>

2511:
old  <section .text>
new  <>

2512:
old  <>
new  < memchr$8:>

2513:
old  < memchr:>
new  <	; Dereference Â£temporary2826 -> Â£temporary2829 Â£temporary2829 0>

2514:
old  <	; Empty>
new  <>

2515:
old  <>
new  < memchr$9:>

2516:
old  < memchr$1:>
new  <	; NotEqual 16 Â£temporary2826 -> Â£temporary2829 c>

2517:
old  <	; IntegralToIntegral Â£temporary2822 block>
new  <	mov al, [rbp + 52]>

2518:
old  <	mov rax, [rbp + 24]>
new  <	cmp [rsi], al>

2519:
old  <>
new  <	jne memchr$16>

2520:
old  < memchr$2:>
new  <>

2521:
old  <	; Assign charBlock Â£temporary2822>
new  < memchr$10:>

2522:
old  <	mov [rbp + 44], rax>
new  <	; IntegralToIntegral Â£temporary2832 index>

2523:
old  <>
new  <	mov eax, [rbp + 40]>

2524:
old  < memchr$3:>
new  <	mov rbx, 4294967295>

2525:
old  <	; IntegralToIntegral Â£temporary2823 i>
new  <	and rax, rbx>

2526:
old  <	mov eax, [rbp + 32]>
new  <>

2527:
old  <	cmp eax, 0>
new  < memchr$11:>

2528:
old  <	jge memchr$4>
new  <	; BinaryAdd Â£temporary2834 charBlock Â£temporary2832>

2529:
old  <	neg eax>
new  <	mov rbx, [rbp + 44]>

2530:
old  <	neg al>
new  <	add rbx, rax>

2532:
old  < memchr$4:>
new  < memchr$12:>

2533:
old  <	; Assign c Â£temporary2823>
new  <	; Dereference Â£temporary2831 -> Â£temporary2834 Â£temporary2834 0>

2534:
old  <	mov [rbp + 52], al>
new  <>

2535:
old  <>
new  < memchr$13:>

2536:
old  < memchr$5:>
new  <	; Address Â£temporary2835 Â£temporary2831 -> Â£temporary2834>

2537:
old  <	; Assign index 0>
new  <>

2538:
old  <	mov dword [rbp + 40], 0>
new  < memchr$14:>

2539:
old  <>
new  <	; IntegralToIntegral Â£temporary2836 Â£temporary2835>

2540:
old  < memchr$6:>
new  <>

2541:
old  <	; SignedGreaterThanEqual 19 index size>
new  < memchr$15:>

2542:
old  <	mov eax, [rbp + 36]>
new  <	; Return Â£temporary2836>

2543:
old  <	cmp [rbp + 40], eax>
new  <	mov rax, [rbp]>

2544:
old  <	jge memchr$19>
new  <	mov rdi, [rbp + 16]>

2545:
old  <>
new  <	mov rbp, [rbp + 8]>

2546:
old  < memchr$7:>
new  <	jmp rax>

2547:
old  <	; IntegralToIntegral Â£temporary2827 index>
new  <>

2548:
old  <	mov eax, [rbp + 40]>
new  < memchr$16:>

2549:
old  <	mov rbx, 4294967295>
new  <	; BinaryAdd index index 1>

2550:
old  <	and rax, rbx>
new  <	inc dword [rbp + 40]>

2552:
old  < memchr$8:>
new  < memchr$17:>

2553:
old  <	; BinaryAdd Â£temporary2829 charBlock Â£temporary2827>
new  <	; Goto 5>

2554:
old  <	mov rsi, [rbp + 44]>
new  <	jmp memchr$5>

2555:
old  <	add rsi, rax>
new  <>

2556:
old  <>
new  < memchr$18:>

2557:
old  < memchr$9:>
new  <	; Return 0>

2558:
old  <	; Dereference Â£temporary2826 -> Â£temporary2829 Â£temporary2829 0>
new  <	mov rbx, 0>

2559:
old  <>
new  <	mov rax, [rbp]>

2560:
old  < memchr$10:>
new  <	mov rdi, [rbp + 16]>

2561:
old  <	; NotEqual 17 Â£temporary2826 -> Â£temporary2829 c>
new  <	mov rbp, [rbp + 8]>

2562:
old  <	mov al, [rbp + 52]>
new  <	jmp rax>

2563:
old  <	cmp [rsi], al>
new  <>

2564:
old  <	jne memchr$17>
new  < memchr$19:>

2565:
old  <>
new  <	; FunctionEnd memchr>

2566:
old  < memchr$11:>
new  <>

2567:
old  <	; IntegralToIntegral Â£temporary2832 index>
new  <section .text>

2568:
old  <	mov eax, [rbp + 40]>
new  <>

2569:
old  <	mov rbx, 4294967295>
new  < memset:>

2570:
old  <	and rax, rbx>
new  <	; IntegralToIntegral Â£temporary2837 block>

2571:
old  <>
new  <	mov rax, [rbp + 24]>

2572:
old  < memchr$12:>
new  <>

2573:
old  <	; BinaryAdd Â£temporary2834 charBlock Â£temporary2832>
new  < memset$1:>

2574:
old  <	mov rbx, [rbp + 44]>
new  <	; Assign charBlock Â£temporary2837>

2575:
old  <	add rbx, rax>
new  <	mov [rbp + 40], rax>

2577:
old  < memchr$13:>
new  < memset$2:>

2578:
old  <	; Dereference Â£temporary2831 -> Â£temporary2834 Â£temporary2834 0>
new  <	; IntegralToIntegral Â£temporary2838 i>

2579:
old  <>
new  <	mov eax, [rbp + 32]>

2580:
old  < memchr$14:>
new  <	cmp eax, 0>

2581:
old  <	; Address Â£temporary2835 Â£temporary2831 -> Â£temporary2834>
new  <	jge memset$3>

2582:
old  <>
new  <	neg eax>

2583:
old  < memchr$15:>
new  <	neg al>

2584:
old  <	; IntegralToIntegral Â£temporary2836 Â£temporary2835>
new  <>

2585:
old  <>
new  < memset$3:>

2586:
old  < memchr$16:>
new  <	; Assign c Â£temporary2838>

2587:
old  <	; Return Â£temporary2836>
new  <	mov [rbp + 48], al>

2588:
old  <	mov rax, [rbp]>
new  <>

2589:
old  <	mov rdi, [rbp + 16]>
new  < memset$4:>

2590:
old  <	mov rbp, [rbp + 8]>
new  <	; Assign index 0>

2591:
old  <	jmp rax>
new  <	mov dword [rbp + 49], 0>

2593:
old  < memchr$17:>
new  < memset$5:>

2594:
old  <	; BinaryAdd index index 1>
new  <	; SignedGreaterThanEqual 12 index size>

2595:
old  <	inc dword [rbp + 40]>
new  <	mov eax, [rbp + 36]>

2596:
old  <>
new  <	cmp [rbp + 49], eax>

2597:
old  < memchr$18:>
new  <	jge memset$12>

2598:
old  <	; Goto 6>
new  <>

2599:
old  <	jmp memchr$6>
new  < memset$6:>

2600:
old  <>
new  <	; IntegralToIntegral Â£temporary2842 index>

2601:
old  < memchr$19:>
new  <	mov eax, [rbp + 49]>

2602:
old  <	; Return 0>
new  <	mov rbx, 4294967295>

2603:
old  <	mov rbx, 0>
new  <	and rax, rbx>

2604:
old  <	mov rax, [rbp]>
new  <>

2605:
old  <	mov rdi, [rbp + 16]>
new  < memset$7:>

2606:
old  <	mov rbp, [rbp + 8]>
new  <	; BinaryAdd Â£temporary2844 charBlock Â£temporary2842>

2607:
old  <	jmp rax>
new  <	mov rsi, [rbp + 40]>

2608:
old  <>
new  <	add rsi, rax>

2609:
old  < memchr$20:>
new  <>

2610:
old  <	; FunctionEnd memchr>
new  < memset$8:>

2611:
old  <>
new  <	; Dereference Â£temporary2841 -> Â£temporary2844 Â£temporary2844 0>

2612:
old  <section .text>
new  <>

2613:
old  <>
new  < memset$9:>

2614:
old  < memset:>
new  <	; Assign Â£temporary2841 -> Â£temporary2844 c>

2615:
old  <	; IntegralToIntegral Â£temporary2837 block>
new  <	mov al, [rbp + 48]>

2616:
old  <	mov rax, [rbp + 24]>
new  <	mov [rsi], al>

2618:
old  < memset$1:>
new  < memset$10:>

2619:
old  <	; Assign charBlock Â£temporary2837>
new  <	; BinaryAdd index index 1>

2620:
old  <	mov [rbp + 40], rax>
new  <	inc dword [rbp + 49]>

2622:
old  < memset$2:>
new  < memset$11:>

2623:
old  <	; IntegralToIntegral Â£temporary2838 i>
new  <	; Goto 5>

2624:
old  <	mov eax, [rbp + 32]>
new  <	jmp memset$5>

2625:
old  <	cmp eax, 0>
new  <>

2626:
old  <	jge memset$3>
new  < memset$12:>

2627:
old  <	neg eax>
new  <	; Return block>

2628:
old  <	neg al>
new  <	mov rbx, [rbp + 24]>

2629:
old  <>
new  <	mov rax, [rbp]>

2630:
old  < memset$3:>
new  <	mov rdi, [rbp + 16]>

2631:
old  <	; Assign c Â£temporary2838>
new  <	mov rbp, [rbp + 8]>

2632:
old  <	mov [rbp + 48], al>
new  <	jmp rax>

2634:
old  < memset$4:>
new  < memset$13:>

2635:
old  <	; Assign index 0>
new  <	; FunctionEnd memset>

9:
old  <	; Empty>
new  <	; Return>

10:
old  <>
new  <	mov rax, [rbp]>

11:
old  < float_test$1:>
new  <	mov rdi, [rbp + 16]>

12:
old  <	; Return>
new  <	mov rbp, [rbp + 8]>

13:
old  <	mov rax, [rbp]>
new  <	jmp rax>

14:
old  <	mov rdi, [rbp + 16]>
new  <>

15:
old  <	mov rbp, [rbp + 8]>
new  < float_test$1:>

16:
old  <	jmp rax>
new  <	; FunctionEnd float_test>

121:
old  <	; Parameter signedint 11 84>
new  <	; Parameter signedint 10 84>

122:
old  <	mov dword [rbp + 84], 11>
new  <	mov dword [rbp + 84], 10>

211:
old  <	; Parameter signedint 16 84>
new  <	; Parameter signedint 15 84>

212:
old  <	mov dword [rbp + 84], 16>
new  <	mov dword [rbp + 84], 15>

149:
old  <	; Empty>
new  <	; Assign s "Hello, World!">

150:
old  <>
new  <	mov qword [rbp + 28], string_Hello2C20World21#>

151:
old  < string_test$1:>
new  <>

152:
old  <	; Assign s "Hello, World!">
new  < string_test$1:>

153:
old  <	mov qword [rbp + 28], string_Hello2C20World21#>
new  <	; PreCall 244 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

156:
old  <	; PreCall 244 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter pointer "strlen("%s") = %i\n" 268>

157:
old  <>
new  <	mov qword [rbp + 268], string_strlen282225s2229203D2025i0A#>

158:
old  < string_test$3:>
new  <>

159:
old  <	; Parameter pointer "strlen("%s") = %i\n" 268>
new  < string_test$3:>

160:
old  <	mov qword [rbp + 268], string_strlen282225s2229203D2025i0A#>
new  <	; Parameter pointer s 276>

161:
old  <>
new  <	mov rax, [rbp + 28]>

162:
old  < string_test$4:>
new  <	mov [rbp + 276], rax>

163:
old  <	; Parameter pointer s 276>
new  <>

164:
old  <	mov rax, [rbp + 28]>
new  < string_test$4:>

165:
old  <	mov [rbp + 276], rax>
new  <	; PreCall 244 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

168:
old  <	; PreCall 244 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter pointer s 308>

169:
old  <>
new  <	mov rax, [rbp + 28]>

170:
old  < string_test$6:>
new  <	mov [rbp + 308], rax>

171:
old  <	; Parameter pointer s 308>
new  <>

172:
old  <	mov rax, [rbp + 28]>
new  < string_test$6:>

173:
old  <	mov [rbp + 308], rax>
new  <	; Call strlen 284 0>

174:
old  <>
new  <	mov qword [rbp + 284], string_test$7>

175:
old  < string_test$7:>
new  <	mov [rbp + 292], rbp>

176:
old  <	; Call strlen 284 0>
new  <	add rbp, 284>

177:
old  <	mov qword [rbp + 284], string_test$8>
new  <	jmp strlen>

178:
old  <	mov [rbp + 292], rbp>
new  <>

179:
old  <	add rbp, 284>
new  < string_test$7:>

180:
old  <	jmp strlen>
new  <	; PostCall 284>

183:
old  <	; PostCall 284>
new  <	; GetReturnValue Â£temporary2985>

186:
old  <	; GetReturnValue Â£temporary2985>
new  <	; Parameter signedint Â£temporary2985 284>

187:
old  <>
new  <	mov [rbp + 284], ebx>

188:
old  < string_test$10:>
new  <>

189:
old  <	; Parameter signedint Â£temporary2985 284>
new  < string_test$10:>

190:
old  <	mov [rbp + 284], ebx>
new  <	; Call printf 244 12>

191:
old  <>
new  <	mov qword [rbp + 244], string_test$11>

192:
old  < string_test$11:>
new  <	mov [rbp + 252], rbp>

193:
old  <	; Call printf 244 12>
new  <	add rbp, 244>

194:
old  <	mov qword [rbp + 244], string_test$12>
new  <	mov rdi, rbp>

195:
old  <	mov [rbp + 252], rbp>
new  <	add rdi, 12>

196:
old  <	add rbp, 244>
new  <	jmp printf>

197:
old  <	mov rdi, rbp>
new  <>

198:
old  <	add rdi, 12>
new  < string_test$11:>

199:
old  <	jmp printf>
new  <	; PostCall 244>

202:
old  <	; PostCall 244>
new  <	; PreCall 244 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

205:
old  <	; PreCall 244 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter pointer t 268>

206:
old  <>
new  <	mov [rbp + 268], rbp>

207:
old  < string_test$14:>
new  <	add qword [rbp + 268], 36>

208:
old  <	; Parameter pointer t 268>
new  <>

209:
old  <	mov [rbp + 268], rbp>
new  < string_test$14:>

210:
old  <	add qword [rbp + 268], 36>
new  <	; Parameter pointer s 276>

211:
old  <>
new  <	mov rax, [rbp + 28]>

212:
old  < string_test$15:>
new  <	mov [rbp + 276], rax>

213:
old  <	; Parameter pointer s 276>
new  <>

214:
old  <	mov rax, [rbp + 28]>
new  < string_test$15:>

215:
old  <	mov [rbp + 276], rax>
new  <	; Call strcpy 244 0>

216:
old  <>
new  <	mov qword [rbp + 244], string_test$16>

217:
old  < string_test$16:>
new  <	mov [rbp + 252], rbp>

218:
old  <	; Call strcpy 244 0>
new  <	add rbp, 244>

219:
old  <	mov qword [rbp + 244], string_test$17>
new  <	jmp strcpy>

220:
old  <	mov [rbp + 252], rbp>
new  <>

221:
old  <	add rbp, 244>
new  < string_test$16:>

222:
old  <	jmp strcpy>
new  <	; PostCall 244>

225:
old  <	; PostCall 244>
new  <	; PreCall 244 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

228:
old  <	; PreCall 244 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter pointer u 268>

229:
old  <>
new  <	mov [rbp + 268], rbp>

230:
old  < string_test$19:>
new  <	add qword [rbp + 268], 136>

231:
old  <	; Parameter pointer u 268>
new  <>

232:
old  <	mov [rbp + 268], rbp>
new  < string_test$19:>

233:
old  <	add qword [rbp + 268], 136>
new  <	; Parameter pointer s 276>

234:
old  <>
new  <	mov rax, [rbp + 28]>

235:
old  < string_test$20:>
new  <	mov [rbp + 276], rax>

236:
old  <	; Parameter pointer s 276>
new  <>

237:
old  <	mov rax, [rbp + 28]>
new  < string_test$20:>

238:
old  <	mov [rbp + 276], rax>
new  <	; Parameter signedint 5 284>

239:
old  <>
new  <	mov dword [rbp + 284], 5>

240:
old  < string_test$21:>
new  <>

241:
old  <	; Parameter signedint 5 284>
new  < string_test$21:>

242:
old  <	mov dword [rbp + 284], 5>
new  <	; Call strncpy 244 0>

243:
old  <>
new  <	mov qword [rbp + 244], string_test$22>

244:
old  < string_test$22:>
new  <	mov [rbp + 252], rbp>

245:
old  <	; Call strncpy 244 0>
new  <	add rbp, 244>

246:
old  <	mov qword [rbp + 244], string_test$23>
new  <	jmp strncpy>

247:
old  <	mov [rbp + 252], rbp>
new  <>

248:
old  <	add rbp, 244>
new  < string_test$22:>

249:
old  <	jmp strncpy>
new  <	; PostCall 244>

252:
old  <	; PostCall 244>
new  <	; Dereference Â£temporary2989 -> u u 0>

253:
old  <>
new  <	mov rsi, rbp>

254:
old  < string_test$24:>
new  <	add rsi, 136>

255:
old  <	; Dereference Â£temporary2989 -> u u 0>
new  <>

256:
old  <	mov rsi, rbp>
new  < string_test$24:>

257:
old  <	add rsi, 136>
new  <	; Assign Â£temporary2989 -> u 0>

258:
old  <>
new  <	mov byte [rsi + 5], 0>

259:
old  < string_test$25:>
new  <>

260:
old  <	; Assign Â£temporary2989 -> u 0>
new  < string_test$25:>

261:
old  <	mov byte [rsi + 5], 0>
new  <	; PreCall 244 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

264:
old  <	; PreCall 244 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter pointer "t = "%s", u = "%s"\n" 268>

265:
old  <>
new  <	mov qword [rbp + 268], string_t203D202225s222C20u203D202225s220A#>

266:
old  < string_test$27:>
new  <>

267:
old  <	; Parameter pointer "t = "%s", u = "%s"\n" 268>
new  < string_test$27:>

268:
old  <	mov qword [rbp + 268], string_t203D202225s222C20u203D202225s220A#>
new  <	; Parameter pointer t 276>

269:
old  <>
new  <	mov [rbp + 276], rbp>

270:
old  < string_test$28:>
new  <	add qword [rbp + 276], 36>

271:
old  <	; Parameter pointer t 276>
new  <>

272:
old  <	mov [rbp + 276], rbp>
new  < string_test$28:>

273:
old  <	add qword [rbp + 276], 36>
new  <	; Parameter pointer u 284>

274:
old  <>
new  <	mov [rbp + 284], rbp>

275:
old  < string_test$29:>
new  <	add qword [rbp + 284], 136>

276:
old  <	; Parameter pointer u 284>
new  <>

277:
old  <	mov [rbp + 284], rbp>
new  < string_test$29:>

278:
old  <	add qword [rbp + 284], 136>
new  <	; Call printf 244 16>

279:
old  <>
new  <	mov qword [rbp + 244], string_test$30>

280:
old  < string_test$30:>
new  <	mov [rbp + 252], rbp>

281:
old  <	; Call printf 244 16>
new  <	add rbp, 244>

282:
old  <	mov qword [rbp + 244], string_test$31>
new  <	mov rdi, rbp>

283:
old  <	mov [rbp + 252], rbp>
new  <	add rdi, 16>

284:
old  <	add rbp, 244>
new  <	jmp printf>

285:
old  <	mov rdi, rbp>
new  <>

286:
old  <	add rdi, 16>
new  < string_test$30:>

287:
old  <	jmp printf>
new  <	; PostCall 244>

290:
old  <	; PostCall 244>
new  <	; PreCall 244 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

293:
old  <	; PreCall 244 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter pointer t 268>

294:
old  <>
new  <	mov [rbp + 268], rbp>

295:
old  < string_test$33:>
new  <	add qword [rbp + 268], 36>

296:
old  <	; Parameter pointer t 268>
new  <>

297:
old  <	mov [rbp + 268], rbp>
new  < string_test$33:>

298:
old  <	add qword [rbp + 268], 36>
new  <	; Parameter pointer "abc" 276>

299:
old  <>
new  <	mov qword [rbp + 276], string_abc#>

300:
old  < string_test$34:>
new  <>

301:
old  <	; Parameter pointer "abc" 276>
new  < string_test$34:>

302:
old  <	mov qword [rbp + 276], string_abc#>
new  <	; Call strcat 244 0>

303:
old  <>
new  <	mov qword [rbp + 244], string_test$35>

304:
old  < string_test$35:>
new  <	mov [rbp + 252], rbp>

305:
old  <	; Call strcat 244 0>
new  <	add rbp, 244>

306:
old  <	mov qword [rbp + 244], string_test$36>
new  <	jmp strcat>

307:
old  <	mov [rbp + 252], rbp>
new  <>

308:
old  <	add rbp, 244>
new  < string_test$35:>

309:
old  <	jmp strcat>
new  <	; PostCall 244>

312:
old  <	; PostCall 244>
new  <	; PreCall 244 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

315:
old  <	; PreCall 244 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter pointer u 268>

316:
old  <>
new  <	mov [rbp + 268], rbp>

317:
old  < string_test$38:>
new  <	add qword [rbp + 268], 136>

318:
old  <	; Parameter pointer u 268>
new  <>

319:
old  <	mov [rbp + 268], rbp>
new  < string_test$38:>

320:
old  <	add qword [rbp + 268], 136>
new  <	; Call strlen 244 0>

321:
old  <>
new  <	mov qword [rbp + 244], string_test$39>

322:
old  < string_test$39:>
new  <	mov [rbp + 252], rbp>

323:
old  <	; Call strlen 244 0>
new  <	add rbp, 244>

324:
old  <	mov qword [rbp + 244], string_test$40>
new  <	jmp strlen>

325:
old  <	mov [rbp + 252], rbp>
new  <>

326:
old  <	add rbp, 244>
new  < string_test$39:>

327:
old  <	jmp strlen>
new  <	; PostCall 244>

330:
old  <	; PostCall 244>
new  <	; GetReturnValue Â£temporary2992>

333:
old  <	; GetReturnValue Â£temporary2992>
new  <	; Assign i Â£temporary2992>

334:
old  <>
new  <	mov [rbp + 24], ebx>

335:
old  < string_test$42:>
new  <>

336:
old  <	; Assign i Â£temporary2992>
new  < string_test$42:>

337:
old  <	mov [rbp + 24], ebx>
new  <	; PreCall 244 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

340:
old  <	; PreCall 244 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter pointer u 268>

341:
old  <>
new  <	mov [rbp + 268], rbp>

342:
old  < string_test$44:>
new  <	add qword [rbp + 268], 136>

343:
old  <	; Parameter pointer u 268>
new  <>

344:
old  <	mov [rbp + 268], rbp>
new  < string_test$44:>

345:
old  <	add qword [rbp + 268], 136>
new  <	; Parameter pointer "abc" 276>

346:
old  <>
new  <	mov qword [rbp + 276], string_abc#>

347:
old  < string_test$45:>
new  <>

348:
old  <	; Parameter pointer "abc" 276>
new  < string_test$45:>

349:
old  <	mov qword [rbp + 276], string_abc#>
new  <	; Parameter signedint 2 284>

350:
old  <>
new  <	mov dword [rbp + 284], 2>

351:
old  < string_test$46:>
new  <>

352:
old  <	; Parameter signedint 2 284>
new  < string_test$46:>

353:
old  <	mov dword [rbp + 284], 2>
new  <	; Call strncat 244 0>

354:
old  <>
new  <	mov qword [rbp + 244], string_test$47>

355:
old  < string_test$47:>
new  <	mov [rbp + 252], rbp>

356:
old  <	; Call strncat 244 0>
new  <	add rbp, 244>

357:
old  <	mov qword [rbp + 244], string_test$48>
new  <	jmp strncat>

358:
old  <	mov [rbp + 252], rbp>
new  <>

359:
old  <	add rbp, 244>
new  < string_test$47:>

360:
old  <	jmp strncat>
new  <	; PostCall 244>

363:
old  <	; PostCall 244>
new  <	; BinaryAdd Â£temporary2994 i 2>

364:
old  <>
new  <	mov eax, [rbp + 24]>

365:
old  < string_test$49:>
new  <	add eax, 2>

366:
old  <	; BinaryAdd Â£temporary2994 i 2>
new  <>

367:
old  <	mov eax, [rbp + 24]>
new  < string_test$49:>

368:
old  <	add eax, 2>
new  <	; IntegralToIntegral Â£temporary2996 Â£temporary2994>

369:
old  <>
new  <	mov rbx, 4294967295>

370:
old  < string_test$50:>
new  <	and rax, rbx>

371:
old  <	; IntegralToIntegral Â£temporary2996 Â£temporary2994>
new  <>

372:
old  <	mov rbx, 4294967295>
new  < string_test$50:>

373:
old  <	and rax, rbx>
new  <	; BinaryAdd Â£temporary2998 u Â£temporary2996>

374:
old  <>
new  <	mov rsi, rbp>

375:
old  < string_test$51:>
new  <	add rsi, 136>

376:
old  <	; BinaryAdd Â£temporary2998 u Â£temporary2996>
new  <	add rsi, rax>

377:
old  <	mov rsi, rbp>
new  <>

378:
old  <	add rsi, 136>
new  < string_test$51:>

379:
old  <	add rsi, rax>
new  <	; Dereference Â£temporary2995 -> Â£temporary2998 Â£temporary2998 0>

382:
old  <	; Dereference Â£temporary2995 -> Â£temporary2998 Â£temporary2998 0>
new  <	; Assign Â£temporary2995 -> Â£temporary2998 0>

383:
old  <>
new  <	mov byte [rsi], 0>

384:
old  < string_test$53:>
new  <>

385:
old  <	; Assign Â£temporary2995 -> Â£temporary2998 0>
new  < string_test$53:>

386:
old  <	mov byte [rsi], 0>
new  <	; PreCall 244 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

389:
old  <	; PreCall 244 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter pointer "t = "%s", u = "%s"\n" 268>

390:
old  <>
new  <	mov qword [rbp + 268], string_t203D202225s222C20u203D202225s220A#>

391:
old  < string_test$55:>
new  <>

392:
old  <	; Parameter pointer "t = "%s", u = "%s"\n" 268>
new  < string_test$55:>

393:
old  <	mov qword [rbp + 268], string_t203D202225s222C20u203D202225s220A#>
new  <	; Parameter pointer t 276>

394:
old  <>
new  <	mov [rbp + 276], rbp>

395:
old  < string_test$56:>
new  <	add qword [rbp + 276], 36>

396:
old  <	; Parameter pointer t 276>
new  <>

397:
old  <	mov [rbp + 276], rbp>
new  < string_test$56:>

398:
old  <	add qword [rbp + 276], 36>
new  <	; Parameter pointer u 284>

399:
old  <>
new  <	mov [rbp + 284], rbp>

400:
old  < string_test$57:>
new  <	add qword [rbp + 284], 136>

401:
old  <	; Parameter pointer u 284>
new  <>

402:
old  <	mov [rbp + 284], rbp>
new  < string_test$57:>

403:
old  <	add qword [rbp + 284], 136>
new  <	; Call printf 244 16>

404:
old  <>
new  <	mov qword [rbp + 244], string_test$58>

405:
old  < string_test$58:>
new  <	mov [rbp + 252], rbp>

406:
old  <	; Call printf 244 16>
new  <	add rbp, 244>

407:
old  <	mov qword [rbp + 244], string_test$59>
new  <	mov rdi, rbp>

408:
old  <	mov [rbp + 252], rbp>
new  <	add rdi, 16>

409:
old  <	add rbp, 244>
new  <	jmp printf>

410:
old  <	mov rdi, rbp>
new  <>

411:
old  <	add rdi, 16>
new  < string_test$58:>

412:
old  <	jmp printf>
new  <	; PostCall 244>

415:
old  <	; PostCall 244>
new  <	; PreCall 244 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

418:
old  <	; PreCall 244 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter pointer "strcmp(s, u) = %i\n" 268>

419:
old  <>
new  <	mov qword [rbp + 268], string_strcmp28s2C20u29203D2025i0A#>

420:
old  < string_test$61:>
new  <>

421:
old  <	; Parameter pointer "strcmp(s, u) = %i\n" 268>
new  < string_test$61:>

422:
old  <	mov qword [rbp + 268], string_strcmp28s2C20u29203D2025i0A#>
new  <	; PreCall 244 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

425:
old  <	; PreCall 244 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter pointer s 300>

426:
old  <>
new  <	mov rax, [rbp + 28]>

427:
old  < string_test$63:>
new  <	mov [rbp + 300], rax>

428:
old  <	; Parameter pointer s 300>
new  <>

429:
old  <	mov rax, [rbp + 28]>
new  < string_test$63:>

430:
old  <	mov [rbp + 300], rax>
new  <	; Parameter pointer u 308>

431:
old  <>
new  <	mov [rbp + 308], rbp>

432:
old  < string_test$64:>
new  <	add qword [rbp + 308], 136>

433:
old  <	; Parameter pointer u 308>
new  <>

434:
old  <	mov [rbp + 308], rbp>
new  < string_test$64:>

435:
old  <	add qword [rbp + 308], 136>
new  <	; Call strcmp 276 0>

436:
old  <>
new  <	mov qword [rbp + 276], string_test$65>

437:
old  < string_test$65:>
new  <	mov [rbp + 284], rbp>

438:
old  <	; Call strcmp 276 0>
new  <	add rbp, 276>

439:
old  <	mov qword [rbp + 276], string_test$66>
new  <	jmp strcmp>

440:
old  <	mov [rbp + 284], rbp>
new  <>

441:
old  <	add rbp, 276>
new  < string_test$65:>

442:
old  <	jmp strcmp>
new  <	; PostCall 276>

445:
old  <	; PostCall 276>
new  <	; GetReturnValue Â£temporary3000>

448:
old  <	; GetReturnValue Â£temporary3000>
new  <	; Parameter signedint Â£temporary3000 276>

449:
old  <>
new  <	mov [rbp + 276], ebx>

450:
old  < string_test$68:>
new  <>

451:
old  <	; Parameter signedint Â£temporary3000 276>
new  < string_test$68:>

452:
old  <	mov [rbp + 276], ebx>
new  <	; Call printf 244 4>

453:
old  <>
new  <	mov qword [rbp + 244], string_test$69>

454:
old  < string_test$69:>
new  <	mov [rbp + 252], rbp>

455:
old  <	; Call printf 244 4>
new  <	add rbp, 244>

456:
old  <	mov qword [rbp + 244], string_test$70>
new  <	mov rdi, rbp>

457:
old  <	mov [rbp + 252], rbp>
new  <	add rdi, 4>

458:
old  <	add rbp, 244>
new  <	jmp printf>

459:
old  <	mov rdi, rbp>
new  <>

460:
old  <	add rdi, 4>
new  < string_test$69:>

461:
old  <	jmp printf>
new  <	; PostCall 244>

464:
old  <	; PostCall 244>
new  <	; PreCall 244 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

467:
old  <	; PreCall 244 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter pointer "strncmp(s, u, 2) = %i\n" 268>

468:
old  <>
new  <	mov qword [rbp + 268], string_strncmp28s2C20u2C20229203D2025i0A#>

469:
old  < string_test$72:>
new  <>

470:
old  <	; Parameter pointer "strncmp(s, u, 2) = %i\n" 268>
new  < string_test$72:>

471:
old  <	mov qword [rbp + 268], string_strncmp28s2C20u2C20229203D2025i0A#>
new  <	; PreCall 244 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

474:
old  <	; PreCall 244 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter pointer s 300>

475:
old  <>
new  <	mov rax, [rbp + 28]>

476:
old  < string_test$74:>
new  <	mov [rbp + 300], rax>

477:
old  <	; Parameter pointer s 300>
new  <>

478:
old  <	mov rax, [rbp + 28]>
new  < string_test$74:>

479:
old  <	mov [rbp + 300], rax>
new  <	; Parameter pointer u 308>

480:
old  <>
new  <	mov [rbp + 308], rbp>

481:
old  < string_test$75:>
new  <	add qword [rbp + 308], 136>

482:
old  <	; Parameter pointer u 308>
new  <>

483:
old  <	mov [rbp + 308], rbp>
new  < string_test$75:>

484:
old  <	add qword [rbp + 308], 136>
new  <	; Parameter signedint 2 316>

485:
old  <>
new  <	mov dword [rbp + 316], 2>

486:
old  < string_test$76:>
new  <>

487:
old  <	; Parameter signedint 2 316>
new  < string_test$76:>

488:
old  <	mov dword [rbp + 316], 2>
new  <	; Call strncmp 276 0>

489:
old  <>
new  <	mov qword [rbp + 276], string_test$77>

490:
old  < string_test$77:>
new  <	mov [rbp + 284], rbp>

491:
old  <	; Call strncmp 276 0>
new  <	add rbp, 276>

492:
old  <	mov qword [rbp + 276], string_test$78>
new  <	jmp strncmp>

493:
old  <	mov [rbp + 284], rbp>
new  <>

494:
old  <	add rbp, 276>
new  < string_test$77:>

495:
old  <	jmp strncmp>
new  <	; PostCall 276>

498:
old  <	; PostCall 276>
new  <	; GetReturnValue Â£temporary3002>

501:
old  <	; GetReturnValue Â£temporary3002>
new  <	; Parameter signedint Â£temporary3002 276>

502:
old  <>
new  <	mov [rbp + 276], ebx>

503:
old  < string_test$80:>
new  <>

504:
old  <	; Parameter signedint Â£temporary3002 276>
new  < string_test$80:>

505:
old  <	mov [rbp + 276], ebx>
new  <	; Call printf 244 4>

506:
old  <>
new  <	mov qword [rbp + 244], string_test$81>

507:
old  < string_test$81:>
new  <	mov [rbp + 252], rbp>

508:
old  <	; Call printf 244 4>
new  <	add rbp, 244>

509:
old  <	mov qword [rbp + 244], string_test$82>
new  <	mov rdi, rbp>

510:
old  <	mov [rbp + 252], rbp>
new  <	add rdi, 4>

511:
old  <	add rbp, 244>
new  <	jmp printf>

512:
old  <	mov rdi, rbp>
new  <>

513:
old  <	add rdi, 4>
new  < string_test$81:>

514:
old  <	jmp printf>
new  <	; PostCall 244>

517:
old  <	; PostCall 244>
new  <	; PreCall 244 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

520:
old  <	; PreCall 244 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter pointer s 268>

521:
old  <>
new  <	mov rax, [rbp + 28]>

522:
old  < string_test$84:>
new  <	mov [rbp + 268], rax>

523:
old  <	; Parameter pointer s 268>
new  <>

524:
old  <	mov rax, [rbp + 28]>
new  < string_test$84:>

525:
old  <	mov [rbp + 268], rax>
new  <	; Parameter signedint 108 276>

526:
old  <>
new  <	mov dword [rbp + 276], 108>

527:
old  < string_test$85:>
new  <>

528:
old  <	; Parameter signedint 108 276>
new  < string_test$85:>

529:
old  <	mov dword [rbp + 276], 108>
new  <	; Call strchr 244 0>

530:
old  <>
new  <	mov qword [rbp + 244], string_test$86>

531:
old  < string_test$86:>
new  <	mov [rbp + 252], rbp>

532:
old  <	; Call strchr 244 0>
new  <	add rbp, 244>

533:
old  <	mov qword [rbp + 244], string_test$87>
new  <	jmp strchr>

534:
old  <	mov [rbp + 252], rbp>
new  <>

535:
old  <	add rbp, 244>
new  < string_test$86:>

536:
old  <	jmp strchr>
new  <	; PostCall 244>

539:
old  <	; PostCall 244>
new  <	; GetReturnValue Â£temporary3004>

542:
old  <	; GetReturnValue Â£temporary3004>
new  <	; Assign p Â£temporary3004>

543:
old  <>
new  <	mov [rbp + 236], rbx>

544:
old  < string_test$89:>
new  <>

545:
old  <	; Assign p Â£temporary3004>
new  < string_test$89:>

546:
old  <	mov [rbp + 236], rbx>
new  <	; PreCall 244 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

549:
old  <	; PreCall 244 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter pointer "strchr(s, 'l') = %i\n" 268>

550:
old  <>
new  <	mov qword [rbp + 268], string_strchr28s2C2027l2729203D2025i0A#>

551:
old  < string_test$91:>
new  <>

552:
old  <	; Parameter pointer "strchr(s, 'l') = %i\n" 268>
new  < string_test$91:>

553:
old  <	mov qword [rbp + 268], string_strchr28s2C2027l2729203D2025i0A#>
new  <	; Equal 96 p 0>

554:
old  <>
new  <	cmp qword [rbp + 236], 0>

555:
old  < string_test$92:>
new  <	je string_test$96>

556:
old  <	; Equal 97 p 0>
new  <>

557:
old  <	cmp qword [rbp + 236], 0>
new  < string_test$92:>

558:
old  <	je string_test$97>
new  <	; BinarySubtract Â£temporary3007 p s>

559:
old  <>
new  <	mov rax, [rbp + 236]>

560:
old  < string_test$93:>
new  <	sub rax, [rbp + 28]>

561:
old  <	; BinarySubtract Â£temporary3007 p s>
new  <>

562:
old  <	mov rax, [rbp + 236]>
new  < string_test$93:>

563:
old  <	sub rax, [rbp + 28]>
new  <	; IntegralToIntegral Â£temporary3008 Â£temporary3007>

566:
old  <	; IntegralToIntegral Â£temporary3008 Â£temporary3007>
new  <	; Assign Â£temporary3009 Â£temporary3008>

569:
old  <	; Assign Â£temporary3009 Â£temporary3008>
new  <	; Goto 97>

570:
old  <>
new  <	jmp string_test$97>

571:
old  < string_test$96:>
new  <>

572:
old  <	; Goto 98>
new  < string_test$96:>

573:
old  <	jmp string_test$98>
new  <	; Assign Â£temporary3009 -1>

574:
old  <>
new  <	mov eax, -1>

575:
old  < string_test$97:>
new  <>

576:
old  <	; Assign Â£temporary3009 -1>
new  < string_test$97:>

577:
old  <	mov eax, -1>
new  <	; Parameter signedint Â£temporary3009 276>

578:
old  <>
new  <	mov [rbp + 276], eax>

579:
old  < string_test$98:>
new  <>

580:
old  <	; Parameter signedint Â£temporary3009 276>
new  < string_test$98:>

581:
old  <	mov [rbp + 276], eax>
new  <	; Call printf 244 4>

582:
old  <>
new  <	mov qword [rbp + 244], string_test$99>

583:
old  < string_test$99:>
new  <	mov [rbp + 252], rbp>

584:
old  <	; Call printf 244 4>
new  <	add rbp, 244>

585:
old  <	mov qword [rbp + 244], string_test$100>
new  <	mov rdi, rbp>

586:
old  <	mov [rbp + 252], rbp>
new  <	add rdi, 4>

587:
old  <	add rbp, 244>
new  <	jmp printf>

588:
old  <	mov rdi, rbp>
new  <>

589:
old  <	add rdi, 4>
new  < string_test$99:>

590:
old  <	jmp printf>
new  <	; PostCall 244>

593:
old  <	; PostCall 244>
new  <	; PreCall 244 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

596:
old  <	; PreCall 244 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter pointer s 268>

597:
old  <>
new  <	mov rax, [rbp + 28]>

598:
old  < string_test$102:>
new  <	mov [rbp + 268], rax>

599:
old  <	; Parameter pointer s 268>
new  <>

600:
old  <	mov rax, [rbp + 28]>
new  < string_test$102:>

601:
old  <	mov [rbp + 268], rax>
new  <	; Parameter signedint 108 276>

602:
old  <>
new  <	mov dword [rbp + 276], 108>

603:
old  < string_test$103:>
new  <>

604:
old  <	; Parameter signedint 108 276>
new  < string_test$103:>

605:
old  <	mov dword [rbp + 276], 108>
new  <	; Call strrchr 244 0>

606:
old  <>
new  <	mov qword [rbp + 244], string_test$104>

607:
old  < string_test$104:>
new  <	mov [rbp + 252], rbp>

608:
old  <	; Call strrchr 244 0>
new  <	add rbp, 244>

609:
old  <	mov qword [rbp + 244], string_test$105>
new  <	jmp strrchr>

610:
old  <	mov [rbp + 252], rbp>
new  <>

611:
old  <	add rbp, 244>
new  < string_test$104:>

612:
old  <	jmp strrchr>
new  <	; PostCall 244>

615:
old  <	; PostCall 244>
new  <	; GetReturnValue Â£temporary3011>

618:
old  <	; GetReturnValue Â£temporary3011>
new  <	; Assign p Â£temporary3011>

619:
old  <>
new  <	mov [rbp + 236], rbx>

620:
old  < string_test$107:>
new  <>

621:
old  <	; Assign p Â£temporary3011>
new  < string_test$107:>

622:
old  <	mov [rbp + 236], rbx>
new  <	; PreCall 244 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

625:
old  <	; PreCall 244 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter pointer "strrchr(s, 'l') = %i\n" 268>

626:
old  <>
new  <	mov qword [rbp + 268], string_strrchr28s2C2027l2729203D2025i0A#>

627:
old  < string_test$109:>
new  <>

628:
old  <	; Parameter pointer "strrchr(s, 'l') = %i\n" 268>
new  < string_test$109:>

629:
old  <	mov qword [rbp + 268], string_strrchr28s2C2027l2729203D2025i0A#>
new  <	; Equal 114 p 0>

630:
old  <>
new  <	cmp qword [rbp + 236], 0>

631:
old  < string_test$110:>
new  <	je string_test$114>

632:
old  <	; Equal 115 p 0>
new  <>

633:
old  <	cmp qword [rbp + 236], 0>
new  < string_test$110:>

634:
old  <	je string_test$115>
new  <	; BinarySubtract Â£temporary3014 p s>

635:
old  <>
new  <	mov rax, [rbp + 236]>

636:
old  < string_test$111:>
new  <	sub rax, [rbp + 28]>

637:
old  <	; BinarySubtract Â£temporary3014 p s>
new  <>

638:
old  <	mov rax, [rbp + 236]>
new  < string_test$111:>

639:
old  <	sub rax, [rbp + 28]>
new  <	; IntegralToIntegral Â£temporary3015 Â£temporary3014>

642:
old  <	; IntegralToIntegral Â£temporary3015 Â£temporary3014>
new  <	; Assign Â£temporary3016 Â£temporary3015>

645:
old  <	; Assign Â£temporary3016 Â£temporary3015>
new  <	; Goto 115>

646:
old  <>
new  <	jmp string_test$115>

647:
old  < string_test$114:>
new  <>

648:
old  <	; Goto 116>
new  < string_test$114:>

649:
old  <	jmp string_test$116>
new  <	; Assign Â£temporary3016 -1>

650:
old  <>
new  <	mov eax, -1>

651:
old  < string_test$115:>
new  <>

652:
old  <	; Assign Â£temporary3016 -1>
new  < string_test$115:>

653:
old  <	mov eax, -1>
new  <	; Parameter signedint Â£temporary3016 276>

654:
old  <>
new  <	mov [rbp + 276], eax>

655:
old  < string_test$116:>
new  <>

656:
old  <	; Parameter signedint Â£temporary3016 276>
new  < string_test$116:>

657:
old  <	mov [rbp + 276], eax>
new  <	; Call printf 244 4>

658:
old  <>
new  <	mov qword [rbp + 244], string_test$117>

659:
old  < string_test$117:>
new  <	mov [rbp + 252], rbp>

660:
old  <	; Call printf 244 4>
new  <	add rbp, 244>

661:
old  <	mov qword [rbp + 244], string_test$118>
new  <	mov rdi, rbp>

662:
old  <	mov [rbp + 252], rbp>
new  <	add rdi, 4>

663:
old  <	add rbp, 244>
new  <	jmp printf>

664:
old  <	mov rdi, rbp>
new  <>

665:
old  <	add rdi, 4>
new  < string_test$117:>

666:
old  <	jmp printf>
new  <	; PostCall 244>

669:
old  <	; PostCall 244>
new  <	; PreCall 244 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

672:
old  <	; PreCall 244 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter pointer s 268>

673:
old  <>
new  <	mov rax, [rbp + 28]>

674:
old  < string_test$120:>
new  <	mov [rbp + 268], rax>

675:
old  <	; Parameter pointer s 268>
new  <>

676:
old  <	mov rax, [rbp + 28]>
new  < string_test$120:>

677:
old  <	mov [rbp + 268], rax>
new  <	; Parameter signedint 120 276>

678:
old  <>
new  <	mov dword [rbp + 276], 120>

679:
old  < string_test$121:>
new  <>

680:
old  <	; Parameter signedint 120 276>
new  < string_test$121:>

681:
old  <	mov dword [rbp + 276], 120>
new  <	; Call strchr 244 0>

682:
old  <>
new  <	mov qword [rbp + 244], string_test$122>

683:
old  < string_test$122:>
new  <	mov [rbp + 252], rbp>

684:
old  <	; Call strchr 244 0>
new  <	add rbp, 244>

685:
old  <	mov qword [rbp + 244], string_test$123>
new  <	jmp strchr>

686:
old  <	mov [rbp + 252], rbp>
new  <>

687:
old  <	add rbp, 244>
new  < string_test$122:>

688:
old  <	jmp strchr>
new  <	; PostCall 244>

691:
old  <	; PostCall 244>
new  <	; GetReturnValue Â£temporary3018>

694:
old  <	; GetReturnValue Â£temporary3018>
new  <	; Assign p Â£temporary3018>

695:
old  <>
new  <	mov [rbp + 236], rbx>

696:
old  < string_test$125:>
new  <>

697:
old  <	; Assign p Â£temporary3018>
new  < string_test$125:>

698:
old  <	mov [rbp + 236], rbx>
new  <	; PreCall 244 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

701:
old  <	; PreCall 244 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter pointer "strchr(s, 'x') = %i\n" 268>

702:
old  <>
new  <	mov qword [rbp + 268], string_strchr28s2C2027x2729203D2025i0A#>

703:
old  < string_test$127:>
new  <>

704:
old  <	; Parameter pointer "strchr(s, 'x') = %i\n" 268>
new  < string_test$127:>

705:
old  <	mov qword [rbp + 268], string_strchr28s2C2027x2729203D2025i0A#>
new  <	; Equal 132 p 0>

706:
old  <>
new  <	cmp qword [rbp + 236], 0>

707:
old  < string_test$128:>
new  <	je string_test$132>

708:
old  <	; Equal 133 p 0>
new  <>

709:
old  <	cmp qword [rbp + 236], 0>
new  < string_test$128:>

710:
old  <	je string_test$133>
new  <	; BinarySubtract Â£temporary3021 p s>

711:
old  <>
new  <	mov rax, [rbp + 236]>

712:
old  < string_test$129:>
new  <	sub rax, [rbp + 28]>

713:
old  <	; BinarySubtract Â£temporary3021 p s>
new  <>

714:
old  <	mov rax, [rbp + 236]>
new  < string_test$129:>

715:
old  <	sub rax, [rbp + 28]>
new  <	; IntegralToIntegral Â£temporary3022 Â£temporary3021>

718:
old  <	; IntegralToIntegral Â£temporary3022 Â£temporary3021>
new  <	; Assign Â£temporary3023 Â£temporary3022>

721:
old  <	; Assign Â£temporary3023 Â£temporary3022>
new  <	; Goto 133>

722:
old  <>
new  <	jmp string_test$133>

723:
old  < string_test$132:>
new  <>

724:
old  <	; Goto 134>
new  < string_test$132:>

725:
old  <	jmp string_test$134>
new  <	; Assign Â£temporary3023 -1>

726:
old  <>
new  <	mov eax, -1>

727:
old  < string_test$133:>
new  <>

728:
old  <	; Assign Â£temporary3023 -1>
new  < string_test$133:>

729:
old  <	mov eax, -1>
new  <	; Parameter signedint Â£temporary3023 276>

730:
old  <>
new  <	mov [rbp + 276], eax>

731:
old  < string_test$134:>
new  <>

732:
old  <	; Parameter signedint Â£temporary3023 276>
new  < string_test$134:>

733:
old  <	mov [rbp + 276], eax>
new  <	; Call printf 244 4>

734:
old  <>
new  <	mov qword [rbp + 244], string_test$135>

735:
old  < string_test$135:>
new  <	mov [rbp + 252], rbp>

736:
old  <	; Call printf 244 4>
new  <	add rbp, 244>

737:
old  <	mov qword [rbp + 244], string_test$136>
new  <	mov rdi, rbp>

738:
old  <	mov [rbp + 252], rbp>
new  <	add rdi, 4>

739:
old  <	add rbp, 244>
new  <	jmp printf>

740:
old  <	mov rdi, rbp>
new  <>

741:
old  <	add rdi, 4>
new  < string_test$135:>

742:
old  <	jmp printf>
new  <	; PostCall 244>

745:
old  <	; PostCall 244>
new  <	; PreCall 244 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

748:
old  <	; PreCall 244 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter pointer s 268>

749:
old  <>
new  <	mov rax, [rbp + 28]>

750:
old  < string_test$138:>
new  <	mov [rbp + 268], rax>

751:
old  <	; Parameter pointer s 268>
new  <>

752:
old  <	mov rax, [rbp + 28]>
new  < string_test$138:>

753:
old  <	mov [rbp + 268], rax>
new  <	; Parameter signedint 120 276>

754:
old  <>
new  <	mov dword [rbp + 276], 120>

755:
old  < string_test$139:>
new  <>

756:
old  <	; Parameter signedint 120 276>
new  < string_test$139:>

757:
old  <	mov dword [rbp + 276], 120>
new  <	; Call strrchr 244 0>

758:
old  <>
new  <	mov qword [rbp + 244], string_test$140>

759:
old  < string_test$140:>
new  <	mov [rbp + 252], rbp>

760:
old  <	; Call strrchr 244 0>
new  <	add rbp, 244>

761:
old  <	mov qword [rbp + 244], string_test$141>
new  <	jmp strrchr>

762:
old  <	mov [rbp + 252], rbp>
new  <>

763:
old  <	add rbp, 244>
new  < string_test$140:>

764:
old  <	jmp strrchr>
new  <	; PostCall 244>

767:
old  <	; PostCall 244>
new  <	; GetReturnValue Â£temporary3025>

770:
old  <	; GetReturnValue Â£temporary3025>
new  <	; Assign p Â£temporary3025>

771:
old  <>
new  <	mov [rbp + 236], rbx>

772:
old  < string_test$143:>
new  <>

773:
old  <	; Assign p Â£temporary3025>
new  < string_test$143:>

774:
old  <	mov [rbp + 236], rbx>
new  <	; PreCall 244 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

777:
old  <	; PreCall 244 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter pointer "strrchr(s, 'x') = %i\n" 268>

778:
old  <>
new  <	mov qword [rbp + 268], string_strrchr28s2C2027x2729203D2025i0A#>

779:
old  < string_test$145:>
new  <>

780:
old  <	; Parameter pointer "strrchr(s, 'x') = %i\n" 268>
new  < string_test$145:>

781:
old  <	mov qword [rbp + 268], string_strrchr28s2C2027x2729203D2025i0A#>
new  <	; Equal 150 p 0>

782:
old  <>
new  <	cmp qword [rbp + 236], 0>

783:
old  < string_test$146:>
new  <	je string_test$150>

784:
old  <	; Equal 151 p 0>
new  <>

785:
old  <	cmp qword [rbp + 236], 0>
new  < string_test$146:>

786:
old  <	je string_test$151>
new  <	; BinarySubtract Â£temporary3028 p s>

787:
old  <>
new  <	mov rax, [rbp + 236]>

788:
old  < string_test$147:>
new  <	sub rax, [rbp + 28]>

789:
old  <	; BinarySubtract Â£temporary3028 p s>
new  <>

790:
old  <	mov rax, [rbp + 236]>
new  < string_test$147:>

791:
old  <	sub rax, [rbp + 28]>
new  <	; IntegralToIntegral Â£temporary3029 Â£temporary3028>

794:
old  <	; IntegralToIntegral Â£temporary3029 Â£temporary3028>
new  <	; Assign Â£temporary3030 Â£temporary3029>

797:
old  <	; Assign Â£temporary3030 Â£temporary3029>
new  <	; Goto 151>

798:
old  <>
new  <	jmp string_test$151>

799:
old  < string_test$150:>
new  <>

800:
old  <	; Goto 152>
new  < string_test$150:>

801:
old  <	jmp string_test$152>
new  <	; Assign Â£temporary3030 -1>

802:
old  <>
new  <	mov eax, -1>

803:
old  < string_test$151:>
new  <>

804:
old  <	; Assign Â£temporary3030 -1>
new  < string_test$151:>

805:
old  <	mov eax, -1>
new  <	; Parameter signedint Â£temporary3030 276>

806:
old  <>
new  <	mov [rbp + 276], eax>

807:
old  < string_test$152:>
new  <>

808:
old  <	; Parameter signedint Â£temporary3030 276>
new  < string_test$152:>

809:
old  <	mov [rbp + 276], eax>
new  <	; Call printf 244 4>

810:
old  <>
new  <	mov qword [rbp + 244], string_test$153>

811:
old  < string_test$153:>
new  <	mov [rbp + 252], rbp>

812:
old  <	; Call printf 244 4>
new  <	add rbp, 244>

813:
old  <	mov qword [rbp + 244], string_test$154>
new  <	mov rdi, rbp>

814:
old  <	mov [rbp + 252], rbp>
new  <	add rdi, 4>

815:
old  <	add rbp, 244>
new  <	jmp printf>

816:
old  <	mov rdi, rbp>
new  <>

817:
old  <	add rdi, 4>
new  < string_test$153:>

818:
old  <	jmp printf>
new  <	; PostCall 244>

821:
old  <	; PostCall 244>
new  <	; PreCall 244 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

824:
old  <	; PreCall 244 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter pointer s 268>

825:
old  <>
new  <	mov rax, [rbp + 28]>

826:
old  < string_test$156:>
new  <	mov [rbp + 268], rax>

827:
old  <	; Parameter pointer s 268>
new  <>

828:
old  <	mov rax, [rbp + 28]>
new  < string_test$156:>

829:
old  <	mov [rbp + 268], rax>
new  <	; Parameter pointer "Hello, World!" 276>

830:
old  <>
new  <	mov qword [rbp + 276], string_Hello2C20World21#>

831:
old  < string_test$157:>
new  <>

832:
old  <	; Parameter pointer "Hello, World!" 276>
new  < string_test$157:>

833:
old  <	mov qword [rbp + 276], string_Hello2C20World21#>
new  <	; Parameter signedint 20 284>

834:
old  <>
new  <	mov dword [rbp + 284], 20>

835:
old  < string_test$158:>
new  <>

836:
old  <	; Parameter signedint 20 284>
new  < string_test$158:>

837:
old  <	mov dword [rbp + 284], 20>
new  <	; Call memcpy 244 0>

838:
old  <>
new  <	mov qword [rbp + 244], string_test$159>

839:
old  < string_test$159:>
new  <	mov [rbp + 252], rbp>

840:
old  <	; Call memcpy 244 0>
new  <	add rbp, 244>

841:
old  <	mov qword [rbp + 244], string_test$160>
new  <	jmp memcpy>

842:
old  <	mov [rbp + 252], rbp>
new  <>

843:
old  <	add rbp, 244>
new  < string_test$159:>

844:
old  <	jmp memcpy>
new  <	; PostCall 244>

847:
old  <	; PostCall 244>
new  <	; PreCall 244 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

850:
old  <	; PreCall 244 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter pointer t 268>

851:
old  <>
new  <	mov [rbp + 268], rbp>

852:
old  < string_test$162:>
new  <	add qword [rbp + 268], 36>

853:
old  <	; Parameter pointer t 268>
new  <>

854:
old  <	mov [rbp + 268], rbp>
new  < string_test$162:>

855:
old  <	add qword [rbp + 268], 36>
new  <	; Parameter pointer "Hello, World!" 276>

856:
old  <>
new  <	mov qword [rbp + 276], string_Hello2C20World21#>

857:
old  < string_test$163:>
new  <>

858:
old  <	; Parameter pointer "Hello, World!" 276>
new  < string_test$163:>

859:
old  <	mov qword [rbp + 276], string_Hello2C20World21#>
new  <	; Parameter signedint 20 284>

860:
old  <>
new  <	mov dword [rbp + 284], 20>

861:
old  < string_test$164:>
new  <>

862:
old  <	; Parameter signedint 20 284>
new  < string_test$164:>

863:
old  <	mov dword [rbp + 284], 20>
new  <	; Call memmove 244 0>

864:
old  <>
new  <	mov qword [rbp + 244], string_test$165>

865:
old  < string_test$165:>
new  <	mov [rbp + 252], rbp>

866:
old  <	; Call memmove 244 0>
new  <	add rbp, 244>

867:
old  <	mov qword [rbp + 244], string_test$166>
new  <	jmp memmove>

868:
old  <	mov [rbp + 252], rbp>
new  <>

869:
old  <	add rbp, 244>
new  < string_test$165:>

870:
old  <	jmp memmove>
new  <	; PostCall 244>

873:
old  <	; PostCall 244>
new  <	; PreCall 244 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

876:
old  <	; PreCall 244 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter pointer u 268>

877:
old  <>
new  <	mov [rbp + 268], rbp>

878:
old  < string_test$168:>
new  <	add qword [rbp + 268], 136>

879:
old  <	; Parameter pointer u 268>
new  <>

880:
old  <	mov [rbp + 268], rbp>
new  < string_test$168:>

881:
old  <	add qword [rbp + 268], 136>
new  <	; Parameter signedint 88 276>

882:
old  <>
new  <	mov dword [rbp + 276], 88>

883:
old  < string_test$169:>
new  <>

884:
old  <	; Parameter signedint 88 276>
new  < string_test$169:>

885:
old  <	mov dword [rbp + 276], 88>
new  <	; Parameter signedint 20 280>

886:
old  <>
new  <	mov dword [rbp + 280], 20>

887:
old  < string_test$170:>
new  <>

888:
old  <	; Parameter signedint 20 280>
new  < string_test$170:>

889:
old  <	mov dword [rbp + 280], 20>
new  <	; Call memset 244 0>

890:
old  <>
new  <	mov qword [rbp + 244], string_test$171>

891:
old  < string_test$171:>
new  <	mov [rbp + 252], rbp>

892:
old  <	; Call memset 244 0>
new  <	add rbp, 244>

893:
old  <	mov qword [rbp + 244], string_test$172>
new  <	jmp memset>

894:
old  <	mov [rbp + 252], rbp>
new  <>

895:
old  <	add rbp, 244>
new  < string_test$171:>

896:
old  <	jmp memset>
new  <	; PostCall 244>

899:
old  <	; PostCall 244>
new  <	; Dereference Â£temporary3035 -> u u 0>

900:
old  <>
new  <	mov rsi, rbp>

901:
old  < string_test$173:>
new  <	add rsi, 136>

902:
old  <	; Dereference Â£temporary3035 -> u u 0>
new  <>

903:
old  <	mov rsi, rbp>
new  < string_test$173:>

904:
old  <	add rsi, 136>
new  <	; Assign Â£temporary3035 -> u 0>

905:
old  <>
new  <	mov byte [rsi + 21], 0>

906:
old  < string_test$174:>
new  <>

907:
old  <	; Assign Â£temporary3035 -> u 0>
new  < string_test$174:>

908:
old  <	mov byte [rsi + 21], 0>
new  <	; PreCall 244 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

911:
old  <	; PreCall 244 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter pointer "s = "%s", t = "%s", u = "%s"\n" 268>

912:
old  <>
new  <	mov qword [rbp + 268], string_s203D202225s222C20t203D202225s222C20u203D202225s220A#>

913:
old  < string_test$176:>
new  <>

914:
old  <	; Parameter pointer "s = "%s", t = "%s", u = "%s"\n" 268>
new  < string_test$176:>

915:
old  <	mov qword [rbp + 268], string_s203D202225s222C20t203D202225s222C20u203D202225s220A#>
new  <	; Parameter pointer s 276>

916:
old  <>
new  <	mov rax, [rbp + 28]>

917:
old  < string_test$177:>
new  <	mov [rbp + 276], rax>

918:
old  <	; Parameter pointer s 276>
new  <>

919:
old  <	mov rax, [rbp + 28]>
new  < string_test$177:>

920:
old  <	mov [rbp + 276], rax>
new  <	; Parameter pointer t 284>

921:
old  <>
new  <	mov [rbp + 284], rbp>

922:
old  < string_test$178:>
new  <	add qword [rbp + 284], 36>

923:
old  <	; Parameter pointer t 284>
new  <>

924:
old  <	mov [rbp + 284], rbp>
new  < string_test$178:>

925:
old  <	add qword [rbp + 284], 36>
new  <	; Parameter pointer u 292>

926:
old  <>
new  <	mov [rbp + 292], rbp>

927:
old  < string_test$179:>
new  <	add qword [rbp + 292], 136>

928:
old  <	; Parameter pointer u 292>
new  <>

929:
old  <	mov [rbp + 292], rbp>
new  < string_test$179:>

930:
old  <	add qword [rbp + 292], 136>
new  <	; Call printf 244 24>

931:
old  <>
new  <	mov qword [rbp + 244], string_test$180>

932:
old  < string_test$180:>
new  <	mov [rbp + 252], rbp>

933:
old  <	; Call printf 244 24>
new  <	add rbp, 244>

934:
old  <	mov qword [rbp + 244], string_test$181>
new  <	mov rdi, rbp>

935:
old  <	mov [rbp + 252], rbp>
new  <	add rdi, 24>

936:
old  <	add rbp, 244>
new  <	jmp printf>

937:
old  <	mov rdi, rbp>
new  <>

938:
old  <	add rdi, 24>
new  < string_test$180:>

939:
old  <	jmp printf>
new  <	; PostCall 244>

942:
old  <	; PostCall 244>
new  <	; PreCall 244 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

945:
old  <	; PreCall 244 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter pointer s 268>

946:
old  <>
new  <	mov rax, [rbp + 28]>

947:
old  < string_test$183:>
new  <	mov [rbp + 268], rax>

948:
old  <	; Parameter pointer s 268>
new  <>

949:
old  <	mov rax, [rbp + 28]>
new  < string_test$183:>

950:
old  <	mov [rbp + 268], rax>
new  <	; Parameter signedint 108 276>

951:
old  <>
new  <	mov dword [rbp + 276], 108>

952:
old  < string_test$184:>
new  <>

953:
old  <	; Parameter signedint 108 276>
new  < string_test$184:>

954:
old  <	mov dword [rbp + 276], 108>
new  <	; Parameter signedint 20 280>

955:
old  <>
new  <	mov dword [rbp + 280], 20>

956:
old  < string_test$185:>
new  <>

957:
old  <	; Parameter signedint 20 280>
new  < string_test$185:>

958:
old  <	mov dword [rbp + 280], 20>
new  <	; Call memchr 244 0>

959:
old  <>
new  <	mov qword [rbp + 244], string_test$186>

960:
old  < string_test$186:>
new  <	mov [rbp + 252], rbp>

961:
old  <	; Call memchr 244 0>
new  <	add rbp, 244>

962:
old  <	mov qword [rbp + 244], string_test$187>
new  <	jmp memchr>

963:
old  <	mov [rbp + 252], rbp>
new  <>

964:
old  <	add rbp, 244>
new  < string_test$186:>

965:
old  <	jmp memchr>
new  <	; PostCall 244>

968:
old  <	; PostCall 244>
new  <	; GetReturnValue Â£temporary3037>

971:
old  <	; GetReturnValue Â£temporary3037>
new  <	; Assign p Â£temporary3037>

972:
old  <>
new  <	mov [rbp + 236], rbx>

973:
old  < string_test$189:>
new  <>

974:
old  <	; Assign p Â£temporary3037>
new  < string_test$189:>

975:
old  <	mov [rbp + 236], rbx>
new  <	; PreCall 244 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

978:
old  <	; PreCall 244 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter pointer "memchr(s, 'l', SIZE * sizeof(char)) = %i\n" 268>

979:
old  <>
new  <	mov qword [rbp + 268], string_memchr28s2C2027l272C20SIZE202A20sizeof28char2929203D2025i0A#>

980:
old  < string_test$191:>
new  <>

981:
old  <	; Parameter pointer "memchr(s, 'l', SIZE * sizeof(char)) = %i\n" 268>
new  < string_test$191:>

982:
old  <	mov qword [rbp + 268], string_memchr28s2C2027l272C20SIZE202A20sizeof28char2929203D2025i0A#>
new  <	; Equal 196 p 0>

983:
old  <>
new  <	cmp qword [rbp + 236], 0>

984:
old  < string_test$192:>
new  <	je string_test$196>

985:
old  <	; Equal 197 p 0>
new  <>

986:
old  <	cmp qword [rbp + 236], 0>
new  < string_test$192:>

987:
old  <	je string_test$197>
new  <	; BinarySubtract Â£temporary3040 p s>

988:
old  <>
new  <	mov rax, [rbp + 236]>

989:
old  < string_test$193:>
new  <	sub rax, [rbp + 28]>

990:
old  <	; BinarySubtract Â£temporary3040 p s>
new  <>

991:
old  <	mov rax, [rbp + 236]>
new  < string_test$193:>

992:
old  <	sub rax, [rbp + 28]>
new  <	; IntegralToIntegral Â£temporary3041 Â£temporary3040>

995:
old  <	; IntegralToIntegral Â£temporary3041 Â£temporary3040>
new  <	; Assign Â£temporary3042 Â£temporary3041>

998:
old  <	; Assign Â£temporary3042 Â£temporary3041>
new  <	; Goto 197>

999:
old  <>
new  <	jmp string_test$197>

1000:
old  < string_test$196:>
new  <>

1001:
old  <	; Goto 198>
new  < string_test$196:>

1002:
old  <	jmp string_test$198>
new  <	; Assign Â£temporary3042 -1>

1003:
old  <>
new  <	mov eax, -1>

1004:
old  < string_test$197:>
new  <>

1005:
old  <	; Assign Â£temporary3042 -1>
new  < string_test$197:>

1006:
old  <	mov eax, -1>
new  <	; Parameter signedint Â£temporary3042 276>

1007:
old  <>
new  <	mov [rbp + 276], eax>

1008:
old  < string_test$198:>
new  <>

1009:
old  <	; Parameter signedint Â£temporary3042 276>
new  < string_test$198:>

1010:
old  <	mov [rbp + 276], eax>
new  <	; Call printf 244 4>

1011:
old  <>
new  <	mov qword [rbp + 244], string_test$199>

1012:
old  < string_test$199:>
new  <	mov [rbp + 252], rbp>

1013:
old  <	; Call printf 244 4>
new  <	add rbp, 244>

1014:
old  <	mov qword [rbp + 244], string_test$200>
new  <	mov rdi, rbp>

1015:
old  <	mov [rbp + 252], rbp>
new  <	add rdi, 4>

1016:
old  <	add rbp, 244>
new  <	jmp printf>

1017:
old  <	mov rdi, rbp>
new  <>

1018:
old  <	add rdi, 4>
new  < string_test$199:>

1019:
old  <	jmp printf>
new  <	; PostCall 244>

1022:
old  <	; PostCall 244>
new  <	; PreCall 244 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1025:
old  <	; PreCall 244 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter pointer s 268>

1026:
old  <>
new  <	mov rax, [rbp + 28]>

1027:
old  < string_test$202:>
new  <	mov [rbp + 268], rax>

1028:
old  <	; Parameter pointer s 268>
new  <>

1029:
old  <	mov rax, [rbp + 28]>
new  < string_test$202:>

1030:
old  <	mov [rbp + 268], rax>
new  <	; Parameter signedint 120 276>

1031:
old  <>
new  <	mov dword [rbp + 276], 120>

1032:
old  < string_test$203:>
new  <>

1033:
old  <	; Parameter signedint 120 276>
new  < string_test$203:>

1034:
old  <	mov dword [rbp + 276], 120>
new  <	; Parameter signedint 20 280>

1035:
old  <>
new  <	mov dword [rbp + 280], 20>

1036:
old  < string_test$204:>
new  <>

1037:
old  <	; Parameter signedint 20 280>
new  < string_test$204:>

1038:
old  <	mov dword [rbp + 280], 20>
new  <	; Call memchr 244 0>

1039:
old  <>
new  <	mov qword [rbp + 244], string_test$205>

1040:
old  < string_test$205:>
new  <	mov [rbp + 252], rbp>

1041:
old  <	; Call memchr 244 0>
new  <	add rbp, 244>

1042:
old  <	mov qword [rbp + 244], string_test$206>
new  <	jmp memchr>

1043:
old  <	mov [rbp + 252], rbp>
new  <>

1044:
old  <	add rbp, 244>
new  < string_test$205:>

1045:
old  <	jmp memchr>
new  <	; PostCall 244>

1048:
old  <	; PostCall 244>
new  <	; GetReturnValue Â£temporary3044>

1051:
old  <	; GetReturnValue Â£temporary3044>
new  <	; Assign p Â£temporary3044>

1052:
old  <>
new  <	mov [rbp + 236], rbx>

1053:
old  < string_test$208:>
new  <>

1054:
old  <	; Assign p Â£temporary3044>
new  < string_test$208:>

1055:
old  <	mov [rbp + 236], rbx>
new  <	; PreCall 244 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1058:
old  <	; PreCall 244 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter pointer "memchr(s, 'x', SIZE * sizeof(char)) = %i\n" 268>

1059:
old  <>
new  <	mov qword [rbp + 268], string_memchr28s2C2027x272C20SIZE202A20sizeof28char2929203D2025i0A#>

1060:
old  < string_test$210:>
new  <>

1061:
old  <	; Parameter pointer "memchr(s, 'x', SIZE * sizeof(char)) = %i\n" 268>
new  < string_test$210:>

1062:
old  <	mov qword [rbp + 268], string_memchr28s2C2027x272C20SIZE202A20sizeof28char2929203D2025i0A#>
new  <	; Equal 215 p 0>

1063:
old  <>
new  <	cmp qword [rbp + 236], 0>

1064:
old  < string_test$211:>
new  <	je string_test$215>

1065:
old  <	; Equal 216 p 0>
new  <>

1066:
old  <	cmp qword [rbp + 236], 0>
new  < string_test$211:>

1067:
old  <	je string_test$216>
new  <	; BinarySubtract Â£temporary3047 p s>

1068:
old  <>
new  <	mov rax, [rbp + 236]>

1069:
old  < string_test$212:>
new  <	sub rax, [rbp + 28]>

1070:
old  <	; BinarySubtract Â£temporary3047 p s>
new  <>

1071:
old  <	mov rax, [rbp + 236]>
new  < string_test$212:>

1072:
old  <	sub rax, [rbp + 28]>
new  <	; IntegralToIntegral Â£temporary3048 Â£temporary3047>

1075:
old  <	; IntegralToIntegral Â£temporary3048 Â£temporary3047>
new  <	; Assign Â£temporary3049 Â£temporary3048>

1078:
old  <	; Assign Â£temporary3049 Â£temporary3048>
new  <	; Goto 216>

1079:
old  <>
new  <	jmp string_test$216>

1080:
old  < string_test$215:>
new  <>

1081:
old  <	; Goto 217>
new  < string_test$215:>

1082:
old  <	jmp string_test$217>
new  <	; Assign Â£temporary3049 -1>

1083:
old  <>
new  <	mov eax, -1>

1084:
old  < string_test$216:>
new  <>

1085:
old  <	; Assign Â£temporary3049 -1>
new  < string_test$216:>

1086:
old  <	mov eax, -1>
new  <	; Parameter signedint Â£temporary3049 276>

1087:
old  <>
new  <	mov [rbp + 276], eax>

1088:
old  < string_test$217:>
new  <>

1089:
old  <	; Parameter signedint Â£temporary3049 276>
new  < string_test$217:>

1090:
old  <	mov [rbp + 276], eax>
new  <	; Call printf 244 4>

1091:
old  <>
new  <	mov qword [rbp + 244], string_test$218>

1092:
old  < string_test$218:>
new  <	mov [rbp + 252], rbp>

1093:
old  <	; Call printf 244 4>
new  <	add rbp, 244>

1094:
old  <	mov qword [rbp + 244], string_test$219>
new  <	mov rdi, rbp>

1095:
old  <	mov [rbp + 252], rbp>
new  <	add rdi, 4>

1096:
old  <	add rbp, 244>
new  <	jmp printf>

1097:
old  <	mov rdi, rbp>
new  <>

1098:
old  <	add rdi, 4>
new  < string_test$218:>

1099:
old  <	jmp printf>
new  <	; PostCall 244>

1102:
old  <	; PostCall 244>
new  <	; PreCall 244 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1105:
old  <	; PreCall 244 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter pointer "memcmp(s, t, SIZE * sizeof(char)) = %i\n" 268>

1106:
old  <>
new  <	mov qword [rbp + 268], string_memcmp28s2C20t2C20SIZE202A20sizeof28char2929203D2025i0A#>

1107:
old  < string_test$221:>
new  <>

1108:
old  <	; Parameter pointer "memcmp(s, t, SIZE * sizeof(char)) = %i\n" 268>
new  < string_test$221:>

1109:
old  <	mov qword [rbp + 268], string_memcmp28s2C20t2C20SIZE202A20sizeof28char2929203D2025i0A#>
new  <	; PreCall 244 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1112:
old  <	; PreCall 244 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter pointer s 300>

1113:
old  <>
new  <	mov rax, [rbp + 28]>

1114:
old  < string_test$223:>
new  <	mov [rbp + 300], rax>

1115:
old  <	; Parameter pointer s 300>
new  <>

1116:
old  <	mov rax, [rbp + 28]>
new  < string_test$223:>

1117:
old  <	mov [rbp + 300], rax>
new  <	; Parameter pointer t 308>

1118:
old  <>
new  <	mov [rbp + 308], rbp>

1119:
old  < string_test$224:>
new  <	add qword [rbp + 308], 36>

1120:
old  <	; Parameter pointer t 308>
new  <>

1121:
old  <	mov [rbp + 308], rbp>
new  < string_test$224:>

1122:
old  <	add qword [rbp + 308], 36>
new  <	; Parameter signedint 20 316>

1123:
old  <>
new  <	mov dword [rbp + 316], 20>

1124:
old  < string_test$225:>
new  <>

1125:
old  <	; Parameter signedint 20 316>
new  < string_test$225:>

1126:
old  <	mov dword [rbp + 316], 20>
new  <	; Call memcmp 276 0>

1127:
old  <>
new  <	mov qword [rbp + 276], string_test$226>

1128:
old  < string_test$226:>
new  <	mov [rbp + 284], rbp>

1129:
old  <	; Call memcmp 276 0>
new  <	add rbp, 276>

1130:
old  <	mov qword [rbp + 276], string_test$227>
new  <	jmp memcmp>

1131:
old  <	mov [rbp + 284], rbp>
new  <>

1132:
old  <	add rbp, 276>
new  < string_test$226:>

1133:
old  <	jmp memcmp>
new  <	; PostCall 276>

1136:
old  <	; PostCall 276>
new  <	; GetReturnValue Â£temporary3051>

1139:
old  <	; GetReturnValue Â£temporary3051>
new  <	; Parameter signedint Â£temporary3051 276>

1140:
old  <>
new  <	mov [rbp + 276], ebx>

1141:
old  < string_test$229:>
new  <>

1142:
old  <	; Parameter signedint Â£temporary3051 276>
new  < string_test$229:>

1143:
old  <	mov [rbp + 276], ebx>
new  <	; Call printf 244 4>

1144:
old  <>
new  <	mov qword [rbp + 244], string_test$230>

1145:
old  < string_test$230:>
new  <	mov [rbp + 252], rbp>

1146:
old  <	; Call printf 244 4>
new  <	add rbp, 244>

1147:
old  <	mov qword [rbp + 244], string_test$231>
new  <	mov rdi, rbp>

1148:
old  <	mov [rbp + 252], rbp>
new  <	add rdi, 4>

1149:
old  <	add rbp, 244>
new  <	jmp printf>

1150:
old  <	mov rdi, rbp>
new  <>

1151:
old  <	add rdi, 4>
new  < string_test$230:>

1152:
old  <	jmp printf>
new  <	; PostCall 244>

1155:
old  <	; PostCall 244>
new  <	; PreCall 244 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1158:
old  <	; PreCall 244 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter pointer "strspn(s, "Hello, C") = %i\n" 268>

1159:
old  <>
new  <	mov qword [rbp + 268], string_strspn28s2C2022Hello2C20C2229203D2025i0A#>

1160:
old  < string_test$233:>
new  <>

1161:
old  <	; Parameter pointer "strspn(s, "Hello, C") = %i\n" 268>
new  < string_test$233:>

1162:
old  <	mov qword [rbp + 268], string_strspn28s2C2022Hello2C20C2229203D2025i0A#>
new  <	; PreCall 244 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1165:
old  <	; PreCall 244 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter pointer s 300>

1166:
old  <>
new  <	mov rax, [rbp + 28]>

1167:
old  < string_test$235:>
new  <	mov [rbp + 300], rax>

1168:
old  <	; Parameter pointer s 300>
new  <>

1169:
old  <	mov rax, [rbp + 28]>
new  < string_test$235:>

1170:
old  <	mov [rbp + 300], rax>
new  <	; Parameter pointer "Hello, C" 308>

1171:
old  <>
new  <	mov qword [rbp + 308], string_Hello2C20C#>

1172:
old  < string_test$236:>
new  <>

1173:
old  <	; Parameter pointer "Hello, C" 308>
new  < string_test$236:>

1174:
old  <	mov qword [rbp + 308], string_Hello2C20C#>
new  <	; Call strspn 276 0>

1175:
old  <>
new  <	mov qword [rbp + 276], string_test$237>

1176:
old  < string_test$237:>
new  <	mov [rbp + 284], rbp>

1177:
old  <	; Call strspn 276 0>
new  <	add rbp, 276>

1178:
old  <	mov qword [rbp + 276], string_test$238>
new  <	jmp strspn>

1179:
old  <	mov [rbp + 284], rbp>
new  <>

1180:
old  <	add rbp, 276>
new  < string_test$237:>

1181:
old  <	jmp strspn>
new  <	; PostCall 276>

1184:
old  <	; PostCall 276>
new  <	; GetReturnValue Â£temporary3053>

1187:
old  <	; GetReturnValue Â£temporary3053>
new  <	; Parameter signedint Â£temporary3053 276>

1188:
old  <>
new  <	mov [rbp + 276], ebx>

1189:
old  < string_test$240:>
new  <>

1190:
old  <	; Parameter signedint Â£temporary3053 276>
new  < string_test$240:>

1191:
old  <	mov [rbp + 276], ebx>
new  <	; Call printf 244 4>

1192:
old  <>
new  <	mov qword [rbp + 244], string_test$241>

1193:
old  < string_test$241:>
new  <	mov [rbp + 252], rbp>

1194:
old  <	; Call printf 244 4>
new  <	add rbp, 244>

1195:
old  <	mov qword [rbp + 244], string_test$242>
new  <	mov rdi, rbp>

1196:
old  <	mov [rbp + 252], rbp>
new  <	add rdi, 4>

1197:
old  <	add rbp, 244>
new  <	jmp printf>

1198:
old  <	mov rdi, rbp>
new  <>

1199:
old  <	add rdi, 4>
new  < string_test$241:>

1200:
old  <	jmp printf>
new  <	; PostCall 244>

1203:
old  <	; PostCall 244>
new  <	; PreCall 244 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1206:
old  <	; PreCall 244 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter pointer "strcspn(s, "Hello, C") = %i\n" 268>

1207:
old  <>
new  <	mov qword [rbp + 268], string_strcspn28s2C2022Hello2C20C2229203D2025i0A#>

1208:
old  < string_test$244:>
new  <>

1209:
old  <	; Parameter pointer "strcspn(s, "Hello, C") = %i\n" 268>
new  < string_test$244:>

1210:
old  <	mov qword [rbp + 268], string_strcspn28s2C2022Hello2C20C2229203D2025i0A#>
new  <	; PreCall 244 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1213:
old  <	; PreCall 244 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter pointer s 300>

1214:
old  <>
new  <	mov rax, [rbp + 28]>

1215:
old  < string_test$246:>
new  <	mov [rbp + 300], rax>

1216:
old  <	; Parameter pointer s 300>
new  <>

1217:
old  <	mov rax, [rbp + 28]>
new  < string_test$246:>

1218:
old  <	mov [rbp + 300], rax>
new  <	; Parameter pointer "Hello, C" 308>

1219:
old  <>
new  <	mov qword [rbp + 308], string_Hello2C20C#>

1220:
old  < string_test$247:>
new  <>

1221:
old  <	; Parameter pointer "Hello, C" 308>
new  < string_test$247:>

1222:
old  <	mov qword [rbp + 308], string_Hello2C20C#>
new  <	; Call strcspn 276 0>

1223:
old  <>
new  <	mov qword [rbp + 276], string_test$248>

1224:
old  < string_test$248:>
new  <	mov [rbp + 284], rbp>

1225:
old  <	; Call strcspn 276 0>
new  <	add rbp, 276>

1226:
old  <	mov qword [rbp + 276], string_test$249>
new  <	jmp strcspn>

1227:
old  <	mov [rbp + 284], rbp>
new  <>

1228:
old  <	add rbp, 276>
new  < string_test$248:>

1229:
old  <	jmp strcspn>
new  <	; PostCall 276>

1232:
old  <	; PostCall 276>
new  <	; GetReturnValue Â£temporary3055>

1235:
old  <	; GetReturnValue Â£temporary3055>
new  <	; Parameter signedint Â£temporary3055 276>

1236:
old  <>
new  <	mov [rbp + 276], ebx>

1237:
old  < string_test$251:>
new  <>

1238:
old  <	; Parameter signedint Â£temporary3055 276>
new  < string_test$251:>

1239:
old  <	mov [rbp + 276], ebx>
new  <	; Call printf 244 4>

1240:
old  <>
new  <	mov qword [rbp + 244], string_test$252>

1241:
old  < string_test$252:>
new  <	mov [rbp + 252], rbp>

1242:
old  <	; Call printf 244 4>
new  <	add rbp, 244>

1243:
old  <	mov qword [rbp + 244], string_test$253>
new  <	mov rdi, rbp>

1244:
old  <	mov [rbp + 252], rbp>
new  <	add rdi, 4>

1245:
old  <	add rbp, 244>
new  <	jmp printf>

1246:
old  <	mov rdi, rbp>
new  <>

1247:
old  <	add rdi, 4>
new  < string_test$252:>

1248:
old  <	jmp printf>
new  <	; PostCall 244>

1251:
old  <	; PostCall 244>
new  <	; PreCall 244 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1254:
old  <	; PreCall 244 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter pointer "strerror(errno) = "%s"\n" 268>

1255:
old  <>
new  <	mov qword [rbp + 268], string_strerror28errno29203D202225s220A#>

1256:
old  < string_test$255:>
new  <>

1257:
old  <	; Parameter pointer "strerror(errno) = "%s"\n" 268>
new  < string_test$255:>

1258:
old  <	mov qword [rbp + 268], string_strerror28errno29203D202225s220A#>
new  <	; PreCall 244 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1261:
old  <	; PreCall 244 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter signedint errno 300>

1262:
old  <>
new  <	mov eax, [errno]>

1263:
old  < string_test$257:>
new  <	mov [rbp + 300], eax>

1264:
old  <	; Parameter signedint errno 300>
new  <>

1265:
old  <	mov eax, [errno]>
new  < string_test$257:>

1266:
old  <	mov [rbp + 300], eax>
new  <	; Call strerror 276 0>

1267:
old  <>
new  <	mov qword [rbp + 276], string_test$258>

1268:
old  < string_test$258:>
new  <	mov [rbp + 284], rbp>

1269:
old  <	; Call strerror 276 0>
new  <	add rbp, 276>

1270:
old  <	mov qword [rbp + 276], string_test$259>
new  <	jmp strerror>

1271:
old  <	mov [rbp + 284], rbp>
new  <>

1272:
old  <	add rbp, 276>
new  < string_test$258:>

1273:
old  <	jmp strerror>
new  <	; PostCall 276>

1276:
old  <	; PostCall 276>
new  <	; GetReturnValue Â£temporary3057>

1279:
old  <	; GetReturnValue Â£temporary3057>
new  <	; Parameter pointer Â£temporary3057 276>

1280:
old  <>
new  <	mov [rbp + 276], rbx>

1281:
old  < string_test$261:>
new  <>

1282:
old  <	; Parameter pointer Â£temporary3057 276>
new  < string_test$261:>

1283:
old  <	mov [rbp + 276], rbx>
new  <	; Call printf 244 8>

1284:
old  <>
new  <	mov qword [rbp + 244], string_test$262>

1285:
old  < string_test$262:>
new  <	mov [rbp + 252], rbp>

1286:
old  <	; Call printf 244 8>
new  <	add rbp, 244>

1287:
old  <	mov qword [rbp + 244], string_test$263>
new  <	mov rdi, rbp>

1288:
old  <	mov [rbp + 252], rbp>
new  <	add rdi, 8>

1289:
old  <	add rbp, 244>
new  <	jmp printf>

1290:
old  <	mov rdi, rbp>
new  <>

1291:
old  <	add rdi, 8>
new  < string_test$262:>

1292:
old  <	jmp printf>
new  <	; PostCall 244>

1295:
old  <	; PostCall 244>
new  <	; PreCall 244 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1298:
old  <	; PreCall 244 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter pointer s 268>

1299:
old  <>
new  <	mov rax, [rbp + 28]>

1300:
old  < string_test$265:>
new  <	mov [rbp + 268], rax>

1301:
old  <	; Parameter pointer s 268>
new  <>

1302:
old  <	mov rax, [rbp + 28]>
new  < string_test$265:>

1303:
old  <	mov [rbp + 268], rax>
new  <	; Parameter pointer "," 276>

1304:
old  <>
new  <	mov qword [rbp + 276], string_2C#>

1305:
old  < string_test$266:>
new  <>

1306:
old  <	; Parameter pointer "," 276>
new  < string_test$266:>

1307:
old  <	mov qword [rbp + 276], string_2C#>
new  <	; Call strtok 244 0>

1308:
old  <>
new  <	mov qword [rbp + 244], string_test$267>

1309:
old  < string_test$267:>
new  <	mov [rbp + 252], rbp>

1310:
old  <	; Call strtok 244 0>
new  <	add rbp, 244>

1311:
old  <	mov qword [rbp + 244], string_test$268>
new  <	jmp strtok>

1312:
old  <	mov [rbp + 252], rbp>
new  <>

1313:
old  <	add rbp, 244>
new  < string_test$267:>

1314:
old  <	jmp strtok>
new  <	; PostCall 244>

1317:
old  <	; PostCall 244>
new  <	; GetReturnValue Â£temporary3059>

1320:
old  <	; GetReturnValue Â£temporary3059>
new  <	; Assign p Â£temporary3059>

1321:
old  <>
new  <	mov [rbp + 236], rbx>

1322:
old  < string_test$270:>
new  <>

1323:
old  <	; Assign p Â£temporary3059>
new  < string_test$270:>

1324:
old  <	mov [rbp + 236], rbx>
new  <	; Equal 284 p 0>

1325:
old  <>
new  <	cmp qword [rbp + 236], 0>

1326:
old  < string_test$271:>
new  <	je string_test$284>

1327:
old  <	; Equal 285 p 0>
new  <>

1328:
old  <	cmp qword [rbp + 236], 0>
new  < string_test$271:>

1329:
old  <	je string_test$285>
new  <	; PreCall 244 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1332:
old  <	; PreCall 244 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter pointer "strtok(s, ",") = "%s"\n" 268>

1333:
old  <>
new  <	mov qword [rbp + 268], string_strtok28s2C20222C2229203D202225s220A#>

1334:
old  < string_test$273:>
new  <>

1335:
old  <	; Parameter pointer "strtok(s, ",") = "%s"\n" 268>
new  < string_test$273:>

1336:
old  <	mov qword [rbp + 268], string_strtok28s2C20222C2229203D202225s220A#>
new  <	; Parameter pointer p 276>

1337:
old  <>
new  <	mov rax, [rbp + 236]>

1338:
old  < string_test$274:>
new  <	mov [rbp + 276], rax>

1339:
old  <	; Parameter pointer p 276>
new  <>

1340:
old  <	mov rax, [rbp + 236]>
new  < string_test$274:>

1341:
old  <	mov [rbp + 276], rax>
new  <	; Call printf 244 8>

1342:
old  <>
new  <	mov qword [rbp + 244], string_test$275>

1343:
old  < string_test$275:>
new  <	mov [rbp + 252], rbp>

1344:
old  <	; Call printf 244 8>
new  <	add rbp, 244>

1345:
old  <	mov qword [rbp + 244], string_test$276>
new  <	mov rdi, rbp>

1346:
old  <	mov [rbp + 252], rbp>
new  <	add rdi, 8>

1347:
old  <	add rbp, 244>
new  <	jmp printf>

1348:
old  <	mov rdi, rbp>
new  <>

1349:
old  <	add rdi, 8>
new  < string_test$275:>

1350:
old  <	jmp printf>
new  <	; PostCall 244>

1353:
old  <	; PostCall 244>
new  <	; PreCall 244 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1356:
old  <	; PreCall 244 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter pointer 0 268>

1357:
old  <>
new  <	mov qword [rbp + 268], 0>

1358:
old  < string_test$278:>
new  <>

1359:
old  <	; Parameter pointer 0 268>
new  < string_test$278:>

1360:
old  <	mov qword [rbp + 268], 0>
new  <	; Parameter pointer "," 276>

1361:
old  <>
new  <	mov qword [rbp + 276], string_2C#>

1362:
old  < string_test$279:>
new  <>

1363:
old  <	; Parameter pointer "," 276>
new  < string_test$279:>

1364:
old  <	mov qword [rbp + 276], string_2C#>
new  <	; Call strtok 244 0>

1365:
old  <>
new  <	mov qword [rbp + 244], string_test$280>

1366:
old  < string_test$280:>
new  <	mov [rbp + 252], rbp>

1367:
old  <	; Call strtok 244 0>
new  <	add rbp, 244>

1368:
old  <	mov qword [rbp + 244], string_test$281>
new  <	jmp strtok>

1369:
old  <	mov [rbp + 252], rbp>
new  <>

1370:
old  <	add rbp, 244>
new  < string_test$280:>

1371:
old  <	jmp strtok>
new  <	; PostCall 244>

1374:
old  <	; PostCall 244>
new  <	; GetReturnValue Â£temporary3062>

1377:
old  <	; GetReturnValue Â£temporary3062>
new  <	; Assign p Â£temporary3062>

1378:
old  <>
new  <	mov [rbp + 236], rbx>

1379:
old  < string_test$283:>
new  <>

1380:
old  <	; Assign p Â£temporary3062>
new  < string_test$283:>

1381:
old  <	mov [rbp + 236], rbx>
new  <	; Goto 270>

1382:
old  <>
new  <	jmp string_test$270>

1383:
old  < string_test$284:>
new  <>

1384:
old  <	; Goto 271>
new  < string_test$284:>

1385:
old  <	jmp string_test$271>
new  <	; Return>

1386:
old  <>
new  <	mov rax, [rbp]>

1387:
old  < string_test$285:>
new  <	mov rdi, [rbp + 16]>

1388:
old  <	; Return>
new  <	mov rbp, [rbp + 8]>

1389:
old  <	mov rax, [rbp]>
new  <	jmp rax>

1390:
old  <	mov rdi, [rbp + 16]>
new  <>

1391:
old  <	mov rbp, [rbp + 8]>
new  < string_test$285:>

1392:
old  <	jmp rax>
new  <	; FunctionEnd string_test>

162:
old  <	; Empty>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

165:
old  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter pointer buffer 64>

166:
old  <>
new  <	mov qword [rbp + 64], buffer>

167:
old  < setjmp_test$2:>
new  <>

168:
old  <	; Parameter pointer buffer 64>
new  < setjmp_test$2:>

169:
old  <	mov qword [rbp + 64], buffer>
new  <	; Call setjmp 40 0>

170:
old  <>
new  <	mov qword [rbp + 40], setjmp_test$3>

171:
old  < setjmp_test$3:>
new  <	mov [rbp + 48], rbp>

172:
old  <	; Call setjmp 40 0>
new  <	add rbp, 40>

173:
old  <	mov qword [rbp + 40], setjmp_test$4>
new  <	jmp setjmp>

174:
old  <	mov [rbp + 48], rbp>
new  <>

175:
old  <	add rbp, 40>
new  < setjmp_test$3:>

176:
old  <	jmp setjmp>
new  <	; PostCall 40>

179:
old  <	; PostCall 40>
new  <	; GetReturnValue Â£temporary3070>

182:
old  <	; GetReturnValue Â£temporary3070>
new  <	; IntegralToIntegral Â£temporary3071 Â£temporary3070>

183:
old  <>
new  <	mov rax, 4294967295>

184:
old  < setjmp_test$6:>
new  <	and rbx, rax>

185:
old  <	; IntegralToIntegral Â£temporary3071 Â£temporary3070>
new  <>

186:
old  <	mov rax, 4294967295>
new  < setjmp_test$6:>

187:
old  <	and rbx, rax>
new  <	; Assign p Â£temporary3071>

188:
old  <>
new  <	mov [rbp + 32], rbx>

189:
old  < setjmp_test$7:>
new  <>

190:
old  <	; Assign p Â£temporary3071>
new  < setjmp_test$7:>

191:
old  <	mov [rbp + 32], rbx>
new  <	; NotEqual 22 p 0>

192:
old  <>
new  <	cmp qword [rbp + 32], 0>

193:
old  < setjmp_test$8:>
new  <	jne setjmp_test$22>

194:
old  <	; NotEqual 23 p 0>
new  <>

195:
old  <	cmp qword [rbp + 32], 0>
new  < setjmp_test$8:>

196:
old  <	jne setjmp_test$23>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

199:
old  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter pointer "1.0 / %f = %f\n" 64>

200:
old  <>
new  <	mov qword [rbp + 64], string_12E0202F2025f203D2025f0A#>

201:
old  < setjmp_test$10:>
new  <>

202:
old  <	; Parameter pointer "1.0 / %f = %f\n" 64>
new  < setjmp_test$10:>

203:
old  <	mov qword [rbp + 64], string_12E0202F2025f203D2025f0A#>
new  <	; PushFloat x>

204:
old  <>
new  <	fld qword [rbp + 24]>

205:
old  < setjmp_test$11:>
new  <>

206:
old  <	; PushFloat x>
new  < setjmp_test$11:>

207:
old  <	fld qword [rbp + 24]>
new  <	; Parameter double x 72>

208:
old  <>
new  <	fstp qword [rbp + 72]>

209:
old  < setjmp_test$12:>
new  <>

210:
old  <	; Parameter double x 72>
new  < setjmp_test$12:>

211:
old  <	fstp qword [rbp + 72]>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

214:
old  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; PushFloat x>

215:
old  <>
new  <	fld qword [rbp + 24]>

216:
old  < setjmp_test$14:>
new  <>

217:
old  <	; PushFloat x>
new  < setjmp_test$14:>

218:
old  <	fld qword [rbp + 24]>
new  <	; Parameter double x 104>

219:
old  <>
new  <	fstp qword [rbp + 104]>

220:
old  < setjmp_test$15:>
new  <>

221:
old  <	; Parameter double x 104>
new  < setjmp_test$15:>

222:
old  <	fstp qword [rbp + 104]>
new  <	; Call invers 80 0>

223:
old  <>
new  <	mov qword [rbp + 80], setjmp_test$16>

224:
old  < setjmp_test$16:>
new  <	mov [rbp + 88], rbp>

225:
old  <	; Call invers 80 0>
new  <	add rbp, 80>

226:
old  <	mov qword [rbp + 80], setjmp_test$17>
new  <	jmp invers>

227:
old  <	mov [rbp + 88], rbp>
new  <>

228:
old  <	add rbp, 80>
new  < setjmp_test$16:>

229:
old  <	jmp invers>
new  <	; PostCall 80>

232:
old  <	; PostCall 80>
new  <	; GetReturnValue Â£temporary3073>

235:
old  <	; GetReturnValue Â£temporary3073>
new  <	; Parameter double Â£temporary3073 80>

236:
old  <>
new  <	fstp qword [rbp + 80]>

237:
old  < setjmp_test$19:>
new  <>

238:
old  <	; Parameter double Â£temporary3073 80>
new  < setjmp_test$19:>

239:
old  <	fstp qword [rbp + 80]>
new  <	; Call printf 40 16>

240:
old  <>
new  <	mov qword [rbp + 40], setjmp_test$20>

241:
old  < setjmp_test$20:>
new  <	mov [rbp + 48], rbp>

242:
old  <	; Call printf 40 16>
new  <	add rbp, 40>

243:
old  <	mov qword [rbp + 40], setjmp_test$21>
new  <	mov rdi, rbp>

244:
old  <	mov [rbp + 48], rbp>
new  <	add rdi, 16>

245:
old  <	add rbp, 40>
new  <	jmp printf>

246:
old  <	mov rdi, rbp>
new  <>

247:
old  <	add rdi, 16>
new  < setjmp_test$20:>

248:
old  <	jmp printf>
new  <	; PostCall 40>

251:
old  <	; PostCall 40>
new  <	; Goto 28>

252:
old  <>
new  <	jmp setjmp_test$28>

253:
old  < setjmp_test$22:>
new  <>

254:
old  <	; Goto 29>
new  < setjmp_test$22:>

255:
old  <	jmp setjmp_test$29>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

258:
old  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter pointer "p = <%s> <%u>\n" 64>

259:
old  <>
new  <	mov qword [rbp + 64], string_p203D203C25s3E203C25u3E0A#>

260:
old  < setjmp_test$24:>
new  <>

261:
old  <	; Parameter pointer "p = <%s> <%u>\n" 64>
new  < setjmp_test$24:>

262:
old  <	mov qword [rbp + 64], string_p203D203C25s3E203C25u3E0A#>
new  <	; Parameter pointer p 72>

263:
old  <>
new  <	mov rax, [rbp + 32]>

264:
old  < setjmp_test$25:>
new  <	mov [rbp + 72], rax>

265:
old  <	; Parameter pointer p 72>
new  <>

266:
old  <	mov rax, [rbp + 32]>
new  < setjmp_test$25:>

267:
old  <	mov [rbp + 72], rax>
new  <	; Parameter pointer p 80>

268:
old  <>
new  <	mov rax, [rbp + 32]>

269:
old  < setjmp_test$26:>
new  <	mov [rbp + 80], rax>

270:
old  <	; Parameter pointer p 80>
new  <>

271:
old  <	mov rax, [rbp + 32]>
new  < setjmp_test$26:>

272:
old  <	mov [rbp + 80], rax>
new  <	; Call printf 40 16>

273:
old  <>
new  <	mov qword [rbp + 40], setjmp_test$27>

274:
old  < setjmp_test$27:>
new  <	mov [rbp + 48], rbp>

275:
old  <	; Call printf 40 16>
new  <	add rbp, 40>

276:
old  <	mov qword [rbp + 40], setjmp_test$28>
new  <	mov rdi, rbp>

277:
old  <	mov [rbp + 48], rbp>
new  <	add rdi, 16>

278:
old  <	add rbp, 40>
new  <	jmp printf>

279:
old  <	mov rdi, rbp>
new  <>

280:
old  <	add rdi, 16>
new  < setjmp_test$27:>

281:
old  <	jmp printf>
new  <	; PostCall 40>

284:
old  <	; PostCall 40>
new  <	; Return>

285:
old  <>
new  <	mov rax, [rbp]>

286:
old  < setjmp_test$29:>
new  <	mov rdi, [rbp + 16]>

287:
old  <	; Return>
new  <	mov rbp, [rbp + 8]>

288:
old  <	mov rax, [rbp]>
new  <	jmp rax>

289:
old  <	mov rdi, [rbp + 16]>
new  <>

290:
old  <	mov rbp, [rbp + 8]>
new  < setjmp_test$29:>

291:
old  <	jmp rax>
new  <	; FunctionEnd setjmp_test>

10:
old  <	extern strerror>
new  <	extern printf>

11:
old  <	extern printf>
new  <	extern atan>

12:
old  <	extern perror>
new  <	extern sin>

13:
old  <	extern atan>
new  <	extern cos>

14:
old  <	extern sin>
new  <	extern tan>

15:
old  <	extern cos>
new  <	extern asin>

16:
old  <	extern tan>
new  <	extern exp>

17:
old  <	extern asin>
new  <	extern log>

18:
old  <	extern exp>
new  <	extern log10>

19:
old  <	extern log>
new  <	extern sinh>

20:
old  <	extern log10>
new  <	extern cosh>

21:
old  <	extern sinh>
new  <	extern tanh>

22:
old  <	extern cosh>
new  <	extern sqrt>

23:
old  <	extern tanh>
new  <	extern floor>

24:
old  <	extern sqrt>
new  <	extern ceil>

25:
old  <	extern floor>
new  <	extern fabs>

26:
old  <	extern ceil>
new  <	extern frexp>

27:
old  <	extern fabs>
new  <	extern perror>

28:
old  <	extern frexp>
new  <	extern modf>

29:
old  <	extern modf>
new  <	extern fmod>

30:
old  <	extern fmod>
new  <	extern atan2>

31:
old  <	extern atan2>
new  <	extern pow>

32:
old  <	extern pow>
new  <	extern ldexp>

33:
old  <	extern ldexp>
new  <	extern $StackTop>

34:
old  <	extern $StackTop>
new  <>

36:
old  <>
new  <section .data>

37:
old  <section .data>
new  <>

38:
old  <>
new  <float8$minus6.2831853071795864769252866#:>

39:
old  <float8$minus6.2831853071795864769252866#:>
new  <	; Initializer Double -6.2831853071795864769252866>

40:
old  <	; Initializer Double -6.2831853071795864769252866>
new  <	dq -6.2831853071795864769252866>

41:
old  <	dq -6.2831853071795864769252866>
new  <>

42:
old  <>
new  <section .data>

43:
old  <section .data>
new  <>

44:
old  <>
new  <float8$minus3.1415926535897932384626433#:>

45:
old  <float8$minus3.1415926535897932384626433#:>
new  <	; Initializer Double -3.1415926535897932384626433>

46:
old  <	; Initializer Double -3.1415926535897932384626433>
new  <	dq -3.1415926535897932384626433>

47:
old  <	dq -3.1415926535897932384626433>
new  <>

48:
old  <>
new  <section .data>

49:
old  <section .data>
new  <>

50:
old  <>
new  <float8$minus1.57079632679489661923132165#:>

51:
old  <float8$minus1.57079632679489661923132165#:>
new  <	; Initializer Double -1.57079632679489661923132165>

52:
old  <	; Initializer Double -1.57079632679489661923132165>
new  <	dq -1.57079632679489661923132165>

53:
old  <	dq -1.57079632679489661923132165>
new  <>

54:
old  <>
new  <section .data>

55:
old  <section .data>
new  <>

56:
old  <>
new  <float8$minus1#:>

57:
old  <float8$minus1#:>
new  <	; Initializer Double -1>

58:
old  <	; Initializer Double -1>
new  <	dq -1.0>

59:
old  <	dq -1.0>
new  <>

60:
old  <>
new  <section .data>

61:
old  <section .data>
new  <>

62:
old  <>
new  <float8$1.57079632679489661923132165#:>

63:
old  <float8$1.57079632679489661923132165#:>
new  <	; Initializer Double 1.57079632679489661923132165>

64:
old  <	; Initializer Double 1.57079632679489661923132165>
new  <	dq 1.57079632679489661923132165>

65:
old  <	dq 1.57079632679489661923132165>
new  <>

66:
old  <>
new  <section .data>

67:
old  <section .data>
new  <>

68:
old  <>
new  <float8$3.1415926535897932384626433#:>

69:
old  <float8$3.1415926535897932384626433#:>
new  <	; Initializer Double 3.1415926535897932384626433>

70:
old  <	; Initializer Double 3.1415926535897932384626433>
new  <	dq 3.1415926535897932384626433>

71:
old  <	dq 3.1415926535897932384626433>
new  <>

72:
old  <>
new  <section .data>

73:
old  <section .data>
new  <>

74:
old  <>
new  <float8$6.2831853071795864769252866#:>

75:
old  <float8$6.2831853071795864769252866#:>
new  <	; Initializer Double 6.2831853071795864769252866>

76:
old  <	; Initializer Double 6.2831853071795864769252866>
new  <	dq 6.2831853071795864769252866>

77:
old  <	dq 6.2831853071795864769252866>
new  <>

78:
old  <>
new  <section .text>

79:
old  <section .text>
new  <>

80:
old  <>
new  < math_test_1x:>

81:
old  < math_test_1x:>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

82:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

83:
old  <>
new  < math_test_1x$1:>

84:
old  < math_test_1x$1:>
new  <	; PushFloat -6.2831853071795864769252866>

85:
old  <	; PushFloat -6.2831853071795864769252866>
new  <	fld qword [float8$minus6.2831853071795864769252866#]>

86:
old  <	fld qword [float8$minus6.2831853071795864769252866#]>
new  <>

87:
old  <>
new  < math_test_1x$2:>

88:
old  < math_test_1x$2:>
new  <	; Parameter double -6.2831853071795864769252866 48>

89:
old  <	; Parameter double -6.2831853071795864769252866 48>
new  <	fstp qword [rbp + 48]>

90:
old  <	fstp qword [rbp + 48]>
new  <>

91:
old  <>
new  < math_test_1x$3:>

92:
old  < math_test_1x$3:>
new  <	; Call math_test_1 24 0>

93:
old  <	; Call math_test_1 24 0>
new  <	mov qword [rbp + 24], math_test_1x$4>

94:
old  <	mov qword [rbp + 24], math_test_1x$4>
new  <	mov [rbp + 32], rbp>

95:
old  <	mov [rbp + 32], rbp>
new  <	add rbp, 24>

96:
old  <	add rbp, 24>
new  <	jmp math_test_1>

97:
old  <	jmp math_test_1>
new  <>

98:
old  <>
new  < math_test_1x$4:>

99:
old  < math_test_1x$4:>
new  <	; PostCall 24>

100:
old  <	; PostCall 24>
new  <>

101:
old  <>
new  < math_test_1x$5:>

102:
old  < math_test_1x$5:>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

103:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

104:
old  <>
new  < math_test_1x$6:>

105:
old  < math_test_1x$6:>
new  <	; PushFloat -3.1415926535897932384626433>

106:
old  <	; PushFloat -3.1415926535897932384626433>
new  <	fld qword [float8$minus3.1415926535897932384626433#]>

107:
old  <	fld qword [float8$minus3.1415926535897932384626433#]>
new  <>

108:
old  <>
new  < math_test_1x$7:>

109:
old  < math_test_1x$7:>
new  <	; Parameter double -3.1415926535897932384626433 48>

110:
old  <	; Parameter double -3.1415926535897932384626433 48>
new  <	fstp qword [rbp + 48]>

111:
old  <	fstp qword [rbp + 48]>
new  <>

112:
old  <>
new  < math_test_1x$8:>

113:
old  < math_test_1x$8:>
new  <	; Call math_test_1 24 0>

114:
old  <	; Call math_test_1 24 0>
new  <	mov qword [rbp + 24], math_test_1x$9>

115:
old  <	mov qword [rbp + 24], math_test_1x$9>
new  <	mov [rbp + 32], rbp>

116:
old  <	mov [rbp + 32], rbp>
new  <	add rbp, 24>

117:
old  <	add rbp, 24>
new  <	jmp math_test_1>

118:
old  <	jmp math_test_1>
new  <>

119:
old  <>
new  < math_test_1x$9:>

120:
old  < math_test_1x$9:>
new  <	; PostCall 24>

121:
old  <	; PostCall 24>
new  <>

122:
old  <>
new  < math_test_1x$10:>

123:
old  < math_test_1x$10:>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

124:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

125:
old  <>
new  < math_test_1x$11:>

126:
old  < math_test_1x$11:>
new  <	; PushFloat -1.57079632679489661923132165>

127:
old  <	; PushFloat -1.57079632679489661923132165>
new  <	fld qword [float8$minus1.57079632679489661923132165#]>

128:
old  <	fld qword [float8$minus1.57079632679489661923132165#]>
new  <>

129:
old  <>
new  < math_test_1x$12:>

130:
old  < math_test_1x$12:>
new  <	; Parameter double -1.57079632679489661923132165 48>

131:
old  <	; Parameter double -1.57079632679489661923132165 48>
new  <	fstp qword [rbp + 48]>

132:
old  <	fstp qword [rbp + 48]>
new  <>

133:
old  <>
new  < math_test_1x$13:>

134:
old  < math_test_1x$13:>
new  <	; Call math_test_1 24 0>

135:
old  <	; Call math_test_1 24 0>
new  <	mov qword [rbp + 24], math_test_1x$14>

136:
old  <	mov qword [rbp + 24], math_test_1x$14>
new  <	mov [rbp + 32], rbp>

137:
old  <	mov [rbp + 32], rbp>
new  <	add rbp, 24>

138:
old  <	add rbp, 24>
new  <	jmp math_test_1>

139:
old  <	jmp math_test_1>
new  <>

140:
old  <>
new  < math_test_1x$14:>

141:
old  < math_test_1x$14:>
new  <	; PostCall 24>

142:
old  <	; PostCall 24>
new  <>

143:
old  <>
new  < math_test_1x$15:>

144:
old  < math_test_1x$15:>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

145:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

146:
old  <>
new  < math_test_1x$16:>

147:
old  < math_test_1x$16:>
new  <	; PushFloat -1>

148:
old  <	; PushFloat -1>
new  <	fld qword [float8$minus1#]>

149:
old  <	fld qword [float8$minus1#]>
new  <>

150:
old  <>
new  < math_test_1x$17:>

151:
old  < math_test_1x$17:>
new  <	; Parameter double -1 48>

152:
old  <	; Parameter double -1 48>
new  <	fstp qword [rbp + 48]>

153:
old  <	fstp qword [rbp + 48]>
new  <>

154:
old  <>
new  < math_test_1x$18:>

155:
old  < math_test_1x$18:>
new  <	; Call math_test_1 24 0>

156:
old  <	; Call math_test_1 24 0>
new  <	mov qword [rbp + 24], math_test_1x$19>

157:
old  <	mov qword [rbp + 24], math_test_1x$19>
new  <	mov [rbp + 32], rbp>

158:
old  <	mov [rbp + 32], rbp>
new  <	add rbp, 24>

159:
old  <	add rbp, 24>
new  <	jmp math_test_1>

160:
old  <	jmp math_test_1>
new  <>

161:
old  <>
new  < math_test_1x$19:>

162:
old  < math_test_1x$19:>
new  <	; PostCall 24>

163:
old  <	; PostCall 24>
new  <>

164:
old  <>
new  < math_test_1x$20:>

165:
old  < math_test_1x$20:>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

166:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

167:
old  <>
new  < math_test_1x$21:>

168:
old  < math_test_1x$21:>
new  <	; PushFloat 0>

169:
old  <	; PushFloat 0>
new  <	fldz>

170:
old  <	fldz>
new  <>

171:
old  <>
new  < math_test_1x$22:>

172:
old  < math_test_1x$22:>
new  <	; Parameter double 0 48>

173:
old  <	; Parameter double 0 48>
new  <	fstp qword [rbp + 48]>

174:
old  <	fstp qword [rbp + 48]>
new  <>

175:
old  <>
new  < math_test_1x$23:>

176:
old  < math_test_1x$23:>
new  <	; Call math_test_1 24 0>

177:
old  <	; Call math_test_1 24 0>
new  <	mov qword [rbp + 24], math_test_1x$24>

178:
old  <	mov qword [rbp + 24], math_test_1x$24>
new  <	mov [rbp + 32], rbp>

179:
old  <	mov [rbp + 32], rbp>
new  <	add rbp, 24>

180:
old  <	add rbp, 24>
new  <	jmp math_test_1>

181:
old  <	jmp math_test_1>
new  <>

182:
old  <>
new  < math_test_1x$24:>

183:
old  < math_test_1x$24:>
new  <	; PostCall 24>

184:
old  <	; PostCall 24>
new  <>

185:
old  <>
new  < math_test_1x$25:>

186:
old  < math_test_1x$25:>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

187:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

188:
old  <>
new  < math_test_1x$26:>

189:
old  < math_test_1x$26:>
new  <	; PushFloat 1>

190:
old  <	; PushFloat 1>
new  <	fld1>

191:
old  <	fld1>
new  <>

192:
old  <>
new  < math_test_1x$27:>

193:
old  < math_test_1x$27:>
new  <	; Parameter double 1 48>

194:
old  <	; Parameter double 1 48>
new  <	fstp qword [rbp + 48]>

195:
old  <	fstp qword [rbp + 48]>
new  <>

196:
old  <>
new  < math_test_1x$28:>

197:
old  < math_test_1x$28:>
new  <	; Call math_test_1 24 0>

198:
old  <	; Call math_test_1 24 0>
new  <	mov qword [rbp + 24], math_test_1x$29>

199:
old  <	mov qword [rbp + 24], math_test_1x$29>
new  <	mov [rbp + 32], rbp>

200:
old  <	mov [rbp + 32], rbp>
new  <	add rbp, 24>

201:
old  <	add rbp, 24>
new  <	jmp math_test_1>

202:
old  <	jmp math_test_1>
new  <>

203:
old  <>
new  < math_test_1x$29:>

204:
old  < math_test_1x$29:>
new  <	; PostCall 24>

205:
old  <	; PostCall 24>
new  <>

206:
old  <>
new  < math_test_1x$30:>

207:
old  < math_test_1x$30:>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

208:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

209:
old  <>
new  < math_test_1x$31:>

210:
old  < math_test_1x$31:>
new  <	; PushFloat 1.57079632679489661923132165>

211:
old  <	; PushFloat 1.57079632679489661923132165>
new  <	fld qword [float8$1.57079632679489661923132165#]>

212:
old  <	fld qword [float8$1.57079632679489661923132165#]>
new  <>

213:
old  <>
new  < math_test_1x$32:>

214:
old  < math_test_1x$32:>
new  <	; Parameter double 1.57079632679489661923132165 48>

215:
old  <	; Parameter double 1.57079632679489661923132165 48>
new  <	fstp qword [rbp + 48]>

216:
old  <	fstp qword [rbp + 48]>
new  <>

217:
old  <>
new  < math_test_1x$33:>

218:
old  < math_test_1x$33:>
new  <	; Call math_test_1 24 0>

219:
old  <	; Call math_test_1 24 0>
new  <	mov qword [rbp + 24], math_test_1x$34>

220:
old  <	mov qword [rbp + 24], math_test_1x$34>
new  <	mov [rbp + 32], rbp>

221:
old  <	mov [rbp + 32], rbp>
new  <	add rbp, 24>

222:
old  <	add rbp, 24>
new  <	jmp math_test_1>

223:
old  <	jmp math_test_1>
new  <>

224:
old  <>
new  < math_test_1x$34:>

225:
old  < math_test_1x$34:>
new  <	; PostCall 24>

226:
old  <	; PostCall 24>
new  <>

227:
old  <>
new  < math_test_1x$35:>

228:
old  < math_test_1x$35:>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

229:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

230:
old  <>
new  < math_test_1x$36:>

231:
old  < math_test_1x$36:>
new  <	; PushFloat 3.1415926535897932384626433>

232:
old  <	; PushFloat 3.1415926535897932384626433>
new  <	fld qword [float8$3.1415926535897932384626433#]>

233:
old  <	fld qword [float8$3.1415926535897932384626433#]>
new  <>

234:
old  <>
new  < math_test_1x$37:>

235:
old  < math_test_1x$37:>
new  <	; Parameter double 3.1415926535897932384626433 48>

236:
old  <	; Parameter double 3.1415926535897932384626433 48>
new  <	fstp qword [rbp + 48]>

237:
old  <	fstp qword [rbp + 48]>
new  <>

238:
old  <>
new  < math_test_1x$38:>

239:
old  < math_test_1x$38:>
new  <	; Call math_test_1 24 0>

240:
old  <	; Call math_test_1 24 0>
new  <	mov qword [rbp + 24], math_test_1x$39>

241:
old  <	mov qword [rbp + 24], math_test_1x$39>
new  <	mov [rbp + 32], rbp>

242:
old  <	mov [rbp + 32], rbp>
new  <	add rbp, 24>

243:
old  <	add rbp, 24>
new  <	jmp math_test_1>

244:
old  <	jmp math_test_1>
new  <>

245:
old  <>
new  < math_test_1x$39:>

246:
old  < math_test_1x$39:>
new  <	; PostCall 24>

247:
old  <	; PostCall 24>
new  <>

248:
old  <>
new  < math_test_1x$40:>

249:
old  < math_test_1x$40:>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

250:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

251:
old  <>
new  < math_test_1x$41:>

252:
old  < math_test_1x$41:>
new  <	; PushFloat 6.2831853071795864769252866>

253:
old  <	; PushFloat 6.2831853071795864769252866>
new  <	fld qword [float8$6.2831853071795864769252866#]>

254:
old  <	fld qword [float8$6.2831853071795864769252866#]>
new  <>

255:
old  <>
new  < math_test_1x$42:>

256:
old  < math_test_1x$42:>
new  <	; Parameter double 6.2831853071795864769252866 48>

257:
old  <	; Parameter double 6.2831853071795864769252866 48>
new  <	fstp qword [rbp + 48]>

258:
old  <	fstp qword [rbp + 48]>
new  <>

259:
old  <>
new  < math_test_1x$43:>

260:
old  < math_test_1x$43:>
new  <	; Call math_test_1 24 0>

261:
old  <	; Call math_test_1 24 0>
new  <	mov qword [rbp + 24], math_test_1x$44>

262:
old  <	mov qword [rbp + 24], math_test_1x$44>
new  <	mov [rbp + 32], rbp>

263:
old  <	mov [rbp + 32], rbp>
new  <	add rbp, 24>

264:
old  <	add rbp, 24>
new  <	jmp math_test_1>

265:
old  <	jmp math_test_1>
new  <>

266:
old  <>
new  < math_test_1x$44:>

267:
old  < math_test_1x$44:>
new  <	; PostCall 24>

268:
old  <	; PostCall 24>
new  <>

269:
old  <>
new  < math_test_1x$45:>

270:
old  < math_test_1x$45:>
new  <	; Return>

271:
old  <	; Return>
new  <	mov rax, [rbp]>

272:
old  <	mov rax, [rbp]>
new  <	mov rdi, [rbp + 16]>

273:
old  <	mov rdi, [rbp + 16]>
new  <	mov rbp, [rbp + 8]>

274:
old  <	mov rbp, [rbp + 8]>
new  <	jmp rax>

275:
old  <	jmp rax>
new  <>

276:
old  <>
new  < math_test_1x$46:>

277:
old  < math_test_1x$46:>
new  <	; FunctionEnd math_test_1x>

278:
old  <	; FunctionEnd math_test_1x>
new  <>

279:
old  <>
new  <section .data>

280:
old  <section .data>
new  <>

281:
old  <>
new  <string_2020acos2825f29203D2025f2C20errno203D2025i0A#:>

282:
old  <string_2020acos2825f29203D2025f2C20errno203D2025i203C25s3E2C20#:>
new  <	; Initializer String   acos(%f) = %f, errno = %i\n>

283:
old  <	; Initializer String   acos(%f) = %f, errno = %i <%s>, >
new  <	db "  acos(%f) = %f, errno = %i", 10, 0>

284:
old  <	db "  acos(%f) = %f, errno = %i <%s>, ", 0>
new  <>

285:
old  <>
new  <section .text>

286:
old  <section .data>
new  <>

287:
old  <>
new  < acos_test:>

288:
old  <string_Error20message#:>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

289:
old  <	; Initializer String Error message>
new  <>

290:
old  <	db "Error message", 0>
new  < acos_test$1:>

291:
old  <>
new  <	; Parameter pointer "  acos(%f) = %f, errno = %i\n" 56>

292:
old  <section .text>
new  <	mov qword [rbp + 56], string_2020acos2825f29203D2025f2C20errno203D2025i0A#>

294:
old  < acos_test:>
new  < acos_test$2:>

295:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; PushFloat x>

296:
old  <>
new  <	fld qword [rbp + 24]>

297:
old  < acos_test$1:>
new  <>

298:
old  <	; Parameter pointer "  acos(%f) = %f, errno = %i <%s>, " 56>
new  < acos_test$3:>

299:
old  <	mov qword [rbp + 56], string_2020acos2825f29203D2025f2C20errno203D2025i203C25s3E2C20#>
new  <	; Parameter double x 64>

300:
old  <>
new  <	fstp qword [rbp + 64]>

301:
old  < acos_test$2:>
new  <>

302:
old  <	; PushFloat x>
new  < acos_test$4:>

303:
old  <	fld qword [rbp + 24]>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

305:
old  < acos_test$3:>
new  < acos_test$5:>

306:
old  <	; Parameter double x 64>
new  <	; PushFloat x>

307:
old  <	fstp qword [rbp + 64]>
new  <	fld qword [rbp + 24]>

309:
old  < acos_test$4:>
new  < acos_test$6:>

310:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter double x 96>

311:
old  <>
new  <	fstp qword [rbp + 96]>

312:
old  < acos_test$5:>
new  <>

313:
old  <	; PushFloat x>
new  < acos_test$7:>

314:
old  <	fld qword [rbp + 24]>
new  <	; Call acos 72 0>

315:
old  <>
new  <	mov qword [rbp + 72], acos_test$8>

316:
old  < acos_test$6:>
new  <	mov [rbp + 80], rbp>

317:
old  <	; Parameter double x 96>
new  <	add rbp, 72>

318:
old  <	fstp qword [rbp + 96]>
new  <	jmp acos>

320:
old  < acos_test$7:>
new  < acos_test$8:>

321:
old  <	; Call acos 72 0>
new  <	; PostCall 72>

322:
old  <	mov qword [rbp + 72], acos_test$8>
new  <>

323:
old  <	mov [rbp + 80], rbp>
new  < acos_test$9:>

324:
old  <	add rbp, 72>
new  <	; GetReturnValue Â£temporary3097>

325:
old  <	jmp acos>
new  <>

326:
old  <>
new  < acos_test$10:>

327:
old  < acos_test$8:>
new  <	; Parameter double Â£temporary3097 72>

328:
old  <	; PostCall 72>
new  <	fstp qword [rbp + 72]>

330:
old  < acos_test$9:>
new  < acos_test$11:>

331:
old  <	; GetReturnValue Â£temporary3097>
new  <	; Parameter signedint errno 80>

332:
old  <>
new  <	mov eax, [errno]>

333:
old  < acos_test$10:>
new  <	mov [rbp + 80], eax>

334:
old  <	; Parameter double Â£temporary3097 72>
new  <>

335:
old  <	fstp qword [rbp + 72]>
new  < acos_test$12:>

336:
old  <>
new  <	; Call printf 32 20>

337:
old  < acos_test$11:>
new  <	mov qword [rbp + 32], acos_test$13>

338:
old  <	; Parameter signedint errno 80>
new  <	mov [rbp + 40], rbp>

339:
old  <	mov eax, [errno]>
new  <	add rbp, 32>

340:
old  <	mov [rbp + 80], eax>
new  <	mov rdi, rbp>

341:
old  <>
new  <	add rdi, 20>

342:
old  < acos_test$12:>
new  <	jmp printf>

343:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

344:
old  <>
new  < acos_test$13:>

345:
old  < acos_test$13:>
new  <	; PostCall 32>

346:
old  <	; Parameter signedint errno 108>
new  <>

347:
old  <	mov eax, [errno]>
new  < acos_test$14:>

348:
old  <	mov [rbp + 108], eax>
new  <	; Assign errno 0>

349:
old  <>
new  <	mov dword [errno], 0>

350:
old  < acos_test$14:>
new  <>

351:
old  <	; Call strerror 84 0>
new  < acos_test$15:>

352:
old  <	mov qword [rbp + 84], acos_test$15>
new  <	; Return>

353:
old  <	mov [rbp + 92], rbp>
new  <	mov rax, [rbp]>

354:
old  <	add rbp, 84>
new  <	mov rdi, [rbp + 16]>

355:
old  <	jmp strerror>
new  <	mov rbp, [rbp + 8]>

356:
old  <>
new  <	jmp rax>

357:
old  < acos_test$15:>
new  <>

358:
old  <	; PostCall 84>
new  < acos_test$16:>

359:
old  <>
new  <	; FunctionEnd acos_test>

360:
old  < acos_test$16:>
new  <>

361:
old  <	; GetReturnValue Â£temporary3098>
new  <section .data>

363:
old  < acos_test$17:>
new  <string_2020atan2825f29203D2025f2C20errno203D2025i0A#:>

364:
old  <	; Parameter pointer Â£temporary3098 84>
new  <	; Initializer String   atan(%f) = %f, errno = %i\n>

365:
old  <	mov [rbp + 84], rbx>
new  <	db "  atan(%f) = %f, errno = %i", 10, 0>

367:
old  < acos_test$18:>
new  <section .text>

368:
old  <	; Call printf 32 28>
new  <>

369:
old  <	mov qword [rbp + 32], acos_test$19>
new  < atan_test:>

370:
old  <	mov [rbp + 40], rbp>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

371:
old  <	add rbp, 32>
new  <>

372:
old  <	mov rdi, rbp>
new  < atan_test$1:>

373:
old  <	add rdi, 28>
new  <	; Parameter pointer "  atan(%f) = %f, errno = %i\n" 56>

374:
old  <	jmp printf>
new  <	mov qword [rbp + 56], string_2020atan2825f29203D2025f2C20errno203D2025i0A#>

376:
old  < acos_test$19:>
new  < atan_test$2:>

377:
old  <	; PostCall 32>
new  <	; PushFloat x>

378:
old  <>
new  <	fld qword [rbp + 24]>

379:
old  < acos_test$20:>
new  <>

380:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < atan_test$3:>

381:
old  <>
new  <	; Parameter double x 64>

382:
old  < acos_test$21:>
new  <	fstp qword [rbp + 64]>

383:
old  <	; Parameter pointer "Error message" 56>
new  <>

384:
old  <	mov qword [rbp + 56], string_Error20message#>
new  < atan_test$4:>

385:
old  <>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

386:
old  < acos_test$22:>
new  <>

387:
old  <	; Call perror 32 0>
new  < atan_test$5:>

388:
old  <	mov qword [rbp + 32], acos_test$23>
new  <	; PushFloat x>

389:
old  <	mov [rbp + 40], rbp>
new  <	fld qword [rbp + 24]>

390:
old  <	add rbp, 32>
new  <>

391:
old  <	jmp perror>
new  < atan_test$6:>

392:
old  <>
new  <	; Parameter double x 96>

393:
old  < acos_test$23:>
new  <	fstp qword [rbp + 96]>

394:
old  <	; PostCall 32>
new  <>

395:
old  <>
new  < atan_test$7:>

396:
old  < acos_test$24:>
new  <	; Call atan 72 0>

397:
old  <	; Assign errno 0>
new  <	mov qword [rbp + 72], atan_test$8>

398:
old  <	mov dword [errno], 0>
new  <	mov [rbp + 80], rbp>

399:
old  <>
new  <	add rbp, 72>

400:
old  < acos_test$25:>
new  <	jmp atan>

401:
old  <	; Return>
new  <>

402:
old  <	mov rax, [rbp]>
new  < atan_test$8:>

403:
old  <	mov rdi, [rbp + 16]>
new  <	; PostCall 72>

404:
old  <	mov rbp, [rbp + 8]>
new  <>

405:
old  <	jmp rax>
new  < atan_test$9:>

406:
old  <>
new  <	; GetReturnValue Â£temporary3102>

407:
old  < acos_test$26:>
new  <>

408:
old  <	; FunctionEnd acos_test>
new  < atan_test$10:>

409:
old  <>
new  <	; Parameter double Â£temporary3102 72>

410:
old  <section .data>
new  <	fstp qword [rbp + 72]>

412:
old  <string_2020atan2825f29203D2025f2C20errno203D2025i203C25s3E2C20#:>
new  < atan_test$11:>

413:
old  <	; Initializer String   atan(%f) = %f, errno = %i <%s>, >
new  <	; Parameter signedint errno 80>

414:
old  <	db "  atan(%f) = %f, errno = %i <%s>, ", 0>
new  <	mov eax, [errno]>

415:
old  <>
new  <	mov [rbp + 80], eax>

416:
old  <section .text>
new  <>

417:
old  <>
new  < atan_test$12:>

418:
old  < atan_test:>
new  <	; Call printf 32 20>

419:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov qword [rbp + 32], atan_test$13>

420:
old  <>
new  <	mov [rbp + 40], rbp>

421:
old  < atan_test$1:>
new  <	add rbp, 32>

422:
old  <	; Parameter pointer "  atan(%f) = %f, errno = %i <%s>, " 56>
new  <	mov rdi, rbp>

423:
old  <	mov qword [rbp + 56], string_2020atan2825f29203D2025f2C20errno203D2025i203C25s3E2C20#>
new  <	add rdi, 20>

424:
old  <>
new  <	jmp printf>

425:
old  < atan_test$2:>
new  <>

426:
old  <	; PushFloat x>
new  < atan_test$13:>

427:
old  <	fld qword [rbp + 24]>
new  <	; PostCall 32>

429:
old  < atan_test$3:>
new  < atan_test$14:>

430:
old  <	; Parameter double x 64>
new  <	; Assign errno 0>

431:
old  <	fstp qword [rbp + 64]>
new  <	mov dword [errno], 0>

433:
old  < atan_test$4:>
new  < atan_test$15:>

434:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Return>

435:
old  <>
new  <	mov rax, [rbp]>

436:
old  < atan_test$5:>
new  <	mov rdi, [rbp + 16]>

437:
old  <	; PushFloat x>
new  <	mov rbp, [rbp + 8]>

438:
old  <	fld qword [rbp + 24]>
new  <	jmp rax>

440:
old  < atan_test$6:>
new  < atan_test$16:>

441:
old  <	; Parameter double x 96>
new  <	; FunctionEnd atan_test>

442:
old  <	fstp qword [rbp + 96]>
new  <>

443:
old  <>
new  <section .data>

444:
old  < atan_test$7:>
new  <>

445:
old  <	; Call atan 72 0>
new  <float8$0.333333333#:>

446:
old  <	mov qword [rbp + 72], atan_test$8>
new  <	; Initializer Double 0.333333333>

447:
old  <	mov [rbp + 80], rbp>
new  <	dq 0.333333333>

448:
old  <	add rbp, 72>
new  <>

449:
old  <	jmp atan>
new  <section .data>

451:
old  < atan_test$8:>
new  <float8$0.75#:>

452:
old  <	; PostCall 72>
new  <	; Initializer Double 0.75>

453:
old  <>
new  <	dq 0.75>

454:
old  < atan_test$9:>
new  <>

455:
old  <	; GetReturnValue Â£temporary3104>
new  <section .data>

457:
old  < atan_test$10:>
new  <float8$1.000010#:>

458:
old  <	; Parameter double Â£temporary3104 72>
new  <	; Initializer Double 1.000010>

459:
old  <	fstp qword [rbp + 72]>
new  <	dq 1.000010>

461:
old  < atan_test$11:>
new  <section .data>

462:
old  <	; Parameter signedint errno 80>
new  <>

463:
old  <	mov eax, [errno]>
new  <float8$0.999999#:>

464:
old  <	mov [rbp + 80], eax>
new  <	; Initializer Double 0.999999>

465:
old  <>
new  <	dq 0.999999>

466:
old  < atan_test$12:>
new  <>

467:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <section .data>

469:
old  < atan_test$13:>
new  <float8$0.000010#:>

470:
old  <	; Parameter signedint errno 108>
new  <	; Initializer Double 0.000010>

471:
old  <	mov eax, [errno]>
new  <	dq 0.000010>

472:
old  <	mov [rbp + 108], eax>
new  <>

473:
old  <>
new  <section .data>

474:
old  < atan_test$14:>
new  <>

475:
old  <	; Call strerror 84 0>
new  <float8$minus0.000010#:>

476:
old  <	mov qword [rbp + 84], atan_test$15>
new  <	; Initializer Double -0.000010>

477:
old  <	mov [rbp + 92], rbp>
new  <	dq -0.000010>

478:
old  <	add rbp, 84>
new  <>

479:
old  <	jmp strerror>
new  <section .data>

481:
old  < atan_test$15:>
new  <float8$minus0.999999#:>

482:
old  <	; PostCall 84>
new  <	; Initializer Double -0.999999>

483:
old  <>
new  <	dq -0.999999>

484:
old  < atan_test$16:>
new  <>

485:
old  <	; GetReturnValue Â£temporary3105>
new  <section .data>

487:
old  < atan_test$17:>
new  <float8$minus1.0#:>

488:
old  <	; Parameter pointer Â£temporary3105 84>
new  <	; Initializer Double -1.0>

489:
old  <	mov [rbp + 84], rbx>
new  <	dq -1.0>

491:
old  < atan_test$18:>
new  <section .data>

492:
old  <	; Call printf 32 28>
new  <>

493:
old  <	mov qword [rbp + 32], atan_test$19>
new  <float8$minus1.000010#:>

494:
old  <	mov [rbp + 40], rbp>
new  <	; Initializer Double -1.000010>

495:
old  <	add rbp, 32>
new  <	dq -1.000010>

496:
old  <	mov rdi, rbp>
new  <>

497:
old  <	add rdi, 28>
new  <section .data>

498:
old  <	jmp printf>
new  <>

499:
old  <>
new  <float8$2.0#:>

500:
old  < atan_test$19:>
new  <	; Initializer Double 2.0>

501:
old  <	; PostCall 32>
new  <	dq 2.0>

503:
old  < atan_test$20:>
new  <section .data>

504:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

505:
old  <>
new  <float8$3.0#:>

506:
old  < atan_test$21:>
new  <	; Initializer Double 3.0>

507:
old  <	; Parameter pointer "Error message" 56>
new  <	dq 3.0>

508:
old  <	mov qword [rbp + 56], string_Error20message#>
new  <>

509:
old  <>
new  <section .data>

510:
old  < atan_test$22:>
new  <>

511:
old  <	; Call perror 32 0>
new  <float8$4.0#:>

512:
old  <	mov qword [rbp + 32], atan_test$23>
new  <	; Initializer Double 4.0>

513:
old  <	mov [rbp + 40], rbp>
new  <	dq 4.0>

514:
old  <	add rbp, 32>
new  <>

515:
old  <	jmp perror>
new  <section .data>

517:
old  < atan_test$23:>
new  <float8$minus2.0#:>

518:
old  <	; PostCall 32>
new  <	; Initializer Double -2.0>

519:
old  <>
new  <	dq -2.0>

520:
old  < atan_test$24:>
new  <>

521:
old  <	; Assign errno 0>
new  <section .data>

522:
old  <	mov dword [errno], 0>
new  <>

523:
old  <>
new  <float8$2#:>

524:
old  < atan_test$25:>
new  <	; Initializer Double 2>

525:
old  <	; Return>
new  <	dq 2.0>

526:
old  <	mov rax, [rbp]>
new  <>

527:
old  <	mov rdi, [rbp + 16]>
new  <section .data>

528:
old  <	mov rbp, [rbp + 8]>
new  <>

529:
old  <	jmp rax>
new  <float8$minus2#:>

530:
old  <>
new  <	; Initializer Double -2>

531:
old  < atan_test$26:>
new  <	dq -2.0>

532:
old  <	; FunctionEnd atan_test>
new  <>

533:
old  <>
new  <section .data>

534:
old  <section .data>
new  <>

535:
old  <>
new  <float8$minus4.0#:>

536:
old  <float8$1.000001#:>
new  <	; Initializer Double -4.0>

537:
old  <	; Initializer Double 1.000001>
new  <	dq -4.0>

538:
old  <	dq 1.000001>
new  <>

539:
old  <>
new  <section .text>

540:
old  <section .data>
new  <>

541:
old  <>
new  < main_math:>

542:
old  <float8$0.999999#:>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

543:
old  <	; Initializer Double 0.999999>
new  <>

544:
old  <	dq 0.999999>
new  < main_math$1:>

545:
old  <>
new  <	; PushFloat 0.333333333>

546:
old  <section .data>
new  <	fld qword [float8$0.333333333#]>

548:
old  <float8$0.000001#:>
new  < main_math$2:>

549:
old  <	; Initializer Double 0.000001>
new  <	; Parameter double 0.333333333 48>

550:
old  <	dq 0.000001>
new  <	fstp qword [rbp + 48]>

552:
old  <section .data>
new  < main_math$3:>

553:
old  <>
new  <	; Call math_test_1 24 0>

554:
old  <float8$minus0.000001#:>
new  <	mov qword [rbp + 24], main_math$4>

555:
old  <	; Initializer Double -0.000001>
new  <	mov [rbp + 32], rbp>

556:
old  <	dq -0.000001>
new  <	add rbp, 24>

557:
old  <>
new  <	jmp math_test_1>

558:
old  <section .data>
new  <>

559:
old  <>
new  < main_math$4:>

560:
old  <float8$minus0.999999#:>
new  <	; PostCall 24>

561:
old  <	; Initializer Double -0.999999>
new  <>

562:
old  <	dq -0.999999>
new  < main_math$5:>

563:
old  <>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

564:
old  <section .data>
new  <>

565:
old  <>
new  < main_math$6:>

566:
old  <float8$minus1.0#:>
new  <	; PushFloat 0.75>

567:
old  <	; Initializer Double -1.0>
new  <	fld qword [float8$0.75#]>

568:
old  <	dq -1.0>
new  <>

569:
old  <>
new  < main_math$7:>

570:
old  <section .data>
new  <	; Parameter double 0.75 48>

571:
old  <>
new  <	fstp qword [rbp + 48]>

572:
old  <float8$minus1.000001#:>
new  <>

573:
old  <	; Initializer Double -1.000001>
new  < main_math$8:>

574:
old  <	dq -1.000001>
new  <	; Call math_test_1 24 0>

575:
old  <>
new  <	mov qword [rbp + 24], main_math$9>

576:
old  <section .data>
new  <	mov [rbp + 32], rbp>

577:
old  <>
new  <	add rbp, 24>

578:
old  <float8$2.0#:>
new  <	jmp math_test_1>

579:
old  <	; Initializer Double 2.0>
new  <>

580:
old  <	dq 2.0>
new  < main_math$9:>

581:
old  <>
new  <	; PostCall 24>

582:
old  <section .data>
new  <>

583:
old  <>
new  < main_math$10:>

584:
old  <float8$3.0#:>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

585:
old  <	; Initializer Double 3.0>
new  <>

586:
old  <	dq 3.0>
new  < main_math$11:>

587:
old  <>
new  <	; PushFloat 1.000010>

588:
old  <section .data>
new  <	fld qword [float8$1.000010#]>

590:
old  <float8$4.0#:>
new  < main_math$12:>

591:
old  <	; Initializer Double 4.0>
new  <	; Parameter double 1.000010 48>

592:
old  <	dq 4.0>
new  <	fstp qword [rbp + 48]>

594:
old  <section .data>
new  < main_math$13:>

595:
old  <>
new  <	; Call math_test_1 24 0>

596:
old  <float8$minus2.0#:>
new  <	mov qword [rbp + 24], main_math$14>

597:
old  <	; Initializer Double -2.0>
new  <	mov [rbp + 32], rbp>

598:
old  <	dq -2.0>
new  <	add rbp, 24>

599:
old  <>
new  <	jmp math_test_1>

600:
old  <section .data>
new  <>

601:
old  <>
new  < main_math$14:>

602:
old  <float8$2#:>
new  <	; PostCall 24>

603:
old  <	; Initializer Double 2>
new  <>

604:
old  <	dq 2.0>
new  < main_math$15:>

605:
old  <>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

606:
old  <section .data>
new  <>

607:
old  <>
new  < main_math$16:>

608:
old  <float8$minus2#:>
new  <	; PushFloat 1.0>

609:
old  <	; Initializer Double -2>
new  <	fld1>

610:
old  <	dq -2.0>
new  <>

611:
old  <>
new  < main_math$17:>

612:
old  <section .data>
new  <	; Parameter double 1.0 48>

613:
old  <>
new  <	fstp qword [rbp + 48]>

614:
old  <float8$minus4.0#:>
new  <>

615:
old  <	; Initializer Double -4.0>
new  < main_math$18:>

616:
old  <	dq -4.0>
new  <	; Call math_test_1 24 0>

617:
old  <>
new  <	mov qword [rbp + 24], main_math$19>

618:
old  <section .text>
new  <	mov [rbp + 32], rbp>

619:
old  <>
new  <	add rbp, 24>

620:
old  < main_math:>
new  <	jmp math_test_1>

621:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

622:
old  <>
new  < main_math$19:>

623:
old  < main_math$1:>
new  <	; PostCall 24>

624:
old  <	; PushFloat 1.000001>
new  <>

625:
old  <	fld qword [float8$1.000001#]>
new  < main_math$20:>

626:
old  <>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

627:
old  < main_math$2:>
new  <>

628:
old  <	; Parameter double 1.000001 48>
new  < main_math$21:>

629:
old  <	fstp qword [rbp + 48]>
new  <	; PushFloat 0.999999>

630:
old  <>
new  <	fld qword [float8$0.999999#]>

631:
old  < main_math$3:>
new  <>

632:
old  <	; Call math_test_1 24 0>
new  < main_math$22:>

633:
old  <	mov qword [rbp + 24], main_math$4>
new  <	; Parameter double 0.999999 48>

634:
old  <	mov [rbp + 32], rbp>
new  <	fstp qword [rbp + 48]>

635:
old  <	add rbp, 24>
new  <>

636:
old  <	jmp math_test_1>
new  < main_math$23:>

637:
old  <>
new  <	; Call math_test_1 24 0>

638:
old  < main_math$4:>
new  <	mov qword [rbp + 24], main_math$24>

639:
old  <	; PostCall 24>
new  <	mov [rbp + 32], rbp>

640:
old  <>
new  <	add rbp, 24>

641:
old  < main_math$5:>
new  <	jmp math_test_1>

642:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

643:
old  <>
new  < main_math$24:>

644:
old  < main_math$6:>
new  <	; PostCall 24>

645:
old  <	; PushFloat 1.0>
new  <>

646:
old  <	fld1>
new  < main_math$25:>

647:
old  <>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

648:
old  < main_math$7:>
new  <>

649:
old  <	; Parameter double 1.0 48>
new  < main_math$26:>

650:
old  <	fstp qword [rbp + 48]>
new  <	; PushFloat 0.000010>

651:
old  <>
new  <	fld qword [float8$0.000010#]>

652:
old  < main_math$8:>
new  <>

653:
old  <	; Call math_test_1 24 0>
new  < main_math$27:>

654:
old  <	mov qword [rbp + 24], main_math$9>
new  <	; Parameter double 0.000010 48>

655:
old  <	mov [rbp + 32], rbp>
new  <	fstp qword [rbp + 48]>

656:
old  <	add rbp, 24>
new  <>

657:
old  <	jmp math_test_1>
new  < main_math$28:>

658:
old  <>
new  <	; Call math_test_1 24 0>

659:
old  < main_math$9:>
new  <	mov qword [rbp + 24], main_math$29>

660:
old  <	; PostCall 24>
new  <	mov [rbp + 32], rbp>

661:
old  <>
new  <	add rbp, 24>

662:
old  < main_math$10:>
new  <	jmp math_test_1>

663:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

664:
old  <>
new  < main_math$29:>

665:
old  < main_math$11:>
new  <	; PostCall 24>

666:
old  <	; PushFloat 0.999999>
new  <>

667:
old  <	fld qword [float8$0.999999#]>
new  < main_math$30:>

668:
old  <>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

669:
old  < main_math$12:>
new  <>

670:
old  <	; Parameter double 0.999999 48>
new  < main_math$31:>

671:
old  <	fstp qword [rbp + 48]>
new  <	; PushFloat 0>

672:
old  <>
new  <	fldz>

673:
old  < main_math$13:>
new  <>

674:
old  <	; Call math_test_1 24 0>
new  < main_math$32:>

675:
old  <	mov qword [rbp + 24], main_math$14>
new  <	; Parameter double 0 48>

676:
old  <	mov [rbp + 32], rbp>
new  <	fstp qword [rbp + 48]>

677:
old  <	add rbp, 24>
new  <>

678:
old  <	jmp math_test_1>
new  < main_math$33:>

679:
old  <>
new  <	; Call math_test_1 24 0>

680:
old  < main_math$14:>
new  <	mov qword [rbp + 24], main_math$34>

681:
old  <	; PostCall 24>
new  <	mov [rbp + 32], rbp>

682:
old  <>
new  <	add rbp, 24>

683:
old  < main_math$15:>
new  <	jmp math_test_1>

684:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

685:
old  <>
new  < main_math$34:>

686:
old  < main_math$16:>
new  <	; PostCall 24>

687:
old  <	; PushFloat 0.000001>
new  <>

688:
old  <	fld qword [float8$0.000001#]>
new  < main_math$35:>

689:
old  <>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

690:
old  < main_math$17:>
new  <>

691:
old  <	; Parameter double 0.000001 48>
new  < main_math$36:>

692:
old  <	fstp qword [rbp + 48]>
new  <	; PushFloat -0.000010>

693:
old  <>
new  <	fld qword [float8$minus0.000010#]>

694:
old  < main_math$18:>
new  <>

695:
old  <	; Call math_test_1 24 0>
new  < main_math$37:>

696:
old  <	mov qword [rbp + 24], main_math$19>
new  <	; Parameter double -0.000010 48>

697:
old  <	mov [rbp + 32], rbp>
new  <	fstp qword [rbp + 48]>

698:
old  <	add rbp, 24>
new  <>

699:
old  <	jmp math_test_1>
new  < main_math$38:>

700:
old  <>
new  <	; Call math_test_1 24 0>

701:
old  < main_math$19:>
new  <	mov qword [rbp + 24], main_math$39>

702:
old  <	; PostCall 24>
new  <	mov [rbp + 32], rbp>

703:
old  <>
new  <	add rbp, 24>

704:
old  < main_math$20:>
new  <	jmp math_test_1>

705:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

706:
old  <>
new  < main_math$39:>

707:
old  < main_math$21:>
new  <	; PostCall 24>

708:
old  <	; PushFloat 0>
new  <>

709:
old  <	fldz>
new  < main_math$40:>

710:
old  <>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

711:
old  < main_math$22:>
new  <>

712:
old  <	; Parameter double 0 48>
new  < main_math$41:>

713:
old  <	fstp qword [rbp + 48]>
new  <	; PushFloat -0.999999>

714:
old  <>
new  <	fld qword [float8$minus0.999999#]>

715:
old  < main_math$23:>
new  <>

716:
old  <	; Call math_test_1 24 0>
new  < main_math$42:>

717:
old  <	mov qword [rbp + 24], main_math$24>
new  <	; Parameter double -0.999999 48>

718:
old  <	mov [rbp + 32], rbp>
new  <	fstp qword [rbp + 48]>

719:
old  <	add rbp, 24>
new  <>

720:
old  <	jmp math_test_1>
new  < main_math$43:>

721:
old  <>
new  <	; Call math_test_1 24 0>

722:
old  < main_math$24:>
new  <	mov qword [rbp + 24], main_math$44>

723:
old  <	; PostCall 24>
new  <	mov [rbp + 32], rbp>

724:
old  <>
new  <	add rbp, 24>

725:
old  < main_math$25:>
new  <	jmp math_test_1>

726:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

727:
old  <>
new  < main_math$44:>

728:
old  < main_math$26:>
new  <	; PostCall 24>

729:
old  <	; PushFloat -0.000001>
new  <>

730:
old  <	fld qword [float8$minus0.000001#]>
new  < main_math$45:>

731:
old  <>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

732:
old  < main_math$27:>
new  <>

733:
old  <	; Parameter double -0.000001 48>
new  < main_math$46:>

734:
old  <	fstp qword [rbp + 48]>
new  <	; PushFloat -1.0>

735:
old  <>
new  <	fld qword [float8$minus1.0#]>

736:
old  < main_math$28:>
new  <>

737:
old  <	; Call math_test_1 24 0>
new  < main_math$47:>

738:
old  <	mov qword [rbp + 24], main_math$29>
new  <	; Parameter double -1.0 48>

739:
old  <	mov [rbp + 32], rbp>
new  <	fstp qword [rbp + 48]>

740:
old  <	add rbp, 24>
new  <>

741:
old  <	jmp math_test_1>
new  < main_math$48:>

742:
old  <>
new  <	; Call math_test_1 24 0>

743:
old  < main_math$29:>
new  <	mov qword [rbp + 24], main_math$49>

744:
old  <	; PostCall 24>
new  <	mov [rbp + 32], rbp>

745:
old  <>
new  <	add rbp, 24>

746:
old  < main_math$30:>
new  <	jmp math_test_1>

747:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

748:
old  <>
new  < main_math$49:>

749:
old  < main_math$31:>
new  <	; PostCall 24>

750:
old  <	; PushFloat -0.999999>
new  <>

751:
old  <	fld qword [float8$minus0.999999#]>
new  < main_math$50:>

752:
old  <>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

753:
old  < main_math$32:>
new  <>

754:
old  <	; Parameter double -0.999999 48>
new  < main_math$51:>

755:
old  <	fstp qword [rbp + 48]>
new  <	; PushFloat -1.000010>

756:
old  <>
new  <	fld qword [float8$minus1.000010#]>

757:
old  < main_math$33:>
new  <>

758:
old  <	; Call math_test_1 24 0>
new  < main_math$52:>

759:
old  <	mov qword [rbp + 24], main_math$34>
new  <	; Parameter double -1.000010 48>

760:
old  <	mov [rbp + 32], rbp>
new  <	fstp qword [rbp + 48]>

761:
old  <	add rbp, 24>
new  <>

762:
old  <	jmp math_test_1>
new  < main_math$53:>

763:
old  <>
new  <	; Call math_test_1 24 0>

764:
old  < main_math$34:>
new  <	mov qword [rbp + 24], main_math$54>

765:
old  <	; PostCall 24>
new  <	mov [rbp + 32], rbp>

766:
old  <>
new  <	add rbp, 24>

767:
old  < main_math$35:>
new  <	jmp math_test_1>

768:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

769:
old  <>
new  < main_math$54:>

770:
old  < main_math$36:>
new  <	; PostCall 24>

771:
old  <	; PushFloat -1.0>
new  <>

772:
old  <	fld qword [float8$minus1.0#]>
new  < main_math$55:>

773:
old  <>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

774:
old  < main_math$37:>
new  <>

775:
old  <	; Parameter double -1.0 48>
new  < main_math$56:>

776:
old  <	fstp qword [rbp + 48]>
new  <	; PushFloat 6.2831853071795864769252866>

777:
old  <>
new  <	fld qword [float8$6.2831853071795864769252866#]>

778:
old  < main_math$38:>
new  <>

779:
old  <	; Call math_test_1 24 0>
new  < main_math$57:>

780:
old  <	mov qword [rbp + 24], main_math$39>
new  <	; Parameter double 6.2831853071795864769252866 48>

781:
old  <	mov [rbp + 32], rbp>
new  <	fstp qword [rbp + 48]>

782:
old  <	add rbp, 24>
new  <>

783:
old  <	jmp math_test_1>
new  < main_math$58:>

784:
old  <>
new  <	; Call math_test_1 24 0>

785:
old  < main_math$39:>
new  <	mov qword [rbp + 24], main_math$59>

786:
old  <	; PostCall 24>
new  <	mov [rbp + 32], rbp>

787:
old  <>
new  <	add rbp, 24>

788:
old  < main_math$40:>
new  <	jmp math_test_1>

789:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

790:
old  <>
new  < main_math$59:>

791:
old  < main_math$41:>
new  <	; PostCall 24>

792:
old  <	; PushFloat -1.000001>
new  <>

793:
old  <	fld qword [float8$minus1.000001#]>
new  < main_math$60:>

794:
old  <>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

795:
old  < main_math$42:>
new  <>

796:
old  <	; Parameter double -1.000001 48>
new  < main_math$61:>

797:
old  <	fstp qword [rbp + 48]>
new  <	; PushFloat 3.1415926535897932384626433>

798:
old  <>
new  <	fld qword [float8$3.1415926535897932384626433#]>

799:
old  < main_math$43:>
new  <>

800:
old  <	; Call math_test_1 24 0>
new  < main_math$62:>

801:
old  <	mov qword [rbp + 24], main_math$44>
new  <	; Parameter double 3.1415926535897932384626433 48>

802:
old  <	mov [rbp + 32], rbp>
new  <	fstp qword [rbp + 48]>

803:
old  <	add rbp, 24>
new  <>

804:
old  <	jmp math_test_1>
new  < main_math$63:>

805:
old  <>
new  <	; Call math_test_1 24 0>

806:
old  < main_math$44:>
new  <	mov qword [rbp + 24], main_math$64>

807:
old  <	; PostCall 24>
new  <	mov [rbp + 32], rbp>

808:
old  <>
new  <	add rbp, 24>

809:
old  < main_math$45:>
new  <	jmp math_test_1>

810:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

811:
old  <>
new  < main_math$64:>

812:
old  < main_math$46:>
new  <	; PostCall 24>

813:
old  <	; PushFloat 6.2831853071795864769252866>
new  <>

814:
old  <	fld qword [float8$6.2831853071795864769252866#]>
new  < main_math$65:>

815:
old  <>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

816:
old  < main_math$47:>
new  <>

817:
old  <	; Parameter double 6.2831853071795864769252866 48>
new  < main_math$66:>

818:
old  <	fstp qword [rbp + 48]>
new  <	; PushFloat 1.57079632679489661923132165>

819:
old  <>
new  <	fld qword [float8$1.57079632679489661923132165#]>

820:
old  < main_math$48:>
new  <>

821:
old  <	; Call math_test_1 24 0>
new  < main_math$67:>

822:
old  <	mov qword [rbp + 24], main_math$49>
new  <	; Parameter double 1.57079632679489661923132165 48>

823:
old  <	mov [rbp + 32], rbp>
new  <	fstp qword [rbp + 48]>

824:
old  <	add rbp, 24>
new  <>

825:
old  <	jmp math_test_1>
new  < main_math$68:>

826:
old  <>
new  <	; Call math_test_1 24 0>

827:
old  < main_math$49:>
new  <	mov qword [rbp + 24], main_math$69>

828:
old  <	; PostCall 24>
new  <	mov [rbp + 32], rbp>

829:
old  <>
new  <	add rbp, 24>

830:
old  < main_math$50:>
new  <	jmp math_test_1>

831:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

832:
old  <>
new  < main_math$69:>

833:
old  < main_math$51:>
new  <	; PostCall 24>

834:
old  <	; PushFloat 3.1415926535897932384626433>
new  <>

835:
old  <	fld qword [float8$3.1415926535897932384626433#]>
new  < main_math$70:>

836:
old  <>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

837:
old  < main_math$52:>
new  <>

838:
old  <	; Parameter double 3.1415926535897932384626433 48>
new  < main_math$71:>

839:
old  <	fstp qword [rbp + 48]>
new  <	; PushFloat -1.57079632679489661923132165>

840:
old  <>
new  <	fld qword [float8$minus1.57079632679489661923132165#]>

841:
old  < main_math$53:>
new  <>

842:
old  <	; Call math_test_1 24 0>
new  < main_math$72:>

843:
old  <	mov qword [rbp + 24], main_math$54>
new  <	; Parameter double -1.57079632679489661923132165 48>

844:
old  <	mov [rbp + 32], rbp>
new  <	fstp qword [rbp + 48]>

845:
old  <	add rbp, 24>
new  <>

846:
old  <	jmp math_test_1>
new  < main_math$73:>

847:
old  <>
new  <	; Call math_test_1 24 0>

848:
old  < main_math$54:>
new  <	mov qword [rbp + 24], main_math$74>

849:
old  <	; PostCall 24>
new  <	mov [rbp + 32], rbp>

850:
old  <>
new  <	add rbp, 24>

851:
old  < main_math$55:>
new  <	jmp math_test_1>

852:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

853:
old  <>
new  < main_math$74:>

854:
old  < main_math$56:>
new  <	; PostCall 24>

855:
old  <	; PushFloat 1.57079632679489661923132165>
new  <>

856:
old  <	fld qword [float8$1.57079632679489661923132165#]>
new  < main_math$75:>

857:
old  <>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

858:
old  < main_math$57:>
new  <>

859:
old  <	; Parameter double 1.57079632679489661923132165 48>
new  < main_math$76:>

860:
old  <	fstp qword [rbp + 48]>
new  <	; PushFloat -3.1415926535897932384626433>

861:
old  <>
new  <	fld qword [float8$minus3.1415926535897932384626433#]>

862:
old  < main_math$58:>
new  <>

863:
old  <	; Call math_test_1 24 0>
new  < main_math$77:>

864:
old  <	mov qword [rbp + 24], main_math$59>
new  <	; Parameter double -3.1415926535897932384626433 48>

865:
old  <	mov [rbp + 32], rbp>
new  <	fstp qword [rbp + 48]>

866:
old  <	add rbp, 24>
new  <>

867:
old  <	jmp math_test_1>
new  < main_math$78:>

868:
old  <>
new  <	; Call math_test_1 24 0>

869:
old  < main_math$59:>
new  <	mov qword [rbp + 24], main_math$79>

870:
old  <	; PostCall 24>
new  <	mov [rbp + 32], rbp>

871:
old  <>
new  <	add rbp, 24>

872:
old  < main_math$60:>
new  <	jmp math_test_1>

873:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

874:
old  <>
new  < main_math$79:>

875:
old  < main_math$61:>
new  <	; PostCall 24>

876:
old  <	; PushFloat -1.57079632679489661923132165>
new  <>

877:
old  <	fld qword [float8$minus1.57079632679489661923132165#]>
new  < main_math$80:>

878:
old  <>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

879:
old  < main_math$62:>
new  <>

880:
old  <	; Parameter double -1.57079632679489661923132165 48>
new  < main_math$81:>

881:
old  <	fstp qword [rbp + 48]>
new  <	; PushFloat -6.2831853071795864769252866>

882:
old  <>
new  <	fld qword [float8$minus6.2831853071795864769252866#]>

883:
old  < main_math$63:>
new  <>

884:
old  <	; Call math_test_1 24 0>
new  < main_math$82:>

885:
old  <	mov qword [rbp + 24], main_math$64>
new  <	; Parameter double -6.2831853071795864769252866 48>

886:
old  <	mov [rbp + 32], rbp>
new  <	fstp qword [rbp + 48]>

887:
old  <	add rbp, 24>
new  <>

888:
old  <	jmp math_test_1>
new  < main_math$83:>

889:
old  <>
new  <	; Call math_test_1 24 0>

890:
old  < main_math$64:>
new  <	mov qword [rbp + 24], main_math$84>

891:
old  <	; PostCall 24>
new  <	mov [rbp + 32], rbp>

892:
old  <>
new  <	add rbp, 24>

893:
old  < main_math$65:>
new  <	jmp math_test_1>

894:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

895:
old  <>
new  < main_math$84:>

896:
old  < main_math$66:>
new  <	; PostCall 24>

897:
old  <	; PushFloat -3.1415926535897932384626433>
new  <>

898:
old  <	fld qword [float8$minus3.1415926535897932384626433#]>
new  < main_math$85:>

899:
old  <>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

900:
old  < main_math$67:>
new  <>

901:
old  <	; Parameter double -3.1415926535897932384626433 48>
new  < main_math$86:>

902:
old  <	fstp qword [rbp + 48]>
new  <	; PushFloat 1.0>

903:
old  <>
new  <	fld1>

904:
old  < main_math$68:>
new  <>

905:
old  <	; Call math_test_1 24 0>
new  < main_math$87:>

906:
old  <	mov qword [rbp + 24], main_math$69>
new  <	; Parameter double 1.0 48>

907:
old  <	mov [rbp + 32], rbp>
new  <	fstp qword [rbp + 48]>

908:
old  <	add rbp, 24>
new  <>

909:
old  <	jmp math_test_1>
new  < main_math$88:>

910:
old  <>
new  <	; PushFloat 2.0>

911:
old  < main_math$69:>
new  <	fld qword [float8$2.0#]>

912:
old  <	; PostCall 24>
new  <>

913:
old  <>
new  < main_math$89:>

914:
old  < main_math$70:>
new  <	; Parameter double 2.0 56>

915:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	fstp qword [rbp + 56]>

917:
old  < main_math$71:>
new  < main_math$90:>

918:
old  <	; PushFloat -6.2831853071795864769252866>
new  <	; Call math_test_2 24 0>

919:
old  <	fld qword [float8$minus6.2831853071795864769252866#]>
new  <	mov qword [rbp + 24], main_math$91>

920:
old  <>
new  <	mov [rbp + 32], rbp>

921:
old  < main_math$72:>
new  <	add rbp, 24>

922:
old  <	; Parameter double -6.2831853071795864769252866 48>
new  <	jmp math_test_2>

923:
old  <	fstp qword [rbp + 48]>
new  <>

924:
old  <>
new  < main_math$91:>

925:
old  < main_math$73:>
new  <	; PostCall 24>

926:
old  <	; Call math_test_1 24 0>
new  <>

927:
old  <	mov qword [rbp + 24], main_math$74>
new  < main_math$92:>

928:
old  <	mov [rbp + 32], rbp>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

929:
old  <	add rbp, 24>
new  <>

930:
old  <	jmp math_test_1>
new  < main_math$93:>

931:
old  <>
new  <	; PushFloat 3.0>

932:
old  < main_math$74:>
new  <	fld qword [float8$3.0#]>

933:
old  <	; PostCall 24>
new  <>

934:
old  <>
new  < main_math$94:>

935:
old  < main_math$75:>
new  <	; Parameter double 3.0 48>

936:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	fstp qword [rbp + 48]>

938:
old  < main_math$76:>
new  < main_math$95:>

939:
old  <	; PushFloat 1.0>
new  <	; PushFloat 4.0>

940:
old  <	fld1>
new  <	fld qword [float8$4.0#]>

942:
old  < main_math$77:>
new  < main_math$96:>

943:
old  <	; Parameter double 1.0 48>
new  <	; Parameter double 4.0 56>

944:
old  <	fstp qword [rbp + 48]>
new  <	fstp qword [rbp + 56]>

946:
old  < main_math$78:>
new  < main_math$97:>

947:
old  <	; PushFloat 2.0>
new  <	; Call math_test_2 24 0>

948:
old  <	fld qword [float8$2.0#]>
new  <	mov qword [rbp + 24], main_math$98>

949:
old  <>
new  <	mov [rbp + 32], rbp>

950:
old  < main_math$79:>
new  <	add rbp, 24>

951:
old  <	; Parameter double 2.0 56>
new  <	jmp math_test_2>

952:
old  <	fstp qword [rbp + 56]>
new  <>

953:
old  <>
new  < main_math$98:>

954:
old  < main_math$80:>
new  <	; PostCall 24>

955:
old  <	; Call math_test_2 24 0>
new  <>

956:
old  <	mov qword [rbp + 24], main_math$81>
new  < main_math$99:>

957:
old  <	mov [rbp + 32], rbp>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

958:
old  <	add rbp, 24>
new  <>

959:
old  <	jmp math_test_2>
new  < main_math$100:>

960:
old  <>
new  <	; PushFloat 0>

961:
old  < main_math$81:>
new  <	fldz>

962:
old  <	; PostCall 24>
new  <>

963:
old  <>
new  < main_math$101:>

964:
old  < main_math$82:>
new  <	; Parameter double 0 48>

965:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	fstp qword [rbp + 48]>

967:
old  < main_math$83:>
new  < main_math$102:>

968:
old  <	; PushFloat 3.0>
new  <	; PushFloat 2.0>

969:
old  <	fld qword [float8$3.0#]>
new  <	fld qword [float8$2.0#]>

971:
old  < main_math$84:>
new  < main_math$103:>

972:
old  <	; Parameter double 3.0 48>
new  <	; Parameter double 2.0 56>

973:
old  <	fstp qword [rbp + 48]>
new  <	fstp qword [rbp + 56]>

975:
old  < main_math$85:>
new  < main_math$104:>

976:
old  <	; PushFloat 4.0>
new  <	; Call math_test_2 24 0>

977:
old  <	fld qword [float8$4.0#]>
new  <	mov qword [rbp + 24], main_math$105>

978:
old  <>
new  <	mov [rbp + 32], rbp>

979:
old  < main_math$86:>
new  <	add rbp, 24>

980:
old  <	; Parameter double 4.0 56>
new  <	jmp math_test_2>

981:
old  <	fstp qword [rbp + 56]>
new  <>

982:
old  <>
new  < main_math$105:>

983:
old  < main_math$87:>
new  <	; PostCall 24>

984:
old  <	; Call math_test_2 24 0>
new  <>

985:
old  <	mov qword [rbp + 24], main_math$88>
new  < main_math$106:>

986:
old  <	mov [rbp + 32], rbp>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

987:
old  <	add rbp, 24>
new  <>

988:
old  <	jmp math_test_2>
new  < main_math$107:>

989:
old  <>
new  <	; PushFloat 0>

990:
old  < main_math$88:>
new  <	fldz>

991:
old  <	; PostCall 24>
new  <>

992:
old  <>
new  < main_math$108:>

993:
old  < main_math$89:>
new  <	; Parameter double 0 48>

994:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	fstp qword [rbp + 48]>

996:
old  < main_math$90:>
new  < main_math$109:>

997:
old  <	; PushFloat 0>
new  <	; PushFloat -2.0>

998:
old  <	fldz>
new  <	fld qword [float8$minus2.0#]>

1000:
old  < main_math$91:>
new  < main_math$110:>

1001:
old  <	; Parameter double 0 48>
new  <	; Parameter double -2.0 56>

1002:
old  <	fstp qword [rbp + 48]>
new  <	fstp qword [rbp + 56]>

1004:
old  < main_math$92:>
new  < main_math$111:>

1005:
old  <	; PushFloat 2.0>
new  <	; Call math_test_2 24 0>

1006:
old  <	fld qword [float8$2.0#]>
new  <	mov qword [rbp + 24], main_math$112>

1007:
old  <>
new  <	mov [rbp + 32], rbp>

1008:
old  < main_math$93:>
new  <	add rbp, 24>

1009:
old  <	; Parameter double 2.0 56>
new  <	jmp math_test_2>

1010:
old  <	fstp qword [rbp + 56]>
new  <>

1011:
old  <>
new  < main_math$112:>

1012:
old  < main_math$94:>
new  <	; PostCall 24>

1013:
old  <	; Call math_test_2 24 0>
new  <>

1014:
old  <	mov qword [rbp + 24], main_math$95>
new  < main_math$113:>

1015:
old  <	mov [rbp + 32], rbp>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1016:
old  <	add rbp, 24>
new  <>

1017:
old  <	jmp math_test_2>
new  < main_math$114:>

1018:
old  <>
new  <	; PushFloat 1>

1019:
old  < main_math$95:>
new  <	fld1>

1020:
old  <	; PostCall 24>
new  <>

1021:
old  <>
new  < main_math$115:>

1022:
old  < main_math$96:>
new  <	; Parameter double 1 48>

1023:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	fstp qword [rbp + 48]>

1025:
old  < main_math$97:>
new  < main_math$116:>

1026:
old  <	; PushFloat 0>
new  <	; PushFloat 2.0>

1027:
old  <	fldz>
new  <	fld qword [float8$2.0#]>

1029:
old  < main_math$98:>
new  < main_math$117:>

1030:
old  <	; Parameter double 0 48>
new  <	; Parameter double 2.0 56>

1031:
old  <	fstp qword [rbp + 48]>
new  <	fstp qword [rbp + 56]>

1033:
old  < main_math$99:>
new  < main_math$118:>

1034:
old  <	; PushFloat -2.0>
new  <	; Call math_test_2 24 0>

1035:
old  <	fld qword [float8$minus2.0#]>
new  <	mov qword [rbp + 24], main_math$119>

1036:
old  <>
new  <	mov [rbp + 32], rbp>

1037:
old  < main_math$100:>
new  <	add rbp, 24>

1038:
old  <	; Parameter double -2.0 56>
new  <	jmp math_test_2>

1039:
old  <	fstp qword [rbp + 56]>
new  <>

1040:
old  <>
new  < main_math$119:>

1041:
old  < main_math$101:>
new  <	; PostCall 24>

1042:
old  <	; Call math_test_2 24 0>
new  <>

1043:
old  <	mov qword [rbp + 24], main_math$102>
new  < main_math$120:>

1044:
old  <	mov [rbp + 32], rbp>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1045:
old  <	add rbp, 24>
new  <>

1046:
old  <	jmp math_test_2>
new  < main_math$121:>

1047:
old  <>
new  <	; PushFloat 1>

1048:
old  < main_math$102:>
new  <	fld1>

1049:
old  <	; PostCall 24>
new  <>

1050:
old  <>
new  < main_math$122:>

1051:
old  < main_math$103:>
new  <	; Parameter double 1 48>

1052:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	fstp qword [rbp + 48]>

1054:
old  < main_math$104:>
new  < main_math$123:>

1055:
old  <	; PushFloat 1>
new  <	; PushFloat -2.0>

1056:
old  <	fld1>
new  <	fld qword [float8$minus2.0#]>

1058:
old  < main_math$105:>
new  < main_math$124:>

1059:
old  <	; Parameter double 1 48>
new  <	; Parameter double -2.0 56>

1060:
old  <	fstp qword [rbp + 48]>
new  <	fstp qword [rbp + 56]>

1062:
old  < main_math$106:>
new  < main_math$125:>

1063:
old  <	; PushFloat 2.0>
new  <	; Call math_test_2 24 0>

1064:
old  <	fld qword [float8$2.0#]>
new  <	mov qword [rbp + 24], main_math$126>

1065:
old  <>
new  <	mov [rbp + 32], rbp>

1066:
old  < main_math$107:>
new  <	add rbp, 24>

1067:
old  <	; Parameter double 2.0 56>
new  <	jmp math_test_2>

1068:
old  <	fstp qword [rbp + 56]>
new  <>

1069:
old  <>
new  < main_math$126:>

1070:
old  < main_math$108:>
new  <	; PostCall 24>

1071:
old  <	; Call math_test_2 24 0>
new  <>

1072:
old  <	mov qword [rbp + 24], main_math$109>
new  < main_math$127:>

1073:
old  <	mov [rbp + 32], rbp>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1074:
old  <	add rbp, 24>
new  <>

1075:
old  <	jmp math_test_2>
new  < main_math$128:>

1076:
old  <>
new  <	; PushFloat 0>

1077:
old  < main_math$109:>
new  <	fldz>

1078:
old  <	; PostCall 24>
new  <>

1079:
old  <>
new  < main_math$129:>

1080:
old  < main_math$110:>
new  <	; Parameter double 0 48>

1081:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	fstp qword [rbp + 48]>

1083:
old  < main_math$111:>
new  < main_math$130:>

1084:
old  <	; PushFloat 1>
new  <	; PushFloat 0>

1085:
old  <	fld1>
new  <	fldz>

1087:
old  < main_math$112:>
new  < main_math$131:>

1088:
old  <	; Parameter double 1 48>
new  <	; Parameter double 0 56>

1089:
old  <	fstp qword [rbp + 48]>
new  <	fstp qword [rbp + 56]>

1091:
old  < main_math$113:>
new  < main_math$132:>

1092:
old  <	; PushFloat -2.0>
new  <	; Call math_test_2 24 0>

1093:
old  <	fld qword [float8$minus2.0#]>
new  <	mov qword [rbp + 24], main_math$133>

1094:
old  <>
new  <	mov [rbp + 32], rbp>

1095:
old  < main_math$114:>
new  <	add rbp, 24>

1096:
old  <	; Parameter double -2.0 56>
new  <	jmp math_test_2>

1097:
old  <	fstp qword [rbp + 56]>
new  <>

1098:
old  <>
new  < main_math$133:>

1099:
old  < main_math$115:>
new  <	; PostCall 24>

1100:
old  <	; Call math_test_2 24 0>
new  <>

1101:
old  <	mov qword [rbp + 24], main_math$116>
new  < main_math$134:>

1102:
old  <	mov [rbp + 32], rbp>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1103:
old  <	add rbp, 24>
new  <>

1104:
old  <	jmp math_test_2>
new  < main_math$135:>

1105:
old  <>
new  <	; PushFloat 2>

1106:
old  < main_math$116:>
new  <	fld qword [float8$2#]>

1107:
old  <	; PostCall 24>
new  <>

1108:
old  <>
new  < main_math$136:>

1109:
old  < main_math$117:>
new  <	; Parameter double 2 48>

1110:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	fstp qword [rbp + 48]>

1112:
old  < main_math$118:>
new  < main_math$137:>

1116:
old  < main_math$119:>
new  < main_math$138:>

1117:
old  <	; Parameter double 0 48>
new  <	; Parameter double 0 56>

1118:
old  <	fstp qword [rbp + 48]>
new  <	fstp qword [rbp + 56]>

1120:
old  < main_math$120:>
new  < main_math$139:>

1121:
old  <	; PushFloat 0>
new  <	; Call math_test_2 24 0>

1122:
old  <	fldz>
new  <	mov qword [rbp + 24], main_math$140>

1123:
old  <>
new  <	mov [rbp + 32], rbp>

1124:
old  < main_math$121:>
new  <	add rbp, 24>

1125:
old  <	; Parameter double 0 56>
new  <	jmp math_test_2>

1126:
old  <	fstp qword [rbp + 56]>
new  <>

1127:
old  <>
new  < main_math$140:>

1128:
old  < main_math$122:>
new  <	; PostCall 24>

1129:
old  <	; Call math_test_2 24 0>
new  <>

1130:
old  <	mov qword [rbp + 24], main_math$123>
new  < main_math$141:>

1131:
old  <	mov [rbp + 32], rbp>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1132:
old  <	add rbp, 24>
new  <>

1133:
old  <	jmp math_test_2>
new  < main_math$142:>

1134:
old  <>
new  <	; PushFloat -2>

1135:
old  < main_math$123:>
new  <	fld qword [float8$minus2#]>

1136:
old  <	; PostCall 24>
new  <>

1137:
old  <>
new  < main_math$143:>

1138:
old  < main_math$124:>
new  <	; Parameter double -2 48>

1139:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	fstp qword [rbp + 48]>

1141:
old  < main_math$125:>
new  < main_math$144:>

1142:
old  <	; PushFloat 2>
new  <	; PushFloat 0>

1143:
old  <	fld qword [float8$2#]>
new  <	fldz>

1145:
old  < main_math$126:>
new  < main_math$145:>

1146:
old  <	; Parameter double 2 48>
new  <	; Parameter double 0 56>

1147:
old  <	fstp qword [rbp + 48]>
new  <	fstp qword [rbp + 56]>

1149:
old  < main_math$127:>
new  < main_math$146:>

1150:
old  <	; PushFloat 0>
new  <	; Call math_test_2 24 0>

1151:
old  <	fldz>
new  <	mov qword [rbp + 24], main_math$147>

1152:
old  <>
new  <	mov [rbp + 32], rbp>

1153:
old  < main_math$128:>
new  <	add rbp, 24>

1154:
old  <	; Parameter double 0 56>
new  <	jmp math_test_2>

1155:
old  <	fstp qword [rbp + 56]>
new  <>

1156:
old  <>
new  < main_math$147:>

1157:
old  < main_math$129:>
new  <	; PostCall 24>

1158:
old  <	; Call math_test_2 24 0>
new  <>

1159:
old  <	mov qword [rbp + 24], main_math$130>
new  < main_math$148:>

1160:
old  <	mov [rbp + 32], rbp>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1161:
old  <	add rbp, 24>
new  <>

1162:
old  <	jmp math_test_2>
new  < main_math$149:>

1163:
old  <>
new  <	; PushFloat -1.0>

1164:
old  < main_math$130:>
new  <	fld qword [float8$minus1.0#]>

1165:
old  <	; PostCall 24>
new  <>

1166:
old  <>
new  < main_math$150:>

1167:
old  < main_math$131:>
new  <	; Parameter double -1.0 48>

1168:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	fstp qword [rbp + 48]>

1170:
old  < main_math$132:>
new  < main_math$151:>

1171:
old  <	; PushFloat -2>
new  <	; PushFloat -1.0>

1172:
old  <	fld qword [float8$minus2#]>
new  <	fld qword [float8$minus1.0#]>

1174:
old  < main_math$133:>
new  < main_math$152:>

1175:
old  <	; Parameter double -2 48>
new  <	; Parameter double -1.0 56>

1176:
old  <	fstp qword [rbp + 48]>
new  <	fstp qword [rbp + 56]>

1178:
old  < main_math$134:>
new  < main_math$153:>

1179:
old  <	; PushFloat 0>
new  <	; Call math_test_2 24 0>

1180:
old  <	fldz>
new  <	mov qword [rbp + 24], main_math$154>

1181:
old  <>
new  <	mov [rbp + 32], rbp>

1182:
old  < main_math$135:>
new  <	add rbp, 24>

1183:
old  <	; Parameter double 0 56>
new  <	jmp math_test_2>

1184:
old  <	fstp qword [rbp + 56]>
new  <>

1185:
old  <>
new  < main_math$154:>

1186:
old  < main_math$136:>
new  <	; PostCall 24>

1187:
old  <	; Call math_test_2 24 0>
new  <>

1188:
old  <	mov qword [rbp + 24], main_math$137>
new  < main_math$155:>

1189:
old  <	mov [rbp + 32], rbp>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1190:
old  <	add rbp, 24>
new  <>

1191:
old  <	jmp math_test_2>
new  < main_math$156:>

1192:
old  <>
new  <	; PushFloat -2.0>

1193:
old  < main_math$137:>
new  <	fld qword [float8$minus2.0#]>

1194:
old  <	; PostCall 24>
new  <>

1195:
old  <>
new  < main_math$157:>

1196:
old  < main_math$138:>
new  <	; Parameter double -2.0 48>

1197:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	fstp qword [rbp + 48]>

1199:
old  < main_math$139:>
new  < main_math$158:>

1200:
old  <	; PushFloat -1.0>
new  <	; PushFloat -4.0>

1201:
old  <	fld qword [float8$minus1.0#]>
new  <	fld qword [float8$minus4.0#]>

1203:
old  < main_math$140:>
new  < main_math$159:>

1204:
old  <	; Parameter double -1.0 48>
new  <	; Parameter double -4.0 56>

1205:
old  <	fstp qword [rbp + 48]>
new  <	fstp qword [rbp + 56]>

1207:
old  < main_math$141:>
new  < main_math$160:>

1208:
old  <	; PushFloat -1.0>
new  <	; Call math_test_2 24 0>

1209:
old  <	fld qword [float8$minus1.0#]>
new  <	mov qword [rbp + 24], main_math$161>

1210:
old  <>
new  <	mov [rbp + 32], rbp>

1211:
old  < main_math$142:>
new  <	add rbp, 24>

1212:
old  <	; Parameter double -1.0 56>
new  <	jmp math_test_2>

1213:
old  <	fstp qword [rbp + 56]>
new  <>

1214:
old  <>
new  < main_math$161:>

1215:
old  < main_math$143:>
new  <	; PostCall 24>

1216:
old  <	; Call math_test_2 24 0>
new  <>

1217:
old  <	mov qword [rbp + 24], main_math$144>
new  < main_math$162:>

1218:
old  <	mov [rbp + 32], rbp>
new  <	; Return>

1219:
old  <	add rbp, 24>
new  <	mov rax, [rbp]>

1220:
old  <	jmp math_test_2>
new  <	mov rdi, [rbp + 16]>

1221:
old  <>
new  <	mov rbp, [rbp + 8]>

1222:
old  < main_math$144:>
new  <	jmp rax>

1223:
old  <	; PostCall 24>
new  <>

1224:
old  <>
new  < main_math$163:>

1225:
old  < main_math$145:>
new  <	; FunctionEnd main_math>

1226:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1227:
old  <>
new  <section .data>

1228:
old  < main_math$146:>
new  <>

1229:
old  <	; PushFloat -2.0>
new  <string_3C25f3E0A#:>

1230:
old  <	fld qword [float8$minus2.0#]>
new  <	; Initializer String <%f>\n>

1231:
old  <>
new  <	db "<%f>", 10, 0>

1232:
old  < main_math$147:>
new  <>

1233:
old  <	; Parameter double -2.0 48>
new  <section .data>

1234:
old  <	fstp qword [rbp + 48]>
new  <>

1235:
old  <>
new  <string_2020sin2825f29203D2025f2C20errno203D2025i0A#:>

1236:
old  < main_math$148:>
new  <	; Initializer String   sin(%f) = %f, errno = %i\n>

1237:
old  <	; PushFloat -4.0>
new  <	db "  sin(%f) = %f, errno = %i", 10, 0>

1238:
old  <	fld qword [float8$minus4.0#]>
new  <>

1239:
old  <>
new  <section .data>

1240:
old  < main_math$149:>
new  <>

1241:
old  <	; Parameter double -4.0 56>
new  <string_2020cos2825f29203D2025f2C20errno203D2025i0A#:>

1242:
old  <	fstp qword [rbp + 56]>
new  <	; Initializer String   cos(%f) = %f, errno = %i\n>

1243:
old  <>
new  <	db "  cos(%f) = %f, errno = %i", 10, 0>

1244:
old  < main_math$150:>
new  <>

1245:
old  <	; Call math_test_2 24 0>
new  <section .data>

1246:
old  <	mov qword [rbp + 24], main_math$151>
new  <>

1247:
old  <	mov [rbp + 32], rbp>
new  <string_2020tan2825f29203D2025f2C20errno203D2025i0A#:>

1248:
old  <	add rbp, 24>
new  <	; Initializer String   tan(%f) = %f, errno = %i\n>

1249:
old  <	jmp math_test_2>
new  <	db "  tan(%f) = %f, errno = %i", 10, 0>

1251:
old  < main_math$151:>
new  <section .data>

1252:
old  <	; PostCall 24>
new  <>

1253:
old  <>
new  <string_2020asin2825f29203D2025f2C20errno203D2025i0A#:>

1254:
old  < main_math$152:>
new  <	; Initializer String   asin(%f) = %f, errno = %i\n>

1255:
old  <	; Return>
new  <	db "  asin(%f) = %f, errno = %i", 10, 0>

1256:
old  <	mov rax, [rbp]>
new  <>

1257:
old  <	mov rdi, [rbp + 16]>
new  <section .data>

1258:
old  <	mov rbp, [rbp + 8]>
new  <>

1259:
old  <	jmp rax>
new  <string_2020exp2825f29203D2025f2C20errno203D2025i0A#:>

1260:
old  <>
new  <	; Initializer String   exp(%f) = %f, errno = %i\n>

1261:
old  < main_math$153:>
new  <	db "  exp(%f) = %f, errno = %i", 10, 0>

1262:
old  <	; FunctionEnd main_math>
new  <>

1263:
old  <>
new  <section .data>

1264:
old  <section .data>
new  <>

1265:
old  <>
new  <string_2020log2825f29203D2025f2C20errno203D2025i0A#:>

1266:
old  <string_3C25f3E0A#:>
new  <	; Initializer String   log(%f) = %f, errno = %i\n>

1267:
old  <	; Initializer String <%f>\n>
new  <	db "  log(%f) = %f, errno = %i", 10, 0>

1268:
old  <	db "<%f>", 10, 0>
new  <>

1269:
old  <>
new  <section .data>

1270:
old  <section .data>
new  <>

1271:
old  <>
new  <string_2020log102825f29203D2025f2C20errno203D2025i0A#:>

1272:
old  <string_2020sin2825f29203D2025f2C20errno203D2025i203C25s3E2C20#:>
new  <	; Initializer String   log10(%f) = %f, errno = %i\n>

1273:
old  <	; Initializer String   sin(%f) = %f, errno = %i <%s>, >
new  <	db "  log10(%f) = %f, errno = %i", 10, 0>

1274:
old  <	db "  sin(%f) = %f, errno = %i <%s>, ", 0>
new  <>

1275:
old  <>
new  <section .data>

1276:
old  <section .data>
new  <>

1277:
old  <>
new  <string_2020sinh2825f29203D2025f2C20errno203D2025i0A#:>

1278:
old  <string_2020cos2825f29203D2025f2C20errno203D2025i203C25s3E2C20#:>
new  <	; Initializer String   sinh(%f) = %f, errno = %i\n>

1279:
old  <	; Initializer String   cos(%f) = %f, errno = %i <%s>, >
new  <	db "  sinh(%f) = %f, errno = %i", 10, 0>

1280:
old  <	db "  cos(%f) = %f, errno = %i <%s>, ", 0>
new  <>

1281:
old  <>
new  <section .data>

1282:
old  <section .data>
new  <>

1283:
old  <>
new  <string_2020cosh2825f29203D2025f2C20errno203D2025i0A#:>

1284:
old  <string_2020tan2825f29203D2025f2C20errno203D2025i203C25s3E2C20#:>
new  <	; Initializer String   cosh(%f) = %f, errno = %i\n>

1285:
old  <	; Initializer String   tan(%f) = %f, errno = %i <%s>, >
new  <	db "  cosh(%f) = %f, errno = %i", 10, 0>

1286:
old  <	db "  tan(%f) = %f, errno = %i <%s>, ", 0>
new  <>

1287:
old  <>
new  <section .data>

1288:
old  <section .data>
new  <>

1289:
old  <>
new  <string_2020tanh2825f29203D2025f2C20errno203D2025i0A#:>

1290:
old  <string_2020asin2825f29203D2025f2C20errno203D2025i203C25s3E2C20#:>
new  <	; Initializer String   tanh(%f) = %f, errno = %i\n>

1291:
old  <	; Initializer String   asin(%f) = %f, errno = %i <%s>, >
new  <	db "  tanh(%f) = %f, errno = %i", 10, 0>

1292:
old  <	db "  asin(%f) = %f, errno = %i <%s>, ", 0>
new  <>

1293:
old  <>
new  <section .data>

1294:
old  <section .data>
new  <>

1295:
old  <>
new  <string_2020sqrt2825f29203D2025f2C20errno203D2025i0A#:>

1296:
old  <string_2020exp2825f29203D2025f2C20errno203D2025i203C25s3E2C20#:>
new  <	; Initializer String   sqrt(%f) = %f, errno = %i\n>

1297:
old  <	; Initializer String   exp(%f) = %f, errno = %i <%s>, >
new  <	db "  sqrt(%f) = %f, errno = %i", 10, 0>

1298:
old  <	db "  exp(%f) = %f, errno = %i <%s>, ", 0>
new  <>

1299:
old  <>
new  <section .data>

1300:
old  <section .data>
new  <>

1301:
old  <>
new  <string_2020floor2825f29203D2025f2C20errno203D2025i0A#:>

1302:
old  <string_2020log2825f29203D2025f2C20errno203D2025i203C25s3E2C20#:>
new  <	; Initializer String   floor(%f) = %f, errno = %i\n>

1303:
old  <	; Initializer String   log(%f) = %f, errno = %i <%s>, >
new  <	db "  floor(%f) = %f, errno = %i", 10, 0>

1304:
old  <	db "  log(%f) = %f, errno = %i <%s>, ", 0>
new  <>

1305:
old  <>
new  <section .data>

1306:
old  <section .data>
new  <>

1307:
old  <>
new  <string_2020ceil2825f29203D2025f2C20errno203D2025i0A#:>

1308:
old  <string_2020log102825f29203D2025f2C20errno203D2025i203C25s3E2C20#:>
new  <	; Initializer String   ceil(%f) = %f, errno = %i\n>

1309:
old  <	; Initializer String   log10(%f) = %f, errno = %i <%s>, >
new  <	db "  ceil(%f) = %f, errno = %i", 10, 0>

1310:
old  <	db "  log10(%f) = %f, errno = %i <%s>, ", 0>
new  <>

1311:
old  <>
new  <section .data>

1312:
old  <section .data>
new  <>

1313:
old  <>
new  <string_2020fabs2825f29203D2025f2C20errno203D2025i0A#:>

1314:
old  <string_2020sinh2825f29203D2025f2C20errno203D2025i203C25s3E2C20#:>
new  <	; Initializer String   fabs(%f) = %f, errno = %i\n>

1315:
old  <	; Initializer String   sinh(%f) = %f, errno = %i <%s>, >
new  <	db "  fabs(%f) = %f, errno = %i", 10, 0>

1316:
old  <	db "  sinh(%f) = %f, errno = %i <%s>, ", 0>
new  <>

1317:
old  <>
new  <section .data>

1318:
old  <section .data>
new  <>

1319:
old  <>
new  <string_frexp202825f2C20p29203D202825f2C2025i292C20errno203D2025i0A#:>

1320:
old  <string_2020cosh2825f29203D2025f2C20errno203D2025i203C25s3E2C20#:>
new  <	; Initializer String frexp (%f, p) = (%f, %i), errno = %i\n>

1321:
old  <	; Initializer String   cosh(%f) = %f, errno = %i <%s>, >
new  <	db "frexp (%f, p) = (%f, %i), errno = %i", 10, 0>

1322:
old  <	db "  cosh(%f) = %f, errno = %i <%s>, ", 0>
new  <>

1323:
old  <>
new  <section .data>

1324:
old  <section .data>
new  <>

1325:
old  <>
new  <string_Error20message3A#:>

1326:
old  <string_2020tanh2825f29203D2025f2C20errno203D2025i203C25s3E2C20#:>
new  <	; Initializer String Error message:>

1327:
old  <	; Initializer String   tanh(%f) = %f, errno = %i <%s>, >
new  <	db "Error message:", 0>

1328:
old  <	db "  tanh(%f) = %f, errno = %i <%s>, ", 0>
new  <>

1329:
old  <>
new  <section .data>

1330:
old  <section .data>
new  <>

1331:
old  <>
new  <string_modf202825f2C20p29203D202825f2C2025f292C20errno203D2025i0A#:>

1332:
old  <string_2020sqrt2825f29203D2025f2C20errno203D2025i203C25s3E2C20#:>
new  <	; Initializer String modf (%f, p) = (%f, %f), errno = %i\n>

1333:
old  <	; Initializer String   sqrt(%f) = %f, errno = %i <%s>, >
new  <	db "modf (%f, p) = (%f, %f), errno = %i", 10, 0>

1334:
old  <	db "  sqrt(%f) = %f, errno = %i <%s>, ", 0>
new  <>

1335:
old  <>
new  <section .data>

1336:
old  <section .data>
new  <>

1337:
old  <>
new  <string_0A#:>

1338:
old  <string_2020floor2825f29203D2025f2C20errno203D2025i203C25s3E2C20#:>
new  <	; Initializer String \n>

1339:
old  <	; Initializer String   floor(%f) = %f, errno = %i <%s>, >
new  <	db 10, 0>

1340:
old  <	db "  floor(%f) = %f, errno = %i <%s>, ", 0>
new  <>

1341:
old  <>
new  <section .text>

1342:
old  <section .data>
new  <>

1343:
old  <>
new  < math_test_1:>

1344:
old  <string_2020ceil2825f29203D2025f2C20errno203D2025i203C25s3E2C20#:>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1345:
old  <	; Initializer String   ceil(%f) = %f, errno = %i <%s>, >
new  <>

1346:
old  <	db "  ceil(%f) = %f, errno = %i <%s>, ", 0>
new  < math_test_1$1:>

1347:
old  <>
new  <	; Parameter pointer "<%f>\n" 56>

1348:
old  <section .data>
new  <	mov qword [rbp + 56], string_3C25f3E0A#>

1350:
old  <string_2020fabs2825f29203D2025f2C20errno203D2025i203C25s3E2C20#:>
new  < math_test_1$2:>

1351:
old  <	; Initializer String   fabs(%f) = %f, errno = %i <%s>, >
new  <	; PushFloat x>

1352:
old  <	db "  fabs(%f) = %f, errno = %i <%s>, ", 0>
new  <	fld qword [rbp + 24]>

1354:
old  <section .data>
new  < math_test_1$3:>

1355:
old  <>
new  <	; Parameter double x 64>

1356:
old  <string_frexp2028z2C20j29203D202825f2C2025i292C20errno203D2025i203C25s3E0A#:>
new  <	fstp qword [rbp + 64]>

1357:
old  <	; Initializer String frexp (z, j) = (%f, %i), errno = %i <%s>\n>
new  <>

1358:
old  <	db "frexp (z, j) = (%f, %i), errno = %i <%s>", 10, 0>
new  < math_test_1$4:>

1359:
old  <>
new  <	; Call printf 32 8>

1360:
old  <section .data>
new  <	mov qword [rbp + 32], math_test_1$5>

1361:
old  <>
new  <	mov [rbp + 40], rbp>

1362:
old  <string_Error20message3A#:>
new  <	add rbp, 32>

1363:
old  <	; Initializer String Error message:>
new  <	mov rdi, rbp>

1364:
old  <	db "Error message:", 0>
new  <	add rdi, 8>

1365:
old  <>
new  <	jmp printf>

1366:
old  <section .data>
new  <>

1367:
old  <>
new  < math_test_1$5:>

1368:
old  <string_modf2028z2C20w29203D202825f2C2025f292C20errno203D2025i203C25s3E0A#:>
new  <	; PostCall 32>

1369:
old  <	; Initializer String modf (z, w) = (%f, %f), errno = %i <%s>\n>
new  <>

1370:
old  <	db "modf (z, w) = (%f, %f), errno = %i <%s>", 10, 0>
new  < math_test_1$6:>

1371:
old  <>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1372:
old  <section .data>
new  <>

1373:
old  <>
new  < math_test_1$7:>

1374:
old  <string_0A#:>
new  <	; Parameter pointer "  sin(%f) = %f, errno = %i\n" 56>

1375:
old  <	; Initializer String \n>
new  <	mov qword [rbp + 56], string_2020sin2825f29203D2025f2C20errno203D2025i0A#>

1376:
old  <	db 10, 0>
new  <>

1377:
old  <>
new  < math_test_1$8:>

1378:
old  <section .text>
new  <	; PushFloat x>

1379:
old  <>
new  <	fld qword [rbp + 24]>

1380:
old  < math_test_1:>
new  <>

1381:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < math_test_1$9:>

1382:
old  <>
new  <	; Parameter double x 64>

1383:
old  < math_test_1$1:>
new  <	fstp qword [rbp + 64]>

1384:
old  <	; Parameter pointer "<%f>\n" 56>
new  <>

1385:
old  <	mov qword [rbp + 56], string_3C25f3E0A#>
new  < math_test_1$10:>

1386:
old  <>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1387:
old  < math_test_1$2:>
new  <>

1388:
old  <	; PushFloat x>
new  < math_test_1$11:>

1389:
old  <	fld qword [rbp + 24]>
new  <	; PushFloat x>

1390:
old  <>
new  <	fld qword [rbp + 24]>

1391:
old  < math_test_1$3:>
new  <>

1392:
old  <	; Parameter double x 64>
new  < math_test_1$12:>

1393:
old  <	fstp qword [rbp + 64]>
new  <	; Parameter double x 96>

1394:
old  <>
new  <	fstp qword [rbp + 96]>

1395:
old  < math_test_1$4:>
new  <>

1396:
old  <	; Call printf 32 8>
new  < math_test_1$13:>

1397:
old  <	mov qword [rbp + 32], math_test_1$5>
new  <	; Call sin 72 0>

1398:
old  <	mov [rbp + 40], rbp>
new  <	mov qword [rbp + 72], math_test_1$14>

1399:
old  <	add rbp, 32>
new  <	mov [rbp + 80], rbp>

1400:
old  <	mov rdi, rbp>
new  <	add rbp, 72>

1401:
old  <	add rdi, 8>
new  <	jmp sin>

1402:
old  <	jmp printf>
new  <>

1403:
old  <>
new  < math_test_1$14:>

1404:
old  < math_test_1$5:>
new  <	; PostCall 72>

1405:
old  <	; PostCall 32>
new  <>

1406:
old  <>
new  < math_test_1$15:>

1407:
old  < math_test_1$6:>
new  <	; GetReturnValue Â£temporary3175>

1408:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1409:
old  <>
new  < math_test_1$16:>

1410:
old  < math_test_1$7:>
new  <	; Parameter double Â£temporary3175 72>

1411:
old  <	; Parameter pointer "  sin(%f) = %f, errno = %i <%s>, " 56>
new  <	fstp qword [rbp + 72]>

1412:
old  <	mov qword [rbp + 56], string_2020sin2825f29203D2025f2C20errno203D2025i203C25s3E2C20#>
new  <>

1413:
old  <>
new  < math_test_1$17:>

1414:
old  < math_test_1$8:>
new  <	; Parameter signedint errno 80>

1415:
old  <	; PushFloat x>
new  <	mov eax, [errno]>

1416:
old  <	fld qword [rbp + 24]>
new  <	mov [rbp + 80], eax>

1418:
old  < math_test_1$9:>
new  < math_test_1$18:>

1419:
old  <	; Parameter double x 64>
new  <	; Call printf 32 20>

1420:
old  <	fstp qword [rbp + 64]>
new  <	mov qword [rbp + 32], math_test_1$19>

1421:
old  <>
new  <	mov [rbp + 40], rbp>

1422:
old  < math_test_1$10:>
new  <	add rbp, 32>

1423:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov rdi, rbp>

1424:
old  <>
new  <	add rdi, 20>

1425:
old  < math_test_1$11:>
new  <	jmp printf>

1426:
old  <	; PushFloat x>
new  <>

1427:
old  <	fld qword [rbp + 24]>
new  < math_test_1$19:>

1428:
old  <>
new  <	; PostCall 32>

1429:
old  < math_test_1$12:>
new  <>

1430:
old  <	; Parameter double x 96>
new  < math_test_1$20:>

1431:
old  <	fstp qword [rbp + 96]>
new  <	; Assign errno 0>

1432:
old  <>
new  <	mov dword [errno], 0>

1433:
old  < math_test_1$13:>
new  <>

1434:
old  <	; Call sin 72 0>
new  < math_test_1$21:>

1435:
old  <	mov qword [rbp + 72], math_test_1$14>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1436:
old  <	mov [rbp + 80], rbp>
new  <>

1437:
old  <	add rbp, 72>
new  < math_test_1$22:>

1438:
old  <	jmp sin>
new  <	; Parameter pointer "  cos(%f) = %f, errno = %i\n" 56>

1439:
old  <>
new  <	mov qword [rbp + 56], string_2020cos2825f29203D2025f2C20errno203D2025i0A#>

1440:
old  < math_test_1$14:>
new  <>

1441:
old  <	; PostCall 72>
new  < math_test_1$23:>

1442:
old  <>
new  <	; PushFloat x>

1443:
old  < math_test_1$15:>
new  <	fld qword [rbp + 24]>

1444:
old  <	; GetReturnValue Â£temporary3175>
new  <>

1445:
old  <>
new  < math_test_1$24:>

1446:
old  < math_test_1$16:>
new  <	; Parameter double x 64>

1447:
old  <	; Parameter double Â£temporary3175 72>
new  <	fstp qword [rbp + 64]>

1448:
old  <	fstp qword [rbp + 72]>
new  <>

1449:
old  <>
new  < math_test_1$25:>

1450:
old  < math_test_1$17:>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1451:
old  <	; Parameter signedint errno 80>
new  <>

1452:
old  <	mov eax, [errno]>
new  < math_test_1$26:>

1453:
old  <	mov [rbp + 80], eax>
new  <	; PushFloat x>

1454:
old  <>
new  <	fld qword [rbp + 24]>

1455:
old  < math_test_1$18:>
new  <>

1456:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < math_test_1$27:>

1457:
old  <>
new  <	; Parameter double x 96>

1458:
old  < math_test_1$19:>
new  <	fstp qword [rbp + 96]>

1459:
old  <	; Parameter signedint errno 108>
new  <>

1460:
old  <	mov eax, [errno]>
new  < math_test_1$28:>

1461:
old  <	mov [rbp + 108], eax>
new  <	; Call cos 72 0>

1462:
old  <>
new  <	mov qword [rbp + 72], math_test_1$29>

1463:
old  < math_test_1$20:>
new  <	mov [rbp + 80], rbp>

1464:
old  <	; Call strerror 84 0>
new  <	add rbp, 72>

1465:
old  <	mov qword [rbp + 84], math_test_1$21>
new  <	jmp cos>

1466:
old  <	mov [rbp + 92], rbp>
new  <>

1467:
old  <	add rbp, 84>
new  < math_test_1$29:>

1468:
old  <	jmp strerror>
new  <	; PostCall 72>

1470:
old  < math_test_1$21:>
new  < math_test_1$30:>

1471:
old  <	; PostCall 84>
new  <	; GetReturnValue Â£temporary3177>

1473:
old  < math_test_1$22:>
new  < math_test_1$31:>

1474:
old  <	; GetReturnValue Â£temporary3176>
new  <	; Parameter double Â£temporary3177 72>

1475:
old  <>
new  <	fstp qword [rbp + 72]>

1476:
old  < math_test_1$23:>
new  <>

1477:
old  <	; Parameter pointer Â£temporary3176 84>
new  < math_test_1$32:>

1478:
old  <	mov [rbp + 84], rbx>
new  <	; Parameter signedint errno 80>

1479:
old  <>
new  <	mov eax, [errno]>

1480:
old  < math_test_1$24:>
new  <	mov [rbp + 80], eax>

1481:
old  <	; Call printf 32 28>
new  <>

1482:
old  <	mov qword [rbp + 32], math_test_1$25>
new  < math_test_1$33:>

1483:
old  <	mov [rbp + 40], rbp>
new  <	; Call printf 32 20>

1484:
old  <	add rbp, 32>
new  <	mov qword [rbp + 32], math_test_1$34>

1485:
old  <	mov rdi, rbp>
new  <	mov [rbp + 40], rbp>

1486:
old  <	add rdi, 28>
new  <	add rbp, 32>

1487:
old  <	jmp printf>
new  <	mov rdi, rbp>

1488:
old  <>
new  <	add rdi, 20>

1489:
old  < math_test_1$25:>
new  <	jmp printf>

1490:
old  <	; PostCall 32>
new  <>

1491:
old  <>
new  < math_test_1$34:>

1492:
old  < math_test_1$26:>
new  <	; PostCall 32>

1493:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1494:
old  <>
new  < math_test_1$35:>

1495:
old  < math_test_1$27:>
new  <	; Assign errno 0>

1496:
old  <	; Parameter pointer "Error message" 56>
new  <	mov dword [errno], 0>

1497:
old  <	mov qword [rbp + 56], string_Error20message#>
new  <>

1498:
old  <>
new  < math_test_1$36:>

1499:
old  < math_test_1$28:>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1500:
old  <	; Call perror 32 0>
new  <>

1501:
old  <	mov qword [rbp + 32], math_test_1$29>
new  < math_test_1$37:>

1502:
old  <	mov [rbp + 40], rbp>
new  <	; Parameter pointer "  tan(%f) = %f, errno = %i\n" 56>

1503:
old  <	add rbp, 32>
new  <	mov qword [rbp + 56], string_2020tan2825f29203D2025f2C20errno203D2025i0A#>

1504:
old  <	jmp perror>
new  <>

1505:
old  <>
new  < math_test_1$38:>

1506:
old  < math_test_1$29:>
new  <	; PushFloat x>

1507:
old  <	; PostCall 32>
new  <	fld qword [rbp + 24]>

1509:
old  < math_test_1$30:>
new  < math_test_1$39:>

1510:
old  <	; Assign errno 0>
new  <	; Parameter double x 64>

1511:
old  <	mov dword [errno], 0>
new  <	fstp qword [rbp + 64]>

1513:
old  < math_test_1$31:>
new  < math_test_1$40:>

1516:
old  < math_test_1$32:>
new  < math_test_1$41:>

1517:
old  <	; Parameter pointer "  cos(%f) = %f, errno = %i <%s>, " 56>
new  <	; PushFloat x>

1518:
old  <	mov qword [rbp + 56], string_2020cos2825f29203D2025f2C20errno203D2025i203C25s3E2C20#>
new  <	fld qword [rbp + 24]>

1520:
old  < math_test_1$33:>
new  < math_test_1$42:>

1521:
old  <	; PushFloat x>
new  <	; Parameter double x 96>

1522:
old  <	fld qword [rbp + 24]>
new  <	fstp qword [rbp + 96]>

1524:
old  < math_test_1$34:>
new  < math_test_1$43:>

1525:
old  <	; Parameter double x 64>
new  <	; Call tan 72 0>

1526:
old  <	fstp qword [rbp + 64]>
new  <	mov qword [rbp + 72], math_test_1$44>

1527:
old  <>
new  <	mov [rbp + 80], rbp>

1528:
old  < math_test_1$35:>
new  <	add rbp, 72>

1529:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	jmp tan>

1531:
old  < math_test_1$36:>
new  < math_test_1$44:>

1532:
old  <	; PushFloat x>
new  <	; PostCall 72>

1533:
old  <	fld qword [rbp + 24]>
new  <>

1534:
old  <>
new  < math_test_1$45:>

1535:
old  < math_test_1$37:>
new  <	; GetReturnValue Â£temporary3179>

1536:
old  <	; Parameter double x 96>
new  <>

1537:
old  <	fstp qword [rbp + 96]>
new  < math_test_1$46:>

1538:
old  <>
new  <	; Parameter double Â£temporary3179 72>

1539:
old  < math_test_1$38:>
new  <	fstp qword [rbp + 72]>

1540:
old  <	; Call cos 72 0>
new  <>

1541:
old  <	mov qword [rbp + 72], math_test_1$39>
new  < math_test_1$47:>

1542:
old  <	mov [rbp + 80], rbp>
new  <	; Parameter signedint errno 80>

1543:
old  <	add rbp, 72>
new  <	mov eax, [errno]>

1544:
old  <	jmp cos>
new  <	mov [rbp + 80], eax>

1546:
old  < math_test_1$39:>
new  < math_test_1$48:>

1547:
old  <	; PostCall 72>
new  <	; Call printf 32 20>

1548:
old  <>
new  <	mov qword [rbp + 32], math_test_1$49>

1549:
old  < math_test_1$40:>
new  <	mov [rbp + 40], rbp>

1550:
old  <	; GetReturnValue Â£temporary3179>
new  <	add rbp, 32>

1551:
old  <>
new  <	mov rdi, rbp>

1552:
old  < math_test_1$41:>
new  <	add rdi, 20>

1553:
old  <	; Parameter double Â£temporary3179 72>
new  <	jmp printf>

1554:
old  <	fstp qword [rbp + 72]>
new  <>

1555:
old  <>
new  < math_test_1$49:>

1556:
old  < math_test_1$42:>
new  <	; PostCall 32>

1557:
old  <	; Parameter signedint errno 80>
new  <>

1558:
old  <	mov eax, [errno]>
new  < math_test_1$50:>

1559:
old  <	mov [rbp + 80], eax>
new  <	; Assign errno 0>

1560:
old  <>
new  <	mov dword [errno], 0>

1561:
old  < math_test_1$43:>
new  <>

1562:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < math_test_1$51:>

1563:
old  <>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1564:
old  < math_test_1$44:>
new  <>

1565:
old  <	; Parameter signedint errno 108>
new  < math_test_1$52:>

1566:
old  <	mov eax, [errno]>
new  <	; Parameter pointer "  asin(%f) = %f, errno = %i\n" 56>

1567:
old  <	mov [rbp + 108], eax>
new  <	mov qword [rbp + 56], string_2020asin2825f29203D2025f2C20errno203D2025i0A#>

1569:
old  < math_test_1$45:>
new  < math_test_1$53:>

1570:
old  <	; Call strerror 84 0>
new  <	; PushFloat x>

1571:
old  <	mov qword [rbp + 84], math_test_1$46>
new  <	fld qword [rbp + 24]>

1572:
old  <	mov [rbp + 92], rbp>
new  <>

1573:
old  <	add rbp, 84>
new  < math_test_1$54:>

1574:
old  <	jmp strerror>
new  <	; Parameter double x 64>

1575:
old  <>
new  <	fstp qword [rbp + 64]>

1576:
old  < math_test_1$46:>
new  <>

1577:
old  <	; PostCall 84>
new  < math_test_1$55:>

1578:
old  <>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1579:
old  < math_test_1$47:>
new  <>

1580:
old  <	; GetReturnValue Â£temporary3180>
new  < math_test_1$56:>

1581:
old  <>
new  <	; PushFloat x>

1582:
old  < math_test_1$48:>
new  <	fld qword [rbp + 24]>

1583:
old  <	; Parameter pointer Â£temporary3180 84>
new  <>

1584:
old  <	mov [rbp + 84], rbx>
new  < math_test_1$57:>

1585:
old  <>
new  <	; Parameter double x 96>

1586:
old  < math_test_1$49:>
new  <	fstp qword [rbp + 96]>

1587:
old  <	; Call printf 32 28>
new  <>

1588:
old  <	mov qword [rbp + 32], math_test_1$50>
new  < math_test_1$58:>

1589:
old  <	mov [rbp + 40], rbp>
new  <	; Call asin 72 0>

1590:
old  <	add rbp, 32>
new  <	mov qword [rbp + 72], math_test_1$59>

1591:
old  <	mov rdi, rbp>
new  <	mov [rbp + 80], rbp>

1592:
old  <	add rdi, 28>
new  <	add rbp, 72>

1593:
old  <	jmp printf>
new  <	jmp asin>

1595:
old  < math_test_1$50:>
new  < math_test_1$59:>

1596:
old  <	; PostCall 32>
new  <	; PostCall 72>

1598:
old  < math_test_1$51:>
new  < math_test_1$60:>

1599:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; GetReturnValue Â£temporary3181>

1601:
old  < math_test_1$52:>
new  < math_test_1$61:>

1602:
old  <	; Parameter pointer "Error message" 56>
new  <	; Parameter double Â£temporary3181 72>

1603:
old  <	mov qword [rbp + 56], string_Error20message#>
new  <	fstp qword [rbp + 72]>

1605:
old  < math_test_1$53:>
new  < math_test_1$62:>

1606:
old  <	; Call perror 32 0>
new  <	; Parameter signedint errno 80>

1607:
old  <	mov qword [rbp + 32], math_test_1$54>
new  <	mov eax, [errno]>

1608:
old  <	mov [rbp + 40], rbp>
new  <	mov [rbp + 80], eax>

1609:
old  <	add rbp, 32>
new  <>

1610:
old  <	jmp perror>
new  < math_test_1$63:>

1611:
old  <>
new  <	; Call printf 32 20>

1612:
old  < math_test_1$54:>
new  <	mov qword [rbp + 32], math_test_1$64>

1613:
old  <	; PostCall 32>
new  <	mov [rbp + 40], rbp>

1614:
old  <>
new  <	add rbp, 32>

1615:
old  < math_test_1$55:>
new  <	mov rdi, rbp>

1616:
old  <	; Assign errno 0>
new  <	add rdi, 20>

1617:
old  <	mov dword [errno], 0>
new  <	jmp printf>

1619:
old  < math_test_1$56:>
new  < math_test_1$64:>

1620:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; PostCall 32>

1622:
old  < math_test_1$57:>
new  < math_test_1$65:>

1623:
old  <	; Parameter pointer "  tan(%f) = %f, errno = %i <%s>, " 56>
new  <	; Assign errno 0>

1624:
old  <	mov qword [rbp + 56], string_2020tan2825f29203D2025f2C20errno203D2025i203C25s3E2C20#>
new  <	mov dword [errno], 0>

1626:
old  < math_test_1$58:>
new  < math_test_1$66:>

1627:
old  <	; PushFloat x>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1628:
old  <	fld qword [rbp + 24]>
new  <>

1629:
old  <>
new  < math_test_1$67:>

1630:
old  < math_test_1$59:>
new  <	; Parameter pointer "  acos(%f) = %f, errno = %i\n" 56>

1631:
old  <	; Parameter double x 64>
new  <	mov qword [rbp + 56], string_2020acos2825f29203D2025f2C20errno203D2025i0A#>

1632:
old  <	fstp qword [rbp + 64]>
new  <>

1633:
old  <>
new  < math_test_1$68:>

1634:
old  < math_test_1$60:>
new  <	; PushFloat x>

1635:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	fld qword [rbp + 24]>

1637:
old  < math_test_1$61:>
new  < math_test_1$69:>

1638:
old  <	; PushFloat x>
new  <	; Parameter double x 64>

1639:
old  <	fld qword [rbp + 24]>
new  <	fstp qword [rbp + 64]>

1641:
old  < math_test_1$62:>
new  < math_test_1$70:>

1642:
old  <	; Parameter double x 96>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1643:
old  <	fstp qword [rbp + 96]>
new  <>

1644:
old  <>
new  < math_test_1$71:>

1645:
old  < math_test_1$63:>
new  <	; PushFloat x>

1646:
old  <	; Call tan 72 0>
new  <	fld qword [rbp + 24]>

1647:
old  <	mov qword [rbp + 72], math_test_1$64>
new  <>

1648:
old  <	mov [rbp + 80], rbp>
new  < math_test_1$72:>

1649:
old  <	add rbp, 72>
new  <	; Parameter double x 96>

1650:
old  <	jmp tan>
new  <	fstp qword [rbp + 96]>

1652:
old  < math_test_1$64:>
new  < math_test_1$73:>

1653:
old  <	; PostCall 72>
new  <	; Call acos 72 0>

1654:
old  <>
new  <	mov qword [rbp + 72], math_test_1$74>

1655:
old  < math_test_1$65:>
new  <	mov [rbp + 80], rbp>

1656:
old  <	; GetReturnValue Â£temporary3183>
new  <	add rbp, 72>

1657:
old  <>
new  <	jmp acos>

1658:
old  < math_test_1$66:>
new  <>

1659:
old  <	; Parameter double Â£temporary3183 72>
new  < math_test_1$74:>

1660:
old  <	fstp qword [rbp + 72]>
new  <	; PostCall 72>

1662:
old  < math_test_1$67:>
new  < math_test_1$75:>

1663:
old  <	; Parameter signedint errno 80>
new  <	; GetReturnValue Â£temporary3183>

1664:
old  <	mov eax, [errno]>
new  <>

1665:
old  <	mov [rbp + 80], eax>
new  < math_test_1$76:>

1666:
old  <>
new  <	; Parameter double Â£temporary3183 72>

1667:
old  < math_test_1$68:>
new  <	fstp qword [rbp + 72]>

1668:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1669:
old  <>
new  < math_test_1$77:>

1670:
old  < math_test_1$69:>
new  <	; Parameter signedint errno 80>

1671:
old  <	; Parameter signedint errno 108>
new  <	mov eax, [errno]>

1672:
old  <	mov eax, [errno]>
new  <	mov [rbp + 80], eax>

1673:
old  <	mov [rbp + 108], eax>
new  <>

1674:
old  <>
new  < math_test_1$78:>

1675:
old  < math_test_1$70:>
new  <	; Call printf 32 20>

1676:
old  <	; Call strerror 84 0>
new  <	mov qword [rbp + 32], math_test_1$79>

1677:
old  <	mov qword [rbp + 84], math_test_1$71>
new  <	mov [rbp + 40], rbp>

1678:
old  <	mov [rbp + 92], rbp>
new  <	add rbp, 32>

1679:
old  <	add rbp, 84>
new  <	mov rdi, rbp>

1680:
old  <	jmp strerror>
new  <	add rdi, 20>

1681:
old  <>
new  <	jmp printf>

1682:
old  < math_test_1$71:>
new  <>

1683:
old  <	; PostCall 84>
new  < math_test_1$79:>

1684:
old  <>
new  <	; PostCall 32>

1685:
old  < math_test_1$72:>
new  <>

1686:
old  <	; GetReturnValue Â£temporary3184>
new  < math_test_1$80:>

1687:
old  <>
new  <	; Assign errno 0>

1688:
old  < math_test_1$73:>
new  <	mov dword [errno], 0>

1689:
old  <	; Parameter pointer Â£temporary3184 84>
new  <>

1690:
old  <	mov [rbp + 84], rbx>
new  < math_test_1$81:>

1691:
old  <>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1692:
old  < math_test_1$74:>
new  <>

1693:
old  <	; Call printf 32 28>
new  < math_test_1$82:>

1694:
old  <	mov qword [rbp + 32], math_test_1$75>
new  <	; Parameter pointer "  atan(%f) = %f, errno = %i\n" 56>

1695:
old  <	mov [rbp + 40], rbp>
new  <	mov qword [rbp + 56], string_2020atan2825f29203D2025f2C20errno203D2025i0A#>

1696:
old  <	add rbp, 32>
new  <>

1697:
old  <	mov rdi, rbp>
new  < math_test_1$83:>

1698:
old  <	add rdi, 28>
new  <	; PushFloat x>

1699:
old  <	jmp printf>
new  <	fld qword [rbp + 24]>

1701:
old  < math_test_1$75:>
new  < math_test_1$84:>

1702:
old  <	; PostCall 32>
new  <	; Parameter double x 64>

1703:
old  <>
new  <	fstp qword [rbp + 64]>

1704:
old  < math_test_1$76:>
new  <>

1705:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < math_test_1$85:>

1706:
old  <>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1707:
old  < math_test_1$77:>
new  <>

1708:
old  <	; Parameter pointer "Error message" 56>
new  < math_test_1$86:>

1709:
old  <	mov qword [rbp + 56], string_Error20message#>
new  <	; PushFloat x>

1710:
old  <>
new  <	fld qword [rbp + 24]>

1711:
old  < math_test_1$78:>
new  <>

1712:
old  <	; Call perror 32 0>
new  < math_test_1$87:>

1713:
old  <	mov qword [rbp + 32], math_test_1$79>
new  <	; Parameter double x 96>

1714:
old  <	mov [rbp + 40], rbp>
new  <	fstp qword [rbp + 96]>

1715:
old  <	add rbp, 32>
new  <>

1716:
old  <	jmp perror>
new  < math_test_1$88:>

1717:
old  <>
new  <	; Call atan 72 0>

1718:
old  < math_test_1$79:>
new  <	mov qword [rbp + 72], math_test_1$89>

1719:
old  <	; PostCall 32>
new  <	mov [rbp + 80], rbp>

1720:
old  <>
new  <	add rbp, 72>

1721:
old  < math_test_1$80:>
new  <	jmp atan>

1722:
old  <	; Assign errno 0>
new  <>

1723:
old  <	mov dword [errno], 0>
new  < math_test_1$89:>

1724:
old  <>
new  <	; PostCall 72>

1725:
old  < math_test_1$81:>
new  <>

1726:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < math_test_1$90:>

1727:
old  <>
new  <	; GetReturnValue Â£temporary3185>

1728:
old  < math_test_1$82:>
new  <>

1729:
old  <	; Parameter pointer "  asin(%f) = %f, errno = %i <%s>, " 56>
new  < math_test_1$91:>

1730:
old  <	mov qword [rbp + 56], string_2020asin2825f29203D2025f2C20errno203D2025i203C25s3E2C20#>
new  <	; Parameter double Â£temporary3185 72>

1731:
old  <>
new  <	fstp qword [rbp + 72]>

1732:
old  < math_test_1$83:>
new  <>

1733:
old  <	; PushFloat x>
new  < math_test_1$92:>

1734:
old  <	fld qword [rbp + 24]>
new  <	; Parameter signedint errno 80>

1735:
old  <>
new  <	mov eax, [errno]>

1736:
old  < math_test_1$84:>
new  <	mov [rbp + 80], eax>

1737:
old  <	; Parameter double x 64>
new  <>

1738:
old  <	fstp qword [rbp + 64]>
new  < math_test_1$93:>

1739:
old  <>
new  <	; Call printf 32 20>

1740:
old  < math_test_1$85:>
new  <	mov qword [rbp + 32], math_test_1$94>

1741:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov [rbp + 40], rbp>

1742:
old  <>
new  <	add rbp, 32>

1743:
old  < math_test_1$86:>
new  <	mov rdi, rbp>

1744:
old  <	; PushFloat x>
new  <	add rdi, 20>

1745:
old  <	fld qword [rbp + 24]>
new  <	jmp printf>

1747:
old  < math_test_1$87:>
new  < math_test_1$94:>

1748:
old  <	; Parameter double x 96>
new  <	; PostCall 32>

1749:
old  <	fstp qword [rbp + 96]>
new  <>

1750:
old  <>
new  < math_test_1$95:>

1751:
old  < math_test_1$88:>
new  <	; Assign errno 0>

1752:
old  <	; Call asin 72 0>
new  <	mov dword [errno], 0>

1753:
old  <	mov qword [rbp + 72], math_test_1$89>
new  <>

1754:
old  <	mov [rbp + 80], rbp>
new  < math_test_1$96:>

1755:
old  <	add rbp, 72>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1756:
old  <	jmp asin>
new  <>

1757:
old  <>
new  < math_test_1$97:>

1758:
old  < math_test_1$89:>
new  <	; Parameter pointer "  exp(%f) = %f, errno = %i\n" 56>

1759:
old  <	; PostCall 72>
new  <	mov qword [rbp + 56], string_2020exp2825f29203D2025f2C20errno203D2025i0A#>

1761:
old  < math_test_1$90:>
new  < math_test_1$98:>

1762:
old  <	; GetReturnValue Â£temporary3187>
new  <	; PushFloat x>

1763:
old  <>
new  <	fld qword [rbp + 24]>

1764:
old  < math_test_1$91:>
new  <>

1765:
old  <	; Parameter double Â£temporary3187 72>
new  < math_test_1$99:>

1766:
old  <	fstp qword [rbp + 72]>
new  <	; Parameter double x 64>

1767:
old  <>
new  <	fstp qword [rbp + 64]>

1768:
old  < math_test_1$92:>
new  <>

1769:
old  <	; Parameter signedint errno 80>
new  < math_test_1$100:>

1770:
old  <	mov eax, [errno]>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1771:
old  <	mov [rbp + 80], eax>
new  <>

1772:
old  <>
new  < math_test_1$101:>

1773:
old  < math_test_1$93:>
new  <	; PushFloat x>

1774:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	fld qword [rbp + 24]>

1776:
old  < math_test_1$94:>
new  < math_test_1$102:>

1777:
old  <	; Parameter signedint errno 108>
new  <	; Parameter double x 96>

1778:
old  <	mov eax, [errno]>
new  <	fstp qword [rbp + 96]>

1779:
old  <	mov [rbp + 108], eax>
new  <>

1780:
old  <>
new  < math_test_1$103:>

1781:
old  < math_test_1$95:>
new  <	; Call exp 72 0>

1782:
old  <	; Call strerror 84 0>
new  <	mov qword [rbp + 72], math_test_1$104>

1783:
old  <	mov qword [rbp + 84], math_test_1$96>
new  <	mov [rbp + 80], rbp>

1784:
old  <	mov [rbp + 92], rbp>
new  <	add rbp, 72>

1785:
old  <	add rbp, 84>
new  <	jmp exp>

1786:
old  <	jmp strerror>
new  <>

1787:
old  <>
new  < math_test_1$104:>

1788:
old  < math_test_1$96:>
new  <	; PostCall 72>

1789:
old  <	; PostCall 84>
new  <>

1790:
old  <>
new  < math_test_1$105:>

1791:
old  < math_test_1$97:>
new  <	; GetReturnValue Â£temporary3187>

1792:
old  <	; GetReturnValue Â£temporary3188>
new  <>

1793:
old  <>
new  < math_test_1$106:>

1794:
old  < math_test_1$98:>
new  <	; Parameter double Â£temporary3187 72>

1795:
old  <	; Parameter pointer Â£temporary3188 84>
new  <	fstp qword [rbp + 72]>

1796:
old  <	mov [rbp + 84], rbx>
new  <>

1797:
old  <>
new  < math_test_1$107:>

1798:
old  < math_test_1$99:>
new  <	; Parameter signedint errno 80>

1799:
old  <	; Call printf 32 28>
new  <	mov eax, [errno]>

1800:
old  <	mov qword [rbp + 32], math_test_1$100>
new  <	mov [rbp + 80], eax>

1801:
old  <	mov [rbp + 40], rbp>
new  <>

1802:
old  <	add rbp, 32>
new  < math_test_1$108:>

1803:
old  <	mov rdi, rbp>
new  <	; Call printf 32 20>

1804:
old  <	add rdi, 28>
new  <	mov qword [rbp + 32], math_test_1$109>

1805:
old  <	jmp printf>
new  <	mov [rbp + 40], rbp>

1806:
old  <>
new  <	add rbp, 32>

1807:
old  < math_test_1$100:>
new  <	mov rdi, rbp>

1808:
old  <	; PostCall 32>
new  <	add rdi, 20>

1809:
old  <>
new  <	jmp printf>

1810:
old  < math_test_1$101:>
new  <>

1811:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < math_test_1$109:>

1812:
old  <>
new  <	; PostCall 32>

1813:
old  < math_test_1$102:>
new  <>

1814:
old  <	; Parameter pointer "Error message" 56>
new  < math_test_1$110:>

1815:
old  <	mov qword [rbp + 56], string_Error20message#>
new  <	; Assign errno 0>

1816:
old  <>
new  <	mov dword [errno], 0>

1817:
old  < math_test_1$103:>
new  <>

1818:
old  <	; Call perror 32 0>
new  < math_test_1$111:>

1819:
old  <	mov qword [rbp + 32], math_test_1$104>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1820:
old  <	mov [rbp + 40], rbp>
new  <>

1821:
old  <	add rbp, 32>
new  < math_test_1$112:>

1822:
old  <	jmp perror>
new  <	; Parameter pointer "  log(%f) = %f, errno = %i\n" 56>

1823:
old  <>
new  <	mov qword [rbp + 56], string_2020log2825f29203D2025f2C20errno203D2025i0A#>

1824:
old  < math_test_1$104:>
new  <>

1825:
old  <	; PostCall 32>
new  < math_test_1$113:>

1826:
old  <>
new  <	; PushFloat x>

1827:
old  < math_test_1$105:>
new  <	fld qword [rbp + 24]>

1828:
old  <	; Assign errno 0>
new  <>

1829:
old  <	mov dword [errno], 0>
new  < math_test_1$114:>

1830:
old  <>
new  <	; Parameter double x 64>

1831:
old  < math_test_1$106:>
new  <	fstp qword [rbp + 64]>

1832:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1833:
old  <>
new  < math_test_1$115:>

1834:
old  < math_test_1$107:>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1835:
old  <	; Parameter pointer "  acos(%f) = %f, errno = %i <%s>, " 56>
new  <>

1836:
old  <	mov qword [rbp + 56], string_2020acos2825f29203D2025f2C20errno203D2025i203C25s3E2C20#>
new  < math_test_1$116:>

1837:
old  <>
new  <	; PushFloat x>

1838:
old  < math_test_1$108:>
new  <	fld qword [rbp + 24]>

1839:
old  <	; PushFloat x>
new  <>

1840:
old  <	fld qword [rbp + 24]>
new  < math_test_1$117:>

1841:
old  <>
new  <	; Parameter double x 96>

1842:
old  < math_test_1$109:>
new  <	fstp qword [rbp + 96]>

1843:
old  <	; Parameter double x 64>
new  <>

1844:
old  <	fstp qword [rbp + 64]>
new  < math_test_1$118:>

1845:
old  <>
new  <	; Call log 72 0>

1846:
old  < math_test_1$110:>
new  <	mov qword [rbp + 72], math_test_1$119>

1847:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov [rbp + 80], rbp>

1848:
old  <>
new  <	add rbp, 72>

1849:
old  < math_test_1$111:>
new  <	jmp log>

1850:
old  <	; PushFloat x>
new  <>

1851:
old  <	fld qword [rbp + 24]>
new  < math_test_1$119:>

1852:
old  <>
new  <	; PostCall 72>

1853:
old  < math_test_1$112:>
new  <>

1854:
old  <	; Parameter double x 96>
new  < math_test_1$120:>

1855:
old  <	fstp qword [rbp + 96]>
new  <	; GetReturnValue Â£temporary3189>

1857:
old  < math_test_1$113:>
new  < math_test_1$121:>

1858:
old  <	; Call acos 72 0>
new  <	; Parameter double Â£temporary3189 72>

1859:
old  <	mov qword [rbp + 72], math_test_1$114>
new  <	fstp qword [rbp + 72]>

1860:
old  <	mov [rbp + 80], rbp>
new  <>

1861:
old  <	add rbp, 72>
new  < math_test_1$122:>

1862:
old  <	jmp acos>
new  <	; Parameter signedint errno 80>

1863:
old  <>
new  <	mov eax, [errno]>

1864:
old  < math_test_1$114:>
new  <	mov [rbp + 80], eax>

1865:
old  <	; PostCall 72>
new  <>

1866:
old  <>
new  < math_test_1$123:>

1867:
old  < math_test_1$115:>
new  <	; Call printf 32 20>

1868:
old  <	; GetReturnValue Â£temporary3191>
new  <	mov qword [rbp + 32], math_test_1$124>

1869:
old  <>
new  <	mov [rbp + 40], rbp>

1870:
old  < math_test_1$116:>
new  <	add rbp, 32>

1871:
old  <	; Parameter double Â£temporary3191 72>
new  <	mov rdi, rbp>

1872:
old  <	fstp qword [rbp + 72]>
new  <	add rdi, 20>

1873:
old  <>
new  <	jmp printf>

1874:
old  < math_test_1$117:>
new  <>

1875:
old  <	; Parameter signedint errno 80>
new  < math_test_1$124:>

1876:
old  <	mov eax, [errno]>
new  <	; PostCall 32>

1877:
old  <	mov [rbp + 80], eax>
new  <>

1878:
old  <>
new  < math_test_1$125:>

1879:
old  < math_test_1$118:>
new  <	; Assign errno 0>

1880:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov dword [errno], 0>

1882:
old  < math_test_1$119:>
new  < math_test_1$126:>

1883:
old  <	; Parameter signedint errno 108>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1884:
old  <	mov eax, [errno]>
new  <>

1885:
old  <	mov [rbp + 108], eax>
new  < math_test_1$127:>

1886:
old  <>
new  <	; Parameter pointer "  log10(%f) = %f, errno = %i\n" 56>

1887:
old  < math_test_1$120:>
new  <	mov qword [rbp + 56], string_2020log102825f29203D2025f2C20errno203D2025i0A#>

1888:
old  <	; Call strerror 84 0>
new  <>

1889:
old  <	mov qword [rbp + 84], math_test_1$121>
new  < math_test_1$128:>

1890:
old  <	mov [rbp + 92], rbp>
new  <	; PushFloat x>

1891:
old  <	add rbp, 84>
new  <	fld qword [rbp + 24]>

1892:
old  <	jmp strerror>
new  <>

1893:
old  <>
new  < math_test_1$129:>

1894:
old  < math_test_1$121:>
new  <	; Parameter double x 64>

1895:
old  <	; PostCall 84>
new  <	fstp qword [rbp + 64]>

1897:
old  < math_test_1$122:>
new  < math_test_1$130:>

1898:
old  <	; GetReturnValue Â£temporary3192>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1900:
old  < math_test_1$123:>
new  < math_test_1$131:>

1901:
old  <	; Parameter pointer Â£temporary3192 84>
new  <	; PushFloat x>

1902:
old  <	mov [rbp + 84], rbx>
new  <	fld qword [rbp + 24]>

1904:
old  < math_test_1$124:>
new  < math_test_1$132:>

1905:
old  <	; Call printf 32 28>
new  <	; Parameter double x 96>

1906:
old  <	mov qword [rbp + 32], math_test_1$125>
new  <	fstp qword [rbp + 96]>

1907:
old  <	mov [rbp + 40], rbp>
new  <>

1908:
old  <	add rbp, 32>
new  < math_test_1$133:>

1909:
old  <	mov rdi, rbp>
new  <	; Call log10 72 0>

1910:
old  <	add rdi, 28>
new  <	mov qword [rbp + 72], math_test_1$134>

1911:
old  <	jmp printf>
new  <	mov [rbp + 80], rbp>

1912:
old  <>
new  <	add rbp, 72>

1913:
old  < math_test_1$125:>
new  <	jmp log10>

1914:
old  <	; PostCall 32>
new  <>

1915:
old  <>
new  < math_test_1$134:>

1916:
old  < math_test_1$126:>
new  <	; PostCall 72>

1917:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1918:
old  <>
new  < math_test_1$135:>

1919:
old  < math_test_1$127:>
new  <	; GetReturnValue Â£temporary3191>

1920:
old  <	; Parameter pointer "Error message" 56>
new  <>

1921:
old  <	mov qword [rbp + 56], string_Error20message#>
new  < math_test_1$136:>

1922:
old  <>
new  <	; Parameter double Â£temporary3191 72>

1923:
old  < math_test_1$128:>
new  <	fstp qword [rbp + 72]>

1924:
old  <	; Call perror 32 0>
new  <>

1925:
old  <	mov qword [rbp + 32], math_test_1$129>
new  < math_test_1$137:>

1926:
old  <	mov [rbp + 40], rbp>
new  <	; Parameter signedint errno 80>

1927:
old  <	add rbp, 32>
new  <	mov eax, [errno]>

1928:
old  <	jmp perror>
new  <	mov [rbp + 80], eax>

1930:
old  < math_test_1$129:>
new  < math_test_1$138:>

1931:
old  <	; PostCall 32>
new  <	; Call printf 32 20>

1932:
old  <>
new  <	mov qword [rbp + 32], math_test_1$139>

1933:
old  < math_test_1$130:>
new  <	mov [rbp + 40], rbp>

1934:
old  <	; Assign errno 0>
new  <	add rbp, 32>

1935:
old  <	mov dword [errno], 0>
new  <	mov rdi, rbp>

1936:
old  <>
new  <	add rdi, 20>

1937:
old  < math_test_1$131:>
new  <	jmp printf>

1938:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

1939:
old  <>
new  < math_test_1$139:>

1940:
old  < math_test_1$132:>
new  <	; PostCall 32>

1941:
old  <	; Parameter pointer "  atan(%f) = %f, errno = %i <%s>, " 56>
new  <>

1942:
old  <	mov qword [rbp + 56], string_2020atan2825f29203D2025f2C20errno203D2025i203C25s3E2C20#>
new  < math_test_1$140:>

1943:
old  <>
new  <	; Assign errno 0>

1944:
old  < math_test_1$133:>
new  <	mov dword [errno], 0>

1945:
old  <	; PushFloat x>
new  <>

1946:
old  <	fld qword [rbp + 24]>
new  < math_test_1$141:>

1947:
old  <>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1948:
old  < math_test_1$134:>
new  <>

1949:
old  <	; Parameter double x 64>
new  < math_test_1$142:>

1950:
old  <	fstp qword [rbp + 64]>
new  <	; Parameter pointer "  sinh(%f) = %f, errno = %i\n" 56>

1951:
old  <>
new  <	mov qword [rbp + 56], string_2020sinh2825f29203D2025f2C20errno203D2025i0A#>

1952:
old  < math_test_1$135:>
new  <>

1953:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < math_test_1$143:>

1954:
old  <>
new  <	; PushFloat x>

1955:
old  < math_test_1$136:>
new  <	fld qword [rbp + 24]>

1956:
old  <	; PushFloat x>
new  <>

1957:
old  <	fld qword [rbp + 24]>
new  < math_test_1$144:>

1958:
old  <>
new  <	; Parameter double x 64>

1959:
old  < math_test_1$137:>
new  <	fstp qword [rbp + 64]>

1960:
old  <	; Parameter double x 96>
new  <>

1961:
old  <	fstp qword [rbp + 96]>
new  < math_test_1$145:>

1962:
old  <>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1963:
old  < math_test_1$138:>
new  <>

1964:
old  <	; Call atan 72 0>
new  < math_test_1$146:>

1965:
old  <	mov qword [rbp + 72], math_test_1$139>
new  <	; PushFloat x>

1966:
old  <	mov [rbp + 80], rbp>
new  <	fld qword [rbp + 24]>

1967:
old  <	add rbp, 72>
new  <>

1968:
old  <	jmp atan>
new  < math_test_1$147:>

1969:
old  <>
new  <	; Parameter double x 96>

1970:
old  < math_test_1$139:>
new  <	fstp qword [rbp + 96]>

1971:
old  <	; PostCall 72>
new  <>

1972:
old  <>
new  < math_test_1$148:>

1973:
old  < math_test_1$140:>
new  <	; Call sinh 72 0>

1974:
old  <	; GetReturnValue Â£temporary3195>
new  <	mov qword [rbp + 72], math_test_1$149>

1975:
old  <>
new  <	mov [rbp + 80], rbp>

1976:
old  < math_test_1$141:>
new  <	add rbp, 72>

1977:
old  <	; Parameter double Â£temporary3195 72>
new  <	jmp sinh>

1978:
old  <	fstp qword [rbp + 72]>
new  <>

1979:
old  <>
new  < math_test_1$149:>

1980:
old  < math_test_1$142:>
new  <	; PostCall 72>

1981:
old  <	; Parameter signedint errno 80>
new  <>

1982:
old  <	mov eax, [errno]>
new  < math_test_1$150:>

1983:
old  <	mov [rbp + 80], eax>
new  <	; GetReturnValue Â£temporary3193>

1985:
old  < math_test_1$143:>
new  < math_test_1$151:>

1986:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter double Â£temporary3193 72>

1987:
old  <>
new  <	fstp qword [rbp + 72]>

1988:
old  < math_test_1$144:>
new  <>

1989:
old  <	; Parameter signedint errno 108>
new  < math_test_1$152:>

1990:
old  <	mov eax, [errno]>
new  <	; Parameter signedint errno 80>

1991:
old  <	mov [rbp + 108], eax>
new  <	mov eax, [errno]>

1992:
old  <>
new  <	mov [rbp + 80], eax>

1993:
old  < math_test_1$145:>
new  <>

1994:
old  <	; Call strerror 84 0>
new  < math_test_1$153:>

1995:
old  <	mov qword [rbp + 84], math_test_1$146>
new  <	; Call printf 32 20>

1996:
old  <	mov [rbp + 92], rbp>
new  <	mov qword [rbp + 32], math_test_1$154>

1997:
old  <	add rbp, 84>
new  <	mov [rbp + 40], rbp>

1998:
old  <	jmp strerror>
new  <	add rbp, 32>

1999:
old  <>
new  <	mov rdi, rbp>

2000:
old  < math_test_1$146:>
new  <	add rdi, 20>

2001:
old  <	; PostCall 84>
new  <	jmp printf>

2003:
old  < math_test_1$147:>
new  < math_test_1$154:>

2004:
old  <	; GetReturnValue Â£temporary3196>
new  <	; PostCall 32>

2006:
old  < math_test_1$148:>
new  < math_test_1$155:>

2007:
old  <	; Parameter pointer Â£temporary3196 84>
new  <	; Assign errno 0>

2008:
old  <	mov [rbp + 84], rbx>
new  <	mov dword [errno], 0>

2010:
old  < math_test_1$149:>
new  < math_test_1$156:>

2011:
old  <	; Call printf 32 28>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2012:
old  <	mov qword [rbp + 32], math_test_1$150>
new  <>

2013:
old  <	mov [rbp + 40], rbp>
new  < math_test_1$157:>

2014:
old  <	add rbp, 32>
new  <	; Parameter pointer "  cosh(%f) = %f, errno = %i\n" 56>

2015:
old  <	mov rdi, rbp>
new  <	mov qword [rbp + 56], string_2020cosh2825f29203D2025f2C20errno203D2025i0A#>

2016:
old  <	add rdi, 28>
new  <>

2017:
old  <	jmp printf>
new  < math_test_1$158:>

2018:
old  <>
new  <	; PushFloat x>

2019:
old  < math_test_1$150:>
new  <	fld qword [rbp + 24]>

2020:
old  <	; PostCall 32>
new  <>

2021:
old  <>
new  < math_test_1$159:>

2022:
old  < math_test_1$151:>
new  <	; Parameter double x 64>

2023:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	fstp qword [rbp + 64]>

2025:
old  < math_test_1$152:>
new  < math_test_1$160:>

2026:
old  <	; Parameter pointer "Error message" 56>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2027:
old  <	mov qword [rbp + 56], string_Error20message#>
new  <>

2028:
old  <>
new  < math_test_1$161:>

2029:
old  < math_test_1$153:>
new  <	; PushFloat x>

2030:
old  <	; Call perror 32 0>
new  <	fld qword [rbp + 24]>

2031:
old  <	mov qword [rbp + 32], math_test_1$154>
new  <>

2032:
old  <	mov [rbp + 40], rbp>
new  < math_test_1$162:>

2033:
old  <	add rbp, 32>
new  <	; Parameter double x 96>

2034:
old  <	jmp perror>
new  <	fstp qword [rbp + 96]>

2036:
old  < math_test_1$154:>
new  < math_test_1$163:>

2037:
old  <	; PostCall 32>
new  <	; Call cosh 72 0>

2038:
old  <>
new  <	mov qword [rbp + 72], math_test_1$164>

2039:
old  < math_test_1$155:>
new  <	mov [rbp + 80], rbp>

2040:
old  <	; Assign errno 0>
new  <	add rbp, 72>

2041:
old  <	mov dword [errno], 0>
new  <	jmp cosh>

2043:
old  < math_test_1$156:>
new  < math_test_1$164:>

2044:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; PostCall 72>

2046:
old  < math_test_1$157:>
new  < math_test_1$165:>

2047:
old  <	; Parameter pointer "  exp(%f) = %f, errno = %i <%s>, " 56>
new  <	; GetReturnValue Â£temporary3195>

2048:
old  <	mov qword [rbp + 56], string_2020exp2825f29203D2025f2C20errno203D2025i203C25s3E2C20#>
new  <>

2049:
old  <>
new  < math_test_1$166:>

2050:
old  < math_test_1$158:>
new  <	; Parameter double Â£temporary3195 72>

2051:
old  <	; PushFloat x>
new  <	fstp qword [rbp + 72]>

2052:
old  <	fld qword [rbp + 24]>
new  <>

2053:
old  <>
new  < math_test_1$167:>

2054:
old  < math_test_1$159:>
new  <	; Parameter signedint errno 80>

2055:
old  <	; Parameter double x 64>
new  <	mov eax, [errno]>

2056:
old  <	fstp qword [rbp + 64]>
new  <	mov [rbp + 80], eax>

2058:
old  < math_test_1$160:>
new  < math_test_1$168:>

2059:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Call printf 32 20>

2060:
old  <>
new  <	mov qword [rbp + 32], math_test_1$169>

2061:
old  < math_test_1$161:>
new  <	mov [rbp + 40], rbp>

2062:
old  <	; PushFloat x>
new  <	add rbp, 32>

2063:
old  <	fld qword [rbp + 24]>
new  <	mov rdi, rbp>

2064:
old  <>
new  <	add rdi, 20>

2065:
old  < math_test_1$162:>
new  <	jmp printf>

2066:
old  <	; Parameter double x 96>
new  <>

2067:
old  <	fstp qword [rbp + 96]>
new  < math_test_1$169:>

2068:
old  <>
new  <	; PostCall 32>

2069:
old  < math_test_1$163:>
new  <>

2070:
old  <	; Call exp 72 0>
new  < math_test_1$170:>

2071:
old  <	mov qword [rbp + 72], math_test_1$164>
new  <	; Assign errno 0>

2072:
old  <	mov [rbp + 80], rbp>
new  <	mov dword [errno], 0>

2073:
old  <	add rbp, 72>
new  <>

2074:
old  <	jmp exp>
new  < math_test_1$171:>

2075:
old  <>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2076:
old  < math_test_1$164:>
new  <>

2077:
old  <	; PostCall 72>
new  < math_test_1$172:>

2078:
old  <>
new  <	; Parameter pointer "  tanh(%f) = %f, errno = %i\n" 56>

2079:
old  < math_test_1$165:>
new  <	mov qword [rbp + 56], string_2020tanh2825f29203D2025f2C20errno203D2025i0A#>

2080:
old  <	; GetReturnValue Â£temporary3199>
new  <>

2081:
old  <>
new  < math_test_1$173:>

2082:
old  < math_test_1$166:>
new  <	; PushFloat x>

2083:
old  <	; Parameter double Â£temporary3199 72>
new  <	fld qword [rbp + 24]>

2084:
old  <	fstp qword [rbp + 72]>
new  <>

2085:
old  <>
new  < math_test_1$174:>

2086:
old  < math_test_1$167:>
new  <	; Parameter double x 64>

2087:
old  <	; Parameter signedint errno 80>
new  <	fstp qword [rbp + 64]>

2088:
old  <	mov eax, [errno]>
new  <>

2089:
old  <	mov [rbp + 80], eax>
new  < math_test_1$175:>

2090:
old  <>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2091:
old  < math_test_1$168:>
new  <>

2092:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < math_test_1$176:>

2093:
old  <>
new  <	; PushFloat x>

2094:
old  < math_test_1$169:>
new  <	fld qword [rbp + 24]>

2095:
old  <	; Parameter signedint errno 108>
new  <>

2096:
old  <	mov eax, [errno]>
new  < math_test_1$177:>

2097:
old  <	mov [rbp + 108], eax>
new  <	; Parameter double x 96>

2098:
old  <>
new  <	fstp qword [rbp + 96]>

2099:
old  < math_test_1$170:>
new  <>

2100:
old  <	; Call strerror 84 0>
new  < math_test_1$178:>

2101:
old  <	mov qword [rbp + 84], math_test_1$171>
new  <	; Call tanh 72 0>

2102:
old  <	mov [rbp + 92], rbp>
new  <	mov qword [rbp + 72], math_test_1$179>

2103:
old  <	add rbp, 84>
new  <	mov [rbp + 80], rbp>

2104:
old  <	jmp strerror>
new  <	add rbp, 72>

2105:
old  <>
new  <	jmp tanh>

2106:
old  < math_test_1$171:>
new  <>

2107:
old  <	; PostCall 84>
new  < math_test_1$179:>

2108:
old  <>
new  <	; PostCall 72>

2109:
old  < math_test_1$172:>
new  <>

2110:
old  <	; GetReturnValue Â£temporary3200>
new  < math_test_1$180:>

2111:
old  <>
new  <	; GetReturnValue Â£temporary3197>

2112:
old  < math_test_1$173:>
new  <>

2113:
old  <	; Parameter pointer Â£temporary3200 84>
new  < math_test_1$181:>

2114:
old  <	mov [rbp + 84], rbx>
new  <	; Parameter double Â£temporary3197 72>

2115:
old  <>
new  <	fstp qword [rbp + 72]>

2116:
old  < math_test_1$174:>
new  <>

2117:
old  <	; Call printf 32 28>
new  < math_test_1$182:>

2118:
old  <	mov qword [rbp + 32], math_test_1$175>
new  <	; Parameter signedint errno 80>

2119:
old  <	mov [rbp + 40], rbp>
new  <	mov eax, [errno]>

2120:
old  <	add rbp, 32>
new  <	mov [rbp + 80], eax>

2121:
old  <	mov rdi, rbp>
new  <>

2122:
old  <	add rdi, 28>
new  < math_test_1$183:>

2123:
old  <	jmp printf>
new  <	; Call printf 32 20>

2124:
old  <>
new  <	mov qword [rbp + 32], math_test_1$184>

2125:
old  < math_test_1$175:>
new  <	mov [rbp + 40], rbp>

2126:
old  <	; PostCall 32>
new  <	add rbp, 32>

2127:
old  <>
new  <	mov rdi, rbp>

2128:
old  < math_test_1$176:>
new  <	add rdi, 20>

2129:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	jmp printf>

2131:
old  < math_test_1$177:>
new  < math_test_1$184:>

2132:
old  <	; Parameter pointer "Error message" 56>
new  <	; PostCall 32>

2133:
old  <	mov qword [rbp + 56], string_Error20message#>
new  <>

2134:
old  <>
new  < math_test_1$185:>

2135:
old  < math_test_1$178:>
new  <	; Assign errno 0>

2136:
old  <	; Call perror 32 0>
new  <	mov dword [errno], 0>

2137:
old  <	mov qword [rbp + 32], math_test_1$179>
new  <>

2138:
old  <	mov [rbp + 40], rbp>
new  < math_test_1$186:>

2139:
old  <	add rbp, 32>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2140:
old  <	jmp perror>
new  <>

2141:
old  <>
new  < math_test_1$187:>

2142:
old  < math_test_1$179:>
new  <	; Parameter pointer "  sqrt(%f) = %f, errno = %i\n" 56>

2143:
old  <	; PostCall 32>
new  <	mov qword [rbp + 56], string_2020sqrt2825f29203D2025f2C20errno203D2025i0A#>

2145:
old  < math_test_1$180:>
new  < math_test_1$188:>

2146:
old  <	; Assign errno 0>
new  <	; PushFloat x>

2147:
old  <	mov dword [errno], 0>
new  <	fld qword [rbp + 24]>

2149:
old  < math_test_1$181:>
new  < math_test_1$189:>

2150:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter double x 64>

2151:
old  <>
new  <	fstp qword [rbp + 64]>

2152:
old  < math_test_1$182:>
new  <>

2153:
old  <	; Parameter pointer "  log(%f) = %f, errno = %i <%s>, " 56>
new  < math_test_1$190:>

2154:
old  <	mov qword [rbp + 56], string_2020log2825f29203D2025f2C20errno203D2025i203C25s3E2C20#>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2156:
old  < math_test_1$183:>
new  < math_test_1$191:>

2160:
old  < math_test_1$184:>
new  < math_test_1$192:>

2161:
old  <	; Parameter double x 64>
new  <	; Parameter double x 96>

2162:
old  <	fstp qword [rbp + 64]>
new  <	fstp qword [rbp + 96]>

2164:
old  < math_test_1$185:>
new  < math_test_1$193:>

2165:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Call sqrt 72 0>

2166:
old  <>
new  <	mov qword [rbp + 72], math_test_1$194>

2167:
old  < math_test_1$186:>
new  <	mov [rbp + 80], rbp>

2168:
old  <	; PushFloat x>
new  <	add rbp, 72>

2169:
old  <	fld qword [rbp + 24]>
new  <	jmp sqrt>

2171:
old  < math_test_1$187:>
new  < math_test_1$194:>

2172:
old  <	; Parameter double x 96>
new  <	; PostCall 72>

2173:
old  <	fstp qword [rbp + 96]>
new  <>

2174:
old  <>
new  < math_test_1$195:>

2175:
old  < math_test_1$188:>
new  <	; GetReturnValue Â£temporary3199>

2176:
old  <	; Call log 72 0>
new  <>

2177:
old  <	mov qword [rbp + 72], math_test_1$189>
new  < math_test_1$196:>

2178:
old  <	mov [rbp + 80], rbp>
new  <	; Parameter double Â£temporary3199 72>

2179:
old  <	add rbp, 72>
new  <	fstp qword [rbp + 72]>

2180:
old  <	jmp log>
new  <>

2181:
old  <>
new  < math_test_1$197:>

2182:
old  < math_test_1$189:>
new  <	; Parameter signedint errno 80>

2183:
old  <	; PostCall 72>
new  <	mov eax, [errno]>

2184:
old  <>
new  <	mov [rbp + 80], eax>

2185:
old  < math_test_1$190:>
new  <>

2186:
old  <	; GetReturnValue Â£temporary3203>
new  < math_test_1$198:>

2187:
old  <>
new  <	; Call printf 32 20>

2188:
old  < math_test_1$191:>
new  <	mov qword [rbp + 32], math_test_1$199>

2189:
old  <	; Parameter double Â£temporary3203 72>
new  <	mov [rbp + 40], rbp>

2190:
old  <	fstp qword [rbp + 72]>
new  <	add rbp, 32>

2191:
old  <>
new  <	mov rdi, rbp>

2192:
old  < math_test_1$192:>
new  <	add rdi, 20>

2193:
old  <	; Parameter signedint errno 80>
new  <	jmp printf>

2194:
old  <	mov eax, [errno]>
new  <>

2195:
old  <	mov [rbp + 80], eax>
new  < math_test_1$199:>

2196:
old  <>
new  <	; PostCall 32>

2197:
old  < math_test_1$193:>
new  <>

2198:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < math_test_1$200:>

2199:
old  <>
new  <	; Assign errno 0>

2200:
old  < math_test_1$194:>
new  <	mov dword [errno], 0>

2201:
old  <	; Parameter signedint errno 108>
new  <>

2202:
old  <	mov eax, [errno]>
new  < math_test_1$201:>

2203:
old  <	mov [rbp + 108], eax>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2205:
old  < math_test_1$195:>
new  < math_test_1$202:>

2206:
old  <	; Call strerror 84 0>
new  <	; Parameter pointer "  floor(%f) = %f, errno = %i\n" 56>

2207:
old  <	mov qword [rbp + 84], math_test_1$196>
new  <	mov qword [rbp + 56], string_2020floor2825f29203D2025f2C20errno203D2025i0A#>

2208:
old  <	mov [rbp + 92], rbp>
new  <>

2209:
old  <	add rbp, 84>
new  < math_test_1$203:>

2210:
old  <	jmp strerror>
new  <	; PushFloat x>

2211:
old  <>
new  <	fld qword [rbp + 24]>

2212:
old  < math_test_1$196:>
new  <>

2213:
old  <	; PostCall 84>
new  < math_test_1$204:>

2214:
old  <>
new  <	; Parameter double x 64>

2215:
old  < math_test_1$197:>
new  <	fstp qword [rbp + 64]>

2216:
old  <	; GetReturnValue Â£temporary3204>
new  <>

2217:
old  <>
new  < math_test_1$205:>

2218:
old  < math_test_1$198:>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2219:
old  <	; Parameter pointer Â£temporary3204 84>
new  <>

2220:
old  <	mov [rbp + 84], rbx>
new  < math_test_1$206:>

2221:
old  <>
new  <	; PushFloat x>

2222:
old  < math_test_1$199:>
new  <	fld qword [rbp + 24]>

2223:
old  <	; Call printf 32 28>
new  <>

2224:
old  <	mov qword [rbp + 32], math_test_1$200>
new  < math_test_1$207:>

2225:
old  <	mov [rbp + 40], rbp>
new  <	; Parameter double x 96>

2226:
old  <	add rbp, 32>
new  <	fstp qword [rbp + 96]>

2227:
old  <	mov rdi, rbp>
new  <>

2228:
old  <	add rdi, 28>
new  < math_test_1$208:>

2229:
old  <	jmp printf>
new  <	; Call floor 72 0>

2230:
old  <>
new  <	mov qword [rbp + 72], math_test_1$209>

2231:
old  < math_test_1$200:>
new  <	mov [rbp + 80], rbp>

2232:
old  <	; PostCall 32>
new  <	add rbp, 72>

2233:
old  <>
new  <	jmp floor>

2234:
old  < math_test_1$201:>
new  <>

2235:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < math_test_1$209:>

2236:
old  <>
new  <	; PostCall 72>

2237:
old  < math_test_1$202:>
new  <>

2238:
old  <	; Parameter pointer "Error message" 56>
new  < math_test_1$210:>

2239:
old  <	mov qword [rbp + 56], string_Error20message#>
new  <	; GetReturnValue Â£temporary3201>

2241:
old  < math_test_1$203:>
new  < math_test_1$211:>

2242:
old  <	; Call perror 32 0>
new  <	; Parameter double Â£temporary3201 72>

2243:
old  <	mov qword [rbp + 32], math_test_1$204>
new  <	fstp qword [rbp + 72]>

2244:
old  <	mov [rbp + 40], rbp>
new  <>

2245:
old  <	add rbp, 32>
new  < math_test_1$212:>

2246:
old  <	jmp perror>
new  <	; Parameter signedint errno 80>

2247:
old  <>
new  <	mov eax, [errno]>

2248:
old  < math_test_1$204:>
new  <	mov [rbp + 80], eax>

2249:
old  <	; PostCall 32>
new  <>

2250:
old  <>
new  < math_test_1$213:>

2251:
old  < math_test_1$205:>
new  <	; Call printf 32 20>

2252:
old  <	; Assign errno 0>
new  <	mov qword [rbp + 32], math_test_1$214>

2253:
old  <	mov dword [errno], 0>
new  <	mov [rbp + 40], rbp>

2254:
old  <>
new  <	add rbp, 32>

2255:
old  < math_test_1$206:>
new  <	mov rdi, rbp>

2256:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	add rdi, 20>

2257:
old  <>
new  <	jmp printf>

2258:
old  < math_test_1$207:>
new  <>

2259:
old  <	; Parameter pointer "  log10(%f) = %f, errno = %i <%s>, " 56>
new  < math_test_1$214:>

2260:
old  <	mov qword [rbp + 56], string_2020log102825f29203D2025f2C20errno203D2025i203C25s3E2C20#>
new  <	; PostCall 32>

2262:
old  < math_test_1$208:>
new  < math_test_1$215:>

2263:
old  <	; PushFloat x>
new  <	; Assign errno 0>

2264:
old  <	fld qword [rbp + 24]>
new  <	mov dword [errno], 0>

2266:
old  < math_test_1$209:>
new  < math_test_1$216:>

2267:
old  <	; Parameter double x 64>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2268:
old  <	fstp qword [rbp + 64]>
new  <>

2269:
old  <>
new  < math_test_1$217:>

2270:
old  < math_test_1$210:>
new  <	; Parameter pointer "  ceil(%f) = %f, errno = %i\n" 56>

2271:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov qword [rbp + 56], string_2020ceil2825f29203D2025f2C20errno203D2025i0A#>

2273:
old  < math_test_1$211:>
new  < math_test_1$218:>

2277:
old  < math_test_1$212:>
new  < math_test_1$219:>

2278:
old  <	; Parameter double x 96>
new  <	; Parameter double x 64>

2279:
old  <	fstp qword [rbp + 96]>
new  <	fstp qword [rbp + 64]>

2281:
old  < math_test_1$213:>
new  < math_test_1$220:>

2282:
old  <	; Call log10 72 0>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2283:
old  <	mov qword [rbp + 72], math_test_1$214>
new  <>

2284:
old  <	mov [rbp + 80], rbp>
new  < math_test_1$221:>

2285:
old  <	add rbp, 72>
new  <	; PushFloat x>

2286:
old  <	jmp log10>
new  <	fld qword [rbp + 24]>

2288:
old  < math_test_1$214:>
new  < math_test_1$222:>

2289:
old  <	; PostCall 72>
new  <	; Parameter double x 96>

2290:
old  <>
new  <	fstp qword [rbp + 96]>

2291:
old  < math_test_1$215:>
new  <>

2292:
old  <	; GetReturnValue Â£temporary3207>
new  < math_test_1$223:>

2293:
old  <>
new  <	; Call ceil 72 0>

2294:
old  < math_test_1$216:>
new  <	mov qword [rbp + 72], math_test_1$224>

2295:
old  <	; Parameter double Â£temporary3207 72>
new  <	mov [rbp + 80], rbp>

2296:
old  <	fstp qword [rbp + 72]>
new  <	add rbp, 72>

2297:
old  <>
new  <	jmp ceil>

2298:
old  < math_test_1$217:>
new  <>

2299:
old  <	; Parameter signedint errno 80>
new  < math_test_1$224:>

2300:
old  <	mov eax, [errno]>
new  <	; PostCall 72>

2301:
old  <	mov [rbp + 80], eax>
new  <>

2302:
old  <>
new  < math_test_1$225:>

2303:
old  < math_test_1$218:>
new  <	; GetReturnValue Â£temporary3203>

2304:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

2305:
old  <>
new  < math_test_1$226:>

2306:
old  < math_test_1$219:>
new  <	; Parameter double Â£temporary3203 72>

2307:
old  <	; Parameter signedint errno 108>
new  <	fstp qword [rbp + 72]>

2308:
old  <	mov eax, [errno]>
new  <>

2309:
old  <	mov [rbp + 108], eax>
new  < math_test_1$227:>

2310:
old  <>
new  <	; Parameter signedint errno 80>

2311:
old  < math_test_1$220:>
new  <	mov eax, [errno]>

2312:
old  <	; Call strerror 84 0>
new  <	mov [rbp + 80], eax>

2313:
old  <	mov qword [rbp + 84], math_test_1$221>
new  <>

2314:
old  <	mov [rbp + 92], rbp>
new  < math_test_1$228:>

2315:
old  <	add rbp, 84>
new  <	; Call printf 32 20>

2316:
old  <	jmp strerror>
new  <	mov qword [rbp + 32], math_test_1$229>

2317:
old  <>
new  <	mov [rbp + 40], rbp>

2318:
old  < math_test_1$221:>
new  <	add rbp, 32>

2319:
old  <	; PostCall 84>
new  <	mov rdi, rbp>

2320:
old  <>
new  <	add rdi, 20>

2321:
old  < math_test_1$222:>
new  <	jmp printf>

2322:
old  <	; GetReturnValue Â£temporary3208>
new  <>

2323:
old  <>
new  < math_test_1$229:>

2324:
old  < math_test_1$223:>
new  <	; PostCall 32>

2325:
old  <	; Parameter pointer Â£temporary3208 84>
new  <>

2326:
old  <	mov [rbp + 84], rbx>
new  < math_test_1$230:>

2327:
old  <>
new  <	; Assign errno 0>

2328:
old  < math_test_1$224:>
new  <	mov dword [errno], 0>

2329:
old  <	; Call printf 32 28>
new  <>

2330:
old  <	mov qword [rbp + 32], math_test_1$225>
new  < math_test_1$231:>

2331:
old  <	mov [rbp + 40], rbp>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2332:
old  <	add rbp, 32>
new  <>

2333:
old  <	mov rdi, rbp>
new  < math_test_1$232:>

2334:
old  <	add rdi, 28>
new  <	; Parameter pointer "  fabs(%f) = %f, errno = %i\n" 56>

2335:
old  <	jmp printf>
new  <	mov qword [rbp + 56], string_2020fabs2825f29203D2025f2C20errno203D2025i0A#>

2337:
old  < math_test_1$225:>
new  < math_test_1$233:>

2338:
old  <	; PostCall 32>
new  <	; PushFloat x>

2339:
old  <>
new  <	fld qword [rbp + 24]>

2340:
old  < math_test_1$226:>
new  <>

2341:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < math_test_1$234:>

2342:
old  <>
new  <	; Parameter double x 64>

2343:
old  < math_test_1$227:>
new  <	fstp qword [rbp + 64]>

2344:
old  <	; Parameter pointer "Error message" 56>
new  <>

2345:
old  <	mov qword [rbp + 56], string_Error20message#>
new  < math_test_1$235:>

2346:
old  <>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2347:
old  < math_test_1$228:>
new  <>

2348:
old  <	; Call perror 32 0>
new  < math_test_1$236:>

2349:
old  <	mov qword [rbp + 32], math_test_1$229>
new  <	; PushFloat x>

2350:
old  <	mov [rbp + 40], rbp>
new  <	fld qword [rbp + 24]>

2351:
old  <	add rbp, 32>
new  <>

2352:
old  <	jmp perror>
new  < math_test_1$237:>

2353:
old  <>
new  <	; Parameter double x 96>

2354:
old  < math_test_1$229:>
new  <	fstp qword [rbp + 96]>

2355:
old  <	; PostCall 32>
new  <>

2356:
old  <>
new  < math_test_1$238:>

2357:
old  < math_test_1$230:>
new  <	; Call fabs 72 0>

2358:
old  <	; Assign errno 0>
new  <	mov qword [rbp + 72], math_test_1$239>

2359:
old  <	mov dword [errno], 0>
new  <	mov [rbp + 80], rbp>

2360:
old  <>
new  <	add rbp, 72>

2361:
old  < math_test_1$231:>
new  <	jmp fabs>

2362:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

2363:
old  <>
new  < math_test_1$239:>

2364:
old  < math_test_1$232:>
new  <	; PostCall 72>

2365:
old  <	; Parameter pointer "  sinh(%f) = %f, errno = %i <%s>, " 56>
new  <>

2366:
old  <	mov qword [rbp + 56], string_2020sinh2825f29203D2025f2C20errno203D2025i203C25s3E2C20#>
new  < math_test_1$240:>

2367:
old  <>
new  <	; GetReturnValue Â£temporary3205>

2368:
old  < math_test_1$233:>
new  <>

2369:
old  <	; PushFloat x>
new  < math_test_1$241:>

2370:
old  <	fld qword [rbp + 24]>
new  <	; Parameter double Â£temporary3205 72>

2371:
old  <>
new  <	fstp qword [rbp + 72]>

2372:
old  < math_test_1$234:>
new  <>

2373:
old  <	; Parameter double x 64>
new  < math_test_1$242:>

2374:
old  <	fstp qword [rbp + 64]>
new  <	; Parameter signedint errno 80>

2375:
old  <>
new  <	mov eax, [errno]>

2376:
old  < math_test_1$235:>
new  <	mov [rbp + 80], eax>

2377:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

2378:
old  <>
new  < math_test_1$243:>

2379:
old  < math_test_1$236:>
new  <	; Call printf 32 20>

2380:
old  <	; PushFloat x>
new  <	mov qword [rbp + 32], math_test_1$244>

2381:
old  <	fld qword [rbp + 24]>
new  <	mov [rbp + 40], rbp>

2382:
old  <>
new  <	add rbp, 32>

2383:
old  < math_test_1$237:>
new  <	mov rdi, rbp>

2384:
old  <	; Parameter double x 96>
new  <	add rdi, 20>

2385:
old  <	fstp qword [rbp + 96]>
new  <	jmp printf>

2387:
old  < math_test_1$238:>
new  < math_test_1$244:>

2388:
old  <	; Call sinh 72 0>
new  <	; PostCall 32>

2389:
old  <	mov qword [rbp + 72], math_test_1$239>
new  <>

2390:
old  <	mov [rbp + 80], rbp>
new  < math_test_1$245:>

2391:
old  <	add rbp, 72>
new  <	; Assign errno 0>

2392:
old  <	jmp sinh>
new  <	mov dword [errno], 0>

2394:
old  < math_test_1$239:>
new  < math_test_1$246:>

2395:
old  <	; PostCall 72>
new  <	; Assign j 0>

2396:
old  <>
new  <	mov dword [rbp + 32], 0>

2397:
old  < math_test_1$240:>
new  <>

2398:
old  <	; GetReturnValue Â£temporary3211>
new  < math_test_1$247:>

2399:
old  <>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2400:
old  < math_test_1$241:>
new  <>

2401:
old  <	; Parameter double Â£temporary3211 72>
new  < math_test_1$248:>

2402:
old  <	fstp qword [rbp + 72]>
new  <	; PushFloat x>

2403:
old  <>
new  <	fld qword [rbp + 24]>

2404:
old  < math_test_1$242:>
new  <>

2405:
old  <	; Parameter signedint errno 80>
new  < math_test_1$249:>

2406:
old  <	mov eax, [errno]>
new  <	; Parameter double x 60>

2407:
old  <	mov [rbp + 80], eax>
new  <	fstp qword [rbp + 60]>

2409:
old  < math_test_1$243:>
new  < math_test_1$250:>

2410:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Address Â£temporary3207 j>

2411:
old  <>
new  <	mov rsi, rbp>

2412:
old  < math_test_1$244:>
new  <	add rsi, 32>

2413:
old  <	; Parameter signedint errno 108>
new  <>

2414:
old  <	mov eax, [errno]>
new  < math_test_1$251:>

2415:
old  <	mov [rbp + 108], eax>
new  <	; Parameter pointer Â£temporary3207 68>

2416:
old  <>
new  <	mov [rbp + 68], rsi>

2417:
old  < math_test_1$245:>
new  <>

2418:
old  <	; Call strerror 84 0>
new  < math_test_1$252:>

2419:
old  <	mov qword [rbp + 84], math_test_1$246>
new  <	; Call frexp 36 0>

2420:
old  <	mov [rbp + 92], rbp>
new  <	mov qword [rbp + 36], math_test_1$253>

2421:
old  <	add rbp, 84>
new  <	mov [rbp + 44], rbp>

2422:
old  <	jmp strerror>
new  <	add rbp, 36>

2423:
old  <>
new  <	jmp frexp>

2424:
old  < math_test_1$246:>
new  <>

2425:
old  <	; PostCall 84>
new  < math_test_1$253:>

2426:
old  <>
new  <	; PostCall 36>

2427:
old  < math_test_1$247:>
new  <>

2428:
old  <	; GetReturnValue Â£temporary3212>
new  < math_test_1$254:>

2429:
old  <>
new  <	; GetReturnValue Â£temporary3208>

2430:
old  < math_test_1$248:>
new  <>

2431:
old  <	; Parameter pointer Â£temporary3212 84>
new  < math_test_1$255:>

2432:
old  <	mov [rbp + 84], rbx>
new  <	; PopFloat z>

2433:
old  <>
new  <	fstp qword [rbp + 36]>

2434:
old  < math_test_1$249:>
new  <>

2435:
old  <	; Call printf 32 28>
new  < math_test_1$256:>

2436:
old  <	mov qword [rbp + 32], math_test_1$250>
new  <	; PreCall 44 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2437:
old  <	mov [rbp + 40], rbp>
new  <>

2438:
old  <	add rbp, 32>
new  < math_test_1$257:>

2439:
old  <	mov rdi, rbp>
new  <	; Parameter pointer "frexp (%f, p) = (%f, %i), errno = %i\n" 68>

2440:
old  <	add rdi, 28>
new  <	mov qword [rbp + 68], string_frexp202825f2C20p29203D202825f2C2025i292C20errno203D2025i0A#>

2441:
old  <	jmp printf>
new  <>

2442:
old  <>
new  < math_test_1$258:>

2443:
old  < math_test_1$250:>
new  <	; PushFloat x>

2444:
old  <	; PostCall 32>
new  <	fld qword [rbp + 24]>

2446:
old  < math_test_1$251:>
new  < math_test_1$259:>

2447:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter double x 76>

2448:
old  <>
new  <	fstp qword [rbp + 76]>

2449:
old  < math_test_1$252:>
new  <>

2450:
old  <	; Parameter pointer "Error message" 56>
new  < math_test_1$260:>

2451:
old  <	mov qword [rbp + 56], string_Error20message#>
new  <	; PushFloat z>

2452:
old  <>
new  <	fld qword [rbp + 36]>

2453:
old  < math_test_1$253:>
new  <>

2454:
old  <	; Call perror 32 0>
new  < math_test_1$261:>

2455:
old  <	mov qword [rbp + 32], math_test_1$254>
new  <	; Parameter double z 84>

2456:
old  <	mov [rbp + 40], rbp>
new  <	fstp qword [rbp + 84]>

2457:
old  <	add rbp, 32>
new  <>

2458:
old  <	jmp perror>
new  < math_test_1$262:>

2459:
old  <>
new  <	; Parameter signedint j 92>

2460:
old  < math_test_1$254:>
new  <	mov eax, [rbp + 32]>

2461:
old  <	; PostCall 32>
new  <	mov [rbp + 92], eax>

2463:
old  < math_test_1$255:>
new  < math_test_1$263:>

2464:
old  <	; Assign errno 0>
new  <	; Parameter signedint errno 96>

2465:
old  <	mov dword [errno], 0>
new  <	mov eax, [errno]>

2466:
old  <>
new  <	mov [rbp + 96], eax>

2467:
old  < math_test_1$256:>
new  <>

2468:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < math_test_1$264:>

2469:
old  <>
new  <	; Call printf 44 24>

2470:
old  < math_test_1$257:>
new  <	mov qword [rbp + 44], math_test_1$265>

2471:
old  <	; Parameter pointer "  cosh(%f) = %f, errno = %i <%s>, " 56>
new  <	mov [rbp + 52], rbp>

2472:
old  <	mov qword [rbp + 56], string_2020cosh2825f29203D2025f2C20errno203D2025i203C25s3E2C20#>
new  <	add rbp, 44>

2473:
old  <>
new  <	mov rdi, rbp>

2474:
old  < math_test_1$258:>
new  <	add rdi, 24>

2475:
old  <	; PushFloat x>
new  <	jmp printf>

2476:
old  <	fld qword [rbp + 24]>
new  <>

2477:
old  <>
new  < math_test_1$265:>

2478:
old  < math_test_1$259:>
new  <	; PostCall 44>

2479:
old  <	; Parameter double x 64>
new  <>

2480:
old  <	fstp qword [rbp + 64]>
new  < math_test_1$266:>

2481:
old  <>
new  <	; Equal 272 errno 0>

2482:
old  < math_test_1$260:>
new  <	cmp dword [errno], 0>

2483:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	je math_test_1$272>

2485:
old  < math_test_1$261:>
new  < math_test_1$267:>

2486:
old  <	; PushFloat x>
new  <	; PreCall 44 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2487:
old  <	fld qword [rbp + 24]>
new  <>

2488:
old  <>
new  < math_test_1$268:>

2489:
old  < math_test_1$262:>
new  <	; Parameter pointer "Error message:" 68>

2490:
old  <	; Parameter double x 96>
new  <	mov qword [rbp + 68], string_Error20message3A#>

2491:
old  <	fstp qword [rbp + 96]>
new  <>

2492:
old  <>
new  < math_test_1$269:>

2493:
old  < math_test_1$263:>
new  <	; Call perror 44 0>

2494:
old  <	; Call cosh 72 0>
new  <	mov qword [rbp + 44], math_test_1$270>

2495:
old  <	mov qword [rbp + 72], math_test_1$264>
new  <	mov [rbp + 52], rbp>

2496:
old  <	mov [rbp + 80], rbp>
new  <	add rbp, 44>

2497:
old  <	add rbp, 72>
new  <	jmp perror>

2498:
old  <	jmp cosh>
new  <>

2499:
old  <>
new  < math_test_1$270:>

2500:
old  < math_test_1$264:>
new  <	; PostCall 44>

2501:
old  <	; PostCall 72>
new  <>

2502:
old  <>
new  < math_test_1$271:>

2503:
old  < math_test_1$265:>
new  <	; Assign errno 0>

2504:
old  <	; GetReturnValue Â£temporary3215>
new  <	mov dword [errno], 0>

2506:
old  < math_test_1$266:>
new  < math_test_1$272:>

2507:
old  <	; Parameter double Â£temporary3215 72>
new  <	; PushFloat 0>

2508:
old  <	fstp qword [rbp + 72]>
new  <	fldz>

2510:
old  < math_test_1$267:>
new  < math_test_1$273:>

2511:
old  <	; Parameter signedint errno 80>
new  <	; PopFloat w>

2512:
old  <	mov eax, [errno]>
new  <	fstp qword [rbp + 32]>

2513:
old  <	mov [rbp + 80], eax>
new  <>

2514:
old  <>
new  < math_test_1$274:>

2515:
old  < math_test_1$268:>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2516:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

2517:
old  <>
new  < math_test_1$275:>

2518:
old  < math_test_1$269:>
new  <	; PushFloat x>

2519:
old  <	; Parameter signedint errno 108>
new  <	fld qword [rbp + 24]>

2520:
old  <	mov eax, [errno]>
new  <>

2521:
old  <	mov [rbp + 108], eax>
new  < math_test_1$276:>

2522:
old  <>
new  <	; Parameter double x 64>

2523:
old  < math_test_1$270:>
new  <	fstp qword [rbp + 64]>

2524:
old  <	; Call strerror 84 0>
new  <>

2525:
old  <	mov qword [rbp + 84], math_test_1$271>
new  < math_test_1$277:>

2526:
old  <	mov [rbp + 92], rbp>
new  <	; Address Â£temporary3212 w>

2527:
old  <	add rbp, 84>
new  <	mov rsi, rbp>

2528:
old  <	jmp strerror>
new  <	add rsi, 32>

2530:
old  < math_test_1$271:>
new  < math_test_1$278:>

2531:
old  <	; PostCall 84>
new  <	; Parameter pointer Â£temporary3212 72>

2532:
old  <>
new  <	mov [rbp + 72], rsi>

2533:
old  < math_test_1$272:>
new  <>

2534:
old  <	; GetReturnValue Â£temporary3216>
new  < math_test_1$279:>

2535:
old  <>
new  <	; Call modf 40 0>

2536:
old  < math_test_1$273:>
new  <	mov qword [rbp + 40], math_test_1$280>

2537:
old  <	; Parameter pointer Â£temporary3216 84>
new  <	mov [rbp + 48], rbp>

2538:
old  <	mov [rbp + 84], rbx>
new  <	add rbp, 40>

2539:
old  <>
new  <	jmp modf>

2540:
old  < math_test_1$274:>
new  <>

2541:
old  <	; Call printf 32 28>
new  < math_test_1$280:>

2542:
old  <	mov qword [rbp + 32], math_test_1$275>
new  <	; PostCall 40>

2543:
old  <	mov [rbp + 40], rbp>
new  <>

2544:
old  <	add rbp, 32>
new  < math_test_1$281:>

2545:
old  <	mov rdi, rbp>
new  <	; GetReturnValue Â£temporary3213>

2546:
old  <	add rdi, 28>
new  <>

2547:
old  <	jmp printf>
new  < math_test_1$282:>

2548:
old  <>
new  <	; PopFloat z>

2549:
old  < math_test_1$275:>
new  <	fstp qword [rbp + 40]>

2550:
old  <	; PostCall 32>
new  <>

2551:
old  <>
new  < math_test_1$283:>

2552:
old  < math_test_1$276:>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2553:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

2554:
old  <>
new  < math_test_1$284:>

2555:
old  < math_test_1$277:>
new  <	; Parameter pointer "modf (%f, p) = (%f, %f), errno = %i\n" 72>

2556:
old  <	; Parameter pointer "Error message" 56>
new  <	mov qword [rbp + 72], string_modf202825f2C20p29203D202825f2C2025f292C20errno203D2025i0A#>

2557:
old  <	mov qword [rbp + 56], string_Error20message#>
new  <>

2558:
old  <>
new  < math_test_1$285:>

2559:
old  < math_test_1$278:>
new  <	; PushFloat x>

2560:
old  <	; Call perror 32 0>
new  <	fld qword [rbp + 24]>

2561:
old  <	mov qword [rbp + 32], math_test_1$279>
new  <>

2562:
old  <	mov [rbp + 40], rbp>
new  < math_test_1$286:>

2563:
old  <	add rbp, 32>
new  <	; Parameter double x 80>

2564:
old  <	jmp perror>
new  <	fstp qword [rbp + 80]>

2566:
old  < math_test_1$279:>
new  < math_test_1$287:>

2567:
old  <	; PostCall 32>
new  <	; PushFloat z>

2568:
old  <>
new  <	fld qword [rbp + 40]>

2569:
old  < math_test_1$280:>
new  <>

2570:
old  <	; Assign errno 0>
new  < math_test_1$288:>

2571:
old  <	mov dword [errno], 0>
new  <	; Parameter double z 88>

2572:
old  <>
new  <	fstp qword [rbp + 88]>

2573:
old  < math_test_1$281:>
new  <>

2574:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < math_test_1$289:>

2575:
old  <>
new  <	; PushFloat w>

2576:
old  < math_test_1$282:>
new  <	fld qword [rbp + 32]>

2577:
old  <	; Parameter pointer "  tanh(%f) = %f, errno = %i <%s>, " 56>
new  <>

2578:
old  <	mov qword [rbp + 56], string_2020tanh2825f29203D2025f2C20errno203D2025i203C25s3E2C20#>
new  < math_test_1$290:>

2579:
old  <>
new  <	; Parameter double w 96>

2580:
old  < math_test_1$283:>
new  <	fstp qword [rbp + 96]>

2581:
old  <	; PushFloat x>
new  <>

2582:
old  <	fld qword [rbp + 24]>
new  < math_test_1$291:>

2583:
old  <>
new  <	; Parameter signedint errno 104>

2584:
old  < math_test_1$284:>
new  <	mov eax, [errno]>

2585:
old  <	; Parameter double x 64>
new  <	mov [rbp + 104], eax>

2586:
old  <	fstp qword [rbp + 64]>
new  <>

2587:
old  <>
new  < math_test_1$292:>

2588:
old  < math_test_1$285:>
new  <	; Call printf 48 28>

2589:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov qword [rbp + 48], math_test_1$293>

2590:
old  <>
new  <	mov [rbp + 56], rbp>

2591:
old  < math_test_1$286:>
new  <	add rbp, 48>

2592:
old  <	; PushFloat x>
new  <	mov rdi, rbp>

2593:
old  <	fld qword [rbp + 24]>
new  <	add rdi, 28>

2594:
old  <>
new  <	jmp printf>

2595:
old  < math_test_1$287:>
new  <>

2596:
old  <	; Parameter double x 96>
new  < math_test_1$293:>

2597:
old  <	fstp qword [rbp + 96]>
new  <	; PostCall 48>

2599:
old  < math_test_1$288:>
new  < math_test_1$294:>

2600:
old  <	; Call tanh 72 0>
new  <	; Equal 300 errno 0>

2601:
old  <	mov qword [rbp + 72], math_test_1$289>
new  <	cmp dword [errno], 0>

2602:
old  <	mov [rbp + 80], rbp>
new  <	je math_test_1$300>

2603:
old  <	add rbp, 72>
new  <>

2604:
old  <	jmp tanh>
new  < math_test_1$295:>

2605:
old  <>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2606:
old  < math_test_1$289:>
new  <>

2607:
old  <	; PostCall 72>
new  < math_test_1$296:>

2608:
old  <>
new  <	; Parameter pointer "Error message:" 72>

2609:
old  < math_test_1$290:>
new  <	mov qword [rbp + 72], string_Error20message3A#>

2610:
old  <	; GetReturnValue Â£temporary3219>
new  <>

2611:
old  <>
new  < math_test_1$297:>

2612:
old  < math_test_1$291:>
new  <	; Call perror 48 0>

2613:
old  <	; Parameter double Â£temporary3219 72>
new  <	mov qword [rbp + 48], math_test_1$298>

2614:
old  <	fstp qword [rbp + 72]>
new  <	mov [rbp + 56], rbp>

2615:
old  <>
new  <	add rbp, 48>

2616:
old  < math_test_1$292:>
new  <	jmp perror>

2617:
old  <	; Parameter signedint errno 80>
new  <>

2618:
old  <	mov eax, [errno]>
new  < math_test_1$298:>

2619:
old  <	mov [rbp + 80], eax>
new  <	; PostCall 48>

2621:
old  < math_test_1$293:>
new  < math_test_1$299:>

2622:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Assign errno 0>

2623:
old  <>
new  <	mov dword [errno], 0>

2624:
old  < math_test_1$294:>
new  <>

2625:
old  <	; Parameter signedint errno 108>
new  < math_test_1$300:>

2626:
old  <	mov eax, [errno]>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2627:
old  <	mov [rbp + 108], eax>
new  <>

2628:
old  <>
new  < math_test_1$301:>

2629:
old  < math_test_1$295:>
new  <	; Parameter pointer "\n" 56>

2630:
old  <	; Call strerror 84 0>
new  <	mov qword [rbp + 56], string_0A#>

2631:
old  <	mov qword [rbp + 84], math_test_1$296>
new  <>

2632:
old  <	mov [rbp + 92], rbp>
new  < math_test_1$302:>

2633:
old  <	add rbp, 84>
new  <	; Call printf 32 0>

2634:
old  <	jmp strerror>
new  <	mov qword [rbp + 32], math_test_1$303>

2635:
old  <>
new  <	mov [rbp + 40], rbp>

2636:
old  < math_test_1$296:>
new  <	add rbp, 32>

2637:
old  <	; PostCall 84>
new  <	mov rdi, rbp>

2638:
old  <>
new  <	jmp printf>

2639:
old  < math_test_1$297:>
new  <>

2640:
old  <	; GetReturnValue Â£temporary3220>
new  < math_test_1$303:>

2641:
old  <>
new  <	; PostCall 32>

2642:
old  < math_test_1$298:>
new  <>

2643:
old  <	; Parameter pointer Â£temporary3220 84>
new  < math_test_1$304:>

2644:
old  <	mov [rbp + 84], rbx>
new  <	; Return>

2645:
old  <>
new  <	mov rax, [rbp]>

2646:
old  < math_test_1$299:>
new  <	mov rdi, [rbp + 16]>

2647:
old  <	; Call printf 32 28>
new  <	mov rbp, [rbp + 8]>

2648:
old  <	mov qword [rbp + 32], math_test_1$300>
new  <	jmp rax>

2649:
old  <	mov [rbp + 40], rbp>
new  <>

2650:
old  <	add rbp, 32>
new  < math_test_1$305:>

2651:
old  <	mov rdi, rbp>
new  <	; FunctionEnd math_test_1>

2652:
old  <	add rdi, 28>
new  <>

2653:
old  <	jmp printf>
new  <section .data>

2655:
old  < math_test_1$300:>
new  <string_fmod2825f2C2025f29203D2025f2C20errno203D2025i0A#:>

2656:
old  <	; PostCall 32>
new  <	; Initializer String fmod(%f, %f) = %f, errno = %i\n>

2657:
old  <>
new  <	db "fmod(%f, %f) = %f, errno = %i", 10, 0>

2658:
old  < math_test_1$301:>
new  <>

2659:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <section .data>

2661:
old  < math_test_1$302:>
new  <string_atan22825f2C2025f29203D2025f2C20errno203D2025i0A#:>

2662:
old  <	; Parameter pointer "Error message" 56>
new  <	; Initializer String atan2(%f, %f) = %f, errno = %i\n>

2663:
old  <	mov qword [rbp + 56], string_Error20message#>
new  <	db "atan2(%f, %f) = %f, errno = %i", 10, 0>

2665:
old  < math_test_1$303:>
new  <section .data>

2666:
old  <	; Call perror 32 0>
new  <>

2667:
old  <	mov qword [rbp + 32], math_test_1$304>
new  <string_pow2825f2C2025f29203D2025f2C20errno203D2025i0A#:>

2668:
old  <	mov [rbp + 40], rbp>
new  <	; Initializer String pow(%f, %f) = %f, errno = %i\n>

2669:
old  <	add rbp, 32>
new  <	db "pow(%f, %f) = %f, errno = %i", 10, 0>

2670:
old  <	jmp perror>
new  <>

2671:
old  <>
new  <section .data>

2672:
old  < math_test_1$304:>
new  <>

2673:
old  <	; PostCall 32>
new  <string_ldexp2825f2C2025i29203D2025f0A0A#:>

2674:
old  <>
new  <	; Initializer String ldexp(%f, %i) = %f\n\n>

2675:
old  < math_test_1$305:>
new  <	db "ldexp(%f, %i) = %f", 10, 10, 0>

2676:
old  <	; Assign errno 0>
new  <>

2677:
old  <	mov dword [errno], 0>
new  <section .data>

2679:
old  < math_test_1$306:>
new  <container4bytes#:>

2680:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; InitializerZero 4>

2681:
old  <>
new  <	times 4 db 0>

2682:
old  < math_test_1$307:>
new  <>

2683:
old  <	; Parameter pointer "  sqrt(%f) = %f, errno = %i <%s>, " 56>
new  <section .text>

2684:
old  <	mov qword [rbp + 56], string_2020sqrt2825f29203D2025f2C20errno203D2025i203C25s3E2C20#>
new  <>

2685:
old  <>
new  < math_test_2:>

2686:
old  < math_test_1$308:>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2687:
old  <	; PushFloat x>
new  <>

2688:
old  <	fld qword [rbp + 24]>
new  < math_test_2$1:>

2689:
old  <>
new  <	; Parameter pointer "fmod(%f, %f) = %f, errno = %i\n" 64>

2690:
old  < math_test_1$309:>
new  <	mov qword [rbp + 64], string_fmod2825f2C2025f29203D2025f2C20errno203D2025i0A#>

2691:
old  <	; Parameter double x 64>
new  <>

2692:
old  <	fstp qword [rbp + 64]>
new  < math_test_2$2:>

2693:
old  <>
new  <	; PushFloat x>

2694:
old  < math_test_1$310:>
new  <	fld qword [rbp + 24]>

2695:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

2696:
old  <>
new  < math_test_2$3:>

2697:
old  < math_test_1$311:>
new  <	; Parameter double x 72>

2698:
old  <	; PushFloat x>
new  <	fstp qword [rbp + 72]>

2699:
old  <	fld qword [rbp + 24]>
new  <>

2700:
old  <>
new  < math_test_2$4:>

2701:
old  < math_test_1$312:>
new  <	; PushFloat y>

2702:
old  <	; Parameter double x 96>
new  <	fld qword [rbp + 32]>

2703:
old  <	fstp qword [rbp + 96]>
new  <>

2704:
old  <>
new  < math_test_2$5:>

2705:
old  < math_test_1$313:>
new  <	; Parameter double y 80>

2706:
old  <	; Call sqrt 72 0>
new  <	fstp qword [rbp + 80]>

2707:
old  <	mov qword [rbp + 72], math_test_1$314>
new  <>

2708:
old  <	mov [rbp + 80], rbp>
new  < math_test_2$6:>

2709:
old  <	add rbp, 72>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2710:
old  <	jmp sqrt>
new  <>

2711:
old  <>
new  < math_test_2$7:>

2712:
old  < math_test_1$314:>
new  <	; PushFloat x>

2713:
old  <	; PostCall 72>
new  <	fld qword [rbp + 24]>

2715:
old  < math_test_1$315:>
new  < math_test_2$8:>

2716:
old  <	; GetReturnValue Â£temporary3223>
new  <	; Parameter double x 112>

2717:
old  <>
new  <	fstp qword [rbp + 112]>

2718:
old  < math_test_1$316:>
new  <>

2719:
old  <	; Parameter double Â£temporary3223 72>
new  < math_test_2$9:>

2720:
old  <	fstp qword [rbp + 72]>
new  <	; PushFloat y>

2721:
old  <>
new  <	fld qword [rbp + 32]>

2722:
old  < math_test_1$317:>
new  <>

2723:
old  <	; Parameter signedint errno 80>
new  < math_test_2$10:>

2724:
old  <	mov eax, [errno]>
new  <	; Parameter double y 120>

2725:
old  <	mov [rbp + 80], eax>
new  <	fstp qword [rbp + 120]>

2727:
old  < math_test_1$318:>
new  < math_test_2$11:>

2728:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Call fmod 88 0>

2729:
old  <>
new  <	mov qword [rbp + 88], math_test_2$12>

2730:
old  < math_test_1$319:>
new  <	mov [rbp + 96], rbp>

2731:
old  <	; Parameter signedint errno 108>
new  <	add rbp, 88>

2732:
old  <	mov eax, [errno]>
new  <	jmp fmod>

2733:
old  <	mov [rbp + 108], eax>
new  <>

2734:
old  <>
new  < math_test_2$12:>

2735:
old  < math_test_1$320:>
new  <	; PostCall 88>

2736:
old  <	; Call strerror 84 0>
new  <>

2737:
old  <	mov qword [rbp + 84], math_test_1$321>
new  < math_test_2$13:>

2738:
old  <	mov [rbp + 92], rbp>
new  <	; GetReturnValue Â£temporary3276>

2739:
old  <	add rbp, 84>
new  <>

2740:
old  <	jmp strerror>
new  < math_test_2$14:>

2741:
old  <>
new  <	; Parameter double Â£temporary3276 88>

2742:
old  < math_test_1$321:>
new  <	fstp qword [rbp + 88]>

2743:
old  <	; PostCall 84>
new  <>

2744:
old  <>
new  < math_test_2$15:>

2745:
old  < math_test_1$322:>
new  <	; Parameter signedint errno 96>

2746:
old  <	; GetReturnValue Â£temporary3224>
new  <	mov eax, [errno]>

2747:
old  <>
new  <	mov [rbp + 96], eax>

2748:
old  < math_test_1$323:>
new  <>

2749:
old  <	; Parameter pointer Â£temporary3224 84>
new  < math_test_2$16:>

2750:
old  <	mov [rbp + 84], rbx>
new  <	; Call printf 40 28>

2751:
old  <>
new  <	mov qword [rbp + 40], math_test_2$17>

2752:
old  < math_test_1$324:>
new  <	mov [rbp + 48], rbp>

2753:
old  <	; Call printf 32 28>
new  <	add rbp, 40>

2754:
old  <	mov qword [rbp + 32], math_test_1$325>
new  <	mov rdi, rbp>

2755:
old  <	mov [rbp + 40], rbp>
new  <	add rdi, 28>

2756:
old  <	add rbp, 32>
new  <	jmp printf>

2757:
old  <	mov rdi, rbp>
new  <>

2758:
old  <	add rdi, 28>
new  < math_test_2$17:>

2759:
old  <	jmp printf>
new  <	; PostCall 40>

2761:
old  < math_test_1$325:>
new  < math_test_2$18:>

2762:
old  <	; PostCall 32>
new  <	; Assign errno 0>

2763:
old  <>
new  <	mov dword [errno], 0>

2764:
old  < math_test_1$326:>
new  <>

2765:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < math_test_2$19:>

2766:
old  <>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2767:
old  < math_test_1$327:>
new  <>

2768:
old  <	; Parameter pointer "Error message" 56>
new  < math_test_2$20:>

2769:
old  <	mov qword [rbp + 56], string_Error20message#>
new  <	; Parameter pointer "atan2(%f, %f) = %f, errno = %i\n" 64>

2770:
old  <>
new  <	mov qword [rbp + 64], string_atan22825f2C2025f29203D2025f2C20errno203D2025i0A#>

2771:
old  < math_test_1$328:>
new  <>

2772:
old  <	; Call perror 32 0>
new  < math_test_2$21:>

2773:
old  <	mov qword [rbp + 32], math_test_1$329>
new  <	; PushFloat x>

2774:
old  <	mov [rbp + 40], rbp>
new  <	fld qword [rbp + 24]>

2775:
old  <	add rbp, 32>
new  <>

2776:
old  <	jmp perror>
new  < math_test_2$22:>

2777:
old  <>
new  <	; Parameter double x 72>

2778:
old  < math_test_1$329:>
new  <	fstp qword [rbp + 72]>

2779:
old  <	; PostCall 32>
new  <>

2780:
old  <>
new  < math_test_2$23:>

2781:
old  < math_test_1$330:>
new  <	; PushFloat y>

2782:
old  <	; Assign errno 0>
new  <	fld qword [rbp + 32]>

2783:
old  <	mov dword [errno], 0>
new  <>

2784:
old  <>
new  < math_test_2$24:>

2785:
old  < math_test_1$331:>
new  <	; Parameter double y 80>

2786:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	fstp qword [rbp + 80]>

2788:
old  < math_test_1$332:>
new  < math_test_2$25:>

2789:
old  <	; Parameter pointer "  floor(%f) = %f, errno = %i <%s>, " 56>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2790:
old  <	mov qword [rbp + 56], string_2020floor2825f29203D2025f2C20errno203D2025i203C25s3E2C20#>
new  <>

2791:
old  <>
new  < math_test_2$26:>

2792:
old  < math_test_1$333:>
new  <	; PushFloat x>

2793:
old  <	; PushFloat x>
new  <	fld qword [rbp + 24]>

2794:
old  <	fld qword [rbp + 24]>
new  <>

2795:
old  <>
new  < math_test_2$27:>

2796:
old  < math_test_1$334:>
new  <	; Parameter double x 112>

2797:
old  <	; Parameter double x 64>
new  <	fstp qword [rbp + 112]>

2798:
old  <	fstp qword [rbp + 64]>
new  <>

2799:
old  <>
new  < math_test_2$28:>

2800:
old  < math_test_1$335:>
new  <	; PushFloat y>

2801:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	fld qword [rbp + 32]>

2803:
old  < math_test_1$336:>
new  < math_test_2$29:>

2804:
old  <	; PushFloat x>
new  <	; Parameter double y 120>

2805:
old  <	fld qword [rbp + 24]>
new  <	fstp qword [rbp + 120]>

2807:
old  < math_test_1$337:>
new  < math_test_2$30:>

2808:
old  <	; Parameter double x 96>
new  <	; Call atan2 88 0>

2809:
old  <	fstp qword [rbp + 96]>
new  <	mov qword [rbp + 88], math_test_2$31>

2810:
old  <>
new  <	mov [rbp + 96], rbp>

2811:
old  < math_test_1$338:>
new  <	add rbp, 88>

2812:
old  <	; Call floor 72 0>
new  <	jmp atan2>

2813:
old  <	mov qword [rbp + 72], math_test_1$339>
new  <>

2814:
old  <	mov [rbp + 80], rbp>
new  < math_test_2$31:>

2815:
old  <	add rbp, 72>
new  <	; PostCall 88>

2816:
old  <	jmp floor>
new  <>

2817:
old  <>
new  < math_test_2$32:>

2818:
old  < math_test_1$339:>
new  <	; GetReturnValue Â£temporary3278>

2819:
old  <	; PostCall 72>
new  <>

2820:
old  <>
new  < math_test_2$33:>

2821:
old  < math_test_1$340:>
new  <	; Parameter double Â£temporary3278 88>

2822:
old  <	; GetReturnValue Â£temporary3227>
new  <	fstp qword [rbp + 88]>

2824:
old  < math_test_1$341:>
new  < math_test_2$34:>

2825:
old  <	; Parameter double Â£temporary3227 72>
new  <	; Parameter signedint errno 96>

2826:
old  <	fstp qword [rbp + 72]>
new  <	mov eax, [errno]>

2827:
old  <>
new  <	mov [rbp + 96], eax>

2828:
old  < math_test_1$342:>
new  <>

2829:
old  <	; Parameter signedint errno 80>
new  < math_test_2$35:>

2830:
old  <	mov eax, [errno]>
new  <	; Call printf 40 28>

2831:
old  <	mov [rbp + 80], eax>
new  <	mov qword [rbp + 40], math_test_2$36>

2832:
old  <>
new  <	mov [rbp + 48], rbp>

2833:
old  < math_test_1$343:>
new  <	add rbp, 40>

2834:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov rdi, rbp>

2835:
old  <>
new  <	add rdi, 28>

2836:
old  < math_test_1$344:>
new  <	jmp printf>

2837:
old  <	; Parameter signedint errno 108>
new  <>

2838:
old  <	mov eax, [errno]>
new  < math_test_2$36:>

2839:
old  <	mov [rbp + 108], eax>
new  <	; PostCall 40>

2841:
old  < math_test_1$345:>
new  < math_test_2$37:>

2842:
old  <	; Call strerror 84 0>
new  <	; Assign errno 0>

2843:
old  <	mov qword [rbp + 84], math_test_1$346>
new  <	mov dword [errno], 0>

2844:
old  <	mov [rbp + 92], rbp>
new  <>

2845:
old  <	add rbp, 84>
new  < math_test_2$38:>

2846:
old  <	jmp strerror>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2848:
old  < math_test_1$346:>
new  < math_test_2$39:>

2849:
old  <	; PostCall 84>
new  <	; Parameter pointer "pow(%f, %f) = %f, errno = %i\n" 64>

2850:
old  <>
new  <	mov qword [rbp + 64], string_pow2825f2C2025f29203D2025f2C20errno203D2025i0A#>

2851:
old  < math_test_1$347:>
new  <>

2852:
old  <	; GetReturnValue Â£temporary3228>
new  < math_test_2$40:>

2853:
old  <>
new  <	; PushFloat x>

2854:
old  < math_test_1$348:>
new  <	fld qword [rbp + 24]>

2855:
old  <	; Parameter pointer Â£temporary3228 84>
new  <>

2856:
old  <	mov [rbp + 84], rbx>
new  < math_test_2$41:>

2857:
old  <>
new  <	; Parameter double x 72>

2858:
old  < math_test_1$349:>
new  <	fstp qword [rbp + 72]>

2859:
old  <	; Call printf 32 28>
new  <>

2860:
old  <	mov qword [rbp + 32], math_test_1$350>
new  < math_test_2$42:>

2861:
old  <	mov [rbp + 40], rbp>
new  <	; PushFloat y>

2862:
old  <	add rbp, 32>
new  <	fld qword [rbp + 32]>

2863:
old  <	mov rdi, rbp>
new  <>

2864:
old  <	add rdi, 28>
new  < math_test_2$43:>

2865:
old  <	jmp printf>
new  <	; Parameter double y 80>

2866:
old  <>
new  <	fstp qword [rbp + 80]>

2867:
old  < math_test_1$350:>
new  <>

2868:
old  <	; PostCall 32>
new  < math_test_2$44:>

2869:
old  <>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2870:
old  < math_test_1$351:>
new  <>

2871:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < math_test_2$45:>

2872:
old  <>
new  <	; PushFloat x>

2873:
old  < math_test_1$352:>
new  <	fld qword [rbp + 24]>

2874:
old  <	; Parameter pointer "Error message" 56>
new  <>

2875:
old  <	mov qword [rbp + 56], string_Error20message#>
new  < math_test_2$46:>

2876:
old  <>
new  <	; Parameter double x 112>

2877:
old  < math_test_1$353:>
new  <	fstp qword [rbp + 112]>

2878:
old  <	; Call perror 32 0>
new  <>

2879:
old  <	mov qword [rbp + 32], math_test_1$354>
new  < math_test_2$47:>

2880:
old  <	mov [rbp + 40], rbp>
new  <	; PushFloat y>

2881:
old  <	add rbp, 32>
new  <	fld qword [rbp + 32]>

2882:
old  <	jmp perror>
new  <>

2883:
old  <>
new  < math_test_2$48:>

2884:
old  < math_test_1$354:>
new  <	; Parameter double y 120>

2885:
old  <	; PostCall 32>
new  <	fstp qword [rbp + 120]>

2887:
old  < math_test_1$355:>
new  < math_test_2$49:>

2888:
old  <	; Assign errno 0>
new  <	; Call pow 88 0>

2889:
old  <	mov dword [errno], 0>
new  <	mov qword [rbp + 88], math_test_2$50>

2890:
old  <>
new  <	mov [rbp + 96], rbp>

2891:
old  < math_test_1$356:>
new  <	add rbp, 88>

2892:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	jmp pow>

2894:
old  < math_test_1$357:>
new  < math_test_2$50:>

2895:
old  <	; Parameter pointer "  ceil(%f) = %f, errno = %i <%s>, " 56>
new  <	; PostCall 88>

2896:
old  <	mov qword [rbp + 56], string_2020ceil2825f29203D2025f2C20errno203D2025i203C25s3E2C20#>
new  <>

2897:
old  <>
new  < math_test_2$51:>

2898:
old  < math_test_1$358:>
new  <	; GetReturnValue Â£temporary3280>

2899:
old  <	; PushFloat x>
new  <>

2900:
old  <	fld qword [rbp + 24]>
new  < math_test_2$52:>

2901:
old  <>
new  <	; Parameter double Â£temporary3280 88>

2902:
old  < math_test_1$359:>
new  <	fstp qword [rbp + 88]>

2903:
old  <	; Parameter double x 64>
new  <>

2904:
old  <	fstp qword [rbp + 64]>
new  < math_test_2$53:>

2905:
old  <>
new  <	; Parameter signedint errno 96>

2906:
old  < math_test_1$360:>
new  <	mov eax, [errno]>

2907:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov [rbp + 96], eax>

2909:
old  < math_test_1$361:>
new  < math_test_2$54:>

2910:
old  <	; PushFloat x>
new  <	; Call printf 40 28>

2911:
old  <	fld qword [rbp + 24]>
new  <	mov qword [rbp + 40], math_test_2$55>

2912:
old  <>
new  <	mov [rbp + 48], rbp>

2913:
old  < math_test_1$362:>
new  <	add rbp, 40>

2914:
old  <	; Parameter double x 96>
new  <	mov rdi, rbp>

2915:
old  <	fstp qword [rbp + 96]>
new  <	add rdi, 28>

2916:
old  <>
new  <	jmp printf>

2917:
old  < math_test_1$363:>
new  <>

2918:
old  <	; Call ceil 72 0>
new  < math_test_2$55:>

2919:
old  <	mov qword [rbp + 72], math_test_1$364>
new  <	; PostCall 40>

2920:
old  <	mov [rbp + 80], rbp>
new  <>

2921:
old  <	add rbp, 72>
new  < math_test_2$56:>

2922:
old  <	jmp ceil>
new  <	; Assign errno 0>

2923:
old  <>
new  <	mov dword [errno], 0>

2924:
old  < math_test_1$364:>
new  <>

2925:
old  <	; PostCall 72>
new  < math_test_2$57:>

2926:
old  <>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2927:
old  < math_test_1$365:>
new  <>

2928:
old  <	; GetReturnValue Â£temporary3231>
new  < math_test_2$58:>

2929:
old  <>
new  <	; Parameter pointer "\n" 64>

2930:
old  < math_test_1$366:>
new  <	mov qword [rbp + 64], string_0A#>

2931:
old  <	; Parameter double Â£temporary3231 72>
new  <>

2932:
old  <	fstp qword [rbp + 72]>
new  < math_test_2$59:>

2933:
old  <>
new  <	; Call printf 40 0>

2934:
old  < math_test_1$367:>
new  <	mov qword [rbp + 40], math_test_2$60>

2935:
old  <	; Parameter signedint errno 80>
new  <	mov [rbp + 48], rbp>

2936:
old  <	mov eax, [errno]>
new  <	add rbp, 40>

2937:
old  <	mov [rbp + 80], eax>
new  <	mov rdi, rbp>

2938:
old  <>
new  <	jmp printf>

2939:
old  < math_test_1$368:>
new  <>

2940:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < math_test_2$60:>

2941:
old  <>
new  <	; PostCall 40>

2942:
old  < math_test_1$369:>
new  <>

2943:
old  <	; Parameter signedint errno 108>
new  < math_test_2$61:>

2944:
old  <	mov eax, [errno]>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2945:
old  <	mov [rbp + 108], eax>
new  <>

2946:
old  <>
new  < math_test_2$62:>

2947:
old  < math_test_1$370:>
new  <	; Parameter pointer "ldexp(%f, %i) = %f\n\n" 64>

2948:
old  <	; Call strerror 84 0>
new  <	mov qword [rbp + 64], string_ldexp2825f2C2025i29203D2025f0A0A#>

2949:
old  <	mov qword [rbp + 84], math_test_1$371>
new  <>

2950:
old  <	mov [rbp + 92], rbp>
new  < math_test_2$63:>

2951:
old  <	add rbp, 84>
new  <	; PushFloat x>

2952:
old  <	jmp strerror>
new  <	fld qword [rbp + 24]>

2954:
old  < math_test_1$371:>
new  < math_test_2$64:>

2955:
old  <	; PostCall 84>
new  <	; Parameter double x 72>

2956:
old  <>
new  <	fstp qword [rbp + 72]>

2957:
old  < math_test_1$372:>
new  <>

2958:
old  <	; GetReturnValue Â£temporary3232>
new  < math_test_2$65:>

2959:
old  <>
new  <	; PushFloat y>

2960:
old  < math_test_1$373:>
new  <	fld qword [rbp + 32]>

2961:
old  <	; Parameter pointer Â£temporary3232 84>
new  <>

2962:
old  <	mov [rbp + 84], rbx>
new  < math_test_2$66:>

2963:
old  <>
new  <	; FloatingToIntegral Â£temporary3283 y>

2964:
old  < math_test_1$374:>
new  <	fistp dword [container4bytes#]>

2965:
old  <	; Call printf 32 28>
new  <	mov eax, [container4bytes#]>

2966:
old  <	mov qword [rbp + 32], math_test_1$375>
new  <>

2967:
old  <	mov [rbp + 40], rbp>
new  < math_test_2$67:>

2968:
old  <	add rbp, 32>
new  <	; Parameter signedint Â£temporary3283 80>

2969:
old  <	mov rdi, rbp>
new  <	mov [rbp + 80], eax>

2970:
old  <	add rdi, 28>
new  <>

2971:
old  <	jmp printf>
new  < math_test_2$68:>

2972:
old  <>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

2973:
old  < math_test_1$375:>
new  <>

2974:
old  <	; PostCall 32>
new  < math_test_2$69:>

2975:
old  <>
new  <	; PushFloat x>

2976:
old  < math_test_1$376:>
new  <	fld qword [rbp + 24]>

2977:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

2978:
old  <>
new  < math_test_2$70:>

2979:
old  < math_test_1$377:>
new  <	; Parameter double x 108>

2980:
old  <	; Parameter pointer "Error message" 56>
new  <	fstp qword [rbp + 108]>

2981:
old  <	mov qword [rbp + 56], string_Error20message#>
new  <>

2982:
old  <>
new  < math_test_2$71:>

2983:
old  < math_test_1$378:>
new  <	; PushFloat y>

2984:
old  <	; Call perror 32 0>
new  <	fld qword [rbp + 32]>

2985:
old  <	mov qword [rbp + 32], math_test_1$379>
new  <>

2986:
old  <	mov [rbp + 40], rbp>
new  < math_test_2$72:>

2987:
old  <	add rbp, 32>
new  <	; FloatingToIntegral Â£temporary3284 y>

2988:
old  <	jmp perror>
new  <	fistp dword [container4bytes#]>

2989:
old  <>
new  <	mov eax, [container4bytes#]>

2990:
old  < math_test_1$379:>
new  <>

2991:
old  <	; PostCall 32>
new  < math_test_2$73:>

2992:
old  <>
new  <	; Parameter signedint Â£temporary3284 116>

2993:
old  < math_test_1$380:>
new  <	mov [rbp + 116], eax>

2994:
old  <	; Assign errno 0>
new  <>

2995:
old  <	mov dword [errno], 0>
new  < math_test_2$74:>

2996:
old  <>
new  <	; Call ldexp 84 0>

2997:
old  < math_test_1$381:>
new  <	mov qword [rbp + 84], math_test_2$75>

2998:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov [rbp + 92], rbp>

2999:
old  <>
new  <	add rbp, 84>

3000:
old  < math_test_1$382:>
new  <	jmp ldexp>

3001:
old  <	; Parameter pointer "  fabs(%f) = %f, errno = %i <%s>, " 56>
new  <>

3002:
old  <	mov qword [rbp + 56], string_2020fabs2825f29203D2025f2C20errno203D2025i203C25s3E2C20#>
new  < math_test_2$75:>

3003:
old  <>
new  <	; PostCall 84>

3004:
old  < math_test_1$383:>
new  <>

3005:
old  <	; PushFloat x>
new  < math_test_2$76:>

3006:
old  <	fld qword [rbp + 24]>
new  <	; GetReturnValue Â£temporary3285>

3008:
old  < math_test_1$384:>
new  < math_test_2$77:>

3009:
old  <	; Parameter double x 64>
new  <	; Parameter double Â£temporary3285 84>

3010:
old  <	fstp qword [rbp + 64]>
new  <	fstp qword [rbp + 84]>

3012:
old  < math_test_1$385:>
new  < math_test_2$78:>

3013:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Call printf 40 20>

3014:
old  <>
new  <	mov qword [rbp + 40], math_test_2$79>

3015:
old  < math_test_1$386:>
new  <	mov [rbp + 48], rbp>

3016:
old  <	; PushFloat x>
new  <	add rbp, 40>

3017:
old  <	fld qword [rbp + 24]>
new  <	mov rdi, rbp>

3018:
old  <>
new  <	add rdi, 20>

3019:
old  < math_test_1$387:>
new  <	jmp printf>

3020:
old  <	; Parameter double x 96>
new  <>

3021:
old  <	fstp qword [rbp + 96]>
new  < math_test_2$79:>

3022:
old  <>
new  <	; PostCall 40>

3023:
old  < math_test_1$388:>
new  <>

3024:
old  <	; Call fabs 72 0>
new  < math_test_2$80:>

3025:
old  <	mov qword [rbp + 72], math_test_1$389>
new  <	; Return>

3026:
old  <	mov [rbp + 80], rbp>
new  <	mov rax, [rbp]>

3027:
old  <	add rbp, 72>
new  <	mov rdi, [rbp + 16]>

3028:
old  <	jmp fabs>
new  <	mov rbp, [rbp + 8]>

3029:
old  <>
new  <	jmp rax>

3030:
old  < math_test_1$389:>
new  <>

3031:
old  <	; PostCall 72>
new  < math_test_2$81:>

3032:
old  <>
new  <	; FunctionEnd math_test_2>

399:
old  <	; GetReturnValue Â£temporary3343>
new  <	; GetReturnValue Â£temporary3305>

402:
old  <	; Assign inFilePtrPtr Â£temporary3343>
new  <	; Assign inFilePtrPtr Â£temporary3305>

431:
old  <	; Parameter signedint 11 104>
new  <	; Parameter signedint 10 104>

432:
old  <	mov dword [rbp + 104], 11>
new  <	mov dword [rbp + 104], 10>

482:
old  <	; GetReturnValue Â£temporary3348>
new  <	; GetReturnValue Â£temporary3310>

485:
old  <	; Assign outFilePtrPtr Â£temporary3348>
new  <	; Assign outFilePtrPtr Â£temporary3310>

514:
old  <	; Parameter signedint 13 112>
new  <	; Parameter signedint 12 112>

515:
old  <	mov dword [rbp + 112], 13>
new  <	mov dword [rbp + 112], 12>

559:
old  <	; Address Â£temporary3353 size>
new  <	; Address Â£temporary3315 size>

564:
old  <	; Parameter pointer Â£temporary3353 104>
new  <	; Parameter pointer Â£temporary3315 104>

610:
old  <	; Address Â£temporary3357 inValue>
new  <	; Address Â£temporary3319 inValue>

615:
old  <	; Parameter pointer Â£temporary3357 112>
new  <	; Parameter pointer Â£temporary3319 112>

638:
old  <	; Parameter double Â£temporary3359 96>
new  <	; Parameter double Â£temporary3321 96>

652:
old  <	; GetReturnValue Â£temporary3360>
new  <	; GetReturnValue Â£temporary3322>

766:
old  <	; GetReturnValue Â£temporary3364>
new  <	; GetReturnValue Â£temporary3326>

769:
old  <	; NotEqual 97 Â£temporary3364 0>
new  <	; NotEqual 97 Â£temporary3326 0>

837:
old  <	; GetReturnValue Â£temporary3367>
new  <	; GetReturnValue Â£temporary3329>

840:
old  <	; Parameter pointer Â£temporary3367 92>
new  <	; Parameter pointer Â£temporary3329 92>

878:
old  <	; GetReturnValue Â£temporary3369>
new  <	; GetReturnValue Â£temporary3331>

881:
old  <	; NotEqual 121 Â£temporary3369 0>
new  <	; NotEqual 121 Â£temporary3331 0>

944:
old  <	; GetReturnValue Â£temporary3372>
new  <	; GetReturnValue Â£temporary3334>

947:
old  <	; Parameter pointer Â£temporary3372 84>
new  <	; Parameter pointer Â£temporary3334 84>

984:
old  <	; GetReturnValue Â£temporary3374>
new  <	; GetReturnValue Â£temporary3336>

987:
old  <	; Assign inFilePtr Â£temporary3374>
new  <	; Assign inFilePtr Â£temporary3336>

1016:
old  <	; Parameter signedint 51 104>
new  <	; Parameter signedint 50 104>

1017:
old  <	mov dword [rbp + 104], 51>
new  <	mov dword [rbp + 104], 50>

1111:
old  <	; Address Â£temporary3381 size>
new  <	; Address Â£temporary3343 size>

1116:
old  <	; Parameter pointer Â£temporary3381 96>
new  <	; Parameter pointer Â£temporary3343 96>

1279:
old  <	; GetReturnValue Â£temporary3389>
new  <	; GetReturnValue Â£temporary3351>

1282:
old  <	; Assign inFilePtr Â£temporary3389>
new  <	; Assign inFilePtr Â£temporary3351>

1311:
old  <	; Parameter signedint 77 120>
new  <	; Parameter signedint 76 120>

1312:
old  <	mov dword [rbp + 120], 77>
new  <	mov dword [rbp + 120], 76>

1362:
old  <	; GetReturnValue Â£temporary3394>
new  <	; GetReturnValue Â£temporary3356>

1365:
old  <	; Assign outFilePtr Â£temporary3394>
new  <	; Assign outFilePtr Â£temporary3356>

1394:
old  <	; Parameter signedint 80 128>
new  <	; Parameter signedint 79 128>

1395:
old  <	mov dword [rbp + 128], 80>
new  <	mov dword [rbp + 128], 79>

1441:
old  <	; GetReturnValue Â£temporary3399>
new  <	; GetReturnValue Â£temporary3361>

1444:
old  <	; IntegralToIntegral Â£temporary3400 Â£temporary3399>
new  <	; IntegralToIntegral Â£temporary3362 Â£temporary3361>

1451:
old  <	; Assign c Â£temporary3400>
new  <	; Assign c Â£temporary3362>

1455:
old  <	; IntegralToIntegral Â£temporary3401 c>
new  <	; IntegralToIntegral Â£temporary3363 c>

1464:
old  <	; Equal 257 Â£temporary3401 -1>
new  <	; Equal 257 Â£temporary3363 -1>

1472:
old  <	; IntegralToIntegral Â£temporary3403 c>
new  <	; IntegralToIntegral Â£temporary3365 c>

1481:
old  <	; Parameter signedint Â£temporary3403 97>
new  <	; Parameter signedint Â£temporary3365 97>

1588:
old  <	; GetReturnValue Â£temporary3410>
new  <	; GetReturnValue Â£temporary3372>

1591:
old  <	; Assign outFilePtr Â£temporary3410>
new  <	; Assign outFilePtr Â£temporary3372>

1620:
old  <	; Parameter signedint 101 104>
new  <	; Parameter signedint 100 104>

1621:
old  <	mov dword [rbp + 104], 101>
new  <	mov dword [rbp + 104], 100>

1656:
old  <	; Address Â£temporary3415 size>
new  <	; Address Â£temporary3377 size>

1661:
old  <	; Parameter pointer Â£temporary3415 76>
new  <	; Parameter pointer Â£temporary3377 76>

1698:
old  <	; SignedMultiply Â£temporary3419 index index>
new  <	; SignedMultiply Â£temporary3381 index index>

1704:
old  <	; IntegralToFloating Â£temporary3420 Â£temporary3419>
new  <	; IntegralToFloating Â£temporary3382 Â£temporary3381>

1716:
old  <	; Address Â£temporary3421 value>
new  <	; Address Â£temporary3383 value>

1721:
old  <	; Parameter pointer Â£temporary3421 88>
new  <	; Parameter pointer Â£temporary3383 88>

1795:
old  <	; GetReturnValue Â£temporary3424>
new  <	; GetReturnValue Â£temporary3386>

1798:
old  <	; Assign inFilePtr Â£temporary3424>
new  <	; Assign inFilePtr Â£temporary3386>

1827:
old  <	; Parameter signedint 116 104>
new  <	; Parameter signedint 115 104>

1828:
old  <	mov dword [rbp + 104], 116>
new  <	mov dword [rbp + 104], 115>

1859:
old  <	; Address Â£temporary3429 size>
new  <	; Address Â£temporary3391 size>

1864:
old  <	; Parameter pointer Â£temporary3429 76>
new  <	; Parameter pointer Â£temporary3391 76>

1918:
old  <	; Address Â£temporary3432 arr>
new  <	; Address Â£temporary3394 arr>

1923:
old  <	; Parameter pointer Â£temporary3432 156>
new  <	; Parameter pointer Â£temporary3394 156>

1989:
old  <	; IntegralToIntegral Â£temporary3438 index>
new  <	; IntegralToIntegral Â£temporary3400 index>

1995:
old  <	; UnsignedMultiply Â£temporary3439 Â£temporary3438 8>
new  <	; UnsignedMultiply Â£temporary3401 Â£temporary3400 8>

2000:
old  <	; BinaryAdd Â£temporary3440 arr Â£temporary3439>
new  <	; BinaryAdd Â£temporary3402 arr Â£temporary3401>

2006:
old  <	; Dereference Â£temporary3437 -> Â£temporary3440 Â£temporary3440 0>
new  <	; Dereference Â£temporary3399 -> Â£temporary3402 Â£temporary3402 0>

2009:
old  <	; PushFloat Â£temporary3437 -> Â£temporary3440>
new  <	; PushFloat Â£temporary3399 -> Â£temporary3402>

2013:
old  <	; Parameter double Â£temporary3437 -> Â£temporary3440 172>
new  <	; Parameter double Â£temporary3399 -> Â£temporary3402 172>

2076:
old  <	; GetReturnValue Â£temporary3443>
new  <	; GetReturnValue Â£temporary3405>

2079:
old  <	; Assign inFilePtr Â£temporary3443>
new  <	; Assign inFilePtr Â£temporary3405>

2108:
old  <	; Parameter signedint 134 104>
new  <	; Parameter signedint 133 104>

2109:
old  <	mov dword [rbp + 104], 134>
new  <	mov dword [rbp + 104], 133>

2140:
old  <	; Address Â£temporary3448 size>
new  <	; Address Â£temporary3410 size>

2145:
old  <	; Parameter pointer Â£temporary3448 76>
new  <	; Parameter pointer Â£temporary3410 76>

2209:
old  <	; Address Â£temporary3453 value>
new  <	; Address Â£temporary3415 value>

2214:
old  <	; Parameter pointer Â£temporary3453 88>
new  <	; Parameter pointer Â£temporary3415 88>

2338:
old  <	; GetReturnValue Â£temporary3458>
new  <	; GetReturnValue Â£temporary3420>

2341:
old  <	; Assign inFilePtr Â£temporary3458>
new  <	; Assign inFilePtr Â£temporary3420>

2370:
old  <	; Parameter signedint 152 104>
new  <	; Parameter signedint 151 104>

2371:
old  <	mov dword [rbp + 104], 152>
new  <	mov dword [rbp + 104], 151>

2402:
old  <	; Address Â£temporary3463 size>
new  <	; Address Â£temporary3425 size>

2407:
old  <	; Parameter pointer Â£temporary3463 76>
new  <	; Parameter pointer Â£temporary3425 76>

2446:
old  <	; SignedMultiply Â£temporary3465 size 8>
new  <	; SignedMultiply Â£temporary3427 size 8>

2452:
old  <	; Parameter signedint Â£temporary3465 88>
new  <	; Parameter signedint Â£temporary3427 88>

2493:
old  <	; GetReturnValue Â£temporary3468>
new  <	; GetReturnValue Â£temporary3430>

2496:
old  <	; Assign p Â£temporary3468>
new  <	; Assign p Â£temporary3430>

2525:
old  <	; Parameter signedint 160 120>
new  <	; Parameter signedint 159 120>

2526:
old  <	mov dword [rbp + 120], 160>
new  <	mov dword [rbp + 120], 159>

2554:
old  <	; IntegralToIntegral Â£temporary3473 size>
new  <	; IntegralToIntegral Â£temporary3435 size>

2560:
old  <	; UnsignedMultiply Â£temporary3475 Â£temporary3473 8>
new  <	; UnsignedMultiply Â£temporary3437 Â£temporary3435 8>

2565:
old  <	; BinaryAdd endPtr p Â£temporary3475>
new  <	; BinaryAdd endPtr p Â£temporary3437>

2659:
old  <	; IntegralToIntegral Â£temporary3481 index>
new  <	; IntegralToIntegral Â£temporary3443 index>

2665:
old  <	; UnsignedMultiply Â£temporary3482 Â£temporary3481 8>
new  <	; UnsignedMultiply Â£temporary3444 Â£temporary3443 8>

2670:
old  <	; BinaryAdd Â£temporary3483 p Â£temporary3482>
new  <	; BinaryAdd Â£temporary3445 p Â£temporary3444>

2675:
old  <	; Dereference Â£temporary3480 -> Â£temporary3483 Â£temporary3483 0>
new  <	; Dereference Â£temporary3442 -> Â£temporary3445 Â£temporary3445 0>

2678:
old  <	; PushFloat Â£temporary3480 -> Â£temporary3483>
new  <	; PushFloat Â£temporary3442 -> Â£temporary3445>

2682:
old  <	; Parameter double Â£temporary3480 -> Â£temporary3483 112>
new  <	; Parameter double Â£temporary3442 -> Â£temporary3445 112>

2997:
old  <	; GetReturnValue Â£temporary3548>
new  <	; GetReturnValue Â£temporary3510>

3000:
old  <	; Assign outFilePtr Â£temporary3548>
new  <	; Assign outFilePtr Â£temporary3510>

3029:
old  <	; Parameter signedint 186 312>
new  <	; Parameter signedint 185 312>

3030:
old  <	mov dword [rbp + 312], 186>
new  <	mov dword [rbp + 312], 185>

3128:
old  <	; GetReturnValue Â£temporary3555>
new  <	; GetReturnValue Â£temporary3517>

3131:
old  <	; Assign inFilePtr Â£temporary3555>
new  <	; Assign inFilePtr Â£temporary3517>

3160:
old  <	; Parameter signedint 192 320>
new  <	; Parameter signedint 191 320>

3161:
old  <	mov dword [rbp + 320], 192>
new  <	mov dword [rbp + 320], 191>

3207:
old  <	; GetReturnValue Â£temporary3560>
new  <	; GetReturnValue Â£temporary3522>

3210:
old  <	; NotEqual 659 Â£temporary3560 0>
new  <	; NotEqual 659 Â£temporary3522 0>

3218:
old  <	; Address Â£temporary3563 person>
new  <	; Address Â£temporary3525 person>

3223:
old  <	; Parameter pointer Â£temporary3563 288>
new  <	; Parameter pointer Â£temporary3525 288>

3341:
old  <	; GetReturnValue Â£temporary3570>
new  <	; GetReturnValue Â£temporary3532>

3344:
old  <	; Assign inFilePtr Â£temporary3570>
new  <	; Assign inFilePtr Â£temporary3532>

3373:
old  <	; Parameter signedint 205 104>
new  <	; Parameter signedint 204 104>

3374:
old  <	mov dword [rbp + 104], 205>
new  <	mov dword [rbp + 104], 204>

3446:
old  <	; GetReturnValue Â£temporary3576>
new  <	; GetReturnValue Â£temporary3538>

3449:
old  <	; IntegralToIntegral Â£temporary3577 Â£temporary3576>
new  <	; IntegralToIntegral Â£temporary3539 Â£temporary3538>

3452:
old  <	; Assign u Â£temporary3577>
new  <	; Assign u Â£temporary3539>

3479:
old  <	; GetReturnValue Â£temporary3579>
new  <	; GetReturnValue Â£temporary3541>

3482:
old  <	; IntegralToIntegral Â£temporary3580 Â£temporary3579>
new  <	; IntegralToIntegral Â£temporary3542 Â£temporary3541>

3489:
old  <	; Assign c Â£temporary3580>
new  <	; Assign c Â£temporary3542>

3496:
old  <	; IntegralToIntegral Â£temporary3581 c>
new  <	; IntegralToIntegral Â£temporary3543 c>

3505:
old  <	; Parameter signedint Â£temporary3581 77>
new  <	; Parameter signedint Â£temporary3543 77>

3614:
old  <	; GetReturnValue Â£temporary3587>
new  <	; GetReturnValue Â£temporary3549>

3617:
old  <	; Equal 734 Â£temporary3587 0>
new  <	; Equal 734 Â£temporary3549 0>

3622:
old  <	; Assign Â£temporary3589 "Yes">
new  <	; Assign Â£temporary3551 "Yes">

3630:
old  <	; Assign Â£temporary3589 "No">
new  <	; Assign Â£temporary3551 "No">

3634:
old  <	; Parameter pointer Â£temporary3589 72>
new  <	; Parameter pointer Â£temporary3551 72>

3674:
old  <	; GetReturnValue Â£temporary3591>
new  <	; GetReturnValue Â£temporary3553>

3677:
old  <	; Equal 748 Â£temporary3591 0>
new  <	; Equal 748 Â£temporary3553 0>

3682:
old  <	; Assign Â£temporary3593 "Yes">
new  <	; Assign Â£temporary3555 "Yes">

3690:
old  <	; Assign Â£temporary3593 "No">
new  <	; Assign Â£temporary3555 "No">

3694:
old  <	; Parameter pointer Â£temporary3593 72>
new  <	; Parameter pointer Â£temporary3555 72>

3731:
old  <	; GetReturnValue Â£temporary3595>
new  <	; GetReturnValue Â£temporary3557>

3734:
old  <	; Assign inOutFilePtr Â£temporary3595>
new  <	; Assign inOutFilePtr Â£temporary3557>

3763:
old  <	; Parameter signedint 229 112>
new  <	; Parameter signedint 228 112>

3764:
old  <	mov dword [rbp + 112], 229>
new  <	mov dword [rbp + 112], 228>

3805:
old  <	; GetReturnValue Â£temporary3600>
new  <	; GetReturnValue Â£temporary3562>

3808:
old  <	; Assign tempFilePtr Â£temporary3600>
new  <	; Assign tempFilePtr Â£temporary3562>

3837:
old  <	; Parameter signedint 232 112>
new  <	; Parameter signedint 231 112>

3838:
old  <	mov dword [rbp + 112], 232>
new  <	mov dword [rbp + 112], 231>

3884:
old  <	; GetReturnValue Â£temporary3605>
new  <	; GetReturnValue Â£temporary3567>

3887:
old  <	; IntegralToIntegral Â£temporary3606 Â£temporary3605>
new  <	; IntegralToIntegral Â£temporary3568 Â£temporary3567>

3894:
old  <	; Assign c Â£temporary3606>
new  <	; Assign c Â£temporary3568>

3898:
old  <	; IntegralToIntegral Â£temporary3607 c>
new  <	; IntegralToIntegral Â£temporary3569 c>

3907:
old  <	; Equal 809 Â£temporary3607 -1>
new  <	; Equal 809 Â£temporary3569 -1>

3918:
old  <	; IntegralToIntegral Â£temporary3609 c>
new  <	; IntegralToIntegral Â£temporary3571 c>

3927:
old  <	; Parameter signedint Â£temporary3609 81>
new  <	; Parameter signedint Â£temporary3571 81>

3941:
old  <	; GetReturnValue Â£temporary3610>
new  <	; GetReturnValue Â£temporary3572>

3944:
old  <	; Parameter signedint Â£temporary3610 81>
new  <	; Parameter signedint Â£temporary3572 81>

4026:
old  <	; GetReturnValue Â£temporary3615>
new  <	; GetReturnValue Â£temporary3577>

4029:
old  <	; IntegralToIntegral Â£temporary3616 Â£temporary3615>
new  <	; IntegralToIntegral Â£temporary3578 Â£temporary3577>

4036:
old  <	; Assign c Â£temporary3616>
new  <	; Assign c Â£temporary3578>

4040:
old  <	; IntegralToIntegral Â£temporary3617 c>
new  <	; IntegralToIntegral Â£temporary3579 c>

4049:
old  <	; Equal 834 Â£temporary3617 -1>
new  <	; Equal 834 Â£temporary3579 -1>

4057:
old  <	; IntegralToIntegral Â£temporary3619 c>
new  <	; IntegralToIntegral Â£temporary3581 c>

4066:
old  <	; Parameter signedint Â£temporary3619 81>
new  <	; Parameter signedint Â£temporary3581 81>

213:
old  <	; Address Â£temporary3640 n>
new  <	; Address Â£temporary3602 n>

218:
old  <	; Assign p Â£temporary3640>
new  <	; Assign p Â£temporary3602>

11:
old  <@8730$i:>
new  <@8284$i:>

24:
old  <	; Empty>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

27:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter pointer "%i " 48>

28:
old  <>
new  <	mov qword [rbp + 48], string_25i20#>

29:
old  < stack_test$2:>
new  <>

30:
old  <	; Parameter pointer "%i " 48>
new  < stack_test$2:>

31:
old  <	mov qword [rbp + 48], string_25i20#>
new  <	; Assign Â£temporary3708 i>

32:
old  <>
new  <	mov eax, [@8284$i]>

33:
old  < stack_test$3:>
new  <>

34:
old  <	; Assign Â£temporary3746 i>
new  < stack_test$3:>

35:
old  <	mov eax, [@8730$i]>
new  <	; BinaryAdd i i 1>

36:
old  <>
new  <	inc dword [@8284$i]>

37:
old  < stack_test$4:>
new  <>

38:
old  <	; BinaryAdd i i 1>
new  < stack_test$4:>

39:
old  <	inc dword [@8730$i]>
new  <	; Parameter signedint Â£temporary3708 56>

40:
old  <>
new  <	mov [rbp + 56], eax>

41:
old  < stack_test$5:>
new  <>

42:
old  <	; Parameter signedint Â£temporary3746 56>
new  < stack_test$5:>

43:
old  <	mov [rbp + 56], eax>
new  <	; Call printf 24 4>

44:
old  <>
new  <	mov qword [rbp + 24], stack_test$6>

45:
old  < stack_test$6:>
new  <	mov [rbp + 32], rbp>

46:
old  <	; Call printf 24 4>
new  <	add rbp, 24>

47:
old  <	mov qword [rbp + 24], stack_test$7>
new  <	mov rdi, rbp>

48:
old  <	mov [rbp + 32], rbp>
new  <	add rdi, 4>

49:
old  <	add rbp, 24>
new  <	jmp printf>

50:
old  <	mov rdi, rbp>
new  <>

51:
old  <	add rdi, 4>
new  < stack_test$6:>

52:
old  <	jmp printf>
new  <	; PostCall 24>

55:
old  <	; PostCall 24>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

58:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Call stack_test 24 0>

59:
old  <>
new  <	mov qword [rbp + 24], stack_test$9>

60:
old  < stack_test$9:>
new  <	mov [rbp + 32], rbp>

61:
old  <	; Call stack_test 24 0>
new  <	add rbp, 24>

62:
old  <	mov qword [rbp + 24], stack_test$10>
new  <	jmp stack_test>

63:
old  <	mov [rbp + 32], rbp>
new  <>

64:
old  <	add rbp, 24>
new  < stack_test$9:>

65:
old  <	jmp stack_test>
new  <	; PostCall 24>

68:
old  <	; PostCall 24>
new  <	; Return>

69:
old  <>
new  <	mov rax, [rbp]>

70:
old  < stack_test$11:>
new  <	mov rdi, [rbp + 16]>

71:
old  <	; Return>
new  <	mov rbp, [rbp + 8]>

72:
old  <	mov rax, [rbp]>
new  <	jmp rax>

73:
old  <	mov rdi, [rbp + 16]>
new  <>

74:
old  <	mov rbp, [rbp + 8]>
new  < stack_test$11:>

75:
old  <	jmp rax>
new  <	; FunctionEnd stack_test>

77:
old  < stack_test$12:>
new  <section .data>

78:
old  <	; FunctionEnd stack_test>
new  <>

79:
old  <>
new  <string_102420bytes2Dblock20number3A2025i0A#:>

80:
old  <section .data>
new  <	; Initializer String 1024 bytes-block number: %i\n>

81:
old  <>
new  <	db "1024 bytes-block number: %i", 10, 0>

82:
old  <string_102420bytes2Dblock20number3A2025i0A#:>
new  <>

83:
old  <	; Initializer String 1024 bytes-block number: %i\n>
new  <section .text>

84:
old  <	db "1024 bytes-block number: %i", 10, 0>
new  <>

85:
old  <>
new  < heap_test:>

86:
old  <section .text>
new  <	; Assign count 0>

87:
old  <>
new  <	mov dword [rbp + 24], 0>

88:
old  < heap_test:>
new  <>

89:
old  <	; Assign count 0>
new  < heap_test$1:>

90:
old  <	mov dword [rbp + 24], 0>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

92:
old  < heap_test$1:>
new  < heap_test$2:>

93:
old  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter signedint 1024 60>

94:
old  <>
new  <	mov dword [rbp + 60], 1024>

95:
old  < heap_test$2:>
new  <>

96:
old  <	; Parameter signedint 1024 60>
new  < heap_test$3:>

97:
old  <	mov dword [rbp + 60], 1024>
new  <	; Call malloc 36 0>

98:
old  <>
new  <	mov qword [rbp + 36], heap_test$4>

99:
old  < heap_test$3:>
new  <	mov [rbp + 44], rbp>

100:
old  <	; Call malloc 36 0>
new  <	add rbp, 36>

101:
old  <	mov qword [rbp + 36], heap_test$4>
new  <	jmp malloc>

102:
old  <	mov [rbp + 44], rbp>
new  <>

103:
old  <	add rbp, 36>
new  < heap_test$4:>

104:
old  <	jmp malloc>
new  <	; PostCall 36>

106:
old  < heap_test$4:>
new  < heap_test$5:>

107:
old  <	; PostCall 36>
new  <	; GetReturnValue Â£temporary3711>

109:
old  < heap_test$5:>
new  < heap_test$6:>

110:
old  <	; GetReturnValue Â£temporary3749>
new  <	; Assign pointer Â£temporary3711>

111:
old  <>
new  <	mov [rbp + 28], rbx>

112:
old  < heap_test$6:>
new  <>

113:
old  <	; Assign pointer Â£temporary3749>
new  < heap_test$7:>

114:
old  <	mov [rbp + 28], rbx>
new  <	; Equal 17 pointer 0>

115:
old  <>
new  <	cmp qword [rbp + 28], 0>

116:
old  < heap_test$7:>
new  <	je heap_test$17>

117:
old  <	; Equal 17 pointer 0>
new  <>

118:
old  <	cmp qword [rbp + 28], 0>
new  < heap_test$8:>

119:
old  <	je heap_test$17>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

121:
old  < heap_test$8:>
new  < heap_test$9:>

122:
old  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter pointer "1024 bytes-block number: %i\n" 60>

123:
old  <>
new  <	mov qword [rbp + 60], string_102420bytes2Dblock20number3A2025i0A#>

124:
old  < heap_test$9:>
new  <>

125:
old  <	; Parameter pointer "1024 bytes-block number: %i\n" 60>
new  < heap_test$10:>

126:
old  <	mov qword [rbp + 60], string_102420bytes2Dblock20number3A2025i0A#>
new  <	; Assign Â£temporary3713 count>

127:
old  <>
new  <	mov eax, [rbp + 24]>

128:
old  < heap_test$10:>
new  <>

129:
old  <	; Assign Â£temporary3751 count>
new  < heap_test$11:>

130:
old  <	mov eax, [rbp + 24]>
new  <	; BinaryAdd count count 1>

131:
old  <>
new  <	inc dword [rbp + 24]>

132:
old  < heap_test$11:>
new  <>

133:
old  <	; BinaryAdd count count 1>
new  < heap_test$12:>

134:
old  <	inc dword [rbp + 24]>
new  <	; Parameter signedint Â£temporary3713 68>

135:
old  <>
new  <	mov [rbp + 68], eax>

136:
old  < heap_test$12:>
new  <>

137:
old  <	; Parameter signedint Â£temporary3751 68>
new  < heap_test$13:>

138:
old  <	mov [rbp + 68], eax>
new  <	; Parameter pointer pointer 72>

139:
old  <>
new  <	mov rax, [rbp + 28]>

140:
old  < heap_test$13:>
new  <	mov [rbp + 72], rax>

141:
old  <	; Parameter pointer pointer 72>
new  <>

142:
old  <	mov rax, [rbp + 28]>
new  < heap_test$14:>

143:
old  <	mov [rbp + 72], rax>
new  <	; Call printf 36 12>

144:
old  <>
new  <	mov qword [rbp + 36], heap_test$15>

145:
old  < heap_test$14:>
new  <	mov [rbp + 44], rbp>

146:
old  <	; Call printf 36 12>
new  <	add rbp, 36>

147:
old  <	mov qword [rbp + 36], heap_test$15>
new  <	mov rdi, rbp>

148:
old  <	mov [rbp + 44], rbp>
new  <	add rdi, 12>

149:
old  <	add rbp, 36>
new  <	jmp printf>

150:
old  <	mov rdi, rbp>
new  <>

151:
old  <	add rdi, 12>
new  < heap_test$15:>

152:
old  <	jmp printf>
new  <	; PostCall 36>

154:
old  < heap_test$15:>
new  < heap_test$16:>

155:
old  <	; PostCall 36>
new  <	; Goto 1>

156:
old  <>
new  <	jmp heap_test$1>

157:
old  < heap_test$16:>
new  <>

158:
old  <	; Goto 1>
new  < heap_test$17:>

159:
old  <	jmp heap_test$1>
new  <	; Return>

160:
old  <>
new  <	mov rax, [rbp]>

161:
old  < heap_test$17:>
new  <	mov rdi, [rbp + 16]>

162:
old  <	; Return>
new  <	mov rbp, [rbp + 8]>

163:
old  <	mov rax, [rbp]>
new  <	jmp rax>

164:
old  <	mov rdi, [rbp + 16]>
new  <>

165:
old  <	mov rbp, [rbp + 8]>
new  < heap_test$18:>

166:
old  <	jmp rax>
new  <	; FunctionEnd heap_test>

20:
old  <	; Empty>
new  <	; Assign p 0>

21:
old  <>
new  <	mov qword [rbp + 28], 0>

22:
old  < malloc_test2$1:>
new  <>

23:
old  <	; Assign p 0>
new  < malloc_test2$1:>

24:
old  <	mov qword [rbp + 28], 0>
new  <	; Assign r 0>

25:
old  <>
new  <	mov qword [rbp + 36], 0>

26:
old  < malloc_test2$2:>
new  <>

27:
old  <	; Assign r 0>
new  < malloc_test2$2:>

28:
old  <	mov qword [rbp + 36], 0>
new  <	; PreCall 44 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

31:
old  <	; PreCall 44 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter signedint 96 68>

32:
old  <>
new  <	mov dword [rbp + 68], 96>

33:
old  < malloc_test2$4:>
new  <>

34:
old  <	; Parameter signedint 96 68>
new  < malloc_test2$4:>

35:
old  <	mov dword [rbp + 68], 96>
new  <	; Call malloc 44 0>

36:
old  <>
new  <	mov qword [rbp + 44], malloc_test2$5>

37:
old  < malloc_test2$5:>
new  <	mov [rbp + 52], rbp>

38:
old  <	; Call malloc 44 0>
new  <	add rbp, 44>

39:
old  <	mov qword [rbp + 44], malloc_test2$6>
new  <	jmp malloc>

40:
old  <	mov [rbp + 52], rbp>
new  <>

41:
old  <	add rbp, 44>
new  < malloc_test2$5:>

42:
old  <	jmp malloc>
new  <	; PostCall 44>

45:
old  <	; PostCall 44>
new  <	; GetReturnValue Â£temporary3715>

48:
old  <	; GetReturnValue Â£temporary3753>
new  <	; Assign q Â£temporary3715>

49:
old  <>
new  <	mov [rbp + 44], rbx>

50:
old  < malloc_test2$8:>
new  <>

51:
old  <	; Assign q Â£temporary3753>
new  < malloc_test2$8:>

52:
old  <	mov [rbp + 44], rbx>
new  <	; Assign index 0>

53:
old  <>
new  <	mov dword [rbp + 24], 0>

54:
old  < malloc_test2$9:>
new  <>

55:
old  <	; Assign index 0>
new  < malloc_test2$9:>

56:
old  <	mov dword [rbp + 24], 0>
new  <	; SignedGreaterThanEqual 20 index 10>

57:
old  <>
new  <	cmp dword [rbp + 24], 10>

58:
old  < malloc_test2$10:>
new  <	jge malloc_test2$20>

59:
old  <	; SignedGreaterThanEqual 21 index 10>
new  <>

60:
old  <	cmp dword [rbp + 24], 10>
new  < malloc_test2$10:>

61:
old  <	jge malloc_test2$21>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

64:
old  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter signedint 96 76>

65:
old  <>
new  <	mov dword [rbp + 76], 96>

66:
old  < malloc_test2$12:>
new  <>

67:
old  <	; Parameter signedint 96 76>
new  < malloc_test2$12:>

68:
old  <	mov dword [rbp + 76], 96>
new  <	; Call malloc 52 0>

69:
old  <>
new  <	mov qword [rbp + 52], malloc_test2$13>

70:
old  < malloc_test2$13:>
new  <	mov [rbp + 60], rbp>

71:
old  <	; Call malloc 52 0>
new  <	add rbp, 52>

72:
old  <	mov qword [rbp + 52], malloc_test2$14>
new  <	jmp malloc>

73:
old  <	mov [rbp + 60], rbp>
new  <>

74:
old  <	add rbp, 52>
new  < malloc_test2$13:>

75:
old  <	jmp malloc>
new  <	; PostCall 52>

78:
old  <	; PostCall 52>
new  <	; GetReturnValue Â£temporary3718>

81:
old  <	; GetReturnValue Â£temporary3756>
new  <	; Assign p Â£temporary3718>

82:
old  <>
new  <	mov [rbp + 28], rbx>

83:
old  < malloc_test2$16:>
new  <>

84:
old  <	; Assign p Â£temporary3756>
new  < malloc_test2$16:>

85:
old  <	mov [rbp + 28], rbx>
new  <	; NotEqual 18 index 5>

86:
old  <>
new  <	cmp dword [rbp + 24], 5>

87:
old  < malloc_test2$17:>
new  <	jne malloc_test2$18>

88:
old  <	; NotEqual 19 index 5>
new  <>

89:
old  <	cmp dword [rbp + 24], 5>
new  < malloc_test2$17:>

90:
old  <	jne malloc_test2$19>
new  <	; Assign r p>

91:
old  <>
new  <	mov rax, [rbp + 28]>

92:
old  < malloc_test2$18:>
new  <	mov [rbp + 36], rax>

93:
old  <	; Assign r p>
new  <>

94:
old  <	mov rax, [rbp + 28]>
new  < malloc_test2$18:>

95:
old  <	mov [rbp + 36], rax>
new  <	; BinaryAdd index index 1>

96:
old  <>
new  <	inc dword [rbp + 24]>

97:
old  < malloc_test2$19:>
new  <>

98:
old  <	; BinaryAdd index index 1>
new  < malloc_test2$19:>

99:
old  <	inc dword [rbp + 24]>
new  <	; Goto 9>

100:
old  <>
new  <	jmp malloc_test2$9>

101:
old  < malloc_test2$20:>
new  <>

102:
old  <	; Goto 10>
new  < malloc_test2$20:>

103:
old  <	jmp malloc_test2$10>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

106:
old  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Call print_heap 52 0>

107:
old  <>
new  <	mov qword [rbp + 52], malloc_test2$22>

108:
old  < malloc_test2$22:>
new  <	mov [rbp + 60], rbp>

109:
old  <	; Call print_heap 52 0>
new  <	add rbp, 52>

110:
old  <	mov qword [rbp + 52], malloc_test2$23>
new  <	jmp print_heap>

111:
old  <	mov [rbp + 60], rbp>
new  <>

112:
old  <	add rbp, 52>
new  < malloc_test2$22:>

113:
old  <	jmp print_heap>
new  <	; PostCall 52>

116:
old  <	; PostCall 52>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

119:
old  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter pointer q 76>

120:
old  <>
new  <	mov rax, [rbp + 44]>

121:
old  < malloc_test2$25:>
new  <	mov [rbp + 76], rax>

122:
old  <	; Parameter pointer q 76>
new  <>

123:
old  <	mov rax, [rbp + 44]>
new  < malloc_test2$25:>

124:
old  <	mov [rbp + 76], rax>
new  <	; Parameter signedint 50 84>

125:
old  <>
new  <	mov dword [rbp + 84], 50>

126:
old  < malloc_test2$26:>
new  <>

127:
old  <	; Parameter signedint 50 84>
new  < malloc_test2$26:>

128:
old  <	mov dword [rbp + 84], 50>
new  <	; Call realloc 52 0>

129:
old  <>
new  <	mov qword [rbp + 52], malloc_test2$27>

130:
old  < malloc_test2$27:>
new  <	mov [rbp + 60], rbp>

131:
old  <	; Call realloc 52 0>
new  <	add rbp, 52>

132:
old  <	mov qword [rbp + 52], malloc_test2$28>
new  <	jmp realloc>

133:
old  <	mov [rbp + 60], rbp>
new  <>

134:
old  <	add rbp, 52>
new  < malloc_test2$27:>

135:
old  <	jmp realloc>
new  <	; PostCall 52>

138:
old  <	; PostCall 52>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

141:
old  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Call print_heap 52 0>

142:
old  <>
new  <	mov qword [rbp + 52], malloc_test2$30>

143:
old  < malloc_test2$30:>
new  <	mov [rbp + 60], rbp>

144:
old  <	; Call print_heap 52 0>
new  <	add rbp, 52>

145:
old  <	mov qword [rbp + 52], malloc_test2$31>
new  <	jmp print_heap>

146:
old  <	mov [rbp + 60], rbp>
new  <>

147:
old  <	add rbp, 52>
new  < malloc_test2$30:>

148:
old  <	jmp print_heap>
new  <	; PostCall 52>

151:
old  <	; PostCall 52>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

154:
old  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter pointer r 76>

155:
old  <>
new  <	mov rax, [rbp + 36]>

156:
old  < malloc_test2$33:>
new  <	mov [rbp + 76], rax>

157:
old  <	; Parameter pointer r 76>
new  <>

158:
old  <	mov rax, [rbp + 36]>
new  < malloc_test2$33:>

159:
old  <	mov [rbp + 76], rax>
new  <	; Parameter signedint 50 84>

160:
old  <>
new  <	mov dword [rbp + 84], 50>

161:
old  < malloc_test2$34:>
new  <>

162:
old  <	; Parameter signedint 50 84>
new  < malloc_test2$34:>

163:
old  <	mov dword [rbp + 84], 50>
new  <	; Call realloc 52 0>

164:
old  <>
new  <	mov qword [rbp + 52], malloc_test2$35>

165:
old  < malloc_test2$35:>
new  <	mov [rbp + 60], rbp>

166:
old  <	; Call realloc 52 0>
new  <	add rbp, 52>

167:
old  <	mov qword [rbp + 52], malloc_test2$36>
new  <	jmp realloc>

168:
old  <	mov [rbp + 60], rbp>
new  <>

169:
old  <	add rbp, 52>
new  < malloc_test2$35:>

170:
old  <	jmp realloc>
new  <	; PostCall 52>

173:
old  <	; PostCall 52>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

176:
old  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Call print_heap 52 0>

177:
old  <>
new  <	mov qword [rbp + 52], malloc_test2$38>

178:
old  < malloc_test2$38:>
new  <	mov [rbp + 60], rbp>

179:
old  <	; Call print_heap 52 0>
new  <	add rbp, 52>

180:
old  <	mov qword [rbp + 52], malloc_test2$39>
new  <	jmp print_heap>

181:
old  <	mov [rbp + 60], rbp>
new  <>

182:
old  <	add rbp, 52>
new  < malloc_test2$38:>

183:
old  <	jmp print_heap>
new  <	; PostCall 52>

186:
old  <	; PostCall 52>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

189:
old  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter pointer p 76>

190:
old  <>
new  <	mov rax, [rbp + 28]>

191:
old  < malloc_test2$41:>
new  <	mov [rbp + 76], rax>

192:
old  <	; Parameter pointer p 76>
new  <>

193:
old  <	mov rax, [rbp + 28]>
new  < malloc_test2$41:>

194:
old  <	mov [rbp + 76], rax>
new  <	; Parameter signedint 50 84>

195:
old  <>
new  <	mov dword [rbp + 84], 50>

196:
old  < malloc_test2$42:>
new  <>

197:
old  <	; Parameter signedint 50 84>
new  < malloc_test2$42:>

198:
old  <	mov dword [rbp + 84], 50>
new  <	; Call realloc 52 0>

199:
old  <>
new  <	mov qword [rbp + 52], malloc_test2$43>

200:
old  < malloc_test2$43:>
new  <	mov [rbp + 60], rbp>

201:
old  <	; Call realloc 52 0>
new  <	add rbp, 52>

202:
old  <	mov qword [rbp + 52], malloc_test2$44>
new  <	jmp realloc>

203:
old  <	mov [rbp + 60], rbp>
new  <>

204:
old  <	add rbp, 52>
new  < malloc_test2$43:>

205:
old  <	jmp realloc>
new  <	; PostCall 52>

208:
old  <	; PostCall 52>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

211:
old  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Call print_heap 52 0>

212:
old  <>
new  <	mov qword [rbp + 52], malloc_test2$46>

213:
old  < malloc_test2$46:>
new  <	mov [rbp + 60], rbp>

214:
old  <	; Call print_heap 52 0>
new  <	add rbp, 52>

215:
old  <	mov qword [rbp + 52], malloc_test2$47>
new  <	jmp print_heap>

216:
old  <	mov [rbp + 60], rbp>
new  <>

217:
old  <	add rbp, 52>
new  < malloc_test2$46:>

218:
old  <	jmp print_heap>
new  <	; PostCall 52>

221:
old  <	; PostCall 52>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

224:
old  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter pointer q 76>

225:
old  <>
new  <	mov rax, [rbp + 44]>

226:
old  < malloc_test2$49:>
new  <	mov [rbp + 76], rax>

227:
old  <	; Parameter pointer q 76>
new  <>

228:
old  <	mov rax, [rbp + 44]>
new  < malloc_test2$49:>

229:
old  <	mov [rbp + 76], rax>
new  <	; Parameter signedint 200 84>

230:
old  <>
new  <	mov dword [rbp + 84], 200>

231:
old  < malloc_test2$50:>
new  <>

232:
old  <	; Parameter signedint 200 84>
new  < malloc_test2$50:>

233:
old  <	mov dword [rbp + 84], 200>
new  <	; Call realloc 52 0>

234:
old  <>
new  <	mov qword [rbp + 52], malloc_test2$51>

235:
old  < malloc_test2$51:>
new  <	mov [rbp + 60], rbp>

236:
old  <	; Call realloc 52 0>
new  <	add rbp, 52>

237:
old  <	mov qword [rbp + 52], malloc_test2$52>
new  <	jmp realloc>

238:
old  <	mov [rbp + 60], rbp>
new  <>

239:
old  <	add rbp, 52>
new  < malloc_test2$51:>

240:
old  <	jmp realloc>
new  <	; PostCall 52>

243:
old  <	; PostCall 52>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

246:
old  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Call print_heap 52 0>

247:
old  <>
new  <	mov qword [rbp + 52], malloc_test2$54>

248:
old  < malloc_test2$54:>
new  <	mov [rbp + 60], rbp>

249:
old  <	; Call print_heap 52 0>
new  <	add rbp, 52>

250:
old  <	mov qword [rbp + 52], malloc_test2$55>
new  <	jmp print_heap>

251:
old  <	mov [rbp + 60], rbp>
new  <>

252:
old  <	add rbp, 52>
new  < malloc_test2$54:>

253:
old  <	jmp print_heap>
new  <	; PostCall 52>

256:
old  <	; PostCall 52>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

259:
old  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter pointer r 76>

260:
old  <>
new  <	mov rax, [rbp + 36]>

261:
old  < malloc_test2$57:>
new  <	mov [rbp + 76], rax>

262:
old  <	; Parameter pointer r 76>
new  <>

263:
old  <	mov rax, [rbp + 36]>
new  < malloc_test2$57:>

264:
old  <	mov [rbp + 76], rax>
new  <	; Parameter signedint 200 84>

265:
old  <>
new  <	mov dword [rbp + 84], 200>

266:
old  < malloc_test2$58:>
new  <>

267:
old  <	; Parameter signedint 200 84>
new  < malloc_test2$58:>

268:
old  <	mov dword [rbp + 84], 200>
new  <	; Call realloc 52 0>

269:
old  <>
new  <	mov qword [rbp + 52], malloc_test2$59>

270:
old  < malloc_test2$59:>
new  <	mov [rbp + 60], rbp>

271:
old  <	; Call realloc 52 0>
new  <	add rbp, 52>

272:
old  <	mov qword [rbp + 52], malloc_test2$60>
new  <	jmp realloc>

273:
old  <	mov [rbp + 60], rbp>
new  <>

274:
old  <	add rbp, 52>
new  < malloc_test2$59:>

275:
old  <	jmp realloc>
new  <	; PostCall 52>

278:
old  <	; PostCall 52>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

281:
old  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Call print_heap 52 0>

282:
old  <>
new  <	mov qword [rbp + 52], malloc_test2$62>

283:
old  < malloc_test2$62:>
new  <	mov [rbp + 60], rbp>

284:
old  <	; Call print_heap 52 0>
new  <	add rbp, 52>

285:
old  <	mov qword [rbp + 52], malloc_test2$63>
new  <	jmp print_heap>

286:
old  <	mov [rbp + 60], rbp>
new  <>

287:
old  <	add rbp, 52>
new  < malloc_test2$62:>

288:
old  <	jmp print_heap>
new  <	; PostCall 52>

291:
old  <	; PostCall 52>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

294:
old  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter pointer p 76>

295:
old  <>
new  <	mov rax, [rbp + 28]>

296:
old  < malloc_test2$65:>
new  <	mov [rbp + 76], rax>

297:
old  <	; Parameter pointer p 76>
new  <>

298:
old  <	mov rax, [rbp + 28]>
new  < malloc_test2$65:>

299:
old  <	mov [rbp + 76], rax>
new  <	; Parameter signedint 200 84>

300:
old  <>
new  <	mov dword [rbp + 84], 200>

301:
old  < malloc_test2$66:>
new  <>

302:
old  <	; Parameter signedint 200 84>
new  < malloc_test2$66:>

303:
old  <	mov dword [rbp + 84], 200>
new  <	; Call realloc 52 0>

304:
old  <>
new  <	mov qword [rbp + 52], malloc_test2$67>

305:
old  < malloc_test2$67:>
new  <	mov [rbp + 60], rbp>

306:
old  <	; Call realloc 52 0>
new  <	add rbp, 52>

307:
old  <	mov qword [rbp + 52], malloc_test2$68>
new  <	jmp realloc>

308:
old  <	mov [rbp + 60], rbp>
new  <>

309:
old  <	add rbp, 52>
new  < malloc_test2$67:>

310:
old  <	jmp realloc>
new  <	; PostCall 52>

313:
old  <	; PostCall 52>
new  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

316:
old  <	; PreCall 52 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Call print_heap 52 0>

317:
old  <>
new  <	mov qword [rbp + 52], malloc_test2$70>

318:
old  < malloc_test2$70:>
new  <	mov [rbp + 60], rbp>

319:
old  <	; Call print_heap 52 0>
new  <	add rbp, 52>

320:
old  <	mov qword [rbp + 52], malloc_test2$71>
new  <	jmp print_heap>

321:
old  <	mov [rbp + 60], rbp>
new  <>

322:
old  <	add rbp, 52>
new  < malloc_test2$70:>

323:
old  <	jmp print_heap>
new  <	; PostCall 52>

326:
old  <	; PostCall 52>
new  <	; Return>

327:
old  <>
new  <	mov rax, [rbp]>

328:
old  < malloc_test2$72:>
new  <	mov rdi, [rbp + 16]>

329:
old  <	; Return>
new  <	mov rbp, [rbp + 8]>

330:
old  <	mov rax, [rbp]>
new  <	jmp rax>

331:
old  <	mov rdi, [rbp + 16]>
new  <>

332:
old  <	mov rbp, [rbp + 8]>
new  < malloc_test2$72:>

333:
old  <	jmp rax>
new  <	; FunctionEnd malloc_test2>

335:
old  < malloc_test2$73:>
new  <section .text>

336:
old  <	; FunctionEnd malloc_test2>
new  <>

337:
old  <>
new  < malloc_test3:>

338:
old  <section .text>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

340:
old  < malloc_test3:>
new  < malloc_test3$1:>

341:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter signedint 96 48>

342:
old  <>
new  <	mov dword [rbp + 48], 96>

343:
old  < malloc_test3$1:>
new  <>

344:
old  <	; Parameter signedint 96 48>
new  < malloc_test3$2:>

345:
old  <	mov dword [rbp + 48], 96>
new  <	; Parameter signedint 1 52>

346:
old  <>
new  <	mov dword [rbp + 52], 1>

347:
old  < malloc_test3$2:>
new  <>

348:
old  <	; Parameter signedint 1 52>
new  < malloc_test3$3:>

349:
old  <	mov dword [rbp + 52], 1>
new  <	; Call calloc 24 0>

350:
old  <>
new  <	mov qword [rbp + 24], malloc_test3$4>

351:
old  < malloc_test3$3:>
new  <	mov [rbp + 32], rbp>

352:
old  <	; Call calloc 24 0>
new  <	add rbp, 24>

353:
old  <	mov qword [rbp + 24], malloc_test3$4>
new  <	jmp calloc>

354:
old  <	mov [rbp + 32], rbp>
new  <>

355:
old  <	add rbp, 24>
new  < malloc_test3$4:>

356:
old  <	jmp calloc>
new  <	; PostCall 24>

358:
old  < malloc_test3$4:>
new  < malloc_test3$5:>

359:
old  <	; PostCall 24>
new  <	; GetReturnValue Â£temporary3733>

361:
old  < malloc_test3$5:>
new  < malloc_test3$6:>

362:
old  <	; GetReturnValue Â£temporary3771>
new  <	; Assign a Â£temporary3733>

363:
old  <>
new  <	mov [rbp + 24], rbx>

364:
old  < malloc_test3$6:>
new  <>

365:
old  <	; Assign a Â£temporary3771>
new  < malloc_test3$7:>

366:
old  <	mov [rbp + 24], rbx>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

368:
old  < malloc_test3$7:>
new  < malloc_test3$8:>

369:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter signedint 96 56>

370:
old  <>
new  <	mov dword [rbp + 56], 96>

371:
old  < malloc_test3$8:>
new  <>

372:
old  <	; Parameter signedint 96 56>
new  < malloc_test3$9:>

373:
old  <	mov dword [rbp + 56], 96>
new  <	; Parameter signedint 1 60>

374:
old  <>
new  <	mov dword [rbp + 60], 1>

375:
old  < malloc_test3$9:>
new  <>

376:
old  <	; Parameter signedint 1 60>
new  < malloc_test3$10:>

377:
old  <	mov dword [rbp + 60], 1>
new  <	; Call calloc 32 0>

378:
old  <>
new  <	mov qword [rbp + 32], malloc_test3$11>

379:
old  < malloc_test3$10:>
new  <	mov [rbp + 40], rbp>

380:
old  <	; Call calloc 32 0>
new  <	add rbp, 32>

381:
old  <	mov qword [rbp + 32], malloc_test3$11>
new  <	jmp calloc>

382:
old  <	mov [rbp + 40], rbp>
new  <>

383:
old  <	add rbp, 32>
new  < malloc_test3$11:>

384:
old  <	jmp calloc>
new  <	; PostCall 32>

386:
old  < malloc_test3$11:>
new  < malloc_test3$12:>

387:
old  <	; PostCall 32>
new  <	; GetReturnValue Â£temporary3734>

389:
old  < malloc_test3$12:>
new  < malloc_test3$13:>

390:
old  <	; GetReturnValue Â£temporary3772>
new  <	; Assign b Â£temporary3734>

391:
old  <>
new  <	mov [rbp + 32], rbx>

392:
old  < malloc_test3$13:>
new  <>

393:
old  <	; Assign b Â£temporary3772>
new  < malloc_test3$14:>

394:
old  <	mov [rbp + 32], rbx>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

396:
old  < malloc_test3$14:>
new  < malloc_test3$15:>

397:
old  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter signedint 96 64>

398:
old  <>
new  <	mov dword [rbp + 64], 96>

399:
old  < malloc_test3$15:>
new  <>

400:
old  <	; Parameter signedint 96 64>
new  < malloc_test3$16:>

401:
old  <	mov dword [rbp + 64], 96>
new  <	; Parameter signedint 1 68>

402:
old  <>
new  <	mov dword [rbp + 68], 1>

403:
old  < malloc_test3$16:>
new  <>

404:
old  <	; Parameter signedint 1 68>
new  < malloc_test3$17:>

405:
old  <	mov dword [rbp + 68], 1>
new  <	; Call calloc 40 0>

406:
old  <>
new  <	mov qword [rbp + 40], malloc_test3$18>

407:
old  < malloc_test3$17:>
new  <	mov [rbp + 48], rbp>

408:
old  <	; Call calloc 40 0>
new  <	add rbp, 40>

409:
old  <	mov qword [rbp + 40], malloc_test3$18>
new  <	jmp calloc>

410:
old  <	mov [rbp + 48], rbp>
new  <>

411:
old  <	add rbp, 40>
new  < malloc_test3$18:>

412:
old  <	jmp calloc>
new  <	; PostCall 40>

414:
old  < malloc_test3$18:>
new  < malloc_test3$19:>

415:
old  <	; PostCall 40>
new  <	; GetReturnValue Â£temporary3735>

417:
old  < malloc_test3$19:>
new  < malloc_test3$20:>

418:
old  <	; GetReturnValue Â£temporary3773>
new  <	; Assign c Â£temporary3735>

419:
old  <>
new  <	mov [rbp + 40], rbx>

420:
old  < malloc_test3$20:>
new  <>

421:
old  <	; Assign c Â£temporary3773>
new  < malloc_test3$21:>

422:
old  <	mov [rbp + 40], rbx>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

424:
old  < malloc_test3$21:>
new  < malloc_test3$22:>

425:
old  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter signedint 96 72>

426:
old  <>
new  <	mov dword [rbp + 72], 96>

427:
old  < malloc_test3$22:>
new  <>

428:
old  <	; Parameter signedint 96 72>
new  < malloc_test3$23:>

429:
old  <	mov dword [rbp + 72], 96>
new  <	; Parameter signedint 1 76>

430:
old  <>
new  <	mov dword [rbp + 76], 1>

431:
old  < malloc_test3$23:>
new  <>

432:
old  <	; Parameter signedint 1 76>
new  < malloc_test3$24:>

433:
old  <	mov dword [rbp + 76], 1>
new  <	; Call calloc 48 0>

434:
old  <>
new  <	mov qword [rbp + 48], malloc_test3$25>

435:
old  < malloc_test3$24:>
new  <	mov [rbp + 56], rbp>

436:
old  <	; Call calloc 48 0>
new  <	add rbp, 48>

437:
old  <	mov qword [rbp + 48], malloc_test3$25>
new  <	jmp calloc>

438:
old  <	mov [rbp + 56], rbp>
new  <>

439:
old  <	add rbp, 48>
new  < malloc_test3$25:>

440:
old  <	jmp calloc>
new  <	; PostCall 48>

442:
old  < malloc_test3$25:>
new  < malloc_test3$26:>

443:
old  <	; PostCall 48>
new  <	; GetReturnValue Â£temporary3736>

445:
old  < malloc_test3$26:>
new  < malloc_test3$27:>

446:
old  <	; GetReturnValue Â£temporary3774>
new  <	; Assign d Â£temporary3736>

447:
old  <>
new  <	mov [rbp + 48], rbx>

448:
old  < malloc_test3$27:>
new  <>

449:
old  <	; Assign d Â£temporary3774>
new  < malloc_test3$28:>

450:
old  <	mov [rbp + 48], rbx>
new  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

452:
old  < malloc_test3$28:>
new  < malloc_test3$29:>

453:
old  <	; PreCall 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter signedint 96 80>

454:
old  <>
new  <	mov dword [rbp + 80], 96>

455:
old  < malloc_test3$29:>
new  <>

456:
old  <	; Parameter signedint 96 80>
new  < malloc_test3$30:>

457:
old  <	mov dword [rbp + 80], 96>
new  <	; Parameter signedint 1 84>

458:
old  <>
new  <	mov dword [rbp + 84], 1>

459:
old  < malloc_test3$30:>
new  <>

460:
old  <	; Parameter signedint 1 84>
new  < malloc_test3$31:>

461:
old  <	mov dword [rbp + 84], 1>
new  <	; Call calloc 56 0>

462:
old  <>
new  <	mov qword [rbp + 56], malloc_test3$32>

463:
old  < malloc_test3$31:>
new  <	mov [rbp + 64], rbp>

464:
old  <	; Call calloc 56 0>
new  <	add rbp, 56>

465:
old  <	mov qword [rbp + 56], malloc_test3$32>
new  <	jmp calloc>

466:
old  <	mov [rbp + 64], rbp>
new  <>

467:
old  <	add rbp, 56>
new  < malloc_test3$32:>

468:
old  <	jmp calloc>
new  <	; PostCall 56>

470:
old  < malloc_test3$32:>
new  < malloc_test3$33:>

471:
old  <	; PostCall 56>
new  <	; GetReturnValue Â£temporary3737>

473:
old  < malloc_test3$33:>
new  < malloc_test3$34:>

474:
old  <	; GetReturnValue Â£temporary3775>
new  <	; Assign e Â£temporary3737>

475:
old  <>
new  <	mov [rbp + 56], rbx>

476:
old  < malloc_test3$34:>
new  <>

477:
old  <	; Assign e Â£temporary3775>
new  < malloc_test3$35:>

478:
old  <	mov [rbp + 56], rbx>
new  <	; PreCall 64 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

480:
old  < malloc_test3$35:>
new  < malloc_test3$36:>

481:
old  <	; PreCall 64 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Call print_heap 64 0>

482:
old  <>
new  <	mov qword [rbp + 64], malloc_test3$37>

483:
old  < malloc_test3$36:>
new  <	mov [rbp + 72], rbp>

484:
old  <	; Call print_heap 64 0>
new  <	add rbp, 64>

485:
old  <	mov qword [rbp + 64], malloc_test3$37>
new  <	jmp print_heap>

486:
old  <	mov [rbp + 72], rbp>
new  <>

487:
old  <	add rbp, 64>
new  < malloc_test3$37:>

488:
old  <	jmp print_heap>
new  <	; PostCall 64>

490:
old  < malloc_test3$37:>
new  < malloc_test3$38:>

491:
old  <	; PostCall 64>
new  <	; PreCall 64 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

493:
old  < malloc_test3$38:>
new  < malloc_test3$39:>

494:
old  <	; PreCall 64 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter pointer a 88>

495:
old  <>
new  <	mov rax, [rbp + 24]>

496:
old  < malloc_test3$39:>
new  <	mov [rbp + 88], rax>

497:
old  <	; Parameter pointer a 88>
new  <>

498:
old  <	mov rax, [rbp + 24]>
new  < malloc_test3$40:>

499:
old  <	mov [rbp + 88], rax>
new  <	; Call free 64 0>

500:
old  <>
new  <	mov qword [rbp + 64], malloc_test3$41>

501:
old  < malloc_test3$40:>
new  <	mov [rbp + 72], rbp>

502:
old  <	; Call free 64 0>
new  <	add rbp, 64>

503:
old  <	mov qword [rbp + 64], malloc_test3$41>
new  <	jmp free>

504:
old  <	mov [rbp + 72], rbp>
new  <>

505:
old  <	add rbp, 64>
new  < malloc_test3$41:>

506:
old  <	jmp free>
new  <	; PostCall 64>

508:
old  < malloc_test3$41:>
new  < malloc_test3$42:>

509:
old  <	; PostCall 64>
new  <	; PreCall 64 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

511:
old  < malloc_test3$42:>
new  < malloc_test3$43:>

512:
old  <	; PreCall 64 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter pointer b 88>

513:
old  <>
new  <	mov rax, [rbp + 32]>

514:
old  < malloc_test3$43:>
new  <	mov [rbp + 88], rax>

515:
old  <	; Parameter pointer b 88>
new  <>

516:
old  <	mov rax, [rbp + 32]>
new  < malloc_test3$44:>

517:
old  <	mov [rbp + 88], rax>
new  <	; Call free 64 0>

518:
old  <>
new  <	mov qword [rbp + 64], malloc_test3$45>

519:
old  < malloc_test3$44:>
new  <	mov [rbp + 72], rbp>

520:
old  <	; Call free 64 0>
new  <	add rbp, 64>

521:
old  <	mov qword [rbp + 64], malloc_test3$45>
new  <	jmp free>

522:
old  <	mov [rbp + 72], rbp>
new  <>

523:
old  <	add rbp, 64>
new  < malloc_test3$45:>

524:
old  <	jmp free>
new  <	; PostCall 64>

526:
old  < malloc_test3$45:>
new  < malloc_test3$46:>

527:
old  <	; PostCall 64>
new  <	; PreCall 64 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

529:
old  < malloc_test3$46:>
new  < malloc_test3$47:>

530:
old  <	; PreCall 64 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter pointer c 88>

531:
old  <>
new  <	mov rax, [rbp + 40]>

532:
old  < malloc_test3$47:>
new  <	mov [rbp + 88], rax>

533:
old  <	; Parameter pointer c 88>
new  <>

534:
old  <	mov rax, [rbp + 40]>
new  < malloc_test3$48:>

535:
old  <	mov [rbp + 88], rax>
new  <	; Call free 64 0>

536:
old  <>
new  <	mov qword [rbp + 64], malloc_test3$49>

537:
old  < malloc_test3$48:>
new  <	mov [rbp + 72], rbp>

538:
old  <	; Call free 64 0>
new  <	add rbp, 64>

539:
old  <	mov qword [rbp + 64], malloc_test3$49>
new  <	jmp free>

540:
old  <	mov [rbp + 72], rbp>
new  <>

541:
old  <	add rbp, 64>
new  < malloc_test3$49:>

542:
old  <	jmp free>
new  <	; PostCall 64>

544:
old  < malloc_test3$49:>
new  < malloc_test3$50:>

545:
old  <	; PostCall 64>
new  <	; PreCall 64 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

547:
old  < malloc_test3$50:>
new  < malloc_test3$51:>

548:
old  <	; PreCall 64 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter pointer d 88>

549:
old  <>
new  <	mov rax, [rbp + 48]>

550:
old  < malloc_test3$51:>
new  <	mov [rbp + 88], rax>

551:
old  <	; Parameter pointer d 88>
new  <>

552:
old  <	mov rax, [rbp + 48]>
new  < malloc_test3$52:>

553:
old  <	mov [rbp + 88], rax>
new  <	; Call free 64 0>

554:
old  <>
new  <	mov qword [rbp + 64], malloc_test3$53>

555:
old  < malloc_test3$52:>
new  <	mov [rbp + 72], rbp>

556:
old  <	; Call free 64 0>
new  <	add rbp, 64>

557:
old  <	mov qword [rbp + 64], malloc_test3$53>
new  <	jmp free>

558:
old  <	mov [rbp + 72], rbp>
new  <>

559:
old  <	add rbp, 64>
new  < malloc_test3$53:>

560:
old  <	jmp free>
new  <	; PostCall 64>

562:
old  < malloc_test3$53:>
new  < malloc_test3$54:>

563:
old  <	; PostCall 64>
new  <	; PreCall 64 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

565:
old  < malloc_test3$54:>
new  < malloc_test3$55:>

566:
old  <	; PreCall 64 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter pointer e 88>

567:
old  <>
new  <	mov rax, [rbp + 56]>

568:
old  < malloc_test3$55:>
new  <	mov [rbp + 88], rax>

569:
old  <	; Parameter pointer e 88>
new  <>

570:
old  <	mov rax, [rbp + 56]>
new  < malloc_test3$56:>

571:
old  <	mov [rbp + 88], rax>
new  <	; Call free 64 0>

572:
old  <>
new  <	mov qword [rbp + 64], malloc_test3$57>

573:
old  < malloc_test3$56:>
new  <	mov [rbp + 72], rbp>

574:
old  <	; Call free 64 0>
new  <	add rbp, 64>

575:
old  <	mov qword [rbp + 64], malloc_test3$57>
new  <	jmp free>

576:
old  <	mov [rbp + 72], rbp>
new  <>

577:
old  <	add rbp, 64>
new  < malloc_test3$57:>

578:
old  <	jmp free>
new  <	; PostCall 64>

580:
old  < malloc_test3$57:>
new  < malloc_test3$58:>

581:
old  <	; PostCall 64>
new  <	; PreCall 64 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

583:
old  < malloc_test3$58:>
new  < malloc_test3$59:>

584:
old  <	; PreCall 64 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Call print_heap 64 0>

585:
old  <>
new  <	mov qword [rbp + 64], malloc_test3$60>

586:
old  < malloc_test3$59:>
new  <	mov [rbp + 72], rbp>

587:
old  <	; Call print_heap 64 0>
new  <	add rbp, 64>

588:
old  <	mov qword [rbp + 64], malloc_test3$60>
new  <	jmp print_heap>

589:
old  <	mov [rbp + 72], rbp>
new  <>

590:
old  <	add rbp, 64>
new  < malloc_test3$60:>

591:
old  <	jmp print_heap>
new  <	; PostCall 64>

593:
old  < malloc_test3$60:>
new  < malloc_test3$61:>

594:
old  <	; PostCall 64>
new  <	; Return>

595:
old  <>
new  <	mov rax, [rbp]>

596:
old  < malloc_test3$61:>
new  <	mov rdi, [rbp + 16]>

597:
old  <	; Return>
new  <	mov rbp, [rbp + 8]>

598:
old  <	mov rax, [rbp]>
new  <	jmp rax>

599:
old  <	mov rdi, [rbp + 16]>
new  <>

600:
old  <	mov rbp, [rbp + 8]>
new  < malloc_test3$62:>

601:
old  <	jmp rax>
new  <	; FunctionEnd malloc_test3>

603:
old  < malloc_test3$62:>
new  <section .data>

604:
old  <	; FunctionEnd malloc_test3>
new  <>

605:
old  <>
new  <string_Stack20Top3A2025u2C20Low20Heap3A2025u0A#:>

606:
old  <section .data>
new  <	; Initializer String Stack Top: %u, Low Heap: %u\n>

607:
old  <>
new  <	db "Stack Top: %u, Low Heap: %u", 10, 0>

608:
old  <string_Stack20Top3A2025u2C20Low20Heap3A2025u0A#:>
new  <>

609:
old  <	; Initializer String Stack Top: %u, Low Heap: %u\n>
new  <section .text>

610:
old  <	db "Stack Top: %u, Low Heap: %u", 10, 0>
new  <>

611:
old  <>
new  < rec:>

612:
old  <section .text>
new  <	; InspectRegister Â£temporary3745 bp>

614:
old  < rec:>
new  < rec$1:>

615:
old  <	; Empty>
new  <	; IntegralToIntegral Â£temporary3746 Â£temporary3745>

616:
old  <>
new  <	and ebp, 65535>

617:
old  < rec$1:>
new  <>

618:
old  <	; InspectRegister Â£temporary3783 bp>
new  < rec$2:>

619:
old  <>
new  <	; Assign stackTop Â£temporary3746>

620:
old  < rec$2:>
new  <	mov [rbp + 24], ebp>

621:
old  <	; IntegralToIntegral Â£temporary3784 Â£temporary3783>
new  <>

622:
old  <	and ebp, 65535>
new  < rec$3:>

623:
old  <>
new  <	; Assign lowHeapPtr 65534>

624:
old  < rec$3:>
new  <	mov qword [rbp + 28], 65534>

625:
old  <	; Assign stackTop Â£temporary3784>
new  <>

626:
old  <	mov [rbp + 24], ebp>
new  < rec$4:>

627:
old  <>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

628:
old  < rec$4:>
new  <>

629:
old  <	; Assign lowHeapPtr 65534>
new  < rec$5:>

630:
old  <	mov qword [rbp + 28], 65534>
new  <	; Parameter pointer "Stack Top: %u, Low Heap: %u\n" 60>

631:
old  <>
new  <	mov qword [rbp + 60], string_Stack20Top3A2025u2C20Low20Heap3A2025u0A#>

632:
old  < rec$5:>
new  <>

633:
old  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < rec$6:>

634:
old  <>
new  <	; Parameter unsigned int stackTop 68>

635:
old  < rec$6:>
new  <	mov eax, [rbp + 24]>

636:
old  <	; Parameter pointer "Stack Top: %u, Low Heap: %u\n" 60>
new  <	mov [rbp + 68], eax>

637:
old  <	mov qword [rbp + 60], string_Stack20Top3A2025u2C20Low20Heap3A2025u0A#>
new  <>

638:
old  <>
new  < rec$7:>

639:
old  < rec$7:>
new  <	; Dereference Â£temporary3747 -> lowHeapPtr lowHeapPtr 0>

640:
old  <	; Parameter unsigned int stackTop 68>
new  <	mov rsi, [rbp + 28]>

641:
old  <	mov eax, [rbp + 24]>
new  <>

642:
old  <	mov [rbp + 68], eax>
new  < rec$8:>

643:
old  <>
new  <	; Parameter unsigned int Â£temporary3747 -> lowHeapPtr 72>

644:
old  < rec$8:>
new  <	mov eax, [rsi]>

645:
old  <	; Dereference Â£temporary3785 -> lowHeapPtr lowHeapPtr 0>
new  <	mov [rbp + 72], eax>

646:
old  <	mov rsi, [rbp + 28]>
new  <>

647:
old  <>
new  < rec$9:>

648:
old  < rec$9:>
new  <	; Call printf 36 8>

649:
old  <	; Parameter unsigned int Â£temporary3785 -> lowHeapPtr 72>
new  <	mov qword [rbp + 36], rec$10>

650:
old  <	mov eax, [rsi]>
new  <	mov [rbp + 44], rbp>

651:
old  <	mov [rbp + 72], eax>
new  <	add rbp, 36>

652:
old  <>
new  <	mov rdi, rbp>

653:
old  < rec$10:>
new  <	add rdi, 8>

654:
old  <	; Call printf 36 8>
new  <	jmp printf>

655:
old  <	mov qword [rbp + 36], rec$11>
new  <>

656:
old  <	mov [rbp + 44], rbp>
new  < rec$10:>

657:
old  <	add rbp, 36>
new  <	; PostCall 36>

658:
old  <	mov rdi, rbp>
new  <>

659:
old  <	add rdi, 8>
new  < rec$11:>

660:
old  <	jmp printf>
new  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

662:
old  < rec$11:>
new  < rec$12:>

663:
old  <	; PostCall 36>
new  <	; Call rec 36 0>

664:
old  <>
new  <	mov qword [rbp + 36], rec$13>

665:
old  < rec$12:>
new  <	mov [rbp + 44], rbp>

666:
old  <	; PreCall 36 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	add rbp, 36>

667:
old  <>
new  <	jmp rec>

668:
old  < rec$13:>
new  <>

669:
old  <	; Call rec 36 0>
new  < rec$13:>

670:
old  <	mov qword [rbp + 36], rec$14>
new  <	; PostCall 36>

671:
old  <	mov [rbp + 44], rbp>
new  <>

672:
old  <	add rbp, 36>
new  < rec$14:>

673:
old  <	jmp rec>
new  <	; Return>

674:
old  <>
new  <	mov rax, [rbp]>

675:
old  < rec$14:>
new  <	mov rdi, [rbp + 16]>

676:
old  <	; PostCall 36>
new  <	mov rbp, [rbp + 8]>

677:
old  <>
new  <	jmp rax>

678:
old  < rec$15:>
new  <>

679:
old  <	; Return>
new  < rec$15:>

680:
old  <	mov rax, [rbp]>
new  <	; FunctionEnd rec>

681:
old  <	mov rdi, [rbp + 16]>
new  <>

682:
old  <	mov rbp, [rbp + 8]>
new  <section .text>

683:
old  <	jmp rax>
new  <>

684:
old  <>
new  < malloc_test4:>

685:
old  < rec$16:>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

686:
old  <	; FunctionEnd rec>
new  <>

687:
old  <>
new  < malloc_test4$1:>

688:
old  <section .text>
new  <	; Call rec 24 0>

689:
old  <>
new  <	mov qword [rbp + 24], malloc_test4$2>

690:
old  < malloc_test4:>
new  <	mov [rbp + 32], rbp>

691:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	add rbp, 24>

692:
old  <>
new  <	jmp rec>

693:
old  < malloc_test4$1:>
new  <>

694:
old  <	; Call rec 24 0>
new  < malloc_test4$2:>

695:
old  <	mov qword [rbp + 24], malloc_test4$2>
new  <	; PostCall 24>

696:
old  <	mov [rbp + 32], rbp>
new  <>

697:
old  <	add rbp, 24>
new  < malloc_test4$3:>

698:
old  <	jmp rec>
new  <	; Return>

699:
old  <>
new  <	mov rax, [rbp]>

700:
old  < malloc_test4$2:>
new  <	mov rdi, [rbp + 16]>

701:
old  <	; PostCall 24>
new  <	mov rbp, [rbp + 8]>

702:
old  <>
new  <	jmp rax>

703:
old  < malloc_test4$3:>
new  <>

704:
old  <	; Return>
new  < malloc_test4$4:>

705:
old  <	mov rax, [rbp]>
new  <	; FunctionEnd malloc_test4>

706:
old  <	mov rdi, [rbp + 16]>
new  <>

707:
old  <	mov rbp, [rbp + 8]>
new  <section .text>

708:
old  <	jmp rax>
new  <>

709:
old  <>
new  < malloc_test:>

710:
old  < malloc_test4$4:>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

711:
old  <	; FunctionEnd malloc_test4>
new  <>

712:
old  <>
new  < malloc_test$1:>

713:
old  <section .text>
new  <	; Parameter signedint 96 48>

714:
old  <>
new  <	mov dword [rbp + 48], 96>

715:
old  < malloc_test:>
new  <>

716:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < malloc_test$2:>

717:
old  <>
new  <	; Call malloc 24 0>

718:
old  < malloc_test$1:>
new  <	mov qword [rbp + 24], malloc_test$3>

719:
old  <	; Parameter signedint 96 48>
new  <	mov [rbp + 32], rbp>

720:
old  <	mov dword [rbp + 48], 96>
new  <	add rbp, 24>

721:
old  <>
new  <	jmp malloc>

722:
old  < malloc_test$2:>
new  <>

723:
old  <	; Call malloc 24 0>
new  < malloc_test$3:>

724:
old  <	mov qword [rbp + 24], malloc_test$3>
new  <	; PostCall 24>

725:
old  <	mov [rbp + 32], rbp>
new  <>

726:
old  <	add rbp, 24>
new  < malloc_test$4:>

727:
old  <	jmp malloc>
new  <	; GetReturnValue Â£temporary3751>

729:
old  < malloc_test$3:>
new  < malloc_test$5:>

730:
old  <	; PostCall 24>
new  <	; Assign b Â£temporary3751>

731:
old  <>
new  <	mov [rbp + 24], rbx>

732:
old  < malloc_test$4:>
new  <>

733:
old  <	; GetReturnValue Â£temporary3789>
new  < malloc_test$6:>

734:
old  <>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

735:
old  < malloc_test$5:>
new  <>

736:
old  <	; Assign b Â£temporary3789>
new  < malloc_test$7:>

737:
old  <	mov [rbp + 24], rbx>
new  <	; Parameter signedint 96 56>

738:
old  <>
new  <	mov dword [rbp + 56], 96>

739:
old  < malloc_test$6:>
new  <>

740:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < malloc_test$8:>

741:
old  <>
new  <	; Call malloc 32 0>

742:
old  < malloc_test$7:>
new  <	mov qword [rbp + 32], malloc_test$9>

743:
old  <	; Parameter signedint 96 56>
new  <	mov [rbp + 40], rbp>

744:
old  <	mov dword [rbp + 56], 96>
new  <	add rbp, 32>

745:
old  <>
new  <	jmp malloc>

746:
old  < malloc_test$8:>
new  <>

747:
old  <	; Call malloc 32 0>
new  < malloc_test$9:>

748:
old  <	mov qword [rbp + 32], malloc_test$9>
new  <	; PostCall 32>

749:
old  <	mov [rbp + 40], rbp>
new  <>

750:
old  <	add rbp, 32>
new  < malloc_test$10:>

751:
old  <	jmp malloc>
new  <	; GetReturnValue Â£temporary3752>

753:
old  < malloc_test$9:>
new  < malloc_test$11:>

754:
old  <	; PostCall 32>
new  <	; Assign c Â£temporary3752>

755:
old  <>
new  <	mov [rbp + 32], rbx>

756:
old  < malloc_test$10:>
new  <>

757:
old  <	; GetReturnValue Â£temporary3790>
new  < malloc_test$12:>

758:
old  <>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

759:
old  < malloc_test$11:>
new  <>

760:
old  <	; Assign c Â£temporary3790>
new  < malloc_test$13:>

761:
old  <	mov [rbp + 32], rbx>
new  <	; Parameter signedint 96 64>

762:
old  <>
new  <	mov dword [rbp + 64], 96>

763:
old  < malloc_test$12:>
new  <>

764:
old  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < malloc_test$14:>

765:
old  <>
new  <	; Call malloc 40 0>

766:
old  < malloc_test$13:>
new  <	mov qword [rbp + 40], malloc_test$15>

767:
old  <	; Parameter signedint 96 64>
new  <	mov [rbp + 48], rbp>

768:
old  <	mov dword [rbp + 64], 96>
new  <	add rbp, 40>

769:
old  <>
new  <	jmp malloc>

770:
old  < malloc_test$14:>
new  <>

771:
old  <	; Call malloc 40 0>
new  < malloc_test$15:>

772:
old  <	mov qword [rbp + 40], malloc_test$15>
new  <	; PostCall 40>

773:
old  <	mov [rbp + 48], rbp>
new  <>

774:
old  <	add rbp, 40>
new  < malloc_test$16:>

775:
old  <	jmp malloc>
new  <	; GetReturnValue Â£temporary3753>

777:
old  < malloc_test$15:>
new  < malloc_test$17:>

778:
old  <	; PostCall 40>
new  <	; Assign d Â£temporary3753>

779:
old  <>
new  <	mov [rbp + 40], rbx>

780:
old  < malloc_test$16:>
new  <>

781:
old  <	; GetReturnValue Â£temporary3791>
new  < malloc_test$18:>

782:
old  <>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

783:
old  < malloc_test$17:>
new  <>

784:
old  <	; Assign d Â£temporary3791>
new  < malloc_test$19:>

785:
old  <	mov [rbp + 40], rbx>
new  <	; Call print_heap 48 0>

786:
old  <>
new  <	mov qword [rbp + 48], malloc_test$20>

787:
old  < malloc_test$18:>
new  <	mov [rbp + 56], rbp>

788:
old  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	add rbp, 48>

789:
old  <>
new  <	jmp print_heap>

790:
old  < malloc_test$19:>
new  <>

791:
old  <	; Call print_heap 48 0>
new  < malloc_test$20:>

792:
old  <	mov qword [rbp + 48], malloc_test$20>
new  <	; PostCall 48>

793:
old  <	mov [rbp + 56], rbp>
new  <>

794:
old  <	add rbp, 48>
new  < malloc_test$21:>

795:
old  <	jmp print_heap>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

797:
old  < malloc_test$20:>
new  < malloc_test$22:>

798:
old  <	; PostCall 48>
new  <	; Parameter pointer c 72>

799:
old  <>
new  <	mov rax, [rbp + 32]>

800:
old  < malloc_test$21:>
new  <	mov [rbp + 72], rax>

801:
old  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

802:
old  <>
new  < malloc_test$23:>

803:
old  < malloc_test$22:>
new  <	; Parameter signedint 40 80>

804:
old  <	; Parameter pointer c 72>
new  <	mov dword [rbp + 80], 40>

805:
old  <	mov rax, [rbp + 32]>
new  <>

806:
old  <	mov [rbp + 72], rax>
new  < malloc_test$24:>

807:
old  <>
new  <	; Call realloc 48 0>

808:
old  < malloc_test$23:>
new  <	mov qword [rbp + 48], malloc_test$25>

809:
old  <	; Parameter signedint 40 80>
new  <	mov [rbp + 56], rbp>

810:
old  <	mov dword [rbp + 80], 40>
new  <	add rbp, 48>

811:
old  <>
new  <	jmp realloc>

812:
old  < malloc_test$24:>
new  <>

813:
old  <	; Call realloc 48 0>
new  < malloc_test$25:>

814:
old  <	mov qword [rbp + 48], malloc_test$25>
new  <	; PostCall 48>

815:
old  <	mov [rbp + 56], rbp>
new  <>

816:
old  <	add rbp, 48>
new  < malloc_test$26:>

817:
old  <	jmp realloc>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

819:
old  < malloc_test$25:>
new  < malloc_test$27:>

820:
old  <	; PostCall 48>
new  <	; Call print_heap 48 0>

821:
old  <>
new  <	mov qword [rbp + 48], malloc_test$28>

822:
old  < malloc_test$26:>
new  <	mov [rbp + 56], rbp>

823:
old  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	add rbp, 48>

824:
old  <>
new  <	jmp print_heap>

825:
old  < malloc_test$27:>
new  <>

826:
old  <	; Call print_heap 48 0>
new  < malloc_test$28:>

827:
old  <	mov qword [rbp + 48], malloc_test$28>
new  <	; PostCall 48>

828:
old  <	mov [rbp + 56], rbp>
new  <>

829:
old  <	add rbp, 48>
new  < malloc_test$29:>

830:
old  <	jmp print_heap>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

832:
old  < malloc_test$28:>
new  < malloc_test$30:>

833:
old  <	; PostCall 48>
new  <	; Parameter signedint 40 72>

834:
old  <>
new  <	mov dword [rbp + 72], 40>

835:
old  < malloc_test$29:>
new  <>

836:
old  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  < malloc_test$31:>

837:
old  <>
new  <	; Call malloc 48 0>

838:
old  < malloc_test$30:>
new  <	mov qword [rbp + 48], malloc_test$32>

839:
old  <	; Parameter signedint 40 72>
new  <	mov [rbp + 56], rbp>

840:
old  <	mov dword [rbp + 72], 40>
new  <	add rbp, 48>

841:
old  <>
new  <	jmp malloc>

842:
old  < malloc_test$31:>
new  <>

843:
old  <	; Call malloc 48 0>
new  < malloc_test$32:>

844:
old  <	mov qword [rbp + 48], malloc_test$32>
new  <	; PostCall 48>

845:
old  <	mov [rbp + 56], rbp>
new  <>

846:
old  <	add rbp, 48>
new  < malloc_test$33:>

847:
old  <	jmp malloc>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

849:
old  < malloc_test$32:>
new  < malloc_test$34:>

850:
old  <	; PostCall 48>
new  <	; Call print_heap 48 0>

851:
old  <>
new  <	mov qword [rbp + 48], malloc_test$35>

852:
old  < malloc_test$33:>
new  <	mov [rbp + 56], rbp>

853:
old  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	add rbp, 48>

854:
old  <>
new  <	jmp print_heap>

855:
old  < malloc_test$34:>
new  <>

856:
old  <	; Call print_heap 48 0>
new  < malloc_test$35:>

857:
old  <	mov qword [rbp + 48], malloc_test$35>
new  <	; PostCall 48>

858:
old  <	mov [rbp + 56], rbp>
new  <>

859:
old  <	add rbp, 48>
new  < malloc_test$36:>

860:
old  <	jmp print_heap>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

862:
old  < malloc_test$35:>
new  < malloc_test$37:>

863:
old  <	; PostCall 48>
new  <	; Parameter pointer b 72>

864:
old  <>
new  <	mov rax, [rbp + 24]>

865:
old  < malloc_test$36:>
new  <	mov [rbp + 72], rax>

866:
old  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

867:
old  <>
new  < malloc_test$38:>

868:
old  < malloc_test$37:>
new  <	; Call free 48 0>

869:
old  <	; Parameter pointer b 72>
new  <	mov qword [rbp + 48], malloc_test$39>

870:
old  <	mov rax, [rbp + 24]>
new  <	mov [rbp + 56], rbp>

871:
old  <	mov [rbp + 72], rax>
new  <	add rbp, 48>

872:
old  <>
new  <	jmp free>

873:
old  < malloc_test$38:>
new  <>

874:
old  <	; Call free 48 0>
new  < malloc_test$39:>

875:
old  <	mov qword [rbp + 48], malloc_test$39>
new  <	; PostCall 48>

876:
old  <	mov [rbp + 56], rbp>
new  <>

877:
old  <	add rbp, 48>
new  < malloc_test$40:>

878:
old  <	jmp free>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

880:
old  < malloc_test$39:>
new  < malloc_test$41:>

881:
old  <	; PostCall 48>
new  <	; Call print_heap 48 0>

882:
old  <>
new  <	mov qword [rbp + 48], malloc_test$42>

883:
old  < malloc_test$40:>
new  <	mov [rbp + 56], rbp>

884:
old  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	add rbp, 48>

885:
old  <>
new  <	jmp print_heap>

886:
old  < malloc_test$41:>
new  <>

887:
old  <	; Call print_heap 48 0>
new  < malloc_test$42:>

888:
old  <	mov qword [rbp + 48], malloc_test$42>
new  <	; PostCall 48>

889:
old  <	mov [rbp + 56], rbp>
new  <>

890:
old  <	add rbp, 48>
new  < malloc_test$43:>

891:
old  <	jmp print_heap>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

893:
old  < malloc_test$42:>
new  < malloc_test$44:>

894:
old  <	; PostCall 48>
new  <	; Parameter pointer d 72>

895:
old  <>
new  <	mov rax, [rbp + 40]>

896:
old  < malloc_test$43:>
new  <	mov [rbp + 72], rax>

897:
old  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <>

898:
old  <>
new  < malloc_test$45:>

899:
old  < malloc_test$44:>
new  <	; Call free 48 0>

900:
old  <	; Parameter pointer d 72>
new  <	mov qword [rbp + 48], malloc_test$46>

901:
old  <	mov rax, [rbp + 40]>
new  <	mov [rbp + 56], rbp>

902:
old  <	mov [rbp + 72], rax>
new  <	add rbp, 48>

903:
old  <>
new  <	jmp free>

904:
old  < malloc_test$45:>
new  <>

905:
old  <	; Call free 48 0>
new  < malloc_test$46:>

906:
old  <	mov qword [rbp + 48], malloc_test$46>
new  <	; PostCall 48>

907:
old  <	mov [rbp + 56], rbp>
new  <>

908:
old  <	add rbp, 48>
new  < malloc_test$47:>

909:
old  <	jmp free>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

911:
old  < malloc_test$46:>
new  < malloc_test$48:>

912:
old  <	; PostCall 48>
new  <	; Call print_heap 48 0>

913:
old  <>
new  <	mov qword [rbp + 48], malloc_test$49>

914:
old  < malloc_test$47:>
new  <	mov [rbp + 56], rbp>

915:
old  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	add rbp, 48>

916:
old  <>
new  <	jmp print_heap>

917:
old  < malloc_test$48:>
new  <>

918:
old  <	; Call print_heap 48 0>
new  < malloc_test$49:>

919:
old  <	mov qword [rbp + 48], malloc_test$49>
new  <	; PostCall 48>

920:
old  <	mov [rbp + 56], rbp>
new  <>

921:
old  <	add rbp, 48>
new  < malloc_test$50:>

922:
old  <	jmp print_heap>
new  <	; Return>

923:
old  <>
new  <	mov rax, [rbp]>

924:
old  < malloc_test$49:>
new  <	mov rdi, [rbp + 16]>

925:
old  <	; PostCall 48>
new  <	mov rbp, [rbp + 8]>

926:
old  <>
new  <	jmp rax>

927:
old  < malloc_test$50:>
new  <>

928:
old  <	; Return>
new  < malloc_test$51:>

929:
old  <	mov rax, [rbp]>
new  <	; FunctionEnd malloc_test>

930:
old  <	mov rdi, [rbp + 16]>
new  <>

931:
old  <	mov rbp, [rbp + 8]>
new  <section .data>

932:
old  <	jmp rax>
new  <>

933:
old  <>
new  <string_Index3A2025i2C20Pointer3A2025u2C20Stack20top3A2025u2C20Low20Heap3A2025u0A#:>

934:
old  < malloc_test$51:>
new  <	; Initializer String Index: %i, Pointer: %u, Stack top: %u, Low Heap: %u\n>

935:
old  <	; FunctionEnd malloc_test>
new  <	db "Index: %i, Pointer: %u, Stack top: %u, Low Heap: %u", 10, 0>

937:
old  <section .data>
new  <section .text>

939:
old  <string_Index3A2025i2C20Pointer3A2025u2C20Stack20top3A2025u2C20Low20Heap3A2025u0A#:>
new  < malloc_test6:>

940:
old  <	; Initializer String Index: %i, Pointer: %u, Stack top: %u, Low Heap: %u\n>
new  <	; InspectRegister Â£temporary3763 bp>

941:
old  <	db "Index: %i, Pointer: %u, Stack top: %u, Low Heap: %u", 10, 0>
new  <>

942:
old  <>
new  < malloc_test6$1:>

943:
old  <section .text>
new  <	; IntegralToIntegral Â£temporary3764 Â£temporary3763>

944:
old  <>
new  <	and ebp, 65535>

945:
old  < malloc_test6:>
new  <>

946:
old  <	; Empty>
new  < malloc_test6$2:>

947:
old  <>
new  <	; Assign stackTop Â£temporary3764>

948:
old  < malloc_test6$1:>
new  <	mov [rbp + 28], ebp>

949:
old  <	; InspectRegister Â£temporary3801 bp>
new  <>

950:
old  <>
new  < malloc_test6$3:>

951:
old  < malloc_test6$2:>
new  <	; Assign lowHeapPtr 65534>

952:
old  <	; IntegralToIntegral Â£temporary3802 Â£temporary3801>
new  <	mov qword [rbp + 32], 65534>

953:
old  <	and ebp, 65535>
new  <>

954:
old  <>
new  < malloc_test6$4:>

955:
old  < malloc_test6$3:>
new  <	; Assign i 0>

956:
old  <	; Assign stackTop Â£temporary3802>
new  <	mov dword [rbp + 24], 0>

957:
old  <	mov [rbp + 28], ebp>
new  <>

958:
old  <>
new  < malloc_test6$5:>

959:
old  < malloc_test6$4:>
new  <	; SignedGreaterThanEqual 23 i 1000>

960:
old  <	; Assign lowHeapPtr 65534>
new  <	cmp dword [rbp + 24], 1000>

961:
old  <	mov qword [rbp + 32], 65534>
new  <	jge malloc_test6$23>

963:
old  < malloc_test6$5:>
new  < malloc_test6$6:>

964:
old  <	; Assign i 0>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

965:
old  <	mov dword [rbp + 24], 0>
new  <>

966:
old  <>
new  < malloc_test6$7:>

967:
old  < malloc_test6$6:>
new  <	; Parameter signedint 96 64>

968:
old  <	; SignedGreaterThanEqual 24 i 1000>
new  <	mov dword [rbp + 64], 96>

969:
old  <	cmp dword [rbp + 24], 1000>
new  <>

970:
old  <	jge malloc_test6$24>
new  < malloc_test6$8:>

971:
old  <>
new  <	; Call malloc 40 0>

972:
old  < malloc_test6$7:>
new  <	mov qword [rbp + 40], malloc_test6$9>

973:
old  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov [rbp + 48], rbp>

974:
old  <>
new  <	add rbp, 40>

975:
old  < malloc_test6$8:>
new  <	jmp malloc>

976:
old  <	; Parameter signedint 96 64>
new  <>

977:
old  <	mov dword [rbp + 64], 96>
new  < malloc_test6$9:>

978:
old  <>
new  <	; PostCall 40>

979:
old  < malloc_test6$9:>
new  <>

980:
old  <	; Call malloc 40 0>
new  < malloc_test6$10:>

981:
old  <	mov qword [rbp + 40], malloc_test6$10>
new  <	; GetReturnValue Â£temporary3767>

982:
old  <	mov [rbp + 48], rbp>
new  <>

983:
old  <	add rbp, 40>
new  < malloc_test6$11:>

984:
old  <	jmp malloc>
new  <	; Assign p Â£temporary3767>

985:
old  <>
new  <	mov [rbp + 40], rbx>

986:
old  < malloc_test6$10:>
new  <>

987:
old  <	; PostCall 40>
new  < malloc_test6$12:>

988:
old  <>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

989:
old  < malloc_test6$11:>
new  <>

990:
old  <	; GetReturnValue Â£temporary3805>
new  < malloc_test6$13:>

991:
old  <>
new  <	; Parameter pointer "Index: %i, Pointer: %u, Stack top: %u, Low Heap: %u\n" 72>

992:
old  < malloc_test6$12:>
new  <	mov qword [rbp + 72], string_Index3A2025i2C20Pointer3A2025u2C20Stack20top3A2025u2C20Low20Heap3A2025u0A#>

993:
old  <	; Assign p Â£temporary3805>
new  <>

994:
old  <	mov [rbp + 40], rbx>
new  < malloc_test6$14:>

995:
old  <>
new  <	; Parameter signedint i 80>

996:
old  < malloc_test6$13:>
new  <	mov eax, [rbp + 24]>

997:
old  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	mov [rbp + 80], eax>

999:
old  < malloc_test6$14:>
new  < malloc_test6$15:>

1000:
old  <	; Parameter pointer "Index: %i, Pointer: %u, Stack top: %u, Low Heap: %u\n" 72>
new  <	; Parameter pointer p 84>

1001:
old  <	mov qword [rbp + 72], string_Index3A2025i2C20Pointer3A2025u2C20Stack20top3A2025u2C20Low20Heap3A2025u0A#>
new  <	mov rax, [rbp + 40]>

1002:
old  <>
new  <	mov [rbp + 84], rax>

1003:
old  < malloc_test6$15:>
new  <>

1004:
old  <	; Parameter signedint i 80>
new  < malloc_test6$16:>

1005:
old  <	mov eax, [rbp + 24]>
new  <	; Parameter unsigned int stackTop 92>

1006:
old  <	mov [rbp + 80], eax>
new  <	mov eax, [rbp + 28]>

1007:
old  <>
new  <	mov [rbp + 92], eax>

1008:
old  < malloc_test6$16:>
new  <>

1009:
old  <	; Parameter pointer p 84>
new  < malloc_test6$17:>

1010:
old  <	mov rax, [rbp + 40]>
new  <	; Dereference Â£temporary3768 -> lowHeapPtr lowHeapPtr 0>

1011:
old  <	mov [rbp + 84], rax>
new  <	mov rsi, [rbp + 32]>

1013:
old  < malloc_test6$17:>
new  < malloc_test6$18:>

1014:
old  <	; Parameter unsigned int stackTop 92>
new  <	; Parameter unsigned int Â£temporary3768 -> lowHeapPtr 96>

1015:
old  <	mov eax, [rbp + 28]>
new  <	mov eax, [rsi]>

1016:
old  <	mov [rbp + 92], eax>
new  <	mov [rbp + 96], eax>

1018:
old  < malloc_test6$18:>
new  < malloc_test6$19:>

1019:
old  <	; Dereference Â£temporary3806 -> lowHeapPtr lowHeapPtr 0>
new  <	; Call printf 48 20>

1020:
old  <	mov rsi, [rbp + 32]>
new  <	mov qword [rbp + 48], malloc_test6$20>

1021:
old  <>
new  <	mov [rbp + 56], rbp>

1022:
old  < malloc_test6$19:>
new  <	add rbp, 48>

1023:
old  <	; Parameter unsigned int Â£temporary3806 -> lowHeapPtr 96>
new  <	mov rdi, rbp>

1024:
old  <	mov eax, [rsi]>
new  <	add rdi, 20>

1025:
old  <	mov [rbp + 96], eax>
new  <	jmp printf>

1028:
old  <	; Call printf 48 20>
new  <	; PostCall 48>

1029:
old  <	mov qword [rbp + 48], malloc_test6$21>
new  <>

1030:
old  <	mov [rbp + 56], rbp>
new  < malloc_test6$21:>

1031:
old  <	add rbp, 48>
new  <	; BinaryAdd i i 1>

1032:
old  <	mov rdi, rbp>
new  <	inc dword [rbp + 24]>

1033:
old  <	add rdi, 20>
new  <>

1034:
old  <	jmp printf>
new  < malloc_test6$22:>

1035:
old  <>
new  <	; Goto 5>

1036:
old  < malloc_test6$21:>
new  <	jmp malloc_test6$5>

1037:
old  <	; PostCall 48>
new  <>

1038:
old  <>
new  < malloc_test6$23:>

1039:
old  < malloc_test6$22:>
new  <	; Return>

1040:
old  <	; BinaryAdd i i 1>
new  <	mov rax, [rbp]>

1041:
old  <	inc dword [rbp + 24]>
new  <	mov rdi, [rbp + 16]>

1042:
old  <>
new  <	mov rbp, [rbp + 8]>

1043:
old  < malloc_test6$23:>
new  <	jmp rax>

1044:
old  <	; Goto 6>
new  <>

1045:
old  <	jmp malloc_test6$6>
new  < malloc_test6$24:>

1046:
old  <>
new  <	; FunctionEnd malloc_test6>

31:
old  <	; IntegralToIntegral Â£temporary3808 valuePtr1>
new  <	; IntegralToIntegral Â£temporary3770 valuePtr1>

35:
old  <	; Dereference Â£temporary3809 -> Â£temporary3808 Â£temporary3808 0>
new  <	; Dereference Â£temporary3771 -> Â£temporary3770 Â£temporary3770 0>

38:
old  <	; Assign intValue1 Â£temporary3809 -> Â£temporary3808>
new  <	; Assign intValue1 Â£temporary3771 -> Â£temporary3770>

43:
old  <	; IntegralToIntegral Â£temporary3810 valuePtr2>
new  <	; IntegralToIntegral Â£temporary3772 valuePtr2>

47:
old  <	; Dereference Â£temporary3811 -> Â£temporary3810 Â£temporary3810 0>
new  <	; Dereference Â£temporary3773 -> Â£temporary3772 Â£temporary3772 0>

50:
old  <	; Assign intValue2 Â£temporary3811 -> Â£temporary3810>
new  <	; Assign intValue2 Â£temporary3773 -> Â£temporary3772>

61:
old  <	; Assign Â£temporary3815 -1>
new  <	; Assign Â£temporary3777 -1>

75:
old  <	; Assign Â£temporary3814 0>
new  <	; Assign Â£temporary3776 0>

83:
old  <	; Assign Â£temporary3814 1>
new  <	; Assign Â£temporary3776 1>

87:
old  <	; Assign Â£temporary3815 Â£temporary3814>
new  <	; Assign Â£temporary3777 Â£temporary3776>

90:
old  <	; Return Â£temporary3815>
new  <	; Return Â£temporary3777>

102:
old  <	; IntegralToIntegral Â£temporary3816 valuePtr1>
new  <	; IntegralToIntegral Â£temporary3778 valuePtr1>

106:
old  <	; Dereference Â£temporary3817 -> Â£temporary3816 Â£temporary3816 0>
new  <	; Dereference Â£temporary3779 -> Â£temporary3778 Â£temporary3778 0>

109:
old  <	; Assign intValue1 Â£temporary3817 -> Â£temporary3816>
new  <	; Assign intValue1 Â£temporary3779 -> Â£temporary3778>

114:
old  <	; IntegralToIntegral Â£temporary3818 valuePtr2>
new  <	; IntegralToIntegral Â£temporary3780 valuePtr2>

118:
old  <	; Dereference Â£temporary3819 -> Â£temporary3818 Â£temporary3818 0>
new  <	; Dereference Â£temporary3781 -> Â£temporary3780 Â£temporary3780 0>

121:
old  <	; Assign intValue2 Â£temporary3819 -> Â£temporary3818>
new  <	; Assign intValue2 Â£temporary3781 -> Â£temporary3780>

132:
old  <	; Assign Â£temporary3823 1>
new  <	; Assign Â£temporary3785 1>

146:
old  <	; Assign Â£temporary3822 0>
new  <	; Assign Â£temporary3784 0>

154:
old  <	; Assign Â£temporary3822 -1>
new  <	; Assign Â£temporary3784 -1>

158:
old  <	; Assign Â£temporary3823 Â£temporary3822>
new  <	; Assign Â£temporary3785 Â£temporary3784>

161:
old  <	; Return Â£temporary3823>
new  <	; Return Â£temporary3785>

525:
old  <	; Empty>
new  <	; Assign p s>

526:
old  <>
new  <	mov [rbp + 324], rbp>

527:
old  < stdlib_test$1:>
new  <	add qword [rbp + 324], 24>

528:
old  <	; Assign p s>
new  <>

529:
old  <	mov [rbp + 324], rbp>
new  < stdlib_test$1:>

530:
old  <	add qword [rbp + 324], 24>
new  <	; Assign q t>

531:
old  <>
new  <	mov [rbp + 332], rbp>

532:
old  < stdlib_test$2:>
new  <	add qword [rbp + 332], 124>

533:
old  <	; Assign q t>
new  <>

534:
old  <	mov [rbp + 332], rbp>
new  < stdlib_test$2:>

535:
old  <	add qword [rbp + 332], 124>
new  <	; Assign r w>

536:
old  <>
new  <	mov [rbp + 340], rbp>

537:
old  < stdlib_test$3:>
new  <	add qword [rbp + 340], 224>

538:
old  <	; Assign r w>
new  <>

539:
old  <	mov [rbp + 340], rbp>
new  < stdlib_test$3:>

540:
old  <	add qword [rbp + 340], 224>
new  <	; PreCall 348 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

543:
old  <	; PreCall 348 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter pointer "123.456abc" 372>

544:
old  <>
new  <	mov qword [rbp + 372], string_1232E456abc#>

545:
old  < stdlib_test$5:>
new  <>

546:
old  <	; Parameter pointer "123.456abc" 372>
new  < stdlib_test$5:>

547:
old  <	mov qword [rbp + 372], string_1232E456abc#>
new  <	; Address Â£temporary3795 p>

548:
old  <>
new  <	mov rsi, rbp>

549:
old  < stdlib_test$6:>
new  <	add rsi, 324>

550:
old  <	; Address Â£temporary3833 p>
new  <>

551:
old  <	mov rsi, rbp>
new  < stdlib_test$6:>

552:
old  <	add rsi, 324>
new  <	; Parameter pointer Â£temporary3795 380>

553:
old  <>
new  <	mov [rbp + 380], rsi>

554:
old  < stdlib_test$7:>
new  <>

555:
old  <	; Parameter pointer Â£temporary3833 380>
new  < stdlib_test$7:>

556:
old  <	mov [rbp + 380], rsi>
new  <	; Call strtod 348 0>

557:
old  <>
new  <	mov qword [rbp + 348], stdlib_test$8>

558:
old  < stdlib_test$8:>
new  <	mov [rbp + 356], rbp>

559:
old  <	; Call strtod 348 0>
new  <	add rbp, 348>

560:
old  <	mov qword [rbp + 348], stdlib_test$9>
new  <	jmp strtod>

561:
old  <	mov [rbp + 356], rbp>
new  <>

562:
old  <	add rbp, 348>
new  < stdlib_test$8:>

563:
old  <	jmp strtod>
new  <	; PostCall 348>

566:
old  <	; PostCall 348>
new  <	; GetReturnValue Â£temporary3796>

569:
old  <	; GetReturnValue Â£temporary3834>
new  <	; PopFloat x>

570:
old  <>
new  <	fstp qword [rbp + 348]>

571:
old  < stdlib_test$11:>
new  <>

572:
old  <	; PopFloat x>
new  < stdlib_test$11:>

573:
old  <	fstp qword [rbp + 348]>
new  <	; PreCall 356 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

576:
old  <	; PreCall 356 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter pointer "123.456" 380>

577:
old  <>
new  <	mov qword [rbp + 380], string_1232E456#>

578:
old  < stdlib_test$13:>
new  <>

579:
old  <	; Parameter pointer "123.456" 380>
new  < stdlib_test$13:>

580:
old  <	mov qword [rbp + 380], string_1232E456#>
new  <	; Call atof 356 0>

581:
old  <>
new  <	mov qword [rbp + 356], stdlib_test$14>

582:
old  < stdlib_test$14:>
new  <	mov [rbp + 364], rbp>

583:
old  <	; Call atof 356 0>
new  <	add rbp, 356>

584:
old  <	mov qword [rbp + 356], stdlib_test$15>
new  <	jmp atof>

585:
old  <	mov [rbp + 364], rbp>
new  <>

586:
old  <	add rbp, 356>
new  < stdlib_test$14:>

587:
old  <	jmp atof>
new  <	; PostCall 356>

590:
old  <	; PostCall 356>
new  <	; GetReturnValue Â£temporary3797>

593:
old  <	; GetReturnValue Â£temporary3835>
new  <	; PopFloat y>

594:
old  <>
new  <	fstp qword [rbp + 356]>

595:
old  < stdlib_test$17:>
new  <>

596:
old  <	; PopFloat y>
new  < stdlib_test$17:>

597:
old  <	fstp qword [rbp + 356]>
new  <	; PreCall 364 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

600:
old  <	; PreCall 364 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter pointer "123abc" 388>

601:
old  <>
new  <	mov qword [rbp + 388], string_123abc#>

602:
old  < stdlib_test$19:>
new  <>

603:
old  <	; Parameter pointer "123abc" 388>
new  < stdlib_test$19:>

604:
old  <	mov qword [rbp + 388], string_123abc#>
new  <	; Address Â£temporary3798 q>

605:
old  <>
new  <	mov rsi, rbp>

606:
old  < stdlib_test$20:>
new  <	add rsi, 332>

607:
old  <	; Address Â£temporary3836 q>
new  <>

608:
old  <	mov rsi, rbp>
new  < stdlib_test$20:>

609:
old  <	add rsi, 332>
new  <	; Parameter pointer Â£temporary3798 396>

610:
old  <>
new  <	mov [rbp + 396], rsi>

611:
old  < stdlib_test$21:>
new  <>

612:
old  <	; Parameter pointer Â£temporary3836 396>
new  < stdlib_test$21:>

613:
old  <	mov [rbp + 396], rsi>
new  <	; Parameter signedint 8 404>

614:
old  <>
new  <	mov dword [rbp + 404], 8>

615:
old  < stdlib_test$22:>
new  <>

616:
old  <	; Parameter signedint 8 404>
new  < stdlib_test$22:>

617:
old  <	mov dword [rbp + 404], 8>
new  <	; Call strtol 364 0>

618:
old  <>
new  <	mov qword [rbp + 364], stdlib_test$23>

619:
old  < stdlib_test$23:>
new  <	mov [rbp + 372], rbp>

620:
old  <	; Call strtol 364 0>
new  <	add rbp, 364>

621:
old  <	mov qword [rbp + 364], stdlib_test$24>
new  <	jmp strtol>

622:
old  <	mov [rbp + 372], rbp>
new  <>

623:
old  <	add rbp, 364>
new  < stdlib_test$23:>

624:
old  <	jmp strtol>
new  <	; PostCall 364>

627:
old  <	; PostCall 364>
new  <	; GetReturnValue Â£temporary3799>

630:
old  <	; GetReturnValue Â£temporary3837>
new  <	; Assign l Â£temporary3799>

631:
old  <>
new  <	mov [rbp + 364], rbx>

632:
old  < stdlib_test$26:>
new  <>

633:
old  <	; Assign l Â£temporary3837>
new  < stdlib_test$26:>

634:
old  <	mov [rbp + 364], rbx>
new  <	; PreCall 372 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

637:
old  <	; PreCall 372 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter pointer "123abc" 396>

638:
old  <>
new  <	mov qword [rbp + 396], string_123abc#>

639:
old  < stdlib_test$28:>
new  <>

640:
old  <	; Parameter pointer "123abc" 396>
new  < stdlib_test$28:>

641:
old  <	mov qword [rbp + 396], string_123abc#>
new  <	; Address Â£temporary3800 r>

642:
old  <>
new  <	mov rsi, rbp>

643:
old  < stdlib_test$29:>
new  <	add rsi, 340>

644:
old  <	; Address Â£temporary3838 r>
new  <>

645:
old  <	mov rsi, rbp>
new  < stdlib_test$29:>

646:
old  <	add rsi, 340>
new  <	; Parameter pointer Â£temporary3800 404>

647:
old  <>
new  <	mov [rbp + 404], rsi>

648:
old  < stdlib_test$30:>
new  <>

649:
old  <	; Parameter pointer Â£temporary3838 404>
new  < stdlib_test$30:>

650:
old  <	mov [rbp + 404], rsi>
new  <	; Parameter signedint 8 412>

651:
old  <>
new  <	mov dword [rbp + 412], 8>

652:
old  < stdlib_test$31:>
new  <>

653:
old  <	; Parameter signedint 8 412>
new  < stdlib_test$31:>

654:
old  <	mov dword [rbp + 412], 8>
new  <	; Call strtoul 372 0>

655:
old  <>
new  <	mov qword [rbp + 372], stdlib_test$32>

656:
old  < stdlib_test$32:>
new  <	mov [rbp + 380], rbp>

657:
old  <	; Call strtoul 372 0>
new  <	add rbp, 372>

658:
old  <	mov qword [rbp + 372], stdlib_test$33>
new  <	jmp strtoul>

659:
old  <	mov [rbp + 380], rbp>
new  <>

660:
old  <	add rbp, 372>
new  < stdlib_test$32:>

661:
old  <	jmp strtoul>
new  <	; PostCall 372>

664:
old  <	; PostCall 372>
new  <	; GetReturnValue Â£temporary3801>

667:
old  <	; GetReturnValue Â£temporary3839>
new  <	; Assign ul Â£temporary3801>

668:
old  <>
new  <	mov [rbp + 372], rbx>

669:
old  < stdlib_test$35:>
new  <>

670:
old  <	; Assign ul Â£temporary3839>
new  < stdlib_test$35:>

671:
old  <	mov [rbp + 372], rbx>
new  <	; PreCall 380 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

674:
old  <	; PreCall 380 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter pointer "atof("123.456") = %f\n" 404>

675:
old  <>
new  <	mov qword [rbp + 404], string_atof28221232E4562229203D2025f0A#>

676:
old  < stdlib_test$37:>
new  <>

677:
old  <	; Parameter pointer "atof("123.456") = %f\n" 404>
new  < stdlib_test$37:>

678:
old  <	mov qword [rbp + 404], string_atof28221232E4562229203D2025f0A#>
new  <	; PushFloat y>

679:
old  <>
new  <	fld qword [rbp + 356]>

680:
old  < stdlib_test$38:>
new  <>

681:
old  <	; PushFloat y>
new  < stdlib_test$38:>

682:
old  <	fld qword [rbp + 356]>
new  <	; Parameter double y 412>

683:
old  <>
new  <	fstp qword [rbp + 412]>

684:
old  < stdlib_test$39:>
new  <>

685:
old  <	; Parameter double y 412>
new  < stdlib_test$39:>

686:
old  <	fstp qword [rbp + 412]>
new  <	; Call printf 380 8>

687:
old  <>
new  <	mov qword [rbp + 380], stdlib_test$40>

688:
old  < stdlib_test$40:>
new  <	mov [rbp + 388], rbp>

689:
old  <	; Call printf 380 8>
new  <	add rbp, 380>

690:
old  <	mov qword [rbp + 380], stdlib_test$41>
new  <	mov rdi, rbp>

691:
old  <	mov [rbp + 388], rbp>
new  <	add rdi, 8>

692:
old  <	add rbp, 380>
new  <	jmp printf>

693:
old  <	mov rdi, rbp>
new  <>

694:
old  <	add rdi, 8>
new  < stdlib_test$40:>

695:
old  <	jmp printf>
new  <	; PostCall 380>

698:
old  <	; PostCall 380>
new  <	; PreCall 380 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

701:
old  <	; PreCall 380 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter pointer "atoi("123") = %i\n" 404>

702:
old  <>
new  <	mov qword [rbp + 404], string_atoi28221232229203D2025i0A#>

703:
old  < stdlib_test$43:>
new  <>

704:
old  <	; Parameter pointer "atoi("123") = %i\n" 404>
new  < stdlib_test$43:>

705:
old  <	mov qword [rbp + 404], string_atoi28221232229203D2025i0A#>
new  <	; PreCall 380 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

708:
old  <	; PreCall 380 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter pointer "123" 436>

709:
old  <>
new  <	mov qword [rbp + 436], string_123#>

710:
old  < stdlib_test$45:>
new  <>

711:
old  <	; Parameter pointer "123" 436>
new  < stdlib_test$45:>

712:
old  <	mov qword [rbp + 436], string_123#>
new  <	; Call atoi 412 0>

713:
old  <>
new  <	mov qword [rbp + 412], stdlib_test$46>

714:
old  < stdlib_test$46:>
new  <	mov [rbp + 420], rbp>

715:
old  <	; Call atoi 412 0>
new  <	add rbp, 412>

716:
old  <	mov qword [rbp + 412], stdlib_test$47>
new  <	jmp atoi>

717:
old  <	mov [rbp + 420], rbp>
new  <>

718:
old  <	add rbp, 412>
new  < stdlib_test$46:>

719:
old  <	jmp atoi>
new  <	; PostCall 412>

722:
old  <	; PostCall 412>
new  <	; GetReturnValue Â£temporary3803>

725:
old  <	; GetReturnValue Â£temporary3841>
new  <	; Parameter signedint Â£temporary3803 412>

726:
old  <>
new  <	mov [rbp + 412], ebx>

727:
old  < stdlib_test$49:>
new  <>

728:
old  <	; Parameter signedint Â£temporary3841 412>
new  < stdlib_test$49:>

729:
old  <	mov [rbp + 412], ebx>
new  <	; Call printf 380 4>

730:
old  <>
new  <	mov qword [rbp + 380], stdlib_test$50>

731:
old  < stdlib_test$50:>
new  <	mov [rbp + 388], rbp>

732:
old  <	; Call printf 380 4>
new  <	add rbp, 380>

733:
old  <	mov qword [rbp + 380], stdlib_test$51>
new  <	mov rdi, rbp>

734:
old  <	mov [rbp + 388], rbp>
new  <	add rdi, 4>

735:
old  <	add rbp, 380>
new  <	jmp printf>

736:
old  <	mov rdi, rbp>
new  <>

737:
old  <	add rdi, 4>
new  < stdlib_test$50:>

738:
old  <	jmp printf>
new  <	; PostCall 380>

741:
old  <	; PostCall 380>
new  <	; PreCall 380 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

744:
old  <	; PreCall 380 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter pointer "atol("123") = %li\n\n" 404>

745:
old  <>
new  <	mov qword [rbp + 404], string_atol28221232229203D2025li0A0A#>

746:
old  < stdlib_test$53:>
new  <>

747:
old  <	; Parameter pointer "atol("123") = %li\n\n" 404>
new  < stdlib_test$53:>

748:
old  <	mov qword [rbp + 404], string_atol28221232229203D2025li0A0A#>
new  <	; PreCall 380 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

751:
old  <	; PreCall 380 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter pointer "123" 436>

752:
old  <>
new  <	mov qword [rbp + 436], string_123#>

753:
old  < stdlib_test$55:>
new  <>

754:
old  <	; Parameter pointer "123" 436>
new  < stdlib_test$55:>

755:
old  <	mov qword [rbp + 436], string_123#>
new  <	; Call atol 412 0>

756:
old  <>
new  <	mov qword [rbp + 412], stdlib_test$56>

757:
old  < stdlib_test$56:>
new  <	mov [rbp + 420], rbp>

758:
old  <	; Call atol 412 0>
new  <	add rbp, 412>

759:
old  <	mov qword [rbp + 412], stdlib_test$57>
new  <	jmp atol>

760:
old  <	mov [rbp + 420], rbp>
new  <>

761:
old  <	add rbp, 412>
new  < stdlib_test$56:>

762:
old  <	jmp atol>
new  <	; PostCall 412>

765:
old  <	; PostCall 412>
new  <	; GetReturnValue Â£temporary3805>

768:
old  <	; GetReturnValue Â£temporary3843>
new  <	; Parameter signed long int Â£temporary3805 412>

769:
old  <>
new  <	mov [rbp + 412], rbx>

770:
old  < stdlib_test$59:>
new  <>

771:
old  <	; Parameter signed long int Â£temporary3843 412>
new  < stdlib_test$59:>

772:
old  <	mov [rbp + 412], rbx>
new  <	; Call printf 380 8>

773:
old  <>
new  <	mov qword [rbp + 380], stdlib_test$60>

774:
old  < stdlib_test$60:>
new  <	mov [rbp + 388], rbp>

775:
old  <	; Call printf 380 8>
new  <	add rbp, 380>

776:
old  <	mov qword [rbp + 380], stdlib_test$61>
new  <	mov rdi, rbp>

777:
old  <	mov [rbp + 388], rbp>
new  <	add rdi, 8>

778:
old  <	add rbp, 380>
new  <	jmp printf>

779:
old  <	mov rdi, rbp>
new  <>

780:
old  <	add rdi, 8>
new  < stdlib_test$60:>

781:
old  <	jmp printf>
new  <	; PostCall 380>

784:
old  <	; PostCall 380>
new  <	; PreCall 380 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

787:
old  <	; PreCall 380 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter pointer "strtod("123.456abc", &endp) = (%f, %s)\n" 404>

788:
old  <>
new  <	mov qword [rbp + 404], string_strtod28221232E456abc222C2026endp29203D202825f2C2025s290A#>

789:
old  < stdlib_test$63:>
new  <>

790:
old  <	; Parameter pointer "strtod("123.456abc", &endp) = (%f, %s)\n" 404>
new  < stdlib_test$63:>

791:
old  <	mov qword [rbp + 404], string_strtod28221232E456abc222C2026endp29203D202825f2C2025s290A#>
new  <	; PushFloat x>

792:
old  <>
new  <	fld qword [rbp + 348]>

793:
old  < stdlib_test$64:>
new  <>

794:
old  <	; PushFloat x>
new  < stdlib_test$64:>

795:
old  <	fld qword [rbp + 348]>
new  <	; Parameter double x 412>

796:
old  <>
new  <	fstp qword [rbp + 412]>

797:
old  < stdlib_test$65:>
new  <>

798:
old  <	; Parameter double x 412>
new  < stdlib_test$65:>

799:
old  <	fstp qword [rbp + 412]>
new  <	; Parameter pointer p 420>

800:
old  <>
new  <	mov rax, [rbp + 324]>

801:
old  < stdlib_test$66:>
new  <	mov [rbp + 420], rax>

802:
old  <	; Parameter pointer p 420>
new  <>

803:
old  <	mov rax, [rbp + 324]>
new  < stdlib_test$66:>

804:
old  <	mov [rbp + 420], rax>
new  <	; Call printf 380 16>

805:
old  <>
new  <	mov qword [rbp + 380], stdlib_test$67>

806:
old  < stdlib_test$67:>
new  <	mov [rbp + 388], rbp>

807:
old  <	; Call printf 380 16>
new  <	add rbp, 380>

808:
old  <	mov qword [rbp + 380], stdlib_test$68>
new  <	mov rdi, rbp>

809:
old  <	mov [rbp + 388], rbp>
new  <	add rdi, 16>

810:
old  <	add rbp, 380>
new  <	jmp printf>

811:
old  <	mov rdi, rbp>
new  <>

812:
old  <	add rdi, 16>
new  < stdlib_test$67:>

813:
old  <	jmp printf>
new  <	; PostCall 380>

816:
old  <	; PostCall 380>
new  <	; PreCall 380 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

819:
old  <	; PreCall 380 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter pointer "strtol("123abc", &endp) = (%li, %s)\n" 404>

820:
old  <>
new  <	mov qword [rbp + 404], string_strtol2822123abc222C2026endp29203D202825li2C2025s290A#>

821:
old  < stdlib_test$70:>
new  <>

822:
old  <	; Parameter pointer "strtol("123abc", &endp) = (%li, %s)\n" 404>
new  < stdlib_test$70:>

823:
old  <	mov qword [rbp + 404], string_strtol2822123abc222C2026endp29203D202825li2C2025s290A#>
new  <	; Parameter signed long int l 412>

824:
old  <>
new  <	mov rax, [rbp + 364]>

825:
old  < stdlib_test$71:>
new  <	mov [rbp + 412], rax>

826:
old  <	; Parameter signed long int l 412>
new  <>

827:
old  <	mov rax, [rbp + 364]>
new  < stdlib_test$71:>

828:
old  <	mov [rbp + 412], rax>
new  <	; Parameter pointer q 420>

829:
old  <>
new  <	mov rax, [rbp + 332]>

830:
old  < stdlib_test$72:>
new  <	mov [rbp + 420], rax>

831:
old  <	; Parameter pointer q 420>
new  <>

832:
old  <	mov rax, [rbp + 332]>
new  < stdlib_test$72:>

833:
old  <	mov [rbp + 420], rax>
new  <	; Call printf 380 16>

834:
old  <>
new  <	mov qword [rbp + 380], stdlib_test$73>

835:
old  < stdlib_test$73:>
new  <	mov [rbp + 388], rbp>

836:
old  <	; Call printf 380 16>
new  <	add rbp, 380>

837:
old  <	mov qword [rbp + 380], stdlib_test$74>
new  <	mov rdi, rbp>

838:
old  <	mov [rbp + 388], rbp>
new  <	add rdi, 16>

839:
old  <	add rbp, 380>
new  <	jmp printf>

840:
old  <	mov rdi, rbp>
new  <>

841:
old  <	add rdi, 16>
new  < stdlib_test$73:>

842:
old  <	jmp printf>
new  <	; PostCall 380>

845:
old  <	; PostCall 380>
new  <	; PreCall 380 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

848:
old  <	; PreCall 380 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter pointer "strtoul("123abc", &endp) = (%lu, %s)\n" 404>

849:
old  <>
new  <	mov qword [rbp + 404], string_strtoul2822123abc222C2026endp29203D202825lu2C2025s290A#>

850:
old  < stdlib_test$76:>
new  <>

851:
old  <	; Parameter pointer "strtoul("123abc", &endp) = (%lu, %s)\n" 404>
new  < stdlib_test$76:>

852:
old  <	mov qword [rbp + 404], string_strtoul2822123abc222C2026endp29203D202825lu2C2025s290A#>
new  <	; Parameter unsignedlongint ul 412>

853:
old  <>
new  <	mov rax, [rbp + 372]>

854:
old  < stdlib_test$77:>
new  <	mov [rbp + 412], rax>

855:
old  <	; Parameter unsignedlongint ul 412>
new  <>

856:
old  <	mov rax, [rbp + 372]>
new  < stdlib_test$77:>

857:
old  <	mov [rbp + 412], rax>
new  <	; Parameter pointer r 420>

858:
old  <>
new  <	mov rax, [rbp + 340]>

859:
old  < stdlib_test$78:>
new  <	mov [rbp + 420], rax>

860:
old  <	; Parameter pointer r 420>
new  <>

861:
old  <	mov rax, [rbp + 340]>
new  < stdlib_test$78:>

862:
old  <	mov [rbp + 420], rax>
new  <	; Call printf 380 16>

863:
old  <>
new  <	mov qword [rbp + 380], stdlib_test$79>

864:
old  < stdlib_test$79:>
new  <	mov [rbp + 388], rbp>

865:
old  <	; Call printf 380 16>
new  <	add rbp, 380>

866:
old  <	mov qword [rbp + 380], stdlib_test$80>
new  <	mov rdi, rbp>

867:
old  <	mov [rbp + 388], rbp>
new  <	add rdi, 16>

868:
old  <	add rbp, 380>
new  <	jmp printf>

869:
old  <	mov rdi, rbp>
new  <>

870:
old  <	add rdi, 16>
new  < stdlib_test$79:>

871:
old  <	jmp printf>
new  <	; PostCall 380>

874:
old  <	; PostCall 380>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

877:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter pointer "\ngetenv("path") = %s\n" 48>

878:
old  <>
new  <	mov qword [rbp + 48], string_0Agetenv2822path2229203D2025s0A#>

879:
old  < stdlib_test$82:>
new  <>

880:
old  <	; Parameter pointer "\ngetenv("path") = %s\n" 48>
new  < stdlib_test$82:>

881:
old  <	mov qword [rbp + 48], string_0Agetenv2822path2229203D2025s0A#>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

884:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter pointer "path" 80>

885:
old  <>
new  <	mov qword [rbp + 80], string_path#>

886:
old  < stdlib_test$84:>
new  <>

887:
old  <	; Parameter pointer "path" 80>
new  < stdlib_test$84:>

888:
old  <	mov qword [rbp + 80], string_path#>
new  <	; Call getenv 56 0>

889:
old  <>
new  <	mov qword [rbp + 56], stdlib_test$85>

890:
old  < stdlib_test$85:>
new  <	mov [rbp + 64], rbp>

891:
old  <	; Call getenv 56 0>
new  <	add rbp, 56>

892:
old  <	mov qword [rbp + 56], stdlib_test$86>
new  <	jmp getenv>

893:
old  <	mov [rbp + 64], rbp>
new  <>

894:
old  <	add rbp, 56>
new  < stdlib_test$85:>

895:
old  <	jmp getenv>
new  <	; PostCall 56>

898:
old  <	; PostCall 56>
new  <	; GetReturnValue Â£temporary3810>

901:
old  <	; GetReturnValue Â£temporary3848>
new  <	; Parameter pointer Â£temporary3810 56>

902:
old  <>
new  <	mov [rbp + 56], rbx>

903:
old  < stdlib_test$88:>
new  <>

904:
old  <	; Parameter pointer Â£temporary3848 56>
new  < stdlib_test$88:>

905:
old  <	mov [rbp + 56], rbx>
new  <	; Call printf 24 8>

906:
old  <>
new  <	mov qword [rbp + 24], stdlib_test$89>

907:
old  < stdlib_test$89:>
new  <	mov [rbp + 32], rbp>

908:
old  <	; Call printf 24 8>
new  <	add rbp, 24>

909:
old  <	mov qword [rbp + 24], stdlib_test$90>
new  <	mov rdi, rbp>

910:
old  <	mov [rbp + 32], rbp>
new  <	add rdi, 8>

911:
old  <	add rbp, 24>
new  <	jmp printf>

912:
old  <	mov rdi, rbp>
new  <>

913:
old  <	add rdi, 8>
new  < stdlib_test$89:>

914:
old  <	jmp printf>
new  <	; PostCall 24>

917:
old  <	; PostCall 24>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

920:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter pointer "system("dir")\n" 48>

921:
old  <>
new  <	mov qword [rbp + 48], string_system2822dir22290A#>

922:
old  < stdlib_test$92:>
new  <>

923:
old  <	; Parameter pointer "system("dir")\n" 48>
new  < stdlib_test$92:>

924:
old  <	mov qword [rbp + 48], string_system2822dir22290A#>
new  <	; Call printf 24 0>

925:
old  <>
new  <	mov qword [rbp + 24], stdlib_test$93>

926:
old  < stdlib_test$93:>
new  <	mov [rbp + 32], rbp>

927:
old  <	; Call printf 24 0>
new  <	add rbp, 24>

928:
old  <	mov qword [rbp + 24], stdlib_test$94>
new  <	mov rdi, rbp>

929:
old  <	mov [rbp + 32], rbp>
new  <	jmp printf>

930:
old  <	add rbp, 24>
new  <>

931:
old  <	mov rdi, rbp>
new  < stdlib_test$93:>

932:
old  <	jmp printf>
new  <	; PostCall 24>

935:
old  <	; PostCall 24>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

938:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter pointer "dir" 48>

939:
old  <>
new  <	mov qword [rbp + 48], string_dir#>

940:
old  < stdlib_test$96:>
new  <>

941:
old  <	; Parameter pointer "dir" 48>
new  < stdlib_test$96:>

942:
old  <	mov qword [rbp + 48], string_dir#>
new  <	; Call system 24 0>

943:
old  <>
new  <	mov qword [rbp + 24], stdlib_test$97>

944:
old  < stdlib_test$97:>
new  <	mov [rbp + 32], rbp>

945:
old  <	; Call system 24 0>
new  <	add rbp, 24>

946:
old  <	mov qword [rbp + 24], stdlib_test$98>
new  <	jmp system>

947:
old  <	mov [rbp + 32], rbp>
new  <>

948:
old  <	add rbp, 24>
new  < stdlib_test$97:>

949:
old  <	jmp system>
new  <	; PostCall 24>

952:
old  <	; PostCall 24>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

955:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter pointer "abs(-3) = %i, abs(3) = %i, labs(-3l) = %li, labs(3l) = %li\n" 48>

956:
old  <>
new  <	mov qword [rbp + 48], string_abs282D329203D2025i2C20abs28329203D2025i2C20labs282D3l29203D2025li2C20labs283l29203D2025li0A#>

957:
old  < stdlib_test$100:>
new  <>

958:
old  <	; Parameter pointer "abs(-3) = %i, abs(3) = %i, labs(-3l) = %li, labs(3l) = %li\n" 48>
new  < stdlib_test$100:>

959:
old  <	mov qword [rbp + 48], string_abs282D329203D2025i2C20abs28329203D2025i2C20labs282D3l29203D2025li2C20labs283l29203D2025li0A#>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

962:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter signedint -3 80>

963:
old  <>
new  <	mov dword [rbp + 80], -3>

964:
old  < stdlib_test$102:>
new  <>

965:
old  <	; Parameter signedint -3 80>
new  < stdlib_test$102:>

966:
old  <	mov dword [rbp + 80], -3>
new  <	; Call @abs 56 0>

967:
old  <>
new  <	mov qword [rbp + 56], stdlib_test$103>

968:
old  < stdlib_test$103:>
new  <	mov [rbp + 64], rbp>

969:
old  <	; Call @abs 56 0>
new  <	add rbp, 56>

970:
old  <	mov qword [rbp + 56], stdlib_test$104>
new  <	jmp @abs>

971:
old  <	mov [rbp + 64], rbp>
new  <>

972:
old  <	add rbp, 56>
new  < stdlib_test$103:>

973:
old  <	jmp @abs>
new  <	; PostCall 56>

976:
old  <	; PostCall 56>
new  <	; GetReturnValue Â£temporary3814>

979:
old  <	; GetReturnValue Â£temporary3852>
new  <	; Parameter signedint Â£temporary3814 56>

980:
old  <>
new  <	mov [rbp + 56], ebx>

981:
old  < stdlib_test$106:>
new  <>

982:
old  <	; Parameter signedint Â£temporary3852 56>
new  < stdlib_test$106:>

983:
old  <	mov [rbp + 56], ebx>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

986:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter signedint 3 84>

987:
old  <>
new  <	mov dword [rbp + 84], 3>

988:
old  < stdlib_test$108:>
new  <>

989:
old  <	; Parameter signedint 3 84>
new  < stdlib_test$108:>

990:
old  <	mov dword [rbp + 84], 3>
new  <	; Call @abs 60 0>

991:
old  <>
new  <	mov qword [rbp + 60], stdlib_test$109>

992:
old  < stdlib_test$109:>
new  <	mov [rbp + 68], rbp>

993:
old  <	; Call @abs 60 0>
new  <	add rbp, 60>

994:
old  <	mov qword [rbp + 60], stdlib_test$110>
new  <	jmp @abs>

995:
old  <	mov [rbp + 68], rbp>
new  <>

996:
old  <	add rbp, 60>
new  < stdlib_test$109:>

997:
old  <	jmp @abs>
new  <	; PostCall 60>

1000:
old  <	; PostCall 60>
new  <	; GetReturnValue Â£temporary3815>

1003:
old  <	; GetReturnValue Â£temporary3853>
new  <	; Parameter signedint Â£temporary3815 60>

1004:
old  <>
new  <	mov [rbp + 60], ebx>

1005:
old  < stdlib_test$112:>
new  <>

1006:
old  <	; Parameter signedint Â£temporary3853 60>
new  < stdlib_test$112:>

1007:
old  <	mov [rbp + 60], ebx>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1010:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter signed long int -3 88>

1011:
old  <>
new  <	mov qword [rbp + 88], -3>

1012:
old  < stdlib_test$114:>
new  <>

1013:
old  <	; Parameter signed long int -3 88>
new  < stdlib_test$114:>

1014:
old  <	mov qword [rbp + 88], -3>
new  <	; Call labs 64 0>

1015:
old  <>
new  <	mov qword [rbp + 64], stdlib_test$115>

1016:
old  < stdlib_test$115:>
new  <	mov [rbp + 72], rbp>

1017:
old  <	; Call labs 64 0>
new  <	add rbp, 64>

1018:
old  <	mov qword [rbp + 64], stdlib_test$116>
new  <	jmp labs>

1019:
old  <	mov [rbp + 72], rbp>
new  <>

1020:
old  <	add rbp, 64>
new  < stdlib_test$115:>

1021:
old  <	jmp labs>
new  <	; PostCall 64>

1024:
old  <	; PostCall 64>
new  <	; GetReturnValue Â£temporary3816>

1027:
old  <	; GetReturnValue Â£temporary3854>
new  <	; Parameter signed long int Â£temporary3816 64>

1028:
old  <>
new  <	mov [rbp + 64], rbx>

1029:
old  < stdlib_test$118:>
new  <>

1030:
old  <	; Parameter signed long int Â£temporary3854 64>
new  < stdlib_test$118:>

1031:
old  <	mov [rbp + 64], rbx>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1034:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter signed long int 3 96>

1035:
old  <>
new  <	mov qword [rbp + 96], 3>

1036:
old  < stdlib_test$120:>
new  <>

1037:
old  <	; Parameter signed long int 3 96>
new  < stdlib_test$120:>

1038:
old  <	mov qword [rbp + 96], 3>
new  <	; Call labs 72 0>

1039:
old  <>
new  <	mov qword [rbp + 72], stdlib_test$121>

1040:
old  < stdlib_test$121:>
new  <	mov [rbp + 80], rbp>

1041:
old  <	; Call labs 72 0>
new  <	add rbp, 72>

1042:
old  <	mov qword [rbp + 72], stdlib_test$122>
new  <	jmp labs>

1043:
old  <	mov [rbp + 80], rbp>
new  <>

1044:
old  <	add rbp, 72>
new  < stdlib_test$121:>

1045:
old  <	jmp labs>
new  <	; PostCall 72>

1048:
old  <	; PostCall 72>
new  <	; GetReturnValue Â£temporary3817>

1051:
old  <	; GetReturnValue Â£temporary3855>
new  <	; Parameter signed long int Â£temporary3817 72>

1052:
old  <>
new  <	mov [rbp + 72], rbx>

1053:
old  < stdlib_test$124:>
new  <>

1054:
old  <	; Parameter signed long int Â£temporary3855 72>
new  < stdlib_test$124:>

1055:
old  <	mov [rbp + 72], rbx>
new  <	; Call printf 24 24>

1056:
old  <>
new  <	mov qword [rbp + 24], stdlib_test$125>

1057:
old  < stdlib_test$125:>
new  <	mov [rbp + 32], rbp>

1058:
old  <	; Call printf 24 24>
new  <	add rbp, 24>

1059:
old  <	mov qword [rbp + 24], stdlib_test$126>
new  <	mov rdi, rbp>

1060:
old  <	mov [rbp + 32], rbp>
new  <	add rdi, 24>

1061:
old  <	add rbp, 24>
new  <	jmp printf>

1062:
old  <	mov rdi, rbp>
new  <>

1063:
old  <	add rdi, 24>
new  < stdlib_test$125:>

1064:
old  <	jmp printf>
new  <	; PostCall 24>

1067:
old  <	; PostCall 24>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1070:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter signedint 10 48>

1071:
old  <>
new  <	mov dword [rbp + 48], 10>

1072:
old  < stdlib_test$128:>
new  <>

1073:
old  <	; Parameter signedint 10 48>
new  < stdlib_test$128:>

1074:
old  <	mov dword [rbp + 48], 10>
new  <	; Parameter signedint 3 52>

1075:
old  <>
new  <	mov dword [rbp + 52], 3>

1076:
old  < stdlib_test$129:>
new  <>

1077:
old  <	; Parameter signedint 3 52>
new  < stdlib_test$129:>

1078:
old  <	mov dword [rbp + 52], 3>
new  <	; Call div 24 0>

1079:
old  <>
new  <	mov qword [rbp + 24], stdlib_test$130>

1080:
old  < stdlib_test$130:>
new  <	mov [rbp + 32], rbp>

1081:
old  <	; Call div 24 0>
new  <	add rbp, 24>

1082:
old  <	mov qword [rbp + 24], stdlib_test$131>
new  <	jmp div>

1083:
old  <	mov [rbp + 32], rbp>
new  <>

1084:
old  <	add rbp, 24>
new  < stdlib_test$130:>

1085:
old  <	jmp div>
new  <	; PostCall 24>

1088:
old  <	; PostCall 24>
new  <	; GetReturnValue Â£temporary3819 -> Â£temporary3820>

1091:
old  <	; GetReturnValue Â£temporary3857 -> Â£temporary3858>
new  <	; Assign i Â£temporary3819 -> Â£temporary3820>

1092:
old  <>
new  <	mov rsi, rbp>

1093:
old  < stdlib_test$133:>
new  <	add rsi, 24>

1094:
old  <	; Assign i Â£temporary3857 -> Â£temporary3858>
new  <	mov al, 8>

1095:
old  <	mov rsi, rbp>
new  <>

1096:
old  <	add rsi, 24>
new  < label$1:>

1097:
old  <	mov al, 8>
new  <	mov ah, [rbx]>

1098:
old  <>
new  <	mov [rsi], ah>

1099:
old  < label$1:>
new  <	inc rbx>

1100:
old  <	mov ah, [rbx]>
new  <	inc rsi>

1101:
old  <	mov [rsi], ah>
new  <	dec al>

1102:
old  <	inc rbx>
new  <	cmp al, 0>

1103:
old  <	inc rsi>
new  <	jne label$1>

1104:
old  <	dec al>
new  <>

1105:
old  <	cmp al, 0>
new  < stdlib_test$133:>

1106:
old  <	jne label$1>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1109:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter pointer "div_t(10, 3) = (%i, %i),\n" 56>

1110:
old  <>
new  <	mov qword [rbp + 56], string_div_t28102C20329203D202825i2C2025i292C0A#>

1111:
old  < stdlib_test$135:>
new  <>

1112:
old  <	; Parameter pointer "div_t(10, 3) = (%i, %i),\n" 56>
new  < stdlib_test$135:>

1113:
old  <	mov qword [rbp + 56], string_div_t28102C20329203D202825i2C2025i292C0A#>
new  <	; Parameter signedint i.quot 64>

1114:
old  <>
new  <	mov eax, [rbp + 24]>

1115:
old  < stdlib_test$136:>
new  <	mov [rbp + 64], eax>

1116:
old  <	; Parameter signedint i.quot 64>
new  <>

1117:
old  <	mov eax, [rbp + 24]>
new  < stdlib_test$136:>

1118:
old  <	mov [rbp + 64], eax>
new  <	; Parameter signedint i.rem 68>

1119:
old  <>
new  <	mov eax, [rbp + 28]>

1120:
old  < stdlib_test$137:>
new  <	mov [rbp + 68], eax>

1121:
old  <	; Parameter signedint i.rem 68>
new  <>

1122:
old  <	mov eax, [rbp + 28]>
new  < stdlib_test$137:>

1123:
old  <	mov [rbp + 68], eax>
new  <	; Call printf 32 8>

1124:
old  <>
new  <	mov qword [rbp + 32], stdlib_test$138>

1125:
old  < stdlib_test$138:>
new  <	mov [rbp + 40], rbp>

1126:
old  <	; Call printf 32 8>
new  <	add rbp, 32>

1127:
old  <	mov qword [rbp + 32], stdlib_test$139>
new  <	mov rdi, rbp>

1128:
old  <	mov [rbp + 40], rbp>
new  <	add rdi, 8>

1129:
old  <	add rbp, 32>
new  <	jmp printf>

1130:
old  <	mov rdi, rbp>
new  <>

1131:
old  <	add rdi, 8>
new  < stdlib_test$138:>

1132:
old  <	jmp printf>
new  <	; PostCall 32>

1135:
old  <	; PostCall 32>
new  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1138:
old  <	; PreCall 32 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter struct i 56>

1139:
old  <>
new  <	mov rsi, rbp>

1140:
old  < stdlib_test$141:>
new  <	add rsi, 24>

1141:
old  <	; Parameter struct i 56>
new  <	mov rdi, rbp>

1142:
old  <	mov rsi, rbp>
new  <	add rdi, 56>

1143:
old  <	add rsi, 24>
new  <	mov al, 8>

1144:
old  <	mov rdi, rbp>
new  <>

1145:
old  <	add rdi, 56>
new  < label$2:>

1146:
old  <	mov al, 8>
new  <	mov ah, [rsi]>

1147:
old  <>
new  <	mov [rdi], ah>

1148:
old  < label$2:>
new  <	inc rsi>

1149:
old  <	mov ah, [rsi]>
new  <	inc rdi>

1150:
old  <	mov [rdi], ah>
new  <	dec al>

1151:
old  <	inc rsi>
new  <	cmp al, 0>

1152:
old  <	inc rdi>
new  <	jne label$2>

1153:
old  <	dec al>
new  <>

1154:
old  <	cmp al, 0>
new  < stdlib_test$141:>

1155:
old  <	jne label$2>
new  <	; Call print_div 32 0>

1156:
old  <>
new  <	mov qword [rbp + 32], stdlib_test$142>

1157:
old  < stdlib_test$142:>
new  <	mov [rbp + 40], rbp>

1158:
old  <	; Call print_div 32 0>
new  <	add rbp, 32>

1159:
old  <	mov qword [rbp + 32], stdlib_test$143>
new  <	jmp print_div>

1160:
old  <	mov [rbp + 40], rbp>
new  <>

1161:
old  <	add rbp, 32>
new  < stdlib_test$142:>

1162:
old  <	jmp print_div>
new  <	; PostCall 32>

1165:
old  <	; PostCall 32>
new  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1168:
old  <	; PreCall 24 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter signed long int 10 48>

1169:
old  <>
new  <	mov qword [rbp + 48], 10>

1170:
old  < stdlib_test$145:>
new  <>

1171:
old  <	; Parameter signed long int 10 48>
new  < stdlib_test$145:>

1172:
old  <	mov qword [rbp + 48], 10>
new  <	; Parameter signed long int 3 56>

1173:
old  <>
new  <	mov qword [rbp + 56], 3>

1174:
old  < stdlib_test$146:>
new  <>

1175:
old  <	; Parameter signed long int 3 56>
new  < stdlib_test$146:>

1176:
old  <	mov qword [rbp + 56], 3>
new  <	; Call ldiv 24 0>

1177:
old  <>
new  <	mov qword [rbp + 24], stdlib_test$147>

1178:
old  < stdlib_test$147:>
new  <	mov [rbp + 32], rbp>

1179:
old  <	; Call ldiv 24 0>
new  <	add rbp, 24>

1180:
old  <	mov qword [rbp + 24], stdlib_test$148>
new  <	jmp ldiv>

1181:
old  <	mov [rbp + 32], rbp>
new  <>

1182:
old  <	add rbp, 24>
new  < stdlib_test$147:>

1183:
old  <	jmp ldiv>
new  <	; PostCall 24>

1186:
old  <	; PostCall 24>
new  <	; GetReturnValue Â£temporary3825 -> Â£temporary3826>

1189:
old  <	; GetReturnValue Â£temporary3863 -> Â£temporary3864>
new  <	; Assign li Â£temporary3825 -> Â£temporary3826>

1190:
old  <>
new  <	mov rsi, rbp>

1191:
old  < stdlib_test$150:>
new  <	add rsi, 24>

1192:
old  <	; Assign li Â£temporary3863 -> Â£temporary3864>
new  <	mov al, 16>

1193:
old  <	mov rsi, rbp>
new  <>

1194:
old  <	add rsi, 24>
new  < label$3:>

1195:
old  <	mov al, 16>
new  <	mov ah, [rbx]>

1196:
old  <>
new  <	mov [rsi], ah>

1197:
old  < label$3:>
new  <	inc rbx>

1198:
old  <	mov ah, [rbx]>
new  <	inc rsi>

1199:
old  <	mov [rsi], ah>
new  <	dec al>

1200:
old  <	inc rbx>
new  <	cmp al, 0>

1201:
old  <	inc rsi>
new  <	jne label$3>

1202:
old  <	dec al>
new  <>

1203:
old  <	cmp al, 0>
new  < stdlib_test$150:>

1204:
old  <	jne label$3>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1207:
old  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter pointer "ldiv_t(10, 3) = (%li, %li)\n" 64>

1208:
old  <>
new  <	mov qword [rbp + 64], string_ldiv_t28102C20329203D202825li2C2025li290A#>

1209:
old  < stdlib_test$152:>
new  <>

1210:
old  <	; Parameter pointer "ldiv_t(10, 3) = (%li, %li)\n" 64>
new  < stdlib_test$152:>

1211:
old  <	mov qword [rbp + 64], string_ldiv_t28102C20329203D202825li2C2025li290A#>
new  <	; Parameter signed long int li.quot 72>

1212:
old  <>
new  <	mov rax, [rbp + 24]>

1213:
old  < stdlib_test$153:>
new  <	mov [rbp + 72], rax>

1214:
old  <	; Parameter signed long int li.quot 72>
new  <>

1215:
old  <	mov rax, [rbp + 24]>
new  < stdlib_test$153:>

1216:
old  <	mov [rbp + 72], rax>
new  <	; Parameter signed long int li.rem 80>

1217:
old  <>
new  <	mov rax, [rbp + 32]>

1218:
old  < stdlib_test$154:>
new  <	mov [rbp + 80], rax>

1219:
old  <	; Parameter signed long int li.rem 80>
new  <>

1220:
old  <	mov rax, [rbp + 32]>
new  < stdlib_test$154:>

1221:
old  <	mov [rbp + 80], rax>
new  <	; Call printf 40 16>

1222:
old  <>
new  <	mov qword [rbp + 40], stdlib_test$155>

1223:
old  < stdlib_test$155:>
new  <	mov [rbp + 48], rbp>

1224:
old  <	; Call printf 40 16>
new  <	add rbp, 40>

1225:
old  <	mov qword [rbp + 40], stdlib_test$156>
new  <	mov rdi, rbp>

1226:
old  <	mov [rbp + 48], rbp>
new  <	add rdi, 16>

1227:
old  <	add rbp, 40>
new  <	jmp printf>

1228:
old  <	mov rdi, rbp>
new  <>

1229:
old  <	add rdi, 16>
new  < stdlib_test$155:>

1230:
old  <	jmp printf>
new  <	; PostCall 40>

1233:
old  <	; PostCall 40>
new  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1236:
old  <	; PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter struct li 64>

1237:
old  <>
new  <	mov rsi, rbp>

1238:
old  < stdlib_test$158:>
new  <	add rsi, 24>

1239:
old  <	; Parameter struct li 64>
new  <	mov rdi, rbp>

1240:
old  <	mov rsi, rbp>
new  <	add rdi, 64>

1241:
old  <	add rsi, 24>
new  <	mov al, 16>

1242:
old  <	mov rdi, rbp>
new  <>

1243:
old  <	add rdi, 64>
new  < label$4:>

1244:
old  <	mov al, 16>
new  <	mov ah, [rsi]>

1245:
old  <>
new  <	mov [rdi], ah>

1246:
old  < label$4:>
new  <	inc rsi>

1247:
old  <	mov ah, [rsi]>
new  <	inc rdi>

1248:
old  <	mov [rdi], ah>
new  <	dec al>

1249:
old  <	inc rsi>
new  <	cmp al, 0>

1250:
old  <	inc rdi>
new  <	jne label$4>

1251:
old  <	dec al>
new  <>

1252:
old  <	cmp al, 0>
new  < stdlib_test$158:>

1253:
old  <	jne label$4>
new  <	; Call print_ldiv 40 0>

1254:
old  <>
new  <	mov qword [rbp + 40], stdlib_test$159>

1255:
old  < stdlib_test$159:>
new  <	mov [rbp + 48], rbp>

1256:
old  <	; Call print_ldiv 40 0>
new  <	add rbp, 40>

1257:
old  <	mov qword [rbp + 40], stdlib_test$160>
new  <	jmp print_ldiv>

1258:
old  <	mov [rbp + 48], rbp>
new  <>

1259:
old  <	add rbp, 40>
new  < stdlib_test$159:>

1260:
old  <	jmp print_ldiv>
new  <	; PostCall 40>

1263:
old  <	; PostCall 40>
new  <	; Assign list[0] 3>

1264:
old  <>
new  <	mov dword [rbp + 24], 3>

1265:
old  < stdlib_test$161:>
new  <>

1266:
old  <	; Assign list[0] 3>
new  < stdlib_test$161:>

1267:
old  <	mov dword [rbp + 24], 3>
new  <	; Assign list[1] 4>

1268:
old  <>
new  <	mov dword [rbp + 28], 4>

1269:
old  < stdlib_test$162:>
new  <>

1270:
old  <	; Assign list[1] 4>
new  < stdlib_test$162:>

1271:
old  <	mov dword [rbp + 28], 4>
new  <	; Assign list[2] 2>

1272:
old  <>
new  <	mov dword [rbp + 32], 2>

1273:
old  < stdlib_test$163:>
new  <>

1274:
old  <	; Assign list[2] 2>
new  < stdlib_test$163:>

1275:
old  <	mov dword [rbp + 32], 2>
new  <	; Assign list[3] 1>

1276:
old  <>
new  <	mov dword [rbp + 36], 1>

1277:
old  < stdlib_test$164:>
new  <>

1278:
old  <	; Assign list[3] 1>
new  < stdlib_test$164:>

1279:
old  <	mov dword [rbp + 36], 1>
new  <	; Assign size 4>

1280:
old  <>
new  <	mov dword [rbp + 40], 4>

1281:
old  < stdlib_test$165:>
new  <>

1282:
old  <	; Assign size 4>
new  < stdlib_test$165:>

1283:
old  <	mov dword [rbp + 40], 4>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1286:
old  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter pointer "\nA List 1: " 72>

1287:
old  <>
new  <	mov qword [rbp + 72], string_0AA20List2013A20#>

1288:
old  < stdlib_test$167:>
new  <>

1289:
old  <	; Parameter pointer "\nA List 1: " 72>
new  < stdlib_test$167:>

1290:
old  <	mov qword [rbp + 72], string_0AA20List2013A20#>
new  <	; Call printf 48 0>

1291:
old  <>
new  <	mov qword [rbp + 48], stdlib_test$168>

1292:
old  < stdlib_test$168:>
new  <	mov [rbp + 56], rbp>

1293:
old  <	; Call printf 48 0>
new  <	add rbp, 48>

1294:
old  <	mov qword [rbp + 48], stdlib_test$169>
new  <	mov rdi, rbp>

1295:
old  <	mov [rbp + 56], rbp>
new  <	jmp printf>

1296:
old  <	add rbp, 48>
new  <>

1297:
old  <	mov rdi, rbp>
new  < stdlib_test$168:>

1298:
old  <	jmp printf>
new  <	; PostCall 48>

1301:
old  <	; PostCall 48>
new  <	; Assign index 0>

1302:
old  <>
new  <	mov dword [rbp + 44], 0>

1303:
old  < stdlib_test$170:>
new  <>

1304:
old  <	; Assign index 0>
new  < stdlib_test$170:>

1305:
old  <	mov dword [rbp + 44], 0>
new  <	; SignedGreaterThanEqual 182 index size>

1306:
old  <>
new  <	mov eax, [rbp + 40]>

1307:
old  < stdlib_test$171:>
new  <	cmp [rbp + 44], eax>

1308:
old  <	; SignedGreaterThanEqual 183 index size>
new  <	jge stdlib_test$182>

1309:
old  <	mov eax, [rbp + 40]>
new  <>

1310:
old  <	cmp [rbp + 44], eax>
new  < stdlib_test$171:>

1311:
old  <	jge stdlib_test$183>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1314:
old  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter pointer "%i " 72>

1315:
old  <>
new  <	mov qword [rbp + 72], string_25i20#>

1316:
old  < stdlib_test$173:>
new  <>

1317:
old  <	; Parameter pointer "%i " 72>
new  < stdlib_test$173:>

1318:
old  <	mov qword [rbp + 72], string_25i20#>
new  <	; IntegralToIntegral Â£temporary3839 index>

1319:
old  <>
new  <	mov eax, [rbp + 44]>

1320:
old  < stdlib_test$174:>
new  <	mov rbx, 4294967295>

1321:
old  <	; IntegralToIntegral Â£temporary3877 index>
new  <	and rax, rbx>

1322:
old  <	mov eax, [rbp + 44]>
new  <>

1323:
old  <	mov rbx, 4294967295>
new  < stdlib_test$174:>

1324:
old  <	and rax, rbx>
new  <	; UnsignedMultiply Â£temporary3841 Â£temporary3839 4>

1325:
old  <>
new  <	xor rdx, rdx>

1326:
old  < stdlib_test$175:>
new  <	mul qword [int8$4#]>

1327:
old  <	; UnsignedMultiply Â£temporary3879 Â£temporary3877 4>
new  <>

1328:
old  <	xor rdx, rdx>
new  < stdlib_test$175:>

1329:
old  <	mul qword [int8$4#]>
new  <	; BinaryAdd Â£temporary3840 list Â£temporary3841>

1330:
old  <>
new  <	mov rsi, rbp>

1331:
old  < stdlib_test$176:>
new  <	add rsi, 24>

1332:
old  <	; BinaryAdd Â£temporary3878 list Â£temporary3879>
new  <	add rsi, rax>

1333:
old  <	mov rsi, rbp>
new  <>

1334:
old  <	add rsi, 24>
new  < stdlib_test$176:>

1335:
old  <	add rsi, rax>
new  <	; Dereference Â£temporary3842 -> Â£temporary3840 Â£temporary3840 0>

1338:
old  <	; Dereference Â£temporary3880 -> Â£temporary3878 Â£temporary3878 0>
new  <	; Parameter signedint Â£temporary3842 -> Â£temporary3840 80>

1339:
old  <>
new  <	mov eax, [rsi]>

1340:
old  < stdlib_test$178:>
new  <	mov [rbp + 80], eax>

1341:
old  <	; Parameter signedint Â£temporary3880 -> Â£temporary3878 80>
new  <>

1342:
old  <	mov eax, [rsi]>
new  < stdlib_test$178:>

1343:
old  <	mov [rbp + 80], eax>
new  <	; Call printf 48 4>

1344:
old  <>
new  <	mov qword [rbp + 48], stdlib_test$179>

1345:
old  < stdlib_test$179:>
new  <	mov [rbp + 56], rbp>

1346:
old  <	; Call printf 48 4>
new  <	add rbp, 48>

1347:
old  <	mov qword [rbp + 48], stdlib_test$180>
new  <	mov rdi, rbp>

1348:
old  <	mov [rbp + 56], rbp>
new  <	add rdi, 4>

1349:
old  <	add rbp, 48>
new  <	jmp printf>

1350:
old  <	mov rdi, rbp>
new  <>

1351:
old  <	add rdi, 4>
new  < stdlib_test$179:>

1352:
old  <	jmp printf>
new  <	; PostCall 48>

1355:
old  <	; PostCall 48>
new  <	; BinaryAdd index index 1>

1356:
old  <>
new  <	inc dword [rbp + 44]>

1357:
old  < stdlib_test$181:>
new  <>

1358:
old  <	; BinaryAdd index index 1>
new  < stdlib_test$181:>

1359:
old  <	inc dword [rbp + 44]>
new  <	; Goto 170>

1360:
old  <>
new  <	jmp stdlib_test$170>

1361:
old  < stdlib_test$182:>
new  <>

1362:
old  <	; Goto 171>
new  < stdlib_test$182:>

1363:
old  <	jmp stdlib_test$171>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1366:
old  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter pointer "\nB List 2: " 72>

1367:
old  <>
new  <	mov qword [rbp + 72], string_0AB20List2023A20#>

1368:
old  < stdlib_test$184:>
new  <>

1369:
old  <	; Parameter pointer "\nB List 2: " 72>
new  < stdlib_test$184:>

1370:
old  <	mov qword [rbp + 72], string_0AB20List2023A20#>
new  <	; Call printf 48 0>

1371:
old  <>
new  <	mov qword [rbp + 48], stdlib_test$185>

1372:
old  < stdlib_test$185:>
new  <	mov [rbp + 56], rbp>

1373:
old  <	; Call printf 48 0>
new  <	add rbp, 48>

1374:
old  <	mov qword [rbp + 48], stdlib_test$186>
new  <	mov rdi, rbp>

1375:
old  <	mov [rbp + 56], rbp>
new  <	jmp printf>

1376:
old  <	add rbp, 48>
new  <>

1377:
old  <	mov rdi, rbp>
new  < stdlib_test$185:>

1378:
old  <	jmp printf>
new  <	; PostCall 48>

1381:
old  <	; PostCall 48>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1384:
old  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter pointer list 72>

1385:
old  <>
new  <	mov [rbp + 72], rbp>

1386:
old  < stdlib_test$188:>
new  <	add qword [rbp + 72], 24>

1387:
old  <	; Parameter pointer list 72>
new  <>

1388:
old  <	mov [rbp + 72], rbp>
new  < stdlib_test$188:>

1389:
old  <	add qword [rbp + 72], 24>
new  <	; Parameter signedint size 80>

1390:
old  <>
new  <	mov eax, [rbp + 40]>

1391:
old  < stdlib_test$189:>
new  <	mov [rbp + 80], eax>

1392:
old  <	; Parameter signedint size 80>
new  <>

1393:
old  <	mov eax, [rbp + 40]>
new  < stdlib_test$189:>

1394:
old  <	mov [rbp + 80], eax>
new  <	; Parameter signedint 4 84>

1395:
old  <>
new  <	mov dword [rbp + 84], 4>

1396:
old  < stdlib_test$190:>
new  <>

1397:
old  <	; Parameter signedint 4 84>
new  < stdlib_test$190:>

1398:
old  <	mov dword [rbp + 84], 4>
new  <	; Parameter pointer reverse_compare 88>

1399:
old  <>
new  <	mov qword [rbp + 88], reverse_compare>

1400:
old  < stdlib_test$191:>
new  <>

1401:
old  <	; Parameter pointer reverse_compare 88>
new  < stdlib_test$191:>

1402:
old  <	mov qword [rbp + 88], reverse_compare>
new  <	; Call qsort 48 0>

1403:
old  <>
new  <	mov qword [rbp + 48], stdlib_test$192>

1404:
old  < stdlib_test$192:>
new  <	mov [rbp + 56], rbp>

1405:
old  <	; Call qsort 48 0>
new  <	add rbp, 48>

1406:
old  <	mov qword [rbp + 48], stdlib_test$193>
new  <	mov rdi, rbp>

1407:
old  <	mov [rbp + 56], rbp>
new  <	jmp qsort>

1408:
old  <	add rbp, 48>
new  <>

1409:
old  <	mov rdi, rbp>
new  < stdlib_test$192:>

1410:
old  <	jmp qsort>
new  <	; PostCall 48>

1413:
old  <	; PostCall 48>
new  <	; Assign index 0>

1414:
old  <>
new  <	mov dword [rbp + 44], 0>

1415:
old  < stdlib_test$194:>
new  <>

1416:
old  <	; Assign index 0>
new  < stdlib_test$194:>

1417:
old  <	mov dword [rbp + 44], 0>
new  <	; SignedGreaterThanEqual 206 index size>

1418:
old  <>
new  <	mov eax, [rbp + 40]>

1419:
old  < stdlib_test$195:>
new  <	cmp [rbp + 44], eax>

1420:
old  <	; SignedGreaterThanEqual 207 index size>
new  <	jge stdlib_test$206>

1421:
old  <	mov eax, [rbp + 40]>
new  <>

1422:
old  <	cmp [rbp + 44], eax>
new  < stdlib_test$195:>

1423:
old  <	jge stdlib_test$207>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1426:
old  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter pointer "%i " 72>

1427:
old  <>
new  <	mov qword [rbp + 72], string_25i20#>

1428:
old  < stdlib_test$197:>
new  <>

1429:
old  <	; Parameter pointer "%i " 72>
new  < stdlib_test$197:>

1430:
old  <	mov qword [rbp + 72], string_25i20#>
new  <	; IntegralToIntegral Â£temporary3849 index>

1431:
old  <>
new  <	mov eax, [rbp + 44]>

1432:
old  < stdlib_test$198:>
new  <	mov rbx, 4294967295>

1433:
old  <	; IntegralToIntegral Â£temporary3887 index>
new  <	and rax, rbx>

1434:
old  <	mov eax, [rbp + 44]>
new  <>

1435:
old  <	mov rbx, 4294967295>
new  < stdlib_test$198:>

1436:
old  <	and rax, rbx>
new  <	; UnsignedMultiply Â£temporary3851 Â£temporary3849 4>

1437:
old  <>
new  <	xor rdx, rdx>

1438:
old  < stdlib_test$199:>
new  <	mul qword [int8$4#]>

1439:
old  <	; UnsignedMultiply Â£temporary3889 Â£temporary3887 4>
new  <>

1440:
old  <	xor rdx, rdx>
new  < stdlib_test$199:>

1441:
old  <	mul qword [int8$4#]>
new  <	; BinaryAdd Â£temporary3850 list Â£temporary3851>

1442:
old  <>
new  <	mov rsi, rbp>

1443:
old  < stdlib_test$200:>
new  <	add rsi, 24>

1444:
old  <	; BinaryAdd Â£temporary3888 list Â£temporary3889>
new  <	add rsi, rax>

1445:
old  <	mov rsi, rbp>
new  <>

1446:
old  <	add rsi, 24>
new  < stdlib_test$200:>

1447:
old  <	add rsi, rax>
new  <	; Dereference Â£temporary3852 -> Â£temporary3850 Â£temporary3850 0>

1450:
old  <	; Dereference Â£temporary3890 -> Â£temporary3888 Â£temporary3888 0>
new  <	; Parameter signedint Â£temporary3852 -> Â£temporary3850 80>

1451:
old  <>
new  <	mov eax, [rsi]>

1452:
old  < stdlib_test$202:>
new  <	mov [rbp + 80], eax>

1453:
old  <	; Parameter signedint Â£temporary3890 -> Â£temporary3888 80>
new  <>

1454:
old  <	mov eax, [rsi]>
new  < stdlib_test$202:>

1455:
old  <	mov [rbp + 80], eax>
new  <	; Call printf 48 4>

1456:
old  <>
new  <	mov qword [rbp + 48], stdlib_test$203>

1457:
old  < stdlib_test$203:>
new  <	mov [rbp + 56], rbp>

1458:
old  <	; Call printf 48 4>
new  <	add rbp, 48>

1459:
old  <	mov qword [rbp + 48], stdlib_test$204>
new  <	mov rdi, rbp>

1460:
old  <	mov [rbp + 56], rbp>
new  <	add rdi, 4>

1461:
old  <	add rbp, 48>
new  <	jmp printf>

1462:
old  <	mov rdi, rbp>
new  <>

1463:
old  <	add rdi, 4>
new  < stdlib_test$203:>

1464:
old  <	jmp printf>
new  <	; PostCall 48>

1467:
old  <	; PostCall 48>
new  <	; BinaryAdd index index 1>

1468:
old  <>
new  <	inc dword [rbp + 44]>

1469:
old  < stdlib_test$205:>
new  <>

1470:
old  <	; BinaryAdd index index 1>
new  < stdlib_test$205:>

1471:
old  <	inc dword [rbp + 44]>
new  <	; Goto 194>

1472:
old  <>
new  <	jmp stdlib_test$194>

1473:
old  < stdlib_test$206:>
new  <>

1474:
old  <	; Goto 195>
new  < stdlib_test$206:>

1475:
old  <	jmp stdlib_test$195>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1478:
old  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter pointer "\nC List 3: " 72>

1479:
old  <>
new  <	mov qword [rbp + 72], string_0AC20List2033A20#>

1480:
old  < stdlib_test$208:>
new  <>

1481:
old  <	; Parameter pointer "\nC List 3: " 72>
new  < stdlib_test$208:>

1482:
old  <	mov qword [rbp + 72], string_0AC20List2033A20#>
new  <	; Call printf 48 0>

1483:
old  <>
new  <	mov qword [rbp + 48], stdlib_test$209>

1484:
old  < stdlib_test$209:>
new  <	mov [rbp + 56], rbp>

1485:
old  <	; Call printf 48 0>
new  <	add rbp, 48>

1486:
old  <	mov qword [rbp + 48], stdlib_test$210>
new  <	mov rdi, rbp>

1487:
old  <	mov [rbp + 56], rbp>
new  <	jmp printf>

1488:
old  <	add rbp, 48>
new  <>

1489:
old  <	mov rdi, rbp>
new  < stdlib_test$209:>

1490:
old  <	jmp printf>
new  <	; PostCall 48>

1493:
old  <	; PostCall 48>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1496:
old  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter pointer list 72>

1497:
old  <>
new  <	mov [rbp + 72], rbp>

1498:
old  < stdlib_test$212:>
new  <	add qword [rbp + 72], 24>

1499:
old  <	; Parameter pointer list 72>
new  <>

1500:
old  <	mov [rbp + 72], rbp>
new  < stdlib_test$212:>

1501:
old  <	add qword [rbp + 72], 24>
new  <	; Parameter signedint size 80>

1502:
old  <>
new  <	mov eax, [rbp + 40]>

1503:
old  < stdlib_test$213:>
new  <	mov [rbp + 80], eax>

1504:
old  <	; Parameter signedint size 80>
new  <>

1505:
old  <	mov eax, [rbp + 40]>
new  < stdlib_test$213:>

1506:
old  <	mov [rbp + 80], eax>
new  <	; Parameter signedint 4 84>

1507:
old  <>
new  <	mov dword [rbp + 84], 4>

1508:
old  < stdlib_test$214:>
new  <>

1509:
old  <	; Parameter signedint 4 84>
new  < stdlib_test$214:>

1510:
old  <	mov dword [rbp + 84], 4>
new  <	; Parameter pointer compare 88>

1511:
old  <>
new  <	mov qword [rbp + 88], compare>

1512:
old  < stdlib_test$215:>
new  <>

1513:
old  <	; Parameter pointer compare 88>
new  < stdlib_test$215:>

1514:
old  <	mov qword [rbp + 88], compare>
new  <	; Call qsort 48 0>

1515:
old  <>
new  <	mov qword [rbp + 48], stdlib_test$216>

1516:
old  < stdlib_test$216:>
new  <	mov [rbp + 56], rbp>

1517:
old  <	; Call qsort 48 0>
new  <	add rbp, 48>

1518:
old  <	mov qword [rbp + 48], stdlib_test$217>
new  <	mov rdi, rbp>

1519:
old  <	mov [rbp + 56], rbp>
new  <	jmp qsort>

1520:
old  <	add rbp, 48>
new  <>

1521:
old  <	mov rdi, rbp>
new  < stdlib_test$216:>

1522:
old  <	jmp qsort>
new  <	; PostCall 48>

1525:
old  <	; PostCall 48>
new  <	; Assign index 0>

1526:
old  <>
new  <	mov dword [rbp + 44], 0>

1527:
old  < stdlib_test$218:>
new  <>

1528:
old  <	; Assign index 0>
new  < stdlib_test$218:>

1529:
old  <	mov dword [rbp + 44], 0>
new  <	; SignedGreaterThanEqual 230 index size>

1530:
old  <>
new  <	mov eax, [rbp + 40]>

1531:
old  < stdlib_test$219:>
new  <	cmp [rbp + 44], eax>

1532:
old  <	; SignedGreaterThanEqual 231 index size>
new  <	jge stdlib_test$230>

1533:
old  <	mov eax, [rbp + 40]>
new  <>

1534:
old  <	cmp [rbp + 44], eax>
new  < stdlib_test$219:>

1535:
old  <	jge stdlib_test$231>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1538:
old  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter pointer "%i " 72>

1539:
old  <>
new  <	mov qword [rbp + 72], string_25i20#>

1540:
old  < stdlib_test$221:>
new  <>

1541:
old  <	; Parameter pointer "%i " 72>
new  < stdlib_test$221:>

1542:
old  <	mov qword [rbp + 72], string_25i20#>
new  <	; IntegralToIntegral Â£temporary3859 index>

1543:
old  <>
new  <	mov eax, [rbp + 44]>

1544:
old  < stdlib_test$222:>
new  <	mov rbx, 4294967295>

1545:
old  <	; IntegralToIntegral Â£temporary3897 index>
new  <	and rax, rbx>

1546:
old  <	mov eax, [rbp + 44]>
new  <>

1547:
old  <	mov rbx, 4294967295>
new  < stdlib_test$222:>

1548:
old  <	and rax, rbx>
new  <	; UnsignedMultiply Â£temporary3861 Â£temporary3859 4>

1549:
old  <>
new  <	xor rdx, rdx>

1550:
old  < stdlib_test$223:>
new  <	mul qword [int8$4#]>

1551:
old  <	; UnsignedMultiply Â£temporary3899 Â£temporary3897 4>
new  <>

1552:
old  <	xor rdx, rdx>
new  < stdlib_test$223:>

1553:
old  <	mul qword [int8$4#]>
new  <	; BinaryAdd Â£temporary3860 list Â£temporary3861>

1554:
old  <>
new  <	mov rsi, rbp>

1555:
old  < stdlib_test$224:>
new  <	add rsi, 24>

1556:
old  <	; BinaryAdd Â£temporary3898 list Â£temporary3899>
new  <	add rsi, rax>

1557:
old  <	mov rsi, rbp>
new  <>

1558:
old  <	add rsi, 24>
new  < stdlib_test$224:>

1559:
old  <	add rsi, rax>
new  <	; Dereference Â£temporary3862 -> Â£temporary3860 Â£temporary3860 0>

1562:
old  <	; Dereference Â£temporary3900 -> Â£temporary3898 Â£temporary3898 0>
new  <	; Parameter signedint Â£temporary3862 -> Â£temporary3860 80>

1563:
old  <>
new  <	mov eax, [rsi]>

1564:
old  < stdlib_test$226:>
new  <	mov [rbp + 80], eax>

1565:
old  <	; Parameter signedint Â£temporary3900 -> Â£temporary3898 80>
new  <>

1566:
old  <	mov eax, [rsi]>
new  < stdlib_test$226:>

1567:
old  <	mov [rbp + 80], eax>
new  <	; Call printf 48 4>

1568:
old  <>
new  <	mov qword [rbp + 48], stdlib_test$227>

1569:
old  < stdlib_test$227:>
new  <	mov [rbp + 56], rbp>

1570:
old  <	; Call printf 48 4>
new  <	add rbp, 48>

1571:
old  <	mov qword [rbp + 48], stdlib_test$228>
new  <	mov rdi, rbp>

1572:
old  <	mov [rbp + 56], rbp>
new  <	add rdi, 4>

1573:
old  <	add rbp, 48>
new  <	jmp printf>

1574:
old  <	mov rdi, rbp>
new  <>

1575:
old  <	add rdi, 4>
new  < stdlib_test$227:>

1576:
old  <	jmp printf>
new  <	; PostCall 48>

1579:
old  <	; PostCall 48>
new  <	; BinaryAdd index index 1>

1580:
old  <>
new  <	inc dword [rbp + 44]>

1581:
old  < stdlib_test$229:>
new  <>

1582:
old  <	; BinaryAdd index index 1>
new  < stdlib_test$229:>

1583:
old  <	inc dword [rbp + 44]>
new  <	; Goto 218>

1584:
old  <>
new  <	jmp stdlib_test$218>

1585:
old  < stdlib_test$230:>
new  <>

1586:
old  <	; Goto 219>
new  < stdlib_test$230:>

1587:
old  <	jmp stdlib_test$219>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1590:
old  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter pointer "\n\nSearch:\n" 72>

1591:
old  <>
new  <	mov qword [rbp + 72], string_0A0ASearch3A0A#>

1592:
old  < stdlib_test$232:>
new  <>

1593:
old  <	; Parameter pointer "\n\nSearch:\n" 72>
new  < stdlib_test$232:>

1594:
old  <	mov qword [rbp + 72], string_0A0ASearch3A0A#>
new  <	; Call printf 48 0>

1595:
old  <>
new  <	mov qword [rbp + 48], stdlib_test$233>

1596:
old  < stdlib_test$233:>
new  <	mov [rbp + 56], rbp>

1597:
old  <	; Call printf 48 0>
new  <	add rbp, 48>

1598:
old  <	mov qword [rbp + 48], stdlib_test$234>
new  <	mov rdi, rbp>

1599:
old  <	mov [rbp + 56], rbp>
new  <	jmp printf>

1600:
old  <	add rbp, 48>
new  <>

1601:
old  <	mov rdi, rbp>
new  < stdlib_test$233:>

1602:
old  <	jmp printf>
new  <	; PostCall 48>

1605:
old  <	; PostCall 48>
new  <	; Assign key 0>

1606:
old  <>
new  <	mov dword [rbp + 44], 0>

1607:
old  < stdlib_test$235:>
new  <>

1608:
old  <	; Assign key 0>
new  < stdlib_test$235:>

1609:
old  <	mov dword [rbp + 44], 0>
new  <	; SignedGreaterThanEqual 264 key 6>

1610:
old  <>
new  <	cmp dword [rbp + 44], 6>

1611:
old  < stdlib_test$236:>
new  <	jge stdlib_test$264>

1612:
old  <	; SignedGreaterThanEqual 265 key 6>
new  <>

1613:
old  <	cmp dword [rbp + 44], 6>
new  < stdlib_test$236:>

1614:
old  <	jge stdlib_test$265>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1617:
old  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Address Â£temporary3867 key>

1618:
old  <>
new  <	mov rsi, rbp>

1619:
old  < stdlib_test$238:>
new  <	add rsi, 44>

1620:
old  <	; Address Â£temporary3905 key>
new  <>

1621:
old  <	mov rsi, rbp>
new  < stdlib_test$238:>

1622:
old  <	add rsi, 44>
new  <	; Parameter pointer Â£temporary3867 72>

1623:
old  <>
new  <	mov [rbp + 72], rsi>

1624:
old  < stdlib_test$239:>
new  <>

1625:
old  <	; Parameter pointer Â£temporary3905 72>
new  < stdlib_test$239:>

1626:
old  <	mov [rbp + 72], rsi>
new  <	; Parameter pointer list 80>

1627:
old  <>
new  <	mov [rbp + 80], rbp>

1628:
old  < stdlib_test$240:>
new  <	add qword [rbp + 80], 24>

1629:
old  <	; Parameter pointer list 80>
new  <>

1630:
old  <	mov [rbp + 80], rbp>
new  < stdlib_test$240:>

1631:
old  <	add qword [rbp + 80], 24>
new  <	; Parameter signedint size 88>

1632:
old  <>
new  <	mov eax, [rbp + 40]>

1633:
old  < stdlib_test$241:>
new  <	mov [rbp + 88], eax>

1634:
old  <	; Parameter signedint size 88>
new  <>

1635:
old  <	mov eax, [rbp + 40]>
new  < stdlib_test$241:>

1636:
old  <	mov [rbp + 88], eax>
new  <	; Parameter signedint 4 92>

1637:
old  <>
new  <	mov dword [rbp + 92], 4>

1638:
old  < stdlib_test$242:>
new  <>

1639:
old  <	; Parameter signedint 4 92>
new  < stdlib_test$242:>

1640:
old  <	mov dword [rbp + 92], 4>
new  <	; Parameter pointer compare 96>

1641:
old  <>
new  <	mov qword [rbp + 96], compare>

1642:
old  < stdlib_test$243:>
new  <>

1643:
old  <	; Parameter pointer compare 96>
new  < stdlib_test$243:>

1644:
old  <	mov qword [rbp + 96], compare>
new  <	; Call bsearch 48 0>

1645:
old  <>
new  <	mov qword [rbp + 48], stdlib_test$244>

1646:
old  < stdlib_test$244:>
new  <	mov [rbp + 56], rbp>

1647:
old  <	; Call bsearch 48 0>
new  <	add rbp, 48>

1648:
old  <	mov qword [rbp + 48], stdlib_test$245>
new  <	jmp bsearch>

1649:
old  <	mov [rbp + 56], rbp>
new  <>

1650:
old  <	add rbp, 48>
new  < stdlib_test$244:>

1651:
old  <	jmp bsearch>
new  <	; PostCall 48>

1654:
old  <	; PostCall 48>
new  <	; GetReturnValue Â£temporary3869>

1657:
old  <	; GetReturnValue Â£temporary3907>
new  <	; IntegralToIntegral Â£temporary3870 Â£temporary3869>

1660:
old  <	; IntegralToIntegral Â£temporary3908 Â£temporary3907>
new  <	; Assign p Â£temporary3870>

1661:
old  <>
new  <	mov [rbp + 48], rbx>

1662:
old  < stdlib_test$248:>
new  <>

1663:
old  <	; Assign p Â£temporary3908>
new  < stdlib_test$248:>

1664:
old  <	mov [rbp + 48], rbx>
new  <	; Equal 254 p 0>

1665:
old  <>
new  <	cmp qword [rbp + 48], 0>

1666:
old  < stdlib_test$249:>
new  <	je stdlib_test$254>

1667:
old  <	; Equal 255 p 0>
new  <>

1668:
old  <	cmp qword [rbp + 48], 0>
new  < stdlib_test$249:>

1669:
old  <	je stdlib_test$255>
new  <	; BinarySubtract Â£temporary3873 p list>

1670:
old  <>
new  <	mov rax, [rbp + 48]>

1671:
old  < stdlib_test$250:>
new  <	sub rax, rbp>

1672:
old  <	; BinarySubtract Â£temporary3911 p list>
new  <	sub rax, 24>

1673:
old  <	mov rax, [rbp + 48]>
new  <>

1674:
old  <	sub rax, rbp>
new  < stdlib_test$250:>

1675:
old  <	sub rax, 24>
new  <	; UnsignedDivide Â£temporary3872 Â£temporary3873 4>

1676:
old  <>
new  <	xor rdx, rdx>

1677:
old  < stdlib_test$251:>
new  <	div qword [int8$4#]>

1678:
old  <	; UnsignedDivide Â£temporary3910 Â£temporary3911 4>
new  <>

1679:
old  <	xor rdx, rdx>
new  < stdlib_test$251:>

1680:
old  <	div qword [int8$4#]>
new  <	; IntegralToIntegral Â£temporary3874 Â£temporary3872>

1683:
old  <	; IntegralToIntegral Â£temporary3912 Â£temporary3910>
new  <	; Assign Â£temporary3875 Â£temporary3874>

1686:
old  <	; Assign Â£temporary3913 Â£temporary3912>
new  <	; Goto 255>

1687:
old  <>
new  <	jmp stdlib_test$255>

1688:
old  < stdlib_test$254:>
new  <>

1689:
old  <	; Goto 256>
new  < stdlib_test$254:>

1690:
old  <	jmp stdlib_test$256>
new  <	; Assign Â£temporary3875 -1>

1691:
old  <>
new  <	mov eax, -1>

1692:
old  < stdlib_test$255:>
new  <>

1693:
old  <	; Assign Â£temporary3913 -1>
new  < stdlib_test$255:>

1694:
old  <	mov eax, -1>
new  <	; Assign index Â£temporary3875>

1695:
old  <>
new  <	mov [rbp + 56], eax>

1696:
old  < stdlib_test$256:>
new  <>

1697:
old  <	; Assign index Â£temporary3913>
new  < stdlib_test$256:>

1698:
old  <	mov [rbp + 56], eax>
new  <	; PreCall 60 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1701:
old  <	; PreCall 60 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter pointer "  (%i, %i)\n" 84>

1702:
old  <>
new  <	mov qword [rbp + 84], string_20202825i2C2025i290A#>

1703:
old  < stdlib_test$258:>
new  <>

1704:
old  <	; Parameter pointer "  (%i, %i)\n" 84>
new  < stdlib_test$258:>

1705:
old  <	mov qword [rbp + 84], string_20202825i2C2025i290A#>
new  <	; Parameter signedint key 92>

1706:
old  <>
new  <	mov eax, [rbp + 44]>

1707:
old  < stdlib_test$259:>
new  <	mov [rbp + 92], eax>

1708:
old  <	; Parameter signedint key 92>
new  <>

1709:
old  <	mov eax, [rbp + 44]>
new  < stdlib_test$259:>

1710:
old  <	mov [rbp + 92], eax>
new  <	; Parameter signedint index 96>

1711:
old  <>
new  <	mov eax, [rbp + 56]>

1712:
old  < stdlib_test$260:>
new  <	mov [rbp + 96], eax>

1713:
old  <	; Parameter signedint index 96>
new  <>

1714:
old  <	mov eax, [rbp + 56]>
new  < stdlib_test$260:>

1715:
old  <	mov [rbp + 96], eax>
new  <	; Call printf 60 8>

1716:
old  <>
new  <	mov qword [rbp + 60], stdlib_test$261>

1717:
old  < stdlib_test$261:>
new  <	mov [rbp + 68], rbp>

1718:
old  <	; Call printf 60 8>
new  <	add rbp, 60>

1719:
old  <	mov qword [rbp + 60], stdlib_test$262>
new  <	mov rdi, rbp>

1720:
old  <	mov [rbp + 68], rbp>
new  <	add rdi, 8>

1721:
old  <	add rbp, 60>
new  <	jmp printf>

1722:
old  <	mov rdi, rbp>
new  <>

1723:
old  <	add rdi, 8>
new  < stdlib_test$261:>

1724:
old  <	jmp printf>
new  <	; PostCall 60>

1727:
old  <	; PostCall 60>
new  <	; BinaryAdd key key 1>

1728:
old  <>
new  <	inc dword [rbp + 44]>

1729:
old  < stdlib_test$263:>
new  <>

1730:
old  <	; BinaryAdd key key 1>
new  < stdlib_test$263:>

1731:
old  <	inc dword [rbp + 44]>
new  <	; Goto 235>

1732:
old  <>
new  <	jmp stdlib_test$235>

1733:
old  < stdlib_test$264:>
new  <>

1734:
old  <	; Goto 236>
new  < stdlib_test$264:>

1735:
old  <	jmp stdlib_test$236>
new  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>

1738:
old  <	; PreCall 48 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0>
new  <	; Parameter pointer "\n" 72>

1739:
old  <>
new  <	mov qword [rbp + 72], string_0A#>

1740:
old  < stdlib_test$266:>
new  <>

1741:
old  <	; Parameter pointer "\n" 72>
new  < stdlib_test$266:>

1742:
old  <	mov qword [rbp + 72], string_0A#>
new  <	; Call printf 48 0>

1743:
old  <>
new  <	mov qword [rbp + 48], stdlib_test$267>

1744:
old  < stdlib_test$267:>
new  <	mov [rbp + 56], rbp>

1745:
old  <	; Call printf 48 0>
new  <	add rbp, 48>

1746:
old  <	mov qword [rbp + 48], stdlib_test$268>
new  <	mov rdi, rbp>

1747:
old  <	mov [rbp + 56], rbp>
new  <	jmp printf>

1748:
old  <	add rbp, 48>
new  <>

1749:
old  <	mov rdi, rbp>
new  < stdlib_test$267:>

1750:
old  <	jmp printf>
new  <	; PostCall 48>

1753:
old  <	; PostCall 48>
new  <	; Return>

1754:
old  <>
new  <	mov rax, [rbp]>

1755:
old  < stdlib_test$269:>
new  <	mov rdi, [rbp + 16]>

1756:
old  <	; Return>
new  <	mov rbp, [rbp + 8]>

1757:
old  <	mov rax, [rbp]>
new  <	jmp rax>

1758:
old  <	mov rdi, [rbp + 16]>
new  <>

1759:
old  <	mov rbp, [rbp + 8]>
new  < stdlib_test$269:>

1760:
old  <	jmp rax>
new  <	; FunctionEnd stdlib_test>

153:
old  <	; GetReturnValue Â£temporary3937>
new  <	; GetReturnValue Â£temporary3899>

156:
old  <	; Assign now Â£temporary3937>
new  <	; Assign now Â£temporary3899>

163:
old  <	; Address Â£temporary3938 now>
new  <	; Address Â£temporary3900 now>

168:
old  <	; Parameter pointer Â£temporary3938 112>
new  <	; Parameter pointer Â£temporary3900 112>

182:
old  <	; GetReturnValue Â£temporary3939>
new  <	; GetReturnValue Â£temporary3901>

185:
old  <	; Assign p Â£temporary3939>
new  <	; Assign p Â£temporary3901>

207:
old  <	; GetReturnValue Â£temporary3940>
new  <	; GetReturnValue Â£temporary3902>

210:
old  <	; Assign now2 Â£temporary3940>
new  <	; Assign now2 Â£temporary3902>

262:
old  <	; Dereference Â£temporary3943 -> p p 0>
new  <	; Dereference Â£temporary3905 -> p p 0>

266:
old  <	; Assign s Â£temporary3943 -> p>
new  <	; Assign s Â£temporary3905 -> p>

288:
old  <	; IntegralToIntegral Â£temporary3946 s.tm_wday>
new  <	; IntegralToIntegral Â£temporary3908 s.tm_wday>

294:
old  <	; UnsignedMultiply Â£temporary3947 Â£temporary3946 8>
new  <	; UnsignedMultiply Â£temporary3909 Â£temporary3908 8>

299:
old  <	; BinaryAdd Â£temporary3948 weekdays Â£temporary3947>
new  <	; BinaryAdd Â£temporary3910 weekdays Â£temporary3909>

305:
old  <	; Dereference Â£temporary3945 -> Â£temporary3948 Â£temporary3948 0>
new  <	; Dereference Â£temporary3907 -> Â£temporary3910 Â£temporary3910 0>

308:
old  <	; Parameter pointer Â£temporary3945 -> Â£temporary3948 172>
new  <	; Parameter pointer Â£temporary3907 -> Â£temporary3910 172>

313:
old  <	; BinaryAdd Â£temporary3950 s.tm_year 1900>
new  <	; BinaryAdd Â£temporary3912 s.tm_year 1900>

318:
old  <	; Parameter signedint Â£temporary3950 180>
new  <	; Parameter signedint Â£temporary3912 180>

322:
old  <	; BinaryAdd Â£temporary3952 s.tm_mon 1>
new  <	; BinaryAdd Â£temporary3914 s.tm_mon 1>

327:
old  <	; Parameter signedint Â£temporary3952 184>
new  <	; Parameter signedint Â£temporary3914 184>

381:
old  <	; Address Â£temporary3961 now>
new  <	; Address Â£temporary3923 now>

386:
old  <	; Parameter pointer Â£temporary3961 164>
new  <	; Parameter pointer Â£temporary3923 164>

400:
old  <	; GetReturnValue Â£temporary3962>
new  <	; GetReturnValue Â£temporary3924>

403:
old  <	; Dereference Â£temporary3963 -> Â£temporary3962 Â£temporary3962 0>
new  <	; Dereference Â£temporary3925 -> Â£temporary3924 Â£temporary3924 0>

406:
old  <	; Assign s Â£temporary3963 -> Â£temporary3962>
new  <	; Assign s Â£temporary3925 -> Â£temporary3924>

428:
old  <	; IntegralToIntegral Â£temporary3966 s.tm_wday>
new  <	; IntegralToIntegral Â£temporary3928 s.tm_wday>

434:
old  <	; UnsignedMultiply Â£temporary3967 Â£temporary3966 8>
new  <	; UnsignedMultiply Â£temporary3929 Â£temporary3928 8>

439:
old  <	; BinaryAdd Â£temporary3968 weekdays Â£temporary3967>
new  <	; BinaryAdd Â£temporary3930 weekdays Â£temporary3929>

445:
old  <	; Dereference Â£temporary3965 -> Â£temporary3968 Â£temporary3968 0>
new  <	; Dereference Â£temporary3927 -> Â£temporary3930 Â£temporary3930 0>

448:
old  <	; Parameter pointer Â£temporary3965 -> Â£temporary3968 172>
new  <	; Parameter pointer Â£temporary3927 -> Â£temporary3930 172>

453:
old  <	; BinaryAdd Â£temporary3970 s.tm_year 1900>
new  <	; BinaryAdd Â£temporary3932 s.tm_year 1900>

458:
old  <	; Parameter signedint Â£temporary3970 180>
new  <	; Parameter signedint Â£temporary3932 180>

462:
old  <	; BinaryAdd Â£temporary3972 s.tm_mon 1>
new  <	; BinaryAdd Â£temporary3934 s.tm_mon 1>

467:
old  <	; Parameter signedint Â£temporary3972 184>
new  <	; Parameter signedint Â£temporary3934 184>

529:
old  <	; Address Â£temporary3981 s>
new  <	; Address Â£temporary3943 s>

534:
old  <	; Parameter pointer Â£temporary3981 396>
new  <	; Parameter pointer Â£temporary3943 396>

548:
old  <	; GetReturnValue Â£temporary3982>
new  <	; GetReturnValue Â£temporary3944>

551:
old  <	; Parameter pointer Â£temporary3982 372>
new  <	; Parameter pointer Â£temporary3944 372>

576:
old  <	; Address Â£temporary3984 now>
new  <	; Address Â£temporary3946 now>

581:
old  <	; Parameter pointer Â£temporary3984 396>
new  <	; Parameter pointer Â£temporary3946 396>

595:
old  <	; GetReturnValue Â£temporary3985>
new  <	; GetReturnValue Â£temporary3947>

598:
old  <	; Parameter pointer Â£temporary3985 372>
new  <	; Parameter pointer Â£temporary3947 372>

657:
old  <	; Address Â£temporary3988 s>
new  <	; Address Â£temporary3950 s>

662:
old  <	; Parameter pointer Â£temporary3988 684>
new  <	; Parameter pointer Â£temporary3950 684>

676:
old  <	; GetReturnValue Â£temporary3989>
new  <	; GetReturnValue Â£temporary3951>

679:
old  <	; Assign i Â£temporary3989>
new  <	; Assign i Â£temporary3951>

