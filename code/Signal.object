1:	

signal:	; CallHeader 10 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
3:	

signal$1:	; Parameter 10 string_Signal2025i20function2025p0A# 6
4:		mov word [bp + 16], @1541$string_Signal2025i20function2025p0A#
6:	

signal$2:	; Parameter 10 sig 8
7:		mov ax, [bp + 6]
8:		mov [bp + 18], ax
10:	

signal$3:	; Parameter 10 func 10
11:		mov ax, [bp + 8]
12:		mov [bp + 20], ax
14:	

signal$4:	; Call 10 printf 0
15:		mov word [bp + 10], signal$5
16:		mov [bp + 12], bp
17:		add bp, 10
18:		mov di, bp
19:		add di, 4
20:		jmp printf
22:	

signal$5:	; PostCall 10
24:	

signal$6:	; IntegralToIntegral £temporary644 sig
25:		mov ax, [bp + 6]
28:		cmp ax, 0
29:		jge signal$7
30:		neg ax
32:		neg al
34:	

signal$7:	; AssignRegister al £temporary644
36:	

signal$8:	; AssignRegister ah 37
37:		mov ah, 37
39:	

signal$9:	; AssignRegister dx func
40:		mov dx, [bp + 8]
42:	

signal$10:	; Interrupt 33
43:		int 33
45:	

signal$11:	; CallHeader 10 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
47:	

signal$12:	; Parameter 10 string_Signal20done0A# 6
48:		mov word [bp + 16], @1550$string_Signal20done0A#
50:	

signal$13:	; Call 10 printf 0
51:		mov word [bp + 10], signal$14
52:		mov [bp + 12], bp
53:		add bp, 10
54:		mov di, bp
55:		jmp printf
57:	

signal$14:	; PostCall 10
59:	

signal$15:	; Return 0
60:		mov ax, [bp]
61:		mov di, [bp + 4]
62:		mov bp, [bp + 2]
63:		jmp ax
65:	

signal$16:	; FunctionEnd signal
1:	

raise:	; CallHeader 8 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
3:	

raise$1:	; Parameter 8 string_0ARaise20signal2025i0A# 6
4:		mov word [bp + 14], @1557$string_0ARaise20signal2025i0A#
6:	

raise$2:	; Parameter 8 sig 8
7:		mov ax, [bp + 6]
8:		mov [bp + 16], ax
10:	

raise$3:	; Call 8 printf 0
11:		mov word [bp + 8], raise$4
12:		mov [bp + 10], bp
13:		add bp, 8
14:		mov di, bp
15:		add di, 2
16:		jmp printf
18:	

raise$4:	; PostCall 8
20:	

raise$5:	; IntegralToIntegral £temporary654 sig
21:		mov ax, [bp + 6]
24:		cmp ax, 0
25:		jge raise$6
26:		neg ax
28:		neg al
30:	

raise$6:	; AssignRegister al £temporary654
32:	

raise$7:	; AssignRegister ah 53
33:		mov ah, 53
35:	

raise$8:	; Interrupt 33
36:		int 33
38:	

raise$9:	; InspectRegister £temporary656 bx
40:	

raise$10:	; Assign func £temporary656
41:		mov [bp + 8], bx
43:	

raise$11:	; CallHeader 10 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
45:	

raise$12:	; Parameter 10 string_Raise20function2025p0A# 6
46:		mov word [bp + 16], @1567$string_Raise20function2025p0A#
48:	

raise$13:	; Parameter 10 func 8
49:		mov ax, [bp + 8]
50:		mov [bp + 18], ax
52:	

raise$14:	; Call 10 printf 0
53:		mov word [bp + 10], raise$15
54:		mov [bp + 12], bp
55:		add bp, 10
56:		mov di, bp
57:		add di, 2
58:		jmp printf
60:	

raise$15:	; PostCall 10
62:	

raise$16:	; NotEqual 23 func 0
63:		cmp word [bp + 8], 0
64:		jne raise$23
66:	

raise$17:	; CallHeader 10 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
68:	

raise$18:	; Parameter 10 string_Raise20default0A# 6
69:		mov word [bp + 16], @1573$string_Raise20default0A#
71:	

raise$19:	; Call 10 printf 0
72:		mov word [bp + 10], raise$20
73:		mov [bp + 12], bp
74:		add bp, 10
75:		mov di, bp
76:		jmp printf
78:	

raise$20:	; PostCall 10
80:	

raise$21:	; SetReturnValue 1
81:		mov bx, 1
83:	

raise$22:	; Return 1
84:		mov ax, [bp]
85:		mov di, [bp + 4]
86:		mov bp, [bp + 2]
87:		jmp ax
89:	

raise$23:	; NotEqual 30 func 0
90:		cmp word [bp + 8], 0
91:		jne raise$30
93:	

raise$24:	; CallHeader 10 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
95:	

raise$25:	; Parameter 10 string_Raise20error0A# 6
96:		mov word [bp + 16], @1581$string_Raise20error0A#
98:	

raise$26:	; Call 10 printf 0
99:		mov word [bp + 10], raise$27
100:		mov [bp + 12], bp
101:		add bp, 10
102:		mov di, bp
103:		jmp printf
105:	

raise$27:	; PostCall 10
107:	

raise$28:	; SetReturnValue 0
108:		mov bx, 0
110:	

raise$29:	; Return 0
111:		mov ax, [bp]
112:		mov di, [bp + 4]
113:		mov bp, [bp + 2]
114:		jmp ax
116:	

raise$30:	; CallHeader 10 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
118:	

raise$31:	; Parameter 10 string_Raise20function2C20calling2025i20with2025i0A# 6
119:		mov word [bp + 16], @1585$string_Raise20function2C20calling2025i20with2025i0A#
121:	

raise$32:	; Parameter 10 func 8
122:		mov ax, [bp + 8]
123:		mov [bp + 18], ax
125:	

raise$33:	; Parameter 10 sig 10
126:		mov ax, [bp + 6]
127:		mov [bp + 20], ax
129:	

raise$34:	; Call 10 printf 0
130:		mov word [bp + 10], raise$35
131:		mov [bp + 12], bp
132:		add bp, 10
133:		mov di, bp
134:		add di, 4
135:		jmp printf
137:	

raise$35:	; PostCall 10
139:	

raise$36:	; CallHeader 10 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
141:	

raise$37:	; Parameter 10 sig 6
142:		mov ax, [bp + 6]
143:		mov [bp + 16], ax
145:	

raise$38:	; Call 10 func 0
146:		mov word [bp + 10], raise$39
147:		mov [bp + 12], bp
148:		mov ax, [bp + 8]
149:		add bp, 10
150:		jmp ax
152:	

raise$39:	; PostCall 10
154:	

raise$40:	; SetReturnValue 1
155:		mov bx, 1
157:	

raise$41:	; Return 1
158:		mov ax, [bp]
159:		mov di, [bp + 4]
160:		mov bp, [bp + 2]
161:		jmp ax
163:	

raise$42:	; FunctionEnd raise
