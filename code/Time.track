1:	

clock:	; SetReturnValue -1
2:		mov a1948, -1
4:	

clock$1:	; Return -1
5:		mov t1949, [bp]
6:		mov di, [bp + 4]
7:		mov bp, [bp + 2]
8:		jmp t1949
10:	

clock$2:	; FunctionEnd clock
1:	

@7313$isLeapYear:	; SignedModulo £temporary3231 year 4
2:		mov a1950, [bp + 6]
4:		xor dx, dx
5:		idiv word [@7315$int2$4#]
11:	

@7313$isLeapYear$1:	; NotEqual 4 £temporary3231 0
12:		cmp t1952, 0
13:		jne @7313$isLeapYear$4
15:	

@7313$isLeapYear$2:	; SignedModulo £temporary3233 year 100
16:		mov a1953, [bp + 6]
18:		xor dx, dx
19:		idiv word [@7321$int2$100#]
25:	

@7313$isLeapYear$3:	; NotEqual 6 £temporary3233 0
26:		cmp t1955, 0
27:		jne @7313$isLeapYear$6
29:	

@7313$isLeapYear$4:	; SignedModulo £temporary3236 year 400
30:		mov a1956, [bp + 6]
32:		xor dx, dx
33:		idiv word [@7328$int2$400#]
39:	

@7313$isLeapYear$5:	; NotEqual 8 £temporary3236 0
40:		cmp t1958, 0
41:		jne @7313$isLeapYear$8
43:	

@7313$isLeapYear$6:	; Assign £temporary3239 1
44:		mov t1959, 1
46:	

@7313$isLeapYear$7:	; Goto 9
47:		jmp @7313$isLeapYear$9
49:	

@7313$isLeapYear$8:	; Assign £temporary3239 0
50:		mov t1960, 0
52:	

@7313$isLeapYear$9:	; SetReturnValue £temporary3239
54:	

@7313$isLeapYear$10:	; Return £temporary3239
55:		mov t1961, [bp]
56:		mov di, [bp + 4]
57:		mov bp, [bp + 2]
58:		jmp t1961
60:	

@7313$isLeapYear$11:	; FunctionEnd isLeapYear
1:	

time:	; AssignRegister ah 42
2:		mov a1962, 42
4:	

time$1:	; Interrupt 33
5:		int 33
7:	

time$2:	; InspectRegister £temporary3241 cx
9:	

time$3:	; BinarySubtract year £temporary3241 1900
10:		sub t1963, 1900
11:		mov [bp + 12], t1963
13:	

time$4:	; InspectRegister £temporary3243 dh
15:	

time$5:	; BinarySubtract month £temporary3243 1
16:		sub t1964, 1
17:		mov [bp + 14], t1964
19:	

time$6:	; InspectRegister £temporary3245 dl
21:	

time$7:	; Assign monthDay £temporary3245
22:		mov [bp + 15], t1965
24:	

time$8:	; AssignRegister ah 44
25:		mov a1966, 44
27:	

time$9:	; Interrupt 33
28:		int 33
30:	

time$10:	; InspectRegister £temporary3247 ch
32:	

time$11:	; Assign hour £temporary3247
33:		mov [bp + 16], t1967
35:	

time$12:	; InspectRegister £temporary3248 cl
37:	

time$13:	; Assign min £temporary3248
38:		mov [bp + 17], t1968
40:	

time$14:	; InspectRegister £temporary3249 dh
42:	

time$15:	; Assign sec £temporary3249
43:		mov [bp + 18], t1969
45:	

time$16:	; CallHeader 19 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
47:	

time$17:	; Call 19 localeconv 0
48:		mov word [bp + 19], time$18
49:		mov [bp + 21], bp
50:		add bp, 19
51:		jmp localeconv
53:	

time$18:	; PostCall 19
55:	

time$19:	; GetReturnValue £temporary3250
60:	

time$20:	; Assign localeConvPtr £temporary3250
61:		mov [bp + 19], t1971
63:	

time$21:	; Equal 25 localeConvPtr 0
64:		cmp word [bp + 19], 0
65:		je time$25
67:	

time$22:	; Deref £temporary3252 -> localeConvPtr localeConvPtr 2
68:		mov a1972, [bp + 19]
70:	

time$23:	; IntegralToIntegral £temporary3253 £temporary3252 -> localeConvPtr
71:		mov t1973, [a1972 + 2]
74:		cmp t1973, 0
75:		jge time$24
76:		neg t1973
78:		neg t1973
80:	

time$24:	; BinarySubtract hour hour £temporary3253
81:		sub [bp + 16], t1973
83:	

time$25:	; Assign daysOfMonths[0] 31
84:		mov word [bp + 19], 31
86:	

time$26:	; CallHeader 21 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
88:	

time$27:	; Parameter 21 year 6
89:		mov a1974, [bp + 12]
90:		mov [bp + 27], a1974
92:	

time$28:	; Call 21 isLeapYear 0
93:		mov word [bp + 21], time$29
94:		mov [bp + 23], bp
95:		add bp, 21
96:		jmp @7313$isLeapYear
98:	

time$29:	; PostCall 21
100:	

time$30:	; GetReturnValue £temporary3255
105:	

time$31:	; Equal 34 £temporary3255 0
106:		cmp t1976, 0
107:		je time$34
109:	

time$32:	; Assign £temporary3260 29
110:		mov t1977, 29
112:	

time$33:	; Goto 35
113:		jmp time$35
115:	

time$34:	; Assign £temporary3260 28
116:		mov t1978, 28
118:	

time$35:	; Assign daysOfMonths[1] £temporary3260
119:		mov [bp + 21], t1978
121:	

time$36:	; Assign daysOfMonths[2] 31
122:		mov word [bp + 23], 31
124:	

time$37:	; Assign daysOfMonths[3] 30
125:		mov word [bp + 25], 30
127:	

time$38:	; Assign daysOfMonths[4] 31
128:		mov word [bp + 27], 31
130:	

time$39:	; Assign daysOfMonths[5] 30
131:		mov word [bp + 29], 30
133:	

time$40:	; Assign daysOfMonths[6] 31
134:		mov word [bp + 31], 31
136:	

time$41:	; Assign daysOfMonths[7] 31
137:		mov word [bp + 33], 31
139:	

time$42:	; Assign daysOfMonths[8] 30
140:		mov word [bp + 35], 30
142:	

time$43:	; Assign daysOfMonths[9] 31
143:		mov word [bp + 37], 31
145:	

time$44:	; Assign daysOfMonths[10] 30
146:		mov word [bp + 39], 30
148:	

time$45:	; Assign daysOfMonths[11] 31
149:		mov word [bp + 41], 31
151:	

time$46:	; IntegralToIntegral £temporary3273 monthDay
152:		mov a1979, [bp + 15]
154:		and a1979, 255
156:		cmp a1979, 0
157:		jge time$47
158:		neg a1979
160:		neg a1979
162:	

time$47:	; BinarySubtract yearDay £temporary3273 1
163:		sub a1979, 1
164:		mov [bp + 43], a1979
166:	

time$48:	; Assign monthIndex 0
167:		mov word [bp + 45], 0
169:	

time$49:	; IntegralToIntegral £temporary3275 month
170:		mov a1980, [bp + 14]
172:		and a1980, 255
174:		cmp a1980, 0
175:		jge time$50
176:		neg a1980
178:		neg a1980
180:	

time$50:	; SignedGreaterThanEqual 57 monthIndex £temporary3275
181:		cmp [bp + 45], a1980
182:		jge time$57
184:	

time$51:	; UnsignedMultiply £temporary3279 monthIndex 2
185:		mov a1981, [bp + 45]
187:		xor dx, dx
188:		mul word [@7435$int2$2#]
194:	

time$52:	; BinaryAdd £temporary3280 daysOfMonths £temporary3279
195:		mov a1985, bp
196:		add a1985, 19
197:		add a1985, t1984
199:	

time$53:	; Deref £temporary3278 -> £temporary3280 £temporary3280 0
201:	

time$54:	; BinaryAdd yearDay yearDay £temporary3278 -> £temporary3280
202:		mov t1986, [a1985]
203:		add [bp + 43], t1986
205:	

time$55:	; Increment monthIndex
206:		inc word [bp + 45]
208:	

time$56:	; Goto 49
209:		jmp time$49
211:	

time$57:	; IntegralToIntegral £temporary3283 sec
212:		mov a1987, [bp + 18]
214:		and a1987, 255
216:		cmp a1987, 0
217:		jge time$58
218:		neg a1987
220:		neg a1987
222:	

time$58:	; Assign s$tm_sec £temporary3283
223:		mov [bp + 47], a1987
225:	

time$59:	; IntegralToIntegral £temporary3285 min
226:		mov a1988, [bp + 17]
228:		and a1988, 255
230:		cmp a1988, 0
231:		jge time$60
232:		neg a1988
234:		neg a1988
236:	

time$60:	; Assign s$tm_min £temporary3285
237:		mov [bp + 49], a1988
239:	

time$61:	; IntegralToIntegral £temporary3287 hour
240:		mov a1989, [bp + 16]
242:		and a1989, 255
244:		cmp a1989, 0
245:		jge time$62
246:		neg a1989
248:		neg a1989
250:	

time$62:	; Assign s$tm_hour £temporary3287
251:		mov [bp + 51], a1989
253:	

time$63:	; IntegralToIntegral £temporary3289 monthDay
254:		mov a1990, [bp + 15]
256:		and a1990, 255
258:		cmp a1990, 0
259:		jge time$64
260:		neg a1990
262:		neg a1990
264:	

time$64:	; Assign s$tm_mday £temporary3289
265:		mov [bp + 53], a1990
267:	

time$65:	; IntegralToIntegral £temporary3291 month
268:		mov a1991, [bp + 14]
270:		and a1991, 255
272:		cmp a1991, 0
273:		jge time$66
274:		neg a1991
276:		neg a1991
278:	

time$66:	; Assign s$tm_mon £temporary3291
279:		mov [bp + 55], a1991
281:	

time$67:	; Assign s$tm_year year
282:		mov a1992, [bp + 12]
283:		mov [bp + 57], a1992
285:	

time$68:	; Assign s$tm_wday 0
286:		mov word [bp + 59], 0
288:	

time$69:	; Assign s$tm_yday yearDay
289:		mov a1993, [bp + 43]
290:		mov [bp + 61], a1993
292:	

time$70:	; Assign s$tm_isdst 0
293:		mov word [bp + 63], 0
295:	

time$71:	; CallHeader 65 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
297:	

time$72:	; address £temporary3296 s
298:		mov t1994, bp
299:		add t1994, 47
301:	

time$73:	; Parameter 65 £temporary3296 6
302:		mov [bp + 71], t1994
304:	

time$74:	; Call 65 mktime 0
305:		mov word [bp + 65], time$75
306:		mov [bp + 67], bp
307:		add bp, 65
308:		jmp mktime
310:	

time$75:	; PostCall 65
312:	

time$76:	; GetReturnValue £temporary3297
317:	

time$77:	; Assign time £temporary3297
318:		mov [bp + 8], t1996
320:	

time$78:	; Equal 81 timePtr 0
321:		cmp word [bp + 6], 0
322:		je time$81
324:	

time$79:	; Deref £temporary3299 -> timePtr timePtr 0
325:		mov a1997, [bp + 6]
327:	

time$80:	; Assign £temporary3299 -> timePtr time
328:		mov a1998, [bp + 8]
329:		mov [a1997], a1998
331:	

time$81:	; SetReturnValue time
332:		mov a1999, [bp + 8]
334:	

time$82:	; Return time
335:		mov t2000, [bp]
336:		mov di, [bp + 4]
337:		mov bp, [bp + 2]
338:		jmp t2000
340:	

time$83:	; FunctionEnd time
1:	

mktime:	; Equal 28 tp 0
2:		cmp word [bp + 6], 0
3:		je mktime$28
5:	

mktime$1:	; Deref £temporary3304 -> tp tp 10
6:		mov a2001, [bp + 6]
8:	

mktime$2:	; BinarySubtract £temporary3305 £temporary3304 -> tp 69
9:		mov t2002, [a2001 + 10]
10:		sub t2002, 69
12:	

mktime$3:	; SignedDivide £temporary3306 £temporary3305 4
14:		xor dx, dx
15:		idiv word [@7478$int2$4#]
21:	

mktime$4:	; IntegralToIntegral £temporary3307 £temporary3306
23:		and t2005, 65535
25:		cmp t2005, 0
26:		jge mktime$5
27:		neg t2005
29:		neg t2005
31:	

mktime$5:	; Assign leapDays £temporary3307
32:		mov [bp + 8], t2005
34:	

mktime$6:	; Deref £temporary3308 -> tp tp 10
35:		mov a2006, [bp + 6]
37:	

mktime$7:	; BinarySubtract £temporary3309 £temporary3308 -> tp 70
38:		mov t2007, [a2006 + 10]
39:		sub t2007, 70
41:	

mktime$8:	; SignedMultiply £temporary3310 £temporary3309 365
43:		xor dx, dx
44:		imul word [@7487$int2$365#]
50:	

mktime$9:	; IntegralToIntegral £temporary3311 £temporary3310
52:		and t2010, 65535
54:		cmp t2010, 0
55:		jge mktime$10
56:		neg t2010
58:		neg t2010
60:	

mktime$10:	; BinaryAdd £temporary3312 £temporary3311 leapDays
61:		add t2010, [bp + 8]
63:	

mktime$11:	; Deref £temporary3313 -> tp tp 14
64:		mov a2011, [bp + 6]
66:	

mktime$12:	; IntegralToIntegral £temporary3314 £temporary3313 -> tp
67:		mov t2012, [a2011 + 14]
69:		and t2012, 65535
71:		cmp t2012, 0
72:		jge mktime$13
73:		neg t2012
75:		neg t2012
77:	

mktime$13:	; BinaryAdd totalDays £temporary3312 £temporary3314
78:		add t2010, t2012
79:		mov [bp + 12], t2010
81:	

mktime$14:	; SignedMultiply £temporary3316 totalDays 86400
82:		mov a2013, [bp + 12]
84:		xor edx, edx
85:		imul dword [@7496$int4$86400#]
91:		mov t2019, t2016
93:	

mktime$15:	; Deref £temporary3317 -> tp tp 4
94:		mov a2017, [bp + 6]
96:	

mktime$16:	; IntegralToIntegral £temporary3318 £temporary3317 -> tp
97:		mov t2018, [a2017 + 4]
99:		and t2018, 65535
101:		cmp t2018, 0
102:		jge mktime$17
103:		neg t2018
105:		neg t2018
107:	

mktime$17:	; SignedMultiply £temporary3319 £temporary3318 3600
109:		xor edx, edx
110:		imul dword [@7500$int4$3600#]
116:	

mktime$18:	; BinaryAdd £temporary3320 £temporary3316 £temporary3319
117:		add t2019, t2022
119:	

mktime$19:	; Deref £temporary3321 -> tp tp 2
120:		mov a2023, [bp + 6]
122:	

mktime$20:	; IntegralToIntegral £temporary3322 £temporary3321 -> tp
123:		mov t2024, [a2023 + 2]
125:		and t2024, 65535
127:		cmp t2024, 0
128:		jge mktime$21
129:		neg t2024
131:		neg t2024
133:	

mktime$21:	; SignedMultiply £temporary3323 £temporary3322 60
135:		xor edx, edx
136:		imul dword [@7506$int4$60#]
142:	

mktime$22:	; BinaryAdd £temporary3324 £temporary3320 £temporary3323
143:		add t2019, t2027
145:	

mktime$23:	; Deref £temporary3325 -> tp tp 0
146:		mov a2028, [bp + 6]
148:	

mktime$24:	; IntegralToIntegral £temporary3326 £temporary3325 -> tp
149:		mov t2029, [a2028]
151:		and t2029, 65535
153:		cmp t2029, 0
154:		jge mktime$25
155:		neg t2029
157:		neg t2029
159:	

mktime$25:	; BinaryAdd £temporary3327 £temporary3324 £temporary3326
160:		add t2019, t2029
162:	

mktime$26:	; SetReturnValue £temporary3327
164:	

mktime$27:	; Return £temporary3327
165:		mov t2030, [bp]
166:		mov di, [bp + 4]
167:		mov bp, [bp + 2]
168:		jmp t2030
170:	

mktime$28:	; SetReturnValue 0
171:		mov a2031, 0
173:	

mktime$29:	; Return 0
174:		mov t2032, [bp]
175:		mov di, [bp + 4]
176:		mov bp, [bp + 2]
177:		jmp t2032
179:	

mktime$30:	; FunctionEnd mktime
1:	

gmtime:	; Equal 89 timePtr 0
2:		cmp word [bp + 6], 0
3:		je gmtime$89
5:	

gmtime$1:	; Deref £temporary3329 -> timePtr timePtr 0
6:		mov a2033, [bp + 6]
8:	

gmtime$2:	; Assign time £temporary3329 -> timePtr
9:		mov t2034, [a2033]
10:		mov [bp + 8], t2034
12:	

gmtime$3:	; SignedModulo secondsOfDay time 86400
13:		mov a2035, [bp + 8]
15:		xor edx, edx
16:		idiv dword [@7524$int4$86400#]
17:		mov [bp + 12], edx
19:	

gmtime$4:	; SignedModulo secondsOfHour secondsOfDay 3600
20:		mov a2037, [bp + 12]
22:		xor edx, edx
23:		idiv dword [@7528$int4$3600#]
24:		mov [bp + 16], edx
26:	

gmtime$5:	; SignedDivide £temporary3333 secondsOfDay 3600
27:		mov a2039, [bp + 12]
29:		xor edx, edx
30:		idiv dword [@7533$int4$3600#]
36:	

gmtime$6:	; IntegralToIntegral £temporary3334 £temporary3333
39:		cmp t2042, 0
40:		jge gmtime$7
41:		neg t2042
43:		neg t2042
45:	

gmtime$7:	; Assign g_timeStruct$tm_hour £temporary3334
46:		mov [@7516$g_timeStruct + 4], t2042
48:	

gmtime$8:	; SignedDivide £temporary3336 secondsOfHour 60
49:		mov a2043, [bp + 16]
51:		xor edx, edx
52:		idiv dword [@7538$int4$60#]
58:	

gmtime$9:	; IntegralToIntegral £temporary3337 £temporary3336
61:		cmp t2046, 0
62:		jge gmtime$10
63:		neg t2046
65:		neg t2046
67:	

gmtime$10:	; Assign g_timeStruct$tm_min £temporary3337
68:		mov [@7516$g_timeStruct + 2], t2046
70:	

gmtime$11:	; SignedModulo £temporary3339 secondsOfHour 60
71:		mov a2047, [bp + 16]
73:		xor edx, edx
74:		idiv dword [@7543$int4$60#]
80:	

gmtime$12:	; IntegralToIntegral £temporary3340 £temporary3339
83:		cmp t2049, 0
84:		jge gmtime$13
85:		neg t2049
87:		neg t2049
89:	

gmtime$13:	; Assign g_timeStruct$tm_sec £temporary3340
90:		mov [@7516$g_timeStruct], t2049
92:	

gmtime$14:	; SignedDivide totalDays time 86400
93:		mov a2050, [bp + 8]
95:		xor edx, edx
96:		idiv dword [@7547$int4$86400#]
97:		mov [bp + 20], eax
99:	

gmtime$15:	; SignedGreaterThanEqual 20 totalDays 3
100:		cmp dword [bp + 20], 3
101:		jge gmtime$20
103:	

gmtime$16:	; BinaryAdd £temporary3344 totalDays 4
104:		mov a2053, [bp + 20]
105:		add a2053, 4
107:	

gmtime$17:	; IntegralToIntegral £temporary3345 £temporary3344
110:		cmp a2053, 0
111:		jge gmtime$18
112:		neg a2053
114:		neg a2053
116:	

gmtime$18:	; Assign g_timeStruct$tm_wday £temporary3345
117:		mov [@7516$g_timeStruct + 12], a2053
119:	

gmtime$19:	; Goto 24
120:		jmp gmtime$24
122:	

gmtime$20:	; BinarySubtract £temporary3347 totalDays 3
123:		mov a2054, [bp + 20]
124:		sub a2054, 3
126:	

gmtime$21:	; SignedModulo £temporary3348 £temporary3347 7
128:		xor edx, edx
129:		idiv dword [@7563$int4$7#]
135:	

gmtime$22:	; IntegralToIntegral £temporary3349 £temporary3348
138:		cmp t2056, 0
139:		jge gmtime$23
140:		neg t2056
142:		neg t2056
144:	

gmtime$23:	; Assign g_timeStruct$tm_wday £temporary3349
145:		mov [@7516$g_timeStruct + 12], t2056
147:	

gmtime$24:	; SignedDivide £temporary3350 totalDays 365
148:		mov a2057, [bp + 20]
150:		xor edx, edx
151:		idiv dword [@7568$int4$365#]
157:	

gmtime$25:	; BinaryAdd £temporary3351 £temporary3350 1970
158:		add t2060, 1970
160:	

gmtime$26:	; IntegralToIntegral £temporary3352 £temporary3351
163:		cmp t2060, 0
164:		jge gmtime$27
165:		neg t2060
167:		neg t2060
169:	

gmtime$27:	; Assign year £temporary3352
170:		mov [bp + 24], t2060
172:	

gmtime$28:	; BinarySubtract £temporary3353 year 1969
173:		mov a2061, [bp + 24]
174:		sub a2061, 1969
176:	

gmtime$29:	; SignedDivide leapDays £temporary3353 4
178:		xor dx, dx
179:		idiv word [@7578$int2$4#]
180:		mov [bp + 26], ax
182:	

gmtime$30:	; SignedModulo totalDays totalDays 365
183:		mov a2064, [bp + 20]
185:		xor edx, edx
186:		idiv dword [@7582$int4$365#]
187:		mov [bp + 20], edx
189:	

gmtime$31:	; IntegralToIntegral £temporary3356 leapDays
190:		mov a2066, [bp + 26]
192:		and a2066, 65535
194:		cmp a2066, 0
195:		jge gmtime$32
196:		neg a2066
198:		neg a2066
200:	

gmtime$32:	; BinarySubtract totalDays totalDays £temporary3356
201:		sub [bp + 20], a2066
203:	

gmtime$33:	; SignedGreaterThanEqual 44 totalDays 0
204:		cmp dword [bp + 20], 0
205:		jge gmtime$44
207:	

gmtime$34:	; Decrement year
208:		dec word [bp + 24]
210:	

gmtime$35:	; CallHeader 28 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
212:	

gmtime$36:	; Parameter 28 year 6
213:		mov a2067, [bp + 24]
214:		mov [bp + 34], a2067
216:	

gmtime$37:	; Call 28 isLeapYear 0
217:		mov word [bp + 28], gmtime$38
218:		mov [bp + 30], bp
219:		add bp, 28
220:		jmp @7313$isLeapYear
222:	

gmtime$38:	; PostCall 28
224:	

gmtime$39:	; GetReturnValue £temporary3360
229:	

gmtime$40:	; Equal 43 £temporary3360 0
230:		cmp t2069, 0
231:		je gmtime$43
233:	

gmtime$41:	; BinaryAdd totalDays totalDays 366
234:		add dword [bp + 20], 366
236:	

gmtime$42:	; Goto 44
237:		jmp gmtime$44
239:	

gmtime$43:	; BinaryAdd totalDays totalDays 365
240:		add dword [bp + 20], 365
242:	

gmtime$44:	; BinarySubtract g_timeStruct$tm_year year 1900
243:		mov a2070, [bp + 24]
244:		sub a2070, 1900
245:		mov [@7516$g_timeStruct + 10], a2070
247:	

gmtime$45:	; IntegralToIntegral £temporary3367 totalDays
248:		mov a2071, [bp + 20]
251:		cmp a2071, 0
252:		jge gmtime$46
253:		neg a2071
255:		neg a2071
257:	

gmtime$46:	; Assign g_timeStruct$tm_yday £temporary3367
258:		mov [@7516$g_timeStruct + 14], a2071
260:	

gmtime$47:	; Assign daysOfMonths[0] 31
261:		mov word [bp + 28], 31
263:	

gmtime$48:	; CallHeader 30 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
265:	

gmtime$49:	; Parameter 30 year 6
266:		mov a2072, [bp + 24]
267:		mov [bp + 36], a2072
269:	

gmtime$50:	; Call 30 isLeapYear 0
270:		mov word [bp + 30], gmtime$51
271:		mov [bp + 32], bp
272:		add bp, 30
273:		jmp @7313$isLeapYear
275:	

gmtime$51:	; PostCall 30
277:	

gmtime$52:	; GetReturnValue £temporary3368
282:	

gmtime$53:	; Equal 56 £temporary3368 0
283:		cmp t2074, 0
284:		je gmtime$56
286:	

gmtime$54:	; Assign £temporary3373 29
287:		mov t2075, 29
289:	

gmtime$55:	; Goto 57
290:		jmp gmtime$57
292:	

gmtime$56:	; Assign £temporary3373 28
293:		mov t2076, 28
295:	

gmtime$57:	; Assign daysOfMonths[1] £temporary3373
296:		mov [bp + 30], t2076
298:	

gmtime$58:	; Assign daysOfMonths[2] 31
299:		mov word [bp + 32], 31
301:	

gmtime$59:	; Assign daysOfMonths[3] 30
302:		mov word [bp + 34], 30
304:	

gmtime$60:	; Assign daysOfMonths[4] 31
305:		mov word [bp + 36], 31
307:	

gmtime$61:	; Assign daysOfMonths[5] 30
308:		mov word [bp + 38], 30
310:	

gmtime$62:	; Assign daysOfMonths[6] 31
311:		mov word [bp + 40], 31
313:	

gmtime$63:	; Assign daysOfMonths[7] 31
314:		mov word [bp + 42], 31
316:	

gmtime$64:	; Assign daysOfMonths[8] 30
317:		mov word [bp + 44], 30
319:	

gmtime$65:	; Assign daysOfMonths[9] 31
320:		mov word [bp + 46], 31
322:	

gmtime$66:	; Assign daysOfMonths[10] 30
323:		mov word [bp + 48], 30
325:	

gmtime$67:	; Assign daysOfMonths[11] 31
326:		mov word [bp + 50], 31
328:	

gmtime$68:	; Assign month 0
329:		mov word [bp + 52], 0
331:	

gmtime$69:	; UnsignedMultiply £temporary3387 month 2
332:		mov a2077, [bp + 52]
334:		xor dx, dx
335:		mul word [@7658$int2$2#]
341:	

gmtime$70:	; BinaryAdd £temporary3388 daysOfMonths £temporary3387
342:		mov a2081, bp
343:		add a2081, 28
344:		add a2081, t2080
346:	

gmtime$71:	; Deref £temporary3386 -> £temporary3388 £temporary3388 0
348:	

gmtime$72:	; IntegralToIntegral £temporary3389 £temporary3386 -> £temporary3388
349:		mov t2082, [a2081]
351:		and t2082, 65535
353:		cmp t2082, 0
354:		jge gmtime$73
355:		neg t2082
357:		neg t2082
359:	

gmtime$73:	; SignedLessThan 82 totalDays £temporary3389
360:		cmp [bp + 20], t2082
361:		jl gmtime$82
363:	

gmtime$74:	; Assign £temporary3391 month
364:		mov t2083, [bp + 52]
366:	

gmtime$75:	; Increment month
367:		inc word [bp + 52]
369:	

gmtime$76:	; UnsignedMultiply £temporary3393 £temporary3391 2
371:		xor dx, dx
372:		mul word [@7666$int2$2#]
378:	

gmtime$77:	; BinaryAdd £temporary3394 daysOfMonths £temporary3393
379:		mov a2087, bp
380:		add a2087, 28
381:		add a2087, t2086
383:	

gmtime$78:	; Deref £temporary3392 -> £temporary3394 £temporary3394 0
385:	

gmtime$79:	; IntegralToIntegral £temporary3395 £temporary3392 -> £temporary3394
386:		mov t2088, [a2087]
388:		and t2088, 65535
390:		cmp t2088, 0
391:		jge gmtime$80
392:		neg t2088
394:		neg t2088
396:	

gmtime$80:	; BinarySubtract totalDays totalDays £temporary3395
397:		sub [bp + 20], t2088
399:	

gmtime$81:	; Goto 69
400:		jmp gmtime$69
402:	

gmtime$82:	; Assign g_timeStruct$tm_mon month
403:		mov a2089, [bp + 52]
404:		mov [@7516$g_timeStruct + 8], a2089
406:	

gmtime$83:	; BinaryAdd £temporary3399 totalDays 1
407:		mov a2090, [bp + 20]
408:		add a2090, 1
410:	

gmtime$84:	; IntegralToIntegral £temporary3400 £temporary3399
413:		cmp a2090, 0
414:		jge gmtime$85
415:		neg a2090
417:		neg a2090
419:	

gmtime$85:	; Assign g_timeStruct$tm_mday £temporary3400
420:		mov [@7516$g_timeStruct + 6], a2090
422:	

gmtime$86:	; Assign g_timeStruct$tm_isdst -1
423:		mov word [@7516$g_timeStruct + 16], -1
425:	

gmtime$87:	; SetReturnValue (@7516$g_timeStruct,0)
426:		mov a2091, @7516$g_timeStruct
428:	

gmtime$88:	; Return (@7516$g_timeStruct,0)
429:		mov t2092, [bp]
430:		mov di, [bp + 4]
431:		mov bp, [bp + 2]
432:		jmp t2092
434:	

gmtime$89:	; SetReturnValue 0
435:		mov a2093, 0
437:	

gmtime$90:	; Return 0
438:		mov t2094, [bp]
439:		mov di, [bp + 4]
440:		mov bp, [bp + 2]
441:		jmp t2094
443:	

gmtime$91:	; FunctionEnd gmtime
1:	

localtime:	; CallHeader 8 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
3:	

localtime$1:	; Parameter 8 timePtr 6
4:		mov a2095, [bp + 6]
5:		mov [bp + 14], a2095
7:	

localtime$2:	; Call 8 gmtime 0
8:		mov word [bp + 8], localtime$3
9:		mov [bp + 10], bp
10:		add bp, 8
11:		jmp gmtime
13:	

localtime$3:	; PostCall 8
15:	

localtime$4:	; GetReturnValue £temporary3404
20:	

localtime$5:	; Assign tmPtr £temporary3404
21:		mov [bp + 8], t2097
23:	

localtime$6:	; Deref £temporary3405 -> timePtr timePtr 0
24:		mov a2098, [bp + 6]
26:	

localtime$7:	; Assign t £temporary3405 -> timePtr
27:		mov t2099, [a2098]
28:		mov [bp + 10], t2099
30:	

localtime$8:	; CallHeader 14 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
32:	

localtime$9:	; Call 14 localeconv 0
33:		mov word [bp + 14], localtime$10
34:		mov [bp + 16], bp
35:		add bp, 14
36:		jmp localeconv
38:	

localtime$10:	; PostCall 14
40:	

localtime$11:	; GetReturnValue £temporary3406
45:	

localtime$12:	; Assign localeConvPtr £temporary3406
46:		mov [bp + 14], t2101
48:	

localtime$13:	; Equal 25 localeConvPtr 0
49:		cmp word [bp + 14], 0
50:		je localtime$25
52:	

localtime$14:	; Deref £temporary3408 -> tmPtr tmPtr 16
53:		mov a2102, [bp + 8]
55:	

localtime$15:	; NotEqual 19 £temporary3408 -> tmPtr 1
56:		cmp word [a2102 + 16], 1
57:		jne localtime$19
59:	

localtime$16:	; Deref £temporary3410 -> localeConvPtr localeConvPtr 0
60:		mov a2103, [bp + 14]
62:	

localtime$17:	; Assign £temporary3415 £temporary3410 -> localeConvPtr
63:		mov t2104, [a2103]
65:	

localtime$18:	; Goto 21
66:		jmp localtime$21
68:	

localtime$19:	; Deref £temporary3411 -> localeConvPtr localeConvPtr 2
69:		mov a2105, [bp + 14]
71:	

localtime$20:	; Assign £temporary3415 £temporary3411 -> localeConvPtr
72:		mov t2106, [a2105 + 2]
74:	

localtime$21:	; Assign timeZone £temporary3415
75:		mov [bp + 16], t2106
77:	

localtime$22:	; IntegralToIntegral £temporary3416 timeZone
78:		mov a2107, [bp + 16]
80:		and a2107, 65535
82:		cmp a2107, 0
83:		jge localtime$23
84:		neg a2107
86:		neg a2107
88:	

localtime$23:	; SignedMultiply £temporary3417 £temporary3416 3600
90:		xor edx, edx
91:		imul dword [@7711$int4$3600#]
97:	

localtime$24:	; BinaryAdd t t £temporary3417
98:		add [bp + 10], t2110
100:	

localtime$25:	; CallHeader 16 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
102:	

localtime$26:	; address £temporary3419 t
103:		mov t2111, bp
104:		add t2111, 10
106:	

localtime$27:	; Parameter 16 £temporary3419 6
107:		mov [bp + 22], t2111
109:	

localtime$28:	; Call 16 gmtime 0
110:		mov word [bp + 16], localtime$29
111:		mov [bp + 18], bp
112:		add bp, 16
113:		jmp gmtime
115:	

localtime$29:	; PostCall 16
117:	

localtime$30:	; GetReturnValue £temporary3420
122:	

localtime$31:	; SetReturnValue £temporary3420
124:	

localtime$32:	; Return £temporary3420
125:		mov t2114, [bp]
126:		mov di, [bp + 4]
127:		mov bp, [bp + 2]
128:		jmp t2114
130:	

localtime$33:	; FunctionEnd localtime
1:	

difftime:	; BinarySubtract £temporary3424 time2 time1
2:		mov a2115, [bp + 10]
3:		sub a2115, [bp + 6]
5:	

difftime$1:	; IntegralToFloating £temporary3425 £temporary3424
6:		mov [container4bytes#], a2115
7:		fild dword [container4bytes#]
9:	

difftime$2:	; SetReturnValue £temporary3425
11:	

difftime$3:	; Return £temporary3425
12:		mov t2116, [bp]
13:		mov di, [bp + 4]
14:		mov bp, [bp + 2]
15:		jmp t2116
17:	

difftime$4:	; FunctionEnd difftime
1:	

asctime:	; Assign localeConvPtr 0
2:		mov word [bp + 8], 0
4:	

asctime$1:	; Equal 7 localeConvPtr 0
5:		cmp word [bp + 8], 0
6:		je asctime$7
8:	

asctime$2:	; Deref £temporary3427 -> localeConvPtr localeConvPtr 4
9:		mov a2117, [bp + 8]
11:	

asctime$3:	; Equal 7 £temporary3427 -> localeConvPtr 0
12:		cmp word [a2117 + 4], 0
13:		je asctime$7
15:	

asctime$4:	; Deref £temporary3430 -> localeConvPtr localeConvPtr 4
16:		mov a2118, [bp + 8]
18:	

asctime$5:	; Assign shortDayList £temporary3430 -> localeConvPtr
19:		mov t2119, [a2118 + 4]
20:		mov [bp + 10], t2119
22:	

asctime$6:	; Goto 8
23:		jmp asctime$8
25:	

asctime$7:	; Assign shortDayList g_shortDayList
26:		mov word [bp + 10], @7734$g_shortDayList
28:	

asctime$8:	; Equal 14 localeConvPtr 0
29:		cmp word [bp + 8], 0
30:		je asctime$14
32:	

asctime$9:	; Deref £temporary3432 -> localeConvPtr localeConvPtr 8
33:		mov a2120, [bp + 8]
35:	

asctime$10:	; Equal 14 £temporary3432 -> localeConvPtr 0
36:		cmp word [a2120 + 8], 0
37:		je asctime$14
39:	

asctime$11:	; Deref £temporary3435 -> localeConvPtr localeConvPtr 8
40:		mov a2121, [bp + 8]
42:	

asctime$12:	; Assign shortMonthList £temporary3435 -> localeConvPtr
43:		mov t2122, [a2121 + 8]
44:		mov [bp + 12], t2122
46:	

asctime$13:	; Goto 15
47:		jmp asctime$15
49:	

asctime$14:	; Assign shortMonthList g_shortMonthList
50:		mov word [bp + 12], @7755$g_shortMonthList
52:	

asctime$15:	; CallHeader 14 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
54:	

asctime$16:	; Parameter 14 g_timeString 6
55:		mov word [bp + 20], @7726$g_timeString
57:	

asctime$17:	; Parameter 14 string_25s2025s2025i202502i3A2502i3A2502i2025i# 8
58:		mov word [bp + 22], @7797$string_25s2025s2025i202502i3A2502i3A2502i2025i#
60:	

asctime$18:	; Deref £temporary3436 -> tp tp 12
61:		mov a2123, [bp + 6]
63:	

asctime$19:	; UnsignedMultiply £temporary3438 £temporary3436 -> tp 2
64:		mov t2124, [a2123 + 12]
66:		xor dx, dx
67:		mul word [@7800$int2$2#]
73:	

asctime$20:	; BinaryAdd £temporary3439 shortDayList £temporary3438
74:		mov a2128, [bp + 10]
75:		add a2128, t2127
77:	

asctime$21:	; Deref £temporary3437 -> £temporary3439 £temporary3439 0
79:	

asctime$22:	; Parameter 14 £temporary3437 -> £temporary3439 10
80:		mov t2129, [a2128]
81:		mov [bp + 24], t2129
83:	

asctime$23:	; Deref £temporary3440 -> tp tp 8
84:		mov a2130, [bp + 6]
86:	

asctime$24:	; UnsignedMultiply £temporary3442 £temporary3440 -> tp 2
87:		mov t2131, [a2130 + 8]
89:		xor dx, dx
90:		mul word [@7805$int2$2#]
96:	

asctime$25:	; BinaryAdd £temporary3443 shortMonthList £temporary3442
97:		mov a2135, [bp + 12]
98:		add a2135, t2134
100:	

asctime$26:	; Deref £temporary3441 -> £temporary3443 £temporary3443 0
102:	

asctime$27:	; Parameter 14 £temporary3441 -> £temporary3443 12
103:		mov t2136, [a2135]
104:		mov [bp + 26], t2136
106:	

asctime$28:	; Deref £temporary3444 -> tp tp 6
107:		mov a2137, [bp + 6]
109:	

asctime$29:	; Parameter 14 £temporary3444 -> tp 14
110:		mov t2138, [a2137 + 6]
111:		mov [bp + 28], t2138
113:	

asctime$30:	; Deref £temporary3445 -> tp tp 4
114:		mov a2139, [bp + 6]
116:	

asctime$31:	; Parameter 14 £temporary3445 -> tp 16
117:		mov t2140, [a2139 + 4]
118:		mov [bp + 30], t2140
120:	

asctime$32:	; Deref £temporary3446 -> tp tp 2
121:		mov a2141, [bp + 6]
123:	

asctime$33:	; Parameter 14 £temporary3446 -> tp 18
124:		mov t2142, [a2141 + 2]
125:		mov [bp + 32], t2142
127:	

asctime$34:	; Deref £temporary3447 -> tp tp 0
128:		mov a2143, [bp + 6]
130:	

asctime$35:	; Parameter 14 £temporary3447 -> tp 20
131:		mov t2144, [a2143]
132:		mov [bp + 34], t2144
134:	

asctime$36:	; Deref £temporary3448 -> tp tp 10
135:		mov a2145, [bp + 6]
137:	

asctime$37:	; BinaryAdd £temporary3449 £temporary3448 -> tp 1900
138:		mov t2146, [a2145 + 10]
139:		add t2146, 1900
141:	

asctime$38:	; Parameter 14 £temporary3449 22
142:		mov [bp + 36], t2146
144:	

asctime$39:	; Call 14 sprintf 0
145:		mov word [bp + 14], asctime$40
146:		mov [bp + 16], bp
147:		add bp, 14
148:		mov di, bp
149:		add di, 14
150:		jmp sprintf
152:	

asctime$40:	; PostCall 14
154:	

asctime$41:	; SetReturnValue g_timeString
155:		mov a2147, @7726$g_timeString
157:	

asctime$42:	; Return g_timeString
158:		mov t2148, [bp]
159:		mov di, [bp + 4]
160:		mov bp, [bp + 2]
161:		jmp t2148
163:	

asctime$43:	; FunctionEnd asctime
1:	

ctime:	; CallHeader 8 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
3:	

ctime$1:	; CallHeader 8 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
5:	

ctime$2:	; Parameter 8 time 6
6:		mov a2149, [bp + 6]
7:		mov [bp + 14], a2149
9:	

ctime$3:	; Call 8 localtime 0
10:		mov word [bp + 8], ctime$4
11:		mov [bp + 10], bp
12:		add bp, 8
13:		jmp localtime
15:	

ctime$4:	; PostCall 8
17:	

ctime$5:	; GetReturnValue £temporary3460
22:	

ctime$6:	; Parameter 8 £temporary3460 6
23:		mov [bp + 14], t2151
25:	

ctime$7:	; Call 8 asctime 0
26:		mov word [bp + 8], ctime$8
27:		mov [bp + 10], bp
28:		add bp, 8
29:		jmp asctime
31:	

ctime$8:	; PostCall 8
33:	

ctime$9:	; GetReturnValue £temporary3461
38:	

ctime$10:	; SetReturnValue £temporary3461
40:	

ctime$11:	; Return £temporary3461
41:		mov t2154, [bp]
42:		mov di, [bp + 4]
43:		mov bp, [bp + 2]
44:		jmp t2154
46:	

ctime$12:	; FunctionEnd ctime
1:	

strftime:	; CallHeader 14 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
3:	

strftime$1:	; Call 14 localeconv 0
4:		mov word [bp + 14], strftime$2
5:		mov [bp + 16], bp
6:		add bp, 14
7:		jmp localeconv
9:	

strftime$2:	; PostCall 14
11:	

strftime$3:	; GetReturnValue £temporary3464
16:	

strftime$4:	; Assign localeConvPtr £temporary3464
17:		mov [bp + 14], t2156
19:	

strftime$5:	; Deref £temporary3465 -> tp tp 10
20:		mov a2157, [bp + 12]
22:	

strftime$6:	; BinarySubtract £temporary3466 £temporary3465 -> tp 69
23:		mov t2158, [a2157 + 10]
24:		sub t2158, 69
26:	

strftime$7:	; SignedDivide leapDays £temporary3466 4
28:		xor dx, dx
29:		idiv word [@7843$int2$4#]
30:		mov [bp + 24], ax
32:	

strftime$8:	; Deref £temporary3468 -> tp tp 10
33:		mov a2161, [bp + 12]
35:	

strftime$9:	; BinarySubtract £temporary3469 £temporary3468 -> tp 70
36:		mov t2162, [a2161 + 10]
37:		sub t2162, 70
39:	

strftime$10:	; SignedMultiply £temporary3470 £temporary3469 365
41:		xor dx, dx
42:		imul word [@7851$int2$365#]
48:	

strftime$11:	; BinaryAdd £temporary3471 £temporary3470 leapDays
49:		add t2165, [bp + 24]
51:	

strftime$12:	; Deref £temporary3472 -> tp tp 14
52:		mov a2166, [bp + 12]
54:	

strftime$13:	; BinaryAdd £temporary3473 £temporary3471 £temporary3472 -> tp
55:		add t2165, [a2166 + 14]
57:	

strftime$14:	; IntegralToIntegral £temporary3474 £temporary3473
59:		and t2165, 65535
61:		cmp t2165, 0
62:		jge strftime$15
63:		neg t2165
65:		neg t2165
67:	

strftime$15:	; Assign totalDays £temporary3474
68:		mov [bp + 26], t2165
70:	

strftime$16:	; CallHeader 34 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
72:	

strftime$17:	; Parameter 34 s 6
73:		mov a2167, [bp + 6]
74:		mov [bp + 40], a2167
76:	

strftime$18:	; Parameter 34 string_# 8
77:		mov word [bp + 42], @7860$string_#
79:	

strftime$19:	; Call 34 strcpy 0
80:		mov word [bp + 34], strftime$20
81:		mov [bp + 36], bp
82:		add bp, 34
83:		jmp strcpy
85:	

strftime$20:	; PostCall 34
87:	

strftime$21:	; Equal 27 localeConvPtr 0
88:		cmp word [bp + 14], 0
89:		je strftime$27
91:	

strftime$22:	; Deref £temporary3477 -> localeConvPtr localeConvPtr 4
92:		mov a2168, [bp + 14]
94:	

strftime$23:	; Equal 27 £temporary3477 -> localeConvPtr 0
95:		cmp word [a2168 + 4], 0
96:		je strftime$27
98:	

strftime$24:	; Deref £temporary3480 -> localeConvPtr localeConvPtr 4
99:		mov a2169, [bp + 14]
101:	

strftime$25:	; Assign shortDayList £temporary3480 -> localeConvPtr
102:		mov t2170, [a2169 + 4]
103:		mov [bp + 16], t2170
105:	

strftime$26:	; Goto 28
106:		jmp strftime$28
108:	

strftime$27:	; Assign shortDayList g_shortDayList
109:		mov word [bp + 16], @7734$g_shortDayList
111:	

strftime$28:	; Equal 34 localeConvPtr 0
112:		cmp word [bp + 14], 0
113:		je strftime$34
115:	

strftime$29:	; Deref £temporary3482 -> localeConvPtr localeConvPtr 6
116:		mov a2171, [bp + 14]
118:	

strftime$30:	; Equal 34 £temporary3482 -> localeConvPtr 0
119:		cmp word [a2171 + 6], 0
120:		je strftime$34
122:	

strftime$31:	; Deref £temporary3485 -> localeConvPtr localeConvPtr 6
123:		mov a2172, [bp + 14]
125:	

strftime$32:	; Assign longDayList £temporary3485 -> localeConvPtr
126:		mov t2173, [a2172 + 6]
127:		mov [bp + 20], t2173
129:	

strftime$33:	; Goto 35
130:		jmp strftime$35
132:	

strftime$34:	; Assign longDayList g_longDayList
133:		mov word [bp + 20], @7742$g_longDayList
135:	

strftime$35:	; Equal 41 localeConvPtr 0
136:		cmp word [bp + 14], 0
137:		je strftime$41
139:	

strftime$36:	; Deref £temporary3487 -> localeConvPtr localeConvPtr 8
140:		mov a2174, [bp + 14]
142:	

strftime$37:	; Equal 41 £temporary3487 -> localeConvPtr 0
143:		cmp word [a2174 + 8], 0
144:		je strftime$41
146:	

strftime$38:	; Deref £temporary3490 -> localeConvPtr localeConvPtr 8
147:		mov a2175, [bp + 14]
149:	

strftime$39:	; Assign shortMonthList £temporary3490 -> localeConvPtr
150:		mov t2176, [a2175 + 8]
151:		mov [bp + 18], t2176
153:	

strftime$40:	; Goto 42
154:		jmp strftime$42
156:	

strftime$41:	; Assign shortMonthList g_shortMonthList
157:		mov word [bp + 18], @7755$g_shortMonthList
159:	

strftime$42:	; Equal 48 localeConvPtr 0
160:		cmp word [bp + 14], 0
161:		je strftime$48
163:	

strftime$43:	; Deref £temporary3492 -> localeConvPtr localeConvPtr 10
164:		mov a2177, [bp + 14]
166:	

strftime$44:	; Equal 48 £temporary3492 -> localeConvPtr 0
167:		cmp word [a2177 + 10], 0
168:		je strftime$48
170:	

strftime$45:	; Deref £temporary3495 -> localeConvPtr localeConvPtr 10
171:		mov a2178, [bp + 14]
173:	

strftime$46:	; Assign longMonthList £temporary3495 -> localeConvPtr
174:		mov t2179, [a2178 + 10]
175:		mov [bp + 22], t2179
177:	

strftime$47:	; Goto 49
178:		jmp strftime$49
180:	

strftime$48:	; Assign longMonthList g_longMonthList
181:		mov word [bp + 22], @7768$g_longMonthList
183:	

strftime$49:	; SignedGreaterThanEqual 54 totalDays 3
184:		cmp dword [bp + 26], 3
185:		jge strftime$54
187:	

strftime$50:	; BinaryAdd £temporary3497 totalDays 4
188:		mov a2180, [bp + 26]
189:		add a2180, 4
191:	

strftime$51:	; IntegralToIntegral £temporary3498 £temporary3497
194:		cmp a2180, 0
195:		jge strftime$52
196:		neg a2180
198:		neg a2180
200:	

strftime$52:	; Assign yearDaySunday £temporary3498
201:		mov [bp + 30], a2180
203:	

strftime$53:	; Goto 58
204:		jmp strftime$58
206:	

strftime$54:	; BinarySubtract £temporary3499 totalDays 3
207:		mov a2181, [bp + 26]
208:		sub a2181, 3
210:	

strftime$55:	; SignedModulo £temporary3500 £temporary3499 7
212:		xor edx, edx
213:		idiv dword [@7917$int4$7#]
219:	

strftime$56:	; IntegralToIntegral £temporary3501 £temporary3500
222:		cmp t2183, 0
223:		jge strftime$57
224:		neg t2183
226:		neg t2183
228:	

strftime$57:	; Assign yearDaySunday £temporary3501
229:		mov [bp + 30], t2183
231:	

strftime$58:	; SignedGreaterThanEqual 63 totalDays 4
232:		cmp dword [bp + 26], 4
233:		jge strftime$63
235:	

strftime$59:	; BinaryAdd £temporary3503 totalDays 3
236:		mov a2184, [bp + 26]
237:		add a2184, 3
239:	

strftime$60:	; IntegralToIntegral £temporary3504 £temporary3503
242:		cmp a2184, 0
243:		jge strftime$61
244:		neg a2184
246:		neg a2184
248:	

strftime$61:	; Assign yearDayMonday £temporary3504
249:		mov [bp + 32], a2184
251:	

strftime$62:	; Goto 67
252:		jmp strftime$67
254:	

strftime$63:	; BinarySubtract £temporary3505 totalDays 4
255:		mov a2185, [bp + 26]
256:		sub a2185, 4
258:	

strftime$64:	; SignedModulo £temporary3506 £temporary3505 7
260:		xor edx, edx
261:		idiv dword [@7931$int4$7#]
267:	

strftime$65:	; IntegralToIntegral £temporary3507 £temporary3506
270:		cmp t2187, 0
271:		jge strftime$66
272:		neg t2187
274:		neg t2187
276:	

strftime$66:	; Assign yearDayMonday £temporary3507
277:		mov [bp + 32], t2187
279:	

strftime$67:	; Assign index 0
280:		mov word [bp + 34], 0
282:	

strftime$68:	; BinaryAdd £temporary3509 fmt index
283:		mov a2188, [bp + 10]
284:		add a2188, [bp + 34]
286:	

strftime$69:	; Deref £temporary3508 -> £temporary3509 £temporary3509 0
288:	

strftime$70:	; Equal 340 £temporary3508 -> £temporary3509 0
289:		cmp byte [a2188], 0
290:		je strftime$340
292:	

strftime$71:	; BinaryAdd £temporary3513 fmt index
293:		mov a2189, [bp + 10]
294:		add a2189, [bp + 34]
296:	

strftime$72:	; Deref £temporary3512 -> £temporary3513 £temporary3513 0
298:	

strftime$73:	; NotEqual 313 £temporary3512 -> £temporary3513 37
299:		cmp byte [a2189], 37
300:		jne strftime$313
302:	

strftime$74:	; Increment index
303:		inc word [bp + 34]
305:	

strftime$75:	; Assign £temporary3515 index
306:		mov t2190, [bp + 34]
308:	

strftime$76:	; BinaryAdd £temporary3517 fmt £temporary3515
309:		mov a2191, [bp + 10]
310:		add a2191, t2190
312:	

strftime$77:	; Deref £temporary3516 -> £temporary3517 £temporary3517 0
314:	

strftime$78:	; Case 102 £temporary3516 -> £temporary3517 97
315:		mov t2192, [a2191]
316:		cmp t2192, 97
317:		je strftime$102
319:	

strftime$79:	; Case 112 £temporary3516 -> £temporary3517 65
320:		cmp t2192, 65
321:		je strftime$112
323:	

strftime$80:	; Case 122 £temporary3516 -> £temporary3517 98
324:		cmp t2192, 98
325:		je strftime$122
327:	

strftime$81:	; Case 132 £temporary3516 -> £temporary3517 66
328:		cmp t2192, 66
329:		je strftime$132
331:	

strftime$82:	; Case 142 £temporary3516 -> £temporary3517 99
332:		cmp t2192, 99
333:		je strftime$142
335:	

strftime$83:	; Case 162 £temporary3516 -> £temporary3517 100
336:		cmp t2192, 100
337:		je strftime$162
339:	

strftime$84:	; Case 170 £temporary3516 -> £temporary3517 72
340:		cmp t2192, 72
341:		je strftime$170
343:	

strftime$85:	; Case 178 £temporary3516 -> £temporary3517 73
344:		cmp t2192, 73
345:		je strftime$178
347:	

strftime$86:	; Case 187 £temporary3516 -> £temporary3517 106
348:		cmp t2192, 106
349:		je strftime$187
351:	

strftime$87:	; Case 195 £temporary3516 -> £temporary3517 109
352:		cmp t2192, 109
353:		je strftime$195
355:	

strftime$88:	; Case 204 £temporary3516 -> £temporary3517 77
356:		cmp t2192, 77
357:		je strftime$204
359:	

strftime$89:	; Case 212 £temporary3516 -> £temporary3517 112
360:		cmp t2192, 112
361:		je strftime$212
363:	

strftime$90:	; Case 224 £temporary3516 -> £temporary3517 83
364:		cmp t2192, 83
365:		je strftime$224
367:	

strftime$91:	; Case 232 £temporary3516 -> £temporary3517 85
368:		cmp t2192, 85
369:		je strftime$232
371:	

strftime$92:	; Case 239 £temporary3516 -> £temporary3517 119
372:		cmp t2192, 119
373:		je strftime$239
375:	

strftime$93:	; Case 247 £temporary3516 -> £temporary3517 87
376:		cmp t2192, 87
377:		je strftime$247
379:	

strftime$94:	; Case 254 £temporary3516 -> £temporary3517 120
380:		cmp t2192, 120
381:		je strftime$254
383:	

strftime$95:	; Case 266 £temporary3516 -> £temporary3517 88
384:		cmp t2192, 88
385:		je strftime$266
387:	

strftime$96:	; Case 278 £temporary3516 -> £temporary3517 121
388:		cmp t2192, 121
389:		je strftime$278
391:	

strftime$97:	; Case 287 £temporary3516 -> £temporary3517 89
392:		cmp t2192, 89
393:		je strftime$287
395:	

strftime$98:	; Case 296 £temporary3516 -> £temporary3517 90
396:		cmp t2192, 90
397:		je strftime$296
399:	

strftime$99:	; Case 302 £temporary3516 -> £temporary3517 37
400:		cmp t2192, 37
401:		je strftime$302
403:	

strftime$100:	; CaseEnd £temporary3516 -> £temporary3517
405:	

strftime$101:	; Goto 307
406:		jmp strftime$307
408:	

strftime$102:	; CallHeader 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
410:	

strftime$103:	; Parameter 56 add 6
411:		mov [bp + 62], bp
412:		add word [bp + 62], 36
414:	

strftime$104:	; Deref £temporary3518 -> tp tp 12
415:		mov a2193, [bp + 12]
417:	

strftime$105:	; UnsignedMultiply £temporary3520 £temporary3518 -> tp 2
418:		mov t2194, [a2193 + 12]
420:		xor dx, dx
421:		mul word [@7960$int2$2#]
427:	

strftime$106:	; BinaryAdd £temporary3521 shortDayList £temporary3520
428:		mov a2198, [bp + 16]
429:		add a2198, t2197
431:	

strftime$107:	; Deref £temporary3519 -> £temporary3521 £temporary3521 0
433:	

strftime$108:	; Parameter 56 £temporary3519 -> £temporary3521 8
434:		mov t2199, [a2198]
435:		mov [bp + 64], t2199
437:	

strftime$109:	; Call 56 strcpy 0
438:		mov word [bp + 56], strftime$110
439:		mov [bp + 58], bp
440:		add bp, 56
441:		jmp strcpy
443:	

strftime$110:	; PostCall 56
445:	

strftime$111:	; Goto 319
446:		jmp strftime$319
448:	

strftime$112:	; CallHeader 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
450:	

strftime$113:	; Parameter 56 add 6
451:		mov [bp + 62], bp
452:		add word [bp + 62], 36
454:	

strftime$114:	; Deref £temporary3523 -> tp tp 12
455:		mov a2200, [bp + 12]
457:	

strftime$115:	; UnsignedMultiply £temporary3525 £temporary3523 -> tp 2
458:		mov t2201, [a2200 + 12]
460:		xor dx, dx
461:		mul word [@7968$int2$2#]
467:	

strftime$116:	; BinaryAdd £temporary3526 longDayList £temporary3525
468:		mov a2205, [bp + 20]
469:		add a2205, t2204
471:	

strftime$117:	; Deref £temporary3524 -> £temporary3526 £temporary3526 0
473:	

strftime$118:	; Parameter 56 £temporary3524 -> £temporary3526 8
474:		mov t2206, [a2205]
475:		mov [bp + 64], t2206
477:	

strftime$119:	; Call 56 strcpy 0
478:		mov word [bp + 56], strftime$120
479:		mov [bp + 58], bp
480:		add bp, 56
481:		jmp strcpy
483:	

strftime$120:	; PostCall 56
485:	

strftime$121:	; Goto 319
486:		jmp strftime$319
488:	

strftime$122:	; CallHeader 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
490:	

strftime$123:	; Parameter 56 add 6
491:		mov [bp + 62], bp
492:		add word [bp + 62], 36
494:	

strftime$124:	; Deref £temporary3528 -> tp tp 8
495:		mov a2207, [bp + 12]
497:	

strftime$125:	; UnsignedMultiply £temporary3530 £temporary3528 -> tp 2
498:		mov t2208, [a2207 + 8]
500:		xor dx, dx
501:		mul word [@7976$int2$2#]
507:	

strftime$126:	; BinaryAdd £temporary3531 shortMonthList £temporary3530
508:		mov a2212, [bp + 18]
509:		add a2212, t2211
511:	

strftime$127:	; Deref £temporary3529 -> £temporary3531 £temporary3531 0
513:	

strftime$128:	; Parameter 56 £temporary3529 -> £temporary3531 8
514:		mov t2213, [a2212]
515:		mov [bp + 64], t2213
517:	

strftime$129:	; Call 56 strcpy 0
518:		mov word [bp + 56], strftime$130
519:		mov [bp + 58], bp
520:		add bp, 56
521:		jmp strcpy
523:	

strftime$130:	; PostCall 56
525:	

strftime$131:	; Goto 319
526:		jmp strftime$319
528:	

strftime$132:	; CallHeader 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
530:	

strftime$133:	; Parameter 56 add 6
531:		mov [bp + 62], bp
532:		add word [bp + 62], 36
534:	

strftime$134:	; Deref £temporary3533 -> tp tp 8
535:		mov a2214, [bp + 12]
537:	

strftime$135:	; UnsignedMultiply £temporary3535 £temporary3533 -> tp 2
538:		mov t2215, [a2214 + 8]
540:		xor dx, dx
541:		mul word [@7984$int2$2#]
547:	

strftime$136:	; BinaryAdd £temporary3536 longMonthList £temporary3535
548:		mov a2219, [bp + 22]
549:		add a2219, t2218
551:	

strftime$137:	; Deref £temporary3534 -> £temporary3536 £temporary3536 0
553:	

strftime$138:	; Parameter 56 £temporary3534 -> £temporary3536 8
554:		mov t2220, [a2219]
555:		mov [bp + 64], t2220
557:	

strftime$139:	; Call 56 strcpy 0
558:		mov word [bp + 56], strftime$140
559:		mov [bp + 58], bp
560:		add bp, 56
561:		jmp strcpy
563:	

strftime$140:	; PostCall 56
565:	

strftime$141:	; Goto 319
566:		jmp strftime$319
568:	

strftime$142:	; CallHeader 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
570:	

strftime$143:	; Parameter 56 add 6
571:		mov [bp + 62], bp
572:		add word [bp + 62], 36
574:	

strftime$144:	; Parameter 56 string_2502i2D2502i2D2502i202502i3A2502i3A2502i# 8
575:		mov word [bp + 64], @7990$string_2502i2D2502i2D2502i202502i3A2502i3A2502i#
577:	

strftime$145:	; Deref £temporary3538 -> tp tp 10
578:		mov a2221, [bp + 12]
580:	

strftime$146:	; BinaryAdd £temporary3539 £temporary3538 -> tp 1900
581:		mov t2222, [a2221 + 10]
582:		add t2222, 1900
584:	

strftime$147:	; Parameter 56 £temporary3539 10
585:		mov [bp + 66], t2222
587:	

strftime$148:	; Deref £temporary3540 -> tp tp 8
588:		mov a2223, [bp + 12]
590:	

strftime$149:	; BinaryAdd £temporary3541 £temporary3540 -> tp 1
591:		mov t2224, [a2223 + 8]
592:		add t2224, 1
594:	

strftime$150:	; Parameter 56 £temporary3541 12
595:		mov [bp + 68], t2224
597:	

strftime$151:	; Deref £temporary3542 -> tp tp 6
598:		mov a2225, [bp + 12]
600:	

strftime$152:	; Parameter 56 £temporary3542 -> tp 14
601:		mov t2226, [a2225 + 6]
602:		mov [bp + 70], t2226
604:	

strftime$153:	; Deref £temporary3543 -> tp tp 4
605:		mov a2227, [bp + 12]
607:	

strftime$154:	; Parameter 56 £temporary3543 -> tp 16
608:		mov t2228, [a2227 + 4]
609:		mov [bp + 72], t2228
611:	

strftime$155:	; Deref £temporary3544 -> tp tp 2
612:		mov a2229, [bp + 12]
614:	

strftime$156:	; Parameter 56 £temporary3544 -> tp 18
615:		mov t2230, [a2229 + 2]
616:		mov [bp + 74], t2230
618:	

strftime$157:	; Deref £temporary3545 -> tp tp 0
619:		mov a2231, [bp + 12]
621:	

strftime$158:	; Parameter 56 £temporary3545 -> tp 20
622:		mov t2232, [a2231]
623:		mov [bp + 76], t2232
625:	

strftime$159:	; Call 56 sprintf 0
626:		mov word [bp + 56], strftime$160
627:		mov [bp + 58], bp
628:		add bp, 56
629:		mov di, bp
630:		add di, 12
631:		jmp sprintf
633:	

strftime$160:	; PostCall 56
635:	

strftime$161:	; Goto 319
636:		jmp strftime$319
638:	

strftime$162:	; CallHeader 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
640:	

strftime$163:	; Parameter 56 add 6
641:		mov [bp + 62], bp
642:		add word [bp + 62], 36
644:	

strftime$164:	; Parameter 56 string_25i# 8
645:		mov word [bp + 64], @8006$string_25i#
647:	

strftime$165:	; Deref £temporary3547 -> tp tp 6
648:		mov a2233, [bp + 12]
650:	

strftime$166:	; Parameter 56 £temporary3547 -> tp 10
651:		mov t2234, [a2233 + 6]
652:		mov [bp + 66], t2234
654:	

strftime$167:	; Call 56 sprintf 0
655:		mov word [bp + 56], strftime$168
656:		mov [bp + 58], bp
657:		add bp, 56
658:		mov di, bp
659:		add di, 2
660:		jmp sprintf
662:	

strftime$168:	; PostCall 56
664:	

strftime$169:	; Goto 319
665:		jmp strftime$319
667:	

strftime$170:	; CallHeader 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
669:	

strftime$171:	; Parameter 56 add 6
670:		mov [bp + 62], bp
671:		add word [bp + 62], 36
673:	

strftime$172:	; Parameter 56 string_25i# 8
674:		mov word [bp + 64], @8011$string_25i#
676:	

strftime$173:	; Deref £temporary3549 -> tp tp 4
677:		mov a2235, [bp + 12]
679:	

strftime$174:	; Parameter 56 £temporary3549 -> tp 10
680:		mov t2236, [a2235 + 4]
681:		mov [bp + 66], t2236
683:	

strftime$175:	; Call 56 sprintf 0
684:		mov word [bp + 56], strftime$176
685:		mov [bp + 58], bp
686:		add bp, 56
687:		mov di, bp
688:		add di, 2
689:		jmp sprintf
691:	

strftime$176:	; PostCall 56
693:	

strftime$177:	; Goto 319
694:		jmp strftime$319
696:	

strftime$178:	; CallHeader 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
698:	

strftime$179:	; Parameter 56 add 6
699:		mov [bp + 62], bp
700:		add word [bp + 62], 36
702:	

strftime$180:	; Parameter 56 string_25i# 8
703:		mov word [bp + 64], @8016$string_25i#
705:	

strftime$181:	; Deref £temporary3551 -> tp tp 4
706:		mov a2237, [bp + 12]
708:	

strftime$182:	; SignedModulo £temporary3552 £temporary3551 -> tp 12
709:		mov t2238, [a2237 + 4]
711:		xor dx, dx
712:		idiv word [@8019$int2$12#]
718:	

strftime$183:	; Parameter 56 £temporary3552 10
719:		mov [bp + 66], t2240
721:	

strftime$184:	; Call 56 sprintf 0
722:		mov word [bp + 56], strftime$185
723:		mov [bp + 58], bp
724:		add bp, 56
725:		mov di, bp
726:		add di, 2
727:		jmp sprintf
729:	

strftime$185:	; PostCall 56
731:	

strftime$186:	; Goto 319
732:		jmp strftime$319
734:	

strftime$187:	; CallHeader 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
736:	

strftime$188:	; Parameter 56 add 6
737:		mov [bp + 62], bp
738:		add word [bp + 62], 36
740:	

strftime$189:	; Parameter 56 string_25i# 8
741:		mov word [bp + 64], @8024$string_25i#
743:	

strftime$190:	; Deref £temporary3554 -> tp tp 14
744:		mov a2241, [bp + 12]
746:	

strftime$191:	; Parameter 56 £temporary3554 -> tp 10
747:		mov t2242, [a2241 + 14]
748:		mov [bp + 66], t2242
750:	

strftime$192:	; Call 56 sprintf 0
751:		mov word [bp + 56], strftime$193
752:		mov [bp + 58], bp
753:		add bp, 56
754:		mov di, bp
755:		add di, 2
756:		jmp sprintf
758:	

strftime$193:	; PostCall 56
760:	

strftime$194:	; Goto 319
761:		jmp strftime$319
763:	

strftime$195:	; CallHeader 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
765:	

strftime$196:	; Parameter 56 add 6
766:		mov [bp + 62], bp
767:		add word [bp + 62], 36
769:	

strftime$197:	; Parameter 56 string_25i# 8
770:		mov word [bp + 64], @8029$string_25i#
772:	

strftime$198:	; Deref £temporary3556 -> tp tp 8
773:		mov a2243, [bp + 12]
775:	

strftime$199:	; BinaryAdd £temporary3557 £temporary3556 -> tp 1
776:		mov t2244, [a2243 + 8]
777:		add t2244, 1
779:	

strftime$200:	; Parameter 56 £temporary3557 10
780:		mov [bp + 66], t2244
782:	

strftime$201:	; Call 56 sprintf 0
783:		mov word [bp + 56], strftime$202
784:		mov [bp + 58], bp
785:		add bp, 56
786:		mov di, bp
787:		add di, 2
788:		jmp sprintf
790:	

strftime$202:	; PostCall 56
792:	

strftime$203:	; Goto 319
793:		jmp strftime$319
795:	

strftime$204:	; CallHeader 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
797:	

strftime$205:	; Parameter 56 add 6
798:		mov [bp + 62], bp
799:		add word [bp + 62], 36
801:	

strftime$206:	; Parameter 56 string_25i# 8
802:		mov word [bp + 64], @8037$string_25i#
804:	

strftime$207:	; Deref £temporary3559 -> tp tp 2
805:		mov a2245, [bp + 12]
807:	

strftime$208:	; Parameter 56 £temporary3559 -> tp 10
808:		mov t2246, [a2245 + 2]
809:		mov [bp + 66], t2246
811:	

strftime$209:	; Call 56 sprintf 0
812:		mov word [bp + 56], strftime$210
813:		mov [bp + 58], bp
814:		add bp, 56
815:		mov di, bp
816:		add di, 2
817:		jmp sprintf
819:	

strftime$210:	; PostCall 56
821:	

strftime$211:	; Goto 319
822:		jmp strftime$319
824:	

strftime$212:	; CallHeader 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
826:	

strftime$213:	; Parameter 56 add 6
827:		mov [bp + 62], bp
828:		add word [bp + 62], 36
830:	

strftime$214:	; Parameter 56 string_25s# 8
831:		mov word [bp + 64], @8042$string_25s#
833:	

strftime$215:	; Deref £temporary3561 -> tp tp 4
834:		mov a2247, [bp + 12]
836:	

strftime$216:	; SignedGreaterThanEqual 219 £temporary3561 -> tp 12
837:		cmp word [a2247 + 4], 12
838:		jge strftime$219
840:	

strftime$217:	; Assign £temporary3566 string_AM#
841:		mov t2248, @8047$string_AM#
843:	

strftime$218:	; Goto 220
844:		jmp strftime$220
846:	

strftime$219:	; Assign £temporary3566 string_PM#
847:		mov t2249, @8048$string_PM#
849:	

strftime$220:	; Parameter 56 £temporary3566 10
850:		mov [bp + 66], t2249
852:	

strftime$221:	; Call 56 sprintf 0
853:		mov word [bp + 56], strftime$222
854:		mov [bp + 58], bp
855:		add bp, 56
856:		mov di, bp
857:		add di, 2
858:		jmp sprintf
860:	

strftime$222:	; PostCall 56
862:	

strftime$223:	; Goto 319
863:		jmp strftime$319
865:	

strftime$224:	; CallHeader 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
867:	

strftime$225:	; Parameter 56 add 6
868:		mov [bp + 62], bp
869:		add word [bp + 62], 36
871:	

strftime$226:	; Parameter 56 string_25i# 8
872:		mov word [bp + 64], @8058$string_25i#
874:	

strftime$227:	; Deref £temporary3568 -> tp tp 0
875:		mov a2250, [bp + 12]
877:	

strftime$228:	; Parameter 56 £temporary3568 -> tp 10
878:		mov t2251, [a2250]
879:		mov [bp + 66], t2251
881:	

strftime$229:	; Call 56 sprintf 0
882:		mov word [bp + 56], strftime$230
883:		mov [bp + 58], bp
884:		add bp, 56
885:		mov di, bp
886:		add di, 2
887:		jmp sprintf
889:	

strftime$230:	; PostCall 56
891:	

strftime$231:	; Goto 319
892:		jmp strftime$319
894:	

strftime$232:	; CallHeader 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
896:	

strftime$233:	; Parameter 56 add 6
897:		mov [bp + 62], bp
898:		add word [bp + 62], 36
900:	

strftime$234:	; Parameter 56 string_25i# 8
901:		mov word [bp + 64], @8063$string_25i#
903:	

strftime$235:	; Parameter 56 yearDaySunday 10
904:		mov a2252, [bp + 30]
905:		mov [bp + 66], a2252
907:	

strftime$236:	; Call 56 sprintf 0
908:		mov word [bp + 56], strftime$237
909:		mov [bp + 58], bp
910:		add bp, 56
911:		mov di, bp
912:		add di, 2
913:		jmp sprintf
915:	

strftime$237:	; PostCall 56
917:	

strftime$238:	; Goto 319
918:		jmp strftime$319
920:	

strftime$239:	; CallHeader 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
922:	

strftime$240:	; Parameter 56 add 6
923:		mov [bp + 62], bp
924:		add word [bp + 62], 36
926:	

strftime$241:	; Parameter 56 string_25i# 8
927:		mov word [bp + 64], @8067$string_25i#
929:	

strftime$242:	; Deref £temporary3571 -> tp tp 12
930:		mov a2253, [bp + 12]
932:	

strftime$243:	; Parameter 56 £temporary3571 -> tp 10
933:		mov t2254, [a2253 + 12]
934:		mov [bp + 66], t2254
936:	

strftime$244:	; Call 56 sprintf 0
937:		mov word [bp + 56], strftime$245
938:		mov [bp + 58], bp
939:		add bp, 56
940:		mov di, bp
941:		add di, 2
942:		jmp sprintf
944:	

strftime$245:	; PostCall 56
946:	

strftime$246:	; Goto 319
947:		jmp strftime$319
949:	

strftime$247:	; CallHeader 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
951:	

strftime$248:	; Parameter 56 add 6
952:		mov [bp + 62], bp
953:		add word [bp + 62], 36
955:	

strftime$249:	; Parameter 56 string_25i# 8
956:		mov word [bp + 64], @8072$string_25i#
958:	

strftime$250:	; Parameter 56 yearDayMonday 10
959:		mov a2255, [bp + 32]
960:		mov [bp + 66], a2255
962:	

strftime$251:	; Call 56 sprintf 0
963:		mov word [bp + 56], strftime$252
964:		mov [bp + 58], bp
965:		add bp, 56
966:		mov di, bp
967:		add di, 2
968:		jmp sprintf
970:	

strftime$252:	; PostCall 56
972:	

strftime$253:	; Goto 319
973:		jmp strftime$319
975:	

strftime$254:	; CallHeader 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
977:	

strftime$255:	; Parameter 56 add 6
978:		mov [bp + 62], bp
979:		add word [bp + 62], 36
981:	

strftime$256:	; Parameter 56 string_2502i3A2502i3A2502i# 8
982:		mov word [bp + 64], @8076$string_2502i3A2502i3A2502i#
984:	

strftime$257:	; Deref £temporary3574 -> tp tp 4
985:		mov a2256, [bp + 12]
987:	

strftime$258:	; Parameter 56 £temporary3574 -> tp 10
988:		mov t2257, [a2256 + 4]
989:		mov [bp + 66], t2257
991:	

strftime$259:	; Deref £temporary3575 -> tp tp 2
992:		mov a2258, [bp + 12]
994:	

strftime$260:	; Parameter 56 £temporary3575 -> tp 12
995:		mov t2259, [a2258 + 2]
996:		mov [bp + 68], t2259
998:	

strftime$261:	; Deref £temporary3576 -> tp tp 0
999:		mov a2260, [bp + 12]
1001:	

strftime$262:	; Parameter 56 £temporary3576 -> tp 14
1002:		mov t2261, [a2260]
1003:		mov [bp + 70], t2261
1005:	

strftime$263:	; Call 56 sprintf 0
1006:		mov word [bp + 56], strftime$264
1007:		mov [bp + 58], bp
1008:		add bp, 56
1009:		mov di, bp
1010:		add di, 6
1011:		jmp sprintf
1013:	

strftime$264:	; PostCall 56
1015:	

strftime$265:	; Goto 319
1016:		jmp strftime$319
1018:	

strftime$266:	; CallHeader 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
1020:	

strftime$267:	; Parameter 56 add 6
1021:		mov [bp + 62], bp
1022:		add word [bp + 62], 36
1024:	

strftime$268:	; Parameter 56 string_2502i3A2502i3A2502i# 8
1025:		mov word [bp + 64], @8083$string_2502i3A2502i3A2502i#
1027:	

strftime$269:	; Deref £temporary3578 -> tp tp 4
1028:		mov a2262, [bp + 12]
1030:	

strftime$270:	; Parameter 56 £temporary3578 -> tp 10
1031:		mov t2263, [a2262 + 4]
1032:		mov [bp + 66], t2263
1034:	

strftime$271:	; Deref £temporary3579 -> tp tp 2
1035:		mov a2264, [bp + 12]
1037:	

strftime$272:	; Parameter 56 £temporary3579 -> tp 12
1038:		mov t2265, [a2264 + 2]
1039:		mov [bp + 68], t2265
1041:	

strftime$273:	; Deref £temporary3580 -> tp tp 0
1042:		mov a2266, [bp + 12]
1044:	

strftime$274:	; Parameter 56 £temporary3580 -> tp 14
1045:		mov t2267, [a2266]
1046:		mov [bp + 70], t2267
1048:	

strftime$275:	; Call 56 sprintf 0
1049:		mov word [bp + 56], strftime$276
1050:		mov [bp + 58], bp
1051:		add bp, 56
1052:		mov di, bp
1053:		add di, 6
1054:		jmp sprintf
1056:	

strftime$276:	; PostCall 56
1058:	

strftime$277:	; Goto 319
1059:		jmp strftime$319
1061:	

strftime$278:	; CallHeader 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
1063:	

strftime$279:	; Parameter 56 add 6
1064:		mov [bp + 62], bp
1065:		add word [bp + 62], 36
1067:	

strftime$280:	; Parameter 56 string_25i# 8
1068:		mov word [bp + 64], @8090$string_25i#
1070:	

strftime$281:	; Deref £temporary3582 -> tp tp 10
1071:		mov a2268, [bp + 12]
1073:	

strftime$282:	; SignedModulo £temporary3583 £temporary3582 -> tp 100
1074:		mov t2269, [a2268 + 10]
1076:		xor dx, dx
1077:		idiv word [@8093$int2$100#]
1083:	

strftime$283:	; Parameter 56 £temporary3583 10
1084:		mov [bp + 66], t2271
1086:	

strftime$284:	; Call 56 sprintf 0
1087:		mov word [bp + 56], strftime$285
1088:		mov [bp + 58], bp
1089:		add bp, 56
1090:		mov di, bp
1091:		add di, 2
1092:		jmp sprintf
1094:	

strftime$285:	; PostCall 56
1096:	

strftime$286:	; Goto 319
1097:		jmp strftime$319
1099:	

strftime$287:	; CallHeader 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
1101:	

strftime$288:	; Parameter 56 add 6
1102:		mov [bp + 62], bp
1103:		add word [bp + 62], 36
1105:	

strftime$289:	; Parameter 56 string_25i# 8
1106:		mov word [bp + 64], @8098$string_25i#
1108:	

strftime$290:	; Deref £temporary3585 -> tp tp 10
1109:		mov a2272, [bp + 12]
1111:	

strftime$291:	; BinaryAdd £temporary3586 £temporary3585 -> tp 1900
1112:		mov t2273, [a2272 + 10]
1113:		add t2273, 1900
1115:	

strftime$292:	; Parameter 56 £temporary3586 10
1116:		mov [bp + 66], t2273
1118:	

strftime$293:	; Call 56 sprintf 0
1119:		mov word [bp + 56], strftime$294
1120:		mov [bp + 58], bp
1121:		add bp, 56
1122:		mov di, bp
1123:		add di, 2
1124:		jmp sprintf
1126:	

strftime$294:	; PostCall 56
1128:	

strftime$295:	; Goto 319
1129:		jmp strftime$319
1131:	

strftime$296:	; CallHeader 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
1133:	

strftime$297:	; Parameter 56 add 6
1134:		mov [bp + 62], bp
1135:		add word [bp + 62], 36
1137:	

strftime$298:	; Parameter 56 string_# 8
1138:		mov word [bp + 64], @8106$string_#
1140:	

strftime$299:	; Call 56 strcpy 0
1141:		mov word [bp + 56], strftime$300
1142:		mov [bp + 58], bp
1143:		add bp, 56
1144:		jmp strcpy
1146:	

strftime$300:	; PostCall 56
1148:	

strftime$301:	; Goto 319
1149:		jmp strftime$319
1151:	

strftime$302:	; CallHeader 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
1153:	

strftime$303:	; Parameter 56 add 6
1154:		mov [bp + 62], bp
1155:		add word [bp + 62], 36
1157:	

strftime$304:	; Parameter 56 string_25# 8
1158:		mov word [bp + 64], @8110$string_25#
1160:	

strftime$305:	; Call 56 strcpy 0
1161:		mov word [bp + 56], strftime$306
1162:		mov [bp + 58], bp
1163:		add bp, 56
1164:		jmp strcpy
1166:	

strftime$306:	; PostCall 56
1168:	

strftime$307:	; CallHeader 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
1170:	

strftime$308:	; Parameter 56 add 6
1171:		mov [bp + 62], bp
1172:		add word [bp + 62], 36
1174:	

strftime$309:	; Parameter 56 string_# 8
1175:		mov word [bp + 64], @8112$string_#
1177:	

strftime$310:	; Call 56 strcpy 0
1178:		mov word [bp + 56], strftime$311
1179:		mov [bp + 58], bp
1180:		add bp, 56
1181:		jmp strcpy
1183:	

strftime$311:	; PostCall 56
1185:	

strftime$312:	; Goto 319
1186:		jmp strftime$319
1188:	

strftime$313:	; Deref £temporary3591 -> add add 0
1189:		mov a2274, bp
1190:		add a2274, 36
1192:	

strftime$314:	; BinaryAdd £temporary3593 fmt index
1193:		mov a2275, [bp + 10]
1194:		add a2275, [bp + 34]
1196:	

strftime$315:	; Deref £temporary3592 -> £temporary3593 £temporary3593 0
1198:	

strftime$316:	; Assign £temporary3591 -> add £temporary3592 -> £temporary3593
1199:		mov t2276, [a2275]
1200:		mov [a2274], t2276
1202:	

strftime$317:	; Deref £temporary3594 -> add add 1
1203:		mov a2277, bp
1204:		add a2277, 36
1206:	

strftime$318:	; Assign £temporary3594 -> add 0
1207:		mov byte [a2277 + 1], 0
1209:	

strftime$319:	; CallHeader 56 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
1211:	

strftime$320:	; Parameter 56 s 6
1212:		mov a2278, [bp + 6]
1213:		mov [bp + 62], a2278
1215:	

strftime$321:	; Call 56 strlen 0
1216:		mov word [bp + 56], strftime$322
1217:		mov [bp + 58], bp
1218:		add bp, 56
1219:		jmp strlen
1221:	

strftime$322:	; PostCall 56
1223:	

strftime$323:	; GetReturnValue £temporary3595
1228:	

strftime$324:	; Assign x £temporary3595
1229:		mov [bp + 56], t2280
1231:	

strftime$325:	; CallHeader 58 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
1233:	

strftime$326:	; Parameter 58 add 6
1234:		mov [bp + 64], bp
1235:		add word [bp + 64], 36
1237:	

strftime$327:	; Call 58 strlen 0
1238:		mov word [bp + 58], strftime$328
1239:		mov [bp + 60], bp
1240:		add bp, 58
1241:		jmp strlen
1243:	

strftime$328:	; PostCall 58
1245:	

strftime$329:	; GetReturnValue £temporary3596
1250:	

strftime$330:	; Assign y £temporary3596
1251:		mov [bp + 58], t2282
1253:	

strftime$331:	; BinaryAdd £temporary3597 x y
1254:		mov a2283, [bp + 56]
1255:		add a2283, [bp + 58]
1257:	

strftime$332:	; SignedGreaterThanEqual 340 £temporary3597 smax
1258:		cmp a2283, [bp + 8]
1259:		jge strftime$340
1261:	

strftime$333:	; CallHeader 60 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
1263:	

strftime$334:	; Parameter 60 s 6
1264:		mov a2284, [bp + 6]
1265:		mov [bp + 66], a2284
1267:	

strftime$335:	; Parameter 60 add 8
1268:		mov [bp + 68], bp
1269:		add word [bp + 68], 36
1271:	

strftime$336:	; Call 60 strcat 0
1272:		mov word [bp + 60], strftime$337
1273:		mov [bp + 62], bp
1274:		add bp, 60
1275:		jmp strcat
1277:	

strftime$337:	; PostCall 60
1279:	

strftime$338:	; Increment index
1280:		inc word [bp + 34]
1282:	

strftime$339:	; Goto 68
1283:		jmp strftime$68
1285:	

strftime$340:	; CallHeader 34 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
1287:	

strftime$341:	; Parameter 34 s 6
1288:		mov a2285, [bp + 6]
1289:		mov [bp + 40], a2285
1291:	

strftime$342:	; Call 34 strlen 0
1292:		mov word [bp + 34], strftime$343
1293:		mov [bp + 36], bp
1294:		add bp, 34
1295:		jmp strlen
1297:	

strftime$343:	; PostCall 34
1299:	

strftime$344:	; GetReturnValue £temporary3600
1304:	

strftime$345:	; SetReturnValue £temporary3600
1306:	

strftime$346:	; Return £temporary3600
1307:		mov t2288, [bp]
1308:		mov di, [bp + 4]
1309:		mov bp, [bp + 2]
1310:		jmp t2288
1312:	

strftime$347:	; FunctionEnd strftime
