0: return_value = 0
1: return
2: empty
3: return
4: function end malloc
0: a$p = 0
1: a$q = 0
2: call header
3: parameter string_test12Etxt#, offset 6
4: parameter string_test22Etxt#, offset 8
5: call function noellipse-noellipse file_test
6: post call
7: empty
8: return
9: function end main2
0: s[0] = 72
1: s[1] = 101
2: s[2] = 108
3: s[3] = 108
4: s[4] = 111
5: s[5] = 0
6: t[0] = 87
7: t[1] = 111
8: t[2] = 114
9: t[3] = 108
10: t[4] = 100
11: t[5] = 0
12: call header
13: parameter string_3C25s3E203C25s3E0A#, offset 6
14: parameter s, offset 8
15: parameter t, offset 10
16: call function noellipse-ellipse printf, extra 0
17: post call
18: empty
19: return
20: function end main33
0: g_outDevice = stdout
1: call header
2: parameter 88, offset 6
3: call function noellipse-noellipse printChar
4: post call
5: call header
6: parameter 10, offset 6
7: call function noellipse-noellipse printChar
8: post call
9: empty
10: return
11: function end main34
0: call header
1: parameter string_Please20write20a20character3A20#, offset 6
2: call function noellipse-ellipse printf, extra 0
3: post call
4: call header
5: parameter string_25c#, offset 6
6: £temporary26 = &c
7: parameter £temporary26, offset 8
8: call function noellipse-ellipse scanf, extra 0
9: post call
10: call header
11: parameter string_You20wrote20the20character202725c272E0A#, offset 6
12: £temporary28 = int_to_int c (Signed_Char -> Signed_Int)
13: parameter £temporary28, offset 8
14: call function noellipse-ellipse printf, extra 0
15: post call
16: empty
17: return
18: function end mainc
0: call header
1: parameter string_Please20write20an20integer3A20#, offset 6
2: call function noellipse-ellipse printf, extra 0
3: post call
4: call header
5: parameter string_25i#, offset 6
6: £temporary37 = &i
7: parameter £temporary37, offset 8
8: call function noellipse-ellipse scanf, extra 0
9: post call
10: call header
11: parameter string_You20wrote20the20integer2025i2E0A#, offset 6
12: parameter i, offset 8
13: call function noellipse-ellipse printf, extra 0
14: post call
15: empty
16: return
17: function end maini
0: call header
1: parameter string_Please20write20a20string3A20#, offset 6
2: call function noellipse-ellipse printf, extra 0
3: post call
4: call header
5: parameter string_25s#, offset 6
6: parameter s, offset 8
7: call function noellipse-ellipse scanf, extra 0
8: post call
9: call header
10: parameter string_You20wrote20the20string202225s222E0A#, offset 6
11: parameter s, offset 8
12: call function noellipse-ellipse printf, extra 0
13: post call
14: empty
15: return
16: function end mains
0: call header
1: call function noellipse-noellipse limits_test
2: post call
3: call header
4: call function noellipse-noellipse time_test
5: post call
6: empty
7: return
8: function end maint
0: call header
1: call function noellipse-noellipse malloc_test
2: post call
3: call header
4: push float 10
5: parameter 10, offset 6
6: call function noellipse-noellipse setjmp_test
7: post call
8: call header
9: push 0
10: parameter 0, offset 6
11: call function noellipse-noellipse setjmp_test
12: post call
13: empty
14: return
15: function end mainY
0: index = 129
1: empty
2: if index < 255 goto 5
3: goto 21
4: check track map float stack
5: empty
6: £temporary63 = int_to_int index (Signed_Int -> Pointer)
7: £temporary64 -> £temporary63 = *£temporary63
8: c = £temporary64 -> £temporary63
9: call header
10: parameter string_25i3A2025i203C25c3E0A#, offset 6
11: parameter index, offset 8
12: £temporary65 = int_to_int c (Signed_Char -> Signed_Int)
13: parameter £temporary65, offset 10
14: £temporary66 = int_to_int c (Signed_Char -> Signed_Int)
15: parameter £temporary66, offset 12
16: call function noellipse-ellipse printf, extra 0
17: post call
18: empty
19: index = index + 1
20: goto 1
21: call header
22: parameter string_0Aargc3A2025i0A#, offset 6
23: parameter argc, offset 8
24: call function noellipse-ellipse printf, extra 0
25: post call
26: index = 0
27: empty
28: if index < argc goto 31
29: goto 44
30: check track map float stack
31: empty
32: call header
33: parameter string_25i3A203C25s3E0A#, offset 6
34: parameter index, offset 8
35: £temporary72 = index * 2
36: £temporary73 = argv + £temporary72
37: £temporary71 -> £temporary73 = *£temporary73
38: parameter £temporary71 -> £temporary73, offset 10
39: call function noellipse-ellipse printf, extra 0
40: post call
41: empty
42: index = index + 1
43: goto 27
44: call header
45: parameter string_0A#, offset 6
46: call function noellipse-ellipse printf, extra 0
47: post call
48: index = 0
49: empty
50: £temporary77 = index * 2
51: £temporary78 = argv + £temporary77
52: £temporary76 -> £temporary78 = *£temporary78
53: if £temporary76 -> £temporary78 != 0 goto 56
54: goto 69
55: check track map float stack
56: empty
57: call header
58: parameter string_25i3A203C25s3E0A#, offset 6
59: parameter index, offset 8
60: £temporary82 = index * 2
61: £temporary83 = argv + £temporary82
62: £temporary81 -> £temporary83 = *£temporary83
63: parameter £temporary81 -> £temporary83, offset 10
64: call function noellipse-ellipse printf, extra 0
65: post call
66: empty
67: index = index + 1
68: goto 49
69: empty
70: return
71: function end mainX
0: call header
1: call function noellipse-noellipse main_math
2: post call
3: empty
4: return
5: function end main
0: call header
1: parameter string_argc3A2025i0A#, offset 6
2: parameter argc, offset 8
3: call function noellipse-ellipse printf, extra 0
4: post call
5: index = 0
6: empty
7: if index < argc goto 10
8: goto 23
9: check track map float stack
10: empty
11: call header
12: parameter string_25i3A203C25s3E0A#, offset 6
13: parameter index, offset 8
14: £temporary103 = index * 2
15: £temporary104 = argv + £temporary103
16: £temporary102 -> £temporary104 = *£temporary104
17: parameter £temporary102 -> £temporary104, offset 10
18: call function noellipse-ellipse printf, extra 0
19: post call
20: empty
21: index = index + 1
22: goto 6
23: call header
24: parameter string_0A#, offset 6
25: call function noellipse-ellipse printf, extra 0
26: post call
27: index = 0
28: empty
29: £temporary108 = index * 2
30: £temporary109 = argv + £temporary108
31: £temporary107 -> £temporary109 = *£temporary109
32: if £temporary107 -> £temporary109 != 0 goto 35
33: goto 48
34: check track map float stack
35: empty
36: call header
37: parameter string_25i3A203C25s3E0A#, offset 6
38: parameter index, offset 8
39: £temporary113 = index * 2
40: £temporary114 = argv + £temporary113
41: £temporary112 -> £temporary114 = *£temporary114
42: parameter £temporary112 -> £temporary114, offset 10
43: call function noellipse-ellipse printf, extra 0
44: post call
45: empty
46: index = index + 1
47: goto 28
48: call header
49: parameter string_0A#, offset 6
50: call function noellipse-ellipse printf, extra 0
51: post call
52: call header
53: parameter 0, offset 6
54: call function noellipse-noellipse mktime
55: post call
56: call header
57: parameter string_Hello210A#, offset 6
58: call function noellipse-ellipse printf, extra 0
59: post call
60: call header
61: parameter string_Please20write20a20character2C20a20string2C20an20integer2C20and20a20double3A20#, offset 6
62: call function noellipse-ellipse printf, extra 0
63: post call
64: call header
65: parameter string_25c2025s2025i2025lf#, offset 6
66: £temporary120 = &c
67: parameter £temporary120, offset 8
68: parameter s, offset 10
69: £temporary121 = &i
70: parameter £temporary121, offset 12
71: push float d
72: pop float empty X
73: £temporary122 = &d
74: parameter £temporary122, offset 14
75: call function noellipse-ellipse scanf, extra 0
76: post call
77: call header
78: parameter string_You20wrote20the20character202725c272C20the20string202225s222C20the20integer2025i2C20and20the20double2025f2E0A#, offset 6
79: £temporary124 = int_to_int c (Signed_Char -> Signed_Int)
80: parameter £temporary124, offset 8
81: parameter s, offset 10
82: parameter i, offset 12
83: push float d
84: parameter d, offset 14
85: call function noellipse-ellipse printf, extra 0
86: post call
87: empty
88: return
89: function end mainX2
0: call header
1: parameter string_3A20#, offset 6
2: call function noellipse-ellipse printf, extra 0
3: post call
4: call header
5: parameter string_25lf#, offset 6
6: push float x
7: pop float empty X
8: £temporary153 = &x
9: parameter £temporary153, offset 8
10: call function noellipse-ellipse scanf, extra 0
11: post call
12: call header
13: parameter string_3C25f3E#, offset 6
14: push float x
15: parameter x, offset 8
16: call function noellipse-ellipse printf, extra 0
17: post call
18: empty
19: return
20: function end main3
0: call header
1: push float 3.14
2: parameter 3.14, offset 6
3: call function noellipse-noellipse setjmp_test
4: post call
5: call header
6: parameter string_2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D0A#, offset 6
7: call function noellipse-ellipse printf, extra 0
8: post call
9: call header
10: push 0
11: parameter 0, offset 6
12: call function noellipse-noellipse setjmp_test
13: post call
14: call header
15: parameter string_2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D0A#, offset 6
16: call function noellipse-ellipse printf, extra 0
17: post call
18: call header
19: push float 2.71
20: parameter 2.71, offset 6
21: call function noellipse-noellipse setjmp_test
22: post call
23: call header
24: parameter string_2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D0A#, offset 6
25: call function noellipse-ellipse printf, extra 0
26: post call
27: call header
28: push 0
29: parameter 0, offset 6
30: call function noellipse-noellipse setjmp_test
31: post call
32: empty
33: return
34: function end mains2
0: call header
1: parameter 97, offset 6
2: call function noellipse-noellipse character_test
3: post call
4: call header
5: parameter 66, offset 6
6: call function noellipse-noellipse character_test
7: post call
8: call header
9: parameter 49, offset 6
10: call function noellipse-noellipse character_test
11: post call
12: call header
13: parameter 46, offset 6
14: call function noellipse-noellipse character_test
15: post call
16: call header
17: parameter 10, offset 6
18: call function noellipse-noellipse character_test
19: post call
20: call header
21: parameter 102, offset 6
22: call function noellipse-noellipse character_test
23: post call
24: call header
25: parameter 103, offset 6
26: call function noellipse-noellipse character_test
27: post call
28: empty
29: return
30: function end char_main
0: n = 0
1: call header
2: parameter string_Please20write20a20number2028not20620or207293A20#, offset 6
3: call function noellipse-ellipse printf, extra 0
4: post call
5: call header
6: parameter string_25i#, offset 6
7: £temporary191 = &n
8: parameter £temporary191, offset 8
9: call function noellipse-ellipse scanf, extra 0
10: post call
11: if n != 6 goto 26
12: goto 14
13: check track map float stack
14: call header
15: parameter stderr, offset 6
16: parameter string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#, offset 8
17: parameter string_n20213D206#, offset 10
18: parameter string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CMain2Ec#, offset 12
19: parameter 848, offset 14
20: call function noellipse-ellipse fprintf, extra 0
21: post call
22: call header
23: call function noellipse-noellipse abort
24: post call
25: goto 26
26: empty
27: call header
28: parameter n, offset 6
29: call function noellipse-noellipse assert_test2
30: post call
31: empty
32: return
33: function end assert_test
0: if n != 7 goto 15
1: goto 3
2: check track map float stack
3: call header
4: parameter stderr, offset 6
5: parameter string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#, offset 8
6: parameter string_n20213D207#, offset 10
7: parameter string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CMain2Ec#, offset 12
8: parameter 853, offset 14
9: call function noellipse-ellipse fprintf, extra 0
10: post call
11: call header
12: call function noellipse-noellipse abort
13: post call
14: goto 15
15: empty
16: empty
17: return
18: function end assert_test2
0: if memorySize >= 0 goto 15
1: goto 3
2: check track map float stack
3: call header
4: parameter stderr, offset 6
5: parameter string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#, offset 8
6: parameter string_memorySize203E3D200#, offset 10
7: parameter string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CMalloc2Ec#, offset 12
8: parameter 25, offset 14
9: call function noellipse-ellipse fprintf, extra 0
10: post call
11: call header
12: call function noellipse-noellipse abort
13: post call
14: goto 15
15: empty
16: if memorySize == 0 goto 19
17: goto 22
18: check track map float stack
19: return_value = 0
20: return
21: goto 22
22: £temporary222 = int_to_int memorySize (Signed_Int -> Unsigned_Int)
23: £temporary223 = 4 + £temporary222
24: newBlockSize = £temporary223
25: minGap = 0
26: lastAddress = 65528
27: minBlockPtr = 0
28: minPrevBlockPtr = 0
29: prevBlockPtr = 0
30: currBlockPtr = g_firstBlockPtr
31: if currBlockPtr != 0 goto 34
32: goto 57
33: check track map float stack
34: £temporary225 = int_to_int currBlockPtr (Pointer -> Unsigned_Int)
35: currAddress = £temporary225
36: £temporary226 -> currBlockPtr = *currBlockPtr
37: £temporary227 = currAddress + £temporary226 -> currBlockPtr
38: £temporary228 = £temporary227 + 4
39: £temporary229 = lastAddress - £temporary228
40: currGap = £temporary229
41: if newBlockSize <= currGap goto 43
42: goto 52
43: if minGap == 0 goto 48
44: goto 45
45: if currGap < minGap goto 48
46: goto 52
47: check track map float stack
48: minGap = currGap
49: minBlockPtr = currBlockPtr
50: minPrevBlockPtr = prevBlockPtr
51: goto 52
52: lastAddress = currAddress
53: prevBlockPtr = currBlockPtr
54: £temporary235 -> currBlockPtr = *currBlockPtr, offset 2
55: currBlockPtr = £temporary235 -> currBlockPtr
56: goto 31
57: if minBlockPtr != 0 goto 60
58: goto 84
59: check track map float stack
60: £temporary237 = int_to_int minBlockPtr (Pointer -> Unsigned_Int)
61: £temporary238 -> minBlockPtr = *minBlockPtr
62: £temporary239 = £temporary237 + £temporary238 -> minBlockPtr
63: £temporary240 = £temporary239 + 4
64: newAddress = £temporary240
65: £temporary241 = int_to_int newAddress (Unsigned_Int -> Pointer)
66: newBlockPtr = £temporary241
67: £temporary242 -> newBlockPtr = *newBlockPtr
68: £temporary242 -> newBlockPtr = memorySize
69: £temporary243 -> newBlockPtr = *newBlockPtr, offset 2
70: £temporary243 -> newBlockPtr = minBlockPtr
71: if minPrevBlockPtr != 0 goto 74
72: goto 77
73: check track map float stack
74: £temporary245 -> minPrevBlockPtr = *minPrevBlockPtr, offset 2
75: £temporary245 -> minPrevBlockPtr = newBlockPtr
76: goto 79
77: g_firstBlockPtr = newBlockPtr
78: goto 79
79: £temporary246 = newAddress + 4
80: £temporary247 = int_to_int £temporary246 (Unsigned_Int -> Pointer)
81: return_value = £temporary247
82: return
83: goto 111
84: £temporary248 = lastAddress - newBlockSize
85: newAddress = £temporary248
86: £temporary249 = bp
87: stackTop = £temporary249
88: if stackTop <= newAddress goto 91
89: goto 111
90: check track map float stack
91: £temporary251 = int_to_int newAddress (Unsigned_Int -> Pointer)
92: newBlockPtr = £temporary251
93: £temporary252 -> newBlockPtr = *newBlockPtr
94: £temporary252 -> newBlockPtr = memorySize
95: £temporary253 -> newBlockPtr = *newBlockPtr, offset 2
96: £temporary253 -> newBlockPtr = 0
97: if prevBlockPtr != 0 goto 100
98: goto 103
99: check track map float stack
100: £temporary255 -> prevBlockPtr = *prevBlockPtr, offset 2
101: £temporary255 -> prevBlockPtr = newBlockPtr
102: goto 105
103: g_firstBlockPtr = newBlockPtr
104: goto 105
105: £temporary256 = newAddress + 4
106: £temporary257 = int_to_int £temporary256 (Unsigned_Int -> Pointer)
107: return_value = £temporary257
108: return
109: goto 111
110: goto 111
111: return_value = 0
112: return
113: empty
114: return
115: function end malloc
0: call header
1: £temporary263 = number * size
2: parameter £temporary263, offset 6
3: call function noellipse-noellipse malloc
4: post call
5: £temporary264 = return_value
6: pointer = £temporary264
7: if pointer != 0 goto 10
8: goto 17
9: check track map float stack
10: call header
11: parameter pointer, offset 6
12: parameter 0, offset 8
13: parameter size, offset 10
14: call function noellipse-noellipse memset
15: post call
16: goto 17
17: return_value = pointer
18: return
19: empty
20: return
21: function end calloc
0: if freeMemoryPtr == 0 goto 3
1: goto 5
2: check track map float stack
3: return
4: goto 5
5: £temporary272 = int_to_int freeMemoryPtr (Pointer -> Unsigned_Int)
6: £temporary273 = £temporary272 - 4
7: £temporary274 = int_to_int £temporary273 (Unsigned_Int -> Pointer)
8: freeBlockPtr = £temporary274
9: prevBlockPtr = 0
10: currBlockPtr = g_firstBlockPtr
11: if currBlockPtr != 0 goto 14
12: goto 50
13: check track map float stack
14: if currBlockPtr == freeBlockPtr goto 17
15: goto 46
16: check track map float stack
17: if prevBlockPtr == 0 goto 19
18: goto 25
19: £temporary278 -> currBlockPtr = *currBlockPtr, offset 2
20: if £temporary278 -> currBlockPtr == 0 goto 23
21: goto 25
22: check track map float stack
23: g_firstBlockPtr = 0
24: goto 44
25: if prevBlockPtr == 0 goto 28
26: goto 31
27: check track map float stack
28: £temporary282 -> currBlockPtr = *currBlockPtr, offset 2
29: g_firstBlockPtr = £temporary282 -> currBlockPtr
30: goto 44
31: £temporary283 -> currBlockPtr = *currBlockPtr, offset 2
32: if £temporary283 -> currBlockPtr == 0 goto 35
33: goto 38
34: check track map float stack
35: £temporary285 -> prevBlockPtr = *prevBlockPtr, offset 2
36: £temporary285 -> prevBlockPtr = 0
37: goto 44
38: £temporary286 -> prevBlockPtr = *prevBlockPtr, offset 2
39: £temporary287 -> currBlockPtr = *currBlockPtr, offset 2
40: £temporary286 -> prevBlockPtr = £temporary287 -> currBlockPtr
41: goto 44
42: goto 44
43: goto 44
44: return
45: goto 46
46: prevBlockPtr = currBlockPtr
47: £temporary288 -> currBlockPtr = *currBlockPtr, offset 2
48: currBlockPtr = £temporary288 -> currBlockPtr
49: goto 11
50: empty
51: return
52: function end free
0: if newMemorySize >= 0 goto 15
1: goto 3
2: check track map float stack
3: call header
4: parameter stderr, offset 6
5: parameter string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#, offset 8
6: parameter string_newMemorySize203E3D200#, offset 10
7: parameter string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CMalloc2Ec#, offset 12
8: parameter 259, offset 14
9: call function noellipse-ellipse fprintf, extra 0
10: post call
11: call header
12: call function noellipse-noellipse abort
13: post call
14: goto 15
15: empty
16: if oldMemoryPtr != 0 goto 33
17: goto 18
18: if newMemorySize > 0 goto 33
19: goto 21
20: check track map float stack
21: call header
22: parameter stderr, offset 6
23: parameter string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#, offset 8
24: parameter string_2820oldMemoryPtr20213D20NULL2029207C7C202820newMemorySize203E2002029#, offset 10
25: parameter string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CMalloc2Ec#, offset 12
26: parameter 260, offset 14
27: call function noellipse-ellipse fprintf, extra 0
28: post call
29: call header
30: call function noellipse-noellipse abort
31: post call
32: goto 33
33: empty
34: if oldMemoryPtr == 0 goto 37
35: goto 45
36: check track map float stack
37: call header
38: parameter newMemorySize, offset 6
39: call function noellipse-noellipse malloc
40: post call
41: £temporary300 = return_value
42: return_value = £temporary300
43: return
44: goto 45
45: if newMemorySize == 0 goto 48
46: goto 55
47: check track map float stack
48: call header
49: parameter oldMemoryPtr, offset 6
50: call function noellipse-noellipse free
51: post call
52: return_value = 0
53: return
54: goto 55
55: £temporary303 = int_to_int newMemorySize (Signed_Int -> Unsigned_Int)
56: £temporary304 = £temporary303 + 4
57: newBlockSize = £temporary304
58: £temporary305 = int_to_int oldMemoryPtr (Pointer -> Unsigned_Int)
59: £temporary306 = £temporary305 - 4
60: £temporary307 = int_to_int £temporary306 (Unsigned_Int -> Pointer)
61: oldBlockPtr = £temporary307
62: £temporary308 -> oldBlockPtr = *oldBlockPtr
63: if newBlockSize <= £temporary308 -> oldBlockPtr goto 66
64: goto 71
65: check track map float stack
66: £temporary310 -> oldBlockPtr = *oldBlockPtr
67: £temporary310 -> oldBlockPtr = newBlockSize
68: return_value = oldMemoryPtr
69: return
70: goto 71
71: lastAddress = 65528
72: currBlockPtr = g_firstBlockPtr
73: if currBlockPtr != 0 goto 76
74: goto 98
75: check track map float stack
76: if currBlockPtr == oldBlockPtr goto 79
77: goto 93
78: check track map float stack
79: £temporary313 = int_to_int currBlockPtr (Pointer -> Unsigned_Int)
80: £temporary314 = lastAddress - £temporary313
81: availableSize = £temporary314
82: if availableSize >= newBlockSize goto 85
83: goto 90
84: check track map float stack
85: £temporary316 -> oldBlockPtr = *oldBlockPtr
86: £temporary316 -> oldBlockPtr = newBlockSize
87: return_value = oldMemoryPtr
88: return
89: goto 93
90: goto 98
91: goto 93
92: goto 93
93: £temporary317 = int_to_int currBlockPtr (Pointer -> Unsigned_Int)
94: lastAddress = £temporary317
95: £temporary318 -> currBlockPtr = *currBlockPtr, offset 2
96: currBlockPtr = £temporary318 -> currBlockPtr
97: goto 73
98: call header
99: parameter newMemorySize, offset 6
100: call function noellipse-noellipse malloc
101: post call
102: £temporary319 = return_value
103: newMemoryPtr = £temporary319
104: if newMemoryPtr != 0 goto 107
105: goto 120
106: check track map float stack
107: call header
108: parameter newMemoryPtr, offset 6
109: parameter oldMemoryPtr, offset 8
110: parameter newMemorySize, offset 10
111: call function noellipse-noellipse memcpy
112: post call
113: call header
114: parameter oldMemoryPtr, offset 6
115: call function noellipse-noellipse free
116: post call
117: return_value = newMemoryPtr
118: return
119: goto 120
120: return_value = 0
121: return
122: empty
123: return
124: function end realloc
0: currBlockPtr = g_firstBlockPtr
1: call header
2: parameter string_Heap3A0A#, offset 6
3: call function noellipse-ellipse printf, extra 0
4: post call
5: if currBlockPtr != 0 goto 8
6: goto 19
7: check track map float stack
8: call header
9: parameter string_2020Address2025u2C20Size2025u0A#, offset 6
10: £temporary342 = int_to_int currBlockPtr (Pointer -> Unsigned_Int)
11: parameter £temporary342, offset 8
12: £temporary343 -> currBlockPtr = *currBlockPtr
13: parameter £temporary343 -> currBlockPtr, offset 10
14: call function noellipse-ellipse printf, extra 0
15: post call
16: £temporary345 -> currBlockPtr = *currBlockPtr, offset 2
17: currBlockPtr = £temporary345 -> currBlockPtr
18: goto 5
19: call header
20: parameter string_0A#, offset 6
21: call function noellipse-ellipse printf, extra 0
22: post call
23: empty
24: return
25: function end print_heap
0: call header
1: call function noellipse-noellipse localeconv
2: post call
3: £temporary352 = return_value
4: localeConvPtr = £temporary352
5: if localeConvPtr != 0 goto 8
6: goto 24
7: check track map float stack
8: call header
9: £temporary354 -> localeConvPtr = *localeConvPtr, offset 12
10: parameter £temporary354 -> localeConvPtr, offset 6
11: parameter c, offset 8
12: call function noellipse-noellipse strchr
13: post call
14: £temporary355 = return_value
15: if £temporary355 != 0 goto 17
16: goto 19
17: £temporary357 = 1
18: goto 20
19: £temporary357 = 0
20: empty
21: return_value = £temporary357
22: return
23: goto 35
24: if c >= 97 goto 26
25: goto 30
26: if c <= 122 goto 28
27: goto 30
28: £temporary361 = 1
29: goto 31
30: £temporary361 = 0
31: empty
32: return_value = £temporary361
33: return
34: goto 35
35: empty
36: return
37: function end islower
0: if c >= 97 goto 2
1: goto 6
2: if c <= 122 goto 4
3: goto 6
4: £temporary367 = 1
5: goto 7
6: £temporary367 = 0
7: empty
8: return_value = £temporary367
9: return
10: empty
11: return
12: function end islowerX
0: if c >= 65 goto 2
1: goto 6
2: if c <= 90 goto 4
3: goto 6
4: £temporary371 = 1
5: goto 7
6: £temporary371 = 0
7: empty
8: return_value = £temporary371
9: return
10: empty
11: return
12: function end isupperX
0: call header
1: call function noellipse-noellipse localeconv
2: post call
3: £temporary372 = return_value
4: localeConvPtr = £temporary372
5: if localeConvPtr != 0 goto 8
6: goto 24
7: check track map float stack
8: call header
9: £temporary374 -> localeConvPtr = *localeConvPtr, offset 14
10: parameter £temporary374 -> localeConvPtr, offset 6
11: parameter c, offset 8
12: call function noellipse-noellipse strchr
13: post call
14: £temporary375 = return_value
15: if £temporary375 != 0 goto 17
16: goto 19
17: £temporary377 = 1
18: goto 20
19: £temporary377 = 0
20: empty
21: return_value = £temporary377
22: return
23: goto 35
24: if c >= 65 goto 26
25: goto 30
26: if c <= 90 goto 28
27: goto 30
28: £temporary381 = 1
29: goto 31
30: £temporary381 = 0
31: empty
32: return_value = £temporary381
33: return
34: goto 35
35: empty
36: return
37: function end isupper
0: call header
1: parameter c, offset 6
2: call function noellipse-noellipse islower
3: post call
4: £temporary384 = return_value
5: if £temporary384 != 0 goto 14
6: goto 7
7: call header
8: parameter c, offset 6
9: call function noellipse-noellipse isupper
10: post call
11: £temporary385 = return_value
12: if £temporary385 != 0 goto 14
13: goto 16
14: £temporary389 = 1
15: goto 17
16: £temporary389 = 0
17: empty
18: return_value = £temporary389
19: return
20: empty
21: return
22: function end isalpha
0: if c >= 48 goto 2
1: goto 6
2: if c <= 57 goto 4
3: goto 6
4: £temporary395 = 1
5: goto 7
6: £temporary395 = 0
7: empty
8: return_value = £temporary395
9: return
10: empty
11: return
12: function end isdigit
0: call header
1: parameter c, offset 6
2: call function noellipse-noellipse isalpha
3: post call
4: £temporary396 = return_value
5: if £temporary396 != 0 goto 14
6: goto 7
7: call header
8: parameter c, offset 6
9: call function noellipse-noellipse isdigit
10: post call
11: £temporary397 = return_value
12: if £temporary397 != 0 goto 14
13: goto 16
14: £temporary401 = 1
15: goto 17
16: £temporary401 = 0
17: empty
18: return_value = £temporary401
19: return
20: empty
21: return
22: function end isalnum
0: call header
1: parameter c, offset 6
2: call function noellipse-noellipse isdigit
3: post call
4: £temporary404 = return_value
5: if £temporary404 != 0 goto 15
6: goto 7
7: if c >= 97 goto 9
8: goto 11
9: if c <= 102 goto 15
10: goto 11
11: if c >= 65 goto 13
12: goto 17
13: if c <= 70 goto 15
14: goto 17
15: £temporary414 = 1
16: goto 18
17: £temporary414 = 0
18: empty
19: return_value = £temporary414
20: return
21: empty
22: return
23: function end isxdigit
0: if c >= 32 goto 2
1: goto 6
2: if c <= 126 goto 4
3: goto 6
4: £temporary419 = 1
5: goto 7
6: £temporary419 = 0
7: empty
8: return_value = £temporary419
9: return
10: empty
11: return
12: function end isgraph
0: call header
1: parameter c, offset 6
2: call function noellipse-noellipse isgraph
3: post call
4: £temporary420 = return_value
5: if £temporary420 != 0 goto 7
6: goto 11
7: if c != 32 goto 9
8: goto 11
9: £temporary424 = 1
10: goto 12
11: £temporary424 = 0
12: empty
13: return_value = £temporary424
14: return
15: empty
16: return
17: function end isprint
0: call header
1: parameter c, offset 6
2: call function noellipse-noellipse isgraph
3: post call
4: £temporary426 = return_value
5: if £temporary426 != 0 goto 7
6: goto 16
7: call header
8: parameter c, offset 6
9: call function noellipse-noellipse isalnum
10: post call
11: £temporary428 = return_value
12: if £temporary428 != 0 goto 16
13: goto 14
14: £temporary432 = 1
15: goto 17
16: £temporary432 = 0
17: empty
18: return_value = £temporary432
19: return
20: empty
21: return
22: function end ispunct
0: call header
1: parameter c, offset 6
2: call function noellipse-noellipse isprint
3: post call
4: £temporary435 = return_value
5: if £temporary435 != 0 goto 9
6: goto 7
7: £temporary438 = 1
8: goto 10
9: £temporary438 = 0
10: empty
11: return_value = £temporary438
12: return
13: empty
14: return
15: function end iscntrl
0: if c == 32 goto 12
1: goto 2
2: if c == 12 goto 12
3: goto 4
4: if c == 10 goto 12
5: goto 6
6: if c == 13 goto 12
7: goto 8
8: if c == 9 goto 12
9: goto 10
10: if c == 11 goto 12
11: goto 14
12: £temporary451 = 1
13: goto 15
14: £temporary451 = 0
15: empty
16: return_value = £temporary451
17: return
18: empty
19: return
20: function end isspace
0: call header
1: parameter c, offset 6
2: call function noellipse-noellipse isupper
3: post call
4: £temporary452 = return_value
5: if £temporary452 != 0 goto 7
6: goto 11
7: empty
8: £temporary453 = c + 32
9: £temporary458 = £temporary453
10: goto 13
11: empty
12: £temporary458 = c
13: empty
14: return_value = £temporary458
15: return
16: empty
17: return
18: function end tolowerX
0: call header
1: parameter c, offset 6
2: call function noellipse-noellipse isupper
3: post call
4: £temporary460 = return_value
5: if £temporary460 != 0 goto 8
6: goto 39
7: check track map float stack
8: call header
9: call function noellipse-noellipse localeconv
10: post call
11: £temporary461 = return_value
12: localeConvPtr = £temporary461
13: if localeConvPtr != 0 goto 16
14: goto 34
15: check track map float stack
16: £temporary463 -> localeConvPtr = *localeConvPtr, offset 12
17: lowerCase = £temporary463 -> localeConvPtr
18: £temporary464 -> localeConvPtr = *localeConvPtr, offset 14
19: upperCase = £temporary464 -> localeConvPtr
20: call header
21: parameter upperCase, offset 6
22: parameter c, offset 8
23: call function noellipse-noellipse strchr
24: post call
25: £temporary465 = return_value
26: £temporary466 = £temporary465 - upperCase
27: index = £temporary466
28: £temporary468 = lowerCase + index
29: £temporary467 -> £temporary468 = *£temporary468
30: £temporary469 = int_to_int £temporary467 -> £temporary468 (Signed_Char -> Signed_Int)
31: return_value = £temporary469
32: return
33: goto 42
34: £temporary470 = c + 32
35: return_value = £temporary470
36: return
37: goto 42
38: goto 42
39: return_value = c
40: return
41: goto 42
42: empty
43: return
44: function end tolower
0: call header
1: parameter c, offset 6
2: call function noellipse-noellipse islower
3: post call
4: £temporary475 = return_value
5: if £temporary475 != 0 goto 7
6: goto 11
7: empty
8: £temporary476 = c - 32
9: £temporary481 = £temporary476
10: goto 13
11: empty
12: £temporary481 = c
13: empty
14: return_value = £temporary481
15: return
16: empty
17: return
18: function end toupperX
0: call header
1: parameter c, offset 6
2: call function noellipse-noellipse islower
3: post call
4: £temporary483 = return_value
5: if £temporary483 != 0 goto 8
6: goto 39
7: check track map float stack
8: call header
9: call function noellipse-noellipse localeconv
10: post call
11: £temporary484 = return_value
12: localeConvPtr = £temporary484
13: if localeConvPtr != 0 goto 16
14: goto 34
15: check track map float stack
16: £temporary486 -> localeConvPtr = *localeConvPtr, offset 12
17: lowerCase = £temporary486 -> localeConvPtr
18: £temporary487 -> localeConvPtr = *localeConvPtr, offset 14
19: upperCase = £temporary487 -> localeConvPtr
20: call header
21: parameter lowerCase, offset 6
22: parameter c, offset 8
23: call function noellipse-noellipse strchr
24: post call
25: £temporary488 = return_value
26: £temporary489 = £temporary488 - lowerCase
27: index = £temporary489
28: £temporary491 = upperCase + index
29: £temporary490 -> £temporary491 = *£temporary491
30: £temporary492 = int_to_int £temporary490 -> £temporary491 (Signed_Char -> Signed_Int)
31: return_value = £temporary492
32: return
33: goto 42
34: £temporary493 = c - 32
35: return_value = £temporary493
36: return
37: goto 42
38: goto 42
39: return_value = c
40: return
41: goto 42
42: empty
43: return
44: function end toupper
0: if g_currStructPtr != 0 goto 2
1: goto 6
2: empty
3: £temporary501 -> g_currStructPtr = *g_currStructPtr
4: £temporary505 = £temporary501 -> g_currStructPtr
5: goto 8
6: empty
7: £temporary505 = 0
8: empty
9: oldName = £temporary505
10: g_currStructPtr = 0
11: if newName != 0 goto 14
12: goto 43
13: check track map float stack
14: index = 0
15: empty
16: if index < sSize goto 19
17: goto 43
18: check track map float stack
19: empty
20: call header
21: parameter newName, offset 6
22: £temporary510 = index * 4
23: £temporary511 = sArray + £temporary510
24: £temporary509 -> £temporary511 = *£temporary511
25: parameter £temporary509.name$0 -> £temporary511, offset 8
26: call function noellipse-noellipse strcmp
27: post call
28: £temporary512 = return_value
29: if £temporary512 == 0 goto 32
30: goto 39
31: check track map float stack
32: £temporary515 = index * 4
33: £temporary516 = sArray + £temporary515
34: £temporary514 -> £temporary516 = *£temporary516
35: £temporary517 = &£temporary514 -> £temporary516
36: g_currStructPtr = £temporary517
37: goto 43
38: goto 39
39: empty
40: index = index + 1
41: goto 15
42: goto 43
43: return_value = oldName
44: return
45: empty
46: return
47: function end setlocale
0: if g_currStructPtr != 0 goto 2
1: goto 6
2: empty
3: £temporary521 -> g_currStructPtr = *g_currStructPtr, offset 2
4: £temporary525 = £temporary521 -> g_currStructPtr
5: goto 8
6: empty
7: £temporary525 = 0
8: empty
9: return_value = £temporary525
10: return
11: empty
12: return
13: function end localeconv
0: push 1
1: pop float index
2: push 1
3: pop float sum
4: push 1
5: pop float faculty
6: push float x
7: pop float power
8: push float term
9: pop float empty X
10: push float power
11: push float faculty
12: £temporary526 = power / faculty
13: top float term
14: pop float empty X
15: push float sum
16: push float term
17: £temporary527 = sum + term
18: top float sum
19: pop float empty X
20: push float power
21: push float x
22: £temporary528 = power * x
23: top float power
24: pop float empty X
25: push float faculty
26: push float index
27: push 1
28: index = index + 1
29: top float index
30: £temporary530 = faculty * £temporary529
31: top float faculty
32: pop float empty X
33: call header
34: push float term
35: parameter term, offset 6
36: call function noellipse-noellipse fabs
37: post call
38: £temporary531 = return_value
39: push float 0.000000001
40: if £temporary531 >= 0.000000001 goto 8
41: goto 44
42: check track map float stack
43: goto 8
44: push float sum
45: return_value = sum
46: return
47: empty
48: return
49: function end exp
0: push float x
1: push 0
2: if x > 0 goto 5
3: goto 105
4: check track map float stack
5: n = 0
6: push float x
7: push 1
8: if x > 1 goto 11
9: goto 24
10: check track map float stack
11: push float x
12: push 1
13: if x > 1 goto 16
14: goto 47
15: check track map float stack
16: push float x
17: push float 2.7182818284590452353602874
18: £temporary537 = x / 2.7182818284590452353602874
19: top float x
20: pop float empty X
21: n = n + 1
22: goto 11
23: goto 47
24: push float x
25: push float 2.7182818284590452353602874
26: pop float empty X
27: push float 0.3678794411714423215955237798
28: if x < 0.3678794411714423215955237798 goto 31
29: goto 47
30: check track map float stack
31: push float x
32: push float 2.7182818284590452353602874
33: pop float empty X
34: push float 0.3678794411714423215955237798
35: if x < 0.3678794411714423215955237798 goto 38
36: goto 47
37: check track map float stack
38: push float x
39: push float 2.7182818284590452353602874
40: £temporary541 = x * 2.7182818284590452353602874
41: top float x
42: pop float empty X
43: n = n - 1
44: goto 31
45: goto 47
46: goto 47
47: push 1
48: pop float index
49: push 0
50: pop float sum
51: push 1
52: pop float sign
53: push float x
54: push 1
55: £temporary543 = x - 1
56: pop float x_minus_1
57: push float x_minus_1
58: pop float power
59: push float term
60: pop float empty X
61: push float sign
62: push float power
63: £temporary544 = sign * power
64: push float index
65: push 1
66: index = index + 1
67: top float index
68: push 1
69: index = index - 1
70: £temporary546 = £temporary544 / £temporary545
71: top float term
72: pop float empty X
73: push float sum
74: push float term
75: £temporary547 = sum + term
76: top float sum
77: pop float empty X
78: push float power
79: push float x_minus_1
80: £temporary548 = power * x_minus_1
81: top float power
82: pop float empty X
83: push float sign
84: push float -1.0
85: £temporary549 = sign * -1.0
86: top float sign
87: pop float empty X
88: call header
89: push float term
90: parameter term, offset 6
91: call function noellipse-noellipse fabs
92: post call
93: £temporary550 = return_value
94: push float 0.000000001
95: if £temporary550 >= 0.000000001 goto 59
96: goto 99
97: check track map float stack
98: goto 59
99: push float sum
100: £temporary552 = int_to_float n (Signed_Int -> Double)
101: £temporary553 = sum + £temporary552
102: return_value = £temporary553
103: return
104: goto 110
105: errno = 6
106: push 0
107: return_value = 0
108: return
109: goto 110
110: empty
111: return
112: function end log
0: call header
1: push float x
2: parameter x, offset 6
3: call function noellipse-noellipse log
4: post call
5: £temporary555 = return_value
6: push float 2.3025850929940456840179914
7: £temporary556 = £temporary555 / 2.3025850929940456840179914
8: return_value = £temporary556
9: return
10: empty
11: return
12: function end log10
0: push float x
1: push 0
2: if x > 0 goto 5
3: goto 21
4: check track map float stack
5: call header
6: push float y
7: call header
8: push float x
9: parameter x, offset 6
10: call function noellipse-noellipse log
11: post call
12: £temporary559 = return_value
13: £temporary560 = y * £temporary559
14: parameter £temporary560, offset 6
15: call function noellipse-noellipse exp
16: post call
17: £temporary561 = return_value
18: return_value = £temporary561
19: return
20: goto 103
21: push float x
22: push 0
23: if x == 0 goto 25
24: goto 34
25: push float y
26: push 0
27: if y > 0 goto 30
28: goto 34
29: check track map float stack
30: push 0
31: return_value = 0
32: return
33: goto 103
34: push float x
35: push 0
36: if x < 0 goto 38
37: goto 96
38: call header
39: push float y
40: parameter y, offset 6
41: call function noellipse-noellipse floor
42: post call
43: £temporary566 = return_value
44: call header
45: push float y
46: parameter y, offset 6
47: call function noellipse-noellipse ceil
48: post call
49: £temporary567 = return_value
50: if £temporary566 == £temporary567 goto 53
51: goto 96
52: check track map float stack
53: push float y
54: £temporary570 = float_to_int y (Double -> Signed_Long_Int)
55: long_y = £temporary570
56: £temporary571 = long_y % 2
57: if £temporary571 == 0 goto 60
58: goto 77
59: check track map float stack
60: call header
61: push float y
62: call header
63: push float x
64: £temporary573 = -x
65: parameter £temporary573, offset 6
66: call function noellipse-noellipse log
67: post call
68: £temporary574 = return_value
69: £temporary575 = y * £temporary574
70: parameter £temporary575, offset 6
71: call function noellipse-noellipse exp
72: post call
73: £temporary576 = return_value
74: return_value = £temporary576
75: return
76: goto 103
77: call header
78: push float y
79: call header
80: push float x
81: £temporary577 = -x
82: parameter £temporary577, offset 6
83: call function noellipse-noellipse log
84: post call
85: £temporary578 = return_value
86: £temporary579 = y * £temporary578
87: parameter £temporary579, offset 6
88: call function noellipse-noellipse exp
89: post call
90: £temporary580 = return_value
91: £temporary581 = -£temporary580
92: return_value = £temporary581
93: return
94: goto 103
95: goto 103
96: errno = 6
97: push 0
98: return_value = 0
99: return
100: goto 103
101: goto 103
102: goto 103
103: empty
104: return
105: function end pow
0: push float x
1: call header
2: push float 2
3: parameter 2, offset 6
4: £temporary590 = int_to_float n (Signed_Int -> Double)
5: parameter £temporary590, offset 14
6: call function noellipse-noellipse pow
7: post call
8: £temporary591 = return_value
9: £temporary592 = x * £temporary591
10: return_value = £temporary592
11: return
12: empty
13: return
14: function end ldexp
0: call header
1: push float x
2: parameter x, offset 6
3: call function noellipse-noellipse log
4: post call
5: £temporary595 = return_value
6: push float 0.6931471805599453094172321
7: £temporary596 = £temporary595 / 0.6931471805599453094172321
8: £temporary597 = float_to_int £temporary596 (Double -> Signed_Int)
9: return_value = £temporary597
10: return
11: empty
12: return
13: function end log2
0: push float x
1: push 0
2: if x != 0 goto 5
3: goto 38
4: check track map float stack
5: call header
6: call header
7: push float x
8: parameter x, offset 6
9: call function noellipse-noellipse fabs
10: post call
11: £temporary600 = return_value
12: parameter £temporary600, offset 6
13: call function noellipse-noellipse log2
14: post call
15: £temporary601 = return_value
16: £temporary602 = £temporary601 + 1
17: £temporary603 = int_to_int £temporary602 (Signed_Int -> Signed_Int)
18: exponent = £temporary603
19: if p != 0 goto 22
20: goto 25
21: check track map float stack
22: £temporary605 -> p = *p
23: £temporary605 -> p = exponent
24: goto 25
25: push float x
26: call header
27: push float 2
28: parameter 2, offset 6
29: £temporary606 = int_to_float exponent (Signed_Int -> Double)
30: parameter £temporary606, offset 14
31: call function noellipse-noellipse pow
32: post call
33: £temporary607 = return_value
34: £temporary608 = x / £temporary607
35: return_value = £temporary608
36: return
37: goto 48
38: if p != 0 goto 41
39: goto 44
40: check track map float stack
41: £temporary610 -> p = *p
42: £temporary610 -> p = 0
43: goto 44
44: push 0
45: return_value = 0
46: return
47: goto 48
48: empty
49: return
50: function end frexp
0: push float x
1: push 0
2: if x >= 0 goto 5
3: goto 40
4: check track map float stack
5: push 1
6: pop float root_i_plus_1
7: push float root_i
8: pop float empty X
9: push float root_i_plus_1
10: top float root_i
11: pop float empty X
12: push float root_i_plus_1
13: pop float empty X
14: push float root_i
15: push float x
16: push float root_i
17: £temporary616 = x / root_i
18: £temporary617 = root_i + £temporary616
19: push float 2
20: £temporary618 = £temporary617 / 2
21: top float root_i_plus_1
22: pop float empty X
23: call header
24: push float root_i_plus_1
25: push float root_i
26: £temporary619 = root_i_plus_1 - root_i
27: parameter £temporary619, offset 6
28: call function noellipse-noellipse fabs
29: post call
30: £temporary620 = return_value
31: push float 0.000000001
32: if £temporary620 >= 0.000000001 goto 7
33: goto 36
34: check track map float stack
35: goto 7
36: push float root_i_plus_1
37: return_value = root_i_plus_1
38: return
39: goto 45
40: errno = 6
41: push 0
42: return_value = 0
43: return
44: goto 45
45: empty
46: return
47: function end sqrt
0: call header
1: push float x
2: parameter x, offset 6
3: call function noellipse-noellipse fabs
4: post call
5: £temporary623 = return_value
6: pop float abs_x
7: push float abs_x
8: £temporary624 = float_to_int abs_x (Double -> Signed_Long_Int)
9: £temporary625 = int_to_float £temporary624 (Signed_Long_Int -> Double)
10: pop float integral
11: push float abs_x
12: push float integral
13: £temporary626 = abs_x - integral
14: pop float fractional
15: if p != 0 goto 18
16: goto 36
17: check track map float stack
18: £temporary628 -> p = *p
19: push float £temporary628 -> p
20: pop float empty X
21: push float x
22: push 0
23: if x > 0 goto 25
24: goto 29
25: empty
26: push float fractional
27: decrease stack
28: goto 32
29: empty
30: push float fractional
31: £temporary630 = -fractional
32: empty
33: top float £temporary628 -> p
34: pop float empty X
35: goto 36
36: push float x
37: push 0
38: if x > 0 goto 40
39: goto 44
40: empty
41: push float integral
42: decrease stack
43: goto 47
44: empty
45: push float integral
46: £temporary636 = -integral
47: empty
48: return_value = £temporary640
49: return
50: empty
51: return
52: function end modf
0: push float y
1: push 0
2: if y != 0 goto 5
3: goto 35
4: check track map float stack
5: push float x
6: push float y
7: £temporary643 = x / y
8: pop float quotient
9: call header
10: push float quotient
11: push float quotient
12: £temporary644 = float_to_int quotient (Double -> Signed_Long_Int)
13: £temporary645 = int_to_float £temporary644 (Signed_Long_Int -> Double)
14: £temporary646 = quotient - £temporary645
15: parameter £temporary646, offset 6
16: call function noellipse-noellipse fabs
17: post call
18: £temporary647 = return_value
19: pop float remainder
20: push float x
21: push 0
22: if x > 0 goto 24
23: goto 28
24: empty
25: push float remainder
26: decrease stack
27: goto 31
28: empty
29: push float remainder
30: £temporary649 = -remainder
31: empty
32: return_value = £temporary653
33: return
34: goto 40
35: errno = 6
36: push 0
37: return_value = 0
38: return
39: goto 40
40: empty
41: return
42: function end fmod
0: call header
1: push float x
2: parameter x, offset 6
3: call function noellipse-noellipse fabs
4: post call
5: £temporary655 = return_value
6: push float 3.1415926535897932384626433
7: pop float empty X
8: push float 6.2831853071795864769252866
9: if £temporary655 > 6.2831853071795864769252866 goto 12
10: goto 27
11: check track map float stack
12: push float x
13: pop float empty X
14: call header
15: push float x
16: parameter x, offset 6
17: push float 3.1415926535897932384626433
18: pop float empty X
19: push float 6.2831853071795864769252866
20: parameter 6.2831853071795864769252866, offset 14
21: call function noellipse-noellipse fmod
22: post call
23: £temporary657 = return_value
24: top float x
25: pop float empty X
26: goto 27
27: push 1
28: pop float index
29: push 0
30: pop float sum
31: push 1
32: pop float sign
33: push float x
34: pop float power
35: push 1
36: pop float faculty
37: push float term
38: pop float empty X
39: push float sign
40: push float power
41: £temporary658 = sign * power
42: push float faculty
43: £temporary659 = £temporary658 / faculty
44: top float term
45: pop float empty X
46: push float sum
47: push float term
48: £temporary660 = sum + term
49: top float sum
50: pop float empty X
51: push float sign
52: push float -1
53: £temporary661 = sign * -1
54: top float sign
55: pop float empty X
56: push float power
57: push float x
58: push float x
59: £temporary662 = x * x
60: £temporary663 = power * £temporary662
61: top float power
62: pop float empty X
63: push float faculty
64: push float index
65: push 1
66: index = index + 1
67: top float index
68: push float index
69: push 1
70: index = index + 1
71: top float index
72: £temporary666 = £temporary664 * £temporary665
73: £temporary667 = faculty * £temporary666
74: top float faculty
75: pop float empty X
76: call header
77: push float term
78: parameter term, offset 6
79: call function noellipse-noellipse fabs
80: post call
81: £temporary668 = return_value
82: push float 0.000000001
83: if £temporary668 >= 0.000000001 goto 37
84: goto 87
85: check track map float stack
86: goto 37
87: push float sum
88: return_value = sum
89: return
90: empty
91: return
92: function end sin
0: call header
1: push float x
2: parameter x, offset 6
3: call function noellipse-noellipse fabs
4: post call
5: £temporary674 = return_value
6: push float 3.1415926535897932384626433
7: pop float empty X
8: push float 6.2831853071795864769252866
9: if £temporary674 > 6.2831853071795864769252866 goto 12
10: goto 27
11: check track map float stack
12: push float x
13: pop float empty X
14: call header
15: push float x
16: parameter x, offset 6
17: push float 3.1415926535897932384626433
18: pop float empty X
19: push float 6.2831853071795864769252866
20: parameter 6.2831853071795864769252866, offset 14
21: call function noellipse-noellipse fmod
22: post call
23: £temporary676 = return_value
24: top float x
25: pop float empty X
26: goto 27
27: push 0
28: pop float index
29: push 0
30: pop float sum
31: push 1
32: pop float sign
33: push 1
34: pop float power
35: push 1
36: pop float faculty
37: push float term
38: pop float empty X
39: push float sign
40: push float power
41: £temporary677 = sign * power
42: push float faculty
43: £temporary678 = £temporary677 / faculty
44: top float term
45: pop float empty X
46: push float sum
47: push float term
48: £temporary679 = sum + term
49: top float sum
50: pop float empty X
51: push float sign
52: push float -1
53: £temporary680 = sign * -1
54: top float sign
55: pop float empty X
56: push float power
57: push float x
58: push float x
59: £temporary681 = x * x
60: £temporary682 = power * £temporary681
61: top float power
62: pop float empty X
63: push float faculty
64: push float index
65: push 1
66: index = index + 1
67: top float index
68: push float index
69: push 1
70: index = index + 1
71: top float index
72: £temporary685 = £temporary683 * £temporary684
73: £temporary686 = faculty * £temporary685
74: top float faculty
75: pop float empty X
76: call header
77: push float term
78: parameter term, offset 6
79: call function noellipse-noellipse fabs
80: post call
81: £temporary687 = return_value
82: push float 0.000000001
83: if £temporary687 >= 0.000000001 goto 37
84: goto 87
85: check track map float stack
86: goto 37
87: push float sum
88: return_value = sum
89: return
90: empty
91: return
92: function end cos
0: call header
1: push float x
2: parameter x, offset 6
3: call function noellipse-noellipse cos
4: post call
5: £temporary693 = return_value
6: pop float cos_x
7: push float cos_x
8: push 0
9: if cos_x != 0 goto 12
10: goto 23
11: check track map float stack
12: call header
13: push float x
14: parameter x, offset 6
15: call function noellipse-noellipse sin
16: post call
17: £temporary695 = return_value
18: push float cos_x
19: £temporary696 = £temporary695 / cos_x
20: return_value = £temporary696
21: return
22: goto 28
23: errno = 6
24: push 0
25: return_value = 0
26: return
27: goto 28
28: empty
29: return
30: function end tan
0: push float x
1: push 1
2: if x == 1 goto 5
3: goto 11
4: check track map float stack
5: push float 3.1415926535897932384626433
6: pop float empty X
7: push float 1.57079632679489661923132165
8: return_value = 1.57079632679489661923132165
9: return
10: goto 61
11: push float x
12: push float -1
13: if x == -1 goto 16
14: goto 24
15: check track map float stack
16: push float 3.1415926535897932384626433
17: pop float empty X
18: push float -3.1415926535897932384626433
19: pop float empty X
20: push float -1.57079632679489661923132165
21: return_value = -1.57079632679489661923132165
22: return
23: goto 61
24: call header
25: push float x
26: parameter x, offset 6
27: call function noellipse-noellipse fabs
28: post call
29: £temporary701 = return_value
30: push 1
31: if £temporary701 < 1 goto 34
32: goto 54
33: check track map float stack
34: call header
35: push float x
36: call header
37: push 1
38: push float x
39: push float x
40: £temporary703 = x * x
41: £temporary704 = 1 - £temporary703
42: parameter £temporary704, offset 6
43: call function noellipse-noellipse sqrt
44: post call
45: £temporary705 = return_value
46: £temporary706 = x / £temporary705
47: parameter £temporary706, offset 6
48: call function noellipse-noellipse atan
49: post call
50: £temporary707 = return_value
51: return_value = £temporary707
52: return
53: goto 61
54: errno = 6
55: push 0
56: return_value = 0
57: return
58: goto 61
59: goto 61
60: goto 61
61: empty
62: return
63: function end asin
0: push float x
1: push 0
2: if x == 0 goto 5
3: goto 11
4: check track map float stack
5: push float 3.1415926535897932384626433
6: pop float empty X
7: push float 1.57079632679489661923132165
8: return_value = 1.57079632679489661923132165
9: return
10: goto 47
11: call header
12: push float x
13: parameter x, offset 6
14: call function noellipse-noellipse fabs
15: post call
16: £temporary712 = return_value
17: push 1
18: if £temporary712 < 1 goto 21
19: goto 41
20: check track map float stack
21: call header
22: push float x
23: call header
24: push 1
25: push float x
26: push float x
27: £temporary714 = x * x
28: £temporary715 = 1 - £temporary714
29: parameter £temporary715, offset 6
30: call function noellipse-noellipse sqrt
31: post call
32: £temporary716 = return_value
33: £temporary717 = x / £temporary716
34: parameter £temporary717, offset 6
35: call function noellipse-noellipse atan
36: post call
37: £temporary718 = return_value
38: return_value = £temporary718
39: return
40: goto 47
41: errno = 6
42: push 0
43: return_value = 0
44: return
45: goto 47
46: goto 47
47: empty
48: return
49: function end acos
0: push float x
1: push 0
2: if x < 0 goto 5
3: goto 16
4: check track map float stack
5: call header
6: push float x
7: £temporary723 = -x
8: parameter £temporary723, offset 6
9: call function noellipse-noellipse atan
10: post call
11: £temporary724 = return_value
12: £temporary725 = -£temporary724
13: return_value = £temporary725
14: return
15: goto 122
16: push float x
17: push 1
18: if x > 1 goto 21
19: goto 36
20: check track map float stack
21: push float 3.1415926535897932384626433
22: pop float empty X
23: push float 1.57079632679489661923132165
24: call header
25: push 1
26: push float x
27: £temporary727 = 1 / x
28: parameter £temporary727, offset 6
29: call function noellipse-noellipse atan
30: post call
31: £temporary728 = return_value
32: £temporary729 = 1.57079632679489661923132165 - £temporary728
33: return_value = £temporary729
34: return
35: goto 122
36: push float x
37: push float 0.5
38: if x > 0.5 goto 41
39: goto 65
40: check track map float stack
41: push float 2
42: call header
43: push float x
44: push 1
45: call header
46: push 1
47: push float x
48: push float x
49: £temporary731 = x * x
50: £temporary732 = 1 + £temporary731
51: parameter £temporary732, offset 6
52: call function noellipse-noellipse sqrt
53: post call
54: £temporary733 = return_value
55: £temporary734 = 1 + £temporary733
56: £temporary735 = x / £temporary734
57: parameter £temporary735, offset 6
58: call function noellipse-noellipse atan
59: post call
60: £temporary736 = return_value
61: £temporary737 = 2 * £temporary736
62: return_value = £temporary737
63: return
64: goto 122
65: push 0
66: pop float sum
67: push 1
68: pop float sign
69: push 1
70: pop float denominator
71: push float x
72: pop float product
73: push float term
74: pop float empty X
75: push float sign
76: push float product
77: £temporary738 = sign * product
78: push float denominator
79: £temporary739 = £temporary738 / denominator
80: top float term
81: pop float empty X
82: push float sum
83: push float term
84: £temporary740 = sum + term
85: top float sum
86: pop float empty X
87: push float sign
88: pop float empty X
89: push float sign
90: £temporary741 = -sign
91: top float sign
92: pop float empty X
93: push float product
94: push float x
95: push float x
96: £temporary742 = x * x
97: £temporary743 = product * £temporary742
98: top float product
99: pop float empty X
100: push float denominator
101: push float 2
102: £temporary744 = denominator + 2
103: top float denominator
104: pop float empty X
105: call header
106: push float term
107: parameter term, offset 6
108: call function noellipse-noellipse fabs
109: post call
110: £temporary745 = return_value
111: push float 0.000000001
112: if £temporary745 >= 0.000000001 goto 73
113: goto 116
114: check track map float stack
115: goto 73
116: push float sum
117: return_value = sum
118: return
119: goto 122
120: goto 122
121: goto 122
122: empty
123: return
124: function end atan
0: push float y
1: push 0
2: if y != 0 goto 5
3: goto 16
4: check track map float stack
5: call header
6: push float x
7: push float y
8: £temporary753 = x / y
9: parameter £temporary753, offset 6
10: call function noellipse-noellipse atan
11: post call
12: £temporary754 = return_value
13: return_value = £temporary754
14: return
15: goto 21
16: errno = 6
17: push 0
18: return_value = 0
19: return
20: goto 21
21: empty
22: return
23: function end atan2
0: call header
1: push float x
2: parameter x, offset 6
3: call function noellipse-noellipse exp
4: post call
5: £temporary756 = return_value
6: call header
7: push float x
8: £temporary757 = -x
9: parameter £temporary757, offset 6
10: call function noellipse-noellipse exp
11: post call
12: £temporary758 = return_value
13: £temporary759 = £temporary756 - £temporary758
14: push float 2
15: £temporary760 = £temporary759 / 2
16: return_value = £temporary760
17: return
18: empty
19: return
20: function end sinh
0: call header
1: push float x
2: parameter x, offset 6
3: call function noellipse-noellipse exp
4: post call
5: £temporary763 = return_value
6: call header
7: push float x
8: £temporary764 = -x
9: parameter £temporary764, offset 6
10: call function noellipse-noellipse exp
11: post call
12: £temporary765 = return_value
13: £temporary766 = £temporary763 + £temporary765
14: push float 2
15: £temporary767 = £temporary766 / 2
16: return_value = £temporary767
17: return
18: empty
19: return
20: function end cosh
0: call header
1: push float x
2: parameter x, offset 6
3: call function noellipse-noellipse sinh
4: post call
5: £temporary770 = return_value
6: call header
7: push float x
8: parameter x, offset 6
9: call function noellipse-noellipse cosh
10: post call
11: £temporary771 = return_value
12: £temporary772 = £temporary770 / £temporary771
13: return_value = £temporary772
14: return
15: empty
16: return
17: function end tanh
0: push float x
1: push 0
2: if x < 0 goto 5
3: goto 16
4: check track map float stack
5: call header
6: push float x
7: £temporary776 = -x
8: parameter £temporary776, offset 6
9: call function noellipse-noellipse ceil
10: post call
11: £temporary777 = return_value
12: £temporary778 = -£temporary777
13: return_value = £temporary778
14: return
15: goto 16
16: push float x
17: £temporary779 = float_to_int x (Double -> Signed_Long_Int)
18: £temporary780 = int_to_float £temporary779 (Signed_Long_Int -> Double)
19: return_value = £temporary780
20: return
21: empty
22: return
23: function end floor
0: push float x
1: push 0
2: if x < 0 goto 5
3: goto 16
4: check track map float stack
5: call header
6: push float x
7: £temporary783 = -x
8: parameter £temporary783, offset 6
9: call function noellipse-noellipse floor
10: post call
11: £temporary784 = return_value
12: £temporary785 = -£temporary784
13: return_value = £temporary785
14: return
15: goto 16
16: push float x
17: push float 0.999999999999
18: £temporary786 = x + 0.999999999999
19: £temporary787 = float_to_int £temporary786 (Double -> Signed_Long_Int)
20: £temporary788 = int_to_float £temporary787 (Signed_Long_Int -> Double)
21: return_value = £temporary788
22: return
23: empty
24: return
25: function end ceil
0: push float x
1: push 0
2: if x < 0 goto 4
3: goto 10
4: empty
5: push float x
6: push float 0.5
7: £temporary791 = x - 0.5
8: decrease stack
9: goto 14
10: empty
11: push float x
12: push float 0.5
13: £temporary792 = x + 0.5
14: empty
15: £temporary797 = float_to_int £temporary796 (Double -> Signed_Long_Int)
16: £temporary798 = int_to_float £temporary797 (Signed_Long_Int -> Double)
17: return_value = £temporary798
18: return
19: empty
20: return
21: function end round
0: push float x
1: push 0
2: if x < 0 goto 4
3: goto 9
4: empty
5: push float x
6: £temporary800 = -x
7: decrease stack
8: goto 11
9: empty
10: push float x
11: empty
12: return_value = £temporary804
13: return
14: empty
15: return
16: function end fabs
0: £temporary805 = bp
1: bp_pointer = £temporary805
2: £temporary806 -> buf = *buf
3: £temporary807 -> bp_pointer = *bp_pointer
4: £temporary806 -> buf = £temporary807 -> bp_pointer
5: £temporary808 -> buf = *buf, offset 2
6: £temporary809 -> bp_pointer = *bp_pointer, offset 2
7: £temporary808 -> buf = £temporary809 -> bp_pointer
8: £temporary810 -> buf = *buf, offset 4
9: £temporary811 -> bp_pointer = *bp_pointer, offset 4
10: £temporary810 -> buf = £temporary811 -> bp_pointer
11: return_value = 0
12: return
13: empty
14: return
15: function end setjmp
0: bx = return_value
1: £temporary814 -> buf = *buf
2: cx = £temporary814 -> buf
3: £temporary816 -> buf = *buf, offset 4
4: di = £temporary816 -> buf
5: £temporary818 -> buf = *buf, offset 2
6: bp = £temporary818 -> buf
7: jump to 
8: empty
9: return
10: function end longjmp
0: call header
1: parameter string_Signal2025i20function2025p0A#, offset 6
2: parameter sig, offset 8
3: parameter func, offset 10
4: call function noellipse-ellipse printf, extra 0
5: post call
6: £temporary821 = int_to_int sig (Signed_Int -> Signed_Short_Int)
7: al = £temporary821
8: ah = 37
9: dx = func
10: interrupt 33
11: call header
12: parameter string_Signal20done0A#, offset 6
13: call function noellipse-ellipse printf, extra 0
14: post call
15: empty
16: return
17: function end signal
0: call header
1: parameter string_0ARaise20signal2025i0A#, offset 6
2: parameter sig, offset 8
3: call function noellipse-ellipse printf, extra 0
4: post call
5: £temporary831 = int_to_int sig (Signed_Int -> Signed_Short_Int)
6: al = £temporary831
7: ah = 53
8: interrupt 33
9: £temporary833 = bx
10: func = £temporary833
11: call header
12: parameter string_Raise20function2025p0A#, offset 6
13: parameter func, offset 8
14: call function noellipse-ellipse printf, extra 0
15: post call
16: if func == 0 goto 19
17: goto 26
18: check track map float stack
19: call header
20: parameter string_Raise20default0A#, offset 6
21: call function noellipse-ellipse printf, extra 0
22: post call
23: return_value = 1
24: return
25: goto 50
26: if func == 0 goto 29
27: goto 36
28: check track map float stack
29: call header
30: parameter string_Raise20error0A#, offset 6
31: call function noellipse-ellipse printf, extra 0
32: post call
33: return_value = 0
34: return
35: goto 50
36: call header
37: parameter string_Raise20function2C20calling2025i20with2025i0A#, offset 6
38: parameter func, offset 8
39: parameter sig, offset 10
40: call function noellipse-ellipse printf, extra 0
41: post call
42: call header
43: parameter sig, offset 6
44: call function noellipse-noellipse func
45: post call
46: return_value = 1
47: return
48: goto 50
49: goto 50
50: empty
51: return
52: function end raise
0: ah = 60
1: cx = 0
2: dx = name
3: interrupt 33
4: £temporary857 = ax
5: handle = £temporary857
6: if carry goto 9
7: goto 13
8: check track map float stack
9: errno = 9
10: return_value = -1
11: return
12: goto 13
13: return_value = handle
14: return
15: empty
16: return
17: function end filecreate
0: ah = 67
1: al = 0
2: dx = name
3: interrupt 33
4: if carry goto 8
5: goto 6
6: £temporary864 = 1
7: goto 9
8: £temporary864 = 0
9: empty
10: return_value = £temporary864
11: return
12: empty
13: return
14: function end fileexists
0: ah = 61
1: al = mode
2: dx = name
3: interrupt 33
4: if carry goto 7
5: goto 11
6: check track map float stack
7: errno = 9
8: return_value = -1
9: return
10: goto 15
11: £temporary869 = ax
12: return_value = £temporary869
13: return
14: goto 15
15: empty
16: return
17: function end fileopen
0: index = 0
1: empty
2: if index < 20 goto 5
3: goto 29
4: check track map float stack
5: empty
6: £temporary873 = index * 29
7: £temporary874 = g_fileArray + £temporary873
8: £temporary872 -> £temporary874 = *£temporary874
9: if £temporary872.open$0 -> £temporary874 != 0 goto 26
10: goto 12
11: check track map float stack
12: call header
13: parameter name, offset 6
14: parameter mode, offset 8
15: £temporary878 = index * 29
16: £temporary879 = g_fileArray + £temporary878
17: £temporary877 -> £temporary879 = *£temporary879
18: £temporary880 = &£temporary877 -> £temporary879
19: parameter £temporary880, offset 10
20: call function noellipse-noellipse freopen
21: post call
22: £temporary881 = return_value
23: return_value = £temporary881
24: return
25: goto 26
26: empty
27: index = index + 1
28: goto 1
29: return_value = 0
30: return
31: empty
32: return
33: function end fopen
0: handle = -1
1: call header
2: parameter mode, offset 6
3: parameter string_r#, offset 8
4: call function noellipse-noellipse strcmp
5: post call
6: £temporary885 = return_value
7: if £temporary885 == 0 goto 10
8: goto 18
9: check track map float stack
10: call header
11: parameter name, offset 6
12: parameter 64, offset 8
13: call function noellipse-noellipse fileopen
14: post call
15: £temporary887 = return_value
16: handle = £temporary887
17: goto 157
18: call header
19: parameter mode, offset 6
20: parameter string_w#, offset 8
21: call function noellipse-noellipse strcmp
22: post call
23: £temporary888 = return_value
24: if £temporary888 == 0 goto 27
25: goto 34
26: check track map float stack
27: call header
28: parameter name, offset 6
29: call function noellipse-noellipse filecreate
30: post call
31: £temporary890 = return_value
32: handle = £temporary890
33: goto 157
34: call header
35: parameter mode, offset 6
36: parameter string_a#, offset 8
37: call function noellipse-noellipse strcmp
38: post call
39: £temporary891 = return_value
40: if £temporary891 == 0 goto 43
41: goto 68
42: check track map float stack
43: call header
44: parameter name, offset 6
45: parameter 65, offset 8
46: call function noellipse-noellipse fileopen
47: post call
48: £temporary893 = return_value
49: handle = £temporary893
50: if handle != -1 goto 53
51: goto 60
52: check track map float stack
53: call header
54: parameter stream, offset 6
55: parameter 0, offset 8
56: parameter 2, offset 10
57: call function noellipse-noellipse fseek
58: post call
59: goto 157
60: call header
61: parameter name, offset 6
62: call function noellipse-noellipse filecreate
63: post call
64: £temporary896 = return_value
65: handle = £temporary896
66: goto 157
67: goto 157
68: call header
69: parameter mode, offset 6
70: parameter string_r2B#, offset 8
71: call function noellipse-noellipse strcmp
72: post call
73: £temporary897 = return_value
74: if £temporary897 == 0 goto 77
75: goto 85
76: check track map float stack
77: call header
78: parameter name, offset 6
79: parameter 66, offset 8
80: call function noellipse-noellipse fileopen
81: post call
82: £temporary899 = return_value
83: handle = £temporary899
84: goto 157
85: call header
86: parameter mode, offset 6
87: parameter string_w2B#, offset 8
88: call function noellipse-noellipse strcmp
89: post call
90: £temporary900 = return_value
91: if £temporary900 == 0 goto 94
92: goto 118
93: check track map float stack
94: call header
95: parameter name, offset 6
96: call function noellipse-noellipse fileexists
97: post call
98: £temporary902 = return_value
99: if £temporary902 != 0 goto 102
100: goto 110
101: check track map float stack
102: call header
103: parameter name, offset 6
104: parameter 66, offset 8
105: call function noellipse-noellipse fileopen
106: post call
107: £temporary903 = return_value
108: handle = £temporary903
109: goto 157
110: call header
111: parameter name, offset 6
112: call function noellipse-noellipse filecreate
113: post call
114: £temporary904 = return_value
115: handle = £temporary904
116: goto 157
117: goto 157
118: call header
119: parameter mode, offset 6
120: parameter string_a2B#, offset 8
121: call function noellipse-noellipse strcmp
122: post call
123: £temporary906 = return_value
124: if £temporary906 == 0 goto 127
125: goto 157
126: check track map float stack
127: call header
128: parameter name, offset 6
129: parameter 66, offset 8
130: call function noellipse-noellipse fileopen
131: post call
132: £temporary908 = return_value
133: handle = £temporary908
134: if handle != -1 goto 137
135: goto 144
136: check track map float stack
137: call header
138: parameter stream, offset 6
139: parameter 0, offset 8
140: parameter 2, offset 10
141: call function noellipse-noellipse fseek
142: post call
143: goto 157
144: call header
145: parameter name, offset 6
146: call function noellipse-noellipse filecreate
147: post call
148: £temporary911 = return_value
149: handle = £temporary911
150: goto 157
151: goto 157
152: goto 157
153: goto 157
154: goto 157
155: goto 157
156: goto 157
157: if handle != -1 goto 160
158: goto 177
159: check track map float stack
160: £temporary913 -> stream = *stream
161: £temporary913 -> stream = 1
162: £temporary914 -> stream = *stream, offset 2
163: £temporary914 -> stream = handle
164: £temporary915 -> stream = *stream, offset 25
165: £temporary915 -> stream = 0
166: call header
167: £temporary916 -> stream = *stream, offset 4
168: parameter £temporary916 -> stream, offset 6
169: parameter name, offset 8
170: call function noellipse-noellipse strcpy
171: post call
172: £temporary918 -> stream = *stream, offset 27
173: £temporary918 -> stream = 0
174: return_value = stream
175: return
176: goto 182
177: £temporary919 -> stream = *stream
178: £temporary919 -> stream = 0
179: return_value = 0
180: return
181: goto 182
182: empty
183: return
184: function end freopen
0: if stream == 0 goto 3
1: goto 35
2: check track map float stack
3: index = 0
4: empty
5: if index < 20 goto 8
6: goto 35
7: check track map float stack
8: empty
9: £temporary959 = index * 29
10: £temporary960 = g_fileArray + £temporary959
11: £temporary958 -> £temporary960 = *£temporary960
12: if £temporary958.open$0 -> £temporary960 != 0 goto 15
13: goto 31
14: check track map float stack
15: call header
16: £temporary962 = index * 29
17: £temporary963 = g_fileArray + £temporary962
18: £temporary961 -> £temporary963 = *£temporary963
19: £temporary964 = &£temporary961 -> £temporary963
20: parameter £temporary964, offset 6
21: call function noellipse-noellipse fflush
22: post call
23: £temporary965 = return_value
24: if £temporary965 == -1 goto 27
25: goto 31
26: check track map float stack
27: return_value = -1
28: return
29: goto 31
30: goto 31
31: empty
32: index = index + 1
33: goto 4
34: goto 35
35: return_value = 0
36: return
37: empty
38: return
39: function end fflush
0: if stream != 0 goto 3
1: goto 29
2: check track map float stack
3: ah = 62
4: £temporary972 -> stream = *stream, offset 2
5: bx = £temporary972 -> stream
6: interrupt 33
7: if carry goto 10
8: goto 14
9: check track map float stack
10: errno = 11
11: return_value = -1
12: return
13: goto 14
14: £temporary974 -> stream = *stream, offset 27
15: if £temporary974 -> stream != 0 goto 18
16: goto 24
17: check track map float stack
18: call header
19: £temporary975 -> stream = *stream, offset 4
20: parameter £temporary975 -> stream, offset 6
21: call function noellipse-noellipse remove
22: post call
23: goto 24
24: £temporary978 -> stream = *stream
25: £temporary978 -> stream = 0
26: return_value = 0
27: return
28: goto 63
29: index = 0
30: empty
31: if index < 20 goto 34
32: goto 60
33: check track map float stack
34: empty
35: £temporary982 = index * 29
36: £temporary983 = g_fileArray + £temporary982
37: £temporary981 -> £temporary983 = *£temporary983
38: if £temporary981.open$0 -> £temporary983 != 0 goto 41
39: goto 57
40: check track map float stack
41: call header
42: £temporary985 = index * 29
43: £temporary986 = g_fileArray + £temporary985
44: £temporary984 -> £temporary986 = *£temporary986
45: £temporary987 = &£temporary984 -> £temporary986
46: parameter £temporary987, offset 6
47: call function noellipse-noellipse fclose
48: post call
49: £temporary988 = return_value
50: if £temporary988 == -1 goto 53
51: goto 57
52: check track map float stack
53: return_value = -1
54: return
55: goto 57
56: goto 57
57: empty
58: index = index + 1
59: goto 30
60: return_value = 0
61: return
62: goto 63
63: empty
64: return
65: function end fclose
0: ah = 65
1: cl = 0
2: dx = name
3: interrupt 33
4: if carry goto 7
5: goto 11
6: check track map float stack
7: errno = 18
8: return_value = -1
9: return
10: goto 11
11: return_value = 0
12: return
13: empty
14: return
15: function end remove
0: ah = 86
1: cl = 0
2: dx = oldName
3: di = newName
4: interrupt 33
5: if carry goto 8
6: goto 12
7: check track map float stack
8: errno = 19
9: return_value = -1
10: return
11: goto 12
12: return_value = 0
13: return
14: empty
15: return
16: function end rename
0: return_value = 0
1: return
2: empty
3: return
4: function end setvbuf
0: empty
1: return
2: function end setbuf
0: c = 0
1: call header
2: £temporary1002 = &c
3: parameter £temporary1002, offset 6
4: parameter 1, offset 8
5: parameter 1, offset 10
6: parameter stream, offset 12
7: call function noellipse-noellipse fread
8: post call
9: £temporary1003 = return_value
10: if £temporary1003 > 0 goto 13
11: goto 17
12: check track map float stack
13: £temporary1005 = int_to_int c (Signed_Char -> Signed_Int)
14: return_value = £temporary1005
15: return
16: goto 17
17: return_value = -1
18: return
19: empty
20: return
21: function end fgetc
0: count = 0
1: prevChar = 0
2: £temporary1011 = size - 1
3: if count < £temporary1011 goto 6
4: goto 46
5: check track map float stack
6: currChar = 0
7: call header
8: parameter stream, offset 6
9: parameter string_25c#, offset 8
10: £temporary1013 = &currChar
11: parameter £temporary1013, offset 10
12: call function noellipse-ellipse fscanf, extra 0
13: post call
14: if prevChar == 13 goto 16
15: goto 24
16: if currChar == 10 goto 19
17: goto 24
18: check track map float stack
19: £temporary1019 = text + count
20: £temporary1018 -> £temporary1019 = *£temporary1019
21: £temporary1018 -> £temporary1019 = 0
22: goto 46
23: goto 24
24: £temporary1020 = int_to_int currChar (Signed_Char -> Signed_Int)
25: if £temporary1020 == -1 goto 28
26: goto 33
27: check track map float stack
28: £temporary1023 = text + count
29: £temporary1022 -> £temporary1023 = *£temporary1023
30: £temporary1022 -> £temporary1023 = 0
31: goto 46
32: goto 33
33: if currChar != 13 goto 35
34: goto 44
35: if currChar != 10 goto 38
36: goto 44
37: check track map float stack
38: £temporary1027 = count
39: count = count + 1
40: £temporary1029 = text + £temporary1027
41: £temporary1028 -> £temporary1029 = *£temporary1029
42: £temporary1028 -> £temporary1029 = currChar
43: goto 44
44: prevChar = currChar
45: goto 2
46: return_value = text
47: return
48: empty
49: return
50: function end fgets
0: call header
1: parameter s, offset 6
2: call function noellipse-noellipse strlen
3: post call
4: £temporary1034 = return_value
5: £temporary1035 = £temporary1034 + 1
6: £temporary1036 = £temporary1035 * 1
7: size = £temporary1036
8: call header
9: parameter s, offset 6
10: parameter size, offset 8
11: parameter 1, offset 10
12: parameter stream, offset 12
13: call function noellipse-noellipse fwrite
14: post call
15: £temporary1037 = return_value
16: if £temporary1037 == size goto 18
17: goto 21
18: empty
19: £temporary1042 = 0
20: goto 23
21: empty
22: £temporary1042 = -1
23: empty
24: return_value = £temporary1042
25: return
26: empty
27: return
28: function end fputs
0: call header
1: parameter stdin, offset 6
2: call function noellipse-noellipse fgetc
3: post call
4: £temporary1048 = return_value
5: return_value = £temporary1048
6: return
7: empty
8: return
9: function end getchar
0: call header
1: parameter s, offset 6
2: parameter -1, offset 8
3: parameter stdin, offset 10
4: call function noellipse-noellipse fgets
5: post call
6: £temporary1050 = return_value
7: if £temporary1050 != 0 goto 10
8: goto 27
9: check track map float stack
10: call header
11: parameter s, offset 6
12: call function noellipse-noellipse strlen
13: post call
14: £temporary1052 = return_value
15: size = £temporary1052
16: if size > 0 goto 19
17: goto 24
18: check track map float stack
19: £temporary1054 = size - 1
20: £temporary1056 = s + £temporary1054
21: £temporary1055 -> £temporary1056 = *£temporary1056
22: £temporary1055 -> £temporary1056 = 0
23: goto 24
24: return_value = s
25: return
26: goto 30
27: return_value = 0
28: return
29: goto 30
30: empty
31: return
32: function end gets
0: call header
1: parameter s, offset 6
2: parameter stdout, offset 8
3: call function noellipse-noellipse fputs
4: post call
5: £temporary1061 = return_value
6: if £temporary1061 != 0 goto 9
7: goto 18
8: check track map float stack
9: call header
10: parameter 10, offset 6
11: parameter stdout, offset 8
12: call function noellipse-noellipse fputc
13: post call
14: £temporary1063 = return_value
15: return_value = £temporary1063
16: return
17: goto 18
18: return_value = -1
19: return
20: empty
21: return
22: function end puts
0: £temporary1068 -> stream = *stream, offset 20
1: £temporary1069 = int_to_int £temporary1068 -> stream (Signed_Char -> Signed_Int)
2: if £temporary1069 != -1 goto 5
3: goto 9
4: check track map float stack
5: £temporary1071 -> stream = *stream, offset 20
6: £temporary1072 = int_to_int c (Signed_Int -> Signed_Char)
7: £temporary1071 -> stream = £temporary1072
8: goto 9
9: return_value = c
10: return
11: empty
12: return
13: function end ungetc
0: £temporary1074 -> stream = *stream, offset 2
1: bx = £temporary1074 -> stream
2: £temporary1076 = size * nobj
3: cx = £temporary1076
4: ah = 63
5: dx = ptr
6: interrupt 33
7: if carry goto 10
8: goto 16
9: check track map float stack
10: £temporary1080 -> stream = *stream, offset 21
11: errno = 14
12: £temporary1080 -> stream = errno
13: return_value = 0
14: return
15: goto 20
16: £temporary1081 = ax
17: return_value = £temporary1081
18: return
19: goto 20
20: empty
21: return
22: function end fread
0: £temporary1083 -> stream = *stream, offset 2
1: bx = £temporary1083 -> stream
2: £temporary1085 = size * nobj
3: cx = £temporary1085
4: ah = 64
5: dx = ptr
6: interrupt 33
7: if carry goto 10
8: goto 16
9: check track map float stack
10: £temporary1089 -> stream = *stream, offset 21
11: errno = 13
12: £temporary1089 -> stream = errno
13: return_value = 0
14: return
15: goto 20
16: £temporary1090 = ax
17: return_value = £temporary1090
18: return
19: goto 20
20: empty
21: return
22: function end fwrite
0: £temporary1092 = int_to_int origin (Signed_Int -> Signed_Short_Int)
1: al = £temporary1092
2: ah = 66
3: £temporary1095 -> stream = *stream, offset 2
4: bx = £temporary1095 -> stream
5: cx = 0
6: £temporary1098 = int_to_int offset (Signed_Int -> Signed_Int)
7: dx = £temporary1098
8: interrupt 33
9: if carry goto 19
10: goto 12
11: check track map float stack
12: £temporary1101 -> stream = *stream, offset 23
13: £temporary1102 = ax
14: £temporary1101 -> stream = £temporary1102
15: £temporary1103 -> stream = *stream, offset 23
16: return_value = £temporary1103 -> stream
17: return
18: goto 24
19: £temporary1104 -> stream = *stream, offset 21
20: £temporary1104 -> stream = 15
21: return_value = -1
22: return
23: goto 24
24: empty
25: return
26: function end fseek
0: call header
1: parameter stream, offset 6
2: parameter 0, offset 8
3: parameter 1, offset 10
4: call function noellipse-noellipse fseek
5: post call
6: £temporary1105 = return_value
7: return_value = £temporary1105
8: return
9: empty
10: return
11: function end ftell
0: call header
1: parameter stream, offset 6
2: parameter 0, offset 8
3: parameter 0, offset 10
4: call function noellipse-noellipse fseek
5: post call
6: empty
7: return
8: function end rewind
0: £temporary1114 -> ptr = *ptr
1: call header
2: parameter stream, offset 6
3: call function noellipse-noellipse ftell
4: post call
5: £temporary1115 = return_value
6: £temporary1116 = int_to_int £temporary1115 (Signed_Int -> Signed_Int)
7: £temporary1114 -> ptr = £temporary1116
8: return_value = 0
9: return
10: empty
11: return
12: function end fgetpos
0: call header
1: parameter stream, offset 6
2: £temporary1118 -> ptr = *ptr
3: parameter £temporary1118 -> ptr, offset 8
4: parameter 0, offset 10
5: call function noellipse-noellipse fseek
6: post call
7: £temporary1119 = return_value
8: £temporary1120 = int_to_int £temporary1119 (Signed_Int -> Signed_Int)
9: return_value = £temporary1120
10: return
11: empty
12: return
13: function end fsetpos
0: £temporary1124 -> stream = *stream, offset 21
1: errno = 0
2: £temporary1124 -> stream = errno
3: empty
4: return
5: function end clearerr
0: call header
1: parameter stream, offset 6
2: parameter 0, offset 8
3: parameter 1, offset 10
4: call function noellipse-noellipse fseek
5: post call
6: £temporary1125 = return_value
7: £temporary1126 = int_to_int £temporary1125 (Signed_Int -> Unsigned_Long_Int)
8: currPosition = £temporary1126
9: call header
10: parameter stream, offset 6
11: parameter 0, offset 8
12: parameter 2, offset 10
13: call function noellipse-noellipse fseek
14: post call
15: £temporary1127 = return_value
16: £temporary1128 = int_to_int £temporary1127 (Signed_Int -> Unsigned_Long_Int)
17: lastPosition = £temporary1128
18: call header
19: parameter stream, offset 6
20: £temporary1129 = int_to_int currPosition (Unsigned_Long_Int -> Signed_Int)
21: parameter £temporary1129, offset 8
22: parameter 0, offset 10
23: call function noellipse-noellipse fseek
24: post call
25: if currPosition == lastPosition goto 27
26: goto 29
27: £temporary1132 = 1
28: goto 30
29: £temporary1132 = 0
30: empty
31: endOfFile = £temporary1132
32: return_value = endOfFile
33: return
34: empty
35: return
36: function end feof
0: £temporary1142 -> stream = *stream, offset 21
1: return_value = £temporary1142 -> stream
2: return
3: empty
4: return
5: function end ferror
0: call header
1: parameter string_25s3A2025s2E0A#, offset 6
2: parameter s, offset 8
3: call header
4: parameter errno, offset 16
5: call function noellipse-noellipse strerror
6: post call
7: £temporary1143 = return_value
8: parameter £temporary1143, offset 10
9: call function noellipse-ellipse printf, extra 0
10: post call
11: empty
12: return
13: function end perror
0: index = 0
1: empty
2: if index < g_tempSize goto 5
3: goto 24
4: check track map float stack
5: empty
6: call header
7: parameter name, offset 6
8: £temporary1152 = index * 2
9: £temporary1153 = g_tempArray + £temporary1152
10: £temporary1151 -> £temporary1153 = *£temporary1153
11: parameter £temporary1151 -> £temporary1153, offset 8
12: call function noellipse-noellipse strcmp
13: post call
14: £temporary1154 = return_value
15: if £temporary1154 == 0 goto 18
16: goto 21
17: check track map float stack
18: return_value = 1
19: return
20: goto 21
21: empty
22: index = index + 1
23: goto 1
24: return_value = 0
25: return
26: empty
27: return
28: function end existsTempName
0: if size < 3 goto 3
1: goto 75
2: check track map float stack
3: c = 97
4: empty
5: if c <= 122 goto 8
6: goto 75
7: check track map float stack
8: empty
9: £temporary1162 = name + size
10: £temporary1161 -> £temporary1162 = *£temporary1162
11: £temporary1161 -> £temporary1162 = c
12: £temporary1163 = size + 1
13: £temporary1165 = name + £temporary1163
14: £temporary1164 -> £temporary1165 = *£temporary1165
15: £temporary1164 -> £temporary1165 = 0
16: call header
17: parameter name, offset 6
18: call function noellipse-noellipse fileexists
19: post call
20: £temporary1166 = return_value
21: if £temporary1166 != 0 goto 56
22: goto 24
23: check track map float stack
24: case status == 0 goto 28
25: case status == 1 goto 30
26: case end status
27: goto 56
28: return_value = name
29: return
30: call header
31: parameter name, offset 6
32: call function noellipse-noellipse existsTempName
33: post call
34: £temporary1169 = return_value
35: if £temporary1169 != 0 goto 54
36: goto 38
37: check track map float stack
38: call header
39: £temporary1173 = g_tempSize * 2
40: £temporary1174 = g_tempArray + £temporary1173
41: £temporary1172 -> £temporary1174 = *£temporary1174
42: parameter £temporary1172 -> £temporary1174, offset 6
43: parameter name, offset 8
44: call function noellipse-noellipse strcpy
45: post call
46: £temporary1176 = g_tempSize
47: g_tempSize = g_tempSize + 1
48: £temporary1178 = £temporary1176 * 2
49: £temporary1179 = g_tempArray + £temporary1178
50: £temporary1177 -> £temporary1179 = *£temporary1179
51: return_value = £temporary1177 -> £temporary1179
52: return
53: goto 54
54: goto 56
55: goto 56
56: call header
57: parameter name, offset 6
58: £temporary1180 = size + 1
59: parameter £temporary1180, offset 8
60: parameter status, offset 10
61: call function noellipse-noellipse generateTempName
62: post call
63: £temporary1181 = return_value
64: result = £temporary1181
65: if result != 0 goto 68
66: goto 71
67: check track map float stack
68: return_value = result
69: return
70: goto 71
71: empty
72: c = c + 1
73: goto 4
74: goto 75
75: return_value = 0
76: return
77: empty
78: return
79: function end generateTempName
0: call header
1: parameter name, offset 6
2: parameter 0, offset 8
3: parameter 0, offset 10
4: call function noellipse-noellipse generateTempName
5: post call
6: £temporary1190 = return_value
7: if £temporary1190 != 0 goto 9
8: goto 24
9: call header
10: parameter name, offset 6
11: parameter string_w#, offset 8
12: call function noellipse-noellipse fopen
13: post call
14: £temporary1191 = return_value
15: stream = £temporary1191
16: if stream != 0 goto 19
17: goto 24
18: check track map float stack
19: £temporary1195 -> stream = *stream, offset 27
20: £temporary1195 -> stream = 1
21: return_value = stream
22: return
23: goto 24
24: return_value = 0
25: return
26: empty
27: return
28: function end tmpfile
0: if g_tempSize < 16 goto 3
1: goto 13
2: check track map float stack
3: call header
4: parameter name, offset 6
5: parameter 0, offset 8
6: parameter 1, offset 10
7: call function noellipse-noellipse generateTempName
8: post call
9: £temporary1202 = return_value
10: return_value = £temporary1202
11: return
12: goto 13
13: return_value = 0
14: return
15: empty
16: return
17: function end tmpnam
0: c = 0
1: case g_inStatus == 0 goto 5
2: case g_inStatus == 1 goto 18
3: case end g_inStatus
4: goto 26
5: £temporary1206 = int_to_int g_inDevice (Pointer -> Pointer)
6: stream = £temporary1206
7: £temporary1207 -> stream = *stream, offset 2
8: handle = £temporary1207 -> stream
9: ah = 63
10: bx = handle
11: cx = 1
12: £temporary1212 = &c
13: dx = £temporary1212
14: interrupt 33
15: g_inChars = g_inChars + 1
16: return_value = c
17: return
18: £temporary1214 = int_to_int g_inDevice (Pointer -> Pointer)
19: inString = £temporary1214
20: £temporary1215 = g_inChars
21: g_inChars = g_inChars + 1
22: £temporary1217 = inString + £temporary1215
23: £temporary1216 -> £temporary1217 = *£temporary1217
24: return_value = £temporary1216 -> £temporary1217
25: return
26: return_value = 0
27: return
28: empty
29: return
30: function end scanChar
0: case g_inStatus == 0 goto 4
1: case g_inStatus == 1 goto 6
2: case end g_inStatus
3: goto 8
4: g_inChars = g_inChars - 1
5: goto 8
6: g_inChars = g_inChars - 1
7: goto 8
8: empty
9: return
10: function end unscanChar
0: index = 0
1: call header
2: call function noellipse-noellipse scanChar
3: post call
4: £temporary1221 = return_value
5: input = £temporary1221
6: call header
7: £temporary1222 = int_to_int input (Signed_Char -> Signed_Int)
8: parameter £temporary1222, offset 6
9: call function noellipse-noellipse isspace
10: post call
11: £temporary1223 = return_value
12: if £temporary1223 != 0 goto 15
13: goto 21
14: check track map float stack
15: call header
16: call function noellipse-noellipse scanChar
17: post call
18: £temporary1224 = return_value
19: input = £temporary1224
20: goto 6
21: if string != 0 goto 24
22: goto 62
23: check track map float stack
24: if not != 0 goto 35
25: goto 26
26: call header
27: parameter pattern, offset 6
28: £temporary1229 = int_to_int input (Signed_Char -> Signed_Int)
29: parameter £temporary1229, offset 8
30: call function noellipse-noellipse strchr
31: post call
32: £temporary1230 = return_value
33: if £temporary1230 != 0 goto 47
34: goto 35
35: if not != 0 goto 37
36: goto 58
37: call header
38: parameter pattern, offset 6
39: £temporary1233 = int_to_int input (Signed_Char -> Signed_Int)
40: parameter £temporary1233, offset 8
41: call function noellipse-noellipse strchr
42: post call
43: £temporary1234 = return_value
44: if £temporary1234 != 0 goto 58
45: goto 47
46: check track map float stack
47: £temporary1240 = index
48: index = index + 1
49: £temporary1242 = string + £temporary1240
50: £temporary1241 -> £temporary1242 = *£temporary1242
51: £temporary1241 -> £temporary1242 = input
52: call header
53: call function noellipse-noellipse scanChar
54: post call
55: £temporary1243 = return_value
56: input = £temporary1243
57: goto 24
58: £temporary1245 = string + index
59: £temporary1244 -> £temporary1245 = *£temporary1245
60: £temporary1244 -> £temporary1245 = 0
61: goto 92
62: if not != 0 goto 73
63: goto 64
64: call header
65: parameter pattern, offset 6
66: £temporary1248 = int_to_int input (Signed_Char -> Signed_Int)
67: parameter £temporary1248, offset 8
68: call function noellipse-noellipse strchr
69: post call
70: £temporary1249 = return_value
71: if £temporary1249 != 0 goto 85
72: goto 73
73: if not != 0 goto 75
74: goto 92
75: call header
76: parameter pattern, offset 6
77: £temporary1252 = int_to_int input (Signed_Char -> Signed_Int)
78: parameter £temporary1252, offset 8
79: call function noellipse-noellipse strchr
80: post call
81: £temporary1253 = return_value
82: if £temporary1253 != 0 goto 92
83: goto 85
84: check track map float stack
85: call header
86: call function noellipse-noellipse scanChar
87: post call
88: £temporary1259 = return_value
89: input = £temporary1259
90: goto 62
91: goto 92
92: empty
93: return
94: function end scanPattern
0: index = 0
1: call header
2: call function noellipse-noellipse scanChar
3: post call
4: £temporary1269 = return_value
5: input = £temporary1269
6: found = 0
7: call header
8: £temporary1270 = int_to_int input (Signed_Char -> Signed_Int)
9: parameter £temporary1270, offset 6
10: call function noellipse-noellipse isspace
11: post call
12: £temporary1271 = return_value
13: if £temporary1271 != 0 goto 16
14: goto 22
15: check track map float stack
16: call header
17: call function noellipse-noellipse scanChar
18: post call
19: £temporary1272 = return_value
20: input = £temporary1272
21: goto 7
22: if string != 0 goto 25
23: goto 101
24: check track map float stack
25: if precision == 0 goto 28
26: goto 60
27: check track map float stack
28: call header
29: £temporary1276 = int_to_int input (Signed_Char -> Signed_Int)
30: parameter £temporary1276, offset 6
31: call function noellipse-noellipse isspace
32: post call
33: £temporary1277 = return_value
34: if £temporary1277 != 0 goto 55
35: goto 36
36: £temporary1280 = int_to_int input (Signed_Char -> Signed_Int)
37: if £temporary1280 != -1 goto 39
38: goto 55
39: if input != 10 goto 42
40: goto 55
41: check track map float stack
42: £temporary1285 = index
43: index = index + 1
44: £temporary1287 = string + £temporary1285
45: £temporary1286 -> £temporary1287 = *£temporary1287
46: £temporary1286 -> £temporary1287 = input
47: call header
48: call function noellipse-noellipse scanChar
49: post call
50: £temporary1288 = return_value
51: input = £temporary1288
52: found = 1
53: g_inChars = g_inChars + 1
54: goto 28
55: £temporary1291 = string + index
56: £temporary1290 -> £temporary1291 = *£temporary1291
57: £temporary1290 -> £temporary1291 = 0
58: g_inChars = g_inChars + 1
59: goto 161
60: £temporary1293 = precision
61: precision = precision - 1
62: if £temporary1293 > 0 goto 64
63: goto 91
64: call header
65: £temporary1295 = int_to_int input (Signed_Char -> Signed_Int)
66: parameter £temporary1295, offset 6
67: call function noellipse-noellipse isspace
68: post call
69: £temporary1296 = return_value
70: if £temporary1296 != 0 goto 91
71: goto 72
72: £temporary1299 = int_to_int input (Signed_Char -> Signed_Int)
73: if £temporary1299 != -1 goto 75
74: goto 91
75: if input != 10 goto 78
76: goto 91
77: check track map float stack
78: £temporary1305 = index
79: index = index + 1
80: £temporary1307 = string + £temporary1305
81: £temporary1306 -> £temporary1307 = *£temporary1307
82: £temporary1306 -> £temporary1307 = input
83: call header
84: call function noellipse-noellipse scanChar
85: post call
86: £temporary1308 = return_value
87: input = £temporary1308
88: found = 1
89: g_inChars = g_inChars + 1
90: goto 60
91: if precision > 0 goto 94
92: goto 161
93: check track map float stack
94: £temporary1312 = string + index
95: £temporary1311 -> £temporary1312 = *£temporary1312
96: £temporary1311 -> £temporary1312 = 0
97: g_inChars = g_inChars + 1
98: goto 161
99: goto 161
100: goto 161
101: if precision == 0 goto 104
102: goto 128
103: check track map float stack
104: call header
105: £temporary1315 = int_to_int input (Signed_Char -> Signed_Int)
106: parameter £temporary1315, offset 6
107: call function noellipse-noellipse isspace
108: post call
109: £temporary1316 = return_value
110: if £temporary1316 != 0 goto 126
111: goto 112
112: £temporary1319 = int_to_int input (Signed_Char -> Signed_Int)
113: if £temporary1319 != -1 goto 115
114: goto 126
115: if input != 10 goto 118
116: goto 126
117: check track map float stack
118: call header
119: call function noellipse-noellipse scanChar
120: post call
121: £temporary1324 = return_value
122: input = £temporary1324
123: found = 1
124: g_inChars = g_inChars + 1
125: goto 104
126: g_inChars = g_inChars + 1
127: goto 161
128: £temporary1327 = precision
129: precision = precision - 1
130: if £temporary1327 > 0 goto 132
131: goto 154
132: call header
133: £temporary1329 = int_to_int input (Signed_Char -> Signed_Int)
134: parameter £temporary1329, offset 6
135: call function noellipse-noellipse isspace
136: post call
137: £temporary1330 = return_value
138: if £temporary1330 != 0 goto 154
139: goto 140
140: £temporary1333 = int_to_int input (Signed_Char -> Signed_Int)
141: if £temporary1333 != -1 goto 143
142: goto 154
143: if input != 10 goto 146
144: goto 154
145: check track map float stack
146: call header
147: call function noellipse-noellipse scanChar
148: post call
149: £temporary1339 = return_value
150: input = £temporary1339
151: found = 1
152: g_inChars = g_inChars + 1
153: goto 128
154: if precision > 0 goto 157
155: goto 161
156: check track map float stack
157: g_inChars = g_inChars + 1
158: goto 161
159: goto 161
160: goto 161
161: if found != 0 goto 164
162: goto 166
163: check track map float stack
164: g_inCount = g_inCount + 1
165: goto 166
166: empty
167: return
168: function end scanString
0: call header
1: £temporary1350 = int_to_int input (Signed_Char -> Signed_Int)
2: parameter £temporary1350, offset 6
3: call function noellipse-noellipse isdigit
4: post call
5: £temporary1351 = return_value
6: if £temporary1351 != 0 goto 9
7: goto 14
8: check track map float stack
9: £temporary1352 = input - 48
10: £temporary1353 = int_to_int £temporary1352 (Signed_Char -> Unsigned_Long_Int)
11: return_value = £temporary1353
12: return
13: goto 36
14: call header
15: £temporary1354 = int_to_int input (Signed_Char -> Signed_Int)
16: parameter £temporary1354, offset 6
17: call function noellipse-noellipse islower
18: post call
19: £temporary1355 = return_value
20: if £temporary1355 != 0 goto 23
21: goto 29
22: check track map float stack
23: £temporary1356 = input - 97
24: £temporary1357 = int_to_int £temporary1356 (Signed_Char -> Unsigned_Long_Int)
25: £temporary1358 = £temporary1357 + 10
26: return_value = £temporary1358
27: return
28: goto 36
29: £temporary1359 = input - 65
30: £temporary1360 = int_to_int £temporary1359 (Signed_Char -> Unsigned_Long_Int)
31: £temporary1361 = £temporary1360 + 10
32: return_value = £temporary1361
33: return
34: goto 36
35: goto 36
36: empty
37: return
38: function end digitToValue
0: longValue = 0
1: minus = 0
2: found = 0
3: call header
4: call function noellipse-noellipse scanChar
5: post call
6: £temporary1366 = return_value
7: input = £temporary1366
8: call header
9: £temporary1367 = int_to_int input (Signed_Char -> Signed_Int)
10: parameter £temporary1367, offset 6
11: call function noellipse-noellipse isspace
12: post call
13: £temporary1368 = return_value
14: if £temporary1368 != 0 goto 17
15: goto 23
16: check track map float stack
17: call header
18: call function noellipse-noellipse scanChar
19: post call
20: £temporary1369 = return_value
21: input = £temporary1369
22: goto 8
23: if input == 43 goto 26
24: goto 32
25: check track map float stack
26: call header
27: call function noellipse-noellipse scanChar
28: post call
29: £temporary1372 = return_value
30: input = £temporary1372
31: goto 43
32: if input == 45 goto 35
33: goto 43
34: check track map float stack
35: minus = 1
36: call header
37: call function noellipse-noellipse scanChar
38: post call
39: £temporary1374 = return_value
40: input = £temporary1374
41: goto 43
42: goto 43
43: call header
44: £temporary1375 = int_to_int input (Signed_Char -> Signed_Int)
45: parameter £temporary1375, offset 6
46: call function noellipse-noellipse isdigit
47: post call
48: £temporary1376 = return_value
49: if £temporary1376 != 0 goto 52
50: goto 64
51: check track map float stack
52: £temporary1377 = 10 * longValue
53: £temporary1378 = input - 48
54: £temporary1379 = int_to_int £temporary1378 (Signed_Char -> Signed_Long_Int)
55: £temporary1380 = £temporary1377 + £temporary1379
56: longValue = £temporary1380
57: call header
58: call function noellipse-noellipse scanChar
59: post call
60: £temporary1381 = return_value
61: input = £temporary1381
62: found = 1
63: goto 43
64: if minus != 0 goto 67
65: goto 70
66: check track map float stack
67: £temporary1383 = -longValue
68: longValue = £temporary1383
69: goto 70
70: if found != 0 goto 73
71: goto 75
72: check track map float stack
73: g_inCount = g_inCount + 1
74: goto 75
75: call header
76: parameter input, offset 6
77: call function noellipse-noellipse unscanChar
78: post call
79: return_value = longValue
80: return
81: empty
82: return
83: function end scanLongInt
0: unsignedLongValue = 0
1: call header
2: call function noellipse-noellipse scanChar
3: post call
4: £temporary1391 = return_value
5: input = £temporary1391
6: found = 1
7: call header
8: £temporary1392 = int_to_int input (Signed_Char -> Signed_Int)
9: parameter £temporary1392, offset 6
10: call function noellipse-noellipse isspace
11: post call
12: £temporary1393 = return_value
13: if £temporary1393 != 0 goto 16
14: goto 22
15: check track map float stack
16: call header
17: call function noellipse-noellipse scanChar
18: post call
19: £temporary1394 = return_value
20: input = £temporary1394
21: goto 7
22: if input == 48 goto 25
23: goto 65
24: check track map float stack
25: call header
26: call function noellipse-noellipse scanChar
27: post call
28: £temporary1397 = return_value
29: input = £temporary1397
30: call header
31: £temporary1398 = int_to_int input (Signed_Char -> Signed_Int)
32: parameter £temporary1398, offset 6
33: call function noellipse-noellipse tolower
34: post call
35: £temporary1399 = return_value
36: if £temporary1399 == 120 goto 39
37: goto 54
38: check track map float stack
39: if base == 0 goto 41
40: goto 44
41: empty
42: £temporary1405 = 16
43: goto 46
44: empty
45: £temporary1405 = base
46: empty
47: base = £temporary1405
48: call header
49: call function noellipse-noellipse scanChar
50: post call
51: £temporary1406 = return_value
52: input = £temporary1406
53: goto 65
54: if base == 0 goto 56
55: goto 59
56: empty
57: £temporary1411 = 8
58: goto 61
59: empty
60: £temporary1411 = base
61: empty
62: base = £temporary1411
63: goto 65
64: goto 65
65: if base == 0 goto 68
66: goto 70
67: check track map float stack
68: base = 10
69: goto 70
70: call header
71: £temporary1413 = int_to_int input (Signed_Char -> Signed_Int)
72: parameter £temporary1413, offset 6
73: call function noellipse-noellipse isxdigit
74: post call
75: £temporary1414 = return_value
76: if £temporary1414 != 0 goto 79
77: goto 100
78: check track map float stack
79: call header
80: parameter input, offset 6
81: call function noellipse-noellipse digitToValue
82: post call
83: £temporary1415 = return_value
84: digit = £temporary1415
85: if digit >= base goto 88
86: goto 90
87: check track map float stack
88: goto 100
89: goto 90
90: £temporary1417 = unsignedLongValue * base
91: £temporary1418 = £temporary1417 + digit
92: unsignedLongValue = £temporary1418
93: found = 1
94: call header
95: call function noellipse-noellipse scanChar
96: post call
97: £temporary1419 = return_value
98: input = £temporary1419
99: goto 70
100: if found != 0 goto 103
101: goto 105
102: check track map float stack
103: g_inCount = g_inCount + 1
104: goto 105
105: call header
106: parameter input, offset 6
107: call function noellipse-noellipse unscanChar
108: post call
109: return_value = unsignedLongValue
110: return
111: empty
112: return
113: function end scanUnsignedLongInt
0: minus = 0
1: found = 0
2: push float 0.0
3: pop float value
4: push float 1.0
5: pop float factor
6: call header
7: call function noellipse-noellipse scanChar
8: post call
9: £temporary1429 = return_value
10: input = £temporary1429
11: call header
12: £temporary1430 = int_to_int input (Signed_Char -> Signed_Int)
13: parameter £temporary1430, offset 6
14: call function noellipse-noellipse isspace
15: post call
16: £temporary1431 = return_value
17: if £temporary1431 != 0 goto 20
18: goto 26
19: check track map float stack
20: call header
21: call function noellipse-noellipse scanChar
22: post call
23: £temporary1432 = return_value
24: input = £temporary1432
25: goto 11
26: if input == 43 goto 29
27: goto 35
28: check track map float stack
29: call header
30: call function noellipse-noellipse scanChar
31: post call
32: £temporary1435 = return_value
33: input = £temporary1435
34: goto 46
35: if input == 45 goto 38
36: goto 46
37: check track map float stack
38: minus = 1
39: call header
40: call function noellipse-noellipse scanChar
41: post call
42: £temporary1437 = return_value
43: input = £temporary1437
44: goto 46
45: goto 46
46: call header
47: £temporary1438 = int_to_int input (Signed_Char -> Signed_Int)
48: parameter £temporary1438, offset 6
49: call function noellipse-noellipse isdigit
50: post call
51: £temporary1439 = return_value
52: if £temporary1439 != 0 goto 55
53: goto 73
54: check track map float stack
55: push float value
56: pop float empty X
57: push float 10.0
58: push float value
59: £temporary1440 = 10.0 * value
60: £temporary1441 = input - 48
61: £temporary1443 = int_to_int £temporary1441 (Signed_Char -> Signed_Int)
62: £temporary1442 = int_to_float £temporary1443 (Signed_Int -> Long_Double)
63: £temporary1444 = £temporary1440 + £temporary1442
64: top float value
65: pop float empty X
66: call header
67: call function noellipse-noellipse scanChar
68: post call
69: £temporary1445 = return_value
70: input = £temporary1445
71: found = 1
72: goto 46
73: if input == 46 goto 76
74: goto 112
75: check track map float stack
76: call header
77: call function noellipse-noellipse scanChar
78: post call
79: £temporary1448 = return_value
80: input = £temporary1448
81: call header
82: £temporary1449 = int_to_int input (Signed_Char -> Signed_Int)
83: parameter £temporary1449, offset 6
84: call function noellipse-noellipse isdigit
85: post call
86: £temporary1450 = return_value
87: if £temporary1450 != 0 goto 90
88: goto 112
89: check track map float stack
90: push float factor
91: push float 10.0
92: £temporary1451 = factor / 10.0
93: top float factor
94: pop float empty X
95: push float value
96: push float factor
97: £temporary1452 = input - 48
98: £temporary1454 = int_to_int £temporary1452 (Signed_Char -> Signed_Int)
99: £temporary1453 = int_to_float £temporary1454 (Signed_Int -> Long_Double)
100: £temporary1455 = factor * £temporary1453
101: £temporary1456 = value + £temporary1455
102: top float value
103: pop float empty X
104: call header
105: call function noellipse-noellipse scanChar
106: post call
107: £temporary1457 = return_value
108: input = £temporary1457
109: found = 1
110: goto 81
111: goto 112
112: call header
113: parameter input, offset 6
114: call function noellipse-noellipse unscanChar
115: post call
116: call header
117: £temporary1460 = int_to_int input (Signed_Char -> Signed_Int)
118: parameter £temporary1460, offset 6
119: call function noellipse-noellipse tolower
120: post call
121: £temporary1461 = return_value
122: if £temporary1461 == 101 goto 125
123: goto 144
124: check track map float stack
125: call header
126: call function noellipse-noellipse scanLongInt
127: post call
128: £temporary1463 = return_value
129: £temporary1464 = int_to_float £temporary1463 (Signed_Long_Int -> Double)
130: pop float exponent
131: push float value
132: call header
133: push float 10.0
134: parameter 10.0, offset 6
135: push float exponent
136: parameter exponent, offset 14
137: call function noellipse-noellipse pow
138: post call
139: £temporary1465 = return_value
140: £temporary1466 = value * £temporary1465
141: top float value
142: pop float empty X
143: goto 149
144: call header
145: parameter input, offset 6
146: call function noellipse-noellipse unscanChar
147: post call
148: goto 149
149: if minus != 0 goto 152
150: goto 159
151: check track map float stack
152: push float value
153: pop float empty X
154: push float value
155: £temporary1468 = -value
156: top float value
157: pop float empty X
158: goto 159
159: if found != 0 goto 162
160: goto 164
161: check track map float stack
162: g_inCount = g_inCount + 1
163: goto 164
164: push float value
165: return_value = value
166: return
167: empty
168: return
169: function end scanLongDouble
0: percent = 0
1: shortInt = 0
2: longIntOrDouble = 0
3: longDouble = 0
4: star = 0
5: g_inCount = 0
6: g_inChars = 0
7: index = 0
8: empty
9: £temporary1481 = format + index
10: £temporary1480 -> £temporary1481 = *£temporary1481
11: if £temporary1480 -> £temporary1481 != 0 goto 14
12: goto 432
13: check track map float stack
14: empty
15: £temporary1485 = format + index
16: £temporary1484 -> £temporary1485 = *£temporary1485
17: c = £temporary1484 -> £temporary1485
18: £temporary1486 = int_to_int c (Signed_Char -> Signed_Int)
19: £temporary1487 = £temporary1486 + 1
20: d = £temporary1487
21: if percent != 0 goto 24
22: goto 419
23: check track map float stack
24: £temporary1488 = d - 1
25: case £temporary1488 == 104 goto 43
26: case £temporary1488 == 108 goto 45
27: case £temporary1488 == 76 goto 47
28: case £temporary1488 == 42 goto 49
29: case £temporary1488 == 99 goto 51
30: case £temporary1488 == 115 goto 76
31: case £temporary1488 == 100 goto 99
32: case £temporary1488 == 105 goto 99
33: case £temporary1488 == 111 goto 146
34: case £temporary1488 == 120 goto 194
35: case £temporary1488 == 117 goto 242
36: case £temporary1488 == 103 goto 290
37: case £temporary1488 == 102 goto 290
38: case £temporary1488 == 101 goto 290
39: case £temporary1488 == 91 goto 350
40: case £temporary1488 == 110 goto 401
41: case end £temporary1488
42: goto 411
43: shortInt = 1
44: goto 429
45: longIntOrDouble = 1
46: goto 429
47: longDouble = 1
48: goto 429
49: star = 1
50: goto 429
51: call header
52: call function noellipse-noellipse scanChar
53: post call
54: £temporary1489 = return_value
55: charValue = £temporary1489
56: if star != 0 goto 68
57: goto 59
58: check track map float stack
59: £temporary1492 = arg_list + 2
60: arg_list = £temporary1492
61: £temporary1493 = arg_list - 2
62: £temporary1494 = int_to_int £temporary1493 (Signed_Int -> Pointer)
63: £temporary1495 -> £temporary1494 = *£temporary1494
64: charPtr = £temporary1495 -> £temporary1494
65: £temporary1496 -> charPtr = *charPtr
66: £temporary1496 -> charPtr = charValue
67: goto 68
68: percent = 0
69: £temporary1497 = int_to_int charValue (Signed_Char -> Signed_Int)
70: if £temporary1497 != -1 goto 73
71: goto 75
72: check track map float stack
73: g_inCount = g_inCount + 1
74: goto 75
75: goto 429
76: if star != 0 goto 91
77: goto 79
78: check track map float stack
79: £temporary1502 = arg_list + 2
80: arg_list = £temporary1502
81: £temporary1503 = arg_list - 2
82: £temporary1504 = int_to_int £temporary1503 (Signed_Int -> Pointer)
83: £temporary1505 -> £temporary1504 = *£temporary1504
84: charPtr = £temporary1505 -> £temporary1504
85: call header
86: parameter charPtr, offset 6
87: parameter 0, offset 8
88: call function noellipse-noellipse scanString
89: post call
90: goto 97
91: call header
92: parameter 0, offset 6
93: parameter 0, offset 8
94: call function noellipse-noellipse scanString
95: post call
96: goto 97
97: percent = 0
98: goto 429
99: call header
100: call function noellipse-noellipse scanLongInt
101: post call
102: £temporary1508 = return_value
103: longValue = £temporary1508
104: if star != 0 goto 144
105: goto 107
106: check track map float stack
107: if shortInt != 0 goto 110
108: goto 120
109: check track map float stack
110: £temporary1511 = arg_list + 2
111: arg_list = £temporary1511
112: £temporary1512 = arg_list - 2
113: £temporary1513 = int_to_int £temporary1512 (Signed_Int -> Pointer)
114: £temporary1514 -> £temporary1513 = *£temporary1513
115: shortPtr = £temporary1514 -> £temporary1513
116: £temporary1515 -> shortPtr = *shortPtr
117: £temporary1516 = int_to_int longValue (Signed_Long_Int -> Signed_Short_Int)
118: £temporary1515 -> shortPtr = £temporary1516
119: goto 144
120: if longIntOrDouble != 0 goto 133
121: goto 123
122: check track map float stack
123: £temporary1519 = arg_list + 2
124: arg_list = £temporary1519
125: £temporary1520 = arg_list - 2
126: £temporary1521 = int_to_int £temporary1520 (Signed_Int -> Pointer)
127: £temporary1522 -> £temporary1521 = *£temporary1521
128: intPtr = £temporary1522 -> £temporary1521
129: £temporary1523 -> intPtr = *intPtr
130: £temporary1524 = int_to_int longValue (Signed_Long_Int -> Signed_Int)
131: £temporary1523 -> intPtr = £temporary1524
132: goto 144
133: £temporary1525 = arg_list + 2
134: arg_list = £temporary1525
135: £temporary1526 = arg_list - 2
136: £temporary1527 = int_to_int £temporary1526 (Signed_Int -> Pointer)
137: £temporary1528 -> £temporary1527 = *£temporary1527
138: longPtr = £temporary1528 -> £temporary1527
139: £temporary1529 -> longPtr = *longPtr
140: £temporary1529 -> longPtr = longValue
141: goto 144
142: goto 144
143: goto 144
144: percent = 0
145: goto 429
146: call header
147: parameter 8, offset 6
148: call function noellipse-noellipse scanUnsignedLongInt
149: post call
150: £temporary1531 = return_value
151: unsignedLongValue = £temporary1531
152: if star != 0 goto 192
153: goto 155
154: check track map float stack
155: if shortInt != 0 goto 158
156: goto 168
157: check track map float stack
158: £temporary1534 = arg_list + 2
159: arg_list = £temporary1534
160: £temporary1535 = arg_list - 2
161: £temporary1536 = int_to_int £temporary1535 (Signed_Int -> Pointer)
162: £temporary1537 -> £temporary1536 = *£temporary1536
163: unsignedShortPtr = £temporary1537 -> £temporary1536
164: £temporary1538 -> unsignedShortPtr = *unsignedShortPtr
165: £temporary1539 = int_to_int unsignedLongValue (Unsigned_Long_Int -> Signed_Short_Int)
166: £temporary1538 -> unsignedShortPtr = £temporary1539
167: goto 192
168: if longIntOrDouble != 0 goto 181
169: goto 171
170: check track map float stack
171: £temporary1542 = arg_list + 2
172: arg_list = £temporary1542
173: £temporary1543 = arg_list - 2
174: £temporary1544 = int_to_int £temporary1543 (Signed_Int -> Pointer)
175: £temporary1545 -> £temporary1544 = *£temporary1544
176: unsignedIntPtr = £temporary1545 -> £temporary1544
177: £temporary1546 -> unsignedIntPtr = *unsignedIntPtr
178: £temporary1547 = int_to_int unsignedLongValue (Unsigned_Long_Int -> Signed_Int)
179: £temporary1546 -> unsignedIntPtr = £temporary1547
180: goto 192
181: £temporary1548 = arg_list + 2
182: arg_list = £temporary1548
183: £temporary1549 = arg_list - 2
184: £temporary1550 = int_to_int £temporary1549 (Signed_Int -> Pointer)
185: £temporary1551 -> £temporary1550 = *£temporary1550
186: unsignedLongPtr = £temporary1551 -> £temporary1550
187: £temporary1552 -> unsignedLongPtr = *unsignedLongPtr
188: £temporary1552 -> unsignedLongPtr = unsignedLongValue
189: goto 192
190: goto 192
191: goto 192
192: percent = 0
193: goto 429
194: call header
195: parameter 16, offset 6
196: call function noellipse-noellipse scanUnsignedLongInt
197: post call
198: £temporary1554 = return_value
199: unsignedLongValue = £temporary1554
200: if star != 0 goto 240
201: goto 203
202: check track map float stack
203: if shortInt != 0 goto 206
204: goto 216
205: check track map float stack
206: £temporary1557 = arg_list + 2
207: arg_list = £temporary1557
208: £temporary1558 = arg_list - 2
209: £temporary1559 = int_to_int £temporary1558 (Signed_Int -> Pointer)
210: £temporary1560 -> £temporary1559 = *£temporary1559
211: unsignedShortPtr = £temporary1560 -> £temporary1559
212: £temporary1561 -> unsignedShortPtr = *unsignedShortPtr
213: £temporary1562 = int_to_int unsignedLongValue (Unsigned_Long_Int -> Signed_Short_Int)
214: £temporary1561 -> unsignedShortPtr = £temporary1562
215: goto 240
216: if longIntOrDouble != 0 goto 229
217: goto 219
218: check track map float stack
219: £temporary1565 = arg_list + 2
220: arg_list = £temporary1565
221: £temporary1566 = arg_list - 2
222: £temporary1567 = int_to_int £temporary1566 (Signed_Int -> Pointer)
223: £temporary1568 -> £temporary1567 = *£temporary1567
224: unsignedIntPtr = £temporary1568 -> £temporary1567
225: £temporary1569 -> unsignedIntPtr = *unsignedIntPtr
226: £temporary1570 = int_to_int unsignedLongValue (Unsigned_Long_Int -> Signed_Int)
227: £temporary1569 -> unsignedIntPtr = £temporary1570
228: goto 240
229: £temporary1571 = arg_list + 2
230: arg_list = £temporary1571
231: £temporary1572 = arg_list - 2
232: £temporary1573 = int_to_int £temporary1572 (Signed_Int -> Pointer)
233: £temporary1574 -> £temporary1573 = *£temporary1573
234: unsignedLongPtr = £temporary1574 -> £temporary1573
235: £temporary1575 -> unsignedLongPtr = *unsignedLongPtr
236: £temporary1575 -> unsignedLongPtr = unsignedLongValue
237: goto 240
238: goto 240
239: goto 240
240: percent = 0
241: goto 429
242: call header
243: parameter 0, offset 6
244: call function noellipse-noellipse scanUnsignedLongInt
245: post call
246: £temporary1577 = return_value
247: unsignedLongValue = £temporary1577
248: if star != 0 goto 288
249: goto 251
250: check track map float stack
251: if shortInt != 0 goto 254
252: goto 264
253: check track map float stack
254: £temporary1580 = arg_list + 2
255: arg_list = £temporary1580
256: £temporary1581 = arg_list - 2
257: £temporary1582 = int_to_int £temporary1581 (Signed_Int -> Pointer)
258: £temporary1583 -> £temporary1582 = *£temporary1582
259: unsignedShortPtr = £temporary1583 -> £temporary1582
260: £temporary1584 -> unsignedShortPtr = *unsignedShortPtr
261: £temporary1585 = int_to_int unsignedLongValue (Unsigned_Long_Int -> Signed_Short_Int)
262: £temporary1584 -> unsignedShortPtr = £temporary1585
263: goto 288
264: if longIntOrDouble != 0 goto 277
265: goto 267
266: check track map float stack
267: £temporary1588 = arg_list + 2
268: arg_list = £temporary1588
269: £temporary1589 = arg_list - 2
270: £temporary1590 = int_to_int £temporary1589 (Signed_Int -> Pointer)
271: £temporary1591 -> £temporary1590 = *£temporary1590
272: unsignedIntPtr = £temporary1591 -> £temporary1590
273: £temporary1592 -> unsignedIntPtr = *unsignedIntPtr
274: £temporary1593 = int_to_int unsignedLongValue (Unsigned_Long_Int -> Signed_Int)
275: £temporary1592 -> unsignedIntPtr = £temporary1593
276: goto 288
277: £temporary1594 = arg_list + 2
278: arg_list = £temporary1594
279: £temporary1595 = arg_list - 2
280: £temporary1596 = int_to_int £temporary1595 (Signed_Int -> Pointer)
281: £temporary1597 -> £temporary1596 = *£temporary1596
282: unsignedLongPtr = £temporary1597 -> £temporary1596
283: £temporary1598 -> unsignedLongPtr = *unsignedLongPtr
284: £temporary1598 -> unsignedLongPtr = unsignedLongValue
285: goto 288
286: goto 288
287: goto 288
288: percent = 0
289: goto 429
290: push float longDoubleValue
291: pop float empty X
292: call header
293: call function noellipse-noellipse scanLongDouble
294: post call
295: £temporary1600 = return_value
296: top float longDoubleValue
297: pop float empty X
298: if star != 0 goto 348
299: goto 301
300: check track map float stack
301: if longIntOrDouble != 0 goto 304
302: goto 317
303: check track map float stack
304: £temporary1603 = arg_list + 2
305: arg_list = £temporary1603
306: £temporary1604 = arg_list - 2
307: £temporary1605 = int_to_int £temporary1604 (Signed_Int -> Pointer)
308: £temporary1606 -> £temporary1605 = *£temporary1605
309: doublePtr = £temporary1606 -> £temporary1605
310: £temporary1607 -> doublePtr = *doublePtr
311: push float £temporary1607 -> doublePtr
312: pop float empty X
313: push float longDoubleValue
314: top float £temporary1607 -> doublePtr
315: pop float empty X
316: goto 348
317: if longDouble != 0 goto 320
318: goto 333
319: check track map float stack
320: £temporary1609 = arg_list + 2
321: arg_list = £temporary1609
322: £temporary1610 = arg_list - 2
323: £temporary1611 = int_to_int £temporary1610 (Signed_Int -> Pointer)
324: £temporary1612 -> £temporary1611 = *£temporary1611
325: longDoublePtr = £temporary1612 -> £temporary1611
326: £temporary1613 -> longDoublePtr = *longDoublePtr
327: push float £temporary1613 -> longDoublePtr
328: pop float empty X
329: push float longDoubleValue
330: top float £temporary1613 -> longDoublePtr
331: pop float empty X
332: goto 348
333: £temporary1614 = arg_list + 2
334: arg_list = £temporary1614
335: £temporary1615 = arg_list - 2
336: £temporary1616 = int_to_int £temporary1615 (Signed_Int -> Pointer)
337: £temporary1617 -> £temporary1616 = *£temporary1616
338: floatPtr = £temporary1617 -> £temporary1616
339: £temporary1618 -> floatPtr = *floatPtr
340: push float £temporary1618 -> floatPtr
341: pop float empty X
342: push float longDoubleValue
343: top float £temporary1618 -> floatPtr
344: pop float empty X
345: goto 348
346: goto 348
347: goto 348
348: percent = 0
349: goto 429
350: not = 0
351: index = index + 1
352: £temporary1624 = format + index
353: £temporary1623 -> £temporary1624 = *£temporary1624
354: if £temporary1623 -> £temporary1624 == 94 goto 357
355: goto 360
356: check track map float stack
357: not = 1
358: index = index + 1
359: goto 360
360: startIndex = index
361: £temporary1628 = format + index
362: £temporary1627 -> £temporary1628 = *£temporary1628
363: if £temporary1627 -> £temporary1628 != 93 goto 366
364: goto 368
365: check track map float stack
366: index = index + 1
367: goto 361
368: £temporary1632 = format + index
369: £temporary1631 -> £temporary1632 = *£temporary1632
370: £temporary1631 -> £temporary1632 = 0
371: if star != 0 goto 390
372: goto 374
373: check track map float stack
374: £temporary1635 = arg_list + 2
375: arg_list = £temporary1635
376: £temporary1636 = arg_list - 2
377: £temporary1637 = int_to_int £temporary1636 (Signed_Int -> Pointer)
378: £temporary1638 -> £temporary1637 = *£temporary1637
379: string = £temporary1638 -> £temporary1637
380: call header
381: parameter string, offset 6
382: £temporary1640 = format + startIndex
383: £temporary1639 -> £temporary1640 = *£temporary1640
384: £temporary1641 = &£temporary1639 -> £temporary1640
385: parameter £temporary1641, offset 8
386: parameter not, offset 10
387: call function noellipse-noellipse scanPattern
388: post call
389: goto 400
390: call header
391: parameter 0, offset 6
392: £temporary1644 = format + startIndex
393: £temporary1643 -> £temporary1644 = *£temporary1644
394: £temporary1645 = &£temporary1643 -> £temporary1644
395: parameter £temporary1645, offset 8
396: parameter not, offset 10
397: call function noellipse-noellipse scanPattern
398: post call
399: goto 400
400: goto 429
401: £temporary1647 = arg_list + 2
402: arg_list = £temporary1647
403: £temporary1648 = arg_list - 2
404: £temporary1649 = int_to_int £temporary1648 (Signed_Int -> Pointer)
405: £temporary1650 -> £temporary1649 = *£temporary1649
406: charsPtr = £temporary1650 -> £temporary1649
407: £temporary1651 -> charsPtr = *charsPtr
408: £temporary1651 -> charsPtr = g_inChars
409: percent = 0
410: goto 429
411: call header
412: parameter string_scanFormat20c203D202725c270A#, offset 6
413: £temporary1652 = int_to_int c (Signed_Char -> Signed_Int)
414: parameter £temporary1652, offset 8
415: call function noellipse-ellipse printf, extra 0
416: post call
417: goto 429
418: goto 429
419: if c == 37 goto 422
420: goto 429
421: check track map float stack
422: percent = 1
423: shortInt = 0
424: longIntOrDouble = 0
425: longDouble = 0
426: star = 0
427: goto 429
428: goto 429
429: empty
430: index = index + 1
431: goto 8
432: return_value = g_inCount
433: return
434: empty
435: return
436: function end scanFormat
0: £temporary1671 = &format
1: £temporary1672 = int_to_int £temporary1671 (Pointer -> Pointer)
2: £temporary1673 = £temporary1672 + 2
3: arg_list = £temporary1673
4: call header
5: parameter format, offset 6
6: parameter arg_list, offset 8
7: call function ellipse-noellipse vscanf
8: post call
9: £temporary1674 = return_value
10: return_value = £temporary1674
11: return
12: empty
13: return
14: function end scanf
0: call header
1: parameter stdin, offset 6
2: parameter format, offset 8
3: parameter arg_list, offset 10
4: call function noellipse-noellipse vfscanf
5: post call
6: £temporary1678 = return_value
7: return_value = £temporary1678
8: return
9: empty
10: return
11: function end vscanf
0: £temporary1682 = &format
1: £temporary1683 = int_to_int £temporary1682 (Pointer -> Pointer)
2: £temporary1684 = £temporary1683 + 2
3: arg_list = £temporary1684
4: call header
5: parameter inStream, offset 6
6: parameter format, offset 8
7: parameter arg_list, offset 10
8: call function ellipse-noellipse vfscanf
9: post call
10: £temporary1685 = return_value
11: return_value = £temporary1685
12: return
13: empty
14: return
15: function end fscanf
0: g_inStatus = 0
1: £temporary1690 = int_to_int inStream (Pointer -> Pointer)
2: g_inDevice = £temporary1690
3: call header
4: parameter format, offset 6
5: parameter arg_list, offset 8
6: call function noellipse-noellipse scanFormat
7: post call
8: £temporary1691 = return_value
9: return_value = £temporary1691
10: return
11: empty
12: return
13: function end vfscanf
0: £temporary1694 = &format
1: £temporary1695 = int_to_int £temporary1694 (Pointer -> Pointer)
2: £temporary1696 = £temporary1695 + 2
3: arg_list = £temporary1696
4: call header
5: parameter inString, offset 6
6: parameter format, offset 8
7: parameter arg_list, offset 10
8: call function ellipse-noellipse vsscanf
9: post call
10: £temporary1697 = return_value
11: return_value = £temporary1697
12: return
13: empty
14: return
15: function end sscanf
0: g_inStatus = 1
1: £temporary1702 = int_to_int inString (Pointer -> Pointer)
2: g_inDevice = £temporary1702
3: call header
4: parameter format, offset 6
5: parameter arg_list, offset 8
6: call function noellipse-noellipse scanFormat
7: post call
8: £temporary1703 = return_value
9: return_value = £temporary1703
10: return
11: empty
12: return
13: function end vsscanf
0: g_outStatus = 0
1: £temporary1706 = int_to_int stream (Pointer -> Pointer)
2: g_outDevice = £temporary1706
3: call header
4: £temporary1707 = int_to_int i (Signed_Int -> Signed_Char)
5: parameter £temporary1707, offset 6
6: call function noellipse-noellipse printChar
7: post call
8: return_value = 1
9: return
10: empty
11: return
12: function end putc
0: g_outStatus = 0
1: £temporary1710 = int_to_int stream (Pointer -> Pointer)
2: g_outDevice = £temporary1710
3: call header
4: £temporary1711 = int_to_int i (Signed_Int -> Signed_Char)
5: parameter £temporary1711, offset 6
6: call function noellipse-noellipse printChar
7: post call
8: return_value = 1
9: return
10: empty
11: return
12: function end fputc
0: g_outStatus = 0
1: £temporary1714 = int_to_int stdout (Pointer -> Pointer)
2: g_outDevice = £temporary1714
3: call header
4: £temporary1715 = int_to_int i (Signed_Int -> Signed_Char)
5: parameter £temporary1715, offset 6
6: call function noellipse-noellipse printChar
7: post call
8: return_value = 1
9: return
10: empty
11: return
12: function end putchar
0: case g_outStatus == 0 goto 5
1: case g_outStatus == 1 goto 16
2: case g_outStatus == 2 goto 24
3: case end g_outStatus
4: goto 26
5: £temporary1718 = int_to_int g_outDevice (Pointer -> Pointer)
6: stream = £temporary1718
7: ah = 64
8: £temporary1721 -> stream = *stream, offset 2
9: bx = £temporary1721 -> stream
10: cx = 1
11: £temporary1724 = &c
12: dx = £temporary1724
13: interrupt 33
14: g_outChars = g_outChars + 1
15: goto 26
16: £temporary1726 = int_to_int g_outDevice (Pointer -> Pointer)
17: outString = £temporary1726
18: £temporary1727 = g_outChars
19: g_outChars = g_outChars + 1
20: £temporary1729 = outString + £temporary1727
21: £temporary1728 -> £temporary1729 = *£temporary1729
22: £temporary1728 -> £temporary1729 = c
23: goto 26
24: g_outChars = g_outChars + 1
25: goto 26
26: empty
27: return
28: function end printChar
0: if s != 0 goto 3
1: goto 47
2: check track map float stack
3: if precision == 0 goto 6
4: goto 24
5: check track map float stack
6: index = 0
7: empty
8: £temporary1735 = s + index
9: £temporary1734 -> £temporary1735 = *£temporary1735
10: if £temporary1734 -> £temporary1735 != 0 goto 13
11: goto 72
12: check track map float stack
13: empty
14: call header
15: £temporary1739 = s + index
16: £temporary1738 -> £temporary1739 = *£temporary1739
17: parameter £temporary1738 -> £temporary1739, offset 6
18: call function noellipse-noellipse printChar
19: post call
20: empty
21: index = index + 1
22: goto 7
23: goto 72
24: index = 0
25: empty
26: £temporary1741 = precision
27: precision = precision - 1
28: if £temporary1741 > 0 goto 30
29: goto 72
30: £temporary1744 = s + index
31: £temporary1743 -> £temporary1744 = *£temporary1744
32: if £temporary1743 -> £temporary1744 != 0 goto 35
33: goto 72
34: check track map float stack
35: empty
36: call header
37: £temporary1749 = s + index
38: £temporary1748 -> £temporary1749 = *£temporary1749
39: parameter £temporary1748 -> £temporary1749, offset 6
40: call function noellipse-noellipse printChar
41: post call
42: empty
43: index = index + 1
44: goto 25
45: goto 72
46: goto 72
47: call header
48: parameter 60, offset 6
49: call function noellipse-noellipse printChar
50: post call
51: call header
52: parameter 78, offset 6
53: call function noellipse-noellipse printChar
54: post call
55: call header
56: parameter 85, offset 6
57: call function noellipse-noellipse printChar
58: post call
59: call header
60: parameter 76, offset 6
61: call function noellipse-noellipse printChar
62: post call
63: call header
64: parameter 76, offset 6
65: call function noellipse-noellipse printChar
66: post call
67: call header
68: parameter 62, offset 6
69: call function noellipse-noellipse printChar
70: post call
71: goto 72
72: empty
73: return
74: function end printString
0: if longValue != 0 goto 3
1: goto 18
2: check track map float stack
3: £temporary1766 = longValue % 10
4: £temporary1767 = int_to_int £temporary1766 (Signed_Long_Int -> Signed_Int)
5: digit = £temporary1767
6: call header
7: £temporary1768 = longValue / 10
8: parameter £temporary1768, offset 6
9: call function noellipse-noellipse printLongIntRec
10: post call
11: call header
12: £temporary1770 = digit + 48
13: £temporary1771 = int_to_int £temporary1770 (Signed_Int -> Signed_Char)
14: parameter £temporary1771, offset 6
15: call function noellipse-noellipse printChar
16: post call
17: goto 18
18: empty
19: return
20: function end printLongIntRec
0: if longValue < 0 goto 3
1: goto 10
2: check track map float stack
3: £temporary1776 = -longValue
4: longValue = £temporary1776
5: call header
6: parameter 45, offset 6
7: call function noellipse-noellipse printChar
8: post call
9: goto 28
10: if space != 0 goto 13
11: goto 18
12: check track map float stack
13: call header
14: parameter 32, offset 6
15: call function noellipse-noellipse printChar
16: post call
17: goto 28
18: if plus != 0 goto 21
19: goto 28
20: check track map float stack
21: call header
22: parameter 43, offset 6
23: call function noellipse-noellipse printChar
24: post call
25: goto 28
26: goto 28
27: goto 28
28: if longValue == 0 goto 31
29: goto 36
30: check track map float stack
31: call header
32: parameter 48, offset 6
33: call function noellipse-noellipse printChar
34: post call
35: goto 41
36: call header
37: parameter longValue, offset 6
38: call function noellipse-noellipse printLongIntRec
39: post call
40: goto 41
41: empty
42: return
43: function end printLongInt
0: if digit < 10 goto 3
1: goto 8
2: check track map float stack
3: £temporary1791 = 48 + digit
4: £temporary1792 = int_to_int £temporary1791 (Signed_Int -> Signed_Char)
5: return_value = £temporary1792
6: return
7: goto 24
8: if capital != 0 goto 11
9: goto 17
10: check track map float stack
11: £temporary1793 = digit - 10
12: £temporary1794 = 65 + £temporary1793
13: £temporary1795 = int_to_int £temporary1794 (Signed_Int -> Signed_Char)
14: return_value = £temporary1795
15: return
16: goto 24
17: £temporary1796 = digit - 10
18: £temporary1797 = 97 + £temporary1796
19: £temporary1798 = int_to_int £temporary1797 (Signed_Int -> Signed_Char)
20: return_value = £temporary1798
21: return
22: goto 24
23: goto 24
24: empty
25: return
26: function end digitToChar
0: if unsignedValue > 0 goto 3
1: goto 25
2: check track map float stack
3: £temporary1801 = unsignedValue % base
4: £temporary1802 = int_to_int £temporary1801 (Unsigned_Long_Int -> Signed_Int)
5: digit = £temporary1802
6: call header
7: £temporary1803 = unsignedValue / base
8: parameter £temporary1803, offset 6
9: parameter base, offset 10
10: parameter capital, offset 14
11: call function noellipse-noellipse printUnsignedLongRec
12: post call
13: call header
14: parameter digit, offset 6
15: parameter capital, offset 8
16: call function noellipse-noellipse digitToChar
17: post call
18: £temporary1805 = return_value
19: c = £temporary1805
20: call header
21: parameter c, offset 6
22: call function noellipse-noellipse printChar
23: post call
24: goto 25
25: empty
26: return
27: function end printUnsignedLongRec
0: if plus != 0 goto 3
1: goto 8
2: check track map float stack
3: call header
4: parameter 43, offset 6
5: call function noellipse-noellipse printChar
6: post call
7: goto 8
8: if space != 0 goto 11
9: goto 16
10: check track map float stack
11: call header
12: parameter 32, offset 6
13: call function noellipse-noellipse printChar
14: post call
15: goto 16
16: if grid != 0 goto 19
17: goto 48
18: check track map float stack
19: if base == 8 goto 22
20: goto 27
21: check track map float stack
22: call header
23: parameter 48, offset 6
24: call function noellipse-noellipse printChar
25: post call
26: goto 27
27: if base == 16 goto 30
28: goto 48
29: check track map float stack
30: call header
31: parameter 48, offset 6
32: call function noellipse-noellipse printChar
33: post call
34: call header
35: if capital != 0 goto 37
36: goto 40
37: empty
38: £temporary1825 = 88
39: goto 42
40: empty
41: £temporary1825 = 120
42: empty
43: parameter £temporary1825, offset 6
44: call function noellipse-noellipse printChar
45: post call
46: goto 48
47: goto 48
48: if unsignedValue == 0 goto 51
49: goto 56
50: check track map float stack
51: call header
52: parameter 48, offset 6
53: call function noellipse-noellipse printChar
54: post call
55: goto 63
56: call header
57: parameter unsignedValue, offset 6
58: parameter base, offset 10
59: parameter capital, offset 14
60: call function noellipse-noellipse printUnsignedLongRec
61: post call
62: goto 63
63: empty
64: return
65: function end printUnsignedLong
0: push float longDoubleValue
1: push float longDoubleValue
2: £temporary1840 = float_to_int longDoubleValue (Long_Double -> Signed_Long_Int)
3: £temporary1841 = int_to_float £temporary1840 (Signed_Long_Int -> Long_Double)
4: £temporary1842 = longDoubleValue - £temporary1841
5: top float longDoubleValue
6: pop float empty X
7: if precision == 0 goto 10
8: goto 12
9: check track map float stack
10: precision = 6
11: goto 12
12: if grid != 0 goto 17
13: goto 14
14: if precision > 0 goto 17
15: goto 22
16: check track map float stack
17: call header
18: parameter 46, offset 6
19: call function noellipse-noellipse printChar
20: post call
21: goto 22
22: £temporary1848 = precision
23: precision = precision - 1
24: if £temporary1848 > 0 goto 27
25: goto 48
26: check track map float stack
27: push float 10.0
28: push float longDoubleValue
29: £temporary1850 = 10.0 * longDoubleValue
30: pop float longDoubleValue10
31: push float longDoubleValue10
32: £temporary1851 = float_to_int longDoubleValue10 (Long_Double -> Signed_Int)
33: digitValue = £temporary1851
34: call header
35: £temporary1852 = digitValue + 48
36: £temporary1853 = int_to_int £temporary1852 (Signed_Int -> Signed_Char)
37: parameter £temporary1853, offset 6
38: call function noellipse-noellipse printChar
39: post call
40: push float longDoubleValue
41: pop float empty X
42: push float longDoubleValue10
43: £temporary1855 = int_to_float digitValue (Signed_Int -> Long_Double)
44: £temporary1856 = longDoubleValue10 - £temporary1855
45: top float longDoubleValue
46: pop float empty X
47: goto 22
48: empty
49: return
50: function end printLongDoubleFraction
0: push float longDoubleValue
1: push float 0.0
2: if longDoubleValue < 0.0 goto 5
3: goto 18
4: check track map float stack
5: call header
6: parameter 45, offset 6
7: call function noellipse-noellipse printChar
8: post call
9: push float longDoubleValue
10: pop float empty X
11: push float longDoubleValue
12: £temporary1861 = -longDoubleValue
13: top float longDoubleValue
14: pop float empty X
15: plus = 0
16: space = 0
17: goto 18
18: push float longDoubleValue
19: £temporary1862 = float_to_int longDoubleValue (Long_Double -> Signed_Long_Int)
20: longValue = £temporary1862
21: call header
22: parameter longValue, offset 6
23: parameter plus, offset 10
24: parameter space, offset 12
25: call function noellipse-noellipse printLongInt
26: post call
27: push float longDoubleValue
28: £temporary1864 = int_to_float longValue (Signed_Long_Int -> Long_Double)
29: £temporary1865 = longDoubleValue - £temporary1864
30: top float longDoubleValue
31: pop float empty X
32: call header
33: push float longDoubleValue
34: parameter longDoubleValue, offset 6
35: parameter grid, offset 14
36: parameter precision, offset 16
37: call function noellipse-noellipse printLongDoubleFraction
38: post call
39: empty
40: return
41: function end printLongDoublePlain
0: push float value
1: push float 0.0
2: if value == 0.0 goto 5
3: goto 33
4: check track map float stack
5: call header
6: parameter 48, offset 6
7: call function noellipse-noellipse printChar
8: post call
9: call header
10: push float 0.0
11: parameter 0.0, offset 6
12: parameter precision, offset 14
13: parameter grid, offset 16
14: call function noellipse-noellipse printLongDoubleFraction
15: post call
16: call header
17: if capital != 0 goto 19
18: goto 22
19: empty
20: £temporary1881 = 69
21: goto 24
22: empty
23: £temporary1881 = 101
24: empty
25: parameter £temporary1881, offset 6
26: call function noellipse-noellipse printChar
27: post call
28: call header
29: parameter 48, offset 6
30: call function noellipse-noellipse printChar
31: post call
32: goto 98
33: push float value
34: push float 0.0
35: if value < 0.0 goto 38
36: goto 49
37: check track map float stack
38: call header
39: parameter 45, offset 6
40: call function noellipse-noellipse printChar
41: post call
42: push float value
43: pop float empty X
44: push float value
45: £temporary1886 = -value
46: top float value
47: pop float empty X
48: goto 49
49: call header
50: push float value
51: parameter value, offset 6
52: call function noellipse-noellipse log10
53: post call
54: £temporary1887 = return_value
55: £temporary1888 = float_to_int £temporary1887 (Double -> Signed_Int)
56: expo = £temporary1888
57: push float value
58: call header
59: push float 10.0
60: parameter 10.0, offset 6
61: £temporary1889 = int_to_float expo (Signed_Int -> Double)
62: parameter £temporary1889, offset 14
63: call function noellipse-noellipse pow
64: post call
65: £temporary1890 = return_value
66: £temporary1891 = value / £temporary1890
67: top float value
68: pop float empty X
69: call header
70: push float value
71: parameter value, offset 6
72: parameter plus, offset 14
73: parameter space, offset 16
74: parameter grid, offset 18
75: parameter precision, offset 20
76: call function noellipse-noellipse printLongDoublePlain
77: post call
78: call header
79: if capital != 0 goto 81
80: goto 84
81: empty
82: £temporary1897 = 69
83: goto 86
84: empty
85: £temporary1897 = 101
86: empty
87: parameter £temporary1897, offset 6
88: call function noellipse-noellipse printChar
89: post call
90: call header
91: £temporary1899 = int_to_int expo (Signed_Int -> Signed_Long_Int)
92: parameter £temporary1899, offset 6
93: parameter 1, offset 10
94: parameter 0, offset 12
95: call function noellipse-noellipse printLongInt
96: post call
97: goto 98
98: empty
99: return
100: function end printLongDoubleExpo
0: if widthPtr != 0 goto 2
1: goto 14
2: £temporary1921 -> widthPtr = *widthPtr
3: if £temporary1921 -> widthPtr == -1 goto 6
4: goto 14
5: check track map float stack
6: £temporary1924 -> widthPtr = *widthPtr
7: £temporary1925 = arg_list + 2
8: arg_list = £temporary1925
9: £temporary1926 = arg_list - 2
10: £temporary1927 = int_to_int £temporary1926 (Signed_Int -> Pointer)
11: £temporary1928 -> £temporary1927 = *£temporary1927
12: £temporary1924 -> widthPtr = £temporary1928 -> £temporary1927
13: goto 14
14: if precisionPtr != 0 goto 16
15: goto 28
16: £temporary1930 -> precisionPtr = *precisionPtr
17: if £temporary1930 -> precisionPtr == -1 goto 20
18: goto 28
19: check track map float stack
20: £temporary1933 -> precisionPtr = *precisionPtr
21: £temporary1934 = arg_list + 2
22: arg_list = £temporary1934
23: £temporary1935 = arg_list - 2
24: £temporary1936 = int_to_int £temporary1935 (Signed_Int -> Pointer)
25: £temporary1937 -> £temporary1936 = *£temporary1936
26: £temporary1933 -> precisionPtr = £temporary1937 -> £temporary1936
27: goto 28
28: return_value = arg_list
29: return
30: empty
31: return
32: function end checkWidthAndPrecision
0: empty
1: return
2: function end testY
0: if j == 1 goto 3
1: goto 5
2: check track map float stack
3: i = 1
4: goto 7
5: i = 2
6: goto 7
7: j = i
8: empty
9: return
10: function end testX
0: £temporary1939 -> format = *format
1: c = £temporary1939 -> format
2: case c == 100 goto 21
3: case c == 105 goto 21
4: case c == 99 goto 90
5: case c == 115 goto 111
6: case c == 88 goto 132
7: case c == 120 goto 132
8: case c == 98 goto 132
9: case c == 111 goto 132
10: case c == 117 goto 132
11: case c == 71 goto 213
12: case c == 103 goto 213
13: case c == 69 goto 213
14: case c == 101 goto 213
15: case c == 102 goto 213
16: case c == 112 goto 371
17: case c == 110 goto 397
18: case c == 37 goto 421
19: case end c
20: goto 435
21: if shortInt != 0 goto 24
22: goto 33
23: check track map float stack
24: £temporary1940 = arg_list + 2
25: arg_list = £temporary1940
26: £temporary1941 = arg_list - 2
27: £temporary1942 = int_to_int £temporary1941 (Signed_Int -> Pointer)
28: £temporary1943 -> £temporary1942 = *£temporary1942
29: £temporary1944 = int_to_int £temporary1943 -> £temporary1942 (Signed_Int -> Signed_Short_Int)
30: £temporary1945 = int_to_int £temporary1944 (Signed_Short_Int -> Signed_Long_Int)
31: longValue = £temporary1945
32: goto 52
33: if longInt != 0 goto 36
34: goto 43
35: check track map float stack
36: £temporary1946 = arg_list + 4
37: arg_list = £temporary1946
38: £temporary1947 = arg_list - 4
39: £temporary1948 = int_to_int £temporary1947 (Signed_Int -> Pointer)
40: £temporary1949 -> £temporary1948 = *£temporary1948
41: longValue = £temporary1949 -> £temporary1948
42: goto 52
43: £temporary1950 = arg_list + 2
44: arg_list = £temporary1950
45: £temporary1951 = arg_list - 2
46: £temporary1952 = int_to_int £temporary1951 (Signed_Int -> Pointer)
47: £temporary1953 -> £temporary1952 = *£temporary1952
48: £temporary1954 = int_to_int £temporary1953 -> £temporary1952 (Signed_Int -> Signed_Long_Int)
49: longValue = £temporary1954
50: goto 52
51: goto 52
52: if negativePtr != 0 goto 55
53: goto 64
54: check track map float stack
55: £temporary1958 -> negativePtr = *negativePtr
56: if longValue < 0 goto 58
57: goto 60
58: £temporary1960 = 1
59: goto 61
60: £temporary1960 = 0
61: empty
62: £temporary1958 -> negativePtr = £temporary1960
63: goto 64
64: if sign != 0 goto 74
65: goto 67
66: check track map float stack
67: call header
68: parameter longValue, offset 6
69: call function noellipse-noellipse labs
70: post call
71: £temporary1963 = return_value
72: longValue = £temporary1963
73: goto 74
74: call header
75: parameter arg_list, offset 6
76: parameter widthPtr, offset 8
77: £temporary1964 = &precision
78: parameter £temporary1964, offset 10
79: call function noellipse-noellipse checkWidthAndPrecision
80: post call
81: £temporary1965 = return_value
82: arg_list = £temporary1965
83: call header
84: parameter longValue, offset 6
85: parameter plus, offset 10
86: parameter space, offset 12
87: call function noellipse-noellipse printLongInt
88: post call
89: goto 435
90: £temporary1967 = arg_list + 2
91: arg_list = £temporary1967
92: £temporary1968 = arg_list - 2
93: £temporary1969 = int_to_int £temporary1968 (Signed_Int -> Pointer)
94: £temporary1970 -> £temporary1969 = *£temporary1969
95: £temporary1971 = int_to_int £temporary1970 -> £temporary1969 (Signed_Int -> Signed_Char)
96: charValue = £temporary1971
97: call header
98: parameter arg_list, offset 6
99: parameter widthPtr, offset 8
100: £temporary1972 = &precision
101: parameter £temporary1972, offset 10
102: call function noellipse-noellipse checkWidthAndPrecision
103: post call
104: £temporary1973 = return_value
105: arg_list = £temporary1973
106: call header
107: parameter charValue, offset 6
108: call function noellipse-noellipse printChar
109: post call
110: goto 435
111: £temporary1975 = arg_list + 2
112: arg_list = £temporary1975
113: £temporary1976 = arg_list - 2
114: £temporary1977 = int_to_int £temporary1976 (Signed_Int -> Pointer)
115: £temporary1978 -> £temporary1977 = *£temporary1977
116: stringValue = £temporary1978 -> £temporary1977
117: call header
118: parameter arg_list, offset 6
119: parameter widthPtr, offset 8
120: £temporary1979 = &precision
121: parameter £temporary1979, offset 10
122: call function noellipse-noellipse checkWidthAndPrecision
123: post call
124: £temporary1980 = return_value
125: arg_list = £temporary1980
126: call header
127: parameter stringValue, offset 6
128: parameter precision, offset 8
129: call function noellipse-noellipse printString
130: post call
131: goto 435
132: if c == 117 goto 134
133: goto 137
134: empty
135: £temporary1996 = 10
136: goto 155
137: empty
138: if c == 111 goto 140
139: goto 143
140: empty
141: £temporary1992 = 8
142: goto 153
143: empty
144: if c == 98 goto 146
145: goto 149
146: empty
147: £temporary1988 = 2
148: goto 151
149: empty
150: £temporary1988 = 16
151: empty
152: £temporary1992 = £temporary1988
153: empty
154: £temporary1996 = £temporary1992
155: empty
156: base = £temporary1996
157: if shortInt != 0 goto 160
158: goto 169
159: check track map float stack
160: £temporary1997 = arg_list + 2
161: arg_list = £temporary1997
162: £temporary1998 = arg_list - 2
163: £temporary1999 = int_to_int £temporary1998 (Signed_Int -> Pointer)
164: £temporary2000 -> £temporary1999 = *£temporary1999
165: £temporary2001 = int_to_int £temporary2000 -> £temporary1999 (Unsigned_Int -> Unsigned_Short_Int)
166: £temporary2002 = int_to_int £temporary2001 (Unsigned_Short_Int -> Unsigned_Long_Int)
167: value = £temporary2002
168: goto 188
169: if longInt != 0 goto 172
170: goto 179
171: check track map float stack
172: £temporary2003 = arg_list + 4
173: arg_list = £temporary2003
174: £temporary2004 = arg_list - 4
175: £temporary2005 = int_to_int £temporary2004 (Signed_Int -> Pointer)
176: £temporary2006 -> £temporary2005 = *£temporary2005
177: value = £temporary2006 -> £temporary2005
178: goto 188
179: £temporary2007 = arg_list + 2
180: arg_list = £temporary2007
181: £temporary2008 = arg_list - 2
182: £temporary2009 = int_to_int £temporary2008 (Signed_Int -> Pointer)
183: £temporary2010 -> £temporary2009 = *£temporary2009
184: £temporary2011 = int_to_int £temporary2010 -> £temporary2009 (Unsigned_Int -> Unsigned_Long_Int)
185: value = £temporary2011
186: goto 188
187: goto 188
188: call header
189: parameter arg_list, offset 6
190: parameter widthPtr, offset 8
191: £temporary2014 = &precision
192: parameter £temporary2014, offset 10
193: call function noellipse-noellipse checkWidthAndPrecision
194: post call
195: £temporary2015 = return_value
196: arg_list = £temporary2015
197: call header
198: parameter value, offset 6
199: parameter plus, offset 10
200: parameter space, offset 12
201: parameter grid, offset 14
202: parameter base, offset 16
203: call header
204: £temporary2016 = int_to_int c (Signed_Char -> Signed_Int)
205: parameter £temporary2016, offset 26
206: call function noellipse-noellipse isupper
207: post call
208: £temporary2017 = return_value
209: parameter £temporary2017, offset 20
210: call function noellipse-noellipse printUnsignedLong
211: post call
212: goto 435
213: if longDouble != 0 goto 216
214: goto 236
215: check track map float stack
216: push float longDoubleValue
217: pop float empty X
218: £temporary2019 = arg_list + 8
219: arg_list = £temporary2019
220: £temporary2020 = arg_list - 8
221: £temporary2021 = int_to_int £temporary2020 (Signed_Int -> Pointer)
222: £temporary2022 -> £temporary2021 = *£temporary2021
223: push float £temporary2022 -> £temporary2021
224: top float longDoubleValue
225: pop float empty X
226: call header
227: push float longDoubleValue
228: parameter longDoubleValue, offset 6
229: parameter 0, offset 14
230: parameter 0, offset 16
231: parameter 0, offset 18
232: parameter 3, offset 20
233: call function noellipse-noellipse printLongDoublePlain
234: post call
235: goto 247
236: push float longDoubleValue
237: pop float empty X
238: £temporary2024 = arg_list + 8
239: arg_list = £temporary2024
240: £temporary2025 = arg_list - 8
241: £temporary2026 = int_to_int £temporary2025 (Signed_Int -> Pointer)
242: £temporary2027 -> £temporary2026 = *£temporary2026
243: push float £temporary2027 -> £temporary2026
244: top float longDoubleValue
245: pop float empty X
246: goto 247
247: if negativePtr != 0 goto 250
248: goto 261
249: check track map float stack
250: £temporary2031 -> negativePtr = *negativePtr
251: push float longDoubleValue
252: push 0
253: if longDoubleValue < 0 goto 255
254: goto 257
255: £temporary2033 = 1
256: goto 258
257: £temporary2033 = 0
258: empty
259: £temporary2031 -> negativePtr = £temporary2033
260: goto 261
261: if sign != 0 goto 275
262: goto 264
263: check track map float stack
264: push float longDoubleValue
265: pop float empty X
266: call header
267: push float longDoubleValue
268: parameter longDoubleValue, offset 6
269: call function noellipse-noellipse fabs
270: post call
271: £temporary2036 = return_value
272: top float longDoubleValue
273: pop float empty X
274: goto 275
275: call header
276: parameter arg_list, offset 6
277: parameter widthPtr, offset 8
278: £temporary2037 = &precision
279: parameter £temporary2037, offset 10
280: call function noellipse-noellipse checkWidthAndPrecision
281: post call
282: £temporary2038 = return_value
283: arg_list = £temporary2038
284: if c == 102 goto 287
285: goto 297
286: check track map float stack
287: call header
288: push float longDoubleValue
289: parameter longDoubleValue, offset 6
290: parameter plus, offset 14
291: parameter space, offset 16
292: parameter grid, offset 18
293: parameter precision, offset 20
294: call function noellipse-noellipse printLongDoublePlain
295: post call
296: goto 370
297: call header
298: £temporary2041 = int_to_int c (Signed_Char -> Signed_Int)
299: parameter £temporary2041, offset 6
300: call function noellipse-noellipse tolower
301: post call
302: £temporary2042 = return_value
303: if £temporary2042 == 101 goto 306
304: goto 323
305: check track map float stack
306: call header
307: push float longDoubleValue
308: parameter longDoubleValue, offset 6
309: parameter plus, offset 14
310: parameter space, offset 16
311: parameter grid, offset 18
312: parameter precision, offset 20
313: call header
314: £temporary2044 = int_to_int c (Signed_Char -> Signed_Int)
315: parameter £temporary2044, offset 28
316: call function noellipse-noellipse isupper
317: post call
318: £temporary2045 = return_value
319: parameter £temporary2045, offset 22
320: call function noellipse-noellipse printLongDoubleExpo
321: post call
322: goto 370
323: call header
324: call header
325: push float longDoubleValue
326: parameter longDoubleValue, offset 6
327: call function noellipse-noellipse fabs
328: post call
329: £temporary2047 = return_value
330: parameter £temporary2047, offset 6
331: call function noellipse-noellipse log10
332: post call
333: £temporary2048 = return_value
334: £temporary2049 = float_to_int £temporary2048 (Double -> Signed_Int)
335: expo = £temporary2049
336: if expo >= -3 goto 338
337: goto 351
338: if expo <= 2 goto 341
339: goto 351
340: check track map float stack
341: call header
342: push float longDoubleValue
343: parameter longDoubleValue, offset 6
344: parameter plus, offset 14
345: parameter space, offset 16
346: parameter grid, offset 18
347: parameter precision, offset 20
348: call function noellipse-noellipse printLongDoublePlain
349: post call
350: goto 370
351: call header
352: push float longDoubleValue
353: parameter longDoubleValue, offset 6
354: parameter plus, offset 14
355: parameter space, offset 16
356: parameter grid, offset 18
357: parameter precision, offset 20
358: call header
359: £temporary2054 = int_to_int c (Signed_Char -> Signed_Int)
360: parameter £temporary2054, offset 28
361: call function noellipse-noellipse isupper
362: post call
363: £temporary2055 = return_value
364: parameter £temporary2055, offset 22
365: call function noellipse-noellipse printLongDoubleExpo
366: post call
367: goto 370
368: goto 370
369: goto 370
370: goto 435
371: £temporary2057 = arg_list + 2
372: arg_list = £temporary2057
373: £temporary2058 = arg_list - 2
374: £temporary2059 = int_to_int £temporary2058 (Signed_Int -> Pointer)
375: £temporary2060 -> £temporary2059 = *£temporary2059
376: ptrValue = £temporary2060 -> £temporary2059
377: call header
378: parameter arg_list, offset 6
379: parameter widthPtr, offset 8
380: £temporary2061 = &precision
381: parameter £temporary2061, offset 10
382: call function noellipse-noellipse checkWidthAndPrecision
383: post call
384: £temporary2062 = return_value
385: arg_list = £temporary2062
386: call header
387: £temporary2063 = int_to_int ptrValue (Pointer -> Unsigned_Long_Int)
388: parameter £temporary2063, offset 6
389: parameter 0, offset 10
390: parameter 0, offset 12
391: parameter 0, offset 14
392: parameter 10, offset 16
393: parameter 0, offset 20
394: call function noellipse-noellipse printUnsignedLong
395: post call
396: goto 435
397: £temporary2065 = arg_list + 2
398: arg_list = £temporary2065
399: £temporary2066 = arg_list - 2
400: £temporary2067 = int_to_int £temporary2066 (Signed_Int -> Pointer)
401: £temporary2068 -> £temporary2067 = *£temporary2067
402: ptrValue = £temporary2068 -> £temporary2067
403: £temporary2069 = arg_list + 2
404: arg_list = £temporary2069
405: £temporary2070 = arg_list - 2
406: £temporary2071 = int_to_int £temporary2070 (Signed_Int -> Pointer)
407: £temporary2072 -> £temporary2071 = *£temporary2071
408: intPtr = £temporary2072 -> £temporary2071
409: call header
410: parameter arg_list, offset 6
411: parameter widthPtr, offset 8
412: £temporary2073 = &precision
413: parameter £temporary2073, offset 10
414: call function noellipse-noellipse checkWidthAndPrecision
415: post call
416: £temporary2074 = return_value
417: arg_list = £temporary2074
418: £temporary2075 -> intPtr = *intPtr
419: £temporary2075 -> intPtr = g_outChars
420: goto 435
421: call header
422: parameter arg_list, offset 6
423: parameter widthPtr, offset 8
424: £temporary2076 = &precision
425: parameter £temporary2076, offset 10
426: call function noellipse-noellipse checkWidthAndPrecision
427: post call
428: £temporary2077 = return_value
429: arg_list = £temporary2077
430: call header
431: parameter 37, offset 6
432: call function noellipse-noellipse printChar
433: post call
434: goto 435
435: return_value = arg_list
436: return
437: empty
438: return
439: function end printArgument
0: width = 0
1: precision = 0
2: percent = 0
3: plus = 0
4: minus = 0
5: space = 0
6: zero = 0
7: grid = 0
8: widthStar = 0
9: period = 0
10: precisionStar = 0
11: shortInt = 0
12: longInt = 0
13: longDouble = 0
14: g_outChars = 0
15: index = 0
16: empty
17: £temporary2166 = format + index
18: £temporary2165 -> £temporary2166 = *£temporary2166
19: if £temporary2165 -> £temporary2166 != 0 goto 22
20: goto 331
21: check track map float stack
22: empty
23: £temporary2170 = format + index
24: £temporary2169 -> £temporary2170 = *£temporary2170
25: c = £temporary2169 -> £temporary2170
26: if percent != 0 goto 29
27: goto 304
28: check track map float stack
29: case c == 43 goto 58
30: case c == 45 goto 60
31: case c == 32 goto 62
32: case c == 48 goto 64
33: case c == 35 goto 66
34: case c == 46 goto 68
35: case c == 42 goto 70
36: case c == 104 goto 78
37: case c == 108 goto 80
38: case c == 76 goto 82
39: case c == 37 goto 84
40: case c == 110 goto 84
41: case c == 112 goto 84
42: case c == 71 goto 84
43: case c == 103 goto 84
44: case c == 69 goto 84
45: case c == 101 goto 84
46: case c == 102 goto 84
47: case c == 115 goto 84
48: case c == 99 goto 84
49: case c == 88 goto 84
50: case c == 120 goto 84
51: case c == 111 goto 84
52: case c == 98 goto 84
53: case c == 117 goto 84
54: case c == 100 goto 84
55: case c == 105 goto 84
56: case end c
57: goto 273
58: plus = 1
59: goto 328
60: minus = 1
61: goto 328
62: space = 1
63: goto 328
64: zero = 1
65: goto 328
66: grid = 1
67: goto 328
68: period = 1
69: goto 328
70: if period != 0 goto 75
71: goto 73
72: check track map float stack
73: width = -1
74: goto 77
75: precision = -1
76: goto 77
77: goto 328
78: shortInt = 1
79: goto 328
80: longInt = 1
81: goto 328
82: longDouble = 1
83: goto 328
84: if minus != 0 goto 87
85: goto 122
86: check track map float stack
87: startChars = g_outChars
88: call header
89: £temporary2174 = format + index
90: £temporary2173 -> £temporary2174 = *£temporary2174
91: £temporary2175 = &£temporary2173 -> £temporary2174
92: parameter £temporary2175, offset 6
93: parameter arg_list, offset 8
94: parameter plus, offset 10
95: parameter space, offset 12
96: parameter grid, offset 14
97: £temporary2176 = &width
98: parameter £temporary2176, offset 16
99: parameter precision, offset 18
100: parameter shortInt, offset 20
101: parameter longInt, offset 22
102: parameter longDouble, offset 24
103: parameter 1, offset 26
104: parameter 0, offset 28
105: call function noellipse-noellipse printArgument
106: post call
107: £temporary2177 = return_value
108: arg_list = £temporary2177
109: £temporary2178 = g_outChars - startChars
110: field = £temporary2178
111: £temporary2179 = field
112: field = field + 1
113: if £temporary2179 < width goto 116
114: goto 271
115: check track map float stack
116: call header
117: parameter 32, offset 6
118: call function noellipse-noellipse printChar
119: post call
120: goto 111
121: goto 271
122: if zero != 0 goto 125
123: goto 213
124: check track map float stack
125: startChars = g_outChars
126: oldOutStatus = g_outStatus
127: negative = 0
128: g_outStatus = 2
129: call header
130: £temporary2183 = format + index
131: £temporary2182 -> £temporary2183 = *£temporary2183
132: £temporary2184 = &£temporary2182 -> £temporary2183
133: parameter £temporary2184, offset 6
134: parameter arg_list, offset 8
135: parameter 0, offset 10
136: parameter 0, offset 12
137: parameter grid, offset 14
138: £temporary2185 = &width
139: parameter £temporary2185, offset 16
140: parameter precision, offset 18
141: parameter shortInt, offset 20
142: parameter longInt, offset 22
143: parameter longDouble, offset 24
144: parameter 0, offset 26
145: £temporary2186 = &negative
146: parameter £temporary2186, offset 28
147: call function noellipse-noellipse printArgument
148: post call
149: g_outStatus = oldOutStatus
150: £temporary2188 = g_outChars - startChars
151: field = £temporary2188
152: g_outChars = startChars
153: if negative != 0 goto 156
154: goto 162
155: check track map float stack
156: call header
157: parameter 45, offset 6
158: call function noellipse-noellipse printChar
159: post call
160: field = field + 1
161: goto 182
162: if plus != 0 goto 165
163: goto 171
164: check track map float stack
165: call header
166: parameter 43, offset 6
167: call function noellipse-noellipse printChar
168: post call
169: field = field + 1
170: goto 182
171: if space != 0 goto 174
172: goto 182
173: check track map float stack
174: call header
175: parameter 32, offset 6
176: call function noellipse-noellipse printChar
177: post call
178: field = field + 1
179: goto 182
180: goto 182
181: goto 182
182: £temporary2198 = field
183: field = field + 1
184: if £temporary2198 < width goto 187
185: goto 192
186: check track map float stack
187: call header
188: parameter 48, offset 6
189: call function noellipse-noellipse printChar
190: post call
191: goto 182
192: call header
193: £temporary2202 = format + index
194: £temporary2201 -> £temporary2202 = *£temporary2202
195: £temporary2203 = &£temporary2201 -> £temporary2202
196: parameter £temporary2203, offset 6
197: parameter arg_list, offset 8
198: parameter 0, offset 10
199: parameter 0, offset 12
200: parameter grid, offset 14
201: parameter 0, offset 16
202: parameter precision, offset 18
203: parameter shortInt, offset 20
204: parameter longInt, offset 22
205: parameter longDouble, offset 24
206: parameter 0, offset 26
207: parameter 0, offset 28
208: call function noellipse-noellipse printArgument
209: post call
210: £temporary2204 = return_value
211: arg_list = £temporary2204
212: goto 271
213: startChars = g_outChars
214: oldOutStatus = g_outStatus
215: g_outStatus = 2
216: call header
217: £temporary2206 = format + index
218: £temporary2205 -> £temporary2206 = *£temporary2206
219: £temporary2207 = &£temporary2205 -> £temporary2206
220: parameter £temporary2207, offset 6
221: parameter arg_list, offset 8
222: parameter plus, offset 10
223: parameter space, offset 12
224: parameter grid, offset 14
225: £temporary2208 = &width
226: parameter £temporary2208, offset 16
227: parameter precision, offset 18
228: parameter shortInt, offset 20
229: parameter longInt, offset 22
230: parameter longDouble, offset 24
231: parameter 1, offset 26
232: parameter 0, offset 28
233: call function noellipse-noellipse printArgument
234: post call
235: g_outStatus = oldOutStatus
236: £temporary2210 = g_outChars - startChars
237: field = £temporary2210
238: g_outChars = startChars
239: £temporary2211 = field
240: field = field + 1
241: if £temporary2211 < width goto 244
242: goto 249
243: check track map float stack
244: call header
245: parameter 32, offset 6
246: call function noellipse-noellipse printChar
247: post call
248: goto 239
249: call header
250: £temporary2215 = format + index
251: £temporary2214 -> £temporary2215 = *£temporary2215
252: £temporary2216 = &£temporary2214 -> £temporary2215
253: parameter £temporary2216, offset 6
254: parameter arg_list, offset 8
255: parameter plus, offset 10
256: parameter space, offset 12
257: parameter grid, offset 14
258: parameter 0, offset 16
259: parameter precision, offset 18
260: parameter shortInt, offset 20
261: parameter longInt, offset 22
262: parameter longDouble, offset 24
263: parameter 1, offset 26
264: parameter 0, offset 28
265: call function noellipse-noellipse printArgument
266: post call
267: £temporary2217 = return_value
268: arg_list = £temporary2217
269: goto 271
270: goto 271
271: percent = 0
272: goto 328
273: value = 0
274: call header
275: £temporary2220 = int_to_int c (Signed_Char -> Signed_Int)
276: parameter £temporary2220, offset 6
277: call function noellipse-noellipse isdigit
278: post call
279: £temporary2221 = return_value
280: if £temporary2221 != 0 goto 283
281: goto 294
282: check track map float stack
283: £temporary2222 = 10 * value
284: £temporary2223 = c - 48
285: £temporary2224 = int_to_int £temporary2223 (Signed_Char -> Signed_Int)
286: £temporary2225 = £temporary2222 + £temporary2224
287: value = £temporary2225
288: index = index + 1
289: £temporary2226 = index
290: £temporary2228 = format + £temporary2226
291: £temporary2227 -> £temporary2228 = *£temporary2228
292: c = £temporary2227 -> £temporary2228
293: goto 274
294: index = index - 1
295: if period != 0 goto 300
296: goto 298
297: check track map float stack
298: width = value
299: goto 302
300: precision = value
301: goto 302
302: goto 328
303: goto 328
304: if c == 37 goto 307
305: goto 322
306: check track map float stack
307: percent = 1
308: plus = 0
309: minus = 0
310: space = 0
311: zero = 0
312: grid = 0
313: widthStar = 0
314: period = 0
315: precisionStar = 0
316: shortInt = 0
317: longInt = 0
318: longDouble = 0
319: width = 0
320: precision = 0
321: goto 328
322: call header
323: parameter c, offset 6
324: call function noellipse-noellipse printChar
325: post call
326: goto 328
327: goto 328
328: empty
329: index = index + 1
330: goto 16
331: if g_outStatus == 1 goto 334
332: goto 340
333: check track map float stack
334: £temporary2237 = int_to_int g_outDevice (Pointer -> Pointer)
335: outString = £temporary2237
336: £temporary2239 = outString + g_outChars
337: £temporary2238 -> £temporary2239 = *£temporary2239
338: £temporary2238 -> £temporary2239 = 0
339: goto 340
340: return_value = g_outChars
341: return
342: empty
343: return
344: function end printFormat
0: £temporary2312 = &format
1: £temporary2313 = int_to_int £temporary2312 (Pointer -> Pointer)
2: £temporary2314 = £temporary2313 + 2
3: arg_list = £temporary2314
4: call header
5: parameter format, offset 6
6: parameter arg_list, offset 8
7: call function ellipse-noellipse vprintf
8: post call
9: £temporary2315 = return_value
10: return_value = £temporary2315
11: return
12: empty
13: return
14: function end printf
0: call header
1: parameter stdout, offset 6
2: parameter format, offset 8
3: parameter arg_list, offset 10
4: call function noellipse-noellipse vfprintf
5: post call
6: £temporary2319 = return_value
7: return_value = £temporary2319
8: return
9: empty
10: return
11: function end vprintf
0: £temporary2323 = &format
1: £temporary2324 = int_to_int £temporary2323 (Pointer -> Pointer)
2: £temporary2325 = £temporary2324 + 2
3: arg_list = £temporary2325
4: call header
5: parameter outStream, offset 6
6: parameter format, offset 8
7: parameter arg_list, offset 10
8: call function ellipse-noellipse vfprintf
9: post call
10: £temporary2326 = return_value
11: return_value = £temporary2326
12: return
13: empty
14: return
15: function end fprintf
0: g_outStatus = 0
1: £temporary2331 = int_to_int outStream (Pointer -> Pointer)
2: g_outDevice = £temporary2331
3: call header
4: parameter format, offset 6
5: parameter arg_list, offset 8
6: call function noellipse-noellipse printFormat
7: post call
8: £temporary2332 = return_value
9: return_value = £temporary2332
10: return
11: empty
12: return
13: function end vfprintf
0: £temporary2335 = &format
1: £temporary2336 = int_to_int £temporary2335 (Pointer -> Pointer)
2: £temporary2337 = £temporary2336 + 2
3: arg_list = £temporary2337
4: call header
5: parameter outString, offset 6
6: parameter format, offset 8
7: parameter arg_list, offset 10
8: call function ellipse-noellipse vsprintf
9: post call
10: £temporary2338 = return_value
11: return_value = £temporary2338
12: return
13: empty
14: return
15: function end sprintf
0: g_outStatus = 1
1: £temporary2343 = int_to_int outString (Pointer -> Pointer)
2: g_outDevice = £temporary2343
3: call header
4: parameter format, offset 6
5: parameter arg_list, offset 8
6: call function noellipse-noellipse printFormat
7: post call
8: £temporary2344 = return_value
9: return_value = £temporary2344
10: return
11: empty
12: return
13: function end vsprintf
0: call header
1: parameter s, offset 6
2: parameter 0, offset 8
3: parameter 10, offset 10
4: call function noellipse-noellipse strtol
5: post call
6: £temporary2347 = return_value
7: £temporary2348 = int_to_int £temporary2347 (Signed_Long_Int -> Signed_Int)
8: return_value = £temporary2348
9: return
10: empty
11: return
12: function end atoi
0: call header
1: parameter s, offset 6
2: parameter 0, offset 8
3: parameter 10, offset 10
4: call function noellipse-noellipse strtol
5: post call
6: £temporary2352 = return_value
7: return_value = £temporary2352
8: return
9: empty
10: return
11: function end atol
0: chars = 0
1: value = 0
2: call header
3: parameter s, offset 6
4: parameter string_25li25n#, offset 8
5: £temporary2356 = &value
6: parameter £temporary2356, offset 10
7: £temporary2357 = &chars
8: parameter £temporary2357, offset 12
9: call function noellipse-ellipse sscanf, extra 0
10: post call
11: if endp != 0 goto 14
12: goto 18
13: check track map float stack
14: £temporary2360 -> endp = *endp
15: £temporary2361 = s + chars
16: £temporary2360 -> endp = £temporary2361
17: goto 18
18: return_value = value
19: return
20: empty
21: return
22: function end strtol
0: chars = 0
1: value = 0
2: call header
3: parameter s, offset 6
4: parameter string_25lu25n#, offset 8
5: £temporary2368 = &value
6: parameter £temporary2368, offset 10
7: £temporary2369 = &chars
8: parameter £temporary2369, offset 12
9: call function noellipse-ellipse sscanf, extra 0
10: post call
11: if endp != 0 goto 14
12: goto 18
13: check track map float stack
14: £temporary2372 -> endp = *endp
15: £temporary2373 = s + chars
16: £temporary2372 -> endp = £temporary2373
17: goto 18
18: return_value = value
19: return
20: empty
21: return
22: function end strtoul
0: call header
1: parameter s, offset 6
2: parameter 0, offset 8
3: call function noellipse-noellipse strtod
4: post call
5: £temporary2380 = return_value
6: return_value = £temporary2380
7: return
8: empty
9: return
10: function end atof
0: chars = 0
1: push 0
2: pop float value
3: call header
4: parameter s, offset 6
5: parameter string_25lf25n#, offset 8
6: push float value
7: pop float empty X
8: £temporary2383 = &value
9: parameter £temporary2383, offset 10
10: £temporary2384 = &chars
11: parameter £temporary2384, offset 12
12: call function noellipse-ellipse sscanf, extra 0
13: post call
14: if endp != 0 goto 17
15: goto 21
16: check track map float stack
17: £temporary2387 -> endp = *endp
18: £temporary2388 = s + chars
19: £temporary2387 -> endp = £temporary2388
20: goto 21
21: push float value
22: return_value = value
23: return
24: empty
25: return
26: function end strtod
0: ah = 76
1: al = -1
2: interrupt 33
3: empty
4: return
5: function end abort
0: return_value = 0
1: return
2: empty
3: return
4: function end getenv
0: return_value = -1
1: return
2: empty
3: return
4: function end system
0: £temporary2397 = int_to_int value1 (Pointer -> Pointer)
1: charValue1 = £temporary2397
2: £temporary2398 = int_to_int value2 (Pointer -> Pointer)
3: charValue2 = £temporary2398
4: index = 0
5: empty
6: if index < valueSize goto 9
7: goto 24
8: check track map float stack
9: empty
10: £temporary2402 = charValue1 + index
11: £temporary2401 -> £temporary2402 = *£temporary2402
12: tempValue = £temporary2401 -> £temporary2402
13: £temporary2404 = charValue1 + index
14: £temporary2403 -> £temporary2404 = *£temporary2404
15: £temporary2406 = charValue2 + index
16: £temporary2405 -> £temporary2406 = *£temporary2406
17: £temporary2403 -> £temporary2404 = £temporary2405 -> £temporary2406
18: £temporary2408 = charValue2 + index
19: £temporary2407 -> £temporary2408 = *£temporary2408
20: £temporary2407 -> £temporary2408 = tempValue
21: empty
22: index = index + 1
23: goto 5
24: empty
25: return
26: function end memswp
0: firstIndex = 0
1: £temporary2409 = listSize - 1
2: lastIndex = £temporary2409
3: if listSize == 0 goto 6
4: goto 9
5: check track map float stack
6: return_value = 0
7: return
8: goto 9
9: goto 11
10: check track map float stack
11: £temporary2411 = int_to_int valueList (Pointer -> Pointer)
12: £temporary2412 = firstIndex * valueSize
13: £temporary2413 = £temporary2411 + £temporary2412
14: firstValuePtr = £temporary2413
15: call header
16: parameter keyPtr, offset 6
17: parameter firstValuePtr, offset 8
18: call function noellipse-noellipse compare
19: post call
20: £temporary2414 = return_value
21: firstCompare = £temporary2414
22: if firstCompare < 0 goto 25
23: goto 28
24: check track map float stack
25: return_value = 0
26: return
27: goto 35
28: if firstCompare == 0 goto 31
29: goto 35
30: check track map float stack
31: return_value = firstValuePtr
32: return
33: goto 35
34: goto 35
35: £temporary2417 = int_to_int valueList (Pointer -> Pointer)
36: £temporary2418 = lastIndex * valueSize
37: £temporary2419 = £temporary2417 + £temporary2418
38: lastValuePtr = £temporary2419
39: call header
40: parameter keyPtr, offset 6
41: parameter lastValuePtr, offset 8
42: call function noellipse-noellipse compare
43: post call
44: £temporary2420 = return_value
45: lastCompare = £temporary2420
46: if lastCompare > 0 goto 49
47: goto 52
48: check track map float stack
49: return_value = 0
50: return
51: goto 59
52: if lastCompare == 0 goto 55
53: goto 59
54: check track map float stack
55: return_value = lastValuePtr
56: return
57: goto 59
58: goto 59
59: £temporary2423 = firstIndex + lastIndex
60: £temporary2424 = £temporary2423 / 2
61: middleIndex = £temporary2424
62: £temporary2425 = int_to_int valueList (Pointer -> Pointer)
63: £temporary2426 = middleIndex * valueSize
64: £temporary2427 = £temporary2425 + £temporary2426
65: middleValuePtr = £temporary2427
66: call header
67: parameter keyPtr, offset 6
68: parameter middleValuePtr, offset 8
69: call function noellipse-noellipse compare
70: post call
71: £temporary2428 = return_value
72: middleCompare = £temporary2428
73: if middleCompare < 0 goto 76
74: goto 78
75: check track map float stack
76: lastIndex = middleIndex
77: goto 9
78: if middleCompare > 0 goto 81
79: goto 83
80: check track map float stack
81: firstIndex = middleIndex
82: goto 9
83: return_value = middleValuePtr
84: return
85: goto 9
86: goto 9
87: goto 9
88: empty
89: return
90: function end bsearch
0: £temporary2438 = 1664525 * g_randValue
1: £temporary2439 = £temporary2438 + 1013904223
2: £temporary2440 = £temporary2439 % 127
3: g_randValue = £temporary2440
4: £temporary2441 = int_to_int g_randValue (Signed_Long_Int -> Signed_Int)
5: return_value = £temporary2441
6: return
7: empty
8: return
9: function end rand
0: £temporary2442 = int_to_int seed (Unsigned_Int -> Signed_Long_Int)
1: g_randValue = £temporary2442
2: empty
3: return
4: function end srand
0: heapBottom = (int2$32764#,0)
1: topStack = (int2$32766#,0)
2: heapTop = (int2$32762#,0)
3: index = 0
4: call header
5: parameter string_stack20top2025u2C20heap20top2025u2C20heap20bottom2025u0A#, offset 6
6: parameter topStack, offset 8
7: parameter heapTop, offset 10
8: parameter heapBottom, offset 12
9: call function noellipse-ellipse printf, extra 0
10: post call
11: if heapTop != 0 goto 14
12: goto 31
13: check track map float stack
14: £temporary2448 = int_to_int heapTop (Unsigned_Int -> Pointer)
15: £temporary2449 = £temporary2448 + 2
16: £temporary2450 -> £temporary2449 = *£temporary2449
17: size = £temporary2450 -> £temporary2449
18: call header
19: parameter string_2020index2025u2C20address2025u2C20size2025u0A#, offset 6
20: £temporary2451 = index
21: index = index + 1
22: parameter £temporary2451, offset 8
23: parameter heapTop, offset 10
24: parameter size, offset 12
25: call function noellipse-ellipse printf, extra 0
26: post call
27: £temporary2453 = int_to_int heapTop (Unsigned_Int -> Pointer)
28: £temporary2454 -> £temporary2453 = *£temporary2453
29: heapTop = £temporary2454 -> £temporary2453
30: goto 11
31: call header
32: parameter string_0A#, offset 6
33: call function noellipse-ellipse printf, extra 0
34: post call
35: empty
36: return
37: function end print_heap2
0: call header
1: parameter string_0A#, offset 6
2: call function noellipse-ellipse printf, extra 0
3: post call
4: index = 0
5: empty
6: if index < 256 goto 9
7: goto 35
8: check track map float stack
9: empty
10: £temporary2469 = index * 2
11: £temporary2470 = g_funcArray + £temporary2469
12: £temporary2468 -> £temporary2470 = *£temporary2470
13: if £temporary2468 -> £temporary2470 == 0 goto 16
14: goto 32
15: check track map float stack
16: £temporary2473 = index * 2
17: £temporary2474 = g_funcArray + £temporary2473
18: £temporary2472 -> £temporary2474 = *£temporary2474
19: £temporary2472 -> £temporary2474 = fcn
20: call header
21: parameter string_Added20function20index2025i3A2025i0A#, offset 6
22: parameter index, offset 8
23: £temporary2476 = index * 2
24: £temporary2477 = g_funcArray + £temporary2476
25: £temporary2475 -> £temporary2477 = *£temporary2477
26: parameter £temporary2475 -> £temporary2477, offset 10
27: call function noellipse-ellipse printf, extra 0
28: post call
29: return_value = 0
30: return
31: goto 32
32: empty
33: index = index + 1
34: goto 5
35: return_value = -1
36: return
37: empty
38: return
39: function end atexit
0: call header
1: parameter string_0A#, offset 6
2: call function noellipse-ellipse printf, extra 0
3: post call
4: index = 255
5: empty
6: if index >= 0 goto 9
7: goto 35
8: check track map float stack
9: empty
10: £temporary2487 = index * 2
11: £temporary2488 = g_funcArray + £temporary2487
12: £temporary2486 -> £temporary2488 = *£temporary2488
13: if £temporary2486 -> £temporary2488 != 0 goto 16
14: goto 32
15: check track map float stack
16: call header
17: parameter string_Called20function20index2025i3A2025i0A#, offset 6
18: parameter index, offset 8
19: £temporary2491 = index * 2
20: £temporary2492 = g_funcArray + £temporary2491
21: £temporary2490 -> £temporary2492 = *£temporary2492
22: parameter £temporary2490 -> £temporary2492, offset 10
23: call function noellipse-ellipse printf, extra 0
24: post call
25: £temporary2495 = index * 2
26: £temporary2496 = g_funcArray + £temporary2495
27: £temporary2494 -> £temporary2496 = *£temporary2496
28: call header
29: call function noellipse-noellipse £temporary2494 -> £temporary2496
30: post call
31: goto 32
32: empty
33: index = index - 1
34: goto 5
35: £temporary2499 = int_to_int status (Signed_Int -> Signed_Short_Int)
36: al = £temporary2499
37: ah = 76
38: interrupt 33
39: empty
40: return
41: function end exit
0: index = 0
1: empty
2: if index < valueSize goto 5
3: goto 20
4: check track map float stack
5: empty
6: £temporary2508 = leftValuePtr + index
7: £temporary2507 -> £temporary2508 = *£temporary2508
8: tempValue = £temporary2507 -> £temporary2508
9: £temporary2510 = leftValuePtr + index
10: £temporary2509 -> £temporary2510 = *£temporary2510
11: £temporary2512 = rightValuePtr + index
12: £temporary2511 -> £temporary2512 = *£temporary2512
13: £temporary2509 -> £temporary2510 = £temporary2511 -> £temporary2512
14: £temporary2514 = rightValuePtr + index
15: £temporary2513 -> £temporary2514 = *£temporary2514
16: £temporary2513 -> £temporary2514 = tempValue
17: empty
18: index = index + 1
19: goto 1
20: empty
21: return
22: function end swap
0: £temporary2515 = int_to_int valueList (Pointer -> Pointer)
1: charList = £temporary2515
2: £temporary2516 = listSize - 1
3: index1 = £temporary2516
4: empty
5: if index1 > 0 goto 8
6: goto 51
7: check track map float stack
8: empty
9: update = 0
10: index2 = 0
11: empty
12: if index2 < index1 goto 15
13: goto 43
14: check track map float stack
15: empty
16: £temporary2521 = index2 * valueSize
17: £temporary2522 = charList + £temporary2521
18: valuePtr1 = £temporary2522
19: £temporary2523 = index2 + 1
20: £temporary2524 = £temporary2523 * valueSize
21: £temporary2525 = charList + £temporary2524
22: valuePtr2 = £temporary2525
23: call header
24: parameter valuePtr1, offset 6
25: parameter valuePtr2, offset 8
26: call function noellipse-noellipse compare
27: post call
28: £temporary2526 = return_value
29: if £temporary2526 > 0 goto 32
30: goto 40
31: check track map float stack
32: call header
33: parameter valuePtr1, offset 6
34: parameter valuePtr2, offset 8
35: parameter valueSize, offset 10
36: call function noellipse-noellipse swap
37: post call
38: update = 1
39: goto 40
40: empty
41: index2 = index2 + 1
42: goto 11
43: if update != 0 goto 48
44: goto 46
45: check track map float stack
46: empty
47: goto 48
48: empty
49: index1 = index1 - 1
50: goto 4
51: empty
52: return
53: function end qsort
0: if value < 0 goto 2
1: goto 6
2: empty
3: £temporary2537 = -value
4: £temporary2541 = £temporary2537
5: goto 8
6: empty
7: £temporary2541 = value
8: empty
9: return_value = £temporary2541
10: return
11: empty
12: return
13: function end abs
0: if value < 0 goto 2
1: goto 6
2: empty
3: £temporary2543 = -value
4: £temporary2547 = £temporary2543
5: goto 8
6: empty
7: £temporary2547 = value
8: empty
9: return_value = £temporary2547
10: return
11: empty
12: return
13: function end labs
0: result$quot = 0
1: result$rem = 0
2: if denum == 0 goto 5
3: goto 9
4: check track map float stack
5: errno = 6
6: return_value = result
7: return
8: goto 9
9: £temporary2552 = num / denum
10: result$quot = £temporary2552
11: £temporary2554 = num % denum
12: result$rem = £temporary2554
13: return_value = result
14: return
15: empty
16: return
17: function end div
0: result$quot = 0
1: result$rem = 0
2: if denum == 0 goto 5
3: goto 9
4: check track map float stack
5: errno = 6
6: return_value = result
7: return
8: goto 9
9: £temporary2561 = num / denum
10: result$quot = £temporary2561
11: £temporary2563 = num % denum
12: result$rem = £temporary2563
13: return_value = result
14: return
15: empty
16: return
17: function end ldiv
0: return_value = -1
1: return
2: empty
3: return
4: function end clock
0: ah = 42
1: interrupt 33
2: £temporary2567 = cx
3: £temporary2568 = £temporary2567 - 1900
4: year = £temporary2568
5: £temporary2569 = dh
6: £temporary2570 = £temporary2569 - 1
7: month = £temporary2570
8: £temporary2571 = dl
9: monthDay = £temporary2571
10: call header
11: parameter string_25i2D25i2D25i0A#, offset 6
12: parameter year, offset 8
13: £temporary2572 = int_to_int month (Signed_Short_Int -> Signed_Int)
14: parameter £temporary2572, offset 10
15: £temporary2573 = int_to_int monthDay (Signed_Short_Int -> Signed_Int)
16: parameter £temporary2573, offset 12
17: call function noellipse-ellipse printf, extra 0
18: post call
19: ah = 44
20: interrupt 33
21: £temporary2576 = ch
22: hour = £temporary2576
23: £temporary2577 = cl
24: min = £temporary2577
25: £temporary2578 = dh
26: sec = £temporary2578
27: £temporary2579 = year % 4
28: if £temporary2579 == 0 goto 30
29: goto 32
30: £temporary2581 = 1
31: goto 33
32: £temporary2581 = 0
33: empty
34: leapYear = £temporary2581
35: daysOfMonths[0] = 31
36: if leapYear != 0 goto 38
37: goto 41
38: empty
39: £temporary2586 = 29
40: goto 43
41: empty
42: £temporary2586 = 28
43: empty
44: daysOfMonths[1] = £temporary2586
45: daysOfMonths[2] = 31
46: daysOfMonths[3] = 30
47: daysOfMonths[4] = 31
48: daysOfMonths[5] = 30
49: daysOfMonths[6] = 30
50: daysOfMonths[7] = 31
51: daysOfMonths[8] = 30
52: daysOfMonths[9] = 31
53: daysOfMonths[10] = 30
54: daysOfMonths[11] = 31
55: £temporary2599 = int_to_int monthDay (Signed_Short_Int -> Signed_Int)
56: £temporary2600 = £temporary2599 - 1
57: yearDay = £temporary2600
58: mon = 0
59: empty
60: £temporary2601 = int_to_int month (Signed_Short_Int -> Signed_Int)
61: if mon < £temporary2601 goto 64
62: goto 73
63: check track map float stack
64: empty
65: £temporary2605 = mon * 2
66: £temporary2606 = daysOfMonths + £temporary2605
67: £temporary2604 -> £temporary2606 = *£temporary2606
68: £temporary2607 = yearDay + £temporary2604 -> £temporary2606
69: yearDay = £temporary2607
70: empty
71: mon = mon + 1
72: goto 59
73: call header
74: parameter string_25i2025i0A#, offset 6
75: parameter yearDay, offset 8
76: £temporary2608 = int_to_int month (Signed_Short_Int -> Signed_Int)
77: parameter £temporary2608, offset 10
78: call function noellipse-ellipse printf, extra 0
79: post call
80: £temporary2611 = int_to_int sec (Signed_Short_Int -> Signed_Int)
81: s$tm_sec = £temporary2611
82: £temporary2613 = int_to_int min (Signed_Short_Int -> Signed_Int)
83: s$tm_min = £temporary2613
84: £temporary2615 = int_to_int hour (Signed_Short_Int -> Signed_Int)
85: s$tm_hour = £temporary2615
86: £temporary2617 = int_to_int monthDay (Signed_Short_Int -> Signed_Int)
87: s$tm_mday = £temporary2617
88: £temporary2619 = int_to_int month (Signed_Short_Int -> Signed_Int)
89: s$tm_mon = £temporary2619
90: s$tm_year = year
91: s$tm_wday = 0
92: s$tm_yday = yearDay
93: s$tm_isdst = 0
94: call header
95: £temporary2624 = &s
96: parameter £temporary2624, offset 6
97: call function noellipse-noellipse mktime
98: post call
99: £temporary2625 = return_value
100: time = £temporary2625
101: if timePtr != 0 goto 104
102: goto 107
103: check track map float stack
104: £temporary2627 -> timePtr = *timePtr
105: £temporary2627 -> timePtr = time
106: goto 107
107: return_value = time
108: return
109: empty
110: return
111: function end time
0: if tp != 0 goto 3
1: goto 32
2: check track map float stack
3: £temporary2638 -> tp = *tp, offset 10
4: £temporary2639 = £temporary2638 -> tp - 69
5: £temporary2640 = £temporary2639 / 4
6: £temporary2641 = int_to_int £temporary2640 (Signed_Int -> Signed_Long_Int)
7: leapDays = £temporary2641
8: £temporary2642 -> tp = *tp, offset 10
9: £temporary2643 = £temporary2642 -> tp - 70
10: £temporary2644 = 365 * £temporary2643
11: £temporary2645 = int_to_int £temporary2644 (Signed_Int -> Signed_Long_Int)
12: £temporary2646 = £temporary2645 + leapDays
13: £temporary2647 -> tp = *tp, offset 14
14: £temporary2648 = int_to_int £temporary2647 -> tp (Signed_Int -> Signed_Long_Int)
15: £temporary2649 = £temporary2646 + £temporary2648
16: totalDays = £temporary2649
17: £temporary2650 = 86400 * totalDays
18: £temporary2651 -> tp = *tp, offset 4
19: £temporary2652 = int_to_int £temporary2651 -> tp (Signed_Int -> Signed_Long_Int)
20: £temporary2653 = 3600 * £temporary2652
21: £temporary2654 = £temporary2650 + £temporary2653
22: £temporary2655 -> tp = *tp, offset 2
23: £temporary2656 = int_to_int £temporary2655 -> tp (Signed_Int -> Signed_Long_Int)
24: £temporary2657 = 60 * £temporary2656
25: £temporary2658 = £temporary2654 + £temporary2657
26: £temporary2659 -> tp = *tp
27: £temporary2660 = int_to_int £temporary2659 -> tp (Signed_Int -> Signed_Long_Int)
28: £temporary2661 = £temporary2658 + £temporary2660
29: return_value = £temporary2661
30: return
31: goto 32
32: return_value = 0
33: return
34: empty
35: return
36: function end mktime
0: year = 1970
1: if timePtr != 0 goto 4
2: goto 116
3: check track map float stack
4: £temporary2663 -> timePtr = *timePtr
5: time = £temporary2663 -> timePtr
6: £temporary2664 = time % 86400
7: secondsOfDay = £temporary2664
8: £temporary2666 = secondsOfDay / 3600
9: £temporary2667 = int_to_int £temporary2666 (Signed_Long_Int -> Signed_Int)
10: g_timeStruct$tm_hour = £temporary2667
11: £temporary2669 = secondsOfDay % 3600
12: £temporary2670 = £temporary2669 / 60
13: £temporary2671 = int_to_int £temporary2670 (Signed_Long_Int -> Signed_Int)
14: g_timeStruct$tm_min = £temporary2671
15: £temporary2673 = secondsOfDay % 3600
16: £temporary2674 = £temporary2673 % 60
17: £temporary2675 = int_to_int £temporary2674 (Signed_Long_Int -> Signed_Int)
18: g_timeStruct$tm_sec = £temporary2675
19: £temporary2676 = time / 86400
20: totalDays = £temporary2676
21: if totalDays < 3 goto 24
22: goto 28
23: check track map float stack
24: £temporary2679 = totalDays + 4
25: £temporary2680 = int_to_int £temporary2679 (Signed_Long_Int -> Signed_Int)
26: g_timeStruct$tm_wday = £temporary2680
27: goto 33
28: £temporary2682 = totalDays - 3
29: £temporary2683 = £temporary2682 % 7
30: £temporary2684 = int_to_int £temporary2683 (Signed_Long_Int -> Signed_Int)
31: g_timeStruct$tm_wday = £temporary2684
32: goto 33
33: goto 35
34: check track map float stack
35: £temporary2685 = year % 4
36: if £temporary2685 == 0 goto 38
37: goto 41
38: £temporary2687 = year % 100
39: if £temporary2687 != 0 goto 44
40: goto 41
41: £temporary2690 = year % 400
42: if £temporary2690 == 0 goto 44
43: goto 46
44: £temporary2693 = 1
45: goto 47
46: £temporary2693 = 0
47: empty
48: leapYear = £temporary2693
49: if leapYear != 0 goto 51
50: goto 54
51: empty
52: £temporary2698 = 366
53: goto 56
54: empty
55: £temporary2698 = 365
56: empty
57: daysOfYear = £temporary2698
58: £temporary2699 = int_to_int daysOfYear (Signed_Int -> Signed_Long_Int)
59: if totalDays < £temporary2699 goto 62
60: goto 110
61: check track map float stack
62: £temporary2702 = year - 1900
63: g_timeStruct$tm_year = £temporary2702
64: £temporary2704 = int_to_int totalDays (Signed_Long_Int -> Signed_Int)
65: g_timeStruct$tm_yday = £temporary2704
66: daysOfMonths[0] = 31
67: if leapYear != 0 goto 69
68: goto 72
69: empty
70: £temporary2709 = 29
71: goto 74
72: empty
73: £temporary2709 = 28
74: empty
75: daysOfMonths[1] = £temporary2709
76: daysOfMonths[2] = 31
77: daysOfMonths[3] = 30
78: daysOfMonths[4] = 31
79: daysOfMonths[5] = 30
80: daysOfMonths[6] = 30
81: daysOfMonths[7] = 31
82: daysOfMonths[8] = 30
83: daysOfMonths[9] = 31
84: daysOfMonths[10] = 30
85: daysOfMonths[11] = 31
86: month = 0
87: £temporary2723 = month * 2
88: £temporary2724 = daysOfMonths + £temporary2723
89: £temporary2722 -> £temporary2724 = *£temporary2724
90: £temporary2725 = int_to_int £temporary2722 -> £temporary2724 (Signed_Int -> Signed_Long_Int)
91: if totalDays >= £temporary2725 goto 94
92: goto 102
93: check track map float stack
94: £temporary2728 = month * 2
95: £temporary2729 = daysOfMonths + £temporary2728
96: £temporary2727 -> £temporary2729 = *£temporary2729
97: £temporary2730 = int_to_int £temporary2727 -> £temporary2729 (Signed_Int -> Signed_Long_Int)
98: £temporary2731 = totalDays - £temporary2730
99: totalDays = £temporary2731
100: month = month + 1
101: goto 87
102: g_timeStruct$tm_mon = month
103: £temporary2735 = totalDays + 1
104: £temporary2736 = int_to_int £temporary2735 (Signed_Long_Int -> Signed_Int)
105: g_timeStruct$tm_mday = £temporary2736
106: g_timeStruct$tm_isdst = -1
107: return_value = (@32$g_timeStruct,0)
108: return
109: goto 110
110: year = year + 1
111: £temporary2739 = int_to_int daysOfYear (Signed_Int -> Signed_Long_Int)
112: £temporary2740 = totalDays - £temporary2739
113: totalDays = £temporary2740
114: goto 33
115: goto 116
116: return_value = 0
117: return
118: empty
119: return
120: function end gmtime
0: £temporary2742 = time2 - time1
1: £temporary2743 = int_to_float £temporary2742 (Unsigned_Long_Int -> Double)
2: return_value = £temporary2743
3: return
4: empty
5: return
6: function end difftime
0: empty
1: return
2: function end default_test
0: localeConvPtr = 0
1: if localeConvPtr != 0 goto 3
2: goto 7
3: empty
4: £temporary2745 -> localeConvPtr = *localeConvPtr, offset 4
5: £temporary2749 = £temporary2745 -> localeConvPtr
6: goto 9
7: empty
8: £temporary2749 = 0
9: empty
10: shortDayList = £temporary2749
11: if localeConvPtr != 0 goto 13
12: goto 17
13: empty
14: £temporary2751 -> localeConvPtr = *localeConvPtr, offset 8
15: £temporary2755 = £temporary2751 -> localeConvPtr
16: goto 19
17: empty
18: £temporary2755 = 0
19: empty
20: shortMonthList = £temporary2755
21: if shortDayList != 0 goto 23
22: goto 26
23: empty
24: £temporary2760 = shortDayList
25: goto 28
26: empty
27: £temporary2760 = g_defaultShortDayList
28: empty
29: shortDayList = £temporary2760
30: if shortMonthList != 0 goto 32
31: goto 35
32: empty
33: £temporary2765 = shortMonthList
34: goto 37
35: empty
36: £temporary2765 = g_defaultShortMonthList
37: empty
38: shortMonthList = £temporary2765
39: call header
40: parameter g_timeString, offset 6
41: parameter string_25s2025s20252i202502i3A2502i3A2502i202504i#, offset 8
42: £temporary2766 -> tp = *tp, offset 12
43: £temporary2768 = £temporary2766 -> tp * 2
44: £temporary2769 = shortDayList + £temporary2768
45: £temporary2767 -> £temporary2769 = *£temporary2769
46: parameter £temporary2767 -> £temporary2769, offset 10
47: £temporary2770 -> tp = *tp, offset 8
48: £temporary2772 = £temporary2770 -> tp * 2
49: £temporary2773 = shortMonthList + £temporary2772
50: £temporary2771 -> £temporary2773 = *£temporary2773
51: parameter £temporary2771 -> £temporary2773, offset 12
52: £temporary2774 -> tp = *tp, offset 6
53: parameter £temporary2774 -> tp, offset 14
54: £temporary2775 -> tp = *tp, offset 4
55: parameter £temporary2775 -> tp, offset 16
56: £temporary2776 -> tp = *tp, offset 2
57: parameter £temporary2776 -> tp, offset 18
58: £temporary2777 -> tp = *tp
59: parameter £temporary2777 -> tp, offset 20
60: £temporary2778 -> tp = *tp, offset 10
61: £temporary2779 = £temporary2778 -> tp + 1900
62: parameter £temporary2779, offset 22
63: call function noellipse-ellipse sprintf, extra 0
64: post call
65: return_value = g_timeString
66: return
67: empty
68: return
69: function end asctime
0: call header
1: call header
2: parameter time, offset 6
3: call function noellipse-noellipse localtime
4: post call
5: £temporary2790 = return_value
6: parameter £temporary2790, offset 6
7: call function noellipse-noellipse asctime
8: post call
9: £temporary2791 = return_value
10: return_value = £temporary2791
11: return
12: empty
13: return
14: function end ctime
0: call header
1: parameter timePtr, offset 6
2: call function noellipse-noellipse gmtime
3: post call
4: £temporary2794 = return_value
5: tmPtr = £temporary2794
6: call header
7: call function noellipse-noellipse localeconv
8: post call
9: £temporary2795 = return_value
10: localeConvPtr = £temporary2795
11: timeZone = 0
12: if localeConvPtr != 0 goto 15
13: goto 28
14: check track map float stack
15: £temporary2797 -> tmPtr = *tmPtr, offset 16
16: if £temporary2797 -> tmPtr != 0 goto 18
17: goto 22
18: empty
19: £temporary2798 -> localeConvPtr = *localeConvPtr
20: £temporary2804 = £temporary2798 -> localeConvPtr
21: goto 25
22: empty
23: £temporary2799 -> localeConvPtr = *localeConvPtr, offset 2
24: £temporary2804 = £temporary2799 -> localeConvPtr
25: empty
26: timeZone = £temporary2804
27: goto 28
28: £temporary2805 -> timePtr = *timePtr
29: £temporary2806 = 3600 * timeZone
30: £temporary2807 = int_to_int £temporary2806 (Signed_Int -> Unsigned_Long_Int)
31: £temporary2808 = £temporary2805 -> timePtr + £temporary2807
32: time = £temporary2808
33: call header
34: £temporary2809 = &time
35: parameter £temporary2809, offset 6
36: call function noellipse-noellipse gmtime
37: post call
38: £temporary2810 = return_value
39: return_value = £temporary2810
40: return
41: empty
42: return
43: function end localtime
0: call header
1: call function noellipse-noellipse localeconv
2: post call
3: £temporary2814 = return_value
4: localeConvPtr = £temporary2814
5: if localeConvPtr != 0 goto 7
6: goto 11
7: empty
8: £temporary2816 -> localeConvPtr = *localeConvPtr, offset 4
9: £temporary2820 = £temporary2816 -> localeConvPtr
10: goto 13
11: empty
12: £temporary2820 = 0
13: empty
14: shortDayList = £temporary2820
15: if localeConvPtr != 0 goto 17
16: goto 21
17: empty
18: £temporary2822 -> localeConvPtr = *localeConvPtr, offset 8
19: £temporary2826 = £temporary2822 -> localeConvPtr
20: goto 23
21: empty
22: £temporary2826 = 0
23: empty
24: shortMonthList = £temporary2826
25: if localeConvPtr != 0 goto 27
26: goto 31
27: empty
28: £temporary2828 -> localeConvPtr = *localeConvPtr, offset 6
29: £temporary2832 = £temporary2828 -> localeConvPtr
30: goto 33
31: empty
32: £temporary2832 = 0
33: empty
34: longDayList = £temporary2832
35: if localeConvPtr != 0 goto 37
36: goto 41
37: empty
38: £temporary2834 -> localeConvPtr = *localeConvPtr, offset 10
39: £temporary2838 = £temporary2834 -> localeConvPtr
40: goto 43
41: empty
42: £temporary2838 = 0
43: empty
44: longMonthList = £temporary2838
45: call header
46: parameter s, offset 6
47: parameter string_#, offset 8
48: call function noellipse-noellipse strcpy
49: post call
50: if shortDayList != 0 goto 52
51: goto 55
52: empty
53: £temporary2844 = shortDayList
54: goto 57
55: empty
56: £temporary2844 = g_defaultShortDayList
57: empty
58: shortDayList = £temporary2844
59: if longDayList != 0 goto 61
60: goto 64
61: empty
62: £temporary2849 = longDayList
63: goto 66
64: empty
65: £temporary2849 = g_defaultLongDayList
66: empty
67: longDayList = £temporary2849
68: if shortMonthList != 0 goto 70
69: goto 73
70: empty
71: £temporary2854 = shortMonthList
72: goto 75
73: empty
74: £temporary2854 = g_defaultShortMonthList
75: empty
76: shortMonthList = £temporary2854
77: if longMonthList != 0 goto 79
78: goto 82
79: empty
80: £temporary2859 = longMonthList
81: goto 84
82: empty
83: £temporary2859 = g_defaultLongMonthList
84: empty
85: longMonthList = £temporary2859
86: £temporary2860 -> tp = *tp, offset 10
87: £temporary2861 = £temporary2860 -> tp - 69
88: £temporary2862 = £temporary2861 / 4
89: leapDays = £temporary2862
90: £temporary2863 -> tp = *tp, offset 10
91: £temporary2864 = £temporary2863 -> tp - 70
92: £temporary2865 = 365 * £temporary2864
93: £temporary2866 = £temporary2865 + leapDays
94: £temporary2867 -> tp = *tp, offset 14
95: £temporary2868 = £temporary2866 + £temporary2867 -> tp
96: £temporary2869 = int_to_int £temporary2868 (Signed_Int -> Signed_Long_Int)
97: totalDays = £temporary2869
98: call header
99: parameter string_leap20days2025i2C20total20days2025lu0A#, offset 6
100: parameter leapDays, offset 8
101: parameter totalDays, offset 10
102: call function noellipse-ellipse printf, extra 0
103: post call
104: if totalDays < 3 goto 107
105: goto 111
106: check track map float stack
107: £temporary2872 = totalDays + 4
108: £temporary2873 = int_to_int £temporary2872 (Signed_Long_Int -> Signed_Int)
109: yearDaySunday = £temporary2873
110: goto 116
111: £temporary2874 = totalDays - 3
112: £temporary2875 = £temporary2874 % 7
113: £temporary2876 = int_to_int £temporary2875 (Signed_Long_Int -> Signed_Int)
114: yearDaySunday = £temporary2876
115: goto 116
116: call header
117: parameter string_yearDaySunday2025i0A#, offset 6
118: parameter yearDaySunday, offset 8
119: call function noellipse-ellipse printf, extra 0
120: post call
121: if totalDays < 4 goto 124
122: goto 128
123: check track map float stack
124: £temporary2879 = totalDays + 3
125: £temporary2880 = int_to_int £temporary2879 (Signed_Long_Int -> Signed_Int)
126: yearDayMonday = £temporary2880
127: goto 133
128: £temporary2881 = totalDays - 4
129: £temporary2882 = £temporary2881 % 7
130: £temporary2883 = int_to_int £temporary2882 (Signed_Long_Int -> Signed_Int)
131: yearDayMonday = £temporary2883
132: goto 133
133: call header
134: parameter string_yearDayMonday2025i0A#, offset 6
135: parameter yearDayMonday, offset 8
136: call function noellipse-ellipse printf, extra 0
137: post call
138: index = 0
139: empty
140: £temporary2886 = fmt + index
141: £temporary2885 -> £temporary2886 = *£temporary2886
142: if £temporary2885 -> £temporary2886 != 0 goto 145
143: goto 423
144: check track map float stack
145: empty
146: £temporary2890 = fmt + index
147: £temporary2889 -> £temporary2890 = *£temporary2890
148: if £temporary2889 -> £temporary2890 == 37 goto 151
149: goto 391
150: check track map float stack
151: index = index + 1
152: £temporary2892 = index
153: £temporary2894 = fmt + £temporary2892
154: £temporary2893 -> £temporary2894 = *£temporary2894
155: case £temporary2893 -> £temporary2894 == 97 goto 179
156: case £temporary2893 -> £temporary2894 == 65 goto 189
157: case £temporary2893 -> £temporary2894 == 98 goto 199
158: case £temporary2893 -> £temporary2894 == 66 goto 209
159: case £temporary2893 -> £temporary2894 == 99 goto 219
160: case £temporary2893 -> £temporary2894 == 100 goto 239
161: case £temporary2893 -> £temporary2894 == 72 goto 247
162: case £temporary2893 -> £temporary2894 == 73 goto 255
163: case £temporary2893 -> £temporary2894 == 106 goto 264
164: case £temporary2893 -> £temporary2894 == 109 goto 272
165: case £temporary2893 -> £temporary2894 == 77 goto 281
166: case £temporary2893 -> £temporary2894 == 112 goto 289
167: case £temporary2893 -> £temporary2894 == 83 goto 305
168: case £temporary2893 -> £temporary2894 == 85 goto 313
169: case £temporary2893 -> £temporary2894 == 119 goto 320
170: case £temporary2893 -> £temporary2894 == 87 goto 328
171: case £temporary2893 -> £temporary2894 == 120 goto 335
172: case £temporary2893 -> £temporary2894 == 88 goto 349
173: case £temporary2893 -> £temporary2894 == 121 goto 361
174: case £temporary2893 -> £temporary2894 == 89 goto 370
175: case £temporary2893 -> £temporary2894 == 90 goto 379
176: case £temporary2893 -> £temporary2894 == 37 goto 385
177: case end £temporary2893 -> £temporary2894
178: goto 398
179: call header
180: parameter add, offset 6
181: £temporary2895 -> tp = *tp, offset 12
182: £temporary2897 = £temporary2895 -> tp * 2
183: £temporary2898 = shortDayList + £temporary2897
184: £temporary2896 -> £temporary2898 = *£temporary2898
185: parameter £temporary2896 -> £temporary2898, offset 8
186: call function noellipse-noellipse strcpy
187: post call
188: goto 398
189: call header
190: parameter add, offset 6
191: £temporary2900 -> tp = *tp, offset 12
192: £temporary2902 = £temporary2900 -> tp * 2
193: £temporary2903 = longDayList + £temporary2902
194: £temporary2901 -> £temporary2903 = *£temporary2903
195: parameter £temporary2901 -> £temporary2903, offset 8
196: call function noellipse-noellipse strcpy
197: post call
198: goto 398
199: call header
200: parameter add, offset 6
201: £temporary2905 -> tp = *tp, offset 8
202: £temporary2907 = £temporary2905 -> tp * 2
203: £temporary2908 = shortMonthList + £temporary2907
204: £temporary2906 -> £temporary2908 = *£temporary2908
205: parameter £temporary2906 -> £temporary2908, offset 8
206: call function noellipse-noellipse strcpy
207: post call
208: goto 398
209: call header
210: parameter add, offset 6
211: £temporary2910 -> tp = *tp, offset 8
212: £temporary2912 = £temporary2910 -> tp * 2
213: £temporary2913 = longMonthList + £temporary2912
214: £temporary2911 -> £temporary2913 = *£temporary2913
215: parameter £temporary2911 -> £temporary2913, offset 8
216: call function noellipse-noellipse strcpy
217: post call
218: goto 398
219: call header
220: parameter add, offset 6
221: parameter string_2504d2D2502d2D2502d202502d3A2502d3A2502d#, offset 8
222: £temporary2915 -> tp = *tp, offset 10
223: £temporary2916 = 1900 + £temporary2915 -> tp
224: parameter £temporary2916, offset 10
225: £temporary2917 -> tp = *tp, offset 8
226: £temporary2918 = £temporary2917 -> tp + 1
227: parameter £temporary2918, offset 12
228: £temporary2919 -> tp = *tp, offset 6
229: parameter £temporary2919 -> tp, offset 14
230: £temporary2920 -> tp = *tp, offset 4
231: parameter £temporary2920 -> tp, offset 16
232: £temporary2921 -> tp = *tp, offset 2
233: parameter £temporary2921 -> tp, offset 18
234: £temporary2922 -> tp = *tp
235: parameter £temporary2922 -> tp, offset 20
236: call function noellipse-ellipse sprintf, extra 0
237: post call
238: goto 398
239: call header
240: parameter add, offset 6
241: parameter string_2502d#, offset 8
242: £temporary2924 -> tp = *tp, offset 6
243: parameter £temporary2924 -> tp, offset 10
244: call function noellipse-ellipse sprintf, extra 0
245: post call
246: goto 398
247: call header
248: parameter add, offset 6
249: parameter string_2502d#, offset 8
250: £temporary2926 -> tp = *tp, offset 4
251: parameter £temporary2926 -> tp, offset 10
252: call function noellipse-ellipse sprintf, extra 0
253: post call
254: goto 398
255: call header
256: parameter add, offset 6
257: parameter string_2502d#, offset 8
258: £temporary2928 -> tp = *tp, offset 4
259: £temporary2929 = £temporary2928 -> tp % 12
260: parameter £temporary2929, offset 10
261: call function noellipse-ellipse sprintf, extra 0
262: post call
263: goto 398
264: call header
265: parameter add, offset 6
266: parameter string_2503d#, offset 8
267: £temporary2931 -> tp = *tp, offset 14
268: parameter £temporary2931 -> tp, offset 10
269: call function noellipse-ellipse sprintf, extra 0
270: post call
271: goto 398
272: call header
273: parameter add, offset 6
274: parameter string_2502d#, offset 8
275: £temporary2933 -> tp = *tp, offset 8
276: £temporary2934 = £temporary2933 -> tp + 1
277: parameter £temporary2934, offset 10
278: call function noellipse-ellipse sprintf, extra 0
279: post call
280: goto 398
281: call header
282: parameter add, offset 6
283: parameter string_2502d#, offset 8
284: £temporary2936 -> tp = *tp, offset 2
285: parameter £temporary2936 -> tp, offset 10
286: call function noellipse-ellipse sprintf, extra 0
287: post call
288: goto 398
289: call header
290: parameter add, offset 6
291: parameter string_25s#, offset 8
292: £temporary2938 -> tp = *tp, offset 4
293: if £temporary2938 -> tp < 12 goto 295
294: goto 298
295: empty
296: £temporary2943 = string_AM#
297: goto 300
298: empty
299: £temporary2943 = string_PM#
300: empty
301: parameter £temporary2943, offset 10
302: call function noellipse-ellipse sprintf, extra 0
303: post call
304: goto 398
305: call header
306: parameter add, offset 6
307: parameter string_2502d#, offset 8
308: £temporary2945 -> tp = *tp
309: parameter £temporary2945 -> tp, offset 10
310: call function noellipse-ellipse sprintf, extra 0
311: post call
312: goto 398
313: call header
314: parameter add, offset 6
315: parameter string_2502d#, offset 8
316: parameter yearDaySunday, offset 10
317: call function noellipse-ellipse sprintf, extra 0
318: post call
319: goto 398
320: call header
321: parameter add, offset 6
322: parameter string_2502d#, offset 8
323: £temporary2948 -> tp = *tp, offset 12
324: parameter £temporary2948 -> tp, offset 10
325: call function noellipse-ellipse sprintf, extra 0
326: post call
327: goto 398
328: call header
329: parameter add, offset 6
330: parameter string_2502d#, offset 8
331: parameter yearDayMonday, offset 10
332: call function noellipse-ellipse sprintf, extra 0
333: post call
334: goto 398
335: call header
336: parameter add, offset 6
337: parameter string_2504d2D2502d2D2502d#, offset 8
338: £temporary2951 -> tp = *tp, offset 10
339: £temporary2952 = 1900 + £temporary2951 -> tp
340: parameter £temporary2952, offset 10
341: £temporary2953 -> tp = *tp, offset 8
342: £temporary2954 = £temporary2953 -> tp + 1
343: parameter £temporary2954, offset 12
344: £temporary2955 -> tp = *tp, offset 6
345: parameter £temporary2955 -> tp, offset 14
346: call function noellipse-ellipse sprintf, extra 0
347: post call
348: goto 398
349: call header
350: parameter add, offset 6
351: parameter string_2502d3A2502d3A2502d#, offset 8
352: £temporary2957 -> tp = *tp, offset 4
353: parameter £temporary2957 -> tp, offset 10
354: £temporary2958 -> tp = *tp, offset 2
355: parameter £temporary2958 -> tp, offset 12
356: £temporary2959 -> tp = *tp
357: parameter £temporary2959 -> tp, offset 14
358: call function noellipse-ellipse sprintf, extra 0
359: post call
360: goto 398
361: call header
362: parameter add, offset 6
363: parameter string_2502d#, offset 8
364: £temporary2961 -> tp = *tp, offset 10
365: £temporary2962 = £temporary2961 -> tp % 100
366: parameter £temporary2962, offset 10
367: call function noellipse-ellipse sprintf, extra 0
368: post call
369: goto 398
370: call header
371: parameter add, offset 6
372: parameter string_2504d#, offset 8
373: £temporary2964 -> tp = *tp, offset 10
374: £temporary2965 = 1900 + £temporary2964 -> tp
375: parameter £temporary2965, offset 10
376: call function noellipse-ellipse sprintf, extra 0
377: post call
378: goto 398
379: call header
380: parameter add, offset 6
381: parameter string_#, offset 8
382: call function noellipse-noellipse strcpy
383: post call
384: goto 398
385: call header
386: parameter add, offset 6
387: parameter string_25#, offset 8
388: call function noellipse-noellipse strcpy
389: post call
390: goto 398
391: £temporary2969 -> add = *add
392: £temporary2971 = fmt + index
393: £temporary2970 -> £temporary2971 = *£temporary2971
394: £temporary2969 -> add = £temporary2970 -> £temporary2971
395: £temporary2972 -> add = *add, offset 1
396: £temporary2972 -> add = 0
397: goto 398
398: call header
399: parameter s, offset 6
400: call function noellipse-noellipse strlen
401: post call
402: £temporary2973 = return_value
403: call header
404: parameter add, offset 6
405: call function noellipse-noellipse strlen
406: post call
407: £temporary2974 = return_value
408: £temporary2975 = £temporary2973 + £temporary2974
409: if £temporary2975 < smax goto 412
410: goto 418
411: check track map float stack
412: call header
413: parameter s, offset 6
414: parameter add, offset 8
415: call function noellipse-noellipse strcat
416: post call
417: goto 420
418: goto 423
419: goto 420
420: empty
421: index = index + 1
422: goto 139
423: call header
424: parameter s, offset 6
425: call function noellipse-noellipse strlen
426: post call
427: £temporary2978 = return_value
428: return_value = £temporary2978
429: return
430: empty
431: return
432: function end strftime
0: index = 0
1: empty
2: £temporary3063 = source + index
3: £temporary3062 -> £temporary3063 = *£temporary3063
4: if £temporary3062 -> £temporary3063 != 0 goto 7
5: goto 16
6: check track map float stack
7: empty
8: £temporary3067 = target + index
9: £temporary3066 -> £temporary3067 = *£temporary3067
10: £temporary3069 = source + index
11: £temporary3068 -> £temporary3069 = *£temporary3069
12: £temporary3066 -> £temporary3067 = £temporary3068 -> £temporary3069
13: empty
14: index = index + 1
15: goto 1
16: £temporary3071 = target + index
17: £temporary3070 -> £temporary3071 = *£temporary3071
18: £temporary3070 -> £temporary3071 = 0
19: return_value = target
20: return
21: empty
22: return
23: function end strcpy
0: index = 0
1: empty
2: if index < size goto 4
3: goto 18
4: £temporary3074 = source + index
5: £temporary3073 -> £temporary3074 = *£temporary3074
6: if £temporary3073 -> £temporary3074 != 0 goto 9
7: goto 18
8: check track map float stack
9: empty
10: £temporary3079 = target + index
11: £temporary3078 -> £temporary3079 = *£temporary3079
12: £temporary3081 = source + index
13: £temporary3080 -> £temporary3081 = *£temporary3081
14: £temporary3078 -> £temporary3079 = £temporary3080 -> £temporary3081
15: empty
16: index = index + 1
17: goto 1
18: empty
19: if index < size goto 22
20: goto 29
21: check track map float stack
22: empty
23: £temporary3085 = target + index
24: £temporary3084 -> £temporary3085 = *£temporary3085
25: £temporary3084 -> £temporary3085 = 0
26: empty
27: index = index + 1
28: goto 18
29: return_value = target
30: return
31: empty
32: return
33: function end strncpy
0: call header
1: parameter target, offset 6
2: call function noellipse-noellipse strlen
3: post call
4: £temporary3086 = return_value
5: targetLength = £temporary3086
6: index = 0
7: empty
8: £temporary3088 = source + index
9: £temporary3087 -> £temporary3088 = *£temporary3088
10: if £temporary3087 -> £temporary3088 != 0 goto 13
11: goto 23
12: check track map float stack
13: empty
14: £temporary3091 = targetLength + index
15: £temporary3093 = target + £temporary3091
16: £temporary3092 -> £temporary3093 = *£temporary3093
17: £temporary3095 = source + index
18: £temporary3094 -> £temporary3095 = *£temporary3095
19: £temporary3092 -> £temporary3093 = £temporary3094 -> £temporary3095
20: empty
21: index = index + 1
22: goto 7
23: £temporary3096 = targetLength + index
24: £temporary3098 = target + £temporary3096
25: £temporary3097 -> £temporary3098 = *£temporary3098
26: £temporary3097 -> £temporary3098 = 0
27: return_value = target
28: return
29: empty
30: return
31: function end strcat
0: call header
1: parameter target, offset 6
2: call function noellipse-noellipse strlen
3: post call
4: £temporary3100 = return_value
5: targetLength = £temporary3100
6: index = 0
7: empty
8: £temporary3101 = size - 1
9: if index < £temporary3101 goto 11
10: goto 26
11: £temporary3104 = source + index
12: £temporary3103 -> £temporary3104 = *£temporary3104
13: if £temporary3103 -> £temporary3104 != 0 goto 16
14: goto 26
15: check track map float stack
16: empty
17: £temporary3108 = targetLength + index
18: £temporary3110 = target + £temporary3108
19: £temporary3109 -> £temporary3110 = *£temporary3110
20: £temporary3112 = source + index
21: £temporary3111 -> £temporary3112 = *£temporary3112
22: £temporary3109 -> £temporary3110 = £temporary3111 -> £temporary3112
23: empty
24: index = index + 1
25: goto 7
26: £temporary3113 = targetLength + size
27: £temporary3114 = £temporary3113 - 1
28: £temporary3116 = target + £temporary3114
29: £temporary3115 -> £temporary3116 = *£temporary3116
30: £temporary3115 -> £temporary3116 = 0
31: return_value = target
32: return
33: empty
34: return
35: function end strncat
0: index = 0
1: empty
2: goto 4
3: check track map float stack
4: empty
5: £temporary3120 = left + index
6: £temporary3119 -> £temporary3120 = *£temporary3120
7: if £temporary3119 -> £temporary3120 == 0 goto 9
8: goto 17
9: £temporary3123 = right + index
10: £temporary3122 -> £temporary3123 = *£temporary3123
11: if £temporary3122 -> £temporary3123 == 0 goto 14
12: goto 17
13: check track map float stack
14: return_value = 0
15: return
16: goto 57
17: £temporary3127 = left + index
18: £temporary3126 -> £temporary3127 = *£temporary3127
19: if £temporary3126 -> £temporary3127 == 0 goto 22
20: goto 25
21: check track map float stack
22: return_value = -1
23: return
24: goto 57
25: £temporary3130 = right + index
26: £temporary3129 -> £temporary3130 = *£temporary3130
27: if £temporary3129 -> £temporary3130 == 0 goto 30
28: goto 33
29: check track map float stack
30: return_value = 1
31: return
32: goto 57
33: £temporary3133 = left + index
34: £temporary3132 -> £temporary3133 = *£temporary3133
35: £temporary3135 = right + index
36: £temporary3134 -> £temporary3135 = *£temporary3135
37: if £temporary3132 -> £temporary3133 < £temporary3134 -> £temporary3135 goto 40
38: goto 43
39: check track map float stack
40: return_value = -1
41: return
42: goto 57
43: £temporary3138 = left + index
44: £temporary3137 -> £temporary3138 = *£temporary3138
45: £temporary3140 = right + index
46: £temporary3139 -> £temporary3140 = *£temporary3140
47: if £temporary3137 -> £temporary3138 > £temporary3139 -> £temporary3140 goto 50
48: goto 57
49: check track map float stack
50: return_value = 1
51: return
52: goto 57
53: goto 57
54: goto 57
55: goto 57
56: goto 57
57: empty
58: index = index + 1
59: goto 1
60: empty
61: return
62: function end strcmp
0: index = 0
1: empty
2: if index < size goto 5
3: goto 61
4: check track map float stack
5: empty
6: £temporary3146 = left + index
7: £temporary3145 -> £temporary3146 = *£temporary3146
8: if £temporary3145 -> £temporary3146 == 0 goto 10
9: goto 18
10: £temporary3149 = right + index
11: £temporary3148 -> £temporary3149 = *£temporary3149
12: if £temporary3148 -> £temporary3149 == 0 goto 15
13: goto 18
14: check track map float stack
15: return_value = 0
16: return
17: goto 58
18: £temporary3153 = left + index
19: £temporary3152 -> £temporary3153 = *£temporary3153
20: if £temporary3152 -> £temporary3153 == 0 goto 23
21: goto 26
22: check track map float stack
23: return_value = -1
24: return
25: goto 58
26: £temporary3156 = right + index
27: £temporary3155 -> £temporary3156 = *£temporary3156
28: if £temporary3155 -> £temporary3156 == 0 goto 31
29: goto 34
30: check track map float stack
31: return_value = 1
32: return
33: goto 58
34: £temporary3159 = left + index
35: £temporary3158 -> £temporary3159 = *£temporary3159
36: £temporary3161 = right + index
37: £temporary3160 -> £temporary3161 = *£temporary3161
38: if £temporary3158 -> £temporary3159 < £temporary3160 -> £temporary3161 goto 41
39: goto 44
40: check track map float stack
41: return_value = -1
42: return
43: goto 58
44: £temporary3164 = left + index
45: £temporary3163 -> £temporary3164 = *£temporary3164
46: £temporary3166 = right + index
47: £temporary3165 -> £temporary3166 = *£temporary3166
48: if £temporary3163 -> £temporary3164 > £temporary3165 -> £temporary3166 goto 51
49: goto 58
50: check track map float stack
51: return_value = 1
52: return
53: goto 58
54: goto 58
55: goto 58
56: goto 58
57: goto 58
58: empty
59: index = index + 1
60: goto 1
61: return_value = 0
62: return
63: empty
64: return
65: function end strncmp
0: £temporary3168 = int_to_int i (Signed_Int -> Signed_Char)
1: c = £temporary3168
2: index = 0
3: empty
4: £temporary3170 = text + index
5: £temporary3169 -> £temporary3170 = *£temporary3170
6: if £temporary3169 -> £temporary3170 != 0 goto 9
7: goto 24
8: check track map float stack
9: empty
10: £temporary3174 = text + index
11: £temporary3173 -> £temporary3174 = *£temporary3174
12: if £temporary3173 -> £temporary3174 == c goto 15
13: goto 21
14: check track map float stack
15: £temporary3177 = text + index
16: £temporary3176 -> £temporary3177 = *£temporary3177
17: £temporary3178 = &£temporary3176 -> £temporary3177
18: return_value = £temporary3178
19: return
20: goto 21
21: empty
22: index = index + 1
23: goto 3
24: return_value = 0
25: return
26: empty
27: return
28: function end strchr
0: result = 0
1: £temporary3179 = int_to_int i (Signed_Int -> Signed_Char)
2: c = £temporary3179
3: index = 0
4: empty
5: £temporary3181 = text + index
6: £temporary3180 -> £temporary3181 = *£temporary3181
7: if £temporary3180 -> £temporary3181 != 0 goto 10
8: goto 24
9: check track map float stack
10: empty
11: £temporary3185 = text + index
12: £temporary3184 -> £temporary3185 = *£temporary3185
13: if £temporary3184 -> £temporary3185 == c goto 16
14: goto 21
15: check track map float stack
16: £temporary3188 = text + index
17: £temporary3187 -> £temporary3188 = *£temporary3188
18: £temporary3189 = &£temporary3187 -> £temporary3188
19: result = £temporary3189
20: goto 21
21: empty
22: index = index + 1
23: goto 4
24: return_value = result
25: return
26: empty
27: return
28: function end strrchr
0: index = 0
1: empty
2: £temporary3191 = mainString + index
3: £temporary3190 -> £temporary3191 = *£temporary3191
4: if £temporary3190 -> £temporary3191 != 0 goto 7
5: goto 26
6: check track map float stack
7: empty
8: call header
9: parameter charSet, offset 6
10: £temporary3195 = mainString + index
11: £temporary3194 -> £temporary3195 = *£temporary3195
12: £temporary3196 = int_to_int £temporary3194 -> £temporary3195 (Signed_Char -> Signed_Int)
13: parameter £temporary3196, offset 8
14: call function noellipse-noellipse strchr
15: post call
16: £temporary3197 = return_value
17: if £temporary3197 == 0 goto 20
18: goto 23
19: check track map float stack
20: return_value = index
21: return
22: goto 23
23: empty
24: index = index + 1
25: goto 1
26: return_value = -1
27: return
28: empty
29: return
30: function end strspn
0: index = 0
1: empty
2: £temporary3202 = mainString + index
3: £temporary3201 -> £temporary3202 = *£temporary3202
4: if £temporary3201 -> £temporary3202 != 0 goto 7
5: goto 26
6: check track map float stack
7: empty
8: call header
9: parameter charSet, offset 6
10: £temporary3206 = mainString + index
11: £temporary3205 -> £temporary3206 = *£temporary3206
12: £temporary3207 = int_to_int £temporary3205 -> £temporary3206 (Signed_Char -> Signed_Int)
13: parameter £temporary3207, offset 8
14: call function noellipse-noellipse strchr
15: post call
16: £temporary3208 = return_value
17: if £temporary3208 != 0 goto 20
18: goto 23
19: check track map float stack
20: return_value = index
21: return
22: goto 23
23: empty
24: index = index + 1
25: goto 1
26: return_value = -1
27: return
28: empty
29: return
30: function end strcspn
0: index = 0
1: empty
2: £temporary3213 = mainString + index
3: £temporary3212 -> £temporary3213 = *£temporary3213
4: if £temporary3212 -> £temporary3213 != 0 goto 7
5: goto 29
6: check track map float stack
7: empty
8: call header
9: parameter charSet, offset 6
10: £temporary3217 = mainString + index
11: £temporary3216 -> £temporary3217 = *£temporary3217
12: £temporary3218 = int_to_int £temporary3216 -> £temporary3217 (Signed_Char -> Signed_Int)
13: parameter £temporary3218, offset 8
14: call function noellipse-noellipse strchr
15: post call
16: £temporary3219 = return_value
17: if £temporary3219 != 0 goto 20
18: goto 26
19: check track map float stack
20: £temporary3222 = mainString + index
21: £temporary3221 -> £temporary3222 = *£temporary3222
22: £temporary3223 = &£temporary3221 -> £temporary3222
23: return_value = £temporary3223
24: return
25: goto 26
26: empty
27: index = index + 1
28: goto 1
29: return_value = 0
30: return
31: empty
32: return
33: function end strpbrk
0: index = 0
1: empty
2: £temporary3227 = mainString + index
3: £temporary3226 -> £temporary3227 = *£temporary3227
4: if £temporary3226 -> £temporary3227 != 0 goto 7
5: goto 27
6: check track map float stack
7: empty
8: call header
9: £temporary3230 = mainString + index
10: parameter £temporary3230, offset 6
11: parameter subString, offset 8
12: call function noellipse-noellipse strcmp
13: post call
14: £temporary3231 = return_value
15: if £temporary3231 == 0 goto 18
16: goto 24
17: check track map float stack
18: £temporary3234 = mainString + index
19: £temporary3233 -> £temporary3234 = *£temporary3234
20: £temporary3235 = &£temporary3233 -> £temporary3234
21: return_value = £temporary3235
22: return
23: goto 24
24: empty
25: index = index + 1
26: goto 1
27: return_value = 0
28: return
29: empty
30: return
31: function end strstr
0: index = 0
1: empty
2: £temporary3239 = string + index
3: £temporary3238 -> £temporary3239 = *£temporary3239
4: if £temporary3238 -> £temporary3239 != 0 goto 7
5: goto 11
6: check track map float stack
7: empty
8: empty
9: index = index + 1
10: goto 1
11: return_value = index
12: return
13: empty
14: return
15: function end strlen
0: call header
1: call function noellipse-noellipse localeconv
2: post call
3: £temporary3242 = return_value
4: localeConvPtr = £temporary3242
5: if localeConvPtr != 0 goto 7
6: goto 11
7: empty
8: £temporary3244 -> localeConvPtr = *localeConvPtr, offset 16
9: £temporary3248 = £temporary3244 -> localeConvPtr
10: goto 13
11: empty
12: £temporary3248 = 0
13: empty
14: messageList = £temporary3248
15: if messageList != 0 goto 17
16: goto 20
17: empty
18: £temporary3253 = messageList
19: goto 22
20: empty
21: £temporary3253 = enMessageList
22: empty
23: messageList = £temporary3253
24: £temporary3255 = errno * 2
25: £temporary3256 = messageList + £temporary3255
26: £temporary3254 -> £temporary3256 = *£temporary3256
27: return_value = £temporary3254 -> £temporary3256
28: return
29: empty
30: return
31: function end strerror
0: if string != 0 goto 3
1: goto 51
2: check track map float stack
3: £temporary3258 -> string = *string
4: if £temporary3258 -> string == 0 goto 7
5: goto 10
6: check track map float stack
7: return_value = 0
8: return
9: goto 10
10: index = 0
11: empty
12: £temporary3261 = string + index
13: £temporary3260 -> £temporary3261 = *£temporary3261
14: if £temporary3260 -> £temporary3261 != 0 goto 17
15: goto 44
16: check track map float stack
17: empty
18: call header
19: parameter charSet, offset 6
20: £temporary3265 = string + index
21: £temporary3264 -> £temporary3265 = *£temporary3265
22: £temporary3266 = int_to_int £temporary3264 -> £temporary3265 (Signed_Char -> Signed_Int)
23: parameter £temporary3266, offset 8
24: call function noellipse-noellipse strchr
25: post call
26: £temporary3267 = return_value
27: if £temporary3267 != 0 goto 30
28: goto 41
29: check track map float stack
30: £temporary3270 = string + index
31: £temporary3269 -> £temporary3270 = *£temporary3270
32: £temporary3269 -> £temporary3270 = 0
33: £temporary3271 = index + 1
34: £temporary3273 = string + £temporary3271
35: £temporary3272 -> £temporary3273 = *£temporary3273
36: £temporary3274 = &£temporary3272 -> £temporary3273
37: token = £temporary3274
38: return_value = string
39: return
40: goto 41
41: empty
42: index = index + 1
43: goto 11
44: £temporary3276 = string + index
45: £temporary3275 -> £temporary3276 = *£temporary3276
46: £temporary3277 = &£temporary3275 -> £temporary3276
47: token = £temporary3277
48: return_value = string
49: return
50: goto 107
51: if token == 0 goto 54
52: goto 57
53: check track map float stack
54: return_value = 0
55: return
56: goto 107
57: if (token,0) == 0 goto 60
58: goto 63
59: check track map float stack
60: return_value = 0
61: return
62: goto 63
63: index = 0
64: empty
65: £temporary3282 = token + index
66: £temporary3281 -> £temporary3282 = *£temporary3282
67: if £temporary3281 -> £temporary3282 != 0 goto 70
68: goto 98
69: check track map float stack
70: empty
71: call header
72: parameter charSet, offset 6
73: £temporary3286 = token + index
74: £temporary3285 -> £temporary3286 = *£temporary3286
75: £temporary3287 = int_to_int £temporary3285 -> £temporary3286 (Signed_Char -> Signed_Int)
76: parameter £temporary3287, offset 8
77: call function noellipse-noellipse strchr
78: post call
79: £temporary3288 = return_value
80: if £temporary3288 != 0 goto 83
81: goto 95
82: check track map float stack
83: tokenStart2 = token
84: £temporary3291 = token + index
85: £temporary3290 -> £temporary3291 = *£temporary3291
86: £temporary3290 -> £temporary3291 = 0
87: £temporary3292 = index + 1
88: £temporary3294 = token + £temporary3292
89: £temporary3293 -> £temporary3294 = *£temporary3294
90: £temporary3295 = &£temporary3293 -> £temporary3294
91: token = £temporary3295
92: return_value = tokenStart2
93: return
94: goto 95
95: empty
96: index = index + 1
97: goto 64
98: tokenStart = token
99: £temporary3297 = token + index
100: £temporary3296 -> £temporary3297 = *£temporary3297
101: £temporary3298 = &£temporary3296 -> £temporary3297
102: token = £temporary3298
103: return_value = tokenStart
104: return
105: goto 107
106: goto 107
107: empty
108: return
109: function end strtok
0: £temporary3303 = int_to_int target (Pointer -> Pointer)
1: charTarget = £temporary3303
2: £temporary3304 = int_to_int source (Pointer -> Pointer)
3: charSource = £temporary3304
4: index = 0
5: empty
6: if index < size goto 9
7: goto 18
8: check track map float stack
9: empty
10: £temporary3308 = charTarget + index
11: £temporary3307 -> £temporary3308 = *£temporary3308
12: £temporary3310 = charSource + index
13: £temporary3309 -> £temporary3310 = *£temporary3310
14: £temporary3307 -> £temporary3308 = £temporary3309 -> £temporary3310
15: empty
16: index = index + 1
17: goto 5
18: £temporary3311 = int_to_int target (Pointer -> Pointer)
19: return_value = £temporary3311
20: return
21: empty
22: return
23: function end memcpy
0: £temporary3312 = int_to_int target (Pointer -> Pointer)
1: charTarget = £temporary3312
2: £temporary3313 = int_to_int source (Pointer -> Pointer)
3: charSource = £temporary3313
4: if source < target goto 7
5: goto 23
6: check track map float stack
7: £temporary3315 = size - 1
8: index = £temporary3315
9: empty
10: if index >= 0 goto 13
11: goto 38
12: check track map float stack
13: empty
14: £temporary3319 = charTarget + index
15: £temporary3318 -> £temporary3319 = *£temporary3319
16: £temporary3321 = charSource + index
17: £temporary3320 -> £temporary3321 = *£temporary3321
18: £temporary3318 -> £temporary3319 = £temporary3320 -> £temporary3321
19: empty
20: index = index - 1
21: goto 9
22: goto 38
23: index = 0
24: empty
25: if index < size goto 28
26: goto 38
27: check track map float stack
28: empty
29: £temporary3325 = charTarget + index
30: £temporary3324 -> £temporary3325 = *£temporary3325
31: £temporary3327 = charSource + index
32: £temporary3326 -> £temporary3327 = *£temporary3327
33: £temporary3324 -> £temporary3325 = £temporary3326 -> £temporary3327
34: empty
35: index = index + 1
36: goto 24
37: goto 38
38: £temporary3328 = int_to_int target (Pointer -> Pointer)
39: return_value = £temporary3328
40: return
41: empty
42: return
43: function end memmove
0: £temporary3329 = int_to_int left (Pointer -> Pointer)
1: charLeft = £temporary3329
2: £temporary3330 = int_to_int right (Pointer -> Pointer)
3: charRight = £temporary3330
4: index = 0
5: empty
6: if index < size goto 9
7: goto 34
8: check track map float stack
9: empty
10: £temporary3334 = charLeft + index
11: £temporary3333 -> £temporary3334 = *£temporary3334
12: £temporary3336 = charRight + index
13: £temporary3335 -> £temporary3336 = *£temporary3336
14: if £temporary3333 -> £temporary3334 < £temporary3335 -> £temporary3336 goto 17
15: goto 20
16: check track map float stack
17: return_value = -1
18: return
19: goto 31
20: £temporary3339 = charLeft + index
21: £temporary3338 -> £temporary3339 = *£temporary3339
22: £temporary3341 = charRight + index
23: £temporary3340 -> £temporary3341 = *£temporary3341
24: if £temporary3338 -> £temporary3339 > £temporary3340 -> £temporary3341 goto 27
25: goto 31
26: check track map float stack
27: return_value = 1
28: return
29: goto 31
30: goto 31
31: empty
32: index = index + 1
33: goto 5
34: return_value = 0
35: return
36: empty
37: return
38: function end memcmp
0: £temporary3343 = int_to_int block (Pointer -> Pointer)
1: charBlock = £temporary3343
2: £temporary3344 = int_to_int i (Signed_Int -> Signed_Char)
3: c = £temporary3344
4: index = 0
5: empty
6: if index < size goto 9
7: goto 25
8: check track map float stack
9: empty
10: £temporary3348 = charBlock + index
11: £temporary3347 -> £temporary3348 = *£temporary3348
12: if £temporary3347 -> £temporary3348 == c goto 15
13: goto 22
14: check track map float stack
15: £temporary3351 = charBlock + index
16: £temporary3350 -> £temporary3351 = *£temporary3351
17: £temporary3352 = &£temporary3350 -> £temporary3351
18: £temporary3353 = int_to_int £temporary3352 (Pointer -> Pointer)
19: return_value = £temporary3353
20: return
21: goto 22
22: empty
23: index = index + 1
24: goto 5
25: return_value = 0
26: return
27: empty
28: return
29: function end memchr
0: £temporary3354 = int_to_int block (Pointer -> Pointer)
1: charBlock = £temporary3354
2: £temporary3355 = int_to_int i (Signed_Int -> Signed_Char)
3: c = £temporary3355
4: index = 0
5: empty
6: if index < size goto 9
7: goto 16
8: check track map float stack
9: empty
10: £temporary3359 = charBlock + index
11: £temporary3358 -> £temporary3359 = *£temporary3359
12: £temporary3358 -> £temporary3359 = c
13: empty
14: index = index + 1
15: goto 5
16: return_value = block
17: return
18: empty
19: return
20: function end memset
0: call header
1: parameter string_3C258i3E203C252B8i3E203C25208i3E203C252D8i3E203C252B2D8i3E203C252D2B8i3E203C25202D8i3E203C252D208i3E0A#, offset 6
2: parameter 123, offset 8
3: parameter 123, offset 10
4: parameter 123, offset 12
5: parameter 123, offset 14
6: parameter 123, offset 16
7: parameter 123, offset 18
8: parameter 123, offset 20
9: parameter 123, offset 22
10: call function noellipse-ellipse printf, extra 0
11: post call
12: call header
13: parameter string_3C258i3E203C252B8i3E203C25208i3E203C252D8i3E203C252B2D8i3E203C252D2B8i3E203C25202D8i3E203C252D208i3E0A#, offset 6
14: parameter -123, offset 8
15: parameter -123, offset 10
16: parameter -123, offset 12
17: parameter -123, offset 14
18: parameter -123, offset 16
19: parameter -123, offset 18
20: parameter -123, offset 20
21: parameter -123, offset 22
22: call function noellipse-ellipse printf, extra 0
23: post call
24: call header
25: parameter string_3C2508i3E203C252B08i3E203C252008i3E203C250208i3E0A#, offset 6
26: parameter 123, offset 8
27: parameter 123, offset 10
28: parameter 123, offset 12
29: parameter 123, offset 14
30: call function noellipse-ellipse printf, extra 0
31: post call
32: call header
33: parameter string_3C2508i3E203C252B08i3E203C252008i3E203C250208i3E0A#, offset 6
34: parameter -123, offset 8
35: parameter -123, offset 10
36: parameter -123, offset 12
37: parameter -123, offset 14
38: call function noellipse-ellipse printf, extra 0
39: post call
40: call header
41: parameter string_3C25122E3f3E203C252B122E3f3E203C2520122E3f3E203C252D122E3f3E203C252B2D122E3f3E203C252D2B122E3f3E203C25202D122E3f3E203C252D20122E3f3E0A#, offset 6
42: push float 123.456
43: parameter 123.456, offset 8
44: push float 123.456
45: parameter 123.456, offset 16
46: push float 123.456
47: parameter 123.456, offset 24
48: push float 123.456
49: parameter 123.456, offset 32
50: push float 123.456
51: parameter 123.456, offset 40
52: push float 123.456
53: parameter 123.456, offset 48
54: push float 123.456
55: parameter 123.456, offset 56
56: push float 123.456
57: parameter 123.456, offset 64
58: call function noellipse-ellipse printf, extra 0
59: post call
60: call header
61: parameter string_3C25122E3f3E203C252B122E3f3E203C2520122E3f3E203C252D122E3f3E203C252B2D122E3f3E203C252D2B122E3f3E203C25202D122E3f3E203C252D20122E3f3E0A#, offset 6
62: push float -123.456
63: parameter -123.456, offset 8
64: push float -123.456
65: parameter -123.456, offset 16
66: push float -123.456
67: parameter -123.456, offset 24
68: push float -123.456
69: parameter -123.456, offset 32
70: push float -123.456
71: parameter -123.456, offset 40
72: push float -123.456
73: parameter -123.456, offset 48
74: push float -123.456
75: parameter -123.456, offset 56
76: push float -123.456
77: parameter -123.456, offset 64
78: call function noellipse-ellipse printf, extra 0
79: post call
80: call header
81: parameter string_3C250122E3f3E203C252B0122E3f3E203C25200122E3f3E203C25020122E3f3E0A#, offset 6
82: push float 123.456
83: parameter 123.456, offset 8
84: push float 123.456
85: parameter 123.456, offset 16
86: push float 123.456
87: parameter 123.456, offset 24
88: push float 123.456
89: parameter 123.456, offset 32
90: call function noellipse-ellipse printf, extra 0
91: post call
92: call header
93: parameter string_3C250122E3f3E203C252B0122E3f3E203C25200122E3f3E203C25020122E3f3E0A#, offset 6
94: push float -123.456
95: parameter -123.456, offset 8
96: push float -123.456
97: parameter -123.456, offset 16
98: push float -123.456
99: parameter -123.456, offset 24
100: push float -123.456
101: parameter -123.456, offset 32
102: call function noellipse-ellipse printf, extra 0
103: post call
104: empty
105: return
106: function end print_test
0: call header
1: parameter string_ascii2025i0A#, offset 6
2: £temporary3424 = int_to_int c (Signed_Char -> Signed_Int)
3: parameter £temporary3424, offset 8
4: call function noellipse-ellipse printf, extra 0
5: post call
6: call header
7: parameter string_islower282725c2729203D2025s0A#, offset 6
8: £temporary3426 = int_to_int c (Signed_Char -> Signed_Int)
9: parameter £temporary3426, offset 8
10: call header
11: £temporary3427 = int_to_int c (Signed_Char -> Signed_Int)
12: parameter £temporary3427, offset 16
13: call function noellipse-noellipse islower
14: post call
15: £temporary3428 = return_value
16: if £temporary3428 != 0 goto 18
17: goto 21
18: empty
19: £temporary3433 = string_Yes#
20: goto 23
21: empty
22: £temporary3433 = string_No#
23: empty
24: parameter £temporary3433, offset 10
25: call function noellipse-ellipse printf, extra 0
26: post call
27: call header
28: parameter string_isupper282725c2729203D2025s0A#, offset 6
29: £temporary3435 = int_to_int c (Signed_Char -> Signed_Int)
30: parameter £temporary3435, offset 8
31: call header
32: £temporary3436 = int_to_int c (Signed_Char -> Signed_Int)
33: parameter £temporary3436, offset 16
34: call function noellipse-noellipse isupper
35: post call
36: £temporary3437 = return_value
37: if £temporary3437 != 0 goto 39
38: goto 42
39: empty
40: £temporary3442 = string_Yes#
41: goto 44
42: empty
43: £temporary3442 = string_No#
44: empty
45: parameter £temporary3442, offset 10
46: call function noellipse-ellipse printf, extra 0
47: post call
48: call header
49: parameter string_isalpha282725c2729203D2025s0A#, offset 6
50: £temporary3444 = int_to_int c (Signed_Char -> Signed_Int)
51: parameter £temporary3444, offset 8
52: call header
53: £temporary3445 = int_to_int c (Signed_Char -> Signed_Int)
54: parameter £temporary3445, offset 16
55: call function noellipse-noellipse isalpha
56: post call
57: £temporary3446 = return_value
58: if £temporary3446 != 0 goto 60
59: goto 63
60: empty
61: £temporary3451 = string_Yes#
62: goto 65
63: empty
64: £temporary3451 = string_No#
65: empty
66: parameter £temporary3451, offset 10
67: call function noellipse-ellipse printf, extra 0
68: post call
69: call header
70: parameter string_isdigit282725c2729203D2025s0A#, offset 6
71: £temporary3453 = int_to_int c (Signed_Char -> Signed_Int)
72: parameter £temporary3453, offset 8
73: call header
74: £temporary3454 = int_to_int c (Signed_Char -> Signed_Int)
75: parameter £temporary3454, offset 16
76: call function noellipse-noellipse isdigit
77: post call
78: £temporary3455 = return_value
79: if £temporary3455 != 0 goto 81
80: goto 84
81: empty
82: £temporary3460 = string_Yes#
83: goto 86
84: empty
85: £temporary3460 = string_No#
86: empty
87: parameter £temporary3460, offset 10
88: call function noellipse-ellipse printf, extra 0
89: post call
90: call header
91: parameter string_isalnum282725c2729203D2025s0A#, offset 6
92: £temporary3462 = int_to_int c (Signed_Char -> Signed_Int)
93: parameter £temporary3462, offset 8
94: call header
95: £temporary3463 = int_to_int c (Signed_Char -> Signed_Int)
96: parameter £temporary3463, offset 16
97: call function noellipse-noellipse isalnum
98: post call
99: £temporary3464 = return_value
100: if £temporary3464 != 0 goto 102
101: goto 105
102: empty
103: £temporary3469 = string_Yes#
104: goto 107
105: empty
106: £temporary3469 = string_No#
107: empty
108: parameter £temporary3469, offset 10
109: call function noellipse-ellipse printf, extra 0
110: post call
111: call header
112: parameter string_isxdigit282725c2729203D2025s0A#, offset 6
113: £temporary3471 = int_to_int c (Signed_Char -> Signed_Int)
114: parameter £temporary3471, offset 8
115: call header
116: £temporary3472 = int_to_int c (Signed_Char -> Signed_Int)
117: parameter £temporary3472, offset 16
118: call function noellipse-noellipse isxdigit
119: post call
120: £temporary3473 = return_value
121: if £temporary3473 != 0 goto 123
122: goto 126
123: empty
124: £temporary3478 = string_Yes#
125: goto 128
126: empty
127: £temporary3478 = string_No#
128: empty
129: parameter £temporary3478, offset 10
130: call function noellipse-ellipse printf, extra 0
131: post call
132: call header
133: parameter string_isgraph282725c2729203D2025s0A#, offset 6
134: £temporary3480 = int_to_int c (Signed_Char -> Signed_Int)
135: parameter £temporary3480, offset 8
136: call header
137: £temporary3481 = int_to_int c (Signed_Char -> Signed_Int)
138: parameter £temporary3481, offset 16
139: call function noellipse-noellipse isgraph
140: post call
141: £temporary3482 = return_value
142: if £temporary3482 != 0 goto 144
143: goto 147
144: empty
145: £temporary3487 = string_Yes#
146: goto 149
147: empty
148: £temporary3487 = string_No#
149: empty
150: parameter £temporary3487, offset 10
151: call function noellipse-ellipse printf, extra 0
152: post call
153: call header
154: parameter string_isprint282725c2729203D2025s0A#, offset 6
155: £temporary3489 = int_to_int c (Signed_Char -> Signed_Int)
156: parameter £temporary3489, offset 8
157: call header
158: £temporary3490 = int_to_int c (Signed_Char -> Signed_Int)
159: parameter £temporary3490, offset 16
160: call function noellipse-noellipse isprint
161: post call
162: £temporary3491 = return_value
163: if £temporary3491 != 0 goto 165
164: goto 168
165: empty
166: £temporary3496 = string_Yes#
167: goto 170
168: empty
169: £temporary3496 = string_No#
170: empty
171: parameter £temporary3496, offset 10
172: call function noellipse-ellipse printf, extra 0
173: post call
174: call header
175: parameter string_ispunct282725c2729203D2025s0A#, offset 6
176: £temporary3498 = int_to_int c (Signed_Char -> Signed_Int)
177: parameter £temporary3498, offset 8
178: call header
179: £temporary3499 = int_to_int c (Signed_Char -> Signed_Int)
180: parameter £temporary3499, offset 16
181: call function noellipse-noellipse ispunct
182: post call
183: £temporary3500 = return_value
184: if £temporary3500 != 0 goto 186
185: goto 189
186: empty
187: £temporary3505 = string_Yes#
188: goto 191
189: empty
190: £temporary3505 = string_No#
191: empty
192: parameter £temporary3505, offset 10
193: call function noellipse-ellipse printf, extra 0
194: post call
195: call header
196: parameter string_iscntrl282725c2729203D2025s0A#, offset 6
197: £temporary3507 = int_to_int c (Signed_Char -> Signed_Int)
198: parameter £temporary3507, offset 8
199: call header
200: £temporary3508 = int_to_int c (Signed_Char -> Signed_Int)
201: parameter £temporary3508, offset 16
202: call function noellipse-noellipse iscntrl
203: post call
204: £temporary3509 = return_value
205: if £temporary3509 != 0 goto 207
206: goto 210
207: empty
208: £temporary3514 = string_Yes#
209: goto 212
210: empty
211: £temporary3514 = string_No#
212: empty
213: parameter £temporary3514, offset 10
214: call function noellipse-ellipse printf, extra 0
215: post call
216: call header
217: parameter string_isspace282725c2729203D2025s0A#, offset 6
218: £temporary3516 = int_to_int c (Signed_Char -> Signed_Int)
219: parameter £temporary3516, offset 8
220: call header
221: £temporary3517 = int_to_int c (Signed_Char -> Signed_Int)
222: parameter £temporary3517, offset 16
223: call function noellipse-noellipse isspace
224: post call
225: £temporary3518 = return_value
226: if £temporary3518 != 0 goto 228
227: goto 231
228: empty
229: £temporary3523 = string_Yes#
230: goto 233
231: empty
232: £temporary3523 = string_No#
233: empty
234: parameter £temporary3523, offset 10
235: call function noellipse-ellipse printf, extra 0
236: post call
237: call header
238: parameter string_tolower282725c2729203D202725c270A#, offset 6
239: £temporary3525 = int_to_int c (Signed_Char -> Signed_Int)
240: parameter £temporary3525, offset 8
241: call header
242: £temporary3526 = int_to_int c (Signed_Char -> Signed_Int)
243: parameter £temporary3526, offset 16
244: call function noellipse-noellipse tolower
245: post call
246: £temporary3527 = return_value
247: £temporary3528 = int_to_int £temporary3527 (Signed_Int -> Signed_Char)
248: £temporary3529 = int_to_int £temporary3528 (Signed_Char -> Signed_Int)
249: parameter £temporary3529, offset 10
250: call function noellipse-ellipse printf, extra 0
251: post call
252: call header
253: parameter string_toupper282725c2729203D202725c270A0A#, offset 6
254: £temporary3531 = int_to_int c (Signed_Char -> Signed_Int)
255: parameter £temporary3531, offset 8
256: call header
257: £temporary3532 = int_to_int c (Signed_Char -> Signed_Int)
258: parameter £temporary3532, offset 16
259: call function noellipse-noellipse toupper
260: post call
261: £temporary3533 = return_value
262: £temporary3534 = int_to_int £temporary3533 (Signed_Int -> Signed_Char)
263: £temporary3535 = int_to_int £temporary3534 (Signed_Char -> Signed_Int)
264: parameter £temporary3535, offset 10
265: call function noellipse-ellipse printf, extra 0
266: post call
267: empty
268: return
269: function end character_test
0: empty
1: return
2: function end float_test
0: call header
1: parameter string_CHAR_BIT203D2025i0A#, offset 6
2: parameter 8, offset 8
3: call function noellipse-ellipse printf, extra 0
4: post call
5: call header
6: parameter string_CHAR_MIN203D2025i0A0A#, offset 6
7: parameter -128, offset 8
8: call function noellipse-ellipse printf, extra 0
9: post call
10: call header
11: parameter string_CHAR_MAX203D2025i0A#, offset 6
12: parameter 127, offset 8
13: call function noellipse-ellipse printf, extra 0
14: post call
15: call header
16: parameter string_UCHAR_MAX203D2025u0A0A#, offset 6
17: parameter 255, offset 8
18: call function noellipse-ellipse printf, extra 0
19: post call
20: call header
21: parameter string_SHRT_MIN203D2025i0A#, offset 6
22: parameter -128, offset 8
23: call function noellipse-ellipse printf, extra 0
24: post call
25: call header
26: parameter string_SHRT_MAX203D2025i0A#, offset 6
27: parameter 127, offset 8
28: call function noellipse-ellipse printf, extra 0
29: post call
30: call header
31: parameter string_USHRT_MAX203D2025u0A0A#, offset 6
32: parameter 255, offset 8
33: call function noellipse-ellipse printf, extra 0
34: post call
35: call header
36: parameter string_INT_MIN203D2025i0A#, offset 6
37: parameter -32768, offset 8
38: call function noellipse-ellipse printf, extra 0
39: post call
40: call header
41: parameter string_INT_MAX203D2025i0A#, offset 6
42: parameter 32767, offset 8
43: call function noellipse-ellipse printf, extra 0
44: post call
45: call header
46: parameter string_UINT_MAX203D2025u0A0A#, offset 6
47: parameter 65535, offset 8
48: call function noellipse-ellipse printf, extra 0
49: post call
50: call header
51: parameter string_LONG_MIN203D2025li0A#, offset 6
52: parameter -2147483648, offset 8
53: call function noellipse-ellipse printf, extra 0
54: post call
55: call header
56: parameter string_LONG_MAX203D2025li0A#, offset 6
57: parameter 2147483647, offset 8
58: call function noellipse-ellipse printf, extra 0
59: post call
60: call header
61: parameter string_ULONG_MAX203D2025lu0A#, offset 6
62: parameter 4294967295, offset 8
63: call function noellipse-ellipse printf, extra 0
64: post call
65: call header
66: parameter string_ULONG_MAX203D2025lx0A#, offset 6
67: parameter 4294967295, offset 8
68: call function noellipse-ellipse printf, extra 0
69: post call
70: call header
71: parameter string_ULONG_MAX203D2025lX0A#, offset 6
72: parameter 4294967295, offset 8
73: call function noellipse-ellipse printf, extra 0
74: post call
75: empty
76: return
77: function end limits_test
0: n = 0
1: call header
2: parameter string_Please20write20a20number2028not20620or207293A20#, offset 6
3: call function noellipse-ellipse printf, extra 0
4: post call
5: call header
6: parameter string_25i#, offset 6
7: £temporary3637 = &n
8: parameter £temporary3637, offset 8
9: call function noellipse-ellipse scanf, extra 0
10: post call
11: if n != 6 goto 26
12: goto 14
13: check track map float stack
14: call header
15: parameter stderr, offset 6
16: parameter string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#, offset 8
17: parameter string_n20213D206#, offset 10
18: parameter string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CAssertTest2Ec#, offset 12
19: parameter 10, offset 14
20: call function noellipse-ellipse fprintf, extra 0
21: post call
22: call header
23: call function noellipse-noellipse abort
24: post call
25: goto 26
26: empty
27: call header
28: parameter n, offset 6
29: call function noellipse-noellipse assert_test2
30: post call
31: empty
32: return
33: function end assert_testX
0: if n != 7 goto 15
1: goto 3
2: check track map float stack
3: call header
4: parameter stderr, offset 6
5: parameter string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#, offset 8
6: parameter string_n20213D207#, offset 10
7: parameter string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CAssertTest2Ec#, offset 12
8: parameter 15, offset 14
9: call function noellipse-ellipse fprintf, extra 0
10: post call
11: call header
12: call function noellipse-noellipse abort
13: post call
14: goto 15
15: empty
16: empty
17: return
18: function end assert_test2X
0: s = string_Hello2C20World21#
1: call header
2: parameter string_strlen282225s2229203D2025i0A#, offset 6
3: parameter s, offset 8
4: call header
5: parameter s, offset 16
6: call function noellipse-noellipse strlen
7: post call
8: £temporary3663 = return_value
9: parameter £temporary3663, offset 10
10: call function noellipse-ellipse printf, extra 0
11: post call
12: call header
13: parameter t, offset 6
14: parameter s, offset 8
15: call function noellipse-noellipse strcpy
16: post call
17: call header
18: parameter u, offset 6
19: parameter s, offset 8
20: parameter 5, offset 10
21: call function noellipse-noellipse strncpy
22: post call
23: £temporary3667 -> u = *u, offset 5
24: £temporary3667 -> u = 0
25: call header
26: parameter string_t203D202225s222C20u203D202225s220A#, offset 6
27: parameter t, offset 8
28: parameter u, offset 10
29: call function noellipse-ellipse printf, extra 0
30: post call
31: call header
32: parameter t, offset 6
33: parameter string_abc#, offset 8
34: call function noellipse-noellipse strcat
35: post call
36: call header
37: parameter u, offset 6
38: call function noellipse-noellipse strlen
39: post call
40: £temporary3670 = return_value
41: i = £temporary3670
42: call header
43: parameter u, offset 6
44: parameter string_abc#, offset 8
45: parameter 2, offset 10
46: call function noellipse-noellipse strncat
47: post call
48: £temporary3672 = i + 2
49: £temporary3674 = u + £temporary3672
50: £temporary3673 -> £temporary3674 = *£temporary3674
51: £temporary3673 -> £temporary3674 = 0
52: call header
53: parameter string_t203D202225s222C20u203D202225s220A#, offset 6
54: parameter t, offset 8
55: parameter u, offset 10
56: call function noellipse-ellipse printf, extra 0
57: post call
58: call header
59: parameter string_strcmp28s2C20u29203D2025i0A#, offset 6
60: call header
61: parameter s, offset 14
62: parameter u, offset 16
63: call function noellipse-noellipse strcmp
64: post call
65: £temporary3676 = return_value
66: parameter £temporary3676, offset 8
67: call function noellipse-ellipse printf, extra 0
68: post call
69: call header
70: parameter string_strncmp28s2C20u2C20229203D2025i0A#, offset 6
71: call header
72: parameter s, offset 14
73: parameter u, offset 16
74: parameter 2, offset 18
75: call function noellipse-noellipse strncmp
76: post call
77: £temporary3678 = return_value
78: parameter £temporary3678, offset 8
79: call function noellipse-ellipse printf, extra 0
80: post call
81: call header
82: parameter s, offset 6
83: parameter 108, offset 8
84: call function noellipse-noellipse strchr
85: post call
86: £temporary3680 = return_value
87: p = £temporary3680
88: call header
89: parameter string_strchr28s2C2027l2729203D2025i0A#, offset 6
90: if p != 0 goto 92
91: goto 96
92: empty
93: £temporary3682 = p - s
94: £temporary3686 = £temporary3682
95: goto 98
96: empty
97: £temporary3686 = -1
98: empty
99: parameter £temporary3686, offset 8
100: call function noellipse-ellipse printf, extra 0
101: post call
102: call header
103: parameter s, offset 6
104: parameter 108, offset 8
105: call function noellipse-noellipse strrchr
106: post call
107: £temporary3688 = return_value
108: p = £temporary3688
109: call header
110: parameter string_strrchr28s2C2027l2729203D2025i0A#, offset 6
111: if p != 0 goto 113
112: goto 117
113: empty
114: £temporary3690 = p - s
115: £temporary3694 = £temporary3690
116: goto 119
117: empty
118: £temporary3694 = -1
119: empty
120: parameter £temporary3694, offset 8
121: call function noellipse-ellipse printf, extra 0
122: post call
123: call header
124: parameter s, offset 6
125: parameter 120, offset 8
126: call function noellipse-noellipse strchr
127: post call
128: £temporary3696 = return_value
129: p = £temporary3696
130: call header
131: parameter string_strchr28s2C2027x2729203D2025i0A#, offset 6
132: if p != 0 goto 134
133: goto 138
134: empty
135: £temporary3698 = p - s
136: £temporary3702 = £temporary3698
137: goto 140
138: empty
139: £temporary3702 = -1
140: empty
141: parameter £temporary3702, offset 8
142: call function noellipse-ellipse printf, extra 0
143: post call
144: call header
145: parameter s, offset 6
146: parameter 120, offset 8
147: call function noellipse-noellipse strrchr
148: post call
149: £temporary3704 = return_value
150: p = £temporary3704
151: call header
152: parameter string_strrchr28s2C2027x2729203D2025i0A#, offset 6
153: if p != 0 goto 155
154: goto 159
155: empty
156: £temporary3706 = p - s
157: £temporary3710 = £temporary3706
158: goto 161
159: empty
160: £temporary3710 = -1
161: empty
162: parameter £temporary3710, offset 8
163: call function noellipse-ellipse printf, extra 0
164: post call
165: call header
166: parameter s, offset 6
167: parameter string_Hello2C20World21#, offset 8
168: parameter 20, offset 10
169: call function noellipse-noellipse memcpy
170: post call
171: call header
172: parameter t, offset 6
173: parameter string_Hello2C20World21#, offset 8
174: parameter 20, offset 10
175: call function noellipse-noellipse memmove
176: post call
177: call header
178: parameter u, offset 6
179: parameter 88, offset 8
180: parameter 20, offset 10
181: call function noellipse-noellipse memset
182: post call
183: £temporary3715 -> u = *u, offset 19
184: £temporary3715 -> u = 0
185: call header
186: parameter string_s203D202225s222C20t203D202225s222C20u203D202225s220A#, offset 6
187: parameter s, offset 8
188: parameter t, offset 10
189: parameter u, offset 12
190: call function noellipse-ellipse printf, extra 0
191: post call
192: call header
193: parameter s, offset 6
194: parameter 108, offset 8
195: parameter 20, offset 10
196: call function noellipse-noellipse memchr
197: post call
198: £temporary3717 = return_value
199: p = £temporary3717
200: call header
201: parameter string_memchr28s2C2027l272C20SIZE202A20sizeof28char2929203D2025i0A#, offset 6
202: if p != 0 goto 204
203: goto 208
204: empty
205: £temporary3719 = p - s
206: £temporary3723 = £temporary3719
207: goto 210
208: empty
209: £temporary3723 = -1
210: empty
211: parameter £temporary3723, offset 8
212: call function noellipse-ellipse printf, extra 0
213: post call
214: call header
215: parameter s, offset 6
216: parameter 120, offset 8
217: parameter 20, offset 10
218: call function noellipse-noellipse memchr
219: post call
220: £temporary3725 = return_value
221: p = £temporary3725
222: call header
223: parameter string_memchr28s2C2027x272C20SIZE202A20sizeof28char2929203D2025i0A#, offset 6
224: if p != 0 goto 226
225: goto 230
226: empty
227: £temporary3727 = p - s
228: £temporary3731 = £temporary3727
229: goto 232
230: empty
231: £temporary3731 = -1
232: empty
233: parameter £temporary3731, offset 8
234: call function noellipse-ellipse printf, extra 0
235: post call
236: call header
237: parameter string_memcmp28s2C20t2C20SIZE202A20sizeof28char2929203D2025i0A#, offset 6
238: call header
239: parameter s, offset 14
240: parameter t, offset 16
241: parameter 20, offset 18
242: call function noellipse-noellipse memcmp
243: post call
244: £temporary3733 = return_value
245: parameter £temporary3733, offset 8
246: call function noellipse-ellipse printf, extra 0
247: post call
248: call header
249: parameter string_strspn28s2C2022Hello2C20C2229203D2025i0A#, offset 6
250: call header
251: parameter s, offset 14
252: parameter string_Hello2C20C#, offset 16
253: call function noellipse-noellipse strspn
254: post call
255: £temporary3735 = return_value
256: parameter £temporary3735, offset 8
257: call function noellipse-ellipse printf, extra 0
258: post call
259: call header
260: parameter string_strcspn28s2C2022Hello2C20C2229203D2025i0A#, offset 6
261: call header
262: parameter s, offset 14
263: parameter string_Hello2C20C#, offset 16
264: call function noellipse-noellipse strcspn
265: post call
266: £temporary3737 = return_value
267: parameter £temporary3737, offset 8
268: call function noellipse-ellipse printf, extra 0
269: post call
270: call header
271: parameter string_strerror28errno29203D202225s220A#, offset 6
272: call header
273: parameter errno, offset 14
274: call function noellipse-noellipse strerror
275: post call
276: £temporary3739 = return_value
277: parameter £temporary3739, offset 8
278: call function noellipse-ellipse printf, extra 0
279: post call
280: call header
281: parameter s, offset 6
282: parameter string_2C#, offset 8
283: call function noellipse-noellipse strtok
284: post call
285: £temporary3741 = return_value
286: p = £temporary3741
287: if p != 0 goto 290
288: goto 303
289: check track map float stack
290: call header
291: parameter string_strtok28s2C20222C2229203D202225s220A#, offset 6
292: parameter p, offset 8
293: call function noellipse-ellipse printf, extra 0
294: post call
295: call header
296: parameter 0, offset 6
297: parameter string_2C#, offset 8
298: call function noellipse-noellipse strtok
299: post call
300: £temporary3744 = return_value
301: p = £temporary3744
302: goto 287
303: empty
304: return
305: function end string_test
0: empty
1: return
2: function end locale_test
0: push float y
1: push 0
2: if y != 0 goto 5
3: goto 11
4: check track map float stack
5: push float x
6: push float y
7: £temporary3837 = x / y
8: return_value = £temporary3837
9: return
10: goto 21
11: p = string_Division20by20Zero2E#
12: call header
13: parameter buffer, offset 6
14: parameter p, offset 8
15: call function noellipse-noellipse longjmp
16: post call
17: push 0
18: return_value = 0
19: return
20: goto 21
21: empty
22: return
23: function end divide
0: call header
1: push float 1.0
2: parameter 1.0, offset 6
3: push float x
4: parameter x, offset 14
5: call function noellipse-noellipse divide
6: post call
7: £temporary3841 = return_value
8: return_value = £temporary3841
9: return
10: empty
11: return
12: function end invers
0: call header
1: parameter buffer, offset 6
2: call function noellipse-noellipse setjmp
3: post call
4: £temporary3844 = return_value
5: p = £temporary3844
6: if p == 0 goto 9
7: goto 23
8: check track map float stack
9: call header
10: parameter string_12E0202F2025f203D2025f0A#, offset 6
11: push float x
12: parameter x, offset 8
13: call header
14: push float x
15: parameter x, offset 22
16: call function noellipse-noellipse invers
17: post call
18: £temporary3846 = return_value
19: parameter £temporary3846, offset 16
20: call function noellipse-ellipse printf, extra 0
21: post call
22: goto 30
23: call header
24: parameter string_p203D203C25s3E203C25u3E0A#, offset 6
25: parameter p, offset 8
26: parameter p, offset 10
27: call function noellipse-ellipse printf, extra 0
28: post call
29: goto 30
30: empty
31: return
32: function end setjmp_test
0: call header
1: push float 3.1415926535897932384626433
2: pop float empty X
3: push float -6.2831853071795864769252866
4: parameter -6.2831853071795864769252866, offset 6
5: call function noellipse-noellipse math_test_1
6: post call
7: call header
8: push float 3.1415926535897932384626433
9: pop float empty X
10: push float -3.1415926535897932384626433
11: parameter -3.1415926535897932384626433, offset 6
12: call function noellipse-noellipse math_test_1
13: post call
14: call header
15: push float 3.1415926535897932384626433
16: pop float empty X
17: push float -3.1415926535897932384626433
18: pop float empty X
19: push float -1.57079632679489661923132165
20: parameter -1.57079632679489661923132165, offset 6
21: call function noellipse-noellipse math_test_1
22: post call
23: call header
24: push float -1
25: parameter -1, offset 6
26: call function noellipse-noellipse math_test_1
27: post call
28: call header
29: push 0
30: parameter 0, offset 6
31: call function noellipse-noellipse math_test_1
32: post call
33: call header
34: push 1
35: parameter 1, offset 6
36: call function noellipse-noellipse math_test_1
37: post call
38: call header
39: push float 3.1415926535897932384626433
40: pop float empty X
41: push float 1.57079632679489661923132165
42: parameter 1.57079632679489661923132165, offset 6
43: call function noellipse-noellipse math_test_1
44: post call
45: call header
46: push float 3.1415926535897932384626433
47: parameter 3.1415926535897932384626433, offset 6
48: call function noellipse-noellipse math_test_1
49: post call
50: call header
51: push float 3.1415926535897932384626433
52: pop float empty X
53: push float 6.2831853071795864769252866
54: parameter 6.2831853071795864769252866, offset 6
55: call function noellipse-noellipse math_test_1
56: post call
57: empty
58: return
59: function end math_test_1x
0: call header
1: parameter string_2020acos2825f29203D2025f2C20errno203D2025i0A#, offset 6
2: push float x
3: parameter x, offset 8
4: call header
5: push float x
6: parameter x, offset 22
7: call function noellipse-noellipse acos
8: post call
9: £temporary3875 = return_value
10: parameter £temporary3875, offset 16
11: parameter errno, offset 24
12: call function noellipse-ellipse printf, extra 0
13: post call
14: errno = 0
15: empty
16: return
17: function end acos_test
0: call header
1: parameter string_2020atan2825f29203D2025f2C20errno203D2025i0A#, offset 6
2: push float x
3: parameter x, offset 8
4: call header
5: push float x
6: parameter x, offset 22
7: call function noellipse-noellipse atan
8: post call
9: £temporary3882 = return_value
10: parameter £temporary3882, offset 16
11: parameter errno, offset 24
12: call function noellipse-ellipse printf, extra 0
13: post call
14: errno = 0
15: empty
16: return
17: function end atan_test
0: call header
1: push float 1.000010
2: parameter 1.000010, offset 6
3: call function noellipse-noellipse math_test_1
4: post call
5: call header
6: push float 1.0
7: parameter 1.0, offset 6
8: call function noellipse-noellipse math_test_1
9: post call
10: call header
11: push float 0.999999
12: parameter 0.999999, offset 6
13: call function noellipse-noellipse math_test_1
14: post call
15: call header
16: push float 0.000010
17: parameter 0.000010, offset 6
18: call function noellipse-noellipse math_test_1
19: post call
20: call header
21: push 0
22: parameter 0, offset 6
23: call function noellipse-noellipse math_test_1
24: post call
25: call header
26: push float -0.000010
27: parameter -0.000010, offset 6
28: call function noellipse-noellipse math_test_1
29: post call
30: call header
31: push float -0.999999
32: parameter -0.999999, offset 6
33: call function noellipse-noellipse math_test_1
34: post call
35: call header
36: push float -1.0
37: parameter -1.0, offset 6
38: call function noellipse-noellipse math_test_1
39: post call
40: call header
41: push float -1.000010
42: parameter -1.000010, offset 6
43: call function noellipse-noellipse math_test_1
44: post call
45: call header
46: push float 3.1415926535897932384626433
47: pop float empty X
48: push float 6.2831853071795864769252866
49: parameter 6.2831853071795864769252866, offset 6
50: call function noellipse-noellipse math_test_1
51: post call
52: call header
53: push float 3.1415926535897932384626433
54: parameter 3.1415926535897932384626433, offset 6
55: call function noellipse-noellipse math_test_1
56: post call
57: call header
58: push float 3.1415926535897932384626433
59: pop float empty X
60: push float 1.57079632679489661923132165
61: parameter 1.57079632679489661923132165, offset 6
62: call function noellipse-noellipse math_test_1
63: post call
64: call header
65: push float 3.1415926535897932384626433
66: pop float empty X
67: push float -3.1415926535897932384626433
68: pop float empty X
69: push float -1.57079632679489661923132165
70: parameter -1.57079632679489661923132165, offset 6
71: call function noellipse-noellipse math_test_1
72: post call
73: call header
74: push float 3.1415926535897932384626433
75: pop float empty X
76: push float -3.1415926535897932384626433
77: parameter -3.1415926535897932384626433, offset 6
78: call function noellipse-noellipse math_test_1
79: post call
80: call header
81: push float 3.1415926535897932384626433
82: pop float empty X
83: push float -6.2831853071795864769252866
84: parameter -6.2831853071795864769252866, offset 6
85: call function noellipse-noellipse math_test_1
86: post call
87: call header
88: push float 1.0
89: parameter 1.0, offset 6
90: push float 2.0
91: parameter 2.0, offset 14
92: call function noellipse-noellipse math_test_2
93: post call
94: call header
95: push float 3.0
96: parameter 3.0, offset 6
97: push float 4.0
98: parameter 4.0, offset 14
99: call function noellipse-noellipse math_test_2
100: post call
101: call header
102: push 0
103: parameter 0, offset 6
104: push float 2.0
105: parameter 2.0, offset 14
106: call function noellipse-noellipse math_test_2
107: post call
108: call header
109: push 0
110: parameter 0, offset 6
111: push float -2.0
112: parameter -2.0, offset 14
113: call function noellipse-noellipse math_test_2
114: post call
115: call header
116: push 1
117: parameter 1, offset 6
118: push float 2.0
119: parameter 2.0, offset 14
120: call function noellipse-noellipse math_test_2
121: post call
122: call header
123: push 1
124: parameter 1, offset 6
125: push float -2.0
126: parameter -2.0, offset 14
127: call function noellipse-noellipse math_test_2
128: post call
129: call header
130: push 0
131: parameter 0, offset 6
132: push 0
133: parameter 0, offset 14
134: call function noellipse-noellipse math_test_2
135: post call
136: call header
137: push float 2
138: parameter 2, offset 6
139: push 0
140: parameter 0, offset 14
141: call function noellipse-noellipse math_test_2
142: post call
143: call header
144: push float -2
145: parameter -2, offset 6
146: push 0
147: parameter 0, offset 14
148: call function noellipse-noellipse math_test_2
149: post call
150: call header
151: push float -1.0
152: parameter -1.0, offset 6
153: push float -1.0
154: parameter -1.0, offset 14
155: call function noellipse-noellipse math_test_2
156: post call
157: call header
158: push float -2.0
159: parameter -2.0, offset 6
160: push float -4.0
161: parameter -4.0, offset 14
162: call function noellipse-noellipse math_test_2
163: post call
164: empty
165: return
166: function end main_math
0: call header
1: parameter string_3C25f3E0A#, offset 6
2: push float x
3: parameter x, offset 8
4: call function noellipse-ellipse printf, extra 0
5: post call
6: call header
7: parameter string_2020sin2825f29203D2025f2C20errno203D2025i0A#, offset 6
8: push float x
9: parameter x, offset 8
10: call header
11: push float x
12: parameter x, offset 22
13: call function noellipse-noellipse sin
14: post call
15: £temporary3953 = return_value
16: parameter £temporary3953, offset 16
17: parameter errno, offset 24
18: call function noellipse-ellipse printf, extra 0
19: post call
20: errno = 0
21: call header
22: parameter string_2020cos2825f29203D2025f2C20errno203D2025i0A#, offset 6
23: push float x
24: parameter x, offset 8
25: call header
26: push float x
27: parameter x, offset 22
28: call function noellipse-noellipse cos
29: post call
30: £temporary3955 = return_value
31: parameter £temporary3955, offset 16
32: parameter errno, offset 24
33: call function noellipse-ellipse printf, extra 0
34: post call
35: errno = 0
36: call header
37: parameter string_2020tan2825f29203D2025f2C20errno203D2025i0A#, offset 6
38: push float x
39: parameter x, offset 8
40: call header
41: push float x
42: parameter x, offset 22
43: call function noellipse-noellipse tan
44: post call
45: £temporary3957 = return_value
46: parameter £temporary3957, offset 16
47: parameter errno, offset 24
48: call function noellipse-ellipse printf, extra 0
49: post call
50: errno = 0
51: call header
52: parameter string_2020asin2825f29203D2025f2C20errno203D2025i0A#, offset 6
53: push float x
54: parameter x, offset 8
55: call header
56: push float x
57: parameter x, offset 22
58: call function noellipse-noellipse asin
59: post call
60: £temporary3959 = return_value
61: parameter £temporary3959, offset 16
62: parameter errno, offset 24
63: call function noellipse-ellipse printf, extra 0
64: post call
65: errno = 0
66: call header
67: parameter string_2020acos2825f29203D2025f2C20errno203D2025i0A#, offset 6
68: push float x
69: parameter x, offset 8
70: call header
71: push float x
72: parameter x, offset 22
73: call function noellipse-noellipse acos
74: post call
75: £temporary3961 = return_value
76: parameter £temporary3961, offset 16
77: parameter errno, offset 24
78: call function noellipse-ellipse printf, extra 0
79: post call
80: errno = 0
81: call header
82: parameter string_2020atan2825f29203D2025f2C20errno203D2025i0A#, offset 6
83: push float x
84: parameter x, offset 8
85: call header
86: push float x
87: parameter x, offset 22
88: call function noellipse-noellipse atan
89: post call
90: £temporary3963 = return_value
91: parameter £temporary3963, offset 16
92: parameter errno, offset 24
93: call function noellipse-ellipse printf, extra 0
94: post call
95: errno = 0
96: call header
97: parameter string_2020exp2825f29203D2025f2C20errno203D2025i0A#, offset 6
98: push float x
99: parameter x, offset 8
100: call header
101: push float x
102: parameter x, offset 22
103: call function noellipse-noellipse exp
104: post call
105: £temporary3965 = return_value
106: parameter £temporary3965, offset 16
107: parameter errno, offset 24
108: call function noellipse-ellipse printf, extra 0
109: post call
110: errno = 0
111: call header
112: parameter string_2020log2825f29203D2025f2C20errno203D2025i0A#, offset 6
113: push float x
114: parameter x, offset 8
115: call header
116: push float x
117: parameter x, offset 22
118: call function noellipse-noellipse log
119: post call
120: £temporary3967 = return_value
121: parameter £temporary3967, offset 16
122: parameter errno, offset 24
123: call function noellipse-ellipse printf, extra 0
124: post call
125: errno = 0
126: call header
127: parameter string_2020log102825f29203D2025f2C20errno203D2025i0A#, offset 6
128: push float x
129: parameter x, offset 8
130: call header
131: push float x
132: parameter x, offset 22
133: call function noellipse-noellipse log10
134: post call
135: £temporary3969 = return_value
136: parameter £temporary3969, offset 16
137: parameter errno, offset 24
138: call function noellipse-ellipse printf, extra 0
139: post call
140: errno = 0
141: call header
142: parameter string_2020sinh2825f29203D2025f2C20errno203D2025i0A#, offset 6
143: push float x
144: parameter x, offset 8
145: call header
146: push float x
147: parameter x, offset 22
148: call function noellipse-noellipse sinh
149: post call
150: £temporary3971 = return_value
151: parameter £temporary3971, offset 16
152: parameter errno, offset 24
153: call function noellipse-ellipse printf, extra 0
154: post call
155: errno = 0
156: call header
157: parameter string_2020cosh2825f29203D2025f2C20errno203D2025i0A#, offset 6
158: push float x
159: parameter x, offset 8
160: call header
161: push float x
162: parameter x, offset 22
163: call function noellipse-noellipse cosh
164: post call
165: £temporary3973 = return_value
166: parameter £temporary3973, offset 16
167: parameter errno, offset 24
168: call function noellipse-ellipse printf, extra 0
169: post call
170: errno = 0
171: call header
172: parameter string_2020tanh2825f29203D2025f2C20errno203D2025i0A#, offset 6
173: push float x
174: parameter x, offset 8
175: call header
176: push float x
177: parameter x, offset 22
178: call function noellipse-noellipse tanh
179: post call
180: £temporary3975 = return_value
181: parameter £temporary3975, offset 16
182: parameter errno, offset 24
183: call function noellipse-ellipse printf, extra 0
184: post call
185: errno = 0
186: call header
187: parameter string_2020sqrt2825f29203D2025f2C20errno203D2025i0A#, offset 6
188: push float x
189: parameter x, offset 8
190: call header
191: push float x
192: parameter x, offset 22
193: call function noellipse-noellipse sqrt
194: post call
195: £temporary3977 = return_value
196: parameter £temporary3977, offset 16
197: parameter errno, offset 24
198: call function noellipse-ellipse printf, extra 0
199: post call
200: errno = 0
201: call header
202: parameter string_2020floor2825f29203D2025f2C20errno203D2025i0A#, offset 6
203: push float x
204: parameter x, offset 8
205: call header
206: push float x
207: parameter x, offset 22
208: call function noellipse-noellipse floor
209: post call
210: £temporary3979 = return_value
211: parameter £temporary3979, offset 16
212: parameter errno, offset 24
213: call function noellipse-ellipse printf, extra 0
214: post call
215: errno = 0
216: call header
217: parameter string_2020ceil2825f29203D2025f2C20errno203D2025i0A#, offset 6
218: push float x
219: parameter x, offset 8
220: call header
221: push float x
222: parameter x, offset 22
223: call function noellipse-noellipse ceil
224: post call
225: £temporary3981 = return_value
226: parameter £temporary3981, offset 16
227: parameter errno, offset 24
228: call function noellipse-ellipse printf, extra 0
229: post call
230: errno = 0
231: call header
232: parameter string_2020fabs2825f29203D2025f2C20errno203D2025i0A#, offset 6
233: push float x
234: parameter x, offset 8
235: call header
236: push float x
237: parameter x, offset 22
238: call function noellipse-noellipse fabs
239: post call
240: £temporary3983 = return_value
241: parameter £temporary3983, offset 16
242: parameter errno, offset 24
243: call function noellipse-ellipse printf, extra 0
244: post call
245: errno = 0
246: j = 0
247: call header
248: push float x
249: parameter x, offset 6
250: £temporary3985 = &j
251: parameter £temporary3985, offset 14
252: call function noellipse-noellipse frexp
253: post call
254: £temporary3986 = return_value
255: pop float z
256: call header
257: parameter string_frexp2028z2C20j29203D202825f2C2025i292C20errno203D2025i0A#, offset 6
258: push float z
259: parameter z, offset 8
260: parameter j, offset 16
261: parameter errno, offset 18
262: call function noellipse-ellipse printf, extra 0
263: post call
264: if errno != 0 goto 267
265: goto 273
266: check track map float stack
267: call header
268: parameter string_Error20message3A#, offset 6
269: call function noellipse-noellipse perror
270: post call
271: errno = 0
272: goto 273
273: push 0
274: pop float w
275: call header
276: push float x
277: parameter x, offset 6
278: push float w
279: pop float empty X
280: £temporary3990 = &w
281: parameter £temporary3990, offset 14
282: call function noellipse-noellipse modf
283: post call
284: £temporary3991 = return_value
285: pop float z
286: call header
287: parameter string_modf2028z2C20w29203D202825f2C2025f292C20errno203D2025i0A#, offset 6
288: push float z
289: parameter z, offset 8
290: push float w
291: parameter w, offset 16
292: parameter errno, offset 24
293: call function noellipse-ellipse printf, extra 0
294: post call
295: if errno != 0 goto 298
296: goto 304
297: check track map float stack
298: call header
299: parameter string_Error20message3A#, offset 6
300: call function noellipse-noellipse perror
301: post call
302: errno = 0
303: goto 304
304: call header
305: parameter string_0A#, offset 6
306: call function noellipse-ellipse printf, extra 0
307: post call
308: empty
309: return
310: function end math_test_1
0: call header
1: parameter string_fmod2825f2C2025f29203D2025f2C20errno203D2025i0A#, offset 6
2: push float x
3: parameter x, offset 8
4: push float y
5: parameter y, offset 16
6: call header
7: push float x
8: parameter x, offset 30
9: push float y
10: parameter y, offset 38
11: call function noellipse-noellipse fmod
12: post call
13: £temporary4095 = return_value
14: parameter £temporary4095, offset 24
15: parameter errno, offset 32
16: call function noellipse-ellipse printf, extra 0
17: post call
18: errno = 0
19: call header
20: parameter string_atan22825f2C2025f29203D2025f2C20errno203D2025i0A#, offset 6
21: push float x
22: parameter x, offset 8
23: push float y
24: parameter y, offset 16
25: call header
26: push float x
27: parameter x, offset 30
28: push float y
29: parameter y, offset 38
30: call function noellipse-noellipse atan2
31: post call
32: £temporary4097 = return_value
33: parameter £temporary4097, offset 24
34: parameter errno, offset 32
35: call function noellipse-ellipse printf, extra 0
36: post call
37: errno = 0
38: call header
39: parameter string_pow2825f2C2025f29203D2025f2C20errno203D2025i0A#, offset 6
40: push float x
41: parameter x, offset 8
42: push float y
43: parameter y, offset 16
44: call header
45: push float x
46: parameter x, offset 30
47: push float y
48: parameter y, offset 38
49: call function noellipse-noellipse pow
50: post call
51: £temporary4099 = return_value
52: parameter £temporary4099, offset 24
53: parameter errno, offset 32
54: call function noellipse-ellipse printf, extra 0
55: post call
56: errno = 0
57: call header
58: parameter string_0A#, offset 6
59: call function noellipse-ellipse printf, extra 0
60: post call
61: call header
62: parameter string_ldexp2825f2C2025i29203D2025f0A0A#, offset 6
63: push float x
64: parameter x, offset 8
65: push float y
66: £temporary4102 = float_to_int y (Double -> Signed_Int)
67: parameter £temporary4102, offset 16
68: call header
69: push float x
70: parameter x, offset 24
71: push float y
72: £temporary4103 = float_to_int y (Double -> Signed_Int)
73: parameter £temporary4103, offset 32
74: call function noellipse-noellipse ldexp
75: post call
76: £temporary4104 = return_value
77: parameter £temporary4104, offset 18
78: call function noellipse-ellipse printf, extra 0
79: post call
80: empty
81: return
82: function end math_test_2
0: call header
1: parameter inFilePtrName, offset 6
2: parameter string_r#, offset 8
3: call function noellipse-noellipse fopen
4: post call
5: £temporary4134 = return_value
6: inFilePtrPtr = £temporary4134
7: if inFilePtrPtr != 0 goto 22
8: goto 10
9: check track map float stack
10: call header
11: parameter stderr, offset 6
12: parameter string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#, offset 8
13: parameter string_inFilePtrPtr20213D20NULL#, offset 10
14: parameter string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CFileTest2Ec#, offset 12
15: parameter 10, offset 14
16: call function noellipse-ellipse fprintf, extra 0
17: post call
18: call header
19: call function noellipse-noellipse abort
20: post call
21: goto 22
22: empty
23: call header
24: parameter outFilePtrName, offset 6
25: parameter string_w#, offset 8
26: call function noellipse-noellipse fopen
27: post call
28: £temporary4139 = return_value
29: outFilePtrPtr = £temporary4139
30: if outFilePtrPtr != 0 goto 45
31: goto 33
32: check track map float stack
33: call header
34: parameter stderr, offset 6
35: parameter string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#, offset 8
36: parameter string_outFilePtrPtr20213D20NULL#, offset 10
37: parameter string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CFileTest2Ec#, offset 12
38: parameter 12, offset 14
39: call function noellipse-ellipse fprintf, extra 0
40: post call
41: call header
42: call function noellipse-noellipse abort
43: post call
44: goto 45
45: empty
46: size = 0
47: call header
48: parameter inFilePtrPtr, offset 6
49: parameter string_25i#, offset 8
50: £temporary4144 = &size
51: parameter £temporary4144, offset 10
52: call function noellipse-ellipse fscanf, extra 0
53: post call
54: index = 0
55: empty
56: if index < size goto 59
57: goto 88
58: check track map float stack
59: empty
60: push 0
61: pop float inValue
62: call header
63: parameter inFilePtrPtr, offset 6
64: parameter string_25lf#, offset 8
65: push float inValue
66: pop float empty X
67: £temporary4148 = &inValue
68: parameter £temporary4148, offset 10
69: call function noellipse-ellipse fscanf, extra 0
70: post call
71: call header
72: push float inValue
73: parameter £temporary4150, offset 6
74: call function noellipse-noellipse sqrt
75: post call
76: £temporary4151 = return_value
77: pop float outValue
78: call header
79: parameter outFilePtrPtr, offset 6
80: parameter string_25f0A#, offset 8
81: push float outValue
82: parameter outValue, offset 10
83: call function noellipse-ellipse fprintf, extra 0
84: post call
85: empty
86: index = index + 1
87: goto 55
88: call header
89: parameter inFilePtrPtr, offset 6
90: call function noellipse-noellipse fclose
91: post call
92: call header
93: parameter outFilePtrPtr, offset 6
94: call function noellipse-noellipse fclose
95: post call
96: sourceFilePtr = string_X#
97: targetFilePtr = string_Y#
98: call header
99: parameter sourceFilePtr, offset 6
100: parameter targetFilePtr, offset 8
101: call function noellipse-noellipse rename
102: post call
103: £temporary4155 = return_value
104: if £temporary4155 == 0 goto 107
105: goto 114
106: check track map float stack
107: call header
108: parameter string_2225s2220has20been20renamed20to202225s222E0A#, offset 6
109: parameter sourceFilePtr, offset 8
110: parameter targetFilePtr, offset 10
111: call function noellipse-ellipse printf, extra 0
112: post call
113: goto 126
114: call header
115: parameter string_Error2025i3A2025s2E0A#, offset 6
116: parameter errno, offset 8
117: call header
118: parameter errno, offset 16
119: call function noellipse-noellipse strerror
120: post call
121: £temporary4158 = return_value
122: parameter £temporary4158, offset 10
123: call function noellipse-ellipse printf, extra 0
124: post call
125: goto 126
126: targetFilePtr = string_Z#
127: call header
128: parameter targetFilePtr, offset 6
129: call function noellipse-noellipse remove
130: post call
131: £temporary4160 = return_value
132: if £temporary4160 == 0 goto 135
133: goto 141
134: check track map float stack
135: call header
136: parameter string_2225s2220has20been20removed2E0A#, offset 6
137: parameter targetFilePtr, offset 8
138: call function noellipse-ellipse printf, extra 0
139: post call
140: goto 153
141: call header
142: parameter string_Error2025i3A2025s2E0A#, offset 6
143: parameter errno, offset 8
144: call header
145: parameter errno, offset 16
146: call function noellipse-noellipse strerror
147: post call
148: £temporary4163 = return_value
149: parameter £temporary4163, offset 10
150: call function noellipse-ellipse printf, extra 0
151: post call
152: goto 153
153: call header
154: parameter string_PBook2Etxt#, offset 6
155: parameter string_r#, offset 8
156: call function noellipse-noellipse fopen
157: post call
158: £temporary4165 = return_value
159: inFilePtr = £temporary4165
160: if inFilePtr != 0 goto 175
161: goto 163
162: check track map float stack
163: call header
164: parameter stderr, offset 6
165: parameter string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#, offset 8
166: parameter string_inFilePtr20213D20NULL#, offset 10
167: parameter string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CFileTest2Ec#, offset 12
168: parameter 50, offset 14
169: call function noellipse-ellipse fprintf, extra 0
170: post call
171: call header
172: call function noellipse-noellipse abort
173: post call
174: goto 175
175: empty
176: call header
177: parameter string_0A252D24s20252D24s0A#, offset 6
178: parameter string_Name#, offset 8
179: parameter string_Phone#, offset 10
180: call function noellipse-ellipse printf, extra 0
181: post call
182: call header
183: parameter string_252D24s20252D24s0A#, offset 6
184: parameter string_3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D#, offset 8
185: parameter string_3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D#, offset 10
186: call function noellipse-ellipse printf, extra 0
187: post call
188: call header
189: parameter inFilePtr, offset 6
190: parameter string_25i#, offset 8
191: £temporary4172 = &size
192: parameter £temporary4172, offset 10
193: call function noellipse-ellipse fscanf, extra 0
194: post call
195: count = 0
196: empty
197: if count < size goto 200
198: goto 217
199: check track map float stack
200: empty
201: call header
202: parameter inFilePtr, offset 6
203: parameter string_25s25s#, offset 8
204: parameter name, offset 10
205: parameter phone, offset 12
206: call function noellipse-ellipse fscanf, extra 0
207: post call
208: call header
209: parameter string_252D24s20252D24s0A#, offset 6
210: parameter name, offset 8
211: parameter phone, offset 10
212: call function noellipse-ellipse printf, extra 0
213: post call
214: empty
215: count = count + 1
216: goto 196
217: call header
218: parameter string_0A#, offset 6
219: call function noellipse-ellipse printf, extra 0
220: post call
221: call header
222: parameter inFilePtr, offset 6
223: call function noellipse-noellipse fclose
224: post call
225: sourceFilePtr = string_Flow12Etxt#
226: targetFilePtr = string_Flow22Etxt#
227: call header
228: parameter sourceFilePtr, offset 6
229: parameter string_r#, offset 8
230: call function noellipse-noellipse fopen
231: post call
232: £temporary4180 = return_value
233: inFilePtr = £temporary4180
234: if inFilePtr != 0 goto 249
235: goto 237
236: check track map float stack
237: call header
238: parameter stderr, offset 6
239: parameter string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#, offset 8
240: parameter string_inFilePtr20213D20NULL#, offset 10
241: parameter string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CFileTest2Ec#, offset 12
242: parameter 76, offset 14
243: call function noellipse-ellipse fprintf, extra 0
244: post call
245: call header
246: call function noellipse-noellipse abort
247: post call
248: goto 249
249: empty
250: call header
251: parameter targetFilePtr, offset 6
252: parameter string_w#, offset 8
253: call function noellipse-noellipse fopen
254: post call
255: £temporary4185 = return_value
256: outFilePtr = £temporary4185
257: if outFilePtr != 0 goto 272
258: goto 260
259: check track map float stack
260: call header
261: parameter stderr, offset 6
262: parameter string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#, offset 8
263: parameter string_outFilePtr20213D20NULL#, offset 10
264: parameter string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CFileTest2Ec#, offset 12
265: parameter 79, offset 14
266: call function noellipse-ellipse fprintf, extra 0
267: post call
268: call header
269: call function noellipse-noellipse abort
270: post call
271: goto 272
272: empty
273: goto 275
274: check track map float stack
275: call header
276: parameter inFilePtr, offset 6
277: call function noellipse-noellipse fgetc
278: post call
279: £temporary4190 = return_value
280: £temporary4191 = int_to_int £temporary4190 (Signed_Int -> Signed_Char)
281: c = £temporary4191
282: £temporary4192 = int_to_int c (Signed_Char -> Signed_Int)
283: if £temporary4192 == -1 goto 286
284: goto 288
285: check track map float stack
286: goto 304
287: goto 288
288: call header
289: £temporary4194 = int_to_int c (Signed_Char -> Signed_Int)
290: parameter £temporary4194, offset 6
291: parameter outFilePtr, offset 8
292: call function noellipse-noellipse putc
293: post call
294: if c == 10 goto 297
295: goto 273
296: check track map float stack
297: call header
298: parameter 10, offset 6
299: parameter outFilePtr, offset 8
300: call function noellipse-noellipse putc
301: post call
302: goto 273
303: goto 273
304: call header
305: parameter inFilePtr, offset 6
306: call function noellipse-noellipse fclose
307: post call
308: call header
309: parameter outFilePtr, offset 6
310: call function noellipse-noellipse fclose
311: post call
312: call header
313: parameter string_Test2Ebin#, offset 6
314: parameter string_w#, offset 8
315: call function noellipse-noellipse fopen
316: post call
317: £temporary4201 = return_value
318: outFilePtr = £temporary4201
319: if outFilePtr != 0 goto 334
320: goto 322
321: check track map float stack
322: call header
323: parameter stderr, offset 6
324: parameter string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#, offset 8
325: parameter string_outFilePtr20213D20NULL#, offset 10
326: parameter string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CFileTest2Ec#, offset 12
327: parameter 100, offset 14
328: call function noellipse-ellipse fprintf, extra 0
329: post call
330: call header
331: call function noellipse-noellipse abort
332: post call
333: goto 334
334: empty
335: size = 10
336: call header
337: £temporary4206 = &size
338: parameter £temporary4206, offset 6
339: parameter 2, offset 8
340: parameter 1, offset 10
341: parameter outFilePtr, offset 12
342: call function noellipse-noellipse fwrite
343: post call
344: index = 0
345: empty
346: if index < size goto 349
347: goto 366
348: check track map float stack
349: empty
350: £temporary4210 = index * index
351: £temporary4211 = int_to_float £temporary4210 (Signed_Int -> Double)
352: pop float value
353: call header
354: push float value
355: pop float empty X
356: £temporary4212 = &value
357: parameter £temporary4212, offset 6
358: parameter 8, offset 8
359: parameter 1, offset 10
360: parameter outFilePtr, offset 12
361: call function noellipse-noellipse fwrite
362: post call
363: empty
364: index = index + 1
365: goto 345
366: call header
367: parameter outFilePtr, offset 6
368: call function noellipse-noellipse fclose
369: post call
370: call header
371: parameter string_Test2Ebin#, offset 6
372: parameter string_r#, offset 8
373: call function noellipse-noellipse fopen
374: post call
375: £temporary4215 = return_value
376: inFilePtr = £temporary4215
377: if inFilePtr != 0 goto 392
378: goto 380
379: check track map float stack
380: call header
381: parameter stderr, offset 6
382: parameter string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#, offset 8
383: parameter string_inFilePtr20213D20NULL#, offset 10
384: parameter string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CFileTest2Ec#, offset 12
385: parameter 115, offset 14
386: call function noellipse-ellipse fprintf, extra 0
387: post call
388: call header
389: call function noellipse-noellipse abort
390: post call
391: goto 392
392: empty
393: call header
394: £temporary4220 = &size
395: parameter £temporary4220, offset 6
396: parameter 2, offset 8
397: parameter 1, offset 10
398: parameter inFilePtr, offset 12
399: call function noellipse-noellipse fread
400: post call
401: call header
402: parameter string_size12025i0A#, offset 6
403: parameter size, offset 8
404: call function noellipse-ellipse printf, extra 0
405: post call
406: call header
407: £temporary4223 = &arr
408: parameter £temporary4223, offset 6
409: parameter 80, offset 8
410: parameter 1, offset 10
411: parameter inFilePtr, offset 12
412: call function noellipse-noellipse fread
413: post call
414: call header
415: parameter inFilePtr, offset 6
416: call function noellipse-noellipse fclose
417: post call
418: index = 0
419: empty
420: if index < 10 goto 423
421: goto 437
422: check track map float stack
423: empty
424: call header
425: parameter string_index12025i3A20value2025f0A#, offset 6
426: parameter index, offset 8
427: £temporary4229 = index * 8
428: £temporary4230 = arr + £temporary4229
429: £temporary4228 -> £temporary4230 = *£temporary4230
430: push float £temporary4228 -> £temporary4230
431: parameter £temporary4228 -> £temporary4230, offset 10
432: call function noellipse-ellipse printf, extra 0
433: post call
434: empty
435: index = index + 1
436: goto 419
437: call header
438: parameter string_0A#, offset 6
439: call function noellipse-ellipse printf, extra 0
440: post call
441: call header
442: parameter string_Test2Ebin#, offset 6
443: parameter string_r#, offset 8
444: call function noellipse-noellipse fopen
445: post call
446: £temporary4233 = return_value
447: inFilePtr = £temporary4233
448: if inFilePtr != 0 goto 463
449: goto 451
450: check track map float stack
451: call header
452: parameter stderr, offset 6
453: parameter string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#, offset 8
454: parameter string_inFilePtr20213D20NULL#, offset 10
455: parameter string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CFileTest2Ec#, offset 12
456: parameter 133, offset 14
457: call function noellipse-ellipse fprintf, extra 0
458: post call
459: call header
460: call function noellipse-noellipse abort
461: post call
462: goto 463
463: empty
464: call header
465: £temporary4238 = &size
466: parameter £temporary4238, offset 6
467: parameter 2, offset 8
468: parameter 1, offset 10
469: parameter inFilePtr, offset 12
470: call function noellipse-noellipse fread
471: post call
472: call header
473: parameter string_size22025i0A#, offset 6
474: parameter size, offset 8
475: call function noellipse-ellipse printf, extra 0
476: post call
477: index = 0
478: empty
479: if index < size goto 482
480: goto 503
481: check track map float stack
482: empty
483: call header
484: push float value
485: pop float empty X
486: £temporary4243 = &value
487: parameter £temporary4243, offset 6
488: parameter 8, offset 8
489: parameter 1, offset 10
490: parameter inFilePtr, offset 12
491: call function noellipse-noellipse fread
492: post call
493: call header
494: parameter string_index22025i3A20value2025f0A#, offset 6
495: parameter index, offset 8
496: push float value
497: parameter value, offset 10
498: call function noellipse-ellipse printf, extra 0
499: post call
500: empty
501: index = index + 1
502: goto 478
503: call header
504: parameter string_0A#, offset 6
505: call function noellipse-ellipse printf, extra 0
506: post call
507: call header
508: parameter inFilePtr, offset 6
509: call function noellipse-noellipse fclose
510: post call
511: call header
512: parameter string_Test2Ebin#, offset 6
513: parameter string_r#, offset 8
514: call function noellipse-noellipse fopen
515: post call
516: £temporary4248 = return_value
517: inFilePtr = £temporary4248
518: if inFilePtr != 0 goto 533
519: goto 521
520: check track map float stack
521: call header
522: parameter stderr, offset 6
523: parameter string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#, offset 8
524: parameter string_inFilePtr20213D20NULL#, offset 10
525: parameter string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CFileTest2Ec#, offset 12
526: parameter 151, offset 14
527: call function noellipse-ellipse fprintf, extra 0
528: post call
529: call header
530: call function noellipse-noellipse abort
531: post call
532: goto 533
533: empty
534: call header
535: £temporary4253 = &size
536: parameter £temporary4253, offset 6
537: parameter 2, offset 8
538: parameter 1, offset 10
539: parameter inFilePtr, offset 12
540: call function noellipse-noellipse fread
541: post call
542: call header
543: parameter string_size32025i20total2025i0A#, offset 6
544: parameter size, offset 8
545: £temporary4255 = size * 8
546: parameter £temporary4255, offset 10
547: call function noellipse-ellipse printf, extra 0
548: post call
549: £temporary4257 = size * 8
550: total = £temporary4257
551: call header
552: parameter total, offset 6
553: call function noellipse-noellipse malloc
554: post call
555: £temporary4258 = return_value
556: p = £temporary4258
557: if p != 0 goto 572
558: goto 560
559: check track map float stack
560: call header
561: parameter stderr, offset 6
562: parameter string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#, offset 8
563: parameter string_p20213D20NULL#, offset 10
564: parameter string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CFileTest2Ec#, offset 12
565: parameter 159, offset 14
566: call function noellipse-ellipse fprintf, extra 0
567: post call
568: call header
569: call function noellipse-noellipse abort
570: post call
571: goto 572
572: empty
573: £temporary4263 = size * 8
574: £temporary4264 = p + £temporary4263
575: endPtr = £temporary4264
576: call header
577: parameter string_malloc2025u2025u2025u0A#, offset 6
578: parameter p, offset 8
579: parameter total, offset 10
580: parameter endPtr, offset 12
581: call function noellipse-ellipse printf, extra 0
582: post call
583: call header
584: parameter p, offset 6
585: parameter total, offset 8
586: parameter 1, offset 10
587: parameter inFilePtr, offset 12
588: call function noellipse-noellipse fread
589: post call
590: index = 0
591: empty
592: if index < size goto 595
593: goto 609
594: check track map float stack
595: empty
596: call header
597: parameter string_index32025i3A20value2025f0A#, offset 6
598: parameter index, offset 8
599: £temporary4270 = index * 8
600: £temporary4271 = p + £temporary4270
601: £temporary4269 -> £temporary4271 = *£temporary4271
602: push float £temporary4269 -> £temporary4271
603: parameter £temporary4269 -> £temporary4271, offset 10
604: call function noellipse-ellipse printf, extra 0
605: post call
606: empty
607: index = index + 1
608: goto 591
609: call header
610: parameter string_0A#, offset 6
611: call function noellipse-ellipse printf, extra 0
612: post call
613: call header
614: parameter p, offset 6
615: call function noellipse-noellipse free
616: post call
617: call header
618: parameter inFilePtr, offset 6
619: call function noellipse-noellipse fclose
620: post call
621: personVector[0]$name[0] = 65
622: personVector[0]$name[1] = 100
623: personVector[0]$name[2] = 97
624: personVector[0]$name[3] = 109
625: personVector[0]$name[4] = 32
626: personVector[0]$name[5] = 66
627: personVector[0]$name[6] = 101
628: personVector[0]$name[7] = 114
629: personVector[0]$name[8] = 116
630: personVector[0]$name[9] = 105
631: personVector[0]$name[10] = 108
632: personVector[0]$name[11] = 115
633: personVector[0]$name[12] = 115
634: personVector[0]$name[13] = 111
635: personVector[0]$name[14] = 110
636: personVector[0]$name[15] = 0
637: personVector[0]$phone = 12345
638: personVector[1]$name[0] = 66
639: personVector[1]$name[1] = 101
640: personVector[1]$name[2] = 114
641: personVector[1]$name[3] = 116
642: personVector[1]$name[4] = 105
643: personVector[1]$name[5] = 108
644: personVector[1]$name[6] = 32
645: personVector[1]$name[7] = 67
646: personVector[1]$name[8] = 101
647: personVector[1]$name[9] = 97
648: personVector[1]$name[10] = 115
649: personVector[1]$name[11] = 97
650: personVector[1]$name[12] = 114
651: personVector[1]$name[13] = 115
652: personVector[1]$name[14] = 115
653: personVector[1]$name[15] = 111
654: personVector[1]$name[16] = 110
655: personVector[1]$name[17] = 0
656: personVector[1]$phone = 23456
657: personVector[2]$name[0] = 67
658: personVector[2]$name[1] = 101
659: personVector[2]$name[2] = 97
660: personVector[2]$name[3] = 115
661: personVector[2]$name[4] = 97
662: personVector[2]$name[5] = 114
663: personVector[2]$name[6] = 32
664: personVector[2]$name[7] = 68
665: personVector[2]$name[8] = 97
666: personVector[2]$name[9] = 118
667: personVector[2]$name[10] = 105
668: personVector[2]$name[11] = 100
669: personVector[2]$name[12] = 115
670: personVector[2]$name[13] = 115
671: personVector[2]$name[14] = 111
672: personVector[2]$name[15] = 110
673: personVector[2]$name[16] = 0
674: personVector[2]$phone = 24567
675: call header
676: parameter string_Block2Ebin#, offset 6
677: parameter string_w#, offset 8
678: call function noellipse-noellipse fopen
679: post call
680: £temporary4336 = return_value
681: outFilePtr = £temporary4336
682: if outFilePtr != 0 goto 697
683: goto 685
684: check track map float stack
685: call header
686: parameter stderr, offset 6
687: parameter string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#, offset 8
688: parameter string_outFilePtr20213D20NULL#, offset 10
689: parameter string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CFileTest2Ec#, offset 12
690: parameter 185, offset 14
691: call function noellipse-ellipse fprintf, extra 0
692: post call
693: call header
694: call function noellipse-noellipse abort
695: post call
696: goto 697
697: empty
698: call header
699: parameter personVector, offset 6
700: parameter 150, offset 8
701: parameter 1, offset 10
702: parameter outFilePtr, offset 12
703: call function noellipse-noellipse fwrite
704: post call
705: call header
706: parameter outFilePtr, offset 6
707: call function noellipse-noellipse fclose
708: post call
709: call header
710: parameter string_Block2Ebin#, offset 6
711: parameter string_r#, offset 8
712: call function noellipse-noellipse fopen
713: post call
714: £temporary4343 = return_value
715: inFilePtr = £temporary4343
716: if inFilePtr != 0 goto 731
717: goto 719
718: check track map float stack
719: call header
720: parameter stderr, offset 6
721: parameter string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#, offset 8
722: parameter string_inFilePtr20213D20NULL#, offset 10
723: parameter string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CFileTest2Ec#, offset 12
724: parameter 191, offset 14
725: call function noellipse-ellipse fprintf, extra 0
726: post call
727: call header
728: call function noellipse-noellipse abort
729: post call
730: goto 731
731: empty
732: call header
733: parameter inFilePtr, offset 6
734: call function noellipse-noellipse feof
735: post call
736: £temporary4348 = return_value
737: if £temporary4348 != 0 goto 759
738: goto 740
739: check track map float stack
740: call header
741: £temporary4351 = &person
742: parameter £temporary4351, offset 6
743: parameter 50, offset 8
744: parameter 1, offset 10
745: parameter inFilePtr, offset 12
746: call function noellipse-noellipse fread
747: post call
748: call header
749: parameter string_Name20203A2025s0A#, offset 6
750: parameter person$name, offset 8
751: call function noellipse-ellipse printf, extra 0
752: post call
753: call header
754: parameter string_Phone203A2025d0A#, offset 6
755: parameter person$phone, offset 8
756: call function noellipse-ellipse printf, extra 0
757: post call
758: goto 732
759: call header
760: parameter inFilePtr, offset 6
761: call function noellipse-noellipse fclose
762: post call
763: call header
764: parameter string_Test12Etxt#, offset 6
765: parameter string_r#, offset 8
766: call function noellipse-noellipse fopen
767: post call
768: £temporary4358 = return_value
769: inFilePtr = £temporary4358
770: if inFilePtr != 0 goto 785
771: goto 773
772: check track map float stack
773: call header
774: parameter stderr, offset 6
775: parameter string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#, offset 8
776: parameter string_inFilePtr20213D20NULL#, offset 10
777: parameter string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CFileTest2Ec#, offset 12
778: parameter 204, offset 14
779: call function noellipse-ellipse fprintf, extra 0
780: post call
781: call header
782: call function noellipse-noellipse abort
783: post call
784: goto 785
785: empty
786: call header
787: parameter inFilePtr, offset 6
788: parameter -1, offset 8
789: parameter 2, offset 10
790: call function noellipse-noellipse fseek
791: post call
792: call header
793: parameter inFilePtr, offset 6
794: call function noellipse-noellipse ftell
795: post call
796: £temporary4364 = return_value
797: £temporary4365 = int_to_int £temporary4364 (Signed_Int -> Unsigned_Int)
798: u = £temporary4365
799: if u >= 0 goto 802
800: goto 826
801: check track map float stack
802: call header
803: parameter inFilePtr, offset 6
804: call function noellipse-noellipse fgetc
805: post call
806: £temporary4367 = return_value
807: £temporary4368 = int_to_int £temporary4367 (Signed_Int -> Signed_Char)
808: c = £temporary4368
809: call header
810: £temporary4369 = int_to_int c (Signed_Char -> Signed_Int)
811: parameter £temporary4369, offset 6
812: call function noellipse-noellipse putchar
813: post call
814: if u == 0 goto 817
815: goto 819
816: check track map float stack
817: goto 826
818: goto 819
819: call header
820: parameter inFilePtr, offset 6
821: parameter -2, offset 8
822: parameter 1, offset 10
823: call function noellipse-noellipse fseek
824: post call
825: goto 792
826: call header
827: parameter string_0A0A#, offset 6
828: call function noellipse-ellipse printf, extra 0
829: post call
830: call header
831: parameter inFilePtr, offset 6
832: call function noellipse-noellipse fclose
833: post call
834: call header
835: parameter string_fileexists20X2025s0A#, offset 6
836: call header
837: parameter string_X#, offset 14
838: call function noellipse-noellipse fileexists
839: post call
840: £temporary4375 = return_value
841: if £temporary4375 != 0 goto 843
842: goto 846
843: empty
844: £temporary4380 = string_Yes#
845: goto 848
846: empty
847: £temporary4380 = string_No#
848: empty
849: parameter £temporary4380, offset 8
850: call function noellipse-ellipse printf, extra 0
851: post call
852: call header
853: parameter string_fileexists20Y2025s0A0A#, offset 6
854: call header
855: parameter string_Y#, offset 14
856: call function noellipse-noellipse fileexists
857: post call
858: £temporary4382 = return_value
859: if £temporary4382 != 0 goto 861
860: goto 864
861: empty
862: £temporary4387 = string_Yes#
863: goto 866
864: empty
865: £temporary4387 = string_No#
866: empty
867: parameter £temporary4387, offset 8
868: call function noellipse-ellipse printf, extra 0
869: post call
870: call header
871: parameter string_PBookX2Etxt#, offset 6
872: parameter string_r2B#, offset 8
873: call function noellipse-noellipse fopen
874: post call
875: £temporary4389 = return_value
876: inOutFilePtr = £temporary4389
877: if inOutFilePtr != 0 goto 892
878: goto 880
879: check track map float stack
880: call header
881: parameter stderr, offset 6
882: parameter string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#, offset 8
883: parameter string_inOutFilePtr20213D20NULL#, offset 10
884: parameter string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CFileTest2Ec#, offset 12
885: parameter 228, offset 14
886: call function noellipse-ellipse fprintf, extra 0
887: post call
888: call header
889: call function noellipse-noellipse abort
890: post call
891: goto 892
892: empty
893: call header
894: call function noellipse-noellipse tmpfile
895: post call
896: £temporary4394 = return_value
897: tempFilePtr = £temporary4394
898: if tempFilePtr != 0 goto 913
899: goto 901
900: check track map float stack
901: call header
902: parameter stderr, offset 6
903: parameter string_Assertion20failed3A202225s2220in20file2025s20at20line2025i0A#, offset 8
904: parameter string_tempFilePtr20213D20NULL#, offset 10
905: parameter string_C3A5CUsers5CStefan5CDocuments5Cvagrant5Chomestead5Ccode5Ccode5CFileTest2Ec#, offset 12
906: parameter 231, offset 14
907: call function noellipse-ellipse fprintf, extra 0
908: post call
909: call header
910: call function noellipse-noellipse abort
911: post call
912: goto 913
913: empty
914: goto 916
915: check track map float stack
916: call header
917: parameter inOutFilePtr, offset 6
918: call function noellipse-noellipse fgetc
919: post call
920: £temporary4399 = return_value
921: £temporary4400 = int_to_int £temporary4399 (Signed_Int -> Signed_Char)
922: c = £temporary4400
923: £temporary4401 = int_to_int c (Signed_Char -> Signed_Int)
924: if £temporary4401 == -1 goto 927
925: goto 929
926: check track map float stack
927: goto 941
928: goto 929
929: call header
930: call header
931: £temporary4403 = int_to_int c (Signed_Char -> Signed_Int)
932: parameter £temporary4403, offset 6
933: call function noellipse-noellipse toupper
934: post call
935: £temporary4404 = return_value
936: parameter £temporary4404, offset 6
937: parameter tempFilePtr, offset 8
938: call function noellipse-noellipse putc
939: post call
940: goto 914
941: call header
942: parameter tempFilePtr, offset 6
943: call function noellipse-noellipse rewind
944: post call
945: call header
946: parameter inOutFilePtr, offset 6
947: parameter string_0A2D2D2D2D2D2D2D2D2D2D2D2D0A#, offset 8
948: call function noellipse-ellipse fprintf, extra 0
949: post call
950: goto 952
951: check track map float stack
952: call header
953: parameter tempFilePtr, offset 6
954: call function noellipse-noellipse fgetc
955: post call
956: £temporary4409 = return_value
957: £temporary4410 = int_to_int £temporary4409 (Signed_Int -> Signed_Char)
958: c = £temporary4410
959: £temporary4411 = int_to_int c (Signed_Char -> Signed_Int)
960: if £temporary4411 == -1 goto 963
961: goto 965
962: check track map float stack
963: goto 972
964: goto 965
965: call header
966: £temporary4413 = int_to_int c (Signed_Char -> Signed_Int)
967: parameter £temporary4413, offset 6
968: parameter inOutFilePtr, offset 8
969: call function noellipse-noellipse putc
970: post call
971: goto 950
972: call header
973: parameter inOutFilePtr, offset 6
974: call function noellipse-noellipse fclose
975: post call
976: call header
977: parameter tempFilePtr, offset 6
978: call function noellipse-noellipse fclose
979: post call
980: empty
981: return
982: function end file_test
0: n = 0
1: £temporary4688 = &n
2: p = £temporary4688
3: call header
4: parameter string_3C25i3E203C25i3E203C25li3E203C25li3E203C25u3E203C25lu3E0A0A#, offset 6
5: parameter 123, offset 8
6: parameter -123, offset 10
7: parameter 123, offset 12
8: parameter -123, offset 16
9: parameter 123, offset 20
10: parameter 123, offset 22
11: call function noellipse-ellipse printf, extra 0
12: post call
13: call header
14: parameter string_3C256i3E203C256i3E203C256li3E203C256li3E203C256u3E203C256lu3E0A#, offset 6
15: parameter 123, offset 8
16: parameter -123, offset 10
17: parameter 123, offset 12
18: parameter -123, offset 16
19: parameter 123, offset 20
20: parameter 123, offset 22
21: call function noellipse-ellipse printf, extra 0
22: post call
23: call header
24: parameter string_3C252B6i3E203C252B6i3E203C252B6li3E203C252B6li3E203C252B6u3E203C252B6lu3E0A#, offset 6
25: parameter 123, offset 8
26: parameter -123, offset 10
27: parameter 123, offset 12
28: parameter -123, offset 16
29: parameter 123, offset 20
30: parameter 123, offset 22
31: call function noellipse-ellipse printf, extra 0
32: post call
33: call header
34: parameter string_3C252D6i3E203C252D6i3E203C252D6li3E203C252D6li3E203C252D6u3E203C252D6lu3E0A#, offset 6
35: parameter 123, offset 8
36: parameter -123, offset 10
37: parameter 123, offset 12
38: parameter -123, offset 16
39: parameter 123, offset 20
40: parameter 123, offset 22
41: call function noellipse-ellipse printf, extra 0
42: post call
43: call header
44: parameter string_3C252B2D6i3E203C252B2D6i3E203C252B2D6li3E203C252B2D6li3E203C252B2D6u3E203C252B2D6lu3E0A0A#, offset 6
45: parameter 123, offset 8
46: parameter -123, offset 10
47: parameter 123, offset 12
48: parameter -123, offset 16
49: parameter 123, offset 20
50: parameter 123, offset 22
51: call function noellipse-ellipse printf, extra 0
52: post call
53: call header
54: parameter string_3C2506i3E203C2506i3E203C2506li3E203C2506li3E203C2506u3E203C2506lu3E0A#, offset 6
55: parameter 123, offset 8
56: parameter -123, offset 10
57: parameter 123, offset 12
58: parameter -123, offset 16
59: parameter 123, offset 20
60: parameter 123, offset 22
61: call function noellipse-ellipse printf, extra 0
62: post call
63: call header
64: parameter string_3C252B06i3E203C252B06i3E203C252B06li3E203C252B06li3E203C252B06u3E203C252B06lu3E0A#, offset 6
65: parameter 123, offset 8
66: parameter -123, offset 10
67: parameter 123, offset 12
68: parameter -123, offset 16
69: parameter 123, offset 20
70: parameter 123, offset 22
71: call function noellipse-ellipse printf, extra 0
72: post call
73: call header
74: parameter string_3C252D06i3E203C252D06i3E203C252D06li3E203C252D06li3E203C252D06u3E203C252D06lu3E0A#, offset 6
75: parameter 123, offset 8
76: parameter -123, offset 10
77: parameter 123, offset 12
78: parameter -123, offset 16
79: parameter 123, offset 20
80: parameter 123, offset 22
81: call function noellipse-ellipse printf, extra 0
82: post call
83: call header
84: parameter string_3C252B2D06i3E203C252B2D06i3E203C252B2D06li3E203C252B2D06li3E203C252B2D06u3E203C252B2D06lu3E0A0A#, offset 6
85: parameter 123, offset 8
86: parameter -123, offset 10
87: parameter 123, offset 12
88: parameter -123, offset 16
89: parameter 123, offset 20
90: parameter 123, offset 22
91: call function noellipse-ellipse printf, extra 0
92: post call
93: call header
94: parameter string_3C25206i3E203C25206i3E203C25206li3E203C25206li3E203C25206u3E203C25206lu3E0A#, offset 6
95: parameter 123, offset 8
96: parameter -123, offset 10
97: parameter 123, offset 12
98: parameter -123, offset 16
99: parameter 123, offset 20
100: parameter 123, offset 22
101: call function noellipse-ellipse printf, extra 0
102: post call
103: call header
104: parameter string_3C252B206i3E203C252B206i3E203C252B206li3E203C252B206li3E203C252B206u3E203C252B206lu3E0A#, offset 6
105: parameter 123, offset 8
106: parameter -123, offset 10
107: parameter 123, offset 12
108: parameter -123, offset 16
109: parameter 123, offset 20
110: parameter 123, offset 22
111: call function noellipse-ellipse printf, extra 0
112: post call
113: call header
114: parameter string_3C252D206i3E203C252D206i3E203C252D206li3E203C252D206li3E203C252D206u3E203C252D206lu3E0A#, offset 6
115: parameter 123, offset 8
116: parameter -123, offset 10
117: parameter 123, offset 12
118: parameter -123, offset 16
119: parameter 123, offset 20
120: parameter 123, offset 22
121: call function noellipse-ellipse printf, extra 0
122: post call
123: call header
124: parameter string_3C252B2D206i3E203C252B2D206i3E203C252B2D206li3E203C252B2D206li3E203C252B2D206u3E203C252B2D206lu3E0A0A#, offset 6
125: parameter 123, offset 8
126: parameter -123, offset 10
127: parameter 123, offset 12
128: parameter -123, offset 16
129: parameter 123, offset 20
130: parameter 123, offset 22
131: call function noellipse-ellipse printf, extra 0
132: post call
133: call header
134: parameter string_3C25x3E203C25X3E203C25o3E203C25lx3E203C25lX3E203C25lo3E0A#, offset 6
135: parameter 123, offset 8
136: parameter 123, offset 10
137: parameter 123, offset 12
138: parameter 123, offset 14
139: parameter 123, offset 18
140: parameter 123, offset 22
141: call function noellipse-ellipse printf, extra 0
142: post call
143: call header
144: parameter string_3C2523x3E203C2523X3E203C2523o3E203C2523lx3E203C2523lX3E203C2523lo3E0A#, offset 6
145: parameter 123, offset 8
146: parameter 123, offset 10
147: parameter 123, offset 12
148: parameter 123, offset 14
149: parameter 123, offset 18
150: parameter 123, offset 22
151: call function noellipse-ellipse printf, extra 0
152: post call
153: call header
154: parameter string_3C25253E203C25s3E203C25c3E203C25p3E0A0A#, offset 6
155: parameter string_Hello2C20World21#, offset 8
156: parameter 88, offset 10
157: parameter p, offset 12
158: call function noellipse-ellipse printf, extra 0
159: post call
160: call header
161: parameter string_3C25f3E203C25e3E203C25E3E203C25g3E203C25G3E0A#, offset 6
162: push float 123.456
163: parameter 123.456, offset 8
164: push float 123.456
165: parameter 123.456, offset 16
166: push float 123.456
167: parameter 123.456, offset 24
168: push float 123456.1
169: parameter 123456.1, offset 32
170: push float 123456.1
171: parameter 123456.1, offset 40
172: call function noellipse-ellipse printf, extra 0
173: post call
174: call header
175: parameter string_3C25lf3E203C25le3E203C25lE3E203C25lg3E203C25lG3E0A#, offset 6
176: push float 123.456
177: parameter 123.456, offset 8
178: push float 123.456
179: parameter 123.456, offset 16
180: push float 123.456
181: parameter 123.456, offset 24
182: push float 123456.1
183: parameter 123456.1, offset 32
184: push float 123456.1
185: parameter 123456.1, offset 40
186: call function noellipse-ellipse printf, extra 0
187: post call
188: call header
189: parameter string_3C2523f3E203C2523e3E203C2523E3E203C2523g3E203C2523G3E0A#, offset 6
190: push float 123.456
191: parameter 123.456, offset 8
192: push float 123.456
193: parameter 123.456, offset 16
194: push float 123.456
195: parameter 123.456, offset 24
196: push float 123.456
197: parameter 123.456, offset 32
198: push float 123.456
199: parameter 123.456, offset 40
200: call function noellipse-ellipse printf, extra 0
201: post call
202: call header
203: parameter string_3C2523lf3E203C2523le3E203C2523lE3E203C2523lg3E203C2523lG3E0A#, offset 6
204: push float 123.456
205: parameter 123.456, offset 8
206: push float 123.456
207: parameter 123.456, offset 16
208: push float 123.456
209: parameter 123.456, offset 24
210: push float 123.456
211: parameter 123.456, offset 32
212: push float 123.456
213: parameter 123.456, offset 40
214: call function noellipse-ellipse printf, extra 0
215: post call
216: call header
217: parameter string_3C2562E3f3E203C2562E3e3E203C2562E3E3E203C2562E3g3E203C2562E3G3E0A#, offset 6
218: push float 123.456
219: parameter 123.456, offset 8
220: push float 123.456
221: parameter 123.456, offset 16
222: push float 123.456
223: parameter 123.456, offset 24
224: push float 123.456
225: parameter 123.456, offset 32
226: push float 123.456
227: parameter 123.456, offset 40
228: call function noellipse-ellipse printf, extra 0
229: post call
230: call header
231: parameter string_3C2562E3lf3E203C2562E3le3E203C2562E3lE3E203C2562E3lg3E203C2562E3lG3E0A0A#, offset 6
232: push float 123.456
233: parameter 123.456, offset 8
234: push float 123.456
235: parameter 123.456, offset 16
236: push float 123.456
237: parameter 123.456, offset 24
238: push float 123.456
239: parameter 123.456, offset 32
240: push float 123.456
241: parameter 123.456, offset 40
242: call function noellipse-ellipse printf, extra 0
243: post call
244: call header
245: parameter string_3C25f3E203C25e3E203C25E3E203C25g3E203C25G3E0A#, offset 6
246: push float -123.456
247: parameter -123.456, offset 8
248: push float -123.456
249: parameter -123.456, offset 16
250: push float -123.456
251: parameter -123.456, offset 24
252: push float -0.000000123456
253: parameter -0.000000123456, offset 32
254: push float -0.000000123456
255: parameter -0.000000123456, offset 40
256: call function noellipse-ellipse printf, extra 0
257: post call
258: call header
259: parameter string_3C25lf3E203C25le3E203C25lE3E203C25lg3E203C25lG3E0A#, offset 6
260: push float -123.456
261: parameter -123.456, offset 8
262: push float -123.456
263: parameter -123.456, offset 16
264: push float -123.456
265: parameter -123.456, offset 24
266: push float -0.000000123456
267: parameter -0.000000123456, offset 32
268: push float -0.000000123456
269: parameter -0.000000123456, offset 40
270: call function noellipse-ellipse printf, extra 0
271: post call
272: call header
273: parameter string_3C2523f3E203C2523e3E203C2523E3E203C2523g3E203C2523G3E0A#, offset 6
274: push float -123.456
275: parameter -123.456, offset 8
276: push float -123.456
277: parameter -123.456, offset 16
278: push float -123.456
279: parameter -123.456, offset 24
280: push float -123.456
281: parameter -123.456, offset 32
282: push float -123.456
283: parameter -123.456, offset 40
284: call function noellipse-ellipse printf, extra 0
285: post call
286: call header
287: parameter string_3C2523lf3E203C2523le3E203C2523lE3E203C2523lg3E203C2523lG3E0A#, offset 6
288: push float -123.456
289: parameter -123.456, offset 8
290: push float -123.456
291: parameter -123.456, offset 16
292: push float -123.456
293: parameter -123.456, offset 24
294: push float -123.456
295: parameter -123.456, offset 32
296: push float -123.456
297: parameter -123.456, offset 40
298: call function noellipse-ellipse printf, extra 0
299: post call
300: call header
301: parameter string_3C2562E3f3E203C2562E3e3E203C2562E3E3E203C2562E3g3E203C2562E3G3E0A#, offset 6
302: push float -123.456
303: parameter -123.456, offset 8
304: push float -123.456
305: parameter -123.456, offset 16
306: push float -123.456
307: parameter -123.456, offset 24
308: push float -123.456
309: parameter -123.456, offset 32
310: push float -123.456
311: parameter -123.456, offset 40
312: call function noellipse-ellipse printf, extra 0
313: post call
314: call header
315: parameter string_3C2562E3lf3E203C2562E3le3E203C2562E3lE3E203C2562E3lg3E203C2562E3lG3E0A0A#, offset 6
316: push float -123.456
317: parameter -123.456, offset 8
318: push float -123.456
319: parameter -123.456, offset 16
320: push float -123.456
321: parameter -123.456, offset 24
322: push float -123.456
323: parameter -123.456, offset 32
324: push float -123.456
325: parameter -123.456, offset 40
326: call function noellipse-ellipse printf, extra 0
327: post call
328: call header
329: parameter string_Please20write20the20patterns205Babc5D3A20#, offset 6
330: call function noellipse-ellipse printf, extra 0
331: post call
332: call header
333: parameter string_255Babc5D#, offset 6
334: parameter s, offset 8
335: call function noellipse-ellipse scanf, extra 0
336: post call
337: call header
338: parameter string_0A3C25s3E0A#, offset 6
339: parameter s, offset 8
340: call function noellipse-ellipse printf, extra 0
341: post call
342: call header
343: parameter string_Please20write20the20patterns205B5Eabc5D3A20#, offset 6
344: call function noellipse-ellipse printf, extra 0
345: post call
346: call header
347: parameter string_255B5Eabc5D#, offset 6
348: parameter s, offset 8
349: call function noellipse-ellipse scanf, extra 0
350: post call
351: call header
352: parameter string_0A3C25s3E#, offset 6
353: parameter s, offset 8
354: call function noellipse-ellipse printf, extra 0
355: post call
356: empty
357: return
358: function end stdio_test
0: call header
1: parameter string_Floating20point20error3A2025i0A#, offset 6
2: parameter sig, offset 8
3: call function noellipse-ellipse printf, extra 0
4: post call
5: empty
6: return
7: function end floating_point_error
0: call header
1: parameter string_exit10A#, offset 6
2: call function noellipse-ellipse printf, extra 0
3: post call
4: empty
5: return
6: function end exit_handle1
0: call header
1: parameter string_exit20A#, offset 6
2: call function noellipse-ellipse printf, extra 0
3: post call
4: empty
5: return
6: function end exit_handle2
0: call header
1: parameter string_exit30A#, offset 6
2: call function noellipse-ellipse printf, extra 0
3: post call
4: empty
5: return
6: function end exit_handle3
0: a = 1
1: b = 1
2: £temporary4924 = a / b
3: c = £temporary4924
4: call header
5: parameter string_25i0A#, offset 6
6: parameter c, offset 8
7: call function noellipse-ellipse printf, extra 0
8: post call
9: call header
10: parameter exit_handle1, offset 6
11: call function noellipse-noellipse atexit
12: post call
13: call header
14: parameter exit_handle2, offset 6
15: call function noellipse-noellipse atexit
16: post call
17: call header
18: parameter exit_handle3, offset 6
19: call function noellipse-noellipse atexit
20: post call
21: call header
22: parameter 0, offset 6
23: call function noellipse-noellipse exit
24: post call
25: empty
26: return
27: function end signal_test
0: call header
1: parameter string_25i20#, offset 6
2: £temporary4936 = i
3: i = i + 1
4: parameter £temporary4936, offset 8
5: call function noellipse-ellipse printf, extra 0
6: post call
7: call header
8: call function noellipse-noellipse stack_test
9: post call
10: empty
11: return
12: function end stack_test
0: count = 0
1: call header
2: parameter 1024, offset 6
3: call function noellipse-noellipse malloc
4: post call
5: £temporary4941 = return_value
6: pointer = £temporary4941
7: if pointer != 0 goto 10
8: goto 19
9: check track map float stack
10: call header
11: parameter string_102420bytes2Dblock20number3A2025i0A#, offset 6
12: £temporary4943 = count
13: count = count + 1
14: parameter £temporary4943, offset 8
15: parameter pointer, offset 10
16: call function noellipse-ellipse printf, extra 0
17: post call
18: goto 1
19: empty
20: return
21: function end heap_test
0: p = 0
1: r = 0
2: call header
3: parameter 96, offset 6
4: call function noellipse-noellipse malloc
5: post call
6: £temporary4949 = return_value
7: q = £temporary4949
8: index = 0
9: empty
10: if index < 10 goto 13
11: goto 28
12: check track map float stack
13: empty
14: call header
15: parameter 96, offset 6
16: call function noellipse-noellipse malloc
17: post call
18: £temporary4952 = return_value
19: p = £temporary4952
20: if index == 5 goto 23
21: goto 25
22: check track map float stack
23: r = p
24: goto 25
25: empty
26: index = index + 1
27: goto 9
28: call header
29: call function noellipse-noellipse print_heap
30: post call
31: call header
32: parameter q, offset 6
33: parameter 50, offset 8
34: call function noellipse-noellipse realloc
35: post call
36: call header
37: call function noellipse-noellipse print_heap
38: post call
39: call header
40: parameter r, offset 6
41: parameter 50, offset 8
42: call function noellipse-noellipse realloc
43: post call
44: call header
45: call function noellipse-noellipse print_heap
46: post call
47: call header
48: parameter p, offset 6
49: parameter 50, offset 8
50: call function noellipse-noellipse realloc
51: post call
52: call header
53: call function noellipse-noellipse print_heap
54: post call
55: call header
56: parameter q, offset 6
57: parameter 200, offset 8
58: call function noellipse-noellipse realloc
59: post call
60: call header
61: call function noellipse-noellipse print_heap
62: post call
63: call header
64: parameter r, offset 6
65: parameter 200, offset 8
66: call function noellipse-noellipse realloc
67: post call
68: call header
69: call function noellipse-noellipse print_heap
70: post call
71: call header
72: parameter p, offset 6
73: parameter 200, offset 8
74: call function noellipse-noellipse realloc
75: post call
76: call header
77: call function noellipse-noellipse print_heap
78: post call
79: empty
80: return
81: function end malloc_test2
0: call header
1: parameter 96, offset 6
2: parameter 1, offset 8
3: call function noellipse-noellipse calloc
4: post call
5: £temporary4981 = return_value
6: a = £temporary4981
7: call header
8: parameter 96, offset 6
9: parameter 1, offset 8
10: call function noellipse-noellipse calloc
11: post call
12: £temporary4982 = return_value
13: b = £temporary4982
14: call header
15: parameter 96, offset 6
16: parameter 1, offset 8
17: call function noellipse-noellipse calloc
18: post call
19: £temporary4983 = return_value
20: c = £temporary4983
21: call header
22: parameter 96, offset 6
23: parameter 1, offset 8
24: call function noellipse-noellipse calloc
25: post call
26: £temporary4984 = return_value
27: d = £temporary4984
28: call header
29: parameter 96, offset 6
30: parameter 1, offset 8
31: call function noellipse-noellipse calloc
32: post call
33: £temporary4985 = return_value
34: e = £temporary4985
35: call header
36: call function noellipse-noellipse print_heap
37: post call
38: call header
39: parameter a, offset 6
40: call function noellipse-noellipse free
41: post call
42: call header
43: parameter b, offset 6
44: call function noellipse-noellipse free
45: post call
46: call header
47: parameter c, offset 6
48: call function noellipse-noellipse free
49: post call
50: call header
51: parameter d, offset 6
52: call function noellipse-noellipse free
53: post call
54: call header
55: parameter e, offset 6
56: call function noellipse-noellipse free
57: post call
58: call header
59: call function noellipse-noellipse print_heap
60: post call
61: empty
62: return
63: function end malloc_test3
0: £temporary5008 = bp
1: stackTop = £temporary5008
2: lowHeapPtr = 65534
3: call header
4: parameter string_Stack20Top3A2025u2C20Low20Heap3A2025u0A#, offset 6
5: parameter stackTop, offset 8
6: £temporary5009 -> lowHeapPtr = *lowHeapPtr
7: parameter £temporary5009 -> lowHeapPtr, offset 10
8: call function noellipse-ellipse printf, extra 0
9: post call
10: call header
11: call function noellipse-noellipse rec
12: post call
13: empty
14: return
15: function end rec
0: call header
1: call function noellipse-noellipse rec
2: post call
3: empty
4: return
5: function end malloc_test4
0: call header
1: parameter 96, offset 6
2: call function noellipse-noellipse malloc
3: post call
4: £temporary5016 = return_value
5: b = £temporary5016
6: call header
7: parameter 96, offset 6
8: call function noellipse-noellipse malloc
9: post call
10: £temporary5017 = return_value
11: c = £temporary5017
12: call header
13: parameter 96, offset 6
14: call function noellipse-noellipse malloc
15: post call
16: £temporary5018 = return_value
17: d = £temporary5018
18: call header
19: call function noellipse-noellipse print_heap
20: post call
21: call header
22: parameter c, offset 6
23: parameter 40, offset 8
24: call function noellipse-noellipse realloc
25: post call
26: call header
27: call function noellipse-noellipse print_heap
28: post call
29: call header
30: parameter 40, offset 6
31: call function noellipse-noellipse malloc
32: post call
33: call header
34: call function noellipse-noellipse print_heap
35: post call
36: call header
37: parameter b, offset 6
38: call function noellipse-noellipse free
39: post call
40: call header
41: call function noellipse-noellipse print_heap
42: post call
43: call header
44: parameter d, offset 6
45: call function noellipse-noellipse free
46: post call
47: call header
48: call function noellipse-noellipse print_heap
49: post call
50: empty
51: return
52: function end malloc_test
0: £temporary5036 = bp
1: stackTop = £temporary5036
2: lowHeapPtr = 65534
3: i = 0
4: empty
5: if i < 1000 goto 8
6: goto 27
7: check track map float stack
8: empty
9: call header
10: parameter 96, offset 6
11: call function noellipse-noellipse malloc
12: post call
13: £temporary5039 = return_value
14: p = £temporary5039
15: call header
16: parameter string_Index3A2025i2C20Pointer3A2025u2C20Stack20top3A2025u2C20Low20Heap3A2025u0A#, offset 6
17: parameter i, offset 8
18: parameter p, offset 10
19: parameter stackTop, offset 12
20: £temporary5040 -> lowHeapPtr = *lowHeapPtr
21: parameter £temporary5040 -> lowHeapPtr, offset 14
22: call function noellipse-ellipse printf, extra 0
23: post call
24: empty
25: i = i + 1
26: goto 4
27: empty
28: return
29: function end malloc_test6
0: £temporary5048 = int_to_int valuePtr1 (Pointer -> Pointer)
1: £temporary5049 -> £temporary5048 = *£temporary5048
2: intValue1 = £temporary5049 -> £temporary5048
3: £temporary5050 = int_to_int valuePtr2 (Pointer -> Pointer)
4: £temporary5051 -> £temporary5050 = *£temporary5050
5: intValue2 = £temporary5051 -> £temporary5050
6: if intValue1 < intValue2 goto 8
7: goto 11
8: empty
9: £temporary5061 = -1
10: goto 21
11: empty
12: if intValue1 == intValue2 goto 14
13: goto 17
14: empty
15: £temporary5057 = 0
16: goto 19
17: empty
18: £temporary5057 = 1
19: empty
20: £temporary5061 = £temporary5057
21: empty
22: return_value = £temporary5061
23: return
24: empty
25: return
26: function end compare
0: £temporary5062 = int_to_int valuePtr1 (Pointer -> Pointer)
1: £temporary5063 -> £temporary5062 = *£temporary5062
2: intValue1 = £temporary5063 -> £temporary5062
3: £temporary5064 = int_to_int valuePtr2 (Pointer -> Pointer)
4: £temporary5065 -> £temporary5064 = *£temporary5064
5: intValue2 = £temporary5065 -> £temporary5064
6: if intValue1 < intValue2 goto 8
7: goto 11
8: empty
9: £temporary5075 = 1
10: goto 21
11: empty
12: if intValue1 == intValue2 goto 14
13: goto 17
14: empty
15: £temporary5071 = 0
16: goto 19
17: empty
18: £temporary5071 = -1
19: empty
20: £temporary5075 = £temporary5071
21: empty
22: return_value = £temporary5075
23: return
24: empty
25: return
26: function end reverse_compare
0: call header
1: parameter string_div_t20quot2025i20rem2025i0A#, offset 6
2: parameter d$quot, offset 8
3: parameter d$rem, offset 10
4: call function noellipse-ellipse printf, extra 0
5: post call
6: empty
7: return
8: function end print_div
0: call header
1: parameter string_ldiv_t20quot2025li20rem2025li0A#, offset 6
2: parameter ld$quot, offset 8
3: parameter ld$rem, offset 12
4: call function noellipse-ellipse printf, extra 0
5: post call
6: empty
7: return
8: function end print_ldiv
0: call header
1: parameter string_exit10A#, offset 6
2: call function noellipse-ellipse printf, extra 0
3: post call
4: empty
5: return
6: function end exit_handle1x
0: call header
1: parameter string_exit20A#, offset 6
2: call function noellipse-ellipse printf, extra 0
3: post call
4: empty
5: return
6: function end exit_handle2x
0: call header
1: parameter string_exit30A#, offset 6
2: call function noellipse-ellipse printf, extra 0
3: post call
4: empty
5: return
6: function end exit_handle3x
0: p = s
1: q = t
2: r = w
3: call header
4: parameter string_1232E456abc#, offset 6
5: £temporary5094 = &p
6: parameter £temporary5094, offset 8
7: call function noellipse-noellipse strtod
8: post call
9: £temporary5095 = return_value
10: pop float x
11: call header
12: parameter string_1232E456#, offset 6
13: call function noellipse-noellipse atof
14: post call
15: £temporary5096 = return_value
16: pop float y
17: call header
18: parameter string_123abc#, offset 6
19: £temporary5097 = &q
20: parameter £temporary5097, offset 8
21: parameter 8, offset 10
22: call function noellipse-noellipse strtol
23: post call
24: £temporary5098 = return_value
25: l = £temporary5098
26: call header
27: parameter string_123abc#, offset 6
28: £temporary5099 = &r
29: parameter £temporary5099, offset 8
30: parameter 8, offset 10
31: call function noellipse-noellipse strtoul
32: post call
33: £temporary5100 = return_value
34: ul = £temporary5100
35: call header
36: parameter string_atof28221232E4562229203D2025f0A#, offset 6
37: push float y
38: parameter y, offset 8
39: call function noellipse-ellipse printf, extra 0
40: post call
41: call header
42: parameter string_atoi28221232229203D2025i0A#, offset 6
43: call header
44: parameter string_123#, offset 14
45: call function noellipse-noellipse atoi
46: post call
47: £temporary5102 = return_value
48: parameter £temporary5102, offset 8
49: call function noellipse-ellipse printf, extra 0
50: post call
51: call header
52: parameter string_atol28221232229203D2025li0A0A#, offset 6
53: call header
54: parameter string_123#, offset 14
55: call function noellipse-noellipse atol
56: post call
57: £temporary5104 = return_value
58: parameter £temporary5104, offset 8
59: call function noellipse-ellipse printf, extra 0
60: post call
61: call header
62: parameter string_strtod28221232E456abc222C2026endp29203D202825f2C2025s290A#, offset 6
63: push float x
64: parameter x, offset 8
65: parameter p, offset 16
66: call function noellipse-ellipse printf, extra 0
67: post call
68: call header
69: parameter string_strtol2822123abc222C2026endp29203D202825li2C2025s290A#, offset 6
70: parameter l, offset 8
71: parameter q, offset 12
72: call function noellipse-ellipse printf, extra 0
73: post call
74: call header
75: parameter string_strtoul2822123abc222C2026endp29203D202825lu2C2025s290A#, offset 6
76: parameter ul, offset 8
77: parameter r, offset 12
78: call function noellipse-ellipse printf, extra 0
79: post call
80: call header
81: parameter string_0Agetenv2822path2229203D2025s0A#, offset 6
82: call header
83: parameter string_path#, offset 14
84: call function noellipse-noellipse getenv
85: post call
86: £temporary5109 = return_value
87: parameter £temporary5109, offset 8
88: call function noellipse-ellipse printf, extra 0
89: post call
90: call header
91: parameter string_system2822dir22290A#, offset 6
92: call function noellipse-ellipse printf, extra 0
93: post call
94: call header
95: parameter string_dir#, offset 6
96: call function noellipse-noellipse system
97: post call
98: call header
99: parameter string_abs282D329203D2025i2C20abs28329203D2025i2C20labs282D3l29203D2025li2C20labs283l29203D2025li0A#, offset 6
100: call header
101: parameter -3, offset 14
102: call function noellipse-noellipse abs
103: post call
104: £temporary5113 = return_value
105: parameter £temporary5113, offset 8
106: call header
107: parameter 3, offset 16
108: call function noellipse-noellipse abs
109: post call
110: £temporary5114 = return_value
111: parameter £temporary5114, offset 10
112: call header
113: parameter -3, offset 18
114: call function noellipse-noellipse labs
115: post call
116: £temporary5115 = return_value
117: parameter £temporary5115, offset 12
118: call header
119: parameter 3, offset 22
120: call function noellipse-noellipse labs
121: post call
122: £temporary5116 = return_value
123: parameter £temporary5116, offset 16
124: call function noellipse-ellipse printf, extra 0
125: post call
126: call header
127: parameter 10, offset 6
128: parameter 3, offset 8
129: call function noellipse-noellipse div
130: post call
131: £temporary5118 -> £temporary5119 = return_value
132: i = £temporary5118 -> £temporary5119
133: call header
134: parameter string_div_t28102C20329203D202825i2C2025i292C0A#, offset 6
135: parameter i$quot, offset 8
136: parameter i$rem, offset 10
137: call function noellipse-ellipse printf, extra 0
138: post call
139: call header
140: parameter i, offset 6
141: call function noellipse-noellipse print_div
142: post call
143: call header
144: parameter 10, offset 6
145: parameter 3, offset 10
146: call function noellipse-noellipse ldiv
147: post call
148: £temporary5124 -> £temporary5125 = return_value
149: li = £temporary5124 -> £temporary5125
150: call header
151: parameter string_ldiv_t28102C20329203D202825li2C2025li290A#, offset 6
152: parameter li$quot, offset 8
153: parameter li$rem, offset 12
154: call function noellipse-ellipse printf, extra 0
155: post call
156: call header
157: parameter li, offset 6
158: call function noellipse-noellipse print_ldiv
159: post call
160: list[0] = 3
161: list[1] = 4
162: list[2] = 2
163: list[3] = 1
164: size = 4
165: call header
166: parameter string_0AA20List2013A20#, offset 6
167: call function noellipse-ellipse printf, extra 0
168: post call
169: index = 0
170: empty
171: if index < size goto 174
172: goto 186
173: check track map float stack
174: empty
175: call header
176: parameter string_25i20#, offset 6
177: £temporary5138 = index * 2
178: £temporary5139 = £temporary5138 + list
179: £temporary5140 -> £temporary5139 = *£temporary5139
180: parameter £temporary5140 -> £temporary5139, offset 8
181: call function noellipse-ellipse printf, extra 0
182: post call
183: empty
184: index = index + 1
185: goto 170
186: call header
187: parameter string_0AB20List2023A20#, offset 6
188: call function noellipse-ellipse printf, extra 0
189: post call
190: call header
191: parameter list, offset 6
192: parameter size, offset 8
193: parameter 2, offset 10
194: parameter reverse_compare, offset 12
195: call function noellipse-ellipse qsort, extra 0
196: post call
197: index = 0
198: empty
199: if index < size goto 202
200: goto 214
201: check track map float stack
202: empty
203: call header
204: parameter string_25i20#, offset 6
205: £temporary5147 = index * 2
206: £temporary5148 = list + £temporary5147
207: £temporary5149 -> £temporary5148 = *£temporary5148
208: parameter £temporary5149 -> £temporary5148, offset 8
209: call function noellipse-ellipse printf, extra 0
210: post call
211: empty
212: index = index + 1
213: goto 198
214: call header
215: parameter string_0AC20List2033A20#, offset 6
216: call function noellipse-ellipse printf, extra 0
217: post call
218: call header
219: parameter list, offset 6
220: parameter size, offset 8
221: parameter 2, offset 10
222: parameter compare, offset 12
223: call function noellipse-ellipse qsort, extra 0
224: post call
225: index = 0
226: empty
227: if index < size goto 230
228: goto 242
229: check track map float stack
230: empty
231: call header
232: parameter string_25i20#, offset 6
233: £temporary5156 = index * 2
234: £temporary5157 = list + £temporary5156
235: £temporary5158 -> £temporary5157 = *£temporary5157
236: parameter £temporary5158 -> £temporary5157, offset 8
237: call function noellipse-ellipse printf, extra 0
238: post call
239: empty
240: index = index + 1
241: goto 226
242: empty
243: call header
244: parameter string_0A0ASearch3A0A#, offset 6
245: call function noellipse-ellipse printf, extra 0
246: post call
247: key = 0
248: empty
249: if key < 6 goto 252
250: goto 285
251: check track map float stack
252: empty
253: call header
254: £temporary5163 = &key
255: parameter £temporary5163, offset 6
256: parameter list, offset 8
257: parameter size, offset 10
258: parameter 2, offset 12
259: parameter compare, offset 14
260: call function noellipse-noellipse bsearch
261: post call
262: £temporary5165 = return_value
263: £temporary5166 = int_to_int £temporary5165 (Pointer -> Pointer)
264: p = £temporary5166
265: if p != 0 goto 267
266: goto 272
267: empty
268: £temporary5168 = p - list
269: £temporary5169 = £temporary5168 / 2
270: £temporary5173 = £temporary5169
271: goto 274
272: empty
273: £temporary5173 = -1
274: empty
275: index = £temporary5173
276: call header
277: parameter string_20202825i2C2025i290A#, offset 6
278: parameter key, offset 8
279: parameter index, offset 10
280: call function noellipse-ellipse printf, extra 0
281: post call
282: empty
283: key = key + 1
284: goto 248
285: call header
286: parameter string_0A#, offset 6
287: call function noellipse-ellipse printf, extra 0
288: post call
289: empty
290: return
291: function end stdlib_test
0: weekdays[0] = string_Sun#
1: weekdays[1] = string_Mon#
2: weekdays[2] = string_Tue#
3: weekdays[3] = string_Wed#
4: weekdays[4] = string_Thu#
5: weekdays[5] = string_Fri#
6: weekdays[6] = string_Sat#
7: call header
8: parameter 0, offset 6
9: call function noellipse-noellipse time
10: post call
11: £temporary5272 = return_value
12: now = £temporary5272
13: call header
14: £temporary5273 = &now
15: parameter £temporary5273, offset 6
16: call function noellipse-noellipse gmtime
17: post call
18: £temporary5274 = return_value
19: p = £temporary5274
20: call header
21: parameter p, offset 6
22: call function noellipse-noellipse mktime
23: post call
24: £temporary5275 = return_value
25: now2 = £temporary5275
26: call header
27: parameter string_now2013A2025lu0A#, offset 6
28: parameter now, offset 8
29: call function noellipse-ellipse printf, extra 0
30: post call
31: call header
32: parameter string_now2023A2025lu0A#, offset 6
33: parameter now2, offset 8
34: call function noellipse-ellipse printf, extra 0
35: post call
36: £temporary5278 -> p = *p
37: s = £temporary5278 -> p
38: call header
39: parameter string_202020gm20time3A2025s202502i2D2502i2D2502i202502i3A2502i3A2502i2C20year20day2025i2C20week20day2025i2C20daylight20saving20time2025i0A#, offset 6
40: £temporary5281 = s$tm_wday * 2
41: £temporary5282 = weekdays + £temporary5281
42: £temporary5280 -> £temporary5282 = *£temporary5282
43: parameter £temporary5280 -> £temporary5282, offset 8
44: £temporary5284 = 1900 + s$tm_year
45: parameter £temporary5284, offset 10
46: £temporary5286 = s$tm_mon + 1
47: parameter £temporary5286, offset 12
48: parameter s$tm_mday, offset 14
49: parameter s$tm_hour, offset 16
50: parameter s$tm_min, offset 18
51: parameter s$tm_sec, offset 20
52: parameter s$tm_yday, offset 22
53: parameter s$tm_wday, offset 24
54: parameter s$tm_isdst, offset 26
55: call function noellipse-ellipse printf, extra 0
56: post call
57: call header
58: £temporary5295 = &now
59: parameter £temporary5295, offset 6
60: call function noellipse-noellipse localtime
61: post call
62: £temporary5296 = return_value
63: £temporary5297 -> £temporary5296 = *£temporary5296
64: s = £temporary5297 -> £temporary5296
65: call header
66: parameter string_local20time3A2025s202502i2D2502i2D2502i202502i3A2502i3A2502i2C20year20day2025i2C20week20day2025i2C20daylight20saving20time2025i0A#, offset 6
67: £temporary5300 = s$tm_wday * 2
68: £temporary5301 = weekdays + £temporary5300
69: £temporary5299 -> £temporary5301 = *£temporary5301
70: parameter £temporary5299 -> £temporary5301, offset 8
71: £temporary5303 = 1900 + s$tm_year
72: parameter £temporary5303, offset 10
73: £temporary5305 = s$tm_mon + 1
74: parameter £temporary5305, offset 12
75: parameter s$tm_mday, offset 14
76: parameter s$tm_hour, offset 16
77: parameter s$tm_min, offset 18
78: parameter s$tm_sec, offset 20
79: parameter s$tm_yday, offset 22
80: parameter s$tm_wday, offset 24
81: parameter s$tm_isdst, offset 26
82: call function noellipse-ellipse printf, extra 0
83: post call
84: call header
85: parameter buffer1, offset 6
86: call header
87: £temporary5314 = &s
88: parameter £temporary5314, offset 112
89: call function noellipse-noellipse asctime
90: post call
91: £temporary5315 = return_value
92: parameter £temporary5315, offset 8
93: call function noellipse-noellipse strcpy
94: post call
95: call header
96: parameter buffer2, offset 6
97: call header
98: £temporary5317 = &now
99: parameter £temporary5317, offset 112
100: call function noellipse-noellipse ctime
101: post call
102: £temporary5318 = return_value
103: parameter £temporary5318, offset 8
104: call function noellipse-noellipse strcpy
105: post call
106: call header
107: parameter string_asctime203C25s3E2C20ctime203C25s3E0A#, offset 6
108: parameter buffer1, offset 8
109: parameter buffer2, offset 10
110: call function noellipse-ellipse printf, extra 0
111: post call
112: call header
113: parameter buffer, offset 6
114: parameter 300, offset 8
115: parameter string_short20day2025a2C20long20day2025A2C20short20month2025b2C20long20month2025B2C20date2Dtime2025c2C20mday2025d2C20hour2025H2C20gm20hour2025I2C20yday2025j2C20month2025m2C20min2025M2C20am2Fpm2025p2C20sec2025S2C20week20number20sun2025U2C20week20day2025w2C20week20number20mon2025W2C20date2025x2C20time2025X2C20short20year2025y2C20long20year2025Y#, offset 10
116: £temporary5321 = &s
117: parameter £temporary5321, offset 12
118: call function noellipse-noellipse strftime
119: post call
120: £temporary5322 = return_value
121: i = £temporary5322
122: call header
123: parameter string_strftime203C25i3E203C25s3E0A#, offset 6
124: parameter i, offset 8
125: parameter buffer, offset 10
126: call function noellipse-ellipse printf, extra 0
127: post call
128: empty
129: return
130: function end time_test
