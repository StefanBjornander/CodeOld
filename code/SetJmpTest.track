0:		; Initialize Stack Pointer
1:		mov bp, $StackTop
2:		; Initialize Heap Pointer
3:		mov word [65534], 65534
4:		; Initialize FPU Control Word, truncate mode => set bit 10 and 11.
5:		fstcw [bp]
6:		or word [bp], 3072
7:		fldcw [bp]
8:		mov word [$StackTop], 0
10:	

@10044$main:	; CallHeader 16 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
12:	

@10044$main$1:	; Parameter 16 string_Please20input20a20value3A20# 6
13:		mov word [bp + 22], @10047$string_Please20input20a20value3A20#
15:	

@10044$main$2:	; Call 16 printf 0
16:		mov word [bp + 16], @10044$main$3
17:		mov [bp + 18], bp
18:		add bp, 16
19:		mov di, bp
20:		jmp printf
22:	

@10044$main$3:	; PostCall 16
24:	

@10044$main$4:	; CallHeader 16 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
26:	

@10044$main$5:	; Parameter 16 string_25lf# 6
27:		mov word [bp + 22], @10049$string_25lf#
29:	

@10044$main$6:	; address £temporary4488 x
30:		mov t2576, bp
31:		add t2576, 8
33:	

@10044$main$7:	; Parameter 16 £temporary4488 8
34:		mov [bp + 24], t2576
36:	

@10044$main$8:	; Call 16 scanf 0
37:		mov word [bp + 16], @10044$main$9
38:		mov [bp + 18], bp
39:		add bp, 16
40:		mov di, bp
41:		add di, 2
42:		jmp scanf
44:	

@10044$main$9:	; PostCall 16
46:	

@10044$main$10:	; CallHeader 16 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
48:	

@10044$main$11:	; Parameter 16 buffer 6
49:		mov word [bp + 22], buffer
51:	

@10044$main$12:	; Call 16 setjmp 0
52:		mov word [bp + 16], @10044$main$13
53:		mov [bp + 18], bp
54:		add bp, 16
55:		jmp setjmp
57:	

@10044$main$13:	; PostCall 16
59:	

@10044$main$14:	; GetReturnValue £temporary4490
61:	

@10044$main$15:	; Assign message £temporary4490
62:		mov [bp + 6], type2578
64:	

@10044$main$16:	; NotEqual 31 message 0
65:		cmp word [bp + 6], 0
66:		jne @10044$main$31
68:	

@10044$main$17:	; CallHeader 16 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
70:	

@10044$main$18:	; Parameter 16 string_12E0202F2025f203D2025f0A# 6
71:		mov word [bp + 22], @10056$string_12E0202F2025f203D2025f0A#
73:	

@10044$main$19:	; PushFloat x
74:		fld qword [bp + 8]
76:	

@10044$main$20:	; Parameter 16 x 8
77:		fstp qword [bp + 24]
79:	

@10044$main$21:	; CallHeader 16 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
81:	

@10044$main$22:	; PushFloat x
82:		fld qword [bp + 8]
84:	

@10044$main$23:	; Parameter 16 x 22
85:		fstp qword [bp + 38]
87:	

@10044$main$24:	; Call 16 inverse 16
88:		mov word [bp + 32], @10044$main$25
89:		mov [bp + 34], bp
90:		add bp, 32
91:		jmp inverse
93:	

@10044$main$25:	; PostCall 16
95:	

@10044$main$26:	; GetReturnValue £temporary4492
97:	

@10044$main$27:	; Parameter 16 £temporary4492 16
98:		fstp qword [bp + 32]
100:	

@10044$main$28:	; Call 16 printf 0
101:		mov word [bp + 16], @10044$main$29
102:		mov [bp + 18], bp
103:		add bp, 16
104:		mov di, bp
105:		add di, 16
106:		jmp printf
108:	

@10044$main$29:	; PostCall 16
110:	

@10044$main$30:	; Goto 36
111:		jmp @10044$main$36
113:	

@10044$main$31:	; CallHeader 16 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
115:	

@10044$main$32:	; Parameter 16 string_25s0A# 6
116:		mov word [bp + 22], @10059$string_25s0A#
118:	

@10044$main$33:	; Parameter 16 message 8
119:		mov a2580, [bp + 6]
120:		mov [bp + 24], a2580
122:	

@10044$main$34:	; Call 16 printf 0
123:		mov word [bp + 16], @10044$main$35
124:		mov [bp + 18], bp
125:		add bp, 16
126:		mov di, bp
127:		add di, 2
128:		jmp printf
130:	

@10044$main$35:	; PostCall 16
132:	

@10044$main$36:	; Return 0
133:		mov t2582, [bp]
134:		mov di, [bp + 4]
135:		mov bp, [bp + 2]
136:		jmp t2582
138:	

@10044$main$37:	; FunctionEnd main
1:	

inverse:	; CallHeader 14 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
3:	

inverse$1:	; PushOne
4:		fld1
6:	

inverse$2:	; Parameter 14 1 6
7:		fstp qword [bp + 20]
9:	

inverse$3:	; PushFloat x
10:		fld qword [bp + 6]
12:	

inverse$4:	; Parameter 14 x 14
13:		fstp qword [bp + 28]
15:	

inverse$5:	; Call 14 divide 0
16:		mov word [bp + 14], inverse$6
17:		mov [bp + 16], bp
18:		add bp, 14
19:		jmp divide
21:	

inverse$6:	; PostCall 14
23:	

inverse$7:	; GetReturnValue £temporary4506
25:	

inverse$8:	; SetReturnValue £temporary4506
27:	

inverse$9:	; Return £temporary4506
28:		mov t2583, [bp]
29:		mov di, [bp + 4]
30:		mov bp, [bp + 2]
31:		jmp t2583
33:	

inverse$10:	; FunctionEnd inverse
1:	

divide:	; PushFloat y
2:		fld qword [bp + 14]
4:	

divide$1:	; PushZero
5:		fldz
7:	

divide$2:	; Equal 8 y 0
8:		fcompp
9:		fstsw ax
10:		sahf
11:		je divide$8
13:	

divide$3:	; PushFloat x
14:		fld qword [bp + 6]
16:	

divide$4:	; PushFloat y
17:		fld qword [bp + 14]
19:	

divide$5:	; SignedDivide £temporary4510 x y
20:		fdiv
22:	

divide$6:	; SetReturnValue £temporary4510
24:	

divide$7:	; Return £temporary4510
25:		mov t2584, [bp]
26:		mov di, [bp + 4]
27:		mov bp, [bp + 2]
28:		jmp t2584
30:	

divide$8:	; CallHeader 22 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
32:	

divide$9:	; Parameter 22 buffer 6
33:		mov word [bp + 28], buffer
35:	

divide$10:	; Parameter 22 string_Division20by20Zero2E# 8
36:		mov word [bp + 30], @10084$string_Division20by20Zero2E#
38:	

divide$11:	; Call 22 longjmp 0
39:		mov word [bp + 22], divide$12
40:		mov [bp + 24], bp
41:		add bp, 22
42:		jmp longjmp
44:	

divide$12:	; PostCall 22
46:	

divide$13:	; PushZero
47:		fldz
49:	

divide$14:	; SetReturnValue 0
51:	

divide$15:	; Return 0
52:		mov t2585, [bp]
53:		mov di, [bp + 4]
54:		mov bp, [bp + 2]
55:		jmp t2585
57:	

divide$16:	; FunctionEnd divide
1:	

test:	; CallHeader 16 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
3:	

test$1:	; Parameter 16 buffer 6
4:		mov word [bp + 22], buffer
6:	

test$2:	; Call 16 setjmp 0
7:		mov word [bp + 16], test$3
8:		mov [bp + 18], bp
9:		add bp, 16
10:		jmp setjmp
12:	

test$3:	; PostCall 16
14:	

test$4:	; GetReturnValue £temporary4514
16:	

test$5:	; Assign message £temporary4514
17:		mov [bp + 14], type2586
19:	

test$6:	; NotEqual 21 message 0
20:		cmp word [bp + 14], 0
21:		jne test$21
23:	

test$7:	; CallHeader 16 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
25:	

test$8:	; Parameter 16 string_12E0202F2025f203D2025f0A# 6
26:		mov word [bp + 22], @10096$string_12E0202F2025f203D2025f0A#
28:	

test$9:	; PushFloat x
29:		fld qword [bp + 6]
31:	

test$10:	; Parameter 16 x 8
32:		fstp qword [bp + 24]
34:	

test$11:	; CallHeader 16 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
36:	

test$12:	; PushFloat x
37:		fld qword [bp + 6]
39:	

test$13:	; Parameter 16 x 22
40:		fstp qword [bp + 38]
42:	

test$14:	; Call 16 inverse 16
43:		mov word [bp + 32], test$15
44:		mov [bp + 34], bp
45:		add bp, 32
46:		jmp inverse
48:	

test$15:	; PostCall 16
50:	

test$16:	; GetReturnValue £temporary4516
52:	

test$17:	; Parameter 16 £temporary4516 16
53:		fstp qword [bp + 32]
55:	

test$18:	; Call 16 printf 0
56:		mov word [bp + 16], test$19
57:		mov [bp + 18], bp
58:		add bp, 16
59:		mov di, bp
60:		add di, 16
61:		jmp printf
63:	

test$19:	; PostCall 16
65:	

test$20:	; Goto 26
66:		jmp test$26
68:	

test$21:	; CallHeader 16 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
70:	

test$22:	; Parameter 16 string_25s0A# 6
71:		mov word [bp + 22], @10099$string_25s0A#
73:	

test$23:	; Parameter 16 message 8
74:		mov a2588, [bp + 14]
75:		mov [bp + 24], a2588
77:	

test$24:	; Call 16 printf 0
78:		mov word [bp + 16], test$25
79:		mov [bp + 18], bp
80:		add bp, 16
81:		mov di, bp
82:		add di, 2
83:		jmp printf
85:	

test$25:	; PostCall 16
87:	

test$26:	; Return 0
88:		mov t2590, [bp]
89:		mov di, [bp + 4]
90:		mov bp, [bp + 2]
91:		jmp t2590
93:	

test$27:	; FunctionEnd test
1:	

setjmp_test:	; CallHeader 6 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
3:	

setjmp_test$1:	; PushFloat 10
4:		fld qword [@10110$float8$10#]
6:	

setjmp_test$2:	; Parameter 6 10 6
7:		fstp qword [bp + 12]
9:	

setjmp_test$3:	; Call 6 test 0
10:		mov word [bp + 6], setjmp_test$4
11:		mov [bp + 8], bp
12:		add bp, 6
13:		jmp test
15:	

setjmp_test$4:	; PostCall 6
17:	

setjmp_test$5:	; CallHeader 6 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
19:	

setjmp_test$6:	; PushZero
20:		fldz
22:	

setjmp_test$7:	; Parameter 6 0 6
23:		fstp qword [bp + 12]
25:	

setjmp_test$8:	; Call 6 test 0
26:		mov word [bp + 6], setjmp_test$9
27:		mov [bp + 8], bp
28:		add bp, 6
29:		jmp test
31:	

setjmp_test$9:	; PostCall 6
33:	

setjmp_test$10:	; CallHeader 6 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
35:	

setjmp_test$11:	; PushFloat 0.1
36:		fld qword [@10117$float8$0.1#]
38:	

setjmp_test$12:	; Parameter 6 0.1 6
39:		fstp qword [bp + 12]
41:	

setjmp_test$13:	; Call 6 test 0
42:		mov word [bp + 6], setjmp_test$14
43:		mov [bp + 8], bp
44:		add bp, 6
45:		jmp test
47:	

setjmp_test$14:	; PostCall 6
49:	

setjmp_test$15:	; Return 0
50:		mov t2591, [bp]
51:		mov di, [bp + 4]
52:		mov bp, [bp + 2]
53:		jmp t2591
55:	

setjmp_test$16:	; FunctionEnd setjmp_test
