1:	

islower:	; CallHeader 8 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
3:	

islower$1:	; Call 8 localeconv 0
4:		mov word [bp + 8], islower$2
5:		mov [bp + 10], bp
6:		add bp, 8
7:		jmp localeconv
9:	

islower$2:	; PostCall 8
11:	

islower$3:	; GetReturnValue £temporary160
13:	

islower$4:	; Assign localeConvPtr £temporary160
14:		mov [bp + 8], type128
16:	

islower$5:	; Equal 19 localeConvPtr 0
17:		cmp word [bp + 8], 0
18:		je islower$19
20:	

islower$6:	; CallHeader 10 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
22:	

islower$7:	; Deref £temporary162 -> localeConvPtr localeConvPtr 12
23:		mov a129, [bp + 8]
25:	

islower$8:	; Parameter 10 £temporary162 -> localeConvPtr 6
26:		mov t130, [a129 + 12]
27:		mov [bp + 16], t130
29:	

islower$9:	; Parameter 10 c 8
30:		mov a131, [bp + 6]
31:		mov [bp + 18], a131
33:	

islower$10:	; Call 10 strchr 0
34:		mov word [bp + 10], islower$11
35:		mov [bp + 12], bp
36:		add bp, 10
37:		jmp strchr
39:	

islower$11:	; PostCall 10
41:	

islower$12:	; GetReturnValue £temporary163
43:	

islower$13:	; Equal 16 £temporary163 0
44:		cmp type132, 0
45:		je islower$16
47:	

islower$14:	; Assign £temporary165 1
48:		mov t133, 1
50:	

islower$15:	; Goto 17
51:		jmp islower$17
53:	

islower$16:	; Assign £temporary165 0
54:		mov t134, 0
56:	

islower$17:	; SetReturnValue £temporary165
58:	

islower$18:	; Return £temporary165
59:		mov t135, [bp]
60:		mov di, [bp + 4]
61:		mov bp, [bp + 2]
62:		jmp t135
64:	

islower$19:	; SignedLessThan 23 c 97
65:		cmp word [bp + 6], 97
66:		jl islower$23
68:	

islower$20:	; SignedGreaterThan 23 c 122
69:		cmp word [bp + 6], 122
70:		jg islower$23
72:	

islower$21:	; Assign £temporary169 1
73:		mov t136, 1
75:	

islower$22:	; Goto 24
76:		jmp islower$24
78:	

islower$23:	; Assign £temporary169 0
79:		mov t137, 0
81:	

islower$24:	; SetReturnValue £temporary169
83:	

islower$25:	; Return £temporary169
84:		mov t138, [bp]
85:		mov di, [bp + 4]
86:		mov bp, [bp + 2]
87:		jmp t138
89:	

islower$26:	; FunctionEnd islower
1:	

isupper:	; CallHeader 8 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
3:	

isupper$1:	; Call 8 localeconv 0
4:		mov word [bp + 8], isupper$2
5:		mov [bp + 10], bp
6:		add bp, 8
7:		jmp localeconv
9:	

isupper$2:	; PostCall 8
11:	

isupper$3:	; GetReturnValue £temporary172
13:	

isupper$4:	; Assign localeConvPtr £temporary172
14:		mov [bp + 8], type139
16:	

isupper$5:	; Equal 19 localeConvPtr 0
17:		cmp word [bp + 8], 0
18:		je isupper$19
20:	

isupper$6:	; CallHeader 10 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
22:	

isupper$7:	; Deref £temporary174 -> localeConvPtr localeConvPtr 14
23:		mov a140, [bp + 8]
25:	

isupper$8:	; Parameter 10 £temporary174 -> localeConvPtr 6
26:		mov t141, [a140 + 14]
27:		mov [bp + 16], t141
29:	

isupper$9:	; Parameter 10 c 8
30:		mov a142, [bp + 6]
31:		mov [bp + 18], a142
33:	

isupper$10:	; Call 10 strchr 0
34:		mov word [bp + 10], isupper$11
35:		mov [bp + 12], bp
36:		add bp, 10
37:		jmp strchr
39:	

isupper$11:	; PostCall 10
41:	

isupper$12:	; GetReturnValue £temporary175
43:	

isupper$13:	; Equal 16 £temporary175 0
44:		cmp type143, 0
45:		je isupper$16
47:	

isupper$14:	; Assign £temporary177 1
48:		mov t144, 1
50:	

isupper$15:	; Goto 17
51:		jmp isupper$17
53:	

isupper$16:	; Assign £temporary177 0
54:		mov t145, 0
56:	

isupper$17:	; SetReturnValue £temporary177
58:	

isupper$18:	; Return £temporary177
59:		mov t146, [bp]
60:		mov di, [bp + 4]
61:		mov bp, [bp + 2]
62:		jmp t146
64:	

isupper$19:	; SignedLessThan 23 c 65
65:		cmp word [bp + 6], 65
66:		jl isupper$23
68:	

isupper$20:	; SignedGreaterThan 23 c 90
69:		cmp word [bp + 6], 90
70:		jg isupper$23
72:	

isupper$21:	; Assign £temporary181 1
73:		mov t147, 1
75:	

isupper$22:	; Goto 24
76:		jmp isupper$24
78:	

isupper$23:	; Assign £temporary181 0
79:		mov t148, 0
81:	

isupper$24:	; SetReturnValue £temporary181
83:	

isupper$25:	; Return £temporary181
84:		mov t149, [bp]
85:		mov di, [bp + 4]
86:		mov bp, [bp + 2]
87:		jmp t149
89:	

isupper$26:	; FunctionEnd isupper
1:	

isalpha:	; CallHeader 8 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
3:	

isalpha$1:	; Parameter 8 c 6
4:		mov a150, [bp + 6]
5:		mov [bp + 14], a150
7:	

isalpha$2:	; Call 8 islower 0
8:		mov word [bp + 8], isalpha$3
9:		mov [bp + 10], bp
10:		add bp, 8
11:		jmp islower
13:	

isalpha$3:	; PostCall 8
15:	

isalpha$4:	; GetReturnValue £temporary184
17:	

isalpha$5:	; NotEqual 12 £temporary184 0
18:		cmp type151, 0
19:		jne isalpha$12
21:	

isalpha$6:	; CallHeader 8 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
23:	

isalpha$7:	; Parameter 8 c 6
24:		mov a152, [bp + 6]
25:		mov [bp + 14], a152
27:	

isalpha$8:	; Call 8 isupper 0
28:		mov word [bp + 8], isalpha$9
29:		mov [bp + 10], bp
30:		add bp, 8
31:		jmp isupper
33:	

isalpha$9:	; PostCall 8
35:	

isalpha$10:	; GetReturnValue £temporary185
37:	

isalpha$11:	; Equal 14 £temporary185 0
38:		cmp type153, 0
39:		je isalpha$14
41:	

isalpha$12:	; Assign £temporary189 1
42:		mov t154, 1
44:	

isalpha$13:	; Goto 15
45:		jmp isalpha$15
47:	

isalpha$14:	; Assign £temporary189 0
48:		mov t155, 0
50:	

isalpha$15:	; SetReturnValue £temporary189
52:	

isalpha$16:	; Return £temporary189
53:		mov t156, [bp]
54:		mov di, [bp + 4]
55:		mov bp, [bp + 2]
56:		jmp t156
58:	

isalpha$17:	; FunctionEnd isalpha
1:	

isdigit:	; SignedLessThan 4 c 48
2:		cmp word [bp + 6], 48
3:		jl isdigit$4
5:	

isdigit$1:	; SignedGreaterThan 4 c 57
6:		cmp word [bp + 6], 57
7:		jg isdigit$4
9:	

isdigit$2:	; Assign £temporary195 1
10:		mov t157, 1
12:	

isdigit$3:	; Goto 5
13:		jmp isdigit$5
15:	

isdigit$4:	; Assign £temporary195 0
16:		mov t158, 0
18:	

isdigit$5:	; SetReturnValue £temporary195
20:	

isdigit$6:	; Return £temporary195
21:		mov t159, [bp]
22:		mov di, [bp + 4]
23:		mov bp, [bp + 2]
24:		jmp t159
26:	

isdigit$7:	; FunctionEnd isdigit
1:	

isalnum:	; CallHeader 8 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
3:	

isalnum$1:	; Parameter 8 c 6
4:		mov a160, [bp + 6]
5:		mov [bp + 14], a160
7:	

isalnum$2:	; Call 8 isalpha 0
8:		mov word [bp + 8], isalnum$3
9:		mov [bp + 10], bp
10:		add bp, 8
11:		jmp isalpha
13:	

isalnum$3:	; PostCall 8
15:	

isalnum$4:	; GetReturnValue £temporary196
17:	

isalnum$5:	; NotEqual 12 £temporary196 0
18:		cmp type161, 0
19:		jne isalnum$12
21:	

isalnum$6:	; CallHeader 8 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
23:	

isalnum$7:	; Parameter 8 c 6
24:		mov a162, [bp + 6]
25:		mov [bp + 14], a162
27:	

isalnum$8:	; Call 8 isdigit 0
28:		mov word [bp + 8], isalnum$9
29:		mov [bp + 10], bp
30:		add bp, 8
31:		jmp isdigit
33:	

isalnum$9:	; PostCall 8
35:	

isalnum$10:	; GetReturnValue £temporary197
37:	

isalnum$11:	; Equal 14 £temporary197 0
38:		cmp type163, 0
39:		je isalnum$14
41:	

isalnum$12:	; Assign £temporary201 1
42:		mov t164, 1
44:	

isalnum$13:	; Goto 15
45:		jmp isalnum$15
47:	

isalnum$14:	; Assign £temporary201 0
48:		mov t165, 0
50:	

isalnum$15:	; SetReturnValue £temporary201
52:	

isalnum$16:	; Return £temporary201
53:		mov t166, [bp]
54:		mov di, [bp + 4]
55:		mov bp, [bp + 2]
56:		jmp t166
58:	

isalnum$17:	; FunctionEnd isalnum
1:	

isxdigit:	; CallHeader 8 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
3:	

isxdigit$1:	; Parameter 8 c 6
4:		mov a167, [bp + 6]
5:		mov [bp + 14], a167
7:	

isxdigit$2:	; Call 8 isdigit 0
8:		mov word [bp + 8], isxdigit$3
9:		mov [bp + 10], bp
10:		add bp, 8
11:		jmp isdigit
13:	

isxdigit$3:	; PostCall 8
15:	

isxdigit$4:	; GetReturnValue £temporary204
17:	

isxdigit$5:	; NotEqual 10 £temporary204 0
18:		cmp type168, 0
19:		jne isxdigit$10
21:	

isxdigit$6:	; SignedLessThan 8 c 97
22:		cmp word [bp + 6], 97
23:		jl isxdigit$8
25:	

isxdigit$7:	; SignedLessThanEqual 10 c 102
26:		cmp word [bp + 6], 102
27:		jle isxdigit$10
29:	

isxdigit$8:	; SignedLessThan 12 c 65
30:		cmp word [bp + 6], 65
31:		jl isxdigit$12
33:	

isxdigit$9:	; SignedGreaterThan 12 c 70
34:		cmp word [bp + 6], 70
35:		jg isxdigit$12
37:	

isxdigit$10:	; Assign £temporary214 1
38:		mov t169, 1
40:	

isxdigit$11:	; Goto 13
41:		jmp isxdigit$13
43:	

isxdigit$12:	; Assign £temporary214 0
44:		mov t170, 0
46:	

isxdigit$13:	; SetReturnValue £temporary214
48:	

isxdigit$14:	; Return £temporary214
49:		mov t171, [bp]
50:		mov di, [bp + 4]
51:		mov bp, [bp + 2]
52:		jmp t171
54:	

isxdigit$15:	; FunctionEnd isxdigit
1:	

isgraph:	; SignedLessThan 4 c 32
2:		cmp word [bp + 6], 32
3:		jl isgraph$4
5:	

isgraph$1:	; SignedGreaterThan 4 c 126
6:		cmp word [bp + 6], 126
7:		jg isgraph$4
9:	

isgraph$2:	; Assign £temporary219 1
10:		mov t172, 1
12:	

isgraph$3:	; Goto 5
13:		jmp isgraph$5
15:	

isgraph$4:	; Assign £temporary219 0
16:		mov t173, 0
18:	

isgraph$5:	; SetReturnValue £temporary219
20:	

isgraph$6:	; Return £temporary219
21:		mov t174, [bp]
22:		mov di, [bp + 4]
23:		mov bp, [bp + 2]
24:		jmp t174
26:	

isgraph$7:	; FunctionEnd isgraph
1:	

isprint:	; CallHeader 8 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
3:	

isprint$1:	; Parameter 8 c 6
4:		mov a175, [bp + 6]
5:		mov [bp + 14], a175
7:	

isprint$2:	; Call 8 isgraph 0
8:		mov word [bp + 8], isprint$3
9:		mov [bp + 10], bp
10:		add bp, 8
11:		jmp isgraph
13:	

isprint$3:	; PostCall 8
15:	

isprint$4:	; GetReturnValue £temporary220
17:	

isprint$5:	; Equal 9 £temporary220 0
18:		cmp type176, 0
19:		je isprint$9
21:	

isprint$6:	; Equal 9 c 32
22:		cmp word [bp + 6], 32
23:		je isprint$9
25:	

isprint$7:	; Assign £temporary224 1
26:		mov t177, 1
28:	

isprint$8:	; Goto 10
29:		jmp isprint$10
31:	

isprint$9:	; Assign £temporary224 0
32:		mov t178, 0
34:	

isprint$10:	; SetReturnValue £temporary224
36:	

isprint$11:	; Return £temporary224
37:		mov t179, [bp]
38:		mov di, [bp + 4]
39:		mov bp, [bp + 2]
40:		jmp t179
42:	

isprint$12:	; FunctionEnd isprint
1:	

ispunct:	; CallHeader 8 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
3:	

ispunct$1:	; Parameter 8 c 6
4:		mov a180, [bp + 6]
5:		mov [bp + 14], a180
7:	

ispunct$2:	; Call 8 isgraph 0
8:		mov word [bp + 8], ispunct$3
9:		mov [bp + 10], bp
10:		add bp, 8
11:		jmp isgraph
13:	

ispunct$3:	; PostCall 8
15:	

ispunct$4:	; GetReturnValue £temporary226
17:	

ispunct$5:	; Equal 14 £temporary226 0
18:		cmp type181, 0
19:		je ispunct$14
21:	

ispunct$6:	; CallHeader 8 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
23:	

ispunct$7:	; Parameter 8 c 6
24:		mov a182, [bp + 6]
25:		mov [bp + 14], a182
27:	

ispunct$8:	; Call 8 isalnum 0
28:		mov word [bp + 8], ispunct$9
29:		mov [bp + 10], bp
30:		add bp, 8
31:		jmp isalnum
33:	

ispunct$9:	; PostCall 8
35:	

ispunct$10:	; GetReturnValue £temporary227
37:	

ispunct$11:	; NotEqual 14 £temporary227 0
38:		cmp type183, 0
39:		jne ispunct$14
41:	

ispunct$12:	; Assign £temporary232 1
42:		mov t184, 1
44:	

ispunct$13:	; Goto 15
45:		jmp ispunct$15
47:	

ispunct$14:	; Assign £temporary232 0
48:		mov t185, 0
50:	

ispunct$15:	; SetReturnValue £temporary232
52:	

ispunct$16:	; Return £temporary232
53:		mov t186, [bp]
54:		mov di, [bp + 4]
55:		mov bp, [bp + 2]
56:		jmp t186
58:	

ispunct$17:	; FunctionEnd ispunct
1:	

iscntrl:	; CallHeader 8 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
3:	

iscntrl$1:	; Parameter 8 c 6
4:		mov a187, [bp + 6]
5:		mov [bp + 14], a187
7:	

iscntrl$2:	; Call 8 isprint 0
8:		mov word [bp + 8], iscntrl$3
9:		mov [bp + 10], bp
10:		add bp, 8
11:		jmp isprint
13:	

iscntrl$3:	; PostCall 8
15:	

iscntrl$4:	; GetReturnValue £temporary235
17:	

iscntrl$5:	; NotEqual 8 £temporary235 0
18:		cmp type188, 0
19:		jne iscntrl$8
21:	

iscntrl$6:	; Assign £temporary238 1
22:		mov t189, 1
24:	

iscntrl$7:	; Goto 9
25:		jmp iscntrl$9
27:	

iscntrl$8:	; Assign £temporary238 0
28:		mov t190, 0
30:	

iscntrl$9:	; SetReturnValue £temporary238
32:	

iscntrl$10:	; Return £temporary238
33:		mov t191, [bp]
34:		mov di, [bp + 4]
35:		mov bp, [bp + 2]
36:		jmp t191
38:	

iscntrl$11:	; FunctionEnd iscntrl
1:	

isspace:	; Equal 6 c 32
2:		cmp word [bp + 6], 32
3:		je isspace$6
5:	

isspace$1:	; Equal 6 c 12
6:		cmp word [bp + 6], 12
7:		je isspace$6
9:	

isspace$2:	; Equal 6 c 10
10:		cmp word [bp + 6], 10
11:		je isspace$6
13:	

isspace$3:	; Equal 6 c 13
14:		cmp word [bp + 6], 13
15:		je isspace$6
17:	

isspace$4:	; Equal 6 c 9
18:		cmp word [bp + 6], 9
19:		je isspace$6
21:	

isspace$5:	; NotEqual 8 c 11
22:		cmp word [bp + 6], 11
23:		jne isspace$8
25:	

isspace$6:	; Assign £temporary251 1
26:		mov t192, 1
28:	

isspace$7:	; Goto 9
29:		jmp isspace$9
31:	

isspace$8:	; Assign £temporary251 0
32:		mov t193, 0
34:	

isspace$9:	; SetReturnValue £temporary251
36:	

isspace$10:	; Return £temporary251
37:		mov t194, [bp]
38:		mov di, [bp + 4]
39:		mov bp, [bp + 2]
40:		jmp t194
42:	

isspace$11:	; FunctionEnd isspace
1:	

tolower:	; CallHeader 8 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
3:	

tolower$1:	; Parameter 8 c 6
4:		mov a195, [bp + 6]
5:		mov [bp + 14], a195
7:	

tolower$2:	; Call 8 isupper 0
8:		mov word [bp + 8], tolower$3
9:		mov [bp + 10], bp
10:		add bp, 8
11:		jmp isupper
13:	

tolower$3:	; PostCall 8
15:	

tolower$4:	; GetReturnValue £temporary252
17:	

tolower$5:	; Equal 31 £temporary252 0
18:		cmp type196, 0
19:		je tolower$31
21:	

tolower$6:	; CallHeader 8 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
23:	

tolower$7:	; Call 8 localeconv 0
24:		mov word [bp + 8], tolower$8
25:		mov [bp + 10], bp
26:		add bp, 8
27:		jmp localeconv
29:	

tolower$8:	; PostCall 8
31:	

tolower$9:	; GetReturnValue £temporary253
33:	

tolower$10:	; Assign localeConvPtr £temporary253
34:		mov [bp + 8], type197
36:	

tolower$11:	; Equal 28 localeConvPtr 0
37:		cmp word [bp + 8], 0
38:		je tolower$28
40:	

tolower$12:	; Deref £temporary255 -> localeConvPtr localeConvPtr 12
41:		mov a198, [bp + 8]
43:	

tolower$13:	; Assign lowerCase £temporary255 -> localeConvPtr
44:		mov t199, [a198 + 12]
45:		mov [bp + 10], t199
47:	

tolower$14:	; Deref £temporary256 -> localeConvPtr localeConvPtr 14
48:		mov a200, [bp + 8]
50:	

tolower$15:	; Assign upperCase £temporary256 -> localeConvPtr
51:		mov t201, [a200 + 14]
52:		mov [bp + 12], t201
54:	

tolower$16:	; CallHeader 14 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
56:	

tolower$17:	; Parameter 14 upperCase 6
57:		mov a202, [bp + 12]
58:		mov [bp + 20], a202
60:	

tolower$18:	; Parameter 14 c 8
61:		mov a203, [bp + 6]
62:		mov [bp + 22], a203
64:	

tolower$19:	; Call 14 strchr 0
65:		mov word [bp + 14], tolower$20
66:		mov [bp + 16], bp
67:		add bp, 14
68:		jmp strchr
70:	

tolower$20:	; PostCall 14
72:	

tolower$21:	; GetReturnValue £temporary257
74:	

tolower$22:	; BinarySubtract index £temporary257 upperCase
75:		sub type204, [bp + 12]
76:		mov [bp + 14], type204
78:	

tolower$23:	; BinaryAdd £temporary260 lowerCase index
79:		mov a205, [bp + 10]
80:		add a205, [bp + 14]
82:	

tolower$24:	; Deref £temporary259 -> £temporary260 £temporary260 0
84:	

tolower$25:	; IntegralToIntegral £temporary261 £temporary259 -> £temporary260
85:		mov t206, [a205]
87:		and t206, 255
89:		cmp t206, 0
90:		jge tolower$26
91:		neg t206
93:		neg t206
95:	

tolower$26:	; SetReturnValue £temporary261
97:	

tolower$27:	; Return £temporary261
98:		mov t207, [bp]
99:		mov di, [bp + 4]
100:		mov bp, [bp + 2]
101:		jmp t207
103:	

tolower$28:	; BinaryAdd £temporary262 c 32
104:		mov a208, [bp + 6]
105:		add a208, 32
107:	

tolower$29:	; SetReturnValue £temporary262
109:	

tolower$30:	; Return £temporary262
110:		mov t209, [bp]
111:		mov di, [bp + 4]
112:		mov bp, [bp + 2]
113:		jmp t209
115:	

tolower$31:	; SetReturnValue c
116:		mov a210, [bp + 6]
118:	

tolower$32:	; Return c
119:		mov t211, [bp]
120:		mov di, [bp + 4]
121:		mov bp, [bp + 2]
122:		jmp t211
124:	

tolower$33:	; FunctionEnd tolower
1:	

toupper:	; CallHeader 8 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
3:	

toupper$1:	; Parameter 8 c 6
4:		mov a212, [bp + 6]
5:		mov [bp + 14], a212
7:	

toupper$2:	; Call 8 islower 0
8:		mov word [bp + 8], toupper$3
9:		mov [bp + 10], bp
10:		add bp, 8
11:		jmp islower
13:	

toupper$3:	; PostCall 8
15:	

toupper$4:	; GetReturnValue £temporary267
17:	

toupper$5:	; Equal 31 £temporary267 0
18:		cmp type213, 0
19:		je toupper$31
21:	

toupper$6:	; CallHeader 8 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
23:	

toupper$7:	; Call 8 localeconv 0
24:		mov word [bp + 8], toupper$8
25:		mov [bp + 10], bp
26:		add bp, 8
27:		jmp localeconv
29:	

toupper$8:	; PostCall 8
31:	

toupper$9:	; GetReturnValue £temporary268
33:	

toupper$10:	; Assign localeConvPtr £temporary268
34:		mov [bp + 8], type214
36:	

toupper$11:	; Equal 28 localeConvPtr 0
37:		cmp word [bp + 8], 0
38:		je toupper$28
40:	

toupper$12:	; Deref £temporary270 -> localeConvPtr localeConvPtr 12
41:		mov a215, [bp + 8]
43:	

toupper$13:	; Assign lowerCase £temporary270 -> localeConvPtr
44:		mov t216, [a215 + 12]
45:		mov [bp + 10], t216
47:	

toupper$14:	; Deref £temporary271 -> localeConvPtr localeConvPtr 14
48:		mov a217, [bp + 8]
50:	

toupper$15:	; Assign upperCase £temporary271 -> localeConvPtr
51:		mov t218, [a217 + 14]
52:		mov [bp + 12], t218
54:	

toupper$16:	; CallHeader 14 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
56:	

toupper$17:	; Parameter 14 lowerCase 6
57:		mov a219, [bp + 10]
58:		mov [bp + 20], a219
60:	

toupper$18:	; Parameter 14 c 8
61:		mov a220, [bp + 6]
62:		mov [bp + 22], a220
64:	

toupper$19:	; Call 14 strchr 0
65:		mov word [bp + 14], toupper$20
66:		mov [bp + 16], bp
67:		add bp, 14
68:		jmp strchr
70:	

toupper$20:	; PostCall 14
72:	

toupper$21:	; GetReturnValue £temporary272
74:	

toupper$22:	; BinarySubtract index £temporary272 lowerCase
75:		sub type221, [bp + 10]
76:		mov [bp + 14], type221
78:	

toupper$23:	; BinaryAdd £temporary275 upperCase index
79:		mov a222, [bp + 12]
80:		add a222, [bp + 14]
82:	

toupper$24:	; Deref £temporary274 -> £temporary275 £temporary275 0
84:	

toupper$25:	; IntegralToIntegral £temporary276 £temporary274 -> £temporary275
85:		mov t223, [a222]
87:		and t223, 255
89:		cmp t223, 0
90:		jge toupper$26
91:		neg t223
93:		neg t223
95:	

toupper$26:	; SetReturnValue £temporary276
97:	

toupper$27:	; Return £temporary276
98:		mov t224, [bp]
99:		mov di, [bp + 4]
100:		mov bp, [bp + 2]
101:		jmp t224
103:	

toupper$28:	; BinarySubtract £temporary277 c 32
104:		mov a225, [bp + 6]
105:		sub a225, 32
107:	

toupper$29:	; SetReturnValue £temporary277
109:	

toupper$30:	; Return £temporary277
110:		mov t226, [bp]
111:		mov di, [bp + 4]
112:		mov bp, [bp + 2]
113:		jmp t226
115:	

toupper$31:	; SetReturnValue c
116:		mov a227, [bp + 6]
118:	

toupper$32:	; Return c
119:		mov t228, [bp]
120:		mov di, [bp + 4]
121:		mov bp, [bp + 2]
122:		jmp t228
124:	

toupper$33:	; FunctionEnd toupper
