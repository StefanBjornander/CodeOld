1:	

character_testX:	; CallHeader 7 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
3:	

character_testX$1:	; Parameter 7 string_ascii2025i0A# 6
4:		mov word [bp + 13], @9185$string_ascii2025i0A#
6:	

character_testX$2:	; IntegralToIntegral £temporary4042 c
7:		mov al, [bp + 6]
9:		and ax, 255
11:		cmp al, 0
12:		jge character_testX$3
13:		neg al
15:		neg ax
17:	

character_testX$3:	; Parameter 7 £temporary4042 8
18:		mov [bp + 15], ax
20:	

character_testX$4:	; Call 7 printf 0
21:		mov word [bp + 7], character_testX$5
22:		mov [bp + 9], bp
23:		add bp, 7
24:		mov di, bp
25:		add di, 2
26:		jmp printf
28:	

character_testX$5:	; PostCall 7
30:	

character_testX$6:	; CallHeader 7 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
32:	

character_testX$7:	; Parameter 7 string_islower282725c2729203D2025s0A# 6
33:		mov word [bp + 13], @9188$string_islower282725c2729203D2025s0A#
35:	

character_testX$8:	; IntegralToIntegral £temporary4044 c
36:		mov al, [bp + 6]
38:		and ax, 255
40:		cmp al, 0
41:		jge character_testX$9
42:		neg al
44:		neg ax
46:	

character_testX$9:	; Parameter 7 £temporary4044 8
47:		mov [bp + 15], ax
49:	

character_testX$10:	; CallHeader 7 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
51:	

character_testX$11:	; IntegralToIntegral £temporary4045 c
52:		mov al, [bp + 6]
54:		and ax, 255
56:		cmp al, 0
57:		jge character_testX$12
58:		neg al
60:		neg ax
62:	

character_testX$12:	; Parameter 7 £temporary4045 16
63:		mov [bp + 23], ax
65:	

character_testX$13:	; Call 7 islower 10
66:		mov word [bp + 17], character_testX$14
67:		mov [bp + 19], bp
68:		add bp, 17
69:		jmp islower
71:	

character_testX$14:	; PostCall 7
73:	

character_testX$15:	; GetReturnValue £temporary4046
75:	

character_testX$16:	; Equal 19 £temporary4046 0
76:		cmp bx, 0
77:		je character_testX$19
79:	

character_testX$17:	; Assign £temporary4051 string_Yes#
80:		mov ax, @9195$string_Yes#
82:	

character_testX$18:	; Goto 20
83:		jmp character_testX$20
85:	

character_testX$19:	; Assign £temporary4051 string_No#
86:		mov ax, @9196$string_No#
88:	

character_testX$20:	; Parameter 7 £temporary4051 10
89:		mov [bp + 17], ax
91:	

character_testX$21:	; Call 7 printf 0
92:		mov word [bp + 7], character_testX$22
93:		mov [bp + 9], bp
94:		add bp, 7
95:		mov di, bp
96:		add di, 4
97:		jmp printf
99:	

character_testX$22:	; PostCall 7
101:	

character_testX$23:	; CallHeader 7 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
103:	

character_testX$24:	; Parameter 7 string_isupper282725c2729203D2025s0A# 6
104:		mov word [bp + 13], @9204$string_isupper282725c2729203D2025s0A#
106:	

character_testX$25:	; IntegralToIntegral £temporary4053 c
107:		mov al, [bp + 6]
109:		and ax, 255
111:		cmp al, 0
112:		jge character_testX$26
113:		neg al
115:		neg ax
117:	

character_testX$26:	; Parameter 7 £temporary4053 8
118:		mov [bp + 15], ax
120:	

character_testX$27:	; CallHeader 7 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
122:	

character_testX$28:	; IntegralToIntegral £temporary4054 c
123:		mov al, [bp + 6]
125:		and ax, 255
127:		cmp al, 0
128:		jge character_testX$29
129:		neg al
131:		neg ax
133:	

character_testX$29:	; Parameter 7 £temporary4054 16
134:		mov [bp + 23], ax
136:	

character_testX$30:	; Call 7 isupper 10
137:		mov word [bp + 17], character_testX$31
138:		mov [bp + 19], bp
139:		add bp, 17
140:		jmp isupper
142:	

character_testX$31:	; PostCall 7
144:	

character_testX$32:	; GetReturnValue £temporary4055
146:	

character_testX$33:	; Equal 36 £temporary4055 0
147:		cmp bx, 0
148:		je character_testX$36
150:	

character_testX$34:	; Assign £temporary4060 string_Yes#
151:		mov ax, @9211$string_Yes#
153:	

character_testX$35:	; Goto 37
154:		jmp character_testX$37
156:	

character_testX$36:	; Assign £temporary4060 string_No#
157:		mov ax, @9212$string_No#
159:	

character_testX$37:	; Parameter 7 £temporary4060 10
160:		mov [bp + 17], ax
162:	

character_testX$38:	; Call 7 printf 0
163:		mov word [bp + 7], character_testX$39
164:		mov [bp + 9], bp
165:		add bp, 7
166:		mov di, bp
167:		add di, 4
168:		jmp printf
170:	

character_testX$39:	; PostCall 7
172:	

character_testX$40:	; CallHeader 7 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
174:	

character_testX$41:	; Parameter 7 string_isalpha282725c2729203D2025s0A# 6
175:		mov word [bp + 13], @9220$string_isalpha282725c2729203D2025s0A#
177:	

character_testX$42:	; IntegralToIntegral £temporary4062 c
178:		mov al, [bp + 6]
180:		and ax, 255
182:		cmp al, 0
183:		jge character_testX$43
184:		neg al
186:		neg ax
188:	

character_testX$43:	; Parameter 7 £temporary4062 8
189:		mov [bp + 15], ax
191:	

character_testX$44:	; CallHeader 7 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
193:	

character_testX$45:	; IntegralToIntegral £temporary4063 c
194:		mov al, [bp + 6]
196:		and ax, 255
198:		cmp al, 0
199:		jge character_testX$46
200:		neg al
202:		neg ax
204:	

character_testX$46:	; Parameter 7 £temporary4063 16
205:		mov [bp + 23], ax
207:	

character_testX$47:	; Call 7 isalpha 10
208:		mov word [bp + 17], character_testX$48
209:		mov [bp + 19], bp
210:		add bp, 17
211:		jmp isalpha
213:	

character_testX$48:	; PostCall 7
215:	

character_testX$49:	; GetReturnValue £temporary4064
217:	

character_testX$50:	; Equal 53 £temporary4064 0
218:		cmp bx, 0
219:		je character_testX$53
221:	

character_testX$51:	; Assign £temporary4069 string_Yes#
222:		mov ax, @9227$string_Yes#
224:	

character_testX$52:	; Goto 54
225:		jmp character_testX$54
227:	

character_testX$53:	; Assign £temporary4069 string_No#
228:		mov ax, @9228$string_No#
230:	

character_testX$54:	; Parameter 7 £temporary4069 10
231:		mov [bp + 17], ax
233:	

character_testX$55:	; Call 7 printf 0
234:		mov word [bp + 7], character_testX$56
235:		mov [bp + 9], bp
236:		add bp, 7
237:		mov di, bp
238:		add di, 4
239:		jmp printf
241:	

character_testX$56:	; PostCall 7
243:	

character_testX$57:	; CallHeader 7 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
245:	

character_testX$58:	; Parameter 7 string_isdigit282725c2729203D2025s0A# 6
246:		mov word [bp + 13], @9236$string_isdigit282725c2729203D2025s0A#
248:	

character_testX$59:	; IntegralToIntegral £temporary4071 c
249:		mov al, [bp + 6]
251:		and ax, 255
253:		cmp al, 0
254:		jge character_testX$60
255:		neg al
257:		neg ax
259:	

character_testX$60:	; Parameter 7 £temporary4071 8
260:		mov [bp + 15], ax
262:	

character_testX$61:	; CallHeader 7 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
264:	

character_testX$62:	; IntegralToIntegral £temporary4072 c
265:		mov al, [bp + 6]
267:		and ax, 255
269:		cmp al, 0
270:		jge character_testX$63
271:		neg al
273:		neg ax
275:	

character_testX$63:	; Parameter 7 £temporary4072 16
276:		mov [bp + 23], ax
278:	

character_testX$64:	; Call 7 isdigit 10
279:		mov word [bp + 17], character_testX$65
280:		mov [bp + 19], bp
281:		add bp, 17
282:		jmp isdigit
284:	

character_testX$65:	; PostCall 7
286:	

character_testX$66:	; GetReturnValue £temporary4073
288:	

character_testX$67:	; Equal 70 £temporary4073 0
289:		cmp bx, 0
290:		je character_testX$70
292:	

character_testX$68:	; Assign £temporary4078 string_Yes#
293:		mov ax, @9243$string_Yes#
295:	

character_testX$69:	; Goto 71
296:		jmp character_testX$71
298:	

character_testX$70:	; Assign £temporary4078 string_No#
299:		mov ax, @9244$string_No#
301:	

character_testX$71:	; Parameter 7 £temporary4078 10
302:		mov [bp + 17], ax
304:	

character_testX$72:	; Call 7 printf 0
305:		mov word [bp + 7], character_testX$73
306:		mov [bp + 9], bp
307:		add bp, 7
308:		mov di, bp
309:		add di, 4
310:		jmp printf
312:	

character_testX$73:	; PostCall 7
314:	

character_testX$74:	; CallHeader 7 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
316:	

character_testX$75:	; Parameter 7 string_isalnum282725c2729203D2025s0A# 6
317:		mov word [bp + 13], @9252$string_isalnum282725c2729203D2025s0A#
319:	

character_testX$76:	; IntegralToIntegral £temporary4080 c
320:		mov al, [bp + 6]
322:		and ax, 255
324:		cmp al, 0
325:		jge character_testX$77
326:		neg al
328:		neg ax
330:	

character_testX$77:	; Parameter 7 £temporary4080 8
331:		mov [bp + 15], ax
333:	

character_testX$78:	; CallHeader 7 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
335:	

character_testX$79:	; IntegralToIntegral £temporary4081 c
336:		mov al, [bp + 6]
338:		and ax, 255
340:		cmp al, 0
341:		jge character_testX$80
342:		neg al
344:		neg ax
346:	

character_testX$80:	; Parameter 7 £temporary4081 16
347:		mov [bp + 23], ax
349:	

character_testX$81:	; Call 7 isalnum 10
350:		mov word [bp + 17], character_testX$82
351:		mov [bp + 19], bp
352:		add bp, 17
353:		jmp isalnum
355:	

character_testX$82:	; PostCall 7
357:	

character_testX$83:	; GetReturnValue £temporary4082
359:	

character_testX$84:	; Equal 87 £temporary4082 0
360:		cmp bx, 0
361:		je character_testX$87
363:	

character_testX$85:	; Assign £temporary4087 string_Yes#
364:		mov ax, @9259$string_Yes#
366:	

character_testX$86:	; Goto 88
367:		jmp character_testX$88
369:	

character_testX$87:	; Assign £temporary4087 string_No#
370:		mov ax, @9260$string_No#
372:	

character_testX$88:	; Parameter 7 £temporary4087 10
373:		mov [bp + 17], ax
375:	

character_testX$89:	; Call 7 printf 0
376:		mov word [bp + 7], character_testX$90
377:		mov [bp + 9], bp
378:		add bp, 7
379:		mov di, bp
380:		add di, 4
381:		jmp printf
383:	

character_testX$90:	; PostCall 7
385:	

character_testX$91:	; CallHeader 7 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
387:	

character_testX$92:	; Parameter 7 string_isxdigit282725c2729203D2025s0A# 6
388:		mov word [bp + 13], @9268$string_isxdigit282725c2729203D2025s0A#
390:	

character_testX$93:	; IntegralToIntegral £temporary4089 c
391:		mov al, [bp + 6]
393:		and ax, 255
395:		cmp al, 0
396:		jge character_testX$94
397:		neg al
399:		neg ax
401:	

character_testX$94:	; Parameter 7 £temporary4089 8
402:		mov [bp + 15], ax
404:	

character_testX$95:	; CallHeader 7 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
406:	

character_testX$96:	; IntegralToIntegral £temporary4090 c
407:		mov al, [bp + 6]
409:		and ax, 255
411:		cmp al, 0
412:		jge character_testX$97
413:		neg al
415:		neg ax
417:	

character_testX$97:	; Parameter 7 £temporary4090 16
418:		mov [bp + 23], ax
420:	

character_testX$98:	; Call 7 isxdigit 10
421:		mov word [bp + 17], character_testX$99
422:		mov [bp + 19], bp
423:		add bp, 17
424:		jmp isxdigit
426:	

character_testX$99:	; PostCall 7
428:	

character_testX$100:	; GetReturnValue £temporary4091
430:	

character_testX$101:	; Equal 104 £temporary4091 0
431:		cmp bx, 0
432:		je character_testX$104
434:	

character_testX$102:	; Assign £temporary4096 string_Yes#
435:		mov ax, @9275$string_Yes#
437:	

character_testX$103:	; Goto 105
438:		jmp character_testX$105
440:	

character_testX$104:	; Assign £temporary4096 string_No#
441:		mov ax, @9276$string_No#
443:	

character_testX$105:	; Parameter 7 £temporary4096 10
444:		mov [bp + 17], ax
446:	

character_testX$106:	; Call 7 printf 0
447:		mov word [bp + 7], character_testX$107
448:		mov [bp + 9], bp
449:		add bp, 7
450:		mov di, bp
451:		add di, 4
452:		jmp printf
454:	

character_testX$107:	; PostCall 7
456:	

character_testX$108:	; CallHeader 7 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
458:	

character_testX$109:	; Parameter 7 string_isgraph282725c2729203D2025s0A# 6
459:		mov word [bp + 13], @9284$string_isgraph282725c2729203D2025s0A#
461:	

character_testX$110:	; IntegralToIntegral £temporary4098 c
462:		mov al, [bp + 6]
464:		and ax, 255
466:		cmp al, 0
467:		jge character_testX$111
468:		neg al
470:		neg ax
472:	

character_testX$111:	; Parameter 7 £temporary4098 8
473:		mov [bp + 15], ax
475:	

character_testX$112:	; CallHeader 7 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
477:	

character_testX$113:	; IntegralToIntegral £temporary4099 c
478:		mov al, [bp + 6]
480:		and ax, 255
482:		cmp al, 0
483:		jge character_testX$114
484:		neg al
486:		neg ax
488:	

character_testX$114:	; Parameter 7 £temporary4099 16
489:		mov [bp + 23], ax
491:	

character_testX$115:	; Call 7 isgraph 10
492:		mov word [bp + 17], character_testX$116
493:		mov [bp + 19], bp
494:		add bp, 17
495:		jmp isgraph
497:	

character_testX$116:	; PostCall 7
499:	

character_testX$117:	; GetReturnValue £temporary4100
501:	

character_testX$118:	; Equal 121 £temporary4100 0
502:		cmp bx, 0
503:		je character_testX$121
505:	

character_testX$119:	; Assign £temporary4105 string_Yes#
506:		mov ax, @9291$string_Yes#
508:	

character_testX$120:	; Goto 122
509:		jmp character_testX$122
511:	

character_testX$121:	; Assign £temporary4105 string_No#
512:		mov ax, @9292$string_No#
514:	

character_testX$122:	; Parameter 7 £temporary4105 10
515:		mov [bp + 17], ax
517:	

character_testX$123:	; Call 7 printf 0
518:		mov word [bp + 7], character_testX$124
519:		mov [bp + 9], bp
520:		add bp, 7
521:		mov di, bp
522:		add di, 4
523:		jmp printf
525:	

character_testX$124:	; PostCall 7
527:	

character_testX$125:	; CallHeader 7 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
529:	

character_testX$126:	; Parameter 7 string_isprint282725c2729203D2025s0A# 6
530:		mov word [bp + 13], @9300$string_isprint282725c2729203D2025s0A#
532:	

character_testX$127:	; IntegralToIntegral £temporary4107 c
533:		mov al, [bp + 6]
535:		and ax, 255
537:		cmp al, 0
538:		jge character_testX$128
539:		neg al
541:		neg ax
543:	

character_testX$128:	; Parameter 7 £temporary4107 8
544:		mov [bp + 15], ax
546:	

character_testX$129:	; CallHeader 7 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
548:	

character_testX$130:	; IntegralToIntegral £temporary4108 c
549:		mov al, [bp + 6]
551:		and ax, 255
553:		cmp al, 0
554:		jge character_testX$131
555:		neg al
557:		neg ax
559:	

character_testX$131:	; Parameter 7 £temporary4108 16
560:		mov [bp + 23], ax
562:	

character_testX$132:	; Call 7 isprint 10
563:		mov word [bp + 17], character_testX$133
564:		mov [bp + 19], bp
565:		add bp, 17
566:		jmp isprint
568:	

character_testX$133:	; PostCall 7
570:	

character_testX$134:	; GetReturnValue £temporary4109
572:	

character_testX$135:	; Equal 138 £temporary4109 0
573:		cmp bx, 0
574:		je character_testX$138
576:	

character_testX$136:	; Assign £temporary4114 string_Yes#
577:		mov ax, @9307$string_Yes#
579:	

character_testX$137:	; Goto 139
580:		jmp character_testX$139
582:	

character_testX$138:	; Assign £temporary4114 string_No#
583:		mov ax, @9308$string_No#
585:	

character_testX$139:	; Parameter 7 £temporary4114 10
586:		mov [bp + 17], ax
588:	

character_testX$140:	; Call 7 printf 0
589:		mov word [bp + 7], character_testX$141
590:		mov [bp + 9], bp
591:		add bp, 7
592:		mov di, bp
593:		add di, 4
594:		jmp printf
596:	

character_testX$141:	; PostCall 7
598:	

character_testX$142:	; CallHeader 7 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
600:	

character_testX$143:	; Parameter 7 string_ispunct282725c2729203D2025s0A# 6
601:		mov word [bp + 13], @9316$string_ispunct282725c2729203D2025s0A#
603:	

character_testX$144:	; IntegralToIntegral £temporary4116 c
604:		mov al, [bp + 6]
606:		and ax, 255
608:		cmp al, 0
609:		jge character_testX$145
610:		neg al
612:		neg ax
614:	

character_testX$145:	; Parameter 7 £temporary4116 8
615:		mov [bp + 15], ax
617:	

character_testX$146:	; CallHeader 7 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
619:	

character_testX$147:	; IntegralToIntegral £temporary4117 c
620:		mov al, [bp + 6]
622:		and ax, 255
624:		cmp al, 0
625:		jge character_testX$148
626:		neg al
628:		neg ax
630:	

character_testX$148:	; Parameter 7 £temporary4117 16
631:		mov [bp + 23], ax
633:	

character_testX$149:	; Call 7 ispunct 10
634:		mov word [bp + 17], character_testX$150
635:		mov [bp + 19], bp
636:		add bp, 17
637:		jmp ispunct
639:	

character_testX$150:	; PostCall 7
641:	

character_testX$151:	; GetReturnValue £temporary4118
643:	

character_testX$152:	; Equal 155 £temporary4118 0
644:		cmp bx, 0
645:		je character_testX$155
647:	

character_testX$153:	; Assign £temporary4123 string_Yes#
648:		mov ax, @9323$string_Yes#
650:	

character_testX$154:	; Goto 156
651:		jmp character_testX$156
653:	

character_testX$155:	; Assign £temporary4123 string_No#
654:		mov ax, @9324$string_No#
656:	

character_testX$156:	; Parameter 7 £temporary4123 10
657:		mov [bp + 17], ax
659:	

character_testX$157:	; Call 7 printf 0
660:		mov word [bp + 7], character_testX$158
661:		mov [bp + 9], bp
662:		add bp, 7
663:		mov di, bp
664:		add di, 4
665:		jmp printf
667:	

character_testX$158:	; PostCall 7
669:	

character_testX$159:	; CallHeader 7 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
671:	

character_testX$160:	; Parameter 7 string_iscntrl282725c2729203D2025s0A# 6
672:		mov word [bp + 13], @9332$string_iscntrl282725c2729203D2025s0A#
674:	

character_testX$161:	; IntegralToIntegral £temporary4125 c
675:		mov al, [bp + 6]
677:		and ax, 255
679:		cmp al, 0
680:		jge character_testX$162
681:		neg al
683:		neg ax
685:	

character_testX$162:	; Parameter 7 £temporary4125 8
686:		mov [bp + 15], ax
688:	

character_testX$163:	; CallHeader 7 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
690:	

character_testX$164:	; IntegralToIntegral £temporary4126 c
691:		mov al, [bp + 6]
693:		and ax, 255
695:		cmp al, 0
696:		jge character_testX$165
697:		neg al
699:		neg ax
701:	

character_testX$165:	; Parameter 7 £temporary4126 16
702:		mov [bp + 23], ax
704:	

character_testX$166:	; Call 7 iscntrl 10
705:		mov word [bp + 17], character_testX$167
706:		mov [bp + 19], bp
707:		add bp, 17
708:		jmp iscntrl
710:	

character_testX$167:	; PostCall 7
712:	

character_testX$168:	; GetReturnValue £temporary4127
714:	

character_testX$169:	; Equal 172 £temporary4127 0
715:		cmp bx, 0
716:		je character_testX$172
718:	

character_testX$170:	; Assign £temporary4132 string_Yes#
719:		mov ax, @9339$string_Yes#
721:	

character_testX$171:	; Goto 173
722:		jmp character_testX$173
724:	

character_testX$172:	; Assign £temporary4132 string_No#
725:		mov ax, @9340$string_No#
727:	

character_testX$173:	; Parameter 7 £temporary4132 10
728:		mov [bp + 17], ax
730:	

character_testX$174:	; Call 7 printf 0
731:		mov word [bp + 7], character_testX$175
732:		mov [bp + 9], bp
733:		add bp, 7
734:		mov di, bp
735:		add di, 4
736:		jmp printf
738:	

character_testX$175:	; PostCall 7
740:	

character_testX$176:	; CallHeader 7 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
742:	

character_testX$177:	; Parameter 7 string_isspace282725c2729203D2025s0A# 6
743:		mov word [bp + 13], @9348$string_isspace282725c2729203D2025s0A#
745:	

character_testX$178:	; IntegralToIntegral £temporary4134 c
746:		mov al, [bp + 6]
748:		and ax, 255
750:		cmp al, 0
751:		jge character_testX$179
752:		neg al
754:		neg ax
756:	

character_testX$179:	; Parameter 7 £temporary4134 8
757:		mov [bp + 15], ax
759:	

character_testX$180:	; CallHeader 7 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
761:	

character_testX$181:	; IntegralToIntegral £temporary4135 c
762:		mov al, [bp + 6]
764:		and ax, 255
766:		cmp al, 0
767:		jge character_testX$182
768:		neg al
770:		neg ax
772:	

character_testX$182:	; Parameter 7 £temporary4135 16
773:		mov [bp + 23], ax
775:	

character_testX$183:	; Call 7 isspace 10
776:		mov word [bp + 17], character_testX$184
777:		mov [bp + 19], bp
778:		add bp, 17
779:		jmp isspace
781:	

character_testX$184:	; PostCall 7
783:	

character_testX$185:	; GetReturnValue £temporary4136
785:	

character_testX$186:	; Equal 189 £temporary4136 0
786:		cmp bx, 0
787:		je character_testX$189
789:	

character_testX$187:	; Assign £temporary4141 string_Yes#
790:		mov ax, @9355$string_Yes#
792:	

character_testX$188:	; Goto 190
793:		jmp character_testX$190
795:	

character_testX$189:	; Assign £temporary4141 string_No#
796:		mov ax, @9356$string_No#
798:	

character_testX$190:	; Parameter 7 £temporary4141 10
799:		mov [bp + 17], ax
801:	

character_testX$191:	; Call 7 printf 0
802:		mov word [bp + 7], character_testX$192
803:		mov [bp + 9], bp
804:		add bp, 7
805:		mov di, bp
806:		add di, 4
807:		jmp printf
809:	

character_testX$192:	; PostCall 7
811:	

character_testX$193:	; CallHeader 7 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
813:	

character_testX$194:	; Parameter 7 string_tolower282725c2729203D202725c270A# 6
814:		mov word [bp + 13], @9364$string_tolower282725c2729203D202725c270A#
816:	

character_testX$195:	; IntegralToIntegral £temporary4143 c
817:		mov al, [bp + 6]
819:		and ax, 255
821:		cmp al, 0
822:		jge character_testX$196
823:		neg al
825:		neg ax
827:	

character_testX$196:	; Parameter 7 £temporary4143 8
828:		mov [bp + 15], ax
830:	

character_testX$197:	; CallHeader 7 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
832:	

character_testX$198:	; IntegralToIntegral £temporary4144 c
833:		mov al, [bp + 6]
835:		and ax, 255
837:		cmp al, 0
838:		jge character_testX$199
839:		neg al
841:		neg ax
843:	

character_testX$199:	; Parameter 7 £temporary4144 16
844:		mov [bp + 23], ax
846:	

character_testX$200:	; Call 7 tolower 10
847:		mov word [bp + 17], character_testX$201
848:		mov [bp + 19], bp
849:		add bp, 17
850:		jmp tolower
852:	

character_testX$201:	; PostCall 7
854:	

character_testX$202:	; GetReturnValue £temporary4145
856:	

character_testX$203:	; IntegralToIntegral £temporary4146 £temporary4145
859:		cmp bx, 0
860:		jge character_testX$204
861:		neg bx
863:		neg bl
865:	

character_testX$204:	; IntegralToIntegral £temporary4147 £temporary4146
867:		and bx, 255
869:		cmp bl, 0
870:		jge character_testX$205
871:		neg bl
873:		neg bx
875:	

character_testX$205:	; Parameter 7 £temporary4147 10
876:		mov [bp + 17], bx
878:	

character_testX$206:	; Call 7 printf 0
879:		mov word [bp + 7], character_testX$207
880:		mov [bp + 9], bp
881:		add bp, 7
882:		mov di, bp
883:		add di, 4
884:		jmp printf
886:	

character_testX$207:	; PostCall 7
888:	

character_testX$208:	; CallHeader 7 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
890:	

character_testX$209:	; Parameter 7 string_toupper282725c2729203D202725c270A0A# 6
891:		mov word [bp + 13], @9371$string_toupper282725c2729203D202725c270A0A#
893:	

character_testX$210:	; IntegralToIntegral £temporary4149 c
894:		mov al, [bp + 6]
896:		and ax, 255
898:		cmp al, 0
899:		jge character_testX$211
900:		neg al
902:		neg ax
904:	

character_testX$211:	; Parameter 7 £temporary4149 8
905:		mov [bp + 15], ax
907:	

character_testX$212:	; CallHeader 7 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
909:	

character_testX$213:	; IntegralToIntegral £temporary4150 c
910:		mov al, [bp + 6]
912:		and ax, 255
914:		cmp al, 0
915:		jge character_testX$214
916:		neg al
918:		neg ax
920:	

character_testX$214:	; Parameter 7 £temporary4150 16
921:		mov [bp + 23], ax
923:	

character_testX$215:	; Call 7 toupper 10
924:		mov word [bp + 17], character_testX$216
925:		mov [bp + 19], bp
926:		add bp, 17
927:		jmp toupper
929:	

character_testX$216:	; PostCall 7
931:	

character_testX$217:	; GetReturnValue £temporary4151
933:	

character_testX$218:	; IntegralToIntegral £temporary4152 £temporary4151
936:		cmp bx, 0
937:		jge character_testX$219
938:		neg bx
940:		neg bl
942:	

character_testX$219:	; IntegralToIntegral £temporary4153 £temporary4152
944:		and bx, 255
946:		cmp bl, 0
947:		jge character_testX$220
948:		neg bl
950:		neg bx
952:	

character_testX$220:	; Parameter 7 £temporary4153 10
953:		mov [bp + 17], bx
955:	

character_testX$221:	; Call 7 printf 0
956:		mov word [bp + 7], character_testX$222
957:		mov [bp + 9], bp
958:		add bp, 7
959:		mov di, bp
960:		add di, 4
961:		jmp printf
963:	

character_testX$222:	; PostCall 7
965:	

character_testX$223:	; Return 0
966:		mov ax, [bp]
967:		mov di, [bp + 4]
968:		mov bp, [bp + 2]
969:		jmp ax
971:	

character_testX$224:	; FunctionEnd character_testX
1:	

character_test:	; CallHeader 6 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
3:	

character_test$1:	; Parameter 6 97 6
4:		mov byte [bp + 12], 97
6:	

character_test$2:	; Call 6 character_testX 0
7:		mov word [bp + 6], character_test$3
8:		mov [bp + 8], bp
9:		add bp, 6
10:		jmp character_testX
12:	

character_test$3:	; PostCall 6
14:	

character_test$4:	; CallHeader 6 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
16:	

character_test$5:	; Parameter 6 66 6
17:		mov byte [bp + 12], 66
19:	

character_test$6:	; Call 6 character_testX 0
20:		mov word [bp + 6], character_test$7
21:		mov [bp + 8], bp
22:		add bp, 6
23:		jmp character_testX
25:	

character_test$7:	; PostCall 6
27:	

character_test$8:	; CallHeader 6 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
29:	

character_test$9:	; Parameter 6 49 6
30:		mov byte [bp + 12], 49
32:	

character_test$10:	; Call 6 character_testX 0
33:		mov word [bp + 6], character_test$11
34:		mov [bp + 8], bp
35:		add bp, 6
36:		jmp character_testX
38:	

character_test$11:	; PostCall 6
40:	

character_test$12:	; CallHeader 6 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
42:	

character_test$13:	; Parameter 6 46 6
43:		mov byte [bp + 12], 46
45:	

character_test$14:	; Call 6 character_testX 0
46:		mov word [bp + 6], character_test$15
47:		mov [bp + 8], bp
48:		add bp, 6
49:		jmp character_testX
51:	

character_test$15:	; PostCall 6
53:	

character_test$16:	; CallHeader 6 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
55:	

character_test$17:	; Parameter 6 10 6
56:		mov byte [bp + 12], 10
58:	

character_test$18:	; Call 6 character_testX 0
59:		mov word [bp + 6], character_test$19
60:		mov [bp + 8], bp
61:		add bp, 6
62:		jmp character_testX
64:	

character_test$19:	; PostCall 6
66:	

character_test$20:	; CallHeader 6 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
68:	

character_test$21:	; Parameter 6 102 6
69:		mov byte [bp + 12], 102
71:	

character_test$22:	; Call 6 character_testX 0
72:		mov word [bp + 6], character_test$23
73:		mov [bp + 8], bp
74:		add bp, 6
75:		jmp character_testX
77:	

character_test$23:	; PostCall 6
79:	

character_test$24:	; CallHeader 6 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
81:	

character_test$25:	; Parameter 6 103 6
82:		mov byte [bp + 12], 103
84:	

character_test$26:	; Call 6 character_testX 0
85:		mov word [bp + 6], character_test$27
86:		mov [bp + 8], bp
87:		add bp, 6
88:		jmp character_testX
90:	

character_test$27:	; PostCall 6
92:	

character_test$28:	; Return 0
93:		mov ax, [bp]
94:		mov di, [bp + 4]
95:		mov bp, [bp + 2]
96:		jmp ax
98:	

character_test$29:	; FunctionEnd character_test
