0: if size >= int2$5# goto 54
1: c = int1$97#
2: if c > int1$122# goto 54
3: £temporary1010 = name + size
4: £field1008 -> £temporary1010 = *£temporary1010
5: £field1008 -> £temporary1010 = c
6: £temporary1011 = size + int2$1#
7: £temporary1014 = name + £temporary1011
8: £field1012 -> £temporary1014 = *£temporary1014
9: £field1012 -> £temporary1014 = int1$0#
10: call header integral zero 0 stack zero 0
11: parameter name, offset 19
12: call function noellipse-noellipse fileexists
13: post call
14: £temporary1015 = return_value
15: if £temporary1015 != int2$0# goto 41
16: case status == int2$0# goto 20
17: case status == int2$1# goto 21
18: case end status
19: goto 41
20: return name
21: call header integral zero 0 stack zero 0
22: parameter name, offset 19
23: call function noellipse-noellipse existsTempName
24: post call
25: £temporary1018 = return_value
26: if £temporary1018 != int2$0# goto 41
27: call header integral zero 0 stack zero 0
28: £temporary1022 = g_tempSize * Array_4#
29: £temporary1023 = g_tempArray + £temporary1022
30: £field1021 -> £temporary1023 = *£temporary1023
31: parameter £field1021 -> £temporary1023, offset 19
32: parameter name, offset 21
33: call function noellipse-noellipse strcpy
34: post call
35: £temporary1025 = g_tempSize
36: g_tempSize = g_tempSize + int2$1#
37: £temporary1027 = £temporary1025 * Array_4#
38: £temporary1028 = g_tempArray + £temporary1027
39: £field1026 -> £temporary1028 = *£temporary1028
40: return £field1026 -> £temporary1028
41: call header integral zero 0 stack zero 0
42: parameter name, offset 19
43: £temporary1029 = size + int2$1#
44: parameter £temporary1029, offset 21
45: parameter status, offset 23
46: call function noellipse-noellipse generateTempName
47: post call
48: £temporary1030 = return_value
49: result = £temporary1030
50: if result == int2$0# goto 52
51: return result
52: c = c + int1$1#
53: goto 2
54: return int2$0#
55: function end generateTempName
