0: if size >= int2$5# goto 54
1: c = int1$97#
2: if c > int1$122# goto 54
3: £temporary1022 = name + size
4: £field1020 -> £temporary1022 = *£temporary1022
5: £field1020 -> £temporary1022 = c
6: £temporary1023 = size + int2$1#
7: £temporary1026 = name + £temporary1023
8: £field1024 -> £temporary1026 = *£temporary1026
9: £field1024 -> £temporary1026 = int1$0#
10: call header integral zero 0 stack zero 0
11: parameter name, offset 19
12: call function noellipse-noellipse fileexists
13: post call
14: £temporary1027 = return_value
15: if £temporary1027 != int2$0# goto 41
16: case status == int2$0# goto 20
17: case status == int2$1# goto 21
18: case end status
19: goto 41
20: return name
21: call header integral zero 0 stack zero 0
22: parameter name, offset 19
23: call function noellipse-noellipse existsTempName
24: post call
25: £temporary1030 = return_value
26: if £temporary1030 != int2$0# goto 41
27: call header integral zero 0 stack zero 0
28: £temporary1034 = g_tempSize * Array_4#
29: £temporary1035 = g_tempArray + £temporary1034
30: £field1033 -> £temporary1035 = *£temporary1035
31: parameter £field1033 -> £temporary1035, offset 19
32: parameter name, offset 21
33: call function noellipse-noellipse strcpy
34: post call
35: £temporary1037 = g_tempSize
36: g_tempSize = g_tempSize + int2$1#
37: £temporary1039 = £temporary1037 * Array_4#
38: £temporary1040 = g_tempArray + £temporary1039
39: £field1038 -> £temporary1040 = *£temporary1040
40: return £field1038 -> £temporary1040
41: call header integral zero 0 stack zero 0
42: parameter name, offset 19
43: £temporary1041 = size + int2$1#
44: parameter £temporary1041, offset 21
45: parameter status, offset 23
46: call function noellipse-noellipse generateTempName
47: post call
48: £temporary1042 = return_value
49: result = £temporary1042
50: if result == int2$0# goto 52
51: return result
52: c = c + int1$1#
53: goto 2
54: return int2$0#
55: function end generateTempName
