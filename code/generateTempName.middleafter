0: if size >= int2$5# goto 57
1: c = int1$97#
2: if c > int1$122# goto 57
3: £temporary1244 = name + size
4: £field1242 -> £temporary1244 = *£temporary1244
5: £field1242 -> £temporary1244 = c
6: £temporary1245 = size + int2$1#
7: £temporary1248 = name + £temporary1245
8: £field1246 -> £temporary1248 = *£temporary1248
9: £field1246 -> £temporary1248 = int1$0#
10: call header integral zero 0 stack zero 0
11: parameter name, offset 19
12: call function noellipse-noellipse fileexists
13: post call
14: £temporary1249 = return_value
15: if £temporary1249 != int2$0# goto 43
16: case status == int2$0# goto 20
17: case status == int2$1# goto 22
18: case end status
19: goto 43
20: return_value = name
21: return
22: call header integral zero 0 stack zero 0
23: parameter name, offset 19
24: call function noellipse-noellipse existsTempName
25: post call
26: £temporary1252 = return_value
27: if £temporary1252 != int2$0# goto 43
28: call header integral zero 0 stack zero 0
29: £temporary1256 = g_tempSize * Array_#
30: £temporary1257 = g_tempArray + £temporary1256
31: £field1255 -> £temporary1257 = *£temporary1257
32: parameter £field1255 -> £temporary1257, offset 19
33: parameter name, offset 21
34: call function noellipse-noellipse strcpy
35: post call
36: £temporary1259 = g_tempSize
37: ++g_tempSize
38: £temporary1261 = £temporary1259 * Array_#
39: £temporary1262 = g_tempArray + £temporary1261
40: £field1260 -> £temporary1262 = *£temporary1262
41: return_value = £field1260 -> £temporary1262
42: return
43: call header integral zero 0 stack zero 0
44: parameter name, offset 19
45: £temporary1263 = size + int2$1#
46: parameter £temporary1263, offset 21
47: parameter status, offset 23
48: call function noellipse-noellipse generateTempName
49: post call
50: £temporary1264 = return_value
51: result = £temporary1264
52: if result == int2$0# goto 55
53: return_value = result
54: return
55: ++c
56: goto 2
57: return_value = int2$0#
58: return
59: function end generateTempName
