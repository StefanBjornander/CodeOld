1:	

@1423$existsTempName:	; Assign index 0
2:		mov word [bp + 8], 0
4:	

@1423$existsTempName$1:	; SignedGreaterThanEqual 16 index g_tempSize
5:		mov a767, [@1422$g_tempSize]
6:		cmp [bp + 8], a767
7:		jge @1423$existsTempName$16
9:	

@1423$existsTempName$2:	; CallHeader 10 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
11:	

@1423$existsTempName$3:	; Parameter 10 name 6
12:		mov a768, [bp + 6]
13:		mov [bp + 16], a768
15:	

@1423$existsTempName$4:	; UnsignedMultiply £temporary1183 index 2
16:		mov a769, [bp + 8]
18:		xor dx, dx
19:		mul word [int2$2#]
25:	

@1423$existsTempName$5:	; BinaryAdd £temporary1184 g_tempArray £temporary1183
26:		mov a773, @1421$g_tempArray
27:		add a773, t772
29:	

@1423$existsTempName$6:	; Deref £temporary1182 -> £temporary1184 £temporary1184 0
31:	

@1423$existsTempName$7:	; Parameter 10 £temporary1182 -> £temporary1184 8
32:		mov t774, [a773]
33:		mov [bp + 18], t774
35:	

@1423$existsTempName$8:	; Call 10 strcmp 0
36:		mov word [bp + 10], @1423$existsTempName$9
37:		mov [bp + 12], bp
38:		add bp, 10
39:		jmp strcmp
41:	

@1423$existsTempName$9:	; PostCall 10
43:	

@1423$existsTempName$10:	; GetReturnValue £temporary1185
48:	

@1423$existsTempName$11:	; NotEqual 14 £temporary1185 0
49:		cmp t776, 0
50:		jne @1423$existsTempName$14
52:	

@1423$existsTempName$12:	; SetReturnValue 1
53:		mov a777, 1
55:	

@1423$existsTempName$13:	; Return 1
56:		mov t778, [bp]
57:		mov di, [bp + 4]
58:		mov bp, [bp + 2]
59:		jmp t778
61:	

@1423$existsTempName$14:	; Increment index
62:		inc word [bp + 8]
64:	

@1423$existsTempName$15:	; Goto 1
65:		jmp @1423$existsTempName$1
67:	

@1423$existsTempName$16:	; SetReturnValue 0
68:		mov a779, 0
70:	

@1423$existsTempName$17:	; Return 0
71:		mov t780, [bp]
72:		mov di, [bp + 4]
73:		mov bp, [bp + 2]
74:		jmp t780
76:	

@1423$existsTempName$18:	; FunctionEnd existsTempName
1:	

@1434$generateTempName:	; SignedGreaterThanEqual 36 size 3
2:		cmp word [bp + 8], 3
3:		jge @1434$generateTempName$36
5:	

@1434$generateTempName$1:	; Assign c 97
6:		mov byte [bp + 12], 97
8:	

@1434$generateTempName$2:	; SignedGreaterThan 36 c 122
9:		cmp byte [bp + 12], 122
10:		jg @1434$generateTempName$36
12:	

@1434$generateTempName$3:	; BinaryAdd £temporary1193 name size
13:		mov a781, [bp + 6]
14:		add a781, [bp + 8]
16:	

@1434$generateTempName$4:	; Deref £temporary1192 -> £temporary1193 £temporary1193 0
18:	

@1434$generateTempName$5:	; Assign £temporary1192 -> £temporary1193 c
19:		mov a782, [bp + 12]
20:		mov [a781], a782
22:	

@1434$generateTempName$6:	; BinaryAdd £temporary1194 size 1
23:		mov a783, [bp + 8]
24:		add a783, 1
26:	

@1434$generateTempName$7:	; BinaryAdd £temporary1196 name £temporary1194
27:		mov a784, [bp + 6]
28:		add a784, a783
30:	

@1434$generateTempName$8:	; Deref £temporary1195 -> £temporary1196 £temporary1196 0
32:	

@1434$generateTempName$9:	; Assign £temporary1195 -> £temporary1196 0
33:		mov byte [a784], 0
35:	

@1434$generateTempName$10:	; CallHeader 13 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
37:	

@1434$generateTempName$11:	; Parameter 13 name 6
38:		mov a785, [bp + 6]
39:		mov [bp + 19], a785
41:	

@1434$generateTempName$12:	; Call 13 fileexists 0
42:		mov word [bp + 13], @1434$generateTempName$13
43:		mov [bp + 15], bp
44:		add bp, 13
45:		jmp fileexists
47:	

@1434$generateTempName$13:	; PostCall 13
49:	

@1434$generateTempName$14:	; GetReturnValue £temporary1197
54:	

@1434$generateTempName$15:	; NotEqual 22 £temporary1197 0
55:		cmp t787, 0
56:		jne @1434$generateTempName$22
58:	

@1434$generateTempName$16:	; Case 20 status 0
59:		mov a788, [bp + 10]
60:		cmp a788, 0
61:		je @1434$generateTempName$20
63:	

@1434$generateTempName$17:	; Case 22 status 1
64:		cmp a788, 1
65:		je @1434$generateTempName$22
67:	

@1434$generateTempName$18:	; CaseEnd status
69:	

@1434$generateTempName$19:	; Goto 22
70:		jmp @1434$generateTempName$22
72:	

@1434$generateTempName$20:	; SetReturnValue name
73:		mov a789, [bp + 6]
75:	

@1434$generateTempName$21:	; Return name
76:		mov t790, [bp]
77:		mov di, [bp + 4]
78:		mov bp, [bp + 2]
79:		jmp t790
81:	

@1434$generateTempName$22:	; CallHeader 13 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
83:	

@1434$generateTempName$23:	; Parameter 13 name 6
84:		mov a791, [bp + 6]
85:		mov [bp + 19], a791
87:	

@1434$generateTempName$24:	; BinaryAdd £temporary1200 size 1
88:		mov a792, [bp + 8]
89:		add a792, 1
91:	

@1434$generateTempName$25:	; Parameter 13 £temporary1200 8
92:		mov [bp + 21], a792
94:	

@1434$generateTempName$26:	; Parameter 13 status 10
95:		mov a793, [bp + 10]
96:		mov [bp + 23], a793
98:	

@1434$generateTempName$27:	; Call 13 generateTempName 0
99:		mov word [bp + 13], @1434$generateTempName$28
100:		mov [bp + 15], bp
101:		add bp, 13
102:		jmp @1434$generateTempName
104:	

@1434$generateTempName$28:	; PostCall 13
106:	

@1434$generateTempName$29:	; GetReturnValue £temporary1201
111:	

@1434$generateTempName$30:	; Assign result £temporary1201
112:		mov [bp + 13], t795
114:	

@1434$generateTempName$31:	; Equal 34 result 0
115:		cmp word [bp + 13], 0
116:		je @1434$generateTempName$34
118:	

@1434$generateTempName$32:	; SetReturnValue result
119:		mov a796, [bp + 13]
121:	

@1434$generateTempName$33:	; Return result
122:		mov t797, [bp]
123:		mov di, [bp + 4]
124:		mov bp, [bp + 2]
125:		jmp t797
127:	

@1434$generateTempName$34:	; Increment c
128:		inc byte [bp + 12]
130:	

@1434$generateTempName$35:	; Goto 2
131:		jmp @1434$generateTempName$2
133:	

@1434$generateTempName$36:	; SetReturnValue 0
134:		mov a798, 0
136:	

@1434$generateTempName$37:	; Return 0
137:		mov t799, [bp]
138:		mov di, [bp + 4]
139:		mov bp, [bp + 2]
140:		jmp t799
142:	

@1434$generateTempName$38:	; FunctionEnd generateTempName
1:	

tmpfile:	; CallHeader 12 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
3:	

tmpfile$1:	; Parameter 12 name 6
4:		mov [bp + 18], bp
5:		add word [bp + 18], 8
7:	

tmpfile$2:	; Parameter 12 0 8
8:		mov word [bp + 20], 0
10:	

tmpfile$3:	; Parameter 12 0 10
11:		mov word [bp + 22], 0
13:	

tmpfile$4:	; Call 12 generateTempName 0
14:		mov word [bp + 12], tmpfile$5
15:		mov [bp + 14], bp
16:		add bp, 12
17:		jmp @1434$generateTempName
19:	

tmpfile$5:	; PostCall 12
21:	

tmpfile$6:	; GetReturnValue £temporary1207
26:	

tmpfile$7:	; Equal 20 £temporary1207 0
27:		cmp t801, 0
28:		je tmpfile$20
30:	

tmpfile$8:	; CallHeader 12 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
32:	

tmpfile$9:	; Parameter 12 name 6
33:		mov [bp + 18], bp
34:		add word [bp + 18], 8
36:	

tmpfile$10:	; Parameter 12 string_w# 8
37:		mov word [bp + 20], string_w#
39:	

tmpfile$11:	; Call 12 fopen 0
40:		mov word [bp + 12], tmpfile$12
41:		mov [bp + 14], bp
42:		add bp, 12
43:		jmp fopen
45:	

tmpfile$12:	; PostCall 12
47:	

tmpfile$13:	; GetReturnValue £temporary1208
52:	

tmpfile$14:	; Assign stream £temporary1208
53:		mov [bp + 6], t803
55:	

tmpfile$15:	; Equal 20 stream 0
56:		cmp word [bp + 6], 0
57:		je tmpfile$20
59:	

tmpfile$16:	; Deref £temporary1212 -> stream stream 27
60:		mov a804, [bp + 6]
62:	

tmpfile$17:	; Assign £temporary1212 -> stream 1
63:		mov word [a804 + 27], 1
65:	

tmpfile$18:	; SetReturnValue stream
66:		mov a805, [bp + 6]
68:	

tmpfile$19:	; Return stream
69:		mov t806, [bp]
70:		mov di, [bp + 4]
71:		mov bp, [bp + 2]
72:		jmp t806
74:	

tmpfile$20:	; SetReturnValue 0
75:		mov a807, 0
77:	

tmpfile$21:	; Return 0
78:		mov t808, [bp]
79:		mov di, [bp + 4]
80:		mov bp, [bp + 2]
81:		jmp t808
83:	

tmpfile$22:	; FunctionEnd tmpfile
1:	

tmpnam:	; SignedGreaterThanEqual 10 g_tempSize 16
2:		cmp word [@1422$g_tempSize], 16
3:		jge tmpnam$10
5:	

tmpnam$1:	; CallHeader 8 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
7:	

tmpnam$2:	; Parameter 8 name 6
8:		mov a809, [bp + 6]
9:		mov [bp + 14], a809
11:	

tmpnam$3:	; Parameter 8 0 8
12:		mov word [bp + 16], 0
14:	

tmpnam$4:	; Parameter 8 1 10
15:		mov word [bp + 18], 1
17:	

tmpnam$5:	; Call 8 generateTempName 0
18:		mov word [bp + 8], tmpnam$6
19:		mov [bp + 10], bp
20:		add bp, 8
21:		jmp @1434$generateTempName
23:	

tmpnam$6:	; PostCall 8
25:	

tmpnam$7:	; GetReturnValue £temporary1219
30:	

tmpnam$8:	; SetReturnValue £temporary1219
32:	

tmpnam$9:	; Return £temporary1219
33:		mov t812, [bp]
34:		mov di, [bp + 4]
35:		mov bp, [bp + 2]
36:		jmp t812
38:	

tmpnam$10:	; SetReturnValue 0
39:		mov a813, 0
41:	

tmpnam$11:	; Return 0
42:		mov t814, [bp]
43:		mov di, [bp + 4]
44:		mov bp, [bp + 2]
45:		jmp t814
47:	

tmpnam$12:	; FunctionEnd tmpnam
