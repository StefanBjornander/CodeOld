1:	

setlocale:	; Equal 4 g_currStructPtr 0
2:		cmp word [@640$g_currStructPtr], 0
3:		je setlocale$4
5:	

setlocale$1:	; Deref £temporary498 -> g_currStructPtr g_currStructPtr 0
6:		mov a320, [@640$g_currStructPtr]
8:	

setlocale$2:	; Assign £temporary502 £temporary498 -> g_currStructPtr
9:		mov t321, [a320]
11:	

setlocale$3:	; Goto 5
12:		jmp setlocale$5
14:	

setlocale$4:	; Assign £temporary502 0
15:		mov t322, 0
17:	

setlocale$5:	; Assign oldName £temporary502
18:		mov [bp + 12], t322
20:	

setlocale$6:	; Assign g_currStructPtr 0
21:		mov word [@640$g_currStructPtr], 0
23:	

setlocale$7:	; Equal 28 newName 0
24:		cmp word [bp + 8], 0
25:		je setlocale$28
27:	

setlocale$8:	; Assign index 0
28:		mov word [bp + 10], 0
30:	

setlocale$9:	; SignedGreaterThanEqual 28 index sSize
31:		mov a323, [@639$sSize]
32:		cmp [bp + 10], a323
33:		jge setlocale$28
35:	

setlocale$10:	; CallHeader 14 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
37:	

setlocale$11:	; Parameter 14 newName 6
38:		mov a324, [bp + 8]
39:		mov [bp + 20], a324
41:	

setlocale$12:	; UnsignedMultiply £temporary507 index 4
42:		mov a325, [bp + 10]
44:		xor dx, dx
45:		mul word [int2$4#]
51:	

setlocale$13:	; BinaryAdd £temporary508 sArray £temporary507
52:		mov a329, @638$sArray
53:		add a329, t328
55:	

setlocale$14:	; Deref £temporary506 -> £temporary508 £temporary508 0
57:	

setlocale$15:	; Parameter 14 £temporary506.name$0 -> £temporary508 8
58:		mov t330, [a329]
59:		mov [bp + 22], t330
61:	

setlocale$16:	; Call 14 strcmp 0
62:		mov word [bp + 14], setlocale$17
63:		mov [bp + 16], bp
64:		add bp, 14
65:		jmp strcmp
67:	

setlocale$17:	; PostCall 14
69:	

setlocale$18:	; GetReturnValue £temporary509
74:	

setlocale$19:	; NotEqual 26 £temporary509 0
75:		cmp t332, 0
76:		jne setlocale$26
78:	

setlocale$20:	; UnsignedMultiply £temporary512 index 4
79:		mov a333, [bp + 10]
81:		xor dx, dx
82:		mul word [int2$4#]
88:	

setlocale$21:	; BinaryAdd £temporary513 sArray £temporary512
89:		mov a337, @638$sArray
90:		add a337, t336
92:	

setlocale$22:	; Deref £temporary511 -> £temporary513 £temporary513 0
94:	

setlocale$23:	; address £temporary514 £temporary511 -> £temporary513
96:	

setlocale$24:	; Assign g_currStructPtr £temporary514
97:		mov [@640$g_currStructPtr], a337
99:	

setlocale$25:	; Goto 28
100:		jmp setlocale$28
102:	

setlocale$26:	; Increment index
103:		inc word [bp + 10]
105:	

setlocale$27:	; Goto 9
106:		jmp setlocale$9
108:	

setlocale$28:	; SetReturnValue oldName
109:		mov a338, [bp + 12]
111:	

setlocale$29:	; Return oldName
112:		mov t339, [bp]
113:		mov di, [bp + 4]
114:		mov bp, [bp + 2]
115:		jmp t339
117:	

setlocale$30:	; FunctionEnd setlocale
1:	

localeconv:	; Equal 4 g_currStructPtr 0
2:		cmp word [@640$g_currStructPtr], 0
3:		je localeconv$4
5:	

localeconv$1:	; Deref £temporary518 -> g_currStructPtr g_currStructPtr 2
6:		mov a340, [@640$g_currStructPtr]
8:	

localeconv$2:	; Assign £temporary522 £temporary518 -> g_currStructPtr
9:		mov t341, [a340 + 2]
11:	

localeconv$3:	; Goto 5
12:		jmp localeconv$5
14:	

localeconv$4:	; Assign £temporary522 0
15:		mov t342, 0
17:	

localeconv$5:	; SetReturnValue £temporary522
19:	

localeconv$6:	; Return £temporary522
20:		mov t343, [bp]
21:		mov di, [bp + 4]
22:		mov bp, [bp + 2]
23:		jmp t343
25:	

localeconv$7:	; FunctionEnd localeconv
